Attribute VB_Name = "Baseline_Selector"
Attribute VB_Base = "0{9E5EADDE-128D-4FCB-B296-673AD62890D9}{E0954B8F-B375-4F75-9C37-54A85CA2B2FA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub BASELINE_COMBOBOX_Change()

End Sub

Private Sub BASELINE_CONFIRM_Click()
  Dim SOURCE_SHEET As Worksheet
  Set SOURCE_SHEET = ThisWorkbook.Worksheets(2)
  
  With SOURCE_SHEET
    
    .Cells(1, 6).Value = Me.BASELINE_COMBOBOX.Value
    .Cells(1, 7).Value = Me.BASELINE_MONTH.Value
    .Cells(1, 8).Value = Me.BASELINE_YEAR.Value
    .Cells(1, 10).Value = Me.CURRENT_BASELINE_CHECKBOX.Value
  End With
  
  Unload Me
End Sub

Private Sub CheckBox1_Click()

End Sub

Private Sub Cancel_Baseline_Selector_Click()
Unload Me
Exit Sub

End Sub

Private Sub Label2_Click()

End Sub

Private Sub UserForm_Click()

End Sub

Private Sub UserForm_Initialize()

Dim YearValue As Integer
Dim ErrorName As String
Dim ErrorMonth As String
Dim ErrorYear As String
Dim ErrorCheck As Boolean

Dim SOURCE_SHEET As Worksheet
Set SOURCE_SHEET = ThisWorkbook.Worksheets(2)

ErrorName = SOURCE_SHEET.Cells(1, 6).Value
ErrorMonth = SOURCE_SHEET.Cells(1, 7).Value
ErrorYear = SOURCE_SHEET.Cells(1, 8).Value
ErrorCheck = SOURCE_SHEET.Cells(1, 10).Value
YearValue = Year(Date)

BASELINE_COMBOBOX.AddItem "(Select Work Order Name)"
BASELINE_COMBOBOX.AddItem "Pre Work Order Baseline"
BASELINE_COMBOBOX.AddItem "Work Order Baseline 0"
BASELINE_COMBOBOX.AddItem "Work Order Baseline 1"
BASELINE_COMBOBOX.AddItem "Work Order Baseline 2"
BASELINE_COMBOBOX.AddItem "Work Order Baseline 3"
BASELINE_COMBOBOX.AddItem "Work Order Baseline 4"
BASELINE_COMBOBOX.AddItem "Work Order Baseline 5"
BASELINE_COMBOBOX.AddItem "Work Order Baseline 6"
BASELINE_COMBOBOX.AddItem "Work Order Baseline 7"
BASELINE_COMBOBOX.AddItem "Work Order Baseline 8"

BASELINE_MONTH.AddItem "(Select Month)"
BASELINE_MONTH.AddItem "Jan"
BASELINE_MONTH.AddItem "Feb"
BASELINE_MONTH.AddItem "Mar"
BASELINE_MONTH.AddItem "Apr"
BASELINE_MONTH.AddItem "May"
BASELINE_MONTH.AddItem "Jun"
BASELINE_MONTH.AddItem "Jul"
BASELINE_MONTH.AddItem "Aug"
BASELINE_MONTH.AddItem "Sep"
BASELINE_MONTH.AddItem "Oct"
BASELINE_MONTH.AddItem "Nov"
BASELINE_MONTH.AddItem "Dec"

BASELINE_YEAR.AddItem "(Select Year)"
BASELINE_YEAR.AddItem YearValue
BASELINE_YEAR.AddItem YearValue - 1
BASELINE_YEAR.AddItem YearValue - 2
BASELINE_YEAR.AddItem YearValue - 3
BASELINE_YEAR.AddItem YearValue - 4
BASELINE_YEAR.AddItem YearValue - 5

If ErrorName = "" Then
BASELINE_COMBOBOX.Value = "(Select Work Order Name)"
Else
BASELINE_COMBOBOX.Value = ErrorName
End If

If ErrorMonth = "" Then
BASELINE_MONTH.Value = "(Select Month)"
Else
BASELINE_MONTH.Value = ErrorMonth
End If

If ErrorYear = "" Then
BASELINE_YEAR.Value = "(Select Year)"
Else
BASELINE_YEAR.Value = ErrorYear
End If

If ErrorName = "" Then
'do nothing
ElseIf ErrorCheck = False Then
CURRENT_BASELINE_CHECKBOX.Value = False
Else
CURRENT_BASELINE_CHECKBOX.Value = True
End If

End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If CloseMode = 0 Then '========== ' don't close form here
  Cancel = True ' do what the Cancel button does
  Cancel_Baseline_Selector_Click ' presumably the Cancel button also closes the form '==========
End If
End Sub
Attribute VB_Name = "Import_Wizard_GenI_GenII"
Option Explicit
Sub ShowDialogImport()
    ProgressBarImport.LabelProgress.Width = 0
    ProgressBarImport.Show
End Sub
Sub GenOneToGenTwo()

BeginImport:
Dim FILE_PATH As Variant
Dim PATH_SEP As Variant
Dim FILE_NAME As String
Dim FILENAME_LENGTH As Variant
Dim i As Variant

Dim FIELDS_LIST_ROW As ListRow
Dim SOURCE_SHEET_LIST_ROW As ListRow
Dim SOURCE_FIELDS_ROW_COUNT As Long
Dim SOURCE_FIELDS_ROW As Range
Dim SOURCE_FIELDS_SEARCH_RANGE As Range
Dim SOURCE_FIELDS_QUALITY_RANGE As Range
Dim SOURCE_SHEET_NAME As String
Dim SOURCE_COLUMN_NAME As String
Dim SOURCE_DATA_RANGE As Range
Dim SOURCE_DATA_LAST_ROW As Long
Dim FIELD_MATCH_COUNT As Long
Dim FIELD_TOTAL_COUNT As Long
Dim SOURCE_BOOK As Workbook
Dim SOURCE_SHEET As Worksheet
Dim EXCEPTION_SHEET As Worksheet
Dim EXPECTED_DATA_TYPE As String
Dim DESTINATION_SHEET As Worksheet
Dim BASELINE_VERTICAL_SHEET As Worksheet
Dim BASELINE_VERTICAL As ListObject
Dim SITE_ACTIVATION_SHEET As Worksheet
Dim PATIENT_ENROLLMENT_SHEET As Worksheet
Dim WORK_ORDER As String
Dim WORK_ORDER_DATE As Date
Dim NAMED_WORK_ORDER_SELECTOR As Variant
Dim DATE_STAMP As Date
Dim ANSWER As Integer
Dim CURRENT_BASELINE_CHECK As String
Dim WORK_ORDER_MONTH As String
Dim WORK_ORDER_YEAR As String
Dim CURRENT_SHEET As Worksheet
Dim GEN_II_BOOK As Workbook


Set GEN_II_BOOK = ThisWorkbook
GEN_II_BOOK.Activate

Set SITE_ACTIVATION_SHEET = GEN_II_BOOK.Worksheets("Site Activation")
Set BASELINE_VERTICAL_SHEET = GEN_II_BOOK.Worksheets("Projection_History")
Set PATIENT_ENROLLMENT_SHEET = GEN_II_BOOK.Worksheets("Patient Enrollment-1")
Set BASELINE_VERTICAL = GEN_II_BOOK.Worksheets("Projection_History").ListObjects("Projection_History")

Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True

DATE_STAMP = Now

    'Prompt user to open source file, check to make sure data fields are present.
    'MsgBox ("Please select the PSAET file you would like to import.")
    'Open the file dialog
    


Dim myInputBoxVariable As String
    myInputBoxVariable = Application.InputBox("Please Enter Project ID")
    
Dim myURL As String
myURL = "http://phc-prdltid01.corp.incresearch.com:9763/enrollment/download/" & myInputBoxVariable & ""

Dim WinHttpReq As Object, oStream As Object, Filename As String
Set WinHttpReq = CreateObject("Microsoft.XMLHTTP")
WinHttpReq.Open "GET", myURL, False
WinHttpReq.send

myURL = WinHttpReq.ResponseBody
If WinHttpReq.Status = 200 Then
    Set oStream = CreateObject("ADODB.Stream")
    oStream.Open
    oStream.Type = 1
    oStream.Write WinHttpReq.ResponseBody
    Filename = WinHttpReq.getResponseHeader("Content-disposition")
    Filename = Right(Filename, Len(Filename) - InStr(Filename, "="))
    oStream.SaveToFile "C:\Temp\" & Filename, 2 ' 1 = no overwrite, 2 = overwrite
    oStream.Close
    FILE_PATH = "C:\Temp\" & Filename & ""
Else

    With Application.FileDialog(msoFileDialogOpen)
        .InitialFileName = "Libraries\Documents"
        .AllowMultiSelect = False
        '.Show
        If .Show = 0 Then
          MsgBox ("Either no file was named or process was cancelled. Nothing will be imported at this time.")
          Unload ProgressBarImport
          Exit Sub
          End If
        FILE_PATH = .SelectedItems(1)
        End With
        End If
    
    'Find the file name
    PATH_SEP = Application.PathSeparator
    FILENAME_LENGTH = Len(FILE_PATH)
    For i = FILENAME_LENGTH To 1 Step -1
        If Mid(FILE_PATH, i, 1) = PATH_SEP Then Exit For
        FILE_NAME = Right(FILE_PATH, FILENAME_LENGTH - i + 1)
    Next i
    If FILE_NAME = "" Or FILE_PATH = False Then
        MsgBox ("Either no file was named or process was canceled. Nothing will be imported at this time.")
        Unload ProgressBarImport
        Exit Sub
    End If
    On Error GoTo ActionCancelled
    Set SOURCE_BOOK = Workbooks.Open(FILE_PATH)
    'Check #1 for valid source file - does the specified worksheet name(s) exist?
    Set SOURCE_SHEET = SOURCE_BOOK.Worksheets(1)
    SOURCE_SHEET_NAME = "Site Activation"
    
    If Worksheets(2).Name <> SOURCE_SHEET_NAME Then
        MsgBox ("We couldn't find a worksheet called " & SOURCE_SHEET_NAME & " in this source file. Nothing can be imported at this time.")
        Unload ProgressBarImport
        Exit Sub
    End If
    
    NAMED_WORK_ORDER_SELECTOR = MsgBox("Does this PSAET contain a named work order?", vbYesNo)
    
Application.ScreenUpdating = False

NAMED_WORK_ORDER_ERROR:
    If NAMED_WORK_ORDER_SELECTOR = vbYes Then
    'Load Baseline_Selector
      Baseline_Selector.Show vbModal
      WORK_ORDER = GEN_II_BOOK.Worksheets(2).Cells(1, 6).Value
      WORK_ORDER_MONTH = GEN_II_BOOK.Worksheets(2).Cells(1, 7).Value
      WORK_ORDER_YEAR = GEN_II_BOOK.Worksheets(2).Cells(1, 8).Value
      
    'Error handling of work order details.
        If WORK_ORDER = "(Select Work Order Name)" Then
DATE_ERROR:
            'MsgBox ("Invalid Entry - Select a Work Order Name")
            WORK_ORDER_INFO_ERROR.Show vbModal
            WORK_ORDER_DECISION = GEN_II_BOOK.Worksheets(2).Cells(1, 11).Value
            'GoTo Work_Order_Error
            If WORK_ORDER_DECISION = "AddWorkOrder" Then
                'Circle back to enter work order information
                GoTo NAMED_WORK_ORDER_ERROR
            ElseIf WORK_ORDER_DECISION = "ArchiveProjection" Then
                'Log as a Projection and proceed to Trasponse macro
                WORK_ORDER = ""
                WORK_ORDER_DATE = Empty
                GoTo ArchiveProjection
            ElseIf WORK_ORDER_DECISION = "Cancel" Then
                'Cancel and exit wizard without uploading and logging baseline
ActionCancelled:
                MsgBox "Action Cancelled; File did not import."
                GEN_II_BOOK.Worksheets(2).Range("F1:K1").Value = ""
                GEN_II_BOOK.Worksheets(2).Activate
'                SITE_ACTIVATION_SHEET.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
'                PATIENT_ENROLLMENT_SHEET.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
'                BASELINE_VERTICAL_SHEET.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
                SOURCE_BOOK.Close (False)
                Unload ProgressBarImport
                Exit Sub
            End If
        ElseIf WORK_ORDER_MONTH = "(Select Month)" Then
            MsgBox ("Select a Month for the Work Order Date from the dropdown")
            GoTo NAMED_WORK_ORDER_ERROR
        ElseIf WORK_ORDER_YEAR = "(Select Year)" Then
            MsgBox ("Invalid Entry - Select a Year for the Work Order Date")
            GoTo NAMED_WORK_ORDER_ERROR
        Else 'do nothing
        End If
      
      On Error GoTo DATE_ERROR
      GEN_II_BOOK.Worksheets(2).Range("I1").FormulaR1C1 = "=DATEVALUE(""1-""&RC[-2]&""-""&RC[-1])" 'Wrap in an iferror(0) or something
      
      WORK_ORDER_DATE = GEN_II_BOOK.Worksheets(2).Cells(1, 9).Value
      CURRENT_BASELINE_CHECK = GEN_II_BOOK.Worksheets(2).Cells(1, 10).Value
      GEN_II_BOOK.Worksheets(2).Range("F1:K1").Value = ""
      If CURRENT_BASELINE_CHECK = True Then
            'MsgBox "Checkbox has been Checked",
            GEN_II_BOOK.Worksheets(2).Range("K5").Value = WORK_ORDER
            GEN_II_BOOK.Worksheets(2).Range("K7").Value = WORK_ORDER_DATE
            Else
            'MsgBox "Checkbox is UnChecked",
      End If
    Else
ArchiveProjection:
      GEN_II_BOOK.Worksheets(2).Range("F1:K1").Value = ""
      SITE_ACTIVATION_SHEET.Cells(3, 11).Value = SITE_ACTIVATION_SHEET.Cells(3, 11).Value + 1
      WORK_ORDER = "Archived Projection" & (SITE_ACTIVATION_SHEET.Cells(3, 11).Value)
      WORK_ORDER_DATE = Date
    End If
    
    BASELINE_VERTICAL_SHEET.Unprotect
    
'   Update progress bar
    With ProgressBarImport
        .FrameProgress.Caption = "5%"
        .LabelProgress.Width = 10
    End With
'   The DoEvents statement is responsible for the form updating
    DoEvents
    
    For Each CURRENT_SHEET In SOURCE_BOOK.Worksheets
        CURRENT_SHEET.Visible = xlSheetVisible
        CURRENT_SHEET.Unprotect
        CURRENT_SHEET.Activate
        If CURRENT_SHEET.Name = "Site Activation" Then
          GEN_II_BOOK.Worksheets("Site Activation").Unprotect
          GEN_II_BOOK.Worksheets("Site Activation").Range("E10").Value = CURRENT_SHEET.Range("E10").Value
          GEN_II_BOOK.Worksheets("Site Activation").Range("E14:EF15").Value = CURRENT_SHEET.Range("E14:EF15").Value
          GEN_II_BOOK.Worksheets("Site Activation").Range("E12:EF12").Value = CURRENT_SHEET.Range("E12:EF12").Value
          GEN_II_BOOK.Worksheets("Site Activation").Range("C1:C7").Value = CURRENT_SHEET.Range("C1:C7").Value
          GEN_II_BOOK.Worksheets("Site Activation").Range("C14:D14").Value = CURRENT_SHEET.Range("C14:D14").Value
          GEN_II_BOOK.Worksheets("Site Activation").Range("B18:C117").Value = CURRENT_SHEET.Range("B18:C117").Value
          GEN_II_BOOK.Worksheets("Site Activation").Range("E18:EF117").Value = CURRENT_SHEET.Range("E18:EF117").Value
        
          Call Transpose_Values(GEN_II_BOOK, SITE_ACTIVATION_SHEET, BASELINE_VERTICAL_SHEET, BASELINE_VERTICAL, WORK_ORDER, WORK_ORDER_DATE, DATE_STAMP)
        
        End If
        
        If CURRENT_SHEET.Name = "Patient Enrollment-1" Then
          GEN_II_BOOK.Worksheets("Patient Enrollment-1").Unprotect
          GEN_II_BOOK.Worksheets("Patient Enrollment-1").Range("C2").Value = CURRENT_SHEET.Range("C2").Value
          GEN_II_BOOK.Worksheets("Patient Enrollment-1").Calculate
          'On the patient sheet, if it is a named work order, we want to pull the current up to the original
          If NAMED_WORK_ORDER_SELECTOR = vbYes Then
            GEN_II_BOOK.Worksheets("Patient Enrollment-1").Range("F10:EG11").Value = CURRENT_SHEET.Range("F12:EG13").Value
          End If
          
          Call Transpose_Enrollment(GEN_II_BOOK, SITE_ACTIVATION_SHEET, BASELINE_VERTICAL_SHEET, BASELINE_VERTICAL, WORK_ORDER, WORK_ORDER_DATE, DATE_STAMP)
        
        End If
        
        If CURRENT_SHEET.Name = "Holidays" Then
        GEN_II_BOOK.Worksheets("Seasonality Adj").Unprotect
        GEN_II_BOOK.Worksheets("Seasonality Adj").Range("C8:N215").Value = CURRENT_SHEET.Range("C8:N215").Value
        
        
        End If
        
        If CURRENT_SHEET.Name = "Enrollment Actuals" Then
        GEN_II_BOOK.Worksheets("Enrollment Actuals").Unprotect
        GEN_II_BOOK.Worksheets("Enrollment Actuals").Range("F14:EG113").Value = CURRENT_SHEET.Range("F14:EG113").Value
        
        
        End If
        
        
    Next CURRENT_SHEET
    
     SOURCE_BOOK.Close (False)
     Application.ScreenUpdating = False
'Remove Zeros and Blanks from Baseline_Vertical Sheet
    BASELINE_VERTICAL_SHEET.Activate
    
    ActiveSheet.ListObjects("Projection_History").Range.AutoFilter Field:=9, _
        Criteria1:="=0", Operator:=xlOr, Criteria2:="="
    Range("A2").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.EntireRow.Delete
    ActiveSheet.ShowAllData
    BASELINE_VERTICAL_SHEET.Range("A2").Select
    SITE_ACTIVATION_SHEET.Select

GEN_II_BOOK.Worksheets("Site Activation").Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
GEN_II_BOOK.Worksheets("Patient Enrollment-1").Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
GEN_II_BOOK.Worksheets("Projection_History").Protect DrawingObjects:=True, Contents:=True, Scenarios:=True

     '   Update progress bar
    With ProgressBarImport
        .FrameProgress.Caption = "90%"
        .LabelProgress.Width = 180
    End With
'   The DoEvents statement is responsible for the form updating
    DoEvents
    
    
     ANSWER = MsgBox("Great! We transferred your project's data into the Gen II PSAET. Do you have another PSAET file that needs to be imported?", vbYesNo)
     If ANSWER = vbYes Then
     MsgBox ("Please save the file and your Gen II PSAET will be ready for use!")
     Dim GEN_II_SAVE_SHORT_NAME As String
     Dim GEN_II_SAVE_FULL_NAME As Variant
     GEN_II_SAVE_SHORT_NAME = CreateObject("Scripting.FileSystemObject").GetBaseName(FILE_NAME) & "_Gen_II"
     GEN_II_SAVE_FULL_NAME = Application.GetSaveAsFilename(InitialFileName:=GEN_II_SAVE_SHORT_NAME, _
     fileFilter:="Excel Binary Workbook (*.xlsb), *.xlsb")
     
     If GEN_II_SAVE_FULL_NAME <> "False" Then
       ActiveWorkbook.SaveAs GEN_II_SAVE_FULL_NAME, 50
     Else
         '   Update progress bar
        With ProgressBarImport
            .FrameProgress.Caption = "100%"
            .LabelProgress.Width = 200
        End With
        '   The DoEvents statement is responsible for the form updating
        DoEvents
       MsgBox ("Gen I to Gen II Process Completed, but 'Save As' operation was canceled. You can File -> Save As later, or re-run the process.")
     End If
     '   Update progress bar
            With ProgressBarImport
                .FrameProgress.Caption = "0%"
                .LabelProgress.Width = 0
            End With
        '   The DoEvents statement is responsible for the form updating
            DoEvents
           
            Call Upload_Wizard.Check_Entries
            
        GoTo BeginImport
     Else
     MsgBox ("Almost done! Next please save the file and your Gen II PSAET will be ready for use!")
     
     'Save the book as a Gen II book, suggesting a name from the original imported filename
     'but with _GEN_II added at the end. But ultimately user gets to pick name / location.

   
     GEN_II_SAVE_SHORT_NAME = CreateObject("Scripting.FileSystemObject").GetBaseName(FILE_NAME) & "_Gen_II"
     GEN_II_SAVE_FULL_NAME = Application.GetSaveAsFilename(InitialFileName:=GEN_II_SAVE_SHORT_NAME, _
     fileFilter:="Excel Binary Workbook (*.xlsb), *.xlsb")
     
     If GEN_II_SAVE_FULL_NAME <> "False" Then
       ActiveWorkbook.SaveAs GEN_II_SAVE_FULL_NAME, 50
     Else
         '   Update progress bar
        With ProgressBarImport
            .FrameProgress.Caption = "100%"
            .LabelProgress.Width = 200
        End With
        '   The DoEvents statement is responsible for the form updating
        DoEvents
       MsgBox ("Gen I to Gen II Process Completed, but 'Save As' operation was canceled. You can File -> Save As later, or re-run the process.")
     End If
     End If
     GEN_II_BOOK.Worksheets("Site Activation").Activate

    Unload ProgressBarImport
    
End Sub
    

Public Sub Transpose_Values(GEN_II_BOOK As Workbook, SITE_ACTIVATION_SHEET As Worksheet, BASELINE_VERTICAL_SHEET As Worksheet, BASELINE_VERTICAL As ListObject, WORK_ORDER As String, WORK_ORDER_DATE As Date, DATE_STAMP As Date)

    Dim TOTALROWS As Double, TOTALCOLUMNS As Double, LAST_ROW As Double
    'Dim TRANSPOSED_TABLE As Worksheet
    Dim WEEK_VALUE As Date
    Dim STARTING_YEAR As Date
    Dim ROW_RANGE As Range
    Dim x, y As Integer
    Dim COPY_RANGE As Range
    Dim PASTE_RANGE As Variant
    Dim TRANSPOSED_VARIANT As Variant
    Dim TRANSPOSED_RANGE As Range
    Dim PROJECT_CODE As String
    Dim SPONSOR As String
    Dim COUNTRY_NAME As String
    
    Set SITE_ACTIVATION_SHEET = GEN_II_BOOK.Worksheets("Site Activation")
    Set BASELINE_VERTICAL_SHEET = GEN_II_BOOK.Worksheets("Projection_History")
    
    Application.Calculation = xlCalculationManual
    Application.ScreenUpdating = False
    
    PROJECT_CODE = SITE_ACTIVATION_SHEET.Cells(1, 3).Value
    SPONSOR = SITE_ACTIVATION_SHEET.Cells(2, 3).Value
   
    'Update Progress Bar
    With ProgressBarImport
        .FrameProgress.Caption = "10%"
        .LabelProgress.Width = 20
    End With
    'The DoEvents statement is responsible for the form updating
    DoEvents
    
    'create transposed table structure
    With BASELINE_VERTICAL_SHEET
      LAST_ROW = .Range("A" & .Rows.Count).End(xlUp).Row
      If LAST_ROW = 2 Then
        If BASELINE_VERTICAL_SHEET.Cells(2, 9).Value > 0 Then
            'Do nothing
            Else
            LAST_ROW = 1
        End If
        'LAST_ROW = 1
      End If
    End With

'!!EXTRACT PROJECTION VALUES TO BASELINE_VERTICAL SHEET!!
    'SPONSOR
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("A" & LAST_ROW + 1 & ":A" & LAST_ROW + 132)
    TRANSPOSED_RANGE = SPONSOR
    'PROJECT CODE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("B" & LAST_ROW + 1 & ":B" & LAST_ROW + 132)
    TRANSPOSED_RANGE = PROJECT_CODE
    'REGION/COUNTRY
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("C" & LAST_ROW + 1 & ":C" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Global"
    'BASELINE TYPE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("D" & LAST_ROW + 1 & ":D" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Site Activation"
    'WORK ORDER
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("E" & LAST_ROW + 1 & ":E" & LAST_ROW + 132)
    TRANSPOSED_RANGE = WORK_ORDER
    'PROJECTION OR CUMULATIVE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("F" & LAST_ROW + 1 & ":F" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Projection"
    'WORK ORDER DATE (Baseline on DateStamp)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("G" & LAST_ROW + 1 & ":G" & LAST_ROW + 132)
    TRANSPOSED_RANGE = WORK_ORDER_DATE
    'MONTH/YEAR --> Copy Projection Dates from Site Activation
    Set COPY_RANGE = SITE_ACTIVATION_SHEET.Range("E11:EF11")
    PASTE_RANGE = COPY_RANGE.Value
    TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("H" & LAST_ROW + 1 & ":H" & LAST_ROW + 132)
    TRANSPOSED_RANGE = TRANSPOSED_VARIANT
    'SITE COUNT Values --> Copy Projection Values from Site Activation
    Set COPY_RANGE = SITE_ACTIVATION_SHEET.Range("E14:EF14")
    PASTE_RANGE = COPY_RANGE.Value
    TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("I" & LAST_ROW + 1 & ":I" & LAST_ROW + 132)
    TRANSPOSED_RANGE = TRANSPOSED_VARIANT
    'IMPORT/UPLOAD DATE & TIME STAMP
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("J" & LAST_ROW + 1 & ":J" & LAST_ROW + 132)
    TRANSPOSED_RANGE = DATE_STAMP
    
    With BASELINE_VERTICAL_SHEET
        LAST_ROW = .Range("A" & .Rows.Count).End(xlUp).Row
    End With
    
    'Update Progress Bar
    With ProgressBarImport
        .FrameProgress.Caption = "20%"
        .LabelProgress.Width = 40
    End With
    'The DoEvents statement is responsible for the form updating
    DoEvents
    
'!!EXTRACT CUMULATIVE VALUES TO BASELINE_VERTICAL SHEET!!
    'SPONSOR
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("A" & LAST_ROW + 1 & ":A" & LAST_ROW + 132)
    TRANSPOSED_RANGE = SPONSOR
    'PROJECT CODE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("B" & LAST_ROW + 1 & ":B" & LAST_ROW + 132)
    TRANSPOSED_RANGE = PROJECT_CODE
    'REGION/COUNTRY
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("C" & LAST_ROW + 1 & ":C" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Global"
    'BASELINE TYPE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("D" & LAST_ROW + 1 & ":D" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Site Activation"
    'WORK ORDER
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("E" & LAST_ROW + 1 & ":E" & LAST_ROW + 132)
    TRANSPOSED_RANGE = WORK_ORDER
    'PROJECTION OR CUMULATIVE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("F" & LAST_ROW + 1 & ":F" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Cumulative"
    'WORK ORDER DATE (Baseline on DateStamp)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("G" & LAST_ROW + 1 & ":G" & LAST_ROW + 132)
    TRANSPOSED_RANGE = WORK_ORDER_DATE
    'MONTH/YEAR --> Copy Projection Dates from Site Activation
    Set COPY_RANGE = SITE_ACTIVATION_SHEET.Range("E11:EF11")
    PASTE_RANGE = COPY_RANGE.Value
    TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("H" & LAST_ROW + 1 & ":H" & LAST_ROW + 132)
    TRANSPOSED_RANGE = TRANSPOSED_VARIANT
    'SITE COUNT Values --> Copy Cumulative Values from Site Activation
    Set COPY_RANGE = SITE_ACTIVATION_SHEET.Range("E15:EF15")
    PASTE_RANGE = COPY_RANGE.Value
    TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("I" & LAST_ROW + 1 & ":I" & LAST_ROW + 132)
    TRANSPOSED_RANGE = TRANSPOSED_VARIANT
    'IMPORT/UPLOAD DATE & TIME STAMP
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("J" & LAST_ROW + 1 & ":J" & LAST_ROW + 132)
    TRANSPOSED_RANGE = DATE_STAMP
    
    'Update Progress Bar
    With ProgressBarImport
        .FrameProgress.Caption = "30%"
        .LabelProgress.Width = 60
    End With
    'The DoEvents statement is responsible for the form updating
    DoEvents
    
    'Next we'll pull in the region / country level cells with non-zero data
    With BASELINE_VERTICAL_SHEET
      LAST_ROW = .Range("A" & .Rows.Count).End(xlUp).Row
    End With
    
    For x = 18 To 117
    COUNTRY_NAME = SITE_ACTIVATION_SHEET.Cells(x, 2).Value
    If COUNTRY_NAME <> "" Then
       SITE_ACTIVATION_SHEET.Activate
       Set ROW_RANGE = SITE_ACTIVATION_SHEET.Range(Cells(x, 5), Cells(x, 136))
       
       If WorksheetFunction.Sum(ROW_RANGE) = 0 Then
       Else
            '!!EXTRACT REGION/COUNTRY VALUES TO BASELINE_VERTICAL SHEET!!
            'SPONSOR
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("A" & LAST_ROW + 1 & ":A" & LAST_ROW + 131)
            TRANSPOSED_RANGE = SPONSOR
            'PROJECT CODE
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("B" & LAST_ROW + 1 & ":B" & LAST_ROW + 131)
            TRANSPOSED_RANGE = PROJECT_CODE
            'REGION/COUNTRY
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("C" & LAST_ROW + 1 & ":C" & LAST_ROW + 131)
            TRANSPOSED_RANGE = COUNTRY_NAME
            'BASELINE TYPE
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("D" & LAST_ROW + 1 & ":D" & LAST_ROW + 131)
            TRANSPOSED_RANGE = "Site Activation"
            'WORK ORDER
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("E" & LAST_ROW + 1 & ":E" & LAST_ROW + 131)
            TRANSPOSED_RANGE = WORK_ORDER
            'PROJECTION OR CUMULATIVE
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("F" & LAST_ROW + 1 & ":F" & LAST_ROW + 131)
            TRANSPOSED_RANGE = "Projection"
            'WORK ORDER DATE (Baseline on DateStamp)
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("G" & LAST_ROW + 1 & ":G" & LAST_ROW + 131)
            TRANSPOSED_RANGE = WORK_ORDER_DATE
            'MONTH/YEAR
            Set COPY_RANGE = SITE_ACTIVATION_SHEET.Range("E11:EF11")
            'Copy Projection Dates from Site Activation
            PASTE_RANGE = COPY_RANGE.Value
            TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("H" & LAST_ROW + 1 & ":H" & LAST_ROW + 131)
            TRANSPOSED_RANGE = TRANSPOSED_VARIANT
            'SITE COUNT Values
            'Set COPY_RANGE = SITE_ACTIVATION_SHEET.Range(Cells(x, 5), Cells(x, 136))
            'Copy Cumulative Values from Site Activation
            PASTE_RANGE = ROW_RANGE.Value
            TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("I" & LAST_ROW + 1 & ":I" & LAST_ROW + 131)
            TRANSPOSED_RANGE = TRANSPOSED_VARIANT
            'IMPORT/UPLOAD DATE & TIME STAMP
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("J" & LAST_ROW + 1 & ":J" & LAST_ROW + 131)
            TRANSPOSED_RANGE = DATE_STAMP

         With BASELINE_VERTICAL_SHEET
           LAST_ROW = .Range("A" & .Rows.Count).End(xlUp).Row
         End With
        End If
      End If
    Next x
    
    'Update Progress Bar
    With ProgressBarImport
        .FrameProgress.Caption = "40%"
        .LabelProgress.Width = 80
    End With
    'The DoEvents statement is responsible for the form updating
    DoEvents

Application.Calculation = xlCalculationAutomatic
'Application.ScreenUpdating = False

End Sub

Public Sub Transpose_Enrollment(GEN_II_BOOK As Workbook, PATIENT_ENROLLMENT_SHEET As Worksheet, BASELINE_VERTICAL_SHEET As Worksheet, BASELINE_VERTICAL As ListObject, WORK_ORDER As String, WORK_ORDER_DATE As Date, DATE_STAMP As Date)

    Dim TOTALROWS As Double, TOTALCOLUMNS As Double, LAST_ROW As Double
    'Dim TRANSPOSED_TABLE As Worksheet
    Dim WEEK_VALUE As Date
    Dim STARTING_YEAR As Date
    
    Dim SITE_ACTIVATION_SHEET As Worksheet
    
    Dim ROW_RANGE As Range
    
    Dim x, y As Integer
        Dim COPY_RANGE As Range
    Dim PASTE_RANGE As Variant
    Dim TRANSPOSED_VARIANT As Variant
    Dim TRANSPOSED_RANGE As Range
    Dim PROJECT_CODE As String
    Dim SPONSOR As String
    Dim COUNTRY_NAME As String
    
    Set SITE_ACTIVATION_SHEET = GEN_II_BOOK.Worksheets("Site Activation")
    Set PATIENT_ENROLLMENT_SHEET = GEN_II_BOOK.Worksheets("Patient Enrollment-1")
    Set BASELINE_VERTICAL_SHEET = GEN_II_BOOK.Worksheets("Projection_History")
    
    Application.Calculation = xlCalculationManual
    Application.ScreenUpdating = False
    
    PROJECT_CODE = SITE_ACTIVATION_SHEET.Cells(1, 3).Value
    SPONSOR = SITE_ACTIVATION_SHEET.Cells(2, 3).Value
   
  'Patient Enrollment
    With BASELINE_VERTICAL_SHEET
      LAST_ROW = .Range("A" & .Rows.Count).End(xlUp).Row
    End With
    
    '!!EXTRACT PATIENT ENROLLMENT PROJECTION VALUES TO BASELINE_VERTICAL SHEET!!
    'SPONSOR
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("A" & LAST_ROW + 1 & ":A" & LAST_ROW + 132)
    TRANSPOSED_RANGE = SPONSOR
    'PROJECT CODE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("B" & LAST_ROW + 1 & ":B" & LAST_ROW + 132)
    TRANSPOSED_RANGE = PROJECT_CODE
    'REGION/COUNTRY
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("C" & LAST_ROW + 1 & ":C" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Global"
    'BASELINE TYPE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("D" & LAST_ROW + 1 & ":D" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Patient Enrollment"
    'WORK ORDER
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("E" & LAST_ROW + 1 & ":E" & LAST_ROW + 132)
    TRANSPOSED_RANGE = WORK_ORDER
    'PROJECTION OR CUMULATIVE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("F" & LAST_ROW + 1 & ":F" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Projection"
    'WORK ORDER DATE (Baseline on DateStamp)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("G" & LAST_ROW + 1 & ":G" & LAST_ROW + 132)
    TRANSPOSED_RANGE = WORK_ORDER_DATE
    'MONTH/YEAR --> Copy Projection Dates from Patient Enrollment
    PATIENT_ENROLLMENT_SHEET.Activate
    Set COPY_RANGE = PATIENT_ENROLLMENT_SHEET.Range("F7:EG7")
    PASTE_RANGE = COPY_RANGE.Value
    TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("H" & LAST_ROW + 1 & ":H" & LAST_ROW + 132)
    TRANSPOSED_RANGE = TRANSPOSED_VARIANT
    'Enrollment COUNT Values --> Copy Projection Values from Patient Enrollment
    Set COPY_RANGE = PATIENT_ENROLLMENT_SHEET.Range("F10:EG10")
    PASTE_RANGE = COPY_RANGE.Value
    TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("I" & LAST_ROW + 1 & ":I" & LAST_ROW + 132)
    TRANSPOSED_RANGE = TRANSPOSED_VARIANT
    'IMPORT/UPLOAD DATE & TIME STAMP
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("J" & LAST_ROW + 1 & ":J" & LAST_ROW + 132)
    TRANSPOSED_RANGE = DATE_STAMP
    
    With BASELINE_VERTICAL_SHEET
        LAST_ROW = .Range("A" & .Rows.Count).End(xlUp).Row
    End With
    
    'Update Progress Bar
    With ProgressBarImport
        .FrameProgress.Caption = "50%"
        .LabelProgress.Width = 100
    End With
    'The DoEvents statement is responsible for the form updating
    DoEvents
    
    '!!EXTRACT PATIENT ENROLLMENT CUMULATIVE VALUES TO BASELINE_VERTICAL SHEET!!
    'SPONSOR
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("A" & LAST_ROW + 1 & ":A" & LAST_ROW + 132)
    TRANSPOSED_RANGE = SPONSOR
    'PROJECT CODE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("B" & LAST_ROW + 1 & ":B" & LAST_ROW + 132)
    TRANSPOSED_RANGE = PROJECT_CODE
    'REGION/COUNTRY
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("C" & LAST_ROW + 1 & ":C" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Global"
    'BASELINE TYPE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("D" & LAST_ROW + 1 & ":D" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Patient Enrollment"
    'WORK ORDER
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("E" & LAST_ROW + 1 & ":E" & LAST_ROW + 132)
    TRANSPOSED_RANGE = WORK_ORDER
    'PROJECTION OR CUMULATIVE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("F" & LAST_ROW + 1 & ":F" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Projection"
    'WORK ORDER DATE (Baseline on DateStamp)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("G" & LAST_ROW + 1 & ":G" & LAST_ROW + 132)
    TRANSPOSED_RANGE = WORK_ORDER_DATE
    'MONTH/YEAR --> Copy Projection Dates from Patient Enrollment
    PATIENT_ENROLLMENT_SHEET.Activate
    Set COPY_RANGE = PATIENT_ENROLLMENT_SHEET.Range("F7:EG7")
    PASTE_RANGE = COPY_RANGE.Value
    TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("H" & LAST_ROW + 1 & ":H" & LAST_ROW + 132)
    TRANSPOSED_RANGE = TRANSPOSED_VARIANT
    'Enrollment COUNT Values --> Copy Projection Values from Patient Enrollment
    Set COPY_RANGE = PATIENT_ENROLLMENT_SHEET.Range("F11:EG11")
    PASTE_RANGE = COPY_RANGE.Value
    TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("I" & LAST_ROW + 1 & ":I" & LAST_ROW + 132)
    TRANSPOSED_RANGE = TRANSPOSED_VARIANT
    'IMPORT/UPLOAD DATE & TIME STAMP
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("J" & LAST_ROW + 1 & ":J" & LAST_ROW + 132)
    TRANSPOSED_RANGE = DATE_STAMP
    
    'Update Progress Bar
    With ProgressBarImport
        .FrameProgress.Caption = "60%"
        .LabelProgress.Width = 120
    End With
    'The DoEvents statement is responsible for the form updating
    DoEvents
    
    'Next we'll pull in the region / country level cells with non-zero data
    With BASELINE_VERTICAL_SHEET
      LAST_ROW = .Range("A" & .Rows.Count).End(xlUp).Row
    End With
    
    For x = 14 To 113
    COUNTRY_NAME = PATIENT_ENROLLMENT_SHEET.Cells(x, 2).Value
    If COUNTRY_NAME <> "" Then
       PATIENT_ENROLLMENT_SHEET.Activate
       Set ROW_RANGE = PATIENT_ENROLLMENT_SHEET.Range(Cells(x, 6), Cells(x, 137))

       If WorksheetFunction.Sum(ROW_RANGE) = 0 Then
       Else
            '!!EXTRACT REGION/COUNTRY VALUES TO BASELINE_VERTICAL SHEET!!
            'SPONSOR
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("A" & LAST_ROW + 1 & ":A" & LAST_ROW + 131)
            TRANSPOSED_RANGE = SPONSOR
            'PROJECT CODE
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("B" & LAST_ROW + 1 & ":B" & LAST_ROW + 131)
            TRANSPOSED_RANGE = PROJECT_CODE
            'REGION/COUNTRY
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("C" & LAST_ROW + 1 & ":C" & LAST_ROW + 131)
            TRANSPOSED_RANGE = COUNTRY_NAME
            'BASELINE TYPE
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("D" & LAST_ROW + 1 & ":D" & LAST_ROW + 131)
            TRANSPOSED_RANGE = "Patient Enrollment"
            'WORK ORDER
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("E" & LAST_ROW + 1 & ":E" & LAST_ROW + 131)
            TRANSPOSED_RANGE = WORK_ORDER
            'PROJECTION OR CUMULATIVE
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("F" & LAST_ROW + 1 & ":F" & LAST_ROW + 131)
            TRANSPOSED_RANGE = "Projection"
            'WORK ORDER DATE (Baseline on DateStamp)
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("G" & LAST_ROW + 1 & ":G" & LAST_ROW + 131)
            TRANSPOSED_RANGE = WORK_ORDER_DATE
            'MONTH/YEAR --> Copy Projection Dates from Patient Enrollment
            Set COPY_RANGE = PATIENT_ENROLLMENT_SHEET.Range("E7:EG7")
            PASTE_RANGE = COPY_RANGE.Value
            TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("H" & LAST_ROW + 1 & ":H" & LAST_ROW + 131)
            TRANSPOSED_RANGE = TRANSPOSED_VARIANT
            'SITE COUNT Values --> Copy Cumulative Values from Patient Enrollment
            PASTE_RANGE = ROW_RANGE.Value
            TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("I" & LAST_ROW + 1 & ":I" & LAST_ROW + 131)
            TRANSPOSED_RANGE = TRANSPOSED_VARIANT
            'IMPORT/UPLOAD DATE & TIME STAMP
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("J" & LAST_ROW + 1 & ":J" & LAST_ROW + 131)
            TRANSPOSED_RANGE = DATE_STAMP
       
         With BASELINE_VERTICAL_SHEET
           LAST_ROW = .Range("A" & .Rows.Count).End(xlUp).Row
         End With
         
        End If
      End If
    Next x
    
    'Update Progress Bar
    With ProgressBarImport
        .FrameProgress.Caption = "80%"
        .LabelProgress.Width = 160
    End With
    'The DoEvents statement is responsible for the form updating
    DoEvents
    
Application.Calculation = xlCalculationAutomatic
'Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "ProgressBar"
Attribute VB_Base = "0{1465F20C-16CE-4F60-B412-867EF596AA4A}{60A889E1-BB8A-4EFE-814F-9F538426913E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub Label1_Click()

End Sub

Private Sub userform_activate()
    Call Check_Entries
End Sub


Attribute VB_Name = "ProgressBarImport"
Attribute VB_Base = "0{8588C25C-973B-43DE-8AF4-CEF89910AC1B}{81E9590D-4B7F-4889-A1A3-A676E9F2CEAC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub userform_activate()
    Call GenOneToGenTwo
End Sub


Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Upload_Wizard"
Public BASELINE_WORK_ORDER_NAME As String
Public BASELINE_WORK_ORDER_DATE As Date
Public WORK_ORDER_DECISION As String
Public fname As String
Public path As String
Public Error As String
Sub ShowDialog()
'Progress Bar for Upload Wizard
    ProgressBar.LabelProgress.Width = 0
    ProgressBar.Show
End Sub
Sub Check_Entries()

 Calculate
 
On Error Resume Next
    Sheets("Site Activation").Activate
        Select Case Cells(1, 3).Value
         Case Is = "50000000"
            MsgBox ("Please enter a valid Project code")
            Cells(1, 3).Activate
            GoTo ActionCancelled
         Case Is = ""
            MsgBox ("Please enter a valid Project code")
            Cells(1, 3).Activate
            GoTo ActionCancelled
        End Select
        
     Select Case Cells(2, 3).Value
         Case Is = "Sponsor Name"
            MsgBox ("Please enter a valid Sponsor name")
            Cells(2, 3).Activate
            GoTo ActionCancelled
         Case Is = ""
            MsgBox ("Please enter a valid Sponsor name")
            Cells(2, 3).Activate
            GoTo ActionCancelled
        End Select
        
      Select Case Cells(6, 3).Value
         Case Is = "thoward"
            MsgBox ("Please enter your INC user Id")
            Cells(6, 3).Activate
            GoTo ActionCancelled
         Case Is = ""
            MsgBox ("Please enter your INC user Id")
            Cells(6, 3).Activate
            GoTo ActionCancelled
        End Select
        
      fname = ValidWBName(Cells(2, 4).Value)
      
        
      Select Case Cells(7, 3).Value
         Case Is = ""
            MsgBox ("Please enter Total Number of Sites Expected")
            Cells(7, 3).Activate
            GoTo ActionCancelled
        End Select
        
    Select Case Cells(16, 4).Value
        Case Is = 0
            MsgBox ("Please enter Number of Sites Expected by country")
            Cells(18, 2).Activate
            GoTo ActionCancelled
         Case Is < Cells(7, 3).Value
            MsgBox ("Please verify! Sum of sites by country is less than expected total")
            Cells(7, 3).Activate
            GoTo ActionCancelled
        End Select

    Select Case Cells(16, 3).Value
         Case Is = "-"
           If MsgBox("Please enter enrollment rates. Does Subject enrollment apply for this study?", vbYesNo, "Missing Subject Enrollment rate") = vbYes Then
             Cells(18, 3).Activate
             GoTo ActionCancelled
            ElseIf vbNo Then
             Call ApproveBaseline
             GoTo 100
           End If
        End Select

   Sheets("Patient Enrollment-1").Activate
     Select Case Cells(2, 3).Value
         Case Is = ""
            MsgBox ("Please enter Total Number of Patients Expected")
            Cells(2, 3).Activate
            GoTo ActionCancelled
        End Select
        
     If MsgBox("Enrollment end date correct?", vbYesNo, "Please verify Projected end of enrollment in cell c3.") = vbNo Then
      GoTo ActionCancelled
     End If

On Error GoTo 0
    Call ApproveBaseline
    
    Sheets("Site Activation").Activate
    If WORK_ORDER_DECISION = "Cancel" Then
        'If Sheets("Projection_History").Protection = False Then
          Sheets("Projection_History").Protect DrawingObjects:=False, Contents:=True, Scenarios:= _
        False, AllowFormattingCells:=True, AllowFormattingColumns:=True, _
        AllowFormattingRows:=True, AllowSorting:=True, AllowFiltering:=True
        'End If
        'If Sheets("Site Activation").Protection = False Then
          Sheets("Site Activation").Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
        'End If
        'If Sheets("Patient Enrollment-1").Protection = False Then
          Sheets("Patient Enrollment-1").Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
        'End If
        MsgBox "Action Cancelled; File did not upload."
        Unload ProgressBar
        Exit Sub
    End If
    
    'Update Progress Bar
    With ProgressBar
        .FrameProgress.Caption = "90%"
        .LabelProgress.Width = 180
    End With
    'The DoEvents statement is responsible for the form updating
    DoEvents
100 path = "\\nqshare\nqsprd_transfer\PSAET_Gen2\import\" & fname

    If MsgBox("Do you want to upload tracker as " & fname & "?", vbYesNo, "All checks Ok!") = vbYes Then
    
    If Dir("\\nqshare\nqsprd_transfer\PSAET_Gen2\import\" & fname & ".xlsm") <> "" Then
        MsgBox ("File " & fname & " already exists. Please upload again after 10 minutes")
    Else
        ActiveWorkbook.SaveAs path, FileFormat:=52
    End If
         ElseIf vbNo Then
ActionCancelled:
        'SITE_ACTIVATION_SHEET.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
        MsgBox ("Action Cancelled; File did not upload. However, archival data has been stored locally within the Projection_History tab.")
        Unload ProgressBar
        Sheets("Site Activation").Activate
        Exit Sub
     End If
    
    'Update Progress Bar
    With ProgressBar
        .FrameProgress.Caption = "100%"
        .LabelProgress.Width = 200
    End With
    'The DoEvents statement is responsible for the form updating
    DoEvents
    Unload ProgressBar
    Sheets("Site Activation").Activate
End Sub
Function FileExist(path As String) As Boolean

Dim FileExist As String

If MsgBox("Do you want to upload tracker as " & fname & "?", vbYesNo, "All checks Ok!") = vbYes Then
    If FileExist("\\nqshare\nqsprd_transfer\PSAET_Gen2\import\" & fname) = False Then
        ActiveWorkbook.SaveAs path, FileFormat:=52
        End If
        Else
        MsgBox ("File " & fname & " already exists. Please upload again after 10 minutes")
     ElseIf vbNo Then
ActionCancelled:
        'SITE_ACTIVATION_SHEET.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
        MsgBox ("Action Cancelled; File did not upload. However, archival data has been stored locally within the Projection_History tab.")
        Unload ProgressBar
        Sheets("Site Activation").Activate
        Exit Sub
     End If
End Function

Sub ApproveBaseline()
' Baseline/Active Projection Check

Dim ANSWER As Integer
Dim BASELINE_ANSWER As Integer

'Update Progress Bar
With ProgressBar
    .FrameProgress.Caption = "5%"
    .LabelProgress.Width = 10
End With
'The DoEvents statement is responsible for the form updating
DoEvents

BASELINE_ANSWER = MsgBox("Do you need to baseline/rebaseline site and enrollment projections for the selected project as a result of a baseline in Planview?", vbYesNo)
If BASELINE_ANSWER = vbYes Then
    'ANSWER = MsgBox("This action will baseline/rebaseline site and enrollment projections. If you have received approval to baseline/rebaseline, please select 'Yes' to continue. If you have not received approval to baseline/rebaseline, please select 'No' to cancel this action. Proceed?", vbYesNo)
    'If ANSWER = vbYes Then
        Call baseline
        Exit Sub
  '  Else
        'MsgBox "Action Cancelled"
  '      WORK_ORDER_DECISION = "Cancel"
  '      Exit Sub
 '   End If
Else
    'MsgBox("This action will record a current working projection, not associated with a Work Order.")
    Call TransposeBaseline
End If

End Sub

Sub baseline()
' Baseline/Re-Baseline Macro

Dim SITE_ACTIVATION_SHEET As Worksheet
Dim BASELINE_VERTICAL_SHEET As Worksheet
Dim PATIENT_ENROLLMENT_1 As Worksheet
Dim PATIENT_ENROLLMENT_2 As Worksheet
Dim PSAET_BOOK As Workbook
Dim CURRENT_BASELINE_CHECK As String
Dim BASELINE_WORK_ORDER_MONTH As String
Dim BASELINE_WORK_ORDER_YEAR As String

Set PSAET_BOOK = ThisWorkbook
PSAET_BOOK.Activate
Set SITE_ACTIVATION_SHEET = PSAET_BOOK.Worksheets("Site Activation")
Set BASELINE_VERTICAL_SHEET = PSAET_BOOK.Worksheets("Projection_History")
Set PATIENT_ENROLLMENT_1 = PSAET_BOOK.Worksheets("Patient Enrollment-1")

    SITE_ACTIVATION_SHEET.Unprotect
    
    'Open Work Order Selector Form
Work_Order_Error:
        WORK_ORDER_SELECTOR.Show vbModal
        BASELINE_WORK_ORDER_NAME = PSAET_BOOK.Worksheets(2).Cells(1, 6).Value
        BASELINE_WORK_ORDER_MONTH = PSAET_BOOK.Worksheets(2).Cells(1, 7).Value
        BASELINE_WORK_ORDER_YEAR = PSAET_BOOK.Worksheets(2).Cells(1, 8).Value
        'Error handling of work order details.
        If BASELINE_WORK_ORDER_NAME = "(Select Work Order Name)" Then
DATE_ERROR:
            'MsgBox ("Invalid Entry - Select a Work Order Name")
            WORK_ORDER_INFO_ERROR.Show vbModal
            WORK_ORDER_DECISION = PSAET_BOOK.Worksheets(2).Cells(1, 11).Value
            'GoTo Work_Order_Error
            If WORK_ORDER_DECISION = "AddWorkOrder" Then
                'Circle back to enter work order information
                GoTo Work_Order_Error
            ElseIf WORK_ORDER_DECISION = "ArchiveProjection" Then
                'Log as a Projection and proceed to Trasponse macro
                BASELINE_WORK_ORDER_NAME = ""
                BASELINE_WORK_ORDER_DATE = Empty
                GoTo Archive
            ElseIf WORK_ORDER_DECISION = "Cancel" Then
                'Cancel and exit wizard without uploading and logging baseline
                 'MsgBox "Action Cancelled; File did not import."
                PSAET_BOOK.Worksheets(2).Range("F1:K1").Value = ""
                PSAET_BOOK.Worksheets(2).Activate
'                SITE_ACTIVATION_SHEET.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
'                PATIENT_ENROLLMENT_SHEET.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
'                BASELINE_VERTICAL_SHEET.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
                'SOURCE_BOOK.Close (False)
                'Unload ProgressBarImport
                Exit Sub
            End If
        ElseIf BASELINE_WORK_ORDER_MONTH = "(Select Month)" Then
            MsgBox ("Invalid Entry - Select a Month for the Work Order Date")
            GoTo Work_Order_Error
        ElseIf BASELINE_WORK_ORDER_YEAR = "(Select Year)" Then
            MsgBox ("Invalid Entry - Select a Year for the Work Order Date from the dropdown")
            GoTo Work_Order_Error
        Else 'do nothing
        End If
        
        On Error GoTo DATE_ERROR
        PSAET_BOOK.Worksheets(2).Range("I1").FormulaR1C1 = "=DATEVALUE(""1-""&RC[-2]&""-""&RC[-1])" 'Wrap in an iferror(0) or something
        BASELINE_WORK_ORDER_DATE = PSAET_BOOK.Worksheets(2).Cells(1, 9).Value
        CURRENT_BASELINE_CHECK = PSAET_BOOK.Worksheets(2).Cells(1, 10).Value
        PSAET_BOOK.Worksheets(2).Range("F1:K1").Value = ""
       
        If CURRENT_BASELINE_CHECK = True Then
            'MsgBox "Checkbox has been Checked",
            PSAET_BOOK.Worksheets(2).Range("K5").Value = BASELINE_WORK_ORDER_NAME
            PSAET_BOOK.Worksheets(2).Range("K7").Value = BASELINE_WORK_ORDER_DATE
            Else
            'MsgBox "Checkbox is UnChecked",
        End If

    SITE_ACTIVATION_SHEET.Activate
    SITE_ACTIVATION_SHEET.Range("C16:D17").Select
    Selection.Copy
    SITE_ACTIVATION_SHEET.Range("C14:C15").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    SITE_ACTIVATION_SHEET.Range("E16:EF17").Select
    Selection.Copy
    SITE_ACTIVATION_SHEET.Range("E14:EF15").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    'ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
    PATIENT_ENROLLMENT_1.Select
    PATIENT_ENROLLMENT_1.Unprotect
    PATIENT_ENROLLMENT_1.Range("C12:E13").Select
    Selection.Copy
    PATIENT_ENROLLMENT_1.Range("C10:C11").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    PATIENT_ENROLLMENT_1.Range("F12:EG13").Select
    Selection.Copy
    PATIENT_ENROLLMENT_1.Range("F10").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    'PSAET_BOOK.PATIENT_ENROLLMENT_1.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
    SITE_ACTIVATION_SHEET.Select

Archive:
PSAET_BOOK.Worksheets(2).Range("F1:K1").Value = ""
Call TransposeBaseline

End Sub

Sub TransposeBaseline()

    Dim PSAET_BOOK As Workbook
    Dim SITE_ACTIVATION_SHEET As Worksheet
    Dim BASELINE_VERTICAL_SHEET As Worksheet
    Dim PATIENT_ENROLLMENT_1 As Worksheet
    Dim PATIENT_ENROLLMENT_2 As Worksheet
    Dim PATIENT_BASELINE As Integer
    Dim BASELINE_VERTICAL As ListObject
    Dim TOTALROWS As Double, TOTALCOLUMNS As Double, LAST_ROW As Double
    Dim WEEK_VALUE As Date
    Dim STARTING_YEAR As Date
    Dim ROW_RANGE As Range
    Dim x, y As Integer
    Dim WORK_ORDER_DATE As Date
    Dim WORK_ORDER As String
    Dim DATE_STAMP As Date
    Dim COPY_RANGE As Range
    Dim PASTE_RANGE As Variant
    Dim TRANSPOSED_VARIANT As Variant
    Dim TRANSPOSED_RANGE As Range
    Dim PROJECT_CODE As String
    Dim SPONSOR As String
    Dim COUNTRY_NAME As String
    
    Set PSAET_BOOK = ThisWorkbook
        PSAET_BOOK.Activate

    Set SITE_ACTIVATION_SHEET = PSAET_BOOK.Worksheets("Site Activation")
    Set BASELINE_VERTICAL_SHEET = PSAET_BOOK.Worksheets("Projection_History")
    Set PATIENT_ENROLLMENT_1 = PSAET_BOOK.Worksheets("Patient Enrollment-1")
    Set PATIENT_ENROLLMENT_2 = PSAET_BOOK.Worksheets("Patient Enrollment-2")
    Set BASELINE_VERTICAL = PSAET_BOOK.Worksheets("Projection_History").ListObjects("Projection_History")
    
    BASELINE_VERTICAL_SHEET.Unprotect
    
    Application.Calculation = xlCalculationManual
    Application.ScreenUpdating = False

    DATE_STAMP = Now
    PROJECT_CODE = SITE_ACTIVATION_SHEET.Cells(1, 3).Value
    SPONSOR = SITE_ACTIVATION_SHEET.Cells(2, 3).Value
    
    'Update Progress Bar
    With ProgressBar
        .FrameProgress.Caption = "10%"
        .LabelProgress.Width = 20
    End With
    'The DoEvents statement is responsible for the form updating
    DoEvents
    
'Use Baseline Work Order name if baseline, otherwise use archive projection name
    If BASELINE_WORK_ORDER_NAME = Empty Then
        SITE_ACTIVATION_SHEET.Cells(3, 11).Value = SITE_ACTIVATION_SHEET.Cells(3, 11).Value + 1
        WORK_ORDER = "Archived Projection " & (SITE_ACTIVATION_SHEET.Cells(3, 11).Value)
        WORK_ORDER_DATE = Date
    Else
        WORK_ORDER = BASELINE_WORK_ORDER_NAME
        WORK_ORDER_DATE = BASELINE_WORK_ORDER_DATE
    End If
    
    With BASELINE_VERTICAL_SHEET
      LAST_ROW = .Range("A" & .Rows.Count).End(xlUp).Row
      If LAST_ROW = 2 Then
        If BASELINE_VERTICAL_SHEET.Cells(2, 9).Value > 0 Then
            'Do nothing
            Else
            LAST_ROW = 1
        End If
        'LAST_ROW = 1
      End If
    End With
    
'!!EXTRACT PROJECTION VALUES TO BASELINE_VERTICAL SHEET!!
    'SPONSOR
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("A" & LAST_ROW + 1 & ":A" & LAST_ROW + 132)
    TRANSPOSED_RANGE = SPONSOR
    'PROJECT CODE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("B" & LAST_ROW + 1 & ":B" & LAST_ROW + 132)
    TRANSPOSED_RANGE = PROJECT_CODE
    'REGION/COUNTRY
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("C" & LAST_ROW + 1 & ":C" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Global"
    'BASELINE TYPE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("D" & LAST_ROW + 1 & ":D" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Site Activation"
    'WORK ORDER
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("E" & LAST_ROW + 1 & ":E" & LAST_ROW + 132)
    TRANSPOSED_RANGE = WORK_ORDER
    'PROJECTION OR CUMULATIVE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("F" & LAST_ROW + 1 & ":F" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Projection"
    'WORK ORDER DATE (Baseline on DateStamp)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("G" & LAST_ROW + 1 & ":G" & LAST_ROW + 132)
    TRANSPOSED_RANGE = WORK_ORDER_DATE
    'MONTH/YEAR --> Copy Projection Dates from Site Activation
    Set COPY_RANGE = SITE_ACTIVATION_SHEET.Range("E11:EF11")
    PASTE_RANGE = COPY_RANGE.Value
    TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("H" & LAST_ROW + 1 & ":H" & LAST_ROW + 132)
    TRANSPOSED_RANGE = TRANSPOSED_VARIANT
    'SITE COUNT Values --> Copy Projection Values from Site Activation
    Set COPY_RANGE = SITE_ACTIVATION_SHEET.Range("E14:EF14")
    PASTE_RANGE = COPY_RANGE.Value
    TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("I" & LAST_ROW + 1 & ":I" & LAST_ROW + 132)
    TRANSPOSED_RANGE = TRANSPOSED_VARIANT
    'IMPORT/UPLOAD DATE & TIME STAMP
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("J" & LAST_ROW + 1 & ":J" & LAST_ROW + 132)
    TRANSPOSED_RANGE = DATE_STAMP
    
    With BASELINE_VERTICAL_SHEET
        LAST_ROW = .Range("A" & .Rows.Count).End(xlUp).Row
    End With
    
    'Update Progress Bar
    With ProgressBar
        .FrameProgress.Caption = "20%"
        .LabelProgress.Width = 40
    End With
    'The DoEvents statement is responsible for the form updating
    DoEvents
    
'!!EXTRACT CUMULATIVE VALUES TO BASELINE_VERTICAL SHEET!!
    'SPONSOR
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("A" & LAST_ROW + 1 & ":A" & LAST_ROW + 132)
    TRANSPOSED_RANGE = SPONSOR
    'PROJECT CODE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("B" & LAST_ROW + 1 & ":B" & LAST_ROW + 132)
    TRANSPOSED_RANGE = PROJECT_CODE
    'REGION/COUNTRY
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("C" & LAST_ROW + 1 & ":C" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Global"
    'BASELINE TYPE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("D" & LAST_ROW + 1 & ":D" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Site Activation"
    'WORK ORDER
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("E" & LAST_ROW + 1 & ":E" & LAST_ROW + 132)
    TRANSPOSED_RANGE = WORK_ORDER
    'PROJECTION OR CUMULATIVE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("F" & LAST_ROW + 1 & ":F" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Cumulative"
    'WORK ORDER DATE (Baseline on DateStamp)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("G" & LAST_ROW + 1 & ":G" & LAST_ROW + 132)
    TRANSPOSED_RANGE = WORK_ORDER_DATE
    'MONTH/YEAR --> Copy Projection Dates from Site Activation
    Set COPY_RANGE = SITE_ACTIVATION_SHEET.Range("E11:EF11")
    PASTE_RANGE = COPY_RANGE.Value
    TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("H" & LAST_ROW + 1 & ":H" & LAST_ROW + 132)
    TRANSPOSED_RANGE = TRANSPOSED_VARIANT
    'SITE COUNT Values --> Copy Cumulative Values from Site Activation
    Set COPY_RANGE = SITE_ACTIVATION_SHEET.Range("E15:EF15")
    PASTE_RANGE = COPY_RANGE.Value
    TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("I" & LAST_ROW + 1 & ":I" & LAST_ROW + 132)
    TRANSPOSED_RANGE = TRANSPOSED_VARIANT
    'IMPORT/UPLOAD DATE & TIME STAMP
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("J" & LAST_ROW + 1 & ":J" & LAST_ROW + 132)
    TRANSPOSED_RANGE = DATE_STAMP
    
    'Update Progress Bar
    With ProgressBar
        .FrameProgress.Caption = "30%"
        .LabelProgress.Width = 60
    End With
    'The DoEvents statement is responsible for the form updating
    DoEvents
    
    'Next we'll pull in the region / country level cells with non-zero data
    With BASELINE_VERTICAL_SHEET
      LAST_ROW = .Range("A" & .Rows.Count).End(xlUp).Row
    End With
    
    For x = 18 To 117
    COUNTRY_NAME = SITE_ACTIVATION_SHEET.Cells(x, 2).Value
    If COUNTRY_NAME <> "" Then
       SITE_ACTIVATION_SHEET.Activate
       Set ROW_RANGE = SITE_ACTIVATION_SHEET.Range(Cells(x, 5), Cells(x, 136))
       
       If WorksheetFunction.Sum(ROW_RANGE) = 0 Then
       Else
            '!!EXTRACT REGION/COUNTRY VALUES TO BASELINE_VERTICAL SHEET!!
            'SPONSOR
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("A" & LAST_ROW + 1 & ":A" & LAST_ROW + 131)
            TRANSPOSED_RANGE = SPONSOR
            'PROJECT CODE
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("B" & LAST_ROW + 1 & ":B" & LAST_ROW + 131)
            TRANSPOSED_RANGE = PROJECT_CODE
            'REGION/COUNTRY
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("C" & LAST_ROW + 1 & ":C" & LAST_ROW + 131)
            TRANSPOSED_RANGE = COUNTRY_NAME
            'BASELINE TYPE
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("D" & LAST_ROW + 1 & ":D" & LAST_ROW + 131)
            TRANSPOSED_RANGE = "Site Activation"
            'WORK ORDER
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("E" & LAST_ROW + 1 & ":E" & LAST_ROW + 131)
            TRANSPOSED_RANGE = WORK_ORDER
            'PROJECTION OR CUMULATIVE
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("F" & LAST_ROW + 1 & ":F" & LAST_ROW + 131)
            TRANSPOSED_RANGE = "Projection"
            'WORK ORDER DATE (Baseline on DateStamp)
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("G" & LAST_ROW + 1 & ":G" & LAST_ROW + 131)
            TRANSPOSED_RANGE = WORK_ORDER_DATE
            'MONTH/YEAR
            Set COPY_RANGE = SITE_ACTIVATION_SHEET.Range("E11:EF11")
            'Copy Projection Dates from Site Activation
            PASTE_RANGE = COPY_RANGE.Value
            TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("H" & LAST_ROW + 1 & ":H" & LAST_ROW + 131)
            TRANSPOSED_RANGE = TRANSPOSED_VARIANT
            'SITE COUNT Values
            'Set COPY_RANGE = SITE_ACTIVATION_SHEET.Range(Cells(x, 5), Cells(x, 136))
            'Copy Cumulative Values from Site Activation
            PASTE_RANGE = ROW_RANGE.Value
            TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("I" & LAST_ROW + 1 & ":I" & LAST_ROW + 131)
            TRANSPOSED_RANGE = TRANSPOSED_VARIANT
            'IMPORT/UPLOAD DATE & TIME STAMP
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("J" & LAST_ROW + 1 & ":J" & LAST_ROW + 131)
            TRANSPOSED_RANGE = DATE_STAMP

         With BASELINE_VERTICAL_SHEET
           LAST_ROW = .Range("A" & .Rows.Count).End(xlUp).Row
         End With
        End If
      End If
    Next x
    
    'Update Progress Bar
    With ProgressBar
        .FrameProgress.Caption = "40%"
        .LabelProgress.Width = 80
    End With
    'The DoEvents statement is responsible for the form updating
    DoEvents
    
  'Patient Enrollment
    With BASELINE_VERTICAL_SHEET
      LAST_ROW = .Range("A" & .Rows.Count).End(xlUp).Row
    End With
    
    '!!EXTRACT PATIENT ENROLLMENT PROJECTION VALUES TO BASELINE_VERTICAL SHEET!!
    'SPONSOR
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("A" & LAST_ROW + 1 & ":A" & LAST_ROW + 132)
    TRANSPOSED_RANGE = SPONSOR
    'PROJECT CODE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("B" & LAST_ROW + 1 & ":B" & LAST_ROW + 132)
    TRANSPOSED_RANGE = PROJECT_CODE
    'REGION/COUNTRY
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("C" & LAST_ROW + 1 & ":C" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Global"
    'BASELINE TYPE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("D" & LAST_ROW + 1 & ":D" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Patient Enrollment"
    'WORK ORDER
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("E" & LAST_ROW + 1 & ":E" & LAST_ROW + 132)
    TRANSPOSED_RANGE = WORK_ORDER
    'PROJECTION OR CUMULATIVE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("F" & LAST_ROW + 1 & ":F" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Projection"
    'WORK ORDER DATE (Baseline on DateStamp)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("G" & LAST_ROW + 1 & ":G" & LAST_ROW + 132)
    TRANSPOSED_RANGE = WORK_ORDER_DATE
    'MONTH/YEAR --> Copy Projection Dates from Patient Enrollment
    PATIENT_ENROLLMENT_1.Activate
    Set COPY_RANGE = PATIENT_ENROLLMENT_1.Range("F7:EG7")
    PASTE_RANGE = COPY_RANGE.Value
    TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("H" & LAST_ROW + 1 & ":H" & LAST_ROW + 132)
    TRANSPOSED_RANGE = TRANSPOSED_VARIANT
    'Enrollment COUNT Values --> Copy Projection Values from Patient Enrollment
    Set COPY_RANGE = PATIENT_ENROLLMENT_1.Range("F10:EG10")
    PASTE_RANGE = COPY_RANGE.Value
    TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("I" & LAST_ROW + 1 & ":I" & LAST_ROW + 132)
    TRANSPOSED_RANGE = TRANSPOSED_VARIANT
    'IMPORT/UPLOAD DATE & TIME STAMP
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("J" & LAST_ROW + 1 & ":J" & LAST_ROW + 132)
    TRANSPOSED_RANGE = DATE_STAMP
    
    With BASELINE_VERTICAL_SHEET
        LAST_ROW = .Range("A" & .Rows.Count).End(xlUp).Row
    End With
    
    'Update Progress Bar
    With ProgressBar
        .FrameProgress.Caption = "50%"
        .LabelProgress.Width = 100
    End With
    'The DoEvents statement is responsible for the form updating
    DoEvents
    
    '!!EXTRACT PATIENT ENROLLMENT CUMULATIVE VALUES TO BASELINE_VERTICAL SHEET!!
    'SPONSOR
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("A" & LAST_ROW + 1 & ":A" & LAST_ROW + 132)
    TRANSPOSED_RANGE = SPONSOR
    'PROJECT CODE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("B" & LAST_ROW + 1 & ":B" & LAST_ROW + 132)
    TRANSPOSED_RANGE = PROJECT_CODE
    'REGION/COUNTRY
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("C" & LAST_ROW + 1 & ":C" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Global"
    'BASELINE TYPE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("D" & LAST_ROW + 1 & ":D" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Patient Enrollment"
    'WORK ORDER
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("E" & LAST_ROW + 1 & ":E" & LAST_ROW + 132)
    TRANSPOSED_RANGE = WORK_ORDER
    'PROJECTION OR CUMULATIVE
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("F" & LAST_ROW + 1 & ":F" & LAST_ROW + 132)
    TRANSPOSED_RANGE = "Projection"
    'WORK ORDER DATE (Baseline on DateStamp)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("G" & LAST_ROW + 1 & ":G" & LAST_ROW + 132)
    TRANSPOSED_RANGE = WORK_ORDER_DATE
    'MONTH/YEAR --> Copy Projection Dates from Patient Enrollment
    PATIENT_ENROLLMENT_1.Activate
    Set COPY_RANGE = PATIENT_ENROLLMENT_1.Range("F7:EG7")
    PASTE_RANGE = COPY_RANGE.Value
    TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("H" & LAST_ROW + 1 & ":H" & LAST_ROW + 132)
    TRANSPOSED_RANGE = TRANSPOSED_VARIANT
    'Enrollment COUNT Values --> Copy Projection Values from Patient Enrollment
    Set COPY_RANGE = PATIENT_ENROLLMENT_1.Range("F11:EG11")
    PASTE_RANGE = COPY_RANGE.Value
    TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("I" & LAST_ROW + 1 & ":I" & LAST_ROW + 132)
    TRANSPOSED_RANGE = TRANSPOSED_VARIANT
    'IMPORT/UPLOAD DATE & TIME STAMP
    Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("J" & LAST_ROW + 1 & ":J" & LAST_ROW + 132)
    TRANSPOSED_RANGE = DATE_STAMP
    
    'Update Progress Bar
    With ProgressBar
        .FrameProgress.Caption = "60%"
        .LabelProgress.Width = 120
    End With
    'The DoEvents statement is responsible for the form updating
    DoEvents
    
    'Next we'll pull in the region / country level cells with non-zero data
    With BASELINE_VERTICAL_SHEET
      LAST_ROW = .Range("A" & .Rows.Count).End(xlUp).Row
    End With
    
    For x = 14 To 113
    COUNTRY_NAME = PATIENT_ENROLLMENT_1.Cells(x, 2).Value
    If COUNTRY_NAME <> "" Then
       PATIENT_ENROLLMENT_1.Activate
       Set ROW_RANGE = PATIENT_ENROLLMENT_1.Range(Cells(x, 6), Cells(x, 137))

       If WorksheetFunction.Sum(ROW_RANGE) = 0 Then
       Else
            '!!EXTRACT REGION/COUNTRY VALUES TO BASELINE_VERTICAL SHEET!!
            'SPONSOR
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("A" & LAST_ROW + 1 & ":A" & LAST_ROW + 131)
            TRANSPOSED_RANGE = SPONSOR
            'PROJECT CODE
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("B" & LAST_ROW + 1 & ":B" & LAST_ROW + 131)
            TRANSPOSED_RANGE = PROJECT_CODE
            'REGION/COUNTRY
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("C" & LAST_ROW + 1 & ":C" & LAST_ROW + 131)
            TRANSPOSED_RANGE = COUNTRY_NAME
            'BASELINE TYPE
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("D" & LAST_ROW + 1 & ":D" & LAST_ROW + 131)
            TRANSPOSED_RANGE = "Patient Enrollment"
            'WORK ORDER
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("E" & LAST_ROW + 1 & ":E" & LAST_ROW + 131)
            TRANSPOSED_RANGE = WORK_ORDER
            'PROJECTION OR CUMULATIVE
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("F" & LAST_ROW + 1 & ":F" & LAST_ROW + 131)
            TRANSPOSED_RANGE = "Projection"
            'WORK ORDER DATE (Baseline on DateStamp)
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("G" & LAST_ROW + 1 & ":G" & LAST_ROW + 131)
            TRANSPOSED_RANGE = WORK_ORDER_DATE
            'MONTH/YEAR --> Copy Projection Dates from Patient Enrollment
            Set COPY_RANGE = PATIENT_ENROLLMENT_1.Range("E7:EG7")
            PASTE_RANGE = COPY_RANGE.Value
            TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("H" & LAST_ROW + 1 & ":H" & LAST_ROW + 131)
            TRANSPOSED_RANGE = TRANSPOSED_VARIANT
            'SITE COUNT Values --> Copy Cumulative Values from Patient Enrollment
            PASTE_RANGE = ROW_RANGE.Value
            TRANSPOSED_VARIANT = Application.Transpose(PASTE_RANGE)
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("I" & LAST_ROW + 1 & ":I" & LAST_ROW + 131)
            TRANSPOSED_RANGE = TRANSPOSED_VARIANT
            'IMPORT/UPLOAD DATE & TIME STAMP
            Set TRANSPOSED_RANGE = BASELINE_VERTICAL_SHEET.Range("J" & LAST_ROW + 1 & ":J" & LAST_ROW + 131)
            TRANSPOSED_RANGE = DATE_STAMP
       
         With BASELINE_VERTICAL_SHEET
           LAST_ROW = .Range("A" & .Rows.Count).End(xlUp).Row
         End With
         
        End If
      End If
    Next x
    
    'Update Progress Bar
    With ProgressBar
        .FrameProgress.Caption = "80%"
        .LabelProgress.Width = 160
    End With
    'The DoEvents statement is responsible for the form updating
    DoEvents
    
'Remove Zeros and Blanks from Baseline_Vertical Sheet
    BASELINE_VERTICAL_SHEET.Activate
    ActiveSheet.ListObjects("Projection_History").Range.AutoFilter Field:=9, _
        Criteria1:="=0", Operator:=xlOr, Criteria2:="="
    Range("A2").Select
    Range(Selection, Selection.End(xlDown)).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.EntireRow.Delete
    ActiveSheet.ShowAllData
    BASELINE_VERTICAL_SHEET.Range("A2").Select

BASELINE_VERTICAL_SHEET.Protect DrawingObjects:=False, Contents:=True, Scenarios:= _
        False, AllowFormattingCells:=True, AllowFormattingColumns:=True, _
        AllowFormattingRows:=True, AllowSorting:=True, AllowFiltering:=True
SITE_ACTIVATION_SHEET.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
PATIENT_ENROLLMENT_1.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True

Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True

End Sub

Sub calc()
 Calculate
End Sub


Private Function ValidWBName(Arg As String) As String
    Dim RegEx As Object
    Set RegEx = CreateObject("VBScript.RegExp")
    With RegEx
        .Pattern = "[\\/:\*\?""<>\|]"
        .Global = True
        ValidWBName = .Replace(Arg, "")
    End With
End Function
Attribute VB_Name = "WORK_ORDER_INFO_ERROR"
Attribute VB_Base = "0{791D9378-D77D-4462-AE49-2062FADDA244}{669E428C-AFAC-4C0B-958F-10233E68FCFF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub AddWorkOrder_Click()
  Dim SOURCE_SHEET As Worksheet
  Set SOURCE_SHEET = ThisWorkbook.Worksheets(2)
  
  With SOURCE_SHEET
    .Cells(1, 11).Value = "AddWorkOrder"
  End With
  
  Unload Me
End Sub


Private Sub ArchiveProjection_Click()
  Dim SOURCE_SHEET As Worksheet
  Set SOURCE_SHEET = ThisWorkbook.Worksheets(2)
  
  With SOURCE_SHEET
    .Cells(1, 11).Value = "ArchiveProjection"
  End With
  
  Unload Me
End Sub

Private Sub Cancel_Click()
  Dim SOURCE_SHEET As Worksheet
  Set SOURCE_SHEET = ThisWorkbook.Worksheets(2)
  
  With SOURCE_SHEET
    .Cells(1, 11).Value = "Cancel"
  End With
  
  Unload Me
End Sub

Attribute VB_Name = "WORK_ORDER_SELECTOR"
Attribute VB_Base = "0{7C5DCC0D-3AF8-4588-BF0A-B957B5055B4A}{5F6FC5FE-2801-4712-A7A4-BE64F1C63C9F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub CheckBox1_Click()

End Sub

Private Sub Cancel_Work_Order_Selector_Click()

Unload Me
'Exit Sub
End Sub

Private Sub Label3_Click()

End Sub

Private Sub Label4_Click()

End Sub

Private Sub WORK_ORDER_COMBOBOX_Change()

End Sub

Private Sub WORK_ORDER_CONFIRM_Click()
  Dim SOURCE_SHEET As Worksheet
  Set SOURCE_SHEET = ThisWorkbook.Worksheets(2)

  With SOURCE_SHEET
    .Cells(1, 6).Value = Me.WORK_ORDER_COMBOBOX.Value
    .Cells(1, 7).Value = Me.WORK_ORDER_MONTH.Value
    .Cells(1, 8).Value = Me.WORK_ORDER_YEAR.Value
    .Cells(1, 10).Value = Me.CURRENT_BASELINE_CHECKBOX.Value
  End With
  
  
  Unload Me
End Sub

Private Sub Label2_Click()

End Sub

Private Sub UserForm_Click()

End Sub

Private Sub UserForm_Initialize()

Dim YearValue As Integer
Dim ErrorName As String
Dim ErrorMonth As String
Dim ErrorYear As String
Dim ErrorCheck As Boolean

Dim SOURCE_SHEET As Worksheet
Set SOURCE_SHEET = ThisWorkbook.Worksheets(2)

ErrorName = SOURCE_SHEET.Cells(1, 6).Value
ErrorMonth = SOURCE_SHEET.Cells(1, 7).Value
ErrorYear = SOURCE_SHEET.Cells(1, 8).Value
ErrorCheck = SOURCE_SHEET.Cells(1, 10).Value
YearValue = Year(Date)

WORK_ORDER_COMBOBOX.AddItem "(Select Work Order Name)"
WORK_ORDER_COMBOBOX.AddItem "Pre Work Order Baseline"
WORK_ORDER_COMBOBOX.AddItem "Work Order Baseline 0"
WORK_ORDER_COMBOBOX.AddItem "Work Order Baseline 1"
WORK_ORDER_COMBOBOX.AddItem "Work Order Baseline 2"
WORK_ORDER_COMBOBOX.AddItem "Work Order Baseline 3"
WORK_ORDER_COMBOBOX.AddItem "Work Order Baseline 4"
WORK_ORDER_COMBOBOX.AddItem "Work Order Baseline 5"
WORK_ORDER_COMBOBOX.AddItem "Work Order Baseline 6"
WORK_ORDER_COMBOBOX.AddItem "Work Order Baseline 7"
WORK_ORDER_COMBOBOX.AddItem "Work Order Baseline 8"
WORK_ORDER_COMBOBOX.AddItem "Work Order Baseline 9"
WORK_ORDER_COMBOBOX.AddItem "Work Order Baseline 10"

WORK_ORDER_MONTH.AddItem "(Select Month)"
WORK_ORDER_MONTH.AddItem "Jan"
WORK_ORDER_MONTH.AddItem "Feb"
WORK_ORDER_MONTH.AddItem "Mar"
WORK_ORDER_MONTH.AddItem "Apr"
WORK_ORDER_MONTH.AddItem "May"
WORK_ORDER_MONTH.AddItem "Jun"
WORK_ORDER_MONTH.AddItem "Jul"
WORK_ORDER_MONTH.AddItem "Aug"
WORK_ORDER_MONTH.AddItem "Sep"
WORK_ORDER_MONTH.AddItem "Oct"
WORK_ORDER_MONTH.AddItem "Nov"
WORK_ORDER_MONTH.AddItem "Dec"

WORK_ORDER_YEAR.AddItem "(Select Year)"
WORK_ORDER_YEAR.AddItem YearValue
WORK_ORDER_YEAR.AddItem YearValue - 1
WORK_ORDER_YEAR.AddItem YearValue - 2
WORK_ORDER_YEAR.AddItem YearValue - 3
WORK_ORDER_YEAR.AddItem YearValue - 4
WORK_ORDER_YEAR.AddItem YearValue - 5


If ErrorName = "" Then
WORK_ORDER_COMBOBOX.Value = "(Select Work Order Name)"
Else
WORK_ORDER_COMBOBOX.Value = ErrorName
End If

If ErrorMonth = "" Then
WORK_ORDER_MONTH.Value = "(Select Month)"
Else
WORK_ORDER_MONTH.Value = ErrorMonth
End If

If ErrorYear = "" Then
WORK_ORDER_YEAR.Value = "(Select Year)"
Else
WORK_ORDER_YEAR.Value = ErrorYear
End If

If ErrorName = "" Then
CURRENT_BASELINE_CHECKBOX.Value = True
ElseIf ErrorCheck = False Then
CURRENT_BASELINE_CHECKBOX.Value = False
Else
CURRENT_BASELINE_CHECKBOX.Value = True
End If

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If CloseMode = 0 Then '========== ' don't close form here
  Cancel = True ' do what the Cancel button does
  Cancel_Work_Order_Selector_Click ' presumably the Cancel button also closes the form '==========
End If
End Sub


INQUEST-PP=macro
