Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "mod_Abfrage"
Option Explicit
'Der Programmcode in diesem Projekt kann ohne Einschr|fffd|nkung
'beliebig weiterverwendet werden.
'Es wird begr|fffd|sst, wenn Sie den folgenden Herkunfstvermerk nicht entfernen
'Zur Verf|fffd|gung gestellt von http://clever-investiert.info

'http://www.clever-investiert.info/default.aspx?blogid=44

'------------------------------------------------------------------------------

Sub KursErmitteln()
'Ermittelt mit Hilfe des Yahoo-APIs den aktuellen Kurs einer Aktie
'K. Hug, Tschappina, August 2014
Dim url As String
Dim TempFilename As String
Dim Ticker As String 's
Dim AktuellerKurs   'l1
Dim AktuellesDatum  'd1
Dim AktuelleZeit    't1
Dim Prozent|fffd|nderung 'p2

    'Doku zu finden auf
    'http://www.jarloo.com/yahoo_finance/

    'Bilde den Dateinamen der Datei, in welcher die heruntergeladenen Daten gespeichert werden.
    TempFilename = Environ("Temp") & "\yahoo_transfer.csv"

    'URL zum Aufruf des Yahoo-API
    url = "http://download.finance.yahoo.com/d/quotes.csv?s={0}&f=sl1d1t1p2c1ohgvm3m4&e=.csv"
    
    'Das Symbol steht in der Zelle A1
    Ticker = Range("A1")
    
    'Das Symbol wird im URL an der richtigen Stelle eingesetzt
    url = StrFormat(url, Ticker)
    
    'TransferCSVFromYahoo erledigt das Herunterladen und Speichern der Daten
    TransferCSVFromYahoo url, TempFilename
    
    'die gespeicherte Datei kann in Excel ge|fffd|ffnet werden, da sie im CSV-Format vorliegt
    Workbooks.Open TempFilename
    
    'Wir interessieren uns f|fffd|r einige Werte aus der ge|fffd|ffneten Datei
    'und |fffd|bertragen sie in die oben deklarierten Variablen
    AktuellerKurs = ActiveSheet.Range("B1")
    AktuellesDatum = ActiveSheet.Range("C1")
    AktuelleZeit = ActiveSheet.Range("D1")
    Prozent|fffd|nderung = ActiveSheet.Range("E1")

    'Wir brauchen die Datei mit den heruntergeladenen Werten nicht weiter,
    'drum wird sie geschlossen
    ActiveWorkbook.Close False
    'und wenn alles gut geht auch gel|fffd|scht
    On Error Resume Next
    Kill TempFilename
    On Error GoTo 0
    
    'zuletzt |fffd|bertragen wir die Werte, welche wir in den Variablen zwischengespeichert haben,
    'in unser Arbeitsblatt
    Range("B1") = AktuellerKurs
    Range("C1") = Prozent|fffd|nderung
    Range("D1") = AktuellesDatum
    Range("E1") = AktuelleZeit
    Range("C1").NumberFormat = "0.00%"
    
End Sub

Sub TestTransfer()
'Routine zum Testen der Prozedur TransferCSVFromYahoo
'K. Hug, Tschappina, August 2014
Dim url As String
    url = "http://download.finance.yahoo.com/d/quotes.csv?s=aapl,brk-b,goog,ibm,nesn.vx,sap.de&f=sl1d1t1c1p2ohgvm3m4&e=.csv"
    TransferCSVFromYahoo url, Environ("Temp") & "\file2.csv"
    Workbooks.Open Environ("Temp") & "\file2.csv"

End Sub

Sub TransferCSVFromYahoo(url As String, Filename As String)
'fragt die Kurse von Yahoo ab und schreibt das Ergebnis in eine Datei
'url:       der URL mit der Angabe der abzufragenden Aktien und der erw|fffd|nschten Felder
'Filename:  der Name der Datei, in welche das Resultat geschrieben werden soll.
'           Ist die Datei bereits vorhanden, wird sie |fffd|berschrieben.
'K. Hug, Tschappina, August 2014
Dim WinHttpReq As Object
Dim RetVal As String
Dim oStream As Object

    Set WinHttpReq = CreateObject("Microsoft.XMLHTTP")
    WinHttpReq.Open "GET", url, False
    WinHttpReq.send
    Do While WinHttpReq.ReadyState <> 4
        DoEvents
    Loop
    RetVal = WinHttpReq.responseBody
    On Error Resume Next
        Kill Filename
    On Error GoTo 0
    If WinHttpReq.Status = 200 Then
        Set oStream = CreateObject("ADODB.Stream")
        oStream.Open
        oStream.Type = 1
        oStream.Write WinHttpReq.responseBody
        oStream.SaveToFile Filename
        oStream.Close
    End If
    Set WinHttpReq = Nothing
End Sub
Attribute VB_Name = "mod_Tools"
Option Explicit

Function StrFormat(ByVal AnyString As String, Params As Variant) As String
'AUFGBABE:
    'Analog zur String-Format Funktion von .NET
'PARAMETER:
'   AnyString muss an den Stellen, wo etwas ersetzt werden soll,
'       Platzhalter im Format {0}, {1}, ... enthalten
'   Params kann entweder einen String enthalten, durch welchen jedes Vorkommen von {0} ersetzt wird,
'   oder ein String-Array enthalten, wenn mehrere Strings ersetzt werden sollen.
'R|fffd|CKGABE:
'   der String mit den ausgef|fffd|llten Platzhaltern
'FEHLERHANDLING:
'   keines
'K. Hug, Tschappina, August 2014


Dim P As String
Dim LookFor As String
Dim i As Integer

    If IsArray(Params) Then
        For i = 0 To UBound(Params)
            LookFor = "{" & i & "}"
            P = InStr(AnyString, LookFor)
            If P Then
                AnyString = MyReplace(AnyString, LookFor, (Params(i)))
            End If
        Next
    Else
        LookFor = "{0}"
        If Not IsNull(Params) Then
            AnyString = MyReplace(AnyString, LookFor, (Params))
        End If
    End If
    StrFormat = AnyString
End Function

Function MyReplace(ByVal AString As String, LookFor As String, ReplaceWith As String) As String
'K. Hug, Tschappina, August 2014

    Dim Found As Boolean
    Dim P As Long
    Do
        Found = False
        P = InStr(P + Len(LookFor), AString, LookFor)
        If P Then
            Found = True
            AString = Left(AString, P - 1) & ReplaceWith & Mid(AString, P + Len(LookFor))
        End If
    Loop While Found
    MyReplace = AString
End Function




INQUEST-PP=macro
