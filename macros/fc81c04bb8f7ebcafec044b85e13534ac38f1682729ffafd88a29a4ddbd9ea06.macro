Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Ersetzen"
Option Explicit

Sub Austausch()

    'Tauscht Werte in der ersten Tabelle der Arbeitsmappe
    'entsprechend der Austauschliste, die aktiv ist,
    'wenn das Makro aufgerufen wird.
    'Alle Zellen, die bearbeitet worden sind, werden gelb gef|fffd|rbt.
    'Erstellt: 13.09.2012 Stefan Jarsch, Corporate Engineering
    '08.05.2013: an ge|fffd|ndertes Listenformat angepasst (|fffd|berschrift). Jarsch
    
    'Voraussetzung:
    'Erste Tabelle ist die, die bearbeitet werden soll
    'Erste Zeile enth|fffd|lt Spalten|fffd|berschriften
    'Ersetzungstabelle enth|fffd|lt in Spalte A die Werte, die erstetzt werden
    'durch die Werte, die in Spalte B stehen.
    'Die |fffd|berschrift in A1 ist identisch zu der Spalten|fffd|berschrift in Tabelle 1
        
    Dim strHeaderToFind As String  'Spalten|fffd|berschrift
    Dim rngLastCell As Range
    Dim rng As Range
    Dim rngHead As Range
    Dim rngRow As Range
    Dim rngToRepl As Range
    Dim strSearch As String
    Dim strRepl As String
    Dim rngCol As Range
    Dim iColumn As Integer
    
    'Spalten|fffd|berschrift lesen
    strHeaderToFind = Range("A1").Value
    'Austauschliste identifizieren
    Set rng = ActiveSheet.Range("A2", Range("B1").End(xlDown))
    
    'Eplan Tabelle identifizieren
    Worksheets(1).Activate
    Set rngLastCell = ActiveSheet.Cells.SpecialCells(xlCellTypeLastCell)
    
    'Spalte zum Ersetzen anhand der |fffd|berschrift identifizieren
    Set rngHead = Range(Range("A1"), Cells(1, rngLastCell.Column))
    iColumn = 0 'Initialisierung
    For Each rngCol In rngHead.Columns
        If rngCol.Value = strHeaderToFind Then
            iColumn = rngCol.Column 'Spaltennummer
            Exit For    'fertig, wenn gefunden
        End If
    Next rngCol
    If iColumn = 0 Then
        'Abbrechen, wenn Spalte nicht gefunden
        MsgBox "Spalten|fffd|berschrift " & strHeaderToFind & " in " & ActiveSheet.Name & " nicht gefunden!", vbCritical
        Exit Sub
    End If
    
    'Bereich f|fffd|r Ersetzung bestimmen (ohne |fffd|berschrift)
    Set rngToRepl = Range(Cells(2, iColumn), Cells(rngLastCell.row, iColumn))
    'Bearbeitete Zellen gelb f|fffd|rben
    Application.ReplaceFormat.Interior.ColorIndex = 36 'gelb
    
    'Alle Suchwerte durchlaufen und in Eplan Tabelle ersetzen
    For Each rngRow In rng.Rows
        'Suchwert steht in der ersten Spalte
        strSearch = rngRow.Cells(1, 1)
        'Ersetzung steht in der zweiten Spalte
        strRepl = rngRow.Cells(1, 2)
        
        rngToRepl.Replace _
                        What:=strSearch, _
                        Replacement:=strRepl, _
                        LookAt:=xlWhole, _
                        SearchOrder:=xlByColumns, _
                        MatchCase:=False, _
                        MatchByte:=False, _
                        SearchFormat:=False, _
                        ReplaceFormat:=True
        
    Next rngRow
End Sub

Attribute VB_Name = "StlProzessor"
Option Explicit
Sub StlProz()
'
' Aufbereiten der Liste f|fffd|r St|fffd|cklistenprozessor:
' St|fffd|cklistenpositionen nach Artikelnummer aufsteigend eintragen
' Eplan Kopfzeilen l|fffd|schen, St|fffd|cklistenprozessor erlaubt nur eine |fffd|berschriftenzeile
' Erstellt: 25.06.2009 Jarsch, CE-EL
' 1.12.2011: Wiederherstellen der alten Sortierung gel|fffd|scht. Jarsch
' 25.04.2013: Gleiche Artikelnummern erhalten die selbe St|fffd|cklistenposition
' (Kumulierung f|fffd|r Teamcenter Import). Jarsch
' 08.05.2013: Kopfzeilen gel|fffd|scht und Felder, die relevant sind blau markiert. Laich
' 08.05.2013: Spalten werden anhand der |fffd|berschrift identifiziert.
' Gleiche Pos Nr. nur dann, wenn Artikelnr, Zusatztext und Beschaffungsrelevant
' gleich ist.
' 15.05.2013: Gleiche Pos Nr. nur dann, wenn auch gleiche L|fffd|nge.
'   Sortierung und Pos Nr. Vergabe iterativ Spalte f|fffd|r Spalte. Jarsch
' 04.12.2013: Gleiche Pos Nr. nur, wenn auch gleiche Breite und gleicher Doku-Kenner. Jarsch
' 03.02.2014: Sortierung nach Hersteller, Bezeichnung 1 und 2 vorangestellt. Jarsch
' 26.11.2015: Anpassung an TC10: Spaltennamen ge|fffd|ndert, Sortierung auch nach H|fffd|he und Dokumenten.

    Dim rngArtNr As Range
    Dim rngPosnr As Range
    Dim rngHerst As Range
    Dim rngBez1 As Range
    Dim rngBez2 As Range
    Dim rngRelevant As Range
    Dim rngLaenge As Range
    Dim rngBreite As Range
    Dim rngHoehe As Range
    Dim rngDocuments As Range
    Dim l As Long
    
    'Spalten|fffd|berschriften
    Const cPosNr = "Pos"
    Const cArtNr = "Materialnr"
    Const cHerst = "Hersteller" & vbLf
    Const cBez1 = "Bezeichnung"
    Const cBez2 = "Kenngr|fffd||fffd|e"
    Const cRelevant = "Beschaffungsrelevant"
    Const cLaenge = "L|fffd|nge"
    Const cBreite = "Breite"
    Const cHoehe = "H|fffd|he"
    Const cDocuments = "Dokumente in Kontext"

    On Error GoTo Fehler
    
    'Spaltenk|fffd|pfe anhand der |fffd|berschrift identifizieren
    Set rngPosnr = getCol(cPosNr)
    Set rngArtNr = getCol(cArtNr)
    Set rngHerst = getCol(cHerst)
    Set rngBez1 = getCol(cBez1)
    Set rngBez2 = getCol(cBez2)
    Set rngRelevant = getCol(cRelevant)
    Set rngLaenge = getCol(cLaenge)
    Set rngBreite = getCol(cBreite)
    Set rngHoehe = getCol(cHoehe)
    Set rngDocuments = getCol(cDocuments)
    
    'eventuell vorhandenen Positionsnummern l|fffd|schen
    rngPosnr.Resize(rngPosnr.Rows.Count - 1, 1).Offset(1, 0).Clear    'Um 1 nach unten verschoben wegen |fffd|berschrift
    'Positionsnummern vergeben in mehreren Durchl|fffd|ufen
    'nacheinander nach verschiedenen Spalten => Sortierung
    l = setPosNr(rngPosnr, rngHerst)    '1.: PosNr Unterscheidung Hersteller
    l = setPosNr(rngPosnr, rngBez1)     '2.: PosNr Unterscheidung Bezeichnung 1
    l = setPosNr(rngPosnr, rngBez2)     '3.: PosNr Unterscheidung Bezeichnung 2
    l = setPosNr(rngPosnr, rngArtNr)    '4.: PosNr Unterscheidung Artikelnummer
    If l = 1 Then
        MsgBox "Die Liste enth|fffd|lt Positionen ohne Artikelnummer!", vbCritical
    End If
    l = setPosNr(rngPosnr, rngRelevant) '6.: PosNr + Unterscheidung Beschaffungsrelevant
    l = setPosNr(rngPosnr, rngLaenge)   '7.: PosNr + Unterscheidung L|fffd|nge
    l = setPosNr(rngPosnr, rngBreite)   '8.: PosNr + Unterscheidung Breite
    l = setPosNr(rngPosnr, rngHoehe)    '9.: PosNr + Unterscheidung H|fffd|he
    l = setPosNr(rngPosnr, rngDocuments) '11.: PosNr + Unterscheidung Dokumente im Kontext
    
Exit Sub

Fehler:   'Sammelmeldung
    MsgBox "Die Liste konnte nicht korrekt aufbereitet werden." & vbCrLf _
        & "Bearbeitung abgebrochen.", vbCritical
        
End Sub

Private Function getCol(strName As String) As Range
    '|fffd|berschriftenzeile durchsuchen nach passender |fffd|berschrift
    Dim col As Range
    For Each col In ActiveSheet.Columns
        If Left(col.Cells(1, 1).Value, Len(strName)) = strName Then
            '|fffd|berschrift gefunden, Spalte zur|fffd|ckmelden
            Set getCol = col
            Exit Function    'fertig
        End If
    Next col
    'alles durchsucht, nix gefunden
    MsgBox "|fffd|berschrift " & strName & " nicht gefunden.", vbCritical

End Function

Private Function setPosNr(rngPosnr As Range, rngColumn As Range) As Long
    'Bei jedem Aufruf wird nach der PosNr und einer Spalte sortiert.
    'Immer wenn ein Unterschied auftritt, wird die PosNr hochgez|fffd|hlt
    'und neu eingetragen. Damit kann die Liste iterativ |fffd|ber mehrere
    'Spalten sortiert und nummeriert werden.
    
    Dim rngListe As Range
    Dim row As Range
    Dim strValue As String
    Dim lPosNr As Long
    Dim lPosVal As Long
    
    
    'Tabelle ohne |fffd|berschrift
    Set rngListe = ActiveSheet.Range("A2", ActiveSheet.Cells.SpecialCells(xlCellTypeLastCell))
    'Tabelle nach Artikelnummer, Zusatztext und Beschaffungsrelevant sortieren
    rngListe.Sort _
        key1:=rngPosnr, order1:=xlAscending, _
        key2:=rngColumn, order2:=xlAscending, _
        header:=xlNo, _
        OrderCustom:=1, MatchCase:=True, Orientation:=xlTopToBottom

    
    'Postitionsnummern eintragen
    'Initialisierung
    setPosNr = 0    'Funkitons-R|fffd|ckmeldung
    lPosNr = 0      'einzutragende Positionsnummer
    lPosVal = 0     'gelesene Positionsnummer
    strValue = ""   'gelesener Zellinhalt
    
    'alle Zeilen durchlaufen und PosNr eintragen
    For Each row In rngListe.Rows
        If Not _
            (lPosVal = row.Cells(1, rngPosnr.Column).Value _
             And strValue = row.Cells(1, rngColumn.Column).Value) _
        Then
            'Unterschied zur vorhergehenden Position?
            lPosNr = lPosNr + 1                                 'neue Positionsnummer
            lPosVal = row.Cells(1, rngPosnr.Column).Value       'alte PosNr merken
            strValue = row.Cells(1, rngColumn.Column).Value     'Inhalt merken
            If strValue = "" Then setPosNr = 1                  'Meldung: leere Zellen in Liste
        End If
        row.Cells(1, rngPosnr.Column).Value = lPosNr            'Positionsnummer eintragen
    Next row
    
    'Cursor auf erste Zelle setzen
    Range("A2").Select

End Function
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit



INQUEST-PP=macro
