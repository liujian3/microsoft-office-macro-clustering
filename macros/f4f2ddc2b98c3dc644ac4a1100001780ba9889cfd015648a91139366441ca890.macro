Attribute VB_Name = "FormCopyTo"
Attribute VB_Base = "0{1681515E-95A5-4A59-96F5-E018FA610C2A}{A5778295-46FD-4D4D-9FA0-3659A53FA41B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit    'Este form deu origem ao FormPgStpManager e Mod3PicFileNames que |fffd| o novo utilit|fffd|rio PageSetpMgr for Excel aqui integrado
Dim Form_hWnd1 As Long
Dim Wb As Workbook
Dim Sh As Object    'Worksheet xpms
Dim StoreArr(62)

Private Sub Close_Bt_Click()
    Unload Me
End Sub

Private Sub Copy_Bt_Click()
    Dim CopyCount
    Dim CopyCnt As Long
    CopyCount = CopyCountOnly
    Hide
    If TypeName(StoreSettings(True)) = "Variant()" Then
        For Each Wb In appHostApp.Workbooks
            If Wb.Windows(1).Visible And _
                    (Left(Workbook_Cb.Value, 1) = "[" Or Workbook_Cb.Value = Wb.Name) Then
                For Each Sh In Wb.Sheets
                    If Not (Wb.Name = TargetWb.Name And Sh.Name = TargetSh.Name) And _
                            (Left(Sheet_Cb.Value, 1) = "[" Or Sheet_Cb.Value = Sh.Name) And TypeName(Sh) = "Worksheet" Then       'xpms
                        Wb.Activate    ': If dHostAppVer >= 11 + 1 + 2 + 1 Then SetForegroundWindowEsp Wb.Windows(1).hWnd, 0.5  'In Excel 15 hiding a modal form can change TargetWb focus.
                        Sh.Activate
                        CopyCnt = CopyCnt + 1
                        appHostApp.StatusBar = IIf(IsPortg, "Copiando " & CopyCnt & " de " & CopyCount, "Copying " & CopyCnt & " of " & CopyCount)
                        If Alert_ChB.Value Then
                            If IsPortg Then
                                Msg1 = "Copiar para:" & Chr(10) & "   Pasta: " & Wb.Name & Chr(10) & "   Planilha: " & Sh.Name & "?"
                                Msg2 = sAddInCaptByApp & " - Copiar Marca-d'|fffd|gua"
                            Else
                                Msg1 = "Copy to:" & Chr(10) & "   Workbook: " & Wb.Name & Chr(10) & "   Sheet: " & Sh.Name & "?"
                                Msg2 = sAddInCaptByApp & " - Copy Watermark"
                            End If
                            If MyMsgBox(Msg1, 2, Msg2) = 1 Then SetStoreSettings
                        Else
                            SetStoreSettings
                        End If
                    End If
                Next
            End If
        Next
        appHostApp.StatusBar = False
    End If
    If CopyCnt > 1 Then Unload Me Else Show 1
End Sub

Private Function CopyCountOnly()
'Conta usando os mesmos loops para inserir
    Dim CopyCnt As Long
    For Each Wb In appHostApp.Workbooks
        If Wb.Windows(1).Visible And _
                (Left(Workbook_Cb.Value, 1) = "[" Or Workbook_Cb.Value = Wb.Name) Then
            For Each Sh In Wb.Sheets
                If Not (Wb.Name = TargetWb.Name And Sh.Name = TargetSh.Name) And _
                        (Left(Sheet_Cb.Value, 1) = "[" Or Sheet_Cb.Value = Sh.Name) Then
                    CopyCnt = CopyCnt + 1
                End If
            Next
        End If
    Next
    CopyCountOnly = CopyCnt
End Function

Public Function StoreSettings(bStorePictSet As Boolean)
    StoreSettings = False
    Msg1 = IIf(IsPortg, "O caminho do arquivo da figura a copiar de ''PgType'' foi perdido. C|fffd|pia s|fffd| pode ser feita na mesma sess|fffd|o da inclus|fffd|o." & _
            " Insira novamente ou copie usando o utilit|fffd|rio Gerenciador de Configura|fffd||fffd|o de P|fffd|gina para Excel." & _
            vbCrLf & vbCrLf & sMsgAboutGCP, _
            "The path of the picture file to copy from ''PgType'' was lost. Copy only can be done in the same inclusion session." & _
            " Insert again or copy using the Page Setup Manager for Excel utility." & _
            vbCrLf & vbCrLf & sMsgAboutPSM)
    Msg2 = sAddInCaptByApp & " - " & IIf(IsPortg, "Copiar Figura - Falha!", "Copy Picture - Fail!")

    With TargetSh.PageSetup
        If PaperSize_ChB.Value Then
            StoreArr(0) = .PaperSize
        End If
        If Orientation_ChB.Value Then
            StoreArr(1) = .Orientation
        End If
        If Magins_ChB.Value Then
            StoreArr(2) = .LeftMargin
            StoreArr(3) = .RightMargin
            StoreArr(4) = .TopMargin
            StoreArr(5) = .BottomMargin
            StoreArr(6) = .HeaderMargin
            StoreArr(7) = .FooterMargin
        End If

        StoreArr(8) = .LeftHeader
        If AllHeader_ChB.Value Then
            StoreArr(9) = .CenterHeader
            StoreArr(10) = .RightHeader
            StoreArr(11) = .LeftFooter
            StoreArr(12) = .CenterFooter
            StoreArr(13) = .RightFooter
        End If

        If bStorePictSet And InStr(1, .LeftHeader, "&G") > 0 Then
            If VBA.FileSystem.Dir(.LeftHeaderPicture.Filename) = "" Then
                Msg1 = Replace(Msg1, "PgType", IIf(IsPortg, "P|fffd|gina Padr|fffd|o", "Default Page"))
                If MyMsgBox(Msg1, 2, Msg2) = 1 Then
                    appHostApp.ActiveWorkbook.FollowHyperlink "http://cpap.com.br/orlando/" & "ExcelPageSetpMgr" & IIf(IsPortg, "Mais.asp?IdC=ProcInfo", "More.asp?IdC=LookInfo"), , True  'DifAppMet
                End If
                Exit Function
            End If

            With .LeftHeaderPicture
                StoreArr(14) = .Filename

                StoreArr(15) = .CropBottom
                StoreArr(16) = .CropLeft
                StoreArr(17) = .CropRight
                StoreArr(18) = .CropTop
                StoreArr(19) = .Height
                StoreArr(20) = .Width
                StoreArr(21) = .LockAspectRatio

                StoreArr(22) = .Brightness
                StoreArr(23) = .Contrast
                StoreArr(24) = .ColorType
            End With
        End If

        If dHostAppVer < 11 + 1 Then GoTo Fim

        StoreArr(25) = .FirstPage.LeftHeader.Text
        If AllHeader_ChB.Value Then
            StoreArr(26) = .FirstPage.CenterHeader.Text
            StoreArr(27) = .FirstPage.RightHeader.Text
            StoreArr(28) = .FirstPage.LeftFooter.Text
            StoreArr(29) = .FirstPage.CenterFooter.Text
            StoreArr(30) = .FirstPage.RightFooter.Text
        End If

        If bStorePictSet And InStr(1, .FirstPage.LeftHeader.Text, "&G") > 0 Then
            If VBA.FileSystem.Dir(.FirstPage.LeftHeader.Picture.Filename) = "" Then
                Msg1 = Replace(Msg1, "PgType", IIf(IsPortg, "Primeira P|fffd|gina", "First Page"))
                If MyMsgBox(Msg1, 2, Msg2) = 1 Then
                    appHostApp.ActiveWorkbook.FollowHyperlink "http://cpap.com.br/orlando/" & "ExcelPageSetpMgr" & IIf(IsPortg, "Mais.asp?IdC=ProcInfo", "More.asp?IdC=LookInfo"), , True  'DifAppMet
                End If
                Exit Function
            End If

            With .FirstPage.LeftHeader.Picture
                StoreArr(31) = .Filename

                StoreArr(32) = .CropBottom
                StoreArr(33) = .CropLeft
                StoreArr(34) = .CropRight
                StoreArr(35) = .CropTop
                StoreArr(36) = .Height
                StoreArr(37) = .Width
                StoreArr(38) = .LockAspectRatio

                StoreArr(39) = .Brightness
                StoreArr(40) = .Contrast
                StoreArr(41) = .ColorType
            End With
        End If

        StoreArr(42) = .EvenPage.LeftHeader.Text
        If AllHeader_ChB.Value Then
            StoreArr(43) = .EvenPage.CenterHeader.Text
            StoreArr(44) = .EvenPage.RightHeader.Text
            StoreArr(45) = .EvenPage.LeftFooter.Text
            StoreArr(46) = .EvenPage.CenterFooter.Text
            StoreArr(47) = .EvenPage.RightFooter.Text
        End If

        If bStorePictSet And InStr(1, .EvenPage.LeftHeader.Text, "&G") > 0 Then
            If VBA.FileSystem.Dir(.EvenPage.LeftHeader.Picture.Filename) = "" Then
                Msg1 = Replace(Msg1, "PgType", IIf(IsPortg, "P|fffd|gina Pares", "Even Pages"))
                If MyMsgBox(Msg1, 2, Msg2) = 1 Then
                    appHostApp.ActiveWorkbook.FollowHyperlink "http://cpap.com.br/orlando/" & "ExcelPageSetpMgr" & IIf(IsPortg, "Mais.asp?IdC=ProcInfo", "More.asp?IdC=LookInfo"), , True  'DifAppMet
                End If
                Exit Function
            End If

            With .EvenPage.LeftHeader.Picture
                StoreArr(48) = .Filename

                StoreArr(49) = .CropBottom
                StoreArr(50) = .CropLeft
                StoreArr(51) = .CropRight
                StoreArr(52) = .CropTop
                StoreArr(53) = .Height
                StoreArr(54) = .Width
                StoreArr(55) = .LockAspectRatio

                StoreArr(56) = .Brightness
                StoreArr(57) = .Contrast
                StoreArr(58) = .ColorType
            End With
        End If
        StoreArr(59) = .DifferentFirstPageHeaderFooter
        StoreArr(60) = .OddAndEvenPagesHeaderFooter
        StoreArr(61) = .ScaleWithDocHeaderFooter
        StoreArr(62) = .AlignMarginsHeaderFooter
    End With

Fim:
    StoreSettings = StoreArr()
End Function

Sub SetStoreSettings()
    With Sh.PageSetup
        If PaperSize_ChB.Value Then
            On Error Resume Next: .PaperSize = StoreArr(0): On Error GoTo 0    'xpms Um tamanho pode ser estocado mas n|fffd|o ser aceito para definir, por exemplo, 287.
        End If
        If Orientation_ChB.Value Then
            .Orientation = StoreArr(1)
        End If
        If Magins_ChB.Value Then
            .LeftMargin = StoreArr(2)
            .RightMargin = StoreArr(3)
            .TopMargin = StoreArr(4)
            .BottomMargin = StoreArr(5)
            .HeaderMargin = StoreArr(6)
            .FooterMargin = StoreArr(7)
        End If

        .LeftHeader = StoreArr(8)
        If AllHeader_ChB.Value Then  'Only copy h/f if there isn't picture in both side
            If InStr(1, .CenterHeader, "&G") + InStr(1, StoreArr(9), "&G") = 0 _
                    Then .CenterHeader = StoreArr(9)
            If InStr(1, .RightHeader, "&G") + InStr(1, StoreArr(10), "&G") = 0 _
                    Then .RightHeader = StoreArr(10)
            If InStr(1, .LeftFooter, "&G") + InStr(1, StoreArr(11), "&G") = 0 _
                    Then .LeftFooter = StoreArr(11)
            If InStr(1, .CenterFooter, "&G") + InStr(1, StoreArr(12), "&G") = 0 _
                    Then .CenterFooter = StoreArr(12)
            If InStr(1, .RightFooter, "&G") + InStr(1, StoreArr(13), "&G") = 0 _
                    Then .RightFooter = StoreArr(13)
        End If

        If StoreArr(14) <> Empty Then
            With .LeftHeaderPicture
                .Filename = StoreArr(14)

                .LockAspectRatio = msoFalse
                .CropBottom = StoreArr(15)
                .CropLeft = StoreArr(16)
                .CropRight = StoreArr(17)
                .CropTop = StoreArr(18)
                .Height = StoreArr(19)
                .Width = StoreArr(20)
                .LockAspectRatio = StoreArr(21)

                .Brightness = StoreArr(22)
                .Contrast = StoreArr(23)
                If StoreArr(24) <> -2 Then .ColorType = StoreArr(24)
            End With
        End If

        If dHostAppVer < 11 + 1 Then GoTo Fim

        .FirstPage.LeftHeader.Text = StoreArr(25)
        If AllHeader_ChB.Value Then  'Only copy h/f if there isn't picture in both side
            If InStr(1, .FirstPage.CenterHeader.Text, "&G") + InStr(1, StoreArr(26), "&G") = 0 _
                    Then .FirstPage.CenterHeader.Text = StoreArr(26)
            If InStr(1, .FirstPage.RightHeader.Text, "&G") + InStr(1, StoreArr(27), "&G") = 0 _
                    Then .FirstPage.RightHeader.Text = StoreArr(27)
            If InStr(1, .FirstPage.LeftFooter.Text, "&G") + InStr(1, StoreArr(28), "&G") = 0 _
                    Then .FirstPage.LeftFooter.Text = StoreArr(28)
            If InStr(1, .FirstPage.CenterFooter.Text, "&G") + InStr(1, StoreArr(29), "&G") = 0 _
                    Then .FirstPage.CenterFooter.Text = StoreArr(29)
            If InStr(1, .FirstPage.RightFooter.Text, "&G") + InStr(1, StoreArr(30), "&G") = 0 _
                    Then .FirstPage.RightFooter.Text = StoreArr(30)
        End If

        If StoreArr(31) <> Empty Then
            With .FirstPage.LeftHeader.Picture
                .Filename = StoreArr(31)

                .LockAspectRatio = msoFalse
                .CropBottom = StoreArr(32)
                .CropLeft = StoreArr(33)
                .CropRight = StoreArr(34)
                .CropTop = StoreArr(35)
                .Height = StoreArr(36)
                .Width = StoreArr(37)
                .LockAspectRatio = StoreArr(38)

                .Brightness = StoreArr(39)
                .Contrast = StoreArr(40)
                If StoreArr(41) <> -2 Then .ColorType = StoreArr(41)
            End With
        End If

        .EvenPage.LeftHeader.Text = StoreArr(42)
        If AllHeader_ChB.Value Then  'Only copy h/f if there isn't picture in both side
            If InStr(1, .EvenPage.CenterHeader.Text, "&G") + InStr(1, StoreArr(43), "&G") = 0 _
                    Then .EvenPage.CenterHeader.Text = StoreArr(43)
            If InStr(1, .EvenPage.RightHeader.Text, "&G") + InStr(1, StoreArr(44), "&G") = 0 _
                    Then .EvenPage.RightHeader.Text = StoreArr(44)
            If InStr(1, .EvenPage.LeftFooter.Text, "&G") + InStr(1, StoreArr(45), "&G") = 0 _
                    Then .EvenPage.LeftFooter.Text = StoreArr(45)
            If InStr(1, .EvenPage.CenterFooter.Text, "&G") + InStr(1, StoreArr(46), "&G") = 0 _
                    Then .EvenPage.CenterFooter.Text = StoreArr(46)
            If InStr(1, .EvenPage.RightFooter.Text, "&G") + InStr(1, StoreArr(47), "&G") = 0 _
                    Then .EvenPage.RightFooter.Text = StoreArr(47)
        End If

        If StoreArr(48) <> Empty Then
            With .EvenPage.LeftHeader.Picture
                .Filename = StoreArr(48)

                .LockAspectRatio = msoFalse
                .CropBottom = StoreArr(49)
                .CropLeft = StoreArr(50)
                .CropRight = StoreArr(51)
                .CropTop = StoreArr(52)
                .Height = StoreArr(53)
                .Width = StoreArr(54)
                .LockAspectRatio = StoreArr(55)

                .Brightness = StoreArr(56)
                .Contrast = StoreArr(57)
                If StoreArr(58) <> -2 Then .ColorType = StoreArr(58)
            End With
        End If
        .DifferentFirstPageHeaderFooter = StoreArr(59)
        .OddAndEvenPagesHeaderFooter = StoreArr(60)
        .ScaleWithDocHeaderFooter = StoreArr(61)
        .AlignMarginsHeaderFooter = StoreArr(62)
    End With

Fim:
    Dim lCellCount As Double
    If dHostAppVer < 11 + 1 Then lCellCount = Sh.Cells.Count _
        Else lCellCount = Sh.Cells.CountLarge
    If appHostApp.WorksheetFunction.CountBlank(Sh.Cells) = lCellCount _
            And Sh.Shapes.Count = 0 And Sh.ProtectContents = False Then Sh.Range("A1").Value = " "
End Sub

Private Sub NewSh_Lb_Click()
    Dim Sh1 As Worksheet
    On Error Resume Next
    appHostApp.Workbooks(Workbook_Cb.Value).Activate
    Set Sh1 = appHostApp.Workbooks(Workbook_Cb.Value).Sheets(appHostApp.Workbooks(Workbook_Cb.Value).Sheets.Count)
    Set Sh1 = appHostApp.Workbooks(Workbook_Cb.Value).Sheets.Add(After:=Sh1)
    If Err.Number <> 0 Then
        MyMsgBox Err.Description, 1, sAddInCaptByApp & " - " & IIf(IsPortg, "Falha!", "Fail!")
        Exit Sub
    End If

    Workbook_Cb_Change
    Sheet_Cb.Value = Sh1.Name
    If IsPortg Then
        Msg1 = "A nova planilha ''" & Sh1.Name & "'' foi criada na pasta ''" & Workbook_Cb.Value & "''."
        Msg2 = sAddInCaptByApp & " - Nova planilha"
    Else
        Msg1 = "The new sheet ''" & Sh1.Name & "'' was created on the workbook ''" & Workbook_Cb.Value & "''."
        Msg2 = sAddInCaptByApp & " - New sheet"
    End If
    MyMsgBox Msg1, 1, Msg2
    Copy_Bt_Click
End Sub

Private Sub NewWb_Lb_Click()
    Dim Wb1 As Workbook
    Set Wb1 = appHostApp.Workbooks.Add
    TargetWb.Activate: ActWbWinAppSDIBaseForm Form_hWnd1
    TargetSh.Activate

    vEnableEvents = False
    Do While Workbook_Cb.ListCount > 0
        Workbook_Cb.RemoveItem (0)
    Loop
    vEnableEvents = True
    UserForm_Initialize
    Workbook_Cb.Value = Wb1.Name
    MyMsgBox IIf(IsPortg, "A nova pasta ''" & Wb1.Name & "'' foi criada.", "The new workbook ''" & Wb1.Name & "'' was created"), 1, sAddInCaptByApp & " - " & IIf(IsPortg, "Novo", "New")
End Sub

Private Sub Open_Lb_Click()
    If Not appHostApp.Dialogs(xlDialogOpen).Show Then Exit Sub
    TargetWb.Activate: ActWbWinAppSDIBaseForm Form_hWnd1
    TargetSh.Activate

    vEnableEvents = False
    Do While Workbook_Cb.ListCount > 0
        Workbook_Cb.RemoveItem (0)
    Loop
    vEnableEvents = True
    UserForm_Initialize
End Sub

Private Sub Close_Lb_Click()
    If Left(Workbook_Cb.Value, 1) = "[" Then
        If IsPortg Then
            Msg1 = "Fechar todas as pastas, exceto a pasta fonte de c|fffd|pia. OK?"
            Msg2 = sAddInCaptByApp & " - Fechar"
        Else
            Msg1 = "Close all workbooks, except the copy source workbook. OK?"
            Msg2 = sAddInCaptByApp & " - Close"
        End If
        If MyMsgBox(Msg1, 2, Msg2) = 2 Then Exit Sub
        For Each Wb In appHostApp.Workbooks
            If Wb.Windows(1).Visible And Wb.Name <> TargetWb.Name Then
                Wb.Close
            End If
        Next
    Else
        If Workbook_Cb.Value = TargetWb.Name Then
            MyMsgBox IIf(IsPortg, "A pasta fonte de c|fffd|pia n|fffd|o pode ser fechada!", "The copy source workbook cannot be closed!"), 1, sAddInCaptByApp & " - " & IIf(IsPortg, "Fechar", "Close")
            Exit Sub
        End If
        If MyMsgBox(IIf(IsPortg, "Fechar a pasta ''" & Workbook_Cb.Value & "''. OK? ", "Close the workbook ''" & Workbook_Cb.Value & "''. OK?"), 2, sAddInCaptByApp & " - " & IIf(IsPortg, "Fechar", "Close")) = 2 Then Exit Sub
        appHostApp.Workbooks(Workbook_Cb.Value).Close
    End If

    vEnableEvents = False
    Do While Workbook_Cb.ListCount > 0
        Workbook_Cb.RemoveItem (0)
    Loop
    vEnableEvents = True
    UserForm_Initialize
End Sub

Private Sub UserForm_Initialize()
    If Not IsPortg Then
        Caption = sAddInCaptByApp & " - Copiar Marca-d'|fffd|gua"
        Workbook_Lb.Caption = "Pastas Abertas:"
        Sheet_Lb.Caption = "Planilhas na Pasta Selecionada:"
        FromDisk_Lb.Caption = "Outras do disco:"
        NewWb_Lb.Caption = "Nova"
        NewSh_Lb.Caption = "Nova"
        Open_Lb.Caption = "Abrir"
        Close_Lb.Caption = "Fechar"
        From_Lb.Caption = "De:"
        To_Lb.Caption = "Para:"
        Options_Lb.Caption = "Copiar Tamb|fffd|m:"
        Copy_Bt.Caption = "Copiar"
        PaperSize_ChB.Caption = "Tamanho do papel"
        Orientation_ChB.Caption = "Orienta|fffd||fffd|o de p|fffd|gina"
        Magins_ChB.Caption = "Tamanhos das margens"
        AllHeader_ChB.Caption = "Config. de cabe|fffd|. e rodap|fffd|s sem figuras"
        Alert_ChB.Caption = "Confirmar antes de cada c|fffd|pia"
        FromWorkbook_Lb.Caption = "Pasta: " & TargetWb.Name
        FromSheet_Lb.Caption = "Planilha: " & TargetSh.Name
    Else
        Caption = sAddInCaptByApp & " - Copy Watermark"
        FromWorkbook_Lb.Caption = "Workbook: " & TargetWb.Name
        FromSheet_Lb.Caption = "Sheet: " & TargetSh.Name
    End If

    vEnableEvents = False
    For Each Wb In appHostApp.Workbooks
        If Wb.Windows(1).Visible Then
            Workbook_Cb.AddItem (Wb.Name)
        End If
    Next
    vEnableEvents = True

    If Workbook_Cb.ListCount > 1 Then
        Workbook_Cb.AddItem (IIf(IsPortg, "[Todas]", "[All]"))
        Workbook_Cb.Value = IIf(IsPortg, "[Todas]", "[All]")
    Else
        Workbook_Cb.Value = TargetWb.Name
    End If

    'Get form handle
    Form_hWnd1 = FindWindowA(IIf(bIsCOMAddin, "ThunderRT6DFrame", "ThunderDFrame"), Caption)
    If Form_hWnd1 = 0 Then Form_hWnd1 = FindWindowA(vbNullString, Caption)
    'Basear o form na janela do Excel
    If bIsCOMAddin Then SetWindowLongA Form_hWnd1, GWL_HWNDPARENT, App_hWnd
    'Fixar form
    If bIsCOMAddin Then FixForm Form_hWnd1    'Se alterar caption, precisa aplicar novamente
End Sub

Private Sub Workbook_Cb_Change()
    If vEnableEvents = False Then Exit Sub
    If Workbook_Cb.Value = "" Then Exit Sub
    If Left(Workbook_Cb.Value, 1) = "[" Then
        Sheet_Cb.Enabled = False
        Sheet_Cb.AddItem (IIf(IsPortg, "[Todas em todas]", "[All in all]"))
        Sheet_Cb.ListIndex = Sheet_Cb.ListCount - 1
        NewSh_Lb.Enabled = False
        TargetWb.Activate: ActWbWinAppSDIBaseForm Form_hWnd1
        TargetSh.Activate
        Exit Sub
    Else
        Sheet_Cb.Enabled = True
        NewSh_Lb.Enabled = True
        appHostApp.Workbooks(Workbook_Cb.Value).Activate: ActWbWinAppSDIBaseForm Form_hWnd1
    End If

    vEnableEvents = False
    Do While Sheet_Cb.ListCount > 0
        Sheet_Cb.RemoveItem (0)
    Loop
    Sheet_Cb.ListIndex = -1
    vEnableEvents = True
    For Each Sh In appHostApp.Workbooks(Workbook_Cb.Value).Sheets
        If (Workbook_Cb.Value = TargetWb.Name _
                And Sh.Name = TargetSh.Name) Or TypeName(Sh) <> "Worksheet" Then Else _
                Sheet_Cb.AddItem (Sh.Name)    'xpms
    Next
    If Sheet_Cb.ListCount > 1 Then
        Sheet_Cb.AddItem (IIf(IsPortg, "[Todas]", "[All]"))
        Sheet_Cb.ListIndex = Sheet_Cb.ListCount - 1
        TargetWb.Activate: ActWbWinAppSDIBaseForm Form_hWnd1
        TargetSh.Activate
    End If
    If Sheet_Cb.ListCount = 1 Then
        Sheet_Cb.ListIndex = Sheet_Cb.ListCount - 1
    End If
    If Sheet_Cb.ListCount = 0 Then
        Msg1 = IIf(IsPortg, "N|fffd|o h|fffd| outra planilha na pasta ''" & Workbook_Cb.Value & "'' para destino de c|fffd|pia!", "There isn't other sheet on workbook ''" & Workbook_Cb.Value & "'' to copy destination!")
        Msg2 = sAddInCaptByApp & " - " & sAddInCaptByApp & IIf(IsPortg, "Imposs|fffd|vel Copiar!", "Copy Impossible!")
        MyMsgBox Msg1, 1, Msg2
        Copy_Bt.Enabled = False
    Else
        Copy_Bt.Enabled = True
    End If
End Sub

Private Sub Sheet_Cb_Change()
    If vEnableEvents = False Then Exit Sub
    If Left(Sheet_Cb.Value, 1) <> "[" Then
        If Left(Workbook_Cb.Value, 1) <> "[" Then
            appHostApp.Workbooks(Workbook_Cb.Value).Activate: ActWbWinAppSDIBaseForm Form_hWnd1
            appHostApp.ActiveWorkbook.Sheets(Sheet_Cb.Value).Activate
        Else
            TargetWb.Activate: ActWbWinAppSDIBaseForm Form_hWnd1
            TargetSh.Activate
        End If
    Else
        TargetWb.Activate: ActWbWinAppSDIBaseForm Form_hWnd1
        TargetSh.Activate
    End If
End Sub
Attribute VB_Name = "FormImageControl"
Attribute VB_Base = "0{86765566-D1AA-4E98-878F-267B8BF463E5}{E5880D05-0974-40B5-A136-086173A2EE7D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit
Dim HrzHdftPosPict As Graphic
Dim Form_hWnd1 As Long
Dim IniColorType As Double
Dim IniBrightness As Double
Dim IniContrast As Double

Private Sub Cancel_Bt_Click()
    If PressBot = 1 Then Exit Sub
    HrzHdftPosPict.ColorType = IIf(IniColorType = -2, 1, IniColorType)
    HrzHdftPosPict.Brightness = IniBrightness
    HrzHdftPosPict.Contrast = IniContrast
    Set HrzHdftPosPict = Nothing
    Unload Me
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If CloseMode = 0 Then Cancel_Bt_Click
End Sub

Private Sub Ok_Bt_Click()
    PressBot = 1
    Unload Me
End Sub

Private Sub UserForm_Activate()
    Top = FormWatermark.Top + FormWatermark.Preview_Bt.Top * Twips
    Left = FormWatermark.Left + FormWatermark.Preview_Bt.Left * Twips
End Sub

Private Sub UserForm_Initialize()
    If IsPortg Then
        Caption = "Controle da Imagem" & IIf(bCalledByPageStpMgr, " - " & PictPosSpell(lDiffPage, lEntryPointHdFt), " da Figura")
        Color_Lb.Caption = "Cor:"
        Brightness_Lb.Caption = "Brilho:"
        Contrast_Lb.Caption = "Contraste:"
        Preview_Bt.Caption = "Visualizar"
    Else
        Caption = "Image Control" & IIf(bCalledByPageStpMgr, " - " & PictPosSpell(lDiffPage, lEntryPointHdFt), " of the Picutre")
    End If

    With Color_Cb
        .AddItem (IIf(IsPortg, "Misto", "Mixed"))
        .AddItem (IIf(IsPortg, "Autom|fffd|tico", "Automatic"))
        .AddItem (IIf(IsPortg, "Escala de Cinza", "Grayscale"))
        .AddItem (IIf(IsPortg, "Preto e Branco", "Black And White"))
        .AddItem (IIf(IsPortg, "Marca-d'|fffd|gua", "Watermark"))
    End With

    With TargetSh.PageSetup
        Select Case lDiffPage
        Case 0
            Select Case lEntryPointHdFt
            Case 1: Set HrzHdftPosPict = .LeftHeaderPicture
            Case 2: Set HrzHdftPosPict = .CenterHeaderPicture
            Case 3: Set HrzHdftPosPict = .RightHeaderPicture
            Case 4: Set HrzHdftPosPict = .LeftFooterPicture
            Case 5: Set HrzHdftPosPict = .CenterFooterPicture
            Case 6: Set HrzHdftPosPict = .RightFooterPicture
            End Select
        Case 1
            Select Case lEntryPointHdFt
            Case 1: Set HrzHdftPosPict = .FirstPage.LeftHeader.Picture
            Case 2: Set HrzHdftPosPict = .FirstPage.CenterHeader.Picture
            Case 3: Set HrzHdftPosPict = .FirstPage.RightHeader.Picture
            Case 4: Set HrzHdftPosPict = .FirstPage.LeftFooter.Picture
            Case 5: Set HrzHdftPosPict = .FirstPage.CenterFooter.Picture
            Case 6: Set HrzHdftPosPict = .FirstPage.RightFooter.Picture
            End Select
        Case 2
            Select Case lEntryPointHdFt
            Case 1: Set HrzHdftPosPict = .EvenPage.LeftHeader.Picture
            Case 2: Set HrzHdftPosPict = .EvenPage.CenterHeader.Picture
            Case 3: Set HrzHdftPosPict = .EvenPage.RightHeader.Picture
            Case 4: Set HrzHdftPosPict = .EvenPage.LeftFooter.Picture
            Case 5: Set HrzHdftPosPict = .EvenPage.CenterFooter.Picture
            Case 6: Set HrzHdftPosPict = .EvenPage.RightFooter.Picture
            End Select
        End Select
    End With
    vEnableEvents = False
    Color_Cb.ListIndex = IIf(HrzHdftPosPict.ColorType < 1 Or HrzHdftPosPict.ColorType > 4, IIf(HrzHdftPosPict.ColorType = -2, 0, -1), HrzHdftPosPict.ColorType)
    Brightness_SpB.Value = Round(HrzHdftPosPict.Brightness * 100, 0)
    Contrast_SpB.Value = Round(HrzHdftPosPict.Contrast * 100, 0)
    vEnableEvents = True
    IniColorType = HrzHdftPosPict.ColorType
    IniBrightness = HrzHdftPosPict.Brightness
    IniContrast = HrzHdftPosPict.Contrast

    PressBot = 0

    'Get form handle
    Form_hWnd1 = FindWindowA(IIf(bIsCOMAddin, "ThunderRT6DFrame", "ThunderDFrame"), Caption)
    If Form_hWnd1 = 0 Then Form_hWnd1 = FindWindowA(vbNullString, Caption)
    'Basear o form na janela do Excel
    If bIsCOMAddin Then SetWindowLongA Form_hWnd1, GWL_HWNDPARENT, App_hWnd
    'Fixar form
    If bIsCOMAddin Then FixForm Form_hWnd1    'Se alterar caption, precisa aplicar novamente
End Sub

Private Sub Color_Cb_Change()
    If vEnableEvents = False Then Exit Sub
    If Color_Cb.ListIndex < 1 Then Exit Sub
    vEnableEvents = False
    HrzHdftPosPict.ColorType = Color_Cb.ListIndex
    Brightness_SpB.Value = Round(HrzHdftPosPict.Brightness * 100, 0)
    Contrast_SpB.Value = Round(HrzHdftPosPict.Contrast * 100, 0)
    vEnableEvents = True
End Sub

Private Sub Brightness_SpB_Change()
    Brightness_ScB.Value = Brightness_SpB.Value
    Brightness_Tb.Value = Brightness_SpB.Value & "%"
    If vEnableEvents = False Then Exit Sub
    Color_Cb.ListIndex = IIf(HrzHdftPosPict.ColorType < 1 Or HrzHdftPosPict.ColorType > 4, IIf(HrzHdftPosPict.ColorType = -2, 0, -1), HrzHdftPosPict.ColorType)
    HrzHdftPosPict.Brightness = Brightness_SpB.Value / 100
End Sub
Private Sub Brightness_ScB_Change()
    Brightness_SpB.Value = Brightness_ScB.Value
End Sub

Private Sub Contrast_SpB_Change()
    Contrast_ScB.Value = Contrast_SpB.Value
    Contrast_Tb.Value = Contrast_SpB.Value & "%"
    If vEnableEvents = False Then Exit Sub
    Color_Cb.ListIndex = IIf(HrzHdftPosPict.ColorType < 1 Or HrzHdftPosPict.ColorType > 4, IIf(HrzHdftPosPict.ColorType = -2, 0, -1), HrzHdftPosPict.ColorType)
    HrzHdftPosPict.Contrast = Contrast_SpB.Value / 100
End Sub
Private Sub Contrast_ScB_Change()
    Contrast_SpB.Value = Contrast_ScB.Value
End Sub

Private Sub Preview_Bt_Click()
    Hide
    TargetWb.Activate: If dHostAppVer >= 11 + 1 + 2 + 1 Then SetForegroundWindowEsp TargetWb.Windows(1).hWnd, 0.5    'In Excel 15 hiding a modal form can change TargetWb focus.
    TargetSh.Activate
    PreviewBtClick
    Show 1
End Sub
Attribute VB_Name = "FormInsSelection"
Attribute VB_Base = "0{285C9A8E-6BC8-4DE4-B6A2-E285F3C6670A}{69994117-941C-467C-8109-A509F5EF5258}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Option Explicit
Dim EmailSubj As String
Dim HomePageUrl As String
Dim Form_hWnd1 As Long
Private WithEvents HostApp As Excel.Application
Attribute HostApp.VB_VarHelpID = -1
Dim bEnableAppEvents As Boolean

Private Sub Cancel_Bt_Click()
    PressBot = 2
    Hide
    Load FormWatermark    'Preload aproveitar config tal como acontece em FormWatermark.vFileName se Insert
    Watermark
End Sub

Private Sub Insert_Bt_Click()
    Dim oShpOrRng As Object
    Dim sObjName As String

    Set oShpOrRng = appHostApp.Selection

    On Error Resume Next
    'First verif if the object can be copied, if not try its parent and parent
    Do
        Err.Clear
        oShpOrRng.CopyPicture xlScreen, xlPicture
        If Err.Number <> 0 Then Set oShpOrRng = oShpOrRng.Parent
        If TypeName(oShpOrRng) = "Worksheet" Then Exit Sub    'Can't copy this object. Vou deixar silencioso pode ser que questionem
    Loop While Err.Number <> 0

    'Critisize and alert
    Msg1 = ""
    If TypeName(oShpOrRng) = "Range" Then
        sObjName = IIf(IsPortg, "Intervalo ", "Range ") & oShpOrRng.Address(False, False)
        If appHostApp.ActiveWindow.DisplayGridlines Then Msg1 = vbCrLf & vbCrLf & IIf(IsPortg, _
                "Obs.: As linhas de grade das c|fffd|lulas est|fffd|o sendo exibidas e ser|fffd|o exibidas na " & IIf(lEntryPointHdFt < 4, "marca-d'|fffd|gua", "marca-de-carimbo") & " tamb|fffd|m.", _
                "Note: Cell gridlines are being displayed and will be displayed in the " & IIf(lEntryPointHdFt < 4, "watermark", "stampmark") & " too.")
    Else
        sObjName = oShpOrRng.Name
        If sObjName = "" Then sObjName = TypeName(oShpOrRng)    'If hasn't name use type name
    End If
    On Error GoTo 0
    Msg1 = IIf(IsPortg, "Inserir a sele|fffd||fffd|o ''", "Insert the selection ''") & sObjName & "''?" & Msg1
    Msg2 = sAddInCaptByApp & " - " & IIf(IsPortg, "Inserir Sele|fffd||fffd|o", "Insert Selection")
    If MyMsgBox(Msg1, 2, Msg2, Left / Twips - 60, Top / Twips + Insert_Bt.Top + 12 + 10) = 2 Then Exit Sub
    bTestOtherIPicCode = ShiftDown
    sObjName = MyReplace(sObjName, ":", "")    'If range

    bEnableAppEvents = False
    Hide
    TargetWb.Activate    ': ActWbWinAppSDIBaseForm Form_hWnd1 n|fffd|o |fffd| necess|fffd|rio ancorar, pois j|fffd| est|fffd| oculto. Inclusive o metodo para modeless que usa evento fica desabilitado ao ocultar.
    TargetSh.Activate
    FormWatermark.vFileName = ClipbIpicTempFile(oShpOrRng, sObjName, True)
    If FormWatermark.vFileName = False Then
        PressBot = 1
    Else
        FormWatermark.lInsTextSel = 2
        FormWatermark.InsertPicture_Bt_Click
        PressBot = 1
    End If
    Watermark
End Sub

Private Sub UserForm_Initialize()
    If IsPortg Then
        Caption = sAddInCaptByApp & " - Inserir uma Sele|fffd||fffd|o Como Figura"
        Caption_Lb.Caption = "Selecione um objeto, grupo ou intervalo de c|fffd|lulas na planilha abaixo ou em outra que voc|fffd| pode ativar agora atrav|fffd|s dos controles do Excel e pressione o bot|fffd|o Inserir. Uma figura ser|fffd| criada da sele|fffd||fffd|o e inserida " & IIf(bCalledByPageStpMgr, "em " & PictPosSpell(lDiffPage, lEntryPointHdFt), " para marca-d'|fffd|gua") & " em:"
        Insert_Bt.Caption = "Inserir"
        Cancel_Bt.Caption = "Cancelar"
        FromWorkbook_Lb.Caption = "Pasta: " & TargetWb.Name
        FromSheet_Lb.Caption = "Planilha: " & TargetSh.Name
    Else
        Caption = sAddInCaptByApp & " - Insert a Selection As Picture"
        Caption_Lb.Caption = "Select an object, group or cell range on the sheet below or other that you can activate now thru Excel controls and press Insert button. A picture will be created and insert " & IIf(bCalledByPageStpMgr, "in " & PictPosSpell(lDiffPage, lEntryPointHdFt), " for watermark") & " in:"
        FromWorkbook_Lb.Caption = "Workbook: " & TargetWb.Name
        FromSheet_Lb.Caption = "Sheet: " & TargetSh.Name
    End If
    Email_Lb.Caption = IIf(IsPortg, "E-mail", "Email")
    Email_Lb.ControlTipText = "orlando@cpap.com.br"
    EmailSubj = IIf(IsPortg, "Informa|fffd||fffd|es sobre o ", "Information about ") & sAddInNameByApp & IIf(bIsCOMAddin, " (COM add-in)", " (Add-in)")
    HomePage_Lb.Caption = IIf(IsPortg, "Ajuda", "Help")
    HomePage_Lb.ControlTipText = "http://cpap.com.br/orlando/"
    HomePageUrl = "http://cpap.com.br/orlando/" & sAddInNameByApp & IIf(IsPortg, "Mais.asp?IdC=Ajuda", "More.asp?IdC=Help")
    Email_Lb.Left = Width / Twips - Email_Lb.Width - (Width / Twips - InsideWidth) - 4    'Email_Lb.Left = Width / Twips - Email_Lb.Width - 8
    PressBot = 0


    'Get form handle
    Form_hWnd1 = FindWindowA(IIf(bIsCOMAddin, "ThunderRT6DFrame", "ThunderDFrame"), Caption)
    If Form_hWnd1 = 0 Then Form_hWnd1 = FindWindowA(vbNullString, Caption)
    'Basear o form na janela do Excel
    If bIsCOMAddin Then SetWindowLongA Form_hWnd1, GWL_HWNDPARENT, App_hWnd
    'Fixar form
    If bIsCOMAddin Then FixForm Form_hWnd1    'Se alterar caption, precisa aplicar novamente

    bEnableAppEvents = (dHostAppVer >= 11 + 1 + 2 + 1) And (Form_hWnd1 <> 0)    'In Excel 15 SDI
    If bEnableAppEvents Then Set HostApp = appHostApp
End Sub

Private Sub HomePage_Lb_Click()
    SendEMailByURL HomePage_Lb, HomePageUrl, "", "", False
End Sub

Private Sub Email_Lb_Click()
    SendEMailByURL Email_Lb, Email_Lb.ControlTipText, EmailSubj, EmlMsg, False
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If CloseMode = 0 Then
        'Cancel = True
        Cancel_Bt_Click
    End If
End Sub

'==== Estes eventos s|fffd|o necess|fffd|rio no Excel 15 sempre que ativar um Wb ancorar o form modeless na janela ativada. Funciona tanto by code com by UI.
Private Sub HostApp_WindowActivate(ByVal Wb As Workbook, ByVal Wn As Window)
    If bEnableAppEvents And Me.Visible Then    'Basear o form na janela ativa do Excel.
        App_hWnd = appHostApp.hWnd    'Always get because in Excel 15 SDI each wb has its window with different handle.
        SetWindowLongA Form_hWnd1, GWL_HWNDPARENT, App_hWnd
        SetForegroundWindow Form_hWnd1
    End If
End Sub

Private Sub HostApp_WindowResize(ByVal Wb As Workbook, ByVal Wn As Window)
    If bEnableAppEvents And Not Me.Visible Then Me.Show vbModeless    'Ao minimizar a janela do app onde est|fffd| ancorado, o form hide ent|fffd|o exibe novamente.
End Sub

Private Sub HostApp_WorkbookBeforeClose(ByVal Wb As Workbook, Cancel As Boolean)
    If bEnableAppEvents Then SetWindowLongA Form_hWnd1, GWL_HWNDPARENT, 0&    'Ao fechar a janela do app onde est|fffd| ancorado o form fecha tamb|fffd|m ent|fffd|o desancora antes.
End Sub

Attribute VB_Name = "FormMyMsgBox"
Attribute VB_Base = "0{44A75C4F-2A05-4922-A9F7-63CC51D55D61}{9D56EF7C-A021-4278-AFC5-3F653B092521}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Option Explicit
Public EmailSubj As String
Public HomePageUrl As String
Dim Form_hWnd1 As Long
Public lBut As Long
Public Xpos As Long
Public Ypos As Long

Private Sub HomePage_Lb_Click()
    SendEMailByURL HomePage_Lb, HomePageUrl, "", "", False
End Sub

Private Sub Email_Lb_Click()
    SendEMailByURL Email_Lb, Email_Lb.ControlTipText, EmailSubj, EmlMsg, False
End Sub

Private Sub Ok_Bt_Click()
    BotAcionado = 1
    Hide
End Sub
Private Sub Cancel_Bt_Click()
    BotAcionado = 2
    Hide
End Sub

Private Sub Ignore_Bt_Click()
    BotAcionado = 3
    Hide
End Sub

Private Sub UserForm_Activate()
    Dim CountLines As Long
    Dim Lins
    Dim l As Long

    With Alert_Tb
        .Width = 284
        'Lins = Split(.Text, vbCrLf)
        Lins = MySplit(.Text, vbCrLf)
        For l = 0 To UBound(Lins)
            CountLines = CountLines + 1 + Int(Len(Lins(l)) / 70)    '75
        Next
        .Height = (1 + CountLines) * 12
        If .Height > 16 * 12 Then
            .Height = 15 * 12
            .SpecialEffect = fmSpecialEffectSunken
            .SetFocus
            .SelStart = 0
        End If
    End With


    Icon_Lb.Caption = IIf(lBut <> 1, "?", "i")
    Cancel_Bt.Visible = lBut <> 1
    Ignore_Bt.Visible = lBut = 3

    OK_Bt.Caption = IIf(lBut = 3, IIf(IsPortg, "Sim", "Yes"), "OK")
    Cancel_Bt.Caption = IIf(lBut = 3, IIf(IsPortg, "N|fffd|o", "No"), IIf(IsPortg, "Cancelar", "Cancel"))
    Ignore_Bt.Caption = IIf(IsPortg, "Ignorar", "Ignore")

    OK_Bt.Top = Alert_Tb.Top + Alert_Tb.Height + 5
    Cancel_Bt.Top = OK_Bt.Top
    Ignore_Bt.Top = OK_Bt.Top
    HomePage_Lb.Top = OK_Bt.Top + 7.5
    Email_Lb.Top = HomePage_Lb.Top
    If Width > 2 * 311 Then Twips = 20 Else Twips = 1    'Em ComAddin as dimens|fffd|es do formul|fffd|rio |fffd| em twip, mas as posi|fffd||fffd|es dos controles continuma em pontos
    Email_Lb.Left = Width / Twips - Email_Lb.Width - (Width / Twips - InsideWidth) - 4    'Email_Lb.Left = Width / Twips - Email_Lb.Width - 8    'Em COM add-in |fffd| preciso transformar width e height em Twips
    Height = (HomePage_Lb.Top + OK_Bt.Height) * Twips + (Height - InsideHeight * Twips) - 1 * Twips    'Height = (HomePage_Lb.Top + OK_Bt.Height) * Twips + (Height - InsideHeight * Twips - (Width - InsideWidth * Twips) / 2) + 2 * Twips  'Entre parentese: altura da barra de t|fffd|tulo(caption)

    If lBut = 1 Then OK_Bt.Left = 135
    If lBut = 2 Then OK_Bt.Left = 90: Cancel_Bt.Left = 180
    If Xpos <> 0 Then Left = Xpos
    If Ypos <> 0 Then Top = Ypos

    'Get form handle
    Form_hWnd1 = FindWindowA(IIf(bIsCOMAddin, "ThunderRT6DFrame", "ThunderDFrame"), Caption)
    If Form_hWnd1 = 0 Then Form_hWnd1 = FindWindowA(vbNullString, Caption)
    'Basear o form na janela do Excel
    If bIsCOMAddin Then SetWindowLongA Form_hWnd1, GWL_HWNDPARENT, App_hWnd
    'Fixar form
    If bIsCOMAddin Then FixForm Form_hWnd1    'Se alterar caption, precisa aplicar novamente
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If CloseMode = 0 Then BotAcionado = IIf(Cancel_Bt.Visible, 2, 1)
End Sub
Attribute VB_Name = "FormPaperSize"
Attribute VB_Base = "0{03A1F50D-98BF-4332-B510-D1C85C593834}{C4739984-8699-48E3-9EBC-32C72E75CFA2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit
Dim Form_hWnd1 As Long

Private Sub Cancel_Bt_Click()
    PressBot = 2
    Unload Me
End Sub

Private Sub Inch_OpB_Click()
    Width_Tb.Value = VBA.Strings.Format(Width_Tb.Value / 25.4, "#,##0.0##")
    Height_Tb.Value = VBA.Strings.Format(Height_Tb.Value / 25.4, "#,##0.0##")
    Millimeter_OpB.Value = False
End Sub

Private Sub Millimeter_OpB_Click()
    Width_Tb.Value = VBA.Strings.Format(Width_Tb.Value * 25.4, "#,##0.0##")
    Height_Tb.Value = VBA.Strings.Format(Height_Tb.Value * 25.4, "#,##0.0##")
    Inch_OpB.Value = False
End Sub

Private Sub Ok_Bt_Click()
    P(Pindx, 1) = Round(Width_Tb.Value * IIf(Millimeter_OpB.Value, 1, 25.4), 1)
    P(Pindx, 2) = Round(Height_Tb.Value * IIf(Millimeter_OpB.Value, 1, 25.4))
    Unload Me
    PressBot = 1
End Sub

Private Sub UserForm_Initialize()
    If IsPortg Then
        Caption = "Tamanho de Papel Desconhecido"
        Caption_Lb.Caption = "Tipo de papel desconhecido ou personalizado. Entre ou confirme o tamanho:"
        Unit_Fr.Caption = "Unidades:"
        Width_Lb.Caption = "Largura:"
        Height_Lb.Caption = "Altura:"
        Millimeter_OpB.Caption = "Milimetros"
        Inch_OpB.Caption = "Polegadas"
        Cancel_Bt.Caption = "Cancelar"
    End If
    Width_Tb.Value = VBA.Strings.Format(P(Pindx, 1) * IIf(Millimeter_OpB.Value, 1, 1 / 25.4), "#,##0.0##")
    Height_Tb.Value = VBA.Strings.Format(P(Pindx, 2) * IIf(Millimeter_OpB.Value, 1, 1 / 25.4), "#,##0.0##")

    'Get form handle
    Form_hWnd1 = FindWindowA(IIf(bIsCOMAddin, "ThunderRT6DFrame", "ThunderDFrame"), Caption)
    If Form_hWnd1 = 0 Then Form_hWnd1 = FindWindowA(vbNullString, Caption)
    'Basear o form na janela do Excel
    If bIsCOMAddin Then SetWindowLongA Form_hWnd1, GWL_HWNDPARENT, App_hWnd
    'Fixar form
    If bIsCOMAddin Then FixForm Form_hWnd1    'Se alterar caption, precisa aplicar novamente
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    PressBot = 2
End Sub


Private Sub Width_Tb_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    EvValor_Cb_MouseMove Width_Tb, Button, Shift, X, Y
End Sub
Private Sub Width_Tb_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    EvValor_Cb_KeyDown Width_Tb, KeyCode, Shift
    '   If KeyCode = 40 Or KeyCode = 38 Then JurTaxaCalculadora_Bt_Click
End Sub
Private Sub Width_Tb_Change()
    If vEnableEvents = False Then Exit Sub
    '   If Width_Tb.Value = MarcHist Then ConfHist Width_Tb, VBA.Strings.Format(Princ(7, 2).Value, "#,##0.0##"), False, "#,##0.0##"
    EvValor_Cb_Change Width_Tb, True
End Sub
Private Sub Width_Tb_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    EvValor_Cb_Exit Width_Tb, Cancel, "#,##0.0##"
End Sub


Private Sub Height_Tb_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    EvValor_Cb_MouseMove Height_Tb, Button, Shift, X, Y
End Sub
Private Sub Height_Tb_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    EvValor_Cb_KeyDown Height_Tb, KeyCode, Shift
    '   If KeyCode = 40 Or KeyCode = 38 Then JurTaxaCalculadora_Bt_Click
End Sub
Private Sub Height_Tb_Change()
    If vEnableEvents = False Then Exit Sub
    '   If Height_Tb.Value = MarcHist Then ConfHist Height_Tb, VBA.Strings.Format(Princ(7, 2).Value, "#,##0.00########"), False, "#,##0.00########"
    EvValor_Cb_Change Height_Tb, True
End Sub
Private Sub Height_Tb_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    EvValor_Cb_Exit Height_Tb, Cancel, "#,##0.0##"
End Sub
Attribute VB_Name = "FormPositionCenter"
Attribute VB_Base = "0{53701BAF-E9CF-44C9-8613-6AA5FC65904C}{59F8EC56-ACFE-44AF-9B0F-11B53C1526C9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit
Dim Form_hWnd1 As Long

Private Sub Cancel_Bt_Click()
    Unload Me
End Sub

Private Sub CommandButton1_Click()
    SetReferences
    PressBot = 1
    Unload Me
End Sub

Private Sub CommandButton2_Click()
    SetReferences
    PressBot = 2
    Unload Me
End Sub

Private Sub CommandButton3_Click()
    SetReferences
    PressBot = 3
    Unload Me
End Sub

Private Sub ExcelDefaultPos_Chb_Click()
    SetReferences
    PressBot = 4
    Unload Me
End Sub

Private Sub Ok_Bt_Click()
    SetReferences
    PressBot = 0
    Unload Me
End Sub

Private Sub SetReferences()
    lRefArea = -1 * EntirePaper_OpB - 2 * SheetHdFtArea_OpB - 3 * SheetAreaOnly_OpB.Value
    bAnchorOnLeftMargin = AnchorLeftMargin_ChB.Value
    If dHostAppVer >= 11 + 1 Then    'No 2007
        TargetSh.PageSetup.AlignMarginsHeaderFooter = bAnchorOnLeftMargin
    End If
End Sub

Private Sub EntirePaper_OpB_Click()
    HatchRefArea
End Sub
Private Sub SheetHdFtArea_OpB_Click()
    HatchRefArea
End Sub
Private Sub SheetAreaOnly_OpB_Click()
    HatchRefArea
End Sub

Private Sub HatchRefArea()    ' References_Fr_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    Dim lRefArea1 As Long
    If vEnableEvents = False Then Exit Sub
    lRefArea1 = -1 * EntirePaper_OpB - 2 * SheetHdFtArea_OpB - 3 * SheetAreaOnly_OpB.Value
    With FormSizePosition.HatchAreaToCent_Img
        .Visible = True
        .Left = Choose(lRefArea1, 0, FormSizePosition.MargLeft_Lb.Left, FormSizePosition.MargLeft_Lb.Left)
        .Top = Choose(lRefArea1, 0, FormSizePosition.MargHeader_Lb.Top, FormSizePosition.MargTop_Lb.Top)
        .Width = Choose(lRefArea1, FormSizePosition.InsideWidth, FormSizePosition.MargRight_Lb.Left, FormSizePosition.MargRight_Lb.Left) - .Left
        .Height = Choose(lRefArea1, FormSizePosition.InsideHeight, FormSizePosition.MargFooter_Lb.Top, FormSizePosition.MargBottom_Lb.Top) - .Top
    End With
End Sub

Private Sub AnchorLeftMargin_ChB_Click()
    If vEnableEvents = False Then Exit Sub
    If dHostAppVer < 11 + 1 And AnchorLeftMargin_ChB.Value Then    'No 2007 only
        If IsPortg Then
            Msg1 = "Op|fffd||fffd|o suportada apenas pelo Excel 2007 ou posterior!"
            Msg2 = sAddInCaptByApp & " - Falha!"
        Else
            Msg1 = "Option supported only by Excel 2007 or later!"
            Msg2 = sAddInCaptByApp & " - Fail!"
        End If
        MyMsgBox Msg1, 1, Msg2
        AnchorLeftMargin_ChB.Value = False
    End If
End Sub

Private Sub UserForm_Activate()
    Top = FormSizePosition.Top + 17 * Twips
    Left = FormSizePosition.Left + (FormSizePosition.Center_Bt.Left + 3) * Twips
End Sub

Private Sub UserForm_Initialize()
    If IsPortg Then
        Caption = "Centrar ou Restaurar Padr|fffd|o"
        Cancel_Bt.Caption = "Cancelar"
        CommandButton1.Caption = "Verticalmente"
        CommandButton2.Caption = "Horizontalmente"
        CommandButton3.Caption = "Ambos"

        References_Fr.Caption = "|fffd|rea para centrar: "
        EntirePaper_OpB.Caption = "Papel (|fffd|rea total)"
        SheetHdFtArea_OpB.Caption = "Planilha + cabe|fffd|alho + rodap|fffd|"
        SheetAreaOnly_OpB.Caption = "Planilha apenas"

        AnchorLeftMargin_ChB.Caption = "Ancorar na margem esquerda"
        ExcelDefaultPos_Chb.Caption = "Restaurar pos. padr|fffd|o do Excel (Ponto de entrada da fig.)"
    End If
    vEnableEvents = False
    EntirePaper_OpB.Value = lRefArea = 1
    SheetHdFtArea_OpB.Value = lRefArea = 2
    SheetAreaOnly_OpB.Value = lRefArea = 3
    If dHostAppVer >= 11 + 1 Then AnchorLeftMargin_ChB.Value = bAnchorOnLeftMargin
    vEnableEvents = True

    'Get form handle
    Form_hWnd1 = FindWindowA(IIf(bIsCOMAddin, "ThunderRT6DFrame", "ThunderDFrame"), Caption)
    If Form_hWnd1 = 0 Then Form_hWnd1 = FindWindowA(vbNullString, Caption)
    'Basear o form na janela do Excel
    If bIsCOMAddin Then SetWindowLongA Form_hWnd1, GWL_HWNDPARENT, App_hWnd
    'Fixar form
    If bIsCOMAddin Then FixForm Form_hWnd1    'Se alterar caption, precisa aplicar novamente
End Sub
Attribute VB_Name = "FormSize"
Attribute VB_Base = "0{0F838ABC-16B3-4368-9883-433C23D455C5}{C6DED1D2-CDA9-423B-A0E1-11F4DAF703CA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit
Dim IniLockAspectRatio1 As MsoTriState
Dim IniHeightFr1 As Double
Dim IniWidthFr1 As Double
Dim IniTopFr1 As Double
Dim IniLeftFr1 As Double

Dim IniHeight1 As Double
Dim IniWidth1 As Double
Dim OriHeight1 As Double
Dim OriWidth1 As Double
Dim Form_hWnd1 As Long

Private Sub UserForm_Activate()
    Top = FormSizePosition.Top + 17 * Twips
    Left = FormSizePosition.Left + (FormSizePosition.Size_Bt.Left + 3) * Twips
End Sub

Private Sub UserForm_Initialize()
    IniHeightFr1 = FormSizePosition.Image1_Fr.Height
    IniWidthFr1 = FormSizePosition.Image1_Fr.Width
    IniTopFr1 = FormSizePosition.Image1_Fr.Top
    IniLeftFr1 = FormSizePosition.Image1_Fr.Left

    IniHeight1 = VBA.Strings.Format(IniHeight / appHostApp.InchesToPoints(1) * IIf(appHostApp.International(xlMetric), 2.54, 1), "#,##0.00")
    IniWidth1 = VBA.Strings.Format(IniWidth / appHostApp.InchesToPoints(1) * IIf(appHostApp.International(xlMetric), 2.54, 1), "#,##0.00")
    OriHeight1 = VBA.Strings.Format(OriHeight / appHostApp.InchesToPoints(1) * IIf(appHostApp.International(xlMetric), 2.54, 1), "#,##0.00")
    OriWidth1 = VBA.Strings.Format(OriWidth / appHostApp.InchesToPoints(1) * IIf(appHostApp.International(xlMetric), 2.54, 1), "#,##0.00")

    vEnableEvents = False
    LockAspRatio_ChB.Value = False
    ImageSizing 0: vEnableEvents = False    'Restore False changed in ImageSizing
    LockAspRatio_ChB.Value = Abs((IniHeightFr1 / IniWidthFr1) - (OriHeight / OriWidth)) / (OriHeight / OriWidth) < 0.02    'Tolerancia de 2% para suportar uma eventual imprecis|fffd|o no calculo dos originais
    RelOriSize_Chb.Value = Abs((IniHeight / IniWidth) - (OriHeight / OriWidth)) / (OriHeight / OriWidth) < 0.02    'Tolerancia de 2% para suportar uma eventual imprecis|fffd|o no calculo dos originais
    LimitSizePaper_ChB.Value = FormSizePosition.ConfineMovToPaper_ChB.Value    'Se quer confinado, provalvelmente quer tamanho limitado
    vEnableEvents = True

    Dim PaperWidth As Double
    Dim PaperHeight As Double
    PaperHeight = Round(tPaperSize.dHeight * IIf(appHostApp.International(xlMetric), 2.54, 1), 2)
    PaperWidth = Round(tPaperSize.dWidth * IIf(appHostApp.International(xlMetric), 2.54, 1), 2)
    If IsPortg Then
        Caption = "Tamanho"
        Cancel_Bt.Caption = "Cancelar"
        ResetStart_Bt.Caption = "Reset Inic."
        ResetStart_Bt.ControlTipText = "Restaurar tamanhos iniciais (Alt.: " & IniHeight1 & "  Larg.: " & IniWidth1 & ")"
        ResetOrig_Bt.ControlTipText = "Restaurar tamanhos originais (Alt.: " & OriHeight1 & "  Larg.: " & OriWidth1 & ")"
        Height_Lb.Caption = "Altura"
        Width_Lb.Caption = "Largura"
        Units_Lb.Caption = IIf(appHostApp.International(xlMetric), "Centimetros", "Polegadas")
        CenterV_ChB.Caption = "Centrar vertical e"
        CenterH_ChB.Caption = "horizontalmente ao alterar tamanho"
        LimitSizePaper_ChB.Caption = "Limitar tamanho ao do papel (Alt.: " & PaperHeight & "  Larg.: " & PaperWidth & ")"
        LockAspRatio_ChB.Caption = "Fixar propor|fffd||fffd|o pelos tamanhos iniciais (Alt.: " & IniHeight1 & "  Larg.: " & IniWidth1 & ")"
        RelOriSize_Chb.Caption = "ou pelos tamanhos originais (Alt.: " & OriHeight1 & "  Larg.: " & OriWidth1 & ")"
    Else
        ResetStart_Bt.ControlTipText = "Reset start sizes (Height: " & IniHeight1 & "  Width: " & IniWidth1 & ")"
        ResetOrig_Bt.ControlTipText = "Reset original sizes (Height: " & OriHeight1 & "  Width: " & OriWidth1 & ")"
        LockAspRatio_ChB.Caption = "Lock ratio by start sizes (Height: " & IniHeight1 & "  Width: " & IniWidth1 & ")"
        RelOriSize_Chb.Caption = "or by original sizes (Height: " & OriHeight1 & "  Width: " & OriWidth1 & ")"
        LimitSizePaper_ChB.Caption = "Limit size to paper size (Height: " & PaperHeight & "  Width: " & PaperWidth & ")"
        Units_Lb.Caption = IIf(appHostApp.International(xlMetric), "Centimeters", "Inches")
    End If
    CenterH_ChB.Left = CenterV_ChB.Left + CenterV_ChB.Width - 4

    'Get form handle
    Form_hWnd1 = FindWindowA(IIf(bIsCOMAddin, "ThunderRT6DFrame", "ThunderDFrame"), Caption)
    If Form_hWnd1 = 0 Then Form_hWnd1 = FindWindowA(vbNullString, Caption)
    'Basear o form na janela do Excel
    If bIsCOMAddin Then SetWindowLongA Form_hWnd1, GWL_HWNDPARENT, App_hWnd
    'Fixar form
    If bIsCOMAddin Then FixForm Form_hWnd1    'Se alterar caption, precisa aplicar novamente
End Sub

Private Sub CenterV_ChB_Click()
    ImageSizing 0
End Sub
Private Sub CenterH_ChB_Click()
    ImageSizing 0
End Sub

Private Sub LockAspRatio_ChB_Click()
    If vEnableEvents = False Then Exit Sub
    ImageSizing 0
    ImageSizing 0
End Sub

Private Sub RelOriSize_Chb_Click()
    If vEnableEvents = False Then Exit Sub
    ImageSizing 0
    ImageSizing 0
End Sub

Private Sub ResetStart_Bt_Click()    'Restaurar inicial ao entrar em FormSizePosition
    vEnableEvents = False
    LockAspRatio_ChB.Value = False
    RelOriSize_Chb.Value = False
    vEnableEvents = True

    Height_Tb.Value = VBA.Strings.Format(IniHeight1, "0.######")    'insert in text box
    ImageSizing 1    'like exit textbox
    Width_Tb.Value = VBA.Strings.Format(IniWidth1, "0.######")
    ImageSizing 3
    vEnableEvents = False
    LockAspRatio_ChB.Value = Abs((IniHeightFr1 / IniWidthFr1) - (OriHeight / OriWidth)) / (OriHeight / OriWidth) < 0.02    'Tolerancia de 2% para suportar uma eventual imprecis|fffd|o no calculo dos originais
    vEnableEvents = True
End Sub

Private Sub ResetOrig_Bt_Click()
    vEnableEvents = False
    LockAspRatio_ChB.Value = False
    RelOriSize_Chb.Value = True
    vEnableEvents = True

    Height_Tb.Value = VBA.Strings.Format(OriHeight1, "0.######")    'insert in text box
    ImageSizing 1    'like exit textbox
    Width_Tb.Value = VBA.Strings.Format(OriWidth1, "0.######")
    ImageSizing 3
    LockAspRatio_ChB.Value = Abs((IniHeight / IniWidth) - (OriHeight / OriWidth)) / (OriHeight / OriWidth) < 0.02     'Tolerancia de 2% para suportar uma eventual imprecis|fffd|o no calculo dos originais
End Sub

Private Sub Ok_Bt_Click()
    Unload Me
End Sub

Private Sub Cancel_Bt_Click()    'Restaurar inicial ao entrar neste form
    FormSizePosition.Image1_Fr.Height = IniHeightFr1
    FormSizePosition.Image1_Fr.Width = IniWidthFr1
    FormSizePosition.Image1_Fr.Top = IniTopFr1
    FormSizePosition.Image1_Fr.Left = IniLeftFr1
    Unload Me
End Sub

Sub ImageSizing(i As Long)
    Dim SizeTmp As Double    'For accept change size in the limits without oversize

'Change first
    Select Case i
    Case 1
        SizeTmp = Height_Tb.Value * dbZoom * appHostApp.InchesToPoints(1) / IIf(appHostApp.International(xlMetric), 2.54, 1)
        If Not LimitSizePaper_ChB.Value Or (SizeTmp >= 0 And SizeTmp < FormSizePosition.Height / Twips) Then FormSizePosition.Image1_Fr.Height = SizeTmp
        If LimitSizePaper_ChB.Value And FormSizePosition.Image1_Fr.Height > FormSizePosition.Height / Twips Then FormSizePosition.Image1_Fr.Width = FormSizePosition.Height / Twips
    Case 2
        SizeTmp = HeightRatio_Tb.Value * IIf(RelOriSize_Chb.Value, OriHeight * dbZoom, IniHeightFr) / 100
        If Not LimitSizePaper_ChB.Value Or (SizeTmp >= 0 And SizeTmp < FormSizePosition.Height / Twips) Then FormSizePosition.Image1_Fr.Height = SizeTmp
        If LimitSizePaper_ChB.Value And FormSizePosition.Image1_Fr.Height > FormSizePosition.Height / Twips Then FormSizePosition.Image1_Fr.Width = FormSizePosition.Height / Twips
    Case 3
        SizeTmp = Width_Tb.Value * dbZoom * appHostApp.InchesToPoints(1) / IIf(appHostApp.International(xlMetric), 2.54, 1)
        If Not LimitSizePaper_ChB.Value Or (SizeTmp >= 0 And SizeTmp < FormSizePosition.Width / Twips) Then FormSizePosition.Image1_Fr.Width = SizeTmp
        If LimitSizePaper_ChB.Value And FormSizePosition.Image1_Fr.Width > FormSizePosition.Width / Twips Then FormSizePosition.Image1_Fr.Width = FormSizePosition.Width / Twips
    Case 4
        SizeTmp = WidthRatio_Tb.Value * IIf(RelOriSize_Chb.Value, OriWidth * dbZoom, IniWidthFr) / 100
        If Not LimitSizePaper_ChB.Value Or (SizeTmp >= 0 And SizeTmp < FormSizePosition.Width / Twips) Then FormSizePosition.Image1_Fr.Width = SizeTmp
        If LimitSizePaper_ChB.Value And FormSizePosition.Image1_Fr.Width > FormSizePosition.Width / Twips Then FormSizePosition.Image1_Fr.Width = FormSizePosition.Width / Twips
    End Select

    'Update others
    vEnableEvents = False
    Height_Tb.Value = VBA.Strings.Format(FormSizePosition.Image1_Fr.Height / dbZoom / appHostApp.InchesToPoints(1) * IIf(appHostApp.International(xlMetric), 2.54, 1), "#,##0.00")
    Width_Tb.Value = VBA.Strings.Format(FormSizePosition.Image1_Fr.Width / dbZoom / appHostApp.InchesToPoints(1) * IIf(appHostApp.International(xlMetric), 2.54, 1), "#,##0.00")
    HeightRatio_Tb.Value = VBA.Strings.Format(FormSizePosition.Image1_Fr.Height / IIf(RelOriSize_Chb.Value, OriHeight * dbZoom, IniHeightFr) * 100, "#,##0.") & "00"    '00 |fffd| s|fffd| est|fffd|tica
    WidthRatio_Tb.Value = VBA.Strings.Format(FormSizePosition.Image1_Fr.Width / IIf(RelOriSize_Chb.Value, OriWidth * dbZoom, IniWidthFr) * 100, "#,##0.") & "00"
    RelOriSize_Chb.Enabled = LockAspRatio_ChB.Value

    If LockAspRatio_ChB.Value Then
        If HeightRatio_Tb.Value <> WidthRatio_Tb.Value Then
            If i < 3 Then
                WidthRatio_Tb.Value = HeightRatio_Tb.Value
                FormSizePosition.Image1_Fr.Width = WidthRatio_Tb.Value * IIf(RelOriSize_Chb.Value, OriWidth * dbZoom, IniWidthFr) / 100
            Else
                HeightRatio_Tb.Value = WidthRatio_Tb.Value
                FormSizePosition.Image1_Fr.Height = HeightRatio_Tb.Value * IIf(RelOriSize_Chb.Value, OriHeight * dbZoom, IniHeightFr) / 100
            End If
        End If
    End If

    FormSizePosition.ConfineMovToPaper_ChB.Value = LimitSizePaper_ChB.Value    'Se quer tamanho limitado, provavelmente quer confinado
    vEnableEvents = True

    If CenterV_ChB.Value Or CenterH_ChB.Value Then
        If CenterV_ChB.Value Then PressBot = 1
        If CenterH_ChB.Value Then PressBot = 2
        If CenterV_ChB.Value And CenterH_ChB.Value Then PressBot = 3
        FormSizePosition.Center_Bt_Click
    End If
    If i <> 0 Then ImageSizing 0
End Sub

Private Sub Height_Tb_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    EvValor_Tb_MouseMove Height_Tb, Button, Shift, X, Y
End Sub
Private Sub Height_Tb_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    EvValor_Tb_KeyDown Height_Tb, KeyCode, Shift
    '   If KeyCode = 40 Or KeyCode = 38 Then Valor1Calculadora_Bt_Click
End Sub
Private Sub Height_Tb_Change()
    If vEnableEvents = False Then Exit Sub
    EvValor_Tb_Change Height_Tb, True
    '    ImageSizing 1
End Sub
Private Sub Height_Tb_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    EvValor_Tb_Exit Height_Tb, Cancel, "#,##0.00"
    If Not Cancel Then ImageSizing 1
End Sub

Private Sub HeightRatio_Tb_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    EvValor_Tb_MouseMove HeightRatio_Tb, Button, Shift, X, Y
End Sub
Private Sub HeightRatio_Tb_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    EvValor_Tb_KeyDown HeightRatio_Tb, KeyCode, Shift
    '   If KeyCode = 40 Or KeyCode = 38 Then Valor1Calculadora_Bt_Click
End Sub
Private Sub HeightRatio_Tb_Change()
    If vEnableEvents = False Then Exit Sub
    EvValor_Tb_Change HeightRatio_Tb, True
    '    ImageSizing 2
End Sub
Private Sub HeightRatio_Tb_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    EvValor_Tb_Exit HeightRatio_Tb, Cancel, "#,##0.00"
    If Not Cancel Then ImageSizing 2
End Sub

Private Sub Width_Tb_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    EvValor_Tb_MouseMove Width_Tb, Button, Shift, X, Y
End Sub
Private Sub Width_Tb_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    EvValor_Tb_KeyDown Width_Tb, KeyCode, Shift
    '   If KeyCode = 40 Or KeyCode = 38 Then Valor1Calculadora_Bt_Click
End Sub
Private Sub Width_Tb_Change()
    If vEnableEvents = False Then Exit Sub
    EvValor_Tb_Change Width_Tb, True
    '    ImageSizing 3
End Sub
Private Sub Width_Tb_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    EvValor_Tb_Exit Width_Tb, Cancel, "#,##0.00"
    If Not Cancel Then ImageSizing 3
End Sub

Private Sub WidthRatio_Tb_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    EvValor_Tb_MouseMove WidthRatio_Tb, Button, Shift, X, Y
End Sub
Private Sub WidthRatio_Tb_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    EvValor_Tb_KeyDown WidthRatio_Tb, KeyCode, Shift
    '   If KeyCode = 40 Or KeyCode = 38 Then Valor1Calculadora_Bt_Click
End Sub
Private Sub WidthRatio_Tb_Change()
    If vEnableEvents = False Then Exit Sub
    EvValor_Tb_Change WidthRatio_Tb, True
    '    ImageSizing 4
End Sub
Private Sub WidthRatio_Tb_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    EvValor_Tb_Exit WidthRatio_Tb, Cancel, "#,##0.00"
    If Not Cancel Then ImageSizing 4
End Sub


Private Sub Height_SpB_SpinDown(): EvSpin Height_Tb, -0.1: ImageSizing 1: End Sub
Private Sub Height_SpB_SpinUp(): EvSpin Height_Tb, 0.1: ImageSizing 1: End Sub

Private Sub HeightRatio_SpB_SpinDown(): EvSpin HeightRatio_Tb, -1: ImageSizing 2: End Sub
Private Sub HeightRatio_SpB_SpinUp(): EvSpin HeightRatio_Tb, 1: ImageSizing 2: End Sub

Private Sub Width_SpB_SpinDown(): EvSpin Width_Tb, -0.1: ImageSizing 3: End Sub
Private Sub Width_SpB_SpinUp(): EvSpin Width_Tb, 0.1: ImageSizing 3: End Sub

Private Sub WidthRatio_SpB_SpinDown(): EvSpin WidthRatio_Tb, -1: ImageSizing 4: End Sub
Private Sub WidthRatio_SpB_SpinUp(): EvSpin WidthRatio_Tb, 1: ImageSizing 4: End Sub

Private Sub EvSpin(vCtrl As Object, Inc As Double)    'As Control pode dar erro em COM add-in
    If Not IsNumeric(vCtrl.Value) Then vCtrl.Value = 0
    vCtrl.Value = VBA.Strings.Format(vCtrl.Value + Inc, "#,##0.00")
End Sub

'Handle Textbox events for enter numbers

Sub EvValor_Tb_MouseMove(Valor_Tb As Object, ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)    'As Control pode dar erro em COM add-in
    Dim sd As String
    Valor_Tb.Locked = False
    sd = appHostApp.International(xlDecimalSeparator)
    If Valor_Tb.Text = "0" Or Valor_Tb.Text = "0" & sd & "00" Then
        Valor_Tb.SelStart = 0
        Valor_Tb.SelLength = Len(Valor_Tb.Text)
    End If
End Sub

Sub EvValor_Tb_KeyDown(Valor_Tb As Object, ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)    'As Control pode dar erro em COM add-in
    Dim sd As String
    Dim vKeyCode As String
    sd = appHostApp.International(xlDecimalSeparator)
    vKeyCode = IIf(sd = ",", 188, 190)
    Valor_Tb.Locked = False
    If KeyCode = 37 Or (Shift = 2 And KeyCode = 86) Or (Shift = 1 And KeyCode = 45) Or (Shift = 2 And KeyCode = 88) Then Exit Sub   'Seta Esquerda e teclas do clipboard
    If KeyCode = 110 Or KeyCode = 190 Then KeyCode = vKeyCode
    If KeyCode = 188 Then If InStr(1, Valor_Tb.Value, sd) > 0 Then Valor_Tb.Locked = True
    If (KeyCode >= 96 And KeyCode <= 105) _
            Or (KeyCode >= 48 And KeyCode <= 57 And Shift = 0) _
            Or KeyCode = 188 Or KeyCode = 8 Or KeyCode = 46 _
            Or KeyCode = 107 Or (KeyCode = 187 And Shift = 1) _
            Or KeyCode = 109 Or (KeyCode = 189 And Shift = 0) Then Else Valor_Tb.Locked = True
End Sub

Sub EvValor_Tb_Change(Valor_Tb As Object, Optional vAbs As Boolean = False)    'As Control pode dar erro em COM add-in
    Dim i As String
    Dim j As Integer
    Dim SinNeg As Boolean
    Dim PartInt As String
    Dim PartFrac As String
    Dim sd As String
    Dim sm As String
    Dim k As Integer
    Dim TamPartInt As Integer
    Dim RepCurs As Integer

    i = Valor_Tb.Value
    j = Valor_Tb.SelStart
    SinNeg = vAbs = False And InStr(1, i, "-") > 0 And InStr(1, i, "+") = 0
    i = appHostApp.WorksheetFunction.Substitute(i, "-", "")
    i = appHostApp.WorksheetFunction.Substitute(i, "+", "")
    PartInt = i
    sd = appHostApp.International(xlDecimalSeparator)
    sm = appHostApp.International(xlThousandsSeparator)
    k = InStr(1, i, sd)
    If k > 0 Then
        PartFrac = Mid(i, k + 1, 100)
        PartFrac = appHostApp.WorksheetFunction.Substitute(PartFrac, sm, "")
        PartInt = Mid(i, 1, k - 1)
        If PartInt = "" Then PartInt = "0"
    End If
    TamPartInt = Len(PartInt)
    PartInt = appHostApp.WorksheetFunction.Substitute(PartInt, sm, "")
    PartInt = VBA.Strings.Format(PartInt, "#,##0")
    RepCurs = Len(PartInt) - TamPartInt
    vEnableEvents = False
    Valor_Tb.Value = IIf(SinNeg, "-", "") & PartInt & IIf(PartInt = "" Or k = 0, "", sd) & PartFrac
    vEnableEvents = True
    j = -(j + RepCurs) * (j + RepCurs >= 0)
    If Left(Valor_Tb.Value, 2) = "0" & sd And j < 3 Then j = 2
    Valor_Tb.SelStart = j

    'Avoid to paste text
    Static ValorOld
    If Valor_Tb.Value <> "" And Valor_Tb.Value <> "-" And Not (IsNumeric(Valor_Tb.Value)) Then
        MsgBox Valor_Tb.Value, vbCritical, "Valor Inv|fffd|lido!"
        Valor_Tb.Value = ValorOld
    Else
        ValorOld = Valor_Tb.Value
    End If
End Sub

Sub EvValor_Tb_Exit(Valor_Tb As Object, Cancel As MSForms.ReturnBoolean, Formato As String)    'As Control pode dar erro em COM add-in
    If Valor_Tb.Value = "" Then Valor_Tb.Value = 0
    If IsNumeric(Valor_Tb.Value) Then
        If Valor_Tb.Value <> VBA.Strings.Format(Valor_Tb.Value, Formato) Then Valor_Tb.Value = VBA.Strings.Format(Valor_Tb.Value, Formato)
    Else
        MsgBox "Invalid Number!", vbCritical, "CPAP|fffd|"
        Cancel = True
    End If
End Sub
Attribute VB_Name = "FormSizePosition"
Attribute VB_Base = "0{EA23BE25-68CC-4A7E-9494-713718F94040}{E9F77C63-C474-4BF3-8E5D-429B94E09325}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit
Dim HrzHdftPosPict As Graphic
Dim sHdFtText As String
Dim IniCropLeft As Double
Dim IniCropRight As Double
Dim IniCropTop As Double
Dim IniCropBottom As Double
Dim Form_hWnd1 As Long

Dim MovX As Single
Dim MovY As Single

Public Sub Center_Bt_Click()
    If PressBot = 0 Then FormPositionCenter.Show 1
    HatchAreaToCent_Img.Visible = False

    'Centralizar
    RefLeftMargin = Choose(lRefArea, 0, MargLeft_Lb.Left, MargLeft_Lb.Left)
    RefRightMargin = Choose(lRefArea, 0, InsideWidth - MargRight_Lb.Left, InsideWidth - MargRight_Lb.Left)
    RefTopMargin = Choose(lRefArea, 0, MargHeader_Lb.Top, MargTop_Lb.Top)
    RefBottomMargin = Choose(lRefArea, 0, InsideHeight - MargFooter_Lb.Top, InsideHeight - MargBottom_Lb.Top)
    If PressBot = 2 Or PressBot = 3 Then
        Image1_Fr.Left = (InsideWidth - RefLeftMargin - RefRightMargin - Image1_Fr.Width) / 2 + RefLeftMargin
    End If
    If PressBot = 1 Or PressBot = 3 Then
        Image1_Fr.Top = (InsideHeight - RefTopMargin - RefBottomMargin - Image1_Fr.Height) / 2 + RefTopMargin
    End If
    If PressBot = 4 Then
        With TargetSh.PageSetup    'As formulas s|fffd|o as mesmas do inicializar, fazendo os crops=0
            Const NewCropLeft As Double = 0
            Const NewCropRight As Double = 0
            Const NewCropTop As Double = 0
            Const NewCropBottom As Double = 0
            Select Case lEntryPointHdFt    'Lefts
            Case 1, 4    'In left. Original of version with only LH the 1
                Image1_Fr.Left = (OriWidth - NewCropLeft / LeftAdjustFat) * IniWidth / OriWidth * dbZoom - Image1_Fr.Width + IIf(dHostAppVer >= 11 + 1 And bAnchorOnLeftMargin, IIf(.LeftMargin < 53.858, 53.858, .LeftMargin), 53.858) * dbZoom
            Case 2, 5    'In center. O Excel centraliza levando em conta os dois crops laterais. LeftAdjustFat n|fffd|o parece necess|fffd|rio aplicar e remover
                If NewCropLeft <= 0 And NewCropLeft <= NewCropRight Then
                    Image1_Fr.Left = InsideWidth / 2 - (OriWidth + (NewCropLeft + NewCropRight)) * IniWidth / OriWidth * dbZoom / 2
                Else
                    Image1_Fr.Left = InsideWidth / 2 - (OriWidth - (NewCropLeft + NewCropRight)) * IniWidth / OriWidth * dbZoom / 2
                End If
            Case 3, 6    'In right. Semelhante ao left, mas como ajusta no CropRight um 'Right' |fffd| que |fffd| encontrado e precisa ser convertido em Left
                Image1_Fr.Left = (OriWidth - NewCropRight / LeftAdjustFat) * IniWidth / OriWidth * dbZoom - Image1_Fr.Width + IIf(dHostAppVer >= 11 + 1 And bAnchorOnLeftMargin, IIf(.RightMargin < 53.858, 53.858, .RightMargin), 53.858) * dbZoom
                Image1_Fr.Left = InsideWidth - Image1_Fr.Width - Image1_Fr.Left
            End Select

            Select Case lEntryPointHdFt    'Tops
            Case 1, 2, 3    'In header. Original of version with only LH the 1
                Image1_Fr.Top = (OriHeight - NewCropTop / TopAdjustFat) * IniHeight / OriHeight * dbZoom - Image1_Fr.Height + .HeaderMargin * dbZoom   '- 5.5
            Case 4, 5, 6    'In footer. Semelhante ao header, mas como ajusta no CropBottom um 'Bottom' |fffd| que |fffd| encontrado e precisa ser convertido em Top
                Image1_Fr.Top = (OriHeight - NewCropBottom / TopAdjustFat) * IniHeight / OriHeight * dbZoom - Image1_Fr.Height + .FooterMargin * dbZoom   '- 5.5
                Image1_Fr.Top = InsideHeight - Image1_Fr.Height - Image1_Fr.Top
            End Select
        End With
    End If

    DisplayPos
    PressBot = 0
End Sub

Private Sub Ok_Bt_Click()
    UpdatePos
    PressBot = 1
    WriteINISetting    'Save evantual setting done in FormPositionCenter
    Unload Me
End Sub

Private Sub UpdatePos()
    If Image1_Fr.Height = IniHeightFr And _
            Image1_Fr.Width = IniWidthFr And _
            Image1_Fr.Top = IniTopFr And _
            Image1_Fr.Left = IniLeftFr Then Exit Sub

    With TargetSh.PageSetup
        HrzHdftPosPict.LockAspectRatio = msoFalse
        HrzHdftPosPict.CropLeft = 0
        HrzHdftPosPict.CropRight = 0
        HrzHdftPosPict.CropTop = 0
        HrzHdftPosPict.CropBottom = 0

        HrzHdftPosPict.Height = Image1_Fr.Height / dbZoom
        HrzHdftPosPict.Width = Image1_Fr.Width / dbZoom

        Select Case lEntryPointHdFt    'Lefts
        Case 1, 4    'In left. Original of version with only LH the 1
            HrzHdftPosPict.CropLeft = -(Image1_Fr.Left + Image1_Fr.Width - IIf(dHostAppVer >= 11 + 1 And bAnchorOnLeftMargin, IIf(.LeftMargin < 53.858, 53.858, .LeftMargin), 53.858) * dbZoom) / (HrzHdftPosPict.Width * dbZoom) * OriWidth + OriWidth
            HrzHdftPosPict.CropLeft = Round(HrzHdftPosPict.CropLeft * LeftAdjustFat, 1)    'O arredond n|fffd|o |fffd| significativo e ainda pode encaixar em posi|fffd||fffd|o padr|fffd|o
        Case 2, 5    'In center. O Excel j|fffd| centraliza. Se centro Image1 estiver a direita empurra com com esquerdo negativo, do contr|fffd|rio com o direito. LeftAdjustFat n|fffd|o parece necess|fffd|rio aplicar e remover
            If Image1_Fr.Left + Image1_Fr.Width / 2 >= InsideWidth / 2 Then
                HrzHdftPosPict.CropLeft = -(Image1_Fr.Left + Image1_Fr.Width / 2 - InsideWidth / 2) * 2 / (HrzHdftPosPict.Width * dbZoom) * OriWidth
                HrzHdftPosPict.CropLeft = Round(HrzHdftPosPict.CropLeft * 1, 1)
            Else
                HrzHdftPosPict.CropRight = -((InsideWidth - Image1_Fr.Width - Image1_Fr.Left) + Image1_Fr.Width / 2 - InsideWidth / 2) * 2 / (HrzHdftPosPict.Width * dbZoom) * OriWidth
                HrzHdftPosPict.CropRight = Round(HrzHdftPosPict.CropRight * 1, 1)
            End If
        Case 3, 6    'In right. Semelhante ao left, mas ajusta no CropRight
            HrzHdftPosPict.CropRight = -((InsideWidth - Image1_Fr.Width - Image1_Fr.Left) + Image1_Fr.Width - IIf(dHostAppVer >= 11 + 1 And bAnchorOnLeftMargin, IIf(.RightMargin < 53.858, 53.858, .RightMargin), 53.858) * dbZoom) / (HrzHdftPosPict.Width * dbZoom) * OriWidth + OriWidth
            HrzHdftPosPict.CropRight = Round(HrzHdftPosPict.CropRight * LeftAdjustFat, 1)
        End Select

        Select Case lEntryPointHdFt    'Tops
        Case 1, 2, 3    'In header. Original of version with only LH the 1
            HrzHdftPosPict.CropTop = -(Image1_Fr.Top + Image1_Fr.Height - .HeaderMargin * dbZoom) / (HrzHdftPosPict.Height * dbZoom) * OriHeight + OriHeight
            HrzHdftPosPict.CropTop = Round(HrzHdftPosPict.CropTop * TopAdjustFat, 1)
        Case 4, 5, 6    'In footer. Semelhante ao header, mas ajusta no CropBottom
            HrzHdftPosPict.CropBottom = -((InsideHeight - Image1_Fr.Height - Image1_Fr.Top) + Image1_Fr.Height - .FooterMargin * dbZoom) / (HrzHdftPosPict.Height * dbZoom) * OriHeight + OriHeight
            HrzHdftPosPict.CropBottom = Round(HrzHdftPosPict.CropBottom * TopAdjustFat, 1)
        End Select

        HrzHdftPosPict.LockAspectRatio = IniLockAspectRatio
    End With
End Sub

Private Sub DisplayPos()
    Dim dLeftPos As Double
    Dim dTopPos As Double
    RefLeftMargin = Choose(lRefArea, 0, MargLeft_Lb.Left, MargLeft_Lb.Left)
    RefTopMargin = Choose(lRefArea, 0, MargHeader_Lb.Top, MargTop_Lb.Top)
    dLeftPos = (Image1_Fr.Left - RefLeftMargin) / dbZoom
    dTopPos = (Image1_Fr.Top - RefTopMargin) / dbZoom
    Left_Lb.Caption = VBA.Strings.Format(dLeftPos / appHostApp.InchesToPoints(1) * IIf(appHostApp.International(xlMetric), 2.54, 1), "#,##0.00") & " " & IIf(appHostApp.International(xlMetric), "cm", IIf(IsPortg, "pol", "in"))
    Top_Lb.Caption = VBA.Strings.Format(dTopPos / appHostApp.InchesToPoints(1) * IIf(appHostApp.International(xlMetric), 2.54, 1), "#,##0.00") & " " & IIf(appHostApp.International(xlMetric), "cm", IIf(IsPortg, "pol", "in"))
    Left_Lb.Left = MargLeft_Lb.Left + 8: Top_Lb.Left = Left_Lb.Left + Left_Lb.Width + 4
    Left_Lb.Top = InsideHeight - 11: Top_Lb.Top = Left_Lb.Top
End Sub

Private Sub Preview_Bt_Click()
    UpdatePos
    Hide
    TargetWb.Activate: If dHostAppVer >= 11 + 1 + 2 + 1 Then SetForegroundWindowEsp TargetWb.Windows(1).hWnd, 0.5    'In Excel 15 hiding a modal form can change TargetWb focus.
    TargetSh.Activate
    PreviewBtClick
    Show 1
End Sub

Private Sub Cancel_Bt_Click()
    If PressBot = 1 Then Exit Sub
    HrzHdftPosPict.CropLeft = 0
    HrzHdftPosPict.CropRight = 0
    HrzHdftPosPict.CropTop = 0
    HrzHdftPosPict.CropBottom = 0

    HrzHdftPosPict.Height = IniHeight
    HrzHdftPosPict.Width = IniWidth

    HrzHdftPosPict.CropLeft = IniCropLeft
    HrzHdftPosPict.CropRight = IniCropRight
    HrzHdftPosPict.CropTop = IniCropTop
    HrzHdftPosPict.CropBottom = IniCropBottom

    If dHostAppVer >= 11 + 1 Then
        With TargetSh.PageSetup
            .ScaleWithDocHeaderFooter = IniScaleWithDoc    'HrzHdftPosPict.Parent gerou erro em pag nao default no 2007
            .AlignMarginsHeaderFooter = IniAlignMargins
        End With
    End If

    Unload Me
End Sub

Private Sub UserForm_Activate()
    Image1_Fr.SetFocus

    Static bOnce As Boolean    'Alert uma vez s|fffd|. Acho que alertar aqui apenas |fffd| suficiente, pois o text n|fffd|o altera as coordenada da figura (crop) feitas aqui. O melhor |fffd| deixar o usu|fffd|rio alterar no Excel mesmo, se achar necess|fffd|rio.
    If Len(sHdFtText) > 2 And Not bOnce Then
        If IsPortg Then
            Msg1 = "Al|fffd|m do c|fffd|digo '&[Picture]', h|fffd| texto ou c|fffd|digos de texto no " & IIf(lEntryPointHdFt < 4, "cabe|fffd|alho", "rodap|fffd|") & " que pode alterar a posi|fffd||fffd|o da figura ao imprimir ou na pr|fffd|-visualiza|fffd||fffd|o de impress|fffd|o."
            Msg2 = sAddInCaptByApp & " - Figura com Texto no " & IIf(lEntryPointHdFt < 4, "Cabe|fffd|alho", "Rodap|fffd|")
        Else
            Msg1 = "Besides the '&[Picture]' code, there is text or text codes in the " & IIf(lEntryPointHdFt < 4, "header", "footer") & " that can change picture position when printing or print previewing."
            Msg2 = sAddInCaptByApp & " - Picture with Text in the " & IIf(lEntryPointHdFt < 4, "Header", "Footer")
        End If
        MyMsgBox Msg1, 1, Msg2, Left / Twips + 12, Top / Twips + 12
        bOnce = True
    End If
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If CloseMode = 0 Then Cancel_Bt_Click
End Sub

Private Sub Image1_Fr_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    MovX = X
    MovY = Y
End Sub

Private Sub Image1_Fr_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If Button = 1 Then             'Only move control if mouse button is down
        Image1_Fr.Move Image1_Fr.Left + X - MovX, Image1_Fr.Top + Y - MovY
        If ConfineMovToPaper_ChB.Value Then
            If Image1_Fr.Left < 0 Then Image1_Fr.Left = 0
            If Image1_Fr.Top < 0 Then Image1_Fr.Top = 0
            If Image1_Fr.Left + Image1_Fr.Width > InsideWidth Then Image1_Fr.Left = InsideWidth - Image1_Fr.Width
            If Image1_Fr.Top + Image1_Fr.Height > InsideHeight Then Image1_Fr.Top = InsideHeight - Image1_Fr.Height
        End If
    End If
    DisplayPos
End Sub

Private Sub Image1_Fr_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    Image1_Fr.Left = Image1_Fr.Left - 1 * (KeyCode = 39) + 1 * (KeyCode = 37)
    Image1_Fr.Top = Image1_Fr.Top - 1 * (KeyCode = 40) + 1 * (KeyCode = 38)
    If ConfineMovToPaper_ChB.Value Then
        If Image1_Fr.Left < 0 Then Image1_Fr.Left = 0
        If Image1_Fr.Top < 0 Then Image1_Fr.Top = 0
        If Image1_Fr.Left + Image1_Fr.Width > InsideWidth Then Image1_Fr.Left = InsideWidth - Image1_Fr.Width
        If Image1_Fr.Top + Image1_Fr.Height > InsideHeight Then Image1_Fr.Top = InsideHeight - Image1_Fr.Height
    End If
    DisplayPos
End Sub

Private Sub Size_Bt_Click()
    FormSize.Show 1
End Sub

Private Sub UserForm_Initialize()
    Dim PaperWidth As Double
    Dim PaperHeight As Double
    Dim sPicFileOrigNames As String

    Set StoreSettingsSh = TargetSh    'Como se fosse um argumento entre fun|fffd||fffd|es chamada por UpdatePicFileOrigNames e RestPicsToFiles a seguir
    If Len(sPictureFile) > 4 And VBA.FileSystem.Dir(sPictureFile) = "" Then
        'If StoreSettingsSh change, get new picture file names or titles if paths are lost. 2=3 porque o aproveitamento s|fffd| tem sentido na mesma se|fffd||fffd|o do wtm
        If PicFileOrigNames.sSheet <> StoreSettingsSh.Name & " - " & StoreSettingsSh.Parent.FullName Then UpdatePicFileOrigNames
        Select Case lDiffPage
        Case 0
            Select Case lEntryPointHdFt
            Case 1: sPicFileOrigNames = PicFileOrigNames.sLH
            Case 2: sPicFileOrigNames = PicFileOrigNames.sCH
            Case 3: sPicFileOrigNames = PicFileOrigNames.sRH
            Case 4: sPicFileOrigNames = PicFileOrigNames.sLF
            Case 5: sPicFileOrigNames = PicFileOrigNames.sCF
            Case 6: sPicFileOrigNames = PicFileOrigNames.sRF
            End Select
        Case 1
            Select Case lEntryPointHdFt
            Case 1: sPicFileOrigNames = PicFileOrigNames.sLHFIRST
            Case 2: sPicFileOrigNames = PicFileOrigNames.sCHFIRST
            Case 3: sPicFileOrigNames = PicFileOrigNames.sRHFIRST
            Case 4: sPicFileOrigNames = PicFileOrigNames.sLFFIRST
            Case 5: sPicFileOrigNames = PicFileOrigNames.sCFFIRST
            Case 6: sPicFileOrigNames = PicFileOrigNames.sRFFIRST
            End Select
        Case 2
            Select Case lEntryPointHdFt
            Case 1: sPicFileOrigNames = PicFileOrigNames.sLHEVEN
            Case 2: sPicFileOrigNames = PicFileOrigNames.sCHEVEN
            Case 3: sPicFileOrigNames = PicFileOrigNames.sRHEVEN
            Case 4: sPicFileOrigNames = PicFileOrigNames.sLFEVEN
            Case 5: sPicFileOrigNames = PicFileOrigNames.sCFEVEN
            Case 6: sPicFileOrigNames = PicFileOrigNames.sRFEVEN
            End Select
        End Select
    Else
        sPicFileOrigNames = sPictureFile
    End If

    If Len(sPicFileOrigNames) > 4 And VBA.FileSystem.Dir(sPicFileOrigNames) = "" Then
        RestPicsToFiles
        Select Case lDiffPage
        Case 0
            Select Case lEntryPointHdFt
            Case 1: sPicFileOrigNames = PicFileOrigNames.sLH
            Case 2: sPicFileOrigNames = PicFileOrigNames.sCH
            Case 3: sPicFileOrigNames = PicFileOrigNames.sRH
            Case 4: sPicFileOrigNames = PicFileOrigNames.sLF
            Case 5: sPicFileOrigNames = PicFileOrigNames.sCF
            Case 6: sPicFileOrigNames = PicFileOrigNames.sRF
            End Select
        Case 1
            Select Case lEntryPointHdFt
            Case 1: sPicFileOrigNames = PicFileOrigNames.sLHFIRST
            Case 2: sPicFileOrigNames = PicFileOrigNames.sCHFIRST
            Case 3: sPicFileOrigNames = PicFileOrigNames.sRHFIRST
            Case 4: sPicFileOrigNames = PicFileOrigNames.sLFFIRST
            Case 5: sPicFileOrigNames = PicFileOrigNames.sCFFIRST
            Case 6: sPicFileOrigNames = PicFileOrigNames.sRFFIRST
            End Select
        Case 2
            Select Case lEntryPointHdFt
            Case 1: sPicFileOrigNames = PicFileOrigNames.sLHEVEN
            Case 2: sPicFileOrigNames = PicFileOrigNames.sCHEVEN
            Case 3: sPicFileOrigNames = PicFileOrigNames.sRHEVEN
            Case 4: sPicFileOrigNames = PicFileOrigNames.sLFEVEN
            Case 5: sPicFileOrigNames = PicFileOrigNames.sCFEVEN
            Case 6: sPicFileOrigNames = PicFileOrigNames.sRFEVEN
            End Select
        End Select
    End If
    Set StoreSettingsSh = Nothing

    If VBA.FileSystem.Dir(sPicFileOrigNames) <> "" Then
        On Error Resume Next
        Image1_Fr.Picture = LoadPicture(sPicFileOrigNames)
        If Err.Number <> 0 Then    'If fail maybe due file type then try to get iPict converting in wmf
            Err.Clear
            Image1_Fr.Picture = GetIPictWmfConv(sPicFileOrigNames)    'Image1_Fr.Picture = LoadPictureGDI(sPicFileOrigNames) 'de Stv Bull n|fffd|o funciona se em wz parece um formato de wmf comprimido
        End If
        If Err.Number = 0 And Not Image1_Fr.Picture Is Nothing Then Image1_Fr.BackColor = BackColor
    End If

    With TargetSh.PageSetup
        If .Orientation = xlPortrait Then
            PaperWidth = appHostApp.InchesToPoints(tPaperSize.dWidth)
            PaperHeight = appHostApp.InchesToPoints(tPaperSize.dHeight)
        Else
            PaperHeight = appHostApp.InchesToPoints(tPaperSize.dWidth)
            PaperWidth = appHostApp.InchesToPoints(tPaperSize.dHeight)
        End If

        If dHostAppVer >= 11 + 1 Then
            IniScaleWithDoc = .ScaleWithDocHeaderFooter    'Restaurar se cancelar
            IniAlignMargins = .AlignMarginsHeaderFooter    'N|fffd|o influi no centrar, mas |fffd| configur|fffd|vel no FormPositionCenter
            .ScaleWithDocHeaderFooter = False    'No 2007 essa condi|fffd||fffd|o |fffd| necess|fffd|ria para centralizar ou posicionar
        End If

        'Defining zoom
        Dim hdc As Long
        Dim ScrWidth As Double
        Dim ScrHeight As Double
        hdc = GetDC(0)
        'Screen Dimension in points (Pixels / PixelsByInch * 72)
        ScrWidth = apiGetSys(SM_CXSCREEN) / GetDeviceCaps(hdc, LOGPIXELSX) * 72
        ScrHeight = apiGetSys(SM_CYSCREEN) / GetDeviceCaps(hdc, LOGPIXELSY) * 72
        dbZoom = ScrHeight / PaperHeight
        If dbZoom > ScrWidth / PaperWidth Then dbZoom = ScrWidth / PaperWidth
        dbZoom = dbZoom * 0.85    'Folgar no v|fffd|deo para deixar espa|fffd|o para a barra iniciar do Windows, aproveitei e deixei igual ao printpreview do Excel em janela normal

        Width = PaperWidth * dbZoom * Twips
        Dim i As Long
        Do While InsideWidth < PaperWidth * dbZoom
            Width = Width + 0.1 * Twips
            If i < 5000 Then i = i + 1 Else Exit Do    'Seguran|fffd|a contra eventual loop infinito
        Loop
        Height = PaperHeight * dbZoom * Twips
        Do While InsideHeight < PaperHeight * dbZoom
            Height = Height + 0.1 * Twips
            If i < 5000 Then i = i + 1 Else Exit Do    'Seguran|fffd|a contra eventual loop infinito
        Loop

        MargLeft_Lb.Height = Height / Twips * 1.2   'Lb margin Sizes 1.2 seguran|fffd|a est|fffd|tica para extrapolar
        MargRight_Lb.Height = Height / Twips * 1.2
        MargHeader_Lb.Width = Width / Twips * 1.2
        MargTop_Lb.Width = Width / Twips * 1.2
        MargBottom_Lb.Width = Width / Twips * 1.2
        MargFooter_Lb.Width = Width / Twips * 1.2

        MargLeft_Lb.Left = .LeftMargin * dbZoom    'Lb margin positions
        MargRight_Lb.Left = InsideWidth - .RightMargin * dbZoom
        MargHeader_Lb.Top = .HeaderMargin * dbZoom
        MargTop_Lb.Top = .TopMargin * dbZoom
        MargBottom_Lb.Top = InsideHeight - .BottomMargin * dbZoom
        MargFooter_Lb.Top = InsideHeight - .FooterMargin * dbZoom

        Select Case lDiffPage
        Case 0
            Select Case lEntryPointHdFt
            Case 1: Set HrzHdftPosPict = .LeftHeaderPicture: sHdFtText = .LeftHeader
            Case 2: Set HrzHdftPosPict = .CenterHeaderPicture: sHdFtText = .CenterHeader
            Case 3: Set HrzHdftPosPict = .RightHeaderPicture: sHdFtText = .RightHeader
            Case 4: Set HrzHdftPosPict = .LeftFooterPicture: sHdFtText = .LeftFooter
            Case 5: Set HrzHdftPosPict = .CenterFooterPicture: sHdFtText = .CenterFooter
            Case 6: Set HrzHdftPosPict = .RightFooterPicture: sHdFtText = .RightFooter
            End Select
        Case 1
            Select Case lEntryPointHdFt
            Case 1: Set HrzHdftPosPict = .FirstPage.LeftHeader.Picture: sHdFtText = .FirstPage.LeftHeader.Text
            Case 2: Set HrzHdftPosPict = .FirstPage.CenterHeader.Picture: sHdFtText = .FirstPage.CenterHeader.Text
            Case 3: Set HrzHdftPosPict = .FirstPage.RightHeader.Picture: sHdFtText = .FirstPage.RightHeader.Text
            Case 4: Set HrzHdftPosPict = .FirstPage.LeftFooter.Picture: sHdFtText = .FirstPage.LeftFooter.Text
            Case 5: Set HrzHdftPosPict = .FirstPage.CenterFooter.Picture: sHdFtText = .FirstPage.CenterFooter.Text
            Case 6: Set HrzHdftPosPict = .FirstPage.RightFooter.Picture: sHdFtText = .FirstPage.RightFooter.Text
            End Select
        Case 2
            Select Case lEntryPointHdFt
            Case 1: Set HrzHdftPosPict = .EvenPage.LeftHeader.Picture: sHdFtText = .EvenPage.LeftHeader.Text
            Case 2: Set HrzHdftPosPict = .EvenPage.CenterHeader.Picture: sHdFtText = .EvenPage.CenterHeader.Text
            Case 3: Set HrzHdftPosPict = .EvenPage.RightHeader.Picture: sHdFtText = .EvenPage.RightHeader.Text
            Case 4: Set HrzHdftPosPict = .EvenPage.LeftFooter.Picture: sHdFtText = .EvenPage.LeftFooter.Text
            Case 5: Set HrzHdftPosPict = .EvenPage.CenterFooter.Picture: sHdFtText = .EvenPage.CenterFooter.Text
            Case 6: Set HrzHdftPosPict = .EvenPage.RightFooter.Picture: sHdFtText = .EvenPage.RightFooter.Text
            End Select
        End Select

        IniLockAspectRatio = HrzHdftPosPict.LockAspectRatio
        HrzHdftPosPict.LockAspectRatio = msoFalse

        IniCropLeft = HrzHdftPosPict.CropLeft
        IniCropRight = HrzHdftPosPict.CropRight
        IniCropTop = HrzHdftPosPict.CropTop
        IniCropBottom = HrzHdftPosPict.CropBottom

        HrzHdftPosPict.CropLeft = 0
        HrzHdftPosPict.CropRight = 0
        HrzHdftPosPict.CropTop = 0
        HrzHdftPosPict.CropBottom = 0

        IniWidth = HrzHdftPosPict.Width
        IniHeight = HrzHdftPosPict.Height

        Image1_Fr.Width = IniWidth * dbZoom
        Image1_Fr.Height = IniHeight * dbZoom
        IniWidthFr = Image1_Fr.Width
        IniHeightFr = Image1_Fr.Height

        HrzHdftPosPict.CropLeft = IniCropLeft
        HrzHdftPosPict.CropRight = IniCropRight
        HrzHdftPosPict.CropTop = IniCropTop
        HrzHdftPosPict.CropBottom = IniCropBottom
        HrzHdftPosPict.LockAspectRatio = IniLockAspectRatio

        Select Case lEntryPointHdFt    'Lefts
        Case 1, 4    'In left. Original of version with only LH the 1
            Image1_Fr.Left = (OriWidth - IniCropLeft / LeftAdjustFat) * IniWidth / OriWidth * dbZoom - Image1_Fr.Width + IIf(dHostAppVer >= 11 + 1 And bAnchorOnLeftMargin, IIf(.LeftMargin < 53.858, 53.858, .LeftMargin), 53.858) * dbZoom
        Case 2, 5    'In center. O Excel centraliza levando em conta os dois crops laterais. LeftAdjustFat n|fffd|o parece necess|fffd|rio aplicar e remover
            If IniCropLeft <= 0 And IniCropLeft <= IniCropRight Then
                Image1_Fr.Left = InsideWidth / 2 - (OriWidth + (IniCropLeft + IniCropRight)) * IniWidth / OriWidth * dbZoom / 2
            Else
                Image1_Fr.Left = InsideWidth / 2 - (OriWidth - (IniCropLeft + IniCropRight)) * IniWidth / OriWidth * dbZoom / 2
            End If
        Case 3, 6    'In right. Semelhante ao left, mas como ajusta no CropRight um 'Right' |fffd| que |fffd| encontrado e precisa ser convertido em Left
            Image1_Fr.Left = (OriWidth - IniCropRight / LeftAdjustFat) * IniWidth / OriWidth * dbZoom - Image1_Fr.Width + IIf(dHostAppVer >= 11 + 1 And bAnchorOnLeftMargin, IIf(.RightMargin < 53.858, 53.858, .RightMargin), 53.858) * dbZoom
            Image1_Fr.Left = InsideWidth - Image1_Fr.Width - Image1_Fr.Left
        End Select

        Select Case lEntryPointHdFt    'Tops
        Case 1, 2, 3    'In header. Original of version with only LH the 1
            Image1_Fr.Top = (OriHeight - IniCropTop / TopAdjustFat) * IniHeight / OriHeight * dbZoom - Image1_Fr.Height + .HeaderMargin * dbZoom   '- 5.5
        Case 4, 5, 6    'In footer. Semelhante ao header, mas como ajusta no CropBottom um 'Bottom' |fffd| que |fffd| encontrado e precisa ser convertido em Top
            Image1_Fr.Top = (OriHeight - IniCropBottom / TopAdjustFat) * IniHeight / OriHeight * dbZoom - Image1_Fr.Height + .FooterMargin * dbZoom   '- 5.5
            Image1_Fr.Top = InsideHeight - Image1_Fr.Height - Image1_Fr.Top
        End Select

        IniLeftFr = Image1_Fr.Left
        IniTopFr = Image1_Fr.Top
        DisplayPos
    End With

    ButtonBar_Fr.Left = Width / Twips / 2 - ButtonBar_Fr.Width / 2 - 3    'Basta posicionar o frame usado para que os bot|fffd|es fiquem em frente a figura
    'Preview_Bt.Left = Width / Twips / 2 - Preview_Bt.Width / 2 - 3
    'Center_Bt.Left = Preview_Bt.Left - Center_Bt.Width - 3
    'Size_Bt.Left = Center_Bt.Left - Size_Bt.Width - 3
    'Ok_Bt.Left = Preview_Bt.Left + Preview_Bt.Width + 3
    'Cancel_Bt.Left = Ok_Bt.Left + Ok_Bt.Width + 3
    HatchAreaToCent_Img.Visible = False

    If IsPortg Then
        Caption = sAddInCaptByApp & " - Tamanho e Posi|fffd||fffd|o" & IIf(bCalledByPageStpMgr, " - " & PictPosSpell(lDiffPage, lEntryPointHdFt), " da Figura")
        Size_Bt.Caption = "Tamanho"
        Center_Bt.Caption = "Centrar"
        Preview_Bt.Caption = "Visualizar"
        Cancel_Bt.Caption = "Cancelar"
        ConfineMovToPaper_ChB.Caption = "Confinar movim. aos lim. do papel (Mova com mouse ou teclas de seta)"
        Image1_Fr.ControlTipText = "Figura - Mova com mouse or teclas de seta"

        MargLeft_Lb.ControlTipText = "Margem esquerda"
        MargRight_Lb.ControlTipText = "Margem direita"
        MargHeader_Lb.ControlTipText = "Margem do cabe|fffd|alho (Margem da |fffd|rea imprim|fffd|vel)"
        MargTop_Lb.ControlTipText = "Margem superior"
        MargBottom_Lb.ControlTipText = "Margem inferior"
        MargFooter_Lb.ControlTipText = "Margem do rodap|fffd| (Margem da |fffd|rea imprim|fffd|vel)"
    Else
        Caption = sAddInCaptByApp & " - Size and Position" & IIf(bCalledByPageStpMgr, " - " & PictPosSpell(lDiffPage, lEntryPointHdFt), " of the Picture")
    End If
    PressBot = 0

    'Get form handle
    Form_hWnd1 = FindWindowA(IIf(bIsCOMAddin, "ThunderRT6DFrame", "ThunderDFrame"), Caption)
    If Form_hWnd1 = 0 Then Form_hWnd1 = FindWindowA(vbNullString, Caption)
    'Basear o form na janela do Excel
    If bIsCOMAddin Then SetWindowLongA Form_hWnd1, GWL_HWNDPARENT, App_hWnd
    'Fixar form
    If bIsCOMAddin Then FixForm Form_hWnd1    'Se alterar caption, precisa aplicar novamente
End Sub
Attribute VB_Name = "FormText"
Attribute VB_Base = "0{31AB1193-CF76-4862-9A2E-131BEE75AA72}{61A60049-A51F-492E-A67F-1E2F7B925AD2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Option Explicit
Dim Form_hWnd1 As Long

Private Sub Insert_Bt_Click()
    If Text_Cb.Value = "" Then
        Msg1 = IIf(IsPortg, "Por favor, informe o texto!", "Please, enter the text!")
        Msg2 = IIf(IsPortg, "Inserir Texto - Planilha ''", "Insert Text - Sheet ''") & TargetSh.Name & "''"
        MyMsgBox Msg1, 1, Msg2, Left / Twips - 60, Top / Twips + Insert_Bt.Top + 12
        Exit Sub
    End If

    Msg1 = IIf(IsPortg, "Inserir o texto ''", "Insert the text ''") & Text_Cb.Value & "''?"
    Msg2 = IIf(IsPortg, "Inserir Texto - Planilha ''", "Insert Text - Sheet ''") & TargetSh.Name & "''"
    If MyMsgBox(Msg1, 2, Msg2, Left / Twips - 60, Top / Twips + Insert_Bt.Top + 12) = 2 Then Exit Sub
    bTestOtherIPicCode = ShiftDown
    PressBot = 1
    Hide
End Sub

Private Sub Cancel_Bt_Click()
    Unload Me
    PressBot = 2
End Sub

Private Sub Default_Bt_Click()
    ListFonts
    Size_Cb.ListIndex = 0
    Color_Tb.BackColor = RGB(192 + 18, 192 + 18, 192 + 18)
    PresetEffect_Tb.Value = 0
    OthersTransp_Tb.Value = 50    'Semitransp
    OtherRot_Tb.Value = 315    'Diagonal
End Sub

Private Sub Semitransp_OpB_Click()
    OtherRot_OpB.Value = False
    OthersTransp_Tb.Value = 50
End Sub

Private Sub OthersTransp_OpB_Click()
    OthersTransp_Tb_Change
End Sub

Private Sub OthersTransp_Tb_Change()
    Static lLastValid As Long
    If OthersTransp_Tb.Value = "" Then Exit Sub
    If Not IsNumeric(OthersTransp_Tb.Value) Then OthersTransp_Tb.Value = lLastValid
    If OthersTransp_Tb.Value < 0 Then OthersTransp_Tb.Value = lLastValid
    If OthersTransp_Tb.Value > 100 Then OthersTransp_Tb.Value = Left(OthersTransp_Tb.Value, 2)    '& Right(OthersTransp_Tb.Value, 1)
    If OthersTransp_Tb.Value > 100 Then OthersTransp_Tb.Value = lLastValid
    lLastValid = OthersTransp_Tb.Value
    If OthersTransp_Tb.Value = 50 Then Semitransp_OpB.Value = True Else OthersTransp_OpB.Value = True
End Sub

Private Sub Horizontal_OpB_Click()
    Diagonal_OpB.Value = False
    Vertical_OpB.Value = False
    OtherRot_OpB.Value = False
    OtherRot_Tb.Value = 0
End Sub

Private Sub Vertical_OpB_Click()
    Diagonal_OpB.Value = False
    Horizontal_OpB.Value = False
    OtherRot_OpB.Value = False
    OtherRot_Tb.Value = 270
End Sub

Private Sub Diagonal_OpB_Click()
    Horizontal_OpB.Value = False
    Vertical_OpB.Value = False
    OtherRot_OpB.Value = False
    OtherRot_Tb.Value = 315
End Sub

Private Sub OtherRot_OpB_Click()
    OtherRot_Tb_Change
End Sub

Private Sub Invert_ChB_Click()
    If Not Invert_ChB.Value Then Exit Sub
    If OtherRot_Tb.Value + 180 > 359 Then OtherRot_Tb.Value = OtherRot_Tb.Value + 180 - 360 _
        Else OtherRot_Tb.Value = OtherRot_Tb.Value + 180
    Invert_ChB.Value = False
End Sub

Private Sub OtherRot_Tb_Change()
    Static lLastValid As Long
    If OtherRot_Tb.Value = "" Then Exit Sub
    If Not IsNumeric(OtherRot_Tb.Value) Then OtherRot_Tb.Value = lLastValid
    If OtherRot_Tb.Value < 0 Then OtherRot_Tb.Value = lLastValid
    If OtherRot_Tb.Value >= 360 Then OtherRot_Tb.Value = Left(OtherRot_Tb.Value, 2)    '& Right(OtherRot_Tb.Value, 1)
    If OtherRot_Tb.Value >= 360 Then OtherRot_Tb.Value = lLastValid
    lLastValid = OtherRot_Tb.Value
    If OtherRot_Tb.Value = 0 Then
        Horizontal_OpB.Value = True
    ElseIf OtherRot_Tb.Value = 270 Then
        Vertical_OpB.Value = True
    ElseIf OtherRot_Tb.Value = 315 Then
        Diagonal_OpB.Value = True
    Else
        OtherRot_OpB.Value = True
    End If
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    PressBot = 2
End Sub

Private Sub UserForm_Initialize()
    With Text_Cb
        If IsPortg Then
            .AddItem ("AMOSTRA")
            .AddItem ("CONFIDENCIAL")
            .AddItem ("EDI|fffd||fffd|O FINAL")
            .AddItem ("EMISS|fffd|O FINAL")
            .AddItem ("C|fffd|PIA")
            .AddItem ("MINUTA")
            .AddItem ("N|fffd|O COPIAR")
            .AddItem ("ORIGINAL")
            .AddItem ("PESSOAL")
            .AddItem ("PRELIMINAR")
            .AddItem ("RASCUNHO")
            .AddItem ("ULTRA-SECRETO")
            .AddItem ("URGENTE")
            .AddItem ("VERS|fffd|O FINAL")
            .ListIndex = -1    '6  'Talvez iniciar vazio seja melhor para perceber que pode digitar
        Else
            .AddItem ("ASAP")
            .AddItem ("CONFIDENTIAL")
            .AddItem ("COPY")
            .AddItem ("DO NOT COPY")
            .AddItem ("DRAFT")
            .AddItem ("FINAL VERSION")
            .AddItem ("FINAL EDITION")
            .AddItem ("MINUTES")
            .AddItem ("PERSONAL")
            .AddItem ("PRELIMINARY")
            .AddItem ("SAMPLE")
            .AddItem ("TOP SECRET")
            .AddItem ("URGENT")
            .ListIndex = -1    '4
        End If
    End With
    ListFonts
    Dim i As Long
    With Size_Cb
        .AddItem ("Auto")
        For i = 36 To 150
            .AddItem (i)
        Next
        .ListIndex = 0
    End With
    Color_Tb.BackColor = RGB(192 + 18, 192 + 18, 192 + 18)
    PresetEffect_Tb.Value = 0: If dHostAppVer >= 11 + 1 Then PresetEffect_Lb.Visible = False: PresetEffect_Tb.Visible = False: PresetEffect2_Lb.Visible = False  'A partir do 2007 PresetEffect s|fffd| define inicilamente a letra e todo o resto deixa para ser feito com diferentes propriedades e methodos com dezenas de op|fffd||fffd|es. Melhor ocultar e ter efeito |fffd|nico que achei ideial para watermark. Se o usu|fffd|rio desejar algo mais complexo que use o bot|fffd|o Selection para inserir sua pr|fffd|pria WordArt.
    OthersTransp_Tb.Value = 50    'Semitransp
    OtherRot_Tb.Value = 315    'Diagonal

    If IsPortg Then
        Caption = "Texto para " & IIf(lEntryPointHdFt < 4, "Marca-d'|fffd|gua", "Marca-de-carimbo") & " - " & PictPosSpell(lDiffPage, lEntryPointHdFt)
        If bCalledByPageStpMgr Then Caption = "Texto para Figura - " & PictPosSpell(lDiffPage, lEntryPointHdFt)
        Text_Lb.Caption = "Texto:"
        Font_Lb.Caption = "Fonte:"
        Size_Lb.Caption = "Tamanho:"
        Color_Lb.Caption = "Cor:"
        PresetEffect_Lb.Caption = "Efeito:": PresetEffect_Tb.ControlTipText = "Efeito de texto pr|fffd|-definido": PresetEffect2_Lb.ControlTipText = "Selecionar um efeito de texto pr|fffd|-definido"
        Transparency_Fr.Caption = "Transpar|fffd|ncia: "
        Semitransp_OpB.Caption = "Semitransparente"
        OthersTransp_OpB.Caption = "Outras:"
        LayoutRot_Fr.Caption = "Layout de rota|fffd||fffd|o: "
        OtherRot_OpB.Caption = "Outras:"
        Invert_ChB.Caption = "Inverter"
        Default_Bt.Caption = "Padr|fffd|o"
        Insert_Bt.Caption = "Inserir"
        Cancel_Bt.Caption = "Cancelar"
    Else
        Caption = "Text for " & IIf(lEntryPointHdFt < 4, "Watermark", "Stampmark") & " - " & PictPosSpell(lDiffPage, lEntryPointHdFt)
        If bCalledByPageStpMgr Then Caption = "Text to Picture - " & PictPosSpell(lDiffPage, lEntryPointHdFt)
    End If
    PresetEffect_Fr.Visible = False

    'Get form handle
    Form_hWnd1 = FindWindowA(IIf(bIsCOMAddin, "ThunderRT6DFrame", "ThunderDFrame"), Caption)
    If Form_hWnd1 = 0 Then Form_hWnd1 = FindWindowA(vbNullString, Caption)
    'Basear o form na janela do Excel
    If bIsCOMAddin Then SetWindowLongA Form_hWnd1, GWL_HWNDPARENT, App_hWnd
    'Fixar form
    If bIsCOMAddin Then FixForm Form_hWnd1    'Se alterar caption, precisa aplicar novamente
End Sub

Sub ListFonts()
    Dim CtrlFont As CommandBarControl
    Dim TempCmdBar As CommandBar
    Dim i As Long

    Set CtrlFont = appHostApp.CommandBars("Formatting").FindControl(ID:=1728)
    If CtrlFont Is Nothing Then
        Set TempCmdBar = appHostApp.CommandBars.Add(, , , True)
        Set CtrlFont = TempCmdBar.Controls.Add(ID:=1728)
    End If

    On Error Resume Next    'CtrlFont desabilta em certo objtetos gerando erro. Seleciona a cel ativa resolve, mas |fffd| melhor prevenir
    If Not CtrlFont.Enabled Then appHostApp.ActiveWindow.ActiveCell.Select

    Font_Cb.RowSource = ""
    On Error Resume Next
    For i = 0 To CtrlFont.ListCount - 1
        With Font_Cb
            .AddItem CtrlFont.List(i + 1)
            If CtrlFont.List(i + 1) = "Arial" Then Font_Cb.Value = CtrlFont.List(i + 1)
            If CtrlFont.List(i + 1) = "Times New Roman" Then Font_Cb.Value = CtrlFont.List(i + 1)
        End With
    Next i
    If Not TempCmdBar Is Nothing Then TempCmdBar.Delete
End Sub

Private Sub Color1_Lb_Click()
    Dim hWnd As Long
    hWnd = FindWindowA(IIf(bIsCOMAddin, "ThunderRT6DFrame", "ThunderDFrame"), Caption)
    Color_Tb.BackColor = PickColor(Color_Tb.BackColor, hWnd)
End Sub

Private Sub PresetEffect2_Lb_Click()
    If PresetEffect_Fr.Visible Then HidePresetEffect_Fr: Exit Sub
    PresetEffect_Fr.Left = Color_Lb.Left - 2 + 6.5    '6.5 faixa de segur para fechar ao mover mouse
    PresetEffect_Fr.Top = PresetEffect_Tb.Top + PresetEffect_Tb.Height - 2
    Width = (PresetEffect_Fr.Left + PresetEffect_Fr.Width) * Twips + (Width - InsideWidth * Twips) + 7 * Twips   'Width = (PresetEffect_Fr.Left + PresetEffect_Fr.Width + 5 + 6.5) * Twips
    Height = (PresetEffect_Fr.Top + PresetEffect_Fr.Height) * Twips + (Height - InsideHeight * Twips) + 8 * Twips   'Height = (PresetEffect_Fr.Top + PresetEffect_Fr.Height + 25 + 6.5) * Twips
    PresetEffect_Fr.Visible = True
End Sub

Private Sub PresetEffect_Fr_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    PresetEffect_Tb.Value = Int(Y / (PresetEffect_Fr.Height / 5)) * 6 + Int(X / (PresetEffect_Fr.Width / 6))
    If (PresetEffect_Tb.Value + 1) - Int((PresetEffect_Tb.Value + 1) / 6) * 6 = 0 Then OtherRot_Tb.Value = 90 _
        Else OtherRot_Tb.Value = 315    'Os verticais no preset devem manter a rot de 90 do preset
    HidePresetEffect_Fr
End Sub

Private Sub HidePresetEffect_Fr()
    PresetEffect_Fr.Visible = False
    Width = (PresetEffect2_Lb.Left + PresetEffect2_Lb.Width) * Twips + (Width - InsideWidth * Twips) + 5 * Twips   'Width = (PresetEffect2_Lb.Left + PresetEffect2_Lb.Width + 9.5) * Twips
    Height = (Cancel_Bt.Top + Cancel_Bt.Height) * Twips + (Height - InsideHeight * Twips) + 5 * Twips   'Height = (Cancel_Bt.Top + Cancel_Bt.Height + 29) * Twips
End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If PresetEffect_Fr.Visible Then HidePresetEffect_Fr
End Sub
Private Sub Transparency_Fr_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If PresetEffect_Fr.Visible Then HidePresetEffect_Fr
End Sub
Private Sub LayoutRot_Fr_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    If PresetEffect_Fr.Visible Then HidePresetEffect_Fr
End Sub
Attribute VB_Name = "FormWatermark"
Attribute VB_Base = "0{5464A3C8-0849-4BE9-BE30-6D8759F75827}{23229600-38F4-4CF6-A262-9EA7901EE087}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Option Explicit
Dim EmailSubj As String
Dim HomePageUrl As String
Public vFileName    'as String need be variable
Public lInsTextSel As Long
Dim Wb As Workbook
Dim Form_hWnd1 As Long

Private Sub CopyTo_Bt_Click()
    If Not bIsCOMAddin And Not bUsePgStpManager Then MsgBox "Lembrete em edi|fffd||fffd|o xla! Este comando s|fffd| suporta copiar figura em Left - Header!", vbInformation, "Copy to... command "   'xx Usado em debug
    If bUsePgStpManager Then
        bHasCal = GetHasCal("PageSetpMgr")
        If bHasCal And Not vCallVerOld Then
            lBotFormWatermark = 10 + lEntryPointHdFt
            Hide
            If dHostAppVer >= 11 + 1 + 2 + 1 Then SetForegroundWindowEsp TargetWb.Windows(1).hWnd, 0.5    'In Excel 15 hiding a modal form can change TargetWb focus.
        Else
            UsePgStpManager_ChB.Value = False    'Desabilita em sil|fffd|ncio
            Exit Sub
        End If
    Else
        Hide
        If dHostAppVer >= 11 + 1 + 2 + 1 Then SetForegroundWindowEsp TargetWb.Windows(1).hWnd, 0.5    'In Excel 15 hiding a modal form can change TargetWb focus.
        FormCopyTo.Show 1

        'Update workbook combobox due possible open or close workbooks
        UpdateWorkbook_Cb
        Show 1
    End If
End Sub

Private Sub Delete_Bt_Click()
    If bUsePgStpManager And Not bCalledByPageStpMgr Then    'In PSMgr delete picture only
        bHasCal = GetHasCal("PageSetpMgr")
        If bHasCal And Not vCallVerOld Then
            lBotFormWatermark = 20 + lEntryPointHdFt
            Hide
            If dHostAppVer >= 11 + 1 + 2 + 1 Then SetForegroundWindowEsp TargetWb.Windows(1).hWnd, 0.5    'In Excel 15 hiding a modal form can change TargetWb focus.
        Else
            UsePgStpManager_ChB.Value = False    'Desabilita em sil|fffd|ncio
            Exit Sub
        End If
    Else
        If IsPortg Then
            Msg1 = "Tem certeza que deseja excluir a figura em " & PictPosSpell(lDiffPage, lEntryPointHdFt) & "?"
            Msg2 = sAddInCaptByApp & " - Excluir Figura!"
        Else
            Msg1 = "Are you sure you want to delete the picture on " & PictPosSpell(lDiffPage, lEntryPointHdFt) & "?"
            Msg2 = sAddInCaptByApp & " - Delete Picture!"
        End If
        If MyMsgBox(Msg1, 2, Msg2, Left / Twips - 80, Top / Twips + Delete_Bt.Top - 12) = 1 Then
            With TargetSh.PageSetup
                Select Case lDiffPage
                Case 0
                    Select Case lEntryPointHdFt
                    Case 1: .LeftHeaderPicture.Filename = "": .LeftHeader = MyReplace(.LeftHeader, "&G", "")
                    Case 2: .CenterHeaderPicture.Filename = "": .CenterHeader = MyReplace(.CenterHeader, "&G", "")
                    Case 3: .RightHeaderPicture.Filename = "": .RightHeader = MyReplace(.RightHeader, "&G", "")
                    Case 4: .LeftFooterPicture.Filename = "": .LeftFooter = MyReplace(.LeftFooter, "&G", "")
                    Case 5: .CenterFooterPicture.Filename = "": .CenterFooter = MyReplace(.CenterFooter, "&G", "")
                    Case 6: .RightFooterPicture.Filename = "": .RightFooter = MyReplace(.RightFooter, "&G", "")
                    End Select
                Case 1
                    Select Case lEntryPointHdFt
                    Case 1: .FirstPage.LeftHeader.Picture.Filename = "": .FirstPage.LeftHeader.Text = MyReplace(.FirstPage.LeftHeader.Text, "&G", "")
                    Case 2: .FirstPage.CenterHeader.Picture.Filename = "": .FirstPage.CenterHeader.Text = MyReplace(.FirstPage.CenterHeader.Text, "&G", "")
                    Case 3: .FirstPage.RightHeader.Picture.Filename = "": .FirstPage.RightHeader.Text = MyReplace(.FirstPage.RightHeader.Text, "&G", "")
                    Case 4: .FirstPage.LeftFooter.Picture.Filename = "": .FirstPage.LeftFooter.Text = MyReplace(.FirstPage.LeftFooter.Text, "&G", "")
                    Case 5: .FirstPage.CenterFooter.Picture.Filename = "": .FirstPage.CenterFooter.Text = MyReplace(.FirstPage.CenterFooter.Text, "&G", "")
                    Case 6: .FirstPage.RightFooter.Picture.Filename = "": .FirstPage.RightFooter.Text = MyReplace(.FirstPage.RightFooter.Text, "&G", "")
                    End Select
                Case 2
                    Select Case lEntryPointHdFt
                    Case 1: .EvenPage.LeftHeader.Picture.Filename = "": .EvenPage.LeftHeader.Text = MyReplace(.EvenPage.LeftHeader.Text, "&G", "")
                    Case 2: .EvenPage.CenterHeader.Picture.Filename = "": .EvenPage.CenterHeader.Text = MyReplace(.EvenPage.CenterHeader.Text, "&G", "")
                    Case 3: .EvenPage.RightHeader.Picture.Filename = "": .EvenPage.RightHeader.Text = MyReplace(.EvenPage.RightHeader.Text, "&G", "")
                    Case 4: .EvenPage.LeftFooter.Picture.Filename = "": .EvenPage.LeftFooter.Text = MyReplace(.EvenPage.LeftFooter.Text, "&G", "")
                    Case 5: .EvenPage.CenterFooter.Picture.Filename = "": .EvenPage.CenterFooter.Text = MyReplace(.EvenPage.CenterFooter.Text, "&G", "")
                    Case 6: .EvenPage.RightFooter.Picture.Filename = "": .EvenPage.RightFooter.Text = MyReplace(.EvenPage.RightFooter.Text, "&G", "")
                    End Select
                End Select
            End With
            Sheet_Cb_Change
        End If
    End If
End Sub

Public Sub UpdateWorkbook_Cb()
    vEnableEvents = False
    Do While Workbook_Cb.ListCount > 0
        Workbook_Cb.RemoveItem (0)
    Loop
    For Each Wb In appHostApp.Workbooks
        If Wb.Windows(1).Visible Then
            Workbook_Cb.AddItem (Wb.Name)
            If Wb.Name = TargetWb.Name Then Workbook_Cb.Value = Wb.Name
        End If
    Next
    vEnableEvents = True
    On Error Resume Next
    TargetWb.Activate: ActWbWinAppSDIBaseForm Form_hWnd1
    TargetSh.Activate
End Sub

Private Sub ImageCtrl_Bt_Click()
'    appHostApp.ScreenUpdating = False
    Hide
    If dHostAppVer >= 11 + 1 + 2 + 1 Then SetForegroundWindowEsp TargetWb.Windows(1).hWnd, 0.5    'In Excel 15 hiding a modal form can change TargetWb focus.
    FormImageControl.Show 1
    '    appHostApp.ScreenUpdating = True
    Show 1
End Sub

Private Sub SizePos_Bt_Click()
    Hide
    If dHostAppVer >= 11 + 1 + 2 + 1 Then SetForegroundWindowEsp TargetWb.Windows(1).hWnd, 0.5    'In Excel 15 hiding a modal form can change TargetWb focus.
    With TargetSh.PageSetup
        Select Case lDiffPage
        Case 0
            Select Case lEntryPointHdFt
            Case 1: GetPicOrigSize .LeftHeaderPicture
            Case 2: GetPicOrigSize .CenterHeaderPicture
            Case 3: GetPicOrigSize .RightHeaderPicture
            Case 4: GetPicOrigSize .LeftFooterPicture
            Case 5: GetPicOrigSize .CenterFooterPicture
            Case 6: GetPicOrigSize .RightFooterPicture
            End Select
        Case 1
            Select Case lEntryPointHdFt
            Case 1: GetPicOrigSize .FirstPage.LeftHeader.Picture
            Case 2: GetPicOrigSize .FirstPage.CenterHeader.Picture
            Case 3: GetPicOrigSize .FirstPage.RightHeader.Picture
            Case 4: GetPicOrigSize .FirstPage.LeftFooter.Picture
            Case 5: GetPicOrigSize .FirstPage.CenterFooter.Picture
            Case 6: GetPicOrigSize .FirstPage.RightFooter.Picture
            End Select
        Case 2
            Select Case lEntryPointHdFt
            Case 1: GetPicOrigSize .EvenPage.LeftHeader.Picture
            Case 2: GetPicOrigSize .EvenPage.CenterHeader.Picture
            Case 3: GetPicOrigSize .EvenPage.RightHeader.Picture
            Case 4: GetPicOrigSize .EvenPage.LeftFooter.Picture
            Case 5: GetPicOrigSize .EvenPage.CenterFooter.Picture
            Case 6: GetPicOrigSize .EvenPage.RightFooter.Picture
            End Select
        End Select
    End With
    FormSizePosition.Show 1
    Show 1
End Sub

Private Sub UsePgStpManager_ChB_Click()
    If vEnableEvents = False Then Exit Sub
    bUsePgStpManager = Not bUsePgStpManager

    If bUsePgStpManager Then    'Se for para usar pgstpmgr, verificar se existe antes de salvar a config
        bHasCal = GetHasCal("PageSetpMgr")
        If Not (bHasCal And Not vCallVerOld) Then
            If IsPortg Then
                Msg1 = sMsgAboutGCP
                Msg2 = "Gerenciador de Configura|fffd||fffd|o de P|fffd|gina para Excel N|fffd|o Encontrado!"
            Else
                Msg1 = sMsgAboutPSM
                Msg2 = "Page Setup Manager for Excel Not Found!"
            End If
            If MyMsgBox(Msg1, 2, Msg2) = 1 Then
                appHostApp.ActiveWorkbook.FollowHyperlink "http://cpap.com.br/orlando/" & "ExcelPageSetpMgr" & IIf(IsPortg, "Mais.asp?IdC=ProcInfo", "More.asp?IdC=LookInfo"), , True  'DifAppMet
            End If
            UsePgStpManager_ChB.Value = False
            Exit Sub
        End If
    End If
    WriteINISetting

    If IsPortg Then
        Delete_Bt.Caption = "Excluir" & IIf(bUsePgStpManager, " via GCP", "")
        CopyTo_Bt.Caption = "Copiar Para" & IIf(bUsePgStpManager, " via GCP", "...")
    Else
        Delete_Bt.Caption = "Delete" & IIf(bUsePgStpManager, " via PSM", "")
        CopyTo_Bt.Caption = "Copy To" & IIf(bUsePgStpManager, " via PSM", "...")
    End If
End Sub

Private Sub UserForm_Initialize()
    Dim PictureFile As String
    '    IsPortg = appHostApp.International(xlCountryCode) = 55
    If Width > 2 * 311 Then Twips = 20 Else Twips = 1    'Em ComAddin as dimens|fffd|es do formul|fffd|rio |fffd| em twip, mas as posi|fffd||fffd|es dos controles continuma em pontos

    vEnableEvents = False
    If bCalledByPageStpMgr Then
        bUsePgStpManager = True
        UsePgStpManager_ChB.Visible = False
        CopyTo_Bt.Visible = False    'In PSMgr, if want to copy, must go to menu
        Delete_Bt.Left = 76.1: Close_Bt.Left = 175.85
        HomePage_Lb.Top = 285: Email_Lb.Top = 285: Height = 301.75 * Twips + (Height - InsideHeight * Twips) - 1 * Twips  'Height = 324.75 * Twips
        AutentReg    'Necess|fffd|rio para definir captions de label
    Else
        bUsePgStpManager = bUsePgStpManager Or bCalledByPageStpMgr Or 2 = 2    'xxHabilitar sempre ao iniciar enquanto temporariamente estiver ocultando ao iniciar
        If bUsePgStpManager And Not bCalledByPageStpMgr Then bHasCal = GetHasCal("PageSetpMgr"): bUsePgStpManager = bHasCal And Not vCallVerOld   'Verificar se ainda est|fffd| instalado
        UsePgStpManager_ChB.Value = bUsePgStpManager
        UsePgStpManager_ChB.Enabled = Not bCalledByPageStpMgr  'Chamado de PageStpMng ser|fffd| sempre selecionado e desabilitado
        UsePgStpManager_ChB.Visible = bHasCal And Not vCallVerOld    'xxTemporariamente para n|fffd|o parecer propagando ostensiva, vou ocultar se n|fffd|o tiver instalado

        AutentReg    'Necess|fffd|rio para definir captions de label
        If Not bRegtrd And vCallVerOld = "" Then bHasCal = GetHasCal("PageSetpMgr")  'Se n|fffd|o registrado, considera de acordo com o ExcelWatermark como b|fffd|nus
        If Not bRegtrd And bHasCal And lCalRegtrd = 1 Then bRegtrd = True    'Se n|fffd|o registrado, considera de acordo com o PageSetpMgr como b|fffd|nus
        If Not bRegtrd And bHasCal And lCalRegtrd = 2 Then bIsFreePass = True
    End If

    If IsPortg Then
        Caption = sAddInCaptByApp & " - Inserir Figura"     '& " (Vers|fffd|o BETA at|fffd| " & VBA.Strings.Format(BetaLimDate, "dd/mm/yyyy") & ")"
        About_Lb.Caption = IIf(bRegtrd, "Registrado", "Sobre|fffd|")
        Workbook_Lb.Caption = "Pasta de Trabalho:"
        Sheet_Lb.Caption = "Planilha na Pasta Selecionada:"

        DiffPages_Lb.Caption = "P|fffd|gina na Planilha Selecionada:"
        DiffDefaultPage_OpB.Caption = "P|fffd|gina Padr|fffd|o"
        DiffFirstPage_OpB.Caption = "Primeira P|fffd|gina"
        DiffEvenPage_OpB.Caption = "P|fffd|ginas Pares"
        DiffPages_Fr.Caption = "Op|fffd||fffd|es de P|fffd|g. Diferentes:  (Excel 2007-10...)"
        DiffFirstPage_ChB.Caption = "Primeira p|fffd|gina diferente"
        DiffEvenPage_ChB.Caption = "P|fffd|ginas impares e pares diferentes"
        MapPict_Lb.Caption = "Mapa Pontos de Entrada de Figura:"
        MapPict_Lb.ControlTipText = "Mapa dos pontos de entrada de figura nas p|fffd|ginas"
        EntryPointHdFt_Lb.Caption = "Ponto de Entrada na P|fffd|gina Selecionada:"

        Picture_Lb.Caption = "Fonte da Figura" & IIf(bCalledByPageStpMgr, "", " para Marca-d'|fffd|gua") & ", pegue ou crie de:"
        PicFile_Lb.Caption = "Arq.:"
        PicText_Lb.Caption = "Texto: Criar figura como RASCUNHO, CONFIDENCIAL, URGENTE..........."
        PicSelect_Lb.Caption = "Sele|fffd||fffd|o: Criar figura de WordArt, gr|fffd|fico, organ., intervalo de c|fffd|lulas.........."
        Delete_Bt.Caption = "Excluir" & IIf(bUsePgStpManager And Not bCalledByPageStpMgr, " via GCP", "")
        Delete_Bt.ControlTipText = "Excluir a figura"
        CopyTo_Bt.Caption = "Copiar Para" & IIf(bUsePgStpManager, " via GCP", "...")
        CopyTo_Bt.ControlTipText = "Copiar a figura e outras configura|fffd||fffd|es de p|fffd|gina para outras planilhas"
        UsePgStpManager_ChB.Caption = "Usar o Gerenciador de Confg. de P|fffd|gina para 'Excluir' e 'Copiar Para'"
        SizePos_Bt.Caption = "Tamanho e Posi|fffd||fffd|o..."
        SizePos_Bt.ControlTipText = "Tamanho e posi|fffd||fffd|o da figura ao longo da p|fffd|gina"
        ImageCtrl_Bt.Caption = "Controle da Imagem..."
        ImageCtrl_Bt.ControlTipText = "Alterar propriedades de imagem de figura"
        Text_Bt.Caption = "Texto..."
        Select_Bt.Caption = "Selec..."
        Close_Bt.Caption = "Fechar"
        Preview_Bt.Caption = "Visualizar"
        Preview_Bt.ControlTipText = "Visualizar a impress|fffd|o"
        InsertPicture_Bt.Caption = "Abrir..."
        InsertPicture_Bt.ControlTipText = "Abrir Arquivo de Figura"
        Text_Bt.ControlTipText = "Inserir Texto"
    Else
        Caption = sAddInCaptByApp & " - Insert Picture"     '& " (BETA version until " & VBA.Strings.Format(BetaLimDate, "mm/dd/yyyy") & ")"
        About_Lb.Caption = IIf(bRegtrd, "Registered", "About|fffd|")
        Delete_Bt.Caption = "Delete" & IIf(bUsePgStpManager And Not bCalledByPageStpMgr, " via PSM", "")
        CopyTo_Bt.Caption = "Copy To" & IIf(bUsePgStpManager, " via PSM", "...")
        Picture_Lb.Caption = "Source of the Picture" & IIf(bCalledByPageStpMgr, "", " for Watermark") & ", pick or create from:"
    End If

    Email_Lb.Caption = IIf(IsPortg, "E-mail", "Email")
    Email_Lb.ControlTipText = "orlando@cpap.com.br"
    EmailSubj = IIf(IsPortg, "Informa|fffd||fffd|es sobre o ", "Information about ") & sAddInNameByApp & IIf(bIsCOMAddin, " (COM add-in)", " (Add-in)")
    HomePage_Lb.Caption = IIf(IsPortg, "Ajuda", "Help")
    HomePage_Lb.ControlTipText = "http://cpap.com.br/orlando/"
    HomePageUrl = "http://cpap.com.br/orlando/" & sAddInNameByApp & IIf(IsPortg, "Mais.asp?IdC=Ajuda", "More.asp?IdC=Help")
    Email_Lb.Left = Width / Twips - Email_Lb.Width - (Width / Twips - InsideWidth) - 4    'Email_Lb.Left = Width / Twips - Email_Lb.Width - 8
    About_Lb.Top = IIf(bRegtrd And Not bCalledByPageStpMgr, UsePgStpManager_ChB.Top + 3.75, Email_Lb.Top): Email_Lb.Visible = False    '|fffd| melhor exibir s|fffd| o About. Vou deixar Email s|fffd| para uma eventualidade
    About_Lb.Left = Width / Twips - About_Lb.Width - (Width / Twips - InsideWidth) - 4    'About_Lb.Left = Width / Twips - About_Lb.Width - 8

    If dHostAppVer < 11 + 1 Then
        DiffEvenPage_ChB.Enabled = False
        DiffFirstPage_ChB.Enabled = False
        DiffPages_Fr.Enabled = False
    End If

    With EntryPointHdFt_Cb
        If IsPortg Then
            .AddItem ("Cabe|fffd|alho - Esquerda   Marca-d'|fffd|gua 1 (Por baixo do conte|fffd|do da planilha)")
            .AddItem ("Cabe|fffd|alho - Centro       Marca-d'|fffd|gua 2 (Por baixo do conte|fffd|do da planilha)")
            .AddItem ("Cabe|fffd|alho - Direita        Marca-d'|fffd|gua 3 (Por baixo do conte|fffd|do da planilha)")
            .AddItem ("   Rodap|fffd| - Esquerda       Marca-de-carimbo 1 (Por cima do conte|fffd|do da planilha)")
            .AddItem ("   Rodap|fffd| - Centro           Marca-de-carimbo 2 (Por cima do conte|fffd|do da planilha)")
            .AddItem ("   Rodap|fffd| - Direita            Marca-de-carimbo 3 (Por cima do conte|fffd|do da planilha)")
        Else
            .AddItem ("Header - Left        Watermark 1 (Under sheet content)")
            .AddItem ("Header - Center   Watermark 2 (Under sheet content)")
            .AddItem ("Header - Right     Watermark 3 (Under sheet content)")
            .AddItem ("    Footer - Left             Stampmark 1 (Over sheet content)")
            .AddItem ("    Footer - Center        Stampmark 2 (Over sheet content)")
            .AddItem ("    Footer - Right          Stampmark 3 (Over sheet content)")
        End If
        .ListWidth = .Width * 1.12

        If bIsCOMAddin And Not bUsePgStpManager Then    'Oculta sem PSMgr porque o local copy n|fffd|o suporta copiar o resto das figuras de cab. e rodp. Vou retringir so em COM add-in, pois vou usar xla s|fffd| para editar.
            .Visible = False: EntryPointHdFt_Lb.Visible = False
            MapPict_Lb.Visible = False: MapPictDP_Fr.Visible = False: MapPictFP_Fr.Visible = False: MapPictEP_Fr.Visible = False
            DiffPages_Fr.Width = 214
            Dim Ctrl
            For Each Ctrl In Me.Controls
                If Ctrl.Top > .Top Then Ctrl.Top = Ctrl.Top - 25
            Next
            Height = Height - 25 * Twips
        End If
    End With

    If lBotFormWatermark <> 31 Then    'Preserv page and position, if inserting selection
        lDiffPage = 0
        lEntryPointHdFt = IIf(lBotFormWatermark >= 11 And lBotFormWatermark <= 16, lBotFormWatermark - 10, IIf(lBotFormWatermark >= 21 And lBotFormWatermark <= 26, lBotFormWatermark - 20, 1))
    End If
    EntryPointHdFt_Cb.ListIndex = lEntryPointHdFt - 1: MapPictUpdate

    vEnableEvents = True
    For Each Wb In appHostApp.Workbooks
        If Wb.Windows(1).Visible Then
            Workbook_Cb.AddItem (Wb.Name)
            If appHostApp.ActiveWorkbook.Name = Wb.Name Then Workbook_Cb.Value = Wb.Name
        End If
    Next

    Printer_Bt.ControlTipText = IIf(IsPortg, "Impress.: ", "Printer: ") & appHostApp.ActivePrinter
    Printer_Bt.Caption = Left(Printer_Bt.ControlTipText, 14) & "..."

    'Get form handle
    Form_hWnd1 = FindWindowA(IIf(bIsCOMAddin, "ThunderRT6DFrame", "ThunderDFrame"), Caption)
    If Form_hWnd1 = 0 Then Form_hWnd1 = FindWindowA(vbNullString, Caption)
    'Basear o form na janela do Excel
    If bIsCOMAddin Then SetWindowLongA Form_hWnd1, GWL_HWNDPARENT, App_hWnd
    'Fixar form
    If bIsCOMAddin Then FixForm Form_hWnd1    'Se alterar caption, precisa aplicar novamente
End Sub

Private Sub UserForm_Activate()
    If dHostAppVer < 10 Then
        Msg1 = IIf(IsPortg, "S|fffd| |fffd| poss|fffd|vel inserir " & IIf(bCalledByPageStpMgr, "figura", "Marca-d'|fffd|gua") & " com este utilit|fffd|rio no Excel 2002 (XP) ou mais recente!", "Only it is possible to insert " & IIf(bCalledByPageStpMgr, "picture", "watermark") & " with this utility on Excel 2002 (XP) or later!")
        Msg2 = sAddInCaptByApp & " - " & IIf(IsPortg, "Falha!", "Fail!")
        MyMsgBox Msg1, 1, Msg2
        Close_Bt_Click
    End If
    If appHostApp.ActiveWorkbook Is Nothing Then
        Msg1 = IIf(IsPortg, "Antes voc|fffd| deve abrir a(s) Pasta(s) de Trabalho para inserir " & IIf(bCalledByPageStpMgr, "figura!", "marca-d'|fffd|gua!"), "Before you must open the Workbook(s) to insert " & IIf(bCalledByPageStpMgr, "picture!", "watermark!"))
        Msg2 = sAddInCaptByApp & " - " & IIf(IsPortg, "Planilha n|fffd|o Encontrada!", "Sheet not Found!")
        MyMsgBox Msg1, 1, Msg2
        Close_Bt_Click
    End If
End Sub

Public Sub Workbook_Cb_Change()
    If vEnableEvents = False Then Exit Sub
    If Workbook_Cb.Value = "" Then Exit Sub
    appHostApp.Workbooks(Workbook_Cb.Value).Activate: ActWbWinAppSDIBaseForm Form_hWnd1
    vEnableEvents = False
    Do While Sheet_Cb.ListCount > 0
        Sheet_Cb.RemoveItem (0)
    Loop
    Sheet_Cb.ListIndex = -1    'Inserido no Excel 15, mas era bug antigo onde o evento em SheetFrom_Cb n|fffd|o disparava se houvesse apenas uma planilha na pasta.
    Sheet_Cb.Enabled = False: Paper_Bt.Enabled = False: EntryPointHdFt_Cb.Enabled = False: InsertPicture_Bt.Enabled = False: Text_Bt.Enabled = False: Select_Bt.Enabled = False: Preview_Bt.Enabled = False    'Idem bug antigo quando ativasse um wb sem Worksheet active e sim outros tipos. Alterei inserindo s|fffd| esta linha a seguinte e as duas |fffd|ltimas. E ainda onde Sheet_Cb.ListIndex = -1 Then Exit Sub
    sPictureFile = "": Picture_Tb.Value = "": SizePos_Bt.Enabled = False: ImageCtrl_Bt.Enabled = False: Delete_Bt.Enabled = False: CopyTo_Bt.Enabled = False
    vEnableEvents = True
    Dim Sh As Object    'Worksheet xpms
    For Each Sh In appHostApp.Workbooks(Workbook_Cb.Value).Sheets
        If TypeName(Sh) = "Worksheet" Then Sheet_Cb.AddItem (Sh.Name)      'xpms
        If TypeName(Sh) = "Worksheet" And appHostApp.Workbooks(Workbook_Cb.Value).ActiveSheet.Name = Sh.Name Then Sheet_Cb.Value = Sh.Name
    Next
    Sheet_Cb.Enabled = Sheet_Cb.ListCount > 0
    If Sheet_Cb.ListIndex <> -1 Then Paper_Bt.Enabled = True: EntryPointHdFt_Cb.Enabled = True: InsertPicture_Bt.Enabled = True: Text_Bt.Enabled = True: Select_Bt.Enabled = True: Preview_Bt.Enabled = True
End Sub

Private Sub Sheet_Cb_Change()
    If vEnableEvents = False Then Exit Sub
    appHostApp.ActiveWorkbook.Sheets(Sheet_Cb.Value).Activate: ActWbWinAppSDIBaseForm Form_hWnd1
    If fPaperSize(False) Then
        Paper_Bt.ControlTipText = IIf(IsPortg, "Papel: " & tPaperSize.sName, "Paper: " & tPaperSize.sName)
        Paper_Bt.Caption = Left(Paper_Bt.ControlTipText, 14) & "..."
    Else
        Paper_Bt.ControlTipText = IIf(IsPortg, "Papel: " & "Nome ??", "Paper: " & "Name ??")
        Paper_Bt.Caption = Left(Paper_Bt.ControlTipText, 14) & "..."
    End If
    With appHostApp.ActiveWindow.ActiveSheet.PageSetup

        If dHostAppVer >= 11 + 1 Then
            vEnableEvents = False
            DiffFirstPage_ChB.Value = .DifferentFirstPageHeaderFooter
            DiffEvenPage_ChB.Value = .OddAndEvenPagesHeaderFooter

            If DiffFirstPage_ChB.Value = False And DiffFirstPage_OpB.Value Then DiffDefaultPage_OpB.Value = True
            DiffFirstPage_OpB.Enabled = DiffFirstPage_ChB.Value

            If DiffEvenPage_ChB.Value = False And DiffEvenPage_OpB.Value Then DiffDefaultPage_OpB.Value = True
            DiffEvenPage_OpB.Enabled = DiffEvenPage_ChB.Value
            vEnableEvents = True
        End If

        Dim bHasPic As Boolean
        Select Case lDiffPage
        Case 0
            Select Case lEntryPointHdFt
            Case 1: bHasPic = InStr(1, .LeftHeader, "&G") > 0
            Case 2: bHasPic = InStr(1, .CenterHeader, "&G") > 0
            Case 3: bHasPic = InStr(1, .RightHeader, "&G") > 0
            Case 4: bHasPic = InStr(1, .LeftFooter, "&G") > 0
            Case 5: bHasPic = InStr(1, .CenterFooter, "&G") > 0
            Case 6: bHasPic = InStr(1, .RightFooter, "&G") > 0
            End Select
        Case 1
            Select Case lEntryPointHdFt
            Case 1: bHasPic = InStr(1, .FirstPage.LeftHeader.Text, "&G") > 0
            Case 2: bHasPic = InStr(1, .FirstPage.CenterHeader.Text, "&G") > 0
            Case 3: bHasPic = InStr(1, .FirstPage.RightHeader.Text, "&G") > 0
            Case 4: bHasPic = InStr(1, .FirstPage.LeftFooter.Text, "&G") > 0
            Case 5: bHasPic = InStr(1, .FirstPage.CenterFooter.Text, "&G") > 0
            Case 6: bHasPic = InStr(1, .FirstPage.RightFooter.Text, "&G") > 0
            End Select
        Case 2
            Select Case lEntryPointHdFt
            Case 1: bHasPic = InStr(1, .EvenPage.LeftHeader.Text, "&G") > 0
            Case 2: bHasPic = InStr(1, .EvenPage.CenterHeader.Text, "&G") > 0
            Case 3: bHasPic = InStr(1, .EvenPage.RightHeader.Text, "&G") > 0
            Case 4: bHasPic = InStr(1, .EvenPage.LeftFooter.Text, "&G") > 0
            Case 5: bHasPic = InStr(1, .EvenPage.CenterFooter.Text, "&G") > 0
            Case 6: bHasPic = InStr(1, .EvenPage.RightFooter.Text, "&G") > 0
            End Select
        End Select

        If bHasPic Then
            Select Case lDiffPage
            Case 0
                Select Case lEntryPointHdFt
                Case 1: sPictureFile = .LeftHeaderPicture.Filename
                Case 2: sPictureFile = .CenterHeaderPicture.Filename
                Case 3: sPictureFile = .RightHeaderPicture.Filename
                Case 4: sPictureFile = .LeftFooterPicture.Filename
                Case 5: sPictureFile = .CenterFooterPicture.Filename
                Case 6: sPictureFile = .RightFooterPicture.Filename
                End Select
            Case 1
                Select Case lEntryPointHdFt
                Case 1: sPictureFile = .FirstPage.LeftHeader.Picture.Filename
                Case 2: sPictureFile = .FirstPage.CenterHeader.Picture.Filename
                Case 3: sPictureFile = .FirstPage.RightHeader.Picture.Filename
                Case 4: sPictureFile = .FirstPage.LeftFooter.Picture.Filename
                Case 5: sPictureFile = .FirstPage.CenterFooter.Picture.Filename
                Case 6: sPictureFile = .FirstPage.RightFooter.Picture.Filename
                End Select
            Case 2
                Select Case lEntryPointHdFt
                Case 1: sPictureFile = .EvenPage.LeftHeader.Picture.Filename
                Case 2: sPictureFile = .EvenPage.CenterHeader.Picture.Filename
                Case 3: sPictureFile = .EvenPage.RightHeader.Picture.Filename
                Case 4: sPictureFile = .EvenPage.LeftFooter.Picture.Filename
                Case 5: sPictureFile = .EvenPage.CenterFooter.Picture.Filename
                Case 6: sPictureFile = .EvenPage.RightFooter.Picture.Filename
                End Select
            End Select
            Picture_Tb.Value = MaskTmpPicFile(sPictureFile)
            If sPictureFile <> "" Then
                SizePos_Bt.Enabled = True
                ImageCtrl_Bt.Enabled = True
                Delete_Bt.Enabled = True
                CopyTo_Bt.Enabled = True

                'If IsPortg Then
                'Msg1 = "A planilha " & Sheet_Cb.Value & " j|fffd| tem uma figura para " & IIf(lEntryPointHdFt < 4, "marca-d'|fffd|gua", "marca-de-carimbo") & ". " & Chr(10) & Chr(10) & "Conferir e ajustar a sua posi|fffd||fffd|o na folha?"
                'Msg2 = sAddInCaptByApp & " - " & "Posi|fffd||fffd|o da Figura"
                'Else
                'Msg1 = "The " & Sheet_Cb.Value & " sheet already has a picture for " & IIf(lEntryPointHdFt < 4, "watermark", "stampmark") & ". " & Chr(10) & Chr(10) & "Verify and adjust its position on page?"
                'Msg2 = sAddInCaptByApp & " - " & "Picture Position"
                'End If
                'If MyMsgBox(Msg1, 2, Msg2, , Top + Sheet_Cb.Top + 35) = 1 Then
                'If fPaperSize(False) Then CenterPicture
                'End If
            Else
                SizePos_Bt.Enabled = False
                ImageCtrl_Bt.Enabled = False
                Delete_Bt.Enabled = False
                CopyTo_Bt.Enabled = False
            End If
        Else
            sPictureFile = ""
            Picture_Tb.Value = ""
            SizePos_Bt.Enabled = False
            ImageCtrl_Bt.Enabled = False
            Delete_Bt.Enabled = False
            CopyTo_Bt.Enabled = False
        End If
    End With

    MapPictUpdate

    Set TargetWb = appHostApp.ActiveWorkbook
    Set TargetSh = appHostApp.ActiveWindow.ActiveSheet
End Sub

Private Sub Paper_Bt_Click()
    Dim SettingIni, SettingEnd
    Dim i As Long
    Static bOnce As Boolean    'Alert uma vez s|fffd|

    'If bCalledByPageStpMgr Then Set StoreSettingsSh = TargetSh: StoreSettingsAllButPict: StoreSettings: SettingIni = StoreArr()    'Comentar em Wm
    If Not bCalledByPageStpMgr Then SettingIni = FormCopyTo.StoreSettings(False)

    If fPaperSize(True) Then
        Paper_Bt.ControlTipText = IIf(IsPortg, "Papel: " & tPaperSize.sName, "Paper: " & tPaperSize.sName)
        Paper_Bt.Caption = Left(Paper_Bt.ControlTipText, 14) & "..."

        'If bCalledByPageStpMgr Then Call StoreSettings: SettingEnd = StoreArr()    'Comentar em Wm
        If Not bCalledByPageStpMgr Then SettingEnd = FormCopyTo.StoreSettings(False)

        'CenterPicture 'Talvez seja melhor n|fffd|o centralizar ao trocar de papel
        If TypeName(SettingIni) = "Variant()" And TypeName(SettingEnd) = "Variant()" Then
            For i = LBound(SettingIni) To UBound(SettingIni)
                If SettingIni(i) <> SettingEnd(i) Then i = 500: Exit For
            Next
        End If
        If IsPortg Then
            Msg1 = "N|fffd|o esque|fffd|a! Ao alterar propriedades de papel, normalmente |fffd| necess|fffd|rio usar o bot|fffd|o 'Tamanho e Posi|fffd||fffd|o...' para centralizar ou ajustar a posi|fffd||fffd|o da marca-d'|fffd|gua ou " & IIf(lEntryPointHdFt < 4, "", "marca-de-carimbo") & "."
            Msg2 = sAddInCaptByApp & " - Propriedades do Papel Alteradas - Alerta |fffd|nico"
        Else
            Msg1 = "Do not forget! By changing paper properties, it is usually necessary to use the 'Size and Position...' button to centralize or adjust watermark " & IIf(lEntryPointHdFt < 4, "", "or stampmark") & " position."
            Msg2 = sAddInCaptByApp & " - Paper Settings Changed - Single Alert"
        End If
        If Not bOnce And i = 500 Then MyMsgBox Msg1, 1, Msg2: bOnce = True
    End If

    If bCalledByPageStpMgr Then Set StoreSettingsSh = Nothing
    If Not bCalledByPageStpMgr Then Unload FormCopyTo

    SettingIni = ""
    SettingEnd = ""
End Sub

Private Sub Printer_Bt_Click()
    If appHostApp.Dialogs(xlDialogPrinterSetup).Show Then
        Printer_Bt.ControlTipText = IIf(IsPortg, "Impress.: ", "Printer: ") & appHostApp.ActivePrinter
        Printer_Bt.Caption = Left(Printer_Bt.ControlTipText, 14) & "..."
    End If
End Sub

Private Sub InsertPicture_Bt_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    lInsTextSel = 0
End Sub
Public Sub InsertPicture_Bt_Click()
    Dim sGuid As String
    Dim sDllPath As String
    Static ChDirOne As Boolean

    If lEntryPointHdFt > 1 Then If Not MustBeRegToCont Then Exit Sub    'Tudo pronto para exigir registro em Wm tamb|fffd|m basta remover coment da linha de GetRegDatFile(True) em ReadINISetting

    If lInsTextSel > 0 Then GoTo StartInsTextHere
    If ChDirOne = False And _
            (sPictureFile = "" Or VBA.FileSystem.Dir(sPictureFile) = "" Or InStr(1, sPictureFile, "OrlTxtWatMark") > 0) Then
        On Error Resume Next
        '        sGuid = GetRegValue(HKEY_CLASSES_ROOT, "AddInWatermark.ExcelDesigner\Clsid", "")
        '        sDllPath = GetRegValue(HKEY_CLASSES_ROOT, "CLSID\" & sGuid & "\InprocServer32", "")
        '        sDllPath = MyReplace(UCase(sDllPath), UCase("\ExcelWatermark.dll"), "")
        sDllPath = ThisDLLPath
        If Mid(sDllPath, 2, 1) = ":" Then ChDrive sDllPath
        ChDir sDllPath
        On Error GoTo 0
        ChDirOne = True
    Else
        If sPictureFile <> "" And VBA.FileSystem.Dir(sPictureFile) <> "" And InStr(1, sPictureFile, "OrlTxtWatMark") = 0 Then
            vFileName = Left(sPictureFile, InStrRev(sPictureFile, appHostApp.PathSeparator))
            If Mid(vFileName, 2, 1) = ":" Then ChDrive vFileName
            ChDir vFileName
        End If
    End If
    If IsPortg Then
        vFileName = appHostApp.GetOpenFilename("Figuras (*.emf;*.wmf;*.jpg;*.jpeg;*.jfif;*.jpe;*.png;*.bmp;*.dib;*.rle;*.gif;*.bmz;*.gfa;*.emz),*.emf;*.wmf;*.jpg;*.jpeg;*.jfif;*.jpe;*.png;*.bmp;*.dib;*.rle;*.gif;*.bmz;*.gfa;*.emz", , "Inserir Figura para " & IIf(lEntryPointHdFt < 4, "Marca-d'|fffd|gua", "Marca-de-carimbo"), "Inserir")
    Else
        vFileName = appHostApp.GetOpenFilename("Pictures (*.emf;*.wmf;*.jpg;*.jpeg;*.jfif;*.jpe;*.png;*.bmp;*.dib;*.rle;*.gif;*.bmz;*.gfa;*.emz),*.emf;*.wmf;*.jpg;*.jpeg;*.jfif;*.jpe;*.png;*.bmp;*.dib;*.rle;*.gif;*.bmz;*.gfa;*.emz", , "Insert Picture for " & IIf(lEntryPointHdFt < 4, "Watermark", "Stampmark"), "Insert")
    End If
    If vFileName = False Then Exit Sub

    Msg1 = IIf(IsPortg, "Inserir a figura do arquivo ''" & vFileName & "''?", "Insert the picture of the file ''" & vFileName & "''?")
    Msg2 = IIf(IsPortg, "Inserir Figura - Planilha ", "Insert Picture - Sheet ") & TargetSh.Name
    If MyMsgBox(Msg1, 2, Msg2) = 2 Then Exit Sub

StartInsTextHere:
    If Not InsertPictureTempWb(vFileName, False) Then Exit Sub   'Test picture on temp wb first

    Dim bBrighten As Boolean
    If IsPortg Then
        Msg1 = "Clarear a figura usando o padr|fffd|o de propriedades para Marca-d'|fffd|gua do Excel?" & Chr(10) & Chr(10) & "   Aten|fffd||fffd|o! Se a figura j|fffd| for muito clara, isto pode torn|fffd|-la invis|fffd|vel. Ent|fffd|o, no formul|fffd|rio principal, acione o bot|fffd|o '" & FormWatermark.ImageCtrl_Bt.Caption & "' para os devidos ajustes."
        Msg2 = sAddInCaptByApp & " - Controle da Imagem - Clarear"
    Else
        Msg1 = "Brighten the picture using Excel watermark default properties?" & Chr(10) & Chr(10) & "   Attention! If the picture is already very bright, it may turn invisible. On the main form, access the button '" & FormWatermark.ImageCtrl_Bt.Caption & "' to make the due adjustments."
        Msg2 = sAddInCaptByApp & " - Image Control - Brighten"
    End If
    If lInsTextSel <> 1 Then bBrighten = MyMsgBox(Msg1, 2, Msg2) = 1    'Not ask about Brighten when insert txt

    If InsertPicture(vFileName, TargetSh, bBrighten, False, False) Then
        sPictureFile = vFileName
        Picture_Tb.Value = MaskTmpPicFile(sPictureFile)
        SizePos_Bt.Enabled = True
        ImageCtrl_Bt.Enabled = True
        Delete_Bt.Enabled = True
        CopyTo_Bt.Enabled = True
        MapPictUpdate

        If lInsTextSel <> 1 Then
            If IsPortg Then
                Msg1 = "Centrar a figura na p|fffd|gina?" _
                        & Chr(10) & Chr(10) & "   Obs.: Esta figura inserida em " & PictPosSpell(lDiffPage, lEntryPointHdFt) & IIf(lEntryPointHdFt < 4, " fica por baixo do conte|fffd|do da planilha como uma marca-d'|fffd|gua.", " fica por cima do conte|fffd|do da planilha como uma marca-de-carimbo.") _
                        & "   Dica! Para mover para outras posi|fffd||fffd|es e alterar tamanho, acione o bot|fffd|o '" & FormWatermark.SizePos_Bt.Caption & "' no formul|fffd|rio principal."
                Msg2 = sAddInCaptByApp & " - Centrar Figura"
            Else
                Msg1 = "Center the picture on page?" _
                        & Chr(10) & Chr(10) & "   Note: This picture inserted in " & PictPosSpell(lDiffPage, lEntryPointHdFt) & IIf(lEntryPointHdFt < 4, " is under sheet content as a watermark.", " is over sheet content as a stampmark.") _
                        & "   Tip! To move for other positions and change size, act the button '" & FormWatermark.SizePos_Bt.Caption & "' on main form."
                Msg2 = sAddInCaptByApp & " - Center Picture"
            End If
            If bCalledByPageStpMgr Then MyMsgBox Msg1, 2, Msg2 Else BotAcionado = 1
            If BotAcionado = 1 Then If fPaperSize(False) Then CenterPicture TargetSh, lRefArea
        Else
            If fPaperSize(False) Then CenterPicture TargetSh, lRefArea
        End If

        'Simulate some content to make possible Preview here and then from the form
        Dim lCellCount As Double
        If dHostAppVer < 11 + 1 Then lCellCount = TargetSh.Cells.Count _
            Else lCellCount = TargetSh.Cells.CountLarge
        If appHostApp.WorksheetFunction.CountBlank(TargetSh.Cells) = lCellCount _
                And TargetSh.Shapes.Count = 0 And TargetSh.ProtectContents = False Then TargetSh.Range("A1").Value = " "

       If dHostAppVer < 11 + 1 + 2 + 1 Then VBA.Interaction.AppActivate GetAppWinCaption Else SetForegroundWindow TargetWb.Windows(1).hWnd  'In COM add-in loses focus when back from insert selection. In Excel 15, GetAppWinCaption falha.

        Msg1 = IIf(IsPortg, "A " & IIf(lEntryPointHdFt < 4, "marca-d'|fffd|gua", "marca-de-carimbo") & " foi inserida com sucesso. Visualizar agora?", "The " & IIf(lEntryPointHdFt < 4, "watermark", "stampmark") & " was inserted with success. Preview now?")
        If bCalledByPageStpMgr Then Msg1 = IIf(IsPortg, "A figura foi inserida com sucesso. Visualizar agora?", "The picture was inserted with success. Preview now?")
        Msg2 = sAddInCaptByApp & " - " & IIf(IsPortg, "Visualizar", "Preview")
        If MyMsgBox(Msg1, 2, Msg2) = 1 Then
            If lInsTextSel = 0 Then Hide
            PreviewBtClick
            If lInsTextSel <> 2 Then Show 1
        Else
            If lInsTextSel = 1 Then Show 1
        End If
    End If
End Sub

Private Sub Text_Bt_Click()
    Static sText As String
    Static sFont As String
    Static lFontSize As Long
    Static lColor As Long
    Static lPresetEffect As Long
    Static dTransp As Double
    Static sngRot As Single

    If lEntryPointHdFt > 1 Then If Not MustBeRegToCont Then Exit Sub    'Tudo pronto para exigir registro em Wm tamb|fffd|m basta remover coment da linha de GetRegDatFile(True) em ReadINISetting

    With FormText
        If sText <> "" Then    'Using last value
            .Text_Cb.Value = sText
            .Font_Cb.Value = sFont
            .Size_Cb.Value = IIf(lFontSize <= 8, "Auto", lFontSize)
            .Color_Tb.BackColor = lColor
            .PresetEffect_Tb.Value = lPresetEffect
            .OthersTransp_Tb.Value = dTransp
            .OtherRot_Tb.Value = sngRot
        End If
        .Show 1
        If PressBot = 2 Then Exit Sub

        sText = .Text_Cb.Value
        sFont = .Font_Cb.Value
        lFontSize = IIf(IsNumeric(.Size_Cb.Value), .Size_Cb.Value, 8)
        lColor = .Color_Tb.BackColor
        lPresetEffect = .PresetEffect_Tb.Value
        If .OthersTransp_Tb.Value = "" Then dTransp = 0.5 Else dTransp = .OthersTransp_Tb.Value
        If .OtherRot_Tb.Value = "" Then sngRot = 0 Else sngRot = CSng(.OtherRot_Tb.Value)
    End With
    Unload FormText

    Hide

    vFileName = InsertText(TargetSh, sText, sFont, lFontSize, lColor, lPresetEffect, dTransp / 100, sngRot, lRefArea, False)
    TargetWb.Activate: If dHostAppVer >= 11 + 1 + 2 + 1 Then SetForegroundWindowEsp TargetWb.Windows(1).hWnd, 0.5    'In Excel 15 hiding a modal form can change TargetWb focus.
    TargetSh.Activate
    If vFileName = False Then
        Show 1
    Else
        lInsTextSel = 1
        InsertPicture_Bt_Click
    End If
End Sub

Private Sub Select_Bt_Click()
    If lEntryPointHdFt > 1 Then If Not MustBeRegToCont Then Exit Sub    'Tudo pronto para exigir registro em Wm tamb|fffd|m basta remover coment da linha de GetRegDatFile(True) em ReadINISetting

    lBotFormWatermark = 31    'Hide and finish the code to show a released modeless form for a good selection
    Hide
End Sub

Private Sub Close_Bt_Click()
    If bAlertAboutNewVer Then AlertAboutNewVer             'Ocorre como o padr|fffd|o, desde que n|fffd|o esteja registrado
    lBotFormWatermark = 0
    Unload Me
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If CloseMode = 0 Then
        'Cancel = True
        Close_Bt_Click
    End If
End Sub

Private Sub Preview_Bt_Click()
    Hide
    TargetWb.Activate: If dHostAppVer >= 11 + 1 + 2 + 1 Then SetForegroundWindowEsp TargetWb.Windows(1).hWnd, 0.5     'In Excel 15 hiding a modal form can change TargetWb focus.
    TargetSh.Activate
    PreviewBtClick
    Show 1
End Sub

Private Sub HomePage_Lb_Click()
    SendEMailByURL HomePage_Lb, HomePageUrl, "", "", False
End Sub

Private Sub Email_Lb_Click()
    SendEMailByURL Email_Lb, Email_Lb.ControlTipText, EmailSubj, EmlMsg, False
End Sub

Private Sub Workbook_Cb_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
'Necess|fffd|rio pois, embora form modal com COMAddin, o Excel aceita abrir pastas atrav|fffd|s do Explores
    Static LastWbCount As Long
    If appHostApp.Workbooks.Count = LastWbCount Then Exit Sub
    UpdateWorkbook_Cb
    LastWbCount = appHostApp.Workbooks.Count
End Sub

Private Sub DiffFirstPage_ChB_Click()
    If vEnableEvents = False Then Exit Sub
    With appHostApp.ActiveWindow.ActiveSheet.PageSetup
        .DifferentFirstPageHeaderFooter = DiffFirstPage_ChB.Value
    End With

    DiffFirstPage_OpB.Enabled = DiffFirstPage_ChB.Value
    If Not DiffFirstPage_ChB.Value And DiffFirstPage_OpB.Value Then
        DiffFirstPage_OpB.Value = False
        DiffDefaultPage_OpB.Value = True
    End If
    MapPictUpdate
End Sub

Private Sub DiffEvenPage_ChB_Click()
    If vEnableEvents = False Then Exit Sub
    With appHostApp.ActiveWindow.ActiveSheet.PageSetup
        .OddAndEvenPagesHeaderFooter = DiffEvenPage_ChB.Value
    End With

    DiffEvenPage_OpB.Enabled = DiffEvenPage_ChB.Value
    If Not DiffEvenPage_ChB.Value And DiffEvenPage_OpB.Value Then
        DiffEvenPage_OpB.Value = False
        DiffDefaultPage_OpB.Value = True
    End If
    MapPictUpdate
End Sub

Private Sub DiffDefaultPage_OpB_Click()
    DiffFirstPage_OpB.Value = False
    DiffEvenPage_OpB.Value = False
    If vEnableEvents = False Or Sheet_Cb.ListIndex = -1 Then Exit Sub
    lDiffPage = 0
    Sheet_Cb_Change
End Sub

Private Sub DiffFirstPage_OpB_Click()
    DiffDefaultPage_OpB.Value = False
    DiffEvenPage_OpB.Value = False
    If vEnableEvents = False Or Sheet_Cb.ListIndex = -1 Then Exit Sub
    lDiffPage = 1
    Sheet_Cb_Change
End Sub

Private Sub DiffEvenPage_OpB_Click()
    DiffFirstPage_OpB.Value = False
    DiffDefaultPage_OpB.Value = False
    If vEnableEvents = False Or Sheet_Cb.ListIndex = -1 Then Exit Sub
    lDiffPage = 2
    Sheet_Cb_Change
End Sub

Private Sub EntryPointHdFt_Cb_Change()
    If vEnableEvents = False Or Sheet_Cb.ListIndex = -1 Then Exit Sub
    lEntryPointHdFt = EntryPointHdFt_Cb.ListIndex + 1
    Sheet_Cb_Change
End Sub

Sub MapPictUpdate()         'Update picture map
    With appHostApp.ActiveWindow.ActiveSheet.PageSetup
        MapPictDP_Fr.ControlTipText = IIf(IsPortg, "Mapa das entradas de figuras em P|fffd|gina Padr|fffd|o", "Picture entry map in Default Page")



        MapPictFP_Fr.ControlTipText = IIf(IsPortg, "Mapa das entradas de figuras em Primeira P|fffd|gina", "Picture entry map in First Page") & IIf(DiffFirstPage_ChB.Value, "", IIf(IsPortg, " (Diferente n|fffd|o configurado)", " (Different is not set)") & IIf(dHostAppVer >= 11 + 1, "", ". Excel 2007-10..."))
        MapPictEP_Fr.ControlTipText = IIf(IsPortg, "Mapa das entradas de figuras em P|fffd|gina Par", "Picture entry map in Even Page") & IIf(DiffEvenPage_ChB.Value, "", IIf(IsPortg, " (Diferente n|fffd|o configurado)", " (Different is not set)") & IIf(dHostAppVer >= 11 + 1, "", ". Excel 2007-10..."))

        'Reset position controls
        Dim i As Long
        For i = 1 To 18
            Me.Controls("MapPict" & i & "_Lb").BackColor = Me.BackColor
            Me.Controls("MapPict" & i & "_Lb").BorderStyle = fmBorderStyleNone
            Me.Controls("MapPict" & i & "_Lb").SpecialEffect = fmSpecialEffectEtched
            Me.Controls("MapPict" & i & "_Lb").Tag = IIf(IsPortg, "Nenhuma figura definida ainda", "No picture set yet")
            Me.Controls("MapPict" & i & "_Lb").MouseIcon = HomePage_Lb.MouseIcon
            Me.Controls("MapPict" & i & "_Lb").Visible = True
        Next

        If InStr(1, .LeftHeader, "&G") > 0 Then MapPict1_Lb.BackColor = &HFFFF00: MapPict1_Lb.Tag = .LeftHeaderPicture.Filename
        If InStr(1, .CenterHeader, "&G") > 0 Then MapPict2_Lb.BackColor = &HFFFF00: MapPict2_Lb.Tag = .CenterHeaderPicture.Filename
        If InStr(1, .RightHeader, "&G") > 0 Then MapPict3_Lb.BackColor = &HFFFF00: MapPict3_Lb.Tag = .RightHeaderPicture.Filename
        If InStr(1, .LeftFooter, "&G") > 0 Then MapPict4_Lb.BackColor = &HFFFF00: MapPict4_Lb.Tag = .LeftFooterPicture.Filename
        If InStr(1, .CenterFooter, "&G") > 0 Then MapPict5_Lb.BackColor = &HFFFF00: MapPict5_Lb.Tag = .CenterFooterPicture.Filename
        If InStr(1, .RightFooter, "&G") > 0 Then MapPict6_Lb.BackColor = &HFFFF00: MapPict6_Lb.Tag = .RightFooterPicture.Filename

        If dHostAppVer >= 11 + 1 Then
            If InStr(1, .FirstPage.LeftHeader.Text, "&G") > 0 Then MapPict7_Lb.BackColor = &HFFFF00: MapPict7_Lb.Tag = .FirstPage.LeftHeader.Picture.Filename
            If InStr(1, .FirstPage.CenterHeader.Text, "&G") > 0 Then MapPict8_Lb.BackColor = &HFFFF00: MapPict8_Lb.Tag = .FirstPage.CenterHeader.Picture.Filename
            If InStr(1, .FirstPage.RightHeader.Text, "&G") > 0 Then MapPict9_Lb.BackColor = &HFFFF00: MapPict9_Lb.Tag = .FirstPage.RightHeader.Picture.Filename
            If InStr(1, .FirstPage.LeftFooter.Text, "&G") > 0 Then MapPict10_Lb.BackColor = &HFFFF00: MapPict10_Lb.Tag = .FirstPage.LeftFooter.Picture.Filename
            If InStr(1, .FirstPage.CenterFooter.Text, "&G") > 0 Then MapPict11_Lb.BackColor = &HFFFF00: MapPict11_Lb.Tag = .FirstPage.CenterFooter.Picture.Filename
            If InStr(1, .FirstPage.RightFooter.Text, "&G") > 0 Then MapPict12_Lb.BackColor = &HFFFF00: MapPict12_Lb.Tag = .FirstPage.RightFooter.Picture.Filename

            If InStr(1, .EvenPage.LeftHeader.Text, "&G") > 0 Then MapPict13_Lb.BackColor = &HFFFF00: MapPict13_Lb.Tag = .EvenPage.LeftHeader.Picture.Filename
            If InStr(1, .EvenPage.CenterHeader.Text, "&G") > 0 Then MapPict14_Lb.BackColor = &HFFFF00: MapPict14_Lb.Tag = .EvenPage.CenterHeader.Picture.Filename
            If InStr(1, .EvenPage.RightHeader.Text, "&G") > 0 Then MapPict15_Lb.BackColor = &HFFFF00: MapPict15_Lb.Tag = .EvenPage.RightHeader.Picture.Filename
            If InStr(1, .EvenPage.LeftFooter.Text, "&G") > 0 Then MapPict16_Lb.BackColor = &HFFFF00: MapPict16_Lb.Tag = .EvenPage.LeftFooter.Picture.Filename
            If InStr(1, .EvenPage.CenterFooter.Text, "&G") > 0 Then MapPict17_Lb.BackColor = &HFFFF00: MapPict17_Lb.Tag = .EvenPage.CenterFooter.Picture.Filename
            If InStr(1, .EvenPage.RightFooter.Text, "&G") > 0 Then MapPict18_Lb.BackColor = &HFFFF00: MapPict18_Lb.Tag = .EvenPage.RightFooter.Picture.Filename
        End If

        For i = 1 To 18
            'If Me.Controls("MapPict" & i & "_Lb").BackColor = &HFFFF00 Then Me.Controls("MapPict" & i & "_Lb").SpecialEffect = fmSpecialEffectSunken 'Deixar mesmo o padr|fffd|o Etched parece mais vis|fffd|vel.
            Me.Controls("MapPict" & i & "_Lb").ControlTipText = PictPosSpell(Int((i - 1) / 6), i - Int((i - 1) / 6) * 6) & " (" & MaskTmpPicFile(Me.Controls("MapPict" & i & "_Lb").Tag) & ")"

            'Posi|fffd||fffd|es do 2007 and later
            If i >= 7 And i <= 12 Then Me.Controls("MapPict" & i & "_Lb").Visible = DiffFirstPage_ChB.Value
            If i >= 13 Then Me.Controls("MapPict" & i & "_Lb").Visible = DiffEvenPage_ChB.Value

            'Posi|fffd||fffd|o ativa
            If i = lDiffPage * 6 + lEntryPointHdFt Then Me.Controls("MapPict" & i & "_Lb").BorderStyle = fmBorderStyleSingle
        Next
    End With
End Sub

Private Sub MapPict1_Lb_Click(): xMapPict_Lb_Click MapPict1_Lb: End Sub
Private Sub MapPict2_Lb_Click(): xMapPict_Lb_Click MapPict2_Lb: End Sub
Private Sub MapPict3_Lb_Click(): xMapPict_Lb_Click MapPict3_Lb: End Sub
Private Sub MapPict4_Lb_Click(): xMapPict_Lb_Click MapPict4_Lb: End Sub
Private Sub MapPict5_Lb_Click(): xMapPict_Lb_Click MapPict5_Lb: End Sub
Private Sub MapPict6_Lb_Click(): xMapPict_Lb_Click MapPict6_Lb: End Sub
Private Sub MapPict7_Lb_Click(): xMapPict_Lb_Click MapPict7_Lb: End Sub
Private Sub MapPict8_Lb_Click(): xMapPict_Lb_Click MapPict8_Lb: End Sub
Private Sub MapPict9_Lb_Click(): xMapPict_Lb_Click MapPict9_Lb: End Sub
Private Sub MapPict10_Lb_Click(): xMapPict_Lb_Click MapPict10_Lb: End Sub
Private Sub MapPict11_Lb_Click(): xMapPict_Lb_Click MapPict11_Lb: End Sub
Private Sub MapPict12_Lb_Click(): xMapPict_Lb_Click MapPict12_Lb: End Sub
Private Sub MapPict13_Lb_Click(): xMapPict_Lb_Click MapPict13_Lb: End Sub
Private Sub MapPict14_Lb_Click(): xMapPict_Lb_Click MapPict14_Lb: End Sub
Private Sub MapPict15_Lb_Click(): xMapPict_Lb_Click MapPict15_Lb: End Sub
Private Sub MapPict16_Lb_Click(): xMapPict_Lb_Click MapPict16_Lb: End Sub
Private Sub MapPict17_Lb_Click(): xMapPict_Lb_Click MapPict17_Lb: End Sub
Private Sub MapPict18_Lb_Click(): xMapPict_Lb_Click MapPict18_Lb: End Sub
Sub xMapPict_Lb_Click(Ctrl As Object)    'As Control d|fffd| erro em COM add-in
    Dim i As Long: If Sheet_Cb.ListIndex = -1 Then Exit Sub
    Dim bIsAct As Boolean    'Para a|fffd||fffd|o imediata, se ativado
    i = CLng(Replace(Replace(Ctrl.Name, "MapPict", ""), "_Lb", ""))
    bIsAct = Ctrl.BorderStyle = fmBorderStyleSingle
    DiffDefaultPage_OpB.Value = Int((i - 1) / 6) = 0
    DiffFirstPage_OpB.Value = Int((i - 1) / 6) = 1
    DiffEvenPage_OpB.Value = Int((i - 1) / 6) = 2
    EntryPointHdFt_Cb.ListIndex = i - Int((i - 1) / 6) * 6 - 1

    If SizePos_Bt.Enabled And bIsAct Then    'Se tem figura definida ent|fffd|o: size ou pos, imag ctrl or del
        If ShiftDown And CtrlDown Then
            Delete_Bt_Click
        ElseIf ShiftDown Or CtrlDown Then
            ImageCtrl_Bt_Click
        Else
            SizePos_Bt_Click    'Com Shift press n|fffd|o aciona o padr|fffd|o Size_Bt
        End If
    End If
End Sub

Private Sub MapPict1_Lb_DblClick(ByVal Cancel As MSForms.ReturnBoolean): xMapPict_Lb_DblClick MapPict1_Lb: End Sub
Private Sub MapPict2_Lb_DblClick(ByVal Cancel As MSForms.ReturnBoolean): xMapPict_Lb_DblClick MapPict2_Lb: End Sub
Private Sub MapPict3_Lb_DblClick(ByVal Cancel As MSForms.ReturnBoolean): xMapPict_Lb_DblClick MapPict3_Lb: End Sub
Private Sub MapPict4_Lb_DblClick(ByVal Cancel As MSForms.ReturnBoolean): xMapPict_Lb_DblClick MapPict4_Lb: End Sub
Private Sub MapPict5_Lb_DblClick(ByVal Cancel As MSForms.ReturnBoolean): xMapPict_Lb_DblClick MapPict5_Lb: End Sub
Private Sub MapPict6_Lb_DblClick(ByVal Cancel As MSForms.ReturnBoolean): xMapPict_Lb_DblClick MapPict6_Lb: End Sub
Private Sub MapPict7_Lb_DblClick(ByVal Cancel As MSForms.ReturnBoolean): xMapPict_Lb_DblClick MapPict7_Lb: End Sub
Private Sub MapPict8_Lb_DblClick(ByVal Cancel As MSForms.ReturnBoolean): xMapPict_Lb_DblClick MapPict8_Lb: End Sub
Private Sub MapPict9_Lb_DblClick(ByVal Cancel As MSForms.ReturnBoolean): xMapPict_Lb_DblClick MapPict9_Lb: End Sub
Private Sub MapPict10_Lb_DblClick(ByVal Cancel As MSForms.ReturnBoolean): xMapPict_Lb_DblClick MapPict10_Lb: End Sub
Private Sub MapPict11_Lb_DblClick(ByVal Cancel As MSForms.ReturnBoolean): xMapPict_Lb_DblClick MapPict11_Lb: End Sub
Private Sub MapPict12_Lb_DblClick(ByVal Cancel As MSForms.ReturnBoolean): xMapPict_Lb_DblClick MapPict12_Lb: End Sub
Private Sub MapPict13_Lb_DblClick(ByVal Cancel As MSForms.ReturnBoolean): xMapPict_Lb_DblClick MapPict13_Lb: End Sub
Private Sub MapPict14_Lb_DblClick(ByVal Cancel As MSForms.ReturnBoolean): xMapPict_Lb_DblClick MapPict14_Lb: End Sub
Private Sub MapPict15_Lb_DblClick(ByVal Cancel As MSForms.ReturnBoolean): xMapPict_Lb_DblClick MapPict15_Lb: End Sub
Private Sub MapPict16_Lb_DblClick(ByVal Cancel As MSForms.ReturnBoolean): xMapPict_Lb_DblClick MapPict16_Lb: End Sub
Private Sub MapPict17_Lb_DblClick(ByVal Cancel As MSForms.ReturnBoolean): xMapPict_Lb_DblClick MapPict17_Lb: End Sub
Private Sub MapPict18_Lb_DblClick(ByVal Cancel As MSForms.ReturnBoolean): xMapPict_Lb_DblClick MapPict18_Lb: End Sub
Sub xMapPict_Lb_DblClick(Ctrl As Object)    'As Control d|fffd| erro em COM add-in
    Ctrl.BorderStyle = fmBorderStyleSingle    'Em DblClick simula ativa para a|fffd||fffd|o imediata
    xMapPict_Lb_Click Ctrl
End Sub


Private Sub About_Lb_Click()
    If IsPortg Then
        Msg1 = "Copyright|fffd| 2002-" & Right(Year(VerDate), 2) & " by Francisco Orlando Magalh|fffd|es Filho." & vbCrLf & _
                "Todos os direitos reservados." & vbCrLf & _
                "Licen|fffd|a de Uso: Shareware" & IIf(bRegtrd, " (Registrado)", IIf(bIsFreePass, " (Registrado com Passe Livre)", " (N|fffd|o Registrado)")) & vbCrLf & _
                "Tipo: " & IIf(bIsCOMAddin, "COM add-in programado em VBA (dll)", "Add-in programado em VBA") & vbCrLf & _
                "Vers|fffd|o: " & fGetVersion & " (" & Format(VerDate, "yyyy.mm.dd") & ")" & vbCrLf & vbCrLf & _
                IIf(bRegtrd Or 2 = 2, "Visitar o site para ver novidades sobre este e outros utilit|fffd|rios. Ok?", _
                "Por favor registre-se inserindo o serial e a chave de registro agora. Ok?")
    Else
        Msg1 = "Copyright|fffd| 2002-" & Right(Year(VerDate), 2) & " by Francisco Orlando Magalh|fffd|es Filho." & vbCrLf & _
                "All rights reserved." & vbCrLf & _
                "Use License: Shareware" & IIf(bRegtrd, " (Registered)", IIf(bIsFreePass, " (Registered with Free Pass)", " (Not Registered)")) & vbCrLf & _
                "Type: " & IIf(bIsCOMAddin, "COM add-in", "Add-in") & " programmed in VBA" & vbCrLf & _
                "Version: " & fGetVersion & " (" & Format(VerDate, "yyyy.mm.dd") & ")" & vbCrLf & vbCrLf & _
                IIf(bRegtrd Or 2 = 2, "Visit the site to see news about this and other utilities. Ok?", _
                "Please register by entering the serial and registration key now. Ok?")
    End If
    If MyMsgBox(Msg1, 2, IIf(IsPortg, "Sobre o ", "About ") & sAddInCaptByApp & IIf(bIsCOMAddin, " (COM add-in)", " (Add-in)")) = 1 Then
        If bRegtrd Or 2 = 2 Then    '2=2 aqui acima duas vezes |fffd| para temporariamente n|fffd|o questionar sobre registro, deixando apenas como bonus do psm
            SendEMailByURL Nothing, "http://cpap.com.br/orlando/" & sAddInNameByApp & IIf(IsPortg, "Mais.asp?IdC=Sobre", "More.asp?IdC=About"), "", "", False
        Else
            RegisterNow
            If bRegtrd Then    'Atualiza label em caso de registrar
                If bRegtrd Then About_Lb.Caption = IIf(IsPortg, "Registrado", "Registered")
                About_Lb.Left = Width / Twips - About_Lb.Width - (Width / Twips - InsideWidth) - 4    'About_Lb.Left = Width / Twips - About_Lb.Width - 8
            End If
        End If
    End If
End Sub
Attribute VB_Name = "Mod1Watermark"
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'|fffd| APPLICATION:   Watermark.xla
'|fffd|
'|fffd| AUTHOR & DATE: FCO ORLANDO MAGALH|fffd|ES FILHO  4 April 2000
'|fffd|                Microsoft MVP - Excel
'|fffd|                Santa Quit|fffd|ria-Ce - Brazil
'|fffd|
'|fffd| CONTACT:       orlando@cpap.com.br
'|fffd| WEB SITE:      http://cpap.com.br/orlando
'|fffd|
'|fffd| DESCRIPTION:   Insert watermark on Excel 2002(XP), 2003, and 2007 Sheets
'|fffd|
'|fffd| COPYRIGHTS:    Free to use with your application and free to distribute
'|fffd|                since this pack and any of file is not alter without previous
'|fffd|                authorization of the author.
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Option Explicit

Type PaperSize
    lXlIndex As Long
    sName As String
    dWidth As Double
    dHeight As Double
End Type
Public tPaperSize As PaperSize

Public appHostApp As Application
Public Twips As Long

Public vEnableEvents As Boolean
Public Pindx As Integer
Public PressBot As Integer
Public P(44, 4)

Public TargetWb As Workbook
Public TargetSh As Worksheet
Public dbZoom As Double
Public OriHeight As Double: Public CurrRealHeight As Double
Public OriWidth As Double: Public CurrRealWidth As Double
Public IniHeight As Double
Public IniWidth As Double
Public IniLockAspectRatio As MsoTriState
Public IniHeightFr As Double
Public IniWidthFr As Double
Public IniTopFr As Double
Public IniLeftFr As Double
Public IniScaleWithDoc As Boolean
Public IniAlignMargins As Boolean
Public lRefArea As Long    '1-Entire paper, 2-Sheet+HdAFt 3-Sheet only. O padr|fffd|o na primera exec. |fffd| 1, podendo ser alterado ent|fffd|o em FormSizePosition e salvo para as pr|fffd|ximas
Public bAnchorOnLeftMargin As Boolean    'If False, vai ancorar na margem esquerda de lim de visibilidade a 53.858 op|fffd||fffd|o |fffd|nica antes do 2007 que veio com a op|fffd||fffd|o AlignMarginsHeaderFooter.
Public RefLeftMargin As Double
Public RefTopMargin As Double
Public RefRightMargin As Double
Public RefBottomMargin As Double
Public Const TopAdjustFat As Double = 1.05         'Fine vert adjust. Embora as medida para mover a figura pelo crop fiquem correta h|fffd| uma distor|fffd||fffd|o no preview. Ajustei medindo com paquimetro no v|fffd|deo mesmo com a figura m|fffd|dia 8-5x8-5.bmp. Aplicar o fator ao definir o crop e remove ao ler o crop de volta.
Public Const LeftAdjustFat As Double = 0.9           'Fine horiz adjust idem

Public sPictureFile As String
Public bTestOtherIPicCode As Boolean
Public Const BetaLimDate As Date = #4/30/2008#

'PickColor
Public Type CHOOSECOLOR
    lStructSize As Long
    hwndOwner As Long
    hInstance As Long
    rgbResult As Long
    lpCustColors As String    'Long
    flags As Long
    lCustData As Long
    lpfnHook As Long
    lpTemplateName As String
End Type
Private Const CC_RGBINIT = &H1
Private Const CC_SOLIDCOLOR = &H80
Public Declare Function CHOOSECOLOR Lib "comdlg32.dll" Alias "ChooseColorA" (pChoosecolor As CHOOSECOLOR) As Long

Public lDiffPage As Long    '0 Deflt page, 1 First page, 2 Even pages
Public lEntryPointHdFt As Long    '1 LH, 2 CH, 3 RH,   4 LF 5 CF 6 RF

Function InsertPicture(ByVal vFileName As String, InsertSh As Worksheet, bBrighten As Boolean, bOnlyTest As Boolean, bSilence As Boolean) As Boolean

    If vFileName = "" Or VBA.FileSystem.Dir(vFileName) = "" Then GoTo ErrorHandler
    On Error GoTo ErrorHandler
    With InsertSh.PageSetup
        Select Case lDiffPage
        Case 0
            Select Case lEntryPointHdFt
            Case 1: .LeftHeader = PreservTxtInHdFt(.LeftHeader): .LeftHeaderPicture.Filename = vFileName
            Case 2: .CenterHeader = PreservTxtInHdFt(.CenterHeader): .CenterHeaderPicture.Filename = vFileName
            Case 3: .RightHeader = PreservTxtInHdFt(.RightHeader): .RightHeaderPicture.Filename = vFileName
            Case 4: .LeftFooter = PreservTxtInHdFt(.LeftFooter): .LeftFooterPicture.Filename = vFileName
            Case 5: .CenterFooter = PreservTxtInHdFt(.CenterFooter): .CenterFooterPicture.Filename = vFileName
            Case 6: .RightFooter = PreservTxtInHdFt(.RightFooter): .RightFooterPicture.Filename = vFileName
            End Select
        Case 1
            Select Case lEntryPointHdFt
            Case 1: .FirstPage.LeftHeader.Text = PreservTxtInHdFt(.FirstPage.LeftHeader.Text): .FirstPage.LeftHeader.Picture.Filename = vFileName
            Case 2: .FirstPage.CenterHeader.Text = PreservTxtInHdFt(.FirstPage.CenterHeader.Text): .FirstPage.CenterHeader.Picture.Filename = vFileName
            Case 3: .FirstPage.RightHeader.Text = PreservTxtInHdFt(.FirstPage.RightHeader.Text): .FirstPage.RightHeader.Picture.Filename = vFileName
            Case 4: .FirstPage.LeftFooter.Text = PreservTxtInHdFt(.FirstPage.LeftFooter.Text): .FirstPage.LeftFooter.Picture.Filename = vFileName
            Case 5: .FirstPage.CenterFooter.Text = PreservTxtInHdFt(.FirstPage.CenterFooter.Text): .FirstPage.CenterFooter.Picture.Filename = vFileName
            Case 6: .FirstPage.RightFooter.Text = PreservTxtInHdFt(.FirstPage.RightFooter.Text): .FirstPage.RightFooter.Picture.Filename = vFileName
            End Select
        Case 2
            Select Case lEntryPointHdFt
            Case 1: .EvenPage.LeftHeader.Text = PreservTxtInHdFt(.EvenPage.LeftHeader.Text): .EvenPage.LeftHeader.Picture.Filename = vFileName
            Case 2: .EvenPage.CenterHeader.Text = PreservTxtInHdFt(.EvenPage.CenterHeader.Text): .EvenPage.CenterHeader.Picture.Filename = vFileName
            Case 3: .EvenPage.RightHeader.Text = PreservTxtInHdFt(.EvenPage.RightHeader.Text): .EvenPage.RightHeader.Picture.Filename = vFileName
            Case 4: .EvenPage.LeftFooter.Text = PreservTxtInHdFt(.EvenPage.LeftFooter.Text): .EvenPage.LeftFooter.Picture.Filename = vFileName
            Case 5: .EvenPage.CenterFooter.Text = PreservTxtInHdFt(.EvenPage.CenterFooter.Text): .EvenPage.CenterFooter.Picture.Filename = vFileName
            Case 6: .EvenPage.RightFooter.Text = PreservTxtInHdFt(.EvenPage.RightFooter.Text): .EvenPage.RightFooter.Picture.Filename = vFileName
            End Select
        End Select

        If bOnlyTest Then
            Select Case lDiffPage
            Case 0
                Select Case lEntryPointHdFt
                Case 1: .LeftHeaderPicture.Filename = "": .LeftHeader = ""
                Case 2: .CenterHeaderPicture.Filename = "": .CenterHeader = ""
                Case 3: .RightHeaderPicture.Filename = "": .RightHeader = ""
                Case 4: .LeftFooterPicture.Filename = "": .LeftFooter = ""
                Case 5: .CenterFooterPicture.Filename = "": .CenterFooter = ""
                Case 6: .RightFooterPicture.Filename = "": .RightFooter = ""
                End Select
            Case 1
                Select Case lEntryPointHdFt
                Case 1: .FirstPage.LeftHeader.Picture.Filename = "": .FirstPage.LeftHeader.Text = ""
                Case 2: .FirstPage.CenterHeader.Picture.Filename = "": .FirstPage.CenterHeader.Text = ""
                Case 3: .FirstPage.RightHeader.Picture.Filename = "": .FirstPage.RightHeader.Text = ""
                Case 4: .FirstPage.LeftFooter.Picture.Filename = "": .FirstPage.LeftFooter.Text = ""
                Case 5: .FirstPage.CenterFooter.Picture.Filename = "": .FirstPage.CenterFooter.Text = ""
                Case 6: .FirstPage.RightFooter.Picture.Filename = "": .FirstPage.RightFooter.Text = ""
                End Select
            Case 2
                Select Case lEntryPointHdFt
                Case 1: .EvenPage.LeftHeader.Picture.Filename = "": .EvenPage.LeftHeader.Text = ""
                Case 2: .EvenPage.CenterHeader.Picture.Filename = "": .EvenPage.CenterHeader.Text = ""
                Case 3: .EvenPage.RightHeader.Picture.Filename = "": .EvenPage.RightHeader.Text = ""
                Case 4: .EvenPage.LeftFooter.Picture.Filename = "": .EvenPage.LeftFooter.Text = ""
                Case 5: .EvenPage.CenterFooter.Picture.Filename = "": .EvenPage.CenterFooter.Text = ""
                Case 6: .EvenPage.RightFooter.Picture.Filename = "": .EvenPage.RightFooter.Text = ""
                End Select
            End Select
        Else
            If bBrighten Then
                Select Case lDiffPage
                Case 0
                    Select Case lEntryPointHdFt
                    Case 1: .LeftHeaderPicture.ColorType = msoPictureWatermark  '.LeftHeaderPicture.Brightness = 0.85  .LeftHeaderPicture.Contrast = 0.15
                    Case 2: .CenterHeaderPicture.ColorType = msoPictureWatermark
                    Case 3: .RightHeaderPicture.ColorType = msoPictureWatermark
                    Case 4: .LeftFooterPicture.ColorType = msoPictureWatermark
                    Case 5: .CenterFooterPicture.ColorType = msoPictureWatermark
                    Case 6: .RightFooterPicture.ColorType = msoPictureWatermark
                    End Select
                Case 1
                    Select Case lEntryPointHdFt
                    Case 1: .FirstPage.LeftHeader.Picture.ColorType = msoPictureWatermark
                    Case 2: .FirstPage.CenterHeader.Picture.ColorType = msoPictureWatermark
                    Case 3: .FirstPage.RightHeader.Picture.ColorType = msoPictureWatermark
                    Case 4: .FirstPage.LeftFooter.Picture.ColorType = msoPictureWatermark
                    Case 5: .FirstPage.CenterFooter.Picture.ColorType = msoPictureWatermark
                    Case 6: .FirstPage.RightFooter.Picture.ColorType = msoPictureWatermark
                    End Select
                Case 2
                    Select Case lEntryPointHdFt
                    Case 1: .EvenPage.LeftHeader.Picture.ColorType = msoPictureWatermark
                    Case 2: .EvenPage.CenterHeader.Picture.ColorType = msoPictureWatermark
                    Case 3: .EvenPage.RightHeader.Picture.ColorType = msoPictureWatermark
                    Case 4: .EvenPage.LeftFooter.Picture.ColorType = msoPictureWatermark
                    Case 5: .EvenPage.CenterFooter.Picture.ColorType = msoPictureWatermark
                    Case 6: .EvenPage.RightFooter.Picture.ColorType = msoPictureWatermark
                    End Select
                End Select
            End If
        End If

    End With
    InsertPicture = True
    Exit Function
ErrorHandler:
    Msg1 = IIf(IsPortg, "Figura ou formato de arquivo inv|fffd|lido!", "Invalid picture or file format!")
    Msg2 = sAddInCaptByApp & " - " & IIf(IsPortg, "Inserir Figura - Falha!", "Insert Picture - Fail!")
    If Not bSilence Then MyMsgBox Msg1, 1, Msg2
End Function

Function InsertPictureTempWb(ByVal vFileName As String, bSilence As Boolean) As Boolean    'Retirado de FormWatermark para n|fffd|o carregar ao usar fun|fffd||fffd|es
'Test picture on Temp Wb first.
    Dim TempWb As Workbook
    If vFileName = "" Or VBA.FileSystem.Dir(vFileName) = "" Then
        Msg1 = IIf(IsPortg, "O arquivo da figura a inserir n|fffd|o foi encontrado!", "The picture file to insert wasn't found!")
        Msg2 = sAddInCaptByApp & " - " & IIf(IsPortg, "Inserir Figura - Falha!", "Insert Picture - Fail!")
        If Not bSilence Then MyMsgBox Msg1, 1, Msg2
        Exit Function
    End If
    Set TempWb = appHostApp.Workbooks.Add(1)
    If Not InsertPicture(vFileName, TempWb.Sheets(1), False, True, bSilence) Then
        TempWb.Close False
        Exit Function
    End If
    TempWb.Close False
    InsertPictureTempWb = True
End Function

Function PreservTxtInHdFt(sHdFtText) As String
'Se existir c|fffd|digo de figura, manter, preservando texto e posi|fffd||fffd|o.
'Se n|fffd|o existir c|fffd|digo, preservar o text, mas inserir na posi|fffd||fffd|o que cause menos dist|fffd|rbio
    If InStr(1, sHdFtText, "&G") > 0 Then
        PreservTxtInHdFt = sHdFtText
    Else
        Select Case lEntryPointHdFt
        Case 1: PreservTxtInHdFt = "&G" & Replace(sHdFtText, "&G", "")    'Insere antes do texto
        Case 2: PreservTxtInHdFt = "&G" & Replace(sHdFtText, "&G", "")
        Case 3: PreservTxtInHdFt = Replace(sHdFtText, "&G", "") & "&G"    'Insere depois
        Case 4: PreservTxtInHdFt = "&G" & Replace(sHdFtText, "&G", "")
        Case 5: PreservTxtInHdFt = "&G" & Replace(sHdFtText, "&G", "")
        Case 6: PreservTxtInHdFt = Replace(sHdFtText, "&G", "") & "&G"
        End Select
    End If
End Function

Function InsertText(InsertSh As Worksheet, sText As String, sFont As String, lFontSize As Long, lColor As Long, lPresetEffect As Long, dTransp As Double, ByVal sngRot As Single, lRefArea1 As Long, bSilence As Boolean)
    Dim TempWb As Workbook
    Dim Shp As Shape
    Dim PaperWidth
    Dim PaperHeight
    Dim dHeight As Double
    Dim dWidth As Double
    Dim fAjust As Double

    With InsertSh.PageSetup
        If .Orientation = xlPortrait Then
            PaperWidth = appHostApp.InchesToPoints(tPaperSize.dWidth)
            PaperHeight = appHostApp.InchesToPoints(tPaperSize.dHeight)
        Else
            PaperHeight = appHostApp.InchesToPoints(tPaperSize.dWidth)
            PaperWidth = appHostApp.InchesToPoints(tPaperSize.dHeight)
        End If
        RefLeftMargin = Choose(lRefArea1, 53.858, IIf(.LeftMargin < 53.858, 53.858, .LeftMargin), IIf(.LeftMargin < 53.858, 53.858, .LeftMargin))    '53.858 |fffd| o limite de visualiza|fffd||fffd|o e portanto de tamanho
        RefRightMargin = Choose(lRefArea1, 53.858, IIf(.RightMargin < 53.858, 53.858, .RightMargin), IIf(.RightMargin < 53.858, 53.858, .RightMargin))
        dWidth = PaperWidth - RefLeftMargin - RefRightMargin    '53.858 |fffd| o limite de visualiza|fffd||fffd|o e portanto de tamanho

        RefTopMargin = Choose(lRefArea1, .HeaderMargin, .HeaderMargin, .TopMargin)    'HeaderAndFooterMargins s|fffd|o os limites de visualiza|fffd||fffd|o e portanto de tamanho
        RefBottomMargin = Choose(lRefArea1, .FooterMargin, .FooterMargin, .BottomMargin)
        dHeight = PaperHeight - RefTopMargin - RefBottomMargin
    End With

    appHostApp.ScreenUpdating = False
    Set TempWb = appHostApp.Workbooks.Add(1)
    Set Shp = appHostApp.ActiveWindow.ActiveSheet.Shapes.AddTextEffect(lPresetEffect, sText, sFont, lFontSize, False, False, 0, 0)
    With Shp
        .Name = "WatermarkText"
        .TextEffect.NormalizedHeight = msoFalse
        If dHostAppVer < 11 + 1 Then
            .Line.Visible = False
            .Fill.Visible = True
            .Fill.Solid
            .Fill.ForeColor.RGB = lColor    ' RGB(192, 192, 192)
            .Fill.Transparency = dTransp    '0.5
        Else
            .TextFrame.AutoSize = False
            .TextFrame2.WordWrap = msoFalse
            .TextEffect.PresetShape = msoTextEffectShapeDeflate
            '.TextEffect.PresetTextEffect = msoTextEffectMixed
            .TextFrame2.WarpFormat = IIf(dHostAppVer >= 11 + 1 + 2 + 1, 36, 0)    'msoWarpFormat1(0) e msoWarpFormat37(36) n|fffd|o definidas em Excel8. No Excel 15, o 0 n|fffd|o funcionou e sim 0 36 que n|fffd|o exitia antes.
            '.TextFrame2.WordArtformat = msoTextEffectMixed
            .TextFrame2.TextRange.Font.Fill.BackColor.RGB = lColor
            .TextFrame2.TextRange.Font.Fill.ForeColor.RGB = lColor
            .TextFrame2.TextRange.Font.Line.BackColor.RGB = lColor
            .TextFrame2.TextRange.Font.Line.ForeColor.RGB = lColor
            .TextFrame2.TextRange.Font.Fill.Transparency = dTransp
            .TextFrame2.TextRange.Font.Line.Transparency = dTransp

            '.TextFrame2.TextRange.Font.Spacing = 0.5 'Falha usei tracking
            .TextEffect.Tracking = 1.0005
        End If
        .LockAspectRatio = True
        .Rotation = sngRot
        If lFontSize = 8 Then
            Select Case sngRot
            Case 0, 180   'Hor
                fAjust = 0.91    'Fine adjust
                .Width = dWidth * fAjust   ' - dWidth / 18  'Fine adjust 27 p/ dWidth=487.3
                If .Height > dHeight Then .Height = dHeight * fAjust
            Case 270, 90   'Vert
                fAjust = 0.91
                .Width = dHeight * fAjust
                If .Height > dWidth Then .Height = dWidth * fAjust
            Case Else    'Other rotations. Inclinados
                Dim dProjWidth As Double
                Dim dProjHeight As Double
                Dim dAspRatio As Double
                Dim dRotRd As Double
                dAspRatio = .Width / .Height

                'Calculei as proje|fffd||fffd|es de um ret|fffd|ngulo inclinado dentro do 4|fffd| quadrante (Objeto rot em sentido hor no Excel)
                'e, para aproveitar as formulas inverto o angulo para projetar cada quadrante no 4|fffd|
                If sngRot < 90 Then
                    'Formulas feita para este quadrante
                ElseIf sngRot < 180 Then
                    sngRot = 180 - sngRot
                ElseIf sngRot < 270 Then
                    sngRot = sngRot - 180
                ElseIf sngRot < 360 Then
                    sngRot = 360 - sngRot
                End If
                dRotRd = sngRot * 3.14 / 180    'Converte graus em radianos

                If sngRot <= 15 Then    'Fine adjust. De acordo com a inclina|fffd||fffd|o |fffd| necess|fffd|rio simular dimens|fffd|es menores ao calc width e height
                    fAjust = 0.99
                ElseIf sngRot <= 30 Then
                    fAjust = 0.95
                ElseIf sngRot <= 45 Then
                    fAjust = 0.91
                ElseIf sngRot <= 60 Then
                    fAjust = 0.77
                ElseIf sngRot <= 75 Then
                    fAjust = 0.88
                ElseIf sngRot < 90 Then
                    fAjust = 0.93
                End If

                'Para calcular .Width em fun|fffd||fffd|o de dWidth, fiz dProjWidth = dWidth  e .Height=.Width/dAspRatio na formuladProjWidth =... abaixo
                .Width = (dWidth * fAjust) / (VBA.Math.Cos(dRotRd) + (1 / dAspRatio) * VBA.Math.Sin(180 * 3.14 / 180 - 90 * 3.14 / 180 - dRotRd))
                dProjWidth = .Width * VBA.Math.Cos(dRotRd) + .Height * VBA.Math.Sin(180 * 3.14 / 180 - 90 * 3.14 / 180 - dRotRd)
                dProjHeight = .Width * VBA.Math.Sin(dRotRd) + .Height * VBA.Math.Sin(180 * 3.14 / 180 - 90 * 3.14 / 180 - dRotRd)

                If dProjWidth > dWidth Or dProjHeight > dHeight Then
                    'Para calcular .Width em fun|fffd||fffd|o de dHeight, fiz dProjHeight = dHeight  e .Height=.Width/dAspRatio na formula dProjHeight =... acima
                    .Width = (dHeight * fAjust) / (VBA.Math.Sin(dRotRd) + (1 / dAspRatio) * VBA.Math.Sin(180 * 3.14 / 180 - 90 * 3.14 / 180 - dRotRd))
                End If
            End Select
        End If
    End With

    InsertText = ClipbIpicTempFile(Shp, sText, bSilence)

    TempWb.Close False
    appHostApp.ScreenUpdating = True
End Function

Function ClipbIpicTempFile(oShpOrRng As Object, sObjName As String, bSilence As Boolean)
'Copy object to clipboard, get its iPicture and save in a temp file
    ClipbIpicTempFile = False

    'Save temp picture
    Dim PathTemp As Variant
    Dim lPicFormat As Long
    Dim IPic As IPictureDisp

    'Create a temp file name
    PathTemp = TempFolder()
    If Right(PathTemp, 1) = "\" Then PathTemp = Left(PathTemp, Len(PathTemp) - 1)
    PathTemp = PathTemp & "\OrlTxtWatMark" & VBA.Strings.Format(Now, "hhmmss") & CleanTextForFileName(sObjName) & ".tmp"

    lPicFormat = xlPicture    ' xlBitmap (Bitmap) or xlPicture (Metafile)
    oShpOrRng.CopyPicture xlScreen, lPicFormat    'Copy the picture with specified format to clipboard
    If Not bTestOtherIPicCode Then
        Set IPic = OleCreatePictureFromClipboard(IIf(lPicFormat = xlBitmap, 2, 14))    'Retrieve the picture from clipboard
    Else
        MsgBox "Testing other approach for IPic"
        sOleCreatePicErr = ""
        'Set IPic = PastePicture(lPicFormat) 'Carregar o m|fffd|dulo modPastePicture.bas
    End If
    If sOleCreatePicErr = "" Then
        On Error Resume Next
        SavePicture IPic, PathTemp    'Save picture to file
        If Err.Number <> 0 Then
            Msg1 = Err.Description
            Msg2 = sAddInCaptByApp & " - " & IIf(IsPortg, "Falha!", "Fail!")
            If Not bSilence Then MyMsgBox Msg1, 1, Msg2
            PathTemp = False
        End If
    Else
        Msg1 = IIf(IsPortg, "Ao criar figura tempor|fffd|ria. Erro N|fffd|: ", "When creating temp picture. Error N|fffd|: ") & sOleCreatePicErr & "!"
        Msg2 = sAddInCaptByApp & " - " & IIf(IsPortg, "Falha!", "Fail!")
        If Not bSilence Then MyMsgBox Msg1, 1, Msg2
        PathTemp = False
    End If
    ClipbIpicTempFile = PathTemp
    Set IPic = Nothing
End Function

Private Function CleanTextForFileName(sText As String)
'Only ANSII less others like ; /
    Dim AcenS, AcenN
    Dim sChr, sAsh, M67, i, j
    AcenS = Array("|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|")
    AcenN = Array("A", "A", "A", "A", "E", "E", "I", "O", "O", "O", "U", "U", "C")
    For i = 1 To Len(sText)
        sChr = Mid(sText, i, 1)
        For j = 0 To UBound(AcenS, 1)
            If sChr = AcenS(j) Then sChr = AcenN(j)
            If sChr = LCase(AcenS(j)) Then sChr = LCase(AcenN(j))
        Next
        sAsh = Asc(sChr)
        CleanTextForFileName = CleanTextForFileName & IIf(sAsh = 32 Or sAsh = 45 Or _
                (sAsh >= 48 And sAsh <= 57) Or (sAsh >= 65 And sAsh <= 90) Or _
                sAsh = 95 Or (sAsh >= 97 And sAsh <= 122), sChr, "_")
    Next
End Function

Public Function PickColor(lColor As Long, hWnd As Long) As Long
    Dim ChC As CHOOSECOLOR
    ChC.lStructSize = Len(ChC)
    ChC.hwndOwner = hWnd    'Modal
    ChC.rgbResult = IIf(IsNumeric(lColor), lColor, 0)
    ChC.flags = CC_SOLIDCOLOR Or CC_RGBINIT
    ChC.lpCustColors = String$(16 * 4, 0)
    CHOOSECOLOR ChC
    PickColor = ChC.rgbResult
End Function

Sub CenterPicture(TargetSh1 As Worksheet, lRefArea1 As Long)
    Dim PaperWidth
    Dim PaperHeight
    Dim LeftAdjust
    Dim TopAdjust
    Dim HrzHdftPosPict As Graphic

    On Error GoTo ErrorHandler
    With TargetSh1.PageSetup
        If .Orientation = xlPortrait Then
            PaperWidth = appHostApp.InchesToPoints(tPaperSize.dWidth)
            PaperHeight = appHostApp.InchesToPoints(tPaperSize.dHeight)
        Else
            PaperHeight = appHostApp.InchesToPoints(tPaperSize.dWidth)
            PaperWidth = appHostApp.InchesToPoints(tPaperSize.dHeight)
        End If

        If dHostAppVer >= 11 + 1 Then    'No 2007 essas condi|fffd||fffd|es s|fffd|o necess|fffd|rias para centralizar ou posicionar
            .ScaleWithDocHeaderFooter = False    'N|fffd|o parece |fffd|til e mesmo ao ajustar no FormSizePosition vou desabilitar
            .AlignMarginsHeaderFooter = bAnchorOnLeftMargin    'N|fffd|o influi no centrar e sim ao alterar a margem direita depois, mas |fffd| configur|fffd|vel no FormPositionCenter
        End If

        RefLeftMargin = Choose(lRefArea1, 0, .LeftMargin, .LeftMargin)
        RefRightMargin = Choose(lRefArea1, 0, .RightMargin, .RightMargin)
        RefTopMargin = Choose(lRefArea1, 0, .HeaderMargin, .TopMargin)
        RefBottomMargin = Choose(lRefArea1, 0, .FooterMargin, .BottomMargin)

        Select Case lDiffPage
        Case 0
            Select Case lEntryPointHdFt
            Case 1: If InStr(1, .LeftHeader, "&G") = 0 Then GoTo ErrorHandler Else Set HrzHdftPosPict = .LeftHeaderPicture
            Case 2: If InStr(1, .CenterHeader, "&G") = 0 Then GoTo ErrorHandler Else Set HrzHdftPosPict = .CenterHeaderPicture
            Case 3: If InStr(1, .RightHeader, "&G") = 0 Then GoTo ErrorHandler Else Set HrzHdftPosPict = .RightHeaderPicture
            Case 4: If InStr(1, .LeftFooter, "&G") = 0 Then GoTo ErrorHandler Else Set HrzHdftPosPict = .LeftFooterPicture
            Case 5: If InStr(1, .CenterFooter, "&G") = 0 Then GoTo ErrorHandler Else Set HrzHdftPosPict = .CenterFooterPicture
            Case 6: If InStr(1, .RightFooter, "&G") = 0 Then GoTo ErrorHandler Else Set HrzHdftPosPict = .RightFooterPicture
            End Select

        Case 1
            Select Case lEntryPointHdFt
            Case 1: If InStr(1, .FirstPage.LeftHeader.Text, "&G") = 0 Then GoTo ErrorHandler Else Set HrzHdftPosPict = .FirstPage.LeftHeader.Picture
            Case 2: If InStr(1, .FirstPage.CenterHeader.Text, "&G") = 0 Then GoTo ErrorHandler Else Set HrzHdftPosPict = .FirstPage.CenterHeader.Picture
            Case 3: If InStr(1, .FirstPage.RightHeader.Text, "&G") = 0 Then GoTo ErrorHandler Else Set HrzHdftPosPict = .FirstPage.RightHeader.Picture
            Case 4: If InStr(1, .FirstPage.LeftFooter.Text, "&G") = 0 Then GoTo ErrorHandler Else Set HrzHdftPosPict = .FirstPage.LeftFooter.Picture
            Case 5: If InStr(1, .FirstPage.CenterFooter.Text, "&G") = 0 Then GoTo ErrorHandler Else Set HrzHdftPosPict = .FirstPage.CenterFooter.Picture
            Case 6: If InStr(1, .FirstPage.RightFooter.Text, "&G") = 0 Then GoTo ErrorHandler Else Set HrzHdftPosPict = .FirstPage.RightFooter.Picture
            End Select
        Case 2
            Select Case lEntryPointHdFt
            Case 1: If InStr(1, .EvenPage.LeftHeader.Text, "&G") = 0 Then GoTo ErrorHandler Else Set HrzHdftPosPict = .EvenPage.LeftHeader.Picture
            Case 2: If InStr(1, .EvenPage.CenterHeader.Text, "&G") = 0 Then GoTo ErrorHandler Else Set HrzHdftPosPict = .EvenPage.CenterHeader.Picture
            Case 3: If InStr(1, .EvenPage.RightHeader.Text, "&G") = 0 Then GoTo ErrorHandler Else Set HrzHdftPosPict = .EvenPage.RightHeader.Picture
            Case 4: If InStr(1, .EvenPage.LeftFooter.Text, "&G") = 0 Then GoTo ErrorHandler Else Set HrzHdftPosPict = .EvenPage.LeftFooter.Picture
            Case 5: If InStr(1, .EvenPage.CenterFooter.Text, "&G") = 0 Then GoTo ErrorHandler Else Set HrzHdftPosPict = .EvenPage.CenterFooter.Picture
            Case 6: If InStr(1, .EvenPage.RightFooter.Text, "&G") = 0 Then GoTo ErrorHandler Else Set HrzHdftPosPict = .EvenPage.RightFooter.Picture
            End Select
        End Select

        If HrzHdftPosPict.Filename = "" Then GoTo ErrorHandler
        'Reset Crop
        HrzHdftPosPict.CropLeft = 0
        HrzHdftPosPict.CropTop = 0
        HrzHdftPosPict.CropRight = 0
        HrzHdftPosPict.CropBottom = 0

        Select Case lEntryPointHdFt    'Lefts
        Case 1, 4    'In left. Original of version with only LH the 1
            LeftAdjust = -(PaperWidth - RefLeftMargin - RefRightMargin - HrzHdftPosPict.Width) / 2 - RefLeftMargin + IIf(dHostAppVer >= 11 + 1 And bAnchorOnLeftMargin, IIf(.LeftMargin < 53.858, 53.858, .LeftMargin), 53.858)
            LeftAdjust = LeftAdjust * LeftAdjustFat
            HrzHdftPosPict.CropLeft = IIf(LeftAdjust > 0, 0, LeftAdjust)
        Case 2, 5    'In center. O Excel j|fffd| centraliza
            LeftAdjust = 0
            'LeftAdjust = LeftAdjust * LeftAdjustFat
            'HrzHdftPosPict.CropLeft = IIf(LeftAdjust > 0, 0, LeftAdjust)
        Case 3, 6    'In right. Semelhante ao left, mas ajusta no CropRight
            LeftAdjust = -(PaperWidth - RefLeftMargin - RefRightMargin - HrzHdftPosPict.Width) / 2 - RefRightMargin + IIf(dHostAppVer >= 11 + 1 And bAnchorOnLeftMargin, IIf(.RightMargin < 53.858, 53.858, .RightMargin), 53.858)
            LeftAdjust = LeftAdjust * LeftAdjustFat
            HrzHdftPosPict.CropRight = IIf(LeftAdjust > 0, 0, LeftAdjust)
        End Select

        Select Case lEntryPointHdFt    'Tops
        Case 1, 2, 3    'In header. Original of version with only LH the 1
            TopAdjust = -(PaperHeight - RefTopMargin - RefBottomMargin - HrzHdftPosPict.Height) / 2 - RefTopMargin + .HeaderMargin
            TopAdjust = TopAdjust * TopAdjustFat
            HrzHdftPosPict.CropTop = IIf(TopAdjust > 0, 0, TopAdjust)
        Case 4, 5, 6    'In footer. Semelhante ao header, mas ajusta no CropBottom
            TopAdjust = -(PaperHeight - RefTopMargin - RefBottomMargin - HrzHdftPosPict.Height) / 2 - RefBottomMargin + .FooterMargin
            TopAdjust = TopAdjust * TopAdjustFat
            HrzHdftPosPict.CropBottom = IIf(TopAdjust > 0, 0, TopAdjust)
        End Select

        If LeftAdjust > 0 Or TopAdjust > 0 Then    'Se acontecer necessidade de um crop positivo (Corte), ent|fffd|o a figura |fffd| grande para centralizar
            Msg1 = IIf(IsPortg, "Figura Muito Grande!", "Very Large Picture!")
            Msg2 = sAddInCaptByApp & " - " & IIf(IsPortg, "Falha na Centraliza|fffd||fffd|o!", "Centralization Fail!")
            MyMsgBox Msg1, 1, Msg2
            GoTo ErrorHandler
        End If
    End With
    Exit Sub
ErrorHandler:
    '   MsgBox "Invalid picture or empty!", vbCritical
End Sub

Function fPaperSize(vSet As Boolean) As Boolean
    Dim vReStart As Boolean
    Dim XlIndx As Integer
    Dim i As Integer
    Dim pName As String
    Dim pWidth As Double
    Dim pHeight As Double

    If P(1, 0) = Empty Then
        P(1, 0) = 1: P(1, 1) = 215.9: P(1, 2) = 279.4: P(1, 3) = "Letter (8-1/2 in. x 11 in.)": P(1, 4) = "Carta (215,9 mm x 279,4 mm)"
        P(2, 0) = 2: P(2, 1) = 216: P(2, 2) = 279: P(2, 3) = "Letter Small (8-1/2 in. x 11 in.)": P(2, 4) = "Carta pequena (216 mm x 279 mm)"
        P(3, 0) = 3: P(3, 1) = 279: P(3, 2) = 432: P(3, 3) = "Tabloid (11 in. x 17 in.)": P(3, 4) = "Tabl|fffd|ide (279 mm x 432 mm)"
        P(4, 0) = 4: P(4, 1) = 432: P(4, 2) = 279: P(4, 3) = "Ledger (17 in. x 11 in.)": P(4, 4) = "Ledger (432 mm x 279 mm)"
        P(5, 0) = 5: P(5, 1) = 215.9: P(5, 2) = 355.6: P(5, 3) = "Legal (8-1/2 in. x 14 in.)": P(5, 4) = "Of|fffd|cio (215,9 mm x 355,6 mm)"
        P(6, 0) = 6: P(6, 1) = 140: P(6, 2) = 216: P(6, 3) = "Statement (5-1/2 in. x 8-1/2 in.)": P(6, 4) = "Declara|fffd||fffd|o (140 mm x 216 mm)"
        P(7, 0) = 7: P(7, 1) = 190.5: P(7, 2) = 266.7: P(7, 3) = "Executive (7-1/2 in. x 10-1/2 in.)": P(7, 4) = "Executivo (190,5 mm x 266,7 mm)"
        P(8, 0) = 8: P(8, 1) = 297: P(8, 2) = 420: P(8, 3) = "A3 (297 mm x 420 mm)": P(8, 4) = "A3 (297 mm x 420 mm)"
        P(9, 0) = 9: P(9, 1) = 210: P(9, 2) = 297: P(9, 3) = "A4 (210 mm x 297 mm)": P(9, 4) = "A4 (210 mm x 297 mm)"
        P(10, 0) = 10: P(10, 1) = 210: P(10, 2) = 297: P(10, 3) = "A4 Small (210 mm x 297 mm)": P(10, 4) = "A4 pequeno (210 mm x 297 mm)"
        P(11, 0) = 11: P(11, 1) = 148: P(11, 2) = 210: P(11, 3) = "A5 (148 mm x 210 mm)": P(11, 4) = "A5 (148 mm x 210 mm)"
        P(12, 0) = 12: P(12, 1) = 250: P(12, 2) = 354: P(12, 3) = "B4 (250 mm x 354 mm)": P(12, 4) = "B4 (250 mm x 354 mm)"
        P(13, 0) = 13: P(13, 1) = 148: P(13, 2) = 210: P(13, 3) = "A5 (148 mm x 210 mm)": P(13, 4) = "A5 (148 mm x 210 mm)"
        P(14, 0) = 14: P(14, 1) = 216: P(14, 2) = 330: P(14, 3) = "Folio (8-1/2 in. x 13 in.)": P(14, 4) = "F|fffd|lio (216 mm x 330 mm)"
        P(15, 0) = 15: P(15, 1) = 215: P(15, 2) = 275: P(15, 3) = "Quarto (215 mm x 275 mm)": P(15, 4) = "Quarto (215 mm x 275 mm)"
        P(16, 0) = 16: P(16, 1) = 254: P(16, 2) = 355.6: P(16, 3) = "10 in. x 14 in. ": P(16, 4) = "10 x 14 in (254 mm x 355,6 mm)"
        P(17, 0) = 17: P(17, 1) = 279: P(17, 2) = 432: P(17, 3) = "11 in. x 17 in. ": P(17, 4) = "11 x 17 in (279 mm x 432 mm)"
        P(18, 0) = 18: P(18, 1) = 261: P(18, 2) = 279: P(18, 3) = "Note (8-1/2 in. x 11 in.)": P(18, 4) = "Nota (261 mm x 279 mm)"
        P(19, 0) = 19: P(19, 1) = 98: P(19, 2) = 225: P(19, 3) = "Envelope #9 (3-7/8 in. x 8-7/8 in.)": P(19, 4) = "Envelope #9 (98 mm x 225 mm)"
        P(20, 0) = 20: P(20, 1) = 104.8: P(20, 2) = 241: P(20, 3) = "Envelope #10 (4-1/8 in. x 9-1/2 in.)": P(20, 4) = "Envelope #10 (104,8 mm x 241 mm)"
        P(21, 0) = 21: P(21, 1) = 114: P(21, 2) = 263: P(21, 3) = "Envelope #11 (4-1/2 in. x 10-3/8 in.)": P(21, 4) = "Envelope #11 (114 mm x 263 mm)"
        P(22, 0) = 22: P(22, 1) = 124: P(22, 2) = 279: P(22, 3) = "Envelope #12 (4-1/2 in. x 11 in.)": P(22, 4) = "Envelope #12 (124 mm x 279 mm)"
        P(23, 0) = 23: P(23, 1) = 127: P(23, 2) = 292: P(23, 3) = "Envelope #14 (5 in. x 11-1/2 in.)": P(23, 4) = "Envelope #14 (127 mm x 292 mm)"
        P(24, 0) = 27: P(24, 1) = 110: P(24, 2) = 220: P(24, 3) = "Envelope DL (110 mm x 220 mm)": P(24, 4) = "Envelope DL (110 mm x 220 mm)"
        P(25, 0) = 28: P(25, 1) = 162: P(25, 2) = 229: P(25, 3) = "Envelope C5 (162 mm x 229 mm)": P(25, 4) = "Envelope C5 (162 mm x 229 mm)"
        P(26, 0) = 29: P(26, 1) = 324: P(26, 2) = 458: P(26, 3) = "Envelope C3 (324 mm x 458 mm)": P(26, 4) = "Envelope C3 (324 mm x 458 mm)"
        P(27, 0) = 30: P(27, 1) = 229: P(27, 2) = 324: P(27, 3) = "Envelope C4 (229 mm x 324 mm)": P(27, 4) = "Envelope C4 (229 mm x 324 mm)"
        P(28, 0) = 31: P(28, 1) = 114: P(28, 2) = 162: P(28, 3) = "Envelope C6 (114 mm x 162 mm)": P(28, 4) = "Envelope C6 (114 mm x 162 mm)"
        P(29, 0) = 32: P(29, 1) = 114: P(29, 2) = 229: P(29, 3) = "Envelope C65 (114 mm x 229 mm)": P(29, 4) = "Envelope C65 (114 mm x 229 mm)"
        P(30, 0) = 33: P(30, 1) = 250: P(30, 2) = 353: P(30, 3) = "Envelope B4 (250 mm x 353 mm)": P(30, 4) = "Envelope B4 (250 mm x 353 mm)"
        P(31, 0) = 34: P(31, 1) = 176: P(31, 2) = 250: P(31, 3) = "Envelope B5 (176 mm x 250 mm)": P(31, 4) = "Envelope B5 (176 mm x 250 mm)"
        P(32, 0) = 35: P(32, 1) = 176: P(32, 2) = 125: P(32, 3) = "Envelope B6 (176 mm x 125 mm)": P(32, 4) = "Envelope B6 (176 mm x 125 mm)"
        P(33, 0) = 36: P(33, 1) = 110: P(33, 2) = 230: P(33, 3) = "Envelope (110 mm x 230 mm)": P(33, 4) = "Envelope (110 mm x 230 mm)"
        P(34, 0) = 37: P(34, 1) = 98.4: P(34, 2) = 190.5: P(34, 3) = "Envelope Monarch (3-7/8 in. x 7-1/2 in.)": P(34, 4) = "Envelope Monarch (98,4 mm x 190,5 mm)"
        P(35, 0) = 38: P(35, 1) = 92.1: P(35, 2) = 165: P(35, 3) = "Envelope (3-5/8 in. x 6-1/2 in.)": P(35, 4) = "Envelope 3-5/8 x 6-1/2 (92,1 mm x 165 mm)"
        P(36, 0) = 39: P(36, 1) = 377.8: P(36, 2) = 279.4: P(36, 3) = "U.S. Standard Fanfold (14-7/8 in. x 11 in.)": P(36, 4) = "Formul|fffd|rio cont|fffd|nuo padr|fffd|o americano (377,8 mm x 279,4 mm)"
        P(37, 0) = 40: P(37, 1) = 215.9: P(37, 2) = 330.2: P(37, 3) = "German Legal Fanfold (8-1/2 in. x 13 in.)": P(37, 4) = "Formul|fffd|rio cont|fffd|nuo of|fffd|cio alem|fffd|o (215,9 mm x 330,2 mm)"
        P(38, 0) = 41: P(38, 1) = 215.9: P(38, 2) = 330.2: P(38, 3) = "German Legal Fanfold (8-1/2 in. x 13 in.)": P(38, 4) = "Formul|fffd|rio cont|fffd|nuo of|fffd|cio alem|fffd|o (215,9 mm x 330,2 mm)"
        P(39, 0) = 256: P(39, 1) = 215.9: P(39, 2) = 279.4: P(39, 3) = "User-defined ": P(39, 4) = "Definido pelo usu|fffd|rio "
        P(40, 0) = 263: P(40, 1) = 216: P(40, 2) = 305: P(40, 3) = "Fanfold (216 mm x 305 mm)": P(40, 4) = "Fanfold (216 mm x 305 mm)"
        P(41, 0) = 264: P(41, 1) = 203: P(41, 2) = 152: P(41, 3) = "8 x 6 in (203 mm x 152 mm)": P(41, 4) = "8 x 6 in (203 mm x 152 mm)"
        P(42, 0) = 265: P(42, 1) = 210: P(42, 2) = 305: P(42, 3) = "Fanfold (210 mm x 305 mm)": P(42, 4) = "Fanfold (210 mm x 305 mm)"
        P(43, 0) = 267: P(43, 1) = 216: P(43, 2) = 330: P(43, 3) = "Fanfold (216 mm x 330 mm)": P(43, 4) = "Fanfold (216 mm x 330 mm)"
        P(44, 0) = 1000: P(44, 1) = 215.9: P(44, 2) = 279.4: P(44, 3) = "Other": P(44, 4) = "Outro"
    End If
    fPaperSize = False
    vReStart = False
ReStart:
    If vSet Then
        Dim bDlgPgSetup As Boolean
        If dHostAppVer < 11 + 1 Then
            bDlgPgSetup = appHostApp.Dialogs(xlDialogPageSetup).Show    'Bug em 2007
        Else
            bDlgPgSetup = appHostApp.ExecuteExcel4Macro("PAGE.SETUP?()")
        End If
        If bDlgPgSetup = False Then
            If vReStart Or vSet Then Exit Function
        End If
    End If

    On Error Resume Next
    XlIndx = appHostApp.ActiveWindow.ActiveSheet.PageSetup.PaperSize
    If Err.Number <> 0 Then
        If IsPortg Then
            Msg1 = "H|fffd| algo de errado em seu sistema. Talvez n|fffd|o haja impressora configurada."
            Msg2 = sAddInCaptByApp & " - Tamanho do Papel - Falha!"
        Else
            Msg1 = "There is something wrong in your system. Maybe there isn't configured printer."
            Msg2 = sAddInCaptByApp & " - Paper Size - Fail!"
        End If
        MyMsgBox Msg1, 1, Msg2
        Exit Function
    End If
    On Error GoTo 0

    Pindx = 44
    For i = 0 To 44
        If P(i, 0) = XlIndx Then
            Pindx = i
            Exit For
        End If
    Next
    If Pindx = 44 Then XlIndx = 1000
    If XlIndx = 256 Or XlIndx = 1000 Then
        FormPaperSize.Show 1
        If PressBot = 2 Then Exit Function
    End If
    pName = P(Pindx, IIf(IsPortg, 4, 3))
    pWidth = P(Pindx, 1) / 25.4
    pHeight = P(Pindx, 2) / 25.4

    On Error Resume Next
    If XlIndx <> 256 And XlIndx <> 1000 Then
        appHostApp.ActiveWindow.ActiveSheet.PageSetup.PaperSize = XlIndx
        If Err.Number <> 0 Then
            If IsPortg Then
                Msg1 = "O papel com tamanho ''" & pName & "'' n|fffd|o |fffd| suportado pela impressora " & appHostApp.ActivePrinter & Chr(10) & Chr(10) _
                        & "OK  -  Configurar outro PAPEL;" & Chr(10) & Chr(10) _
                        & "Cancelar - Configurar outra IMPRESSORA."
                Msg2 = sAddInCaptByApp & " - Tamanho do Papel - Falha!"
            Else
                Msg1 = "The paper with size ''" & pName & "'' isn't supported by the printer " & appHostApp.ActivePrinter & Chr(10) & Chr(10) _
                        & "OK  -  Setup other PAPER;" & Chr(10) & Chr(10) _
                        & "Cancel - Setup other PRINTER."
                Msg2 = sAddInCaptByApp & " - Paper Size - Fail!"
            End If
            If MyMsgBox(Msg1, 2, Msg2) = 1 Then
                vReStart = True
                vSet = True
                GoTo ReStart
            Else
                If appHostApp.Dialogs(xlDialogPrinterSetup).Show Then
                    GoTo ReStart
                Else
                    Exit Function
                End If
            End If
        End If
    End If

    tPaperSize.lXlIndex = XlIndx
    tPaperSize.sName = pName
    tPaperSize.dWidth = pWidth
    tPaperSize.dHeight = pHeight
    fPaperSize = True
End Function

Sub GetPicOrigSize(HrzHdftPosPict As Graphic)
'O tamanho original poderia ser obtido com .ScaleHeight 1, msoCTrue, mas essa
'propriedade n|fffd|o existe nas figura de cabe|fffd|alho. Como o tamanho da figura leva
'em conta o crop e redu|fffd||fffd|o/amplia|fffd||fffd|o aplicada depois do crop, pode-se deduzir
'o tamanho pelas dimens|fffd|es dispon|fffd|veis. Assim:
    Dim IniCropLeft As Double
    Dim IniCropRight As Double
    Dim IniCropTop As Double
    Dim IniCropBottom As Double
    Dim TmpHeight As Double
    Dim TmpWidth As Double
    Dim OriHeightAc As Double
    Dim OriWidthAc As Double
    Dim i As Long

    With HrzHdftPosPict
        IniCropLeft = .CropLeft
        IniCropRight = .CropRight
        IniCropTop = .CropTop
        IniCropBottom = .CropBottom
        IniLockAspectRatio = .LockAspectRatio

        .LockAspectRatio = msoFalse
        .CropLeft = 0
        .CropRight = 0
        .CropTop = 0
        .CropBottom = 0
        IniHeight = .Height
        IniWidth = .Width

        'Primeira aproxima|fffd||fffd|o
        TmpHeight = IniHeight
        TmpWidth = IniWidth
        .CropTop = -100
        .CropLeft = -100
        OriHeight = .CropTop * TmpHeight / (TmpHeight - .Height)
        OriWidth = .CropLeft * TmpWidth / (TmpWidth - .Width)

        'Uma m|fffd|dia de 50 tentativa para o dim orig ficar igual a tentativa
        For i = 1 To 50
            If i Mod 10 = 0 Then appHostApp.StatusBar = IIf(IsPortg, "Figura, obtendo tamanho: ", "Picture, getting size: ") & Int(i / 50 * 100) & "%"
            .CropTop = 0
            .CropLeft = 0
            .Height = OriHeight
            .Width = OriWidth
            TmpHeight = OriHeight
            TmpWidth = OriWidth
            .CropTop = -OriHeight
            .CropLeft = -OriWidth
            OriHeight = .CropTop * TmpHeight / (TmpHeight - .Height)
            OriWidth = .CropLeft * TmpWidth / (TmpWidth - .Width)
            OriHeightAc = OriHeightAc + OriHeight
            OriWidthAc = OriWidthAc + OriWidth
        Next
        appHostApp.StatusBar = False
        OriHeight = OriHeightAc / 50
        OriWidth = OriWidthAc / 50
        'OriHeight = VBA.Strings.Format(OriHeight / appHostApp.InchesToPoints(1) * IIf(appHostApp.International(xlMetric), 2.54, 1), "#,##0.00")
        'OriWidth = VBA.Strings.Format(OriWidth / appHostApp.InchesToPoints(1) * IIf(appHostApp.International(xlMetric), 2.54, 1), "#,##0.00")

        'Ao aplicar ocorre um autoarredondamento, isto, al|fffd|m de ir para o que poss|fffd|vel, pode ser o original
        .Height = OriHeight
        .Width = OriWidth
        DoEvents
        OriHeight = .Height
        OriWidth = .Width
        'Se a dif for menor que 1 ponto, considerar que o tamanho inicial |fffd| o original
        If Abs(OriHeight - IniHeight) < 1 Then OriHeight = IniHeight
        If Abs(OriWidth - IniWidth) < 1 Then OriWidth = IniWidth

        'Restaurando dimens|fffd|es iniciais
        .CropLeft = 0
        .CropRight = 0
        .CropTop = 0
        .CropBottom = 0
        .Height = IniHeight
        .Width = IniWidth
        .CropLeft = IniCropLeft
        .CropRight = IniCropRight
        .CropTop = IniCropTop
        .CropBottom = IniCropBottom
        .LockAspectRatio = IniLockAspectRatio
    End With
End Sub

Sub GetPicCurrRealSize(HrzHdftPosPict As Graphic)
'Como o tamanho da figura pelo objeto PageSetup leva em conta o crop e redu|fffd||fffd|o/amplia|fffd||fffd|o aplicada
'depois do crop |fffd| necess|fffd|rio zerar o crop para obter o tamanho real atual da figura
    Dim IniCropLeft As Double
    Dim IniCropRight As Double
    Dim IniCropTop As Double
    Dim IniCropBottom As Double

    With HrzHdftPosPict
        IniCropLeft = .CropLeft
        IniCropRight = .CropRight
        IniCropTop = .CropTop
        IniCropBottom = .CropBottom

        .CropLeft = 0
        .CropRight = 0
        .CropTop = 0
        .CropBottom = 0

        CurrRealHeight = .Height
        CurrRealWidth = .Width

        'Restaurando dimens|fffd|es iniciais
        .CropLeft = IniCropLeft
        .CropRight = IniCropRight
        .CropTop = IniCropTop
        .CropBottom = IniCropBottom
    End With
End Sub

Function PictPosSpell(lDiffPage1 As Long, lEntryPointHdFt1 As Long) As String
    If IsPortg Then
        PictPosSpell = IIf(dHostAppVer < 11 + 1, "", Choose(lDiffPage1 + 1, "P|fffd|gina Padr|fffd|o - ", "Primeira P|fffd|gina - ", "P|fffd|ginas Pares - ")) _
                & Choose(lEntryPointHdFt1, "Cabe|fffd|alho - Esquerdo", "Cabe|fffd|alho - Centro", "Cabe|fffd|alho - Direito", "Rodap|fffd| - Esquerdo", "Rodap|fffd| - Centro", "Rodap|fffd| - Direito")
    Else
        PictPosSpell = IIf(dHostAppVer < 11 + 1, "", Choose(lDiffPage1 + 1, "Default Page - ", "First Page - ", "Even Pages - ")) _
                & Choose(lEntryPointHdFt1, "Header - Left", "Header - Center", "Header - Right", "Footer - Left", "Footer - Center", "Footer - Right")
    End If
End Function

Function MaskTmpPicFile(sPictureFile1 As String)
'Intern pictures that are created here by InsertText() and fRestPicToFile in temp files that are
'hidden for the user. Their names have OrlTxtWatMark as prefix follow by hhmmss their created
'times. The best prefix would be OrlIntWatMark but, for compatibility with InsertText pictures
'from old version, I didn't change it.
    Dim I1 As Long
    I1 = InStr(1, sPictureFile1, "OrlTxtWatMark")
    MaskTmpPicFile = IIf(I1 > 0, IIf(IsPortg, "Interno: ", "Intern: ") & Mid(sPictureFile1, I1 + Len("OrlTxtWatMarkhhmmss"), 1000), sPictureFile1)
    If LCase(Right(MaskTmpPicFile, 4)) = ".tmp" Then MaskTmpPicFile = Left(MaskTmpPicFile, Len(MaskTmpPicFile) - 4)
End Function

Sub PreviewBtClick()
    Dim lCellCount As Double
    Dim lPageCount As Long
    Dim bFewPgToSee As Boolean
    If dHostAppVer < 11 + 1 Then lCellCount = appHostApp.ActiveWindow.ActiveSheet.Cells.Count _
        Else lCellCount = appHostApp.ActiveWindow.ActiveSheet.Cells.CountLarge
    If appHostApp.WorksheetFunction.CountBlank(appHostApp.ActiveWindow.ActiveSheet.Cells) < lCellCount _
            Or appHostApp.ActiveWindow.ActiveSheet.Shapes.Count > 0 Then
        If dHostAppVer >= 11 + 1 Then
            lPageCount = appHostApp.ExecuteExcel4Macro("Get.Document(50)")
            bFewPgToSee = (lPageCount = 1) And (lDiffPage <> 1) And (appHostApp.ActiveWindow.ActiveSheet.PageSetup.DifferentFirstPageHeaderFooter Or appHostApp.ActiveWindow.ActiveSheet.PageSetup.OddAndEvenPagesHeaderFooter)
            If bFewPgToSee = False Then bFewPgToSee = lPageCount < 3 And lDiffPage = 2 And appHostApp.ActiveWindow.ActiveSheet.PageSetup.DifferentFirstPageHeaderFooter And appHostApp.ActiveWindow.ActiveSheet.PageSetup.OddAndEvenPagesHeaderFooter
            If bFewPgToSee Then
                Msg1 = IIf(IsPortg, "Imposs|fffd|vel visualizar a impress|fffd|o em " & Choose(lDiffPage + 1, "P|fffd|gina Padr|fffd|o", "Primeira P|fffd|gina", "P|fffd|ginas Pares") & ", a planilha s|fffd| cont|fffd|m " & lPageCount & " p|fffd|gina" & IIf(lPageCount = 1, "!", "s!"), _
                        "Impossible to preview the print in " & Choose(lDiffPage + 1, "Default Page", "First Page", "Even Pages") & ", the sheet has only " & lPageCount & " page" & IIf(lPageCount = 1, "!", "s!"))
                Msg2 = sAddInCaptByApp & " - " & IIf(IsPortg, "Poucas P|fffd|ginas!", "Few Pages!")
                MyMsgBox Msg1, 1, Msg2
                Exit Sub
            End If
        End If
        appHostApp.ActiveWindow.SelectedSheets.PrintPreview
    Else
        Msg1 = IIf(IsPortg, "Imposs|fffd|vel visualizar impress|fffd|o, a planilha est|fffd| vazia!", "Impossible to preview the print, the sheet is empty!")
        Msg2 = sAddInCaptByApp & " - " & IIf(IsPortg, "Falha!", "Fail!")
        MyMsgBox Msg1, 1, Msg2
    End If
End Sub


Attribute VB_Name = "Mod1Watermark2"
Option Explicit
Public Const VerDate As Date = #9/30/2015#
Public IniDate As Date
Public bIsCOMAddin As Boolean
'Public ObjToVBA As WatermarkObjToVBA    'Esse m|fffd|d. de class n|fffd|o |fffd| necess|fffd|rio em add-in. Remover e comentar essa linha

Private Declare Function GetWindowText Lib "user32" Alias "GetWindowTextA" (ByVal hWnd As Long, ByVal lpString As String, ByVal cch As Long) As Long
Private Declare Function GetWindowTextLength Lib "user32" Alias "GetWindowTextLengthA" (ByVal hWnd As Long) As Long
Public Declare Function GetForegroundWindow Lib "user32" () As Long
Public Declare Function GetActiveWindow Lib "user32" () As Long

Public Const GWL_HWNDPARENT As Long = -8
Public Const GWL_STYLE = (-16)
Public Const WS_THICKFRAME = &H40000
Public Const WS_MINIMIZEBOX = &H20000
Public Const WS_MAXIMIZEBOX = &H10000
Public Const GWL_EXSTYLE = (-20)
Public Const WS_CAPTION As Long = &HC00000
Public Declare Function FindWindowA Lib "user32" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
Public Declare Function GetWindowLongA Lib "user32" (ByVal hWnd As Long, ByVal nIndex As Long) As Long
Public Declare Function SetWindowLongA Lib "user32" (ByVal hWnd As Long, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
Public Declare Function DrawMenuBar Lib "user32" (ByVal hWnd As Long) As Long
Public Declare Function SetForegroundWindow Lib "user32" (ByVal hWnd As Long) As Long

Public Const WS_BORDER = &H800000
Public Const WS_DLGFRAME = &H400000
Public Const WS_EX_CLIENTEDGE = &H200
Public Const WS_EX_LAYERED = &H80000
Public Const LWA_ALPHA = &H2&
Public Const WS_EX_WINDOWEDGE = &H100
Public Const WS_EX_STATICEDGE = &H20000
Public Const WS_EX_APPWINDOW As Long = &H40000   'Show on taskbar
Public Const WS_EX_TOOLWINDOW As Long = &H80     'Tool Window (Small titlebar withoud any control except Close control)
Public Declare Function SetLayeredWindowAttributes Lib "user32" (ByVal hWnd As Long, ByVal crKey As Long, ByVal bAlpha As Byte, ByVal dwFlags As Long) As Long
Public Type RECT
    Left As Long
    Top As Long
    Right As Long
    Bottom As Long
End Type
Public Declare Function AdjustWindowRectEx Lib "user32" (lpRect As RECT, ByVal dsStyle As Long, ByVal bMenu As Long, ByVal dwEsStyle As Long) As Long
Public Declare Function MoveWindow Lib "user32" (ByVal hWnd As Long, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal bRepaint As Long) As Long

Public sAddInNameByApp As String  'ExcelWatermark
Public sAddInCaptByApp As String    'Watermark for Excel, Marca-d'|fffd|gua para Excel
Public AddInTitle As String    'Orlando's ExcelWatermark
Public bAlertAboutNewVer As Boolean

Public bGetLastSetFail As Boolean
Public sIniDateChk As String    'Para garantir a integridade da data

Public sDLLProgId As String    '= "AddInWatermark.ExcelDesigner"
Public dHostAppVer As Double
Public App_hWnd As Long

Dim sINIfile As String
Public sPathSep As String
Public hFile As Long
Dim sFileDescr As String
Public lBotFormWatermark As Long    'Start 0 Normal; 11-16 Copiar; 21-26 Deletar; 31 Insert an selection
Public bUsePgStpManager As Boolean
Public bHasCal As Boolean                                  'Has my calendar or calculator
Public vCallVerOld As Variant                              'and if old to get new
Public lCalRegtrd As Long    'Sobre o registro do psm: 0 - No; 1 - Yes; 2 - FreePass
Public bCalledByPageStpMgr As Boolean
Public Const sMsgAboutGCP As String = "O Gerenciador de Configura|fffd||fffd|o de P|fffd|gina para Excel |fffd| outro utilit|fffd|rio dispon|fffd|vel em nosso site. Ele |fffd| especializado e mais completo e poderoso do que os comandos 'Inserir', 'Excluir' e 'Copiar Para' aqui." _
        & vbCrLf & "Ele possibilita restaurar ou copiar seletivamente de uma planilha para outra ou para um lote de planilhas todas as configura|fffd||fffd|es de p|fffd|gina definidas pelo comando 'Configurar P|fffd|gina...' do Excel inclusive todas as configura|fffd||fffd|es de figuras de cabe|fffd|alho e rodap|fffd|s de planilhas salvas anteriormente." _
        & vbCrLf & "Assim, voc|fffd| pode configurar uma marca-d'|fffd|gua ou uma marca-de-carimbo e definir outras configura|fffd||fffd|es em uma planilha aqui e salvar para serem copiadas indefinidamente por ele para outras planilhas como se fosse um modelo." _
        & vbCrLf & "Visitar sua homepage agora para mais informa|fffd||fffd|es. Ok?"
Public Const sMsgAboutPSM As String = "The Page Setup Manager for Excel is another utility available on our website. It is specialized and more complete and powerful than the 'Insert', 'Delete', and 'Copy To' commands here." _
        & vbCrLf & "It allows the user to selectively reset or copy from a sheet to another sheet or to a batch of sheets all the page settings defined by the Excel 'Page Setup ...' command including all header and footer picture settings for the sheets previously saved." _
        & vbCrLf & "Therefore, you can set up a printed watermark or a printed stampmark and other page settings in a sheet here and save to be copied using it to other sheets indefinitely like a template." _
        & vbCrLf & "Visit its homepage now for more information. Ok?"

Sub Watermark()
    If appHostApp.ActiveWorkbook Is Nothing Then
        Msg1 = IIf(IsPortg, "Antes voc|fffd| deve abrir a(s) Pasta(s) de Trabalho para inserir " & IIf(bCalledByPageStpMgr, "figura!", "marca-d'|fffd|gua!"), "Before you must open the Workbook(s) to insert " & IIf(bCalledByPageStpMgr, "picture!", "watermark!"))
        Msg2 = sAddInCaptByApp & " - " & IIf(IsPortg, "Planilha n|fffd|o Encontrada!", "Sheet not Found!")
        MyMsgBox Msg1, 1, Msg2
        Exit Sub
    End If

    If dHostAppVer > 11 + 1 + 2 + 1 + 1 Then
        Msg1 = IIf(IsPortg, "Nova vers|fffd|o do Excel desconhecida para esta vers|fffd|o do ExcelWatermark! Clique no link Ajuda, logo abaixo, para baixar uma nova vers|fffd|o compat|fffd|vel.", _
                "New Excel version unknown to this ExcelWatermark version! Click Help link, soon below, to download a new compatible version.")
        Msg2 = sAddInCaptByApp & IIf(IsPortg, " - Falha!", " - Fail!")
        MyMsgBox Msg1, 1, Msg2
        Exit Sub
    End If

    On Error Resume Next: Msg1 = appHostApp.ActiveWindow.ActiveSheet.PageSetup.LeftHeader
    If Err.Number <> 0 Then
        Msg1 = IIf(IsPortg, "Problemas na configura|fffd||fffd|o da impressora/fax ou nenhuma foi adicionada ainda.", _
                   "Problems on printer/fax setting or none has been added yet.")
        Msg2 = sAddInCaptByApp & IIf(IsPortg, " - Falha!", " - Fail!")
        MyMsgBox Msg1, 1, Msg2
        Exit Sub
    End If
    On Error GoTo 0

    Dim i As Long: If TypeName(appHostApp.ActiveWindow.ActiveSheet) <> "Worksheet" Then Exit Sub     'xpms
    If 2 = 3 And Date > BetaLimDate Then    'Desabilitado fica aqui para uma eventualidade
        appHostApp.Interactive = False
        For i = 1 To DateDiff("d", BetaLimDate, Date)
            appHostApp.StatusBar = IIf(IsPortg, "Vers|fffd|o BETA vencida a " & i & " dias atr|fffd|s", "BETA version old at " & i & " days ago")
            If i < 10 Or i = Int(i / 30) * 30 Then MyWait 1
        Next
        MyWait 2
        appHostApp.Interactive = True
        appHostApp.StatusBar = False
    End If

    If lBotFormWatermark = 31 Then    'Back from Insert an selection
        'If PressBot = 0 Then MyMsgBox "Please, select..", 1, "Waiting a Selection": Exit Sub Achei melhor ignorar espera e descarregar
        Unload FormInsSelection
        lBotFormWatermark = 0
    End If

    If IniDate = 0 Then ReadINISetting    'Ler vari|fffd|veis, se ainda n|fffd|o tiver lido
    If dHostAppVer >= 11 + 1 + 2 + 1 Then WbSDIWinRestAll: App_hWnd = appHostApp.hWnd    'Always get because in Excel 15 SDI each wb has its window with different handle.
    FormWatermark.Show 1

    If lBotFormWatermark = 0 And Not ShiftDown Then
        DelTempFiles
    ElseIf ((lBotFormWatermark >= 11 And lBotFormWatermark <= 16) Or (lBotFormWatermark >= 21 And lBotFormWatermark <= 26)) And appHostApp.Workbooks.Count > 0 Then
        Unload FormWatermark    'To update changes when returning
        Dim fRet
        fRet = RunCal("PageSetpMgr", lBotFormWatermark, fGetVersion)
        'If Not fRet = False Then
        Watermark    'Always restart when coming back any be the return
        Exit Sub
    ElseIf lBotFormWatermark = 31 Then
        Unload FormWatermark    'To update changes when returning
        FormInsSelection.Show 0
    End If
End Sub

Public Function fWatermark(Optional lBotForm)
    If IsMissing(lBotForm) Then lBotForm = 0
    
    
    lBotFormWatermark = lBotForm    'Deixei, mas n|fffd|o tem utilidade. Agora de 11 a 16 indica para ativar uma das posi|fffd||fffd|o de figura
    bCalledByPageStpMgr = True    'A vari|fffd|vel foi necess|fffd|ria porque lBotFormWatermark varia se PageStpMng for chamado para deletar e copiar
    Watermark
    bCalledByPageStpMgr = False
    fWatermark = lBotFormWatermark    'Deixei, mas n|fffd|o tem utilidade
End Function

Sub DelTempFiles()
'Delete temp files
    On Error Resume Next
    Dim PathTemp As String
    Dim sfile As String
    PathTemp = TempFolder()
    If Right(PathTemp, 1) = "\" Then PathTemp = Left(PathTemp, Len(PathTemp) - 1)
    sfile = VBA.FileSystem.Dir(PathTemp & "\OrlTxtWatMark*" & ".tmp")
    Do While sfile <> ""
        If IsNumeric(Mid(sfile, 14, 6)) Then Kill PathTemp & "\" & sfile
        sfile = VBA.FileSystem.Dir()
    Loop
End Sub

Public Function fGetVersion() As String
    fGetVersion = "3.2.0"
End Function

Public Function fGetRegtrdState() As Long
    If IniDate = 0 Then ReadINISetting    'Ler vari|fffd|veis, se ainda n|fffd|o tiver lido
    AutentReg
    Err.Clear    'Se n|fffd|o limpar propaga para o caller
    fGetRegtrdState = IIf(bRegtrd, 1, IIf(bIsFreePass, 2, 0))
End Function

Sub WriteINISetting()
    If sINIfile = "" Then GetINIfile

    Dim bINInew As Boolean
    If VBA.FileSystem.Dir(sINIfile) = "" Then bINInew = True Else If VBA.FileSystem.FileLen(sINIfile) = 0 Then bINInew = True
    If bGetLastSetFail Then bINInew = True    'Se houve alguma falha na leitura considerar novo tamb|fffd|m
    sIniDateChk = CheckSum4(VBA.Strings.Format(IniDate, "mm/dd/yyyy"))

    On Error GoTo ErrorHandler
    hFile = FreeFile
    Open sINIfile For Output As #hFile
    Write #hFile, sFileDescr
    Write #hFile, IniDate
    Write #hFile, sIniDateChk
    Write #hFile, sRegtrdSerial
    Write #hFile, sRegtrdKey
    Write #hFile, sRegDateChk
    Write #hFile, RegDate
    Write #hFile, lRefArea
    Write #hFile, bAnchorOnLeftMargin
    Write #hFile, bUsePgStpManager
    'Write #hFile, HotKey

    Close #hFile

    'Se foi criado novo com sucesso, alertar sobre nova vers|fffd|o se vers|fffd|o com mais de 1ano e meio
    If bINInew And Date > VerDate + 3 * 180 Then bAlertAboutNewVer = True
    Exit Sub
ErrorHandler:
    MyMsgBox IIf(IsPortg, "N|fffd|o foi poss|fffd|vel salvar a nova configura|fffd||fffd|o no arquivo INI em:", "It wasn't possible to save the new setting on INI file at:") & vbCrLf & sINIfile, 1, IIf(IsPortg, "Erro! " & Err.Description, "Error! " & Err.Description)
End Sub

Sub ReadINISetting()
    If sINIfile = "" Then GetINIfile    'Se ainda n|fffd|o tiver definido, define e fica valendo para ler e escrever
    bGetLastSetFail = False

    On Error Resume Next
    hFile = FreeFile
    Open sINIfile For Input As #hFile
    Input #hFile, sFileDescr
    Input #hFile, IniDate
    Input #hFile, sIniDateChk
    Input #hFile, sRegtrdSerial
    Input #hFile, sRegtrdKey
    Input #hFile, sRegDateChk
    Input #hFile, RegDate
    Input #hFile, lRefArea
    Input #hFile, bAnchorOnLeftMargin
    Input #hFile, bUsePgStpManager
    'Input #hFile, HotKey

    Close #hFile

    If Err.Number <> 0 Then
        bGetLastSetFail = True    'Sinaliza para usa cfg padr|fffd|o e tentar ler novamente da pr|fffd|xima vez
    Else
        'Se j|fffd| existir INI funcional:
        'Alertar sobre nova vers|fffd|o, se IniDate lido estiver corrompido, pois pode ter sido proposital
        If sIniDateChk <> CheckSum4(VBA.Strings.Format(IniDate, "mm/dd/yyyy")) Then
            bAlertAboutNewVer = True: IniDate = 0
        Else
            'Alertar sobre nova vers|fffd|o a cada seis meses. Para evitar cria|fffd||fffd|o proposital de ini com data muito no futuro, criticar
            'atraso de seis meses tamb|fffd|m, mas s|fffd| em data ap|fffd|s VerDate, assim suporta problema eventual no rel|fffd|gio do computador
            'Isso s|fffd| se tiver sem chave de registro, portando n|fffd|o registrado de pass livre ou n|fffd|o.
            If Date >= VerDate Then If VBA.Math.Abs(Date - IniDate) > 180 And sRegtrdKey = "" Then bAlertAboutNewVer = True    'Alertar s|fffd| quando o utilit|fffd|rio for requisitado realmente de prefer|fffd|ncia em cima de um form, pois alertar ao trabalhar em bakground confunde
        End If
    End If

    'Criticar vari|fffd|veis obtidas
    If IniDate = 0 Then IniDate = Date
    If lRefArea < 1 Or lRefArea > 3 Then lRefArea = 1
    'If HotKey <> "" Then If Not fHotKey(HotKey, True, True) Then HotKey = ""    'Falhou limpa. Talvez isto n|fffd|o seja necess|fffd|rio

    'xx    If sRegtrdKey = "" Then If GetRegDatFile(True) = "" Then bJaAutent = True    'Para que j|fffd| inicie verificada e exibindo o comando Register, assim a vers|fffd|o completa n|fffd|o registra fica parecida com a free que n|fffd|o fica pedindo a chave
End Sub

Sub GetINIfile()
    Dim i As Long

    'Primeiro tenta junto ao xla, se falhar vai para o temp. Normalmente em usu|fffd|rio Restrito.
    sPathSep = appHostApp.PathSeparator
    sINIfile = IIf(LCase(ThisDLLPath) = LCase(appHostApp.StartupPath), appHostApp.StartupPath & sPathSep & "..", _
            ThisDLLPath) & sPathSep & sAddInNameByApp & ".ini"

    On Error Resume Next
    For i = 1 To 3
        Err.Number = 0
        hFile = FreeFile
        'Open sINIfile For Binary Lock Write As #hFile 'Only for write
        Open sINIfile For Append As #hFile                        'For read and write
        Close #hFile
        If Err.Number = 0 Then Exit For
        DoEvents    'MyWait 0.3
    Next

    If Err.Number <> 0 Then
        If TempFolder <> "" Then
            'Em Temp tenta a subpasta OrlandoApp, se n|fffd|o existir cria e se n|fffd|o tiver sucesso vai no raiz mesmo
            If VBA.FileSystem.Dir(TempFolder & sPathSep & "OrlandoApp", vbDirectory) <> "" Then
                sINIfile = TempFolder & sPathSep & "OrlandoApp" & sPathSep & sAddInNameByApp & ".ini"
            Else
                Err.Clear
                VBA.FileSystem.MkDir TempFolder & sPathSep & "OrlandoApp"
                If Err.Number <> 0 Then
                    sINIfile = TempFolder & sPathSep & sAddInNameByApp & ".ini"
                Else
                    sINIfile = TempFolder & sPathSep & "OrlandoApp" & sPathSep & sAddInNameByApp & ".ini"
                End If
            End If
        End If
    End If

    sFileDescr = IIf(IsPortg, ";Este arquivo cont|fffd|m a configura|fffd||fffd|o inicial de " & sAddInCaptByApp & ". Ele pode ser exclu|fffd|do sem problemas", ";This file contains the initial setting of " & sAddInCaptByApp & ". It can be deleted without problems.")
End Sub

Function TempFolder() As String
'Get Temp Folder
    Dim fctRet As Long
    TempFolder = String$(255, 0)
    fctRet = GetTempPath(255, TempFolder)
    If fctRet <> 0 Then
        TempFolder = VBA.Left(TempFolder, fctRet)
        If Right(TempFolder, 1) = sPathSep Then TempFolder = VBA.Left(TempFolder, Len(TempFolder) - 1)
    Else
        TempFolder = ""
    End If
End Function

Public Sub AlertAboutNewVer()
    Static lDelay As Long

    If lDelay <> 0 Then Exit Sub    'Alerta uma |fffd|nica vez a cada execu|fffd||fffd|o
    If IniDate = 0 Then ReadINISetting    'Ler vari|fffd|veis, se ainda n|fffd|o tiver lido
    If bGetLastSetFail Then WriteINISetting    'Salva vari|fffd|veis padr|fffd|o, se houve falha na |fffd|ltima leitura
    If Not bAlertAboutNewVer Then Exit Sub    'Se em read e write n|fffd|o houve justificativa para alert sai

    If IsPortg Then
        Msg1 = "Esta vers|fffd|o j|fffd| tem mais de seis meses:" & vbCrLf & vbCrLf & _
                "OK - Suspender este alerta por um ou seis meses se abrir a homepage para voc|fffd| ver potenciais atualiza|fffd||fffd|es ou" & vbCrLf & vbCrLf & _
                "Cancelar - Alertar novamente na pr|fffd|xima execu|fffd||fffd|o. Se Ctrl + Shift estiverem pressionados, este alerta ser|fffd| suspenso por seis meses sem uma visita |fffd| homepage."
        Msg2 = sAddInCaptByApp
    Else
        Msg1 = "This version already has more than six months:" & vbCrLf & vbCrLf & _
                "OK - Suspend this alert for one or six months if it opens the homepage for you to see potential updates or" & vbCrLf & vbCrLf & _
                "Cancel - Alert again in the next execution. If Ctrl + Shift are pushed, this alert will be suspended for six months without a homepage visit."
        Msg2 = sAddInCaptByApp
    End If
    If MyMsgBox(Msg1, 2, Msg2) = 2 Then
        lDelay = 1
    Else
        lDelay = 2
        On Error Resume Next
        appHostApp.ActiveWorkbook.FollowHyperlink "http://cpap.com.br/orlando/" & sAddInNameByApp & IIf(IsPortg, "Mais.asp?IdC=ProcUpdt", "More.asp?IdC=LookUpdt"), , True
        If Err.Number <> 0 Then MsgBox Err.Description Else lDelay = 3: MyWait 2: VBA.Interaction.AppActivate GetAppWinCaption
    End If
    If CtrlDown And ShiftDown Then
        lDelay = 3
        Do While CtrlDown Or ShiftDown: MyWait 0.1: Loop
    End If
    If lDelay > 1 Then    'Se n|fffd|o vai adiar n|fffd|o precisa salvar e em cancelamento |fffd| melhor n|fffd|o alterar nada, pois pode ser algum desajuste no rel|fffd|gio conhecido pelo usu|fffd|rio.
        IniDate = Date + Choose(lDelay, 0, -150, 0)
        WriteINISetting
    End If
End Sub

Function GetActWinCaption() As String
    Dim vStr As String
    Dim Ret As Long
    vStr = String(GetWindowTextLength(GetActiveWindow), Chr$(0))
    Ret = GetWindowText(GetActiveWindow, vStr, Len(vStr) + 1)
    If Ret <> 0 Then
        GetActWinCaption = vStr
    End If
End Function

Function GetAppWinCaption() As String
    Dim vStr As String
    Dim Ret As Long
    vStr = String(GetWindowTextLength(App_hWnd), Chr$(0))
    Ret = GetWindowText(App_hWnd, vStr, Len(vStr) + 1)
    If Ret <> 0 Then
        GetAppWinCaption = vStr
    End If
End Function

Function ThisDLLPath() As String
    Static sDllPath As String
    If sDllPath <> "" Then ThisDLLPath = sDllPath: Exit Function
    If bIsCOMAddin Then
        Dim sGuid As String
        On Error Resume Next
        sGuid = GetRegValue(HKEY_CLASSES_ROOT, sDLLProgId & "\CLSID", "")
        sDllPath = GetRegValue(HKEY_CLASSES_ROOT, "CLSID\" & sGuid & "\InprocServer32", "")
        If VBA.FileSystem.Dir(sDllPath) <> "" Then sDllPath = Left(sDllPath, Len(sDllPath) - Len(Dir(sDllPath)) - 1) Else sDllPath = ""
        If Err.Number <> 0 Then sDllPath = ""
    Else
        sDllPath = appHostApp.ThisWorkbook.Path
    End If
    ThisDLLPath = sDllPath
End Function

Sub FixForm(hWinHld As Long)
'Fixar form
    Dim lStyle As Long
    lStyle = GetWindowLongA(hWinHld, GWL_STYLE)
    lStyle = lStyle And Not WS_THICKFRAME    'Fixar tamanho
    lStyle = lStyle And Not WS_MINIMIZEBOX
    lStyle = lStyle And Not WS_MAXIMIZEBOX
    SetWindowLongA hWinHld, GWL_STYLE, lStyle

    lStyle = GetWindowLongA(hWinHld, GWL_EXSTYLE)
    lStyle = lStyle And Not WS_EX_APPWINDOW     'N|fffd|o exibir na barra de tarefa do Windows. S|fffd| |fffd| |fffd|til em COM add-in, mas n|fffd|o tem problema usar em xla
    SetWindowLongA hWinHld, GWL_EXSTYLE, lStyle

    DrawMenuBar hWinHld    'Atualizar barra
End Sub

Sub WbSDIWinRestAll()    'Need in Excel 15 SDI before loading a modal form that can navigate between Wb, because you can restore window wb when is showing.
    Dim ActWb As Excel.Workbook
    Dim Wb As Excel.Workbook
    If appHostApp.Workbooks.Count > 1 Then
        Set ActWb = appHostApp.ActiveWorkbook
        For Each Wb In appHostApp.Workbooks
            If Wb.Windows(1).WindowState = xlMinimized Then Wb.Windows(1).WindowState = xlNormal: DoEvents: Wb.Activate
        Next
        ActWb.Activate
    End If
End Sub

Public Function GetHasCal(sCalName As String) As Boolean
'Verificar se algum dos calendar or calculator est|fffd| carregado e em que condi|fffd||fffd|es
    On Error Resume Next
    'Look for ExcelCal (Add-in)
    vCallVerOld = appHostApp.Run("VBAProjectExcel" & sCalName & ".fGetVersion")
    If Err.Number = 0 Then lCalRegtrd = appHostApp.Run("VBAProjectExcel" & sCalName & ".fGetRegtrdState")
    '    bCalAlreadyPop = appHostApp.Run("VBAProjectExcel" & sCalName & ".GetbPopupFormatSel")
    If Err.Number <> 0 Then                                'old project name
        Err.Clear
        vCallVerOld = appHostApp.Run("Excel" & sCalName & ".fGetVersion")
        If Err.Number = 0 Then lCalRegtrd = appHostApp.Run("Excel" & sCalName & ".fGetRegtrdState")
        '        bCalAlreadyPop = appHostApp.Run("Excel" & sCalName & ".GetbPopupFormatSel")
    End If

    'Look for ExcelCal (COM add-in)
    If Err.Number <> 0 Then
        Dim ObjToVBA1 As Object
        Err.Clear
        Set ObjToVBA1 = appHostApp.COMAddIns("AddIn" & sCalName & ".ExcelDesigner").Object
        vCallVerOld = ObjToVBA1.fGetVersion
        If Err.Number = 0 Then lCalRegtrd = ObjToVBA1.fGetRegtrdState
        '        bCalAlreadyPop = ObjToVBA1.GetbPopupFormatSel
    End If

    'Look for OfficeCal (COM add-in)
    If Err.Number <> 0 Then
        Err.Clear
        Set ObjToVBA1 = appHostApp.COMAddIns("AddInMso" & sCalName & ".ExcelDesigner").Object
        vCallVerOld = ObjToVBA1.fGetVersion
        If Err.Number = 0 Then lCalRegtrd = ObjToVBA1.fGetRegtrdState
        '        bCalAlreadyPop = ObjToVBA1.GetbPopupFormatSel
    End If

    If Err.Number <> 0 Then
        vCallVerOld = True
        '        bCalAlreadyPop = False
        GetHasCal = False
    Else
        vCallVerOld = Split(vCallVerOld, ".")
        vCallVerOld = vCallVerOld(0) * 10 ^ 4 + vCallVerOld(1) * 10 ^ 3 + vCallVerOld(2)
        vCallVerOld = vCallVerOld <= 0
        GetHasCal = True
    End If
    Set ObjToVBA1 = Nothing
End Function

Private Function RunCal(sCalName As String, dValue As Variant, sVer As String)
    On Error Resume Next
    'Look for ExcelCal (Add-in)
    RunCal = appHostApp.Run("VBAProjectExcel" & sCalName & ".f" & sCalName, dValue, sVer)
    If Err.Number <> 0 Then                                'old project name
        Err.Clear
        RunCal = appHostApp.Run("Excel" & sCalName & ".f" & sCalName, dValue, sVer)
    End If

    'Look for ExcelCal (COM add-in)
    If Err.Number <> 0 Then
        Dim ObjToVBA1 As Object
        Err.Clear
        Set ObjToVBA1 = appHostApp.COMAddIns("AddIn" & sCalName & ".ExcelDesigner").Object
        RunCal = ObjToVBA1.fPageSetpMgr(dValue, sVer)
    End If

    'Look for OfficeCal (COM add-in)
    If Err.Number <> 0 Then
        Err.Clear
        Set ObjToVBA1 = appHostApp.COMAddIns("AddInMso" & sCalName & ".ExcelDesigner").Object
        RunCal = ObjToVBA1.fPageSetpMgr(dValue, sVer)
    End If
    Set ObjToVBA1 = Nothing
End Function

'Function CheckSum2(CheckString)
'    Dim i
'    Dim ac
'    Dim cs
'    For i = 1 To Len(CheckString)
'        ac = ac + (i * Asc(Mid(CheckString, i, 1)))
'    Next
'    cs = (ac And &HFF0000) \ 65536    ' third byte
'    cs = cs + (ac And &HFF00&) \ 256  ' + second byte
'    cs = (cs + (ac And 255)) And 255  ' + low byte
'    CheckSum2 = Right("0" & Hex(cs), 2)
'End Function
'
'Function CheckSum4(CheckString)
''Especial checksum com quatro caracteres
'    CheckSum4 = CheckSum2(CheckString)
'    CheckSum4 = CheckSum4 & CheckSum2("ostegsdj uyfopp6gd dj" & CheckSum4)
'End Function
Attribute VB_Name = "Mod1Watermark3"
Option Explicit
Public sUtilSerialID As String                             'O antepen|fffd|ltimo caractere do serial identif o utilit|fffd|ro, assim um serial de um n|fffd|o serve em outro
Public sRegtrdSerial As String
Public sRegtrdKey As String
Public sRegDateChk As String                               'Para garantir a integridade da data do registro
Public RegDate As Date                                     'Data do registro, |fffd|til para validar um diary por um certo tempo (30 dias)

Public dStartDate As Date
Public bJaAutent As Boolean
Public bIsFreePass As Boolean

Const bRegtrdDB As Boolean = True
Public bRegtrd As Boolean

Function MustBeRegToCont() As Boolean
    AutentReg
    If Not bRegtrd And Not bIsFreePass Then
        If IsPortg Then
            Msg1 = "Esta a|fffd||fffd|o est|fffd| dispon|fffd|vel apenas em instala|fffd||fffd|es registradas." _
                    & vbCrLf & "Inserir o serial e a chave de registro agora. Ok?"
            Msg2 = sAddInCaptByApp & " - Registrar"
        Else
            Msg1 = "This action is only available in registered installations." _
                    & vbCrLf & "Insert the serial and registration key now. Ok?"
            Msg2 = sAddInCaptByApp & " - Register"
        End If
        If MyMsgBox(Msg1, 2, Msg2) = 1 Then RegisterNow
        If Not bRegtrd And Not bIsFreePass Then Exit Function
    End If
    MustBeRegToCont = True
End Function

Sub RegisterNow()
    BotAcionado = 0
    formGetRegtrdKey.Show 1
    If BotAcionado = 1 Then bJaAutent = False: AutentReg    'Se ok, tenta autenticar novamente apenas para atualizar vari|fffd|veis
End Sub

Sub AutentReg()
'Se o DB for completo pra vers|fffd|o registrada, autenticar como vers|fffd|o registrada. Se falhar, funcionar como free limitada
    If dStartDate = 0 Then dStartDate = Date               'Data que vale |fffd| a primeira ao iniciar. Assim altera|fffd||fffd|o no rel|fffd|gio s|fffd| efetiva se fechar o Excel
    If bJaAutent And dStartDate <> Date And Not bRegtrd Then bJaAutent = False: dStartDate = Date    'Se depois de j|fffd| autenticada, alterar data e n|fffd|o for registrada (usar diary key) autenticar novamente

    If bRegtrdDB And Not bRegtrd And Not bJaAutent Then
        'Antes verif, se pode passar como Free Pass di|fffd|rio. Pra isto a data de registro tem que estar integra, ser
        'um diary v|fffd|lido para aquela data e esta seja de no m|fffd|ximo 30 dias (per|fffd|odo pra teste) ou apenas dois dias
        'se a data da vers|fffd|o for seis meses mais antiga do que a de registro (necess|fffd|rio atualiz data ver a cada 4 meses).
        bIsFreePass = sRegDateChk = CheckSum4(VBA.Strings.Format(RegDate, "mm/dd/yyyy") & "DiferenciarDesIniDateChk") _
                And CheckSum4(sRegtrdSerial & "-" & GetDayCheckSum(sRegtrdSerial, RegDate)) = sRegtrdKey _
                And dStartDate <= RegDate + IIf(RegDate <= VerDate + 180, 30, 2)

        If CheckSum4(sRegtrdSerial & "-" & GetMachineCheckSum(sRegtrdSerial)) <> sRegtrdKey Then
            'Tenta validar pelo registro no HD antes de exibir o form
            ReadRegstdData
            If CheckSum4(sRegtrdSerial & "-" & GetMachineCheckSum(sRegtrdSerial)) <> sRegtrdKey Then
                'Form to insert Serial and Key. Se pode ser free pass, aceita e n|fffd|o exibe o form
                If Not bIsFreePass And sRegtrdSerial <> "" Then    'S|fffd| exibi logo form aqui se j|fffd| houver serial
                    BotAcionado = 0
                    formGetRegtrdKey.Show 1
                    If BotAcionado = 0 Then
                        bRegtrd = False
                        'Se a key n|fffd|o passou ent|fffd|o destroi imediatamente e em definitivo no ini para,
                        'se diary, evitar sucesso alterando a data depois de fechar e rabrir o Excel.
                        If sRegtrdKey <> "" Then sRegtrdKey = "": WriteINISetting
                    Else
                        'S|fffd| ser|fffd| considerado registrada se o key for de machine e n|fffd|o diary. Existe
                        'uma possibilidade em 65536 de um key diary ser igual ao machine, ent|fffd|o sorte
                        'do usu|fffd|rio que vai poder usar at|fffd| mudar de m|fffd|quina, formatar HD ou reinstalar o Windows
                        bRegtrd = sRegtrdKey = CheckSum4(sRegtrdSerial & "-" & GetMachineCheckSum(sRegtrdSerial))
                        '   If bClassicOnRibbonShow Then lBarsVsblLast = lBarsVsblLast + 55    'Para for|fffd|ar uma atualiza|fffd||fffd|o das barras em classic menu
                        '   If bClassicOnRibbonShow Then bIsFreePass = Not bRegtrd: ClassicOnRibbonShow True, True   'Atualizar barras em classic menu
                    End If
                End If
            Else
                WriteINISetting                            'Sucesso em ReadRegstdData grava ini. Isso dentro de ReadRegstdData n|fffd|o salva em dll parece bug
                bRegtrd = True
            End If
        Else
            bRegtrd = True
        End If
    End If
    bJaAutent = True
    bIsFreePass = Not bRegtrd And sRegtrdKey <> ""         'Se n|fffd|o registrou e tem chave, ent|fffd|o |fffd| pass livre
End Sub

'==> As quatro fun|fffd||fffd|es VBA logo abaixo foram adaptadas para rodar em VBScript (ASP) tamb|fffd|m
Function CheckSum2(CheckString)
    Dim i
    Dim ac
    Dim cs
    For i = 1 To Len(CheckString)
        ac = ac + (i * Asc(Mid(CheckString, i, 1)))
    Next
    cs = (ac And &HFF0000) \ 65536                         ' third byte
    cs = cs + (ac And &HFF00&) \ 256                       ' + second byte
    cs = (cs + (ac And 255)) And 255                       ' + low byte
    CheckSum2 = Right("0" & Hex(cs), 2)
End Function

Function CheckSum4(CheckString)
'Especial checksum com quatro caracteres
    CheckSum4 = CheckSum2(CheckString)
    CheckSum4 = CheckSum4 & CheckSum2("Francisco Orlando" & CheckSum4)
End Function

Function ConcStringCheckSum(CheckString)
'Concatenate uma string com seu checksum. Usado para gerar e verificar o serial para venda
    ConcStringCheckSum = CheckString & CheckSum2("Magalhaes Filho" & CheckString)
End Function

Function GetDayCheckSum(sRegtrdSerie1, dDate)
    Dim sMachineStrig
    sMachineStrig = Right("0" & Month(dDate), 2) & Right("0" & Day(dDate), 2) & Year(dDate)
    If Int(Day(dDate) / 2) * 2 = Day(dDate) Then sMachineStrig = sMachineStrig & Right("0" & Month(dDate), 2) & "-" & Right("0" & Day(dDate), 2) & "-" & Year(dDate)
    GetDayCheckSum = CheckSum4(sRegtrdSerie1 & sMachineStrig)
End Function
'==> Fim VBA/VBScript

Public Function GetMachineCheckSum(sRegtrdSerie1 As String) As String
    Static sMachineStrig As String
    If sMachineStrig = "" Then
        sMachineStrig = GetRegValue(HKEY_LOCAL_MACHINE, "HARDWARE\DESCRIPTION\System", "SystemBiosVersion") _
                & GetRegValue(HKEY_LOCAL_MACHINE, "HARDWARE\DESCRIPTION\System", "SystemBiosDate")
    End If
    GetMachineCheckSum = CheckSum4(sRegtrdSerie1 & sMachineStrig)
End Function






Sub WriteRegstdData()
    Dim sRegFile As String
    Dim sDriveInfo As String
    Dim sChSum As String
    Dim sChSumFake As String                               'S|fffd| para confundir

    sDriveInfo = GetDriveInfo
    sChSum = CheckSum4(sRegtrdSerial & sAddInNameByApp & sRegtrdKey & sAddInNameByApp & sDriveInfo)
    sChSumFake = CheckSum4(sChSum)

    sRegFile = GetRegDatFile(False)
    If sRegFile = "" Then GoTo ErrorHandler

    On Error GoTo ErrorHandler
    hFile = FreeFile
    Open sRegFile For Output As #hFile
    Write #hFile, sRegtrdSerial
    Write #hFile, sRegtrdKey
    Write #hFile, sDriveInfo
    Write #hFile, sChSum
    Write #hFile, sChSumFake

    Close #hFile

    'Se n|fffd|o deu para salvar junto a DLL tenta copiar do temp pelo shell para cientificar no XP e requerer direitos admin. no Vista
    If LCase(ThisDLLPath) <> Left(LCase(sRegFile), Len(ThisDLLPath)) Then
        MousePointWait False
        If IsPortg Then
            Msg1 = "Registrado s|fffd| para esta conta que est|fffd| sem privil|fffd|gio de administrador, direitos de acesso limitados!" _
                    & vbCrLf & vbCrLf & "E o arquivo " & VBA.FileSystem.Dir(sRegFile) & " com os dados do registro foi salvo na pasta Temp, mas o ideal seria ter salvado na mesma pasta da DLL para validar o registro em todas as contas de usu|fffd|rios atuais e futuros deste computador." _
                    & vbCrLf & vbCrLf & "Pressione OK e a seguir, se voc|fffd| quiser e puder, permita a eleva|fffd||fffd|o de privil|fffd|gios para tentar copiar via Windows Explore."
            Msg2 = sAddInCaptByApp & " - Registrado com Sucesso mas..."
        Else
            Msg1 = "Registered only for this account that is without administrator privilege, limited access rights!" _
                    & vbCrLf & vbCrLf & "And the " & VBA.FileSystem.Dir(sRegFile) & " file with the register data was saved in the Temp folder, but the ideal would be to have saved it in the same DLL folder to validate the register in all accounts of current and future users of this computer." _
                    & vbCrLf & vbCrLf & "Press OK and then, if you want and can, allow the privilege elevation to try to copy via Windows Explorer."
            Msg2 = sAddInCaptByApp & " - Registered with Success but..."
        End If
        MyMsgBox Msg1, 1, Msg2

        On Error Resume Next
        Const FOF_FILESONLY = 128
        Const FOF_NOCONFIRMATION = 16
        Dim ShAppObj, ShAppObjFld
        Dim sDestFld, sFileToCopy    'Must be variable, if not, fail in COM add-in
        sDestFld = ThisDLLPath & sPathSep: sFileToCopy = sRegFile
        Set ShAppObj = CreateObject("Shell.Application")
        Set ShAppObjFld = ShAppObj.Namespace(sDestFld)
        If Not ShAppObjFld Is Nothing Then ShAppObjFld.CopyHere sFileToCopy, FOF_FILESONLY + FOF_NOCONFIRMATION
        Set ShAppObjFld = Nothing: Set ShAppObj = Nothing
        MousePointWait True: MyWait 3: MousePointWait False    'Although CopyHere is syncron, without this wait msgox below is shown with all buttons

        If VBA.FileSystem.Dir(ThisDLLPath & sPathSep & VBA.FileSystem.Dir(sRegFile)) = "" Then
            If IsPortg Then
                Msg1 = "A copia para validar outras contas de usu|fffd|rio falhou!" _
                        & vbCrLf & vbCrLf & "Tente registrar novamente rodando o Excel em outra conta com direitos de administrador."
            Else
                Msg1 = "The copy to validate other user accounts failed!" _
                        & vbCrLf & vbCrLf & "Try to register again running Excel in another account with administrative rights."
            End If
            MyMsgBox Msg1, 1, Msg2
        End If
    End If
    Exit Sub
ErrorHandler:
    'A priori vou deixar ser alerta, pois isso n|fffd|o |fffd| fundamental |fffd| mais uma seguran|fffd|a para uma eventual perda do ini ou validar HD em outra m|fffd|quina
    'MyMsgBox IIf(IsPortg, "N|fffd|o foi poss|fffd|vel salvar a nova configura|fffd||fffd|o no arquivo RegDat em:", "It wasn't possible to save the new setting on RegDat file at:") & vbCrLf & sRegFile, 1, IIf(IsPortg, "Erro! " & Err.Description, "Error! " & Err.Description)
End Sub

Sub ReadRegstdData()
    Dim sRegFile As String
    Dim sDriveInfo As String
    Dim sChSum As String

    sRegFile = GetRegDatFile(True)
    If sRegFile = "" Then Exit Sub

    On Error Resume Next
    hFile = FreeFile
    Open sRegFile For Input As #hFile
    Input #hFile, sRegtrdSerial
    Input #hFile, sRegtrdKey
    Input #hFile, sDriveInfo
    Input #hFile, sChSum

    Close #hFile

    If Err.Number <> 0 Then sRegtrdKey = "": Exit Sub

    'Criticar vari|fffd|veis obtidas. S|fffd| valida se HD for o original e o arquivo estiver inalterado.
    If sDriveInfo = GetDriveInfo And sChSum = CheckSum4(sRegtrdSerial & sAddInNameByApp & sRegtrdKey & sAddInNameByApp & sDriveInfo) Then
        sRegtrdKey = CheckSum4(sRegtrdSerial & "-" & GetMachineCheckSum(sRegtrdSerial))
    Else
        sRegtrdKey = ""
    End If
End Sub

Function GetRegDatFile(bOnlyRead As Boolean) As String
    Dim i As Long
    Dim sRegFile As String
    'Primeiro tenta junto ao xla, se falhar vai para o temp. Normalmente usu|fffd|rio rod. sem direito adminis. no Vista.
    Select Case appHostApp.Name
    Case "Microsoft Excel", "Microsoft Word"
        sPathSep = appHostApp.PathSeparator
        sRegFile = IIf(LCase(ThisDLLPath) = LCase(appHostApp.StartupPath), appHostApp.StartupPath & sPathSep & "..", _
                ThisDLLPath) & sPathSep & sAddInNameByApp & "Register.dat"
    Case "Microsoft PowerPoint", "Microsoft Access"
        sPathSep = "\"
        sRegFile = ThisDLLPath & sPathSep & sAddInNameByApp & "Register.dat"
    End Select

ReTryOnTemp:
    On Error Resume Next
    For i = 1 To 3
        Err.Number = 0
        hFile = FreeFile
        If bOnlyRead Then
            Open sRegFile For Input As #hFile              'For read
        Else
            'Open sRegFile For Binary Lock Write As #hFile 'Only for write
            Open sRegFile For Append As #hFile             'For read and write
        End If
        Close #hFile
        If Err.Number = 0 Then Exit For
        DoEvents    'MyWait 0.3
    Next

    Dim bAlreadyTry As Boolean
    If Err.Number <> 0 And bAlreadyTry = False Then
        If TempFolder <> "" Then
            'Em Temp tenta a subpasta OrlandoApp, se n|fffd|o existir cria e se n|fffd|o tiver sucesso vai no raiz mesmo
            If VBA.FileSystem.Dir(TempFolder & sPathSep & "OrlandoApp", vbDirectory) <> "" Then
                sRegFile = TempFolder & sPathSep & "OrlandoApp" & sPathSep & sAddInNameByApp & "Register.dat"
            Else
                Err.Clear
                VBA.FileSystem.MkDir TempFolder & sPathSep & "OrlandoApp"
                If Err.Number <> 0 Then
                    sRegFile = TempFolder & sPathSep & sAddInNameByApp & "Register.dat"
                Else
                    sRegFile = TempFolder & sPathSep & "OrlandoApp" & sPathSep & sAddInNameByApp & "Register.dat"
                End If
            End If
            bAlreadyTry = True
            GoTo ReTryOnTemp
        End If
    End If

    GetRegDatFile = IIf(VBA.FileSystem.Dir(sRegFile) = "", "", sRegFile)
End Function

Function GetDriveInfo()
    Dim fs, d
    On Error GoTo ErrorHandler
    Set fs = CreateObject("Scripting.FileSystemObject")
    Set d = fs.GetDrive(fs.GetDriveName(fs.GetAbsolutePathName(ThisDLLPath)))
    'd.DriveType 0:Unknown 1:Removable 2:Fixed 3:Network 4:CD-ROM 5:RAM Disk
    GetDriveInfo = d.SerialNumber
    Exit Function
ErrorHandler:
    GetDriveInfo = 0
End Function

Sub MousePointWait(bWait As Boolean)
'Isso n|fffd|o tem nenhuma influ|fffd|ncia s|fffd| informa para o cliente esperar. No word restaura autom|fffd|tico no Excel n|fffd|o.
    Select Case appHostApp.Name
    Case "Microsoft Excel"
        appHostApp.Cursor = IIf(bWait, 2, -4143)
    Case "Microsoft Word"
        appHostApp.System.Cursor = IIf(bWait, 0, 2)
    Case "Microsoft PowerPoint"

    Case "Microsoft Access"

    End Select
End Sub


Attribute VB_Name = "Mod2Others"
Option Explicit
Public Declare Function GetTempPath Lib "kernel32" Alias _
        "GetTempPathA" (ByVal nBufferLength As Long, _
        ByVal lpBuffer As String) As Long

Declare Function apiGetSys Lib "user32" Alias "GetSystemMetrics" (ByVal nIndex As Long) As Long
Public Const SM_CXSCREEN = 0
Public Const SM_CYSCREEN = 1
Public Declare Function GetDC Lib "user32" _
        (ByVal hWnd As Long) As Long
Public Declare Function GetDeviceCaps Lib "gdi32" _
        (ByVal hdc As Long, ByVal nIndex As Long) As Long
Public Const LOGPIXELSX = 88
Public Const LOGPIXELSY = 90

Public Declare Function GetKeyState Lib "user32" (ByVal vKey As Integer) As Integer

Public Function ShiftDown()
'Verif. se shift est|fffd| pressionada
    ShiftDown = (GetKeyState(16) < 0)
End Function

Public Function CtrlDown()
'Verif se Ctrl est|fffd| pressionada
    CtrlDown = (GetKeyState(17) < 0)
End Function

Public Function IsWin9x() As Boolean
    IsWin9x = InStr(1, appHostApp.OperatingSystem, "4.") <> 0    'Windows (32-bit) 4.10, Windows (32-bit) NT 5.01 (XP), Windows (32-bit) NT 6.00 (Vista)
End Function


'EVENTOS DE CAIXA DE TEXTO PARA VALOR FINANCEIRO

Sub EvValor_Cb_MouseMove(Valor_Cb As Object, ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)    'As Control pode dar erro em COM add-in
    Dim sd As String
    Valor_Cb.Locked = False
    sd = appHostApp.International(xlDecimalSeparator)
    If Valor_Cb.Text = "0" Or Valor_Cb.Text = "0" & sd & "00" Then
        Valor_Cb.SelStart = 0
        Valor_Cb.SelLength = Len(Valor_Cb.Text)
    End If
End Sub

Sub EvValor_Cb_KeyDown(Valor_Cb As Object, ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)    'As Control pode dar erro em COM add-in
    Dim sd As String
    Dim vKeyCode As Integer
    sd = appHostApp.International(xlDecimalSeparator)
    vKeyCode = IIf(sd = ",", 188, 190)
    Valor_Cb.Locked = False
    If KeyCode = 37 Or (Shift = 2 And KeyCode = 86) Or (Shift = 1 And KeyCode = 45) Or (Shift = 2 And KeyCode = 88) Then Exit Sub   'Seta Esquerda e teclas do clipboard
    If KeyCode = 110 Or KeyCode = 190 Then KeyCode = vKeyCode
    If KeyCode = 188 Then If InStr(1, Valor_Cb.Value, sd) > 0 Then Valor_Cb.Locked = True
    If (KeyCode >= 96 And KeyCode <= 105) _
            Or (KeyCode >= 48 And KeyCode <= 57 And Shift = 0) _
            Or KeyCode = 188 Or KeyCode = 8 Or KeyCode = 46 _
            Or KeyCode = 107 Or (KeyCode = 187 And Shift = 1) _
            Or KeyCode = 109 Or (KeyCode = 189 And Shift = 0) Then Else Valor_Cb.Locked = True
End Sub

Sub EvValor_Cb_Change(Valor_Cb As Object, Optional vAbs As Boolean = False)    'As Control pode dar erro em COM add-in
    Dim sd As String
    Dim sm As String
    Dim SinNeg As String
    Dim PartInt As String
    Dim PartFrac As String
    Dim TamPartInt As Integer
    Dim RepCurs As Integer


    Dim i As String
    Dim j As Integer
    Dim k As Integer
    i = Valor_Cb.Value
    j = Valor_Cb.SelStart
    SinNeg = vAbs = False And InStr(1, i, "-") > 0 And InStr(1, i, "+") = 0
    i = appHostApp.WorksheetFunction.Substitute(i, "-", "")
    i = appHostApp.WorksheetFunction.Substitute(i, "+", "")
    PartInt = i
    sd = appHostApp.International(xlDecimalSeparator)
    sm = appHostApp.International(xlThousandsSeparator)
    k = InStr(1, i, sd)
    If k > 0 Then
        PartFrac = Mid(i, k + 1, 100)
        PartFrac = appHostApp.WorksheetFunction.Substitute(PartFrac, sm, "")
        PartInt = Mid(i, 1, k - 1)
        If PartInt = "" Then PartInt = "0"
    End If
    TamPartInt = Len(PartInt)
    PartInt = appHostApp.WorksheetFunction.Substitute(PartInt, sm, "")
    PartInt = VBA.Strings.Format(PartInt, "#,##0")
    RepCurs = Len(PartInt) - TamPartInt
    vEnableEvents = False
    Valor_Cb.Value = IIf(SinNeg, "-", "") & PartInt & IIf(PartInt = "" Or k = 0, "", sd) & PartFrac
    vEnableEvents = True
    j = -(j + RepCurs) * (j + RepCurs >= 0)
    If Left(Valor_Cb.Value, 2) = "0" & sd And j < 3 Then j = 2
    Valor_Cb.SelStart = j

    'Evita colar texto
    Static ValorOld
    If Valor_Cb.Value <> "" And Valor_Cb.Value <> "-" And Not (IsNumeric(Valor_Cb.Value)) Then
        MsgBox Valor_Cb.Value, vbCritical, IIf(IsPortg, "Invalid Value!", "Valor Inv|fffd|lido!")
        Valor_Cb.Value = ValorOld
    Else
        ValorOld = Valor_Cb.Value
    End If
End Sub

Sub EvValor_Cb_Exit(Valor_Cb As Object, Cancel As MSForms.ReturnBoolean, Formato As String)    'As Control pode dar erro em COM add-in
    If Valor_Cb.Value = "" Then Valor_Cb.Value = 0
    If IsNumeric(Valor_Cb.Value) Then
        If Valor_Cb.Value <> VBA.Strings.Format(Valor_Cb.Value, Formato) Then Valor_Cb.Value = VBA.Strings.Format(Valor_Cb.Value, Formato)
    Else
        MsgBox IIf(IsPortg, "Data inv|fffd|lida!", "Invalid date"), vbCritical, IIf(IsPortg, "Falha!", "Fail!")
        Cancel = True
    End If
End Sub



Attribute VB_Name = "Mod3OLECreatePicture"
Option Explicit
Private Declare Function IsClipboardFormatAvailable Lib "user32" _
        (ByVal wFormat As Long) As Long
Private Declare Function OpenClipboard Lib "user32" _
        (ByVal hWnd As Long) As Long
Private Declare Function GetClipboardData Lib "user32" _
        (ByVal wFormat As Long) As Long
Private Declare Function CloseClipboard Lib "user32" () As Long
Private Declare Function CopyImage Lib "user32" _
        (ByVal handle As Long, ByVal un1 As Long, ByVal n1 As Long, _
        ByVal n2 As Long, ByVal un2 As Long) As Long

Private Type GUID
    Data1 As Long
    Data2 As Integer
    Data3 As Integer
    Data4(7) As Byte
End Type
Private Type PicBmp
    Size As Long
    lType As Long
    hBmp As Long
    hPal As Long
End Type
Private Declare Function CopyEnhMetaFile Lib "gdi32" _
        Alias "CopyEnhMetaFileA" (ByVal hEnhMF As Long, _
        ByVal lpszFileName As String) As Long
Private Declare Function IIDFromString Lib "ole32" _
        (ByVal wszAppId As String, ByRef AppID As GUID) As Long
Private Declare Function OleCreatePictureIndirect Lib "olepro32" _
        (PicDesc As PicBmp, RefIID As GUID, _
        ByVal fPictureOwnsHandle As Long, IPic As IPicture) As Long

Public sOleCreatePicErr As String

Function OleCreatePictureFromClipboard(lClipboardFormat As Long) As IPicture
'lClipboardFormat is 2 for Bitmap (BMP) or 14 for EnhanceMetafile (WMF)
    Dim lFail As Long
    Dim Ret As Long
    sOleCreatePicErr = ""

    'Verif. if the clipboard has wished format
    Ret = IsClipboardFormatAvailable(lClipboardFormat)
    If Ret = 0 Then lFail = 1: GoTo FailHandler

    'Create an own copy from clipboard content to handle its image and palette
    Dim i As Long
    Do    'Loop was necessary in Virtual, because appear that Windows take some variable time to unlock the clipboard mainly from Insert Text in Office 2010
        MyWait 0.2
        i = i + 1
        Ret = OpenClipboard(0)
    Loop While Ret = 0 And i < 100
    If Ret = 0 Then lFail = 2: GoTo FailHandler

    Dim hCopy As Long
    If lClipboardFormat = 2 Then
        hCopy = CopyImage(GetClipboardData(lClipboardFormat), 0, 0, 0, &H4)
    Else
        hCopy = CopyEnhMetaFile(GetClipboardData(lClipboardFormat), vbNullString)
    End If
    CloseClipboard
    If hCopy = 0 Then lFail = 3: GoTo FailHandler

    'Create the picture object thru the OLE library
    'First create the Interface GUID
    Dim IID_IDispatch As GUID
    Const IPictureIID = "{7BF80981-BF32-101A-8BBB-00AA00300CAB}"
    Ret = IIDFromString(StrConv(IPictureIID, vbUnicode), IID_IDispatch)
    If Ret <> 0 Then lFail = 4: GoTo FailHandler

    Dim Pic As PicBmp
    With Pic
        .Size = Len(Pic)
        .lType = IIf(lClipboardFormat = 2, 1, 4)    'Bitmap = 1 / Metafile = 4
        .hBmp = hCopy
    End With
    Ret = OleCreatePictureIndirect(Pic, IID_IDispatch, 1, OleCreatePictureFromClipboard)
    If Ret <> 0 Then lFail = 5: GoTo FailHandler
    Exit Function
FailHandler:
    sOleCreatePicErr = lFail & " (" & Hex(Ret) & ")"
    Set OleCreatePictureFromClipboard = Nothing
End Function

Private Sub Test()
    Dim IPic As IPicture
    Dim lPicFormat As Long
    lPicFormat = xlBitmap    ' xlBitmap (Bitmap) or xlPicture (Metafile)
    appHostApp.ActiveWindow.ActiveSheet.Shapes(1).CopyPicture xlScreen, lPicFormat
    Set IPic = OleCreatePictureFromClipboard(IIf(lPicFormat = xlBitmap, 2, 14))


    If Not IPic Is Nothing Then
        If lPicFormat = xlBitmap Then
            Kill "c:\windows\desktop\xxx.bmp"
            SavePicture IPic, "c:\windows\desktop\teste.bmp"
        Else
            Kill "c:\windows\desktop\xxx.wmf"
            SavePicture IPic, "c:\windows\desktop\teste.wmf"
        End If
        Set IPic = Nothing
    End If
End Sub
Attribute VB_Name = "Mod3PicFileNames"
Option Explicit
Public Type tPicFileOrigNames
    sSheet As String    'Sheet name with workbook full name

    sLH As String    'Default Left Header picture
    sLHFIRST As String    'Firt page Left Header picture
    sLHEVEN As String    'Even pages Left Header picture

    sCH As String    'Default Center Header picture
    sCHFIRST As String    'Firt page Center Header picture
    sCHEVEN As String    'Even pages Center Header picture

    sRH As String    'Default Right Header picture
    sRHFIRST As String    'Firt page Right Header picture
    sRHEVEN As String    'Even pages Right Header picture


    sLF As String    'Default Left Footer picture
    sLFFIRST As String    'Firt page Left Footer picture
    sLFEVEN As String    'Even pages Left Footer picture

    sCF As String    'Default Center Footer picture
    sCFFIRST As String    'Firt page Center Footer picture
    sCFEVEN As String    'Even pages Center Footer picture

    sRF As String    'Default Right Footer picture
    sRFFIRST As String    'Firt page Right Footer picture
    sRFEVEN As String    'Even pages Right Footer picture
End Type
Public PicFileOrigNames As tPicFileOrigNames

Dim fso As Scripting.FileSystemObject      'Microsoft Scripting Runtime library ref
Const SHCONTF_FOLDERS = 32    '&H20    'Include items that are folders in the enumeration
Const SHCONTF_NONFOLDERS = 64    '&H40    'Include items that are not folders in the enumeration

Public StoreSettingsSh As Worksheet    'Melhor que usar argument nas func

Sub RestPicsToFiles()
    Dim PathTemp As Variant
    Dim sTempFileName As String
    Dim sSbDirHtm As String

    If dHostAppVer >= 11 + 1 Then RestPicsToFiles2007: Exit Sub    '2007 doesn't save Hd pictures setting in html

    'Verif if despite pic has fullname but the file is delete during the session. If not get title from file name removing path and extension
    VerfDespiteFullnameFileDel PicFileOrigNames.sLH    'If InStr(1, PicFileOrigNames.sLH, "\") > 0 And VBA.FileSystem.Dir(PicFileOrigNames.sLH) = "" Then PicFileOrigNames.sLH = Mid(PicFileOrigNames.sLH, InStrRev(PicFileOrigNames.sLH, "\") + 1, InStrRev(PicFileOrigNames.sLH, ".") - InStrRev(PicFileOrigNames.sLH, "\") - 1)
    VerfDespiteFullnameFileDel PicFileOrigNames.sCH
    VerfDespiteFullnameFileDel PicFileOrigNames.sRH
    VerfDespiteFullnameFileDel PicFileOrigNames.sLF
    VerfDespiteFullnameFileDel PicFileOrigNames.sCF
    VerfDespiteFullnameFileDel PicFileOrigNames.sRF

    appHostApp.ScreenUpdating = False
    On Error Resume Next  'xx n|fffd|o esquecer de abilitar antes de publicar
    StoreSettingsSh.Copy

    'Create a temp file name
    PathTemp = TempFolder()
    If Right(PathTemp, 1) = "\" Then PathTemp = Left(PathTemp, Len(PathTemp) - 1)
    sTempFileName = "OrlTxtWatMark" & VBA.Strings.Format(Now, "hhmmss") & "Mult"

    appHostApp.DisplayAlerts = False    'Maybe it isn't need but stay
    appHostApp.ActiveWorkbook.SaveAs PathTemp & "\" & sTempFileName & ".htm", xlHtml
    appHostApp.DisplayAlerts = True
    appHostApp.ActiveWorkbook.Close False

    'Look all pic paths in htm extracting <x:Print> node
    Dim hFile As Long
    Dim sLin As String
    Dim sNode As String
    Dim lStartPos As Long
    Dim bEnd As Boolean
    Dim sPicFileOrigName As String
    Dim sTempFileName1 As String
    Dim bIsMacrSh As Boolean    'xpms O htm de macro sheet 2003 |fffd| salvo diferente de worksheet padr|fffd|o
    bIsMacrSh = StoreSettingsSh.Type = xlExcel4MacroSheet Or StoreSettingsSh.Type = xlExcel4IntlMacroSheet

    hFile = FreeFile
    Open PathTemp & "\" & sTempFileName & IIf(bIsMacrSh, "_files\sheet001", "") & ".htm" For Input As #hFile
    Do While Not EOF(1)
        Line Input #hFile, sLin
        If lStartPos = 0 And InStr(1, sLin, "<x:Print>") > 0 Then
            sNode = sNode & sLin
            lStartPos = InStr(1, sLin, "<x:Print>")
            If InStr(lStartPos + 1, sLin, "</x:Print>") > 0 Then bEnd = True
        ElseIf lStartPos > 0 And Not bEnd And InStr(1, sLin, "</x:Print>") = 0 Then
            sNode = sNode & sLin
        ElseIf lStartPos > 0 And Not bEnd And InStr(1, sLin, "</x:Print>") > 0 Then
            sNode = sNode & sLin
            bEnd = True
        End If
        If bEnd Then Exit Do
    Loop
    Close #hFile

    Dim NodeAll, sNode1, i
    'Split Headers
    If InStr(1, sNode, "<x:HeaderPicture>") > 0 Then NodeAll = Split(sNode, "<x:HeaderPicture>")    'Else NodeAll = ""
    For Each sNode1 In NodeAll
        For i = 1 To 3    'Horiz pos
            If InStr(1, sNode1, "<x:Location>" & Choose(i, "Left", "Center", "Right") & "</x:Location>") > 0 And InStr(1, sNode1, "<x:Source>") > 0 And InStr(1, sNode1, "</x:Source>") > 0 And InStr(1, sNode1, "</x:HeaderPicture>") > 0 Then
                sPicFileOrigName = Mid(sNode1, InStr(1, sNode1, "<x:Source>") + Len("<x:Source>"), InStr(1, sNode1, "</x:Source>") - InStr(1, sNode1, "<x:Source>") - Len("<x:Source>"))
                If bIsMacrSh Then sPicFileOrigName = sTempFileName & "_files\" & sPicFileOrigName Else sPicFileOrigName = MyReplace(sPicFileOrigName, "/", "\")

                sTempFileName1 = Choose(i, PicFileOrigNames.sLH, PicFileOrigNames.sCH, PicFileOrigNames.sRH)
                If InStr(1, sTempFileName1, "\") = 0 Then  'If has path, preserv and jump to next
                    If InStr(1, sTempFileName1, "OrlTxtWatMark") > 0 Then sTempFileName1 = Mid(sTempFileName1, 1 + Len("OrlTxtWatMarkhhmmss"), 1000)  'Remove OrlTxtWatMark if pic insert before
                    Do
                        sTempFileName1 = "OrlTxtWatMark" & VBA.Strings.Format(Now, "hhmmss") & sTempFileName1
                        If VBA.FileSystem.Dir(PathTemp & "\" & sTempFileName1 & ".tmp") <> "" Then MyWait 0.5 Else Exit Do   'If file already exist, wait for the next second
                    Loop

                    If VBA.FileSystem.Dir(PathTemp & "\" & sPicFileOrigName) <> "" Then
                        FileCopy PathTemp & "\" & sPicFileOrigName, PathTemp & "\" & sTempFileName1 & ".tmp"
                        sSbDirHtm = Left(sPicFileOrigName, InStr(1, sPicFileOrigName, "\") - 1)
                        sPicFileOrigName = PathTemp & "\" & sTempFileName1 & ".tmp"
                    End If

                    If i = 1 Then PicFileOrigNames.sLH = sPicFileOrigName
                    If i = 2 Then PicFileOrigNames.sCH = sPicFileOrigName
                    If i = 3 Then PicFileOrigNames.sRH = sPicFileOrigName
                End If
            End If
        Next
    Next

    'Split Footers
    If InStr(1, sNode, "<x:FooterPicture>") > 0 Then NodeAll = Split(sNode, "<x:FooterPicture>")    'Else NodeAll = ""
    For Each sNode1 In NodeAll
        For i = 1 To 3    'Horiz pos
            If InStr(1, sNode1, "<x:Location>" & Choose(i, "Left", "Center", "Right") & "</x:Location>") > 0 And InStr(1, sNode1, "<x:Source>") > 0 And InStr(1, sNode1, "</x:Source>") > 0 And InStr(1, sNode1, "</x:FooterPicture>") > 0 Then
                sPicFileOrigName = Mid(sNode1, InStr(1, sNode1, "<x:Source>") + Len("<x:Source>"), InStr(1, sNode1, "</x:Source>") - InStr(1, sNode1, "<x:Source>") - Len("<x:Source>"))
                sPicFileOrigName = MyReplace(sPicFileOrigName, "/", "\")

                sTempFileName1 = Choose(i, PicFileOrigNames.sLF, PicFileOrigNames.sCF, PicFileOrigNames.sRF)
                If InStr(1, sTempFileName1, "\") = 0 Then  'If has path, preserv and jump to next
                    If InStr(1, sTempFileName1, "OrlTxtWatMark") > 0 Then sTempFileName1 = Mid(sTempFileName1, 1 + Len("OrlTxtWatMarkhhmmss"), 1000)  'Remove OrlTxtWatMark if pic insert before
                    Do
                        sTempFileName1 = "OrlTxtWatMark" & VBA.Strings.Format(Now, "hhmmss") & sTempFileName1
                        If VBA.FileSystem.Dir(PathTemp & "\" & sTempFileName1 & ".tmp") <> "" Then MyWait 0.5 Else Exit Do   'If file already exist, wait for the next second
                    Loop

                    If VBA.FileSystem.Dir(PathTemp & "\" & sPicFileOrigName) <> "" Then
                        FileCopy PathTemp & "\" & sPicFileOrigName, PathTemp & "\" & sTempFileName1 & ".tmp"
                        sSbDirHtm = Left(sPicFileOrigName, InStr(1, sPicFileOrigName, "\") - 1)
                        sPicFileOrigName = PathTemp & "\" & sTempFileName1 & ".tmp"
                    End If

                    If i = 1 Then PicFileOrigNames.sLF = sPicFileOrigName
                    If i = 2 Then PicFileOrigNames.sCF = sPicFileOrigName
                    If i = 3 Then PicFileOrigNames.sRF = sPicFileOrigName
                End If
            End If
        Next
    Next

    If VBA.FileSystem.Dir(PathTemp & "\" & sTempFileName & ".htm") <> "" Then    'This Dir() has also unlock function of sSbDirHtm due the Dir() done it before
        Kill PathTemp & "\" & sTempFileName & ".htm"
        If Len(sSbDirHtm) > 5 Then
            Kill PathTemp & "\" & sSbDirHtm & "\*.*"
            RmDir PathTemp & "\" & sSbDirHtm
        End If
    End If
    appHostApp.ScreenUpdating = True
End Sub

Private Sub VerfDespiteFullnameFileDel(ByRef sFileOrTitle As String)
    If InStr(1, sFileOrTitle, "\") > 0 And VBA.FileSystem.Dir(sFileOrTitle) = "" Then sFileOrTitle = Mid(sFileOrTitle, InStrRev(sFileOrTitle, "\") + 1, InStrRev(sFileOrTitle, ".") - InStrRev(sFileOrTitle, "\") - 1)
End Sub

Private Sub RestPicsToFiles2007()
'2007 doesn't save Header and footer pictures setting in html, instead save in xlsx and unzip it to look for pictures
    Dim PathTemp As Variant
    Dim sTempFileName As String

    'Verif if despite pic has fullname but the file is delete during the session. If not get title from file name removing path and extension
    VerfDespiteFullnameFileDel PicFileOrigNames.sLH    'If InStr(1, PicFileOrigNames.sLH, "\") > 0 And VBA.FileSystem.Dir(PicFileOrigNames.sLH) = "" Then PicFileOrigNames.sLH = Mid(PicFileOrigNames.sLH, InStrRev(PicFileOrigNames.sLH, "\") + 1, InStrRev(PicFileOrigNames.sLH, ".") - InStrRev(PicFileOrigNames.sLH, "\") - 1)
    VerfDespiteFullnameFileDel PicFileOrigNames.sCH
    VerfDespiteFullnameFileDel PicFileOrigNames.sRH
    VerfDespiteFullnameFileDel PicFileOrigNames.sLF
    VerfDespiteFullnameFileDel PicFileOrigNames.sCF
    VerfDespiteFullnameFileDel PicFileOrigNames.sRF

    VerfDespiteFullnameFileDel PicFileOrigNames.sLHFIRST
    VerfDespiteFullnameFileDel PicFileOrigNames.sCHFIRST
    VerfDespiteFullnameFileDel PicFileOrigNames.sRHFIRST
    VerfDespiteFullnameFileDel PicFileOrigNames.sLFFIRST
    VerfDespiteFullnameFileDel PicFileOrigNames.sCFFIRST
    VerfDespiteFullnameFileDel PicFileOrigNames.sRFFIRST

    VerfDespiteFullnameFileDel PicFileOrigNames.sLHEVEN
    VerfDespiteFullnameFileDel PicFileOrigNames.sCHEVEN
    VerfDespiteFullnameFileDel PicFileOrigNames.sRHEVEN
    VerfDespiteFullnameFileDel PicFileOrigNames.sLFEVEN
    VerfDespiteFullnameFileDel PicFileOrigNames.sCFEVEN
    VerfDespiteFullnameFileDel PicFileOrigNames.sRFEVEN

    appHostApp.ScreenUpdating = False
    On Error Resume Next  'xx n|fffd|o esquecer de abilitar antes de publicar
    StoreSettingsSh.Copy    '2007, Vista, and Design Mode (macro disabled) a silence lost happens here in xla

    'Create a temp file name
    PathTemp = TempFolder()
    If Right(PathTemp, 1) = "\" Then PathTemp = Left(PathTemp, Len(PathTemp) - 1)
    sTempFileName = "OrlTxtWatMark" & VBA.Strings.Format(Now, "hhmmss") & "Mult"

    appHostApp.DisplayAlerts = False    'By alert when saving in xlsx a sheet with VB code
    appHostApp.ActiveWorkbook.SaveAs PathTemp & "\" & sTempFileName & ".xlsx", 51    'xlOpenXMLWorkbook
    appHostApp.DisplayAlerts = True
    appHostApp.ActiveWorkbook.Close False

    'Treat xlsx as zip and copy (extract) file from this zip folder
    Dim sOrigZipPath
    Dim sDestTempPath
    Dim sItemFilter As String
    Dim lAttrib As Long
    Name PathTemp & "\" & sTempFileName & ".xlsx" As PathTemp & "\" & sTempFileName & ".zip"

    'Como a c|fffd|pia direto do zip usando Shell.Application n|fffd|o d|fffd| op|fffd||fffd|o para criticar data dos
    'arquivos a copiar e substituir e nenhum filtro em arquivos dentro de sub pastas. Vamos
    'primeiro copiar do zip para uma pasta temp podendo j|fffd| fazer um filtro grosso para o
    'filtro fino e ganhar tempo.

    sOrigZipPath = PathTemp & "\" & sTempFileName & ".zip"    '"T:\ComoMVP\MeuSite\Projetos\ExcelWatermark\ExcelWatermark_new.zip"
    sDestTempPath = MakeTempExtractZipFolder(sTempFileName): If sDestTempPath = False Then Stop
    sItemFilter = "xl": lAttrib = 32    'Todos os arquivos de um subfolder
    'sItemFilter = "A108.mda": lAttrib = 64    'Arquivo A108.mda exato no raiz do zip
    'sItemFilter = "": lAttrib = 0   'Todos os arquivos no raiz e em qualquer subfolder

    If Not CopyFromZipFolder(sOrigZipPath, sDestTempPath, sItemFilter, lAttrib) Then Stop

    'Look pic path in htm. Start extract the first <v:shape id="LH" node that is the left if it exists
    Dim hFile As Long
    Dim sLin As String
    Dim sNode As String
    Dim lStartPos As Long
    Dim bEnd As Boolean
    Dim sPicFileOrigName As String
    Dim sTempFileName1 As String
    Dim I1 As Long    'xpms

    'Get all pic from same unzip
    Dim i As Long
    Dim PictPosArr(17) As String
    PictPosArr(0) = "LH"
    PictPosArr(1) = "LHFIRST"
    PictPosArr(2) = "LHEVEN"

    PictPosArr(3) = "CH"
    PictPosArr(4) = "CHFIRST"
    PictPosArr(5) = "CHEVEN"

    PictPosArr(6) = "RH"
    PictPosArr(7) = "RHFIRST"
    PictPosArr(8) = "RHEVEN"


    PictPosArr(9) = "LF"
    PictPosArr(10) = "LFFIRST"
    PictPosArr(11) = "LFEVEN"

    PictPosArr(12) = "CF"
    PictPosArr(13) = "CFFIRST"
    PictPosArr(14) = "CFEVEN"

    PictPosArr(15) = "RF"
    PictPosArr(16) = "RFFIRST"
    PictPosArr(17) = "RFEVEN"

    For i = 0 To 17
        sLin = ""
        sNode = ""
        lStartPos = 0
        bEnd = False
        I1 = 0    'xpms

JumpToNext:
        Select Case i
        Case 0
            sTempFileName1 = PicFileOrigNames.sLH
        Case 1
            sTempFileName1 = PicFileOrigNames.sLHFIRST
        Case 2
            sTempFileName1 = PicFileOrigNames.sLHEVEN

        Case 3
            sTempFileName1 = PicFileOrigNames.sCH
        Case 4
            sTempFileName1 = PicFileOrigNames.sCHFIRST
        Case 5
            sTempFileName1 = PicFileOrigNames.sCHEVEN

        Case 6
            sTempFileName1 = PicFileOrigNames.sRH
        Case 7
            sTempFileName1 = PicFileOrigNames.sRHFIRST
        Case 8
            sTempFileName1 = PicFileOrigNames.sRHEVEN

        Case 9
            sTempFileName1 = PicFileOrigNames.sLF
        Case 10
            sTempFileName1 = PicFileOrigNames.sLFFIRST
        Case 11
            sTempFileName1 = PicFileOrigNames.sLFEVEN

        Case 12
            sTempFileName1 = PicFileOrigNames.sCF
        Case 13
            sTempFileName1 = PicFileOrigNames.sCFFIRST
        Case 14
            sTempFileName1 = PicFileOrigNames.sCFEVEN

        Case 15
            sTempFileName1 = PicFileOrigNames.sRF
        Case 16
            sTempFileName1 = PicFileOrigNames.sRFFIRST
        Case 17
            sTempFileName1 = PicFileOrigNames.sRFEVEN
        End Select
        If InStr(1, sTempFileName1, "\") > 0 Or sTempFileName1 = "" Then    'If has path, preserv and jump to next. 'xpms  Jump also, if hasn't title
            i = i + 1
            If i <= 17 Then GoTo JumpToNext Else Exit For
        End If
        If InStr(1, sTempFileName1, "OrlTxtWatMark") > 0 Then sTempFileName1 = Mid(sTempFileName1, 1 + Len("OrlTxtWatMarkhhmmss"), 1000)  'Remove OrlTxtWatMark if pic insert before
        sTempFileName1 = "OrlTxtWatMark" & VBA.Strings.Format(Now, "hhmmss") & sTempFileName1
        If VBA.FileSystem.Dir(PathTemp & "\" & sTempFileName1 & ".tmp") <> "" Then MyWait 0.5: GoTo JumpToNext    'If file already exist, wait for the next second

        Do    'xpms Loop de procura necess|fffd|rio, pois pode acontecer que dados sejam salvos em mais de um vmlDrawingN.vml
            I1 = I1 + 1
            If Dir(sDestTempPath & "\xl\drawings\vmlDrawing" & I1 & ".vml") <> "" Then
                hFile = FreeFile
                Open sDestTempPath & "\xl\drawings\vmlDrawing" & I1 & ".vml" For Input As #hFile
                Do While Not EOF(1)
                    Line Input #hFile, sLin
                    If lStartPos = 0 And InStr(1, sLin, "<v:shape id=""" & PictPosArr(i) & """") > 0 Then
                        sNode = sNode & sLin
                        lStartPos = InStr(1, sLin, "<v:shape id=""" & PictPosArr(i) & """")
                        If InStr(lStartPos + 1, sLin, "</v:shape>") > 0 Then bEnd = True
                    ElseIf lStartPos > 0 And Not bEnd And InStr(lStartPos + 1, sLin, "</v:shape>") = 0 Then
                        sNode = sNode & sLin
                    ElseIf lStartPos > 0 And Not bEnd And InStr(lStartPos + 1, sLin, "</v:shape>") > 0 Then
                        sNode = sNode & sLin
                        bEnd = True
                    End If
                    If bEnd Then Exit Do
                Loop
                Close #hFile
            End If
        Loop While sNode = "" And I1 < 20

        If InStr(1, sNode, "<v:imagedata o:relid=") > 0 Then
            sPicFileOrigName = Mid(sNode, InStr(1, sNode, "<v:imagedata o:relid=") + Len("<v:imagedata o:relid=") + 4, InStr(1, sNode, "o:title=") - InStr(1, sNode, "<v:imagedata o:relid=") - Len("<v:imagedata o:relid=") - 4 - 2)
            sPicFileOrigName = "xl\media\Image" & sPicFileOrigName
            sPicFileOrigName = VBA.FileSystem.Dir(sDestTempPath & "\" & sPicFileOrigName & ".*")
            If sPicFileOrigName <> "" Then
                FileCopy sDestTempPath & "\xl\media\" & sPicFileOrigName, PathTemp & "\" & sTempFileName1 & ".tmp"
                sPicFileOrigName = PathTemp & "\" & sTempFileName1 & ".tmp"
            End If
        End If
        Select Case i
        Case 0
            PicFileOrigNames.sLH = sPicFileOrigName
        Case 1
            PicFileOrigNames.sLHFIRST = sPicFileOrigName
        Case 2
            PicFileOrigNames.sLHEVEN = sPicFileOrigName

        Case 3
            PicFileOrigNames.sCH = sPicFileOrigName
        Case 4
            PicFileOrigNames.sCHFIRST = sPicFileOrigName
        Case 5
            PicFileOrigNames.sCHEVEN = sPicFileOrigName

        Case 6
            PicFileOrigNames.sRH = sPicFileOrigName
        Case 7
            PicFileOrigNames.sRHFIRST = sPicFileOrigName
        Case 8
            PicFileOrigNames.sRHEVEN = sPicFileOrigName

        Case 9
            PicFileOrigNames.sLF = sPicFileOrigName
        Case 10
            PicFileOrigNames.sLFFIRST = sPicFileOrigName
        Case 11
            PicFileOrigNames.sLFEVEN = sPicFileOrigName

        Case 12
            PicFileOrigNames.sCF = sPicFileOrigName
        Case 13
            PicFileOrigNames.sCFFIRST = sPicFileOrigName
        Case 14
            PicFileOrigNames.sCFEVEN = sPicFileOrigName

        Case 15
            PicFileOrigNames.sRF = sPicFileOrigName
        Case 16
            PicFileOrigNames.sRFFIRST = sPicFileOrigName
        Case 17
            PicFileOrigNames.sRFEVEN = sPicFileOrigName
        End Select
    Next

    If VBA.FileSystem.Dir(sOrigZipPath) <> "" Then    'This Dir() has also unlock function of sTempFileName folder due the Dir() done in it before
        DelUnzipSubFld sTempFileName
        Kill sOrigZipPath
    End If

    appHostApp.ScreenUpdating = True
End Sub

Private Function CopyFromZipFolder(sOrigZipPath As Variant, sDestPath As Variant, _
        Optional sItemFilter As String, Optional lAttrib As Long) As Boolean
'O objeto Shell.Application s|fffd| copia arquivos no raiz ou subfolder inteiros (itens) ent|fffd|o o sItemFilter
'pode ser o nome exato do subfolder, se copiando s|fffd| subfolder, ou do arquivo no raiz incluindo
'a extens|fffd|o, ou ainda, se iniciado por *, o final do arquivo no raiz incluindo a extens|fffd|o, se
'copiando s|fffd| arquivos.
    Dim ShlApp
    Dim DestFolder As Scripting.Folder
    Dim OrigItems
    Dim lDest As Long
    Dim lOrig As Long
    Dim lWaitMax As Long
    Dim lAdding As Long
    Dim lAddingAnt As Long

    On Error GoTo ErrorHandler
    If VBA.FileSystem.Dir(sOrigZipPath) = "" Then Stop
    If VBA.FileSystem.Dir(sDestPath, vbDirectory) = "" Then Stop

    'appHostApp.StatusBar = "Copiando a partir do zip " & sItemFilter & "..."

    Set ShlApp = CreateObject("Shell.Application")
    lDest = ShlApp.Namespace(sDestPath).items.Count

    'Primeiro copia from zipfolder para uma pasta temp com filtro poss|fffd|vel de atributos e m|fffd|scara para item
    Set OrigItems = ShlApp.Namespace(sOrigZipPath).items    'Se sOrigZipPath e sDestPath n|fffd|o forem Variant d|fffd| erro

    'Filter by attribute or file and folder mask. When copying from a zip folder, there isn't any option to avoid progress bar like from normal folder. It's a shame because CopyHere method can be cancelled by user.
    Dim i
    Select Case lAttrib
    Case SHCONTF_FOLDERS    '32 para copiar s|fffd| SubFolders
        'OrigItems.Filter SHCONTF_FOLDERS, sItemFilter N|fffd|o funciona from zipfolder
        For Each i In OrigItems
            If i.isfolder And LCase(i.Name) = LCase(sItemFilter) Then
                lOrig = 1
                ShlApp.Namespace(sDestPath).CopyHere i    ', 4 nao atende as op|fffd||fffd|es, parece bug
                sItemFilter = "": Exit For    'Sempre copia apenas 1 subfolder e a mascara n|fffd|o serve como mascara de arquivo
            End If
        Next

    Case SHCONTF_NONFOLDERS    '64 para copiar s|fffd| arquivos, ignora SubFolders
        'OrigItems.Filter SHCONTF_NONFOLDERS, sItemFilter N|fffd|o funciona from zipfolder
        For Each i In OrigItems
            If Not i.isfolder Then
                If sItemFilter = "" _
                        Or (Left(sItemFilter, 1) = "*" And LCase(Right(sItemFilter, Len(sItemFilter) - 1)) = LCase(Right(i.Name, Len(sItemFilter) - 1))) _
                        Or (Left(sItemFilter, 1) <> "*" And LCase(sItemFilter) = LCase(Right(i.Name, Len(sItemFilter)))) Then
                    lOrig = lOrig + 1
                    ShlApp.Namespace(sDestPath).CopyHere i    ', 4 nao atende as op|fffd||fffd|es, parece bug
                End If
            End If
        Next

    Case Else    'Sem atributo definido
        'Copiar todos os arquivos e subfolders
        lOrig = OrigItems.Count
        ShlApp.Namespace(sDestPath).CopyHere OrigItems    ', 4 nao atende as op|fffd||fffd|es, parece bug
    End Select

    'Wait and confer extrat itens
    appHostApp.Interactive = False
    Do
        MyWait 1
        'lAdding = ShlApp.NameSpace(sDestPath.Path).items.Count    'Esse falha porque n|fffd|o est|fffd| contando os ocultos. |fffd| melhor usar fso
        If fso Is Nothing Then Set fso = CreateObject("Scripting.FileSystemObject")
        Set DestFolder = fso.GetFolder(sDestPath)
        lAdding = DestFolder.SubFolders.Count + DestFolder.Files.Count
        If lAdding = lAddingAnt Then lWaitMax = lWaitMax + 1 Else lWaitMax = 0
        lAddingAnt = lAdding
    Loop While lAdding < lDest + lOrig And lWaitMax < 60
    appHostApp.Interactive = True

ErrorHandler:
    If Err.Number <> 0 Then MsgBox "Erro " & Err.Number & " (" & Err.Description & ")", vbCritical, "Falha no Procedimento CopyFromZipFolder!"
    CopyFromZipFolder = Err.Number = 0 And lWaitMax < 60
    Set OrigItems = Nothing
    Set ShlApp = Nothing
    Set DestFolder = Nothing
    '    appHostApp.StatusBar = " ": appHostApp.StatusBar = False    'No 2007 false n|fffd|o atualiza de imediato
End Function

Private Function MakeTempExtractZipFolder(sTempExtractZipFolder As String)
'Create a new subfolder, deleting if exists, to copy files from the unzip
    Dim DirTemp As Scripting.Folder
    Dim TempExtractZipFolder As Scripting.Folder
    On Error GoTo ErrorHandler
    If fso Is Nothing Then Set fso = CreateObject("Scripting.FileSystemObject")
    Set DirTemp = fso.GetSpecialFolder(TemporaryFolder)

    On Error Resume Next    'Se listar para restaura|fffd||fffd|o, cancelar e restaurar normal n|fffd|o conseque deletar TempExtractZipFolder mas deixa limpa. Ent|fffd|o ok ignorar erro e continuar
    If fso.FolderExists(DirTemp.Path & "\" & sTempExtractZipFolder) Then DirTemp.SubFolders(sTempExtractZipFolder).Delete
    MyWait 0.2

    On Error GoTo ErrorHandler
    If fso.FolderExists(DirTemp.Path & "\" & sTempExtractZipFolder) Then
        Set TempExtractZipFolder = DirTemp.SubFolders(sTempExtractZipFolder)
    Else
        Set TempExtractZipFolder = DirTemp.SubFolders.Add(sTempExtractZipFolder)
    End If

    MakeTempExtractZipFolder = TempExtractZipFolder.Path
ErrorHandler:
    If Err.Number <> 0 Then MakeTempExtractZipFolder = False
    Set DirTemp = Nothing
    Set TempExtractZipFolder = Nothing
End Function

Private Function DelUnzipSubFld(sSbFldName As String) As Boolean
'Beyond subfolder temp to copy the files from unzip done by "Shell.Application", hidden subfolders
'are created in "temp" that aren't automatically deleted by the system in Windows XP. This deletes
'any subfolder containing the string sSbFldName
    Dim DirTemp As Scripting.Folder
    Dim sbf As Scripting.Folder
    Dim fc    'File or folder collection

    On Error Resume Next
    If fso Is Nothing Then Set fso = CreateObject("Scripting.FileSystemObject")
    Set DirTemp = fso.GetSpecialFolder(TemporaryFolder)
    Set fc = DirTemp.SubFolders
    For Each sbf In fc
        If InStr(1, UCase(sbf.Name), UCase(sSbFldName)) > 0 Then sbf.Delete True
    Next
    Set fc = Nothing
End Function

Sub UpdatePicFileOrigNames()
'If StoreSettingsSh change, update picture file names or titles if paths are lost
    With StoreSettingsSh.PageSetup
        PicFileOrigNames.sSheet = StoreSettingsSh.Name & " - " & StoreSettingsSh.Parent.FullName

        PicFileOrigNames.sLH = ""
        PicFileOrigNames.sLHFIRST = ""
        PicFileOrigNames.sLHEVEN = ""

        PicFileOrigNames.sCH = ""
        PicFileOrigNames.sCHFIRST = ""
        PicFileOrigNames.sCHEVEN = ""

        PicFileOrigNames.sRH = ""
        PicFileOrigNames.sRHFIRST = ""
        PicFileOrigNames.sRHEVEN = ""

        PicFileOrigNames.sLF = ""
        PicFileOrigNames.sLFFIRST = ""
        PicFileOrigNames.sLFEVEN = ""

        PicFileOrigNames.sCF = ""
        PicFileOrigNames.sCFFIRST = ""
        PicFileOrigNames.sCFEVEN = ""

        PicFileOrigNames.sRF = ""
        PicFileOrigNames.sRFFIRST = ""
        PicFileOrigNames.sRFEVEN = ""


        If InStr(1, .LeftHeader, "&G") > 0 Then PicFileOrigNames.sLH = .LeftHeaderPicture.Filename
        If dHostAppVer >= 11 + 1 Then
            If InStr(1, .FirstPage.LeftHeader.Text, "&G") > 0 Then PicFileOrigNames.sLHFIRST = .FirstPage.LeftHeader.Picture.Filename
            If InStr(1, .EvenPage.LeftHeader.Text, "&G") > 0 Then PicFileOrigNames.sLHEVEN = .EvenPage.LeftHeader.Picture.Filename
        End If

        If InStr(1, .CenterHeader, "&G") > 0 Then PicFileOrigNames.sCH = .CenterHeaderPicture.Filename
        If dHostAppVer >= 11 + 1 Then
            If InStr(1, .FirstPage.CenterHeader.Text, "&G") > 0 Then PicFileOrigNames.sCHFIRST = .FirstPage.CenterHeader.Picture.Filename
            If InStr(1, .EvenPage.CenterHeader.Text, "&G") > 0 Then PicFileOrigNames.sCHEVEN = .EvenPage.CenterHeader.Picture.Filename
        End If

        If InStr(1, .RightHeader, "&G") > 0 Then PicFileOrigNames.sRH = .RightHeaderPicture.Filename
        If dHostAppVer >= 11 + 1 Then
            If InStr(1, .FirstPage.RightHeader.Text, "&G") > 0 Then PicFileOrigNames.sRHFIRST = .FirstPage.RightHeader.Picture.Filename
            If InStr(1, .EvenPage.RightHeader.Text, "&G") > 0 Then PicFileOrigNames.sRHEVEN = .EvenPage.RightHeader.Picture.Filename
        End If

        If InStr(1, .LeftFooter, "&G") > 0 Then PicFileOrigNames.sLF = .LeftFooterPicture.Filename
        If dHostAppVer >= 11 + 1 Then
            If InStr(1, .FirstPage.LeftFooter.Text, "&G") > 0 Then PicFileOrigNames.sLFFIRST = .FirstPage.LeftFooter.Picture.Filename
            If InStr(1, .EvenPage.LeftFooter.Text, "&G") > 0 Then PicFileOrigNames.sLFEVEN = .EvenPage.LeftFooter.Picture.Filename
        End If

        If InStr(1, .CenterFooter, "&G") > 0 Then PicFileOrigNames.sCF = .CenterFooterPicture.Filename
        If dHostAppVer >= 11 + 1 Then
            If InStr(1, .FirstPage.CenterFooter.Text, "&G") > 0 Then PicFileOrigNames.sCFFIRST = .FirstPage.CenterFooter.Picture.Filename
            If InStr(1, .EvenPage.CenterFooter.Text, "&G") > 0 Then PicFileOrigNames.sCFEVEN = .EvenPage.CenterFooter.Picture.Filename
        End If

        If InStr(1, .RightFooter, "&G") > 0 Then PicFileOrigNames.sRF = .RightFooterPicture.Filename
        If dHostAppVer >= 11 + 1 Then
            If InStr(1, .FirstPage.RightFooter.Text, "&G") > 0 Then PicFileOrigNames.sRFFIRST = .FirstPage.RightFooter.Picture.Filename
            If InStr(1, .EvenPage.RightFooter.Text, "&G") > 0 Then PicFileOrigNames.sRFEVEN = .EvenPage.RightFooter.Picture.Filename
        End If
    End With
End Sub

Function GetIPictWmfConv(sPicFileName As String) As Object
'Insert Picture in Sheet accepts more format than VBA userform then insert, copy to clipboard, get
'iPict there converting to wmf. Differently of ClipbIpicTempFile this return iPicture not file name.
    Dim TempWb As Workbook
    Dim Shp    'As Shape

    appHostApp.ScreenUpdating = False
    Set TempWb = appHostApp.Workbooks.Add(1)
    Set Shp = TempWb.Sheets(1).Pictures.Insert(sPicFileName)

    'Get iPic bitmap or metalfile from Shp
    Dim lPicFormat As Long
    Dim IPic As IPictureDisp

    lPicFormat = xlPicture    ' xlBitmap (Bitmap) or xlPicture (Metafile)
    Shp.CopyPicture xlScreen, lPicFormat    'Copy the picture with specified format to clipboard
    'MyWait 0.2    'Foi neces. no virtual, mas parece que n|fffd|o. O problema era com o OpenClipboard em OleCreatePictureFromClipboard
    If Not bTestOtherIPicCode Then
        Set IPic = OleCreatePictureFromClipboard(IIf(lPicFormat = xlBitmap, 2, 14))    'Retrieve the picture from clipboard
    Else
        MsgBox "Testing other approach for IPic"
        sOleCreatePicErr = ""
        'Set IPic = PastePicture(lPicFormat) 'Carregar o m|fffd|dulo modPastePicture.bas
    End If
    If sOleCreatePicErr = "" Then
        On Error Resume Next
        Set GetIPictWmfConv = IPic
        If Err.Number <> 0 Then
            'MyMsgBox Err.Description, 1, IIf(IsPortg, "Falha!", "Fail!")    'Return nothing in silence is better
            Set GetIPictWmfConv = Nothing
        End If
    Else
        'MyMsgBox IIf(IsPortg, "Ao obter iPicture. Erro N|fffd|: ", "When getting iPicture. Error N|fffd|: ") & sOleCreatePicErr & "!", 1, IIf(IsPortg, "Falha!", "Fail!")
        Set GetIPictWmfConv = Nothing
    End If
    Set IPic = Nothing
    TempWb.Close False
    appHostApp.ScreenUpdating = True
End Function



Attribute VB_Name = "Mod4GetRegValue"
Option Explicit

Public Const vStr As Long = 255
Public Const REG_BINARY = 3&
Public Const REG_DWORD = 4&
Declare Function RegOpenKey Lib "advapi32.dll" Alias "RegOpenKeyA" _
        (ByVal hKey As Long, ByVal lpSubKey As String, _
        phkResult As Long) As Long
Declare Function RegQueryValueEx Lib "advapi32.dll" Alias "RegQueryValueExA" _
        (ByVal hKey As Long, _
        ByVal lpValueName As String, _
        ByVal lpReserved As Long, _
        ByRef lpType As Long, _
        ByVal lpData As String, _
        ByRef lpcbData As Long) As Long  ' Note that if you declare the lpData _
                                         'parameter as String, you must pass it By Value.
Declare Function RegCloseKey Lib "advapi32.dll" (ByVal hKey As Long) As Long
Public Const HKEY_CLASSES_ROOT = &H80000000
Public Const HKEY_CURRENT_USER = &H80000001
Public Const HKEY_LOCAL_MACHINE = &H80000002

Private Declare Function RegDeleteKey Lib "advapi32.dll" _
        Alias "RegDeleteKeyA" _
        (ByVal hKey As Long, _
        ByVal lpSubKey As String) As Long

Private Declare Function RegDeleteValue Lib "advapi32.dll" _
        Alias "RegDeleteValueA" _
        (ByVal hKey As Long, _
        ByVal lpValueName As String) As Long



'Get Registry Value, Arguments:
'1 - Reg Key (Ex.: HKEY_LOCAL_MACHINE),
'2 - Reg SubKey (Ex.: "Software\Microsoft\Windows\CurrentVersion"),
'3 - Name of Value (Ex.:"ProgramFilesDir" or "" for default)
Function GetRegValue(Key As Long, SubKey As String, ValueName As String) As String
    Dim RetStr As String * vStr   'Fixed-length strings
    Dim fctRet As Long
    Dim OpenKeyHdl As Long
    Dim vType As Long
    Dim vLen As Long
    Dim i As Integer

    GetRegValue = "Error"
    vLen = vStr
    fctRet = RegOpenKey(Key, SubKey, OpenKeyHdl)
    If fctRet <> 0 Then Exit Function

    fctRet = RegQueryValueEx(OpenKeyHdl, ValueName, 0&, vType, RetStr, vLen)
    RegCloseKey OpenKeyHdl
    If fctRet <> 0 Then Exit Function

    If vType = REG_BINARY Then
        GetRegValue = ""
        For i = 1 To vLen
            GetRegValue = GetRegValue _
                    & IIf(Len(Hex(Asc(Mid(RetStr, i, 1)))) = 1, "0", "") _
                    & Hex(Asc(Mid(RetStr, i, 1))) & " "
        Next
        Exit Function
    End If

    If vType = REG_DWORD Then
        GetRegValue = "0x"
        For i = 4 To 1 Step -1
            GetRegValue = GetRegValue _
                    & IIf(Len(Hex(Asc(Mid(RetStr, i, 1)))) = 1, "0", "") _
                    & Hex(Asc(Mid(RetStr, i, 1)))
        Next
        Exit Function
    End If

    GetRegValue = Left(RetStr, vLen - 1)
End Function

Private Sub TestGet()
'Teste 1 Outlook Journal
    MsgBox GetRegValue(HKEY_CURRENT_USER, "Software\Microsoft\Shared Tools\Outlook\Journaling\Microsoft Excel", "Enabled")
    'Teste 2 Calendar
    MsgBox GetRegValue(HKEY_CLASSES_ROOT, "MSCAL.Calendar", "")
    'Teste 2 Resolu|fffd||fffd|o do v|fffd|deo
    MsgBox Application.WorksheetFunction.Clean(GetRegValue(HKEY_LOCAL_MACHINE, "Config\0001\Display\Settings", "Resolution"))
    'Teste 3 Pastas padr|fffd|es
    MsgBox GetRegValue(HKEY_CURRENT_USER, "Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders", "Desktop")
    MsgBox GetRegValue(HKEY_CURRENT_USER, "Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders", "Programs")
    MsgBox GetRegValue(HKEY_LOCAL_MACHINE, "Software\Microsoft\Windows\CurrentVersion", "ProgramFilesDir")
    MsgBox GetRegValue(HKEY_LOCAL_MACHINE, "Software\Microsoft\Windows\CurrentVersion", "ProgramFilesPath")
End Sub

Sub DeleteKey(Key As Long, SubKey As String)
    Call RegDeleteKey(Key, SubKey)
End Sub

Sub DeleteKeyValue(Key As Long, SubKey As String, ValueName As String)
    Dim OpenKeyHdl As Long
    Dim fctRet As Long
    fctRet = RegOpenKey(Key, SubKey, OpenKeyHdl)
    If fctRet <> 0 Then Exit Sub
    Call RegDeleteValue(OpenKeyHdl, ValueName)
    RegCloseKey OpenKeyHdl
End Sub

Attribute VB_Name = "ModMyMsgBox"
Option Explicit
Public Const LOCALE_USER_DEFAULT& = &H400
Public Const LOCALE_SENGLANGUAGE = &H1001                  'English name of language
Public Const LOCALE_SLANGUAGE = &H2                        'localized name of language
Public Const LOCALE_SLIST = &HC                            '  list item separator
Public Const LOCALE_SDECIMAL = &HE                         '  decimal separator
Public Const LOCALE_STHOUSAND = &HF                        '  thousand separator
Public Const LOCALE_ICOUNTRY = &H5                         '  country code
Private Declare Function apiGetLocaleInfo Lib "kernel32" _
        Alias "GetLocaleInfoA" (ByVal Locale As Long, _
        ByVal LCType As Long, ByVal lpLCData As String, _
        ByVal cchData As Long) As Long
Private Declare Function GetVersion Lib "kernel32" () As Long
Declare Function WNetGetUser Lib "mpr.dll" _
        Alias "WNetGetUserA" (ByVal lpName As String, _
        ByVal lpUserName As String, lpnLength As Long) As Long

Private Declare Function ShellExecute Lib "shell32.dll" _
        Alias "ShellExecuteA" (ByVal hWnd As Long, ByVal lpOperation As String, _
        ByVal lpFile As String, ByVal lpParameters As String, ByVal lpDirectory As String, _
        ByVal nShowCmd As Long) As Long
Private Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)
Public BotAcionado As Integer
Public IsPortg As Boolean
Public Msg1 As String
Public Msg2 As String

Public Function MyMsgBox(sPrompt As String, lBut As Long, sTitle As String, Optional Xpos As Long, Optional Ypos As Long)
    With FormMyMsgBox
        .Caption = sTitle
        .Alert_Tb = sPrompt
        .lBut = lBut
        .Email_Lb.Caption = IIf(IsPortg, "E-mail", "Email")
        .Email_Lb.ControlTipText = "orlando@cpap.com.br"
        .EmailSubj = IIf(IsPortg, "Informa|fffd||fffd|es sobre o ", "Information about ") & sAddInNameByApp & IIf(bIsCOMAddin, " (COM add-in)", " (Add-in)")
        .HomePage_Lb.Caption = IIf(IsPortg, "Ajuda", "Help")
        .HomePage_Lb.ControlTipText = "http://cpap.com.br/orlando/"
        .HomePageUrl = "http://cpap.com.br/orlando/" & sAddInNameByApp & IIf(IsPortg, "Mais.asp?IdC=Ajuda", "More.asp?IdC=Help")
        .Xpos = Xpos * Twips    'Twips usa-se em COM Add-in, essa a |fffd|nica diferen|fffd|a, pois as dimens|fffd|es do formul|fffd|rio |fffd| em twip, mas as posi|fffd||fffd|es dos controles continuma em pontos
        .Ypos = Ypos * Twips
        .Show 1   '|fffd| preciso usar em COM add-in
    End With
    Unload FormMyMsgBox
    MyMsgBox = BotAcionado
End Function

Sub MyWait(PauseSeg As Double)
    Dim Start
    Start = Timer
    Do While Timer < Start + PauseSeg
        DoEvents
        Sleep 1    'Com isso o CPU Usage cai de 100% para seus 0 ou 2% normal
    Loop
End Sub

Function gLocInfo(vType As Long) As String
    Dim vStr As String, vLng As Long
    Dim Ret As Long
    vStr = String$(255, 0)
    vLng = 255 - 1
    Ret = apiGetLocaleInfo(LOCALE_USER_DEFAULT, vType, vStr, vLng)
    If Ret <> 0 Then
        gLocInfo = Left$(vStr, Ret - 1)
    End If
End Function

Function SendEMailByURL(oCtrl As Object, EmailUrl As String, Subj As String, Msg As String, bCtrlError As Boolean) As Boolean
    Dim URL As String
    Dim Ret As Long

    If Not oCtrl Is Nothing Then
        If oCtrl.MousePointer = fmMousePointerHourGlass Then Exit Function
        oCtrl.MousePointer = fmMousePointerHourGlass
        oCtrl.ForeColor = &H80FF&
        DoEvents
    End If

    If Subj <> "" Then                                     'Indica para montar uma URL para email
        If appHostApp.Name = "Microsoft Excel" Or appHostApp.Name = "Microsoft Word" Then _
                appHostApp.StatusBar = IIf(IsPortg, "Preparando E-mail. Aguarde...", "Preparing Email. Wait...")

        '& in Hex
        Subj = MyReplace(Subj, "&", "%26")
        Msg = MyReplace(Msg, "&", "%26")

        'Spaces in Hex
        Subj = MyReplace(Subj, " ", "%20")
        Msg = MyReplace(Msg, " ", "%20")

        'CRLF in Hex
        Msg = MyReplace(Msg, vbCrLf, "%0D%0A")

        URL = "mailto:" & EmailUrl & "?subject=" & Subj & "&body=" & Msg

        'Launch Start command with URL (Falha no Win2000)
        'Ret = Shell(Left("Start " & URL, 460), vbHide)
    Else
        URL = EmailUrl
    End If

    If Not bCtrlError And InStr(1, URL, "#") = 0 Then
        'A vantagem do ShellExecute |fffd| que no m|fffd|todo FollowHyperlink a lingua do Navegador n|fffd|o |fffd| enviada
        'e tem que ter documento aberto. Vou usar FollowHyperlink s|fffd| quando precisar controlar erro e
        'se houver bookmark
        ShellExecute 0&, vbNullString, Left(URL, 457), vbNullString, vbNullString, vbNormalFocus
    Else
        Dim sBookmark As String
        If InStr(1, URL, "#") = 0 Then
            sBookmark = ""
        Else
            sBookmark = Mid(URL, InStr(1, URL, "#"))
            URL = Left(URL, InStr(1, URL, "#") - 1)
        End If

        On Error Resume Next
        Select Case appHostApp.Name
        Case "Microsoft Excel"
            If appHostApp.ActiveWorkbook Is Nothing Then appHostApp.Workbooks.Add
            appHostApp.ActiveWorkbook.FollowHyperlink Left(URL, 457), sBookmark, True       'DifAppMet
        Case "Microsoft Word"
            If appHostApp.ActiveDocument Is Nothing Then appHostApp.Documents.Add
            appHostApp.ActiveDocument.FollowHyperlink Left(URL, 457), sBookmark, True
        Case "Microsoft PowerPoint"
            If appHostApp.ActivePresentation Is Nothing Then appHostApp.Presentations.Add
            appHostApp.ActivePresentation.FollowHyperlink Left(URL, 457), sBookmark, True
        Case "Microsoft Access"
            appHostApp.FollowHyperlink Left(URL, 457), sBookmark, True
        End Select
    End If
    If Err.Number = 0 Then MyWait 10
    If Subj <> "" And (appHostApp.Name = "Microsoft Excel" Or appHostApp.Name = "Microsoft Word") Then _
            appHostApp.StatusBar = False

    If Err.Number <> 0 Then MsgBox Err.Description
    If Not oCtrl Is Nothing Then oCtrl.MousePointer = fmMousePointerCustom
    SendEMailByURL = Err.Number = 0
    Err.Clear
End Function

Function MyReplace(vText As String, vTxtFind As String, vTxtRep As String)
'Word 6.0 VBA doesn't have Replace function
    Dim lPos As Long
    lPos = 1 - Len(vTxtRep)
vStart:
    lPos = InStr(lPos + Len(vTxtRep), vText, vTxtFind)
    If lPos = 0 Or vTxtFind = "" Then
        MyReplace = vText
        Exit Function
    End If
    vText = Left(vText, lPos - 1) & vTxtRep & Right(vText, Len(vText) - lPos - Len(vTxtFind) + 1)
    GoTo vStart
End Function

Function MySplit(ByVal sString As String, Optional sDelim As String, Optional lLimit As Long = -1, Optional bCompare As Long = 0) As Variant
'Excel 97 and Word6 haven't Split function
    Dim sSplitArr() As String
    Dim lPos As Long
    Dim i As Long
    Dim r As Long

    If sString = "" Or lLimit = 0 Then
        MySplit = Array()
        Exit Function
    End If

    If sDelim = "" Then
        ReDim Preserve sSplitArr(i)
        sSplitArr(i) = sString
    Else
        lPos = InStr(1, sString, sDelim, bCompare)
        If lPos = 0 Then
            ReDim Preserve sSplitArr(i)
            sSplitArr(i) = sString
        Else
            r = 2
            Do
                ReDim Preserve sSplitArr(i)
                If r > 1 Then
                    sSplitArr(i) = Left(sString, lPos - 1)
                    sString = Mid(sString, lPos + Len(sDelim))
                Else
                    sSplitArr(i) = sString
                    sString = ""
                End If
                lPos = InStr(1, sString, sDelim, bCompare)
                r = r - 1 - 1 * (lPos > 0)
                If lLimit <> -1 And i = lLimit - 1 Then
                    sSplitArr(i) = sSplitArr(i) & IIf(r > 0, sDelim & sString, "")
                    Exit Do
                End If
                i = i + 1
            Loop While r > 0
        End If
    End If
    MySplit = sSplitArr
End Function

Function EmlMsg() As String
    Dim WinVer As String
    Dim AppVer As String
    EmlMsg = ""
    EmlMsg = EmlMsg & IIf(IsPortg, "Prezado", "Dear") & " Orlando,"
    EmlMsg = EmlMsg & vbCrLf & vbCrLf
    EmlMsg = EmlMsg & IIf(IsPortg, "Gostaria...", "I would like...")
    EmlMsg = EmlMsg & vbCrLf & vbCrLf & vbCrLf & vbCrLf
    EmlMsg = EmlMsg & IIf(IsPortg, "Atenciosamente,", "Regards,") & vbCrLf & vbCrLf & vbCrLf

    EmlMsg = EmlMsg & "___" & vbCrLf
    EmlMsg = EmlMsg & GetWinUserName & vbCrLf              'O acc e pp n|fffd|o tem appHostApp.UserName e Win user me parece mais

    Select Case appHostApp.Name
    Case "Microsoft Excel"
        WinVer = appHostApp.OperatingSystem & " " & gLocInfo(LOCALE_SLANGUAGE)    'DifAppMet
    Case "Microsoft Word"
        WinVer = appHostApp.System.OperatingSystem & " " & gLocInfo(LOCALE_SLANGUAGE)
    Case "Microsoft PowerPoint"
        WinVer = appHostApp.OperatingSystem & " " & gLocInfo(LOCALE_SLANGUAGE)
    Case "Microsoft Access"
        WinVer = GetOperatingSystem & " " & gLocInfo(LOCALE_SLANGUAGE)
    End Select

    AppVer = gLocInfo(LOCALE_ICOUNTRY)
    AppVer = IIf(AppVer = 1, "English", IIf(AppVer = 55, "Portugu|fffd|s", "Language " & AppVer))
    AppVer = appHostApp.Name & " " & dHostAppVer & " (" & AppVer & ")"
    EmlMsg = EmlMsg & WinVer & vbCrLf
    EmlMsg = EmlMsg & AppVer & vbCrLf
End Function

Public Function GetOperatingSystem() As String
    Dim Ver As Long, WinVer As Long
    Ver = GetVersion()
    WinVer = Ver And &HFFFF&
    'retrieve the windows version
    GetOperatingSystem = "Windows " & Format((WinVer Mod 256) + ((WinVer \ 256) / 100), "Fixed")
End Function

Function GetWinUserName() As String
    Dim vStr As String, Ret As Long, lpName As String
    vStr = String$(255, 0)
    Ret = WNetGetUser(lpName, vStr, 255)
    If Ret = 0 Then GetWinUserName = Left$(vStr, InStr(vStr, Chr(0)) - 1)
End Function

Sub ActWbWinAppSDIBaseForm(Form_hWnd1 As Long)     'Necess|fffd|rio no Excel 15 sempre que ativar um Wb by code com form Modal.
    If dHostAppVer >= 11 + 1 + 2 + 1 And Form_hWnd1 <> 0 Then  'Basear o form na janela ativa do Excel.
        App_hWnd = appHostApp.hWnd    'Always get because in Excel 15 SDI each wb has its window with different handle.
        SetWindowLongA Form_hWnd1, GWL_HWNDPARENT, App_hWnd
        SetForegroundWindow Form_hWnd1
    End If
End Sub

Sub SetForegroundWindowEsp(lhWnd As Long, PauseSeg As Double)
'No Vista e Win7, se vier de um runas com pedido de eleva|fffd||fffd|o de direitos, h|fffd| perda do foco que fica
'travado por outro processo que n|fffd|o permite apiSetForegroundWindow. Ent|fffd|o |fffd| usar o Alt+Tab para
'simular a|fffd||fffd|o do usu|fffd|rio indo para outro processo.
    Dim i As Long
    Do
        If i > 0 Then SendKeys "%{TAB}": MyWait 0.1
        SetForegroundWindow lhWnd                          ' Como tenho o handle melhor que AppActivate.
        i = i + 1
    Loop While GetForegroundWindow() <> lhWnd And i < 40

    If PauseSeg <> 0 Then MyWait PauseSeg    'Esta espera foi necess|fffd|ria para a Ribbon em PrintPreview n|fffd|o ficar travada. Talvez s|fffd| isto fosse suficiente, mas deixei completo.
End Sub

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
'Implements IDTExtensibility2
'Implements IRibbonExtensibility
Private WithEvents HostApp As Excel.Application
Attribute HostApp.VB_VarHelpID = -1
Private WithEvents cbbButton As Office.CommandBarButton
Attribute cbbButton.VB_VarHelpID = -1

Dim cbcMyBar As Office.CommandBar
Dim btnMyButton As Office.CommandBarButton
Dim bRibbon As Boolean

Private Sub Workbook_Open()




'Store startup reference
    IsPortg = GetIsPortg         'Application.LanguageSettings.LanguageID(msoLanguageIDUI) = 1046 Or Application.LanguageSettings.LanguageID(msoLanguageIDUI) = 2070  'appHostApp.International(xlCountryCode) = 55
'   sDLLProgId = AddInInst.ProgId
    bIsCOMAddin = sDLLProgId <> ""
    If bIsCOMAddin Then
        '        sAddInNameByApp = Split(AddInInst.Description, " - ")(0)
        '        sAddInCaptByApp = Split(AddInInst.Description, " - ")(1)
    Else
        sAddInNameByApp = "ExcelWatermark"
        sAddInCaptByApp = "Watermark for Excel"
    End If
    If IsPortg Then sAddInCaptByApp = MyReplace(sAddInCaptByApp, "Watermark for", "Marca-d'|fffd|gua para")
    AddInTitle = "Orlando's " & sAddInNameByApp
    sUtilSerialID = "6"
    'N|fffd|o conecta, se o ExcelWatermark (ou o OfficeWatermark) j|fffd| tiver se conectado. N|fffd|o h|fffd| conflito apenas para evitar uma duplicidade sem nenhum benef|fffd|cio
    If Not Application.CommandBars.FindControl(Tag:= _
            "Orlando's " & IIf(sAddInNameByApp = "OfficeWatermark", "ExcelWatermark", "OfficeWatermark")) Is Nothing Then Exit Sub

    Set HostApp = Application
    dHostAppVer = Val(HostApp.Version)
    If dHostAppVer < 10 Then Exit Sub Else App_hWnd = HostApp.hWnd
    Set appHostApp = HostApp

    'Se COM e o add-in xla j|fffd| aberto, deixa menu para ele, pois serve para todas vers|fffd|es do Excel
    If bIsCOMAddin Then
        On Error Resume Next
        Msg1 = HostApp.Workbooks("ExcelWatermark.xla").Name    'Testa se est|fffd| aberto
        If Err.Number = 0 Then HostApp.Run "ExcelWatermark.xla!fGetVersion"    'Testa se |fffd| meu e a vers|fffd|o
        If Err.Number = 0 Then Exit Sub
        On Error GoTo 0
    End If

    'To call from RibbonX thru ExcelWatermark.xlam and Object to show in VBA
    If dHostAppVer >= 11 + 1 Then
        Dim sDllPath As String
        On Error Resume Next
        sDllPath = ThisDLLPath
        If InStr(1, UCase(sDllPath), UCase("\vb6debug.dll")) Then sDllPath = "E:\ComoMVP\MeuSite\Projetos\ExcelWatermark"    'In debug mode
        If Err.Number = 0 And VBA.FileSystem.Dir(sDllPath & "\ExcelWatermark.xlam") <> "" Then
            appHostApp.Workbooks.Open sDllPath & "\ExcelWatermark.xlam"
            DoEvents
            bRibbon = (Err.Number = 0)
        End If
    End If

    'ReadINISetting    'Isso s|fffd| |fffd| necess|fffd|rio para habilitar o hotkey. Se um dia for necess|fffd|rio, n|fffd|o esquecer de testar o atraso na carga do Excel principalmente chamando GetRegDatFile(True). O |fffd|cone da barra de menu demora aparecer e se o Excel for chamado antes vai gerar GPF e na pr|fffd|xima exec. vai querer desabilitar.

    'Add the commandbar
    If Not bRibbon Then Set cbbButton = CreateBar()

    'Se COM class Object to show in VBA
    '    Set ObjToVBA = New WatermarkObjToVBA
    '    AddInInst.Object = ObjToVBA
End Sub

Private Sub Workbook_AddinInstall()
    Workbook_Open
End Sub

Private Sub IDTExtensibility2_OnAddInsUpdate(custom() As Variant)
'
End Sub

Private Sub IDTExtensibility2_OnBeginShutdown(custom() As Variant)
'
End Sub

'Private Sub IDTExtensibility2_OnDisconnection(ByVal _
 '        RemoveMode As AddInDesignerObjects.ext_DisconnectMode, _
 '        custom() As Variant)
Private Sub Workbook_BeforeClose(Cancel As Boolean)
    If dHostAppVer < 10 Or TypeName(appHostApp) = "Nothing" Then Exit Sub      'A |fffd|ltima |fffd| pare evitar beforeClose novamente, pois em xla ao fechar e cancelar de um alerta de salvar ele j|fffd| aconteceu

    If Not bRibbon Then
        RemoveToolbar
    Else
        On Error Resume Next
        appHostApp.Workbooks("ExcelWatermark.xlam").Close False
    End If

    ' remove references to shutdown
    '    Set ObjToVBA = Nothing    'Necess|fffd|rio se n|fffd|o fica gerando GPF as sair do Excel
    Set cbbButton = Nothing
    Set appHostApp = Nothing
    Set HostApp = Nothing
End Sub

Private Sub IDTExtensibility2_OnStartupComplete(custom() As Variant)
'
End Sub


Public Function CreateBar() As Office.CommandBarButton
' Specify the command bar
    On Error GoTo CreateBar_Err
    Set cbcMyBar = appHostApp.CommandBars("Sheet")

    ' Specify the commandbar button
    Dim btnPos As Long
    Set btnMyButton = appHostApp.CommandBars("Sheet").FindControl(Type:=msoControlButton, Tag:="OrlandoExcelWatermark")
    If btnMyButton Is Nothing Then
        btnPos = cbcMyBar.FindControl(Type:=msoControlButton, ID:=952).Index
        Set btnMyButton = cbcMyBar.Controls.Add(Type:=msoControlButton, _
                Parameter:="OrlandoExcelWatermark", Before:=btnPos + 1, Temporary:=True)
        '        IsPortg = appHostApp.International(xlCountryCode) = 55
        With btnMyButton
            .Style = msoButtonCaption
            '      .BeginGroup = True
            .Caption = IIf(IsPortg, "&Marca-d'|fffd|gua Impressa", "&Printed Watermark")
            .TooltipText = IIf(IsPortg, "Inserir Marca-d'|fffd|gua Impressa no planilha", "Insert Printed Watermark on the sheet")
            '      .Width = "24"
            .Tag = "OrlandoExcelWatermark"
        End With
    End If

    ' Display and return the commandbar
    '   cbcMyBar.Visible = True
    Set CreateBar = btnMyButton
    Exit Function

CreateBar_Err:
    MsgBox Err.Number & vbCrLf & Err.Description
End Function

Private Function RemoveToolbar()
    On Error GoTo 0
    'Achei melhor redefinir prevenindo uma eventual perda de defini|fffd||fffd|o de vari|fffd|vel
    Set cbcMyBar = appHostApp.CommandBars("Sheet")
    Set btnMyButton = cbcMyBar.FindControl(Type:=msoControlButton, Tag:="OrlandoExcelWatermark")

    If Not btnMyButton Is Nothing Then btnMyButton.Delete
End Function

Private Sub cbbButton_Click(ByVal Ctrl As Office.CommandBarButton, CancelDefault As Boolean)
'    Set appHostApp = Ctrl.Application    'Com dll s|fffd| funciona com isso ou talvez tivesse perdendo e isto se renovaria fica aqui desativado para uma eventualidade
    Watermark    'xWorkbook_Open
End Sub


Function GetIsPortg()
'Empacotei a linha abaixo nesta fun|fffd||fffd|o(ou sub) porque no Excel 2003, se ela for usada diretamente no OpenEvent
'provoca GPF ao carregar projeto decompilado que tenha tamanho maior que 200Kb decompilado (500 compilado)
'   GetIsPortg = Application.International(xlCountryCode) = 55
    GetIsPortg = Application.LanguageSettings.LanguageID(msoLanguageIDUI) = 1046 Or Application.LanguageSettings.LanguageID(msoLanguageIDUI) = 2070                 'appHostApp.International(xlCountryCode) = 55
End Function

Attribute VB_Name = "formGetRegtrdKey"
Attribute VB_Base = "0{87F3F537-54E9-4DEF-BD0C-0D75D6248401}{4659706E-EA36-4E82-8636-7ABF6698FCE5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit
Dim EmailSubj As String
Dim HomePageUrl As String
Dim Form_hWnd1 As Long
Dim bIsFreePass1 As Boolean
Const lSerialSize As Long = 8

Private Sub Cancel_Bt_Click()
    Unload Me
End Sub

Private Sub Ok_Bt_Click()
    MousePointWait True
    sRegtrdSerial = Left(SerialChecksum_Tb.Text, lSerialSize)
    sRegtrdKey = RegistredKey_Tb.Text
    If bIsFreePass1 Then
        'A data de registro a guardar ser|fffd| a que validou, de prefer|fffd|ncia a de hoje, pois o diary pode se repetir em dias continuos
        If RegistredKey_Tb.Text = CheckSum4(Left(SerialChecksum_Tb.Text, lSerialSize) & "-" & GetDayCheckSum(Left(SerialChecksum_Tb.Text, lSerialSize), dStartDate + 1)) Then RegDate = dStartDate + 1
        If RegistredKey_Tb.Text = CheckSum4(Left(SerialChecksum_Tb.Text, lSerialSize) & "-" & GetDayCheckSum(Left(SerialChecksum_Tb.Text, lSerialSize), dStartDate - 1)) Then RegDate = dStartDate - 1
        If RegistredKey_Tb.Text = CheckSum4(Left(SerialChecksum_Tb.Text, lSerialSize) & "-" & GetDayCheckSum(Left(SerialChecksum_Tb.Text, lSerialSize), dStartDate)) Then RegDate = dStartDate
    Else
        RegDate = dStartDate
    End If
    sRegDateChk = CheckSum4(VBA.Strings.Format(RegDate, "mm/dd/yyyy") & "DiferenciarDesIniDateChk")
    WriteINISetting

    'Se o HD poder ser identificado, salvar dados em arquivo especial junto ao dll por seguran|fffd|a
    'na perda do ini ou uso por usu|fffd|rio limitado e para uma eventual valida|fffd||fffd|o pelo HD que pode
    'ser intalado em outra m|fffd|quina. Se free pass, n|fffd|o salva.
    If GetDriveInfo <> 0 And Not bIsFreePass1 Then WriteRegstdData
    MousePointWait False
    BotAcionado = 1
    Unload Me
End Sub

Private Sub SerialChecksum_Tb_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    Event_Input_Tb_MouseMove SerialChecksum_Tb, Button, Shift, X, Y
End Sub

Private Sub SerialChecksum_Tb_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    Event_Input_Tb_KeyDown SerialChecksum_Tb, KeyCode, Shift
    '    If KeyCode = 40 Or KeyCode = 38 Then Date1Calend_Bt_Click
End Sub

Private Sub SerialChecksum_Tb_Change()
    If vEnableEvents = False Then Exit Sub
    Event_Input_Tb_Change SerialChecksum_Tb

    Online1_Lb.Enabled = False
    OnlineURL_Lb.Enabled = False
    LbCopiar.Enabled = False
    LbColarKey.Enabled = False
    Online2_Lb.Enabled = False
    RegistredKey_Tb.Enabled = False
    RegistredKey_Lb.Enabled = False

    If InStr(1, SerialChecksum_Tb.Text, "_") > 0 Then
        SerialChecksum_Lb.Caption = IIf(IsPortg, "Incompleto!", "Incomplete!")
        SerialChecksum_Lb.ForeColor = &HFF&
    ElseIf ConcStringCheckSum(Left(SerialChecksum_Tb.Text, lSerialSize - 2)) <> Left(SerialChecksum_Tb.Text, lSerialSize) _
            Or Mid(SerialChecksum_Tb.Text, lSerialSize - 2, 1) <> sUtilSerialID Then
        SerialChecksum_Lb.Caption = IIf(IsPortg, "Inv|fffd|lido!", "Invalid!")
        SerialChecksum_Lb.ForeColor = &HFF&
    Else
        SerialChecksum_Lb.Caption = "Serial-CheckSum"
        SerialChecksum_Lb.ForeColor = &H80000012
        OnlineURL_Lb.Caption = "http://cpap.com.br/getkey.asp?sc=" & SerialChecksum_Tb.Text
        Result_Tb.Text = OnlineURL_Lb.Caption

        Online1_Lb.Enabled = True
        OnlineURL_Lb.Enabled = True
        LbCopiar.Enabled = True
        LbColarKey.Enabled = True
        Online2_Lb.Enabled = True
        RegistredKey_Tb.Enabled = True
        RegistredKey_Lb.Enabled = True
        RegistredKey_Tb.SetFocus
    End If

    'RegistredKey_Tb.Text = CheckSum4(SerialChecksum_Tb)    'Ver resultado durante projeto

End Sub

Private Sub RegistredKey_Tb_Change()
    If Len(RegistredKey_Tb.Text) < 4 Then
        RegistredKey_Lb.Caption = IIf(IsPortg, "Incompleto!", "Incomplete!")
        RegistredKey_Lb.ForeColor = &HFF&
        OK_Bt.Enabled = False
        Exit Sub
    ElseIf Len(RegistredKey_Tb.Text) > 4 Then
        OK_Bt.Enabled = False
        RegistredKey_Tb.Text = Left(RegistredKey_Tb.Text, 4)
        Exit Sub
    ElseIf RegistredKey_Tb.Text <> CheckSum4(SerialChecksum_Tb.Text) Then
        RegistredKey_Lb.Caption = IIf(IsPortg, "Inv|fffd|lido!", "Invalid!")
        RegistredKey_Lb.ForeColor = &HFF&
        OK_Bt.Enabled = False
    Else
        RegistredKey_Lb.Caption = IIf(IsPortg, "Chave de Registro OK", "Registration Key OK")
        RegistredKey_Lb.ForeColor = &H80000012
        OK_Bt.Enabled = True    'Ok s|fffd| fica dispon|fffd|vel se chave estiver correta
    End If

    'Se tem forma de chave, mas n|fffd|o foi aceita como machine, verifica se |fffd| diary de passe
    'livre. Quando o Serial n|fffd|o est|fffd| cadastrado no banco de dados, a Internet retorna uma chave diary.
    'Como o hoje do servidor web pode ser tamb|fffd|m ainda ont|fffd|m ou j|fffd| amanh|fffd| no local, testa as t|fffd|s situa|fffd||fffd|es
    If OK_Bt.Enabled = False Then
        If RegistredKey_Tb.Text = CheckSum4(Left(SerialChecksum_Tb.Text, lSerialSize) & "-" & GetDayCheckSum(Left(SerialChecksum_Tb.Text, lSerialSize), dStartDate)) _
                Or RegistredKey_Tb.Text = CheckSum4(Left(SerialChecksum_Tb.Text, lSerialSize) & "-" & GetDayCheckSum(Left(SerialChecksum_Tb.Text, lSerialSize), dStartDate - 1)) _
                Or RegistredKey_Tb.Text = CheckSum4(Left(SerialChecksum_Tb.Text, lSerialSize) & "-" & GetDayCheckSum(Left(SerialChecksum_Tb.Text, lSerialSize), dStartDate + 1)) Then
            RegistredKey_Lb.Caption = IIf(IsPortg, "Chave de Registro OK", "Registration Key OK")
            RegistredKey_Lb.ForeColor = &H80000012
            OK_Bt.Enabled = True    'Ok s|fffd| fica dispon|fffd|vel se chave estiver correta
            bIsFreePass1 = True    '|fffd|til para n|fffd|o salvar em dat e obter a data de registro
        End If
    End If

    'Degrada 0,5 seg a cada tentativa e evita entrada na espera. Dificultar crack por tentativa com sendkeys
    Static i As Double
    i = i + 1
    If i > 6 Then
        RegistredKey_Tb.Locked = True
        MyWait i / 2
        RegistredKey_Tb.Locked = False
        If i > 12 Then i = 12
    End If
End Sub

Private Sub UserForm_Activate()
    Email_Lb.Caption = IIf(IsPortg, "E-mail", "Email")
    Email_Lb.ControlTipText = "orlando@cpap.com.br"
    EmailSubj = IIf(IsPortg, "Informa|fffd||fffd|es sobre o ", "Information about ") & sAddInNameByApp & IIf(bIsCOMAddin, " (COM add-in)", " (Add-in)")
    HomePage_Lb.Caption = IIf(IsPortg, "Ajuda", "Help")
    HomePage_Lb.ControlTipText = "http://cpap.com.br/orlando/"
    HomePageUrl = "http://cpap.com.br/orlando/" & sAddInNameByApp & IIf(IsPortg, "Mais.asp?IdC=Ajuda", "More.asp?IdC=Help")
    SeeMore_Lb.Caption = IIf(IsPortg, "Veja +", "See +")
    SeeMore_Lb.ControlTipText = HomePage_Lb.ControlTipText

    If IsPortg Then
        Caption = sAddInCaptByApp & " - Chave de Registro - Obtenha Online"
        Serial_Lb.Caption = "Cole ou digite abaixo o Serial de oito caracteres que voc|fffd| comprou ou obteve em um passe livre."
        Online1_Lb.Caption = "Agora v|fffd| ao link abaixo clicando nele, mas, se preferir, clique no |fffd|cone copiar |fffd| direita para voc|fffd| mesmo colar no Internet Explorer."
        LbCopiar.ControlTipText = "Copiar link para |fffd|rea de Transfer|fffd|ncia do Windows (Ctrl+C)"
        LbColarSerial.ControlTipText = "Colar Serial da |fffd|rea de Transfer|fffd|ncia do Windows (Ctrl+V)"
        LbColarKey.ControlTipText = "Colar Chave da |fffd|rea de Transfer|fffd|ncia do Windows (Ctrl+V)"
        Online2_Lb.Caption = "Obtenha a Chave on-line l|fffd|, cole ou digite abaixo e pressione OK."
        RegistredKey_Lb.Caption = "Chave de Registro (Apenas 4 caracteres)"
        Cancel_Bt.Caption = "Cancelar"
    Else
        Caption = sAddInCaptByApp & " - Registration Key - Get Online"
    End If

    SeeMore_Lb.MouseIcon = HomePage_Lb.MouseIcon
    OnlineURL_Lb.MouseIcon = HomePage_Lb.MouseIcon
    LbCopiar.MouseIcon = HomePage_Lb.MouseIcon
    LbColarSerial.MouseIcon = HomePage_Lb.MouseIcon
    LbColarKey.MouseIcon = HomePage_Lb.MouseIcon
    Result_Tb.Visible = False

    Online1_Lb.Enabled = False
    OnlineURL_Lb.Enabled = False
    LbCopiar.Enabled = False
    LbColarKey.Enabled = False
    Online2_Lb.Enabled = False
    RegistredKey_Tb.Enabled = False
    RegistredKey_Lb.Enabled = False
    OK_Bt.Enabled = False

    SerialChecksum_Tb.SetFocus
    vEnableEvents = True
    If Len(sRegtrdSerial) > 0 Then SerialChecksum_Tb.Text = sRegtrdSerial

    'Get form handle
    Form_hWnd1 = FindWindowA(IIf(bIsCOMAddin, "ThunderRT6DFrame", "ThunderDFrame"), Caption)
    If Form_hWnd1 = 0 Then Form_hWnd1 = FindWindowA(vbNullString, Caption)
    'Basear o form na janela do Excel
    If bIsCOMAddin Then SetWindowLongA Form_hWnd1, GWL_HWNDPARENT, App_hWnd
    'Fixar form
    If bIsCOMAddin Then FixForm Form_hWnd1    'Se alterar caption, precisa aplicar novamente
End Sub

Private Sub LbCopiar_Click()
    PressEfect LbCopiar

    'CopyClipboard
    Result_Tb.SelStart = 0
    Result_Tb.SelLength = Result_Tb.TextLength
    Result_Tb.Copy
End Sub

Private Sub LbColarSerial_Click()
    Dim DadosTransf As DataObject
    Dim i
    PressEfect LbColarSerial
    On Error Resume Next
    Set DadosTransf = New DataObject
    DadosTransf.GetFromClipboard
    i = DadosTransf.GetText(1)
    Set DadosTransf = Nothing
    i = Left(i, lSerialSize)
    If Err.Number = 0 And Not SerialChecksum_Tb.Locked Then SerialChecksum_Tb.Text = i
End Sub

Private Sub LbColarKey_Click()
    Dim DadosTransf As DataObject
    Dim i
    PressEfect LbColarKey
    On Error Resume Next
    Set DadosTransf = New DataObject
    DadosTransf.GetFromClipboard
    i = DadosTransf.GetText(1)
    Set DadosTransf = Nothing
    i = Left(i, 4)
    If Err.Number = 0 And Not RegistredKey_Tb.Locked Then RegistredKey_Tb.Text = i
End Sub

Sub PressEfect(Ctrl As Object)
    Dim mp, se
    mp = Ctrl.MousePointer
    se = Ctrl.SpecialEffect
    Ctrl.MousePointer = fmMousePointerHourGlass
    Ctrl.SpecialEffect = fmSpecialEffectSunken
    MyWait 0.2
    Ctrl.SpecialEffect = se
    Ctrl.MousePointer = mp
End Sub

Private Sub HomePage_Lb_Click()
    SendEMailByURL HomePage_Lb, HomePageUrl, "", "", False
End Sub

Private Sub SeeMore_Lb_Click()
    SendEMailByURL SeeMore_Lb, HomePageUrl & IIf(IsPortg, "Reg#Registrar", "Reg#Register"), "", "", False
End Sub

Private Sub Email_Lb_Click()
    SendEMailByURL Email_Lb, Email_Lb.ControlTipText, EmailSubj, EmlMsg, False
End Sub

Private Sub OnlineURL_Lb_Click()
    SendEMailByURL OnlineURL_Lb, OnlineURL_Lb.Caption, "", "", False
End Sub



'Handle Textbox events
Sub Event_Input_Tb_MouseMove(Ctrl_Tb As Control, Button As Integer, Shift As Integer, X As Single, Y As Single)
    Ctrl_Tb.Locked = False
End Sub

Sub Event_Input_Tb_KeyDown(Ctrl_Tb As Control, KeyCode As MSForms.ReturnInteger, Shift As Integer)
    Dim j As Long
    j = Ctrl_Tb.SelStart

    If (KeyCode = 46 Or KeyCode = 8) And Ctrl_Tb.SelLength = Len(Ctrl_Tb.Text) Then     'Se tudo sel, del or bcksp limpa
        Ctrl_Tb.Locked = False
        Exit Sub
    End If

    If KeyCode = 8 Then KeyCode = 37   'Change Backspace by left arrow

    'Arrows and, clipboard keys
    If KeyCode = 16 Or KeyCode = 17 _
            Or KeyCode = 37 Or KeyCode = 39 _
            Or (Shift = 2 And KeyCode = 67) _
            Or (Shift = 2 And KeyCode = 86) _
            Or (Shift = 1 And KeyCode = 45) _
            Or (Shift = 2 And KeyCode = 88) Then
        Ctrl_Tb.Locked = False
        Exit Sub
    End If
    If Ctrl_Tb.SelLength > 1 Then Ctrl_Tb.SelStart = j
    Ctrl_Tb.Locked = False
    'Permitidos: 0 a 9 keypad, 0 a 9 keyboard, a a z e A a Z keyboard
    If (KeyCode >= 96 And KeyCode <= 105) Or _
            (KeyCode >= 48 And KeyCode <= 57 And Shift = 0) Or _
            (KeyCode >= 65 And KeyCode <= 90 And Shift <> 2 And Shift <> 4) Then Else Ctrl_Tb.Locked = True
    If j >= lSerialSize Then Ctrl_Tb.Locked = True
End Sub

Sub Event_Input_Tb_Change(Ctrl_Tb As Control)
    Dim i As String
    Dim j As Long

    'If vEnableEvents = False Then Exit Sub
    i = Ctrl_Tb.Text
    j = Ctrl_Tb.SelStart

    If Len(i) <= lSerialSize Then     'Compleata com _ se deletado
        j = Len(i)
        i = i & String(lSerialSize - Len(i) + 1, "_") & "-"
    End If

    'Foreseeing and to keep the len format, replace
    If Len(i) > lSerialSize And j > 0 Then
        vEnableEvents = False
        Ctrl_Tb.Text = Left(i, j) & Mid(i, j + 2, 200)

        'Checksum of serial
        Ctrl_Tb.Text = Left(Ctrl_Tb.Text, lSerialSize) & "-" & GetMachineCheckSum(Left(Ctrl_Tb.Text, lSerialSize))

        vEnableEvents = True
        Ctrl_Tb.SelStart = j
    End If
End Sub

' InQuest injected base64 decoded content
' 'tZ(
' Ygjg
' x"{e1

INQUEST-PP=macro
