Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "basStammdaten"
'
' |fffd|bertragen von Stammdaten in Projektdokumente
' 20.07.2006 comtak GmbH, Olaf Steven
'
' --------------------------------------------------------------------------------------------------------------------------
'
' Parameter
'
' Wie hei|fffd|t die Stammdatendatei?
Private Const DateiName As String = "Stammdaten.xls"
' Suche Stammdaten im Ordner des Dokuments und wieviel Ordnerebenen h|fffd|her?
Private Const OrdnerEbenen As Long = 3
'
' --------------------------------------------------------------------------------------------------------------------------
'
' API
'
Private Declare Function GetOpenFileName Lib "comdlg32.dll" Alias "GetOpenFileNameA" (pOpenfilename As OPENFILENAME) As Long
Type OPENFILENAME
    lStructSize As Long
    hwndOwner As Long
    hInstance As Long
    strFilter As String
    strCustomFilter As String
    nMaxCustFilter As Long
    nFilterIndex As Long
    strFile As String
    nMaxFile As Long
    strFileTitle As String
    nMaxFileTitle As Long
    strInitialDir As String
    strTitle As String
    Flags As Long
    nFileOffset As Integer
    nFileExtension As Integer
    strDefExt As String
    lCustData As Long
    lpfnHook As Long
    lpTemplateName As String
End Type

Option Explicit

Sub Stammdaten|fffd|bertragen()
Dim booWord As Boolean, objMe As Variant, objDoc As Variant, strQuelle As String
Dim objApplication As Variant, objWorkbook As Variant, objName As Variant
On Error GoTo err_here

    ' In welcher Anwendung leben wir?
    booWord = InStr(Application.Name, "Word") > 0
    If booWord Then
        Set objMe = GetObject(, "Word.Application")
        Set objDoc = objMe.ActiveDocument
    Else
        Set objMe = GetObject(, "Excel.Application")
        Set objDoc = objMe.ActiveWorkbook
    End If
    
    ' Suche Stammdatendatei (ausgehend vom Ordner der aktiven Datei):
    strQuelle = SucheQuelle("" & objDoc.Path)
    If Len(strQuelle) < 2 Then
        ' Keine Stammdatendatei gefunden, also fragen...
        strQuelle = strCommonFileOpen(CurDir)
        If Len(strQuelle) = 0 Then
            ' Immer noch keine Stammdatendatei gefunden, dann Fehlermeldung
            Err.Raise vbObjectError + 99, , "Datei " & DateiName & " nicht gefunden."
        End If
    Else
        strQuelle = strQuelle & IIf(Right(strQuelle, 1) = "\", "", "\") & DateiName
    End If
    
    ' Excel greifen
    Set objApplication = CreateObject("Excel.Application")
    objApplication.Visible = False
    ' Makros deaktivieren
    objApplication.AutomationSecurity = msoAutomationSecurityForceDisable
    ' und Stammdatendokument |fffd|ffnen
    Set objWorkbook = objApplication.Workbooks.Open(strQuelle, ReadOnly:=True)
    
    ' Es muss nicht jeder Zellname oder jede Textmarke vorhanden sein, deshalb ab hier fehlertolerant weiter...
    On Error Resume Next
    
    ' Testen, ob Stammdaten schon |fffd|bertragen wurden
    Dim booAnders As Boolean
    For Each objName In objWorkbook.Names
        If booWord Then
            booAnders = Len(objDoc.Bookmarks(objName.Name).Range.Text) > 0
        Else
            booAnders = objDoc.Names(objName.Name).RefersToRange.Value <> ""
        End If
        If booAnders Then
            If MsgBox("Einige Stammdatenfelder enthalten bereits Daten." & vbCrLf & vbCrLf & "Vorhandene Daten |fffd|berschreiben?", vbDefaultButton2 + vbYesNo + vbQuestion) <> vbYes Then
                ' vorhandene Daten sollen nicht |fffd|berschrieben werden, dann fertig:
                GoTo exit_here
            Else
                Exit For
            End If
        End If
    Next
    
    ' Alle benannten Zellen |fffd|bertragen (wenn m|fffd|glich)
    Dim objRange As Variant
    For Each objName In objWorkbook.Names
        Debug.Print objName.RefersToRange.Cells(1, 1).Value
        If booWord Then
            With objDoc
                If .Bookmarks.Exists(objName.Name) Then
                    Set objRange = .Bookmarks(objName.Name).Range
                    objRange.Text = objName.RefersToRange.Cells(1, 1).Value
                    ' Text als (neue) Textmarke festlegen, um erneutes Ersetzen zu erm|fffd|glichen
                    .Bookmarks.Add objName.Name, objRange
                End If
            End With
        Else
            objDoc.Names(objName.Name).RefersToRange.Value = objName.RefersToRange.Cells(1, 1).Value
        End If
    Next

exit_here:
    On Error Resume Next
    objWorkbook.Close
    Set objWorkbook = Nothing
    Set objApplication = Nothing
    Exit Sub

err_here:
    MsgBox Err.Description
    Resume exit_here
End Sub

Function SucheQuelle(ByVal strOrdner As String) As String
Dim objFso As Object, strPfad As String, lngI As Long
    SucheQuelle = ""
    If strOrdner = "" Then Exit Function
    Set objFso = CreateObject("Scripting.FileSystemObject")
    For lngI = 0 To OrdnerEbenen
        ' Suche nach Stammdatendatei beginnt im Dateiordner
        Debug.Print "Suche " & strOrdner
        If Dir(strOrdner & IIf(Right(strOrdner, 1) = "\", "", "\") & DateiName) <> "" Then
            ' Datei gefunden, fertig.
            SucheQuelle = strOrdner
            Exit Function
        End If
        ' nix gefunden, dann mal eine Ebene h|fffd|her probieren...
        strOrdner = objFso.GetParentFolderName(strOrdner)
    Next
End Function

Function strCommonFileOpen(strInitialDir As String) As String
Dim OFN As OPENFILENAME
    strCommonFileOpen = ""
    With OFN
        .lStructSize = Len(OFN)
        .strFilter = "Stammdaten (" & DateiName & ")" & vbNullChar & DateiName & vbNullChar & _
                     "Excel-Dateien (*.xls)" & vbNullChar & "*.xls" & vbNullChar & _
                     "Alle Dateien (*.*)" & vbNullChar & "*.*" & vbNullChar
        .nFilterIndex = 1
        .strFile = String(256, 0)
        .nMaxFile = 256
        .strFileTitle = String(256, 0)
        .nMaxFileTitle = 256
        .strTitle = "Stammdaten |fffd|ffnen"
        .Flags = &H1000 Or &H4
        .strDefExt = ""
        .strInitialDir = strInitialDir
        .hInstance = 0
        .lpfnHook = 0
        .strCustomFilter = String(255, 0)
        .nMaxCustFilter = 255
    End With
    If GetOpenFileName(OFN) Then strCommonFileOpen = TrimNull(OFN.strFile)
End Function

Private Function TrimNull(strIn As String) As String
    TrimNull = IIf(InStr(strIn, vbNullChar) > 0, Left(strIn, InStr(strIn, vbNullChar) - 1), strIn)
End Function





INQUEST-PP=macro
