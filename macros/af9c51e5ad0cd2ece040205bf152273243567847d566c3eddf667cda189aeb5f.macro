Attribute VB_Name = "FormEquipment"
Attribute VB_Base = "0{DDFE1B6D-32F5-40D2-8EC4-498B28835B39}{082FC09B-E3CE-4DB5-92B0-FD8657CFFF6E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub UserForm_Activate()
    
    Me.TBEquipmentDescr = Range("Equipment").Value
    Me.TBProject = Range("Project").Value
    Me.TBEquipmentTagNo = Range("EquipmentTagNo").Value
    Me.TBEquipmentPONo = Range("EquipmentPONo").Value
    Me.TBEquipmentPODate = Range("EquipmentPODate").Value
    Me.TBEquipmentPrice = Range("EquipmentPrice").Value
    Me.TBEquipmentCurrency = Range("EquipmentCurrency").Value
    Me.TBEquipmentModel = Range("EquipmentModel").Value
    Me.TBEquipmentSerialNo = Range("EquipmentSerialNo").Value
    
End Sub

Private Sub ButtonOk_Click()

    Range("Equipment") = Me.TBEquipmentDescr
    Range("Project") = Me.TBProject
    Range("EquipmentTagNo") = Me.TBEquipmentTagNo
    Range("EquipmentPONo") = Me.TBEquipmentPONo
    Range("EquipmentPODate") = Me.TBEquipmentPODate
    Range("EquipmentPrice") = Me.TBEquipmentPrice
    Range("EquipmentCurrency") = Me.TBEquipmentCurrency
    Range("EquipmentModel") = Me.TBEquipmentModel
    Range("EquipmentSerialNo") = Me.TBEquipmentSerialNo
    
    Unload Me
End Sub


Private Sub ButtonCancel_Click()
    Unload Me
End Sub
Attribute VB_Name = "FormPrintSPIR"
Attribute VB_Base = "0{E76C669E-1D11-40E8-A093-E6F95295DA02}{C9672739-5E6F-486F-9ED2-E7FBF6E371EF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ButtonCancel_Click()
    Unload Me
End Sub

Private Sub ButtonPrint_Click()
    Dim ws As Worksheet
    Dim rng As Range
    Dim sPrintArea As String
    Dim sTitleRow As String
    Dim spirRows As Integer
    
    Set ws = ThisWorkbook.Worksheets("SPIR")
    spirRows = GetSPIRCount()
    
    If Me.OBSpir = True Then
        Set rng = Range("SPIR")
        Set rng = rng.Resize(rng.rows.count + spirRows, rng.Columns.count)
        sPrintArea = rng.Address
    ElseIf Me.OBSpirContinuation Then
        Set rng = Range("SPIR")
        Set rng = rng.Resize(rng.rows.count + spirRows, rng.Columns.count)
        sPrintArea = rng.Address
        
        Set rng = Range("Continuation")
        Set rng = rng.Resize(rng.rows.count + spirRows, rng.Columns.count)
        sPrintArea = sPrintArea & "," & rng.Address
    Else
        Set rng = Range("Evaluation")
        If spirRows > 20 Then
            Set rng = rng.Resize(rng.rows.count + spirRows - 20, rng.Columns.count)
            sTitleRow = Range("EvaluationHeaderRow").Address
        End If
        sPrintArea = rng.Address
    End If
        
    Application.ScreenUpdating = False
    Call UnprotectSheet(ws.Name)
    
    With ws.PageSetup
        .LeftMargin = Application.InchesToPoints(0.25)
        .RightMargin = Application.InchesToPoints(0.25)
        
        .Orientation = xlLandscape
        .PrintArea = sPrintArea
        
        If sTitleRow <> "" Then
            .PrintTitleRows = sTitleRow
        End If
        
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = False
    End With
    
    Call ProtectSheet(ws.Name)
    Application.ScreenUpdating = True
    Application.CommandBars.ExecuteMso ("PrintPreviewAndPrint")
    
    Unload Me
End Sub

Private Function GetSPIRCount()
    Dim rng As Range
    Dim rngRow As Range
    Dim spirRows As Integer
    
    Set rng = Range("SparePartDescriptions")
    spirRows = 0
    
    For Each rngRow In rng.rows
        If rngRow.Cells(1) <> "" Then
            spirRows = spirRows + 1
        End If
    Next rngRow
    
    If spirRows = 0 Then
        spirRows = 1
    End If
    
    GetSPIRCount = spirRows
End Function


Attribute VB_Name = "FormSpareParts"
Attribute VB_Base = "0{B0BE141C-3D2D-417F-BB67-B7C597CAF587}{86896C22-A0BD-4948-9DD7-47F70553F666}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private iSparePartItem As Integer

Property Let SparePartItemNumber(iItemNumber As Integer)
    iSparePartItem = iItemNumber
End Property

Private Sub ButtonClose_Click()
    Call SaveAll
    Unload Me
End Sub

Private Sub ButtonFirstEmpty_Click()
    Dim rng As Range
    Dim count As Integer
    Dim rngRow As Range
    
    Call SaveAll
    
    Set rng = Range("SparePartDescriptions")
    
    For count = 1 To rng.rows.count
        If rng.Cells(count, 1) = "" Then
            iSparePartItem = count
            Call FillForm
            Exit Sub
        End If
    Next
    
    If count = rng.rows.count Then
        MsgBox "This SPIR is full, please create a new one", vbOKOnly, "SPIR completed"
    End If
End Sub

Private Sub ButtonNext_Click()
    If iSparePartItem = Range("SparePartItemNumbers").rows.count Then
        MsgBox "Last row of spare parts reached.", vbOKOnly, "Last row reached"
    Else
        Call SaveAll
        iSparePartItem = iSparePartItem + 1
        Call FillForm
    End If
End Sub

Private Sub ButtonPrevious_Click()
    If iSparePartItem > 1 Then
        Call SaveAll
        iSparePartItem = iSparePartItem - 1
        Call FillForm
    End If
End Sub

Private Sub UserForm_Activate()
    Call FillForm
End Sub

Private Sub FillForm()
    Dim rng As Range
        
    Set rng = Range("SparePartItemNumbers").Offset(iSparePartItem - 1, 0).Resize(1, 1)
    
    Me.LTBSPIRItemNumber = iSparePartItem
    Me.LTBTotalNumberOfSpares = rng.Cells(1, 2)
    Me.TBSpareUnits = rng.Cells(1, 3).Value
    Me.TBDescription = rng.Cells(1, 4).Value
    Me.TBDetailDwgNo = rng.Cells(1, 6).Value
    Me.TBSupplierItemRef = rng.Cells(1, 7).Value
    Me.TBMaterial = rng.Cells(1, 8).Value
    Me.TBSupplierPartNo = rng.Cells(1, 9).Value
    Me.TBRealManufacPartNo = rng.Cells(1, 10).Value
    Me.TBRealManufacName = rng.Cells(1, 13).Value
    Me.TBCSRecomBySupplier = rng.Cells(1, 15).Value
    Me.TBRecomByEng = rng.Cells(1, 16).Value
    Me.TBCSQtyToBeOrdered = rng.Cells(1, 17).Value
    Me.TBOSRecomBySupplier = rng.Cells(1, 18).Value
    Me.TBMaintRecom = rng.Cells(1, 19).Value
    Me.TBOSQtyToBeOrdered = rng.Cells(1, 20).Value
    Me.TBArticleCode = rng.Cells(1, 21).Value
    Me.TBClassification = rng.Cells(1, 23).Value
    Me.TBPrice = rng.Cells(1, 24).Value
    Me.TBDelivery = rng.Cells(1, 25).Value
    Me.TBPrevDelivered = rng.Cells(1, 26).Value
End Sub

Private Sub SaveAll()
    Dim rng As Range
    
    Set rng = Range("SparePartItemNumbers").Offset(iSparePartItem - 1, 0).Resize(1, 1)
    
    rng.Cells(1, 3).Value = Me.TBSpareUnits
    rng.Cells(1, 4).Value = Me.TBDescription
    rng.Cells(1, 6).Value = Me.TBDetailDwgNo
    rng.Cells(1, 7).Value = Me.TBSupplierItemRef
    rng.Cells(1, 8).Value = Me.TBMaterial
    rng.Cells(1, 9).Value = Me.TBSupplierPartNo
    rng.Cells(1, 10).Value = Me.TBRealManufacPartNo
    rng.Cells(1, 13).Value = Me.TBRealManufacName
    rng.Cells(1, 15).Value = IIf(Me.TBCSRecomBySupplier.Value = "", vbNullChar, Me.TBCSRecomBySupplier.Value)
    rng.Cells(1, 16).Value = IIf(Me.TBRecomByEng.Value = "", vbNullChar, Me.TBRecomByEng.Value)
    rng.Cells(1, 17).Value = IIf(Me.TBCSQtyToBeOrdered.Value = "", vbNullChar, Me.TBCSQtyToBeOrdered.Value)
    rng.Cells(1, 18).Value = IIf(Me.TBOSRecomBySupplier.Value = "", vbNullChar, Me.TBOSRecomBySupplier.Value)
    rng.Cells(1, 19).Value = IIf(Me.TBMaintRecom.Value = "", vbNullChar, Me.TBMaintRecom.Value)
    rng.Cells(1, 20).Value = IIf(Me.TBOSQtyToBeOrdered.Value = "", vbNullChar, Me.TBOSQtyToBeOrdered.Value)
    rng.Cells(1, 21).Value = Me.TBArticleCode
    rng.Cells(1, 23).Value = Me.TBClassification
    rng.Cells(1, 24).Value = IIf(Me.TBPrice.Value = "", vbNullChar, Me.TBPrice.Value)
    rng.Cells(1, 25).Value = IIf(Me.TBDelivery.Value = "", vbNullChar, Me.TBDelivery.Value)
    rng.Cells(1, 26).Value = Me.TBPrevDelivered

End Sub
Attribute VB_Name = "FormSupplier"
Attribute VB_Base = "0{938D1E51-B5E5-4D85-814F-0FAB09F5CEDF}{6BC37349-2EAD-4A6E-BA40-1CB32925DD61}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub UserForm_Activate()
    Dim sSupplierAddress As String
    Dim sAddress() As String

    sSupplierAddress = Range("SupplierAddress")
    If Len(sSupplierAddress) > 0 Then
        If InStr(sSupplierAddress, vbLf) > 0 Then
            sAddress = Split(sSupplierAddress, vbLf, 2)
            Me.TBSupplierAddress1 = sAddress(0)
            Me.TBSupplierAddress2 = sAddress(1)
        Else
            Me.TBSupplierAddress1 = sSupplierAddress
        End If
    End If
    
    Me.TBSupplierName = Range("SupplierName").Value
    Me.TBSupplierContact = Range("SupplierContact").Value
    Me.TBEngContractor = Range("EngineeringContractor").Value
End Sub

Private Sub ButtonOk_Click()
    Range("SupplierName") = Me.TBSupplierName
    Range("SupplierAddress") = Me.TBSupplierAddress1
    If Len(Me.TBSupplierAddress2) > 0 Then
        Range("SupplierAddress") = Range("SupplierAddress") & vbLf & Me.TBSupplierAddress2
    End If
    Range("SupplierContact") = Me.TBSupplierContact
    Range("EngineeringContractor") = Me.TBEngContractor
    
    Unload Me
End Sub

Private Sub ButtonCancel_Click()
    Unload Me
End Sub
Attribute VB_Name = "FormTag"
Attribute VB_Base = "0{F42D2ED2-D800-41DF-9CCC-8D19802594A4}{171BB727-6FD7-4B4F-8974-DEDC0DC61BE0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private sTagAddress As String

Property Let TagAddress(sAddress As String)
    sTagAddress = sAddress
End Property


Private Sub UserForm_Activate()
    Dim rngTag As Range
    Dim rngModelNo As Range
    Dim rngSerialNo As Range
    
    Set rngTag = Range(sTagAddress)
    Set rngModelNo = rngTag.Offset(1, 0)
    Set rngSerialNo = rngModelNo.Offset(1, 0)
    
    Me.TBTagNo = rngTag.Cells(1, 1).Value
    Me.TBTagManufactModelNo = rngModelNo.Cells(1, 1).Value
    Me.TBTagManufactSerialNo = rngSerialNo.Cells(1, 1).Value
End Sub

Private Sub ButtonOk_Click()
    Dim rngTag As Range
    Dim rngModelNo As Range
    Dim rngSerialNo As Range
        
    Set rngTag = Range(sTagAddress)
    Set rngModelNo = rngTag.Offset(1, 0)
    Set rngSerialNo = rngModelNo.Offset(1, 0)
    
    rngTag = Me.TBTagNo
    rngModelNo = Me.TBTagManufactModelNo
    rngSerialNo = Me.TBTagManufactSerialNo
    
    Unload Me
End Sub


Private Sub ButtonCancel_Click()
    Unload Me
End Sub
Attribute VB_Name = "Security"
Option Explicit
Option Private Module

Private Const sP = "Password"

Public Sub ProtectAllSheets()
    Dim ws As Worksheet
    
    For Each ws In ThisWorkbook.Worksheets
        ws.Protect Password:=sP
    Next
End Sub

Public Sub ProtectSheet(ByVal sSheetName)
    Dim ws As Worksheet
    Dim wsSingle As Worksheet
    
    If Len(sSheetName) > 1 Then
        Set wsSingle = ThisWorkbook.Sheets(sSheetName)
        wsSingle.Protect Password:=sP
    End If
End Sub

Public Sub UnprotectAllSheets()
    Dim ws As Worksheet
    
    For Each ws In ThisWorkbook.Worksheets
        ws.Unprotect Password:=sP
    Next
End Sub

Public Sub UnprotectSheet(ByVal sSheetName As String)
    Dim ws As Worksheet
    Dim wsSingle As Worksheet
    
    If Len(sSheetName) > 1 Then
        Set wsSingle = ThisWorkbook.Sheets(sSheetName)
        wsSingle.Unprotect Password:=sP
    End If
End Sub

Public Sub SelectA1()
    Dim ws As Worksheet
    
    For Each ws In ThisWorkbook.Worksheets
        ws.Select
        ws.Cells(1, 1).Select
    Next
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserForms"
Option Explicit

Public Sub PrintSPIR()
    Dim printBox As FormPrintSPIR
    Set printBox = New FormPrintSPIR
    
    With printBox
        .StartUpPosition = 0
        .Left = Application.Left + (0.5 * Application.Width) - (0.5 * .Width)
        .Top = Application.Top + (0.5 * Application.Height) - (0.5 * .Height)
        .Show
    End With
    
End Sub

Public Sub SetSupplier()
    Dim supplierBox As FormSupplier
    Set supplierBox = New FormSupplier
    
    With supplierBox
        .StartUpPosition = 0
        .Left = Application.Left + (0.5 * Application.Width) - (0.5 * .Width)
        .Top = Application.Top + (0.5 * Application.Height) - (0.5 * .Height)
        .Show
    End With
End Sub

Public Sub SetEquipment()
    Dim equipmentBox As FormEquipment
    Set equipmentBox = New FormEquipment
    
    With equipmentBox
        .StartUpPosition = 0
        .Left = Application.Left + (0.5 * Application.Width) - (0.5 * .Width)
        .Top = Application.Top + (0.5 * Application.Height) - (0.5 * .Height)
        .Show
    End With
End Sub

Public Sub EditAddTag()
    Dim tagBox As FormTag
    Set tagBox = New FormTag
    
    If Not Application.Intersect(ActiveCell, Range("TagNos1")) Is Nothing Or Not Application.Intersect(ActiveCell, Range("TagNos2")) Is Nothing Then
        With tagBox
            .TagAddress = ActiveCell.Address
            .StartUpPosition = 0
            .Left = Application.Left + (0.5 * Application.Width) - (0.5 * .Width)
            .Top = Application.Top + (0.5 * Application.Height) - (0.5 * .Height)
            .Show
        End With
    Else
        MsgBox "Active cell is in the wrong row. Select the cell in row labelled: 2 (Tag no.) in SPIR or Continuation sheet where you want the new tag", vbOKOnly, "Error adding/editing tag no"
    End If
End Sub

Public Sub SpareParts()
    Dim sparePartsBox As FormSpareParts
    Dim iItemNumber As Integer
    
    Set sparePartsBox = New FormSpareParts
    
    
    If Not Application.Intersect(ActiveCell, Range("SparePartsList")) Is Nothing Then
        iItemNumber = GetSparePartItemNumber
    Else
        iItemNumber = 1
    End If
    
    With sparePartsBox
        .SparePartItemNumber = iItemNumber
        .StartUpPosition = 0
        .Left = Application.Left + (0.5 * Application.Width) - (0.5 * .Width)
        .Top = Application.Top + (0.5 * Application.Height) - (0.5 * .Height)
        .Show
    End With
End Sub

Private Function GetSparePartItemNumber() As Integer
    Dim rng As Range
    Dim rngRow As Range
    
    Set rng = Range("SparePartsList")
    
    For Each rngRow In rng.rows
        If rngRow.Row = ActiveCell.Row Then
            GetSparePartItemNumber = rngRow.Cells(1, 1)
            Exit Function
        End If
    Next rngRow

End Function


Attribute VB_Name = "Utils"
Option Explicit

Public Sub ToggleColor()
    Call UnprotectSheet("SPIR")
    
    With Selection
        If .Font.Color <> vbBlack Then
            .Font.Color = vbBlack
        Else
            .Font.Color = vbRed
        End If
    End With
    
    Call ProtectSheet("SPIR")
End Sub


INQUEST-PP=macro
