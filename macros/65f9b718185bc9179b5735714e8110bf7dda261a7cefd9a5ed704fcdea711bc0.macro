Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Create, 2, 2, MSForms, CommandButton"
Public fname As Variant, ofname As Variant '--- file name and old file name
Public wbkSource As Workbook, FinanceColumn As Long, FinanceRow As Long, StaffColumn As Long, StaffRow As Long, InfoRow As Long
Public SheetFront As Variant, SheetIndicators As Variant, SheetDatabase As Variant, SheetSC As Variant, SheetIncome As Variant, SheetTL_Income As Variant, SheetProcurement As Variant, SheetClaim_Summary As Variant, SheetTL_Expenditure As Variant, SheetSample As Variant, SheetFinance As Variant, SheetStaff As Variant, SheetSCO  As Variant
Public System As Variant
Public Counti As Integer, i As Integer

Public Sub Create_Click()
    
Application.ScreenUpdating = False
    
Set System = Sheets("System")
    
    OpenSourceFile
    If fname = False Or Len(fname) = 0 Then
        Exit Sub
    End If
    If Right(fname, 4) <> "xlsx" Then
        MsgBox "Incorrect file selected. This macro should only be applied to the original report from PPIMS. "
        ActiveWindow.Close
        Exit Sub
    End If
    
ofname = fname
fname = Replace(fname, ".xlsx", ".xlsm")
ActiveWorkbook.SaveAs FileName:=fname, FileFormat:=xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
Workbooks.Open FileName:=fname
Set wbkSource = Workbooks.Open(fname)
SetAttr ofname, vbNormal
Kill ofname

Set SheetFront = wbkSource.Worksheets("Front")
Set SheetIndicators = wbkSource.Worksheets("B2") '--- Activity Summary ---
Set SheetESFPart = wbkSource.Worksheets("B3.1") '--- ESF Participant Database ---
Set SheetESFEnter = wbkSource.Worksheets("B3.2") '--- ESF Enterprise Database ---
Set SheetERDFEnter = wbkSource.Worksheets("B3.3") '--- ERDF Enterprise Database ---
Set SheetSC = wbkSource.Worksheets("D2") '--- Special Conditions ---
Set SheetIncome = wbkSource.Worksheets("E2") '--- Match Funding Summary ---
Set SheetTL_Income = wbkSource.Worksheets("E3") '--- Transaction list - Income ---
Set SheetProcurement = wbkSource.Worksheets("F2") '--- Procurement ---
Set SheetClaim_Summary = wbkSource.Worksheets("G2") '--- Expenditure Summary ---
Set SheetTL_Expenditure = wbkSource.Worksheets("G3") '--- Transaction List ---
Set SheetSample = wbkSource.Worksheets("G4") '--- Approved Sample ---
Set SheetFinance = wbkSource.Worksheets("G5") '--- Finance Testing ---
Set SheetStaff = wbkSource.Worksheets("G6") '--- Staff Testing ---
Set SheetSCO = wbkSource.Worksheets("G7") '--- Simplified Costs ---


'--- Set Title bar on PPIMS sheets ---
System.Range("TitleBar").Copy
With SheetIndicators
    .Range("A1").PasteSpecial
    .Range("I1").Value = "Ref:" & Chr(10) & "(B2)" & Chr(10) & "Indicators"
    .Range("I1").Characters(Start:=6, Length:=4).Font.Size = 18
End With
System.Range("TitleBar").Copy
With SheetESFPart
    .Range("A1").PasteSpecial
    .Range("I1").Value = "Ref:" & Chr(10) & "(B3.1)" & Chr(10) & "ESF Participant Database"
    .Range("I1").Characters(Start:=6, Length:=6).Font.Size = 18
End With
System.Range("TitleBar").Copy
With SheetESFEnter
    .Range("A1").PasteSpecial
    .Range("I1").Value = "Ref:" & Chr(10) & "(B3.2)" & Chr(10) & "ESF Enterprise Database"
    .Range("I1").Characters(Start:=6, Length:=6).Font.Size = 18
End With
System.Range("TitleBar").Copy
With SheetERDFEnter
    .Range("A1").PasteSpecial
    .Range("I1").Value = "Ref:" & Chr(10) & "(B3.3)" & Chr(10) & "ERDF Enterprise Database"
    .Range("I1").Characters(Start:=6, Length:=6).Font.Size = 18
End With
System.Range("TitleBar").Copy
With SheetSC
    .Range("A1").PasteSpecial
    .Range("I1").Value = "Ref:" & Chr(10) & "(D2)" & Chr(10) & "Milestones/" & Chr(10) & "Special Conditions"
    .Range("I1").Characters(Start:=6, Length:=4).Font.Size = 18
End With
System.Range("TitleBar").Copy
With SheetIncome
    .Range("A1").PasteSpecial
    .Range("I1").Value = "Ref:" & Chr(10) & "(E2)" & Chr(10) & "Income"
    .Range("I1").Characters(Start:=6, Length:=4).Font.Size = 18
End With
System.Range("TitleBar").Copy
With SheetTL_Income
    .Range("A1").PasteSpecial
    .Range("I1").Value = "Ref:" & Chr(10) & "(E3)" & Chr(10) & "Transaction List - Income"
    .Range("I1").Characters(Start:=6, Length:=4).Font.Size = 18
End With
System.Range("TitleBar").Copy
With SheetProcurement
    .Range("A1").PasteSpecial
    .Range("I1").Value = "Ref:" & Chr(10) & "(F2)" & Chr(10) & "Procurement"
    .Range("I1").Characters(Start:=6, Length:=4).Font.Size = 18
End With
System.Range("TitleBar").Copy
With SheetClaim_Summary
    .Range("A1").PasteSpecial
    .Range("I1").Value = "Ref:" & Chr(10) & "(G2)" & Chr(10) & "Testing Summary"
    .Range("I1").Characters(Start:=6, Length:=4).Font.Size = 18
End With
System.Range("TitleBar").Copy
With SheetTL_Expenditure
    .Range("A1").PasteSpecial
    .Range("I1").Value = "Ref:" & Chr(10) & "(G3)" & Chr(10) & "Transaction List - Expenditure"
    .Range("I1").Characters(Start:=6, Length:=4).Font.Size = 18
End With
System.Range("TitleBar").Copy
With SheetSample
    .Range("A1").PasteSpecial
    .Range("I1").Value = "Ref:" & Chr(10) & "(G4)" & Chr(10) & "Approved Sample"
    .Range("I1").Characters(Start:=6, Length:=4).Font.Size = 18
End With
System.Range("TitleBar").Copy
With SheetFinance
    .Range("A1").PasteSpecial
    .Range("I1").Value = "Ref:" & Chr(10) & "(G5)" & Chr(10) & "Finance Testing"
    .Range("I1").Characters(Start:=6, Length:=4).Font.Size = 18
End With
System.Range("TitleBar").Copy
With SheetStaff
    .Range("A1").PasteSpecial
    .Range("I1").Value = "Ref:" & Chr(10) & "(G6)" & Chr(10) & "Staff Testing"
    .Range("I1").Characters(Start:=6, Length:=4).Font.Size = 18
End With
System.Range("TitleBar").Copy
With SheetSCO
    .Range("A1").PasteSpecial
    .Range("I1").Value = "Ref:" & Chr(10) & "(G7)" & Chr(10) & "Simplified Cost Testing"
    .Range("I1").Characters(Start:=6, Length:=4).Font.Size = 18
End With

'--- Generate finance testing sheet ---
System.Range("FinanceTest").Copy
FinanceRow = SheetFinance.Range("B6").End(xlDown).Row
FinanceColumn = SheetFinance.Range("ZZ6").End(xlToLeft).Column
If FinanceRow < 50000 Then
    With SheetFinance.Range("ZZ6").End(xlToLeft).Offset(-1, 1)
        .PasteSpecial xlPasteColumnWidths
        .PasteSpecial xlPasteFormulas
        .PasteSpecial xlPasteFormats
    End With
If FinanceRow <> 7 Then SheetFinance.Range(Cells(7, FinanceColumn + 2).Address, Cells(FinanceRow, FinanceColumn + (System.Range("FinanceTest").Columns.Count)).Address).FillDown
End If

'--- Generate staff testing sheet ---
System.Range("StaffTest").Copy
StaffRow = SheetStaff.Range("B6").End(xlDown).Row
StaffColumn = SheetStaff.Range("ZZ6").End(xlToLeft).Column
If StaffRow < 50000 Then
        With SheetStaff.Range("ZZ6").End(xlToLeft).Offset(-1, 1)
        .PasteSpecial xlPasteColumnWidths
        .PasteSpecial xlPasteFormulas
        .PasteSpecial xlPasteFormats
    End With
If StaffRow <> 7 Then SheetStaff.Range(Cells(7, StaffColumn + 2).Address, Cells(StaffRow, StaffColumn + (System.Range("StaffTest").Columns.Count)).Address).FillDown
End If

'--- Generate Unit Cost Testing sheet ---
System.Range("UnitCostTest").Copy
SCORow = SheetSCO.Range("B6").End(xlDown).Row
SCOColumn = SheetSCO.Range("ZZ6").End(xlToLeft).Column
If SCORow < 50000 Then
    With SheetSCO.Range("ZZ6").End(xlToLeft).Offset(0, 1)
        .PasteSpecial xlPasteColumnWidths
        .PasteSpecial xlPasteFormulas
        .PasteSpecial xlPasteFormats
    End With
If SCORow <> 7 Then SheetSCO.Range(Cells(7, SCOColumn + 2).Address, Cells(SCORow, SCOColumn + (System.Range("UnitCostTest").Columns.Count)).Address).FillDown
End If

'--- Set Autofilter on transaction lists ---
SheetTL_Income.Range(Cells(6, 2).Address, Cells(6, SheetTL_Income.Range("ZZ6").End(xlToLeft).Column).Address).AutoFilter
SheetTL_Expenditure.Range(Cells(6, 2).Address, Cells(6, SheetTL_Expenditure.Range("ZZ6").End(xlToLeft).Column).Address).AutoFilter
SheetSample.Range(Cells(6, 2).Address, Cells(6, SheetSample.Range("ZZ6").End(xlToLeft).Column).Address).AutoFilter
SheetFinance.Range(Cells(6, 2).Address, Cells(6, (SheetFinance.Range("ZZ6").End(xlToLeft).Column) + (System.Range("FinanceTest").Columns.Count)).Address).AutoFilter
SheetStaff.Range(Cells(6, 2).Address, Cells(6, (SheetStaff.Range("ZZ6").End(xlToLeft).Column) + (System.Range("StaffTest").Columns.Count)).Address).AutoFilter
SheetSCO.Range(Cells(6, 2).Address, Cells(6, SheetSCO.Range("ZZ6").End(xlToLeft).Column).Address).AutoFilter

For Each Sheet In Sheets
        Sheet.Select
        ActiveWindow.DisplayGridlines = False
Next Sheet

'----- copy working papers from template to PPIMS report -----
Windows(System.Range("FileName").Value).Activate '--- NAME OF FILE ---
'ActiveWorkbook.VBProject.VBComponents("InsertHyperlink").Export "InsertHyperlink.frm"
'wbkSource.VBProject.VBComponents.Import "InsertHyperlink.frm"
'Kill "InsertHyperlink.frm"
'Kill "InsertHyperlink.frx"
Sheets(Array("Instructions", "Index", "System", "A1", "B1", "C1", "D1", "E1", "F1", "F3", "F4.1", "F4.1 Template", "F4.2", "F4.2 Template", "F5.1", "F5.1 Template", "F5.2", "F5.2 Template", "F5.3", "F5.3 Template", "F5.4", "F5.4 Template", "F5.5", "F5.5 Template", "F5.6", "F5.6 Template", "F6", "F6 Template", "F7", "F7 Template", "G1", "H1", "I1", "J1", "K1", "L1", "M1", "M1 (IB)", "M2", "N1")).Copy Before:=wbkSource.Sheets(1)

Dim c As Integer
Dim Operation As String
Dim CaseID As String
Dim ReviewID As String
Dim CountR As Integer

CountR = (WorksheetFunction.CountA(Sheets("Front").Range("12:12")) - 1) * 20

CaseID = SheetFront.Cells(12, 2).Value
For c = 3 To 5
    If SheetFront.Cells(12, c).Value <> "" Then
    CaseID = CaseID & ", " & SheetFront.Cells(12, c).Value
    End If
Next c

Operation = SheetFront.Cells(13, 2).Value
For c = 3 To 5
    If SheetFront.Cells(13, c).Value <> "" Then
    Operation = Operation & ", " & Chr(10) & SheetFront.Cells(13, c).Value
    End If
Next c

ReviewID = SheetFront.Cells(23, 2).Value
For c = 3 To 5
    If SheetFront.Cells(23, c).Value <> "" Then
    ReviewID = ReviewID & ", " & SheetFront.Cells(23, c).Value
    End If
Next c

Sheets("Instructions").Range("C7").Value = SheetFront.Range("B5").Value '--- BeneficiaryName ---
Sheets("Instructions").Rows(8).RowHeight = CountR '--- Operation Name ---
Sheets("Instructions").Range("C8").Value = Operation '--- Operation Name ---
Sheets("Instructions").Range("C9").Value = CaseID '--- CaseID ---
Sheets("Instructions").Range("C10").Value = SheetFront.Range("B22").Value '--- Claim period ---
Sheets("Instructions").Range("C11").Value = ReviewID '--- Review ID ---
Sheets("Instructions").Range("C17").Value = SheetFront.Range("B18").Value '--- Intervention Rate ---
Sheets("Instructions").Range("C19").Value = SheetIndicators.Range("B7").Value '--- Case description ---
Sheets("M1").Rows(17).RowHeight = CountR + 20
Sheets("M1").Rows(42).RowHeight = CountR
      
SheetFront.Move Before:=Sheets("A1")
SheetIndicators.Move Before:=Sheets("C1")
SheetESFPart.Move Before:=Sheets("C1")
SheetESFEnter.Move Before:=Sheets("C1")
SheetERDFEnter.Move Before:=Sheets("C1")
SheetSC.Move Before:=Sheets("E1")
SheetIncome.Move Before:=Sheets("F1")
SheetTL_Income.Move Before:=Sheets("F1")
SheetProcurement.Move Before:=Sheets("F3")
SheetClaim_Summary.Move Before:=Sheets("H1")
SheetTL_Expenditure.Move Before:=Sheets("H1")
SheetSample.Move Before:=Sheets("H1")
SheetFinance.Move Before:=Sheets("H1")
SheetStaff.Move Before:=Sheets("H1")
SheetSCO.Move Before:=Sheets("H1")

'--- Set Review details in title bar ---
With SheetFront
    .Range("B26:B29").NumberFormat = "General"
    .Range("B26").Value = "=Certified"
    .Range("B29").Value = "=Authorised"
End With
With SheetClaim_Summary
    .Range("B1").Value = "=NCOp & "":"""
    .Range("B2").Value = "=NCCase"
    .Range("C1").Value = "=Operation"
    .Range("C2").Value = "=CaseID"
    .Range("C3").Value = "=Period"
    .Range("C4").Value = "=ReviewID"
    .Range("F1").Value = "=Certified"
    .Range("F2").Value = "=DateC"
    .Range("F3").Value = "=Authorised"
    .Range("F4").Value = "=DateA"
End With
With SheetTL_Expenditure
    .Range("B1").Value = "=NCOp & "":"""
    .Range("B2").Value = "=NCCase"
    .Range("C1").Value = "=Operation"
    .Range("C2").Value = "=CaseID"
    .Range("C3").Value = "=Period"
    .Range("C4").Value = "=ReviewID"
    .Range("F1").Value = "=Certified"
    .Range("F2").Value = "=DateC"
    .Range("F3").Value = "=Authorised"
    .Range("F4").Value = "=DateA"
End With
With SheetSample
    .Range("B1").Value = "=NCOp & "":"""
    .Range("B2").Value = "=NCCase"
    .Range("C1").Value = "=Operation"
    .Range("C2").Value = "=CaseID"
    .Range("C3").Value = "=Period"
    .Range("C4").Value = "=ReviewID"
    .Range("F1").Value = "=Certified"
    .Range("F2").Value = "=DateC"
    .Range("F3").Value = "=Authorised"
    .Range("F4").Value = "=DateA"
End With
With SheetFinance
    .Range("B1").Value = "=NCOp & "":"""
    .Range("B2").Value = "=NCCase"
    .Range("C1").Value = "=Operation"
    .Range("C2").Value = "=CaseID"
    .Range("C3").Value = "=Period"
    .Range("C4").Value = "=ReviewID"
    .Range("F1").Value = "=Certified"
    .Range("F2").Value = "=DateC"
    .Range("F3").Value = "=Authorised"
    .Range("F4").Value = "=DateA"
End With
With SheetStaff
    .Range("B1").Value = "=NCOp & "":"""
    .Range("B2").Value = "=NCCase"
    .Range("C1").Value = "=Operation"
    .Range("C2").Value = "=CaseID"
    .Range("C3").Value = "=Period"
    .Range("C4").Value = "=ReviewID"
    .Range("F1").Value = "=Certified"
    .Range("F2").Value = "=DateC"
    .Range("F3").Value = "=Authorised"
    .Range("F4").Value = "=DateA"
End With
With SheetSCO
    .Range("B1").Value = "=NCOp & "":"""
    .Range("B2").Value = "=NCCase"
    .Range("C1").Value = "=Operation"
    .Range("C2").Value = "=CaseID"
    .Range("C3").Value = "=Period"
    .Range("C4").Value = "=ReviewID"
    .Range("F1").Value = "=Certified"
    .Range("F2").Value = "=DateC"
    .Range("F3").Value = "=Authorised"
    .Range("F4").Value = "=DateA"
End With
With SheetIncome
    .Range("B1").Value = "=NCOp & "":"""
    .Range("B2").Value = "=NCCase"
    .Range("C1").Value = "=Operation"
    .Range("C2").Value = "=CaseID"
    .Range("C3").Value = "=Period"
    .Range("C4").Value = "=ReviewID"
    .Range("F1").Value = "=Certified"
    .Range("F2").Value = "=DateC"
    .Range("F3").Value = "=Authorised"
    .Range("F4").Value = "=DateA"
End With
With SheetIndicators
    .Range("B1").Value = "=NCOp & "":"""
    .Range("B2").Value = "=NCCase"
    .Range("C1").Value = "=Operation"
    .Range("C2").Value = "=CaseID"
    .Range("C3").Value = "=Period"
    .Range("C4").Value = "=ReviewID"
    .Range("F1").Value = "=Certified"
    .Range("F2").Value = "=DateC"
    .Range("F3").Value = "=Authorised"
    .Range("F4").Value = "=DateA"
End With
With SheetESFPart
    .Range("C1").Value = "=Operation"
    .Range("C2").Value = "=CaseID"
    .Range("C3").Value = "=Period"
    .Range("C4").Value = "=ReviewID"
    .Range("F1").Value = "=Certified"
    .Range("F2").Value = "=DateC"
    .Range("F3").Value = "=Authorised"
    .Range("F4").Value = "=DateA"
End With
With SheetESFEnter
    .Range("C1").Value = "=Operation"
    .Range("C2").Value = "=CaseID"
    .Range("C3").Value = "=Period"
    .Range("C4").Value = "=ReviewID"
    .Range("F1").Value = "=Certified"
    .Range("F2").Value = "=DateC"
    .Range("F3").Value = "=Authorised"
    .Range("F4").Value = "=DateA"
End With
With SheetERDFEnter
    .Range("C1").Value = "=Operation"
    .Range("C2").Value = "=CaseID"
    .Range("C3").Value = "=Period"
    .Range("C4").Value = "=ReviewID"
    .Range("F1").Value = "=Certified"
    .Range("F2").Value = "=DateC"
    .Range("F3").Value = "=Authorised"
    .Range("F4").Value = "=DateA"
End With
With SheetSC
    .Range("B1").Value = "=NCOp & "":"""
    .Range("B2").Value = "=NCCase"
    .Range("C1").Value = "=Operation"
    .Range("C2").Value = "=CaseID"
    .Range("C3").Value = "=Period"
    .Range("C4").Value = "=ReviewID"
    .Range("F1").Value = "=Certified"
    .Range("F2").Value = "=DateC"
    .Range("F3").Value = "=Authorised"
    .Range("F4").Value = "=DateA"
End With
With SheetTL_Income
    .Range("B1").Value = "=NCOp & "":"""
    .Range("B2").Value = "=NCCase"
    .Range("C1").Value = "=Operation"
    .Range("C2").Value = "=CaseID"
    .Range("C3").Value = "=Period"
    .Range("C4").Value = "=ReviewID"
    .Range("F1").Value = "=Certified"
    .Range("F2").Value = "=DateC"
    .Range("F3").Value = "=Authorised"
    .Range("F4").Value = "=DateA"
End With
With SheetProcurement
    .Range("B1").Value = "=NCOp & "":"""
    .Range("B2").Value = "=NCCase"
    .Range("C1").Value = "=Operation"
    .Range("C2").Value = "=CaseID"
    .Range("C3").Value = "=Period"
    .Range("C4").Value = "=ReviewID"
    .Range("F1").Value = "=Certified"
    .Range("F2").Value = "=DateC"
    .Range("F3").Value = "=Authorised"
    .Range("F4").Value = "=DateA"
End With

Dim ws As Worksheet
For Each ws In Worksheets
If ws.Name <> "Instructions" And ws.Name <> "Index" Then ws.Visible = False
Next

Sheets("Instructions").Select

ofname = fname
fname = Application.ActiveWorkbook.Path + "\" + CaseID & "-" & ReviewID & "-Working Papers"
ActiveWorkbook.SaveAs FileName:=fname, FileFormat:=xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
Kill ofname

Application.ScreenUpdating = True

End Sub
Public Function OpenSourceFile()

    fname = Application.GetOpenFilename
    On Error GoTo ErrorHandler
    If fname <> False Then
        Set wbkSource = Workbooks.Open(fname)
    Else
        Exit Function
    End If

Exit Function

ErrorHandler:
    MsgBox "Please close review testing file before running this macro. "
    fname = False

End Function
Attribute VB_Name = "Sheet100"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet101"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet105"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ReviewQA, 64, 41, MSForms, OptionButton"
Attribute VB_Control = "CBN1, 60, 42, MSForms, CheckBox"
Attribute VB_Control = "CBE3, 54, 43, MSForms, CheckBox"
Attribute VB_Control = "CBL1, 30, 44, MSForms, CheckBox"
Attribute VB_Control = "CBFront, 1, 45, MSForms, CheckBox"
Attribute VB_Control = "CBB1, 2, 46, MSForms, CheckBox"
Attribute VB_Control = "CBB2, 3, 47, MSForms, CheckBox"
Attribute VB_Control = "CBD1, 4, 48, MSForms, CheckBox"
Attribute VB_Control = "CBD2, 5, 49, MSForms, CheckBox"
Attribute VB_Control = "CBE1, 6, 50, MSForms, CheckBox"
Attribute VB_Control = "CBE2, 7, 51, MSForms, CheckBox"
Attribute VB_Control = "CBF1, 8, 52, MSForms, CheckBox"
Attribute VB_Control = "CBF2, 9, 53, MSForms, CheckBox"
Attribute VB_Control = "CBF3, 10, 54, MSForms, CheckBox"
Attribute VB_Control = "CBF4, 12, 55, MSForms, CheckBox"
Attribute VB_Control = "CBF5, 13, 56, MSForms, CheckBox"
Attribute VB_Control = "CBF7, 15, 57, MSForms, CheckBox"
Attribute VB_Control = "CBG1, 16, 58, MSForms, CheckBox"
Attribute VB_Control = "CBG2, 17, 59, MSForms, CheckBox"
Attribute VB_Control = "CBH1, 18, 60, MSForms, CheckBox"
Attribute VB_Control = "CBJ1, 19, 61, MSForms, CheckBox"
Attribute VB_Control = "CBK1, 20, 62, MSForms, CheckBox"
Attribute VB_Control = "CBA1, 21, 63, MSForms, CheckBox"
Attribute VB_Control = "Refresh, 22, 64, MSForms, CommandButton"
Attribute VB_Control = "Reset, 23, 65, MSForms, ToggleButton"
Attribute VB_Control = "CBG3, 24, 66, MSForms, CheckBox"
Attribute VB_Control = "CBG4, 25, 67, MSForms, CheckBox"
Attribute VB_Control = "CBG7, 26, 68, MSForms, CheckBox"
Attribute VB_Control = "CBG6, 27, 69, MSForms, CheckBox"
Attribute VB_Control = "CBG5, 28, 70, MSForms, CheckBox"
Attribute VB_Control = "CBB31, 29, 71, MSForms, CheckBox"
Attribute VB_Control = "CBF51, 31, 72, MSForms, CheckBox"
Attribute VB_Control = "CBF52, 32, 73, MSForms, CheckBox"
Attribute VB_Control = "CBF53, 33, 74, MSForms, CheckBox"
Attribute VB_Control = "CBF54, 34, 75, MSForms, CheckBox"
Attribute VB_Control = "CBF55, 35, 76, MSForms, CheckBox"
Attribute VB_Control = "CBF56, 36, 77, MSForms, CheckBox"
Attribute VB_Control = "CBF6, 39, 78, MSForms, CheckBox"
Attribute VB_Control = "CBC1, 41, 79, MSForms, CheckBox"
Attribute VB_Control = "CBI1, 42, 80, MSForms, CheckBox"
Attribute VB_Control = "ReviewOTS, 50, 81, MSForms, OptionButton"
Attribute VB_Control = "ReviewAV1, 51, 82, MSForms, OptionButton"
Attribute VB_Control = "ReviewAV2, 52, 83, MSForms, OptionButton"
Attribute VB_Control = "CBM, 57, 84, MSForms, CheckBox"
Attribute VB_Control = "CBM1, 58, 85, MSForms, CheckBox"
Attribute VB_Control = "CBM2, 59, 86, MSForms, CheckBox"
Attribute VB_Control = "CBF41, 61, 87, MSForms, CheckBox"
Attribute VB_Control = "CBF42, 62, 88, MSForms, CheckBox"
Attribute VB_Control = "ReviewIB, 63, 89, MSForms, OptionButton"
Attribute VB_Control = "CBB32, 65, 90, MSForms, CheckBox"
Attribute VB_Control = "CBB33, 66, 91, MSForms, CheckBox"
Private Sub CBB1_Click()  '------ Activities ------
If CBB1.Value = False Then
CBB2.Value = False
CBB2.Enabled = False
CBB31.Value = False
CBB31.Enabled = False
CBB32.Value = False
CBB32.Enabled = False
CBB33.Value = False
CBB33.Enabled = False
Else
CBB2.Enabled = True
CBB31.Enabled = True
CBB32.Enabled = True
CBB33.Enabled = True
End If
End Sub

Private Sub CBD1_Click() '------ Special Conditions ------
If CBD1.Value = False Then
CBD2.Value = False
Else
CBD2.Value = True
End If
End Sub

Private Sub CBE1_Click() '------ Match Funding ------
If CBE1.Value = False Then
CBE2.Value = False
CBE2.Enabled = False
CBE3.Value = False
CBE3.Enabled = False
Else
CBE2.Enabled = True
CBE3.Enabled = True
End If
End Sub

Private Sub CBF4_Click() '------ Procurement (Contracting / Non Contracting) ------
If CBF4.Value = False Then
CBF41.Value = False
CBF41.Enabled = False
CBF42.Value = False
CBF42.Enabled = False
Else
CBF41.Enabled = True
CBF42.Enabled = True
End If
End Sub

Private Sub CBF5_Click() '------ Procurement (OJEU) ------
If CBF5.Value = False Then
CBF51.Value = False
CBF51.Enabled = False
CBF52.Value = False
CBF52.Enabled = False
CBF53.Value = False
CBF53.Enabled = False
CBF54.Value = False
CBF54.Enabled = False
CBF55.Value = False
CBF55.Enabled = False
CBF56.Value = False
CBF56.Enabled = False
Else
CBF51.Enabled = True
CBF52.Enabled = True
CBF53.Enabled = True
CBF54.Enabled = True
CBF55.Enabled = True
CBF56.Enabled = True
End If
End Sub


Private Sub CBF1_Click()  '------ Procurement ------
If CBF1.Value = False Then
CBF2.Value = False
CBF3.Value = False
CBF3.Enabled = False
CBF4.Value = False
CBF4.Enabled = False
CBF5.Value = False
CBF5.Enabled = False
CBF6.Value = False
CBF6.Enabled = False
CBF7.Value = False
CBF7.Enabled = False
Else
CBF2.Value = True
CBF3.Enabled = True
CBF4.Enabled = True
CBF5.Enabled = True
CBF6.Enabled = True
CBF7.Enabled = True
End If
End Sub


Private Sub CBG1_Click()  '------ Financial Controls ------
If CBG1.Value = False Then
CBG2.Value = False
CBG2.Enabled = False
CBG3.Value = False
CBG3.Enabled = False
CBG4.Value = False
CBG4.Enabled = False
CBG5.Value = False
CBG5.Enabled = False
CBG6.Value = False
CBG6.Enabled = False
CBG7.Value = False
CBG7.Enabled = False
Else
CBG2.Enabled = True
CBG3.Enabled = True
CBG4.Enabled = True
CBG5.Enabled = True
CBG6.Enabled = True
CBG7.Enabled = True
End If
End Sub

Private Sub CBM_Click()  '------ Findings Report ------
If CBM.Value = False Then
CBM1.Value = False
CBM1.Enabled = False
CBM2.Value = False
CBM2.Enabled = False
Else
CBM1.Value = True
CBM1.Enabled = True
CBM2.Value = True
CBM2.Enabled = True
End If
End Sub

Private Sub CBM1_Click()  '------ Findings Report - Front ------
If CBM1.Value = False Then
CBM.Value = False
Else
CBM.Value = True
End If
End Sub

Private Sub CBM2_Click()  '------ Findings Report - Findings ------
If CBM2.Value = False Then
CBM.Value = False
Else
CBM.Value = True
End If
End Sub

Private Sub Refresh_Click()

Dim Temp As Range
Dim M1v As String '--- report front page switch between MVT / ESNR ---
M1v = "M1"

Application.ScreenUpdating = False

'------ Review Type: Admin Verification or On the Spot ------
If ReviewOTS.Value = True Then '--- OTS ---
    MVT = False '--- general MVT reviews ---
    OTS = False '--- On The Spot ---
    AV = True '--- All Admin Verifications ---
    AV1 = True '--- On-site Admin Verification only ---
    AV2 = True '--- Desk based Admin Verification ---
    IB = True '---IB Verification reviews only ---
    QA = True
End If

If ReviewAV1.Value = "True" Then '--- AV On site Claim ---
    MVT = False
    OTS = True
    AV = False
    AV1 = False
    AV2 = True
    IB = True
    QA = True
End If

If ReviewAV2.Value = "True" Then '--- AV Desk Based Claims ---
    MVT = False
    OTS = True
    AV = False
    AV1 = True
    AV2 = False
    IB = True
    QA = True
End If

If ReviewIB.Value = "True" Then '--- IB Verification Reviews for ESNR ---
    MVT = True
    OTS = True
    AV = True
    AV1 = True
    AV2 = True
    IB = False
    QA = True
End If

If ReviewQA.Value = "True" Then '--- MVT Quality Assurance Reviews ---
    MVT = False
    OTS = True
    AV = True
    AV1 = True
    AV2 = True
    IB = True
    QA = False
End If

Sheets("A1").Range("OTS.A1").EntireRow.Hidden = OTS
Sheets("A1").Range("AV.A1").EntireRow.Hidden = AV
Sheets("A1").Range("AV.1.A1").EntireRow.Hidden = AV1
Sheets("A1").Range("AV.2.A1").EntireRow.Hidden = AV2
Sheets("A1").Range("MVT.A1").EntireRow.Hidden = MVT
Sheets("A1").Range("QA.A1").EntireRow.Hidden = QA
Sheets("A1").Range("IB.A1").EntireRow.Hidden = IB
Sheets("B1").Range("OTS.B1").EntireRow.Hidden = OTS
Sheets("B1").Range("MVT.B1").EntireRow.Hidden = MVT
Sheets("B1").Range("IB.B1").EntireRow.Hidden = IB
Sheets("B1").Range("AV.1.B1").EntireRow.Hidden = AV1
Sheets("B1").Range("AV.2.B1").EntireRow.Hidden = AV2
Sheets("B1").Range("QA.B1").EntireRow.Hidden = QA
Sheets("D1").Range("MVT.D1").EntireRow.Hidden = MVT
Sheets("D1").Range("IB.D1").EntireRow.Hidden = IB
Sheets("E1").Range("AV.E1").EntireRow.Hidden = AV
Sheets("E1").Range("QA.E1").EntireRow.Hidden = QA
'Sheets("F1").Range("OTS.F1").EntireRow.Hidden = OTS
Sheets("G1").Range("OTS.G1").EntireRow.Hidden = OTS
Sheets("G1").Range("AV.G1").EntireRow.Hidden = AV
Sheets("G1").Range("AV.1.G1").EntireRow.Hidden = AV1
Sheets("G1").Range("AV.2.G1").EntireRow.Hidden = AV2
Sheets("G1").Range("MVT.G1").EntireRow.Hidden = MVT
Sheets("G1").Range("IB.G1").EntireRow.Hidden = IB
Sheets("G1").Range("QA.G1").EntireRow.Hidden = QA
'Sheets("H1").Range("OTS.H1").EntireRow.Hidden = OTS
'Sheets("H1").Range("AV.H1").EntireRow.Hidden = AV
'Sheets("H1").Range("AV.1.H1").EntireRow.Hidden = AV1
'Sheets("H1").Range("AV.2.H1").EntireRow.Hidden = AV2
Sheets("I1").Range("OTS.I1").EntireRow.Hidden = OTS
Sheets("I1").Range("AV.I1").EntireRow.Hidden = AV
Sheets("J1").Range("OTS.J1").EntireRow.Hidden = OTS
Sheets("J1").Range("IB.J1").EntireRow.Hidden = IB
Sheets("J1").Range("AV.1.J1").EntireRow.Hidden = AV1
Sheets("J1").Range("AV.2.J1").EntireRow.Hidden = AV2
Sheets("J1").Range("QA.J1").EntireRow.Hidden = QA
Sheets("M1").Range("OTSEXSummary").EntireRow.Hidden = OTS

If IB = False Then
Sheets("M1").Visible = False
Sheets("M1 (IB)").Visible = True
M1v = "M1 (IB)"
Sheets("Instructions").Range("C16").Value = "Intermediate Body Verification Review"
Sheets("System").Range("NCOp").Value = "Project"
Sheets("System").Range("NCCase").Value = "Project ID:"
Sheets("System").Range("NCOff").Value = "Verification Officer"
Sheets("System").Range("NCBen").Value = "Beneficiary"
With Sheets("D1")
    .Range("I1").Value = "Ref:" & Chr(10) & "(D1)" & Chr(10) & "Funding Agreement & Pre-conditions"
    .Range("I1").Characters(Start:=6, Length:=4).Font.Size = 18
End With
Sheets("D1").Range("B6").Value = "Funding Agreement & Pre-conditions" & Chr(10) & "Control Objective - The project delivery is compliant with the funding agreement and pre-conditions"
End If
If AV = False Then '--- Review = AV ---
Sheets("M1").Visible = True
Sheets("M1 (IB)").Visible = False
Sheets("Instructions").Range("C16").Value = "Administrative Verification Review"
Sheets("System").Range("NCOp").Value = "Operation"
Sheets("System").Range("NCCase").Value = "Case ID:"
Sheets("System").Range("NCOff").Value = "Lead Officer"
Sheets("System").Range("NCBen").Value = "Beneficiary"
Sheets("System").Range("Section").Value = "Section 3"
With Sheets("D1")
    .Range("I1").Value = "Ref:" & Chr(10) & "(D1)" & Chr(10) & "Special Conditions / Milestones"
    .Range("I1").Characters(Start:=6, Length:=4).Font.Size = 18
End With
Sheets("D1").Range("B6").Value = "Special Conditions / Milestones" & Chr(10) & "Control Objective - The Operation delivery is compliant with the special conditions."
End If
If QA = False Then '--- Review = AV ---
Sheets("M1").Visible = True
Sheets("M1 (IB)").Visible = False
Sheets("Instructions").Range("C16").Value = "Quality Assurance Review"
Sheets("System").Range("NCOp").Value = "Operation"
Sheets("System").Range("NCCase").Value = "Case ID:"
Sheets("System").Range("NCOff").Value = "Lead Officer"
Sheets("System").Range("NCBen").Value = "Intermediary Body"
With Sheets("D1")
    .Range("I1").Value = "Ref:" & Chr(10) & "(D1)" & Chr(10) & "Special Conditions / Milestones"
    .Range("I1").Characters(Start:=6, Length:=4).Font.Size = 18
End With
Sheets("D1").Range("B6").Value = "Special Conditions / Milestones" & Chr(10) & "Control Objective - The Operation delivery is compliant with the special conditions."
End If
If OTS = False Then ' --- Review = OTS ---
Sheets("M1").Visible = True
Sheets("M1 (IB)").Visible = False
Sheets("Instructions").Range("C16").Value = "On The Spot Visit"
Sheets("System").Range("NCOp").Value = "Operation"
Sheets("System").Range("NCCase").Value = "Case ID:"
Sheets("System").Range("NCOff").Value = "Lead Officer"
Sheets("System").Range("NCBen").Value = "Beneficiary"
Sheets("System").Range("Section").Value = "Section 4"
With Sheets("D1")
    .Range("I1").Value = "Ref:" & Chr(10) & "(D1)" & Chr(10) & "Special Conditions / Milestones"
    .Range("I1").Characters(Start:=6, Length:=4).Font.Size = 18
End With
Sheets("D1").Range("B6").Value = "Special Conditions / Milestones" & Chr(10) & "Control Objective - The Operation delivery is compliant with the special conditions."
End If

'------ LEAD SCHEDULES ALWAYS ONE ------
Sheets("A1").Visible = True
Sheets("B1").Visible = True
Sheets("F1").Visible = True
Sheets("G1").Visible = True
Sheets("J1").Visible = True

'------ FRONT SHEET ------
If CBFront.Value = False Then
Sheets("Front").Visible = False
Else
Sheets("Front").Visible = True
End If

'------ ACTIVITY ------
Set Temp = Sheets("B1").Range("BTestB1")
If CBB1.Value = False Then
    If Temp.Value = "" Then Temp.Value = "No"
    If Temp.Offset(0, 3).Value = "" Then Temp.Offset(0, 3).Value = "No outputs/targets achieved at the time of the review"
Else
    If Temp.Value = "No" Then Temp.Value = ""
    If Temp.Offset(0, 3).Value = "No outputs/targets achieved at the time of the review" Then Temp.Offset(0, 3).Value = ""
End If

If CBB2.Value = False Then
Sheets("B2").Visible = False
Else
Sheets("B2").Visible = True
End If

If CBB31.Value = False Then
Sheets("B3.1").Visible = False
Else
Sheets("B3.1").Visible = True
End If

If CBB32.Value = False Then
Sheets("B3.2").Visible = False
Else
Sheets("B3.2").Visible = True
End If

If CBB33.Value = False Then
Sheets("B3.3").Visible = False
Else
Sheets("B3.3").Visible = True
End If

'------ ORGANISATION ------
If CBC1.Value = False Then
If AV = False Then Sheets("C1").Visible = False '--- only removes sheet if review = AV ---
If OTS = False Then Sheets("C1").Visible = True '--- always shows if review = OTS ---
Else
Sheets("C1").Visible = True
End If

'------ SPECIAL CONDITIONS ------
Set Temp = Sheets("D1").Range("DTestD1")
If CBD1.Value = False Then
    If AV = False Then
        Sheets("D1").Visible = True '--- always shows sheet if review = AV ---
        If Temp.Value = "" Then Temp.Value = "No"
        If Temp.Offset(0, 3).Value = "" Then Temp.Offset(0, 3).Value = "No special conditions or milestones open at the time of the review"
    End If
    If OTS = False Then Sheets("D1").Visible = False '--- only removes sheet if review = OTS ---
Else
    Sheets("D1").Visible = True
    If Temp.Value = "No" Then Temp.Value = ""
    If Temp.Offset(0, 3).Value = "No special conditions or milestones open at the time of the review" Then Temp.Offset(0, 3).Value = ""
End If

If CBD2.Value = False Then
Sheets("D2").Visible = False
Else
Sheets("D2").Visible = True
End If

'------- MATCH FUNDING ------
Set Temp = Sheets("E1").Range("ETestE1")
If CBE1.Value = False Then
    If AV = False Then
        Sheets("E1").Visible = True '--- always shows sheet if review = AV ---
        If Temp.Value = "" Then Temp.Value = "No"
        If Temp.Offset(0, 3).Value = "" Then Temp.Offset(0, 3).Value = "No match funding received at the time of the review"
    End If
    If OTS = False Then Sheets("E1").Visible = False '--- only removes sheet if review = OTS ---
Else
    Sheets("E1").Visible = True
    If Temp.Value = "No" Then Temp.Value = ""
    If Temp.Offset(0, 3).Value = "No match funding received at the time of the review" Then Temp.Offset(0, 3).Value = ""
End If

If CBE2.Value = False Then
Sheets("E2").Visible = False
Else
Sheets("E2").Visible = True
End If

If CBE3.Value = False Then
Sheets("E3").Visible = False
Else
Sheets("E3").Visible = True
End If

' ------ PROCUREMENT ------
If CBF2.Value = False Then
Sheets("F2").Visible = False
Else
Sheets("F2").Visible = True
End If

If CBF3.Value = False Then
Sheets("F3").Visible = False
Else
Sheets("F3").Visible = True
End If

Set Temp = Sheets("F1").Range("FTestF41") '--- <OJEU Contracting Authority ---
If CBF41.Value = False Then
Sheets("F4.1").Visible = False
    If Temp.Value = "" Then Temp.Value = "No"
    If Temp.Offset(0, 3).Value = "" Then Temp.Offset(0, 3).Value = "No contracts, valued below OJEU, were tested in this review"
Else
Sheets("F4.1").Visible = True
    If Temp.Value = "No" Then Temp.Value = ""
    If Temp.Offset(0, 3).Value = "No contracts, valued below OJEU, were tested in this review" Then Temp.Offset(0, 3).Value = ""
End If

Set Temp = Sheets("F1").Range("FTestF42") '--- Non Contracting Authority ---
If CBF42.Value = False Then
Sheets("F4.2").Visible = False
    If Temp.Value = "" Then Temp.Value = "No"
    If Temp.Offset(0, 3).Value = "" Then Temp.Offset(0, 3).Value = "No contracts awarded by a non contracting authority, were tested in this review"
Else
Sheets("F4.2").Visible = True
    If Temp.Value = "No" Then Temp.Value = ""
    If Temp.Offset(0, 3).Value = "No contracts awarded by a non contracting authority, were tested in this review" Then Temp.Offset(0, 3).Value = ""
End If

Set Temp = Sheets("F1").Range("FTestF51")
If CBF51.Value = False Then
Sheets("F5.1").Visible = False
    If Temp.Value = "" Then Temp.Value = "No"
    If Temp.Offset(0, 3).Value = "" Then Temp.Offset(0, 3).Value = "No open procedures were tested in this review"
Else
Sheets("F5.1").Visible = True
    If Temp.Value = "No" Then Temp.Value = ""
    If Temp.Offset(0, 3).Value = "No open procedures were tested in this review" Then Temp.Offset(0, 3).Value = ""
End If

Set Temp = Sheets("F1").Range("FTestF52")
If CBF52.Value = False Then
Sheets("F5.2").Visible = False
    If Temp.Value = "" Then Temp.Value = "No"
    If Temp.Offset(0, 3).Value = "" Then Temp.Offset(0, 3).Value = "No restricted procedures were tested in this review"
Else
Sheets("F5.2").Visible = True
    If Temp.Value = "No" Then Temp.Value = ""
    If Temp.Offset(0, 3).Value = "No restricted procedures were tested in this review" Then Temp.Offset(0, 3).Value = ""
End If

Set Temp = Sheets("F1").Range("FTestF53")
If CBF53.Value = False Then
Sheets("F5.3").Visible = False
    If Temp.Value = "" Then Temp.Value = "No"
    If Temp.Offset(0, 3).Value = "" Then Temp.Offset(0, 3).Value = "No negotiated procedures were tested in this review"
Else
Sheets("F5.3").Visible = True
    If Temp.Value = "No" Then Temp.Value = ""
    If Temp.Offset(0, 3).Value = "No negotiated procedures were tested in this review" Then Temp.Offset(0, 3).Value = ""
End If

Set Temp = Sheets("F1").Range("FTestF54")
If CBF54.Value = False Then
Sheets("F5.4").Visible = False
    If Temp.Value = "" Then Temp.Value = "No"
    If Temp.Offset(0, 3).Value = "" Then Temp.Offset(0, 3).Value = "No negotiated procedures were tested in this review"
Else
Sheets("F5.4").Visible = True
    If Temp.Value = "No" Then Temp.Value = ""
    If Temp.Offset(0, 3).Value = "No negotiated procedures were tested in this review" Then Temp.Offset(0, 3).Value = ""
End If

Set Temp = Sheets("F1").Range("FTestF55")
If CBF55.Value = False Then
Sheets("F5.5").Visible = False
    If Temp.Value = "" Then Temp.Value = "No"
    If Temp.Offset(0, 3).Value = "" Then Temp.Offset(0, 3).Value = "No competitive dialogue procedures were tested in this review"
Else
Sheets("F5.5").Visible = True
    If Temp.Value = "No" Then Temp.Value = ""
    If Temp.Offset(0, 3).Value = "No competitive dialogue procedures were tested in this review" Then Temp.Offset(0, 3).Value = ""
End If

Set Temp = Sheets("F1").Range("FTestF56")
If CBF56.Value = False Then
Sheets("F5.6").Visible = False
    If Temp.Value = "" Then Temp.Value = "No"
    If Temp.Offset(0, 3).Value = "" Then Temp.Offset(0, 3).Value = "No innovative partnership procedures were tested in this review"
Else
Sheets("F5.6").Visible = True
    If Temp.Value = "No" Then Temp.Value = ""
    If Temp.Offset(0, 3).Value = "No innovative partnership procedures were tested in this review" Then Temp.Offset(0, 3).Value = ""
End If

Set Temp = Sheets("F1").Range("FTestF6")
If CBF6.Value = False Then
Sheets("F6").Visible = False
    If Temp.Value = "" Then Temp.Value = "No"
    If Temp.Offset(0, 3).Value = "" Then Temp.Offset(0, 3).Value = "No call off from a framework was tested in this review"
Else
Sheets("F6").Visible = True
    If Temp.Value = "No" Then Temp.Value = ""
    If Temp.Offset(0, 3).Value = "No call off from a framework was tested in this review" Then Temp.Offset(0, 3).Value = ""
End If

If CBF7.Enabled = True Then
    Set Temp = Sheets("F1").Range("FTestF7")
    If CBF7.Value = False Then
    Sheets("F7").Visible = False
        If Temp.Value = "" Then Temp.Value = "No"
        If Temp.Offset(0, 3).Value = "" Then Temp.Offset(0, 3).Value = "No previously let contracts were tested in this review"
    Else
    Sheets("F7").Visible = True
        If Temp.Value = "No" Then Temp.Value = ""
        If Temp.Offset(0, 3).Value = "No previously let contracts were tested in this review" Then Temp.Offset(0, 3).Value = ""
    End If
Else
Sheets("F7").Visible = False
End If

'------ FINANCIAL ------
If CBG2.Value = False Then
Sheets("G2").Visible = False
Else
Sheets("G2").Visible = True
End If

If CBG3.Value = False Then
Sheets("G3").Visible = False
Else
Sheets("G3").Visible = True
End If

If CBG4.Value = False Then
Sheets("G4").Visible = False
Else
Sheets("G4").Visible = True
End If

If CBG5.Value = False Then
Sheets("G5").Visible = False
Else
Sheets("G5").Visible = True
End If

If CBG6.Value = False Then
Sheets("G6").Visible = False
Else
Sheets("G6").Visible = True
End If

If CBG7.Value = False Then
Sheets("G7").Visible = False
Else
Sheets("G7").Visible = True
End If

'------ STATE AID ------
If CBH1.Value = False Then
If AV = False Then Sheets("H1").Visible = True '--- always shows if review = AV ---
If OTS = False Then Sheets("H1").Visible = False '--- only remove sheet if review = OTS ---
If IB = False Then Sheets("H1").Visible = True '--- always shows if review = IB ---
If QA = False Then Sheets("H1").Visible = True '--- always shows if review = QA ---
Else
Sheets("H1").Visible = True
End If

'------ PUBLICITY ------
If CBI1.Value = False Then
If AV = False Then Sheets("I1").Visible = True '--- always shows if review = AV ---
If OTS = False Then Sheets("I1").Visible = True '--- always shows if review = OTS ---
If IB = False Then Sheets("I1").Visible = False '--- hidden if review = IB ---
If QA = False Then Sheets("I1").Visible = False '--- hidden if review = QA ---
Else
Sheets("I1").Visible = True
End If

'------ CONFLICT OF INTEREST ------
If CBK1.Value = False Then
Sheets("K1").Visible = False
Else
Sheets("K1").Visible = True
End If

'------ HYPERLINKS ------
If CBL1.Value = False Then
Sheets("L1").Visible = False
Else
Sheets("L1").Visible = True
End If

'------ SUMMARY OF FINDINGS ------
If CBM.Value = False Then
Sheets(M1v).Visible = False
Sheets("M2").Visible = False
Else
Sheets(M1v).Visible = True
Sheets("M2").Visible = True
End If

'------ IRREG APPROVAL FORMS ------
If CBN1.Value = False Then
Sheets("N1").Visible = False
Else
Sheets("N1").Visible = True
End If

Application.ScreenUpdating = True

End Sub

Private Sub ReviewOTS_Click() '---OTS Reviews---
Call Reset_Click
End Sub

Private Sub ReviewAV1_Click() '---AV first claim---
Call Reset_Click
End Sub

Private Sub ReviewAV2_Click() '---AV subsequent claims---
Call Reset_Click
End Sub

Private Sub ReviewIB_Click() '---IB claims---
Call Reset_Click
End Sub

Private Sub ReviewQA_Click() '---QA claims---
Call Reset_Click
End Sub

Private Sub Reset_Click()

If ReviewAV1.Value = True Or ReviewAV2.Value = True Then '--- Default schedules of AV ---
CBFront.Value = True
CBA1.Value = True
CBB1.Value = True
    CBB2.Value = True
    CBB31.Value = True
    CBB32.Value = True
    CBB33.Value = True
CBC1.Value = False
CBD1.Value = True
    CBD2.Value = True
CBE1.Value = True
    CBE2.Value = True
    CBE3.Value = True
CBF1.Value = True
    CBF2.Value = True
    CBF3.Value = True
    CBF4.Value = True
        CBF41.Value = True
        CBF42.Value = True
    CBF5.Value = True
        CBF51.Value = True
        CBF52.Value = True
        CBF53.Value = True
        CBF54.Value = True
        CBF55.Value = True
        CBF56.Value = False
    CBF6.Value = True
    CBF7.Value = False
CBG1.Value = True
    CBG2.Value = True
    CBG3.Value = True
    CBG4.Value = True
    CBG5.Value = True
    CBG6.Value = True
    CBG7.Value = False
CBH1.Value = True
CBI1.Value = True
CBJ1.Value = True
CBK1.Value = True
CBL1.Value = True
CBM.Value = True
CBN1.Value = True
End If

If ReviewIB.Value = True Then '--- Default schedules of IB ---
CBFront.Value = True
CBA1.Value = True
CBB1.Value = True
    CBB2.Value = True
    CBB31.Value = True
    CBB32.Value = True
    CBB33.Value = True
CBC1.Value = False
CBD1.Value = True
    CBD2.Value = True
CBE1.Value = True
    CBE2.Value = True
    CBE3.Value = True
CBF1.Value = True
    CBF2.Value = True
    CBF3.Value = False
    CBF4.Value = True
        CBF41.Value = True
        CBF42.Value = True
    CBF5.Value = False
    CBF6.Value = False
    CBF7.Value = False
CBG1.Value = True
    CBG2.Value = True
    CBG3.Value = True
    CBG4.Value = True
    CBG5.Value = True
    CBG6.Value = True
    CBG7.Value = False
CBH1.Value = True
CBI1.Value = False
CBJ1.Value = True
CBK1.Value = True
CBL1.Value = True
CBM.Value = True
CBN1.Value = False
End If

If ReviewOTS.Value = True Then '--- Default schedules of OTS ---
CBFront.Value = True
CBA1.Value = True
CBB1.Value = True
    CBB2.Value = True
    CBB31.Value = True
    CBB32.Value = True
    CBB33.Value = True
CBC1.Value = True
CBD1.Value = False
CBE1.Value = False
CBF1.Value = True
    CBF2.Value = True
    CBF3.Value = False
    CBF4.Value = False
    CBF5.Value = False
    CBF6.Value = False
    CBF7.Value = True
CBG1.Value = True
    CBG2.Value = True
    CBG3.Value = True
    CBG4.Value = True
    CBG5.Value = True
    CBG6.Value = True
    CBG7.Value = False
CBH1.Value = False
CBI1.Value = True
CBJ1.Value = True
CBK1.Value = True
CBL1.Value = True
CBM.Value = True
CBN1.Value = True
End If

If ReviewQA.Value = True Then '--- Default schedules of QA ---
CBFront.Value = True
CBA1.Value = True
CBB1.Value = True
    CBB2.Value = True
    CBB31.Value = True
    CBB32.Value = True
    CBB33.Value = True
CBC1.Value = False
CBD1.Value = True
    CBD2.Value = True
CBE1.Value = True
    CBE2.Value = True
    CBE3.Value = True
CBF1.Value = True
    CBF2.Value = True
    CBF3.Value = True
    CBF4.Value = False
    CBF5.Value = False
    CBF6.Value = False
    CBF7.Value = False
CBG1.Value = True
    CBG2.Value = True
    CBG3.Value = True
    CBG4.Value = True
    CBG5.Value = True
    CBG6.Value = True
    CBG7.Value = False
CBH1.Value = True
CBI1.Value = False
CBJ1.Value = True
CBK1.Value = True
CBL1.Value = True
CBM.Value = True
CBN1.Value = True
End If

Reset.Value = False
End Sub
Attribute VB_Name = "Sheet110"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet120"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 1, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Findings" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount - 1

End Sub
Attribute VB_Name = "Sheet130"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 1, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Findings" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount - 1

End Sub
Attribute VB_Name = "Sheet140"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 1, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Findings" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount - 1

End Sub

Attribute VB_Name = "Sheet150"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 1, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Findings" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount - 1

End Sub


Attribute VB_Name = "Sheet160"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "FlowChart, 3, 1, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Findings" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount - 1

End Sub

Private Sub FlowChart_click()

Dim Q1 As String '--- Framework / Contract ---
Dim Q1a As String '--- Partial ---
Dim Q2 As String '--- Contracting Authority ---
Dim Q3 As String '--- OJEU CA ---
Dim Q3a As String '--- OJEU Non CA ---
Dim Q4 As String '--- Policy ---
Dim X As String
Dim y As String

X = "procured contract"
y = ""

Q1 = MsgBox("Are you testing a call off from a framework agreement?", vbYesNoCancel, "Nature of contract")
If Q1 = vbYes Then
    Q1a = MsgBox("Has it been approved to carry out partial testing only on the framework agreement?", vbYesNoCancel, "Framework Agreement")
    If Q1a = vbYes Then
        MsgBox ("Please complete schedule 'F6' only." & Chr(10) & Chr(10) & "This covers both the partial testing of the framework agreement and the testing of the call off.")
        Exit Sub
    End If
    If Q1a = vbNo Then
        X = "framework agreement"
        y = Chr(10) & Chr(10) & "Test the call off from the framework agreement on schedule 'F6'."
    End If
    If Q1a = vbCancel Then Exit Sub
End If
If Q1 = vbCancel Then Exit Sub

Q2 = MsgBox("Is the " & X & " let by a Contracting Authority?", vbYesNoCancel, "Contracting Authority")
If Q2 = vbYes Then
    Q3 = MsgBox("Is the contract value above the OJEU threshold?", vbYesNoCancel, "OJEU threshold")
    If Q3 = vbYes Then MsgBox ("Test the compliant letting of the " & X & " on schedule 'F5'." & y)
    If Q3 = vbNo Then MsgBox ("Test the compliant letting of the " & X & " on schedule 'F4.1'." & y)
    If Q3 = vbCancel Then Exit Sub
End If
If Q2 = vbNo Then
    Q4 = MsgBox("Does the non contracting authority's own procurement policy tie them to the Public Contracts Regulations?", vbYesNoCancel, "Policy")
    If Q4 = vbYes Then
        Q3a = MsgBox("Is the contract value above the OJEU threshold?", vbYesNoCancel, "OJEU threshold")
        If Q3a = vbYes Then MsgBox ("Test the compliant letting of the " & X & " on schedule 'F5'." & y)
        If Q3a = vbNo Then MsgBox ("Test the compliant letting of the " & X & " on schedule 'F4.2'." & y)
        If Q3a = vbCancel Then Exit Sub
    End If
    If Q4 = vbNo Then MsgBox ("Test the compliant letting of the " & X & " on schedule 'F4.2'." & y)
    If Q4 = vbCancel Then Exit Sub
End If
If Q2 = vbCancel Then Exit Sub

End Sub


Attribute VB_Name = "Sheet165"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet170"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 2, MSForms, CommandButton"
Attribute VB_Control = "AddSchedule, 2, 3, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub
Private Sub AddSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim NewSchedule As Variant
Dim NewRef As String

Application.ScreenUpdating = False

Set Template = Worksheets("F4.1 Template")
SCount = Template.Range("A1").Value
NewRef = "F4.1." & SCount

If SCount = 2 Then Template.Copy after:=Sheets("F4.1")
If SCount > 2 Then Template.Copy after:=Sheets("F4.1." & SCount - 1)
Sheets("F4.1 Template (2)").Name = NewRef
Sheets(NewRef).Visible = True
Set NewSchedule = Worksheets(NewRef)

With NewSchedule.Range("I1:J4")
    .Value = "Ref:" & Chr(10) & "(" & NewRef & ")" & Chr(10) & "Procurement - Contracting Authorities"
    .Characters(Start:=6, Length:=8).Font.Size = 18
End With

NewSchedule.Range("A1").ClearContents
With ActiveWorkbook.Worksheets(NewRef).Names("CorrectionF4.1.Template")
        .Name = "Correction" & NewRef
End With
    
Template.Range("A1").Value = Template.Range("A1").Value + 1
Sheets(NewRef).Select

Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "Sheet171"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 2, MSForms, CommandButton"
Attribute VB_Control = "RemoveSchedule, 2, 3, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub

Private Sub RemoveSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim DeleteSchedule As Variant
Dim Proceed As Integer

Set Template = Worksheets("F4.1 Template")
SCount = Template.Range("A1").Value
Set DeleteSchedule = Worksheets("F4.1." & SCount - 1)

If ActiveSheet.Name = DeleteSchedule.Name Then
Proceed = MsgBox(Prompt:="Warning: Data may exist on schedule " & DeleteSchedule.Name & Chr(10) & _
    "To permanently delete the data, press OK.", Buttons:=1, Title:="Warning")
If Proceed = 2 Then Exit Sub

Application.DisplayAlerts = False
Template.Range("A1").Value = Template.Range("A1").Value - 1
DeleteSchedule.Delete

Else
MsgBox "Please remove schedule " & DeleteSchedule.Name & " before trying to remove schedule " & ActiveSheet.Name & vbCrLf _
        & "The sequential order of the schedules should be maintained."
End If

End Sub
Attribute VB_Name = "Sheet180"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "AddSchedule, 2, 1, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub
Private Sub AddSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim NewSchedule As Variant
Dim NewRef As String

Application.ScreenUpdating = False

Set Template = Worksheets("F4.2 Template")
SCount = Template.Range("A1").Value
NewRef = "F4.2." & SCount

If SCount = 2 Then Template.Copy after:=Sheets("F4.2")
If SCount > 2 Then Template.Copy after:=Sheets("F4.2." & SCount - 1)
Sheets("F4.2 Template (2)").Name = NewRef
Sheets(NewRef).Visible = True
Set NewSchedule = Worksheets(NewRef)

With NewSchedule.Range("I1:J4")
    .Value = "Ref:" & Chr(10) & "(" & NewRef & ")" & Chr(10) & "Procurement - Non Contracting Authorities"
    .Characters(Start:=6, Length:=8).Font.Size = 18
End With

NewSchedule.Range("A1").ClearContents
With ActiveWorkbook.Worksheets(NewRef).Names("CorrectionF4.2.Template")
        .Name = "Correction" & NewRef
End With
    
Template.Range("A1").Value = Template.Range("A1").Value + 1
Sheets(NewRef).Select

Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "Sheet181"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "RemoveSchedule, 2, 1, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub

Private Sub RemoveSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim DeleteSchedule As Variant
Dim Proceed As Integer

Set Template = Worksheets("F4.2 Template")
SCount = Template.Range("A1").Value
Set DeleteSchedule = Worksheets("F4.2." & SCount - 1)

If ActiveSheet.Name = DeleteSchedule.Name Then
Proceed = MsgBox(Prompt:="Warning: Data may exist on schedule " & DeleteSchedule.Name & Chr(10) & _
    "To permanently delete the data, press OK.", Buttons:=1, Title:="Warning")
If Proceed = 2 Then Exit Sub

Application.DisplayAlerts = False
Template.Range("A1").Value = Template.Range("A1").Value - 1
DeleteSchedule.Delete

Else
MsgBox "Please remove schedule " & DeleteSchedule.Name & " before trying to remove schedule " & ActiveSheet.Name & vbCrLf _
        & "The sequential order of the schedules should be maintained."
End If

End Sub
Attribute VB_Name = "Sheet210"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 2, MSForms, CommandButton"
Attribute VB_Control = "AddSchedule, 2, 3, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub
Private Sub AddSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim NewSchedule As Variant
Dim NewRef As String

Application.ScreenUpdating = False

Set Template = Worksheets("F5.1 Template")
SCount = Template.Range("A1").Value
NewRef = "F5.1." & SCount

If SCount = 2 Then Template.Copy after:=Sheets("F5.1")
If SCount > 2 Then Template.Copy after:=Sheets("F5.1." & SCount - 1)
Sheets("F5.1 Template (2)").Name = NewRef
Sheets(NewRef).Visible = True
Set NewSchedule = Worksheets(NewRef)

With NewSchedule.Range("I1:J4")
    .Value = "Ref:" & Chr(10) & "(" & NewRef & ")" & Chr(10) & "Procurement - Open Procedure"
    .Characters(Start:=6, Length:=8).Font.Size = 18
End With

NewSchedule.Range("A1").ClearContents
With ActiveWorkbook.Worksheets(NewRef).Names("CorrectionF5.1.Template")
        .Name = "Correction" & NewRef
End With
    
Template.Range("A1").Value = Template.Range("A1").Value + 1
Sheets(NewRef).Select

Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "Sheet211"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "RemoveSchedule, 2, 2, MSForms, CommandButton"
Attribute VB_Control = "Add, 1, 3, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub
Private Sub RemoveSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim DeleteSchedule As Variant
Dim Proceed As Integer

Set Template = Worksheets("F5.1 Template")
SCount = Template.Range("A1").Value
Set DeleteSchedule = Worksheets("F5.1." & SCount - 1)

If ActiveSheet.Name = DeleteSchedule.Name Then
Proceed = MsgBox(Prompt:="Warning: Data may exist on schedule " & DeleteSchedule.Name & Chr(10) & _
    "To permanently delete the data, press OK.", Buttons:=1, Title:="Warning")
If Proceed = 2 Then Exit Sub

Application.DisplayAlerts = False
Template.Range("A1").Value = Template.Range("A1").Value - 1
DeleteSchedule.Delete

Else
MsgBox "Please remove schedule " & DeleteSchedule.Name & " before trying to remove schedule " & ActiveSheet.Name & vbCrLf _
        & "The sequential order of the schedules should be maintained."
End If

End Sub
Attribute VB_Name = "Sheet225"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 2, MSForms, CommandButton"
Attribute VB_Control = "AddSchedule, 2, 3, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub
Private Sub AddSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim NewSchedule As Variant
Dim NewRef As String

Application.ScreenUpdating = False

Set Template = Worksheets("F5.2 Template")
SCount = Template.Range("A1").Value
NewRef = "F5.2." & SCount

If SCount = 2 Then Template.Copy after:=Sheets("F5.2")
If SCount > 2 Then Template.Copy after:=Sheets("F5.2." & SCount - 1)
Sheets("F5.2 Template (2)").Name = NewRef
Sheets(NewRef).Visible = True
Set NewSchedule = Worksheets(NewRef)

With NewSchedule.Range("I1:J4")
    .Value = "Ref:" & Chr(10) & "(" & NewRef & ")" & Chr(10) & "Procurement - Restricted Procedure"
    .Characters(Start:=6, Length:=8).Font.Size = 18
End With

NewSchedule.Range("A1").ClearContents
With ActiveWorkbook.Worksheets(NewRef).Names("CorrectionF5.2.Template")
        .Name = "Correction" & NewRef
End With
    
Template.Range("A1").Value = Template.Range("A1").Value + 1
Sheets(NewRef).Select

Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "Sheet226"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "RemoveSchedule, 2, 2, MSForms, CommandButton"
Attribute VB_Control = "Add, 1, 3, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub
Private Sub RemoveSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim DeleteSchedule As Variant
Dim Proceed As Integer

Set Template = Worksheets("F5.2 Template")
SCount = Template.Range("A1").Value
Set DeleteSchedule = Worksheets("F5.2." & SCount - 1)

If ActiveSheet.Name = DeleteSchedule.Name Then
Proceed = MsgBox(Prompt:="Warning: Data may exist on schedule " & DeleteSchedule.Name & Chr(10) & _
    "To permanently delete the data, press OK.", Buttons:=1, Title:="Warning")
If Proceed = 2 Then Exit Sub

Application.DisplayAlerts = False
Template.Range("A1").Value = Template.Range("A1").Value - 1
DeleteSchedule.Delete

Else
MsgBox "Please remove schedule " & DeleteSchedule.Name & " before trying to remove schedule " & ActiveSheet.Name & vbCrLf _
        & "The sequential order of the schedules should be maintained."
End If

End Sub
Attribute VB_Name = "Sheet235"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 2, MSForms, CommandButton"
Attribute VB_Control = "AddSchedule, 2, 3, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub
Private Sub AddSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim NewSchedule As Variant
Dim NewRef As String

Application.ScreenUpdating = False

Set Template = Worksheets("F5.3 Template")
SCount = Template.Range("A1").Value
NewRef = "F5.3." & SCount

If SCount = 2 Then Template.Copy after:=Sheets("F5.3")
If SCount > 2 Then Template.Copy after:=Sheets("F5.3." & SCount - 1)
Sheets("F5.3 Template (2)").Name = NewRef
Sheets(NewRef).Visible = True
Set NewSchedule = Worksheets(NewRef)

With NewSchedule.Range("I1:J4")
    .Value = "Ref:" & Chr(10) & "(" & NewRef & ")" & Chr(10) & "Procurement - Negotiated with Advertising"
    .Characters(Start:=6, Length:=8).Font.Size = 18
End With

NewSchedule.Range("A1").ClearContents
With ActiveWorkbook.Worksheets(NewRef).Names("CorrectionF5.3.Template")
        .Name = "Correction" & NewRef
End With
    
Template.Range("A1").Value = Template.Range("A1").Value + 1
Sheets(NewRef).Select

Application.ScreenUpdating = True

End Sub

Attribute VB_Name = "Sheet236"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "RemoveSchedule, 2, 2, MSForms, CommandButton"
Attribute VB_Control = "Add, 1, 3, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub
Private Sub RemoveSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim DeleteSchedule As Variant
Dim Proceed As Integer

Set Template = Worksheets("F5.3 Template")
SCount = Template.Range("A1").Value
Set DeleteSchedule = Worksheets("F5.3." & SCount - 1)

If ActiveSheet.Name = DeleteSchedule.Name Then
Proceed = MsgBox(Prompt:="Warning: Data may exist on schedule " & DeleteSchedule.Name & Chr(10) & _
    "To permanently delete the data, press OK.", Buttons:=1, Title:="Warning")
If Proceed = 2 Then Exit Sub

Application.DisplayAlerts = False
Template.Range("A1").Value = Template.Range("A1").Value - 1
DeleteSchedule.Delete

Else
MsgBox "Please remove schedule " & DeleteSchedule.Name & " before trying to remove schedule " & ActiveSheet.Name & vbCrLf _
        & "The sequential order of the schedules should be maintained."
End If

End Sub
Attribute VB_Name = "Sheet250"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 2, MSForms, CommandButton"
Attribute VB_Control = "AddSchedule, 2, 3, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub
Private Sub AddSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim NewSchedule As Variant
Dim NewRef As String

Application.ScreenUpdating = False

Set Template = Worksheets("F5.4 Template")
SCount = Template.Range("A1").Value
NewRef = "F5.4." & SCount

If SCount = 2 Then Template.Copy after:=Sheets("F5.4")
If SCount > 2 Then Template.Copy after:=Sheets("F5.4." & SCount - 1)
Sheets("F5.4 Template (2)").Name = NewRef
Sheets(NewRef).Visible = True
Set NewSchedule = Worksheets(NewRef)

With NewSchedule.Range("I1:J4")
    .Value = "Ref:" & Chr(10) & "(" & NewRef & ")" & Chr(10) & "Procurement - Negotiated without Advertising"
    .Characters(Start:=6, Length:=8).Font.Size = 18
End With

NewSchedule.Range("A1").ClearContents
With ActiveWorkbook.Worksheets(NewRef).Names("CorrectionF5.4.Template")
        .Name = "Correction" & NewRef
End With
    
Template.Range("A1").Value = Template.Range("A1").Value + 1
Sheets(NewRef).Select

Application.ScreenUpdating = True

End Sub

Attribute VB_Name = "Sheet251"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "RemoveSchedule, 2, 2, MSForms, CommandButton"
Attribute VB_Control = "Add, 1, 3, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub
Private Sub RemoveSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim DeleteSchedule As Variant
Dim Proceed As Integer

Set Template = Worksheets("F5.4 Template")
SCount = Template.Range("A1").Value
Set DeleteSchedule = Worksheets("F5.4." & SCount - 1)

If ActiveSheet.Name = DeleteSchedule.Name Then
Proceed = MsgBox(Prompt:="Warning: Data may exist on schedule " & DeleteSchedule.Name & Chr(10) & _
    "To permanently delete the data, press OK.", Buttons:=1, Title:="Warning")
If Proceed = 2 Then Exit Sub

Application.DisplayAlerts = False
Template.Range("A1").Value = Template.Range("A1").Value - 1
DeleteSchedule.Delete

Else
MsgBox "Please remove schedule " & DeleteSchedule.Name & " before trying to remove schedule " & ActiveSheet.Name & vbCrLf _
        & "The sequential order of the schedules should be maintained."
End If

End Sub
Attribute VB_Name = "Sheet260"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 2, MSForms, CommandButton"
Attribute VB_Control = "AddSchedule, 2, 3, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub
Private Sub AddSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim NewSchedule As Variant
Dim NewRef As String

Application.ScreenUpdating = False

Set Template = Worksheets("F5.5 Template")
SCount = Template.Range("A1").Value
NewRef = "F5.5." & SCount

If SCount = 2 Then Template.Copy after:=Sheets("F5.5")
If SCount > 2 Then Template.Copy after:=Sheets("F5.5." & SCount - 1)
Sheets("F5.5 Template (2)").Name = NewRef
Sheets(NewRef).Visible = True
Set NewSchedule = Worksheets(NewRef)

With NewSchedule.Range("I1:J4")
    .Value = "Ref:" & Chr(10) & "(" & NewRef & ")" & Chr(10) & "Procurement - Competitive Dialogue"
    .Characters(Start:=6, Length:=8).Font.Size = 18
End With

NewSchedule.Range("A1").ClearContents
With ActiveWorkbook.Worksheets(NewRef).Names("CorrectionF5.5.Template")
        .Name = "Correction" & NewRef
End With
    
Template.Range("A1").Value = Template.Range("A1").Value + 1
Sheets(NewRef).Select

Application.ScreenUpdating = True

End Sub

Attribute VB_Name = "Sheet261"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "RemoveSchedule, 2, 2, MSForms, CommandButton"
Attribute VB_Control = "Add, 1, 3, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub
Private Sub RemoveSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim DeleteSchedule As Variant
Dim Proceed As Integer

Set Template = Worksheets("F5.5 Template")
SCount = Template.Range("A1").Value
Set DeleteSchedule = Worksheets("F5.5." & SCount - 1)

If ActiveSheet.Name = DeleteSchedule.Name Then
Proceed = MsgBox(Prompt:="Warning: Data may exist on schedule " & DeleteSchedule.Name & Chr(10) & _
    "To permanently delete the data, press OK.", Buttons:=1, Title:="Warning")
If Proceed = 2 Then Exit Sub

Application.DisplayAlerts = False
Template.Range("A1").Value = Template.Range("A1").Value - 1
DeleteSchedule.Delete

Else
MsgBox "Please remove schedule " & DeleteSchedule.Name & " before trying to remove schedule " & ActiveSheet.Name & vbCrLf _
        & "The sequential order of the schedules should be maintained."
End If

End Sub
Attribute VB_Name = "Sheet270"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 2, MSForms, CommandButton"
Attribute VB_Control = "AddSchedule, 2, 3, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub
Private Sub AddSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim NewSchedule As Variant
Dim NewRef As String

Application.ScreenUpdating = False

Set Template = Worksheets("F5.6 Template")
SCount = Template.Range("A1").Value
NewRef = "F5.6." & SCount

If SCount = 2 Then Template.Copy after:=Sheets("F5.6")
If SCount > 2 Then Template.Copy after:=Sheets("F5.6." & SCount - 1)
Sheets("F5.6 Template (2)").Name = NewRef
Sheets(NewRef).Visible = True
Set NewSchedule = Worksheets(NewRef)

With NewSchedule.Range("I1:J4")
    .Value = "Ref:" & Chr(10) & "(" & NewRef & ")" & Chr(10) & "Procurement - Innovative Partnership"
    .Characters(Start:=6, Length:=8).Font.Size = 18
End With

NewSchedule.Range("A1").ClearContents
With ActiveWorkbook.Worksheets(NewRef).Names("CorrectionF5.6.Template")
        .Name = "Correction" & NewRef
End With
    
Template.Range("A1").Value = Template.Range("A1").Value + 1
Sheets(NewRef).Select

Application.ScreenUpdating = True

End Sub

Attribute VB_Name = "Sheet271"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "RemoveSchedule, 2, 2, MSForms, CommandButton"
Attribute VB_Control = "Add, 1, 3, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub
Private Sub RemoveSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim DeleteSchedule As Variant
Dim Proceed As Integer

Set Template = Worksheets("F5.6 Template")
SCount = Template.Range("A1").Value
Set DeleteSchedule = Worksheets("F5.6." & SCount - 1)

If ActiveSheet.Name = DeleteSchedule.Name Then
Proceed = MsgBox(Prompt:="Warning: Data may exist on schedule " & DeleteSchedule.Name & Chr(10) & _
    "To permanently delete the data, press OK.", Buttons:=1, Title:="Warning")
If Proceed = 2 Then Exit Sub

Application.DisplayAlerts = False
Template.Range("A1").Value = Template.Range("A1").Value - 1
DeleteSchedule.Delete

Else
MsgBox "Please remove schedule " & DeleteSchedule.Name & " before trying to remove schedule " & ActiveSheet.Name & vbCrLf _
        & "The sequential order of the schedules should be maintained."
End If

End Sub
Attribute VB_Name = "Sheet280"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 2, MSForms, CommandButton"
Attribute VB_Control = "AddSchedule, 2, 3, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub
Private Sub AddSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim NewSchedule As Variant
Dim NewRef As String

Application.ScreenUpdating = False

Set Template = Worksheets("F6 Template")
SCount = Template.Range("A1").Value
NewRef = "F6." & SCount

If SCount = 2 Then Template.Copy after:=Sheets("F6")
If SCount > 2 Then Template.Copy after:=Sheets("F6." & SCount - 1)
Sheets("F6 Template (2)").Name = NewRef
Sheets(NewRef).Visible = True
Set NewSchedule = Worksheets(NewRef)

With NewSchedule.Range("I1:J4")
    .Value = "Ref:" & Chr(10) & "(" & NewRef & ")" & Chr(10) & "Framework Agreement - Call Off"
    .Characters(Start:=6, Length:=7).Font.Size = 18
End With

NewSchedule.Range("A1").ClearContents
With ActiveWorkbook.Worksheets(NewRef).Names("CorrectionF6.Template")
        .Name = "Correction" & NewRef
End With
    
Template.Range("A1").Value = Template.Range("A1").Value + 1
Sheets(NewRef).Select

Application.ScreenUpdating = True

End Sub

Attribute VB_Name = "Sheet281"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "RemoveSchedule, 2, 2, MSForms, CommandButton"
Attribute VB_Control = "Add, 1, 3, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub
Private Sub RemoveSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim DeleteSchedule As Variant
Dim Proceed As Integer

Set Template = Worksheets("F6 Template")
SCount = Template.Range("A1").Value
Set DeleteSchedule = Worksheets("F6." & SCount - 1)

If ActiveSheet.Name = DeleteSchedule.Name Then
Proceed = MsgBox(Prompt:="Warning: Data may exist on schedule " & DeleteSchedule.Name & Chr(10) & _
    "To permanently delete the data, press OK.", Buttons:=1, Title:="Warning")
If Proceed = 2 Then Exit Sub

Application.DisplayAlerts = False
Template.Range("A1").Value = Template.Range("A1").Value - 1
DeleteSchedule.Delete

Else
MsgBox "Please remove schedule " & DeleteSchedule.Name & " before trying to remove schedule " & ActiveSheet.Name & vbCrLf _
        & "The sequential order of the schedules should be maintained."
End If

End Sub
Attribute VB_Name = "Sheet300"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 2, MSForms, CommandButton"
Attribute VB_Control = "AddSchedule, 2, 3, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub
Private Sub AddSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim NewSchedule As Variant
Dim NewRef As String

Application.ScreenUpdating = False

Set Template = Worksheets("F7 Template")
SCount = Template.Range("A1").Value
NewRef = "F7." & SCount

If SCount = 2 Then Template.Copy after:=Sheets("F7")
If SCount > 2 Then Template.Copy after:=Sheets("F7." & SCount - 1)
Sheets("F7 Template (2)").Name = NewRef
Sheets(NewRef).Visible = True
Set NewSchedule = Worksheets(NewRef)

With NewSchedule.Range("I1:J4")
    .Value = "Ref:" & Chr(10) & "(" & NewRef & ")" & Chr(10) & "Procurement - Previously Audited"
    .Characters(Start:=6, Length:=6).Font.Size = 18
End With

NewSchedule.Range("A1").ClearContents
With ActiveWorkbook.Worksheets(NewRef).Names("CorrectionF7.Template")
        .Name = "Correction" & NewRef
End With
    
Template.Range("A1").Value = Template.Range("A1").Value + 1
Sheets(NewRef).Select

Application.ScreenUpdating = True

End Sub

Attribute VB_Name = "Sheet301"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "RemoveSchedule, 2, 2, MSForms, CommandButton"
Attribute VB_Control = "Add, 1, 3, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Correction" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount

End Sub
Private Sub RemoveSchedule_Click()

Dim SCount As Integer
Dim Template As Variant
Dim DeleteSchedule As Variant
Dim Proceed As Integer

Set Template = Worksheets("F7 Template")
SCount = Template.Range("A1").Value
Set DeleteSchedule = Worksheets("F7." & SCount - 1)

If ActiveSheet.Name = DeleteSchedule.Name Then
Proceed = MsgBox(Prompt:="Warning: Data may exist on schedule " & DeleteSchedule.Name & Chr(10) & _
    "To permanently delete the data, press OK.", Buttons:=1, Title:="Warning")
If Proceed = 2 Then Exit Sub

Application.DisplayAlerts = False
Template.Range("A1").Value = Template.Range("A1").Value - 1
DeleteSchedule.Delete

Else
MsgBox "Please remove schedule " & DeleteSchedule.Name & " before trying to remove schedule " & ActiveSheet.Name & vbCrLf _
        & "The sequential order of the schedules should be maintained."
End If

End Sub
Attribute VB_Name = "Sheet320"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 1, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Findings" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount - 1

End Sub
Attribute VB_Name = "Sheet325"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 2, 1, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Findings" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount - 1

End Sub

Attribute VB_Name = "Sheet330"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 1, 1, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Findings" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount - 1

End Sub

Attribute VB_Name = "Sheet335"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Add, 2, 1, MSForms, CommandButton"
Private Sub Add_Click()
Dim InsertRow As Integer
Dim Findings As Range
Dim RowCount As Integer

Set Findings = Range("Findings" & ActiveSheet.Name)
RowCount = Findings.Rows.Count
InsertRow = Findings.Rows(RowCount).Row

Sheets("System").Range("Findings").Copy
Rows(InsertRow).Insert Shift:=xlDown

Range("A" & InsertRow).Value = RowCount - 1

End Sub

Attribute VB_Name = "Sheet340"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet350"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Hyperlink, 2, 0, MSForms, CommandButton"
Public Sub Hyperlink_Click()

Application.Run Workbooks("PERSONAL.XLSB").Name & "!UserFormHyperlink"
'InsertHyperlink.Show

End Sub
Attribute VB_Name = "Sheet355"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "PrintReport, 6, 1, MSForms, CommandButton"
Private Sub PrintReport_Click()

info = MsgBox("Please ensure that Section 3 - Findings & Recommendations on section 'M2' has been updated first." & Chr(10) & Chr(10) & "Check page breaks are correctly displayed BEFORE generating the Summary of Findings pdf. ", vbOKCancel, "Generate Summary of Findings")
If info = vbCancel Then Exit Sub

Dim sFileName As String
Dim pdfname As String
 
pdfname = Sheets("Instructions").Range("CaseID").Value & "-" & Sheets("Instructions").Range("ReviewID").Value & _
            "-Summary of Findings.pdf"

sFileName = Application.GetSaveAsFilename(InitialFileName:=pdfname, FileFilter:="PDF Files (*.pdf), *.pdf")

On Error GoTo GenerateError
If sFileName = "False" Then GoTo GenerateError
 
Sheets(Array("M1", "M2")).Select
ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, FileName:=sFileName, Quality:=xlQualityStandard, openAfterPublish:=True
Sheets("M1").Select

Exit Sub

GenerateError:
    MsgBox ("Generate Summary of Findings cancelled. ")

End Sub
Attribute VB_Name = "Sheet356"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "UpdateFindings, 6, 1, MSForms, CommandButton"
Private Sub UpdateFindings_Click()

Application.ScreenUpdating = False

Dim InsertFinding As Range
Dim TempRange As Range
Dim Count As Integer
Dim CountM1 As Integer
Dim X As Integer
Dim y As Integer
Dim Title As String
Dim M1v As String

M1v = "M1"
If Sheets("Index").ReviewIB.Value = True Then M1v = "M1 (IB)"

Application.CutCopyMode = False

Count = 1
CountM1 = 0
X = 1
y = 2

Sheets("M2").Rows("2:50000").Delete Shift:=xlUp
Sheets(M1v).Range("Review_Areas").ClearContents

Set InsertFinding = Sheets("M2").Cells(2, 1)
Set InsertReviewArea = Sheets(M1v).Range("Review_Areas").Cells(1, 1)

'--- Operation Activities and Indicators ---
If Sheets("Index").CBB1.Value = True Then
Title = "Operation Activities and Indicators"
Set InsertFinding = InsertFinding.Offset(Count, 0)
Set TempRange = Sheets("B1").Range("FindingsB1")
TempRange.Copy Destination:=InsertFinding
y = y + Count
X = TempRange.Rows.Count - 1
    For X = 1 To X - 1
    Sheets("M2").Range("a" & X + y).Value = "=Aggregate(3,5,A$1:A" & X + y - 1 & ")+1"
    Next X
Count = X + 2
InsertFinding.Offset(0, 0).RowHeight = 30
InsertFinding.Offset(-1, 1).Value = Title
InsertFinding.Offset(-1, 1).Resize(InsertFinding.Rows.Count, InsertFinding.Columns.Count + 8).Select
    With Selection
    .MergeCells = True
    .Borders(xlEdgeLeft).LineStyle = xlContinuous
    .Borders(xlEdgeTop).LineStyle = xlContinuous
    .Borders(xlEdgeBottom).LineStyle = xlContinuous
    .Borders(xlEdgeRight).LineStyle = xlContinuous
    .Interior.Color = 12566463
    .Font.Bold = True
    End With
InsertReviewArea.Offset(CountM1, 0).Value = "|fffd|"
InsertReviewArea.Offset(CountM1, 1).Value = Title
CountM1 = CountM1 + 1
End If
    
'--- Organisation Management Controls and Governance ---
If Sheets("Index").CBC1.Value = True Then
Title = "Organisation Management Control and Governance"
Set InsertFinding = InsertFinding.Offset(Count, 0)
Set TempRange = Sheets("C1").Range("FindingsC1")
TempRange.Copy Destination:=InsertFinding
y = y + Count
X = TempRange.Rows.Count - 1
    For X = 1 To X - 1
    Sheets("M2").Range("a" & X + y).Value = "=Aggregate(3,5,A$1:A" & X + y - 1 & ")+1"
    Next X
Count = X + 2
InsertFinding.Offset(0, 0).RowHeight = 30
InsertFinding.Offset(-1, 1).Value = Title
InsertFinding.Offset(-1, 1).Resize(InsertFinding.Rows.Count, InsertFinding.Columns.Count + 8).Select
    With Selection
    .MergeCells = True
    .Borders(xlEdgeLeft).LineStyle = xlContinuous
    .Borders(xlEdgeTop).LineStyle = xlContinuous
    .Borders(xlEdgeBottom).LineStyle = xlContinuous
    .Borders(xlEdgeRight).LineStyle = xlContinuous
    .Interior.Color = 12566463
    .Font.Bold = True
    End With
InsertReviewArea.Offset(CountM1, 0).Value = "|fffd|"
InsertReviewArea.Offset(CountM1, 1).Value = Title
CountM1 = CountM1 + 1
End If

'--- Special Conditions / Milestone ---
If Sheets("Index").CBD1.Value = True Then
    If Sheets("Index").ReviewIB.Value = "True" Then
        Title = "Funding Agreement and Pre-Conditions"
    Else
        Title = "Special Conditions/ Milestones"
    End If
Set InsertFinding = InsertFinding.Offset(Count, 0)
Set TempRange = Sheets("D1").Range("FindingsD1")
TempRange.Copy Destination:=InsertFinding
y = y + Count
X = TempRange.Rows.Count - 1
    For X = 1 To X - 1
    Sheets("M2").Range("a" & X + y).Value = "=Aggregate(3,5,A$1:A" & X + y - 1 & ")+1"
    Next X
Count = X + 2
InsertFinding.Offset(0, 0).RowHeight = 30
InsertFinding.Offset(-1, 1).Value = Title
InsertFinding.Offset(-1, 1).Resize(InsertFinding.Rows.Count, InsertFinding.Columns.Count + 8).Select
    With Selection
    .MergeCells = True
    .Borders(xlEdgeLeft).LineStyle = xlContinuous
    .Borders(xlEdgeTop).LineStyle = xlContinuous
    .Borders(xlEdgeBottom).LineStyle = xlContinuous
    .Borders(xlEdgeRight).LineStyle = xlContinuous
    .Interior.Color = 12566463
    .Font.Bold = True
    End With
InsertReviewArea.Offset(CountM1, 0).Value = "|fffd|"
InsertReviewArea.Offset(CountM1, 1).Value = Title
CountM1 = CountM1 + 1
End If
    
'--- Match Funding ---
If Sheets("Index").CBE1.Value = True Then
Title = "Match Funding"
Set InsertFinding = InsertFinding.Offset(Count, 0)
Set TempRange = Sheets("E1").Range("FindingsE1")
TempRange.Copy Destination:=InsertFinding
y = y + Count
X = TempRange.Rows.Count - 1
    For X = 1 To X - 1
    Sheets("M2").Range("a" & X + y).Value = "=Aggregate(3,5,A$1:A" & X + y - 1 & ")+1"
    Next X
Count = X + 2
InsertFinding.Offset(0, 0).RowHeight = 30
InsertFinding.Offset(-1, 1).Value = Title
InsertFinding.Offset(-1, 1).Resize(InsertFinding.Rows.Count, InsertFinding.Columns.Count + 8).Select
    With Selection
    .MergeCells = True
    .Borders(xlEdgeLeft).LineStyle = xlContinuous
    .Borders(xlEdgeTop).LineStyle = xlContinuous
    .Borders(xlEdgeBottom).LineStyle = xlContinuous
    .Borders(xlEdgeRight).LineStyle = xlContinuous
    .Interior.Color = 12566463
    .Font.Bold = True
    End With
InsertReviewArea.Offset(CountM1, 0).Value = "|fffd|"
InsertReviewArea.Offset(CountM1, 1).Value = Title
CountM1 = CountM1 + 1
End If

'--- Procurement ---
If Sheets("Index").CBF1.Value = True Then
Title = "Procurement"
Set InsertFinding = InsertFinding.Offset(Count, 0)
Set TempRange = Sheets("F1").Range("FindingsF1")
TempRange.Copy Destination:=InsertFinding
y = y + Count
X = TempRange.Rows.Count - 1
    For X = 1 To X - 1
    Sheets("M2").Range("a" & X + y).Value = "=Aggregate(3,5,A$1:A" & X + y - 1 & ")+1"
    Next X
Count = X + 2
InsertFinding.Offset(0, 0).RowHeight = 30
InsertFinding.Offset(-1, 1).Value = Title
InsertFinding.Offset(-1, 1).Resize(InsertFinding.Rows.Count, InsertFinding.Columns.Count + 8).Select
    With Selection
    .MergeCells = True
    .Borders(xlEdgeLeft).LineStyle = xlContinuous
    .Borders(xlEdgeTop).LineStyle = xlContinuous
    .Borders(xlEdgeBottom).LineStyle = xlContinuous
    .Borders(xlEdgeRight).LineStyle = xlContinuous
    .Interior.Color = 12566463
    .Font.Bold = True
    End With
InsertReviewArea.Offset(CountM1, 0).Value = "|fffd|"
InsertReviewArea.Offset(CountM1, 1).Value = Title
CountM1 = CountM1 + 1

'--- Procurement Corrections - by contract ---'
Count = Count - 1
For Each ws In ActiveWorkbook.Worksheets
    If ws.Visible = True Then
    FX = Left(ws.Name, 2)
        If FX = "F4" Or FX = "F5" Or FX = "F6" Or FX = "F7" Then
        Count = Count - 1
        InsertFinding.Offset(Count, 1).Value = "Contract Number: " & ws.Range("D8").Value & " Contract Name: " & ws.Range("D9").Value
        InsertFinding.Offset(Count, 1).Resize(InsertFinding.Rows.Count, InsertFinding.Columns.Count + 8).Select
            With Selection
            .MergeCells = True
            '.Borders(xlEdgeLeft).LineStyle = xlContinuous
            '.Borders(xlEdgeTop).LineStyle = xlContinuous
            '.Borders(xlEdgeBottom).LineStyle = xlContinuous
            '.Borders(xlEdgeRight).LineStyle = xlContinuous
            .Font.Bold = True
            End With
        Count = Count + 1
        Set TempRange = ws.Range("Correction" & ws.Name)
        Set InsertFinding = InsertFinding.Offset(Count, 0)
        TempRange.Copy Destination:=InsertFinding
        InsertFinding.Resize(TempRange.Rows.Count, TempRange.Columns.Count).Value = TempRange.Value
        y = y + Count
        X = TempRange.Rows.Count
            For X = 1 To X - 1
            Sheets("M2").Range("a" & X + y - 1).Value = "=Aggregate(3,5,A$1:A" & X + y - 2 & ")+1"
            Next X
        Count = X
        End If
    End If
Next
Count = Count + 1
End If

'--- Financial Controls ---
If Sheets("Index").CBG1.Value = True Then
Title = "Financial Control"
Set InsertFinding = InsertFinding.Offset(Count, 0)
Set TempRange = Sheets("G1").Range("FindingsG1")
TempRange.Copy Destination:=InsertFinding
y = y + Count
X = TempRange.Rows.Count - 1
    For X = 1 To X - 1
    Sheets("M2").Range("a" & X + y).Value = "=Aggregate(3,5,A$1:A" & X + y - 1 & ")+1"
    Next X
Count = X + 2
InsertFinding.Offset(0, 0).RowHeight = 30
InsertFinding.Offset(-1, 1).Value = Title
InsertFinding.Offset(-1, 1).Resize(InsertFinding.Rows.Count, InsertFinding.Columns.Count + 8).Select
    With Selection
    .MergeCells = True
    .Borders(xlEdgeLeft).LineStyle = xlContinuous
    .Borders(xlEdgeTop).LineStyle = xlContinuous
    .Borders(xlEdgeBottom).LineStyle = xlContinuous
    .Borders(xlEdgeRight).LineStyle = xlContinuous
    .Interior.Color = 12566463
    .Font.Bold = True
    End With
InsertReviewArea.Offset(CountM1, 0).Value = "|fffd|"
InsertReviewArea.Offset(CountM1, 1).Value = Title
CountM1 = CountM1 + 1
End If

'--- State Aid ---
If Sheets("Index").CBH1.Value = True Then
Title = "State Aid"
Set InsertFinding = InsertFinding.Offset(Count, 0)
Set TempRange = Sheets("H1").Range("FindingsH1")
TempRange.Copy Destination:=InsertFinding
y = y + Count
X = TempRange.Rows.Count - 1
    For X = 1 To X - 1
    Sheets("M2").Range("a" & X + y).Value = "=Aggregate(3,5,A$1:A" & X + y - 1 & ")+1"
    Next X
Count = X + 2
InsertFinding.Offset(0, 0).RowHeight = 30
InsertFinding.Offset(-1, 1).Value = Title
InsertFinding.Offset(-1, 1).Resize(InsertFinding.Rows.Count, InsertFinding.Columns.Count + 8).Select
    With Selection
    .MergeCells = True
    .Borders(xlEdgeLeft).LineStyle = xlContinuous
    .Borders(xlEdgeTop).LineStyle = xlContinuous
    .Borders(xlEdgeBottom).LineStyle = xlContinuous
    .Borders(xlEdgeRight).LineStyle = xlContinuous
    .Interior.Color = 12566463
    .Font.Bold = True
    End With
InsertReviewArea.Offset(CountM1, 0).Value = "|fffd|"
InsertReviewArea.Offset(CountM1, 1).Value = Title
CountM1 = CountM1 + 1
End If
    
'--- Publicity ---
If Sheets("Index").CBI1.Value = True Then
Title = "Publicity"
Set InsertFinding = InsertFinding.Offset(Count, 0)
Set TempRange = Sheets("I1").Range("FindingsI1")
TempRange.Copy Destination:=InsertFinding
y = y + Count
X = TempRange.Rows.Count - 1
    For X = 1 To X - 1
    Sheets("M2").Range("a" & X + y).Value = "=Aggregate(3,5,A$1:A" & X + y - 1 & ")+1"
    Next X
Count = X + 2
InsertFinding.Offset(0, 0).RowHeight = 30
InsertFinding.Offset(-1, 1).Value = Title
InsertFinding.Offset(-1, 1).Resize(InsertFinding.Rows.Count, InsertFinding.Columns.Count + 8).Select
    With Selection
    .MergeCells = True
    .Borders(xlEdgeLeft).LineStyle = xlContinuous
    .Borders(xlEdgeTop).LineStyle = xlContinuous
    .Borders(xlEdgeBottom).LineStyle = xlContinuous
    .Borders(xlEdgeRight).LineStyle = xlContinuous
    .Interior.Color = 12566463
    .Font.Bold = True
    End With
InsertReviewArea.Offset(CountM1, 0).Value = "|fffd|"
InsertReviewArea.Offset(CountM1, 1).Value = Title
CountM1 = CountM1 + 1
End If

'--- Document Retention ---
If Sheets("Index").CBJ1.Value = True Then
Title = "Document Retention"
Set InsertFinding = InsertFinding.Offset(Count, 0)
Set TempRange = Sheets("J1").Range("FindingsJ1")
TempRange.Copy Destination:=InsertFinding
y = y + Count
X = TempRange.Rows.Count - 1
    For X = 1 To X - 1
    Sheets("M2").Range("a" & X + y).Value = "=Aggregate(3,5,A$1:A" & X + y - 1 & ")+1"
    Next X
Count = X + 2
InsertFinding.Offset(0, 0).RowHeight = 30
InsertFinding.Offset(-1, 1).Value = Title
InsertFinding.Offset(-1, 1).Resize(InsertFinding.Rows.Count, InsertFinding.Columns.Count + 8).Select
    With Selection
    .MergeCells = True
    .Borders(xlEdgeLeft).LineStyle = xlContinuous
    .Borders(xlEdgeTop).LineStyle = xlContinuous
    .Borders(xlEdgeBottom).LineStyle = xlContinuous
    .Borders(xlEdgeRight).LineStyle = xlContinuous
    .Interior.Color = 12566463
    .Font.Bold = True
    End With
InsertReviewArea.Offset(CountM1, 0).Value = "|fffd|"
InsertReviewArea.Offset(CountM1, 1).Value = Title
CountM1 = CountM1 + 1
End If

Sheets("M2").PageSetup.LeftHeader = "CaseID: " & Sheets("M1").Range("E18") _
    & " ReviewID: " & Sheets("M1").Range("E19")

Sheets("M2").Range("A1").Select

Application.ScreenUpdating = True

End Sub

Attribute VB_Name = "Sheet357"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "PrintReport, 1, 0, MSForms, CommandButton"
Private Sub PrintReport_Click()

info = MsgBox("Please ensure that Section 3 - Findings & Recommendations on section 'M2' has been updated first." & Chr(10) & Chr(10) & "Check page breaks are correctly displayed BEFORE generating the Summary of Findings pdf. ", vbOKCancel, "Generate Summary of Findings")
If info = vbCancel Then Exit Sub

Dim sFileName As String
Dim pdfname As String
 
pdfname = Sheets("Instructions").Range("CaseID").Value & "-" & Sheets("Instructions").Range("ReviewID").Value & _
            "-Summary of Findings.pdf"

sFileName = Application.GetSaveAsFilename(InitialFileName:=pdfname, FileFilter:="PDF Files (*.pdf), *.pdf")

On Error GoTo GenerateError
If sFileName = "False" Then GoTo GenerateError
 
Sheets(Array("M1 (IB)", "M2")).Select
ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, FileName:=sFileName, Quality:=xlQualityStandard, openAfterPublish:=True
Sheets("M1 (IB)").Select

Exit Sub

GenerateError:
    MsgBox ("Generate Summary of Findings cancelled. ")

End Sub
Attribute VB_Name = "Sheet360"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "FormProcurement, 4, 1, MSForms, CommandButton"
Attribute VB_Control = "FormFinancial, 3, 2, MSForms, CommandButton"
Attribute VB_Control = "PDF, 2, 3, MSForms, CommandButton"
Attribute VB_Control = "Generate, 264, 4, MSForms, CommandButton"
Private Sub FormFinancial_Click()

Dim c As Integer '--- Last form from N1 ---
Dim IrregRef As Range
Dim ws As String
Dim IrregRow As String

Set IrregRef = Nothing
On Error Resume Next
Set IrregRef = Application.InputBox(Prompt:="Select the findings on the relevant working papers for the irregularity to be generated." _
            & vbCrLf & "Cancel to continue with a blank template." & vbCrLf, Title:="Additional Financial Irregularity", Type:=8)
On Error GoTo 0

Application.ScreenUpdating = False

c = Sheets("N1").Range("B100000").End(xlUp).Row
c = c + 2
Sheets("System").Range("IrregApproval").Copy '--- Form Template ---
ActiveSheet.Range("A" & c).PasteSpecial
    
Sheets("System").Range("IrregApproval").Copy '--- Form Template ---
ActiveSheet.Range("A" & c).PasteSpecial

If IrregRef Is Nothing Then
Else
ws = IrregRef.Parent.Name
IrregRow = IrregRef.Row
ActiveSheet.Range("B" & c).Value = ws '--- Ref ---
ActiveSheet.Range("C" & c).Value = "=" & ws & "!B" & IrregRow '--- Issue / irreg number ---
ActiveSheet.Range("C" & c + 1).Value = "=" & ws & "!C" & IrregRow '--- Findings ---
ActiveSheet.Range("C" & c + 2).Value = "=" & ws & "!H" & IrregRow '--- Reason ---
ActiveSheet.Range("C" & c + 8).Value = "=" & ws & "!J" & IrregRow '--- |fffd| ---
ActiveSheet.Rows(c + 1 & ":" & c + 2).EntireRow.AutoFit
End If

c = c + 13
Sheets("N1").Range("B" & c + 1).Value = "Signed: ................................................................................ Date: ................................................"
c = c + 3
ActiveSheet.Rows(c).PageBreak = xlPageBreakManual

Application.ScreenUpdating = True
Sheets("N1").Range("B" & c - 16).Select

End Sub

Private Sub FormProcurement_Click()

Dim c As Integer '--- Last form from N1 ---
Dim IrregRef As Range
Dim ws As String
Dim IrregRow As String

Set IrregRef = Nothing
On Error Resume Next
Set IrregRef = Application.InputBox(Prompt:="Select the findings on the relevant working papers for the procurement irregularity to be generated." _
            & vbCrLf & "Cancel to continue with a blank template." & vbCrLf, Title:="Additional Procurement Irregularity", Type:=8)
On Error GoTo 0

Application.ScreenUpdating = False

c = Sheets("N1").Range("B100000").End(xlUp).Row
c = c + 2
Sheets("System").Range("IrregApprovalProcurement").Copy '--- Form Template ---
ActiveSheet.Range("A" & c).PasteSpecial

If IrregRef Is Nothing Then
Else
ws = IrregRef.Parent.Name
IrregRow = IrregRef.Row
ActiveSheet.Range("B" & c).Value = ws '--- Ref ---
    FX = Left(ws, 2)
        If FX = "F4" Or FX = "F5" Or FX = "F6" Or FX = "F7" Then
        ActiveSheet.Range("C" & c + 1).Value = "=" & ws & "!D8 & "" / "" & " & ws & "!D9 & "" / "" & text(" & ws & "!D10,""|fffd|#,##0.00"")" '--- Contract Details ---
        End If
ActiveSheet.Range("C" & c).Value = "=" & ws & "!B" & IrregRow '--- Issue / irreg number ---
ActiveSheet.Range("C" & c + 3).Value = "=" & ws & "!C" & IrregRow '--- Findings ---
ActiveSheet.Range("C" & c + 4).Value = "=" & ws & "!H" & IrregRow '--- Reason ---
ActiveSheet.Range("C" & c + 14).Value = "=" & ws & "!J" & IrregRow '--- |fffd| ---
ActiveSheet.Rows(c + 3 & ":" & c + 4).EntireRow.AutoFit
End If

c = c + 19
Sheets("N1").Range("B" & c + 1).Value = "Signed: ................................................................................ Date: ................................................"
c = c + 3
ActiveSheet.Rows(c).PageBreak = xlPageBreakManual

Application.ScreenUpdating = True
Sheets("N1").Range("B" & c - 22).Select

End Sub

Private Sub PDF_Click() '--- create pdf copy of the irregularity approval form ---

info = MsgBox("Ensure the irregularities are up-to-date and page breaks are correctly displayed before generating the pdf. ", vbOKCancel, "Generate Summary of Findings")
If info = vbCancel Then Exit Sub

Dim sFileName As String
Dim pdfname As String
 
On Error GoTo GenerateError
pdfname = Sheets("Instructions").Range("CaseID").Value & "-" & Sheets("Instructions").Range("ReviewID").Value & _
            "-Irregularity Approval Form.pdf"

sFileName = Application.GetSaveAsFilename(InitialFileName:=pdfname, FileFilter:="PDF Files (*.pdf), *.pdf")

On Error GoTo GenerateError
If sFileName = "False" Then GoTo GenerateError
 
ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, FileName:=sFileName, Quality:=xlQualityStandard, openAfterPublish:=True

Exit Sub

GenerateError:
    MsgBox ("Generate Irregularity Approval Form cancelled. ")

End Sub

Private Sub Generate_Click()

Dim Proceed As Integer

Proceed = MsgBox(Prompt:="Updating the Irregularity Approval Form will replace all data currently held on this sheet." & Chr(10) & _
    "To proceed with the update, press OK.", Buttons:=1, Title:="Warning")
If Proceed = 2 Then Exit Sub

Application.ScreenUpdating = False

Dim InsertFinding As Range
Dim TempRange As Range
Dim Count As Range
Dim c As Integer
Dim ws As Variant

c = 12

Sheets("N1").Rows(c & ":100000").Delete Shift:=xlUp

'-------------------- Irregularity (non procurement) --------------------

For Each ws In Array("B1", "C1", "D1", "F1", "E1", "G1", "H1", "I1", "J1")
If Sheets(ws).Visible = True Then
Set InsertFinding = Sheets(ws).Range("Findings" & ws)
Set InsertFinding = InsertFinding.Offset(1, 0).Resize(InsertFinding.Rows.Count - 2, InsertFinding.Columns.Count)
    For Each Count In InsertFinding.Rows
        If IsNumeric(Sheets(ws).Range("J" & Count.Row)) = True And Sheets(ws).Range("J" & Count.Row).Value > "0" Then
        Sheets("System").Range("IrregApproval").Copy '--- Form Template ---
        ActiveSheet.Range("A" & c).PasteSpecial
        ActiveSheet.Range("B" & c).Value = ws '--- Ref: ---
        ActiveSheet.Range("C" & c).Value = "=" & ws & "!B" & Count.Row '--- Issue / irreg number ---
        ActiveSheet.Range("C" & c + 1).Value = "=" & ws & "!C" & Count.Row '--- Findings ---
        ActiveSheet.Range("C" & c + 2).Value = "=" & ws & "!H" & Count.Row '--- Reason ---
        ActiveSheet.Range("C" & c + 8).Value = "=" & ws & "!J" & Count.Row '--- |fffd| ---
        ActiveSheet.Rows(c + 1 & ":" & c + 2).EntireRow.AutoFit
        c = c + 13
        Sheets("N1").Range("B" & c + 1).Value = "Signed: ................................................................................ Date: ................................................"
        c = c + 3
        ActiveSheet.Rows(c).PageBreak = xlPageBreakManual
        End If
    Next Count
End If
Next ws

'-------------------- Irregularity (procurement) --------------------

For Each wsP In ActiveWorkbook.Worksheets
If Sheets(wsP.Name).Visible = True Then
ws = wsP.Name
FX = Left(ws, 2)
    If FX = "F4" Or FX = "F5" Or FX = "F6" Or FX = "F7" Then
    Set InsertFinding = Sheets(ws).Range("Correction" & ws)
    Set InsertFinding = InsertFinding.Resize(InsertFinding.Rows.Count - 1, InsertFinding.Columns.Count)
    For Each Count In InsertFinding.Rows
        If IsNumeric(Sheets(ws).Range("J" & Count.Row)) = True And Sheets(ws).Range("J" & Count.Row).Value > "0" Then
        Sheets("System").Range("IrregApprovalProcurement").Copy '--- Form Template ---
        ActiveSheet.Range("A" & c).PasteSpecial
        ActiveSheet.Range("B" & c).Value = ws '--- Ref: ---
        ActiveSheet.Range("C" & c).Value = "=" & ws & "!B" & Count.Row '--- Issue / irreg number ---
        ActiveSheet.Range("C" & c + 1).Value = "=" & ws & "!D8 & "" / "" & " & ws & "!D9 & "" / "" & text(" & ws & "!D10,""|fffd|#,##0.00"")" '--- Contract Details ---
        ActiveSheet.Range("C" & c + 3).Value = "=" & ws & "!C" & Count.Row '--- Findings ---
        ActiveSheet.Range("C" & c + 4).Value = "=" & ws & "!H" & Count.Row '--- Reason ---
        ActiveSheet.Range("C" & c + 14).Value = "=" & ws & "!J" & Count.Row '--- |fffd| ---
        ActiveSheet.Rows(c + 3 & ":" & c + 4).EntireRow.AutoFit
        c = c + 19
        Sheets("N1").Range("B" & c + 1).Value = "Signed: ................................................................................ Date: ................................................"
        c = c + 3
        ActiveSheet.Rows(c).PageBreak = xlPageBreakManual
        End If
    Next Count
    End If
End If
Next wsP

Application.ScreenUpdating = True
ActiveSheet.Range("B12").Select

End Sub
Attribute VB_Name = "Sheet500"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet510"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet511"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet512"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet513"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet520"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet530"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet531"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet540"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet550"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet551"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet552"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet553"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet554"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet555"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
