Attribute VB_Name = "Extrahieren"
'MIA - Makrosammlung f|fffd|r die qualitative Inhaltsanalyse
'Copyright (C) 2000 Jochen Gl|fffd|ser and Grit Laudel

' This program is free software; you can redistribute it and/or modify it
' under the terms of the GNU General Public License as published by the
' Free Software Foundation; either version 2 of the License, or (at your option)
' any later version.

' This program is distributed in the hope that it will be useful, but
' WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
' or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

' You should have received a copy of the GNU General Public License along
' with this program; if not, write to the Free Software Foundation, Inc.,
' 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

' Contact:
' Jochen Gl|fffd|ser
' Zentrum Technik und Gesellschaft
' Sekretariat ER2-2
' Technische Universit|fffd|t Berlin
' Hardenbergstr. 36A
' D-10623 Berlin
' Germany
' Email: Jochen.Glaser@ztg.tu-berlin.de
' Version 20.June 2011


'Public DDNamen(1 To 8) As String
'Public L|fffd|nge(1 To 8) As Integer

Public Quelle As String
Public Anzahl As Integer
Public InterviewName As String
Public Pfad As String
     Public T1() As String
     Public T2() As String
     Public T3() As String
     Public T4() As String
     Public T5() As String
     Public T6() As String
     Public T7() As String
     Public T8() As String
Function Vorgabenzahl(Titel)
    Documents("ExVorgaben.docx").Activate
    TNr = Tabelle(Titel)
    Vorgabenzahl = ActiveDocument.Tables(TNr).Rows.Count - 1
End Function

Sub VorgabenEinlesen(Titel, TT() As String, LL)
 
'  Holt die Vorgaben f|fffd|r eine Dimension aus der Datei "ExVorgaben.docx"
   
    Documents("ExVorgaben.docx").Activate
    TNr = Tabelle(Titel)
    Set MyTab = ActiveDocument.Tables(TNr)
    Zahlzeilen = MyTab.Rows.Count
    ReDim TT(0 To Zahlzeilen - 1) As String
    For M = 2 To Zahlzeilen
        TT(M - 1) = Left(MyTab.Rows(M).Cells(1).Range.Text, Len(MyTab.Rows(M).Cells(1).Range.Text) - 2)
    Next M
    LL = Zahlzeilen - 1
End Sub

Sub DatenHinzuf|fffd|gen(Dimension, Ergebnis)

    ' Legt gegebenenfalls eine neue Zeile an
    
    If Len(ActiveDocument.Tables(1).Columns(Selection.Tables(1).Columns.Count).Cells(Selection.Tables(1).Rows.Count).Range.Text) > 3 Then Selection.Tables(1).Rows.Add
        
    ' f|fffd|gt neue Daten hinzu
    
    ActiveDocument.Tables(1).Rows(1).Select
    Do
        With Selection.Find
            .ClearFormatting
            .Text = Dimension
            .MatchWholeWord = True
            .Wrap = wdFindStop
            .Execute
        End With
    Loop Until Len(Selection.Cells(1).Range.Text) - 2 = Len(Dimension)
    Selection.EndOf Unit:=wdColumn, Extend:=wdMove
    Selection.InsertBefore Text:=Ergebnis
            
End Sub
Function Tabelle(Kopfzeile) As Integer
For I = 1 To ActiveDocument.Tables.Count
    If Left(ActiveDocument.Tables(I).Rows(1).Cells(1).Range.Text, Len(ActiveDocument.Tables(I).Rows(1).Cells(1).Range.Text) - 2) = Kopfzeile Then Exit For
Next I
Tabelle = I
End Function

Sub Textfinden(Findetext)
    Selection.HomeKey Unit:=wdStory, Extend:=wdMove
    With Selection.Find
        .ClearFormatting
        .Text = Findetext
        .Execute
    End With
End Sub

Sub VorgabenHinzuf|fffd|gen(DD, Vorgabe)

    ' F|fffd|gt Neue Vorgabewerte hinzu
    
    Documents("ExVorgaben.docx").Activate
    TNr = Tabelle(DD)
    Set MyTab = ActiveDocument.Tables(TNr)
    MyTab.Rows.Add
    Zahlzeilen = MyTab.Rows.Count
    MyTab.Rows(Zahlzeilen).Cells(1).Range.Text = Vorgabe
    ActiveDocument.Save
            
End Sub

 Function TextEinlesen()

' Liest die Quelle und den Text f|fffd|r die Anzeige im Makro ein
    
    ' 1. Auslesen Quelle
    
    With Selection
        .MoveLeft Extend:=wdExtend
        If InStr(Selection, Chr(13)) <> 0 Then .MoveRight Count:=2, Extend:=wdMove
        .MoveUp Unit:=wdParagraph, Count:=1
        Quelle = ""
        .MoveRight Unit:=wdCharacter, Count:=1, Extend:=wdExtend
        Do While Selection <> "#"
            Quelle = Quelle + Selection
            .Collapse Direction:=wdCollapseEnd
            .MoveRight Unit:=wdCharacter, Count:=1, Extend:=wdExtend
            If Len(Quelle) > 100 Then
                MsgBox " Das Makro hat jetzt 100 Zeichen eingelesen und noch kein '#' gefunden. Anscheinend ist der Text nicht markiert. Das Makro wird abgebrochen."
                End
            End If
        Loop
    End With
    
    ' 2. Auslesen der drei oberen und des aktuellen Absatzes
    
    Selection.MoveUp Unit:=wdParagraph, Count:=4, Extend:=wdMove
    Selection.MoveDown Unit:=wdParagraph, Count:=4, Extend:=wdExtend
    TextEinlesen = Selection
    MIA.Extrahieren.Textfinden (Quelle)
    
    '3. Hinzufuegen der Trennzeichen zur Quelle
    
    Quelle = "\" + Quelle + "\"
    
End Function
Function neu(Wert, Wertliste() As String, Anzahl)
    ' Wird False, wenn Wert in Wertliste enthalten ist
    
    ReDim Preserve Wertliste(0 To Anzahl)
    neu = True
        For M = 0 To Anzahl
            If Wert = Wertliste(M) Then neu = False
        Next M
End Function
Function ge|fffd|ffnet(Dname)
    ' Wird True, wenn die Datei Dname ge|fffd|ffnet ist
    ge|fffd|ffnet = False
    For Each aDoc In Documents
        If InStr(aDoc, Dname) > 0 Then ge|fffd|ffnet = True
    Next aDoc
End Function

Sub Pfadkontrolle()
    Mitteilung1 = "Das Dokument steht im Verzeichnis" + Chr(13) + Chr(13) + "'" + ActiveDocument.Path + "'." + Chr(13) + Chr(13) + "Die Dokumentvorlage M07d.dotm steht im Verzeichnis" + Chr(13) + Chr(13) + "'" + ActiveDocument.AttachedTemplate.Path + "'." + Chr(13) + Chr(13)
    Mitteilung2 = "Bitte kopieren Sie alle Dateien in dasselbe Verzeichnis, bevor Sie die Extraktion beginnen."
    MsgBox (Mitteilung1 + Mitteilung2)
    End
End Sub

Sub DateienAktivieren(a, p)
'Pr|fffd|ft f|fffd|r die Extraktionsdatei und f|fffd|r die ExVorgaben.docx, ob die Datein ge|fffd|ffnet sind. Sind sie es nicht, wird jeweils gepr|fffd|ft,
'ob sie im Etraktionsverzeichnis stehen. Dann werden die Datein ge|fffd|ffnet und mit der M07d.dotm verbunden, oder das Makro wird nach einer Fehlermeldung beendet
    
    If Not MIA.Extrahieren.ge|fffd|ffnet(a) Then
        Not_here = True
        Suchname = Dir(p)
        Do While Suchname <> ""
            If Suchname = a Then
                Documents.Open (p + a)
                Documents(a).AttachedTemplate = p + "M07d.dotm"
                Not_here = False
                Exit Do
            End If
            Suchname = Dir()
        Loop
        If Not_here Then
            Mitteilung = "Das Makro konnte die Datei '" + a + "' im Verzeichnis" + Chr(13) + Chr(13) + "'" + p + "'" + Chr(13) + Chr(13) + "nicht |fffd|ffnen. Stellen Sie sicher, dass alle Dateien im Verzeichnis" + Chr(13) + Chr(13) + "'" + p + "'" + Chr(13) + Chr(13) + "stehen, und starten Sie das Makro erneut."
            MsgBox (Mitteilung)
            End
        End If
    End If
    
    If Not MIA.Extrahieren.ge|fffd|ffnet("ExVorgaben.docx") Then
        Not_here = True
        Suchname = Dir(p)
        Do While Suchname <> ""
            If Suchname = "ExVorgaben.docx" Then
                Documents.Open (p + "ExVorgaben.docx")
                Documents("ExVorgaben.docx").AttachedTemplate = p + "M07d.dotm"
                Not_here = False
                Exit Do
            End If
            Suchname = Dir()
        Loop
        If Not_here Then
            Mitteilung = "Das Makro konnte die Datei 'ExVorgaben.docx' im Verzeichnis" + Chr(13) + Chr(13) + "'" + p + "'" + Chr(13) + Chr(13) + "nicht |fffd|ffnen. Stellen Sie sicher, dass alle Dateien im Verzeichnis" + Chr(13) + Chr(13) + "'" + p + "'" + Chr(13) + Chr(13) + "stehen, und starten Sie das Makro erneut."
            MsgBox (Mitteilung)
            End
        End If
    End If
End Sub
Attribute VB_Name = "Markieren"
'MIA - Makrosammlung f|fffd|r die qualitative Inhaltsanalyse
'Copyright (C) 2000 Jochen Gl|fffd|ser and Grit Laudel

' This program is free software; you can redistribute it and/or modify it
' under the terms of the GNU General Public License as published by the
' Free Software Foundation; either version 2 of the License, or (at your option)
' any later version.

' This program is distributed in the hope that it will be useful, but
' WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
' or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

' You should have received a copy of the GNU General Public License along
' with this program; if not, write to the Free Software Foundation, Inc.,
' 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

' Contact:
' Jochen Gl|fffd|ser
' Zentrum Technik und Gesellschaft
' Sekretariat ER2-2
' Technische Universit|fffd|t Berlin
' Hardenbergstr. 36A
' D-10623 Berlin
' Germany
' Email: Jochen.Glaser@ztg.tu-berlin.de

Sub Abs|fffd|tzeMarkieren()
'
' Abs|fffd|tzeMarkieren Makro
' Makro erstellt am 10.2.2000 von AG WT

Dim AK As String

dn = ActiveDocument.Name
If InStr(UCase(dn), ".DOC") = 0 Then
    MsgBox "Das Dokument mu|fffd| als Word-Dokument gespeichert werden, ehe es markiert werden kann."
    End
Else
    I = 0
    For Each Paragraph In ActiveDocument.Paragraphs
        AK = Left(dn, Len(dn) - 5) + "-" + LTrim(Str(I)) + "#"
        If I > 0 Then Paragraph.Range.InsertBefore AK
        I = I + 1
    Next Paragraph
End If
End Sub





Attribute VB_Name = "MarkierungEntfernen"
'MIA - Makrosammlung f|fffd|r die qualitative Inhaltsanalyse
'Copyright (C) 2000 Jochen Gl|fffd|ser and Grit Laudel

' This program is free software; you can redistribute it and/or modify it
' under the terms of the GNU General Public License as published by the
' Free Software Foundation; either version 2 of the License, or (at your option)
' any later version.

' This program is distributed in the hope that it will be useful, but
' WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
' or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

' You should have received a copy of the GNU General Public License along
' with this program; if not, write to the Free Software Foundation, Inc.,
' 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

' Contact:
' Jochen Gl|fffd|ser
' Zentrum Technik und Gesellschaft
' Sekretariat ER2-2
' Technische Universit|fffd|t Berlin
' Hardenbergstr. 36A
' D-10623 Berlin
' Germany
' Email: Jochen.Glaser@ztg.tu-berlin.de

Sub MarkierungEntfernen()
'
' MarkierungEntfernen Makro
' Makro erstellt am 27.12.99 von AG WT
'
ActiveDocument.Paragraphs(2).Range.Select
If InStr(Selection, "#") = 0 Then
    MsgBox "Text ist nicht korrekt markiert, das Makro kann hier viel Schaden anrichten!"
Else
    For Each Paragraph In ActiveDocument.Paragraphs
        Paragraph.Range.Select
        If InStr(Selection, "#") <> 0 Then
            Selection.Collapse
            Do
                Selection.MoveRight Extend:=wdExtend
            Loop Until InStr(Selection, "#") <> 0
            Selection.Delete
        End If
    Next Paragraph
End If

End Sub

Attribute VB_Name = "Quellensuche"
'MIA - Makrosammlung f|fffd|r die qualitative Inhaltsanalyse
'Copyright (C) 2000 Jochen Gl|fffd|ser and Grit Laudel

' This program is free software; you can redistribute it and/or modify it
' under the terms of the GNU General Public License as published by the
' Free Software Foundation; either version 2 of the License, or (at your option)
' any later version.

' This program is distributed in the hope that it will be useful, but
' WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
' or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

' You should have received a copy of the GNU General Public License along
' with this program; if not, write to the Free Software Foundation, Inc.,
' 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

' Contact:
' Jochen Gl|fffd|ser
' Zentrum Technik und Gesellschaft
' Sekretariat ER2-2
' Technische Universit|fffd|t Berlin
' Hardenbergstr. 36A
' D-10623 Berlin
' Germany
' Email: Jochen.Glaser@ztg.tu-berlin.de


Public Extraktionspfad As String
Sub Quellensuche()

    suchpfad = ActiveDocument.AttachedTemplate.Path + "\"

    'Auslesen der Quellenangabe
    Selection.Collapse Direction:=wdCollapseStart
    Selection.MoveEnd Unit:=wdCharacter, Count:=1
    If Selection = "\" Then Selection.Collapse Direction:=wdCollapseEnd
    For zaehler = 1 To 100
            Selection.MoveEnd Unit:=wdCharacter, Count:=1
            If Selection.Characters(Selection.Characters.Count) = "\" Then Exit For
            If zaehler = 100 Then Call MIA.Quellensuche.Fehler
    Next zaehler
    For zaehler = 1 To 100
        Selection.MoveStart Unit:=wdCharacter, Count:=-1
        If Selection.Characters(1) = "\" Then Exit For
        If zaehler = 100 Then Call MIA.Quellensuche.Fehler
    Next zaehler
    Quellenangabe = Selection
    Quellenangabe = Left(Quellenangabe, Len(Quellenangabe) - 1)
    Quellenangabe = Right(Quellenangabe, Len(Quellenangabe) - 1)
    If InStr(Quellenangabe, "-") > 0 Then
        Datnam = Left(Quellenangabe, InStrRev(Quellenangabe, "-") - 1) + ".docx"
    Else
        Call MIA.Quellensuche.Fehler
    End If
    Absatznr = Right(Quellenangabe, Len(Quellenangabe) - InStrRev(Quellenangabe, "-"))
    If Val(Absatznr) = 0 Then Call MIA.Quellensuche.Fehler

        ' Datei |fffd|ffnen und Absatz suchen
    Call MIA.Quellensuche.D|fffd|(suchpfad, Datnam)
    Selection.StartOf Unit:=wdStory, Extend:=wdMove
    With Selection.Find
        .Text = Quellenangabe
        .MatchWholeWord = True
        .Execute
    End With

End Sub

Sub D|fffd|(sp, dn)
On Error GoTo FalscherPfad
Documents.Open FileName:=sp + dn
GoTo fertig
FalscherPfad:
    MsgBox "Es ist ein Fehler bei der Quellensuche aufgetreten. Entweder steht die gesuchte Datei nicht im Extraktionsverzeichnis '" + sp + "', oder der Cursor stand nicht innerhalb der Quellenangabe."
End
fertig:
End Sub
Sub Fehler()
    MsgBox "Cursor stand nicht auf einer Quellenangabe der Form 'Dateiname-Absatznummer'."
    End
End Sub

Sub getdata()
' Takes selection as search string, stores path of source document as active path, and asks for confirmation
suchtext = RTrim(Selection)
suchpfad = ActiveDocument.Path + "\"
If Len(suchtext) < 3 Then
    suchtext = RTrim(InputBox("Der markierte Text ist zu kurz f|fffd|r eine sinnvolle Suche. Manuelle Eingabe:"))
    If Len(suchtext) < 3 Then End
End If
confirmationtext = " In allen Extraktionstabellen nach" + Chr(13) + Chr(13) + "'" + suchtext + "' suchen?"
If MsgBox(confirmationtext, vbOKCancel) = vbCancel Then End

'Adds a document for the results, formats it, and stores it under the name of "Results_" + the search string
Selection.Collapse Direction:=wdCollapseEnd
startdocument = ActiveDocument.Name

Documents.Add
  With ActiveDocument.PageSetup
        .Orientation = wdOrientLandscape
        .TopMargin = CentimetersToPoints(1)
        .BottomMargin = CentimetersToPoints(1)
        .LeftMargin = CentimetersToPoints(1)
        .RightMargin = CentimetersToPoints(1)
        .HeaderDistance = CentimetersToPoints(0.6)
        .FooterDistance = CentimetersToPoints(0.6)
  End With
ActiveDocument.AttachedTemplate = suchpfad + "M07d.dotm"
ActiveDocument.SaveAs suchpfad + "Results_" + suchtext + ".docx"
Speicher = ActiveDocument.Name

'Opens all documents in the active path that start with "Ex" but are not ExVorgaben, looks for search string, and copys
'File name and tables to results file if search string is found.
Suchname = Dir(suchpfad)
    While Suchname <> ""
        If Left(Suchname, 2) = "Ex" And Suchname <> "ExVorgaben.docx" Then
            Documents.Open FileName:=suchpfad + Suchname
            If ActiveDocument.Tables(1).Rows.Count > 1 And InStr(ActiveDocument.Tables(1).Range.Text, suchtext) > 1 Then
                Tabellenname = Mid(Suchname, 3, Len(Suchname) - 7)
                ActiveDocument.Tables(1).Select
                Selection.Copy
                ActiveDocument.Close
                Documents(Speicher).Activate
                Selection.EndKey Unit:=wdStory, Extend:=wdMove
                Selection.InsertBefore Chr(13) + Tabellenname + Chr(13) + Chr(13)
                Selection.Collapse Direction:=wdCollapseEnd
                Selection.PasteAndFormat (wdPasteDefault)
                Selection.MoveUp Unit:=wdLine, Count:=1, Extend:=wdMove
                
                'In the results file, rows without the search strings are deleted.
                I = 2
                Do
                    If InStr(Selection.Tables(1).Rows(I).Range.Text, suchtext) = 0 Then
                        Selection.Tables(1).Rows(I).Delete
                    Else
                        I = I + 1
                    End If
                Loop Until I > Selection.Tables(1).Rows.Count
                Selection.EndKey Unit:=wdStory, Extend:=wdMove
                Selection.Collapse Direction:=wdCollapseEnd
                Selection.InsertBefore Chr(13)
            Else
            ActiveDocument.Close
            End If
        End If
        Suchname = Dir()
    Wend
ActiveDocument.Save
Documents.Open FileName:=suchpfad + startdocument
Documents(Speicher).Activate
MsgBox "Fertig!"
End Sub

Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "0{00020906-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



' InQuest injected base64 decoded content
' kjKb

INQUEST-PP=macro
