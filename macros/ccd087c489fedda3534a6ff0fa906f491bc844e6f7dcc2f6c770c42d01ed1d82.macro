Attribute VB_Name = "AAMostrarExcel"

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Sub RestaurarAplicacion()
    
    
    
    Application.Visible = True
    Application.DisplayAlerts = True
    Application.CutCopyMode = False
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
    
    
    
End Sub

Attribute VB_Name = "AAVariablesGlobales"

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Public AnalyticsItem_RenglonCode As Long
Public Devoluciones_Modified_G As Boolean
Public MenuCategorias_RenglonSelected As Long
Public MenuArticulos_ArrayVenta() As Variant
Public MenuArticulos_ActiveCategoria As Object
Public MenuArticulos_ActiveItem As Object
Public FolioKit As Long
Public CantidadKits As Integer
Public UsuarioActual As String
Public Contrase|fffd|a As String
Public ActualCuenta As String
Public RenglonArticulo As Long
Attribute VB_Name = "AFuncionesGlobales"

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Public Sub MostrarPuntodeVenta()
    MenuOpciones.Show
End Sub

Public Sub ReemplazarEtiqueta(RangeDataFind As Range, EtiquetaFind As String, TextoReemplazar As String)
    
    Dim RangoBusqueda As Range
    Do
        Set RangoBusqueda = RangeDataFind.Cells.Find(WHAT:=EtiquetaFind, LookIn:=xlValues, lookat:=xlPart)
        If Not RangoBusqueda Is Nothing Then
            
            RangoBusqueda = Replace(RangoBusqueda.Value, EtiquetaFind, TextoReemplazar, 1, , vbTextCompare)
            
        End If
    Loop Until RangoBusqueda Is Nothing
    
End Sub

Public Function FormatCurrencySystem(Simbolo As String) As String

    Dim SeparadorDecimal As String
    Dim SeparadorMiles As String
    
    SeparadorDecimal = Application.International(xlDecimalSeparator)
    SeparadorMiles = Application.International(xlThousandsSeparator)
    
    FormatCurrencySystem = "#" & SeparadorMiles & "##0" & SeparadorDecimal & "00"

End Function

Public Function SeparadorDecimalSystem()
    SeparadorDecimalSystem = Application.International(xlDecimalSeparator)
End Function

Public Function SeparadorMilesSystem()
    SeparadorMilesSystem = Application.International(xlThousandsSeparator)
End Function

Public Function GetRowItem(CodigoBuscar As Long, HojaBusqueda As Worksheet, ColumnaId As String) As Long

    Dim BusquedaRange As Range
    Dim Resultado As Variant
    GetRowItem = 0
    Set BusquedaRange = HojaBusqueda.Range(ColumnaId & ":" & ColumnaId)
    Set Resultado = BusquedaRange.Find(CodigoBuscar, LookIn:=xlValues, lookat:=xlWhole)
    If Not Resultado Is Nothing Then
        If HojaBusqueda.Range(ColumnaId & Resultado.Row).Value = CodigoBuscar Then
            GetRowItem = Resultado.Row
        Else
            MsgBox "Error no se encuentra Id " & CodigoBuscar & " en tabla " & HojaBusqueda.Name & " en columna " & ColumnaId
        End If
    Else
        MsgBox "Error no se encuentra Id " & CodigoBuscar & " en tabla " & HojaBusqueda.Name & " en columna " & ColumnaId
    End If
    
End Function

Public Function DeleteRows(DataSheet As Worksheet, IdColumnLetter As String, IdCriterio As Long) As Long
    
    Dim UltimoRenglon As Long
    Dim ActiveCelda As Range
    Dim RangoConjunto As Range
    Dim Contar As Long
    UltimoRenglon = GetLastRow(DataSheet)
    For Each ActiveCelda In DataSheet.Range(IdColumnLetter & "2:" & IdColumnLetter & UltimoRenglon)
        
        If ActiveCelda.Value = IdCriterio Then
            Contar = Contar + 1
            If RangoConjunto Is Nothing Then
                Set RangoConjunto = ActiveCelda
            Else
                Set RangoConjunto = Application.Union(RangoConjunto, ActiveCelda)
            End If
        End If
        
    Next
    If RangoConjunto Is Nothing Then
        DeleteRows = Contar
    Else
        DeleteRows = Contar
        RangoConjunto.EntireRow.Delete
    End If
    
End Function

Public Function DeleteRowsxDiferenteFecha(DataSheet As Worksheet, IdColumnLetter As String, IdCriterio As Long) As Long
    
    Dim UltimoRenglon As Long
    Dim ActiveCelda As Range
    Dim RangoConjunto As Range
    Dim Contar As Long
    UltimoRenglon = GetLastRow(DataSheet)
    For Each ActiveCelda In DataSheet.Range(IdColumnLetter & "2:" & IdColumnLetter & UltimoRenglon)
        
        If CLng(Fix(ActiveCelda.Value)) <> IdCriterio Then
            Contar = Contar + 1
            If RangoConjunto Is Nothing Then
                Set RangoConjunto = ActiveCelda
            Else
                Set RangoConjunto = Application.Union(RangoConjunto, ActiveCelda)
            End If
        End If
        
    Next
    If RangoConjunto Is Nothing Then
        DeleteRowsxDiferenteFecha = Contar
    Else
        DeleteRowsxDiferenteFecha = Contar
        RangoConjunto.EntireRow.Delete
    End If
    
End Function

Public Function DeleteRowsxValorMenorIgualCero(DataSheet As Worksheet, IdColumnLetter As String) As Long
    
    Dim UltimoRenglon As Long
    Dim ActiveCelda As Range
    Dim RangoConjunto As Range
    Dim Contar As Long
    UltimoRenglon = GetLastRow(DataSheet)
    For Each ActiveCelda In DataSheet.Range(IdColumnLetter & "2:" & IdColumnLetter & UltimoRenglon)
        
        If CLng(Fix(ActiveCelda.Value)) <= 0 Then
            Contar = Contar + 1
            If RangoConjunto Is Nothing Then
                Set RangoConjunto = ActiveCelda
            Else
                Set RangoConjunto = Application.Union(RangoConjunto, ActiveCelda)
            End If
        End If
        
    Next
    If RangoConjunto Is Nothing Then
        DeleteRowsxValorMenorIgualCero = Contar
    Else
        DeleteRowsxValorMenorIgualCero = Contar
        RangoConjunto.EntireRow.Delete
    End If
    
End Function

Public Function DeleteRowsxDiferenteFechaApp(DataSheet As Worksheet, IdColumnLetter As String, IdCriterio As Long, ActivoApp As Application) As Long
    
    Dim UltimoRenglon As Long
    Dim ActiveCelda As Range
    Dim RangoConjunto As Range
    Dim Contar As Long
    UltimoRenglon = GetLastRow(DataSheet)
    For Each ActiveCelda In DataSheet.Range(IdColumnLetter & "2:" & IdColumnLetter & UltimoRenglon)
        
        If CLng(Fix(ActiveCelda.Value)) <> IdCriterio Then
            Contar = Contar + 1
            If RangoConjunto Is Nothing Then
                Set RangoConjunto = ActiveCelda
            Else
                Set RangoConjunto = ActivoApp.Union(RangoConjunto, ActiveCelda)
            End If
        End If
        
    Next
    If RangoConjunto Is Nothing Then
        DeleteRowsxDiferenteFechaApp = Contar
    Else
        DeleteRowsxDiferenteFechaApp = Contar
        RangoConjunto.EntireRow.Delete
    End If
    
End Function

Public Function DeleteRowsXMes(DataSheet As Worksheet, FechaColumnLetter As String, IdCriterioMes As Long) As Long
    
    Dim UltimoRenglon As Long
    Dim ActiveCelda As Range
    Dim RangoConjunto As Range
    Dim FechaComparar As Long
    Dim Contar As Long
    Contar = 0
    UltimoRenglon = GetLastRow(DataSheet)
    For Each ActiveCelda In DataSheet.Range(FechaColumnLetter & "2:" & FechaColumnLetter & UltimoRenglon)
        FechaComparar = (Year(ActiveCelda.Value) * 12 + Month(ActiveCelda.Value))
        If FechaComparar > 24180 And FechaComparar < 24360 Then
            If FechaComparar = IdCriterioMes Then
                Contar = Contar + 1
                If RangoConjunto Is Nothing Then
                    Set RangoConjunto = ActiveCelda
                Else
                    Set RangoConjunto = Application.Union(RangoConjunto, ActiveCelda)
                End If
            End If
        End If
    Next
    If RangoConjunto Is Nothing Then
        DeleteRowsXMes = 0
    Else
        DeleteRowsXMes = Contar
        RangoConjunto.EntireRow.Delete
    End If
    
End Function

Public Function DatePorNombreMes(Fecha As Date) As String
    DatePorNombreMes = Format(Fecha, "mmmm")
End Function

Public Sub DirectoryValidate(Carpeta As String)

    Dim FullDirectory As String
    Select Case Carpeta
        Case Is = "Analytics"
            FullDirectory = ThisWorkbook.Path & "\Tools\Analytics"
        Case Is = "Backup Images"
            FullDirectory = ThisWorkbook.Path & "\Tools\Backup Images"
        Case Is = "Backups"
            FullDirectory = ThisWorkbook.Path & "\Tools\Backups"
        Case Is = "Compras"
            FullDirectory = ThisWorkbook.Path & "\Tools\Compras"
        Case Is = "Compras PDFs"
            FullDirectory = ThisWorkbook.Path & "\Tools\Compras PDFs"
        Case Is = "Correo"
            FullDirectory = ThisWorkbook.Path & "\Tools\Correo"
        Case Is = "Devoluciones"
            FullDirectory = ThisWorkbook.Path & "\Tools\Devoluciones"
        Case Is = "Facturas"
            FullDirectory = ThisWorkbook.Path & "\Tools\Facturas"
        Case Is = "History"
            FullDirectory = ThisWorkbook.Path & "\Tools\History"
        Case Is = "Images"
            FullDirectory = ThisWorkbook.Path & "\Tools\Images"
        Case Is = "Inventory"
            FullDirectory = ThisWorkbook.Path & "\Tools\Inventory"
        Case Is = "Reportes"
            FullDirectory = ThisWorkbook.Path & "\Tools\Reportes"
        Case Is = "Temporal"
            FullDirectory = ThisWorkbook.Path & "\Tools\Temporal"
        Case Is = "Tickets"
            FullDirectory = ThisWorkbook.Path & "\Tools\Tickets"
        Case Is = "Ventas"
            FullDirectory = ThisWorkbook.Path & "\Tools\Ventas"
        Case Is = "Ventas PDFs"
            FullDirectory = ThisWorkbook.Path & "\Tools\Ventas PDFs"
        Case Is = "Tickets PDFs"
            FullDirectory = ThisWorkbook.Path & "\Tools\Tickets PDFs"
        Case Is = "XMLs"
            FullDirectory = ThisWorkbook.Path & "\Tools\XMLs"
        Case Else
            MsgBox "No hay registro de carpeta  " & Carpeta, vbCritical
    End Select
    
    If Dir(ThisWorkbook.Path & "\Tools", vbDirectory) = "" Then
            MkDir ThisWorkbook.Path & "\Tools"
            MsgBox "Carpeta Tools creado.", vbInformation
    End If
    If Dir(FullDirectory, vbDirectory) = "" Then
            MkDir FullDirectory
            MsgBox "La carpeta  " & FullDirectory & "  fue creado.", vbInformation
    End If
    
End Sub

Public Function MsgBoxCentered(Mensaje As String, VbYesNoVbInformation As Byte, Ventana As Object) As Byte

    Load UserFormMessageBox
    UserFormMessageBox.GetTexto Mensaje, VbYesNoVbInformation, Ventana
    UserFormMessageBox.Show
    MsgBoxCentered = UserFormMessageBox.RespuestaMsgBox
    Unload UserFormMessageBox
    
End Function

Public Function ArrayUniqueValues(HojaDataValues As Worksheet, ColumnaValues As String) As Variant
    Dim Temporal As Worksheet
    Dim ArrayTemporal As Variant
    
    Set Temporal = NuevaHoja("Temporal")
    Temporal.Range("A:A").ColumnWidth = 20
    
    UltimoRenglon = GetLastRow(HojaDataValues)
    If UltimoRenglon > 1 Then
        Temporal.Range("A1:A" & UltimoRenglon) = HojaDataValues.Range(ColumnaValues & "1:" & ColumnaValues & UltimoRenglon).Value
        
        Set RangeBase = Temporal.Range("A2:A" & UltimoRenglon)
        RangeBase.RemoveDuplicates Columns:=Array(1), Header:=xlNo
        
        Temporal.Columns("A:A").Sort key1:=Temporal.Range("A1"), order1:=xlAscending, Header:=xlYes
        
        UltimoRenglon = GetLastRow(Temporal)
        If UltimoRenglon > 1 Then
            If UltimoRenglon = 2 Then
                ReDim ArrayTemporal(1 To 1)
                ArrayTemporal(1) = Temporal.Range("A2")
            Else
                Set TheRange = Temporal.Range("A2:A" & UltimoRenglon)
                ArrayTemporal = TheRange
            End If
        Else
            ReDim ArrayTemporal(0)
        End If
    Else
        ReDim ArrayTemporal(0)
    End If
    ArrayUniqueValues = ArrayTemporal

End Function

Public Function FechaSerial(xA|fffd|o As Long, xmes As Long, xdia As Long) As Long

    FechaSerial = DateSerial(xA|fffd|o, xmes, xdia)

End Function

Public Sub CopiarTextoEnPortapapeles(texto As String)

    Dim TextControl As Object
    Set TextControl = CreateObject("new:{1C3B4210-F441-11CE-B9EA-00AA006B1A69}")
    TextControl.SetText texto
    TextControl.PutInClipboard
    Set TextControl = Nothing

End Sub

Public Function TextoAPalabras(texto As String) As Variant
    Dim Palabra() As String
    Dim ContarPalabar As Long
    Temporal = ""
    ContarPalabra = 0
    Parrafo = texto & " "
    For ContarLetra = 1 To Len(Parrafo)
        If Mid(Parrafo, ContarLetra, 1) = " " Then
            If Trim(Temporal) <> "" Then
                ContarPalabra = ContarPalabra + 1
                ReDim Preserve Palabra(1 To ContarPalabra)
                Palabra(ContarPalabra) = Temporal
                Temporal = ""
            End If
        Else
            Temporal = Temporal & Mid(Parrafo, ContarLetra, 1)
        End If
    Next
    If ContarPalabra = 0 Then
        ReDim Palabra(0)
    End If
    TextoAPalabras = Palabra
    
End Function

Public Function GetLastRow(SheetGetRow As Worksheet) As Long
    
    Dim Contador As Long
    Dim Info As String
    GetLastRow = SheetGetRow.UsedRange.Rows(SheetGetRow.UsedRange.Rows.Count).Row
    
    Info = Trim(SheetGetRow.Range("A" & GetLastRow + 1) & SheetGetRow.Range("B" & GetLastRow + 1) & SheetGetRow.Range("C" & GetLastRow + 1) & SheetGetRow.Range("D" & GetLastRow + 1) & SheetGetRow.Range("E" & GetLastRow + 1) & SheetGetRow.Range("AA" & GetLastRow + 1) & SheetGetRow.Range("AB" & GetLastRow + 1) & SheetGetRow.Range("AC" & GetLastRow + 1))
    If Info <> "" Then
        MsgBox "Error GetLastRow Sobreescritura!!! ", vbExclamation
    End If
    
    For Contador = GetLastRow To 1 Step -1
        Info = Trim(SheetGetRow.Range("A" & Contador) & SheetGetRow.Range("B" & Contador) & SheetGetRow.Range("C" & Contador) & SheetGetRow.Range("D" & Contador) & SheetGetRow.Range("E" & Contador) & SheetGetRow.Range("AA" & Contador) & SheetGetRow.Range("AB" & Contador) & SheetGetRow.Range("AC" & Contador))
        If Info = "" Then
            GetLastRow = Contador - 1
        Else
            Exit Function
        End If
    Next
    
End Function

Public Function SheetExistsWorkbook(sheetToFind As String, LibroActivo As Workbook) As Boolean

    SheetExistsWorkbook = False
    For Each Sheet In LibroActivo.Worksheets
        If sheetToFind = Sheet.Name Then
            SheetExistsWorkbook = True
            Exit Function
        End If
    Next Sheet

End Function

Public Function SheetExists(sheetToFind As String) As Boolean

    SheetExists = False
    For Each Sheet In Worksheets
        If sheetToFind = Sheet.Name Then
            SheetExists = True
            Exit Function
        End If
    Next Sheet

End Function

Public Sub DeleteHojaThisBook(Nombre As String)
    
    If SheetExists(Nombre) = True Then
    
        Application.DisplayAlerts = False
        ThisWorkbook.Worksheets(Nombre).Delete
        Application.DisplayAlerts = True

    End If

End Sub

Public Function NuevaHojaWorkbook(Nombre As String, LibroActivo As Workbook) As Object
    
    If SheetExistsWorkbook(Nombre, LibroActivo) Then
        Application.DisplayAlerts = False
        LibroActivo.Worksheets(Nombre).Delete
        Application.DisplayAlerts = True

    End If
    
    Set NuevaHojaWorkbook = LibroActivo.Sheets.Add(after:=LibroActivo.Sheets(LibroActivo.Sheets.Count))
    NuevaHojaWorkbook.Name = Nombre

End Function

Public Function NuevaHoja(Nombre As String) As Object
    
    If SheetExists(Nombre) Then
        Application.DisplayAlerts = False
        Worksheets(Nombre).Delete
        Application.DisplayAlerts = True

    End If
    
    Set NuevaHoja = ThisWorkbook.Sheets.Add(after:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
    NuevaHoja.Name = Nombre

End Function

Public Function FormatoMoneda(Valor As Double, Simbolo As String, Largo As Byte) As String

    'Largo   ------>   Rango 20 - 25
    Dim Cadena As String
    Dim Longitud As Long
    Cadena = Format(Valor, "#,##0.00")
    Longitud = (Largo - Len(Cadena)) * 1.5
    Cadena = Chr(144) & Simbolo & Space(Longitud) & Format(Valor, "#,##0.00")
    FormatoMoneda = Cadena
    
End Function

Public Function FormatoFecha(FechaValor As Double) As String

    FormatoFecha = Chr(144) & Format(FechaValor, "dd-mmm-yyyy")
    
End Function

Function NombreMes(NumeroMes As Long) As String

        Select Case NumeroMes
            Case Is = 1
                NombreMes = "Ene"
            Case Is = 2
                NombreMes = "Feb"
            Case Is = 3
                NombreMes = "Mar"
            Case Is = 4
                NombreMes = "Abr"
            Case Is = 5
                NombreMes = "May"
            Case Is = 6
                NombreMes = "Jun"
            Case Is = 7
                NombreMes = "Jul"
            Case Is = 8
                NombreMes = "Ago"
            Case Is = 9
                NombreMes = "Sep"
            Case Is = 10
                NombreMes = "Oct"
            Case Is = 11
                NombreMes = "Nov"
            Case Is = 12
                NombreMes = "Dic"
            Case Else
                MsgBox "Error mes", vbCritical
        End Select
        
End Function

Public Sub MostrarResponsiva()
    
        MenuOpciones.Show
    
End Sub

Public Function QuitarSimbolos(texto As String) As String
    Dim Posicion As Long, LongitudTexto As Long
    Dim Letra As String
  
    QuitarSimbolos = ""
    
    LongitudTexto = Len(texto)
    
    For Posicion = 1 To LongitudTexto
        Letra = Mid(texto, Posicion, 1)
        Select Case Letra
            
            
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "a"
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "A"
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "a"
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "A"
            
            
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "e"
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "E"
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "e"
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "E"
            
            
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "i"
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "I"
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "i"
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "I"
                
                
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "o"
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "O"
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "o"
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "O"
            
            
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "u"
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "U"
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "u"
            Case Is = "|fffd|"
                QuitarSimbolos = QuitarSimbolos & "U"
                
                
'            Case Is = "|fffd|"
'                QuitarSimbolos = QuitarSimbolos & "n"
'            Case Is = "|fffd|"
'                QuitarSimbolos = QuitarSimbolos & "N"
                
                
            Case Else
                QuitarSimbolos = QuitarSimbolos & Mid(texto, Posicion, 1)
        End Select
    Next Posicion
End Function

Public Sub ActualizarFoto(Foto As String)
       
        Dim Ruta As String
        Dim Variable As Variant
        
        Ruta = ThisWorkbook.Path
        On Error GoTo NOFILE
    
        Variable = Trim(Ruta & "\Tools\Images\" & Trim(Foto) & ".jpg")
        If Trim(Dir(Ruta & "\Tools\Images\" & Trim(Foto) & ".jpg")) = Trim(Foto) & ".jpg" Then
            Set FormaCodigos.ImagenPrincipal.Picture = LoadPicture(Variable)
        Else
            Set FormaCodigos.ImagenPrincipal.Picture = Nothing
       End If
        FormaCodigos.FrameRefrescar.Repaint
NOFILE:
End Sub

Public Sub ActualizarFotoPRE(Foto As String)
       
        Dim Ruta As String
        Dim Variable As Variant
        
        Ruta = ThisWorkbook.Path
        On Error GoTo NOFILE
    
        Variable = Foto
        
            Set FormaCodigos.ImagenPrincipal.Picture = LoadPicture(Variable)
       
        FormaCodigos.Repaint
        FormaCodigos.FrameRefrescar.Repaint
        
NOFILE:
End Sub

Public Sub ActualizarFotoPV(Foto As String)
       
        Dim Ruta As String
        Dim Variable As Variant
        
        Ruta = ThisWorkbook.Path
        On Error GoTo NOFILE
    
        Variable = Trim(Ruta & "\Tools\Images\" & Trim(Foto) & ".jpg")
        If Trim(Dir(Ruta & "\Tools\Images\" & Trim(Foto) & ".jpg")) = Trim(Foto) & ".jpg" Then
            Set Asignaciones.ImagenPuntodeVenta.Picture = LoadPicture(Variable)
        Else
            Set Asignaciones.ImagenPuntodeVenta.Picture = Nothing
       End If
        Asignaciones.Repaint
   
NOFILE:
End Sub

Public Function PesosMN(tyCantidad As Currency) As String
Dim lyCantidad As Currency
Dim lyCentavos As Currency
Dim lnDigito As Byte
Dim lnPrimerDigito As Byte
Dim lnSegundoDigito As Byte
Dim lnTercerDigito As Byte
Dim lcBloque As String
Dim lnNumeroBloques As Byte
Dim lnBloqueCero As Byte

Dim laUnidades As Variant
Dim laDecenas As Variant
Dim laCentenas As Variant
Dim i As Variant

tyCantidad = Round(tyCantidad, 2)
lyCantidad = Int(tyCantidad)
lyCentavos = (tyCantidad - lyCantidad) * 100
laUnidades = Array("UN", "DOS", "TRES", "CUATRO", "CINCO", "SEIS", "SIETE", "OCHO", "NUEVE", "DIEZ", "ONCE", "DOCE", "TRECE", "CATORCE", "QUINCE", "DIECISEIS", "DIECISIETE", "DIECIOCHO", "DIECINUEVE", "VEINTE", "VEINTIUN", "VEINTIDOS", "VEINTITRES", "VEINTICUATRO", "VEINTICINCO", "VEINTISEIS", "VEINTISIETE", "VEINTIOCHO", "VEINTINUEVE")
laDecenas = Array("DIEZ", "VEINTE", "TREINTA", "CUARENTA", "CINCUENTA", "SESENTA", "SETENTA", "OCHENTA", "NOVENTA")
laCentenas = Array("CIENTO", "DOSCIENTOS", "TRESCIENTOS", "CUATROCIENTOS", "QUINIENTOS", "SEISCIENTOS", "SETECIENTOS", "OCHOCIENTOS", "NOVECIENTOS")

lnNumeroBloques = 1

If tyCantidad < 0 Then
    PesosMN = "Error, esta funci|fffd|n no representa n|fffd|meros negativos"
    Exit Function
End If

If tyCantidad >= 1000000000 Then
    PesosMN = "Error, n|fffd|mero excede el l|fffd|mite de esta funci|fffd|n"
Else
    Do
        lnPrimerDigito = 0
        lnSegundoDigito = 0
        lnTercerDigito = 0
        lcBloque = ""
        lnBloqueCero = 0
        For i = 1 To 3
            lnDigito = lyCantidad Mod 10
            If lnDigito <> 0 Then
                Select Case i
                    Case 1
                        lcBloque = " " & laUnidades(lnDigito - 1)
                        lnPrimerDigito = lnDigito
                    Case 2
                        If lnDigito <= 2 Then
                            lcBloque = " " & laUnidades((lnDigito * 10) + lnPrimerDigito - 1)
                        Else
                            lcBloque = " " & laDecenas(lnDigito - 1) & IIf(lnPrimerDigito <> 0, " Y", Null) & lcBloque
                        End If
                        lnSegundoDigito = lnDigito
                    Case 3
                        lcBloque = " " & IIf(lnDigito = 1 And lnPrimerDigito = 0 And lnSegundoDigito = 0, "CIEN", laCentenas(lnDigito - 1)) & lcBloque
                        lnTercerDigito = lnDigito
                End Select
            Else
                lnBloqueCero = lnBloqueCero + 1
            End If
            lyCantidad = Int(lyCantidad / 10)
            If lyCantidad = 0 Then
                Exit For
            End If
        Next i
            Select Case lnNumeroBloques
            Case 1
                PesosMN = lcBloque
            Case 2
                'PesosMN = lcBloque & IIf(lnBloqueCero = 3, Null, " MIL" & PesosMN) Error Codigo Original
                PesosMN = lcBloque & IIf(lnBloqueCero = 3, PesosMN, " MIL" & PesosMN)
            Case 3
                PesosMN = lcBloque & IIf(lnPrimerDigito = 1 And lnSegundoDigito = 0 And lnTercerDigito = 0, " MILLON" & PesosMN, " MILLONES" & PesosMN)
            End Select
            lnNumeroBloques = lnNumeroBloques + 1
    Loop Until lyCantidad = 0
    If PesosMN = "" Then
        PesosMN = " CERO"
    End If
    PRIMERAPALABRA = "SON"
    UNPESO = " PESO "
    VARIOSPESOS = " PESOS "
    MONEDANACIONAL = "M.N."
    PesosMN = PRIMERAPALABRA & PesosMN & IIf(tyCantidad > 1, VARIOSPESOS, UNPESO) & IIf(lyCentavos > 1, Format(Str(lyCentavos)) & "/100 " & MONEDANACIONAL, "00/100 " & MONEDANACIONAL)
End If
End Function

Public Function FormatoFolio(Folio As Long, Fecha As Date) As String
    FormatoFolio = "F-" & WorksheetFunction.Rept("0", 7 - Len("F" & Folio)) & Folio & " " & Format(Fecha, "dd-mmm-yyyy")
End Function

Function IsFileOpen(filename As String) As Boolean
    Dim filenum As Integer, errnum As Integer

    On Error Resume Next
    filenum = FreeFile()
    
    Open filename For Input Lock Read As #filenum

    Close filenum
    errnum = Err
    On Error GoTo 0
    Select Case errnum
        Case 0
            IsFileOpen = False
        Case 70
            IsFileOpen = True
        Case Else
            IsFileOpen = False
    End Select
End Function
Attribute VB_Name = "AVenta"
Attribute VB_Base = "0{107D908B-9D38-4277-A30F-4B07790970E1}{62C3570E-B212-4460-AAC5-025FA9E55948}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim MyBook As Workbook
Dim ArrayDetallesSalidas As Variant
Dim ArrayArticulos, ArrayClientes, ArraySeries, ArrayKits As Variant
Dim HojaTemporal As Worksheet
Dim RenglonTecnico As Long
Dim RenglonTecnicoHistory As Long
Dim RenglonTool As Long
Dim RenglonVenta As Long
Dim CantidaddeArticulos As Double

Dim CodigoActive As Long
Dim CuentaActiva As Long

Dim ControlFecha As ClassControlDate
Dim InsertarItem As Boolean
Dim RenglonHistory As Long

Dim TotalVenta As Double
Dim TotalArticulos As Long
Dim EfectivoGrabar As Double

Public VentanaLlamada As Object
Dim ControlActivo As String
Dim Inicio As Boolean
Dim LayOutWindow As Boolean
Dim UltimoItemSelected As Long
Dim PalabraBusqueda As String

Private Sub ComboBoxA|fffd|o_change()
    MyBook.Activate
    With ComboBoxA|fffd|o
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub ComboBoxDia_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MyBook.Activate
    With ComboBoxDia
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub ComboBoxMes_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MyBook.Activate
    With ComboBoxMes
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub CommandButton18_Click()
    MyBook.Activate
     If ListBoxHerramientas.ListCount > 1 Then
        PalabraBusqueda = InputBox("Palabra para buscar")
        For Contador = 0 To ListBoxHerramientas.ListCount - 1
            If InStr(1, ListBoxHerramientas.List(Contador, 1), PalabraBusqueda, vbTextCompare) > 0 Then
                ListBoxHerramientas.Selected(Contador) = True
                Exit For
            End If
        Next
     End If
End Sub

Private Sub CommandButton19_Click()
    MyBook.Activate
     If TextBoxListIndex >= 0 Then
        Temporal = ListBoxHerramientas.ListIndex + 1
        
        If Temporal < ListBoxHerramientas.ListCount Then
            ListBoxHerramientas.Selected(Temporal) = True
        End If
    End If
    
    If ControlActivo = "TextBoxCantidad" Then
        TextBoxCantidad.SetFocus
        With TextBoxCantidad
        .SelStart = 0
        .SelLength = Len(.Text)
        End With
    End If
    If ControlActivo = "TextBoxSerie" Then
        TextBoxSerie.SetFocus
        With TextBoxSerie
        .SelStart = 0
        .SelLength = Len(.Text)
        End With
    End If
    If ControlActivo = "TextBoxComentario" Then
        TextBoxComentario.SetFocus
        With TextBoxComentario
        .SelStart = 0
        .SelLength = Len(.Text)
        End With
    End If
End Sub

Private Sub CommandButtonAyuda_Click()
    MyBook.Activate
    Dim Control As Object
    For Each Control In Me.Controls
        If Control.Tag = "Desbloquear" Then
            Control.MultiLine = False
            Control.TabKeyBehavior = False
            Control.EnterKeyBehavior = False
            Control.WordWrap = True
        End If
    Next
    
    zLogin.SetClassWindow 2
    zLogin.Show
    
    TextBoxBuscarHerramienta.SetFocus
    
End Sub

Private Sub CommandButtonControlVentas_Click()
    
    MyBook.Activate
    ControlVentas.NombreInicio = TextBoxNombre
    ControlVentas.Show
    TextBoxBuscarHerramienta.SetFocus
    
End Sub

Private Sub CommandButtonFindPrevious_Click()
    MyBook.Activate
    Dim Fin As Long
    If ListBoxHerramientas.ListIndex = -1 Then
        Fin = ListBoxHerramientas.ListCount - 1
    Else
        Fin = ListBoxHerramientas.ListIndex - 1
    End If
    If ListBoxHerramientas.ListCount > 1 Then
        For Contador = Fin To 0 Step -1
            If InStr(1, ListBoxHerramientas.List(Contador, 1), PalabraBusqueda, vbTextCompare) > 0 Then
                ListBoxHerramientas.Selected(Contador) = True
                Exit For
            End If
        Next
    End If
End Sub

Private Sub CommandButtonGuardarFactura_Click()
    MyBook.Activate
    Dim UltimoRenglon As Long
    Dim SaldoVenta As Double
    Dim FormatoGuardar As String
    Dim Idreport As Long
    
    UltimoRenglon = GetLastRow(Worksheets("DetallesSalidas"))
    If UltimoRenglon < 2 Then
        MsgBoxCentered "No hay articulos para grabar", vbInformation, Me
        TextBoxBuscarHerramienta.SetFocus
        Exit Sub
    Else
    
        If Worksheets("Preferencias").Range("B5") <> "" Then
            Efectivo.SetTotalAPagar TotalVenta, TotalArticulos
            Efectivo.Show
            EfectivoGrabar = Efectivo.GetEfectivo
            FormatoGuardar = Efectivo.GetFormato
            Unload Efectivo
            If EfectivoGrabar = 0 Then
                Exit Sub
            End If
        Else
            MenuFormatoPrint.Show
            FormatoGuardar = MenuFormatoPrint.GetFormatoGuardar
            Unload MenuFormatoPrint
            If FormatoGuardar = "" Then
                MsgBoxCentered "Se cancelo guardar", vbInformation, Me
                Exit Sub
            End If
        End If
        
        GuardarVenta
        
        UltimoRenglon = GetLastRow(Worksheets("Ventas"))
        Idreport = Val(Worksheets("Ventas").Range("A" & UltimoRenglon))
        
        If FormatoGuardar = "Formato Excel" Then
            ReporteVentasExcel Idreport
        End If
        
        If FormatoGuardar = "Formato PDF" Then
            ReporteVentasPDF Idreport
        End If

        If FormatoGuardar = "Imprimir Reporte" Then
            ReporteFacturaImprimir Idreport
        End If
        
        If FormatoGuardar = "Formato XML" Then
            GenerarDocumentoXML Idreport
        End If
        
    End If

End Sub

Private Sub CommandButtonGuardarTicket_Click()
    MyBook.Activate
    Dim UltimoRenglon As Long
    Dim SaldoVenta As Double
    Dim FormatoGuardar As String
    Dim Idreport As Long
    
    UltimoRenglon = GetLastRow(Worksheets("DetallesSalidas"))
    If UltimoRenglon < 2 Then
        MsgBoxCentered "No hay articulos para grabar", vbInformation, Me
        TextBoxBuscarHerramienta.SetFocus
        Exit Sub
    Else
    
        If Worksheets("Preferencias").Range("B5") <> "" Then
            Efectivo.SetTotalAPagar TotalVenta, TotalArticulos
            Efectivo.Show
            EfectivoGrabar = Efectivo.GetEfectivo
            FormatoGuardar = Efectivo.GetFormato
            Unload Efectivo
            If EfectivoGrabar = 0 Then
                Exit Sub
            End If
        Else
            MenuFormatoPrint.Show
            FormatoGuardar = MenuFormatoPrint.GetFormatoGuardar
            Unload MenuFormatoPrint
            If FormatoGuardar = "" Then
                MsgBoxCentered "Se cancelo guardar", vbInformation, Me
                Exit Sub
            End If
        End If
        
        GuardarVenta
        
        UltimoRenglon = GetLastRow(Worksheets("Ventas"))
        Idreport = Val(Worksheets("Ventas").Range("A" & UltimoRenglon))
        
        If FormatoGuardar = "Formato Excel" Then
            ReporteTicketsExcel Idreport
        End If
        
        If FormatoGuardar = "Formato PDF" Then
            ReporteTicketsPDF Idreport
        End If
        
        If FormatoGuardar = "Imprimir Reporte" Then
            ReporteTicketImprimir Idreport
        End If
        
        If FormatoGuardar = "Formato XML" Then
            GenerarDocumentoXML Idreport
        End If
        
    End If
End Sub

Private Sub GuardarVenta()

    MyBook.Activate
    Dim UltimoRenglon As Long

    UltimoRenglon = GetLastRow(Worksheets("DetallesSalidas"))
    
    'Folio
    Worksheets("DetallesSalidas").Range("AA2:AA" & UltimoRenglon) = TextBoxFolio.Value
    'Fecha
    Worksheets("DetallesSalidas").Range("AK2:AK" & UltimoRenglon) = ControlFecha.GetFecha + TimeValue(Time)

    
    If RenglonTecnico = 0 Then
    
        Worksheets("DetallesSalidas").Range("AB2:AB" & UltimoRenglon) = 0   ' Id Nombre
        Worksheets("DetallesSalidas").Range("AC2:AC" & UltimoRenglon) = "Sin Registro"   ' Nombre
        
    Else
    
        Worksheets("DetallesSalidas").Range("AB2:AB" & UltimoRenglon) = Worksheets("Clientes").Range("A" & RenglonTecnico)   ' Id Nombre
        Worksheets("DetallesSalidas").Range("AC2:AC" & UltimoRenglon) = Worksheets("Clientes").Range("B" & RenglonTecnico)   ' Nombre
        Worksheets("DetallesSalidas").Range("AW2:AW" & UltimoRenglon) = Worksheets("Clientes").Range("C" & RenglonTecnico)   ' Direccion
        Worksheets("DetallesSalidas").Range("AX2:AX" & UltimoRenglon) = Worksheets("Clientes").Range("D" & RenglonTecnico)   ' Correo
        Worksheets("DetallesSalidas").Range("AY2:AY" & UltimoRenglon) = Worksheets("Clientes").Range("E" & RenglonTecnico)   ' Telefono
        Worksheets("DetallesSalidas").Range("AZ2:AZ" & UltimoRenglon) = Worksheets("Clientes").Range("F" & RenglonTecnico)   ' Cliete/Proveedor
        
    End If

    Worksheets("DetallesSalidas").Range("AR2:AR" & UltimoRenglon) = EfectivoGrabar   'Efectivo
        
        UltimoRenglon = GetLastRow(Worksheets("DetallesSalidas"))
        For Contador = 2 To UltimoRenglon
            RenglonCodigo = Application.Match(Worksheets("DetallesSalidas").Cells(Contador, 30), Worksheets("Articulos").Columns(1), 0)
            If IsError(RenglonCodigo) Then
                MsgBoxCentered "Error Tabla Codigos No se encuentra Id " & Worksheets("Temporal").Cells(Contador, 30), vbInformation, Me
            Else
                Worksheets("Articulos").Cells(RenglonCodigo, 7) = Worksheets("Articulos").Cells(RenglonCodigo, 7) - Worksheets("DetallesSalidas").Cells(Contador, 34)
                
            End If
        Next
        
        RenglonDisponible = GetLastRow(Worksheets("Ventas")) + 1
        Worksheets("DetallesSalidas").Range("AA2:AZ" & UltimoRenglon).Copy
        Worksheets("Ventas").Range("A" & RenglonDisponible).PasteSpecial (xlPasteValues)
        
    On Error GoTo ErrorAlGuardar
    
    ThisWorkbook.Save
    
    NuevoRegistro
    
    TextBoxLookTecnico = ""
    RenglonTecnico = 0
    LimpiarDatosCliente
        
    Exit Sub
    
ErrorAlGuardar:
    
    MsgBox "Error al guardar , descripci|fffd|n del error  " & Err.Description
    
End Sub

Private Sub CommandButtonKits_Click()
    MyBook.Activate
    ControlKits.Show
    If FolioKit = 0 Then
        TextBoxBuscarHerramienta.SetFocus
        Exit Sub
    End If
    TextBoxSerie = Empty
    TextBoxComentario = Empty
    
    RenglonDisponible = Worksheets("DetallesSalidas").Range("AD" & Worksheets("DetallesSalidas").Rows.Count).End(xlUp).Row
    TOTALGRUPOS = Worksheets("Kits").Range("A" & Worksheets("Kits").Rows.Count).End(xlUp).Row
    TOTALCODIGOS = Worksheets("Articulos").Range("A" & Worksheets("Articulos").Rows.Count).End(xlUp).Row
    For CONTADORGRUPOS = 2 To TOTALGRUPOS
        If Worksheets("Kits").Cells(CONTADORGRUPOS, 1) = FolioKit Then
            
            For ContadorCodigos = 2 To TOTALCODIGOS
                
                If Val(Worksheets("Kits").Cells(CONTADORGRUPOS, 3)) = Val(Worksheets("Articulos").Cells(ContadorCodigos, 1)) Then
                    
                    RenglonTool = ContadorCodigos
                    CantidaddeArticulos = Worksheets("Kits").Range("G" & CONTADORGRUPOS) * CantidadKits
                    
                    ActualizarLista
                    
                    Exit For
                End If
                
            Next
        End If
    Next
    If ListBoxHerramientas.ListCount > 0 Then
            ListBoxHerramientas.Selected(ListBoxHerramientas.ListCount - 1) = True
    End If

End Sub

Private Sub CommandButtonMenuItems_Click()

    MyBook.Activate
    Dim ArrayVentaTemp As Variant
    Dim IndiceCodigo As Long
    MenuArticulos.Show
    
    If UBound(MenuArticulos_ArrayVenta) <> 0 Then
    For IndiceCodigo = 1 To UBound(MenuArticulos_ArrayVenta, 2)
        If MenuArticulos_ArrayVenta(2, IndiceCodigo) > 0 Then
            RenglonTool = GetRowItem(IndiceCodigo, Worksheets("Articulos"), "A")
            CantidaddeArticulos = MenuArticulos_ArrayVenta(2, IndiceCodigo)
            ActualizarLista
        End If
    Next
    End If
    ActualizarArrayArticulos
    Unload MenuArticulos
    TextBoxBuscarHerramienta.SetFocus
    
End Sub

Private Sub CommandButtonNextFind_Click()
    MyBook.Activate
    Dim Inicio As Long
    If ListBoxHerramientas.ListIndex = -1 Then
        Inicio = 0
    Else
        Inicio = ListBoxHerramientas.ListIndex + 1
    End If
    If ListBoxHerramientas.ListCount > 1 Then
        For Contador = Inicio To ListBoxHerramientas.ListCount - 1
            If InStr(1, ListBoxHerramientas.List(Contador, 1), PalabraBusqueda, vbTextCompare) > 0 Then
                ListBoxHerramientas.Selected(Contador) = True
                Exit For
            End If
        Next
    End If
End Sub

Private Sub CommandButtonNuevaCuenta_Click()

    MyBook.Activate
    Cuentas.SetCodigo 0
    Cuentas.Show
    Unload Cuentas
    ActualizarArrayClientes
    
End Sub

Private Sub CommandButtonNuevoRegistro_Click()
    MyBook.Activate
    Herramientas.SetCodigo 0
    Herramientas.Show
    Unload Herramientas
    ActualizarArrayArticulos
    TextBoxBuscarHerramienta.SetFocus
End Sub

Private Sub CommandButtonPersonal_Click()
    MyBook.Activate
    If CuentaActiva = 0 Then
        MsgBoxCentered "Seleccione una Cuenta.", vbInformation, Me
        Exit Sub
    End If
    Cuentas.SetCodigo CuentaActiva
    Cuentas.Show
    Unload Cuentas
    ActualizarArrayClientes
    ActualizarDatosCliente
    
End Sub

Private Sub CommandButtonTodosLosItems_Click()
    MyBook.Activate
    Confirmacion = MsgBoxCentered("Desea eliminar todos los registros?", vbYesNo, Me)
    If Confirmacion = vbYes Then
        NuevoRegistro
    End If
    TextBoxBuscarHerramienta = Empty
    TextBoxBuscarHerramienta.SetFocus
End Sub

Private Sub CommandButtonTools_Click()

    MyBook.Activate
    If CodigoActive = 0 Then
        MsgBoxCentered "Seleccione un Item.", vbInformation, Me
        Exit Sub
    End If
    Herramientas.SetCodigo CodigoActive
    Herramientas.Show
    Unload Herramientas
    ActualizarArrayArticulos
    TextBoxBuscarHerramienta.SetFocus
    
End Sub

Private Sub CommandButtonWindowConfig_Click()
    MyBook.Activate
    ZConfigWindow.RenglonVentana = 20
    Set ZConfigWindow.VentanaActiva = Me
    ZConfigWindow.Show
End Sub

Private Sub ImagenSalidas_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    MyBook.Activate
    If RenglonTool > 0 Then
    
        ArchivoSeleccion = Application.GetOpenFilename("JPG Files (*.jpg), *.jpg")
        If ArchivoSeleccion <> False Then
            
            Set ImagenSalidas.Picture = LoadPicture(ArchivoSeleccion)
            FrameImagen.Repaint
            
            NuevoArchivo = ThisWorkbook.Path & "\Tools\Images\" & Worksheets("Articulos").Range("A" & RenglonTool) & ".jpg"
            
            If Dir(NuevoArchivo) <> "" Then
                
                ArchivoRespaldo = ThisWorkbook.Path & "\Tools\Backup Images\Backup " & CDbl(Date + Time) & ".jpg"
                FileCopy NuevoArchivo, ArchivoRespaldo
                
            End If
            FileCopy ArchivoSeleccion, NuevoArchivo
            Kill ArchivoSeleccion
            
        End If
        
    End If
End Sub

Private Sub Label56_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    MyBook.Activate
    ErrorListBox.Show
End Sub

Private Sub TextBoxBuscarHerramienta_Change()
    MyBook.Activate
    Dim Palabra As Variant
    Dim SepararPalabras As String
    Dim A|fffd|adirALista As Boolean

    TextBoxBuscarHerramienta.Text = VBA.Replace(TextBoxBuscarHerramienta.Text, VBA.Chr(9), "")   'Eliminar Tabuladores
    TextBoxBuscarHerramienta.Text = VBA.Replace(TextBoxBuscarHerramienta.Text, "  ", " ")        'Eliminar Espacios
    
    MyBook.Activate
    
    TextBoxBuscarHerramienta.BackColor = &H80000005
    If Trim(TextBoxBuscarHerramienta) = "" Then
        LimpiarVentaDetalles
        CalcularTotales
        RenglonHistory = 0
        InsertarItem = False
        Exit Sub
    End If
    
    If UBound(ArrayArticulos) = 0 Then
        Exit Sub
    End If
    
    If ListBoxHerramientas.ListIndex >= 0 Then
        ListBoxHerramientas.Selected(ListBoxHerramientas.ListIndex) = False
    End If
    
    Renglon = 0
    RenglonTool = 0
    Temporal = ""
    
    If Len(Trim(TextBoxBuscarHerramienta.Value)) > 0 Then
                
        SepararPalabras = QuitarSimbolos(TextBoxBuscarHerramienta)
        Palabra = TextoAPalabras(SepararPalabras)
        
        For Contador = 1 To UBound(ArrayArticulos)
            
            TemporalGlobal = ArrayArticulos(Contador, 2)
            A|fffd|adirALista = True
            For ContarTrues = 1 To UBound(Palabra)
                If Not InStr(1, TemporalGlobal, Palabra(ContarTrues), vbTextCompare) > 0 Then
                    A|fffd|adirALista = False
                    Exit For
                End If
            Next
            If A|fffd|adirALista = True Then
                Renglon = Val(ArrayArticulos(Contador, 1))
                RenglonTool = Renglon
                InsertarItem = True
                
                Exit For
            End If
        Next

    End If
    
    If "Code" & Renglon <> "Code" & RenglonHistory Then
    If Renglon > 0 Then
        
        RenglonHistory = Renglon
        CodigoActive = Worksheets("Articulos").Range("A" & Renglon).Value
        TextBoxDescripcion = Worksheets("Articulos").Range("B" & Renglon).Value
        TextBoxUnitario = FormatoMoneda(Worksheets("Articulos").Range("E" & Renglon), Worksheets("Preferencias").Range("B4"), 20)
        TextBoxInventario = Worksheets("Articulos").Range("G" & Renglon).Value
        TextBoxCantidad = 1
        TextBoxUDM = Worksheets("Articulos").Range("C" & Renglon).Value
        TextBoxSerie = Empty
        TextBoxComentario = Empty
        
        ArchivoImagen = ThisWorkbook.Path & "\Tools\Images\" & Worksheets("Articulos").Range("A" & Renglon) & ".JPG"
        If Dir(ArchivoImagen) <> "" Then
            Me.ImagenSalidas.Picture = LoadPicture(ArchivoImagen)
        Else
            Set ImagenSalidas.Picture = ImageColocarFoto.Picture
        End If
        Me.FrameImagen.Repaint
        
    End If
    End If
    If Renglon = 0 Then
    
        RenglonHistory = 0
        CodigoActive = 0
        TextBoxDescripcion = Empty
        TextBoxUnitario = Empty
        TextBoxInventario = Empty
        TextBoxCantidad = Empty
        TextBoxDescuento = Empty
        TextBoxUDM = Empty
        TextBoxSerie = Empty
        TextBoxComentario = Empty
        
        Set Me.ImagenSalidas.Picture = Nothing
        TextBoxBuscarHerramienta.BackColor = &HC0C0FF
        
    End If

End Sub

Private Sub CommandButton16_Click()
    MyBook.Activate
    Load BusquedaxCodigo
    BusquedaxCodigo.Show
    If BusquedaxCodigo.Renglon > 0 Then
        RenglonTool = BusquedaxCodigo.Renglon
        CantidaddeArticulos = 1
        ActualizarLista
    End If
    ActualizarArrayArticulos
    Unload BusquedaxCodigo
    TextBoxBuscarHerramienta.SetFocus
End Sub

Private Sub CommandButton2_Click()
    MyBook.Activate
    Load BusquedaxNombre
    Set BusquedaxNombre.VentanaLlamada = Me
    BusquedaxNombre.Show
    If BusquedaxNombre.RenglonCliente > 0 Then
        If BusquedaxNombre.HuboModifaciones = True Then
            ActualizarArrayClientes
        End If
        TextBoxLookTecnico = Empty
        RenglonTecnico = BusquedaxNombre.RenglonCliente
        
    End If
    ActualizarDatosCliente
    Unload BusquedaxNombre
    TextBoxBuscarHerramienta.SetFocus
End Sub

Private Sub CommandButtonA|fffd|adir_Click()
    MyBook.Activate
    Dim EsPrimeraFila, A|fffd|adirALista As Boolean
    If InsertarItem = False Then
        TextBoxBuscarHerramienta.SetFocus
        Exit Sub
    End If
    
    If RenglonTool > 0 Then
        CantidaddeArticulos = TextBoxCantidad.Value
        ActualizarLista
        InsertarItem = False
        CalcularTotales
    Else
        TextBoxBuscarHerramienta.SetFocus
    End If
End Sub

Sub ActualizarLista()
    MyBook.Activate
    If RenglonTool > 1 Then
        
        Worksheets("DetallesSalidas").Activate
        
        If ToggleButtonInsertItem = True And UltimoItemSelected < ListBoxHerramientas.ListCount And UltimoItemSelected >= 0 Then
            Worksheets("DetallesSalidas").Rows(UltimoItemSelected + 2 & ":" & UltimoItemSelected + 2).Insert Shift:=xlDown
            RenglonDisponible = UltimoItemSelected + 2
        Else
            RenglonDisponible = Worksheets("DetallesSalidas").Range("AD" & Worksheets("DetallesSalidas").Rows.Count).End(xlUp).Row + 1
        End If
        
'Renglon Ubicaci|fffd|n Tool
Worksheets("DetallesSalidas").Range("Z" & RenglonDisponible) = RenglonTool

'Codigo
Worksheets("DetallesSalidas").Range("AD" & RenglonDisponible) = Worksheets("Articulos").Range("A" & RenglonTool)

'Descripci|fffd|n
Worksheets("DetallesSalidas").Range("AE" & RenglonDisponible) = Worksheets("Articulos").Range("B" & RenglonTool)
Worksheets("DetallesSalidas").Range("B" & RenglonDisponible) = Worksheets("Articulos").Range("B" & RenglonTool)

'Unidad de Medida
Worksheets("DetallesSalidas").Range("AG" & RenglonDisponible) = Worksheets("Articulos").Range("C" & RenglonTool)

'Serie
Worksheets("DetallesSalidas").Range("AF" & RenglonDisponible) = TextBoxSerie.Text

'Comentario
'Worksheets("DetallesSalidas").Range("AR" & RenglonDisponible) = TextBoxComentario.Value

'Categoria
Worksheets("DetallesSalidas").Range("AS" & RenglonDisponible) = Worksheets("Articulos").Range("K" & RenglonTool)

'Cantidad
Worksheets("DetallesSalidas").Range("AH" & RenglonDisponible) = CantidaddeArticulos
Worksheets("DetallesSalidas").Range("C" & RenglonDisponible) = CantidaddeArticulos

'Inventario Tool
Worksheets("DetallesSalidas").Range("X" & RenglonDisponible).FormulaR1C1 = "=SUMIF(Articulos!C[-23],DetallesSalidas!RC[6],Articulos!C[-17])-SUMIF(C[6],RC[6],C[10])"
If Val(Worksheets("DetallesSalidas").Range("X" & RenglonDisponible)) < 0 Then
    MsgBoxCentered "|fffd||fffd||fffd| Inventario negativo |fffd||fffd||fffd|", vbInformation, Me
End If


                        '*************** CALCULO UNITARIO VENTA ******************


'Costo Unitario
Worksheets("DetallesSalidas").Range("AL" & RenglonDisponible) = Worksheets("Articulos").Range("E" & RenglonTool)

'% Descuento sobre costo unitario
If Worksheets("Articulos").Range("I" & RenglonTool) = "" Then
    Worksheets("DetallesSalidas").Range("AM" & RenglonDisponible) = 0
Else
    Worksheets("DetallesSalidas").Range("AM" & RenglonDisponible) = Worksheets("Articulos").Range("F" & RenglonTool) ' Descuento
End If

'Descuento sobre costo unitario
Worksheets("DetallesSalidas").Range("AN" & RenglonDisponible).FormulaR1C1 = "=RC[-6]*RC[-2]*RC[-1]"   'Valor Descuento
Worksheets("DetallesSalidas").Range("F" & RenglonDisponible).FormulaR1C1 = "=formatomoneda(RC[34],Preferencias!R4C2,20)"

'Valor Unitario Venta
Worksheets("DetallesSalidas").Range("AI" & RenglonDisponible).FormulaR1C1 = "=RC[3]-(RC[3]*RC[4])"
Worksheets("DetallesSalidas").Range("D" & RenglonDisponible).FormulaR1C1 = "=formatomoneda(RC[31],Preferencias!R4C2,20)"

'Valor Extendido Venta
Worksheets("DetallesSalidas").Range("AJ" & RenglonDisponible).FormulaR1C1 = "=RC[-2]*RC[-1]"
Worksheets("DetallesSalidas").Range("E" & RenglonDisponible).FormulaR1C1 = "=formatomoneda(RC[31],Preferencias!R4C2,20)"


'% Impuesto
If Worksheets("Preferencias").Range("B2") = "" Then
    Worksheets("DetallesSalidas").Range("AO" & RenglonDisponible) = 0
Else
    Worksheets("DetallesSalidas").Range("AO" & RenglonDisponible) = Worksheets("Preferencias").Range("B2")
End If
Worksheets("DetallesSalidas").Range("G" & RenglonDisponible).FormulaR1C1 = "=formatomoneda(RC[35],Preferencias!R4C2,20)"


'% Impuesto
If IsNumeric(Worksheets("Articulos").Range("I" & RenglonTool)) Then
    If Worksheets("Articulos").Range("I" & RenglonTool) < 0 Then
        MsgBoxCentered "Error Impuesto Negativo", vbInformation, Me
    End If
    Worksheets("DetallesSalidas").Range("AO" & RenglonDisponible) = Worksheets("Articulos").Range("I" & RenglonTool).Value
Else
    Worksheets("DetallesSalidas").Range("AO" & RenglonDisponible) = 0
End If

'Impuesto
Worksheets("DetallesSalidas").Range("AP" & RenglonDisponible) = "=RC[-6]*RC[-1]"
Worksheets("DetallesCompras").Range("F" & RenglonDisponible).FormulaR1C1 = "=formatomoneda(RC[36],Preferencias!R4C2,20)"

'Total Renglon
Worksheets("DetallesSalidas").Range("AQ" & RenglonDisponible) = "=RC[-7]+RC[-1]"
        
        UltimoRenglon = GetLastRow(Worksheets("DetallesSalidas"))
        'UltimoRenglon = Worksheets("DetallesSalidas").Range("AD" & Worksheets("DetallesSalidas").Rows.Count).End(xlUp).Row
        Set TheRange = Worksheets("DetallesSalidas").Range("A2:G" & UltimoRenglon)
        ArrayDetallesSalidas = TheRange
        ListBoxHerramientas.List = ArrayDetallesSalidas
        'ListBoxHerramientas.Height = 100
        
        CalcularTotales
        
        TextBoxBuscarHerramienta = ""
        
        If ListBoxHerramientas.ListCount = 1 Then
            ListBoxHerramientas.Selected(0) = True
        Else
            If ToggleButtonInsertItem = True Then
                ListBoxHerramientas.Selected(UltimoItemSelected + 1) = True
            Else
                ListBoxHerramientas.Selected(ListBoxHerramientas.ListCount - 1) = True
            End If
        End If
    End If

    TextBoxBuscarHerramienta.SetFocus
    
End Sub

Private Sub CalcularTotales()
    MyBook.Activate
    Dim RangeSuma As Range
    Set RangeSuma = Worksheets("DetallesSalidas").Range("AH:AH")
    TextBoxTotalItems = Format(Application.WorksheetFunction.Sum(RangeSuma), "general number")
    TotalArticulos = Application.WorksheetFunction.Sum(RangeSuma)
    Set RangeSuma = Worksheets("DetallesSalidas").Range("AJ:AJ")
    TextBoxSubTotal = Format(Application.WorksheetFunction.Sum(RangeSuma), "$ #,##0.00")
    Set RangeSuma = Worksheets("DetallesSalidas").Range("AN:AN")
    TextBoxDescuento = Format(Application.WorksheetFunction.Sum(RangeSuma), "$ #,##0.00")
    Set RangeSuma = Worksheets("DetallesSalidas").Range("AP:AP")
    TextBoxImpuesto = Format(Application.WorksheetFunction.Sum(RangeSuma), "$ #,##0.00")
    Set RangeSuma = Worksheets("DetallesSalidas").Range("AJ:AJ,AP:AP")
    TextboxTotal = Format(Application.WorksheetFunction.Sum(RangeSuma), "$ #,##0.00")
    TotalVenta = Application.WorksheetFunction.Sum(RangeSuma)
    If Application.WorksheetFunction.Sum(RangeSuma) = 0 Then
        
        TextBoxTotalItems = Empty
        TextBoxSubTotal = Empty
        TextBoxDescuento = Empty
        TextBoxImpuesto = Empty
        TextboxTotal = Empty
    End If
End Sub

Private Sub CommandButtonEliminarItem_Click()
    MyBook.Activate
    Dim EliminarRenglon As Long
    If ListBoxHerramientas.ListIndex >= 0 Then
    
        Confirmacion = MsgBoxCentered("Desea eliminar Item seleccionado?", vbYesNo, Me)
        If Confirmacion = vbYes Then
            
            EliminarRenglon = ListBoxHerramientas.ListIndex + 2
            Worksheets("DetallesSalidas").Range(EliminarRenglon & ":" & EliminarRenglon).Delete
            
            LimpiarVentaDetalles
            
            UltimoRenglon = Worksheets("DetallesSalidas").Range("AD" & Worksheets("DetallesSalidas").Rows.Count).End(xlUp).Row
            If UltimoRenglon <= 1 Then
                ListBoxHerramientas.Clear
            Else
                Set TheRange = Worksheets("DetallesSalidas").Range("A2:G" & UltimoRenglon)
                ArrayDetallesSalidas = TheRange
                ListBoxHerramientas.List = ArrayDetallesSalidas
            End If
            
            
            If ListBoxHerramientas.ListCount > 0 Then
            
                If (EliminarRenglon - 2) <= (ListBoxHerramientas.ListCount - 1) Then
                    ListBoxHerramientas.Selected(EliminarRenglon - 2) = True
                Else
                    ListBoxHerramientas.Selected(ListBoxHerramientas.ListCount - 1) = True
                End If
            End If
            TextBoxBuscarHerramienta.SetFocus
    
        End If
        
        CalcularTotales
        
    End If
        
End Sub

Private Sub ListBoxHerramientas_Click()
    MyBook.Activate
    If ListBoxHerramientas.ListIndex >= 0 Then
        UltimoItemSelected = ListBoxHerramientas.ListIndex
        
        TextBoxBuscarHerramienta = ""
        
        RenglonVenta = ListBoxHerramientas.ListIndex + 2
        TextBoxListIndex = ListBoxHerramientas.ListIndex
        
        ColocarImagen Worksheets("DetallesSalidas").Range("AD" & RenglonVenta).Value
        TextBoxCodigo = Worksheets("DetallesSalidas").Range("AD" & RenglonVenta).Value
        CodigoActive = Worksheets("DetallesSalidas").Range("AD" & RenglonVenta).Value
        TextBoxCantidad = Format(Worksheets("DetallesSalidas").Range("AH" & RenglonVenta).Value, "general number")
        TextBoxDescripcion = Worksheets("DetallesSalidas").Range("AE" & RenglonVenta).Value
        TextBoxUDM = Worksheets("DetallesSalidas").Range("AG" & RenglonVenta).Value
        TextBoxDescuentoItem = Format(Worksheets("DetallesSalidas").Range("AM" & RenglonVenta).Value, "#0%")
        TextBoxUnitario = FormatoMoneda(Worksheets("DetallesSalidas").Range("AI" & RenglonVenta).Value, "$", 20)
        TextBoxInventario = Worksheets("DetallesSalidas").Range("X" & RenglonVenta).Value
        
        TextBoxSerie = Worksheets("DetallesSalidas").Range("AF" & RenglonVenta).Value
        TextBoxComentario = Worksheets("DetallesSalidas").Range("AR" & RenglonVenta).Value
        
    End If
    
End Sub

Private Sub TextBoxBuscarHerramienta_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    MyBook.Activate
    If Trim(TextBoxDescripcion) <> "" And Trim(TextBoxBuscarHerramienta) <> "" Then
        
        CantidaddeArticulos = 1
        ActualizarLista
        InsertarItem = False
        CalcularTotales
        
    End If
End Sub

Private Sub TextBoxBuscarHerramienta_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MyBook.Activate
    With TextBoxBuscarHerramienta
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub TextBoxCantidad_AfterUpdate()
    MyBook.Activate
    If TextBoxDescripcion = "" Then
        TextBoxCantidad = Empty
    End If
    If ListBoxHerramientas.ListIndex < 0 Then
        Exit Sub
    End If
    
    If TextBoxCantidad = "" Then
        TextBoxCantidad = 1
    End If
    If TextBoxCantidad <= 0 Then
        TextBoxCantidad = 1
    End If
    Dim Temporal As Long
    
    RenglonVenta = ListBoxHerramientas.ListIndex + 2
    
    If RenglonVenta >= 0 Then
        Temporal = ListBoxHerramientas.ListIndex
        
        Worksheets("DetallesSalidas").Range("C" & RenglonVenta) = "'" & TextBoxCantidad.Text
        Worksheets("DetallesSalidas").Range("AH" & RenglonVenta) = TextBoxCantidad.Value
        If Val(Worksheets("DetallesSalidas").Range("X" & RenglonVenta)) < 0 Then
            MsgBoxCentered "Inventario negativo|fffd||fffd||fffd|", vbInformation, Me
        End If
        
        'Actualizar Lista
        UltimoRenglon = Worksheets("DetallesSalidas").Range("AD" & Worksheets("DetallesSalidas").Rows.Count).End(xlUp).Row
        Set TheRange = Worksheets("DetallesSalidas").Range("A2:G" & UltimoRenglon)
        ArrayDetallesSalidas = TheRange
        ListBoxHerramientas.List = ArrayDetallesSalidas
                
        ListBoxHerramientas.Selected(Temporal) = True

        CalcularTotales
        
    End If
End Sub

Private Sub TextBoxCantidad_Change()
    MyBook.Activate
    TextBoxCantidad.Text = VBA.Replace(TextBoxCantidad.Text, VBA.Chr(9), "")   'Eliminar Tabuladores
End Sub

Private Sub TextBoxCantidad_Enter()
    MyBook.Activate
    ControlActivo = TextBoxCantidad.Name
End Sub

Private Sub TextBoxCantidad_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    MyBook.Activate
    Dim TextBoxNumerico As Object
    Dim SeparadorDecimal As String
    SeparadorDecimal = Application.International(xlDecimalSeparator)
    Set TextBoxNumerico = TextBoxCantidad   'Cambiar Nombre de Control
    Select Case KeyAscii
    Case Asc("0") To Asc("9")
'    Case Asc("-")
'        If InStr(1, TextBoxCantidad.Text, "-") > 0 Or TextBoxCantidad.SelStart > 0 Then
'            KeyAscii = 0
'        End If
    Case Asc(SeparadorDecimal)
        If TextBoxNumerico.SelLength <> Len(TextBoxNumerico.Text) Then
            If InStr(1, TextBoxNumerico.Text, SeparadorDecimal) > 0 Then
                KeyAscii = 0
            End If
        End If
    Case Else
        KeyAscii = 0
    End Select
End Sub

Private Sub TextBoxCantidad_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MyBook.Activate
    With TextBoxCantidad
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub TextBoxComentario_AfterUpdate()
    MyBook.Activate
    If ListBoxHerramientas.ListIndex < 0 Then
        Exit Sub
    End If
    Dim Temporal As Long
    RenglonVenta = ListBoxHerramientas.ListIndex + 2
    If RenglonVenta > 0 Then
    
        Temporal = ListBoxHerramientas.ListIndex
        
        Worksheets("DetallesSalidas").Range("AR" & RenglonVenta) = TextBoxComentario.Value
        
        ListBoxHerramientas.Selected(Temporal) = True
        
    End If
End Sub

Private Sub TextBoxComentario_Enter()
    MyBook.Activate
    ControlActivo = TextBoxComentario.Name
End Sub

Private Sub TextBoxComentario_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MyBook.Activate
    With TextBoxComentario
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub TextBoxLookTecnico_Change()
    MyBook.Activate
    Dim Palabra As Variant
    Dim A|fffd|adirALista As Boolean
    Dim SepararPalabras As String

    MyBook.Activate
    
    RenglonTecnico = 0
    
    TextBoxLookTecnico.BackColor = &H80000005
    If Trim(TextBoxLookTecnico) = "" Then
        RenglonTecnicoHistory = 0
        LimpiarDatosCliente
        Exit Sub
    End If
    
    If Len(Trim(TextBoxLookTecnico.Value)) > 0 Then
        SepararPalabras = QuitarSimbolos(TextBoxLookTecnico)
        Palabra = TextoAPalabras(SepararPalabras)
        
        For Contador = 1 To UBound(ArrayClientes)
            
            TemporalGlobal = ArrayClientes(Contador, 2)
            A|fffd|adirALista = True
            For ContarTrues = 1 To UBound(Palabra)
                If Not InStr(1, TemporalGlobal, Palabra(ContarTrues), vbTextCompare) > 0 Then
                    A|fffd|adirALista = False
                    Exit For
                End If
            Next
            If A|fffd|adirALista = True Then
                RenglonTecnico = Val(ArrayClientes(Contador, 1))
                Exit For
            End If
        Next
    End If
    ActualizarDatosCliente
             
End Sub

Private Sub ActualizarDatosCliente()
    MyBook.Activate
    If RenglonTecnico <> RenglonTecnicoHistory Then
    RenglonTecnicoHistory = RenglonTecnico
    If RenglonTecnico > 0 Then
        
        CuentaActiva = Worksheets("Clientes").Range("A" & RenglonTecnico).Value
        TextBoxIdCliente = Worksheets("Clientes").Range("A" & RenglonTecnico).Value
        TextBoxCliente = Worksheets("Clientes").Range("B" & RenglonTecnico).Value
        TextBoxDireccion = Worksheets("Clientes").Range("C" & RenglonTecnico).Value
        TextBoxCuenta = Worksheets("Clientes").Range("F" & RenglonTecnico).Value
        
    End If
    End If
    
    If RenglonTecnico = 0 Then
        
        CuentaActiva = 0
        LimpiarDatosCliente
        TextBoxLookTecnico.BackColor = &HC0C0FF
        
    End If

End Sub

Private Sub LimpiarDatosCliente()
    MyBook.Activate
    TextBoxIdCliente = ""
    TextBoxCliente = Empty
    TextBoxDireccion = Empty
    TextBoxCuenta = Empty

End Sub

Private Sub TextBoxLookTecnico_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MyBook.Activate
    With TextBoxLookTecnico
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub TextBoxSerie_AfterUpdate()
    MyBook.Activate
    If ListBoxHerramientas.ListIndex < 0 Then
        Exit Sub
    End If
    Dim Temporal As Long
    RenglonVenta = ListBoxHerramientas.ListIndex + 2
    If RenglonVenta > 0 Then
        Temporal = ListBoxHerramientas.ListIndex
        
        Worksheets("DetallesSalidas").Range("AF" & RenglonVenta) = TextBoxSerie.Text
        
        ListBoxHerramientas.Selected(Temporal) = True
    End If
End Sub

Private Sub TextBoxSerie_Enter()
    MyBook.Activate
    ControlActivo = TextBoxSerie.Name
End Sub

Private Sub TextBoxSerie_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MyBook.Activate
    With TextBoxSerie
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub UserForm_Initialize()
    Set MyBook = ThisWorkbook
    MyBook.Activate
    
    Inicio = True
    LayOutWindow = True
    
    If Worksheets("Preferencias").Range("B20") <> "" Then
            
        AVenta.Top = Worksheets("Preferencias").Cells(20, 2) ' Centrar Vertical
        AVenta.Left = Worksheets("Preferencias").Cells(20, 3) '(WidthLapTop - Me.Width) / 2 ' Centrar Horizontal
        AVenta.Height = Worksheets("Preferencias").Cells(20, 4)
        AVenta.Width = Worksheets("Preferencias").Cells(20, 5)
        AVenta.Zoom = Worksheets("Preferencias").Cells(20, 6)
        
    Else
        
        Me.StartUpPosition = 2
        
    End If
    
End Sub

Private Sub UserForm_Activate()
    If ThisWorkbook.ReadOnly = True Then
        Me.Caption = "Read-Only Error!!!"
    End If
    
    MyBook.Activate
    If Inicio Then
                
        ActualizarArrayArticulos
        ActualizarArrayClientes
        
        NuevoRegistro
        
        Inicio = False
        
    End If
    
End Sub

Public Sub NuevoRegistro()

        MyBook.Activate
        Set ControlFecha = New ClassControlDate
        Set ControlFecha.ComboBoxDia = ComboBoxDia
        Set ControlFecha.ComboBoxMes = ComboBoxMes
        Set ControlFecha.ComboBoxA|fffd|o = ComboBoxA|fffd|o
        Set ControlFecha.ActiveForm = Me
        ControlFecha.IniciarControlDate
        
        Set RangoId = Worksheets("Ventas").Range("A:A")
        IdTransaccion = Application.WorksheetFunction.Max(RangoId)
        Set RangoId = Worksheets("Devoluciones").Range("A:A")
        IdTransaccion2 = Application.WorksheetFunction.Max(RangoId)
        If IdTransaccion2 > IdTransaccion Then
            IdTransaccion = IdTransaccion2
        End If
        IdTransaccion = IdTransaccion + 1
        If Val(Worksheets("Preferencias").Range("B10").Value) > IdTransaccion Then
            IdTransaccion = Val(Worksheets("Preferencias").Range("B10").Value)
        End If
        TextBoxFolio = IdTransaccion
        
        ListBoxHerramientas.Clear
        
        Worksheets("DetallesSalidas").Range("A:AZ").Clear
        
        Worksheets("DetallesSalidas").Range("A1:AZ1").Interior.Color = RGB(196, 189, 151)
        
        Worksheets("DetallesSalidas").Range("A:A").ColumnWidth = 15
        Worksheets("DetallesSalidas").Range("B:B").ColumnWidth = 30
        Worksheets("DetallesSalidas").Range("C:C").ColumnWidth = 10
        Worksheets("DetallesSalidas").Range("E:G").ColumnWidth = 25
        Worksheets("DetallesSalidas").Range("X:AB").ColumnWidth = 14
        Worksheets("DetallesSalidas").Range("AC:AC").ColumnWidth = 30
        Worksheets("DetallesSalidas").Range("AD:AD").ColumnWidth = 14
        Worksheets("DetallesSalidas").Range("AE:AE").ColumnWidth = 30
        Worksheets("DetallesSalidas").Range("AF:AF").ColumnWidth = 14
        Worksheets("DetallesSalidas").Range("AG:AG").ColumnWidth = 23
        Worksheets("DetallesSalidas").Range("AH:AJ").ColumnWidth = 14
        
        
        Worksheets("DetallesSalidas").Range("A1") = "Renglon Actual"
        Worksheets("DetallesSalidas").Range("B1") = "Descripcion"
        Worksheets("DetallesSalidas").Range("C1") = "Cantidad"
        Worksheets("DetallesSalidas").Range("D1") = "Unitario"
        Worksheets("DetallesSalidas").Range("E1") = "Extendido"
        Worksheets("DetallesSalidas").Range("F1") = "Comentario"
        Worksheets("DetallesSalidas").Range("Z1") = "Renglon Codigo"
        Worksheets("DetallesSalidas").Range("X1") = "Inventario"
        
        
        Worksheets("Ventas").Range("A1:Z1").Copy
        Worksheets("DetallesSalidas").Range("AA1").PasteSpecial (xlPasteValues)
        Worksheets("DetallesSalidas").Range("A1:AZ1").Columns.AutoFit
                        
        LimpiarVentaDetalles
        
        TextBoxBuscarHerramienta.SetFocus

End Sub
Sub LimpiarVentaDetalles()
    MyBook.Activate
    ColocarImagen 0
        
    TextBoxListIndex = Empty
    TextBoxCodigo = ""
    TextBoxDescripcion = Empty
    TextBoxUDM = Empty
    TextBoxDescuentoItem = Empty
    TextBoxUnitario = Empty
    TextBoxCantidad = Empty
    TextBoxInventario = Empty
    TextBoxSerie = Empty
    TextBoxComentario = Empty
    
    TextBoxSubTotal = Empty
    TextBoxImpuesto = Empty
    TextBoxDescuento = Empty
    TextBoxTotalItems = Empty
    TextboxTotal = Empty
    
    TextBoxKit = Empty
    TextboxCondiciones = Empty
End Sub

Private Sub ActualizarKits()
    MyBook.Activate
    
    Dim Kits As Worksheet
    Set Kits = NuevaHoja("Temporal")
 
    Kits.Activate
    Kits.Range("A:Z").Clear
    Kits.Range("A:A").ColumnWidth = 30
    Kits.Range("B:B").ColumnWidth = 60
    UltimoRenglon = Worksheets("Kits").Range("A" & Worksheets("Kits").Rows.Count).End(xlUp).Row
    Worksheets("Kits").Range("A1:A" & UltimoRenglon).Copy
    Kits.Range("A1").PasteSpecial (xlPasteValues)
    
    UltimoRenglon = Kits.Range("A" & Kits.Rows.Count).End(xlUp).Row
    
    Set RangeBase = Kits.Range("A1:A" & UltimoRenglon)
    RangeBase.RemoveDuplicates Columns:=Array(1), Header:=xlNo
    
    Kits.Range("A:A").Sort key1:=Range("A:A"), order1:=xlAscending, Header:=xlYes 'key2:=Range("A:A"), order2:=xlDescending,
    UltimoRenglon = Kits.Range("A" & Kits.Rows.Count).End(xlUp).Row
    
    Set TheRange = Kits.Range("A2:A" & UltimoRenglon)
    ArrayKits = TheRange
    TextBoxKit.List = ArrayKits
End Sub

Private Sub ActualizarArrayArticulos()
    MyBook.Activate
    Dim Articulos As Worksheet
    Set Articulos = NuevaHoja("Temporal")
        
    Articulos.Activate
    Articulos.Range("A:Z").Clear
    Articulos.Range("A:A").ColumnWidth = 30
    Articulos.Range("B:B").ColumnWidth = 60
    
    UltimoRenglon = GetLastRow(Worksheets("Articulos"))
    Articulos.Range("C1:E" & UltimoRenglon) = Worksheets("Articulos").Range("A1:C" & UltimoRenglon).Value
    
    Articulos.Range("A2:A" & UltimoRenglon).FormulaR1C1 = "=ROW(RC[2])"
    Articulos.Range("A2:A" & UltimoRenglon).Copy
    Articulos.Range("A2:A" & UltimoRenglon).PasteSpecial (xlPasteValues)
    
    Articulos.Range("B2:B" & UltimoRenglon).FormulaR1C1 = "=QuitarSimbolos(RC[2]&" & Chr(34) & " " & Chr(34) & "&RC[3]&" & Chr(34) & " " & Chr(34) & "&Articulos!RC[8])"
    Articulos.Range("B2:B" & UltimoRenglon).Copy
    Articulos.Range("B2:B" & UltimoRenglon).PasteSpecial (xlPasteValues)
    
    Articulos.Range("A:E").Sort key1:=Articulos.Range("B:B"), order1:=xlAscending, Header:=xlYes 'key2:=Range("A:A"), order2:=xlDescending,
    
    Dim TheRange As Range
    UltimoRenglon = GetLastRow(Worksheets("Articulos"))
    If UltimoRenglon > 1 Then
        Set TheRange = Articulos.Range("A2:B" & UltimoRenglon)
        ArrayArticulos = TheRange
    Else
        ReDim ArrayArticulos(0)
    End If
    
End Sub
Private Sub ActualizarArrayClientes()
    MyBook.Activate
    IdNombre = Empty
    Nombre = Empty
    TextBoxBusqueda = Empty
    
    Dim Clientes As Worksheet
    Set Clientes = NuevaHoja("Temporal")
        
    Clientes.Activate
    Clientes.Range("A:Z").Clear
    Clientes.Range("A:A").ColumnWidth = 30
    Clientes.Range("B:B").ColumnWidth = 60
    
    UltimoRenglon = GetLastRow(Worksheets("Clientes"))
    Clientes.Range("C1:D" & UltimoRenglon) = Worksheets("Clientes").Range("A1:B" & UltimoRenglon).Value
    
    Clientes.Range("A2:A" & UltimoRenglon).FormulaR1C1 = "=ROW(RC[2])"
    Clientes.Range("A2:A" & UltimoRenglon).Copy
    Clientes.Range("A2:A" & UltimoRenglon).PasteSpecial (xlPasteValues)
    
    Clientes.Range("B2:B" & UltimoRenglon).FormulaR1C1 = "=QuitarSimbolos(RC[2])"
    Clientes.Range("B2:B" & UltimoRenglon).Copy
    Clientes.Range("B2:B" & UltimoRenglon).PasteSpecial (xlPasteValues)
    
    Clientes.Range("A:D").Sort key1:=Range("D:D"), order1:=xlAscending, Header:=xlYes 'key2:=Range("A:A"), order2:=xlDescending,
    UltimoRenglon = GetLastRow(Worksheets("Clientes"))
    Set TheRange = Clientes.Range("A2:B" & UltimoRenglon)
    ArrayClientes = TheRange
    
End Sub

Private Function SheetExists(sheetToFind As String) As Boolean
    MyBook.Activate
    SheetExists = False
    For Each Sheet In Worksheets
        If sheetToFind = Sheet.Name Then
            SheetExists = True
            Exit Function
        End If
    Next Sheet
End Function
Private Sub ColocarImagen(IdCodigo As Long)
    MyBook.Activate
        Dim Variable As String
        On Error GoTo NOFILE
        Variable = Trim(ThisWorkbook.Path & "\Tools\Images\" & IdCodigo & ".jpg")
        If Dir(Variable) <> "" Then
            Set ImagenSalidas.Picture = LoadPicture(Variable)
        Else
            Set ImagenSalidas.Picture = Nothing
        End If
        FrameImagen.Repaint
NOFILE:
End Sub
    
Private Sub UserForm_Layout()
    MyBook.Activate
    If LayOutWindow = True Then
        LayOutWindow = False
        
    End If
    
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    MyBook.Activate
    If ListBoxHerramientas.ListCount > 0 Then
    
        Confirmacion = MsgBoxCentered("Desea descartar esta venta?", vbYesNo, Me)
        If Confirmacion = vbNo Then
                
            Cancel = True
            Exit Sub
            
        End If
        
    End If
    
End Sub

Attribute VB_Name = "BusquedaxCodigo"
Attribute VB_Base = "0{715957AB-06A3-4C4B-A6AB-74D27A650E26}{89528442-B236-427D-813A-7592CE9DDC20}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim RegistroModificado As Boolean

Public Renglon As Long
Public VentanaLlamada As Object
Dim ArchivoPrincipal As Workbook
Dim RenglonHistory As Variant
Dim ArrayTranspose As Variant
Dim ArrayBusqueda() As Variant
Dim CodigoTool As String
Dim ArrayTemporal As Variant
Dim Inicio As Boolean

Public Function HuboModificaciones() As Boolean
    HuboModificaciones = RegistroModificado
End Function

Private Sub CommandButtonColocarImagen_Click()
    ChDir ThisWorkbook.Path
    If ListBoxCodigos.ListIndex >= 0 Then
        ArchivoSeleccion = Application.GetOpenFilename("JPG Files (*.jpg), *.jpg")
        If ArchivoSeleccion <> False Then
        
            Set ImageTool.Picture = LoadPicture(ArchivoSeleccion)
            FrameRefrescar.Repaint

            NuevoArchivo = ThisWorkbook.Path & "\Tools\Images\" & TextBoxIdCodigo & ".jpg"
            If Dir(NuevoArchivo) <> "" Then

                ArchivoRespaldo = ThisWorkbook.Path & "\Tools\Backup Images\Backup " & CDbl(Date + Time) & ".jpg"
                FileCopy NuevoArchivo, ArchivoRespaldo

            End If
            FileCopy ArchivoSeleccion, NuevoArchivo
            Kill ArchivoSeleccion
            
        End If
        
    Else
        MsgBox "Selecciona primero un item"
    End If
End Sub

Private Sub CommandButtonEliminarItem_Click()
    Dim History As Long
    Dim RenglonEliminar As Long
    Dim IdArticulo As Long
    Dim IdDescripcion As String
    Dim ArchivoEliminar As String
    If ListBoxCodigos.ListIndex >= 0 Then
        History = ListBoxCodigos.ListIndex
        RenglonEliminar = ListBoxCodigos.List(ListBoxCodigos.ListIndex, 0)
        IdArticulo = Worksheets("Articulos").Range("A" & RenglonEliminar)
        IdDescripcion = Worksheets("Articulos").Range("B" & RenglonEliminar)
        ArchivoEliminar = ThisWorkbook.Path & "\Tools\Images\" & Worksheets("Articulos").Range("A" & RenglonEliminar) & ".jpg"
        Confirmacion = MsgBoxCentered("Desea eliminar Registro: " & IdArticulo & " " & IdDescripcion, vbYesNo, Me)
        If Confirmacion = vbYes Then
            RegistroModificado = True
            Worksheets("Articulos").Rows(RenglonEliminar & ":" & RenglonEliminar).Delete
            If Dir(ArchivoEliminar) <> "" Then
                Kill ArchivoEliminar
            End If
            LimpiarTextboxS
            ThisWorkbook.Save
            RenglonHistory = 0
            ActualizarArticulos
            TextBoxBusqueda_Change
            ListBoxCodigos.SetFocus
        End If
        
        If ListBoxCodigos.ListCount > 0 Then
            If History >= ListBoxCodigos.ListCount Then
                History = ListBoxCodigos.ListCount - 1
            End If
            ListBoxCodigos.Selected(History) = True
        End If
    End If
    
End Sub

Private Sub CommandButtonMisImagenes_Click()
    Ruta = ThisWorkbook.Path
    On Error GoTo salir
     RutaCompleta = Ruta & "\Tools\Images\"
     If Dir(RutaCompleta, vbDirectory) <> "" Then
        ActiveWorkbook.FollowHyperlink Address:=RutaCompleta, NewWindow:=True
     Else
        MsgBox "Directorio no existe: " & RutaCompleta
        MsgBox "Tus imagenes deben estar en este folder: " & RutaCompleta
     End If
salir:

End Sub

Private Sub CommandButtonNuevoRegistro_Click()

    Herramientas.SetCodigo 0
    Herramientas.Show
    Unload Herramientas
    RenglonHistory = 0
    ActualizarArticulos

End Sub

Private Sub CommandButtonSeleccionar_Click()
        
    If ListBoxCodigos.ListCount = 0 Then
        TextBoxBusqueda.SetFocus
        Exit Sub
    End If
    If ListBoxCodigos.ListCount > 0 And ListBoxCodigos.ListIndex < 0 Then
        ListBoxCodigos.Selected(0) = True
    End If
    If ListBoxCodigos.ListIndex >= 0 Then
        RenglonArticulo = ListBoxCodigos.List(ListBoxCodigos.ListIndex, 0)
    End If
    Me.Hide
    
End Sub

Private Sub CommandButtonTools_Click()
    
    If Renglon <= 0 Then
        MsgBoxCentered "Seleccione un item!", vbInformation, Me
        Exit Sub
    End If
    Herramientas.SetCodigo Worksheets("Articulos").Range("A" & Renglon)
    Herramientas.Show
    Unload Herramientas
    RenglonHistory = 0
    ActualizarArticulos

End Sub

Private Sub CommandButtonWindowConfig_Click()
    ZConfigWindow.RenglonVentana = 21
    Set ZConfigWindow.VentanaActiva = Me
    ZConfigWindow.Show
End Sub

Private Sub FrameRefrescar_Click()

End Sub

Private Sub ImageTool_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal x As Single, ByVal y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
    ListView1.Visible = True
    Cancel = True
End Sub

Private Sub ImageTool_Click()

End Sub

Private Sub ListBoxCodigos_Click()
    If ListBoxCodigos.ListIndex >= 0 Then
        Renglon = ListBoxCodigos.List(ListBoxCodigos.ListIndex, 0)
        ActualizarDatos
    End If
End Sub

Private Sub ActualizarDatos()
    
    If Renglon <> RenglonHistory Then
        RenglonHistory = Renglon
        TextBoxDescripcion = Worksheets("Articulos").Range("B" & Renglon).Value
        
        TextBoxUnitario = FormatoMoneda(Worksheets("Articulos").Range("E" & Renglon), Worksheets("Preferencias").Range("B4"), 20)
    
        TextBoxInventario = Format(Worksheets("Articulos").Range("G" & Renglon).Value, "general number")
        TextBoxUDM = Worksheets("Articulos").Range("C" & Renglon).Value
        TextBoxIdCodigo = Worksheets("Articulos").Range("A" & Renglon).Value
        
        ArchivoImagen = ThisWorkbook.Path & "\Tools\Images\" & Worksheets("Articulos").Range("A" & Renglon).Value & ".JPG"
        If Dir(ArchivoImagen) <> "" Then
            Me.ImageTool.Picture = LoadPicture(ArchivoImagen)
            Me.FrameRefrescar.Repaint
        Else
            Set Me.ImageTool.Picture = Me.ImageColocarFoto.Picture
            Me.FrameRefrescar.Repaint
        End If
        Worksheets("Articulos").Activate
        Worksheets("Articulos").Rows(Renglon & ":" & Renglon).Activate
    End If
    
End Sub

Private Sub ListView1_OLEDragDrop(Data As MSComctlLib.DataObject, Effect As Long, Button As Integer, Shift As Integer, x As Single, y As Single)

    If Data.GetFormat(15) = True Then
        
        ArchivoSeleccion = Data.Files(1)
        If InStr(1, ArchivoSeleccion, ".jpg", vbTextCompare) > 0 Then
    
        Set ImageTool.Picture = LoadPicture(ArchivoSeleccion)
        FrameRefrescar.Repaint
        
        
        NuevoArchivo = ThisWorkbook.Path & "\Tools\Images\" & TextBoxIdCodigo & ".jpg"
        If Dir(NuevoArchivo) <> "" Then

            ArchivoRespaldo = ThisWorkbook.Path & "\Tools\Backup Images\Backup " & CDbl(Date + Time) & ".jpg"
            FileCopy NuevoArchivo, ArchivoRespaldo

        End If
        FileCopy ArchivoSeleccion, NuevoArchivo
        Kill ArchivoSeleccion
        End If
        
        
    End If
    
    ListView1.Visible = False
    
End Sub

Private Sub TextBoxBusqueda_Change()

    Dim Palabra As Variant
    Dim SepararPalabras As String
    Dim A|fffd|adirALista As Boolean

    If TextBoxBusqueda = "" Then
        ListBoxCodigos.List = ArrayTemporal
        If ListBoxCodigos.ListCount > 0 Then
            ListBoxCodigos.Selected(0) = True
        End If
        Exit Sub
    End If
    
    ListBoxCodigos.Clear
    If Len(Trim(TextBoxBusqueda.Value)) > 0 Then
        SepararPalabras = QuitarSimbolos(TextBoxBusqueda.Text)
        Palabra = TextoAPalabras(SepararPalabras)
        ContadorItems = 0
        For Contador = 1 To UBound(ArrayTemporal) 'LBound(ArrayCodigos)
            TemporalGlobal = ArrayTemporal(Contador, 2)
            A|fffd|adirALista = True
            For ContarTrues = 1 To UBound(Palabra)
                If Not InStr(1, TemporalGlobal, Palabra(ContarTrues), vbTextCompare) > 0 Then
                    A|fffd|adirALista = False
                    Exit For
                End If
            Next
            If A|fffd|adirALista = True Then
                ContadorItems = ContadorItems + 1
                ReDim Preserve ArrayBusqueda(1 To 5, 1 To ContadorItems)
                ArrayBusqueda(1, ContadorItems) = ArrayTemporal(Contador, 1)
                ArrayBusqueda(2, ContadorItems) = ArrayTemporal(Contador, 2)
            End If
        Next
        If ContadorItems = 0 Then
            
            LimpiarTextboxS
            
            Set Me.ImageTool.Picture = Nothing
            Me.FrameRefrescar.Repaint
            RenglonHistory = 0
            
        Else
            If ContadorItems = 1 Then
                ListBoxCodigos.AddItem
                ListBoxCodigos.List(0, 0) = ArrayBusqueda(1, 1)
                ListBoxCodigos.List(0, 1) = ArrayBusqueda(2, 1)
            Else
                ArrayTranspose = Application.Transpose(ArrayBusqueda)
                ListBoxCodigos.List = ArrayTranspose
            End If
            ListBoxCodigos.Selected(0) = True
            ListBoxCodigos.Height = 92.45
        End If
    End If
End Sub

Private Sub LimpiarTextboxS()

    TextBoxDescripcion = Empty
    TextBoxUnitario = Empty
    TextBoxInventario = Empty
    TextBoxUDM = Empty
    TextBoxIdCodigo = Empty

End Sub


Private Sub TextBoxBusqueda_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    With TextBoxBusqueda
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub ActualizarArticulos()

    Dim HojaTemporal As Worksheet
    Set HojaTemporal = NuevaHoja("Temporal")
    
    HojaTemporal.Activate
    HojaTemporal.Range("A:Z").Clear
    
    UltimoRenglon = GetLastRow(Worksheets("Articulos"))
    
    If UltimoRenglon > 1 Then
        
        HojaTemporal.Range("A2:A" & UltimoRenglon).FormulaR1C1 = "=ROW(RC[2])"
        HojaTemporal.Range("A2:A" & UltimoRenglon).Copy
        HojaTemporal.Range("A2:A" & UltimoRenglon).PasteSpecial (xlPasteValues)
        
        HojaTemporal.Range("B2:B" & UltimoRenglon).FormulaR1C1 = "=QuitarSimbolos(Articulos!RC&CHAR(32)&Articulos!RC[9]&CHAR(32)&Articulos!RC[11]&CHAR(32)&Articulos!RC[12])"
        HojaTemporal.Range("B2:B" & UltimoRenglon).Copy
        HojaTemporal.Range("B2:B" & UltimoRenglon).PasteSpecial (xlPasteValues)
        
        HojaTemporal.Range("A:B").Sort key1:=HojaTemporal.Range("B:B"), order1:=xlAscending, Header:=xlYes 'key2:=Range("A:A"), order2:=xlDescending,
        UltimoRenglon = GetLastRow(HojaTemporal)
        
        Set TheRange = HojaTemporal.Range("A2:B" & UltimoRenglon)
        ArrayTemporal = TheRange
        ListBoxCodigos.List = ArrayTemporal
        ListBoxCodigos.Selected(0) = True
    
    Else
        
        ReDim ArrayTemporal(0)
        
    End If
    
End Sub

Function SheetExists(sheetToFind As String) As Boolean
    SheetExists = False
    For Each Sheet In Worksheets
        If sheetToFind = Sheet.Name Then
            SheetExists = True
            Exit Function
        End If
    Next Sheet
End Function

Private Sub UserForm_Initialize()

    Inicio = True

    RegistroModificado = False
    
    ActualizarArticulos
    
    RenglonArticulo = 0
    TextBoxBusqueda.SetFocus
    
    If Worksheets("Preferencias").Range("B21") <> "" Then

        Me.Top = Worksheets("Preferencias").Cells(21, 2)
        Me.Left = Worksheets("Preferencias").Cells(21, 3)
        Me.Height = Worksheets("Preferencias").Cells(21, 4)
        Me.Width = Worksheets("Preferencias").Cells(21, 5)
        Me.Zoom = Worksheets("Preferencias").Cells(21, 6)
    Else
    
        Me.StartUpPosition = 2
        
    End If
    
End Sub

Private Sub UserForm_Activate()

    If Inicio = True Then
        
        If AVenta.Visible = True Then
            CommandButtonSeleccionar.Visible = True
        End If
        
    End If

End Sub

Attribute VB_Name = "BusquedaxNombre"
Attribute VB_Base = "0{F5B237D2-F8A1-453F-BBD5-4B6116E8AC7B}{DBA2CF51-48FF-41DE-A378-729F1F56E733}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim RegistroModificado As String

Dim ArrayBusqueda() As Variant
Dim ArrayTranspose As Variant

Dim Renglon As Long
Dim RenglonHistory As Long

Dim Inicio As Boolean
Public Nombre As String
Public RenglonCliente As Long
Dim ArrayTemporal As Variant
Public VentanaLlamada As Object

Public Function HuboModifaciones() As Boolean
    HuboModificaciones = RegistroModificado
End Function

Private Sub CommandButtonEliminarItem_Click()
    RegistroModificado = True
    Dim History As Long
    Dim RenglonEliminar As Long
    Dim IdCliente As Long
    Dim Cliente As String
    
    If ListBoxEmpleados.ListIndex >= 0 Then
        History = ListBoxEmpleados.ListIndex
        RenglonEliminar = ListBoxEmpleados.List(ListBoxEmpleados.ListIndex, 0)
        IdCliente = Worksheets("Clientes").Range("A" & RenglonEliminar)
        Cliente = Worksheets("Clientes").Range("B" & RenglonEliminar)
        
        Confirmacion = MsgBoxCentered("Desea eliminar Registro: " & IdCliente & " " & Cliente, vbYesNo, Me)
        If Confirmacion = vbYes Then
            RegistroModificado = True
            Worksheets("Clientes").Rows(RenglonEliminar & ":" & RenglonEliminar).Delete
            
            LimpiarTextboxS
            
            ThisWorkbook.Save
            RenglonHistory = 0
            ActualizarNombres
            TextBoxBusqueda_Change
            ListBoxEmpleados.SetFocus
        End If
        
        If ListBoxEmpleados.ListCount > 0 Then
            If History >= ListBoxEmpleados.ListCount Then
                History = ListBoxEmpleados.ListCount - 1
            End If
            ListBoxEmpleados.Selected(History) = True
        End If
    End If
End Sub

Private Sub CommandButtonNuevoRegistro_Click()
    
    Cuentas.SetCodigo 0
    Cuentas.Show
    Unload Cuentas
    RenglonHistory = 0
    ActualizarNombres
    TextBoxBusqueda_Change
    TextBoxBusqueda.SetFocus

End Sub

Private Sub CommandButtonOk_Click()

    If ListBoxEmpleados.ListCount = 1 Then
        ListBoxEmpleados.Selected(0) = True

    End If
    If ListBoxEmpleados.ListIndex >= 0 Then
        RenglonCliente = ListBoxEmpleados.List(ListBoxEmpleados.ListIndex, 0)
        Nombre = ListBoxEmpleados.List(ListBoxEmpleados.ListIndex, 1)
    End If
    Me.Hide
    
End Sub

Private Sub CommandButtonTools_Click()

    If Renglon <= 0 Then
        MsgBoxCentered "Seleccione una cuenta!", vbInformation, Me
        Exit Sub
    End If
    Cuentas.SetCodigo Worksheets("Clientes").Range("A" & Renglon)
    Cuentas.Show
    Unload Cuentas
    RenglonHistory = 0
    ActualizarNombres
    TextBoxBusqueda_Change
    TextBoxBusqueda.SetFocus

End Sub

Private Sub CommandButtonWindowConfig_Click()
    ZConfigWindow.RenglonVentana = 22
    Set ZConfigWindow.VentanaActiva = Me
    ZConfigWindow.Show
End Sub

Private Sub ListBoxEmpleados_Click()

    If ListBoxEmpleados.ListIndex >= 0 Then
        Renglon = ListBoxEmpleados.List(ListBoxEmpleados.ListIndex, 0)
        ActualizarDatos
    End If
    
End Sub

Private Sub ActualizarDatos()
    
    TextBoxNombreCliente = Worksheets("Clientes").Range("B" & Renglon)
    TextBoxDireccion = Worksheets("Clientes").Range("C" & Renglon)
    TextBoxCorreo = Worksheets("Clientes").Range("D" & Renglon)
    TextBoxClaseCuenta = Worksheets("Clientes").Range("F" & Renglon)
    
    Worksheets("Clientes").Activate    ' Opcional
    Worksheets("Clientes").Rows(Renglon & ":" & Renglon).Activate
    
End Sub

Private Sub TextBoxBusqueda_Change()

    Dim Palabra As Variant
    Dim A|fffd|adirALista As Boolean
    Dim SepararPalabras As String
    
    If UBound(ArrayTemporal) = 0 Then
        Exit Sub
    End If
    
    If TextBoxBusqueda = "" Then
        ListBoxEmpleados.List = ArrayTemporal
        ListBoxEmpleados.Selected(0) = True
        Exit Sub
    End If
    
    Temporal = ""
    RenglonInfo = 0
    ListBoxEmpleados.Clear
    If Len(Trim(TextBoxBusqueda.Value)) > 0 Then
        SepararPalabras = QuitarSimbolos(TextBoxBusqueda.Text)
        Palabra = TextoAPalabras(SepararPalabras)
        ContadorItems = 0
        Encabezado = True
        For Contador = 1 To UBound(ArrayTemporal)
            TemporalGlobal = ArrayTemporal(Contador, 3)

            A|fffd|adirALista = True
            For ContarTrues = 1 To UBound(Palabra)
                If Not InStr(1, TemporalGlobal, Palabra(ContarTrues), vbTextCompare) > 0 Then
                    A|fffd|adirALista = False
                    Exit For
                End If
            Next
            If A|fffd|adirALista = True Then
                ContadorItems = ContadorItems + 1
                ReDim Preserve ArrayBusqueda(1 To 5, 1 To ContadorItems)
                ArrayBusqueda(1, ContadorItems) = ArrayTemporal(Contador, 1)
                ArrayBusqueda(2, ContadorItems) = ArrayTemporal(Contador, 2)
            End If
        Next
        If ContadorItems = 0 Then
            LimpiarTextboxS
        Else
            If ContadorItems = 1 Then
                ListBoxEmpleados.AddItem
                ListBoxEmpleados.List(0, 0) = ArrayBusqueda(1, 1)
                ListBoxEmpleados.List(0, 1) = ArrayBusqueda(2, 1)
            Else
                ArrayTranspose = Application.Transpose(ArrayBusqueda)
                ListBoxEmpleados.List = ArrayTranspose
            End If
            ListBoxEmpleados.Selected(0) = True
        End If
    End If
        
End Sub

Private Sub LimpiarTextboxS()

    TextBoxNombreCliente = Empty
    TextBoxDireccion = Empty
    TextBoxCorreo = Empty
    TextBoxClaseCuenta = Empty
    
End Sub

Private Sub TextBoxBusqueda_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    
    With TextBoxBusqueda
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub UserForm_Initialize()

    RegistroModificado = False
    
    Inicio = True
    
    If Worksheets("Preferencias").Range("B22") <> "" Then
        
        Me.Top = Worksheets("Preferencias").Cells(22, 2)
        Me.Left = Worksheets("Preferencias").Cells(22, 3)
        Me.Height = Worksheets("Preferencias").Cells(22, 4)
        Me.Width = Worksheets("Preferencias").Cells(22, 5)
        Me.Zoom = Worksheets("Preferencias").Cells(22, 6)
    
    Else
    
        Me.StartUpPosition = 2
    
    End If
    
End Sub

Private Sub UserForm_Activate()
    
    If Inicio = True Then
        Inicio = False
        
        If AVenta.Visible = True Then
            CommandButtonOk.Visible = True
        End If
        
        
        IdNombre = 0
        Nombre = ""
        TextBoxBusqueda = Empty
        
    End If
    
    RenglonCliente = 0
    ActualizarNombres
    BusquedaxNombre.TextBoxBusqueda.SetFocus
    
End Sub

Private Sub ActualizarNombres()
    
    ListBoxEmpleados.Clear
    
    Dim HojaTemporal As Worksheet
    Set HojaTemporal = NuevaHoja("Temporal")
    
    HojaTemporal.Activate
    HojaTemporal.Range("A:Z").Clear
    HojaTemporal.Range("A:A").ColumnWidth = 30
    HojaTemporal.Range("B:B").ColumnWidth = 60
    
    UltimoRenglon = GetLastRow(Worksheets("Clientes"))
    If UltimoRenglon > 1 Then
        
        HojaTemporal.Range("A2:A" & UltimoRenglon).FormulaR1C1 = "=ROW(RC[2])"
        HojaTemporal.Range("A2:A" & UltimoRenglon).Copy
        HojaTemporal.Range("A2:A" & UltimoRenglon).PasteSpecial (xlPasteValues)
        
        HojaTemporal.Range("B2:B" & UltimoRenglon).FormulaR1C1 = "=QuitarSimbolos(Clientes!RC)"
        HojaTemporal.Range("B2:B" & UltimoRenglon).Copy
        HojaTemporal.Range("B2:B" & UltimoRenglon).PasteSpecial (xlPasteValues)
        
        HojaTemporal.Range("C2:C" & UltimoRenglon).FormulaR1C1 = "=QuitarSimbolos(Clientes!RC[-1]&CHAR(32)&Clientes!RC&CHAR(32)&Clientes!RC[1]&CHAR(32)&Clientes!RC[2]&CHAR(32)&Clientes!RC[3])"
        HojaTemporal.Range("C2:C" & UltimoRenglon).Copy
        HojaTemporal.Range("C2:C" & UltimoRenglon).PasteSpecial (xlPasteValues)
        
        HojaTemporal.Range("A:C").Sort key1:=HojaTemporal.Range("B:B"), order1:=xlAscending, Header:=xlYes 'key2:=Range("A:A"), order2:=xlDescending,
        
        UltimoRenglon = GetLastRow(HojaTemporal)
        
        Set TheRange = HojaTemporal.Range("A2:C" & UltimoRenglon)
        ArrayTemporal = TheRange
        ListBoxEmpleados.List = ArrayTemporal
        ListBoxEmpleados.Selected(0) = True
        
    Else
        ReDim ArrayTemporal(0)
    End If
End Sub

Function SheetExists(sheetToFind As String) As Boolean
    SheetExists = False
    For Each Sheet In Worksheets
        If sheetToFind = Sheet.Name Then
            SheetExists = True
            Exit Function
        End If
    Next Sheet
End Function

Private Sub UserForm_Terminate()
    Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "ClassArrayOrderRows"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim ArrayNewOrder() As Variant
Dim HojaOrderRow As Worksheet
Dim ColumnaOrder As String

Public Function TotalRows() As Long
    If UBound(ArrayNewOrder) = 0 Then
        TotalRows = 0
    Else
        TotalRows = UBound(ArrayNewOrder)
    End If
End Function

Public Function GetRow(RowCounter As Long)
    If UBound(ArrayNewOrder) = 0 Then
        GetRow = 0
    Else
        GetRow = ArrayNewOrder(RowCounter, 1)
    End If
End Function

Public Sub SetValues(HojaOrderRowTemp As Worksheet, ColumnaOrderTemp As String)   ' Coloca Valor
    Set HojaOrderRow = HojaOrderRowTemp
    ColumnaOrder = ColumnaOrderTemp
    Reordenar
End Sub

Public Sub Reordenar()
    Dim Temporal As Worksheet
    Dim UltimoRenglon As Long
    Dim RangeDatos As Range
    
    Set Temporal = NuevaHoja("Temporal")
    UltimoRenglon = GetLastRow(HojaOrderRow)
    If UltimoRenglon > 1 Then
    
            Temporal.Range("B1:B" & UltimoRenglon) = HojaOrderRow.Range(ColumnaOrder & "1:" & ColumnaOrder & UltimoRenglon).Value
            
            Temporal.Range("A2:A" & UltimoRenglon).FormulaR1C1 = "=ROW(RC[1])"
            Temporal.Range("A2:A" & UltimoRenglon).Copy
            Temporal.Range("A2:A" & UltimoRenglon).PasteSpecial (xlPasteValues)

            Temporal.Columns("A:B").Sort key1:=Temporal.Range("B1"), order1:=xlAscending, Header:=xlYes

            Set RangeDatos = Temporal.Range("A2:B" & UltimoRenglon)
            ArrayNewOrder = RangeDatos

    Else

            ReDim ArrayNewOrder(0)

    End If
End Sub
Attribute VB_Name = "ClassArticulo"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Public WithEvents ControlImagen As MSForms.Image
Attribute ControlImagen.VB_VarHelpID = -1
Public WithEvents MenuItem As MSForms.CommandButton
Attribute MenuItem.VB_VarHelpID = -1
Public WithEvents ControlTextBox  As MSForms.TextBox
Attribute ControlTextBox.VB_VarHelpID = -1

Public IdCodigoItem As Long
Public CeldaRenglon As Long
Public VentanaActual As Object
Public RegistroActual As Object
Public FrameLabel As Object
Public IsDeleted As Boolean

Dim Conteo As Double

Public Sub EliminarItem()
    Dim ArchivoImagen As String
    Dim Codigo As Long
    
    ControlImagen.Visible = False
    MenuItem.Visible = False
    ControlTextBox.Visible = False
    
    ArchivoImagen = ThisWorkbook.Path & "\Tools\Images\" & IdCodigoItem & ".jpg"
    If Dir(ArchivoImagen) <> "" Then
        Kill ArchivoImagen
    End If
    
    DeleteRows Worksheets("Articulos"), "A", IdCodigoItem
        
    IsDeleted = True
    Set MenuArticulos_ActiveItem = Nothing
    ThisWorkbook.Save
    
End Sub

Public Sub AgregarImagen()
    On Error GoTo salir
    ArchivoSeleccion = Application.GetOpenFilename("JPG Files (*.jpg), *.jpg")
    If ArchivoSeleccion <> False Then
        Set ControlImagen.Picture = LoadPicture(ArchivoSeleccion)
        MenuArticulos.FrameListaMusica.Repaint
        
        ArchivoImagen = ThisWorkbook.Path & "\Tools\Images\" & IdCodigoItem & ".jpg"
        
        FileCopy ArchivoSeleccion, ArchivoImagen
        Kill ArchivoSeleccion
    End If
    Exit Sub
salir:
    MsgBox "Error al cargar archivo, intente con otro!", vbInformation, "Error"
End Sub

Public Sub RegistroLiberar()
    Set ControlImagen.Picture = Nothing
    ControlTextBox = Empty
End Sub

Private Sub MenuItem_Click()

    If AVenta.Visible = True Then
        
        MenuArticulos.ActualizarTextboxs IdCodigoItem
        MenuArticulos_ArrayVenta(2, IdCodigoItem) = MenuArticulos_ArrayVenta(2, IdCodigoItem) + 1
        
        ControlTextBox = MenuArticulos_ArrayVenta(2, IdCodigoItem)
        ControlTextBox.Visible = True
        
    End If
    MenuItem.SetFocus
    
End Sub

Private Sub ControlImagen_click()
    
    If AVenta.Visible = True Then
        
        MenuArticulos.ActualizarTextboxs IdCodigoItem
        MenuArticulos_ArrayVenta(2, IdCodigoItem) = MenuArticulos_ArrayVenta(2, IdCodigoItem) + 1
        ControlTextBox = MenuArticulos_ArrayVenta(2, IdCodigoItem)
        ControlTextBox.Visible = True
                
    End If
    MenuItem.SetFocus
    
End Sub

Private Sub ControlCommandButton_Click()

    MenuArticulos.ActualizarTextboxs IdCodigoItem
    MenuArticulos_ArrayVenta(2, IdCodigoItem) = MenuArticulos_ArrayVenta(2, IdCodigoItem) + 1
    ControlTextBox = MenuArticulos_ArrayVenta(2, IdCodigoItem)
    ControlTextBox.Visible = True
    MsgBox MenuArticulos_ArrayVenta(2, IdCodigoItem)
        
End Sub

Private Sub ControlImagen_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    VentanaActual.Caption = FrameLabel

End Sub
Attribute VB_Name = "ClassCategoria"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Public WithEvents ControlLabel As MSForms.Label
Attribute ControlLabel.VB_VarHelpID = -1
Public WithEvents ControlImagen As MSForms.Image
Attribute ControlImagen.VB_VarHelpID = -1
Public WithEvents ColocarImagen As MSForms.CommandButton
Attribute ColocarImagen.VB_VarHelpID = -1
Public WithEvents ControlCommandButton As MSForms.CommandButton
Attribute ControlCommandButton.VB_VarHelpID = -1
Public WithEvents ControlTextBox  As MSForms.TextBox
Attribute ControlTextBox.VB_VarHelpID = -1

Public CeldaRenglon As Long
Public VentanaActual As Object

Dim Conteo As Double

Private Sub ControlLabel_Click()
    
    If Not MenuArticulos_ActiveCategoria Is Nothing Then
        
        MenuArticulos_ActiveCategoria.ForeColor = vbBlack
        MenuArticulos_ActiveCategoria.Font.Underline = False
        
    End If
    
    ControlLabel.ForeColor = vbBlue
    ControlLabel.Font.Underline = True

    MenuArticulos.TextBoxBusqueda = ""
    MenuArticulos.CambiarCategoria ControlLabel.Caption
    Set MenuArticulos_ActiveCategoria = ControlLabel
    
End Sub

Private Sub ControlImagen_click()

    MenuCategorias_RenglonSelected = CeldaRenglon
    MenuCategorias.DetenerDoEvents

End Sub

Private Sub ControlCommandButton_Click()
    If CeldaRenglon > 0 Then
    
        ArchivoSeleccion = Application.GetOpenFilename("JPG Files (*.jpg), *.jpg")
        If ArchivoSeleccion <> False Then
            
            Set ControlImagen.Picture = LoadPicture(ArchivoSeleccion)
            
            NuevoArchivo = ThisWorkbook.Path & "\Tools\Categorias\" & Worksheets("Miscelaneos").Range("C" & CeldaRenglon) & ".jpg"
            
            If Dir(NuevoArchivo) <> "" Then
                
                ArchivoRespaldo = ThisWorkbook.Path & "\Tools\Backup Images\Backup " & CDbl(Date + Time) & ".jpg"
                MsgBox NuevoArchivo
                MsgBox ArchivoRespaldo
                FileCopy NuevoArchivo, ArchivoRespaldo
                
            End If
            FileCopy ArchivoSeleccion, NuevoArchivo
            Kill ArchivoSeleccion
            
        End If
        
    End If
End Sub
Attribute VB_Name = "ClassControlCurrency"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Public WithEvents TextBoxControl As MSForms.TextBox
Attribute TextBoxControl.VB_VarHelpID = -1
Public VentanaActiva As Object

Dim ValorCtrl As Double
Dim SelStartHistory As Long
Dim PosicionDecimalUno As Boolean
Dim PosicionDecimalDos As Boolean
Dim PrimerEntero As Boolean
Dim EsPuntoDecimal As Boolean
Dim ValorHistoryStr As String
Dim KeyRetroceso As Boolean

Public Sub SetValue(NuevoValor As Double)
    
    TextBoxControl = Format(NuevoValor, "$ #,##0.00")   'FormatoMoneda(NuevoValor, Worksheets("Preferencias").Range("B4"), 20)
    
End Sub

Public Function GetValue() As Double
    
    GetValue = ValorCtrl
    
End Function

Private Sub TextBoxControl_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
    ValorHistoryStr = TextBoxControl.Text
    SelStartHistory = Len(TextBoxControl.Text) - TextBoxControl.SelStart
    If KeyCode = 37 Or KeyCode = 39 Then
    
        TextBoxControl.SelLength = 0
            
    End If
    If KeyCode = 190 Then
        TextBoxControl.SelStart = Len(TextBoxControl.Text) - 2
    End If
    If KeyCode = 8 Then
        TextBoxControl.SelLength = 0
        KeyRetroceso = True
    End If
    
End Sub

Private Sub TextBoxControl_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)

    Select Case KeyAscii
    Case Asc("0") To Asc("9")
        
        LeerValor
        SelStartHistory = Len(TextBoxControl.Text) - TextBoxControl.SelStart
        If SelStartHistory = 0 Then
            KeyAscii = 0
        End If
        
        If SelStartHistory = 1 Then
            PosicionDecimalDos = True
            TextBoxControl.SelLength = 1
        End If
    
        If SelStartHistory = 2 Then
            PosicionDecimalUno = True
            TextBoxControl.SelLength = 1
        End If
        
        If SelStartHistory = 4 And Fix(ValorCtrl) = 0 Then
            PrimerEntero = True
        End If
        
    Case Asc(SeparadorDecimalSystem)
        If TextBoxControl.SelLength <> Len(TextBoxControl.Text) Then
            If InStr(1, TextBoxControl.Text, SeparadorDecimalSystem) > 0 Then
                KeyAscii = 0
            End If
        End If
        
    Case Else
        KeyAscii = 0
    End Select
    
End Sub

Private Sub TextBoxControl_Change()
    
    LeerValor
    TextBoxControl.Text = Format(ValorCtrl, "$ #,##0.00")
        
    If PosicionDecimalUno = True Then
        TextBoxControl.SelStart = Len(TextBoxControl.Text) - 1
        PosicionDecimalUno = False
    Else
        If PosicionDecimalDos = True Then
            TextBoxControl.SelStart = Len(TextBoxControl.Text)
            PosicionDecimalDos = False
        Else
            If PrimerEntero = True Then
                TextBoxControl.SelStart = Len(TextBoxControl.Text) - 3
                PrimerEntero = False
            Else
                If Len(TextBoxControl.Text) - SelStartHistory > 0 Then
                    TextBoxControl.SelStart = Len(TextBoxControl.Text) - SelStartHistory
                Else
                    TextBoxControl.SelStart = 3
                End If
            End If
        End If
    End If
    
    If ValorCtrl = 0 Then
    
        TextBoxControl.SelStart = Len(TextBoxControl.Text) - 4
    
    End If
    
End Sub

Private Sub TextBoxControl_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
    SelStartHistory = Len(TextBoxControl.Text) - TextBoxControl.SelStart
    LeerValor

    If SelStartHistory = 1 Then
        TextBoxControl.SelLength = 1
    End If

    If SelStartHistory = 2 Then
        TextBoxControl.SelLength = 1
    End If

    If SelStartHistory = 4 And Fix(ValorCtrl) = 0 Then
        TextBoxControl.SelStart = Len(TextBoxControl.Text) - 4
        TextBoxControl.SelLength = 1
    End If
        
    Dim ParteEntero As Double
    Dim ParteDecimal As Double
    ParteEntero = Fix(ValorCtrl)
    ParteDecimal = ValorCtrl - ParteEntero
    
    LeerValor
    
    If KeyRetroceso = True Then
        KeyRetroceso = False
        
        TextBoxControl.SelStart = TextBoxControl.SelStart - 1
        
        If ParteDecimal = 0 Then
            TextBoxControl.SelStart = Len(TextBoxControl.Text) - 3
        End If
    End If

End Sub

Private Sub LeerValor()

    Dim TotDecimals As Integer
    Dim Posicion As Long
    Dim CantidadStr As String
    CantidadStr = ""
    For Posicion = 1 To Len(TextBoxControl.Text)
        If (Asc(Mid(TextBoxControl.Text, Posicion, 1)) >= 48 And Asc(Mid(TextBoxControl.Text, Posicion, 1)) <= 57) Or Mid(TextBoxControl, Posicion, 1) = SeparadorDecimalSystem Then
            CantidadStr = CantidadStr & Mid(TextBoxControl, Posicion, 1)
        End If
    Next
    TotDecimals = (Len(CantidadStr) - InStr(1, CantidadStr, SeparadorDecimalSystem, vbTextCompare)) - 2
    If TotDecimals > 0 Then
        CantidadStr = Mid(CantidadStr, 1, Len(CantidadStr) - TotDecimals)
    End If
    If Len(CantidadStr) > 15 Then
        CantidadStr = ValorHistoryStr
    End If
    
    If IsNumeric(CantidadStr) Then
        ValorCtrl = CDbl(CantidadStr)
    Else
        ValorCtrl = 0
    End If
    
End Sub

Attribute VB_Name = "ClassControlDate"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Public WithEvents ComboBoxDia As MSForms.ComboBox
Attribute ComboBoxDia.VB_VarHelpID = -1
Public WithEvents ComboBoxMes As MSForms.ComboBox
Attribute ComboBoxMes.VB_VarHelpID = -1
Public WithEvents ComboBoxA|fffd|o As MSForms.ComboBox
Attribute ComboBoxA|fffd|o.VB_VarHelpID = -1
Public ActiveForm As Object

Dim HistoryDay As Long

Public Sub IniciarControlDate()
    
    ComboBoxDia.Clear
    For Contador = 1 To 31
        ComboBoxDia.AddItem Contador
    Next
    ComboBoxMes.Clear
    For Contador = 1 To 12
        
        ComboBoxMes.AddItem StrConv(Format(DateSerial(Year(Now()), Contador, 1), "Mmmm"), vbProperCase)
        
    Next
    ComboBoxMes.ListIndex = 0
    ComboBoxA|fffd|o.Clear
    For Contador = 2016 To 2023
        ComboBoxA|fffd|o.AddItem Contador
    Next
    SetFecha Now()
End Sub

Public Function GetFecha() As Date

    GetFecha = DateSerial(ComboBoxA|fffd|o.Value, ComboBoxMes.ListIndex + 1, ComboBoxDia.Value)
    
End Function

Public Sub SetFecha(NuevaFecha As Date)
    
    ComboBoxMes.ListIndex = Month(NuevaFecha) - 1
    ComboBoxDia.Value = Day(NuevaFecha)
    ComboBoxA|fffd|o.Value = Year(NuevaFecha)

End Sub

Private Sub ComboBoxDia_change()
    ValidateFecha
    
End Sub

Private Sub ComboBoxMes_change()
    ValidateFecha
End Sub

Private Sub ComboBoxA|fffd|o_change()
    ValidateFecha
End Sub

Private Sub ValidateFecha()

    Dim EsError As Boolean
    
    If ComboBoxA|fffd|o.Text = "" Or ComboBoxMes.Text = "" Or ComboBoxDia.Text = "" Then
        Exit Sub
    End If

    EsError = False
    
    If ("C" & Day(GetFecha)) <> ("C" & Trim(ComboBoxDia.Text)) Then
        EsError = True
    End If
    
    If ("C" & Month(GetFecha)) <> ("C" & (ComboBoxMes.ListIndex + 1)) Then
        EsError = True
    End If
    
    If ("C" & Year(GetFecha)) <> ("C" & Trim(ComboBoxA|fffd|o.Text)) Then
        EsError = True
    End If
    
    If EsError = True Then
'        MsgBoxCentered "Error Date, verify!!!", vbInformation, ActiveForm
    End If
    
End Sub


Private Sub ComboBoxDia_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    With ComboBoxDia
        .SelStart = 0
        .SelLength = Len(.Text)
    End With

End Sub

Private Sub ComboBoxDia_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
    HistoryDay = ComboBoxDia.Value
    
End Sub

Private Sub ComboBoxDia_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)

    Select Case KeyAscii
    Case Asc("0") To Asc("9")
'    Case Asc("-")
'        If InStr(1, TextBoxControl.Text, "-") > 0 Or TextBoxControl.SelStart > 0 Then
'            KeyAscii = 0
'        End If
'    Case Asc(".")
'        If TextboxControl.SelLength <> Len(TextboxControl.Text) Then
'            If InStr(1, TextboxControl.Text, ".") > 0 Then
'                KeyAscii = 0
'            End If
'        End If
    Case Else
        KeyAscii = 0
    End Select
    
End Sub

Private Sub ComboBoxDia_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

    If Trim(ComboBoxDia.Text) = "" Then
        ComboBoxDia.Text = 0
    End If

    If ComboBoxDia.ListIndex = -1 Then
        ComboBoxDia.Value = HistoryDay
        MsgBox "Teclee una fecha valida "
    End If
        
End Sub

Private Sub ComboBoxMes_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)

    Select Case KeyAscii
    Case Asc("A") To Asc("Z")
    Case Asc("a") To Asc("z")
'    Case Asc("-")
'        If InStr(1, TextBoxControl.Text, "-") > 0 Or TextBoxControl.SelStart > 0 Then
'            KeyAscii = 0
'        End If
'    Case Asc(".")
'        If TextboxControl.SelLength <> Len(TextboxControl.Text) Then
'            If InStr(1, TextboxControl.Text, ".") > 0 Then
'                KeyAscii = 0
'            End If
'        End If
    Case Else
        KeyAscii = 0
    End Select
    
End Sub

Private Sub ComboBoxMes_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    With ComboBoxMes
        .SelStart = 0
        .SelLength = Len(.Text)
    End With

End Sub


Private Sub ComboBoxA|fffd|o_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)

    Select Case KeyAscii
    Case Asc("0") To Asc("9")
'    Case Asc("-")
'        If InStr(1, TextBoxControl.Text, "-") > 0 Or TextBoxControl.SelStart > 0 Then
'            KeyAscii = 0
'        End If
'    Case Asc(".")
'        If TextboxControl.SelLength <> Len(TextboxControl.Text) Then
'            If InStr(1, TextboxControl.Text, ".") > 0 Then
'                KeyAscii = 0
'            End If
'        End If
    Case Else
        KeyAscii = 0
    End Select
    
End Sub

Private Sub ComboBoxA|fffd|o_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    With ComboBoxA|fffd|o
        .SelStart = 0
        .SelLength = Len(.Text)
    End With

End Sub

Attribute VB_Name = "ClassControlDouble"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Public WithEvents TextBoxControl As MSForms.TextBox
Attribute TextBoxControl.VB_VarHelpID = -1
Public VentanaActiva As Object
Dim ValorControlText As Double
Dim CantidadStr As String
Dim HistoryValue As Long
Dim FuePrimerEntero As Boolean
Dim SalirdePrimerEntero As Boolean
Dim ColocarEnPosicion1 As Boolean
Dim ColocarEnPosicion2 As Boolean
Dim PosCero As Boolean
Dim PosDecimalUno As Boolean
Dim PosDecimalDos As Boolean
Dim PosPuntoDecimal As Boolean
Dim PosEnteroUno As Boolean
Dim PosEnteroVariable As Boolean

Dim Posicion As Long

Public Sub SetValue(NuevoValor As Double)

    TextBoxControl = Format(NuevoValor, "$ #,##0.00")
    
End Sub

Public Function GetValue() As Double

    GetValue = ValorControlText
    
End Function

Private Sub Class_Initialize()
    
    'ValorControl = 0
    
End Sub

Private Sub TextBoxControl_Change()

    TextBoxControl.Text = VBA.Replace(TextBoxControl.Text, VBA.Chr(9), "")
    TextBoxControl.Text = VBA.Replace(TextBoxControl.Text, "  ", " ")
    LeerValor
    
End Sub

Private Sub TextBoxControl_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
    'ListBox1.AddItem "keycode " & KeyCode ' cero keycode 48
    If Shift > 0 Then
        KeyCode = 0
        Exit Sub
    End If
    If KeyCode = 13 Then
        KeyCode = 13
        Exit Sub
    End If
    
    If KeyCode = 9 Then ' tabulador
        Dim Ctl As Control
        
        For Each Ctl In VentanaActiva.Controls
            'MsgBox TypeName(Ctl) & " " & Ctl.Name & " " & Ctl.TabIndex
            If TypeName(Ctl) = "TextBox" Or TypeName(Ctl) = "ComboBox" Then
                If Ctl.TabIndex = VentanaActiva.ActiveControl.TabIndex + 1 Then
                    Ctl.SetFocus
                    'MsgBox "Detener"
                    Exit For
                End If
            End If
        Next
    End If
    
    If TextBoxControl.Text = "" Then
        TextBoxControl = Format(0, "$ #,##0.00")
        TextBoxControl.SelStart = 3
    End If
    
    If (Len(TextBoxControl.Text) - TextBoxControl.SelLength) = 0 And KeyCode >= 48 And KeyCode <= 57 Then
        TextBoxControl = Format(0, "$ #,##0.00")
        TextBoxControl.SelStart = Len(TextBoxControl.Text) - 3
        'ListBox1.AddItem "longitud cero"
    End If
     
    LeerPosiciones
    
    ColocarEnPosicion1 = False
    If KeyCode = 8 And Posicion = 0 Then  '' eliminar retroceso en punto decimal
        TextBoxControl.SelStart = Len(TextBoxControl.Text) - 1
        TextBoxControl.SelLength = 1
        KeyCode = 48
        ColocarEnPosicion1 = True
        Exit Sub
    End If
    
    ColocarEnPosicion2 = False
    If KeyCode = 8 And Posicion = 1 Then  '' eliminar primer decimal
        TextBoxControl.SelStart = Len(TextBoxControl.Text) - 2
        TextBoxControl.SelLength = 1
        KeyCode = 48
        ColocarEnPosicion2 = True
        Exit Sub
    End If
    
    If KeyCode = 8 And Posicion < 3 Then  '' eliminar segundo decimal
        KeyCode = 0
        Exit Sub
    End If
    
    If KeyCode <> 37 And KeyCode <> 39 Then 'si esta al final solo permitir desplazarse
        If Posicion = 0 Then
            KeyCode = 0
            Exit Sub
        End If
    End If
    
    SalirdePrimerEntero = False
    If KeyCode = 37 Or KeyCode = 39 Then 'quitar seleccion para poder desplazarse
        If FuePrimerEntero = True Then
            SalirdePrimerEntero = True
            FuePrimerEntero = False
        End If
        TextBoxControl.SelLength = 0
    End If

End Sub

Private Sub TextBoxControl_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)

    Select Case KeyAscii
    Case Asc("0") To Asc("9")
'    Case Asc("-")
'        If InStr(1, TextBoxControl.Text, "-") > 0 Or TextBoxControl.SelStart > 0 Then
'            KeyAscii = 0
'        End If
    Case Asc(".")
        If TextBoxControl.SelLength <> Len(TextBoxControl.Text) Then
            If InStr(1, TextBoxControl.Text, ".") > 0 Then
                KeyAscii = 0
            End If
        End If
    Case Else
        KeyAscii = 0
    End Select
    
End Sub

Private Sub TextBoxControl_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

    If Shift > 0 Then
        Exit Sub
    End If
    
    If KeyCode = 9 Then
    
        With TextBoxControl
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        Exit Sub
        
    End If
    
    If KeyCode <> 37 And KeyCode <> 39 Then 'permitir desplazamiento
        
        'formato moneda en textbox
        
        TextBoxControl.Text = Format(CDbl(ValorControlText), "$ #,##0.00")
        
        If Posicion > 2 Then ' Posicion Entero
            TextBoxControl.SelStart = Len(TextBoxControl.Text) - Posicion
        End If
        If FuePrimerEntero = True Then
            FuePrimerEntero = False
            TextBoxControl.SelStart = Len(TextBoxControl.Text) - 3
        End If
        If Posicion = 1 And Posicion = 2 Then ' Posicion Decimal
            TextBoxControl.SelStart = Len(TextBoxControl.Text) - Posicion - 1
        End If
        
    End If
    LeerPosiciones
    If PosDecimalUno = True Or PosDecimalDos = True Then
        TextBoxControl.SelLength = 1
    End If
    LeerValor
    If KeyCode = 190 Then ' si tecleea punto decimal colocar en primer digito decimal
        TextBoxControl.SelStart = Len(TextBoxControl.Text) - 2
        TextBoxControl.SelLength = 1
        Exit Sub
    End If
    
    If PosPuntoDecimal = True And Fix(ValorControlText) = 0 And SalirdePrimerEntero = False Then
        TextBoxControl.SelStart = Len(TextBoxControl.Text) - 4
        HistoryValue = Fix(ValorControlText)
        FuePrimerEntero = True
        TextBoxControl.SelLength = 1
    End If
    
    If ColocarEnPosicion1 = True Then
        ColocarEnPosicion1 = False
        TextBoxControl.SelStart = Len(TextBoxControl.Text) - 1
    End If
    
    If ColocarEnPosicion2 = True Then
        ColocarEnPosicion2 = False
        TextBoxControl.SelStart = Len(TextBoxControl.Text) - 3
    End If
    
End Sub

Private Sub TextboxControl_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    With TextBoxControl
        .SelStart = 0
        .SelLength = Len(.Text)
    End With

End Sub

Private Sub Class_Terminate()

    'Code Terminate
    
End Sub

Private Sub LeerPosiciones()
    PosCero = False
    PosDecimalUno = False
    PosDecimalDos = False
    PosPuntoDecimal = False
    PosEnteroUno = False
    PosEnteroVariable = False
    
    Posicion = Len(TextBoxControl.Text) - TextBoxControl.SelStart
    
    If Posicion = 0 Then PosCero = True
    If Posicion = 1 Then PosDecimalUno = True 'Posicion Decimal 2
    If Posicion = 2 Then PosDecimalDos = True 'Posicion Decimal 1
    If Posicion = 3 Then PosPuntoDecimal = True 'Punto Decimal
    If Posicion = 4 Then PosEnteroUno = True 'Entero 1
    If Posicion = 5 Then PosEnteroVariable = True 'Entero 2
End Sub

Private Sub LeerValor()
    CantidadStr = ""
    For posnumero = 1 To Len(TextBoxControl.Text)
        If (Asc(Mid(TextBoxControl.Text, posnumero, 1)) >= 48 And Asc(Mid(TextBoxControl.Text, posnumero, 1)) <= 57) Or Asc(Mid(TextBoxControl, posnumero, 1)) = 46 Then
            CantidadStr = CantidadStr & Mid(TextBoxControl, posnumero, 1)
        End If
    Next
    If IsNumeric(CantidadStr) Then
        ValorControlText = CDbl(CantidadStr)
    Else
        ValorControlText = 0
    End If
End Sub

Attribute VB_Name = "ClassControlGeneralNumber"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Public WithEvents TextBoxControl As MSForms.TextBox
Attribute TextBoxControl.VB_VarHelpID = -1
Dim CantidadStr As String
Public VentanaActiva As Object
Dim ValorControlText As Double
Dim FormatoNumeroStr As String

Public Sub SetValue(NuevoValor As Double)

    TextBoxControl = Format(NuevoValor, FormatoNumeroStr)
    
End Sub

Public Function GetValue() As Double

    GetValue = ValorControlText
    
End Function

Private Sub Class_Initialize()

    FormatoNumeroStr = "general number"
    
End Sub

Private Sub TextBoxControl_Change()

    TextBoxControl.Text = VBA.Replace(TextBoxControl.Text, VBA.Chr(9), "")
    TextBoxControl.Text = VBA.Replace(TextBoxControl.Text, "  ", " ")
    LeerValor
    
End Sub

Private Sub TextBoxControl_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
    'Code Key Down

End Sub

Private Sub TextBoxControl_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)

    Select Case KeyAscii
    Case Asc("0") To Asc("9")
'    Case Asc("-")
'        If InStr(1, TextBoxControl.Text, "-") > 0 Or TextBoxControl.SelStart > 0 Then
'            KeyAscii = 0
'        End If
    Case Asc(SeparadorDecimalSystem)
        If TextBoxControl.SelLength <> Len(TextBoxControl.Text) Then
            If InStr(1, TextBoxControl.Text, SeparadorDecimalSystem) > 0 Then
                KeyAscii = 0
            End If
        End If
    Case Else
        KeyAscii = 0
    End Select
    
End Sub

Private Sub TextBoxControl_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
    'Code Key Up
    
End Sub

Private Sub TextboxControl_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    With TextBoxControl
        .SelStart = 0
        .SelLength = Len(.Text)
    End With

End Sub

Private Sub Class_Terminate()

    'Code Terminate
    
End Sub

Private Sub LeerValor()
    CantidadStr = ""
    For posnumero = 1 To Len(TextBoxControl.Text)
        If (Asc(Mid(TextBoxControl.Text, posnumero, 1)) >= 48 And Asc(Mid(TextBoxControl.Text, posnumero, 1)) <= 57) Or Mid(TextBoxControl, posnumero, 1) = SeparadorDecimalSystem Then
            CantidadStr = CantidadStr & Mid(TextBoxControl, posnumero, 1)
        End If
    Next
    If IsNumeric(CantidadStr) Then
        ValorControlText = CDbl(CantidadStr)
    Else
        ValorControlText = 0
    End If
End Sub

Attribute VB_Name = "ClassControlIdCode"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Public WithEvents TextBoxControl As MSForms.TextBox
Attribute TextBoxControl.VB_VarHelpID = -1
Dim IdCode As Long
Dim DataBaseWorksheet As Worksheet

Public Sub SetValues(DataBaseWorksheetTemp As Worksheet)

    Set DataBaseWorksheet = DataBaseWorksheetTemp
    CrearNuevoId
    TextBoxControl = IdCode
    TextBoxControl.TextAlign = fmTextAlignCenter
    TextBoxControl.Locked = True
    
End Sub

Public Function GetNewIdCode() As Long
    
    CrearNuevoId
    GetNewCode = IdCode
    
End Function

Public Function ReadActiveIdCode() As Long
    
    GetActiveCode = IdCode
    
End Function


Private Sub Class_Initialize()
    
    'ValorControl = 0
    
End Sub

Private Sub Class_Terminate()

    'Code Terminate
    
End Sub
    
Private Sub CrearNuevoId()
    
    Dim RangoId As Range
    Set RangoId = DataBaseWorksheet.Range("A:A")
    IdCode = Application.WorksheetFunction.Max(RangoId) + 1
    If IdCode <= 0 Then
        MsgBox "Error en la creaci|fffd|n de Id, tabla " & DataBaseWorksheet.Name
    End If
    
End Sub
Attribute VB_Name = "ClassControlPercent"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Public WithEvents TextBoxControl As MSForms.TextBox
Attribute TextBoxControl.VB_VarHelpID = -1
Dim CantidadStr As String
Public VentanaActiva As Object
Dim ValorControlText As Double
Dim FormatoNumeroStr As String
Dim HistoryStr As String

Dim PosCero As Boolean
Dim PosUno As Boolean
Dim PosDos As Boolean
Dim Posicion As Long

Private Sub Class_Initialize()

    FormatoNumeroStr = "0%"
    
End Sub

Public Sub SetValue(NuevoValor As Double)

    NuevoValor = NuevoValor
    TextBoxControl = Format(NuevoValor, FormatoNumeroStr)
    
End Sub

Public Function GetValue() As Double

    GetValue = ValorControlText
    
End Function

Private Sub TextBoxControl_Change()

    TextBoxControl.Text = VBA.Replace(TextBoxControl.Text, VBA.Chr(9), "")
    TextBoxControl.Text = VBA.Replace(TextBoxControl.Text, "  ", " ")
    LeerValor
    
End Sub

Private Sub TextBoxControl_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
    HistoryStr = TextBoxControl.Text
    
End Sub

Private Sub TextBoxControl_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)

    Select Case KeyAscii
    Case Asc("0") To Asc("9")
'    Case Asc("-")
'        If InStr(1, TextBoxControl.Text, "-") > 0 Or TextBoxControl.SelStart > 0 Then
'            KeyAscii = 0
'        End If
'    Case Asc(".")
'        If TextboxControl.SelLength <> Len(TextboxControl.Text) Then
'            If InStr(1, TextboxControl.Text, ".") > 0 Then
'                KeyAscii = 0
'            End If
'        End If
    Case Else
        KeyAscii = 0
    End Select
    
End Sub

Private Sub TextBoxControl_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

    LeerValor
    If (ValorControlText * 100) > 100 Or (ValorControlText * 100) < 0 Then
        
        TextBoxControl.Text = HistoryStr
    End If
    TextBoxControl = Format(ValorControlText, FormatoNumeroStr)
    LeerPosiciones
    If PosCero = True Then
        TextBoxControl.SelStart = Len(TextBoxControl.Text) - 1
    End If
    
    LeerPosiciones
    LeerValor
    If (PosUno = True Or PosDos = True) And Fix(ValorControlText * 100) = 0 Then 'And SalirdePrimerEntero = False Then
        TextBoxControl.SelStart = Len(TextBoxControl.Text) - 2
        TextBoxControl.SelLength = 1
    End If
    
End Sub

Private Sub TextboxControl_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    With TextBoxControl
        .SelStart = 0
        .SelLength = Len(.Text)
    End With

End Sub

Private Sub Class_Terminate()

    'Code Terminate
    
End Sub

Private Sub LeerPosiciones()

    PosCero = False
    PosUno = False
    PosDos = False
    
    Posicion = Len(TextBoxControl.Text) - TextBoxControl.SelStart
    
    If Posicion = 0 Then PosCero = True
    If Posicion = 1 Then PosUno = True 'Entero 1
    If Posicion = 2 Then PosDos = True 'Entero 1
    
End Sub


Private Sub LeerValor()

    CantidadStr = ""
    For posnumero = 1 To Len(TextBoxControl.Text)
        If (Asc(Mid(TextBoxControl.Text, posnumero, 1)) >= 48 And Asc(Mid(TextBoxControl.Text, posnumero, 1)) <= 57) Or Asc(Mid(TextBoxControl, posnumero, 1)) = 46 Then
            CantidadStr = CantidadStr & Mid(TextBoxControl, posnumero, 1)
        End If
    Next
    If IsNumeric(CantidadStr) Then
        ValorControlText = CDbl(CantidadStr) / 100
    Else
        ValorControlText = 0
    End If
    
End Sub


Attribute VB_Name = "ClassIndice"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim ArrayId As Variant
Dim ArrayWorksheet As Variant
Dim HojaCreateId As Worksheet
Dim ColumnId As String

Public Function RenglonItem(IdBuscar As Long) As Long  'Regresa Valor
    
    RenglonItem = 0
    If UBound(ArrayId) > 0 Then
        If IdBuscar > 0 And IdBuscar <= UBound(ArrayId) Then
            IndiceRevisar = ArrayId(IdBuscar)
            RenglonItem = ArrayWorksheet(IndiceRevisar, 1)
        End If
    End If
    
End Function

Public Function FindItems(IdBuscar As Long) As Variant  'Regresa Valor

    Dim ArrayRenglon() As Variant
    Dim IndiceRevisar As Long
    ContarPalabra = 0
    If UBound(ArrayId) > 0 Then
        If IdBuscar > 0 And IdBuscar <= UBound(ArrayId) Then
            IndiceRevisar = ArrayId(IdBuscar)
            If IndiceRevisar > 0 Then
                Do Until IdBuscar <> ArrayWorksheet(IndiceRevisar, 2)
                    ContarPalabra = ContarPalabra + 1
                    ReDim Preserve ArrayRenglon(1 To ContarPalabra)
                    ArrayRenglon(ContarPalabra) = ArrayWorksheet(IndiceRevisar, 1)
        
                    IndiceRevisar = IndiceRevisar + 1
                    If IndiceRevisar > UBound(ArrayWorksheet) Then
                        Exit Do
                    End If
                Loop
            End If
        End If
    End If
    If ContarPalabra = 0 Then
        ReDim ArrayRenglon(0)
    End If
    FindItems = ArrayRenglon
    
End Function

Public Sub CreateIndice(HojaCreateIdTemp As Worksheet, ColumnIdTemp As String)   ' Coloca Valor
    
    Set HojaCreateId = HojaCreateIdTemp
    ColumnId = ColumnIdTemp
    
    Reordenar
    
End Sub
    
Public Sub Reordenar()

    Dim Temporal As Worksheet
    Set Temporal = NuevaHoja("Temporal2")
    
    Temporal.Range("A:C").ColumnWidth = 20
    UltimoRenglon = GetLastRow(HojaCreateId)
    
    If UltimoRenglon > 1 Then
            
            Temporal.Range("B1:B" & UltimoRenglon) = HojaCreateId.Range(ColumnId & "1:" & ColumnId & UltimoRenglon).Value
            
            Temporal.Range("A1") = "Renglon"
            Temporal.Range("B1") = "Id"
            
            Temporal.Range("A2:A" & UltimoRenglon).FormulaR1C1 = "=ROW(RC[1])"
            Temporal.Range("A2:A" & UltimoRenglon).Copy
            Temporal.Range("A2:A" & UltimoRenglon).PasteSpecial (xlPasteValues)
            
            Temporal.Columns("A:B").Sort key1:=Temporal.Range("B1"), order1:=xlAscending, key2:=Range("A1"), order2:=xlAscending, Header:=xlYes
        
            Set RangeDatos = Temporal.Range("A2:B" & UltimoRenglon)
            ArrayWorksheet = RangeDatos
            Set RangoTemp = HojaCreateId.Range(ColumnId & ":" & ColumnId)
            IdMaximo = Application.WorksheetFunction.Max(RangoTemp)
            ReDim ArrayId(1 To IdMaximo)
            For ColocarCero = 1 To IdMaximo
                ArrayId(ColocarCero) = 0
            Next
            CompararValor = 0
            For IdTemporal = 1 To UBound(ArrayWorksheet)
                If Not IsNumeric(ArrayWorksheet(IdTemporal, 2)) Then
                    MsgBox "Error en Indice - Checar Celda " & ArrayWorksheet(IdTemporal, 1) & " Hoja " & HojaCreateId.Name
                    ReDim ArrayId(0)
                    ReDim ArrayWorksheet(0)
                    Exit Sub
                End If
                If CompararValor <> ArrayWorksheet(IdTemporal, 2) Then
                    ArrayId(ArrayWorksheet(IdTemporal, 2)) = IdTemporal
                    CompararValor = ArrayWorksheet(IdTemporal, 2)
                End If
            Next
            
    Else
            
            ReDim ArrayId(0)
            ReDim ArrayWorksheet(0)
            
    End If
        
End Sub

Attribute VB_Name = "ClassIndicexFecha"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Private ArrayId As Variant
Private ArrayWorksheet As Variant

Public Sub prueba()
    MsgBox UBound(ArrayWorksheet)
End Sub

Public Function FindItems(IdBuscar As Long) As Variant  'Regresa Valor
    Dim ArrayRenglon() As Variant
    ContarPalabra = 0
    If UBound(ArrayId) > 0 Then
        If IdBuscar > 0 And IdBuscar <= UBound(ArrayId) Then
            IndiceRevisar = ArrayId(IdBuscar)
            If IndiceRevisar > 0 Then
                Do Until IdBuscar <> Int(ArrayWorksheet(IndiceRevisar, 2))
                    ContarPalabra = ContarPalabra + 1
                    ReDim Preserve ArrayRenglon(1 To ContarPalabra)
                    ArrayRenglon(ContarPalabra) = ArrayWorksheet(IndiceRevisar, 1)
        
                    IndiceRevisar = IndiceRevisar - 1
                    If IndiceRevisar = 0 Then
                        Exit Do
                    End If
                Loop
            End If
        End If
    End If
    If ContarPalabra = 0 Then
        ReDim ArrayRenglon(0)
    End If
    FindItems = ArrayRenglon
    
End Function

Public Sub CreateIndice(HojaCreateId As Worksheet, ColumnId As String)   ' Coloca Valor
    Set Temporal = NuevaHoja("Temporal2")
    
    Temporal.Range("A:C").ColumnWidth = 20
    UltimoRenglon = GetLastRow(HojaCreateId)
    
    If UltimoRenglon > 1 Then
            
            Temporal.Range("B1:B" & UltimoRenglon) = HojaCreateId.Range(ColumnId & "1:" & ColumnId & UltimoRenglon).Value

            Temporal.Range("A2:A" & UltimoRenglon).FormulaR1C1 = "=ROW(RC[1])"
            Temporal.Range("A2:A" & UltimoRenglon).Copy
            Temporal.Range("A2:A" & UltimoRenglon).PasteSpecial (xlPasteValues)

            Temporal.Columns("A:B").Sort key1:=Temporal.Range("B1"), order1:=xlAscending, Header:=xlYes

            Set RangeDatos = Temporal.Range("A2:B" & UltimoRenglon)
            ArrayWorksheet = RangeDatos
            Set RangoTemp = HojaCreateId.Range(ColumnId & ":" & ColumnId)
            IdMaximo = Application.WorksheetFunction.Max(RangoTemp)
            ReDim ArrayId(1 To IdMaximo)
            For ColocarCero = 1 To IdMaximo
                ArrayId(ColocarCero) = 0
            Next
            CompararValor = 0
            For IdTemporal = 1 To UBound(ArrayWorksheet)
                If CompararValor <> ArrayWorksheet(IdTemporal, 2) Then
                    ArrayId(Int(ArrayWorksheet(IdTemporal, 2))) = IdTemporal
                End If
            Next
            
    Else
            
            ReDim ArrayId(0)
            ReDim ArrayWorksheet(0)
            
    End If
        
End Sub


Attribute VB_Name = "ClassTotales"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Private ArrayTotales() As Variant

Public Sub prueba()
    MsgBox UBound(ArrayWorksheet)
End Sub

Public Property Get GetTotal(IdRegistro As Long) As Double  'Regresa Valor
    If IdRegistro > 0 And IdRegistro <= UBound(ArrayTotales) Then
        GetTotal = ArrayTotales(IdRegistro)
    Else
        GetTotal = 0
    End If
End Property

Public Sub CreateIndiceTotales(HojaTotales As Worksheet, ColumnaIndice As String, ColumnaTotalizar As String)  ' Coloca Valor
    
    Dim Renglon As Long
    Dim IdTemporal As Long
    Dim IdRegistro As Long
    Dim RangoTemp As Range
    Dim UltimoRenglon As Long

    Dim IndiceTotal As Long
    Dim IdDevolucion As Long

    Set RangoTemp = HojaTotales.Range(ColumnaIndice & ":" & ColumnaIndice)
    IndiceTotal = Application.WorksheetFunction.Max(RangoTemp)
    
    If IndiceTotal = 0 Then
        ReDim ArrayTotales(0)
        Exit Sub
    End If

    ReDim ArrayTotales(1 To IndiceTotal)
    For IdTemporal = 2 To IndiceTotal
        ArrayTotales(IdTemporal) = 0
    Next
    UltimoRenglon = GetLastRow(HojaTotales)
    For Renglon = 2 To UltimoRenglon
        IdRegistro = HojaTotales.Range(ColumnaIndice & Renglon)
        
        If IdRegistro > 0 Then
            
            ArrayTotales(IdRegistro) = ArrayTotales(IdRegistro) + HojaTotales.Range(ColumnaTotalizar & Renglon)
        End If
    Next
    
End Sub
Attribute VB_Name = "ClassTotalxMes"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim Indice As ClassIndice
Dim ColumnaId As String
Dim ColumnaFecha As String
Dim ColumnaTotalizar As String
Dim ArrayRenglones() As Variant
Dim HojaIndice As Worksheet
Dim UltimoMes As Long
Dim PrimerMes As Long
Dim ArrayTemp() As Variant

Public Sub prueba()
    MsgBox UBound(ArrayWorksheet)
End Sub

Public Function ArrayTotalxMes(IdItem As Long) As Variant
    
    Dim IdMes As Long
    ArrayRenglones = Indice.FindItems(IdItem)
    
    For Contador = PrimerMes To UltimoMes
        ArrayTemp(Contador, 2) = 0
    Next
    For Contador = 1 To UBound(ArrayRenglones)
        IdMes = Year(HojaIndice.Range(ColumnaFecha & ArrayRenglones(Contador))) * 12 + Month(HojaIndice.Range(ColumnaFecha & ArrayRenglones(Contador)))
        If IdMes <= UltimoMes And IdMes >= PrimerMes Then
            ArrayTemp(IdMes, 2) = ArrayTemp(IdMes, 2) + HojaIndice.Range(ColumnaTotalizar & ArrayRenglones(Contador))
        End If
    Next
    
    For Contador = PrimerMes To UltimoMes
        ArrayTemp(Contador, 1) = Chr(144) & Format(DateSerial(Int(Contador / 12), (Contador Mod 12), 1), "mmm - yyyy")
    Next
    ArrayTotalxMes = ArrayTemp
    
End Function

Public Sub CreateIndiceTotalesxMes(HojaIndiceTemp As Worksheet, ColumnaIdTemp As String, ColumnaFechaTemp As String, ColumnaTotalizarTemp As String, Meses As Long)

    Set Indice = New ClassIndice
    Indice.CreateIndice HojaIndiceTemp, ColumnaIdTemp
    
    UltimoMes = Year(Date) * 12 + Month(Date)
    PrimerMes = UltimoMes - Meses + 1
    ReDim ArrayTemp(PrimerMes To UltimoMes, 1 To 2)
    
    Set HojaIndice = HojaIndiceTemp
    ColumnaId = ColumnaIdTemp
    ColumnaFecha = ColumnaFechaTemp
    ColumnaTotalizar = ColumnaTotalizarTemp
    
End Sub
Attribute VB_Name = "Compras"
Attribute VB_Base = "0{BA7F4D08-C1DA-4BD7-AFA4-C5B74E6FC643}{3BEC523C-E1FD-4ACC-8F65-2151F8564D74}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim MyBook As Workbook

Dim LayOutEvent As Boolean

Dim ArrayDetallesSalidas As Variant
Dim ArrayArticulos, ArrayClientes, ArraySeries, ArrayKits As Variant
Dim HojaTemporal As Worksheet
Dim RenglonTecnico As Long
Dim RenglonTecnicoHistory As Long
Dim RenglonTool As Long
Dim RenglonVenta As Long
Dim CantidaddeArticulos As Double

Dim ControlFecha As ClassControlDate

Dim CodigoActive As Long
Dim CuentaActiva As Long

Dim InsertarItem As Boolean
Dim RenglonHistory As Long
Dim Renglon As Long

Dim ControlActivo As String
Dim Inicio As Boolean
Dim UltimoItemSelected As Long
Dim PalabraBusqueda As String

Dim TextBoxUnitarioDouble As Double
Dim TextBoxUnitarioVentaDouble As Double

Dim TextboxUnitarioVentaUpdate As Boolean
Dim TextboxUnitarioCompraUpdate As Boolean

Private Sub ComboBoxA|fffd|o_change()
    MyBook.Activate
    With ComboBoxA|fffd|o
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub ComboBoxDia_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MyBook.Activate
    With ComboBoxDia
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub ComboBoxMes_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MyBook.Activate
    With ComboBoxMes
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub CommandButton18_Click()
    MyBook.Activate
     If ListBoxHerramientas.ListCount > 1 Then
        PalabraBusqueda = InputBox("Palabra para buscar")
        For Contador = 0 To ListBoxHerramientas.ListCount - 1
            If InStr(1, ListBoxHerramientas.List(Contador, 1), PalabraBusqueda, vbTextCompare) > 0 Then
                ListBoxHerramientas.Selected(Contador) = True
                Exit For
            End If
        Next
     End If
End Sub

Private Sub CommandButton19_Click()
    MyBook.Activate
     If TextBoxListIndex >= 0 Then
        Temporal = ListBoxHerramientas.ListIndex + 1
        
        If Temporal < ListBoxHerramientas.ListCount Then
            ListBoxHerramientas.Selected(Temporal) = True
        End If
    End If
    
    If ControlActivo = "TextBoxCantidad" Then
        TextBoxCantidad.SetFocus
        With TextBoxCantidad
        .SelStart = 0
        .SelLength = Len(.Text)
        End With
    End If
    If ControlActivo = "TextBoxSerie" Then
        TextBoxSerie.SetFocus
        With TextBoxSerie
        .SelStart = 0
        .SelLength = Len(.Text)
        End With
    End If
    If ControlActivo = "TextBoxComentario" Then
        TextBoxComentario.SetFocus
        With TextBoxComentario
        .SelStart = 0
        .SelLength = Len(.Text)
        End With
    End If
End Sub

Private Sub CommandButtonA|fffd|adirTool_Click()
    MyBook.Activate
    Herramientas.SetCodigo 0
    Herramientas.Show
    Unload Herramientas
    ActualizarArrayArticulos
    TextBoxBuscarHerramienta.SetFocus
End Sub

Private Sub CommandButtonAyuda_Click()
    MyBook.Activate
    Dim Control As Object
    For Each Control In Me.Controls
        If Control.Tag = "Desbloquear" Then
            Control.MultiLine = False
            Control.TabKeyBehavior = False
            Control.EnterKeyBehavior = False
            Control.WordWrap = True
        End If
    Next
    
    zLogin.SetClassWindow 2
    zLogin.Show
    
    TextBoxBuscarHerramienta.SetFocus
    
End Sub

Private Sub CommandButtonControlVentas_Click()

    MyBook.Activate
    ControlVentas.NombreInicio = TextBoxNombre
    ControlVentas.Show
    TextBoxBuscarHerramienta.SetFocus
    
End Sub

Private Sub CommandButtonFindPrevious_Click()
    MyBook.Activate
    Dim Fin As Long
    If ListBoxHerramientas.ListIndex = -1 Then
        Fin = ListBoxHerramientas.ListCount - 1
    Else
        Fin = ListBoxHerramientas.ListIndex - 1
    End If
    If ListBoxHerramientas.ListCount > 1 Then
        For Contador = Fin To 0 Step -1
            If InStr(1, ListBoxHerramientas.List(Contador, 1), PalabraBusqueda, vbTextCompare) > 0 Then
                ListBoxHerramientas.Selected(Contador) = True
                Exit For
            End If
        Next
    End If
End Sub

Private Sub CommandButtonGuardarFactura_Click()
    MyBook.Activate
    Dim UltimoRenglon As Long
    Dim Idreport As Long
    
    UltimoRenglon = GetLastRow(Worksheets("DetallesCompras"))
    If UltimoRenglon < 2 Then
        MsgBoxCentered "No hay articulos para grabar", vbInformation, Me
        TextBoxBuscarHerramienta.SetFocus
        Exit Sub
    Else
        MenuFormatoPrint.Show
        If MenuFormatoPrint.GetFormatoGuardar = "" Then
            MsgBox "Se cancelo guardar"
            Exit Sub
        End If
        
        GuardarCompra
        
        UltimoRenglon = GetLastRow(Worksheets("Compras"))
        Idreport = Val(Worksheets("Compras").Range("A" & UltimoRenglon))
        
        If MenuFormatoPrint.GetFormatoGuardar = "Formato Excel" Then
            ReporteComprasExcel Idreport
        End If
        
        If MenuFormatoPrint.GetFormatoGuardar = "Formato PDF" Then
            MsgBox "Mostrar en formato PDF"
        End If
        
        If MenuFormatoPrint.GetFormatoGuardar = "Mandar a Imprimir" Then
            MsgBox "Enviar a imprimir"
        End If
        
    End If
    
End Sub

Private Sub GuardarCompra()

    MyBook.Activate
    Dim UltimoRenglon As Long

    UltimoRenglon = GetLastRow(Worksheets("DetallesCompras"))
    
    'Folio
    Worksheets("DetallesCompras").Range("AA2:AA" & UltimoRenglon) = TextBoxFolio.Value
    'Fecha
    Worksheets("DetallesCompras").Range("AK2:AK" & UltimoRenglon) = ControlFecha.GetFecha + TimeValue(Time)
        
    If RenglonTecnico = 0 Then
    
        Worksheets("DetallesCompras").Range("AB2:AB" & UltimoRenglon) = 0   ' Id Nombre
        Worksheets("DetallesCompras").Range("AC2:AC" & UltimoRenglon) = "Sin Registro"   ' Nombre
    
    Else
    
        Worksheets("DetallesCompras").Range("AB2:AB" & UltimoRenglon) = Worksheets("Clientes").Range("A" & RenglonTecnico)   ' Id Nombre
        Worksheets("DetallesCompras").Range("AC2:AC" & UltimoRenglon) = Worksheets("Clientes").Range("B" & RenglonTecnico)   ' Nombre
        Worksheets("DetallesCompras").Range("AW2:AW" & UltimoRenglon) = Worksheets("Clientes").Range("C" & RenglonTecnico)   ' Direccion
        Worksheets("DetallesCompras").Range("AX2:AX" & UltimoRenglon) = Worksheets("Clientes").Range("D" & RenglonTecnico)   ' Correo
        Worksheets("DetallesCompras").Range("AY2:AY" & UltimoRenglon) = Worksheets("Clientes").Range("E" & RenglonTecnico)   ' Telefono
        Worksheets("DetallesCompras").Range("AZ2:AZ" & UltimoRenglon) = Worksheets("Clientes").Range("F" & RenglonTecnico)   ' Cliente/Proveedor
        
    End If
    
        UltimoRenglon = GetLastRow(Worksheets("DetallesCompras"))
        For Contador = 2 To UltimoRenglon
            RenglonCodigo = Application.Match(Worksheets("DetallesCompras").Cells(Contador, 30), Worksheets("Articulos").Columns(1), 0)
            If IsError(RenglonCodigo) Then
                MsgBoxCentered "Error Tabla Codigos No se encuentra Id " & Worksheets("Temporal").Cells(Contador, 30), vbInformation, Me
            Else
                Worksheets("Articulos").Cells(RenglonCodigo, 7) = Worksheets("Articulos").Cells(RenglonCodigo, 7) + Worksheets("DetallesCompras").Cells(Contador, 34)
                Worksheets("Articulos").Range("D" & RenglonCodigo) = Worksheets("DetallesCompras").Range("AI" & Contador)
                Worksheets("Articulos").Range("E" & RenglonCodigo) = Worksheets("DetallesCompras").Range("AL" & Contador)
            End If
        Next
        
        RenglonDisponible = GetLastRow(Worksheets("Compras")) + 1
        Worksheets("DetallesCompras").Range("AA2:AZ" & UltimoRenglon).Copy
        Worksheets("Compras").Range("A" & RenglonDisponible).PasteSpecial (xlPasteValues)
        ThisWorkbook.Save
    
        NuevoRegistro
        
        TextBoxLookTecnico = ""
        RenglonTecnico = 0
        LimpiarDatosProveedor
        
End Sub

Private Sub CommandButtonKits_Click()
    MyBook.Activate
    Set ControlKits.VentanaLlamada = Me
    ControlKits.Show
    If FolioKit = 0 Then
        TextBoxBuscarHerramienta.SetFocus
        Exit Sub
    End If
    TextBoxSerie = Empty
    TextBoxComentario = Empty
    
    RenglonDisponible = Worksheets("DetallesCompras").Range("AD" & Worksheets("DetallesCompras").Rows.Count).End(xlUp).Row
    TOTALGRUPOS = Worksheets("Kits").Range("A" & Worksheets("Kits").Rows.Count).End(xlUp).Row
    TOTALCODIGOS = Worksheets("Articulos").Range("A" & Worksheets("Articulos").Rows.Count).End(xlUp).Row
    For CONTADORGRUPOS = 2 To TOTALGRUPOS
        If Worksheets("Kits").Cells(CONTADORGRUPOS, 1) = FolioKit Then
            
            For ContadorCodigos = 2 To TOTALCODIGOS
                
                If Val(Worksheets("Kits").Cells(CONTADORGRUPOS, 3)) = Val(Worksheets("Articulos").Cells(ContadorCodigos, 1)) Then
                    
                    RenglonTool = ContadorCodigos
                    CantidaddeArticulos = Worksheets("Kits").Range("G" & CONTADORGRUPOS) * CantidadKits
                    
                    ActualizarLista
                                        
                    Exit For
                End If
                
            Next
        End If
    Next
    If ListBoxHerramientas.ListCount > 0 Then
        ListBoxHerramientas.Selected(ListBoxHerramientas.ListCount - 1) = True
    End If
    
End Sub

Private Sub CommandButtonMenuItems_Click()
    MyBook.Activate
    Dim ArrayVentaTemp As Variant
    
    MenuArticulos.Show
    
    If UBound(MenuArticulos_ArrayVenta) <> 0 Then
    For Contador = 1 To UBound(MenuArticulos_ArrayVenta, 2)
    
        RenglonTool = MenuArticulos_ArrayVenta(1, Contador)
        CantidaddeArticulos = MenuArticulos_ArrayVenta(2, Contador)
        ActualizarLista
        
    Next
    End If
    ActualizarArrayArticulos
    Unload MenuArticulos
    TextBoxBuscarHerramienta.SetFocus
End Sub

Private Sub CommandButtonModificarCuenta_Click()

    MyBook.Activate
    If CuentaActiva = 0 Then
        MsgBoxCentered "Seleccione una Cuenta.", vbInformation, Me
        Exit Sub
    End If
    Cuentas.SetCodigo CuentaActiva
    Cuentas.Show
    Unload Cuentas
    ActualizarArrayClientes
    ActualizarDatosCliente

End Sub

Private Sub CommandButtonModificarTool_Click()

    MyBook.Activate
    If CodigoActive = 0 Then
        MsgBoxCentered "Seleccione un Item.", vbInformation, Me
        Exit Sub
    End If
    Herramientas.SetCodigo CodigoActive
    Herramientas.Show
    Unload Herramientas
    ActualizarArrayArticulos
    TextBoxBuscarHerramienta.SetFocus

End Sub

Private Sub CommandButtonNextFind_Click()

    MyBook.Activate
    Dim Inicio As Long
    If ListBoxHerramientas.ListIndex = -1 Then
        Inicio = 0
    Else
        Inicio = ListBoxHerramientas.ListIndex + 1
    End If
    If ListBoxHerramientas.ListCount > 1 Then
        For Contador = Inicio To ListBoxHerramientas.ListCount - 1
            If InStr(1, ListBoxHerramientas.List(Contador, 1), PalabraBusqueda, vbTextCompare) > 0 Then
                ListBoxHerramientas.Selected(Contador) = True
                Exit For
            End If
        Next
    End If
End Sub

Private Sub CommandButtonPersonal_Click()
    MyBook.Activate
    If TextBoxLookTecnico = "" Then
        Cuentas.SetRenglonCuenta 0
    Else
        Cuentas.SetRenglonCuenta 0
    End If
    Cuentas.Show
    If Cuentas.HuboModificaciones = True Then
        ActualizarArrayClientes
    End If
    
    Unload Cuentas
    TextBoxBuscarHerramienta.SetFocus

End Sub

Private Sub CommandButtonNuevaCuenta_Click()

    MyBook.Activate
    Cuentas.SetCodigo 0
    Cuentas.Show
    Unload Cuentas
    ActualizarArrayClientes
    
End Sub

Private Sub CommandButtonTodosLosItems_Click()

    MyBook.Activate
    Confirmacion = MsgBoxCentered("Desea eliminar todos los registros?", vbYesNo, Me)
    If Confirmacion = vbYes Then
        NuevoRegistro
    End If
    TextBoxBuscarHerramienta = Empty
    TextBoxBuscarHerramienta.SetFocus
    
End Sub

Private Sub CommandButtonWindowConfig_Click()
    MyBook.Activate
    ZConfigWindow.RenglonVentana = 18
    Set ZConfigWindow.VentanaActiva = Me
    ZConfigWindow.Show
End Sub

Private Sub Label56_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    MyBook.Activate
    ErrorListBox.Show
End Sub

Private Sub TextBoxBuscarHerramienta_Change()
    MyBook.Activate
    TextBoxBuscarHerramienta.Text = VBA.Replace(TextBoxBuscarHerramienta.Text, VBA.Chr(9), "")
    TextBoxBuscarHerramienta.Text = VBA.Replace(TextBoxBuscarHerramienta.Text, "  ", " ")
    
    TextboxUnitarioCompraUpdate = False
    TextboxUnitarioVentaUpdate = False
    
    Dim Palabra As Variant
    Dim SepararPalabras As String
    Dim A|fffd|adirALista As Boolean
    
    TextBoxBuscarHerramienta.BackColor = &H80000005
    If Trim(TextBoxBuscarHerramienta) = "" Then
        LimpiarVentaDetalles
        CalcularTotales
        RenglonHistory = 0
        InsertarItem = False
        Exit Sub
    End If
    
    If UBound(ArrayArticulos) = 0 Then
        Exit Sub
    End If
    
    If ListBoxHerramientas.ListIndex >= 0 Then
        ListBoxHerramientas.Selected(ListBoxHerramientas.ListIndex) = False
    End If
    
    Renglon = 0
    RenglonTool = 0
    Temporal = ""
    
    If Len(Trim(TextBoxBuscarHerramienta.Value)) > 0 Then
                
        SepararPalabras = QuitarSimbolos(TextBoxBuscarHerramienta)
        Palabra = TextoAPalabras(SepararPalabras)
        
        For Contador = 1 To UBound(ArrayArticulos) 'LBound(ArrayArticulos)
            
            TemporalGlobal = ArrayArticulos(Contador, 2)
            A|fffd|adirALista = True
            For ContarTrues = 1 To UBound(Palabra)
                If Not InStr(1, TemporalGlobal, Palabra(ContarTrues), vbTextCompare) > 0 Then
                    A|fffd|adirALista = False
                    Exit For
                End If
            Next
            If A|fffd|adirALista = True Then
                Renglon = Val(ArrayArticulos(Contador, 1))
                RenglonTool = Renglon
                InsertarItem = True
                Exit For
            End If
        Next
    End If
    ActualizarBusqueda
End Sub
Sub ActualizarBusqueda()
    MyBook.Activate
    If "Code" & Renglon <> "Code" & RenglonHistory Then
    If Renglon > 0 Then
        
        RenglonHistory = Renglon
        CodigoActive = Worksheets("Articulos").Range("A" & Renglon).Value
        TextBoxDescripcion = Worksheets("Articulos").Range("B" & Renglon).Value
        TextBoxUnitario = FormatoMoneda(Worksheets("Articulos").Range("D" & Renglon).Value, Worksheets("Preferencias").Range("B4").Value, 20)
        TextBoxUnitarioDouble = Worksheets("Articulos").Range("D" & Renglon).Value
        TextBoxInventario = Worksheets("Articulos").Range("G" & Renglon).Value
        TextBoxCantidad = Empty
        TextBoxUDM = Worksheets("Articulos").Range("C" & Renglon).Value
        TextBoxUnitarioVenta = FormatoMoneda(Worksheets("Articulos").Range("E" & Renglon).Value, Worksheets("Preferencias").Range("B4").Value, 20)
        TextBoxUnitarioVentaDouble = Worksheets("Articulos").Range("E" & Renglon).Value
        TextBoxSerie = Empty
        TextBoxComentario = Empty
        
        ArchivoImagen = ThisWorkbook.Path & "\Tools\Images\" & Worksheets("Articulos").Range("A" & Renglon).Value & ".JPG"
        If Dir(ArchivoImagen) <> "" Then
            Me.ImagenSalidas.Picture = LoadPicture(ArchivoImagen)
        Else
            Set ImagenSalidas.Picture = ImageColocarFoto.Picture
        End If
        Me.FrameImagen.Repaint
        
    End If
    End If
    If Renglon = 0 Then
        
        RenglonHistory = 0
        CodigoActive = 0
        TextBoxDescripcion = Empty
        TextBoxUnitario = Empty
        TextBoxUnitarioVenta = Empty
        TextBoxInventario = Empty
        TextBoxCantidad = Empty
        TextBoxDescuento = Empty
        TextBoxUDM = Empty
        TextBoxSerie = Empty
        TextBoxComentario = Empty
        
        Set Me.ImagenSalidas.Picture = Nothing
        TextBoxBuscarHerramienta.BackColor = &HC0C0FF
        
    End If

End Sub

Private Sub CommandButton16_Click()
    MyBook.Activate
    Load BusquedaxCodigo
    BusquedaxCodigo.Show
    If BusquedaxCodigo.Renglon > 0 Then
        RenglonTool = BusquedaxCodigo.Renglon
        CantidaddeArticulos = 1
        ActualizarLista
    End If
    ActualizarArrayArticulos
    Unload BusquedaxCodigo
    TextBoxBuscarHerramienta.SetFocus
End Sub

Private Sub CommandButton2_Click()
    MyBook.Activate
    Load BusquedaxNombre
    Set BusquedaxNombre.VentanaLlamada = Me
    BusquedaxNombre.Show
    If BusquedaxNombre.RenglonCliente > 0 Then
        TextBoxLookTecnico = Empty
        RenglonTecnico = BusquedaxNombre.RenglonCliente
        
        ActualizarDatosCliente
    End If
    Unload BusquedaxNombre
    ActualizarArrayClientes
    TextBoxBuscarHerramienta.SetFocus
End Sub

Private Sub CommandButtonA|fffd|adir_Click()
    MyBook.Activate
    Dim EsPrimeraFila, A|fffd|adirALista As Boolean
    If InsertarItem = True Then
    
        If Not IsNumeric(TextBoxCantidad) Then
            TextBoxCantidad.SetFocus
            With TextBoxCantidad
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            Exit Sub
        End If
        If TextBoxCantidad = 0 Then
            TextBoxCantidad.SetFocus
            With TextBoxCantidad
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            Exit Sub
        End If
        
        If TextboxUnitarioCompraUpdate = False Then
            TextBoxUnitario.SetFocus
            With TextBoxUnitario
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            Exit Sub
        End If
        If TextBoxUnitario = 0 Then
            TextboxUnitarioCompraUpdate = False
            TextBoxUnitario.SetFocus
            With TextBoxUnitario
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            Exit Sub
        End If
        
        If TextboxUnitarioVentaUpdate = False Then
            TextBoxUnitarioVenta.SetFocus
            With TextBoxUnitarioVenta
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            Exit Sub
        End If
        If TextBoxUnitarioVenta = 0 Then
            TextboxUnitarioVentaUpdate = False
            TextBoxUnitarioVenta.SetFocus
            With TextBoxUnitarioVenta
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            Exit Sub
        End If
    End If
    
    If InsertarItem = False Then
        TextBoxBuscarHerramienta.SetFocus
        Exit Sub
    End If
    
    If RenglonTool > 0 Then
        CantidaddeArticulos = TextBoxCantidad.Value
        ActualizarLista
        InsertarItem = False
        CalcularTotales
    Else
        TextBoxBuscarHerramienta.SetFocus
    End If
    
End Sub

Sub ActualizarLista()
    MyBook.Activate
    If RenglonTool > 1 Then
        
        Worksheets("DetallesCompras").Activate
        
        If ToggleButtonInsertItem = True And UltimoItemSelected < ListBoxHerramientas.ListCount And UltimoItemSelected >= 0 Then
            Worksheets("DetallesCompras").Rows(UltimoItemSelected + 2 & ":" & UltimoItemSelected + 2).Insert Shift:=xlDown
            RenglonDisponible = UltimoItemSelected + 2
        Else
            RenglonDisponible = Worksheets("DetallesCompras").Range("AD" & Worksheets("DetallesCompras").Rows.Count).End(xlUp).Row + 1
        End If
        
'Renglon Ubicaci|fffd|n Tool
Worksheets("DetallesCompras").Range("Z" & RenglonDisponible) = RenglonTool

'Codigo
Worksheets("DetallesCompras").Range("AD" & RenglonDisponible) = Worksheets("Articulos").Range("A" & RenglonTool)

'Descripci|fffd|n
Worksheets("DetallesCompras").Range("AE" & RenglonDisponible) = Worksheets("Articulos").Range("B" & RenglonTool)
Worksheets("DetallesCompras").Range("B" & RenglonDisponible) = Worksheets("Articulos").Range("B" & RenglonTool)

'Unidad de Medida
Worksheets("DetallesCompras").Range("AG" & RenglonDisponible) = Worksheets("Articulos").Range("C" & RenglonTool)

'Serie
Worksheets("DetallesCompras").Range("AF" & RenglonDisponible) = TextBoxSerie.Text

'Comentario
'Worksheets("DetallesCompras").Range("AR" & RenglonDisponible) = TextBoxComentario.Value

'Categoria
Worksheets("DetallesCompras").Range("AS" & RenglonDisponible) = Worksheets("Articulos").Range("K" & RenglonTool)

'Cantidad
Worksheets("DetallesCompras").Range("AH" & RenglonDisponible) = CantidaddeArticulos
Worksheets("DetallesCompras").Range("C" & RenglonDisponible) = CantidaddeArticulos

'Inventario Tool
Worksheets("DetallesCompras").Range("X" & RenglonDisponible).FormulaR1C1 = "=SUMIF(Articulos!C[-23],DetallesCompras!RC[6],Articulos!C[-17])+SUMIF(C[6],RC[6],C[10])"
If Val(Worksheets("DetallesCompras").Range("X" & RenglonDisponible)) < 0 Then
    MsgBoxCentered "Inventario negativo|fffd||fffd||fffd|", vbInformation, Me
End If


                        '*************** CALCULO UNITARIO VENTA ******************


'Valor Unitario Compra
Worksheets("DetallesCompras").Range("AI" & RenglonDisponible) = TextBoxUnitarioDouble '"=RC[3]-(RC[3]*RC[4])"
Worksheets("DetallesCompras").Range("D" & RenglonDisponible).FormulaR1C1 = "=formatomoneda(RC[31],Preferencias!R4C2,20)"

'Valor Extendido Compra
Worksheets("DetallesCompras").Range("AJ" & RenglonDisponible).FormulaR1C1 = "=RC[-2]*RC[-1]"
Worksheets("DetallesCompras").Range("E" & RenglonDisponible).FormulaR1C1 = "=formatomoneda(RC[31],Preferencias!R4C2,20)"

'Valor Unitario Venta
Worksheets("DetallesCompras").Range("AL" & RenglonDisponible) = TextBoxUnitarioVentaDouble


'% Impuesto
If IsNumeric(Worksheets("Articulos").Range("I" & RenglonTool)) Then
    If Worksheets("Articulos").Range("I" & RenglonTool) < 0 Then
        MsgBoxCentered "Error Impuesto Negativo", vbInformation, Me
    End If
    Worksheets("DetallesCompras").Range("AO" & RenglonDisponible) = Worksheets("Articulos").Range("I" & RenglonTool).Value
Else
    Worksheets("DetallesCompras").Range("AO" & RenglonDisponible) = 0
End If

'Impuesto
Worksheets("DetallesCompras").Range("AP" & RenglonDisponible) = "=RC[-6]*RC[-1]"
Worksheets("DetallesCompras").Range("F" & RenglonDisponible).FormulaR1C1 = "=formatomoneda(RC[36],Preferencias!R4C2,20)"

'Total + Impuesto

Worksheets("DetallesCompras").Range("AQ" & RenglonDisponible) = "=RC[-7]+RC[-1]"
Worksheets("DetallesCompras").Range("G" & RenglonDisponible).FormulaR1C1 = "=formatomoneda(RC[36],Preferencias!R4C2,20)"
                
        UltimoRenglon = GetLastRow(Worksheets("DetallesCompras"))
        Set TheRange = Worksheets("DetallesCompras").Range("A2:G" & UltimoRenglon)
        ArrayDetallesSalidas = TheRange
        ListBoxHerramientas.List = ArrayDetallesSalidas
        
        CalcularTotales
        
        TextBoxBuscarHerramienta = ""
        
        If ListBoxHerramientas.ListCount = 1 Then
            ListBoxHerramientas.Selected(0) = True
        Else
            If ToggleButtonInsertItem = True Then
                ListBoxHerramientas.Selected(UltimoItemSelected + 1) = True
            Else
                ListBoxHerramientas.Selected(ListBoxHerramientas.ListCount - 1) = True
            End If
        End If
    End If

    TextBoxBuscarHerramienta.SetFocus
    
End Sub

Private Sub CalcularTotales()

    MyBook.Activate
    Dim RangeSuma As Range
    Set RangeSuma = Worksheets("DetallesCompras").Range("AH:AH")
    TextBoxTotalItems = Format(Application.WorksheetFunction.Sum(RangeSuma), "general number")
    Set RangeSuma = Worksheets("DetallesCompras").Range("AJ:AJ")
    TextBoxSubTotal = Format(Application.WorksheetFunction.Sum(RangeSuma), "$ #,##0.00")
    Set RangeSuma = Worksheets("DetallesCompras").Range("AN:AN")
    TextBoxDescuento = Format(Application.WorksheetFunction.Sum(RangeSuma), "$ #,##0.00")
    Set RangeSuma = Worksheets("DetallesCompras").Range("AP:AP")
    TextBoxImpuesto = Format(Application.WorksheetFunction.Sum(RangeSuma), "$ #,##0.00")
    Set RangeSuma = Worksheets("DetallesCompras").Range("AJ:AJ,AP:AP")
    TextboxTotal = Format(Application.WorksheetFunction.Sum(RangeSuma), "$ #,##0.00")
    If Application.WorksheetFunction.Sum(RangeSuma) = 0 Then
        
        TextBoxTotalItems = Empty
        TextBoxSubTotal = Empty
        TextBoxDescuento = Empty
        TextBoxImpuesto = Empty
        TextboxTotal = Empty
    End If
    
End Sub

Private Sub CommandButtonEliminarItem_Click()
    MyBook.Activate
    Dim EliminarRenglon As Long
    If ListBoxHerramientas.ListIndex >= 0 Then
    
        Confirmacion = MsgBoxCentered("Desea eliminar Item seleccionado?", vbYesNo, Me)
        If Confirmacion = vbYes Then
            
            EliminarRenglon = ListBoxHerramientas.ListIndex + 2
            Worksheets("DetallesCompras").Range(EliminarRenglon & ":" & EliminarRenglon).Delete
            
            LimpiarVentaDetalles
            
            UltimoRenglon = Worksheets("DetallesCompras").Range("AD" & Worksheets("DetallesCompras").Rows.Count).End(xlUp).Row
            If UltimoRenglon <= 1 Then
                ListBoxHerramientas.Clear
            Else
                Set TheRange = Worksheets("DetallesCompras").Range("A2:G" & UltimoRenglon)
                ArrayDetallesSalidas = TheRange
                ListBoxHerramientas.List = ArrayDetallesSalidas
            End If
            
            
            If ListBoxHerramientas.ListCount > 0 Then
            
                If (EliminarRenglon - 2) <= (ListBoxHerramientas.ListCount - 1) Then
                    ListBoxHerramientas.Selected(EliminarRenglon - 2) = True
                Else
                    ListBoxHerramientas.Selected(ListBoxHerramientas.ListCount - 1) = True
                End If
            End If
            TextBoxBuscarHerramienta.SetFocus
    
        End If
        
        CalcularTotales
        
    
    End If
        
End Sub

Private Sub ListBoxHerramientas_Click()
    MyBook.Activate
    If ListBoxHerramientas.ListIndex >= 0 Then
        UltimoItemSelected = ListBoxHerramientas.ListIndex
        
        TextBoxBuscarHerramienta = ""
        
        RenglonVenta = ListBoxHerramientas.ListIndex + 2
        TextBoxListIndex = ListBoxHerramientas.ListIndex
        
        ColocarImagen Worksheets("DetallesCompras").Range("AD" & RenglonVenta).Value
        TextBoxCodigo = Worksheets("DetallesCompras").Range("AD" & RenglonVenta).Value
        CodigoActive = Worksheets("DetallesCompras").Range("AD" & RenglonVenta).Value
        TextBoxCantidad = Format(Worksheets("DetallesCompras").Range("AH" & RenglonVenta).Value, "general number")
        TextBoxDescripcion.Text = Worksheets("DetallesCompras").Range("AE" & RenglonVenta).Value
        TextBoxUDM = Worksheets("DetallesCompras").Range("AG" & RenglonVenta).Value
        TextBoxDescuentoItem = Format(Worksheets("DetallesCompras").Range("AM" & RenglonVenta).Value, "#0%")
        
        TextBoxUnitario = FormatoMoneda(Worksheets("DetallesCompras").Range("AI" & RenglonVenta).Value, "$", 20)
        TextBoxUnitarioDouble = Worksheets("DetallesCompras").Range("AI" & RenglonVenta).Value
    
        TextBoxUnitarioVenta = FormatoMoneda(Worksheets("DetallesCompras").Range("AL" & RenglonVenta).Value, "$", 20)
        TextBoxUnitarioVentaDouble = Worksheets("DetallesCompras").Range("AL" & RenglonVenta).Value
        
        TextBoxInventario = Worksheets("DetallesCompras").Range("X" & RenglonVenta).Value
        
        TextBoxSerie = Worksheets("DetallesCompras").Range("AF" & RenglonVenta).Value
        TextBoxComentario = Worksheets("DetallesCompras").Range("AR" & RenglonVenta).Value
        
    End If
    
End Sub

Private Sub TextBoxBuscarHerramienta_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MyBook.Activate
    With TextBoxBuscarHerramienta
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub TextBoxCantidad_AfterUpdate()
    MyBook.Activate
    If ListBoxHerramientas.ListIndex < 0 Then
        Exit Sub
    End If
    If TextBoxCantidad = "" Then
        TextBoxCantidad = 1
    End If
    If TextBoxCantidad <= 0 Then
        TextBoxCantidad = 1
    End If
    Dim Temporal As Long
    
    RenglonVenta = ListBoxHerramientas.ListIndex + 2
    
    If RenglonVenta >= 0 Then
        Temporal = ListBoxHerramientas.ListIndex
        
        Worksheets("DetallesCompras").Range("C" & RenglonVenta) = "'" & TextBoxCantidad.Text
        Worksheets("DetallesCompras").Range("AH" & RenglonVenta) = TextBoxCantidad.Value
        If Val(Worksheets("DetallesCompras").Range("X" & RenglonVenta)) < 0 Then
            MsgBoxCentered "Inventario negativo|fffd||fffd||fffd|", vbInformation, Me
        End If
        
        'Actualizar Lista
        UltimoRenglon = Worksheets("DetallesCompras").Range("AD" & Worksheets("DetallesCompras").Rows.Count).End(xlUp).Row
        Set TheRange = Worksheets("DetallesCompras").Range("A2:G" & UltimoRenglon)
        ArrayDetallesSalidas = TheRange
        ListBoxHerramientas.List = ArrayDetallesSalidas
                
        ListBoxHerramientas.Selected(Temporal) = True

        CalcularTotales
        
    End If
End Sub

Private Sub TextBoxCantidad_Change()
    MyBook.Activate
    TextBoxCantidad.Text = VBA.Replace(TextBoxCantidad.Text, VBA.Chr(9), "")
End Sub

Private Sub TextBoxCantidad_Enter()
    MyBook.Activate
    ControlActivo = TextBoxCantidad.Name
End Sub

Private Sub TextBoxCantidad_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    
    MyBook.Activate
    Dim TextBoxNumerico As Object
    Dim SeparadorDecimal As String
    SeparadorDecimal = Application.International(xlDecimalSeparator)
    Set TextBoxNumerico = TextBoxCantidad   'Cambiar Nombre de Control
    Select Case KeyAscii
    Case Asc("0") To Asc("9")
'    Case Asc("-")
'        If InStr(1, TextBoxCantidad.Text, "-") > 0 Or TextBoxCantidad.SelStart > 0 Then
'            KeyAscii = 0
'        End If
    Case Asc(SeparadorDecimal)
        If TextBoxNumerico.SelLength <> Len(SeparadorDecimal) Then
            If InStr(1, TextBoxNumerico.Text, ".") > 0 Then
                KeyAscii = 0
            End If
        End If
    Case Else
        KeyAscii = 0
    End Select
End Sub

Private Sub TextBoxCantidad_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MyBook.Activate
    With TextBoxCantidad
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub TextBoxComentario_AfterUpdate()
    MyBook.Activate
    If ListBoxHerramientas.ListIndex < 0 Then
        Exit Sub
    End If
    Dim Temporal As Long
    RenglonVenta = ListBoxHerramientas.ListIndex + 2
    If RenglonVenta > 0 Then
    
        Temporal = ListBoxHerramientas.ListIndex
        
        Worksheets("DetallesCompras").Range("AR" & RenglonVenta) = TextBoxComentario.Value
        
        ListBoxHerramientas.Selected(Temporal) = True
        
    End If
End Sub

Private Sub TextBoxComentario_Enter()
    MyBook.Activate
    ControlActivo = TextBoxComentario.Name
End Sub

Private Sub TextBoxComentario_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MyBook.Activate
    With TextBoxComentario
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub TextBoxLookTecnico_Change()
    MyBook.Activate
    Dim Palabra As Variant
    Dim A|fffd|adirALista As Boolean
    Dim SepararPalabras As String
    
    TextBoxLookTecnico.BackColor = &H80000005
    If Trim(TextBoxLookTecnico) = "" Then
        LimpiarDatosProveedor
        RenglonTecnicoHistory = 0
        Exit Sub
    End If
    
    RenglonTecnico = 0
    
    If Len(Trim(TextBoxLookTecnico.Value)) > 0 Then
        SepararPalabras = QuitarSimbolos(TextBoxLookTecnico)
        Palabra = TextoAPalabras(SepararPalabras)
        
        For Contador = 1 To UBound(ArrayClientes)
            
            TemporalGlobal = ArrayClientes(Contador, 2)
            A|fffd|adirALista = True
            For ContarTrues = 1 To UBound(Palabra)
                If Not InStr(1, TemporalGlobal, Palabra(ContarTrues), vbTextCompare) > 0 Then
                    A|fffd|adirALista = False
                    Exit For
                End If
            Next
            If A|fffd|adirALista = True Then
                RenglonTecnico = Val(ArrayClientes(Contador, 1))
                Exit For
            End If
        Next
    End If
    ActualizarDatosCliente
             
End Sub

Private Sub ActualizarDatosCliente()
    MyBook.Activate
    If RenglonTecnico <> RenglonTecnicoHistory Then
        RenglonTecnicoHistory = RenglonTecnico
        If RenglonTecnico > 0 Then
        
            TextBoxIdCliente = Worksheets("Clientes").Range("A" & RenglonTecnico)
            TextBoxCliente = Worksheets("Clientes").Range("B" & RenglonTecnico)
            TextBoxDireccion = Worksheets("Clientes").Range("C" & RenglonTecnico)
            TextBoxCuenta = Worksheets("Clientes").Range("F" & RenglonTecnico)
            
        End If
    End If
    
    If RenglonTecnico = 0 Then
        
        LimpiarDatosProveedor
        TextBoxLookTecnico.BackColor = &HC0C0FF
                    
    End If
    
End Sub
Private Sub LimpiarDatosProveedor()

    MyBook.Activate
    TextBoxIdCliente = ""
    TextBoxCliente = Empty
    TextBoxDireccion = Empty
    TextBoxCorreo = Empty
    TextBoxCuenta = Empty

End Sub


Private Sub TextBoxLookTecnico_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MyBook.Activate
    With TextBoxLookTecnico
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub TextBoxSerie_AfterUpdate()
    MyBook.Activate
    If ListBoxHerramientas.ListIndex < 0 Then
        Exit Sub
    End If
    Dim Temporal As Long
    RenglonVenta = ListBoxHerramientas.ListIndex + 2
    If RenglonVenta > 0 Then
        Temporal = ListBoxHerramientas.ListIndex
        
        'Worksheets("DetallesCompras").Range("E" & RenglonVenta) = TextBoxSerie.Text
        Worksheets("DetallesCompras").Range("AF" & RenglonVenta) = TextBoxSerie.Text
                
        ListBoxHerramientas.Selected(Temporal) = True
    End If
End Sub

Private Sub TextBoxSerie_Enter()
    MyBook.Activate
    ControlActivo = TextBoxSerie.Name
End Sub

Private Sub TextBoxSerie_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MyBook.Activate
    With TextBoxSerie
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub TextBoxUnitario_AfterUpdate()
    MyBook.Activate
    Dim Temporal As Long
    
    If Trim(TextBoxUnitario) = "" Then
        TextBoxUnitarioDouble = 0
        MsgBoxCentered "Introduzca un Valor", vbInformation, Me
        TextBoxUnitario.SetFocus
        Exit Sub
    End If
    
    If TextBoxUnitario <= 0 Then
        TextBoxUnitarioDouble = 0
        MsgBoxCentered "Introduzca un Valor", vbInformation, Me
        TextBoxUnitario = Empty
        TextBoxUnitario.SetFocus
        Exit Sub
    End If
    
    TextboxUnitarioCompraUpdate = True
    TextBoxUnitarioDouble = TextBoxUnitario
    TextBoxUnitario = FormatoMoneda(TextBoxUnitario, "$", 20)
    

    If ListBoxHerramientas.ListIndex < 0 Then
        Exit Sub
    End If
    
    RenglonVenta = ListBoxHerramientas.ListIndex + 2
    
    If RenglonVenta >= 0 Then
        Temporal = ListBoxHerramientas.ListIndex
        
        Worksheets("DetallesCompras").Range("AI" & RenglonVenta) = TextBoxUnitarioDouble '"=RC[3]-(RC[3]*RC[4])"
        Worksheets("DetallesCompras").Range("D" & RenglonVenta).FormulaR1C1 = "=formatomoneda(RC[31],Preferencias!R4C2,20)"
                
        'Actualizar Lista
        UltimoRenglon = GetLastRow(Worksheets("DetallesCompras"))
        Set TheRange = Worksheets("DetallesCompras").Range("A2:G" & UltimoRenglon)
        ArrayDetallesSalidas = TheRange
        ListBoxHerramientas.List = ArrayDetallesSalidas
        
        ListBoxHerramientas.Selected(Temporal) = True

        CalcularTotales
        
    End If

End Sub

Private Sub TextBoxUnitario_Change()

    MyBook.Activate
    TextBoxUnitario.Text = VBA.Replace(TextBoxUnitario.Text, VBA.Chr(9), "")

End Sub

Private Sub TextBoxUnitario_Enter()
    MyBook.Activate
    If TextBoxUnitarioDouble = 0 Then
        TextBoxUnitario = Empty
    Else
        TextBoxUnitario.Value = Format(TextBoxUnitarioDouble, "#0.00")
    End If
End Sub

Private Sub TextBoxUnitario_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    
    MyBook.Activate
    Dim TextBoxNumerico As Object
    Dim SeparadorDecimal As String
    SeparadorDecimal = Application.International(xlDecimalSeparator)
    Set TextBoxNumerico = TextBoxUnitario   'Cambiar Nombre de Control
    Select Case KeyAscii
    Case Asc("0") To Asc("9")
'    Case Asc("-")
'        If InStr(1, TextBoxCantidad.Text, "-") > 0 Or TextBoxCantidad.SelStart > 0 Then
'            KeyAscii = 0
'        End If
    Case Asc(SeparadorDecimal)
        If TextBoxNumerico.SelLength <> Len(TextBoxNumerico.Text) Then
            If InStr(1, TextBoxNumerico.Text, SeparadorDecimal) > 0 Then
                KeyAscii = 0
            End If
        End If
    Case Else
        KeyAscii = 0
    End Select
    
End Sub

Private Sub TextBoxUnitario_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

    MyBook.Activate
    With TextBoxUnitario
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
    
End Sub

Private Sub TextBoxUnitarioVenta_AfterUpdate()
    
    MyBook.Activate
    Dim Temporal As Long
    
    If Trim(TextBoxUnitarioVenta) = "" Then
        TextBoxUnitarioVentaDouble = 0
        MsgBoxCentered "Introduzca un Valor", vbInformation, Me
        TextBoxUnitarioVenta.SetFocus
        Exit Sub
    End If
    
    If TextBoxUnitarioVenta.Value <= 0 Then
        TextBoxUnitarioVentaDouble = 0
        MsgBoxCentered "Introduzca un Valor", vbInformation, Me
        TextBoxUnitarioVenta = Empty
        TextBoxUnitarioVenta.SetFocus
        Exit Sub
    End If
    
    TextboxUnitarioVentaUpdate = True
    TextBoxUnitarioVentaDouble = TextBoxUnitarioVenta
    TextBoxUnitarioVenta = FormatoMoneda(TextBoxUnitarioVenta, "$", 20)
    
    If ListBoxHerramientas.ListIndex < 0 Then
        Exit Sub
    End If
    
    RenglonVenta = ListBoxHerramientas.ListIndex + 2
    
    If RenglonVenta >= 0 Then
        Temporal = ListBoxHerramientas.ListIndex
        
        Worksheets("DetallesCompras").Range("AL" & RenglonVenta) = TextBoxUnitarioVentaDouble
        'Actualizar Lista
        UltimoRenglon = GetLastRow(Worksheets("DetallesCompras"))
        Set TheRange = Worksheets("DetallesCompras").Range("A2:G" & UltimoRenglon)
        ArrayDetallesSalidas = TheRange
        ListBoxHerramientas.List = ArrayDetallesSalidas
        
        ListBoxHerramientas.Selected(Temporal) = True

        CalcularTotales
        
    End If

End Sub

Private Sub TextBoxUnitarioVenta_Change()
    MyBook.Activate
    TextBoxUnitarioVenta.Text = VBA.Replace(TextBoxUnitarioVenta.Text, VBA.Chr(9), "")
End Sub

Private Sub TextBoxUnitarioVenta_Enter()
    MyBook.Activate
    If TextBoxUnitarioVentaDouble = 0 Then
        TextBoxUnitarioVenta = Empty
    Else
        TextBoxUnitarioVenta = Format(TextBoxUnitarioVentaDouble, "#0.00")
    End If
End Sub

Private Sub TextBoxUnitarioVenta_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
     
    MyBook.Activate
    Dim TextBoxNumerico As Object
    Dim SeparadorDecimal As String
    SeparadorDecimal = Application.International(xlDecimalSeparator)
    Set TextBoxNumerico = TextBoxUnitarioVenta   'Cambiar Nombre de Control
    Select Case KeyAscii
    Case Asc("0") To Asc("9")
'    Case Asc("-")
'        If InStr(1, TextBoxCantidad.Text, "-") > 0 Or TextBoxCantidad.SelStart > 0 Then
'            KeyAscii = 0
'        End If
    Case Asc(SeparadorDecimal)
        If TextBoxNumerico.SelLength <> Len(TextBoxNumerico.Text) Then
            If InStr(1, TextBoxNumerico.Text, SeparadorDecimal) > 0 Then
                KeyAscii = 0
            End If
        End If
    Case Else
        KeyAscii = 0
    End Select
End Sub

Private Sub UserForm_Initialize()
    
    Set MyBook = ThisWorkbook
    MyBook.Activate
    
    LayOutEvent = True
    Inicio = True
    
    If Worksheets("Preferencias").Range("B18") <> "" Then
        
        Me.Top = Worksheets("Preferencias").Cells(18, 2) ' Centrar Vertical
        Me.Left = Worksheets("Preferencias").Cells(18, 3) '(WidthLapTop - Me.Width) / 2 ' Centrar Horizontal
        Me.Height = Worksheets("Preferencias").Cells(18, 4)
        Me.Width = Worksheets("Preferencias").Cells(18, 5)
        Me.Zoom = Worksheets("Preferencias").Cells(18, 6)
        
    Else
        
        Me.StartUpPosition = 2
        
    End If
    
End Sub

Private Sub UserForm_Activate()

    MyBook.Activate
    
    If ThisWorkbook.ReadOnly = True Then
        Me.Caption = "Read-Only Error!!!"
    End If
    
    MyBook.Activate
    If Inicio Then
                
        ActualizarArrayArticulos
        ActualizarArrayClientes
        
        NuevoRegistro
        
        Inicio = False
        
    End If
    
End Sub

Public Sub NuevoRegistro()

        MyBook.Activate
        Set ControlFecha = New ClassControlDate
        Set ControlFecha.ComboBoxDia = ComboBoxDia
        Set ControlFecha.ComboBoxMes = ComboBoxMes
        Set ControlFecha.ComboBoxA|fffd|o = ComboBoxA|fffd|o
        Set ControlFecha.ActiveForm = Me
        ControlFecha.IniciarControlDate
    
        Set RangoId = Worksheets("Compras").Range("A:A")
        IdTransaccion = Application.WorksheetFunction.Max(RangoId)
        Set RangoId = Worksheets("DevCompras").Range("A:A")
        IdTransaccion2 = Application.WorksheetFunction.Max(RangoId)
        If IdTransaccion2 > IdTransaccion Then
            IdTransaccion = IdTransaccion2
        End If
        IdTransaccion = IdTransaccion + 1
        If Val(Worksheets("Preferencias").Range("B12")) > IdTransaccion Then
            IdTransaccion = Val(Worksheets("Preferencias").Range("B12"))
        End If
        TextBoxFolio = IdTransaccion
        
        ListBoxHerramientas.Clear
        
        Worksheets("DetallesCompras").Range("A:AZ").Clear
        
        Worksheets("DetallesCompras").Range("A1:AZ1").Interior.Color = RGB(196, 189, 151)
        
        Worksheets("DetallesCompras").Range("A:A").ColumnWidth = 15
        Worksheets("DetallesCompras").Range("B:B").ColumnWidth = 30
        Worksheets("DetallesCompras").Range("C:C").ColumnWidth = 10
        Worksheets("DetallesCompras").Range("E:G").ColumnWidth = 25
        Worksheets("DetallesCompras").Range("X:AB").ColumnWidth = 14
        Worksheets("DetallesCompras").Range("AC:AC").ColumnWidth = 30
        Worksheets("DetallesCompras").Range("AD:AD").ColumnWidth = 14
        Worksheets("DetallesCompras").Range("AE:AE").ColumnWidth = 30
        Worksheets("DetallesCompras").Range("AF:AF").ColumnWidth = 14
        Worksheets("DetallesCompras").Range("AG:AG").ColumnWidth = 23
        Worksheets("DetallesCompras").Range("AH:AJ").ColumnWidth = 14
        
        Worksheets("DetallesCompras").Range("A1") = "Renglon Actual"
        Worksheets("DetallesCompras").Range("B1") = "Descripcion"
        Worksheets("DetallesCompras").Range("C1") = "Cantidad"
        Worksheets("DetallesCompras").Range("D1") = "Unitario"
        Worksheets("DetallesCompras").Range("E1") = "Extendido"
        Worksheets("DetallesCompras").Range("F1") = "Comentario"
        Worksheets("DetallesCompras").Range("Z1") = "Renglon Codigo"
        Worksheets("DetallesCompras").Range("X1") = "Inventario"
        
        Worksheets("Compras").Range("A1:Z1").Copy
        Worksheets("DetallesCompras").Range("AA1").PasteSpecial (xlPasteValues)
        Worksheets("DetallesCompras").Range("A1:AZ1").Columns.AutoFit
                        
        LimpiarVentaDetalles
        
        TextBoxBuscarHerramienta.SetFocus

End Sub
Sub LimpiarVentaDetalles()
    MyBook.Activate
    ColocarImagen 0
        
    TextBoxListIndex = Empty
    TextBoxCodigo = ""
    TextBoxDescripcion = Empty
    TextBoxUDM = Empty
    TextBoxDescuentoItem = Empty
    TextBoxUnitario = Empty
    TextBoxCantidad = Empty
    TextBoxInventario = Empty
    TextBoxUnitarioVenta = Empty
    TextBoxSerie = Empty
    TextBoxComentario = Empty
    
    TextBoxSubTotal = Empty
    TextBoxImpuesto = Empty
    TextBoxDescuento = Empty
    TextBoxTotalItems = Empty
    TextboxTotal = Empty
    
    TextBoxKit = Empty
    TextboxCondiciones = Empty
End Sub

Private Sub ActualizarKits()
    MyBook.Activate
    
    Dim Kits As Worksheet
    Set Kits = NuevaHoja("Temporal")
 
    Kits.Activate
    Kits.Range("A:Z").Clear
    Kits.Range("A:A").ColumnWidth = 30
    Kits.Range("B:B").ColumnWidth = 60
    UltimoRenglon = Worksheets("Kits").Range("A" & Worksheets("Kits").Rows.Count).End(xlUp).Row
    Worksheets("Kits").Range("A1:A" & UltimoRenglon).Copy
    Kits.Range("A1").PasteSpecial (xlPasteValues)
    
    UltimoRenglon = Kits.Range("A" & Kits.Rows.Count).End(xlUp).Row
    
    Set RangeBase = Kits.Range("A1:A" & UltimoRenglon)
    RangeBase.RemoveDuplicates Columns:=Array(1), Header:=xlNo
    
    Kits.Range("A:A").Sort key1:=Range("A:A"), order1:=xlAscending, Header:=xlYes 'key2:=Range("A:A"), order2:=xlDescending,
    UltimoRenglon = Kits.Range("A" & Kits.Rows.Count).End(xlUp).Row
    
    Set TheRange = Kits.Range("A2:A" & UltimoRenglon)
    ArrayKits = TheRange
    TextBoxKit.List = ArrayKits
End Sub

Private Sub ActualizarArrayArticulos()
    MyBook.Activate
    Dim Articulos As Worksheet
    Set Articulos = NuevaHoja("Temporal")
    
    Articulos.Activate
    Articulos.Range("A:Z").Clear
    Articulos.Range("A:A").ColumnWidth = 30
    Articulos.Range("B:B").ColumnWidth = 60
    
    UltimoRenglon = GetLastRow(Worksheets("Articulos"))
    Articulos.Range("C1:E" & UltimoRenglon) = Worksheets("Articulos").Range("A1:C" & UltimoRenglon).Value
    
    Articulos.Range("A2:A" & UltimoRenglon).FormulaR1C1 = "=ROW(RC[2])"
    Articulos.Range("A2:A" & UltimoRenglon).Copy
    Articulos.Range("A2:A" & UltimoRenglon).PasteSpecial (xlPasteValues)
    
    Articulos.Range("B2:B" & UltimoRenglon).FormulaR1C1 = "=QuitarSimbolos(RC[2]&" & Chr(34) & " " & Chr(34) & "&RC[3]&" & Chr(34) & " " & Chr(34) & "&Articulos!RC[8])"
    Articulos.Range("B2:B" & UltimoRenglon).Copy
    Articulos.Range("B2:B" & UltimoRenglon).PasteSpecial (xlPasteValues)
    
    Articulos.Range("A:E").Sort key1:=Articulos.Range("B:B"), order1:=xlAscending, Header:=xlYes 'key2:=Range("A:A"), order2:=xlDescending,
    
    Dim TheRange As Range
    UltimoRenglon = GetLastRow(Worksheets("Articulos"))
    
    If UltimoRenglon > 1 Then
        Set TheRange = Articulos.Range("A2:B" & UltimoRenglon)
        ArrayArticulos = TheRange
    Else
        ReDim ArrayArticulos(0)
    End If
    
End Sub
Private Sub ActualizarArrayClientes()
    MyBook.Activate
    IdNombre = Empty
    Nombre = Empty
    TextBoxBusqueda = Empty
    
    Dim Clientes As Worksheet
    Set Clientes = NuevaHoja("Temporal")
        
    Clientes.Activate
    Clientes.Range("A:Z").Clear
    Clientes.Range("A:A").ColumnWidth = 30
    Clientes.Range("B:B").ColumnWidth = 60
    
    UltimoRenglon = GetLastRow(Worksheets("Clientes"))
    Clientes.Range("C1:D" & UltimoRenglon) = Worksheets("Clientes").Range("A1:B" & UltimoRenglon).Value
    
    Clientes.Range("A2:A" & UltimoRenglon).FormulaR1C1 = "=ROW(RC[2])"
    Clientes.Range("A2:A" & UltimoRenglon).Copy
    Clientes.Range("A2:A" & UltimoRenglon).PasteSpecial (xlPasteValues)
    
    Clientes.Range("B2:B" & UltimoRenglon).FormulaR1C1 = "=QuitarSimbolos(RC[2])"
    Clientes.Range("B2:B" & UltimoRenglon).Copy
    Clientes.Range("B2:B" & UltimoRenglon).PasteSpecial (xlPasteValues)
    
    Clientes.Range("A:D").Sort key1:=Range("D:D"), order1:=xlAscending, Header:=xlYes 'key2:=Range("A:A"), order2:=xlDescending,
    UltimoRenglon = GetLastRow(Worksheets("Clientes"))
    Set TheRange = Clientes.Range("A2:B" & UltimoRenglon)
    ArrayClientes = TheRange
    
End Sub

Private Function SheetExists(sheetToFind As String) As Boolean
    MyBook.Activate
    SheetExists = False
    For Each Sheet In Worksheets
        If sheetToFind = Sheet.Name Then
            SheetExists = True
            Exit Function
        End If
    Next Sheet
End Function
Private Sub ColocarImagen(IdCodigo As Long)
    MyBook.Activate
        Dim Variable As String
        On Error GoTo NOFILE
        Variable = Trim(ThisWorkbook.Path & "\Tools\Images\" & IdCodigo & ".jpg")
        If Dir(Variable) <> "" Then
            Set ImagenSalidas.Picture = LoadPicture(Variable)
        Else
            Set ImagenSalidas.Picture = Nothing
        End If
        FrameImagen.Repaint
NOFILE:
End Sub
    
Private Sub UserForm_Layout()
    MyBook.Activate
    If LayOutEvent = True Then
        LayOutEvent = False
        
    End If
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    MyBook.Activate
    If ListBoxHerramientas.ListCount > 0 Then
    
        Confirmacion = MsgBoxCentered("Desea descartar esta compra?", vbYesNo, Me)
        If Confirmacion = vbNo Then
                
            Cancel = True
            Exit Sub
            
        End If
        
    End If
    
End Sub
Attribute VB_Name = "ControlVentas"
Attribute VB_Base = "0{6C434197-38B3-40F9-9557-BBF6E1954213}{3B773F37-2DE3-4675-AC72-2AFE104A8F75}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim IniciarBusqueda As Boolean

Dim IndiceVentas As ClassIndice
Dim IndiceCompras As ClassIndice
Dim IndiceDevoluciones As ClassIndice
Dim IndiceDevCompras As ClassIndice

Dim TotalesVentas As ClassTotales
Dim TotalesCompras As ClassTotales
Dim TotalesDevoluciones As ClassTotales
Dim TotalesDevCompras As ClassTotales

Dim MyBook As Workbook
Dim ArrayArticulos As Variant
Dim ArrayBusqueda() As Variant
Dim ArrayFiltroPrincipal As Variant
Public NombreInicio As String
Dim Inicio As Boolean

Dim ContadorArray As Long
Dim ContadorItem As Long
Dim TotalItems As Long
Dim ContadorLista As Long

Dim Palabra As Variant
Dim CicloActivado As Boolean
Dim DoEventsActivate As Boolean

Dim RenglonPegarInicio As Long
Dim RangeDatos As Range

Dim RenglonItem As Long
Dim TotalDetalles As Long
Dim TablaDatos As String
Dim IdVenta As Long
Dim DetallesVentaActivate As Boolean
Dim ArrayDetalles() As Variant
Dim ContadorDetalles As Long
Dim TotalPalabras As Long
Dim ArrayTranspose As Variant
Dim ArraySheet As Variant
Dim EsLock As Boolean
Dim HojaResultado As Worksheet

Public Function RenglonValor(ValorBuscar As Long) As Long
    MyBook.Activate
    Dim Renglon As Variant
    Dim RangoPruebas As Range
    Set RangoPruebas = Worksheets("Clientes").Range("A:A")
    On Error GoTo salir
    RenglonValor = Application.WorksheetFunction.Match(ValorBuscar, RangoPruebas, 0)
    Exit Function
    
salir:
    RenglonValor = 0
End Function

Private Sub CommandButton2_Click()
    MyBook.Activate
    BusquedaxNombre.Show
    TextBoxTecnico = BusquedaxNombre.Nombre
End Sub

Private Sub CommandButton4_Click()
    MyBook.Activate
    Eliminar.Show
    ActualizarBusquedas
    ActualizarTotales
    ActualizarIndice
    TextBoxTecnico_Change
    
End Sub

Private Sub CommandButton7_Click()
    MyBook.Activate
    Ruta = ThisWorkbook.Path
    On Error GoTo salir
     RutaCompleta = Ruta & "\Tools\Tickets\"
     If Dir(RutaCompleta, vbDirectory) <> "" Then
        ActiveWorkbook.FollowHyperlink Address:=RutaCompleta, NewWindow:=True
     Else
        MsgBox "Directorio no existe: " & RutaCompleta
        MsgBox "Tus tickets deben estar en este folder: " & RutaCompleta
     End If
salir:
End Sub

Private Sub CommandButtonCarpetaInventory_Click()
    MyBook.Activate
    Ruta = ThisWorkbook.Path
    On Error GoTo salir
     RutaCompleta = Ruta & "\Tools\Inventory\"
     If Dir(RutaCompleta, vbDirectory) <> "" Then
        ActiveWorkbook.FollowHyperlink Address:=RutaCompleta, NewWindow:=True
     Else
        MsgBox "Directorio no existe: " & RutaCompleta
        MsgBox "Tus imagenes deben estar en este folder: " & RutaCompleta
     End If
salir:
End Sub

Private Sub CommandButtonCarpetaVentas_Click()

    MyBook.Activate
    Ruta = ThisWorkbook.Path
    On Error GoTo salir
     RutaCompleta = Ruta & "\Tools\Ventas\"
     If Dir(RutaCompleta, vbDirectory) <> "" Then
        ActiveWorkbook.FollowHyperlink Address:=RutaCompleta, NewWindow:=True
     Else
        MsgBox "Directorio no existe: " & RutaCompleta
        MsgBox "Tus imagenes deben estar en este folder: " & RutaCompleta
     End If
salir:

End Sub

Private Sub CommandButtonCompras_Click()

    MyBook.Activate
    Dim RowPasteHistoryT As Long
    Dim LastRowPVentaT As Long
    Dim ContadorT As Long
    Dim HistoryBook As Workbook
    Dim PuntoDeVenta As Workbook
    Dim ArchivoT As String
    Dim RangoId As Range
    
    Set PuntoDeVenta = ThisWorkbook
    LastRowPVentaT = GetLastRow(PuntoDeVenta.Worksheets("Compras"))
    If LastRowPVentaT < 2 Then
        MsgBox "Nada que exportar|fffd||fffd||fffd|", vbCritical
        Exit Sub
    End If
    
    Confirmacion = MsgBox("Folio Consecutivo iniciar?", vbYesNo, "Folio")
    If Confirmacion = vbYes Then
        Worksheets("Preferencias").Range("B41") = 1
    Else
        Set RangoId = Worksheets("Compras").Range("A:A")
        Worksheets("Preferencias").Range("B43") = Application.WorksheetFunction.Max(RangoId) + 1
    End If
    
    Set AplicacionExcel = CreateObject("Excel.Application")
    AplicacionExcel.Visible = True
    ArchivoT = ThisWorkbook.Path & "\Tools\History\History.xlsm"
    Set HistoryBook = AplicacionExcel.Application.Workbooks.Open(ArchivoT)
    
    RowPasteHistoryT = HistoryBook.Worksheets("Compras").UsedRange.Rows.Count
    ContadorT = RowPasteHistoryT + 1
    Set RangoContar = HistoryBook.Worksheets("Compras").Range("A" & ContadorT & ":AZ" & ContadorT)
    If Application.CountA(RangoContar) > 0 Then
        MsgBox "Error GetLastRow Sobreescritura Workbook History|fffd||fffd||fffd|", vbCritical
    End If
    For ContadorT = RowPasteHistoryT To 1 Step -1
        Set RangoContar = HistoryBook.Worksheets("Compras").Range("A" & ContadorT & ":AZ" & ContadorT)
        If Application.CountA(RangoContar) > 0 Then
            Exit For
        Else
            RenglonTemporalT = Contador - 1
        End If
    Next
    RowPasteHistoryT = RowPasteHistoryT + 1
    HistoryBook.Worksheets("Compras").Activate

    HistoryBook.Worksheets("Compras").Range("A" & RowPasteHistoryT).Activate
    
    HistoryBook.Worksheets("Compras").Range("A" & RowPasteHistoryT & ":Z" & RowPasteHistoryT + LastRowPVentaT - 2) = PuntoDeVenta.Worksheets("Compras").Range("A2:Z" & LastRowPVentaT).Value
    HistoryBook.Save
    AplicacionExcel.Quit
    
    Application.DisplayAlerts = False
    PuntoDeVenta.Worksheets("Compras").Rows(2 & ":" & LastRowPVentaT).Delete
    Application.DisplayAlerts = True
    PuntoDeVenta.Worksheets("Compras").Activate
    PuntoDeVenta.Worksheets("Compras").Range("A2").Select
    ThisWorkbook.Save
    
    ActualizarBusquedas
    ActualizarTotales
    ActualizarIndice
    TextBoxTecnico_Change
    
    If AVenta.Visible = True Then
        AVenta.NuevoRegistro
    End If
    MsgBox "Todos las Ventas fueron exportados|fffd||fffd||fffd|", vbInformation
    
End Sub

Private Sub CommandButtonConverttoPDF_Click()

    MyBook.Activate
    Dim Idreport As Long
    
    If ListBoxAsignaciones.ListIndex >= 0 Then
        Idreport = ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 1)
        
        If ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 3) = "Ventas" Then
            ReporteVentasPDF Idreport
        End If
        
        If ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 3) = "Compras" Then
            ReporteComprasPDF Idreport
        End If
        
    Else
        MsgBox "Seleccione una Venta|fffd||fffd||fffd|", vbInformation
    End If

End Sub

Private Sub CommandButtonDevolucion_Click()
    MyBook.Activate
    If ListBoxAsignaciones.ListIndex >= 0 Then
        If ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 3) = "Ventas" Then
            Devoluciones.LoadDataForm Worksheets("Ventas"), Worksheets("Devoluciones"), ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 1), "Sumar"
            Devoluciones.Show
            Unload Devoluciones
        End If
        If ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 3) = "Compras" Then
            Devoluciones.LoadDataForm Worksheets("Compras"), Worksheets("DevCompras"), ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 1), "Restar"
            Devoluciones.Show
            Unload Devoluciones
        End If
        If ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 3) = "Devoluciones" Then
            Devoluciones.LoadDataForm Worksheets("Devoluciones"), Worksheets("Ventas"), ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 1), "Restar"
            Devoluciones.Show
            Unload Devoluciones
        End If
        If ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 3) = "DevCompras" Then
            Devoluciones.LoadDataForm Worksheets("DevCompras"), Worksheets("Compras"), ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 1), "Sumar"
            Devoluciones.Show
            Unload Devoluciones
        End If
        
        ActualizarBusquedas
        ActualizarTotales
        ActualizarIndice
        TextBoxTecnico_Change
    Else
        MsgBox "Seleccione una Venta|fffd||fffd||fffd|", vbInformation
    End If
End Sub

Private Sub CommandButtonDevoluciones_Click()
    MyBook.Activate
    Dim RowPasteHistoryT As Long
    Dim LastRowPVentaT As Long
    Dim ContadorT As Long
    Dim HistoryBook As Workbook
    Dim PuntoDeVenta As Workbook
    Dim ArchivoT As String
    Dim RangoId As Range
    
    Set PuntoDeVenta = ThisWorkbook
    LastRowPVentaT = GetLastRow(PuntoDeVenta.Worksheets("Devoluciones"))
    If LastRowPVentaT < 2 Then
        MsgBox "Nada que exportar|fffd||fffd||fffd|", vbCritical
        Exit Sub
    End If
    
    Confirmacion = MsgBox("Folio Consecutivo iniciar?", vbYesNo, "Folio")
    If Confirmacion = vbYes Then
        Worksheets("Preferencias").Range("B41") = 1
    Else
        Set RangoId = Worksheets("Ventas").Range("A:A")
        Worksheets("Preferencias").Range("B42") = Application.WorksheetFunction.Max(RangoId) + 1
    End If
    
    Set AplicacionExcel = CreateObject("Excel.Application")
    AplicacionExcel.Visible = True
    ArchivoT = ThisWorkbook.Path & "\Tools\History\History.xlsm"
    Set HistoryBook = AplicacionExcel.Application.Workbooks.Open(ArchivoT)
    
    RowPasteHistoryT = HistoryBook.Worksheets("Devoluciones").UsedRange.Rows.Count
    ContadorT = RowPasteHistoryT + 1
    Set RangoContar = HistoryBook.Worksheets("Devoluciones").Range("A" & ContadorT & ":AZ" & ContadorT)
    If Application.CountA(RangoContar) > 0 Then
        MsgBox "Error GetLastRow Sobreescritura Workbook History|fffd||fffd||fffd|", vbCritical
    End If
    For ContadorT = RowPasteHistoryT To 1 Step -1
        Set RangoContar = HistoryBook.Worksheets("Devoluciones").Range("A" & ContadorT & ":AZ" & ContadorT)
        If Application.CountA(RangoContar) > 0 Then
            Exit For
        Else
            RenglonTemporalT = Contador - 1
        End If
    Next
    RowPasteHistoryT = RowPasteHistoryT + 1
    HistoryBook.Worksheets("Devoluciones").Activate

    HistoryBook.Worksheets("Devoluciones").Range("A" & RowPasteHistoryT).Activate
    
    HistoryBook.Worksheets("Devoluciones").Range("A" & RowPasteHistoryT & ":Z" & RowPasteHistoryT + LastRowPVentaT - 2) = PuntoDeVenta.Worksheets("Devoluciones").Range("A2:Z" & LastRowPVentaT).Value
    HistoryBook.Save
    AplicacionExcel.Quit
    
    Application.DisplayAlerts = False
    PuntoDeVenta.Worksheets("Devoluciones").Rows(2 & ":" & LastRowPVentaT).Delete

    Application.DisplayAlerts = True
    PuntoDeVenta.Worksheets("Devoluciones").Activate
    PuntoDeVenta.Worksheets("Devoluciones").Range("A2").Select
    ThisWorkbook.Save
    
    ActualizarBusquedas
    ActualizarTotales
    ActualizarIndice
    TextBoxTecnico_Change
    
    If AVenta.Visible = True Then
        AVenta.NuevoRegistro
    End If
    MsgBox "Todos las Ventas fueron exportados|fffd||fffd||fffd|", vbInformation

End Sub

Private Sub CommandButtonExcelTicket_Click()
    MyBook.Activate
    Dim Idreport As Long
    
    If ListBoxAsignaciones.ListIndex >= 0 Then
    
        Idreport = ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 1)
        If ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 3) = "Ventas" Then
            ReporteTicketsExcel Idreport
            
        End If
                
    Else
        MsgBox "Seleccione una Venta|fffd||fffd||fffd|", vbInformation
    End If
End Sub

Private Sub CommandButtonFolderReports_Click()
    MyBook.Activate
    Ruta = ThisWorkbook.Path
    On Error GoTo salir
     RutaCompleta = Ruta & "\Tools\Reportes\"
     If Dir(RutaCompleta, vbDirectory) <> "" Then
        ActiveWorkbook.FollowHyperlink Address:=RutaCompleta, NewWindow:=True
     Else
        MsgBox "Directorio no existe: " & RutaCompleta
        MsgBox "Tus reportes deben estar en este folder: " & RutaCompleta
     End If
salir:

End Sub

Private Sub CommandButtonReporteExcel_Click()
    MyBook.Activate
    Dim Idreport As Long
    
    If ListBoxAsignaciones.ListIndex >= 0 Then
        Idreport = ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 1)
        
        If ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 3) = "Ventas" Then
            ReporteVentasExcel Idreport
        End If
        
        If ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 3) = "Compras" Then
            ReporteComprasExcel Idreport
        End If
        
    Else
        MsgBox "Seleccione una Venta|fffd||fffd||fffd|", vbInformation
    End If
End Sub

Private Sub CommandButtonReporteInventario_Click()
    MyBook.Activate
    Inventory_Show
End Sub

Private Sub CommandButtonReporteVentas_Click()
    MyBook.Activate
    Reporte.Show
End Sub

Private Sub CommandButtonVentas_Click()
    MyBook.Activate
    Dim RowPasteHistoryT As Long
    Dim LastRowPVentaT As Long
    Dim ContadorT As Long
    Dim HistoryBook As Workbook
    Dim PuntoDeVenta As Workbook
    Dim ArchivoT As String
    Dim RangoId As Range
    
    Set PuntoDeVenta = ThisWorkbook
    LastRowPVentaT = GetLastRow(PuntoDeVenta.Worksheets("Ventas"))
    If LastRowPVentaT < 2 Then
        MsgBox "Nada que exportar|fffd||fffd||fffd|", vbCritical
        Exit Sub
    End If
    
    Confirmacion = MsgBox("Folio Consecutivo iniciar?", vbYesNo, "Folio")
    If Confirmacion = vbYes Then
        Worksheets("Preferencias").Range("B41") = 1
    Else
        Set RangoId = Worksheets("Ventas").Range("A:A")
        Worksheets("Preferencias").Range("B41") = Application.WorksheetFunction.Max(RangoId) + 1
    End If
    
    Set AplicacionExcel = CreateObject("Excel.Application")
    AplicacionExcel.Visible = True
    DirectoryValidate "History"
    ArchivoT = ThisWorkbook.Path & "\Tools\History\History.xlsm"
    Set HistoryBook = AplicacionExcel.Application.Workbooks.Open(ArchivoT)
    
    RowPasteHistoryT = HistoryBook.Worksheets("Ventas").UsedRange.Rows.Count
    ContadorT = RowPasteHistoryT + 1
    Set RangoContar = HistoryBook.Worksheets("Ventas").Range("A" & ContadorT & ":AZ" & ContadorT)
    If Application.CountA(RangoContar) > 0 Then
        MsgBox "Error GetLastRow Sobreescritura Workbook History|fffd||fffd||fffd|", vbCritical
    End If
    For ContadorT = RowPasteHistoryT To 1 Step -1
        Set RangoContar = HistoryBook.Worksheets("Ventas").Range("A" & ContadorT & ":AZ" & ContadorT)
        If Application.CountA(RangoContar) > 0 Then
            Exit For
        Else
            RenglonTemporalT = Contador - 1
        End If
    Next
    RowPasteHistoryT = RowPasteHistoryT + 1
    HistoryBook.Worksheets("Ventas").Activate

    HistoryBook.Worksheets("Ventas").Range("A" & RowPasteHistoryT).Activate
    
    HistoryBook.Worksheets("Ventas").Range("A" & RowPasteHistoryT & ":Z" & RowPasteHistoryT + LastRowPVentaT - 2) = PuntoDeVenta.Worksheets("Ventas").Range("A2:Z" & LastRowPVentaT).Value
    HistoryBook.Save
    AplicacionExcel.Quit
    
    Application.DisplayAlerts = False
    PuntoDeVenta.Worksheets("Ventas").Rows(2 & ":" & LastRowPVentaT).Delete
    
    Application.DisplayAlerts = True
    PuntoDeVenta.Worksheets("Ventas").Activate
    PuntoDeVenta.Worksheets("Ventas").Range("A2").Select
    ThisWorkbook.Save
    
    ActualizarBusquedas
    ActualizarTotales
    ActualizarIndice
    TextBoxTecnico_Change
    
    If AVenta.Visible = True Then
        AVenta.NuevoRegistro
    End If
    MsgBox "Todos las Ventas fueron exportados|fffd||fffd||fffd|", vbInformation
    
End Sub

Private Sub CommandButtonTicketPDF_Click()
    MyBook.Activate
    Dim Idreport As Long
    MyBook.Activate
    If ListBoxAsignaciones.ListIndex >= 0 Then
        Idreport = ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 1)
        ReporteTicketsPDF Idreport
    Else
        MsgBox "Seleccione un item.", vbExclamation
    End If
    
End Sub

Private Sub CommandButtonVentasGeneral_Click()
    Me.Hide
    ReporteVentasGeneral
    Me.Show
End Sub

Private Sub CommandButtonWindowConfig_Click()
    MyBook.Activate
    ZConfigWindow.RenglonVentana = 14
    Set ZConfigWindow.VentanaActiva = Me
    ZConfigWindow.Show
End Sub

Private Sub CommandButtonXML_Click()
    MyBook.Activate
    Dim Idreport As Long
    Dim Explorador As String
    
    If ListBoxAsignaciones.ListIndex >= 0 Then
        Idreport = ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 1)
        
        If ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 3) = "Ventas" Then
        
            GenerarDocumentoXML Idreport
        End If
        
        If ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 3) = "Compras" Then
        
        End If
        
    Else
        MsgBox "Seleccione una Venta|fffd||fffd||fffd|", vbInformation
    End If
End Sub

Private Sub ListBoxAsignaciones_Click()
    MyBook.Activate
    Dim ArrayRenglon As Variant
    Dim SheetTemporal As Worksheet
    
    TextBoxCuenta = ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 2)
    TextBoxFecha = ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 4)
    TextBoxFolio = ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 1)
    
    If ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 3) = "Ventas" Then
        ArrayRenglon = IndiceVentas.FindItems(ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 1))
        Set SheetTemporal = Worksheets("Ventas")
        FrameFactura.Visible = True
        FrameTicket.Visible = True
        CommandButtonXML.Visible = True
    Else
    If ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 3) = "Compras" Then
        ArrayRenglon = IndiceCompras.FindItems(ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 1))
        Set SheetTemporal = Worksheets("Compras")
        FrameFactura.Visible = True
        FrameTicket.Visible = False
    Else
        FrameFactura.Visible = False
        FrameTicket.Visible = False
        CommandButtonXML.Visible = False
    End If
    End If
    
    If ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 3) = "Devoluciones" Then
        ArrayRenglon = IndiceDevoluciones.FindItems(ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 1))
        Set SheetTemporal = Worksheets("Devoluciones")
    End If
    If ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 3) = "DevCompras" Then
        ArrayRenglon = IndiceDevCompras.FindItems(ListBoxAsignaciones.List(ListBoxAsignaciones.ListIndex, 1))
        Set SheetTemporal = Worksheets("DevCompras")
    End If
        
    ListBoxDetalles.Clear
    Me.ImageTool.Picture = Nothing
    Me.FrameRefrescar.Repaint
    
    For Contador = LBound(ArrayRenglon) To UBound(ArrayRenglon)
        If ArrayRenglon(Contador) > 0 Then
            ListBoxDetalles.AddItem
            ListBoxDetalles.List(ListBoxDetalles.ListCount - 1, 0) = SheetTemporal.Range("D" & ArrayRenglon(Contador)).Value
            ListBoxDetalles.List(ListBoxDetalles.ListCount - 1, 1) = SheetTemporal.Range("E" & ArrayRenglon(Contador)).Value
            ListBoxDetalles.List(ListBoxDetalles.ListCount - 1, 2) = SheetTemporal.Range("H" & ArrayRenglon(Contador)).Value
        End If
    Next
    
    If ListBoxDetalles.ListCount > 0 And ListBoxDetalles.ListIndex = -1 Then
        ListBoxDetalles.Selected(0) = True
    End If
    
End Sub

Private Sub ActualizarDetallesVenta()
    MyBook.Activate
    Dim VariantTranspose As Variant
    If DetallesVentaActivate Then
        
    End If
End Sub

Private Sub ListBoxDetalles_Click()
    MyBook.Activate
    MyBook.Activate
    Dim ArchivoImagen As String
    ArchivoImagen = ThisWorkbook.Path & "\Tools\Images\" & ListBoxDetalles.List(ListBoxDetalles.ListIndex, 0) & ".JPG"
    If Dir(ArchivoImagen) <> "" Then
        Me.ImageTool.Picture = LoadPicture(ArchivoImagen)
        Me.FrameRefrescar.Repaint
    Else
        Me.ImageTool.Picture = Nothing
        Me.FrameRefrescar.Repaint
    End If
    
End Sub

Private Sub TextBoxTecnico_Change()
    MyBook.Activate
    IniciarBusqueda = True

End Sub

Private Sub PrepararBusqueda()
    MyBook.Activate
    If IniciarBusqueda = True Then
    
        Set HojaResultado = NuevaHoja("Temporal")
        CicloActivado = False
        
        Dim SepararPalabras As String
        TextBoxTecnico.BackColor = &H80000005
        
        ListBoxAsignaciones.Clear
        ListBoxDetalles.Clear
        ListBoxTemporal.Clear
        
        Me.ImageTool.Picture = Nothing
        Me.FrameRefrescar.Repaint
        
        SepararPalabras = QuitarSimbolos(TextBoxTecnico.Text)
        Palabra = TextoAPalabras(SepararPalabras)
        If Len(Trim(TextBoxTecnico.Value)) > 0 Then
            TotalPalabras = UBound(Palabra)
        Else
            TotalPalabras = 0
        End If
        
        TotalItems = UBound(ArrayArticulos)
        ContadorArray = -1
        ContadorItem = 0
        EsLock = True
    
        ContadorLista = 0
        ScrollBarAvance.Max = TotalItems
        ScrollBarAvance.Value = 0
        If TotalItems > 0 Then
            CicloActivado = True
        Else
            CicloActivado = False
        End If
        
        IniciarBusqueda = False
    End If
End Sub

Private Sub ListBoxTecnicosActualizar()
    MyBook.Activate
    Dim RangoUno As Range
    Dim RangoDos As Range
    
    If CicloActivado Then
    
        ContadorItem = ContadorItem + 1
        ScrollBarAvance.Value = ContadorItem
        RenglonActual = ArrayArticulos(ContadorItem, 1)
        VentaActual = ArrayArticulos(ContadorItem, 2)
        sheetactual = ArrayArticulos(ContadorItem, 3)
        
        TemporalGlobal = "-" & Trim(Worksheets(sheetactual).Range("A" & RenglonActual)) & "- " & QuitarSimbolos(Worksheets(sheetactual).Range("C" & RenglonActual)) & " " & sheetactual & " " & Format(Worksheets(sheetactual).Range("K" & RenglonActual), "dd-mmm-yyyy")
        A|fffd|adirALista = True
        
        For ContarTrues = 1 To TotalPalabras
            If Not InStr(1, TemporalGlobal, Palabra(ContarTrues), vbTextCompare) > 0 Then
                A|fffd|adirALista = False
                Exit For
            End If
        Next
        
        If A|fffd|adirALista And CicloActivado Then
        
            A|fffd|adirALista = False
            ContadorArray = ContadorArray + 1
            ContadorLista = ContadorLista + 1

            ListBoxTemporal.AddItem
            ListBoxTemporal.List(ContadorArray, 0) = "Folio"
            ListBoxTemporal.List(ContadorArray, 1) = Worksheets(sheetactual).Range("A" & RenglonActual).Value
            ListBoxTemporal.List(ContadorArray, 2) = Worksheets(sheetactual).Range("C" & RenglonActual).Value
            ListBoxTemporal.List(ContadorArray, 3) = sheetactual
            ListBoxTemporal.List(ContadorArray, 4) = Chr(144) & Format(Worksheets(sheetactual).Range("K" & RenglonActual).Value, "dd-mmm-yyyy")
            If sheetactual = "Ventas" Then
                ListBoxTemporal.List(ContadorArray, 5) = FormatoMoneda(TotalesVentas.GetTotal(Worksheets(sheetactual).Range("A" & RenglonActual).Value), "$", 20)
            End If
            If sheetactual = "Compras" Then
                ListBoxTemporal.List(ContadorArray, 5) = FormatoMoneda(TotalesCompras.GetTotal(Worksheets(sheetactual).Range("A" & RenglonActual).Value), "$", 20)
            End If
            If sheetactual = "Devoluciones" Then
                ListBoxTemporal.List(ContadorArray, 5) = FormatoMoneda(TotalesDevoluciones.GetTotal(Worksheets(sheetactual).Range("A" & RenglonActual).Value), "$", 20)
            End If
            If sheetactual = "DevCompras" Then
                ListBoxTemporal.List(ContadorArray, 5) = FormatoMoneda(TotalesDevCompras.GetTotal(Worksheets(sheetactual).Range("A" & RenglonActual).Value), "$", 20)
            End If
            ListBoxTemporal.List(ContadorArray, 6) = Worksheets(sheetactual).Range("Z" & RenglonActual).Value
            
        End If
        
        If ContadorLista = 50 And EsLock Then
            EsLock = False
            ListBoxAsignaciones.List = ListBoxTemporal.List
            If ListIndexTemporal >= 0 Then
                ListBoxAsignaciones.Selected(ListIndexTemporal) = True
            End If
        End If
                
        If ContadorItem = TotalItems Then
            CicloActivado = False
            ListIndexTemporal = ListBoxAsignaciones.ListIndex
            
            ListBoxAsignaciones.List = ListBoxTemporal.List
            If ListIndexTemporal >= 0 Then
                ListBoxAsignaciones.Selected(ListIndexTemporal) = True
            Else
                If ListBoxAsignaciones.ListCount > 0 And ListBoxAsignaciones.ListIndex = -1 Then
                    ListBoxAsignaciones.Selected(0) = True
                End If
            End If
            
            ScrollBarAvance.Value = 0
        End If
        
        If ContadorLista = 0 And ContadorItem = TotalItems Then
            
            CicloActivado = False
            ListBoxAsignaciones.Clear
            ListBoxDetalles.Clear
            ListBoxTemporal.Clear
            Set ImageTool.Picture = Nothing
            FrameRefrescar.Repaint
            TextBoxCuenta = Empty
            TextBoxFecha = Empty
            TextBoxFolio = Empty
            TextBoxTecnico.BackColor = &HC0C0FF
            
        End If
        
    End If
    MyBook.Activate
End Sub

Private Sub UserForm_Initialize()
    Set MyBook = ThisWorkbook
    Inicio = True
    
    If Worksheets("Preferencias").Range("B14") <> "" Then

        Me.Top = Worksheets("Preferencias").Cells(14, 2)
        Me.Left = Worksheets("Preferencias").Cells(14, 3)
        Me.Height = Worksheets("Preferencias").Cells(14, 4)
        Me.Width = Worksheets("Preferencias").Cells(14, 5)
        Me.Zoom = Worksheets("Preferencias").Cells(14, 6)
    Else
        
        Me.StartUpPosition = 2
    End If
    
End Sub

Private Sub UserForm_Activate()
    MyBook.Activate
    
    If Inicio = True Then
        Inicio = False
        
        ActualizarBusquedas
        ActualizarTotales
        ActualizarIndice
        
        TextBoxTecnico = NombreInicio
        TextBoxTecnico.SetFocus
        TextBoxTecnico_Change
        
        IniciarBusqueda = True
        CicloActivado = True
        
        DoEventsActivate = True
        Do Until Not DoEventsActivate
            DoEvents
            For contarbusquedas = 1 To 100
                PrepararBusqueda
                ListBoxTecnicosActualizar
            Next
        Loop
        Unload Me
        
    End If

End Sub

Private Sub ActualizarBusquedas()
    MyBook.Activate
    Set IndiceVentas = New ClassIndice
    Set IndiceCompras = New ClassIndice
    Set IndiceDevoluciones = New ClassIndice
    Set IndiceDevCompras = New ClassIndice
    IndiceVentas.CreateIndice Worksheets("Ventas"), "A"
    IndiceCompras.CreateIndice Worksheets("Compras"), "A"
    IndiceDevoluciones.CreateIndice Worksheets("Devoluciones"), "A"
    IndiceDevCompras.CreateIndice Worksheets("DevCompras"), "A"
    
End Sub

Private Sub ActualizarTotales()
    MyBook.Activate
    Set TotalesVentas = New ClassTotales
    Set TotalesCompras = New ClassTotales
    Set TotalesDevoluciones = New ClassTotales
    Set TotalesDevCompras = New ClassTotales
    
    TotalesVentas.CreateIndiceTotales Worksheets("Ventas"), "A", "J"
    TotalesCompras.CreateIndiceTotales Worksheets("Compras"), "A", "J"
    TotalesDevoluciones.CreateIndiceTotales Worksheets("Devoluciones"), "A", "J"
    TotalesDevCompras.CreateIndiceTotales Worksheets("DevCompras"), "A", "J"
    
End Sub

Private Sub ActualizarIndice()

    MyBook.Activate
    
    Dim Asignaciones As Worksheet
    Dim Devoluciones As Worksheet
    Dim Compras As Worksheet
    Dim DevCompras As Worksheet
    
    Dim PrimerRenglon As Long
    Dim UltimoRenglon As Long
    Dim RenglonPegar As Long
    Dim RangeBase As Range
    
    '''''''''''''''''''''''''''' Ventas
    Set Asignaciones = NuevaHoja("DetallesControl")
    
    Asignaciones.Activate
    Asignaciones.Range("A:C").ColumnWidth = 20
    
    UltimoRenglon = GetLastRow(Worksheets("Ventas"))
    If UltimoRenglon > 1 Then
        Asignaciones.Range("B2:B" & UltimoRenglon) = Worksheets("Ventas").Range("A2:A" & UltimoRenglon).Value
        
        Asignaciones.Range("A2:A" & UltimoRenglon).FormulaR1C1 = "=ROW(RC[1])"
        Asignaciones.Range("A2:A" & UltimoRenglon).Copy
        Asignaciones.Range("A2:A" & UltimoRenglon).PasteSpecial (xlPasteValues)
        
        Asignaciones.Range("D2:D" & UltimoRenglon) = Worksheets("Ventas").Range("K2:K" & UltimoRenglon).Value
        
        Set RangeBase = Asignaciones.Range("A2:D" & UltimoRenglon)
        RangeBase.RemoveDuplicates Columns:=Array(2), Header:=xlNo
        
        UltimoRenglon = GetLastRow(Asignaciones)
        Asignaciones.Range("C2:C" & UltimoRenglon).Value = "Ventas"
    End If

    
    '''''''''''''''''''''''''''' Compras
    Set Compras = NuevaHoja("Temporal")
    
    Compras.Activate
    Compras.Range("A:C").ColumnWidth = 20
    
    UltimoRenglon = GetLastRow(Worksheets("Compras"))
    
    If UltimoRenglon > 1 Then
        Compras.Range("B2:B" & UltimoRenglon) = Worksheets("Compras").Range("A2:A" & UltimoRenglon).Value
        
        Compras.Range("A2:A" & UltimoRenglon).FormulaR1C1 = "=ROW(RC[1])"
        Compras.Range("A2:A" & UltimoRenglon).Copy
        Compras.Range("A2:A" & UltimoRenglon).PasteSpecial (xlPasteValues)
        
        Compras.Range("D2:D" & UltimoRenglon) = Worksheets("Compras").Range("K2:K" & UltimoRenglon).Value
        
        Set RangeBase = Compras.Range("A2:D" & UltimoRenglon)
        RangeBase.RemoveDuplicates Columns:=Array(2), Header:=xlNo
        
        UltimoRenglon = GetLastRow(Compras)
        Compras.Range("C2:C" & UltimoRenglon).Value = "Compras"
    End If
    
    RenglonPegar = GetLastRow(Asignaciones) + 1
    If RenglonPegar <= 1 Then
        RenglonPegar = 2
    End If
    UltimoRenglon = GetLastRow(Compras)
    
    If UltimoRenglon > 1 Then
        
        Asignaciones.Range("A" & RenglonPegar & ":D" & RenglonPegar + UltimoRenglon - 2) = Compras.Range("A2:D" & UltimoRenglon).Value

    End If
    
    '''''''''''''''''''''''''''' Devoluciones
    Set Devoluciones = NuevaHoja("Temporal2")
    
    Devoluciones.Activate
    Devoluciones.Range("A:C").ColumnWidth = 20
    
    UltimoRenglon = GetLastRow(Worksheets("Devoluciones"))
    If UltimoRenglon > 1 Then
        Devoluciones.Range("B2:B" & UltimoRenglon) = Worksheets("Devoluciones").Range("A2:A" & UltimoRenglon).Value
        
        Devoluciones.Range("A2:A" & UltimoRenglon).FormulaR1C1 = "=ROW(RC[1])"
        Devoluciones.Range("A2:A" & UltimoRenglon).Copy
        Devoluciones.Range("A2:A" & UltimoRenglon).PasteSpecial (xlPasteValues)
        
        Devoluciones.Range("D2:D" & UltimoRenglon) = Worksheets("Devoluciones").Range("K2:K" & UltimoRenglon).Value
        
        Set RangeBase = Devoluciones.Range("A2:D" & UltimoRenglon)
        RangeBase.RemoveDuplicates Columns:=Array(2), Header:=xlNo
    
        UltimoRenglon = GetLastRow(Devoluciones)
        Devoluciones.Range("C2:C" & UltimoRenglon).Value = "Devoluciones"
    End If
    
    RenglonPegar = GetLastRow(Asignaciones) + 1
    If RenglonPegar <= 1 Then
        RenglonPegar = 2
    End If
    UltimoRenglon = GetLastRow(Devoluciones)
    
    If UltimoRenglon > 1 Then
        
        Asignaciones.Range("A" & RenglonPegar & ":D" & RenglonPegar + UltimoRenglon - 2) = Devoluciones.Range("A2:D" & UltimoRenglon).Value

    End If
    
    
    '''''''''''''''''''''''''''' Dev Compras
    Set DevCompras = NuevaHoja("Temporal2")
    
    DevCompras.Activate
    DevCompras.Range("A:C").ColumnWidth = 20
    
    UltimoRenglon = GetLastRow(Worksheets("DevCompras"))
    If UltimoRenglon > 1 Then
        DevCompras.Range("B2:B" & UltimoRenglon) = Worksheets("DevCompras").Range("A2:A" & UltimoRenglon).Value
        
        DevCompras.Range("A2:A" & UltimoRenglon).FormulaR1C1 = "=ROW(RC[1])"
        DevCompras.Range("A2:A" & UltimoRenglon).Copy
        DevCompras.Range("A2:A" & UltimoRenglon).PasteSpecial (xlPasteValues)
        
        DevCompras.Range("D2:D" & UltimoRenglon) = Worksheets("DevCompras").Range("K2:K" & UltimoRenglon).Value
        
        Set RangeBase = DevCompras.Range("A2:D" & UltimoRenglon)
        RangeBase.RemoveDuplicates Columns:=Array(2), Header:=xlNo
    
        UltimoRenglon = GetLastRow(DevCompras)
        DevCompras.Range("C2:C" & UltimoRenglon).Value = "DevCompras"
    End If
    
    RenglonPegar = GetLastRow(Asignaciones) + 1
    If RenglonPegar <= 1 Then
        RenglonPegar = 2
    End If
    UltimoRenglon = GetLastRow(DevCompras)
    
    If UltimoRenglon > 1 Then
        
        Asignaciones.Range("A" & RenglonPegar & ":D" & RenglonPegar + UltimoRenglon - 2) = DevCompras.Range("A2:D" & UltimoRenglon).Value

    End If
    
    Asignaciones.Activate
    Asignaciones.Columns("A:D").Sort key1:=Asignaciones.Range("D1"), order1:=xlDescending, Header:=xlYes
    
    UltimoRenglon = GetLastRow(Asignaciones)
    If UltimoRenglon > 1 Then
        Set TheRange = Asignaciones.Range("A2:C" & UltimoRenglon)
        ArrayArticulos = TheRange
    Else
        ReDim ArrayArticulos(0)
    End If
        
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    MyBook.Activate
    If DoEventsActivate = True Then
        DoEventsActivate = False
        Cancel = True
    End If
    
End Sub
Attribute VB_Name = "CopiarModulo"

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

'Public Sub CopyModule(OrigenBook As Workbook, Modulo As String, DestinoBook As Workbook)
'    ''developer macro setting
'    ''activar casilla trust center
'
''    Dim Temporal As String
''
''    Temporal = ThisWorkbook.Path & "\Tools\Temporal\ModuloTemporal.bas"
''
''    OrigenBook.VBProject.VBComponents(Modulo).Export Temporal
''    DestinoBook.VBProject.VBComponents.Import Temporal
''    Kill Temporal
'
'End Sub
Attribute VB_Name = "CreateVBS"

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Public Sub CreateVBS()

    Dim FileObject As Object
    Dim NewFileTXT As Object
    
    NombredeArchivo = ThisWorkbook.Path & "\Tools\Temporal\Abrir Punto de Venta.VBS"

    If Dir(NombredeArchivo) <> "" Then
        Kill Ruta & NombredeArchivo
    End If
    
    Set FileObject = CreateObject("Scripting.FileSystemObject")
    Set NewFileTXT = FileObject.CreateTextFile(NombredeArchivo, True)
    NewFileTXT.WriteLine ("Set AplicacionExcelTemp = CreateObject(" & Chr(34) & "Excel.Application" & Chr(34) & ")")
    NewFileTXT.WriteLine ("Set AplicacionExcel = CreateObject(" & Chr(34) & "Excel.Application" & Chr(34) & ")")
    NewFileTXT.WriteLine ("AplicacionExcel.Workbooks.Open (" & Chr(34) & "F:\Sistema de Ventas\Punto de Venta en Excel.xlsm" & Chr(34) & ")")
    NewFileTXT.Close
    
     Ruta = ThisWorkbook.Path & "\Tools\Temporal\"
     If Dir(Ruta, vbDirectory) <> "" Then
        ActiveWorkbook.FollowHyperlink Address:=Ruta, NewWindow:=True
     Else
        MsgBox "Directorio no existe: " & Ruta
     End If
        
End Sub
Attribute VB_Name = "Cuentas"
Attribute VB_Base = "0{06FAD382-1239-4FA2-8D84-E6BDA39CB914}{EB671A7F-9416-4BF6-A381-B2601E84A050}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim IdTecnico As Long
Dim RenglonCuenta As Long

Dim Inicio As Boolean
Dim MyBook As Workbook
Dim Tecnicos As Worksheet

Public Sub SetCodigo(IdTecnicoTemp As Long)
    IdTecnico = IdTecnicoTemp
End Sub

Public Function IsRegisterModified() As Boolean
    IsRegisterModified = RegisterModified
End Function

Private Sub CommandButtonWindowConfig_Click()
    ZConfigWindow.RenglonVentana = 15
    Set ZConfigWindow.VentanaActiva = Me
    ZConfigWindow.Show
End Sub

Private Sub UserForm_Initialize()
    
    Set MyBook = ThisWorkbook
    Set Tecnicos = Worksheets("Clientes")
    Inicio = True
    
    If Worksheets("Preferencias").Range("B15") <> "" Then

        Me.Top = Worksheets("Preferencias").Cells(15, 2)
        Me.Left = Worksheets("Preferencias").Cells(15, 3)
        Me.Height = Worksheets("Preferencias").Cells(15, 4)
        Me.Width = Worksheets("Preferencias").Cells(15, 5)
        Me.Zoom = Worksheets("Preferencias").Cells(15, 6)
    Else
    
        Me.StartUpPosition = 2
        
    End If
    
End Sub

Private Sub UserForm_Activate()

    Dim ListaCuentasArray As Variant
    Dim UltimoRenglon As Long
    Dim RangoId As Range
    
    If ThisWorkbook.ReadOnly = True Then
        Me.Caption = "Read-Only Error!!!"
    End If
    
    If Inicio = True Then
    
        Inicio = False
        ListaCuentasArray = ArrayUniqueValues(Worksheets("Miscelaneos"), "H")
        TextboxClaseCuentaF.List = ListaCuentasArray
            
        If IdTecnico = 0 Then
            Me.Caption = "Nuevo Registro"
            RenglonCuenta = GetLastRow(Tecnicos) + 1
            Set RangoId = Tecnicos.Range("A:A")
            IdTecnico = Application.WorksheetFunction.Max(RangoId) + 1
            
            TextBoxIdClaveA = IdTecnico
            TextBoxRenglonCuenta = RenglonCuenta
            
        Else
            Me.Caption = "Modificar Registro"
            RenglonCuenta = GetRowItem(IdTecnico, Tecnicos, "A")
            
            If RenglonCuenta = 0 Then
                Me.Hide
            End If
                        
            TextBoxIdClaveA = Trim(Tecnicos.Range("A" & RenglonCuenta).Value)
            TextBoxCuentaB = Trim(Tecnicos.Range("B" & RenglonCuenta).Value)
            TextBoxDireccionC = Trim(Tecnicos.Range("C" & RenglonCuenta).Value)
            TextBoxCorreoD = Trim(Tecnicos.Range("D" & RenglonCuenta).Value)
            TextBoxTelefonoE = Trim(Tecnicos.Range("E" & RenglonCuenta).Value)
            TextboxClaseCuentaF = Trim(Tecnicos.Range("F" & RenglonCuenta).Value)
            TextBoxG = Trim(Tecnicos.Range("G" & RenglonCuenta).Value)
            TextBoxH = Trim(Tecnicos.Range("H" & RenglonCuenta).Value)
            TextBoxI = Trim(Tecnicos.Range("I" & RenglonCuenta).Value)
            TextBoxRenglonCuenta = RenglonCuenta
            
        End If
        
        TextBoxCuentaB.SetFocus
            
    End If
    
End Sub

Private Sub CommandButtonGuardarRegistro_Click()
    
    Dim TablaGuardarDatos As String
    Set Clientes = Worksheets("Clientes")
    
    If TextBoxCuentaB = "" Then
        TextBoxCuentaB.SetFocus
        Exit Sub
    End If
    
    If TextBoxDireccionC = "" Then
        TextBoxDireccionC.SetFocus
        Exit Sub
    End If
    
    If TextBoxCorreoD = "" Then
        TextBoxCorreoD.SetFocus
        Exit Sub
    End If
    
    If TextBoxTelefonoE = "" Then
        TextBoxTelefonoE.SetFocus
        Exit Sub
    End If
    
    If TextboxClaseCuentaF = "" Then
        TextboxClaseCuentaF.SetFocus
        TextboxClaseCuentaF.DropDown
        Exit Sub
    End If
    
    Confirmacion = MsgBoxCentered("Desea guardar este registro.", vbYesNo, Me)
    If Confirmacion = vbYes Then
    
        Clientes.Range("A" & RenglonCuenta) = TextBoxIdClaveA.Value
        Clientes.Range("B" & RenglonCuenta) = TextBoxCuentaB
        Clientes.Range("C" & RenglonCuenta) = TextBoxDireccionC
        Clientes.Range("D" & RenglonCuenta) = TextBoxCorreoD
        Clientes.Range("E" & RenglonCuenta) = TextBoxTelefonoE
        Clientes.Range("F" & RenglonCuenta) = TextboxClaseCuentaF
        Clientes.Range("G" & RenglonCuenta) = TextBoxG
        Clientes.Range("H" & RenglonCuenta) = TextBoxH
        Clientes.Range("I" & RenglonCuenta) = TextBoxI
        
        Clientes.Range("A" & RenglonCuenta & ":I" & RenglonCuenta).HorizontalAlignment = xlCenter
        
        ThisWorkbook.Save
        
        Me.Hide
            
    End If
    
End Sub

Private Sub CommandButton4_Click()
On Error GoTo salir
    Dim Portapapeles As New MSForms.DataObject
    Portapapeles.GetFromClipboard
    TextBoxLink.Value = Portapapeles.GetText()
salir:
End Sub

Private Sub CommandButtonNuevoRegistro_Click()
    TextBoxRenglonCuenta = 0
    UserForm_Activate
End Sub

Attribute VB_Name = "Devoluciones"
Attribute VB_Base = "0{94630D4C-3421-4CA3-A75A-6AAD5BBB1D06}{5CA408B5-987F-469A-8AC7-2718B06FE79F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim Inicio As Boolean
Dim MyBook As Workbook
Dim OrigenSheet As Worksheet
Dim DestinoSheet As Worksheet
Dim IdRegistro As Long
Dim ConsultaRowsPrincipal As Variant
Dim ControlFecha As ClassControlDate
Dim SumarOrRestar As String

Public Sub LoadDataForm(Origen As Worksheet, Destino As Worksheet, IdRecord As Long, SumarOrRestarTemp As String)
    Set OrigenSheet = Origen
    Set DestinoSheet = Destino
    IdRegistro = IdRecord
    SumarOrRestar = SumarOrRestarTemp
End Sub

Private Sub ComboBoxCondicionesDevolucion_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If ListBoxArticulos.ListIndex >= 0 Then
        ListBoxArticulos.List(ListBoxArticulos.ListIndex, 0) = ComboBoxCondicionesDevolucion
    End If
End Sub

Private Sub ComboBoxUbicacionHoja_Change()
    If ListBoxArticulos.ListIndex > -1 Then
        Worksheets("DetallesDev").Range("B" & ListBoxArticulos.List(ListBoxArticulos.ListIndex, 0)) = ComboBoxUbicacionHoja.Text
        If OrigenSheet.Name = ComboBoxUbicacionHoja.Text Then
            Worksheets("DetallesDev").Range("Z" & ListBoxArticulos.List(ListBoxArticulos.ListIndex, 0)) = 1
        End If
        If DestinoSheet.Name = ComboBoxUbicacionHoja.Text Then
            Worksheets("DetallesDev").Range("Z" & ListBoxArticulos.List(ListBoxArticulos.ListIndex, 0)) = 2
        End If
    End If
    ActualizarListBoxArticulos
End Sub

Private Sub CommandButtonDividir_Click()
    Dim Renglon As Long
    Dim PrimerValor, SegundoValor As Double
    Renglon = 0
    PrimerValor = 0
    SegundoValor = 0
    Renglon = ListBoxArticulos.List(ListBoxArticulos.ListIndex, 0)
    If Renglon > 1 Then
        
        PrimerValor = InputBox("Teclee el primer valor para dividir!")
        If PrimerValor = 0 Or PrimerValor = "" Then
            Exit Sub
        End If
        
        SegundoValor = Val(Worksheets("DetallesDev").Range("AH" & Renglon)) - PrimerValor
        If SegundoValor <= 0 Then
            Exit Sub
        End If
        
        Worksheets("DetallesDev").Rows(Renglon & ":" & Renglon).Copy
        Worksheets("DetallesDev").Rows(Renglon + 1 & ":" & Renglon + 1).Insert Shift:=xlDown
        Worksheets("DetallesDev").Rows(Renglon + 1 & ":" & Renglon + 1).PasteSpecial (xlPasteValues)
        
        Worksheets("DetallesDev").Range("F" & Renglon) = PrimerValor
        Worksheets("DetallesDev").Range("AH" & Renglon) = PrimerValor
        Worksheets("DetallesDev").Range("F" & Renglon + 1) = SegundoValor
        Worksheets("DetallesDev").Range("AH" & Renglon + 1) = SegundoValor
        
        UltimoRenglon = Worksheets("DetallesDev").Range("AA" & Rows.Count).End(xlUp).Row
        Worksheets("DetallesDev").Range("A2:A" & UltimoRenglon).FormulaR1C1 = "=ROW(RC[1])"
        Worksheets("DetallesDev").Range("A2:A" & UltimoRenglon).Copy
        Worksheets("DetallesDev").Range("A2:A" & UltimoRenglon).PasteSpecial (xlPasteValues)
        
        ActualizarListBoxArticulos
        
    End If

End Sub

Private Sub CommandButtonGuardarDevolucion_Click()

    Dim ConsultaRowsDevolucion As Variant
    Dim ConsultaRowsOrigen As Variant
    Dim RenglonInventario As Variant
    Dim IndiceDevolucion As ClassIndice
    Dim IndiceInventario As ClassIndice
    Dim IdConsulta As Long
    Dim DetallesDev As Worksheet
    Dim Articulos As Worksheet
    Dim InicioMontoInventario As Double
    Dim FinMontoInventario As Double
    Dim RangoSuma As Range
    
    MyBook.Activate
    Set DetallesDev = Worksheets("DetallesDev")
    Set Articulos = Worksheets("Articulos")
    Set IndiceDevolucion = New ClassIndice
    Set IndiceInventario = New ClassIndice
    
    IndiceDevolucion.CreateIndice DetallesDev, "Z"
    IndiceInventario.CreateIndice Articulos, "A"
    
    ConsultaRowsOrigen = IndiceDevolucion.FindItems(1)
    ConsultaRowsDevolucion = IndiceDevolucion.FindItems(2)
    
    If UBound(ConsultaRowsDevolucion) = 0 Then
        MsgBoxCentered "No hay registros para procesar!!!", vbInformation, Me
        Exit Sub
    End If
    
''''''''' INICIO VALIDACION DE INVENTARIO

    InicioMontoInventario = 0
    Set RangoSuma = OrigenSheet.Range("H:H")
    InicioMontoInventario = Application.WorksheetFunction.Sum(RangoSuma)
    Set RangoSuma = DestinoSheet.Range("H:H")
    InicioMontoInventario = InicioMontoInventario + Application.WorksheetFunction.Sum(RangoSuma)
    
'Agregar Ultimo DATOS

    UltimoRenglon = GetLastRow(DetallesDev)
    DetallesDev.Range("AU2:AU" & UltimoRenglon) = TextBoxFolioDestino.Value
    DetallesDev.Range("AV2:AV" & UltimoRenglon) = ControlFecha.GetFecha
    
'Borrar Items en Ventas
    Dim TotalBorrados As Long
    TotalBorrados = DeleteRows(OrigenSheet, "A", IdRegistro)
    If TotalBorrados <> UBound(ConsultaRowsPrincipal) Then
        MsgBox "Error en proceso de devoluci|fffd|n, deleted items!!!", vbCritical
    End If

'Modificar Inventario para devoluciones
    
    For IdConsulta = 1 To UBound(ConsultaRowsDevolucion)
        
        RenglonDetallesDev = ConsultaRowsDevolucion(IdConsulta)
        RenglonArticulo = IndiceInventario.RenglonItem(DetallesDev.Range("AD" & ConsultaRowsDevolucion(IdConsulta)).Value)
        If Articulos.Range("A" & RenglonArticulo) = DetallesDev.Range("AD" & RenglonDetallesDev) Then
            If SumarOrRestar = "Sumar" Then
                Articulos.Range("G" & RenglonArticulo) = Articulos.Range("G" & RenglonArticulo) + DetallesDev.Range("AH" & RenglonDetallesDev)
            Else
                If SumarOrRestar = "Restar" Then
                    Articulos.Range("G" & RenglonArticulo) = Articulos.Range("G" & RenglonArticulo) - DetallesDev.Range("AH" & RenglonDetallesDev)
                Else
                    MsgBoxCentered "Error en el proceso de devoluci|fffd|n, label no found!!!", vbInformation, Me
                End If
            End If
        Else
            MsgBoxCentered "Error en proceso de devoluci|fffd|n, item no found!!!", vbInformation, Me
        End If
    Next

'Copiar en Devoluciones
    RenglonPegar = GetLastRow(DestinoSheet)
    For IdRow = 1 To UBound(ConsultaRowsDevolucion)
        RenglonPegar = RenglonPegar + 1
        DestinoSheet.Range("A" & RenglonPegar & ":Z" & RenglonPegar) = DetallesDev.Range("AA" & ConsultaRowsDevolucion(IdRow) & ":AZ" & ConsultaRowsDevolucion(IdRow)).Value
        
    Next

'Copiar en No Devoluciones
    RenglonPegar = GetLastRow(OrigenSheet)
    For IdRow = 1 To UBound(ConsultaRowsOrigen)
        RenglonPegar = RenglonPegar + 1
        OrigenSheet.Range("A" & RenglonPegar & ":Z" & RenglonPegar) = DetallesDev.Range("AA" & ConsultaRowsOrigen(IdRow) & ":AZ" & ConsultaRowsOrigen(IdRow)).Value
    Next

'Eliminar Detalles dev
    Set DetallesDev = NuevaHoja("DetallesDev")

'Guardar Cambios
    MyBook.Save
    
'Validar Transacciones con inventario
    
    FinMontoInventario = 0
    Set RangoSuma = OrigenSheet.Range("H:H")
    FinMontoInventario = Application.WorksheetFunction.Sum(RangoSuma)
    Set RangoSuma = DestinoSheet.Range("H:H")
    FinMontoInventario = FinMontoInventario + Application.WorksheetFunction.Sum(RangoSuma)

    If InicioMontoInventario <> FinMontoInventario Then
        MsgBoxCentered "Error en proceso de devoluci|fffd|n, no coincide inventario, verificar!!!", vbInformation, Me
    End If
'CerrarFormulario
    Me.Hide

End Sub

Private Sub CommandButtonnext_Click()
    Temporal = ListBoxArticulos.ListIndex
    If ListBoxArticulos.ListIndex + 1 < ListBoxArticulos.ListCount Then
        ListBoxArticulos.ListIndex = Temporal + 1
    End If
End Sub

Private Sub CommandButtonWindowConfig_Click()
    ZConfigWindow.RenglonVentana = 16
    Set ZConfigWindow.VentanaActiva = Me
    ZConfigWindow.Show
End Sub

Private Sub UserForm_Initialize()

    Inicio = True
    Set MyBook = ThisWorkbook
    
    IdRegistro = 0
    Set OrigenSheet = Nothing
    Set DestinoSheet = Nothing
    
    If Worksheets("Preferencias").Range("B16") <> "" Then
            
        Me.Top = MyBook.Worksheets("Preferencias").Range("B16").Value
        Me.Left = MyBook.Worksheets("Preferencias").Range("C16").Value
        Me.Height = MyBook.Worksheets("Preferencias").Range("D16").Value
        Me.Width = MyBook.Worksheets("Preferencias").Range("E16").Value
        Me.Zoom = MyBook.Worksheets("Preferencias").Range("F16").Value
        
    Else
    
        Me.StartUpPosition = 2
        
    End If
    
End Sub

Private Sub UserForm_Activate()

    If IdRegistro = 0 Then
        Exit Sub
    End If
    If Inicio = True Then
        Inicio = False
        
        Set ControlFecha = New ClassControlDate
        Set ControlFecha.ComboBoxDia = ComboBoxDia
        Set ControlFecha.ComboBoxMes = ComboBoxMes
        Set ControlFecha.ComboBoxA|fffd|o = ComboBoxA|fffd|o
        Set ControlFecha.ActiveForm = Me
        ControlFecha.IniciarControlDate
        
        PrepararDevolucion
        
        If ListBoxArticulos.ListCount > 0 Then
            ListBoxArticulos.Selected(0) = True
        End If
        
    End If

End Sub

Private Sub PrepararDevolucion()

    Dim IndiceOrigen As ClassIndice
    
    Dim Renglon As Long
    Dim IdRow As Long
    Dim IdMaxOrigen  As Long
    Dim IdMaxDestino  As Long
    Dim RangoId As Range
    
    Set RangoId = OrigenSheet.Range("U:U")
    IdMaxOrigen = Application.WorksheetFunction.Max(RangoId)
    Set RangoId = DestinoSheet.Range("U:U")
    IdMaxDestino = Application.WorksheetFunction.Max(RangoId)
    If IdMaxOrigen > IdMaxDestino Then
        IdMaxDestino = IdMaxOrigen
    End If
    IdMaxDestino = IdMaxDestino + 1
    If InStr(1, OrigenSheet.Name, "Compra", vbTextCompare) > 0 Then 'Ventas o Compras
        If Worksheets("Preferencias").Range("B13").Value > IdMaxDestino Then
            TextBoxFolioDestino = Worksheets("Preferencias").Range("B13").Value
        Else
            TextBoxFolioDestino = IdMaxDestino
        End If
    Else
        If Worksheets("Preferencias").Range("B11").Value > IdMaxDestino Then
            TextBoxFolioDestino = Worksheets("Preferencias").Range("B11").Value
        Else
            TextBoxFolioDestino = IdMaxDestino
        End If
    End If
    ComboBoxUbicacionHoja.Clear
    ComboBoxUbicacionHoja.AddItem OrigenSheet.Name
    ComboBoxUbicacionHoja.AddItem DestinoSheet.Name
    
    Dim Transacciones As Worksheet
    Set Transacciones = NuevaHoja("DetallesDev")
    
    Set IndiceOrigen = New ClassIndice
    IndiceOrigen.CreateIndice OrigenSheet, "A"
    ConsultaRowsPrincipal = IndiceOrigen.FindItems(IdRegistro)
    If UBound(ConsultaRowsPrincipal) = 0 Then
        Exit Sub
    End If
    Renglon = 1
    For IdRow = 1 To UBound(ConsultaRowsPrincipal)
        Renglon = Renglon + 1
        Transacciones.Range("AA" & Renglon & ":AZ" & Renglon) = OrigenSheet.Range("A" & ConsultaRowsPrincipal(IdRow) & ":Z" & ConsultaRowsPrincipal(IdRow)).Value
    Next
    
    UltimoRenglon = GetLastRow(Transacciones)
    
    Transacciones.Range("A1:A" & UltimoRenglon).FormulaR1C1 = "=ROW(RC[1])"
    Transacciones.Range("A1:A" & UltimoRenglon).Copy
    Transacciones.Range("A1:A" & UltimoRenglon).PasteSpecial (xlPasteValues)
    Transacciones.Range("A1") = "Renglon"
    
    Transacciones.Range("B2:B" & UltimoRenglon) = DestinoSheet.Name
    
    Transacciones.Range("AE1:AE" & UltimoRenglon).Copy
    Transacciones.Range("D1:D" & UltimoRenglon).PasteSpecial (xlPasteValues)
    
    Transacciones.Range("AG1:AG" & UltimoRenglon).Copy
    Transacciones.Range("E1:E" & UltimoRenglon).PasteSpecial (xlPasteValues)
    
    Transacciones.Range("AH1:AH" & UltimoRenglon).Copy
    Transacciones.Range("F1:F" & UltimoRenglon).PasteSpecial (xlPasteValues)
    
    Transacciones.Range("AO1:AO" & UltimoRenglon).Copy
    Transacciones.Range("G1:G" & UltimoRenglon).PasteSpecial (xlPasteValues)
    
    Transacciones.Range("H2:H" & UltimoRenglon).FormulaR1C1 = "=formatomoneda(RC[28],Preferencias!R4C2,20)"
    
    Transacciones.Range("Z2:Z" & UltimoRenglon) = 2
    
    Set TheRange = Transacciones.Range("A2:H" & UltimoRenglon)
    ArrayDetallesDev = TheRange
    ListBoxArticulos.List = ArrayDetallesDev
        
End Sub

Private Sub ListBoxArticulos_Click()
    MyBook.Activate
    If ListBoxArticulos.ListIndex < 0 Then
        Exit Sub
    End If
    Dim Renglon As Long
    Renglon = 0
    Renglon = ListBoxArticulos.List(ListBoxArticulos.ListIndex, 0)
    If Renglon > 1 Then
    
            ActualizarFotoPV (Worksheets("DetallesDev").Cells(Renglon, 30))
            ComboBoxUbicacionHoja = Worksheets("DetallesDev").Range("B" & Renglon).Value
            
            TextBoxCuenta = Worksheets("DetallesDev").Range("AC" & Renglon).Value
            TextBoxDescripcion = Worksheets("DetallesDev").Range("AE" & Renglon).Value
            TextBoxCantidad = Worksheets("DetallesDev").Range("AH" & Renglon).Value
            TextBoxFolioOrigen = Worksheets("DetallesDev").Range("AA" & Renglon).Value
            TextBoxFechaOrigen = Format(Worksheets("DetallesDev").Range("AK" & Renglon).Value, "dd-mmmm-yyyy")
    
    End If
End Sub

Public Sub ActualizarFotoPV(Foto As String)
        Dim Ruta As String
        Dim Variable As Variant
        
        Ruta = ThisWorkbook.Path
On Error GoTo NOFILE
    
        Variable = Trim(Ruta & "\Tools\Images\" & Trim(Foto) & ".jpg")
        If Trim(Dir(Ruta & "\Tools\Images\" & Trim(Foto) & ".jpg")) = Trim(Foto) & ".jpg" Then
            Set Devoluciones.ImagenPuntodeVenta.Picture = LoadPicture(Variable)
            ImagenActual = Foto
        Else
            Set Devoluciones.ImagenPuntodeVenta.Picture = Nothing
       End If
       Devoluciones.FrameImagen.Repaint

NOFILE:
End Sub

Private Sub ListBoxCodigos_Click()
   TextBoxCantidad = ""
   For Contador = 0 To ListBoxCodigos.ListCount - 1
        If ListBoxCodigos.Selected(Contador) Then

            ActualizarFotoPV (ListBoxCodigos.List(Contador, 0))

            TextBoxDescripcion = ListBoxCodigos.List(Contador, 1)
            TextBoxUDM = ListBoxCodigos.List(Contador, 2)
            TextBoxUnitario = Format((ListBoxCodigos.List(Contador, 5)), "currency")
            PrecioUnitario = ListBoxCodigos.List(Contador, 5)
            If Len(Trim(TextBoxUnitario)) = 0 Then
                TextBoxUnitario = 0
            End If
            TextBoxCantidad = 1
            TextBoxSubTotal = Format((ListBoxCodigos.List(Contador, 5)), "currency")
            If Len(Trim(TextBoxSubTotal)) = 0 Then
                TextBoxSubTotal = 0
            End If
            TextBoxId = ListBoxCodigos.List(Contador, 9)
            Exit For
        End If
    Next
End Sub

Private Sub ActualizarListBoxArticulos()
    TempoIndex = ListBoxArticulos.ListIndex
    UltimoRenglon = Worksheets("DetallesDev").Range("AA" & Rows.Count).End(xlUp).Row
    Set TheRange = Worksheets("DetallesDev").Range("A2:H" & UltimoRenglon)
    ArrayDetallesDev = TheRange
    ListBoxArticulos.List = ArrayDetallesDev
    ListBoxArticulos.ListIndex = TempoIndex
End Sub

Attribute VB_Name = "Efectivo"
Attribute VB_Base = "0{B94F6F7F-B7AD-48D7-9917-5238B9661B58}{6321E88F-61E9-4670-9642-33E8CDB6B9A4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim TotalAPagar As Double
Dim Efectivo As Double
Dim Cambio As Double
Dim Inicio As Boolean
Dim TotalItems As Long
Dim EfectivoRecibido As Double
Dim FormatoGuardar As String

Public Sub SetTotalAPagar(MontoAPagar As Double, TotalArticulos As Long)
    TotalAPagar = MontoAPagar
    TotalItems = TotalArticulos
End Sub

Public Function GetEfectivo() As Double
    GetEfectivo = Efectivo
End Function

Public Function GetFormato() As String
    GetFormato = FormatoGuardar
End Function

Private Sub CommandButtonExcel_Click()
    EfectivoRecibido = Efectivo
    FormatoGuardar = "Formato Excel"
    Me.Hide
End Sub

Private Sub CommandButtonGuardar_Click()
    EfectivoRecibido = Efectivo
    FormatoGuardar = "Solo Guardar"
    Me.Hide
End Sub

Private Sub CommandButtonPDF_Click()
        
    EfectivoRecibido = Efectivo
    FormatoGuardar = "Formato PDF"
    Me.Hide
    
End Sub

Private Sub CommandButtonPrint_Click()
    EfectivoRecibido = Efectivo
    FormatoGuardar = "Imprimir Reporte"
    Me.Hide
End Sub

Private Sub CommandButtonXML_Click()

    Dim ControlXML As Object
    On Error GoTo ErrorSalir
    Set ControlXML = CreateObject("Msxml2.DOMDocument.6.0")
    
    If ControlXML Is Nothing Then
        MsgBox "Microsoft XML v6.0 se encuentra desactivado, activar en References VBA"
        Set ControlXML = Nothing
        Exit Sub
    End If
    
    EfectivoRecibido = Efectivo
    FormatoGuardar = "Formato XML"
    Me.Hide
    
    Exit Sub
    
ErrorSalir:
    MsgBox "Microsoft XML v6.0 se encuentra desactivado, activar en References VBA"
    
End Sub

Private Sub TextBoxEfectivo_Change()
    TextBoxEfectivo.Text = VBA.Replace(TextBoxEfectivo.Text, VBA.Chr(9), "")
End Sub

Private Sub TextBoxEfectivo_Enter()
    If Efectivo = 0 Then
        TextBoxEfectivo = Empty
    Else
        TextBoxEfectivo = Efectivo
    End If
End Sub

Private Sub TextBoxEfectivo_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    Dim TextBoxNumerico As Object
    Set TextBoxNumerico = TextBoxEfectivo
    Select Case KeyAscii
    Case Asc("0") To Asc("9")
'    Case Asc("-")
'        If InStr(1, TextBoxCantidad.Text, "-") > 0 Or TextBoxCantidad.SelStart > 0 Then
'            KeyAscii = 0
'        End If
    Case Asc(SeparadorDecimalSystem)
        If TextBoxNumerico.SelLength <> Len(TextBoxNumerico.Text) Then
            If InStr(1, TextBoxNumerico.Text, SeparadorDecimalSystem) > 0 Then
                KeyAscii = 0
            End If
        End If
    Case Else
        KeyAscii = 0
    End Select
    
End Sub

Private Sub TextBoxEfectivo_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    Dim Diferencia As Double
    Diferencia = 0
    
    If IsNumeric(TextBoxEfectivo) Then
        Efectivo = CDbl(TextBoxEfectivo.Value)
    Else
        Efectivo = 0
    End If

    Diferencia = TotalAPagar - Efectivo
    
    If Diferencia <= 0 Then
        CommandButtonGuardar.Visible = True
        CommandButtonPrint.Visible = True
        CommandButtonExcel.Visible = True
        CommandButtonPDF.Visible = True
        CommandButtonXML.Visible = True
    Else
        CommandButtonGuardar.Visible = False
        CommandButtonPrint.Visible = False
        CommandButtonExcel.Visible = False
        CommandButtonPDF.Visible = False
        CommandButtonXML.Visible = False
    End If
    
    If Diferencia < 0 Then
        Diferencia = Diferencia * -1
        TextBoxCambio = FormatoMoneda(Diferencia, Worksheets("Preferencias").Range("B4"), 20)
        DiferenciaCurrency = Diferencia
    Else
        TextBoxCambio = FormatoMoneda(0, Worksheets("Preferencias").Range("B4"), 20)
    End If
    
End Sub

Private Sub TextBoxEfectivo_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    With TextBoxEfectivo
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub UserForm_Initialize()
    Inicio = True
    TotalAPagar = 0
    Efectivo = 0
    Cambio = 0
    EfectivoRecibido = 0
End Sub

Private Sub UserForm_Activate()
    Dim TotalAPagarCurrency As Currency
    
    If Inicio = True Then
        Inicio = False
        TotalAPagarCurrency = TotalAPagar
        LabelTotalAPagar = PesosMN(TotalAPagarCurrency)
        
        TextBoxTotalAPagar = FormatoMoneda(TotalAPagar, "$", 20)
        TextBoxEfectivo = FormatoMoneda(Efectivo, "$", 20)
        TextBoxCambio = FormatoMoneda(Cambio, "$", 20)
        TextBoxTotalItems = TotalItems
        
        TextBoxEfectivo.SetFocus
    End If
End Sub
Attribute VB_Name = "Eliminar"
Attribute VB_Base = "0{EF002808-BB77-4F34-80A0-ADA065203E94}{E6BAD868-D481-4BFB-A6F3-A2ADDBF2C994}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim Inicio As Boolean
Dim MyBook As Workbook
Dim ArrayFechaMes() As Long

Private Sub ComboBoxWorksheet_DropButtonClick()
    
    ListBoxMes.Clear
    MostrarXMes
    
End Sub

Private Sub CommandButtonEliminarItem_Click()
    Dim TotalBorrados As Long
    If ListBoxMes.ListIndex >= 0 Then
        
        Confirmacion = MsgBoxCentered("Confirma Eliminar?", vbYesNo, Me)
        If Confirmacion = vbYes Then
        
            TotalBorrados = DeleteRowsXMes(Worksheets(ComboBoxWorksheet.Text), "K", ListBoxMes.List(ListBoxMes.ListIndex, 0))
            ThisWorkbook.Save
            
            MsgBox "Se eliminaron " & TotalBorrados & " en tabla " & ComboBoxWorksheet.Text
            MostrarXMes

        End If
        
    End If
End Sub

Private Sub UserForm_Initialize()

    Dim OrigenFile As String
    Dim DestinoFile As String
    
    Dim ControlCopy As Object
    Set ControlCopy = CreateObject("Scripting.FileSystemObject")
    
    Set MyBook = ThisWorkbook
    MyBook.Activate
    Inicio = True
    ReDim ArrayFechaMes(24180 To 24360)
    
''''''''''''' BACKUP
    
    Dim FechaSerial As Long
    FechaSerial = DateSerial(Year(Date), Month(Date), Day(Date))
    DirectoryValidate "Backups"
    OrigenFile = ActiveWorkbook.FullName
    DestinoFile = ThisWorkbook.Path & "\Tools\Backups\PV Backup " & FormatoFolio(FechaSerial, Date) & " " & Format(Time, "hh-mm") & " opt DataDelete.xlsm"
    If Dir(DestinoFile) = "" Then
        ThisWorkbook.Save
        ControlCopy.copyfile OrigenFile, DestinoFile, True
        MsgBox "Respaldo creado" & RutaNombre, vbInformation
    End If
    
End Sub

Private Sub UserForm_Activate()

    If Inicio = False Then
        Exit Sub
    End If
    Inicio = False
    ComboBoxWorksheet.AddItem "Ventas"
    ComboBoxWorksheet.AddItem "Devoluciones"
    ComboBoxWorksheet.AddItem "Compras"
    ComboBoxWorksheet.AddItem "DevCompras"
    ComboBoxWorksheet.Text = "Ventas"
    MostrarXMes
    
End Sub

Private Sub MostrarXMes()

    Dim ActiveRenglon As Long
    Dim UltimoRenglon As Long
    Dim SerieMes As Long
    Dim DatosSheet As Worksheet
    Set DatosSheet = MyBook.Worksheets(ComboBoxWorksheet.Text)
    
    ListBoxMes.Clear
    
    UltimoRenglon = GetLastRow(DatosSheet)
    For Contador = LBound(ArrayFechaMes) To UBound(ArrayFechaMes)
        ArrayFechaMes(Contador) = 0
    Next
    
    For ActiveRenglon = 2 To UltimoRenglon
        SerieMes = (Year(DatosSheet.Range("K" & ActiveRenglon)) * 12) + Month(DatosSheet.Range("K" & ActiveRenglon))
        ArrayFechaMes(SerieMes) = ArrayFechaMes(SerieMes) + 1
    Next
    
    For Contador = UBound(ArrayFechaMes) To LBound(ArrayFechaMes) Step -1
        If ArrayFechaMes(Contador) > 0 Then
        
            ListBoxMes.AddItem
            ListBoxMes.List(ListBoxMes.ListCount - 1, 0) = Contador
            ListBoxMes.List(ListBoxMes.ListCount - 1, 1) = StrConv(Format(DateSerial(Int(Contador / 12), Contador Mod 12, 1), "mmmm") & " " & Year(DateSerial(Int(Contador / 12), Contador Mod 12, 1)), vbProperCase)
            ListBoxMes.List(ListBoxMes.ListCount - 1, 2) = ArrayFechaMes(Contador)
            
        End If
    Next
        
End Sub
Attribute VB_Name = "ErrorListBox"
Attribute VB_Base = "0{0312F172-11E2-4501-A193-F32260117B93}{0840E1E1-B487-4992-A8D9-794B6EBDAE08}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Private Sub CommandButtonMas_Click()
    AVenta.ListBoxHerramientas.Height = AVenta.ListBoxHerramientas.Height + 0.1
End Sub

Private Sub CommandButtonMenos_Click()
    AVenta.ListBoxHerramientas.Height = AVenta.ListBoxHerramientas.Height - 0.1
End Sub

Private Sub UserForm_Click()

End Sub
Attribute VB_Name = "FuncionesExportar"

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Public Sub FormulaR1C1Error()

    Dim DataObject As Object
    Dim CopiarFormula As String
    MsgBox ActiveSheet.Cells(ActiveCell.Row, ActiveCell.Column).FormulaR1C1
    CopiarFormula = ActiveSheet.Cells(ActiveCell.Row, ActiveCell.Column).FormulaR1C1
    With New DataObject
        .SetText CopiarFormula
        .PutInClipboard
    End With
    Set DataObject = CreateObject("new:{1C3B4210-F441-11CE-B9EA-00AA006B1A69}")
    DataObject.SetText CopiarFormula
    DataObject.PutInClipboard
    Set DataObject = Nothing
    
End Sub

Public Sub FormulaR1C1()

    Dim Cadena As String
    Cadena = ActiveSheet.Cells(ActiveCell.Row, ActiveCell.Column).FormulaR1C1
    InputBox "FormulaR1C1", "FormulaR1C1", Cadena
    
End Sub

Public Sub Coordenada()
    MsgBox "Cells(" & ActiveCell.Row & "," & ActiveCell.Column & ") "
End Sub
Attribute VB_Name = "Herramientas"
Attribute VB_Base = "0{DEAE2C8A-811E-4208-B2A6-5E4587535053}{878F5C62-EEA6-4A76-A67D-5B0FA7BE144B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim MyBook As Workbook
Dim Inicio As Boolean
Dim RenglonItem As Long
Dim IdCodigo As Long
Dim RegisterModified As Boolean
Dim ArchivoSeleccion As Variant

Dim UnitarioVenta As ClassControlCurrency
Dim UnitarioCompra As ClassControlCurrency
Dim Inventario As ClassControlGeneralNumber
Dim Descuento As ClassControlPercent
Dim Impuesto As ClassControlPercent
Dim MinimoStock As ClassControlGeneralNumber
Dim OrdenP As Double

Public Sub SetCodigo(IdCodigoTemp As Long)
    IdCodigo = IdCodigoTemp
End Sub

Public Function IsRegisterModified() As Boolean
    IsRegisterModified = RegisterModified
End Function

Private Sub TextBoxUnitarioCompraD_Enter()
    With TextBoxUnitarioCompraD
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub TextBoxUnitarioVentaE_Enter()
     With TextBoxUnitarioVentaE
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub UserForm_Initialize()
    
       
    Inicio = True
    RegisterModified = False
    Set MyBook = ThisWorkbook
    MyBook.Activate
    
    If Worksheets("Preferencias").Range("B17") <> "" Then

        Me.Top = Worksheets("Preferencias").Cells(17, 2)
        Me.Left = Worksheets("Preferencias").Cells(17, 3)
        Me.Height = Worksheets("Preferencias").Cells(17, 4)
        Me.Width = Worksheets("Preferencias").Cells(17, 5)
        Me.Zoom = Worksheets("Preferencias").Cells(17, 6)
    Else
    
        Me.StartUpPosition = 2
        
    End If
    
    Set UnitarioCompra = New ClassControlCurrency
    Set UnitarioCompra.TextBoxControl = TextBoxUnitarioCompraD
    Set UnitarioCompra.VentanaActiva = Me
    
    Set UnitarioVenta = New ClassControlCurrency
    Set UnitarioVenta.TextBoxControl = TextBoxUnitarioVentaE
    Set UnitarioVenta.VentanaActiva = Me
    
    Set Inventario = New ClassControlGeneralNumber
    Set Inventario.TextBoxControl = TextBoxInventarioG
    Set Inventario.VentanaActiva = Me
    
    Set MinimoStock = New ClassControlGeneralNumber
    Set MinimoStock.TextBoxControl = TextBoxMinimoStockL
    Set MinimoStock.VentanaActiva = Me
    
    Set Descuento = New ClassControlPercent
    Set Descuento.TextBoxControl = TextBoxDescuentoF
    Set Descuento.VentanaActiva = Me
    
    Set Impuesto = New ClassControlPercent
    Set Impuesto.TextBoxControl = TextBoxImpuestoI
    Set Impuesto.VentanaActiva = Me
    
    Dim ArrayUnidades As Variant
    ArrayUnidades = ArrayUniqueValues(Worksheets("Miscelaneos"), "B")
    TextBoxUnidadC.List = ArrayUnidades
    
    Dim ArrayCategorias As Variant
    ArrayCategorias = ArrayUniqueValues(Worksheets("Miscelaneos"), "D")
    TextBoxCategoriaK.List = ArrayCategorias
    
    Dim ArrayMarcas As Variant
    ArrayMarcas = ArrayUniqueValues(Worksheets("Miscelaneos"), "J")
    TextBoxMarcaN.List = ArrayMarcas
    
    Dim ArrayConceptoImpuesto As Variant
    ArrayConceptoImpuesto = ArrayUniqueValues(Worksheets("Miscelaneos"), "F")
    TextBoxConceptoImpuestoJ.List = ArrayConceptoImpuesto
        
End Sub

Private Sub UserForm_Activate()
    
    If ThisWorkbook.ReadOnly = True Then
        Me.Caption = "Read-Only Error!!!"
    End If
    
    If Inicio = True Then
        Inicio = False
    
        Dim Codigos As Worksheet
        Dim UltimoRenglon As Long
        Dim RangoId As Range
        
        Set Codigos = Worksheets("Articulos")
        ArchivoSeleccion = ""
        
        If IdCodigo = 0 Then
        
            Me.Caption = "Nuevo Registro"
            RenglonItem = GetLastRow(Codigos) + 1
            Set RangoId = Codigos.Range("A:A")
            IdCodigo = Application.WorksheetFunction.Max(RangoId) + 1
            
            TextBoxIdCodigoA = IdCodigo
            TextBoxRenglonItem = RenglonItem
            UnitarioCompra.SetValue 0
            UnitarioVenta.SetValue 0
            Inventario.SetValue 0
            MinimoStock.SetValue 0
            Descuento.SetValue 0
            Impuesto.SetValue 0
            
            OrdenP = 0
            
        Else
            Me.Caption = "Modificar Registro"
            RenglonItem = GetRowItem(IdCodigo, Codigos, "A")
            
            If RenglonItem = 0 Then
                Unload Me
            End If
            
            ArchivoImagen = Trim(ThisWorkbook.Path & "\Tools\Images\" & IdCodigo & ".jpg")
            If Dir(ArchivoImagen) <> "" Then
                Set ImageItem.Picture = LoadPicture(ArchivoImagen)
                FrameImagen.Repaint
            End If
            
            TextBoxIdCodigoA = Codigos.Range("A" & RenglonItem).Value
            TextBoxArticuloB = Codigos.Range("B" & RenglonItem).Value
            TextBoxUnidadC = Codigos.Range("C" & RenglonItem).Value
            UnitarioCompra.SetValue Codigos.Range("D" & RenglonItem).Value
            UnitarioVenta.SetValue Codigos.Range("E" & RenglonItem).Value
            Descuento.SetValue Codigos.Range("F" & RenglonItem).Value
            TextBoxInventarioG = Codigos.Range("G" & RenglonItem).Value
            'TextBoxGananciaH = Codigos.Range("H" & RenglonItem).Value
            Impuesto.SetValue Codigos.Range("I" & RenglonItem).Value
            TextBoxConceptoImpuestoJ = Codigos.Range("J" & RenglonItem).Value
            TextBoxCategoriaK = Codigos.Range("K" & RenglonItem).Value
            TextBoxMinimoStockL = Codigos.Range("L" & RenglonItem).Value
            TextBoxBusquedaAlternaM = Codigos.Range("M" & RenglonItem).Value
            TextBoxMarcaN = Codigos.Range("N" & RenglonItem).Value
            TextBoxUbicacionO = Codigos.Range("O" & RenglonItem).Value
            
            OrdenP = CDbl(Codigos.Range("P" & RenglonItem).Value)
            
            TextBoxRenglonItem = RenglonItem
            
        End If
        
        TextBoxArticuloB.SetFocus
            
    End If
End Sub

Private Sub CommandButtonColocarImagen_Click()

    On Error GoTo salir
    
    If RenglonItem > 0 Then
        ArchivoSeleccion = Application.GetOpenFilename("JPG Files (*.jpg), *.jpg")
        If ArchivoSeleccion <> False Then
            Set ImageItem.Picture = LoadPicture(ArchivoSeleccion)
            FrameImagen.Repaint
        Else
            ArchivoSeleccion = ""
        End If
    Else
        MsgBox "Selecciona primero un item"
    End If
    Exit Sub
salir:
    MsgBoxCentered "Error al cargar archivo, seleccione otro archivo!!", vbInformation, Me
    
End Sub

Private Sub CommandButtonGuardarRegistro_Click()
    Dim Codigos As Worksheet
    
    If TextBoxArticuloB = "" Then
        TextBoxArticuloB.SetFocus
        Exit Sub
    End If
    
    If UnitarioCompra.GetValue = 0 Then
        TextBoxUnitarioCompraD.SetFocus
        Exit Sub
    End If
    If UnitarioVenta.GetValue = 0 Then
        TextBoxUnitarioVentaE.SetFocus
        Exit Sub
    End If
    If TextBoxCategoriaK = "" Then
        TextBoxCategoriaK.SetFocus
        TextBoxCategoriaK.DropDown
        Exit Sub
    End If
    If TextBoxUnidadC = "" Then
        TextBoxUnidadC.SetFocus
        TextBoxUnidadC.DropDown
        Exit Sub
    End If
    
    Confirmacion = MsgBoxCentered("Desea actualizar los cambios", vbYesNo, Me)
    If Confirmacion = vbYes Then
        If RenglonItem > 0 Then
            Set Codigos = MyBook.Worksheets("Articulos")
        
            Codigos.Range("A" & RenglonItem) = TextBoxIdCodigoA.Value
            Codigos.Range("B" & RenglonItem) = TextBoxArticuloB
            Codigos.Range("C" & RenglonItem) = TextBoxUnidadC
            Codigos.Range("D" & RenglonItem) = UnitarioCompra.GetValue
            Codigos.Range("E" & RenglonItem) = UnitarioVenta.GetValue
            Codigos.Range("F" & RenglonItem) = Descuento.GetValue
            Codigos.Range("G" & RenglonItem) = Inventario.GetValue
            Codigos.Range("I" & RenglonItem) = Impuesto.GetValue
            Codigos.Range("J" & RenglonItem) = TextBoxConceptoImpuestoJ
            Codigos.Range("K" & RenglonItem) = TextBoxCategoriaK
            Codigos.Range("L" & RenglonItem) = MinimoStock.GetValue
            Codigos.Range("M" & RenglonItem) = TextBoxBusquedaAlternaM
            Codigos.Range("N" & RenglonItem) = TextBoxMarcaN
            Codigos.Range("O" & RenglonItem) = TextBoxUbicacionO
            Codigos.Range("P" & RenglonItem) = Date + Time
            
            If OrdenP <> 0 Then
                Codigos.Range("P" & RenglonItem) = OrdenP
            Else
                Codigos.Range("P" & RenglonItem) = CDbl(Date) * -1 + CDbl(Time) * -1
            End If
            If ArchivoSeleccion <> False Then
                
                ArchivoImagen = ThisWorkbook.Path & "\Tools\Images\" & TextBoxIdCodigoA & ".jpg"
                If Dir(ArchivoImagen) <> "" Then
                
                    ArchivoRespaldo = ThisWorkbook.Path & "\Tools\Backup Images\Backup " & CDbl(Date + Time) & ".jpg"
                    FileCopy ArchivoImagen, ArchivoRespaldo
                    
                End If
            
                FileCopy ArchivoSeleccion, ArchivoImagen
                Kill ArchivoSeleccion
                
            End If
            RegisterModified = True
            ActiveWorkbook.Save
            Me.Hide
        End If
    End If

End Sub

Private Sub CommandButtonVerImagen_Click()

    If TextBoxId <> 0 And TextBoxId <> "" Then
        VerImagen.RenglonImagen = TextBoxId
        Set VerImagen.ImageHerramienta.Picture = FormaCodigos.ImagenPrincipal.Picture
        VerImagen.Top = FormaCodigos.Top
        VerImagen.Left = FormaCodigos.Left
        VerImagen.Show
    End If
    
End Sub

Private Sub CommandButtonWindowConfig_Click()

    ZConfigWindow.RenglonVentana = 17
    Set ZConfigWindow.VentanaActiva = Me
    ZConfigWindow.Show
    
End Sub

Private Sub ImagenPrincipal_Click()
    If TextBoxId <> 0 And TextBoxId <> "" Then
        VerImagen.RenglonImagen = TextBoxId
        Set VerImagen.ImageHerramienta.Picture = FormaCodigos.ImagenPrincipal.Picture
        VerImagen.Top = FormaCodigos.Top
        VerImagen.Left = FormaCodigos.Left
        VerImagen.Show
    End If
End Sub

Private Sub TextBoxE_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If IsNumeric(TextBoxE) Then
        TextBoxE = Format(TextBoxE, "currency")
    
    End If
End Sub

Private Sub BotonImagen_Click()
    ClaveImagen = TextBoxC.Value
    VentanaImagen.Show

End Sub

Private Sub BotonPreferencias_Click()
    VentanaPreferencias.Show
End Sub

Private Sub CommandButton2_Click()
    BuscarCodigo.MultiLine = False
    BuscarCodigo.TabKeyBehavior = False
    BuscarCodigo.EnterKeyBehavior = False
    
    UserFormAyuda.Show
End Sub

Private Sub CommandButtonMisImagenes_Click()

    Ruta = ThisWorkbook.Path
    On Error GoTo salir
     RutaCompleta = Ruta & "\Tools\Images\"
     If Dir(RutaCompleta, vbDirectory) <> "" Then
        ActiveWorkbook.FollowHyperlink Address:=RutaCompleta, NewWindow:=True
     Else
        MsgBox "Directorio no existe: " & RutaCompleta
        MsgBox "Tus imagenes deben estar en este folder: " & RutaCompleta
     End If
salir:

End Sub
Attribute VB_Name = "Hoja1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "MenuArticulos"
Attribute VB_Base = "0{945F7B99-547A-48FF-B463-8514CB91A9F3}{DF254388-1B1B-4330-8533-8FCC1DBA3B19}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim MyBook As Workbook
Dim Inicio As Boolean
Dim ActiveControlHistory As Object
Dim ActualizarLista As Boolean
Public ActiveCodigo As String
Dim ArrayClassArticulo_Erased As Boolean

Dim OrderRows As ClassArrayOrderRows
Dim ArrayClassArticulo() As New ClassArticulo
Dim ArrayClassCategorias() As New ClassCategoria
Dim ControlLabel As MSForms.Label
Dim IndexControl As Collection

Dim ControlCommandButton As MSForms.CommandButton    'a prueba

Dim BotonImagen As Object
Dim BotonMenu As Object
Dim Tama|fffd|oBytes As Double
Dim VentaActiva As Boolean

Dim TextBoxCantidad As Object
Dim ComboBoxCategoria As String

Dim ContadorRegistros As Long
Dim ContadorLineaExcel As Long
Dim ContadorGlobal As Long
Dim TextoBusqueda As String

Dim ArrayPalabras As Variant
Dim ArrayCategoria As Variant

Dim DoEventsActivate As Boolean
Dim IniciarBusqueda As Boolean
Dim TotalRegistros As Long
Dim ContarImagenesA|fffd|adidas As Long

Public Sub CambiarCategoria(CategoriaTemp As String)

    ComboBoxCategoria = CategoriaTemp
    IniciarBusqueda = True
    
End Sub

Private Sub UserForm_Initialize()

    Set MyBook = ThisWorkbook
    ActualizarLista = True
    ContadorLineaExcel = 2
    
    ReDim ArrayPalabras(0)
    ReDim ArrayCategoria(0)
    ReDim MenuArticulos_ArrayVenta(0)
    
    Inicio = True
    If Worksheets("Preferencias").Range("B24") <> "" Then
            
        Me.Top = Worksheets("Preferencias").Range("B24").Value
        Me.Left = Worksheets("Preferencias").Range("C24").Value
        Me.Height = Worksheets("Preferencias").Range("D24").Value
        Me.Width = Worksheets("Preferencias").Range("E24").Value
        Me.Zoom = Worksheets("Preferencias").Range("F24").Value
        
    Else
        
        Me.StartUpPosition = 2
        
    End If
End Sub

Private Sub UserForm_Activate()

    If Inicio = True Then
        MyBook.Activate
        VentaActiva = False
        Inicio = False
        If AVenta.Visible = False Then
            Me.CommandButtonSeleccionar.Visible = False
        End If
        ReDim ArrayClassArticulo(0)
        ArrayClassArticulo_Erased = False
        Set MenuArticulos_ActiveCategoria = Nothing
        Set MenuArticulos_ActiveItem = Nothing
        Set ActiveControlHistory = Nothing
        
        IniciarPedido
        
        Set OrderRows = New ClassArrayOrderRows
        OrderRows.SetValues Worksheets("Articulos"), "P"
                
        ActualizarCategorias
        
        IniciarBusqueda = True
        DoEventsActivate = True
        TextBoxBusqueda.SetFocus
        
        Do Until Not DoEventsActivate
            DoEvents
            PrepararBusqueda
            UserformRellenarLista
            
            If Not Me.FrameListaMusica.ActiveControl Is Nothing Then
                If Me.FrameListaMusica.ActiveControl.Tag = "Menu" Then
                    If Not ActiveControlHistory Is Me.FrameListaMusica.ActiveControl Then
                        For Contador = 1 To UBound(ArrayClassArticulo)
                            If Me.FrameListaMusica.ActiveControl Is ArrayClassArticulo(Contador).MenuItem Then
                                ActualizarTextboxs ArrayClassArticulo(Contador).IdCodigoItem
    
                                If Not MenuArticulos_ActiveItem Is Nothing Then
    
                                    MenuArticulos_ActiveItem.ControlImagen.SpecialEffect = fmSpecialEffectFlat
    
                                End If
                                ArrayClassArticulo(Contador).ControlImagen.SpecialEffect = fmSpecialEffectRaised
                                Set MenuArticulos_ActiveItem = ArrayClassArticulo(Contador)
                                
                                ArrayClassArticulo(Contador).MenuItem.SetFocus
                                
                                NewIndex = 1
                                For CounterIndex = Contador To UBound(ArrayClassArticulo)
                                    ArrayClassArticulo(CounterIndex).MenuItem.TabStop = True
                                    ArrayClassArticulo(CounterIndex).MenuItem.TabIndex = NewIndex + 1
                                    NewIndex = NewIndex + 1
                                Next
    
                            End If
                        Next
                        Set ActiveControlHistory = Me.FrameListaMusica.ActiveControl
                    End If
                End If
                
            End If
            
        Loop
        
        LiberarMemoria
        Unload Me
    End If
    
End Sub

Private Sub IniciarPedido()

    Dim IdCodeMax As Long
    Dim ContarItem As Long
    Set RangoTemp = Worksheets("Articulos").Range("A:A")
    IdCodeMax = Application.WorksheetFunction.Max(RangoTemp)
    If IdCodeMax > 0 Then
        ReDim MenuArticulos_ArrayVenta(1 To 2, 1 To IdCodeMax)
        For ContarItem = 1 To IdCodeMax
            MenuArticulos_ArrayVenta(2, ContarItem) = 0
        Next
    End If

End Sub

Public Property Get FindeLista() As Boolean
    FindeLista = ActualizarLista
End Property

Public Sub ActualizarTextboxs(IdCodigoFind As Long)

    Dim CeldaRenglon
    CeldaRenglon = GetRowItem(IdCodigoFind, Worksheets("Articulos"), "A")

    MenuArticulos.LabelDescripcion.Caption = "Descripci|fffd|n:   " & Worksheets("Articulos").Range("B" & CeldaRenglon).Value
    MenuArticulos.LabelInventario.Caption = "Inventario:   " & Worksheets("Articulos").Range("G" & CeldaRenglon).Value
    MenuArticulos.LabelUnitario.Caption = "Unitario: " & FormatoMoneda(Worksheets("Articulos").Range("E" & CeldaRenglon).Value, Worksheets("Preferencias").Range("B4").Value, 20)
    MenuArticulos.LabelCodigo.Caption = "Id Code:   " & Worksheets("Articulos").Range("A" & CeldaRenglon).Value
    MenuArticulos.LabelCategoria.Caption = "Categor|fffd|a:   " & Worksheets("Articulos").Range("K" & CeldaRenglon).Value

End Sub

Private Sub CommandButtonAyuda_Click()
    zLogin.SetClassWindow 2
    zLogin.Show
End Sub

Private Sub CommandButtonColocarImagen_Click()
    If Not MenuArticulos_ActiveItem Is Nothing Then
        If Not MenuArticulos_ActiveItem.IsDeleted Then
                MenuArticulos_ActiveItem.AgregarImagen
        End If
    Else
        MsgBoxCentered "Seleccione un articulo!!!", vbInformation, Me
    End If
End Sub

Private Sub CommandButtonEditarItem_Click()
    If Not MenuArticulos_ActiveItem Is Nothing Then
        If Not MenuArticulos_ActiveItem.IsDeleted Then
        
                Herramientas.SetCodigo MenuArticulos_ActiveItem.IdCodigoItem
                Herramientas.Show
                Unload Herramientas
                ActualizarCategorias
        End If
    Else
        MsgBoxCentered "Seleccione un art|fffd|culo!!!", vbInformation, Me
        
    End If
    
    Set MenuArticulos_ActiveCategoria = Nothing
    Set MenuArticulos_ActiveItem = Nothing
End Sub

Private Sub CommandButtonEliminarItem_Click()
    If Not MenuArticulos_ActiveItem Is Nothing Then
        If Not MenuArticulos_ActiveItem.IsDeleted Then
        
            Item = Worksheets("Articulos").Range("B" & MenuArticulos_ActiveItem.CeldaRenglon)
            
            Confirmacion = MsgBoxCentered("Desea eliminar " & Item, vbYesNo, Me)
            If Confirmacion = vbYes Then
                
                MenuArticulos_ActiveItem.EliminarItem
                OrderRows.Reordenar
                
            End If
            
        End If
    Else
        MsgBoxCentered "Seleccione un art|fffd|culo!!!", vbInformation, Me
    End If
    
    Set MenuArticulos_ActiveCategoria = Nothing
    Set MenuArticulos_ActiveItem = Nothing
End Sub

Private Sub CommandButtonNuevoRegistro_Click()
    
    Herramientas.SetCodigo 0
    Herramientas.Show
    Unload Herramientas
    
    ActualizarCategorias
    OrderRows.Reordenar
    IniciarPedido
    
    Set MenuArticulos_ActiveCategoria = Nothing
    Set MenuArticulos_ActiveItem = Nothing
    
End Sub

Private Sub CommandButtonPrimeros_Click()
     If Not MenuArticulos_ActiveItem Is Nothing Then
        If Not MenuArticulos_ActiveItem.IsDeleted Then
        
            Item = Worksheets("Articulos").Range("B" & MenuArticulos_ActiveItem.CeldaRenglon)
            
            Confirmacion = MsgBoxCentered("Colocar en favoritos? " & Item, vbYesNo, Me)
            If Confirmacion = vbYes Then
                
                Worksheets("Articulos").Range("P" & MenuArticulos_ActiveItem.CeldaRenglon) = CDbl(Date) * -1 + CDbl(Time) * -1
                OrderRows.Reordenar
                ThisWorkbook.Save
                
            End If
            
        End If
    Else
        MsgBoxCentered "Seleccione un art|fffd|culo!!!", vbInformation, Me
    End If
End Sub

Private Sub CommandButtonSeleccionar_Click()
    VentaActiva = True
    DoEventsActivate = False
End Sub

Private Sub CommandButtonUltimos_Click()
    If Not MenuArticulos_ActiveItem Is Nothing Then
        If Not MenuArticulos_ActiveItem.IsDeleted Then
        
            Item = Worksheets("Articulos").Range("B" & MenuArticulos_ActiveItem.CeldaRenglon)
            
            Confirmacion = MsgBoxCentered("Colocar en No favoritos? " & Item, vbYesNo, Me)
            If Confirmacion = vbYes Then
                
                Worksheets("Articulos").Range("P" & MenuArticulos_ActiveItem.CeldaRenglon) = CDbl(Date) + CDbl(Time)
                OrderRows.Reordenar
                ThisWorkbook.Save
                
            End If
            
        End If
    Else
        MsgBoxCentered "Seleccione un art|fffd|culo!!!", vbInformation, Me
    End If
End Sub


Private Sub OptionButtonAllItems_Change()
    IniciarBusqueda = True
End Sub

Private Sub OptionButtonInventory_Change()
    IniciarBusqueda = True
End Sub

Private Sub OptionButtonNoInventory_Change()
    IniciarBusqueda = True
End Sub


Private Sub OptionButtonPorValor_Click()
    If OptionButtonPorValor = True Then
        TextBoxPorValor.Locked = False
    End If
End Sub

Private Sub TextBoxBusqueda_Change()

    TextBoxBusqueda.Text = VBA.Replace(TextBoxBusqueda.Text, VBA.Chr(9), "")
    TextBoxBusqueda.Text = VBA.Replace(TextBoxBusqueda.Text, "  ", "")
    
    IniciarBusqueda = True
    
    CambiarCategoria ""
    If Not MenuArticulos_ActiveCategoria Is Nothing Then
        
        MenuArticulos_ActiveCategoria.ForeColor = vbBlack
        MenuArticulos_ActiveCategoria.Font.Underline = False
        
    End If
    
    Set MenuArticulos_ActiveItem = Nothing
    
    LabelInventario.Caption = "Inventario"
    LabelDescripcion.Caption = "Descripci|fffd|n"
    LabelCodigo.Caption = "C|fffd|digo"
    LabelUnitario.Caption = "Unitario"
    LabelCategoria.Caption = "Categor|fffd|a"
    
End Sub
Private Sub PrepararBusqueda()
    
    If IniciarBusqueda = False Then
        Exit Sub
    End If
    
    Dim SepararPalabras As String
    
    SepararPalabras = QuitarSimbolos(TextBoxBusqueda.Text)
    ArrayPalabras = TextoAPalabras(SepararPalabras)
    
    SepararPalabras = QuitarSimbolos(ComboBoxCategoria)
    ArrayCategoria = TextoAPalabras(SepararPalabras)
    
    LiberarMemoria
    Tama|fffd|oBytes = 0
    
    Erase ArrayClassArticulo
    ArrayClassArticulo_Erased = True
    FrameListaMusica.Controls.Clear
    
    Set MenuArticulos_ActiveItem = Nothing
    
    ContadorRegistros = 0
    ContarImagenesA|fffd|adidas = 0
    
    ContadorLineaExcel = 0
    TotalRegistros = OrderRows.TotalRows

    IniciarBusqueda = False
        
End Sub
Private Sub LiberarMemoria()
    Dim IdContador As Long
    If ArrayClassArticulo_Erased = False Then
        If UBound(ArrayClassArticulo) <> 0 Then
            For IdContador = LBound(ArrayClassArticulo, 1) To UBound(ArrayClassArticulo, 1)
                ArrayClassArticulo(IdContador).RegistroLiberar   ' Liberar Memoria
            Next
            
        End If
    End If
End Sub

Public Sub UserformRellenarLista()
    Dim NombredeArchivo As String
    ContadorLineaExcel = ContadorLineaExcel + 1
    If ContadorLineaExcel > TotalRegistros Then
        Exit Sub
    End If
    
    Dim ColumnaPosicion As Long
    Dim ContarTrues As Long
    Dim PalabrasOK As Boolean
    Dim CategoriasOK As Boolean
    Dim Inventario As Double
    Dim Unitario As Double
    Dim CompararPalabra As String
    Dim PalabraTemp As String
    Dim CategoriaTemp As String

    CompararPalabra = QuitarSimbolos(Worksheets("Articulos").Range("B" & OrderRows.GetRow(ContadorLineaExcel)) & " " & Worksheets("Articulos").Range("C" & OrderRows.GetRow(ContadorLineaExcel)) & " " & Worksheets("Articulos").Range("K" & OrderRows.GetRow(ContadorLineaExcel)) & " " & Worksheets("Articulos").Range("M" & OrderRows.GetRow(ContadorLineaExcel)))
    Inventario = Worksheets("Articulos").Range("G" & OrderRows.GetRow(ContadorLineaExcel)).Value
    Unitario = Worksheets("Articulos").Range("E" & OrderRows.GetRow(ContadorLineaExcel)).Value

    PalabrasOK = True
    If UBound(ArrayPalabras) <> 0 Then
    For ContarTrues = 1 To UBound(ArrayPalabras)
        PalabraTemp = ArrayPalabras(ContarTrues)
        If Not InStr(1, CompararPalabra, Trim(QuitarSimbolos(PalabraTemp)), vbTextCompare) > 0 Then
            PalabrasOK = False
        End If
    Next
    End If
    
    If Trim(Worksheets("Articulos").Range("K" & OrderRows.GetRow(ContadorLineaExcel))) = "" Then
        CompararCategoria = "Sin Categoria"
    Else
        CompararCategoria = QuitarSimbolos(Worksheets("Articulos").Range("K" & OrderRows.GetRow(ContadorLineaExcel)))
    End If
    
    CategoriasOK = True
    If UBound(ArrayCategoria) <> 0 Then
    For ContarTrues = 1 To UBound(ArrayCategoria)
        CategoriaTemp = ArrayCategoria(ContarTrues)
        If Not InStr(1, CompararCategoria, Trim(QuitarSimbolos(CategoriaTemp)), vbTextCompare) > 0 Then
            CategoriasOK = False
        End If
    Next
    End If
    
    If OptionButtonAllItems = False Then
        If OptionButtonInventory = True Then
            If Not Inventario > 0 Then
                Exit Sub
            End If
        End If
        If OptionButtonNoInventory = True Then
            If Not Inventario <= 0 Then
                Exit Sub
            End If
        End If
        If OptionButtonUnitarioMenorQue = True Then
            If Unitario >= TextBoxUnitarioMenorQue.Value Then
                Exit Sub
            End If
        End If
        
        If OptionButtonUnitarioMayorQue = True Then
            If Unitario <= TextBoxUnitarioMayorQue.Value Then
                Exit Sub
            End If
        End If
        
    End If
    
    If PalabrasOK And CategoriasOK Then
        ContarImagenesA|fffd|adidas = ContarImagenesA|fffd|adidas + 1
        ColumnaPosicion = (ContarImagenesA|fffd|adidas - 1) Mod 5
        ColumnaPosicion = ColumnaPosicion * 150
        ContadorRegistros = ContadorRegistros + 1
        RenglonPosicion = Int((ContadorRegistros - 1) / 5)
        
        ReDim Preserve ArrayClassArticulo(1 To ContadorRegistros)
        ArrayClassArticulo_Erased = False
        
        Set ControlImagenes = Me.FrameListaMusica.Controls.Add("Forms.Image.1", "Image1")
        With ControlImagenes
            .Top = RenglonPosicion * 160 + 15
            .Left = ColumnaPosicion + 15
            .Height = 140
            .Width = 140
            .ControlTipText = Worksheets("Articulos").Range("B" & OrderRows.GetRow(ContadorLineaExcel)) & " - " & Worksheets("Articulos").Range("K" & OrderRows.GetRow(ContadorLineaExcel))
        End With
        ControlImagenes.BorderStyle = fmBorderStyleNone
        
        Set TextBoxCantidad = Me.FrameListaMusica.Controls.Add("Forms.Textbox.1", "Texbox1")
        With TextBoxCantidad
            .Top = RenglonPosicion * 160 + 10
            .Left = ColumnaPosicion + 10
            .Height = 30
            .Width = 30
            .Font.Name = "Tahoma"
            .Font.Size = 14
            .Font.Bold = True
            
            If UBound(MenuArticulos_ArrayVenta) > 0 Then

                If MenuArticulos_ArrayVenta(2, Worksheets("Articulos").Cells(OrderRows.GetRow(ContadorLineaExcel), 1).Value) > 0 Then
                    .Visible = True
                    TextBoxCantidad = MenuArticulos_ArrayVenta(2, Worksheets("Articulos").Cells(OrderRows.GetRow(ContadorLineaExcel), 1).Value)
                Else
                    .Visible = False
                End If
            End If
            
        End With
        
        Set BotonMenu = Me.FrameListaMusica.Controls.Add("Forms.CommandButton.1", "cmdOne")
        With BotonMenu
            .Top = RenglonPosicion * 160 + 10 + 150 - 10 '+ 90
            .Left = ColumnaPosicion + 10 + 10 '+ 140
            .Width = 300
            .Height = 5
            .Width = 15
            .Tag = "Menu"
            .TabStop = False
        End With

        NombredeArchivo = ThisWorkbook.Path & "\Tools\Images\" & Worksheets("Articulos").Cells(OrderRows.GetRow(ContadorLineaExcel), 1).Value & ".jpg"

        If Dir(NombredeArchivo) <> "" Then
            Set ControlImagenes.Picture = LoadPicture(NombredeArchivo)
            Tama|fffd|oBytes = Tama|fffd|oBytes + FileLen(NombredeArchivo)
            LabelMemoryUsed.Caption = "Image size: " & Format(Tama|fffd|oBytes / 1024 / 1024, "#,##0.00") & " MBytes. Images " & ContadorRegistros
        Else
            Set ControlImagenes.Picture = ImageColocarFoto.Picture
        End If
        ControlImagenes.PictureSizeMode = fmPictureSizeModeZoom
        
        Set ArrayClassArticulo(ContadorRegistros).RegistroActual = ArrayClassArticulo(ContadorRegistros)
        Set ArrayClassArticulo(ContadorRegistros).ControlImagen = ControlImagenes
        Set ArrayClassArticulo(ContadorRegistros).MenuItem = BotonMenu
        Set ArrayClassArticulo(ContadorRegistros).FrameLabel = ControlFrame
        Set ArrayClassArticulo(ContadorRegistros).ControlTextBox = TextBoxCantidad
        Set ArrayClassArticulo(ContadorRegistros).VentanaActual = Me
        
        Set ControlImagenes = Nothing
        Set BotonMenu = Nothing
        Set TextBoxCantidad = Nothing

        ArrayClassArticulo(ContadorRegistros).CeldaRenglon = OrderRows.GetRow(ContadorLineaExcel)
        ArrayClassArticulo(ContadorRegistros).IdCodigoItem = Worksheets("Articulos").Range("A" & OrderRows.GetRow(ContadorLineaExcel))

        Me.FrameListaMusica.ScrollHeight = RenglonPosicion * 160 + 10 + 150 + 10
        
    End If
        
End Sub

Private Sub TextBoxUnitarioMayorQue_Change()
    IniciarBusqueda = True
End Sub

Private Sub TextBoxUnitarioMayorQue_Enter()
    OptionButtonUnitarioMayorQue.Value = True
End Sub

Private Sub TextBoxUnitarioMayorQue_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    Dim TextBoxNumerico As Object
    Set TextBoxNumerico = TextBoxUnitarioMayorQue   'Cambiar Nombre de Control
    Select Case KeyAscii
    Case Asc("0") To Asc("9")
'    Case Asc("-")
'        If InStr(1, TextBoxCantidad.Text, "-") > 0 Or TextBoxCantidad.SelStart > 0 Then
'            KeyAscii = 0
'        End If
    Case Asc(".")
        If TextBoxNumerico.SelLength <> Len(TextBoxNumerico.Text) Then
            If InStr(1, TextBoxNumerico.Text, ".") > 0 Then
                KeyAscii = 0
            End If
        End If
    Case Else
        KeyAscii = 0
    End Select
End Sub

Private Sub TextBoxUnitarioMayorQue_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    With TextBoxUnitarioMayorQue
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Private Sub TextBoxUnitarioMenorQue_Change()
    IniciarBusqueda = True
End Sub

Private Sub TextBoxUnitarioMenorQue_Enter()

    OptionButtonUnitarioMenorQue.Value = True
    
End Sub

Private Sub TextBoxUnitarioMenorQue_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    Dim TextBoxNumerico As Object
    Set TextBoxNumerico = TextBoxUnitarioMenorQue   'Cambiar Nombre de Control
    Select Case KeyAscii
    Case Asc("0") To Asc("9")
'    Case Asc("-")
'        If InStr(1, TextBoxCantidad.Text, "-") > 0 Or TextBoxCantidad.SelStart > 0 Then
'            KeyAscii = 0
'        End If
    Case Asc(".")
        If TextBoxNumerico.SelLength <> Len(TextBoxNumerico.Text) Then
            If InStr(1, TextBoxNumerico.Text, ".") > 0 Then
                KeyAscii = 0
            End If
        End If
    Case Else
        KeyAscii = 0
    End Select
End Sub

Private Sub TextBoxUnitarioMenorQue_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    With TextBoxUnitarioMenorQue
        .SelStart = 0
        .SelLength = Len(.Text)
    End With
End Sub

Public Sub ActualizarCategorias()

    Dim ContadorCategoria As Long
    Dim ColumnaPosicion As Long
    Dim ContarTrues As Long
    Dim PalabrasOK As Boolean
    Dim CategoriasOK As Boolean
    Dim ArrayPalabras As Variant
    Dim ArrayCategorias() As Variant
    Dim Categoria As String
    
    Dim ContarImagenesA|fffd|adidasCAT As Long
    Dim ContadorLineaExcelCAT As Long
    Dim ContadorRegistrosCAT As Long
    
    FrameCategorias.Clear
    ContarImagenesA|fffd|adidasCAT = 0
    ContadorLineaExcelCAT = 0
    ContadorRegistrosCAT = 0
    
    ArrayCategorias = ArrayUniqueValues(Worksheets("Articulos"), "K")
    If UBound(ArrayCategorias) = 0 Then
        Exit Sub
    End If
    
    For ContadorCategoria = LBound(ArrayCategorias) To UBound(ArrayCategorias) + 1
        
        If ContadorCategoria = UBound(ArrayCategorias) + 1 Then
            Categoria = "Sin Categoria"
        Else
            If UBound(ArrayCategorias) = 1 Then
                Categoria = ArrayCategorias(1)
            Else
                Categoria = ArrayCategorias(ContadorCategoria, 1)
            End If
        End If
            
            ContarImagenesA|fffd|adidasCAT = ContarImagenesA|fffd|adidasCAT + 1
            ColumnaPosicion = 1
            ColumnaPosicion = ColumnaPosicion * 20
            ContadorRegistrosCAT = ContadorRegistrosCAT + 1
            RenglonPosicion = ContadorRegistrosCAT
            
            ReDim Preserve ArrayClassCategorias(1 To ContadorRegistrosCAT)
            
            Set ControlLabel = Me.FrameCategorias.Controls.Add("Forms.Label.1", "Label")
            
            With ControlLabel
                .Font.Name = "Tahoma"
                .Font.Bold = False
                .Font.Size = 12
                .Caption = Categoria
                .Top = RenglonPosicion * 30 - 10 '35
                .Left = 20
                .Height = 30
                .Width = 200
            End With
            
            Set ArrayClassCategorias(ContadorRegistrosCAT).ControlLabel = ControlLabel
            ArrayClassCategorias(ContadorRegistrosCAT).CeldaRenglon = ContadorLineaExcelCAT
        
            Me.FrameCategorias.ScrollHeight = RenglonPosicion * 35 + 10 + 20
            
        ContadorLineaExcelCAT = ContadorLineaExcelCAT + 1
        
    Next ContadorCategoria
    
End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    Me.Caption = "Buscador - Youtube canal - todoenexcel - Versi|fffd|n de Prueba"
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If VentaActiva = False Then
        ReDim MenuArticulos_ArrayVenta(0)
    End If
    If DoEventsActivate = True Then
        DoEventsActivate = False
        Cancel = True
    End If
    
End Sub

Private Sub CommandButtonWindowConfig_Click()
    ZConfigWindow.RenglonVentana = 24
    Set ZConfigWindow.VentanaActiva = Me
    ZConfigWindow.Show
End Sub

Private Sub CommandButtonpreubas_Click()
    Actualizar.Show
    Actualizar.Left = PantallaWidth - 196 - 10
    Actualizar.Top = 10
End Sub
Attribute VB_Name = "MenuExplorador"
Attribute VB_Base = "0{2BFBD54B-9689-4AB9-9558-DAA6DC5C223D}{2B95F8F1-1B19-4C69-A128-19B1193CBD59}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim FormatoMostrar As String

Public Function GetFormatoMostrar() As String
    GetFormatoMostrar = FormatoMostrar
End Function

Private Sub UserForm_Initialize()
    If Worksheets("Preferencias").Range("B25") <> "" Then
        
        Me.Top = Worksheets("Preferencias").Range("B25")
        Me.Left = Worksheets("Preferencias").Range("C25")
        Me.Height = Worksheets("Preferencias").Range("D25")
        Me.Width = Worksheets("Preferencias").Range("E25")
        Me.Zoom = Worksheets("Preferencias").Range("F25")
        
    Else
        
        Me.StartUpPosition = 2
        
    End If
End Sub

Private Sub UserForm_Activate()

    FormatoMostrar = ""
    
    CommandButtonChrome.SetFocus

End Sub

Private Sub CommandButtonChrome_Click()
    FormatoMostrar = "Chrome"
    Me.Hide
End Sub

Private Sub CommandButtonFirefox_Click()
    FormatoMostrar = "Firefox"
    Me.Hide
End Sub

Private Sub CommandButtonIExplore_Click()
    FormatoMostrar = "IExplore"
    Me.Hide
End Sub

Private Sub CommandButtonWindowConfig_Click()
    
    ZConfigWindow.RenglonVentana = 25
    Set ZConfigWindow.VentanaActiva = Me
    ZConfigWindow.Show
    
End Sub



Attribute VB_Name = "MenuFormatoPrint"
Attribute VB_Base = "0{E03DAF1F-4586-47FB-84F2-09D7F3F7DA50}{8B70BEB0-FBF5-428E-9BAF-FBFD6CEEC8A6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim FormatoGuardar As String

Public Function GetFormatoGuardar() As String
    GetFormatoGuardar = FormatoGuardar
End Function

Private Sub UserForm_Initialize()
    If Worksheets("Preferencias").Range("B23") <> "" Then
        
        Me.Top = Worksheets("Preferencias").Range("B23")
        Me.Left = Worksheets("Preferencias").Range("C23")
        Me.Height = Worksheets("Preferencias").Range("D23")
        Me.Width = Worksheets("Preferencias").Range("E23")
        Me.Zoom = Worksheets("Preferencias").Range("F23")
        
    Else
        
        Me.StartUpPosition = 2
        
    End If
End Sub

Private Sub UserForm_Activate()

    FormatoGuardar = ""
    CommandButtonGuardar.SetFocus

End Sub

Private Sub CommandButtonExcel_Click()
    FormatoGuardar = "Formato Excel"
    Me.Hide
End Sub

Private Sub CommandButtonGuardar_Click()
    FormatoGuardar = "Solo Guardar"
    Me.Hide
End Sub

Private Sub CommandButtonPDF_Click()
    FormatoGuardar = "Formato PDF"
    Me.Hide
End Sub

Private Sub CommandButtonPrint_Click()
    FormatoGuardar = "Imprimir Reporte"
    Me.Hide
End Sub

Private Sub CommandButtonWindowConfig_Click()
    
    ZConfigWindow.RenglonVentana = 23
    Set ZConfigWindow.VentanaActiva = Me
    ZConfigWindow.Show
    
End Sub

Private Sub CommandButtonXML_Click()
    Dim obj As Object
    On Error Resume Next
    Set obj = CreateObject("Msxml2.DOMDocument.6.0")
    On Error GoTo 0
    If obj Is Nothing Then MsgBox "Microsoft XML v6.0 was not found. Some functions of this application will not be available."
    Set obj = Nothing
End Sub
Attribute VB_Name = "MenuOpciones"
Attribute VB_Base = "0{AF7E529A-83A2-4AC3-85C7-B474D7DADD78}{9536805D-572C-468D-A0D2-2F64FF100356}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim Inicio As Boolean
Dim LayOutWindow As Boolean
Private Sub CommandButton1_Click()

    UserFormAyuda.Show
    
End Sub

Private Sub CommandButton1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MenuOpciones.Caption = "Version"
End Sub


Private Sub CommandButtonClientes_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MenuOpciones.Caption = "Ventana Clientes"
End Sub

Private Sub CommandButtonPreferencias_Click()
    VentanaPreferencias.Show
End Sub

Private Sub CommandButtonPreferencias_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MenuOpciones.Caption = "Preferencias"
End Sub

Private Sub CommandButton3_Click()
        
    Me.Hide
    ControlAsignaciones.Show
    
End Sub

Private Sub CommandButton4_Click()

    Me.Hide
    Ventas.Show
    
End Sub

Private Sub CommandButton2_Click()
    BusquedaxCodigo.Show
    Unload BusquedaxCodigo
End Sub

Private Sub CommandButton7_Click()
    ControlVentas.Show
End Sub

Private Sub CommandButton6_Click()
    ThisWorkbook.Application.Visible = True
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
    Application.DisplayAlerts = True
    
    Worksheets("Inicio").Activate
    Range("A1").Activate
    
    Unload Me
    
End Sub

Private Sub CommandButtonBackupMail_Click()
    RespaldoPorCorreo
End Sub

Private Sub CommandButtonBasicos_Click()
    FrameMenu.ScrollTop = 0
End Sub

Private Sub CommandButtonDevolucion_Click()
    Devoluciones.Show
    Me.Hide
End Sub

Private Sub CommandButtonDevoluciones_Click()
    Devoluciones.Show
End Sub

Private Sub CommandButtonMenu2_Click()
    FrameMenu.ScrollTop = 400
End Sub

Private Sub CommandButton8_Click()
    Compras.Show
End Sub

Private Sub CommandButtonAnalytics_Click()
    Analytics.Show
End Sub

Private Sub CommandButtonEmpleados_Click()
    BusquedaxNombre.Show
    Unload BusquedaxNombre
End Sub

Private Sub CommandButtonProductos_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MenuOpciones.Caption = "Ventana Codigos e Inventario"
End Sub

Private Sub CommandButtonPuntodeVenta_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    MenuOpciones.Caption = "Punto de Venta"
End Sub

Private Sub CommandButtonHerramientas_Click()
    Tools.Show
End Sub

Private Sub CommandButtonMenuItems_Click()
    Load MenuArticulos
    MenuArticulos.Show
End Sub

Private Sub CommandButtonRespaldos_Click()
    
    Dim FolioNuevo As Long
    Dim RutaNombre As String
    Dim RutaCorreo As String
    Dim ArchivoOrigen As String
    Dim FechaSerial As Long
    Dim DeleteTemporaryFiles As String
    Dim ControlCopy As Object
    Set ControlCopy = CreateObject("Scripting.FileSystemObject")
    
    FechaSerial = DateSerial(Year(Date), Month(Date), Day(Date))
    ThisWorkbook.Save
    ArchivoOrigen = ThisWorkbook.Path & "\" & ThisWorkbook.Name
    
    If Dir(ThisWorkbook.Path & "\Tools\Backups\", vbDirectory) = "" Then
        MkDir ThisWorkbook.Path & "\Tools\Backups"
    End If
    
    RutaNombre = ThisWorkbook.Path & "\Tools\Backups\PV Backup " & FormatoFolio(FechaSerial, Date) & " " & Format(Time, "hh-mm") & ".xlsm"
    
    If Dir(RutaNombre) <> "" Then
        Kill RutaNombre
    End If
    ControlCopy.copyfile ArchivoOrigen, RutaNombre, True
    
            RutaCorreo = ThisWorkbook.Path & "\Tools\Correo\PV Backup " & FormatoFolio(FechaSerial, Date) & " " & Format(Time, "hh-mm") & ".xlsm"
            If Dir(ThisWorkbook.Path & "\Tools\Correo\", vbDirectory) = "" Then
                MkDir ThisWorkbook.Path & "\Tools\Correo"
            Else
                DeleteTemporaryFiles = ThisWorkbook.Path & "\Tools\Correo\*.*"
                If Dir(DeleteTemporaryFiles) <> "" Then
                    Kill DeleteTemporaryFiles
                End If
            End If
            ControlCopy.copyfile ArchivoOrigen, RutaCorreo, True
    On Error GoTo salir
            RutaCorreo = ThisWorkbook.Path & "\Tools\Correo"
            ActiveWorkbook.FollowHyperlink Address:=RutaCorreo, NewWindow:=True

    Ruta = ThisWorkbook.Path & "\Tools\Backups\"
    ActiveWorkbook.FollowHyperlink Address:=Ruta, NewWindow:=True

salir:
    
End Sub

Private Sub CommandButtonSalidas_Click()
    Load AVenta
    AVenta.Show
End Sub

Private Sub CommandButtonSalir_Click()

    ThisWorkbook.Application.Visible = True
    ThisWorkbook.Worksheets("Inicio").Activate
    ThisWorkbook.Save
    Application.Quit

End Sub

Private Sub CommandButtonWindowConfig_Click()
    ZConfigWindow.RenglonVentana = 19
    Set ZConfigWindow.VentanaActiva = Me
    ZConfigWindow.Show
End Sub

Private Sub LabelBackups_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

     Dim Ruta As String
     Ruta = ThisWorkbook.Path & "\Tools\Backups\"
     If Dir(Ruta, vbDirectory) <> "" Then
        ActiveWorkbook.FollowHyperlink Address:=Ruta, NewWindow:=True
     End If
     
End Sub

Private Sub UserForm_Initialize()

    Dim ValorFormato As Double
    LayOutWindow = True
    Inicio = True
    
    Worksheets("Preferencias").Range("B2") = SeparadorDecimalSystem
    Worksheets("Preferencias").Range("D2") = SeparadorMilesSystem
    ValorFormato = 232323.23
    
    Worksheets("Preferencias").Range("F2") = Format(ValorFormato, "#,##0.00")
    
    If Worksheets("Preferencias").Range("B19") <> "" Then
        
        Me.Top = Worksheets("Preferencias").Cells(19, 2).Value
        Me.Left = Worksheets("Preferencias").Cells(19, 3).Value
        Me.Height = Worksheets("Preferencias").Cells(19, 4).Value
        Me.Width = Worksheets("Preferencias").Cells(19, 5).Value
        Me.Zoom = Worksheets("Preferencias").Cells(19, 6).Value
    
    Else
    
        Me.StartUpPosition = 2
    
    End If
    
End Sub

Private Sub UserForm_Activate()

    If ThisWorkbook.ReadOnly = True Then
        Me.Caption = "Read-Only Error!!!"
    End If

    ThisWorkbook.Application.Visible = False
    Application.ScreenUpdating = True
    
    Inicio = False
    
    DirectoryValidate "Inventory"
    DirectoryValidate "Facturas"
    DirectoryValidate "Images"
    DirectoryValidate "Tickets"
    DirectoryValidate "Backup Images"
    DirectoryValidate "Ventas"
    DirectoryValidate "Reportes"
    DirectoryValidate "Temporal"
    DirectoryValidate "Analytics"
    
    RespaldoPorDia
    
    CommandButtonMenuItems.SetFocus
    
End Sub
Private Sub RespaldoPorDia()

    Dim OrigenFile As String
    Dim DestinoFile As String
    Dim Archivo As String
    Dim FechaSerial As Long
    Dim RutaNombre As String
    Dim ControlCopy As Object
    Set ControlCopy = CreateObject("Scripting.FileSystemObject")
    
    If Dir(ThisWorkbook.Path & "\Tools\Backups\", vbDirectory) = "" Then
        MkDir ThisWorkbook.Path & "\Tools\Backups"
        MsgBox "Carpeta Backups creado.", vbInformation
    End If
    
    FechaSerial = DateSerial(Year(Date), Month(Date), Day(Date))
    Archivo = ThisWorkbook.Path & "\Tools\Backups\*" & FechaSerial & "*"
    CompararArchivo = Dir(Archivo)
    
''''''''''''' BACKUP
    
    On Error GoTo ErrorAlGuardar
    If CompararArchivo = "" Then
        ThisWorkbook.Save
        OrigenFile = ThisWorkbook.FullName
        DestinoFile = ThisWorkbook.Path & "\Tools\Backups\PV Backup " & FormatoFolio(FechaSerial, Date) & " " & Format(Time, "hh-mm") & ".xlsm"
        ControlCopy.copyfile OrigenFile, DestinoFile, True
    
        MsgBox "Respaldo creado" & RutaNombre, vbInformation
    
    End If
    Exit Sub
    
ErrorAlGuardar:

    MsgBox "Erro al realizar respaldo, descripci|fffd|n del error " & Err.Description
    
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    If Application.Visible = True Then
        Application.Visible = False
    Else
        Application.Visible = True
    End If
End Sub

Private Sub UserForm_Layout()
    If LayOutWindow = True Then
    LayOutWindow = False
    If Inicio = True Then
         
    End If
    End If
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    
    Application.Calculation = xlCalculationAutomatic
    ThisWorkbook.Application.Visible = True
    Application.ScreenUpdating = True
    
End Sub

Attribute VB_Name = "Module1"

Attribute VB_Name = "Printers"
Attribute VB_Base = "0{79F643CB-0CF6-4EA7-A9F3-F19D595C80F2}{D7594A3B-D2A3-4E7F-BDE9-46FAD987C313}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim MyBook As Workbook
Dim Inicio As Boolean

Private Sub UserForm_Initialize()
    Set MyBook = ThisWorkbook
    Inicio = True
End Sub

Private Sub UserForm_Activate()
    If Inicio = True Then
        Inicio = False
        MyBook.Activate
        TextBoxPrinterTickets = Worksheets("Preferencias").Range("B6").Value
        TextBoxHojaTicket.Value = Worksheets("Preferencias").Range("B7").Value
        
        TextBoxPrinterFactura = Worksheets("Preferencias").Range("B8").Value
        TextBoxHojaFactura.Value = Worksheets("Preferencias").Range("B9").Value
        
        TextBoxPrinterCompras = Worksheets("Preferencias").Range("D6").Value
        TextBoxHojaCompras.Value = Worksheets("Preferencias").Range("D7").Value
    End If
End Sub

Private Sub CommandButtonRegistrar_Click()
    
    MyBook.Activate
    Worksheets("Preferencias").Range("B6") = TextBoxPrinterTickets
    Worksheets("Preferencias").Range("B7") = TextBoxHojaTicket.Value
    Worksheets("Preferencias").Range("B8") = TextBoxPrinterFactura
    Worksheets("Preferencias").Range("B9") = TextBoxHojaFactura.Value
    Worksheets("Preferencias").Range("D6") = TextBoxPrinterCompras
    Worksheets("Preferencias").Range("D7") = TextBoxHojaCompras.Value
    ActiveWorkbook.Save
    Me.Hide
    
End Sub

Private Sub CommandButtonConfigTicket_Click()
    TextBoxPrinterTickets = Application.ActivePrinter
    TextBoxHojaTicket = Worksheets("Reporte Ticket").PageSetup.PaperSize
End Sub

Private Sub CommandButtonConfigFactura_Click()
    TextBoxPrinterFactura = Application.ActivePrinter
    TextBoxHojaFactura = Worksheets("Reporte Venta").PageSetup.PaperSize
End Sub

Private Sub CommandButtonConfigCompras_Click()
    TextBoxPrinterCompras = Application.ActivePrinter
    TextBoxHojaCompras = Worksheets("Reporte Compra").PageSetup.PaperSize
End Sub

Attribute VB_Name = "Reporte"
Attribute VB_Base = "0{04C6D9DC-C828-48BF-BD71-B75554B0A592}{E1CFF58A-AFDA-449E-BB79-00B70CE583C6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim ArchivoPrincipal As Workbook
Dim ArrayFechas As Variant
Dim IdFechaReporte As Long

Private Sub UserForm_Initialize()
    Set ArchivoPrincipal = ThisWorkbook
End Sub

Private Sub UserForm_Activate()
    ArchivoPrincipal.Activate
    Dim UltimoRenglon As Long

    Dim RangeBase As Range
    Dim Reporte As Worksheet
    
    Set Reporte = NuevaHoja("Temporal")
    
    Reporte.Activate
    Reporte.Range("A:Z").ColumnWidth = 30
    Reporte.Range("A:AZ").Clear
    UltimoRenglon = GetLastRow(Worksheets("Ventas"))
    If UltimoRenglon < 2 Then
        MsgBox "Sin ventas para reporte!", vbCritical
        Exit Sub
    End If
    Worksheets("Ventas").Range("K2:K" & UltimoRenglon).Copy
    Reporte.Range("A2").PasteSpecial (xlPasteValues)

    UltimoRenglon = GetLastRow(Reporte)
    Reporte.Range("A2:A" & UltimoRenglon).FormulaR1C1 = "=TRUNC(Ventas!RC[10])"

    Set RangeBase = Reporte.Range("A1:A" & UltimoRenglon)
    RangeBase.RemoveDuplicates Columns:=Array(1), Header:=xlYes
    
    Reporte.Activate
    Reporte.Columns("A:A").Sort key1:=Reporte.Range("A1"), order1:=xlDescending, Header:=xlYes

    UltimoRenglon = GetLastRow(Reporte)
    
    Reporte.Range("B2:B" & UltimoRenglon).FormulaR1C1 = "=DAY(RC[-1])&CHAR(45)&NombreMes(MONTH(RC[-1]))&CHAR(45)&YEAR(RC[-1])"
    Reporte.Range("B2:B" & UltimoRenglon).Copy
    Reporte.Range("B2:B" & UltimoRenglon).PasteSpecial (xlPasteValues)
    
    UltimoRenglon = GetLastRow(Reporte)
    If UltimoRenglon <= 1 Then
        Exit Sub
    End If

    Set TheRange = Reporte.Range("A2:B" & UltimoRenglon)
    ArrayFechas = TheRange
    
    ListBoxFechas.List = ArrayFechas
    If ListBoxFechas.ListCount > 0 Then
        ListBoxFechas.Selected(0) = True
    End If
    ListBoxFechas.SetFocus
End Sub

Private Sub CommandButtonGenerarReporte_Click()
    
    ArchivoPrincipal.Activate
    Dim MyBook As Workbook
    Dim Indice As New ClassIndicexFecha
    Dim RangeSuma As Range
    Dim UltimoRenglon As Long
    Dim RenglonFormula As Long
    Dim RangeBase As Range
    Dim Reporte As Worksheet
    Dim ArrayConjunto As Variant
    
    Dim VentasSheet As Worksheet
    Dim DetallesSheet As Worksheet
    Dim ResumenSheet As Worksheet
    
    Dim NewBook As Workbook
    Dim NombredeArchivo As String
    Dim AplicacionExcel As Application
    Dim NuevoLibro As Workbook
    Dim HojaPegarDatos As Worksheet
    Dim FechaReporte As String
    
    Set MyBook = ThisWorkbook
    Set VentasSheet = MyBook.Worksheets("Ventas")
    
    If ListBoxFechas.ListIndex < 0 Then
        Exit Sub
    End If
    
    IdFechaReporte = ArrayFechas(ListBoxFechas.ListIndex + 1, 1)
    FechaReporte = ArrayFechas(ListBoxFechas.ListIndex + 1, 2)
    
    DeleteHojaThisBook "Temporal"
    DeleteHojaThisBook "Temporal2"
    
    VentasSheet.Copy after:=Sheets(Sheets.Count)
    Set DetallesSheet = MyBook.ActiveSheet
    DetallesSheet.Name = "Temporal"
    DetallesSheet.Range("A2").Activate
    
    DeleteRowsxDiferenteFecha DetallesSheet, "K", IdFechaReporte
    
    DetallesSheet.Copy after:=Sheets(Sheets.Count)
    Set ResumenSheet = MyBook.ActiveSheet
    ResumenSheet.Name = "Temporal2"
    ResumenSheet.Range("A2").Activate
    
    UltimoRenglon = GetLastRow(ResumenSheet)
    Set RangeBase = ResumenSheet.Range("A1:Z" & UltimoRenglon)
    RangeBase.RemoveDuplicates Columns:=Array(4), Header:=xlYes
    
    ResumenSheet.Range("A:C,F:F,G:G,S:Z,K:M,O:O,R:R").Delete
        
    MyBook.Activate
    
    DirectoryValidate "Reportes"
    NombredeArchivo = ThisWorkbook.Path & "\Tools\Reportes\Reporte Venta " & Year(IdFechaReporte) & " " & Month(IdFechaReporte) & NombreMes(Month(IdFechaReporte)) & " " & Day(IdFechaReporte) & ".xlsx"
    If IsFileOpen(NombredeArchivo) Then
        MsgBox "Archivo se encuentra en uso, no se puede sobreescribir!!!"
        Exit Sub
    End If
    
    Application.DisplayAlerts = False
    If Dir(NombredeArchivo) = "" Then
        
        MyBook.Worksheets(Array("Temporal", "Temporal2")).Select
        MyBook.Worksheets(Array("Temporal", "Temporal2")).Copy
        ActiveWorkbook.SaveAs filename:=NombredeArchivo
        ActiveWorkbook.Close
        ActiveWorkbook.Application.CutCopyMode = False
        Set Temporal = Nothing
    Else
        Respuesta = MsgBox("Ya existe este archivo, desea reemplazarlo, teclee NO para abrir existente?", vbYesNo)
        If Respuesta = vbYes Then
        
            MyBook.Worksheets(Array("Temporal", "Temporal2")).Select
            MyBook.Worksheets(Array("Temporal", "Temporal2")).Copy
            ActiveWorkbook.SaveAs filename:=NombredeArchivo
            ActiveWorkbook.Close
            ActiveWorkbook.Application.CutCopyMode = False
            Set Temporal = Nothing
        Else
            Set AplicacionExcel = CreateObject("Excel.Application")
            Set ReportBook = AplicacionExcel.Application.Workbooks.Open(NombredeArchivo)
            AplicacionExcel.Visible = True
            Exit Sub
        End If
    End If
    
    Set AplicacionExcel = CreateObject("Excel.Application")
    Set NewBook = AplicacionExcel.Application.Workbooks.Open(NombredeArchivo)
    AplicacionExcel.Visible = True
    AplicacionExcel.CutCopyMode = False
    Application.DisplayAlerts = True
    
    
    Set DetallesSheet = NewBook.Worksheets("Temporal")
    DetallesSheet.Activate
    AplicacionExcel.ActiveWindow.Zoom = 100
    DetallesSheet.Name = "Detalles"
    
    Set ResumenSheet = NewBook.Worksheets("Temporal2")
    ResumenSheet.Name = "Resumen"
    ResumenSheet.Activate
    ResumenSheet.Range("A2").Activate
    
    UltimoRenglon = GetLastRow(DetallesSheet)
    DetallesSheet.Range("I2:I" & UltimoRenglon).FormulaR1C1 = "=RC[3]-(RC[3]*RC[4])"  'unitario venta
    DetallesSheet.Range("I2:I" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    DetallesSheet.Range("J2:J" & UltimoRenglon).FormulaR1C1 = "=RC[-2]*RC[-1]"  'EXTENDIDO
    DetallesSheet.Range("J2:J" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    DetallesSheet.Range("N2:N" & UltimoRenglon).FormulaR1C1 = "=RC[-6]*RC[-2]*RC[-1]"
    DetallesSheet.Range("N2:N" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    DetallesSheet.Range("P2:P" & UltimoRenglon).FormulaR1C1 = "=RC[-6]*RC[-1]"
    DetallesSheet.Range("P2:P" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    DetallesSheet.Range("Q2:Q" & UltimoRenglon).FormulaR1C1 = "=RC[-7]+RC[-1]"
    DetallesSheet.Range("Q2:Q" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    DetallesSheet.Range("L2:L" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    DetallesSheet.Range("R2:R" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    DetallesSheet.Range("M2:M" & UltimoRenglon).NumberFormat = "0%"
    DetallesSheet.Range("O2:O" & UltimoRenglon).NumberFormat = "0%"
    
    ResumenSheet.Range("1:9").Insert
    UltimoRenglon = GetLastRow(ResumenSheet)
    
    'ORDENAR POR TOTAL
    ResumenSheet.Range("H11:H" & UltimoRenglon).FormulaR1C1 = "=SUMIF(Detalles!C[-4],Resumen!RC[-7],Detalles!C[9])"
    ResumenSheet.Range("H11:H" & UltimoRenglon).Copy
    ResumenSheet.Range("H11:H" & UltimoRenglon).PasteSpecial (xlPasteValues)
    ResumenSheet.Range("A10:H" & UltimoRenglon).Sort key1:=ResumenSheet.Range("H10"), order1:=xlDescending, Header:=xlYes

    ResumenSheet.Range("C11:C" & UltimoRenglon).FormulaR1C1 = "=SUMIF(Detalles!C[1],Resumen!RC[-2],Detalles!C[5])"

    ResumenSheet.Range("E11:E" & UltimoRenglon).FormulaR1C1 = "=SUMIF(Detalles!C[-1],Resumen!RC[-4],Detalles!C[5])"
    ResumenSheet.Range("E11:E" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    ResumenSheet.Range("D11:D" & UltimoRenglon).FormulaR1C1 = "=RC[1]/RC[-1]"
    ResumenSheet.Range("D11:D" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    ResumenSheet.Range("F11:F" & UltimoRenglon).FormulaR1C1 = "=SUMIF(Detalles!C[-2],Resumen!RC[-5],Detalles!C[8])"
    ResumenSheet.Range("F11:F" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    ResumenSheet.Range("G11:G" & UltimoRenglon).FormulaR1C1 = "=SUMIF(Detalles!C[-3],Resumen!RC[-6],Detalles!C[9])"
    ResumenSheet.Range("G11:G" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    ResumenSheet.Range("H11:H" & UltimoRenglon).FormulaR1C1 = "=SUMIF(Detalles!C[-4],Resumen!RC[-7],Detalles!C[9])"
    ResumenSheet.Range("H11:H" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    ''''''''''' T O T A L E S
    ResumenSheet.Range("C2") = FechaReporte
    
    ResumenSheet.Range("C3").FormulaR1C1 = "=SUM(R[8]C:R[" & (UltimoRenglon - 3) & "]C)"
    
    ResumenSheet.Range("C4").FormulaR1C1 = "=SUM(R[7]C[3]:R[" & (UltimoRenglon - 4) & "]C[3])"
    ResumenSheet.Range("C4").NumberFormat = "$ #,##0.00"
    
    ResumenSheet.Range("C5").FormulaR1C1 = "=SUM(R[6]C[4]:R[" & (UltimoRenglon - 5) & "]C[4])"
    ResumenSheet.Range("C5").NumberFormat = "$ #,##0.00"
    
    ResumenSheet.Range("C6").FormulaR1C1 = "=SUM(R[5]C[2]:R[" & (UltimoRenglon - 6) & "]C[2])"
    ResumenSheet.Range("C6").NumberFormat = "$ #,##0.00"
    
    ResumenSheet.Range("C7").FormulaR1C1 = "=SUM(R[4]C[5]:R[" & (UltimoRenglon - 7) & "]C[5])"
    ResumenSheet.Range("C7").NumberFormat = "$ #,##0.00"
    
    ResumenSheet.Range("B2") = "Fecha Reporte"
    ResumenSheet.Range("B3") = "Total Articulos Vendidos"
    ResumenSheet.Range("B4") = "Total Descuento"
    ResumenSheet.Range("B5") = "Total Impuesto"
    ResumenSheet.Range("B6") = "Total sin Impuesto"
    ResumenSheet.Range("B7") = "Total General"
    
    ResumenSheet.Range("B2:C7").Font.Bold = True
    ResumenSheet.Range("B2:B7").HorizontalAlignment = xlRight
    ResumenSheet.Columns("A:Z").EntireColumn.AutoFit
    
    
    UltimoRenglon = GetLastRow(ResumenSheet)
    ResumenSheet.Range(ResumenSheet.Cells(1, 9), ResumenSheet.Cells(1, ResumenSheet.Columns(ResumenSheet.Columns.Count).Column)).EntireColumn.Hidden = True
    ResumenSheet.Range(ResumenSheet.Cells(UltimoRenglon + 3, 1), ResumenSheet.Cells(ResumenSheet.Rows(ResumenSheet.Rows.Count).Row, 1)).EntireRow.Hidden = True
    
    AplicacionExcel.ActiveWindow.FreezePanes = False
    AplicacionExcel.ActiveWindow.Zoom = 100
    
    ResumenSheet.Range("A1").Activate
         
End Sub
Attribute VB_Name = "ReporteCompra"

'Punto de Venta en Excel Update Marzo 2019
'Youtube Canal:   todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico

Dim AplicacionExcel As Application
Dim ReportBook As Workbook
Dim RenglonCompra As Long
Dim CompraSheet As Worksheet
Dim DatosSheet As Worksheet

Public Sub ReporteComprasExcel(IdReporte As Long)

    If SheetExists("Reporte Compra") = False Then
        MsgBox "No se encuentra hoja Reporte Compra, revisar", vbCritical
        Exit Sub
    End If
    
    ReporteCompras IdReporte, True
    
End Sub

Public Sub ReporteComprasPDF(IdReporte As Long)

    If SheetExists("Reporte Compra") = False Then
        MsgBox "No se encuentra hoja Reporte Compra, revisar", vbCritical
        Exit Sub
    End If

    ReporteCompras IdReporte, False
    
    DirectoryValidate "Compras PDFs"
    NombredeArchivo = ThisWorkbook.Path & "\Tools\Compras PDFs\Compra Folio - " & WorksheetFunction.Rept("0", 7 - Len("F" & IdReporte)) & IdReporte & " " & DatosSheet.Range("C" & RenglonCompra) & ".pdf"
    
    CompraSheet.ExportAsFixedFormat Type:=xlTypePDF, filename:=NombredeArchivo, Quality:=xlQualityStandard, IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True
    
    ReportBook.Close SaveChanges:=False
    AplicacionExcel.Quit
    
End Sub

Private Sub ReporteCompras(IdReporte As Long, ShowEXCEL As Boolean)


    Dim MyPOSBook As Workbook
    Dim ValorA As Double
    Dim ValorB As Double
    
    Dim RangeSuma As Range
    Dim ArrayItems() As Variant
'
    Dim IndiceCompras As New ClassIndice
    Dim NombredeArchivo As String
    Dim Etiqueta As String
    Dim RenglonDetalle As Long
    
    Dim FormatoSheet As Worksheet
    Dim DetallesSheet As Worksheet
       
    Set MyPOSBook = ThisWorkbook
    MyPOSBook.Activate
        
    IndiceCompras.CreateIndice Worksheets("Compras"), "A"
    
    RenglonCompra = IndiceCompras.RenglonItem(IdReporte)
    ArrayItems = IndiceCompras.FindItems(IdReporte)
    If RenglonCompra = 0 Then
        MsgBox "No items found|fffd||fffd||fffd|"
        Exit Sub
    End If
    
    Set DatosSheet = Worksheets("Compras")
    Set FormatoSheet = Worksheets("Reporte Compra")
        
    DirectoryValidate "Compras"
    NombredeArchivo = ThisWorkbook.Path & "\Tools\Compras\Compra Folio - " & WorksheetFunction.Rept("0", 7 - Len("F" & IdReporte)) & IdReporte & " " & DatosSheet.Range("C" & RenglonCompra) & ".xlsx"
    
    If IsFileOpen(NombredeArchivo) Then
        MsgBox "Archivo se encuentra en uso, no se puede sobreescribir!!!"
        Exit Sub
    End If
    Application.DisplayAlerts = False
    If Dir(NombredeArchivo) = "" Then
        
        FormatoSheet.Copy
        ActiveWorkbook.SaveAs filename:=NombredeArchivo
        ActiveWorkbook.Close
        ActiveWorkbook.Application.CutCopyMode = False
    Else
        Respuesta = MsgBox("Ya existe este archivo, desea reemplazarlo, teclee NO para abrir existente?", vbYesNo)
        If Respuesta = vbYes Then
            FormatoSheet.Copy
            ActiveWorkbook.SaveAs filename:=NombredeArchivo
            ActiveWorkbook.Close
            ActiveWorkbook.Application.CutCopyMode = False
        Else
            Set AplicacionExcel = CreateObject("Excel.Application")
            Set ReportBook = AplicacionExcel.Application.Workbooks.Open(NombredeArchivo)
            AplicacionExcel.Visible = True
            Exit Sub
        End If
    End If
    
    Set AplicacionExcel = CreateObject("Excel.Application")
    Set ReportBook = AplicacionExcel.Application.Workbooks.Open(NombredeArchivo)
    
    
    Application.DisplayAlerts = True
    
    ReportBook.Worksheets("Reporte Compra").Name = "Compra"
    
    
    
    Set CompraSheet = ReportBook.Worksheets("Compra")
    
    Set DetallesSheet = ReportBook.Sheets.Add(after:=ReportBook.Sheets(ReportBook.Sheets.Count))
    DetallesSheet.Name = "Detalles"
    
    CompraSheet.Activate
    
    Etiqueta = "SET-CANTIDAD"
    counterinsertrow = EtiquetaRow(CompraSheet, Etiqueta)
    ColumnaCantidad = EtiquetaColumn(CompraSheet, Etiqueta)
    If ColumnaCantidad = 0 Then
        MsgBox "Falta Etiqueta   SET-CANTIDAD"
        Exit Sub
    End If

    Etiqueta = "SET-DESCRIPCION"
    counterinsertrow = EtiquetaRow(CompraSheet, Etiqueta)
    ColumnaDescripcion = EtiquetaColumn(CompraSheet, Etiqueta)
    If ColumnaDescripcion = 0 Then
        MsgBox "Falta Etiqueta   SET-DESCRIPCION"
        Exit Sub
    End If

    Etiqueta = "SET-UNITARIO"
    counterinsertrow = EtiquetaRow(CompraSheet, Etiqueta)
    ColumnaUnitario = EtiquetaColumn(CompraSheet, Etiqueta)
    If ColumnaUnitario = 0 Then
        MsgBox "Falta Etiqueta   SET-UNITARIO"
        Exit Sub
    End If

    Etiqueta = "SET-EXTENDIDO"
    counterinsertrow = EtiquetaRow(CompraSheet, Etiqueta)
    ColumnaExtendido = EtiquetaColumn(CompraSheet, Etiqueta)
    If ColumnaExtendido = 0 Then
        MsgBox "Falta Etiqueta   SET-EXTENDIDO"
        Exit Sub
    End If
    
'''''''FORMATO DETALLES
    
    DetallesSheet.Range("A1:Z1") = DatosSheet.Range("A1:Z1").Value
    RenglonDetalle = 2
    For RenglonItem = UBound(ArrayItems) To LBound(ArrayItems) Step -1
        CompraSheet.Range(ColumnaCantidad & counterinsertrow) = DatosSheet.Range("H" & ArrayItems(RenglonItem)).Value
        CompraSheet.Range(ColumnaDescripcion & counterinsertrow) = DatosSheet.Range("E" & ArrayItems(RenglonItem)).Value
        CompraSheet.Range(ColumnaUnitario & counterinsertrow) = DatosSheet.Range("I" & ArrayItems(RenglonItem)).Value
        CompraSheet.Range(ColumnaUnitario & counterinsertrow).NumberFormat = "$ #,##0.00"
        CompraSheet.Range(ColumnaExtendido & counterinsertrow) = DatosSheet.Range("J" & ArrayItems(RenglonItem)).Value
        CompraSheet.Range(ColumnaExtendido & counterinsertrow).NumberFormat = "$ #,##0.00"
        
        DetallesSheet.Range("A" & RenglonDetalle & ":Z" & RenglonDetalle) = DatosSheet.Range("A" & ArrayItems(RenglonItem) & ":Z" & ArrayItems(RenglonItem)).Value
        DetallesSheet.Range("J" & RenglonDetalle).FormulaR1C1 = "=RC[-2]*RC[-1]"  ' subtotal

        DetallesSheet.Range("P" & RenglonDetalle).FormulaR1C1 = "=RC[-8]*RC[-7]*RC[-1]"   ' impuesto
        
        DetallesSheet.Range("Q" & RenglonDetalle).FormulaR1C1 = "=RC[-7]-RC[-3]+RC[-1]"   'total

        If RenglonItem <> 1 Then
            CompraSheet.Rows(counterinsertrow + 1).Insert
            CompraSheet.Rows(counterinsertrow).Copy
            CompraSheet.Rows(counterinsertrow + 1).PasteSpecial (xlPasteFormats)
        End If

        counterinsertrow = counterinsertrow + 1
        RenglonDetalle = RenglonDetalle + 1
    Next
    AplicacionExcel.CutCopyMode = False
    
    UltimoRenglon = GetLastRow(DetallesSheet)
    DetallesSheet.Range("A1:Z" & UltimoRenglon).Font.Size = 8
    DetallesSheet.Columns("A:Z").EntireColumn.AutoFit
    DetallesSheet.Range("A1:Z1").Interior.Color = RGB(168, 193, 230)
        
    Etiqueta = "SET-SUB-TOTAL"
    Renglon = EtiquetaRow(CompraSheet, Etiqueta)
    Columna = EtiquetaColumn(CompraSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        Set RangeSuma = DetallesSheet.Range("J:J")
        CompraSheet.Range(Columna & Renglon) = AplicacionExcel.WorksheetFunction.Sum(RangeSuma)
        CompraSheet.Range(Columna & Renglon).NumberFormat = "$ #,##0.00"
    End If

    Etiqueta = "SET-IMPUESTO"
    Renglon = EtiquetaRow(CompraSheet, Etiqueta)
    Columna = EtiquetaColumn(CompraSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        Set RangeSuma = DetallesSheet.Range("P:P")
        CompraSheet.Range(Columna & Renglon) = AplicacionExcel.WorksheetFunction.Sum(RangeSuma)
        CompraSheet.Range(Columna & Renglon).NumberFormat = "$ #,##0.00"
    End If

    Etiqueta = "SET-TOTAL"
    Renglon = EtiquetaRow(CompraSheet, Etiqueta)
    Columna = EtiquetaColumn(CompraSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        Set RangeSuma = DetallesSheet.Range("Q:Q")
        CompraSheet.Range(Columna & Renglon) = AplicacionExcel.WorksheetFunction.Sum(RangeSuma)
        CompraSheet.Range(Columna & Renglon).NumberFormat = "$ #,##0.00"
    End If

    Etiqueta = "SET-FOLIO"
    Renglon = EtiquetaRow(CompraSheet, Etiqueta)
    Columna = EtiquetaColumn(CompraSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        CompraSheet.Range(Columna & Renglon) = IdReporte
    End If

    Etiqueta = "SET-FECHA"
    Renglon = EtiquetaRow(CompraSheet, Etiqueta)
    Columna = EtiquetaColumn(CompraSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        CompraSheet.Range(Columna & Renglon) = DatosSheet.Range("K" & RenglonCompra)
    End If

    Etiqueta = "SET-CANTIDAD-LETRAS-MEXICO"
    Renglon = EtiquetaRow(CompraSheet, Etiqueta)
    Columna = EtiquetaColumn(CompraSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        Set RangeSuma = DetallesSheet.Range("Q:Q")
        CompraSheet.Range(Columna & Renglon) = PesosMN(AplicacionExcel.WorksheetFunction.Sum(RangeSuma))
    End If
    
    Etiqueta = "SET-PROVEEDOR-CUENTA"
    Renglon = EtiquetaRow(CompraSheet, Etiqueta)
    Columna = EtiquetaColumn(CompraSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        CompraSheet.Range(Columna & Renglon) = DatosSheet.Range("C" & RenglonCompra)
    End If
    
    Etiqueta = "SET-DIRECCION-CUENTA"
    Renglon = EtiquetaRow(CompraSheet, Etiqueta)
    Columna = EtiquetaColumn(CompraSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        CompraSheet.Range(Columna & Renglon) = DatosSheet.Range("W" & RenglonCompra)
    End If
    
    Etiqueta = "SET-CORREO-CUENTA"
    Renglon = EtiquetaRow(CompraSheet, Etiqueta)
    Columna = EtiquetaColumn(CompraSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        CompraSheet.Range(Columna & Renglon) = DatosSheet.Range("X" & RenglonCompra)
    End If
    
    Etiqueta = "SET-TELEFONO-CUENTA"
    Renglon = EtiquetaRow(CompraSheet, Etiqueta)
    Columna = EtiquetaColumn(CompraSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        CompraSheet.Range(Columna & Renglon) = DatosSheet.Range("Y" & RenglonCompra)
    End If
''''''''''''''''''''' V A L I D A T E   ''''''''''''''Validar cantidades, proceso alternativo
'''''''''''''''''''' COMPARAR CANTIDADES
    ValorA = Application.WorksheetFunction.SumIf(DatosSheet.Range("A:A"), Idreport, DatosSheet.Range("H:H"))
    ValorB = AplicacionExcel.WorksheetFunction.SumIf(DetallesSheet.Range("A:A"), Idreport, DetallesSheet.Range("H:H"))
    If ValorA <> ValorB Then
        MsgBox "Error al generar reporte!!!", vbCritical
    End If
'''''''''''''''''''' COMPARAR UNITARIOS
    ValorA = Application.WorksheetFunction.SumIf(DatosSheet.Range("A:A"), Idreport, DatosSheet.Range("I:I"))
    ValorB = AplicacionExcel.WorksheetFunction.SumIf(DetallesSheet.Range("A:A"), Idreport, DetallesSheet.Range("I:I"))
    If ValorA <> ValorB Then
        MsgBox "Error al generar reporte!!!", vbCritical
    End If
    
    UltimoRenglon = GetLastRow(DetallesSheet)
    DetallesSheet.Range("E" & UltimoRenglon + 1) = "TOTALES"
    DetallesSheet.Range("H" & UltimoRenglon + 1).FormulaR1C1 = "=SUM(R[" & ((UltimoRenglon * -1) + 1) & "]C:R[-1]C)"
    DetallesSheet.Range("J" & UltimoRenglon + 1).FormulaR1C1 = "=SUM(R[" & ((UltimoRenglon * -1) + 1) & "]C:R[-1]C)"

    DetallesSheet.Range("P" & UltimoRenglon + 1).FormulaR1C1 = "=SUM(R[" & ((UltimoRenglon * -1) + 1) & "]C:R[-1]C)"
    DetallesSheet.Range("Q" & UltimoRenglon + 1).FormulaR1C1 = "=SUM(R[" & ((UltimoRenglon * -1) + 1) & "]C:R[-1]C)"
    DetallesSheet.Range("A" & UltimoRenglon + 1 & ":Z" & UltimoRenglon + 1).Font.Size = 8
    DetallesSheet.Range("A" & UltimoRenglon + 1 & ":Z" & UltimoRenglon + 1).Font.Bold = True

    AplicacionExcel.ActiveWorkbook.Save
    AplicacionExcel.DisplayAlerts = True
    
    If MyPOSBook.Worksheets("Preferencias").Range("D6").Value <> "" Then
        AplicacionExcel.ActivePrinter = MyPOSBook.Worksheets("Preferencias").Range("D6").Value
    End If
    If MyPOSBook.Worksheets("Preferencias").Range("D7").Value <> "" Then
         CompraSheet.PageSetup.PaperSize = MyPOSBook.Worksheets("Preferencias").Range("D7").Value
    End If
    
    ReportBook.Activate
    CompraSheet.Activate
    CompraSheet.Range("A1").Activate
    
    If ShowEXCEL = True Then
        AplicacionExcel.Visible = True
    End If
    
End Sub

Private Function EtiquetaColumn(SheetRango As Worksheet, Cadena As String) As Variant
    Dim RangoBusqueda As Range
    Set RangoBusqueda = SheetRango.Cells.Find(WHAT:=Cadena, LookIn:=xlValues, lookat:=xlWhole)
    If RangoBusqueda Is Nothing Then
        EtiquetaColumn = False
    Else
        EtiquetaColumn = ActiveRangeLetter(RangoBusqueda)
    End If
End Function

Private Function EtiquetaRow(SheetRango As Worksheet, Cadena As String) As Long
    Dim RangoBusqueda As Range
    Set RangoBusqueda = SheetRango.Cells.Find(WHAT:=Cadena, LookIn:=xlValues, lookat:=xlWhole)
    If RangoBusqueda Is Nothing Then
        EtiquetaRow = False
    Else
        EtiquetaRow = RangoBusqueda.Row
    End If
End Function

Private Function ActiveRangeLetter(Rango As Range) As String
    
    ActiveRangeLetter = Split(Rango.Address, "$")(1)  '1 Letra --- 2 Number
    
End Function
Attribute VB_Name = "ReporteFactura"

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim MyPOSBook As Workbook
Dim AplicacionExcel As Application
Dim ReportBook As Workbook
Dim RenglonVenta As Long
Dim FacturaSheet As Worksheet
Dim DatosSheet As Worksheet

Public Sub ReporteVentasExcel(IdReporte As Long)
    
    If SheetExists("Reporte Venta") = False Then
        MsgBox "No se encuentra hoja Reporte Venta, revisar", vbCritical
        Exit Sub
    End If
    
    ReporteVentas IdReporte, True
    
End Sub

Public Sub ReporteVentasPDF(IdReporte As Long)

    If SheetExists("Reporte Venta") = False Then
        MsgBox "No se encuentra hoja Reporte Venta, revisar", vbCritical
        Exit Sub
    End If
    
    ReporteVentas IdReporte, False
    
    DirectoryValidate "Ventas PDFs"
    NombredeArchivo = ThisWorkbook.Path & "\Tools\Ventas PDFs\Venta Folio - " & WorksheetFunction.Rept("0", 7 - Len("F" & IdReporte)) & IdReporte & " " & DatosSheet.Range("C" & RenglonVenta) & ".pdf"
    
    FacturaSheet.ExportAsFixedFormat Type:=xlTypePDF, filename:=NombredeArchivo, Quality:=xlQualityStandard, IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True
    
    ReportBook.Close SaveChanges:=False
    AplicacionExcel.Quit
    
End Sub

Public Sub ReporteFacturaImprimir(IdReporte As Long)
    
    Dim ErrorHandler As String
    ReporteVentas IdReporte, False
    
    On Error GoTo salir:
    
    ErrorHandler = "Error al imprimir, no finalizo el proceso de impresi|fffd|n!!!"
    FacturaSheet.PrintOut
    
    ErrorHandler = "Error al imprimir, archivo impresion no finalizo correctamente!!!"
    ReportBook.Close SaveChanges:=False
    AplicacionExcel.Quit
    Exit Sub

salir:
    MsgBox ErrorHandler, vbExclamation
    
End Sub


Private Sub ReporteVentas(IdReporte As Long, ShowEXCEL As Boolean)

    Dim ValorA As Double
    Dim ValorB As Double
    
    Dim RangeSuma As Range
    Dim ArrayItems() As Variant

    Dim IndiceVentas As New ClassIndice
    Dim NombredeArchivo As String
    Dim Etiqueta As String
    Dim RenglonDetalle As Long
    
    Dim FormatoSheet As Worksheet
    Dim DetallesSheet As Worksheet
    Dim ErrorEnFactura As Boolean
    
    ErrorEnFactura = True
       
    Set MyPOSBook = ThisWorkbook
    MyPOSBook.Activate
    
    IndiceVentas.CreateIndice Worksheets("Ventas"), "A"
    
    RenglonVenta = IndiceVentas.RenglonItem(IdReporte)
    ArrayItems = IndiceVentas.FindItems(IdReporte)
    If RenglonVenta = 0 Then
        MsgBox "No items found|fffd||fffd||fffd|"
        Exit Sub
    End If
    
    Set DatosSheet = Worksheets("Ventas")
    Set FormatoSheet = Worksheets("Reporte Venta")
     
    DirectoryValidate "Ventas"
    NombredeArchivo = ThisWorkbook.Path & "\Tools\Ventas\Venta Folio - " & WorksheetFunction.Rept("0", 7 - Len("F" & IdReporte)) & IdReporte & " " & DatosSheet.Range("C" & RenglonVenta) & ".xlsx"
    
    If IsFileOpen(NombredeArchivo) Then
        MsgBox "Archivo se encuentra en uso, no se puede sobreescribir!!!"
        Exit Sub
    End If
    Application.DisplayAlerts = False
    If Dir(NombredeArchivo) = "" Then
        
        FormatoSheet.Copy
        ActiveWorkbook.SaveAs filename:=NombredeArchivo
        ActiveWorkbook.Close
    Else
        Respuesta = MsgBox("Ya existe este archivo, desea reemplazarlo?", vbYesNo)
        If Respuesta = vbYes Then
            FormatoSheet.Copy
            ActiveWorkbook.SaveAs filename:=NombredeArchivo
            ActiveWorkbook.Close
        Else
            Set AplicacionExcel = CreateObject("Excel.Application")
            Set ReportBook = AplicacionExcel.Application.Workbooks.Open(NombredeArchivo)
            AplicacionExcel.Visible = True
            Exit Sub
        End If
    End If
    
    Set AplicacionExcel = CreateObject("Excel.Application")
    Set ReportBook = AplicacionExcel.Application.Workbooks.Open(NombredeArchivo)
    
    Application.DisplayAlerts = True
    
    ReportBook.Worksheets("Reporte Venta").Name = "Factura"
    
    
    
    Set FacturaSheet = ReportBook.Worksheets("Factura")
    
    Set DetallesSheet = ReportBook.Sheets.Add(after:=ReportBook.Sheets(ReportBook.Sheets.Count))
    DetallesSheet.Name = "Detalles"
    
    FacturaSheet.Activate
    
    Etiqueta = "SET-CANTIDAD"
    counterinsertrow = EtiquetaRow(FacturaSheet, Etiqueta)
    ColumnaCantidad = EtiquetaColumn(FacturaSheet, Etiqueta)
    If ColumnaCantidad = 0 Then
        MsgBox "Falta Etiqueta   SET-CANTIDAD"
        Exit Sub
    End If
    
    Etiqueta = "SET-DESCRIPCION"
    counterinsertrow = EtiquetaRow(FacturaSheet, Etiqueta)
    ColumnaDescripcion = EtiquetaColumn(FacturaSheet, Etiqueta)
    If ColumnaDescripcion = 0 Then
        MsgBox "Falta Etiqueta   SET-DESCRIPCION"
        Exit Sub
    End If
    
    Etiqueta = "SET-UNITARIO"
    counterinsertrow = EtiquetaRow(FacturaSheet, Etiqueta)
    ColumnaUnitario = EtiquetaColumn(FacturaSheet, Etiqueta)
    If ColumnaUnitario = 0 Then
        MsgBox "Falta Etiqueta   SET-UNITARIO"
        Exit Sub
    End If

    Etiqueta = "SET-EXTENDIDO"
    counterinsertrow = EtiquetaRow(FacturaSheet, Etiqueta)
    ColumnaExtendido = EtiquetaColumn(FacturaSheet, Etiqueta)
    If ColumnaExtendido = 0 Then
        MsgBox "Falta Etiqueta   SET-EXTENDIDO"
        Exit Sub
    End If
    
    ColumnaCategoria = EtiquetaColumn(FacturaSheet, "SET-CATEGORIA")
    
    ColumnaDescuento = EtiquetaColumn(FacturaSheet, "SET-DESCUENTO")
    
    ColumnaImpuesto = EtiquetaColumn(FacturaSheet, "SET-IMPUESTO")
    
'''''''FORMATO DETALLES
    
    DetallesSheet.Range("A1:Z1") = DatosSheet.Range("A1:Z1").Value
    RenglonDetalle = 2
    For RenglonItem = UBound(ArrayItems) To LBound(ArrayItems) Step -1
        FacturaSheet.Range(ColumnaCantidad & counterinsertrow) = DatosSheet.Range("H" & ArrayItems(RenglonItem)).Value
        FacturaSheet.Range(ColumnaDescripcion & counterinsertrow) = DatosSheet.Range("E" & ArrayItems(RenglonItem)).Value & " " & DatosSheet.Range("F" & ArrayItems(RenglonItem)).Value
        FacturaSheet.Range(ColumnaUnitario & counterinsertrow) = DatosSheet.Range("I" & ArrayItems(RenglonItem)).Value
        FacturaSheet.Range(ColumnaUnitario & counterinsertrow).NumberFormat = "$ #,##0.00"
        FacturaSheet.Range(ColumnaExtendido & counterinsertrow) = DatosSheet.Range("J" & ArrayItems(RenglonItem)).Value
        FacturaSheet.Range(ColumnaExtendido & counterinsertrow).NumberFormat = "$ #,##0.00"
        
        If ColumnaCategoria <> False Then
            FacturaSheet.Range(ColumnaCategoria & counterinsertrow) = DatosSheet.Range("S" & ArrayItems(RenglonItem)).Value
        End If
        If ColumnaDescuento <> False Then
            FacturaSheet.Range(ColumnaDescuento & counterinsertrow) = DatosSheet.Range("N" & ArrayItems(RenglonItem)).Value
            FacturaSheet.Range(ColumnaDescuento & counterinsertrow).NumberFormat = "$ #,##0.00"
        End If
        If ColumnaImpuesto <> False Then
            FacturaSheet.Range(ColumnaImpuesto & counterinsertrow) = DatosSheet.Range("P" & ArrayItems(RenglonItem)).Value
            FacturaSheet.Range(ColumnaImpuesto & counterinsertrow).NumberFormat = "$ #,##0.00"
        End If

        DetallesSheet.Range("A" & RenglonDetalle & ":Z" & RenglonDetalle) = DatosSheet.Range("A" & ArrayItems(RenglonItem) & ":Z" & ArrayItems(RenglonItem)).Value
        DetallesSheet.Range("J" & RenglonDetalle).FormulaR1C1 = "=RC[-2]*RC[-1]"  ' subtotal
        DetallesSheet.Range("J" & RenglonDetalle).NumberFormat = "$ #,##0.00"
        DetallesSheet.Range("N" & RenglonDetalle).FormulaR1C1 = "=RC[-6]*RC[-2]*RC[-1]"   ' descuento
        
        DetallesSheet.Range("N" & RenglonDetalle).NumberFormat = "$ #,##0.00"
        DetallesSheet.Range("P" & RenglonDetalle).FormulaR1C1 = "=RC[-8]*RC[-7]*RC[-1]"   ' impuesto
        
        DetallesSheet.Range("P" & RenglonDetalle).NumberFormat = "$ #,##0.00"
        DetallesSheet.Range("Q" & RenglonDetalle).FormulaR1C1 = "=RC[-7]-RC[-3]+RC[-1]"   'total
        DetallesSheet.Range("Q" & RenglonDetalle).NumberFormat = "$ #,##0.00"
        
        DetallesSheet.Range("I" & RenglonDetalle).NumberFormat = "$ #,##0.00"
        DetallesSheet.Range("L" & RenglonDetalle).NumberFormat = "$ #,##0.00"
        
        DetallesSheet.Range("M" & RenglonDetalle).NumberFormat = "0%"
        DetallesSheet.Range("O" & RenglonDetalle).NumberFormat = "0%"

        If RenglonItem <> 1 Then
            FacturaSheet.Rows(counterinsertrow + 1).Insert
            FacturaSheet.Rows(counterinsertrow).Copy
            FacturaSheet.Rows(counterinsertrow + 1).PasteSpecial (xlPasteFormats)
        End If

        counterinsertrow = counterinsertrow + 1
        RenglonDetalle = RenglonDetalle + 1
    Next
    AplicacionExcel.CutCopyMode = False
    
    UltimoRenglon = GetLastRow(DetallesSheet)
    DetallesSheet.Range("A1:Z" & UltimoRenglon).Font.Size = 8
    DetallesSheet.Columns("A:Z").EntireColumn.AutoFit
    DetallesSheet.Range("A1:Z1").Interior.Color = RGB(168, 193, 230)
        
    Etiqueta = "SET-SUB-TOTAL"
    Renglon = EtiquetaRow(FacturaSheet, Etiqueta)
    Columna = EtiquetaColumn(FacturaSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        Set RangeSuma = DetallesSheet.Range("J:J")
        FacturaSheet.Range(Columna & Renglon) = AplicacionExcel.WorksheetFunction.Sum(RangeSuma)
        FacturaSheet.Range(Columna & Renglon).NumberFormat = "$ #,##0.00"
    End If

    Etiqueta = "SET-TOTAL-DESCUENTO"
    Renglon = EtiquetaRow(FacturaSheet, Etiqueta)
    Columna = EtiquetaColumn(FacturaSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        Set RangeSuma = DetallesSheet.Range("N:N")
        FacturaSheet.Range(Columna & Renglon) = AplicacionExcel.WorksheetFunction.Sum(RangeSuma)
        FacturaSheet.Range(Columna & Renglon).NumberFormat = "$ #,##0.00"
    End If

    Etiqueta = "SET-TOTAL-IMPUESTO"
    Renglon = EtiquetaRow(FacturaSheet, Etiqueta)
    Columna = EtiquetaColumn(FacturaSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        Set RangeSuma = DetallesSheet.Range("P:P")
        FacturaSheet.Range(Columna & Renglon) = AplicacionExcel.WorksheetFunction.Sum(RangeSuma)
        FacturaSheet.Range(Columna & Renglon).NumberFormat = "$ #,##0.00"
    End If

    Etiqueta = "SET-TOTAL"
    Renglon = EtiquetaRow(FacturaSheet, Etiqueta)
    Columna = EtiquetaColumn(FacturaSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        Set RangeSuma = DetallesSheet.Range("Q:Q")
        FacturaSheet.Range(Columna & Renglon) = AplicacionExcel.WorksheetFunction.Sum(RangeSuma)
        FacturaSheet.Range(Columna & Renglon).NumberFormat = "$ #,##0.00"
    End If
    
    Etiqueta = "SET-EFECTIVO"
    Renglon = EtiquetaRow(FacturaSheet, Etiqueta)
    Columna = EtiquetaColumn(FacturaSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        FacturaSheet.Range(Columna & Renglon) = DatosSheet.Range("R" & RenglonVenta).Value
        FacturaSheet.Range(Columna & Renglon).NumberFormat = "$ #,##0.00"
    End If
    
    Etiqueta = "SET-CAMBIO"
    Renglon = EtiquetaRow(FacturaSheet, Etiqueta)
    Columna = EtiquetaColumn(FacturaSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        Set RangeSuma = DetallesSheet.Range("Q:Q")
        FacturaSheet.Range(Columna & Renglon) = DatosSheet.Range("R" & RenglonVenta).Value - AplicacionExcel.WorksheetFunction.Sum(RangeSuma)
        FacturaSheet.Range(Columna & Renglon).NumberFormat = "$ #,##0.00"
    End If
    
    Etiqueta = "SET-FOLIO"
    Renglon = EtiquetaRow(FacturaSheet, Etiqueta)
    Columna = EtiquetaColumn(FacturaSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        FacturaSheet.Range(Columna & Renglon) = IdReporte
    End If
    
    Etiqueta = "SET-FECHA"
    Renglon = EtiquetaRow(FacturaSheet, Etiqueta)
    Columna = EtiquetaColumn(FacturaSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        FacturaSheet.Range(Columna & Renglon) = DatosSheet.Range("K" & RenglonVenta)
    End If

    Etiqueta = "SET-CANTIDAD-LETRAS-MEXICO"
    Renglon = EtiquetaRow(FacturaSheet, Etiqueta)
    Columna = EtiquetaColumn(FacturaSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        Set RangeSuma = DetallesSheet.Range("Q:Q")
        FacturaSheet.Range(Columna & Renglon) = PesosMN(AplicacionExcel.WorksheetFunction.Sum(RangeSuma))
    End If
    
    Etiqueta = "SET-CLIENTE-CUENTA"
    Renglon = EtiquetaRow(FacturaSheet, Etiqueta)
    Columna = EtiquetaColumn(FacturaSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        FacturaSheet.Range(Columna & Renglon) = DatosSheet.Range("C" & RenglonVenta)
    End If
    
    Etiqueta = "SET-DIRECCION-CUENTA"
    Renglon = EtiquetaRow(FacturaSheet, Etiqueta)
    Columna = EtiquetaColumn(FacturaSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        FacturaSheet.Range(Columna & Renglon) = DatosSheet.Range("W" & RenglonVenta)
    End If
    
    Etiqueta = "SET-CORREO-CUENTA"
    Renglon = EtiquetaRow(FacturaSheet, Etiqueta)
    Columna = EtiquetaColumn(FacturaSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        FacturaSheet.Range(Columna & Renglon) = DatosSheet.Range("X" & RenglonVenta)
    End If
    
    Etiqueta = "SET-TELEFONO-CUENTA"
    Renglon = EtiquetaRow(FacturaSheet, Etiqueta)
    Columna = EtiquetaColumn(FacturaSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        FacturaSheet.Range(Columna & Renglon) = DatosSheet.Range("Y" & RenglonVenta)
    End If
''''''''''''''''''''' V A L I D A T E   ''''''''''''''Validar cantidades, proceso alternativo
'''''''''''''''''''' COMPARAR CANTIDADES
    ValorA = Application.WorksheetFunction.SumIf(DatosSheet.Range("A:A"), Idreport, DatosSheet.Range("H:H"))
    ValorB = AplicacionExcel.WorksheetFunction.SumIf(DetallesSheet.Range("A:A"), Idreport, DetallesSheet.Range("H:H"))
    If ValorA <> ValorB Then
        MsgBox "Error al generar reporte!!!", vbCritical
    End If
'''''''''''''''''''' COMPARAR UNITARIOS
    ValorA = Application.WorksheetFunction.SumIf(DatosSheet.Range("A:A"), Idreport, DatosSheet.Range("I:I"))
    ValorB = AplicacionExcel.WorksheetFunction.SumIf(DetallesSheet.Range("A:A"), Idreport, DetallesSheet.Range("I:I"))
    If ValorA <> ValorB Then
        MsgBox "Error al generar reporte!!!", vbCritical
    End If
    
    UltimoRenglon = GetLastRow(DetallesSheet)
    DetallesSheet.Range("E" & UltimoRenglon + 1) = "TOTALES"
    DetallesSheet.Range("H" & UltimoRenglon + 1).FormulaR1C1 = "=SUM(R[" & ((UltimoRenglon * -1) + 1) & "]C:R[-1]C)"
    DetallesSheet.Range("J" & UltimoRenglon + 1).FormulaR1C1 = "=SUM(R[" & ((UltimoRenglon * -1) + 1) & "]C:R[-1]C)"
    DetallesSheet.Range("N" & UltimoRenglon + 1).FormulaR1C1 = "=SUM(R[" & ((UltimoRenglon * -1) + 1) & "]C:R[-1]C)"
    DetallesSheet.Range("P" & UltimoRenglon + 1).FormulaR1C1 = "=SUM(R[" & ((UltimoRenglon * -1) + 1) & "]C:R[-1]C)"
    DetallesSheet.Range("Q" & UltimoRenglon + 1).FormulaR1C1 = "=SUM(R[" & ((UltimoRenglon * -1) + 1) & "]C:R[-1]C)"
    DetallesSheet.Range("A" & UltimoRenglon + 1 & ":Z" & UltimoRenglon + 1).Font.Size = 8
    DetallesSheet.Range("A" & UltimoRenglon + 1 & ":Z" & UltimoRenglon + 1).Font.Bold = True
    
On Error GoTo ErrorAlGuardar

    ErrorHandler = "Error al imprimir, no pudo activar la impresora!!!"
    If MyPOSBook.Worksheets("Preferencias").Range("B8").Value <> "" Then
        AplicacionExcel.ActivePrinter = MyPOSBook.Worksheets("Preferencias").Range("B8").Value
    End If
    
    ErrorHandler = "Error al imprimir, no pudo configurar la hoja!!!"
    If MyPOSBook.Worksheets("Preferencias").Range("B9").Value <> "" Then
         FacturaSheet.PageSetup.PaperSize = MyPOSBook.Worksheets("Preferencias").Range("B9").Value
    End If

    AplicacionExcel.ActiveWorkbook.Save
    AplicacionExcel.DisplayAlerts = True
        
    ReportBook.Activate
    FacturaSheet.Activate
    FacturaSheet.Range("A1").Activate
    
    ErrorEnFactura = False
    
    If ShowEXCEL = True Then
        AplicacionExcel.Visible = True
    End If
    
    Exit Sub
    
ErrorAlGuardar:
    
    MsgBox "Error al guardar, descripcion del error " & Err.Description
    MsgBox ErrorHandler
End Sub

Private Function EtiquetaColumn(SheetRango As Worksheet, Cadena As String) As Variant
    Dim RangoBusqueda As Range
    Set RangoBusqueda = SheetRango.Cells.Find(WHAT:=Cadena, LookIn:=xlValues, lookat:=xlWhole)
    If RangoBusqueda Is Nothing Then
        EtiquetaColumn = False
    Else
        EtiquetaColumn = ActiveRangeLetter(RangoBusqueda)
    End If
End Function

Private Function EtiquetaRow(SheetRango As Worksheet, Cadena As String) As Long
    Dim RangoBusqueda As Range
    Set RangoBusqueda = SheetRango.Cells.Find(WHAT:=Cadena, LookIn:=xlValues, lookat:=xlWhole)
    
    If RangoBusqueda Is Nothing Then
        EtiquetaRow = False
    Else
        EtiquetaRow = RangoBusqueda.Row
    End If
End Function

Private Function ActiveRangeLetter(Rango As Range) As String
    
    ActiveRangeLetter = Split(Rango.Address, "$")(1)  '1 Letra --- 2 Number
    
End Function
Attribute VB_Name = "ReporteInventario"

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Public Sub Inventory_Show()
    
    Dim MyBook As Workbook
    Dim ArticulosSheet As Worksheet
    Dim InventarioSheet As Worksheet
    Dim ResumenSheet As Worksheet
    Dim SumaInventario As Double
    
    Dim UltimoRenglon As Long

    Dim NewBook As Workbook
    Dim NombredeArchivo As String
    Dim FechaInventario As String
    
    Set MyBook = ThisWorkbook
    Set ArticulosSheet = MyBook.Worksheets("Articulos")
    UltimoRenglon = GetLastRow(ArticulosSheet)
    If UltimoRenglon < 2 Then
        MsgBox "No hay articulos registrados."
        Exit Sub
    End If
    
    DeleteHojaThisBook "Temporal"
    
    ArticulosSheet.Copy after:=Sheets(Sheets.Count)
    Set InventarioSheet = MyBook.ActiveSheet
    InventarioSheet.Name = "Temporal"
    InventarioSheet.Range("A2").Activate
    
    DeleteRowsxValorMenorIgualCero InventarioSheet, "G"
    
    Dim RangeSuma As Range
    Set RangeSuma = InventarioSheet.Range("G:G")
    SumaInventario = CDbl(Application.WorksheetFunction.Sum(RangeSuma))
    If SumaInventario <= 0 Then
        MsgBox "Inventario en Cero", vbCritical
        Exit Sub
    End If
    
    InventarioSheet.Range("F:F,H:J,L:N,P:P").Delete
        
    MyBook.Activate
    
    DirectoryValidate "Inventory"
    FechaInventario = Format(Day(Date), "00") & "-" & Format(Date, "mmmm") & "-" & Year(Date) & " " & Format(Time, "hh-mm")
    NombredeArchivo = ThisWorkbook.Path & "\Tools\Inventory\Inventario " & Year(Date) & " " & Format(Month(Date), "00") & " " & Format(Date, "mmmm") & " " & Format(Day(Date), "00") & " " & Format(Time, "hh-mm") & ".xlsx"
    If IsFileOpen(NombredeArchivo) Then
        MsgBox "Archivo se encuentra en uso, no se puede sobreescribir!!!"
        Exit Sub
    End If
    
    Application.DisplayAlerts = False
    If Dir(NombredeArchivo) = "" Then
        
        InventarioSheet.Select
        InventarioSheet.Copy
        ActiveWorkbook.SaveAs filename:=NombredeArchivo
        ActiveWorkbook.Close
        ActiveWorkbook.Application.CutCopyMode = False
        Set Temporal = Nothing
    Else
        Respuesta = MsgBox("Ya existe este archivo, desea reemplazarlo, teclee NO para abrir existente?", vbYesNo)
        If Respuesta = vbYes Then
        
            InventarioSheet.Select
            InventarioSheet.Copy
            ActiveWorkbook.SaveAs filename:=NombredeArchivo
            ActiveWorkbook.Close
            ActiveWorkbook.Application.CutCopyMode = False
            Set Temporal = Nothing
        Else
            Set AplicacionExcel = CreateObject("Excel.Application")
            Set ReportBook = AplicacionExcel.Application.Workbooks.Open(NombredeArchivo)
            AplicacionExcel.Visible = True
            Exit Sub
        End If
    End If
    
    Set AplicacionExcel = CreateObject("Excel.Application")
    Set NewBook = AplicacionExcel.Application.Workbooks.Open(NombredeArchivo)
    AplicacionExcel.Visible = True
    AplicacionExcel.CutCopyMode = False
    Application.DisplayAlerts = True
    


    Set InventarioSheet = NewBook.Worksheets("Temporal")
    InventarioSheet.Name = "Inventario"
    
    Set ResumenSheet = NewBook.Worksheets.Add()
    ResumenSheet.Name = "Resumen Inventorio"
    
    InventarioSheet.Range("G:H").Insert
    InventarioSheet.Range("G1") = "Extendido Compra"
    InventarioSheet.Range("H1") = "Extendido Venta"
    InventarioSheet.Range("A1:J1").MergeCells = False
    InventarioSheet.Range("A1:J1").WrapText = False
    InventarioSheet.Activate
    AplicacionExcel.ActiveWindow.FreezePanes = False
    
    UltimoRenglon = GetLastRow(InventarioSheet)
    InventarioSheet.Range("G2:G" & UltimoRenglon).FormulaR1C1 = "=RC[-3]*RC[-1]"  'unitario venta
    InventarioSheet.Range("G2:G" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    InventarioSheet.Range("H2:H" & UltimoRenglon).FormulaR1C1 = "=RC[-3]*RC[-2]"  'EXTENDIDO
    InventarioSheet.Range("H2:H" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    InventarioSheet.Range("D2:D" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    InventarioSheet.Range("E2:E" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    InventarioSheet.Range("D2:H" & UltimoRenglon).HorizontalAlignment = xlRight
    
    InventarioSheet.Columns("A:J").EntireColumn.AutoFit
    
    ResumenSheet.Range("A:A") = InventarioSheet.Range("I:I").Value
    ResumenSheet.Activate
    
    UltimoRenglon = GetLastRow(ResumenSheet)
    Set RangeBase = ResumenSheet.Range("A1:A" & UltimoRenglon)
    RangeBase.RemoveDuplicates Columns:=Array(1), Header:=xlYes
    
    ResumenSheet.Range("1:5").Insert
    ResumenSheet.Range("A1") = "Fecha Inventario"
    ResumenSheet.Range("A2") = "Total Extendido Compra"
    ResumenSheet.Range("A3") = "Total Extendido Venta"
    ResumenSheet.Range("A4") = "Total Items Inventario"
    
    ResumenSheet.Range("B6") = "Inventario"
    ResumenSheet.Range("C6") = "Unitario Extendido Compra"
    ResumenSheet.Range("D6") = "Unitario Extendido Venta"
    ResumenSheet.Range("A6:E6").HorizontalAlignment = xlCenter
    ResumenSheet.Range("A6:E6").Font.Bold = True
    
    ResumenSheet.Columns("A:E").ColumnWidth = 27
    
    UltimoRenglon = GetLastRow(ResumenSheet)
    'ordenar por mas valor
    ResumenSheet.Range("D7:D" & UltimoRenglon).FormulaR1C1 = "=SUMIF(Inventario!C[5],'Resumen Inventorio'!RC[-3],Inventario!C[4])"
    ResumenSheet.Range("D7:D" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    ResumenSheet.Range("D7:D" & UltimoRenglon).Copy
    ResumenSheet.Range("D7:D" & UltimoRenglon).PasteSpecial (xlPasteValues)
    ResumenSheet.Range("A6:D" & UltimoRenglon).Sort key1:=ResumenSheet.Range("D6"), order1:=xlDescending, Header:=xlYes
    
    'colocar formulas
    ResumenSheet.Range("B7:B" & UltimoRenglon).FormulaR1C1 = "=SUMIF(Inventario!C[7],'Resumen Inventorio'!RC[-1],Inventario!C[4])"
    ResumenSheet.Range("B7:B" & UltimoRenglon).NumberFormat = "general"
    ResumenSheet.Range("B7:B" & UltimoRenglon).HorizontalAlignment = xlCenter
    
    ResumenSheet.Range("C7:C" & UltimoRenglon).FormulaR1C1 = "=SUMIF(Inventario!C[6],'Resumen Inventorio'!RC[-2],Inventario!C[4])"
    ResumenSheet.Range("C7:C" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    ResumenSheet.Range("D7:D" & UltimoRenglon).FormulaR1C1 = "=SUMIF(Inventario!C[5],'Resumen Inventorio'!RC[-3],Inventario!C[4])"
    ResumenSheet.Range("D7:D" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    'Totales
    ResumenSheet.Range("B1") = FechaInventario
    ResumenSheet.Range("B1").HorizontalAlignment = xlRight
    
    ResumenSheet.Range("B2").FormulaR1C1 = "=SUM(R[5]C[1]:R[" & (UltimoRenglon - 2) & "]C[1])"
    ResumenSheet.Range("B2").NumberFormat = "$ #,##0.00"
    
    ResumenSheet.Range("B3").FormulaR1C1 = "=SUM(R[4]C[2]:R[" & (UltimoRenglon - 3) & "]C[2])"
    ResumenSheet.Range("B3").NumberFormat = "$ #,##0.00"

    ResumenSheet.Range("B4").FormulaR1C1 = "=SUM(R[3]C:R[" & (UltimoRenglon - 4) & "]C)"
    ResumenSheet.Range("B4").NumberFormat = "general"
    
    UltimoRenglon = GetLastRow(ResumenSheet)
    ResumenSheet.Range(ResumenSheet.Cells(1, 5), ResumenSheet.Cells(1, ResumenSheet.Columns(ResumenSheet.Columns.Count).Column)).EntireColumn.Hidden = True
    ResumenSheet.Range(ResumenSheet.Cells(UltimoRenglon + 3, 1), ResumenSheet.Cells(ResumenSheet.Rows(ResumenSheet.Rows.Count).Row, 1)).EntireRow.Hidden = True
    
    ResumenSheet.Activate
    ResumenSheet.Range("A1").Select
    
End Sub
Attribute VB_Name = "ReporteTicket"

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim MyPOSBook As Workbook
Dim AplicacionExcel As Application
Dim ReportBook As Workbook
Dim RenglonVenta As Long
Dim TicketSheet As Worksheet
Dim DatosSheet As Worksheet

Public Sub ReporteTicketsExcel(IdReporte As Long)
    
    ReporteTicket IdReporte, True
    
End Sub

Public Sub ReporteTicketsPDF(IdReporte As Long)
    
    ReporteTicket IdReporte, False
    
    DirectoryValidate "Tickets PDFs"
    NombredeArchivo = ThisWorkbook.Path & "\Tools\Tickets PDFs\Venta Folio - " & WorksheetFunction.Rept("0", 7 - Len("F" & IdReporte)) & IdReporte & " " & DatosSheet.Range("C" & RenglonVenta) & ".pdf"
    
    TicketSheet.ExportAsFixedFormat Type:=xlTypePDF, filename:=NombredeArchivo, Quality:=xlQualityStandard, IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True
    
    ReportBook.Close SaveChanges:=False
    AplicacionExcel.Quit
    
End Sub

Public Sub ReporteTicketImprimir(IdReporte As Long)

    Dim ErrorHandler As String
    ReporteTicket IdReporte, False
    
    On Error GoTo salir:
    
    ErrorHandler = "Error al imprimir, no finalizo el proceso de impresi|fffd|n!!!"
    TicketSheet.PrintOut
    
    ErrorHandler = "Error al imprimir, archivo impresion no cerro correctamente!!!"
    ReportBook.Close SaveChanges:=False
    AplicacionExcel.Quit
    Exit Sub

salir:
    MsgBox ErrorHandler, vbExclamation
    
End Sub

Private Sub ReporteTicket(IdReporte As Long, ShowEXCEL As Boolean)

    
    Dim ValorA As Double
    Dim ValorB As Double
    
    Dim RenglonPegarDatos As Long
    Dim ColumnaCantidad As Variant
    Dim ColumnaDescripcion As Variant
    Dim ColumnaUnitario As Variant
    Dim ColumnaExtendido As Variant
    
    Dim RangeSuma As Range
    Dim ArrayItems() As Variant
'
    Dim IndiceVentas As New ClassIndice
    Dim NombredeArchivo As String
    Dim Etiqueta As String
    Dim RenglonDetalle As Long
    
    Dim FormatoSheet As Worksheet
    Dim DetallesSheet As Worksheet
           
    Set MyPOSBook = ThisWorkbook
    MyPOSBook.Activate
    IndiceVentas.CreateIndice Worksheets("Ventas"), "A"
    
    RenglonVenta = IndiceVentas.RenglonItem(IdReporte)
    ArrayItems = IndiceVentas.FindItems(IdReporte)
    If RenglonVenta = 0 Then
        MsgBox "No items found|fffd||fffd||fffd|"
        Exit Sub
    End If
    
    Set DatosSheet = Worksheets("Ventas")
    Set FormatoSheet = Worksheets("Reporte Ticket")
    
    DirectoryValidate "Tickets"
    NombredeArchivo = ThisWorkbook.Path & "\Tools\Tickets\Venta Folio - " & WorksheetFunction.Rept("0", 7 - Len("F" & IdReporte)) & IdReporte & " " & DatosSheet.Range("C" & RenglonVenta) & ".xlsx"
    DirectoryValidate "Tickets"
    
    If IsFileOpen(NombredeArchivo) Then
        MsgBox "Archivo se encuentra en uso, no se puede sobreescribir!!!"
        Exit Sub
    End If
    Application.DisplayAlerts = False
    If Dir(NombredeArchivo) = "" Then
        
        FormatoSheet.Copy
        ActiveWorkbook.SaveAs filename:=NombredeArchivo
        ActiveWorkbook.Close
    Else
        Respuesta = MsgBox("Ya existe este archivo, desea reemplazarlo?", vbYesNo)
        If Respuesta = vbYes Then
            FormatoSheet.Copy
            ActiveWorkbook.SaveAs filename:=NombredeArchivo
            ActiveWorkbook.Close
        Else
            Set AplicacionExcel = CreateObject("Excel.Application")
            Set ReportBook = AplicacionExcel.Application.Workbooks.Open(NombredeArchivo)
            AplicacionExcel.Visible = True
            Exit Sub
        End If
    End If
    
    Set AplicacionExcel = CreateObject("Excel.Application")
    Set ReportBook = AplicacionExcel.Application.Workbooks.Open(NombredeArchivo)
    
    Application.DisplayAlerts = True
    
    ReportBook.Worksheets("Reporte Ticket").Name = "Ticket"
    
    
    
    Set TicketSheet = ReportBook.Worksheets("Ticket")
    
    Set DetallesSheet = ReportBook.Sheets.Add(after:=ReportBook.Sheets(ReportBook.Sheets.Count))
    DetallesSheet.Name = "Detalles"
    
    TicketSheet.Activate
    
    Etiqueta = "SET-CANTIDAD"
    RenglonPegarDatos = EtiquetaRow(TicketSheet, Etiqueta)
    ColumnaCantidad = EtiquetaColumn(TicketSheet, Etiqueta)

    Etiqueta = "SET-DESCRIPCION"
    RenglonPegarDatos = EtiquetaRow(TicketSheet, Etiqueta)
    ColumnaDescripcion = EtiquetaColumn(TicketSheet, Etiqueta)
    
    Etiqueta = "SET-UNITARIO"
    RenglonPegarDatos = EtiquetaRow(TicketSheet, Etiqueta)
    ColumnaUnitario = EtiquetaColumn(TicketSheet, Etiqueta)
    
    Etiqueta = "SET-EXTENDIDO"
    RenglonPegarDatos = EtiquetaRow(TicketSheet, Etiqueta)
    ColumnaExtendido = EtiquetaColumn(TicketSheet, Etiqueta)
    
'''''''FORMATO DETALLES
    
    DetallesSheet.Range("A1:Z1") = DatosSheet.Range("A1:Z1").Value
    RenglonDetalle = 2
    For RenglonItem = UBound(ArrayItems) To LBound(ArrayItems) Step -1
    
        If ColumnaCantidad <> False Then
            TicketSheet.Range(ColumnaCantidad & RenglonPegarDatos) = DatosSheet.Range("H" & ArrayItems(RenglonItem)).Value
        End If
        If ColumnaDescripcion <> False Then
            TicketSheet.Range(ColumnaDescripcion & RenglonPegarDatos) = DatosSheet.Range("E" & ArrayItems(RenglonItem)).Value & " " & DatosSheet.Range("F" & ArrayItems(RenglonItem)).Value
        End If
        
        If ColumnaUnitario <> False Then
            TicketSheet.Range(ColumnaUnitario & RenglonPegarDatos) = DatosSheet.Range("I" & ArrayItems(RenglonItem)).Value
            TicketSheet.Range(ColumnaUnitario & RenglonPegarDatos).NumberFormat = "$ #,##0.00"
        End If
        
        If ColumnaExtendido <> False Then
            TicketSheet.Range(ColumnaExtendido & RenglonPegarDatos) = DatosSheet.Range("J" & ArrayItems(RenglonItem)).Value
            TicketSheet.Range(ColumnaExtendido & RenglonPegarDatos).NumberFormat = "$ #,##0.00"
        End If
        
        DetallesSheet.Range("A" & RenglonDetalle & ":Z" & RenglonDetalle) = DatosSheet.Range("A" & ArrayItems(RenglonItem) & ":Z" & ArrayItems(RenglonItem)).Value
        DetallesSheet.Range("J" & RenglonDetalle).FormulaR1C1 = "=RC[-2]*RC[-1]"  ' subtotal
        DetallesSheet.Range("N" & RenglonDetalle).FormulaR1C1 = "=RC[-5]*RC[-1]"   ' descuento
        DetallesSheet.Range("P" & RenglonDetalle).FormulaR1C1 = "=RC[-7]*RC[-1]"   ' impuesto
        DetallesSheet.Range("Q" & RenglonDetalle).FormulaR1C1 = "=RC[-7]-RC[-3]+RC[-1]"   'total

        If RenglonItem <> 1 Then
            TicketSheet.Rows(RenglonPegarDatos + 1).Insert
            TicketSheet.Rows(RenglonPegarDatos).Copy
            TicketSheet.Rows(RenglonPegarDatos + 1).PasteSpecial (xlPasteFormats)
        End If

        RenglonPegarDatos = RenglonPegarDatos + 1
        RenglonDetalle = RenglonDetalle + 1
        
    Next
    AplicacionExcel.CutCopyMode = False
    
    UltimoRenglon = GetLastRow(DetallesSheet)
    DetallesSheet.Range("A1:Z" & UltimoRenglon).Font.Size = 8
    DetallesSheet.Columns("A:Z").EntireColumn.AutoFit
    DetallesSheet.Range("A1:Z1").Interior.Color = RGB(168, 193, 230)
        
    Etiqueta = "SET-SUB-TOTAL"
    Renglon = EtiquetaRow(TicketSheet, Etiqueta)
    Columna = EtiquetaColumn(TicketSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        Set RangeSuma = DetallesSheet.Range("J:J")
        TicketSheet.Range(Columna & Renglon) = AplicacionExcel.WorksheetFunction.Sum(RangeSuma)
        TicketSheet.Range(Columna & Renglon).NumberFormat = "$ #,##0.00"
    End If

    Etiqueta = "SET-DESCUENTO"
    Renglon = EtiquetaRow(TicketSheet, Etiqueta)
    Columna = EtiquetaColumn(TicketSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        Set RangeSuma = DetallesSheet.Range("N:N")
        TicketSheet.Range(Columna & Renglon) = AplicacionExcel.WorksheetFunction.Sum(RangeSuma)
        TicketSheet.Range(Columna & Renglon).NumberFormat = "$ #,##0.00"
    End If

    Etiqueta = "SET-IMPUESTO"
    Renglon = EtiquetaRow(TicketSheet, Etiqueta)
    Columna = EtiquetaColumn(TicketSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        Set RangeSuma = DetallesSheet.Range("P:P")
        TicketSheet.Range(Columna & Renglon) = AplicacionExcel.WorksheetFunction.Sum(RangeSuma)
        TicketSheet.Range(Columna & Renglon).NumberFormat = "$ #,##0.00"
    End If

    Etiqueta = "SET-TOTAL"
    Renglon = EtiquetaRow(TicketSheet, Etiqueta)
    Columna = EtiquetaColumn(TicketSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        Set RangeSuma = DetallesSheet.Range("Q:Q")
        TicketSheet.Range(Columna & Renglon) = AplicacionExcel.WorksheetFunction.Sum(RangeSuma)
        TicketSheet.Range(Columna & Renglon).NumberFormat = "$ #,##0.00"
    End If

    Etiqueta = "SET-FOLIO"
    Renglon = EtiquetaRow(TicketSheet, Etiqueta)
    Columna = EtiquetaColumn(TicketSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        TicketSheet.Range(Columna & Renglon) = IdReporte
    End If

    Etiqueta = "SET-FECHA"
    Renglon = EtiquetaRow(TicketSheet, Etiqueta)
    Columna = EtiquetaColumn(TicketSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        TicketSheet.Range(Columna & Renglon) = DatosSheet.Range("K" & RenglonVenta)
    End If
    
    Etiqueta = "SET-TIME"
    Renglon = EtiquetaRow(TicketSheet, Etiqueta)
    Columna = EtiquetaColumn(TicketSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        TicketSheet.Range(Columna & Renglon) = Format(DatosSheet.Range("K" & RenglonVenta), "hh:mm")
    End If

    Etiqueta = "SET-CANTIDAD-LETRAS-MEXICO"
    Renglon = EtiquetaRow(TicketSheet, Etiqueta)
    Columna = EtiquetaColumn(TicketSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        Set RangeSuma = DetallesSheet.Range("Q:Q")
        TicketSheet.Range(Columna & Renglon) = PesosMN(AplicacionExcel.WorksheetFunction.Sum(RangeSuma))
    End If
    
    Etiqueta = "SET-DIRECCION-CUENTA"
    Renglon = EtiquetaRow(TicketSheet, Etiqueta)
    Columna = EtiquetaColumn(TicketSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        TicketSheet.Range(Columna & Renglon) = DatosSheet.Range("W" & RenglonVenta)
    End If
    
    Etiqueta = "SET-CORREO-CUENTA"
    Renglon = EtiquetaRow(TicketSheet, Etiqueta)
    Columna = EtiquetaColumn(TicketSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        TicketSheet.Range(Columna & Renglon) = DatosSheet.Range("X" & RenglonVenta)
    End If
    
    Etiqueta = "SET-TELEFONO-CUENTA"
    Renglon = EtiquetaRow(TicketSheet, Etiqueta)
    Columna = EtiquetaColumn(TicketSheet, Etiqueta)
    If Renglon <> False And Columna <> False Then
        TicketSheet.Range(Columna & Renglon) = DatosSheet.Range("Y" & RenglonVenta)
    End If
''''''''''''''''''''' V A L I D A T E   ''''''''''''''Validar cantidades, proceso alternativo
'''''''''''''''''''' COMPARAR CANTIDADES
    ValorA = Application.WorksheetFunction.SumIf(DatosSheet.Range("A:A"), Idreport, DatosSheet.Range("H:H"))
    ValorB = AplicacionExcel.WorksheetFunction.SumIf(DetallesSheet.Range("A:A"), Idreport, DetallesSheet.Range("H:H"))
    If ValorA <> ValorB Then
        MsgBox "Error al generar reporte!!!", vbCritical
    End If
'''''''''''''''''''' COMPARAR UNITARIOS
    ValorA = Application.WorksheetFunction.SumIf(DatosSheet.Range("A:A"), Idreport, DatosSheet.Range("I:I"))
    ValorB = AplicacionExcel.WorksheetFunction.SumIf(DetallesSheet.Range("A:A"), Idreport, DetallesSheet.Range("I:I"))
    If ValorA <> ValorB Then
        MsgBox "Error al generar reporte!!!", vbCritical
    End If
    
    UltimoRenglon = GetLastRow(DetallesSheet)
    DetallesSheet.Range("E" & UltimoRenglon + 1) = "TOTALES"
    DetallesSheet.Range("H" & UltimoRenglon + 1).FormulaR1C1 = "=SUM(R[" & ((UltimoRenglon * -1) + 1) & "]C:R[-1]C)"
    DetallesSheet.Range("J" & UltimoRenglon + 1).FormulaR1C1 = "=SUM(R[" & ((UltimoRenglon * -1) + 1) & "]C:R[-1]C)"
    DetallesSheet.Range("N" & UltimoRenglon + 1).FormulaR1C1 = "=SUM(R[" & ((UltimoRenglon * -1) + 1) & "]C:R[-1]C)"
    DetallesSheet.Range("P" & UltimoRenglon + 1).FormulaR1C1 = "=SUM(R[" & ((UltimoRenglon * -1) + 1) & "]C:R[-1]C)"
    DetallesSheet.Range("Q" & UltimoRenglon + 1).FormulaR1C1 = "=SUM(R[" & ((UltimoRenglon * -1) + 1) & "]C:R[-1]C)"
    DetallesSheet.Range("A" & UltimoRenglon + 1 & ":Z" & UltimoRenglon + 1).Font.Size = 8
    DetallesSheet.Range("A" & UltimoRenglon + 1 & ":Z" & UltimoRenglon + 1).Font.Bold = True

On Error GoTo ErrorAlGuardar

    ErrorHandler = "Error al imprimir, no pudo activar la impresora!!!"
    If MyPOSBook.Worksheets("Preferencias").Range("B6").Value <> "" Then
        AplicacionExcel.ActivePrinter = MyPOSBook.Worksheets("Preferencias").Range("B6").Value
    End If
    
    ErrorHandler = "Error al imprimir, no pudo configurar la hoja!!!"
    If MyPOSBook.Worksheets("Preferencias").Range("B7").Value <> "" Then
         TicketSheet.PageSetup.PaperSize = MyPOSBook.Worksheets("Preferencias").Range("B7").Value
    End If

    AplicacionExcel.ActiveWorkbook.Save
    AplicacionExcel.DisplayAlerts = True
    
    ReportBook.Activate
    TicketSheet.Activate
    TicketSheet.Range("A1").Activate
    
    If ShowEXCEL = True Then
        AplicacionExcel.Visible = True
    End If
    
    Exit Sub
ErrorAlGuardar:
    
    MsgBox "Error al guardar, descripcion del error " & Err.Description
    MsgBox ErrorHandler
    
End Sub

Private Function EtiquetaColumn(SheetRango As Worksheet, Cadena As String) As Variant
    Dim RangoBusqueda As Range
    Set RangoBusqueda = SheetRango.Cells.Find(WHAT:=Cadena, LookIn:=xlValues, lookat:=xlWhole)
    If RangoBusqueda Is Nothing Then
        EtiquetaColumn = False
    Else
        EtiquetaColumn = ActiveRangeLetter(RangoBusqueda)
    End If
End Function

Private Function EtiquetaRow(SheetRango As Worksheet, Cadena As String) As Long
    Dim RangoBusqueda As Range
    Set RangoBusqueda = SheetRango.Cells.Find(WHAT:=Cadena, LookIn:=xlValues, lookat:=xlWhole)
    If RangoBusqueda Is Nothing Then
        EtiquetaRow = False
    Else
        EtiquetaRow = RangoBusqueda.Row
    End If
End Function

Private Function ActiveRangeLetter(Rango As Range) As String
    
    ActiveRangeLetter = Split(Rango.Address, "$")(1)  '1 Letra --- 2 Number
    
End Function
Attribute VB_Name = "ReporteVentasGeneralPivot"

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Public Sub ReporteVentasGeneral()

    Dim DetallesSheet As Worksheet
    Dim ReporteSheet As Worksheet
    Dim UltimoRenglon As Long
    Dim ReporteVentas As String
    Dim RangoReporte As Range
    
    Dim FechaLabel As String
    Dim NombreToolLabel As String
    Dim CantidadLabel As String
    Dim TotalLabel As String
    Dim DescuentoLabel As String
    Dim ImpuestoLabel As String
    Dim ExtendidoLabel As String
    
    Dim MyBook As Workbook
    Dim NewBook As Workbook
    Dim NombredeArchivo As String
    Dim AplicacionExcel As Application
    
    Set MyBook = ThisWorkbook
    Set DetallesSheet = MyBook.Worksheets("Ventas")
    
    UltimoRenglon = GetLastRow(DetallesSheet)
    If UltimoRenglon < 2 Then
        MsgBox "Sin Ventas para generar reporte!!!"
        Exit Sub
    End If
    
    MyBook.Activate
    
    DirectoryValidate "Reportes"
    NombredeArchivo = ThisWorkbook.Path & "\Tools\Reportes\Reporte Venta " & Year(IdFechaReporte) & " " & Month(IdFechaReporte) & NombreMes(Month(IdFechaReporte)) & " " & Day(IdFechaReporte) & ".xlsx"
    If IsFileOpen(NombredeArchivo) Then
        MsgBox "Archivo se encuentra en uso, no se puede sobreescribir!!!"
        Exit Sub
    End If
    
    Application.DisplayAlerts = False
    If Dir(NombredeArchivo) = "" Then
        
        DetallesSheet.Select
        DetallesSheet.Copy
        ActiveWorkbook.SaveAs filename:=NombredeArchivo
        ActiveWorkbook.Close
        ActiveWorkbook.Application.CutCopyMode = False
    
    Else
    
        Respuesta = MsgBox("Ya existe este archivo, desea reemplazarlo, teclee NO para abrir existente?", vbYesNo)
        If Respuesta = vbYes Then
        
            DetallesSheet.Select
            DetallesSheet.Copy
            ActiveWorkbook.SaveAs filename:=NombredeArchivo
            ActiveWorkbook.Close
            ActiveWorkbook.Application.CutCopyMode = False
            
        Else
            Set AplicacionExcel = CreateObject("Excel.Application")
            Set ReportBook = AplicacionExcel.Application.Workbooks.Open(NombredeArchivo)
            AplicacionExcel.Visible = True
            Exit Sub
        End If
    End If
    
    Set AplicacionExcel = CreateObject("Excel.Application")
    Set NewBook = AplicacionExcel.Application.Workbooks.Open(NombredeArchivo)
    AplicacionExcel.Visible = True
    AplicacionExcel.CutCopyMode = False
    


    Set ReporteSheet = NewBook.Worksheets.Add
    ReporteSheet.Name = "Reporte"
    Set DetallesSheet = NewBook.Worksheets("Ventas")
    DetallesSheet.Name = "Detalles"
    
    UltimoRenglon = GetLastRow(DetallesSheet)
    
    DetallesSheet.Range("L2:L" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    DetallesSheet.Range("N2:N" & UltimoRenglon).FormulaR1C1 = "=RC[-6]*RC[-2]*RC[-1]"
    DetallesSheet.Range("N2:N" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    DetallesSheet.Range("I2:I" & UltimoRenglon).FormulaR1C1 = "=RC[3]-(RC[3]*RC[4])"
    DetallesSheet.Range("I2:I" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    DetallesSheet.Range("J2:J" & UltimoRenglon).FormulaR1C1 = "=RC[-2]*RC[-1]"
    DetallesSheet.Range("J2:J" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    DetallesSheet.Range("P2:P" & UltimoRenglon).FormulaR1C1 = "=RC[-6]*RC[-1]"
    DetallesSheet.Range("P2:P" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    DetallesSheet.Range("Q2:Q" & UltimoRenglon).FormulaR1C1 = "=RC[-7]+RC[-1]"
    DetallesSheet.Range("Q2:Q" & UltimoRenglon).NumberFormat = "$ #,##0.00"
    
    DetallesSheet.Range("AA1") = "Fecha Reporte"
    DetallesSheet.Range("AA2:AA" & UltimoRenglon).FormulaR1C1 = "=TRUNC(RC[-16])"
    DetallesSheet.Range("AA2:AA" & UltimoRenglon).Copy
    DetallesSheet.Range("AA2:AA" & UltimoRenglon).PasteSpecial (xlPasteValues)
    
    FechaLabel = DetallesSheet.Range("AA1").Value
    NombreToolLabel = DetallesSheet.Range("E1").Value
    CantidadLabel = DetallesSheet.Range("H1").Value
    ExtendidoLabel = DetallesSheet.Range("J1").Value
    DescuentoLabel = DetallesSheet.Range("N1").Value
    ImpuestoLabel = DetallesSheet.Range("P1").Value
    TotalLabel = DetallesSheet.Range("Q1").Value
    
    UltimoRenglon = GetLastRow(DetallesSheet)
    Set RangoReporte = DetallesSheet.Range("A1:AA" & UltimoRenglon)
    
    ReporteVentas = NewBook.PivotCaches.Create(SourceType:=xlDatabase, SourceData:=RangoReporte).CreatePivotTable(TableDestination:=ReporteSheet.Cells(1, 1), TableName:="Reporte Ventas")
    
    ReporteSheet.Activate
    
    With NewBook.ActiveSheet.PivotTables(ReporteVentas).PivotFields(FechaLabel)
        .Orientation = xlRowField
        .Position = 1
    End With
    
    With NewBook.ActiveSheet.PivotTables(ReporteVentas).PivotFields(NombreToolLabel)
        .Orientation = xlRowField
        .Position = 2
    End With
    
    With NewBook.ActiveSheet.PivotTables(ReporteVentas).PivotFields(CantidadLabel)
        .Orientation = xlDataField
        .Function = xlSum
        .NumberFormat = "#,##0"
        .Name = "Cantidad "
        .Position = 1
    End With
    
    With NewBook.ActiveSheet.PivotTables(ReporteVentas).PivotFields(ExtendidoLabel)
        .Orientation = xlDataField
        .Function = xlSum
        .NumberFormat = "$ #,##0.00"
        .Name = " Extendido "
        .Position = 2
    End With
    
    With NewBook.ActiveSheet.PivotTables(ReporteVentas).PivotFields(DescuentoLabel)
        .Orientation = xlDataField
        .Function = xlSum
        .NumberFormat = "$ #,##0.00"
        .Name = " Descuento "
        .Position = 3
    End With
    
    With NewBook.ActiveSheet.PivotTables(ReporteVentas).PivotFields(ImpuestoLabel)
        .Orientation = xlDataField
        .Function = xlSum
        .NumberFormat = "$ #,##0.00"
        .Name = " Impuesto "
        .Position = 4
    End With
    
    With NewBook.ActiveSheet.PivotTables(ReporteVentas).PivotFields(TotalLabel)
        .Orientation = xlDataField
        .Function = xlSum
        .NumberFormat = "$ #,##0.00"
        .Name = " Total "
        .Position = 5
    End With
    
    NewBook.ActiveSheet.PivotTables(ReporteVentas).RowAxisLayout xlTabularRow
    NewBook.ActiveSheet.PivotTables(ReporteVentas).TableStyle2 = "PivotStyleMedium13"
    
    ReporteSheet.Columns("A:A").HorizontalAlignment = xlLeft
    ReporteSheet.Columns("C:C").HorizontalAlignment = xlCenter
    
    ReporteSheet.Rows("1:1").EntireRow.Hidden = True
    ReporteSheet.Rows("2:2").RowHeight = 30
    ReporteSheet.Range("A2:G2").HorizontalAlignment = xlCenter
    
    ReporteSheet.Range("B3").Select
    AplicacionExcel.ActiveWindow.FreezePanes = True
    
    NewBook.ShowPivotTableFieldList = True
    
    UltimoRenglon = GetLastRow(ReporteSheet)
    ReporteSheet.Range(ReporteSheet.Cells(1, 8), ReporteSheet.Cells(1, ReporteSheet.Columns(ReporteSheet.Columns.Count).Column)).EntireColumn.Hidden = True
    ReporteSheet.Range(ReporteSheet.Cells(UltimoRenglon + 1, 1), ReporteSheet.Cells(ReporteSheet.Rows(ReporteSheet.Rows.Count).Row, 1)).EntireRow.Hidden = True

    ReporteSheet.Activate
    ReporteSheet.Range("A2").Select
    
    AplicacionExcel.DisplayFormulaBar = False
    AplicacionExcel.ActiveWindow.DisplayHeadings = False
    AplicacionExcel.ActiveWindow.DisplayGridlines = False
        
End Sub
Attribute VB_Name = "ReporteXML"

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Private Sub Pruebas()

    Set Shellobj = CreateObject("Wscript.Shell")
    Shellobj.Run "cmd /c start iexplore " & Chr(34) & "G:\Sistema de Ventas\Tools\XMLs\Venta Folio - 001004 Sin Registro.xml" & Chr(34), 0, True
    Set Shellobj = Nothing

End Sub

Public Sub GenerarDocumentoXML(IdReporte As Long)

    Dim ArchivoXML As MSXML2.DOMDocument60
    Dim ElementoRootXML As MSXML2.IXMLDOMElement
    Dim CdataXML As MSXML2.IXMLDOMCDATASection
    Dim ElementoDOS As MSXML2.IXMLDOMElement
    Dim ElementoTRES As MSXML2.IXMLDOMElement
    Dim ElementoCUATRO As MSXML2.IXMLDOMElement
    Dim ElementoCINCO As MSXML2.IXMLDOMElement
    Dim ElementoSEIS As MSXML2.IXMLDOMElement
    Dim ElementoSIETE As MSXML2.IXMLDOMElement
    Dim ElementoOCHO As MSXML2.IXMLDOMElement
    Dim ElementoNUEVE As MSXML2.IXMLDOMElement
    
    Dim SubTotal As Currency
    Dim Descuento As Currency
    Dim Impuesto As Currency
    Dim TotalGeneral As Currency
    
    Dim RenglonItem As Long
    Dim RenglonDatos As Long
    Dim NombredeArchivo As String
    
    Dim ArrayVentas() As Variant
    Dim IndiceVentas As ClassIndice
    Set IndiceVentas = New ClassIndice
    IndiceVentas.CreateIndice Worksheets("Ventas"), "A"
    RenglonDatos = IndiceVentas.RenglonItem(IdReporte)
    ArrayVentas = IndiceVentas.FindItems(IdReporte)
    
    Set ArchivoXML = New MSXML2.DOMDocument60 'DOMDocument
    Set ElementoRootXML = ArchivoXML.createElement("Documento")
    ArchivoXML.appendChild ElementoRootXML
    
    Set ElementoDOS = ArchivoXML.createElement("Registro")
    ElementoDOS.setAttribute "xmlns:xsi", "PuntodeVentaenExcelUpdate2019"
    ElementoDOS.setAttribute "Fecha", Format(Worksheets("Ventas").Range("K" & RenglonDatos).Value, "dd-mmmm-yyyy")
    ElementoDOS.setAttribute "Folio", Worksheets("Ventas").Range("A" & RenglonDatos).Value
    ElementoRootXML.appendChild ElementoDOS
        
        Set ElementoDOS = ArchivoXML.createElement("Emisor")
        ElementoRootXML.appendChild ElementoDOS
    
            Set ElementoTRES = ArchivoXML.createElement("Origen")
            ElementoTRES.setAttribute "Canal", "todoenexcel"
            ElementoTRES.setAttribute "Direccion", "Ciudad de M|fffd|xico"
            ElementoTRES.setAttribute "Correo", "todoenexcel003@hotmail.com"
            ElementoDOS.appendChild ElementoTRES
    
        Set ElementoDOS = ArchivoXML.createElement("Receptor")
        ElementoRootXML.appendChild ElementoDOS
    
            Set ElementoTRES = ArchivoXML.createElement("Datos")
            ElementoTRES.setAttribute "Nombre", Worksheets("Ventas").Range("C" & RenglonDatos).Value
            ElementoTRES.setAttribute "Telefono", Worksheets("Ventas").Range("Y" & RenglonDatos).Value
            ElementoTRES.setAttribute "Correo", Worksheets("Ventas").Range("X" & RenglonDatos).Value
            ElementoTRES.setAttribute "Direccion", Worksheets("Ventas").Range("W" & RenglonDatos).Value
            ElementoDOS.appendChild ElementoTRES
    
        Set ElementoDOS = ArchivoXML.createElement("Conceptos")
        ElementoRootXML.appendChild ElementoDOS
        
            Set ElementoTRES = ArchivoXML.createElement("Items")
            ElementoDOS.appendChild ElementoTRES
            
            TotalGeneral = 0
            For RenglonItem = 1 To UBound(ArrayVentas)
                
                Set ElementoCUATRO = ArchivoXML.createElement("Detalles")
                ElementoCUATRO.setAttribute "Item", Worksheets("Ventas").Range("E" & ArrayVentas(RenglonItem)).Value
                ElementoCUATRO.setAttribute "UDM", Worksheets("Ventas").Range("G" & ArrayVentas(RenglonItem)).Value
                ElementoCUATRO.setAttribute "Cantidad", Worksheets("Ventas").Range("H" & ArrayVentas(RenglonItem)).Value
                ElementoCUATRO.setAttribute "Unitario", Format(Worksheets("Ventas").Range("I" & ArrayVentas(RenglonItem)).Value, "$ #,##0.00")
                ElementoCUATRO.setAttribute "Extendido", Format(Worksheets("Ventas").Range("J" & ArrayVentas(RenglonItem)).Value, "$ #,##0.00")
                ElementoTRES.appendChild ElementoCUATRO
                
                SubTotal = SubTotal + Worksheets("Ventas").Range("J" & ArrayVentas(RenglonItem)).Value
                Descuento = Descuento + Worksheets("Ventas").Range("N" & ArrayVentas(RenglonItem)).Value
                Impuesto = Impuesto + Worksheets("Ventas").Range("P" & ArrayVentas(RenglonItem)).Value
                TotalGeneral = TotalGeneral + Worksheets("Ventas").Range("Q" & ArrayVentas(RenglonItem)).Value
                
                Set ElementoCINCO = ArchivoXML.createElement("Impuesto")
                ElementoCINCO.setAttribute "Porcentaje", Format(Worksheets("Ventas").Range("O" & ArrayVentas(RenglonItem)).Value, "#0%")
                ElementoCINCO.setAttribute "Valor", Format(Worksheets("Ventas").Range("P" & ArrayVentas(RenglonItem)).Value, "$ #,##0.00")
                ElementoCUATRO.appendChild ElementoCINCO
                
                Set ElementoSEIS = ArchivoXML.createElement("Importaci|fffd|n")
                ElementoSEIS.setAttribute "Porcentaje", "0%"
                ElementoSEIS.setAttribute "Valor", Format(0, "$ #,##0.00")
                ElementoCINCO.appendChild ElementoSEIS
                
                Set ElementoSIETE = ArchivoXML.createElement("Exportaci|fffd|n")
                ElementoSIETE.setAttribute "Porcentaje", "0%"
                ElementoSIETE.setAttribute "Valor", Format(0, "$ #,##0.00")
                ElementoSEIS.appendChild ElementoSIETE
                
                Set ElementoOCHO = ArchivoXML.createElement("Descuento")
                ElementoOCHO.setAttribute "Porcentaje", Format(Worksheets("Ventas").Range("M" & ArrayVentas(RenglonItem)).Value, "#0%")
                ElementoOCHO.setAttribute "Valor", Format(Worksheets("Ventas").Range("N" & ArrayVentas(RenglonItem)).Value, "$ #,##0.00")
                ElementoSIETE.appendChild ElementoOCHO
                
                Set ElementoNUEVE = ArchivoXML.createElement("Categor|fffd|a")
                ElementoNUEVE.Text = Worksheets("Ventas").Range("S" & ArrayVentas(RenglonItem)).Value
                ElementoOCHO.appendChild ElementoNUEVE
                
            Next
            
        Set ElementoDOS = ArchivoXML.createElement("Globals")
        ElementoRootXML.appendChild ElementoDOS
            
            Set ElementoTRES = ArchivoXML.createElement("Totales")
            ElementoTRES.setAttribute "TotalGeneral", Format(TotalGeneral, "$ #,##0.00")
            ElementoTRES.setAttribute "Impuesto", Format(Impuesto, "$ #,##0.00")
            ElementoTRES.setAttribute "Descuento", Format(Descuento, "$ #,##0.00")
            ElementoTRES.setAttribute "Sub-Total", Format(SubTotal, "$ #,##0.00")
            ElementoDOS.appendChild ElementoTRES
                
                Set ElementoCUATRO = ArchivoXML.createElement("Total")
                ElementoCUATRO.setAttribute "Letra", PesosMN(TotalGeneral)
                ElementoTRES.appendChild ElementoCUATRO
        
    Set CdataXML = ArchivoXML.createCDATASection("Informaci|fffd|n")
    CdataXML.Data = "Punto de Venta en Excel" & vbNewLine & "Update 2019" & vbNewLine & "Canal Youtube - todoenexcel"
    ElementoRootXML.appendChild CdataXML
    
    DirectoryValidate "XMLs"
    NombredeArchivo = ThisWorkbook.Path & "\Tools\XMLs\Venta Folio - " & WorksheetFunction.Rept("0", 7 - Len("F" & IdReporte)) & IdReporte & " " & Worksheets("Ventas").Range("C" & RenglonDatos).Value & ".xml"
    Worksheets("Temporal").Range("A1") = NombredeArchivo
        
    ArchivoXML.Save NombredeArchivo
    Set Shellobj = CreateObject("Wscript.Shell")
    
    MenuExplorador.Show
    Explorador = MenuExplorador.GetFormatoMostrar
    Unload MenuExplorador
    
    If Explorador = "Chrome" Then
        Shellobj.Run "cmd /c start chrome " & Chr(34) & NombredeArchivo & Chr(34), 0, True
    Else
        If Explorador = "Firefox" Then
            Shellobj.Run "cmd /c start firefox " & Chr(34) & NombredeArchivo & Chr(34), 0, True
        Else
            If Explorador = "IExplore" Then
                Shellobj.Run "cmd /c start iexplore " & Chr(34) & NombredeArchivo & Chr(34), 0, True
            Else
                Exit Sub
            End If
        End If
    End If
    
    Set Shellobj = Nothing
            
        '''''''''''''''''''''''''''''''''''''''
    'EXPERIMENTAL
'    Dim sBuf As String
'    Dim sTemp As String
'    Dim iFileNum As Integer
'    Dim sFileName As String
'
'    ' Edit as needed
'    sFileName = ThisWorkbook.Path & "\my_file.xml"
'
'    iFileNum = FreeFile
'    Open sFileName For Input As iFileNum
'
'    Do Until EOF(iFileNum)
'        Line Input #iFileNum, sBuf
'        sTemp = sTemp & sBuf & vbCrLf
'    Loop
'    Close iFileNum
'
'    sTemp = Replace(sTemp, "stylesheet", "todoenexcel")
'
'    iFileNum = FreeFile
'    Open sFileName For Output As iFileNum
'    Print #iFileNum, sTemp
'    Close iFileNum
'
'    openurl sFileName
    
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet27"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet60"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet61"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Private Sub Workbook_Deactivate()
    On Error Resume Next
        With Application
            .CommandBars("Cell").Controls("Punto de Venta   Control-M").Delete
        End With
    On Error GoTo 0
End Sub

Private Sub Workbook_SheetBeforeRightClick(ByVal Sh As Object, ByVal Target As Range, Cancel As Boolean)
    Dim cmdBtn As CommandBarButton
    On Error Resume Next
        With Application
            .CommandBars("Cell").Controls("Punto de Venta   Control-M").Delete
            Set cmdBtn = .CommandBars("Cell").Controls.Add(Temporary:=True)
        End With
 
        With cmdBtn
           .Caption = "Punto de Venta   Control-M"
           .Style = msoButtonCaption
           .OnAction = "MostrarPuntodeVenta"
        End With
    On Error GoTo 0
End Sub

Private Sub Workbook_Open()
    Dim MyBook As Workbook
    Set MyBook = ThisWorkbook

    If Not MyBook.Worksheets("Preferencias").Range("B3") = "" Then
        If MyBook.Worksheets("Preferencias").Range("B1") = "" Then
            MenuOpciones.Show
        Else
            zLogin.SetClassWindow 1
            zLogin.Show
            Unload zLogin
        End If
    End If
End Sub
Sub Inicio()
Attribute Inicio.VB_ProcData.VB_Invoke_Func = "m\n14"
    MenuOpciones.Show
End Sub
Sub MostrarFormaCodigos()
    FormaCodigos.Show
End Sub
Attribute VB_Name = "Tools"
Attribute VB_Base = "0{DB323C82-BB34-4618-8E74-2F8BC950EAA5}{518EC2D0-69F4-44A9-9B59-A646F3775DE3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Private Sub CommandButton2_Click()

    Dim FileObject As Object
    Dim NewFileTXT As Object
    Dim PathFileEXCEL As String
    Dim PathFileVBS As String
    
    PathFileVBS = ThisWorkbook.Path & "\Tools\Temporal\Abrir Punto de Venta en Segundo Plano.VBS"
    
    PathFileEXCEL = ThisWorkbook.FullName
    
    If Dir(PathFileVBS) <> "" Then
        Kill PathFileVBS
    End If
    
    Set FileObject = CreateObject("Scripting.FileSystemObject")
    Set NewFileTXT = FileObject.CreateTextFile(PathFileVBS, True)
    NewFileTXT.WriteLine ("Public AplicacionExcel")
    NewFileTXT.WriteLine ("Public AplicacionExcelTemp")
    NewFileTXT.WriteLine ("Set AplicacionExcelTemp = CreateObject(" & Chr(34) & "Excel.Application" & Chr(34) & ")")
    NewFileTXT.WriteLine ("AplicacionExcelTemp.Visible = True")
    NewFileTXT.WriteLine ("AplicacionExcelTemp.Workbooks.Add()")
    NewFileTXT.WriteLine ("Set AplicacionExcel = CreateObject(" & Chr(34) & "Excel.Application" & Chr(34) & ")")
    NewFileTXT.WriteLine ("AplicacionExcel.Visible = True")
    NewFileTXT.WriteLine ("AplicacionExcel.Workbooks.Open (" & Chr(34) & PathFileEXCEL & Chr(34) & ")")
    NewFileTXT.Close
    
     Ruta = ThisWorkbook.Path & "\Tools\Temporal\"
     If Dir(Ruta, vbDirectory) <> "" Then
        ActiveWorkbook.FollowHyperlink Address:=Ruta, NewWindow:=True
     Else
        MsgBox "Directorio no existe: " & Ruta
     End If

End Sub

Private Sub CommandButton21_Click()
    Printers.Show
End Sub

Private Sub CommandButtonAbrirHistorial_Click()

End Sub

Private Sub CommandButtonDeleteTablesanDirectorios_Click()

'    Dim Directorio As String
'
'    Dim UltimoRenglon As Long
'    Dim DeleteDataSheet As Worksheet
'
'    Set DeleteDataSheet = Worksheets("Ventas")
'    UltimoRenglon = GetLastRow(DeleteDataSheet)
'    If UltimoRenglon > 1 Then
'        DeleteDataSheet.Range("A2:A" & UltimoRenglon).EntireRow.Delete
'    End If
'
'    Set DeleteDataSheet = Worksheets("Devoluciones")
'    UltimoRenglon = GetLastRow(DeleteDataSheet)
'    If UltimoRenglon > 1 Then
'        DeleteDataSheet.Range("A2:A" & UltimoRenglon).EntireRow.Delete
'    End If
'
'    Set DeleteDataSheet = Worksheets("Compras")
'    UltimoRenglon = GetLastRow(DeleteDataSheet)
'    If UltimoRenglon > 1 Then
'        DeleteDataSheet.Range("A2:A" & UltimoRenglon).EntireRow.Delete
'    End If
'
'    Set DeleteDataSheet = Worksheets("DevCompras")
'    UltimoRenglon = GetLastRow(DeleteDataSheet)
'    If UltimoRenglon > 1 Then
'        DeleteDataSheet.Range("A2:A" & UltimoRenglon).EntireRow.Delete
'    End If
'
'    Set DeleteDataSheet = Worksheets("Articulos")
'    UltimoRenglon = GetLastRow(DeleteDataSheet)
'    If UltimoRenglon > 1 Then
'        DeleteDataSheet.Range("A2:A" & UltimoRenglon).EntireRow.Delete
'    End If
'
'    Set DeleteDataSheet = Worksheets("Clientes")
'    UltimoRenglon = GetLastRow(DeleteDataSheet)
'    If UltimoRenglon > 1 Then
'        DeleteDataSheet.Range("A2:A" & UltimoRenglon).EntireRow.Delete
'    End If
'
'    Directorio = "\Tools\Ventas"
'    If Dir(ThisWorkbook.Path & Directorio & "\*.*") <> "" Then
'        Kill ThisWorkbook.Path & Directorio & "\*.*"
'    End If
'    If Dir(ThisWorkbook.Path & Directorio, vbDirectory) <> "" Then
'        RmDir ThisWorkbook.Path & Directorio
'    End If
'
'    Directorio = "\Tools\Ventas"
'    If Dir(ThisWorkbook.Path & Directorio & "\*.*") <> "" Then
'        Kill ThisWorkbook.Path & Directorio & "\*.*"
'    End If
'    If Dir(ThisWorkbook.Path & Directorio, vbDirectory) <> "" Then
'        RmDir ThisWorkbook.Path & Directorio
'    End If
'
'    Directorio = "\Tools\Images"
'    If Dir(ThisWorkbook.Path & Directorio & "\*.*") <> "" Then
'        Kill ThisWorkbook.Path & Directorio & "\*.*"
'    End If
'    If Dir(ThisWorkbook.Path & Directorio, vbDirectory) <> "" Then
'        RmDir ThisWorkbook.Path & Directorio
'    End If
'
'    Directorio = "\Tools\Compras"
'    If Dir(ThisWorkbook.Path & Directorio & "\*.*") <> "" Then
'        Kill ThisWorkbook.Path & Directorio & "\*.*"
'    End If
'    If Dir(ThisWorkbook.Path & Directorio, vbDirectory) <> "" Then
'        RmDir ThisWorkbook.Path & Directorio
'    End If

End Sub

Private Sub UserForm_Click()

End Sub
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{C99278B7-2647-4EB8-84AC-F5235533BA81}{0E77293E-532C-45B4-8346-0093C97CA4DC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "UserFormMessageBox"
Attribute VB_Base = "0{1D4E95BF-82E8-4F8B-9246-C763A3D04C1E}{0BA2FC88-B21A-4620-B4BC-A5C92921580B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim Inicio As Boolean
Dim Respuesta As Byte
Dim ClaseMessageBox As Byte
Dim MessageTexto As String
Dim VentanaLlamada As Object
Public Function RespuestaMsgBox() As Byte
    RespuestaMsgBox = Respuesta
End Function
Public Sub GetTexto(MsgTexto As String, ClassMensaje As Byte, UserFormTemp As Object)
    MessageTexto = MsgTexto
    ClaseMessageBox = ClassMensaje
    Set VentanaLlamada = UserFormTemp
End Sub

Private Sub CommandButtonAceptar_Click()
    Respuesta = vbYes
    Me.Hide
End Sub

Private Sub CommandButtonCancelar_Click()
    Respuesta = vbNo
    Me.Hide
End Sub

Private Sub UserForm_Activate()
    If Inicio = True Then
        Inicio = False
        Beep
        Me.Left = VentanaLlamada.Left + ((VentanaLlamada.Width - Me.Width) / 2)
        Me.Top = VentanaLlamada.Top + ((VentanaLlamada.Height - Me.Height) / 2)
        Me.Caption = VentanaLlamada.Caption '"Message!"
        If ClaseMessageBox = vbYesNo Then
            CommandButtonAceptar.Caption = "Si"
            CommandButtonCancelar.Caption = "No"
        End If
        If ClaseMessageBox = vbInformation Then
            Respuesta = vbYes

            CommandButtonAceptar.Left = (Me.Width - CommandButtonAceptar.Width) / 2
            CommandButtonCancelar.Visible = False

        End If
        LabelInfo = MessageTexto
    End If
End Sub

Private Sub UserForm_Initialize()
    Respuesta = vbNo
    Inicio = True
End Sub
Attribute VB_Name = "ZConfigWindow"
Attribute VB_Base = "0{E8A421A2-83AE-4B5C-B6ED-478A1FF17ADA}{FCBB5B66-B919-4E06-B856-880ED126E198}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Public RenglonVentana As Long
Public VentanaActiva As Object

Private Sub CommandButtonDown1_Click()
    VentanaActiva.Top = VentanaActiva.Top + ComboBoxValor
End Sub

Private Sub CommandButtonDown2_Click()
    VentanaActiva.Height = VentanaActiva.Height + ComboBoxValor
End Sub

Private Sub CommandButtonGuardar_Click()
        Worksheets("Preferencias").Cells(RenglonVentana, 2) = VentanaActiva.Top ' Centrar Vertical
        Worksheets("Preferencias").Cells(RenglonVentana, 3) = VentanaActiva.Left '(WidthLapTop - Me.Width) / 2 ' Centrar Horizontal
        Worksheets("Preferencias").Cells(RenglonVentana, 4) = VentanaActiva.Height
        Worksheets("Preferencias").Cells(RenglonVentana, 5) = VentanaActiva.Width
        Worksheets("Preferencias").Cells(RenglonVentana, 6) = VentanaActiva.Zoom
        ThisWorkbook.Save
        Me.Hide
End Sub

Private Sub CommandButtonLeft1_Click()
    VentanaActiva.Left = VentanaActiva.Left - ComboBoxValor
End Sub

Private Sub CommandButtonLeft2_Click()
    VentanaActiva.Width = VentanaActiva.Width - ComboBoxValor
End Sub

Private Sub CommandButtonRestaurar_Click()
    Worksheets("Preferencias").Cells(RenglonVentana, 2) = ""
    Worksheets("Preferencias").Cells(RenglonVentana, 3) = ""
    Worksheets("Preferencias").Cells(RenglonVentana, 4) = ""
    Worksheets("Preferencias").Cells(RenglonVentana, 5) = ""
    Worksheets("Preferencias").Cells(RenglonVentana, 6) = ""
    ThisWorkbook.Save
    Me.Hide
End Sub

Private Sub CommandButtonRight1_Click()
    VentanaActiva.Left = VentanaActiva.Left + ComboBoxValor
End Sub

Private Sub CommandButtonRight2_Click()
    VentanaActiva.Width = VentanaActiva.Width + ComboBoxValor
End Sub

Private Sub CommandButtonUp1_Click()
    VentanaActiva.Top = VentanaActiva.Top - ComboBoxValor
End Sub

Private Sub CommandButtonUp2_Click()
    VentanaActiva.Height = VentanaActiva.Height - ComboBoxValor
End Sub

Private Sub CommandButtonZoomDown_Click()
    VentanaActiva.Zoom = VentanaActiva.Zoom - ComboBoxValor
End Sub

Private Sub CommandButtonZoomUp_Click()
    VentanaActiva.Zoom = VentanaActiva.Zoom + ComboBoxValor
End Sub

Private Sub UserForm_Activate()
    ComboBoxValor.Value = 5
    ComboBoxValor.AddItem 1
    ComboBoxValor.AddItem 2
    ComboBoxValor.AddItem 3
    ComboBoxValor.AddItem 4
    ComboBoxValor.AddItem 5
End Sub

Private Sub UserForm_Initialize()
    Me.Top = 0
    Me.Left = 0
End Sub
Attribute VB_Name = "zLogin"
Attribute VB_Base = "0{519FB1EB-3F06-4BF5-8D6C-D5A8E6EBDA02}{7986249A-9E54-4A42-A31F-DA2F365C8541}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'Punto de Venta en Excel Update Julio 2019
'Youtube canal: todoenexcel
'Versi|fffd|n FREE
'Requisitos M|fffd|nimos: Windows 7 y Microsoft Excel 2007 32 y 64 bits.
'Pa|fffd|s: M|fffd|xico.

Dim ClassWindow As Byte

Public Sub SetClassWindow(TypeClassWindow As Byte)
    ClassWindow = TypeClassWindow
End Sub

Private Sub CommandButtonYoutube_Click()
    On Error GoTo salir
    Dim sWebsite As String
    sWebsite = "https://www.youtube.com/channel/UC0brveALTv15c9MwXPR7cWA"
        ActiveWorkbook.FollowHyperlink Address:=sWebsite, NewWindow:=True
salir:
End Sub

Private Sub UserForm_Activate()
    
    If ClassWindow = 1 Then
    
        CommandButtonAcceso.Visible = True
        CommandButtonAcceso.SetFocus
        Me.Caption = "Inicio"
        
    End If
    If ClassWindow = 2 Then
    
        CommandButtonYoutube.Visible = True
        CommandButtonYoutube.SetFocus
        Me.Caption = "Help"
    
    End If
    
End Sub

Private Sub CommandButtonAcceso_Click()
    Me.Hide
    MenuOpciones.Show
End Sub

Private Sub Label1_Click()
    On Error GoTo salir
    Dim sWebsite As String
    sWebsite = "https://www.youtube.com/channel/UC0brveALTv15c9MwXPR7cWA"
        ActiveWorkbook.FollowHyperlink Address:=sWebsite, NewWindow:=True
salir:
End Sub


' InQuest injected base64 decoded content
' K+-z
' UjZ+1
' N'$z
' z{ZR
' jkiJ]j
' L\zT
' zz+B
' k*+B
' *'~(
' *'~(
' bzWK

INQUEST-PP=macro
