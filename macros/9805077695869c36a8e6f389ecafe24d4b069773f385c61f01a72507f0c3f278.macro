Attribute VB_Name = "Annexure_A"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Cmdanx_A, 18, 0, MSForms, CommandButton"
Option Explicit
Private Sub Cmdanx_A_Click()
'''    Dim str As String
'''    str = num_text("7319621345")
    Call heading("Annexure A")
    Call annexa_checks
    If srno > 0 Then
        count_a = 0
        MsgBox "There are " & srno & " Errors. Please Check the error Sheet"
     Exit Sub
    End If
     MsgBox "Annexure A is Error Free "
     count_a = 1
End Sub
Attribute VB_Name = "Annexure_B"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cmdAnxb, 14, 0, MSForms, CommandButton"
Option Explicit
Private Sub CmdanxB_Click()
    Call heading("Annexure B")
    Annexure_B.Unprotect ("testtera")
    Annexure_B.Cells(10, 5) = num_text(Format(Val(Annexure_B.Cells(9, 4)), "0000000000"))
    Annexure_B.Protect ("testtera")
    Call annexb_checks
    If srno > 0 Then
        count_b = 0
        MsgBox "There are " & srno & " Errors. Please Check the error Sheet"
     Exit Sub
    End If
    count_b = 1
     MsgBox "Annexure B is Error Free       (OR)     No Data is Entered in this sheet"
End Sub

Attribute VB_Name = "Annexure_C"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cmdanx_C, 1, 0, MSForms, CommandButton"
Option Explicit
Private Sub cmdanx_c_Click()
    Call heading("Annexure C")
    Call annexc_checks
    If srno > 0 Then
        count_c = 0
        MsgBox "There are " & srno & " Errors. Please Check the error Sheet"
     Exit Sub
    End If
    count_c = 1
     MsgBox "Annexure C is Error Free     (OR)     No Data is Entered in this sheet"
End Sub

Attribute VB_Name = "Annexure_D"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cmdAnx_D, 23, 0, MSForms, CommandButton"
Option Explicit
Private Sub cmdanx_d_Click()
     Call heading("Annexure D")
     Call annexd_checks
    If srno > 0 Then
        count_d = 0
        MsgBox "There are " & srno & " Errors. Please Check the error Sheet"
     Exit Sub
    End If
        count_d = 1
        MsgBox "Annexure D is Error Free     (OR)     No Data is Entered in this sheet"
End Sub

Attribute VB_Name = "Errors"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Form_501"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cmdForm501, 70, 0, MSForms, CommandButton"
Option Explicit
Private Sub cmdForm501_Click()
     On Error GoTo Errorhandle
'     Dim fin As Integer
'     fin = get_finyear_app_diff("20070331", 20100401)
    Annexure_B.Unprotect ("testtera")
   Annexure_B.Cells(10, 5) = num_text(Format(Val(Annexure_B.Cells(9, 4)), "0000000000"))
    Annexure_B.Protect ("testtera")
     
     Call heading("FORM-501")
     Call form501_manditory
     Call form501_date_checks
     Call form501_numeric_checks
     Call annexa_checks
     Call annexb_checks
     Call annexc_checks
     Call annexd_checks
     If srno > 0 Then
        MsgBox "There are " & srno & " Errors. Please Check the error Sheet"
     Exit Sub
     End If
     Dim fname, curbook, cursheet, totr, totc, bigmsg
     Dim pointer As Integer
     Dim newbook, newbook1 As Object
     curbook = ActiveWorkbook.Name
     cursheet = ActiveSheet.Name
     Set newbook = CreateObject("Excel.sheet")
     fname = Left(curbook, Len(curbook) - 4) & "-Rem.txt"
     Open "" & fname For Output As 1
     Print #1, "version Form501 V1.3.0"
     Call write_FORM_501(1)
     If Annexure_A.Cells(4, 5) <> "" And Annexure_A.Cells(4, 7) <> "" Then
        Call write_annx_a(1)
     End If
     If Annexure_B.Cells(14, 4) <> "" Then
         Call write_annx_b(1)
     End If
     If Annexure_C.Cells(3, 6) <> "" And Annexure_C.Cells(3, 8) <> "" Then
        Call write_annx_C(1)
     End If
     If Annexure_D.Cells(4, 5) <> "" And Annexure_D.Cells(4, 7) <> "" Then
        Call write_annx_D(1)
     End If
     Close #1
     bigmsg = "Your form has been validated and is now error-free " & vbCrLf & vbCrLf
     bigmsg = bigmsg & "The file has been saved in My Documents \ " & fname & vbCrLf
     bigmsg = bigmsg & vbCrLf & "You will not be able to edit this saved file" & vbCrLf
     bigmsg = bigmsg & vbCrLf & "You can now upload this file"
     MsgBox bigmsg
 Exit Sub
Errorhandle:
 MsgBox ("Modifications Are Not Saved,Rem File Not Updated")
 ActiveWindow.WindowState = xlMaximized
End Sub

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "com_mod"
 Option Explicit
     Public i As Long
     Public j As Integer
     Public app_date As String
     Public p_date As String
     Public bigmsg As String
     Public lineno As Integer
     Public srno As Integer
'     Public temp_tin As String
'     Public temp_tin1 As String
     Public temp_date As String
     Public temp_date1 As String
     Public temp_date2 As String
     Public to_date As String
     Public flag As Integer
     Public pos As Double
     Public temp_no As Double
     Public neg As Double
     Public g_tot As Double
     Public temp_date_mmdd As String
     Public temp_date_mmdd1 As String
     Public count_a As Integer
     Public count_b As Integer
     Public count_c As Integer
     Public count_d As Integer
     Public Finyear_from_dt_wef As String
     Public Finyear_to_dt_wef As String
     Public Finyear_from_dt_refund As String
     Public Finyear_to_dt_refund As String
     Public no_days As Long
     Public anx_flag As Boolean
     
     
Public Sub heading(str As String)
     errors.Cells.Clear
     errors.Cells(1, 1) = str & " Errors"
     errors.Cells(3, 1) = "Srno"
     errors.Cells(3, 2) = "Line No"
     errors.Cells(3, 3) = "Box No"
     errors.Cells(3, 4) = "Sheet Name"
     errors.Cells(3, 5) = "Error Description"
     lineno = 3
     srno = 0
End Sub
Public Function check_email(p_str As String) As Boolean
 Dim s_er As Integer
 Dim ia As Integer
 Dim ina As Integer
 Dim strlen As Integer
 Dim atcount As Integer
 'allowed characters @
 Dim i As Integer
 Dim er As Integer
 Dim stlen As Integer
 check_email = legal_char_email(p_str)
 If check_email = False Then
     Exit Function
 End If
 atcount = InStr(1, p_str, "@")
 If atcount = 0 Or atcount = 1 Then
     check_email = False
     Exit Function
 End If
 atcount = InStr(1, p_str, ".")
 If atcount = 0 Or atcount = 1 Then
     check_email = False
     Exit Function
 End If
 atcount = InStr(1, p_str, "-")
 If atcount = 1 Then
     check_email = False
     Exit Function
 End If
 atcount = InStr(1, p_str, "@@")
 If atcount <> 0 Then
     check_email = False
     Exit Function
 End If
 atcount = InStr(1, p_str, "..")
 If atcount <> 0 Then
     check_email = False
     Exit Function
 End If
 atcount = InStr(1, p_str, "--", 1)
 If atcount <> 0 Then
     check_email = False
     Exit Function
 End If
 atcount = InStr(1, p_str, "__")
 If atcount <> 0 Then
     check_email = False
     Exit Function
 End If
 atcount = InStr(1, p_str, "@.")
 If atcount <> 0 Then
     check_email = False
     Exit Function
 End If
 atcount = InStr(1, p_str, "@-")
 If atcount <> 0 Then
     check_email = False
     Exit Function
 End If
 atcount = InStr(1, p_str, "@_")
 If atcount <> 0 Then
     check_email = False
     Exit Function
 End If
 atcount = InStr(1, p_str, ".@")
 If atcount <> 0 Then
     check_email = False
     Exit Function
 End If
 atcount = InStr(1, p_str, ".-")
 If atcount <> 0 Then
     check_email = False
     Exit Function
 End If
 atcount = InStr(1, p_str, "._")
 If atcount <> 0 Then
     check_email = False
     Exit Function
 End If
 atcount = InStr(1, p_str, "-@")
 If atcount <> 0 Then
     check_email = False
     Exit Function
 End If
 atcount = InStr(1, p_str, "-.")
 If atcount <> 0 Then
     check_email = False
     Exit Function
 End If
 atcount = InStr(1, p_str, "-_")
 If atcount <> 0 Then
     check_email = False
     Exit Function
 End If
 atcount = InStr(1, p_str, "_@")
 If atcount <> 0 Then
     check_email = False
     Exit Function
 End If
 atcount = InStr(1, p_str, "_.")
 If atcount <> 0 Then
     check_email = False
     Exit Function
 End If
 atcount = InStr(1, p_str, "_-")
 If atcount <> 0 Then
     check_email = False
     Exit Function
 End If
 If Right(p_str, 1) = "@" Then
     check_email = False
     Exit Function
 End If
 If Right(p_str, 1) = "." Then
     check_email = False
     Exit Function
 End If
 If Right(p_str, 1) = "_" Then
     check_email = False
     Exit Function
 End If
 If Right(p_str, 1) = "-" Then
     check_email = False
     Exit Function
 End If
 End Function
 Public Function legal_char_email(p_string As String) As Boolean
     Dim i As Integer
     legal_char_email = True
     For i = 1 To Len(p_string)
         Select Case UCase(Mid(p_string, i, 1))
             Case "A" To "Z", "0" To "9", "@", "_", ".", "-"
             Case Else
                 legal_char_email = False
                 
         End Select
     Next i
 End Function
 Public Function validate_tin(Ptin As String) As Boolean
   Dim errors As Boolean
   Dim intin As String
   Dim ttin As String
   Dim ii As Double
   Dim ck As Double
   errors = True
   If Len(Ptin) <> 12 Then
     errors = False
     GoTo skiptin
   End If
     If Left(Ptin, 2) <> 27 Then
         errors = False
         GoTo skiptin
     End If
     If UCase(Right(Ptin, 1)) <> "V" Then
         errors = False
         GoTo skiptin
     End If
     intin = Ptin
     ttin = Left(intin, 11)
     If (Not IsNumeric(ttin)) Then
         errors = False
         GoTo skiptin
     End If
     If ttin <> "" Then
         ii = Right(ttin, 7)
         ck = ii Mod 97
         ii = ck * 10000 + 2700
         ck = 98 - ii Mod 97
         ii = Mid(intin, 3, 2)
     End If
     If (CStr(ck) <> CStr(ii)) Then errors = False
     validate_tin = errors
skiptin:
 End Function
 Public Function validate_Cst(Ptin As String) As Boolean
   Dim errors As Boolean
   Dim intin As String
   Dim ttin As String
   Dim ii As Double
   Dim ck As Double
   errors = True
   If Len(Ptin) <> 12 Then
     errors = False
     GoTo skiptin
   End If
     If Left(Ptin, 2) <> 27 Then
         errors = False
         GoTo skiptin
     End If
     If UCase(Right(Ptin, 1)) <> "C" Then
         errors = False
         GoTo skiptin
     End If
     intin = Ptin
     ttin = Left(intin, 11)
     If (Not IsNumeric(ttin)) Then
         errors = False
         GoTo skiptin
     End If
     If ttin <> "" Then
         ii = Right(ttin, 7)
         ck = ii Mod 97
         ii = ck * 10000 + 2700
         ck = 98 - ii Mod 97
         ii = Mid(intin, 3, 2)
     End If
     If (CStr(ck) <> CStr(ii)) Then errors = False
     validate_Cst = errors
skiptin:
 End Function
Public Function check_Location(p_location As String) As String
    If p_location = "" Then
        check_Location = ""
        Exit Function
    End If
    check_Location = ""
    Select Case (Trim(p_location))
        Case "01-Mazgaon"
        Case "05-Thane"
        Case "06-Kalyan"
        Case "07-Palgar"
        Case "08-Nalasopara"
        Case "09-Pune"
        Case "10-Solapur"
        Case "11-Barshi"
        Case "12-Nashik"
        Case "13-Malegaon"
        Case "14-Dhule"
        Case "15-Jalgaon"
        Case "16-Ahmednagar"
        Case "17-Kolhapur"
        Case "18-Satara"
        Case "19-Sangli"
        Case "20-Ratnagiri"
        Case "21-Oras"
        Case "22-Nagpur"
        Case "23-Akola"
        Case "24-Amravati"
        Case "25-Vardha"
        Case "26-Yeotmal"
        Case "27-Chandrapur"
        Case "28-Gondia"
        Case "29-Khamgaon"
        Case "30-Gadchiroli"
        Case "31-Aurangabad"
        Case "32-Beed"
        Case "33-Parbhani"
        Case "34-Latur"
        Case "35-Nanded"
        Case "36-Osmanabad"
        Case "37-Jalna"
        Case "38-Bhandara"
        Case "39-Hingoli"
        Case "40-Nandurbar"
        Case "41-Raigad"
        Case "42-Washim"
        Case "43-Alibaugh"
        Case Else
            check_Location = "Illegal Location"
    End Select
End Function
Public Function check_rate_tax(p_rate_tax As String) As String
    If p_rate_tax = "" Then
        check_rate_tax = ""
        Exit Function
    End If
    check_rate_tax = ""
    Select Case (Trim(p_rate_tax))
        Case "1.00"
        Case "2.00"
        Case "3.00"
        Case "4.00"
        Case "5.00"
        Case "8.00"
        Case "12.50"
        Case "20.00"
        Case "25.00"
        Case "28.00"
        Case "38.00"
        Case Else
            check_rate_tax = "Illegal rate of tax"
    End Select
End Function
Public Function check_Designation(p_desg As String) As String
    If p_desg = "" Then
        check_Designation = ""
        Exit Function
    End If
    check_Designation = ""
    Select Case (Trim(p_desg))
        Case "Proprietor"
        Case "Partner"
        Case "Director"
        Case "Authorized Person"
        Case Else
            check_Designation = "Illegal Designation"
    End Select
End Function

Public Function date_ddmmyy_yyyymmdd(p_date As String) As String
Dim tempdate As Date
Dim Tempdate1 As String
If Trim(p_date) = "" Then
    date_ddmmyy_yyyymmdd = ""
    Exit Function
End If
If Val(Mid(p_date, 5, 2)) > 90 Then
    date_ddmmyy_yyyymmdd = "19" & Mid(p_date, 5, 2) & Mid(p_date, 3, 2) & Mid(p_date, 1, 2)
Else
    date_ddmmyy_yyyymmdd = "20" & Mid(p_date, 5, 2) & Mid(p_date, 3, 2) & Mid(p_date, 1, 2)
End If
End Function
Public Function date_validation(l_date As String) As Boolean
 Dim er_flg As Integer
 Dim l_day As String
 Dim l_month As String
 Dim l_year As String
 Dim l_maxday As String
     date_validation = True
 'Format Verification
     l_date = Trim(l_date)
     If l_date <> "" And l_date <> "0" Then
         If Len((l_date)) = 8 Then
             If IsNumeric(Mid(l_date, 1, 2)) = False _
                 Or IsNumeric(Mid(l_date, 4, 2)) = False _
                 Or IsNumeric(Mid(l_date, 7, 2)) = False _
                 Or (Mid(l_date, 3, 1)) <> "/" _
                 Or (Mid(l_date, 6, 1)) <> "/" Then
                     date_validation = False
                     Exit Function
             End If
         Else
             date_validation = False
             Exit Function
         End If
 
 'Day Validation
         l_day = Mid(l_date, 1, 2)
         l_month = Mid(l_date, 4, 2)
         l_year = Mid(l_date, 7, 2)
         'If l_year > 90 Then
         If l_year > 87 Then
             l_year = 19 & l_year
         Else
             l_year = 20 & l_year
         End If
 
         If l_day > 31 Or l_day <= 0 Then
             date_validation = False
             Exit Function
         End If
 
         Select Case (l_month)
         Case "01", "03", "05", "07", "08", "10", "12"
             l_maxday = 31
             If l_day > l_maxday Then
                 date_validation = False
                 Exit Function
              End If
         Case "04", "06", "09", "11"
             l_maxday = 30
             If l_day > l_maxday Then
                 date_validation = False
                 Exit Function
             End If
         Case "02"
             If l_year Mod 4 = 0 Then
                 l_maxday = 29
             Else
                 l_maxday = 28
             End If
 
             If l_day > l_maxday Then
                 date_validation = False
                 Exit Function
             End If
     End Select
 
 'Month Validation
 
     If l_month > 12 Or l_month <= 0 Then
         date_validation = False
         Exit Function
     End If
 
 'Year Validation
 
     If l_year > Year(Now) Then
        date_validation = False
        Exit Function
     Else
        If l_year < 1987 Then
           date_validation = False
           Exit Function
        End If
     End If
     app_date = Format(Now, "YYYYMMDD")
     p_date = l_year & l_month & l_day
 '    If 20050401 > p_date Then
 '        date_validation = False
 '        Exit Function
 '    End If
 
     If app_date < p_date Then
         date_validation = False
         Exit Function
     End If
 End If
 End Function
  Public Function Fdate_validation(l_date As String) As Boolean
 Dim er_flg As Integer
 Dim l_day As String
 Dim l_month As String
 Dim l_year As String
 Dim l_maxday As String
     Fdate_validation = True
 'Format Verification
     l_date = Trim(l_date)
     If l_date <> "" Then
         If Len((l_date)) = 8 Then
             If IsNumeric(Mid(l_date, 1, 2)) = False _
                 Or IsNumeric(Mid(l_date, 4, 2)) = False _
                 Or IsNumeric(Mid(l_date, 7, 2)) = False _
                 Or (Mid(l_date, 3, 1)) <> "/" _
                 Or (Mid(l_date, 6, 1)) <> "/" Then
                     Fdate_validation = False
                     Exit Function
             End If
         Else
             Fdate_validation = True
             Exit Function
         End If
 
 'Day Validation
         l_day = Mid(l_date, 1, 2)
         l_month = Mid(l_date, 4, 2)
         l_year = Mid(l_date, 7, 2)
         'If l_year > 90 Then
         If l_year > 87 Then
             l_year = 19 & l_year
         Else
             l_year = 20 & l_year
         End If
 
         If l_day > 31 Or l_day <= 0 Then
             Fdate_validation = False
             Exit Function
         End If
 
         Select Case (l_month)
         Case "01", "03", "05", "07", "08", "10", "12"
             l_maxday = 31
             If l_day > l_maxday Then
                 Fdate_validation = False
                 Exit Function
              End If
         Case "04", "06", "09", "11"
             l_maxday = 30
             If l_day > l_maxday Then
                 Fdate_validation = False
                 Exit Function
             End If
         Case "02"
             If l_year Mod 4 = 0 Then
                 l_maxday = 29
             Else
                 l_maxday = 28
             End If
 
             If l_day > l_maxday Then
                 Fdate_validation = False
                 Exit Function
             End If
     End Select
 
 'Month Validation
 
     If l_month > 12 Or l_month <= 0 Then
         Fdate_validation = False
         Exit Function
     End If
 
 'Year Validation
 
     If l_year > Year(Now) Then
        Fdate_validation = False
        Exit Function
     Else
        If l_year < 1987 Then
           Fdate_validation = False
           Exit Function
        End If
     End If
'     app_date = Format(Now, "YYYYMMDD")
'     p_date = l_year & l_month & l_day
' '    If 20050401 > p_date Then
' '        date_validation = False
' '        Exit Function
' '    End If
'
'     If app_date < p_date Then
'         date_validation = False
'         Exit Function
'     End If
 End If
 End Function

 Public Function date_yyyymmdd(p_date As String) As String
     Dim l_date As String
     If Trim(p_date) <> "" And Trim(p_date) <> 0 Then
         If (Mid(p_date, 7, 2) > 87) Then
            l_date = "19" & Mid(p_date, 7, 2) & Mid(p_date, 4, 2) & Mid(p_date, 1, 2)
         Else
            l_date = "20" & Mid(p_date, 7, 2) & Mid(p_date, 4, 2) & Mid(p_date, 1, 2)
         End If
         date_yyyymmdd = l_date
     Else
         date_yyyymmdd = ""
     End If
 End Function
Public Function ddmmyy_date(p_date As String) As Date
Dim Tempdate1 As String
If Trim(p_date) = "" Then
    ddmmyy_date = ""
    Exit Function
End If
Tempdate1 = date_ddmmyy_yyyymmdd(p_date)
ddmmyy_date = date_yyyymmdd1(p_date)  'change tempdate1
End Function
Public Function ddmmyy_date1(p_date As String) As Date
Dim Tempdate1 As String
If Trim(p_date) = "" Then
    ddmmyy_date1 = ""
    Exit Function
End If
Tempdate1 = date_ddmmyy_yyyymmdd(p_date)
ddmmyy_date1 = date_yyyymmdd1(Tempdate1)
End Function

Public Function date_yyyymmdd1(p_date As String) As Date
Dim tempdate As String
If Trim(p_date) <> "" Then
        tempdate = Mid(p_date, 5, 2) & "/" & Mid(p_date, 7, 2) & "/" & Mid(p_date, 1, 4)
        date_yyyymmdd1 = Format(tempdate, "mm/dd/yyyy")
End If
End Function
 Public Sub write_FORM_501(pointer As Integer)
     Print #pointer, "Form-501"
             Print #pointer, 1 & "|" & Form_501.Cells(1, 2)
             Print #pointer, 2 & "|" & Form_501.Cells(2, 2)
             Print #pointer, 3 & "|" & Form_501.Cells(3, 2)
         For i = 4 To 5
             Print #pointer, i & "|" & Form_501.Cells(i, 2) & "|" & Form_501.Cells(i, 3)
         Next
         For i = 7 To 7
             Print #pointer, i & "|" & Form_501.Cells(i, 2) & "|" & Form_501.Cells(i, 3) & "|" & Form_501.Cells(i, 7)
         Next
         For i = 8 To 11
             Print #pointer, i & "|" & Form_501.Cells(i, 2) & "|" & Form_501.Cells(i, 3)
         Next
             Print #pointer, 12 & "|" & Form_501.Cells(12, 2) & "|" & Form_501.Cells(12, 3) & "|" & (Form_501.Cells(12, 5)) & "|" & (Form_501.Cells(12, 6)) & "|" & (Form_501.Cells(12, 7)) & "|" & (Form_501.Cells(12, 9))
             Print #pointer, 13 & "|" & Form_501.Cells(13, 2) & "|" & Form_501.Cells(13, 3) & "|" & (Form_501.Cells(13, 5)) & "|" & (Form_501.Cells(13, 6)) & "|" & (Form_501.Cells(13, 7)) & "|" & (Form_501.Cells(13, 9))
         For i = 14 To 15
             Print #pointer, i & "|" & Form_501.Cells(i, 2) & "|" & Form_501.Cells(i, 3) & "|" & Form_501.Cells(i, 6)
         Next
             Print #pointer, 16 & "|" & Form_501.Cells(16, 2) & "|" & Form_501.Cells(16, 3) & "|" & date_yyyymmdd(Form_501.Cells(16, 4)) & "|" & (Form_501.Cells(16, 6)) & "|" & date_yyyymmdd(Form_501.Cells(16, 8))
         For i = 17 To 19
             Print #pointer, i & "|" & Form_501.Cells(i, 2) & "|" & Form_501.Cells(i, 3) & "|" & Form_501.Cells(i, 6)
         Next
             Print #pointer, 20 & "|" & Form_501.Cells(20, 2) & "|" & Form_501.Cells(20, 3)
         For i = 21 To 25
             Print #pointer, i & "|" & Form_501.Cells(i, 2) & "|" & Form_501.Cells(i, 3) & "|" & Form_501.Cells(i, 5)
         Next
             Print #pointer, 28 & "|" & Form_501.Cells(28, 2) & "|" & Form_501.Cells(28, 3) & "|" & Form_501.Cells(28, 5)
             Print #pointer, 29 & "|" & Form_501.Cells(29, 2) & "|" & Form_501.Cells(29, 3)
         For i = 30 To 32
             Print #pointer, i & "|" & Form_501.Cells(i, 2) & "|" & Form_501.Cells(i, 3) & "|" & Form_501.Cells(i, 8)
         Next
             Print #pointer, 33 & "|" & Form_501.Cells(33, 2) & "|" & Form_501.Cells(33, 3) & "|" & Form_501.Cells(33, 8) & "|" & Form_501.Cells(33, 10)
             Print #pointer, 34 & "|" & Form_501.Cells(34, 2) & "|" & Form_501.Cells(34, 3) & "|" & date_yyyymmdd(Form_501.Cells(34, 8)) & "|" & date_yyyymmdd(Form_501.Cells(34, 10))
         For i = 35 To 36
             Print #pointer, i & "|" & Form_501.Cells(i, 2) & "|" & Form_501.Cells(i, 3) & "|" & Form_501.Cells(i, 8)
         Next
             Print #pointer, 37 & "|" & Form_501.Cells(37, 2) & "|" & Form_501.Cells(37, 3) & "|" & date_yyyymmdd(Form_501.Cells(37, 8))
             Print #pointer, 38 & "|" & Form_501.Cells(38, 2) & "|" & Form_501.Cells(38, 3) & "|" & Form_501.Cells(38, 8)
             Print #pointer, 39 & "|" & Form_501.Cells(39, 2) & "|" & Form_501.Cells(39, 3) & "|" & Form_501.Cells(39, 8) & "|" & Form_501.Cells(39, 10)
             Print #pointer, 40 & "|" & Form_501.Cells(40, 2) & "|" & Form_501.Cells(40, 3) & "|" & date_yyyymmdd(Form_501.Cells(40, 8)) & "|" & date_yyyymmdd(Form_501.Cells(40, 10))
             Print #pointer, 41 & "|" & Form_501.Cells(41, 2) & "|" & Form_501.Cells(41, 3) & "|" & Form_501.Cells(41, 8) & "|" & Form_501.Cells(41, 10)
             Print #pointer, 42 & "|" & Form_501.Cells(42, 2) & "|" & Form_501.Cells(42, 3) & "|" & Form_501.Cells(42, 5) & "|" & Form_501.Cells(42, 6) & "|" & Form_501.Cells(42, 7) & "|" & Form_501.Cells(42, 9)
             Print #pointer, 43 & "|" & Form_501.Cells(43, 2) & "|" & Form_501.Cells(43, 3) & "|" & date_yyyymmdd(Form_501.Cells(43, 5)) & "|" & date_yyyymmdd(Form_501.Cells(43, 6)) & "|" & Form_501.Cells(43, 7) & "|" & Form_501.Cells(43, 9)
             Print #pointer, 44 & "|" & Form_501.Cells(44, 2) & "|" & Form_501.Cells(44, 3) & "|" & Form_501.Cells(44, 8)
             Print #pointer, 45 & "|" & Form_501.Cells(45, 2) & "|" & Form_501.Cells(45, 3)
         For i = 46 To 47
             Print #pointer, i & "|" & Form_501.Cells(i, 2) & "|" & Form_501.Cells(i, 3) & "|" & Form_501.Cells(i, 5)
         Next
             Print #pointer, 48 & "|" & Form_501.Cells(48, 2) & "|" & Form_501.Cells(48, 3) & "|" & Form_501.Cells(48, 5) & "|" & Form_501.Cells(48, 7) & "|" & Form_501.Cells(48, 9)
         For i = 49 To 51
             Print #pointer, i & "|" & Form_501.Cells(i, 2) & "|" & Form_501.Cells(i, 3)
         Next
         For i = 52 To 53
             Print #pointer, i & "|" & Form_501.Cells(i, 2) & "|" & Form_501.Cells(i, 3) & "|" & Form_501.Cells(i, 4) & "|" & Form_501.Cells(i, 6) & "|" & Form_501.Cells(i, 8)
         Next
             Print #pointer, 54 & "|" & Form_501.Cells(54, 2) & "|" & Form_501.Cells(54, 3) & "|" & Form_501.Cells(54, 4)
             Print #pointer, 55 & "|" & Form_501.Cells(55, 2) & "|" & Form_501.Cells(55, 3) & "|" & Form_501.Cells(55, 4) & "|" & Form_501.Cells(55, 6) & "|" & Form_501.Cells(55, 8)
             Print #pointer, 56 & "|" & Form_501.Cells(56, 2) & "|" & Form_501.Cells(56, 3) & "|" & date_yyyymmdd(Form_501.Cells(56, 4)) & "|" & Form_501.Cells(56, 6) & "|" & Form_501.Cells(56, 8)
         For i = 57 To 63
             Print #pointer, i & "|" & Form_501.Cells(i, 2) & "|" & Form_501.Cells(i, 3) & "|" & Form_501.Cells(i, 4) & "|" & Form_501.Cells(i, 6) & "|" & Form_501.Cells(i, 7)
         Next
 End Sub
 Public Sub write_annx_a(pointer As Integer)
     Print #pointer, "Form-501-AnnxA"
             Print #pointer, 1 & "|" & Annexure_A.Cells(1, 2)
             Print #pointer, 2 & "|" & Annexure_A.Cells(2, 2)
             Print #pointer, 4 & "|" & Annexure_A.Cells(4, 2) & "|" & Annexure_A.Cells(4, 4) & "|" & date_yyyymmdd(Annexure_A.Cells(4, 5)) & "|" & Annexure_A.Cells(4, 6) & "|" & date_yyyymmdd(Annexure_A.Cells(4, 7))
             Print #pointer, 5 & "|" & Annexure_A.Cells(5, 2)
         For i = 6 To 7
             Print #pointer, i & "|" & Annexure_A.Cells(i, 2) & "|" & Annexure_A.Cells(i, 8)
         Next
             Print #pointer, 8 & "|" & Annexure_A.Cells(8, 2)
         For i = 9 To 10
                Print #pointer, i & "|" & (Annexure_A.Cells(i, 2)) & "|" & _
                (Annexure_A.Cells(i, 3)) & "|" & (Annexure_A.Cells(i, 4)) & "|" & (Annexure_A.Cells(i, 5)) & "|" & (Annexure_A.Cells(i, 6)) & "|" & (Annexure_A.Cells(i, 7)) & "|" & (Annexure_A.Cells(i, 8))
         Next
        i = 10
        anx_flag = False
        While anx_flag = False
        i = i + 1
         If Trim(Annexure_A.Cells(i, 3)) = "" Then
            anx_flag = True
        End If
        If anx_flag = False Then
            If Trim(Annexure_A.Cells(i, 3)) <> "" Then
                Print #pointer, i & "|" & Annexure_A.Cells(i, 2) & "|" & Annexure_A.Cells(i, 3) & "|" & date_yyyymmdd(Annexure_A.Cells(i, 4)) & "|" & Annexure_A.Cells(i, 5) & "|" & Annexure_A.Cells(i, 6) & "|" & Annexure_A.Cells(i, 7) & "|" & Annexure_A.Cells(i, 8)
            End If
        End If
    Wend
 End Sub

 Public Sub write_annx_b(pointer As Integer)
     Print #pointer, "Form-501-AnnxB"
             Print #pointer, 1 & "|" & Annexure_B.Cells(1, 2) & "|" & Annexure_B.Cells(1, 3)
             Print #pointer, 2 & "|" & Annexure_B.Cells(2, 2) & "|" & Annexure_B.Cells(2, 3)
             Print #pointer, 3 & "|" & Annexure_B.Cells(3, 2) & "|" & Annexure_B.Cells(3, 3)
             For i = 4 To 5
                Print #pointer, i & "|" & Annexure_B.Cells(i, 2) & "|" & Annexure_B.Cells(i, 3) & "|" & Annexure_B.Cells(i, 4)
             Next
             Print #pointer, 6 & "|" & Annexure_B.Cells(6, 2) & "|" & Annexure_B.Cells(6, 3) & "|" & Annexure_B.Cells(6, 5) & "|" & Annexure_B.Cells(6, 7)
             Print #pointer, 7 & "|" & Annexure_B.Cells(7, 2) & "|" & Annexure_B.Cells(7, 3) & "|" & Annexure_B.Cells(7, 4) & "|" & Annexure_B.Cells(7, 6)
             Print #pointer, 8 & "|" & Annexure_B.Cells(8, 2) & "|" & Annexure_B.Cells(8, 3) & "|" & date_yyyymmdd(Annexure_B.Cells(8, 4)) & "|" & date_yyyymmdd(Annexure_B.Cells(8, 6))
             Print #pointer, 9 & "|" & Annexure_B.Cells(9, 2) & "|" & Annexure_B.Cells(9, 3) & "|" & Annexure_B.Cells(9, 4)
             Print #pointer, 10 & "|" & Annexure_B.Cells(10, 2) & "|" & Annexure_B.Cells(10, 3) & "|" & Annexure_B.Cells(10, 5)
         For i = 11 To 13
             Print #pointer, i & "|" & Annexure_B.Cells(i, 2) & "|" & Annexure_B.Cells(i, 3)
         Next
             Print #pointer, 14 & "|" & Annexure_B.Cells(14, 2) & "|" & Annexure_B.Cells(14, 3) & "|" & date_yyyymmdd(Annexure_B.Cells(14, 4)) & "|" & Annexure_B.Cells(14, 5) & "|" & Annexure_B.Cells(14, 7)
             Print #pointer, 15 & "|" & Annexure_B.Cells(15, 2) & "|" & Annexure_B.Cells(15, 3) & "|" & Annexure_B.Cells(15, 4) & "|" & Annexure_B.Cells(15, 5) & "|" & Annexure_B.Cells(15, 7)
 End Sub
 Public Sub write_annx_C(pointer As Integer)
     Print #pointer, "Form-501-AnnxC"
             Print #pointer, 1 & "|" & Annexure_C.Cells(1, 2) & "|" & Annexure_C.Cells(1, 3)
             Print #pointer, 2 & "|" & Annexure_C.Cells(2, 2) & "|" & Annexure_C.Cells(2, 3)
             Print #pointer, 3 & "|" & Annexure_C.Cells(3, 2) & "|" & Annexure_C.Cells(3, 5) & "|" & date_yyyymmdd(Annexure_C.Cells(3, 6)) & "|" & Annexure_C.Cells(3, 7) & "|" & date_yyyymmdd(Annexure_C.Cells(3, 8))
         For i = 4 To 5
             Print #pointer, i & "|" & Annexure_C.Cells(i, 2)
         Next
         For i = 6 To 7
                 Print #pointer, i & "|" & Annexure_C.Cells(i, 2) & "|" & (Annexure_C.Cells(i, 3)) & "|" & Annexure_C.Cells(i, 4) & "|" & Annexure_C.Cells(i, 5) & "|" & Annexure_C.Cells(i, 6) & "|" & (Annexure_C.Cells(i, 7)) & "|" & Annexure_C.Cells(i, 8) & "|" & Annexure_C.Cells(i, 9) & "|" & Annexure_C.Cells(i, 10) & "|" & Annexure_C.Cells(i, 11) & "|" & Annexure_C.Cells(i, 12)
         Next
         For i = 8 To 65536
             If Trim(Annexure_C.Cells(i, 3)) <> "" Then
                 Print #pointer, i & "|" & Annexure_C.Cells(i, 2) & "|" & (Annexure_C.Cells(i, 3)) & "|" & Annexure_C.Cells(i, 4) & "|" & Annexure_C.Cells(i, 5) & "|" & Annexure_C.Cells(i, 6) & "|" & date_yyyymmdd(Annexure_C.Cells(i, 7)) & "|" & Annexure_C.Cells(i, 8) & "|" & Annexure_C.Cells(i, 9) & "|" & Annexure_C.Cells(i, 10) & "|" & Annexure_C.Cells(i, 11) & "|" & Annexure_C.Cells(i, 12)
             Else
                Exit For
             End If
         Next
 End Sub
 Public Sub write_annx_D(pointer As Integer)
     Print #pointer, "Form-501-AnnxD"
             Print #pointer, 1 & "|" & Annexure_D.Cells(1, 2) & "|" & Annexure_D.Cells(1, 3)
             Print #pointer, 2 & "|" & Annexure_D.Cells(2, 2) & "|" & Annexure_D.Cells(2, 3)
             Print #pointer, 4 & "|" & Annexure_D.Cells(4, 2) & "|" & (Annexure_D.Cells(4, 4)) & "|" & date_yyyymmdd(Annexure_D.Cells(4, 5)) & "|" & (Annexure_D.Cells(4, 6)) & "|" & date_yyyymmdd(Annexure_D.Cells(4, 7))
         For i = 5 To 6
             Print #pointer, i & "|" & Annexure_D.Cells(i, 2)
         Next
         For i = 7 To 65536
             If Trim(Annexure_D.Cells(i, 3)) <> "" Then
                Print #pointer, i & "|" & Annexure_D.Cells(i, 2) & "|" & Annexure_D.Cells(i, 3) & "|" & Annexure_D.Cells(i, 4) & "|" & Annexure_D.Cells(i, 5) & "|" & Annexure_D.Cells(i, 6) & "|" & (Annexure_D.Cells(i, 7)) & "|" & date_yyyymmdd(Annexure_D.Cells(i, 8)) & "|" & Annexure_D.Cells(i, 9) & "|" & Annexure_D.Cells(i, 10)
             Else
                Exit For
             End If
         Next
 End Sub
Public Sub form501_manditory()
    Form_501.Cells(56, 4) = Format(Now, "dd/mm/yy")
'    If Trim(Form_501.Cells(7, 7)) = "" Then
'         lineno = lineno + 1
'         srno = srno + 1
'         errors.Cells(lineno, 1) = srno
'         errors.Cells(lineno, 2) = 7
'         errors.Cells(lineno, 3) = "A"
'         errors.Cells(lineno, 4) = "Form 501"
'         errors.Cells(lineno, 5) = "Refund Scheme Not Entered"
'     End If
    If UCase(Trim(Form_501.Cells(13, 3))) <> "YES" And _
       UCase(Trim(Form_501.Cells(13, 5))) <> "YES" And _
       UCase(Trim(Form_501.Cells(13, 6))) <> "YES" And _
       UCase(Trim(Form_501.Cells(13, 7))) <> "YES" And _
       UCase(Trim(Form_501.Cells(13, 9))) <> "YES" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 13
         errors.Cells(lineno, 3) = "1"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "At least one category of the dealer claming refund should be Entered"
     End If
    If Trim(Form_501.Cells(14, 6)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 14
         errors.Cells(lineno, 3) = "2"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "Name of the Dealer Not Entered"
     End If
    If Trim(Form_501.Cells(15, 6)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 15
         errors.Cells(lineno, 3) = "3"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "MVAT-TIN  Not Entered"
     End If
    If UCase(Trim(Form_501.Cells(13, 3))) = "YES" Then
        If Trim(Form_501.Cells(17, 6)) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = 17
            errors.Cells(lineno, 3) = "3"
            errors.Cells(lineno, 4) = "Form 501"
            errors.Cells(lineno, 5) = "CST-TIN  Not Entered"
        End If
     End If
   If Trim(Form_501.Cells(16, 4)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 16
         errors.Cells(lineno, 3) = "3(a)"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "W.E.F Date Not Entered"
     End If
     If Trim(Form_501.Cells(30, 8)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 30
         errors.Cells(lineno, 3) = "8(a)"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "Name of the Bank Not Entered"
     End If
    If Trim(Form_501.Cells(31, 8)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 31
         errors.Cells(lineno, 3) = "8(b)"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "Name of the Branch Not Entered"
     End If
    If Trim(Form_501.Cells(32, 8)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 32
         errors.Cells(lineno, 3) = "8(c)"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "Account NO Not Entered"
     End If
    If Trim(Form_501.Cells(34, 8)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 34
         errors.Cells(lineno, 3) = "9"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "From Date Not Entered"
     End If
    If Trim(Form_501.Cells(34, 10)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 34
         errors.Cells(lineno, 3) = "9"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "To Date Not Entered"
     End If
    If Trim(Form_501.Cells(35, 8)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 35
         errors.Cells(lineno, 3) = "10"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "Nature of Return Filled Not Entered"
     End If
    If Trim(Form_501.Cells(36, 8)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 36
         errors.Cells(lineno, 3) = "11"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "Form Type Not Entered"
     End If
    If Trim(Form_501.Cells(37, 8)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 37
         errors.Cells(lineno, 3) = "12"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "Date of Filling Return Not Entered"
     End If
    If Trim(Form_501.Cells(38, 8)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 38
         errors.Cells(lineno, 3) = "13"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "Amount of refund claimed Not Entered"
     End If
    If Trim(Form_501.Cells(44, 8)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 44
         errors.Cells(lineno, 3) = "16"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "Furnish Bank guarantee claimed Not Entered"
     End If
    If Trim(Form_501.Cells(46, 5)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 46
         errors.Cells(lineno, 3) = "17(a)"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "Name of the Person Not Entered"
     End If
    If Trim(Form_501.Cells(47, 5)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 47
         errors.Cells(lineno, 3) = "17(b)"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "Designation of the Person Not Entered"
     End If
    If Trim(Form_501.Cells(48, 5)) = "" And Trim(Form_501.Cells(48, 9)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 48
         errors.Cells(lineno, 3) = "17(c)"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "Atleast one Mobile No or Telephone No should be Entered"
     End If
    If Trim(Form_501.Cells(52, 4)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 52
         errors.Cells(lineno, 3) = "21"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "Place Not Entered"
     End If
    If Trim(Form_501.Cells(52, 8)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 52
         errors.Cells(lineno, 3) = "21"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "Name of the partner/Proprietor/Director/ Authorised persion No Not Entered"
     End If
    If Trim(Form_501.Cells(53, 4)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 53
         errors.Cells(lineno, 3) = "22"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "Email-id Not Entered"
     End If
    If (Trim(Form_501.Cells(53, 8))) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 53
         errors.Cells(lineno, 3) = "22"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "Designation Not Entered"
     End If
    If Trim(Form_501.Cells(55, 4)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 55
         errors.Cells(lineno, 3) = "22"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "Tel. No. with STD code Not Entered"
     End If
    If Trim(Form_501.Cells(55, 8)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 55
         errors.Cells(lineno, 3) = "22"
         errors.Cells(lineno, 4) = "Form 501"
         errors.Cells(lineno, 5) = "Mobile No Not Entered"
     End If
     
End Sub
Public Sub form501_date_checks()
   Dim l_fromdt As String
   Dim l_todt As String
   Dim l_claimdt As String
   
   l_fromdt = ""
   l_todt = ""
   l_claimdt = ""
    temp_date = Trim(Form_501.Cells(16, 4))
    If date_validation(temp_date) = False Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "16"
        errors.Cells(lineno, 3) = "3(a)"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid W.E.F Date (dd/mm/yy)"
    End If
    temp_date = Trim(Form_501.Cells(16, 8))
    If date_validation(temp_date) = False Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "16"
        errors.Cells(lineno, 3) = "3(a)"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid R.C.C Date (dd/mm/yy)"
    End If
    temp_date = Trim(Form_501.Cells(34, 8))
    If date_validation(temp_date) = False Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "34"
        errors.Cells(lineno, 3) = "9"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid Period of Return From Date (dd/mm/yy)"
    End If
    
    temp_date = Trim(Form_501.Cells(34, 8))
    If Trim(temp_date) <> "" Then
        If date_validation(temp_date) = True Then
            l_fromdt = date_yyyymmdd(temp_date)         '' from date yyyymmdd
            If date_yyyymmdd(temp_date) < 20060401 Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = "34"
                errors.Cells(lineno, 3) = "9"
                errors.Cells(lineno, 4) = "Form 501"
                errors.Cells(lineno, 5) = "From Date Should be greater than or equal to 01/04/06"
            End If
        End If
    temp_date = Trim(Form_501.Cells(34, 10))
            If date_validation(temp_date) = False Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = "34"
                errors.Cells(lineno, 3) = "9"
                errors.Cells(lineno, 4) = "Form 501"
                errors.Cells(lineno, 5) = "Invalid Period of Return To Date (dd/mm/yy)"
            End If
        End If
    temp_date = Trim(Form_501.Cells(34, 10))
    If date_validation(temp_date) = True Then
        If Trim(temp_date) <> "" Then
            l_todt = date_yyyymmdd(temp_date)         '' to date yyyymmdd
            If date_yyyymmdd(temp_date) < 20060401 Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = "34"
                errors.Cells(lineno, 3) = "9"
                errors.Cells(lineno, 4) = "Form 501"
                errors.Cells(lineno, 5) = "To Date Should be greater than or equal to 01/04/06"
            End If
        End If
    End If
    temp_date = Trim(Form_501.Cells(16, 8))
    temp_date1 = Trim(Form_501.Cells(34, 10))
    If Trim(temp_date) <> "" And Trim(temp_date1) <> "" Then
        If date_validation(temp_date) = True Then
            If date_validation(temp_date1) = True Then
                If Val(date_yyyymmdd(temp_date1)) > Val(date_yyyymmdd(temp_date)) Then
                    lineno = lineno + 1
                    srno = srno + 1
                    errors.Cells(lineno, 1) = srno
                    errors.Cells(lineno, 2) = "34"
                    errors.Cells(lineno, 3) = "9"
                    errors.Cells(lineno, 4) = "Form 501"
                    errors.Cells(lineno, 5) = "If date of Cancellation of Registration is entered," & _
                        " then To date of refund period should not be greater than date of R.C.C."

                End If
            End If
        End If
    End If
    '------------------------------------------------------------
    temp_date = Trim(Form_501.Cells(37, 8))
    If date_validation(temp_date) = False Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "37"
        errors.Cells(lineno, 3) = "12"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid Date of filling Return (dd/mm/yy)"
    End If
    temp_date = Trim(Form_501.Cells(40, 8))
    If date_validation(temp_date) = False Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "40"
        errors.Cells(lineno, 3) = "14"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid climed From Date (dd/mm/yy)"
    End If
    temp_date = Trim(Form_501.Cells(40, 10))
    If date_validation(temp_date) = False Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "40"
        errors.Cells(lineno, 3) = "14"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid climed To Date (dd/mm/yy)"
    End If
    temp_date = Trim(Form_501.Cells(43, 5))
    If date_validation(temp_date) = False Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "43"
        errors.Cells(lineno, 3) = "15"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid climed From Date (dd/mm/yy)"
    End If
    temp_date = Trim(Form_501.Cells(43, 6))
    If date_validation(temp_date) = False Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "43"
        errors.Cells(lineno, 3) = "15"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid climed To Date (dd/mm/yy)"
    End If
    temp_date = Trim(Form_501.Cells(56, 4))
    If date_validation(temp_date) = False Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "56"
        errors.Cells(lineno, 3) = "25"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid Date of Refund application (dd/mm/yy)"
        Else
        l_claimdt = date_yyyymmdd(temp_date)         '' Refund date yyyymmdd
    End If
'' refund claim with 18 months years check
'' date extended 3 more months now 21 months
'' modified on 30-09-2011
'' Phone from M Hari Prasad Rao
If ((l_fromdt <> "") And (l_todt <> "") And (l_claimdt <> "")) Then
    Dim finyear_end As String
    Dim finyear_end3 As String
    Dim months_1 As Integer
    finyear_end = get_finyear_end(l_todt)
    If (l_fromdt >= "20090401") Then
        finyear_end3 = get_add_date_7days(finyear_end, 21)
        If l_claimdt > finyear_end3 Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = "56"
            errors.Cells(lineno, 3) = "25"
            errors.Cells(lineno, 4) = "Form 501"
            errors.Cells(lineno, 5) = "Refund should be with in 21 Months of To dt."
        End If
    Else
        finyear_end3 = get_add_date(finyear_end, 36)
        If l_claimdt > finyear_end3 Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = "56"
            errors.Cells(lineno, 3) = "25"
            errors.Cells(lineno, 4) = "Form 501"
            errors.Cells(lineno, 5) = "Refund should be with in 36 Months of To dt."
        End If
    End If
End If
End Sub
Public Sub form501_numeric_checks()
'--------------------------Numaric checks-----------------------------------------------------
    If Val(Trim(Form_501.Cells(38, 8))) > 9999999999999# Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "38"
        errors.Cells(lineno, 3) = "13"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Amount of Refund is too big"
    End If
    If Val(Trim(Form_501.Cells(38, 8))) < -9999999999999# Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "38"
        errors.Cells(lineno, 3) = "13"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Amount of Refund is too Low"
    End If
    If Val(Trim(Form_501.Cells(41, 10))) > 9999999999999# Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "41"
        errors.Cells(lineno, 3) = "14"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Amount of Refund climed is too big"
    End If
    If Val(Trim(Form_501.Cells(41, 10))) < -9999999999999# Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "41"
        errors.Cells(lineno, 3) = "14"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Amount of Refund climed is too Low"
    End If
    If Val(Trim(Form_501.Cells(43, 7))) > 9999999999999# Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "41"
        errors.Cells(lineno, 3) = "14"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Tax payed  is too big"
    End If
    If Val(Trim(Form_501.Cells(43, 9))) < -9999999999999# Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "41"
        errors.Cells(lineno, 3) = "14"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Refund payed is too Low"
    End If
 If (Trim(Form_501.Cells(17, 6)) <> "") Then
    If Val(Left(Trim(Form_501.Cells(15, 6)), 11)) <> Val(Left(Trim(Form_501.Cells(17, 6)), 11)) Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "17"
        errors.Cells(lineno, 3) = "4"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Enter correct CST TIN"
    End If
End If
'-------------------------------------------- end Numaric values-------------------------------------------------

'--------------------------------------------Start Legal values-------------------------------------------------
'---------------------------------Legal checks--------------------------------------------------------------
    If check_YES_NO(Trim(Form_501.Cells(13, 3))) <> "" Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "13"
        errors.Cells(lineno, 3) = "1"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid Category of the dealer List"
    End If
    If check_YES_NO(Trim(Form_501.Cells(13, 4))) <> "" Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "13"
        errors.Cells(lineno, 3) = "1"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid Category of the dealer List"
    End If
    If check_YES_NO(Trim(Form_501.Cells(13, 5))) <> "" Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "13"
        errors.Cells(lineno, 3) = "1"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid Category of the dealer List"
    End If
    If check_YES_NO(Trim(Form_501.Cells(13, 6))) <> "" Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "13"
        errors.Cells(lineno, 3) = "1"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid Category of the dealer List"
    End If
    If check_YES_NO(Trim(Form_501.Cells(13, 7))) <> "" Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "13"
        errors.Cells(lineno, 3) = "1"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid Category of the dealer List"
    End If
    
    If check_YES_NO(Trim(Form_501.Cells(13, 9))) <> "" Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "13"
        errors.Cells(lineno, 3) = "1"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid Category of the dealer List"
    End If
    If check_Return_filled(Trim(Form_501.Cells(35, 8))) <> "" Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "35"
        errors.Cells(lineno, 3) = "10"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid Nature of return filed"
    End If
    If check_Form_type(Trim(Form_501.Cells(36, 8))) <> "" Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "35"
        errors.Cells(lineno, 3) = "10"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid Nature of return filed"
    End If
    If check_YES_NO(Trim(Form_501.Cells(44, 8))) <> "" Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "44"
        errors.Cells(lineno, 3) = "16"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid furnish Bank guarantee"
    End If
    If check_Designation(Trim(Form_501.Cells(47, 5))) <> "" Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "47"
        errors.Cells(lineno, 3) = "17(b)"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid Disgnation"
    End If
    If check_Designation(Trim(Form_501.Cells(53, 8))) <> "" Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "53"
        errors.Cells(lineno, 3) = "22"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Invalid Disgnation"
    End If

'_____________________________________________end Legal values--------------------------------------------
'------------------------  lengh checks-------------------------------------------------------
    If Len(Trim(Form_501.Cells(14, 6))) > 75 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "14"
        errors.Cells(lineno, 3) = "2"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Name of the dealer is too big"
    End If
    If Len(Trim(Form_501.Cells(18, 6))) > 75 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "18"
        errors.Cells(lineno, 3) = "5"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Entitlement Certificate No is too big"
    End If
    If Len(Trim(Form_501.Cells(19, 6))) > 75 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "19"
        errors.Cells(lineno, 3) = "6"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Certificate No. issued is too big"
    End If
    If Len(Trim(Form_501.Cells(21, 5))) > 75 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "21"
        errors.Cells(lineno, 3) = "7(a)"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Room/Floor No is too big"
    End If
    If Len(Trim(Form_501.Cells(22, 5))) > 75 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "22"
        errors.Cells(lineno, 3) = "7(b)"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Room/Floor No is too big"
    End If
    If Len(Trim(Form_501.Cells(23, 5))) > 75 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "23"
        errors.Cells(lineno, 3) = "7(c)"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "PlotNo,Street and Area is too big"
    End If
    If Len(Trim(Form_501.Cells(24, 5))) > 75 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "24"
        errors.Cells(lineno, 3) = "7(d)"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "City is too big"
    End If
    If Len(Trim(Form_501.Cells(28, 5))) > 75 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "28"
        errors.Cells(lineno, 3) = "7(f)"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "District is too big"
    End If

    If Len(Trim(Form_501.Cells(30, 8))) > 75 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "30"
        errors.Cells(lineno, 3) = "8(a)"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Name of the bank is too big"
    End If
    If Len(Trim(Form_501.Cells(31, 8))) > 75 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "31"
        errors.Cells(lineno, 3) = "8(b)"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Name of Branch is too big"
    End If
    If Len(Trim(Form_501.Cells(32, 8))) > 20 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "32"
        errors.Cells(lineno, 3) = "8(c)"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Account Number is too big"
    End If
    If Len(Trim(Form_501.Cells(46, 5))) > 75 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "46"
        errors.Cells(lineno, 3) = "17(a)"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Name of the Person is too big"
    End If
    If Len(Trim(Form_501.Cells(47, 5))) > 75 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "47"
        errors.Cells(lineno, 3) = "17(b)"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Designation is too big"
    End If
    If Len(Trim(Form_501.Cells(48, 5))) > 20 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "48"
        errors.Cells(lineno, 3) = "17(c)"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Mobile No is too big"
    End If
    If Len(Trim(Form_501.Cells(48, 9))) > 20 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "48"
        errors.Cells(lineno, 3) = "17(c)"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Telephone No with std code is too big"
    End If
    If Len(Trim(Form_501.Cells(52, 4))) > 75 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "52"
        errors.Cells(lineno, 3) = "21"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "place is too big"
    End If
    If Len(Trim(Form_501.Cells(52, 8))) > 75 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "52"
        errors.Cells(lineno, 3) = "21"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Name of the partner is too big"
    End If
    If Len(Trim(Form_501.Cells(53, 4))) > 100 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "53"
        errors.Cells(lineno, 3) = "22"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Email id is too big"
    End If
    If Len(Trim(Form_501.Cells(53, 8))) > 100 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "53"
        errors.Cells(lineno, 3) = "22"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Designation is too big"
    End If
    If Len(Trim(Form_501.Cells(54, 4))) > 20 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "54"
        errors.Cells(lineno, 3) = "23"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Fax no is too big"
    End If
    If Len(Trim(Form_501.Cells(55, 4))) > 20 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "55"
        errors.Cells(lineno, 3) = "24"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Tel No with STD Code is too big"
    End If
    If Len(Trim(Form_501.Cells(55, 8))) > 20 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "55"
        errors.Cells(lineno, 3) = "24"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Mobile No is too big"
    End If
    If Len(Trim(Form_501.Cells(56, 7))) > 1000 Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = "56"
        errors.Cells(lineno, 3) = "25"
        errors.Cells(lineno, 4) = "Form 501"
        errors.Cells(lineno, 5) = "Remarks is too big"
    End If
'------------------------------------end lengh checks-------------------------------------------
'------------------------------------Remaining--------------------------------------------------
'    If check_Refund_scheme(Trim(Form_501.Cells(7, 7))) <> "" Then
'        lineno = lineno + 1
'        srno = srno + 1
'        errors.Cells(lineno, 1) = srno
'        errors.Cells(lineno, 2) = "7"
'        errors.Cells(lineno, 3) = "A"
'        errors.Cells(lineno, 4) = "Form 501"
'        errors.Cells(lineno, 5) = "Invalid Refund Scheme"
'    End If
'    If (Trim(Form_501.Cells(7, 7))) = "Fast Track" Or (Trim(Form_501.Cells(7, 7))) = "General" Then
'        If (count_a = 0) Then
'            lineno = lineno + 1
'            srno = srno + 1
'            errors.Cells(lineno, 1) = srno
'            errors.Cells(lineno, 2) = "7"
'            errors.Cells(lineno, 3) = "A"
'            errors.Cells(lineno, 4) = "Form 501"
'            errors.Cells(lineno, 5) = "Validate Annexure A"
'        End If
'    End If
'    If (Trim(Form_501.Cells(7, 7))) = "Voluntary" Or (Trim(Form_501.Cells(7, 7))) = "Simplified" Then
        If (count_a = 0) Or (count_b = 0) Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = ""
            errors.Cells(lineno, 3) = ""
            errors.Cells(lineno, 4) = "Form 501"
            errors.Cells(lineno, 5) = "Annexure A and Annexure B are not validated"
        End If
'    End If
    If (Trim(Form_501.Cells(13, 5))) = "YES" Then
        If (count_c = 0) Or (count_d = 0) Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = "13"
            errors.Cells(lineno, 3) = "1"
            errors.Cells(lineno, 4) = "Form 501"
            errors.Cells(lineno, 5) = "Annexure C and Annexure D are not validated"
        End If
    End If
'-------------------------------------------Legal checks
    If Trim(Form_501.Cells(15, 6)) <> "" Then
        If validate_tin(Trim(Form_501.Cells(15, 6))) = False Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = "15"
            errors.Cells(lineno, 3) = "3"
            errors.Cells(lineno, 4) = "Form 501"
            errors.Cells(lineno, 5) = "Invalid  TIN "
        End If
    End If
'    If Trim(Form_501.Cells(16, 4)) <> "" Then
'    temp_date = date_yyyymmdd(Form_501.Cells(16, 4))
'        If Val(Right((temp_date), 4)) <= 331 Then
'            Finyear_from_dt_wef = Val(Mid(temp_date, 1, 4)) - 1
'            Finyear_to_dt_wef = Val(Mid(temp_date, 1, 4))
'        Else
'            Finyear_from_dt_wef = Val(Mid(temp_date, 1, 4))
'            Finyear_to_dt_wef = Val(Mid(temp_date, 1, 4)) + 1
'        End If
'    End If
'    temp_date1 = date_yyyymmdd(Form_501.Cells(34, 10))
'    If Trim(temp_date1) <> "" Then
'        If Val(Right(temp_date1, 4)) <= 331 Then
'                  Finyear_from_dt_refund = Val(Mid(temp_date1, 1, 4)) - 1
'                  Finyear_to_dt_refund = Val(Mid(temp_date1, 1, 4))
'                Else
'                  Finyear_from_dt_refund = Val(Mid(temp_date1, 1, 4))
'                  Finyear_to_dt_refund = Val(Mid(temp_date1, 1, 4)) + 1
'        End If
'    End If
'    If Trim(Form_501.Cells(16, 4)) <> "" And Trim(Form_501.Cells(56, 4)) <> "" Then
'        temp_date = Mid(Form_501.Cells(16, 4), 1, 2) & Mid(Form_501.Cells(16, 4), 4, 2) & Mid(Form_501.Cells(16, 4), 7, 2)
'        temp_date1 = Mid(Form_501.Cells(56, 4), 1, 2) & Mid(Form_501.Cells(56, 4), 4, 2) & Mid(Form_501.Cells(56, 4), 7, 2)
'
'        If Finyear_from_dt_wef = Finyear_from_dt_refund And Finyear_to_dt_wef = Finyear_to_dt_refund Then
'            no_days = get_duration_days(Right(temp_date, 6), Right(temp_date1, 6))
'            If no_days < 365 Then
'                lineno = lineno + 1
'                srno = srno + 1
'                errors.Cells(lineno, 1) = srno
'                errors.Cells(lineno, 2) = "56"
'                errors.Cells(lineno, 3) = "25"
'                errors.Cells(lineno, 4) = "Form 501"
'                errors.Cells(lineno, 5) = "Being the newly registered Dealer, Not entitled to apply for refund before expiry of one year from end of Registration year"
'            End If
'        End If
'    End If
    If Trim(Form_501.Cells(34, 8)) <> "" And Trim(Form_501.Cells(34, 10)) <> "" Then
        If get_finyear(date_yyyymmdd(Form_501.Cells(34, 8))) <> _
            get_finyear(date_yyyymmdd(Form_501.Cells(34, 10))) Then
                    lineno = lineno + 1
                    srno = srno + 1
                    errors.Cells(lineno, 1) = srno
                    errors.Cells(lineno, 2) = "34"
                    errors.Cells(lineno, 3) = "9"
                    errors.Cells(lineno, 4) = "Form 501"
                    errors.Cells(lineno, 5) = "The return periodicity is incorrect.Periodicity more than one year"
            
        End If
    End If
    
        If UCase(Trim(Form_501.Cells(13, 5))) = "YES" Then
            If (Trim(Form_501.Cells(17, 6))) = "" Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = "17"
                errors.Cells(lineno, 3) = "4"
                errors.Cells(lineno, 4) = "Form 501"
                errors.Cells(lineno, 5) = "CST TIN  not entered though selected yes for inter state category"
            End If
        End If
  
    If Trim(Form_501.Cells(17, 6)) <> "" Then
        If validate_Cst(Trim(Form_501.Cells(17, 6))) = False Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = "17"
            errors.Cells(lineno, 3) = "4"
            errors.Cells(lineno, 4) = "Form 501"
            errors.Cells(lineno, 5) = "Invalid CST TIN"
        End If
    End If
    If UCase(Trim(Form_501.Cells(13, 6))) = "YES" Then
        If (Trim(Form_501.Cells(18, 6))) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = "18"
            errors.Cells(lineno, 3) = "5"
            errors.Cells(lineno, 4) = "Form 501"
            errors.Cells(lineno, 5) = "Entitlement Certificate No not entered though selected yes for PSI category"
        End If
    End If
    If UCase(Trim(Form_501.Cells(13, 4))) = "YES" Then
        If (Trim(Form_501.Cells(19, 6))) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = "19"
            errors.Cells(lineno, 3) = "6"
            errors.Cells(lineno, 4) = "Form 501"
            errors.Cells(lineno, 5) = "Certificate No under section 8(3) not entered though selected yes for category of dealer covered under section 8(3) "
        End If
    End If
    '--------------------------------------------------------------
'    If Trim(Form_501.Cells(16, 8)) <> "" And Trim(Form_501.Cells(34, 10)) <> "" Then
'        If Val(date_yyyymmdd(Form_501.Cells(16, 8))) < Val(date_yyyymmdd(Form_501.Cells(34, 10))) Then
'            lineno = lineno + 1
'            srno = srno + 1
'            errors.Cells(lineno, 1) = srno
'            errors.Cells(lineno, 2) = "34"
'            errors.Cells(lineno, 3) = "9"
'            errors.Cells(lineno, 4) = "Form 501"
'            errors.Cells(lineno, 5) = "If date of Cancellation of Registration is entered, then To date of refund period should not be greater than date of R.C.C."
'        End If
'    End If
    If Trim(Form_501.Cells(13, 6)) = "YES" Then
        If Form_501.Cells(34, 8) <> "" And Form_501.Cells(34, 10) <> "" Then
            If get_duration(Val(date_yyyymmdd(Form_501.Cells(34, 8))), (date_yyyymmdd(Form_501.Cells(34, 10)))) > 2 Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = "34"
                errors.Cells(lineno, 3) = "9"
                errors.Cells(lineno, 4) = "Form 501"
                errors.Cells(lineno, 5) = "Return Period Should be as per periodicity of filling returns"
            End If
        End If
    End If
        If Trim(Form_501.Cells(56, 4)) <> "" And Trim(Form_501.Cells(34, 10)) <> "" Then
            to_date = get_finyear(Val(date_yyyymmdd(Form_501.Cells(34, 10))))
            to_date = Right(to_date, 4) & "0331"
            temp_date = (Val(date_yyyymmdd(Form_501.Cells(56, 4))))
'            temp_date = Right(temp_date, 4) & "0331"
                If get_duration_year(Val(to_date), Val(temp_date)) > 3 Then
                    lineno = lineno + 1
                    srno = srno + 1
                    errors.Cells(lineno, 1) = srno
                    errors.Cells(lineno, 2) = "56"
                    errors.Cells(lineno, 3) = "25"
                    errors.Cells(lineno, 4) = "Form 501"
                    errors.Cells(lineno, 5) = "The time limit for application is expired"
                End If
        End If
'''If Trim(Form_501.Cells(13, 9)) = "YES" Then
'''        If Trim(Form_501.Cells(34, 8)) <> "" And Form_501.Cells(34, 10) <> "" Then
'''            If get_duration(date_yyyymmdd(Form_501.Cells(34, 8)), date_yyyymmdd(Form_501.Cells(34, 10))) > 2 Then
'''                lineno = lineno + 1
'''                srno = srno + 1
'''                errors.Cells(lineno, 1) = srno
'''                errors.Cells(lineno, 2) = "34"
'''                errors.Cells(lineno, 3) = "9"
'''                errors.Cells(lineno, 4) = "Form 501"
'''                errors.Cells(lineno, 5) = "Return Period Should be as per periodicity of filling returns"
'''            End If
'''        End If
'''    End If
    'date_yyyymmdd
    If Trim(Form_501.Cells(34, 8)) <> "" And Trim(Form_501.Cells(34, 10)) <> "" Then
        If Val(date_yyyymmdd(Form_501.Cells(34, 8))) > Val(date_yyyymmdd(Form_501.Cells(34, 10))) Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = "34"
            errors.Cells(lineno, 3) = "9"
            errors.Cells(lineno, 4) = "Form 501"
            errors.Cells(lineno, 5) = "From date should be less than or equal to To date"
        End If
    End If
    If Trim(Form_501.Cells(34, 10)) <> "" And Trim(Form_501.Cells(37, 8)) <> "" Then
        If Val(date_yyyymmdd(Form_501.Cells(34, 10))) > Val(date_yyyymmdd(Form_501.Cells(37, 8))) Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = "37"
            errors.Cells(lineno, 3) = "9"
            errors.Cells(lineno, 4) = "Form 501"
            errors.Cells(lineno, 5) = "Invalid date of filing of return"

        End If
    End If
    If Trim(Form_501.Cells(40, 8)) <> "" And Trim(Form_501.Cells(40, 10)) <> "" Then
        If Val(date_yyyymmdd(Form_501.Cells(40, 8))) > Val(date_yyyymmdd(Form_501.Cells(40, 10))) Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = "40"
            errors.Cells(lineno, 3) = "14"
            errors.Cells(lineno, 4) = "Form 501"
            errors.Cells(lineno, 5) = "From date should be less than or equal to date"
        End If
    End If
    If Trim(Form_501.Cells(43, 5)) <> "" And Trim(Form_501.Cells(43, 6)) <> "" Then
        If Val(date_yyyymmdd(Form_501.Cells(43, 5))) > Val(date_yyyymmdd(Form_501.Cells(43, 6))) Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = "40"
            errors.Cells(lineno, 3) = "14"
            errors.Cells(lineno, 4) = "Form 501"
            errors.Cells(lineno, 5) = "From date should be less than or equal to To date"
        End If
    End If
    If Trim(Form_501.Cells(53, 4)) <> "" Then
        If check_email(Trim(Form_501.Cells(53, 4))) = False Then
             lineno = lineno + 1
             srno = srno + 1
             errors.Cells(lineno, 1) = srno
             errors.Cells(lineno, 2) = 53
             errors.Cells(lineno, 3) = "22"
             errors.Cells(lineno, 4) = "Form 501"
             errors.Cells(lineno, 5) = "Invalid Email-id "
         End If
    End If
'-----------------------------------------remaining-----------------------------------------------
End Sub
Public Function check_Refund_scheme(p_scheme As String) As String
    If p_scheme = "" Then
        check_Refund_scheme = ""
        Exit Function
    End If
    check_Refund_scheme = ""
    Select Case (Trim(p_scheme))
        Case "Fast Track Refund Scheme"
        Case "Exporters Refund Scheme"
        Case "Part Refund Scheme for Annual Refunds"
        Case "General Refund Scheme"
        Case Else
            check_Refund_scheme = "Illegal Refund Scheme"
    End Select
End Function
Public Function check_YES_NO(p_bool As String) As String
    If p_bool = "" Then
        check_YES_NO = ""
        Exit Function
    End If
    check_YES_NO = ""
    Select Case UCase(Trim(p_bool))
        Case "YES"
        Case "NO"
        Case Else
            check_YES_NO = "Illegal Value"
    End Select
End Function
Public Function check_Return_filled(p_return As String) As String
    If p_return = "" Then
        check_Return_filled = ""
        Exit Function
    End If
    check_Return_filled = ""
    Select Case (Trim(p_return))
        Case "Original"
        Case "Fresh"
        Case "Revised"
        Case Else
            check_Return_filled = "Illegal Value"
    End Select
End Function
Public Function check_Form_type(p_form_type As String) As String
    If p_form_type = "" Then
        check_Form_type = ""
        Exit Function
    End If
    check_Form_type = ""
    Select Case (Trim(p_form_type))
        Case "Form 231"
        Case "Form 232"
        Case "Form 233"
        Case "Form 234"
        Case "Form 235"
        Case "Form 221"
        Case "Form 222"
        Case "Form 223"
        Case "Form 224"
        Case "Form 225"
        Case Else
            check_Form_type = "Illegal Value"
    End Select
End Function
Public Function check_certi_type(p_certi_type As String) As String
    If p_certi_type = "" Then
        check_certi_type = ""
        Exit Function
    End If
    check_certi_type = ""
    Select Case UCase(Trim(p_certi_type))
        Case "C-FORM"
        Case "D-FORM"
        Case "E I-FORM"
        Case "E II-FORM"
        Case "F-FORM"
        Case "H-FORM"
        Case "I-FORM"
        Case "J-FORM"
        Case Else
            check_certi_type = "Illegal Value"
    End Select
End Function

Public Sub annexa_checks()
    If Trim(Annexure_A.Cells(4, 5)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 4
         errors.Cells(lineno, 3) = "1"
         errors.Cells(lineno, 4) = "Annex A"
         errors.Cells(lineno, 5) = "From Date Not Entered"
     End If
    temp_date = Trim(Annexure_A.Cells(4, 5))
    If date_validation(temp_date) = False Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 4
         errors.Cells(lineno, 3) = "1"
         errors.Cells(lineno, 4) = "Annex A"
         errors.Cells(lineno, 5) = "Invalid From Date (dd/mm/yy)"
     End If
    If Trim(Annexure_A.Cells(4, 7)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 4
         errors.Cells(lineno, 3) = "1"
         errors.Cells(lineno, 4) = "Annex A"
         errors.Cells(lineno, 5) = "To Date Not Entered"
     End If
    If Trim(Annexure_A.Cells(4, 7)) <> Trim(Form_501.Cells(34, 10)) Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 4
         errors.Cells(lineno, 3) = "1"
         errors.Cells(lineno, 4) = "Annex A"
         errors.Cells(lineno, 5) = "Period of Annexure A to date should be equal to Refund To date in Form 501"
     End If
    temp_date1 = Trim(Annexure_A.Cells(4, 7))
    If date_validation(temp_date1) = False Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 4
         errors.Cells(lineno, 3) = "1"
         errors.Cells(lineno, 4) = "Annex A"
         errors.Cells(lineno, 5) = "Invalid To Date (dd/mm/yy)"
     End If
        If Trim(temp_date) <> "" And Trim(temp_date1) <> "" Then
            If Val(date_yyyymmdd(temp_date)) > Val(date_yyyymmdd(temp_date1)) Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = 4
                errors.Cells(lineno, 3) = 1
                errors.Cells(lineno, 4) = "Annex A"
                errors.Cells(lineno, 5) = "From date should be Less than to date"
            End If
        End If
        g_tot = 0
        i = 10
        anx_flag = False
        While anx_flag = False
            i = i + 1
            If Trim(Annexure_A.Cells(i, 2)) = "" And _
            Trim(Annexure_A.Cells(i, 3)) = "" And _
            Trim(Annexure_A.Cells(i, 4)) = "" And _
            Trim(Annexure_A.Cells(i, 5)) = "" And _
            Trim(Annexure_A.Cells(i, 6)) = "" And _
            Trim(Annexure_A.Cells(i, 7)) = "" And _
            Trim(Annexure_A.Cells(i, 8)) = "" _
            Then
                anx_flag = True
            End If
            If anx_flag = False Then
                Annexure_A.Cells(i, 8) = Val(Annexure_A.Cells(i, 6)) + Val(Annexure_A.Cells(i, 7))
                g_tot = g_tot + Val(Annexure_A.Cells(i, 8))
            If Trim(Annexure_A.Cells(i, 2)) = "" Or _
                Trim(Annexure_A.Cells(i, 3)) = "" Or _
                Trim(Annexure_A.Cells(i, 4)) = "" Or _
                Trim(Annexure_A.Cells(i, 5)) = "" Or _
                Trim(Annexure_A.Cells(i, 6)) = "" Or _
                Trim(Annexure_A.Cells(i, 7)) = "" Or _
                Trim(Annexure_A.Cells(i, 8)) = "" _
                Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = i
                errors.Cells(lineno, 3) = "1"
                errors.Cells(lineno, 4) = "Annex A"
                errors.Cells(lineno, 5) = "A value is missing in the row"
                
            End If
            If Len(Trim(Annexure_A.Cells(i, 3))) > 75 Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = i
                errors.Cells(lineno, 3) = "1"
                errors.Cells(lineno, 4) = "Annex A"
                errors.Cells(lineno, 5) = "Tax Invoice is too big"
            End If
        temp_date2 = Trim(Annexure_A.Cells(i, 4))
        If date_validation(temp_date2) = False Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = 4
            errors.Cells(lineno, 4) = "Annex A"
            errors.Cells(lineno, 5) = "Invalid Invoice Date (dd/mm/yy)"
        End If
        If Trim(temp_date) <> "" And Trim(temp_date1) <> "" And Trim(temp_date2) <> "" Then
            If Val(date_yyyymmdd(temp_date2)) > Val(date_yyyymmdd(temp_date1)) Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = i
                errors.Cells(lineno, 3) = 4
                errors.Cells(lineno, 4) = "Annex A"
                errors.Cells(lineno, 5) = "Invoice date should be less than or equal to Todate of Annxre A"
            End If
        End If
        If validate_tin(Trim(Annexure_A.Cells(i, 5))) = False Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = 4
            errors.Cells(lineno, 4) = "Annex A"
            errors.Cells(lineno, 5) = "Invalid Tin"
        Else
            If Trim(Annexure_A.Cells(i, 5)) = Trim(Form_501.Cells(15, 6)) Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = i
                errors.Cells(lineno, 3) = 4
                errors.Cells(lineno, 4) = "Annex A"
                errors.Cells(lineno, 5) = "TIN of supplier and Tin of claimant dealer should not be same"
    
            End If
        End If
        If Trim(Annexure_A.Cells(i, 6)) <> "" Then
            If IsNumeric(Annexure_A.Cells(i, 6)) = False Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = i
                errors.Cells(lineno, 3) = 4
                errors.Cells(lineno, 4) = "Annex A"
                errors.Cells(lineno, 5) = "Net taxable amount Should be numeric"
            End If
        End If
        If Val(Annexure_A.Cells(i, 6)) > 9999999999999# Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = 4
            errors.Cells(lineno, 4) = "Annex A"
            errors.Cells(lineno, 5) = "Net taxable amount is Too big"
        End If
        If Val(Annexure_A.Cells(i, 6)) < -9999999999999# Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = 4
            errors.Cells(lineno, 4) = "Annex A"
            errors.Cells(lineno, 5) = "Net taxable amount is Too small"
        End If
        If Val(Annexure_A.Cells(i, 7)) > 9999999999999# Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = 4
            errors.Cells(lineno, 4) = "Annex A"
            errors.Cells(lineno, 5) = "Input vat amount is Too big"
        End If
        If Val(Annexure_A.Cells(i, 7)) < -9999999999999# Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = 4
            errors.Cells(lineno, 4) = "Annex A"
            errors.Cells(lineno, 5) = "Input vat amount is Too small"
        End If
        If Trim(Annexure_A.Cells(i, 7)) <> "" Then
            If IsNumeric(Annexure_A.Cells(i, 7)) = False Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = i
                errors.Cells(lineno, 3) = 4
                errors.Cells(lineno, 4) = "Annex A"
                errors.Cells(lineno, 5) = "Input vat amount should be Numeric"
            End If
        End If
        If Trim(Annexure_A.Cells(i, 8)) <> "" Then
            If IsNumeric(Annexure_A.Cells(i, 8)) = False Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = i
                errors.Cells(lineno, 3) = 4
                errors.Cells(lineno, 4) = "Annex A"
                errors.Cells(lineno, 5) = "Gross total should be Numeric"
            End If
        End If
        If Val(Annexure_A.Cells(i, 8)) > 9999999999999# Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = 4
            errors.Cells(lineno, 4) = "Annex A"
            errors.Cells(lineno, 5) = "Gross total is Too big"
        End If
        If Val(Annexure_A.Cells(i, 8)) < -9999999999999# Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = 4
            errors.Cells(lineno, 4) = "Annex A"
            errors.Cells(lineno, 5) = "Gross total is Too small"
        End If
      End If
      
    Wend
     Annexure_A.Cells(7, 8) = g_tot + Val(Annexure_A.Cells(6, 8))
     If g_tot <> 0 Or Val(Annexure_A.Cells(6, 8)) <> 0 Or Val(Annexure_A.Cells(7, 8)) <> 0 Then
        If g_tot + Val(Annexure_A.Cells(6, 8)) <> Annexure_A.Cells(7, 8) Then
               lineno = lineno + 1
               srno = srno + 1
               errors.Cells(lineno, 1) = srno
               errors.Cells(lineno, 2) = i
               errors.Cells(lineno, 3) = 4
               errors.Cells(lineno, 4) = "Annex A"
               errors.Cells(lineno, 5) = "Total taxable purchases should be equal to other local taxable purchases +sum of Gross total"
        End If
     End If
End Sub
Public Sub annexb_checks()
    If Len(Trim(Annexure_B.Cells(4, 4))) > 75 Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 4
         errors.Cells(lineno, 3) = "2"
         errors.Cells(lineno, 4) = "Annex B"
         errors.Cells(lineno, 5) = "Name of the Dealer is too big"
     End If
    If (Trim(Annexure_B.Cells(5, 4))) <> "" And Val(Annexure_B.Cells(5, 4)) <> 0 Then
        If validate_tin(Trim(Annexure_B.Cells(5, 4))) = False Then
             lineno = lineno + 1
             srno = srno + 1
             errors.Cells(lineno, 1) = srno
             errors.Cells(lineno, 2) = 5
             errors.Cells(lineno, 3) = "3"
             errors.Cells(lineno, 4) = "Annex B"
             errors.Cells(lineno, 5) = "Invalid TIN No "
         End If
     End If
    If Trim(Annexure_B.Cells(6, 7)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 6
         errors.Cells(lineno, 3) = "3"
         errors.Cells(lineno, 4) = "Annex B"
         errors.Cells(lineno, 5) = "Refund scheme Not entered"
     End If
'     If ((Trim(Annexure_B.Cells(6, 7)) <> "") And (Trim(Form_501.Cells(16, 8)) <> "")) Then
'         lineno = lineno + 1
'         srno = srno + 1
'         errors.Cells(lineno, 1) = srno
'         errors.Cells(lineno, 2) = 6
'         errors.Cells(lineno, 3) = "3"
'         errors.Cells(lineno, 4) = "Annex B"
'         errors.Cells(lineno, 5) = "The dealer is not entitled for VRS Scheme"
'     End If
   If check_Refund_scheme(Trim(Annexure_B.Cells(6, 7))) <> "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 6
         errors.Cells(lineno, 3) = "3"
         errors.Cells(lineno, 4) = "Annex B"
         errors.Cells(lineno, 5) = "Invalid Refund scheme "
     End If
     temp_date = Trim(Annexure_B.Cells(8, 4))
     If date_validation(temp_date) = False Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 8
         errors.Cells(lineno, 3) = "4"
         errors.Cells(lineno, 4) = "Annex B"
         errors.Cells(lineno, 5) = "Invalid Return Period From date (dd/mm/yy)"
     End If
     If Trim(temp_date) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 8
         errors.Cells(lineno, 3) = "4"
         errors.Cells(lineno, 4) = "Annex B"
         errors.Cells(lineno, 5) = "Return Period from date Not Entered"
     End If
     temp_date1 = Trim(Annexure_B.Cells(8, 6))
     If date_validation(temp_date1) = False Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 8
         errors.Cells(lineno, 3) = "4"
         errors.Cells(lineno, 4) = "Annex B"
         errors.Cells(lineno, 5) = "Invalid Return Period To date (dd/mm/yy)"
     End If
     If Trim(temp_date1) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 8
         errors.Cells(lineno, 3) = "4"
         errors.Cells(lineno, 4) = "Annex B"
         errors.Cells(lineno, 5) = "Return Period To date Not Entered"
     End If
     If Trim(temp_date) <> "" And Trim(temp_date1) <> "" Then
        If Val(date_yyyymmdd(temp_date)) > Val(date_yyyymmdd(temp_date1)) Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = 8
            errors.Cells(lineno, 3) = 4
            errors.Cells(lineno, 4) = "Annex b"
            errors.Cells(lineno, 5) = "Return Period From date should be Less than to date"
        End If
     End If
     If Trim(Annexure_B.Cells(8, 6)) <> 0 Then
        If (Trim(Annexure_B.Cells(8, 6))) <> Trim(Form_501.Cells(34, 10)) Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = 8
            errors.Cells(lineno, 3) = "4"
            errors.Cells(lineno, 4) = "Annex B"
            errors.Cells(lineno, 5) = "Period of AnnexureB is Invalid"
        End If
    End If
     If Val(Trim(Annexure_B.Cells(9, 4))) > 9999999999999# Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 9
         errors.Cells(lineno, 3) = "5"
         errors.Cells(lineno, 4) = "Annex B"
         errors.Cells(lineno, 5) = "For Refund amout refund is too big"
     End If
     If Val(Trim(Annexure_B.Cells(9, 4))) < -9999999999999# Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 9
         errors.Cells(lineno, 3) = "5"
         errors.Cells(lineno, 4) = "Annex B"
         errors.Cells(lineno, 5) = "For Refund amout refund is too low"
     End If
     temp_date = Trim(Annexure_B.Cells(14, 4))
     If date_validation(temp_date) = False Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 14
         errors.Cells(lineno, 3) = "10"
         errors.Cells(lineno, 4) = "Annex B"
         errors.Cells(lineno, 5) = "Invalid date (dd/mm/yy)"
     End If
     If Trim(Annexure_B.Cells(14, 4)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 14
         errors.Cells(lineno, 3) = "10"
         errors.Cells(lineno, 4) = "Annex B"
         errors.Cells(lineno, 5) = "Date Not entered"
     End If
     If Trim(Annexure_B.Cells(14, 7)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 14
         errors.Cells(lineno, 3) = "10"
         errors.Cells(lineno, 4) = "Annex B"
         errors.Cells(lineno, 5) = "Name of the partner/Proprietor/Director/ Authorised persion Not entered"
     End If
     If Trim(Annexure_B.Cells(15, 4)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 15
         errors.Cells(lineno, 3) = "11"
         errors.Cells(lineno, 4) = "Annex B"
         errors.Cells(lineno, 5) = "Place Not entered"
     End If
     If Trim(Annexure_B.Cells(15, 7)) = "" Then
         lineno = lineno + 1
         srno = srno + 1
         errors.Cells(lineno, 1) = srno
         errors.Cells(lineno, 2) = 15
         errors.Cells(lineno, 3) = "11"
         errors.Cells(lineno, 4) = "Annex B"
         errors.Cells(lineno, 5) = "Designation Not entered"
     End If
     If Annexure_B.Cells(15, 7) <> 0 Then
        If check_Designation(Annexure_B.Cells(15, 7)) <> "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = 15
            errors.Cells(lineno, 3) = "11"
            errors.Cells(lineno, 4) = "Annex B"
            errors.Cells(lineno, 5) = "Illegal Disgnation"
        End If
    End If
End Sub
Public Sub annexc_checks()
Dim inv_date As String
Dim from_date As String
Dim form501_date As String
Dim to_date As String
    from_date = Trim(Annexure_C.Cells(3, 6))
    to_date = Trim(Annexure_C.Cells(3, 8))
    If UCase(Trim(Form_501.Cells(13, 5))) = "YES" And Trim(Annexure_C.Cells(3, 6)) = "" Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = 3
        errors.Cells(lineno, 3) = "1"
        errors.Cells(lineno, 4) = "Annex C"
        errors.Cells(lineno, 5) = "Period Covered From date Not entered"
    End If
    from_date = Trim(Annexure_C.Cells(3, 6))
    If date_validation(from_date) = False Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = 3
        errors.Cells(lineno, 3) = "1"
        errors.Cells(lineno, 4) = "Annex C"
        errors.Cells(lineno, 5) = "Invalid Period Covered From date"
    End If
    to_date = Trim(Annexure_C.Cells(3, 8))
    If UCase(Trim(Form_501.Cells(13, 5))) = "YES" And Trim(to_date) = "" Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = 3
        errors.Cells(lineno, 3) = "1"
        errors.Cells(lineno, 4) = "Annex C"
        errors.Cells(lineno, 5) = "Period Covered To date Not entered"
    End If
    If date_validation(to_date) = False Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = 3
        errors.Cells(lineno, 3) = "1"
        errors.Cells(lineno, 4) = "Annex C"
        errors.Cells(lineno, 5) = "Invalid Period Covered To date (dd/mm/yy)"
    End If
    If Trim(from_date) <> "" And Trim(to_date) <> "" Then
        If Val(date_yyyymmdd(from_date)) > Val(date_yyyymmdd(to_date)) Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = 8
            errors.Cells(lineno, 3) = 1
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "From date should be Less than to date"
        End If
    End If
    form501_date = Trim(Form_501.Cells(34, 10))
    If Trim(to_date) <> "" And _
       Trim(form501_date) <> "" Then
        If to_date <> form501_date Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = 3
                errors.Cells(lineno, 3) = 1
                errors.Cells(lineno, 4) = "Annex C"
                errors.Cells(lineno, 5) = "To date should be equal to Form 501 period of return to date"
        End If
    End If
'    count = 0
    For i = 8 To 65536
        If Trim(Annexure_C.Cells(i, 2)) = "" And _
        Trim(Annexure_C.Cells(i, 3)) = "" And _
        Trim(Annexure_C.Cells(i, 4)) = "" And _
        Trim(Annexure_C.Cells(i, 5)) = "" And _
        Trim(Annexure_C.Cells(i, 6)) = "" And _
        Trim(Annexure_C.Cells(i, 7)) = "" And _
        Trim(Annexure_C.Cells(i, 8)) = "" And _
        Trim(Annexure_C.Cells(i, 9)) = "" And _
        Trim(Annexure_C.Cells(i, 10)) = "" And _
        Trim(Annexure_C.Cells(i, 11)) = "" And _
        Trim(Annexure_C.Cells(i, 12)) = "" Then
            Exit For
        End If
        Annexure_C.Cells(i, 11) = Round((Val(Annexure_C.Cells(i, 8)) * Val(Annexure_C.Cells(i, 10))) / 100)
        Annexure_C.Cells(i, 12) = Round((Val(Annexure_C.Cells(i, 11)) - Val(Annexure_C.Cells(i, 9))))
         count_c = count_c + 1
         '----------------------------mandatory check
        If (Trim(Annexure_C.Cells(i, 3))) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "name of the dealer not Entered"
        End If
        If (Trim(Annexure_C.Cells(i, 5))) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Certificate type not Entered"
        End If
        If (Trim(Annexure_C.Cells(i, 6))) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Invoice NO not Entered"
        End If
        inv_date = Trim(Annexure_C.Cells(i, 7))
        If Trim(inv_date) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Invoice date (dd/mm/yy) Not Entered"
        End If
        If (Trim(Annexure_C.Cells(i, 8))) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Taxable amount is not entered"
        End If
        If (Trim(Annexure_C.Cells(i, 9))) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Tax amount is not enterd"
        End If
'        If (Trim(Annexure_C.Cells(i, 10))) = "" Then
'            lineno = lineno + 1
'            srno = srno + 1
'            errors.Cells(lineno, 1) = srno
'            errors.Cells(lineno, 2) = i
'            errors.Cells(lineno, 3) = "2"
'            errors.Cells(lineno, 4) = "Annex C"
'            errors.Cells(lineno, 5) = "Rate of tax is not enterd"
'        End If
        If (Trim(Annexure_C.Cells(i, 12))) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Differential tax liability is not entered"
        End If
        If Len(Trim(Annexure_C.Cells(i, 3))) > 75 Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Name of the dealer is too big"
        End If
        If Len(Trim(Annexure_C.Cells(i, 4))) > 30 Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "CST TIN is too big"
        End If
        If check_certi_type(Trim(Annexure_C.Cells(i, 5))) <> "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Invalid Certificate type "
        End If
        If Len(Trim(Annexure_C.Cells(i, 6))) > 75 Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Invoice No is too big"
        End If
        If date_validation(inv_date) = False Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Invalid invoice date (dd/mm/yy)"
        End If
        
        If Trim(from_date) <> "" And Trim(to_date) <> "" And Trim(inv_date) <> "" Then
            If Val(date_yyyymmdd(inv_date)) < Val(date_yyyymmdd(from_date)) Or _
                Val(date_yyyymmdd(inv_date)) > Val(date_yyyymmdd(to_date)) Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = i
                errors.Cells(lineno, 3) = "2"
                errors.Cells(lineno, 4) = "Annex C"
                errors.Cells(lineno, 5) = "invoice date should be between From date and To date"
            End If
        End If
        If Val(Trim(Annexure_C.Cells(i, 8))) > 9999999999999# Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Taxable amount is too big"
        End If
        If Val(Trim(Annexure_C.Cells(i, 8))) < -9999999999999# Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Taxable amount is too low"
        End If
        If Trim(Annexure_C.Cells(i, 8)) <> "" Then
            If IsNumeric(Trim(Annexure_C.Cells(i, 8))) = False Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = i
                errors.Cells(lineno, 3) = "2"
                errors.Cells(lineno, 4) = "Annex C"
                errors.Cells(lineno, 5) = "Taxable amount should be numeric"
            End If
        End If
        If Val(Trim(Annexure_C.Cells(i, 9))) > 9999999999999# Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Tax amount is too big"
        End If
        If Val(Trim(Annexure_C.Cells(i, 9))) < -9999999999999# Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Tax amount is too low"
        End If
        If Trim(Annexure_C.Cells(i, 9)) <> "" Then
            If IsNumeric(Trim(Annexure_C.Cells(i, 9))) = False Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = i
                errors.Cells(lineno, 3) = "2"
                errors.Cells(lineno, 4) = "Annex C"
                errors.Cells(lineno, 5) = "Tax amount should be Numeric"
            End If
        End If
        If check_rate_tax(Trim(Annexure_C.Cells(i, 10))) <> "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Illegal Rate of tax entered"
        End If
        If (Trim(Annexure_C.Cells(i, 11))) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Amount of Tax is Not entered"
        End If
        If Val(Trim(Annexure_C.Cells(i, 11))) > 9999999999999# Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Amount of Tax is too big"
        End If
        If Val(Trim(Annexure_C.Cells(i, 11))) < -9999999999999# Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Amount of Tax is too low"
        End If
        If Val(Trim(Annexure_C.Cells(i, 12))) > 9999999999999# Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Differential tax liability is too big"
        End If
        If Val(Trim(Annexure_C.Cells(i, 12))) < -9999999999999# Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex C"
            errors.Cells(lineno, 5) = "Differential tax liability is too Low"
        End If
    Next
End Sub
Public Sub annexd_checks()
    If UCase(Trim(Form_501.Cells(13, 5))) = "YES" And Trim(Annexure_D.Cells(4, 5)) = "" Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = 4
        errors.Cells(lineno, 3) = "1"
        errors.Cells(lineno, 4) = "Annex D"
        errors.Cells(lineno, 5) = "Period covered From date Not entered"
    End If
    temp_date = Trim(Annexure_D.Cells(4, 5))
    If date_validation(temp_date) = False Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = 4
        errors.Cells(lineno, 3) = "1"
        errors.Cells(lineno, 4) = "Annex D"
        errors.Cells(lineno, 5) = "Invalid Period covered From date"
    End If
    temp_date1 = Trim(Annexure_D.Cells(4, 7))
    If UCase(Trim(Form_501.Cells(13, 5))) = "YES" And Trim(temp_date1) = "" Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = 4
        errors.Cells(lineno, 3) = "1"
        errors.Cells(lineno, 4) = "Annex D"
        errors.Cells(lineno, 5) = "Period covered To date Not entered"
    End If
    If date_validation(temp_date1) = False Then
        lineno = lineno + 1
        srno = srno + 1
        errors.Cells(lineno, 1) = srno
        errors.Cells(lineno, 2) = 4
        errors.Cells(lineno, 3) = "1"
        errors.Cells(lineno, 4) = "Annex D"
        errors.Cells(lineno, 5) = "Invalid Period covered To date"
    End If
    If Trim(temp_date) <> "" And Trim(temp_date1) <> "" Then
        If Val(date_yyyymmdd(temp_date)) > Val(date_yyyymmdd(temp_date1)) Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = 8
            errors.Cells(lineno, 3) = 1
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "From date should be Less than to date"
        End If
    End If
    If Trim(Annexure_D.Cells(4, 7)) <> "" Then
        If Trim(Annexure_D.Cells(4, 7)) <> Trim(Form_501.Cells(34, 10)) Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = 8
                errors.Cells(lineno, 3) = 1
                errors.Cells(lineno, 4) = "Annex D"
                errors.Cells(lineno, 5) = "To date should be equal to Form 501 period of return to date"
        End If
    End If
    For i = 9 To 65536
        If Trim(Annexure_D.Cells(i, 2)) = "" And _
        Trim(Annexure_D.Cells(i, 3)) = "" And _
        Trim(Annexure_D.Cells(i, 4)) = "" And _
        Trim(Annexure_D.Cells(i, 5)) = "" And _
        Trim(Annexure_D.Cells(i, 6)) = "" And _
        Trim(Annexure_D.Cells(i, 7)) = "" And _
        Trim(Annexure_D.Cells(i, 8)) = "" And _
        Trim(Annexure_D.Cells(i, 9)) = "" And _
        Trim(Annexure_D.Cells(i, 10)) = "" _
        Then
            Exit For
        End If
         count_d = count_d + 1
        If Len(Annexure_D.Cells(i, 3)) > 75 Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "Name is too big"
        End If
        If Len(Annexure_D.Cells(i, 4)) > 30 Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "CST TIN is too big"
        End If
        '----------------------------------mandatory checks
        If Trim(Annexure_D.Cells(i, 3)) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "name of the dealer Not entered"
        End If
        If Trim(Annexure_D.Cells(i, 4)) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "TIN Not entered"
        End If
        If Trim(Annexure_D.Cells(i, 5)) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "Certificate Type Not entered"
        End If
        If Trim(Annexure_D.Cells(i, 6)) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "Certificate No Not entered"
        End If
        If Trim(Annexure_D.Cells(i, 7)) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "Invoice No Not entered"
        End If
        If Trim(Annexure_D.Cells(i, 8)) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "Invoice Date Not entered"
        End If
        If Trim(Annexure_D.Cells(i, 9)) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "Taxable(Net) Amount Not entered"
        End If
        If Trim(Annexure_D.Cells(i, 10)) = "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "Tax Amount (Rs.) Not entered"
        End If
        
        
        If check_certi_type(Trim(Annexure_D.Cells(i, 5))) <> "" Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "Invalid Certificate Type"
        End If

        If Len(Trim(Annexure_D.Cells(i, 6))) > 75 Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "Certificate No is too big"
        End If
        If Len(Trim(Annexure_D.Cells(i, 7))) > 75 Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "Invoice No is too big"
        End If
        temp_date2 = Trim(Annexure_D.Cells(i, 8))
        If date_validation(Trim(Annexure_D.Cells(i, 8))) = False Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "Invalid Invoice Date (dd/mm/yy)"
        End If
    If Trim(temp_date) <> "" And Trim(temp_date1) <> "" And Trim(temp_date2) <> "" Then
        If Val(date_yyyymmdd(temp_date2)) < Val(date_yyyymmdd(temp_date)) Or _
            Val(date_yyyymmdd(temp_date2)) > Val(date_yyyymmdd(temp_date1)) Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = 4
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "Invoice date should be between From date and to date of Annxre D"
        End If
    End If
        If Val(Trim(Annexure_D.Cells(i, 9))) > 9999999999999# Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "Taxable(Net) Amount is too big"
        End If
        If Val(Trim(Annexure_D.Cells(i, 9))) < -9999999999999# Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "Taxable(Net) Amount is too low"
        End If
        If IsNumeric(Trim(Annexure_D.Cells(i, 9))) = False Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "Taxable(Net) Amount should be numeric"
        End If
        If Val(Trim(Annexure_D.Cells(i, 10))) > 9999999999999# Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "Tax Amount (Rs.) is too big"
        End If
        If Val(Trim(Annexure_D.Cells(i, 10))) < -9999999999999# Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "Tax Amount (Rs.) is too low"
        End If
        If (Trim(Annexure_D.Cells(i, 10))) <> "" Then
            If IsNumeric(Trim(Annexure_D.Cells(i, 10))) = False Then
                lineno = lineno + 1
                srno = srno + 1
                errors.Cells(lineno, 1) = srno
                errors.Cells(lineno, 2) = i
                errors.Cells(lineno, 3) = "2"
                errors.Cells(lineno, 4) = "Annex D"
                errors.Cells(lineno, 5) = "Tax Amount (Rs.) should be numeric"
            End If
        End If
        If Left(Trim(Annexure_D.Cells(i, 4)), 11) = Left(Trim(Form_501.Cells(17, 6)), 11) Then
            lineno = lineno + 1
            srno = srno + 1
            errors.Cells(lineno, 1) = srno
            errors.Cells(lineno, 2) = i
            errors.Cells(lineno, 3) = "2"
            errors.Cells(lineno, 4) = "Annex D"
            errors.Cells(lineno, 5) = "Tin no should not same as mahavat Tin No"
        End If
    Next
End Sub
Public Function get_duration(p_from As String, p_to As String) As Long
    Dim l_fdate As Date
    Dim l_tdate As Date
        l_fdate = ddmmyy_date(p_from)
        l_tdate = ddmmyy_date(p_to)
        get_duration = DateDiff("M", l_fdate, l_tdate)
End Function
Public Function get_duration_year(p_from As String, p_to As String) As Long
    Dim l_fdate As Date
    Dim l_tdate As Date
        l_fdate = ddmmyy_date(p_from)
        l_tdate = ddmmyy_date(p_to)
        get_duration_year = DateDiff("yyyy", l_fdate, l_tdate)
End Function

Public Function get_duration_days(p_from As String, p_to As String) As Long
    Dim l_fdate As Date
    Dim l_tdate As Date
        l_fdate = ddmmyy_date1(p_from)
        l_tdate = ddmmyy_date1(p_to)
        get_duration_days = DateDiff("D", l_fdate, l_tdate)
End Function
Public Function check_Dateddmmyy(strdate As String) As String
    Dim ldayMonthArray(13) As Integer
    Dim lDays As Integer
    Dim lmonths As Integer
    Dim lyear As Integer
    Dim strChr As String
    Dim i As Integer

    If Len(Trim(strdate)) <> 6 Then
       check_Dateddmmyy = ""
       Exit Function
    End If
    
    ldayMonthArray(0) = 0
    ldayMonthArray(1) = 31
    ldayMonthArray(2) = 28
    ldayMonthArray(3) = 31
    ldayMonthArray(4) = 30
    ldayMonthArray(5) = 31
    ldayMonthArray(6) = 30
    ldayMonthArray(7) = 31
    ldayMonthArray(8) = 31
    ldayMonthArray(9) = 30
    ldayMonthArray(10) = 31
    ldayMonthArray(11) = 30
    ldayMonthArray(12) = 31
    lDays = Val(Mid(strdate, 1, 2))
    lmonths = Val(Mid(strdate, 3, 2))
    If Val(Mid(strdate, 5, 2)) > 90 Then
        lyear = 1900 + Val(Mid(strdate, 5, 2))
    Else
        lyear = 2000 + Val(Mid(strdate, 5, 2))
    End If
    If lyear Mod 4 = 0 Then
        ldayMonthArray(2) = 29
    Else
        ldayMonthArray(2) = 28
    End If
    If lmonths > 0 And lmonths < 13 Then
        If lDays > 0 And lDays < ldayMonthArray(lmonths) + 1 Then
            check_Dateddmmyy = strdate
        Else
            check_Dateddmmyy = ""
        End If
    Else
        check_Dateddmmyy = ""
    End If
End Function
Public Function date_ddmmyy_range(p_date As String) As Boolean
Dim tempdate As Date
Dim Tempdate1 As String
app_date = Date
If Trim(p_date) = "" Then
    date_ddmmyy_range = True
    Exit Function
End If
Tempdate1 = date_ddmmyy_yyyymmdd(Trim(p_date))
If Tempdate1 > Format(app_date, "YYYYMMDD") Then
    date_ddmmyy_range = False
    Exit Function
End If
If Tempdate1 < "19800101" Then
    date_ddmmyy_range = False
    Exit Function
End If

date_ddmmyy_range = True
End Function

Public Function get_finyear(pdate_yyyymmdd As String) As String
        Dim rfin_year As String
        If Val(Right((pdate_yyyymmdd), 4)) <= 331 Then
            rfin_year = Val(Mid(pdate_yyyymmdd, 1, 4)) - 1
            rfin_year = rfin_year & Val(Mid(pdate_yyyymmdd, 1, 4))
        Else
            rfin_year = Val(Mid(pdate_yyyymmdd, 1, 4))
            rfin_year = rfin_year & Val(Mid(pdate_yyyymmdd, 1, 4)) + 1
        End If
        get_finyear = rfin_year
End Function
Public Function get_finyear_end(pdate_yyyymmdd As String) As String
Dim mon_1 As String
Dim fin_year_end As String
mon_1 = Mid(pdate_yyyymmdd, 5, 2)
Select Case (mon_1)
    Case "01", "02", "03":
        fin_year_end = Mid(pdate_yyyymmdd, 1, 4) & "0331"
      Case "04", "05", "06", "07", "08", "09", "10", "11", "12":
        fin_year_end = Val(Mid(pdate_yyyymmdd, 1, 4)) + 1 & "0331"
End Select
get_finyear_end = fin_year_end
    
End Function
Public Function get_finyear_app_diff(finyear_yyyymmdd As String, appyear_yyyymmdd As String) As Integer
Dim app_year As Date
Dim fin_year As Date
Dim diff_years As Integer
Dim diff_months As Integer

 fin_year = date_yyyymmdd1(finyear_yyyymmdd)
 app_year = date_yyyymmdd1(appyear_yyyymmdd)
 diff_years = DateDiff("m", fin_year, app_year)
 get_finyear_app_diff = diff_years
End Function


Public Function remove_illegal_char(pstring As String) As String
    Dim lstring As String
    lstring = ""
    If Trim(pstring) <> "" Then
        For i = 1 To Len(pstring)
            If Asc(Mid(pstring, i, 1)) >= 33 And Asc(Mid(pstring, i, 1)) <= 126 Then
                lstring = lstring & Mid(pstring, i, 1)
            End If
        Next
    End If
    remove_illegal_char = lstring
End Function

Public Function pr_thousands(pstring As String) As String
Dim str As String
str = ""
If Val(pstring) < 20 Then
        str = pr_20(Val(pstring))
Else
  If Val(Mid(pstring, 1, 1)) > 0 Then
    str = pr_20(Mid(pstring, 1, 1)) & " Hundred "
  End If
  If Val(Mid(pstring, 2, 1)) > 0 Then
    str = str & pr_10(Mid(pstring, 2, 1))
  End If
  If Val(Mid(pstring, 3, 1)) > 0 Then
    str = str & pr_20(Mid(pstring, 3, 1))
  End If
 
End If
 pr_thousands = str
End Function
Public Function num_text(pstring As String) As String
Dim str As String
str = ""
If Val(Mid(pstring, 1, 3)) > 0 Then
   str = str & pr_thousands(Mid(pstring, 1, 3)) & " Crores"
End If
If Val(Mid(pstring, 4, 2)) > 0 Then
   str = str & pr_thousands("0" & Mid(pstring, 4, 2)) & " Lakhs"
End If
If Val(Mid(pstring, 6, 2)) > 0 Then
   str = str & pr_thousands("0" & Mid(pstring, 6, 2))
   str = str & " Thousands"
End If
If Val(Mid(pstring, 8, 3)) > 0 Then
   str = str & pr_thousands(Mid(pstring, 8, 3))
End If
num_text = str
End Function


Public Function pr_20(pnum As Integer) As String
Dim str As String
 Select Case (Val(pnum))
        Case 1: str = " One"
        Case 2: str = " Two"
        Case 3: str = " Three"
        Case 4: str = " Four"
        Case 5: str = " Five"
        Case 6: str = " Six"
        Case 7: str = " Seven"
        Case 8: str = " Eight"
        Case 9: str = " Nine"
        Case 10: str = " Ten"
        Case 11: str = " Eleven"
        Case 12: str = " Twelve"
        Case 13: str = " Thirteen"
        Case 14: str = " Fourteen"
        Case 15: str = " Fifteen"
        Case 16: str = " Sixteen"
        Case 17: str = " Seventeen"
        Case 18: str = " Eighteen"
        Case 19: str = " Nineteen"
End Select
pr_20 = str
End Function

Public Function pr_10(pnum As Integer) As String
Dim str As String
 Select Case (Val(pnum))
            Case 1: str = " Ten"
            Case 2: str = " Twenty"
            Case 3: str = " Thirty"
            Case 4: str = " Forty"
            Case 5: str = " Fifty"
            Case 6: str = " Sixty"
            Case 7: str = " Seventy"
            Case 8: str = " Eighty"
            Case 9: str = " Ninety"
End Select
pr_10 = str
End Function

Public Function get_add_date(p_from As String, nomonths As Integer) As String
        Dim l_fdate As Date
        Dim l_tdate As Date
        l_fdate = Format(Mid(p_from, 7, 2) & "/" & Mid(p_from, 5, 2) & "/" & Mid(p_from, 1, 4), "dd/mm/yyyy")
        l_tdate = DateAdd("M", nomonths, l_fdate)
        get_add_date = Format(l_tdate, "YYYYMMDD")
End Function

Public Function get_add_date_7days(p_from As String, nomonths As Integer) As String
        Dim l_fdate As Date
        Dim l_tdate As Date
        l_fdate = Format(Mid(p_from, 7, 2) & "/" & Mid(p_from, 5, 2) & "/" & Mid(p_from, 1, 4), "dd/mm/yyyy")
        l_tdate = DateAdd("M", nomonths, l_fdate)
        l_tdate = DateAdd("D", 7, l_tdate)
        get_add_date_7days = Format(l_tdate, "YYYYMMDD")
End Function



INQUEST-PP=macro
