Attribute VB_Name = "AZP"
Attribute VB_Base = "0{637BE20C-A4FC-40F8-AB0A-8D108C6AA008}{7994E69A-C401-48AD-A564-90E8EDB87632}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "AZPruefung"
Sub AZPruef(MitPos As Variant, Tagespruefung As Variant)

' Fehlerhandler aktivieren
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler

' Ist die Pr|fffd|fung |fffd|berhaupt eingeschaltet?
If Worksheets("DEFINITIONEN").Cells(342, 3).Value = 1 Then

' Zum Auslesen den PLAN markieren
Worksheets("PLAN").Select

' CAC-Dialog
ueb = ueb & "***** ARBEITSZEITENPR|fffd|FUNG *****"

' Dimensionierung ; besonders wichtig ist die Deklaration als DATE, sonst gehen fast alle Berechnungen daneben
' Die Bezeichnungen mit varNNN beginnen zu lassen war m|fffd|glicherweise nicht ganz so pfiffig
Dim strMitarbeiter As String
Dim dblSoll(54) As Double
Dim dblIst(54) As Double
Dim lngSchnittlaenge As Long
Dim varMindestruhezeit As Date
Dim varDienst(48) As Variant
Dim varVonZeit(48) As Date
Dim varBisZeit(48) As Date
Dim varDienstLaenge(48) As Date
Dim varNachtdienst(48) As Variant
Dim varAusgelesen As Variant
Dim varAusgelesenVortag As Variant
Dim varHeuteAnfang As Date
Dim varGesternAufgehoert As Date
Dim varErsterTag As Variant
Dim varHeuteEnde As Date
Dim varMaxAZZeit As Date
Dim varDienstDauer As Date
Dim varGesternNachtdienst As Variant
Dim varHeuteNachtdienst As Variant
Dim lngPunktWertCAC As Long

' Dimensionierungen der Laufvariablen - im sch|fffd|nen alten Format :-
Dim l As Long
Dim ll As Long
Dim m As Long
Dim t As Long
Dim x1 As Byte
Dim x2 As Byte
Dim t1 As Long

' Welcher Bereich soll gepr|fffd|ft werden?
If MitPos = 0 Then
    x1 = 9
    x2 = 168
    Else
    x1 = MitPos
    x2 = MitPos
End If

' Dienstbezeichnungsl|fffd|nge ermitteln
lngSchnittlaenge = Worksheets("DEFINITIONEN").Cells(91, 3).Value

' Punktwert-Abzug
If Worksheets("DEFINITIONEN").Cells(363, 3).Value = "1" Then
    lngPunktWertCAC = Worksheets("DEFINITIONEN").Cells(364, 3).Value
    If lngPunktWertCAC < 0 Or lngPunktWertCAC > 255 Then lngPunktWertCAC = 0
    End If
    
' Aufbau der Matrix f|fffd|r Dienstnamen
For l = 1 To 48
If Worksheets("DIENSTE").Cells(2 + l, 6).Value = 1 Then
        varDienst(l) = Worksheets("DIENSTE").Cells(2 + l, 5).Value
        If Worksheets("DIENSTE").Cells(2 + l, 4).Value = "" Then
            MsgBox "Sie haben im Register DIENSTE bei " & varDienst(l) & " keine Arbeitszeiten eingetragen, daher ist keine AZ-Pr|fffd|fung m|fffd|glich. Korrigieren Sie den Eintrag und versuchen Sie es erneut.", vbCritical, "Fehler"
            Exit Sub
            End If
        varVonZeit(l) = Left$(Worksheets("DIENSTE").Cells(2 + l, 4).Value, 5)
        varBisZeit(l) = Right$(Worksheets("DIENSTE").Cells(2 + l, 4).Value, 5)
        varDienstLaenge(l) = Worksheets("DIENSTE").Cells(2 + l, 3).Value
        If varBisZeit(l) < varVonZeit(l) Then varNachtdienst(l) = 1
    Else
        varDienst(l) = "_"
    End If
Next l

' Aufbau der Schleife f|fffd|r alle Mitarbeiter
For m = x1 To x2 Step 3
    strMitarbeiter = Worksheets("PLAN").Cells(m, 1)
    ' Falls keine Pr|fffd|fung gew|fffd|nscht oder Mitabeiter nicht definiert geht es mit NEXT an der Sprungmarke weiter
    If Worksheets("PLAN").Cells(m + 2, 58).Value = 5 Or Worksheets("PLAN").Cells(m + 2, 58).Value = "" Then GoTo weiter
    If strMitarbeiter = "Leer" Then GoTo weiter
    
    ' Die f|fffd|r MA individuellen Einstellungen aus dem PLAN auslesen
    varMindestruhezeit = Worksheets("DEFINITIONEN").Cells(Worksheets("PLAN").Cells(m + 2, 58) + 345, 3)
    t1 = Worksheets("PLAN").Cells(m + 2, 58)
    If t1 = 1 Then t1 = 2 ' ### 3701 Korrektur f|fffd|r Wochen/Schicht
    varMaxAZZeit = Worksheets("DEFINITIONEN").Cells(t1 + 341, 3)
    
    ' Die Tagesschleife wird nur dann regul|fffd|r aufgebaut, sofern keine Tagespr|fffd|fung |fffd|bergeben wurde
    ' Dies brauchen wir ausschlie|fffd|lich f|fffd|r die qualitative Pr|fffd|fung von automatisierten Abl|fffd|ufen
    ' Das Ergebnis wird in einer globalen Variable gespeichert und nicht als Funktionswert zur|fffd|ck-
    ' gegeben #3701
    ' Aufbau der Tagesschleife - 31 Tage abz|fffd|glich dem Verk|fffd|rzungswert aus dem PLAN
    For t = 1 To 31 - Worksheets("PLAN").Range("AO3").Value ' 31
        If Tagespruefung <> 0 Then t = Tagespruefung
        
        ' Auslesen des f|fffd|r den Tag geplanten Dienstes f|fffd|r den Mitarbeiter
        varAusgelesen = Left(Cells(m, t + 3), lngSchnittlaenge)
        
        ' Zur|fffd|cksetzen einiger Variablen
        varHeuteAnfang = 0
        varGesternAufgehoert = 0
        varDienstDauer = 0
        varHeuteNachtdienst = 0
        varGesternNachtdienst = 0
        
        ' Am ersten eines Monats muss der |fffd|bertrag betrachtet werden
        If t >= 2 Then
            varAusgelesenVortag = Left(Cells(m, t + 2), lngSchnittlaenge)
            Else
            For ll = 1 To lngSchnittlaenge
                If Len(Cells(m + 2, 3)) > 0 Then
                varErsterTag = Mid(Cells(m + 2, 3), Len(Cells(m + 2, 3)) - ll, 1)
                Else
                varErsterTag = "."
                End If
                    If varErsterTag = " " Then
                        varAusgelesenVortag = Right(Cells(m + 2, 3), ll)
                        Exit For
                    End If
                    If varErsterTag = "." Then
                        varAusgelesenVortag = " "
                        Exit For
                    End If
            Next ll
        End If ' Ende von Ersttagbestimmung
            
        ' Bestimmung der Anfangs- und Endzeit f|fffd|r den heutigen und gestrigen Dienst
        For l = 1 To 48
               If varAusgelesen = varDienst(l) Then
                    varHeuteAnfang = varVonZeit(l)
                    varHeuteEnde = varBisZeit(l)
                    varDienstDauer = varDienstLaenge(l)
                    varHeuteNachtdienst = varNachtdienst(l)
                        For ll = 1 To 48
                                If varAusgelesenVortag = varDienst(ll) Then
                                varGesternAufgehoert = varBisZeit(ll)
                                varGesternNachtdienst = varNachtdienst(ll)
                                Exit For
                                End If
                        Next ll
                    Exit For
               End If
        Next l ' Ende der Dienstzeitbestimmung
        
        ' Ruhezeitenversto|fffd|
        If varGesternAufgehoert > 0 And varDienstDauer > 0 Then
                If ((varHeuteAnfang + 1) - varGesternAufgehoert) < varMindestruhezeit Then
                ueb = ueb & vbCrLf & ("Mindestruhezeitenversto|fffd| am " & Cells(5, t + 3)) & " f|fffd|r Mitarbeiter " & strMitarbeiter & vbCrLf
                ergebnis = ergebnis - lngPunktWertCAC
                End If
        End If
        
        ' Fr|fffd|hester Beginn (Jugend)
        If varHeuteAnfang > 0 And Worksheets("PLAN").Cells(m + 2, 58) = 3 And varDienstDauer > 0 Then
            If varHeuteAnfang < Worksheets("DEFINITIONEN").Range("C354").Value Then
                ueb = ueb & vbCrLf & ("Dienst zu fr|fffd|h am " & Cells(5, t + 3)) & " f|fffd|r Mitarbeiter " & strMitarbeiter & " (" & Worksheets("DEFINITIONEN").Range("C360").Value & ")" & vbCrLf
                ergebnis = ergebnis - lngPunktWertCAC
                End If
        End If
        
         ' Fr|fffd|hester Beginn (M|fffd|tter)
        If varHeuteAnfang > 0 And Worksheets("PLAN").Cells(m + 2, 58) = 4 And varDienstDauer > 0 Then
            If CDate(varHeuteAnfang) < CDate(Worksheets("DEFINITIONEN").Range("C356").Value) Then
                ueb = ueb & vbCrLf & ("Dienst zu fr|fffd|h am " & Cells(5, t + 3)) & " f|fffd|r Mitarbeiter " & strMitarbeiter & " (" & Worksheets("DEFINITIONEN").Range("C361").Value & ")" & vbCrLf
                ergebnis = ergebnis - lngPunktWertCAC
                End If
        End If
        
        ' Zu sp|fffd|t (Jugend)
        If varHeuteAnfang > 0 And Worksheets("PLAN").Cells(m + 2, 58) = 3 And varDienstDauer > 0 Then
            If CDate(varHeuteEnde) > CDate(Worksheets("DEFINITIONEN").Range("C355").Value) Then
                ueb = ueb & vbCrLf & ("Dienstzeitende zu sp|fffd|t am " & Cells(5, t + 3)) & " f|fffd|r Mitarbeiter " & strMitarbeiter & " (" & Worksheets("DEFINITIONEN").Range("C360").Value & ")" & vbCrLf
                ergebnis = ergebnis - lngPunktWertCAC
                End If
        End If
        
        ' Zu sp|fffd|t (M|fffd|tter)
        If varHeuteAnfang > 0 And Worksheets("PLAN").Cells(m + 2, 58) = 4 And varDienstDauer > 0 Then
            If CDate(varHeuteEnde) > CDate(Worksheets("DEFINITIONEN").Range("C357").Value) Then
                ueb = ueb & vbCrLf & ("Dienstzeitende zu sp|fffd|t am " & Cells(5, t + 3)) & " f|fffd|r Mitarbeiter " & strMitarbeiter & " (" & Worksheets("DEFINITIONEN").Range("C361").Value & ")" & vbCrLf
                ergebnis = ergebnis - lngPunktWertCAC
                End If
        End If
        
         ' Maximale Tagesarbeitszeit an einem Tag
        If varHeuteAnfang > 0 And varDienstDauer > 0 Then
            If varDienstDauer > varMaxAZZeit Then
                ueb = ueb & vbCrLf & ("Max.AZ |fffd|berschritten am " & Cells(5, t + 3)) & " f|fffd|r Mitarbeiter " & strMitarbeiter & vbCrLf
                ergebnis = ergebnis - lngPunktWertCAC
                End If
        End If
        
        ' Sonderfall - heute
        If varGesternNachtdienst > 0 And varDienstDauer > 0 And varHeuteNachtdienst = 0 Then
            ueb = ueb & vbCrLf & ("Nach einem Nachtdienst darf nur Nachtdienst oder Frei folgen " & Cells(5, t + 3)) & " f|fffd|r Mitarbeiter " & strMitarbeiter
            ergebnis = ergebnis - lngPunktWertCAC
        End If
    
    If Tagespruefung <> 0 Then Exit For
    Next t ' Schleife Tage

weiter: ' Sprungmarke f|fffd|r Abbr|fffd|che
Next m ' Schleife Mitarbeiter

 
End If ' Ende von Pr|fffd|fung ob |fffd|berhaupt aktiviert
 
Exit Sub

Fehler:
MsgBox "Ein Fehler im Modul azp() ist aufgetreten : " & Err.Description, vbCritical
End Sub
Attribute VB_Name = "AutoPlan"
Sub autoplan_initialisierung()

If Worksheets("DEFINITIONEN").Range("C4").Value = "0" Then
    MsgBox ("Achtung - hierbei handelt es sich um eine experimentelle Funktion in DPE. Der Vorgang wird abgebrochen!")
    Exit Sub
    End If
    
Dim naechster As Variant
Dim Punktwert As Variant
Dim tag_nw_pruefung As Variant
Dim laenge_fuer_nachtwache_ideal As Variant
Dim laenge_fuer_nachtwache_ideal_kontrolliert As Variant
Dim Planaenderung_durchgefuehrt As Variant
Dim PlanStatusMeldung As Byte
Dim PlanAenderungsZaehler As Long
Dim AP_Temp1 As Long
Dim AP_Temp2 As Long
Dim AP_Temp3 As Long

' ap_mitarbeiter_gesamt = Anzahl der Mitarbeiter die wirklich f|fffd|r den AP zur Verf|fffd|gung stehen
' ap_mitarbeiter(54) = das sind sie
b = 0

For a = 9 To 168 Step 3
b = b + 1
ausgelesen = Worksheets("PLAN").Cells(a + 1, 39)
ap_mitarbeiter(b) = ausgelesen
ap_mitarbeiter_position(b) = a
Next

Do While PlanStatusMeldung < 100

    For b = 1 To 54
        If ap_mitarbeiter(b) > Punktwert Then
        naechster = ap_mitarbeiter_position(b)
        Punktwert = ap_mitarbeiter(b)
        End If
    Next b

    GoSub Nachtwache
    
    If PlanAenderungsZaehler > 100 Then
        Exit Do
        End If
Loop

Exit Sub

Nachtwache:
' MsgBox naechster & " - " & punktwert

' Absolut Stumpfe Berechnung
' Nachtwache

' For Tag = 4 To (35 - Worksheets("PLAN").Range("AS3").Value)
PlanAenderungsZaehler = PlanAenderungsZaehler + 1
For Tag = 4 To (35 - Worksheets("PLAN").Range("AS3").Value)
    notw_w = Worksheets("PLAN").Cells(198, Tag + 62).Value - Worksheets("PLAN").Cells(177, Tag).Value
        ' MsgBox notw_w
    If notw_w > 0 Then
        If Worksheets("PLAN").Cells(naechster, Tag).Value = "" Then
            ' Okay, dieser MA hat keinen Dienst heute, vielleicht k|fffd|nnen wir ja alle NW gem|fffd||fffd| Idealwert setzen
            laenge_fuer_nachtwache_ideal = Worksheets("DEFINITIONEN").Range("C394").Value
            laenge_fuer_nachtwache_ideal_kontrolliert = Tag + laenge_fuer_nachtwache_ideal
            If laenge_fuer_nachtwache_ideal_kontrolliert > (35 - Worksheets("PLAN").Range("AS3").Value) Then
                ' Okay, wir k|fffd|nnen KEINEN Eintrag f|fffd|r die vollen Nachtwachen machen, da wir ansonsten
                ' aus dem Plan herausragen w|fffd|rden. Vielleicht geht es ja mit einer NW k|fffd|rzer
                
                MsgBox laenge_fuer_nachtwache_ideal_kontrolliert & " FEHLER -> |fffd|BERRAGUNG"
                Else
                ' Okay, wir haben Gl|fffd|ck - dieser MA kann die Idealanzahl von Nachtwachen machen, daher schlagen
                ' wir jetzt los und pr|fffd|fen, ob die n|fffd|chsten Tage auch planbar sind -> sprich es d|fffd|rfen  keine
                ' Eintr|fffd|ge drin sein
                    AP_Temp2 = 0
                    For AP_Temp1 = Tag To laenge_fuer_nachtwache_ideal_kontrolliert - 1
                        If Worksheets("PLAN").Cells(naechster, AP_Temp1).Value <> "" Then AP_Temp2 = AP_Temp2 + 1
                    Next
                        ' Die Pr|fffd|fung ist nun fertig, dann machen wir uns mal an die Auswertung
                        If AP_Temp2 = 0 Then ' wir haben Gl|fffd|ck!
                            For AP_Temp1 = Tag To laenge_fuer_nachtwache_ideal_kontrolliert - 1
                                Worksheets("PLAN").Cells(naechster, AP_Temp1).Value = Worksheets("DIENSTE").Range("E43").Value
                            Next
                            ' Danach BLOCKER eintragen
                            AP_Temp3 = AP_Temp1
                            For AP_Temp1 = AP_Temp3 To (AP_Temp3 + Worksheets("DEFINITIONEN").Range("C396").Value) - 1
                                If AP_Temp1 < (35 - Worksheets("PLAN").Range("AS3").Value) Then
                                    Worksheets("PLAN").Cells(naechster, AP_Temp1).Value = Worksheets("DEFINITIONEN").Range("C383").Value
                                End If
                            Next
                            Planaenderung_durchgefuehrt = naechster
                        Else ' Wir hatten kein Gl|fffd|ck, dieser MA hat bereits Eintr|fffd|ge, die ihn daran hindern, die Idealzahl von NW zu machen
                             ' Daher pr|fffd|fen wir noch einmal mit einer verk|fffd|rzten Anzahl, aber nur, wenn es nur 1 Gegentreffer gab
                             
                             
                        End If
                End If
        End If
        ' MsgBox naechster
    End If

If Planaenderung_durchgefuehrt <> 0 Then
    
    ' PlanAenderungsZaehler = 0
    Exit For
    
    End If
    
Next Tag
If Tag >= (35 - Worksheets("PLAN").Range("AS3").Value) Then PlanStatusMeldung = 100
Return

End Sub
Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Workbook_BeforeClose(Cancel As Boolean)
' Fehlerhandler
On Error Resume Next
Application.CommandBars("Worksheet Menu Bar").Controls("Dienstplan").Delete
' Position des DPE3Helfer abspeichern, sofern aktiviert
If dpe3helfer.Visible = True Then
Worksheets("DEFINITIONEN").Range("C278").Value = dpe3helfer.Left
Worksheets("DEFINITIONEN").Range("C279").Value = dpe3helfer.Top
End If
' Spezialtasten zur|fffd|ck
Application.OnKey "%{F1}"
Application.OnKey "%{F2}"
Application.OnKey "%{F3}"
Application.OnKey "%{F5}"
Application.OnKey "%{F6}"
Application.OnKey "%{F7}"
Application.OnKey "%{F8}"
Application.OnKey "%{F9}"
Application.OnKey "%{F10}"
Application.OnKey "%{F11}"
Application.OnKey "%{F12}"

' Entferne Spezialtaste zum L|fffd|schen+Entfernen des Farbhintergrunds
Application.OnKey "{" & Worksheets("DEFINITIONEN").Range("C341") & "}"

End Sub

Private Sub Workbook_Open()

Dim startposition As Variant
Dim starttabelle As Variant

' Fall DPE3 schon ge|fffd|ffnet ist wird hier die Einbindung der Men|fffd|s unterbrochen
If offen = True Then Exit Sub

' Fehlerhandler in Entwicklungsversion ausschalten
' If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo fehler

' Pr|fffd|fung ob Spalten/Zeilen eingef|fffd|gt oder entfernt wurden, das w|fffd|rde zu Datensalat f|fffd|hren
If Worksheets("PLAN").Range("GG255").Value <> "X" Then
    MsgBox "Die Spalten/Zeilen-Struktur in der Tabelle 'PLAN' ist in dieser Datei fehlerhaft. Es d|fffd|rfen weder Zeilen noch Spalten hinzugef|fffd|gt oder entfernt werden, da |fffd|nderungen dieser Art nicht von den programmierten Funktionen erfasst werden k|fffd|nnen.Sie sollten durch einen Versionswechsel auf eine 'stabile Datei' wechseln.Weitere Informationen finden Sie in der Dokumentation.", vbCritical, "Kritischer Fehler entdeckt"
End If

If Worksheets("DEFINITIONEN").Range("GG255").Value <> "X" Then
    MsgBox "Die Spalten/Zeilen-Struktur in der Tabelle 'DEFINITIONEN' ist in dieser Datei fehlerhaft. Es d|fffd|rfen weder Zeilen noch Spalten hinzugef|fffd|gt oder entfernt werden, da |fffd|nderungen dieser Art nicht von den programmierten Funktionen erfasst werden k|fffd|nnen.Sie sollten durch einen Versionswechsel auf eine 'stabile Datei' wechseln.Weitere Informationen finden Sie in der Dokumentation.", vbCritical, "Kritischer Fehler entdeckt"
End If

' Erste Pr|fffd|fung von Stammdaten
Call definitions_pruefung

' Funktionstaste 5 belegen
Application.OnKey "%{F5}", "plan_killer"

' Funktionstaste 6 belegen
Application.OnKey "%{F6}", "miplan"

' Funktionstaste 7 belegen
Application.OnKey "%{F7}", "journalplan"

' Funktionstaste 8 belegen
Application.OnKey "%{F8}", "cac"

' Funktionstaste 9 belegen
Application.OnKey "%{F9}", "lzplaneinsetzen"

' Funktionstaste 1 belegen
Application.OnKey "%{F1}", "einblendung"

' Funktionstaste 2 belegen
Application.OnKey "%{F2}", "bildoptimierung"

' Funktionstaste 3 belegen
Application.OnKey "%{F3}", "ausblendung"

' Funktionstaste 12 belegen
If Worksheets("DEFINITIONEN").Range("C4").Value < 1 Then
    Application.OnKey "%{F12}", "menu_versionsinfo"
    Else
    Application.OnKey "%{F12}", "autoplan_initialisierung"
End If

' Funktionstaste F2 belegen
Application.OnKey "{" & Worksheets("DEFINITIONEN").Range("C341") & "}", "RangeDelete"

' Schutz aus
Worksheets("PLAN").Unprotect

' Autovervollst|fffd|ndigung deaktivieren
If Worksheets("DEFINITIONEN").Range("C289") = 1 Then Application.EnableAutoComplete = False

' Textformat anzeigen
If Worksheets("DEFINITIONEN").Range("C290") = 1 Then
    Worksheets("PLAN").Range("I1").NumberFormat = "[$-407]mmmm yyyy"
    End If
    
' Zahlenformat anzeigen
If Worksheets("DEFINITIONEN").Range("C290") = 2 Then
    Worksheets("PLAN").Range("I1").NumberFormat = "mm \/ yyyy"
    End If

' Startposition aus DEFINITIONEN holen
starttabelle = Worksheets("DEFINITIONEN").Range("C292").Value
    If starttabelle = "" Then starttabelle = "PLAN"

' Startposition aus DEFINITIONEN holen
startposition = Worksheets("DEFINITIONEN").Range("C291").Value
    If startposition = "" Then startposition = "D5"

' Startposition setzen
Worksheets(starttabelle).Select
Range(startposition).Select

' Damit soll verhindert werden, dass das Men|fffd| mehrfach eingebunden wird
offen = True

Call schutz_ein
Call eingangsbegruessung

Exit Sub
Fehler:
Resume Next
End Sub

Attribute VB_Name = "DruckerKonfig"
Attribute VB_Base = "0{3E532164-8386-41E0-9870-5A6569607A7C}{4582987B-0382-4CB3-A980-32B29EC73AC4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CommandButton1_Click()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
With ActiveSheet.PageSetup
.CenterHorizontally = DruckerKonfig.CheckBox1
.CenterVertically = DruckerKonfig.CheckBox3
.BlackAndWhite = DruckerKonfig.CheckBox2
.PrintGridlines = DruckerKonfig.CheckBox4

' Wird nicht mehr unterst|fffd|tzt -> es wird immer der volle Bereich gedruckt
If DruckerKonfig.CheckBox5.Value = True Then
.PrintArea = "$A$1:$AL$" & CStr(DruckerKonfig.TextBox1.text)
Else
.PrintArea = "$A$1:$AL$" & CStr(DruckerKonfig.TextBox1.text)
End If

If DruckerKonfig.OptionButton1 = True Then .FitToPagesTall = 1
If DruckerKonfig.OptionButton2 = True Then .FitToPagesTall = 2
If DruckerKonfig.OptionButton3 = True Then .FitToPagesTall = 3
If DruckerKonfig.OptionButton4 = True Then .FitToPagesTall = 4
Worksheets("DEFINITIONEN").Range("C176").Value = DruckerKonfig.CheckBox5
End With
DruckerKonfig.Hide
ActiveWindow.View = xlPageBreakPreview
MsgBox "Bitte pr|fffd|fen Sie den Seitenumbruch zwischen den Druckseiten den Sie mit Hilfe der blauen Linien in der Vorschau anpassen k|fffd|nnen. Abschlie|fffd|end klicken Sie im Men|fffd| auf 'ANSICHT' von 'Seitenumbruchvorschau' zur|fffd|ck auf 'Normal' um in die |fffd|bliche Darstellung zur|fffd|ckzukehren.", vbInformation, "Druckbildanpassung"
End Sub

Private Sub UserForm_Activate()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
If Worksheets("DEFINITIONEN").Range("C6") = 1 Then Call dialog_druckerkonfiguration_anpassen

With ActiveSheet.PageSetup
DruckerKonfig.CheckBox1 = .CenterHorizontally
DruckerKonfig.CheckBox3 = .CenterVertically
DruckerKonfig.CheckBox2 = .BlackAndWhite
DruckerKonfig.CheckBox4 = .PrintGridlines
DruckerKonfig.TextBox1.text = Worksheets("PLAN").Range("AS5").Value
DruckerKonfig.CheckBox5 = Worksheets("DEFINITIONEN").Range("C176").Value
End With
End Sub

Private Sub UserForm_terminate()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
MsgBox "|fffd|nderungen werden verworfen. Sollten Sie die Eingaben sichern wollen, klicken Sie bitte auf '|fffd|bernehmen'.", vbInformation, "Tja"
End Sub

Attribute VB_Name = "Eingangshilfe"
Option Explicit

Sub gettingstarted()
Worksheets("PLAN").Range("N9").Value = "F"
MsgBox "Es wurde ein Fr|fffd|hdienst 'F' am Dienstag den 11ten des Monats f|fffd|r den obersten Mitarbeiter eingetragen. Sie sehen, dass in Spalte AJ die rote Zahl auf '07:42' anstieg und die blaue Zahl um eben diesen Wert gesenkt wurde.", vbInformation, "Assistent"
Worksheets("PLAN").Range("O9").Value = "N"
MsgBox "Am Tag 'drauf ist nun ein Nachtdienst eingetragen worden. Dieser hat einen hinterlegten Stundenwert von '09:15'." & vbCrLf & "Achten Sie auf die Ver|fffd|nderungen in der Spalte AJ!", vbInformation, "Assistent"
MsgBox "Gleichzeitig wurde im unteren Bereich der Tabelle in dem ROT/GR|fffd|NEN-Block das Feld f|fffd|r den Tag zwei in der Rubrik 'Nachtdienst' gr|fffd|n -> sprich: Der Dienst ist ausreichend besetzt. Es versteht sich von selbst, dass Sie sowohl die Arbeitszeitenl|fffd|nge, als auch die Besetzung gem|fffd||fffd| den eigenen W|fffd|nschen anpassen k|fffd|nnen!", vbExclamation, "Assistent"
Worksheets("PLAN").Range("M33").Value = "U"
Worksheets("PLAN").Range("N33").Value = "U"
Worksheets("PLAN").Range("O33").Value = "U"
Worksheets("PLAN").Range("P33").Value = "U"
Worksheets("PLAN").Range("M30").Value = "U"
Worksheets("PLAN").Range("N30").Value = "U"
Worksheets("PLAN").Range("O30").Value = "U"
Worksheets("PLAN").Range("P30").Value = "U"
MsgBox "Wir waren 'nette' Planer und haben zwei Mitarbeitern ('Test G.' und 'Test H.' (Sie m|fffd|ssen m|fffd|glicherweise das Fenster verschieben)) in der Woche von Karfreitag Urlaub gegeben. Achten Sie auf die unterschiedlichen Zeitwerte in AJ, die als Resultat der Urlaubswoche entstanden." & vbCrLf & vbCrLf & "Warum die Werte unterschiedlich sind? Ein Mitarbeiter ist Vollzeit (1/1), der Andere ist Teilzeit (1/4).", vbInformation, "Assistent"
Worksheets("PLAN").Range("T12").Value = "S"
MsgBox "Mitarbeiter Nummer 2 hat nun am Ostermontag den 17ten einen Sp|fffd|tdienst an einem Feiertag eingeplant bekommen. Das gelbe Feld in Spalte AJ zeigt nun den Wert '1' an, da f|fffd|r das Arbeiten an einem Feiertag an einem anderen Werktag ein 'frei' zu folgen hat. (Ob diese Vorgehensweise in Ihrem Unternehmen erforderlich ist, oder nicht - k|fffd|nnen Sie in den DEFINITIONEN festlegen!)", vbInformation, "Assistent"
Worksheets("PLAN").Range("X12").Value = "ff"
MsgBox "Mit einem 'ff' (frei f|fffd|r Feiertag) wird dieses 'FREI' nun am Freitag den 13ten gegeben. Welche Buchstaben f|fffd|r welche Dienste verwendet wird, das k|fffd|nnen Sie individuell unter DIENSTE steuern!.", vbInformation, "Assistent"
With Worksheets("PLAN").Range("G9")
.Value = "!!"
Worksheets("PLAN").Unprotect
.AddComment
.Comment.Visible = False
.Comment.text " Testeintrag (18:00 - 19:30)"
.Comment.Shape.TextFrame.AutoSize = True
End With
Worksheets("PLAN").Range("G11").Value = "01:30"
MsgBox "DPE3 bietet die Eingabe beliebiger Dienstformen (Doppelklick auf den Tag). Frei Einplanungen werden mit dem roten Dreieck in der Ecke dargestellt. F|fffd|hrt der Mauszeiger |fffd|ber das Dreieck, so wird der hinterlegte Text angezeigt. Im Mitarbeiterplan wird dies genau ausgegeben.", vbInformation, "Assistent"
MsgBox "In der dritten Zeile wird der hinterlegte Zeitwert dargestellt. Stets in der Schreibweise HH:MM (zweistellig Stunden DOPPELPUNKT Minuten). Niemals werden Sie in DPE3 Dezimalstellen eingeben m|fffd|ssen.", vbExclamation, "Assistent"
MsgBox "Dann viel Erfolg bei der Dienstplanung :-)", vbInformation, "Ciao"
Worksheets("PLAN").Range("D9:Y33").ClearContents
Worksheets("PLAN").Range("G9").Comment.Delete
Call schutz_ein
Worksheets("PLAN").Range("D9").Select
End Sub
Attribute VB_Name = "ErsteReiheAnpassen"
Attribute VB_Base = "0{164569C5-8A88-4455-A8C3-AC5A541FA9F9}{BFAD4190-A382-4A94-898C-13E492A0A2FF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Option Explicit



Private Sub DPE_Suchen_Ersetzen_Click()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next

Dim lngReihe As Long
Dim lngSpalte As Long

If ErsteReiheAnpassen.txtSuch <> ErsteReiheAnpassen.txtAustausch Then
    Call ansicht_aus
    eingabe_ueberwachung = 1
    ' Hauptschleife initiieren
        For lngReihe = 9 To 168 Step 3

            ' Zwischenschleife
            If Worksheets("PLAN").Cells(lngReihe, 1) <> "Leer" Then
        
                For lngSpalte = 4 To (34 - Worksheets("PLAN").Range("AO3").Value)
                    If Weekday(Worksheets("PLAN").Cells(6, lngSpalte)) = 7 And ErsteReiheAnpassen.CBSA.Value = True Then GoTo sprungmarke
                    If Weekday(Worksheets("PLAN").Cells(6, lngSpalte)) = 1 And ErsteReiheAnpassen.CBSO.Value = True Then GoTo sprungmarke
                    If Worksheets("PLAN").Cells(7, lngSpalte) = "ft" And ErsteReiheAnpassen.CBFT.Value = True Then GoTo sprungmarke
                    If Worksheets("PLAN").Cells(lngReihe, lngSpalte).Value = ErsteReiheAnpassen.txtSuch Then
                    Worksheets("PLAN").Cells(lngReihe, lngSpalte).Value = ErsteReiheAnpassen.txtAustausch
                    End If
sprungmarke:
                Next lngSpalte
        
            End If

        Next lngReihe
        
    Call ansicht_ein
    eingabe_ueberwachung = 0
End If
End Sub

Attribute VB_Name = "ErwFunktionen"
Option Explicit

Sub Dialog2_Dialogfeldrahmen1_BeiAnzeigen()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
' Dimensionierungen
Dim regel(5) As Long ' Die Anzahl von Regeln (Gern, Ungern etc.)
Dim akt_row As Long ' Die aktuelle Reihe, in der sich der Cursor befindet
Dim akt_col As Long ' Die aktuelle Spalte, in der siche der Cursor befindet
Dim a As Byte ' Laufvariable als BYTE
Dim b As Byte ' Marker - wird eine Regel gefunden = 1 sonst 0
Dim akt_tag As Long ' Ausgelesen der aktuelle Wochentag des Datums
Dim regel_zaehler As Byte ' Laufvariable als BYTE
Dim aussage As String ' Der Text der im Dialogfenster angezeigt wird
Dim Dienst(7) As String ' Array
dienstart = 0
' Alte Fensterdaten zur|fffd|cksetzen. Die Fenster halten die Daten bis zum erneuten Aufruf.
With DialogSheets("PLANUNGSHELFER")
.[titel].Caption = ""
.[Zeitwert].Caption = "00:00"
.[Wunsch].Caption = ""
' .[SONDERDIENSTFORM].Caption = "[keinen Dienst]"
' Die grafischen Symbole f|fffd|r die Wunschdienste m|fffd|ssen ebenfalls zur|fffd|ckgesetzt werden
.[HAPPY].Visible = False
.[OK].Visible = False
.[SAD].Visible = False
.[no].Visible = False
.[HERZ].Visible = False
.[HAND].Visible = False
End With
' Aufbau des Mitarbeiterwunsches
' Wo befinde ich mich
akt_row = ActiveCell.Row
akt_col = ActiveCell.Column
' Wunschwert auslesen
regel(1) = CInt(Left$(Cells(akt_row, 49).Value, 3))
regel(5) = CInt(Right$(Cells(akt_row, 49).Value, 3))
regel(2) = CInt(Mid$(Cells(akt_row, 49).Value, 5, 3))
regel(3) = CInt(Mid$(Cells(akt_row, 49).Value, 9, 3))
regel(4) = CInt(Mid$(Cells(akt_row, 49).Value, 13, 3))
' Pr|fffd|fung ob |fffd|berhaupt eine Regel f|fffd|r diesen Mitabeiter vorliegt, sollte dies nicht
' der Fall sein, so kann sich das Programm den weiteren Verlauf sparen.
For a = 1 To 5
If regel(a) <> 0 Then b = 1
Next a
' Es wurde gar keine Regel f|fffd|r den Mitarbeiter gefunden
If b = 0 Then Exit Sub
' Was haben wir denn heute |fffd|berhaupt f|fffd|r einen Tag ?
akt_tag = Weekday(Cells(5, akt_col).Value)
' Ist dies vielleicht ein Feiertag ?
If Cells(7, akt_col).Value = "ft" Then akt_tag = 8
' Dienstnamen einlesen
For a = 1 To 7
Dienst(a) = Worksheets("DEFINITIONEN").Cells(a + 17, 8).Value
Next a
' Regeln pr|fffd|fen
For regel_zaehler = 1 To 5
If regel(regel_zaehler) < 100 Then GoTo sprungmarke1
' SO
If regel(regel_zaehler) >= 100 And regel(regel_zaehler) < 200 And akt_tag = 1 Then
GoSub analyser
End If
' MO
If regel(regel_zaehler) >= 200 And regel(regel_zaehler) < 300 And akt_tag = 2 Then
GoSub analyser
End If
' DI
If regel(regel_zaehler) >= 300 And regel(regel_zaehler) < 400 And akt_tag = 3 Then
GoSub analyser
End If
' MI
If regel(regel_zaehler) >= 400 And regel(regel_zaehler) < 500 And akt_tag = 4 Then
GoSub analyser
End If
' DO
If regel(regel_zaehler) >= 500 And regel(regel_zaehler) < 600 And akt_tag = 5 Then
GoSub analyser
End If
' FR
If regel(regel_zaehler) >= 600 And regel(regel_zaehler) < 700 And akt_tag = 6 Then
GoSub analyser
End If
' SA
If regel(regel_zaehler) >= 700 And regel(regel_zaehler) < 800 And akt_tag = 7 Then
GoSub analyser
End If
' FT
If regel(regel_zaehler) >= 800 And regel(regel_zaehler) < 900 And akt_tag = 8 Then
GoSub analyser
End If
' JT
If regel(regel_zaehler) >= 900 And regel(regel_zaehler) < 1000 Then
GoSub analyser
End If
' Schleifenende
sprungmarke1:
Next regel_zaehler
' Ausgabe vorbereiten | Programmablauf hier abbrechen
DialogSheets("PLANUNGSHELFER").[Wunsch].Caption = aussage
Exit Sub
' Es wurde bereits festgestellt, dass der Mitarbeiter f|fffd|r diesen Tag einen Wunscheintrag
' hat. Welcher ? Das wird hier analysiert und entsprechend im Text und per Grafik ange-
' zeigt.
analyser:
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "0" Then GoSub keinen_dienst
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "1" Then GoSub ungern_dienst
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "2" Then GoSub gern_dienst
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "3" Then GoSub sehr_gern_dienst
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "4" Then GoSub ungern_dienstform
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "5" Then GoSub gern_dienstform
Return
' Rotkopferte "Sad" Smiley
keinen_dienst:
aussage = aussage & " Keinen Dienst."
DialogSheets("PLANUNGSHELFER").[no].Visible = True
Return
' Gr|fffd|nkopferte "Sad" Smiley
ungern_dienst:
aussage = aussage & " Ungern Dienst."
DialogSheets("PLANUNGSHELFER").[SAD].Visible = True
Return
' Gelber Smiley
gern_dienst:
aussage = aussage & " Gern Dienst."
DialogSheets("PLANUNGSHELFER").[OK].Visible = True
Return
' Gr|fffd|ner Smiley
sehr_gern_dienst:
aussage = aussage & " Sehr gern Dienst."
DialogSheets("PLANUNGSHELFER").[HAPPY].Visible = True
Return
' Hand anzeigen
ungern_dienstform:
aussage = aussage & " Ungern : " & _
Dienst(CInt(Right$(regel(regel_zaehler), 1)))
DialogSheets("PLANUNGSHELFER").[HAND].Visible = True
Return
' Herz anzeigen
gern_dienstform:
aussage = aussage & " Gern : " & _
Dienst(CInt(Right$(regel(regel_zaehler), 1)))
DialogSheets("PLANUNGSHELFER").[HERZ].Visible = True
Return
Exit Sub
Fehler:
MsgBox Err.Description
End Sub

Sub Sonderdienstform_Aenderung()
' Dienstart ist eine Globalvariable und wird bei der Fortf|fffd|hrung des ausrufenden Quellcodes
' fortgesetzt.
dienstart = 2
Call Planungshelfer_OK
End Sub
Sub Frei_Definition_Titel_Aenderung()
' Dienstart ist eine Globalvariable und wird bei der Fortf|fffd|hrung des ausrufenden Quellcodes
' fortgesetzt.
dienstart = 3
End Sub
Sub Zeitwert_Aenderung()
' Dienstart ist eine Globalvariable und wird bei der Fortf|fffd|hrung des ausrufenden Quellcodes
' fortgesetzt.
dienstart = 3
End Sub
Sub Keinen_Dienst_BeiKlick()
' Dienstart ist eine Globalvariable und wird bei der Fortf|fffd|hrung des ausrufenden Quellcodes
' fortgesetzt.
dienstart = 4
Call Planungshelfer_OK
End Sub
Sub Planungshelfer_OK()
' Pr|fffd|fung auf g|fffd|ltige Angaben, nachdem der Benutzer auf OK geklickt hat. Im Zielbereich
' wird keine |fffd|berpr|fffd|fung der Werte vorgenommen.
If dienstart = 3 Then
If Len(DialogSheets("PLANUNGSHELFER").[Zeitwert].Caption) <> 5 Then
DialogSheets("PLANUNGSHELFER").[Zeitwert].Caption = "00:00"
Exit Sub
End If
If Mid$(DialogSheets("PLANUNGSHELFER").[Zeitwert].Caption, 3, 1) <> ":" Then
DialogSheets("PLANUNGSHELFER").[Zeitwert].Caption = "00:00"
Exit Sub
End If
If DialogSheets("PLANUNGSHELFER").[titel].Caption = "" Then
Exit Sub
End If
End If
ActiveWorkbook.DialogSheets("PLANUNGSHELFER").Hide
Worksheets("PLAN").Select
End Sub
Sub LZPRAUS()
dienstart = 6
ActiveWorkbook.DialogSheets("PLANUNGSHELFER").Hide
Worksheets("PLAN").Select
End Sub

Sub Schaltflaeche2_BeiKlick()
' Das Dialogfeld wird wieder ausgeblendet
gewaehlter_monat = DialogSheets("Monatswahl").[monat].Value & "/1/" & CStr(2016 + (DialogSheets("Monatswahl").[jahr].Value))
ActiveWorkbook.DialogSheets("Monatswahl").Hide
End Sub


Sub WASDARFSSEIN_Dialogfeldrahmen1_BeiAnzeigen()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
' Das Fenster wurde aufgerufen
' Bisherige Werte m|fffd|ssen eingelesen werden
Dim akt_row As Byte
Dim regel(5) As Long
Dim laufvariable As Long
Dim wache As String
akt_row = ActiveCell.Row
' Regelwerk f|fffd|r den betreffenden Mitarbeiter aufbauen
regel(1) = CInt(Left$(Cells(akt_row, 49).Value, 3))
regel(5) = CInt(Right$(Cells(akt_row, 49).Value, 3))
regel(2) = CInt(Mid$(Cells(akt_row, 49).Value, 5, 3))
regel(3) = CInt(Mid$(Cells(akt_row, 49).Value, 9, 3))
regel(4) = CInt(Mid$(Cells(akt_row, 49).Value, 13, 3))
' Block
With DialogSheets("WASDARFSSEIN")
If regel(1) = 0 Then
.[d1].Value = 0
.[t1].Value = 0
.[R1].Value = 0
.[Dienst1].Value = 0
.[Dienst1].Visible = False
Else
.[d1].Value = CInt(Mid$(CStr(regel(1)), 2, 1)) + 1
.[t1].Value = CInt(Left$(CStr(regel(1)), 1))
.[R1].Value = 1
.[Dienst1].Value = CInt(Right$(CStr(regel(1)), 1))
If CInt(Mid$(CStr(regel(1)), 2, 1)) + 1 > 4 Then
.[Dienst1].Visible = True
Else
.[Dienst1].Visible = False
End If
End If

If regel(2) = 0 Then
.[d2].Value = 0
.[T2].Value = 0
.[R2].Value = 0
.[Dienst2].Value = 0
.[Dienst2].Visible = False
Else
.[d2].Value = CInt(Mid$(CStr(regel(2)), 2, 1)) + 1
.[T2].Value = CInt(Left$(CStr(regel(2)), 1))
.[R2].Value = 1
.[Dienst2].Value = CInt(Right$(CStr(regel(2)), 1))
If CInt(Mid$(CStr(regel(2)), 2, 1)) + 1 > 4 Then
.[Dienst2].Visible = True
Else
.[Dienst2].Visible = False
End If
End If

If regel(3) = 0 Then
.[d3].Value = 0
.[T3].Value = 0
.[R3].Value = 0
.[Dienst3].Value = 0
.[Dienst3].Visible = False
Else
.[d3].Value = CInt(Mid$(CStr(regel(3)), 2, 1)) + 1
.[T3].Value = CInt(Left$(CStr(regel(3)), 1))
.[R3].Value = 1
.[Dienst3].Value = CInt(Right$(CStr(regel(3)), 1))
If CInt(Mid$(CStr(regel(3)), 2, 1)) + 1 > 4 Then
.[Dienst3].Visible = True
Else
.[Dienst3].Visible = False
End If
End If

If regel(4) = 0 Then
.[d4].Value = 0
.[T4].Value = 0
.[R4].Value = 0
.[Dienst4].Value = 0
.[Dienst4].Visible = False
Else
.[d4].Value = CInt(Mid$(CStr(regel(4)), 2, 1)) + 1
.[T4].Value = CInt(Left$(CStr(regel(4)), 1))
.[R4].Value = 1
.[Dienst4].Value = CInt(Right$(CStr(regel(4)), 1))
If CInt(Mid$(CStr(regel(4)), 2, 1)) + 1 > 4 Then
.[Dienst4].Visible = True
Else
.[Dienst4].Visible = False
End If
End If

If regel(5) = 0 Then

.[T5].Value = 0
.[R5].Value = 0
.[Dienst5].Value = 0
.[Dienst5].Visible = False
Else
.[d5].Value = CInt(Mid$(CStr(regel(5)), 2, 1)) + 1
.[T5].Value = CInt(Left$(CStr(regel(5)), 1))
.[R5].Value = 1
.[Dienst5].Value = CInt(Right$(CStr(regel(5)), 1))
If CInt(Mid$(CStr(regel(5)), 2, 1)) + 1 > 4 Then
.[Dienst5].Visible = True
Else
.[Dienst5].Visible = False
End If
End If
End With
End Sub
Sub WASDARFSSEIN_Schaltflaeche2_BeiKlick()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
' Das Wunschfenster wird geschlossen, Eintr|fffd|ge werden aufgebaut
Dim akt_row As Byte
Dim laufvariable As Long
Dim regel As String
With DialogSheets("WASDARFSSEIN")
akt_row = ActiveCell.Row
' Teil 1
If .[R1].Value = 1 Then
regel = CStr(.[t1].Value)
regel = regel & CStr(.[d1].Value - 1)
If .[d1].Value = 5 Or _
    .[d1].Value = 6 Then
    regel = regel & CStr(.[Dienst1].Value) & ","
    Else
    regel = regel & "0,"
    End If
Else
regel = "000,"
End If
' Teil 2
If .[R2].Value = 1 Then
regel = regel & CStr(.[T2].Value)
regel = regel & CStr(.[d2].Value - 1)
If .[d2].Value = 5 Or _
    .[d2].Value = 6 Then
    regel = regel & CStr(.[Dienst2].Value) & ","
    Else
    regel = regel & "0,"
    End If
Else
regel = regel & "000,"
End If
' Teil 3
If .[R3].Value = 1 Then
regel = regel & CStr(.[T3].Value)
regel = regel & CStr(.[d3].Value - 1)
If .[d3].Value = 5 Or _
    .[d3].Value = 6 Then
    regel = regel & CStr(.[Dienst3].Value) & ","
    Else
    regel = regel & "0,"
    End If
Else
regel = regel & "000,"
End If
' Teil 4
If .[R4].Value = 1 Then
regel = regel & CStr(.[T4].Value)
regel = regel & CStr(.[d4].Value - 1)
If .[d4].Value = 5 Or _
    .[d4].Value = 6 Then
    regel = regel & CStr(.[Dienst4].Value) & ","
    Else
    regel = regel & "0,"
    End If
Else
regel = regel & "000,"
End If
' Teil 5
If .[R5].Value = 1 Then
regel = regel & CStr(.[T5].Value)
regel = regel & CStr(.[d5].Value - 1)
If .[d5].Value = 5 Or _
    .[d5].Value = 6 Then
    regel = regel & CStr(.[Dienst5].Value)
    Else
    regel = regel & "0"
    End If
Else
regel = regel & "000"
End If
Cells(akt_row, 49).Value = regel
End With
End Sub
Sub Schaltflaeche38_BeiKlick()
' Stellt alle Werte im Wunschplaner auf 0
With DialogSheets("WASDARFSSEIN")
.[d1].Value = 0
.[d2].Value = 0
.[d3].Value = 0
.[d4].Value = 0
.[d5].Value = 0
.[t1].Value = 0
.[T2].Value = 0
.[T3].Value = 0
.[T4].Value = 0
.[T5].Value = 0
.[R1].Value = 0
.[R2].Value = 0
.[R3].Value = 0
.[R4].Value = 0
.[R5].Value = 0
.[Dienst1].Value = 0
.[Dienst2].Value = 0
.[Dienst3].Value = 0
.[Dienst4].Value = 0
.[Dienst5].Value = 0
End With
End Sub

Sub monatsuebertrag_entfernen()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
Worksheets("PLAN").Select
Dim antwort
antwort = MsgBox("Achtung, dieser Vorgang entfernt die Ansicht der letzten Arbeitstage " _
& "des Vormonats. Soll die wirklich durchgef|fffd|hrt werden= ", 36, "DPE3 | Antwort erforderlich")
If antwort = vbNo Then Exit Sub
Call ansicht_aus
Application.EnableEvents = False
ActiveSheet.Unprotect
Range("AZ9,AZ12,AZ15,AZ18,AZ21,AZ24,AZ27,AZ30,AZ33,AZ36,AZ39,AZ42,AZ45,AZ48,AZ51,AZ54,AZ57,AZ60,AZ63,AZ66").Select
Selection.Value = "..."
Range("AZ69,AZ72,AZ75,AZ78,AZ81,AZ84,AZ87,AZ90,AZ93,AZ96,AZ99,AZ102,AZ105,AZ108,AZ111,AZ114,AZ117,AZ120,AZ123,AZ126").Select
Selection.Value = "..."
Range("AZ129,AZ132,AZ135,AZ138,AZ141,AZ144,AZ147,AZ150,AZ153,AZ156,AZ159,AZ162,AZ165,AZ168").Select
Selection.Value = "..."
Call schutz_ein
Range("D9").Activate
Application.EnableEvents = True
Call ansicht_ein
End Sub
Sub wache_auf_null()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
Worksheets("PLAN").Select
Dim antwort
antwort = MsgBox("Achtung, dieser Vorgang l|fffd|scht den Wachenmerker, sprich Sie wissen " _
& "k|fffd|nftig nicht mehr, wieviele Nachtwachen der einzelne Mitarbeiter innerhalb des " _
& "aktuellen Plans und des laufenden Quartals erarbeitet hat. Wollen Sie wirklich " _
& "diese Werte f|fffd|r alle Mitarbeiter auf '0' setzen ?", 36, "DPE3 | Antwort erforderlich")
If antwort = vbNo Then Exit Sub
Call ansicht_aus
Application.EnableEvents = False
ActiveSheet.Unprotect
Range("AX9,AX12,AX15,AX18,AX21,AX24,AX27,AX30,AX33,AX36,AX39,AX42,AX45,AX48,AX51,AX54,AX57,AX60,AX63,AX66,AX69,AX72,AX75,AX78,AX81,AX84,AX87,AX90,AX93,AX96").Select
Selection.Value = 0
Range("AX99,AX102,AX105,AX108,AX111,AX114,AX117,AX120,AX123,AX126,AX129,AX132,AX135,AX138,AX141,AX144,AX147,AX150,AX153,AX156,AX159,AX162,AX165,AX168").Select
Selection.Value = 0
Call schutz_ein
Range("D9").Select
Application.EnableEvents = True
Call ansicht_ein
End Sub
Sub wunsch_raus()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
Worksheets("PLAN").Select
Dim antwort As String
antwort = MsgBox("Achtung - Sie sind im Begriff alle hinterlegten Mitarbeiterw|fffd|nsche " _
& "zu entfernen. Soll dieser Vorgang fortgesetzt werden ?", 36, "DPE3 | Antwort erforderlich")
If antwort = vbNo Then Exit Sub
Call ansicht_aus
ActiveSheet.Unprotect
Application.EnableEvents = False
Range("AW9,AW12,AW15,AW18,AW21,AW24,AW27,AW30,AW33,AW36,AW39,AW42,AW45,AW48,AW51,AW54,AW57,AW60,AW63,AW66,AW69,AW72,AW75,AW78,AW81,AW84,AW87,AW90,AW93,AW96").Select
Selection.Value = "000,000,000,000,000"
Range("AW99,AW102,AW105,AW108,AW111,AW114,AW117,AW120,AW123,AW126,AW129,AW132,AW135,AW138,AW141,AW144,AW147,AW150,AW153,AW156,AW159,AW162,AW165,AW168").Select
Selection.Value = "000,000,000,000,000"
Call schutz_ein
Range("D9").Activate
Application.EnableEvents = True
Call ansicht_ein
End Sub

Sub D1_BeiAenderung()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
' Ist keine Wunsch ausgew|fffd|hlt, der die Ansicht einer Dienstform
' ben|fffd|tigt, so wird die hinterste Kombobox ausgeblendet
With DialogSheets("WASDARFSSEIN")
If CInt(.[d1].Value) + 1 > 5 Then
.[Dienst1].Visible = True
Else
.[Dienst1].Visible = False
End If
End With
End Sub
Sub D2_BeiAenderung()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
' Ist keine Wunsch ausgew|fffd|hlt, der die Ansicht einer Dienstform
' ben|fffd|tigt, so wird die hinterste Kombobox ausgeblendet
With DialogSheets("WASDARFSSEIN")
If CInt(.[d2].Value) + 1 > 5 Then
.[Dienst2].Visible = True
Else
.[Dienst2].Visible = False
End If
End With
End Sub
Sub D3_BeiAenderung()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
' Ist keine Wunsch ausgew|fffd|hlt, der die Ansicht einer Dienstform
' ben|fffd|tigt, so wird die hinterste Kombobox ausgeblendet
With DialogSheets("WASDARFSSEIN")
If CInt(.[d3].Value) + 1 > 5 Then
.[Dienst3].Visible = True
Else
.[Dienst3].Visible = False
End If
End With
End Sub
Sub D4_BeiAenderung()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
' Ist keine Wunsch ausgew|fffd|hlt, der die Ansicht einer Dienstform
' ben|fffd|tigt, so wird die hinterste Kombobox ausgeblendet
With DialogSheets("WASDARFSSEIN")
If CInt(.[d4].Value) + 1 > 5 Then
.[Dienst4].Visible = True
Else
.[Dienst4].Visible = False
End If
End With
End Sub
Sub D5_BeiAenderung()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
' Ist keine Wunsch ausgew|fffd|hlt, der die Ansicht einer Dienstform
' ben|fffd|tigt, so wird die hinterste Kombobox ausgeblendet
With DialogSheets("WASDARFSSEIN")
If CInt(.[d5].Value) + 1 > 5 Then
.[Dienst5].Visible = True
Else
.[Dienst5].Visible = False
End If
End With
End Sub

Sub copyto(alt As Variant, neu As Variant, ziel As Variant, von As Variant, nach As Variant, aufruf As Long)
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
Windows(alt).Activate
Worksheets(ziel).Activate
Range(von).Select
Application.CutCopyMode = False
Selection.Copy
Windows(neu).Activate

If aufruf <> 254 Then
    Worksheets(ziel).Activate
        End If
        
If aufruf = 254 Then Worksheets("DIENSTE").Activate
Range(nach).Select
Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
Exit Sub
Fehler:
MsgBox "Der Kopierbefehl 'copyto' ist fehlgeschlagen : " & CStr(aufruf) & vbLf & "Der Vorgang wird abgebrochen.", vbCritical, "Problem!"
End Sub
Sub deftest(r_von As Long, r_bis As Long, aufruf As Long)
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
Dim a As Long
With Worksheets("DEFINITIONEN")
For a = r_von To r_bis
If .Cells(a, 3).Value = "" Then
.Cells(a, 3).Value = .Cells(a, 4).Value
If Worksheets("DEFINITIONEN").Range("C4") = 1 Then Call hilfsassistent("Achtung!", "In der Parametrierung wurde ein Fehler in der Zelle C" & CStr(a) & " entdeckt. Der Standardwert '" & CStr(.Cells(a, 4).Value) & "' wurde eingesetzt. Der Vorgang wird fortgesetzt, Sie m|fffd|ssen die Parametrierung an dieser Stelle auf Ihre W|fffd|nsche hin |fffd|berpr|fffd|fen.")
End If
Next a
End With
Exit Sub
Fehler:
MsgBox "Der Pr|fffd|fbefehl 'deftest' ist fehlgeschlagen : " & CStr(aufruf) & vbLf & "Der Vorgang wird abgebrochen.", vbCritical, "Problem!"
End Sub
Sub hilfsassistent(titel As String, text As String)
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
If titel <> "Schichtbesetzung" Then MsgBox text, vbInformation, titel
End Sub
Sub mitarbeiterreihenfolge()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
Worksheets("PLAN").Select
Dim a As Byte
Dim b As Byte
Dim wert As Variant
Dim i As Byte
For a = 9 To 168 Step 3
b = b + 1
MITARBEITERNAME(b) = Cells(a, 1).Value
typierung(b) = Cells(a + 1, 1).Value
dienstnummer(b) = Cells(a + 2, 1).Value
nachtwachen(b) = Cells(a, 50).Value
ftazdoppel(b) = Cells(a, 47).Value
wuensche(b) = Cells(a, 49).Value
stundenkontouebertrag(b) = Cells(a, 2).Value
freieintrag(b) = Cells(a + 1, 3).Value
NOTIZ(b) = Cells(a, 51).Value
vormonat(b) = Cells(a, 52).Value
zaehltmit(b) = Cells(a, 53).Value
TAGESSTUNDEN(b) = Cells(a, 54).Value
SASTUNDEN(b) = Cells(a + 1, 54).Value
SOSTUNDEN(b) = Cells(a + 2, 54).Value
ftfrei(b) = Cells(a, 56).Value
brutto(b) = Cells(a, 55).Value
uges(b) = Cells(a, 57).Value
ugen(b) = Cells(a, 58).Value
hamburgermodell(b) = Cells(a + 1, 58).Value ' 3641
UrlaubOverride(b) = Cells(a + 1, 57).Value ' 3701
Next a
With MiReihenfolge
For i = 1 To 54
    .Controls("Mitarbeiter" & i) = MITARBEITERNAME(i)
    .Controls("Position" & i) = i
Next i
End With
If Worksheets("DEFINITIONEN").Range("C6") = 1 Then Call dialog_Mitarbeiterreihenfolge_anpassen
MiReihenfolge.Show
End Sub

Sub sonderdienst(akt_row As Long, akt_col As Long, was As String)
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
Dim b As Byte
With Worksheets("DEFINITIONEN")
For b = 108 To 116
If .Cells(b, 5) <> "" Then
If .Cells(b, 5).Value = was Then
Cells(akt_row + 2, akt_col - 1).Value = .Cells(b, 3).Value
' Eintrag f|fffd|r den Mitarbeiterplan
Cells(akt_row, akt_col + 62 - 1).Value = .Cells(b, 4).Value
' Kommentar eintragen
Cells(akt_row, akt_col - 1).ClearComments
Cells(akt_row, akt_col - 1).AddComment
Cells(akt_row, akt_col - 1).Comment.Visible = False
Cells(akt_row, akt_col - 1).Comment.text " " & .Cells(b, 4).Value
End If
End If
Next b
End With
End Sub

Sub multiplikator(wieviel As Long, akt_row As Long, akt_col As Long, was As String, LZPTrue As Boolean, LZPColor As Long)
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
Dim a As Byte
Dim b As Byte
Dim c As Byte ' Laufvariable
Dim d As Byte ' Ergebnis f|fffd|r Nachtdienst
Dim antwort As String
ActiveSheet.Unprotect
With Worksheets("DEFINITIONEN")
For a = 1 To wieviel
' Pr|fffd|fung, ob hier nicht in Tage geplant werden soll, die nicht zul|fffd|ssig sind
If akt_col + a - 1 > 34 - CInt(Range("AO3").Value) Then
Call ansicht_ein
Exit Sub
End If
' Eintragen
Cells(akt_row, akt_col + a - 1).Value = was
' Farbwert eintragen?
If LZPTrue = True Then
Cells(akt_row, akt_col + a - 1).Interior.ColorIndex = LZPColor
End If

Cells(akt_row, akt_col + a - 1).ClearComments
Cells(akt_row, akt_col + 62 + a - 1).Value = ""
If Cells(akt_row + 2, akt_col + a - 1).Value <> "" Then
antwort = MsgBox("Es wurde ein hinterlegter Zeitwert entdeckt, soll dieser entfernt " & _
"werden ?", vbYesNo, "Frage?")
If antwort = "7" Then Exit Sub
Cells(akt_row + 2, akt_col + a - 1).Value = ""
End If
' Pr|fffd|fung ob f|fffd|r den zu wiederholenden Dienst Stundeneintr|fffd|ge vorhanden sind
For b = 108 To 116
If .Cells(b, 5) <> "" Then
If .Cells(b, 5).Value = was Then
Cells(akt_row + 2, akt_col + a - 1).Value = .Cells(b, 3).Value
' Eintrag f|fffd|r den Mitarbeiterplan
Cells(akt_row, akt_col + 62 + a - 1).Value = .Cells(b, 4).Value
' Kommentar eintragen
Cells(akt_row, akt_col + a - 1).ClearComments
Cells(akt_row, akt_col + a - 1).AddComment
Cells(akt_row, akt_col + a - 1).Comment.Visible = False
Cells(akt_row, akt_col + a - 1).Comment.text " " & .Cells(b, 4).Value
End If
End If
Next b
' Pr|fffd|fung ob ein Urlaubstag auf einen Feiertag fallen wird
If Cells(7, akt_col + a - 1) = "ft" And Cells(akt_row, akt_col + a - 1).Value = _
.Cells(24, 3).Value And .Cells(158, 3).Value = 1 Then
Cells(akt_row, akt_col + a - 1) = ""
End If
' Pr|fffd|fung ob ein Nacht-Urlaubstag auf einen Feiertag fallen wird
If Cells(7, akt_col + a - 1) = "ft" And Cells(akt_row, akt_col + a - 1).Value = _
.Cells(189, 3).Value And .Cells(158, 3).Value = 1 Then
Cells(akt_row, akt_col + a - 1) = ""
End If
' Pr|fffd|fung ob ein Krankheitstag auf einen Feiertag fallen wird
If Cells(7, akt_col + a - 1) = "ft" And Cells(akt_row, akt_col + a - 1).Value = _
"K" And .Cells(158, 3).Value = 1 Then
Cells(akt_row, akt_col + a - 1) = ""
End If
' Pr|fffd|fung ob ein Urlaubstag auf einen Wochenendtag f|fffd|llt
If .Cells(163, 3).Value = 1 And Weekday(Cells(5, akt_col + a - 1).Value) = 7 Or _
.Cells(163, 3).Value = 1 And Weekday(Cells(5, akt_col + a - 1).Value) = 1 Then
' Pr|fffd|fung ob der Dienst ein Urlaubstag ist, wenn ja, so wird der aktuell eingetragene
' Wert erneut durch "" |fffd|berschrieben
If Cells(akt_row, akt_col + a - 1).Value = .Cells(24, 3).Value Then
Cells(akt_row, akt_col + a - 1) = ""
End If
If Cells(akt_row, akt_col + a - 1).Value = .Cells(189, 3).Value Then
Cells(akt_row, akt_col + a - 1) = ""
End If
If Cells(akt_row, akt_col + a - 1).Value = "K" Then
Cells(akt_row, akt_col + a - 1) = ""
End If
End If
' Pr|fffd|fung ob der heutige Dienst ein Nachtdienst ist!
For b = 43 To 50
If Worksheets("DIENSTE").Cells(b, 5).Value = was Then d = 1
Next b
' morgen ft ; heute nw ; heute kein ft
If d = 1 And _
Cells(7, akt_col + a).Value = "ft" And _
Left$(was, 1) <> Left$(.Range("C162"), 2) And _
Cells(7, akt_col + a - 1).Value <> "ft" Then
Call feiertag(akt_row, akt_col + a - 1, was, 2)
End If
' Pr|fffd|fung ob f|fffd|r diesen Tag ein Feiertag anzurechnen ist
If Cells(7, akt_col + a - 1).Value = "ft" Then
Call feiertag(akt_row, akt_col + a - 1, was, 0)
End If
' Auch innerhalb des Multiplikators kann der letzte Tag des Monats auf eine Wache fallen
' dann ist art auf 3 zu setzen ; dies sorgt f|fffd|r eine Pr|fffd|fung, ob der 1ste des n|fffd|chsten
' Monat ein Feiertag ist (dann sind die Arbeitsstunden ab Mitternacht zu verdoppeln)
If d = 1 And akt_col + a - 1 = 34 And Range("AO3").Value = 0 And Range("AH7").Value <> "ft" Then
Call feiertag(akt_row, akt_col + a - 1, was, 3)
End If
Next a
End With
Call schutz_ein
Exit Sub
Fehler:
MsgBox "Im Unterprogramm 'multiplikator' ist der Fehler " & Err.Description & " aufgetreten. Der Vorgang wird abgebrochen!", vbCritical, "Fehler!"
End Sub

Sub feiertag(akt_row As Long, akt_col As Long, Dienst As Variant, art As Byte)
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
Dim dienstname(48) As String
Dim rzeit(48) As Variant
Dim rzeit_von(48) As Variant
Dim rzeit_bis(48) As Variant
Dim a As Long
Dim b As Byte ' Tr|fffd|gt sp|fffd|ter die Dienstbezeichnung!
Dim uebergabe As Variant
Dim schnitt As Variant
Dim wachenzeitwert As Double
Dim testschnitt As String

' Ist die Verdoppelung |fffd|berhaupt erforderlich?
If Cells(akt_row, 47).Value = "1" Then GoTo ausgang
If Worksheets("DEFINITIONEN").Range("C160").Value <> "1" Then GoTo ausgang

' Benennung aufbauen
GoSub Einlesen
b = 0
' Alle nicht Nachtwachendienste durchgehen
For a = 1 To 40
If dienstname(a) = Dienst And dienstname(a) <> "_" Then
uebergabe = rzeit(a)
Cells(akt_row + 2, akt_col).Value = uebergabe
GoTo ausgang
End If
Next a
' Es liegt offensichtlich ein Nachtwachendienst vor
For a = 48 To 41 Step -1
If Dienst = dienstname(a) Then b = a
Next a
' Nur zur Sicherheit
If b = 0 Then GoTo ausgang
If art = 0 Then
' Wenn der Folgetag auch ein Feiertag ist, dann ist's einfach
If Cells(7, akt_col + 1).Value = "ft" Then
uebergabe = rzeit(b)
Cells(akt_row + 2, akt_col).Value = uebergabe
GoTo ausgang
End If
End If
' Der Folgetag ist kein Feiertag, somit kann nur bis Mitternacht gerechnet werden
schnitt = rzeit_von(b)
wachenzeitwert = ((23 - CStr(Left$(schnitt, 2))) * 60 + (60 - CStr(Right$(schnitt, 2)))) / 1440
Cells(akt_row + 2, akt_col).Value = wachenzeitwert
' Es k|fffd|nnte ja sein, dass der morgige Tag ein Feiertag ist und der Mitarbeiter aktuell
' in einer Nachtwache ist
If art = 2 Then
schnitt = rzeit_bis(b)
wachenzeitwert = ((CStr(Left$(schnitt, 2)) * 60) + CStr(Right$(schnitt, 2))) / 1440
' Ist die Nachwachenverk|fffd|rzung aktiviert?
If Worksheets("DEFINITIONEN").Range("C173").Value = "1" Then
Cells(akt_row + 2, akt_col).Value = wachenzeitwert - Worksheets("DIENSTE").Cells(b + 2, 7).Value
Else
Cells(akt_row + 2, akt_col).Value = wachenzeitwert
End If
End If
' letzter des monats ; nw ; n|fffd|chster tag feiertag ?
If art = 3 Then
For a = 20 To 49
If (Range("AH5").Value + 1) = Worksheets("JAHRESDATEN").Cells(a, 2).Value Then
schnitt = rzeit_bis(b)
wachenzeitwert = ((CStr(Left$(schnitt, 2)) * 60) + CStr(Right$(schnitt, 2))) / 1440
If Worksheets("DEFINITIONEN").Range("C173").Value = "1" Then
Cells(akt_row + 2, akt_col).Value = wachenzeitwert - Worksheets("DIENSTE").Cells(b + 2, 7).Value
Else
Cells(akt_row + 2, akt_col).Value = wachenzeitwert
End If
End If
Next a
End If
ausgang:
Exit Sub
' Dienst-Informationen ins Array einlesen
Einlesen:
For a = 1 To 48
With Worksheets("DIENSTE")
dienstname(a) = .Cells(2 + a, 5)
rzeit(a) = .Cells(2 + a, 3)
rzeit_von(a) = Left$(.Cells(2 + a, 4), 5)
rzeit_bis(a) = Right$(.Cells(2 + a, 4), 5)
End With
Next a
Return
End Sub

Sub ansicht_ein()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
Application.Cursor = xlDefault
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.Calculate
Call schutz_ein
End Sub

Sub ansicht_aus()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
Application.Cursor = xlWait
Application.Calculation = xlCalculationManual
Application.ScreenUpdating = False
End Sub

Sub mitarbeiterplan_konfig()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
MiDPLDef.Show
End Sub

Sub druckeinstellungen_konfig()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
If CInt(Application.Version) = 80 And Left(Application.OperatingSystem, 3) <> "Win" Then
    MsgBox "Diese Funktion ist auf Apple-Computern nicht nutzbar."
    Else
DruckerKonfig.Show
End If
End Sub

Sub sasofr_planungshilfe()
Dim lauf As Long
Dim lauf2 As Long
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
Worksheets("PLAN").Select
' mit dem plan_killer_aktiv wird die autoamtische Kalkulation abgeschaltet
plan_killer_aktiv = 1
Application.EnableEvents = False
ActiveSheet.Unprotect
Call ansicht_aus
For lauf = 4 To 34
If Weekday(Cells(6, lauf).Value) = 1 Or Weekday(Cells(6, lauf).Value) = 7 Or Cells(7, lauf).Value = "ft" Then
For lauf2 = 9 To 170
Range(Cells(lauf2, lauf), Cells(lauf2, lauf)).Select
If Selection.Interior.ColorIndex = -4142 Then
    Selection.Interior.ColorIndex = Worksheets("DEFINITIONEN").Range("C177").Value
    Selection.Interior.Pattern = xlSolid
    Selection.Borders(xlEdgeLeft).LineStyle = xlContinuous
    Selection.Borders(xlEdgeLeft).Weight = xlThin
    Selection.Borders(xlEdgeLeft).ColorIndex = 15
    Selection.Borders(xlEdgeRight).LineStyle = xlContinuous
    Selection.Borders(xlEdgeRight).Weight = xlThin
    Selection.Borders(xlEdgeRight).ColorIndex = 15
    If lauf2 Mod 3 = 1 Then
    Selection.Borders(xlEdgeBottom).LineStyle = xlContinuous
    Selection.Borders(xlEdgeBottom).Weight = xlThin
    Selection.Borders(xlEdgeBottom).ColorIndex = 15
    Selection.Borders(xlEdgeTop).LineStyle = xlContinuous
    Selection.Borders(xlEdgeTop).Weight = xlThin
    Selection.Borders(xlEdgeTop).ColorIndex = 15
    End If
End If
Next lauf2
End If
Next
' Male die untere Linie neu
    Range("D171:AH171").Borders(xlDiagonalDown).LineStyle = xlNone
    Range("D171:AH171").Borders(xlDiagonalUp).LineStyle = xlNone
    Range("D171:AH171").Borders(xlEdgeLeft).LineStyle = xlNone
    Range("D171:AH171").Borders(xlEdgeBottom).LineStyle = xlNone
    Range("D171:AH171").Borders(xlEdgeTop).LineStyle = xlContinuous
    Range("D171:AH171").Borders(xlEdgeTop).ColorIndex = 0
    Range("D171:AH171").Borders(xlEdgeTop).TintAndShade = 0
    Range("D171:AH171").Borders(xlEdgeTop).Weight = xlMedium
    Range("D171:AH171").Borders(xlEdgeRight).LineStyle = xlNone
    Range("D171:AH171").Borders(xlInsideVertical).LineStyle = xlNone
    Range("D171:AH171").Borders(xlInsideHorizontal).LineStyle = xlNone
plan_killer_aktiv = 0
Application.EnableEvents = True
Range("D9").Select
Call ansicht_ein
End Sub

Sub sasofr_plan_weg()
Dim lauf As Long
Dim lauf2 As Long
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
Worksheets("PLAN").Select
Call ansicht_aus
' mit dem plan_killer_aktiv wird die autoamtische Kalkulation abgeschaltet
plan_killer_aktiv = 1
Application.EnableEvents = False
ActiveSheet.Unprotect
For lauf = 4 To 34
If Weekday(Cells(6, lauf).Value) = 1 Or Weekday(Cells(6, lauf).Value) = 7 Or Cells(7, lauf).Value = "ft" Then
For lauf2 = 9 To 170
Range(Cells(lauf2, lauf), Cells(lauf2, lauf)).Select
If Selection.Interior.ColorIndex = Worksheets("DEFINITIONEN").Range("C177").Value Then
    Selection.Interior.ColorIndex = xlNone
End If
Next lauf2
End If
Next
plan_killer_aktiv = 0
Application.EnableEvents = True
Range("D9").Select
Call ansicht_ein
End Sub

Sub stundenuerbtrag_entfernen()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
Dim a As Byte
Dim antwort As Variant
antwort = MsgBox("Sollen die |fffd|bertr|fffd|ge der Stunden aus dem Vormonat aus Spalte B wirklich bei allen Mitarbeitern auf '00:00' gesetzt werden?", 36, "DPE3 | Antwort erforderlich")
If antwort = vbYes Then
Call ansicht_aus
With Worksheets("PLAN")
For a = 9 To 168 Step 3
.Cells(a, 2).Value = "00:00"
.Cells(a, 98).Value = .Cells(a, 2).Value
Next a
Call ansicht_ein
End With
End If
End Sub

Sub dpe3helper_weg()
dpe3helfer.Left = 1
dpe3helfer.Top = 1
End Sub

Sub dienstplan_menu_weg()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
Dim antwort As Variant
antwort = MsgBox("Das Men|fffd| 'Dienstplan' wird nun entfernt. Sollte dies das letzte verbliebene Men|fffd| sein, so k|fffd|nnen Sie lediglich durch ein neues Aufrufen von DPE3 das Men|fffd| wieder 'herbeizaubern'. Soll das Men|fffd| wirklich entfernt werden?", 36, "DPE3 | Best|fffd|tigung erforderlich")
If antwort = vbYes Then
On Error Resume Next
Application.CommandBars("Worksheet Menu Bar").Controls("Dienstplan").Delete
End If
End Sub

Sub miplan_aufraeumen()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
Dim laufvariable As Byte
' Eintr|fffd|ge zur|fffd|cksetzen
Worksheets("MIPLAN").Select
With Worksheets("MIPLAN")
.Unprotect
.Range("C4:H34").ClearContents
' Monatsplannamen |fffd|bernehmen
.Range("C1").Value = Worksheets("PLAN").Range("I1").Value
' Datumsliste aufbauen
For laufvariable = 4 To 35
.Cells(laufvariable, 2).Value = Worksheets("PLAN").Cells(5, laufvariable).Value
Next laufvariable
.Range("C1:C2").Value = ""
.Range("F1:F2").Value = ""
.Range("H1:H2").Value = ""
.Range("B37").Value = ""
.Range("C1:C2").Value = ""
' Alle Zeile wieder einblenden
' Alles 31 Tage wieder anzeigen
.Rows("32:34").Select
Selection.EntireRow.Hidden = False
' Welcher Teil des MIPLANs ragt in den n|fffd|chsten Monat?
' Was soll den abgeschnitten werden?
Select Case Worksheets("PLAN").Range("AO3").Value
Case 1
Worksheets("MIPLAN").Rows("34:34").Select
Selection.EntireRow.Hidden = True
Case 2
Worksheets("MIPLAN").Rows("33:34").Select
Selection.EntireRow.Hidden = True
Case 3
Worksheets("MIPLAN").Rows("32:34").Select
Selection.EntireRow.Hidden = True
Case 0
End Select
End With
Worksheets("PLAN").Select
End Sub

Sub mitarbeiter_einfuegen()
    Call Einblendung
    MsgBox "Um einen Mitarbeiter einzuf|fffd|gen machen ist ein Doppelklick auf das r|fffd|tliche Namensfeld eines leeren (LEER) Mitarbeiters. Sie k|fffd|nnen die Reihenfolge der Mitarbeiter im Men|fffd| 'Dienstplan -> Diverses nachtr|fffd|glich' |fffd|ndern (hierbei werden die geplanten Dienste NICHT |fffd|bernommen.)" & vbCrLf & vbCrLf & "Klicken Sie nach dem Einf|fffd|gen auf Dienstplan -> Auf aktive Mitarbeiter begrenzen, um die Darstellung anzupassen.", vbInformation, "DPE3 | Einf|fffd|gen"
End Sub

Sub erstezeile_ersetze()
    ErsteReiheAnpassen.Show
End Sub

Sub feiertag_korrektur()
Dim ausgelesen As String
Dim akt_col As Long
Dim akt_row As Long
Dim antwort As String
' Aktuelle Position der aktiven Zelle definieren
akt_row = ActiveCell.Row
akt_col = ActiveCell.Column
ausgelesen = Cells(akt_row, akt_col).Value
If ausgelesen = "ft" Then
        antwort = MsgBox("F|fffd|r diesen Tag ist ein Feiertag definiert. M|fffd|chten Sie diesen entfernen?", 36, "DPE3 | Frage")
            If antwort = vbYes Then
                Worksheets("PLAN").Unprotect
                Cells(akt_row, akt_col).Select
                Cells(akt_row, akt_col).Value = ""
                Cells(akt_row, akt_col).ClearComments
                Worksheets("PLAN").Protect
            End If
    Else
        antwort = MsgBox("Wenn Sie f|fffd|r diesen Tag einen 'Feiertag' nachtr|fffd|glich einf|fffd|gen wollen, so klicken Sie auf 'JA'", 36, "DPE3 | Frage")
            If antwort = vbYes Then
                antwort = InputBox("Geben Sie den Namen des Feiertags ein.", "DPE3 | Erforderliche Eingabe")
                    If antwort <> "" Then
                Worksheets("PLAN").Unprotect
                Cells(akt_row, akt_col).Select
                Selection.Value = "ft"
                Selection.AddComment
                Selection.Comment.Visible = False
                Selection.Comment.text text:=antwort
                Selection.Comment.Visible = False
                Selection.Font.ColorIndex = 7
                Selection.Font.Size = 8
                Worksheets("PLAN").Protect
                    End If
            End If
End If
End Sub

Sub definitions_pruefung()
Dim ausgabe As String
ausgabe = "Folgende DEFINITIONEN sollten gepr|fffd|ft werden:"
With Worksheets("DEFINITIONEN")
If .Range("C23").Value = 0 Then ausgabe = ausgabe & vbCrLf & "C23 - Urlaubsdefinition sollte Eintrag gr|fffd||fffd|er 0 enthalten."
If .Range("C24").Value = "" Then ausgabe = ausgabe & vbCrLf & "C24 - Planungszeichen f|fffd|r Urlaub darf nicht leer sein."
End With
If ausgabe <> "Folgende DEFINITIONEN sollten gepr|fffd|ft werden:" Then MsgBox ausgabe, vbInformation, "DPE3 | Stammdatenpr|fffd|fung"
End Sub

Public Function TageDesMonats(ByVal TestDate As Date) As Long
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
  TageDesMonats = Day(CDate(DateSerial(Year(TestDate), Month(TestDate) + 1, 1) - 1))
  Exit Function
Fehler:
MsgBox "Beim Aufruf von 'Function TageDesMonats(ByVal TestDate As Date) As Long' ist der Fehler : " & Err.Description & " aufgetreten. Der Vorgang wird abgebrochen.", vbCritical, "DPE3 | Fehler"
End Function

Public Function SucheMitarbeiter(ByVal NUMMER As Variant) As Byte
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
  Dim lauf
  For lauf = 11 To 170 Step 3
    If Worksheets("PLAN").Cells(lauf - 2, 1) <> "Leer" And Worksheets("PLAN").Cells(lauf, 1) <> "" Then
    If Worksheets("PLAN").Cells(lauf, 1) = NUMMER Then
        SucheMitarbeiter = (lauf - 2)
        Exit For
        End If
    End If
  Next lauf
  Exit Function
Fehler:
MsgBox "Beim Aufruf von 'Public Function SucheMitarbeiter(ByVal Nummer As Variant) As Byte' ist der Fehler : " & Err.Description & " aufgetreten. Der Vorgang wird abgebrochen.", vbCritical, "DPE3 | Fehler"
End Function

Public Function DatumsPruefung(ByVal Datum As String) As Boolean
If Worksheets("DEFINITIONEN").Range("C23") = 0 Then On Error Resume Next
If Mid$(CStr(Datum), 3, 1) = "." And Mid$(CStr(Datum), 6, 1) = "." Then DatumsPruefung = True
End Function

Public Function Wochentag(ByVal Tag As Long) As String
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
Select Case Tag
Case 1
    Wochentag = "SA"
Case 2
    Wochentag = "SO"
Case 3
    Wochentag = "MO"
Case 4
    Wochentag = "DI"
Case 5
    Wochentag = "MI"
Case 6
    Wochentag = "DO"
Case 7
    Wochentag = "FR"
End Select
End Function
Attribute VB_Name = "Journal"
Option Explicit

Sub journalplan()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
Worksheets("PLAN").Select
' Dimensionierung
Dim reg(52) As String ' 48 Dienste + beide Urlaubsformen + Krankheit
Dim dfo(52) As String
Dim ddauer(52) As Variant
Dim schnipp As String
Dim schnapp As String
Dim untersuchung As String
Dim zeile_zwei As String
Dim bereitschaftssymbol As String
Dim sonderdienst As String
Dim MITARBEITERNAME As String
Dim antwort As String
Dim dienstform As String
Dim zweite_zeile As String
Dim zeile_drei As Variant
Dim mitdienst As String
Dim diensform As String
Dim dienstzeit_anzeigen As Byte
Dim bereitschaft As Byte
Dim dienstdauer As Variant
Dim laufvariable As Long
Dim laeufer As Long
Dim Tag As Long
Dim a As Long
Dim ilauf As Long
Dim mit_a_dienst As Long
Dim mit_a_marker As Byte
Dim schleife As Long
Dim smarker As Byte
Dim bin_ein_a As Byte
Dim bin_ein_b As Byte
With Worksheets("DEFINITIONEN")
' Sicherheitsabfrage
If .Cells(104, 3).Value <> 0 Then
antwort = MsgBox("Monatsjournale f|fffd|r die im MiPlan gew|fffd|hlten Mitarbeiter auf dem Drucker ausgeben ?", vbYesNo, "Frage!")
Else
antwort = MsgBox("Sollen die Monatsjournale durchgerechnet werden? Sie finden die Ergebnisse der letzten Person auf dem Dienstplan im Register 'MIPLAN' ?", vbYesNo, "Frage!")
End If
If antwort = 7 Then Exit Sub
Call ansicht_aus
eingabe_ueberwachung = 1
' Einlesen Definitionen
' In der Tabelle DEFINITIONEN gibt es einen Eintrag, der das Anzeigen der jeweiligen
' Dienstzeiten (VON ... BIS) steuert. Ist dort eine 0 eingetragen, so wird die An-
' zeige unterlassen.
dienstzeit_anzeigen = .Range("C103").Value
bereitschaft = .Range("C105").Value
bereitschaftssymbol = .Range("C106").Value
sonderdienst = Worksheets("DEFINITIONEN").Range("C107").Value
' Eintr|fffd|ge zur|fffd|cksetzen
Worksheets("MIPLAN").Unprotect
Worksheets("MIPLAN").Range("C4:H34").ClearContents
' Monatsplannamen |fffd|bernehmen
Worksheets("MIPLAN").Range("C1").Value = Range("I1").Value
' Datumsliste aufbauen
For laufvariable = 4 To 35
Worksheets("MIPLAN").Cells(laufvariable, 2).Value = Cells(5, laufvariable).Value
Next laufvariable
' Dienstnamen einlesen
For laufvariable = 1 To 48
If Worksheets("DIENSTE").Cells(laufvariable + 2, 6).Value = 1 Then
dfo(laufvariable) = Worksheets("DIENSTE").Cells(laufvariable + 2, 5).Value
reg(laufvariable) = Worksheets("DIENSTE").Cells(laufvariable + 2, 4).Value
ddauer(laufvariable) = Worksheets("DIENSTE").Cells(laufvariable + 2, 3).Value
End If
Next laufvariable
' Urlaub
dfo(49) = Worksheets("DEFINITIONEN").Range("C24").Value
ddauer(49) = Worksheets("DEFINITIONEN").Range("C23").Value
dfo(50) = Worksheets("DEFINITIONEN").Range("C189").Value
ddauer(50) = Worksheets("DEFINITIONEN").Range("C188").Value
dfo(51) = "K"
dfo(52) = Worksheets("DEFINITIONEN").Range("C182").Value
' Beschriftung |fffd|bertragen
Worksheets("MIPLAN").Range("B37").Value = "Monatsjournal, erstellt am " & CStr(Now())
Worksheets("MIPLAN").Range("H38").Value = "Erstellt mit DPE3, Version " & Worksheets("DEFINITIONEN").Range("C2").Value & ", (C) 1998-2006 Thomas B|fffd|r"
For laufvariable = 9 To 168 Step 3
' Mitarbeiternamen auslesen
MITARBEITERNAME = Cells(laufvariable, 1)
If MITARBEITERNAME = "" Or MITARBEITERNAME = "Leer" Then GoTo sprungmarke
' Mitarbeiternamen |fffd|bernehmen
Worksheets("MIPLAN").Range("C2").Value = MITARBEITERNAME
' Stundenwerte |fffd|bernehmen
Worksheets("MIPLAN").Range("F1").Value = Cells(laufvariable, 36).Value
Worksheets("MIPLAN").Range("F2").Value = Cells(laufvariable, 3).Value
' Kontowerte |fffd|bernehmen
Worksheets("MIPLAN").Range("H1").Value = Cells(laufvariable, 2).Value
Worksheets("MIPLAN").Range("H2").Value = Cells(laufvariable, 37).Value
For Tag = 4 To 34
' Die Variable 'dienstform' h|fffd|lt nun den aktuellen Dienst des Mitarbeiters.
dienstform = Cells(laufvariable, Tag).Value
zeile_zwei = Cells(laufvariable + 1, Tag).Value
zeile_drei = Cells(laufvariable + 2, Tag).Value
' Format zur|fffd|cksetzen
Worksheets("MIPLAN").Cells(Tag, 5).NumberFormat = "General"
Worksheets("MIPLAN").Cells(Tag, 6).NumberFormat = "General"
' Eintr|fffd|ge l|fffd|schen
Worksheets("MIPLAN").Cells(Tag, 4).Value = ""
Worksheets("MIPLAN").Cells(Tag, 5).Value = ""
Worksheets("MIPLAN").Cells(Tag, 6).Value = ""

For a = 1 To 52
If dfo(a) = dienstform Then
    dienstdauer = ddauer(a)
    Exit For
    Else
    dienstdauer = 0
    End If
Next a

' Liegt ein 'K' vor?
If UCase(dienstform) = "K" Then
    If Right$(Cells(laufvariable + 1, 1).Value, 3) = "FLX" Then
    dienstdauer = Cells(laufvariable, 54).Value
    Else
    dienstdauer = ddauer(49) * Cells(laufvariable, 45).Value
    End If
End If

' Ist der Mitarbeiter FLX und er hat U
If UCase(dienstform) = Worksheets("DEFINITIONEN").Range("C24").Value And Right$(Cells(laufvariable + 1, 1).Value, 3) = "FLX" Then
    dienstdauer = Cells(laufvariable, 54).Value
End If

' Liegt eine FOBI vor?
If UCase(dienstform) = Worksheets("DEFINITIONEN").Range("C182").Value Then
    If Right$(Cells(laufvariable + 1, 1).Value, 3) = "FLX" Then
    dienstdauer = Cells(laufvariable, 54).Value
    Else
    dienstdauer = Worksheets("DEFINITIONEN").Range("C23").Value * Cells(laufvariable, 45).Value
    End If
End If

If dienstform <> "" Then
    Worksheets("MIPLAN").Cells(Tag, 4).Value = dienstform
    Worksheets("MIPLAN").Cells(Tag, 5).Value = dienstdauer
    Worksheets("MIPLAN").Cells(Tag, 5).NumberFormat = "[hh]:mm"
    If zeile_drei <> 0 Then
    If Worksheets("MIPLAN").Cells(Tag, 5).Value <> 0 Then
    Worksheets("MIPLAN").Cells(Tag, 6).Value = zeile_drei
    Worksheets("MIPLAN").Cells(Tag, 6).NumberFormat = "[hh]:mm"
    Else
    Worksheets("MIPLAN").Cells(Tag, 5).Value = zeile_drei
    Worksheets("MIPLAN").Cells(Tag, 5).NumberFormat = "[hh]:mm"
    End If
    End If
End If


If zeile_zwei <> "" Then
    If zeile_zwei = Worksheets("DEFINITIONEN").Range("C96").Value Then
        Worksheets("MIPLAN").Cells(Tag, 4).Value = dienstform & " + Team"
        End If
    If zeile_zwei = bereitschaftssymbol Then
        Worksheets("MIPLAN").Cells(Tag, 4).Value = dienstform & " + Bereits."
        End If
    If zeile_zwei <> Worksheets("DEFINITIONEN").Range("C96").Value And zeile_zwei <> bereitschaftssymbol Then
        Worksheets("MIPLAN").Cells(Tag, 4).Value = "(" & dienstform & ")" & zeile_zwei
        End If
End If

If zeile_drei <> 0 And Worksheets("MIPLAN").Cells(Tag, 5).Value = 0 Then
        Worksheets("MIPLAN").Cells(Tag, 5).Value = zeile_drei
        Worksheets("MIPLAN").Cells(Tag, 5).NumberFormat = "[hh]:mm"
        End If

Next Tag
sprungmarke:
' Ausdrucken
' F|fffd|r jeden gew|fffd|nschten Mitarbeiter wird ein Plan auf dem Standarddrucker erzeugt
If .Range("C104").Value = 1 Then
If Cells(laufvariable + 1, 51).Value = True Then
Worksheets("MIPLAN").PrintOut
End If
End If
Next laufvariable
End With
Call ansicht_ein
Exit Sub
Fehler:
MsgBox Err.Description
End Sub
Attribute VB_Name = "LZPlan"
Option Explicit

Sub lzplaneinsetzen()
Worksheets("PLAN").Select
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
Dim antwort
Dim ausgelesen
Dim monat
Dim jahr
Dim letzter_des_monats As Long
Dim a As Long
Dim b As Byte
Dim marker As Byte
Dim anzahl As Long
Dim startposition As Long
Dim ergebnis As String
Dim standarddienst As String
Dim maxwert As Byte
Dim letzte_zeile As Long

' Sicherheitsabfrage
antwort = MsgBox("Sollen Dienste aus dem Langzeitplan (LZ-Plan) eingetragen werden?" & vbCrLf & vbCrLf & "Bereits eingegebene Dienste werden wohlm|fffd|glich |fffd|berschrieben.", 36, "DPE3 | Best|fffd|tigung erforderlich!")
If antwort = vbNo Then Exit Sub

' Weg mit der Optik
Call ansicht_aus

' Events deaktvieren
Application.EnableEvents = False
eingabe_ueberwachung = 1

' Aktuellen Monat bestimmen
ausgelesen = Range("D5").Value

' Zuweisungen
monat = Mid$(ausgelesen, 4, 2)
jahr = Right$(ausgelesen, 4)
letzter_des_monats = TageDesMonats(ausgelesen)

' Gibt es |fffd|berhaupt
With Worksheets("LANGZEITPLAN")

' Wieviele Eintr|fffd|ge wurden angelegt?
letzte_zeile = CInt(.Cells(Rows.Count, 1).End(xlUp).Row) + 1
If letzte_zeile > 1000 Then letzte_zeile = 1000

For a = 2 To letzte_zeile
' Statuspr|fffd|fung  nur wenn 1 in Spalte F steht, dann ist es ein g|fffd|ltiger Eintrag
If .Cells(a, 6).Value = "1" And SucheMitarbeiter(.Cells(a, 1)) <> 0 Then
      
    ' Ist der Eintrag bereits vor dem ersten Planungsdatum?
    If CDate(.Cells(a, 2)) < ausgelesen And .Cells(a, 3) <> "" Then
        startposition = 4
    End If
       
    ' Ist der Eintrag innerhalb des Planungsmonats?
    If CDate(.Cells(a, 2)) >= ausgelesen And .Cells(a, 2) <= CDate(CStr(letzter_des_monats & "." & monat & "." & jahr)) Then
        startposition = (3 + CInt(Left$(.Cells(a, 2).Value, 2)))
    End If
    
    ' Ist der Eintrag vielleicht gar nicht g|fffd|ltig?
    If CDate(.Cells(a, 2)) > CDate(CStr(letzter_des_monats & "." & monat & "." & jahr)) Then
        startposition = 0
    End If
    
    ' Datenleiche entdeckt
    If CDate(.Cells(a, 2)) < ausgelesen And .Cells(a, 3) = "" Then
        .Cells(a, 6).Value = "2"
        startposition = 0
    End If
    
    ' Datenleiche entdeckt
    If CDate(.Cells(a, 2)) < ausgelesen And .Cells(a, 3) <> "" And .Cells(a, 3) < ausgelesen Then
        .Cells(a, 6).Value = "2"
        startposition = 0
    End If
    
    ' Wieviele Tage sollen den eingetragen werden
    If CDate(.Cells(a, 3)) > CDate(CStr(letzter_des_monats & "." & monat & "." & jahr)) Then anzahl = letzter_des_monats
    If CDate(.Cells(a, 3)) <= CDate(CStr(letzter_des_monats & "." & monat & "." & jahr)) And .Cells(a, 3) <> "" Then
        If CInt(Left$(CStr(.Cells(a, 2).Value), 2)) > CInt(Left$(CStr(.Cells(a, 3).Value), 3)) Then
        ' Anfangsdatum liegt wohl im Vormonat
        anzahl = CInt(Left$(CStr(.Cells(a, 3).Value), 2))
        Else
        ' Anfangsdatum liegt innerhalb des Monats
        anzahl = CInt(Left$(CStr(.Cells(a, 3).Value), 2)) - CInt(Left$(CStr(.Cells(a, 2).Value), 2)) + 1
        End If
        End If

    If .Cells(a, 3) = "" Then anzahl = 1

    ' Jetzt wissen wir von WO und WIEVIEL
    
    If startposition > 0 Then
    If .Cells(a, 4) <> "" Then
        ' Standarddienst
        If Left$(CStr(.Cells(a, 4)), 2) = CStr((Worksheets("DEFINITIONEN").Range("C178") & Worksheets("DEFINITIONEN").Range("C178"))) Then
        maxwert = CInt(Mid$(.Cells(a, 4).Value, 3, 1))
        If maxwert > 3 Then maxwert = 3
        If maxwert < 1 Then maxwert = 1
        standarddienst = Worksheets("DEFINITIONEN").Cells(178 + maxwert, 3)
        For b = 1 To Len(Worksheets("DEFINITIONEN").Cells(178 + CInt(Mid$(.Cells(a, 4).Value, 3, 1)), 3))
            Call multiplikator(1, SucheMitarbeiter(.Cells(a, 1)), startposition + b - 1, Mid$(standarddienst, b, 1), Worksheets("DEFINITIONEN").Range("C280").Value, Worksheets("DEFINITIONEN").Range("C281").Value)
        Next b

        ' Regul|fffd|rer Dienst
        Else
            Call multiplikator(anzahl, SucheMitarbeiter(.Cells(a, 1)), startposition, .Cells(a, 4).Value, Worksheets("DEFINITIONEN").Range("C280").Value, Worksheets("DEFINITIONEN").Range("C281").Value)
        End If
    End If
    
    If .Cells(a, 4) = "" And .Cells(a, 5) <> "" Then
        Worksheets("PLAN").Unprotect
        Worksheets("Plan").Cells(SucheMitarbeiter(.Cells(a, 1)), startposition).ClearComments
        Worksheets("Plan").Cells(SucheMitarbeiter(.Cells(a, 1)), startposition).AddComment
        Worksheets("Plan").Cells(SucheMitarbeiter(.Cells(a, 1)), startposition).Comment.Visible = False
        Worksheets("Plan").Cells(SucheMitarbeiter(.Cells(a, 1)), startposition).Comment.text CStr(.Cells(a, 5).Value)
        Worksheets("Plan").Cells(SucheMitarbeiter(.Cells(a, 1)), startposition).Comment.Shape.TextFrame.AutoSize = True
    End If
    End If
    
End If ' Ende Statuspr|fffd|fung
' Vielleicht wurde ja ein Ereignis hinterlegt
If .Cells(a, 6).Value = "3" Then
' Ist es denn |fffd|berhaupt im brauchbaren Zeitfenster
If .Cells(a, 2) >= ausgelesen And .Cells(a, 2) <= CDate(CStr(letzter_des_monats & "." & monat & "." & jahr)) Then
       startposition = (3 + CInt(Left$(.Cells(a, 2).Value, 2)))
        If Worksheets("Plan").Cells(7, startposition).Value = "" Then
         Worksheets("Plan").Cells(7, startposition).Value = .Cells(a, 4).Value
          Else
           MsgBox "Am " & CStr(.Cells(a, 2).Value) & " ist bereits ein Ereignis oder Feiertag hinterlegt. Es wird keine Ver|fffd|nderung vorgenommen", vbCritical, "NeNe"
            End If
             End If
              End If
' Datenleiche entdeckt
If (CStr(.Cells(a, 6)) Like "3") And CDate(.Cells(a, 2).Value) < CDate(ausgelesen) Then .Cells(a, 6).Value = "2"
sprungmarke:
Next a
End With
Call ansicht_ein
eingabe_ueberwachung = 0
Application.EnableEvents = True
Exit Sub
Fehler:
MsgBox "Beim Aufruf von 'lzplaneinsetzen())' ist der Fehler : " & Err.Description & " aufgetreten. Der Vorgang wird abgebrochen.", vbCritical, "Schade"
End Sub

Public Sub lzplan_aufraeumen()
On Error GoTo Fehler
Worksheets("PLAN").Select
Dim antwort
Dim laufvariable1 As Long
Dim laufvariable2 As Long
Dim letzte_zeile As Long
' Dimensionierung der Matrix
Dim ausgelesen1(1000) As String
Dim ausgelesen2(1000) As String
Dim ausgelesen3(1000) As String
Dim ausgelesen4(1000) As String
Dim ausgelesen5(1000) As String
Dim ausgelesen6(1000) As String
' Sicherheitsabfrage
antwort = MsgBox("Sollen alle nicht mehr ben|fffd|tigten Eintr|fffd|ge im Langzeitplan (LZP) entfernt werden?", vbYesNo, "Best|fffd|tigung erforderlich!")
If antwort = vbNo Then Exit Sub
Call ansicht_aus
With Worksheets("LANGZEITPLAN")
letzte_zeile = CLng(.Cells(Rows.Count, 1).End(xlUp).Row) + 1
If letzte_zeile > 1000 Then letzte_zeile = 1000
laufvariable2 = 1
' Einlesen
For laufvariable1 = 2 To letzte_zeile
If .Cells(laufvariable1, 6).Value <> "2" Then
laufvariable2 = laufvariable2 + 1
ausgelesen1(laufvariable2) = .Cells(laufvariable1, 1).Value
ausgelesen2(laufvariable2) = .Cells(laufvariable1, 2).Value
ausgelesen3(laufvariable2) = .Cells(laufvariable1, 3).Value
ausgelesen4(laufvariable2) = .Cells(laufvariable1, 4).Value
ausgelesen5(laufvariable2) = .Cells(laufvariable1, 5).Value
ausgelesen6(laufvariable2) = .Cells(laufvariable1, 6).Value
End If
Next laufvariable1
' Nun werden die bisherigen Eintr|fffd|ge entfernt
.Range("A2:F1000").ClearContents
For laufvariable1 = 2 To laufvariable2
.Cells(laufvariable1, 1).Value = ausgelesen1(laufvariable1)
.Cells(laufvariable1, 2).Value = ausgelesen2(laufvariable1)
.Cells(laufvariable1, 3).Value = ausgelesen3(laufvariable1)
.Cells(laufvariable1, 4).Value = ausgelesen4(laufvariable1)
.Cells(laufvariable1, 5).Value = ausgelesen5(laufvariable1)
.Cells(laufvariable1, 6).Value = ausgelesen6(laufvariable1)
Next laufvariable1
End With
Call ansicht_ein
Exit Sub
Fehler:
MsgBox "Beim Aufruf von 'lzplan_aufraeumen()' ist der Fehler : " & Err.Description & " aufgetreten. Der Vorgang wird abgebrochen.", vbCritical, "Schade"
End Sub
Attribute VB_Name = "LZPlanEintraege"
Attribute VB_Base = "0{F34899FF-D0EB-478F-B26F-1106A8877455}{91608B86-8683-4D40-8279-65F36E74349D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub ButErg1_Click()
Dienst.Value = CStr((Worksheets("DEFINITIONEN").Range("C251").Value))
ChBEreignis.Value = True
bisdatum.Value = ""
End Sub

Private Sub ButErg2_Click()
Dienst.Value = CStr((Worksheets("DEFINITIONEN").Range("C252").Value))
ChBEreignis.Value = True
bisdatum.Value = ""
End Sub

Private Sub ButErg3_Click()
Dienst.Value = CStr((Worksheets("DEFINITIONEN").Range("C253").Value))
ChBEreignis.Value = True
End Sub

Private Sub ChBEreignis_Click()
ChbStatus.Value = False
bisdatum.Value = ""
End Sub

Private Sub ChbStatus_Click()
ChBEreignis = False
End Sub

Private Sub CommandButton1_Click()
If DatumsPruefung(vondatum) = True And (Dienst.Value <> "" Or Bemerkung.Value <> "") Then
Dim letzte_zeile As Long
With Worksheets("LANGZEITPLAN")
letzte_zeile = CLng(.Cells(Rows.Count, 1).End(xlUp).Row) + 1
' Eintr|fffd|ge erzeugen
If ChBEreignis.Value = True Then bisdatum.Value = ""
.Cells(letzte_zeile, 1).Value = v_kartennummer
.Cells(letzte_zeile, 2).Value = vondatum.Value
.Cells(letzte_zeile, 3).Value = bisdatum.Value
.Cells(letzte_zeile, 4).Value = Dienst.Value
.Cells(letzte_zeile, 5).Value = Bemerkung.Value
If ChbStatus.Value = True Then
    .Cells(letzte_zeile, 6).Value = "0"
    Else
    .Cells(letzte_zeile, 6).Value = "1"
    End If
If ChBEreignis.Value = True Then .Cells(letzte_zeile, 6).Value = "3"
End With
LZPlanEintraege.Hide
Else
MsgBox "Bitte geben Sie die Datumsangaben im Format TT.MM.JJJJ (z.B. 01.02.2003) ein und mindestens eines der Felder 'Dienst' oder 'Bemerkung'.", vbCritical, "NeNe"
End If
End Sub
Private Sub CommandButton5_Click()
Dienst.Value = CStr((Worksheets("DEFINITIONEN").Range("C178") & Worksheets("DEFINITIONEN").Range("C178"))) & "3"
ChBEreignis.Value = False
End Sub
Private Sub CommandButton6_Click()
Dienst.Value = CStr((Worksheets("DEFINITIONEN").Range("C178") & Worksheets("DEFINITIONEN").Range("C178"))) & "2"
ChBEreignis.Value = False
End Sub
Private Sub CommandButton7_Click()
Dienst.Value = Worksheets("DEFINITIONEN").Range("C24")
ChBEreignis.Value = False
End Sub
Private Sub CommandButton8_Click()
Dienst.Value = Worksheets("DEFINITIONEN").Range("C189")
ChBEreignis.Value = False
End Sub
Private Sub CommandButton9_Click()
Dienst.Value = "K"
ChBEreignis.Value = False
End Sub
Private Sub Standarddienst1_Click()
Dienst.Value = CStr((Worksheets("DEFINITIONEN").Range("C178") & Worksheets("DEFINITIONEN").Range("C178"))) & "1"
ChBEreignis.Value = False
End Sub
Private Sub vondatum_Change()
If vondatum.Value = "h" Then
vondatum.Value = Left$(CStr(Now()), 10)
SendKeys "{TAB}"
End If
End Sub
Private Sub bisdatum_Change()
If Left$(CStr(bisdatum.Value), 1) = "+" And Right$(UCase(CStr(bisdatum.Value)), 1) = "W" Then
    bisdatum.Value = CDate(vondatum.Value) + (CInt(Mid$(bisdatum.Value, 2, Len(bisdatum.Value) - 2)) * 7)
    SendKeys "{TAB}"
End If
If Left$(CStr(bisdatum.Value), 1) = "+" And Right$(UCase(CStr(bisdatum.Value)), 1) = "T" Then
    bisdatum.Value = CDate(vondatum.Value) + (CInt(Mid$(bisdatum.Value, 2, Len(bisdatum.Value) - 2)))
    SendKeys "{TAB}"
End If
End Sub
Attribute VB_Name = "MiDPLDef"
Attribute VB_Base = "0{33C45D56-E6BA-4E40-A7A0-AC45DAAF4F17}{B27243DE-5B81-4DCB-94EC-93954007956E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub CommandButton2_Click()
Dim a As Byte
Dim i As Byte
Call ansicht_aus
' Sonderparameter eintragen
' MsgBox Worksheets("DEFINITIONEN").Range("C103").Value
With Worksheets("DEFINITIONEN")
.Range("C103").Value = MiDPLDef.CheckBox55 * -1
.Range("C104").Value = MiDPLDef.CheckBox56 * -1
.Range("C105").Value = MiDPLDef.CheckBox57 * -1
.Range("C106").Value = MiDPLDef.TextBox85
If MiDPLDef.OptionButton1 = True Then .Range("C159").Value = 0
If MiDPLDef.OptionButton2 = True Then .Range("C159").Value = 1
If MiDPLDef.OptionButton3 = True Then .Range("C159").Value = 2
If MiDPLDef.OptionButton4 = True Then .Range("C159").Value = 3
If MiDPLDef.OptionButton5 = True Then .Range("C159").Value = 4
End With
' Eintragung welcher Mitarbeiter ausgedruckt werden soll
For a = 10 To 169 Step 3
i = i + 1
Cells(a, 51).Value = MiDPLDef.Controls("CheckBox" & i)
Next a
Call ansicht_ein
' Ausblenden des Dialogfeldes
MiDPLDef.Hide
End Sub

Private Sub CommandButton3_Click()
Dim i As Byte
With MiDPLDef
For i = 1 To 54
.Controls("CheckBox" & i) = True
Next i
End With
End Sub

Private Sub CommandButton4_Click()
Dim i As Byte
With MiDPLDef
For i = 1 To 54
.Controls("CheckBox" & i) = False
Next i
End With
End Sub

Private Sub UserForm_Activate()
If Worksheets("DEFINITIONEN").Range("C6").Value = 1 Then Call dialog_mitarbeiter_dienstplaene_definieren_anpassen
Worksheets("PLAN").Select
Dim a As Byte
Dim b As Byte
Dim i As Byte
Dim anzeigen(54) As Byte
For a = 9 To 168 Step 3
b = b + 1
MITARBEITERNAME(b) = Cells(a, 1).Value
anzeigen(b) = Cells(a + 1, 51).Value
Next a
With MiDPLDef
For i = 1 To 30
.Controls("TextBox" & i) = MITARBEITERNAME(i)
Next i
For i = 61 To 84
.Controls("TextBox" & i) = MITARBEITERNAME(i - 30)
Next i
For i = 1 To 54
.Controls("CheckBox" & i) = anzeigen(i)
Next i
' Sonderparameter auslesen
' MsgBox Worksheets("DEFINITIONEN").Range("C103").Value
.CheckBox55 = (Worksheets("DEFINITIONEN").Range("C103").Value) * -1
.CheckBox56 = (Worksheets("DEFINITIONEN").Range("C104").Value) * -1
.CheckBox57 = (Worksheets("DEFINITIONEN").Range("C105").Value) * -1
.TextBox85 = Worksheets("DEFINITIONEN").Range("C106").Value
a = Worksheets("DEFINITIONEN").Range("C159").Value
If a = 0 Then .OptionButton1 = True
If a = 1 Then .OptionButton2 = True
If a = 2 Then .OptionButton3 = True
If a = 3 Then .OptionButton4 = True
If a = 4 Then .OptionButton5 = True
End With

End Sub

Private Sub UserForm_terminate()
MsgBox "|fffd|nderungen werden verworfen. Sollten Sie die Eingaben sichern wollen, klicken Sie bitte auf '|fffd|bernehmen'.", vbInformation, "Tja"
End Sub
Attribute VB_Name = "MiReihenfolge"
Attribute VB_Base = "0{2C86BCBA-C555-4A63-A353-378E9E1CA700}{010BF4AF-252B-49A6-8117-22B7B1080D1D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CommandButton1_Click()
On Error GoTo Fehler
' Schutz aus
ActiveSheet.Unprotect
Dim a As Long
Dim b(54) As Variant
' Dim i As Byte
Dim v As Byte ' Enth|fffd|lt die fr|fffd|here Position im Dienstplan
Dim ergebnis As Variant
Dim wert As Variant
' Dim laufvariable As Long
With MiReihenfolge
' Auslesen aus dem Fenster
For laufvariable = 1 To 54
b(laufvariable) = .Controls("Position" & CStr(laufvariable)).Value
Next
End With
' Pr|fffd|fung ob |fffd|berhaupt eine Ver|fffd|nderung vorgenommen wurde
For a = 1 To 54
If b(a) - a <> 0 Then ergebnis = ergebnis + 1
Next a

If ergebnis = 0 Then
Call hilfsassistent("Keine |fffd|nderung", "Es wurde keine Ver|fffd|nderung festgestellt. Die Daten werden unver|fffd|ndert belassen.")
MiReihenfolge.Hide
End If

' Pr|fffd|fung ob alle Nummern korrekt vergeben wurden
ergebnis = 0
For a = 1 To 54
ergebnis = ergebnis + b(a)
Next
If ergebnis <> 1485 Then
Call hilfsassistent("Ung|fffd|ltige Angaben", "Es konnte nicht sichergestellt werden, dass alle Mitarbeiter korrekt in eine neue Position gesetzt wurden. Bitte korrigieren Sie die Daten oder brechen Sie den Vorgang ab.")
Exit Sub
End If

' Bildaktualisierung aus -> steigert die Performance
Application.ScreenUpdating = False
ActiveSheet.Unprotect
eingabe_ueberwachung = 1
' Jetzt passierts - die Mitarbeiter werden neu eingetragen
' Die Schleife z|fffd|hlt alle 54 Mitarbeiter durch und ordnet sie entsprechend der
' Auswahl im Fensterdialog zu.

For a = 1 To 54
v = b(a)
Cells((a * 3) + 6, 1) = MITARBEITERNAME(v)
Cells((a * 3) + 7, 1) = typierung(v)
Cells((a * 3) + 8, 1) = dienstnummer(v)
Cells((a * 3) + 6, 50) = nachtwachen(v)
Cells((a * 3) + 6, 47) = ftazdoppel(v)
Cells((a * 3) + 6, 49) = wuensche(v)
Cells((a * 3) + 7, 3) = freieintrag(v)
Cells((a * 3) + 6, 2) = stundenkontouebertrag(v)
Cells((a * 3) + 6, 52) = vormonat(v)
Cells((a * 3) + 6, 51) = NOTIZ(v)
Cells((a * 3) + 6, 53) = zaehltmit(v)
Cells((a * 3) + 6, 54) = TAGESSTUNDEN(v)
Cells((a * 3) + 7, 54) = SASTUNDEN(v)
Cells((a * 3) + 8, 54) = SOSTUNDEN(v)
Cells((a * 3) + 7, 57) = UrlaubOverride(v)
Cells((a * 3) + 6, 56) = ftfrei(v)
Cells((a * 3) + 6, 57) = uges(v)
Cells((a * 3) + 6, 58) = ugen(v)
Cells((a * 3) + 7, 58) = hamburgermodell(v)
' Die folgenden Zeilen sorgen f|fffd|r die korrekte Berechnung der Plus/Minus-
' Stunden. Da Excel die Eingabe negativer Stundenwerte nicht vorsieht, wird
' noch einmal auf den bereits bei der Eingabe verwendeten Trick zur|fffd|ckgegriffen.
' Hier wird wohl eine Funktion notwendig
wert = stundenkontouebertrag(v)
If wert = "" Then wert = 0
If Left$(wert, 1) <> "-" Then
Cells((a * 3) + 6, 98).Value = wert
Else
Cells((a * 3) + 6, 99).Value = Right$(wert, Len(wert) - 1)
Cells((a * 3) + 6, 98).Value = Cells((a * 3) + 6, 99).Value * -1
Cells((a * 3) + 6, 99) = 0
End If

Next a
' Bildschirmdarstellung wieder eingeschalten
Call ansicht_ein
' Fensterdialog ausblenden
MiReihenfolge.Hide
Exit Sub
Fehler:
MsgBox "Es ist ein Fehler aufgetreten : " & Err.Description & " Der Programmablauf wird nun abgebrochen. Kehren Sie zu einer gespeicherten Version zur|fffd|ck, da eventuell die Mitarbeiterstammdaten 'durcheinander' geraten sind.", vbCritical, "Ouch!"
End Sub

Private Sub CommandButton52_Click()
Call mitarbeiterreihenfolge
End Sub

Private Sub T12_Click()
mitarbeiterreihenfolge1 = 1
mitarbeiterreihenfolge2 = 2
Call tausch
End Sub

Private Sub T23_Click()
mitarbeiterreihenfolge1 = 2
mitarbeiterreihenfolge2 = 3
Call tausch
End Sub
Private Sub T34_Click()
mitarbeiterreihenfolge1 = 3
mitarbeiterreihenfolge2 = 4
Call tausch
End Sub
Private Sub T45_Click()
mitarbeiterreihenfolge1 = 4
mitarbeiterreihenfolge2 = 5
Call tausch
End Sub
Private Sub T56_Click()
mitarbeiterreihenfolge1 = 5
mitarbeiterreihenfolge2 = 6
Call tausch
End Sub
Private Sub T67_Click()
mitarbeiterreihenfolge1 = 6
mitarbeiterreihenfolge2 = 7
Call tausch
End Sub
Private Sub T78_Click()
mitarbeiterreihenfolge1 = 7
mitarbeiterreihenfolge2 = 8
Call tausch
End Sub
Private Sub T89_Click()
mitarbeiterreihenfolge1 = 8
mitarbeiterreihenfolge2 = 9
Call tausch
End Sub
Private Sub T910_Click()
mitarbeiterreihenfolge1 = 9
mitarbeiterreihenfolge2 = 10
Call tausch
End Sub
Private Sub T1011_Click()
mitarbeiterreihenfolge1 = 10
mitarbeiterreihenfolge2 = 11
Call tausch
End Sub
Private Sub T1112_Click()
mitarbeiterreihenfolge1 = 11
mitarbeiterreihenfolge2 = 12
Call tausch
End Sub
Private Sub T1213_Click()
mitarbeiterreihenfolge1 = 12
mitarbeiterreihenfolge2 = 13
Call tausch
End Sub
Private Sub T1314_Click()
mitarbeiterreihenfolge1 = 13
mitarbeiterreihenfolge2 = 14
Call tausch
End Sub
Private Sub T1415_Click()
mitarbeiterreihenfolge1 = 14
mitarbeiterreihenfolge2 = 15
Call tausch
End Sub
Private Sub T1516_Click()
mitarbeiterreihenfolge1 = 15
mitarbeiterreihenfolge2 = 16
Call tausch
End Sub
Private Sub T1617_Click()
mitarbeiterreihenfolge1 = 16
mitarbeiterreihenfolge2 = 17
Call tausch
End Sub
Private Sub T1718_Click()
mitarbeiterreihenfolge1 = 17
mitarbeiterreihenfolge2 = 18
Call tausch
End Sub
Private Sub T1819_Click()
mitarbeiterreihenfolge1 = 18
mitarbeiterreihenfolge2 = 19
Call tausch
End Sub
Private Sub T1920_Click()
mitarbeiterreihenfolge1 = 19
mitarbeiterreihenfolge2 = 20
Call tausch
End Sub
Private Sub T2021_Click()
mitarbeiterreihenfolge1 = 20
mitarbeiterreihenfolge2 = 21
Call tausch
End Sub
Private Sub T2122_Click()
mitarbeiterreihenfolge1 = 21
mitarbeiterreihenfolge2 = 22
Call tausch
End Sub
Private Sub T2223_Click()
mitarbeiterreihenfolge1 = 22
mitarbeiterreihenfolge2 = 23
Call tausch
End Sub
Private Sub T2324_Click()
mitarbeiterreihenfolge1 = 23
mitarbeiterreihenfolge2 = 24
Call tausch
End Sub
Private Sub T2425_Click()
mitarbeiterreihenfolge1 = 24
mitarbeiterreihenfolge2 = 25
Call tausch
End Sub
Private Sub T2526_Click()
mitarbeiterreihenfolge1 = 25
mitarbeiterreihenfolge2 = 26
Call tausch
End Sub
Private Sub T2627_Click()
mitarbeiterreihenfolge1 = 26
mitarbeiterreihenfolge2 = 27
Call tausch
End Sub
Private Sub T2728_Click()
mitarbeiterreihenfolge1 = 27
mitarbeiterreihenfolge2 = 28
Call tausch
End Sub
Private Sub T2829_Click()
mitarbeiterreihenfolge1 = 28
mitarbeiterreihenfolge2 = 29
Call tausch
End Sub
Private Sub T2930_Click()
mitarbeiterreihenfolge1 = 29
mitarbeiterreihenfolge2 = 30
Call tausch
End Sub
Private Sub T3031_Click()
mitarbeiterreihenfolge1 = 30
mitarbeiterreihenfolge2 = 31
Call tausch
End Sub
Private Sub T3132_Click()
mitarbeiterreihenfolge1 = 31
mitarbeiterreihenfolge2 = 32
Call tausch
End Sub
Private Sub T3233_Click()
mitarbeiterreihenfolge1 = 32
mitarbeiterreihenfolge2 = 33
Call tausch
End Sub
Private Sub T3334_Click()
mitarbeiterreihenfolge1 = 33
mitarbeiterreihenfolge2 = 34
Call tausch
End Sub
Private Sub T3435_Click()
mitarbeiterreihenfolge1 = 34
mitarbeiterreihenfolge2 = 35
Call tausch
End Sub
Private Sub T3536_Click()
mitarbeiterreihenfolge1 = 35
mitarbeiterreihenfolge2 = 36
Call tausch
End Sub
Private Sub T3637_Click()
mitarbeiterreihenfolge1 = 36
mitarbeiterreihenfolge2 = 37
Call tausch
End Sub
Private Sub T3738_Click()
mitarbeiterreihenfolge1 = 37
mitarbeiterreihenfolge2 = 38
Call tausch
End Sub
Private Sub T3839_Click()
mitarbeiterreihenfolge1 = 38
mitarbeiterreihenfolge2 = 39
Call tausch
End Sub
Private Sub T3940_Click()
mitarbeiterreihenfolge1 = 39
mitarbeiterreihenfolge2 = 40
Call tausch
End Sub
Private Sub T4041_Click()
mitarbeiterreihenfolge1 = 40
mitarbeiterreihenfolge2 = 41
Call tausch
End Sub
Private Sub T4142_Click()
mitarbeiterreihenfolge1 = 41
mitarbeiterreihenfolge2 = 42
Call tausch
End Sub
Private Sub T4243_Click()
mitarbeiterreihenfolge1 = 42
mitarbeiterreihenfolge2 = 43
Call tausch
End Sub
Private Sub T4344_Click()
mitarbeiterreihenfolge1 = 43
mitarbeiterreihenfolge2 = 44
Call tausch
End Sub
Private Sub T4445_Click()
mitarbeiterreihenfolge1 = 44
mitarbeiterreihenfolge2 = 45
Call tausch
End Sub
Private Sub T4546_Click()
mitarbeiterreihenfolge1 = 45
mitarbeiterreihenfolge2 = 46
Call tausch
End Sub
Private Sub T4647_Click()
mitarbeiterreihenfolge1 = 46
mitarbeiterreihenfolge2 = 47
Call tausch
End Sub
Private Sub T4748_Click()
mitarbeiterreihenfolge1 = 47
mitarbeiterreihenfolge2 = 48
Call tausch
End Sub
Private Sub T4849_Click()
mitarbeiterreihenfolge1 = 48
mitarbeiterreihenfolge2 = 49
Call tausch
End Sub
Private Sub T4950_Click()
mitarbeiterreihenfolge1 = 49
mitarbeiterreihenfolge2 = 50
Call tausch
End Sub
Private Sub T5051_Click()
mitarbeiterreihenfolge1 = 50
mitarbeiterreihenfolge2 = 51
Call tausch
End Sub
Private Sub T5152_Click()
mitarbeiterreihenfolge1 = 51
mitarbeiterreihenfolge2 = 52
Call tausch
End Sub
Private Sub T5253_Click()
mitarbeiterreihenfolge1 = 52
mitarbeiterreihenfolge2 = 53
Call tausch
End Sub
Private Sub T5354_Click()
mitarbeiterreihenfolge1 = 53
mitarbeiterreihenfolge2 = 54
Call tausch
End Sub
Private Sub T541_Click()
mitarbeiterreihenfolge1 = 54
mitarbeiterreihenfolge2 = 1
Call tausch
End Sub
Private Sub T154_Click()
mitarbeiterreihenfolge1 = 1
mitarbeiterreihenfolge2 = 54
Call tausch
End Sub

Sub tausch()
    Dim temp1
    Dim temp2
    Dim temp3
    Dim temp4
    
    temp1 = MiReihenfolge.Controls("Position" & CStr(mitarbeiterreihenfolge1)).Value
    temp2 = MiReihenfolge.Controls("Position" & CStr(mitarbeiterreihenfolge2)).Value
    temp3 = MiReihenfolge.Controls("Mitarbeiter" & CStr(mitarbeiterreihenfolge1)).Value
    temp4 = MiReihenfolge.Controls("Mitarbeiter" & CStr(mitarbeiterreihenfolge2)).Value
    
    MiReihenfolge.Controls("Position" & CStr(mitarbeiterreihenfolge1)).Value = temp2
    MiReihenfolge.Controls("Position" & CStr(mitarbeiterreihenfolge2)).Value = temp1
    MiReihenfolge.Controls("Mitarbeiter" & CStr(mitarbeiterreihenfolge1)).Value = temp4
    MiReihenfolge.Controls("Mitarbeiter" & CStr(mitarbeiterreihenfolge2)).Value = temp3
End Sub


Attribute VB_Name = "Mitarbeiterdaten"
Attribute VB_Base = "0{D837CB75-045D-4CA3-9AD4-C7A16EBE5B59}{CECBB6C4-C5D2-4B01-B62C-AC739D682FB1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub CMD_LOESCHEN_Click()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
Dim antwort As Variant
antwort = MsgBox("Soll dieser Mitarbeiter wirklich gel|fffd|scht werden?", vbYesNo, "Hm?")
If antwort = vbYes Then
sig_mitarbeiter_loeschen = True
Mitarbeiterdaten.Hide
Else
sig_mitarbeiter_loeschen = False
End If
End Sub

Private Sub CMD_LZP_Click()

If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
' Sollen die Altwerte ausgeblendet werden?
If Worksheets("DEFINITIONEN").Range("C193").Value = 1 Then
LZPlanEintraege.Dienst.Value = ""
LZPlanEintraege.vondatum.Value = ""
LZPlanEintraege.bisdatum.Value = ""
LZPlanEintraege.Bemerkung.Value = ""
End If
Worksheets("PLAN").Select
Mitarbeiterdaten.Hide
If Worksheets("DEFINITIONEN").Range("C6") = 1 Then Call dialog_LZP_anpassen
LZPlanEintraege.Show

End Sub

Private Sub CMD_OK_Click()
Dim a As Long
ActiveSheet.Unprotect
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next

If Mitarbeiterdaten.OPTION_TAGESSTUNDEN = True And InStr(1, Mitarbeiterdaten.TAGESSTUNDEN, ":") = 0 Then
    MsgBox "Die Eingabe der Tagesstunden muss im Format hh:mm (z.B. 07:42) erfolgen.", vbCritical, "Eingabe pr|fffd|fen"
    Mitarbeiterdaten.TAGESSTUNDEN.SpecialEffect = fmSpecialEffectFlat
    Mitarbeiterdaten.TAGESSTUNDEN.BorderStyle = fmBorderStyleSingle
    Mitarbeiterdaten.TAGESSTUNDEN.BorderColor = vbRed
    Mitarbeiterdaten.TAGESSTUNDEN.Locked = False
    Exit Sub
End If

If Mitarbeiterdaten.OPTION_TAGESSTUNDEN = True And InStr(1, Mitarbeiterdaten.SASTUNDEN, ":") = 0 Then
    MsgBox "Die Eingabe der Samstagssollstunden muss im Format hh:mm (z.B. 07:42) erfolgen.", vbCritical, "Eingabe pr|fffd|fen"
    Mitarbeiterdaten.SASTUNDEN.SpecialEffect = fmSpecialEffectFlat
    Mitarbeiterdaten.SASTUNDEN.BorderStyle = fmBorderStyleSingle
    Mitarbeiterdaten.SASTUNDEN.BorderColor = vbRed
    Mitarbeiterdaten.SASTUNDEN.Locked = False
    Exit Sub
End If

If Mitarbeiterdaten.OPTION_TAGESSTUNDEN = True And InStr(1, Mitarbeiterdaten.SOSTUNDEN, ":") = 0 Then
    MsgBox "Die Eingabe der Sonntagssollstunden muss im Format hh:mm (z.B. 07:42) erfolgen.", vbCritical, "Eingabe pr|fffd|fen"
    Mitarbeiterdaten.SOSTUNDEN.SpecialEffect = fmSpecialEffectFlat
    Mitarbeiterdaten.SOSTUNDEN.BorderStyle = fmBorderStyleSingle
    Mitarbeiterdaten.SOSTUNDEN.BorderColor = vbRed
    Mitarbeiterdaten.SOSTUNDEN.Locked = False
    Exit Sub
End If


If Worksheets("DEFINITIONEN").Range("C365") = 1 And InStr(1, Mitarbeiterdaten.URLAUB_OVERRIDE, ":") = 0 And Len(Mitarbeiterdaten.URLAUB_OVERRIDE) > 0 Then
    MsgBox "Die Eingabe des Urlaubstagwert muss im Format hh:mm (z.B. 07:42) erfolgen.", vbCritical, "Eingabe pr|fffd|fen"
    Mitarbeiterdaten.URLAUB_OVERRIDE.SpecialEffect = fmSpecialEffectFlat
    Mitarbeiterdaten.URLAUB_OVERRIDE.BorderStyle = fmBorderStyleSingle
    Mitarbeiterdaten.URLAUB_OVERRIDE.BorderColor = vbRed
    Exit Sub
End If

' Das Fenster wird vorbereitet
With Mitarbeiterdaten
If .OPTION_TAGESSTUNDEN = True And .TAGESSTUNDEN = "" Then .TAGESSTUNDEN = "0:00"
If .MITARBEITERNAME = "" Then
v_mitarbeitername = "Leer"
Else
v_mitarbeitername = .MITARBEITERNAME
End If
If .NUMMER = "" Then
v_kartennummer = "Def"
Else
v_kartennummer = .NUMMER
End If
v_mita_an = .BERUFSKUERZEL
v_nachtwache = .NACHTWACHENZAEHLER
If .NICHT_TB = True Then v_zaehltmit = 1 Else v_zaehltmit = 0
If .NICHT_NB = True Then v_zaehltmitn = 1 Else v_zaehltmitn = 0
If .FT_ARBEITSZEIT = True Then v_ftfrei = 1 Else v_ftfrei = 0
If .CB_HAMBURG = True Then v_hamburger_modell = 1 Else v_hamburger_modell = 0
v_notiz = .NOTIZ
v_zusatzbezeichnung = .ZUSATZBEZEICHNUNG
v_tagesstunden = .TAGESSTUNDEN
v_SAstunden = .SASTUNDEN
v_SOstunden = .SOSTUNDEN
v_brutto = .OEKONOMIE
v_uges = .URLAUBSANSPRUCH
v_ugen = .URLAUB_VORHER
v_feiertagsfrei = .FEIERTAGSFREI
v_UrlaubOverride = .URLAUB_OVERRIDE
' Eigenschaft in Eigenschaftszahl verwandeln
For a = 1 To 5
    If .Eigenschaft = Worksheets("DEFINITIONEN").Cells(357 + a, 3) Then v_Eigenschaft = a
Next a
If v_Eigenschaft = "" Then v_Eigenschaft = "1"
If .FT_NICHT_MAL_2 = True Then v_azftdoppel = 1 Else v_azftdoppel = 0
If .FT_ARBEITSZEIT = True Then v_ftfrei = 1 Else v_ftfrei = 0
If .OPTION_1_1 = True Then v_mita_az = "1/1"
If .OPTION_3_4 = True Then v_mita_az = "3/4"
If .OPTION_1_2 = True Then v_mita_az = "1/2"
If .OPTION_1_4 = True Then v_mita_az = "1/4"
If .OPTION_TAGESSTUNDEN = True Then v_mita_az = "FLX"
End With
Mitarbeiterdaten.Hide
End Sub

Private Sub CMD_WUENSCHE_Click()
Mitarbeiterdaten.Hide
ActiveWorkbook.DialogSheets("WASDARFSSEIN").Show
End Sub

Sub dialog_zuruecksetzen()
    Mitarbeiterdaten.FT_ARBEITSZEIT.Value = 0
    Mitarbeiterdaten.TAGESSTUNDEN.Value = ""
    Mitarbeiterdaten.SASTUNDEN.Value = ""
    Mitarbeiterdaten.SOSTUNDEN.Value = ""
    TBProzent.BorderColor = vbBlack
End Sub

Private Sub CommandButton2_Click()
 ' #3800
   If TBProzent.Value <> "" And IsNumeric(TBProzent.Value) = True Then
     Worksheets("DEFINITIONEN").Range("G274") = TBProzent
     Worksheets("DEFINITIONEN").Range("G275") = TBProzent
     Worksheets("DEFINITIONEN").Range("G276") = TBProzent
     Worksheets("DEFINITIONEN").Range("H274").Formula = "=C274*G274/100"
     Worksheets("DEFINITIONEN").Range("H275").Formula = "=C275*G275/100"
     Worksheets("DEFINITIONEN").Range("H276").Formula = "=C276*G276/100"
     TAGESSTUNDEN.Value = Format(Worksheets("DEFINITIONEN").Range("H274").Value, "hh:mm")
     SASTUNDEN.Value = Format(Worksheets("DEFINITIONEN").Range("H275").Value, "hh:mm")
     SOSTUNDEN.Value = Format(Worksheets("DEFINITIONEN").Range("H276").Value, "hh:mm")
     TBProzent.Value = ""
     OPTION_TAGESSTUNDEN.Value = True
    Else
     TBProzent.BorderColor = vbRed
   End If
    
End Sub

Private Sub OPTION_1_1_Click()
    Call dialog_zuruecksetzen
End Sub

Private Sub OPTION_1_2_Click()
    Call dialog_zuruecksetzen
End Sub

Private Sub OPTION_1_4_Click()
    Call dialog_zuruecksetzen
End Sub

Private Sub OPTION_3_4_Click()
    Call dialog_zuruecksetzen
End Sub

Private Sub OPTION_TAGESSTUNDEN_Change()
    With Mitarbeiterdaten
    If OPTION_TAGESSTUNDEN = True Then
        .TAGESSTUNDEN.Locked = False
        .SASTUNDEN.Locked = False
        .SOSTUNDEN.Locked = False
        Else
        .TAGESSTUNDEN.Locked = True
        .SASTUNDEN.Locked = True
        .SOSTUNDEN.Locked = True
        End If
    End With
End Sub


Private Sub UserForm_Activate()
' Wird das Fenster zur Einstellung der Mitarbeitergrundparameter ge|fffd|ffnet, so werden
' die Daten aus dem Plan ausgelesen und entsprechend hier im Fenster angezeigt.
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next

With Mitarbeiterdaten

.TBProzent.BorderColor = vbBlack

.TAGESSTUNDEN.SpecialEffect = fmSpecialEffectSunken
.TAGESSTUNDEN.BorderStyle = fmBorderStyleNone
.TAGESSTUNDEN.BorderColor = vbBlack

.SASTUNDEN.SpecialEffect = fmSpecialEffectSunken
.SASTUNDEN.BorderStyle = fmBorderStyleNone
.SASTUNDEN.BorderColor = vbBlack

.SOSTUNDEN.SpecialEffect = fmSpecialEffectSunken
.SOSTUNDEN.BorderStyle = fmBorderStyleNone
.SOSTUNDEN.BorderColor = vbBlack

.URLAUB_OVERRIDE.SpecialEffect = fmSpecialEffectSunken
.URLAUB_OVERRIDE.BorderStyle = fmBorderStyleNone
.URLAUB_OVERRIDE.BorderColor = vbBlack

If OPTION_TAGESSTUNDEN = True Then
        .TAGESSTUNDEN.Locked = False
        .SASTUNDEN.Locked = False
        .SOSTUNDEN.Locked = False
        Else
        .TAGESSTUNDEN.Locked = True
        .SASTUNDEN.Locked = True
        .SOSTUNDEN.Locked = True
        End If
        
If Worksheets("DEFINITIONEN").Range("C365") = 1 Then
    .URLAUB_OVERRIDE.Enabled = True
    .URLAUB_OVERRIDE_TEXT.Enabled = True
    Else
    .URLAUB_OVERRIDE.Enabled = False
    .URLAUB_OVERRIDE_TEXT.Enabled = False
End If

.MITARBEITERNAME = v_mitarbeitername
.NUMMER = v_kartennummer
.BERUFSKUERZEL = v_mita_an
.NACHTWACHENZAEHLER = v_nachtwache
.NOTIZ = v_notiz
.ZUSATZBEZEICHNUNG = v_zusatzbezeichnung
.NICHT_TB = v_zaehltmit
.NICHT_NB = v_zaehltmitn
.TAGESSTUNDEN = v_tagesstunden
.SASTUNDEN = v_SAstunden
.SOSTUNDEN = v_SOstunden
.FT_ARBEITSZEIT = v_ftfrei
.URLAUBSANSPRUCH = v_uges
.URLAUB_VORHER = v_ugen
.URLAUB_AKTUELL = v_uakt
.OEKONOMIE = v_brutto
.FT_NICHT_MAL_2 = v_azftdoppel
.FEIERTAGSFREI = v_feiertagsfrei

.Eigenschaft = Worksheets("DEFINITIONEN").Cells(357 + v_Eigenschaft, 3)
If v_hamburger_modell = 1 Then .CB_HAMBURG = True Else .CB_HAMBURG = False
If v_UrlaubOverride <> "" Then .URLAUB_OVERRIDE = v_UrlaubOverride Else .URLAUB_OVERRIDE = ""
Select Case Worksheets("DEFINITIONEN").Range("C166").Value
Case 0
.OEKO_FRAME.Visible = False
.OEKONOMIE.Visible = False
.OEKOLABEL.Visible = False
Case 1
.OEKO_FRAME.Visible = True
.OEKONOMIE.Visible = True
.OEKOLABEL.Caption = "Mtl.Brutto-Lohn"
.OEKOLABEL.Visible = True
Case 2
.OEKO_FRAME.Visible = True
.OEKONOMIE.Visible = True
.OEKOLABEL.Caption = "Stundenlohn"
.OEKOLABEL.Visible = True
End Select
.URLAUB_AKTUELL.Enabled = False
If Worksheets("DEFINITIONEN").Range("C167").Value <> 1 Then
.URLAUB_AKTUELL.Visible = False
.URLAUB_VORHER.Visible = False
.URLAUBSANSPRUCH.Visible = False
.UR_LABEL_1.Visible = False
.UR_LABEL_2.Visible = False
.UR_LABEL_3.Visible = False
.UR_FRAME.Visible = False
Else
.URLAUB_AKTUELL.Visible = True
.URLAUB_VORHER.Visible = True
.URLAUBSANSPRUCH.Visible = True
.UR_LABEL_1.Visible = True
.UR_LABEL_2.Visible = True
.UR_LABEL_3.Visible = True
.UR_FRAME.Visible = True
End If
If v_mita_az = "1/1" Then .OPTION_1_1.Value = True
If v_mita_az = "3/4" Then .OPTION_3_4.Value = True
If v_mita_az = "1/2" Then .OPTION_1_2.Value = True
If v_mita_az = "1/4" Then .OPTION_1_4.Value = True
If v_mita_az = "FLX" Then .OPTION_TAGESSTUNDEN.Value = True
End With
End Sub

Attribute VB_Name = "Oberflaechen"
Sub dialog_mitarbeiterdaten_anpassen()
With Mitarbeiterdaten
.Frame2.Caption = Worksheets("DIALOGE").Range("C400").Value
.Label1.Caption = Worksheets("DIALOGE").Range("C401").Value
.Frame10.Caption = Worksheets("DIALOGE").Range("C402").Value
.FT_ARBEITSZEIT.Caption = Worksheets("DIALOGE").Range("C403").Value
.Frame4.Caption = Worksheets("DIALOGE").Range("C404").Value
.Frame5.Caption = Worksheets("DIALOGE").Range("C405").Value
.MultiPage1.Pages(0).Caption = Worksheets("DIALOGE").Range("C406").Value
.MultiPage1.Pages(1).Caption = Worksheets("DIALOGE").Range("C407").Value
.Frame1.Caption = Worksheets("DIALOGE").Range("C408").Value
.OEKO_FRAME.Caption = Worksheets("DIALOGE").Range("C409").Value
.OEKOLABEL.Caption = Worksheets("DIALOGE").Range("C410").Value
.Frame3.Caption = Worksheets("DIALOGE").Range("C411").Value
.OPTION_1_1.Caption = Worksheets("DIALOGE").Range("C412").Value
.OPTION_3_4.Caption = Worksheets("DIALOGE").Range("C413").Value
.OPTION_1_2.Caption = Worksheets("DIALOGE").Range("C414").Value
.OPTION_1_4.Caption = Worksheets("DIALOGE").Range("C415").Value
.NICHT_TB.Caption = Worksheets("DIALOGE").Range("C416").Value
.NICHT_NB.Caption = Worksheets("DIALOGE").Range("C417").Value
.Frame11.Caption = Worksheets("DIALOGE").Range("C418").Value
.OPTION_TAGESSTUNDEN.Caption = Worksheets("DIALOGE").Range("C419").Value
.Label2.Caption = Worksheets("DIALOGE").Range("C420").Value
.Label3.Caption = Worksheets("DIALOGE").Range("C421").Value
.UR_FRAME.Caption = Worksheets("DIALOGE").Range("C422").Value
.UR_LABEL_1.Caption = Worksheets("DIALOGE").Range("C423").Value
.UR_LABEL_2.Caption = Worksheets("DIALOGE").Range("C424").Value
.UR_LABEL_3.Caption = Worksheets("DIALOGE").Range("C425").Value
.URLAUB_OVERRIDE_TEXT.Caption = Worksheets("DIALOGE").Range("C426").Value
.CB_HAMBURG.Caption = Worksheets("DIALOGE").Range("C427").Value
.Frame7.Caption = Worksheets("DIALOGE").Range("C428").Value
.FT_NICHT_MAL_2.Caption = Worksheets("DIALOGE").Range("C429").Value
.CMD_OK.Caption = Worksheets("DIALOGE").Range("C430").Value
.CMD_LOESCHEN.Caption = Worksheets("DIALOGE").Range("C431").Value
.CMD_WUENSCHE.Caption = Worksheets("DIALOGE").Range("C432").Value
.CMD_LZP.Caption = Worksheets("DIALOGE").Range("C433").Value
.Caption = Worksheets("DIALOGE").Range("C434").Value
End With
End Sub

Sub dialog_qualitaetspruefung_anpassen()
With QPruefung
.Label2.Caption = Worksheets("DIALOGE").Range("C435").Value
.Label1.Caption = Worksheets("DIALOGE").Range("C436").Value
.Frame1.Caption = Worksheets("DIALOGE").Range("C437").Value
.Caption = Worksheets("DIALOGE").Range("C438").Value
End With
End Sub

Sub dialog_mitarbeiter_dienstplaene_definieren_anpassen()
With MiDPLDef
.CheckBox55.Caption = Worksheets("DIALOGE").Range("C439").Value
.CheckBox56.Caption = Worksheets("DIALOGE").Range("C440").Value
.CheckBox57.Caption = Worksheets("DIALOGE").Range("C441").Value
.Label1.Caption = Worksheets("DIALOGE").Range("C442").Value
.Frame1.Caption = Worksheets("DIALOGE").Range("C443").Value
.OptionButton1.Caption = Worksheets("DIALOGE").Range("C444").Value
.OptionButton2.Caption = Worksheets("DIALOGE").Range("C445").Value
.OptionButton3.Caption = Worksheets("DIALOGE").Range("C446").Value
.OptionButton4.Caption = Worksheets("DIALOGE").Range("C447").Value
.OptionButton5.Caption = Worksheets("DIALOGE").Range("C448").Value
.CommandButton2.Caption = Worksheets("DIALOGE").Range("C449").Value
.CommandButton3.Caption = Worksheets("DIALOGE").Range("C450").Value
.CommandButton4.Caption = Worksheets("DIALOGE").Range("C451").Value
.Caption = Worksheets("DIALOGE").Range("C452").Value
End With
End Sub

Sub dialog_druckerkonfiguration_anpassen()
With DruckerKonfig
.Frame2.Caption = Worksheets("DIALOGE").Range("C453").Value
.Frame1.Caption = Worksheets("DIALOGE").Range("C454").Value
.OptionButton1.Caption = Worksheets("DIALOGE").Range("C455").Value
.OptionButton2.Caption = Worksheets("DIALOGE").Range("C456").Value
.OptionButton3.Caption = Worksheets("DIALOGE").Range("C457").Value
.OptionButton4.Caption = Worksheets("DIALOGE").Range("C458").Value
.CheckBox1.Caption = Worksheets("DIALOGE").Range("C459").Value
.CheckBox3.Caption = Worksheets("DIALOGE").Range("C460").Value
.CheckBox2.Caption = Worksheets("DIALOGE").Range("C461").Value
.Label3.Caption = Worksheets("DIALOGE").Range("C462").Value
.CheckBox4.Caption = Worksheets("DIALOGE").Range("C463").Value
.CheckBox5.Caption = Worksheets("DIALOGE").Range("C464").Value
.CommandButton1.Caption = Worksheets("DIALOGE").Range("C465").Value
.Caption = Worksheets("DIALOGE").Range("C466").Value
End With
End Sub

Sub dialog_LZP_anpassen()
With LZPlanEintraege
.Label1.Caption = Worksheets("DIALOGE").Range("C467").Value
.Label2.Caption = Worksheets("DIALOGE").Range("C468").Value
.Label3.Caption = Worksheets("DIALOGE").Range("C469").Value
.Label4.Caption = Worksheets("DIALOGE").Range("C470").Value
.ChBEreignis.Caption = Worksheets("DIALOGE").Range("C471").Value
.ChbStatus.Caption = Worksheets("DIALOGE").Range("C472").Value
.CommandButton1.Caption = Worksheets("DIALOGE").Range("C473").Value
.Caption = Worksheets("DIALOGE").Range("C474").Value
End With
End Sub

Sub dialog_Mitarbeiterreihenfolge_anpassen()
With MiReihenfolge
.Beschreibung.Caption = Worksheets("DIALOGE").Range("C475").Value
.CommandButton1.Caption = Worksheets("DIALOGE").Range("C476").Value
.Caption = Worksheets("DIALOGE").Range("C477").Value
End With
End Sub

Sub conNew(control As IRibbonControl)
    Rem http://www.dummies.com/software/microsoft-office/excel/how-to-customize-the-excel-2016-ribbon-with-xml/
    Rem http://soltechs.net/CustomUI/imageMso01.asp?gal=4&count=no
    Rem http://soltechs.net/CustomUI/AllGal.asp
    Call plan_killer
End Sub

Sub conMiPlan(control As IRibbonControl)
    Call miplan
End Sub

Sub conMiPlanPDF(control As IRibbonControl)
    Call miplan_pdf
End Sub

Sub conJournalPlan(control As IRibbonControl)
    Call journalplan
End Sub

Sub conCAC(control As IRibbonControl)
    Call cac
End Sub

Sub conLZP(control As IRibbonControl)
    Call lzplaneinsetzen
End Sub

Sub conErsteZeileErsetzen(control As IRibbonControl)
    Call erstezeile_ersetze
End Sub

Sub conAllLZP(control As IRibbonControl)
    Call all_azp
End Sub

Sub conMitarbeiterEinfuegen(control As IRibbonControl)
    Call mitarbeiter_einfuegen
End Sub

Sub conMiabAzp(control As IRibbonControl)
    Call miab_azp
End Sub

Sub conEinlendung(control As IRibbonControl)
    Call Einblendung
End Sub

Sub conAusblendung(control As IRibbonControl)
    Call bildoptimierung
End Sub

Sub consasofrPlanungshilfe(control As IRibbonControl)
    Call sasofr_planungshilfe
End Sub

Sub consasofrPlanWeg(control As IRibbonControl)
    Call sasofr_plan_weg
End Sub

Sub condritteZeile(control As IRibbonControl)
    Call Ausblendung
End Sub

Sub conDritteZeileEin(control As IRibbonControl)
    Call Einblendung
    Call bildoptimierung
End Sub

Sub conWachenmarkerAufNull(control As IRibbonControl)
    Call wache_auf_null
End Sub

Sub conMonatsuebertragEntfernen(control As IRibbonControl)
    Call monatsuebertrag_entfernen
End Sub

Sub conWuenscheLoeschen(control As IRibbonControl)
    Call wunsch_raus
End Sub

Sub conMitarbeiterreihenfolgeAendern(control As IRibbonControl)
    Call mitarbeiterreihenfolge
End Sub

Sub conMitarbeiterplanKonfigurieren(control As IRibbonControl)
    Call mitarbeiterplan_konfig
End Sub

Sub conAusdruckKonfigurieren(control As IRibbonControl)
    Call druckeinstellungen_konfig
End Sub

Sub conLZPaufraeumen(control As IRibbonControl)
    Call lzplan_aufraeumen
End Sub

Sub conStundenuebertragAufNull(control As IRibbonControl)
    Call stundenuerbtrag_entfernen
End Sub

Sub conDPHEHelferweg(control As IRibbonControl)
    Call dpe3helper_weg
End Sub

Sub conJahresdaten(control As IRibbonControl)
    Call jahresdaten_vorbereiten
End Sub
Sub conVersionswechsel(control As IRibbonControl)
    Call versionswechsel
End Sub

Sub conParaUebernahme(control As IRibbonControl)
    Call para_uebernahme
End Sub

Sub conPlanUebernahme(control As IRibbonControl)
    Call Planinhalt_kopieren
End Sub

Sub conStundenkontoUebernahme(control As IRibbonControl)
    Call uebstundenkonto
End Sub

Sub conEMail(control As IRibbonControl)
    Call mailversand
End Sub

Sub conHTML(control As IRibbonControl)
    Call publizieren
End Sub

Sub conUpdate(control As IRibbonControl)
    Call update_pruefung
End Sub

Sub conInfo(control As IRibbonControl)
    Call menu_versionsinfo
End Sub

' autoplan_initialisierung

Attribute VB_Name = "Online"
Option Explicit

Sub publizieren()
Worksheets("PLAN").Select
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
If CInt(Application.Version) < 89 And UCase(Left(Application.OperatingSystem, 3)) = "WIN" Then
    Call hilfsassistent("Schade", "Es macht den Eindruck, als ob Ihre Excel-Version bereits |fffd|lter ist. Der gew|fffd|nschte Befehl ist hier nicht m|fffd|glich.")
    Exit Sub
End If

If UCase(Left(Application.OperatingSystem, 3)) <> "WIN" Then
    Call hilfsassistent("Schade", "Diese Funktion ist nur auf Windows-basierten Computern m|fffd|glich.")
    Exit Sub
End If

Dim dateiname As String
Dim pfadname As String
Dim datei As Variant
Dim antwort As String
Dim fso As Variant
Dim fullname As String
Dim vorlage As String
Dim kopf As String
Dim a As Long

With Worksheets("DEFINITIONEN")
' Zun|fffd|chst muss gespeichert werden
antwort = MsgBox("Bevor ein Plan publiziert werden kann, muss dieser gespeichert werden. Soll " _
& "die Speicherung nun durchgef|fffd|hrt werden?", vbYesNo, "Frage?")
If antwort = vbNo Then Exit Sub
ActiveWorkbook.Save
' Pr|fffd|fen ob Pfad existiert
If Dir(.Range("C171").Value, vbDirectory) = vbNullString Then
antwort = MsgBox("Das in den DEFINITIONEN bezeichnete Verzeichnis existiert nicht, soll es " _
    & "erstellt werden? " & vbCrLf & vbCrLf & "Wird dieser Dialog mit 'NEIN' beantwortet wird Vorgang der Publikation " _
    & "abgebrochen.", 36, "DPE3 | Antwort erforderlich")
If antwort = vbNo Then Exit Sub
MkDir (.Range("C171").Value)
End If
' Schutz aus
ActiveSheet.Unprotect
' Infodialog wurde aktivieret
If .Range("C173").Value = 1 Then
antwort = InputBox("Welche Information soll an den Titel angeh|fffd|ngt werden?" & vbLf _
    & "1 = (Entwurf)" & vbLf _
    & "2 = (lfd. Version)" & vbLf _
    & "3 = (Abgerechnet)" & vbLf _
    & "4 = (mit Vorbehalt)" & vbLf _
    & "oder im Freitext antworten", "Titelinformation")
If antwort = "1" Then antwort = "(Entwurf)"
If antwort = "2" Then antwort = "(lfd. Version)"
If antwort = "3" Then antwort = "(Abgerechnet)"
If antwort = "4" Then antwort = "(mit Vorbehalt)"
End If
Range("G3").Value = CStr(.Range("C3").Value) & " " & CStr(Right$(Range("D5").Value, 7)) & " " _
    & antwort
' Dateinamen aufbauen aus  Monat / Jahr / htm
dateiname = CStr(Mid$(Range("D5").Value, 4, 2)) & CStr(Right$(Range("D5").Value, 4)) & ".htm"
' Bereich selektieren
Range("A3:AK181").Select
Range("AK181").Activate
Selection.Copy
Application.CutCopyMode = False
' Als HTML Seite schreiben ; die generierte Datei ist alles andere als sch|fffd|n und klein, jedoch
' m|fffd|chte ich derzeit die Datei nicht komplett selbst erzeugen. Bei der Programmierung hatte ich
' mit diesem Befehl sehr viele Schwierigkeiten zwischen den Excel-Fassungen
Range("A3:AK169").Select
With ActiveWorkbook.PublishObjects.Add(4, _
        .Range("C171").Value & "\" & dateiname, _
        "PLAN", _
        "$A$3:$AK$169", _
        0)
 .Publish (True)
End With
Range("D9").Select
Close
Set fso = CreateObject("Scripting.FileSystemObject")
Set datei = fso.CreateTextFile(.Range("C171").Value & "\abhol.txt", True)
datei.writeline .Range("C2").Value
datei.writeline .Range("C3").Value
datei.writeline "+CARRIER+"
datei.writeline CStr(Mid$(Range("D5").Value, 4, 2))
datei.writeline CStr(Right$(Range("D5").Value, 4))
datei.writeline .Range("C171").Value & "\" & dateiname
datei.writeline Date$
datei.writeline Time$
datei.writeline Application.OperatingSystem
datei.writeline Application.OrganizationName
datei.writeline Application.UserName
datei.writeline .Range("C172").Value
datei.writeline .Range("C173").Value
datei.writeline .Range("C174").Value
datei.Close
' Wurde eine Men|fffd|struktur angefordert?
If .Range("C172").Value <> "0" Then
' Vorlagendatei erzeugen
Set datei = fso.CreateTextFile(.Range("C171").Value & "\vorlage.htm", True)
datei.writeline "<HTML>Dieser Plan wurde noch nicht generiert.</HTML>"
datei.Close
' Vorlagendatei ist generiert
vorlage = .Range("C171").Value & "\vorlage.htm"
' Verweis auf das Scripting File-System
Set fso = CreateObject("Scripting.FileSystemObject")
' Schleife aufbauen
For a = 1 To 12
If a < 10 Then kopf = "0" & CStr(a)
If a >= 10 Then kopf = CStr(a)
fullname = .Range("C171") & "\" & kopf & Worksheets("DEFINITIONEN").Range("C172").Value & ".htm"
' Pr|fffd|fen ob Datei bereits vorhanden ist ; falls JA wird der Kopierbefehl |fffd|bersprungen
If Dir(fullname) = vbNullString Then
fso.CopyFile vorlage, fullname
End If
Next
' Men|fffd|datei generieren
Set datei = fso.CreateTextFile(.Range("C171").Value & "\index.htm", True)
datei.writeline "<p><u><b><font face='Arial'>Dienstpl|fffd|ne von " & CStr(.Range("C3").Value) & "</font></b></u></p>"
datei.writeline "<div align='center'><table border='0' cellpadding='2' style='border-collapse: collapse' align='left' bgcolor='#C0C0C0'><tr><td><p align='center'><font face='Arial'>"
datei.writeline "<a href='01" & .Range("C172").Value & ".htm '>Januar</a><br><a href='02" & .Range("C172").Value & ".htm '>Februar</a><br>"
datei.writeline "<a href='03" & .Range("C172").Value & ".htm '>M|fffd|rz</a><br><a href='04" & .Range("C172").Value & ".htm '>April</a><br>"
datei.writeline "<a href='05" & .Range("C172").Value & ".htm '>Mai</a><br><a href='06" & .Range("C172").Value & ".htm '>Juni</a><br>"
datei.writeline "<a href='07" & .Range("C172").Value & ".htm '>Juli</a><br><a href='08" & .Range("C172").Value & ".htm '>August</a><br>"
datei.writeline "<a href='09" & .Range("C172").Value & ".htm '>September</a><br><a href='10" & .Range("C172").Value & ".htm '>Oktober</a><br>"
datei.writeline "<a href='11" & .Range("C172").Value & ".htm '>November</a><br><a href='12" & .Range("C172").Value & ".htm '>Dezember</a><br>"
datei.writeline "</font></td></tr></table></div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><hr>"
datei.writeline "<p align='right'><font face='Arial' size='1'><a href='http://www.dienstplan-in-excel.de/'>Erzeugt mit DPE3 - dem kostenlosen Dienstplaner</a></font></p>"
datei.Close
' Men|fffd| erzeugt ; soll Strukturaufbau abgeschaltet werden?
antwort = MsgBox("Men|fffd|struktur f|fffd|r das Jahr " & .Range("C172").Value & " wurde erzeugt. Soll der " _
    & "Parameter zur|fffd|ckgesetzt werden, um ein wiederholtes Erstellen zu verhindern ('JA' ist die " _
    & "empfohlene Antwort)", vbYesNo, "Hm?")
If antwort = vbYes Then
.Range("C172").Value = "0"
End If
End If
Set datei = Nothing
Set fso = Nothing
Range("G3").Value = ""
Call schutz_ein
End With
Exit Sub
Fehler:
MsgBox "Die Publikation ist fehlgeschlagen : " & Err.Number & vbLf & "Der Vorgang wird abgebrochen.", vbCritical, "DPE3 | Fehler"
End Sub

Sub mailversand()
On Error GoTo Fehler
Worksheets("PLAN").Select
Dim zieladresse As String
zieladresse = Worksheets("DEFINITIONEN").Range("C175").Value
Application.Dialogs(xlDialogSendMail).Show zieladresse, "Dienstplan"
Exit Sub
Fehler:
MsgBox "Es ist ein Fehler aufgetreten. Entweder unterst|fffd|tzt Excel den Befehl nicht (Office 2000) oder es ist kein E-Mail Client eingerichtet.", vbCritical, "DPE3 | Fehler"
End Sub

Attribute VB_Name = "QPruefung"
Attribute VB_Base = "0{290670DA-A57A-41B7-853C-0D52802308A1}{CFF83A9C-0D7A-4F1A-8D16-97088DC9E2C9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False





Attribute VB_Name = "Qualitaetspruefung"
Option Explicit

Sub cac()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
If Worksheets("DEFINITIONEN").Range("C6") = 1 Then Call dialog_qualitaetspruefung_anpassen
Worksheets("PLAN").Select
Dim mitarbeiter(54) As String
Dim soll(54) As Double
Dim ist(54) As Double
Dim wunschwert(54) As Long
Dim zaehler As Byte
Dim l As Byte ' Laufvariable
Dim antwort As Byte
Dim regel(5) As Long
Dim akt_dienst As String
Dim aussagetext(54) As String
Dim brutto_zwei(54) As Variant
Dim schnittlaenge As Byte
Dim u As String ' zu |fffd|bergebener Tag
Dim Dienst(48) As String ' alle Dienstbezeichnungen
Dim fehldienst As String
Dim ergebnistext As String
Dim alle_u As Long ' Urlaubstage auf dem Plan
Dim pw_wunsch As Byte
Dim pw_gegen_aus As Byte
Dim pw_bei_ungern As Byte
Dim pw_bei_kein As Byte
Dim notw_a As Long
Dim notw_b As Long
Dim notw_c As Long
Dim notw_d As Long
Dim notw_e As Long
Dim notw_w As Long
Dim Tag As Long
Dim akt_tag As Variant
Dim wunschdienst As Variant
Dim regel_zaehler As Byte
Dim d As Long
Dim a As Long
Dim gesamtstunden As Variant
Dim sollstunden As Variant
Dim durch_brutto_gesamt As Variant
Dim durch_zaehler As Long
Dim real_brutto_gesamt As Variant
Dim OEKONOMIE As Byte
Dim stundenkonto_alle As Variant
Dim zaehl_offset As Long

' Fenster zur|fffd|cksetzen
With QPruefung
.Urlaub.Value = "0"
.Punktwert.Value = "0"
.Image1.Visible = False
.Image2.Visible = False
.Image3.Visible = False
.Image4.Visible = False
End With

' Dienstbezeichnungsl|fffd|nge ermitteln
schnittlaenge = Worksheets("DEFINITIONEN").Cells(91, 3).Value

' Zur|fffd|cksetzen
ueb = ""
ergebnis = 0

' Aufbau der Matrix f|fffd|r Dienstnamen
For l = 1 To 48
If Worksheets("DIENSTE").Cells(2 + l, 6).Value >= 1 Then
        Dienst(l) = Worksheets("DIENSTE").Cells(2 + l, 5).Value
    Else
        Dienst(l) = "_"
    End If
Next l

With Worksheets("DEFINITIONEN")
' Einlesen von Stammwerten
pw_wunsch = .Range("C139").Value
pw_gegen_aus = .Range("C140").Value
pw_bei_ungern = .Range("C141").Value
pw_bei_kein = .Range("C142").Value
OEKONOMIE = .Range("C166").Value

' Pr|fffd|fung ob Dienste korrekt besetzt sind
For l = 66 To (96 - Range("AS3").Value)
notw_a = notw_a + Cells(196, l).Value - Cells(175, l - 62).Value
notw_b = notw_b + Cells(199, l).Value - Cells(178, l - 62).Value
notw_c = notw_c + Cells(197, l).Value - Cells(176, l - 62).Value
notw_d = notw_d + Cells(201, l).Value - Cells(180, l - 62).Value
notw_e = notw_e + Cells(200, l).Value - Cells(179, l - 62).Value
notw_w = notw_w + Cells(198, l).Value - Cells(177, l - 62).Value
Next l

' Hauptschleife initiieren
For l = 9 To 168 Step 3

' Werte darf nicht NULL sin
If Cells(l, 3).Value = "" Then Cells(l, 3).Value = 0
If Cells(l, 55).Value = "" Then Cells(l, 55).Value = 0

' Die Variable zaehler h|fffd|lt die zweite l
zaehler = zaehler + 1

' Einlesen von Mitarbeiternamen und SOLL/IST Stunden in ein Array
mitarbeiter(zaehler) = Cells(l, 1).Value
soll(zaehler) = CDbl(Cells(l, 3).Value)
ist(zaehler) = CDbl(Cells(l, 36).Value)

' Durchschnittskosten je Stunde ausrechnen ; nur wenn aktiviert
If Cells(l, 55).Value > 0 Then
brutto_zwei(zaehler) = Cells(l, 55).Value
If Cells(l, 3).Value > 0 Then lohn_durch(zaehler) = Application.WorksheetFunction.Round(Cells(l, 55).Value / (Cells(l, 3).Value * 24), 2)
durch_brutto_gesamt = durch_brutto_gesamt + lohn_durch(zaehler)
stundenkonto_alle = stundenkonto_alle + Cells(l, 37).Value
durch_zaehler = durch_zaehler + 1
End If

' Pr|fffd|fung ob |fffd|berhaupt ein zul|fffd|ssiger Mitarbeiter vorhanden ist
If mitarbeiter(zaehler) = "Leer" Or mitarbeiter(zaehler) = "" Then GoTo sprungmarke1

' Regelwerk f|fffd|r den betreffenden Mitarbeiter aufbauen
regel(1) = CInt(Left$(Cells(l, 49).Value, 3))
regel(5) = CInt(Right$(Cells(l, 49).Value, 3))
regel(2) = CInt(Mid$(Cells(l, 49).Value, 5, 3))
regel(3) = CInt(Mid$(Cells(l, 49).Value, 9, 3))
regel(4) = CInt(Mid$(Cells(l, 49).Value, 13, 3))

' Analyse der Wunschparameter
For Tag = 4 To (35 - Range("AS3").Value)

' Den Wochentagwert des aktuellen Datums auslesen
akt_tag = Weekday(Cells(5, Tag).Value)

' Ist der Tag ein Feiertag, so gilt diese Einstellung
If Cells(7, Tag).Value = "ft" Then akt_tag = 8
akt_dienst = Left$(Cells(l, Tag).Value, schnittlaenge)

' Urlaubstage auf dem Plan z|fffd|hlen
If akt_dienst = .Range("C24").Value Then
alle_u = alle_u + 1
GoTo sprungmarke2
End If

' Alle f|fffd|nf m|fffd|glichen Regeln m|fffd|ssen |fffd|berpr|fffd|ft werden
For regel_zaehler = 1 To 5

' Findet sich gar kein Regelwert, so springt das Programm gleich weiter
If regel(regel_zaehler) < 100 Then GoTo sprungmarke1

' Wunsch SO
If regel(regel_zaehler) >= 100 And regel(regel_zaehler) < 200 And akt_tag = 1 Then
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "0" And akt_dienst <> "" Then
    GoSub reg_null
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "1" And akt_dienst <> "" Then
    GoSub reg_eins
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "2" And akt_dienst <> "" Then
    wunschwert(zaehler) = wunschwert(zaehler) + 1
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "3" And akt_dienst <> "" Then
    wunschwert(zaehler) = wunschwert(zaehler) + 2
    End If
' gern
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "5" And akt_dienst <> "" Then
    GoSub reg_fuenf
    End If
' ungern
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "4" And akt_dienst <> "" Then
    GoSub reg_vier
    End If
GoTo sprungmarke1
End If
' Wunsch MO
If regel(regel_zaehler) >= 200 And regel(regel_zaehler) < 300 And akt_tag = 2 Then
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "0" And akt_dienst <> "" Then
    GoSub reg_null
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "1" And akt_dienst <> "" Then
    GoSub reg_eins
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "2" And akt_dienst <> "" Then
    wunschwert(zaehler) = wunschwert(zaehler) + 1
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "3" And akt_dienst <> "" Then
    wunschwert(zaehler) = wunschwert(zaehler) + 2
    End If
' gern
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "5" And akt_dienst <> "" Then
    GoSub reg_fuenf
    End If
' ungern
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "4" And akt_dienst <> "" Then
    GoSub reg_vier
    End If
GoTo sprungmarke1
End If
' Wunsch DI
If regel(regel_zaehler) >= 300 And regel(regel_zaehler) < 400 And akt_tag = 3 Then
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "0" And akt_dienst <> "" Then
    GoSub reg_null
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "1" And akt_dienst <> "" Then
    GoSub reg_eins
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "2" And akt_dienst <> "" Then
    wunschwert(zaehler) = wunschwert(zaehler) + 1
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "3" And akt_dienst <> "" Then
    wunschwert(zaehler) = wunschwert(zaehler) + 2
    End If
' gern
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "5" And akt_dienst <> "" Then
    GoSub reg_fuenf
    End If
' ungern
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "4" And akt_dienst <> "" Then
    GoSub reg_vier
    End If
GoTo sprungmarke1
End If
' Wunsch MI
If regel(regel_zaehler) >= 400 And regel(regel_zaehler) < 500 And akt_tag = 4 Then
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "0" And akt_dienst <> "" Then
    GoSub reg_null
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "1" And akt_dienst <> "" Then
    GoSub reg_eins
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "2" And akt_dienst <> "" Then
    wunschwert(zaehler) = wunschwert(zaehler) + 1
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "3" And akt_dienst <> "" Then
    wunschwert(zaehler) = wunschwert(zaehler) + 2
    End If
' Test gern
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "5" And akt_dienst <> "" Then
    GoSub reg_fuenf
    End If
' Test ungern
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "4" And akt_dienst <> "" Then
    GoSub reg_vier
    End If
GoTo sprungmarke1
End If
' Wunsch DO
If regel(regel_zaehler) >= 500 And regel(regel_zaehler) < 600 And akt_tag = 5 Then
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "0" And akt_dienst <> "" Then
    GoSub reg_null
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "1" And akt_dienst <> "" Then
    GoSub reg_eins
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "2" And akt_dienst <> "" Then
    wunschwert(zaehler) = wunschwert(zaehler) + 1
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "3" And akt_dienst <> "" Then
    wunschwert(zaehler) = wunschwert(zaehler) + 2
    End If
' gern
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "5" And akt_dienst <> "" Then
    GoSub reg_fuenf
    End If
' ungern
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "4" And akt_dienst <> "" Then
    GoSub reg_vier
    End If
GoTo sprungmarke1
End If
' Wunsch FR
If regel(regel_zaehler) >= 600 And regel(regel_zaehler) < 700 And akt_tag = 6 Then
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "0" And akt_dienst <> "" Then
    GoSub reg_null
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "1" And akt_dienst <> "" Then
    GoSub reg_eins
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "2" And akt_dienst <> "" Then
    wunschwert(zaehler) = wunschwert(zaehler) + 1
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "3" And akt_dienst <> "" Then
    wunschwert(zaehler) = wunschwert(zaehler) + 2
    End If
' gern
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "5" And akt_dienst <> "" Then
    GoSub reg_fuenf
    End If
' ungern
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "4" And akt_dienst <> "" Then
    GoSub reg_vier
    End If
GoTo sprungmarke1
End If
' SA
If regel(regel_zaehler) >= 700 And regel(regel_zaehler) < 800 And akt_tag = 7 Then
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "0" And akt_dienst <> "" Then
    GoSub reg_null
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "1" And akt_dienst <> "" Then
    GoSub reg_eins
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "2" And akt_dienst <> "" Then
    wunschwert(zaehler) = wunschwert(zaehler) + 1
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "3" And akt_dienst <> "" Then
    wunschwert(zaehler) = wunschwert(zaehler) + 2
    End If
' gern
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "5" And akt_dienst <> "" Then
    GoSub reg_fuenf
    End If
' ungern
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "4" And akt_dienst <> "" Then
    GoSub reg_vier
    End If
GoTo sprungmarke1
End If
' FT
If regel(regel_zaehler) > 799 And regel(regel_zaehler) < 900 And akt_tag = 8 Then
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "0" And akt_dienst <> "" Then
    GoSub reg_null
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "1" And akt_dienst <> "" Then
    GoSub reg_eins
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "2" And akt_dienst <> "" Then
    wunschwert(zaehler) = wunschwert(zaehler) + 1
    End If
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "3" And akt_dienst <> "" Then
    wunschwert(zaehler) = wunschwert(zaehler) + 2
    End If
' gern
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "5" And akt_dienst <> "" Then
    GoSub reg_fuenf
    End If
' ungern
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "4" And akt_dienst <> "" Then
    GoSub reg_vier
    End If
End If
' Wunsch f|fffd|r JEDEN TAG entdeckt. W|fffd|nsche wie 'Jeden Tag keinen Dienst' werden
' vom Programm genu|fffd|voll ignoriert.
If regel(regel_zaehler) >= 940 Then
' gern
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "5" And akt_dienst <> "" Then
    GoSub reg_fuenf
    End If
' ungern
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "4" And akt_dienst <> "" Then
    GoSub reg_vier
    End If
End If
sprungmarke1:
Next regel_zaehler
sprungmarke2:
Next Tag
Next
For a = 1 To 54
' Wurde die Sollarbeitszeit |fffd|ber die einstellbaren Parameter hinweg |fffd|berzogen
If soll(a) > (ist(a) + (ist(a) * .Cells(92, 3).Value) / 100) Then ergebnis = ergebnis - 1
ergebnis = ergebnis + wunschwert(a)
' Gesamtwerte aufbauen
gesamtstunden = gesamtstunden + ist(a)
sollstunden = sollstunden + soll(a)
real_brutto_gesamt = Application.WorksheetFunction.Round(ist(a) * brutto_zwei(a), 2)
' Wurden alle Schichten besetzt ?
Next a
fehldienst = vbLf
If notw_a > 0 Then fehldienst = fehldienst & "Fr|fffd|hdienst 'A' " & vbLf
If notw_b > 0 Then fehldienst = fehldienst & "Fr|fffd|hdienst 'B' " & vbLf
If notw_c > 0 Then fehldienst = fehldienst & "Zwischendienst " & vbLf
If notw_d > 0 Then fehldienst = fehldienst & "Zusatzdienst " & vbLf
If notw_e > 0 Then fehldienst = fehldienst & "Sp|fffd|tdienst " & vbLf
If notw_w > 0 Then fehldienst = fehldienst & "Nachtdienst " & vbLf
ergebnis = ergebnis - (notw_a + notw_b + notw_c + notw_d + notw_e + notw_w)
' Auf Schwellwert f|fffd|r Urlaubsbonus im Plan testen
If alle_u > .Range("C143").Value Then
ergebnis = ergebnis + (alle_u - .Range("C143").Value)
End If
QPruefung.Urlaub.Value = CStr(alle_u)
ueb = ueb & "*****  FEHLENDE DIENSTE ****** " & fehldienst
If .Range("C138").Value = 1 Then
ueb = ueb & vbLf & "******  MITARBEITERW|fffd|NSCHE ******" & vbLf
For a = 1 To 54
If mitarbeiter(a) = "Leer" Then GoTo sprungmarke3
ueb = ueb & "Mitarbeiter.............. : " & mitarbeiter(a) & vbLf
' Wird Stundenlohn als Verfahren gew|fffd|hlt, so werden die Kosten ausgegeben
If OEKONOMIE = 2 Then ueb = ueb & "Voraussichtlicher Lohn... : " & Application.WorksheetFunction.Round(ist(a) * 24 * brutto_zwei(a), 2) & " |fffd|" & vbLf
ueb = ueb & aussagetext(a) & vbLf
' Unterscheidung Monatslohn / Stundenlohn
Select Case OEKONOMIE
Case 1
real_brutto_gesamt = real_brutto_gesamt + Application.WorksheetFunction.Round(((ist(a)) * 24) * lohn_durch(a), 2)
Case 2
real_brutto_gesamt = real_brutto_gesamt + Application.WorksheetFunction.Round(ist(a) * 24 * brutto_zwei(a), 2)
End Select
sprungmarke3:
Next a
End If
ueb = ueb & ergebnistext & vbLf
' Durchf|fffd|hrung der AZ-Pr|fffd|fung
Call AZPruef(0, 0)
' Anzeige Punktwerte
If .Range("C144").Value = 1 Then
QPruefung.Punktwert.Value = CStr(ergebnis)
If ergebnis < -200 Then QPruefung.Image1.Visible = True
If ergebnis > -200 And ergebnis < -50 Then QPruefung.Image2.Visible = True
If ergebnis > -50 And ergebnis < 0 Then QPruefung.Image3.Visible = True
If ergebnis >= 0 Then QPruefung.Image4.Visible = True
End If
End With
' Fenster anzeigen
ueb = ueb & vbCrLf & vbCrLf & "******  |fffd|KONOMIE REPORT  ******" & vbLf & vbLf
ueb = ueb & "Summe Stundenkonten...... : " & Worksheets("PLAN").Range("AK181").text & vbLf
ueb = ueb & "Gesamt-Soll-Stunden...... : " & Worksheets("PLAN").Range("AJ183").text & vbLf
ueb = ueb & "Gesamt-Ist-Stunden....... : " & Worksheets("PLAN").Range("AJ181").text & vbLf
ueb = ueb & "Ist abz|fffd|gl. Sollstunden.. : " & Worksheets("PLAN").Range("AJ182").text & vbLf
ueb = ueb & "Stundenkonto Vormonat.... : " & Worksheets("PLAN").Range("AK183").text & vbLf
' Wird nur bei Monatslohn angezeigt
If OEKONOMIE = 1 Then
ueb = ueb & "Arbeitsstundenkosten..... : ~ " & Application.WorksheetFunction.Round(durch_brutto_gesamt / durch_zaehler, 2) & " |fffd|" & vbLf
ueb = ueb & "Basis der Berechnung..... : " & durch_zaehler & " Nennungen" & vbLf & vbLf
ueb = ueb & "Plankosten-Durchschnitt-. : " & Application.WorksheetFunction.Round((durch_brutto_gesamt / durch_zaehler) * (sollstunden * 24), 2) & " |fffd|" & vbLf
End If
If OEKONOMIE <> 0 Then
ueb = ueb & "Plankosten............... : " & real_brutto_gesamt & " |fffd|" & vbLf
End If

QPruefung.TextBox1.Value = ueb
QPruefung.Show
Exit Sub

' Unterprogramme

reg_null:
wunschwert(zaehler) = wunschwert(zaehler) - pw_bei_kein
GoSub wasfuereintag
aussagetext(zaehler) = aussagetext(zaehler) & "Dienst am " & u & ", obwohl kein " & _
"Dienst gew|fffd|nscht wurde am " & CStr(Cells(5, Tag).Value) & " ." & vbCrLf
Return

reg_eins:
wunschwert(zaehler) = wunschwert(zaehler) - pw_bei_ungern
GoSub wasfuereintag
aussagetext(zaehler) = aussagetext(zaehler) & "Dienst am " & u & ", obwohl f|fffd|r " & _
"diesen Tag als ungern deklariert am " & CStr(Cells(5, Tag).Value) & vbCrLf
Return

reg_vier:
' Feststellung welchen Dienst h|fffd|tte der Mitarbeiter den ungern
GoSub wasfuernwunsch
For a = zaehl_offset To (zaehl_offset + 7)
If Dienst(a) = akt_dienst Then
wunschwert(zaehler) = wunschwert(zaehler) - pw_gegen_aus
aussagetext(zaehler) = aussagetext(zaehler) & "Ungew|fffd|nschte Dienstform am " & CStr(Cells(5, Tag).Value) & vbCrLf
Exit For
End If
Next a
Return

reg_fuenf:
' Feststellung welchen Dienst h|fffd|tte der Mitarbeiter den gern
GoSub wasfuernwunsch
For a = zaehl_offset To (zaehl_offset + 7)
If Dienst(a) = akt_dienst Then
wunschwert(zaehler) = wunschwert(zaehler) + pw_wunsch
Exit For
End If
Next a
Return
wasfuereintag:
Select Case akt_tag
Case 1
u = "Sonntag"
Case 2
u = "Montag"
Case 3
u = "Dienstag"
Case 4
u = "Mittwoch"
Case 5
u = "Donnerstag"
Case 6
u = "Freitag"
Case 7
u = "Samstag"
Case 8
u = "Feiertag"
Case 9
u = "T|fffd|glich"
End Select
Return
Exit Sub

wasfuernwunsch:
wunschdienst = CInt(Right$(regel(regel_zaehler), 1))
If wunschdienst = 1 Then zaehl_offset = 1
If wunschdienst = 2 Then zaehl_offset = 9
If wunschdienst = 3 Then zaehl_offset = 33
If wunschdienst = 4 Then zaehl_offset = 17
If wunschdienst = 5 Then zaehl_offset = 25
If wunschdienst = 6 Then zaehl_offset = 41
Return

Fehler:
MsgBox "Ein Fehler ist aufgetreten : " & Err.Description, vbCritical
End Sub
Attribute VB_Name = "Stdfunktionen"
' Dienstplan in Excel Version 3.800-4
' Copyright (C) 1998 - 2018 Thomas B|fffd|r
'
' This program is free software; you can redistribute it and/or
' modify it under the terms of the GNU General Public License
' as published by the Free Software Foundation; either version 2
' of the License, or (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

Option Explicit
Public gewaehlter_monat As String
Public durchlauf
Public berechnungsdurchlauf
Public v_mitarbeitername As String
Public v_mita_az As String
Public v_kartennummer As String
Public v_mita_an As String
Public v_notiz As String
Public v_tagesstunden As String
Public v_SAstunden As String
Public v_SOstunden As String
Public v_brutto As Variant
Public v_azftdoppel As Long
Public team_key As String
Public team_as As String
Public team_wert As String
Public dienstart As Byte
Public v_nachtwache As String
Public plan_killer_aktiv As Byte
Public v_wunsch As String
Public v_zaehltmit As Long
Public v_zaehltmitn As Long
Public v_ftfrei As Long
Public v_ugen As Variant
Public v_uges As Variant
Public v_uakt As Variant
Public v_zusatzbezeichnung As Variant
Public v_feiertagsfrei As Variant
Public v_hamburger_modell As Variant
Public v_Eigenschaft As Variant
Public v_UrlaubOverride As Variant
Public wiederaufruf As Byte
Public eingabe_ueberwachung As Byte
Public MITARBEITERNAME(54) As Variant
Public typierung(54) As Variant
Public dienstnummer(54) As Variant
Public stundenkontouebertrag(54) As Variant
Public nachtwachen(54) As Variant
Public wuensche(54) As Variant
Public freieintrag(54) As Variant
Public ftazdoppel(54) As Variant
Public NOTIZ(54) As Variant
Public vormonat(54) As Variant
Public zaehltmit(54) As Variant
Public ftfrei(54) As Variant
Public TAGESSTUNDEN(54) As Variant
Public SASTUNDEN(54) As Variant
Public SOSTUNDEN(54) As Variant
Public brutto(54) As Variant
Public lohn_durch(54) As Variant
Public uges(54) As Variant
Public ugen(54) As Variant
Public hamburgermodell(54) As Variant ' 3641
Public UrlaubOverride(54) As Variant ' 3701
Public offen As Boolean
Public sig_versionswechsel As Boolean
Public sig_versionswechsel_altdatei As Variant
Public monat_versionswechsel As String
Public sig_mitarbeiter_loeschen As Boolean
Public ueb As String
Public ergebnis As Long ' CAC-Punktwert
Public TagesPruefungsErgebnis As Long
Public ap_mitarbeiter(54) As Variant ' 3701
Public ap_mitarbeiter_gesamt As Long ' 3701
Public ap_mitarbeiter_position(54) ' 3701
Public miplan_pdf_ausgabe As Boolean ' 3710
Public mitarbeiterreihenfolge1 As Byte ' 3711
Public mitarbeiterreihenfolge2 As Byte ' 3711
Public AusgabeOrdner As String '3750

Sub Markierung_2te_Zeile_ein()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
plan_killer_aktiv = 1
Dim a As Long
For a = 10 To 170 Step 3
Worksheets("PLAN").Range("D" & a & ":AI" & a).Select
With Selection.Borders(xlEdgeBottom)
.LineStyle = xlContinuous
.Weight = xlMedium
.ColorIndex = xlAutomatic
End With
Selection.Borders(xlEdgeRight).LineStyle = xlNone
Next a
plan_killer_aktiv = 0
Exit Sub
Fehler:
MsgBox Err.Description
End Sub

Sub Markierung_2te_Zeile_aus()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
Dim a As Long
plan_killer_aktiv = 1
For a = 10 To 170 Step 3
Worksheets("PLAN").Range("D" & a & ":AI" & a).Select
Selection.Borders(xlDiagonalDown).LineStyle = xlNone
Selection.Borders(xlDiagonalUp).LineStyle = xlNone
With Selection.Borders(xlEdgeLeft)
.LineStyle = xlContinuous
.Weight = xlThin
.ColorIndex = xlAutomatic
End With
Selection.Borders(xlEdgeTop).LineStyle = xlNone
Selection.Borders(xlEdgeBottom).LineStyle = xlNone
Selection.Borders(xlEdgeRight).LineStyle = xlNone
Next a
plan_killer_aktiv = 0
Exit Sub
Fehler:
MsgBox Err.Description
End Sub

Sub Ausblendung()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
Dim wert As Variant
Dim lv As Long
Worksheets("PLAN").Select
eingabe_ueberwachung = 1
ActiveSheet.Unprotect
Application.ScreenUpdating = False
For lv = 11 To 170 Step 3
wert = CStr(lv) & ":" & CStr(lv)
Worksheets("PLAN").Rows(wert).EntireRow.Hidden = True
Next lv
Call Markierung_2te_Zeile_ein
Range("D9").Select
Call schutz_ein
Range("AR5") = 2
eingabe_ueberwachung = 0
Exit Sub
Fehler:
MsgBox Err.Description
End Sub

Sub Einblendung()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
' Dieser Befehl hebt den Befehl 'Ausblendung' wieder auf. Hintergrund ist die Aus-
' blendung der DRITTEN ZEILE. Das soll die |fffd|bersicht verbessern.
Worksheets("PLAN").Select
ActiveSheet.Unprotect
eingabe_ueberwachung = 1
Application.ScreenUpdating = False
Rows("1:170").Select
Selection.EntireRow.Hidden = False
Range("D9").Select
Call Markierung_2te_Zeile_aus
Call schutz_ein
Range("AR5") = 0
eingabe_ueberwachung = 0
Exit Sub
Fehler:
MsgBox Err.Description
End Sub

Sub plan_killer()
Worksheets("PLAN").Select
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo fehlermeldung
' Dimensionierung
Dim monatsname As String
Dim monatspara As String
Dim antwort As String
Dim laufvariable As Long
Dim lese As Variant
Dim vorkomma As Variant
Dim nachkomma As Variant
Dim wert As Variant
Dim auslesewert As Variant
Dim ausdemplan As Variant
Dim ausfeiertage As Variant
Dim vk$
Dim nk$
Dim zwischen$
Dim a As Long
Dim b As Long
Dim nwuebertrag As Long
Dim datop As Variant
Dim eintrag As String
Dim zeitstempel As Variant

' Ist der Automatismus "Versionswechsel" aktiv, so ist eine Abfrage nicht erforderlich
If sig_versionswechsel = False Then
' Sicherheitsabfrage
antwort = MsgBox("Sind Sie sicher dass alle Werte des Planes gel|fffd|scht werden sollen " & _
"um einen neuen Monatsplan aufzubauen ? (Die Parameter der Mitarbeiter bleiben " & _
"erhalten)." & vbLf & vbLf & "SIE SOLLTEN BEREITS GESPEICHERT HABEN !", vbYesNo + vbInformation, "Frage!")
If antwort = 7 Then Exit Sub
' Soll der Kontowert |fffd|bernommen werden ?
antwort = MsgBox("Sollen die Kontodaten, wie auf diesem Plan angezeigt, als Stundenkonto" & _
"auf den neu zu erstellenden Plan |fffd|bernommen werden? Wenn Sie auf NEIN klicken werden die" & _
"Altdaten mit 00:00 |fffd|berschrieben. Klicken Sie auf ABBRECHEN um den Vorgang abzubrechen.", vbYesNoCancel, "Frage!")
' Es wurde 'ABBR' geklickt - sprich der Vorgang soll gar nicht durchgef|fffd|hrt werden.
If antwort = 2 Then Exit Sub
End If

' Beim Versionswechsel ist eine |fffd|bernahme der Stunden grunds|fffd|tzlich nicht erforderlich (das w|fffd|re antwort = 6)
If sig_versionswechsel = True Then antwort = 7

' |fffd|berwachung der Eingaben aus
eingabe_ueberwachung = 1
plan_killer_aktiv = 1
' Sollen Daten aus dem jetzigen Plan auf den Folgeplan |fffd|bernommen werden?
If Worksheets("DEFINITIONEN").Cells(164, 3).Value > 0 Then
ActiveSheet.Unprotect
Application.ScreenUpdating = False
For laufvariable = 9 To 168 Step 3
For a = Worksheets("DEFINITIONEN").Cells(164, 3).Value To 1 Step -1
' Evtl. muss die Zeile 2 vorgezogen werden
If Worksheets("DEFINITIONEN").Cells(165, 3).Value > 0 And _
Cells(laufvariable + 1, 34 - CInt(Range("AO3").Value) - a + 1).Value <> "" Then
eintrag = eintrag & Cells(laufvariable + 1, 34 - CInt(Range("AO3").Value) - a + 1).Value
Else
If Cells(laufvariable, 34 - CInt(Range("AO3").Value) - a + 1).Value = "" Then
eintrag = eintrag & " . "
Else
eintrag = eintrag & Cells(laufvariable, 34 - CInt(Range("AO3").Value) - a + 1).Value
End If
End If
If Cells(laufvariable, 1) <> "" Or Cells(laufvariable, 1) <> "Leer" Then
Cells(laufvariable, 52).Value = eintrag
End If
Next a
eintrag = ""
Next laufvariable
End If
Application.ScreenUpdating = False
' Es sollen alle Stundenkontenwerte des Vormonats auf den neuen Monat |fffd|bertragen werden.
' Eine Laufschleife 'laufvariable' liest die aktuellen Stundenkontenwerte aus und verwandelt
' die Stunden:Minuten Angabe in Textteile VOR und NACH dem Komma. Ist die Minutenstelle nur
' Einstellig so wird eine f|fffd|hrende 0 hinzuaddiert. Die Strings VOR und NACH dem Komma werden
' abschlie|fffd|end mit einem Doppelpunkt verbunden und in die 2te Spalte je Mitarbeiter |fffd|ber-
' tragen.
If antwort = 6 Then
For laufvariable = 9 To 168 Step 3
lese = CDbl(Cells(laufvariable, 37).Value * 24)
vorkomma = Fix(lese)
vk$ = CStr(vorkomma)
If vorkomma < 0 Then
nachkomma = Application.WorksheetFunction.Round((lese - vorkomma) * -60, 2)
Else
nachkomma = Application.WorksheetFunction.Round((lese - vorkomma) * 60, 2)
End If
If nachkomma >= 10 Or nachkomma <= -10 Then
' Pr|fffd|fung auf ein seltsames Verhalten von Excel
If nachkomma = 60 Then
    nachkomma = 0
    vorkomma = vorkomma + 1
    vk$ = CStr(vorkomma)
    End If
If nachkomma = -60 Then
    nachkomma = 0
    vorkomma = vorkomma - 1
    vk$ = CStr(vorkomma)
    End If
nk$ = CStr(Fix(nachkomma))
Else
nk$ = "0" & CStr(Fix(nachkomma))
End If
' Vorkommawert = 0 und Nachkommawert ist dreistellig weil negativ
If Len(nk$) = 3 And Left$(nk$, 1) = "-" And CStr(vk$) = 0 Then
vk$ = "-00"
nk$ = Right$(nk$, 2)
End If
If nk$ = "0" Then nk$ = "00"
Cells(laufvariable, 2) = vk$ & ":" & nk
' Berechnung etwaiger Minusstunden
wert = Cells(laufvariable, 2)
If wert = "" Then wert = 0
If Left$(wert, 1) <> "-" Then
Cells(laufvariable, 98).Value = wert
Else
Cells(laufvariable, 99).Value = Right$(wert, Len(wert) - 1)
Cells(laufvariable, 98).Value = Cells(laufvariable, 99).Value * -1
Cells(laufvariable, 99) = 0
End If
Next laufvariable
End If
' NW/U-Werte |fffd|bertragen durchlaufen lassen
For laufvariable = 9 To 168 Step 3
If IsNull(Cells(laufvariable, 60).Value) = False Then
    Cells(laufvariable, 50).Value = Cells(laufvariable, 60).Value
    Else
    Cells(laufvariable, 50).Value = 0
    End If
Cells(laufvariable, 58).Value = (Cells(laufvariable, 57).Value - Cells(laufvariable, 59).Value)
Next laufvariable
' Es wurde NEIN geklickt - so werden alle Stundenkontenwerte auf 00:00 gesetzt
If antwort = 7 Then
For laufvariable = 9 To 168 Step 3
Cells(laufvariable, 2) = "00:00"
Cells(laufvariable, 98).Value = 0
Next laufvariable
End If
' Blattschutz aufheben
ActiveSheet.Unprotect
' Die Feiertagsfrei-Werte von Rechts nach Links |fffd|bernehmen
For laufvariable = 9 To 168 Step 3
If Cells(laufvariable + 2, 36).Value <> 0 Then
Cells(laufvariable + 2, 2).Value = Cells(laufvariable + 2, 36).Value
End If
Next laufvariable
' Alle Sperrungen aufheben
Range("AE9:AH170").Select
Selection.Locked = False
Range("AE5:AH7").Font.Color = vbBlack
' Alles 31 Tage wieder anzeigen
Columns("AE:AI").Select
Selection.EntireColumn.Hidden = False
' Eintr|fffd|ge des Monats entfernen
' Die Eintr|fffd|ge sehen deshalb so langatmig aus, da sie mit dem Makrorekorder mit-
' geschriebn wurden. Es werden in allen folgenden Befehlen nichts anderes als die
' Leerwerte wieder hergestellt. Etwaige Schattenpl|fffd|ne werden zur|fffd|ckgesetzt. Team-
' sitzungseintr|fffd|ge und Kommentare entfernt.
Range("D9:AH170").Select
Selection.ClearContents

' #3.702 Manuelle Sollstunden k|fffd|nnen f|fffd|r den Folgemonat erhalten bleiben, sofern in den Definitionen festgelegt
If Worksheets("DEFINITIONEN").Range("C5") <> "1" Then
    Range("C10,C13,C16,C19,C22,C25,C28,C31,C34,C37,C40,C43,C46,C49,C52,C55,C58,C61,C64,C67,C70,C73,C76,C79,C82,C85,C88,C91,C94,C97,C100,C103,C106,C109,C112,C115,C118,C121,C124,C127,C130,C133,C136,C139,C142,C145,C148,C151,C154,C157,C160,C163,C166,C169").Select
    Range("C169").Activate
    Selection.ClearContents
    Selection.ClearComments
End If

Range("B9,B12,B15,B18,B21,B24,B27,B30,B33,B36,B39,B42,B45,B48,B51,B54,B57,B60,B63,B66,B69,B72,B75,B78,B81,B84,B87,B90,B93,B96,B99,B102,B105,B108,B111,B114,B117,B120,B123,B126,B129,B132,B135,B138,B141,B144,B147,B150,B153,B156,B159,B162,B165,B168").Select
Range("B168").Activate
ActiveCell.FormulaR1C1 = "00:00"
Range("D7:AH7").Select
Selection.ClearContents
Selection.ClearComments
Range("D8:AH8").Select
Selection.ClearContents

Range("AI9,AI12,AI15,AI18,AI21,AI24,AI27,AI30,AI33,AI36,AI39,AI42,AI45,AI48,AI51,AI54,AI57,AI60,AI63,AI66,AI69,AI72,AI75,AI78,AI81,AI84,AI87,AI90,AI93,AI96").Select
Range("AI96").Activate
Selection.ClearContents

Range("AI99,AI102,AI105,AI108,AI111,AI114,AI117,AI120,AI123,AI126,AI129,AI132,AI135,AI138,AI141,AI144,AI147,AI150,AI153,AI156,AI159,AI162,AI165,AI168").Select
Range("AI168").Activate
Selection.ClearContents

Range("Ak100,Ak103,Ak106,Ak109,Ak112,Ak115,Ak118,Ak121,Ak124,Ak127,Ak130,Ak133,Ak136,Ak139,Ak142,Ak145,Ak148,Ak151,Ak154,Ak157,Ak160,Ak163,Ak166,Ak169").Select
Range("Ak169").Activate
Selection.ClearContents

' Das Dialogfeld "Dialog1" wird aufgerufen. Bis dort ein OK geklickt wird, bleibt
' der Programmablauf hier stehen und wartet auf das Ergebnis der Auswahl des neuen
' Monats.
If sig_versionswechsel = False Then ActiveWorkbook.DialogSheets("Monatswahl").Show

' Der Aktuelle Monat wird in die Zelle I9 eingetragen
If sig_versionswechsel = False Then Cells(1, 9) = gewaehlter_monat Else Cells(1, 9) = monat_versionswechsel

' R|fffd|cksetzen des Nachtwachenz|fffd|hlers
If sig_versionswechsel = False And Worksheets("DEFINITIONEN").Cells(154, 3).Value = 1 Then
antwort = MsgBox("Soll der Nachtwachenz|fffd|hler zur|fffd|ckgesetzt werden?", vbYesNo, "Frage")
If antwort = vbYes Then
Range("AX9,AX12,AX15,AX18,AX21,AX24,AX27,AX30,AX33,AX36,AX39,AX42,AX45,AX48,AX51,AX54,AX57,AX60,AX63,AX66,AX69,AX72,AX75,AX78,AX81,AX84,AX87,AX90,AX93,AX96").Select
Selection.Value = 0
Range("AX99,AX102,AX105,AX108,AX111,AX114,AX117,AX120,AX123,AX126,AX129,AX132,AX135,AX138,AX141,AX144,AX147,AX150,AX153,AX156,AX159,AX162,AX165,AX168").Select
Selection.Value = 0
End If
End If

' Pr|fffd|fung ob neues Jahr beginnt
If sig_versionswechsel = False Then
If Left$(gewaehlter_monat, 2) = "1/" Then
antwort = MsgBox("Es findet ein Jahreswechsel statt, soll die Anzahl genommener Urlaubstage auf 0 zur|fffd|ckgesetzt werden?", vbYesNo, "Jahreswechsel")
If antwort = vbYes Then
Range("BF9,BF12,BF15,BF18,BF21,BF24,BF27,BF30,BF33,BF36,BF39,BF42,BF45,BF48,BF51,BF54,BF57,BF60,BF63,BF66,BF69,BF72,BF75,BF78,BF81,BF84,BF87,BF90,BF93,BF96").Select
Selection.Value = ""
Range("BF99,BF102,BF105,BF108,BF111,BF114,BF117,BF120,BF123,BF126,BF129,BF132,BF135,BF138,BF141,BF144,BF147,BF150,BF153,BF156,BF159,BF162,BF165,BF168").Select
Selection.Value = ""
End If
End If
End If

' Datumsleiste wird aufgebaut. Die Befehle sind mit dem Makrorekorder mitgeschrieben
' worden und sind wie folgt zustande gekommen. In die erste Zelle (Tag 1 des neuen
' Monats) wird das Datum aus der Variable monatspara eingetragen und dann entsprechend
' mit dem Auff|fffd|llk|fffd|stchen nach rechts Richtung 31ten gezogen. Kurzzeitig werden immer
' 31 Tage eingetragen. Eine andere Funktion wird "|fffd|berh|fffd|ngende" Tage des Folgemonats
' abschneiden - daf|fffd|r wird wieder auf eine Excel-Funktionalit|fffd|t zur|fffd|ckgegeriffen.
If sig_versionswechsel = False Then Range("D5") = gewaehlter_monat Else Range("D5") = monat_versionswechsel
Range("D5").Select
Selection.AutoFill Destination:=Range("D5:AH5"), Type:=xlFillDefault
Range("D5:AH5").Select
Range("AG6").Select
Selection.AutoFill Destination:=Range("AG6:AH6"), Type:=xlFillDefault
Range("AG6:AH6").Select
Range("D9").Select
' Feiertage aufbauen
For a = 4 To 34
ausdemplan = Cells(5, a).Value
For b = 20 To 94
ausfeiertage = Sheets("JAHRESDATEN").Cells(b, 2).Value
If ausdemplan = ausfeiertage Then
If Cells(7, a).Value <> "ft" Then ' #3642-1 ist in den Stammdaten ein Eintrag mehrfach, w|fffd|rde es bei Add-Comment zu einem Fehler kommen
Cells(7, a).Value = "ft"
Cells(7, a).Select
Selection.Font.Bold = True
Selection.Font.ColorIndex = 7
Cells(7, a).AddComment
Cells(7, a).Comment.Visible = False
Cells(7, a).Comment.text text:=Sheets("JAHRESDATEN").Cells(b, 3).Value
End If
End If
Next b
Next a

' Farbmarkierung entfernen
Range("D9", "AH170").Select
Selection.Interior.ColorIndex = xlNone
' Nicht zul|fffd|ssige Monatstage am Ende deaktivieren
If Cells(3, 42).Value = 1 Then
Range("AE9:AE168").Select
Selection.Locked = True
Range("AE5:AE7").Font.Color = vbWhite
End If
If Cells(3, 43).Value = 1 Then
Range("AF9:AF168").Select
Selection.Locked = True
Range("AF5:AF7").Font.Color = vbWhite
End If
If Cells(3, 44).Value = 1 Then
Range("AG9:AG168").Select
Selection.Locked = True
Range("AG5:AG7").Font.Color = vbWhite
End If
If Cells(3, 45).Value = 1 Then
Range("AH9:AH168").Select
Selection.Locked = True
Range("AH5:AH7").Font.Color = vbWhite
End If
Springweg:
' Hintergrund wieder WEISS
Range("D9:AH168").Select
Selection.Interior.ColorIndex = xlNone
' Teamsitzung zur|fffd|cksetzen
Range("AR4").Value = 0
' Sonderdienstkopieeintr|fffd|ge zur|fffd|cksetzen
Range("BN9:CR9,BN12:CR12,BN15:CR15,BN18:CR18,BN21:CR21,BN24:CR24,BN27:CR27,BN30:CR30,BN33:CR33,BN36:CR36,BN39:CR39,BN42:CR42").Select
Range("BN42").Activate
Selection.ClearContents

Range("BN45:CR45,BN48:CR48,BN51:CR51,BN54:CR54,BN57:CR57,BN60:CR60,BN63:CR63,BN66:CR66,BN69:CR69,BN72:CR72,BN75:CR75,BN78:CR78,BN81:CR81,BN84:CR84,BN87:CR87,BN90:CR90,BN93:CR93,BN96:CR96").Select
Range("BN96").Activate
Selection.ClearContents

Range("BN99:CR99,BN102:CR102,BN105:CR105,BN108:CR108,BN111:CR111,BN114:CR114,BN117:CR117,BN120:CR120,BN123:CR123,BN126:CR126").Select
Range("BN126").Activate
Selection.ClearContents

Range("BN129:CR129,BN132:CR132,BN135:CR135,BN138:CR138,BN141:CR141,BN144:CR144,BN147:CR147,BN150:CR150,BN153:CR153,BN156:CR156,BN159:CR159,BN162:CR162,BN165:CR165,BN168:CR168").Select
Range("BN168").Activate
Selection.ClearContents

' Kommentare entfernen
Range("D9:AH168").Select
Selection.ClearComments
' Schutz des Wachenstatus wieder einschalten
Range("B10,B13,B16,B19,B22,B25,B28,B31,B34,B37,B40,B43,B46,B49,B52,B55,B58,B61,B64,B67,B70,B73,B76,B79,B82,B85,B88,B91,B94,B97,B100,B103,B106,B109,B112,B115,B118,B121,B124,B127,B130,B133,B136,B139,B142,B145,B148,B151,B154,B157,B160,B163,B166,B169").Select
Range("B169").Activate
Selection.Locked = True
Selection.FormulaHidden = False

' Was soll den abgeschnitten werden?
Select Case Range("AO3").Value

Case 1
    Range("AH7").ClearComments
    Columns("AH:AH").EntireColumn.Hidden = True
    
Case 2
    Range("AG7:AH7").ClearComments
    Columns("AG:AH").EntireColumn.Hidden = True
    
Case 3
    Range("AF7:AH7").ClearComments
    Columns("AF:AH").EntireColumn.Hidden = True

Case 0
End Select

On Error Resume Next
ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
Range("D9").Select
With Application
.Cursor = xlDefault
plan_killer_aktiv = 0
eingabe_ueberwachung = 0
.Calculation = xlCalculationAutomatic
.ScreenUpdating = True
.Calculate
Range("D9").Select
End With
' MiPlan aufr|fffd|umen
Call miplan_aufraeumen
' LZP-Eintr|fffd|ge eintragen
If sig_versionswechsel = False Then Call lzplaneinsetzen
' Sichern
On Error Resume Next
If sig_versionswechsel = False Then
zeitstempel = Left(Now(), 10)
datop = Application.GetSaveAsFilename("Leerer Plan vom " & zeitstempel & ".xlsm", "Dienstpl|fffd|ne, *.xlsm")
If datop = False Then
    Else
    ActiveWorkbook.SaveAs datop
    End If
End If
On Error Resume Next
If (CDate(Now()) - 1095) > CDate("18.08.2017") And UCase(Left(Application.OperatingSystem, 3)) = "WIN" Then
    antwort = MsgBox("Die von Ihnen genutzte DPE3-Version ist |fffd|lter als drei Jahre. Soll auf ein Update im Internet gepr|fffd|ft werden?", vbYesNo, "Update")
        If antwort = vbYes Then Call update_pruefung
            End If
If CDate(Now()) > Worksheets("JAHRESDATEN").Range("B93").Value And Len(Worksheets("JAHRESDATEN").Range("B93").Value) > 6 Then
        MsgBox "Das aktuelle Datum ist gr|fffd||fffd|er als das Datum des sp|fffd|testen Feiertags in den JAHRESDATEN. Sie sollten unbedingt ein Update durchf|fffd|hren, sofern Sie weitere Pl|fffd|ne mit dieser Datei anlegen wollen.", vbInformation, "Update"
    End If
On Error GoTo 0

Exit Sub
fehlermeldung:
MsgBox "Bei der |fffd|bertragung ist ein Fehler aufgetreten. Pr|fffd|fen Sie, ob die Stundenkontowerte" & _
"g|fffd|ltige Werte im Sinne von [VORZEICHEN STUNDEN (max.3 stellig) : MINUTEN (max.2 stellig) " & _
"beinhalten." & vbCrLf & vbCrLf & Err.Description, vbCritical, "Fehler!"
plan_killer_aktiv = 0
eingabe_ueberwachung = 0
With Application
.Calculation = xlCalculationAutomatic
.ScreenUpdating = True
.Calculate
End With
Range("D9").Select
Call schutz_ein
End Sub

Sub miplan_pdf()
miplan_pdf_ausgabe = True
Call miplan
End Sub

Sub OrdnerAuswahlPC()
With Application.FileDialog(msoFileDialogFolderPicker)
.InitialFileName = "\"
.Title = "Speicherort f|fffd|r PDF-Pl|fffd|ne"
.ButtonName = "Auswahl..."
.InitialView = msoFileDialogViewList
                If .Show = -1 Then
                    AusgabeOrdner = .SelectedItems(1)
                    If Right(AusgabeOrdner, 1) <> "\" Then AusgabeOrdner = AusgabeOrdner & "\"
                Else
                    AusgabeOrdner = ""
                End If
End With
End Sub

Sub OrdnerAuswahlMac()
Dim folderPath As String ' F|fffd|r Mac
Dim RootFolder As String ' F|fffd|r Mac
' Basiert auf einem MacScript von Ron de Bruin (http://www.rondebruin.nl/mac/mac017.htm)
On Error Resume Next
RootFolder = MacScript("return (path to desktop folder) as String")
folderPath = MacScript("(choose folder with prompt ""Select the folder""" & _
"default location alias """ & RootFolder & """) as string")
On Error GoTo 0
AusgabeOrdner = folderPath
End Sub

Sub miplan()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
Worksheets("PLAN").Select
' Dimensionierung
Dim reg(48) As String
Dim dfo(48) As String
Dim schnipp As String
Dim schnapp As String
Dim untersuchung As String
Dim zeile_zwei As String
Dim bereitschaftssymbol As String
Dim sonderdienst As String
Dim MITARBEITERNAME As String
Dim antwort As String
Dim dienstform As String
Dim zweite_zeile As String
Dim mitdienst As String
Dim diensform As String
Dim dienstzeit_anzeigen As Byte
Dim bereitschaft As Byte
Dim dienstdauer As Variant
Dim laufvariable As Long
Dim laeufer As Long
Dim Tag As Long
Dim a As Long
Dim ilauf As Long
Dim mit_a_dienst As Long
Dim mit_a_marker As Byte
Dim schleife As Long
Dim smarker As Byte
Dim bin_ein_a As Byte
Dim bin_ein_b As Byte
Dim strAusgabeOrt As String
Dim strOrdner As String

' dim msoFileDialogFolderPicker As Variant
' dim msoFileDialogViewList As Variant


' Systemabh|fffd|ngige Deklarierung - Windows hat f|fffd|r mso eine Vorbelegung, die man auf dem Apfel nicht kennt
' daher deklarieren wir hier an dieser Stelle, nur damit es keinen Fehlermeldung beim Debugging gibt
' An dieser Stelle mal wieder ein deutlicher Dank: Bonnie 'Prince' Billy "I See A Darkness" - habe ich
' gern im Oktober 2015 geh|fffd|rt und in dieser Zeit ist diese Version entstanden - wurde auch Zeit

With Worksheets("DEFINITIONEN")
' Abfrage, soll der Vorgang |fffd|berhaupt gestartet werden?

If .Cells(104, 3).Value <> 0 Then
    If miplan_pdf_ausgabe = False Then
        ' Vorbereitung zum Druck
        antwort = MsgBox("Sollen die Mitarbeiterpl|fffd|ne gedruckt werden?" & vbCrLf & vbCrLf & "Sie legen im Men|fffd| 'Dienstplan->Diverses->Mitarbeiterplan' fest f|fffd|r welche Mitarbeiter der Druck tats|fffd|chlich durchgef|fffd|hrt wird.", vbYesNo, "DPE3 |Antwort erforderlich")
        Else
        If Not Application.OperatingSystem Like "*Mac*" Then
        ' Folder-Picker f|fffd|r Windows
                Call OrdnerAuswahlPC
                strOrdner = AusgabeOrdner
                antwort = "1"
            Else
        ' Folder-Picker f|fffd|r Mac
                Call OrdnerAuswahlMac
                strOrdner = AusgabeOrdner
            End If
        If strOrdner = "" Then antwort = "7"
    End If
Else
antwort = MsgBox("Soll der Mitarbeiterplan durchgerechnet werden? " & vbCrLf & vbCrLf & "Sie finden die Ergebnisse der letzten Person auf dem Dienstplan im Register 'MIPLAN'. Sollen die Mitarbeiterpl|fffd|ne k|fffd|nftig ausgedruckt/gespeichert werden, so w|fffd|hlen Sie unter 'Dienstplan->Diverses->Mitarbeiterplan' konfigurieren 'Druck durchf|fffd|hren'.", vbYesNo, "DPE3 | Antwort erforderlich")
End If
If antwort = "7" Then Exit Sub
' Den Zeiger auf Sanduhr setzen. Der Vorgang kann ein Weilchen dauern.
Application.Cursor = xlWait
eingabe_ueberwachung = 1
' Beide Befehle sorgen f|fffd|r eine deutliche Performance-Steigerung
Application.Calculation = xlCalculationManual
Application.ScreenUpdating = False
Application.EnableEvents = False
' Einlesen Definitionen
' In der Tabelle DEFINITIONEN gibt es einen Eintrag, der das Anzeigen der jeweiligen
' Dienstzeiten (VON ... BIS) steuert. Ist dort eine 0 eingetragen, so wird die An-
' zeige unterlassen.
dienstzeit_anzeigen = .Range("C103").Value
bereitschaft = .Range("C105").Value
bereitschaftssymbol = .Range("C106").Value
sonderdienst = Worksheets("DEFINITIONEN").Range("C107").Value
' Fr|fffd|hdienst 'A' und Fr|fffd|hdienst 'B' sollen zusammen angezeigt werden
' Bis zur Version 3.5 wurde hier in einem String der Name des B-Dienstes eingelesen
' das klappt ja nun nicht mehr ; mit_a_dienst f|fffd|hrt nun die Schleifenl|fffd|nge f|fffd|r das
' Auslesen der zugeh|fffd|rigen Dienstformen (von 3 bis [10] f|fffd|r nur A und bis [18] f|fffd|r
' den Fall A+B
If .Range("C159").Value = 1 Then
    mit_a_dienst = 18
    Else
    mit_a_dienst = 10
    End If
' Eintr|fffd|ge zur|fffd|cksetzen
Worksheets("MIPLAN").Unprotect
Worksheets("MIPLAN").Range("C4:H34").ClearContents
' Monatsplannamen |fffd|bernehmen
Worksheets("MIPLAN").Range("C1").Value = Range("I1").Value
' Datumsliste aufbauen
For laufvariable = 4 To 35
Worksheets("MIPLAN").Cells(laufvariable, 2).Value = Cells(5, laufvariable).Value
Next laufvariable
' Dienstnamen einlesen
For laufvariable = 1 To 48
dfo(laufvariable) = Worksheets("DIENSTE").Cells(laufvariable + 2, 5).Value
Next laufvariable
' Dienstzeiten einlesen
For laufvariable = 1 To 48
reg(laufvariable) = Worksheets("DIENSTE").Cells(laufvariable + 2, 4).Value
Next laufvariable
' Hauptschleife initiieren
' Die Vorbereitung sind abgeschlossen. Nun werden die Dienste vom Hauptplan indi-
' viduell f|fffd|r den einzelnen Mitarbeiter aufbereitet. Da auch der Standardplan an
' den Mitarbeiter auszuteilen ist, soll die Darstellung der Kollegen entfallen, die
' in einer |fffd|hnlichen oder angrenzenden Schicht Dienst tun. In dieser Hauptschleife
' sind vor allem die vielen IF ... THEN ... ELSE ... END IF Schachtellungen etwas
' verwirrend.
' Beschriftung |fffd|bertragen
Worksheets("MIPLAN").Range("B37").Value = "Mitarbeiterplan, erstellt am " & CStr(Now())
Worksheets("MIPLAN").Range("H38").Value = "Erstellt mit DPE3, Version " & Worksheets("DEFINITIONEN").Range("C2").Value & ", (C) 1998-2016 Thomas B|fffd|r"
For laufvariable = 9 To 168 Step 3
' Mitarbeiternamen auslesen
MITARBEITERNAME = Cells(laufvariable, 1)
' Pr|fffd|fung ob Mitarbeiter g|fffd|ltig ist
' Hat der Mitarbeiter keinen Namen oder lautet der Name 'Leer' so springt der Verlauf
' direkt an eine SPRUNGMARKE, die sich unmittelbar vor dem NEXT-Befehl der Schleife
' befindet. 'Leer' wird dann f|fffd|r einen Mitarbeiter eingetragen, sofern |fffd|ber das Dia-
' logfeld MITARBEITER die Defintion des Teams vorgenommen wird. Pech hat, wer sich
' hier nicht an das Verfahren h|fffd|lt.
If MITARBEITERNAME = "" Or MITARBEITERNAME = "Leer" Then GoTo sprungmarke
' Mitarbeiternamen |fffd|bernehmen
Worksheets("MIPLAN").Range("C2").Value = MITARBEITERNAME
' Stundenwerte |fffd|bernehmen
Worksheets("MIPLAN").Range("F1").Value = Cells(laufvariable, 36).Value
Worksheets("MIPLAN").Range("F2").Value = Cells(laufvariable, 3).Value
' Kontowerte |fffd|bernehmen
Worksheets("MIPLAN").Range("H1").Value = Cells(laufvariable, 2).Value
Worksheets("MIPLAN").Range("H2").Value = Cells(laufvariable, 37).Value
' Datumsschleife aufbauen
' Innerhalb der Hauptschleife wird nun eine 31 Tage Schleife aufgebaut, die jeden
' Tag des Monats anvisiert. Diese Schleife nennt sich sinnvollerweise Tag und k|fffd|nnte
' so leicht mit dem Excel-Befehl verwechselt werden.
For Tag = 4 To 35
' Die Variable 'dienstform' h|fffd|lt nun den aktuellen Dienst des Mitarbeiters.
dienstform = Cells(laufvariable, Tag).Value
zeile_zwei = Cells(laufvariable + 1, Tag).Value
' Dienstzeit eintragen
' Nur wenn der Parameter auf 1 gesetzt ist, wird hier die jeweilige Dienstzeit mit
' in den Plan |fffd|bernommen.
If dienstzeit_anzeigen = 1 Then

For a = 1 To 48
If dfo(a) = dienstform Then dienstdauer = reg(a)
Next a
End If ' If von Dienstzeit anzeigen beendet
' Dienst mit wem ?
' Die n|fffd|chste Schleife springt wieder vertikal durch den Plan und sucht alle Kol-
' legen, mit denen der aktuelle Mitarbeiter die gleiche Dienstform teilt. Ausge-
' schlossen werden die FEST HINTERLEGTEN PARAMETER wie URLAUB 'U' und KRANKHEIT
' 'K'. Sollten hier einmal andere Bezeichnung notwendig sein, so sollten diese
' ebenfalls |fffd|ber die DEFINITIONEN-Tabelle laufen.
' Bei U oder K wird ein Sprung zum |fffd|bern|fffd|chsten Befehlsblock durchgef|fffd|hrt.
For ilauf = 9 To 168 Step 3
If Cells(ilauf, Tag).Value = "U" Or Cells(ilauf, Tag) = "K" Or _
Cells(ilauf, Tag) = "" Or Cells(ilauf, Tag) = sonderdienst _
Then GoTo isprung
' Es soll nie der MIT-Dienst angezeigt werden
If Worksheets("DEFINITIONEN").Range("C159").Value = 4 Then GoTo isprung
' Ist es ein Nachtdienst?
smarker = 0
For schleife = 43 To 50
If dienstform = Worksheets("DIENSTE").Cells(5, schleife).Value Then smarker = 1
Next schleife

' Alle nicht NW/U/K
If Worksheets("DEFINITIONEN").Range("C159") = 2 Then
If laufvariable <> ilauf And Cells(ilauf, Tag).Value <> _
smarker = 0 And dienstform <> "" Then
If mitdienst = "" Then mitdienst = "mit "
If mitdienst <> "mit " Then mitdienst = mitdienst & ", "
mitdienst = mitdienst & Cells(ilauf, 1).Value & "(" & Cells(ilauf, Tag).Value & ")"
End If
GoTo isprung
End If

' Alle nicht U/K
If Worksheets("DEFINITIONEN").Range("C159") = 3 Then
If laufvariable <> ilauf And dienstform <> "" Then
If mitdienst = "" Then mitdienst = "mit "
If mitdienst <> "mit " Then mitdienst = mitdienst & ", "
mitdienst = mitdienst & Cells(ilauf, 1).Value & "(" & Cells(ilauf, Tag).Value & ")"
End If
GoTo isprung
End If
' Die folgenden Befehle sorgen daf|fffd|r, dass die Kollegen korrekt aufgef|fffd|hrt werden.
' Der Anteil 'AND laufvariable <> ilauf' sorgt daf|fffd|r, dass der aktuelle Mitarbeiter
' nicht selbst in die Aufz|fffd|hlung ger|fffd|t. Hier werden die GENAU GLEICHEN DIENSTFORMEN
' ABGEGRIFFEN!

If Cells(ilauf, Tag).Value = dienstform And laufvariable <> ilauf Then
If mitdienst = "" Then mitdienst = "mit "
If mitdienst <> "mit " Then mitdienst = mitdienst & ", "
mitdienst = mitdienst & Cells(ilauf, 1).Value
GoTo isprung
End If

' Zur|fffd|cksetzen der Marker und Initierung der Schleife : Was bin ich denn hier f|fffd|r eine
' Dienstform?
bin_ein_a = 0
bin_ein_b = 0
If .Range("C159").Value = 1 Then
For schleife = 3 To 18
If dienstform = Worksheets("DIENSTE").Range("E" & CStr(schleife)).Value And _
    Worksheets("DIENSTE").Range("F" & CStr(schleife)).Value = 1 _
        And schleife < 11 Then bin_ein_a = schleife
If dienstform = Worksheets("DIENSTE").Range("E" & CStr(schleife)).Value And _
    Worksheets("DIENSTE").Range("F" & CStr(schleife)).Value = 1 _
        And schleife >= 11 Then bin_ein_b = schleife
Next

' Aktueller Dienst ist ein A Dienst ; Dienstformen pr|fffd|fen
If bin_ein_a > 0 Or bin_ein_b > 0 Then
For schleife = 3 To mit_a_dienst
If Cells(ilauf, Tag).Value = Worksheets("DIENSTE").Range("E" & CStr(schleife)).Value And _
    Worksheets("DIENSTE").Range("F" & CStr(schleife)).Value = 1 _
        And schleife <> bin_ein_a And _
            schleife <> bin_ein_b Then
        If mitdienst = "" Then mitdienst = "mit "
        If mitdienst <> "mit " Then mitdienst = mitdienst & ", "
        mitdienst = mitdienst & Cells(ilauf, 1).Value & "(" & Cells(ilauf, Tag).Value & ")"
        End If
Next
End If

End If ' Ende von A+B Zusammen

' Solange das niemand w|fffd|nscht bleibt es bei dieser Variante - ist ja irgendwie unlogisch
' Fr|fffd|hdienste A+B kann man zusammenfassen, Sp|fffd|tdienste nicht - > doch
isprung:
' Diese Schleife wird solange wiederholt, bis alle Mitarbeiter mit der gleichen
' Dienstform ermitteln worden sind.
Next ilauf
' Pr|fffd|fung ob es sich um ein/e KPS handelt, und ob er/sie zur TS geht
If Left$(Cells(laufvariable + 1, 1).Value, 3) = "KPS" And .Range("C101") = 0 Then GoTo isprung2
' Pr|fffd|fung ob es sich um einen ZDL handelt, und ob er/sie zur TS geht
If Left$(Cells(laufvariable + 1, 1).Value, 3) = "ZDL" And .Range("C101") = 0 Then GoTo isprung2
' Ist da auch nur eine Teamsitzung
' Das Szenario Teamsitzung wird in der aktuellen Version besonders betont - l|fffd|sst
' sich doch bei diesem starren, nahezu |fffd|berall gleich verlaufenden Procedere eine
' praktische Funktion ganz einfach umsetzen.
If Cells(8, Tag).Value = .Range("C95").Value Then
dienstform = dienstform & " " & .Range("C96").Value
If mitdienst = "" Then
mitdienst = "Teamsitzung (" & .Range("D97").Value & ")"
' Sollte der aktuelle Mitarbeiter am Tag der Teamsitzung frei haben, so wird als
' Dienstform der in der DEFINTIONEN-Tabelle hinterlegte Name und der Zeitraum als
' Tagesdienst angezeigt
If dienstform = "" Then
dienstdauer = .Range("D97").Value
diensform = .Range("C96").Value
End If ' If von Dienstform beendet
Else
mitdienst = mitdienst & " und Teamsitzung (" & .Range("D97").Value & ")"
End If ' If von Mitdienst beendet
End If ' If von Teamsitzung beendet
isprung2:
' Die analysierten Daten werden jetzt auf dem MiPlan eingetragen
Worksheets("MIPLAN").Cells(Tag, 3).Value = dienstform
If dienstzeit_anzeigen = 1 Then Worksheets("MIPLAN").Cells(Tag, 4).Value = dienstdauer
' Auf Bereitschafstdienst pr|fffd|fen
If bereitschaft = 1 Then
If zeile_zwei = bereitschaftssymbol Then
If mitdienst = "" Then
mitdienst = "Bereitschaftsdienst"
Else
mitdienst = mitdienst & " + Bereitschaft"
End If
End If
End If
Worksheets("MIPLAN").Cells(Tag, 5).Value = mitdienst
' Sind da irgendwelche Besonderheiten ?
If dienstform = .Range("C107").Value Or _
Cells(laufvariable, Tag + 62).Value <> "" Then
' Und was zum Henker sind 'Schnipp' und 'Schnapp'
' Naja, |fffd|ber die Bezeichnungen von Variablen kann man sich bekanntlich streiten.
' SCHNIPP repr|fffd|sentiert den ersten Teil einer zu schneidenden Textkette !
' SCHNAPP repr|fffd|sentiert entsprechend den hinteren Teil !
' Von was ? Hier wird versucht den in den Klammern hinterlegte Zeitwert der besonderen
' Dienstform auszuschneiden und in den MiPlan zu |fffd|berf|fffd|hren.
If Len(Cells(laufvariable, Tag + 62).Value) >= 7 Then
For laeufer = 1 To Len(Cells(laufvariable, Tag + 62).Value)
untersuchung = Mid$(Cells(laufvariable, Tag + 62).Value, laeufer, 1)
If Asc(untersuchung) = 40 Then schnipp = Left$(Cells(laufvariable, Tag _
+ 62).Value, laeufer - 1)
If Asc(untersuchung) = 41 Then schnapp = _
Mid$(Cells(laufvariable, Tag + 62).Value, _
Len(schnipp) + 2, _
Len(Cells(laufvariable, Tag + 62).Value) - _
(Len(schnipp)) - 2)
Next laeufer
End If ' If von Besonderheiten Ende
' Jetzt wird die Ausgabe im MiPlan fortgesetzt. Je nachdem, wieviel weitere Funktio-
' nalit|fffd|ten in das System noch eingebaut werden sollen, w|fffd|rden diese hier folgen.
If Len(schnipp) = 0 And Len(schnapp) = 0 And Cells(laufvariable, Tag + 62).Value <> "" Then
schnapp = " - "
schnipp = Cells(laufvariable, Tag + 62).Value
End If
If Len(schnapp) = 0 Then
mitdienst = mitdienst & Cells(laufvariable, Tag + 62).Value
Else
If Worksheets("MIPLAN").Cells(Tag, 4).Value = "" Then _
Worksheets("MIPLAN").Cells(Tag, 4).Value = schnapp
If mitdienst = "" Then
mitdienst = schnipp & "(" & schnapp & ")"
Else
mitdienst = mitdienst & " + " & schnipp & "(" & schnapp & ")"
End If ' If von mitdienst ist NICHTS ENde
Worksheets("MIPLAN").Cells(Tag, 5).Value = mitdienst
End If ' If von ...VALUE = "" Ende
End If ' If von Len(schnapp) = 0 Ende
' Es wurden eine Menge Variablen verwendet, die nun wieder auf NICHTS gesetzt werden
' m|fffd|ssen, um nicht irrt|fffd|mlich am Folgetag / Folgedienst / Folgemitarebeiter interpre-
' tiert zu werden.
schnapp = ""
schnipp = ""
untersuchung = ""
mitdienst = ""
dienstdauer = ""
' Tagesschleife fortf|fffd|hren
Next Tag
' Ausdrucken
' F|fffd|r jeden gew|fffd|nschten Mitarbeiter wird ein Plan auf dem Standarddrucker oder als PDF erzeugt
If .Range("C104").Value = 1 Then
If Cells(laufvariable + 1, 51).Value = True Then
If miplan_pdf_ausgabe = False Then
    Worksheets("MIPLAN").PrintOut
    Else
    strAusgabeOrt = Replace(Worksheets("MIPLAN").Range("C2").Value, ".", "")
    If Application.OperatingSystem Like "*Mac*" Then
            Worksheets("MIPLAN").ExportAsFixedFormat Type:=xlTypePDF, Filename:= _
            strOrdner & strAusgabeOrt, Quality:=xlQualityStandard, _
            IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=False
        Else
            Worksheets("MIPLAN").ExportAsFixedFormat Type:=xlTypePDF, Filename:= _
            strOrdner & "\" & strAusgabeOrt, Quality:=xlQualityStandard, _
            IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=False
        End If
End If
End If
End If
' Mitarbeiterschleife fortf|fffd|hren
sprungmarke:
Next laufvariable
' MiPlan abgeschlossen, der Cursor wird wieder zum Normalen Zeiger
Application.Cursor = xlDefault
' Die folgenden Befehle daf|fffd|r, dass die Ansicht wieder aktiviert wird
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.Calculate
Range("D9").Select
eingabe_ueberwachung = 0
Application.EnableEvents = True
End With
If miplan_pdf_ausgabe = True Then
    MsgBox "Die PDF-Dateien wurden unter " & strOrdner & " gespeichert.", vbInformation, "Info"
    miplan_pdf_ausgabe = False
End If
Exit Sub
Fehler:
MsgBox Err.Description
End Sub

Sub bildoptimierung()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
Worksheets("PLAN").Select
Dim wert As String
Dim merker As Long

' Es wurde der Button mit der Anzeige geklickt. Nun soll die Ansicht optimie rt werden
eingabe_ueberwachung = 1
ActiveSheet.Unprotect
Application.ScreenUpdating = False
Application.EnableEvents = False
Dim laufvariable As Byte
For laufvariable = 9 To 168 Step 3
wert = CStr(laufvariable) & ":" & CStr(laufvariable + 2)
If Cells(laufvariable, 1).Value = "Leer" Then
Rows(wert).Hidden = True
Else
' der Merker findet heraus welches die letzte Position auf dem Plan ist
merker = laufvariable
End If
Next
' Male die untere Linie neu #3800
    Range("D171:AH171").Borders(xlDiagonalDown).LineStyle = xlNone
    Range("D171:AH171").Borders(xlDiagonalUp).LineStyle = xlNone
    Range("D171:AH171").Borders(xlEdgeLeft).LineStyle = xlNone
    Range("D171:AH171").Borders(xlEdgeBottom).LineStyle = xlNone
    Range("D171:AH171").Borders(xlEdgeTop).LineStyle = xlContinuous
    Range("D171:AH171").Borders(xlEdgeTop).ColorIndex = 0
    Range("D171:AH171").Borders(xlEdgeTop).TintAndShade = 0
    Range("D171:AH171").Borders(xlEdgeTop).Weight = xlMedium
    Range("D171:AH171").Borders(xlEdgeRight).LineStyle = xlNone
    Range("D171:AH171").Borders(xlInsideVertical).LineStyle = xlNone
    Range("D171:AH171").Borders(xlInsideHorizontal).LineStyle = xlNone
Call schutz_ein
Range("AR5") = 1
Range("AS5").Value = CStr(merker + 2)
eingabe_ueberwachung = 0
Application.EnableEvents = True
Exit Sub
Fehler:
MsgBox Err.Description
End Sub

Sub schutz_ein()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
Application.ScreenUpdating = True
If Worksheets("DEFINITIONEN").Range("C4").Value <> "1" Then ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
Exit Sub
Fehler:
MsgBox Err.Description
End Sub

Sub Rangedelete()

Dim cell As Variant
Dim akt_row
Dim akt_col

If Worksheets("DEFINITIONEN").Range("C4").Value = 0 Then On Error Resume Next
Call ansicht_aus
For Each cell In Selection
cell.Select
akt_row = ActiveCell.Row
akt_col = ActiveCell.Column

' Nicht das hier was gel|fffd|scht wird, was nicht gel|fffd|scht werden darf
If akt_row < 9 Or akt_row > 169 Then Exit Sub
' #3750-1
' If akt_row Mod 3 <> 0 Then Exit Sub
' If akt_col = 2 Or akt_col = 3 Then Exit Sub
If akt_col >= 35 Then Exit Sub

' Inhalte & Farben entfernen
ActiveSheet.Unprotect
cell.Select
cell.Value = ""
cell.Interior.ColorIndex = 0
ActiveSheet.Protect

weiter:
Next
Call ansicht_ein
End Sub

Sub all_azp()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
    ueb = ""
    Call AZPruef(0, 0)
    AZP.Anzeigetext = ueb
    AZP.Show
Fehler:
Exit Sub
MsgBox Err.Description
End Sub

Sub miab_azp()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
Dim akt_row
    Worksheets("PLAN").Select
    akt_row = ActiveCell.Row
    If akt_row > 8 Or akt_row < 170 Then
        ueb = ""
        Call AZPruef((akt_row \ 3) * 3, 0)
        AZP.Anzeigetext = ueb
        AZP.Show
    End If
Fehler:
Exit Sub
MsgBox Err.Description
End Sub

Sub eingangsbegruessung()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
If Worksheets("DEFINITIONEN").Range("C4") = 1 Then Exit Sub
If Worksheets("DEFINITIONEN").Range("C3") = "demo" And Worksheets("PLAN").Range("AP4") = 0 Then
        Dim antwort As Variant
        antwort = MsgBox("M|fffd|chten Sie die Daten eines vorhandenen Plans laden?" & vbCrLf & vbCrLf & "Klicken Sie auf 'JA' um die Plan- und Stammdaten eines bereits vorhandenen Plas zu |fffd|ffnen. Klicken Sie auf 'NEIN' um mit einem leeren Plan fortzufahren. Neue Benutzer klicken an dieser Stelle auf 'NEIN'.", 36, "DPE3 | Herzlich Willkommen")
        If antwort = vbYes Then
            sig_versionswechsel = True
            Call versionswechsel
            Else
            antwort = MsgBox("Kurzerkl|fffd|rung anzeigen?" & vbCrLf & vbCrLf & "So, dann sind Sie neu? M|fffd|chten Sie eine kurze Eingangserkl|fffd|rung zu DPE3 erhalten? Das soll Ihnen einen |fffd|berblick |fffd|ber das Programm geben.", 36, "DPE3 | Assistent")
            If antwort = vbYes Then
            Call gettingstarted
            End If
                End If
                    End If

Exit Sub
Fehler:
MsgBox Err.Description
End Sub

Sub update_pruefung()
    On Error Resume Next
    Dim wshell As Object
    Set wshell = CreateObject("WScript.Shell")
    wshell.Run "www.dienstplan-in-excel.de/vcheck/3800-4.htm"
End Sub

Sub menu_versionsinfo()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
Dim ausgabe As String
ausgabe = ""
ausgabe = ausgabe & "Datei- und Programmversion" & vbLf
ausgabe = ausgabe & "Version 3.800-4 (22.10.2018)" & vbLf
ausgabe = ausgabe & Chr$(169) & " 1998-2018 Thomas B|fffd|r"
MsgBox ausgabe, vbInformation, "INFO | Dienstplan in Excel"
Exit Sub
Fehler:
MsgBox Err.Description
End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
' Wenn ein Doppelklick mit der Maustaste durchgef|fffd|hrt wird, wird dieser Abschnitt im Quell-
' code ausgef|fffd|hrt. Es werden zwei verschiedene Funktionalit|fffd|ten mit dem Doppelklick ange-
' boten : Die Parametrierung des einzelnen Mitarbeiters aus Spalte A und die Eingabe von
' Dienstformen im Planungsbereich. Diese Unterteilung wird zun|fffd|chst durchgef|fffd|hrt.
' Dimensionierung
Dim geschrieben As String
Dim ausgelesen As String
Dim akt_col As Long
Dim akt_row As Long
Dim a As Long
Dim antwort As String
Dim dienstkuerzel As String
Dim x As Integer ' Einfache Laufvariable f|fffd|r eine Schleife
' Aktuelle Position der aktiven Zelle definieren
akt_row = ActiveCell.Row
akt_col = ActiveCell.Column
' Befindet sich die aktuelle Position in Zeile 1 so wird die Bearbeitung eines Mitarbeiters
' angenommen. Ist der Bereich der aktuellen Zelle kleiner 9 oder gr|fffd||fffd|er 96 so kann keine
' Eingabe eines Dienstes durchgef|fffd|hrt werden. L|fffd|sst sich die Zeilennummer der aktuellen
' Zelle nicht durch ohne Rest durch Drei teilen, so wird der Programmablauf hier unterbrochen.
If akt_row = 7 Then Call feiertag_korrektur
If akt_row < 9 Or akt_row > 169 Then Exit Sub
If akt_row Mod 3 <> 0 Then Exit Sub
If akt_col = 2 Or akt_col = 3 Then Exit Sub
If akt_col >= 35 Then Exit Sub
ActiveSheet.Unprotect
If akt_col <> 1 Then GoTo eingabehelfer
' Daten einlesen
' Die Bearbeitung des aktuellen Mitarbeiters wird vorbereitet. Dazu werden ersteinmal die
' bisherigen Eintr|fffd|ge eingelesen.
v_mitarbeitername = Cells(akt_row, akt_col).Value
v_kartennummer = Cells(akt_row + 2, akt_col).Value
ausgelesen = Cells(akt_row + 1, akt_col).Value
If Len(ausgelesen) > 6 Then
v_mita_az = Right$(ausgelesen, 3)
' Anstellungsverh|fffd|ltnis ermitteln
' Berufsk|fffd|rzel ermitteln #3.711
For x = 1 To Len(ausgelesen)
    If Mid(ausgelesen, x, 1) = "-" Then
        v_mita_an = Left(ausgelesen, x - 2)
        Exit For
    End If
Next
' v_mita_an = Left$(ausgelesen, 3)
v_azftdoppel = Cells(akt_row, 47).Value
v_nachtwache = Cells(akt_row, 50).Value
v_notiz = Cells(akt_row, 51).Value
v_zaehltmit = Cells(akt_row, 53).Value
v_zaehltmitn = Cells(akt_row + 1, 53).Value
v_tagesstunden = Cells(akt_row, 54).Value
v_SAstunden = Cells(akt_row + 1, 54).Value
v_SOstunden = Cells(akt_row + 2, 54).Value
v_ftfrei = Cells(akt_row, 56).Value
v_brutto = Cells(akt_row, 55).Value
v_uges = Cells(akt_row, 57).Value
v_ugen = Cells(akt_row, 58).Value
v_uakt = Cells(akt_row, 57).Value - Cells(akt_row, 58).Value - Cells(akt_row, 59).Value
v_zusatzbezeichnung = Cells(akt_row + 2, 51).Value
v_hamburger_modell = Cells(akt_row + 1, 58)
v_UrlaubOverride = Cells(akt_row + 1, 57)
If Cells(akt_row + 2, 60) = "" Then Cells(akt_row + 2, 60) = 0
' v_FT_FLX_ABLEITUNG = Cells(akt_row + 2, 60)
v_feiertagsfrei = Cells(akt_row + 2, 56)
' ### 3700
If Cells(akt_row + 2, 58) > 0 And Cells(akt_row + 2, 58) < 6 Then
    v_Eigenschaft = Cells(akt_row + 2, 58)
    Else
    v_Eigenschaft = 5
End If

End If
' Das Einlesen ist beendet. Das Dialogfeld 'MITARBEITER' wird eingeblendet. Bis dort nicht OK
' geklickt wird, ist der Programmverlauf an dieser Stelle eingefroren.
' ActiveWorkbook.DialogSheets("MITARBEITER").Show
If Worksheets("DEFINITIONEN").Range("C6") = 1 Then Call dialog_mitarbeiterdaten_anpassen
Mitarbeiterdaten.Show

' Wenn L|fffd|SCHEN gew|fffd|hlt wurde
If sig_mitarbeiter_loeschen = True Then
    akt_row = ActiveCell.Row
    v_mitarbeitername = "Leer"
    v_kartennummer = "Stnr"
    v_mita_an = "!"
    v_mita_az = "!"
    v_nachtwache = "0"
    v_notiz = ""
    v_zaehltmit = 0
    v_zaehltmitn = 0
    v_tagesstunden = ""
    v_SAstunden = ""
    v_SOstunden = ""
    v_ftfrei = 0
    v_brutto = 0
    v_ugen = 0
    v_uges = 0
    v_azftdoppel = 0
    v_feiertagsfrei = ""
    v_hamburger_modell = 0
    ' v_FT_FLX_ABLEITUNG = 0
    v_Eigenschaft = 5
    v_UrlaubOverride = ""
    ' W|fffd|nsche zur|fffd|cksetzen
    Cells(akt_row, 49).Value = "000,000,000,000,000"
    ' Ausdruck zur|fffd|cksetzen
    Cells(akt_row + 1, 51).Value = False
    ' |fffd|bertrag der letzten Dienste vom Vormonat kicken
    Cells(akt_row, 52).Value = "..."
    ' Stundenkonto vom Vormonat kicken
    Cells(akt_row, 2).Value = "00:00"
    Cells(akt_row, 98).Value = "00:00"
    Cells(akt_row, 99).Value = "00:00"
    sig_mitarbeiter_loeschen = False
    End If

' Die hier gef|fffd|llten Variablen sind allesamt als Globalvariablen im Modul1 definiert. Somit
' l|fffd|sst sich von jeder Stelle dieser Tabelle auf die Daten zugreifen.
Call ansicht_aus
eingabe_ueberwachung = 1
Worksheets("PLAN").Unprotect
Cells(akt_row, akt_col).Value = v_mitarbeitername
Cells(akt_row + 2, akt_col).Value = v_kartennummer
If Len(CStr(v_zusatzbezeichnung)) = 0 Then
    Cells(akt_row + 1, akt_col).Value = v_mita_an & " - " & v_mita_az
        Else
            Cells(akt_row + 1, akt_col).Value = v_mita_an & " - " & v_zusatzbezeichnung & " - " & v_mita_az
            End If
Cells(akt_row, 50).Value = v_nachtwache
Cells(akt_row, 51).Value = v_notiz
Cells(akt_row, 55).Value = v_brutto
Cells(akt_row, 57).Value = v_uges
Cells(akt_row, 58).Value = v_ugen
Cells(akt_row + 2, 51).Value = v_zusatzbezeichnung
Cells(akt_row + 1, 58).Value = v_hamburger_modell
Cells(akt_row + 2, 58).Value = v_Eigenschaft

' 3701 ; Urlaubswert|fffd|bersteuerung durch mitarbeitbezogenen Fixwert
If v_UrlaubOverride > 0 Then
    Cells(akt_row + 1, 57) = v_UrlaubOverride
    Else
    Cells(akt_row + 1, 57) = ""
End If

If Worksheets("DEFINITIONEN").Range("C284").Value = 1 Then
    Cells(akt_row + 2, akt_col + 1).Value = v_feiertagsfrei
    Else
    Cells(akt_row + 2, akt_col + 1).Value = ""
    End If
    
' Um das Problem mit Checkboxen zu umgehen wird hier NULL geschrieben
If v_zaehltmit > 0 Then
Cells(akt_row, 53).Value = 1
Else
Cells(akt_row, 53).Value = ""
End If
If v_zaehltmitn > 0 Then
Cells(akt_row + 1, 53).Value = 1
Else
Cells(akt_row + 1, 53).Value = ""
End If
If v_mita_az = "FLX" Then
Cells(akt_row, 54).Value = v_tagesstunden
Cells(akt_row + 1, 54).Value = v_SAstunden
Cells(akt_row + 2, 54).Value = v_SOstunden
' Um das Problem mit Checkboxen zu umgehen wird hier NULL geschrieben
If v_ftfrei > 0 Then
Cells(akt_row, 56).Value = v_ftfrei
Else
Cells(akt_row, 56).Value = ""
End If
Else
Cells(akt_row, 56).Value = ""
Cells(akt_row, 54).Value = ""
Cells(akt_row + 1, 54).Value = ""
Cells(akt_row + 2, 54).Value = ""
End If
If v_azftdoppel > 0 Then
Cells(akt_row, 47).Value = v_azftdoppel
Else
Cells(akt_row, 47).Value = ""
End If
' Urlaubswerte eintragen
Cells(akt_row, 57).Value = v_uges
Cells(akt_row, 58).Value = v_ugen
' Beenden
eingabe_ueberwachung = 0
Application.Cursor = xlDefault
Application.Calculate
If UCase(Left(Application.OperatingSystem, 3)) = "WIN" Then SendKeys Chr$(13)
If Worksheets("DEFINITIONEN").Range("c4") = 0 Then Call schutz_ein
Exit Sub

' Unter EINGABEHELFER wird hier die M|fffd|glichkeit zur Eingabe von Diensten |fffd|ber ein grafisches
' Interface bezeichnet. Dieser EINGABEHELFER stellt die einzige M|fffd|glichkeit dar v|fffd|llig frei
' Dienste und Termine einzutragen.
eingabehelfer:
' Die Dienstart wird hier auf den Wert F|fffd|NF gesetzt. Findet sich nach all den Programmschrit-
' ten keine Wertver|fffd|nderung, so heisst dies - NICHTS eingegeben.
dienstart = 5
' Einblendung des Dialogfelds - Programmablauf ist bis zum Klick von OK unterbrochen.
ActiveWorkbook.DialogSheets("PLANUNGSHELFER").Show
If dienstart = 5 Or dienstart = 0 Then
If ActiveWorkbook.DialogSheets("PLANUNGSHELFER").[SONDERDIENSTFORM].Value <> 10 Then
    dienstart = 2
        Else
            dienstart = 4
                End If
                    End If
' Es wurde keine Dienstform ausgew|fffd|hlt
If dienstart = 5 Then
If UCase(Left(Application.OperatingSystem, 3)) = "WIN" Then SendKeys Chr$(13)
Exit Sub
End If

' Blattschutz abschalten
' F|fffd|r die folgenden Programmschritte ist es erforderlich, dass ein Schutz der Tabelle komplett
' abgeschaltet ist.
ActiveSheet.Unprotect

' Der Langzeitplaneintrag soll gekickt werden
If dienstart = 6 Then
Cells(akt_row, akt_col).Interior.ColorIndex = xlNone
End If

' Es wurde 'KEIN DIENST' gew|fffd|hlt
If dienstart = 4 Or dienstart = 6 Then
Cells(akt_row, akt_col).Value = ""
Cells(akt_row, akt_col).ClearComments
Cells(akt_row + 2, akt_col).Value = ""
' Auch im Schattenplan wird ein m|fffd|glicher Eintrag gel|fffd|scht.
Cells(akt_row, akt_col + 62).Value = ""
Call schutz_ein
Exit Sub
End If
With DialogSheets("PLANUNGSHELFER")

If dienstart = 2 Then
Cells(akt_row, akt_col).ClearComments
If .[SONDERDIENSTFORM].Value = "10" Then Exit Sub
If Worksheets("DEFINITIONEN").Cells(107 + CByte(.[SONDERDIENSTFORM].Value), 5) <> "" Then
dienstkuerzel = Worksheets("DEFINITIONEN").Cells(107 + CByte(.[SONDERDIENSTFORM].Value), 5)
Else
dienstkuerzel = Worksheets("DEFINITIONEN").Range("C107")
End If
If Cells(akt_row, akt_col).Value = "" Then
Cells(akt_row, akt_col).Value = dienstkuerzel
Else
Select Case Worksheets("DEFINITIONEN").Range("C169").Value
Case 0
Case 1
Cells(akt_row, akt_col).Value = dienstkuerzel
Case 2
antwort = MsgBox("In der Zelle befindet sich bereits ein eingetragener Dienst, soll dieser |fffd|berschrieben werden? (NEIN = Sonderdienst als Zusatz schreiben)", vbYesNo, "HM?")
If antwort = vbYes Then Cells(akt_row, akt_col).Value = dienstkuerzel
End Select
End If
Cells(akt_row, akt_col + 62).Value = _
Worksheets("DEFINITIONEN").Cells(107 + _
CByte(.[SONDERDIENSTFORM].Value), 4)
If Worksheets("DEFINITIONEN").Cells(107 + CByte(.[SONDERDIENSTFORM].Value), 3) <> 0 Then
Cells(akt_row + 2, akt_col).Value = Worksheets("DEFINITIONEN").Cells(107 + _
CByte(.[SONDERDIENSTFORM].Value), 3)
End If
Cells(akt_row, akt_col).AddComment
Cells(akt_row, akt_col).Comment.Visible = False
geschrieben = CStr(Worksheets("DEFINITIONEN").Cells(107 + _
CByte(.[SONDERDIENSTFORM].Value), 4))
Cells(akt_row, akt_col).Comment.text " " & geschrieben
Cells(akt_row, akt_col).Comment.Shape.TextFrame.AutoSize = True
End If
' Es wurde eine eigene, freie Definition ausgew|fffd|hlt
If dienstart = 3 Then
Cells(akt_row, akt_col).ClearComments
Select Case Worksheets("DEFINITIONEN").Range("C169").Value
Case 0
If Cells(akt_row, akt_col).Value = "" Then Cells(akt_row, akt_col).Value = Worksheets("DEFINITIONEN").Range("C107")
Case 1
Cells(akt_row, akt_col).Value = Worksheets("DEFINITIONEN").Range("C107")
Case 2
antwort = MsgBox("In der Zelle befindet sich bereits ein eingetragener Dienst, soll dieser |fffd|berschrieben werden? (NEIN = Sonderdienst als Zusatz schreiben)", vbYesNo, "HM?")
If antwort = vbYes Then Cells(akt_row, akt_col).Value = Worksheets("DEFINITIONEN").Range("C107")
End Select
Cells(akt_row, akt_col + 62).Value = .[titel].Caption
Cells(akt_row, akt_col).AddComment
Cells(akt_row, akt_col).Comment.Visible = False
geschrieben = .[titel].Caption
Cells(akt_row, akt_col).Comment.text " " & geschrieben
Cells(akt_row, akt_col).Comment.Shape.TextFrame.AutoSize = True
If .[Zeitwert].Caption <> "00:00" Then
Cells(akt_row + 2, akt_col) = .[Zeitwert].Caption
Else
Cells(akt_row + 2, akt_col) = ""
End If
End If
End With

' Blattschutz einschalten
Call schutz_ein
If UCase(Left(Application.OperatingSystem, 3)) = "WIN" Then SendKeys Chr$(13)
End Sub

Sub Worksheet_Change(ByVal Target As Range)
' Pr|fffd|fung, ob ein automatischer Prozess l|fffd|uft
If eingabe_ueberwachung = 1 Then Exit Sub
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
With Worksheets("DEFINITIONEN")
' Pr|fffd|fung, ob automatische Berechnung m|fffd|glicherweise inaktiv
If Application.Calculation <> xlCalculationAutomatic Then
Application.Calculation = xlCalculationAutomatic
End If
' Dims
Dim akt_col As Long
Dim akt_row As Long
Dim wert As Variant
Dim bew_x As Long
Dim bew_y As Long
Dim a As Long
Dim b As Long
Dim c As Long
Dim standarddienst As String
Dim maxwert As Byte
Dim ausgelesen As String
Dim kommawert As Byte
Dim letztes_komma As Byte
Dim schritt As Byte
' Je nach Einstellung in den Optionen ist eine beliebige Bewegungsrichtung nach der
' gedr|fffd|ckten Eingabetaste m|fffd|glich.
If Application.MoveAfterReturnDirection = xlDown Then bew_y = -1
If Application.MoveAfterReturnDirection = xlUp Then bew_y = 1
If Application.MoveAfterReturnDirection = xlToLeft Then bew_x = -1
If Application.MoveAfterReturnDirection = xlToRight Then bew_x = 1
' Aktuelle Position der akvtiven Zelle definieren
akt_row = ActiveCell.Row
akt_col = ActiveCell.Column
' Wo wurde die |fffd|nderung durchgef|fffd|hrt
If akt_col < 4 Or akt_col > 36 Then Exit Sub
If akt_row < 9 Or akt_row > 169 Then Exit Sub
If akt_row Mod 3 <> 1 Then Exit Sub
' Wert der zuvor ge|fffd|nderten Zelle auslesen
wert = Cells(akt_row + bew_y, akt_col + bew_x).Value
' Pr|fffd|fung ob ein Multiplikator vorliegt
If .Range("C162") <> "0" And Len(wert) >= 3 Then
If Left$(wert, 1) = Left$(.Range("C162"), 1) Then
eingabe_ueberwachung = 1
Call ansicht_aus
If Asc(Mid$(wert, 2, 1)) >= 49 And Asc(Mid$(wert, 2, 1)) <= 51 And _
Asc(Mid$(wert, 3, 1)) >= 48 And Asc(Mid$(wert, 3, 1)) <= 58 Then
' 2stellige Eingabe gefunden
Call multiplikator(Mid$(wert, 2, 2), akt_row + bew_y, akt_col + bew_x, _
Right$(wert, Len(wert) - 3), False, 0)
Else
Call multiplikator(Mid$(wert, 2, 1), akt_row + bew_y, akt_col + bew_x, _
Right$(wert, Len(wert) - 2), False, 0)
End If
End If
eingabe_ueberwachung = 0
Call ansicht_ein
End If

' Pr|fffd|fung ob ein 'Durchschreiber' / Standarddienst vorliegt
If .Range("C178") <> "0" And Len(wert) >= 2 Then
If Left$(wert, 1) = Left$(.Range("C178"), 1) Then
eingabe_ueberwachung = 1
Call ansicht_aus
If Mid$(wert, 2, 1) <> Left$(.Range("C178"), 1) Then

' Finden sich Kommas?
For c = 2 To Len(wert)
If Mid$(wert, c, 1) = "," Then kommawert = 1
Next c

' Wurde ein Komma entdeckt so wird davon ausgegangen, dass alle Dienste durch Kommas geteilt wurden
If kommawert = 1 Then
' Es muss noch ein Komma angef|fffd|gt werden, sonst wird der letzte Dienst gar nicht ausgegeben
wert = wert & ","
' Erstkommawert setzen
letztes_komma = 1
' Die Laufvariable c kann nicht mehr als Schrittmesser genutzt werden, darum schritt
schritt = 0
    For c = 2 To Len(wert)
    If Mid$(wert, c, 1) = "," Then
        Call multiplikator(1, akt_row + bew_y, akt_col + bew_x + schritt, Mid$(wert, letztes_komma + 1, c - (letztes_komma + 1)), False, 0)
        letztes_komma = c
        schritt = schritt + 1
             Else
    End If
    Next c
Else
' Keine Komma gefunden, somit jeder Tag ein Buchstabe
For c = 2 To Len(wert)
Call multiplikator(1, akt_row + bew_y, akt_col + bew_x + c - 2, Mid$(wert, c, 1), False, 0)
Next c
End If

Else
' Standarddienst
maxwert = CInt(Mid$(wert, 3, 1))
If maxwert > 3 Then maxwert = 3
If maxwert < 1 Then maxwert = 1
standarddienst = .Cells(178 + maxwert, 3)
For c = 1 To Len(.Cells(178 + CInt(Mid$(wert, 3, 1)), 3))
Call multiplikator(1, akt_row + bew_y, akt_col + bew_x + c - 1, Mid$(standarddienst, c, 1), False, 0)
Next c
End If
eingabe_ueberwachung = 0
Call ansicht_ein
End If
End If

' Wurde ein Neubeginn einer Dienstphase festgestellt?
If .Range("C186").Value = wert Then
    eingabe_ueberwachung = 1
    ' Feststellung wieviele Diensttage noch anstehen
    c = 0
    For b = (akt_col + 1) To (34 - CInt(Range("AO3").Value))
    ausgelesen = Weekday(Cells(5, b).Value)
        If ausgelesen >= 2 And ausgelesen <= 6 Then
        If Cells(7, b) <> "ft" Then c = c + 1
        If Cells(7, b) = "ft" And Cells(akt_row - 1, 56) = "1" Then c = c + 1
        End If
    ' Es k|fffd|nnte sein, dass die Dienstphase innerhalb des gleichen Monats endet!
    ausgelesen = Cells(akt_row - 1, b)
        If ausgelesen = .Range("C187") Then
            If Weekday(Cells(5, b).Value) >= 2 And Weekday(Cells(5, b).Value) <= 6 Then c = c - 1
                If c < 0 Then c = 0
                    Exit For
                        End If
    Next
    ' Wie hoch ist den das Tagessoll? #T#
   Range("AU4").Value = Cells(akt_row - 1, 47).Value
   If Range("AU4").Value = 0 Then Range("AU4").Value = 1
   
   ' MsgBox (Cells(akt_row - 1, 54).Value)
   ' MsgBox (Cells(akt_row, 54).Value)
   ' MsgBox (Cells(akt_row + 1, 54).Value)
    ' Hier wird das individuelle Tagessoll f|fffd|r Werktage ermittelt
    ' Was noch fehlt: Gibt es eine Regelung f|fffd|r SA/SO-Individualsoll gr|fffd||fffd|er 00:00
    
    If Cells(akt_row - 1, 54).Value <> "" Then
        Range("AT5").Value = Cells(akt_row - 1, 54).Value
            MsgBox (Cells(akt_row, 54).Value + Cells(akt_row + 1, 54).Value)
                If Cells(akt_row, 54).Value + Cells(akt_row + 1, 54).Value = "00:0000:00" Or Cells(akt_row, 54).Value + Cells(akt_row + 1, 54).Value = "" Then
                    Else
                    MsgBox ("Es wurden individuelle Sollzeiten f|fffd|r SA/SO entdeckt. Die Berechnung der Dienstphase ist im Moment nicht richtig!")
                End If
            Else
                Range("AT5").Value = .Range("C185").Value * Cells(akt_row - 1, 45).Value
                    End If
    Range("AT4").Value = c
    If Range("AU5").Value <> Cells(akt_row, 3).Value Then Cells(akt_row, 3).Value = Range("AU5").Value
    eingabe_ueberwachung = 0
    b = 0
End If

' Wurde das Ende einer Dienstphase festgestellt?
If .Range("C187").Value = wert Then
    eingabe_ueberwachung = 1
    ' Feststellung ob mit dem 1. des Monats begonnen werden soll, oder ob ein Neubeginn eines Dienstphase gefunden wird
    c = 0
    For b = (akt_col - 1) To 4 Step -1
    ausgelesen = Weekday(Cells(5, b).Value)
        If ausgelesen >= 2 And ausgelesen <= 6 Then
        If Cells(7, b) <> "ft" Then c = c + 1
        If Cells(7, b) = "ft" And Cells(akt_row - 1, 56) = "1" Then c = c + 1
        End If
    ' Es k|fffd|nnte sein, dass die Dienstphase innerhalb des gleichen Monats beginnt
    ausgelesen = Cells(akt_row - 1, b)
        If ausgelesen = .Range("C186") Then
            If Weekday(Cells(5, b).Value) >= 2 And Weekday(Cells(5, b).Value) <= 6 Then c = c - 1
                If c < 0 Then c = 0
                Exit For
                    End If
    Next
       ' Wie hoch ist den das Tagessoll?
   Range("AU4").Value = Cells(akt_row - 1, 47).Value
   If Range("AU4").Value = 0 Then Range("AU4").Value = 1
   
    If Cells(akt_row - 1, 54).Value <> "" Then
        Range("AT5").Value = Cells(akt_row - 1, 54).Value
            Else
                Range("AT5").Value = .Range("C185").Value * Cells(akt_row - 1, 45).Value
                    End If
    Range("AT4").Value = c
    If Range("AU5").Value <> Cells(akt_row, 3).Value Then Cells(akt_row, 3).Value = Range("AU5").Value
    eingabe_ueberwachung = 0

End If

' <> "" und ein FT -> 2xAZ wenn gew|fffd|nscht
If wert <> "" And Cells(7, akt_col + bew_x).Value = "ft" And Left$(wert, 1) <> _
Left$(.Range("C162"), 1) And Cells(akt_row + bew_y, 47).Value <> "1" Then
eingabe_ueberwachung = 1
Call feiertag(akt_row + bew_y, akt_col + bew_x, wert, 0)
eingabe_ueberwachung = 0
End If

' morgen ft ; heute nw ; heute kein ft
If Cells(7, akt_col + bew_x + 1).Value = "ft" And _
Left$(wert, 1) <> Left$(.Range("C162"), 2) And _
Cells(7, akt_col + bew_x).Value <> "ft" And _
Cells(akt_row + bew_y, 47).Value <> "1" Then
For b = 43 To 48
If Worksheets("DIENSTE").Cells(b, 5).Value = wert Then
eingabe_ueberwachung = 1
Call feiertag(akt_row + bew_y, akt_col + bew_x, wert, 2)
End If
Next b
End If

' 31ster ; heute nw ; pr|fffd|fen morgen ft
If akt_col = 34 And Range("AO3").Value = 0 And Cells(akt_row + bew_y, 47).Value <> "1" Then
For b = 43 To 48
If Worksheets("DIENSTE").Cells(b, 5).Value = wert Then
eingabe_ueberwachung = 1
Call feiertag(akt_row + bew_y, akt_col + bew_x, wert, 3)
End If
Next b
End If

' Wurde eine Sonderdienstform hinterlegt?
eingabe_ueberwachung = 1
ActiveSheet.Unprotect
Call sonderdienst(akt_row + bew_y, akt_col + bew_x + 1, CStr(wert))
Call schutz_ein
' Ende
eingabe_ueberwachung = 0
End With
Exit Sub
' Fehlerhandler
Fehler:
MsgBox "Es ist ein Fehler aufgetreten : " & Err.Description
eingabe_ueberwachung = 0
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
' Schauen ob ein automatischer Prozess l|fffd|uft
If plan_killer_aktiv = 1 Then Exit Sub
Dim akt_col As Long
Dim akt_row As Long
Dim laufvariable As Long
Dim wert As Variant
Dim antwort As String
Dim antwort_wuensche As String
Dim notw_a As Long
Dim notw_b As Long
Dim notw_c As Long
Dim notw_d As Long
Dim notw_e As Long
Dim notw_w As Long
Dim regel(7) As Long ' Die Anzahl von Regeln (Gern, Ungern etc.)
Dim a As Byte ' Laufvariable als BYTE
Dim b As Byte ' Marker - wird eine Regel gefunden = 1 sonst 0
Dim akt_tag As Long ' Ausgelesen der aktuelle Wochentag des Datums
Dim regel_zaehler As Byte ' Laufvariable als BYTE
Dim Dienst(7) As Variant ' kleines Array f|fffd|r die sieben m|fffd|glichen Dienstformen
Dim diensttyp As Byte ' Welcher Art ist der Dienst Fr|fffd|h, Sp|fffd|t, Zwischen...
Dim team_bereits_durchgefuehrt As Boolean
With Worksheets("DEFINITIONEN")
' Aktuelle Position der akvtiven Zelle definieren
akt_row = ActiveCell.Row
akt_col = ActiveCell.Column

' Wurde eine |fffd|nderung au|fffd|erhalb Spalte 'B' durchgef|fffd|hrt ?
If akt_col <> 2 Then GoTo pruefung2
If akt_row < 9 Or akt_row > 169 Then Exit Sub
If akt_row Mod 3 <> 1 Then Exit Sub
' Wenn der Programmverlauf hier noch nicht weitergesprungen ist, so wurde eine
' |fffd|nderung beim STUNDENKONTO-|fffd|bertrag durchgef|fffd|hrt. Warum ist dies besonders
' hervorzuheben ? Die Eingabe von negativen STUNDEN:MINUTEN Werten ist mit Excel
' eigentlich nicht m|fffd|glich. Mit dem Multiplikator -1 und dem Rechnen auf Basis
' von 1904 (Extras -> Optionen -> Berechnen) ist dies jedoch mit VBA m|fffd|glich.
wert = Cells(akt_row - 1, 2)
If wert = "" Then wert = 0
If Left$(wert, 1) <> "-" Then
Cells(akt_row - 1, 98).Value = wert
Else
Cells(akt_row - 1, 99).Value = Right$(wert, Len(wert) - 1)
Cells(akt_row - 1, 98).Value = Cells(akt_row - 1, 99).Value * -1
Cells(akt_row - 1, 99) = 0
End If
Exit Sub

' TEAMSITZUNG
pruefung2:
If akt_row = 9 And .Cells(95, 3).Value <> "" And akt_col < 35 Then '3641
    ' Variablen einlesen
    team_key = .Cells(95, 3).Value
    team_as = .Cells(96, 3).Value
    team_wert = .Cells(97, 3).Value
    ' Pr|fffd|fung ob diese Teamsitzung bereits ausgerollt wurde
    For a = 10 To 169 Step 3
    If Cells(a, akt_col).Value = team_as Then
        team_bereits_durchgefuehrt = True
        Exit For
        End If
    Next a
    If Cells(akt_row - 1, akt_col).Value = team_key And team_bereits_durchgefuehrt = False Then
    ' Sicherheitsabfrage
    antwort = MsgBox("Soll eine Teamsitzung an diesem Tag eingesetzt werden?", vbYesNo, "Frage!")
    If antwort = 7 Then Exit Sub
    ' |fffd|berwachung der aktuellen Eingaben deaktivieren
    eingabe_ueberwachung = 1
    ' Blattschutz abschalten / Beschleunigung an
    Call ansicht_aus
    ' Teamsitzungswerte eintragen
    For laufvariable = 9 To 168 Step 3
    ' Analyse des vorhandenen Dienstes
    diensttyp = 0
    For a = 3 To 50
    If Cells(laufvariable, akt_col).Value = Worksheets("DIENSTE").Cells(a, 5) And _
        Worksheets("DIENSTE").Cells(a, 6) = 1 Then diensttyp = a
    Next a
    ' Ist vielleicht ein Sonderdienst geplant
    If diensttyp = 0 And Cells(laufvariable, akt_col).Value <> "" Then
    For a = 108 To 116
    If Cells(laufvariable, akt_col).Value = .Cells(a, 5).Value And .Cells(a, 5).Value <> "" Then diensttyp = 99
    Next a
    End If
    ' Sonderdienst |fffd|berspringen
    If diensttyp = 99 Then GoTo sprungmarke
    ' Sp|fffd|tdienstreglement
    If .Cells(99, 3).Value >= 1 And diensttyp >= 35 And diensttyp <= 42 Then GoTo sprungmarke
    ' Fr|fffd|hdienstreglement
    If .Cells(99, 3).Value = 2 And diensttyp >= 3 And diensttyp <= 18 Then GoTo sprungmarke
    ' Zwischendienstreglement
    If .Cells(190, 3).Value = 0 And diensttyp >= 19 And diensttyp <= 26 Then GoTo sprungmarke
    ' Zusatzdienstreglement
    If .Cells(191, 3).Value = 0 And diensttyp >= 27 And diensttyp <= 34 Then GoTo sprungmarke
    ' Urlauber filtern
    If Cells(laufvariable, akt_col).Value = .Cells(24, 3).Value Then GoTo sprungmarke
    ' Nachtwachenurlaub filtern
    If Cells(laufvariable, akt_col).Value = .Cells(189, 3).Value Then GoTo sprungmarke
    ' Krankheit abfrangen
    If Cells(laufvariable, akt_col).Value = "K" Then GoTo sprungmarke
    ' Nachtw|fffd|chterreglement
    If .Cells(100, 3).Value <> 1 And diensttyp >= 43 Then GoTo sprungmarke
    ' Wenn kein Name oder Name LEER ist |fffd|berspringen
    If Cells(laufvariable, 1).Value = "" Or Cells(laufvariable, 1) = "Leer" Then GoTo _
    sprungmarke
    ' Pr|fffd|fen ob Krankenpflegesch|fffd|ler in die TS kommen
    If Left$(Cells(laufvariable + 1, 1).Value, 3) = "KPS" And _
    .Cells(101, 3).Value = 0 Then GoTo sprungmarke
    ' Pr|fffd|fen ob ZDL in die TS kommen
    If Left$(Cells(laufvariable + 1, 1).Value, 3) = "ZDL" And _
    .Cells(102, 3).Value = 0 Then GoTo sprungmarke
    Cells(laufvariable, akt_col).Select
    Cells(laufvariable + 1, akt_col).Value = team_as
    Cells(laufvariable + 2, akt_col).Value = team_wert

sprungmarke:
Next laufvariable
' Zelle unterhalb der Eingabezelle selektieren
Cells(akt_row + 1, akt_col).Select
' Blattschutz wieder aktivieren
Call schutz_ein
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.Calculate
End If
marke2:
Application.Cursor = xlDefault 'Normal
End If
' In der Statusanzeige wird der Bedarf f|fffd|r den Tagesdienst angezeigt.
statusanzeiger:
If plan_killer_aktiv = 1 Then Exit Sub
' Pr|fffd|fung, ob |fffd|berhaupt eine Planungszelle bearbeitet wird
eingabe_ueberwachung = 0
If akt_row < 9 Or akt_row > 169 Then Exit Sub
If akt_col < 4 Or akt_col > 34 Then Exit Sub
' If akt_row Mod 3 <> 0 Then Exit Sub
' Pr|fffd|fung ob die Anzeige in der Statuszeile |fffd|berhaupt gew|fffd|nscht wird
If .Cells(157, 3).Value <> 1 Then Exit Sub
' |fffd|berwachung aus
eingabe_ueberwachung = 1
' Errechnung, ob der Tagesbedarf durch die aktuelle Besetzung abgedeckt wurde
notw_a = Cells(196, akt_col + 62).Value - Cells(175, akt_col).Value
notw_b = Cells(199, akt_col + 62).Value - Cells(178, akt_col).Value
notw_c = Cells(197, akt_col + 62).Value - Cells(176, akt_col).Value
notw_d = Cells(201, akt_col + 62).Value - Cells(180, akt_col).Value
notw_e = Cells(200, akt_col + 62).Value - Cells(179, akt_col).Value
notw_w = Cells(198, akt_col + 62).Value - Cells(177, akt_col).Value
' Aufbau des Ausgabestrings
If notw_a <> 0 Then
antwort = antwort & " (" & Worksheets("DEFINITIONEN").Range("C195").Value & " : " & CStr(notw_a) & ") "
End If
If notw_b <> 0 Then
antwort = antwort & " (" & Worksheets("DEFINITIONEN").Range("C196").Value & " : " & CStr(notw_b) & ") "
End If
If notw_c <> 0 Then
antwort = antwort & " (" & Worksheets("DEFINITIONEN").Range("C197").Value & " : " & CStr(notw_c) & ") "
End If
If notw_d <> 0 Then
antwort = antwort & " (" & Worksheets("DEFINITIONEN").Range("C198").Value & " : " & CStr(notw_d) & ") "
End If
If notw_e <> 0 Then
antwort = antwort & " (" & Worksheets("DEFINITIONEN").Range("C199").Value & " : " & CStr(notw_e) & ") "
End If
If notw_w <> 0 Then
antwort = antwort & " (" & Worksheets("DEFINITIONEN").Range("C200").Value & " : " & CStr(notw_w) & ") "
End If
' Mehr U als erlaubt?
If .Range("C168") > 0 Then
If Cells(akt_row, 59).Value < 0 Then
antwort = antwort & " Achtung! Zu viele Urlaubstage genommen !"
antwort_wuensche = antwort_wuensche & "Zu viele Urlaubstage genommen! "
If .Range("C168") = 2 Then Beep
If .Range("C168") = 3 Then Call hilfsassistent("Warnung!", "Die maximale Anzahl von Urlaubstagen wurde |fffd|berschritten.")
End If
End If
If antwort = "" Then antwort = "Alle Solldienste komplett besetzt. "
' Wunschwert auslesen
regel(1) = CInt(Left$(Cells(akt_row - (akt_row Mod 3), 49).Value, 3))
regel(5) = CInt(Right$(Cells(akt_row - (akt_row Mod 3), 49).Value, 3))
regel(2) = CInt(Mid$(Cells(akt_row - (akt_row Mod 3), 49).Value, 5, 3))
regel(3) = CInt(Mid$(Cells(akt_row - (akt_row Mod 3), 49).Value, 9, 3))
regel(4) = CInt(Mid$(Cells(akt_row - (akt_row Mod 3), 49).Value, 13, 3))
' Pr|fffd|fung ob |fffd|berhaupt eine Regel f|fffd|r diesen Mitabeiter vorliegt, sollte dies nicht
' der Fall sein, so kann sich das Programm den weiteren Verlauf sparen.
For a = 1 To 5
If regel(a) <> 0 Then b = 1
Next a
' Es wurde gar keine Regel f|fffd|r den Mitarbeiter gefunden
If b = 0 Then GoTo fertig
' Was haben wir denn heute |fffd|berhaupt f|fffd|r einen Tag ?
akt_tag = Weekday(Cells(5, akt_col).Value)
' Ist dies vielleicht ein Feiertag ?
If Cells(7, akt_col).Value = "ft" Then akt_tag = 8
' Dienstnamen aus dem Schattenkopiebereich auslesen, hier waren einst die Dienstnamen
' selbst hinterlegt - jetzt nur noch die |fffd|bergeordneten Bezeichner (|fffd|nderung mit 3.5)
For a = 1 To 7
Dienst(a) = .Cells(a + 17, 8).Value
Next a
' Alle f|fffd|nf m|fffd|glichen Regeln m|fffd|ssen |fffd|berpr|fffd|ft werden
For regel_zaehler = 1 To 5
' Findet sich gar kein Regelwert, so springt das Programm gleich weiter
If regel(regel_zaehler) < 100 Then GoTo sprungmarke1
' Wunsch SO
If regel(regel_zaehler) >= 100 And regel(regel_zaehler) < 200 And akt_tag = 1 Then
GoSub analyser
End If
' Wunsch MO
If regel(regel_zaehler) >= 200 And regel(regel_zaehler) < 300 And akt_tag = 2 Then
GoSub analyser
End If
' Wunsch DI
If regel(regel_zaehler) >= 300 And regel(regel_zaehler) < 400 And akt_tag = 3 Then
GoSub analyser
End If
' Wunsch MI
If regel(regel_zaehler) >= 400 And regel(regel_zaehler) < 500 And akt_tag = 4 Then
GoSub analyser
End If
' Wunsch DO
If regel(regel_zaehler) >= 500 And regel(regel_zaehler) < 600 And akt_tag = 5 Then
GoSub analyser
End If
' Wunsch FR
If regel(regel_zaehler) >= 600 And regel(regel_zaehler) < 700 And akt_tag = 6 Then
GoSub analyser
End If
' Wunsch SA
If regel(regel_zaehler) >= 700 And regel(regel_zaehler) < 800 And akt_tag = 7 Then
GoSub analyser
End If
' Wunsch FT
If regel(regel_zaehler) >= 800 And regel(regel_zaehler) < 900 And akt_tag = 8 Then
GoSub analyser
End If
' Wunsch Jeden Tag
If regel(regel_zaehler) >= 900 And regel(regel_zaehler) < 1000 Then
GoSub analyser
End If
' Schleifenende
sprungmarke1:
Next regel_zaehler
' Ausgabe vorbereiten | Programmablauf hier abbrechen
fertig:
' Variable Pr|fffd|fungen einblenden
If Worksheets("DEFINITIONEN").Range("C293").Value = 1 Then antwort = antwort & " | PR1: " & Worksheets("PLAN").Cells(184, akt_col).Value
If Worksheets("DEFINITIONEN").Range("C294").Value = 1 Then antwort = antwort & " | PR2: " & Worksheets("PLAN").Cells(185, akt_col).Value
If Worksheets("DEFINITIONEN").Range("C295").Value = 1 Then antwort = antwort & " | PR3: " & Worksheets("PLAN").Cells(186, akt_col).Value
' Anzeige ausgeben
Application.StatusBar = antwort
' DPE3 Helper funktioniert nicht f|fffd|r Macintosh
If UCase(Left(Application.OperatingSystem, 3)) = "WIN" Then
If Worksheets("DEFINITIONEN").Range("C194") = 1 Then

    If dpe3helfer.Visible = False Then
        dpe3helfer.Show
        dpe3helfer.Left = Worksheets("DEFINITIONEN").Range("C278").Value
        dpe3helfer.Top = Worksheets("DEFINITIONEN").Range("C279").Value
            End If
            
    dpe3helfer.Label_A.Caption = " " & Worksheets("DEFINITIONEN").Range("C195").Value & " : "
    dpe3helfer.Label_B.Caption = " " & Worksheets("DEFINITIONEN").Range("C196").Value & " : "
    dpe3helfer.Label_C.Caption = " " & Worksheets("DEFINITIONEN").Range("C197").Value & " : "
    dpe3helfer.Label_D.Caption = " " & Worksheets("DEFINITIONEN").Range("C198").Value & " : "
    dpe3helfer.Label_E.Caption = " " & Worksheets("DEFINITIONEN").Range("C199").Value & " : "
    dpe3helfer.Label_W.Caption = " " & Worksheets("DEFINITIONEN").Range("C200").Value & " : "
    If Worksheets("DEFINITIONEN").Range("C314").Value <> " " Then
        dpe3helfer.PRUEF1.Caption = " " & Worksheets("DEFINITIONEN").Range("C314").Value & " : "
        dpe3helfer.PRUEF1W.Caption = Worksheets("PLAN").Cells(184, akt_col).Value
        Else
        dpe3helfer.PRUEF1.Caption = " "
    End If
    If Worksheets("DEFINITIONEN").Range("C315").Value <> " " Then
        dpe3helfer.PRUEF2.Caption = " " & Worksheets("DEFINITIONEN").Range("C315").Value & " : "
        dpe3helfer.PRUEF2W.Caption = Worksheets("PLAN").Cells(185, akt_col).Value
        Else
        dpe3helfer.PRUEF2.Caption = " "
    End If
    If Worksheets("DEFINITIONEN").Range("C316").Value <> " " Then
        dpe3helfer.PRUEF3.Caption = " " & Worksheets("DEFINITIONEN").Range("C316").Value & " : "
        dpe3helfer.PRUEF3W.Caption = Worksheets("PLAN").Cells(186, akt_col).Value
        Else
        dpe3helfer.PRUEF3.Caption = " "
    End If
    If Worksheets("DEFINITIONEN").Range("C317").Value <> " " Then
        dpe3helfer.PRUEF4.Caption = " " & Worksheets("DEFINITIONEN").Range("C317").Value & " : "
        dpe3helfer.PRUEF4W.Caption = Worksheets("PLAN").Cells(187, akt_col).Value
        Else
        dpe3helfer.PRUEF4.Caption = " "
    End If
    If Worksheets("DEFINITIONEN").Range("C318").Value <> " " Then
        dpe3helfer.PRUEF5.Caption = " " & Worksheets("DEFINITIONEN").Range("C318").Value & " : "
        dpe3helfer.PRUEF5W.Caption = Worksheets("PLAN").Cells(188, akt_col).Value
        Else
        dpe3helfer.PRUEF5.Caption = " "
    End If
    If Worksheets("DEFINITIONEN").Range("C319").Value <> " " Then
        dpe3helfer.PRUEF6.Caption = " " & Worksheets("DEFINITIONEN").Range("C319").Value & " : "
        dpe3helfer.PRUEF6W.Caption = Worksheets("PLAN").Cells(189, akt_col).Value
        Else
        dpe3helfer.PRUEF6.Caption = " "
    End If
    dpe3helfer.Anzahl_A.Caption = " " & CStr(notw_a)
    dpe3helfer.Anzahl_B.Caption = " " & CStr(notw_b)
    dpe3helfer.Anzahl_C.Caption = " " & CStr(notw_c)
    dpe3helfer.Anzahl_D.Caption = " " & CStr(notw_d)
    dpe3helfer.Anzahl_E.Caption = " " & CStr(notw_e)
    dpe3helfer.Anzahl_W.Caption = " " & CStr(notw_w)
    dpe3helfer.Label_I.Caption = " " & antwort_wuensche
    dpe3helfer.Label_I2.Caption = " " & Cells(5, akt_col).Value & " (" & Wochentag(Cells(6, akt_col).Value2) & ")"
    If Cells(7, akt_col).Value = "ft" Then
        dpe3helfer.Label_I3.Caption = " " & Cells(7, akt_col).Comment.text
            Else
                dpe3helfer.Label_I3.Caption = " " & Cells(7, akt_col).Value
                    End If
    End If
    End If
eingabe_ueberwachung = 0
End With
Exit Sub
' Es wurde bereits festgestellt, dass der Mitarbeiter f|fffd|r diesen Tag einen Wunscheintrag
' hat. Das wird hier analysiert und entsprechend im Text und per Grafik angezeigt.
analyser:
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "0" Then GoSub keinen_dienst
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "1" Then GoSub ungern_dienst
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "2" Then GoSub gern_dienst
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "3" Then GoSub sehr_gern_dienst
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "4" Then GoSub ungern_dienstform
If Mid$(CStr(regel(regel_zaehler)), 2, 1) = "5" Then GoSub gern_dienstform
Return
keinen_dienst:
antwort = antwort & " [Dienst--]"
antwort_wuensche = antwort_wuensche & "[Dienst--] "
Return
ungern_dienst:
antwort = antwort & " [Dienst-]"
antwort_wuensche = antwort_wuensche & "[Dienst-] "
Return
gern_dienst:
antwort = antwort & "[ Dienst+]"
antwort_wuensche = antwort_wuensche & "[Dienst+] "
Return
sehr_gern_dienst:
antwort = antwort & " [Dienst++]"
antwort_wuensche = antwort_wuensche & "[Dienst++] "
Return
ungern_dienstform:
antwort = antwort & " [Ungern: " & _
Dienst(CInt(Right$(regel(regel_zaehler), 1))) & "]"
antwort_wuensche = antwort_wuensche & "[Ungern: " & _
Dienst(CInt(Right$(regel(regel_zaehler), 1))) & "] "
Return
gern_dienstform:
antwort = antwort & " [Gern: " & _
Dienst(CInt(Right$(regel(regel_zaehler), 1))) & "]"
antwort_wuensche = antwort_wuensche & "[Gern: " & _
Dienst(CInt(Right$(regel(regel_zaehler), 1))) & "] "
Return
Exit Sub
Fehler:
MsgBox Err.Description
End Sub
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


' Pr|fffd|fungen der Stammdaten bei |fffd|nderung im Fenster
Private Sub Worksheet_Change(ByVal Target As Range)
Call definitions_pruefung
End Sub

Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True





Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True





Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



Option Explicit
Private Sub Worksheet_Deactivate()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
' Setzt eventuell fehlende LEER-Markierungen in den DIENSTE-Defintionen zur|fffd|ck auf den Unterstrich "_"
Dim laufvariable As Long
Dim ausgelesen As Variant
Dim maxlaenge As Variant
Dim laengenantwort As Variant
For laufvariable = 3 To 50
ausgelesen = Worksheets("DIENSTE").Cells(laufvariable, 5).Value
    If ausgelesen = "" Then Worksheets("DIENSTE").Cells(laufvariable, 5).Value = "_"
    If Len(ausgelesen) > maxlaenge Then maxlaenge = Len(ausgelesen)
Next laufvariable
If maxlaenge > Worksheets("DEFINITIONEN").Range("C91").Value And Worksheets("DEFINITIONEN").Range("C288").Value = 1 Then
    laengenantwort = MsgBox("Sie haben einen oder mehrere Dienste definiert deren Bezeichnungsl|fffd|nge die maximale " _
    & "L|fffd|nge des Sonderparameters C91 |fffd|bersteigt. Sofern dies eine gew|fffd|nschte Konfiguration ist " _
    & "k|fffd|nnen Sie diesen Hinweis ignorieren. Ansonsten empfiehlt sich die Erh|fffd|hung des Parameters " _
    & "in C91. Soll dieser Hinweis k|fffd|nftig weiterhin angezeigt werden?", 292, "DPE3 | Nachfrage")
    If laengenantwort = vbNo Then Worksheets("DEFINITIONEN").Range("C288").Value = 0
    End If
Exit Sub
Fehler:
MsgBox Err.Description
End Sub
Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Uebernahme"
Option Explicit

Sub para_uebernahme()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
Worksheets("PLAN").Select
Dim antwort As String
Dim dversion As String
Dim pversion As Single
Dim neu_plan As Variant
Dim alt_plan As Variant
Dim datop As Variant
Dim a As Byte
Dim ausgelesen As String
Dim schnitt As String
Dim trifftzu As Byte

If sig_versionswechsel = False Then
antwort = MsgBox("Soll die |fffd|bernahme aus einem alten Plan durchgef|fffd|hrt werden ? " _
& vbCrLf & vbCrLf & "Innerhalb Version 3 werden alle bekannten Parameter aus dem alten Plan |fffd|bernommen. " _
& "Aus der Version 2 k|fffd|nnen die Mitarbeiterparameter |fffd|bernommen werden. Bevor Sie hier " _
& "mit 'JA' weitermachen sollten Sie eine Sicherungskopie machen und die Hilfetexte gelesen " _
& "haben.", 36, "DPE3 | Antwort erforderlich")
If antwort = "7" Then Exit Sub
' |fffd|ffnen des alten Plans vorbereiten
datop = Application.GetOpenFilename("")
If datop = False Then Exit Sub
Else
datop = sig_versionswechsel_altdatei
End If

' |fffd|berwachung aus
eingabe_ueberwachung = 1
Application.EnableEvents = False
Call ansicht_aus
' den Namen des aktuellen (neuen) Plans auslesen
neu_plan = ActiveWorkbook.Name
' |fffd|ffnen des alten Plans einleiten
    Workbooks.Open Filename:=datop
    alt_plan = ActiveWorkbook.Name
    Windows(alt_plan).Activate
    Worksheets("DEFINITIONEN").Activate
    dversion = Left$(Cells(2, 3), 1)
    If Right$(Cells(2, 3), 1) <> ")" Then
    pversion = Cells(2, 3)
    Else
    dversion = "3.2"
    End If
    If Cells(2, 3) = "3.204" Then dversion = "3.2"
    If Left$(Range("E18").Value, 10) = "Version 2." Then dversion = "2"
    If dversion <> "3" And dversion <> "2" Then
    Call hilfsassistent("Fehler!", "Es konnte nicht mit Sicherheit die Version der Ursprungsdatei festgestellt werden. Die Versionskennung in der Datei darf keine Klammern enthalten! Dieser Vorgang wird nun abgebrochen!")
    Call ansicht_ein
    sig_versionswechsel = False
    Exit Sub
    End If
    
    Windows(neu_plan).Activate
    ActiveSheet.Unprotect
    Columns("AL:IV").Select
    Selection.EntireColumn.Hidden = False
    
    Windows(alt_plan).Activate
    Worksheets("PLAN").Activate
    
    If pversion >= 3400 Then Range("A9:A170").Select
    If pversion >= 3204 And pversion <= 3399 Then Range("A9:A98").Select
    If pversion <= 3203 Then Range("A9:A74").Select
    
    ' Monat des alten Plans einspeichern
    gewaehlter_monat = Range("D5")
    
    Selection.Copy
    Windows(neu_plan).Activate
    Range("A9").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    If dversion = "2" Then
    Sheets("PLAN").Select
    Columns("AM:IV").Select
    Selection.EntireColumn.Hidden = True
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
    Call ansicht_ein
    MsgBox "|fffd|bernahme der Mitarbeiterstammdaten aus der Version 2 vollst|fffd|ndig.", vbInformation, "OK"
    Exit Sub
    End If
    Windows(alt_plan).Activate
    Application.CutCopyMode = False
    ActiveSheet.Unprotect
    Columns("AL:IV").Select
    Selection.EntireColumn.Hidden = False
  
    ' Daten vom alten 'PLAN' einlesen und kopieren
    If pversion = 322 Or pversion <= 3221 Then Range("AW8:AX98").Select
    If pversion >= 3222 And pversion <= 3399 Then Range("AW8:BF98").Select
    If pversion >= 3400 Then Range("AW8:BF170").Select
        Selection.Copy
        Windows(neu_plan).Activate
        Range("AW8").Select
        Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    
    Worksheets("DEFINITIONEN").Select
    
    ' Pr|fffd|fung ob ein Wochenturnus zu finden ist
    If pversion <= 3420 Then
    For a = 10 To 169 Step 3
    ausgelesen = Worksheets("PLAN").Cells(a, 1).Value
    If Right$(ausgelesen, 3) = " WT" Then
    schnitt = Left$(ausgelesen, Len(ausgelesen) - 3)
    Worksheets("PLAN").Cells(a, 1).Value = schnitt & "1/1"
    trifftzu = 1
    End If
    Next a
    If trifftzu <> 0 Then MsgBox "In Ihrem urspr|fffd|nglichen Plan waren Mitarbeiter als 'Wochenturnus' (Beamte) deklariert worden. Dieser Typ wird nicht mehr unterst|fffd|tzt, darum wurden die betreffenden Mitarbeiter auf '1/1' (Vollzeitkraft) umgestellt. Sie k|fffd|nnen in der Tabelle 'Dienste' f|fffd|r diesen Personenkreis neue Dienstformen mit den gew|fffd|nschten Zeiten hinterlegen.", vbInformation, "DPE3 | Versions|fffd|nderung"
    End If
    
    ' Pr|fffd|fung ob Sollstunde f|fffd|r WE/FT aus Stammdaten aktiviert wurde
    trifftzu = 0
    If pversion >= 3620 And pversion <= 3703 Then
    For a = 11 To 170 Step 3
    ausgelesen = Worksheets("PLAN").Cells(a, 60).Value
    If ausgelesen = "1" Then trifftzu = 1
    Next a
    If trifftzu <> 0 Then MsgBox "In Ihrem urspr|fffd|nglichen Plan wurde die Sollzeitberechnung bei mindestens einem Mitarbeiter |fffd|ber 'Sollstunden f|fffd|r WE/FT aus Stammdaten' ableiten aktiviert. Dies wird nicht mehr unterst|fffd|tzt. Deklarieren Sie f|fffd|r die betreffenden Mitarbeiter individuelle Sollzeiten f|fffd|r SA/SO und aktivieren Sie bei Bedarf 'Feiertag = Arbeitszeit'", vbInformation, "DPE3 | Versions|fffd|nderung"
    End If
    
    ' |fffd|bernahme der DEFINITIONEN vorbereiten
    ' Damit Parameter der neuen Version nicht durch leere Daten vom Vorplan |fffd|berschrieben werden
    ' ist hier die Pr|fffd|fung auf 'pversion' hinterlegt.
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C3:C3", "C3", 0)
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C23:D74", "C23", 1)
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C75:C75", "C75", 2)
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "B76:B90", "B76", 3)
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C91:C96", "C91", 4)
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C97:D97", "C97", 5)
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C98:C107", "C98", 6)
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C108:D116", "C108", 7)
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "E108:E116", "E108", 8)
    
    If pversion >= 3400 Then
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C117:C172", "C117", 9)
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C174:C174", "C174", 9)
            End If
            
    If pversion = 3301 Then Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C117:C170", "C117", 10)
    If pversion = 3300 Then Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C117:C169", "C117", 11)
    If pversion >= 3000 And pversion <= 3205 Then Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C117:C136", "C117", 12)
    If pversion >= 3206 And pversion <= 3209 Then Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C117:C159", "C117", 13)
    If pversion >= 3210 And pversion <= 3299 Then Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C117:C165", "C117", 14)
    If pversion >= 3302 And pversion <= 3400 Then Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C117:C172", "C117", 15)
    If pversion >= 3420 Then Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C176:C176", "C176", 16)
    If pversion >= 3410 Then Call copyto(alt_plan, neu_plan, "PLAN", "AS4:AS5", "AS4", 17)
    
    If pversion >= 3500 Then
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C173:C173", "C173", 18)
        Call copyto(alt_plan, neu_plan, "PLAN", "AU9:AU168", "AU9", 19)
            End If
    
    If pversion >= 3510 Then Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C177:C191", "C177", 20)
    
    If pversion >= 3520 Then
        Call copyto(alt_plan, neu_plan, "LANGZEITPLAN", "A1:F1000", "A1", 21)
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C192:C200", "C192", 22)
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C4:C4", "C4", 23)
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C201:C203", "C201", 24)
            End If
    
    If pversion >= 3530 Then
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C250:C272", "C250", 25)
            End If
            
    If pversion >= 3600 Then
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C273:C277", "C273", 26)
            End If
    
    If pversion >= 3610 Then
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C278:C281", "C278", 27)
            End If
    
    If pversion >= 3620 Then
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C282:C292", "C282", 28)
            End If
    
    If pversion >= 3630 Then
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C293:C316", "C293", 29)
            End If
    
    If pversion >= 3641 Then
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C317:C341", "C317", 30)
            End If
    
    If pversion >= 3642 Then
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C22:C22", "C22", 31)
            End If
      
    If pversion >= 3700 Then
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C342:C364", "C342", 32)
            End If
            
    If pversion >= 3701 Then
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C365:C365", "C365", 33)
            End If
    
    ' Verhalten f|fffd|r Erhalt von manuellen Sollstunden |fffd|bernehmen
    If pversion >= 3702 Then
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C5:C5", "C5", 34)
            End If
           
    ' |fffd|bernahme der Gewichtungsparametrierung
    If pversion >= 3703 Then
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C380:C380", "C380", 35)
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C390:C393", "C390", 36)
            End If
    
     ' |fffd|bernahme der Zeitzuschl|fffd|ge
    If pversion >= 3710 Then
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C366:C371", "C366", 37)
            End If
    
     ' |fffd|bernahme der Kombipr|fffd|fungen
    If pversion >= 3750 Then
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C5:C5", "C5", 39)
        Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C400:C435", "C400", 40)
        
            End If
            
    ' Umstellung der Dienste auf das neue Format
    ' Wird als Aufrufparameter 254 |fffd|bergeben so werden die Daten
    ' in die Tabelle 'DIENSTE' geschrieben, anstelle der bezeichneten
    ' Tabelle -> nicht sonderlich h|fffd|bsch, ging aber schnell!
    If pversion <= 3420 Then
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C10:C10", "C23", 41)
    ' F'A'
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C4:D4", "C3", 254)
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C18:C18", "E3", 254)
    ' F'B'
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C5:D5", "C11", 254)
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C19:C19", "E11", 254)
    ' S
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C6:D6", "C35", 254)
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C20:C20", "E35", 254)
    ' ZwD
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C7:D7", "C19", 254)
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C21:C21", "E19", 254)
    ' ZuD
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C8:D8", "C27", 254)
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C22:C22", "E27", 254)
    ' ND
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C9:D9", "C43", 254)
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C23:C23", "E43", 254)
      
    ' |fffd|bertragene Dienste als Aktiv markieren
    For a = 3 To 43 Step 8
    Worksheets("DIENSTE").Range("F" & CStr(a)).Value = "1"
    Next a
    
    ' Abzug f|fffd|r die 2 H|fffd|lfte der NW
    If pversion <= 3400 Then
    Worksheets("DIENSTE").Range("G43").Value = "00:45"
    MsgBox "Sie migrieren von einer sehr alten Version von DPE3 auf die Version 3.7x. Ein Standard-Pausen-Abzug in der zweiten Nachth|fffd|lfte wird in 'DIENSTE' Zelle G43 mit dem Wert '00:45' eingetragen.", vbInformation, "DPE3 | Versions|fffd|nderung"
    Else
    Call copyto(alt_plan, neu_plan, "DEFINITIONEN", "C170:C170", "G43", 254)
    End If
    
    End If
    
    ' DIENSTE in der neuen Version kopieren
    If pversion >= 3500 Then
    Call copyto(alt_plan, neu_plan, "DIENSTE", "A3:G50", "A3", 100)
    End If
    ' Erweiterte DIENSTE kopieren
    If pversion >= 3520 Then
    Call copyto(alt_plan, neu_plan, "DIENSTE", "H3:H50", "H3", 101)
    End If
    ' Plansymbole kopieren
    If pversion >= 3610 Then
    Call copyto(alt_plan, neu_plan, "DIENSTE", "A51:H58", "A51", 101)
    End If
    
    ' JAHRESDATEN Kopie einleiten
    If pversion >= 3600 Then
    antwort = MsgBox("M|fffd|chten Sie Ihre JAHRESDATEN (Feiertage) aus der Ursprungsdatei |fffd|bernehmen? " _
    & vbCrLf & vbCrLf & "Wenn Sie mit 'JA' antworten werden die individuellen Daten wie Feiertage auf " _
    & "die neue Version |fffd|bertragen. Sie k|fffd|nnen jederzeit im Men|fffd| 'Dienstplan -> Diverses -> Jahresdaten einpflegen' " _
    & "die f|fffd|r Ihre Region gesetzlichen Feiertage einf|fffd|gen. " & vbCrLf & vbCrLf _
    & "Es wirkt sich jedoch erst aus, sobald ein Monatswechsel durchgef|fffd|hrt wird !", vbYesNo, "DPE3 | Antwort erforderlich")
    If antwort = "6" Then
    Call copyto(alt_plan, neu_plan, "JAHRESDATEN", "B2:C94", "B2", 200)
    End If
    End If
    
    ' DIALOGTEXTE |fffd|bernehmen
    If pversion >= 3751 Then
    antwort = MsgBox("M|fffd|chten Sie Ihre m|fffd|glicherweise individualisierten Dialogtexte aus der Ursprungsdatei |fffd|bernehmen? " _
    & vbCrLf & vbCrLf & "Wenn Sie mit 'JA' antworten werden die individuellen Daten wie Beschriftungen f|fffd|r Fenster auf " _
    & "die neue Version |fffd|bertragen.", vbYesNo, "DPE3 | Antwort erforderlich")
    If antwort = "6" Then
    Call copyto(alt_plan, neu_plan, "DIALOGE", "C400:C495", "C400", 201)
    End If
    End If
    
    ' |fffd|bernahme Druckereinstellungen
    If pversion >= 3400 Then
    Windows(alt_plan).Activate
    ausgelesen = Sheets("PLAN").PageSetup.PrintArea
    Windows(neu_plan).Activate
    Sheets("PLAN").PageSetup.PrintArea = ausgelesen
    End If
        
    ' Schlie|fffd|ung vorbereiten
    Sheets("PLAN").Select
    Columns("AM:IV").Select
    Selection.EntireColumn.Hidden = True
    Range("D9").Select
    Application.CutCopyMode = False
    Windows(alt_plan).Activate
    ActiveSheet.Unprotect
    ActiveWindow.Close savechanges:=False
    eingabe_ueberwachung = 0
    Application.EnableEvents = True
    Call ansicht_ein
    If sig_versionswechsel = False Then Call hilfsassistent("OK", "|fffd|bernahme der Daten aus der Version " & CStr(pversion) & " vollst|fffd|ndig. Die Parametrierung wird nun |fffd|berpr|fffd|ft.")
    Call deftest(118, 203, 1)
    Call deftest(250, 341, 1)
Exit Sub
Fehler:
Call hilfsassistent("Fehler!", "Ein Fehler ist bei der |fffd|bernahme aufgetreten : " & vbLf & Err.Description & vbLf & "Das Programm wird nun geschlossen.")
Application.Quit
End Sub

Sub Planinhalt_kopieren()
' Fehlerhandler nur einschalten, sofern nicht im Entwicklungsmodus
    If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
' Dimensionierungen
    Dim a As Long
    Dim antwort As String
    Dim dversion, pversion, neu_plan, alt_plan, datop, wert, erweiterung
' Plan ausw|fffd|hlen
    Worksheets("PLAN").Select
' Dateiauswahl, sofern nicht von au|fffd|en aufgerufen
    If sig_versionswechsel = False Then
        antwort = MsgBox("Sollen die geplanten Dienste eines anderen Plans wirklich |fffd|bernommen werden?" & vbCrLf & vbCrLf & "Falls JA w|fffd|hlen Sie den urspr|fffd|nglichen Plan als Excel-Datei aus. Beachten Sie, dass die Positionen der Mitarbeiter und die Einstellungen (z.B. der Planungsmonat) |fffd|bereinstimmen m|fffd|ssen (ansonsten gibt's Datensalat).", 36, "DPE3 | Antwort erforderlich")
        If antwort = vbNo Then Exit Sub
        ' |fffd|ffnen des alten Plans vorbereiten
        datop = Application.GetOpenFilename("")
        If datop = False Then Exit Sub
        Else
        datop = sig_versionswechsel_altdatei
    End If
' |fffd|berwachung aus
    eingabe_ueberwachung = 1
    Application.EnableEvents = False
' den Namen des aktuellen (neuen) Plans auslesen, und Start-Zelle selektieren
    neu_plan = ActiveWorkbook.Name
    Range("D9").Select
' Bildschirmaktualisierung ausschalten -> macht alles um ein Vielfaches schneller
    Application.ScreenUpdating = False
' |fffd|ffnen des alten Plans einleiten und selektieren
    Workbooks.Open Filename:=datop
    alt_plan = ActiveWorkbook.Name
    ActiveSheet.Unprotect
    Windows(neu_plan).Activate
    ActiveSheet.Unprotect
    Windows(alt_plan).Activate
    Worksheets("DEFINITIONEN").Activate
' Version des Vorg|fffd|ngers ermitteln
    dversion = Left$(Cells(2, 3), 1)
    If Right$(Cells(2, 3), 1) <> ")" Then
        pversion = Cells(2, 3)
        Else
        pversion = 3200
    End If
    
    If pversion <= 3206 Then
' Abbruch des Einlesevorgangs
        Call hilfsassistent("Fehler!", "Von der vorliegenden Datei mit der Versionsionskennung " & CStr(pversion) & " k|fffd|nnen keine Plandaten eingelesen werden.")
        Windows(alt_plan).Activate
        ActiveWindow.Close savechanges:=False
        eingabe_ueberwachung = 0
        Application.ScreenUpdating = True
    Else
' Einlesen des Plans aus Vorg|fffd|ngerversion ; hier wird alles was im Planbereich ist 1:1 |fffd|bernommen
    Worksheets("PLAN").Activate
        If pversion >= 3400 Then
            Range("D9:AH170").Select
            erweiterung = 72 ' Ab der V3.4 waren mehr stellen auf dem Plan
            Else
            Range("D9:AH98").Select
        End If
    Selection.Copy
    Windows(neu_plan).Activate
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
' Schleife f|fffd|r die Details aufbauen ; Erweiterung f|fffd|r den vergr|fffd||fffd|erten Plan!
    For a = 9 To (96 + erweiterung) Step 3
' |fffd|bernahme manuelle Stunden
' #3.641-1 Hier war ein Fehler, die manuellen Stunden wurden niemals |fffd|bernommen
    Windows(alt_plan).Activate
    Cells(a, 35).Select
    Application.CutCopyMode = False
    Selection.Copy
    Windows(neu_plan).Activate
    Cells(a, 35).Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
' |fffd|bernahme von Berechnungen im unsichtbaren Bereich
    Windows(alt_plan).Activate
    Range(Cells(a, 66), Cells(a, 96)).Select
    Application.CutCopyMode = False
    Selection.Copy
    Windows(neu_plan).Activate
    Cells(a, 66).Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
' |fffd|bernahme Stundenwerte von Altplan
    Windows(alt_plan).Activate
    Cells(a, 2).Select
    Application.CutCopyMode = False
    Selection.Copy
    Windows(neu_plan).Activate
    Cells(a, 2).Select
    ActiveSheet.Paste
' Berechnung etwaiger Minusstunden
    wert = Cells(a, 2)
    If wert = "" Then wert = 0
    If Left$(wert, 1) <> "-" Then
    Cells(a, 98).Value = wert
    Else
    Cells(a, 99).Value = Right$(wert, Len(wert) - 1)
    Cells(a, 98).Value = Cells(a, 99).Value * -1
    Cells(a, 99) = 0
    End If
    Next a
' |fffd|bernahme Ereignisse
    Windows(alt_plan).Activate
    Range("D7:AH7").Select
    Application.CutCopyMode = False
    Selection.Copy
    Windows(neu_plan).Activate
    Cells(7, 4).Select
    ActiveSheet.Paste
    Columns("AM:IV").Select
    Selection.EntireColumn.Hidden = True
    Range("D9").Select
    Application.CutCopyMode = False
    Call schutz_ein
    Windows(alt_plan).Activate
    ActiveWindow.Close savechanges:=False
    Application.ScreenUpdating = True
    If sig_versionswechsel = False Then Call hilfsassistent("OK", "Der Planinhalt wurde komplett |fffd|bernommen.")
    eingabe_ueberwachung = 0
    Application.EnableEvents = True
End If
Exit Sub
Fehler:
Call hilfsassistent("Fehler!", "Ein Fehler ist bei der |fffd|bernahme aufgetreten : " & vbLf & Err.Description & vbLf & "Das Programm wird nun geschlossen.")
Application.Quit
End Sub

Sub uebstundenkonto()
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler
Worksheets("PLAN").Select
' Dimensionierung
Dim antwort As Variant
Dim akt_plan As Variant
Dim alt_plan As Variant
Dim datop As Variant
Dim alt_plan_datum As String
Dim alt_plan_wert As Long
Dim namechr(54) As String
Dim NUMMER(54) As String
Dim skonto(54) As Variant
Dim lese As Variant
Dim vorkomma As Variant
Dim nachkomma As Variant
Dim vk$
Dim nk$
Dim zwischen$
Dim wert As Variant
Dim lauf As Long
Dim objExcel As Object
Dim objWorkbook As Object
Dim zielversion As String
Dim letztedienste(54) As Variant
Dim anzahldatumsuebertraege As Long
Dim zweitezeile As Boolean
Dim uebertragzusammengesetzt As String
Dim datumsoffset As Long
Dim datumsschleife As Long

' Fehlerhandler
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error GoTo Fehler

' Sicherheitsabfrage
antwort = MsgBox("M|fffd|chten Sie vom Vormonatsplan das Stundenkonto auf diesen Plan |fffd|bernehmen? Die Datei mit dem Vormonatsplan muss vorhanden und ausgew|fffd|hlt werden.", vbYesNo, "Best|fffd|tigung erforderlich!")
If antwort = vbNo Then Exit Sub

' Schutz aus
eingabe_ueberwachung = 1
ActiveSheet.Unprotect
Application.ScreenUpdating = False
Application.EnableEvents = False

' Soll die zweite Zeile beachtet werden
If Worksheets("DEFINITIONEN").Range("C165") = 1 Then zweitezeile = True Else zweitezeile = False

' Wieviele |fffd|bertr|fffd|ge ; Begrenzung auf 5
anzahldatumsuebertraege = Worksheets("DEFINITIONEN").Range("C164")
If anzahldatumsuebertraege > 5 Then anzahldatumsuebertraege = 5

' |fffd|ffnen des alten Plans vorbereiten
datop = Application.GetOpenFilename("")
If datop = False Then Exit Sub

' Name des aktuellen Plans einlesen
akt_plan = ActiveWorkbook.Name

' Objekt |fffd|ffnen
Set objExcel = CreateObject("Excel.Application")
Set objWorkbook = objExcel.Workbooks.Open(datop)

' Zielplan Tabelle DEF |fffd|ffnen
objExcel.Worksheets("DEFINITIONEN").Activate

' Versionspr|fffd|fung
If CInt(Left$(objExcel.Range("C2").Value, 1)) < 3 Then GoTo Fehler

' Zielplan Tabelle PLAN w|fffd|hlen
objExcel.Worksheets("PLAN").Activate

' Datumsoffset zum Auslesen der letzten Dienste ermitteln
datumsoffset = objExcel.Range("AO3").Value

' Daten einlesen
For lauf = 9 To 168 Step 3
namechr((lauf / 3) - 2) = objExcel.Cells(lauf, 1).Value
NUMMER((lauf / 3) - 2) = objExcel.Cells(lauf + 2, 1).Value
skonto((lauf / 3) - 2) = objExcel.Cells(lauf, 37).Value

If anzahldatumsuebertraege > 0 Then
For datumsschleife = (35 - datumsoffset - anzahldatumsuebertraege) To (34 - datumsoffset)

    If objExcel.Cells(lauf + 1, datumsschleife).Value <> "" And zweitezeile = True Then
                If objExcel.Cells(lauf + 1, datumsschleife).Value = "" Then
                uebertragzusammengesetzt = uebertragzusammengesetzt & "."
                Else
                uebertragzusammengesetzt = uebertragzusammengesetzt & objExcel.Cells(lauf + 1, datumsschleife).Value
                End If
        Else
                If objExcel.Cells(lauf, datumsschleife).Value = "" Then
                uebertragzusammengesetzt = uebertragzusammengesetzt & "."
                Else
                uebertragzusammengesetzt = uebertragzusammengesetzt & objExcel.Cells(lauf, datumsschleife).Value
                End If
    End If

Next datumsschleife
' Ende Anzahl Tage vom Vormonat
End If
letztedienste((lauf / 3) - 2) = uebertragzusammengesetzt
uebertragzusammengesetzt = ""
Next lauf

' Datum des Altplans auslesen
alt_plan_datum = objExcel.Range("d5").Value

' Objekt schlie|fffd|en und aus dem Speicher entfernen
objExcel.Application.DisplayAlerts = False
objExcel.Workbooks.Close
objExcel.Quit
Set objExcel = Nothing

' Zugriff wieder auf aktuellen Plan
Windows(akt_plan).Activate

' Pr|fffd|fung ob das Datum der eingelesenen Daten |fffd|lter ist als das auf dem aktuellen Plan
alt_plan_wert = (CInt(Right$(CStr(alt_plan_datum), 4) - 2000) * 12) + CInt(Mid$(CStr(alt_plan_datum), 4, 2))
If alt_plan_wert >= (CInt(Right$(CStr(Range("d5").Value), 4) - 2000) * 12) + CInt(Mid$(CStr(Range("d5").Value), 4, 2)) Then
antwort = MsgBox("Es macht den Eindruck, dass der ausgew|fffd|hlte Vormonatsplan neuer oder gleichen Monatsdatum ist. Sind Sie sicher dass die |fffd|bernahme von diesem Plan durchgef|fffd|hrt werden soll?", vbYesNo, "Sicher?")
If antwort = vbNo Then Exit Sub
End If

' Jetzt haben wir alle Daten
For lauf = 9 To 168 Step 3
If Cells(lauf, 1).Value = namechr((lauf / 3) - 2) And _
Cells(lauf + 2, 1).Value = NUMMER((lauf / 3) - 2) Then
If Cells(lauf, 1).Value <> "Leer" Then

' |fffd|bertragsinformationen |fffd|bernehmen
If anzahldatumsuebertraege > 0 Then
Cells(lauf, 52).Value = letztedienste((lauf / 3) - 2)
End If

' |fffd|hnliche Prozedur wie in 'Plan_Killer' nur der * 24 Multiplikator ist neu
lese = skonto((lauf / 3) - 2) * 24
vorkomma = Fix(lese)
vk$ = CStr(vorkomma)
If vorkomma < 0 Then
nachkomma = Application.WorksheetFunction.Round((lese - vorkomma) * -60, 2)
Else
nachkomma = Application.WorksheetFunction.Round((lese - vorkomma) * 60, 2)
End If
If nachkomma >= 10 Or nachkomma <= -10 Then
nk$ = CStr(Fix(nachkomma))
Else
nk$ = "0" & CStr(Fix(nachkomma))
End If

' Vorkommawert = 0 und Nachkommawert ist dreistellig weil negativ und ist kleiner 10 Minuten
If Len(nk$) = 3 And Mid$(nk$, 2, 1) = "-" And Left$(nk$, 1) = "0" And CStr(vk$) = 0 Then
vk$ = "-00"
nk$ = "0" & Right$(nk$, 1)
End If

' Vorkommawert = 0 und Nachkommawert ist dreistellig weil negativ
If Len(nk$) = 3 And Left$(nk$, 1) = "-" And CStr(vk$) = 0 Then
vk$ = "-00"
nk$ = Right$(nk$, 2)
End If

Cells(lauf, 2) = vk$ & ":" & nk

' Berechnung etwaiger Minusstunden
wert = Cells(lauf, 2)
If wert = "" Then wert = 0
If Left$(wert, 1) <> "-" Then
Cells(lauf, 98).Value = wert
Else
Cells(lauf, 99).Value = Right$(wert, Len(wert) - 1)
Cells(lauf, 98).Value = Cells(lauf, 99).Value * -1
Cells(lauf, 99) = 0
End If
End If

Else

MsgBox "Die Position von Mitarbeiter " & namechr((lauf / 3) - 2) _
    & " des Vormonatsplan passt nicht mit dem jetzigen Plan |fffd|berein! " _
    & "Dieser Zeitwert wird |fffd|bergangen.", vbInformation, "Uuups"
End If

Next lauf

Call schutz_ein
Application.EnableEvents = True

Exit Sub

Fehler:
MsgBox "Es konnte nicht sichergestellt werden, dass es sich bei der gew|fffd|hlten Datei um eine g|fffd|ltige DPE 3.x Version handelt oder es ist ein Fehler aufgetreten. Der Vorgang wird abgebrochen.", vbOKOnly, "DPE3 | Fehler!!!"
objExcel.Workbooks.Close savechanges:=False
objExcel.Quit
Set objExcel = Nothing
Application.EnableEvents = True
End Sub

Sub versionswechsel()
Dim antwort As Variant

' sig_versionswechsel kann nur TRUE sein, sofern es bei der Begr|fffd||fffd|ung ausgew|fffd|hlt wurde
If sig_versionswechsel = False Then
antwort = MsgBox("Soll ein Versionswechsel durchgef|fffd|hrt werden?" & vbCrLf & vbCrLf & "Hierbei werden in die aktuell ge|fffd|ffnete Datei die Einstellungen und Mitarbeiterdaten einer gespeicherten Datei eingelesen. So haben Sie die M|fffd|glichkeit auf eine neue Version zu wechseln, ohne die Stamminformationen erneut eingeben zu m|fffd|ssen. |fffd|blicherweise wird dies nur dann durchgef|fffd|hrt, sofern die aktuelle Datei 'ohne Inhalt' ist.", 36, "DPE3 | Antwort erforderlich")
If antwort = vbNo Then Exit Sub
End If

' Zur|fffd|cksetzen
sig_versionswechsel = False

' |fffd|ffnen des alten Plans vorbereiten ; Apple Rechner brauchen hier einen leicht
' abgewandelten Aufruf
sig_versionswechsel_altdatei = Application.GetOpenFilename("")
If sig_versionswechsel_altdatei = False Then Exit Sub

' Sicherheitspr|fffd|fung
If Worksheets("DEFINITIONEN").Range("C3") <> "demo" And Worksheets("PLAN").Range("AP4") <> "0" Then
antwort = MsgBox("Es konnte nicht 100% ausgeschlossen werden, dass es sich bei der aktuellen Datei wirklich " _
& "um eine NEUE, LEERE DPE3-Datei handelt, darum erscheint ein weiterer Warnhinweis. Ein Versionswechsel wird " _
& "|fffd|blicherweise von einer NEUEN, LEEREN DPE3-Datei aus vorgenommen. In diese werden die Einstellungen einer " _
& "bereits vorhandenen DPE3-Datei eingelesen. Somit wechseln Sie von einer ALTEN Version auf eine NEUE Version, " _
& "beziehungsweise Sie laden die Parameter und Mitarbeiter aus einer defekten Datei in eine NEUE Datei. Soll " _
& "der Vorgang wirklich durchgef|fffd|hrt werden. Klicken Sie auf 'JA' um zu starten!", 36, "DPE3 | Hinweis")
If antwort = vbNo Then Exit Sub
End If

' Signal setzen und Beginn des Versionswechsels
sig_versionswechsel = True

Call para_uebernahme

If sig_versionswechsel = False Then Exit Sub

' Es wird gepr|fffd|ft, ob der Ursprungsplan und der aktuelle Plan im gleichen Planungszeitraum liegen
' Die Parameter wurden zuvor eingeladen, somit geschieht der Aufbau bereits nach den urspr|fffd|nglichen Jahresdaten

If Worksheets("PLAN").Cells(1, 9) <> gewaehlter_monat Then
    monat_versionswechsel = Mid(gewaehlter_monat, 4, 2) & "/" & Left(gewaehlter_monat, 2) & "/" & Right(gewaehlter_monat, 4)
    Call plan_killer
    End If

Call Planinhalt_kopieren
Call Einblendung
Call bildoptimierung

sig_versionswechsel = False

End Sub

Sub jahresdaten_vorbereiten()
' Fehlerhandler aktivieren
If Worksheets("DEFINITIONEN").Range("C4") = 0 Then On Error Resume Next
' Variablen deklarieren
Dim auswahl_monat As Long
Dim lokale_laufvariable As Long ' LV f|fffd|r neue JAHRESDATEN
Dim tageseintrag As Long ' Reihe in den JAHRESDATEN

' Offset setzen
tageseintrag = 20
' Fenster anzeigen ; Auswahl anbieten ; Wert auslesen ; Fenster schlie|fffd|en
ActiveWorkbook.DialogSheets("DIALOG_JAHRESDATEN").Show
auswahl_monat = DialogSheets("DIALOG_JAHRESDATEN").[Auswahl].Value

' Der |fffd|nderungsvorgang wird nur dann gestartet, sofern eine g|fffd|ltige Auswahl einer Region
' im Dialogfenster durchgef|fffd|hrt wurde
If auswahl_monat > 0 And auswahl_monat < 47 Then

    ' Alteintr|fffd|ge zur Sicherheit entfernen
    Worksheets("JAHRESDATEN").Range("B20:C93").ClearContents
    
    For lokale_laufvariable = 20 To 224
    If Worksheets("JAHRESDATEN").Cells(lokale_laufvariable, 10 + auswahl_monat) = "x" Then
    If tageseintrag < 94 Then
    Worksheets("JAHRESDATEN").Cells(tageseintrag, 2) = Worksheets("JAHRESDATEN").Cells(lokale_laufvariable, 9).Value
    Worksheets("JAHRESDATEN").Cells(tageseintrag, 3) = Worksheets("JAHRESDATEN").Cells(lokale_laufvariable, 10).Value
    End If
    tageseintrag = tageseintrag + 1
    End If
    Next lokale_laufvariable
    
    Worksheets("JAHRESDATEN").Cells(1, 1).Value = "Jahresdaten f|fffd|r " & Worksheets("JAHRESDATEN").Cells(19 + auswahl_monat, 7).Value
    
    MsgBox "Die Jahresdaten wurden gem|fffd||fffd| der Auswahl auf '" & Worksheets("JAHRESDATEN").Cells(19 + auswahl_monat, 7).Value & "' festgelegt." & vbCrLf & vbCrLf & "Die Auswirkungen im Plan sind erst mit einem Monatswechsel 'Neuer Plan' sichtbar.", vbInformation, "Hat geklappt..."
End If

End Sub


Attribute VB_Name = "dpe3helfer"
Attribute VB_Base = "0{16258B56-EADC-48A0-AC93-C21C52CB9C8D}{FABE335D-C1F9-46BD-A92A-9CBCC437A322}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Private Sub CommandButton1_Click()
On Error GoTo Fehler
' Der L|fffd|sch-Button (DEL) vom DPE3-Helfer wurde ausgel|fffd|st
'
' Dimensionierung
Dim cell As Range ' F|fffd|r markierte Bereiche
Dim a As Byte ' Laufvariable
Dim b As Byte ' Lauvariable
' Aktuelle Position der aktiven Zelle definieren
akt_row = ActiveCell.Row
akt_col = ActiveCell.Column
' Besondere L|fffd|schvorg|fffd|nge pr|fffd|fen (Teamsitzung)
If akt_row = 8 Then GoTo Team_Raus
' Standardpr|fffd|fung ob in einem g|fffd|ltigen Bereich gel|fffd|scht wird
If akt_row < 9 Or akt_row > 169 Then Exit Sub
If akt_row Mod 3 <> 0 Then Exit Sub
If akt_col = 2 Or akt_col = 3 Then Exit Sub
If akt_col >= 35 Then Exit Sub
' Besondere L|fffd|schvorg|fffd|nge pr|fffd|fen (Dienstphase)
If Cells(akt_row, akt_col).Value = Worksheets("DEFINITIONEN").Range("C186").Value Then GoTo Dienstphase_Anfang_Raus
If Cells(akt_row, akt_col).Value = Worksheets("DEFINITIONEN").Range("C187").Value Then GoTo Dienstphase_Ende_Raus
' Schutz + Ansicht ausschalten
ActiveSheet.Unprotect
plan_killer_aktiv = 1
eingabe_ueberwachung = 1
Call ansicht_aus
' Befehl auf jede Zelle im Bereich ausf|fffd|hren
For Each cell In Selection
cell.Select
akt_row = ActiveCell.Row
akt_col = ActiveCell.Column
' Pr|fffd|fung, dass nicht |fffd|ber den g|fffd|ltigen Bereich hinaus gel|fffd|scht werden kann
If akt_col > 34 Then
    Exit For
    End If
Cells(akt_row, akt_col).Value = ""
Cells(akt_row, akt_col).ClearComments
Cells(akt_row + 2, akt_col).Value = ""
' Auch im Schattenplan wird ein m|fffd|glicher Eintrag gel|fffd|scht.
Cells(akt_row, akt_col + 62).Value = ""
Next
Call ansicht_ein
plan_killer_aktiv = 0
eingabe_ueberwachung = 0
Exit Sub
'
' Teamsitzung raus
'
Team_Raus:
If Cells(akt_row, akt_col).Value = Worksheets("DEFINITIONEN").Range("C95").Value Then
Call ansicht_aus
For a = 10 To 169 Step 3
    If Cells(a, akt_col).Value = Worksheets("DEFINITIONEN").Range("C96").Value Then
        Cells(a, akt_col).Value = ""
        Cells(a + 1, akt_col).Value = ""
    End If
Next a
Cells(akt_row, akt_col).Value = ""
Call ansicht_ein
End If
Exit Sub
'
' Dienstphasen - Anfang wurde gel|fffd|scht
'
Dienstphase_Anfang_Raus:
Cells(akt_row, akt_col).Value = ""
For b = 4 To (34 - CInt(Range("AO3").Value))
If Cells(akt_row, b).Value = Worksheets("DEFINITIONEN").Range("C187").Value Then
    Cells(akt_row, b).Value = ""
    Cells(akt_row + 1, 3).Value = ""
    dpe3helfer.Label_I.Caption = "Dienstphase gel|fffd|scht"
    Exit For
End If
Next b
Exit Sub
'
' Dienstphasen - Ende wurde gel|fffd|scht
'
Dienstphase_Ende_Raus:
Cells(akt_row, akt_col).Value = ""
For b = 4 To (34 - CInt(Range("AO3").Value))
If Cells(akt_row, b).Value = Worksheets("DEFINITIONEN").Range("C186").Value Then
    Cells(akt_row, b).Value = ""
    Cells(akt_row + 1, 3).Value = ""
    dpe3helfer.Label_I.Caption = "Dienstphase gel|fffd|scht"
    Exit For
End If
Next b
Exit Sub
'
' Fehlerhandler
'
Fehler:
MsgBox "Der Fehler " & Err.Description & " ist im DPE3HELPER aufgetreten. Sollte dieser Fehler reproduzierbar auftreten kontaktieren Sie den Entwickler (thomas.baer@bkh-kaufbeuren.de). Der Vorgang wird abgebrochen!"
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
Worksheets("DEFINITIONEN").Range("C278").Value = dpe3helfer.Left
Worksheets("DEFINITIONEN").Range("C279").Value = dpe3helfer.Top
End Sub

' InQuest injected base64 decoded content
' bz{-
' )z'!z

INQUEST-PP=macro
