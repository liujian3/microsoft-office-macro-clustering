Attribute VB_Name = "Arkusz1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButtonClear, 20, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButtonImportCSV, 19, 2, MSForms, CommandButton"
Private Sub Image1_Click()

End Sub

Private Sub CommandButtonClear_Click()
Clear
End Sub
Private Sub CommandButtonImportCSV_Click()
ImportCSV
End Sub

Attribute VB_Name = "Arkusz2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Module1"
'2013-02-11
Public oDocument, Document, osheet, oCell As Object                                         ' zmienne globalne, widziane w podprocedurach
Public Separator As String
Public OpenOffice As Boolean




Sub ImportCSV()
'
' Makro1 Makro

 
 
 ' Usuni|fffd|cie ew. istniej|fffd|cych wierszy
   
   Set MainWB = ActiveWorkbook
   Range("A14").Select
   ActiveSheet.Cells.SpecialCells(xlCellTypeLastCell).Select
   If ActiveCell.Row >= 14 Then
   Call Clear
   End If


    Range("A14").Select
    strFile = Application.GetOpenFilename("Pliki CSV,*.csv") ' Wybranie pliku
   If strFile = False Then
    MsgBox ("Nie wybrano pliku!")
    Exit Sub
   End If
    
Application.ScreenUpdating = False          'Wy|fffd||fffd|czenie od|fffd|wie|fffd|ania
    
    
'    Sep = "przecinek - ,"

'Import pliku tekstowego
    FileNumber = FreeFile
    Open strFile For Input As #FileNumber
   r = 14
   cr = chr(13)
   lnf = chr(10)
   crlnf = cr + lnf
  Do While Not EOF(FileNumber)
    Line Input #1, InputData
    InputData = InputData + crlnf
    InputData = ReplaceString(InputData, lnf, crlnf)
    InputData = ReplaceString(InputData, cr + cr, cr)
    InputData = ReplaceString(InputData, crlnf + crlnf, crlnf)
       
    iPos = InStr(InputData, crlnf)
    
    Separator = Mid(InputData, 11, 1)                                       ' Wskazanie jako znaku separatora 11 znaku w kom|fffd|rce A14 - zgodnie z formatem pliku CSV
    If Separator <> ";" Then                                                        ' Sprawdzenie czy separator jest znakiem dozwolonym >;<,>|<,>,<, >TAB<
      If Separator <> "|" Then
        If Separator <> chr(9) Then
            If Separator <> "," Then MsgBox ("Zastosowany separator > " + Separator + " < nie jest prawid|fffd|owy lub plik CSV jest uszkodzony." + vbCr + "                                 Pobierz ponownie plik ze strony banku. ")  ' Komunikat w przypadku niedozwoleno separatora
        
            End If
        End If
    End If
    
    While iPos > 0 And InputData <> ""
        strOut = Left(InputData, iPos - 1)
        InputData = Mid$(InputData, iPos + 2)
        Cells(r, 1).Value = strOut
        iPos = InStr(InputData, crlnf)
        r = r + 1
    Wend
     Loop
Close #FileNumber    ' Close file.

    TextFileSemicolonDelimiter = False
    TextFileCommaDelimiter = False
    TextFileOtherDelimiter = False
    TextFileTabDelimiter = False
     Select Case Separator
            Case ";"
                TextFileSemicolonDelimiter = True
            Case ","
                TextFileCommaDelimiter = True
            Case "|"
                TextFileOtherDelimiter = True
                TextFileOtherDelimiterStr = "|"
            Case chr(11)
                TextFileTabDelimiter = True
            Case Else
                TextFileOtherDelimiter = True
                TextFileOtherDelimiterStr = Separator
        End Select
        
    Range(Cells(14, 1), Cells(r - 1, 1)).Select  ' Zaznaczenie wszystkich wierszy

    Selection.TextToColumns Destination:=Range("A14"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=TextFileTabDelimiter, _
        Semicolon:=TextFileSemicolonDelimiter, Comma:=TextFileCommaDelimiter, Space:=False, _
        Other:=TextFileOtherDelimiter, OtherChar:=TextFileOtherDelimiterStr, _
        FieldInfo:=Array(Array(2, 4), Array(3, 4), Array(4, 2), Array(5, _
        2), Array(6, 2), Array(7, 2), Array(8, 1), Array(9, 1), Array(10, 1), Array(11, 1), Array(12 _
        , 1), Array(13, 1), Array(14, 1))
        
    Selection.Sort Key1:=Range("A14"), Order1:=xlDescending, Header:=xlGuess _
        , OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
'Poprawienie znak|fffd|w utf-8
r = 14

While Cells(r, 1).Value <> ""
    op = Cells(r, 3).Value
    Cells(r, 3).Value = replaceutf8(CStr(op))
    op = Cells(r, 4).Value
    Cells(r, 4).Value = replaceutf8(CStr(op))
    op = Cells(r, 9).Value
    Cells(r, 9).Value = replaceutf8(CStr(op))
    Cells(r, 6).Value = Cells(r, 6).Value * 1
    Cells(r, 6).NumberFormat = "#,##0.00"
    Range(Cells(r, 1), Cells(r, 2)).Select          ' centrowanie kolumn
    Selection.HorizontalAlignment = xlCenter

    r = r + 1
Wend

'Przeniesienie odpowiednich warto|fffd|ci z pierwszego wiersza
Range("C9").Value = Range("A14").Value
Range("C10").Value = Range("B14").Value
Range("C7").Value = Range("C14").Value
Range("C6").Value = Range("D14").Value
Range("C8").Value = Range("E14").Value
Range("G10").Value = Range("F14").Value
Range("G11").Value = Range("G14").Value
Range("C11").Value = Range("H14").Value

'Usuni|fffd|cie pierwszego wiersza
Rows("14").Select
Selection.Delete Shift:=xlUp
Cells(14, 1).Select

'Przypisanie makra OO

Application.ScreenUpdating = True          'Wy|fffd||fffd|czenie od|fffd|wie|fffd|ania

End Sub

Sub Clear()
   
If Cells(14, 1).Value <> "" Then
    Range("A14").Select
        Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
        Selection.EntireRow.Delete
    Cells(14, 1).Select
End If

Range("C6:C11").Select
Selection.ClearContents
Range("G10:G11").Select
Selection.ClearContents
Cells(14, 1).Select


End Sub


Function replaceutf8(str1 As String) As String

strOut = ReplaceString(str1, "|105|", "|fffd|")
strOut = ReplaceString(strOut, "|119|", "|fffd|")
strOut = ReplaceString(strOut, "|f3|", "|fffd|")
strOut = ReplaceString(strOut, "|142|", "|fffd|")
strOut = ReplaceString(strOut, "|15b|", "|fffd|")
strOut = ReplaceString(strOut, "|b6|", "|fffd|")
strOut = ReplaceString(strOut, "|17c|", "|fffd|")
strOut = ReplaceString(strOut, "|17a|", "|fffd|")
strOut = ReplaceString(strOut, "|105|", "|fffd|")
strOut = ReplaceString(strOut, "|107|", "|fffd|")
strOut = ReplaceString(strOut, "|144|", "|fffd|")
strOut = ReplaceString(strOut, "|104|", "|fffd|")
strOut = ReplaceString(strOut, "|2c7|", "|fffd|")
strOut = ReplaceString(strOut, "|118|", "|fffd|")
strOut = ReplaceString(strOut, "|d3|", "|fffd|")
strOut = ReplaceString(strOut, "|141|", "|fffd|")
strOut = ReplaceString(strOut, "|15a|", "|fffd|")
strOut = ReplaceString(strOut, "|a6|", "|fffd|")
strOut = ReplaceString(strOut, "|17b|", "|fffd|")
strOut = ReplaceString(strOut, "|179|", "|fffd|")
strOut = ReplaceString(strOut, "|ac|", "|fffd|")
strOut = ReplaceString(strOut, "|106|", "|fffd|")
strOut = ReplaceString(strOut, "|143|", "|fffd|")
strOut = ReplaceString(strOut, "|fe|", "")

replaceutf8 = strOut
End Function

Function ReplaceString(ByVal strArg As String, ByVal strSrc As String, ByVal strDst As String) As String
Dim iPos As Long
iPos = InStr(strArg, strSrc)
While iPos > 0
strArg = Left$(strArg, iPos - 1) + strDst + Mid$(strArg, iPos + Len(strSrc))
iPos = InStr(iPos + Len(strDst), strArg, strSrc)
Wend
ReplaceString = strArg
End Function



Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub Workbook_Open()
   Worksheets("historia_rachunku").Activate
  ' ActiveSheet.Shapes("Button 1").Select
   'Selection.OnAction = "ImportCSV"
 '  ActiveSheet.Shapes("Button 18").Select
  ' Selection.OnAction = "Clear"
   Cells(14, 1).Select
End Sub

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
If MsgBox("Zapis szablonu nie jest zalecany i mo|fffd|e spowodowa|fffd| utrudnienia w u|fffd|ytkowaniu szablonu w systemie OpenOffice" & vbCrLf & "Czy chcesz kontynuowa|fffd|?", vbYesNo) = vbNo Then
Cancel = True
End If
End Sub

Sub Formatowanie_danych()
   Worksheets("Instrukcja").visible = True
   Worksheets("historia_rachunku").Activate
   ActiveSheet.Shapes("Button 1").Select
   Selection.OnAction = "OO_ImportCSV"
   ActiveSheet.Shapes("Button 18").Select
   Selection.OnAction = "OO_Clear"
   Call Clear
   ActiveWorkbook.Close SaveChanges:=True
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
   ActiveWorkbook.Close SaveChanges:=False
End Sub


INQUEST-PP=macro
