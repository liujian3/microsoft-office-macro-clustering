Attribute VB_Name = "GraphUpdate"
' Called when a designated map item is clicked
' Sets the filter of the corresponding pivot table
' to match that of the hub/pipeline/basin and hides/shows the
' appropriate chart ranges
Sub FilterPivot()
    Application.ScreenUpdating = False

    Dim sh As Shape
    Set sh = ActiveSheet.Shapes(Application.Caller)
    Dim wsName As String
    Dim ws As Worksheet
    Dim filterName As String
    filterName = Mid(sh.Title, 1, Len(sh.Title) - 2)
    ' Determine whether we are a hub, pipeline, or basin
    If (Right(sh.Title, 1) = "H") Then ' We are a hub
        ' Corresponding Pivot Sheet 1
        wsName = ActiveSheet.Range("PivotSheetName1").Value
        Set ws = Sheets(wsName)
        ' Updates the PivotChart filters
        ws.PivotTables(wsName).PivotFields("Hub").ClearAllFilters
        ws.PivotTables(wsName).PivotFields("Hub").CurrentPage = filterName
        
        ' Corresponding Pivot Sheet 2
        wsName = ActiveSheet.Range("PivotSheetName2").Value
        If (wsName <> "") Then
            ' Updates the PivotChart filters
            Set ws = Sheets(wsName)
            ws.PivotTables(wsName).PivotFields("Hub").ClearAllFilters
            ws.PivotTables(wsName).PivotFields("Hub").CurrentPage = filterName
        End If
        
        ' Updates the displayed name in the worksheet
        ActiveSheet.Shapes("HubName").TextFrame.Characters.Text = filterName
        
        ' Unhide our charts, Hide the other charts
        ActiveSheet.Range("HubChartRegion").EntireColumn.Hidden = False
        ActiveSheet.Range("PipelineChartRegion").EntireColumn.Hidden = True
        ActiveSheet.Range("BasinChartRegion").EntireColumn.Hidden = True
    ElseIf (Right(sh.Title, 1) = "P") Then ' We are a pipeline
        ' Corresponding Pivot Sheet 3
        wsName = ActiveSheet.Range("PivotSheetName3").Value
        Set ws = Sheets(wsName)
        ' Updates the PivotChart filters
        ws.PivotTables(wsName).PivotFields("Pipeline").ClearAllFilters
        ws.PivotTables(wsName).PivotFields("Pipeline").CurrentPage = filterName
        
        ' Updates the displayed name in the worksheet
        ActiveSheet.Shapes("PipelineName").TextFrame.Characters.Text = filterName
        
        ' Unhide our charts, Hide the other charts
        ActiveSheet.Range("HubChartRegion").EntireColumn.Hidden = True
        ActiveSheet.Range("PipelineChartRegion").EntireColumn.Hidden = False
        ActiveSheet.Range("BasinChartRegion").EntireColumn.Hidden = True
    ElseIf (Right(sh.Title, 1) = "B") Then ' We are a basin
        ' Corresponding Pivot Sheet 4
        wsName = ActiveSheet.Range("PivotSheetName4").Value
        Set ws = Sheets(wsName)
        ws.PivotTables(wsName).PivotFields("Group").ClearAllFilters
        ws.PivotTables(wsName).PivotFields("Group").CurrentPage = filterName
        
        ActiveSheet.Shapes("BasinName").TextFrame.Characters.Text = filterName
        
        ActiveSheet.Range("HubChartRegion").EntireColumn.Hidden = True
        ActiveSheet.Range("PipelineChartRegion").EntireColumn.Hidden = True
        ActiveSheet.Range("BasinChartRegion").EntireColumn.Hidden = False
    End If
    
    Application.ScreenUpdating = True
End Sub




Attribute VB_Name = "PipeUtil"
Sub ScrollBar1_Change()

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet24"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
    ' First, get the title of the map object whose data is being displayed
    Dim shapeIndex As String
    shapeIndex = getShapeIndex()
    Dim currMode As String ' Which type of data we're displaying
    currMode = Right(shapeIndex, 2)
    ' Then, check if the displayed information is
    ' in our region of the map
    Dim isInRegion As Boolean
    isInRegion = False
    For Each myShape In Shapes()
        If (myShape.Title = shapeIndex) Then
            isInRegion = True
        End If
    Next
    
    ' Update the displayed info to a shape that is in our region
    Dim wsLabel As String
    If (Not isInRegion) Then
        Dim last2c As String
        For Each myShape In Shapes()
            last2c = Right(myShape.Title, 2)
            If (currMode = last2c) Then
                ' Set the data filter
                Dim wsName As String
                wsName = ""
                Dim wsName2 As String
                wsName2 = ""
                Dim wsTag As String
                Dim ws As Worksheet
                If (currMode = "_H") Then
                    wsName = Range("PivotSheetName1").Value
                    wsName2 = Range("PivotSheetName2").Value
                    wsTag = "Hub"
                    wsLabel = "HubName"
                ElseIf (currMode = "_P") Then
                    wsName = Range("PivotSheetName3").Value
                    wsTag = "Pipeline"
                    wsLabel = "PipelineName"
                ElseIf (currMode = "_B") Then
                    wsName = Range("PivotSheetName4").Value
                    wsTag = "Group"
                    wsLabel = "BasinName"
                End If
                If (wsName <> "") Then
                    Set ws = Sheets(wsName)
                    Dim filterName As String
                    filterName = Mid(myShape.Title, 1, Len(myShape.Title) - 2)
                    ws.PivotTables(wsName).PivotFields(wsTag).CurrentPage = filterName
                    Shapes(wsLabel).TextFrame.Characters.Text = filterName
                    If (wsName2 <> "") Then
                        Set ws = Sheets(wsName2)
                        ws.PivotTables(wsName2).PivotFields(wsTag).CurrentPage = filterName
                    End If
                    Exit For
                End If
            End If
        Next
    Else
        ' Update the title anyway
        If (currMode = "_H") Then
            wsLabel = "HubName"
        ElseIf (currMode = "_P") Then
            wsLabel = "PipelineName"
        ElseIf (currMode = "_B") Then
            wsLabel = "BasinName"
        End If
        Shapes(wsLabel).TextFrame.Characters.Text = Mid(shapeIndex, 1, Len(shapeIndex) - 2)
    End If
End Sub

' Searches for the map item that's currently being displayed on
' the chart.
Private Function getShapeIndex() As String
    Dim shapeIndex As String
    Dim dispType As String
    Dim ws As Worksheet
    Dim wsName As String
    If (Not Range("HubChartRegion").EntireColumn.Hidden) Then
        ' We are displaying hub data
        wsName = Range("PivotSheetName1").Value
        Set ws = Sheets(wsName)
        shapeIndex = ws.PivotTables(wsName).PivotFields("Hub").CurrentPage & "_H"
    ElseIf (Not Range("PipelineChartRegion").EntireColumn.Hidden) Then
        ' We are displaying pipeline data
        wsName = Range("PivotSheetName3").Value
        Set ws = Sheets(wsName)
        shapeIndex = ws.PivotTables(wsName).PivotFields("Pipeline").CurrentPage & "_P"
    ElseIf (Not Range("BasinChartRegion").EntireColumn.Hidden) Then
        ' We are displaying basin data
        wsName = Range("PivotSheetName4").Value
        Set ws = Sheets(wsName)
        shapeIndex = ws.PivotTables(wsName).PivotFields("Group").CurrentPage & "_B"
    End If
    
    getShapeIndex = shapeIndex
End Function
Attribute VB_Name = "Sheet25"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Calculate()
    ' Update the colored pipelines
    updatePipelineColors (Range("G4").Value)
End Sub

Private Function updatePipelineColors(ByVal year As Long)
    Dim dataSht As Worksheet
    Set dataSht = Sheets("Data")
    Dim pivotTbl As PivotTable
    Set pivotTbl = dataSht.PivotTables("PipeData")
    Dim filterName As String
    filterName = ""
    Dim dataRange As Range
    Dim util As Double
    Dim activeColor As Long
    On Error GoTo ErrHandler:
    For Each myShape In Shapes()
        last2c = Right(myShape.Title, 2) ' Error 445
        If (Right(myShape.Name, 7) <> "Chevron" And last2c = "_P") Then
            ' We have a pipeline object
            ' Find the utilization for the given year
            filterName = Mid(myShape.Title, 1, Len(myShape.Title) - 2)
            Set dataRange = pivotTbl.GetPivotData("Utilization", "Pipeline", filterName, "Year", "" & year)
            util = dataRange.Value
            If (util = 0) Then ' No Data
                activeColor = RGB(0, 0, 255) ' Blue
            ElseIf (util < 0.6) Then
                activeColor = RGB(0, 133, 66) ' Dark green
            ElseIf (util >= 0.6 And util < 0.7) Then
                activeColor = RGB(146, 208, 80) ' Light green
            ElseIf (util >= 0.7 And util < 0.8) Then
                activeColor = RGB(255, 255, 0) ' Yellow
            ElseIf (util >= 0.8 And util < 0.9) Then
                activeColor = RGB(255, 192, 0) ' Orange
            Else
                activeColor = RGB(192, 0, 0) ' Red
            End If
            ' Update the color
            myShape.Line.ForeColor.RGB = activeColor
        End If
    Next
    
ErrHandler:
    Select Case Err.Number
        Case 445 ' myShape.Title does not support the method
            
    End Select
    Resume Next
End Function

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
