Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Private Sub Workbook_Open()

    'Beim |fffd|ffnen der Excel-Datei
    'Prozedur liest Daten ein, blendet Eingabeformular ein
    
    'Das soll nicht ausgef|fffd|hrt werden, wenn Access die Vorlage |fffd|ffnet.
    'F|fffd|r Access-Vorlage ist Feld "MakroBeimOeffnenStarten" = False, wird dann von Access auf true gesetzt
    If ActiveWorkbook.CustomDocumentProperties("MakroBeimOeffnenStarten") = True Then
        DokuInfo_Formular_oeffnen
    End If
End Sub

'Private Sub Workbook_BeforePrint(Cancel As Boolean)
'
'    Seitenzahl
'
'End Sub
Attribute VB_Name = "DokuInfo_Formular"
Option Explicit
'Globale Konstanten
Public Const strcFormatCodes As String = "&08"  '"&""Frutiger 45 Light""&08"   'Enth|fffd|lt Codes zum Formatieren der Fu|fffd|zeile
Public Const strcEntwurf As String = " Draft"     'Deutsch "Entwurf", englisch "draft"
Public Const strcEntwurfFuss As String = " Draft"    'f|fffd|r Fu|fffd|zeile, hinter Version
Public Const strcNameDeckblatt As String = "Coversheet" 'Deutsch "Titelseite", englisch "Coversheet". F|fffd|r Test beim |fffd|ffnen
Public Const strcNameHistorie As String = "Document History" 'Deutsch "|fffd|nderungshistorie", englisch "Document History". F|fffd|r Test beim |fffd|ffnen
Public Const strcVerVorlage As String = "30IFAT" 'Version der Vorlage.
            
            '21: Convert empty fields -> "-". Info format author
            '30: Jump to v30 all templates; M+W -> Exyte
            '20a: png not pgn as picture file type
            '20: No checkboxes on coversheet, use "x" in simple cells; code change: only rename sheets if Office version = 2007; Open pictures: Allow *.png
            '19: import doc/project info also from xlsm / docm
            '18: Legal Disclaimer
            '17: Schreibfehler "Date Planned" korrigiert. Abgleitet aus v5 MWPA.
            '15: Tip Text englisch
            '14: Kuerzere Fusszeilen. 15: Umlaute raus aus Code.
            
            
Public Const strcLanguage As String = "e" 'Spracheinstellung f|fffd|r Fehlermeldungen: d = deutsch, e = englisch


Public Sub DokuInfo_Formular_oeffnen()
Dim fOK As Boolean
    ActiveWorkbook.Worksheets(1).Select
    Check_Deckblatt fOK
    If fOK Then
        FrmEingabe_Daten_Einlesen
        FrmEingabe.Show
        FrmEingabe!LogosAktualisieren = False
    End If
End Sub

Public Sub DokuInfo_Formular_schliessen()
    FrmEingabe.Hide
End Sub



Public Sub FrmEingabe_Daten_Einlesen()
Dim i As Integer
Dim ctrl As Control

    'Beim Laden des Formulars Daten aus Dokumenteigenschaften einlesen und im Formular anzeigen

    'F|fffd|r alle Formularfelder, die das Tag "TextDaten" enthalten, sind die Feldnamen im Formular = den Feldnamen in den Dokumenteigenschaften
    For Each ctrl In FrmEingabe.Controls
        If InStr(1, ctrl.Tag, "TextDaten") > 0 Then
            ctrl.Value = ActiveWorkbook.CustomDocumentProperties("" & ctrl.Name & "")
        End If
    Next
    
    'Kombifeld f|fffd|r Version f|fffd|llen, Anbieten Version 00 - 30
    For i = 0 To 30
        FrmEingabe.Version.AddItem Format(i, "00")
    Next

    'Kombifeld f|fffd|r Revision f|fffd|llen, Anbieten Revision 0 - 9
    For i = 0 To 9
        FrmEingabe.Revision.AddItem Format(i, "0")
    Next

End Sub



Public Sub Check_Deckblatt(ByRef fOK As Boolean)
On Error GoTo CheckDeckblatt_Err

Dim ctrl As Control
Dim strFeldname As String
Dim strDummy As String


    'Pr|fffd|fe, ob Deckblatt an richtiger Position ist
    'Der Soll-Name steht in der globalen Konstante strcNameDeckblatt
    'Zun|fffd|chst annehmen, dass alles ok ist
    fOK = True
    
    If Not ActiveWorkbook.Worksheets(1).Name = strcNameDeckblatt Then

        If strcLanguage = "d" Then
            MsgBox "Das erste Tabellenblatt ist nicht das Deckblatt oder der Name des Blattes wurde ge|fffd|ndert." & Chr(10) & Chr(13) & _
                "Das Makro f|fffd|r Deckblatt und Fu|fffd|zeilen kann daher nicht funktionieren.", , "Vorlage wurde ver|fffd|ndert"
        Else
        If strcLanguage = "e" Then
            MsgBox "The first sheet is not the coversheet or the name of the sheet has been changed." & Chr(10) & Chr(13) & _
                "The macro for coversheet and footers will therefore not function.", , "Template has been changed"
        End If
        End If
        fOK = False
    Else
        'Pr|fffd|fe, ob Feldnamen des Formulars auch im Deckblatt als benannte Bereiche existieren
        'F|fffd|r alle Felder des Eingabeformulars
        For Each ctrl In FrmEingabe.Controls
            'Nur Felder, die das Tag "Deckblatt" enthalten.
            If InStr(1, ctrl.Tag, "Deckblatt") > 0 Then
                'Versuche, die benannten Bereiche anzusprechen
                'Wenn der Name des benannten Bereichs nicht gefunden wird, entsteht Laufzeitfehler 1004 "Die Methode Range f|fffd|r das Objekt _Global ist fehlgeschlagen"
                'Dieser Fehler wird abgefangen, fOK = false gesetzt und der Name des nicht vorhandenen Bereich in strFeldname geschrieben
                strDummy = Range("" & ctrl.Name & "").Value
            End If
        Next
        
'    End If
    End If  'Pr|fffd|fung Deckblatt



CheckDeckblatt_Exit:
    Exit Sub


CheckDeckblatt_Err:
    'Fehler 1004 abfangen, entsteht, wenn Feldname nicht gefunden wurde
    If Err.Number = 1004 Then
        If strDummy = "Entwurf" Then
            fOK = False
            If strcLanguage = "d" Then
                MsgBox "Benannter Bereich <Entwurf> im Deckblatt nicht gefunden. Makro wird nicht funktionieren.", , "Fehler"
            Else
            If strcLanguage = "e" Then
                MsgBox "Named field <Entwurf> in cover sheet not found. Macro will not work.", , "Error"
            End If
            End If
        Else
            fOK = False
            If strcLanguage = "d" Then
                MsgBox "Benannter Bereich <" & ctrl.Name & "> im Deckblatt nicht gefunden. Makro wird nicht funktionieren.", , "Fehler"
            Else
            If strcLanguage = "e" Then
                MsgBox "Named field <" & ctrl.Name & "> in cover sheet not found. Macro will not work.", , "Error"
            End If
            End If
        End If
        Resume CheckDeckblatt_Exit
    Else
        If strcLanguage = "d" Then
            MsgBox "Fehler " & Err.Number & " beim |fffd|ffnen des Formulars: " & Chr(10) & Chr(13) & _
                Err.Description
        Else
        If strcLanguage = "e" Then
            MsgBox "Error " & Err.Number & " while opening the form: " & Chr(10) & Chr(13) & _
                Err.Description
        End If
        End If
        fOK = False
        Resume CheckDeckblatt_Exit

    End If
End Sub


'Seitenzahl auf Titelseite eintragen
'22.12.2009 boj
'Public Sub Seitenzahl()
'
'    Dim iSeiten, i As Integer
'
'    For i = 1 To ActiveWindow.SelectedSheets.Count
'        iSeiten = iSeiten + ExecuteExcel4Macro("Get.document(50,""" & ActiveWindow.SelectedSheets(i).Name & """)")
'    Next
'
'    If strcLanguage = "d" Then
'        Range("Seitenzahl").Value = "1 von " & iSeiten
'    Else
'    If strcLanguage = "e" Then
'        Range("Seitenzahl").Value = "1 of " & iSeiten
'    End If
'    End If
'
'End Sub


Attribute VB_Name = "FrmEingabe"
Attribute VB_Base = "0{88DAC4CA-C02A-432B-9BB0-40313B5A291E}{B4FE4096-32A2-4304-AE53-FD4256FA58A3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub Aktualisieren_Click()
    
    If Aktualisieren_Durchfuehren = True Then
        'Formular ausblenden
        Me.Hide
    End If
End Sub


Private Sub Heute_Erstellung_Click()
    'v13 MWPI Systemeinstellung f|fffd|r das Format nehmen
    'Me!ErstellDatum1 = Format(Date, "dd.mm.yyyy")
    Me!ErstellDatum1 = Format(Date, "Short Date")
End Sub


Private Sub Heute_Besprechung_Click()
    'v13 MWPI Systemeinstellung f|fffd|r das Format nehmen
    'Me!ErstellDatum1 = Format(Date, "dd.mm.yyyy")
    Me!BesprechungDatum = Format(Date, "Short Date")
End Sub


'|fffd|bernahme der Daten von einem anderen Dokument
'Das Dokument sollte eine Word- oder Excel-Datei
'auf Basis der Dokumentenvorlagen f|fffd|r Projektdokumente (aktuelle Version) sein
'v19: Import auch docm, xlsm

Private Sub ImportButton_Click()



    Dim fd As FileDialog
    Dim vrtSelectedItems As Variant
    Dim strPfad As String
    Dim hauptDokW As Object
    Dim oXL   As Object
    Dim hauptDokE As Workbook
    Dim WordWasNotRunning As Boolean
    Dim DateiBereitsOffen As Boolean
    Dim path As String
    Dim excelDok As Workbook
    Dim wordDok As Object
    'V19
    Dim strFileExtension As String

    'Dokument |fffd|ber einen Dialog ausw|fffd|hlen

    Set fd = Application.FileDialog(msoFileDialogFilePicker)
    With fd
        .AllowMultiSelect = False
        .Filters.Clear
        .Filters.Add "Word-Excel", "*.doc; *.xls; *.docm; *.xlsm", 1
        If strcLanguage = "d" Then
            .Title = "Dokument ausw|fffd|hlen"
        Else
        If strcLanguage = "e" Then
            .Title = "Select document"
        End If
        End If
        .InitialFileName = ""
        'Wenn OK geklickt, dann Daten |fffd|bernehmen
        If .Show = -1 Then

            Application.Cursor = xlWait

            For Each vrtSelectedItems In .SelectedItems
                path = vrtSelectedItems
            Next
            
            'v19 Find out file extension. Read only the first 3 chars after *, so docm will be doc, xlsm will be xls
            strFileExtension = Mid(path, InStrRev(path, ".") + 1, 3)
            
            
            'Word-Datei |fffd|ffnen und auslesen
            If strFileExtension = "doc" Then
                'If Word is running, get a handle on it; otherwise start a new instance of Word
                On Error Resume Next
                Set oXL = GetObject(, "Word.Application")

                If Err Then
                   WordWasNotRunning = True
                   Set oXL = CreateObject("Word.Application")
                End If
                
                oXL.WordBasic.DisableAutoMacros 1
                
                On Error GoTo Err_Handler

                'Test, ob das Dokument schon offen ist
                For Each wordDok In oXL.Documents
                    If path = wordDok.path & "\" & wordDok.Name Then
                        DateiBereitsOffen = True
                        Set hauptDokW = wordDok
                    End If
                Next
                '|fffd|ffnen des Dokumentes, falls nicht vorher schon offen
                If Not DateiBereitsOffen Then Set hauptDokW = oXL.Documents.Open(Filename:=(path), ReadOnly:=True, AddToRecentFiles:=False, Visible:=False, Revert:=False)
                If Me!Dokument_Box.Value = True Then
                    Me!DokuTitel.Value = hauptDokW.CustomDocumentProperties("DokuTitel")
                    Me!DokuTitelKurz.Value = hauptDokW.CustomDocumentProperties("DokuTitelKurz")
                    Me!DokuNr.Value = hauptDokW.CustomDocumentProperties("DokuNr")
                    Me!DokuNrKunde.Value = hauptDokW.CustomDocumentProperties("DokuNrKunde")
                    Me!DokuTyp.Value = hauptDokW.CustomDocumentProperties("DokuTyp")
                    Me!Ersteller.Value = hauptDokW.CustomDocumentProperties("Ersteller")
                    Me!ErstellDatum1.Value = hauptDokW.CustomDocumentProperties("ErstellDatum1")
                    Me!Version.Value = hauptDokW.CustomDocumentProperties("Version")
                    Me!Revision.Value = hauptDokW.CustomDocumentProperties("Revision")
                End If
                If Me!Projekt_Box.Value = True Then
                    Me!KundeProjektNr.Value = hauptDokW.CustomDocumentProperties("KundeProjektNr")
                    Me!Kundenkuerzel.Value = hauptDokW.CustomDocumentProperties("Kundenkuerzel")
                    Me!Projekt.Value = hauptDokW.CustomDocumentProperties("Projekt")
                    Me!KundenAdresse.Value = hauptDokW.CustomDocumentProperties("KundenAdresse")
                    Me!LogoLinks.Value = hauptDokW.CustomDocumentProperties("LogoLinks")
                    Me!LogosAktualisieren.Value = True
                    Me!MWProjektNr.Value = hauptDokW.CustomDocumentProperties("MWProjektNr")
                    Me!LogoRechts.Value = hauptDokW.CustomDocumentProperties("LogoRechts")
                    Me!MWAdresse.Value = hauptDokW.CustomDocumentProperties("MWAdresse")
                End If
                'Beenden von Word und Schlie|fffd|en des Dokumentes, falls nicht vorher schon offen
                On Error Resume Next
                If WordWasNotRunning Then
                    oXL.Quit
                Else
                    If Not DateiBereitsOffen Then hauptDokW.Close
                End If
                oXL.WordBasic.DisableAutoMacros 0
            Else

                'Excel-Datei |fffd|ffnen und auslesen
                If strFileExtension = "xls" Then
                    
                    On Error GoTo Err_Handler
    
                    Application.ScreenUpdating = False
                    Application.EnableEvents = False
                    
                    'Test, ob das Dokument schon offen ist
                    For Each excelDok In Application.Workbooks
                        If path = excelDok.path & "\" & excelDok.Name Then
                            DateiBereitsOffen = True
                            Set hauptDokE = excelDok
                        End If
                    Next
                    '|fffd|ffnen des Dokumentes, falls nicht vorher schon offen
                    If Not DateiBereitsOffen Then Set hauptDokE = Application.Workbooks.Open(path)
                    If Me!Dokument_Box.Value = True Then
                        Me!DokuTitel.Value = hauptDokE.CustomDocumentProperties("DokuTitel")
                        Me!DokuTitelKurz.Value = hauptDokE.CustomDocumentProperties("DokuTitelKurz")
                        Me!DokuNr.Value = hauptDokE.CustomDocumentProperties("DokuNr")
                        Me!DokuNrKunde.Value = hauptDokE.CustomDocumentProperties("DokuNrKunde")
                        Me!DokuTyp.Value = hauptDokE.CustomDocumentProperties("DokuTyp")
                        Me!Ersteller.Value = hauptDokE.CustomDocumentProperties("Ersteller")
                        Me!ErstellDatum1.Value = hauptDokE.CustomDocumentProperties("ErstellDatum1")
                        Me!Version.Value = hauptDokE.CustomDocumentProperties("Version")
                        Me!Revision.Value = hauptDokE.CustomDocumentProperties("Revision")
                    End If
                    If Me!Projekt_Box.Value = True Then
                        Me!KundeProjektNr.Value = hauptDokE.CustomDocumentProperties("KundeProjektNr")
                        Me!Kundenkuerzel.Value = hauptDokE.CustomDocumentProperties("Kundenkuerzel")
                        Me!Projekt.Value = hauptDokE.CustomDocumentProperties("Projekt")
                        Me!KundenAdresse.Value = hauptDokE.CustomDocumentProperties("KundenAdresse")
                        Me!LogoLinks.Value = hauptDokE.CustomDocumentProperties("LogoLinks")
                        Me!LogosAktualisieren.Value = True
                        Me!MWAdresse.Value = hauptDokE.CustomDocumentProperties("MWAdresse")
                        Me!LogoRechts.Value = hauptDokE.CustomDocumentProperties("LogoRechts")
                        Me!MWProjektNr.Value = hauptDokE.CustomDocumentProperties("MWProjektNr")
                    End If
                    Application.EnableEvents = True
                    Application.ScreenUpdating = True
                    'Schlie|fffd|en des Dokumentes, falls nicht vorher schon offen
                    If Not DateiBereitsOffen Then hauptDokE.Close (False)
                End If
            End If
        FrmEingabe.Repaint
        Application.Cursor = xlDefault
        End If
    End With

    Exit Sub

Err_Handler:
    If strcLanguage = "e" Then
        MsgBox "Error during data import. Source document may not be compatible for import.", , "Error"
    Else
    If strcLanguage = "d" Then
       MsgBox "Fehler beim Daten-Import. Quelldokument m|fffd|glicherweise nicht geeignet f|fffd|r Import.", , "Fehler"
    End If
    End If
    'Falls Excel-Datei ausgew|fffd|hlt wurde, die Datei wieder schlie|fffd|en / Excel beenden
    If strFileExtension = "xls" Then
        If Not DateiBereitsOffen Then hauptDokE.Close
    End If
        
    'Falls Word-Datei ausgew|fffd|hlt wurde, die Datei wieder schlie|fffd|en
    If strFileExtension = "doc" Then
        If WordWasNotRunning Then
            oXL.Quit
        Else
            If Not DateiBereitsOffen Then hauptDokW.Close
            oXL.WordBasic.DisableAutoMacros 0
        End If
    End If
    Application.Cursor = xlDefault
    Application.EnableEvents = True
    Application.ScreenUpdating = True






End Sub

'15: Tip Text englisch


Private Sub LogoLinksAuswaehlen_Click()
Dim fd As FileDialog
Dim vrtSelectedItems As Variant
Dim strPfad As String

    'Bild links ausw|fffd|hlen
    
    Set fd = Application.FileDialog(msoFileDialogFilePicker)
    With fd

        .AllowMultiSelect = False
        .Filters.Add "Images", "*.gif; *.jpg; *.bmp; *.tif; *.png", 1
        .Title = "Logo linke Kopfzeile w|fffd|hlen"
        If Not (IsNull(Me!LogoLinks) Or Me!LogoLinks = "") Then
            If InStr(1, Me!LogoLinks, "\") > 1 Then
                'Pfad extrahieren, sonst wird nur eine Datei angezeigt!
                strPfad = Mid(Me!LogoLinks, 1, InStrRev(Me!LogoLinks, "\") - 1)
                'Kontrolle ob Pfad existiert
                If Dir(strPfad, vbDirectory) <> "" Then
                    .InitialFileName = strPfad  'sp|fffd|ter Filenamen speichern und hier vorgeben, wenn er existiert
                End If
            End If
        Else
            .InitialFileName = ""
        End If
        If .Show = -1 Then  'Wenn ok geklickt
            For Each vrtSelectedItems In .SelectedItems
                Me!LogoLinks = vrtSelectedItems
            Next
        End If
    End With
    
End Sub


Private Sub LogoRechtsAuswaehlen_Click()
Dim fd As FileDialog
Dim vrtSelectedItems As Variant
Dim strPfad As String

    'Bild links ausw|fffd|hlen
    
    Set fd = Application.FileDialog(msoFileDialogFilePicker)
    With fd

        .AllowMultiSelect = False
        .Filters.Add "Images", "*.gif; *.jpg; *.bmp; *.tif; *.png", 1
        .Title = "Logo rechte Kopfzeile w|fffd|hlen"
        If Not (IsNull(Me!LogoRechts) Or Me!LogoRechts = "") Then
            If InStr(1, Me!LogoRechts, "\") > 1 Then
                'Pfad extrahieren, sonst wird nur eine Datei angezeigt!
                strPfad = Mid(Me!LogoRechts, 1, InStrRev(Me!LogoRechts, "\") - 1)
                'Kontrolle ob Pfad existiert
                If Dir(strPfad, vbDirectory) <> "" Then
                    .InitialFileName = strPfad  'sp|fffd|ter Filenamen speichern und hier vorgeben, wenn er existiert
                End If
            End If
        Else
            .InitialFileName = ""
        End If
        If .Show = -1 Then  'Wenn ok geklickt
            For Each vrtSelectedItems In .SelectedItems
                Me!LogoRechts = vrtSelectedItems
            Next
        End If
    End With

End Sub

Private Sub LogosAktualisieren_Click()
    'Wenn H|fffd|kchen gesetzt, pr|fffd|fen, ob die Logo-Files existieren.
    'Das eigentliche Aktualisieren findet erst beim klicken der buttons statt
    If Me!LogosAktualisieren = True Then
    
        'gar kein logo
        If Me!LogoLinks = "" And Me!LogoRechts = "" Then
            If strcLanguage = "e" Then
                If MsgBox("No files for logos selected." & vbCrLf & "Delete existing logos on update?", vbYesNo, "Caution") = vbNo Then
                    Me!LogosAktualisieren = False
                End If
            Else
            If strcLanguage = "d" Then
                If MsgBox("Keine Logodateien ausgew|fffd|hlt." & vbCrLf & "Bestehende Logos beim Aktualisieren entfernen?", vbYesNo, "Achtung") = vbNo Then
                    Me!LogosAktualisieren = False
                End If
            End If
            End If
            Exit Sub
        End If
    
        'Logo links
        If IsNull(Me!LogoLinks) Or Me!LogoLinks = "" Then
            If strcLanguage = "e" Then
                MsgBox "No file for left header logo selected." & vbCrLf & "Existing logos will be deleted.", , "No File"
            Else
            If strcLanguage = "d" Then
                MsgBox "Kein Logo f|fffd|r linke Kopfzeile angegeben." & vbCrLf & "Bestehende Logos links werden gel|fffd|scht.", , "Hinweis"
            End If
            End If
        Else
            'Pr|fffd|fen ob Datei vorhanden
            If Dir(Me!LogoLinks) = "" Then
                If strcLanguage = "e" Then
                    MsgBox "The file for left logo" & vbCrLf & Me!LogoLinks & vbCrLf & _
                        "could not be found. Please select a new file or delete the entry.", , "File not found"
                Else
                If strcLanguage = "d" Then
                    MsgBox "Die Datei f|fffd|r Logo linke Kopfzeile" & vbCrLf & Me!LogoLinks & vbCrLf & _
                        "wurde nicht gefunden. Bitte neu ausw|fffd|hlen oder l|fffd|schen.", , "Datei nicht gefunden"
                End If
                End If
                Me!LogosAktualisieren = False
                Exit Sub
            End If
        End If
        
        'Logo rechts
        If IsNull(Me!LogoRechts) Or Me!LogoRechts = "" Then
            If strcLanguage = "e" Then
                MsgBox "No file for right header logo selected." & vbCrLf & "Existing logos will be deleted.", , "No File"
            Else
            If strcLanguage = "d" Then
                MsgBox "Kein Logo f|fffd|r rechte Kopfzeile angegeben." & vbCrLf & "Bestehende Logos rechts werden gel|fffd|scht.", , "Hinweis"
            End If
            End If
        Else
            'Pr|fffd|fen ob Datei vorhanden
            If Dir(Me!LogoRechts) = "" Then
                If strcLanguage = "e" Then
                    MsgBox "The file for right logo" & vbCrLf & Me!LogoRechts & vbCrLf & _
                        "could not be found. Please select a new file or delete the entry.", , "File not found"
                Else
                If strcLanguage = "d" Then
                    MsgBox "Die Datei f|fffd|r Logo rechte Kopfzeile" & vbCrLf & Me!LogoRechts & vbCrLf & _
                        "wurde nicht gefunden. Bitte neu ausw|fffd|hlen oder l|fffd|schen.", , "Datei nicht gefunden"
                End If
                End If
                Me!LogosAktualisieren = False
                Exit Sub
            End If
        End If
        
    End If
    
End Sub



Private Sub Schliessen_Click()
    Me.Hide
End Sub

Private Sub SpeichernUnter_Click()

Dim strFilename As String


    'Aktualisieren
    If Aktualisieren_Durchfuehren = False Then
        Exit Sub
    End If

    'Dateinamen zusammenbauen
    strFilename = ""
            
    
    If Not IsNull(Me!DokuNr) Then
        strFilename = Me!DokuNr
    End If
    
    'v13 MWPI: "-" statt ".", nur wenn Revision <> 0
    If Not IsNull(Me!Version) Then
        If strFilename = "" Then
            strFilename = "V" & Me!Version
        Else
            strFilename = strFilename & "_V" & Me!Version
        End If
    End If
    
    If Not IsNull(Me!Revision) Then
           
            'v13 MWPI
            If Me!Revision <> "0" Then
                strFilename = strFilename & "-" & Me!Revision
                If strcLanguage = "d" Then
                    strFilename = strFilename & "_Entw"
                Else
                    strFilename = strFilename & "_Draft"
                End If
            Else
                'v13b
                strFilename = strFilename & "-" & Me!Revision
            
            End If
    End If
    
    
    'DokuTitelKurz statt Dokutitel, wenn vorhanden
    If Not IsNull(Me!DokuTitelKurz) Then
        If strFilename = "" Then
            strFilename = Me!DokuTitelKurz
        Else
            strFilename = strFilename & "_" & Me!DokuTitelKurz
        End If
    End If
    If strFilename = "" Then
        If strcLanguage = "e" Then
            strFilename = "PleaseEnterFilename"
        Else
        If strcLanguage = "d" Then
            strFilename = "BitteDateinamenEingeben"
        End If
        End If
    End If
    
    'Leerzeichen aus Dateinamen entfernen, BOJ, 15.01.09
    strFilename = Replace(strFilename, " ", "_")
    strFilename = strFilename & ".xlsm"

    'Dateidialog
    '#|fffd|nderung in Dok.-Vers.3, wegen Bug in englischer Version von MS Office 2003
    '#Fehlerbeschreibung: Runtime error -2147467259(80004005), Method "Execute" of object "FileDialog" failed
    '#Fehlerbehebung: Verwendung von Application.Dialogs(xlDialogSaveAs) als Ersatz f|fffd|r Application.FileDialog()
    '# BOJ, 2009-12-08
    Application.Dialogs(xlDialogSaveAs).Show (strFilename)
    
    'Formular ausblenden
    Me.Hide


End Sub

Private Sub TitelKopieren_Click()
Dim strBuff As String
    If Not (IsNull(Me!DokuTitel) Or Me!DokuTitel = "") Then
        'Zeilenumbrueche entfernen
        strBuff = Replace(Me!DokuTitel, Chr(13), "")
        Me!DokuTitelKurz = Replace(strBuff, Chr(10), " ")
    Else
        If strcLanguage = "e" Then
            MsgBox "The title for coversheet is blank.", , "Nothing to Copy"
        Else
        If strcLanguage = "d" Then
            MsgBox "Titel f|fffd|r Deckblatt ist leer.", , "Kann nicht kopiert werden"
        End If
        End If
    End If
End Sub

Private Function Aktualisieren_Durchfuehren() As Boolean

Dim ctrl As Control
Dim strFusszeileLinks As String
Dim strFusszeileRechts As String
Dim strEntw As String
Dim i As Integer
Dim lngAnzahlZeichen As Long
Dim fGefunden  As Boolean
Dim strBuff As String

    
    Aktualisieren_Durchfuehren = True
    
    'Eingabepr|fffd|fung: DokuTitel darf nicht leer sein
    If IsNull(Me!DokuTitel) Or Me!DokuTitel = "" Then
        If strcLanguage = "e" Then
            MsgBox "Please enter a title for the coversheet.", , "Missing Title"
        Else
        If strcLanguage = "d" Then
            MsgBox "Bitte geben Sie einen Titel f|fffd|r das Deckblatt ein.", , "Titel f|fffd|r Deckblatt fehlt"
        End If
        End If
        Aktualisieren_Durchfuehren = False
        Exit Function
    End If
    
    
    'Eingabepr|fffd|fung: Datum muss im Format TT.MM.JJJJ eingegeben werden, BOJ, 09.01.2009
    'v 13 MWPI: nein, systemformat nehmen
'    Dim FormatKorrekt As Boolean
'    Dim Datum As String
'    Me.ErstellDatum1 = Trim(Me.ErstellDatum1)
'    Datum = Me.ErstellDatum1
'    FormatKorrekt = True
'
'    If Len(Datum) <> 10 Then
'        FormatKorrekt = False
'    End If
'
'    If Mid(Datum, 3, 1) <> "." Then
'        FormatKorrekt = False
'    End If
'
'    If Mid(Datum, 6, 1) <> "." Then
'        FormatKorrekt = False
'    End If
'
'    If Not NurZiffern(Mid(Datum, 1, 2)) Then
'        FormatKorrekt = False
'    End If
'
'    If Not NurZiffern(Mid(Datum, 4, 2)) Then
'        FormatKorrekt = False
'    End If
'
'    If Not NurZiffern(Mid(Datum, 7, 4)) Then
'        FormatKorrekt = False
'    End If
'
'    If FormatKorrekt = False Then
'        If strcLanguage = "e" Then
'            MsgBox "Please enter report date in the format DD.MM.YYYY !", , "Date Format Error"
'        Else
'        If strcLanguage = "d" Then
'            MsgBox "Bitte geben Sie das Berichts-Datum im Format TT.MM.JJJJ ein.", , "Format des Datums ist falsch"
'        End If
'        End If
'        Aktualisieren_Durchfuehren = False
'        Exit Function
'    End If
'
'    'Besprechungsdatum
'
'    Me.BesprechungDatum = Trim(Me.BesprechungDatum)
'    Datum = Me.BesprechungDatum
'    FormatKorrekt = True
'
'    If Len(Datum) <> 10 Then
'        FormatKorrekt = False
'    End If
'
'    If Mid(Datum, 3, 1) <> "." Then
'        FormatKorrekt = False
'    End If
'
'    If Mid(Datum, 6, 1) <> "." Then
'        FormatKorrekt = False
'    End If
'
'    If Not NurZiffern(Mid(Datum, 1, 2)) Then
'        FormatKorrekt = False
'    End If
'
'    If Not NurZiffern(Mid(Datum, 4, 2)) Then
'        FormatKorrekt = False
'    End If
'
'    If Not NurZiffern(Mid(Datum, 7, 4)) Then
'        FormatKorrekt = False
'    End If
'
'    If FormatKorrekt = False Then
'        If strcLanguage = "e" Then
'            MsgBox "Please enter meeting date in the format DD.MM.YYYY !", , "Date Format Error"
'        Else
'        If strcLanguage = "d" Then
'            MsgBox "Bitte geben Sie das Besprechungsdatum im Format TT.MM.JJJJ ein.", , "Format des Datums ist falsch"
'        End If
'        End If
'        Aktualisieren_Durchfuehren = False
'        Exit Function
'    End If
    
    'Eingabepr|fffd|fung: DokuTitelKurz leer?
    If IsNull(Me!DokuTitelKurz) Or Me!DokuTitelKurz = "" Then
        strBuff = Replace(Me!DokuTitel, Chr(13), "")
        Me!DokuTitelKurz = Replace(strBuff, Chr(10), " ")
    End If
    
    
    
    'Eingabepr|fffd|fung: DokuTitelKurz f|fffd|r Fusszeile soll keinen Zeilenumbruch enthalten!
    If InStr(1, Me!DokuTitelKurz, Chr(10)) Then
        If strcLanguage = "e" Then
            MsgBox "There is a carriage return in the title for the footers. Please delete."
        Else
        If strcLanguage = "d" Then
            MsgBox "Der Titel f|fffd|r die Fusszeile enth|fffd|lt einen Zeilenumbruch. Bitte entfernen."
        End If
        End If
        Aktualisieren_Durchfuehren = False
        Exit Function
    End If
    
    

    'Daten aus Formular in Datenfelder (Eigenschaften, Allgemein) der Datei |fffd|bertragen
    ' Feldname Formular = Feldnamen in Dokumenteigenschaften f|fffd|r Textfelder
    'Diese Felder des Formulars haben Marke "TextDaten"
    'Und dann gleich noch ins Deckblatt damit, wenn im Tag "Deckblatt" steht. Zellen dort haben auch die gleichen Namen
    'v 21Put in "-" on empty fields
    
    For Each ctrl In Me.Controls
        If InStr(1, ctrl.Tag, "TextDaten") > 0 Then
            'v21
            If ctrl.Value = "" Then
                'Fill with a dash
                ctrl.Value = "-"
                fGefunden = True
            End If
        
            'In die Dokumenteigenschaften schreiben
            ActiveWorkbook.CustomDocumentProperties("" & ctrl.Name & "") = ctrl.Value
        End If
        
        If InStr(1, ctrl.Tag, "Deckblatt") > 0 Then
            'Wenn mit Zeilenumbruch, dann chr(13) entfernen
            Range("" & ctrl.Name & "").Value = Replace(ctrl.Value, Chr(13), "")
        End If
    Next
    If fGefunden = True Then
         MsgBox "Some fields in the form have been empty." & vbCrLf & _
                     "These have been filled with a ""-"".", vbOKOnly, "Info empty fields filled"
    
    End If
    fGefunden = False
    
    
    'v13 MWPI: Entwurf auf Deckblatt zeigen
    'v13 MWPI "Entwurf" aufs Deckblatt
    'Restliche Felder: Entwurf
    If Me!Revision <> "0" Then
        ActiveWorkbook.CustomDocumentProperties("Entwurf") = strcEntwurf
        'Ins Deckblatt
        Range("entwurf").Value = strcEntwurf
    Else
        ActiveWorkbook.CustomDocumentProperties("Entwurf") = ""
        Range("entwurf").Value = ""
    End If
    
              
    'Fu|fffd|zeile links zusammenbauen, nur Text
    If strcLanguage = "d" Then
        'strFusszeileLinks = "Besprechungsprotokoll: " & Me!DokuTitelKurz & Chr(10) & "Dokumentennr. M+W: " & Me!DokuNr & Chr(10) & "Projekt: " & Me!Projekt & Chr(10) & "Ersteller: " & Me!Ersteller
        'V14
        'v30
        strFusszeileLinks = "Thema: " & Me!DokuTitelKurz & Chr(10) & "Doku-Nr. Exyte: " & Me!DokuNr & Chr(10) & "Projekt: " & Me!Projekt & Chr(10) & "Ersteller: " & Me!Ersteller
    Else
        If strcLanguage = "e" Then
            'strFusszeileLinks = "Meeting Minutes: " & Me!DokuTitelKurz & Chr(10) & "Document No. M+W: " & Me!DokuNr & Chr(10) & "Project: " & Me!Projekt & Chr(10) & "Author: " & Me!Ersteller
            'V14
            'v30
            strFusszeileLinks = "Topic: " & Me!DokuTitelKurz & Chr(10) & "Doc. No. Exyte: " & Me!DokuNr & Chr(10) & "Project: " & Me!Projekt & Chr(10) & "Author: " & Me!Ersteller
        End If
    End If
    'Debug.Print "Links, ohne Format: " & Len(strFusszeileLinks) & Chr(10) & strFusszeileLinks
        
    '+Format-Codes
    strFusszeileLinks = strcFormatCodes & strFusszeileLinks
    'Debug.Print "Links, mit Format: " & Len(strFusszeileLinks) & Chr(10) & strFusszeileLinks
    
    
    'Fu|fffd|zeile rechts zusammenbauen, nur Text
    'Wenn Entwurf, dann K|fffd|rzel aus Konstanten holen
    If Me!Revision > 0 Then
        strEntw = strcEntwurfFuss
    Else
        strEntw = ""
    End If
    If strcLanguage = "e" Then
    
        'strFusszeileRechts = "Version:  " & Me!Version & "." & Me!Revision & strEntw & Chr(10) & "Meeting Date:  " & Me!BesprechungDatum & Chr(10) & "Page:  " & "&P of &N" & Chr(10) & "&07 Template: v " & strcVerVorlage
        'V14
        'v30 Template wieder rein
        strFusszeileRechts = "Version:  " & Me!Version & "." & Me!Revision & strEntw & Chr(10) & "Date:  " & Me!BesprechungDatum & Chr(10) & "Page:  " & "&P of &N" & Chr(10) & "&07 Template: v " & strcVerVorlage
    Else
        If strcLanguage = "d" Then
            'strFusszeileRechts = "Version:  " & Me!Version & "." & Me!Revision & strEntw & Chr(10) & "Datum der Besprechung:  " & Me!BesprechungDatum & Chr(10) & "Seite:  " & "&P von &N" & Chr(10) & "&07 Vorlage: v " & strcVerVorlage
            'V14
            'v30 Template wieder rein
            strFusszeileRechts = "Version:  " & Me!Version & "." & Me!Revision & strEntw & Chr(10) & "Datum:  " & Me!BesprechungDatum & Chr(10) & "Seite:  " & "&P von &N" & Chr(10) & "&07 Template: v " & strcVerVorlage
        End If
    End If
    'Debug.Print "Rechts, ohne Format: " & Len(strFusszeileRechts) & Chr(10) & strFusszeileRechts
    
    '+Format-Codes
    strFusszeileRechts = strcFormatCodes & strFusszeileRechts
    'Debug.Print "Rechts, mit Format: " & Len(strFusszeileRechts) & Chr(10) & strFusszeileRechts
    
    'Pr|fffd|fen ob mehr als 249 Zeichen insgesamt
    'Debug.Print "L|fffd|nge gesamt:" & Len(strFusszeileLinks) + Len(strFusszeileRechts)
    lngAnzahlZeichen = Len(strFusszeileLinks) + Len(strFusszeileRechts)
     If lngAnzahlZeichen > 249 Then
        If strcLanguage = "e" Then
            MsgBox "The footer exceeds " & lngAnzahlZeichen & " characters." & Chr(10) & Chr(13) & _
                "Excel only allows 249 characters for the whole footer." & Chr(10) & Chr(13) & _
                "Please shorten the title for the footers", , "Footer to large"
        Else
        If strcLanguage = "d" Then
            MsgBox "Die Fu|fffd|zeile enth|fffd|lt " & lngAnzahlZeichen & " Zeichen." & Chr(10) & Chr(13) & _
                "Excel erlaubt nur 249 Zeichen f|fffd|r die gesamte Fu|fffd|zeile." & Chr(10) & Chr(13) & _
                "Bitte k|fffd|rzen Sie den Dokumententitel f|fffd|r die Fu|fffd|zeile!", , "Fu|fffd|zeile zu lang"
        End If
        End If
        Aktualisieren_Durchfuehren = False
        Exit Function
    End If
    
    'v20: Do not rename sheets if Office version <> 2007
    If Application.Version = 12 Then
    
        'Bildschirmaktualisierung deaktivieren, um Vorgang der Umbenennung zu beschleunigen
        Application.ScreenUpdating = False
        
        '###Excel 2007 Bug: - BOJ, 24.02.09
        '###Excel 2007 st|fffd|rzt reproduzierbar ab, wenn die Fusszeile oder Kopfzeile eines Tabellenblatts ge|fffd|ndert wird
        '###Der Fehler tritt nicht auf, wenn der Name des Tabellenblatts (Worksheet) mit den Buchstaben I-Z beginnt !!!
        '###Als Workaround: Namen der Tabellenbl|fffd|tter ersetzen durch X1 (fortlaufende Numme)
        Dim strName() As String
        ReDim strName(ActiveWorkbook.Worksheets.Count)
        For i = 2 To ActiveWorkbook.Worksheets.Count
            strName(i) = Worksheets(i).Name
            Worksheets(i).Name = "X" & i
        Next
    End If
       
       
       
    'Fu|fffd|zeilen einf|fffd|gen: F|fffd|r jedes Worksheet = Blatt ausser dem ersten
    For i = 2 To ActiveWorkbook.Worksheets.Count
        'Bestehende Fu|fffd|zeilen zur|fffd|cksetzen
        Worksheets(i).PageSetup.LeftFooter = ""
        Worksheets(i).PageSetup.CenterFooter = ""
        Worksheets(i).PageSetup.RightFooter = ""
        'Text einf|fffd|gen
        Worksheets(i).PageSetup.LeftFooter = strFusszeileLinks
        Worksheets(i).PageSetup.RightFooter = strFusszeileRechts
        'Debug.Print "Gesamtl|fffd|nge nach Anwendung: " & Len(Worksheets(i).PageSetup.LeftFooter) + Len(Worksheets(i).PageSetup.RightFooter)
        
        'v 13 MWPA Luft holen
        'v 13a Sorgt f|fffd|r Absturz unter Office 2010, wieder rausgenommen
        'DoEvents
        
    Next    'n|fffd|chstes Blatt

    'F|fffd|r jedes Diagramm
    For i = 1 To ActiveWorkbook.Charts.Count
        'Bestehende Fu|fffd|zeilen zur|fffd|cksetzen
        Charts(i).PageSetup.LeftFooter = ""
        Charts(i).PageSetup.CenterFooter = ""
        Charts(i).PageSetup.RightFooter = ""
        'Text einf|fffd|gen
        Charts(i).PageSetup.LeftFooter = strFusszeileLinks
        Charts(i).PageSetup.RightFooter = strFusszeileRechts
        'Debug.Print "Gesamtl|fffd|nge nach Anwendung: " & Len(Worksheets(i).PageSetup.LeftFooter) + Len(Worksheets(i).PageSetup.RightFooter)
        
        'v 13 MWPA Luft holen
        'DoEvents
        
    Next    'n|fffd|chstes Blatt

    'Logos aktualisieren, falls H|fffd|kchen gesetzt
    If Me!LogosAktualisieren = True Then
        
        Dim SeitenverhaeltnisLogoKunde As Double
        Dim SeitenverhaeltnisLogoLuP As Double
        
        'Logos f|fffd|r Kopfzeile
        For i = 2 To ActiveWorkbook.Worksheets.Count
            'linkes Logo
            If (Me!LogoLinks = "" Or IsNull(Me!LogoLinks)) Then
                'L|fffd|schen
                ActiveWorkbook.Worksheets(i).PageSetup.LeftHeader = ""
            Else
                'Datei zuordnen
                ActiveWorkbook.Worksheets(i).PageSetup.LeftHeaderPicture.Filename = Me!LogoLinks
                'In Kopfzeile schreiben
                ActiveWorkbook.Worksheets(i).PageSetup.LeftHeader = "&G"
                'Anpassen der H|fffd|he der Kopfzeilenlogos, BOJ, 20.02.09
                SeitenverhaeltnisLogoKunde = ActiveWorkbook.Worksheets(i).PageSetup.LeftHeaderPicture.Width / ActiveWorkbook.Worksheets(i).PageSetup.LeftHeaderPicture.Height
                ActiveWorkbook.Worksheets(i).PageSetup.LeftHeaderPicture.Height = 24
                ActiveWorkbook.Worksheets(i).PageSetup.LeftHeaderPicture.Width = 24 * SeitenverhaeltnisLogoKunde
            End If
            'rechtes Logo
            If (Me!LogoRechts = "" Or IsNull(Me!LogoRechts)) Then
                'l|fffd|schen
                ActiveWorkbook.Worksheets(i).PageSetup.RightHeader = ""
            Else
                'Datei zuordnen
                ActiveWorkbook.Worksheets(i).PageSetup.RightHeaderPicture.Filename = Me!LogoRechts
                'In Kopfzeile schreiben
                ActiveWorkbook.Worksheets(i).PageSetup.RightHeader = "&G"
                'Anpassen der H|fffd|he der Kopfzeilenlogos, BOJ, 20.02.09
                SeitenverhaeltnisLogoLuP = ActiveWorkbook.Worksheets(i).PageSetup.RightHeaderPicture.Width / ActiveWorkbook.Worksheets(i).PageSetup.RightHeaderPicture.Height
                ActiveWorkbook.Worksheets(i).PageSetup.RightHeaderPicture.Height = 33
                ActiveWorkbook.Worksheets(i).PageSetup.RightHeaderPicture.Width = 33 * SeitenverhaeltnisLogoLuP
            End If
            'v 13 MWPA Luft holen
            'DoEvents
        Next
        

        'Logos auf Titelseite einf|fffd|gen.
        'Logo wird in ein Rechteck eingef|fffd|gt und die Rechteck-Breite danach auf das Bildformat skaliert.
        'Das direkte Einf|fffd|gen eines Logos als Bild funktionert in Excel 2007 aufgrund eines Bugs nicht zuverl|fffd|ssig.
        On Error GoTo LogoDeckblatt_Err
        If (Me!LogoLinks = "" Or IsNull(Me!LogoLinks)) Then
            ActiveWorkbook.Worksheets(1).Shapes("Rectangle 295").Fill.Visible = False
        Else
            ActiveWorkbook.Worksheets(1).Shapes("Rectangle 295").Fill.UserPicture (Me!LogoLinks)
            ActiveWorkbook.Worksheets(1).Shapes("Rectangle 295").Width = (ActiveWorkbook.Worksheets(1).Shapes("Rectangle 295").Height * SeitenverhaeltnisLogoKunde)
        End If
        If (Me!LogoRechts = "" Or IsNull(Me!LogoRechts)) Then
            ActiveWorkbook.Worksheets(1).Shapes("Rectangle 293").Fill.Visible = False
        Else
            ActiveWorkbook.Worksheets(1).Shapes("Rectangle 293").Fill.UserPicture (Me!LogoRechts)
            ActiveWorkbook.Worksheets(1).Shapes("Rectangle 293").Width = ActiveWorkbook.Worksheets(1).Shapes("Rectangle 293").Height * SeitenverhaeltnisLogoLuP
        End If
    
        GoTo LogoDeckblatt_OK

LogoDeckblatt_Err:
    
        If strcLanguage = "d" Then
            MsgBox "Fehler beim Einf|fffd|gen der Logos auf dem Deckblatt. M|fffd|glicherweise wurden einer der Rahmen f|fffd|r die Logos gel|fffd|scht.", , "Fehler"
        Else
        If strcLanguage = "e" Then
            MsgBox "Error while updating the logos on the coverpage. Maybe one of the shapes for the logos has been deleted.", , "Error"
        End If
        End If
        
LogoDeckblatt_OK:
        
    End If
    
    'v20
    If Application.Version = 12 Then
        '###Excel 2007 Bug: - BOJ, 24.02.09
        '###Beschreibung siehe oben
        '###Alten Namen wieder herstellen
        For i = 2 To ActiveWorkbook.Worksheets.Count
            Worksheets(i).Name = strName(i)
        Next
        
    End If
    Worksheets(1).Select
    
    'Bildschirmaktualisierung wieder aktivieren
    Application.ScreenUpdating = True
    
    'Standard-Dateieigenschaften schreiben
    ActiveWorkbook.BuiltinDocumentProperties("Author") = Me!Ersteller
    ActiveWorkbook.BuiltinDocumentProperties("Subject") = Me!Projekt
    ActiveWorkbook.BuiltinDocumentProperties("Title") = Me!DokuTitelKurz
    ActiveWorkbook.BuiltinDocumentProperties("Category") = Me!DokuTyp
    
    
End Function

'Neue Funktion zur |fffd|berpr|fffd|fung des Datumsformats, BOJ, 09.01.2009
Function NurZiffern(strZahl As String) As Boolean

Const strErlaubt = "1234567890"

Dim bolTemp As Boolean, i As Integer
bolTemp = True
If strZahl <> "" Then
    For i = 1 To Len(strZahl)
        If InStr(strErlaubt, Mid(strZahl, i, 1)) = 0 Then
            bolTemp = False
             Exit For
        End If
    Next
End If
NurZiffern = bolTemp
End Function

Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub

' InQuest injected base64 decoded content
' +mx6

INQUEST-PP=macro
