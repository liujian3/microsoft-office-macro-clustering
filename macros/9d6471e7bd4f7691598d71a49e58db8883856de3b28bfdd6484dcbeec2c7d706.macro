Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Modul1"
Option Explicit

Sub Makro1()
Attribute Makro1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Makro1 Makro
'

'
    Rows("5:18").Select
    Selection.RowHeight = 16.5
    Range("C19").Select
End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Attribute VB_Name = "mdl_Auswertung"
Option Explicit
Dim ws_Pflege As Worksheet
Dim ws_Spiegel As Worksheet
Dim ws_QS As Worksheet
Dim dat_date As Date
Sub AblaufAuswertung()
Dim i_lastRow As Integer
ActiveSheet.Unprotect Password:="mvemjsu9p"

Bestimmung1
Bewertung
ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:="mvemjsu9p"

End Sub
Sub Bestimmung1()
On Error GoTo Fehler




Set ws_Pflege = Worksheets("Raumliste_pflegbar")
Set ws_Spiegel = Worksheets("SpiegelListe")
Set ws_QS = Worksheets("Qualitaetskontrolle")



Exit Sub

Fehler:
MsgBox "Es d|fffd|rfen keine Tabellenbl|fffd|tter umbenannt werden. Daher bricht das Programm ab", vbInformation
End

End Sub
Sub Bewertung()
Dim i_lastRow As Integer
Dim i_Raum As Integer
Dim i As Integer
Dim i_bad As Integer
Dim i_good As Integer
Dim i_note As Integer

i_lastRow = ws_QS.Range("e4").End(xlDown).Row

i_Raum = Application.WorksheetFunction.Count(ws_QS.Range("j5:j" & i_lastRow))

If i_Raum = 0 Then
    MsgBox "Es sind noch keine Noten eingetragen.", vbInformation
    End
End If
'Pr|fffd|fung nach Zahlen in Spalte H
For i = 5 To i_lastRow
    If ws_QS.Range("j" & i) <> "" Then
        If Not IsNumeric(ws_QS.Range("j" & i)) Then
            MsgBox "Bitte nur Zahlen in Spalte J eingeben", vbInformation
            End
        End If
    End If
Next i
'Pr|fffd|fung nach Zahlen in Spalte G
For i = 5 To i_lastRow
    If ws_QS.Range("J" & i) <> "" Then
        If Not IsNumeric(ws_QS.Range("I" & i)) Then
            MsgBox "Bitte nur Zahlen in Spalte I eingeben", vbInformation
            End
        End If
    End If
Next i
i_bad = 0
i_good = 0
'Auswertung nach gut und schlecht
For i = 5 To i_lastRow
  If ws_QS.Range("J" & i) <> "" Then
    i_note = ws_QS.Range("I" & i) - ws_QS.Range("J" & i)
    If i_note < 0 Then
      i_bad = i_bad + 1
    Else
      i_good = i_good + 1
    End If
  End If
Next i
ws_QS.Range("N7").Value = i_Raum
ws_QS.Range("N8").Value = i_good
ws_QS.Range("N9").Value = i_bad
ws_QS.Range("L3").ClearContents

End Sub

Sub Grafik()
Dim i_lastRow As Integer
Dim i As Integer

i_lastRow = ws_QS.Range("E65000").End(xlUp).Row
 
For i = 5 To i_lastRow
ws_QS.Range("e" & i).Value = ws_QS.Range("e" & i).Value
Next i
Calculate
End Sub
Attribute VB_Name = "mdl_Ruettermann"
Option Explicit

Sub Einblenden()
Worksheets("SpiegelListe").Visible = True
End Sub

Sub Ausblenden()
Worksheets("Raumliste_pflegbar").Activate
Worksheets("SpiegelListe").Visible = xlVeryHidden
End Sub
Attribute VB_Name = "mdl_Zeitreihe"
Option Explicit

Sub Zeitreihe()
usf_1.Show

End Sub
Attribute VB_Name = "mdl_Zufall"
'easy data solution GmbH
'Lippmannstr. 57
'22769 Hamburg
'Tel: 040 / 40172543
'www.easydatasolution.de
'info@easydatasolution.de



Option Explicit
Dim ws_Pflege As Worksheet
Dim ws_Spiegel As Worksheet
Dim ws_QS As Worksheet
Dim dat_date As Date





Sub Ablauf()
On Error GoTo Fehler
ActiveSheet.Unprotect Password:="mvemjsu9p"
Bestimmung 'Tabellenbl|fffd|tter
Formeln
DatumSetzen 'das Datum der Auswertung wird ausgelesen
Auswertung 'in der Liste werden nur die R|fffd|ume mit einem ja versehen, die dem Datum entsprechen
FilterSetzen 'diese gefilterte Liste wird in das Blatt Spiegel kopiert

Ausfuehrung 'Die Zufallsformel wird eingeschrieben
Sortieren
Diagramm
ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:="mvemjsu9p"
Exit Sub
Fehler:
Fehlerbehandlung

End Sub
Sub Diagramm()
Dim i_Anz_R As Integer
Dim i_Anz_R_Zus As Integer
Dim ws_Rm As Worksheet
Dim i_zeile As Integer

Set ws_Rm = Worksheets("Raumliste_pflegbar")
i_Anz_R = ws_Rm.Range("b1").Value
i_Anz_R_Zus = ws_Rm.Range("b2").Value

i_zeile = 5 + i_Anz_R - 1 + i_Anz_R_Zus

ActiveSheet.ChartObjects(1).Activate
ActiveChart.SetSourceData Source:=Range("I4:J" & i_zeile)
End Sub
Sub Formeln()
Dim ws_dyn As Worksheet
Dim ws_Rm As Worksheet
Dim i As Integer
Dim i_Anz_R As Integer
Dim i_Anz_R_Zus As Integer
Dim b_weiter As Boolean

Set ws_dyn = Worksheets("Qualitaetskontrolle")
Set ws_Rm = Worksheets("Raumliste_pflegbar")

b_weiter = False
    
    

If ws_Rm.Range("b1").Value <> "" Then
    If IsNumeric(ws_Rm.Range("b1").Value) Then
        i_Anz_R = ws_Rm.Range("b1").Value
        b_weiter = True
    End If
End If
If b_weiter = False Then
MsgBox "Bitte geben Sie in Zelle B1 eine Zahl ein", vbInformation, "easy data solution"
End
End If



For i = 5 To 5 + i_Anz_R - 1

ws_dyn.Range("c" & i).Value = "=IF(IFERROR(INDEX(SpiegelListe!J:J,MATCH(SMALL(SpiegelListe!$D:$D,SpiegelListe!$A" & i & "),SpiegelListe!$D:$D,0)),"""")=0,"""",IFERROR(INDEX(SpiegelListe!J:J,MATCH(SMALL(SpiegelListe!$D:$D,SpiegelListe!$A" & i & "),SpiegelListe!$D:$D,0)),""""))"
ws_dyn.Range("d" & i).Value = "=IF(IFERROR(INDEX(SpiegelListe!K:K,MATCH(SMALL(SpiegelListe!$D:$D,SpiegelListe!$A" & i & "),SpiegelListe!$D:$D,0)),"""")=0,"""",IFERROR(INDEX(SpiegelListe!K:K,MATCH(SMALL(SpiegelListe!$D:$D,SpiegelListe!$A" & i & "),SpiegelListe!$D:$D,0)),""""))"
ws_dyn.Range("e" & i).Value = "=IF(IFERROR(INDEX(SpiegelListe!L:L,MATCH(SMALL(SpiegelListe!$D:$D,SpiegelListe!$A" & i & "),SpiegelListe!$D:$D,0)),"""")=0,"""",IFERROR(INDEX(SpiegelListe!L:L,MATCH(SMALL(SpiegelListe!$D:$D,SpiegelListe!$A" & i & "),SpiegelListe!$D:$D,0)),""""))"
ws_dyn.Range("f" & i).Value = "=IF(IFERROR(INDEX(SpiegelListe!M:M,MATCH(SMALL(SpiegelListe!$D:$D,SpiegelListe!$A" & i & "),SpiegelListe!$D:$D,0)),"""")=0,"""",IFERROR(INDEX(SpiegelListe!M:M,MATCH(SMALL(SpiegelListe!$D:$D,SpiegelListe!$A" & i & "),SpiegelListe!$D:$D,0)),""""))"
ws_dyn.Range("g" & i).Value = "=IF(IFERROR(INDEX(SpiegelListe!N:N,MATCH(SMALL(SpiegelListe!$D:$D,SpiegelListe!$A" & i & "),SpiegelListe!$D:$D,0)),"""")=0,"""",IFERROR(INDEX(SpiegelListe!N:N,MATCH(SMALL(SpiegelListe!$D:$D,SpiegelListe!$A" & i & "),SpiegelListe!$D:$D,0)),""""))"
ws_dyn.Range("h" & i).Value = "=IF(IFERROR(INDEX(SpiegelListe!O:O,MATCH(SMALL(SpiegelListe!$D:$D,SpiegelListe!$A" & i & "),SpiegelListe!$D:$D,0)),"""")=0,"""",IFERROR(INDEX(SpiegelListe!O:O,MATCH(SMALL(SpiegelListe!$D:$D,SpiegelListe!$A" & i & "),SpiegelListe!$D:$D,0)),""""))"
ws_dyn.Range("i" & i).Value = "=IF(IFERROR(INDEX(SpiegelListe!P:P,MATCH(SMALL(SpiegelListe!$D:$D,SpiegelListe!$A" & i & "),SpiegelListe!$D:$D,0)),"""")=0,"""",IFERROR(INDEX(SpiegelListe!P:P,MATCH(SMALL(SpiegelListe!$D:$D,SpiegelListe!$A" & i & "),SpiegelListe!$D:$D,0)),""""))"


Next i

End Sub
Sub Sortieren()
Dim i_Anz_R As Integer
Dim ws_Rm As Worksheet
Dim i_zeile As Integer

Set ws_Rm = Worksheets("Raumliste_pflegbar")


        i_Anz_R = ws_Rm.Range("b1").Value


i_zeile = 5 + i_Anz_R - 1
ws_QS.Range("C5:I" & i_zeile).Copy
ws_QS.Range("C5").Select
  Selection.PasteSpecial Paste:=xlPasteValuesAndNumberFormats, Operation:= _
        xlNone, SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False

 ws_QS.Range("C5:I" & i_zeile).Select
   ws_QS.Sort.SortFields.Clear
    ws_QS.Sort.SortFields.Add Key:= _
        Range("C5:C" & i_zeile), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    ws_QS.Sort.SortFields.Add Key:= _
        Range("D5:D" & i_zeile), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    ws_QS.Sort.SortFields.Add Key:= _
        Range("E5:E" & i_zeile), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ws_QS.Sort
        .SetRange Range("C5:I" & i_zeile)
        .Header = xlNo
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
     ws_QS.Range("j5").Select
End Sub


Sub Ausfuehrung()
Dim i_lastRow As Integer
Dim i As Integer

i_lastRow = ws_Spiegel.Range("L65000").End(xlUp).Row

For i = 5 To i_lastRow
    ws_Spiegel.Range("e" & i).Value = i - 4
    ws_Spiegel.Range("d" & i).Value = "=RAND()"
Next i
i_lastRow = ws_QS.Range("e4").End(xlDown).Row
ws_QS.Range("j5:j" & i_lastRow).ClearContents

Calculate
ws_QS.Activate
End Sub
Sub FilterSetzen()
Dim i_lastRow As Integer
Dim i As Integer

i_lastRow = ws_Spiegel.Range("L65000").End(xlUp).Row 'letzte Zeile Spiegel bestimmen

ws_Spiegel.Range("d5:z" & i_lastRow).Clear
If ws_Pflege.AutoFilterMode Then
ws_Pflege.AutoFilterMode = False
End If


i_lastRow = ws_Pflege.Range("G65000").End(xlUp).Row 'letzte Zeile Pflege bestimmen


ws_Pflege.Range("$A$3:$xaa$" & i_lastRow).AutoFilter Field:=16251, Criteria1:="ja"
ws_Pflege.Range("$A$3:$U$" & i_lastRow).Copy
ws_Spiegel.Activate
ws_Spiegel.Range("F4").Select
ActiveSheet.Paste
Application.CutCopyMode = False

If ws_Pflege.AutoFilterMode Then
ws_Pflege.AutoFilterMode = False
End If

i_lastRow = ws_Pflege.Range("G65000").End(xlUp).Row 'Alte ja und nein werden entfernt
ws_Pflege.Range("xaa4:xaa" & i_lastRow).Clear

End Sub
Sub Bestimmung()
On Error GoTo Fehler




Set ws_Pflege = Worksheets("Raumliste_pflegbar")
Set ws_Spiegel = Worksheets("SpiegelListe")
Set ws_QS = Worksheets("Qualitaetskontrolle")

'Pr|fffd|fen, ob es schon einmal gelaufen ist
If ws_QS.Range("L3").Value = "Auswahl getroffen, aber noch nicht bewertet" Then
MsgBox "Sie m|fffd|ssen erst eine Bewertung vornehmen und Auswerten lassen.", vbInformation
End
End If


ws_QS.Range("L3").Value = "Auswahl getroffen, aber noch nicht bewertet"
ws_QS.Range("N7").ClearContents
ws_QS.Range("N8").ClearContents
ws_QS.Range("N9").ClearContents
Exit Sub

Fehler:
MsgBox "Es d|fffd|rfen keine Tabellenbl|fffd|tter umbenannt werden. Daher bricht das Programm ab", vbInformation
End

End Sub
Sub DatumSetzen()

If IsDate(ws_QS.Range("P1").Value) Then
    dat_date = ws_QS.Range("P1").Value
    Auswertung
Else
    MsgBox "Bitte geben Sie ein Datum in die Zelle P1 ein.", vbInformation
    Fehlerbehandlung
    End
End If
End Sub
Sub Auswertung()
'sucht nach dem Datum, die Datume m|fffd|ssen in aufsteigender Reihenfolge geschrieben sein
Dim i_lastRow As Integer
Dim i_lastColumn As Integer
Dim i_zeile As Integer
Dim i_spalte As Integer
Dim i_ja As Integer
If ws_Pflege.AutoFilterMode Then
ws_Pflege.AutoFilterMode = False
End If

i_lastRow = ws_Pflege.Range("G65000").End(xlUp).Row 'Alte ja und nein werden entfernt
ws_Pflege.Range("XAA4:XAA" & i_lastRow).Clear

For i_zeile = 4 To i_lastRow 'Zeilen runter
i_lastColumn = ws_Pflege.Cells(i_zeile, 16000).End(xlToLeft).Column
    For i_spalte = 22 To i_lastColumn 'Spalten nach rechts
        If ws_Pflege.Cells(i_zeile, i_spalte).Value = dat_date Then
        ws_Pflege.Cells(i_zeile, 16251).Value = "ja"
        Exit For
    End If
        If ws_Pflege.Cells(i_zeile, i_spalte).Value > dat_date Then
        ws_Pflege.Cells(i_zeile, 16251).Value = "nein"
        Exit For
    End If
    Next i_spalte
Next i_zeile

i_ja = Application.WorksheetFunction.CountIf(ws_Pflege.Range("xaa4:xaa" & i_lastRow), "ja")
If i_ja < 1 Then
MsgBox "Es gibt keinen Raum, der an diesem Tag gereinigt wird", vbInformation
Fehlerbehandlung
End
End If
End Sub

Sub Fehlerbehandlung()
ws_QS.Range("j3").Clear

End Sub
Attribute VB_Name = "mdl_dynQualBlatt"
Option Explicit
Dim ws_Rm As Worksheet

Sub AufbauBlatt()
Dim ws_dyn As Worksheet

Dim i As Integer
Dim i_Anz_R As Integer
Dim i_Anz_R_Zus As Integer
Dim i_neueZeile As Integer
Dim i_neueZeile1 As Integer

Dim b_weiter As Boolean

Set ws_dyn = Worksheets("Qualitaetskontrolle")
Set ws_Rm = Worksheets("Raumliste_pflegbar")

b_weiter = False

'zuf|fffd|llige Raumauswahl
If ws_Rm.Range("b1").Value <> "" Then
    If IsNumeric(ws_Rm.Range("b1").Value) Then
        i_Anz_R = ws_Rm.Range("b1").Value
        b_weiter = True
    End If
End If
If b_weiter = False Then
MsgBox "Bitte geben Sie in Zelle B1 eine Zahl ein", vbInformation, "easy data solution"
End
End If
'zus|fffd|tzliche Raumauswahl
If ws_Rm.Range("b2").Value <> "" Then
    If IsNumeric(ws_Rm.Range("b2").Value) Then
        i_Anz_R_Zus = ws_Rm.Range("b2").Value
        b_weiter = True
    End If
End If
If b_weiter = False Then
MsgBox "Bitte geben Sie in Zelle B2 eine Zahl ein", vbInformation, "easy data solution"
End
End If

ws_dyn.Select

For i = 1 To i_Anz_R - 1
   ws_dyn.Range("B5:J5").Insert Shift:=xlDown, CopyOrigin:=xlFormatFromRightOrBelow
Next i

i_neueZeile = 5 + i_Anz_R - 1
ws_dyn.Range("c5:J" & i_neueZeile).Select
Rahmen1
ws_dyn.Range("b5:b" & i_neueZeile).Select
Rahmen2
ws_dyn.Range("b5:b" & i_neueZeile).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 90
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
ws_dyn.Range("b5").Value = "zuf|fffd|llige Raumauswahl"

'zus|fffd|tzliche R|fffd|ume
If i_Anz_R_Zus >= 1 Then
    i_neueZeile = i_neueZeile + 1
    For i = 1 To i_Anz_R_Zus - 1
       ws_dyn.Range("B" & i_neueZeile & ":J" & i_neueZeile).Insert Shift:=xlDown, CopyOrigin:=xlFormatFromRightOrBelow
    Next i
    
    i_neueZeile1 = i_neueZeile + i_Anz_R_Zus - 1
    ws_dyn.Range("c" & i_neueZeile & ":J" & i_neueZeile1).Select
    ws_dyn.Range("c" & i_neueZeile & ":J" & i_neueZeile1).Font.Size = 12
    ws_dyn.Range("c" & i_neueZeile & ":J" & i_neueZeile1).HorizontalAlignment = xlCenter
    ws_dyn.Range("G" & i_neueZeile & ":G" & i_neueZeile1).HorizontalAlignment = xlLeft
    ws_dyn.Range("c" & i_neueZeile & ":J" & i_neueZeile1).Font.Bold = False
    ws_dyn.Range("c" & i_neueZeile & ":J" & i_neueZeile1).Locked = False
    
    Rahmen1
    ws_dyn.Range("b" & i_neueZeile & ":b" & i_neueZeile1).Select
    Rahmen2
     
    ws_dyn.Range("b" & i_neueZeile & ":b" & i_neueZeile1).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 90
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    ws_dyn.Range("b" & i_neueZeile).Value = "ggfls. zus|fffd|tzliche R|fffd|ume"
End If
  Rows("5:" & i_neueZeile).RowHeight = 16.5
  

End Sub
Sub Rahmen1()
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
End Sub
Sub Rahmen2()
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
End Sub



Attribute VB_Name = "usf_1"
Attribute VB_Base = "0{3DE99E7D-90C8-4EC7-8E70-BC1EB02A022D}{EBBF1AFA-27B1-4B40-B522-DC4D8D25C6A4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub cmd_abr_Click()
Unload Me
End Sub

Private Sub cmd_ok_Click()
Dim i_wieder As Integer
Dim i_Tag As Integer
Dim b_Start As Boolean
Dim dt_Start As Date
Dim i As Integer
Dim x As Integer
Dim i_lastRow As Integer
Dim i_lastRow_1 As Integer
Dim Bereich As Range
Dim rn_Zelle As Range
Dim i_mal As Integer
Dim BereichClear As Range
Dim int_mal As Integer
Dim b_Wochentag As Boolean
Dim dt_date As Date

dt_date = txt_dat.Value


If Not IsNumeric(txt_1.Value) Then
    MsgBox "Bitte eine Zahl eingeben", vbInformation
    txt_1.SetFocus
    txt_1.Value = ""
    Exit Sub
End If
If txt_1 > 400 Then
    MsgBox "Bitte nur eine Zahl bis 800 eingeben", vbInformation
     txt_1.SetFocus
     Exit Sub
End If

i_lastRow = 0
For i = 1 To 11
    i_lastRow_1 = Cells(65000, i).End(xlUp).Row
    If i_lastRow_1 > i_lastRow Then
        i_lastRow = i_lastRow_1
    End If
Next i
If i_lastRow = 4 Then
Set Bereich = Range("v4:v" & i_lastRow)
Else
Set Bereich = Range("v4:v" & i_lastRow).SpecialCells(xlCellTypeVisible)
End If

If i_lastRow = 4 Then
Set BereichClear = Range("v4:xfd" & i_lastRow)
Else
Set BereichClear = Range("v4:xfd" & i_lastRow).SpecialCells(xlCellTypeVisible)
End If
BereichClear.Clear

i_wieder = txt_1
i_Tag = Weekday(dt_date)
b_Start = False
Select Case i_Tag
Case 1
If chb_1.Value = True Then
    dt_Start = dt_date
    b_Start = True
End If
Case 2
If chb_2.Value = True Then
    dt_Start = dt_date
    b_Start = True
End If
Case 3
If chb_3.Value = True Then
    dt_Start = dt_date
    b_Start = True
End If
Case 4
If chb_4.Value = True Then
    dt_Start = dt_date
    b_Start = True
End If
Case 5
If chb_5.Value = True Then
    dt_Start = dt_date
    b_Start = True
End If
Case 6
If chb_6.Value = True Then
    dt_Start = dt_date
    b_Start = True
End If
Case 7
If chb_7.Value = True Then
    dt_Start = dt_date
    b_Start = True
End If
End Select

b_Wochentag = False
For i = 1 To 7
    If usf_1.Controls("chb_" & i).Value = True Then
        b_Wochentag = True
        Exit For
    End If
Next i
If b_Wochentag = True Then

'Falls Starttermin nicht mit Wochentag |fffd|bereinstimmt
If b_Start = False Then
 dt_Start = dt_date
    For i = 0 To 7
        If usf_1.Controls("chb_" & Weekday(dt_Start + i)).Value = True Then
            dt_Start = dt_Start + i
            Exit For
        End If
    Next i
End If


For x = 0 To i_wieder - 1
    For Each rn_Zelle In Bereich.Offset(0, int_mal)
    
   i_mal = 0
    For i_Tag = 0 To 6
        If usf_1.Controls("chb_" & Weekday(dt_Start + i_Tag)).Value = True Then
            rn_Zelle.Offset(0, i_mal) = dt_Start + (i_Tag + 7 * x)
            i_mal = i_mal + 1
        End If
    Next i_Tag
    
Next rn_Zelle
int_mal = i_mal + int_mal
Next x
Unload Me
Exit Sub
End If
'kein Wochentag wurde ausgesucht
'Mitl|fffd|ufig, alle zwei Tage, Starttermin wird festgelegt
If chb_Mit.Value = True Then
 dt_Start = dt_date
    If Weekday(dt_Start) <> 2 Then
        For i = 1 To 7
            If Weekday(dt_Start + i) = 2 Then
                dt_Start = dt_Start + i
                Exit For
            End If
        Next i
    End If
i_wieder = Round(i_wieder / 2, 0)
For x = 0 To i_wieder - 1
    For Each rn_Zelle In Bereich.Offset(0, int_mal)
   i_mal = 0
    For i_Tag = 0 To 13 Step 2
        If Weekday(dt_Start + i_Tag + (14 * x)) <> 1 Then
        If Weekday(dt_Start + i_Tag + (14 * x)) <> 7 Then
        rn_Zelle.Offset(0, i_mal) = dt_Start + i_Tag + (14 * x)
        i_mal = i_mal + 1
        End If
        End If
           
       
    Next i_Tag
    
Next rn_Zelle
int_mal = i_mal + int_mal
Next x
Unload Me
Exit Sub
End If

If chb_gegen.Value = True Then
 dt_Start = dt_date
    If Weekday(dt_Start) <> 3 Then
        For i = 1 To 7
            If Weekday(dt_Start + i) = 3 Then
                dt_Start = dt_Start + i
                Exit For
            End If
        Next i
    End If
i_wieder = Round(i_wieder / 2, 0)
For x = 0 To i_wieder - 1
    For Each rn_Zelle In Bereich.Offset(0, int_mal)
   i_mal = 0
    For i_Tag = 0 To 13 Step 2
        If Weekday(dt_Start + i_Tag + (14 * x)) <> 1 Then
        If Weekday(dt_Start + i_Tag + (14 * x)) <> 7 Then
        rn_Zelle.Offset(0, i_mal) = dt_Start + i_Tag + (14 * x)
        i_mal = i_mal + 1
        End If
        End If
           
       
    Next i_Tag
    
Next rn_Zelle
int_mal = i_mal + int_mal
Next x
Unload Me
    
End If




End Sub



Private Sub DTPicker1_CallbackKeyDown(ByVal KeyCode As Integer, ByVal Shift As Integer, ByVal CallbackField As String, CallbackDate As Date)

End Sub



Private Sub txt_dat_Exit(ByVal Cancel As MSForms.ReturnBoolean)
If Not IsDate(txt_dat.Value) Then
    MsgBox "Bitte geben Sie ein Datumsformat ein!", vbInformation
    txt_dat.SetFocus
    Exit Sub
End If
End Sub

Private Sub UserForm_Initialize()
txt_dat.Value = Date
End Sub

' InQuest injected base64 decoded content
' &F(!

INQUEST-PP=macro
