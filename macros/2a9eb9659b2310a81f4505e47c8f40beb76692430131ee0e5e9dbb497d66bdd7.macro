Attribute VB_Name = "AutoRun"
Option Base 0
Option Explicit
 
#If VBA7 Then
Declare PtrSafe Function GetCommandLine Lib "kernel32" Alias "GetCommandLineW" () As Long
Declare PtrSafe Function lstrlenW Lib "kernel32" (ByVal lpString As Long) As Long
Declare PtrSafe Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" (MyDest As Any, MySource As Any, ByVal MySize As Long)
#Else
Declare Function GetCommandLine Lib "kernel32" Alias "GetCommandLineW" () As Long
Declare Function lstrlenW Lib "kernel32" (ByVal lpString As Long) As Long
Declare Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" (MyDest As Any, MySource As Any, ByVal MySize As Long)
#End If

Function CmdToSTr(Cmd As Long) As String
Dim Buffer() As Byte
Dim StrLen As Long
   
   If Cmd Then
      StrLen = lstrlenW(Cmd) * 2
      If StrLen Then
         ReDim Buffer(0 To (StrLen - 1)) As Byte
         CopyMemory Buffer(0), ByVal Cmd, StrLen
         CmdToSTr = Buffer
      End If
   End If
End Function

Function FileCopyCRT(SourceName As String, DestinationName As String)

Dim refresh_err As Integer
Dim myRecipient As String
Dim myBCCRecipient As String
Dim mySender As String
Dim mySubject As String
Dim myTextBody As String
Dim myAttFile As String

Dim fso As Object
Set fso = VBA.CreateObject("Scripting.FileSystemObject")

'Example
'Source = "C:\Users\tmitov\Desktop\Excel File Copy.xlsm"
'Destination = "C:\Users\tmitov\Desktop\Scheduled Repots Transition\"

On Error GoTo ErrHandler

fso.copyfile SourceName, DestinationName, True

Exit Function

' errors
ErrHandler:
    refresh_err = refresh_err + 1
    If refresh_err > 10 Then
        myRecipient = "CorporateReporting@hcl.com"    'ihristov@c3i-inc.com,
        'myRecipient = "BayerMIManagement@c3i-inc.com"
        myBCCRecipient = "akamenov@c3i-inc.com"
        'myBCCRecipient = "akamenov@c3i-inc.com"
        mySender = "RService@c3i-inc.com"
        mySubject = ThisWorkbook.Name & " failed to copy."
        myTextBody = ThisWorkbook.FullName & " failed to copy to destination: " & DestinationName & " With error No: " & Err.Number
        myAttFile = ""

        SendNotification (mySubject), (myTextBody), (myRecipient), (myBCCRecipient), (mySender), (myAttFile)

        Exit Function
    End If

    ' wait 1 min
    Application.Wait (Now + TimeValue("0:01:00"))
    ' go back to the line of code that caused the problem
    Resume
   
End Function
Function SendNotification(mySubject As String, myTextBody As String, myRecipient As String, myBCCRecipient As String, mySender As String, myAttFile As String)

Dim MyMsg As Object
Dim MyConf As Object
Dim Flds As Object

Set MyMsg = CreateObject("CDO.Message")
Set MyConf = CreateObject("CDO.Configuration")

MyConf.Load -1
Set Flds = MyConf.Fields

With Flds
        .Item("http://schemas.microsoft.com/cdo/configuration/sendusing") = 2
        .Item("http://schemas.microsoft.com/cdo/configuration/smtpserver") = "C3imailg8.c3icare.com"
        .Item("http://schemas.microsoft.com/cdo/configuration/smtpconnectiontimeout") = 60
        .Item("http://schemas.microsoft.com/cdo/configuration/smtpserverport") = 25
        .Item("http://schemas.microsoft.com/cdo/configuration/smtpauthenticate") = 2
        .Update
End With
On Error Resume Next
With MyMsg
    Set .Configuration = MyConf
    .To = myRecipient
    .CC = ""
    .BCC = myBCCRecipient
    .From = mySender
    .Subject = mySubject
    .TextBody = myTextBody
    .AddAttachment myAttFile
    .Send
End With
On Error GoTo 0
Set Flds = Nothing
Set MyMsg = Nothing
Set MyConf = Nothing

End Function
Sub AutoRunMe()
'
' This macro is run when this file is executed from command line or Task Scheduler:
' "excel.exe path" with parameters "report.xlsm path" /e/AutoRun
' "C:\Program Files (x86)\Microsoft Office\Office12\EXCEL.EXE" "d:\test.xlsm" /e/AutoRun
' Created by !vo
' Version 1.0
'
' Copy this Module and ThisWorkbook module into your actual report
' Add below your actual macro name:
Dim DestinationName As String
Dim SourceName As String

Application.ScreenUpdating = False
Application.DisplayAlerts = False
Application.Visible = True



Call UpdateSaveAndSend


' Save the report
'ThisWorkbook.Save

'SourceName = ThisWorkbook.FullName    ' local file name and path
'DestinationName = ""       ' type in the destination path
'
'FileCopyCRT SourceName, DestinationName

'Call Notification_Mail

' Quit the Excel app
Application.Quit
ThisWorkbook.Close False

End Sub
Attribute VB_Name = "Module1"
Sub UpdateSaveAndSend()
    
    Dim DestinationName As String
    Dim SourceName As String

    Application.DisplayAlerts = False
        
   'Workbooks.Open Filename:="E:\Task Reports\Bayer\Email ILQ\Email_Interaction_Level_Report.xlsm", ReadOnly:=False
   
    'Workbooks("Email_Interaction_Level_Report.xlsm").Activate

    'Application.Run "'Email_Interaction_Level_Report.xlsm'!Update"
    
    ActiveWorkbook.Sheets("ParametersInput").Select

'''''''''''''''''''''''''additional code'''''''''''''''''''
    Dim wd As Integer
    Dim h As Integer
    
    'This rule is enabled during particular business hours M-F
    wd = Weekday(Date) 'week day: Sunday = 1, Monday = 2, ...
    h = Hour(Time)      'Hour: 24-Hour format (0-23)
    
    If (wd = 2) And (h >= 4 And h <= 6) Then  'week day: Monday = 2, Hour between 4 and 6 AM
    Sheets("ParametersInput").Range("B1").Value = Format(Date - 3, "MM/DD/YYYY ") & TimeValue("08:00:00")
    Sheets("ParametersInput").Range("B2").Value = Format(Date, "MM/DD/YYYY ") & TimeValue("05:00:00")
    
    ElseIf (wd > 2 And wd < 7) And (h >= 4 And h <= 6) Then   'week day: Tuesday to Friday, Hour between 4 and 6 AM
    Sheets("ParametersInput").Range("B1").Value = Format(Date - 1, "MM/DD/YYYY ") & TimeValue("08:00:00")
    Sheets("ParametersInput").Range("B2").Value = Format(Date, "MM/DD/YYYY ") & TimeValue("05:00:00")
    
    ElseIf (wd > 1 And wd < 7) And (h >= 7 And h <= 11) Then   'week day: Monday to Friday, Hour between 7 and 9 AM
    Sheets("ParametersInput").Range("B1").Value = Format(Date, "MM/DD/YYYY ") & TimeValue("05:00:00")
    Sheets("ParametersInput").Range("B2").Value = Format(Date, "MM/DD/YYYY ") & TimeValue("08:00:00")
    End If
    
'''''''''''''''''''''''end of additional code'''''''''''''''''''

b_date = Range("B1").Value
b_date_str = Format(b_date, "yyyy-mm-dd hh:mm:ss")
e_date = Range("B2").Value
e_date_str = Format(e_date, "yyyy-mm-dd hh:mm:ss")
q_str = Range("B3").Value

    With ActiveWorkbook.Connections("Query from C3IMTSQLR22").ODBCConnection
        .BackgroundQuery = False
        .CommandText = "exec [dbo].[Excel_AllInteractions_QG]  '" & b_date_str & "', '" & e_date_str & "', '" & q_str & "'"
        .CommandType = xlCmdSql
        .Connection = Array("ODBC;DRIVER=SQL Server;SERVER=edcrptsql02.telerx.corp;UID=excelreport;PWD=excelreport;APP=2007 Microsoft Office system;WSID=;DATABASE=SyntellectCombined")
        .RefreshOnFileOpen = False
        .SavePassword = True
        .SourceConnectionFile = ""
        .SourceDataFile = ""
        .ServerCredentialsMethod = xlCredentialsMethodNone
        .AlwaysUseConnectionFile = False
    End With

    ActiveWorkbook.Connections("Query from C3IMTSQLR22").Refresh
    
    ActiveWorkbook.Sheets("Emails").Select
    
'This part of the code will format the file and save it with particular name depending on time of refresh

    'ActiveWorkbook.Sheets("ParametersInput").Visible = xlSheetHidden
    
    If (wd = 2) And (h >= 4 And h <= 6) Then  'week day: Monday = 2, Hour between 4 and 6 AM
    tempath = "E:\Task Reports\Bayer\Email ILQ\Bayer Forwarded Emails from 1pm GMT on " & Format(Date - 3, "DD-Mmm") & " until 10am GMT on " & Format(Date, "DD-Mmm") & ").xlsm"
    ActiveWorkbook.SaveCopyAs Filename:=tempath
    myAttFile = tempath
    
    ElseIf (wd > 2 And wd < 7) And (h >= 4 And h <= 6) Then   'week day: Tuesday to Friday, Hour between 4 and 6 AM
    tempath = "E:\Task Reports\Bayer\Email ILQ\Bayer Forwarded Emails from 1pm GMT on " & Format(Date - 1, "DD-Mmm") & " until 10am GMT on " & Format(Date, "DD-Mmm") & ").xlsm"
    ActiveWorkbook.SaveCopyAs Filename:=tempath
    myAttFile = tempath
     
    ElseIf (wd > 1 And wd < 7) And (h >= 7 And h <= 11) Then   'week day: Monday to Friday, Hour between 7 and 9 AM
    tempath = "E:\Task Reports\Bayer\Email ILQ\Bayer Forwarded Emails from 10am GMT on " & Format(Date, "DD-Mmm") & " until 1pm GMT on " & Format(Date, "DD-Mmm") & ").xlsm"
    ActiveWorkbook.SaveCopyAs Filename:=tempath
    myAttFile = tempath
    End If
    
    'myAttFile = "E:\Task Reports\Bayer\Email ILQ\Bayer Forwarded Emails from 1pm GMT on " & Format(Date - 1, "DD-Mmm") & " until 10am GMT on " & Format(Date, "DD-Mmm") & ").xlsx"
    
    'myAttFile = ActiveWorkbook.FullName
    
    'ActiveWorkbook.Close
    

    'Send Notification email

    mySubject = "Bayer UK Consumer Healthcare Email Reconciliation Notification [" & Format(Date, "DD-MMM YY") & ", " & Format(Time, "HH:MM") & "]"
    myTextBody = "Dear Bayer HC Team," & vbNewLine & vbNewLine & "Please find attached a list of all emails received by C3i since the last email reconciliation checkpoint." & vbNewLine & vbNewLine & "Kind Regards," & vbNewLine & "C3i Solutions - Bayer MI"
    myRecipient = "tim.rathe@bayer.com, jagdeep.rai@bayer.com, BayerMIManagement@c3i-inc.com" ', sstancheva@c3i-inc.com, kignatov@c3i-inc.com, PANDREEVA@c3i-INC.com, mdoytchinova@ntpdc.c3icare.com"
    'myRecipient = "akamenov@c3i-inc.com"
    'myRecipient = "medical.information@bayer.co.uk"
    myBCCRecipient = "CorporateReporting@hcl.com"
    'myBCCRecipient = "BayerMIManagement@c3i-inc.com, akamenov@c3i-inc.com"
    mySender = "RService@c3i-inc.com"
    'myAttFile = "E:\Task Reports\Quintiles\Email Not Responded GOC\Emails_NOT_Responded_Report.xlsx"


    SendNotification (mySubject), (myTextBody), (myRecipient), (myBCCRecipient), (mySender), (myAttFile)

    'deletes the temp file
    Kill tempath

'    SourceName = "E:\Task Reports\Quintiles\Email Not Responded GOC\Emails_NOT_Responded_Report.xlsx"    ' local file name and path
'    DestinationName = "C:\Repository\QCC\Reports\Emails not reponded report - GOC\"       ' type in the destination path
'
'    FileCopyCRT SourceName, DestinationName

'    SourceName = ThisWorkbook.FullName    ' local file name and path
'    DestinationName = ""       ' type in the destination path
'
'    FileCopyCRT SourceName, DestinationName
    

End Sub

Attribute VB_Name = "Module2"
Sub Update()
'
' Update Macro
'

'
ActiveWorkbook.Sheets("ParametersInput").Select
b_date = Range("B1").Value
b_date_str = Format(b_date, "yyyy-mm-dd hh:mm:ss")
e_date = Range("B2").Value
e_date_str = Format(e_date, "yyyy-mm-dd hh:mm:ss")
q_str = Range("B3").Value

    With ActiveWorkbook.Connections("Query from C3IMTSQLR22").ODBCConnection
        .BackgroundQuery = False
        .CommandText = "exec [dbo].[Excel_AllInteractions_QG]  '" & b_date_str & "', '" & e_date_str & "', '" & q_str & "'"
        .CommandType = xlCmdSql
        .Connection = Array("ODBC;DRIVER=SQL Server;SERVER=edcrptsql02.telerx.corp;UID=excelreport;PWD=excelreport;APP=2007 Microsoft Office system;WSID=;DATABASE=SyntellectCombined")
        .RefreshOnFileOpen = False
        .SavePassword = True
        .SourceConnectionFile = ""
        .SourceDataFile = ""
        .ServerCredentialsMethod = xlCredentialsMethodNone
        .AlwaysUseConnectionFile = False
    End With

    ActiveWorkbook.Connections("Query from C3IMTSQLR22").Refresh
    
'refresh all pivots

    For Each wbSheet In ThisWorkbook.Worksheets
        For Each myPivot In wbSheet.PivotTables
            myPivot.RefreshTable
            myPivot.Update
        Next
    Next

'UpdatePending
    
MsgBox ("Report Update Completed")

End Sub

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
    Dim CmdRaw As Long
    Dim CmdLine As String
    
    CmdRaw = GetCommandLine
    CmdLine = CmdToSTr(CmdRaw)
    v = Split(CmdLine, "/")
    Param = LCase(v(UBound(v)))
    
    If Param = "autorun" Then
        Call AutoRunMe
    End If
End Sub


' InQuest injected base64 decoded content
' ,x*'

INQUEST-PP=macro
