Attribute VB_Name = "CoolOut_run"
Option Explicit
'Dim swApp As Object
'Dim swModel As Object
'Dim swSelMgr As Object
'Dim swDispDim As Object
'Dim swAnn As Object
Dim swApp As SldWorks.SldWorks
Dim swModel As SldWorks.ModelDoc2
Dim swSelMgr As SldWorks.SelectionMgr
Dim swDispDim As SldWorks.DisplayDimension
Dim swAnn As SldWorks.Annotation
Dim sDimText As String
Dim ok As Boolean
Dim intTemp As Long
Dim varTemp As Variant
Dim varTemp1 As Variant
Dim strTemp As String
Dim strDim As String
Dim strChamf As String
Dim strNumb As String
Dim sCalloutAbove As String
Dim sTextPrefix As String
Dim sCalloutBelow As String
Dim sCalloutAboveDef As String
Dim sTextPrefixDef As String
Dim sCalloutBelowDef As String
Dim dChamfer As Double
Dim m As Integer
Dim Source As String
Dim Source1 As String
Dim Ini1 As String
Dim Ini2 As String

'Public Const swDocNONE = 0
'Public Const swDocPART = 1
'Public Const swDocASSEMBLY = 2
'Public Const swDocDRAWING = 3

'Public Const swSumInfoTitle = 0
'Public Const swSumInfoSubject = 1
'Public Const swSumInfoAuthor = 2
'Public Const swSumInfoKeywords = 3
'Public Const swSumInfoComment = 4
'Public Const swSumInfoSavedBy = 5
'Public Const swSumInfoCreateDate = 6
'Public Const swSumInfoSaveDate = 7
'Public Const swSumInfoCreateDate2 = 8
'Public Const swSumInfoSaveDate2 = 9

'Public Const swMbWarning = 1
'Public Const swMbInformation = 2
'Public Const swMbQuestion = 3
'Public Const swMbStop = 4

'Public Const swMbAbortRetryIgnore = 1
'Public Const swMbOk = 2
'Public Const swMbOkCancel = 3
'Public Const swMbRetryCancel = 4
'Public Const swMbYesNo = 5
'Public Const swMbYesNoCancel = 6

'Public Const swMbHitAbort = 1
'Public Const swMbHitIgnore = 2
'Public Const swMbHitNo = 3
'Public Const swMbHitOk = 4
'Public Const swMbHitRetry = 5
'Public Const swMbHitYes = 6
'Public Const swMbHitCancel = 7

'Public Const swBOMPartNumber_DocumentName = 1
'Public Const swBOMPartNumber_ConfigurationName = 2
'Public Const swBOMPartNumber_ParentName = 4
'Public Const swBOMPartNumber_UserSpecified = 8

'Public Const swRebuildAll = 1
'Public Const swForceRebuildAll = 2
'Public Const swUpdateMates = 4
'Public Const swCurrentSheetDisp = 8
'Public Const swUpdateDirtyOnly = 16

'Public Const swExportPdfData = 1

'Public Const swExportData_ExportAllSheets = 1
'Public Const swExportData_ExportCurrentSheet = 2
'Public Const swExportData_ExportSpecifiedSheets = 3

'Public Const swPDFExportInColor = 323
'Public Const swPDFExportEmbedFonts = 324
'Public Const swPDFExportHighQuality = 325
'Public Const swPDFExportPrintHeaderFooter = 326
'Public Const swPDFExportUseCurrentPrintLineWeights = 327

'Public Const swSaveAsCurrentVersion = 0

'Public Const swSaveAsOptions_Silent = 1

'Public Const swTiffScreenOrPrintCapture = 6
'Public Const swTiffImageType = 7
'Public Const swTiffCompressionScheme = 8
'Public Const swTiffPrintDPI = 9
'Public Const swTiffPrintPaperSize = 10

'Public Const swTiffImageBlackAndWhite = 0
'Public Const swTiffImageRGB = 1
'Public Const swTiffImageGrayScale = 2
'Public Const swTiffImageRGBA = 3
    
'Public Const swTiffUncompressed = 0
'Public Const swTiffPackbitsCompression = 1
'Public Const swTiffGroup4FaxCompression = 2
    
'Public Const swDwgPapersUserDefined = 12

'Public Const swTiffPrintDrawingPaperHeight = 8
'Public Const swTiffPrintDrawingPaperWidth = 9

'Public Const swTiffPrintScaleToFit = 28

'Public Const swDefaultTemplateDrawing = 10

'Public Const swDetailingDimension = 200

'Public Const swDetailingDimensionTextFormat = 1

'Public Const swAnnotationOwner_DrawingTemplate = 2

'Public Const swSelDIMENSIONS = 14

'Const swDimensionTextAll = 0
'Const swDimensionTextPrefix = 1
'Const swDimensionTextSuffix = 2
'Const swDimensionTextCalloutAbove = 3
'Const swDimensionTextCalloutBelow = 4
'Const swDimensionTextPrefixDefinition = 5
'Const swDimensionTextSuffixDefinition = 6
'Const swDimensionTextCalloutAboveDefinition = 7
'Const swDimensionTextCalloutBelowDefinition = 8

'Const swSystemColorsImportedDrivenAnnotation = 113

Sub main()
Set swApp = Application.SldWorks
'Set swApp = CreateObject("SldWorks.Application")
Set swModel = swApp.ActiveDoc
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
If swModel Is Nothing Then
    swApp.SendMsgToUser ("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|")
    End
    Exit Sub
End If

If swModel.GetType <> swDocDRAWING Then
    swApp.SendMsgToUser ("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|")
    End
    Exit Sub
End If

Set swSelMgr = swModel.SelectionManager
If swSelMgr.GetSelectedObjectCount = 1 Then ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    If swSelMgr.GetSelectedObjectType(1) <> swSelDIMENSIONS Then ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        swApp.SendMsgToUser ("|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
        End
        Exit Sub
    Else
        Set swDispDim = swSelMgr.GetSelectedObject6(1, -1)
        If swDispDim.IsHoleCallout() = False Then ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
            swApp.SendMsgToUser ("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
            End
            Exit Sub
        End If
    End If
Else
    swApp.SendMsgToUser ("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
    End
    Exit Sub
End If

' |fffd||fffd||fffd||fffd|
Source = swApp.GetCurrentMacroPathName ' Get macro path+filename
Source1 = Left$(Source, Len(Source) - 3) & "ini" ' |fffd||fffd||fffd||fffd| |fffd| ini-|fffd||fffd||fffd||fffd||fffd|

' |fffd||fffd||fffd||fffd||fffd||fffd| ini |fffd||fffd||fffd||fffd||fffd|
Open Source1 For Input As #1
    Line Input #1, strTemp
    Ini1 = CInt(Left$(strTemp, 1)) ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|: 0 - |fffd||fffd||fffd|; 1 - |fffd||fffd|
    Line Input #1, strTemp
    Ini2 = CInt(Left$(strTemp, 1)) ' |fffd||fffd||fffd||fffd|: 0 - |fffd||fffd||fffd|; 1 - |fffd||fffd|
Close #1

' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Debug.Print "      CalloutAbove     = " & swDispDim.GetText(swDimensionTextCalloutAbove)
Debug.Print "      TextPrefix       = " & swDispDim.GetText(swDimensionTextPrefix)
'Debug.Print "      TextSuffix       = " & swDispDim.GetText(swDimensionTextSuffix)
Debug.Print "      CalloutBelow     = " & swDispDim.GetText(swDimensionTextCalloutBelow)

Debug.Print "      CalloutAboveDefinition     = " & swDispDim.GetText(swDimensionTextCalloutAboveDefinition)
Debug.Print "      TextPrefixDefinition       = " & swDispDim.GetText(swDimensionTextPrefixDefinition)
'Debug.Print "      TextSuffixDefinition       = " & swDispDim.GetText(swDimensionTextSuffixDefinition)
Debug.Print "      CalloutBelowDefinition     = " & swDispDim.GetText(swDimensionTextCalloutBelowDefinition)

sCalloutAbove = swDispDim.GetText(swDimensionTextCalloutAbove)
sTextPrefix = swDispDim.GetText(swDimensionTextPrefix)
sCalloutBelow = swDispDim.GetText(swDimensionTextCalloutBelow)

sCalloutAboveDef = swDispDim.GetText(swDimensionTextCalloutAboveDefinition)
sTextPrefixDef = swDispDim.GetText(swDimensionTextPrefixDefinition)
sCalloutBelowDef = swDispDim.GetText(swDimensionTextCalloutBelowDefinition)

m = 0
If InStr(sCalloutBelow, "|fffd||fffd||fffd|.") > 0 Then ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    m = 2
    SetDim
ElseIf InStr(sTextPrefix, "|fffd||fffd||fffd|.") > 0 Then
    m = 1
    SetDim
ElseIf InStr(sTextPrefix, "/") > 0 Then
    m = 3
    SetDim
ElseIf InStr(sTextPrefix, " ") = 0 Then
    m = 3
    SetDim
Else
End If

If InStr(sTextPrefix, "<HOLE-SINK>") > 0 Then ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    strDim = "<MOD-DIAM><hw-diam>/<MOD-DIAM><hw-csdia>x<hw-csang>"
    strNumb = sCalloutAbove
    SetDim
End If

If InStr(sTextPrefix, "<HOLE-SPOT>") > 0 Then ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    strDim = "<MOD-DIAM><hw-diam>/<MOD-DIAM><hw-cbdia>x<hw-cbdepth>"
    strNumb = sCalloutAbove
    SetDim
End If

If Left$(sTextPrefix, 1) = "M" Then ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If InStr(sCalloutAbove, "<HOLE-DEPTH>") > 0 Then ' |fffd||fffd||fffd||fffd||fffd||fffd|
        strDim = "<hw-threaddesc>-6Hx<hw-threaddepth>-<hw-tapdrldepth>"
    Else ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        strDim = "<hw-threaddesc>-6H"
    End If
    strNumb = sCalloutAbove
Else ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If InStr(sTextPrefix, "<HOLE-DEPTH>") > 0 Then ' |fffd||fffd||fffd||fffd||fffd||fffd|
        strDim = "<MOD-DIAM><hw-diam>x<hw-depth>"
    Else ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        strDim = "<MOD-DIAM><hw-diam>"
    End If
    strNumb = sTextPrefix
End If
SetDim

'swDispDim.SetText swDimensionTextPrefix, "<MOD-DIAM><hw-diam>x<hw-depth>" ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'swDispDim.SetText swDimensionTextPrefix, "<MOD-DIAM><hw-diam>x<hw-depth>/" & dChamfer & "x45<MOD-DEG>" ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'swDispDim.SetText swDimensionTextPrefix, "<MOD-DIAM><hw-diam>" ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'swDispDim.SetText swDimensionTextPrefix, "<MOD-DIAM><hw-diam>/" & dChamfer & "x45<MOD-DEG>" ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'swDispDim.SetText swDimensionTextPrefix, "<MOD-DIAM><hw-diam>/<MOD-DIAM><hw-csdia>x<hw-csang>" ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'swDispDim.SetText swDimensionTextPrefix, "<MOD-DIAM><hw-diam>/<MOD-DIAM><hw-cbdia>x<hw-cbdepth>" ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'swDispDim.SetText swDimensionTextPrefix, "<hw-threaddesc>-6Hx<hw-threaddepth>-<hw-tapdrldepth>" ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'swDispDim.SetText swDimensionTextPrefix, "<hw-threaddesc>-6Hx<hw-threaddepth>-<hw-tapdrldepth>/" & dChamfer & "x45<MOD-DEG>" ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'swDispDim.SetText swDimensionTextPrefix, "<hw-threaddesc>-6H" ' |fffd||fffd||fffd||fffd||fffd||fffd|
'swDispDim.SetText swDimensionTextPrefix, "<hw-threaddesc>-6H/" & dChamfer & "x45<MOD-DEG>" ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|

'swDispDim.SetText swDimensionTextSuffix, ""
'swDispDim.SetText swDimensionTextCalloutAbove, ""
'swDispDim.SetText swDimensionTextCalloutBelow, ""

End Sub

Private Sub SetDim()

If m = 1 Then ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    varTemp = InStr(sTextPrefixDef, "|fffd||fffd||fffd|.")
    strTemp = Right$(sTextPrefixDef, Len(sTextPrefixDef) - (varTemp + 3))
    swDispDim.SetText swDimensionTextPrefix, strTemp
    strTemp = Left$(sTextPrefixDef, varTemp + 3)
    swDispDim.SetText swDimensionTextCalloutBelow, "<stack size=0.2> <stack size=5>" & strTemp
ElseIf m = 2 Then ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    swDispDim.SetText swDimensionTextPrefix, "<NUM_INST> |fffd||fffd||fffd|." & sTextPrefixDef
    swDispDim.SetText swDimensionTextCalloutBelow, ""
ElseIf m = 3 Then ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Else ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    If InStr(sCalloutBelow, "<HOLE-SINK>") > 0 Then ' |fffd||fffd||fffd||fffd||fffd|
        dChamfer = 0
        varTemp = InStr(sCalloutBelow, "<MOD-DIAM>")
        If varTemp > 0 Then
            varTemp = InStr(varTemp, sCalloutBelow, " ") ' |fffd||fffd||fffd||fffd||fffd||fffd|
            varTemp1 = InStr(varTemp + 1, sCalloutBelow, " ")  ' |fffd||fffd||fffd||fffd||fffd|
            If varTemp > 0 And varTemp1 > 0 Then
                strTemp = Trim(Mid$(sCalloutBelow, varTemp, varTemp1 - varTemp))
                strTemp = Replace(strTemp, ".", ",")
                dChamfer = CDbl(strTemp)
                varTemp = InStr(strNumb, "<MOD-DIAM>")
                If varTemp > 0 Then
                    varTemp = InStr(varTemp, strNumb, " ") ' |fffd||fffd||fffd||fffd||fffd||fffd|
                    varTemp1 = InStr(varTemp + 1, strNumb, " ")  ' |fffd||fffd||fffd||fffd||fffd|
                    If varTemp > 0 And varTemp1 > 0 Then
                        strTemp = Trim(Mid$(strNumb, varTemp, varTemp1 - varTemp))
                        strTemp = Replace(strTemp, ".", ",")
                        dChamfer = (dChamfer - CDbl(strTemp)) / 2#
                    End If
                End If
            End If
        End If
        If dChamfer > 0 Then
            strChamf = " / " & dChamfer & "x45<MOD-DEG>"
        Else
            strChamf = ""
        End If
    Else
        strChamf = ""
    End If
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    varTemp = InStr(strNumb, " ")
    If varTemp > 0 And Mid$(strNumb, varTemp + 1, 1) = "x" Then
        strNumb = "<NUM_INST> |fffd||fffd||fffd|."
    Else
        strNumb = ""
    End If
    ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    If strNumb <> "" And Ini1 = 1 Then
        swDispDim.SetText swDimensionTextPrefix, strDim & strChamf
        swDispDim.SetText swDimensionTextCalloutBelow, "<stack size=0.2> <stack size=5>" & strNumb
    Else
        swDispDim.SetText swDimensionTextPrefix, strNumb & strDim & strChamf
        swDispDim.SetText swDimensionTextCalloutBelow, ""
    End If
    ' |fffd||fffd||fffd||fffd|
    If Ini2 = 1 Then
        intTemp = swApp.GetUserPreferenceIntegerValue(swSystemColorsImportedDrivenAnnotation)
        Debug.Print "vbBlack=", vbBlack, "intTemp=", intTemp
        Set swAnn = swDispDim.GetAnnotation
        If strChamf = "" Then
            swAnn.Color = intTemp ' vbBlack
        Else
            swAnn.Color = &HFF& ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        End If
    End If
End If
swDispDim.SetText swDimensionTextSuffix, ""
swDispDim.SetText swDimensionTextCalloutAbove, ""
Finish
End Sub

Private Sub Finish()
swModel.ForceRebuild3 (True)
End
End Sub

Private Sub temp()
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'CalloutAbove     = 5 x <MOD-DIAM> 2.5 <HOLE-DEPTH> 7.5
'TextPrefix       = M3 - 6H <HOLE-DEPTH> 6
'TextSuffix       =
'CalloutBelow     = <HOLE-SINK><MOD-DIAM> 3.5 X 90|fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

'<NUM_INST> x <MOD-DIAM> <hw-tapdrldia> <HOLE-DEPTH> <hw-tapdrldepth>
'<hw-threaddesc> - 6H <HOLE-DEPTH> <hw-threaddepth>
'<HOLE-SINK><MOD-DIAM> <hw-nscsdia> X <hw-nscsang>, <hw-msgnearside>


' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'CalloutAbove     = <MOD-DIAM> 4.5 |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'TextPrefix       = <HOLE-SPOT><MOD-DIAM> 8 <HOLE-DEPTH> 3.2
'CalloutBelow     =

'<MOD-DIAM> <hw-thruholedia> <hw-thru>
'<HOLE-SPOT><MOD-DIAM> <hw-cbdia> <HOLE-DEPTH> <hw-cbdepth>


' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'CalloutAbove     = <MOD-DIAM> 4.5 |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'TextPrefix       = <HOLE-SINK><MOD-DIAM> 9.4 X 90|fffd|
'CalloutBelow     =

'<MOD-DIAM> <hw-thruholedia> <hw-thru>
'<HOLE-SINK><MOD-DIAM> <hw-csdia> X <hw-csang>

End Sub
Attribute VB_Name = "ThisLibrary"
Attribute VB_Base = "0{801A2004-A66C-11D3-A8BD-0000861EBBD6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' z{Uz
' '!zg
' BjYh
' BjYh
' AzZ0

INQUEST-PP=macro
