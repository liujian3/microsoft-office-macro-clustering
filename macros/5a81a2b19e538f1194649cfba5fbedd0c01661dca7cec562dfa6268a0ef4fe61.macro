Attribute VB_Name = "Hidem"
Sub Hide()
'Hide row with "y", empty row

Application.Calculate
Sheets("Tariff").Unprotect Password:="tender"
rowend = 127


'Fill the cell with no rate with "-"
On Error Resume Next
Range("e25:gf127").SpecialCells(xlCellTypeBlanks).Value = "'-"
On Error GoTo 0
        
Rows("19:19").EntireRow.Hidden = True


'Calculate MT column

  Range("E128").Select
    Selection.Copy
    Application.CutCopyMode = False
    ActiveCell.FormulaR1C1 = _
        "=IF(COUNT(R[-106]C:R[-1]C)>0,COUNT(R[-106]C:R[-1]C),""Y"")"
    Range("E128").Select
    Selection.Copy
    
    Range("g128:Gf128").Select
    Selection.PasteSpecial Paste:=xlPasteFormulas, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    Calculate
    
'Retain column E to column R to show the core header information

    Range("g128:t128").Value = "1"
     Range("a128:b128").Value = "1"
      Range("e128:f128").Value = "1"
         Range("c128:d128").Value = "0"
Range("B128:gf128").SpecialCells(xlCellTypeFormulas, 2).EntireColumn.Hidden = True
Columns("c:D").EntireColumn.Hidden = True

'Calculate MT row
    
    Range("Gg23").Select
    '
    ActiveCell.FormulaR1C1 = _
        "=IF(COUNT(RC[-182]:RC[-1])>0,COUNTA(RC[-182]:RC[-1]),""Y"")"
    Range("Gg23").Select
    Selection.Copy
    Range("Gg25:Gg127").Select
    Selection.PasteSpecial Paste:=xlPasteFormulas, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    Calculate
   

Range("gg25:gg127").SpecialCells(xlCellTypeFormulas, 2).EntireRow.Hidden = True

'Clear formula content
Range("Gg25:Gg127").ClearContents
Range("B128:gf128").ClearContents
Range("E23").Select

 'Protect worksheet
 Sheets("Tariff").Protect Password:="tender"
 
 
End Sub
Sub unhide()
Application.Calculate

Sheets("Tariff").Unprotect Password:="tender"
Rows("25:127").EntireRow.Hidden = False
Columns("B:gf").EntireColumn.Hidden = False
Sheets("Tariff").Protect Password:="tender"

End Sub



Attribute VB_Name = "Macroadjustm"
Sub Macroadjust()

Dim rowfm, rowto, colfm, colto As Long
Dim amount As Long
Dim counter As Long
Dim InputValue As Long

Application.ScreenUpdating = False

'Preset range area applying rate changes
rowfm = 25
rowto = 127
colfm = 7
colto = 188
InputValue = ActiveSheet.Range("$F$22").Value


Rows("22:22").EntireRow.Hidden = False

If Not IsNumeric(ActiveSheet.Range("$F$22").Value) Then
MsgBox ("Input Amount Error")
Exit Sub
End If


For counter = colfm To colto

     If ActiveSheet.Cells(22, counter) = "Y" Then
    
     'Selection.AutoFilter
  ' ActiveSheet.Range("$A$23:$GE$125").AutoFilter Field:=2, Criteria1:="ASC"
    
    On Error Resume Next

    Range(Cells(rowfm, counter), Cells(rowto, counter)).SpecialCells(xlCellTypeBlanks).Value = "'-"
      
    ActiveSheet.Range("$B$9").Value = InputValue
    ActiveSheet.Range("$B$9").Select
    Selection.Copy
    
    Range(Cells(rowfm, counter), Cells(rowto, counter)).SpecialCells(xlCellTypeVisible).Select
    
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlAdd, SkipBlanks _
    :=False, Transpose:=False

 
On Error GoTo 0
        
    End If

Next counter

ActiveSheet.Range("$F$22").Select
Application.CutCopyMode = False

Application.ScreenUpdating = True

ActiveSheet.Range("e23").Select
ActiveSheet.Range("f22").Value = InputValue
MsgBox ("Adjustment Finished! Adjusted value: " & ActiveSheet.Range("F22").Value & " on " & ActiveSheet.Range("B19").Value & " and " & ActiveSheet.Range("c19").Value & " and " & ActiveSheet.Range("F17").Value)

Sheets("Tariff").Unprotect Password:="tender"


    Rows("23:23").Select
    ActiveSheet.Range("$A$23:$GE$125").AutoFilter Field:=2
    Selection.AutoFilter

Application.Run "Unselect"
Rows("20:24").EntireRow.Hidden = True
ActiveSheet.Range("F22").Value = ""
ActiveSheet.Range("F17").Value = ""
Unload UserForm1
Call Hide



Sheets("Tariff").Protect Password:="tender"

End Sub





Attribute VB_Name = "MigrateRFPm"
Sub MIGRATE()

Dim nn As String
Dim tt As String
Dim template        As Worksheet
Dim Globe           As Worksheet
Dim Codeconvert     As Worksheet
Dim WBnew           As Workbook

Dim dataset         As Range
Dim partnercodes    As Range
Dim Grow            As Integer
Dim Gheight         As Integer
    
Dim prompt1         As String
Dim prompt2         As String
Dim prompt3         As String
Dim prompt4         As String

Dim rowfm, rowto, lastRow, counter As Long
Dim ans As String
Set Tariff = Sheets("tariff")
Set Globe = Sheets("Globe")
Set partnercodes = Tariff.Range("s5:s9")


tt = InputBox( _
"Please input Password!", _
"Input Password", _
"Password")

If Not tt = "hsdg" Then

MsgBox "Wrong Password!"
Exit Sub
End If


Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = False
Application.Calculate
'Timex = Timer

nn = Tariff.Range("p3").Value

If nn = False Then

MsgBox "Wrong Named account input! Please check again!"
Exit Sub
End If


'Msg1 = MsgBox("Data conversion in progress.", vbOK, "Processing!")
Application.ScreenUpdating = False
    
 

    
    Sheets("Globe").Visible = True
    
    
    Tariff.Unprotect Password:="tender"
    Globe.Unprotect Password:="tender"
    If Globe.AutoFilterMode Then Globe.AutoFilterMode = False
        Globe.Rows("2:60000").Delete

    
     Msg1 = MsgBox("Rates subject to change?", vbYesNo, "Are the rates subject to change")
  
    If Msg1 = vbYes Then
      ans = "Y"
    Else
      ans = "N"
    End If
    

    prompt1 = "Confirm Upload as FAK rates?"
    prompt2 = "Input NAC & Partner code then trigger conversion again!"
    prompt3 = Join(Application.WorksheetFunction.Transpose(Tariff.Range("u4:u9").Value), Chr$(10))
    prompt4 = "Upload as FAK rates or trigger conversion with correct NAC"
   
    If WorksheetFunction.CountA(partnercodes) = 0 Then
        msg2 = MsgBox(prompt1, vbYesNo, "FAK rates?")
             If msg2 = vbNo Then
                 MsgBox (prompt2)
                 Tariff.Range("o5:t9").Select
                 Exit Sub
             End If
    Else:
        If MsgBox(prompt3, vbYesNo, "Confirm NAC Upload") = vbYes Then
           Msg3 = "Y"
        Else
            MsgBox (prompt4)
            Tariff.Range("o5:t9").Select
            Exit Sub
        End If
    End If
   
   rowfm = 0
   rowto = Tariff.Range("b21").Value
   'colto = Tariff.Cells(16, Columns.Count).End(xlToLeft).Column
    colto = 0
    
    For i = 7 To 188
        If Tariff.Cells(16, i).Value <> "" Then
            colto = colto + 7
        End If
    Next i
    
   For counter = rowfm To rowto

    'EQ size
    Globe.Range("AE" & counter * colto + 2 & ":AE" & counter * colto + colto + 1).Value = _
    WorksheetFunction.Transpose(Tariff.Range(Tariff.Cells(19, 7), Tariff.Cells(19, colto + 6)).Value)
        
    'EQ TYPE
    Globe.Range("AF" & counter * colto + 2 & ":AF" & counter * colto + colto + 1).Value = _
    WorksheetFunction.Transpose(Tariff.Range(Sheets("Tariff").Cells(20, 7), Tariff.Cells(20, colto + 6)).Value)
    
   'CARGO TYPE
    Globe.Range("AG" & counter * colto + 2 & ":AG" & counter * colto + colto + 1).Value = _
    WorksheetFunction.Transpose(Tariff.Range(Sheets("Tariff").Cells(21, 7), Tariff.Cells(21, colto + 6)).Value)
    
    'POD
    Globe.Range("S" & counter * colto + 2 & ":S" & counter * colto + colto + 1).Value = _
    WorksheetFunction.Transpose(Tariff.Range(Tariff.Cells(16, 7), Tariff.Cells(16, colto + 6)).Value)
    '***** do at last at once?
    'Globe.Range("S" & counter * colto + 2 & ":S" & counter * colto + colto + 2).SpecialCells(xlCellTypeBlanks).FormulaR1C1 = "=R[-1]C"
    
   'desttraderemark
    Globe.Range("BS" & counter * colto + 2 & ":BS" & counter * colto + colto + 1).Value = _
    WorksheetFunction.Transpose(Tariff.Range(Tariff.Cells(23, 7), Tariff.Cells(23, colto + 6)).Value)
       
    'Destcustomizedremark
    Globe.Range("BT" & counter * colto + 2 & ":BT" & counter * colto + colto + 1).Value = _
    WorksheetFunction.Transpose(Tariff.Range(Tariff.Cells(24, 7), Tariff.Cells(24, colto + 6)).Value)
        
    'SERVICE TERM
    Globe.Range("AJ" & counter * colto + 2 & ":AJ" & counter * colto + colto + 1).Value = _
    WorksheetFunction.Transpose(Tariff.Range(Tariff.Cells(17, 7), Tariff.Cells(17, colto + 6)).Value)
    'Sheets("Globe").Range("AM" & counter * colto + 2 & ":AM" & counter * colto + colto + 1).SpecialCells(xlCellTypeBlanks).FormulaR1C1 = "=R[-1]C"
    
    'POL
    Globe.Range("N" & counter * colto + 2 & ":N" & counter * colto + colto + 1).Value = _
    WorksheetFunction.Transpose(Tariff.Range("e" & 25 + counter).Value)
    
    'POLAREA
    Globe.Range("BU" & counter * colto + 2 & ":BU" & counter * colto + colto + 1).Value = _
    WorksheetFunction.Transpose(CStr(Tariff.Range("b" & 25 + counter).Value))
    
    'POLtraderemark
    Globe.Range("BV" & counter * colto + 2 & ":BV" & counter * colto + colto + 1).Value = WorksheetFunction.Transpose(CStr(Tariff.Range("c" & 25 + counter).Value))
    
    'POLtraderemark
    Globe.Range("BW" & counter * colto + 2 & ":BW" & counter * colto + colto + 1).Value = WorksheetFunction.Transpose(CStr(Tariff.Range("d" & 25 + counter).Value))
        
    'RATE
    'Globe.Range("Bh" & counter * colto + 2 & ":Bh" & counter * colto + colto + 1).Value = _
    WorksheetFunction.Transpose(Tariff.Range("g" & 25 + counter & ":Gf" & 25 + counter).Value)
    Globe.Range("BE" & counter * colto + 2 & ":BE" & counter * colto + colto + 1).Value = _
    WorksheetFunction.Transpose(Tariff.Range(Tariff.Cells(25 + counter, 7), Tariff.Cells(25 + counter, colto + 6)).Value)
    Next counter
    
    'CHANGE FORMULA TO VALUE
    'find last row first
    lastRow = Globe.UsedRange.Rows.Count

    Globe.Range("S2:S" & lastRow).SpecialCells(xlCellTypeBlanks).FormulaR1C1 = "=R[-1]C"
    Globe.Range("AJ2:AJ" & lastRow).SpecialCells(xlCellTypeBlanks).FormulaR1C1 = "=R[-1]C"
    Globe.Range("AH2:AH" & lastRow).FormulaR1C1 = "=IF(RC[-1]=""REEFER"",""REEFER"",""FREIGHT ALL KINDS"")"
    Globe.Range("BP2:BP" & lastRow).FormulaR1C1 = "=RC[3]&""|""&RC[4]&""|""&RC[5]&""|""&RC[6]&""|""&RC[7]"
    
    Globe.Calculate
    
    Globe.Range("S2:S" & lastRow).Formula = Globe.Range("S2:S" & lastRow).Value
    Globe.Range("AJ2:AJ" & lastRow).Formula = Globe.Range("AJ2:AJ" & lastRow).Value
    Globe.Range("AH2:AH" & lastRow).Formula = Globe.Range("AH2:AH" & lastRow).Value
    Globe.Range("BP2:BP" & lastRow).Formula = Globe.Range("BP2:BP" & lastRow).Value
    Globe.Columns("BR:BX").ClearContents
    
    'add sorting (- to last) before delete
    Globe.UsedRange.Sort key1:=Globe.Range("BE2:BE" & lastRow), _
        order1:=xlAscending, Header:=xlYes
    
    'Remove invalid entries
    Globe.UsedRange.AutoFilter Field:=57, Criteria1:="=-", _
    Operator:=xlOr, Criteria2:="="
    Application.DisplayAlerts = False
    On Error Resume Next
    
    'add sorting (- to last) before delete
    
    Globe.Range("BE2:BE" & lastRow).SpecialCells(xlCellTypeVisible).EntireRow.Delete
    Globe.AutoFilter.ShowAllData
    
    lastRow = Globe.UsedRange.Rows.Count
    
    Globe.Range("B2:B" & lastRow).Value = "HS"
    Globe.Range("L2:L" & lastRow).Value = "P"
    Globe.Range("U2:U" & lastRow).Value = "P"
    

    
    Globe.Range("AI2:AI" & lastRow).Value = "C"
    Globe.Range("AL2:AL" & lastRow).Value = "FCL"
    Globe.Range("AY2:AY" & lastRow).Value = "OFREIGHT"
    Globe.Range("AZ2:AZ" & lastRow).Value = "C"
    Globe.Range("BD2:BD" & lastRow).Value = "OCEAN"
    Globe.Range("BF2:BF" & lastRow).Value = "USD"
    Globe.Range("BQ2:BQ" & lastRow).Value = "Y"
    Globe.Range("BI2:BI" & lastRow).Value = ans
    Globe.Range("BJ2:BJ" & lastRow).Value = "Y"
    Globe.Range("BK2:BK" & lastRow).Value = "Y"

    
    Gheight = lastRow - 1
    If Msg3 = "Y" Then
        For Each cell In partnercodes
            If cell = Empty Then GoTo A
                Grow = Application.WorksheetFunction.CountA(Globe.Columns("AN:AN")) + 1
                lastRow = Globe.UsedRange.Rows.Count
                If Grow > 2 Then
                    Globe.Range("A" & lastRow + 1 & ":BW" & lastRow + Gheight).Value2 = Globe.Range("A2:BW" & Gheight + 1).Value2
            End If
            Globe.Range("AN" & Grow).Resize(Gheight, 1).Value = cell
            Globe.Range("BO" & Grow).Resize(Gheight, 1).Value = cell.Offset(0, -4).Value
A:
        Next

    End If

    Globe.Range("a1").Select
    
    'create new workbook
    Set WBnew = Workbooks.Add
    Globe.Copy Before:=WBnew.Worksheets("Sheet1")
    On Error Resume Next
    WBnew.Sheets(Array("Sheet1", "Sheet2", "Sheet3")).Delete
    On Error GoTo 0
    
    NewFileName = "Globe RFP" & ".xlsx"
    NewFileFilter = "Microsoft Excel Workbook (*.xlsx), *.xlsx"
    myTitle = "Navigate to the required folder"
     
    FileSaveName = Application.GetSaveAsFilename _
             (InitialFileName:=NewFileName, _
              FileFilter:=NewFileFilter, _
              Title:=myTitle)
     If Not FileSaveName = False Then
       WBnew.SaveAs Filename:=FileSaveName, _
                     FileFormat:=51
     Else
       MsgBox "File NOT Saved. User cancelled the Save."
     End If
    
    ThisWorkbook.Sheets("Globe").Visible = False
        
    Globe.Unprotect Password:="tender"
    If Globe.AutoFilterMode Then Globe.AutoFilterMode = False
    Globe.Rows("2:60000").Delete
    
'Application.Calculation = xlCalculationAutomatic
    'MsgBox (Round((Timer - Timex) * 1000, 0) / 1000)
End Sub


Sub newsheet()
'


    Dim ajj As Long
    Dim wb As Workbook
     Dim NewFileName As String
     Dim NewFileFilter As String
     Dim myTitle As String
     Dim FileSaveName As Variant
     Dim NewFileFormat As Long
     Dim tt As String
    
ajj = Application.WorksheetFunction.CountA(ThisWorkbook.Sheets("globe").Range("b:b"))



tt = InputBox( _
"Please input Password!", _
"Input Password", _
"Password")

If Not tt = "hsdg" Then

MsgBox "Wrong Password!"
Exit Sub
End If

    Sheets("Globe").Select
    Sheets("Globe").Unprotect Password:="tender"
    
    Range("A1").Select
    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
    Range("A1:Bt" & ajj).Select
    Selection.Cut
    
    
    Sheets("Globe").Visible = False
    Workbooks.Add
   'Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
        ActiveSheet.Paste
        
        Set wb = ActiveWorkbook
        
        NewFileName = " Globe rfp" & ".xlsx"
       NewFileFilter = "Microsoft Excel Workbook (*.xlsx), *.xlsx"


     
    myTitle = "Navigate to the required folder"
     
    FileSaveName = Application.GetSaveAsFilename _
             (InitialFileName:=NewFileName, _
              FileFilter:=NewFileFilter, _
              Title:=myTitle)
     If Not FileSaveName = False Then
       wb.SaveAs Filename:=FileSaveName, _
                     FileFormat:=51
     Else
       MsgBox "File NOT Saved. User cancelled the Save."
     End If
 
End Sub








Attribute VB_Name = "SelectEqm"

'Select all 20Dry equipment in the Rate adjustment form

Sub All20d()

Dim colfm1, colto1, start As Long
Dim counter1 As Long


Application.ScreenUpdating = False

'Preset range area applying rate changes

colfm1 = 0
colto1 = 25


For start = colfm1 + 1 To 26


counter1 = 7 * start

 
ActiveSheet.Cells(22, counter1).Value = "Y"



Next start


Application.ScreenUpdating = True

'MsgBox ("All 20 GP Selected !")


End Sub

'Select all 20RF equipment in the Rate adjustment form
Sub All20rf()

Dim colfm1, colto1, start As Long
Dim counter1 As Long


Application.ScreenUpdating = False

'Preset range area applying rate changes

colfm1 = 0
colto1 = 25


For start = colfm1 + 1 To 26


counter1 = 7 * start + 3

 
ActiveSheet.Cells(22, counter1).Value = "Y"



Next start


Application.ScreenUpdating = True

'MsgBox ("All 20 RF Selected !")


End Sub

'Select all 20NOR equipment in the Rate adjustment form
Sub All20nor()

Dim colfm1, colto1, start As Long
Dim counter1 As Long


Application.ScreenUpdating = False

'Preset range area applying rate changes

colfm1 = 0
colto1 = 25


For start = colfm1 + 1 To 26


counter1 = 7 * start + 5

 
ActiveSheet.Cells(22, counter1).Value = "Y"



Next start


Application.ScreenUpdating = True

'MsgBox ("All 20 NOR Selected !")


End Sub

'Unselect all equipment
Sub Unselect()

Dim colfm2, colto2, start As Long
Dim counter4 As Long


Application.ScreenUpdating = False

'Preset range area applying rate changes

colfm2 = 7
colto2 = 188


For counter4 = colfm2 To colto2


    ActiveSheet.Cells(22, counter4).Value = "N"
    


Next counter4

Application.ScreenUpdating = True

'MsgBox ("Unselect All !")


End Sub

'Select all 40Dry equipment in the Rate adjustment form
Sub all40d()

Dim colfm2, colto2, start As Long
Dim counter2, counter3 As Long


Application.ScreenUpdating = False

'Preset range area applying rate changes

colfm2 = 0
colto2 = 25


For start2 = colfm2 + 1 To 26

counter2 = 7 * start2 + 1
counter3 = 7 * start2 + 2


    ActiveSheet.Cells(22, counter2).Value = "Y"
    ActiveSheet.Cells(22, counter3).Value = "Y"


Next start2

Application.ScreenUpdating = True

'MsgBox ("All 40 GP Selected !")


End Sub

'Select all 40RF equipment in the Rate adjustment form
Sub all40rf()

Dim colfm2, colto2, start As Long
Dim counter2, counter3 As Long


Application.ScreenUpdating = False

'Preset range area applying rate changes

colfm2 = 0
colto2 = 25


For start2 = colfm2 + 1 To 26

counter4 = 7 * start2 + 4

ActiveSheet.Cells(22, counter4).Value = "Y"

Next start2

Application.ScreenUpdating = True

'MsgBox ("All 40 RF Selected !")


End Sub

'Select all 40NOR equipment in the Rate adjustment form
Sub all40nor()

Dim colfm2, colto2, start As Long
Dim counter2, counter3 As Long


Application.ScreenUpdating = False

'Preset range area applying rate changes

colfm2 = 0
colto2 = 25


For start2 = colfm2 + 1 To 26
counter2 = 7 * start2 + 6


  
ActiveSheet.Cells(22, counter2).Value = "Y"

Next start2

Application.ScreenUpdating = True

'MsgBox ("All 40 NOR Selected !")


End Sub

Sub checkdgroup()

Dim colfm1, colto1, start As Long
Dim counter1 As Long


Application.ScreenUpdating = False

'Preset range area applying rate changes

colfm1 = 0
colto1 = 181


For start = colfm1 To 181


counter2 = 7 + start * 1

'dgroupv = "DestOutport"
 
 If Not Sheets("Tariff").Cells(23, counter2).Value = Sheets("Tariff").Range("F17").Value Then
 

 
Sheets("Tariff").Cells(22, counter2).Value = "N"

End If

Next start


Application.ScreenUpdating = True



End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Showformm"

Private Sub Rectangle7_Click()

tt = InputBox( _
"Please input Password!", _
"Input Password", _
"Password")

If Not tt = "hsdg" Then

MsgBox "Wrong Password!"
Exit Sub
End If

UserForm1.Show

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()

Dim wSheet As Worksheet

    
    
     With Sheet1
        .Protect Password:="tender", UserInterfaceOnly:=True
        .EnableOutlining = True
        .EnableAutoFilter = True
        .Protect Password:="tender", DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowFormattingCells:=True, AllowFormattingColumns:=False, _
        AllowFormattingRows:=False
        End With
   


    
        With Sheet2
        .Protect Password:="hsdg", UserInterfaceOnly:=True
        .EnableOutlining = True
        .EnableAutoFilter = True
        .Protect Password:="hsdg", DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowFormattingCells:=True, AllowFormattingColumns:=True, _
        AllowFormattingRows:=True
        End With


     
       
     
       
End Sub


Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{D9B28A80-AF77-4AB5-80AE-6652F0927200}{AF11AE30-24AA-480D-9296-D8E91082455F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False





Private Sub Label1_Click()

End Sub

Private Sub UserForm_Initialize()

'Empty NameTextBox
inputr.Value = 0


 'Uncheck DataCheckBoxes
    drytwo.Value = False
    dryfour.Value = False
    rftwo.Value = False
    rffour.Value = False
    nortwo.Value = False
    norfour.Value = False
    manual.Value = False
  
  With areacombo
     .AddItem "All Area"
     .AddItem "ANC"
     .AddItem "ASC"
     .AddItem "ATW"
     .AddItem "ASA"
     .AddItem "Japan"
     .AddItem "Korea"
End With
  
  
Dim oogroup As Range

Dim ws As Worksheet

Set ws = Worksheets("Tariff")

For Each oogroup In ws.Range("Ogroup")


  
  Me.Comboorigin.AddItem oogroup.Value
    Next oogroup
 



Dim ddgroup As Range


For Each ddgroup In ws.Range("Dgroup")


  
  Me.Combodest.AddItem ddgroup.Value
    Next ddgroup
  
 
  
  
'Set "All area as default
 areacombo.Value = "All Area"
 Combodest.Value = "All"
Comboorigin.Value = "All"

End Sub
Private Sub closef_Click()

 Unload Me

End Sub
Private Sub resetf_Click()

Call UserForm_Initialize

End Sub


Private Sub adjustf_Click()

Dim emptyRow As Long
'Dim inputr As Integer
Dim dgroupv As String

Set shtJT = ActiveWorkbook

'Make Sheet1 active
 Sheets("Tariff").Activate

'Determine emptyRow
 'emptyRow = WorksheetFunction.CountA(Range("A:A")) + 1
   Sheets("Tariff").Unprotect Password:="tender"
'Transfer information
 Range("$f$22").Value = inputr.Value
 Range("B9").Value = inputr.Value
 
If drytwo.Value = True Then Application.Run "All20d"
If dryfour.Value = True Then Application.Run "All40d"
If rffour.Value = True Then Application.Run "All40rf"
If rftwo.Value = True Then Application.Run "All20rf"
If norfour.Value = True Then Application.Run "All40nor"
If nortwo.Value = True Then Application.Run "All20nor"
If manual.Value = True Then Application.Run "MacroAdjust"

If drytwo.Value = False And dryfour.Value = False And rffour.Value = False And rftwo.Value = False And norfour.Value = False And nortwo.Value = False And manual.Value = False Then
MsgBox ("No Equipment is chosen !")
Exit Sub
End If

If Not Comboorigin.Value = "All" Then
Sheets("Tariff").Range("C19").Value = Comboorigin.Value

Else

If Not Combodest.Value = "All" Then
Sheets("Tariff").Range("F17").Value = Combodest.Value

Application.Run "checkdgroup"


Else

End If

Calculate

Range("B19").Value = areacombo.Value

If areacombo.Value = "All Area" And Comboorigin.Value = "All" Then

Application.Run "Macroadjust"
   
   
Else

If areacombo.Value = "All Area" And Comboorigin.Value <> "All" Then
ActiveSheet.Range("$A$25:$GE$127").AutoFilter Field:=3, Criteria1:=Comboorigin.Value
Application.Run "MacroAdjust"
   
Else

If areacombo.Value <> "All Area" And Comboorigin.Value = "All" Then
ActiveSheet.Range("$A$25:$GE$127").AutoFilter Field:=2, Criteria1:=areacombo.Value
Application.Run "MacroAdjust"
   
 
 Else

If areacombo.Value <> "All Area" And Comboorigin.Value <> "All" Then
ActiveSheet.Range("$A$25:$GE$127").AutoFilter Field:=2, Criteria1:=areacombo.Value
ActiveSheet.Range("$A$25:$GE$127").AutoFilter Field:=3, Criteria1:=Comboorigin.Value
Application.Run "MacroAdjust"
   
   
End If
End If
End If
End If

End If




Call UserForm_Initialize
End Sub

Attribute VB_Name = "nacbuttonm"
Sub BundleNAC()
'
' BundleNAC Macro
'

'
Sheets("Tariff").Select

   Range("o5:r9").Select
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    Selection.UnMerge
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    
    
    Range("s5:t9").Select
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    Selection.UnMerge
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    
    
    
    Range("o5:t9").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    
' Add NAC code
    Range("S5:T9").Select
    ActiveCell.FormulaR1C1 = "100746181"
    Range("S10").Select
           
    
End Sub
Sub specialnac()
'
' specialnac Macro
    Sheets("Tariff").Select

    Range("o5:r9").Select
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    Selection.UnMerge
    Range("o5:r5").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    Range("o6:r6").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    Range("o7:r7").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    Range("o8:r8").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    Range("o9:r9").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    
    
    
    Range("s5:t9").Select
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    Selection.UnMerge
    
    
    Range("s5:t5").Select
  
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    
    Range("s6:t6").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    
    Range("s7:t7").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    
    Range("s8:t8").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    
    Range("s9:t9").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    
    
    Range("o5:t9").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
End Sub

Sub nacbut()

tt = InputBox( _
"Please input Password!", _
"Input Password", _
"Password")

If Not tt = "hsdg" Then

MsgBox "Wrong Password!"
Exit Sub
End If


Msg1 = MsgBox("Bundle Named account?", vbYesNo, "Bundle Named account ?")
  
    If Msg1 = vbYes Then
    Call BundleNAC
    End If
    
    If Msg1 = vbNo Then
    Call specialnac
    End If

End Sub
Attribute VB_Name = "remarkm"
Sub remarkjoin()
'
' Macro2 Macro
'

ajj = Application.WorksheetFunction.CountA(ThisWorkbook.Sheets("globe").Range("b:b"))



Range("Br2").Select
    ActiveCell.FormulaR1C1 = _
        "=RC[3]"
    Range("Br2").Select
    Selection.Copy
    Range("Br3").Select
    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
    Range("Br3:Br" & ajj).Select
    ActiveSheet.Paste
    Columns("Br:Br").Select
    Application.CutCopyMode = False
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False

   Selection.Replace What:="0", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False




    Range("Bs2").Select
    ActiveCell.FormulaR1C1 = _
        "=RC[3]&""|""&RC[4]&""|""&RC[5]&""|""&RC[6]&""|""&RC[7]"
    Range("Bs2").Select
    Selection.Copy
    Range("Bs3").Select
    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
    Range("Bs3:Bs" & ajj).Select
    ActiveSheet.Paste
    Columns("Bs:Bs").Select
    Application.CutCopyMode = False
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Columns("BU:CA").Select
    Application.CutCopyMode = False
    Selection.ClearContents
End Sub




INQUEST-PP=macro
