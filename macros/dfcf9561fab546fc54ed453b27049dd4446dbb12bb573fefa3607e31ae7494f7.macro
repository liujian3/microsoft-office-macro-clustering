Attribute VB_Name = "Mod2ProgresBar"
Sub ExibFundo()
    ScrUp = Application.ScreenUpdating
    Application.ScreenUpdating = False
    Windows(ThisWorkbook.Windows(1).Caption).Visible = True
    Windows(ThisWorkbook.Windows(1).Caption).Caption = "Baixando Arquivos"
    ThisWorkbook.Sheets("Conf-fun").Select
    ActiveWindow.DisplayWorkbookTabs = False
    Application.ScreenUpdating = ScrUp
End Sub

Sub ProgresBar(Perc As Single, Optional Msg As String)
    With ActiveWorkbook.ActiveSheet
        If Perc = 0 Then
            .Shapes("QuadroFixo").Visible = True
            .Shapes("BarraMov").Visible = True
            .Shapes("BarraFixa").Visible = True
        End If

        If Msg <> "" Then .Shapes("QuadroFixo").TextFrame.Characters.Text = Msg
        .Shapes("BarraMov").Width = Perc / 100 * 374
        .Shapes("BarraMov").TextFrame.Characters.Text = IIf(Perc > 47, Format(Perc, "##0") & "%", "   ")
        .Shapes("BarraFixa").TextFrame.Characters.Text = IIf(Perc > 47, "   ", Format(Perc, "##0") & "%")

        If Perc > 100 Then
            .Shapes("QuadroFixo").Visible = False
            .Shapes("BarraMov").Visible = False
            .Shapes("BarraFixa").Visible = False
            .Shapes("BarraMov").Width = 0.01
        End If
    End With
    DoEvents
End Sub

Sub aTestProgrBarra()
    ExibFundo
    ProgresBar 0, "Baixando Arquivos:"
    For i = 1 To 10
        ProgresBar (i * 10)
        MyWait 1
    Next
    ProgresBar 102
End Sub

Sub aTestProgrBarra100()
    ExibFundo
    ProgresBar 0
    ProgresBar 100
End Sub

Attribute VB_Name = "ModAPI"
Public Const LOCALE_USER_DEFAULT& = &H400
Public Const LOCALE_SENGLANGUAGE = &H1001   'English name of language
Public Const LOCALE_SLANGUAGE = &H2   'localized name of language

Private Declare Function apiGetLocaleInfo Lib "kernel32" _
        Alias "GetLocaleInfoA" (ByVal Locale As Long, _
        ByVal LCType As Long, ByVal lpLCData As String, _
        ByVal cchData As Long) As Long
Function gLocInfo(vType As Long) As String
    Dim vLoc As Long
    Dim vStr As String, vLng As Long
    Dim Ret As Long
    vStr = String$(255, 0)
    vLng = 255 - 1
    Ret = apiGetLocaleInfo(LOCALE_USER_DEFAULT, vType, vStr, vLng)
    If Ret <> 0 Then
        gLocInfo = Left$(vStr, Ret - 1)
    End If
End Function
Sub ttt()
    MsgBox gLocInfo(LOCALE_SLANGUAGE)
    MsgBox gLocInfo(LOCALE_SENGLANGUAGE)
End Sub
Attribute VB_Name = "ModAPIDir"
'---Posted by Dev Ashish---
Private Const MAX_PATH As Integer = 255
Private Declare Function apiGetSystemDirectory& Lib "kernel32" _
        Alias "GetSystemDirectoryA" _
        (ByVal lpBuffer As String, ByVal nSize As Long)

Private Declare Function apiGetWindowsDirectory& Lib "kernel32" _
        Alias "GetWindowsDirectoryA" _
        (ByVal lpBuffer As String, ByVal nSize As Long)

Private Declare Function apiGetTempDir Lib "kernel32" _
        Alias "GetTempPathA" (ByVal nBufferLength As Long, _
        ByVal lpBuffer As String) As Long

Function fReturnTempDir()
'Returns Temp Folder Name
    Dim strTempDir As String
    Dim lngx As Long
    strTempDir = String$(MAX_PATH, 0)
    lngx = apiGetTempDir(MAX_PATH, strTempDir)
    If lngx <> 0 Then
        fReturnTempDir = Left$(strTempDir, lngx)
    Else
        fReturnTempDir = ""
    End If
End Function

Function fReturnSysDir()
'Returns System Folder Name (C:\WinNT\System32)
    Dim strSysDirName As String
    Dim lngx As Long
    strSysDirName = String$(MAX_PATH, 0)
    lngx = apiGetSystemDirectory(strSysDirName, MAX_PATH)
    If lngx <> 0 Then
        fReturnSysDir = Left$(strSysDirName, lngx)
    Else
        fReturnSysDir = ""
    End If
End Function

Function fReturnWinDir()
'Returns OS Folder (C:\Win95)
    Dim strWinDirName As String
    Dim lngx As Long
    strWinDirName = String$(MAX_PATH, 0)
    lngx = apiGetWindowsDirectory(strWinDirName, MAX_PATH)
    If lngx <> 0 Then
        fReturnWinDir = Left$(strWinDirName, lngx)
    Else
        fReturnWinDir = ""
    End If
End Function


Attribute VB_Name = "ModMAPIvb32"
'**************************************************************************
'
'
'
' Visual Basic declaration for the MAPI functions.
'
' This file can be loaded into the global module.
'
'
'
'
'**************************************************************************
'

'***************************************************
'   MAPI Message holds information about a message
'***************************************************

Type MAPIMessage
    Reserved As Long
    Subject As String
    NoteText As String
    MessageType As String
    DateReceived As String
    ConversationID As String
    Flags As Long
    RecipCount As Long
    FileCount As Long
End Type


'************************************************
'   MAPIRecip holds information about a message
'   originator or recipient
'************************************************

Type MapiRecip
    Reserved As Long
    RecipClass As Long
    Name As String    'myemail@server.com (Don't forget to set RecipCount=1 in Type MAPIMessage)
    Address As String
    EIDSize As Long
    EntryID As String
End Type


'******************************************************
'   MapiFile holds information about file attachments
'******************************************************

Type MapiFile
    Reserved As Long
    Flags As Long
    Position As Long
    PathName As String    'Fullname (Path and name of a file to attached. Don't forget to set FileCount=1 in Type MAPIMessage)
    FileName As String    'Any name that you want to show on email
    FileType As String
End Type


'***************************
'   FUNCTION Declarations
'***************************

Declare Function MAPILogon Lib "MAPI32.DLL" (ByVal UIParam&, ByVal User$, _
        ByVal Password$, ByVal Flags&, ByVal Reserved&, Session&) As Long
Declare Function MAPILogoff Lib "MAPI32.DLL" (ByVal Session&, ByVal _
        UIParam&, ByVal Flags&, ByVal Reserved&) As Long
Declare Function BMAPIReadMail Lib "MAPI32.DLL" (lMsg&, nRecipients&, _
        nFiles&, ByVal Session&, ByVal UIParam&, MessageID$, ByVal Flag&, ByVal _
        Reserved&) As Long
Declare Function BMAPIGetReadMail Lib "MAPI32.DLL" (ByVal lMsg&, Message As _
        MAPIMessage, Recip() As MapiRecip, File() As MapiFile, Originator As _
        MapiRecip) As Long
Declare Function MAPIFindNext Lib "MAPI32.DLL" Alias "BMAPIFindNext" (ByVal _
        Session&, ByVal UIParam&, MsgType$, SeedMsgID$, ByVal Flag&, ByVal _
        Reserved&, MsgID$) As Long
Declare Function MAPISendDocuments Lib "MAPI32.DLL" (ByVal UIParam&, ByVal _
        DelimStr$, ByVal FilePaths$, ByVal FileNames$, ByVal Reserved&) As Long
Declare Function MAPIDeleteMail Lib "MAPI32.DLL" (ByVal Session&, ByVal _
        UIParam&, ByVal MsgID$, ByVal Flags&, ByVal Reserved&) As Long
Declare Function MAPISendMail Lib "MAPI32.DLL" Alias "BMAPISendMail" (ByVal _
        Session&, ByVal UIParam&, Message As MAPIMessage, Recipient() As MapiRecip, _
        File() As MapiFile, ByVal Flags&, ByVal Reserved&) As Long
Declare Function MAPISaveMail Lib "MAPI32.DLL" Alias "BMAPISaveMail" (ByVal _
        Session&, ByVal UIParam&, Message As MAPIMessage, Recipient() As MapiRecip, _
        File() As MapiFile, ByVal Flags&, ByVal Reserved&, MsgID$) As Long
Declare Function BMAPIAddress Lib "MAPI32.DLL" (lInfo&, ByVal Session&, _
        ByVal UIParam&, Caption$, ByVal nEditFields&, Label$, nRecipients&, Recip() _
        As MapiRecip, ByVal Flags&, ByVal Reserved&) As Long
Declare Function BMAPIGetAddress Lib "MAPI32.DLL" (ByVal lInfo&, ByVal _
        nRecipients&, Recipients() As MapiRecip) As Long
Declare Function MAPIDetails Lib "MAPI32.DLL" Alias "BMAPIDetails" (ByVal _
        Session&, ByVal UIParam&, Recipient As MapiRecip, ByVal Flags&, ByVal _
        Reserved&) As Long
Declare Function MAPIResolveName Lib "MAPI32.DLL" Alias "BMAPIResolveName" _
        (ByVal Session&, ByVal UIParam&, ByVal UserName$, ByVal Flags&, ByVal _
        Reserved&, Recipient As MapiRecip) As Long



'**************************
'   CONSTANT Declarations
'**************************
'

Global Const SUCCESS_SUCCESS = 0
Global Const MAPI_USER_ABORT = 1
Global Const MAPI_E_USER_ABORT = MAPI_USER_ABORT
Global Const MAPI_E_FAILURE = 2
Global Const MAPI_E_LOGIN_FAILURE = 3
Global Const MAPI_E_LOGON_FAILURE = MAPI_E_LOGIN_FAILURE
Global Const MAPI_E_DISK_FULL = 4
Global Const MAPI_E_INSUFFICIENT_MEMORY = 5
Global Const MAPI_E_BLK_TOO_SMALL = 6
Global Const MAPI_E_TOO_MANY_SESSIONS = 8
Global Const MAPI_E_TOO_MANY_FILES = 9
Global Const MAPI_E_TOO_MANY_RECIPIENTS = 10
Global Const MAPI_E_ATTACHMENT_NOT_FOUND = 11
Global Const MAPI_E_ATTACHMENT_OPEN_FAILURE = 12
Global Const MAPI_E_ATTACHMENT_WRITE_FAILURE = 13
Global Const MAPI_E_UNKNOWN_RECIPIENT = 14
Global Const MAPI_E_BAD_RECIPTYPE = 15
Global Const MAPI_E_NO_MESSAGES = 16
Global Const MAPI_E_INVALID_MESSAGE = 17
Global Const MAPI_E_TEXT_TOO_LARGE = 18
Global Const MAPI_E_INVALID_SESSION = 19
Global Const MAPI_E_TYPE_NOT_SUPPORTED = 20
Global Const MAPI_E_AMBIGUOUS_RECIPIENT = 21
Global Const MAPI_E_AMBIG_RECIP = MAPI_E_AMBIGUOUS_RECIPIENT
Global Const MAPI_E_MESSAGE_IN_USE = 22
Global Const MAPI_E_NETWORK_FAILURE = 23
Global Const MAPI_E_INVALID_EDITFIELDS = 24
Global Const MAPI_E_INVALID_RECIPS = 25
Global Const MAPI_E_NOT_SUPPORTED = 26

Global Const MAPI_ORIG = 0
Global Const MAPI_TO = 1
Global Const MAPI_CC = 2
Global Const MAPI_BCC = 3


'***********************
'   FLAG Declarations
'***********************

'* MAPILogon() flags *

Global Const MAPI_LOGON_UI = &H1
Global Const MAPI_NEW_SESSION = &H2
Global Const MAPI_FORCE_DOWNLOAD = &H1000

'* MAPILogoff() flags *

Global Const MAPI_LOGOFF_SHARED = &H1
Global Const MAPI_LOGOFF_UI = &H2

'* MAPISendMail() flags *

Global Const MAPI_DIALOG = &H8
Global Const MAPI_NO_DIALOG = &H0

'* MAPIFindNext() flags *

Global Const MAPI_UNREAD_ONLY = &H20
Global Const MAPI_GUARANTEE_FIFO = &H100

'* MAPIReadMail() flags *

Global Const MAPI_ENVELOPE_ONLY = &H40
Global Const MAPI_PEEK = &H80
Global Const MAPI_BODY_AS_FILE = &H200
Global Const MAPI_SUPPRESS_ATTACH = &H800

'* MAPIDetails() flags *

Global Const MAPI_AB_NOMODIFY = &H400

'* Attachment flags *

Global Const MAPI_OLE = &H1
Global Const MAPI_OLE_STATIC = &H2

'* MapiMessage flags *

Global Const MAPI_UNREAD = &H1
Global Const MAPI_RECEIPT_REQUESTED = &H2
Global Const MAPI_SENT = &H4

Function CopyFiles(MfIn As MapiFile, MfOut As MapiFile) As Long

    MfOut.FileName = MfIn.FileName
    MfOut.PathName = MfIn.PathName
    MfOut.Reserved = MfIn.Reserved
    MfOut.Flags = MfIn.Flags
    MfOut.Position = MfIn.Position
    MfOut.FileType = MfIn.FileType
    CopyFiles = 1&

End Function

Function CopyRecipient(MrIn As MapiRecip, MrOut As MapiRecip) As Long

    MrOut.Name = MrIn.Name
    MrOut.Address = MrIn.Address
    MrOut.EIDSize = MrIn.EIDSize
    MrOut.EntryID = MrIn.EntryID
    MrOut.Reserved = MrIn.Reserved
    MrOut.RecipClass = MrIn.RecipClass

    CopyRecipient = 1&

End Function

Function MAPIAddress(Session As Long, UIParam As Long, Caption As String, _
        nEditFields As Long, Label As String, nRecipients As Long, Recips() As _
        MapiRecip, Flags As Long, Reserved As Long) As Long


    Dim Info&
    Dim rc&
    Dim nRecips As Long

    ReDim Rec(0 To nRecipients) As MapiRecip
    ' Use local variable since BMAPIAddress changes the passed value
    nRecips = nRecipients

    '*****************************************************
    ' Copy input recipient structure into local
    ' recipient structure used as input to BMAPIAddress
    '*****************************************************

    For i = 0 To nRecipients - 1
        Ignore& = CopyRecipient(Recips(i), Rec(i))
    Next i

    rc& = BMAPIAddress(Info&, Session&, UIParam&, Caption$, nEditFields&, _
            Label$, nRecips&, Rec(), Flags, 0&)

    If (rc& = SUCCESS_SUCCESS) Then

        '**************************************************
        ' New recipients are now in the memory referenced
        ' by Info (HANDLE). nRecipients is the number of
        ' new recipients.
        '**************************************************
        nRecipients = nRecips     ' Copy back to parameter

        If (nRecipients > 0) Then
            ReDim Rec(0 To nRecipients - 1) As MapiRecip
            rc& = BMAPIGetAddress(Info&, nRecipients&, Rec())

            '*********************************************
            ' Copy local recipient structure to
            ' recipient structure passed as procedure
            ' parameter. This is necessary because
            ' VB doesn't seem to work properly when
            ' the procedure parameter gets passed
            ' directory to the BMAPI.DLL Address routine
            '*********************************************

            ReDim Recips(0 To nRecipients - 1) As MapiRecip

            For i = 0 To nRecipients - 1
                Ignore& = CopyRecipient(Rec(i), Recips(i))
            Next i

        End If

    End If

    MAPIAddress = rc&

End Function

Function MAPIReadMail(Session As Long, UIParam As Long, MessageID As _
        String, Flags As Long, Reserved As Long, Message As MAPIMessage, Orig As _
        MapiRecip, RecipsOut() As MapiRecip, FilesOut() As MapiFile) As Long

    Dim Info&
    Dim nFiles&, nRecips&

    rc& = BMAPIReadMail(Info&, nRecips, nFiles, Session, 0, MessageID, _
            Flags, Reserved)

    If (rc& = SUCCESS_SUCCESS) Then

        'Message is now read into the handles array. We have to redim the
        'arrays and read the information in.

        If (nRecips = 0) Then nRecips = 1
        If (nFiles = 0) Then nFiles = 1

        ReDim Recips(0 To nRecips - 1) As MapiRecip
        ReDim Files(0 To nFiles - 1) As MapiFile

        rc& = BMAPIGetReadMail(Info&, Message, Recips(), Files(), Orig)

        '*******************************************
        ' Copy Recipient and File structures from
        ' Local structures to those passed as
        ' parameters
        '*******************************************

        ReDim FilesOut(0 To nFiles - 1) As MapiFile
        ReDim RecipsOut(0 To nRecips - 1) As MapiRecip

        For i = 0 To nRecips - 1
            Ignore& = CopyRecipient(Recips(i), RecipsOut(i))
        Next i

        For i = 0 To nFiles - 1
            Ignore& = CopyFiles(Files(i), FilesOut(i))
        Next i

    End If

    MAPIReadMail = rc&

End Function


Attribute VB_Name = "ModRegEdit"
'Option Explicit
Public Const MAX_STRING As Long = 128
Public Const REG_SZ As Long = &H1    'String
Public Const REG_EXPAND_SZ = &H2
Public Const REG_BINARY As Long = &H3
Public Const REG_DWORD As Long = &H4

Public Const HKEY_CLASSES_ROOT As Long = &H80000000
Public Const HKEY_CURRENT_USER As Long = &H80000001
Public Const HKEY_LOCAL_MACHINE As Long = &H80000002
Public Const HKEY_USERS As Long = &H80000003
Public Const HKEY_PERFORMANCE_DATA As Long = &H80000004
Public Const HKEY_CURRENT_CONFIG As Long = &H80000005
Public Const HKEY_DYN_DATA As Long = &H80000006

Public Const ERROR_SUCCESS As Long = 0
Public Const ERROR_BADDB As Long = 1009
Public Const ERROR_BADKEY As Long = 1010
Public Const ERROR_CANTOPEN As Long = 1011
Public Const ERROR_CANTREAD As Long = 1012
Public Const ERROR_CANTWRITE As Long = 1013
Public Const ERROR_OUTOFMEMORY As Long = 14
Public Const ERROR_INVALID_PARAMETER As Long = 87
Public Const ERROR_ACCESS_DENIED As Long = 5
Public Const ERROR_MORE_DATA As Long = 234
Public Const ERROR_NO_MORE_ITEMS As Long = 259

Public Const KEY_ALL_ACCESS As Long = &H3F
Public Const REG_OPTION_NON_VOLATILE As Long = 0

Public Declare Function RegQueryValueEx Lib "advapi32.dll" _
        Alias "RegQueryValueExA" _
        (ByVal hKey As Long, _
        ByVal sValueName As String, _
        ByVal dwReserved As Long, _
        ByRef lValueType As Long, _
        ByVal sValue As String, _
        ByRef lResultLen As Long) As Long

Public Declare Function RegCloseKey Lib "advapi32.dll" _
        (ByVal hKey As Long) As Long

Public Declare Function RegCreateKeyEx Lib "advapi32" _
        Alias "RegCreateKeyExA" _
        (ByVal hKey As Long, _
        ByVal lpSubKey As String, _
        ByVal Reserved As Long, _
        ByVal lpClass As String, _
        ByVal dwOptions As Long, _
        ByVal samDesired As Long, _
        ByVal lpSecurityAttributes As Long, _
        phkResult As Long, _
        lpdwDisposition As Long) As Long

Private Declare Function RegDeleteKey Lib "advapi32.dll" _
        Alias "RegDeleteKeyA" _
        (ByVal hKey As Long, _
        ByVal lpSubKey As String) As Long

Public Declare Function RegOpenKeyEx Lib "advapi32" _
        Alias "RegOpenKeyExA" _
        (ByVal hKey As Long, _
        ByVal lpSubKey As String, _
        ByVal ulOptions As Long, _
        ByVal samDesired As Long, _
        phkResult As Long) As Long

Public Declare Function RegSetValueExString Lib "advapi32" _
        Alias "RegSetValueExA" _
        (ByVal hKey As Long, _
        ByVal lpValueName As String, _
        ByVal Reserved As Long, _
        ByVal dwType As Long, _
        ByVal lpValue As String, _
        ByVal cbData As Long) As Long

Public Declare Function RegSetValueExLong Lib "advapi32" _
        Alias "RegSetValueExA" _
        (ByVal hKey As Long, _
        ByVal lpValueName As String, _
        ByVal Reserved As Long, _
        ByVal dwType As Long, _
        lpValue As Long, _
        ByVal cbData As Long) As Long


Public Function SetValueEx(ByVal hKey As Long, _
        sValueName As String, _
        lType As Long, _
        vValue As Variant) As Long

    Dim nValue As Long
    Dim sValue As String

    Select Case lType
    Case REG_SZ
        sValue = vValue & Chr$(0)
        SetValueEx = RegSetValueExString(hKey, _
                sValueName, _
                0&, _
                lType, _
                sValue, _
                Len(sValue))

    Case REG_DWORD
        nValue = vValue
        SetValueEx = RegSetValueExLong(hKey, _
                sValueName, _
                0&, _
                lType, _
                nValue, _
                4)
    End Select
End Function


Public Sub CreateNewKey(sNewKeyName As String, _
        lPredefinedKey As Long)

'handle to the new key
    Dim KeyHdlAddr As Long
    Dim result As Long

    Call RegCreateKeyEx(lPredefinedKey, _
            sNewKeyName, 0&, _
            vbNullString, _
            REG_OPTION_NON_VOLATILE, _
            KEY_ALL_ACCESS, 0&, KeyHdlAddr, result)

    Call RegCloseKey(KeyHdlAddr)

End Sub


Public Sub SetKeyValue(hKey, sKeyName As String, _
        sValueName As String, _
        vValueSetting As Variant, _
        lValueType As Long)

'handle of opened key
    Dim KeyHdlAddr As Long

    'open the specified key
    Call RegOpenKeyEx(hKey, _
            sKeyName, 0, _
            KEY_ALL_ACCESS, KeyHdlAddr)

    Call SetValueEx(KeyHdlAddr, _
            sValueName, _
            lValueType, _
            vValueSetting)

    Call RegCloseKey(KeyHdlAddr)
End Sub

Function GetRegistryValue(KEY As Long, SubKey As String, ValueName As String) As String
'KEY (e.g., HKEY_CLASSES_ROOT),
'SubKey (e.g., "Excel.Sheet.5"),
'ValueName (e.g., "" [for default] or "whatever")
    Dim Buffer As String * MAX_STRING, ReturnCode As Long
    Dim KeyHdlAddr As Long, ValueType As Long, ValueLen As Long
    Dim TempBuffer As String, Counter As Integer
    ValueLen = MAX_STRING
    ReturnCode = RegOpenKeyEx(KEY, SubKey, 0, KEY_ALL_ACCESS, KeyHdlAddr)
    If ReturnCode = 0 Then
        ReturnCode = RegQueryValueEx(KeyHdlAddr, ValueName, _
                0&, ValueType, Buffer, ValueLen)
        RegCloseKey KeyHdlAddr
        'If successful ValueType contains data type
        'of value and ValueLen its length
        If ReturnCode = 0 Then
            Select Case ValueType
            Case REG_BINARY
                For Counter = 1 To ValueLen
                    TempBuffer = TempBuffer & _
                            Stretch(Hex(Asc(Mid(Buffer, Counter, 1)))) & " "
                Next
                GetRegistryValue = TempBuffer
            Case REG_DWORD
                TempBuffer = "0x"
                For Counter = 4 To 1 Step -1
                    TempBuffer = TempBuffer & _
                            Stretch(Hex(Asc(Mid(Buffer, Counter, 1))))
                Next
                GetRegistryValue = TempBuffer
            Case Else
                GetRegistryValue = Buffer
            End Select
            Exit Function
        End If
    End If
    GetRegistryValue = "Error"
End Function
Function Stretch(ByteStr As String) As String
    If Len(ByteStr) = 1 Then ByteStr = "0" & ByteStr
    Stretch = ByteStr
End Function


Sub TestAboveFunctions()
'To test, let's go to create an extension (.aaa)
'and assosiation it to MyNotepad.Document (Copy and
'rename Notepad.exe to c:\)
    FileCopy "c:\windows\notepad.exe", "c:\MyNotepad.exe"
    FileCopy "C:\Windows\LICENSE.TXT", "C:\Windows\desktop\LICENSE.aaa"   'to test with two clicks on desktop

    'File Associations begin with a listing
    'of the default extension under HKEY_CLASSES_ROOT.
    'So the first step is to create that
    'root extension item
    CreateNewKey ".aaa", HKEY_CLASSES_ROOT

    'To the extension just added, add a
    'subitem where the registry will look for
    'commands relating to the .aaa extension
    '("MyNotepad.Document"). Its type is String (REG_SZ)
    SetKeyValue HKEY_CLASSES_ROOT, ".aaa", "", "MyNotepad.Document", REG_SZ

    'Create the 'MyNotepad.Document' item under
    'HKEY_CLASSES_ROOT. This is where you'll put
    'the command line to execute or other shell
    'statements necessary.
    CreateNewKey "MyNotepad.Document\shell\open\command", HKEY_CLASSES_ROOT

    'Set its default item to "MyNotepad Document".
    'This is what is displayed in Explorer against
    'for files with a aaa extension. Its type is
    'String (REG_SZ)
    SetKeyValue HKEY_CLASSES_ROOT, "MyNotepad.Document", "", "MyNotepad Document", REG_SZ

    'Finally, add the path to MyNotepad.exe
    'Remember to add %1 as the final command
    'parameter to assure the app opens the passed
    'command line item.
    '(results in '"c:\MyNotepad.exe %1")
    'Again, its type is string.

    SetKeyValue HKEY_CLASSES_ROOT, "MyNotepad.Document\shell\open\command", "", "c:\MyNotepad.exe %1", REG_SZ
    'All done

    'Now test created above
    MsgBox GetRegistryValue(HKEY_CLASSES_ROOT, "MyNotepad.Document\shell\open\command", ""), , "CPAP|fffd|"
End Sub

Sub TestOthersGet()
'Default Mail program
    MsgBox GetRegistryValue(HKEY_LOCAL_MACHINE, "Software\Clients\Mail", "")
    'Outlook Journal
    MsgBox GetRegistryValue(HKEY_CURRENT_USER, "Software\Microsoft\Shared Tools\Outlook\Journaling\Microsoft Excel", "Enabled")
    'If MsCall.ocx is installed
    i = GetRegistryValue(HKEY_CLASSES_ROOT, "MSCAL.Calendar", "")
    MsgBox Left(i, 23) = "Controle calend|fffd|rio 8.0" Or Left(i, 20) = "Calendar Control 9.0" Or Left(i, 20) = "Calendar Control 8.0"
    'Display Resolution
    MsgBox Application.WorksheetFunction.Clean(GetRegistryValue(HKEY_LOCAL_MACHINE, "Config\0001\Display\Settings", "Resolution"))
    'Default folders
    MsgBox GetRegistryValue(HKEY_CURRENT_USER, "Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders", "Desktop")
    MsgBox GetRegistryValue(HKEY_CURRENT_USER, "Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders", "Programs")
End Sub

Public Sub DeleteKey(sKeyName As String, _
        lPredefinedKey As Long)

    Call RegDeleteKey(lPredefinedKey, _
            sKeyName)

End Sub

Sub TestDeleteKey()
'Delete Keys and files created on above TestAboveFunctions
    DeleteKey ".aaa", HKEY_CLASSES_ROOT
    DeleteKey "MyNotepad.Document\shell\open\command", HKEY_CLASSES_ROOT
    Kill "c:\MyNotepad.exe"
    Kill "C:\Windows\desktop\LICENSE.aaa"
End Sub


'This code was adapted from an existing code.
'Thanks to an newsgroup example provided by Paul Clement
'get from Randy Birch's VBnet code examples at http://www.mvps.org/vbnet



Attribute VB_Name = "M|fffd|d1InicCx"
Public Dados As Range
Public BotAcionado As Variant

Public vEnableEvents As Boolean
Public FileOpened As String
Public DirP As String


Public Sub DadosVBA()
    Set Dados = ThisWorkbook.Excel4MacroSheets(1).Range("Dados")
    DirP = ThisWorkbook.Path
    'Ajuda
    i = InStr(1, Dados(2, 2).Value, "!")
    'Com o proj. proteg. essa instru|fffd||fffd|o falha. A solu|fffd||fffd|o foi colocar ..\cpap.hlp nas propriedades e fazer o diret|fffd|rio do cpap ativo.
    'Application.VBE.VBProjects("VBAProjectCxIdent").HelpFile = Left(Dados(2,2).value, I - 1)
    If Mid(ThisWorkbook.Path, 2, 1) = ":" Then ChDrive ThisWorkbook.Path
    If Mid(ThisWorkbook.Path, 2, 1) = ":" Then ChDir ThisWorkbook.Path Else Application.Run "CPAP_EX8.MAC!DirectoryVBA", ThisWorkbook.Path, False
    UserForm1.HelpContextID = Right(Dados(2, 2).Value, Len(Dados(2, 2).Value) - i)

    vEnableEvents = False

    UserForm1.Vers|fffd|o_Lb.Caption = Dados(7, 1).Value
    UserForm1.Copyright_Lb = Dados(8, 1).Value
    UserForm1.NomeEmpresa_Lb.Caption = Dados(15, 1).Value
    UserForm1.DataInicial_Lb.Caption = Dados(16, 1).Value
    UserForm1.|fffd|ltimaAtualiza|fffd||fffd|o_Lb.Caption = Dados(17, 1).Value

    vEnableEvents = True
    UserForm1.Fechar_Bt.SetFocus
    Application.StatusBar = False
    UserForm1.Show
    Dados(1, 2) = BotAcionado
    Unload UserForm1
    ThisWorkbook.Saved = True
End Sub

Sub Fundo()
    vEnableEvents = True
    DirP = ThisWorkbook.Path
    If Mid(DirP, 2, 1) = ":" Then ChDrive DirP
    If Mid(DirP, 2, 1) = ":" Then ChDir DirP Else Application.Run "CPAP_EX8.MAC!DirectoryVBA", DirP, False
    Application.ScreenUpdating = True
ReIniciar:
    BotAcionado = 0
    UserForm3.Show
    If BotAcionado = 1 Then
        FileToOpen = Application.GetOpenFilename("Figuras (*.bmp),*.bmp,Todas (*.bmp;*.gif;*.jpg;*.jpeg;*.emf;*.wmf;*.png),*.bmp;*.gif;*.jpg;*.jpeg;*.emf;*.wmf;*.png", 1, "Inserir Figura de Fundo")
        If FileToOpen <> False Then
            Err.Number = 0
            AlterandoFundo FileToOpen
            If Err.Number = 0 Then
                FileOpened = FileToOpen
                UserForm3.Futuras_ChB.Enabled = True
            Else
                MsgBox Err.Description, , "CPAP|fffd|"
            End If
        End If
        GoTo ReIniciar
    End If
End Sub

Sub AlterandoFundo(ByVal vFile As String)
    On Error Resume Next
    Application.Workbooks("cpap_fun.pla").Activate
    With ActiveWorkbook.Sheets(1)
        .Unprotect
        .SetBackgroundPicture FileName:=vFile
        .Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
    End With
End Sub

Sub ExcelMaisInfo()
    Dim sMsg1
    On Error Resume Next
    sMsg1 = "- CPAP: " & UserForm1.Vers|fffd|o_Lb.Caption    'O par de n|fffd|meros finais, onde seria os segundos, indicam com 1 e 0 HD identificado ou n|fffd|o, o primeiro na instala|fffd||fffd|o e o segundo nesta execu|fffd||fffd|o.

    Dim DirP, DirPini, DirBD, CurDir As String
    DirP = GetShortPath(Application.Evaluate(Workbooks("cpap_pri.mac").Names("DirP").Value))
    DirPini = GetShortPath(Application.Evaluate(Workbooks("cpap_pri.mac").Names("DirPini").Value))
    DirBD = GetShortPath(Application.Evaluate(Workbooks("cpap_pri.mac").Names("DirBD").Value))
    CurDir = GetShortPath(Application.Evaluate(Workbooks("cpap_pri.mac").Names("CurDir").Value))
    sMsg1 = sMsg1 & vbCrLf & String(8, " ") & "DirPini > " & DirPini & " (" & Application.Run("cpap_ex8.mac!GetDriveInfo", DirPini, "DriveType") & "-" & Application.Run("cpap_ex8.mac!GetDriveInfo", DirPini, "FileSystem") & ")"
    sMsg1 = sMsg1 & vbCrLf & String(8, " ") & "DirP    " & IIf(DirP = DirPini, "= DirPini", "> " & DirP & " (" & Application.Run("cpap_ex8.mac!GetDriveInfo", DirP, "DriveType") & "-" & Application.Run("cpap_ex8.mac!GetDriveInfo", DirP, "FileSystem") & ")")
    sMsg1 = sMsg1 & vbCrLf & String(8, " ") & "DirBD  " & IIf(DirBD = DirPini, "= DirPini", IIf(DirBD = DirP, "= DirP", "> " & DirBD & " (" & Application.Run("cpap_ex8.mac!GetDriveInfo", DirBD, "DriveType") & "-" & Application.Run("cpap_ex8.mac!GetDriveInfo", DirBD, "FileSystem") & ")"))
    sMsg1 = sMsg1 & vbCrLf & String(8, " ") & "CurDir " & IIf(CurDir = DirPini, "= DirPini", IIf(CurDir = DirP, "= DirP", IIf(CurDir = DirBD, "= DirBD", "> " & CurDir & " (" & Application.Run("cpap_ex8.mac!GetDriveInfo", CurDir, "DriveType") & "-" & Application.Run("cpap_ex8.mac!GetDriveInfo", CurDir, "FileSystem") & ")")))

    sMsg1 = sMsg1 & vbCrLf & "- " & Application.OperatingSystem & " (" & gLocInfo(LOCALE_SLANGUAGE) & ")"
    i = Application.International(xlCountryCode)
    ExcelL|fffd|ngua = IIf(i = 1, "Ingl|fffd|s", IIf(i = 55, "Portugu|fffd|s", "L|fffd|ngua " & i))
    sMsg1 = sMsg1 & vbCrLf & "- " & Application.Name & " " & Application.Version & " (" & ExcelL|fffd|ngua & ") - " & Application.Path
    sMsg1 = sMsg1 & vbCrLf & "- Impressora Ativa: " & Application.ActivePrinter

    If Err.Number <> 0 Then
        MsgBox Err.Number & " - " & Err.Description
        sMsg1 = sMsg1 & vbCrLf & "- Erro! " & Err.Number & " - " & Err.Description
        Err.Clear
    End If

    Dim Perc                    'Due a bug in Word 2003 e tamb|fffd|m no Excel 2007, Count fails if 0
    Perc = Application.COMAddIns.Count
    If Perc = "" Then Perc = 0
    Err.Clear

    sMsg1 = sMsg1 & vbCrLf & "- COM Add-ins (" & Perc & "):"
    Dim c As COMAddIn
    i = 0
    If Perc > 0 Then
        For Each c In Application.COMAddIns
            i = i + 1
            sMsg1 = sMsg1 & vbCrLf & "        " & i & "." & IIf(c.Connect, 1, Int((9 - 2 + 1) * Rnd + 2)) & " " & Replace(c.Description, vbCrLf, "|") & "; " & c.progID
        Next
    End If

    If Err.Number <> 0 Then
        MsgBox Err.Number & " - " & Err.Description
        sMsg1 = sMsg1 & vbCrLf & "- Erro! " & Err.Number & " - " & Err.Description
        Err.Clear
    End If

    sMsg1 = sMsg1 & vbCrLf & "- Add-ins (" & Application.AddIns.Count & "):"
    Dim a As AddIn
    i = 0
    If Application.AddIns.Count > 0 Then
        For Each a In Application.AddIns
            i = i + 1
            sMsg1 = sMsg1 & vbCrLf & "        " & i & "." & IIf(a.Installed, 1, Int((9 - 2 + 1) * Rnd + 2)) & " " & a.Name    ' & "; " & a.FullName
        Next
    End If

    If Err.Number <> 0 Then
        MsgBox Err.Number & " - " & Err.Description
        sMsg1 = sMsg1 & vbCrLf & "- Erro! " & Err.Number & " - " & Err.Description
        Err.Clear
    End If

    sMsg1 = sMsg1 & vbCrLf & "- Pasta XLSTART: " & GetShortPath(Application.StartupPath)
    Dim f As String
    i = 0
    f = Dir(Application.StartupPath & "\*.*")
    If f <> "" Then
        Do While f <> ""
            i = i + 1
            sMsg1 = sMsg1 & vbCrLf & "        " & i & ".0 " & f
            f = Dir()
        Loop
    End If

    If Err.Number <> 0 Then
        MsgBox Err.Number & " - " & Err.Description
        sMsg1 = sMsg1 & vbCrLf & "- Erro! " & Err.Number & " - " & Err.Description
        Err.Clear
    End If

    sMsg1 = sMsg1 & vbCrLf & "- VBE Add-ins (" & Application.VBE.AddIns.Count & "):"
    If Err.Number <> 0 Then
        MsgBox Err.Number & " - " & Err.Description
        sMsg1 = sMsg1 & vbCrLf & "- Erro! " & Err.Number & " - " & Err.Description
        Err.Clear
    Else
        Dim cv    'As COMAddIn
        i = 0
        If Application.VBE.AddIns.Count > 0 Then
            For Each cv In Application.VBE.AddIns
                i = i + 1
                sMsg1 = sMsg1 & vbCrLf & "        " & i & "." & IIf(cv.Connect, 1, Int((9 - 2 + 1) * Rnd + 2)) & " " & Replace(cv.Description, vbCrLf, "|") & "; " & cv.progID
            Next
        End If
    End If

    If Err.Number <> 0 Then
        MsgBox Err.Number & " - " & Err.Description
        sMsg1 = sMsg1 & vbCrLf & "- Erro! " & Err.Number & " - " & Err.Description
        Err.Clear
    End If

    sMsg1 = sMsg1 & vbCrLf & "FIM"

    If MsgBox(sMsg1, vbOKCancel, "Mais Infoma|fffd||fffd|es Sobre o Excel - Copiar para Colar?") = vbOK Then
        On Error Resume Next
        Set MyData = New DataObject
        MyData.SetText sMsg1
        MyData.PutInClipboard
        Set MyData = Nothing
        If Err.Number <> 0 Then
            MsgBox Err.Number & " - " & Err.Description
            Err.Clear
        Else
            MsgBox "Agora voc|fffd| pode colar em qualquer documento. Todos os dados foram copiados.", , "Mais Infoma|fffd||fffd|es Sobre o Excel - Colar"
        End If
    End If
    If Err.Number <> 0 Then MsgBox Err.Number & " - " & Err.Description
End Sub

Function GetShortPath(sLongName As String) As String    'Returns the short path used by programs that require the earlier 8.3 file naming convention like Arj.exe.
    Dim fso, f
    Set fso = CreateObject("Scripting.FileSystemObject")
    On Error Resume Next
    Set f = fso.GetFile(sLongName)
    If Err.Number <> 0 Then Err.Clear: Set f = fso.GetFolder(sLongName)
    If Err.Number = 0 Then GetShortPath = f.ShortPath Else GetShortPath = sLongName
End Function

Attribute VB_Name = "M|fffd|d1SupOnLine"
Option Explicit
Dim PathCor As String
Dim PathArq As String
Dim PathTemp As String: Dim sCpapTmp As String
Dim CorrArq As Workbook
Dim TamArqImp As Long
Dim DataVerImp As Double
Dim DataVerInst As Double
Public BackDownload As Boolean: Public NumVer As Long
Dim sCorrArq As String, sCorrExe As String
Dim sNomRed As String
 
Sub SuporOnLine()
    Set Dados = ThisWorkbook.Excel4MacroSheets(1).Range("Dados"): NumVer = Workbooks("cpap_pri.mac").Excel4MacroSheets(1).Range("NumVer").Value
    DirP = ThisWorkbook.Path
    'Ajuda
    Dim i: i = InStr(1, Dados(2, 2).Value, "!")
    'Com o proj. proteg. essa instru|fffd||fffd|o falha. A solu|fffd||fffd|o foi colocar ..\cpap.hlp nas propriedades e fazer o diret|fffd|rio do cpap ativo.
    'Application.VBE.VBProjects("VBAProjectCxIdent").HelpFile = Left(Dados(2,2).value, I - 1)
    If Mid(ThisWorkbook.Path, 2, 1) = ":" Then ChDrive ThisWorkbook.Path
    If Mid(ThisWorkbook.Path, 2, 1) = ":" Then ChDir ThisWorkbook.Path Else Application.Run "CPAP_EX8.MAC!DirectoryVBA", ThisWorkbook.Path, False
    '   UserForm4SupOnL.HelpContextID = Right(Dados(3,2).Value, Len(Dados(2,2).Value) - i)

    vEnableEvents = False

    vEnableEvents = True
    UserForm4SupOnL.Fechar_Bt.SetFocus
    Application.StatusBar = False
    UserForm4SupOnL.Show
    If BotAcionado = 3 Then CorrCPAP
    Dados(1, 2) = BotAcionado
    Unload UserForm4SupOnL
    ThisWorkbook.Saved = True
End Sub

Sub CorrCPAP()
    Dim Direitos, NomeUsua, Mplano, TipoUsu, vFilename, bEnableAppEv, i: Direitos = Application.Run("cpap_pri.mac!Direitos", 1)
    If Not IsNumeric(Direitos) Then BotAcionado = 1: Exit Sub    'Problema inesperado sai sem alert. Por exemplo, no 2007 ao exibir o rel|fffd|gio para conferir fiz um halt pois a Ribbon atualizava em seguida
    NomeUsua = Workbooks("cpap_pri.mac").Excel4MacroSheets(1).Range("NomeUsua").Value
    If Direitos <> 3 Then
        If Direitos = 2 Then MsgBox NomeUsua & ", seus direitos n|fffd|o s|fffd|o suficientes para operar como supervisor na configura|fffd||fffd|o do CPAP.", vbCritical + vbOKOnly, "ACESSO NEGADO!"
        BotAcionado = 1
        Exit Sub
    End If

    If MsgBox("Aten|fffd||fffd|o! Antes de continuar |fffd| aconselh|fffd|vel SALVAR e fazer o BACKUP de seus dados no HD e fechar o CPAP aberto em outras esta|fffd||fffd|es da rede. Continua?", vbOKCancel + vbQuestion, "Corrigir e/ou Atualizar os Arquivos do CPAP?") = vbCancel Then
        BotAcionado = 1
        Exit Sub
    End If
    PathTemp = fReturnTempDir()
    If Right(PathTemp, 1) = "\" Then PathTemp = Left(PathTemp, Len(PathTemp) - 1)
    sCpapTmp = PathTemp & "\CpapCorr"

Retry:
    'Verificando Download anterior
    If Dir(DirP & "\BackDown.tmp") <> "" Then
        If Abs(Now() - FileDateTime(DirP & "\BackDown.tmp")) > TimeValue("00:00:59") Then
            Kill DirP & "\BackDown.tmp"
        Else
            If MsgBox("H|fffd| uma baixa (download) de arquivo em andamento ou incompleto. Se a conex|fffd|o com a Internet ainda estiver ativa, |fffd| melhor aguardar. Ok?", vbOKCancel + vbQuestion, "CPAP|fffd|") = vbOK Then
                BotAcionado = 1
                Exit Sub
            Else
                Kill DirP & "\BackDown.tmp"
            End If
        End If
    End If

    If Dir(sCpapTmp & "\Config.001") <> "" Then
        Select Case MsgBox("A baixa de arquivos (download) anterior foi completada. Usar esses arquivos para completar a instala|fffd||fffd|o?", vbYesNoCancel + vbQuestion, "CPAP|fffd|")
        Case vbYes
            MoveCpap_arq
            Exit Sub
        Case vbNo
            If MsgBox("Tem certeza que deseja excluir os arquivo da baixa anterior, para fazer uma nova baixa?", vbOKCancel + vbQuestion, "CPAP|fffd|") Then
                On Error Resume Next
                Kill sCpapTmp & "\cpap-arq\areceber\*.*"
                Kill sCpapTmp & "\cpap-arq\avulso\*.*"
                Kill sCpapTmp & "\cpap-arq\banco\*.*"
                Kill sCpapTmp & "\cpap-arq\exp_plan\*.*"
                Kill sCpapTmp & "\cpap-arq\tabelas\*.*"
                Kill sCpapTmp & "\cpap-arq\*.*"
                Kill sCpapTmp & "\*.*"
                RmDir sCpapTmp & "\cpap-arq\areceber"
                RmDir sCpapTmp & "\cpap-arq\avulso"
                RmDir sCpapTmp & "\cpap-arq\banco"
                RmDir sCpapTmp & "\cpap-arq\exp_plan"
                RmDir sCpapTmp & "\cpap-arq\tabelas"
                RmDir sCpapTmp & "\cpap-arq"
                RmDir sCpapTmp
                On Error GoTo 0
            Else
                BotAcionado = 1
                Exit Sub
            End If
        Case vbCancel
            BotAcionado = 1
            Exit Sub
        End Select
    End If

    'Indicando o Local para o DownLoad
    UserForm4SupOnLImpDe.Show
    Application.ScreenUpdating = True
    Mplano = Workbooks("cpap_pri.mac").Excel4MacroSheets(1).Range("Mplano").Value
    TipoUsu = IIf(Mplano, 1, 3)
    Select Case BotAcionado
    Case 1
        '        PathCor = "http://cpap.com.br/banco/Cpap" & NumVer & ".cor"
        '        PathArq = "http://cpap.com.br/banco/Cpap" & NumVer & ".co" & TipoUsu

        Dim sHttpSite As String
        Dim sExeNum As String
        Dim sInfDsk As String

        If Workbooks("cpap_pri.mac").Excel4MacroSheets(1).Range("Cont7").Value Then
            sHttpSite = "http://cpap.com.br"
        Else
            sHttpSite = "http://localhost"
        End If
        sNomRed = Workbooks("cpap_pri.mac").Excel4MacroSheets(1).Range("NomRed").Value
        sNomRed = Application.WorksheetFunction.Substitute(sNomRed, "&", "i")
        sExeNum = Workbooks("cpap_pri.mac").Excel4MacroSheets(1).Range("ExeNum").Value
        sInfDsk = Workbooks("cpap_pri.mac").Excel4MacroSheets(1).Range("InfDsk").Value
        sInfDsk = Application.WorksheetFunction.Substitute(sInfDsk, "0", "O")
        sInfDsk = Application.WorksheetFunction.Substitute(sInfDsk, "1", "0")
        sInfDsk = Application.WorksheetFunction.Substitute(sInfDsk, "2", "1")
        sInfDsk = Application.WorksheetFunction.Substitute(sInfDsk, "3", "2")
        sInfDsk = Application.WorksheetFunction.Substitute(sInfDsk, "4", "3")
        sInfDsk = Application.WorksheetFunction.Substitute(sInfDsk, "5", "4")
        sInfDsk = Application.WorksheetFunction.Substitute(sInfDsk, "6", "5")
        sInfDsk = Application.WorksheetFunction.Substitute(sInfDsk, "7", "6")
        sInfDsk = Application.WorksheetFunction.Substitute(sInfDsk, "8", "7")
        sInfDsk = Application.WorksheetFunction.Substitute(sInfDsk, "9", "8")
        sExeNum = Len(sExeNum) & sExeNum & sInfDsk
        PathCor = sHttpSite & "/banco/CDownloads.asp?Title=" & sNomRed & "&File=Cpap" & NumVer & ".cor&ExeNum=" & sExeNum
        PathArq = sHttpSite & "/banco/CDownloads.asp?Title=" & sNomRed & "&File=Cpap" & NumVer & ".co" & TipoUsu & "&ExeNum=" & sExeNum
    Case 2
        vFilename = Application.GetOpenFilename("Arquivo Cpap" & NumVer & ".co1 (*.co1), *.co1,Arquivo Cpap" & NumVer & ".co2 (*.co2), *.co2,Arquivo Cpap" & NumVer & ".co3 (*.co3), *.co3,Arquivo Cpap" & NumVer & ".cor (*.cor), *.cor", TipoUsu)
        If vFilename = False Then
            BotAcionado = 1
            Exit Sub
        Else
            PathCor = vFilename   ' CurDir & "\Cpap" & NumVer & ".cor"
            PathArq = IIf(UCase(Right(vFilename, 4)) = ".COR", CurDir & "\Cpap" & NumVer & ".co" & TipoUsu, PathCor)
        End If
    Case 3
        BotAcionado = 1
        Exit Sub
    End Select

    'Verificando o Local e |fffd|ltima vers|fffd|o
    On Error Resume Next
    Application.ScreenUpdating = False
    Application.Run "cpap_ex8.mac!EnableEventsVBA", False    'bEnableAppEv = Application.EnableEvents: Application.EnableEvents = False' No 2013
    Set CorrArq = Workbooks.Open(PathCor, , True, , "MP542")
    Application.Run "cpap_ex8.mac!EnableEventsVBA", True    'Application.EnableEvents = bEnableAppEv 'No 2013
    If Err.Number <> 0 Then
        Application.ScreenUpdating = True
        MsgBox "O Local indicado n|fffd|o cont|fffd|m arquivos para atualiza|fffd||fffd|o e corre|fffd||fffd|o do CPAP ou est|fffd| inacess|fffd|vel." & IIf(BotAcionado = 1, " Verifique sua conex|fffd|o com a Internet e tente outra vez.", " Tente outro."), vbOKOnly + vbCritical, "CPAP|fffd|"
        On Error GoTo 0
        GoTo Retry
    End If
    On Error GoTo 0
    CorrArq.Windows(1).Visible = False
    Application.ScreenUpdating = True
    If CorrArq.Sheets(2).Range("DataEd").Value <> CorrArq.Sheets(2).Range("DataEd").Offset(0, 100).Value Then
        MsgBox "O arquivo de identifica|fffd||fffd|o do Local indicado n|fffd|o |fffd| v|fffd|lido, est|fffd| ou veio corrompido. Tente novamente.", , "CPAP|fffd|"
        GoTo Retry
    End If

    TamArqImp = CorrArq.Sheets(2).Range("TamArq" & TipoUsu).Value
    DataVerImp = CorrArq.Sheets(2).Range("DataEd").Value
    DataVerInst = Dados(7, 2).Value

    If DataVerImp > DataVerInst Then
        ListarAlterFiltro
        If BotAcionado = 1 Then
            CorrArq.Close False: Set CorrArq = Nothing
            Exit Sub
        End If
    End If

    If DataVerImp = DataVerInst Then
        If MsgBox("Vers|fffd|o " & NumVer & ".0 (" & Format(DataVerImp, "yy.mm.dd.hh") & ") < Importar" & Chr(10) & _
                "Vers|fffd|o " & NumVer & ".0 (" & Format(DataVerInst, "yy.mm.dd.hh") & ") < Instalada" & Chr(10) & Chr(10) & _
                "A vers|fffd|o instalada j|fffd| est|fffd| atualizada. Continua assim mesmo?", vbOKCancel, "Comparando Vers|fffd|es") = vbCancel Then
            BotAcionado = 1
            CorrArq.Close False: Set CorrArq = Nothing
            Exit Sub
        End If
    End If
    If PathArq <> PathCor Or BackDownload Then CorrArq.Close False: Set CorrArq = Nothing

    If DataVerImp < DataVerInst Then
        If MsgBox("A vers|fffd|o instalada |fffd| mais recente do que a importar! Continua assim mesmo?", vbOKCancel, "Comparando Vers|fffd|es") = vbCancel Then
            BotAcionado = 1
            Exit Sub
        End If
    End If

    'Download
    BotAcionado = 3: sNomRed = Workbooks("cpap_pri.mac").Excel4MacroSheets(1).Range("NomRed").Value
    If BackDownload Then
        BackgroundDownloadStart
        If BotAcionado = 3 Then GoTo ConfExtract Else GoTo Retry
    End If

    Dim bByteExtrOLE As Boolean: bByteExtrOLE = True    'Primeiro tenta o m|fffd|todo de extrair diretamente byte a byte no disco, qualquer falha, volta e tenta executar o OLEObject normalmente
RetryExtrac:
    On Error Resume Next
    Application.ScreenUpdating = False: Dim ActWb As Workbook: Set ActWb = Application.ActiveWorkbook
    bEnableAppEv = Application.EnableEvents: Application.EnableEvents = False
    If PathArq <> PathCor Or CorrArq Is Nothing Then Set CorrArq = Workbooks.Open(PathArq, , True, , "MP542")
    Application.EnableEvents = bEnableAppEv
    If Err.Number <> 0 Then
        Application.ScreenUpdating = True
        MsgBox "Falha na c|fffd|pia do arquivo para atualiza|fffd||fffd|o e corre|fffd||fffd|o!", vbOKOnly + vbCritical, "CPAP|fffd|"
        On Error GoTo 0
        GoTo Retry
    End If
    On Error GoTo 0: If Val(Application.Version) >= 15 Then ActWb.Activate         'No 2013 SDI, ao ocultar o caption do app n|fffd|o atualiza imediat, ent|fffd|o tenta ativar um wb antes de ocultar em vez de usar AppActivate depois.
    CorrArq.Windows(1).Visible = False
    Application.ScreenUpdating = True
    If Val(Application.Version) < 15 Then On Error Resume Next: AppActivate Application.Caption: On Error GoTo 0

    'Extraindo Pacote
    If CorrArq.Sheets(2).Range("B1").Value = 0 Then bByteExtrOLE = False  'Possibilita, embora improv|fffd|vel a necessidade de usar pacote antigo sem "TamArqExe" definido e necess|fffd|rio para extrai byte a byte. S|fffd| isso diferencia os antigos dos novos.
    If bByteExtrOLE Then
        If ByteExtrOLEExeInXls = False Then bByteExtrOLE = False: GoTo RetryExtrac
    Else
        ExecOLEObjects
    End If
    Application.Cursor = xlWait: MyWait 5  'No 2013, altera cursor para hourglass para desestimular interfer. do usu no wait e no move de arq. Usar Interactive n|fffd|o |fffd| adequado porque Excel perde foco e fica muito lento no 2013.

    'Conferindo extra|fffd||fffd|o
ConfExtract:
    Do While Dir(sCpapTmp & "\Config.001") = ""
        MyWait 1
        i = i + 1
        If i > 20 + 30 Then
            If bByteExtrOLE Then MsgBox "ConfExtract = 0 ainda. Acione OK para continuar tentanto.", vbCritical + vbOKOnly, "CPAP|fffd| - Falha!": bByteExtrOLE = False: GoTo RetryExtrac
            On Error Resume Next: AppActivate Application.Caption
            MsgBox "Houve falha na copia dos arquivos de instala|fffd||fffd|o. Tente novamente.", vbCritical + vbOKOnly, "CPAP|fffd| - Falha!"
            BotAcionado = 1: Application.Cursor = xlDefault
            Exit Sub
        End If
    Loop

    If BackDownload = False And bByteExtrOLE = False Then CorrArq.Close False: Set CorrArq = Nothing
    If sCorrArq <> "" And Dir(sCorrArq) <> "" Then Kill sCorrArq
    If sCorrExe <> "" And Dir(sCorrExe) <> "" Then Kill sCorrExe

    'Movendo arquivos de instala|fffd||fffd|o da pasta tempor|fffd|ria
    MoveCpap_arq
End Sub

Sub ListarAlterFiltro()
    Dim Database As Range
    Dim Criteria As Range
    Dim Extract As Range, i, j, k, DataCriterio, Mplano, Mcont, Macomp

    '   DirP = ThisWorkbook.Path
    '   PathCor = DirP & "\Cpap" & NumVer & ".cor"
    '   Set CorrArq = Workbooks.Open(PathCor, , True, , "MP542")
    CorrArq.Activate
    CorrArq.Sheets("Alt").Select
    CorrArq.Sheets("Alt").Range("A1").Select
    Set Database = CorrArq.Sheets("Alt").Range("A1").CurrentRegion

    i = Database.Rows.Count + 5
    j = Database.Columns.Count
    k = 6
    DataVerInst = Dados(7, 2).Value
    DataCriterio = ">" & Format(DataVerInst, "dd/mm/yyyy")
    Mplano = Workbooks("cpap_pri.mac").Excel4MacroSheets(1).Range("Mplano").Value
    Mcont = Workbooks("cpap_pri.mac").Excel4MacroSheets(1).Range("Mcont").Value
    Macomp = Workbooks("cpap_pri.mac").Excel4MacroSheets(1).Range("Macomp").Value
    Set Criteria = CorrArq.Sheets("Alt").Range(CorrArq.Sheets("Alt").Cells(i, 1), CorrArq.Sheets("Alt").Cells(i + k, j))
    Criteria.Rows(1).Value = Database.Rows(1).Value
    Criteria.Rows(2).Value = Array(DataCriterio, 0, "")
    k = 3
    Criteria.Rows(k).Value = Array(DataCriterio, 1, "")
    If Mplano = False Then
        k = k + 1
        Criteria.Rows(k).Value = Array(DataCriterio, 2, "")
    End If
    If Mcont = False Then
        k = k + 1
        Criteria.Rows(k).Value = Array(DataCriterio, 3, "")
    End If
    If Macomp = False Then
        k = k + 1
        Criteria.Rows(k).Value = Array(DataCriterio, 4, "")
        k = k + 1
        Criteria.Rows(k).Value = Array(DataCriterio, 5, "")
    End If
    Set Criteria = CorrArq.Sheets("Alt").Range(CorrArq.Sheets("Alt").Cells(i, 1), CorrArq.Sheets("Alt").Cells(i + k - 1, j))

    Set Extract = CorrArq.Sheets("Alt").Range(CorrArq.Sheets("Alt").Cells(i + 15, 1), CorrArq.Sheets("Alt").Cells(i + 15, j))
    Extract.Rows(1).Value = Database.Rows(1).Value

    Database.AdvancedFilter xlFilterCopy, Criteria, Extract, True

    Set Extract = Extract.CurrentRegion
    If Extract.Rows.Count > 2 Then Extract.Sort Extract.Range("B1"), xlAscending, Extract.Range("A1"), , xlAscending, , , xlYes

    If Extract.Rows.Count = 1 Then
        Extract.Offset(1, 0).Value = Array(Format(DataVerInst + 1, "dd/mm/yyyy"), 0, "Ajustes e otimiza|fffd||fffd|o de c|fffd|digo de programa|fffd||fffd|o.")
        Set Extract = Extract.CurrentRegion
    End If
    Set Extract = Extract.Offset(1, 0).Resize(Extract.Rows.Count - 1)
    With UserForm4SupOnLAlt
        .VerInst_Lb.Caption = "Vers|fffd|o " & NumVer & ".0 (" & Format(DataVerInst, "yy.mm.dd.hh") & ") < Instalada"
        .VerImp_Lb.Caption = "Vers|fffd|o " & NumVer & ".0 (" & Format(DataVerImp, "yy.mm.dd.hh") & ") < Importar"
        .TamArq_Lb.Caption = Int(TamArqImp / 10000) / 100 & " Mb"
        .NumAlt_Lb.Caption = Extract.Rows.Count
        .Alt_LsB.ColumnCount = 3
        .Alt_LsB.ColumnWidths = "55;15"
        .Alt_LsB.RowSource = Extract.Address
        .Show
    End With
End Sub


Public Sub MoveCpap_arq()
'Este procedimento move a arvore de arquivos de instala|fffd||fffd|o do CPAP
'da pasta tempor|fffd|ria criada pelo SFX de CorrAuto para a pasta do cpap
'conforme o SFX normal faria. Depois exclui a pasta tempor|fffd|ria.
'N|fffd|o usei Scripting Object porque parece n|fffd|o ter no servidor do Windows NT
    If Not Workbooks("cpap_pri.mac").Excel4MacroSheets(1).Range("Cont7").Value Then
        If MsgBox("Mover arq de temp?", vbOKCancel) = vbCancel Then
            BotAcionado = 1
            Exit Sub
        End If
    End If

    'Movendo de sCpapTmp para DirP
    MyMoveFile "*.*", sCpapTmp, DirP & "\"

    If Dir(DirP & "\cpap-arq", vbDirectory) = "" Then MkDir (DirP & "\cpap-arq")
    MyMoveFile "*.*", sCpapTmp & "\cpap-arq", DirP & "\cpap-arq\"

    If Dir(DirP & "\cpap-arq\areceber", vbDirectory) = "" Then MkDir (DirP & "\cpap-arq\areceber")
    MyMoveFile "*.*", sCpapTmp & "\cpap-arq\areceber", DirP & "\cpap-arq\areceber\"

    If Dir(DirP & "\cpap-arq\avulso", vbDirectory) = "" Then MkDir (DirP & "\cpap-arq\avulso")
    MyMoveFile "*.*", sCpapTmp & "\cpap-arq\avulso", DirP & "\cpap-arq\avulso\"

    If Dir(DirP & "\cpap-arq\banco", vbDirectory) = "" Then MkDir (DirP & "\cpap-arq\banco")
    MyMoveFile "*.*", sCpapTmp & "\cpap-arq\banco", DirP & "\cpap-arq\banco\"

    If Dir(DirP & "\cpap-arq\exp_plan", vbDirectory) = "" Then MkDir (DirP & "\cpap-arq\exp_plan")
    MyMoveFile "*.*", sCpapTmp & "\cpap-arq\exp_plan", DirP & "\cpap-arq\exp_plan\"

    If Dir(DirP & "\cpap-arq\tabelas", vbDirectory) = "" Then MkDir (DirP & "\cpap-arq\tabelas")
    MyMoveFile "*.*", sCpapTmp & "\cpap-arq\tabelas", DirP & "\cpap-arq\tabelas\"

    On Error Resume Next
    RmDir sCpapTmp & "\cpap-arq\areceber"
    RmDir sCpapTmp & "\cpap-arq\avulso"
    RmDir sCpapTmp & "\cpap-arq\banco"
    RmDir sCpapTmp & "\cpap-arq\exp_plan"
    RmDir sCpapTmp & "\cpap-arq\tabelas"
    RmDir sCpapTmp & "\cpap-arq"
    RmDir sCpapTmp
End Sub

Sub MyMoveFile(vFiles As String, vOrigPath As String, vDestPath As String)
    Dim vFilename: vFilename = Dir(vOrigPath & "\" & vFiles)
    While vFilename <> ""
        If Dir(vDestPath & "\" & vFilename) <> "" Then Kill vDestPath & "\" & vFilename
        Name vOrigPath & "\" & vFilename As vDestPath & "\" & vFilename
        vFilename = Dir(vOrigPath & "\" & vFiles)
    Wend
End Sub

Sub aTestarBackDown()
    PathArq = "I:\cpap\internet\Cpap" & NumVer & ".co3"
    BackgroundDownloadStart
End Sub

Sub BackgroundDownloadStart()
'Faz o Download usando outra execu|fffd||fffd|o do Excel invis|fffd|vel, deixando
'esta livre para exibir uma barra de progresso, pois o download atrav|fffd|s
'da internet |fffd| lento e deixa o Excel travado. A barra de progresso s|fffd|
'marca tempo pra ficar mais bacana, n|fffd|o atua e nem verifica nada.
    Dim ExcelObj As Excel.Application
    DirP = ThisWorkbook.Path
    Dim PauseTime, Start
    Dim Perc As Single
    Dim Perc1 As Single

    Open DirP & "\BackDown.tmp" For Output As #1
    Write #1, PathArq
    Write #1, sNomRed
    Close #1

    Do
        Perc = Perc + 1
        If Perc > 10 Then
            If MsgBox("N|fffd|o foi poss|fffd|vel criar o objeto Excel.Application para o download em backgroud! Tentar mais uma vez?", vbOKCancel + vbCritical, "CPAP|fffd| - Falha!") = vbCancel Then
                BotAcionado = 1
                Exit Sub
            End If
        End If
        '      Set ExcelObj = CreateObject("Excel.Application")
        Set ExcelObj = New Excel.Application
        Application.StatusBar = ExcelObj.Version
        MyWait 1
    Loop Until ExcelObj.Caption <> Application.Caption

    'ExcelObj.Visible = True
    If ExcelObj.Visible Then    'Isto porque no Exc 97 n|fffd|o fica oculto
        ExcelObj.WindowState = xlMinimized
        DoEvents
    End If

    ExcelObj.Workbooks.Open ThisWorkbook.FullName, 0, True, , "|fffd|~9|fffd|SOB.MAC|fffd|G9z"
    ExcelObj.OnTime Now, "BackgroundDownload"
    Application.Interactive = False
    If Not NTVersion > 5 Then MyWait 5  'No XP o fundo tem que aparecer antes da extra|fffd||fffd|o do EXE do OLE em backgroud para ficar em foco e usu|fffd|ri acionar run se falhar o SendKeys

    'Progress bar
    PauseTime = 30 * 60
    Start = Timer - 1
    On Error GoTo ErrorHandler
    Application.EnableCancelKey = xlErrorHandler
    Application.Interactive = True
    AppActivate Application.Caption
    Application.Interactive = False
    ExibFundo
    ProgresBar 0, "Baixando Arquivos:"
    Do While Timer < Start + PauseTime
        DoEvents
        Perc = Log(Timer - Start) / Log(PauseTime)
        Perc = (Timer - Start) / PauseTime + Perc
        Perc = Int(Perc / 2 * 100)
        Application.StatusBar = "Baixando Arquivos: " & Perc & "%      Ctrl+Break para Suspender"
        ProgresBar Perc
        MyWait 5
        If Dir(DirP & "\BackDown.tmp") = "" Then
            Application.Interactive = True
            AppActivate Application.Caption
            Application.Interactive = False
            For Perc1 = Perc To 100 Step 4
                MyWait 1
                ProgresBar Perc1, "Concluindo Baixa de Arquivos:"
                Application.StatusBar = "Concluindo Baixa de Arquivos: " & Perc1 & "%      Ctrl+Break para Suspender"
            Next
            Exit Do
        End If
        If Perc >= 95 Then
            If MsgBox("Parece haver proplemas na sua conex|fffd|o. Verificar arquivos baixados e tentar por mais 5 minutos. OK?", vbOKCancel + vbQuestion, "Baixa Lenta!") = vbOK Then
                PauseTime = PauseTime + 5 * 60
            Else
                BotAcionado = 1
                Exit Do
            End If
        End If
    Loop
ErrorHandler:
    ProgresBar 101
    Application.Interactive = True
    Application.StatusBar = False
    If Err.Number <> 0 Then BotAcionado = 1
    AppActivate Application.Caption
End Sub

Public Sub BackgroundDownload()
    Dim i, Wb: DirP = ThisWorkbook.Path
    Open DirP & "\BackDown.tmp" For Input As #1
    Input #1, PathArq
    Input #1, sNomRed
    Close #1

    PathTemp = fReturnTempDir()
    If Right(PathTemp, 1) = "\" Then PathTemp = Left(PathTemp, Len(PathTemp) - 1)
    sCpapTmp = PathTemp & "\CpapCorr"

    'Download
RetryExtrac:
    On Error GoTo Fim
    '   Application.ScreenUpdating = False
    Set CorrArq = Workbooks.Open(PathArq, , True, , "MP542")


    'Extraindo Pacote
    Dim bByteExtrOLE As Boolean: bByteExtrOLE = True    'Primeiro tenta o m|fffd|todo de extrair diretamente byte a byte no disco, qualquer falha, volta e tenta executar o OLEObject normalmente
    If CorrArq.Sheets(2).Range("B1").Value = 0 Then bByteExtrOLE = False  'Possibilita, embora improv|fffd|vel a necessidade de usar pacote antigo sem "TamArqExe" definido e necess|fffd|rio para extrai byte a byte. S|fffd| isso diferencia os antigos dos novos.
    If bByteExtrOLE Then
        If ByteExtrOLEExeInXls = False Then bByteExtrOLE = False: GoTo RetryExtrac
    Else
        ExecOLEObjects
    End If
    MyWait 5

    'Conferindo extra|fffd||fffd|o
    Do While Dir(sCpapTmp & "\Config.001") = ""
        MyWait 1
        i = i + 1
        If i > 20 + 30 Then
            If bByteExtrOLE Then MsgBox "ConfExtract = 0 ainda. Acione OK para continuar tentanto.", vbCritical + vbOKOnly, "CPAP|fffd| - Falha!": bByteExtrOLE = False: GoTo RetryExtrac
            Exit Do
        End If
    Loop

    If bByteExtrOLE = False Then CorrArq.Close False: Set CorrArq = Nothing

Fim:
    If Dir(DirP & "\BackDown.tmp") <> "" Then Kill DirP & "\BackDown.tmp"
    If sCorrArq <> "" And Dir(sCorrArq) <> "" Then Kill sCorrArq
    If sCorrExe <> "" And Dir(sCorrExe) <> "" Then Kill sCorrExe
    For Each Wb In Application.Workbooks
        Wb.Saved = True
    Next
    Application.Quit
End Sub

Sub MyWait(PauseSeg As Double)
    Dim Start
    Start = Timer
    Do While Timer < Start + PauseSeg
        DoEvents
    Loop
End Sub

Function NTVersion()
'Windows (32-bit) 4.10        (98)
'Windows (32-bit) NT 5.00     (Win 2000)
'Windows (32-bit) NT 5.01     (XP)
    Dim NTpos As Integer
    NTVersion = Application.OperatingSystem
    NTpos = InStr(1, NTVersion, " NT ")
    If NTpos = 0 Then
        NTVersion = 4.1   'Not Windows NT
        Exit Function
    End If
    NTVersion = Mid(NTVersion, NTpos + 4, 4)
    If IsNumeric(NTVersion) Then
        NTVersion = Val(NTVersion)
    Else
        NTVersion = 4    'UnKnown NT
    End If
End Function

Sub EnviarTeclas()
    Dim SKWait, OSLang, AlertTit, ShellCmd: DirP = ThisWorkbook.Path
    On Error Resume Next
    If Dir(DirP & "\SendKeys.exe") = "" Then
        'Falha no XP SP2
        Application.SendKeys "{LEFT}~"
    Else
        'Falha tamb|fffd|m no XP SP2 em background por isso tirei a op|fffd||fffd|o de background de padr|fffd|o
        SKWait = 1
        OSLang = GetRegistryValue(HKEY_LOCAL_MACHINE, "Software\Microsoft\Windows\CurrentVersion", "ProgramFilesDir")
        If InStr(1, OSLang, "Arquivos") > 0 Then
            AlertTit = "Abrir Arquivo - Aviso de Seguran|fffd|a"
        ElseIf InStr(1, OSLang, "Files") > 0 Then
            AlertTit = "Open File - Security Warning"
        Else
            SKWait = 3
            AlertTit = ""
        End If

        If NTVersion >= 6 Then
            'No Windows Vista, o SendKeys.exe d|fffd| erro se o MSVBVM60.dll existir na pasta do CPAP como
            'essa dll s|fffd| era |fffd|til para usu|fffd|rios do Excel 97 |fffd| melhor deletar
            If Dir(DirP & "\MSVBVM60.dll") <> "" Then Kill DirP & "\MSVBVM60.dll"
            MyWait 0.5
        End If

        ShellCmd = DirP & "\SendKeys.exe " & SKWait & " 10 " & """" & AlertTit & """" & " ""{LEFT}|fffd|~"" 1"
        Shell ShellCmd, vbNormalFocus
    End If
End Sub

Function ExecOLEObjects() 'Extrai o EXE do pacote OLE executando OLEObjects normalmente. Gera alerta de seguran|fffd|a.
        CorrArq.Activate
        If Val(Application.Version) < 11 Then   'By pass Excel security alert
            Application.DisplayAlerts = False
        Else
            Application.SendKeys "{LEFT}~"
        End If
        CorrArq.Sheets(1).OLEObjects(1).Verb Verb:=xlPrimary
        Application.DisplayAlerts = True
        If NTVersion > 5 Then EnviarTeclas   'By pass Windows XP security alert
End Function

Function ByteExtrOLEExeInXls() As Boolean     'Extrai o EXE do pacote OLE do arquivo xls no disco copiando diretamente byte a byte. N|fffd|o gera alerta de seguran|fffd|a. Novo no CPAP 15.0, rascunhado em MontPctCorrAuto.xls onde tamb|fffd|m est|fffd| rascunhado e pronto outra id|fffd|ia para uma eventualidade futura, |fffd| 'Object In Cell (OIC) Packager' que estoca o exe em cell de uma planilha, mas dobra de tamanho.
    Dim hCorrArq As Long
    Const sExeFlag = vbNullChar & "|fffd|" & vbTab & "|fffd|!|fffd||01|L|fffd|!This program cannot be run in DOS mode." & vbCr & vbCr
    Dim lExeFileLen As Long, lCorrArqLen As Long
    Dim BufferArr(0) As Byte
    Dim sBuffer As String
    Dim lFileStartPos As Long
    Dim lShellRet As Long

    On Error Resume Next
    sCorrArq = PathTemp & "\Cpap_" & sNomRed & "_Corr.xls"    'Salva cpap15.co? como em temp porque se estiver na internet seu fullname |fffd| um URL que falha em Open.
    If Dir(sCorrArq) <> "" Then Kill sCorrArq
    If Err.Number <> 0 Then MsgBox "sCorrArq = " & Err.Number & " ainda. Acione OK para continuar tentanto.", vbCritical + vbOKOnly, "CPAP|fffd| - Falha!": GoTo ErrorHandler

    CorrArq.Saved = True: CorrArq.SaveCopyAs sCorrArq    'CorrArq.SaveAs sCorrArq O SaveAs falha no 2013, pois parece criptogfar o exe no xls.
    If Err.Number <> 0 Then MsgBox "sCorrArq = " & Err.Number & " ainda no salvar c|fffd|pia como. Acione OK para continuar tentanto.", vbCritical + vbOKOnly, "CPAP|fffd| - Falha!": GoTo ErrorHandler

    sCorrExe = PathTemp & "\Cpap_" & sNomRed & "_Corr.exe"    'Extrair para temp e executar. Pode ser quaquer nome, melhor personalizar com nome do usu para que uma eventual alert de virus fique menos assustador.
    If Dir(sCorrExe) <> "" Then Kill sCorrExe
    If Err.Number <> 0 Then MsgBox "sCorrExe = " & Err.Number & " ainda. Acione OK para continuar tentanto.", vbCritical + vbOKOnly, "CPAP|fffd| - Falha!": GoTo ErrorHandler
    On Error GoTo 0

    lExeFileLen = CorrArq.Sheets(2).Range("TamArqExe").Value    '5273839
    CorrArq.Close False: Set CorrArq = Nothing
    lCorrArqLen = FileLen(sCorrArq) - lExeFileLen

    hCorrArq = FreeFile
    Open sCorrArq For Binary Access Read As #hCorrArq

    Do While Seek(hCorrArq) < lCorrArqLen    'Not EOF(hCorrArq)    'Procurar pos de inicio do exe. N|fffd|o |fffd| necess|fffd|rio ir at|fffd| o fim. O tamanho do cpap.cor sem pacote |fffd| suficiente.
        Get #hCorrArq, , BufferArr
        sBuffer = sBuffer & StrConv(BufferArr(), vbUnicode, 0)
        If Len(sBuffer) = Len(sExeFlag) Then
            If Right(sBuffer, Len(sExeFlag)) = sExeFlag Then lFileStartPos = Seek(hCorrArq) - 120 + 1: Exit Do
        End If
        sBuffer = Right(sBuffer, Len(sExeFlag) - 1)
    Loop
    Close #hCorrArq
    If lFileStartPos = 0 Then MsgBox "lFileStartPos = 0 ainda. Acione OK para continuar tentanto.", vbCritical + vbOKOnly, "CPAP|fffd| - Falha!": GoTo ErrorHandler

    If FGetFile(sCorrArq, sCorrExe, lFileStartPos, lExeFileLen) = False Then MsgBox "FGetFile = False ainda. Acione OK para continuar tentanto.", vbCritical + vbOKOnly, "CPAP|fffd| - Falha!": GoTo ErrorHandler
    lShellRet = Shell(sCorrExe): If lShellRet = 0 Then MsgBox "lShellRet = 0 ainda. Acione OK para continuar tentanto.", vbCritical + vbOKOnly, "CPAP|fffd| - Falha!": GoTo ErrorHandler
    ByteExtrOLEExeInXls = True
    Exit Function
ErrorHandler:

End Function

Function FGetFile(sBaseFile As String, sGetFile As String, lStartPos As Long, lGetFileLen As Long)    'Veio do toEXE
    Dim lBaseFileLen As Long
    Dim hGetFile As Long
    Dim hBaseFile As Long
    Dim BufferArr() As Byte                                'Dim sBuffer As String
    Dim lTransfered As Long: Const lBufferLen As Long = 50000

    On Error GoTo ErrorHandler
    FGetFile = True
    lTransfered = 0
    lBaseFileLen = FileLen(sBaseFile)

    hBaseFile = FreeFile
    Open sBaseFile For Binary Access Read As #hBaseFile
    hGetFile = FreeFile
    Open sGetFile For Binary As #hGetFile
    lTransfered = 0
    Seek #hBaseFile, lStartPos
    ReDim BufferArr(lBufferLen - 1)                        '   sBuffer = Space$(lBufferLen)
    Do While Seek(hBaseFile) < lStartPos + lGetFileLen - 1
        Get #hBaseFile, , BufferArr
        If lTransfered + lBufferLen > lGetFileLen Then ReDim Preserve BufferArr(lBufferLen - (lTransfered + lBufferLen - lGetFileLen) - 1)    'sBuffer = Left(sBuffer, lBufferLen - (lTransfered + lBufferLen - lGetFileLen))
        Put #hGetFile, , BufferArr
        lTransfered = lTransfered + lBufferLen
    Loop
    Close #hGetFile
    Close #hBaseFile
    On Error GoTo 0
    Exit Function
ErrorHandler:
    FGetFile = False
End Function

Attribute VB_Name = "M|fffd|d2Email"
Public lResult As Long

Sub SendMailByMAPIvb32(Email As String, Subj As String, Msg As String, Attach As String)
    Dim oMsg As MAPIMessage
    Dim oRecipients(0) As MapiRecip
    Dim oAttachments(0) As MapiFile
    Dim lSession As Long
    Dim oCurDir As String

    'Verifica se Outlook Express |fffd| o padr|fffd|o e se for verifica e concerta o registro
    If Left(GetRegistryValue(HKEY_LOCAL_MACHINE, "Software\Clients\Mail", ""), 15) = "Outlook Express" Then
        Dim DLLPath
        Dim DLLPathEx
        DLLPath = GetRegistryValue(HKEY_LOCAL_MACHINE, "Software\Clients\Mail\Outlook Express", "DLLPath")
        DLLPath = Application.WorksheetFunction.Clean(DLLPath)
        DLLPathEx = GetRegistryValue(HKEY_LOCAL_MACHINE, "Software\Clients\Mail\Outlook Express", "DLLPathEx")
        DLLPathEx = Application.WorksheetFunction.Clean(DLLPathEx)
        If DLLPath <> DLLPathEx Then
            SetKeyValue HKEY_LOCAL_MACHINE, "Software\Clients\Mail\Outlook Express", "DLLPathEx", DLLPath, REG_SZ
        End If
    End If

    oCurDir = CurDir   'Store to restore because MAPIvb32 change currente dir

    ' Logon
    lResult = MAPILogon(0, "", "", MAPI_LOGON_UI + MAPI_NEW_SESSION, 0, lSession)

    If lResult = 3 Then   'S|fffd| suspende o envio se usu|fffd|rio cancelar
        '        MsgBox "Logon failed. Result = " & lResult
        lResult = 1   'Indica cancelado pelo usu|fffd|rio
        GoTo RestCurDir
        Exit Sub
    End If

    ' Fill out the message
    With oMsg
        .Reserved = 0
        .NoteText = Msg
        .FileCount = IIf(Attach = "", 0, 1)
        .RecipCount = 1  'only 1 recipient
        .Subject = Subj
    End With

    ' Fill out the recipient
    With oRecipients(0)
        ' TODO: Change "test@online.microsoft.com" to the address you want to send to
        .Name = Email
        .RecipClass = MAPI_TO
        .Reserved = 0
    End With

    If Attach <> "" Then
        With oAttachments(0)
            '         .FileName = "filename.ext" 'File name on the email
            .PathName = Attach   'File fullname on HD
            '    .Position = 0
            '    .FileType = 0
        End With
    End If

    '    lResult = MAPIResolveName(lSession, 0, oRecipients(0).Name, 0, 0, oRecipients(0))
    '
    '    If lResult <> 0 Then
    '        MsgBox "MAPIResolveName failed. Result = " & lResult
    '        GoTo RestCurDir
    '    End If


    ' Send the message
    lResult = MAPISendMail(0, 0, oMsg, oRecipients, oAttachments, MAPI_DIALOG, 0&)

    '   If lResult = 0 Then
    '      MsgBox "Mensagem enviada!", , "CPAP|fffd|"
    '   Else
    '      If lResult <> 1 Then MsgBox "Motivo = " & lResult, , "Falha ao Enviar Mensagem!"
    '   End If

    ' Log off
    If lResult = 0 Or lResult = 1 Then MAPILogoff lSession, 0, 0, 0

    '   If lResult <> 0 Then
    '      MsgBox "Logoff failed. Result = " & lResult
    '   End If

RestCurDir:
    If Mid(oCurDir, 2, 1) = ":" Then ChDrive oCurDir
    If Mid(oCurDir, 2, 1) = ":" Then ChDir oCurDir Else Application.Run "CPAP_EX8.MAC!DirectoryVBA", oCurDir, False
End Sub



Public Sub SendEMailByURL(Email As String, Subj As String, Msg As String)
'Essa foi a primeira solu|fffd||fffd|o. O defeito maior |fffd| limite de caracteres
'mas se MAPIvb32 falhar ele ser|fffd| usado
    Dim URL As String
    Dim r As Integer, x As Double
    Application.StatusBar = "Preparando Email. Aguarde..."
    For r = 1 To 1   'data in rows
        '       Get the email address
        '      Email = "contato@cpap.com.br"   'Cells(r, 2)

        '       Message subject
        '      Subj = "Informa|fffd||fffd|es sobre o CPAP"

        '       Compose the message
        '       Replace & (i comercial) with %26 (hex)
        Subj = Application.WorksheetFunction.Substitute(Subj, "&", "%26")
        Msg = Application.WorksheetFunction.Substitute(Msg, "&", "%26")

        '       Replace spaces with %20 (hex)
        Subj = Application.WorksheetFunction.Substitute(Subj, " ", "%20")
        Msg = Application.WorksheetFunction.Substitute(Msg, " ", "%20")

        '       Replace carriage returns with %0D%0A (hex)
        Msg = Application.WorksheetFunction.Substitute(Msg, vbCrLf, "%0D%0A")
        '       Create the URL
        URL = "mailto:" & Email & "?subject=" & Subj & "&body=" & Msg

        '       Shell the Windows Start command
        x = Shell(Left("Start " & URL, 460), vbHide)

        '       Wait two seconds before sending keystrokes
        '        Application.Wait (Now + TimeValue("0:00:02"))
        '        Application.SendKeys "%s"
    Next r
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True











Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True












Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{C0A59C7A-59CE-4E6E-AC94-37EAEFDD9A91}{0963F040-3ECE-4BF3-B8EF-9A13F77266B3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub WinVer_Lb_Click()
    i = gLocInfo(LOCALE_SENGLANGUAGE)
    i = IIf(i Like "English", " System", IIf(i Like "Portuguese", " Sistema", ""))
    Shell "CONTROL.EXE SYSDM.CPL" & i, vbNormalFocus
    'Dica como encontrei. Criei um atalho do sistema e abri o arquivo
    'do mesmo no Write do 3.11 e li no comando o argumento para o Control.exe
End Sub

Private Sub ExcelVer_Lb_Click()
    CommandBars.FindControl(ID:=927).Execute
End Sub

Private Sub ExcelMaisInfo_Lb_Click()
    ExcelMaisInfo
End Sub

Private Sub Image1_Click()
    Hide
    Fundo
End Sub

Private Sub Label16_Click()
    Label16.ForeColor = &H80FF&
    Label16.MousePointer = fmMousePointerHourGlass

    'Compose the message
    Dim Msg As String
    Msg = ""
    Msg = Msg & "Prezados Senhores,"
    Msg = Msg & vbCrLf & vbCrLf
    Msg = Msg & "Gostaria..."
    Msg = Msg & vbCrLf & vbCrLf & vbCrLf & vbCrLf
    Msg = Msg & "Atenciosamente," & vbCrLf & vbCrLf & vbCrLf

    Msg = Msg & "___" & vbCrLf
    Msg = Msg & Dados(15, 1).Value & vbCrLf   'Nome da Empresa

    WinVer = Application.OperatingSystem & " " & gLocInfo(LOCALE_SLANGUAGE)
    i = Application.International(xlCountryCode)
    ExcelL|fffd|ngua = IIf(i = 1, "Ingl|fffd|s", IIf(i = 55, "Portugu|fffd|s", "L|fffd|ngua " & i))
    ExcelVer = "Excel " & Application.Version & " (" & ExcelL|fffd|ngua & ")"
    Msg = Msg & WinVer & vbCrLf
    Msg = Msg & ExcelVer & vbCrLf
    Msg = Msg & "CPAP" & IIf(Dados(8, 2).Value <> 0, "|fffd| ", " ") & Dados(7, 1).Value   'Vers|fffd|o. Se estiver registrada sai |fffd|
    Msg = Msg & "/HD" & Dados(9, 2).Value & vbCrLf
    Msg = Msg & Dados(17, 1).Value & vbCrLf   '|fffd|lt. Atual
    Msg = Msg & Dados(16, 1).Value & vbCrLf & vbCrLf   'Data Inicial

    With Workbooks("cpap_pri.mac").Excel4MacroSheets(1)
        Msg = Msg & "Favor conferir e atualizar nosso cadastro em" & vbCrLf
        Msg = Msg & "vosso banco de dados:" & vbCrLf
        Msg = Msg & "Nome(Raz|fffd|o social): " & .Range("NomeEmpr").Value & vbCrLf
        Msg = Msg & "Nome reduzido: " & .Range("NomRed").Value & vbCrLf
        Msg = Msg & "CNPJ/CPF: " & .Range("CGCempr").Value & vbCrLf
        Msg = Msg & "Endere|fffd|o: " & .Range("EndEmpr").Value & vbCrLf
        Msg = Msg & "CEP: " & .Range("CepEmpr").Value & vbCrLf
        Msg = Msg & "Cidade-Estado: " & .Range("CidUF").Value & vbCrLf
        Msg = Msg & "Fone: " & .Range("FonEmpr").Value & vbCrLf
        Msg = Msg & "Fax: " & .Range("FaxEmpr").Value & vbCrLf
        Msg = Msg & "Licen|fffd|as adicionais: " & .Range("NUsu").Value - 1 & vbCrLf
        Msg = Msg & "M|fffd|dulo de Atualiza|fffd||fffd|es: " & "SIM" & vbCrLf
        Msg = Msg & "M|fffd|dulo de Planos de Pagamentos: " & IIf(.Range("Mplano").Value, "N|fffd|O", "SIM") & vbCrLf
        Msg = Msg & "M|fffd|dulo de Emiss|fffd|o de Contratos: " & IIf(.Range("Mcont").Value, "N|fffd|O", "SIM") & vbCrLf
        Msg = Msg & "M|fffd|dulos de Acompanhamentos de Contrato e de Contas a Receber: " & IIf(.Range("Macomp").Value, "N|fffd|O", "SIM") & vbCrLf
    End With

    SendMailByMAPIvb32 "contato@cpap.com.br", "Informa|fffd||fffd|es sobre o CPAP", Msg, ""

    If lResult > 1 Or lResult < 0 Then    'Se falhar com MAPIvb32 tenta com URL
        SendEMailByURL "contato@cpap.com.br", "Informa|fffd||fffd|es sobre o CPAP", Msg
        '   Application.Wait Now + TimeValue("00:00:25")
        MyWait 25
    End If

    BotAcionado = 1
    Hide
    AppActivate Application.Caption
End Sub

Private Sub Label4_Click()
    Label14.ForeColor = &H80FF&
    Label14.MousePointer = fmMousePointerHourGlass

    'A vantagem do Shell |fffd| poder acionar Start(Dos) oculto (Falha Win2000)
    'Shell "Start http://cpap.com.br", vbHide
    'MyWait 25

    On Error Resume Next
    ThisWorkbook.FollowHyperlink "http://cpap.com.br", , True
    If Err.Number <> 0 Then MsgBox Err.Description, , "CPAP|fffd|"

    BotAcionado = 1
    Hide
End Sub

Private Sub Fechar_Bt_Click()
    BotAcionado = 1
    Hide
End Sub

Private Sub Leiame_Bt_Click()
    BotAcionado = 2
    Hide
End Sub

Private Sub SobreM|fffd|dulos_Bt_Click()
    UserForm2.Show
End Sub

Private Sub UserForm_Initialize()
    WinVer_Lb = Application.OperatingSystem & " " & gLocInfo(LOCALE_SLANGUAGE)
    i = Application.International(xlCountryCode)
    ExcelL|fffd|ngua = IIf(i = 1, "Ingl|fffd|s", IIf(i = 55, "Portugu|fffd|s", "L|fffd|ngua " & i))
    ExcelVer_Lb = "Excel " & Application.Version
    ExcelMaisInfo_Lb = " (" & ExcelL|fffd|ngua & "..."
    Esp_Lb.Left = WinVer_Lb.Left + WinVer_Lb.Width
    ExcelVer_Lb.Left = Esp_Lb.Left + Esp_Lb.Width
    ExcelMaisInfo_Lb.Left = ExcelVer_Lb.Left + ExcelVer_Lb.Width
End Sub

Attribute VB_Name = "UserForm2"
Attribute VB_Base = "0{011A9F2A-5B8D-4F27-9148-CAFE2DE626C7}{B8DF5677-DD90-4554-BF45-6425D679FC1F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Sub AssM|fffd|d()
    UserForm2.M|fffd|dAtu_Chb.Value = True
    UserForm2.M|fffd|dPlan_Chb.Value = Not Workbooks("cpap_pri.mac").Excel4MacroSheets(1).Range("Mplano").Value
    UserForm2.M|fffd|dCont_Chb.Value = Not Workbooks("cpap_pri.mac").Excel4MacroSheets(1).Range("Mcont").Value
    UserForm2.M|fffd|dAco_Chb.Value = Not Workbooks("cpap_pri.mac").Excel4MacroSheets(1).Range("Macomp").Value
    UserForm2.M|fffd|dCar_Chb.Value = UserForm2.M|fffd|dAco_Chb.Value
End Sub

Private Sub UserForm_Initialize()
    vEnableEvents = False
    AssM|fffd|d
    vEnableEvents = True
End Sub

Private Sub Fechar_Bt_Click()
    Hide
End Sub

Private Sub Ajuda_Bt_Click()
    Application.Run "cpap_pri.mac!AjudaCpap", 10
End Sub

Private Sub Perguntas_Bt_Click()
    Application.Run "cpap_pri.mac!Cpap_faq", 10
End Sub

Private Sub M|fffd|dAtu_Chb_Click()
    If vEnableEvents Then Else Exit Sub
    AssM|fffd|d
    Application.Run "cpap_pri.mac!Cpap_faq", 20
End Sub

Private Sub M|fffd|dPlan_Chb_Click()
    If vEnableEvents Then Else Exit Sub
    AssM|fffd|d
    Application.Run "cpap_pri.mac!Cpap_faq", 30
End Sub

Private Sub M|fffd|dCont_Chb_Click()
    If vEnableEvents Then Else Exit Sub
    AssM|fffd|d
    Application.Run "cpap_pri.mac!Cpap_faq", 40
End Sub

Private Sub M|fffd|dAco_Chb_Click()
    If vEnableEvents Then Else Exit Sub
    AssM|fffd|d
    Application.Run "cpap_pri.mac!Cpap_faq", 50
End Sub

Private Sub M|fffd|dCar_Chb_Click()
    If vEnableEvents Then Else Exit Sub
    AssM|fffd|d
    Application.Run "cpap_pri.mac!Cpap_faq", 60
End Sub

Attribute VB_Name = "UserForm3"
Attribute VB_Base = "0{F5040D30-A32D-434B-8ED5-55C5927CF866}{39BAF66D-C386-4DE0-8479-43D00BEC08C1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
    Futuras_ChB.Enabled = False
End Sub

Private Sub Alterar_ChB_Click()
'Opera|fffd||fffd|o foi transferida porque porque o form perde a forma
'"Modaless" ao exibir caixa de abrir arquivo
    BotAcionado = 1
    Hide
    vEnableEvents = False
    Alterar_ChB.Value = False
    vEnableEvents = True
End Sub

Private Sub Futuras_ChB_Click()
    If vEnableEvents = False Then Exit Sub
    If MsgBox("Tem certeza que deseja usar o arquivo " & FileOpened & " como fundo nas futuras execu|fffd||fffd|es do CPAP nesta esta|fffd||fffd|o?", vbQuestion + vbOKCancel, "Alterando Fundo") = vbOK Then
        Err.Number = 0
        On Error Resume Next
        CpapCfgTempFld = Application.Run("CPAP_EX8.Mac!fCpapCfgTempFld")    'Application.Workbooks("cpap_pri.mac").Sheets(1).Range("DirWin").Value
        FileCopy FileOpened, CpapCfgTempFld & "\cpap_fun.bmp"
        If Err.Number = 0 Then
            SetAttr CpapCfgTempFld & "\cpap_fun.bmp", 1    'Evita que limpezas autom|fffd|ticas do Windows
            Hide
        End If
    End If
    vEnableEvents = False
    Futuras_ChB.Value = False
    vEnableEvents = True
End Sub

Private Sub Inicial_ChB_Click()
    If vEnableEvents = False Then Exit Sub
    CpapCfgTempFld = Application.Run("CPAP_EX8.Mac!fCpapCfgTempFld") 'Application.Workbooks("cpap_pri.mac").Sheets(1).Range("DirWin").Value
    If Dir(CpapCfgTempFld & "\cpap_fun.bmp") = "cpap_fun.bmp" Then
        AlterandoFundo CpapCfgTempFld & "\cpap_fun.bmp"
    Else
        Original_ChB_Click
    End If
    Futuras_ChB.Enabled = False
    vEnableEvents = False
    Inicial_ChB.Value = False
    vEnableEvents = True
End Sub

Private Sub Original_ChB_Click()
    If vEnableEvents = False Then Exit Sub
    AlterandoFundo DirP & "\cpap_fun.bm"
    CpapCfgTempFld = Application.Run("CPAP_EX8.Mac!fCpapCfgTempFld") 'Application.Workbooks("cpap_pri.mac").Sheets(1).Range("DirWin").Value
    If Dir(CpapCfgTempFld & "\cpap_fun.bmp") = "cpap_fun.bmp" Then
        SetAttr CpapCfgTempFld & "\cpap_fun.bmp", 0    'Evita que limpezas autom|fffd|ticas do Windows
        Kill CpapCfgTempFld & "\cpap_fun.bmp"
        Hide
    End If
    Futuras_ChB.Enabled = False
    vEnableEvents = False
    Original_ChB.Value = False
    vEnableEvents = True
End Sub
Attribute VB_Name = "UserForm4SupOnL"
Attribute VB_Base = "0{C0000F5B-34E9-4F3D-A3A3-A7797D0F0413}{0CF4A678-F787-4CBB-8BE4-1CF91BA5164B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub Fechar_Bt_Click()
    BotAcionado = 1
    Hide
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If CloseMode = 0 Then BotAcionado = 1
End Sub

Private Sub |fffd|ndices_Lb_Click()
    BotAcionado = 2
    Hide
End Sub

Private Sub Corre|fffd||fffd|o_Lb_Click()
    BotAcionado = 3
    Hide
End Sub

Private Sub Email_Lb_Click()
    Email_Lb.ForeColor = &H80FF&
    Email_Lb.MousePointer = fmMousePointerHourGlass

    'Compose the message
    Dim Msg As String
    Msg = ""
    Msg = Msg & "Prezados Senhores,"
    Msg = Msg & vbCrLf & vbCrLf
    Msg = Msg & "Gostaria..."
    Msg = Msg & vbCrLf & vbCrLf & vbCrLf & vbCrLf
    Msg = Msg & "Atenciosamente," & vbCrLf & vbCrLf & vbCrLf

    Msg = Msg & "___" & vbCrLf
    Msg = Msg & Dados(15, 1).Value & vbCrLf   'Nome da Empresa

    WinVer = Application.OperatingSystem & " " & gLocInfo(LOCALE_SLANGUAGE)
    i = Application.International(xlCountryCode)
    ExcelL|fffd|ngua = IIf(i = 1, "Ingl|fffd|s", IIf(i = 55, "Portugu|fffd|s", "L|fffd|ngua " & i))
    ExcelVer = "Excel " & Application.Version & " (" & ExcelL|fffd|ngua & ")"
    Msg = Msg & WinVer & vbCrLf
    Msg = Msg & ExcelVer & vbCrLf
    Msg = Msg & "CPAP" & IIf(Dados(8, 2).Value <> 0, "|fffd| ", " ") & Dados(7, 1).Value   'Vers|fffd|o. Se estiver registrada sai |fffd|
    Msg = Msg & "/HD" & Dados(9, 2).Value & vbCrLf
    Msg = Msg & Dados(17, 1).Value & vbCrLf   '|fffd|lt. Atual
    Msg = Msg & Dados(16, 1).Value & vbCrLf & vbCrLf   'Data Inicial

    With Workbooks("cpap_pri.mac").Excel4MacroSheets(1)
        Msg = Msg & "Favor conferir e atualizar nosso cadastro em" & vbCrLf
        Msg = Msg & "vosso banco de dados:" & vbCrLf
        Msg = Msg & "Nome(Raz|fffd|o social): " & .Range("NomeEmpr").Value & vbCrLf
        Msg = Msg & "Nome reduzido: " & .Range("NomRed").Value & vbCrLf
        Msg = Msg & "CNPJ/CPF: " & .Range("CGCempr").Value & vbCrLf
        Msg = Msg & "Endere|fffd|o: " & .Range("EndEmpr").Value & vbCrLf
        Msg = Msg & "CEP: " & .Range("CepEmpr").Value & vbCrLf
        Msg = Msg & "Cidade-Estado: " & .Range("CidUF").Value & vbCrLf
        Msg = Msg & "Fone: " & .Range("FonEmpr").Value & vbCrLf
        Msg = Msg & "Fax: " & .Range("FaxEmpr").Value & vbCrLf
        Msg = Msg & "Licen|fffd|as adicionais: " & .Range("NUsu").Value - 1 & vbCrLf
        Msg = Msg & "M|fffd|dulo de Atualiza|fffd||fffd|es: " & "SIM" & vbCrLf
        Msg = Msg & "M|fffd|dulo de Planos de Pagamentos: " & IIf(.Range("Mplano").Value, "N|fffd|O", "SIM") & vbCrLf
        Msg = Msg & "M|fffd|dulo de Emiss|fffd|o de Contratos: " & IIf(.Range("Mcont").Value, "N|fffd|O", "SIM") & vbCrLf
        Msg = Msg & "M|fffd|dulos de Acompanhamentos de Contrato e de Contas a Receber: " & IIf(.Range("Macomp").Value, "N|fffd|O", "SIM") & vbCrLf
    End With

    SendMailByMAPIvb32 "suporte@cpap.com.br", "Quest|fffd|es sobre o CPAP", Msg, ""

    If lResult > 1 Or lResult < 0 Then    'Se falhar com MAPIvb32 tenta com URL
        SendEMailByURL "suporte@cpap.com.br", "Quest|fffd|es sobre o CPAP", Msg
        '   Application.Wait Now + TimeValue("00:00:25")
        MyWait 25
    End If

    Hide
    BotAcionado = 4
End Sub

Private Sub Label4_Click()
    Label4.ForeColor = &H80FF&
    i = Label4.MousePointer
    Label4.MousePointer = fmMousePointerHourGlass

    'A vantagem do Shell |fffd| poder acionar Start(Dos) oculto
    'Shell "Start http://cpap.com.br", vbHide
    'MyWait 25

    On Error Resume Next
    ThisWorkbook.FollowHyperlink "http://cpap.com.br", , True
    If Err.Number <> 0 Then MsgBox Err.Description, , "CPAP|fffd|"

    Label4.MousePointer = i
End Sub

Private Sub OutlookExpress_Lb_Click()
    If MsgBox("Verificar a configura|fffd||fffd|o e tornar o Outlook Express seu programa padr|fffd|o para o envio de emails?" & Chr(10) & Chr(10) & "   Obs.: S|fffd| use se estiver com problema para o envio de Email.", vbOKCancel + vbQuestion, "Outlook Express") = vbCancel Then Exit Sub
    Dim DLLPath
    Dim DLLPathEx
    Dim GetValue
    DLLPath = GetRegistryValue(HKEY_LOCAL_MACHINE, "Software\Clients\Mail\Outlook Express", "DLLPath")
    DLLPath = Application.WorksheetFunction.Clean(DLLPath)
    If DLLPath = "Error" Then GoTo FalhaNoRegitro

    DLLPathEx = GetRegistryValue(HKEY_LOCAL_MACHINE, "Software\Clients\Mail\Outlook Express", "DLLPathEx")
    DLLPathEx = Application.WorksheetFunction.Clean(DLLPathEx)
    If DLLPath <> DLLPathEx Then
        SetKeyValue HKEY_LOCAL_MACHINE, "Software\Clients\Mail\Outlook Express", "DLLPathEx", DLLPath, REG_SZ
    End If

    GetValue = "Outlook Express"
    SetKeyValue HKEY_LOCAL_MACHINE, "Software\Clients\Mail", "", GetValue, REG_SZ
    '@="Outlook Express"

    GetValue = GetRegistryValue(HKEY_LOCAL_MACHINE, "Software\Clients\Mail\Outlook Express\Protocols\mailto", "")
    GetValue = Application.WorksheetFunction.Clean(GetValue)
    If InStr(1, GetValue, "MailTo") = 0 Then GoTo FalhaNoRegitro
    SetKeyValue HKEY_LOCAL_MACHINE, "Software\CLASSES\mailto", "", GetValue, REG_SZ
    '[HKEY_LOCAL_MACHINE\Software\Clients\Mail\Outlook Express\Protocols\mailto]
    '@="URL:protocolo MailTo"
    '[HKEY_LOCAL_MACHINE\Software\CLASSES\mailto]
    '@="URL:protocolo MailTo"

    GetValue = GetRegistryValue(HKEY_LOCAL_MACHINE, "Software\Clients\Mail\Outlook Express\Protocols\mailto\DefaultIcon", "")
    GetValue = Application.WorksheetFunction.Clean(GetValue)
    If InStr(1, GetValue, "\MSIMN.EXE") = 0 Then GoTo FalhaNoRegitro
    SetKeyValue HKEY_LOCAL_MACHINE, "Software\CLASSES\mailto\DefaultIcon", "", GetValue, REG_SZ
    '[HKEY_LOCAL_MACHINE\Software\Clients\Mail\Outlook Express\Protocols\mailto\DefaultIcon]
    '@="C:\\ARQUIVOS DE PROGRAMAS\\OUTLOOK EXPRESS\\MSIMN.EXE,-2"
    '[HKEY_LOCAL_MACHINE\Software\CLASSES\mailto\DefaultIcon]
    '@="C:\\ARQUIVOS DE PROGRAMAS\\OUTLOOK EXPRESS\\MSIMN.EXE,-2"

    GetValue = GetRegistryValue(HKEY_LOCAL_MACHINE, "Software\Clients\Mail\Outlook Express\Protocols\mailto\shell\open\command", "")
    GetValue = Application.WorksheetFunction.Clean(GetValue)
    If InStr(1, GetValue, "\MSIMN.EXE") = 0 Then GoTo FalhaNoRegitro
    SetKeyValue HKEY_LOCAL_MACHINE, "Software\CLASSES\mailto\shell\open\command", "", GetValue, REG_SZ
    '[HKEY_LOCAL_MACHINE\Software\Clients\Mail\Outlook Express\Protocols\mailto\shell\open\command]
    '@="\"C:\\ARQUIVOS DE PROGRAMAS\\OUTLOOK EXPRESS\\MSIMN.EXE\" /mailurl:%1"
    '[HKEY_LOCAL_MACHINE\Software\CLASSES\mailto\shell\open\command]
    '@="\"C:\\ARQUIVOS DE PROGRAMAS\\OUTLOOK EXPRESS\\MSIMN.EXE\" /mailurl:%1"

    MsgBox "Agora o Outlook Express |fffd| o programa padr|fffd|o para o envio de emails, mas voc|fffd| precisa sair e reiniciar o CPAP para efetivar a nova configura|fffd||fffd|o.", vbInformation, "Outlook Express - Sucesso na Configura|fffd||fffd|o!"
    Hide
    BotAcionado = 1
    Exit Sub
FalhaNoRegitro:
    MsgBox "Antes voc|fffd| precisa instalar ou reinstalar o Outlook Express em seu computador!", vbCritical, "Outlook Express - Falha no Registro!"
End Sub


Attribute VB_Name = "UserForm4SupOnLAlt"
Attribute VB_Base = "0{C1E7D12A-8528-40D9-AA9D-90D01A486BCC}{77C742E7-C8B6-4A74-A9DF-005019F4CF1E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub Alt_LsB_Click()
    If vEnableEvents = False Then Exit Sub
    vEnableEvents = False
    Alt_LsB.BoundColumn = 1
    c1 = Alt_LsB.Value
    Alt_LsB.BoundColumn = 2
    c2 = Alt_LsB.Value
    Alt_LsB.BoundColumn = 3
    c3 = Alt_LsB.Value
    AltDesc_Lb.Caption = Format(c1, "dd/mm/yyyy") & " - " & Choose(1 + c2, "Todos os M|fffd|dulos", "M|fffd|dulo de Atualiza|fffd||fffd|es", "M|fffd|dulo de Planos de Pagamentos", "M|fffd|dulo de Emiss|fffd|o de Contratos", "M|fffd|dulo de Acompanhamentos", "M|fffd|dulo de Contas a Receber") & ":"
    AltDesc_Tb.Value = c3
    vEnableEvents = True
End Sub

Private Sub Cancel_Bt_Click()
    Hide
    BotAcionado = 1
End Sub

Private Sub Importar_Bt_Click()
    Hide
    BotAcionado = 2
End Sub
Attribute VB_Name = "UserForm4SupOnLImpDe"
Attribute VB_Base = "0{30D76FF7-9A26-4F4D-B482-3587DD551433}{6A3EC1A8-15A5-4A45-ADF2-C2118094202F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub Internet_Bt_Click()
    BotAcionado = 1
    BackDownload = BackDownload_Chb.Value
    Hide
End Sub

Private Sub DiscoLocal_Bt_Click()
    BotAcionado = 2
    BackDownload = BackDownload_Chb.Value
    Hide
End Sub

Private Sub Cancel_Bt_Click()
    BotAcionado = 3
    Hide
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If CloseMode = 0 Then BotAcionado = 3
End Sub

Private Sub BackDownload_Chb_Click()
    If BackDownload_Chb.Value = False Then MsgBox "A |fffd|nica diferen|fffd|a entre baixar os arquivos em background e direto |fffd| que, em background ser|fffd| exibida uma barra de progresso de tempo. Enquanto direto, o Excel ficar|fffd| sem nenhuma atividade at|fffd| se completar a baixa que pode durar de 5 a 30 minutos de acordo com a qualidade de conex|fffd|o.", , "CPAP|fffd|"
End Sub



INQUEST-PP=macro
