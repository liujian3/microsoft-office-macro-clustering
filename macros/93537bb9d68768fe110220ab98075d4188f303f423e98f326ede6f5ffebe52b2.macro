Attribute VB_Name = "CDMInfo"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim dmapp       As Object
'Dim plib As DOCSObjects.Library
Dim DMlib       As Object
Dim DMprof      As Object
    
Private Enum ReturnType
    DocumentNumber
    Library
    Version
End Enum
    
Private m_FileName  As String
Private m_DocNumber As String
Private m_Library   As String
Private m_Version   As String


'Private Sub Class_Initialize()
'
'
'End Sub

Private Sub Class_Terminate()
    Set dmapp = Nothing
    Set DMlib = Nothing
    Set DMprof = Nothing
End Sub

Public Property Get GetColumnData(strDMColumn As String) As String
    
    On Error Resume Next
    If m_FileName = "" Then
        GetColumnData = ""
        Err.Raise vbObjectError + 999, "DMInfo", "File name not set!"""
        Exit Property
    End If
    
    RetrieveDataFromPath (m_FileName)
    If dmapp Is Nothing Then
        Set dmapp = CreateObject("DOCSOBJECTS.APPLICATION")
    End If
    If DMlib Is Nothing Then
        Set DMlib = dmapp.CurrentLibrary
    End If
    If DMprof Is Nothing Then
        Set DMprof = DMlib.GetProfile(m_DocNumber)
    End If

    GetColumnData = DMprof.Columns(CStr(strDMColumn)).Value

End Property

Public Property Let DocFileName(ByVal vNewValue As String)
    m_FileName = vNewValue
End Property

Public Property Get GetUserName() As String

    On Error Resume Next
    If m_FileName = "" Then
        GetUserName = ""
        Err.Raise vbObjectError + 999, "DMInfo", "File name not set!"""
        Exit Property
    End If
    
    RetrieveDataFromPath (m_FileName)
    If dmapp Is Nothing Then
        Set dmapp = CreateObject("DOCSOBJECTS.APPLICATION")
    End If
    If DMlib Is Nothing Then
        Set DMlib = dmapp.CurrentLibrary
    End If
    
    GetUserName = DMlib.UserName
End Property

Public Property Get GetPrimaryGroup() As String

    On Error Resume Next
    If m_FileName = "" Then
        GetPrimaryGroup = ""
        Err.Raise vbObjectError + 999, "DMInfo", "File name not set!"""
        Exit Property
    End If
    
    RetrieveDataFromPath (m_FileName)
    If dmapp Is Nothing Then
        Set dmapp = CreateObject("DOCSOBJECTS.APPLICATION")
    End If
    If DMlib Is Nothing Then
        Set DMlib = dmapp.CurrentLibrary
    End If
    
    GetPrimaryGroup = DMlib.UserPrimaryGroup
End Property

Public Property Get GetDocumentNumber() As String
    Call RetrieveDataFromPath(m_FileName)
    GetDocumentNumber = m_DocNumber
End Property

Public Property Get GetLibraryName() As String
    Call RetrieveDataFromPath(m_FileName)
    GetLibraryName = m_Library
End Property

Public Property Get GetVersion() As String
    Call RetrieveDataFromPath(m_FileName)
    GetVersion = m_Version
End Property

Private Sub RetrieveDataFromPath(strFileName As String)
    Dim vTMP            As Variant
    
    If m_FileName = "" Then
        Exit Sub
    End If
    
    If Left(strFileName, 6) = "::ODMA" Then
        'ODMA file
        vTMP = Split(strFileName, "\")
        If UBound(vTMP) = 4 Then
            m_Version = vTMP(UBound(vTMP))
            m_DocNumber = vTMP(UBound(vTMP) - 1)
            m_Library = vTMP(UBound(vTMP) - 2)
        End If
    Else
        Dim strFile         As String
        Dim intCounter      As Integer
        Dim strTMP          As String
        Dim intFound        As Integer
        Dim strSep          As String
        
        
        strFile = GetFileNamePart(strFileName)
        intFound = 0
        strTMP = ""
'        If InStr(strFile, "-") > 0 Then
'            strSep = "-"
'        Else
'            strSep = "#"
'        End If
        strSep = "-"
        
        m_Library = ""
        On Error Resume Next
        '--- spesialbehandling dersom navn p|fffd| library inneholder underscore samt prefix 'edocs'
        If Left(LCase(strFile), 6) = "edocs_" Then
            strFile = Right(strFile, Len(strFile) - 6)
            For intCounter = 1 To Len(strFile)
                If Mid(strFile, intCounter, 1) <> strSep Then
                    strTMP = strTMP & Mid(strFile, intCounter, 1)
                Else
                    If intFound = 0 Then
                        m_Library = strTMP
                        intFound = intFound + 1
                        strTMP = ""
                    End If
                End If
            Next intCounter
            strFile = Right(strFile, Len(strFile) - Len(m_Library))
            m_Library = "eDocs_" & m_Library
            strTMP = ""
            intFound = 0
            Err.Clear
        End If

        
        For intCounter = 1 To Len(strFile)
            If Mid(strFile, intCounter, 1) <> strSep Then
                strTMP = strTMP & Mid(strFile, intCounter, 1)
            Else
                If intFound = 0 Then
                    If Left(LCase(m_Library), 6) <> "edocs_" Then
                        m_Library = strTMP
                    End If
                    intFound = intFound + 1
                    strTMP = ""
                ElseIf intFound = 1 Then
                    m_DocNumber = Replace(strTMP, "#", "")
                    m_DocNumber = Replace(m_DocNumber, "n", "")
                    intFound = intFound + 1
                    strTMP = ""
                ElseIf intFound = 2 Then
                    m_Version = strTMP
                    intFound = intFound + 1
                    strTMP = ""
                End If
            End If
        Next intCounter
        
    End If
    
End Sub


Private Function GetFileNamePart(strFileName As String) As String
    Dim intCounter  As Integer
    Dim strTMP      As String
    
    On Error GoTo PROC_ERROR
    'Parse string
    For intCounter = Len(strFileName) To 1 Step -1
        If Mid(strFileName, intCounter, 1) <> "\" Then
            strTMP = Mid(strFileName, intCounter, 1) & strTMP
        Else
            Exit For
        End If
    Next intCounter
    
    GetFileNamePart = strTMP
    
    
PROC_EXIT:
    Exit Function
PROC_ERROR:
    GetFileNamePart = ""
    
End Function

Attribute VB_Name = "Fellesrutiner"

Public Katalog As String
Public CompanyFile As String
Public Const x_TEMPLATEPATH As String = "TemplatePath"

Function FilFinnes(ByVal Filnavn As String) As Boolean
Dim fs
    Set fs = CreateObject("Scripting.FileSystemObject")
    If fs.FileExists(Filnavn) Then FilFinnes = True Else FilFinnes = False
    
    Set fs = Nothing
End Function

Sub ErrorHandler(ByVal Err As Object)
    Application.ScreenUpdating = True
    
    Application.Cursor = xlDefault

    MsgBox "An error has occured." & vbCr & _
    "Error: " & Str$(Err.Number) & ", " & Err.Description, vbOKOnly + vbCritical, _
    "Contact User Support!.", "", 1000
End Sub


Public Sub FindIniFile(cFile As String, cIniFil As String)
  Dim FileCatalog As String

'---
''    Katalog = Application.NetworkTemplatesPath 'WorkGroupTemplates
    Katalog = ThisWorkbook.CustomDocumentProperties.Item(x_TEMPLATEPATH).Value
    If Len(Katalog) > 1 Then
        If Right(Katalog, 1) <> "\" Then
            Katalog = Katalog & Application.PathSeparator
        End If
    End If
    
'--- cIniFil:
    If FilFinnes(Katalog & cIniFil) Then
        cFile = Katalog & cIniFil
    Else
        MsgBox "Not able to locate the file " & cIniFil _
            & vbCr & "Contact User Support", vbCritical + vbOKOnly, _
            "The file " & cIniFil & " is missing."
        End
    End If

End Sub
Attribute VB_Name = "Integration"
Option Explicit

Sub GetDMInfo()
    Dim DMData              As New CDMInfo
    Dim DocNumber           As String
    Dim LibraryName         As String
    Dim Version             As String
    Dim sDocRef              As String
    Dim sGrading            As String
    Dim sLegal              As String
    On Error Resume Next
    
'--- Hent data fra DM
    DMData.DocFileName = ThisWorkbook.FullName
    DocNumber = DMData.GetDocumentNumber
    LibraryName = DMData.GetLibraryName
    Version = DMData.GetVersion
        
    If Len(DocNumber) > 0 And Len(LibraryName) > 0 Then
        sDocRef = DocNumber & "-" & DMData.GetVersion
        
        If Len(DMData.GetColumnData("GRAD_ID")) > 0 And DMData.GetColumnData("GRAD_ID") <> "A" Then
            sGrading = DMData.GetColumnData("GRADERING")
        Else
            sGrading = " "
        End If
        
        If Len(DMData.GetColumnData("HJEMMEL_ID")) > 0 And sGrading <> " " Then
            If DMData.GetColumnData("UNNTAGELSE") = "Ja" Then
                sLegal = "Unntatt offentlighet i henhold til " & DMData.GetColumnData("HJEMMEL_ID")
            Else
                sLegal = "Jf. " & DMData.GetColumnData("HJEMMEL_ID")
            End If
        Else
            sLegal = " "
        End If
        
        ThisWorkbook.CustomDocumentProperties("DocRef") = sDocRef
        ThisWorkbook.CustomDocumentProperties("Grading") = sGrading
        ThisWorkbook.CustomDocumentProperties("Legal") = sLegal
        
        With ActiveSheet.PageSetup
            If sLegal <> " " Then
                .RightHeader = "&""Arial""&12" & sGrading & vbCr & "&07" & sLegal
            Else
                .RightHeader = "&""Arial""&12" & sGrading
            End If
            .LeftFooter = "&""Arial""" & sDocRef
        End With
    End If
    
    Err.Clear

End Sub

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub subNewWorkbook()

    ThisWorkbook.Save

End Sub

Private Sub Workbook_Open()
    Dim NewWorkbook As Boolean
    Dim cProp

'--- Open template
    If InStr(LCase(ActiveWorkbook.Name), "template") > 0 Or _
       LCase(Right(ActiveWorkbook.Name, 5)) = ".xltm" Then
            Exit Sub
    End If

    NewWorkbook = False

    For Each cProp In ActiveWorkbook.CustomDocumentProperties
        If cProp.Name = "DocNew" Then
            If cProp.Value Then
                NewWorkbook = True
            End If
        End If
    Next cProp

    If NewWorkbook Then
        Call subNewWorkbook
        On Error Resume Next
        ActiveWorkbook.CustomDocumentProperties("DocNew").Delete
        Err.Clear
        Call Integration.GetDMInfo
    Else
        Call Integration.GetDMInfo
    End If
    Range("A1").Select
End Sub



Attribute VB_Name = "modGetProfileInfo"
Option Explicit

Public Sub GetProfileInfoReference()
    
    Dim DMData As New CDMInfo
    Dim DocNumber As String
    Dim LibraryName As String
    Dim Version As String
    Dim DocRef As String
'    Dim cUserName As String
'    Dim cPimaryGroup As String
    
    
    On Error Resume Next
'--- Hent data fra DM
    DMData.DocFileName = ThisWorkbook.FullName
    DocNumber = DMData.GetDocumentNumber
    LibraryName = DMData.GetLibraryName
    Version = DMData.GetVersion

    If Len(DocNumber) > 0 And Len(LibraryName) > 0 Then
        On Error Resume Next
        DocRef = ThisWorkbook.CustomDocumentProperties("DocRef")
    
        If DocRef = DocNumber & "-" & Right(DMData.GetVersion, Len(DMData.GetVersion) - 1) Then
            Exit Sub
        Else
            modUpdateFields.DeletePropertiesReference
            DocRef = DocNumber & "-" & Right(DMData.GetVersion, Len(DMData.GetVersion) - 1)
            Err.Clear
            ThisWorkbook.CustomDocumentProperties.Add Name:="DocRef", LinkToContent:=False, _
                Value:=DocRef, Type:=msoPropertyTypeString
            ActiveSheet.PageSetup.LeftFooter = DocRef
                
        End If
    End If
    Err.Clear
End Sub
Attribute VB_Name = "modUpdateFields"
Sub DeletePropertiesReference()
    '--- sletter prop og oppretter p|fffd|nytt pga. slipper |fffd| teste om prop. evt. er slettet

    For Each cProp In ActiveWorkbook.CustomDocumentProperties
        If cProp.Name = "DocReference" Then
                ActiveWorkbook.CustomDocumentProperties(cProp.Name).Delete
        End If
    Next cProp
End Sub



INQUEST-PP=macro
