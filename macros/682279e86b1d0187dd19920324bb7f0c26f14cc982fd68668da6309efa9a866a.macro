Attribute VB_Name = "Clearing"
Sub clearAll()


End Sub
Attribute VB_Name = "Crossfields"
Sub PlausCheck()
'Schleife erfasst alle Kapitel bis 13 nach dem Prinzip X.Y Wobei X das Kapitel und Y das Unterkapitel ist
'XOR zwischen Yes, NA, No erfasst alle nicht ordentlich gef|fffd|llten und Listet diese im String
Dim iCount As Variant
Plaustext = ""
For i = 2 To 15

        For j = 1 To 13

         YES_KK_Name = "KK_" & i & "_" & j & "_YES"
         NA_KK_Name = "KK_" & i & "_" & j & "_NA"
         NO_KK_Name = "KK_" & i & "_" & j & "_NO"
         On Error Resume Next ' Automatische Fehlerbehebung (nicht vorhandene KK_Name's |fffd|berspringen)
         If ActiveDocument.Bookmarks.Exists(YES_KK_Name) And ActiveDocument.Bookmarks.Exists(NA_KK_Name) And ActiveDocument.Bookmarks.Exists(NO_KK_Name) Then
         a1 = ActiveDocument.FormFields(YES_KK_Name).CheckBox.Value
         a2 = ActiveDocument.FormFields(NA_KK_Name).CheckBox.Value
         a3 = ActiveDocument.FormFields(NO_KK_Name).CheckBox.Value
         If Not (a1 Xor a2 Xor a3) Then Plaustext = Plaustext & "; " & i & "." & j
         End If
         Next j
         
       Next i
       
       
       'Ausnahmen, die mit der Schleife nicht erfasst werden k|fffd|nnen:
       
       'Punkt 10: Keine Unterkapitel
       b1 = ActiveDocument.FormFields("KK_10_YES").CheckBox.Value
       b2 = ActiveDocument.FormFields("KK_10_NA").CheckBox.Value
       b3 = ActiveDocument.FormFields("KK_10_NO").CheckBox.Value
       If Not (b1 Xor b2 Xor b3) Then Plaustext = Plaustext & "; 10"
       'Punkt 15.5.1
       b21 = ActiveDocument.FormFields("KK_15_5_1_YES").CheckBox.Value
       b22 = ActiveDocument.FormFields("KK_15_5_1_NO").CheckBox.Value
       If Not (b21 Xor b22) Then Plaustext = Plaustext & "; 15.5.1"
        'Punkt 15.5.2: Zus|fffd|tzliches Unterkapitel
       b11 = ActiveDocument.FormFields("KK_15_5_2_YES").CheckBox.Value
       b12 = ActiveDocument.FormFields("KK_15_5_2_NA").CheckBox.Value
       b13 = ActiveDocument.FormFields("KK_15_5_2_NO").CheckBox.Value
       If Not (b11 Xor b12 Xor b13) Then Plaustext = Plaustext & "; 15.5.2"
       'Schleife l|fffd|uftz nur bis 13 wegen der Ausnahmen
       c1 = ActiveDocument.FormFields("KK_16_1_YES").CheckBox.Value
       c2 = ActiveDocument.FormFields("KK_16_1_NA").CheckBox.Value
       c3 = ActiveDocument.FormFields("KK_16_1_NO").CheckBox.Value
       If Not (c1 Xor c2 Xor c3) Then Plaustext = Plaustext & "; 16.1"

       If Plaustext <> "" Then MsgBox "At following chapters the plausibility is not given: " & Plaustext, vbCritical Else MsgBox "Plausibility Check positiv"

'Check for Report Degree

iCount = 0
For i = 1 To 4
    If ActiveDocument.FormFields("KK_17_2_X" & CStr(i)).CheckBox.Value = True Then iCount = iCount + 1
Next i
If iCount = 0 Then
    MsgBox "There is no Evaluation mark given at Chapter 17.2", vbCritical, "Attention!"
ElseIf iCount > 1 Then
    MsgBox "There are more boxes marked at Chapter 17.2", vbCritical, "Attention!"
End If

End Sub
' YES vorhandene bzw. kompatible KontrollK|fffd|stchen ankreuzen

Private Sub Alle_Yes()
'MsgBox "All Yes"

If MsgBox("This command will automatically mark with YES all relevant boxes by reseting the already marked values. Do you want to continue?", vbYesNo, "Attention!") = vbYes Then
    For i = 1 To 17
        For j = 1 To 13
         YES_KK_Name = "KK_" & i & "_" & j & "_YES"
         NO_KK_Name = "KK_" & i & "_" & j & "_NO"
         NA_KK_Name = "KK_" & i & "_" & j & "_NA"
         On Error Resume Next ' Automatische Fehlerbehebung (nicht vorhandene KK_Name's |fffd|berspringen)
         ActiveDocument.FormFields(YES_KK_Name).CheckBox.Value = True
         ActiveDocument.FormFields(NO_KK_Name).CheckBox.Value = False
         ActiveDocument.FormFields(NA_KK_Name).CheckBox.Value = False
         
        Next j
    Next i
    
ActiveDocument.FormFields("KK_15_5_1_YES").CheckBox.Value = False
ActiveDocument.FormFields("KK_15_5_1_NO").CheckBox.Value = True
ActiveDocument.FormFields("KK_15_5_2_YES").CheckBox.Value = True

MsgBox "Action successfully completed. All relevant boxes were marked with YES", vbOKOnly, "System message:"
End If
End Sub

Sub PVT()
'MsgBox "PVT's"
On Error GoTo Endex
If ActiveDocument.FormFields("KK_8_1_X1").CheckBox.Value = True Then
    ActiveDocument.FormFields("KK_8_1_NA").CheckBox.Value = True
    ActiveDocument.FormFields("KK_8_2_NA").CheckBox.Value = True
    ActiveDocument.FormFields("KK_8_3_NA").CheckBox.Value = True
    ActiveDocument.FormFields("KK_8_4_NA").CheckBox.Value = True
    ActiveDocument.FormFields("KK_8_5_NA").CheckBox.Value = True
    ActiveDocument.FormFields("KK_8_6_NA").CheckBox.Value = True
    ActiveDocument.FormFields("KK_8_7_NA").CheckBox.Value = True
    ActiveDocument.FormFields("KK_8_1_NO").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_2_NO").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_3_NO").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_4_NO").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_5_NO").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_6_NO").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_7_NO").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_1_YES").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_2_YES").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_3_YES").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_4_YES").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_5_YES").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_6_YES").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_7_YES").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_1_YES").Select
    MsgBox "All Chapter 8 clauses were marked with N/A", vbOKOnly, "System message:"
End If
            
If ActiveDocument.FormFields("KK_8_1_X1").CheckBox.Value = False Then
    ActiveDocument.FormFields("KK_8_1_NA").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_2_NA").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_3_NA").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_4_NA").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_5_NA").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_6_NA").CheckBox.Value = False
    ActiveDocument.FormFields("KK_8_7_NA").CheckBox.Value = False
    
    ActiveDocument.FormFields("KK_8_1_YES").Select
    MsgBox "All Chapter 8 N/A boxes were UNMARKED", vbOKOnly, "System message:"
End If

Endex:

End Sub
Attribute VB_Name = "Data"
Sub Data_SAPList()
Pfad = ThisDocument.Path
SAP_Liste = Pfad & "\SAP_Liste.xls"




End Sub


Sub Aktualisieren()
Dim teil As Range
  Application.ScreenUpdating = False
  ActiveDocument.Repaginate
  For Each teil In ActiveDocument.StoryRanges
    teil.Fields.Update
    While Not (teil.NextStoryRange Is Nothing)
      Set teil = teil.NextStoryRange
      teil.Fields.Update
    Wend
  Next
  Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Edit"
Sub CopyTDS()
       Dim TM As String
       Dim tempx As Integer
       tempx = TDS_Zaehlen
       a = tempx
       
       If ActiveDocument.ProtectionType <> wdNoProtection Then
        ActiveDocument.Unprotect Password:="ic1" 'Type:=wdAllowOnlyFormFields, NoReset:=True,
       End If
       
        If ActiveDocument.Bookmarks.Exists("TDS_Start" & a) = True And ActiveDocument.Bookmarks.Exists("TDS_Ende" & a) = True Then
        With ActiveDocument
          .Range(.Bookmarks("TDS_Start" & a).Range.Start, .Bookmarks("TDS_Ende" & a).Range.End).Select
        End With
        End If
        Selection.Copy
    Selection.GoTo What:=wdGoToBookmark, Name:="TDS_Ende" & a
    'Selection.TypeParagraph
    With ActiveDocument.Bookmarks
        .Add Range:=Selection.Range, Name:="TDS_Start" & a + 1
        .DefaultSorting = wdSortByName
        .ShowHidden = False
    End With
    Selection.PasteAndFormat (wdFormatOriginalFormatting)
        With ActiveDocument.Bookmarks
        .Add Range:=Selection.Range, Name:="TDS_Ende" & a + 1
        .DefaultSorting = wdSortByName
        .ShowHidden = False
    End With
    ActiveDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True, Password:="ic1"
    
MsgBox "A new Test Data Sheet(TDS) was added after the last one.", vbOKOnly, "System information:"

End Sub
Sub CancelTDS()
    Dim tempx As Integer
       tempx = TDS_Zaehlen
       a = tempx
       If a = 1 Then MsgBox "Only 1 Test Data Sheet available. It's not possible to delete the TDS.", vbCritical
       If a > 1 Then
            ActiveDocument.Unprotect Password:="ic1" 'Type:=wdAllowOnlyFormFields, NoReset:=True,
             If ActiveDocument.Bookmarks.Exists("TDS_Start" & a) = True And ActiveDocument.Bookmarks.Exists("TDS_Ende" & a) = True Then
               With ActiveDocument
               .Range(.Bookmarks("TDS_Start" & a).Range.Start, .Bookmarks("TDS_Ende" & a).Range.End).Select
               End With
             End If
                Selection.Delete
                ActiveDocument.Bookmarks("TDS_Start" & a).Delete
                ActiveDocument.Bookmarks("TDS_Ende" & a).Delete
            
             ActiveDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True, Password:="ic1"
        MsgBox "The last Test Data Sheet(TDS) was deleted.", vbOKOnly, "System information:"
        End If
End Sub

Function TDS_Zaehlen()
For a = 10 To 1 Step -1
If ActiveDocument.Bookmarks.Exists("TDS_Start" & a) = True Then GoTo 1
Next a
1:
 TDS_Zaehlen = a
End Function

Sub Unprot()
            If ActiveDocument.ProtectionType <> wdNoProtection Then
            MsgBox ("The document is now unprotected. Use this mode only in exceptional cases. It's not allowed to delete or overwrite 'textfields' (grey colored). After changing the document use the protect-Button to fill in. ")
            ActiveDocument.Unprotect Password:="ic1" 'Type:=wdAllowOnlyFormFields, NoReset:=True,
            End If
End Sub

Sub Prot()
            If ActiveDocument.ProtectionType = wdNoProtection Then
            MsgBox ("The document is now protected. ")
            ActiveDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True, Password:="ic1"
            End If
End Sub

Attribute VB_Name = "FindingsHolen"
Sub FindingsHolen()
Dim FText As String
FText = ""
If ActiveDocument.FormFields("kk_2_1_NO").CheckBox.Value = True Then FText = FText & "; 2.1"
If ActiveDocument.FormFields("kk_2_2_NO").CheckBox.Value = True Then FText = FText & "; 2.2"
If ActiveDocument.FormFields("kk_2_3_NO").CheckBox.Value = True Then FText = FText & "; 2.3"
If ActiveDocument.FormFields("kk_2_4_NO").CheckBox.Value = True Then FText = FText & "; 2.4"
If ActiveDocument.FormFields("kk_2_5_NO").CheckBox.Value = True Then FText = FText & "; 2.5"
If ActiveDocument.FormFields("kk_2_6_NO").CheckBox.Value = True Then FText = FText & "; 2.6"
If ActiveDocument.FormFields("kk_2_7_NO").CheckBox.Value = True Then FText = FText & "; 2.7"

If ActiveDocument.FormFields("kk_3_1_NO").CheckBox.Value = True Then FText = FText & "; 3.1"
If ActiveDocument.FormFields("kk_3_2_NO").CheckBox.Value = True Then FText = FText & "; 3.2"
If ActiveDocument.FormFields("kk_3_3_NO").CheckBox.Value = True Then FText = FText & "; 3.3"
If ActiveDocument.FormFields("kk_3_4_NO").CheckBox.Value = True Then FText = FText & "; 3.4"
If ActiveDocument.FormFields("kk_3_5_NO").CheckBox.Value = True Then FText = FText & "; 3.5"
If ActiveDocument.FormFields("kk_3_6_NO").CheckBox.Value = True Then FText = FText & "; 3.6"
If ActiveDocument.FormFields("kk_3_7_NO").CheckBox.Value = True Then FText = FText & "; 3.7"
If ActiveDocument.FormFields("kk_3_8_NO").CheckBox.Value = True Then FText = FText & "; 3.8"
If ActiveDocument.FormFields("kk_3_9_NO").CheckBox.Value = True Then FText = FText & "; 3.9"
If ActiveDocument.FormFields("kk_3_10_NO").CheckBox.Value = True Then FText = FText & "; 3.10"
If ActiveDocument.FormFields("kk_3_11_NO").CheckBox.Value = True Then FText = FText & "; 3.11"
If ActiveDocument.FormFields("kk_3_12_NO").CheckBox.Value = True Then FText = FText & "; 3.12"

If ActiveDocument.FormFields("kk_4_1_NO").CheckBox.Value = True Then FText = FText & "; 4.1"
If ActiveDocument.FormFields("kk_4_2_NO").CheckBox.Value = True Then FText = FText & "; 4.2"
If ActiveDocument.FormFields("kk_4_3_NO").CheckBox.Value = True Then FText = FText & "; 4.3"
If ActiveDocument.FormFields("kk_4_4_NO").CheckBox.Value = True Then FText = FText & "; 4.4"
If ActiveDocument.FormFields("kk_4_5_NO").CheckBox.Value = True Then FText = FText & "; 4.5"
If ActiveDocument.FormFields("kk_4_6_NO").CheckBox.Value = True Then FText = FText & "; 4.6"
If ActiveDocument.FormFields("kk_4_7_NO").CheckBox.Value = True Then FText = FText & "; 4.7"
If ActiveDocument.FormFields("kk_4_8_NO").CheckBox.Value = True Then FText = FText & "; 4.8"
If ActiveDocument.FormFields("kk_4_9_NO").CheckBox.Value = True Then FText = FText & "; 4.9"
If ActiveDocument.FormFields("kk_4_10_NO").CheckBox.Value = True Then FText = FText & "; 4.10"

If ActiveDocument.FormFields("kk_6_1_NO").CheckBox.Value = True Then FText = FText & "; 6.1"
If ActiveDocument.FormFields("kk_6_2_NO").CheckBox.Value = True Then FText = FText & "; 6.2"
If ActiveDocument.FormFields("kk_6_3_NO").CheckBox.Value = True Then FText = FText & "; 6.3"
If ActiveDocument.FormFields("kk_6_4_NO").CheckBox.Value = True Then FText = FText & "; 6.4"
If ActiveDocument.FormFields("kk_6_5_NO").CheckBox.Value = True Then FText = FText & "; 6.5"
If ActiveDocument.FormFields("kk_6_6_NO").CheckBox.Value = True Then FText = FText & "; 6.6"

If ActiveDocument.FormFields("kk_7_1_NO").CheckBox.Value = True Then FText = FText & "; 7.1"
If ActiveDocument.FormFields("kk_7_2_NO").CheckBox.Value = True Then FText = FText & "; 7.2"

If ActiveDocument.FormFields("kk_8_1_NO").CheckBox.Value = True Then FText = FText & "; 8.1"
If ActiveDocument.FormFields("kk_8_2_NO").CheckBox.Value = True Then FText = FText & "; 8.2"
If ActiveDocument.FormFields("kk_8_3_NO").CheckBox.Value = True Then FText = FText & "; 8.3"
If ActiveDocument.FormFields("kk_8_4_NO").CheckBox.Value = True Then FText = FText & "; 8.4"
If ActiveDocument.FormFields("kk_8_5_NO").CheckBox.Value = True Then FText = FText & "; 8.5"
If ActiveDocument.FormFields("kk_8_6_NO").CheckBox.Value = True Then FText = FText & "; 8.6"
If ActiveDocument.FormFields("kk_8_7_NO").CheckBox.Value = True Then FText = FText & "; 8.7"

If ActiveDocument.FormFields("kk_10_NO").CheckBox.Value = True Then FText = FText & "; 10"

If ActiveDocument.FormFields("kk_12_1_NO").CheckBox.Value = True Then FText = FText & "; 12.1"
If ActiveDocument.FormFields("kk_12_2_NO").CheckBox.Value = True Then FText = FText & "; 12.2"
If ActiveDocument.FormFields("kk_12_3_NO").CheckBox.Value = True Then FText = FText & "; 12.3"
If ActiveDocument.FormFields("kk_12_4_NO").CheckBox.Value = True Then FText = FText & "; 12.4"

If ActiveDocument.FormFields("kk_14_1_NO").CheckBox.Value = True Then FText = FText & "; 14.1"
If ActiveDocument.FormFields("kk_14_2_NO").CheckBox.Value = True Then FText = FText & "; 14.2"
If ActiveDocument.FormFields("kk_14_3_NO").CheckBox.Value = True Then FText = FText & "; 14.3"
If ActiveDocument.FormFields("kk_14_4_NO").CheckBox.Value = True Then FText = FText & "; 14.4"
If ActiveDocument.FormFields("kk_14_5_NO").CheckBox.Value = True Then FText = FText & "; 14.5"
If ActiveDocument.FormFields("kk_14_6_NO").CheckBox.Value = True Then FText = FText & "; 14.6"

If ActiveDocument.FormFields("kk_15_1_NO").CheckBox.Value = True Then FText = FText & "; 15.1"
If ActiveDocument.FormFields("kk_15_2_NO").CheckBox.Value = True Then FText = FText & "; 15.2"
If ActiveDocument.FormFields("kk_15_3_NO").CheckBox.Value = True Then FText = FText & "; 15.3"
If ActiveDocument.FormFields("kk_15_4_NO").CheckBox.Value = True Then FText = FText & "; 15.4"
If ActiveDocument.FormFields("kk_15_5_1_YES").CheckBox.Value = True And ActiveDocument.FormFields("kk_15_5_2_NO").CheckBox.Value = True Then FText = FText & "; 15.5.2"
If ActiveDocument.FormFields("kk_16_1_NO").CheckBox.Value = True Then FText = FText & "; 16.1"

If FText <> "" Then FText = "Findings: " & Right(FText, (Len(FText) - 1))
If FText = "" Then FText = "No Findings"
ActiveDocument.FormFields("FindingsALL").Result = FText
End Sub
Attribute VB_Name = "Import"
Attribute VB_Base = "0{3732D86F-2775-4419-840C-7D052E6C29B3}{CAE4A514-2CCA-46A9-8BF5-49F4402229DB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click() 'Search old Report
Dim x1Temp
x1Temp = LadenNeu2()
x1Temp = Data_Holen
End Sub

Private Sub CommandButton2_Click() 'OK create new report
If TextBox9.Value <> "" Then x1Temp = Fuellen() Else MsgBox ("Please fill in the 'New Inspection Date' (coloured field) ")

End Sub

Private Sub CommandButton3_Click()
TextBox1 = ""
TextBox2 = ""
TextBox3 = ""
TextBox4 = ""
TextBox5 = ""
TextBox6 = ""
TextBox7 = ""
TextBox9 = ""
TextBox11 = ""
TextBox12 = ""
TextBox13 = ""
TextBox14 = ""
TextBox15 = ""
Import.NeuerName.Caption = ""
Import.Hide
Erase DatensatzAlterBericht ' Array leeren Younes 27.04.2016

End Sub

Private Sub CommandButton4_Click()
If ThisDocument.ProtectionType <> wdNoProtection Then ThisDocument.Unprotect Password:="ic1"    'Type:=wdAllowOnlyFormFields, NoReset:=True,
AnzahlFields = ActiveDocument.FormFields.Count
For abc = 1 To AnzahlFields
On Error Resume Next
'If abc = 400 Then
'X = X4
'End If

If ActiveDocument.FormFields(abc).Name <> "" Then
On Error Resume Next
'atest = ActiveDocument.FormFields(abc).Name
If ActiveDocument.FormFields(abc).Name = "TT_INFO_PB1" Then Inf_Start = abc
If ActiveDocument.FormFields(abc).Name = "TT_INFO_PB31_31" Then Inf_Ende = abc

If ActiveDocument.FormFields(abc).Name = "TT_FIND_PB1" Then Find_Start = abc
If ActiveDocument.FormFields(abc).Name = "FindingsALL" Then Find_Start2 = abc
If ActiveDocument.FormFields(abc).Name = "TT_FIND_PB24_24" Then Find_Ende = abc

If ActiveDocument.FormFields(abc).Name = "TT_PVT_CB1" Then PVT_Start = abc
If ActiveDocument.FormFields(abc).Name = "TT_PVT_CB20_20" Then PVT_Ende = abc

If ActiveDocument.FormFields(abc).Name = "KK_RT_X1" Then Tds_Start = abc
If ActiveDocument.FormFields(abc).Name = "TT_RT_TE97" Then Tds_Ende = abc

If ActiveDocument.FormFields(abc).Name = "TT_10_TE1" Then Korrektur_Start = abc
  
    
    
End If

2:
Next
If Find_Start > 0 Then Import.TextBox10 = Import.TextBox10 & "S"
If Find_Ende > 0 Then Import.TextBox10 = Import.TextBox10 & "E"
If Inf_Start > 0 Then Import.TextBox14 = Import.TextBox14 & "S"
If Inf_Ende > 0 Then Import.TextBox14 = Import.TextBox14 & "E"
If Korrektur_Start > 0 Then Import.TextBox13 = Import.TextBox13 & "S"
If PVT_Start > 0 Then Import.TextBox15 = Import.TextBox15 & "S"
If PVT_Ende > 0 Then Import.TextBox15 = Import.TextBox15 & "E"

If Tds_Start > 0 Then Import.TextBox11 = Import.TextBox11 & "S"
If Tds_Ende > 0 Then Import.TextBox11 = Import.TextBox11 & "E"


End Sub


Private Sub CommandButton5_Click()

Dim FirstBit As String
Dim SecondBit As String
Dim LenDatenPuffer As String
        
If Import.TextBox9.Text <> "" Then

If ThisDocument.ProtectionType <> wdNoProtection Then ThisDocument.Unprotect Password:="ic1"    'Type:=wdAllowOnlyFormFields, NoReset:=True,

'YOUNES Makro to new report
'fill out the new report
'On Error Resume Next

AnzahlFields = ActiveDocument.FormFields.Count


If AnzahlFields > UBound(DatensatzAlterBericht) Then
a_max = AnzahlFields
Else
a_max = UBound(DatensatzAlterBericht)
End If

On Error Resume Next
  
 a = 1
 Do While (DatensatzAlterBericht(a, 1) <> "FindingsALL")
 
Select Case Left(DatensatzAlterBericht(a, 1), 9)

'Repr1
     Case Is = "TT_1_2_TE"
     If Import.CheckBox1.Value = True Then ActiveDocument.FormFields(DatensatzAlterBericht(a, 1)).Result = DatensatzAlterBericht(a, 3)
'Repr2
     Case Is = "TT_1_3_TE"
     If Import.CheckBox2.Value = True Then ActiveDocument.FormFields(DatensatzAlterBericht(a, 1)).Result = DatensatzAlterBericht(a, 3)
     
'Sonstige Textfelder
     Case Else
    If DatensatzAlterBericht(a, 2) = 70 Then ActiveDocument.FormFields(DatensatzAlterBericht(a, 1)).Result = DatensatzAlterBericht(a, 3)
End Select
    
  
    If Import.CheckBox3.Value = True Then
    If DatensatzAlterBericht(a, 2) = 71 Then ActiveDocument.FormFields(DatensatzAlterBericht(a, 1)).CheckBox.Value = DatensatzAlterBericht(a, 3)
    End If
a = a + 1
Loop

'************************************************************************************
'zum Ausf|fffd|llen der (Findings, Informative, Test Data Sheet)-Pages 'Younes 2016-04-25*
' nach Anmerkungen von SK & GLM *****************************************************
'************************************************************************************

For i = a To a_max

'FindingsPage
If Import.CheckBox7.Value = True Then
If DatensatzAlterBericht(i, 1) = "TT_FIND_PB1" Then

 ReportNew_FindingRowCounter = ActiveDocument.Tables(21).Rows.Count   'Anzahl der Zeilen in der Tabelle
    For n_fin = 2 To (2 * (ReportNew_FindingRowCounter)) ' mal 2 wegen 2 Spalten: Anzahl der Felder = 2 * Anzahl der Zeilen, n ab 2 wegen "FindingAll-Feld"
    
        If DatensatzAlterBericht(i + (n_fin - 2), 1) = "TT_INFO_PB1" Then
            Exit For
        Else
        
            LenDatenPuffer = Len(DatensatzAlterBericht(i + (n_fin - 2), 3))
            
        
            If LenDatenPuffer > 255 Then
                FirstBit = Left(DatensatzAlterBericht(i + (n_fin - 2), 3), 255)
                SecondBit = Mid(DatensatzAlterBericht(i + (n_fin - 2), 3), 256, LenDatenPuffer - 255)
                ActiveDocument.Tables(21).Range.FormFields(n_fin).Result = FirstBit
                Selection.GoTo What:=wdGoToBookmark, Name:=ActiveDocument.Tables(21).Range.FormFields(n_fin).Name
                  If ActiveDocument.ProtectionType = wdNoProtection Then ActiveDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True
                If ActiveDocument.ProtectionType <> wdNoProtection Then ActiveDocument.Unprotect
                    Selection.InsertAfter SecondBit
                    ActiveDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True
                Else
                    ActiveDocument.Tables(21).Range.FormFields(n_fin).Result = DatensatzAlterBericht(i + (n_fin - 2), 3)
                End If
            End If

    Next n_fin
    
End If
End If
'InfoPage
Dim check_Info As Boolean
'MsgBox check_Info
If Import.CheckBox5.Value = True Then
If check_Info = False Then
If DatensatzAlterBericht(i, 1) = "TT_INFO_PB1" Then

check_Info = True
ReportNew_InfoRowCounter = ActiveDocument.Tables(22).Rows.Count   'Anzahl der Zeilen in der Tabelle
    For n_inf = 1 To (2 * (ReportNew_InfoRowCounter)) ' mal 2 wegen 2 Spalten: Anzahl der Felder = 2 * Anzahl der Zeilen

        If DatensatzAlterBericht(i + (n_inf - 1), 1) = "TT_PVT_CB1" Then
            Exit For
        Else
            LenDatenPuffer = Len(DatensatzAlterBericht(i + (n_inf - 1), 3))
            
       
            If LenDatenPuffer > 255 Then
                FirstBit = Left(DatensatzAlterBericht(i + (n_inf - 1), 3), 255)
                SecondBit = Mid(DatensatzAlterBericht(i + (n_inf - 1), 3), 256, LenDatenPuffer - 255)
                ActiveDocument.Tables(22).Range.FormFields(n_inf).Result = FirstBit
                Selection.GoTo What:=wdGoToBookmark, Name:=ActiveDocument.Tables(22).Range.FormFields(n_inf).Name
                If ActiveDocument.ProtectionType = wdNoProtection Then ActiveDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True
                If ActiveDocument.ProtectionType <> wdNoProtection Then ActiveDocument.Unprotect
                    Selection.InsertAfter SecondBit
                    ActiveDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True
                Else
                    ActiveDocument.Tables(22).Range.FormFields(n_inf).Result = DatensatzAlterBericht(i + (n_inf - 1), 3)
                End If
            End If
   
    Next n_inf
 
End If
Else
End If
End If

'Test Data sheet PVT-Page
If Import.CheckBox6.Value = True Then
 If DatensatzAlterBericht(i, 1) = "TT_PVT_CB1" Then
 
ReportNew_PVTRowCounter = ActiveDocument.Tables(23).Rows.Count   'Anzahl der Zeilen in der Tabelle
    For n_PVT = 1 To (2 * (ReportNew_PVTRowCounter)) ' mal 2 wegen 2 Spalten: Anzahl der Felder = 2 * Anzahl der Zeilen

        If DatensatzAlterBericht(i + (n_PVT - 1), 1) = "KK_RT_X1" Then
            Exit For
        Else
            LenDatenPuffer = Len(DatensatzAlterBericht(i + (n_PVT - 1), 3))
            
       
            If LenDatenPuffer > 255 Then
                FirstBit = Left(DatensatzAlterBericht(i + (n_PVT - 1), 3), 255)
                SecondBit = Mid(DatensatzAlterBericht(i + (n_PVT - 1), 3), 256, LenDatenPuffer - 255)
                ActiveDocument.Tables(23).Range.FormFields(n_PVT).Result = FirstBit
                Selection.GoTo What:=wdGoToBookmark, Name:=ActiveDocument.Tables(23).Range.FormFields(n_PVT).Name
                If ActiveDocument.ProtectionType = wdNoProtection Then ActiveDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True
                If ActiveDocument.ProtectionType <> wdNoProtection Then ActiveDocument.Unprotect
                    Selection.InsertAfter SecondBit
                    ActiveDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True
                Else
                    ActiveDocument.Tables(23).Range.FormFields(n_PVT).Result = DatensatzAlterBericht(i + (n_PVT - 1), 3)
                End If
            End If
   
    Next n_PVT
 
End If
End If

 'Test Data sheet Routine Test-Page
If Import.CheckBox6.Value = True Then

If DatensatzAlterBericht(i, 1) = "TT_RT_TE7" Then ActiveDocument.FormFields("TT_RT_TE7").Result = DatensatzAlterBericht(i, 3) ' PM eintragen (Younes 11.07.2016)


If DatensatzAlterBericht(i, 1) = "TT_RT_TE11" Then
 
  i_max = ActiveDocument.Tables(25).Range.FormFields.Count ' Anzahl der Felder in der Tabelle 2. der Test Data sheet Routine Test-Page

    For n_Rou = 1 To i_max
        ActiveDocument.Tables(25).Select
        If DatensatzAlterBericht(i + (n_Rou - 1), 2) = 70 Then ActiveDocument.Tables(25).Range.FormFields(DatensatzAlterBericht(i + (n_Rou - 1), 1)).Result = DatensatzAlterBericht(i + (n_Rou - 1), 3)
        If DatensatzAlterBericht(i + (n_Rou - 1), 2) = 71 Then ActiveDocument.Tables(25).Range.FormFields(n_Rou).CheckBox.Value = DatensatzAlterBericht(i + (n_Rou - 1), 3)
    Next n_Rou

End If
End If

Next i


'Sonderf|fffd|lle
ActiveDocument.FormFields("TT_1_6_TE12b").Result = "" ' Auftragsnummer
ActiveDocument.FormFields("TT_1_6_TE22").Result = ""
ActiveDocument.FormFields("TT_1_6_TE32").Result = ""
ActiveDocument.FormFields("TT_1_6_TE42").Result = ""
ActiveDocument.FormFields("TT_1_6_TE52").Result = ""
ActiveDocument.FormFields("TT_1_6_TE62").Result = ""
ActiveDocument.FormFields("TT_1_6_TE72").Result = ""
ActiveDocument.FormFields("TT_1_7_TE2").Result = Import.TextBox9.Text 'Inspektionsdatum
ActiveDocument.FormFields("KK_5_X1").CheckBox.Value = False 'Punkt 5 Keine Produktion
ActiveDocument.FormFields("KK_5_X2").CheckBox.Value = False 'Punkt 5 Produktion gesehen
ActiveDocument.FormFields("TT_5_0").Result = "" 'Punkt 5 Textfeld
ActiveDocument.FormFields("TT_10_TE1").Result = "" ' Punkt 10
ActiveDocument.FormFields("TT_17_3_TE8").Result = "" ' Punkt 17.3, Dauer der Inspektion

 
  
' save the new report under:
 newReportName = Import.TextBox1.Value & "-" & Format(Import.TextBox9.Value, "YYYY-MM-DD") & ".doc"
 
    ActiveDocument.SaveAs2 FileName:=ActiveDocument.Path & "\" & newReportName, FileFormat:=wdFormatDocument, _
         LockComments:=False, Password:="", AddToRecentFiles:=True, WritePassword _
        :="", ReadOnlyRecommended:=False, EmbedTrueTypeFonts:=False, _
        SaveNativePictureFormat:=False, SaveFormsData:=False, SaveAsAOCELetter:= _
        False, CompatibilityMode:=0
              
    If ThisDocument.ProtectionType = wdNoProtection Then ThisDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True, Password:="ic1"

Call Data.Aktualisieren
ActiveDocument.Save
CommandButton3_Click
Else

MsgBox ("Bitte Geben Sie das Inspektionsdatum ein!")

End If


End Sub

Sub TabellenIdentifizieren()

     Dim i As Integer

     If Not Selection.Information(wdWithInTable) Then
         MsgBox "Der Cursor steht nicht in einer Tabelle"
         Exit Sub
     End If

     If ActiveDocument.Tables.Count < 1 Then
         MsgBox "Das Dokument enth|fffd|lt keine Tabellen."
         Exit Sub
     End If
     
     For i = 1 To ActiveDocument.Tables.Count
         If ActiveDocument.Tables(i).Range.IsEqual(Selection.Tables(1).Range) Then
             MsgBox "Der Cursor steht in Tabelle " & i & "."
             Exit For
         End If
     Next i

 End Sub





Private Sub TextBox9_Change()

If Len(TextBox9.Text) >= 10 Then Import.NeuerName.Caption = TextBox1.Value & "-" & Format(TextBox9, "YYYY-MM-DD") & ".doc"

End Sub


'Younes Makro
'Datum Format anpassen
'Private Sub TextBox9_AfterUpdate()
'TextBox9 = Format(TextBox9, "YYYY-MM-DD")
'End Sub


'Younes Makro
'Eingabe nur auf Datum beschr|fffd|nken
'Private Sub TextBox9_Exit(ByVal Cancel As MSForms.ReturnBoolean)

'If Not IsDate(TextBox9) Then
'TextBox9 = ""
'Cancel = True
'End If

'End Sub
'****************************************************************************************************


Attribute VB_Name = "ImportModul"
'Option Explicit
Public DatensatzAlterBericht() As String ' Younes

Sub BerichtOeffnenUndLaden() 'Mit Men|fffd|leiste gestartet auf Klick
Dim x1Temp
If Import.ChkBox.Value = 0 Then
 
 ' Open the file dialog, neue Prozedure erg|fffd|nzt von Younes 28.04.2016
 Dim X As Variant
 Dim AlterBerichtName As String
 Dim lngCount As Long
 
 X = Application.FileDialog(msoFileDialogOpen).Show

 If X = True Then
    AlterBericht = Application.FileDialog(msoFileDialogOpen).SelectedItems(1)
    AlterBerichtName = Dir(AlterBericht)
    Import.Datei.Caption = AlterBerichtName
    Import.Pfad.Caption = AlterBericht
    Application.Documents.Open CStr(Import.Pfad)
    Call AuslesenAlterBericht
    Import.Show
 Else
    MsgBox "Der Benutzer hat abgebrochen.", vbCritical
 End If

End If

    
End Sub


Public Sub AuslesenAlterBericht()
'Dim DatensatzAlterBericht(2000, 5) As String

AnzahlFields = ActiveDocument.FormFields.Count
ReDim DatensatzAlterBericht(AnzahlFields, 5) As String
Application.ScreenUpdating = False

'***********************************************************
'Einlesen ALLER Daten des alten Berichtes ins Array
For abc = 1 To AnzahlFields
    'If ActiveDocument.FormFields(abc).Name <> "" Then
        On Error Resume Next
        
        DatensatzAlterBericht(abc, 0) = abc
        DatensatzAlterBericht(abc, 1) = ActiveDocument.FormFields(abc).Name
        DatensatzAlterBericht(abc, 2) = ActiveDocument.FormFields(abc).Type
        DatensatzAlterBericht(abc, 3) = ActiveDocument.FormFields(abc).Result
       
        
       
       'DatensatzAlterBericht(abc, 4) = ActiveDocument.FormFields(abc).Name
       'DatensatzAlterBericht(abc, 5) = ActiveDocument.FormFields(abc).Name
   'End If
Next


Dim PVT_Start(6)
Dim PVT_Ende(6)
Dim Tds_Start(5)
Dim Tds_Ende(5)

ZaehlerX = 0

'***********************************************************
'Startmarker finden
For a = 1 To UBound(DatensatzAlterBericht)
        
'*Kopfdaten
        
        
        If DatensatzAlterBericht(a, 1) = "TT_1_6_TE12" Then Import.TextBox1 = DatensatzAlterBericht(a, 3)
        If DatensatzAlterBericht(a, 1) = "TT_1_1_TE1" Then Import.TextBox2 = DatensatzAlterBericht(a, 3)
        If DatensatzAlterBericht(a, 1) = "TT_1_1_TE2" Then Import.TextBox3 = DatensatzAlterBericht(a, 3)
        If DatensatzAlterBericht(a, 1) = "TT_1_1_TE3" Then Import.TextBox4 = DatensatzAlterBericht(a, 3)
        If DatensatzAlterBericht(a, 1) = "TT_1_1_TE4" Then Import.TextBox5 = DatensatzAlterBericht(a, 3)
        If DatensatzAlterBericht(a, 1) = "TT_1_1_TE6" Then Import.TextBox6 = DatensatzAlterBericht(a, 3)
        If DatensatzAlterBericht(a, 1) = "TT_1_7_TE2" Then Import.TextBox7 = DatensatzAlterBericht(a, 3)
        If DatensatzAlterBericht(a, 1) = "TT_1_2_TE1" Then Import.Label5 = DatensatzAlterBericht(a, 3)
        If DatensatzAlterBericht(a, 1) = "TT_1_3_TE1" Then Import.Label6 = DatensatzAlterBericht(a, 3)
'Start / Endmarker
        If DatensatzAlterBericht(a, 1) = "TT_INFO_PB1" Then Inf_Start = a
        If DatensatzAlterBericht(a, 1) = "TT_INFO_PB31_31" Then Inf_Ende = a
        If DatensatzAlterBericht(a, 1) = "TT_FIND_PB1" Then Find_Start = a
        If DatensatzAlterBericht(a, 1) = "FindingsALL" Then Find_Start2 = a
        If DatensatzAlterBericht(a, 1) = "TT_FIND_PB24_24" Then Find_Ende = a
  'Besonderheit TDS / PVT mehrfache Marker
        If DatensatzAlterBericht(a, 1) = "TT_PVT_CB1" Then
           PVT_Start(ZaehlerX1) = a
           ZaehlerX1 = ZaehlerX1 + 1
        End If
        If DatensatzAlterBericht(a, 1) = "TT_PVT_CB20_20" Then
           PVT_Ende(ZaehlerX2) = a
           ZaehlerX2 = ZaehlerX2 + 1
        End If
        If DatensatzAlterBericht(a, 1) = "KK_RT_X1" Then
            Tds_Start(ZaehlerX3) = a
            ZaehlerX3 = ZaehlerX3 + 1
        End If
        If DatensatzAlterBericht(a, 1) = "TT_RT_TE97" Then
            Tds_Ende(ZaehlerX4) = a
            ZaehlerX4 = ZaehlerX4 + 1
        End If
        
        
        
       
        
        If DatensatzAlterBericht(a, 1) = "TT_10_TE1" Then Korrektur_Start = a

Next a

'Application.ScreenUpdating = True

'*****************
'Younes Makro
' Z|fffd|hlen der zeilen der Infopage, der Findingspage  und der PVT's-Page

'Finding's Page Tabelle-Index 21
'Info Page Tabelle-Index 22
'PVT's Page Tabelle-Index 23 or 24

'!!!! wichtig: man muss 1 abziehen wegen erste Zeile der Tabelle

'*********************************************************************
'ReportOld_Finding
ReportOld_FindingRowCounter = ActiveDocument.Tables(21).Rows.Count
'ReportOld_Info
ReportOld_InfoRowCounter = ActiveDocument.Tables(22).Rows.Count
'ReportOld_PVT
ReportOld_PVTRowCounter = ActiveDocument.Tables(23).Rows.Count
'**************************************************************
'*******************************************************************
'ActiveDocument.Close SaveChanges:=False ' von KRM
'MsgBox ActiveDocument.Name
Application.Documents(ActiveDocument.Name).Close (Word.WdSaveOptions.wdDoNotSaveChanges) ' von Younes 28.04.216
'*******************************************************************
'*******************************************************************

'Younes Makro weiter
'ReportNew_Finding
ReportNew_FindingRowCounter = ActiveDocument.Tables(21).Rows.Count
'ReportNew_Info
ReportNew_InfoRowCounter = ActiveDocument.Tables(22).Rows.Count
'ReportNew_PVT
ReportNew_PVTRowCounter = ActiveDocument.Tables(23).Rows.Count
'**************************************************************
' Younes Weiter:
' Vergleich routine

'Finding
If ReportOld_FindingRowCounter - 1 > ReportNew_FindingRowCounter - 1 Then Call addRow(21, (ReportOld_FindingRowCounter - ReportNew_FindingRowCounter))

'Info
If ReportOld_InfoRowCounter - 1 > ReportNew_InfoRowCounter - 1 Then Call addRow(22, (ReportOld_InfoRowCounter - ReportNew_InfoRowCounter))

'PVT's
If ReportOld_PVTRowCounter - 1 > ReportNew_PVTRowCounter - 1 Then Call addRow(23, (ReportOld_PVTRowCounter - ReportNew_PVTRowCounter))



End Sub



Function addRow(Tabelle As Integer, Anzahl As Integer)
If ThisDocument.ProtectionType <> wdNoProtection Then ThisDocument.Unprotect Password:="ic1"    'Type:=wdAllowOnlyFormFields, NoReset:=True,
For a = 1 To Anzahl
'abc = 449
'ActiveDocument.FormFields(abc).Select
    With ActiveDocument.Tables(Tabelle)
        .Rows(.Rows.Count).Select
        .Rows.Add BeforeRow:=Selection.Rows(1)
    End With
     Selection.FormFields.Add Range:=Selection.Range, Type:=wdFieldFormTextInput
     Selection.MoveRight Unit:=wdCell
     Selection.FormFields.Add Range:=Selection.Range, Type:=wdFieldFormTextInput
     
Next a
If ThisDocument.ProtectionType = wdNoProtection Then ThisDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True, Password:="ic1"
End Function


Sub Test123()
xa = addRow(21, 5)
xb = addRow(22, 3)

End Sub
''Younes: 28.04.2016
Function SonderzeichenWeg(ByVal var As String) As String
     Dim i As Integer
     Dim varohne As String
     Const c_Sonder As String = " -.,_:;#+|fffd|'*?=)(/&%$|fffd|!~\}][{"
     MsgBox (c_Sonder)
     For i = 1 To Len(c_Sonder)
         var = Replace(var, Mid(c_Sonder, i, 1), "_")
     Next i
     SonderzeichenWeg = var
 End Function

 Sub test()

     Dim s As String
     Dim a As String
     s = ("bla bla =$%&??")
     a = SonderzeichenWeg(s)
     MsgBox (s)
     MsgBox (a)

 End Sub
Attribute VB_Name = "LadeModul"
Sub LadenNeu() 'Mit Men|fffd|leiste gestartet
Dim x1Temp
x1Temp = LadenNeu2()
x1Temp = Data_Holen
'Import.Show
End Sub

Function LadenNeu2()
MsgBox ("Laden Neu")
If Import.ChkBox.Value = 0 Then
    Dim dlgDatei As Dialog
    Set dlgDatei = Dialogs(wdDialogFileOpen)
    With dlgDatei
        If .Display() Then
        AlterBerichtName = .Name
        AlterBericht = CurDir() & "\" & .Name
        Import.Datei.Caption = AlterBerichtName
        Import.Pfad.Caption = AlterBericht
        
    Else
    MsgBox "Der Benutzer hat abgebrochen.", vbCritical
    End If
    End With
    
End If
End Function

Function Data_Holen()
MsgBox ("Data Holen")

If Import.Label2 <> "" Then
    Application.Documents.Open CStr(Import.Pfad)
    FSTNummer = ActiveDocument.FormFields("TT_1_6_TE12").Range.Text
    FSTName = ActiveDocument.FormFields("TT_1_1_TE1").Range.Text
    FSTStr = ActiveDocument.FormFields("TT_1_1_TE2").Range.Text
    FSTPlz = ActiveDocument.FormFields("TT_1_1_TE3").Range.Text
    FSTOrt = ActiveDocument.FormFields("TT_1_1_TE4").Range.Text
    FSTLand = ActiveDocument.FormFields("TT_1_1_TE6").Range.Text
    FSTDatum = ActiveDocument.FormFields("TT_1_7_TE2").Range.Text
    Repraesentant1 = ActiveDocument.FormFields("TT_1_2_TE1").Range.Text
    Repraesentant2 = ActiveDocument.FormFields("TT_1_3_TE1").Range.Text
    
    Import.Label5 = Repraesentant1
    Import.Label6 = Repraesentant2
    Import.TextBox1 = FSTNummer
    Import.TextBox2 = FSTName
    Import.TextBox3 = FSTStr
    Import.TextBox4 = FSTPlz
    Import.TextBox5 = FSTOrt
    Import.TextBox6 = FSTLand
    Import.TextBox7 = FSTDatum
End If

End Function

Function Fuellen()
Dim AnzahlFields
Import.NeuerName = Import.TextBox1 & "-" & Import.TextBox9 & "-1"
AnzahlFields = ActiveDocument.FormFields.Count
If ThisDocument.ProtectionType <> wdNoProtection Then ThisDocument.Unprotect Password:="ic1"    'Type:=wdAllowOnlyFormFields, NoReset:=True,

ThisDocument.FormFields("TT_1_1_TE1").Result = ActiveDocument.FormFields("TT_1_1_TE1").Result 'FST-Daten
ThisDocument.FormFields("TT_1_1_TE2").Result = ActiveDocument.FormFields("TT_1_1_TE2").Result 'FST-
ThisDocument.FormFields("TT_1_1_TE3").Result = ActiveDocument.FormFields("TT_1_1_TE3").Result 'FST-
ThisDocument.FormFields("TT_1_1_TE4").Result = ActiveDocument.FormFields("TT_1_1_TE4").Result 'FST-
ThisDocument.FormFields("TT_1_1_TE5").Result = ActiveDocument.FormFields("TT_1_1_TE5").Result 'FST-
ThisDocument.FormFields("TT_1_1_TE6").Result = ActiveDocument.FormFields("TT_1_1_TE6").Result 'FST-
ThisDocument.FormFields("TT_1_1_TE7").Result = ActiveDocument.FormFields("TT_1_1_TE7").Result 'FST-
ThisDocument.FormFields("TT_1_6_TE12").Result = ActiveDocument.FormFields("TT_1_6_TE12").Result 'FST-Nummer
ThisDocument.FormFields("TT_1_7_TE2").Result = Import.TextBox9 'Datum aus Userform Import
ThisDocument.FormFields("TT_1_7_TE1").Result = ActiveDocument.FormFields("TT_1_7_TE1").Result 'Inspektor

'******************************************************************************************
'Represenant 1
If Import.CheckBox1 = True Then 'Represenant 1
    ThisDocument.FormFields("TT_1_2_TE1").Result = ActiveDocument.FormFields("TT_1_2_TE1").Result
    ThisDocument.FormFields("TT_1_2_TE2").Result = ActiveDocument.FormFields("TT_1_2_TE2").Result
    ThisDocument.FormFields("TT_1_2_TE3").Result = ActiveDocument.FormFields("TT_1_2_TE3").Result
    ThisDocument.FormFields("TT_1_2_TE4").Result = ActiveDocument.FormFields("TT_1_2_TE4").Result
    ThisDocument.FormFields("TT_1_2_TE5").Result = ActiveDocument.FormFields("TT_1_2_TE5").Result
    ThisDocument.FormFields("TT_1_2_TE6").Result = ActiveDocument.FormFields("TT_1_2_TE6").Result
    ThisDocument.FormFields("TT_1_2_TE7").Result = ActiveDocument.FormFields("TT_1_2_TE7").Result
    ThisDocument.FormFields("TT_1_2_TE8").Result = ActiveDocument.FormFields("TT_1_2_TE8").Result
    ThisDocument.FormFields("TT_1_2_TE9").Result = ActiveDocument.FormFields("TT_1_2_TE9").Result
End If


'******************************************************************************************
'Represenant 2
If Import.CheckBox2 = True Then
    ThisDocument.FormFields("TT_1_3_TE1").Result = ActiveDocument.FormFields("TT_1_3_TE1").Result
    ThisDocument.FormFields("TT_1_3_TE2").Result = ActiveDocument.FormFields("TT_1_3_TE2").Result
    ThisDocument.FormFields("TT_1_3_TE3").Result = ActiveDocument.FormFields("TT_1_3_TE3").Result
    ThisDocument.FormFields("TT_1_3_TE4").Result = ActiveDocument.FormFields("TT_1_3_TE4").Result
    ThisDocument.FormFields("TT_1_3_TE5").Result = ActiveDocument.FormFields("TT_1_3_TE5").Result
    ThisDocument.FormFields("TT_1_3_TE6").Result = ActiveDocument.FormFields("TT_1_3_TE6").Result
    ThisDocument.FormFields("TT_1_3_TE7").Result = ActiveDocument.FormFields("TT_1_3_TE7").Result
    ThisDocument.FormFields("TT_1_3_TE8").Result = ActiveDocument.FormFields("TT_1_3_TE8").Result
    ThisDocument.FormFields("TT_1_3_TE9").Result = ActiveDocument.FormFields("TT_1_3_TE9").Result
End If
    
    
'******************************************************************************************
'Crosses
If Import.CheckBox3 = True Then
    AlteDaten = ActiveDocument.FormFields("KK_1_3_X1").CheckBox.Value
    NeueDaten = ThisDocument.FormFields("KK_1_3_X1").CheckBox.Value
    ThisDocument.FormFields("KK_1_3_X1").CheckBox.Value = AlteDaten
    ThisDocument.FormFields("KK_1_3_X1").CheckBox.Value = True

        For i = 1 To 17
            For j = 1 To 13
                YES_KK_Name = "KK_" & i & "_" & j & "_YES"
                NA_KK_Name = "KK_" & i & "_" & j & "_NA"
                NO_KK_Name = "KK_" & i & "_" & j & "_NO"
            On Error Resume Next ' Automatische Fehlerbehebung (nicht vorhandene KK_Name's |fffd|berspringen)
            ThisDocument.FormFields(YES_KK_Name).CheckBox.Value = ActiveDocument.FormFields(YES_KK_Name).CheckBox.Value
            ThisDocument.FormFields(NA_KK_Name).CheckBox.Value = ActiveDocument.FormFields(NA_KK_Name).CheckBox.Value
            ThisDocument.FormFields(NO_KK_Name).CheckBox.Value = ActiveDocument.FormFields(NO_KK_Name).CheckBox.Value
            Next j
         Next i
         'manuelle Kreuze (Unterpunkte etc)
            ThisDocument.FormFields("KK_10_YES").CheckBox.Value = ActiveDocument.FormFields("KK_10_YES").CheckBox.Value
            ThisDocument.FormFields("KK_10_NA").CheckBox.Value = ActiveDocument.FormFields("KK_10_NA").CheckBox.Value
            ThisDocument.FormFields("KK_10_NO").CheckBox.Value = ActiveDocument.FormFields("KK_10_NO").CheckBox.Value
            ThisDocument.FormFields("KK_15_5_1_YES").CheckBox.Value = ActiveDocument.FormFields("KK_15_5_1_YES").CheckBox.Value
            ThisDocument.FormFields("KK_15_5_1_NO").CheckBox.Value = ActiveDocument.FormFields("KK_15_5_1_NO").CheckBox.Value
            ThisDocument.FormFields("KK_15_5_2_YES").CheckBox.Value = ActiveDocument.FormFields("KK_15_5_2_YES").CheckBox.Value
            ThisDocument.FormFields("KK2_1_4_X1").CheckBox.Value = ActiveDocument.FormFields("KK2_1_4_X1").CheckBox.Value
            ThisDocument.FormFields("KK3_1_4_X2").CheckBox.Value = ActiveDocument.FormFields("KK3_1_4_X2").CheckBox.Value
            ThisDocument.FormFields("KK4_1_4_X3").CheckBox.Value = ActiveDocument.FormFields("KK4_1_4_X3").CheckBox.Value
            ThisDocument.FormFields("KK5_1_4_X4").CheckBox.Value = ActiveDocument.FormFields("KK5_1_4_X4").CheckBox.Value
            ThisDocument.FormFields("KK6_1_4_X5").CheckBox.Value = ActiveDocument.FormFields("KK6_1_4_X5").CheckBox.Value
            ThisDocument.FormFields("KK7_1_4_X6").CheckBox.Value = ActiveDocument.FormFields("KK7_1_4_X6").CheckBox.Value
            ThisDocument.FormFields("KK_2_2_X1").CheckBox.Value = ActiveDocument.FormFields("KK_2_2_X1").CheckBox.Value
            ThisDocument.FormFields("KK_2_2_X2").CheckBox.Value = ActiveDocument.FormFields("KK_2_2_X2").CheckBox.Value
            ThisDocument.FormFields("KK_2_2_X3").CheckBox.Value = ActiveDocument.FormFields("KK_2_2_X3").CheckBox.Value
            ThisDocument.FormFields("KK_2_2_X4").CheckBox.Value = ActiveDocument.FormFields("KK_2_2_X4").CheckBox.Value
            ThisDocument.FormFields("KK_2_2_X5").CheckBox.Value = ActiveDocument.FormFields("KK_2_2_X5").CheckBox.Value
            ThisDocument.FormFields("KK_2_2_X6").CheckBox.Value = ActiveDocument.FormFields("KK_2_2_X6").CheckBox.Value
            ThisDocument.FormFields("KK_2_2_X7").CheckBox.Value = ActiveDocument.FormFields("KK_2_2_X7").CheckBox.Value
            ThisDocument.FormFields("KK_2_2_X8").CheckBox.Value = ActiveDocument.FormFields("KK_2_2_X8").CheckBox.Value
            ThisDocument.FormFields("KK_2_2_X9").CheckBox.Value = ActiveDocument.FormFields("KK_2_2_X9").CheckBox.Value
            ThisDocument.FormFields("KK_2_2_X10").CheckBox.Value = ActiveDocument.FormFields("KK_2_2_X10").CheckBox.Value
            ThisDocument.FormFields("KK_2_2_X11").CheckBox.Value = ActiveDocument.FormFields("KK_2_2_X11").CheckBox.Value
            ThisDocument.FormFields("KK_2_2_X12").CheckBox.Value = ActiveDocument.FormFields("KK_2_2_X12").CheckBox.Value
            ThisDocument.FormFields("KK_3_8_X1").CheckBox.Value = ActiveDocument.FormFields("KK_3_8_X1").CheckBox.Value
            ThisDocument.FormFields("KK_3_8_X2").CheckBox.Value = ActiveDocument.FormFields("KK_3_8_X2").CheckBox.Value
            ThisDocument.FormFields("KK_3_8_X3").CheckBox.Value = ActiveDocument.FormFields("KK_3_8_X3").CheckBox.Value
            ThisDocument.FormFields("KK_3_8_X4").CheckBox.Value = ActiveDocument.FormFields("KK_3_8_X4").CheckBox.Value
            ThisDocument.FormFields("KK_3_8_X5").CheckBox.Value = ActiveDocument.FormFields("KK_3_8_X5").CheckBox.Value
            ThisDocument.FormFields("KK_3_8_X6").CheckBox.Value = ActiveDocument.FormFields("KK_3_8_X6").CheckBox.Value
            ThisDocument.FormFields("KK_4_2_X1").CheckBox.Value = ActiveDocument.FormFields("KK_4_2_X1").CheckBox.Value
            ThisDocument.FormFields("KK_4_2_X2").CheckBox.Value = ActiveDocument.FormFields("KK_4_2_X2").CheckBox.Value
            ThisDocument.FormFields("KK_4_4_X1").CheckBox.Value = ActiveDocument.FormFields("KK_4_4_X1").CheckBox.Value
            ThisDocument.FormFields("KK_4_4_X2").CheckBox.Value = ActiveDocument.FormFields("KK_4_4_X2").CheckBox.Value
            ThisDocument.FormFields("KK_4_4_X3").CheckBox.Value = ActiveDocument.FormFields("KK_4_4_X3").CheckBox.Value
            ThisDocument.FormFields("KK_4_4_X4").CheckBox.Value = ActiveDocument.FormFields("KK_4_4_X4").CheckBox.Value
            ThisDocument.FormFields("KK_4_4_X5").CheckBox.Value = ActiveDocument.FormFields("KK_4_4_X5").CheckBox.Value
            ThisDocument.FormFields("KK_6_1_X1").CheckBox.Value = ActiveDocument.FormFields("KK_6_1_X1").CheckBox.Value
            ThisDocument.FormFields("KK_6_1_X2").CheckBox.Value = ActiveDocument.FormFields("KK_6_1_X2").CheckBox.Value
            ThisDocument.FormFields("KK_6_1_X3").CheckBox.Value = ActiveDocument.FormFields("KK_6_1_X3").CheckBox.Value
            ThisDocument.FormFields("KK_6_1_X4").CheckBox.Value = ActiveDocument.FormFields("KK_6_1_X4").CheckBox.Value
            ThisDocument.FormFields("KK_6_1_X5").CheckBox.Value = ActiveDocument.FormFields("KK_6_1_X5").CheckBox.Value
            ThisDocument.FormFields("KK_6_2_X1").CheckBox.Value = ActiveDocument.FormFields("KK_6_2_X1").CheckBox.Value
            ThisDocument.FormFields("KK_6_2_X2").CheckBox.Value = ActiveDocument.FormFields("KK_6_2_X2").CheckBox.Value
            ThisDocument.FormFields("KK_6_2_X3").CheckBox.Value = ActiveDocument.FormFields("KK_6_2_X3").CheckBox.Value
            ThisDocument.FormFields("KK_6_2_X4").CheckBox.Value = ActiveDocument.FormFields("KK_6_2_X4").CheckBox.Value
            ThisDocument.FormFields("KK_8_1_X1").CheckBox.Value = ActiveDocument.FormFields("KK_8_1_X1").CheckBox.Value
            ThisDocument.FormFields("KK_8_1_X2").CheckBox.Value = ActiveDocument.FormFields("KK_8_1_X2").CheckBox.Value
            ThisDocument.FormFields("KK_8_1_X3").CheckBox.Value = ActiveDocument.FormFields("KK_8_1_X3").CheckBox.Value
            ThisDocument.FormFields("KK_8_1_X4").CheckBox.Value = ActiveDocument.FormFields("KK_8_1_X4").CheckBox.Value
            ThisDocument.FormFields("KK_8_1_X5").CheckBox.Value = ActiveDocument.FormFields("KK_8_1_X5").CheckBox.Value
            ThisDocument.FormFields("KK_8_1_X6").CheckBox.Value = ActiveDocument.FormFields("KK_8_1_X6").CheckBox.Value
            ThisDocument.FormFields("KK_8_1_X7").CheckBox.Value = ActiveDocument.FormFields("KK_8_1_X7").CheckBox.Value
            ThisDocument.FormFields("KK_8_1_X8").CheckBox.Value = ActiveDocument.FormFields("KK_8_1_X8").CheckBox.Value
            ThisDocument.FormFields("KK_8_1_X9").CheckBox.Value = ActiveDocument.FormFields("KK_8_1_X9").CheckBox.Value
            ThisDocument.FormFields("KK_11_X1").CheckBox.Value = ActiveDocument.FormFields("KK_11_X1").CheckBox.Value
            ThisDocument.FormFields("KK_11_X2").CheckBox.Value = ActiveDocument.FormFields("KK_11_X2").CheckBox.Value
            ThisDocument.FormFields("KK_11_X3").CheckBox.Value = ActiveDocument.FormFields("KK_11_X3").CheckBox.Value
            ThisDocument.FormFields("KK_11_X4").CheckBox.Value = ActiveDocument.FormFields("KK_11_X4").CheckBox.Value
            ThisDocument.FormFields("KK_15_1_X1").CheckBox.Value = ActiveDocument.FormFields("KK_15_1_X1").CheckBox.Value
            ThisDocument.FormFields("KK_15_1_X2").CheckBox.Value = ActiveDocument.FormFields("KK_15_1_X2").CheckBox.Value
            ThisDocument.FormFields("KK_15_1_X3").CheckBox.Value = ActiveDocument.FormFields("KK_15_1_X3").CheckBox.Value
            ThisDocument.FormFields("KK_15_1_X4").CheckBox.Value = ActiveDocument.FormFields("KK_15_1_X4").CheckBox.Value
            ThisDocument.FormFields("KK_15_1_X5").CheckBox.Value = ActiveDocument.FormFields("KK_15_1_X5").CheckBox.Value
            ThisDocument.FormFields("KK_15_1_X6").CheckBox.Value = ActiveDocument.FormFields("KK_15_1_X6").CheckBox.Value
            ThisDocument.FormFields("KK_15_1_X7").CheckBox.Value = ActiveDocument.FormFields("KK_15_1_X7").CheckBox.Value
            ThisDocument.FormFields("KK_14_2_X1").CheckBox.Value = ActiveDocument.FormFields("KK_14_2_X1").CheckBox.Value
            ThisDocument.FormFields("KK_14_2_X2").CheckBox.Value = ActiveDocument.FormFields("KK_14_2_X2").CheckBox.Value
            ThisDocument.FormFields("KK_14_3_X1").CheckBox.Value = ActiveDocument.FormFields("KK_14_3_X1").CheckBox.Value
            ThisDocument.FormFields("KK_14_3_X2").CheckBox.Value = ActiveDocument.FormFields("KK_14_3_X2").CheckBox.Value
            ThisDocument.FormFields("KK_14_4_X1").CheckBox.Value = ActiveDocument.FormFields("KK_14_4_X1").CheckBox.Value
            ThisDocument.FormFields("KK_14_4_X2").CheckBox.Value = ActiveDocument.FormFields("KK_14_4_X2").CheckBox.Value
            
End If


'******************************************************************************************
'marker f|fffd|r weitere Bearbeitung und Auslesen des Dokumentes

'Altes Dokument Auslesen Marker
Dim atest As String
For abc = 1 To AnzahlFields
    If ActiveDocument.FormFields(abc).Name <> "" Then
        On Error Resume Next
        If ActiveDocument.FormFields(abc).Name = "TT_INFO_PB1" Then Inf_Start = abc
        If ActiveDocument.FormFields(abc).Name = "TT_INFO_PB31_31" Then Inf_Ende = abc
        If ActiveDocument.FormFields(abc).Name = "TT_FIND_PB1" Then Find_Start = abc
        If ActiveDocument.FormFields(abc).Name = "FindingsALL" Then Find_Start2 = abc
        If ActiveDocument.FormFields(abc).Name = "TT_FIND_PB24_24" Then Find_Ende = abc
        If ActiveDocument.FormFields(abc).Name = "TT_PVT_CB1" Then PVT_Start = abc
        If ActiveDocument.FormFields(abc).Name = "TT_PVT_CB20_20" Then PVT_Ende = abc
        If ActiveDocument.FormFields(abc).Name = "KK_RT_X1" Then Tds_Start = abc
        If ActiveDocument.FormFields(abc).Name = "TT_RT_TE97" Then Tds_Ende = abc
        If ActiveDocument.FormFields(abc).Name = "TT_10_TE1" Then Korrektur_Start = abc
    End If
Next



'Neues Dokument Auslesen der Marker
'Neues Dokument: Variablen mit NEU
For abc = 1 To ThisDocument.FormFields.Count
    If ThisDocument.FormFields(abc).Name <> "" Then
        On Error Resume Next
        If ThisDocument.FormFields(abc).Name = "TT_INFO_PB1" Then Neu_Inf_Start = abc
        If ThisDocument.FormFields(abc).Name = "TT_INFO_PB31_31" Then Neu_Inf_Ende = abc
        If ThisDocument.FormFields(abc).Name = "TT_FIND_PB1" Then Neu_Find_Start = abc
        If ThisDocument.FormFields(abc).Name = "FindingsALL" Then Neu_Find_Start2 = abc
        If ThisDocument.FormFields(abc).Name = "TT_FIND_PB24_24" Then Neu_Find_Ende = abc
        If ThisDocument.FormFields(abc).Name = "TT_PVT_CB1" Then Neu_PVT_Start = abc
        If ThisDocument.FormFields(abc).Name = "TT_PVT_CB20_20" Then Neu_PVT_Ende = abc
        If ThisDocument.FormFields(abc).Name = "KK_RT_X1" Then Neu_TDS_Start = abc
        If ThisDocument.FormFields(abc).Name = "TT_RT_TE97" Then Neu_TDS_Ende = abc
        If ThisDocument.FormFields(abc).Name = "TT_10_TE1" Then Neu_Korrektur_Start = abc
    End If
Next


'******************************************************************************************
If Import.CheckBox5 = True Then 'Informative
    If Inf_Start And Inf_Ende <> "" Then
        
        'InfoSeite des neuen Dokumentes hat gleich oder mehr freie Pl|fffd|tze
        If Inf_Ende - Inf_Start <= Neu_Inf_Ende - Neu_Inf_Start Then
            For abc = Inf_Start To Inf_Ende
                ThisDocument.FormFields(Neu_Inf_Start + (abc - Inf_Start)).Result = ActiveDocument.FormFields(abc).Result
            Next abc
        End If
        
        'InfoSeite des neuen Dokumentes hat WENIGER Pl|fffd|tze
        If Inf_Ende - Inf_Start > Neu_Inf_Ende - Neu_Inf_Start Then
            For abc = Inf_Start To Neu_Inf_Ende
                ThisDocument.FormFields(Neu_Inf_Start + (abc - Inf_Start)).Result = ActiveDocument.FormFields(abc).Result
            Next abc
        'Platzhalter: Einf|fffd|gen von Zellen f|fffd|r die Infos
        
        End If

    End If
End If


'******************************************************************************************
If Import.CheckBox6 = True Then 'PVT und Routine TDS Copy
End If

If Import.CheckBox7 = True Then 'Findings to findings
    If Find_Start2 And Find_Ende <> "" Then
        
        'Findings des neuen Dokumentes hat gleich oder mehr freie Pl|fffd|tze
        If Find_Ende - Find_Start2 <= Neu_Find_Ende - Neu_Find_Start2 Then
            For abc = Find_Start2 To Find_Ende
                ThisDocument.FormFields(Neu_Find_Start2 + (abc - Find_Start2)).Result = ActiveDocument.FormFields(abc).Result
            Next abc
        End If
        
        'Findings des neuen Dokumentes hat WENIGER Pl|fffd|tze
        'Platzhalter: Einf|fffd|gen von Zellen f|fffd|r die Infos
        

    End If
End If

'End If


'******************************************************************************************
'If Import.CheckBox5 = True Then 'Findings zu Chapter 10
'End If


'Platzhalter CA Chapter 10
'TT_10_TE1
'
'
'Platzhalter Start Findings:
'TT_FIND_PB1 bzw findingsALL    Letzter: TT_FIND_PB24_24
'Platzhalter Informative:
'TT_INFO_PB1   -    LETZTER TT_INFO_PB31_31
'Platzhalter TDS PVT1
'TT_PVT_CB1
'Platzhalter TDS 100%
'KK_RT_X1


If ThisDocument.ProtectionType = wdNoProtection Then ThisDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True, Password:="ic1"
NeuerName = Import.NeuerName
ThisDocument.SaveAs2 NeuerName
     
Import.Hide
    
End Function

Attribute VB_Name = "Modul1"



Function fillOut()

'YOUNES Makro to new report
'fill out the new report
'On Error Resume Next

AnzahlFields = ActiveDocument.FormFields.Count


'!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
'nicht ausf|fffd|hren!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
'
'!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

If AnzahlFields > UBound(DatensatzAlterBericht) Then
a_max = AnzahlFields
Else
a_max = UBound(DatensatzAlterBericht)
End If

On Error Resume Next
  
 a = 1
 Do While (DatensatzAlterBericht(a, 1) <> "FindingsALL")

    If DatensatzAlterBericht(a, 2) = 70 Then ActiveDocument.FormFields(DatensatzAlterBericht(a, 1)).Result = DatensatzAlterBericht(a, 3)
    
    
    If Import.CheckBox3.Value = True Then
    If DatensatzAlterBericht(a, 2) = 71 Then ActiveDocument.FormFields(DatensatzAlterBericht(a, 1)).CheckBox.Value = DatensatzAlterBericht(a, 3)
    End If
    
 If DatensatzAlterBericht(a, 1) = "TT_1_1_TE7" Then GoTo StepRep1
   
StepRep1:
If Import.CheckBox1.Value = False Then
i = 1
For ai = 1 To a_max
' Representative 1
  If (DatensatzAlterBericht(ai, 1) = "TT_1_2_TE" & i) Then
  ActiveDocument.FormFields(DatensatzAlterBericht(ai, 1)).Result = ""
  i = i + 1
  End If
  Next ai
  
  Else
GoTo StepRep2
End If


StepRep2:
If Import.CheckBox2.Value = False Then
i = 1
For ai = 1 To a_max
' Representative 1
  If (DatensatzAlterBericht(ai, 1) = "TT_1_3_TE" & i) Then
  ActiveDocument.FormFields(DatensatzAlterBericht(ai, 1)).Result = ""
  i = i + 1
    End If
  Next ai
  Else
GoTo StepRep3
End If



StepRep3:

'************************


For i = 1 To a_max
On Error Resume Next

ActiveDocument.FormFields(i).Select
NameTemp = ActiveDocument.FormFields(i).Name
        
For a = 1 To a_max
 
 'FindingsPage
If Import.CheckBox7.Value = True Then
 If ((NameTemp = "TT_FIND_PB1") And (DatensatzAlterBericht(a, 1) = "TT_FIND_PB1")) Then
 
    ReportNew_FindingRowCounter = ActiveDocument.Tables(21).Rows.Count   'Anzahl der Zeilen in der Tabelle
    For n = 2 To (2 * (ReportNew_FindingRowCounter)) ' mal 2 wegen 2 Spalten: Anzahl der Felder = 2 * Anzahl der Zeilen, n ab 2 wegen "FindingAll-Feld"
       ActiveDocument.Tables(21).Range.FormFields(n).Result = DatensatzAlterBericht(a + (n - 2), 3)
    Next n
 
End If
End If

 'InfoPage
If Import.CheckBox5.Value = True Then
 If ((NameTemp = "TT_INFO_PB1") And (DatensatzAlterBericht(a, 1) = "TT_INFO_PB1")) Then
 
    ReportNew_InfoRowCounter = ActiveDocument.Tables(22).Rows.Count   ' Anzahl der Zeilen in der Tabelle
    For n = 1 To (2 * (ReportNew_InfoRowCounter)) ' mal 2 wegen 2 Spalten: Anzahl der Felder = 2 * Anzahl der Zeilen
       ActiveDocument.Tables(22).Range.FormFields(n).Result = DatensatzAlterBericht(a + (n - 1), 3)
    Next n
 
End If
End If

 'PVT-Page
If Import.CheckBox6.Value = True Then
 If ((NameTemp = "TT_PVT_CB1") And (DatensatzAlterBericht(a, 1) = "TT_PVT_CB1")) Then
 
    ReportNew_PVTRowCounter = ActiveDocument.Tables(23).Rows.Count   'Anzahl der Zeilen in der Tabelle
    For n = 1 To (2 * (ReportNew_PVTRowCounter)) ' mal 2 wegen 2 Spalten: Anzahl der Felder = 2 * Anzahl der Zeilen
       ActiveDocument.Tables(23).Range.FormFields(n).Result = DatensatzAlterBericht(a + (n - 1), 3)
    Next n
 
End If
End If

  Next a
  Next i


'For a = 1 To 2000
'On Error Resume Next
  
 'a = 1
 'Do While (DatensatzAlterBericht(a, 1) <> "FindingsALL")
 
 
  'If DatensatzAlterBericht(a, 2) = 70 Then
  'ActiveDocument.FormFields(DatensatzAlterBericht(a, 1)).Result = DatensatzAlterBericht(a, 3)
  'End If
  
  'If (DatensatzAlterBericht(a, 1) = "TT_1_2_TE1") Then a = a + 10
  
  
  'ActiveDocument.FormFields(DatensatzAlterBericht(a, 1)).Result = DatensatzAlterBericht(a, 3)
  
  'If Import.CheckBox3.Value = True Then
   ' If DatensatzAlterBericht(a, 2) = 71 Then ActiveDocument.FormFields(DatensatzAlterBericht(a, 1)).CheckBox.Value = DatensatzAlterBericht(a, 3)
  'End If
  
'If Import.CheckBox1.Value = True Then GoTo jmp
'jmp:  a = a + 1
 
 'Loop

 
  
  'If DatensatzAlterBericht(a, 1) = "FindingsALL" Then
  
 ' MsgBox DatensatzAlterBericht(a, 0)
  
 ' End If
  
  
  'MsgBox DatensatzAlterBericht(a, 0)
  'If DatensatzAlterBericht(a, 2) = 70 Then ActiveDocument.FormFields(DatensatzAlterBericht(a, 1)).Result = DatensatzAlterBericht(a, 3)
  
  'If DatensatzAlterBericht(a, 2) = 71 Then ActiveDocument.FormFields(DatensatzAlterBericht(a, 1)).CheckBox.Value = DatensatzAlterBericht(a, 3)
  
  'If a = AnzahlFields Then
  'MsgBox a
  'Exit For
'End If


 ' Next a
 
End Function
Attribute VB_Name = "Modul2"
Sub TabellenIdentifizieren()

     Dim i As Integer

     If Not Selection.Information(wdWithInTable) Then
         MsgBox "Der Cursor steht nicht in einer Tabelle"
         Exit Sub
     End If

     If ActiveDocument.Tables.Count < 1 Then
         MsgBox "Das Dokument enth|fffd|lt keine Tabellen."
         Exit Sub
     End If
     
     For i = 1 To ActiveDocument.Tables.Count
         If ActiveDocument.Tables(i).Range.IsEqual(Selection.Tables(1).Range) Then
             MsgBox "Der Cursor steht in Tabelle " & i & "."
             Exit For
         End If
     Next i

 End Sub

Sub test()

Dim n As Long
'n = ActiveDocument.Tables(22).Range.FormFields.Count
'MsgBox n
n = 100
For i = 1 To n

ActiveDocument.Tables(22).Range.FormFields(i).Select
MsgBox i
MsgBox ActiveDocument.Tables(22).Range.FormFields(i).Name
Next i



End Sub

Attribute VB_Name = "NewMacros"
Sub Zellen_einfuegen()
Attribute Zellen_einfuegen.VB_ProcData.VB_Invoke_Func = "Project.NewMacros.Zellen_einfuegen"
'
' Zellen_einfuegen Makro
'
'ThisDocument.FormFields(Neu_Inf_Start + (abc - Inf_Start)).Result = ActiveDocument.FormFields(abc).Result
ThisDocument.FormFields("TT_FIND_PB4").Select

Dim TM As String
       Dim tempx As Integer
       tempx = TDS_Zaehlen
       a = tempx
       
    If ActiveDocument.ProtectionType <> wdNoProtection Then ActiveDocument.Unprotect Password:="ic1"
       
        'If ActiveDocument.Bookmarks.Exists("TDS_Start" & a) = True And ActiveDocument.Bookmarks.Exists("TDS_Ende" & a) = True Then
            With ThisDocument
              .Range(.Bookmarks("TT_FIND_PB4").Range.Start, .Bookmarks("TT_FIND_PB4_4").Range.End).Select
            End With
        'End If
        Selection.Copy
        Selection.GoTo What:=wdGoToBookmark, Name:="TT_FIND_PB4" & a
        With ActiveDocument.Bookmarks
            .Add Range:=Selection.Range, Name:="TDS_Start" & a + 1
            .DefaultSorting = wdSortByName
            .ShowHidden = False
        End With
        Selection.PasteAndFormat (wdFormatOriginalFormatting)
            With ActiveDocument.Bookmarks
            .Add Range:=Selection.Range, Name:="TDS_Ende" & a + 1
            .DefaultSorting = wdSortByName
            .ShowHidden = False
        End With
    ActiveDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True, Password:="ic1"
End Sub
Attribute VB_Name = "Rechtschreib"
Sub Rechtschreibpruefung()



End Sub
Attribute VB_Name = "ResetCrossFields"

' Alle vorhandene bzw. kompatible KontrollK|fffd|stchen zur|fffd|cksetzen

Sub Alle_KK_zuruecksetzen()
'MsgBox "KK zur|fffd|cksetzen"
If MsgBox("This command will automatically UNMARK all relevant boxes by reseting the already marked values. Do you want to continue?", vbYesNo, "Attention!") = vbYes Then

 For i = 1 To 17
    For j = 1 To 13
        YES_KK_Name = "KK_" & i & "_" & j & "_YES"
        NA_KK_Name = "KK_" & i & "_" & j & "_NA"
        NO_KK_Name = "KK_" & i & "_" & j & "_NO"

        On Error Resume Next ' Automatische Fehlerbehebung (nicht vorhandene KK_Name's |fffd|berspringen)

        If ActiveDocument.FormFields(YES_KK_Name).CheckBox.Value = True Then ActiveDocument.FormFields(YES_KK_Name).CheckBox.Value = False
        If ActiveDocument.FormFields(NA_KK_Name).CheckBox.Value = True Then ActiveDocument.FormFields(NA_KK_Name).CheckBox.Value = False
        If ActiveDocument.FormFields(NO_KK_Name).CheckBox.Value = True Then ActiveDocument.FormFields(NO_KK_Name).CheckBox.Value = False
        
    Next j

 Next i
 
ActiveDocument.FormFields("KK_15_5_1_YES").CheckBox.Value = False
ActiveDocument.FormFields("KK_15_5_1_NO").CheckBox.Value = False
ActiveDocument.FormFields("KK_15_5_2_YES").CheckBox.Value = False

MsgBox "Action successfully completed. All relevant boxes were UNMARKED", vbOKOnly, "System message:"
End If


End Sub

Attribute VB_Name = "SAPListe"
Sub SAPListe()
Dim FST As Double
Dim Check As Integer
Version2:
Pfad = "C:\SAPWorkdir"
SAPDatei = Pfad & "\1.xls"
         On Error GoTo 2 ' Automatische Fehlerbehebung

If Dir(SAPDatei) <> "" Then
       While Check <> 1
       FST = InputBox("FST-No (e.g: 300xxxxx):")
        If FST > 30000000 And FST < 30900000 Then GoTo a1
       xtemp = MsgBox("Invalid number, please enter again the correct FST number", vbOKCancel)
       If xtemp = 2 Then GoTo 2
       Check = 0
       FST = 0
       Wend
a1:
       xtxtx = SAPDatenLesen(CStr(SAPDatei), FST)
       If xtxtx = True Then GoTo 1 Else GoTo Version22
End If
Version22:
SAPDatei = Pfad & "\2.xls"
         On Error GoTo 2 ' Automatische Fehlerbehebung

If Dir(SAPDatei) <> "" Then
       While Check <> 1
       If FST = 0 Then FST = InputBox("FST-No (e.g: 300xxxxx):")
        If FST > 30000000 And FST < 30900000 Then GoTo a11
       xtemp = MsgBox("Invalid number, please enter again the correct FST number", vbOKCancel)
       If xtemp = 2 Then GoTo 2
       Check = 0
       FST = 0
       Wend
a11:
       xtxtx = SAPDatenLesen(CStr(SAPDatei), FST)
       If xtxtx = True Then GoTo 1 Else GoTo Version23
    
End If
Version23:
SAPDatei = Pfad & "\3.xls"
         On Error GoTo 2 ' Automatische Fehlerbehebung

If Dir(SAPDatei) <> "" Then
       While Check <> 1
       If FST = 0 Then FST = InputBox("FST-No (e.g: 300xxxxx):")
        If FST > 30000000 And FST < 30900000 Then GoTo a12
       xtemp = MsgBox("Invalid number, please enter again the correct FST number", vbOKCancel)
       If xtemp = 2 Then GoTo 2
       Check = 0
       FST = 0
       Wend
a12:
       xtxtx = SAPDatenLesen(CStr(SAPDatei), FST)
       If xtxtx = True Then GoTo 1 Else GoTo Version24
    
End If
Version24:
SAPDatei = Pfad & "\4.xls"
         On Error GoTo 2 ' Automatische Fehlerbehebung

If Dir(SAPDatei) <> "" Then
       While Check <> 1
       If FST = 0 Then FST = InputBox("FST-No (e.g: 300xxxxx):")
        If FST > 30000000 And FST < 30900000 Then GoTo a13
       xtemp = MsgBox("Invalid number, please enter again the correct FST number", vbOKCancel)
       If xtemp = 2 Then GoTo 2
       Check = 0
       FST = 0
       Wend
a13:
       xtxtx = SAPDatenLesen(CStr(SAPDatei), FST)
       If xtxtx = True Then GoTo 1 Else GoTo Version1
    
End If


Version1:
Pfad = ThisDocument.Path
SAPDatei = Pfad & "\SAP_List.xls"
If Dir(SAPDatei) <> "" Then
       While Check <> 1
       If FST = 0 Then FST = InputBox("FST-No (e.g: 300xxxxx):")
       If CStr(FST) = "" Then FST = InputBox("FST-No (e.g: 300xxxxx):")
        If FST > 30000000 And FST < 30900000 Then GoTo b1
       xtemp = MsgBox("Invalid number, please enter again the correct FST number", vbOKCancel)
       If xtemp = 2 Then GoTo 2
       Check = 0
       FST = 0
       Wend
b1:
       xtxtx = SAPDatenLesen(CStr(SAPDatei), FST)
       If xtxtx = True Then GoTo 1 Else GoTo c2
    

1: 'Datei existiert, FST eingegeben
    Call Save_As
    Else
c1:     MsgBox "The file SAP_List.xls does not exist within the folder. Please save the SAP Data within a XLS-File name SAP_List.xls and save it in the path " & Pfad & "!!! The filename and the folder must be EXACT like the mentioned."
        GoTo 2
c2:     MsgBox "The SAP-Data for the " & FST & " couldn't be found."
        GoTo 2
        
    
    End If
2:

End Sub



Function SAPDatenLesen(SAPDatei As String, FST As Double) As Boolean
        
    Set oExcelApp = CreateObject("Excel.Application")
    Set oExcelWorkbook = oExcelApp.Workbooks.Open(SAPDatei)

    For a = 1 To 100
        If oExcelWorkbook.Sheets(1).Cells(1, a) = "Material" Or oExcelWorkbook.Sheets(1).Cells(2, a) = "Material" Then SpalteFST = a
        If oExcelWorkbook.Sheets(1).Cells(1, a) = "Name 1" Or oExcelWorkbook.Sheets(1).Cells(2, a) = "Name 1" Then SpalteName = a
        If oExcelWorkbook.Sheets(1).Cells(1, a) = "Stra|fffd|e und Hausnummer" Or oExcelWorkbook.Sheets(1).Cells(2, a) = "Stra|fffd|e/Hausnr" Then SpalteStra|fffd|e = a
        If oExcelWorkbook.Sheets(1).Cells(1, a) = "Lnd" Or oExcelWorkbook.Sheets(1).Cells(2, a) = "Lnd" Then SpalteLand = a
        If oExcelWorkbook.Sheets(1).Cells(1, a) = "Postleitz." Or oExcelWorkbook.Sheets(1).Cells(2, a) = "PLZ" Then SpaltePLZ = a
        If oExcelWorkbook.Sheets(1).Cells(1, a) = "Ort" Or oExcelWorkbook.Sheets(1).Cells(2, a) = "Ort" Then SpalteOrt = a
    Next a
    
    For a = 1 To 10000
    If (oExcelWorkbook.Sheets(1).Cells(a, SpalteFST)) = (FST) Then
        If SpalteName <> "" Then SAPNam = oExcelWorkbook.Sheets(1).Cells(a, SpalteName)
        If SpalteLand <> "" Then SAPLand = oExcelWorkbook.Sheets(1).Cells(a, SpalteLand)
        If SpaltePLZ <> "" Then SAPPlz = oExcelWorkbook.Sheets(1).Cells(a, SpaltePLZ)
        If SpalteOrt <> "" Then SAPOrt = oExcelWorkbook.Sheets(1).Cells(a, SpalteOrt)
        If SpalteStra|fffd|e <> "" Then SAPStr = oExcelWorkbook.Sheets(1).Cells(a, SpalteStra|fffd|e)
        'Auftrag=
    End If
    Next a
    If SAPNam <> "" Then SAPDatenLesen = True Else SAPDatenLesen = False
    'CIG F|fffd|llen
    ActiveDocument.Unprotect Password:="ic1" 'Type:=wdAllowOnlyFormFields, NoReset:=True,
    ThisDocument.FormFields("TT_1_1_TE1").Result = SAPNam
    ThisDocument.FormFields("TT_1_1_TE2").Result = SAPStr
    ThisDocument.FormFields("TT_1_1_TE3").Result = SAPPlz
    ThisDocument.FormFields("TT_1_1_TE4").Result = SAPOrt
    ThisDocument.FormFields("TT_1_1_TE6").Result = SAPLand
    ThisDocument.FormFields("TT_1_6_TE12").Result = FST
    ActiveDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True, Password:="ic1"
    ThisDocument.FormFields("TT_1_1_TE1").Select
    ThisDocument.FormFields("TT_1_1_TE2").Select
    oExcelApp.Workbooks.Close '(SAPDatei)

    oExcelApp.Quit
    Set oExcelApp = Nothing
    
    
End Function
Attribute VB_Name = "SaveAs"
Sub Save_As()
'MsgBox "SaveAS"
Dim Dokumentenname As String
If ActiveDocument.FormFields("TT_1_6_TE12").Result <> "" And ActiveDocument.FormFields("TT_1_7_TE2").Result <> "" Then
Dokumentenname = ActiveDocument.FormFields("TT_1_6_TE12").Result & "-" & ActiveDocument.FormFields("TT_1_7_TE2").Result & "-1"
xtemp = Speichern(Dokumentenname)

GoTo end1
End If

end2:
UserForm1.Show
If UserForm1.TextBox1 <> "" And UserForm1.TextBox2 <> "" Then
    ActiveDocument.FormFields("TT_1_6_TE12").Result = UserForm1.TextBox1
    ActiveDocument.FormFields("TT_1_7_TE2").Result = UserForm1.TextBox2
    Dokumentenname = ActiveDocument.FormFields("TT_1_6_TE12").Result & "-" & ActiveDocument.FormFields("TT_1_7_TE2").Result & "-1"
    xtemp = Speichern(Dokumentenname)
Else
    MsgBox "Please complete both fields in order to continue", vbCritical, "Attention!"
    GoTo end2:
End If


end1:
Dim teil As Range
  Application.ScreenUpdating = False
  ActiveDocument.Repaginate
  For Each teil In ActiveDocument.StoryRanges
    teil.Fields.Update
    While Not (teil.NextStoryRange Is Nothing)
      Set teil = teil.NextStoryRange
      teil.Fields.Update
    Wend
  Next
  Application.ScreenUpdating = True

End Sub


Function Speichern(Fname As String)
'MsgBox "Speichern"
Dim strFileName As String
Dim strPath As String
strPath = ActiveDocument.Path & "\" & Fname & ".docm"
With Dialogs(wdDialogFileSaveAs)
    .Name = strPath
    If .Display <> 0 Then
        strFileName = .Name
        Else
        strFileName = "User Cancelled"
        End If
        End With
        If strFileName <> "User Cancelled" Then ActiveDocument.SaveAs2 (strFileName)
        'MsgBox strFileName
End Function
Attribute VB_Name = "Sprungmarker"
Sub M11()
    Selection.GoTo What:=wdGoToBookmark, Name:="TM11"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M12()
    Selection.GoTo What:=wdGoToBookmark, Name:="TM12"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M16()
    Selection.GoTo What:=wdGoToBookmark, Name:="TM16"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M21()
    Selection.GoTo What:=wdGoToBookmark, Name:="TM21"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M31()
    Selection.GoTo What:=wdGoToBookmark, Name:="TM31"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M41()
    Selection.GoTo What:=wdGoToBookmark, Name:="TM41"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M50()
    Selection.GoTo What:=wdGoToBookmark, Name:="TM50"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M60()
    Selection.GoTo What:=wdGoToBookmark, Name:="TM60"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M70()
    Selection.GoTo What:=wdGoToBookmark, Name:="TM70"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M80()
    Selection.GoTo What:=wdGoToBookmark, Name:="TM80"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M100()
    Selection.GoTo What:=wdGoToBookmark, Name:="TM100"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M110()
    Selection.GoTo What:=wdGoToBookmark, Name:="TM110"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M120()
    Selection.GoTo What:=wdGoToBookmark, Name:="TM120"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M140()
    Selection.GoTo What:=wdGoToBookmark, Name:="TM140"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M150()
    Selection.GoTo What:=wdGoToBookmark, Name:="TM150"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M160()
    Selection.GoTo What:=wdGoToBookmark, Name:="TM160"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M170()
    Selection.GoTo What:=wdGoToBookmark, Name:="TM170"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M_Beanstandungen()
    Selection.GoTo What:=wdGoToBookmark, Name:="TMBeanstandungen"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M_Informative()
    Selection.GoTo What:=wdGoToBookmark, Name:="TMInformative"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M_PVT()
    Selection.GoTo What:=wdGoToBookmark, Name:="TMPVT"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M_Routine()
    Selection.GoTo What:=wdGoToBookmark, Name:="TDS_Start1"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Sub M_Muster()
    Selection.GoTo What:=wdGoToBookmark, Name:="TMMuster"
    With ActiveDocument.Bookmarks
        .DefaultSorting = wdSortByName
        .ShowHidden = True
    End With
End Sub
Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True


Private Sub Document_Open()
'MsgBox "Hallo"
If ActiveDocument.ProtectionType = wdNoProtection Then
ActiveDocument.Protect Type:=wdAllowOnlyFormFields, NoReset:=True, Password:="ic1"
End If

End Sub
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{37181460-3FA9-44F3-B721-998985125616}{190A5EA5-C15F-4AD9-86C1-75E2AC19E968}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
UserForm1.Hide
End Sub

Private Sub UserForm_Activate()
If ActiveDocument.FormFields("TT_1_6_TE12").Result <> "" Then UserForm1.TextBox1 = ActiveDocument.FormFields("TT_1_6_TE12").Result
If ActiveDocument.FormFields("TT_1_7_TE2").Result <> "" Then UserForm1.TextBox2 = ActiveDocument.FormFields("TT_1_7_TE2").Result
End Sub

' InQuest injected base64 decoded content
' zu't

INQUEST-PP=macro
