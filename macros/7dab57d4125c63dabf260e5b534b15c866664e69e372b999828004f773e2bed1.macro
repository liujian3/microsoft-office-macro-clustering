Attribute VB_Name = "BundlingWorksheet"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Change(ByVal Target As Range)
    Dim arrTabOrder As Variant
    Dim i As Long
    Dim protectWorkbook As Boolean
    Dim protectPassword As String
    
    protectWorkbook = True
    protectPassword = "galc9"
    
    'Array of the desired tab order.
    arrTabOrder = Array("M6", "BB6", "CR6", "W11", "W13", "W15", "W17", "W19", "W21", "W23", "W37", "BL11", "BL17", "DB11", "DB13", "DB15", "DB17", "DJ17", "DB19", _
    "DJ19", "CH25", "AB45", "P48", "AP48", "AY48", "BH48", "CS48", "DB48", "DK48", "D51")
    
    For i = LBound(arrTabOrder) To UBound(arrTabOrder)
        'If the last changed cell is in the arry
        If arrTabOrder(i) = Target.Address(0, 0) Then
            If i = UBound(arrTabOrder) Then
                Me.Range(arrTabOrder(LBound(arrTabOrder))).Select
            Else
                Me.Range(arrTabOrder(i + 1)).Select
            End If
        End If
    Next i
    
    If Target.Address = "$BH$48" Or Target.Address = "$BH$48:$BP$48" Or Target.Address = "$BH$103" Or Target.Address = "$BH$103:$BP$103" Or _
       Target.Address = "$BH$158" Or Target.Address = "$BH$158:$BP$158" Or Target.Address = "$BH$213" Or Target.Address = "$BH$213:$BP$213" Or _
       Target.Address = "$BH$268" Or Target.Address = "$BH$268:$BP$268" Or Target.Address = "$BH$323" Or Target.Address = "$BH$323:$BP$323" Or _
       Target.Address = "$BH$378" Or Target.Address = "$BH$378:$BP$378" Or Target.Address = "$BH$433" Or Target.Address = "$BH$433:$BP$433" Or _
       Target.Address = "$BH$488" Or Target.Address = "$BH$488:$BP$488" Or Target.Address = "$BH$543" Or Target.Address = "$BH$543:$BP$543" Then
        
        If protectWorkbook Then
            ActiveSheet.Unprotect Password:=protectPassword
        End If
        
        If [BH48].Value = "" Then
            Range("BQ48:BX48").Locked = False
        Else
            Range("BQ48:BX48").Locked = True
            [BQ48].Value = "=ROUND($AY$48*$BH$48, 2)"
        End If
        
        If [BH103].Value = "" Then
            Range("BQ103:BX103").Locked = False
        Else
            Range("BQ103:BX103").Locked = True
            [BQ103].Value = "=ROUND($AY$103*$BH$103, 2)"
        End If
        
        If [BH158].Value = "" Then
            Range("BQ158:BX158").Locked = False
        Else
            Range("BQ158:BX158").Locked = True
            [BQ158].Value = "=ROUND($AY$158*$BH$158, 2)"
        End If
        
        If [BH213].Value = "" Then
            Range("BQ213:BX213").Locked = False
        Else
            Range("BQ213:BX213").Locked = True
            [BQ213].Value = "=ROUND($AY$213*$BH$213, 2)"
        End If
        
        If [BH268].Value = "" Then
            Range("BQ268:BX268").Locked = False
        Else
            Range("BQ268:BX268").Locked = True
            [BQ268].Value = "=ROUND($AY$268*$BH$268, 2)"
        End If
        
        If [BH323].Value = "" Then
            Range("BQ323:BX323").Locked = False
        Else
            Range("BQ323:BX323").Locked = True
            [BQ323].Value = "=ROUND($AY$323*$BH$323, 2)"
        End If
        
        If [BH378].Value = "" Then
            Range("BQ378:BX378").Locked = False
        Else
            Range("BQ378:BX378").Locked = True
            [BQ378].Value = "=ROUND($AY$378*$BH$378, 2)"
        End If
        
        If [BH433].Value = "" Then
            Range("BQ433:BX433").Locked = False
        Else
            Range("BQ433:BX433").Locked = True
            [BQ433].Value = "=ROUND($AY$433*$BH$433, 2)"
        End If
        
        If [BH488].Value = "" Then
            Range("BQ488:BX488").Locked = False
        Else
            Range("BQ488:BX488").Locked = True
            [BQ488].Value = "=ROUND($AY$488*$BH$488, 2)"
        End If
        
        If [BH543].Value = "" Then
            Range("BQ543:BX543").Locked = False
        Else
            Range("BQ543:BX543").Locked = True
            [BQ543].Value = "=ROUND($AY$543*$BH$543, 2)"
        End If
    
        If protectWorkbook Then
                ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
                , AllowFormattingCells:=True, Password:=protectPassword
        End If
    
    End If
    
    ' All of these if statements are to determine if the last changed cell was one that we care about
    ' otherwise, all of these functions run each and everytime a change is made within the excel file.
    ' Over time, this causes excel to get grumpy and slow on down: yes this is a pain if rows are added/removed...
    
    ' Check for Meter group changes
    If Target.Address = "$AB$45" Or Target.Address = "$AB$45:$AI$45" Or Target.Address = "$AP$48" Or Target.Address = "$AP$48:$AX$48" _
    Or Target.Address = "$AP$103" Or Target.Address = "$AP$103:$AX$103" Or Target.Address = "$AP$158" Or Target.Address = "$AP$158:$AX$158" _
    Or Target.Address = "$AP$213" Or Target.Address = "$AP$213:$AX$213" Or Target.Address = "$AP$268" Or Target.Address = "$AP$268:$AX$268" _
    Or Target.Address = "$AP$323" Or Target.Address = "$AP$323:$AX$323" Or Target.Address = "$AP$378" Or Target.Address = "$AP$378:$AX$378" _
    Or Target.Address = "$AP$433" Or Target.Address = "$AP$433:$AX$433" Or Target.Address = "$AP$488" Or Target.Address = "$AP$488:$AX$488" _
    Or Target.Address = "$AP$543" Or Target.Address = "$AP$543:$AX$543" Then
        
        'Number of meter groups to display
        If [AB45].Value >= 1 Then
            Call DisplayGroups(protectWorkbook, protectPassword, [AB45].Value)
        Else
            Call DisplayGroups(protectWorkbook, protectPassword, 1)
        End If
    
        'Number of assets to display in each group
        Call DisplayAssets(protectWorkbook, protectPassword, [AP48].Value, 1)
        Call DisplayAssets(protectWorkbook, protectPassword, [AP103].Value, 2)
        Call DisplayAssets(protectWorkbook, protectPassword, [AP158].Value, 3)
        Call DisplayAssets(protectWorkbook, protectPassword, [AP213].Value, 4)
        Call DisplayAssets(protectWorkbook, protectPassword, [AP268].Value, 5)
        Call DisplayAssets(protectWorkbook, protectPassword, [AP323].Value, 6)
        Call DisplayAssets(protectWorkbook, protectPassword, [AP378].Value, 7)
        Call DisplayAssets(protectWorkbook, protectPassword, [AP433].Value, 8)
        Call DisplayAssets(protectWorkbook, protectPassword, [AP488].Value, 9)
        Call DisplayAssets(protectWorkbook, protectPassword, [AP543].Value, 10)
    End If
    
    Call DisplayMaintenanceEscalationType(protectWorkbook, protectPassword)
    Call DisplayUsageEscalationType(protectWorkbook, protectPassword)
    
    ' Check for term cell changes
    If Target.Address = "$W$21" Or Target.Address = "$W$21:$AK$23" Or Target.Address = "$AB$45" Or Target.Address = "$AB$45:$AI$45" _
    Or Target.Address = "$AP$48" Or Target.Address = "$AP$48:$AX$48" Or Target.Address = "$AP$103" Or Target.Address = "$AP$103:$AX$103" _
    Or Target.Address = "$AP$158" Or Target.Address = "$AP$158:$AX$158" Or Target.Address = "$AP$213" Or Target.Address = "$AP$213:$AX$213" _
    Or Target.Address = "$AP$268" Or Target.Address = "$AP$268:$AX$268" Or Target.Address = "$AP$323" Or Target.Address = "$AP$323:$AX$323" _
    Or Target.Address = "$AP$378" Or Target.Address = "$AP$378:$AX$378" Or Target.Address = "$AP$433" Or Target.Address = "$AP$433:$AX$433" _
    Or Target.Address = "$AP$488" Or Target.Address = "$AP$488:$AX$488" Or Target.Address = "$AP$543" Or Target.Address = "$AP$543:$AX$543" _
    Or Target.Address = "$W$13" Or Target.Address = "$W$21:$AK$23" Then
    
        Call FormatEscalationGrid(protectWorkbook, protectPassword)
        
    End If
    
    ' Addressing issue with merging and unmerging cells used in formulas
    If Target.Address = "$DB$17" Then
        Range("$CE$52").Formula = "=IF($DB$17=""Fixed"",$DJ$17, 0)"
        Range("$CE$107").Formula = "=IF($DB$17=""Fixed"",$DJ$17, 0)"
        Range("$CE$162").Formula = "=IF($DB$17=""Fixed"",$DJ$17, 0)"
        Range("$CE$217").Formula = "=IF($DB$17=""Fixed"",$DJ$17, 0)"
        Range("$CE$272").Formula = "=IF($DB$17=""Fixed"",$DJ$17, 0)"
        Range("$CE$327").Formula = "=IF($DB$17=""Fixed"",$DJ$17, 0)"
        Range("$CE$382").Formula = "=IF($DB$17=""Fixed"",$DJ$17, 0)"
        Range("$CE$437").Formula = "=IF($DB$17=""Fixed"",$DJ$17, 0)"
        Range("$CE$492").Formula = "=IF($DB$17=""Fixed"",$DJ$17, 0)"
        Range("$CE$547").Formula = "=IF($DB$17=""Fixed"",$DJ$17, 0)"
    End If
    
    If Target.Address = "$DB$19" Then
        Range("$DJ$52").Formula = "=IF($DB$19=""Fixed"",$DJ$19, 0)"
        Range("$DJ$107").Formula = "=IF($DB$19=""Fixed"",$DJ$19, 0)"
        Range("$DJ$162").Formula = "=IF($DB$19=""Fixed"",$DJ$19, 0)"
        Range("$DJ$217").Formula = "=IF($DB$19=""Fixed"",$DJ$19, 0)"
        Range("$DJ$272").Formula = "=IF($DB$19=""Fixed"",$DJ$19, 0)"
        Range("$DJ$327").Formula = "=IF($DB$19=""Fixed"",$DJ$19, 0)"
        Range("$DJ$382").Formula = "=IF($DB$19=""Fixed"",$DJ$19, 0)"
        Range("$DJ$437").Formula = "=IF($DB$19=""Fixed"",$DJ$19, 0)"
        Range("$DJ$492").Formula = "=IF($DB$19=""Fixed"",$DJ$19, 0)"
        Range("$DJ$547").Formula = "=IF($DB$19=""Fixed"",$DJ$19, 0)"
    End If
        
End Sub

Sub FormatEscalationGrid(ByVal isProtect As Boolean, ByVal sheetPassword As String)

    If isProtect Then
        ActiveSheet.Unprotect Password:=sheetPassword
    End If

    If Range("W13") = "" Or Range("W21") = "" Then
        Range("group1escalation1").Font.Color = RGB(255, 255, 255)
        Range("group1escalation2").Font.Color = RGB(255, 255, 255)
        Range("group1escalation3").Font.Color = RGB(255, 255, 255)
        Range("group1escalation4").Font.Color = RGB(255, 255, 255)
        Range("group1escalation5").Font.Color = RGB(255, 255, 255)
        Range("group1escalation6").Font.Color = RGB(255, 255, 255)
        Range("group1escalation7").Font.Color = RGB(255, 255, 255)
        Range("group2escalation1").Font.Color = RGB(255, 255, 255)
        Range("group2escalation2").Font.Color = RGB(255, 255, 255)
        Range("group2escalation3").Font.Color = RGB(255, 255, 255)
        Range("group2escalation4").Font.Color = RGB(255, 255, 255)
        Range("group2escalation5").Font.Color = RGB(255, 255, 255)
        Range("group2escalation6").Font.Color = RGB(255, 255, 255)
        Range("group2escalation7").Font.Color = RGB(255, 255, 255)
        Range("group3escalation1").Font.Color = RGB(255, 255, 255)
        Range("group3escalation2").Font.Color = RGB(255, 255, 255)
        Range("group3escalation3").Font.Color = RGB(255, 255, 255)
        Range("group3escalation4").Font.Color = RGB(255, 255, 255)
        Range("group3escalation5").Font.Color = RGB(255, 255, 255)
        Range("group3escalation6").Font.Color = RGB(255, 255, 255)
        Range("group3escalation7").Font.Color = RGB(255, 255, 255)
        Range("group4escalation1").Font.Color = RGB(255, 255, 255)
        Range("group4escalation2").Font.Color = RGB(255, 255, 255)
        Range("group4escalation3").Font.Color = RGB(255, 255, 255)
        Range("group4escalation4").Font.Color = RGB(255, 255, 255)
        Range("group4escalation5").Font.Color = RGB(255, 255, 255)
        Range("group4escalation6").Font.Color = RGB(255, 255, 255)
        Range("group4escalation7").Font.Color = RGB(255, 255, 255)
        Range("group5escalation1").Font.Color = RGB(255, 255, 255)
        Range("group5escalation2").Font.Color = RGB(255, 255, 255)
        Range("group5escalation3").Font.Color = RGB(255, 255, 255)
        Range("group5escalation4").Font.Color = RGB(255, 255, 255)
        Range("group5escalation5").Font.Color = RGB(255, 255, 255)
        Range("group5escalation6").Font.Color = RGB(255, 255, 255)
        Range("group5escalation7").Font.Color = RGB(255, 255, 255)
        Range("group6escalation1").Font.Color = RGB(255, 255, 255)
        Range("group6escalation2").Font.Color = RGB(255, 255, 255)
        Range("group6escalation3").Font.Color = RGB(255, 255, 255)
        Range("group6escalation4").Font.Color = RGB(255, 255, 255)
        Range("group6escalation5").Font.Color = RGB(255, 255, 255)
        Range("group6escalation6").Font.Color = RGB(255, 255, 255)
        Range("group6escalation7").Font.Color = RGB(255, 255, 255)
        Range("group7escalation1").Font.Color = RGB(255, 255, 255)
        Range("group7escalation2").Font.Color = RGB(255, 255, 255)
        Range("group7escalation3").Font.Color = RGB(255, 255, 255)
        Range("group7escalation4").Font.Color = RGB(255, 255, 255)
        Range("group7escalation5").Font.Color = RGB(255, 255, 255)
        Range("group7escalation6").Font.Color = RGB(255, 255, 255)
        Range("group7escalation7").Font.Color = RGB(255, 255, 255)
        Range("group8escalation1").Font.Color = RGB(255, 255, 255)
        Range("group8escalation2").Font.Color = RGB(255, 255, 255)
        Range("group8escalation3").Font.Color = RGB(255, 255, 255)
        Range("group8escalation4").Font.Color = RGB(255, 255, 255)
        Range("group8escalation5").Font.Color = RGB(255, 255, 255)
        Range("group8escalation6").Font.Color = RGB(255, 255, 255)
        Range("group8escalation7").Font.Color = RGB(255, 255, 255)
        Range("group9escalation1").Font.Color = RGB(255, 255, 255)
        Range("group9escalation2").Font.Color = RGB(255, 255, 255)
        Range("group9escalation3").Font.Color = RGB(255, 255, 255)
        Range("group9escalation4").Font.Color = RGB(255, 255, 255)
        Range("group9escalation5").Font.Color = RGB(255, 255, 255)
        Range("group9escalation6").Font.Color = RGB(255, 255, 255)
        Range("group9escalation7").Font.Color = RGB(255, 255, 255)
        Range("group10escalation1").Font.Color = RGB(255, 255, 255)
        Range("group10escalation2").Font.Color = RGB(255, 255, 255)
        Range("group10escalation3").Font.Color = RGB(255, 255, 255)
        Range("group10escalation4").Font.Color = RGB(255, 255, 255)
        Range("group10escalation5").Font.Color = RGB(255, 255, 255)
        Range("group10escalation6").Font.Color = RGB(255, 255, 255)
        Range("group10escalation7").Font.Color = RGB(255, 255, 255)
    Else
        Range("group1escalation1").Font.Color = RGB(0, 0, 0)
        Range("group1escalation2").Font.Color = RGB(0, 0, 0)
        Range("group1escalation3").Font.Color = RGB(0, 0, 0)
        Range("group1escalation4").Font.Color = RGB(0, 0, 0)
        Range("group1escalation5").Font.Color = RGB(0, 0, 0)
        Range("group1escalation6").Font.Color = RGB(0, 0, 0)
        Range("group1escalation7").Font.Color = RGB(0, 0, 0)
        Range("group2escalation1").Font.Color = RGB(0, 0, 0)
        Range("group2escalation2").Font.Color = RGB(0, 0, 0)
        Range("group2escalation3").Font.Color = RGB(0, 0, 0)
        Range("group2escalation4").Font.Color = RGB(0, 0, 0)
        Range("group2escalation5").Font.Color = RGB(0, 0, 0)
        Range("group2escalation6").Font.Color = RGB(0, 0, 0)
        Range("group2escalation7").Font.Color = RGB(0, 0, 0)
        Range("group3escalation1").Font.Color = RGB(0, 0, 0)
        Range("group3escalation2").Font.Color = RGB(0, 0, 0)
        Range("group3escalation3").Font.Color = RGB(0, 0, 0)
        Range("group3escalation4").Font.Color = RGB(0, 0, 0)
        Range("group3escalation5").Font.Color = RGB(0, 0, 0)
        Range("group3escalation6").Font.Color = RGB(0, 0, 0)
        Range("group3escalation7").Font.Color = RGB(0, 0, 0)
        Range("group4escalation1").Font.Color = RGB(0, 0, 0)
        Range("group4escalation2").Font.Color = RGB(0, 0, 0)
        Range("group4escalation3").Font.Color = RGB(0, 0, 0)
        Range("group4escalation4").Font.Color = RGB(0, 0, 0)
        Range("group4escalation5").Font.Color = RGB(0, 0, 0)
        Range("group4escalation6").Font.Color = RGB(0, 0, 0)
        Range("group4escalation7").Font.Color = RGB(0, 0, 0)
        Range("group5escalation1").Font.Color = RGB(0, 0, 0)
        Range("group5escalation2").Font.Color = RGB(0, 0, 0)
        Range("group5escalation3").Font.Color = RGB(0, 0, 0)
        Range("group5escalation4").Font.Color = RGB(0, 0, 0)
        Range("group5escalation5").Font.Color = RGB(0, 0, 0)
        Range("group5escalation6").Font.Color = RGB(0, 0, 0)
        Range("group5escalation7").Font.Color = RGB(0, 0, 0)
        Range("group6escalation1").Font.Color = RGB(0, 0, 0)
        Range("group6escalation2").Font.Color = RGB(0, 0, 0)
        Range("group6escalation3").Font.Color = RGB(0, 0, 0)
        Range("group6escalation4").Font.Color = RGB(0, 0, 0)
        Range("group6escalation5").Font.Color = RGB(0, 0, 0)
        Range("group6escalation6").Font.Color = RGB(0, 0, 0)
        Range("group6escalation7").Font.Color = RGB(0, 0, 0)
        Range("group7escalation1").Font.Color = RGB(0, 0, 0)
        Range("group7escalation2").Font.Color = RGB(0, 0, 0)
        Range("group7escalation3").Font.Color = RGB(0, 0, 0)
        Range("group7escalation4").Font.Color = RGB(0, 0, 0)
        Range("group7escalation5").Font.Color = RGB(0, 0, 0)
        Range("group7escalation6").Font.Color = RGB(0, 0, 0)
        Range("group7escalation7").Font.Color = RGB(0, 0, 0)
        Range("group8escalation1").Font.Color = RGB(0, 0, 0)
        Range("group8escalation2").Font.Color = RGB(0, 0, 0)
        Range("group8escalation3").Font.Color = RGB(0, 0, 0)
        Range("group8escalation4").Font.Color = RGB(0, 0, 0)
        Range("group8escalation5").Font.Color = RGB(0, 0, 0)
        Range("group8escalation6").Font.Color = RGB(0, 0, 0)
        Range("group8escalation7").Font.Color = RGB(0, 0, 0)
        Range("group9escalation1").Font.Color = RGB(0, 0, 0)
        Range("group9escalation2").Font.Color = RGB(0, 0, 0)
        Range("group9escalation3").Font.Color = RGB(0, 0, 0)
        Range("group9escalation4").Font.Color = RGB(0, 0, 0)
        Range("group9escalation5").Font.Color = RGB(0, 0, 0)
        Range("group9escalation6").Font.Color = RGB(0, 0, 0)
        Range("group9escalation7").Font.Color = RGB(0, 0, 0)
        Range("group10escalation1").Font.Color = RGB(0, 0, 0)
        Range("group10escalation2").Font.Color = RGB(0, 0, 0)
        Range("group10escalation3").Font.Color = RGB(0, 0, 0)
        Range("group10escalation4").Font.Color = RGB(0, 0, 0)
        Range("group10escalation5").Font.Color = RGB(0, 0, 0)
        Range("group10escalation6").Font.Color = RGB(0, 0, 0)
        Range("group10escalation7").Font.Color = RGB(0, 0, 0)
    End If
    
    Dim TermYears As Integer
    Dim TermExtraMonths As Integer
    Dim StartRow As Integer
    Dim EndRow As Integer
    Dim ChangeCell As String
    
    StartRow = 51
    EndRow = 57
    TermYears = Floor((Range("W21").Value) / 12)
    TermExtraMonths = (Range("W21").Value) Mod 12
    
    Dim CellNewValue As String
    Dim RangeName As String
    
    
    
    For X = 1 To TermYears + 1
        If StartRow > EndRow Then
            Exit For
        End If
    
        CellNewValue = CStr((X * 12) - 11) & "-" & CStr(X * 12)
        
        If (X * 12) > Range("W21").Value Then
            CellNewValue = CStr((X * 12) - 11) & "-" & Range("W21").Value
        End If
        If CStr((X * 12) - 11) > Range("W21").Value Then
            CellNewValue = ""
        End If
        
        Dim RowsPerGroup As Integer
        RowsPerGroup = 55
        
        ' Enter payment numbers into applicable cells
        If Range("BR" & CStr(StartRow + (RowsPerGroup * 0))).Value <> CellNewValue Then
            Range("BR" & CStr(StartRow + (RowsPerGroup * 0))).Value = CellNewValue
        End If
        
        If Range("BR" & CStr(StartRow + (RowsPerGroup * 1))).Value <> CellNewValue Then
            Range("BR" & CStr(StartRow + (RowsPerGroup * 1))).Value = CellNewValue
        End If
        
        If Range("BR" & CStr(StartRow + (RowsPerGroup * 2))).Value <> CellNewValue Then
            Range("BR" & CStr(StartRow + (RowsPerGroup * 2))).Value = CellNewValue
        End If
        
        If Range("BR" & CStr(StartRow + (RowsPerGroup * 3))).Value <> CellNewValue Then
            Range("BR" & CStr(StartRow + (RowsPerGroup * 3))).Value = CellNewValue
        End If
        
        If Range("BR" & CStr(StartRow + (RowsPerGroup * 4))).Value <> CellNewValue Then
            Range("BR" & CStr(StartRow + (RowsPerGroup * 4))).Value = CellNewValue
        End If
        
        If Range("BR" & CStr(StartRow + (RowsPerGroup * 5))).Value <> CellNewValue Then
            Range("BR" & CStr(StartRow + (RowsPerGroup * 5))).Value = CellNewValue
        End If
        
        If Range("BR" & CStr(StartRow + (RowsPerGroup * 6))).Value <> CellNewValue Then
            Range("BR" & CStr(StartRow + (RowsPerGroup * 6))).Value = CellNewValue
        End If
        
        If Range("BR" & CStr(StartRow + (RowsPerGroup * 7))).Value <> CellNewValue Then
            Range("BR" & CStr(StartRow + (RowsPerGroup * 7))).Value = CellNewValue
        End If
        
        If Range("BR" & CStr(StartRow + (RowsPerGroup * 8))).Value <> CellNewValue Then
            Range("BR" & CStr(StartRow + (RowsPerGroup * 8))).Value = CellNewValue
        End If
        
        If Range("BR" & CStr(StartRow + (RowsPerGroup * 9))).Value <> CellNewValue Then
            Range("BR" & CStr(StartRow + (RowsPerGroup * 9))).Value = CellNewValue
        End If
        
        ' Unlock editable cells from applicable rows
        Range("CE" & CStr(StartRow + (RowsPerGroup * 0)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 0))).Cells.Locked = False
        Range("DJ" & CStr(StartRow + (RowsPerGroup * 0)) & ":DP" & CStr(StartRow + (RowsPerGroup * 0))).Cells.Locked = False
        Range("CE" & CStr(StartRow + (RowsPerGroup * 1)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 1))).Cells.Locked = False
        Range("DJ" & CStr(StartRow + (RowsPerGroup * 1)) & ":DP" & CStr(StartRow + (RowsPerGroup * 1))).Cells.Locked = False
        Range("CE" & CStr(StartRow + (RowsPerGroup * 2)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 2))).Cells.Locked = False
        Range("DJ" & CStr(StartRow + (RowsPerGroup * 2)) & ":DP" & CStr(StartRow + (RowsPerGroup * 2))).Cells.Locked = False
        Range("CE" & CStr(StartRow + (RowsPerGroup * 3)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 3))).Cells.Locked = False
        Range("DJ" & CStr(StartRow + (RowsPerGroup * 3)) & ":DP" & CStr(StartRow + (RowsPerGroup * 3))).Cells.Locked = False
        Range("CE" & CStr(StartRow + (RowsPerGroup * 4)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 4))).Cells.Locked = False
        Range("DJ" & CStr(StartRow + (RowsPerGroup * 4)) & ":DP" & CStr(StartRow + (RowsPerGroup * 4))).Cells.Locked = False
        Range("CE" & CStr(StartRow + (RowsPerGroup * 5)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 5))).Cells.Locked = False
        Range("DJ" & CStr(StartRow + (RowsPerGroup * 5)) & ":DP" & CStr(StartRow + (RowsPerGroup * 5))).Cells.Locked = False
        Range("CE" & CStr(StartRow + (RowsPerGroup * 6)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 6))).Cells.Locked = False
        Range("DJ" & CStr(StartRow + (RowsPerGroup * 6)) & ":DP" & CStr(StartRow + (RowsPerGroup * 6))).Cells.Locked = False
        Range("CE" & CStr(StartRow + (RowsPerGroup * 7)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 7))).Cells.Locked = False
        Range("DJ" & CStr(StartRow + (RowsPerGroup * 7)) & ":DP" & CStr(StartRow + (RowsPerGroup * 7))).Cells.Locked = False
        Range("CE" & CStr(StartRow + (RowsPerGroup * 8)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 8))).Cells.Locked = False
        Range("DJ" & CStr(StartRow + (RowsPerGroup * 8)) & ":DP" & CStr(StartRow + (RowsPerGroup * 8))).Cells.Locked = False
        Range("CE" & CStr(StartRow + (RowsPerGroup * 9)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 9))).Cells.Locked = False
        Range("DJ" & CStr(StartRow + (RowsPerGroup * 9)) & ":DP" & CStr(StartRow + (RowsPerGroup * 9))).Cells.Locked = False
        
        StartRow = StartRow + 1
                
    Next X

    
    Dim j As Integer
    j = 2
    
    For X = StartRow To EndRow + 1
        CellNewValue = ""
        
        If X <> EndRow + 1 Then
            ' Blanking out payments past term
            If Range("BR" & CStr(X + (RowsPerGroup * 0))).Value <> CellNewValue Then
                Range("BR" & CStr(X + (RowsPerGroup * 0))).Value = CellNewValue
            End If
            If Range("BR" & CStr(X + (RowsPerGroup * 1))).Value <> CellNewValue Then
                Range("BR" & CStr(X + (RowsPerGroup * 1))).Value = CellNewValue
            End If
            If Range("BR" & CStr(X + (RowsPerGroup * 2))).Value <> CellNewValue Then
                Range("BR" & CStr(X + (RowsPerGroup * 2))).Value = CellNewValue
            End If
            If Range("BR" & CStr(X + (RowsPerGroup * 3))).Value <> CellNewValue Then
                Range("BR" & CStr(X + (RowsPerGroup * 3))).Value = CellNewValue
            End If
            If Range("BR" & CStr(X + (RowsPerGroup * 4))).Value <> CellNewValue Then
                Range("BR" & CStr(X + (RowsPerGroup * 4))).Value = CellNewValue
            End If
            If Range("BR" & CStr(X + (RowsPerGroup * 5))).Value <> CellNewValue Then
                Range("BR" & CStr(X + (RowsPerGroup * 5))).Value = CellNewValue
            End If
            If Range("BR" & CStr(X + (RowsPerGroup * 6))).Value <> CellNewValue Then
                Range("BR" & CStr(X + (RowsPerGroup * 6))).Value = CellNewValue
            End If
            If Range("BR" & CStr(X + (RowsPerGroup * 7))).Value <> CellNewValue Then
                Range("BR" & CStr(X + (RowsPerGroup * 7))).Value = CellNewValue
            End If
            If Range("BR" & CStr(X + (RowsPerGroup * 8))).Value <> CellNewValue Then
                Range("BR" & CStr(X + (RowsPerGroup * 8))).Value = CellNewValue
            End If
            If Range("BR" & CStr(X + (RowsPerGroup * 9))).Value <> CellNewValue Then
                Range("BR" & CStr(X + (RowsPerGroup * 9))).Value = CellNewValue
            End If
        End If
        
        If TermExtraMonths = 0 And X = StartRow Then
            j = 1
        End If
        
        If TermYears + j < 8 Then
            RangeName = "group1escalation"
            RangeName = RangeName + CStr(TermYears + j)
            Range(RangeName).Font.Color = RGB(255, 255, 255)
            RangeName = "group2escalation"
            RangeName = RangeName + CStr(TermYears + j)
            Range(RangeName).Font.Color = RGB(255, 255, 255)
            RangeName = "group3escalation"
            RangeName = RangeName + CStr(TermYears + j)
            Range(RangeName).Font.Color = RGB(255, 255, 255)
            RangeName = "group4escalation"
            RangeName = RangeName + CStr(TermYears + j)
            Range(RangeName).Font.Color = RGB(255, 255, 255)
            RangeName = "group5escalation"
            RangeName = RangeName + CStr(TermYears + j)
            Range(RangeName).Font.Color = RGB(255, 255, 255)
            RangeName = "group6escalation"
            RangeName = RangeName + CStr(TermYears + j)
            Range(RangeName).Font.Color = RGB(255, 255, 255)
            RangeName = "group7escalation"
            RangeName = RangeName + CStr(TermYears + j)
            Range(RangeName).Font.Color = RGB(255, 255, 255)
            RangeName = "group8escalation"
            RangeName = RangeName + CStr(TermYears + j)
            Range(RangeName).Font.Color = RGB(255, 255, 255)
            RangeName = "group9escalation"
            RangeName = RangeName + CStr(TermYears + j)
            Range(RangeName).Font.Color = RGB(255, 255, 255)
            RangeName = "group10escalation"
            RangeName = RangeName + CStr(TermYears + j)
            Range(RangeName).Font.Color = RGB(255, 255, 255)
        End If
        j = j + 1
        
        ' Locking cells in the grid that shouldn't be editable based on the info entered.
        If TermYears <> 7 Then
            If TermExtraMonths = 0 Then
                Range("CE" & CStr(X - 1 + (RowsPerGroup * 0)) & ":CJ" & CStr(X - 1 + (RowsPerGroup * 0))).Cells.Locked = True
                Range("DJ" & CStr(X - 1 + (RowsPerGroup * 0)) & ":DP" & CStr(X - 1 + (RowsPerGroup * 0))).Cells.Locked = True
                Range("CE" & CStr(X - 1 + (RowsPerGroup * 1)) & ":CJ" & CStr(X - 1 + (RowsPerGroup * 1))).Cells.Locked = True
                Range("DJ" & CStr(X - 1 + (RowsPerGroup * 1)) & ":DP" & CStr(X - 1 + (RowsPerGroup * 1))).Cells.Locked = True
                Range("CE" & CStr(X - 1 + (RowsPerGroup * 2)) & ":CJ" & CStr(X - 1 + (RowsPerGroup * 2))).Cells.Locked = True
                Range("DJ" & CStr(X - 1 + (RowsPerGroup * 2)) & ":DP" & CStr(X - 1 + (RowsPerGroup * 2))).Cells.Locked = True
                Range("CE" & CStr(X - 1 + (RowsPerGroup * 3)) & ":CJ" & CStr(X - 1 + (RowsPerGroup * 3))).Cells.Locked = True
                Range("DJ" & CStr(X - 1 + (RowsPerGroup * 3)) & ":DP" & CStr(X - 1 + (RowsPerGroup * 3))).Cells.Locked = True
                Range("CE" & CStr(X - 1 + (RowsPerGroup * 4)) & ":CJ" & CStr(X - 1 + (RowsPerGroup * 4))).Cells.Locked = True
                Range("DJ" & CStr(X - 1 + (RowsPerGroup * 4)) & ":DP" & CStr(X - 1 + (RowsPerGroup * 4))).Cells.Locked = True
                Range("CE" & CStr(X - 1 + (RowsPerGroup * 5)) & ":CJ" & CStr(X - 1 + (RowsPerGroup * 5))).Cells.Locked = True
                Range("DJ" & CStr(X - 1 + (RowsPerGroup * 5)) & ":DP" & CStr(X - 1 + (RowsPerGroup * 5))).Cells.Locked = True
                Range("CE" & CStr(X - 1 + (RowsPerGroup * 6)) & ":CJ" & CStr(X - 1 + (RowsPerGroup * 6))).Cells.Locked = True
                Range("DJ" & CStr(X - 1 + (RowsPerGroup * 6)) & ":DP" & CStr(X - 1 + (RowsPerGroup * 6))).Cells.Locked = True
                Range("CE" & CStr(X - 1 + (RowsPerGroup * 7)) & ":CJ" & CStr(X - 1 + (RowsPerGroup * 7))).Cells.Locked = True
                Range("DJ" & CStr(X - 1 + (RowsPerGroup * 7)) & ":DP" & CStr(X - 1 + (RowsPerGroup * 7))).Cells.Locked = True
                Range("CE" & CStr(X - 1 + (RowsPerGroup * 8)) & ":CJ" & CStr(X - 1 + (RowsPerGroup * 8))).Cells.Locked = True
                Range("DJ" & CStr(X - 1 + (RowsPerGroup * 8)) & ":DP" & CStr(X - 1 + (RowsPerGroup * 8))).Cells.Locked = True
                Range("CE" & CStr(X - 1 + (RowsPerGroup * 9)) & ":CJ" & CStr(X - 1 + (RowsPerGroup * 9))).Cells.Locked = True
                Range("DJ" & CStr(X - 1 + (RowsPerGroup * 9)) & ":DP" & CStr(X - 1 + (RowsPerGroup * 9))).Cells.Locked = True
            Else
                If X <= EndRow Then
                    Range("CE" & CStr(X + (RowsPerGroup * 0)) & ":CJ" & CStr(X + (RowsPerGroup * 0))).Cells.Locked = True
                    Range("DJ" & CStr(X + (RowsPerGroup * 0)) & ":DP" & CStr(X + (RowsPerGroup * 0))).Cells.Locked = True
                    Range("CE" & CStr(X + (RowsPerGroup * 1)) & ":CJ" & CStr(X + (RowsPerGroup * 1))).Cells.Locked = True
                    Range("DJ" & CStr(X + (RowsPerGroup * 1)) & ":DP" & CStr(X + (RowsPerGroup * 1))).Cells.Locked = True
                    Range("CE" & CStr(X + (RowsPerGroup * 2)) & ":CJ" & CStr(X + (RowsPerGroup * 2))).Cells.Locked = True
                    Range("DJ" & CStr(X + (RowsPerGroup * 2)) & ":DP" & CStr(X + (RowsPerGroup * 2))).Cells.Locked = True
                    Range("CE" & CStr(X + (RowsPerGroup * 3)) & ":CJ" & CStr(X + (RowsPerGroup * 3))).Cells.Locked = True
                    Range("DJ" & CStr(X + (RowsPerGroup * 3)) & ":DP" & CStr(X + (RowsPerGroup * 3))).Cells.Locked = True
                    Range("CE" & CStr(X + (RowsPerGroup * 4)) & ":CJ" & CStr(X + (RowsPerGroup * 4))).Cells.Locked = True
                    Range("DJ" & CStr(X + (RowsPerGroup * 4)) & ":DP" & CStr(X + (RowsPerGroup * 4))).Cells.Locked = True
                    Range("CE" & CStr(X + (RowsPerGroup * 5)) & ":CJ" & CStr(X + (RowsPerGroup * 5))).Cells.Locked = True
                    Range("DJ" & CStr(X + (RowsPerGroup * 5)) & ":DP" & CStr(X + (RowsPerGroup * 5))).Cells.Locked = True
                    Range("CE" & CStr(X + (RowsPerGroup * 6)) & ":CJ" & CStr(X + (RowsPerGroup * 6))).Cells.Locked = True
                    Range("DJ" & CStr(X + (RowsPerGroup * 6)) & ":DP" & CStr(X + (RowsPerGroup * 6))).Cells.Locked = True
                    Range("CE" & CStr(X + (RowsPerGroup * 7)) & ":CJ" & CStr(X + (RowsPerGroup * 7))).Cells.Locked = True
                    Range("DJ" & CStr(X + (RowsPerGroup * 7)) & ":DP" & CStr(X + (RowsPerGroup * 7))).Cells.Locked = True
                    Range("CE" & CStr(X + (RowsPerGroup * 8)) & ":CJ" & CStr(X + (RowsPerGroup * 8))).Cells.Locked = True
                    Range("DJ" & CStr(X + (RowsPerGroup * 8)) & ":DP" & CStr(X + (RowsPerGroup * 8))).Cells.Locked = True
                    Range("CE" & CStr(X + (RowsPerGroup * 9)) & ":CJ" & CStr(X + (RowsPerGroup * 9))).Cells.Locked = True
                    Range("DJ" & CStr(X + (RowsPerGroup * 9)) & ":DP" & CStr(X + (RowsPerGroup * 9))).Cells.Locked = True
                End If
            End If
        End If
    Next X
    
    'Locking top cell of each escalation grid.
    StartRow = 51
    Range("CE" & CStr(StartRow + (RowsPerGroup * 0)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 0))).Cells.Locked = True
    Range("DJ" & CStr(StartRow + (RowsPerGroup * 0)) & ":DP" & CStr(StartRow + (RowsPerGroup * 0))).Cells.Locked = True
    Range("CE" & CStr(StartRow + (RowsPerGroup * 1)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 1))).Cells.Locked = True
    Range("DJ" & CStr(StartRow + (RowsPerGroup * 1)) & ":DP" & CStr(StartRow + (RowsPerGroup * 1))).Cells.Locked = True
    Range("CE" & CStr(StartRow + (RowsPerGroup * 2)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 2))).Cells.Locked = True
    Range("DJ" & CStr(StartRow + (RowsPerGroup * 2)) & ":DP" & CStr(StartRow + (RowsPerGroup * 2))).Cells.Locked = True
    Range("CE" & CStr(StartRow + (RowsPerGroup * 3)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 3))).Cells.Locked = True
    Range("DJ" & CStr(StartRow + (RowsPerGroup * 3)) & ":DP" & CStr(StartRow + (RowsPerGroup * 3))).Cells.Locked = True
    Range("CE" & CStr(StartRow + (RowsPerGroup * 4)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 4))).Cells.Locked = True
    Range("DJ" & CStr(StartRow + (RowsPerGroup * 4)) & ":DP" & CStr(StartRow + (RowsPerGroup * 4))).Cells.Locked = True
    Range("CE" & CStr(StartRow + (RowsPerGroup * 5)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 5))).Cells.Locked = True
    Range("DJ" & CStr(StartRow + (RowsPerGroup * 5)) & ":DP" & CStr(StartRow + (RowsPerGroup * 5))).Cells.Locked = True
    Range("CE" & CStr(StartRow + (RowsPerGroup * 6)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 6))).Cells.Locked = True
    Range("DJ" & CStr(StartRow + (RowsPerGroup * 6)) & ":DP" & CStr(StartRow + (RowsPerGroup * 6))).Cells.Locked = True
    Range("CE" & CStr(StartRow + (RowsPerGroup * 7)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 7))).Cells.Locked = True
    Range("DJ" & CStr(StartRow + (RowsPerGroup * 7)) & ":DP" & CStr(StartRow + (RowsPerGroup * 7))).Cells.Locked = True
    Range("CE" & CStr(StartRow + (RowsPerGroup * 8)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 8))).Cells.Locked = True
    Range("DJ" & CStr(StartRow + (RowsPerGroup * 8)) & ":DP" & CStr(StartRow + (RowsPerGroup * 8))).Cells.Locked = True
    Range("CE" & CStr(StartRow + (RowsPerGroup * 9)) & ":CJ" & CStr(StartRow + (RowsPerGroup * 9))).Cells.Locked = True
    Range("DJ" & CStr(StartRow + (RowsPerGroup * 9)) & ":DP" & CStr(StartRow + (RowsPerGroup * 9))).Cells.Locked = True
    
    If isProtect Then
            ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
            , AllowFormattingCells:=True, Password:=sheetPassword
    End If

End Sub
    
Sub DisplayMaintenanceEscalationType(ByVal isProtect As Boolean, ByVal sheetPassword As String)

    '"Variable" selected from list
    If Range("DI17") <> "see meter groups" And Range("DB17") = "Variable" Then
        
        If isProtect Then
            ActiveSheet.Unprotect Password:=sheetPassword
        End If
        
        Range("DJ17:DP17").MergeCells = False
        Range("DI17:DQ17").MergeCells = True
        Range("DI17:DQ17") = "see meter groups"
        Range("DI17:DQ17").Cells.Locked = True
        Range("DI17:DQ17").Borders(xlEdgeBottom).LineStyle = xlLineStyleNone
        Range("DI17:DQ17").Borders(xlEdgeTop).LineStyle = xlLineStyleNone
        Range("DI17:DQ17").Font.Size = 8
        Range("DI17:DQ17").Font.Color = RGB(255, 0, 0)
        Range("DB19:DH19").Select
        
        If isProtect Then
            ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
            , AllowFormattingCells:=True, Password:=sheetPassword
        End If
    
    End If
    
    '"Fixed" selected from list
    If (Range("DI17") = "see meter groups" Or Range("DJ17") = "") And Range("DB17") = "Fixed" Then
        
        If isProtect Then
            ActiveSheet.Unprotect Password:=sheetPassword
        End If
        
        Range("DI17:DQ17").MergeCells = False
        Range("DJ17:DP17").MergeCells = True
        Range("DJ17:DP17").HorizontalAlignment = xlCenter
        Range("DJ17:DP17").NumberFormat = "0.00%"
        If Range("DI17") <> "" Then
            Range("DI17") = ""
        End If
        If Range("DJ17") <> "0" Then
            Range("DJ17:DP17") = "0"
        End If
        If isProtect Then
            ActiveSheet.Unprotect Password:=sheetPassword
        End If
        Range("DJ17:DP17").Cells.Locked = False
        Range("DJ17:DP17").Borders(xlEdgeBottom).LineStyle = xlContinuous
        Range("DJ17:DP17").Borders(xlEdgeLeft).LineStyle = xlContinuous
        Range("DJ17:DP17").Borders(xlEdgeRight).LineStyle = xlContinuous
        Range("DJ17:DP17").Borders(xlEdgeTop).LineStyle = xlContinuous
        Me.Range("DJ17:DP17").Select
        Range("DJ17:DP17").Font.Size = 10
        Range("DJ17:DP17").Font.Color = RGB(0, 0, 0)
        
        If isProtect Then
            ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
            , AllowFormattingCells:=True, Password:=sheetPassword
        End If
    
    End If
    
    '"None" or blank selected from list
    If (Range("DJ17") <> "" Or Range("DI17") <> "") And (Range("DB17") = "None" Or Range("DB17") = "") Then
        
        If isProtect Then
            ActiveSheet.Unprotect Password:=sheetPassword
        End If
        
        Range("DI17:DQ17").MergeCells = False
        Range("DI17:DQ17") = ""
        Range("DJ17:DP17").Cells.Locked = True
        Range("DJ17:DP17").Borders(xlEdgeBottom).LineStyle = xlLineStyleNone
        Range("DJ17:DP17").Borders(xlEdgeLeft).LineStyle = xlLineStyleNone
        Range("DJ17:DP17").Borders(xlEdgeRight).LineStyle = xlLineStyleNone
        Range("DJ17:DP17").Borders(xlEdgeTop).LineStyle = xlLineStyleNone
        Range("DB19:DH19").Select
        
        If isProtect Then
            ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
            , AllowFormattingCells:=True, Password:=sheetPassword
        End If
    
    End If
    
    
End Sub

Sub DisplayUsageEscalationType(ByVal isProtect As Boolean, ByVal sheetPassword As String)

    '"Variable" selected from list
    If Range("DI19") <> "see meter groups" And Range("DB19") = "Variable" Then
        
        If isProtect Then
            ActiveSheet.Unprotect Password:=sheetPassword
        End If
        
        Range("DJ19:DP19").MergeCells = False
        Range("DI19:DQ19").MergeCells = True
        Range("DI19:DQ19") = "see meter groups"
        Range("DI19:DQ19").Cells.Locked = True
        Range("DI19:DQ19").Borders(xlEdgeBottom).LineStyle = xlLineStyleNone
        Range("DI19:DQ19").Borders(xlEdgeTop).LineStyle = xlLineStyleNone
        Range("DI19:DQ19").Font.Size = 8
        Range("DI19:DQ19").Font.Color = RGB(255, 0, 0)
        Range("DB19:DH19").Select
        
        If isProtect Then
            ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
            , AllowFormattingCells:=True, Password:=sheetPassword
        End If
    
    End If
    
    '"Fixed" selected from list
    If (Range("DI19") = "see meter groups" Or Range("DJ19") = "") And Range("DB19") = "Fixed" Then
        
        If isProtect Then
            ActiveSheet.Unprotect Password:=sheetPassword
        End If
        
        Range("DI19:DQ19").MergeCells = False
        Range("DJ19:DP19").MergeCells = True
        Range("DJ19:DP19").HorizontalAlignment = xlCenter
        Range("DJ19:DP19").NumberFormat = "0.00%"
        If Range("DI19") <> "" Then
            Range("DI19") = ""
        End If
        If Range("DJ19") <> "0" Then
            Range("DJ19:DP19") = 0
        End If
        If isProtect Then
            ActiveSheet.Unprotect Password:=sheetPassword
        End If
        Range("DJ19:DP19").Cells.Locked = False
        Range("DJ19:DP19").Borders(xlEdgeBottom).LineStyle = xlContinuous
        Range("DJ19:DP19").Borders(xlEdgeLeft).LineStyle = xlContinuous
        Range("DJ19:DP19").Borders(xlEdgeRight).LineStyle = xlContinuous
        Range("DJ19:DP19").Borders(xlEdgeTop).LineStyle = xlContinuous
        Me.Range("DJ19:DP19").Select
        Range("DJ19:DP19").Font.Size = 10
        Range("DJ19:DP19").Font.Color = RGB(0, 0, 0)
        
        If isProtect Then
            ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
            , AllowFormattingCells:=True, Password:=sheetPassword
        End If
    
    End If
    
    '"None" or blank selected from list
    If (Range("DJ19") <> "" Or Range("DI19") <> "") And (Range("DB19") = "None" Or Range("DB19") = "") Then
        
        If isProtect Then
            ActiveSheet.Unprotect Password:=sheetPassword
        End If
        
        Range("DI19:DQ19").MergeCells = False
        Range("DI19:DQ19") = ""
        Range("DJ19:DP19").Cells.Locked = True
        Range("DJ19:DP19").Borders(xlEdgeBottom).LineStyle = xlLineStyleNone
        Range("DJ19:DP19").Borders(xlEdgeLeft).LineStyle = xlLineStyleNone
        Range("DJ19:DP19").Borders(xlEdgeRight).LineStyle = xlLineStyleNone
        Range("DJ19:DP19").Borders(xlEdgeTop).LineStyle = xlLineStyleNone
        Range("DB19:DH19").Select
        
        If isProtect Then
            ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
            , AllowFormattingCells:=True, Password:=sheetPassword
        End If
    
    End If
        
End Sub

Sub DisplayAssets(ByVal isProtect As Boolean, ByVal sheetPassword As String, ByVal numOfAssets As Integer, ByVal groupNumber As Integer)
    If isProtect Then
        ActiveSheet.Unprotect Password:=sheetPassword
    End If
    
    'Default to always show 10 assets
    If numOfAssets < 10 Then
        numOfAssets = 10
    End If
    
    Dim headerRows As Integer
    
    Dim startingRow As Integer
    Dim RowsPerGroup As Integer
    Dim groupStartingRow As Integer
    Dim rowRange As String
    Dim maxAssets As Integer
    Dim startRange As Integer
    Dim endRange As Integer
    startingRow = 47
    headerRows = 4
    RowsPerGroup = 54
    groupStartingRow = startingRow + (RowsPerGroup * (groupNumber - 1)) + (groupNumber - 2) + headerRows
    maxAssets = 50
    startRange = groupStartingRow + numOfAssets + 1
    endRange = groupStartingRow + maxAssets
    
    If startRange <= endRange Then
        rowRange = CStr(startRange) & ":" & CStr(endRange)
        Rows(rowRange).Hidden = True
    End If
        
    If isProtect Then
        ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowFormattingCells:=True, Password:=sheetPassword
    End If
End Sub


Sub DisplayGroups(ByVal isProtect As Boolean, ByVal sheetPassword As String, ByVal numOfGroups As Integer)
    If isProtect Then
        ActiveSheet.Unprotect Password:=sheetPassword
    End If
    
    Dim RowsPerGroup As Integer
    Dim startingRow As Integer
    Dim rowRange As String
    Dim maxRow As Integer
    Dim startRange As Integer
    Dim endRange As Integer
    Dim hideRange As String
    RowsPerGroup = 54
    startingRow = 47
    startRange = startingRow
    endRange = (RowsPerGroup * numOfGroups) + startingRow + (numOfGroups - 2)
    maxRow = 594
    
    rowRange = CStr(startRange) & ":" & CStr(endRange)
    hideRange = CStr(endRange + 1) & ":" & CStr(maxRow)
    
    Rows(hideRange).Hidden = True
    Rows(rowRange).Hidden = False
    
    If isProtect Then
        ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowFormattingCells:=True, Password:=sheetPassword
    End If
End Sub

Public Function Ceiling(ByVal X As Double, Optional ByVal Factor As Double = 1) As Double
    ' X is the value you want to round
    ' is the multiple to which you want to round
    Ceiling = (Int(X / Factor) - (X / Factor - Int(X / Factor) > 0)) * Factor
End Function

Public Function Floor(ByVal X As Double, Optional ByVal Factor As Double = 1) As Double
    ' X is the value you want to round
    ' is the multiple to which you want to round
    Floor = Int(X / Factor) * Factor
End Function
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' *'O*^

INQUEST-PP=macro
