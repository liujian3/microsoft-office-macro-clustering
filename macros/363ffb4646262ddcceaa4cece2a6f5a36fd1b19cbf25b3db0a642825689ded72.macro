Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Modul1"
Sub Test()
Attribute Test.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Test Makro
'

'
    ActiveSheet.Range("$A$1:$B$188").AutoFilter Field:=1, Criteria1:=Array( _
        "Beauty Gefahrgut Doppel", "Beauty Gefahrgut Einzel", "Beauty Gefahrgut Mini"), _
        Operator:=xlFilterValues
    Range("A183:B185").Select
    Selection.Copy
    Range("F183").Select
    ActiveSheet.Paste
    Columns("F:F").ColumnWidth = 22.43
End Sub
Sub Test2()
Attribute Test2.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Test2 Makro
'

'
    ActiveSheet.Range("$A$1:$F$188").AutoFilter Field:=6, Criteria1:=Array("A3" _
        , "A4", "Beauty", "etiketten", "Eurotainer", "Flyer", "Folier", "Kartonage", "Kdop", _
        "Keinz", "Klebeband", "Kleider", "Kmini", "KSH 600+200x1050", "KSH 600+200x2000", _
        "KSH 650x1500", "Ksti", "Kversandkarton 600", "Kversandkarton 800", "LoungeAdd", "n" _
        , "NVB 120x170", "NVB 180x250", "NVB 250x300", "NVB 300x400", "NVB 400x500", _
        "NVB 500x700", "NVB 80x120", "retueret", "returet", "Schuhkartons", "Seidenpapier", _
        "Slamline", "Stretch", "test", "voidfill", "Vtklein", "Vtmit", "Zalon"), Operator:= _
        xlFilterValues
    Range("F3:F534").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("F3:F188").Select
    Application.CutCopyMode = False
    Selection.Copy
    Range("F3:F42").Select
    Application.CutCopyMode = False
    Selection.Copy
    ActiveWindow.SmallScroll Down:=-51
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    ActiveSheet.Range("$A$1:$F$188").AutoFilter Field:=6
    Range("I13").Select
End Sub
Attribute VB_Name = "Modul2"
Sub BedingteKopieZeilen()
Dim Zeile As Long
Dim ZeileMax As Long
Dim n As Long

With Input
ZeileMax = .UsedRange.Rows.Count
n = 1

For Zeile = 2 To ZeileMax

If .Cells(Zeile, 3).Value = ">0" Then

.Rows(Zeile).Copy Destination:=Output.Rows(n)
n = n + 1

End If
Next Zeile
End With
End Sub
Attribute VB_Name = "Modul3"
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
