Attribute VB_Name = "Module1"
Private Sub Modify_Inverter_List()
    Dim row_num As Integer, model_num As String, next_row_model_num As String, next_loop As Boolean
    
    For row_num = 15 To 3574
        'Acquire this row model number and next row
        model_num = Sheet1.Cells(row_num, 2).Text
        next_row_model_num = Sheet1.Cells(row_num + 1, 2).Text
        
        'Strip away bracket text
        If InStr(1, model_num, "[") <> 0 Then model_num = Left(model_num, InStr(1, model_num, "[") - 2)
        If InStr(1, next_row_model_num, "[") <> 0 Then next_row_model_num = Left(next_row_model_num, InStr(1, next_row_model_num, "[") - 2)
    
        'Determine whether they are the same model name
        If StrComp(model_num, next_row_model_num, vbTextCompare) = 0 And Sheet1.Cells(row_num, 8).Value = Sheet1.Cells(row_num + 1, 8).Value Then 'Same model and voltage
            next_loop = Check_Data(row_num)
            
            If next_loop Then
                Sheet1.Rows(row_num).EntireRow.Interior.Color = RGB(0, 0, 255)
                Sheet1.Rows(row_num + 1).EntireRow.Interior.Color = RGB(0, 0, 255)
                GoTo NextLoopIteration
                row_num = row_num + 1 'Need to skip a row
            End If
            
            'TWO ENTRIES
            Sheet1.Rows(row_num).Interior.Color = RGB(255, 0, 0) 'tag for deletion
            
            'Set the capabilities columns
            Sheet1.Cells(row_num + 1, 3).Value = "Y"
            Sheet1.Cells(row_num + 1, 4).Value = "Y"
            Sheet1.Cells(row_num + 1, 5).Value = "N"
            
            Sheet1.Cells(row_num + 1, 12).Value = "Not Applicable" 'RPP date
            
            Sheet1.Cells(row_num + 1, 2) = Replace(Sheet1.Cells(row_num + 1, 2), " [SI1]", "") 'Strip off [SI1]
            
            row_num = row_num + 1 'Need to skip a row
        Else 'Diff model num and/or voltage: diff model
            If InStr(1, Sheet1.Cells(row_num, 2).Value, "[SI1]") <> 0 Then 'Smart Inverter
                Sheet1.Cells(row_num, 3).Value = "N"
                Sheet1.Cells(row_num, 4).Value = "Y"
                Sheet1.Cells(row_num, 5).Value = "N"
                
                Sheet1.Cells(row_num, 12).Value = "Not Applicable" 'RPP date
                
                Sheet1.Cells(row_num, 2) = Replace(Sheet1.Cells(row_num, 2), " [SI1]", "") 'Strip off [SI1]
            Else 'Non-Smart Inverter
                Sheet1.Cells(row_num, 3).Value = "Y"
                Sheet1.Cells(row_num, 4).Value = "N"
                Sheet1.Cells(row_num, 5).Value = "N"
                
                Sheet1.Cells(row_num, 12).Value = "No Information Submitted" 'RPP date
            End If
        End If
NextLoopIteration:
    Next row_num
    
    row_num = 15
    
    Do Until Sheet1.Cells(row_num, 1).Value = "" 'Delete the tagged rows
        If Sheet1.Cells(row_num, 1).Interior.Color = RGB(255, 0, 0) Then
            Sheet1.Rows(row_num).EntireRow.Delete
        Else
            row_num = row_num + 1
        End If
    Loop
    
End Sub

Function Check_Data(row_num As Integer) As Boolean
    Dim next_loop As Boolean, col_num As Integer
    Dim value1 As Single, value2 As Single

    For col_num = 7 To 48
        Select Case col_num
            Case 8, 10 To 12, 15 'Do Nothing
            Case 13 To 14, 19 To 21 'Not numeric or no rounding
                If Sheet1.Cells(row_num, col_num).Value <> Sheet1.Cells(row_num + 1, col_num).Value Then
                    next_loop = True
                    Exit For
                End If
            Case 9, 17, 23 To 48 'Round to tenths
                value1 = Round(Sheet1.Cells(row_num, col_num).Value, 1)
                value2 = Round(Sheet1.Cells(row_num + 1, col_num).Value, 1)
                If value1 <> value2 Then
                    next_loop = True
                    Exit For
                End If
            Case 7, 16, 18, 22 To 27 'Round to hundredths
                value1 = Round(Sheet1.Cells(row_num, col_num).Value, 2)
                value2 = Round(Sheet1.Cells(row_num + 1, col_num).Value, 2)
                If value1 <> value2 Then
                    next_loop = True
                    Exit For
                End If
        End Select
    Next col_num

    Check_Data = next_loop
End Function

Private Sub Restore_Color()
    Dim row_count As Integer, str_start As Integer, str_len As Integer
    
    For row_count = 15 To 3262
        If InStr(1, Sheet1.Cells(row_count, 2).Value, "[") <> 0 Then
            str_start = InStr(1, Sheet1.Cells(row_count, 2).Value, "[")
            str_len = Len(Sheet1.Cells(row_count, 2).Value)
            Sheet1.Cells(row_count, 2).Characters(str_start, str_len - str_start + 1).Font.Color = RGB(0, 102, 102)
        End If
    Next row_count
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
