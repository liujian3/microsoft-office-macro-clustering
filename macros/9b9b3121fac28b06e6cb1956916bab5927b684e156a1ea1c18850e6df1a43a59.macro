Attribute VB_Name = "AccAddParam"
Function DBalMaskAddParam( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, _
  AddParam As String, AddParamValue As String, _
  Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DBalMaskAddParam = BalanceObj.GetAccSumDB( _
      |fffd||fffd||fffd||fffd|, AccRange, Curr, stSumActive, -1, ToboId, SiteId, "", -1, AddParam, AddParamValue, "") / 100
  Else
    DBalMaskAddParam = 0
  End If
End Function
  
Function CBalMaskAddParam( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, _
  AddParam As String, AddParamValue As String, _
  Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CBalMaskAddParam = BalanceObj.GetAccSumDB( _
      |fffd||fffd||fffd||fffd|, AccRange, Curr, stSumPassive, -1, ToboId, SiteId, "", -1, AddParam, AddParamValue, "") / 100
  Else
    CBalMaskAddParam = 0
  End If
End Function
  
Function DMaskAddParam( _
  FromDate As Date, TillDate As Date, AccRange As String, Curr As String, _
  AddParam As String, AddParamValue As String, _
  Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DMaskAddParam = BalanceObj.GetAccountPeriodSum( _
      FromDate, TillDate, AccRange, Curr, stpDebit, -1, ToboId, SiteId, AddParam, AddParamValue, "") / 100
  Else
    DMaskAddParam = 0
  End If
End Function

Function CMaskAddParam( _
  FromDate As Date, TillDate As Date, AccRange As String, Curr As String, _
  AddParam As String, AddParamValue As String, _
  Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CMaskAddParam = BalanceObj.GetAccountPeriodSum( _
      FromDate, TillDate, AccRange, Curr, stpCredit, -1, ToboId, SiteId, AddParam, AddParamValue, "") / 100
  Else
    CMaskAddParam = 0
  End If
End Function


Attribute VB_Name = "AccDB"
'===============================================================
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'===============================================================
Public Function DMaskEq( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1, Optional ContragRank As String _
) As Currency
  Dim S As String
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    If ContragRank <> "" Then
      S = ContragRankCondition(ContragRank)
    End If
    DMaskEq = BalanceObj.GetAccSumDB(|fffd||fffd||fffd||fffd|, AccRange, Curr, stDebet, WithCorrMvmnt, ToboId, SiteId, "", -1, "", "", S) / 100
  Else
    DMaskEq = 0
  End If
End Function

Public Function CMaskEq( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1, Optional ContragRank As String _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    If ContragRank <> "" Then
      S = ContragRankCondition(ContragRank)
    End If
    CMaskEq = BalanceObj.GetAccSumDB(|fffd||fffd||fffd||fffd|, AccRange, Curr, stCredit, WithCorrMvmnt, ToboId, SiteId, "", -1, "", "", S) / 100
  Else
    CMaskEq = 0
  End If
End Function

Public Function CBalMaskEq( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1, Optional ContragRank As String _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    If ContragRank <> "" Then
      S = ContragRankCondition(ContragRank)
    End If
    CBalMaskEq = BalanceObj.GetAccSumDB(|fffd||fffd||fffd||fffd|, AccRange, Curr, stSumPassive, WithCorrMvmnt, ToboId, SiteId, "", -1, "", "", S) / 100
  Else
    CBalMaskEq = 0
  End If
End Function

Public Function DBalMaskEq( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1, Optional ContragRank As String _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    If ContragRank <> "" Then
      S = ContragRankCondition(ContragRank)
    End If
    DBalMaskEq = BalanceObj.GetAccSumDB(|fffd||fffd||fffd||fffd|, AccRange, Curr, stSumActive, WithCorrMvmnt, ToboId, SiteId, "", -1, "", "", S) / 100
  Else
    DBalMaskEq = 0
  End If
End Function

Public Function DMask( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1, Optional ContragRank As String _
) As Currency
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    If ContragRank <> "" Then
      S = ContragRankCondition(ContragRank)
    End If
    DMask = BalanceObj.GetAccSumDB(|fffd||fffd||fffd||fffd|, AccRange, Curr, stFDebet, WithCorrMvmnt, ToboId, SiteId, "", -1, "", "", S) / 100
  Else
    DMask = 0
  End If
End Function

Public Function CMask( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1, Optional ContragRank As String _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    If ContragRank <> "" Then
      S = ContragRankCondition(ContragRank)
    End If
    CMask = BalanceObj.GetAccSumDB(|fffd||fffd||fffd||fffd|, AccRange, Curr, stFCredit, WithCorrMvmnt, ToboId, SiteId, "", -1, "", "", S) / 100
  Else
    CMask = 0
  End If
End Function

Public Function CBalMask( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1, Optional ContragRank As String _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    If ContragRank <> "" Then
      S = ContragRankCondition(ContragRank)
    End If
    CBalMask = BalanceObj.GetAccSumDB(|fffd||fffd||fffd||fffd|, AccRange, Curr, stFSumPassive, WithCorrMvmnt, ToboId, SiteId, "", -1, "", "", S) / 100
  Else
    CBalMask = 0
  End If
End Function

Public Function DBalMask( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1, Optional ContragRank As String _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    If ContragRank <> "" Then
      S = ContragRankCondition(ContragRank)
    End If
    DBalMask = BalanceObj.GetAccSumDB(|fffd||fffd||fffd||fffd|, AccRange, Curr, stFSumActive, WithCorrMvmnt, ToboId, SiteId, "", -1, "", "", S) / 100
  Else
    DBalMask = 0
  End If
End Function

Public Function CBalAVCCYEq(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' Dim AccRange1 As String
  Application.Volatile (True)
  CBalAVCCYEq = 0
  If Not Activated Then Exit Function
  If |fffd||fffd||fffd||fffd| = GetSystemDay Then
'  AccRange1 = Left(AccRange, 4)
    CBalAVCCYEq = CBalVirtCCYEq(RemoveSymbolFromString(AccRange, "*"), Curr)
  Else
    CBalAVCCYEq = CBalMaskEq(|fffd||fffd||fffd||fffd|, AccRange, Curr)
  End If
  
End Function

Public Function DBalAVCCYEq(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  DBalAVCCYEq = 0
  If Not Activated Then Exit Function
  If |fffd||fffd||fffd||fffd| = GetSystemDay Then
    DBalAVCCYEq = DBalVirtCCYEq(RemoveSymbolFromString(AccRange, "*"), Curr)
  Else
    DBalAVCCYEq = DBalMaskEq(|fffd||fffd||fffd||fffd|, AccRange, Curr)
  End If
End Function

Public Function ContragRankCondition(ContrRank As String) As String
Dim S As String
   
    S = " AND EXISTS " _
      & "   (SELECT 1 " _
      & "    FROM contragent c " _
      & "    WHERE c.ID = v.contragentid " _
      & "      AND c.siteid = v.siteid " _
      & "      AND c.contragrankid = " & ContrRank & ")" _
      
    ContragRankCondition = S

End Function


Attribute VB_Name = "AccPeriodDB"
'======================================================================
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'======================================================================
Function PeriodSum( _
  FromDate As Date, TillDate As Date, AccRange As String, _
  Curr As String, SumType As Long, WithCorrMvmnt As Integer, ToboId As Integer, _
  SiteId As Long, Optional AddCondition As String _
) As Currency
  Dim S As String
  If Activated Then
    PeriodSum = BalanceObj.GetAccountPeriodSum(FromDate, TillDate, AccRange, Curr, SumType, WithCorrMvmnt, ToboId, SiteId, "", "", AddCondition) / 100
  Else
    PeriodSum = 0
  End If
End Function

Public Function DEQPeriod( _
  FromDate As Date, TillDate As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1, Optional ContragRank As String _
) As Currency
  Application.Volatile (True)
  Dim S As String
  If ContragRank <> "" Then
    S = ContragRankCondition(ContragRank)
  End If
  DEQPeriod = PeriodSum(FromDate, TillDate, AccRange, Curr, stpDebitEQ, WithCorrMvmnt, ToboId, SiteId, S)
End Function

Public Function DPeriod( _
  FromDate As Date, TillDate As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1, Optional ContragRank As String _
) As Currency
  Application.Volatile (True)
  Dim S As String
  If ContragRank <> "" Then
    S = ContragRankCondition(ContragRank)
  End If
  DPeriod = PeriodSum(FromDate, TillDate, AccRange, Curr, stpDebit, WithCorrMvmnt, ToboId, SiteId, S)
End Function

Public Function CEqPeriod( _
  FromDate As Date, TillDate As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1, Optional ContragRank As String _
) As Currency
  Application.Volatile (True)
  Dim S As String
  If ContragRank <> "" Then
    S = ContragRankCondition(ContragRank)
  End If
  CEqPeriod = PeriodSum(FromDate, TillDate, AccRange, Curr, stpCreditEQ, WithCorrMvmnt, ToboId, SiteId, S)
End Function

Public Function CPeriod( _
  FromDate As Date, TillDate As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1, Optional ContragRank As String _
) As Currency
  Application.Volatile (True)
  Dim S As String
  If ContragRank <> "" Then
    S = ContragRankCondition(ContragRank)
  End If
  CPeriod = PeriodSum(FromDate, TillDate, AccRange, Curr, stpCredit, WithCorrMvmnt, ToboId, SiteId, S)
End Function

Public Function AvgActiveEQPeriod( _
  FromDate As Date, TillDate As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1 _
) As Currency
  Application.Volatile (True)
  AvgActiveEQPeriod = PeriodSum(FromDate, TillDate, AccRange, Curr, stpAvgActiveEQ, WithCorrMvmnt, ToboId, SiteId, "")
End Function

Public Function AvgActivePeriod( _
  FromDate As Date, TillDate As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1 _
) As Currency
  Application.Volatile (True)
  AvgActivePeriod = PeriodSum(FromDate, TillDate, AccRange, Curr, stpAvgActive, WithCorrMvmnt, ToboId, SiteId, "")
End Function

Public Function AvgPassiveEQPeriod( _
  FromDate As Date, TillDate As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1 _
) As Currency
  Application.Volatile (True)
  AvgPassiveEQPeriod = PeriodSum(FromDate, TillDate, AccRange, Curr, stpAvgPassiveEQ, WithCorrMvmnt, ToboId, SiteId, "")
End Function

Public Function AvgPassivePeriod( _
  FromDate As Date, TillDate As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1 _
) As Currency
  Application.Volatile (True)
  AvgPassivePeriod = PeriodSum(FromDate, TillDate, AccRange, Curr, stpAvgPassive, WithCorrMvmnt, ToboId, SiteId, "")
End Function
Public Function AvgEQPeriod( _
  FromDate As Date, TillDate As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1 _
) As Currency
  Application.Volatile (True)
  AvgEQPeriod = PeriodSum(FromDate, TillDate, AccRange, Curr, stpAvgEQ, WithCorrMvmnt, ToboId, SiteId, "")
End Function

Public Function AvgPeriod( _
  FromDate As Date, TillDate As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1 _
) As Currency
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  AvgPeriod = PeriodSum(FromDate, TillDate, AccRange, Curr, stpAvg, WithCorrMvmnt, ToboId, SiteId, "")
End Function


Attribute VB_Name = "All"
Public Function DBalAllEq( _
  BalanceDate As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DBalAllEq = _
      BalanceObj.GetBAccSumDB(BalanceDate, BAccRange, Curr, stSumActive, WithCorrMvmnt, -1, -1, "") / 100 _
    + BalanceObj.GetBranchSumDB(BalanceDate, 0, stSumActive, BAccRange, Curr, "", "", WithCorrMvmnt) / 100
  Else
    DBalAllEq = 0
  End If
End Function

Public Function CBalAllEq( _
  BalanceDate As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CBalAllEq = _
      BalanceObj.GetBAccSumDB(BalanceDate, BAccRange, Curr, stSumPassive, WithCorrMvmnt, -1, -1, "") / 100 _
    + BalanceObj.GetBranchSumDB(BalanceDate, 0, stSumPassive, BAccRange, Curr, "", "", WithCorrMvmnt) / 100
  Else
    CBalAllEq = 0
  End If
End Function

Public Function BalAllEq( _
  BalanceDate As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    BalAllEq = _
      BalanceObj.GetBAccSumDB(BalanceDate, BAccRange, Curr, stSum, WithCorrMvmnt, -1, -1, "") / 100 _
    + BalanceObj.GetBranchSumDB(BalanceDate, 0, stSum, BAccRange, Curr, "", "", WithCorrMvmnt) / 100
  Else
    BalAllEq = 0
  End If
End Function

Public Function DBalAll( _
  BalanceDate As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DBalAll = _
      BalanceObj.GetBAccSumDB(BalanceDate, BAccRange, Curr, stFSumActive, WithCorrMvmnt, -1, -1, "") / 100 _
    + BalanceObj.GetBranchSumDB(BalanceDate, 0, stFSumActive, BAccRange, Curr, "", "", WithCorrMvmnt) / 100
  Else
    DBalAll = 0
  End If
End Function

Public Function CBalAll( _
  BalanceDate As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CBalAll = _
      BalanceObj.GetBAccSumDB(BalanceDate, BAccRange, Curr, stFSumPassive, WithCorrMvmnt, -1, -1, "") / 100 _
    + BalanceObj.GetBranchSumDB(BalanceDate, 0, stFSumPassive, BAccRange, Curr, "", "", WithCorrMvmnt) / 100
  Else
    CBalAll = 0
  End If
End Function

Public Function BalAll( _
  BalanceDate As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    BalAll = _
      BalanceObj.GetBAccSumDB(BalanceDate, BAccRange, Curr, stFSum, WithCorrMvmnt, -1, -1, "") / 100 _
    + BalanceObj.GetBranchSumDB(BalanceDate, 0, stFSum, BAccRange, Curr, "", "", WithCorrMvmnt) / 100
  Else
    BalAll = 0
  End If
End Function

Public Function DBalDealN5R013All( _
  BalanceDate As Date, BAccRange As String, _
  Optional Curr As String = "", _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional AddCondition As String = "", _
  Optional R013 As String = "" _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = " s240 in ('1','2','3','4','5') "
    If AddCondition <> "" Then
      S = S & " and " & AddCondition & " "
    End If
    DBalDealN5R013All = _
      BalanceObj.GetBalanceSumDB(BalanceDate, stSumActive, BAccRange, Curr, S, R013, "", "", WithCorrMvmnt, -1, -1) / 100 _
    + BalanceObj.GetBranchSumDB(BalanceDate, 0, stSumActive, BAccRange, Curr, S, R013, WithCorrMvmnt) / 100
  Else
    DBalDealN5R013All = 0
  End If
End Function


Public Function DBalDealN5All( _
  BalanceDate As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional AddCondition As String = "" _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = " s240 in ('1','2','3','4','5') "
    If AddCondition <> "" Then
      S = S & " and " & AddCondition & " "
    End If
    DBalDealN5All = _
      BalanceObj.GetBalanceSumDB(BalanceDate, stSumActive, BAccRange, Curr, S, "", "", "", WithCorrMvmnt, -1, -1) / 100 _
    + BalanceObj.GetBranchSumDB(BalanceDate, 0, stSumActive, BAccRange, Curr, S, "", WithCorrMvmnt) / 100
  Else
    DBalDealN5All = 0
  End If
End Function

Public Function CBalDealN5All( _
  BalanceDate As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional AddCondition As String = "" _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = " s240 in ('1','2','3','4','5') "
    If AddCondition <> "" Then
      S = S & " and " & AddCondition & " "
    End If
    CBalDealN5All = _
      BalanceObj.GetBalanceSumDB(BalanceDate, stSumPassive, BAccRange, Curr, S, "", "", "", WithCorrMvmnt, -1, -1) / 100 _
    + BalanceObj.GetBranchSumDB(BalanceDate, 0, stSumPassive, BAccRange, Curr, S, "", WithCorrMvmnt) / 100
  Else
    CBalDealN5All = 0
  End If
End Function

Public Function BalDealN5All( _
  BalanceDate As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional AddCondition As String = "" _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = " s240 in ('1','2','3','4','5') "
    If AddCondition <> "" Then
      S = S & " and " & AddCondition & " "
    End If
    BalDealN5All = _
      BalanceObj.GetBalanceSumDB(BalanceDate, stSum, BAccRange, Curr, S, "", "", "", WithCorrMvmnt, -1, -1) / 100 _
    + BalanceObj.GetBranchSumDB(BalanceDate, 0, stSum, BAccRange, Curr, S, "", WithCorrMvmnt) / 100
  Else
    BalDealN5All = 0
  End If
End Function

Public Function DBalDealN6All( _
  BalanceDate As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DBalDealN6All = _
      BalanceObj.GetBalanceSumDB(BalanceDate, stSumActive, BAccRange, Curr, " s180 in ('1','2','3','4','5','6','7','A','B')", "", "", "", WithCorrMvmnt, -1, -1) / 100 _
    + BalanceObj.GetBranchSumDB(BalanceDate, 0, stSumActive, BAccRange, Curr, " s180 in ('1','2','3','4','5','6','7','A','B')", "", WithCorrMvmnt) / 100
  Else
    DBalDealN6All = 0
  End If
End Function

Public Function DBalDealN6R013All( _
  BalanceDate As Date, BAccRange As String, _
  Optional Curr As String = "", _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional R013 As String = "" _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DBalDealN6R013All = _
      BalanceObj.GetBalanceSumDB(BalanceDate, stSumActive, BAccRange, Curr, " s180 in ('1','2','3','4','5','6','7','A','B')", R013, "", "", WithCorrMvmnt, -1, -1) / 100 _
    + BalanceObj.GetBranchSumDB(BalanceDate, 0, stSumActive, BAccRange, Curr, " s180 in ('1','2','3','4','5','6','7','A','B')", R013, WithCorrMvmnt) / 100
  Else
    DBalDealN6R013All = 0
  End If
End Function
Public Function BalDealN6R013All( _
  BalanceDate As Date, BAccRange As String, _
  Optional Curr As String = "", _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional R013 As String = "" _
) As Currency
  Application.Volatile (True)
  If Activated Then
    BalDealN6R013All = _
      BalanceObj.GetBalanceSumDB(BalanceDate, stSum, BAccRange, Curr, " s180 in ('1','2','3','4','5','6','7','A','B')", R013, "", "", WithCorrMvmnt, -1, -1) / 100 _
    + BalanceObj.GetBranchSumDB(BalanceDate, 0, stSum, BAccRange, Curr, " s180 in ('1','2','3','4','5','6','7','A','B')", R013, WithCorrMvmnt) / 100
  Else
    BalDealN6R013All = 0
  End If
End Function
Public Function CBalDealN6R013All( _
  BalanceDate As Date, BAccRange As String, _
  Optional Curr As String = "", _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional R013 As String = "" _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CBalDealN6R013All = _
      BalanceObj.GetBalanceSumDB(BalanceDate, stSumPassive, BAccRange, Curr, " s180 in ('1','2','3','4','5','6','7','A','B')", R013, "", "", WithCorrMvmnt, -1, -1) / 100 _
    + BalanceObj.GetBranchSumDB(BalanceDate, 0, stSumPassive, BAccRange, Curr, " s180 in ('1','2','3','4','5','6','7','A','B')", R013, WithCorrMvmnt) / 100
  Else
    CBalDealN6R013All = 0
  End If
End Function


Public Function CBalDealN6All( _
  BalanceDate As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    Dim InFCY  As Boolean
    InFCY = False
    CBalDealN6All = _
      BalanceObj.GetBalanceSumDB(BalanceDate, stSumPassive, BAccRange, Curr, " s180 in ('1','2','3','4','5','6','7','A','B')", "", "", "", WithCorrMvmnt, -1, -1) / 100 _
    + BalanceObj.GetBranchSumDB(BalanceDate, 0, stSumPassive, BAccRange, Curr, " s180 in ('1','2','3','4','5','6','7','A','B')", "", WithCorrMvmnt) / 100
  Else
    CBalDealN6All = 0
  End If
End Function

Public Function BalDealN6All( _
  BalanceDate As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    BalDealN6All = _
      BalanceObj.GetBalanceSumDB(BalanceDate, stSum, BAccRange, Curr, " s180 in ('1','2','3','4','5','6','7','A','B')", "", "", "", WithCorrMvmnt, -1, -1) / 100 _
    + BalanceObj.GetBranchSumDB(BalanceDate, 0, stSum, BAccRange, Curr, " s180 in ('1','2','3','4','5','6','7','A','B')", "", WithCorrMvmnt) / 100
  Else
    BalDealN6All = 0
  End If
End Function

Public Function DBalR013AllEq( _
  BalanceDate As Date, BAccRange As String, R013 As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1 _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    
    If R013 <> "" Then
      S = "R013 IN (" & R013 & ")"
    End If
    
  DBalR013AllEq = _
    BalanceObj.GetBalanceSumDB(BalanceDate, stSumActive, BAccRange, Curr, S, "", "", "", WithCorrMvmnt, -1, -1) / 100 _
  + BalanceObj.GetBranchSumDB(BalanceDate, 0, stSumActive, BAccRange, Curr, S, "", WithCorrMvmnt) / 100
  Else
    DBalR013AllEq = 0
  End If
End Function

Public Function CBalR013AllEq( _
  BalanceDate As Date, BAccRange As String, R013 As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1 _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    
    If R013 <> "" Then
      S = "R013 IN (" & R013 & ")"
    End If
    
    CBalR013AllEq = _
      BalanceObj.GetBalanceSumDB(BalanceDate, stSumPassive, BAccRange, Curr, S, "", "", "", WithCorrMvmnt, -1, -1) / 100 _
    + BalanceObj.GetBranchSumDB(BalanceDate, 0, stSumPassive, BAccRange, "", S, "", WithCorrMvmnt) / 100
  Else
    CBalR013AllEq = 0
  End If
End Function

Public Function fnN2AllActAmountEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  R013 As String, InvClass As String, RiskCoef As Integer, _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, _
  Optional B010 As String = "" _
) As Currency
  Dim S As String
  Application.Volatile (True)
  
  If Activated Then
      
    S = " n2riskkoef k,  " _
      & "    (select c.id, a.id accountid, c.bankidentifier " _
      & "     from aaccount a, vcontragentbank_b010 c" _
      & "     where a.siteid = c.siteid) ac" _
      & " where b.BAccountID = k.BAccountID " _
      & "   and ac.accountid(+) = b.accountid " _
      & "   and ac.id(+) = b.contragentid " _
      & "   and ( (k.b010 IS NULL " _
      & "          and ac.bankidentifier not in (select LPAD(n.b010, 10, '0') " _
      & "                                          from n2riskkoef n " _
      & "                                         where n.BAccountID = b.BAccountID " _
      & "                                           and n.b010 IS NOT NULL)) " _
      & "         or ac.bankidentifier = LPAD(k.b010, 10, '0')) " _
      & "   and NVL (TO_CHAR (k.R013), NVL (b.R013, '-1')) = NVL (b.R013, '-1') " _
      & "   and NVL (TO_CHAR (k.InvClass), b.InvClass) = b.InvClass " _
      & "   and k.riskkoef = " & RiskCoef _
      
    If B010 <> "" Then
      S = S & " and k.b010 = " & B010
    End If
    
    fnN2AllActAmountEq = _
      BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stSumActive, BAccRange, "", S, R013, "", InvClass, WithCorrMvmnt, ToboId, -1) / 100 * RiskCoef / 100 _
    + BalanceObj.GetBranchSumDB(|fffd||fffd||fffd||fffd|, 0, stSumActive, BAccRange, "", "", R013, WithCorrMvmnt) / 100 * RiskCoef / 100
  Else
    fnN2AllActAmountEq = 0
  End If
End Function

Public Function fnN2AllPassAmountEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  R013 As String, InvClass As String, RiskCoef As Integer, _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, _
  Optional B010 As String = "" _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
  
    S = " n2riskkoef k,  " _
      & "    (select c.id, a.id accountid, c.bankidentifier " _
      & "     from aaccount a, vcontragentbank_b010 c" _
      & "     where a.siteid = c.siteid) ac" _
      & " where b.BAccountID = k.BAccountID " _
      & "   and ac.accountid(+) = b.accountid " _
      & "   and ac.id(+) = b.contragentid " _
      & "   and ( (k.b010 IS NULL " _
      & "          and ac.bankidentifier not in (select LPAD(n.b010, 10, '0') " _
      & "                                          from n2riskkoef n " _
      & "                                         where n.BAccountID = b.BAccountID " _
      & "                                           and n.b010 IS NOT NULL)) " _
      & "         or ac.bankidentifier = LPAD(k.b010, 10, '0')) " _
      & "   and NVL (TO_CHAR (k.R013), NVL (b.R013, '-1')) = NVL (b.R013, '-1') " _
      & "   and NVL (TO_CHAR (k.InvClass), b.InvClass) = b.InvClass " _
      & "   and k.riskkoef = " & RiskCoef _

    If B010 <> "" Then
      S = S & " and k.b010 = " & B010
    End If
  
    fnN2AllPassAmountEq = _
      BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stSumPassive, BAccRange, "", S, R013, "", InvClass, WithCorrMvmnt, ToboId, -1) / 100 * RiskCoef / 100 _
    + BalanceObj.GetBranchSumDB(|fffd||fffd||fffd||fffd|, 0, stSumPassive, BAccRange, "", "", R013, WithCorrMvmnt) / 100 * RiskCoef / 100
  Else
    fnN2AllPassAmountEq = 0
  End If
End Function

Public Function fnN2AllActAmountEq_TEST( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  R013 As String, InvClass As String, RiskCoef As Integer, _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, _
  Optional B010 As String _
) As Currency
  Dim S As String
  Application.Volatile (True)
  
  If Activated Then
    S = " AND EXISTS " _
      & "   (SELECT 1 " _
      & "    FROM vcontragentbank_b010 c " _
      & "    WHERE c.ID = v.contragentid " _
      & "      AND c.siteid = v.siteid " _
      & "      AND c.siteid = " & B010 & ")" _

    fnN2AllActAmountEq_TEST = _
      BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stSumActive, BAccRange, "", S, R013, "", InvClass, WithCorrMvmnt, ToboId, -1) / 100 * RiskCoef / 100 _
    + BalanceObj.GetBranchSumDB(|fffd||fffd||fffd||fffd|, 0, stSumActive, BAccRange, "", "", R013, WithCorrMvmnt) / 100 * RiskCoef / 100
  Else
    fnN2AllActAmountEq_TEST = 0
  End If
End Function

Public Function fnN2AllPassAmountEq_TEST( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  R013 As String, InvClass As String, RiskCoef As Integer, _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    fnN2AllPassAmountEq_TEST = _
      BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stSumPassive, BAccRange, "", "", R013, "", InvClass, WithCorrMvmnt, ToboId, -1) / 100 * RiskCoef / 100 _
    + BalanceObj.GetBranchSumDB(|fffd||fffd||fffd||fffd|, 0, stSumPassive, BAccRange, "", "", R013, WithCorrMvmnt) / 100 * RiskCoef / 100
  Else
    fnN2AllPassAmountEq_TEST = 0
  End If
End Function



Attribute VB_Name = "BAccContr"
Public Function DBalContrEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccGroup As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String, _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Dim S As String
  Dim ActSum As Currency
  Application.Volatile (True)
  If Activated Then
    S = " baccount ba, balancepart bp " _
      & " where ba.ID = b.BAccountID and bp.aaccounttypeid = ba.aaccounttypeid " _
      & "   and ((bp.activepassive = 1) or (bp.balancesubpartid = 4)) " _
      & "   and bp.summainv = -1 and bp.summasign = 1 "
    ActSum = -BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stSumPassive, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, S, "", "", "", WithCorrMvmnt, ToboId, -1)
    S = " baccount ba, balancepart bp " _
      & " where ba.ID = b.BAccountID and bp.aaccounttypeid = ba.aaccounttypeid " _
      & "   and ((bp.activepassive = 1) or (bp.balancesubpartid = 4)) " _
      & "   and bp.summainv = -1 and bp.summasign = -1 "
    ActSum = ActSum + BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stSumActive, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, S, "", "", "", WithCorrMvmnt, ToboId, -1)
    If ActSum > 0 Then
      DBalContrEq = Abs(ActSum) / 100
      Else
        DBalContrEq = 0
    End If
    Else
      DBalContrEq = 0
  End If
End Function

Public Function CBalContrEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccGroup As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String, _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Dim S As String
  Dim ActSum As Currency
  Application.Volatile (True)
  If Activated Then
    S = " baccount ba, balancepart bp " _
      & " where ba.ID = b.BAccountID and bp.aaccounttypeid = ba.aaccounttypeid " _
      & "   and ((bp.activepassive = 2) and (bp.balancesubpartid <> 4)) " _
      & "   and bp.summainv = 1 and bp.summasign = 1 "
    ActSum = BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stSumPassive, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, S, "", "", "", WithCorrMvmnt, ToboId, -1)
    S = " baccount ba, balancepart bp " _
      & " where ba.ID = b.BAccountID and bp.aaccounttypeid = ba.aaccounttypeid " _
      & "   and ((bp.activepassive = 2) and (bp.balancesubpartid <> 4)) " _
      & "   and bp.summainv = 1 and bp.summasign = -1 "
    ActSum = ActSum - BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stSumActive, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, S, "", "", "", WithCorrMvmnt, ToboId, -1)
    If ActSum > 0 Then
      CBalContrEq = Abs(ActSum) / 100
      Else
        CBalContrEq = 0
    End If
    Else
      CBalContrEq = 0
  End If
End Function

Public Function DBalContr( _
  |fffd||fffd||fffd||fffd| As Date, BAccGroup As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String, _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Dim S As String
  Dim ActSum As Currency
  Application.Volatile (True)
  If Activated Then
    S = " baccount ba, balancepart bp " _
      & " where ba.ID = b.BAccountID and bp.aaccounttypeid = ba.aaccounttypeid " _
      & "   and ((bp.activepassive = 1) or (bp.balancesubpartid = 4)) " _
      & "   and bp.summainv = -1 and bp.summasign = 1 "
    ActSum = -BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stFSumPassive, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, S, "", "", "", WithCorrMvmnt, ToboId, -1)
    S = " baccount ba, balancepart bp " _
      & " where ba.ID = b.BAccountID and bp.aaccounttypeid = ba.aaccounttypeid " _
      & "   and ((bp.activepassive = 1) or (bp.balancesubpartid = 4)) " _
      & "   and bp.summainv = -1 and bp.summasign = -1 "
    ActSum = ActSum + BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stFSumActive, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, S, "", "", "", WithCorrMvmnt, ToboId, -1)
    If ActSum > 0 Then
      DBalContr = Abs(ActSum) / 100
      Else
        DBalContr = 0
    End If
    Else
      DBalContr = 0
  End If
End Function

Public Function CBalContr( _
  |fffd||fffd||fffd||fffd| As Date, BAccGroup As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String, _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Dim S As String
  Dim ActSum As Currency
  Application.Volatile (True)
  If Activated Then
    S = " baccount ba, balancepart bp " _
      & " where ba.ID = b.BAccountID and bp.aaccounttypeid = ba.aaccounttypeid " _
      & "   and ((bp.activepassive = 2) and (bp.balancesubpartid <> 4)) " _
      & "   and bp.summainv = 1 and bp.summasign = 1 "
    ActSum = BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stFSumPassive, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, S, "", "", "", WithCorrMvmnt, ToboId, -1)
    S = " baccount ba, balancepart bp " _
      & " where ba.ID = b.BAccountID and bp.aaccounttypeid = ba.aaccounttypeid " _
      & "   and ((bp.activepassive = 2) and (bp.balancesubpartid <> 4)) " _
      & "   and bp.summainv = 1 and bp.summasign = -1 "
    ActSum = BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stFSumActive, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, S, "", "", "", WithCorrMvmnt, ToboId, -1)
    If ActSum > 0 Then
      CBalContr = Abs(ActSum) / 100
      Else
        CBalContr = 0
    End If
    Else
      CBalContr = 0
  End If
End Function

'Public Function DBalContrEq(|fffd||fffd||fffd||fffd| As Date, BAccGroup As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
'  Dim s As String
'  Dim ActSum As Currency
'  Application.Volatile (True)
'  If Activated Then
'    s = " baccount bt where b.BAccountID = bt.ID and bt.aaccounttypeid in (3,11,61,63,71,73,81,83,91,93,94,99)"
'    ActSum = -BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, stSumActive, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, s, "", "", "")
'    s = " baccount bt where b.BAccountID = bt.ID and bt.aaccounttypeid in (12,13,85,88)"
'    ActSum = ActSum + BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, stSum, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, s, "", "", "")
'    s = " baccount bt where b.BAccountID = bt.ID and bt.aaccounttypeid in (33,89)"
'    ActSum = ActSum + BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, stSumPassive, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, s, "", "", "")
'    If ActSum < 0 Then
'      DBalContrEq = Abs(ActSum) / 100
'      Else
'        DBalContrEq = 0
'    End If
'    Else
'      DBalContrEq = 0
'  End If
'End Function
'
'Public Function CBalContrEq(|fffd||fffd||fffd||fffd| As Date, BAccGroup As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
'  Dim s As String
'  Dim PassSum As Currency
'  Application.Volatile (True)
'  If Activated Then
'    s = " baccount bt where b.BAccountID = bt.ID and bt.aaccounttypeid in (3,22,42,62,63,72,73,82,83,92,93,94,99)"
'    PassSum = BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, stSumActive, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, s, "", "", "")
'    s = " baccount bt where b.BAccountID = bt.ID and bt.aaccounttypeid in (21,23,41,43,86,87)"
'    PassSum = PassSum + BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, stSum, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, s, "", "", "")
'    s = " baccount bt where b.BAccountID = bt.ID and bt.aaccounttypeid in (33,89)"
'    PassSum = PassSum - BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, stSumActive, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, s, "", "", "")
'    If PassSum < 0 Then
'      CBalContrEq = Abs(PassSum) / 100
'      Else
'        CBalContrEq = 0
'    End If
'    Else
'      CBalContrEq = 0
'  End If
'End Function
'
'Public Function DBalContr(|fffd||fffd||fffd||fffd| As Date, BAccGroup As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
'  Dim s As String
'  Dim ActSum As Currency
'  Application.Volatile (True)
'  If Activated Then
'    s = " baccount bt where b.BAccountID = bt.ID and bt.aaccounttypeid in (3,11,61,63,71,73,81,83,91,93,94,99)"
'    ActSum = -BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, stFSumActive, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, s, "", "", "")
'    s = " baccount bt where b.BAccountID = bt.ID and bt.aaccounttypeid in (12,13,85,88)"
'    ActSum = ActSum + BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, stFSum, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, s, "", "", "")
'    s = " baccount bt where b.BAccountID = bt.ID and bt.aaccounttypeid in (33,89)"
'    ActSum = ActSum + BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, stFSumPassive, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, s, "", "", "")
'    If ActSum < 0 Then
'      DBalContr = Abs(ActSum) / 100
'      Else
'        DBalContr = 0
'    End If
'    Else
'      DBalContr = 0
'  End If
'End Function
'
'Public Function CBalContr(|fffd||fffd||fffd||fffd| As Date, BAccGroup As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
'  Dim s As String
'  Dim PassSum As Currency
'  Application.Volatile (True)
'  If Activated Then
'    s = " baccount bt where b.BAccountID = bt.ID and bt.aaccounttypeid in (3,22,42,62,63,72,73,82,83,92,93,94,99)"
'    PassSum = BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, stFSumActive, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, s, "", "", "")
'    s = " baccount bt where b.BAccountID = bt.ID and bt.aaccounttypeid in (21,23,41,43,86,87)"
'    PassSum = PassSum + BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, stFSum, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, s, "", "", "")
'    s = " baccount bt where b.BAccountID = bt.ID and bt.aaccounttypeid in (33,89)"
'    PassSum = PassSum - BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, stFSumActive, BAccGroup, |fffd||fffd||fffd||fffd||fffd||fffd|, s, "", "", "")
'    If PassSum < 0 Then
'      CBalContr = Abs(PassSum) / 100
'      Else
'        CBalContr = 0
'    End If
'    Else
'      CBalContr = 0
'  End If
'End Function
'
Attribute VB_Name = "BAccParamRestsDB"
Public Function DBalR013Eq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, R013 As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
     DBalR013Eq = BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stSumActive, BAccRange, Curr, "", R013, "", "", WithCorrMvmnt, ToboId, -1) / 100
  Else
    DBalR013Eq = 0
  End If
End Function

Public Function CBalR013Eq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, R013 As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
  ) As Currency
  Application.Volatile (True)
  If Activated Then
    CBalR013Eq = BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stSumPassive, BAccRange, Curr, "", R013, "", "", WithCorrMvmnt, ToboId, -1) / 100
  Else
    CBalR013Eq = 0
  End If
End Function

Public Function DBalContrParamEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, ParamValue As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DBalContrParamEq = BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stSumActive, BAccRange, Curr, "", "", "", ParamValue, WithCorrMvmnt, ToboId, -1) / 100
  Else
    DBalContrParamEq = 0
  End If
End Function

Public Function CBalContrParamEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, ParamValue As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CBalContrParamEq = BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stSumPassive, BAccRange, Curr, "", "", "", ParamValue, WithCorrMvmnt, ToboId, -1) / 100
  Else
    CBalContrParamEq = 0
  End If
End Function

Public Function GetDealBalance(BalanceDate As Date, _
            BAccountRange As String, AddCondition As String, _
            R013Value As String, InFCY As Boolean, AmntSign As Integer) As Currency
  Application.Volatile (True)
  If Activated Then
    Dim SType As Long
    If InFCY Then
      Select Case Sgn(AmntSign)
        Case 1
          SType = stFSumPassive
        Case 0
          SType = stFSum
        Case -1
          SType = stFSumActive
      End Select
    Else
      Select Case Sgn(AmntSign)
        Case 1
          SType = stSumPassive
        Case 0
          SType = stSum
        Case -1
          SType = stSumActive
      End Select
    End If
  ' GetDealBalance = BalanceObj.GetDealBalance(BalanceDate, BAccountRange, AddCondition, R013Value, InFCY, AmntSign) / 100
    GetDealBalance = BalanceObj.GetBalanceSumDB(BalanceDate, SType, BAccountRange, "", " s240 in ('1','2','3','4','5') ", R013Value, "", "", -1, -1, -1) / 100
  Else
    GetDealBalance = 0
  End If
End Function

Public Function DBalDealN5( _
  BalanceDate As Date, BAccountRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, _
  Optional AddCondition As String = "" _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = " s240 in ('1','2','3','4','5') "
    If AddCondition <> "" Then
      S = S & " and " & AddCondition & " "
    End If
    DBalDealN5 = BalanceObj.GetBalanceSumDB(BalanceDate, stSumActive, BAccountRange, Curr, S, "", "", "", WithCorrMvmnt, ToboId, -1) / 100
  Else
    DBalDealN5 = 0
  End If
End Function

Public Function CBalDealN5( _
  BalanceDate As Date, BAccountRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, _
  Optional AddCondition As String = "" _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = " s240 in ('1','2','3','4','5') "
    If AddCondition <> "" Then
      S = S & " and " & AddCondition & " "
    End If
    CBalDealN5 = BalanceObj.GetBalanceSumDB(BalanceDate, stSumPassive, BAccountRange, Curr, S, "", "", "", WithCorrMvmnt, ToboId, -1) / 100
  Else
    CBalDealN5 = 0
  End If
End Function

Public Function BalDealN5( _
  BalanceDate As Date, BAccountRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, _
  Optional AddCondition As String = "" _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = S & " and " & AddCondition & " "
    If AddCondition <> "" Then
      S = S & " and " & AddCondition
    End If
    BalDealN5 = BalanceObj.GetBalanceSumDB(BalanceDate, stSum, BAccountRange, Curr, S, "", "", "", WithCorrMvmnt, ToboId, -1) / 100
  Else
    BalDealN5 = 0
  End If
End Function

Public Function DBalDealN6( _
  BalanceDate As Date, BAccountRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DBalDealN6 = BalanceObj.GetBalanceSumDB(BalanceDate, stSumActive, BAccountRange, Curr, " s180 <>'9' ", "", "", "", WithCorrMvmnt, ToboId, -1) / 100
  Else
    DBalDealN6 = 0
  End If
End Function

Public Function CBalDealN6( _
  BalanceDate As Date, BAccountRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CBalDealN6 = BalanceObj.GetBalanceSumDB(BalanceDate, stSumPassive, BAccountRange, Curr, " s180 <>'9' ", "", "", "", WithCorrMvmnt, ToboId, -1) / 100
  Else
    CBalDealN6 = 0
  End If
End Function

Public Function BalDealN6( _
  BalanceDate As Date, BAccountRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    BalDealN6 = BalanceObj.GetBalanceSumDB(BalanceDate, stSum, BAccountRange, Curr, " s180 <>'9' ", "", "", "", WithCorrMvmnt, ToboId, -1) / 100
  Else
    BalDealN6 = 0
  End If
End Function
Public Function DBalDealS180( _
  BalanceDate As Date, BAccountRange As String, S180Range As String, _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DBalDealS180 = BalanceObj.GetBalanceSumDB(BalanceDate, stSumActive, BAccountRange, "", " s180 in (" & S180Range & ") ", "", "", "", WithCorrMvmnt, ToboId, -1) / 100
  Else
    DBalDealS180 = 0
  End If
End Function

Public Function CBalDealS180( _
  BalanceDate As Date, BAccountRange As String, S180Range As String, _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CBalDealS180 = BalanceObj.GetBalanceSumDB(BalanceDate, stSumPassive, BAccountRange, "", " s180 in (" & S180Range & ") ", "", "", "", WithCorrMvmnt, ToboId, -1) / 100
  Else
    CBalDealS180 = 0
  End If
End Function

Public Function DBalDealS240( _
  BalanceDate As Date, BAccountRange As String, S240Range As String, _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DBalDealS240 = BalanceObj.GetBalanceSumDB(BalanceDate, stSumActive, BAccountRange, "", " s240 in (" & S240Range & ") ", "", "", "", WithCorrMvmnt, ToboId, -1) / 100
  Else
    DBalDealS240 = 0
  End If
End Function

Public Function CBalDealS240( _
  BalanceDate As Date, BAccountRange As String, S240Range As String, _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CBalDealS240 = BalanceObj.GetBalanceSumDB(BalanceDate, stSumPassive, BAccountRange, "", " s240 in (" & S240Range & ") ", "", "", "", WithCorrMvmnt, ToboId, -1) / 100
  Else
    CBalDealS240 = 0
  End If
End Function

'=================== |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| s180 |fffd| S240 ========================

Public Function GetWhereS180S240(S180Range As String, S240Range As String) As String
  Dim S As String
  If S180Range <> "" Then
    S = " s180 in (" & S180Range & ") "
    If S240Range <> "" Then
      S = S & " AND s240 in (" & S240Range & ") "
    End If
  Else
    If S240Range <> "" Then
      S = " s240 in (" & S240Range & ") "
    Else
      S = ""
    End If
  End If
  
  GetWhereS180S240 = S
End Function

Public Function DBalParamsEQ( _
  BalanceDate As Date, BAccountRange As String, _
  S180Range As String, S240Range As String, R013 As String, _
  Optional R031 As Integer = -1, _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, _
  Optional R012 As String = "" _
) As Currency
  Dim S As String
  S = ""
  Application.Volatile (True)
  If Activated Then
    S = GetWhereS180S240(S180Range, S240Range)
    If Trim(R012) <> "" Then
       If S <> "" Then
          S = S & " and "
       End If
       S = S & " R012 = " & R012
    End If
    DBalParamsEQ = BalanceObj.GetBalanceSumDB( _
      BalanceDate, stSumActive, BAccountRange, "", S, R013, "", "", WithCorrMvmnt, ToboId, R031) / 100
  Else
    DBalParamsEQ = 0
  End If
End Function

Public Function CBalParamsEQ( _
  BalanceDate As Date, BAccountRange As String, _
  S180Range As String, S240Range As String, R013 As String, _
  Optional R031 As Integer = -1, _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, _
  Optional R012 As String = "" _
) As Currency
  Dim S As String
  S = ""
  Application.Volatile (True)
  If Activated Then
    S = GetWhereS180S240(S180Range, S240Range)
    If Trim(R012) <> "" Then
       If S <> "" Then
          S = S & " and "
       End If
       S = S & " R012 = " & R012
    End If
    CBalParamsEQ = BalanceObj.GetBalanceSumDB( _
      BalanceDate, stSumPassive, BAccountRange, _
      "", S, R013, "", "", WithCorrMvmnt, ToboId, R031) / 100
  Else
    CBalParamsEQ = 0
  End If
End Function

Public Function DBalParamsEQBranch( _
  BalanceDate As Date, BAccountRange As String, _
  S180Range As String, S240Range As String, R013 As String, _
  Optional WithCorrMvmnt As Integer = -1 _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = GetWhereS180S240(S180Range, S240Range)
    
    DBalParamsEQBranch = _
     BalanceObj.GetBranchSumDB( _
        BalanceDate, 0, stSumActive, BAccountRange, "", S, R013, WithCorrMvmnt) / 100
  Else
    DBalParamsEQBranch = 0
  End If
End Function

Public Function CBalParamsEQBranch( _
  BalanceDate As Date, BAccountRange As String, _
  S180Range As String, S240Range As String, R013 As String, _
  Optional R031 As Integer = -1, _
  Optional WithCorrMvmnt As Integer = -1 _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = GetWhereS180S240(S180Range, S240Range)
    
    CBalParamsEQBranch = _
     BalanceObj.GetBranchSumDB( _
        BalanceDate, 0, stSumPassive, BAccountRange, "", S, R013, WithCorrMvmnt) / 100
  
  Else
    CBalParamsEQBranch = 0
  End If
End Function

Public Function DBalParamsEQall( _
  BalanceDate As Date, BAccountRange As String, _
  S180Range As String, S240Range As String, R013 As String, _
  Optional WithCorrMvmnt As Integer = -1 _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    DBalParamsEQall = _
       DBalParamsEQ(BalanceDate, BAccountRange, S180Range, S240Range, R013, -1, WithCorrMvmnt) _
     + DBalParamsEQBranch(BalanceDate, BAccountRange, S180Range, S240Range, R013, WithCorrMvmnt)
  Else
    DBalParamsEQall = 0
  End If
End Function

Public Function CBalParamsEQall( _
  BalanceDate As Date, BAccountRange As String, _
  S180Range As String, S240Range As String, R013 As String, _
  Optional R031 As Integer = -1, _
  Optional WithCorrMvmnt As Integer = -1 _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    CBalParamsEQall = _
       CBalParamsEQ(BalanceDate, BAccountRange, S180Range, S240Range, R013, -1, WithCorrMvmnt) _
     + CBalParamsEQBranch(BalanceDate, BAccountRange, S180Range, S240Range, R013, R031, WithCorrMvmnt)
  Else
    CBalParamsEQall = 0
  End If
End Function
' |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd| BAccRange, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| Curr, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| AccAddParameter
Public Function SumDopParam(|fffd||fffd||fffd||fffd| As Date, _
                            BAccRange As String, _
                            Curr As String, _
                            Optional AccAddParameter As String = "" _
) As Currency
  Dim S As String
  Dim q As B2Balance.QueryX
  Application.Volatile (True)
  If Activated Then
     If AccAddParameter <> "" Then
        S = "Select SUM(NVL(AH.THEVALUE,0)) RESULT " & _
            "  from Accparamvalue_History AH, " & _
            "       AACCOUNT A " & _
            " where AH.ACCOUNTID = A.ID " & _
            "   and AH.ACCPARAMSNAME = '" & AccAddParameter & "' " & _
            "   and A.BACCOUNTID in (" & BAccRange & ") " & _
            "   and A.CURRENCYID = :p_Cur " & _
            "   and :p_Date between AH.VALIDFROM and AH.VALIDTILL "
        Set q = BalanceObj.CreateQuery(S)
        q.Params("p_Date") = |fffd||fffd||fffd||fffd|
        q.Params("p_Cur") = Curr
        q.Active = True
        SumDopParam = NVL(q.Fields("RESULT"))
     Else
        SumDopParam = BalanceObj.GetBAccSumDB(|fffd||fffd||fffd||fffd|, BAccRange, Curr, stSum, -1, -1, -1, "")
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| balanceocx_rests
        'SumDopParam = BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stFSum, BAccRange, Curr, "1 = 0", "", "", "", -1, -1, -1) / 100
        'S = "SELECT SUM(NVL(SUMMAPASSIV,0) - NVL(SUMMAACTIV,0)) RESULT " & _
        '    "  FROM BALANCEOCX_RESTS b " & _
        '    " WHERE b.DATEEND = :p_Date " & _
        '    "   AND b.BACCOUNTID IN (" & BAccRange & ") " & _
        '    " AND b.currencyid = :p_Cur"
     End If
  Else
     SumDopParam = 0
  End If
End Function



'Public Function DBalR013Eq_OVDP( _
'  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, R013 As String, _
'  Optional Curr As String = "", _
'  Optional AccAddParameter As String = "", _
'  Optional WithCorrMvmnt As Integer = -1, _
'  Optional ToboId As Integer = -1 _
') As Currency
'  Application.Volatile (True)
'  If Activated Then
'     If AccAddParameter = "" Then
'       DBalR013Eq_OVDP = BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stSumActive, BAccRange, Curr, "", R013, "", "", WithCorrMvmnt, ToboId, -1) / 100
'     Else
'       ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| balanceocx_rests
'       DBalR013Eq_OVDP = BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stSumActive, BAccRange, Curr, "1 = 0", R013, "", "", WithCorrMvmnt, ToboId, -1) / 100
'       Dim q As B2Balance.QueryX
'       Dim S As String
'       S = "SELECT SUM (NVL(acp.thevalue, SUMMAACTIVEQ)) RESULT     " & _
'           "  FROM BALANCEOCX_RESTS b,                              " & _
'           "       (SELECT acp.accountid, acp.thevalue              " & _
'           "          FROM accparamvalue acp                        " & _
'           "         WHERE acp.accparamsname = '|fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|' " & _
'           "       ) acp                                            " & _
'           " WHERE b.dateend = :DATE                                " & _
'           "   AND b.baccountid IN (" & BAccRange & ")              " & _
'           "   AND b.ACCOUNTID = acp.accountid(+)                   "
'
'       If R013 <> "" Then
'         S = S & " AND b.R013 = :R013"
'       End If
'       If Curr <> "" Then
'         S = S & " AND b.CURRENCYID = :Curr"
'       End If
'       If WithCorrMvmnt <> -1 Then
'         S = S & " AND b.CorrMode = :WithCorrMvmnt"
'       End If
'       If ToboId <> -1 Then
'         S = S & " AND b.ToboID = :ToboId"
'       End If
'
'       Set q = BalanceObj.CreateQuery(S)
'
'       q.Params("DATE") = |fffd||fffd||fffd||fffd|
'       If R013 <> "" Then
'         q.Params("R013") = R013
'       End If
'       If Curr <> "" Then
'         q.Params("Curr") = Curr
'       End If
'       If WithCorrMvmnt <> -1 Then
'         q.Params("WithCorrMvmnt") = WithCorrMvmnt
'       End If
'       If ToboId <> -1 Then
'         q.Params("ToboId") = ToboId
'       End If
'
'       q.Active = True
'       DBalR013Eq_OVDP = NVL(q.Fields("RESULT"))
'     End If
'  Else
'    DBalR013Eq_OVDP = 0
'  End If
'End Function

Attribute VB_Name = "BAccRestsDB"
Public Function DBalEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, Optional SiteId As Long = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DBalEq = BalanceObj.GetBAccSumDB(|fffd||fffd||fffd||fffd|, BAccRange, Curr, stSumActive, WithCorrMvmnt, ToboId, SiteId, "") / 100
  Else
    DBalEq = 0
  End If
End Function

Public Function CBalEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, Optional SiteId As Long = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CBalEq = BalanceObj.GetBAccSumDB(|fffd||fffd||fffd||fffd|, BAccRange, Curr, stSumPassive, WithCorrMvmnt, ToboId, SiteId, "") / 100
  Else
    CBalEq = 0
  End If
End Function

Public Function BalEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, Optional SiteId As Long = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    BalEq = BalanceObj.GetBAccSumDB(|fffd||fffd||fffd||fffd|, BAccRange, Curr, stSum, WithCorrMvmnt, ToboId, SiteId, "") / 100
  Else
    BalEq = 0
  End If
End Function

Public Function DBalVirtEq( _
  BAccRange As String, _
  Optional Curr As String = "", Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DBalVirtEq = BalanceObj.GetBalanceSumDB(-1, stVSumActive, BAccRange, Curr, "", "", "", "", -1, ToboId, -1) / 100
  Else
    DBalVirtEq = 0
  End If
End Function

Public Function CBalVirtEq( _
  BAccRange As String, _
  Optional Curr As String = "", Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CBalVirtEq = BalanceObj.GetBalanceSumDB(-1, stVSumPassive, BAccRange, Curr, "", "", "", "", -1, ToboId, -1) / 100
  Else
    CBalVirtEq = 0
  End If
End Function

' |fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|

Public Function DBal( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, Optional SiteId As Long = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DBal = BalanceObj.GetBAccSumDB(|fffd||fffd||fffd||fffd|, BAccRange, Curr, stFSumActive, WithCorrMvmnt, ToboId, SiteId, "") / 100
  Else
    DBal = 0
  End If
End Function

Public Function CBal( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, Optional SiteId As Long = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CBal = BalanceObj.GetBAccSumDB(|fffd||fffd||fffd||fffd|, BAccRange, Curr, stFSumPassive, WithCorrMvmnt, ToboId, SiteId, "") / 100
  Else
    CBal = 0
  End If
End Function

Public Function Bal( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, Optional SiteId As Long = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    Bal = BalanceObj.GetBAccSumDB(|fffd||fffd||fffd||fffd|, BAccRange, Curr, stFSum, WithCorrMvmnt, ToboId, SiteId, "") / 100
  Else
    Bal = 0
  End If
End Function

Public Function DBalVirt( _
  BAccRange As String, _
  Optional Curr As String = "", Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DBalVirt = BalanceObj.GetBalanceSumDB(-1, stVFSumActive, BAccRange, Curr, "", "", "", "", -1, ToboId, -1) / 100
  Else
    DBalVirt = 0
  End If
End Function

Public Function CBalVirt( _
  BAccRange As String, _
  Optional Curr As String = "", Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CBalVirt = BalanceObj.GetBalanceSumDB(-1, stVFSumPassive, BAccRange, Curr, "", "", "", "", -1, ToboId, -1) / 100
  Else
    CBalVirt = 0
  End If
End Function



Attribute VB_Name = "BranchBalance"
'|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| GetBranchBAccSum |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,
'|fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| OCX |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| GetBranchSumDB
'|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| :
'DBalMaskBranch = BalanceObj.GetBranchBAccSum(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, stFSumActive) / 100

Public Function CBalMaskBranchEq( _
  |fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String, _
  Optional WithCorrMvmnt As Integer = -1 _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    CBalMaskBranchEq = BalanceObj.GetBranchSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd|, stSumPassive, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, "", "", WithCorrMvmnt) / 100
    Else
      CBalMaskBranchEq = 0
  End If
End Function

Public Function DBalMaskBranchEq( _
  |fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String, _
  Optional WithCorrMvmnt As Integer = -1 _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    DBalMaskBranchEq = BalanceObj.GetBranchSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd|, stSumActive, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, "", "", WithCorrMvmnt) / 100
    Else
      DBalMaskBranchEq = 0
  End If
End Function

Public Function BalMaskBranchEq( _
  |fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String, _
  Optional WithCorrMvmnt As Integer = -1 _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    BalMaskBranchEq = BalanceObj.GetBranchSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd|, stSum, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, "", "", WithCorrMvmnt) / 100
    Else
      BalMaskBranchEq = 0
  End If
End Function

Public Function DMaskBranchEq( _
  |fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String, _
  Optional WithCorrMvmnt As Integer = -1 _
) As Currency
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    DMaskBranchEq = BalanceObj.GetBranchSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd|, stDebet, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, "", "", WithCorrMvmnt) / 100
    Else
      DMaskBranchEq = 0
  End If
End Function

Public Function CMaskBranchEq( _
  |fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String, _
  Optional WithCorrMvmnt As Integer = -1 _
) As Currency
' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    CMaskBranchEq = BalanceObj.GetBranchSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd|, stCredit, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, "", "", WithCorrMvmnt) / 100
    Else
      CMaskBranchEq = 0
  End If
End Function

Public Function DBalMaskBranch( _
  |fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String, _
  Optional WithCorrMvmnt As Integer = -1 _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    DBalMaskBranch = BalanceObj.GetBranchSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd|, stFSumActive, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, "", "", WithCorrMvmnt) / 100
    Else
      DBalMaskBranch = 0
  End If
End Function

Public Function CBalMaskBranch( _
  |fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String, _
  Optional WithCorrMvmnt As Integer = -1 _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    CBalMaskBranch = BalanceObj.GetBranchSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd|, stFSumPassive, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, "", "", WithCorrMvmnt) / 100
    Else
      CBalMaskBranch = 0
  End If
End Function

Public Function DMaskBranch( _
  |fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String, _
  Optional WithCorrMvmnt As Integer = -1 _
) As Currency
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    DMaskBranch = BalanceObj.GetBranchSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd|, stFDebet, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, "", "", WithCorrMvmnt) / 100
    Else
      DMaskBranch = 0
  End If
End Function

Public Function CMaskBranch( _
  |fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String, _
  Optional WithCorrMvmnt As Integer = -1 _
) As Currency
' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    CMaskBranch = BalanceObj.GetBranchSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd|, stFCredit, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, "", "", WithCorrMvmnt) / 100
    Else
      CMaskBranch = 0
  End If
End Function

Attribute VB_Name = "Budj"
'1)  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'2)  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'3)  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'4)  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
'|fffd|   |fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|)
'|fffd|   |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd|: |fffd|26302122222222|fffd|, |fffd|2630*|fffd|, |fffd|2630*,263*,26352222222222|fffd|
'|fffd|   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
'|fffd|   |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
'|fffd|   |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'|fffd|   |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'|fffd|   |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
   
Dim LastBalanceDate As Date

Function RunConstructor(arcdate As Date)
  Dim q As B2Balance.QueryX
  Set q = BalanceObj.CreateQuery( _
      "begin eprlogin_second; pkg_balanceocx.filldealbalancereport( :ArcDate ); end; ")
  q.Params("ArcDate") = arcdate
  q.ExecSQL
  LastBalanceDate = arcdate
End Function

Public Function DBalMaskBudj(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Optional CurrencyId As String = "980", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    If |fffd||fffd||fffd||fffd| <> LastBalanceDate Then
      RunConstructor (|fffd||fffd||fffd||fffd|)
    End If
    S = _
      "SELECT NVL(SUM (NVL (ActiveAmount, 0)),0) ActiveAmount " & _
      "  FROM VBudgAccountBalance bal, Aaccount A " & _
      " WHERE A.ID = bal.Accountid " & _
      "   AND A.CURRENCYID = " & CurrencyId
    If AccRange <> "" Then
      S = S & " AND fnInStrMask (A.Accountno, '" & AccRange & "') = 1"
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND fnInStrMask(bal.intrabankcode,'" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "') = 1"
    End If
    If |fffd||fffd| <> "" Then
      S = S & "   AND bal.mngresponscenterid IN (" & |fffd||fffd| & ")"
    End If
    If |fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND bal.departmentid IN (" & |fffd||fffd||fffd||fffd||fffd| & ")"
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND fnInStrMask(bal.mngproductid, '" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "') = 1"
    End If
    DBalMaskBudj = BalanceObj.GetQueryValue(S, Array()) / 100
  Else
    DBalMaskBudj = 0
  End If
End Function
  
Public Function CBalMaskBudj(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Optional CurrencyId As String = "980", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    If |fffd||fffd||fffd||fffd| <> LastBalanceDate Then
      RunConstructor (|fffd||fffd||fffd||fffd|)
    End If
    S = _
      "SELECT NVL(sum(nvl(PassiveAmount,0)),0) PassiveAmount" & _
      "  FROM VBudgAccountBalance bal, Aaccount A" & _
      " WHERE A.ID = bal.Accountid" & _
      "   AND A.CURRENCYID = " & CurrencyId
    If AccRange <> "" Then
      S = S & "   AND fnInStrMask(A.Accountno, '" & AccRange & "') = 1"
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND fnInStrMask(bal.intrabankcode,'" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "') = 1"
    End If
    If |fffd||fffd| <> "" Then
      S = S & "   AND bal.mngresponscenterid IN (" & |fffd||fffd| & ")"
    End If
    If |fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND bal.departmentid IN (" & |fffd||fffd||fffd||fffd||fffd| & ")"
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND fnInStrMask(bal.mngproductid, '" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "') = 1"
    End If
    CBalMaskBudj = BalanceObj.GetQueryValue(S, Array()) / 100
  Else
   CBalMaskBudj = 0
  End If
End Function
  
Public Function DBalMaskBudjEq(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Optional CurrencyId As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    If |fffd||fffd||fffd||fffd| <> LastBalanceDate Then
      RunConstructor (|fffd||fffd||fffd||fffd|)
    End If
    S = _
      "SELECT NVL(sum(nvl(ActiveAmountEq,0)),0)  ActiveAmountEq " & _
      "  FROM VBudgAccountBalance bal, Aaccount A" & _
      " WHERE A.ID = bal.Accountid"
    If CurrencyId <> "" Then
      S = S & "   AND A.CURRENCYID in (" & CurrencyId & ")"
    End If
    If AccRange <> "" Then
      S = S & "   AND fnInStrMask(A.Accountno, '" & AccRange & "') = 1"
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND fnInStrMask(bal.intrabankcode,'" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "') = 1"
    End If
    If |fffd||fffd| <> "" Then
      S = S & "   AND bal.mngresponscenterid IN (" & |fffd||fffd| & ")"
    End If
    If |fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND bal.departmentid IN (" & |fffd||fffd||fffd||fffd||fffd| & ")"
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND fnInStrMask(bal.mngproductid, '" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "') = 1"
    End If
    DBalMaskBudjEq = BalanceObj.GetQueryValue(S, Array()) / 100
 Else
   DBalMaskBudjEq = 0
 End If
End Function
  
Public Function CBalMaskBudjEq(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Optional CurrencyId As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    If |fffd||fffd||fffd||fffd| <> LastBalanceDate Then
      RunConstructor (|fffd||fffd||fffd||fffd|)
    End If
    S = _
      "SELECT NVL(sum(nvl(PassiveAmountEq,0)),0)  PassiveAmountEq" & _
      "  FROM VBudgAccountBalance bal, Aaccount A" & _
      " WHERE A.ID = bal.Accountid"
    If CurrencyId <> "" Then
      S = S & "   AND A.CURRENCYID in (" & CurrencyId & ")"
    End If
    If AccRange <> "" Then
      S = S & "   AND fnInStrMask(A.Accountno, '" & AccRange & "') = 1"
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND fnInStrMask(bal.intrabankcode,'" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "') = 1"
    End If
    If |fffd||fffd| <> "" Then
      S = S & "   AND bal.mngresponscenterid IN (" & |fffd||fffd| & ")"
    End If
    If |fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND bal.departmentid IN (" & |fffd||fffd||fffd||fffd||fffd| & ")"
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND fnInStrMask(bal.mngproductid, '" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "') = 1"
    End If
    CBalMaskBudjEq = BalanceObj.GetQueryValue(S, Array()) / 100
  Else
    CBalMaskBudjEq = 0
  End If
End Function
  
'5)  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'6)  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'7)  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'8)  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
'|fffd|   |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'|fffd|   |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'|fffd|   |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd|: |fffd|26302122222222|fffd|, |fffd|2630*|fffd|, |fffd|2630*,263*,26352222222222|fffd|
'|fffd|   |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
'|fffd|   |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
'|fffd|   |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'|fffd|   |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'|fffd|   |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  
Public Function DMaskBudj(DateBegin As Date, DateEnd As Date, _
AccRange As String, Optional CurrencyId As String = "980", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = _
      "SELECT nvl(sum(nvl(DebetAmount,0)),0) DebetAmount" & _
      " from VBudgAccountFlows bal, Aaccount A " & _
      " where bal.AccountID = A.ID " & _
      " and bal.arcdate between :DateBegin and :DateEnd " & _
      " and A.CURRENCYID = " & CurrencyId
    If AccRange <> "" Then
      S = S & "   AND fnInStrMask(A.Accountno, '" & AccRange & "') = 1"
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND fnInStrMask(bal.intrabankcode,'" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "') = 1"
    End If
    If |fffd||fffd| <> "" Then
      S = S & "   AND bal.responscenterid IN (" & |fffd||fffd| & ")"
    End If
    If |fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND bal.departmentid IN (" & |fffd||fffd||fffd||fffd||fffd| & ")"
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND fnInStrMask(bal.productid, '" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "') = 1"
    End If
    DMaskBudj = BalanceObj.GetQueryValue(S, Array(DateBegin, DateEnd)) / 100
  Else
    DMaskBudj = 0
  End If
End Function

Public Function CMaskBudj(DateBegin As Date, DateEnd As Date, _
AccRange As String, Optional CurrencyId As String = "980", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = _
       "SELECT nvl(sum(nvl(CreditAmount,0)),0) CreditAmount" & _
      " from VBudgAccountFlows bal, Aaccount A " & _
      " where bal.AccountID = A.ID " & _
      " and bal.arcdate between :DateBegin and :DateEnd " & _
      " and A.CURRENCYID = " & CurrencyId
    If AccRange <> "" Then
      S = S & "   AND fnInStrMask(A.Accountno, '" & AccRange & "') = 1"
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND fnInStrMask(bal.intrabankcode,'" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "') = 1"
    End If
    If |fffd||fffd| <> "" Then
      S = S & "   AND bal.responscenterid IN (" & |fffd||fffd| & ")"
    End If
    If |fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND bal.departmentid IN (" & |fffd||fffd||fffd||fffd||fffd| & ")"
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND fnInStrMask(bal.productid, '" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "') = 1"
    End If
    CMaskBudj = BalanceObj.GetQueryValue(S, Array(DateBegin, DateEnd)) / 100
  Else
    CMaskBudj = 0
  End If
End Function

Public Function DMaskBudjEq(DateBegin As Date, DateEnd As Date, _
AccRange As String, Optional CurrencyId As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = _
      "SELECT nvl(sum(nvl(DebetAmount*cr.rate/cr.base,0)),0) DebetAmount" & _
      " from VBudgAccountFlows bal, Aaccount A, currentdaysetting d, currencyrateall cr " & _
      " where bal.AccountID = A.ID and " & _
      " bal.arcdate between  :DateBegin and :DateEnd and " & _
      " A.Currencyid = cr.currencyid and " & _
      " cr.arcdate = least(:DateEnd,d.systemday) "
    If CurrencyId <> "" Then
      S = S & "   AND A.CURRENCYID in (" & CurrencyId & ")"
    End If
    If AccRange <> "" Then
      S = S & "   AND fnInStrMask(A.Accountno, '" & AccRange & "') = 1"
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND fnInStrMask(bal.intrabankcode,'" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "') = 1"
    End If
    If |fffd||fffd| <> "" Then
      S = S & "   AND bal.responscenterid IN (" & |fffd||fffd| & ")"
    End If
    If |fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND bal.departmentid IN (" & |fffd||fffd||fffd||fffd||fffd| & ")"
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND fnInStrMask(bal.productid, '" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "') = 1"
    End If
    DMaskBudjEq = BalanceObj.GetQueryValue(S, Array(DateBegin, DateEnd, DateEnd)) / 100
  Else
    DMaskBudjEq = 0
  End If
End Function
 
Public Function CMaskBudjEq(DateBegin As Date, DateEnd As Date, _
AccRange As String, Optional CurrencyId As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
) As Currency
Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = _
      "SELECT nvl(sum(nvl(CreditAmount*cr.rate/cr.base,0)),0) CreditAmount" & _
      " from VBudgAccountFlows bal, Aaccount A, currentdaysetting d, currencyrateall cr " & _
      " where bal.AccountID = A.ID and " & _
      " bal.arcdate between  :DateBegin  and :DateEnd and " & _
      " A.Currencyid = cr.currencyid and " & _
      " cr.arcdate = least(d.systemday,:DateEnd)"
    If CurrencyId <> "" Then
      S = S & "   AND A.CURRENCYID in (" & CurrencyId & ")"
    End If
    If AccRange <> "" Then
      S = S & "   AND fnInStrMask(A.Accountno, '" & AccRange & "') = 1"
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND fnInStrMask(bal.intrabankcode,'" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "') = 1"
    End If
    If |fffd||fffd| <> "" Then
      S = S & "   AND bal.responscenterid IN (" & |fffd||fffd| & ")"
    End If
    If |fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND bal.departmentid IN (" & |fffd||fffd||fffd||fffd||fffd| & ")"
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "" Then
      S = S & "   AND fnInStrMask(bal.productid, '" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "') = 1"
    End If
    CMaskBudjEq = BalanceObj.GetQueryValue(S, Array(DateBegin, DateEnd, DateEnd)) / 100
  Else
    CMaskBudjEq = 0
  End If
End Function


'|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1-4, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
'begin
'  eprlogin_second;
'  pkg_Deal.INIT_BALANCE('03.04.2004');
'end;

'|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (1-4):
'select sum(nvl(PassiveAmount,0)) PassiveAmount,     -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'       sum(nvl(PassiveAmountEq,0)) PassiveAmountEq,
'       sum(nvl(ActiveAmount,0)) ActiveAmount,       -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'       sum(nvl(ActiveAmountEq,0)) ActiveAmountEq
'from  VBudgAccountBalance bal,  Aaccount A
'where A.ID = bal.Accountid and
'      A.CURRENCYID = 980 and
'      fnInStrMask(A.Accountno, '2630,26') = 1 and -- |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'      bal.intrabankcode in '0,1,2,3' and  -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'      bal.departmentid in (2,3,4) and --|fffd||fffd||fffd||fffd||fffd||fffd|
'      bal.mngproductid in (3,5,8,9) and -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'      bal.mngresponscenterid in (8,9,5)  --|fffd||fffd||fffd||fffd||fffd||fffd|


'|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 5-8:
 
'select sum(nvl(DebetAmount,0)) DebetAmount,  --|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'       sum(nvl(DebetAmount,0)*cr.Rate/Cr.Base) DebetAmountEq,
'       sum(nvl(CreditAmount,0)) CreditAmount,  --|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'       sum(nvl(CreditAmount,0)*cr.Rate/Cr.Base) CreditAmountEq
'from VBudgAccountFlows bal, Aaccount A, currencyrateall cr
'where bal.AccountID = A.ID and
'      Bal.arcdate between '01.04.2004' and '03.04.2004' and --|fffd||fffd||fffd||fffd||fffd||fffd|
'      A.Currencyid = cr.currencyid and
'      cr.arcdate = '03.04.2004' and -- |fffd||fffd||fffd||fffd| |fffd||fffd|
'      A.CURRENCYID = 980 and
'     --|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
'      fnInStrMask(A.Accountno, '2630,26') = 1 and -- |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'      bal.intrabankcode in '0,1,2,3' and  -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'      bal.departmentid in (2,3,4) and --|fffd||fffd||fffd||fffd||fffd||fffd|
 '     bal.productid in (3,5,8,9) and -- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'      bal.responscenterid in (8,9,5)  --|fffd||fffd||fffd||fffd||fffd||fffd|

Attribute VB_Name = "CBR"
Public BalanceDayCBR As Date

Public Function InitBlnsCBR(date1 As Date) As Date
 InitBlnsCBR = DateValue("01/01/1991")
 On Error GoTo errorhandler

 Dim q As B2Balance.QueryX
 Set q = BalanceObj.CreateQuery("begin pkl_arc_balance_nrb.reportconstructor(:adate, NULL); end;")
 q.Params("adate") = date1
 q.ExecSQL
 InitBlnsCBR = date1
 Exit Function
errorhandler:
 Msg = "|fffd||fffd||fffd||fffd||fffd||fffd| # " & Str(Err.Number) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| InitBlnsCBR |fffd| " _
            & Err.Source & Chr(13) & Err.Description
    MsgBox Msg, , "|fffd||fffd||fffd||fffd||fffd||fffd|", Err.HelpFile, Err.HelpContext
End Function

Public Function GetBalanceDayCBR(date1 As Date) As Date
  Application.Volatile (True)
  If Activated Then
    GetBalanceDayCBR = "01.01.1902"
    If IsNull(BalanceDayCBR) Or date1 <> BalanceDayCBR Then
      Call InitBlnsCBR(date1)
      BalanceDayCBR = date1
      GetBalanceDayCBR = date1
    End If
  Else
    GetBalanceDayCBR = "01.01.1901"
  End If
End Function

Public Function DBalRubCBR(BalanceDate As Date, BAcc As String, Optional Curr As String = "", Optional ContragentID As Long = -1, Optional SiteId As Long = -1) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    Call GetBalanceDayCBR(BalanceDate)
    S = "select NVL(ABS(SUM(SUMMAEQ01)),0) from balance_report where SUMMAEQ01<0 and baccountid = :BACCT"
    If Curr <> "" Then
      S = S & " and currencyid = " & Curr
    End If
    If ContragentID <> -1 Then
      S = S & " and summa01 = " & ContragentID
    End If
    If SiteId <> -1 Then
      S = S & " and summa02 = " & SiteId
    End If
    DBalRubCBR = BalanceObj.GetQueryValue(S, Array(BAcc)) / 100
  Else
    DBalRubCBR = 0
  End If
End Function

Public Function CBalRubCBR(BalanceDate As Date, BAcc As String, Optional Curr As String = "", Optional ContragentID As Long = -1, Optional SiteId As Long = -1) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    Call GetBalanceDayCBR(BalanceDate)
    S = "select NVL(SUM(SUMMAEQ01),0) from balance_report where SUMMAEQ01>0 and baccountid = :BACCT"
    If Curr <> "" Then
      S = S & " and currencyid = " & Curr
    End If
    If ContragentID <> -1 Then
      S = S & " and summa01 = " & ContragentID
    End If
    If SiteId <> -1 Then
      S = S & " and summa02 = " & SiteId
    End If
    CBalRubCBR = BalanceObj.GetQueryValue(S, Array(BAcc)) / 100
  Else
    CBalRubCBR = 0
  End If
End Function

Public Function GetCursValCBR(curid As Integer, ADATE As Date) As Double
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = "SELECT NVL(sum(rate/base),0) getcurs" _
      & "  FROM currencyrate_ex" _
      & " WHERE curr_rate_type_id = 3" _
      & "   AND isfixed = 1" _
      & "   AND currencyid = :curid" _
      & "   AND arcdate = :adate" _
      
    GetCursValCBR = BalanceObj.GetQueryValue(S, Array(curid, ADATE))
  Else
    GetCursValCBR = 0
  End If
End Function

Public Function CBalRubCBREq( _
  BalanceDate As Date, AccMask As String, Optional Curr As String, _
  Optional ContragentID As Long = -1, Optional SiteId As Long = -1 _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    If ContragentID <> -1 Then
      S = " AND v.contragentid = " & ContragentID
    End If
    CBalRubCBREq = GetCursValCBR(980, BalanceDate) * BalanceObj.GetAccSumDB(BalanceDate, AccMask, Curr, stSumPassive, -1, -1, SiteId, "", -1, "", "", S) / 100
  Else
    CBalRubCBREq = 0
  End If
End Function

Public Function DBalRubCBREq( _
  BalanceDate As Date, AccMask As String, Optional Curr As String, _
  Optional ContragentID As Long = -1, Optional SiteId As Long = -1 _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    If ContragentID <> -1 Then
      S = " AND v.contragentid = " & ContragentID
    End If
    DBalRubCBREq = GetCursValCBR(980, BalanceDate) * BalanceObj.GetAccSumDB(BalanceDate, AccMask, Curr, stSumActive, -1, -1, SiteId, "", -1, "", "", S) / 100
  Else
    DBalRubCBREq = 0
  End If
End Function







Attribute VB_Name = "Common"
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| OCX |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
' GetBalanceSumDB
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
' aDate      - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) as Date
' aDateBegin - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ( = aDate |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) as Date
' SType    - |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|") as SumType (|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| OCX)
'  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| SType:
'  ------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| -------------------
'  stSumActive    - |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  stSumPassive   - |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  stSum          - |fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd|) |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  stFSumActive   - |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'  stFSumPassive  - |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'  stFSum         - |fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd|) |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'  ------------ |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ------------------
'  stDebet       - |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  stCredit      - |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  stFDebet      - |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'  stFCredit     - |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'  ------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ----------------
'  stVSumActive   - |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  stVSumPassive  - |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  stVFSumActive  - |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'  stVFSumPassive - |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'  stVSum         - |fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd|) |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'  stVFSum        - |fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd|) |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'  ------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ---------------
'  stSQLSum       - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| AddCondition
'  |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| c|fffd||fffd||fffd||fffd||fffd|:
'   " :BAccRange"   - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| BAccRange |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| SQL c|fffd||fffd||fffd||fffd|,
'                     |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| BAccRange |fffd||fffd||fffd||fffd||fffd||fffd| "1002:2003"
'                     |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| "select sum(SUMMAACTIV) from BALANCEOCX_RESTS where :BAccRange" |fffd||fffd||fffd||fffd||fffd|
'                     |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd|
'                        "select sum(SUMMAACTIV) from BALANCEOCX_RESTS where BACCOUNTID BETWEEN 1002 AND 2003"
'   " :CurrencyRange" - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| WHERE |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| CURRENCYID
'   " :AccRange"      - |fffd||fffd| |fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| - ACCOUNTNO
'  |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd| |fffd||fffd||fffd||fffd||fffd| delphi - ".. where datebegin = :datebegin")
'   datebegin - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd|-|fffd||fffd||fffd| aDateBegin
'   dateend   - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd|-|fffd||fffd||fffd| aDate
'  -------------------------------------------------
' BAccRange     - c|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| As String
'                 |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|  "1000:1234", "12%7,123_6", "1*2", "1234"
' CurrencyRange - |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd| BAccRange ( As String)
' AddCondition  - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String
'                 |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| WHERE, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'                 Function getGrSum(|fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String, SType As SumType) As Currency
'                   Dim s As String
'                   s = " AccountALGroupLink a where b.accountid = a.accountid and a.algroupid = " & groupno
'                   getGrSum = BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, SType, "", Curr, s, "", "", "") / 100
'                 End Function
' aR013         - |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| R013 (R013 = ...) As String
' AccRange      - |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| BAccRange As String
' InvClass      - |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| InvClass (InvClass = ...) As String
'
' C|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
'------------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' GetQueryValue
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
' TextSQL    - |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' Parameters - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Array of Variants
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| as Variants
' |fffd||fffd||fffd||fffd||fffd||fffd| :
'
'   s = _
'   " SELECT riskkoef" & _
'   " FROM N2RiskKoef" & _
'   " WHERE baccountid = :baccountid" & _
'   "   AND NVL(r013,0) = :r013" & _
'   "   AND NVL(InvClass,0) = :InvClass"
'   GetQueryValue(s, Array(BAcc, R013, InvClass))
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
'  1 |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|;
'  2 |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'    |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| null |fffd| variant
'-------------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|:
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' BALANCEOCX_RESTS_TEST, BALANCEOCX_OBOR_TEST, BALANCEOCX_VIRTUAL_TEST
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| Call BalanceObj.OpenSession
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| GetBalanceSumDB
'--------------------------------------------------------------------------------------

Public BalanceObj As B2Balance.Balance
Public Activated As Boolean
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Activated |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| False |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' True |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| UpdateBalanceView

Dim OperDay As Date
Dim systemday As Date
Dim InsiderOperDay As Date
Dim CapitalDate As Date
Dim OperDayCapDateCalc As Date
Public SchemaOwner As String

Public BalanceDay As Date
Public v42day As Date
Public v42insday As Date
Public vinvday As Date

Public v42amount(26) As Currency
Public v42id(26) As Long
Public v42name(50) As String
Public v42ApprovalNBU(26) As Currency
Public n11day As Date
Public n11amount(26) As Currency
Public n11id(26) As Long
Public n11name(50) As String

Public v42Insamount(10) As Currency
Public v42Insid(10) As Long
Public v42Insname(10) As String

Public vInvamount(10) As Currency
Public vInvid(10) As Long
Public vInvname(10) As String

Dim n11loaded As Boolean

Public isWH As Boolean
Public ourMFO As Long
Public gSystemDay As Date
Public NormInitializedDate As Date
Public OsObjS240date As Date
Public UseOsInA7 As Boolean
Public gUserSettingsSiteId As Long



Sub RenameBalanceFunc()
Attribute RenameBalanceFunc.VB_ProcData.VB_Invoke_Func = "r\n14"
  Dim findFnc, replFnc
  
'
    findFnc = Array( _
    "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
    "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
    "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|Rezerv", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
    "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|Rezerv", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F", _
    "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|R013", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F", _
    "|fffd||fffd||fffd||fffd||fffd||fffd|R013", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
    "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F", _
    "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|N5", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
    "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|N6", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|V", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|N5", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|F", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", _
    "|fffd||fffd||fffd||fffd||fffd||fffd|N6", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|V", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|", _
    "|fffd|_|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd|N5", "|fffd||fffd||fffd|N6", "|fffd||fffd||fffd|", _
    "CreditEqPeriod", "DebitEqPeriod" _
  )

  replFnc = Array( _
    "RangeMovementEq", "RangeMovement", "CBalMaskCCYFEq", "CBalContrParamEq", "DBalContrParamEq", _
    "DBalMaskCCYFEq", "CBalVirtCCYEq", "DBalVirtCCYEq", "BankNameF", "BalMaskCCYFEq", _
    "CBalMaskReservEq", "CBal2MaskFEq", "CBalMaskF", "TaxRoundSumEx", "TaxRoundSumTotalEx", _
    "CMaskBranch", "DBalReservMaskEq", "DBal2MaskFEq", "DBalMaskF", "CBalMaskFEq", _
    "CGr", "CBalR013Eq", "CBalVirtEq", "DMaskBranch", "CMaskBranchEq", _
    "CBalMaskBranch", "DGr", "DBalR013Eq", "DBalVirtEq", "DBalMaskFEq", "CMask", _
    "CGrEq", "CBalGr", "TaxRoundSum", "TaxRoundSumTotal", "DMaskBranchEq", _
    "DBalMaskBranch", "CBalMaskBranchEq", "DMask", "DGrEq", "DBalGr", "CMaskEq", _
    "CBalDealN5", "CBalMask", "CBalGrEq", "TaxSumEx", "TaxSumTotalEx", "DBalMaskBranchEq", _
    "CBalDealN6", "CBalAVCCYEq", "DMaskEq", "DBalDealN5", "DBalMask", "DBalGrEq", _
    "DateF", "CBalMaskEq", "DBalDealN6", "DBalAVCCYEq", "DBalMaskEq", "MFOf", "BalMaskFEq", _
    "CBalEq", "TaxSum", "TaxSumTotal", "DBalEq", "N_Date", "BalMaskBranchEq", "BalDealN5", "BalDealN6", "BalEq", _
    "CEqPeriod", "DEqPeriod" _
  )

'  For i = 1 To Worksheets.Count
'    Set ur = Worksheets(i).UsedRange
'    For j = 0 To 69
'      ur.Replace What:=findFnc(j), Replacement:=replFnc(j), _
'                 SearchOrder:=xlByRows, MatchCase:=False, _
'                 LookAt:=xlPart
'    Next j
'  Next i

  For i = 1 To Worksheets.Count
    Worksheets(i).EnableCalculation = False
  Next i
  Dim c As Range
  For i = 1 To Worksheets.Count
    For Each c In Worksheets(i).UsedRange
      If c.HasFormula Then
        If InStr(c.Formula, "(") <> 0 Then
            c.Formula = Replace(c.Formula, "Balance.xla!", "")
            For j = 0 To 71
              If InStr(c.Formula, findFnc(j) & "(") Then
                c.Formula = Replace(c.Formula, "=" & findFnc(j) & "(", "=" & replFnc(j) & "(")
                If InStr(c.Formula, findFnc(j) & "(") Then
                  c.Formula = Replace(c.Formula, "+" & findFnc(j) & "(", "+" & replFnc(j) & "(")
                  If InStr(c.Formula, findFnc(j) & "(") Then
                    c.Formula = Replace(c.Formula, "-" & findFnc(j) & "(", "-" & replFnc(j) & "(")
                    If InStr(c.Formula, findFnc(j) & "(") Then
                      c.Formula = Replace(c.Formula, "*" & findFnc(j) & "(", "*" & replFnc(j) & "(")
                      If InStr(c.Formula, findFnc(j) & "(") Then
                        c.Formula = Replace(c.Formula, "/" & findFnc(j) & "(", "/" & replFnc(j) & "(")
                        If InStr(c.Formula, findFnc(j) & "(") Then
                          c.Formula = Replace(c.Formula, "(" & findFnc(j) & "(", "(" & replFnc(j) & "(")
                          If InStr(c.Formula, findFnc(j) & "(") Then
                            c.Formula = Replace(c.Formula, " " & findFnc(j) & "(", " " & replFnc(j) & "(")
                            If InStr(c.Formula, findFnc(j) & "(") Then
                              c.Formula = Replace(c.Formula, ";" & findFnc(j) & "(", ";" & replFnc(j) & "(")
                              If InStr(c.Formula, findFnc(j) & "(") Then
                                c.Formula = Replace(c.Formula, "," & findFnc(j) & "(", "," & replFnc(j) & "(")
                              End If
                            End If
                          End If
                        End If
                      End If
                    End If
                  End If
                End If
              End If
            Next j
        End If
      End If
    Next c
  Next i
    
  For i = 1 To Worksheets.Count
    Worksheets(i).EnableCalculation = True
  Next i

  
End Sub

Function GetNewBalanceObj() As B2Balance.Balance
  Set GetNewBalanceObj = New B2Balance.Balance
End Function

Sub InitWorkbooks()
  On Error Resume Next
  For i = 1 To Application.Workbooks.Count
      Run Application.Workbooks(i).init
  Next i
End Sub

Sub InitBalance()
  If SchemaOwner = "" Then SchemaOwner = "CREATOR"
  Set BalanceObj = Nothing
  Set BalanceObj = GetNewBalanceObj()
  If BalanceObj.GetLibVer() < 3070500 Then
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd| b2balance.OCX |fffd||fffd||fffd||fffd||fffd||fffd| 3.7.5.0. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    'AddIns("balance").Installed = False
    Exit Sub
  End If
  BalanceObj.SchemaOwner = SchemaOwner
  Activated = (BalanceObj.OpenSession("", "", 90, 0) = 0)
  OperDay = 0
  CapitalDate = 0
  OperDayCapDateCalc = 0
  InsiderOperDay = 0
  BalanceDay = 0
  v42day = 0
  n11day = 0
  v42insday = 0
  vinvday = 0
  OsObjS240date = 0
  n11loaded = False
  Erase vInvname, vInvid, vInvamount, v42amount, v42id, v42name, v42ApprovalNBU, v42Insamount, v42Insid, v42Insname
  Erase n11amount, n11id, n11name
  If Activated Then
    ourMFO = BalanceObj.GetQueryValue("SELECT bankid FROM bankattribute", Array())
    isWH = BalanceObj.GetQueryValue("SELECT COUNT (1) FROM site WHERE ID != :ourMfo", Array(ourMFO)) <> 0
    gSystemDay = BalanceObj.GetQueryValue("select systemday from currentdaysetting", Array())
    UseOsInA7 = BalanceObj.GetApplicationConst("FILEA7_FA") = "1"
    Dim q As B2Balance.QueryX
    Set q = BalanceObj.CreateQuery("begin :s := pkg_common.UserRec.SiteId; end;")
    q.ExecSQL
    gUserSettingsSiteId = q.Params("s")
  End If
  NormInitializedDate = 0
  InitWorkbooks
End Sub

Sub UpdateBalanceViewQuick()
  If BalanceObj Is Nothing Then Call InitBalance
  Application.Calculate
End Sub

Public Sub UpdateBalanceView()
  On Error GoTo exceptHandler
  Activated = False
  ScreenUpdating = False
  Call CloseBalance
  Call UpdateBalanceViewQuick
  ScreenUpdating = True
  Exit Sub
exceptHandler:
  ScreenUpdating = True
  MsgBox Err.Source & " " & Err.Number & " " & Err.Description & " " & LastProc
End Sub

Sub CloseBalance()
 If Not (BalanceObj Is Nothing) Then
   BalanceObj.CloseSession
   Set BalanceObj = Nothing
 End If
 Application.CommandBars("|fffd||fffd||fffd||fffd||fffd||fffd|").Controls(2).State = msoButtonUp
End Sub

Public Sub ShowTransact()
  If Not Activated Then Exit Sub
  Application.CommandBars("|fffd||fffd||fffd||fffd||fffd||fffd|").Controls(2).State = BalanceObj.ShowTransactWnd(Now)
  Call UpdateBalanceViewQuick
End Sub

Public Function fnBAccAPasString(BAcc As Integer) As String
  Select Case fnBAccAP(BAcc)
    Case -1
      fnBAccAPasString = "|fffd|"
    Case 0
      fnBAccAPasString = "|fffd|/|fffd|"
    Case 1
      fnBAccAPasString = "|fffd|"
  End Select
End Function
Public Function fnBAccAP(BAcc As Integer) As Integer
  Dim S As String
  Application.Volatile (True)
  If Activated Then
     S = _
     " SELECT activepassive" & _
     " FROM baccount" & _
     " WHERE id = :baccountid"
    fnBAccAP = BalanceObj.GetQueryValue(S, Array(BAcc))
  Else
    fnBAccAP = 0
  End If
End Function

Public Function PredMonth(ADATE) As Date
  PredMonth = DateAdd("m", -1, ADATE)
End Function


Public Function GetCursVal(curid As Integer, arcdate As Date) As Double
On Error Resume Next
  LastProc = "GetCursVal"
  Application.Volatile (True)
  GetCursVal = Null
  If Not Activated Or (IsNull(arcdate)) Or (arcdate = 0) Then Exit Function
  GetCursVal = BalanceObj.GetCurrencyRate(arcdate, curid)
End Function

Public Function NVL(aValue) As Currency
  If IsNull(aValue) Then NVL = 0 Else NVL = aValue
End Function

Public Function Getoffshor(ADay As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    Dim eoln As String
    Dim S As String
    eoln = Chr(13) & Chr(10)
    
    S = " ( SELECT C.ID ID, NVL (NBU1.ADDPARAMVALUE, '???') ADDPARAMVALUE" & eoln & _
        "   FROM COUNTRY C, " & _
        "   (" & _
        "     SELECT *" & eoln & _
        "     FROM NBUReportUpsizing" & eoln & _
        "     WHERE BASEPARAMNAME = 'K040'" & eoln & _
        "       AND ADDPARAMNAME = 'K042'" & _
        "     ) NBU1" & eoln & _
        "   WHERE NBU1.BASEPARAMVALUE (+) = c.Id" & eoln & _
        "  ) NBU, contragent cp," & _
        " ( SELECT paramvalue" & eoln & _
        "   FROM NBUReportParamRange" & eoln & _
        "   WHERE paramname = 'F_26'" & _
        "  ) f26" & eoln & _
        " WHERE b.contragentid = cp.ID" & eoln & _
        "   AND b.baccountid = f26.paramvalue" & eoln & _
        "   AND NBU.ID = cp.countryid" & eoln & _
        "   AND NBU.ADDPARAMVALUE IN ('1', '3', '???')"
     
    Getoffshor = BalanceObj.GetBalanceSumDB(ADay, ADay, stSumActive, "", "", S, "", "", "", -1, -1) / 100
  Else
    Getoffshor = 0
  End If
End Function


'Public Function Getoffshor(ADay As Date) As Currency
  'Application.Volatile (True)
  'If Activated Then
    'Dim eoln As String
    'eoln = Chr(13) & Chr(10)
    'Dim q As B2Balance.QueryX
    'Set q = BalanceObj.CreateQuery("")
    'q.Sql = "SELECT SUM (ABS (a.summanow)) summanow, SUM (ABS (a.summanoweq)) summanoweq" & eoln & _
'               "FROM (SELECT C.ID ID, NVL (NBU1.ADDPARAMVALUE, '???') ADDPARAMVALUE" & eoln & _
               '"FROM COUNTRY C, (SELECT *" & eoln & _
               '"              FROM NBUReportUpsizing" & eoln & _
               '"             WHERE BASEPARAMNAME = 'K040'" & eoln & _
               '"               AND ADDPARAMNAME = 'K042') NBU1" & eoln & _
               '"WHERE NBU1.BASEPARAMVALUE (+) = c.Id" & eoln & _
               '"   ) NBU, V_FULL_BALANCE a, contragent cp, (SELECT paramvalue" & eoln & _
               '"                                   FROM NBUReportParamRange" & eoln & _
               '"                                  WHERE paramname = 'F_26') f26" & eoln & _
               '"WHERE a.contragentid = cp.ID" & eoln & _
               '"AND a.baccountid = f26.paramvalue" & eoln & _
               '"AND NBU.ID = cp.countryid" & eoln & _
               '"AND NBU.ADDPARAMVALUE IN ('1', '3', '???')" & eoln & _
               '"AND a.arcdate = :ArcDate" & eoln & _
               '"AND a.summanow < 0"
   'q.Params("ArcDate") = ADay
   'q.Active = True
  'If Not q.EOF Then Getoffshor = NVL(q.Fields(1)) / 100
  'Else
    'Getoffshor = 0
  'End If
'End Function

Public Function GetCapitalDate(NewOperDay As Date) As Date
  If Activated Then
    If IsNull(CapitalDate) Or NewOperDay <> OperDayCapDateCalc Then
      CapitalDate = N_Date(NewOperDay, 1)
      OperDayCapDateCalc = NewOperDay
    End If
    GetCapitalDate = CapitalDate
  Else
    GetCapitalDate = NewOperDay
  End If
End Function

Public Function N_Date(|fffd||fffd||fffd||fffd| As Date, D_Min As Integer) As Date
  Application.Volatile (True)
  If Activated Then
    Dim S As String
    S = _
    "SELECT DAY" & vbNewLine & _
    "  FROM (SELECT ROWNUM rn, DAY" & vbNewLine & _
    "          FROM (SELECT   *" & vbNewLine & _
    "                    FROM (SELECT DAY" & vbNewLine & _
    "                            FROM arcoperdays" & vbNewLine & _
    "                          UNION ALL" & vbNewLine & _
    "                          SELECT systemday DAY" & vbNewLine & _
    "                            FROM currentdaysetting) t" & vbNewLine & _
    "                ORDER BY DAY DESC)" & vbNewLine & _
    "         WHERE DAY <= :Date)" & vbNewLine & _
    " WHERE rn = :n"
    N_Date = BalanceObj.GetQueryValue(S, Array(|fffd||fffd||fffd||fffd|, D_Min + 2))
  Else
    N_Date = |fffd||fffd||fffd||fffd|
  End If
End Function

Public Function B2Const(Name As String)
  Application.Volatile (True)
  If Activated Then
    B2Const = BalanceObj.GetApplicationConst(Name)
  Else
    B2Const = ""
  End If
End Function

Public Function GetYearDiff(date1 As Date, date2 As Date) As Double
  GetYearDiff = DateDiff("yyyy", date1, date2)
End Function

Public Function GetBalanceDay(date1 As Date) As Date
  Application.Volatile (True)
  If Activated Then
    GetBalanceDay = "01.01.1902"
    If IsNull(BalanceDay) Or date1 <> BalanceDay Then
      Call InitBlns(date1)
      BalanceDay = date1
      GetBalanceDay = date1
    End If
  Else
    GetBalanceDay = "01.01.1901"
  End If
End Function

Public Function InitBlns(date1 As Date) As Date
 InitBlns = DateValue("01/01/1991")
 BalanceDay = date1
 On Error GoTo errorhandler

 Dim q As B2Balance.QueryX
 Set q = BalanceObj.CreateQuery("begin pkg_norm.initnorm (:adate); end;")
 q.Params("adate") = date1
 q.ExecSQL
 InitBlns = date1
 Exit Function
errorhandler:
 Msg = "|fffd||fffd||fffd||fffd||fffd||fffd| # " & Str(Err.Number) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| Init balance |fffd| " _
            & Err.Source & Chr(13) & Err.Description
    MsgBox Msg, , "|fffd||fffd||fffd||fffd||fffd||fffd|", Err.HelpFile, Err.HelpContext
End Function

Public Function ApprovalNBUAmount(|fffd||fffd||fffd||fffd| As Date, ContragentID As Long) As Currency
' On Error GoTo errorhandler
  Dim q As B2Balance.QueryX
  Dim i As Integer
  i = 1
  i = 2
  Set q = BalanceObj.CreateQuery(" SELECT NVL(SUM (a.amount * rate / base),0) AmountN7 " & _
  " FROM approvalNBU a,  " & _
  "  (SELECT contragentid id, approvalnbuid FROM ContragentApprovalNBULink  WHERE contragentid = :CID " & _
  "      UNION ALL    " & _
  "   SELECT -contragentgroupid id, approvalnbuid FROM GroupApprovalNBULink WHERE -contragentgroupid = :CID " & _
  "      Union ALL " & _
  "   SELECT l.contragentid id, approvalnbuid FROM v_contrag_insider_group g, ContragentApprovalNBULink l WHERE g.id = :CID " & _
  "       AND :CID < 0  AND l.contragentid = g.contragentid) c, " & _
  "   (SELECT * FROM arc_currencyrate WHERE arcdate = :ArcDate) cr " & _
  " WHERE a.id = c.approvalnbuid AND :ArcDate BETWEEN valuedate AND maturitydate AND cr.currencyid = a.Currencyid ")
  
  q.Params("CID") = ContragentID
  q.Params("ArcDate") = |fffd||fffd||fffd||fffd|
  q.Active = True
  
  ApprovalNBUAmount = q.Fields("AmountN7") / 100
 Exit Function
errorhandler:
 Msg = "|fffd||fffd||fffd||fffd||fffd||fffd| # " & Str(Err.Number) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| N7 " _
            & Err.Source & Chr(13) & Err.Description
    MsgBox Msg, , "|fffd||fffd||fffd||fffd||fffd||fffd|", Err.HelpFile, Err.HelpContext
End Function

Public Function GetSystemDay() As Date
  Dim ADATE As Date
  Application.Volatile (True)
  If Activated Then
    If systemday <> ADATE Then
      GetSystemDay = systemday
    Else
      Dim q As B2Balance.QueryX
      Dim i As Integer
      Set q = BalanceObj.CreateQuery(" select systemday from currentdaysetting ")
      q.Active = True
      systemday = q.Fields("systemday")
      GetSystemDay = systemday
    End If
  End If
End Function

Public Function RemoveSymbolFromString(aString As String, ch As String) As String
  Dim StartPos As Integer
  Dim RetStr As String
  Application.Volatile (True)
  StartPos = 1
  RetStr = ""
  NextPos = InStr(StartPos, aString, ch)
  While NextPos <> 0
    RetStr = RetStr + Mid(aString, StartPos, NextPos - StartPos)
    StartPos = NextPos + 1
    NextPos = InStr(StartPos, aString, ch)
  Wend
  RemoveSymbolFromString = RetStr
End Function

Public Function fnGetNormCalcDate() As Date
  Dim S As String
  Application.Volatile (True)
  If Activated Then
     S = _
     " select TO_DATE(pkg_norm.fngetcalcdate,'DD.MM.YYYY')  " & _
     "   from dual "
    fnGetNormCalcDate = BalanceObj.GetQueryValue(S, Array())
  Else
    fnGetNormCalcDate = 0
  End If
End Function

Public Sub EnableCalculation()
  Dim i As Integer
  For i = 1 To Worksheets.Count
    Worksheets(i).EnableCalculation = True
  Next i
End Sub

' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
 Public Function fnGetMaxPrevMonthWorkDay(ADATE As Date) As Date
  Dim S As String
  Application.Volatile (True)
  If Activated Then
      S = " select max(day) from arcoperdays where day < trunc(:aDate,'MM') "
      fnGetMaxPrevMonthWorkDay = BalanceObj.GetQueryValue(S, Array(ADATE))
  Else
    fnGetMaxPrevMonthWorkDay = 0
  End If
End Function

' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
 Public Function fnGetMaxDecDay(ADATE As Date) As Date
  Dim fDay As Date
  Dim eDay As Date
  Application.Volatile (True)
  If Activated Then
     fDay = DateSerial(Year(ADATE), Month(ADATE), 1)
     eDay = Day(DateAdd("m", 1, fDay) - 1)
     Select Case Day(ADATE)
       Case 1 To 9
         fnGetMaxDecDay = fDay - 1
       Case 10 To 19
         fnGetMaxDecDay = fDay + 9
       Case 20 To eDay - 1
         fnGetMaxDecDay = fDay + 19
       Case eDay
         fnGetMaxDecDay = ADATE
     End Select
  Else
    fnGetMaxDecDay = 0
  End If
End Function

' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
 Public Function fnGetMaxPrevDecWorkDay(ADATE As Date) As Date
  Dim S As String
  Application.Volatile (True)
  If Activated Then
      S = _
        "SELECT MAX (DAY)" & _
        "  FROM arcoperdays" & _
        " WHERE DAY <" & _
        "          (SELECT CASE" & _
        "                     WHEN TRUNC (:adate, 'DD') - TRUNC (:adate, 'MM')" & _
        "                            BETWEEN 0" & _
        "                                AND 9" & _
        "                        THEN TRUNC (:adate, 'MM')-1" & _
        "                     WHEN TRUNC (:adate, 'DD') - TRUNC (:adate, 'MM')" & _
        "                            BETWEEN 10" & _
        "                                AND 19" & _
        "                        THEN TRUNC (:adate, 'MM') + 10" & _
        "                     ELSE TRUNC (:adate, 'MM') + 20" & _
        "                  END s" & _
        "             FROM DUAL)"
      fnGetMaxPrevDecWorkDay = BalanceObj.GetQueryValue(S, Array(ADATE))
  Else
    fnGetMaxPrevDecWorkDay = 0
  End If
End Function

Public Function getBalLibInfo() As String
  getBalLibInfo = "|fffd||fffd||fffd||fffd||fffd||fffd| b2balance.ocx |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| 3.7.1.0"
End Function

Public Function getXLAVer() As Integer
  getXLAVer = 20
End Function
Public Function AccName(Acc As String, Optional Curr As Integer = -1) As String
  Application.Volatile (True)
  If Activated Then
    AccName = BalanceObj.GetAccName(Acc, Curr)
  Else
    AccName = 0
  End If
End Function
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Sub RefreshPivotTable(aTableName As String, aSql As String, ByRef aParamArray() As Variant)
 
  Set objPivotCache = ActiveSheet.PivotTables(aTableName).PivotCache
  Set objPivotCache.Recordset = BalanceObj.GetQueryRecordset(aSql, aParamArray)
  ActiveSheet.PivotTables(aTableName).RefreshTable

  Set rstRecordset = Nothing
End Sub

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Sub RefreshTable(aTableName As String, aSql As String, aParamArray() As Variant)

  Set objQueryTable = ActiveSheet.QueryTables(aTableName)
  Set objQueryTable.Recordset = BalanceObj.GetQueryRecordset(aSql, aParamArray)
  objQueryTable.Refresh BackgroundQuery:=False
  
  Set rstRecordset = Nothing
End Sub

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Sub InitBalanceIfNeed()
  If BalanceObj Is Nothing Then Call InitBalance
End Sub


Private Sub Auto_Add()
End Sub
Attribute VB_Name = "Contragents"
Public Function CBalContrIdEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  ContrRange As String, _
  Curr As String _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = _
    " SELECT /*+RULE*/ SUM(summanoweq)" & _
    " FROM $BaseSQL$" & _
    " WHERE $R_BACCOUNTID_R$" & _
    "   AND arcdate = :arcdate" & _
    "   AND ContragentId in ( " & ContrRange & " ) " & _
    "   AND $R_Currencyid_R$" & _
    "   AND summanoweq > 0"
    CBalContrIdEq = _
      NVL( _
      BalanceObj.GetAnyValue(S, _
         Array("$CB_$", |fffd||fffd||fffd||fffd|, "$RAN$ BACCOUNTID", BAccRange, "$RAN$ CURRENCYID", Curr, |fffd||fffd||fffd||fffd|), 0)) / 100
  Else
    CBalContrIdEq = 0
  End If
End Function

Public Function DBalContrIdEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  ContrRange As String, _
  Curr As String _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = _
    " SELECT /*+RULE*/ SUM(summanoweq)" & _
    " FROM $BaseSQL$" & _
    " WHERE $R_BACCOUNTID_R$" & _
    "   AND arcdate = :arcdate" & _
    "   AND ContragentId in ( " & ContrRange & " ) " & _
    "   AND $R_Currencyid_R$" & _
    "   AND summanoweq < 0"
    DBalContrIdEq = Abs( _
      NVL( _
      BalanceObj.GetAnyValue(S, _
         Array("$CB_$", |fffd||fffd||fffd||fffd|, "$RAN$ BACCOUNTID", BAccRange, "$RAN$ CURRENCYID", Curr, |fffd||fffd||fffd||fffd|), 0))) / 100
  Else
    DBalContrIdEq = 0
  End If
End Function

Public Function CContrIdEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  ContrRange As String, _
  Curr As String _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = _
    " SELECT /*+RULE*/ SUM(crediteq)" & _
    " FROM $BaseSQL$" & _
    " WHERE $R_BACCOUNTID_R$" & _
    "   AND arcdate = :arcdate" & _
    "   AND ContragentId in ( " & ContrRange & " ) " & _
    "   AND $R_Currencyid_R$"
    CContrIdEq = _
      NVL( _
      BalanceObj.GetAnyValue(S, _
         Array("$CB_$", |fffd||fffd||fffd||fffd|, "$RAN$ BACCOUNTID", BAccRange, "$RAN$ CURRENCYID", Curr, |fffd||fffd||fffd||fffd|), 0)) / 100
  Else
    CContrIdEq = 0
  End If
End Function

Public Function DContrIdEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  ContrRange As String, _
  Optional Curr As String = "" _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    If Curr = "" Then
      S = _
      " SELECT /*+RULE*/ SUM(debeteq)" & _
      " FROM $BaseSQL$" & _
      " WHERE $R_BACCOUNTID_R$" & _
      "   AND arcdate = :arcdate" & _
      "   AND ContragentId in ( " & ContrRange & " ) "
      DContrIdEq = Abs( _
        NVL( _
        BalanceObj.GetAnyValue(S, _
          Array("$CB_$", |fffd||fffd||fffd||fffd|, "$RAN$ BACCOUNTID", BAccRange, |fffd||fffd||fffd||fffd|), 0))) / 100
    Else
      S = _
       " SELECT /*+RULE*/ SUM(debeteq)" & _
       " FROM $BaseSQL$" & _
       " WHERE $R_BACCOUNTID_R$" & _
       "   AND arcdate = :arcdate" & _
       "   AND ContragentId in ( " & ContrRange & " ) " & _
       "   AND $R_Currencyid_R$"
      DContrIdEq = Abs( _
        NVL( _
        BalanceObj.GetAnyValue(S, _
           Array("$CB_$", |fffd||fffd||fffd||fffd|, "$RAN$ BACCOUNTID", BAccRange, "$RAN$ CURRENCYID", Curr, |fffd||fffd||fffd||fffd|), 0))) / 100
    End If
  Else
    DContrIdEq = 0
  End If
End Function

Public Function CBalContrNEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  ContrN As Integer, _
  Optional Curr As String = "" _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = _
    "SELECT /*+RULE*/ SUM (s)" & vbNewLine & _
    "  FROM (SELECT   SUM (summanoweq) s, contragentid" & vbNewLine & _
    "            FROM $BaseSQL$" & vbNewLine & _
    "           WHERE $R_BACCOUNTID_R$" & vbNewLine & _
    "             AND arcdate = :arcdate" & vbNewLine & _
    "             AND $R_Currencyid_R$" & _
    "             AND summanoweq > 0" & vbNewLine & _
    "        GROUP BY contragentid" & vbNewLine & _
    "        ORDER BY SUM (summanoweq) DESC)" & vbNewLine & _
    " WHERE ROWNUM <= :ContrN"
    CBalContrNEq = _
      NVL( _
        BalanceObj.GetAnyValue(S, _
         Array("$CB_$", |fffd||fffd||fffd||fffd|, "$RAN$ BACCOUNTID", BAccRange, "$RAN$ CURRENCYID", Curr, |fffd||fffd||fffd||fffd|, ContrN), 0)) / 100
  Else
    CBalContrNEq = 0
  End If
End Function

Public Function CBalMaskContrIdEq( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, _
  ContrRange As String, _
  Curr As String _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = _
    " SELECT /*+RULE*/ SUM(summanoweq)" & _
    " FROM $BaseSQL$" & _
    " WHERE $R_ACCOUNTNO_R$" & _
    "   AND arcdate = :arcdate" & _
    "   AND ContragentId in ( " & ContrRange & " ) " & _
    "   AND $R_Currencyid_R$" & _
    "   AND summanoweq > 0"
    CBalMaskContrIdEq = _
      NVL( _
      BalanceObj.GetAnyValue(S, _
         Array("$CB_$", |fffd||fffd||fffd||fffd|, "$RAM$ ACCOUNTNO", AccRange, "$RAN$ CURRENCYID", Curr, |fffd||fffd||fffd||fffd|), 0)) / 100
  Else
    CBalMaskContrIdEq = 0
  End If
End Function

Public Function DBalMaskContrIdEq( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, _
  ContrRange As String, _
  Curr As String _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = _
    " SELECT /*+RULE*/ SUM(summanoweq)" & _
    " FROM $BaseSQL$" & _
    " WHERE $R_ACCOUNTNO_R$" & _
    "   AND arcdate = :arcdate" & _
    "   AND ContragentId in ( " & ContrRange & " ) " & _
    "   AND $R_Currencyid_R$" & _
    "   AND summanoweq < 0"
    DBalMaskContrIdEq = Abs( _
      NVL( _
      BalanceObj.GetAnyValue(S, _
         Array("$CB_$", |fffd||fffd||fffd||fffd|, "$RAM$ ACCOUNTNO", AccRange, "$RAN$ CURRENCYID", Curr, |fffd||fffd||fffd||fffd|), 0))) / 100
  Else
    DBalMaskContrIdEq = 0
  End If
End Function

' ===================== |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| ========================
Public Function DMaskRT( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, Optional rt As Integer = -1 _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    DMaskRT = BalanceObj.GetAccSumDB(|fffd||fffd||fffd||fffd|, AccRange, Curr, stFDebet, -1, -1, -1, "", rt, "", "", "") / 100
  Else
    DMaskRT = 0
  End If
End Function

Public Function CMaskRT( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, Optional rt As Integer = -1 _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    CMaskRT = BalanceObj.GetAccSumDB(|fffd||fffd||fffd||fffd|, AccRange, Curr, stFCredit, -1, -1, -1, "", rt, "", "", "") / 100
  Else
    CMaskRT = 0
  End If
End Function

Public Function DMaskRTEq( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, Optional rt As Integer = -1 _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    DMaskRTEq = BalanceObj.GetAccSumDB(|fffd||fffd||fffd||fffd|, AccRange, Curr, stDebet, -1, -1, -1, "", rt, "", "", "") / 100
  Else
    DMaskRTEq = 0
  End If
End Function

Public Function CMaskRTEq( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, Optional rt As Integer = -1 _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    CMaskRTEq = BalanceObj.GetAccSumDB(|fffd||fffd||fffd||fffd|, AccRange, Curr, stCredit, -1, -1, -1, "", rt, "", "", "") / 100
  Else
    CMaskRTEq = 0
  End If
End Function

Public Function DBalMaskRT( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, Optional rt As Integer = -1 _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    DBalMaskRT = BalanceObj.GetAccSumDB(|fffd||fffd||fffd||fffd|, AccRange, Curr, stFSumActive, -1, -1, -1, "", rt, "", "", "") / 100
  Else
    DBalMaskRT = 0
  End If
End Function

Public Function CBalMaskRT( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, Optional rt As Integer = -1 _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    CBalMaskRT = BalanceObj.GetAccSumDB(|fffd||fffd||fffd||fffd|, AccRange, Curr, stFSumPassive, -1, -1, -1, "", rt, "", "", "") / 100
  Else
    CBalMaskRT = 0
  End If
End Function

Public Function DBalMaskRTEq( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, Optional rt As Integer = -1 _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    DBalMaskRTEq = BalanceObj.GetAccSumDB(|fffd||fffd||fffd||fffd|, AccRange, Curr, stSumActive, -1, -1, -1, "", rt, "", "", "") / 100
  Else
    DBalMaskRTEq = 0
  End If
End Function

Public Function CBalMaskRTEq( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, Optional rt As Integer = -1 _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    CBalMaskRTEq = BalanceObj.GetAccSumDB(|fffd||fffd||fffd||fffd|, AccRange, Curr, stSumPassive, -1, -1, -1, "", rt, "", "", "") / 100
  Else
    CBalMaskRTEq = 0
  End If
End Function




Attribute VB_Name = "Custom"
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
 Public Function GetOpenAccNum(ADATE As Date) As Date
  Dim S As String
  Application.Volatile (True)
  If Activated Then
      S = _
        "SELECT count(1) FROM aaccount a WHERE a.dateopen = :aDate"
      GetOpenAccNum = BalanceObj.GetQueryValue(S, Array(ADATE))
  Else
    GetOpenAccNum = 0
  End If
End Function


' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
 Public Function GetCloseAccNum(ADATE As Date) As Date
  Dim S As String
  Application.Volatile (True)
  If Activated Then
      S = _
        "SELECT count(1) FROM aaccount a WHERE a.dateclose = :aDate"
      GetCloseAccNum = BalanceObj.GetQueryValue(S, Array(ADATE))
  Else
    GetCloseAccNum = 0
  End If
End Function

Attribute VB_Name = "Doc"
Public Function RangeMovement( _
  |fffd||fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd|B As String, _
  |fffd||fffd||fffd||fffd||fffd||fffd| As Integer, Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ContrList As String = "", Optional ContrAB As String = "", _
  Optional SiteId As Long = -1 _
  ) As Currency
  Application.Volatile (True)
  If Activated Then
    RangeMovement = BalanceObj.GetRangeMovement(|fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, Replace(|fffd||fffd||fffd||fffd||fffd|, "accountano", "_%", 1, -1, vbTextCompare), Replace(|fffd||fffd||fffd||fffd|B, "accountbno", "_%", 1, -1, vbTextCompare), |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, SiteId, WithCorrMvmnt, ContrList, ContrAB, "", "")
  Else
    RangeMovement = 0
  End If
End Function

Public Function RangeMovementEq( _
  |fffd||fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd|B As String, _
  |fffd||fffd||fffd||fffd||fffd||fffd| As Integer, Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ContrList As String = "", Optional ContrAB As String = "", _
  Optional SiteId As Long = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    RangeMovementEq = BalanceObj.GetRangeMovementEq(|fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, Replace(|fffd||fffd||fffd||fffd||fffd|, "accountano", "_%", 1, -1, vbTextCompare), Replace(|fffd||fffd||fffd||fffd|B, "accountbno", "_%", 1, -1, vbTextCompare), |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, SiteId, WithCorrMvmnt, ContrList, ContrAB, "", "")
  Else
    RangeMovementEq = 0
  End If
End Function

Public Function AccMovement( _
  |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd|A As String, |fffd||fffd||fffd|_A As String, |fffd||fffd||fffd||fffd|B As String, |fffd||fffd||fffd|_B As String, _
  |fffd||fffd||fffd||fffd||fffd||fffd| As Integer _
) As Currency
  Application.Volatile (True)
  If Activated Then
    AccMovement = BalanceObj.GetRangeMovement(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|A, |fffd||fffd||fffd||fffd|B, |fffd||fffd||fffd||fffd||fffd||fffd|, "", -1, -1, "", "", |fffd||fffd||fffd|_A, |fffd||fffd||fffd|_B)
  Else
    AccMovement = 0
  End If
End Function
Attribute VB_Name = "F631"
Public Function DBalF631( _
  BalanceDate As Date, BAccountRange As String, S180Range As String, _
  R031 As String, S240 As String, R013 As String, _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = " DUAL where s180 in (" & S180Range & ") and currencyid in (select id from currency  where CurrencyTypeID in (" & R031 & "))"
    If S240 <> "" Then
      S = S & " and S240 in (" & S240 & ")"
    End If
    If R013 <> "" Then
      S = S & " and R013 in (" & R013 & ")"
    End If
    DBalF631 = BalanceObj.GetBalanceSumDB(BalanceDate, stSumActive, BAccountRange, "", S, "", "", "", WithCorrMvmnt, ToboId, -1) / 100
  Else
    DBalF631 = 0
  End If
End Function

Public Function CBalF631( _
  BalanceDate As Date, BAccountRange As String, S180Range As String, _
  R031 As String, S240 As String, R013 As String, _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = " DUAL where s180 in (" & S180Range & ") and currencyid in (select id from currency  where CurrencyTypeID in (" & R031 & "))"
    If S240 <> "" Then
      S = S & " and S240 in (" & S240 & ")"
    End If
    If R013 <> "" Then
      S = S & " and R013 in (" & R013 & ")"
    End If
    CBalF631 = BalanceObj.GetBalanceSumDB(BalanceDate, stSumPassive, BAccountRange, "", S, "", "", "", WithCorrMvmnt, ToboId, -1) / 100
  Else
    CBalF631 = 0
  End If
End Function


Attribute VB_Name = "FileBalance"
Public Sub LoadBalanceFromFile()
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Dim FileArcDate As Date
Dim BranchID As Long
  If BalanceObj Is Nothing Then Call UpdateBalanceView
  Call BalanceObj.LoadBalanceFromFile(FileArcDate, BranchID)
  Application.Calculate
End Sub

Public Function DBalMaskF(|fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  DBalMaskF = 0
  If Not Activated Then Exit Function
  DBalMaskF = BalanceObj.GetLoadedBAccSum(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, stFSumActive) / 100
End Function

Public Function CBalMaskF(|fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  CBalMaskF = 0
  If Not Activated Then Exit Function
  CBalMaskF = BalanceObj.GetLoadedBAccSum(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, stFSumPassive) / 100
End Function

Public Function CBalMaskFEq(|fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  CBalMaskFEq = 0
  If Not Activated Then Exit Function
  CBalMaskFEq = BalanceObj.GetLoadedBAccSum(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, stSumPassive) / 100
End Function

Public Function DBalMaskFEq(|fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  DBalMaskFEq = 0
  If Not Activated Then Exit Function
  DBalMaskFEq = BalanceObj.GetLoadedBAccSum(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, stSumActive) / 100
End Function

Public Function BalMaskFEq(FileID As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  BalMaskFEq = 0
  If Not Activated Then Exit Function
  BalMaskFEq = (BalanceObj.GetLoadedBAccSum(FileID, 0, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, stSumPassive) - _
                BalanceObj.GetLoadedBAccSum(FileID, 0, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, stSumActive)) / 100
End Function

Public Function CBal2MaskFEq(FileID As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  CBal2MaskFEq = 0
  If Not Activated Then Exit Function
  CBal2MaskFEq = BalanceObj.GetLoadedBAccSum(FileID, 0, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, stSumPassive) / 100
End Function
Public Function DBal2MaskFEq(FileID As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  DBal2MaskFEq = 0
  If Not Activated Then Exit Function
  DBal2MaskFEq = BalanceObj.GetLoadedBAccSum(FileID, 0, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, stSumActive) / 100
End Function

Public Function DBalMaskCCYFEq(FileID As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  DBalMaskCCYFEq = 0
  If Not Activated Then Exit Function
  DBalMaskCCYFEq = BalanceObj.GetLoadedBAccSumByCurrGroup(FileID, 0, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, stSumActive) / 100
End Function

Public Function CBalMaskCCYFEq(FileID As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  CBalMaskCCYFEq = 0
  If Not Activated Then Exit Function
  CBalMaskCCYFEq = BalanceObj.GetLoadedBAccSumByCurrGroup(FileID, 0, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, stSumPassive) / 100
End Function

Public Function BalMaskCCYFEq(FileID As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  BalMaskCCYFEq = 0
  If Not Activated Then Exit Function
  BalMaskCCYFEq = (BalanceObj.GetLoadedBAccSumByCurrGroup(FileID, 0, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, stSumPassive) - _
                   BalanceObj.GetLoadedBAccSumByCurrGroup(FileID, 0, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, stSumActive)) / 100
End Function

Sub GetLoadedInfoInt(FileID As Integer, ByRef BankID As Long, ByRef BankName As String, ByRef arcdate As Date)
  On Error Resume Next
  Application.Volatile (True)
  BankID = Null
  BankName = Null
  arcdate = Null
  If Not Activated Then Exit Sub
  If BalanceObj Is Nothing Then Call InitBalance
  Call BalanceObj.GetLoadedBalanceInfo(FileID, BankID, BankName, arcdate)
End Sub

Public Function MFOf(FileID As Integer) As Long
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Dim BankID As Long
  Dim BankName As String
  Dim arcdate As Date
  Call GetLoadedInfoInt(FileID, BankID, BankName, arcdate)
  MFOf = BankID
End Function
 
Public Function BankNameF(FileID As Integer) As String
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Dim BankID As Long
  Dim BankName As String
  Dim arcdate As Date
  Call GetLoadedInfoInt(FileID, BankID, BankName, arcdate)
  BankNameF = BankName
End Function

Public Function DateF(FileID As Integer) As Date
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Dim BankID As Long
  Dim BankName As String
  Dim arcdate As Date
  Call GetLoadedInfoInt(FileID, BankID, BankName, arcdate)
  DateF = arcdate
End Function


Attribute VB_Name = "GroupDB"
'======================================================================
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd|
'======================================================================

Public Function CBalGrEq( _
  |fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional RS As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CBalGrEq = BalanceObj.GetGroupSum(|fffd||fffd||fffd||fffd|, groupno, Curr, stSumPassive, WithCorrMvmnt, ToboId, RS) / 100
  Else
    CBalGrEq = 0
  End If
End Function

Public Function DBalGrEq( _
  |fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional RS As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DBalGrEq = BalanceObj.GetGroupSum(|fffd||fffd||fffd||fffd|, groupno, Curr, stSumActive, WithCorrMvmnt, ToboId, RS) / 100
  Else
    DBalGrEq = 0
  End If
End Function

Public Function DGrEq( _
  |fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional RS As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DGrEq = BalanceObj.GetGroupSum(|fffd||fffd||fffd||fffd|, groupno, Curr, stDebet, WithCorrMvmnt, ToboId, RS) / 100
  Else
    DGrEq = 0
  End If
End Function
Public Function CGrEq( _
  |fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional RS As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CGrEq = BalanceObj.GetGroupSum(|fffd||fffd||fffd||fffd|, groupno, Curr, stCredit, WithCorrMvmnt, ToboId, RS) / 100
  Else
    CGrEq = 0
  End If
End Function
Public Function CBalGr( _
  |fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional RS As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CBalGr = BalanceObj.GetGroupSum(|fffd||fffd||fffd||fffd|, groupno, Curr, stFSumPassive, WithCorrMvmnt, ToboId, RS) / 100
  Else
    CBalGr = 0
  End If
End Function

Public Function DBalGr( _
  |fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional RS As Integer = -1 _
  ) As Currency
  Application.Volatile (True)
  DBalGr = 0
  If Activated Then
    DBalGr = BalanceObj.GetGroupSum(|fffd||fffd||fffd||fffd|, groupno, Curr, stFSumActive, WithCorrMvmnt, ToboId, RS) / 100
  Else
    DBalGr = 0
  End If
End Function

Public Function DGr( _
  |fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional RS As Integer = -1 _
  ) As Currency
  Application.Volatile (True)
  If Activated Then
    DGr = BalanceObj.GetGroupSum(|fffd||fffd||fffd||fffd|, groupno, Curr, stFDebet, WithCorrMvmnt, ToboId, RS) / 100
  Else
    DGr = 0
  End If
End Function

Public Function CGr( _
  |fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional RS As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CGr = BalanceObj.GetGroupSum(|fffd||fffd||fffd||fffd|, groupno, Curr, stFCredit, WithCorrMvmnt, ToboId, RS) / 100
  Else
    CGr = 0
  End If
End Function



Attribute VB_Name = "InfoCut"
Public Function Check_IC(aFromDate As Date, aTillDate As Date, _
                         aSegmentID As Long, aSiteID As Long) As String
  Dim sSql As String
  Application.Volatile (True)
  If Activated Then
    sSql = " select pkg_balanceocx.checkinfocut(:pFromDate, :pTillDate, :pSegmentID, :pSiteID) " _
           & " from dual"
    Check_IC = BalanceObj.GetQueryValue(sSql, Array(aFromDate, aTillDate, aSegmentID, aSiteID))
  Else
    Check_IC = ""
  End If
End Function

'Public Function DAvgPst_IC( _
'  |fffd||fffd||fffd||fffd| As Date, AccRange As String, _
'  Optional ZRate As Integer = 1, _
'  Optional Curr As String = "", Optional SegmentID As Integer = -1, _
'  Optional ToboID As Integer = -1 _
'  ) As Currency
'  Application.Volatile (True)
'  If Activated Then
'    DAvgPst_IC = BalanceObj.GetAvgPstPeriod_IC(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, AccRange, Curr, stSumActive, SegmentID, ToboID, ZRate, _
'                                "", "", "", "")
'  Else
'    DAvgPst_IC = 0
'  End If
'End Function
'
'Public Function CAvgPst_IC( _
'  |fffd||fffd||fffd||fffd| As Date, AccRange As String, _
'  Optional ZRate As Integer = 1, _
'  Optional Curr As String = "", Optional SegmentID As Integer = -1, _
'  Optional ToboID As Integer = -1 _
'  ) As Currency
'  Application.Volatile (True)
'  If Activated Then
'    CAvgPst_IC = BalanceObj.GetAvgPstPeriod_IC(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, AccRange, Curr, stSumPassive, SegmentID, ToboID, ZRate, _
'                                "", "", "", "")
'  Else
'    CAvgPst_IC = 0
'  End If
'End Function
'
'Public Function DAvgPstPeriod_IC( _
'  |fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd| As Date, AccRange As String, _
'  Optional ZRate As Integer = 1, _
'  Optional Curr As String = "", Optional SegmentID As Integer = -1, _
'  Optional ToboID As Integer = -1 _
'  ) As Currency
'  Application.Volatile (True)
'  If Activated Then
'    DAvgPstPeriod_IC = BalanceObj.GetAvgPstPeriod_IC(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, AccRange, Curr, stSumActive, SegmentID, ToboID, ZRate, _
'                                "", "", "", "")
'  Else
'    DAvgPstPeriod_IC = 0
'  End If
'End Function
'
'Public Function CAvgPstPeriod_IC( _
'  |fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd| As Date, AccRange As String, _
'  Optional ZRate As Integer = 1, _
'  Optional Curr As String = "", Optional SegmentID As Integer = -1, _
'  Optional ToboID As Integer = -1 _
'  ) As Currency
'  Application.Volatile (True)
'  If Activated Then
'    CAvgPstPeriod_IC = BalanceObj.GetAvgPstPeriod_IC(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, AccRange, Curr, stSumPassive, SegmentID, ToboID, ZRate, _
'                                "", "", "", "")
'  Else
'    CAvgPstPeriod_IC = 0
'  End If
'End Function
''----------
'Public Function DAvgPstMng_IC( _
'  |fffd||fffd||fffd||fffd| As Date, AccRange As String, _
'  Optional ZRate As Integer = 1, _
'  Optional Curr As String = "", Optional SegmentID As Integer = -1, _
'  Optional ToboID As Integer = -1, _
'  Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
'  Optional |fffd||fffd| As String = "", _
'  Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
'  Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
'  ) As Currency
'  Application.Volatile (True)
'  If Activated Then
'    DAvgPstMng_IC = BalanceObj.GetAvgPstPeriod_IC(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, AccRange, Curr, stSumActive, SegmentID, ToboID, ZRate, _
'                                |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'  Else
'    DAvgPstMng_IC = 0
'  End If
'End Function
'
'Public Function CAvgPstMng_IC( _
'  |fffd||fffd||fffd||fffd| As Date, AccRange As String, _
'  Optional ZRate As Integer = 1, _
'  Optional Curr As String = "", Optional SegmentID As Integer = -1, _
'  Optional ToboID As Integer = -1, _
'  Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
'  Optional |fffd||fffd| As String = "", _
'  Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
'  Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
'  ) As Currency
'  Application.Volatile (True)
'  If Activated Then
'    CAvgPstMng_IC = BalanceObj.GetAvgPstPeriod_IC(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, AccRange, Curr, stSumPassive, SegmentID, ToboID, ZRate, _
'                                |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'  Else
'    CAvgPstMng_IC = 0
'  End If
'End Function
'
'Public Function DAvgPstPeriodMng_IC( _
'  |fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd| As Date, AccRange As String, _
'  Optional ZRate As Integer = 1, _
'  Optional Curr As String = "", Optional SegmentID As Integer = -1, _
'  Optional ToboID As Integer = -1, _
'  Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
'  Optional |fffd||fffd| As String = "", _
'  Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
'  Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
'  ) As Currency
'  Application.Volatile (True)
'  If Activated Then
'    DAvgPstPeriodMng_IC = BalanceObj.GetAvgPstPeriod_IC(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, AccRange, Curr, stSumActive, SegmentID, ToboID, ZRate, _
'                                |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'  Else
'    DAvgPstPeriodMng_IC = 0
'  End If
'End Function
'
'Public Function CAvgPstPeriodMng_IC( _
'  |fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd| As Date, AccRange As String, _
'  Optional ZRate As Integer = 1, _
'  Optional Curr As String = "", Optional SegmentID As Integer = -1, _
'  Optional ToboID As Integer = -1, _
'  Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
'  Optional |fffd||fffd| As String = "", _
'  Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
'  Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
'  ) As Currency
'  Application.Volatile (True)
'  If Activated Then
'    CAvgPstPeriodMng_IC = BalanceObj.GetAvgPstPeriod_IC(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, AccRange, Curr, stSumPassive, SegmentID, ToboID, ZRate, _
'                                |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'  Else
'    CAvgPstPeriodMng_IC = 0
'  End If
'End Function
'
'Public Function DBalMaskMng_IC(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Optional CurrencyId As String = "980", _
'Optional SegmentID As Integer = -1, _
'Optional ToboID As Integer = -1, _
'Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
'Optional |fffd||fffd| As String = "", _
'Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
'Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
') As Currency
'  Application.Volatile (True)
'  If Activated Then
'    DBalMaskMng_IC = BalanceObj.GetBalMaskPeriod_IC(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, AccRange, CurrencyId, stFSumActive, SegmentID, _
'                                ToboID, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'  Else
'    DBalMaskMng_IC = 0
'  End If
'End Function
'
'Public Function CBalMaskMng_IC(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Optional CurrencyId As String = "980", _
'Optional SegmentID As Integer = -1, _
'Optional ToboID As Integer = -1, _
'Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
'Optional |fffd||fffd| As String = "", _
'Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
'Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
') As Currency
'  Application.Volatile (True)
'  If Activated Then
'    CBalMaskMng_IC = BalanceObj.GetBalMaskPeriod_IC(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, AccRange, CurrencyId, stFSumPassive, SegmentID, _
'                                ToboID, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'  Else
'    CBalMaskMng_IC = 0
'  End If
'End Function
'
'Public Function DBalMaskMngEq_IC(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Optional CurrencyId As String = "", _
'Optional SegmentID As Integer = -1, _
'Optional ToboID As Integer = -1, _
'Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
'Optional |fffd||fffd| As String = "", _
'Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
'Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
') As Currency
'  Application.Volatile (True)
'  If Activated Then
'    DBalMaskMngEq_IC = BalanceObj.GetBalMaskPeriod_IC(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, AccRange, CurrencyId, stSumActive, SegmentID, _
'                                ToboID, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'  Else
'    DBalMaskMngEq_IC = 0
'  End If
'End Function
'
'Public Function CBalMaskMngEq_IC(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Optional CurrencyId As String = "", _
'Optional SegmentID As Integer = -1, _
'Optional ToboID As Integer = -1, _
'Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
'Optional |fffd||fffd| As String = "", _
'Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
'Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
') As Currency
'  Application.Volatile (True)
'  If Activated Then
'    CBalMaskMngEq_IC = BalanceObj.GetBalMaskPeriod_IC(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, AccRange, CurrencyId, stSumPassive, SegmentID, _
'                                ToboID, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'  Else
'    CBalMaskMngEq_IC = 0
'  End If
'End Function
'
'Public Function DBalMaskPeriodMng_IC(|fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd| As Date, AccRange As String, Optional CurrencyId As String = "980", _
'Optional SegmentID As Integer = -1, _
'Optional ToboID As Integer = -1, _
'Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
'Optional |fffd||fffd| As String = "", _
'Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
'Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
') As Currency
'  Application.Volatile (True)
'  If Activated Then
'    DBalMaskPeriodMng_IC = BalanceObj.GetBalMaskPeriod_IC(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, AccRange, CurrencyId, stFSumActive, SegmentID, _
'                                ToboID, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'  Else
'    DBalMaskPeriodMng_IC = 0
'  End If
'End Function
'
'Public Function CBalMaskPeriodMng_IC(|fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd| As Date, AccRange As String, Optional CurrencyId As String = "980", _
'Optional SegmentID As Integer = -1, _
'Optional ToboID As Integer = -1, _
'Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
'Optional |fffd||fffd| As String = "", _
'Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
'Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
') As Currency
'  Application.Volatile (True)
'  If Activated Then
'    CBalMaskPeriodMng_IC = BalanceObj.GetBalMaskPeriod_IC(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, AccRange, CurrencyId, stFSumPassive, SegmentID, _
'                                ToboID, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'  Else
'    CBalMaskPeriodMng_IC = 0
'  End If
'End Function
'
'Public Function DBalMaskPeriodMngEq_IC(|fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd| As Date, AccRange As String, Optional CurrencyId As String = "", _
'Optional SegmentID As Integer = -1, _
'Optional ToboID As Integer = -1, _
'Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
'Optional |fffd||fffd| As String = "", _
'Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
'Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
') As Currency
'  Application.Volatile (True)
'  If Activated Then
'    DBalMaskPeriodMngEq_IC = BalanceObj.GetBalMaskPeriod_IC(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, AccRange, CurrencyId, stSumActive, SegmentID, _
'                                ToboID, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'  Else
'    DBalMaskPeriodMngEq_IC = 0
'  End If
'End Function
'
'Public Function CBalMaskPeriodMngEq_IC(|fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd| As Date, AccRange As String, Optional CurrencyId As String = "", _
'Optional SegmentID As Integer = -1, _
'Optional ToboID As Integer = -1, _
'Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
'Optional |fffd||fffd| As String = "", _
'Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
'Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
') As Currency
'  Application.Volatile (True)
'  If Activated Then
'    CBalMaskPeriodMngEq_IC = BalanceObj.GetBalMaskPeriod_IC(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, AccRange, CurrencyId, stSumPassive, SegmentID, _
'                                ToboID, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'  Else
'    CBalMaskPeriodMngEq_IC = 0
'  End If
'End Function
' --------------------------- |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Public Function DBAccBalPeriodMng_ICX(|fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd| As Date, BAcc As String, Optional CurrencyId As String = "980", _
Optional SegmentID As Integer = -1, _
Optional ToboId As Integer = -1, _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DBAccBalPeriodMng_ICX = BalanceObj.GetBaccBalPeriod_ICX(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, BAcc, CurrencyId, stFSumActive, SegmentID, _
                                ToboId, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
  Else
    DBAccBalPeriodMng_ICX = 0
  End If
End Function
  
Public Function CBAccBalPeriodMng_ICX(|fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd| As Date, BAcc As String, Optional CurrencyId As String = "980", _
Optional SegmentID As Integer = -1, _
Optional ToboId As Integer = -1, _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CBAccBalPeriodMng_ICX = BalanceObj.GetBaccBalPeriod_ICX(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, BAcc, CurrencyId, stFSumPassive, SegmentID, _
                                ToboId, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
  Else
    CBAccBalPeriodMng_ICX = 0
  End If
End Function

Public Function DBAccBalPeriodMngEq_ICX(|fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd| As Date, BAcc As String, Optional CurrencyId As String = "", _
Optional SegmentID As Integer = -1, _
Optional ToboId As Integer = -1, _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DBAccBalPeriodMngEq_ICX = BalanceObj.GetBaccBalPeriod_ICX(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, BAcc, CurrencyId, stSumActive, SegmentID, _
                                ToboId, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
  Else
    DBAccBalPeriodMngEq_ICX = 0
  End If
End Function
  
Public Function CBAccBalPeriodMngEq_ICX(|fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd| As Date, BAcc As String, Optional CurrencyId As String = "", _
Optional SegmentID As Integer = -1, _
Optional ToboId As Integer = -1, _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CBAccBalPeriodMngEq_ICX = BalanceObj.GetBaccBalPeriod_ICX(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, BAcc, CurrencyId, stSumPassive, SegmentID, _
                                ToboId, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
  Else
    CBAccBalPeriodMngEq_ICX = 0
  End If
End Function

Public Function DBAccAvgPstPeriodMng_ICX( _
  |fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd| As Date, BAcc As String, _
  Optional ZRate As Integer = 1, _
  Optional Curr As String = "", Optional SegmentID As Integer = -1, _
  Optional ToboId As Integer = -1, _
  Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
  Optional |fffd||fffd| As String = "", _
  Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
  Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
  ) As Currency
  Application.Volatile (True)
  If Activated Then
    DBAccAvgPstPeriodMng_ICX = BalanceObj.GetBAccAvgPstPeriod_ICX(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, BAcc, Curr, stSumActive, SegmentID, ToboId, ZRate, _
                                |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
  Else
    DBAccAvgPstPeriodMng_ICX = 0
  End If
End Function

Public Function CBAccAvgPstPeriodMng_ICX( _
  |fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd| As Date, BAcc As String, _
  Optional ZRate As Integer = 1, _
  Optional Curr As String = "", Optional SegmentID As Integer = -1, _
  Optional ToboId As Integer = -1, _
  Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", _
  Optional |fffd||fffd| As String = "", _
  Optional |fffd||fffd||fffd||fffd||fffd| As String = "", _
  Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "" _
  ) As Currency
  Application.Volatile (True)
  If Activated Then
    CBAccAvgPstPeriodMng_ICX = BalanceObj.GetBAccAvgPstPeriod_ICX(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, BAcc, Curr, stSumPassive, SegmentID, ToboId, ZRate, _
                                |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
  Else
    CBAccAvgPstPeriodMng_ICX = 0
  End If
End Function

Attribute VB_Name = "Inv"
Public Function GetInvAmount(date1 As Date, border As Currency, order As Integer) As Currency
  Application.Volatile (True)
  If Activated Then
    If IsNull(vinvday) Or date1 <> vinvday Then
      loadinv date1, border
    End If
    GetInvAmount = vInvamount(order)
  Else
    GetInvAmount = 0
  End If
End Function

Public Function GetInvId(date1 As Date, border As Currency, order As Integer) As Long
  Application.Volatile (True)
  If Activated Then
    If IsNull(vinvday) Or date1 <> vinvday Then
      loadinv date1, border
    End If
    GetInvId = vInvid(order)
  Else
    GetInvId = 0
  End If
End Function

Public Function GetInvName(date1 As Date, border As Currency, order As Integer) As String
  Application.Volatile (True)
  If Activated Then
    If IsNull(vinvday) Or date1 <> vinvday Then
      loadinv date1, border
    End If
    GetInvName = vInvname(order)
  Else
    GetInvName = ""
  End If
End Function

Sub loadinv(date1 As Date, border As Currency)
  On Error GoTo errorhandler
  vinvday = date1
  If IsNull(BalanceDay) Or BalanceDay <> vinvday Then
    InitBlns date1
  End If
  Dim q As B2Balance.QueryX
  Dim i As Integer
  Set q = BalanceObj.CreateQuery( _
  " SELECT   ABS (SUM (a.summapassiveq - a.summaactiveq)) RESULT, a.contragentid, c.NAME" & _
  "     FROM balanceocx_rests a," & _
  "         contragent c," & _
  "          (SELECT SUBSTR (paramvalue, 1, 4) baccountid" & _
  "             FROM NBUReportParamRange" & _
  "            WHERE paramname = 'F_42_KIH') F42" & _
  "    WHERE a.baccountid = F42.baccountid" & _
  "      AND c.ID = a.contragentid" & _
  "      AND a.dateend = pkg_norm.fngetcalcdate" & _
  " GROUP BY a.contragentid, c.NAME" & _
  "   HAVING ABS (SUM (a.summapassiveq - a.summaactiveq)) <> 0" & _
  " ORDER BY 1")
  
'  "SELECT ABS (SUM (summanoweq)) result, a.contragentid,c.name " & _
'  "                     FROM V_CORRBALANCE_PERIOD a,contragent c," & _
'  "                        (SELECT substr(paramvalue,1,4) baccountid" & _
'  "                          FROM NBUReportParamRange" & _
'  "                        WHERE paramname = 'F_42_KIH') F42" & _
'  "                    WHERE a.baccountid = F42.baccountid and c.id =a.contragentid" & _
'  "                    GROUP BY a.contragentid,c.name" & _
'  "                 HAVING Abs(Sum(summanoweq)) <> 0" & _
'  "                 ORDER BY 1")

  q.Active = True
  i = 1
  While (Not q.EOF) And i <= 8
    vInvamount(i) = q.Fields("RESULT") / 100
    vInvid(i) = q.Fields("CONTRAGENTID")
    vInvname(i) = q.Fields("NAME")
    i = i + 1
    q.Next
  Wend
  While i <= 8
    vInvamount(i) = 0
    vInvid(i) = 0
    vInvname(i) = ""
    i = i + 1
  Wend
  vInvamount(9) = 0
  While (Not q.EOF)
    If q.Fields("RESULT") / 100 > 0 Then ' > border Then
      vInvamount(9) = vInvamount(9) + q.Fields("RESULT") / 100
    End If
    q.Next
  Wend
 Exit Sub
errorhandler:
 Msg = "|fffd||fffd||fffd||fffd||fffd||fffd| # " & Str(Err.Number) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| loadv42 |fffd| " _
            & Err.Source & Chr(13) & Err.Description
    MsgBox Msg, , "|fffd||fffd||fffd||fffd||fffd||fffd|", Err.HelpFile, Err.HelpContext
End Sub


Attribute VB_Name = "Isma"
Dim MngDateStart As Date
Dim MngDateEnd As Date
Dim WithCorr As Integer

Public Function MngSumPeriod(|fffd||fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, _
  |fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer = -99, _
  Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", Optional |fffd||fffd||fffd||fffd||fffd||fffd| As String = "") As Currency
'C|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'|fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (2 |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|),
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Dim sSql As String
  Dim q As B2Balance.QueryX
  Application.Volatile (True)
  MngSumPeriod = 0
  |fffd||fffd| = Replace(|fffd||fffd|, " ", "")
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Replace(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, " ", "")
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "'" & Replace(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, ",", "','") & "'"
  |fffd||fffd| = Replace(|fffd||fffd|, " ", "")
  |fffd||fffd||fffd||fffd||fffd| = Replace(|fffd||fffd||fffd||fffd||fffd|, " ", "")
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Replace(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, " ", "")
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "'" & Replace(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, ",", "','") & "'"
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Replace(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, " ", "")
  |fffd||fffd||fffd||fffd||fffd||fffd| = Replace(|fffd||fffd||fffd||fffd||fffd||fffd|, " ", "")
  If Balance.Activated Then
    If (MngDateStart <> |fffd||fffd||fffd||fffd||fffd||fffd|) _
      Or (MngDateEnd <> |fffd||fffd||fffd||fffd||fffd|) _
        Or (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> WithCorr) Then
      Set q = BalanceObj.CreateQuery( _
      "begin pkg_mng.mngpreparedoc4rep(:FromDate, :TillDate, :CorrM); end; ")
      q.Params("FromDate") = |fffd||fffd||fffd||fffd||fffd||fffd|
      q.Params("TillDate") = |fffd||fffd||fffd||fffd||fffd|
      q.Params("CorrM") = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      q.ExecSQL
      MngDateStart = |fffd||fffd||fffd||fffd||fffd||fffd|
      MngDateEnd = |fffd||fffd||fffd||fffd||fffd|
      WithCorr = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    End If
    sSql = "SELECT NVL(SUM(decode(mngotbsid, 0, -1, 1) * amount),0) " _
         & " FROM mngdocumentalloc doc " _
         & " WHERE  1 = 1"
    If |fffd||fffd| <> "" Then
      sSql = sSql & "   AND fnInStrMask(SUBSTR(accountno,1,4), '" & |fffd||fffd| & "') <> 0 "
    End If
    If |fffd||fffd| <> "" Then
      sSql = sSql & "   AND NVL(doc.centerid,99) IN (" & |fffd||fffd| & ") "
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = "'99'" Then
      sSql = sSql & "  AND doc.divisionid = '99' "
    Else
      If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "''" Then
        sSql = sSql & "  AND doc.divisionid IN " _
         & "    (SELECT id FROM division " _
         & "      where intrabankcode IN (" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| & ")) "
        End If
    End If
    If |fffd||fffd||fffd||fffd||fffd| = "99" Then
      sSql = sSql & "  AND doc.departmentid = 99 "
    Else
      If |fffd||fffd||fffd||fffd||fffd| <> "" Then
        sSql = sSql & "  AND doc.departmentid IN " _
           & "    (SELECT id FROM department " _
           & "      where alternativeid IN (" & |fffd||fffd||fffd||fffd||fffd| & ")) "
      End If
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "''" Then
      sSql = sSql & "  AND substr(accountno, -2, 2) IN (" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| & ") "
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "" Then
      sSql = sSql & "   AND NVL(doc.productid,99) IN (" & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & ") "
    End If
    If |fffd||fffd||fffd||fffd||fffd||fffd| <> "" Then
      sSql = sSql & "   AND NVL(doc.budgetarticleid,99) IN (" & |fffd||fffd||fffd||fffd||fffd||fffd| & ") "
    End If
    
    MngSumPeriod = BalanceObj.GetQueryValue(sSql, Array()) / 100
  Else
    MngSumPeriod = 0
  End If
End Function

'|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd|
Public Function MngSumEx(|fffd||fffd||fffd||fffd| As Date, |fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, _
  |fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer = 0, _
  Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", Optional |fffd||fffd||fffd||fffd||fffd||fffd| As String = "") _
    As Currency
  
  Dim fDateStart As Date
  Dim fDateEnd As Date
  
  fDateStart = DateSerial(Year(|fffd||fffd||fffd||fffd|), Month(|fffd||fffd||fffd||fffd|), 1)
  fDateEnd = DateAdd("m", 1, fDateStart)
  fDateEnd = DateAdd("d", -1, fDateEnd)

  MngSumEx = MngSumPeriod(fDateStart, fDateEnd, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, _
    |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function

'|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd|
Public Function MngSumDay(|fffd||fffd||fffd||fffd| As Date, |fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, _
  |fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer = 0, _
  Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String = "", Optional |fffd||fffd||fffd||fffd||fffd||fffd| As String = "") As Currency
  MngSumDay = MngSumPeriod(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, _
    |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function




Attribute VB_Name = "Loans"
Dim MaxLoan(25) As Currency
Dim BigLoanTtl(25) As Currency
Dim InsiderLoan(25) As Currency
Dim InsiderLoanTtl(25) As Currency

Sub LoadLoans(ADay As Date, MinLoanValue As Currency)
  Dim q As B2Balance.QueryX
  Dim eoln As String
  eoln = Chr(13) & Chr(10)
  Set q = BalanceObj.CreateQuery( _
   "select Sum(Amnt) Amnt, Sum(Amnt0) Amnt0, Sum(Amnt1) Amnt1, Sum(Amnt2) Amnt2," & eoln & _
   "    Sum(Amnt3) Amnt3, Sum(Amnt4) Amnt4, Sum(Amnt5) Amnt5, Sum(Amnt6) Amnt6," & eoln & _
   "    Sum(Amnt7) Amnt7, Sum(Amnt8) Amnt8, Sum(Amnt9) Amnt9, Sum(Amnt10) Amnt10," & eoln & _
   "    Sum(Amnt11) Amnt11, Sum(Amnt12) Amnt12, Sum(Amnt13) Amnt13, Sum(Amnt14) Amnt14," & eoln & _
   "    Sum(Amnt15) Amnt15, Sum(Amnt16) Amnt16, Sum(Amnt17) Amnt17, Sum(Amnt18) Amnt18," & eoln & _
   "    Sum(Amnt19) Amnt19, Sum(Amnt20) Amnt20, Sum(Amnt21) Amnt21, Sum(Amnt22) Amnt22," & eoln & _
   "    Sum(Amnt23) Amnt23, Sum(Amnt24) Amnt24, cl.ContragentGroupID, NVL(cl.ContragentGroupID, b.ContragentID)" & eoln & _
   " from VBigLoanByGroup b, ContragentLink cl" & eoln & _
   "   where cl.ContragentID(+) = b.ContragentID" & eoln & _
   "    and b.ArcDate = :ArcDate" & eoln & _
   "group by cl.ContragentGroupID, NVL(cl.ContragentGroupID, b.ContragentID)" & eoln & _
   "order by Amnt desc")
  q.Params("ArcDate") = ADay
  q.Active = True
  OperDay = ADay
  
  For i = 0 To 24
    MaxLoan(i) = NVL(q.Fields("Amnt" & i)) / 100
    BigLoanTtl(i) = MaxLoan(i)
  Next i
  q.Next
 
  While Not q.EOF And q.Fields("Amnt") > MinLoanValue * 100
    For i = 0 To 24
      BigLoanTtl(i) = BigLoanTtl(i) + NVL(q.Fields("Amnt" & i)) / 100
    Next i
    q.Next
  Wend
End Sub

Public Function GetLoan(ADay As Date, MinLoanValue As Currency, aGroup As Long) As Currency
  Application.Volatile (True)
  If Activated And MinLoanValue > 0 Then
    If IsNull(OperDay) Or ADay <> OperDay Then Call LoadLoans(ADay, MinLoanValue)
    GetLoan = MaxLoan(aGroup)
  Else
    GetLoan = 0
  End If
End Function
'Sub LoadInsiderLoans(ADay As Date)
  'Dim q As B2Balance.QueryX
  'Dim eoln As String
  'eoln = Chr(13) & Chr(10)
  'Set q = BalanceObj.CreateQuery( _
'   "select Sum(Amnt) Amnt, Sum(Amnt0) Amnt0, Sum(Amnt1) Amnt1, Sum(Amnt2) Amnt2," & eoln & _
   '"    Sum(Amnt3) Amnt3, Sum(Amnt4) Amnt4, Sum(Amnt5) Amnt5, Sum(Amnt6) Amnt6," & eoln & _
   '"    Sum(Amnt7) Amnt7, Sum(Amnt8) Amnt8, Sum(Amnt9) Amnt9, Sum(Amnt10) Amnt10," & eoln & _
   '"    Sum(Amnt11) Amnt11, Sum(Amnt12) Amnt12, Sum(Amnt13) Amnt13, Sum(Amnt14) Amnt14," & eoln & _
   '"    Sum(Amnt15) Amnt15, Sum(Amnt16) Amnt16, Sum(Amnt17) Amnt17, Sum(Amnt18) Amnt18," & eoln & _
   '"    Sum(Amnt19) Amnt19, Sum(Amnt20) Amnt20, Sum(Amnt21) Amnt21, Sum(Amnt22) Amnt22," & eoln & _
   '"    Sum(Amnt23) Amnt23, Sum(Amnt24) Amnt24" & eoln & _
   '" from VBigLoanByGroup b, Contragent c" & eoln & _
   '"   where c.ID = b.ContragentID" & eoln & _
   '"    and b.ArcDate = :ArcDate" & eoln & _
   '"    and c.InsiderID <> 99" & eoln & _
   '"group by b.ContragentID" & eoln & _
   '"order by Amnt desc")
  'q.Params("ArcDate") = ADay
  'q.Active = True
  'InsiderOperDay = ADay
  
  'For i = 0 To 24
   ' InsiderLoan(i) = NVL(q.Fields("Amnt" & i)) / 100
   ' InsiderLoanTtl(i) = InsiderLoan(i)
  'Next i
  'q.Next
 
'  While Not q.EOF
 '   For i = 0 To 24
  '    InsiderLoanTtl(i) = InsiderLoanTtl(i) + NVL(q.Fields("Amnt" & i)) / 100
    'Next i
    'q.Next
  'Wend
'End Sub

'Public Function GetInsiderLoan(ADay As Date, aGroup As Long) As Currency
  'Application.Volatile (True)
  'If Activated Then
    'If ADay <> InsiderOperDay Then LoadInsiderLoans (ADay)
    'GetInsiderLoan = InsiderLoan(aGroup)
  'Else
'   GetInsiderLoan = 0
  'End If
'End Function

'Public Function GetTotalInsiderLoan(ADay As Date, aGroup As Long) As Currency
  'Application.Volatile (True)
  'If Activated Then
    'If ADay <> InsiderOperDay Then LoadInsiderLoans (ADay)
    'GetTotalInsiderLoan = InsiderLoanTtl(aGroup)
  'Else
   'GetTotalInsiderLoan = 0
 ' End If
'End Function

Public Function GetBigLoan(ADay As Date, MinSumm As Currency, aGroup As Long) As Currency
  Application.Volatile (True)
  If Activated And MinSumm > 0 Then
    If IsNull(OperDay) Or ADay <> OperDay Then Call LoadLoans(ADay, MinSumm)
    GetBigLoan = BigLoanTtl(aGroup)
  Else
    GetBigLoan = 0
  End If
End Function


Attribute VB_Name = "MKB"
'======================================================================
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|
'======================================================================
Public Function DPeriodExt(FromDate As Date, TillDate As Date, AccRange As String, Curr As String) As Currency
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim tc As Date
  If FromDate > TillDate Then GoTo EDPE1
  tc = Date
  If FromDate < tc And TillDate < tc Then
   DPeriodExt = DPeriod(FromDate, TillDate, AccRange, Curr)
   GoTo EDPE
  End If
  If FromDate < tc And TillDate >= tc Then
   DPeriodExt = DPeriod(FromDate, tc - 1, AccRange, Curr) + |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F(tc, AccRange, Curr)
   GoTo EDPE
  End If
  If FromDate = tc And TillDate >= tc Then
   DPeriodExt = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F(tc, AccRange, Curr)
   GoTo EDPE
  End If
EDPE1:
  DPeriodExt = 0
EDPE:
End Function
Public Function CPeriodExt(FromDate As Date, TillDate As Date, AccRange As String, Curr As String) As Currency
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim tc As Date
  If FromDate > TillDate Then GoTo EDPE1
  tc = Date
  If FromDate < tc And TillDate < tc Then
   CPeriodExt = CPeriod(FromDate, TillDate, AccRange, Curr)
   GoTo EDPE
  End If
  If FromDate < tc And TillDate >= tc Then
   CPeriodExt = CPeriod(FromDate, tc - 1, AccRange, Curr) + |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F(tc, AccRange, Curr)
   GoTo EDPE
  End If
  If FromDate = tc And TillDate >= tc Then
   CPeriodExt = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F(tc, AccRange, Curr)
   GoTo EDPE
  End If
EDPE1:
  CPeriodExt = 0
EDPE:
End Function
Public Function MidRestPeriod(FilMFO As Long, BegDat As Date, EndDat As Date, BalAcc As String, CodVal As String)
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| BegDat,EndDat |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| BalAcc |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| CodVal$
Dim k As Date
 If BegDat > EndDat Then GoTo Ee
 k = BegDat
 S# = 0#
 If FilMFO <> 0 Then
Beg:
  S# = S# + |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(FilMFO, k, BalAcc, CodVal)
  k = k + 1
  If k <= EndDat Then GoTo Beg
 Else
Beg1:
  S# = S# + |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F(k, BalAcc, CodVal)
  k = k + 1
  If k <= EndDat Then GoTo Beg1
 End If
 MidRestPeriod = S# / (EndDat - BegDat + 1)
Ee:
End Function

Public Function MidRestPeriodEq(FilMFO As Long, BegDat As Date, EndDat As Date, BalAcc As String)
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| BegDat,EndDat |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| BalAcc |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| CodVal$
Dim k As Date
 If BegDat > EndDat Then GoTo Ee
 k = BegDat
 S# = 0#
 If FilMFO <> 0 Then
Beg:
  S# = S# + |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(FilMFO, k, BalAcc, "")
  k = k + 1
  If k <= EndDat Then GoTo Beg
 Else
Beg1:
  S# = S# + |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(k, BalAcc, "")
  k = k + 1
  If k <= EndDat Then GoTo Beg1
 End If
 MidRestPeriodEq = S# / (EndDat - BegDat + 1)
Ee:
End Function

Attribute VB_Name = "N11"
Public Function Getn11Amount(date1 As Date, border As Currency, order As Integer) As Currency
  Application.Volatile (True)
  If Activated Then
    If Not n11loaded Then
      loadN11 date1, border
    End If
    Getn11Amount = n11amount(order)
  Else
    Getn11Amount = 0
  End If
End Function

Public Function GetN11Id(date1 As Date, border As Currency, order As Integer) As Long
  Application.Volatile (True)
  If Activated Then
    If Not n11loaded Then
      loadN11 date1, border
    End If
    GetN11Id = n11id(order)
  Else
    GetN11Id = 0
  End If
End Function

Public Function GetN11Name(date1 As Date, border As Currency, order As Integer) As String
  Application.Volatile (True)
  If Activated Then
    If Not n11loaded Then
      loadN11 date1, border
    End If
    GetN11Name = n11name(order)
  Else
    GetN11Name = ""
  End If
End Function

Sub loadN11(date1 As Date, border As Currency)
  On Error GoTo errorhandler
  n11loaded = False
  n11day = date1
  If IsNull(BalanceDay) Or BalanceDay <> n11day Then
    InitBlns date1
  End If
  Dim q As B2Balance.QueryX
  Dim q1 As B2Balance.QueryX
  Dim i As Integer
  Set q1 = BalanceObj.CreateQuery("begin pkg_norm.initnorm(:d) ; end;")
  q1.Params("d") = date1
  q1.ExecSQL
  Dim D As Date
  D = N_Date(date1, -1)
  Set q = BalanceObj.CreateQuery( _
    "SELECT ABS (SUM (amounteq)) RESULT, c.sname NAME, b.contragentid, c.insiderid" & vbNewLine & _
    "  FROM v_accountdeal_allparam b, aaccount a, contragent c" & vbNewLine & _
    " WHERE a.ID = b.accountid" & vbNewLine & _
    "   AND a.contragentid != 1" & vbNewLine & _
    "   AND c.ID = b.ContragentID" & vbNewLine & _
    "   AND a.baccountid IN (" & vbNewLine & _
    "                      SELECT DISTINCT baccountid" & vbNewLine & _
    "                        FROM vreposbaccountlist4date F42, currentdaysetting cds" & vbNewLine & _
    "                       WHERE F42.list_name = 'F_42_KIH'" & vbNewLine & _
    "                         AND F42.arcdate = cds.systemday)" & vbNewLine & _
    " GROUP BY b.contragentid, c.sname, c.insiderid" & vbNewLine & _
    "HAVING SUM(amounteq) != 0")
  q.Active = True
  q.First
  i = 1
  n11loaded = Not q.EOF
  While (Not q.EOF) And i <= 24
    n11amount(i) = q.Fields("RESULT") / 100
    n11id(i) = q.Fields("CONTRAGENTID")
    n11name(i) = q.Fields("NAME")
    i = i + 1
    q.Next
  Wend
  While i <= 24
    n11amount(i) = 0
    n11id(i) = 0
    n11name(i) = ""
    i = i + 1
  Wend
  n11amount(25) = 0
  While (Not q.EOF)
    If q.Fields("RESULT") / 100 > border Then
      n11amount(25) = n11amount(25) + q.Fields("RESULT") / 100
    End If
    q.Next
  Wend
 Exit Sub
errorhandler:
 Msg = "|fffd||fffd||fffd||fffd||fffd||fffd| # " & Str(Err.Number) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| loadN11 |fffd| " _
            & Err.Source & Chr(13) & Err.Description
    MsgBox Msg, , "|fffd||fffd||fffd||fffd||fffd||fffd|", Err.HelpFile, Err.HelpContext
End Sub
Attribute VB_Name = "N2"
Public Function fnN2ActAmountEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  R013 As String, InvClass As String, RiskCoef As Integer, _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    fnN2ActAmountEq = _
      BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stSumActive, BAccRange, "", "", R013, "", InvClass, WithCorrMvmnt, ToboId, -1) / 100 * RiskCoef / 100
  Else
    fnN2ActAmountEq = 0
  End If
End Function

Public Function fnN2PassAmountEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  R013 As String, InvClass As String, RiskCoef As Integer, _
  Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    fnN2PassAmountEq = BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, stSumPassive, BAccRange, "", "", R013, "", InvClass, WithCorrMvmnt, ToboId, -1) / 100 * RiskCoef / 100
  Else
    fnN2PassAmountEq = 0
  End If
End Function

Public Function fnN2RCoef( _
  BAcc As Integer, _
  R013 As Integer, _
  InvClass As Integer, _
  Optional B010 As String = "" _
  ) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = _
        "SELECT   riskkoef" & vbNewLine & _
        "    FROM (SELECT 1 n, t.riskkoef" & _
        "            FROM N2RiskKoef t" & _
        "           WHERE baccountid = :baccountid" & _
        "             AND NVL (r013, 0) = :r013" & _
        "             AND NVL (InvClass, 0) = :InvClass" & _
        "             AND b010 = :B010" & _
        "          UNION ALL" & _
        "          SELECT 2 n, t.riskkoef" & _
        "            FROM N2RiskKoef t" & _
        "           WHERE baccountid = :baccountid" & _
        "             AND NVL (r013, 0) = :r013" & _
        "             AND NVL (InvClass, 0) = :InvClass" & _
        "             AND b010 IS NULL) " & _
        "ORDER BY n"
      
    fnN2RCoef = BalanceObj.GetQueryValue(S, Array(BAcc, R013, InvClass, B010))
  Else
    fnN2RCoef = 0
  End If
End Function

Public Function fnN2LoanEq(BAcc As Integer, SumSign As Integer) As Currency
  Dim S As String
  Application.Volatile (True)
  If Activated Then
    S = _
    "SELECT SUM (LEAST (r.amounteq," & vbNewLine & _
    "                   u.restamountEQ + DECODE (u.IsCommitted, 'Y', commitmentamounteq, 0)" & vbNewLine & _
    "                  )" & vbNewLine & _
    "           ) amounteq" & vbNewLine & _
    "  FROM (SELECT   r.loandealid, SUM (r.amounteq) amounteq" & vbNewLine & _
    "            FROM usersecurityreport r" & vbNewLine & _
    "           WHERE SUBSTR (r.securityaccountno, 1, 4) = :baccountid" & vbNewLine & _
    "             AND EXISTS (" & vbNewLine & _
    "                   SELECT 1" & vbNewLine & _
    "                     FROM v_accountdeal_allparam a" & vbNewLine & _
    "                    WHERE r013 = '1'" & vbNewLine & _
    "                      AND a.accountid = r.securityaccountid" & vbNewLine & _
    "                      AND SIGN (a.amounteq) = :SumSign)" & vbNewLine & _
    "        GROUP BY r.loandealid) r," & vbNewLine & _
    "       userloanreport u" & vbNewLine & _
    " WHERE r.loandealid = u.ID"
 
    fnN2LoanEq = BalanceObj.GetQueryValue(S, Array(BAcc, SumSign)) / 100
  Else
    fnN2LoanEq = 0
  End If
End Function


Attribute VB_Name = "Norm"
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
 Public Function fnGetMaxDay(ADATE As Date) As Date
  Dim fDay As Date
  Dim eDay As Date
  Application.Volatile (True)
  If Activated Then
     fDay = DateSerial(Year(ADATE), Month(ADATE), 1)
     eDay = Day(DateAdd("m", 1, fDay) - 1)
     Select Case Day(ADATE)
       Case 1 To 9
         fnGetMaxDay = fDay - 1
       Case 10 To 19
         fnGetMaxDay = fDay + 9
       Case 20 To eDay - 1
         fnGetMaxDay = fDay + 19
       Case eDay
         fnGetMaxDay = ADATE
     End Select
  Else
    fnGetMaxDay = 0
  End If
End Function

Public Function InitNorm(p_Date As Date) As Integer
On Error GoTo errorhandler
  If Activated Then
    If CheckInitNorm(p_Date) = 0 Then
      Dim q As B2Balance.QueryX
      Set q = BalanceObj.CreateQuery("begin eprlogin_second; pkl_banknorm.initnorm_calc(:date); end;")
      q.Params("date") = p_Date
      q.ExecSQL
      InitNorm = 1
    Else
      InitNorm = 1
    End If
  Else
    InitNorm = 0
  End If
Exit Function
errorhandler:
  InitNorm = 0
  Msg = "|fffd||fffd||fffd||fffd||fffd||fffd| # " & Str(Err.Number) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| InitNorm |fffd| " _
             & Err.Source & Chr(13) & Err.Description
     MsgBox Msg, , "|fffd||fffd||fffd||fffd||fffd||fffd|", Err.HelpFile, Err.HelpContext
End Function

Public Function SubordKapital(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
       SubordKapital = BalanceObj.GetQueryValue( _
        " select pkg_norm.fngetsubordkapital from dual", Array()) / 100
    Else
      SubordKapital = 0
    End If
  Else
    SubordKapital = 0
  End If
End Function

Public Function GetFile42Line43Eq(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
      GetFile42Line43Eq = NVL( _
        BalanceObj.GetQueryValue( _
          "SELECT ABS(SUM (amounteq)) / 100 FROM VFILE42_LINE43_DATA", Array()) _
      )
    Else
      GetFile42Line43Eq = 0
    End If
  Else
    GetFile42Line43Eq = 0
  End If
End Function

Public Function CheckInitNorm(|fffd||fffd||fffd||fffd| As Date) As Integer
  Application.Volatile (True)
  If Activated Then
    Dim lNormDate As Date
    lNormDate = NVL( _
      BalanceObj.GetQueryValue( _
        "select pkg_norm.getnormcalcdate from dual", Array()) _
    )
    If lNormDate = |fffd||fffd||fffd||fffd| Then
      CheckInitNorm = 1
    Else
      CheckInitNorm = 0
    End If
  Else
    CheckInitNorm = 0
  End If
End Function

Public Function GetN1Zmins(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
      GetN1Zmins = NVL( _
        BalanceObj.GetQueryValue( _
          "SELECT pkg_norm.getn1zmins FROM dual", Array()) _
      )
    Else
      GetN1Zmins = 0
    End If
  Else
    GetN1Zmins = 0
  End If
End Function

Public Function GetN1Zmca(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
      GetN1Zmca = NVL( _
        BalanceObj.GetQueryValue( _
          "SELECT pkg_norm.getn1zmca FROM dual", Array()) _
      )
    Else
      GetN1Zmca = 0
    End If
  Else
    GetN1Zmca = 0
  End If
End Function

Public Function GetF42_64000(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
      GetF42_64000 = GetF42_NN0000_01072012(|fffd||fffd||fffd||fffd|, "640000")
    Else
      GetF42_64000 = 0
    End If
  Else
    GetF42_64000 = 0
  End If
End Function
Public Function GetF42_73000(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
      GetF42_73000 = GetF42_NN0000_01072012(|fffd||fffd||fffd||fffd|, "730000")
    Else
      GetF42_73000 = 0
    End If
  Else
    GetF42_73000 = 0
  End If
End Function

Public Function GetF42_74000(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
      GetF42_74000 = GetF42_NN0000_01072012(|fffd||fffd||fffd||fffd|, "740000")
    Else
      GetF42_74000 = 0
    End If
  Else
    GetF42_74000 = 0
  End If
End Function

Public Function GetF42_75000(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
       GetF42_75000 = GetF42_NN0000_01072012(|fffd||fffd||fffd||fffd|, "750000")
    Else
      GetF42_75000 = 0
    End If
  Else
    GetF42_75000 = 0
  End If
End Function
Public Function GetF42_76000(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
       GetF42_76000 = GetF42_NN0000_01072012(|fffd||fffd||fffd||fffd|, "760000")
    Else
       GetF42_76000 = 0
    End If
  Else
    GetF42_76000 = 0
  End If
End Function

Public Function GetF42_77000(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
       GetF42_77000 = GetF42_NN0000_01072012(|fffd||fffd||fffd||fffd|, "770000")
    Else
      GetF42_77000 = 0
    End If
  Else
    GetF42_77000 = 0
  End If
End Function

Public Function Getf42_78000(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
       Getf42_78000 = GetF42_NN0000_01072012(|fffd||fffd||fffd||fffd|, "780000")
    Else
       Getf42_78000 = 0
    End If
  Else
    Getf42_78000 = 0
  End If
End Function

Public Function GetF42_79000(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
       GetF42_79000 = GetF42_NN0000_01072012(|fffd||fffd||fffd||fffd|, "790000")
    Else
      GetF42_79000 = 0
    End If
  Else
    GetF42_79000 = 0
  End If
End Function
Public Function GetF42_80000(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
       GetF42_80000 = GetF42_NN0000_01072012(|fffd||fffd||fffd||fffd|, "800000")
    Else
      GetF42_80000 = 0
    End If
  Else
    GetF42_80000 = 0
  End If
End Function

Public Function GetF42_81000(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
      GetF42_81000 = GetF42_NN0000_01072012(|fffd||fffd||fffd||fffd|, "810000")
    Else
      GetF42_81000 = 0
    End If
  Else
    GetF42_81000 = 0
  End If
End Function
'87000 - 91000 - |fffd||fffd||fffd||fffd||fffd| |fffd|-|fffd||fffd||fffd| |fffd| 01.07.2012'
Public Function GetF42_87000(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
       GetF42_87000 = GetF42_NN0000_01072012(|fffd||fffd||fffd||fffd|, "870000")
    Else
       GetF42_87000 = 0
    End If
  Else
    GetF42_87000 = 0
  End If
End Function
Public Function GetF42_88000(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
       GetF42_88000 = GetF42_NN0000_01072012(|fffd||fffd||fffd||fffd|, "880000")
    Else
      GetF42_88000 = 0
    End If
  Else
    GetF42_88000 = 0
  End If
End Function
Public Function GetF42_89000(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
       GetF42_89000 = GetF42_NN0000_01072012(|fffd||fffd||fffd||fffd|, "890000")
    Else
      GetF42_89000 = 0
    End If
  Else
    GetF42_89000 = 0
  End If
End Function
Public Function GetF42_90000(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
      GetF42_90000 = GetF42_NN0000_01072012(|fffd||fffd||fffd||fffd|, "900000")
    Else
      GetF42_90000 = 0
    End If
  Else
    GetF42_90000 = 0
  End If
End Function
Public Function GetF42_91000(|fffd||fffd||fffd||fffd| As Date) As Currency
  Application.Volatile (True)
  If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
       GetF42_91000 = GetF42_NN0000_01072012(|fffd||fffd||fffd||fffd|, "910000")
    Else
       GetF42_91000 = 0
    End If
  Else
    GetF42_91000 = 0
  End If
End Function

Public Function pkg_norm( _
  |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, _
  Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|1 As String = "", Optional |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2 As String = "" _
) As Currency
  Application.Volatile (True)
 If Activated Then
    If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
       Dim S As String
       S = "begin :r := pkg_norm." + |fffd||fffd||fffd||fffd||fffd||fffd||fffd| + "("
       If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|1 <> "" Then
         S = S + ":p1"
       End If
       If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2 <> "" Then
         If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|1 <> "" Then
           S = S + ", :p2"
         Else
           S = S + ":p2"
         End If
       End If
       S = S + "); end;"
       Dim q As B2Balance.QueryX
       Set q = BalanceObj.CreateQuery(S)
       If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|1 <> "" Then
         q.Params("p1") = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|1
       End If
       If |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2 <> "" Then
         q.Params("p2") = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2
       End If
       q.ExecSQL
       pkg_norm = q.Params("r")
    Else
      pkg_norm = 0
    End If
  Else
    pkg_norm = 0
  End If
End Function
'|fffd||fffd||fffd||fffd||fffd| |fffd|-|fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|'
Public Function GetF42_NN0000_01072012( _
  |fffd||fffd||fffd||fffd| As Date, _
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
  Application.Volatile (True)
  If Activated Then
     If InitNorm(|fffd||fffd||fffd||fffd|) = 1 Then
        Dim q As B2Balance.QueryX
        Set q = BalanceObj.CreateQuery("BEGIN :r := pkg_norm.GetF42_NN0000_01072012(:aIndexName); END;")
        q.Params("aIndexName") = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        q.ExecSQL
        GetF42_NN0000_01072012 = q.Params("r")
     Else
        GetF42_NN0000_01072012 = 0
     End If
  Else
     GetF42_NN0000_01072012 = 0
  End If
End Function
Attribute VB_Name = "OS"
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' GetQueryValue
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
' TextSQL    - |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' Parameters - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Array of Variants
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| as Variants
' |fffd||fffd||fffd||fffd||fffd||fffd| :
'
'   s = _
'   " SELECT riskkoef" & _
'   " FROM N2RiskKoef" & _
'   " WHERE baccountid = :baccountid" & _
'   "   AND NVL(r013,0) = :r013" & _
'   "   AND NVL(InvClass,0) = :InvClass"
'   GetQueryValue(s, Array(BAcc, R013, InvClass))
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
'  1 |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|;
'  2 |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'    |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| null |fffd| variant

Sub FillOsObjS240(p_Date As Date)
  If p_Date <> OsObjS240date Then
    Dim q As B2Balance.QueryX
    Set q = BalanceObj.CreateQuery("begin pkl_reposfile.init_osobj_s240(:adate); end;")
    q.Params("adate") = p_Date
    q.ExecSQL
    OsObjS240date = p_Date
  End If
End Sub

Public Function DBalParamsOsEQ( _
  BalanceDate As Date, BAccountRange As String, _
  S180Range As String, S240Range As String, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    If UseOsInA7 Then
      Dim S As String
      Dim s1 As String
      S = _
        "SELECT NVL(SUM (t.finbalsum),0) " & _
        "  FROM osobj_s240 t, aaccount a " & _
        " WHERE a.ID = t.accountid " & _
        "   AND a.baccountid IN (4400, 4430, 4431, 4500, 4530, 4300, 4310, 4321) "
      s1 = GetWhereS180S240(S180Range, S240Range)
      If s1 <> "" Then
        S = S & " AND " & s1
      End If
      If BAccountRange <> "" Then
        S = S & " AND " & BalanceObj.getSQLRange4Field("a.baccountid", BAccountRange, 0)
      End If
      If ToboId <> -1 Then
        S = S & " AND a.ToboID = " & ToboId
      End If
      FillOsObjS240 (BalanceDate)
      DBalParamsOsEQ = BalanceObj.GetQueryValue(S, Array()) / 100
    Else
      DBalParamsOsEQ = _
        CBalParamsEQ(BalanceDate, BAccountRange, S180Range, S240Range, "", -1, -1, ToboId)
    End If
  Else
    DBalParamsOsEQ = 0
  End If
End Function

Public Function CBalParamsOsEQ( _
  BalanceDate As Date, BAccountRange As String, _
  S180Range As String, S240Range As String, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    If UseOsInA7 Then
      Dim S As String
      Dim s1 As String
      S = _
        "SELECT NVL(SUM (t.finbalsum),0) " & _
        "  FROM osobj_s240 t, aaccount a " & _
        " WHERE a.ID = t.accountid " & _
        "   AND a.baccountid IN (4409, 4509, 4309) "
      
      s1 = GetWhereS180S240(S180Range, S240Range)
      If s1 <> "" Then
        S = S & " AND " & s1
      End If
      If BAccountRange <> "" Then
        S = S & " AND " & BalanceObj.getSQLRange4Field("a.baccountid", BAccountRange, 0)
      End If
      If ToboId <> -1 Then
        S = S & " AND a.ToboID = " & ToboId
      End If
      FillOsObjS240 (BalanceDate)
      CBalParamsOsEQ = BalanceObj.GetQueryValue(S, Array()) / 100
    Else
      CBalParamsOsEQ = _
        CBalParamsEQ(BalanceDate, BAccountRange, S180Range, S240Range, "", -1, -1, ToboId)
    End If
  Else
    CBalParamsOsEQ = 0
  End If
End Function

Attribute VB_Name = "Pst"
Public Function AvgDPst( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  Optional S180 As String = "", Optional ZRate As Integer = 1, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    AvgDPst = BalanceObj.GetPst(|fffd||fffd||fffd||fffd|, BAccRange, "", Curr, stSumActive, WithCorrMvmnt, ToboId, S180, ZRate)
  Else
    AvgDPst = 0
  End If
End Function

Public Function AvgCPst( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  Optional S180 As String = "", Optional ZRate As Integer = 1, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    AvgCPst = BalanceObj.GetPst(|fffd||fffd||fffd||fffd|, BAccRange, "", Curr, stSumPassive, WithCorrMvmnt, ToboId, S180, ZRate)
  Else
    AvgCPst = 0
  End If
End Function

Public Function AvgPst( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  Optional S180 As String = "", Optional ZRate As Integer = 1, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    AvgPst = BalanceObj.GetPst(|fffd||fffd||fffd||fffd|, BAccRange, "", Curr, stSum, WithCorrMvmnt, ToboId, S180, ZRate)
  Else
    AvgPst = 0
  End If
End Function

Public Function DMaskAvgPst( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, _
  Optional S180 As String = "", Optional ZRate As Integer = 1, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DMaskAvgPst = BalanceObj.GetPst(|fffd||fffd||fffd||fffd|, "", AccRange, Curr, stSumActive, WithCorrMvmnt, ToboId, S180, ZRate)
  Else
    DMaskAvgPst = 0
  End If
End Function

Public Function CMaskAvgPst( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, _
  Optional S180 As String = "", Optional ZRate As Integer = 1, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CMaskAvgPst = BalanceObj.GetPst(|fffd||fffd||fffd||fffd|, "", AccRange, Curr, stSumPassive, WithCorrMvmnt, ToboId, S180, ZRate)
  Else
    CMaskAvgPst = 0
  End If
End Function

Public Function MaskAvgPst( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, _
  Optional S180 As String = "", Optional ZRate As Integer = 1, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    MaskAvgPst = BalanceObj.GetPst(|fffd||fffd||fffd||fffd|, "", AccRange, Curr, stSum, WithCorrMvmnt, ToboId, S180, ZRate)
  Else
    MaskAvgPst = 0
  End If
End Function


Attribute VB_Name = "PstSum"
Public Function AvgDPstSum( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  Optional S180 As String = "", Optional ZRate As Integer = 1, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    AvgDPstSum = BalanceObj.GetPstSum(|fffd||fffd||fffd||fffd|, BAccRange, "", Curr, stSumActive, WithCorrMvmnt, ToboId, S180, ZRate) / 100
  Else
    AvgDPstSum = 0
  End If
End Function

Public Function AvgCPstSum( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  Optional S180 As String = "", Optional ZRate As Integer = 1, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    AvgCPstSum = BalanceObj.GetPstSum(|fffd||fffd||fffd||fffd|, BAccRange, "", Curr, stSumPassive, WithCorrMvmnt, ToboId, S180, ZRate) / 100
  Else
    AvgCPstSum = 0
  End If
End Function

Public Function AvgPstSum( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  Optional S180 As String = "", Optional ZRate As Integer = 1, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    AvgPstSum = BalanceObj.GetPstSum(|fffd||fffd||fffd||fffd|, BAccRange, "", Curr, stSum, WithCorrMvmnt, ToboId, S180, ZRate) / 100
  Else
    AvgPstSum = 0
  End If
End Function

Public Function DMaskAvgPstSum( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, _
  Optional S180 As String = "", Optional ZRate As Integer = 1, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    DMaskAvgPstSum = BalanceObj.GetPstSum(|fffd||fffd||fffd||fffd|, "", AccRange, Curr, stSumActive, WithCorrMvmnt, ToboId, S180, ZRate) / 100
  Else
    DMaskAvgPstSum = 0
  End If
End Function

Public Function CMaskAvgPstSum( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, _
  Optional S180 As String = "", Optional ZRate As Integer = 1, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    CMaskAvgPstSum = BalanceObj.GetPstSum(|fffd||fffd||fffd||fffd|, "", AccRange, Curr, stSumPassive, WithCorrMvmnt, ToboId, S180, ZRate) / 100
  Else
    CMaskAvgPstSum = 0
  End If
End Function

Public Function MaskAvgPstSum( _
  |fffd||fffd||fffd||fffd| As Date, AccRange As String, _
  Optional S180 As String = "", Optional ZRate As Integer = 1, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    MaskAvgPstSum = BalanceObj.GetPstSum(|fffd||fffd||fffd||fffd|, "", AccRange, Curr, stSum, WithCorrMvmnt, ToboId, S180, ZRate) / 100
  Else
    MaskAvgPstSum = 0
  End If
End Function
Attribute VB_Name = "Raiting"
Public Function RBalEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, Optional SiteId As Long = -1, _
  Optional RInst As String = "", Optional RValue As String = "", _
  Optional AccDATE As Date = "01.01.3500", Optional AccOpenAfterAccDate As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    Dim S As String
    S = RaitingCondition(|fffd||fffd||fffd||fffd|, RInst, RValue)
    S = S & AccDateCondition(AccDATE, AccOpenAfterAccDate)
    RBalEq = BalanceObj.GetBAccSumDB(|fffd||fffd||fffd||fffd|, BAccRange, Curr, stSum, WithCorrMvmnt, ToboId, SiteId, S) / 100
  Else
    RBalEq = 0
  End If
End Function

Public Function RBal( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, Optional SiteId As Long = -1, _
  Optional RInst As String = "", Optional RValue As String = "", _
  Optional AccDATE As Date = "01.01.3500", Optional AccOpenAfterAccDate As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    Dim S As String
    S = RaitingCondition(|fffd||fffd||fffd||fffd|, RInst, RValue)
    S = S & AccDateCondition(AccDATE, AccOpenAfterAccDate)
    RBal = BalanceObj.GetBAccSumDB(|fffd||fffd||fffd||fffd|, BAccRange, Curr, stFSum, WithCorrMvmnt, ToboId, SiteId, S) / 100
  Else
    RBal = 0
  End If
End Function

Public Function RDBalEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, Optional SiteId As Long = -1, _
  Optional RInst As String = "", Optional RValue As String = "", _
  Optional AccDATE As Date = "01.01.3500", Optional AccOpenAfterAccDate As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    Dim S As String
    S = RaitingCondition(|fffd||fffd||fffd||fffd|, RInst, RValue)
    S = S & AccDateCondition(AccDATE, AccOpenAfterAccDate)
    RDBalEq = BalanceObj.GetBAccSumDB(|fffd||fffd||fffd||fffd|, BAccRange, Curr, stSumActive, WithCorrMvmnt, ToboId, SiteId, S) / 100
  Else
    RDBalEq = 0
  End If
End Function

Public Function RCBalEq( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, Optional SiteId As Long = -1, _
  Optional RInst As String = "", Optional RValue As String = "", _
  Optional AccDATE As Date = "01.01.3500", Optional AccOpenAfterAccDate As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    Dim S As String
    S = RaitingCondition(|fffd||fffd||fffd||fffd|, RInst, RValue)
    S = S & AccDateCondition(AccDATE, AccOpenAfterAccDate)
    RCBalEq = BalanceObj.GetBAccSumDB(|fffd||fffd||fffd||fffd|, BAccRange, Curr, stSumPassive, WithCorrMvmnt, ToboId, SiteId, S) / 100
  Else
    RCBalEq = 0
  End If
End Function

Public Function RDBal( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, Optional SiteId As Long = -1, _
  Optional RInst As String = "", Optional RValue As String = "", _
  Optional AccDATE As Date = "01.01.3500", Optional AccOpenAfterAccDate As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    Dim S As String
    S = RaitingCondition(|fffd||fffd||fffd||fffd|, RInst, RValue)
    S = S & AccDateCondition(AccDATE, AccOpenAfterAccDate)
    RDBal = BalanceObj.GetBAccSumDB(|fffd||fffd||fffd||fffd|, BAccRange, Curr, stFSumActive, WithCorrMvmnt, ToboId, SiteId, S) / 100
  Else
    RDBal = 0
  End If
End Function

Public Function RCBal( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, _
  Optional Curr As String = "", Optional WithCorrMvmnt As Integer = -1, _
  Optional ToboId As Integer = -1, Optional SiteId As Long = -1, _
  Optional RInst As String = "", Optional RValue As String = "", _
  Optional AccDATE As Date = "01.01.3500", Optional AccOpenAfterAccDate As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    Dim S As String
    S = RaitingCondition(|fffd||fffd||fffd||fffd|, RInst, RValue)
    S = S & AccDateCondition(AccDATE, AccOpenAfterAccDate)
    RCBal = BalanceObj.GetBAccSumDB(|fffd||fffd||fffd||fffd|, BAccRange, Curr, stFSumPassive, WithCorrMvmnt, ToboId, SiteId, S) / 100
  Else
    RCBal = 0
  End If
End Function

Public Function RAvgActiveEQPeriod( _
  FromDate As Date, TillDate As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1, Optional RInst As String = "", Optional RValue As String = "", _
  Optional AccDATE As Date = "01.01.3500", Optional AccOpenAfterAccDate As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    Dim S As String
    S = RaitingCondition(FromDate, RInst, RValue)
    S = S & AccDateCondition(AccDATE, AccOpenAfterAccDate)
    RAvgActiveEQPeriod = PeriodSum(FromDate, TillDate, AccRange, Curr, stpAvgActiveEQ, WithCorrMvmnt, ToboId, SiteId, S)
  Else
    RAvgActiveEQPeriod = 0
  End If
End Function

Public Function RAvgPassiveEQPeriod( _
  FromDate As Date, TillDate As Date, AccRange As String, Curr As String, _
  Optional WithCorrMvmnt As Integer = -1, Optional ToboId As Integer = -1, _
  Optional SiteId As Long = -1, Optional RInst As String = "", Optional RValue As String = "", _
  Optional AccDATE As Date = "01.01.3500", Optional AccOpenAfterAccDate As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    Dim S As String
    S = RaitingCondition(FromDate, RInst, RValue)
    S = S & AccDateCondition(AccDATE, AccOpenAfterAccDate)
    RAvgPassiveEQPeriod = PeriodSum(FromDate, TillDate, AccRange, Curr, stpAvgPassiveEQ, WithCorrMvmnt, ToboId, SiteId, S)
  Else
    RAvgPassiveEQPeriod = 0
  End If
End Function

Public Function RaitingCondition(ADATE As Date, Optional RInst As String = "", Optional RValue As String = "") As String
Dim S As String
   
   If (RInst <> "") Or (RValue <> "") Then
    S = " and exists " _
      & "   (select 1 from RatingContragent_log r" _
      & "     where r.ContragentID = v.ContragentID" _
      & "       and r.siteid = v.SITEID" _
      & "       and r.ratingstartdate <= '" & ADATE & "'"
      
      If RInst <> "" Then
        S = S & " and r.ratinginstrument = '" & RInst & "'"
      End If
      If RValue <> "" Then
        S = S & " and r.ratingvalue = '" & RValue & "'"
      End If
      S = S & ")"
   Else
      S = ""
   End If
      
   RaitingCondition = S

End Function

Public Function AccDateCondition(AccDATE As Date, AccOpenAfterAccDate As Integer) As String
Dim S As String
   
   If AccDATE = "01.01.3500" Or AccOpenAfterAccDate = -1 Then
     S = ""
   Else
     If AccOpenAfterAccDate = 0 Then
       S = " and v.DateOpen <= '" & AccDATE & "'"
     Else
       S = " and v.DateOpen > '" & AccDATE & "'"
     End If
   End If
   
   AccDateCondition = S

End Function


Attribute VB_Name = "ReposFile"
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
' /|fffd||fffd||fffd|/&|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/
 Public Function GetNbuFileResult( _
   aFileTypeID As String, aNbuFileIndex As String, _
   Optional aSubHeading As String = "", _
   Optional aBankID As Long = 0, Optional aFileID As Long = 0) As String
   Dim S As String
   Dim p As Variant
   Application.Volatile (True)
   If Activated Then
     S = _
        "  SELECT nbufileresult" & vbNewLine & _
        "    FROM nbureportfilestatresult r" & vbNewLine
     If aFileID = 0 Then
       S = S & ",(  SELECT ID" & vbNewLine & _
         "            FROM (SELECT   *" & vbNewLine & _
         "                    FROM nbureportfilestat t" & vbNewLine & _
         "                   WHERE t.filetypeid = :filetypeid" & vbNewLine
       p = Array(aFileTypeID)
       If aBankID = 0 Then
         S = S & "             AND t.isconsolid != 0" & vbNewLine
       Else
         S = S & "             AND t.bankid = :bankid" & vbNewLine
         ReDim Preserve p(UBound(p) + 1)
         p(UBound(p)) = aBankID
       End If
       S = S & "             ORDER BY ID DESC)" & vbNewLine & _
          "           WHERE ROWNUM = 1) f" & vbNewLine & _
          " WHERE r.nbureportfilestatid = f.ID" & vbNewLine
     Else
       S = S & " WHERE r.nbureportfilestatid = :FileID" & vbNewLine
       p = Array(aFileID)
     End If
     S = S & "   AND r.nbufileindex = :nbufileindex"
     ReDim Preserve p(UBound(p) + 1)
     p(UBound(p)) = aNbuFileIndex
     If aSubHeading <> "" Then
       S = S & " AND r.subheading = :subheading"
       ReDim Preserve p(UBound(p) + 1)
       p(UBound(p)) = aSubHeading
     End If
     GetNbuFileResult = BalanceObj.GetQueryValue(S, p)
  Else
    GetNbuFileResult = ""
  End If
End Function

Public Function GetNbuFileResult2( _
   aFileTypeID As String, aNbuFileIndex As String, aDateEnd As Date _
) As String
   Dim S As String
   Application.Volatile (True)
   If Activated Then
     S = _
       "SELECT nbufileresult" & vbNewLine & _
       "  FROM nbureportfilestatresult r," & vbNewLine & _
       "       (SELECT ID" & vbNewLine & _
       "          FROM (SELECT   *" & vbNewLine & _
       "                    FROM nbureportfilestat t" & vbNewLine & _
       "                   WHERE t.filetypeid = :filetypeid AND t.enddate <= :enddate" & vbNewLine & _
       "                ORDER BY ID DESC)" & vbNewLine & _
       "         WHERE ROWNUM = 1) f" & vbNewLine & _
       " WHERE r.nbureportfilestatid = f.ID AND r.nbufileindex = :nbufileindex"
              
    GetNbuFileResult2 = _
      BalanceObj.GetQueryValue(S, Array(aFileTypeID, aDateEnd, aNbuFileIndex))
  Else
    GetNbuFileResult2 = ""
  End If
  If GetNbuFileResult2 = "" Then
    GetNbuFileResult2 = "0"
  End If
End Function

Public Function GetNbuFinRep( _
  |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String, _
  Optional BankID As Long = -1, Optional ToboId As Integer = -1 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    GetNbuFinRep = BalanceObj.GetNbuFinRepValue(|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, BankID, ToboId)
  Else
    GetNbuFinRep = 0
  End If
End Function



Attribute VB_Name = "Reserv"

' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| '/'
Sub ParseMFO(MFO As String, ByRef SiteId As Long, ByRef ToboId As Long)
  Dim p As Integer
  p = InStr(MFO, "/")
  If p = 0 Then
    SiteId = MFO
    ToboId = "-1"
  Else
    SiteId = CLng(Left(MFO, p - 1))
    ToboId = CLng(Right(MFO, Len(MFO) - p))
  End If
End Sub

Function GetWhereSQL(rt As String, SiteId As Long, S180 As String) As String
  Dim S As String
  Dim lSiteId As String
  
  S = "1 = 1"
  
  If rt <> "" Then
    S = ContrResidentCondition2(rt)
  End If
  
  Select Case SiteId
    Case -1
      lSiteId = "SiteId = " & gUserSettingsSiteId
    Case 0
      lSiteId = ""
    Case Else
      lSiteId = "SiteId = " & SiteId
  End Select
  
  If lSiteId <> "" Then
    S = S & " and " & lSiteId
  End If
  
  If S180 <> "" Then
    S = S & " and " & S180
  End If
    
  GetWhereSQL = S
End Function

' =================================================================================
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| reserv.xls
' =================================================================================
Function GetSimpleReservSum( _
  |fffd||fffd||fffd||fffd| As Date, BAccRange As String, Curr As String, SType As Long, _
  Optional |fffd||fffd||fffd| As String = "-1", Optional S180 As String, Optional rt As String _
) As Currency
    Dim SiteId As Long
    Dim ToboId As Long
    Dim S As String
    Call ParseMFO(|fffd||fffd||fffd|, SiteId, ToboId)
    
    S = GetWhereSQL(rt, SiteId, S180)
    
    If ToboId = -1 And rt = "" And SiteId <> -1 Then
      GetSimpleReservSum = BalanceObj.GetBranchSumDB(|fffd||fffd||fffd||fffd|, SiteId, SType, BAccRange, Curr, S180, "", -1) / 100 _
                         + Abs(BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, SType, BAccRange, Curr, S, "", "", "", -1, ToboId, -1)) / 100
    Else
      GetSimpleReservSum = Abs(BalanceObj.GetBalanceSumDB(|fffd||fffd||fffd||fffd|, SType, BAccRange, Curr, S, "", "", "", -1, ToboId, -1)) / 100
    End If
End Function

Public Function DBalReservMaskEq( _
  Virt As Integer, |fffd||fffd||fffd||fffd| As Date, BAccRange As String, Curr As String, _
  Optional |fffd||fffd||fffd| As String = "-1", Optional S181 As Integer = 0, _
  Optional rt As String _
) As Currency
  Application.Volatile (True)
  If Activated Then
    Dim S180 As String
    
    Select Case S181
      Case 1
        S180 = "S180 in ('A','B','1','2','3','4','5','6','7','8')"
      Case 2
        S180 = "S180 in ('C','D','E','F','G','H','9')"
      Case Else
        S180 = ""
    End Select
    
    If |fffd||fffd||fffd||fffd| > gSystemDay And Virt = 3 Then
      DBalReservMaskEq = 0
    Else
      If |fffd||fffd||fffd||fffd| < gSystemDay Then
        DBalReservMaskEq = GetSimpleReservSum(|fffd||fffd||fffd||fffd|, BAccRange, Curr, stSumActive, |fffd||fffd||fffd|, S180, rt)
      Else
        DBalReservMaskEq = GetSimpleReservSum(gSystemDay, BAccRange, Curr, stSumActive, |fffd||fffd||fffd|, S180, rt)
      End If
    End If
  Else
    DBalReservMaskEq = 0
  End If
End Function

Public Function CBalMaskReservEq( _
  Virt As Integer, |fffd||fffd||fffd||fffd| As Date, BAccRange As String, Curr As String, _
  Optional |fffd||fffd||fffd| As String = "-1", Optional S181 As Integer = 0, Optional rt As String _
) As Currency
  Dim l_date As Date
  Application.Volatile (True)
  If Activated Then
    Dim S180 As String
    
    Select Case S181
      Case 1
        S180 = "S180 in ('A','B','1','2','3','4','5','6','7','8')"
      Case 2
        S180 = "S180 in ('C','D','E','F','G','H','9')"
      Case Else
        S180 = ""
    End Select
    
    If |fffd||fffd||fffd||fffd| > gSystemDay And Virt = 3 Then
      CBalMaskReservEq = 0
    Else
      If |fffd||fffd||fffd||fffd| < gSystemDay Then
        CBalMaskReservEq = GetSimpleReservSum(|fffd||fffd||fffd||fffd|, BAccRange, Curr, stSumPassive, |fffd||fffd||fffd|, S180, rt)
      Else
        CBalMaskReservEq = GetSimpleReservSum(gSystemDay, BAccRange, Curr, stSumPassive, |fffd||fffd||fffd|, S180, rt)
      End If
    End If
  Else
    CBalMaskReservEq = 0
  End If
End Function

Public Function BalReservMaskEq( _
  Virt As Integer, |fffd||fffd||fffd||fffd| As Date, BAccRange As String, Curr As String, _
  Optional |fffd||fffd||fffd| As String = "-1", Optional S181 As Integer = 0 _
) As Currency
  Application.Volatile (True)
  If Activated Then
    Dim S180 As String
    
    Select Case S181
      Case 1
        S180 = "S180 in ('A','B','1','2','3','4','5','6','7','8')"
      Case 2
        S180 = "S180 in ('C','D','E','F','G','H','9')"
      Case Else
        S180 = ""
    End Select
    
    If |fffd||fffd||fffd||fffd| > gSystemDay And Virt = 3 Then
      BalReservMaskEq = 0
    Else
      If |fffd||fffd||fffd||fffd| < gSystemDay Then
        BalReservMaskEq = GetSimpleReservSum(|fffd||fffd||fffd||fffd|, BAccRange, Curr, stSum, |fffd||fffd||fffd|, S180)
      Else
        BalReservMaskEq = GetSimpleReservSum(gSystemDay, BAccRange, Curr, stSum, |fffd||fffd||fffd|, S180)
      End If
    End If
  Else
    BalReservMaskEq = 0
  End If
End Function

Public Function ContrResidentCondition(rt As String) As String
Dim S As String
   
    S = " AND EXISTS " _
      & "   (SELECT 1 " _
      & "    FROM contragent c, contragenttype ct" _
      & "    WHERE c.ID = v.contragentid" _
      & "      AND c.siteid = v.siteid" _
      & "      AND ct.cid = c.contragenttypeid" _
      & "      AND ct.residenttypeid = '" & rt & "')" _

    ContrResidentCondition = S

End Function

Public Function ContrResidentCondition2(rt As String) As String
Dim S As String

    S = "  (select c.id contragentid, a.id accountid, ct.residenttypeid " _
              & "     from aaccount a, contragent c, contragenttype ct" _
              & "     where a.siteid = c.siteid " _
              & "       and ct.cid = c.contragenttypeid) ac" _
              & " where ac.accountid = b.accountid " _
              & "   and ac.contragentid = b.contragentid " _
              & "   and ac.residenttypeid = '" & rt & "'"

  ContrResidentCondition2 = S
End Function

Attribute VB_Name = "Tax"
Public Function TaxSum(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Long) As Currency
'C|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  TaxSum = 0
  If Not Activated Then Exit Function
  TaxSum = BalanceObj.GetTaxSum(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|) / 100
End Function

Public Function TaxRoundSum(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Long) As Currency
'C|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  TaxRoundSum = 0
  If Not Activated Then Exit Function
  TaxRoundSum = BalanceObj.GetTaxRoundSum(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|) / 10
End Function

Public Function TaxSumTotal(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Long) As Currency
'C|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd|
'|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|.
  Application.Volatile (True)
  TaxSumTotal = 0
  If Not Activated Then Exit Function
  TaxSumTotal = BalanceObj.GetTaxSumTotal(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|) / 100
End Function

Public Function TaxRoundSumTotal(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Long) As Currency
'C|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd|
'|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
  Application.Volatile (True)
  TaxRoundSumTotal = 0
  If Not Activated Then Exit Function
  TaxRoundSumTotal = BalanceObj.GetTaxRoundSumTotal(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|) / 10
End Function


Public Function TaxSumEx(|fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Long) As Currency
'C|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  TaxSumEx = 0
  If Not Activated Then Exit Function
  TaxSumEx = BalanceObj.GetTaxSumEx(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|) / 100
End Function

Public Function TaxRoundSumEx(|fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Long) As Currency
'C|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  TaxRoundSumEx = 0
  If Not Activated Then Exit Function
  TaxRoundSumEx = BalanceObj.GetTaxRoundSumEx(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|) / 10
End Function

Public Function TaxSumTotalEx(|fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Long) As Currency
'C|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd|
'|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|.
  Application.Volatile (True)
  TaxSumTotalEx = 0
  If Not Activated Then Exit Function
  TaxSumTotalEx = BalanceObj.GetTaxSumTotalEx(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|) / 100
End Function

Public Function TaxRoundSumTotalEx(|fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Long) As Currency
'C|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd|
'|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
  Application.Volatile (True)
  TaxRoundSumTotalEx = 0
  If Not Activated Then Exit Function
  TaxRoundSumTotalEx = BalanceObj.GetTaxRoundSumTotalEx(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|) / 10
End Function

Public Sub SetDefTaxYear(Year As Integer)
  If Not Activated Then Exit Sub
  If BalanceObj Is Nothing Then Call InitBalance
  BalanceObj.DefaultTaxYear = Year
End Sub

Public Sub SetDefTaxQuarter(Quarter As Integer)
  If Not Activated Then Exit Sub
  If BalanceObj Is Nothing Then Call InitBalance
  BalanceObj.DefaultTaxQuarter = Quarter
End Sub
Attribute VB_Name = "Test"
Public Function CBalEqEx(|fffd||fffd||fffd||fffd| As Date, BAccRange As String) As Currency
  Application.Volatile (True)
  If Activated Then
'   DebOstEq = BalanceObj.GetSumDeb(|fffd||fffd||fffd||fffd|, BAccRange) / 100
    CBalEqEx = BalanceObj.GetBAccSumDB(|fffd||fffd||fffd||fffd|, BAccRange, "", stSumPassive, 1, -1, -1, "") / 100
  Else
    CBalEqEx = 0
  End If
End Function

Public Function DBalEqEx(|fffd||fffd||fffd||fffd| As Date, BAccRange As String) As Currency
  Application.Volatile (True)
  If Activated Then
'   DebOstEq = BalanceObj.GetSumDeb(|fffd||fffd||fffd||fffd|, BAccRange) / 100
    DBalEqEx = BalanceObj.GetBAccSumDB(|fffd||fffd||fffd||fffd|, BAccRange, "", stSumActive, 0, -1, -1, "") / 100
  Else
    DBalEqEx = 0
  End If
End Function

Public Function BalEqEx(|fffd||fffd||fffd||fffd| As Date, BAccRange As String) As Currency
  Application.Volatile (True)
  If Activated Then
    DebOstEq = BalanceObj.GetSumDeb(|fffd||fffd||fffd||fffd|, BAccRange) / 100
    BalEqEx = BalanceObj.GetBAccSumDB(|fffd||fffd||fffd||fffd|, BAccRange, "", stSum, 1, -1, -1, "") / 100
  Else
    BalEqEx = 0
  End If
End Function

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "V42"
Public Function GetV42Amount(date1 As Date, border As Currency, order As Integer) As Currency
  Application.Volatile (True)
  If Activated Then
    If IsNull(v42day) Or date1 <> v42day Then
      loadV42 date1, border
    End If
    GetV42Amount = v42amount(order)
  Else
    GetV42Amount = 0
  End If
End Function

Public Function GetV42InsAmount(date1 As Date, border As Currency, order As Integer) As Currency
  Application.Volatile (True)
  If Activated Then
    If IsNull(v42insday) Or date1 <> v42insday Then
      loadinsV42 date1, border
    End If
    GetV42InsAmount = v42Insamount(order)
  Else
    GetV42InsAmount = 0
  End If
End Function

Public Function GetV42ApprovalAmount(date1 As Date, border As Currency, order As Integer) As Currency
  Application.Volatile (True)
  If Activated Then
    If IsNull(v42day) Or date1 <> v42day Then
      loadV42 date1, border
    End If
    GetV42ApprovalAmount = v42ApprovalNBU(order)
  Else
    GetV42ApprovalAmount = 0
  End If
End Function

Public Function GetV42Id(date1 As Date, border As Currency, order As Integer) As Long
  Application.Volatile (True)
  If Activated Then
    If IsNull(v42day) Or date1 <> v42day Then
      loadV42 date1, border
    End If
    GetV42Id = v42id(order)
  Else
    GetV42Id = 0
  End If
End Function

Public Function GetV42insId(date1 As Date, border As Currency, order As Integer) As Long
  Application.Volatile (True)
  If Activated Then
    If IsNull(v42insday) Or date1 <> v42insday Then
      loadinsV42 date1, border
    End If
    GetV42insId = v42Insid(order)
  Else
    GetV42insId = 0
  End If
End Function

Public Function GetV42Name(date1 As Date, border As Currency, order As Integer) As String
  Application.Volatile (True)
  If Activated Then
    If IsNull(v42day) Or date1 <> v42day Then
      loadV42 date1, border
    End If
    GetV42Name = v42name(order)
  Else
    GetV42Name = ""
  End If
End Function

Public Function GetV42insName(date1 As Date, border As Currency, order As Integer) As String
  Application.Volatile (True)
  If Activated Then
    If IsNull(v42insday) Or date1 <> v42insday Then
      loadinsV42 date1, border
    End If
    GetV42insName = v42Insname(order)
  Else
    GetV42insName = ""
  End If
End Function

Sub loadV42(date1 As Date, border As Currency)
  On Error GoTo errorhandler
  v42day = date1
  If IsNull(BalanceDay) Or BalanceDay <> v42day Then
    InitBlns date1
  End If
  Dim q As B2Balance.QueryX
  Dim q1 As B2Balance.QueryX
  'Dim q2 As B2Balance.QueryX

  Dim i As Integer
  Set q1 = BalanceObj.CreateQuery("begin pkg_norm.initnorm(:d) ; end;")
  Dim D As Date
  D = N_Date(date1, -1)
  q1.Params("d") = D
  q1.ExecSQL

  Set q = BalanceObj.CreateQuery( _
    "SELECT F.RESULT RESULT, " & vbNewLine & _
    "   -TO_NUMBER(SUBSTR(cg.GRID, 1, LENGTH(cg.GRID) - 10)) BPID, " & vbNewLine & _
    "    TO_NUMBER(SUBSTR(cg.GRID, -6)) SITEID, " & vbNewLine & _
    "   SUBSTR(cg.SNAME, 1, 50) NAME, " & vbNewLine & _
    "   f.APPROVALEQ " & vbNewLine & _
    "  FROM (SELECT SUM(NVL(T.N7GROUPAMOUNTEQ, 0)) RESULT, " & vbNewLine & _
    "               SUM(NVL(t.line05summa, 0)) APPROVALEQ, " & vbNewLine & _
    "               t.CONTRAGENTGROUPID " & vbNewLine & _
    "          FROM ARC_FILE42_DATA T " & vbNewLine & _
    "         WHERE t.arcdate = :cacldate " & vbNewLine & _
    "           --AND t.Line01 = 1 " & vbNewLine & _
    "         GROUP BY T.CONTRAGENTGROUPID) F, " & vbNewLine & _
    "       (SELECT DISTINCT bp.sname, " & vbNewLine & _
    "             -TO_NUMBER((bp.ID || LPAD(ba.bankid, 10, '0'))) GRID " & vbNewLine & _
    "          FROM businesspartner bp, bankattribute ba " & vbNewLine & _
    "         WHERE bp.ID > 0 " & vbNewLine & _
    "         Union All " & vbNewLine & _
    "        SELECT '|fffd||fffd||fffd||fffd||fffd||fffd|(' || t.sname || ')' SNAME, TO_NUMBER(t.ID || LPAD(ba.bankid, 10, '0')) GRID " & vbNewLine & _
    "          FROM vcontragentgroup_int t, bankattribute ba " & vbNewLine & _
    "         Union All " & vbNewLine & _
    "        SELECT '|fffd||fffd||fffd||fffd||fffd||fffd|(' || t.sname || ')' SNAME, TO_NUMBER(t.sitegroupid || LPAD(t.siteid, 10, '0')) GRID " & vbNewLine & _
    "          FROM sitecontragentgroup t) cg " & vbNewLine & _
    "         WHERE f.CONTRAGENTGROUPID = cg.GRID " & vbNewLine & _
    " ORDER BY RESULT DESC")
    
    
   
  q.Params("cacldate") = D
  q.Active = True
  i = 1
  While (Not q.EOF) And i <= 24
    v42amount(i) = q.Fields("RESULT") / 100
    v42id(i) = q.Fields("BPID")
    v42name(i) = q.Fields("NAME")
    ' v42ApprovalNBU(i) = ApprovalNBUAmount(date1, q.Fields("CONTRAGENTID"))
    v42ApprovalNBU(i) = q.Fields("APPROVALEQ") / 100
    i = i + 1
    q.Next
  Wend
  While i <= 24
    v42amount(i) = 0
    v42id(i) = 0
    v42name(i) = ""
    i = i + 1
  Wend
  v42amount(25) = 0
  v42ApprovalNBU(25) = 0
 
  While (Not q.EOF)
    If q.Fields("RESULT") / 100 > border Then
      v42amount(25) = v42amount(25) + q.Fields("RESULT") / 100
      v42ApprovalNBU(25) = v42ApprovalNBU(25) + q.Fields("APPROVALEQ") / 100
    End If
    q.Next
  Wend
 Exit Sub
errorhandler:
 Msg = "|fffd||fffd||fffd||fffd||fffd||fffd| # " & Str(Err.Number) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| loadv42 |fffd| " _
            & Err.Source & Chr(13) & Err.Description
    MsgBox Msg, , "|fffd||fffd||fffd||fffd||fffd||fffd|", Err.HelpFile, Err.HelpContext
End Sub

Sub loadinsV42(date1 As Date, border As Currency)
  On Error GoTo errorhandler
  Dim q1 As B2Balance.QueryX
  v42insday = date1
  If IsNull(BalanceDay) Or BalanceDay <> v42insday Then
    InitBlns date1
  End If
  
  Set q1 = BalanceObj.CreateQuery("begin pkg_norm.initnorm(:d) ; end;")
  Dim D As Date
  D = N_Date(date1, -1)
  q1.Params("d") = D
  q1.ExecSQL
  
  Dim q As B2Balance.QueryX
  Dim i As Integer
  
  Set q = BalanceObj.CreateQuery(" SELECT F.RESULT RESULT, " & _
  "     -TO_NUMBER(SUBSTR(cg.GRID, 1, LENGTH(cg.GRID) - 10)) BPID, " & _
  "     TO_NUMBER(SUBSTR(cg.GRID, -6)) SITEID, " & _
  "     SUBSTR(cg.SNAME, 1, 50) NAME " & _
  " FROM (SELECT n7insideramounteq RESULT, t.n7insidergroupid CONTRAGENTGROUPID " & _
  "         FROM ARC_FILE42_DATA T " & _
  "        WHERE T.ARCDATE = :calcdate " & _
  "          AND n7insideramounteq IS NOT NULL) F, " & _
  "      (SELECT DISTINCT bp.sname, -TO_NUMBER((bp.ID || LPAD(ba.bankid, 10, '0'))) GRID " & _
  "         FROM businesspartner bp, bankattribute ba " & _
  "        WHERE bp.ID > 0 " & _
  "        Union All " & _
  "       SELECT '|fffd||fffd||fffd||fffd||fffd||fffd|(' || t.sname || ')' SNAME, TO_NUMBER(t.ID || LPAD(ba.bankid, 10, '0')) GRID " & _
  "         FROM vcontragentgroup_int t, bankattribute ba " & _
  "        Union All " & _
  "       SELECT '|fffd||fffd||fffd||fffd||fffd||fffd|(' || t.sname || ')' SNAME, TO_NUMBER(t.sitegroupid || LPAD(t.siteid, 10, '0')) GRID " & _
  "         FROM sitecontragentgroup t) cg " & _
  " WHERE f.CONTRAGENTGROUPID = cg.GRID " & _
  " ORDER BY RESULT DESC")
  
  q.Params("calcdate") = D
  q.Active = True
  i = 1
  While (Not q.EOF) And i <= 8
    v42Insamount(i) = q.Fields("RESULT") / 100
    v42Insid(i) = q.Fields("BPID")
    v42Insname(i) = q.Fields("NAME")
    i = i + 1
    q.Next
  
  Wend
  While i <= 8
    v42Insamount(i) = 0
    v42Insid(i) = 0
    v42Insname(i) = ""
    i = i + 1
  Wend
  v42Insamount(9) = 0
  While (Not q.EOF)
    If q.Fields("RESULT") / 100 > 0 Then ' > border Then
      v42Insamount(9) = v42Insamount(9) + q.Fields("RESULT") / 100
    End If
    q.Next
  Wend
 Exit Sub
 
errorhandler:
 Msg = "|fffd||fffd||fffd||fffd||fffd||fffd| # " & Str(Err.Number) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| loadv42 |fffd| " _
            & Err.Source & Chr(13) & Err.Description
    MsgBox Msg, , "|fffd||fffd||fffd||fffd||fffd||fffd|", Err.HelpFile, Err.HelpContext
End Sub


Attribute VB_Name = "init"
Sub InitWorkbooks()
  On Error Resume Next
  For i = 1 To Application.Workbooks.Count
      Run Application.Workbooks(i).init
  Next i
End Sub


Attribute VB_Name = "old"
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd|B As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = RangeMovementEq(|fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|B, |fffd||fffd||fffd||fffd||fffd||fffd|) / 100
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd|B As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = RangeMovement(|fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|B, |fffd||fffd||fffd||fffd||fffd||fffd|) / 100
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(FileID As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CBalMaskCCYFEq(FileID, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd| As Date, BAccRange As String, ParamValue As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CBalContrParamEq(|fffd||fffd||fffd||fffd|, BAccRange, ParamValue)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd| As Date, BAccRange As String, ParamValue As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DBalContrParamEq(|fffd||fffd||fffd||fffd|, BAccRange, ParamValue)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(FileID As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DBalMaskCCYFEq(FileID, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(BAccRange As String, CurrencyRange As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CBalVirtCCYEq(BAccRange, CurrencyRange)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(BAccRange As String, CurrencyRange As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DBalVirtCCYEq(BAccRange, CurrencyRange)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(FileID As Integer) As String
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = BankNameF(FileID)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(FileID As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Integer) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = BalMaskCCYFEq(FileID, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd|Rezerv(Virt As Integer, |fffd||fffd||fffd||fffd| As Date, BAccRange As String, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd|Rezerv = CBalMaskReservEq(Virt, |fffd||fffd||fffd||fffd|, BAccRange, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2(FileID As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2 = CBal2MaskFEq(FileID, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CBalMaskF(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Long) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = TaxRoundSumEx(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Long) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = TaxRoundSumTotal(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CMaskBranch(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd|Rezerv(Virt As Integer, |fffd||fffd||fffd||fffd| As Date, BAccRange As String, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd|Rezerv = DBalReservMaskEq(Virt, |fffd||fffd||fffd||fffd|, BAccRange, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2(FileID As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|2 = DBal2MaskFEq(FileID, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DBalMaskF(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CBalMaskFEq(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F(|fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F = CGr(|fffd||fffd||fffd||fffd|, groupno, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd|R013(|fffd||fffd||fffd||fffd| As Date, BAccRange As String, R013 As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd|R013 = CBalR013Eq(|fffd||fffd||fffd||fffd|, BAccRange, R013)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(BAccRange As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CBalVirtEq(BAccRange)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DMaskBranch(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CMaskBranchEq(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CBalMaskBranch(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F(|fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F = DGr(|fffd||fffd||fffd||fffd|, groupno, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd|R013(|fffd||fffd||fffd||fffd| As Date, BAccRange As String, R013 As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd|R013 = DBalR013Eq(|fffd||fffd||fffd||fffd|, BAccRange, R013)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(BAccRange As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DBalVirtEq(BAccRange)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DBalMaskFEq(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F = CMask(|fffd||fffd||fffd||fffd|, AccRange, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CGrEq(|fffd||fffd||fffd||fffd|, groupno, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F(|fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F = CBalGr(|fffd||fffd||fffd||fffd|, groupno, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Long) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = TaxRoundSum(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Long) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = TaxRoundSumTotal(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DMaskBranchEq(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DBalMaskBranch(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CBalMaskBranchEq(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F = DMask(|fffd||fffd||fffd||fffd|, AccRange, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DGrEq(|fffd||fffd||fffd||fffd|, groupno, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F(|fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F = DBalGr(|fffd||fffd||fffd||fffd|, groupno, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CMaskEq(|fffd||fffd||fffd||fffd|, AccRange, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd|N5(BalanceDate As Date, BAccountRange As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd|N5 = CBalDealN5(BalanceDate, BAccountRange)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|F = CBalMask(|fffd||fffd||fffd||fffd|, AccRange, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CBalGrEq(|fffd||fffd||fffd||fffd|, groupno, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Long) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = TaxSumEx(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Long) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = TaxSumTotal(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DBalMaskBranchEq(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd|N6(BalanceDate As Date, BAccountRange As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd|N6 = CBalDealN6(BalanceDate, BAccountRange)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|V(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|V = CBalAVCCYEq(|fffd||fffd||fffd||fffd|, AccRange, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DMaskEq(|fffd||fffd||fffd||fffd|, AccRange, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd|N5(BalanceDate As Date, BAccountRange As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd|N5 = DBalDealN5(BalanceDate, BAccountRange)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd|F(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd|F = DBalMask(|fffd||fffd||fffd||fffd|, AccRange, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DBalGrEq(|fffd||fffd||fffd||fffd|, groupno, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(FileID As Integer) As Date
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DateF(FileID)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CBalMaskEq(|fffd||fffd||fffd||fffd|, AccRange, Curr)
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|  |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CBalEq(|fffd||fffd||fffd||fffd|, AccRange, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd|N6(BalanceDate As Date, BAccountRange As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd|N6 = DBalDealN6(BalanceDate, BAccountRange)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd|V(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd|V = DBalAVCCYEq(|fffd||fffd||fffd||fffd|, AccRange, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DBalMaskEq(|fffd||fffd||fffd||fffd|, AccRange, Curr)
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|  |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = DBalEq(|fffd||fffd||fffd||fffd|, AccRange, Curr)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd|(FileID As Integer) As Long
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = MFOf(FileID)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd|(FileID As Integer, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = BalMaskFEq(FileID, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd| As Date, BAccRange As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CBalEq(|fffd||fffd||fffd||fffd|, BAccRange)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Long) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = TaxSum(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As Long) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd||fffd| = TaxSumTotal(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd| As Date, BAccRange As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd| = DBalEq(|fffd||fffd||fffd||fffd|, BAccRange)
End Function
Public Function |fffd|_|fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd| As Date, D_Min As Integer) As Date
  |fffd|_|fffd||fffd||fffd||fffd| = N_Date(|fffd||fffd||fffd||fffd|, D_Min)
End Function
Public Function |fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd| As Long, |fffd||fffd||fffd||fffd| As Date, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| As String, |fffd||fffd||fffd||fffd||fffd||fffd| As String) As Currency
  |fffd||fffd||fffd||fffd||fffd||fffd| = BalMaskBranchEq(|fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|)
End Function
Public Function |fffd||fffd||fffd|N5(|fffd||fffd||fffd||fffd| As Date, BAccRange As String) As Currency
  |fffd||fffd||fffd|N5 = BalDealN5(|fffd||fffd||fffd||fffd|, BAccRange)
End Function
Public Function |fffd||fffd||fffd|N6(|fffd||fffd||fffd||fffd| As Date, BAccRange As String) As Currency
  |fffd||fffd||fffd|N6 = BalDealN6(|fffd||fffd||fffd||fffd|, BAccRange)
End Function
Public Function |fffd||fffd||fffd|(|fffd||fffd||fffd||fffd| As Date, BAccRange As String) As Currency
  |fffd||fffd||fffd| = BalEq(|fffd||fffd||fffd||fffd|, BAccRange)
End Function

' =====================================================================================
' ======================= c |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ==========================
' =============== |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| arc_balance ==============
' =====================================================================================

Public Function DBalToboEq2(|fffd||fffd||fffd||fffd| As Date, BAccRange As String, ToboId As Integer) As Currency
  DBalToboEq2 = DBalEq(|fffd||fffd||fffd||fffd|, BAccRange, "", -1, ToboId)
End Function
Public Function CBalToboEq2(|fffd||fffd||fffd||fffd| As Date, BAccRange As String, ToboId As Integer) As Currency
  CBalToboEq2 = CBalEq(|fffd||fffd||fffd||fffd|, BAccRange, "", -1, ToboId)
End Function
Public Function BalToboEq2(|fffd||fffd||fffd||fffd| As Date, BAccRange As String, ToboId As Integer) As Currency
  BalToboEq2 = BalEq(|fffd||fffd||fffd||fffd|, BAccRange, "", -1, ToboId)
End Function
Public Function DBalMaskToboEq2(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, ToboId As Integer) As Currency
  DBalMaskToboEq2 = DBalMaskEq(|fffd||fffd||fffd||fffd|, AccRange, Curr, -1, ToboId)
End Function
Public Function CBalMaskToboEq2(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, ToboId As Integer) As Currency
  CBalMaskToboEq2 = CBalMaskEq(|fffd||fffd||fffd||fffd|, AccRange, Curr, -1, ToboId)
End Function
Public Function DBalMaskTobo2(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, ToboId As Integer) As Currency
  DBalMaskTobo2 = DBalMask(|fffd||fffd||fffd||fffd|, AccRange, Curr, -1, ToboId)
End Function
Public Function CBalMaskTobo2(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, ToboId As Integer) As Currency
  CBalMaskTobo2 = CBalMask(|fffd||fffd||fffd||fffd|, AccRange, Curr, -1, ToboId)
End Function

' ================================================================================
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| BAccRestsDB
' ================================================================================

Public Function DBalEq2(|fffd||fffd||fffd||fffd| As Date, BAccRange As String) As Currency
  DBalEq2 = DBalEq(|fffd||fffd||fffd||fffd|, BAccRange)
End Function
Public Function CBalEq2(|fffd||fffd||fffd||fffd| As Date, BAccRange As String) As Currency
  CBalEq2 = CBalEq(|fffd||fffd||fffd||fffd|, BAccRange)
End Function
Public Function BalEq2(|fffd||fffd||fffd||fffd| As Date, BAccRange As String) As Currency
  BalEq2 = BalEq(|fffd||fffd||fffd||fffd|, BAccRange)
End Function
Public Function DBalVirtCCYEq2(BAccRange As String, CurrencyRange As String) As Currency
  DBalVirtCCYEq2 = DBalVirtEq(BAccRange, CurrencyRange)
End Function
Public Function CBalVirtCCYEq2(BAccRange As String, CurrencyRange As String) As Currency
  CBalVirtCCYEq2 = CBalVirtEq(BAccRange, CurrencyRange)
End Function
Public Function DBalVirtEq2(BAccRange As String) As Currency
  DBalVirtEq2 = DBalVirtEq(BAccRange)
End Function
Public Function CBalVirtEq2(BAccRange As String) As Currency
  CBalVirtEq2 = CBalVirtEq(BAccRange)
End Function

'===============================================================
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'===============================================================

Public Function DMaskEq2(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String) As Currency
  DMaskEq2 = DMaskEq(|fffd||fffd||fffd||fffd|, AccRange, Curr)
End Function
Public Function CMaskEq2(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String) As Currency
  CMaskEq2 = CMaskEq(|fffd||fffd||fffd||fffd|, AccRange, Curr)
End Function
Public Function CBalMaskEq2(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, _
  Optional Operator As String = "" _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  Application.Volatile (True)
  If Activated Then
    CBalMaskEq2 = BalanceObj.GetAccSumDB(|fffd||fffd||fffd||fffd|, AccRange, Curr, stSumPassive, -1, -1, -1, Operator, -1, "", "", "") / 100
  Else
    CBalMaskEq2 = 0
  End If
End Function
Public Function DBalMaskEq2(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, _
  Optional Operator As String = "" _
) As Currency
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  If Activated Then
    DBalMaskEq2 = BalanceObj.GetAccSumDB(|fffd||fffd||fffd||fffd|, AccRange, Curr, stSumActive, -1, -1, -1, Operator, -1, "", "", "") / 100
  Else
    DBalMaskEq2 = 0
  End If
End Function
Public Function DMask2(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String) As Currency
  DMask2 = DMask(|fffd||fffd||fffd||fffd|, AccRange, Curr)
End Function
Public Function CMask2(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String) As Currency
  CMask2 = CMask(|fffd||fffd||fffd||fffd|, AccRange, Curr)
End Function
Public Function CBalMask2(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String) As Currency
  CBalMask2 = CBalMask(|fffd||fffd||fffd||fffd|, AccRange, Curr)
End Function
Public Function DBalMask2(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String) As Currency
  DBalMask2 = DBalMask(|fffd||fffd||fffd||fffd|, AccRange, Curr)
End Function

' =====================================================================================
' ======================= c |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ==========================
' =====================================================================================
Public Function DBalEq2Tobo(|fffd||fffd||fffd||fffd| As Date, BAccRange As String, ToboId As Integer) As Currency
  DBalEq2Tobo = DBalEq(|fffd||fffd||fffd||fffd|, BAccRange, "", -1, ToboId)
End Function
Public Function CBalEq2Tobo(|fffd||fffd||fffd||fffd| As Date, BAccRange As String, ToboId As Integer) As Currency
  CBalEq2Tobo = CBalEq(|fffd||fffd||fffd||fffd|, BAccRange, "", -1, ToboId)
End Function
Public Function BalEq2Tobo(|fffd||fffd||fffd||fffd| As Date, BAccRange As String, ToboId As Integer) As Currency
  BalEq2Tobo = BalEq(|fffd||fffd||fffd||fffd|, BAccRange, "", -1, ToboId)
End Function

'======================================================================
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|)
'======================================================================

Public Function CBalGrEq2(|fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String) As Currency
  CBalGrEq2 = CBalGrEq(|fffd||fffd||fffd||fffd|, groupno, Curr)
End Function
Public Function DBalGrEq2(|fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String) As Currency
  DBalGrEq2 = DBalGrEq(|fffd||fffd||fffd||fffd|, groupno, Curr)
End Function
Public Function DGrEq2(|fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String) As Currency
  DGrEq2 = DGrEq(|fffd||fffd||fffd||fffd|, groupno, Curr)
End Function
Public Function CGrEq2(|fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String) As Currency
  CGrEq2 = CGrEq(|fffd||fffd||fffd||fffd|, groupno, Curr)
End Function
Public Function CBalGr2(|fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String) As Currency
  CBalGr2 = CBalGr(|fffd||fffd||fffd||fffd|, groupno, Curr)
End Function
Public Function DBalGr2(|fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String) As Currency
  DBalGr2 = DBalGr(|fffd||fffd||fffd||fffd|, groupno, Curr)
End Function
Public Function DGr2(|fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String) As Currency
  DGr2 = DGr(|fffd||fffd||fffd||fffd|, groupno, Curr)
End Function
Public Function CGr2(|fffd||fffd||fffd||fffd| As Date, groupno As Long, Curr As String) As Currency
  CGr2 = CGr(|fffd||fffd||fffd||fffd|, groupno, Curr)
End Function
Public Function DBalVirtCCYEq(BAccRange As String, CurrencyRange As String) As Currency
  DBalVirtCCYEq = DBalVirtEq(BAccRange, CurrencyRange)
End Function
Public Function CBalVirtCCYEq(BAccRange As String, CurrencyRange As String) As Currency
  CBalVirtCCYEq = CBalVirtEq(BAccRange, CurrencyRange)
End Function
Public Function DBalAllCCYEq(BalanceDate As Date, BAccRange As String, CurrencyRange As String) As Currency
  DBalAllCCYEq = DBalAllEq(BalanceDate, BAccRange, CurrencyRange)
End Function
Public Function CBalAllCCYEq(BalanceDate As Date, BAccRange As String, CurrencyRange As String) As Currency
  CBalAllCCYEq = CBalAllEq(BalanceDate, BAccRange, CurrencyRange)
End Function
Public Function BalAllCCYEq(BalanceDate As Date, BAccRange As String, CurrencyRange As String) As Currency
  BalAllCCYEq = BalAllEq(BalanceDate, BAccRange, CurrencyRange)
End Function
Public Function DBalDealN5AllCCY(BalanceDate As Date, BAccRange As String, CurrencyRange As String) As Currency
  DBalDealN5AllCCY = DBalDealN5All(BalanceDate, BAccRange, CurrencyRange)
End Function
Public Function CBalDealN5AllCCY(BalanceDate As Date, BAccRange As String, CurrencyRange As String) As Currency
  CBalDealN5AllCCY = CBalDealN5All(BalanceDate, BAccRange, CurrencyRange)
End Function
Public Function BalDealN5AllCCY(BalanceDate As Date, BAccRange As String, CurrencyRange As String) As Currency
  BalDealN5AllCCY = BalDealN5All(BalanceDate, BAccRange, CurrencyRange)
End Function
Public Function DBalDealN6AllCCY(BalanceDate As Date, BAccRange As String, CurrencyRange As String) As Currency
  DBalDealN6AllCCY = DBalDealN6All(BalanceDate, BAccRange, CurrencyRange)
End Function
Public Function CBalDealN6AllCCY(BalanceDate As Date, BAccRange As String, CurrencyRange As String) As Currency
  CBalDealN6AllCCY = CBalDealN6All(BalanceDate, BAccRange, CurrencyRange)
End Function
Public Function BalDealN6AllCCY(BalanceDate As Date, BAccRange As String, CurrencyRange As String) As Currency
  BalDealN6AllCCY = BalDealN6All(BalanceDate, BAccRange, CurrencyRange)
End Function
Public Function DBalR013AllCCYEq(BalanceDate As Date, BAccRange As String, CurrencyRange As String, R013 As String) As Currency
  DBalR013AllCCYEq = DBalR013AllEq(BalanceDate, BAccRange, R013, CurrencyRange)
End Function
Public Function CBalR013AllCCYEq(BalanceDate As Date, BAccRange As String, CurrencyRange As String, R013 As String) As Currency
  CBalR013AllCCYEq = CBalR013AllEq(BalanceDate, BAccRange, R013, CurrencyRange)
End Function
Public Function DBalToboEq(|fffd||fffd||fffd||fffd| As Date, BAccRange As String, ToboId As Integer) As Currency
  DBalToboEq = DBalEq(|fffd||fffd||fffd||fffd|, BAccRange, "", -1, ToboId)
End Function
Public Function CBalToboEq(|fffd||fffd||fffd||fffd| As Date, BAccRange As String, ToboId As Integer) As Currency
  CBalToboEq = CBalEq(|fffd||fffd||fffd||fffd|, BAccRange, "", -1, ToboId)
End Function
Public Function BalToboEq(|fffd||fffd||fffd||fffd| As Date, BAccRange As String, ToboId As Integer) As Currency
  BalToboEq = BalEq(|fffd||fffd||fffd||fffd|, BAccRange, "", -1, ToboId)
End Function
Public Function DBalMaskToboEq(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, ToboId As Integer) As Currency
  DBalMaskToboEq = DBalMaskEq(|fffd||fffd||fffd||fffd|, AccRange, Curr, -1, ToboId)
End Function
Public Function CBalMaskToboEq(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, ToboId As Integer) As Currency
  CBalMaskToboEq = CBalMaskEq(|fffd||fffd||fffd||fffd|, AccRange, Curr, -1, ToboId)
End Function
Public Function DBalMaskTobo(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, ToboId As Integer) As Currency
  DBalMaskTobo = DBalMask(|fffd||fffd||fffd||fffd|, AccRange, Curr, -1, ToboId)
End Function
Public Function CBalMaskTobo(|fffd||fffd||fffd||fffd| As Date, AccRange As String, Curr As String, ToboId As Integer) As Currency
  CBalMaskTobo = CBalMask(|fffd||fffd||fffd||fffd|, AccRange, Curr, -1, ToboId)
End Function


Attribute VB_Name = "|fffd||fffd||fffd||fffd|1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


' InQuest injected base64 decoded content
' *'v+b
' *'v+b

INQUEST-PP=macro
