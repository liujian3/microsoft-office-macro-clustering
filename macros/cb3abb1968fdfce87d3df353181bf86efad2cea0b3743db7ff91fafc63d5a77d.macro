Attribute VB_Name = "AEAbout"
Attribute VB_Base = "0{8807FFBD-5CC6-4D7D-95C3-5BA90A36E976}{6310C357-AEAE-43A7-A181-66D4C53D4B5D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub UserForm_Activate()
    TextBox1 = Application.CALMaster.Version.Major & "." & Application.CALMaster.Version.Minor
    TextBox3 = csAegonVBAVersion
    TextBox4 = csHelpFile
End Sub
Attribute VB_Name = "AEGONSubs"
Option Explicit     '[W7]   Option was missing in this module

'Used in GetTemporaryFilename
Public Declare Function GetTempFilename Lib "kernel32" Alias "GetTempFileNameA" (ByVal lpszPath As String, ByVal lpPrefixString As String, ByVal wUnique As Long, ByVal lpTempFileName As String) As Long
Public Declare Function GetTempPath Lib "kernel32" Alias "GetTempPathA" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)
Declare Function SetForegroundWindow Lib "user32" (ByVal hWnd As Long) As Long
Declare Function OpenIcon Lib "user32" (ByVal hWnd As Long) As Long
Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" (ByVal lpClassAnme As String, ByVal lpWindowName As String) As Long
Declare Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" (ByVal hWnd As Long, ByVal lpOperation As String, ByVal lpFile As String, ByVal lpParameters As String, ByVal lpDirectory As String, ByVal nShowCmd As Long) As Long
Declare Function SetFocus Lib "user32" (ByVal hWnd As Long) As Long
Private Declare Function apiNetGetDCName Lib "netapi32.dll" Alias "NetGetDCName" (ByVal ServerName As Long, ByVal DomainName As Long, bufptr As Long) As Long
Private Declare Function apiNetAPIBufferFree Lib "netapi32.dll" Alias "NetApiBufferFree" (ByVal buffer As Long) As Long
Private Declare Function apilstrlenW Lib "kernel32" Alias "lstrlenW" (ByVal lpString As Long) As Long
Private Declare Function apiNetUserGetInfo Lib "netapi32.dll" Alias "NetUserGetInfo" (ServerName As Any, username As Any, ByVal Level As Long, bufptr As Long) As Long
Private Declare Sub sapiCopyMem Lib "kernel32" Alias "RtlMoveMemory" (Destination As Any, Source As Any, ByVal Length As Long)
Public Declare Function apiGetUserName Lib "advapi32.dll" Alias "GetUserNameA" (ByVal lpBuffer As String, nSize As Long) As Long
Public Declare Sub keybd_event Lib "user32" (ByVal bVk As Byte, ByVal bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)

Public Const NERR_SUCCESS As Long = 0&      '[W7]  Definition was missing

'[PAC] - TD162544  Subroutine added to add all CASE360 Document Types
Public Sub FillCase360DocTypes(vCase360Flow As String, vComboBox As ComboBox)
    Select Case vCase360Flow
        Case "ECH"
             vComboBox.AddItem "Echtscheidingsconvenant"
             vComboBox.AddItem "Formulier WVPS"
             vComboBox.AddItem "Kopie huwelijkse voorwaarden"
             vComboBox.AddItem "Kopie identificatiebewijs dln"
             vComboBox.AddItem "Kopie identificatiebewijs ex"
             vComboBox.AddItem "Kopie ontbindingsakte"
             vComboBox.AddItem "Kopie samenlevingsovereenkomst"
             vComboBox.AddItem "Melding scheiding"
             vComboBox.AddItem "Notariele of beeindigingsakte"
             vComboBox.AddItem "Overeenkomst afstand BNP"
             vComboBox.AddItem "Verklaring einde samenleving"
             vComboBox.AddItem "Verzoek verzekerde BoonvanLoon"
             vComboBox.AddItem "Overig"
        Case "Faillissementen"                          '[PAC] - 15AUG14
             vComboBox.AddItem "Reactie Curator"        '[PAC] - 15AUG14
             vComboBox.AddItem "Reactie UWV"            '[PAC] - 15AUG14
             vComboBox.AddItem "Overig"                 '[PAC] - 15AUG14
        Case "Kap Exp"
             vComboBox.AddItem "Afkoopformulier kapitaal"
             vComboBox.AddItem "Akkoordverklaring Adviseur"
             vComboBox.AddItem "Akte van afstand"
             vComboBox.AddItem "Attestatie de vita"
             vComboBox.AddItem "DIP Aanvraagformulier"
             vComboBox.AddItem "Kennisgevingbrief"
             vComboBox.AddItem "Kopie legitimatiebewijs"
             vComboBox.AddItem "Kopie uittreksel KvK"
             vComboBox.AddItem "PSK-formulier (voorheen OSK)"
             vComboBox.AddItem "Reactie Offerte"
             vComboBox.AddItem "Rekening afschrift"
             vComboBox.AddItem "Verklaring DGA"
             vComboBox.AddItem "Verklaring naar Andere Verz.mij"
             vComboBox.AddItem "Verklaring naar Pensioen BV"
             vComboBox.AddItem "Verklaring uitstel pensioen"
             vComboBox.AddItem "Overig"
        Case "Kunduz"                                   '[PAC] - 15AUG14
             vComboBox.AddItem "Getekend addendum Kunduz"
             vComboBox.AddItem "Overig"
'[PAC] - 15AUG14 Added Onwilligen
        Case "Onwilligen"
             vComboBox.AddItem "Attestatie de vita"
             vComboBox.AddItem "Afkoopformulier Pensioen"
             vComboBox.AddItem "Afkoopformulier kapitaal"
             vComboBox.AddItem "Akte van afstand"
             vComboBox.AddItem "AO Verklaring"
             vComboBox.AddItem "Bewijs van Overlijden"
             vComboBox.AddItem "Brief Nabestaandedesk"
             vComboBox.AddItem "Kennisgevingbrief"
             vComboBox.AddItem "Keuzeformulier"
             vComboBox.AddItem "Offerteverzoek flexibel pensioen"
             vComboBox.AddItem "Overlijdensbericht"
             vComboBox.AddItem "Studieverklaring"
             vComboBox.AddItem "Uitkeringsformulier"
             vComboBox.AddItem "Verklaring uitstel pensioen"
             vComboBox.AddItem "DIP Aanvraagformulier"
             vComboBox.AddItem "Verklaring naar Andere Verz.mij"
             vComboBox.AddItem "Verklaring naar Pensioen BV"
             vComboBox.AddItem "PSKformulier"
             vComboBox.AddItem "Rekening afschrift"
             vComboBox.AddItem "Melding scheiding"
             vComboBox.AddItem "Verklaring DGA"
             vComboBox.AddItem "Kopie legitimatiebewijs"
             vComboBox.AddItem "Kopie uittreksel KvK"
             vComboBox.AddItem "Akkoordverklaring Adviseur"
             vComboBox.AddItem "Reactie offerte"
             vComboBox.AddItem "Formulier WVPS"
             vComboBox.AddItem "Echtscheidingsconvenant"
             vComboBox.AddItem "Overeenkomst afstand BNP"
             vComboBox.AddItem "Kopie samenlevingsovereenkomst"
             vComboBox.AddItem "Kopie identificatiebewijs ex"
             vComboBox.AddItem "Kopie identificatiebewijs dln"
             vComboBox.AddItem "Kopie ontbindingsakte"
             vComboBox.AddItem "Verklaring einde samenleving"
             vComboBox.AddItem "Notariele of beeindigingakte"
             vComboBox.AddItem "Verzoek verzekerde BoonvanLoon"
             vComboBox.AddItem "Kopie huwelijkse voorwaarden"
             vComboBox.AddItem "Werkgeversverklaring"
             vComboBox.AddItem "Kopie identiteitsbewijs partner"
             vComboBox.AddItem "Aankondigingsbrief Kunduz"
             vComboBox.AddItem "Addendum Kunduz"
             vComboBox.AddItem "Reactie op addendum Kunduz"
             vComboBox.AddItem "Reactie UWV"
             vComboBox.AddItem "Reactie Curator"
             vComboBox.AddItem "Overig"
'[PAC] - 15AUG14 END Added Onwilligen
        Case "OVL"
             vComboBox.AddItem "Bewijs van Overlijden"
             vComboBox.AddItem "Brief Nabestaandedesk"
             vComboBox.AddItem "Overlijdensbericht"
             vComboBox.AddItem "Studieverklaring"
             vComboBox.AddItem "Overig"
        Case "PIN"
             vComboBox.AddItem "Afkoopformulier pensioen"
             vComboBox.AddItem "Akte van afstand"
             vComboBox.AddItem "Attestatie de vita"
             vComboBox.AddItem "Keuzeformulier"
             vComboBox.AddItem "Offerteverzoek flexibel pensioen"
             vComboBox.AddItem "Reactie offerte"
             vComboBox.AddItem "Uitkeringsformulier"
             vComboBox.AddItem "Verklaring uitstel pensioen"
             vComboBox.AddItem "Overig"
        Case "WaardeOverdracht Inkomend"                '[PAC] - TD17266
             vComboBox.AddItem "Overig"                 '[PAC] - TD17266
    End Select
End Sub
'[PAC] - TD162544  End Subroutine added to add all CASE360 Document Types

Function fGetFullNameOfLoggedUser(Optional strUserName As String) As String
' Returns the full name for a given UserID NT/2000 only
' Omitting the strUserName argument will try and
' retrieve the full name for the currently logged on user
Dim pBuf                As Long
Dim dwRec               As Long
Dim pTmp                As USER_INFO_2
Dim abytPDCName()       As Byte
Dim abytUserName()      As Byte
Dim lngRet              As Long
Dim i                   As Long

    On Error GoTo ErrHandler
'   Unicode
    abytPDCName = fGetDCName() & vbNullChar
    If (Len(strUserName) = 0) Then strUserName = fGetUserName()
    abytUserName = strUserName & vbNullChar
    ' Level 2
    lngRet = apiNetUserGetInfo(abytPDCName(0), abytUserName(0), 2, pBuf)
    If (lngRet = ERROR_SUCCESS) Then
        Call sapiCopyMem(pTmp, ByVal pBuf, Len(pTmp))
        fGetFullNameOfLoggedUser = fStrFromPtrW(pTmp.usri2_full_name)
    End If
    Call apiNetAPIBufferFree(pBuf)

ExitHere:
    Exit Function

ErrHandler:
    fGetFullNameOfLoggedUser = vbNullString
    Resume ExitHere
End Function

Function GetXMLDescription(strWerkstap As String) As String
    On Error GoTo ErrHandler
'   Mabr getfield geeft een standaard foutmelding als er geen waarde gevonden wordt
'   Er wordt een xml bij de init opgehaald dus performance technisch mag ik elke
'   bevraging wel hier zetten = toch lokaal
    GetXMLDescription = WFMData.Common.getField("WFWerkstap", "Omschrijving", "Werkstap", strWerkstap)

ExitHere:
    Exit Function

ErrHandler:
    GetXMLDescription = "Geen omschrijving aanwezig"
    Resume ExitHere
End Function

Private Function fGetUserName() As String
' Returns the network login name
Dim lngLen              As Long, lngRet As Long
Dim strUserName         As String

    strUserName = String$(254, 0)
    lngLen = 255
    lngRet = apiGetUserName(strUserName, lngLen)
    If lngRet Then
        fGetUserName = Left$(strUserName, lngLen - 1)
    End If
End Function

Public Function fGetDCName() As String
Dim pTmp                As Long
Dim lngRet              As Long
Dim abytBuf()           As Byte

    lngRet = apiNetGetDCName(0, 0, pTmp)
    If lngRet = NERR_SUCCESS Then
        fGetDCName = fStrFromPtrW(pTmp)
    End If
    Call apiNetAPIBufferFree(pTmp)
End Function
 
Public Function fStrFromPtrW(pBuf As Long) As String
Dim lngLen              As Long
Dim abytBuf()           As Byte

'   Get the length of the string at the memory location
    lngLen = apilstrlenW(pBuf) * 2
'   If it's not a ZLS
    If lngLen Then
        ReDim abytBuf(lngLen)
'       Then copy the memory contents into a temp buffer
        Call sapiCopyMem(abytBuf(0), ByVal pBuf, lngLen)
'       Return the buffer
        fStrFromPtrW = abytBuf
    End If
End Function

Public Sub initUservars()
Dim sNTUsername         As String

    g_NTUsername = Eastman.getWFVarString("WFUAdsName", Eastman.Client.username)
    If g_NTUsername = "" Then
        sNTUsername = fGetFullNameOfLoggedUser(Eastman.Client.username)
        sNTUsername = Left(sNTUsername, 20) 'Make sure it not to long
        If sNTUsername = "" Then sNTUsername = Eastman.Client.username
        Eastman.setWFVarString "WFUAdsName", sNTUsername, Eastman.Client.username
        g_NTUsername = sNTUsername
    End If
    If g_NTUsername = "" Then g_NTUsername = Eastman.Client.username
End Sub

Public Function getTemporaryFilename() As String
Dim lngReturnVal        As Long
Dim strTempPath         As String * 255
Dim strTempFileName     As String * 255

    On Error GoTo TempNameErr
    lngReturnVal = GetTempFilename(pvTempDir, "~WF", 0, strTempFileName)
    getTemporaryFilename = Mid(strTempFileName, 1, InStr(strTempFileName, ".tmp") + 3)
    Exit Function

TempNameErr:
'   Enter any error handling here.
    MsgBox "Cannot retrieve temporary filename - " & Err.Description
End Function

' This routine uses the "heap sort" algorithm to sort a VB collection.
' It returns the sorted collection.
' Author: Christian d'Heureuse (www.source-code.biz)
Public Function SortCollection(ByVal c As Collection) As Collection
Dim n                   As Long: n = c.Count

    If n = 0 Then Set SortCollection = New Collection: Exit Function
    ReDim Index(0 To n - 1) As Long                    ' allocate index array

    Dim i As Long, m As Long
    For i = 0 To n - 1: Index(i) = i + 1: Next         ' fill index array
    For i = n \ 2 - 1 To 0 Step -1                     ' generate ordered heap
        Heapify c, Index, i, n
    Next
    For m = n To 2 Step -1                             ' sort the index array
        Exchange Index, 0, m - 1                        ' move highest element to top
        Heapify c, Index, 0, m - 1
    Next

   Dim c2 As New Collection
   For i = 0 To n - 1: c2.Add c.item(Index(i)): Next  ' fill output collection
   Set SortCollection = c2
End Function

Private Sub Heapify(ByVal c As Collection, Index() As Long, ByVal i1 As Long, ByVal n As Long)
' Heap order rule: a[i] >= a[2*i+1] and a[i] >= a[2*i+2]
Dim nDiv2               As Long: nDiv2 = n \ 2
Dim i                   As Long: i = i1

   Do While i < nDiv2
      Dim k As Long: k = 2 * i + 1
      If k + 1 < n Then
         If c.item(Index(k)) < c.item(Index(k + 1)) Then k = k + 1
         End If
      If c.item(Index(i)) >= c.item(Index(k)) Then Exit Do
      Exchange Index, i, k
      i = k
      Loop
End Sub

Private Sub Exchange(Index() As Long, ByVal i As Long, ByVal j As Long)
Dim temp                As Long: temp = Index(i)

   Index(i) = Index(j)
   Index(j) = temp
End Sub

Public Sub FixFocus()
'   Workaround the field focus VBA Problem
'[W7]    g_FixFocusFlag = True                              'Variable not defined
    DoEvents
'[W7]    SendKeys "{TAB}"
    DoEvents
'[W7]    SendKeys "+{TAB}"
    DoEvents
'[W7]    g_FixFocusFlag = False                             'Variable not defined
End Sub

Public Sub DesktopMinimize(Optional WIViewer As WorkitemViewer)
    If Not Application.Desktop.WindowState = wdoWindowStateMinimized Then
        DesktopWindowState = Application.Desktop.WindowState                'Store current state
        Application.Desktop.WindowState = wdoWindowStateMinimized
    End If
'[W7]    bDontRestoreWDWindowOnViewerClose = False          'Variable not defined
End Sub

Public Sub initEiStream()
    Set Eastman.Client = Application.CALClient
    Set Eastman.Master = Application.CALMaster
    Set Eastman.ClientList = Eastman.Client.ClientList
End Sub

Public Sub fillDDTwoListFromColl(DDownField As Control, colList As Collection)
Dim i                   As Integer
Dim item

    If Not DDownField.ColumnCount = 2 Then Err.Raise 12345, "fillDDTwoListFromColl", DDownField.name & " te weinig kollomen!"
    item = DDownField.Text
    DDownField.Clear
    DDownField.Text = item
    If colList.Count > 0 Then
        For i = 1 To colList.Count 'Copy list
            item = Split(colList.item(i), "~")
            DDownField.AddItem item(0)
            If UBound(item) > 0 Then DDownField.list(i - 1, 1) = item(1)
        Next i
        If colList.item(1) <> "" And colList.Count > 1 Then DDownField.AddItem ""   'Empty chooice at the bottom
    Else
        DDownField.AddItem "" 'At least a empty chooice
    End If
End Sub

Public Sub fillDDListFromColl(DDownField As Control, colList As Collection)
' Het lijkt erop dat deze subroutine niet langer gebruikt wordt.....
Dim i                   As Integer
Dim item
Dim CurrDDownValue
Dim CurrDDownItemLeft   As Boolean

    CurrDDownValue = DDownField
    If DDownField.ListCount > 0 Then 'Clear
        For i = DDownField.ListCount - 1 To 0 Step -1
            If CurrDDownValue <> DDownField.list(i) Then
                DDownField.RemoveItem i
             Else
                CurrDDownItemLeft = True
            End If
        Next i
    End If
    If colList.Count > 0 Then
        For Each item In colList 'Copy list
            If CurrDDownValue <> item Or Not CurrDDownItemLeft Then
                DDownField.AddItem item '
            End If
        Next
        If colList.item(1) <> "" _
         And colList.Count > 1 Then DDownField.AddItem ""   'Empty chooice at the bottom
     Else
        DDownField.AddItem "" 'At least a empty chooice
    End If
End Sub

Public Sub setDDListValue(ddList As Control, NewValue, Optional ShowError As Boolean = False)
Dim i                   As Integer

'   On Error Resume Next
    If ddList.ListCount > 0 Then
        For i = LBound(ddList.list) To UBound(ddList.list)
            If ddList.list(i) = NewValue Then ddList.ListIndex = i: Exit Sub
        Next i
    End If
    ddList.AddItem NewValue
    ddList = NewValue
    If ShowError Then
        If NewValue <> "" Then ddList.BackColor = vbYellow
    End If
End Sub

Public Function validateDDList(ddList As Control) As Boolean
Dim i

    ddList.BackColor = vbWhite
    For i = LBound(ddList.list) To UBound(ddList.list)
        If ddList.list(i) = ddList Then validateDDList = True: Exit Function
    Next i
    Beep
    ddList.BackColor = vbYellow
End Function

Public Sub fillDDList(CheckCurrValue As Boolean, DDownField As Control, colDDList As Collection)
Dim item
Dim CurrDDownValue
Dim CurrDDownValid      As Boolean
Dim CurrMatchRequired   As Boolean
Dim arrEmpty()          As String

    CurrMatchRequired = DDownField.MatchRequired
    CurrDDownValue = DDownField
    DDownField.MatchRequired = False
    ReDim arrEmpty(0)
    DDownField.list = arrEmpty
    If Not CheckCurrValue Then CurrDDownValid = True
    If CurrDDownValue = "" Then CurrDDownValid = True
    If colDDList.Count > 0 Then
        For Each item In colDDList                              'Copy list
            If CurrDDownValue = item Then CurrDDownValid = True
            DDownField.AddItem item
        Next
        If colDDList.item(1) <> "" And colDDList.Count > 1 Then DDownField.AddItem ""       'Empty chooice at the bottom
     Else
        DDownField.AddItem ""                                   'At least an empty chooice
    End If
    DDownField.AddItem ""
    If CurrDDownValid Then
        DDownField.BackColor = vbWhite
     Else
        DDownField.BackColor = vbYellow
    End If
    DDownField.MatchRequired = CurrMatchRequired
End Sub

Public Function sortList(ByVal list As Collection) As Collection
Dim i                   As Long
Dim myLow, myHigh
Dim mySwapFlag          As Boolean

    myLow = 1
    myHigh = list.Count
    mySwapFlag = True                               'Repeat bubble as long as swaps are needed
    While mySwapFlag And myLow < myHigh
        mySwapFlag = False
        For i = myLow To myHigh - 1
            If list.item(i) > list.item(i + 1) Then 'Swap values
               list.Add list.item(i), , , i + 1
               list.Remove i
               mySwapFlag = True
            End If
        Next i
        myHigh = myHigh - 1                         'Last is now highest
        For i = myHigh To myLow + 1 Step -1
            If list.item(i) < list.item(i - 1) Then 'Swap values
               list.Add list.item(i), , i - 1
               list.Remove i + 1
               mySwapFlag = True
            End If
        Next i
        myLow = myLow + 1 'First is now lowest
    Wend
    Set sortList = list
End Function

Public Function distinctList(ByVal SortedList As Collection) As Collection
Dim i                   As Long
Dim myLow, myHigh

    myLow = 1
    myHigh = SortedList.Count
    If myHigh > 1 Then
        For i = myHigh To myLow + 1 Step -1 'From end to begin
            If SortedList.item(i) = SortedList.item(i - 1) Then SortedList.Remove i
        Next i
    End If
    Set distinctList = SortedList
End Function

Public Sub FillCombo(ByRef arrDocTypes() As String, ByVal cbo As Control)
Dim lngDummy            As Long

    cbo.Clear
    cbo.AddItem
    cbo.list(0, 0) = ""
    cbo.list(0, 1) = csDocOverig
    For lngDummy = LBound(arrDocTypes) To UBound(arrDocTypes)
        cbo.AddItem
        cbo.list(lngDummy + 1, 0) = WFMData.Common.getField("WFDocTypes", "DocType", "DocCode", arrDocTypes(lngDummy), "Enabled", "1")
        cbo.list(lngDummy + 1, 1) = WFMData.Common.getField("WFDocTypes", "DocBeh", "DocCode", arrDocTypes(lngDummy), "Enabled", "1")
    Next
End Sub

Public Function createNote(ByVal rsViewer As WFDWorkitem.WorkitemViewer, ByVal sReason As String) As Boolean
Dim WIXMLData           As New clsWIData

    createNote = False
    Set WIXMLData = WFMData.getWIData(rsViewer.CALClientListItem.OpenedItem)
    Set frmAddNotitie.NotitieData = WIXMLData
    Select Case sReason
        Case "E"
             frmAddNotitie.strReason = "E"
        Case "I"" "
             frmAddNotitie.strReason = "I"
        Case "D"
             frmAddNotitie.strReason = "D"
    End Select
    frmAddNotitie.Show 1
    Unload frmAddNotitie
    If WIXMLData.XMLData.Changed Then
        WFMData.setWIData rsViewer.CALClientListItem.OpenedItem, WIXMLData  'WIViewer.CALClientListItem.OpenedItem, WIXMLData
        createNote = True
    End If
End Function

Public Sub PrintXMLNote(name As String, printff As String, strInhoudnote As String)
Static Nr               As Integer
Dim fs, f               As Object
Dim lngShell            As Long
Dim TmpFile             As String

    On Error GoTo EH
    If Nr = Empty Or Nr > 99 Then Nr = 0
    Nr = Nr + 1
    Set fs = CreateObject("Scripting.FileSystemObject")
    TmpFile = pvTempDir + "~ESWM " + name + " " + Trim(Str(Nr)) + ".txt"
    fs.DeleteFile TmpFile, True
    Set f = fs.CreateTextFile(TmpFile, True)
    f.WriteLine (" ")
    f.WriteLine (" ")
    f.WriteLine (" ")
    f.WriteLine ("Auteur:")
    f.WriteLine (printff)
    f.WriteLine (" ")
    f.WriteLine (strInhoudnote)
    f.Close
    lngShell = ShellExecute(0, "Print", TmpFile, "", "", 6)
    Exit Sub

EH:
    If Err.Number = 53 Then Resume Next ' file not found
    DisplayError "PrintNotes"
    Resume Next
End Sub

Public Sub fillCmbAARD_KLACHT(vControl As Control)
    On Error GoTo EH
    vControl.AddItem ""
'    vControl.AddItem "Aegon reageert niet"
'    vControl.AddItem "Beleggingsverzekering ondoorzichtig"
'    vControl.AddItem "Beleid"
'    vControl.AddItem "Excasso"
'    vControl.AddItem "Faillissement"
'    vControl.AddItem "Juridisch"
'    vControl.AddItem "Komen afspraak niet na"
'    vControl.AddItem "Krijgt niet de gevraagde info"
'    vControl.AddItem "Nav mailing"
'    vControl.AddItem "Niet bekend"
'    vControl.AddItem "Offerte"
'    vControl.AddItem "Reactie op beleggingsklacht"
'    vControl.AddItem "Reactie op eerdere klachtafhandeling"
'    vControl.AddItem "Reactie op UPO"
'    vControl.AddItem "Rol TP"
'    vControl.AddItem "Service"
'    vControl.AddItem "Verwerking"
'    vControl.AddItem "Waardeoverdracht"
'    vControl.AddItem "Wettelijke wijziging"
'    vControl.AddItem "Woekerpensioen"
'    vControl.AddItem "Wijzigingsverzoek"
'    vControl.AddItem "Overig"

'[PAC] - TD162578 - Modified table contents (Length cbAard = 40)
'    vControl.AddItem "UPO/Startbrief"
'    vControl.AddItem "Kosten beleggingsverzekering"
'    vControl.AddItem "Beleggingsverzekering ondoorzichtig"
'    vControl.AddItem "Waardeoverdracht"
'    vControl.AddItem "Wijziging samenlevingsverband"
'    vControl.AddItem "Scheiding/Verevening"
'    vControl.AddItem "Arbeidsongeschiktheid"
'    vControl.AddItem "FVP"
'    vControl.AddItem "Pensioeningang/kapitaalexpiratie"
'    vControl.AddItem "Pensioeningang/overlijden"
'    vControl.AddItem "Excasso"
'    vControl.AddItem "Vorderingen"
'    vControl.AddItem "Faillissement"
'    vControl.AddItem "Debiteuren"
'    vControl.AddItem "Verlenging/Wijziging regeling"
'    vControl.AddItem "Nieuwe klant"
'    vControl.AddItem "Wettelijke wijziging"
'    vControl.AddItem "Beheer/administratie"
'    vControl.AddItem "Klachten over tussenpersoon"

    vControl.AddItem "Afkoop kleinpensioen"
    vControl.AddItem "Excasso/uitkering"
    vControl.AddItem "Indexatie"
    vControl.AddItem "Kosten berekend door Aegon"
    vControl.AddItem "Nieuwe deelnemer (Alg. geen WO)"
    vControl.AddItem "Nieuwe klant"
    vControl.AddItem "Pensioeningang - regulier"
    vControl.AddItem "Pensioeningang - kapitaalexpiratie"
    vControl.AddItem "Pensioeningang - overlijden"
    vControl.AddItem "Scheiding/verevening"
    vControl.AddItem "UPO/startbrief"
    vControl.AddItem "Verlenging/wijziging regeling"
    vControl.AddItem "Vordering/verrekening"
    vControl.AddItem "Waardeoverdracht"
    vControl.AddItem "Ziekte/arbeidsongeschiktheid"
    vControl.AddItem "Overig"
'[PAC] - TD162578 - End Modified table contents (Length cbAard = 40)

    Exit Sub

EH:
    DisplayError "cbAard." & Err.Description
End Sub

Public Sub fillCmbAFZENDER_KLACHT(vControl As Control)
    On Error GoTo EH
    vControl.AddItem ""
    vControl.AddItem "Bestuur"
    vControl.AddItem "Deelnemer"
    vControl.AddItem "Klant"
    vControl.AddItem "Toezichthouder"
    vControl.AddItem "Tussenpersoon"
    vControl.AddItem "Overig"
    Exit Sub

EH:
    DisplayError "cbAfzenderType." & Err.Description
End Sub

Public Sub fillCmbBRON_KLACHT(vControl As Control)
    On Error GoTo EH
    vControl.AddItem ""
    vControl.AddItem "Aangetekende brief"
    vControl.AddItem "Brief"
    vControl.AddItem "Fax"
    vControl.AddItem "Mail"
    vControl.AddItem "Telefonisch"
    vControl.AddItem "Website"
    vControl.AddItem "Overig"
    Exit Sub

EH:
    DisplayError "cbBron." & Err.Description
End Sub

Public Sub fillCmbExtraAfhandeling(vControl As Control)
    On Error GoTo ERROR_EXAFHAND
    vControl.AddItem ""
    vControl.AddItem "Bloemetje gestuurd"
    vControl.AddItem "Concessie"
    vControl.AddItem "Mutatie verwerkt"
    vControl.AddItem "Schriftelijk"
    vControl.AddItem "Telefonisch"
    vControl.AddItem "VTU"
    vControl.AddItem "Workaround"
    vControl.AddItem "Overig"
    Exit Sub

ERROR_EXAFHAND:
    DisplayError "cbExtraAfhandeling." & Err.Description
End Sub

Public Sub fillCmbOORZAAK_KLACHT(vControl As Control)
    On Error GoTo EH
    vControl.AddItem ""
'    vControl.AddItem "Beleid"
'    vControl.AddItem "Follow-up"
'    vControl.AddItem "Fout gemaakt"
'    vControl.AddItem "Kwaliteit medewerker"
'    vControl.AddItem "Niet aangegeven"
'    vControl.AddItem "Niet mee eens"
'    vControl.AddItem "Niet nakomen afspraak"
'    vControl.AddItem "Niet ontvangen"
'    vControl.AddItem "Onduidelijke info."
'    vControl.AddItem "Snelheid"
'    vControl.AddItem "Systeem (Fout)"
'    vControl.AddItem "Tussenpersoon"
'    vControl.AddItem "Werkvoorraad"
'    vControl.AddItem "Overig"

'[PAC] - TD162578 - Modified table contents (Length cbOorzaak = 50)
'    vControl.AddItem "AEGON heeft fout gemaakt"
'    vControl.AddItem "Klant niet mee eens"
'    vControl.AddItem "AEGON is afspraak niet nakomen"
'    vControl.AddItem "Klant heeft gevraagde info niet ontvangen"
'    vControl.AddItem "Onduidelijke info van AEGON"
'    vControl.AddItem "Tijdigheid"
'    vControl.AddItem "Systeem"
'    vControl.AddItem "Werkvoorraad"
'    vControl.AddItem "AEGON reageert niet"
'    vControl.AddItem "beleggingsverzekering ondoorzichtig"
'    vControl.AddItem "Juridisch"
'    vControl.AddItem "Onjuiste informatie door AEGON"

    vControl.AddItem "AEGON reageert niet op mijn vraag/verzoek"
    vControl.AddItem "AEGON komt afspraak/belofte niet na"
    vControl.AddItem "AEGON heeft mij niet proactief ge|fffd|nformeerd"
    vControl.AddItem "AEGON heeft mij foutief/onduidelijk ge|fffd|nformeerd"
    vControl.AddItem "Gedrag medewerker"
    vControl.AddItem "Herstelkosten regeling"
    vControl.AddItem "Uitkering - juistheid"
    vControl.AddItem "Uitkering - tijdigheid"
    vControl.AddItem "Verwerking verzoek/mutatie - juistheid"
    vControl.AddItem "Verwerking verzoek/mutatie - snelheid"
'[PAC] - TD162578 - End Modified table contents (Length cbOorzaak = 50)

    vControl.AddItem "Overig"
    
    Exit Sub

EH:
    DisplayError "cbOorzaak." & Err.Description
End Sub

Public Sub fillCmbNazorg(vControl As Control)
    On Error GoTo ERROR_EXAFHAND
    vControl.AddItem ""
    vControl.AddItem "Beleid (her)overweging"
    vControl.AddItem "Communicatie"
    vControl.AddItem "Systeemaanpassing"
    Exit Sub

ERROR_EXAFHAND:
    DisplayError "cbNazorg." & Err.Description
End Sub

Public Sub fillCmbReactieComm(vControl As Control)
    On Error GoTo ERROR_EXAFHAND
    vControl.AddItem ""
    vControl.AddItem "Concept moet geheel over"
    vControl.AddItem "In concept nog wijzigingen aanbrengen"
    vControl.AddItem "In concept wijzigingen aangebracht"
    vControl.AddItem "Overig"
    Exit Sub

ERROR_EXAFHAND:
    DisplayError "cbReactieComm." & Err.Description
End Sub

Public Sub fillCmbSOORT_KLACHT(vControl As Control)
    On Error GoTo EH
    vControl.AddItem ""
    vControl.AddItem "Advocaat/Rechtsbijstand"  '[PAC] - TD162578
    vControl.AddItem "Beleggingsklacht"
    vControl.AddItem "Directieklacht"
    vControl.AddItem "Gewone klacht"
'   vControl.AddItem "Niet SCP"                 '[PAC] - TD162578
    'vControl.AddItem "Toezichthoudersklacht"
    vControl.AddItem "KIFID klacht"
    vControl.AddItem "Niet BLP"                 '[PAC] - TD162578
    vControl.AddItem "Anders"
'   vControl.AddItem "Rechtzaak"                '[PAC] - TD162578
    Exit Sub

EH:
    DisplayError "cbSoort." & Err.Description
End Sub

Public Sub ExtralinkAlg(str1 As String, str2 As String, str3 As String, ByVal rsViewer As WFDWorkitem.WorkitemViewer)
' Deze Sub kan naar een pagina in CAESAR springen d.m.v. een paginakode en een sleutel links bovenin
' str1 t/m 3 geven het gevraagde scherm, b.v.: U6 RCKL 012345 (die laatste is in dit geval het klantnr)
' let op, dat str1 2 lang moet zijn en str2 4 lang!
' WO woensdag 15 augustus 2007
Dim Sessions            As Object
Dim System              As Object
Dim Sess0               As Object
Dim hWnd                As Long
Dim intLoop             As Integer

    On Error GoTo EH
    hWnd = FindWindow(ByVal vbNullString, "EXTRA! SESSION 1 - EXTRA! X-treme")
    If hWnd = 0 Then hWnd = FindWindow(ByVal vbNullString, "EXTRA! SESSION 1 - EXTRA!|fffd| Enterprise 2000")
    If hWnd = 0 Then
        MsgBox "Start Extra 1 en log in."
        Exit Sub
    Else
'[W7]        MousePointer = fmMousePointerHourGlass         'Incorrect definition
        DoEvents
        Set System = CreateObject("EXTRA.System")   ' Gets the system object
        If (System Is Nothing) Then MsgBox "Start Extra 1 en log in.": Exit Sub
        Set Sessions = System.Sessions
        If (Sessions Is Nothing) Then: MsgBox " ": Exit Sub
        Set Sess0 = System.ActiveSession
        If (Sess0 Is Nothing) Then MsgBox "Start Extra 1 en log in.": Exit Sub
'       Als we al in het juiste scherm staan dan kunnen we een heel stuk overslaan
        If Not Sess0.screen.area(1, 2, 1, 8) = str1 + " " + str2 Then
            Sess0.screen.SendKeys ("<Clear>")       ' terug naar Application Selection
            For intLoop = 1 To 10                   ' Wacht tot we in Application Selection zitten
                Sleep 300
                If Sess0.screen.area(1, 2, 1, 7) = "EMSP01" Then intLoop = 999
            Next intLoop
            Sess0.screen.SendKeys ("1")             ' Kies de juiste ANNET (voor PROD is dat dus nr 1)
            Sess0.screen.SendKeys ("<Enter>")
            For intLoop = 1 To 10                   ' Wacht tot we in het Selectiemenu zitten
                Sleep 300
                If Sess0.screen.area(1, 2, 1, 8) = "       " Then intLoop = 999
            Next intLoop
            Sess0.screen.SendKeys ("UM")            ' Hoofdmenu
            Sess0.screen.SendKeys ("<Enter>")
            For intLoop = 1 To 10                   ' Wacht tot we in het Hoofdmenu zitten
                Sleep 300
                If Sess0.screen.area(1, 2, 1, 8) = "UM MENU" Then intLoop = 999
            Next intLoop
        End If
        Sess0.screen.SendKeys ("<Home>")
        Sess0.screen.SendKeys (str1 + str2 + str3)  ' Het gevraagde scherm
        Sess0.screen.SendKeys ("<EraseEOF>")
        Sess0.screen.SendKeys ("<PF12>")
'[W7]        MousePointer = fmMousePointerDefault           'Incorrect definition
        Sess0.WindowState = 1
        SetForegroundWindow hWnd
        Set Sess0 = Nothing
        Set Sessions = Nothing
        Set System = Nothing
    End If
    Exit Sub

EH:
    Set Sess0 = Nothing
    Set Sessions = Nothing
    Set System = Nothing
End Sub

Public Sub Extralink(ByVal rsViewer As WFDWorkitem.WorkitemViewer, strPolisnr As String, Optional IDLN As Boolean = False)
Dim Sessions            As Object
Dim System              As Object
Dim Sess0               As Object
Dim hWnd                As Long

    On Error GoTo EH
'   Als kltnr in polisnr staat doen we niets
    If Len(strPolisnr) = 10 Then
        hWnd = FindWindow(ByVal vbNullString, "EXTRA! SESSION 1 - EXTRA! X-treme")
        If hWnd = 0 Then hWnd = FindWindow(ByVal vbNullString, "EXTRA! SESSION 1 - EXTRA!|fffd| Enterprise 2000")
        If hWnd = 0 Then
            MsgBox "Start Extra 1 en log in."
            Exit Sub
        Else
'[W7]            MousePointer = fmMousePointerHourGlass     'Incorrect definition
            DoEvents
            Set System = CreateObject("EXTRA.System")   ' Gets the system object
            If (System Is Nothing) Then MsgBox "Start Extra 1 en log in.": Exit Sub
            Set Sessions = System.Sessions
            If (Sessions Is Nothing) Then: MsgBox " ": Exit Sub
            Set Sess0 = System.ActiveSession
            If (Sess0 Is Nothing) Then MsgBox "Start Extra 1 en log in.": Exit Sub
'           Tussen de commando's hebben we even een pauze. Dit is uit een eenmalige ervaring..
'           Pause break commando
            Sess0.screen.SendKeys ("<Clear>")
            Sleep 500
'           Iedereen heeft keuze 1
            Sess0.screen.SendKeys ("1")
'           Sleep 500
            Sess0.screen.SendKeys ("<Enter>")
            Sleep 500
'           Eerste checkken of we in het goede scherm zitten????
'           Hier wil men heen
            Sess0.screen.SendKeys ("UM")
            Sess0.screen.SendKeys ("<Enter>")
            Sleep 300
'           DIT WERKT. Mogelijk moetn we
'[W7]            If Not IsHostScreen("MENU ", rsViewer) Then Sleep 500
            If Sess0.screen.area(1, 5, 1, 9) <> "MENU " Then Sleep 500  '[W7]
'           Dit is END toets schonen wat er staat
            Sess0.screen.SendKeys ("<EraseEOF>")
            Sleep 300
'           Volgende veld
            Sess0.screen.SendKeys ("<Tab>")
            Sleep 100
'           Vullen met nummer polis
            Sess0.screen.SendKeys (strPolisnr)
            Sleep 100
'           Andere velden ook schonen
            Sess0.screen.SendKeys ("<EraseEOF>")
            Sleep 100
            Sess0.screen.SendKeys ("<Tab>")
            Sleep 100
            Sess0.screen.SendKeys ("<EraseEOF>")
            Sleep 100
            Sess0.screen.SendKeys ("<Tab>")
            Sleep 100
            Sess0.screen.SendKeys ("<EraseEOF>")
            Sleep 100
            Sess0.screen.SendKeys ("<Tab>")
            Sleep 100
            Sess0.screen.SendKeys ("<EraseEOF>")
            Sleep 100
            Sess0.screen.SendKeys ("<Tab>")
            Sleep 100
'           Terug naar boven dat er 24 of 42 ingevuld kan worden
            Sess0.screen.SendKeys ("<Up>")
            Sess0.screen.SendKeys ("<Up>")
            Sess0.screen.SendKeys ("<Up>")
            Sess0.screen.SendKeys ("<Up>")
'           Mabr voor FEP naar IDLN scherm
            If IDLN Then
                Sess0.screen.SendKeys ("12")
                Sleep 100
                Sess0.screen.SendKeys ("<Enter>")
                Sleep 100
                Sess0.screen.SendKeys ("<Enter>")
            End If
'[W7]            MousePointer = fmMousePointerDefault       'Incorrect definition
            Sess0.WindowState = 1
            SetForegroundWindow hWnd
            Set Sess0 = Nothing
            Set Sessions = Nothing
            Set System = Nothing
        End If
    Else
        MsgBox "Geen geldig deelnemernummer bij deze map."
    End If
    Exit Sub

EH:
'   We doen verder helemaal niets als het fout gaat.....
    Set Sess0 = Nothing
    Set Sessions = Nothing
    Set System = Nothing
End Sub

Public Sub PBRExtralink(ByVal rsViewer As WFDWorkitem.WorkitemViewer, strPolisnr As String, Optional IDLN As Boolean = False)
Dim Sessions            As Object
Dim System              As Object
Dim Sess0               As Object
Dim hWnd                As Long

    On Error GoTo EH
'   Als kltnr in polisnr staat doen we niets
    If Len(strPolisnr) = 10 Then
        hWnd = FindWindow(ByVal vbNullString, "EXTRA! SESSION 1 - EXTRA! X-treme")
        If hWnd = 0 Then hWnd = FindWindow(ByVal vbNullString, "EXTRA! SESSION 1 - EXTRA!|fffd| Enterprise 2000")
        If hWnd = 0 Then
            MsgBox "Start Extra 1 en log in."
            Exit Sub
        Else
'[W7]            MousePointer = fmMousePointerHourGlass     'Incorrect definition
            DoEvents
            Set System = CreateObject("EXTRA.System")   ' Gets the system object
            If (System Is Nothing) Then MsgBox "Start Extra 1 en log in.": Exit Sub
            Set Sessions = System.Sessions
            If (Sessions Is Nothing) Then: MsgBox " ": Exit Sub
            Set Sess0 = System.ActiveSession
            If (Sess0 Is Nothing) Then MsgBox "Start Extra 1 en log in.": Exit Sub
'           Bovenstaand deel (springen naar de UM-kloon) is vervangen door
'           onderstaand deel omdat we in de aanroepende frm al Extra (YetAnotherExtraLink) gedaan hebben
'           en we dus al in de juiste kloon staan.
'           we hoeven alleen te kijken welke kloon het is en dan het juiste MENU commando te geven
            Sess0.screen.SendKeys ("<Home>")
            Sleep 100
'[W7]            If TrimScrape(1, 1, 3, "OHUP", rsViewer) = "UI" Then
            If Sess0.screen.area(1, 2, 1, 3) = "UI" Then                '[W7]
                Sess0.screen.SendKeys ("US")
            Else
                Sess0.screen.SendKeys ("P2")
            End If
            Sleep 100
            Sess0.screen.SendKeys ("MENU")
            Sleep 100
            Sess0.screen.SendKeys ("<EraseEOF>")
            Sleep 100
            Sess0.screen.SendKeys ("<PF12>")
            Sleep 500
'           En dan gaan we weer als vanouds verder met het inrichten van de MENU-pagina.
'[W7]            If Not IsHostScreen("MENU ", rsViewer) Then Sleep 500
            If Sess0.screen.area(1, 5, 1, 9) <> "MENU " Then Sleep 500  '[W7]
'           Dit is END toets schonen wat er staat
            Sess0.screen.SendKeys ("<EraseEOF>")
            Sleep 300
'           Volgende veld
            Sess0.screen.SendKeys ("<Tab>")
            Sleep 100
'           Vullen met nummer polis
            Sess0.screen.SendKeys (strPolisnr)
            Sleep 100
'           Andere velden ook schonen
            Sess0.screen.SendKeys ("<EraseEOF>")
            Sleep 100
            Sess0.screen.SendKeys ("<Tab>")
            Sleep 100
            Sess0.screen.SendKeys ("<EraseEOF>")
            Sleep 100
            Sess0.screen.SendKeys ("<Tab>")
            Sleep 100
            Sess0.screen.SendKeys ("<EraseEOF>")
            Sleep 100
            Sess0.screen.SendKeys ("<Tab>")
            Sleep 100
            Sess0.screen.SendKeys ("<EraseEOF>")
            Sleep 100
            Sess0.screen.SendKeys ("<Tab><Tab><Tab><Tab>")
            Sleep 100
'           Terug naar boven dat er 24 of 42 ingevuld kan worden
'           Mabr voor FEP naar IDLN scherm
'[W7]            MousePointer = fmMousePointerDefault       'Incorrect definition
            Sess0.WindowState = 1
            SetForegroundWindow hWnd
            Set Sess0 = Nothing
            Set Sessions = Nothing
            Set System = Nothing
        End If
    Else
        MsgBox "Geen geldig deelnemernummer bij deze map."
    End If
    Exit Sub

EH:
'   We doen verder helemaal niets als het fout gaat.....
    Set Sess0 = Nothing
    Set Sessions = Nothing
    Set System = Nothing
End Sub

Public Function YetAnotherExtralink(ByVal rsViewer As WFDWorkitem.WorkitemViewer, strPolisnr As String) As Boolean
Dim Sessions            As Object
Dim System              As Object
Dim Sess0               As Object
Dim Cscreen             As Object
Dim hWnd                As Long
Dim strI2OHUP, struiOHUP, stru3INWG As String
Dim counter             As Integer
Dim errcount            As Integer
Dim positie             As String
Dim strCheck            As String                           '[W7] Definition was missing
Dim ff                  As String                           '[W7] Definition was missing

    On Error GoTo EH
    errcount = 0
    YetAnotherExtralink = False
'   Als kltnr in polisnr staat doen we niets

TryAgain:
    If Len(strPolisnr) = 10 Then
        hWnd = FindWindow(ByVal vbNullString, "EXTRA! SESSION 1 - EXTRA! X-treme")
        If hWnd = 0 Then hWnd = FindWindow(ByVal vbNullString, "EXTRA! SESSION 1 - EXTRA!|fffd| Enterprise 2000")
        If hWnd = 0 Then
            MsgBox "Start Extra 1 en log in."
            Exit Function
        Else
'[W7]            MousePointer = fmMousePointerHourGlass     'Incorrect definition
            DoEvents
            counter = 0
            If System Is Nothing Then
               Set System = CreateObject("EXTRA.System")   ' Gets the system object
               positie = "systeem inlog dln"
               If (System Is Nothing) Then MsgBox "Start Extra 1 en log in.": Exit Function
               Set Sessions = System.Sessions
               If (Sessions Is Nothing) Then: MsgBox " ": Exit Function
               Set Sess0 = System.ActiveSession
               If (Sess0 Is Nothing) Then MsgBox "Start Extra 1 en log in.": Exit Function
               Set Cscreen = Sess0.screen
            Else
                Sess0.screen.SendKeys ("<PF10>")
            End If
            positie = "clear na inlog dln"
            strCheck = Trim(Cscreen.area(1, 2, 1, 7))
            If strCheck <> "EMSP01" Then Sess0.screen.SendKeys ("<PF10>")
            Sleep 500
            Sess0.screen.SendKeys ("<Clear>")
            Sleep 500
'           Iedereen heeft keuze 1
            Sess0.screen.SendKeys ("1")
            Sess0.screen.SendKeys ("<Enter>")
            positie = "1e screenscrape dln"
            strCheck = Trim(Cscreen.area(1, 73, 1, 78))
            positie = "1e loop voor dln"
            Do While strCheck <> "AAF03"
                counter = counter + 1
                strCheck = Trim(Cscreen.area(1, 73, 1, 78))
                Sleep 100
                DoEvents
                If counter > 99 Then
                    GoTo TryAgain
                End If
            Loop
            positie = "1e loop na dln"
            struiOHUP = "UIOHUP" + " " + strPolisnr
            Sess0.screen.SendKeys (struiOHUP)
            Sleep 250
            Sess0.screen.SendKeys ("<Enter>")
            positie = "2e screenscrape dln"
            strCheck = Trim(Cscreen.area(1, 1, 1, 18))
            counter = 0
            positie = "2e loop voor dln"
            Do While strCheck <> "UI OHUP"
                counter = counter + 1
                strCheck = Trim(Cscreen.area(1, 1, 1, 8))
                 Sleep 100
                 DoEvents
                 If counter > 99 Then
                    GoTo TryAgain
                End If
            Loop
            positie = "2e loop na dln"
'           2 klonen rommel
'           Ik weet even niet hoe ik de juiste area kan ophalen..
            positie = "3e sreenscrape dln"
'[W7]            ff = TrimScrape(5, 15, 32, "OHUP", rsViewer)
            ff = Trim(Sess0.screen.area(5, 15, 5, 47))                  '[W7]
            positie = "Andere kloon dln"
            If Left(ff, 10) = "**********" Then  ' andere kloon
                Sess0.screen.SendKeys ("<PF10>")
                strCheck = Trim(Cscreen.area(1, 73, 1, 78))
                counter = 0
                positie = "3e loop voor dln"
                Do While strCheck <> "AAF03"
                    counter = counter + 1
                    strCheck = Trim(Cscreen.area(1, 73, 1, 78))
                    Sleep 100
                    DoEvents
                    If counter > 99 Then
                        GoTo TryAgain
                    End If
                Loop
                positie = "3e loop na dln"
                strI2OHUP = "I2OHUP" + " " + strPolisnr
                Sess0.screen.SendKeys (strI2OHUP)
                Sess0.screen.SendKeys ("<Enter>")
                Sleep 250
                strCheck = Trim(Cscreen.area(1, 1, 1, 8))
                positie = "4e loop voor dln"
                counter = 0
                Do While strCheck <> "I2 OHUP"
                    counter = counter + 1
                    strCheck = Trim(Cscreen.area(1, 1, 1, 8))
                    Sleep 100
                    DoEvents
                    If Left(Trim(Cscreen.area(5, 15, 5, 46)), 10) = "**********" Then
                        MsgBox "Deelnemer onbekend, klopt het deelnemernummer?"
                        Exit Function
                    End If
                    If counter > 99 Then
                        GoTo TryAgain
                    End If
                 Loop
                 positie = "4e loop na dln"
            End If
'           Cleanup
            Set Sess0 = Nothing
            Set Sessions = Nothing
            Set System = Nothing
            Set Cscreen = Nothing
        End If
        positie = "einde deelnemer"
    ElseIf Len(strPolisnr) = 6 Then
'[W7]            MousePointer = fmMousePointerHourGlass     'Incorrect definition
            DoEvents
            positie = "Start inlog klt"
            Set System = CreateObject("EXTRA.System")   ' Gets the system object
            If (System Is Nothing) Then MsgBox "Start Extra 1 en log in.": Exit Function
            Set Sessions = System.Sessions
            If (Sessions Is Nothing) Then: MsgBox " ": Exit Function
            Set Sess0 = System.ActiveSession
            If (Sess0 Is Nothing) Then MsgBox "Log eerst in.": Exit Function
            Set Cscreen = Sess0.screen
            Sess0.screen.SendKeys ("<Clear>")
            Sleep 250
            Sess0.screen.SendKeys ("1")
            Sleep 250
            Sess0.screen.SendKeys ("<Enter>")
            counter = 0
            positie = "1e sreenscrape klt"
            strCheck = Trim(Cscreen.area(1, 73, 1, 78))
            positie = "1e loop voor klt"
            Do While strCheck <> "AAF03"
                counter = counter + 1
                strCheck = Trim(Cscreen.area(1, 73, 1, 78))
                Sleep 100
                DoEvents
                If strCheck = "AAF05" Then
                    MsgBox "Dit klantnummer is onbekend..."
                    Exit Function
                End If
                If counter > 99 Then
                    GoTo TryAgain
                End If
            Loop
            positie = "na 1e loop klt"
            stru3INWG = "U3INWG" + " " + strPolisnr
            Sess0.screen.SendKeys (stru3INWG)
            Sleep 250
            Sess0.screen.SendKeys ("<Enter>")
            Sleep 250
            counter = 0

Dim strCheck2           As String

            positie = "2e screenscrape klt"
            strCheck = Trim(Cscreen.area(1, 1, 1, 8))
            strCheck2 = Trim(Cscreen.area(1, 73, 1, 79))
            positie = "voor 2e loop klt"
            Do While strCheck <> "U3 INWG" And Trim(strCheck2) <> "U3FMWM"
                counter = counter + 1
                strCheck = Trim(Cscreen.area(1, 1, 1, 6))
                strCheck2 = Trim(Cscreen.area(1, 73, 1, 79))
                Sleep 100
                DoEvents
                If counter > 99 Then
                ElseIf counter = 50 Then
'                   Er is een rare bug die veroorzaakt dat je al een scherm verder bent dan de bedoeling is
'                   dit heb ik opgelost door het label "continueKlant"
                    If strCheck = "U3FWAM" Then GoTo continueKlant
                End If
            Loop
            positie = "na 2e loop klt"
            Sess0.screen.SendKeys ("S")
            Sess0.screen.SendKeys ("<Enter>")
'           Hier moet eigenlijk ook een check komen op
'           het U3FWAM scherm vanaf positie 73 regel 1
            counter = 0

continueKlant:
            positie = "3e screenscrape klt"
            strCheck = Trim(Cscreen.area(1, 73, 1, 79))
            positie = "voor 3e loop"
            Do While strCheck <> "U3FWAM"
                counter = counter + 1
                strCheck = Trim(Cscreen.area(1, 73, 1, 79))
                Sleep 100
                DoEvents
                If counter > 99 Then
                    GoTo TryAgain
                ElseIf counter = 50 Then
                    Sess0.screen.SendKeys ("S")
                    Sess0.screen.SendKeys ("<Enter>")
                End If
            Loop
            positie = "na 3e loop klt"
            Set Sess0 = Nothing
            Set Sessions = Nothing
            Set System = Nothing
            Set Cscreen = Nothing
    Else
        MsgBox "Geen geldig klant of deelnemer-nummer bij dit document."
        Exit Function
    End If
    YetAnotherExtralink = True
    Exit Function

EH:
'   We doen verder helemaal niets als het fout gaat.....
'   Behalve nog even op de voorgrond gooien...
    If errcount > 3 Then
        MsgBox "3x fout, Fatal! " & Err.Description + ", " + Error(Err.Number)
    Else
        errcount = errcount + 1
    End If
    SetForegroundWindow hWnd
    Set Sess0 = Nothing
    Set Sessions = Nothing
    Set System = Nothing
    GoTo TryAgain
End Function

Public Function vulBehandelGroep(strAfdeling As String, DDownField As Control)
Dim bListFilled         As Boolean

''Q1 Release 2012 CR No. 153254 Dept Changes
    bListFilled = False
    If (strAfdeling = "PTA" Or strAfdeling = "PTB" Or strAfdeling = "FND" Or strAfdeling = "PTC" Or strAfdeling = "PTD") Then
'       Createcoll A en B en voor FND ook team C
        DDownField.Clear
        DDownField.AddItem ""
        DDownField.AddItem "A"
        DDownField.AddItem "B"
        DDownField.AddItem "C"
        DDownField.AddItem "D"
        bListFilled = True
    End If
''   If (strAfdeling = "PTE" Or strAfdeling = "PTF" Or strAfdeling = "PTG" Or strAfdeling = "PTH" Or strAfdeling = "PTV") Then
   If (strAfdeling = "APP") Then                        '[PAC] 17MAR15 - PTN --> APP - TD172461
        DDownField.Clear
        DDownField.AddItem ""
        DDownField.AddItem "1"
        DDownField.AddItem "2"
        DDownField.AddItem "3"
        DDownField.AddItem "4"
        bListFilled = True
    End If
    If bListFilled = False Then
        If Not (strAfdeling = "FVP" Or strAfdeling = "PAC" Or strAfdeling = "PPI") Then
            If (strAfdeling = "FAL") Then
                DDownField.Clear
                DDownField.AddItem ""
                DDownField.AddItem "A"
                DDownField.AddItem "B"
                DDownField.AddItem "C"
                DDownField.AddItem "D"
'[PAC]                If strAfdeling = "WST" Or strAfdeling = "NOZ" Then DDownField.AddItem "C"
            Else
'               De behandelgroepen worden uit de XML tabel "WFBehGroep" gehaald
                fillDDList False, DDownField, WFMData.Common.getList("WFBehGroep", "GroepOmschr", "Enabled", "1")
            End If
        End If
    End If
End Function

Public Function vulArrayKS_Afdelingen(ByRef arrAfdelingen, blnKSP As Boolean)
'   Omschrijving:  functie om een array te vullen met afdelingen van KS
'   Wijzigingen: 20070809 WO KS1 t/m 5 door CA 1 t/m 4 en FND

''Q1 Release 2012 CR No. 153254 Dept Changes
    arrAfdelingen(0, 0) = ""
    arrAfdelingen(0, 1) = ""
    arrAfdelingen(1, 0) = "FAL"
    arrAfdelingen(1, 1) = "Team FAL"
    arrAfdelingen(2, 0) = "PPI"
    arrAfdelingen(2, 1) = "Team PPI"
    arrAfdelingen(3, 0) = "PTA"
    arrAfdelingen(3, 1) = "Team PTA"
    arrAfdelingen(4, 0) = "PTB"
    arrAfdelingen(4, 1) = "Team PTB"
    arrAfdelingen(5, 0) = "PTC"
    arrAfdelingen(5, 1) = "Team PTC"
    arrAfdelingen(6, 0) = "PTD"
    arrAfdelingen(6, 1) = "Team PTD"
    arrAfdelingen(7, 0) = "PTE"
    arrAfdelingen(7, 1) = "Team PTE"
    arrAfdelingen(8, 0) = "PTF"
    arrAfdelingen(8, 1) = "Team PTF"
    arrAfdelingen(9, 0) = "PTG"
    arrAfdelingen(9, 1) = "Team PTG"
    arrAfdelingen(10, 0) = "PTH"
    arrAfdelingen(10, 1) = "Team PTH"
    arrAfdelingen(11, 0) = "APP"                        '[PAC] 17MAR15 - PTN --> APP - TD172461
    arrAfdelingen(11, 1) = "Team APP"                   '[PAC] 17MAR15 - PTN --> APP - TD172461
    arrAfdelingen(12, 0) = "PTI"
    arrAfdelingen(12, 1) = "Team PTI"
    arrAfdelingen(13, 0) = "PTL"                        '[PAC] - TD17266
    arrAfdelingen(13, 1) = "Team PTL"                   '[PAC] - TD17266
    arrAfdelingen(14, 0) = "PTR"                        '[PAC] - TD17266
    arrAfdelingen(14, 1) = "Team PTR"                   '[PAC] - TD17266
    arrAfdelingen(15, 0) = "FND"                        '[PAC] - TD17266
    arrAfdelingen(15, 1) = "Team FND"                   '[PAC] - TD17266
    
    If blnKSP Then                          'JAG is dit werkelijk functioneel nodig?
''        arrAfdelingen(16, 0) = "KSP"
''        arrAfdelingen(16, 1) = "Team KSP"
    End If
End Function

'[W7] Functions and routines added for Screen scraping replacement -----------------------------
Public Function fncQueryReplica(vQRYField As String) As Boolean
Dim dbConn              As adodb.Connection
Dim dbCommand           As adodb.Command
Dim dbRecSet            As adodb.Recordset
Dim sConnectString      As String

    fncQueryReplica = False
    On Error GoTo QRY_REPL_ERR
    Err.Clear

    Set dbConn = New adodb.Connection
    dbConn.connectionstring = gsConnectString
    dbConn.Open
    Set dbCommand = New adodb.Command
    Set dbCommand.ActiveConnection = dbConn
    If dbConn.State Then
        dbCommand.CommandType = adCmdText
        If Len(vQRYField) = 6 Then
            dbCommand.CommandText = gcQRYKLANT1 + gsQueryTable + gcQRYKLANT2 + vQRYField + gcQRYEND
        Else
            dbCommand.CommandText = gcQRYDLNMR1 + gsQueryTable + gcQRYDLNMR2 + vQRYField + gcQRYEND + gcQRYDLNMR3   '[PAC] - 22SEP14
        End If
        Set dbRecSet = dbCommand.execute()
    End If

    Call Clean
    If Not dbRecSet Is Nothing Then
        If Not dbRecSet.BOF And Not dbRecSet.EOF Then
            If Len(vQRYField) = 6 Then
                gsKlant = Trim(IIf(IsNull(dbRecSet.Fields(0).Value), "", dbRecSet.Fields(0).Value))
                gsKlantName = Trim(IIf(IsNull(dbRecSet.Fields(1).Value), "", dbRecSet.Fields(1).Value))
                gsaegar_Nr_Klant = Trim(IIf(IsNull(dbRecSet.Fields(2).Value), "", dbRecSet.Fields(2).Value))
                gsHUPO = Trim(IIf(IsNull(dbRecSet.Fields(3).Value), "", dbRecSet.Fields(3).Value))
                gsRelatie_beheerder = Trim(IIf(IsNull(dbRecSet.Fields(3).Value), "", dbRecSet.Fields(3).Value))
                gsIND_PERSONEEL = Trim(IIf(IsNull(dbRecSet.Fields(4).Value), "", dbRecSet.Fields(4).Value))
            Else
                gsDeelnemer_naam = Trim(IIf(IsNull(dbRecSet.Fields(0).Value), "", dbRecSet.Fields(0).Value))
                gsSexe = Trim(IIf(IsNull(dbRecSet.Fields(1).Value), "", dbRecSet.Fields(1).Value))
                gsGeboorte_datum = Trim(IIf(IsNull(dbRecSet.Fields(2).Value), "", dbRecSet.Fields(2).Value))
                gsGeboorte_datum = Right(gsGeboorte_datum, 2) + "-" + Mid(gsGeboorte_datum, 5, 2) + "-" + Left(gsGeboorte_datum, 4)
                gsAEGAR_Nr = Trim(IIf(IsNull(dbRecSet.Fields(3).Value), "", dbRecSet.Fields(3).Value))
                gsKlant = Trim(IIf(IsNull(dbRecSet.Fields(4).Value), "", dbRecSet.Fields(4).Value))
                gsKlantName = Trim(IIf(IsNull(dbRecSet.Fields(5).Value), "", dbRecSet.Fields(5).Value))
                gsaegar_Nr_Klant = Trim(IIf(IsNull(dbRecSet.Fields(6).Value), "", dbRecSet.Fields(6).Value))
                gsHUPO = Trim(IIf(IsNull(dbRecSet.Fields(7).Value), "", dbRecSet.Fields(7).Value))
                gsRelatie_beheerder = Trim(IIf(IsNull(dbRecSet.Fields(7).Value), "", dbRecSet.Fields(7).Value))
                gsIND_PERSONEEL = Trim(IIf(IsNull(dbRecSet.Fields(8).Value), "", dbRecSet.Fields(8).Value))
            End If
            gsBestemming = Mid(gsHUPO, 5, 3)

            dbRecSet.Close
            Set dbRecSet = Nothing
        End If
        fncQueryReplica = True
    End If
    GoSub QRY_DESTROY
    Exit Function


QRY_DESTROY:
    If Not dbCommand Is Nothing Then
        Set dbCommand = Nothing
    End If

    If Not dbConn Is Nothing Then
        If dbConn.State Then dbConn.Close
        Set dbConn = Nothing
    End If
    Return


QRY_REPL_ERR:
    fncQueryReplica = False
    MsgBox (Err.Description)
    GoSub QRY_DESTROY
End Function

Public Sub Clean()
    gsDeelnemer_naam = ""
    gsSexe = ""
    gsGeboorte_datum = ""
    gsAEGAR_Nr = ""
    gsKlant = ""
    gsKlantName = ""
    gsaegar_Nr_Klant = ""
    gsHUPO = ""
    gsRelatie_beheerder = ""
    gsIND_PERSONEEL = ""
    gsBestemming = ""
End Sub
'[W7] End Functions and routines added for Screen scraping replacement -------------------------
Attribute VB_Name = "Application"
Attribute VB_Base = "0{05153D0E-8F1B-11D3-8049-00A024E9EEA6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Application_AfterLogOn()
Dim myQueues    As CALQueues

    On Error GoTo EH
    InitWorkdesk
    On Error Resume Next
    Kill pvTempDir + "~ESWM*.*"
    Kill pvTempDir + "WD~*.*"
    StartRefreshTimer
    Exit Sub

EH:
    DisplayError "Application _AfterLogON"
End Sub

Private Sub Application_BeforeLogOff(blnCancel As Boolean)
Dim i           As Integer
Dim list        As CALClientList

    On Error GoTo EH
'   Schonen van de worklist
    i = 1
    Set list = Application.CALClient.ClientList
    Do While i <= list.Count(calObjTypeAll)
        If Not TryCleanUpItem(list.item(i, calObjTypeAll)) Then
            i = i + 1
        End If
    Loop
    golOutlook.Logout
    Exit Sub

EH:
    DisplayError "Before Logoff"
    Err.Clear
End Sub
Attribute VB_Name = "CFormChanger"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'***************************************************************************
'* MODULE NAME:     SIZEABLE USERFORM for VBA
'* AUTHOR:          LENNARD DESTANG
'* DESCRIPTION:     Makes a userform resizeable and reacts to the form being resized
'*
'* THIS MODULE:     Changes the userform's styles so it can be resized/maximised/minimized.
'*                  The code was initially created by Tim Clem, and expanded by Stephen Bullen
'*
'* PROCEDURES:
'*  UserForm_Activate    Instantiates a class module to make the form sizeable
'*  UserForm_Resize      Sizes and positions the controls on the form when resized
'***************************************************************************

Option Explicit

'Windows API calls to do all the dirty work!
Private Declare Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
Private Declare Function GetWindowLong Lib "user32" Alias "GetWindowLongA" (ByVal hWnd As Long, ByVal nIndex As Long) As Long
Private Declare Function SetWindowLong Lib "user32" Alias "SetWindowLongA" (ByVal hWnd As Long, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
Private Declare Function GetSystemMenu Lib "user32" (ByVal hWnd As Long, ByVal bRevert As Long) As Long
Private Declare Function DeleteMenu Lib "user32" (ByVal hMenu As Long, ByVal nPosition As Long, ByVal wFlags As Long) As Long
Private Declare Function ShowWindow Lib "user32" (ByVal hWnd As Long, ByVal nCmdShow As Long) As Long
Private Declare Function EnableWindow Lib "user32" (ByVal hWnd As Long, ByVal fEnable As Long) As Long
Private Declare Function DrawMenuBar Lib "user32" (ByVal hWnd As Long) As Long
Private Declare Function SetFocus Lib "user32" (ByVal hWnd As Long) As Long
Private Declare Function ExtractIcon Lib "shell32.dll" Alias "ExtractIconA" (ByVal hInst As Long, ByVal lpszExeFileName As String, ByVal nIconIndex As Long) As Long
Private Declare Function SendMessage Lib "user32" Alias "SendMessageA" (ByVal hWnd As Long, ByVal wMsg As Long, ByVal wParam As Integer, ByVal lParam As Long) As Long

'Lots of window styles for us to play with!
Private Const GWL_STYLE As Long = (-16)           'The offset of a window's style
Private Const GWL_EXSTYLE As Long = (-20)         'The offset of a window's extended style
Private Const WS_CAPTION As Long = &HC00000       'Style to add a titlebar
Private Const WS_SYSMENU As Long = &H80000        'Style to add a system menu
Private Const WS_THICKFRAME As Long = &H40000     'Style to add a sizable frame
Private Const WS_MINIMIZEBOX As Long = &H20000    'Style to add a Minimize box on the title bar
Private Const WS_MAXIMIZEBOX As Long = &H10000    'Style to add a Maximize box to the title bar
Private Const WS_POPUP As Long = &H80000000       'Standard option, cleared when showing a task bar icon
Private Const WS_VISIBLE As Long = &H10000000     'Standard option, cleared when showing a task bar icon

Private Const WS_EX_DLGMODALFRAME As Long = &H1   'Controls if the window has an icon
Private Const WS_EX_APPWINDOW As Long = &H40000   'Application Window: shown on taskbar
Private Const WS_EX_TOOLWINDOW As Long = &H80     'Tool Window: small titlebar

'Constant to identify the Close menu item
Private Const SC_CLOSE As Long = &HF060

'Constants for hide or show a window
Private Const SW_HIDE As Long = 0
Private Const SW_SHOW As Long = 5

'Constants for Windows messages
Private Const WM_SETICON = &H80

'Variables to store the various selections/options
Dim hWndForm As Long, mbSizeable As Boolean, mbCaption As Boolean, mbIcon As Boolean, miModal As Integer
Dim mbMaximize As Boolean, mbMinimize As Boolean, mbSysMenu As Boolean, mbCloseBtn As Boolean
Dim mbAppWindow As Boolean, mbToolWindow As Boolean, msIconPath As String
Dim moForm As Object

Public Property Set Form(oForm As Object)
'   Get the userform's window handle
    hWndForm = FindWindow("ThunderDFrame", oForm.Caption)
'   Remember the form for later
    Set moForm = oForm
'   Set the form's style
    SetFormStyle
'   Update the form's icon
'   ChangeIcon
End Property

'Property procedure to get and set the form's window styles
Public Property Let Sizeable(bSizeable As Boolean)
    mbSizeable = bSizeable
    SetFormStyle
End Property

Public Property Get Sizeable() As Boolean
    Sizeable = mbSizeable
End Property

Public Property Let ShowCaption(bCaption As Boolean)
    mbCaption = bCaption
    SetFormStyle
End Property

Public Property Get ShowCaption() As Boolean
    ShowCaption = mbCaption
End Property


Public Property Get Modal() As Boolean
    Modal = (miModal <> 1)
End Property

Public Property Let ShowIcon(bIcon As Boolean)
    mbIcon = Not bIcon
    ChangeIcon
    SetFormStyle
End Property

Public Property Get ShowIcon() As Boolean
    ShowIcon = (mbIcon <> 1)
End Property

Public Property Let IconPath(sNewPath As String)
    msIconPath = sNewPath
    ChangeIcon
End Property

Public Property Get IconPath() As String
    IconPath = msIconPath
End Property

Public Property Let ShowMaximizeBtn(bMaximize As Boolean)
    mbMaximize = bMaximize
    SetFormStyle
End Property

Public Property Get ShowMaximizeBtn() As Boolean
    ShowMaximizeBtn = mbMaximize
End Property

Public Property Let ShowMinimizeBtn(bMinimize As Boolean)
    mbMinimize = bMinimize
    SetFormStyle
End Property

Public Property Get ShowMinimizeBtn() As Boolean
    ShowMinimizeBtn = mbMinimize
End Property

Public Property Let ShowSysMenu(bSysMenu As Boolean)
    mbSysMenu = bSysMenu
    SetFormStyle
End Property

Public Property Get ShowSysMenu() As Boolean
    ShowSysMenu = mbSysMenu
End Property

Public Property Let ShowCloseBtn(bCloseBtn As Boolean)
    mbCloseBtn = bCloseBtn
    SetFormStyle
End Property

Public Property Get ShowCloseBtn() As Boolean
    ShowCloseBtn = mbCloseBtn
End Property

Public Property Let ShowTaskBarIcon(bAppWindow As Boolean)

    'If changing from showing an icon to not showing it, hide the window to remove the icon
    If hWndForm <> 0 And mbAppWindow And Not bAppWindow Then
        'Enable the WorkDesk window, so we don't lose focus
        EnableWindow FindWindow("WorkDesk", " "), True
        ShowWindow hWndForm, SW_HIDE
    End If

    mbAppWindow = bAppWindow

    SetFormStyle

    'Repaint the userform, to ensure everything is updated correctly
    moForm.Repaint

    'Set the WorkDesk window's enablement to the correct choice
    EnableWindow FindWindow("WorkDesk", " "), miModal
End Property

Public Property Get ShowTaskBarIcon() As Boolean
    ShowTaskBarIcon = mbAppWindow
End Property

Public Property Let SmallCaption(bToolWindow As Boolean)
    mbToolWindow = bToolWindow
    SetFormStyle
End Property

Public Property Get SmallCaption() As Boolean
    SmallCaption = mbToolWindow
End Property

'Routine to set the form's window style
Private Sub SetFormStyle()

    Dim iStyle As Long, hMenu As Long, hID As Long, iItems As Integer

    'Have we got a form to set?
    If hWndForm = 0 Then Exit Sub

    iStyle = GetWindowLong(hWndForm, GWL_STYLE)

        'Build up the basic window style flags for the form
    If mbCaption Then iStyle = iStyle Or WS_CAPTION Else iStyle = iStyle And Not WS_CAPTION
    If mbSysMenu Then iStyle = iStyle Or WS_SYSMENU Else iStyle = iStyle And Not WS_SYSMENU
    If mbSizeable Then iStyle = iStyle Or WS_THICKFRAME Else iStyle = iStyle And Not WS_THICKFRAME
    If mbMinimize Then iStyle = iStyle Or WS_MINIMIZEBOX Else iStyle = iStyle And Not WS_MINIMIZEBOX
    If mbMaximize Then iStyle = iStyle Or WS_MAXIMIZEBOX Else iStyle = iStyle And Not WS_MAXIMIZEBOX
    If mbAppWindow Then iStyle = iStyle And Not WS_VISIBLE And Not WS_POPUP Else iStyle = iStyle Or WS_VISIBLE Or WS_POPUP

    'Set the basic window styles
    SetWindowLong hWndForm, GWL_STYLE, iStyle

    iStyle = GetWindowLong(hWndForm, GWL_EXSTYLE)

    'Build up and set the extended window style
    If mbIcon Then iStyle = iStyle Or WS_EX_DLGMODALFRAME Else iStyle = iStyle And Not WS_EX_DLGMODALFRAME
    If mbAppWindow Then iStyle = iStyle Or WS_EX_APPWINDOW Else iStyle = iStyle And Not WS_EX_APPWINDOW
    If mbToolWindow Then iStyle = iStyle Or WS_EX_TOOLWINDOW Else iStyle = iStyle And Not WS_EX_TOOLWINDOW

    SetWindowLong hWndForm, GWL_EXSTYLE, iStyle

    'Handle the close button differently
    If mbCloseBtn Then
        'We want it, so reset the control menu
        hMenu = GetSystemMenu(hWndForm, 1)
    Else
        'We don't want it, so delete it from the control menu
        hMenu = GetSystemMenu(hWndForm, 0)
        DeleteMenu hMenu, SC_CLOSE, 0&
    End If

    'Show the window with the changes
    ShowWindow hWndForm, SW_SHOW
    DrawMenuBar hWndForm
    SetFocus hWndForm

End Sub

Private Sub ChangeIcon()
Dim hIcon As Long

    On Error Resume Next
    If hWndForm <> 0 Then
        Err.Clear
        If msIconPath = "" Then
            hIcon = 0
        ElseIf Dir(msIconPath) = "" Then
            hIcon = 0
        ElseIf Err.Number <> 0 Then
            hIcon = 0
        ElseIf Not mbIcon Then
            'Get the icon from the source
            hIcon = ExtractIcon(0, msIconPath, 0)
        Else
            hIcon = 0
        End If

        'Set the big (32x32) and small (16x16) icons
        SendMessage hWndForm, WM_SETICON, True, hIcon
        SendMessage hWndForm, WM_SETICON, False, hIcon
    End If
End Sub
Attribute VB_Name = "CustomCmnds409"
Option Explicit

Type mtFieldContextId
    fieldName As String
    ContextId As Long
End Type

Private Declare Function GetThreadLocale Lib "kernel32" () As Long

Dim mcolCtId            As New Collection

Public Function TryCleanUpItem(item As CALClientListItem) As Boolean
Dim myViewer            As WorkitemViewer
Dim myImportViewer      As ImportViewer
Dim objQueue            As New CALQueue
Dim IsOpen, IsMod, IsWip As Boolean
Dim Removed             As Boolean

    On Error GoTo EH
    TryCleanUpItem = False
    IsOpen = ((item.Info.Status And calObjStatusOpen) = calObjStatusOpen)
    IsMod = ((item.Info.Status And calObjStatusModSaved) = calObjStatusModSaved)
    If item.Info.Type <> calObjTypeImport Then
        Set myViewer = Application.Viewers.FindViewer(item)
    Else
        Set myImportViewer = Application.Viewers.FindViewer(item)
    End If
    IsWip = ((item.Info.Status And calObjStatusWIP) = calObjStatusWIP)
'   Als Open, Geen viewer open en niet Wip:REMOVE
    'item.OpenedItem.Save
    If IsOpen And myViewer Is Nothing And Not IsWip Then
        item.OpenedItem.Close calCloseSaveChanges
        Application.CALClient.ClientList.Remove item
        TryCleanUpItem = True
        Exit Function
    End If
'   Als open, Geen viewer, WIP maar niet gemodificeerd: RETURN
    If IsOpen And myViewer Is Nothing And IsWip And Not IsMod Then
'       Return to workstep
        item.OpenedItem.Close calCloseSaveChanges
        objQueue.Client = CALClient
        objQueue.name = item.Info.SourceWorkstep
        objQueue.Type = calQueueTypeWorkstep
        item.Send objQueue, calSendDiscard
        TryCleanUpItem = True
        Exit Function
    End If
'   Als open, Wel een viewer, geen WIP en niet gemodificeerd: REMOVE
    If IsOpen And Not myViewer Is Nothing And Not IsWip Then
        If Not myViewer.Modified Then
            myViewer.RemoveAfterClose = True
            myViewer.TryClose wdoForceCloseDiscardChanges
            TryCleanUpItem = True
            Exit Function
        End If
    End If
'   Als niet OPen en geen WIP: REMOVE
    If Not IsOpen And Not IsWip Then
        Application.CALClient.ClientList.Remove item
        TryCleanUpItem = True
        Exit Function
    End If
'   Als niet open, WIP maar niet gemodificeerd: RETURN
    If Not IsOpen And IsWip And Not IsMod Then
        item.OpenedItem.Close calCloseSaveChanges
        objQueue.Client = CALClient
        objQueue.name = item.Info.SourceWorkstep
        objQueue.Type = calQueueTypeWorkstep
        item.Send objQueue, calSendDiscard
        TryCleanUpItem = True
        Exit Function
    End If
    Exit Function

EH:
    DisplayError "Trycleanup"
End Function

Public Sub DetectAndKillNotepad()
Dim hWnd                As Long

    On Error GoTo EH
    hWnd = FindWindow("notepad", 0)
    If hWnd = 0 Then       ' 0 means Notepad not running
       Exit Sub
    Else
       AppActivate "Notepad"
       SendKeys "%{F4}", True
    End If
    Exit Sub

EH:
    DisplayError "DetectAndKillNotepad"
End Sub

Public Sub DetectOutlook(OutlookOpen As Boolean)
Dim hWnd                As Long

    On Error GoTo EH
    hWnd = 0
    hWnd = FindWindow(vbNullString, "Microsoft Outlook")
    If hWnd = 0 Then       ' 0 means Outlook not running
        OutlookOpen = False
     Else
        OutlookOpen = True
    End If
    Exit Sub

EH:
    DisplayError "DetectOutlook"
End Sub

Public Sub COLLMemo2Workstep(WorkStep, MemoText, ByVal Viewer As WFDWorkitem.WorkitemViewer, Optional aanvraag_info As String)
' Met deze functie wordt memo gestuurd naar
' contractbeheerder, waardoor hij getriggerd wordt
' om iets te doen.
Dim myDoc               As CALDocument
Dim myDesktop           As CALClientList
Dim myInfo              As CALWorkitemInfo
Dim myClientListItem    As CALClientListItem
Dim myDocFields         As CALFormFields
Dim myFldFields         As CALFormFields
Dim myQueue             As New CALQueue
Dim jnote
Dim FileNo              As Integer
Dim DocName
Dim MemoName
Dim objDocNote          As CALNote
Dim objFolderNote       As CALNote
Dim myInfoNoteName      As String

    On Error GoTo EH
'   Create new document
    If Not MemoText = "" Then
        If Left(Viewer.name, 4) = "MEMO" Then
            DocName = Viewer.name
        Else
            DocName = "MEMO " & Viewer.name
        End If
        Set myDesktop = Application.CALClient.ClientList
        Set myInfo = Application.CALClient.CreateDocument(DocName, "COLL")
        Set myClientListItem = myDesktop.Add(myInfo.objId, 0) 'pointer to the doc
        Set myDoc = myClientListItem.Open(calOpenReadWrite)
        myDoc.Save
'       Copy formfields with the same name from folder to the documente
        Set myDocFields = myDoc.FormFields(calFieldsNoViews)
        Set myFldFields = Viewer.CALClientListItem.OpenedItem.FormFields(calFieldsNoViews)
        Call CALCopyFormFields(myFldFields, myDocFields)
        myInfoNoteName = "Informatieverzoek dd " & Format(Now(), " yyyy-mm-dd")
        Call myDoc.Notes.Add(1, myInfoNoteName, MemoText)
    Else
        DocName = "Antwoord INFO"
        Set myDesktop = Application.CALClient.ClientList
        Set myInfo = Application.CALClient.CreateDocument(DocName, "COLL")
        Set myClientListItem = myDesktop.Add(myInfo.objId, 0) 'pointer to the doc
        Set myDoc = myClientListItem.Open(calOpenReadWrite)
        myDoc.Save
        Set myDocFields = myDoc.FormFields(calFieldsNoViews)
        Set myFldFields = Viewer.CALClientListItem.OpenedItem.FormFields(calFieldsNoViews)
        Call CALCopyFormFields(myFldFields, myDocFields)
        CALSetFieldValue myDoc, "DOORZENDEN_NAAR", aanvraag_info
        For Each objDocNote In Viewer.CALClientListItem.OpenedItem.Notes
            Set objFolderNote = myDoc.Notes.Add(calNoteLast, objDocNote.name, objDocNote.Text)
        Next
    End If
    myDoc.Save
    myDoc.Close calCloseSaveChanges
'   Send the document to this Workstep
    myQueue.Client = Application.CALClient
    myQueue.name = WorkStep
    myQueue.Type = calQueueTypeWorkstep
    myClientListItem.Send myQueue, calSendDiscard
    Exit Sub

EH:
    DisplayError "Verzenden Memo"
End Sub

Public Sub WFMSaveButton(ByVal WorkitemViewer As WFDWorkitem.WorkitemViewer)
Dim Workstepname        As String

    On Error GoTo EH
'   Save velden van custom form, sluit workitemviewer en stuur
'   workitem naar default
'   Voor de infoverzoeken //--// NaarParkeren tbv PIN
    If (InfoVerstuurd = True) Then                      'And Not (NaarParkeren = False)
        If mapinfoobjClientListItem.Info.name = WorkitemViewer.CALClientListItem.Info.name Then
            If NaarParkeren Then
                Call VerplaatsenNaarParkeerstap(WorkitemViewer)
            End If
            InfoVerstuurd = False
            Set mapinfoobjClientListItem = Nothing
            Exit Sub
        Else
            MsgBox "Vergeet ook niet de map met Infoverzoek naar parkeren te sturen!"
        End If
    End If
    SaveNewItem WorkitemViewer
    WorkitemViewer.BringToTop
    
    'Commented for EX9.21 Nl on Vista as it gives an Invalid Handler passed error
    'WorkitemViewer.CALClientListItem.OpenedItem.Close (calCloseSaveChanges)
    'Comment ends
    'Comment - replacement code as suggested by Global360
    WorkitemViewer.CALClientListItem.OpenedItem.Save
    WorkitemViewer.CALClientListItem.OpenedItem.Close (calCloseAbortChanges)
    'Comment ends - replacement code as suggested by Global360
    
    WorkitemViewer.CALClientListItem.SendToDefault (calSendDiscard)
    WorkitemViewer.TryClose (wdoForceCloseSaveChanges)
    Exit Sub

EH:
    DisplayError "WFMsavebutton"
End Sub

Public Sub WFMBackButton(ByVal WorkitemViewer As WFDWorkitem.WorkitemViewer)
Dim ClientList          As CALClientList
Dim objLastError        As CALError
Dim Ret                 As VbMsgBoxResult

'   Sluit viewer en remove workitem van client list
    On Error GoTo EH
    Set ClientList = Application.CALClient.ClientList
    If InfoVerstuurd = True Then
        If mapinfoobjClientListItem.Info.name = WorkitemViewer.CALClientListItem.Info.name Then
            Ret = MsgBox("Infoverzoek is verstuurd; kies voor Doorsturen", vbOKOnly + vbExclamation)
            Exit Sub
        End If
    End If
    If ((WorkitemViewer.CALClientListItem.Info.Status And calObjStatusModSaved) = calObjStatusModSaved) Then
        Ret = MsgBox("Formulier is gewijzigd; kies voor Doorsturen", vbOKOnly + vbExclamation)
    Else
        WorkitemViewer.CALClientListItem.OpenedItem.Close (calCloseAbortChanges)
        ClientList.Remove WorkitemViewer.CALClientListItem
        WorkitemViewer.TryClose (wdoForceCloseDiscardChanges)
    End If
    Exit Sub

EH:
    DisplayError "WFMBackbutton"
End Sub

Public Sub CopySendDocument(item As CALClientListItem, Nr As Integer)
' Kopieer workitem en stuur nieuwe workitem naar zelfde stap als origineel
Dim KopieItem           As CALClientListItem
Dim FindKopieList       As CALWorkitemWorkstepList
Dim myViewer            As WorkitemViewer

    On Error GoTo EH
    Set KopieItem = CopyDocument(item, Nr)
    If Not KopieItem Is Nothing Then
        If item.OpenedItem.FormFields(calFieldsNoViews).Find("BESTEMMING").Value <> "NEW" Then
            CALSendClientItemToQ KopieItem, item.Info.SourceWorkstep
        Else
            KopieItem.SendToDefault calSendDiscard
        End If
    End If
    Exit Sub

EH:
    DisplayError "CopySendDocument"
End Sub

Public Function CopyDocument(item As CALClientListItem, Nr As Integer) As CALClientListItem
' Maak nieuw document, kopieer een aantal velden en alle images
Dim ListItem            As CALClientListItem
Dim doc                 As CALDocument
Dim pages               As CALPages
Dim oDoc                As CALDocument
Dim oPages              As CALPages
Dim oPage               As CALPage
Dim InfoItem            As CALWorkitemInfo
Dim FormField           As CALFormField
Dim Import              As CALDocumentImport
Dim sTemp               As String
Dim iNbrPages           As Integer

    On Error GoTo EH
    Set CopyDocument = Nothing
    Set InfoItem = Application.CALClient.CreateDocument(item.Info.name + " Kopie " + Str(Nr), item.OpenedItem.Class)
    Set ListItem = Application.CALClient.ClientList.Add(InfoItem.objId, calAddDomainOnly)
    Set doc = ListItem.Open(calOpenReadWrite)
    Set pages = doc.pages
    doc.FormFields(calFieldsNoViews).Find("DOORZENDEN_NAAR").Value = item.OpenedItem.FormFields(calFieldsNoViews).Find("DOORZENDEN_NAAR").Value
    doc.FormFields(calFieldsNoViews).Find("IND_HUPO").Value = item.OpenedItem.FormFields(calFieldsNoViews).Find("IND_HUPO").Value
    doc.FormFields(calFieldsNoViews).Find("BEHANDELAAR").Value = item.OpenedItem.FormFields(calFieldsNoViews).Find("IND_HUPO").Value
    doc.FormFields(calFieldsNoViews).Find("DAT_DOC").Value = item.OpenedItem.FormFields(calFieldsNoViews).Find("DAT_DOC").Value
    doc.FormFields(calFieldsNoViews).Find("BEH_GROEP").Value = item.OpenedItem.FormFields(calFieldsNoViews).Find("BEH_GROEP").Value
    If item.OpenedItem.FormFields(calFieldsNoViews).Find("BESTEMMING").Value = "NEW" Then
        doc.FormFields(calFieldsNoViews).Find("BESTEMMING").Value = "NEW"
    End If
'   Kopieer de images
    Set oDoc = item.OpenedItem
    Set oPages = oDoc.pages
    If oPages.Count > 0 Then
        sTemp = pvTempDir + "~ESWMtemp.tif"
        iNbrPages = 0
        For Each oPage In oPages
            iNbrPages = iNbrPages + 1
            oPage.GetPage sTemp, calGetPageOverwriteExisting
            pages.SetPage iNbrPages, "p" & Str(iNbrPages), sTemp, calImageFileTypeTIFF
            Kill sTemp
        Next
    End If
    Set oPages = Nothing
    Set oDoc = Nothing
'   Kopieer de imports
    For Each Import In item.OpenedItem.Imports
        Kill pvTempDir + "~ESWM Import"
        Import.Extract (pvTempDir + "~ESWM Import")
        doc.Imports.Add calDocumentImportFirst, Import.name, Import.Class, pvTempDir + "~ESWM Import"
        Kill pvTempDir + "~ESWM Import"
    Next
    doc.Save
    doc.Close calCloseSaveChanges
    Set CopyDocument = ListItem
    Exit Function

EH:
    If Err.Number = 53 Then Resume Next
    DisplayError "CopyDocument"
'   Remove eventueel aangemaakt document
    If Not ListItem Is Nothing Then
        If Not doc Is Nothing Then
            If ((doc.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
                doc.Save
                doc.Close calCloseAbortChanges
            End If
        End If
        Application.CALClient.ClientList.Remove ListItem
    End If
End Function

Public Function AlgKiesBeheerder(strRelBeheerder As String, strMutBeheerder As String) As String
'   Deze functie kiest tussen de Relatiebeheerder en de Mutatiebeheerder t.n.o. a.d.h.v. de inhoud van die 1e
Dim intAfdelingPos
    
'   Als i.g.v. COLLMUT het Klantnummer is gescraped dan gaat er een trigger af om de Hupo uit een SQL-tabel te halen.
'   Dit is ooit ingesteld omdat het Caesar-scherm MDVB geen Hupo levert, de gegevens in die SQL-tabel worden 1x/mnd ververst.
'   Omdat het OHUP-scherm actuelere Hupo-informatie bevat, doen we het hier dus nog eens dunnetjes over.
    AlgKiesBeheerder = strRelBeheerder ' Relatiebeheerder i.g.v. KSA t/m D
'   I.g.v. CA1 t/m 4 of FND moeten we de andere hebben:

''Q1 Release 2012 CR No. 153254 Dept Changes
    intAfdelingPos = InStr(AlgKiesBeheerder, "PT")
    If intAfdelingPos > 0 And intAfdelingPos < 9 Then   ' Als CA te ver naar rechts staat is het niet de afdeling maar de naam v.d. behandelaar
        If Mid(AlgKiesBeheerder, intAfdelingPos + 2) >= "1" And Mid(AlgKiesBeheerder, intAfdelingPos + 2) <= "4" Then
            AlgKiesBeheerder = strMutBeheerder ' Mutatiebeheerder i.g.v. CA1 t/m 4
        End If
    Else
        If Left(AlgKiesBeheerder, 7) = "M/P FND" Or Left(AlgKiesBeheerder, 8) = "M/P  FND" Then
            AlgKiesBeheerder = strMutBeheerder ' Mutatiebeheerder i.g.v. FND
        End If
    End If
End Function

Public Sub AlgScreenScraping(myForm As Object, WIViewer As WorkitemViewer, Optional bBestemming As Boolean = True)
Dim intAfdelingPos

'[W7] Coding added for Screen scraping replacement -----------------------------

    If myForm.WFM_NR_POLIS = "" Then
        MsgBox "Geen Deelnemer of Klantnummer ingevuld."
    Else
        Call fncQueryReplica(myForm.WFM_NR_POLIS)
        myForm.WFM_NAAM_DLNMR = gsDeelnemer_naam
        myForm.WFM_SEXE_DLNMR = gsSexe
        'myForm.WFM_NR_POLIS =
        myForm.WFM_NR_AEGAR = gsAEGAR_Nr
        myForm.WFMDGEB_DEELN = gsGeboorte_datum
        myForm.WFM_NR_KLANT = gsKlant
        myForm.WFM_NAAM_KLANT = gsKlantName
        myForm.WFM_NR_AEGAR_KLANT = gsaegar_Nr_Klant
        myForm.WFM_IND_HUPO = gsHUPO
    End If
    Exit Sub

'[W7] Coding added for Screen scraping replacement -------------------------

'   Screenscrape vanaf OHUP,INWG of A350
    On Error GoTo EH
    If IsHostScreen("OHUP", WIViewer) Then
        myForm.WFM_NAAM_DLNMR = TrimScrape(5, 15, 32, "OHUP", WIViewer)
        myForm.WFM_SEXE_DLNMR = TrimScrape(9, 69, 1, "OHUP", WIViewer)
        myForm.WFM_NR_POLIS = TrimScrape(4, 69, 10, "OHUP", WIViewer)
        myForm.WFM_NR_AEGAR = TrimScrape(5, 69, 9, "OHUP", WIViewer)
        myForm.WFMDGEB_DEELN = TrimScrape(9, 15, 10, "OHUP", WIViewer)
        myForm.WFM_NR_KLANT = TrimScrape(12, 69, 6, "OHUP", WIViewer)
         If WIViewer.CALClientListItem.OpenedItem.Class = "COLLMUT" Then
            myForm.WFM_BEHANDELAAR = AlgKiesBeheerder(TrimScrape(20, 15, 12, "OHUP", WIViewer), TrimScrape(21, 15, 12, "OHUP", WIViewer))
'           En nu springen we eruit omdat de kode aan het eind van de Sub iets doet met WFM_IND_HUPO en die zit niet in COLLMUT
            Exit Sub        'Lelijk hoor
        Else
            myForm.WFM_NAAM_KLANT = TrimScrape(13, 15, 34, "OHUP", WIViewer)
            myForm.WFM_NR_AEGAR_KLANT = TrimScrape(13, 69, 9, "OHUP", WIViewer)
            myForm.WFM_IND_HUPO = TrimScrape(20, 15, 12, "OHUP", WIViewer)
        End If
    ElseIf IsHostScreen("INWG", WIViewer) Then
'       MaBr rel23 Voortaan wordt er vanuit het scherm algemene gegevens gescraped
        myForm.WFM_NR_KLANT = TrimScrape(5, 23, 6, "INWG", WIViewer)
        If WIViewer.CALClientListItem.OpenedItem.Class <> "COLLVORD" Then
            myForm.WFM_NR_POLIS = myForm.WFM_NR_KLANT
        End If

        If WIViewer.CALClientListItem.OpenedItem.Class = "COLLMUT" Then
            myForm.WFM_BEHANDELAAR = AlgKiesBeheerder(TrimScrape(19, 23, 12, "OHUP", WIViewer), TrimScrape(20, 23, 12, "OHUP", WIViewer))
'           En nu springen we eruit omdat de kode aan het eind van de Sub iets doet met WFM_IND_HUPO en die zit niet in COLLMUT
            Exit Sub        'Lelijk hoor
        Else
            myForm.WFM_NAAM_KLANT = TrimScrape(6, 23, 34, "INWG", WIViewer)
            If WIViewer.CALClientListItem.OpenedItem.Class <> "COLLVORD" Then
                myForm.WFM_NR_AEGAR_KLANT = TrimScrape(4, 23, 9, "INWG", WIViewer)
            End If
            myForm.WFM_IND_HUPO = TrimScrape(18, 23, 12, "INWG", WIViewer)  '[PAC] 10NOV09 TD133652
        End If
    ElseIf IsHostScreen("INAK", WIViewer) Then
        myForm.WFM_NAAM_KLANT = TrimScrape(11, 27, 34, "INAK", WIViewer)
        myForm.WFM_NR_KLANT = TrimScrape(5, 27, 6, "INAK", WIViewer)
        myForm.WFM_NR_POLIS = myForm.WFM_NR_KLANT
        myForm.WFM_NR_AEGAR_KLANT = TrimScrape(9, 27, 9, "INAK", WIViewer)
        myForm.WFM_IND_HUPO = TrimScrape(4, 68, 12, "INAK", WIViewer)
    ElseIf IsHostScreen("INFO", WIViewer) Then
        myForm.WFM_NAAM_KLANT = TrimScrape(11, 27, 34, "INFO", WIViewer)
        myForm.WFM_NR_KLANT = TrimScrape(5, 27, 6, "INFO", WIViewer)
        myForm.WFM_NR_POLIS = myForm.WFM_NR_KLANT
        myForm.WFM_NR_AEGAR_KLANT = TrimScrape(9, 27, 9, "INFO", WIViewer)
        myForm.WFM_IND_HUPO = TrimScrape(4, 68, 12, "INFO", WIViewer)
    ElseIf IsHostScreen("MDVB", WIViewer) Then
        myForm.WFM_NAAM_DLNMR = TrimScrape(2, 50, 32, "MDVB", WIViewer)
        myForm.WFM_NR_POLIS = TrimScrape(4, 15, 10, "MDVB", WIViewer)
        myForm.WFM_SEXE_DLNMR = TrimScrape(9, 41, 1, "MDVB", WIViewer)
        myForm.WFMDGEB_DEELN = TrimScrape(9, 15, 10, "MDVB", WIViewer)
        myForm.WFM_NR_AEGAR = TrimScrape(4, 41, 9, "MDVB", WIViewer)
        myForm.WFM_NR_KLANT = TrimScrape(4, 68, 6, "MDVB", WIViewer)
'       Voor de mutatieformulieren. Daar staat geen hupo in dit scherm
        Exit Sub
    ElseIf IsHostScreen("A703", WIViewer) Then
        myForm.WFM_NAAM_DLNMR = TrimScrape(9, 14, 32, "A703", WIViewer)
        myForm.WFM_NR_POLIS = TrimScrape(4, 14, 8, "A703", WIViewer)
        myForm.WFM_NR_AEGAR = TrimScrape(4, 72, 9, "A703", WIViewer)
        If Len(myForm.WFM_NR_POLIS) > 0 Then myForm.WFM_NR_POLIS = "L-" + myForm.WFM_NR_POLIS
    End If
'   Eerst ff checken of de ind hupo gevuld is..
    If Not myForm.WFM_IND_HUPO = "" Then
    
''Q1 Release 2012 CR No. 153254 Dept Changes
'       KSP blijft een apart iets daar staat nog P&A op 3 tot en met 5
''        If Mid(myForm.WFM_IND_HUPO, 6, 3) = "KSP" Then
''            myForm.WFM_MUT_AFDELING = "KSP"
''            If bBestemming Then
''                myForm.WFM_BESTEMMING = myForm.WFM_MUT_AFDELING
''            End If
''            Exit Sub
'''       Oude hupo code
''        End If
        If WIViewer.CALClientListItem.OpenedItem.Class <> "COLLVORD" Then
            If Mid(myForm.WFM_IND_HUPO, 4, 2) = "" Or Mid(myForm.WFM_IND_HUPO, 4, 2) = "  " Then
                myForm.WFM_MUT_AFDELING = Mid(myForm.WFM_IND_HUPO, 6, 3)
            Else                'Nieuwe ks1 2 3 4 HuPo
'               Checken of ks op positie 5 en 6 staat ?????
                myForm.WFM_MUT_AFDELING = Mid(myForm.WFM_IND_HUPO, 5, 3)
            End If
            If bBestemming Then myForm.WFM_BESTEMMING = myForm.WFM_MUT_AFDELING
        End If
    End If
    Exit Sub

EH:
    MsgBox Error(Err), vbOKOnly, "AlgScreenScraping " & CStr(Err)
End Sub

Public Function IsCollAlg(Class As String) As Boolean
'   Test of class bij postflow hoort
    IsCollAlg = False
    If Class = "COLLALG" Or Class = "COLLDLN" Or _
       Class = "COLLAHC" Or Class = "COLLJWK" Or _
       Class = "COLLFIN" Or Class = "COLLKLT" Or _
       Class = "COLLACT" Or Class = "COLLKJW" Or _
       Class = "COLLKPO" Or Class = "COLLKPE" Or _
       Class = "COLLKLA" Then
        IsCollAlg = True
    End If
End Function

Public Function get_BEHGRP(strIndhupo As String) As String
Dim strleegofniet

'   Check ind_hupo of er een  behandel groep in staat voor KSB en KSC
    strleegofniet = Mid(strIndhupo, 11, 2)
'   Geinig ... werkt ook voor de nieuwe teams..
    If strleegofniet = "" Or strleegofniet = "  " Then
'       Vul dan de behandel groep
        get_BEHGRP = Mid(strIndhupo, 10, 1)
    Else
'       Haal behandel / TEAM  groep op van user account
        get_BEHGRP = CALBehGroepPerUser(strIndhupo)
'       Als er geen team aan de ind hupo hangt halen we het uit de hupo
        If get_BEHGRP = "" Then
            If CALAfdelingPerUser(strIndhupo) <> "PPN" Then
'               Hupo's met 2 spaties zijn "oude" stijl en moeten geen team informatie bevatten.
                If Not Mid(strIndhupo, 4, 2) = "  " Then
                    get_BEHGRP = Mid(strIndhupo, 8, 1)
                End If
            End If
        End If
    End If
    get_BEHGRP = Trim(get_BEHGRP)
End Function

Public Function getTPnaamnummer(myForm As Object)
Dim rsTP                As adodb.Recordset

'   Mabr change dan via screenscrapen klant waarde er in  1 keer in
    On Error GoTo EH
    Set rsTP = SQLGetTPnaamnummer(myForm.WFM_NR_KLANT)
    If Not rsTP Is Nothing Then
        If rsTP.recordCount = -1 Then
            myForm.WFM_NR_TP = RTrim(rsTP("TPnr"))
            myForm.WFM_NAAM_TP = RTrim(rsTP("TPNAAM"))
        End If
    End If
    Exit Function

EH:
    DisplayError "TPnummer"
End Function

Public Sub RenameDocument(myViewer As WorkitemViewer, Optional Tekst As String)
Dim myDoc               As CALDocument
Dim myItem              As CALClientListItem
Dim Naam                As String

    On Error GoTo EH
    If myViewer.Contents.SelectedItems.Count <> 1 Then
        MsgBox "Selecteer eerst maximaal 1 document.", vbExclamation + vbOKOnly
        Exit Sub
    End If
    If myViewer.Contents.SelectedItems.item(1).ItemType <> wdoObjTypeFolderChild Then
        MsgBox "U kunt alleen documenten hernoemen.", vbExclamation + vbOKOnly
        Exit Sub
    End If
    If myViewer.Contents.SelectedItems.item(1).CALObject.Info.Type <> calObjTypeDocument Then
        MsgBox "U kunt alleen documenten hernoemen.", vbExclamation + vbOKOnly
        Exit Sub
    End If
    If Tekst <> Empty Then
        If myViewer.Contents.SelectedItems.item(1).CALObject.Class <> "BRIEF" Then
            MsgBox "U kunt alleen documenten van het type BRIEF hernoemen.", vbExclamation + vbOKOnly
            Exit Sub
        End If
    End If
    If Tekst = Empty Then
        strDoctype = ""
        frmNaamDocument.strClass = Right(myViewer.CALClientListItem.OpenedItem.Class, 3)
        frmNaamDocument.Show 1
        If strDoctype = "" Then Exit Sub
        Naam = strDoctype
    End If
'   Plaats document op de worklist
    Set myItem = CALClient.ClientList.Find(myViewer.Contents.SelectedItems.item(1).CALObject.Info.objId)
    If myItem Is Nothing Then
        Set myItem = Application.CALClient.ClientList.Add(myViewer.Contents.SelectedItems.item(1).CALObject.Info.objId, calAddDomainOnly)
    End If
    If (myItem.Info.Status And calObjStatusOpen) = calObjStatusOpen Then
        myItem.OpenedItem.Close calCloseAbortChanges
    End If
    Set myDoc = myItem.Open(calOpenReadWrite)
    If Naam = Empty Then
        Naam = Left(Trim(myDoc.Info.name), 25) + "." + Tekst
    End If
    myDoc.SetName Naam
'   Remove item weer van de worklist
    myDoc.Save
    myDoc.Close (calCloseSaveChanges)
            
    Application.CALClient.ClientList.Remove myItem
'   De lijst wordt helaas niet reresht. Eerst sluiten
'   en weer openen. Dit mag de gebruiker doen.
    myViewer.Flush
    Exit Sub

EH:
    If DisplayError("Hernoem document") = csESWMErrorResumeNext Then Resume Next
'   Opruimen tijdelijke items
    If Not myDoc Is Nothing Then
        myDoc.Close (calCloseAbortChanges)
    End If
    If Not myItem Is Nothing Then
       Application.CALClient.ClientList.Remove myItem
    End If
End Sub

Function CreateAndCopyFolder(fld As CALFolder, sNaamPartner As String, sNrAegarPartner As String, sKenmerk As String) As Boolean
'  Create a new folder
'  copy the values of the original item to the new item.
'  set the new serial nr.
'  link the documents in the old folder to the new folder.
'  send the new folder into workflow.
Dim sVal                As String
Dim NewCli              As CALClientListItem
Dim NewFld              As CALFolder
Dim er, nMaxVolgNr      As Integer
Dim sPolisNr, sVolgNr

    On Error GoTo EH
    If sKenmerk = "PEN" And fld.Class = "COLLOVL" Then
        sKenmerk = "OVL"
    End If
    CreateAndCopyFolder = False
    sPolisNr = CALGetFieldValue(fld, "NR_POLIS")
    nMaxVolgNr = GetMaxVolgNr(sPolisNr, sKenmerk)
    sVolgNr = Format(nMaxVolgNr + 1)
    sVal = sPolisNr + sKenmerk + sVolgNr
'   Creer nieuwe Folder
    If InStr("AFD*AFE", UCase(sKenmerk)) > 0 Then   'AFD en AFE behoren tot class COLLPEN
        Set NewCli = CALCreateFolder(sVal, "COLLPEN")
    Else
        Set NewCli = CALCreateFolder(sVal, "COLL" & sKenmerk)
    End If
    Set NewFld = CALOpenFolder(NewCli, True)
'   Copieer de formvelden naar het nieuwe Folder.
    Call CALCopyFieldVals(fld, NewFld)
    Call CALSetFieldValue(NewFld, "ZK_VOLGNR", sVolgNr)
    Call CALSetFieldValue(NewFld, "AANTAL_ZAKEN", "1")
    Call CALSetFieldValue(NewFld, "ZAAK_IDENT_NR", sVal)
    Call CALSetFieldValue(NewFld, "IND_TRIGGER", sKenmerk)
    If sKenmerk = "WZP" Then
        Call CALSetFieldValue(NewFld, "NAAM_WEES_ZAAK", sNaamPartner)
        Call CALSetFieldValue(NewFld, "WEES_AEGARNR", sNrAegarPartner)
    Else
        Call CALSetFieldValue(NewFld, "NAAM_PARTNER_ZAAK", sNaamPartner)
        Call CALSetFieldValue(NewFld, "NR_AEGAR_PARTNER", sNrAegarPartner)
    End If
    Call CALSetFieldValue(NewFld, "AANTAL_PARTNERS", "0")
    Call CALSetFieldValue(NewFld, "ZAAK_VLGNR_MEMO", "")
'   JN_OVD_INVOEREN wordt ook gebruikt voor OVE/BME. Leegmaken dus.
    Call CALSetFieldValue(NewFld, "JN_OVD_INVOEREN", "")
    Call CALSetFieldValue(NewFld, "JN_VERV_BRIEF_AANG", "")
    If InStr("AFD*AFE", UCase(sKenmerk)) > 0 Then       'Bij AFD en AFE moet het veld wel gevuld worden.
        Call CALSetFieldValue(NewFld, "JN_VERV_BRIEF_AANG", "N")
    End If
    Call CALLinkFolderChilds(fld, NewFld)
    Call CALSave(NewFld)
    Call CALClose(NewFld)
    Call CALSendClientItemToQ(NewCli, fld.Info.SourceWorkstep)
    CreateAndCopyFolder = True
    Exit Function

EH:
    DisplayError "CreateAndCopyFolder"
'   Verwijderen eventueel al aangemaakte folder
    If Not NewCli Is Nothing Then
        If Not NewFld Is Nothing Then
            If ((NewFld.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
                NewFld.Close calCloseAbortChanges
            End If
        End If
        Application.CALClient.ClientList.Remove NewCli
    End If
End Function

Function GetMaxVolgNr(ByVal sDeelNemer As String, ByVal sKenmerk As String) As Integer
' Haal het hoogste bekende zaak volgnummer op, voor de gegeven
' deelnemernr (NR_POLIS) en kenmerk (IND_TRIGGER).
Dim QyFields            As CALIndexFields
Dim QyRes               As CALQueryResults
Dim i                   As Integer
Dim nVolgNr             As Integer
Dim nMax                As Integer
Dim sVolgNr             As String

    Set QyFields = CreateObject("CALSERV.CALIndexFields")
    QyFields.Value("NR_POLIS") = sDeelNemer
    QyFields.Value("IND_TRIGGER") = sKenmerk
    QyFields.Value("ZK_VOLGNR") = ""
    Set QyRes = CALClient.Query("", calObjTypeFolder, calLocationDomain, calMaxItemsAll, QyFields)
    nMax = 0
    For i = 1 To QyRes.Count
        sVolgNr = CALGetListResultField(QyRes, i, "ZK_VOLGNR")
        If Asc(sVolgNr) >= Asc("A") Then
            nVolgNr = 10 + Asc(sVolgNr) - Asc("A")
        Else
            nVolgNr = Val(sVolgNr)
        End If
        If nVolgNr > nMax Then nMax = nVolgNr
    Next
    GetMaxVolgNr = nMax
End Function

Public Sub SetInbox4Default()
Dim myWSContents        As WorkDesk.WorksetContents

    Set myWSContents = Application.Desktop.WorksetContents
    myWSContents.RemoveAllColumns
    Select Case CALGetUserVar("Afdeling", CALClient.username)
        Case ""
             myWSContents.AddColumn "Name", "Naam", wdoAlignmentLeft, 2000, wdoWSCColTypeSystem
             myWSContents.AddColumn "NR_KLANT", "NR_KLANT", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "NAAM_KLANT", "NAAM_KLANT", wdoAlignmentLeft, 2000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "NAAM_DLNMR", "NAAM_DLNMR", wdoAlignmentLeft, 2000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "ZAAK_VLGNR_MEMO", "ZAAK_VLGNR_MEMO", wdoAlignmentLeft, 1700, wdoWSCColTypeInboxView
             myWSContents.AddColumn "BEHANDELAAR", "BEHANDELAAR", wdoAlignmentLeft, 1300, wdoWSCColTypeInboxView
             myWSContents.AddColumn "IND_HUPO", "IND_HUPO", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR14", "CWIBehGroep", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "TimeStamp", "Tijd", wdoAlignmentLeft, 2000, wdoWSCColTypeSystem
             myWSContents.AddColumn "DAT_DOC", "DAT_DOC", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR4", "Rap dat1", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR5", "Rap dat2", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR9", "STRVAR9", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR10", "STRVAR10", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "REDEN_PARKEREN", "REDEN_PARKEREN", wdoAlignmentLeft, 1600, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR8", "STRVAR8", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "WERKSRT", "WERKSRT", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "WERKTYPE", "WERKTYPE", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
        Case "FEP"
             myWSContents.AddColumn "Name", "Naam", wdoAlignmentLeft, 2000, wdoWSCColTypeSystem
             myWSContents.AddColumn "NAAM_DLNMR", "NAAM_DLNMR", wdoAlignmentLeft, 2000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR9", "!", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR10", "*", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "PRIORITY", "PRIORITY", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "WERKTYPE", "WERKTYPE", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "DAT_INGANG", "DAT_INGANG", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR4", "Einddat", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "BEHANDELAAR", "BEHANDELAAR", wdoAlignmentLeft, 1300, wdoWSCColTypeInboxView
             myWSContents.AddColumn "TimeStamp", "Tijd", wdoAlignmentLeft, 2000, wdoWSCColTypeSystem
             myWSContents.AddColumn "REDEN_PARKEREN", "REDEN_PARKEREN", wdoAlignmentLeft, 1600, wdoWSCColTypeInboxView
             myWSContents.AddColumn "ZAAK_VLGNR_MEMO", "ZAAK_VLGNR_MEMO", wdoAlignmentLeft, 1700, wdoWSCColTypeInboxView
             myWSContents.AddColumn "RAPPEL", "RAPPEL", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "DAT_DOC", "DAT_DOC", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
''Q1 Release 2012 CR No. 153254 Dept Changes
        Case "PTA", "PTB", "FND", "PTC", "PTD", "PPI", "FAL", "PTE", "PTF", "PTG", "PTH", "APP", "PTI", "PTL", "PTR"  '[PAC] 17MAR15 - PTN --> APP - TD172461 - TD17266
             myWSContents.AddColumn "Name", "Naam", wdoAlignmentLeft, 2000, wdoWSCColTypeSystem
             myWSContents.AddColumn "NR_KLANT", "NR_KLANT", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "NAAM_KLANT", "NAAM_KLANT", wdoAlignmentLeft, 2000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "NAAM_DLNMR", "NAAM_DLNMR", wdoAlignmentLeft, 2000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "ZAAK_VLGNR_MEMO", "ZAAK_VLGNR_MEMO", wdoAlignmentLeft, 1700, wdoWSCColTypeInboxView
             myWSContents.AddColumn "BEHANDELAAR", "BEHANDELAAR", wdoAlignmentLeft, 1300, wdoWSCColTypeInboxView
             myWSContents.AddColumn "IND_HUPO", "IND_HUPO", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR14", "Team", wdoAlignmentLeft, 700, wdoWSCColTypeInboxView
             myWSContents.AddColumn "TimeStamp", "Tijd", wdoAlignmentLeft, 2000, wdoWSCColTypeSystem
             myWSContents.AddColumn "DAT_DOC", "DAT_DOC", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR4", "Einddat", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR5", "Park.dat", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR9", "!", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR10", "*", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "REDEN_PARKEREN", "REDEN_PARKEREN", wdoAlignmentLeft, 1600, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR8", "Park.srt", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "WERKSRT", "WERKSRT", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "WERKTYPE", "WERKTYPE", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
        Case "PAC"
             myWSContents.AddColumn "STRVAR9", "Rap einddat", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR10", "Rap park.dat", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "Name", "Naam", wdoAlignmentLeft, 2000, wdoWSCColTypeSystem
             myWSContents.AddColumn "NAAM_DLNMR", "NAAM_DLNMR", wdoAlignmentLeft, 2000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR4", "Einddatum", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "BEHANDELAAR", "BEHANDELAAR", wdoAlignmentLeft, 1300, wdoWSCColTypeInboxView
             myWSContents.AddColumn "DOC_BRON", "DOC_BRON", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "ZAAK_VLGNR_MEMO", "ZAAK_VLGNR_MEMO", wdoAlignmentLeft, 1700, wdoWSCColTypeInboxView
             myWSContents.AddColumn "PRIORITY", "PRIORITY", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "WERKSRT", "WERKSRT", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "WERKTYPE", "WERKTYPE", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR5", "Park.datum", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
        Case "PIN"
             myWSContents.AddColumn "Name", "Naam", wdoAlignmentLeft, 2000, wdoWSCColTypeSystem
             myWSContents.AddColumn "NR_KLANT", "NR_KLANT", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "NAAM_KLANT", "NAAM_KLANT", wdoAlignmentLeft, 2000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "NAAM_DLNMR", "NAAM_DLNMR", wdoAlignmentLeft, 2000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "ZAAK_VLGNR_MEMO", "ZAAK_VLGNR_MEMO", wdoAlignmentLeft, 1700, wdoWSCColTypeInboxView
             myWSContents.AddColumn "BEHANDELAAR", "BEHANDELAAR", wdoAlignmentLeft, 1300, wdoWSCColTypeInboxView
             myWSContents.AddColumn "IND_HUPO", "IND_HUPO", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR14", "CWIBehGroep", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "TimeStamp", "Tijd", wdoAlignmentLeft, 2000, wdoWSCColTypeSystem
             myWSContents.AddColumn "DAT_DOC", "DAT_DOC", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR12", "Div.post", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "REDEN_PARKEREN", "REDEN_PARKEREN", wdoAlignmentLeft, 1600, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR8", "STRVAR8", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "WERKSRT", "WERKSRT", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "WERKTYPE", "WERKTYPE", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
        Case "DEB"
             myWSContents.AddColumn "Name", "Naam", wdoAlignmentLeft, 2000, wdoWSCColTypeSystem
             myWSContents.AddColumn "STRVAR12", "Deb.Behandel.", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "NR_KLANT", "NR_KLANT", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "NAAM_KLANT", "NAAM_KLANT", wdoAlignmentLeft, 3000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR1", "Totaal_RC_DC", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR2", "Tot.RC Txt", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "INTVAR1", "Tot.RC Int", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "ZAAK_VLGNR_MEMO", "ZAAK_VLGNR_MEMO", wdoAlignmentLeft, 1700, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR13", "DOORZENDEN_NAAR", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "BEHANDELAAR", "Relatiebeh.", wdoAlignmentLeft, 1300, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR4", "H_Aanmaancode", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "REDEN_PARKEREN", "REDEN_PARKEREN", wdoAlignmentLeft, 1600, wdoWSCColTypeInboxView
             myWSContents.AddColumn "RAPPEL", "Park.dd", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR11", "BlokkadeDatum", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR5", "folderdd", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR15", "AVDStatus", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR7", "AVDDatum", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "NR_AEGAR", "NR_AEGAR", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "TimeStamp", "Tijd", wdoAlignmentLeft, 2000, wdoWSCColTypeSystem
             myWSContents.AddColumn "STRVAR3", "Belangr_Deb_Status", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR14", "BEH_GROEP", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR8", "Reden_Archief", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR9", "InTXTfile", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR10", "UitGereedBAK", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
        Case "VOR"
             myWSContents.AddColumn "Name", "Naam", wdoAlignmentLeft, 2000, wdoWSCColTypeSystem
             myWSContents.AddColumn "STRVAR2", "Schuldbedrag", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "INTVAR1", "Schuldbedr. Int", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "PRIORITY", "Prioriteit", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR8", "Melddatum", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "ZAAK_VLGNR_MEMO", "ZAAK_VLGNR_MEMO", wdoAlignmentLeft, 1700, wdoWSCColTypeInboxView
             myWSContents.AddColumn "REDEN_PARKEREN", "REDEN_PARKEREN", wdoAlignmentLeft, 1600, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR1", "Dat. Brief", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "RAPPEL", "Rappel.dd", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR4", "Rap_dat1", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR5", "Rap_dat2", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR6", "FEP_BEHANDELAAR", wdoAlignmentLeft, 1300, wdoWSCColTypeInboxView
             myWSContents.AddColumn "BEHANDELAAR", "BEHANDELAAR", wdoAlignmentLeft, 1300, wdoWSCColTypeInboxView
             myWSContents.AddColumn "NR_AEGAR", "NR_AEGAR", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "TimeStamp", "Tijd", wdoAlignmentLeft, 2000, wdoWSCColTypeSystem
             myWSContents.AddColumn "STRVAR12", "BVBA Werkstaptijd", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR13", "DOORZENDEN_NAAR", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR14", "BEH_GROEP", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR9", "CODE", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR10", "Beg NR", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR11", "COLL NR", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
        Case Else
             myWSContents.AddColumn "Name", "Naam", wdoAlignmentLeft, 2000, wdoWSCColTypeSystem
             myWSContents.AddColumn "NR_KLANT", "NR_KLANT", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "NAAM_KLANT", "NAAM_KLANT", wdoAlignmentLeft, 2000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "NAAM_DLNMR", "NAAM_DLNMR", wdoAlignmentLeft, 2000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "ZAAK_VLGNR_MEMO", "ZAAK_VLGNR_MEMO", wdoAlignmentLeft, 1700, wdoWSCColTypeInboxView
             myWSContents.AddColumn "BEHANDELAAR", "BEHANDELAAR", wdoAlignmentLeft, 1300, wdoWSCColTypeInboxView
             myWSContents.AddColumn "IND_HUPO", "IND_HUPO", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR14", "CWIBehGroep", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "TimeStamp", "Tijd", wdoAlignmentLeft, 2000, wdoWSCColTypeSystem
             myWSContents.AddColumn "DAT_DOC", "DAT_DOC", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR4", "Rap dat1", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR5", "Rap dat2", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR9", "STRVAR9", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR10", "STRVAR10", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "REDEN_PARKEREN", "REDEN_PARKEREN", wdoAlignmentLeft, 1600, wdoWSCColTypeInboxView
             myWSContents.AddColumn "STRVAR8", "STRVAR8", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "WERKSRT", "WERKSRT", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
             myWSContents.AddColumn "WERKTYPE", "WERKTYPE", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    End Select
    Application.Desktop.WorksetContents.RefreshColumns
End Sub

Public Sub SetInbox4AllColumns()
Dim myWSContents        As WorkDesk.WorksetContents

    Set myWSContents = Application.Desktop.WorksetContents
    myWSContents.RemoveAllColumns
    myWSContents.AddColumn "Name", "Naam", wdoAlignmentLeft, 2000, wdoWSCColTypeSystem
    myWSContents.AddColumn "TimeStamp", "Tijd", wdoAlignmentLeft, 2000, wdoWSCColTypeSystem
    myWSContents.AddColumn "AANTAL_PARTNERS", "AANTAL_PARTNERS", wdoAlignmentLeft, 1700, wdoWSCColTypeInboxView
    myWSContents.AddColumn "ADRES_DLNMR", "ADRES_DLNMR", wdoAlignmentLeft, 1300, wdoWSCColTypeInboxView
    myWSContents.AddColumn "ADRES_PENS_NW", "ADRES_PENS_NW", wdoAlignmentLeft, 1500, wdoWSCColTypeInboxView
    myWSContents.AddColumn "ADRES_PENS_OUD", "ADRES_PENS_OUD", wdoAlignmentLeft, 1600, wdoWSCColTypeInboxView
    myWSContents.AddColumn "BATCHNUMMER", "BATCHNUMMER", wdoAlignmentLeft, 1400, wdoWSCColTypeInboxView
    myWSContents.AddColumn "BEHANDELAAR", "BEHANDELAAR", wdoAlignmentLeft, 1300, wdoWSCColTypeInboxView
    myWSContents.AddColumn "DAT_DOC", "DAT_DOC", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
    myWSContents.AddColumn "DAT_INGANG", "DAT_INGANG", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
    myWSContents.AddColumn "DOCTYPE", "DOCTYPE", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "DOCUMENTNUMMER", "DOCUMENTNUMMER", wdoAlignmentLeft, 1700, wdoWSCColTypeInboxView
    myWSContents.AddColumn "IND_HUPO", "IND_HUPO", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
    myWSContents.AddColumn "IND_TRIGGER", "IND_TRIGGER", wdoAlignmentLeft, 1300, wdoWSCColTypeInboxView
    myWSContents.AddColumn "INFO_PENS_NW", "INFO_PENS_NW", wdoAlignmentLeft, 1400, wdoWSCColTypeInboxView
    myWSContents.AddColumn "INFO_PENS_OUD", "INFO_PENS_OUD", wdoAlignmentLeft, 1500, wdoWSCColTypeInboxView
    myWSContents.AddColumn "NAAM_DLNMR", "NAAM_DLNMR", wdoAlignmentLeft, 1300, wdoWSCColTypeInboxView
    myWSContents.AddColumn "NAAM_KLANT", "NAAM_KLANT", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
    myWSContents.AddColumn "NAAM_PARTNER_ZAAK", "NAAM_PARTNER_ZAAK", wdoAlignmentLeft, 1900, wdoWSCColTypeInboxView
    myWSContents.AddColumn "NAAM_PENS_NW", "NAAM_PENS_NW", wdoAlignmentLeft, 1500, wdoWSCColTypeInboxView
    myWSContents.AddColumn "NAAM_PENS_OUD", "NAAM_PENS_OUD", wdoAlignmentLeft, 1500, wdoWSCColTypeInboxView
    myWSContents.AddColumn "NAAM_TP", "NAAM_TP", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "NR_AEGAR", "NR_AEGAR", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "NR_KLANT", "NR_KLANT", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "NR_POLIS", "NR_POLIS", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "NR_TP", "NR_TP", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "PA_DLNMR", "PA_DLNMR", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "PO_WOON_DLNMR", "PO_WOON_DLNMR", wdoAlignmentLeft, 1700, wdoWSCColTypeInboxView
    myWSContents.AddColumn "POSTC_PENS_NW", "POSTC_PENS_NW", wdoAlignmentLeft, 1500, wdoWSCColTypeInboxView
    myWSContents.AddColumn "POSTC_PENS_OUD", "POSTC_PENS_OUD", wdoAlignmentLeft, 1600, wdoWSCColTypeInboxView
    myWSContents.AddColumn "RAPPEL", "RAPPEL", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "REDEN_PARKEREN", "REDEN_PARKEREN", wdoAlignmentLeft, 1600, wdoWSCColTypeInboxView
    myWSContents.AddColumn "WERKSOORT", "WERKSOORT", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
    myWSContents.AddColumn "WERKSRT", "WERKSRT", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "WERKTYPE", "WERKTYPE", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "ZAAK_IDENT_NR", "ZAAK_IDENT_NR", wdoAlignmentLeft, 1500, wdoWSCColTypeInboxView
    myWSContents.AddColumn "ZAAK_VLGNR_MEMO", "ZAAK_VLGNR_MEMO", wdoAlignmentLeft, 1700, wdoWSCColTypeInboxView
    myWSContents.AddColumn "ZK_VOLGNR", "ZK_VOLGNR", wdoAlignmentLeft, 1100, wdoWSCColTypeInboxView
    myWSContents.AddColumn "STRVAR1", "Eerste brief", wdoAlignmentLeft, 1100, wdoWSCColTypeInboxView
    myWSContents.AddColumn "STRVAR2", "Zaaknr", wdoAlignmentLeft, 1400, wdoWSCColTypeInboxView
    myWSContents.AddColumn "STRVAR4", "Rap dat1", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
    myWSContents.AddColumn "STRVAR5", "Rap dat2", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
    myWSContents.AddColumn "STRVAR6", "TM", wdoAlignmentLeft, 1300, wdoWSCColTypeInboxView
    myWSContents.AddColumn "STRVAR7", "Kenmerk", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "STRVAR8", "STRVAR8", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "STRVAR9", "STRVAR9", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "STRVAR10", "STRVAR10", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "STRVAR11", "STRVAR11", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "STRVAR12", "Hupo_acm", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "STRVAR13", "CWIAfdeling", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
    myWSContents.AddColumn "STRVAR14", "CWIBehGroep", wdoAlignmentLeft, 1200, wdoWSCColTypeInboxView
    myWSContents.AddColumn "STRVAR15", "Pen omschr", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "INTVAR1", "Oorspr werkstap", wdoAlignmentLeft, 1400, wdoWSCColTypeInboxView
    myWSContents.AddColumn "INTVAR2", "Hold Expiration", wdoAlignmentLeft, 1300, wdoWSCColTypeInboxView
    myWSContents.AddColumn "INTVAR3", "Klantnr", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "INTVAR4", "BP", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "INTVAR5", "TP nr", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "INTVAR6", "Pen import", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    myWSContents.AddColumn "INTVAR7", "VIP", wdoAlignmentLeft, 1000, wdoWSCColTypeInboxView
    Application.Desktop.WorksetContents.RefreshColumns
End Sub

Public Sub Escalatie(ByVal Viewer As WFDWorkitem.WorkitemViewer, EscWorkstep)
Dim myQueue             As New CALQueue

'   Mogelijkheid om items te escaleren naar een andere workstep
'   Dit is gewenst indien een gebruiker niet verder kan
'   met een workitem. Hij kan deze dan escaleren. Een beheerder
'   kan dit item dan verplaatsen naar een andere workstep
'   Add notitie
    If IsCollAlg(Viewer.CALClientListItem.OpenedItem.Class) Then
        MsgBox "U kunt vanuit deze workflow niet escaleren", vbCritical, "Escaleren"""
        Exit Sub
    End If
    geannuleerd = False
    geannuleerd = createNote(Viewer, "E")
    If geannuleerd = False Then Exit Sub
    Viewer.Save
    
    'Commented for EX9.21 Nl on Vista as it gives an Invalid Handler passed error
    'Viewer.CALClientListItem.OpenedItem.Close (calCloseSaveChanges)
    'Comment ends
    'Comment - replacement code as suggested by Global360
    Viewer.CALClientListItem.OpenedItem.Save
    Viewer.CALClientListItem.OpenedItem.Close (calCloseAbortChanges)
    'Comment ends - replacement code as suggested by Global360
    
'   Send the document to this Workstep
    myQueue.Client = Application.CALClient
    myQueue.name = EscWorkstep
    myQueue.Type = calQueueTypeWorkstep
    Viewer.CALClientListItem.Send myQueue, calSendDiscard
    Viewer.TryClose wdoForceCloseSaveChanges
End Sub

Public Sub Verplaatsen(ByVal Viewer As WFDWorkitem.WorkitemViewer)
' Mogelijkheid om items naar andere workstep te verplaatsen
' Dit is gewenst indien een gebruiker niet verder kan
' met een workitem.
Dim Workstepname        As String
Dim myQueue             As New CALQueue
Dim vanWorkstep         As String

    Workstepname = GetWorkstep(Viewer)
    If InStr(Workstepname, "Escalaties") = 0 Then
        WorkflowSave Viewer
    End If
    If Viewer.CALClientListItem.OpenedItem.Class = "COLL" Then
        If Viewer.Fields.Find("DAT_DOC").CALFormField.Value = "" Then
             MsgBox "Om een document te verplaatsen moet het datum doc zijn ingevuld.", vbOKOnly + vbExclamation
              Exit Sub
        End If
    End If
    If Viewer.CALClientListItem.OpenedItem.Class = "COLLKLA" Then
        MsgBox "Klachten kunnen niet verplaatst worden.", vbOKOnly + vbExclamation
              Exit Sub
    End If
    Set frmVerplaatsen.WorkitemViewer = Viewer
    frmVerplaatsen.Show vbModal
    Unload frmVerplaatsen

    If VerplaatsenWorkStep = Empty Then
        Exit Sub
    ElseIf Viewer.CALClientListItem.OpenedItem.Class = "COLL" Or IsCollAlg(Viewer.CALClientListItem.OpenedItem.Class) Then

'[PAC] - TD169077
            If (VerplaatsenWorkStep = "REG90 Archief" Or VerplaatsenWorkStep = "REG95 Archief") And _
                UCase(Viewer.Fields.Find("WERKSOORT").CALFormField.Value) = "INF" Then
                If UCase(Viewer.Fields.Find("WERKTYPE").CALFormField.Value) = "" Then
                    MsgBox "Veld Werktype van dit Informatieverzoek is niet ingevuld.", vbOKOnly + vbExclamation
                    Exit Sub
                ElseIf (UCase(Viewer.Fields.Find("WERKTYPE").CALFormField.Value) = "IFK" Or _
                        UCase(Viewer.Fields.Find("WERKTYPE").CALFormField.Value) = "IFU") Then
                        If Viewer.ObjType = calObjTypeDocument Then
                           MsgBox ("Dit Document kan NIET rechtstreeks doorgezonden worden naar het Archief." & vbCrLf & _
                                   "Gebruik de knop Doorsturen om eerst een Folder aan te maken."), vbOKOnly + vbExclamation
                        Else
                           MsgBox ("Deze Folder kan NIET rechtstreeks doorgezonden worden naar het Archief." & vbCrLf & _
                                   "Beantwoord de vraag 'Informatieverzoek afgehandeld'."), vbOKOnly + vbExclamation
                        End If
                    Exit Sub
                End If
            End If
'[PAC] - TD169077

        If Not Viewer.Fields.Find("BEHEER_ID").CALFormField.Value = "" And VerplaatsenWorkStep = "Verwijderen" Then
             MsgBox "kan verwijderen niet BeheernetID waarde is niet leeg", vbOKOnly + vbExclamation
              Exit Sub
        End If
    End If
    Viewer.Save
    
    'Commented for EX9.21 Nl on Vista as it gives an Invalid Handler passed error
    'Viewer.CALClientListItem.OpenedItem.Close (calCloseSaveChanges)
    'Comment ends
    'Comment - replacement code as suggested by Global360
    Viewer.CALClientListItem.OpenedItem.Save
    Viewer.CALClientListItem.OpenedItem.Close (calCloseAbortChanges)
    'Comment ends - replacement code as suggested by Global360
    
    myQueue.Client = Application.CALClient
    myQueue.name = VerplaatsenWorkStep
    myQueue.Type = calQueueTypeWorkstep
    Viewer.CALClientListItem.Send myQueue, calSendDiscard
    Viewer.TryClose wdoForceCloseSaveChanges
End Sub

Public Function findItemInRV(ByVal Viewer As WFDWorkitem.WorkitemViewer) As Boolean
Dim objList             As CALWorkitemWorkstepList
Dim strWorkstepname     As String

    On Error GoTo EH
    Set objList = CALClient.FindInWorkflow(Viewer.CALClientListItem.Info.objId)
    If Not objList.Count = 0 Then
        strWorkstepname = objList.item(1).Info.SourceWorkstep
        findItemInRV = IsRendezvous(strWorkstepname)
    End If
    Exit Function

EH:
    DisplayError "Finditem in RV"
End Function

Public Function escalatieRVItem(ByVal Viewer As WFDWorkitem.WorkitemViewer) As Boolean
Dim objList             As CALWorkitemWorkstepList
Dim objEnum             As CALEnumItem
Dim objClientListItem   As CALClientListItem
Dim ObjIdRVitem         As CALObjID

    On Error GoTo EH
    Set objList = CALClient.FindInWorkflow(Viewer.CALClientListItem.Info.objId)
'   Remove
    Set ObjIdRVitem = Viewer.CALClientListItem.Info.objId
    Set objClientListItem = Application.CALClient.ClientList.Find(ObjIdRVitem)
    Viewer.TryClose wdoForceCloseSaveChanges
        
    'Commented for EX9.21 Nl on Vista as it gives an Invalid Handler passed error
    'objClientListItem.OpenedItem.Close calCloseSaveChanges
    'Comment ends
    'Comment - replacement code as suggested by Global360
    objClientListItem.OpenedItem.Save
    objClientListItem.OpenedItem.Close (calCloseAbortChanges)
    'Comment ends - replacement code as suggested by Global360
    
    Application.CALClient.ClientList.Remove objClientListItem
'   Weer ophalen
    Set objEnum = objList.item(1)
    Set objClientListItem = objEnum.Retrieve(calRetrieveRetain)
'   Doorsturen
    Call CALSendClientItemToQ(objClientListItem, "Escalaties")
'   clean
    Set ObjIdRVitem = Nothing
    Set objClientListItem = Nothing
    Set objList = Nothing
    Exit Function

EH:
    DisplayError "Finditem in RV"
End Function

Public Sub VerplaatsenNaarParkeerstap(ByVal Viewer As WFDWorkitem.WorkitemViewer)
Dim myQueue             As New CALQueue
Dim myFldFF             As CALFormFields
Dim Workstepname        As String
Dim naarWorkstep        As String
Dim strINTVERT          As String
Dim waardeINTVERT       As String
Dim FlowNr              As String

    Workstepname = GetWorkstep(Viewer)
    FlowNr = Left(Workstepname, 3)
    CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "WORKSTEP_NAAM", Workstepname
    strINTVERT = "INTVERT"
    If Viewer.CALClientListItem.OpenedItem.Class = "COLLBWO" Then strINTVERT = "Intvert"
    waardeINTVERT = CALGetFieldValue(Viewer.CALClientListItem.OpenedItem, strINTVERT)
    If waardeINTVERT <> "" Then
        CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "REDEN_PARKEREN", waardeINTVERT
    End If
    CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "RAPPEL", InfoRappeldat
    InfoRappeldat = ""
    naarWorkstep = FindParkeerstapForProces(FlowNr)
    If naarWorkstep = "route" Then Exit Sub
    If Workstepname = "98A03 Div. post" Then naarWorkstep = "98A04 Prk Div. Post"
    If Workstepname = "98A21 Beoord Onvindb" Then naarWorkstep = "98A22 Prk Onvindb"
    If Workstepname = "98D10 Beoordelen DVL" Then naarWorkstep = "98D12 Parkeren DVL"
    If Workstepname = "98O10 Beoordelen OVL" Then naarWorkstep = "98O12 Parkeren OVL"
    If Workstepname = "98P07 Voorber. PEN" Or _
       Workstepname = "98P09 Fiat. Voorber." Then naarWorkstep = "98P08 Prk Voorb. PEN"
    Viewer.Save
    
    'Commented for EX9.21 Nl on Vista as it gives an Invalid Handler passed error
    'Viewer.CALClientListItem.OpenedItem.Close (calCloseSaveChanges)
    'Comment ends
    'Comment - replacement code as suggested by Global360
    Viewer.CALClientListItem.OpenedItem.Save
    Viewer.CALClientListItem.OpenedItem.Close (calCloseAbortChanges)
    'Comment ends - replacement code as suggested by Global360
    
    myQueue.Client = Application.CALClient
    myQueue.name = naarWorkstep
    myQueue.Type = calQueueTypeWorkstep
    Viewer.CALClientListItem.Send myQueue, calSendDiscard
    Viewer.TryClose wdoForceCloseSaveChanges
End Sub

Public Function FindParkeerstapForProces(nrFlow As String) As String
'   Mogelijkheid om items naar andere workstep te verplaatsen
'   Dit is gewenst indien een gebruiker niet verder kan
'   met een workitem.
'   decentrale flows left(nrflow, 1)
    Select Case nrFlow
        Case Is = "90A"
             FindParkeerstapForProces = "90A10 Prk Beoord."
        Case Is = "91V"
             FindParkeerstapForProces = "91V11 Prk Volledig"
        Case Is = "98O"
             FindParkeerstapForProces = "98O12 Parkeren OVL"
        Case Is = "98P"
             FindParkeerstapForProces = "98P08 Prk Voorb. PEN"
        Case Is = "99U"
             FindParkeerstapForProces = "99U06 Parkeren"
        Case Is = "99B"
             FindParkeerstapForProces = "99B06 Parkeren"
        Case Is = "98W"
             FindParkeerstapForProces = "98W06 Prk. WZP"
        Case Is = "98A"
             FindParkeerstapForProces = "98A31 Prk Afhand."
        Case Is = "98K"
             FindParkeerstapForProces = "98K11 Prk Beoord Kap"
        Case Is = "98C"
             FindParkeerstapForProces = "98C21 Prk keuze"
        Case Is = "33A"
             FindParkeerstapForProces = "33A16 Parkeren"
'        Case Is = "92K"
             FindParkeerstapForProces = "route"
'        Case Is = "94A"  'FEP
'             FindParkeerstapForProces = "route"
    End Select
End Function

Public Sub VerplaatsenVanuitParkeerstap(ByVal Viewer As WFDWorkitem.WorkitemViewer, naarWorkstep As String)
Dim myQueue             As New CALQueue

    WorkflowSave Viewer
    myQueue.Client = Application.CALClient
    myQueue.name = naarWorkstep
    myQueue.Type = calQueueTypeWorkstep
    
    'Commented for EX9.21 Nl on Vista as it gives an Invalid Handler passed error
    'Viewer.CALClientListItem.OpenedItem.Close (calCloseSaveChanges)
    'Comment ends
    'Comment - replacement code as suggested by Global360
    Viewer.CALClientListItem.OpenedItem.Save
    Viewer.CALClientListItem.OpenedItem.Close (calCloseAbortChanges)
    'Comment ends - replacement code as suggested by Global360
    
    Viewer.CALClientListItem.Send myQueue, calSendDiscard
    Viewer.TryClose wdoForceCloseSaveChanges
End Sub

Public Sub CheckOpUitzondering(ByVal Viewer As WFDWorkitem.WorkitemViewer, Optional ByRef objTextbox As TextBox, Optional ByRef strNewKlantnr As String)
' Voor een aantal werkstappen in combinatie met klant zijn
' uitzonderingen in een database opgenomen.
' Bij openen van een worktitem vanuit een inbox of
' na keuze van de menuoptie/button BIJZONDERHEDEN worden
' uitzonderingen getoond.
Dim KlantNr
Dim CurrWorkstep
Dim Workstepname
Dim Omschrijving
Dim WFMViewerField      As WFDWorkitem.Field
Dim contract
Dim regeling
Dim pakket
Dim Status

    CurrWorkstep = Viewer.CALClientListItem.Info.SourceWorkstep
    Set WFMViewerField = Viewer.Fields.Find("NR_KLANT")
    If WFMViewerField Is Nothing Then
        Err.Raise 12345, , "NR_KLANT not found "
        Exit Sub
    End If
    KlantNr = WFMViewerField.CALFormField.Value
    If KlantNr = "" And Not IsMissing(strNewKlantnr) Then
        KlantNr = strNewKlantnr
    End If
'   Waarden ophalen voor Contract, Regeling, Pakket en Status (De velden kunnen leeg zijn).
'   Contract
    Set WFMViewerField = Viewer.Fields.Find("NR_CONTRACT")
    If Not WFMViewerField Is Nothing Then contract = WFMViewerField.CALFormField.Value
'   Regeling
    Set WFMViewerField = Viewer.Fields.Find("REGELING")
    If Not WFMViewerField Is Nothing Then regeling = WFMViewerField.CALFormField.Value
'   Pakket
    Set WFMViewerField = Viewer.Fields.Find("PAKKETNRS")
    If Not WFMViewerField Is Nothing Then pakket = WFMViewerField.CALFormField.Value
'   Status
    Set WFMViewerField = Viewer.Fields.Find("DVB_STATUS")
    If Not WFMViewerField Is Nothing Then Status = WFMViewerField.CALFormField.Value
'   Check in de database
    Omschrijving = SQLCheckUitzonderingII(KlantNr, CurrWorkstep, contract, regeling, pakket, Status)
'   Toon uitzonderings omschrijving indien aanwezig
    If Not Omschrijving = "" Then
        If Not objTextbox Is Nothing Then
            objTextbox.Text = Omschrijving
'           Mabr als al een keer getoond niet nogmaals tonen
'           wel weer dubbele querie qua performance...
            Exit Sub
        End If
'       De variabelen van de WFM (COLLPEN) zaak vermelden
        If Viewer.CALClientListItem.OpenedItem.Class = "COLLPEN" Then
            Omschrijving = Omschrijving & "Criteria WFM zaak:" & vbCrLf
            Omschrijving = Omschrijving & "Status= " & Status & ", Contract= " & contract & ", Regeling= " & regeling & ", Pakket= " & pakket & vbCrLf & vbCrLf
        End If
        frmUitzondering.TextBox1 = Omschrijving
        frmUitzondering.Show
    End If
    Exit Sub
End Sub

Public Function CreateFolder(path) As Boolean
' Creeert directory inclusief parentdirectory als
' ze nog niet bestaan
' False als het niet is gelukt
' True als het wel is gelukt
Dim fs                  As Object
Dim ParentSubFolder     As String
Dim ParentFolder        As String

    On Error GoTo EH
    Err.Clear
    Set fs = CreateObject("Scripting.FileSystemObject")
    path = fs.GetAbsolutePathName(path)
'   Wie weet bestaat het hele pad al.
    If fs.FolderExists(path) Then
        CreateFolder = True
        Exit Function
    End If

Opnieuw:
    ParentSubFolder = path
    ParentFolder = path

FolderLoop:
    If Not fs.FolderExists(ParentFolder) And ParentFolder <> "" Then
        ParentSubFolder = ParentFolder
        ParentFolder = fs.GetParentFolderName(ParentFolder)
        GoTo FolderLoop
    Else
        fs.CreateFolder (ParentSubFolder)
        If fs.GetAbsolutePathName(ParentSubFolder) <> path Then
            GoTo Opnieuw:
        End If
    End If
    CreateFolder = True
    Exit Function

EH:
    If Err.Number = 76 Then 'kan folder niet aanmaken.
        Err.Description = Err.Description + ": " + path
    End If
    varESWMError = DisplayError("CreateFolder")
    CreateFolder = False
    Exit Function
End Function

Public Function obs_bTerugsturen(DocType As String, TargetWorkstep As String) As Boolean
'   Bepaald of de terugsturen button op frmZoekImport enabled mag zijn
'   Functie wordt alleen maar aangeroepen vanuit frmZoekImport
'   Omdat dit scherm halverwege zijn eigen executie wordt 'unload'
'   moet deze als public worden gedefinieerd.
    obs_bTerugsturen = True
End Function

Public Sub InitWorkdesk()
Dim fsCOE               As New FileSystemObject
Dim TmpFile             As TextStream
Dim Melding             As String

'   Initieert de workdesk
    initEiStream
    initUservars
    If wdb Is Nothing Then
        Set wdb = New WDBridge
        Call wdb.Init
    End If
'   Controleren of de regional settings op Dutch(Standard) (1043) zijn ingesteld
'   Zo nee, stop de workdesk
    If GetThreadLocale <> 1043 Then
        MsgBox "De Regional Settings van uw PC staan niet op Dutch(Nederlands). U heeft geen toegang tot WFM", vbCritical, "Toegang geweigerd"
        Application.LogOff wdoLogOffDiscardChanges
    End If
'   Zetten van Temp voor de COE
    pvTempDir = Environ("TEMP") + "\"                       '[W7] Was: "C:\TEMP\"
    If Not fsCOE.FolderExists(pvTempDir) Then
        Melding = "Uw PC heeft geen tijdelijke directory (" + pvTempDir + "). U heeft geen toegang tot WFM"
        MsgBox Melding, vbCritical, "Toegang geweigerd"
        Application.LogOff wdoLogOffDiscardChanges
    End If
'   [PAC] - Iedere user een eigen (Sub)directory onder C:\TEMP (Van belang bij WFM in Citrix-omgeving!)
'   [W7]  - No longer needed as 'Temp' directory is unique for each user.  Was: pvTempDir = "C:\TEMP\" & Eastman.Client.username & "\"
'   [W7]                                                                        If Not fsCOE.FolderExists(pvTempDir) Then fsCOE.CreateFolder (pvTempDir)
    If Not InitWorkdeskFlag Then
        InitDomainSettings          'Init omgeving afhankelijke constanten
        InitDesktopMenu             'Zet de desktopmenu conform functional security
        InitWorkdeskFlag = True
        CopyHelpFile
        plActieveProcessen = CALGetRouteVar("ActieveProcessen")
        plActievePostProcessen = CALGetRouteVar("ActievePostprocessen")
        Set gobjHupos1 = CALGetUserVarAllUsers("MyHupo1")
        Set gobjHupos2 = CALGetUserVarAllUsers("MyHupo2")
        Set gobjAfdeling = CALGetUserVarAllUsers("Afdeling")
        Set gobjBehgroepen = CALGetUserVarAllUsers("WFUBehGroep")
        getXML_DBByDomain ("Common")
    End If
End Sub

Sub CopyHelpFile()
' Kopieer de juiste helpfile
Dim nameDestHelpFile    As String
Dim nameSrcHelpFile     As String
Dim dtDestHelpFile      As String
Dim dtSrcHelpFile       As String

    On Error Resume Next
'   Om de naam van de helpfile te wijzigen moet:
'   1 csHelpFile gewijzigd worden
'   2 De eigenschappen van dit project gewijzigd worden.
    nameDestHelpFile = dirHelpFileDest & csHelpFile + ".hlp"
    nameSrcHelpFile = dirHelpFileSrc & csHelpFile + ".hlp"
    dtDestHelpFile = FileDateTime(nameDestHelpFile)
    dtSrcHelpFile = FileDateTime(nameSrcHelpFile)
    If dtDestHelpFile <> dtSrcHelpFile And dtSrcHelpFile <> "" Then
        Kill dirHelpFileDest + csHelpFile + ".*"
        FileCopy dirHelpFileSrc & csHelpFile + ".hlp", dirHelpFileDest & csHelpFile + ".hlp"
        FileCopy dirHelpFileSrc & csHelpFile + ".cnt", dirHelpFileDest & csHelpFile + ".cnt"
    End If
End Sub

Sub Help()
    On Error Resume Next
    Shell "winhlp32.exe " & dirHelpFileDest & csHelpFile + ".hlp"
End Sub

Public Sub InitDomainSettings()
' Per omgeving (produktie, test, ontwikkeling, laptop zijn bepaalde instellingen
' verschillend. Deze kunnen hier worden opgegeven
Dim DomainName

    On Error GoTo EH
    DomainName = UCase(Application.SessionInfo.Domain)
'   Dir's moet eindigen op een \
    Select Case DomainName
        Case "WIGPROD"
             NTServerName = "SRV63037.app.nl.aegon.com"
             dirWordTemplates = "\\SRV63037.app.nl.aegon.com\WIGClient2000\" & csStdValuta & "\"
             dirModhus = "M:\Modhus\WrdStart2000\"
             dirHelpFileSrc = "\\SRV63037.app.nl.aegon.com\WIGClient2000\"
             dirHelpFileDest = Environ("TEMP") + "\"        '[W7]  Was: "C:\TEMP\"
             dirCaesarUpload = "M:\GegOntsl\Data\WFM\Ulbestanden\PA\PSW2C\"
             dirInvoerRekenProg = "M:\GegOntsl\Data\WFM\Ulbestanden\PA\WO_BER\"
'[PAC] - TD170048             prgWaardeRekenProg = "\\SRV63037.app.nl.aegon.com\WIGClient2000\Waarde\waarde.exe"
             prgWaardeRekenProg = "\\SRV63037.app.nl.aegon.com\WIGClient2000\Waarde\waarde_65.exe" '[PAC] - TD170048
             gsWaardeRekenProg2 = "\\SRV63037.app.nl.aegon.com\WIGClient2000\Waarde\waarde_67.exe" '[PAC] - TD170048
             WFMDatabaseName = "WFMDB"
             WFMuid = "WFMUserLog"
             WFMpwd = "WFMUser"
             gsConnectString = gcDBCONNECT01 + gcHOSTPROD + gcDBCONNECT02 + gcSERVICEPROD + gcDBCONNECT03   '[W7]
             gsQueryTable = gcTABLEPROD                                                                     '[W7]
        Case "WIGTEST"
             NTServerName = "SRV63038.app.nl.aegon.com"
             dirWordTemplates = "\\SRV63038.app.nl.aegon.com\WIGClient2000\" & csStdValuta & "\"
             dirModhus = "M:\Modhus\WrdStart2000\"
             dirHelpFileSrc = "\\SRV63038.app.nl.aegon.com\WIGClient2000\"
             dirHelpFileDest = Environ("TEMP") + "\"        '[W7]  Was: "C:\TEMP\"
             dirCaesarUpload = Environ("TEMP") + "\"        '[W7]  Was: "C:\TEMP"
             dirInvoerRekenProg = "\\SRV63038.app.nl.aegon.com\WIGClient2000\Waarde\"
'[PAC] - TD170048             prgWaardeRekenProg = "\\SRV63038.app.nl.aegon.com\WIGClient2000\WaardeVista\WaardeVista.exe"
             prgWaardeRekenProg = "\\SRV63038.app.nl.aegon.com\WIGClient2000\Waarde\waarde_65.exe" '[PAC] - TD170048
             gsWaardeRekenProg2 = "\\SRV63038.app.nl.aegon.com\WIGClient2000\Waarde\waarde_67.exe" '[PAC] - TD170048
             WFMDatabaseName = "WFMDB"
             WFMuid = "WFMUserLog"
             WFMpwd = "WFMUser"
             gsConnectString = gcDBCONNECT01 + gcHOSTTST + gcDBCONNECT02 + gcSERVICETST + gcDBCONNECT03     '[W7]
             gsQueryTable = gcTABLETST                                                                      '[W7]
        Case "WIGDEV2"
             NTServerName = "SRV63039.app.nl.aegon.com"
             dirWordTemplates = "\\SRV63039.app.nl.aegon.com\WIGClient2000\" & csStdValuta & "\"
             dirModhus = "M:\Modhus\WrdStart2000\"
             dirHelpFileSrc = "\\SRV63039.app.nl.aegon.com\WIGClient2000\"
             dirHelpFileDest = Environ("TEMP") + "\"        '[W7]  Was: "C:\TEMP\"
             dirCaesarUpload = Environ("TEMP") + "\"        '[W7]  Was: "C:\TEMP\"
             dirInvoerRekenProg = "\\SRV63039.app.nl.aegon.com\WIGClient2000\Waarde\"
'[PAC] - TD170048             prgWaardeRekenProg = "\\SRV63039.app.nl.aegon.com\WIGClient2000\Waarde\waarde.exe"
             prgWaardeRekenProg = "\\SRV63039.app.nl.aegon.com\WIGClient2000\Waarde\waarde_65.exe" '[PAC] - TD170048
             gsWaardeRekenProg2 = "\\SRV63039.app.nl.aegon.com\WIGClient2000\Waarde\waarde_67.exe" '[PAC] - TD170048
             WFMDatabaseName = "WFMDB"
             WFMuid = "WFMUserLog"
             WFMpwd = "WFMUser"
             gsConnectString = gcDBCONNECT01 + gcHOSTTST + gcDBCONNECT02 + gcSERVICETST + gcDBCONNECT03     '[W7]
             gsQueryTable = gcTABLETST                                                                      '[W7]
        Case "ESWM"
             NTServerName = "NLUTW_GT9210J"
             dirWordTemplates = "D:\AegonWfm\" & csStdValuta & "\"
             dirCaesarUpload = "D:\aegonwfm\"
             dirInvoerRekenProg = "D:\aegonfuwfm\"
             dirHelpFileSrc = "D:\aegonwfm\"
             dirHelpFileDest = "c:\program files\eastman software\workdesk\bin\"
             prgWaardeRekenProg = "D:\Waarde\waarde.exe"
             WFMDatabaseName = "UITZONDERINGEN"
             WFMuid = "sa"
             WFMpwd = ""
        Case Else
             MsgBox "Domainname onbekend, Geen settings aanwezig!"
    End Select
    Exit Sub

EH:
    DisplayError "InitDomainSettings"
    Err.Clear
End Sub

Public Sub InitPrios()
Static Init             As Boolean

    If Init Then Exit Sub
    Init = True
    astrPrios(0, 0) = "0"
    astrPrios(0, 1) = "Normaal"
    astrPrios(1, 0) = "1"
    astrPrios(1, 1) = "Hoog"
    astrPrios(2, 0) = "2"
    astrPrios(2, 1) = "Urgent"
End Sub

Public Sub GetNieuwePuo(myForm As Object)
' Vul combobox cbNieuwePuo op myForm met alle puo's
Dim PensName            As Variant
Dim i                   As Integer

    On Error GoTo EH
    If PensNames.Count < 1 Then InitNaamPens
    For Each PensName In PensNames
        i = InStr(PensName, ";")
        myForm.cbNieuwePuo.AddItem (Mid(PensName, 1, i - 1))
    Next
    Exit Sub

EH:
   DisplayError "GetNieuwePuo"
End Sub

Function GetFileExtension(MyFile) As String
'[PAC] - TD169757 - Rewritten function
'Dim x                   As Integer
'Dim lenext              As Integer
'
'    On Error Resume Next
'    GetFileExtension = ""
'    x = InStr(Len(MyFile) - 3, MyFile, ".", vbTextCompare)
'    lenext = Len(MyFile) - x
'    If x > 0 And lenext <= 3 Then
'        GetFileExtension = Mid(MyFile, x + 1, lenext)
'    End If
'[PAC] - TD169757 - END Rewritten function

Dim iLenExtension           As Integer

    GetFileExtension = ""
    iLenExtension = (Len(MyFile) - InStrRev(MyFile, "."))
    GetFileExtension = Right(MyFile, iLenExtension)
End Function

Public Sub SaveNewItem(WorkitemViewer As WorkitemViewer)
Dim myFrm               As Object
Dim bSetWord            As Boolean

'   Nadat een nieuw workitem wordt opgeslagen is het objID gewijzigd.
'   Dit ID is vastgelegd op het custom form, om het form netjes te sluiten.
'   Na het saven moet dit ID op het form geupdate worden.
'   Zoek eerst het juiste form aan de hand van het huidige object id.
'   Save dan het item en wijzig het ID op het custom form
'   Eveneeens moet het ID van de eventuele gestarte wordsessie geupdate te worden.
    If WorkitemViewer.id = WordSessie.objId Then
        bSetWord = True
    End If
    If ((WorkitemViewer.CALClientListItem.Info.Status And calObjStatusNew) = calObjStatusNew) Then
        Set myFrm = FindOpenWFMForm(WorkitemViewer.CALClientListItem.Info.objId.InternalName)
        WorkitemViewer.CALClientListItem.OpenedItem.Save
        If Not myFrm Is Nothing Then
            myFrm.ESWMObjID = WorkitemViewer.CALClientListItem.Info.objId.InternalName
        End If
    End If
    If bSetWord Then
        WordSessie.objId = WorkitemViewer.id
    End If
End Sub

Public Sub NewDocument(Optional strAfdeling As String, Optional strDoctype As String, Optional strActie As String)
Dim x                   As Integer
Dim myCLItem            As CALClientListItem
Dim myDoc               As CALDocument
Dim myDocname           As String
Dim myFrmAfdeling       As Object
Dim PACWFMform          As Object
Dim intCount            As Integer
Dim myViewer            As WorkitemViewer
Dim myDocFF             As CALFormFields
Dim myFldFF             As CALFormFields
Dim bOk                 As Boolean

    On Error GoTo EH
    frmAfdeling.cbAfdeling.AddItem
    If strAfdeling = Empty Then
        Set myFrmAfdeling = New frmAfdeling
        myFrmAfdeling.cbAfdeling.list = plActieveProcessen
'       PPN niet in lijst ActieveProcessen
        myFrmAfdeling.cbAfdeling.AddItem "PPN"
        myFrmAfdeling.Show 1
        If IsNull(myFrmAfdeling.cbAfdeling) Then Exit Sub
        strAfdeling = myFrmAfdeling.cbAfdeling
    End If
    myDocname = "Nieuw document"
    If strAfdeling <> "PPN" Then
        Set myCLItem = CALCreateDocument(myDocname, "COLL")
    Else
        Set myCLItem = CALCreateDocument(myDocname, "CPPN")
    End If
    If myCLItem Is Nothing Then GoTo EH
    Set myDoc = myCLItem.Open(calOpenReadWrite)
    If myDoc Is Nothing Then GoTo EH
    CALSetFieldValue myDoc, "BESTEMMING", "NEW"
    CALSetFieldValue myDoc, "DOORZENDEN_NAAR", strAfdeling
    If UCase(strAfdeling) = "KLA" Then
        CALSetFieldValue myDoc, "KLA_AFD", CALGetUserVar("Afdeling", CALClient.username)
    End If
    CALSetFieldValue myDoc, "DOCTYPE", strDoctype
    CALSetFieldValue myDoc, "DAT_DOC", Format(Date, "yyyy-mm-dd")
    If strDoctype <> "" Then
        CALSetFieldValue myDoc, "IND_TRIGGER", Left(strDoctype, 3)
    End If
    myDoc.Save
    Set myViewer = Application.Viewers.OpenViewer(myCLItem, wdoOpenViewerNormal, wdoOpenReadWrite)
    If strActie = mnuSaveTelefon Then
'       Let op als we een telefoontje moeten starten we met word en daarna indexeren
'       kan misschien wel mooier maar tijd en het is de eerste keer
        Call StartBrief(myViewer, "Word")
    End If
    If strActie = "StartInfo" Then
        If PACWFMform Is Nothing Then
            Set PACWFMform = FindOpenWFMForm(myViewer.CALClientListItem.Info.objId.InternalName)
            PACWFMform.WFM_DOCTYPE = strDoctype
            PACWFMform.WFM_DOCTYPE.Locked = True
'           Voor query
            CALSetFieldValue myDoc, "DOCUMENTNUMMER", "9999"
            PACWFMform.WFM_DOORZENDEN_NAAR = ""
            PACWFMform.AFDELING.AddItem "FEP"
            CALSetFieldValue myDoc, "AANVRAAG_INFO", "20"
        End If
        Set frmNotitie.rsViewer = myViewer
        bOk = createNote(myViewer, "I")
    End If
    If Not myFrmAfdeling Is Nothing Then
        Unload myFrmAfdeling
        Set myFrmAfdeling = Nothing
    End If

EH:
    If Err Then
        DisplayError "NewDocument"
        If Not myDoc Is Nothing Then
            myDoc.Close calCloseAbortChanges
        End If
        If Not myCLItem Is Nothing Then
            CALClient.ClientList.Remove myCLItem
        End If
        Unload frmAfdeling
    End If
End Sub

Public Sub NewDocumentInFolder(Viewer As WorkitemViewer, Optional strActie As String)
' Maak een nieuw IMPORT document in de folder
' en kopieer de overeenkomstige velden van de folder naar
' het nieuwe document. Open document in een viewer.
Dim x                   As Integer
Dim myCLItem            As CALClientListItem
Dim myDoc               As CALDocument
Dim myDocname           As String
Dim myDocFF             As CALFormFields
Dim myFldFF             As CALFormFields
Dim MyInfoViewer        As WorkitemViewer
Dim strAfdeling         As String
Dim myFrmAfdeling       As Object

    On Error GoTo EH
    myDocname = "Nieuw document"
    If Left(Viewer.CALClientListItem.OpenedItem.Class, 4) = "CPPN" Then
        Set myCLItem = CALCreateDocument(myDocname, "PPIMPORT")
    Else
        Set myCLItem = CALCreateDocument(myDocname, "IMPORT")
    End If
    If myCLItem Is Nothing Then GoTo EH
    Set myDoc = myCLItem.Open(calOpenReadWrite)
    If myDoc Is Nothing Then GoTo EH
'   Kopieer velden van folder
    Set myFldFF = Viewer.CALClientListItem.OpenedItem.FormFields(calFieldsNoViews)
    Set myDocFF = myDoc.FormFields(calFieldsNoViews)
    CALCopyFormFields myFldFF, myDocFF
    CALSetFieldValue myDoc, "DOCTYPE", "IMPORT"
    CALSetFieldValue myDoc, "DAT_DOC", Format(Date, "yyyy-mm-dd")
    myDoc.Save
    Call Viewer.CALClientListItem.OpenedItem.Children.Add(myDoc.Info.objId, calChildLast)
    myDoc.Close calCloseSaveChanges
    Application.Viewers.OpenViewer myCLItem, wdoOpenViewerNormal, wdoOpenReadWrite

EH:
    If Err Then
        DisplayError "NewDocumentInFolder"
        If Not myDoc Is Nothing Then
            myDoc.Close calCloseAbortChanges
        End If
        If Not myCLItem Is Nothing Then
            CALClient.ClientList.Remove myCLItem
        End If
    End If
End Sub

Public Sub NewWordDocumentInFolder(Viewer As WorkitemViewer, strNaam As String, strFile As String)
' Maak een nieuw IMPORT document in de folder
' en kopieer de overeenkomstige velden van de folder naar
' het nieuwe document.
Dim x                   As Integer
Dim myCLItem            As CALClientListItem
Dim myDoc               As CALDocument
Dim myDocname           As String
Dim myDocFF             As CALFormFields
Dim myFldFF             As CALFormFields
Dim MyInfoViewer        As WorkitemViewer
Dim strAfdeling         As String
Dim myFrmAfdeling       As Object

    On Error GoTo EH
    myDocname = strNaam
    Set myCLItem = CALCreateDocument(myDocname, "IMPORT")
    If myCLItem Is Nothing Then GoTo EH
    Set myDoc = myCLItem.Open(calOpenReadWrite)
    If myDoc Is Nothing Then GoTo EH
'   Kopieer velden van folder
    Set myFldFF = Viewer.CALClientListItem.OpenedItem.FormFields(calFieldsNoViews)
    Set myDocFF = myDoc.FormFields(calFieldsNoViews)
    CALCopyFormFields myFldFF, myDocFF
    CALSetFieldValue myDoc, "DOCTYPE", "IMPORT"
    CALSetFieldValue myDoc, "DAT_DOC", Format(Date, "yyyy-mm-dd")
'   Importeren document
    myDoc.Imports.Add calDocumentImportLast, "Word Document", "Word95", strFile
    myDoc.Save
'   Verplaatsen naar openstaande folder
    Call Viewer.CALClientListItem.OpenedItem.Children.Add(myDoc.Info.objId, calChildLast)
    myDoc.Close (calCloseSaveChanges)
'   Remove document van clientlist
    Application.CALClient.ClientList.Remove myCLItem

EH:
    If Err Then
        DisplayError "NewDocumentInFolder"
        If Not myDoc Is Nothing Then
            myDoc.Close calCloseAbortChanges
        End If
        If Not myCLItem Is Nothing Then
            CALClient.ClientList.Remove myCLItem
        End If
    End If
End Sub

Public Sub NewInfo(Viewer As WorkitemViewer, Optional strActie As String)
' Maak een nieuw INFO document
' en kopieer de overeenkomstige velden van de folder naar
' het nieuwe document. Open document in een viewer.

Dim x                   As Integer
Dim myCLItem            As CALClientListItem
Dim myDoc               As CALDocument
Dim myDocname           As String
Dim myDocFF             As CALFormFields
Dim myFldFF             As CALFormFields
Dim MyInfoViewer        As WorkitemViewer
Dim strAfdeling         As String
Dim FlowNr              As String
Dim myFrmAfdeling       As Object
Dim MyBehandelaar       As String
Dim ffintvert           As String
Dim teste               As String
Dim myFld               As CALFolder

    On Error GoTo EH
'   Tbv de tussenstap van MOS
    If Not Viewer.CALClientListItem.OpenedItem.Info.SourceWorkset = "98P07 Voorber. PEN" Then
        If Not strActie = "Fiat Note" Then
            strAfdeling = strActie
        End If
        myDocname = "Informatieverzoek" ' Met datum
        Set myCLItem = CALCreateDocument(myDocname, "COLL")
        If myCLItem Is Nothing Then GoTo EH
        Set myDoc = myCLItem.Open(calOpenReadWrite)
        If myDoc Is Nothing Then GoTo EH
'       Kopieer velden van folder
        Set myFld = Viewer.CALClientListItem.OpenedItem
        Set myFldFF = Viewer.CALClientListItem.OpenedItem.FormFields(calFieldsNoViews)
        Set myDocFF = myDoc.FormFields(calFieldsNoViews)
        CALCopyFormFields myFldFF, myDocFF
        CALSetFieldValue myDoc, "DOCTYPE", "IMPORT"
        CALSetFieldValue myDoc, "DAT_DOC", Format(Date, "yyyy-mm-dd")
'       New doc = informatieverzoek
        If strAfdeling = Empty Then
            Set myFrmAfdeling = New frmAfdeling
            myFrmAfdeling.cbAfdeling.list = plActieveProcessen
'           PPN niet in lijst ActieveProcessen
            myFrmAfdeling.cbAfdeling.AddItem "PPN"
            myFrmAfdeling.Show 1
            If IsNull(myFrmAfdeling.cbAfdeling) Then Exit Sub
            If myFrmAfdeling.cbAfdeling = "KLA" Then
                MsgBox "Infoverzoeken kunnen niet aan KLA verzonden worden"
                Exit Sub
            End If
            If myFrmAfdeling.cbAfdeling = "GBA" Then
                MsgBox "Infoverzoeken kunnen niet aan GBA verzonden worden"
                Exit Sub
            End If
            strAfdeling = myFrmAfdeling.cbAfdeling
        End If
'       Rommel voor de COLLBWO
        If Viewer.CALClientListItem.OpenedItem.Class = "COLLBWO" Then
            ffintvert = Viewer.Fields.Find("Intvert").CALFormField.Value
            If ffintvert <> "" Then
                CALSetFieldValue myDoc, "INTVERT", ffintvert
            Else
                CALSetFieldValue myDoc, "REDEN_PARKEREN", "INFO-" + strAfdeling
            End If
        Else
            If (CALGetFieldValue(myFldFF, "INTVERT")) = "" Then
                CALSetFieldValue myDoc, "REDEN_PARKEREN", "INFO-" + strAfdeling
            End If
        End If
        CALCopyFormFields myDocFF, myFldFF, "REDEN_PARKEREN"
'       Voor het kopieren van de notitie
        Set mapinfoobjClientListItem = Viewer.CALClientListItem
        CALSetFieldValue myDoc, "DOCTYPE", "INF Informatieverzoek"
        CALSetFieldValue myDoc, "BESTEMMING", "NEW"
'       In de route moet de aanvraagInfo gezet worden na verplaatsen
'       en om niet te converteren gaan we hier het nr in zetten...
        FlowNr = Left(GetWorkstep(Viewer), 2)
        If FlowNr = "20" Then
            CALSetFieldValue myDoc, "DOCUMENTNUMMER", "9999"
        End If
'       Totdat we een generieke flow gingen gebruiken...

''Q1 Release 2012 CR No. 153254 Dept Changes
        If FlowNr = "33" Then
            Select Case myFldFF.Find("DOORZENDEN_NAAR").Value
                Case Is = "PTA"
                     FlowNr = "33C"
                Case Is = "PTB"
                     FlowNr = "33D"
                Case Is = "FND"
                     FlowNr = "33E"
                Case Is = "PTD"
                     FlowNr = "33I"
                Case Is = "PTC"
                     FlowNr = "33L"
                Case Is = "PPI"
                     FlowNr = "33F"
''                Case Is = "NT2"
''                     FlowNr = "33G"
''                Case Is = "WST"
''                     FlowNr = "33H"
                Case Is = "FAL"
                     FlowNr = "33K"
                Case Is = "FVP"
                     FlowNr = "33J"
''                Case Is = "KSP"
''                     FlowNr = "33M"
                Case Is = "PTE"
                     FlowNr = "33N"
                Case Is = "PTF"
                     FlowNr = "33O"
                Case Is = "PTG"
                     FlowNr = "33P"
                Case Is = "PTH"
                     FlowNr = "33Q"
                Case Is = "APP"                         '[PAC] 17MAR15 - PTN --> APP - TD172461
                     FlowNr = "33R"
                Case Is = "PTI"
                     FlowNr = "33S"
                Case Is = "PTL"                         '[PAC] - TD17266
                     FlowNr = "33X"                     '[PAC] - TD17266
                Case Is = "PTR"                         '[PAC] - TD17266
                     FlowNr = "33Y"                     '[PAC] - TD17266
''                Case Is = "MA6"
''                     FlowNr = "33S"
            End Select
        End If
        CALSetFieldValue myDoc, "AANVRAAG_INFO", FlowNr
        CALSetFieldValue myDoc, "IND_TRIGGER", "INF"
        MyBehandelaar = CALGetUserVar("MyHupo1", CALClient.username)
'       JAG 20071009 Voor Debiteurenflow moet default DEB in WFM_ZAAK_VLGNR_MEMO worden gezet
        If Viewer.CALClientListItem.OpenedItem.Class <> "COLLDEB" Then
            CALSetFieldValue myDoc, "ZAAK_VLGNR_MEMO", ""
        Else
            CALSetFieldValue myDoc, "ZAAK_VLGNR_MEMO", "DEB"
        End If
        CALSetFieldValue myDoc, "DOORZENDEN_NAAR", "INFO" + strAfdeling
        CALSetFieldValue myDoc, "BEHANDELAAR", ""
        Set MyInfoViewer = Application.Viewers.OpenViewer(myCLItem, wdoOpenViewerNormal, wdoOpenReadWrite)
'       De viewer voor excasso
        Set mapEXCASSOClientlistitem = myCLItem
        If strActie = "Fiat Note" Then
            Dim objFormNote As Object
            Set objFormNote = FindOpenWFMForm(MyInfoViewer.CALClientListItem.OpenedItem.Info.objId.InternalName)

Dim fieldValue          As String
            fieldValue = CALGetFieldValue(myFld, "InfoVerzoek")
            objFormNote.TextBox1.Text = fieldValue
        End If
    Else

Dim objForm             As Object
        Set objForm = FindOpenWFMForm(Viewer.CALClientListItem.OpenedItem.Info.objId.InternalName)
        objForm.MultiPage1.pages("InfoVerzoek").Visible = True
        objForm.MultiPage1.Value = 4
        objForm.WFM_InfoDatum.Value = CStr(Now)
        objForm.WFM_InfoDoor.Value = CALClient.username
        objForm.WFM_InfoSent.Value = "1"
        objForm.WFM_ZAAK_VLGNR_MEMO.Value = "Info verzoek"
    End If
    Exit Sub

EH:
    If Err Then
        DisplayError "NewInfo"
        If Not myDoc Is Nothing Then
            myDoc.Close calCloseAbortChanges
        End If
        If Not myCLItem Is Nothing Then
            CALClient.ClientList.Remove myCLItem
        End If
    End If
End Sub

Public Function GetWorkstep(Viewer As WorkitemViewer) As String
    On Error Resume Next
    GetWorkstep = Viewer.CALClientListItem.Info.SourceWorkset
    If GetWorkstep = "" Then
        GetWorkstep = Viewer.CALClientListItem.Info.SourceWorkstep
    End If
    If GetWorkstep = "" Then
        If Not Viewer.Fields.Find("BESTEMMING") Is Nothing Then
            GetWorkstep = Viewer.Fields.Find("BESTEMMING").CALFormField.Value
            If GetWorkstep <> "NEW" Then
                GetWorkstep = ""
            Else
                GetWorkstep = "NEW"
            End If
        End If
    End If
    Err.Clear
End Function

Public Sub Sysdelete()
Const OMD_ERR_ACESS_DENIED = 88

Dim objClientListItem   As CALClientListItem
Dim wdoClientListItem   As WDOWorklistItem
Dim blnWarningMessage   As Boolean
Dim myObject            As Variant
Dim myFolder            As CALFolder
Dim myChild             As CALFolderChild
Dim myDoc               As CALDocument
Dim myCLI               As CALClientListItem
Dim x                   As Integer
Dim bDelete             As Boolean

'   Delete the selected workitems from the system
    For Each wdoClientListItem In Desktop.Worklist.SelectedItems
        On Error GoTo EH
        bDelete = True
        Set objClientListItem = wdoClientListItem.CALClientListItem
        If Not blnWarningMessage Then
            If MsgBox("Weet u zeker dat u alle geselecteerde werkitems INCLUSIEF eventuele documenten permanent van het systeem wilt verwijderen?", vbQuestion Or vbYesNo Or vbMsgBoxSetForeground) = vbNo Then Exit Sub
        End If
'       Delete eventuele documenten in de folder
        If objClientListItem.Info.Type = calObjTypeFolder Then
            If ((objClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
                Set myFolder = objClientListItem.OpenedItem
            Else
                Set myFolder = objClientListItem.Open(1)
            End If
            For x = myFolder.Children.AllItems.Count To 1 Step -1
                Set myChild = myFolder.Children.AllItems.item(x)
                Set myCLI = CALClient.ClientList.Add(myChild.Info.objId, calAddDomainOnly)
                myCLI.Open 1
'               Sysdelete document
                On Error Resume Next
                Application.CALClient.ClientList.DeleteWorkitem myCLI, calDeleteWorkitemSystemDelete
                If Err.Number <> 0 Then
                    Select Case Application.CALMaster.LastError.Code
                        Case Is = OMD_ERR_ACESS_DENIED
                             MsgBox "Workitem " & myCLI.Info.name & " must be reserved before it can be deleted.", vbCritical Or vbOKOnly Or vbMsgBoxSetForeground
                        Case Is = 185
                             MsgBox "System Delete is not configured on this server", vbOKOnly + vbCritical, "Info"
                    End Select
                    bDelete = False
                Else
                    myFolder.Children.Remove myChild
                End If
            Next
            myFolder.Save
        End If
        If bDelete Then
            On Error Resume Next
            Application.CALClient.ClientList.DeleteWorkitem objClientListItem, calDeleteWorkitemSystemDelete
            If Err.Number <> 0 Then
                Select Case Application.CALMaster.LastError.Code
                    Case Is = OMD_ERR_ACESS_DENIED
                         MsgBox "Workitem " & objClientListItem.Info.name & " must be reserved before it can be deleted.", vbCritical Or vbOKOnly Or vbMsgBoxSetForeground
                    Case Is = 185
                         MsgBox "System Delete is not configured on this server", vbOKOnly + vbCritical, "Info"
                End Select
            End If
        End If
        On Error GoTo EH
        blnWarningMessage = True
    Next
    Exit Sub

EH:
    DisplayError "Sysdelete"
End Sub

Public Function GetHelpContextId(fieldName As String) As Long
Dim myCt                As Variant

    If mcolCtId.Count = 0 Then InitCtId
    For Each myCt In mcolCtId
        If InStr(UCase(fieldName), myCt(0, 0)) > 0 Then
            GetHelpContextId = myCt(0, 1)
            Exit Function
        End If
    Next
'   Geen help beschikbaar
    GetHelpContextId = 99999
End Function

Private Function InitCtId() As Collection
    AddCtId "NAAM_KLANT", 993000
    AddCtId "IND_TRIGGER", 10019
    AddCtId "NR_AEGAR", 10013
    AddCtId "GEB_DEELN", 10016
    AddCtId "IND_HUPO", 10014
    AddCtId "NAAM_DLNMR", 10012
    AddCtId "NR_POLIS", 10010
    AddCtId "SEXE_DLNMR", 10017
    AddCtId "NR_KLANT", 10591
    AddCtId "CMDSCREEN", 10011
    AddCtId "CMDTOEVOEGEN", 10601
    AddCtId "AANTAL_ZAKEN", 10015
    AddCtId "CMDUITZ", 10006
    AddCtId "CMDTERUG", 10005
    AddCtId "CMDOPSLAAN", 10004
    AddCtId "ZK_VOLGNR", 10018
    AddCtId "PRIORITEIT", 15670
End Function

Private Sub AddCtId(fieldName As String, CtId As Long)
Dim myCt(0, 1)          As Variant

    myCt(0, 1) = CtId
    myCt(0, 0) = fieldName
    mcolCtId.Add myCt
End Sub

Public Sub ClearListView(ListView As ListView)
Dim i                   As Integer

'   Leegmaken listview
    For i = ListView.ListItems.Count To 1 Step -1
        ListView.ListItems.Remove i
    Next i
End Sub

Public Sub CopyLvTolb(ByVal lv As ListView, ByVal lb As ListBox)
Dim i, row, Column      As Integer

'   Kopieer listview naar listbox
    lb.Left = lv.Left
    lb.Width = lv.Width
    lb.Top = lv.Top + 13
    lb.Height = lv.Height - 13
    lb.ColumnWidths = ""
    For i = 2 To lb.ColumnCount
        lb.ColumnWidths = lb.ColumnWidths + ";" + Str(lv.ColumnHeaders.item(i).Width)
        lb.ColumnWidths = lb.ColumnWidths
    Next
    lb.ColumnWidths = Mid(lb.ColumnWidths, 2)
    For row = 0 To lv.ListItems.Count - 1
        lb.AddItem
        For Column = 0 To lb.ColumnCount - 1
            lb.list(row, Column) = lv.ListItems(row + 1).SubItems(Column + 1)
        Next
    Next
End Sub
  
' MaBr 15-10 deze wordt even niet aangeroepen ivm foutmelding
Public Sub EnDisAbleToevoegen2(ByRef WFM_DOCTYPE As Object, ByRef cmdToevoegen As Object)
Dim strBehCode          As String

    On Error Resume Next
    strBehCode = WFMData.Common.getField("WFDocTypes", "DocBeh", "DocType", WFM_DOCTYPE)
    If strBehCode = csDocOverig Or strBehCode = csDocRendezvous Then
        cmdToevoegen.Enabled = True
    Else
        cmdToevoegen.Enabled = False
    End If
End Sub

Public Sub EnDisAbleToevoegen(ByRef WFM_DOCTYPE As Object, ByRef cmdToevoegen As Object)
    On Error Resume Next
    If IsNull(WFM_DOCTYPE.list(WFM_DOCTYPE.ListIndex, 1)) Then
        If Err Then Err.Clear
        cmdToevoegen.Enabled = False
        Exit Sub
    End If
    If WFM_DOCTYPE.list(WFM_DOCTYPE.ListIndex, 1) = csDocOverig Or WFM_DOCTYPE.list(WFM_DOCTYPE.ListIndex, 1) = csDocRendezvous Then
        cmdToevoegen.Enabled = True
    Else
        cmdToevoegen.Enabled = False
    End If
End Sub

Public Sub OpenDeelnKlant(Viewer As WorkitemViewer)
Dim myForm              As Object

    Set myForm = New frmDeelnKlant
    If myForm Is Nothing Then Exit Sub
    If myForm.WorkitemViewer Is Nothing Then
        Set myForm.WorkitemViewer = Viewer
    End If
    myForm.Show 1
End Sub

Public Sub Doorzenden(Viewer As WorkitemViewer)
Dim myFrmAfdeling       As frmAfdeling
Dim myQueue             As New CALQueue
Dim strAfdeling         As String
Dim vanWorkstep         As String
Dim strTemp             As String
Dim arrAfdelingen(15, 1) As String
Dim i                   As Integer

    On Error GoTo EH
'   Save werkitem
    If WorkflowSaveAlgedaan = False Then
        WorkflowSave Viewer
    End If
    WorkflowSaveAlgedaan = False
    If Viewer.CALClientListItem.OpenedItem.Class = "COLL" Then
        If Viewer.Fields.Find("DAT_DOC").CALFormField.Value = "" Then
            MsgBox "Om een document door te zenden moet het datum doc zijn ingevuld.", vbOKOnly + vbExclamation
            Exit Sub
        End If
    End If
    If Viewer.CALClientListItem.OpenedItem.Class = "COLLKLA" Then
        MsgBox "Klachten kunnen niet doorgezonden worden.", vbOKOnly + vbExclamation
        Exit Sub
    End If
    Set myFrmAfdeling = New frmAfdeling
    If Viewer.CALClientListItem.OpenedItem.Class = "COLL" Then
        myFrmAfdeling.cbAfdeling.list = plActieveProcessen
    End If
    
''Q1 Release 2012 CR No. 153254 Dept Changes
    If Viewer.CALClientListItem.OpenedItem.Class = "COLLMUT" Then
        arrAfdelingen(0, 0) = "PTA"
        arrAfdelingen(0, 1) = "Team PTA"
        arrAfdelingen(1, 0) = "PTB"
        arrAfdelingen(1, 1) = "Team PTB"
        arrAfdelingen(2, 0) = "PTD"
        arrAfdelingen(2, 1) = "Team PTD"
        arrAfdelingen(3, 0) = "PTC"
        arrAfdelingen(3, 1) = "Team PTC"
        arrAfdelingen(4, 0) = "PPI"
        arrAfdelingen(4, 1) = "Team PPI"
        arrAfdelingen(5, 0) = "FAL"
        arrAfdelingen(5, 1) = "Team FAL"
        arrAfdelingen(6, 0) = "PTE"
        arrAfdelingen(6, 1) = "Team PTE"
        arrAfdelingen(7, 0) = "PTF"
        arrAfdelingen(7, 1) = "Team PTF"
        arrAfdelingen(8, 0) = "PTG"
        arrAfdelingen(8, 1) = "Team PTG"
        arrAfdelingen(9, 0) = "PTH"
        arrAfdelingen(9, 1) = "Team PTH"
        arrAfdelingen(10, 0) = "APP"                    '[PAC] 17MAR15 - PTN --> APP - TD172461
        arrAfdelingen(10, 1) = "Team APP"               '[PAC] 17MAR15 - PTN --> APP - TD172461
        arrAfdelingen(11, 0) = "PTI"
        arrAfdelingen(11, 1) = "Team PTI"
        arrAfdelingen(12, 0) = "PTL"                    '[PAC] - TD17266
        arrAfdelingen(12, 1) = "Team PTL"               '[PAC] - TD17266
        arrAfdelingen(13, 0) = "PTR"                    '[PAC] - TD17266
        arrAfdelingen(13, 1) = "Team PTR"               '[PAC] - TD17266
        arrAfdelingen(14, 0) = "FND"                    '[PAC] - TD17266
        arrAfdelingen(14, 1) = "Team FND"               '[PAC] - TD17266
'       Waarom geen call naar vulArrayKS_Afdelingen?
        myFrmAfdeling.cbAfdeling.list = arrAfdelingen
    End If
    If IsCollAlg(Viewer.CALClientListItem.OpenedItem.Class) Then
        myFrmAfdeling.cbAfdeling.list = plActieveProcessen
    End If
    If Left(GetWorkstep(Viewer), 5) = "33A01" _
        Or Left(GetWorkstep(Viewer), 5) = "42A01" _
        Or Left(GetWorkstep(Viewer), 3) = "90A" Then
        myFrmAfdeling.cbAfdeling.AddItem
        i = myFrmAfdeling.cbAfdeling.ListCount - 1
        myFrmAfdeling.cbAfdeling.list(i, 0) = "FOLDER"
        myFrmAfdeling.cbAfdeling.list(i, 1) = "doc als folder naar archief"
    End If
'   Vorderingen
    If Viewer.CALClientListItem.OpenedItem.Class = "COLLVORD" Then
        Call AddAfdeling(myFrmAfdeling.cbAfdeling, "46V11", " HerBeoord. VOR")
        Call AddAfdeling(myFrmAfdeling.cbAfdeling, "46V40", " VOR Gereed")
        Call AddAfdeling(myFrmAfdeling.cbAfdeling, "46V54", " VOR Bet Reg")
    Else
        myFrmAfdeling.cbAfdeling.AddItem "ARCHIEF"
        If myFrmAfdeling.cbAfdeling.ListCount = 1 Then  '[PAC] - TD157138
            myFrmAfdeling.cbAfdeling.AddItem "CWO"      '[PAC] - TD157138 - Add "CWO" (Xfer to 10A01 Beoord doc)
        End If                                          '[PAC] - TD157138
    End If
'   Vanuit het archief alleen doorsturen naar post processen
    If Viewer.CALClientListItem.Info.SourceWorkstep = wsArchief And _
        (Viewer.CALClientListItem.OpenedItem.Class = "COLL" Or _
        IsCollAlg(Viewer.CALClientListItem.OpenedItem.Class)) Then
        myFrmAfdeling.cbAfdeling.list = plActievePostProcessen
    End If
    myFrmAfdeling.Show 1
    If IsNull(myFrmAfdeling.cbAfdeling) Then
        GoTo doorzenden_exit
    End If

'   [WO] 20080812 TD114147 aangepast i.v.m. rework en verplaatst
'   [WO] 20090209 TD122860 de aanpassing voor alle afdelingen doen we hier niet, omdat het fout gaat op forms zonder WERKSOORT/WERKTYPE en we willen het ook niet bij zenden naar ARCHIEF
Dim myFF                    As CALFormFields

    Set myFF = Viewer.CALClientListItem.OpenedItem.FormFields(0)
    If myFrmAfdeling.cbAfdeling <> myFF.Find("DOORZENDEN_NAAR").Value Then
        Dim bLeegmaken As Boolean
        If myFrmAfdeling.cbAfdeling = "FEP" Then
            bLeegmaken = IsLeegmakenVeldenJa(myFF.Find("WERKSOORT").Value, myFF.Find("WERKTYPE").Value)
            If bLeegmaken Then
                myFF.Find("WERKSOORT").Value = ""
                myFF.Find("WERKTYPE").Value = ""
            Else
                Set myFF = Nothing
                Exit Sub
            End If
        End If
    End If

    Set myFF = Nothing
    strAfdeling = myFrmAfdeling.cbAfdeling
'   Alleen naar het archief verplaatsen indien deelnemernr voorkomt en is ingevuld
    If strAfdeling = "ARCHIEF" Or strAfdeling = "FOLDER" Then

'[PAC] - TD169077
'[PAC] - 15AUG14        If UCase(Viewer.Fields.Find("WERKSOORT").CALFormField.Value) = "INF" Then
        On Error Resume Next                            '[PAC] - 15AUG14
        strTemp = UCase(Viewer.Fields.Find("WERKSOORT").CALFormField.Value) '[PAC] - 15AUG14
        If strTemp = "INF" Then                         '[PAC] - 15AUG14
            If UCase(Viewer.Fields.Find("WERKTYPE").CALFormField.Value) = "" Then
                MsgBox "Veld Werktype van dit Informatieverzoek is niet ingevuld.", vbOKOnly + vbExclamation
                GoTo doorzenden_exit
            ElseIf (UCase(Viewer.Fields.Find("WERKTYPE").CALFormField.Value) = "IFK" Or _
                    UCase(Viewer.Fields.Find("WERKTYPE").CALFormField.Value) = "IFU") Then
                    If Viewer.ObjType = calObjTypeDocument Then
                        MsgBox ("Dit Document kan NIET rechtstreeks doorgezonden worden naar het Archief." & vbCrLf & _
                                "Gebruik de knop Doorsturen om eerst een Folder aan te maken."), vbOKOnly + vbExclamation
                    Else
                        MsgBox ("Deze Folder kan NIET rechtstreeks doorgezonden worden naar het Archief." & vbCrLf & _
                                "Beantwoord de vraag 'Informatieverzoek afgehandeld'."), vbOKOnly + vbExclamation
                    End If
                GoTo doorzenden_exit
            End If
        End If
        strTemp = ""                                    '[PAC] - 15AUG14
        On Error GoTo EH                                '[PAC] - 15AUG14
'[PAC] - TD169077

        vanWorkstep = GetWorkstep(Viewer)
        If Mid(vanWorkstep, 4, 2) = "01" Then
            strTemp = Left(vanWorkstep, 2)
            If strTemp = "11" Or strTemp = "12" Or _
                strTemp = "13" Or strTemp = "14" Or _
                strTemp = "05" Or strTemp = "06" Or _
                strTemp = "07" Or strTemp = "08" Or _
                strTemp = "09" Or strTemp = "10" Or strTemp = "33" Then
                strTemp = ""
                If strAfdeling = "FOLDER" Then strTemp = " als folder"
                If MsgBox("Weet u zeker dat u het document" + strTemp + " wilt verplaatsten naar het archief?", vbYesNo + vbDefaultButton2, "Archiveren") = vbNo Then
                    GoTo doorzenden_exit
                End If
            End If
        End If
        If Not Viewer.Fields.Find("NR_POLIS") Is Nothing Then
            If Viewer.Fields.Find("NR_POLIS").CALFormField.Value = "" Then
                MsgBox "Om een document of map naar het archief te verplaatsen moet het deelnemernummer zijn ingevuld.", vbOKOnly + vbExclamation
                GoTo doorzenden_exit
            End If
        Else
            MsgBox "Een document of map zonder deelnemernummer mag niet worden verplaats naar het archief.", vbOKOnly + vbExclamation
            GoTo doorzenden_exit
        End If
    End If
'   Centrale processen hebben een div post stap, maar deze niet...
''Q1 Release 2012 CR No. 153254 Dept Changes
    If IsCollAlg(Viewer.CALClientListItem.OpenedItem.Class) Then
        If strAfdeling = "GBA" Or strAfdeling = "VOR" Then
            MsgBox "Deze map kan niet naar deze afdeling gestuurd worden.", vbOKOnly + vbExclamation
            GoTo doorzenden_exit
        End If
    End If
'   Klachten mogen alleen als doc naar de 85 gestuurd worden
    If strAfdeling = "KLA" Then
        If Not (Viewer.CALClientListItem.OpenedItem.Class = "COLL") Then
            MsgBox "Deze map kan niet naar deze afdeling gestuurd worden.", vbOKOnly + vbExclamation
            GoTo doorzenden_exit
        End If
    End If
'   Centrale processen hebben een div post stap, maar daar mogen enkel KLT en DLN inkomen
'   If strAfdeling = "CWO" Or strAfdeling = "PIN" Or strAfdeling = "ECH" Or strAfdeling = "FEP" Then    '[PAC] - TD157138
    If strAfdeling = "PIN" Or strAfdeling = "ECH" Or strAfdeling = "FEP" Then       '[PAC] - TD157138
        If Not (Viewer.CALClientListItem.OpenedItem.Class = "COLLDLN" Or _
                Viewer.CALClientListItem.OpenedItem.Class = "COLLKLT" Or _
                Viewer.CALClientListItem.OpenedItem.Class = "COLL") Then
            MsgBox "Enkel KLT en DLN mappen mogen naar centrale processen gestuurd worden.", vbOKOnly + vbExclamation
            GoTo doorzenden_exit
        End If
    End If
    CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR", strAfdeling
    If UCase(strAfdeling) = "KLA" Then
        CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "KLA_AFD", CALGetUserVar("Afdeling", CALClient.username)
    End If
    If Left(strAfdeling, 3) = "46V" Then
        If Not (Viewer.CALClientListItem.OpenedItem.Class = "COLL") Then
            CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR", "VOR"
            CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "WORKSTEP_NAAM", strAfdeling
        End If
    End If
'   Als doorgezonden wordt van de ene naar de andere postproces
'   vul als behandelaar de coordinator in als behandelaar nog
'   niet is gewijzigd door de gebruiker zelf.
'   Dit is niet het geval als de afdelingstring waar naartoe wordt gestuurd
'   niet voorkomt in de waarde van behandelaar
    If IsCollAlg(Viewer.CALClientListItem.OpenedItem.Class) And strAfdeling <> "ARCHIEF" Then
        If InStr(1, Viewer.Fields.Find("BEHANDELAAR").CALFormField.Value, strAfdeling) = 0 Then
            CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "BEHANDELAAR", ""
            CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "STUUR_VAR", "1"
        End If
    End If
'   Mabr is dit voor een COLL??? blijkbaar wel.. en ook voor collmut
    If strAfdeling = "KJW" Or strAfdeling = "PPI" Or _
       strAfdeling = "PTA" Or strAfdeling = "PTB" Or _
       strAfdeling = "PTD" Or strAfdeling = "PTC" Or _
       strAfdeling = "FAL" Or strAfdeling = "FND" Then
        CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "BEHANDELAAR", ""
        CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "STUUR_VAR", "1"
    End If
'   Stuur door naar standaard doorzenden werkstap
    SaveNewItem Viewer
    myQueue.Client = Application.CALClient
    If strAfdeling = "ARCHIEF" Then
        myQueue.name = wsArchief
    ElseIf strAfdeling = "FOLDER" Then
        myQueue.name = wsArchiefFolder
    Else
        myQueue.name = wsDoorzenden
    End If
    myQueue.Type = calQueueTypeWorkstep
    
    'Commented for EX9.21 Nl on Vista as it gives an Invalid Handler passed error
    'Viewer.CALClientListItem.OpenedItem.Close (calCloseSaveChanges)
    'Comment ends
    'Comment - replacement code as suggested by Global360
    Viewer.CALClientListItem.OpenedItem.Save
    Viewer.CALClientListItem.OpenedItem.Close (calCloseAbortChanges)
    'Comment ends - replacement code as suggested by Global360
    
    Viewer.CALClientListItem.Send myQueue, calSendDiscard
    Viewer.TryClose wdoForceCloseSaveChanges
'   Mabr 10-3-2005 Altijd via doorzenden_exit eruit geeft object variable error
    Unload myFrmAfdeling
    Set myFrmAfdeling = Nothing
    Exit Sub
    Resume

EH:
    If Err Then DisplayError "Doorzenden"

doorzenden_exit:
    Unload myFrmAfdeling
    Set myFrmAfdeling = Nothing
    Afdelingannuleren = True
End Sub

Public Sub Doorzendennieuw(Viewer As WorkitemViewer, strAfdeling As String, Optional bdoctype As Boolean)
Dim myQueue             As New CALQueue
Dim vanWorkstep         As String
Dim strTemp             As String
Dim arrAfdelingen(3, 1) As String

    On Error GoTo EH
'   Save werkitem
    WorkflowSave Viewer
    CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR", strAfdeling
'   Als doorgezonden wordt van de ene naar de andere postproces
'   vul als behandelaar de coordinator in als behandelaar nog
'   niet is gewijzigd door de gebruiker zelf.
'   Dit is niet het geval als de afdelingstring waar naartoe wordt gestuurd
'   niet voorkomt in de waarde van behandelaar
    If IsCollAlg(Viewer.CALClientListItem.OpenedItem.Class) And strAfdeling <> "ARCHIEF" Then
        If InStr(1, Viewer.Fields.Find("BEHANDELAAR").CALFormField.Value, strAfdeling) = 0 Then
            CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "BEHANDELAAR", ""
        End If
    End If
    If strAfdeling = "KJW" Then
        CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "BEHANDELAAR", ""
    End If
'   Als de afdeling is veranderd dan zal het documenttype blank moeten worden gemaakt
'   en de ind_trigger zal weer op BOP moeten komen.
    If bdoctype = False Then
        CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "DOCTYPE", ""
        CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "IND_TRIGGER", "BOP"
    Else 'mabr melding ind_trigger aangepast 2-2006 en pac_info button.
        CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "IND_TRIGGER", "INF"
    End If
'   Stuur door naar standaard doorzenden werkstap
    SaveNewItem Viewer
    myQueue.Client = Application.CALClient
    myQueue.name = wsDoorzenden
    myQueue.Type = calQueueTypeWorkstep
    
    'Commented for EX9.21 Nl on Vista as it gives an Invalid Handler passed error
    'Viewer.CALClientListItem.OpenedItem.Close (calCloseSaveChanges)
    'Comment ends
    'Comment - replacement code as suggested by Global360
    Viewer.CALClientListItem.OpenedItem.Save
    Viewer.CALClientListItem.OpenedItem.Close (calCloseAbortChanges)
    'Comment ends - replacement code as suggested by Global360
    
    Viewer.CALClientListItem.Send myQueue, calSendDiscard
    Viewer.TryClose wdoForceCloseSaveChanges

EH:
    If Err Then DisplayError "Doorzendennieuw"
End Sub

Public Function IsLeegmakenVeldenJa(ByVal sWerksoort As String, ByVal sWerktype As String) As Boolean
'   Deze functie controleert de inhoud van beide velden en
'   vraagt evt de gebruiker toestemming deze velden leeg te mogen maken
Dim sPrompt             As String
Dim sHeader             As String
Dim bLeegmaken          As Boolean

    If sWerksoort = "" And sWerktype = "" Then
        bLeegmaken = True
    Else
        sPrompt = "Indien u kiest voor 'Yes', dan wordt de inhoud " & Chr(13) & Chr(10) & _
                  "van velden 'Werksoort' en 'Werktype' leeggemaakt." & Chr(13) & Chr(13) & Chr(10) & _
                  "Wilt u doorgaan?"
        sHeader = "Doorzenden naar andere afdeling"
        bLeegmaken = (MsgBox(sPrompt, vbYesNo, sHeader) = vbYes)
    End If
    IsLeegmakenVeldenJa = bLeegmaken
End Function

Public Sub Reclassificeer(Viewer As WorkitemViewer, ToClass As String)
Dim nMaxVolgNr          As Integer
Dim strPolisnr          As String
Dim StrZaakID           As String
Dim strVolgNr           As String

    On Error GoTo EH
    If ((Viewer.CALClientListItem.Info.Status And calObjStatusReserved) <> calObjStatusReserved) Then
        MsgBox "Reserveer eerst het werkitem."
        Exit Sub
    End If
    WorkflowSave Viewer
    Viewer.CALClientListItem.OpenedItem.Reclassify ToClass, calReclassifyRetainFormData

EH:
    If Err Then DisplayError "Reclassificeer"
End Sub

Public Sub sendtomailbox(WIViewer As WorkitemViewer)
Dim myQueue             As New CALQueue
Dim vUser               As Variant
Dim myFrmsendmailbox    As Object

    On Error GoTo EH
    Set myFrmsendmailbox = New frmMailbox
    myFrmsendmailbox.Show 1
    If IsNull(myFrmsendmailbox.lUsers) Then
        GoTo sendtomailbox_exit
    End If
    myQueue.Client = Application.CALClient
    myQueue.Type = calQueueTypeMailbox
    myQueue.name = myFrmsendmailbox.lUsers.Value
    WorkflowSave WIViewer
    
    'Commented for EX9.21 Nl on Vista as it gives an Invalid Handler passed error
    'WIViewer.CALClientListItem.OpenedItem.Close (calCloseSaveChanges)
    'Comment ends
    'Comment - replacement code as suggested by Global360
    WIViewer.CALClientListItem.OpenedItem.Save
    WIViewer.CALClientListItem.OpenedItem.Close (calCloseAbortChanges)
    'Comment ends - replacement code as suggested by Global360
    
    WIViewer.CALClientListItem.Send myQueue, calSendDiscard
    WIViewer.TryClose wdoForceCloseSaveChanges

sendtomailbox_exit:
    Exit Sub

EH:
    If Err Then
        DisplayError "Mailbox"
        Unload myFrmsendmailbox
    End If
End Sub

Public Sub WeerBehandelen(Viewer As WorkitemViewer)
Dim myFrmAfdeling       As Object
Dim myQueue             As New CALQueue
Dim strAfdeling         As String
Dim strIndtrigger       As String
Dim strHuPo             As String
Dim strTeam             As String
Dim objWFUVars          As CALWorkflowVariables

    On Error GoTo EH
    If ((Viewer.CALClientListItem.Info.Status And calObjStatusReserved) <> calObjStatusReserved) Then
        MsgBox "Reserveer eerst het werkitem."
        Exit Sub
    End If
'   Ophalen uservars om mee te geven aan de zaak/document.
    strAfdeling = CALGetUserVar("Afdeling", CALClient.username)
    strTeam = CALGetUserVar("WFUBehGroep", CALClient.username)
    If IsCollAlg(Viewer.CALClientListItem.OpenedItem.Class) Then
        If strAfdeling = "" Then
            Set myFrmAfdeling = New frmAfdeling
            myFrmAfdeling.cbAfdeling.list = plActieveProcessen
            myFrmAfdeling.Show 1
            If IsNull(myFrmAfdeling.cbAfdeling) Then
                GoTo EH
            End If
            strAfdeling = myFrmAfdeling.cbAfdeling
        End If
''Q1 Release 2012 CR No. 153254 Dept Changes
        If strAfdeling = "GBA" Then
            MsgBox "Deze map kan niet naar deze afdeling gestuurd worden.", vbOKOnly + vbExclamation
            Exit Sub
        End If
        CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR", strAfdeling
'       Zet de hupo van de gebruiker die de zaak in behandeling neemt in veld BEHANDELAAR
        Set objWFUVars = Application.CALClient.WorkflowVariables("MyHupo1", calWorkflowVariableCategoryUser, Application.CALClient.username)
        If objWFUVars.Count = 1 Then
            strHuPo = objWFUVars.item(1).Value.Value
        Else
            strHuPo = ""
        End If
        CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "BEHANDELAAR", strHuPo
        CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "BEH_GROEP", strTeam
    End If
    If Viewer.CALClientListItem.OpenedItem.Class = "COLL" Then
        If strAfdeling = "" Then
            Set myFrmAfdeling = New frmAfdeling
            myFrmAfdeling.cbAfdeling.list = plActieveProcessen
            myFrmAfdeling.Show 1
            If IsNull(myFrmAfdeling.cbAfdeling) Then
                GoTo EH
            End If
            strAfdeling = myFrmAfdeling.cbAfdeling
        End If
        strIndtrigger = strAfdeling
        Select Case strAfdeling
            Case "PIN"
                  strIndtrigger = "PEN"
            Case "CWO"
                  strIndtrigger = "BWO"
        End Select
        CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "BESTEMMING", strAfdeling
        CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR", strAfdeling
        CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "IND_TRIGGER", strIndtrigger
        CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "BEH_GROEP", strTeam
'       Zet de hupo van de gebruiker die de zaak in behandeling neemt in veld BEHANDELAAR
        Set objWFUVars = Application.CALClient.WorkflowVariables("MyHupo1", calWorkflowVariableCategoryUser, Application.CALClient.username)
        If objWFUVars.Count = 1 Then
            strHuPo = objWFUVars.item(1).Value.Value
        Else
            strHuPo = ""
        End If
        CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "BEHANDELAAR", strHuPo
    End If
    If Viewer.CALClientListItem.OpenedItem.Class = "COLLBKF" Then
        MsgBox "BKF formulieren kunnnen niet opnieuw in behandeling genomen worden."
        Exit Sub
    End If
    If Viewer.CALClientListItem.OpenedItem.Class = "COLLMUT" Then
''        CALSetFieldValue Viewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR", "CVE"
''        MsgBox "Het mutatieformulier is naar de CVE verstuurd. Stap 99A30 Verw mut."
    End If
'   Save werkitem
    Viewer.Save
    myQueue.Client = Application.CALClient
    myQueue.name = wsWeerbehandelen
    myQueue.Type = calQueueTypeWorkstep
    Viewer.CALClientListItem.OpenedItem.Close calCloseAbortChanges
    Viewer.CALClientListItem.Send myQueue, calSendDiscard
    Viewer.TryClose wdoForceCloseDiscardChanges

EH:
    If Err Then DisplayError "In behandeling nemen"
End Sub

Public Sub verplaatsNaarWorkStep(ByVal Viewer As WFDWorkitem.WorkitemViewer)
Dim myQueue             As New CALQueue

    Viewer.Save
    
    'Commented for EX9.21 Nl on Vista as it gives an Invalid Handler passed error
    'Viewer.CALClientListItem.OpenedItem.Close (calCloseSaveChanges)
    'Comment ends
    'Comment - replacement code as suggested by Global360
    Viewer.CALClientListItem.OpenedItem.Save
    Viewer.CALClientListItem.OpenedItem.Close (calCloseAbortChanges)
    'Comment ends - replacement code as suggested by Global360
    
    myQueue.Client = Application.CALClient
    myQueue.name = VerplaatsenWorkStep
    myQueue.Type = calQueueTypeWorkstep
    Viewer.CALClientListItem.Send myQueue, calSendDiscard
    Viewer.TryClose wdoForceCloseSaveChanges
End Sub

Private Sub AddAfdeling(ByRef lb As ListBox, ByVal e1 As String, ByVal e2 As String)
Dim i                   As Integer

    On Error GoTo EH
    lb.AddItem
    i = lb.ListCount - 1
    lb.list(i, 0) = e1
    lb.list(i, 1) = e2
    Exit Sub

EH:
    If Err Then DisplayError "fout in AddAfdeling"
End Sub
Attribute VB_Name = "CustomForms413"
Option Explicit

Public DesktopWindowState   As Long

Public Function WorkflowSave(ByVal Viewer As WFDWorkitem.WorkitemViewer, Optional WFMForm As Object) As Boolean
Dim ctlFormfield        As Control

    WorkflowSave = False
    If WFMForm Is Nothing Then
        Set WFMForm = FindOpenWFMForm(Viewer.CALClientListItem.Info.objId.InternalName)
    End If
    If WFMForm Is Nothing Then
'       MsgBox "WFMForm not found develop problem"
        Exit Function
    End If
    Viewer.BringToTop
'   Loop trhu all fields on the form and look for WFMxName fields
    For Each ctlFormfield In WFMForm.Controls
        If Left(ctlFormfield.name, 4) = "WFMr" Then
            WFMSaveFieldYNO WFMForm, Mid(ctlFormfield.name, 5, Len(ctlFormfield.name) - 7)
        ElseIf Left(ctlFormfield.name, 3) = "WFM" Then
            WFMSaveField Viewer, ctlFormfield, 4
        End If
    Next
'   Geef het COLL document als naam doctype, mits dit al niet eerder is gebeurd
'   en Doctype niet leeg is.
    If Viewer.CALClientListItem.OpenedItem.Class = "COLL" Or Viewer.CALClientListItem.OpenedItem.Class = "CPPN" Then
        If Not Viewer.Fields.Find("DOCTYPE") Is Nothing Then
            strDoctype = Viewer.Fields.Find("DOCTYPE").CALFormField.Value
            If Viewer.CALClientListItem.Info.name <> strDoctype And strDoctype <> "" Then
                Viewer.CALClientListItem.OpenedItem.SetName (strDoctype)
            End If
        End If
    End If
    WorkflowSave = True
End Function

Public Sub WorkflowOpen(ByVal Viewer As WFDWorkitem.WorkitemViewer)
'   Remember the current state and minimize the desktop
    DesktopWindowState = Application.Desktop.WindowState
    Application.Desktop.WindowState = wdoWindowStateMinimized
'   Always check het uitzonderingen bestand
    Call CheckOpUitzondering(Viewer)
    OpenWFMForm Viewer
End Sub

Public Sub OpenWFMForm(ByVal Viewer As WFDWorkitem.WorkitemViewer, Optional WFMForm As Object)
Dim InBox               As String
Dim objClientListItem   As CALClientListItem
Dim ctlFormfield        As Control
Dim WFMFormPos          As Integer

    If WFMForm Is Nothing Then
        Set WFMForm = FindOpenWFMForm(Viewer.CALClientListItem.Info.objId.InternalName)
    End If

    If WFMForm Is Nothing Then
'       First time the form is accessed it must be initialized
        InBox = GetWorkstep(Viewer)
        Set WFMForm = GetWFMForm(InBox, Viewer)
        If WFMForm Is Nothing Then Exit Sub
        If WFMForm.WorkitemViewer Is Nothing Then
            Set WFMForm.WorkitemViewer = Viewer
        End If
        Set objClientListItem = Viewer.CALClientListItem
        GetFields Viewer, WFMForm
        If InBox <> "" Then
            If IsNumeric(Mid(InBox, 1, 1)) Then InBox = Mid(InBox, 7)
            WFMForm.Caption = InBox & " " & objClientListItem.Info.name
        Else
            WFMForm.Caption = objClientListItem.Info.name
        End If
        WFMForm.Caption = InBox & " " & objClientListItem.Info.name
        WFMForm.ESWMObjID = objClientListItem.Info.objId.InternalName
        WFMForm.Left = 0
        WFMForm.Top = 0
    End If
    WFMForm.Show 0
End Sub

Public Sub GetFields(ByVal Viewer As WorkitemViewer, WFMForm As Object)
Dim ctlFormfield    As Control
Dim objList         As CALWorkitemWorkstepList

'   Loop trhu all fields on the form and look for WFMxName fields
    For Each ctlFormfield In WFMForm.Controls
        If Left(ctlFormfield.name, 4) = "WFMr" Then
            WFMGetFieldYNO WFMForm, Mid(ctlFormfield.name, 5, Len(ctlFormfield.name) - 7)
        ElseIf Left(ctlFormfield.name, 3) = "WFM" Then
'           Set the class property of the form field control
            WFMGetField Viewer, ctlFormfield, 4
        End If
'       Workitem variabelen
        If Left(ctlFormfield.name, 3) = "WIV" Then
            If objList Is Nothing Then
                Set objList = CALClient.FindInWorkflow(Viewer.CALClientListItem.Info.objId)
            End If
            If objList.Count > 0 Then
                ctlFormfield = CALGetListResultField(objList, 1, Mid(ctlFormfield.name, 5))
            End If
        End If
'       Ivm met kleurenblindheid worden de labels niet meer
'       rood maar blauw getoond.
        If TypeName(ctlFormfield) = "Label" Or TypeName(ctlFormfield) = "Checkbox" Or TypeName(ctlFormfield) = "OptionButton" Then
            If ctlFormfield.ForeColor = TextboxRed Then
                ctlFormfield.ForeColor = LabelHighLighted
            End If
        End If
        If TypeName(ctlFormfield) <> "Label" And TypeName(ctlFormfield) <> "Image" Then
            If ctlFormfield.HelpContextID = 0 Then _
                ctlFormfield.HelpContextID = GetHelpContextId(ctlFormfield.name)
        End If
    Next
    Set objList = Nothing
End Sub

Public Sub WorkflowClose(ByVal Viewer As WFDWorkitem.WorkitemViewer)
' This section is executed when a worktiem retrieved from workflow is closed
' If the associated form is still open it is closed automaticly
    Dim WFMForm As Object
    Dim id As String
    Dim x As Integer
    Dim folder As CALFolder

    Dim Maximize As String
    Dim Zoekform As String
    Dim ZoekformGeopend As Boolean
    ZoekformGeopend = False
        
    ' Als er een Indexformulier geopend is, wordt deze gesloten.
    Set WFMForm = FindOpenWFMForm(Viewer.CALClientListItem.Info.objId.InternalName)
    If Not WFMForm Is Nothing Then Unload WFMForm
          
    ' Haal Aegonopties (gebruikersinstellingen) op
    Maximize = GetRegistryKey("Kodak", "Workdesk\3.2\AegonOpties\MAXIMIZEWD", "maximized")
    Zoekform = GetRegistryKey("Kodak", "Workdesk\3.2\AegonOpties\ZOEKFORM_TONEN", "zoekform")
            
    ' Workdesk tonen na sluiten item/folder
    If Maximize = "Ja" Then
               'Restore the desktop
        If Application.Desktop.WindowState = wdoWindowStateMinimized Then _
           Application.Desktop.WindowState = DesktopWindowState
    End If
      
    ' Terug naar het zoekformulier (Aegon opties)
        ' MITS onder Aegon opties ingesteld.
        ' MITS geopend via zoekformulier
        ' MITS Zoekform reeds geopend en
    If Zoekform = "Ja" Then
        If Viewer.CALClientListItem.Info.Status = calObjStatusOpen Then     'Geopend via zoekformulier
'           1 = calObjStatusWIP: indien via Indexform en de knoppen annuleren en doorsturen
'           4 = calObjStatusModSaved: bij een nieuw doc icm de knop Doorsturen
'           16= calObjStatusOpen: Geopend via zoekformulier
'           Vaststellen of Zoekformulier reeds geopend is.
            ZoekformGeopend = FindOpenZoekform(Viewer.CALClientListItem.Info.objId.InternalName)
            If ZoekformGeopend = True Then frmQuery.Show 0
        End If
    End If
End Sub

Public Function FindOpenWFMForm(ESWMObjID) As Object
'Loop through all open forms to find if a the related to the Viewer
'is already open. The Eastman ObjID is used because this is unique
Dim WFMForm As Object

    Err.Clear
    On Error Resume Next
    For Each WFMForm In UserForms
'       Compare the Eastman ObjID from the viewer and the form
        If WFMForm.ESWMObjID = ESWMObjID Then
            If Err Then     'i.e a Query form does not have an Eastman ObjID
                Err.Clear
            Else
                Set FindOpenWFMForm = WFMForm
                Exit Function
            End If
        End If
    Next
End Function

Public Function FindOpenZoekform(ESWMObjID) As Boolean
'Loop through all open forms to find if a the related to the Viewer
'is already open. The Eastman ObjID is used because this is unique
Dim WFMForm As Object
Err.Clear

On Error Resume Next

For Each WFMForm In UserForms
    'Compare the Eastman ObjID from the viewer and the form
    
'    If WFMForm.ESWMObjId = ESWMObjId Then
'        If Err Then     'i.e a Query form does not have an Eastman ObjID
'            Err.Clear
            If WFMForm.name = "frmQuery" Then
                FindOpenZoekform = True
                Exit Function
            End If
'        Else
'            Set FindOpenZoekform = WFMForm
'            Exit Function
'        End If
'    End If
Next

End Function

Public Sub WFMSaveField(ByVal Viewer As WorkitemViewer, ByVal ctlFormfield As Control, LenFieldPrefix As String)
Dim WFMFormFieldName    As String
Dim WFMFormFieldValue
Dim WFMViewerFieldValue
Dim WFMCALField         As CALFormField
Dim FieldPrefix         As String

'   Set the class property of the form field control
    FieldPrefix = Left(ctlFormfield.name, LenFieldPrefix)
    WFMFormFieldName = Mid(ctlFormfield.name, LenFieldPrefix + 1)
    Set WFMCALField = Viewer.Fields.Find(WFMFormFieldName).CALFormField
    WFMViewerFieldValue = WFMCALField.Value
    
    If ((InStr(1, ctlFormfield, Chr(10)) > 0 Or _
        InStr(1, ctlFormfield, Chr(13)) > 0)) And Not FieldPrefix = "WFMM" Then
        Err.Raise 12345, ctlFormfield.name, "Ongeldige waarde in: " & WFMCALField.Info.Prompt
    End If
'   If Retain zero then value add leading zero's to max lenght
'   ivm met de nl workdesk is aegar nummer geen number meer.
    If ((WFMCALField.Info.Flags And calFieldFlagRetainZeros) = calFieldFlagRetainZeros) Or _
        WFMCALField.Info.name = "NR_AEGAR" Then
        ctlFormfield = Format(Val(ctlFormfield), String(ctlFormfield.MaxLength, "#"))
        If ctlFormfield <> Empty And Val(ctlFormfield) <> 0 Then _
            ctlFormfield = Format(Val(ctlFormfield), String(ctlFormfield.MaxLength, "0"))
    End If
        
    Select Case FieldPrefix
        Case "WFM_", "tb"       'Plane text
             If IsNull(ctlFormfield) Then
                WFMCALField.Value = ""
             Else
                WFMCALField.Value = ctlFormfield
             End If
        Case "WFMC", "cb"       'CheckBox Yes/No
             If ctlFormfield Then
                WFMCALField.Value = "J"
             Else
                WFMCALField.Value = "N"
             End If
        Case "WFMD", "dt"       'Date
        '        Defined as a date on the Eastman form
             If WFMCALField.Info.Type = calFieldTypeDate Then
                WFMCALField.Value = Format(ctlFormfield, "yyyy-MM-dd")
             Else               'Defined as Text on the Eastman form
                WFMCALField.Value = Format(ctlFormfield, "yyyy-MM-dd")
             End If
        Case "WFML", "lb"       'ListBox
             WFMCALField.Value = ctlFormfield
        Case "WFMM"
             WFMCALField.Value = ctlFormfield
        Case Else               'Some other menu
             MsgBox "WFM Field type unknown " & ctlFormfield.name
    End Select

    If TypeName(ctlFormfield) = "Label" Or TypeName(ctlFormfield) = "Checkbox" Or TypeName(ctlFormfield) = "OptionButton" Then
        If ctlFormfield.ForeColor = TextboxRed Then
            ctlFormfield.ForeColor = LabelHighLighted
        End If
    End If
End Sub

Public Sub WFMGetField(ByVal Viewer As WorkitemViewer, ByVal ctlFormfield As Control, LenFieldPrefix As String)
Dim WFMFormFieldName    As String
Dim WFMFormFieldType    As String
Dim WFMFormFieldValue
Dim WFMViewerField      As Field
Dim WFMViewerFieldValue
Dim WFMCALFieldList     As CALFormFieldValueList
Dim WFMCALFieldListValue
Dim FieldPrefix         As String

'   Set the class property of the form field control
    FieldPrefix = Left(ctlFormfield.name, LenFieldPrefix)
    WFMFormFieldName = Mid(ctlFormfield.name, LenFieldPrefix + 1)
    Set WFMViewerField = Viewer.Fields.Find(WFMFormFieldName)
    If WFMViewerField Is Nothing Then
        MsgBox WFMFormFieldName & " not found on WFM form!"
        Call InitFuncSec
        If FuncSecGroup = "SYSTEEMBEHEER" Then
        Else
            Exit Sub
        End If
    End If
    WFMViewerFieldValue = WFMViewerField.CALFormField.Value
    If (ctlFormfield.ControlTipText) = "" Then
        ctlFormfield.ControlTipText = WFMViewerField.CALFormField.Info.HelpText     'put help in the tooltip
    End If
    ctlFormfield.Tag = WFMViewerField.CALFormField.Info.Prompt
    If ctlFormfield.HelpContextID = 0 Then _
            ctlFormfield.HelpContextID = GetHelpContextId(ctlFormfield.name)
    Select Case FieldPrefix
    Case "WFM_", "tb"         'Plane text
         On Error GoTo DoTheBOB
         'Hier gebleven...
         'Leegmaken ctlFormField indien "BOB", waarde veroorzaakr error 380 ongeldige eigenschapswaarde

AfterDoTheBOB:
         If Not WFMViewerFieldValue = "BOP" Then ctlFormfield = WFMViewerFieldValue
         ctlFormfield.MaxLength = WFMViewerField.CALFormField.Info.Length
'        If Retain zero then value add leading zero's to max lenght
         If ((WFMViewerField.CALFormField.Info.Flags And calFieldFlagRetainZeros) = calFieldFlagRetainZeros) Or _
            UCase(WFMViewerField.CALFormField.Info.name) = "NR_AEGAR" Then
            ctlFormfield = Format(Val(ctlFormfield), String(ctlFormfield.MaxLength, "#"))
            If ctlFormfield <> Empty And Val(ctlFormfield) <> 0 Then _
                ctlFormfield = Format(Val(ctlFormfield), String(ctlFormfield.MaxLength, "0"))
         End If
    Case "WFMC", "cb"       'CheckBox Yes/No
         If Mid(WFMViewerFieldValue, 1, 1) = "Y" Or _
            Mid(WFMViewerFieldValue, 1, 1) = "y" Or _
            Mid(WFMViewerFieldValue, 1, 1) = "J" Or _
            Mid(WFMViewerFieldValue, 1, 1) = "j" Then
            ctlFormfield = 1
         Else
            ctlFormfield = 0
         End If
    Case "WFMD", "dt"      'Date
         If Len(WFMViewerFieldValue) > 0 Then
            If Len(WFMViewerFieldValue) = 8 Then
                WFMViewerFieldValue = Mid(WFMViewerFieldValue, 1, 4) & "-" & _
                Mid(WFMViewerFieldValue, 5, 2) & "-" & Mid(WFMViewerFieldValue, 7, 2)
            End If
            ctlFormfield = Format(WFMViewerFieldValue, "dd-mm-yyyy")
         Else
            ctlFormfield = ""
         End If
         ctlFormfield.MaxLength = 10
    Case "WFML", "lb"      'ListBox
         ctlFormfield = WFMViewerFieldValue
         Set WFMCALFieldList = WFMViewerField.CALFormField.Info.ValueList
         ctlFormfield.AddItem " "
         For Each WFMCALFieldListValue In WFMCALFieldList
            ctlFormfield.AddItem WFMCALFieldListValue
         Next
    Case "WFMM"
         ctlFormfield = WFMViewerFieldValue
         ctlFormfield.MaxLength = WFMViewerField.CALFormField.Info.Length
'        if Retain zero then value add leading zero's to max lenght
         If ((WFMViewerField.CALFormField.Info.Flags And calFieldFlagRetainZeros) = calFieldFlagRetainZeros) Or _
            UCase(WFMViewerField.CALFormField.Info.name) = "NR_AEGAR" Then
            ctlFormfield = Format(Val(ctlFormfield), String(ctlFormfield.MaxLength, "#"))
            If ctlFormfield <> Empty And Val(ctlFormfield) <> 0 Then _
                ctlFormfield = Format(Val(ctlFormfield), String(ctlFormfield.MaxLength, "0"))
            End If
    Case Else ' some other menu
        MsgBox "WFM Field type unknown " & ctlFormfield.name
    End Select
    Exit Sub

DoTheBOB:
    If ctlFormfield.name = "WFM_IND_TRIGGER" Or ctlFormfield.name = "WFM_WERKSOORT" Or ctlFormfield.name = "WFM_WERKTYPE" Then
        WFMViewerFieldValue = ""
    End If
    GoTo AfterDoTheBOB
End Sub

Public Sub WFMGetFieldYNO(ByVal WFMForm As Object, ByVal WFMFormFieldName As String)
Dim WFMViewerField As Field
Dim WFMViewerFieldValue
Dim ctlFormfield As Control
Dim intLenPrefix As Integer

    Set WFMViewerField = WFMForm.WorkitemViewer.Fields.Find(WFMFormFieldName)
    

    If WFMViewerField Is Nothing Then
        MsgBox WFMFormFieldName & " not found on WFM form!"
        Call InitFuncSec
        If FuncSecGroup = "SYSTEEMBEHEER" Then
        Else
            Exit Sub
        End If
    End If
    WFMViewerFieldValue = WFMViewerField.CALFormField.Value
    
    ' loop trhu all fields on the form and look for strFieldName fields
    For Each ctlFormfield In WFMForm.Controls
        If Left(ctlFormfield.name, 4) = "WFMr" Or Left(ctlFormfield.name, 2) = "rb" Then
            If Left(ctlFormfield.name, 4) = "WFMr" Then
                intLenPrefix = 4
            Else
                intLenPrefix = 2
            End If
            If WFMFormFieldName = Mid(ctlFormfield.name, intLenPrefix + 1, Len(ctlFormfield.name) - 3 - intLenPrefix) Then
        
                If Trim(ctlFormfield.ControlTipText) = "" Then
                    ctlFormfield.ControlTipText = WFMViewerField.CALFormField.Info.HelpText     'put help in the tooltip
                End If
                ctlFormfield.Tag = WFMViewerField.CALFormField.Info.Prompt
            
                If UCase(Mid(WFMViewerFieldValue, 1, 1)) = "J" And _
                    UCase(Right(ctlFormfield.name, 2)) = "JA" Then
                    
                    ctlFormfield = True
                End If
        
                If UCase(Mid(WFMViewerFieldValue, 1, 1)) = "N" And _
                    UCase(Right(ctlFormfield.name, 3)) = "NEE" Then
                    
                    ctlFormfield = True
                End If
                
                If UCase(Mid(Trim(WFMViewerFieldValue), 1, 1)) = "" And _
                    UCase(Right(ctlFormfield.name, 3)) = "ONB" Then
                    
                    ctlFormfield = True
                End If
    
                If UCase(Mid(Trim(WFMViewerFieldValue), 1, 1)) = "-" And _
                    UCase(Right(ctlFormfield.name, 3)) = "NVT" Then
                    
                    ctlFormfield = True
                End If
    
            End If
        End If
    Next
End Sub
Public Sub WFMSaveFieldYNO(ByVal WFMForm As Object, ByVal WFMFormFieldName As String)
Dim WFMViewerField As Field
Dim WFMViewerFieldValue
Dim ctlFormfield As Control
Dim intLenPrefix As Integer
Dim strWorksetName As String

    Set WFMViewerField = WFMForm.WorkitemViewer.Fields.Find(WFMFormFieldName)
    strWorksetName = WFMForm.WorkitemViewer.CALClientListItem.Info.SourceWorkstep

    If WFMViewerField Is Nothing Then
        MsgBox WFMFormFieldName & " not found on WFM form!"
        Call InitFuncSec
        If FuncSecGroup = "SYSTEEMBEHEER" Then
        Else
            Exit Sub
        End If
    End If
    WFMViewerFieldValue = WFMViewerField.CALFormField.Value
    
    ' loop trhu all fields on the form and look for WFMFormFieldName fields
    For Each ctlFormfield In WFMForm.Controls
        If Left(ctlFormfield.name, 4) = "WFMr" Or Left(ctlFormfield.name, 2) = "rb" Then
            If Left(ctlFormfield.name, 4) = "WFMr" Then
                intLenPrefix = 4
            Else
                intLenPrefix = 2
            End If
          
            If WFMFormFieldName = Mid(ctlFormfield.name, intLenPrefix + 1, Len(ctlFormfield.name) - (intLenPrefix + 3)) Then
                If ctlFormfield = True And _
                    UCase(Right(ctlFormfield.name, 2)) = "JA" And _
                    WFMViewerFieldValue <> "J" Then
                    If ctlFormfield.name <> "WFMrJN_NAAR_CASE360_ja" Then   'Q3 Release Change
                        WFMViewerField.CALFormField.Value = "J"
                    Else
                        If strWorksetName = "46A01 Beoord doc" Then     'Q2 Release 2012
                            WFMViewerField.CALFormField.Value = "46"             'Q3 Release Change
                        ElseIf strWorksetName = "98A01 Beoord doc" Then
                            WFMViewerField.CALFormField.Value = "98"
                        End If
                    End If
                End If
        
                If ctlFormfield = True And _
                    UCase(Right(ctlFormfield.name, 3)) = "NEE" And _
                    WFMViewerFieldValue <> "N" Then
                    If ctlFormfield.name <> "WFMrJN_NAAR_CASE360nee" Then   'Q3 Release Change
                        WFMViewerField.CALFormField.Value = "N"
                    Else
                        WFMViewerField.CALFormField.Value = ""              'Q3 Release Change
                    End If
                End If
        
                If ctlFormfield = True And _
                    UCase(Right(ctlFormfield.name, 3)) = "ONB" And _
                    Trim(WFMViewerFieldValue) <> "" Then
                    
                    WFMViewerField.CALFormField.Value = ""
                End If
    
                If ctlFormfield = True And _
                    UCase(Right(ctlFormfield.name, 3)) = "NVT" And _
                    Trim(WFMViewerFieldValue) <> "-" Then
                    
                    WFMViewerField.CALFormField.Value = "-"
                End If
    
            End If
        End If
    Next
End Sub

Attribute VB_Name = "Desktop"
Attribute VB_Base = "0{05153D09-8F1B-11D3-8049-00A024E9EEA6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Desktop_CommandBarClicked(ByVal objCommandBarControl As WFDCommon.WDOCommandBarControl, blnCancel As Boolean)
Dim DTWorklistItems     As WDOWorklistItems
Dim DTWorklistItem      As WDOWorklistItem
Dim myWorkitemViewer    As WorkitemViewer
Dim mynewViewer         As WorkitemViewer
Dim ClientList          As CALClientList
Dim ClientListItem      As CALClientListItem
Dim Ret                 As VbMsgBoxResult
Dim i                   As Integer
Dim bnotopen            As Boolean
Dim Menu
Dim exe                 As WDBridgeExecutioner

    On Error GoTo EH
    InitWorkdesk

'   Kijk op welke knop is gedrukt en start functie
    Select Case objCommandBarControl.name
        Case Is = "About"
             AEAbout.Show 1
             blnCancel = True
        Case Is = mnuSysdelete
             Call Sysdelete
        Case Is = "NewDocument", Is = "New"
             blnCancel = True
             Call NewDocument
        Case Is = "NewFolder"
             blnCancel = True
        Case Is = "NewImport"
             blnCancel = True
        Case Is = mnuHelp
             blnCancel = True
             Help
        Case Is = "ContentsAndIndex"
             On Error GoTo EH
             Err.Clear
        Case Is = mnuSaveEmail
             Set ClientListItem = golOutlook.SaveEmailInWorkflow
             If Not ClientListItem Is Nothing Then
                Application.Viewers.OpenViewer ClientListItem, wdoOpenViewerNormal, wdoOpenReadWrite
             End If
             Set ClientListItem = Nothing
'            Deze kunnen uiteindelijk verwijderd worden.
        Case Is = "Test Email Open"                 'Test inz April 2006 release
             Set ClientListItem = golOutlook.SaveOpenedEmail(, , True)
             If Not ClientListItem Is Nothing Then
                Application.Viewers.OpenViewer ClientListItem, wdoOpenViewerNormal, wdoOpenReadWrite
             End If
             Set ClientListItem = Nothing
        Case Is = "Test Email Sent"                 'Test inz April 2006 release
             Set ClientListItem = golOutlook.SaveOpenedEmail(, , False)
             If Not ClientListItem Is Nothing Then
                Application.Viewers.OpenViewer ClientListItem, wdoOpenViewerNormal, wdoOpenReadWrite
             End If
             Set ClientListItem = Nothing
        Case Is = "Test WDBridge"                   'Test inz April 2006 release
             wdb.test
        Case Is = mnuSaveTelefon
             Call NewDocument(, , mnuSaveTelefon)
        Case Is = "Remove"
             If Application.Desktop.ActivePane = wdoDesktopWorklistPane Then
             Set DTWorklistItems = Application.Desktop.Worklist.SelectedItems
             Set ClientList = Application.CALClient.ClientList
             For Each DTWorklistItem In DTWorklistItems
                Set ClientListItem = DTWorklistItem.CALClientListItem
                If Not ClientListItem.OpenedItem Is Nothing Then
'                   MaBr 5-11-2003 De trycleanup was origineel vanuit het application logoff
'                   ik heb hem verplaatst en gebruik hem hier
                    If Not TryCleanUpItem(ClientListItem) Then
'                       MaBr 5-11-2003 Het is echt allemaal dubbelop maar ik wil toch de volgende
'                       code laten uitvoeren omdat er in de trycleanup ook een aantal fouten zitten / zaten
'                       Close before remove
                        If ((ClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
                            Set myWorkitemViewer = Application.Viewers.FindViewer(ClientListItem)
                            If Not myWorkitemViewer Is Nothing Then
                                If ((myWorkitemViewer.CALClientListItem.Info.Status And calObjStatusModSaved) = calObjStatusModSaved) Then
                                    Ret = MsgBox("Formulier is gewijzigd; kies voor Doorsturen", vbOKOnly + vbExclamation)
                                Else
                                    myWorkitemViewer.BringToTop
                                    
                                    'Commented for EX9.21 Nl on Vista as it gives an Invalid Handler passed error
                                    'WorkitemViewer.CALClientListItem.OpenedItem.Close (calCloseSaveChanges)
                                    'Comment ends
                                    'Comment - replacement code as suggested by Global360
                                    myWorkitemViewer.CALClientListItem.OpenedItem.Save
                                    myWorkitemViewer.CALClientListItem.OpenedItem.Close (calCloseAbortChanges)
                                    'Comment ends - replacement code as suggested by Global360
    
                                    myWorkitemViewer.TryClose (wdoForceCloseSaveChanges)
                                    If myWorkitemViewer.ObjType = calObjTypeFolder Then
                                        Application.CALClient.ClientList.Remove ClientListItem
                                    Else
                                        If Not ClientListItem.OpenedItem Is Nothing Then
                                            Application.CALClient.ClientList.Remove ClientListItem
                                        End If
                                    End If
                                End If
                            Else
                                'Commented for EX9.21 Nl on Vista as it gives an Invalid Handler passed error
                                'ClientListItem.OpenedItem.Close (calCloseSaveChanges)
                                'Comment ends
                                'Comment - replacement code as suggested by Global360
                                ClientListItem.OpenedItem.Save
                                ClientListItem.OpenedItem.Close (calCloseAbortChanges)
                                'Comment ends - replacement code as suggested by Global360
    
                                Application.CALClient.ClientList.Remove ClientListItem
                            End If
                        Else
'                            MaBr 5-11-2003 hij staat op de worklijst maar
'                            de status is niet beschikbaar
                            Application.Viewers.OpenViewer ClientListItem, wdoOpenViewerNormal, wdoOpenReadWrite
                        End If
                    End If
                Else
'                   MaBr 6-11-2003 hij staat op de worklijst maar de status is niet beschikbaar
'                   een delete kan gegeven worden via  stukje uit de trycleanup
                    If ClientListItem.Info.Status = (0 Or calObjStatusWIP) Then
                        If Not ClientListItem.Info.Status = calObjStatusWIP Then
                            Application.CALClient.ClientList.Remove ClientListItem
                        Else
                            Application.Viewers.OpenViewer ClientListItem, wdoOpenViewerNormal, wdoOpenReadWrite
                        End If
                    End If
                End If
             Next
             blnCancel = True
             End If
        Case Is = mnuWijzigenItems
             WijzigenItems.Show vbModal
             Unload WijzigenItems
        Case Is = mnuMUTQuery
'            Query scherm voor mutaties en salarislijsten
             frmMUTQuery.Show 0
             blnCancel = True
        Case Is = mnuPOSTQuery                              '[PAC] 25SEP09
'            Query scherm voor mutaties en salarislijsten   '[PAC] 25SEP09
             frm_PostQuery.Show 0                           '[PAC] 25SEP09
             blnCancel = True                               '[PAC] 25SEP09
        Case Is = "Find"
'            Normaal query scherm
             frmQuery.Show 0
             blnCancel = True
        Case Is = mnuDefaultColumns
'            Pas kolommen in de worksetcontents pane aan
'            Voor documenten andere kolommen zien dan voor folders
             Call SetInbox4Default
        Case Is = mnuAllColumns
'            Pas kolommen in de worksetcontents pane aan
'            Voor documenten andere kolommen zien dan voor folders
             Call SetInbox4AllColumns
        Case Is = "PAC Info"
             If CALGetUserVar("Afdeling", CALClient.username) = "CCC" Or _
                CALGetUserVar("Afdeling", CALClient.username) = "PAC" Then
                Call NewDocument("PAC", "INF Informatieverzoek", "StartInfo")
             End If
        Case mnuWFVarView
             Application.Desktop.WindowState = wdoWindowStateMinimized
             frmWFMData.Show 1
             Unload frmWFMData
        Case "I-WFM"
             Shell "C:\Program Files\Internet Explorer\IEXPLORE.EXE http://aegonnet.aegon.nl/Pensioenen/toepassingen/1057717/", vbMaximizedFocus
        Case Is = "SendToMailbox"
             Set DTWorklistItems = Application.Desktop.Worklist.SelectedItems
                For Each DTWorklistItem In DTWorklistItems
                    Set ClientListItem = DTWorklistItem.CALClientListItem
                    Set myWorkitemViewer = Application.Viewers.FindViewer(ClientListItem)
                    If Not myWorkitemViewer Is Nothing Then
                        Call sendtomailbox(myWorkitemViewer)
                        blnCancel = True
                    Else
                        MsgBox "Actie kan niet worden uitgevoerd. Open de items eerst."
                        blnCancel = True
                        Exit Sub
                    End If
                Next
        Case Is = "Aegon Opties"
             frmAegonOpties.Show 1
        Case Else
             For Each Menu In DesktopSecList
                If objCommandBarControl.name = Menu Then _
                    blnCancel = True
             Next
    End Select
    Exit Sub

EH:
    DisplayError "Desktop Command"
End Sub
Attribute VB_Name = "ESWMSubs401"
Option Explicit

Sub CALCopyFieldVals(dSrc As Object, dTrg As Object)
' Kopieer de waarden van alle formvelden van het bron naar het
' doeldocument of folder. Bron en doel moeten wel beide type
' CALDocument, of beide type CALFolder hebben.
Dim i, rCount           As Integer

    For i = 1 To dSrc.FormFields(calFieldsNoViews).Count

Dim objField            As CALFormField
        Set objField = dTrg.FormFields(calFieldsNoViews).item(i)
        If objField.Info.TableName = "" Then
            objField = dSrc.FormFields(calFieldsNoViews).item(i)
        Else
            For rCount = 1 To objField.Info.rows
                objField.Value(rCount) = dSrc.FormFields(calFieldsNoViews).item(i).Value(rCount)
            Next
        End If
    Next
End Sub

Public Sub CALCopyFormFields(FromFields As CALFormFields, ToFields As CALFormFields, Optional fieldName As String)
' Kopieer formfields values naar formfields values.
Dim FromField           As CALFormField
Dim ToField             As CALFormField
Dim myFieldName

    If Not fieldName = Empty Then
'      If a fieldname is specified then it should be there
       ToFields.Find(fieldName).Value = FromFields.Find(fieldName).Value
    Else
        For Each ToField In ToFields
            myFieldName = ToField.Info.name
            If myFieldName <> "TERMINAL" Then
'               Look for a field with the same name
                Set FromField = FromFields.Find(myFieldName)
'               If found copy the value
                If Not FromField Is Nothing Then _
                    ToField.Value = FromField.Value
            End If
        Next
    End If
End Sub

Public Function CALGetUserVar(VarName, username) As Variant
Dim myWFVar             As CALWorkflowVariable
Dim myWFVars            As CALWorkflowVariables

    CALGetUserVar = Empty
    Set myWFVars = Application.CALClient.WorkflowVariables(VarName, calWorkflowVariableCategoryUser, username)
    For Each myWFVar In myWFVars
        If myWFVar.name = VarName And myWFVar.username = username Then CALGetUserVar = myWFVar.Value.Value
    Next
    Exit Function

EH:
    DisplayError "CALGetUserVar"
    Err.Clear
End Function

Public Function CALGetUserVarAllUsers(VarName) As Variant
Dim myWFVars            As CALWorkflowVariables

    CALGetUserVarAllUsers = Empty
    Set myWFVars = Application.CALClient.WorkflowVariables(VarName, calWorkflowVariableCategoryUser)
    Set CALGetUserVarAllUsers = myWFVars
    Exit Function

EH:
    DisplayError "CALGetUserVarAllUsers"
    Err.Clear
End Function

Public Function CALGetRouteVar(VarName) As Variant
Dim myWFVar             As CALWorkflowVariable
Dim myWFVars            As CALWorkflowVariables
Dim intCount            As Integer
Dim arrTemp             As Variant
Dim strAfdelingsnaam    As String

    CALGetRouteVar = Empty
    Set myWFVars = Application.CALClient.WorkflowVariables(VarName, calWorkflowVariableCategoryRoute)
    For Each myWFVar In myWFVars
        If myWFVar.name = VarName Then arrTemp = myWFVar.Value.Value
    Next

''Q1 Release 2012 CR No. 153254 Dept Changes
ReDim arrVars(UBound(arrTemp), 2) As String
    For intCount = LBound(arrTemp) To UBound(arrTemp)
        arrVars(intCount, 0) = arrTemp(intCount)
            Select Case arrTemp(intCount)
                Case "CWO"
                     strAfdelingsnaam = "Centraal proces WO"
                Case "DEB"
                     strAfdelingsnaam = "Debiteurenafdeling"
                Case "ECH"
                     strAfdelingsnaam = "Centraal proces Echtscheiding"
                Case "PIN"
                     strAfdelingsnaam = "Centraal proces PIN"
                Case "FEP"
                     strAfdelingsnaam = "FEP"
                Case "GBA"
                     strAfdelingsnaam = "Groep Gem. Basis Adm."
                Case "KJWA"
                     strAfdelingsnaam = "JWK direct naar archief"
                Case "KJW"
                     strAfdelingsnaam = "Team Jaarwerk"
                Case "PAC"
                     strAfdelingsnaam = "Pensioen Afd Consumentenservice"
                Case "PTA"
                     strAfdelingsnaam = "Klantenteam PTA"
                Case "PTB"
                     strAfdelingsnaam = "Klantenteam PTB"
                Case "FND"
                     strAfdelingsnaam = "Klantenteam FND"
                Case "PTD"
                     strAfdelingsnaam = "Klantenteam PTD"
                Case "PTC"
                     strAfdelingsnaam = "Klantenteam PTC"
                Case "PPI"
                     strAfdelingsnaam = "Klantenteam PPI"
                Case "FAL"
                     strAfdelingsnaam = "Klantenteam FAL"
                Case "PTE"
                     strAfdelingsnaam = "PTE Klantenteam 1"
                Case "PTF"
                     strAfdelingsnaam = "PTF Klantenteam 2"
                Case "PTG"
                     strAfdelingsnaam = "PTG Klantenteam 3"
                Case "PTH"
                     strAfdelingsnaam = "PTH Klantenteam 4"
                Case "APP"                              '[PAC] 17MAR15 - PTN --> APP - TD172461
                     strAfdelingsnaam = "Aegon Persoonlijk Pensioen"    '[PAC] 17MAR15 - PTN --> APP - TD172461
                Case "PTI"
                     strAfdelingsnaam = "PTI Klantenteam 6"
                Case "PTL"                                  '[PAC] - TD17266
                     strAfdelingsnaam = "Klantenteam PTL"   '[PAC] - TD17266
                Case "PTR"                                  '[PAC] - TD17266
                     strAfdelingsnaam = "Klantenteam PTR"   '[PAC] - TD17266
                Case "ARCHIEF"
                     strAfdelingsnaam = "Digitaal Archief"
                Case "KLA"
                     strAfdelingsnaam = "Klacht Afhandeling"
                Case "FVP"
                     strAfdelingsnaam = "Fonds voorheffing Pens."
                Case "VOR"
                     strAfdelingsnaam = "Vorderingen afdeling"
                Case Else
                     strAfdelingsnaam = ""
        End Select
        arrVars(intCount, 1) = strAfdelingsnaam
    Next
    CALGetRouteVar = arrVars
    Exit Function

EH:
    DisplayError "CALGetRouteVar"
    Err.Clear
End Function

Function CALGetListResultField(ByVal ListRes As Object, i As Integer, sField As String) As String
Dim j                   As Integer
Dim Info                As CALEnumExtraInfo

    Set Info = ListRes.item(i).ExtraInfo
    For j = 1 To Info.Count
        If Info.item(j).name = sField Then
            CALGetListResultField = Info.item(j).Value
            Exit Function
        End If
    Next
    CALGetListResultField = ""
End Function

Public Sub CALSendClientItemToQ(item As CALClientListItem, WorkStep)
Dim objQueue            As New CALQueue

    objQueue.Client = CALClient
    objQueue.name = WorkStep
    objQueue.Type = calQueueTypeWorkstep
    item.Send objQueue, calSendDiscard
End Sub

Function CALCreateFolder(sName As String, sClass As String) As CALClientListItem
' Create a folder and put it on the client list.
Dim doc                 As CALDocument
Dim WItem               As CALWorkitemInfo
Dim id                  As CALObjID

    Set WItem = CALClient.CreateFolder(sName, sClass)
    Set id = WItem.objId
    Set CALCreateFolder = CALAddToCL(id, True)
End Function

Function CALCreateDocument(sName As String, sClass As String) As CALClientListItem
Dim WItem               As CALWorkitemInfo
Dim id                  As CALObjID

    Set WItem = CALClient.CreateDocument(sName, sClass)
    Set id = WItem.objId
    Set CALCreateDocument = CALAddToCL(id, True)
End Function

Function CALAddToCL(id As CALObjID, bRetain As Integer) As CALClientListItem
    If bRetain Then
        Set CALAddToCL = CALClient.ClientList.Add(id, calAddRetain)
    Else
        Set CALAddToCL = CALClient.ClientList.Add(id, 0)
    End If
End Function

Function CALOpenFolder(CLI As CALClientListItem, bReadWrite As Integer) As CALFolder
    On Error Resume Next
    If bReadWrite Then
        Set CALOpenFolder = CLI.Open(calOpenReadWrite)
    Else
        Set CALOpenFolder = CLI.Open(calOpenReadOnly)
    End If
End Function

Function CALOpenDoc(CLI As CALClientListItem, bReadWrite As Integer) As CALDocument
    If bReadWrite Then
        Set CALOpenDoc = CLI.Open(calOpenReadWrite)
    Else
        Set CALOpenDoc = CLI.Open(calOpenReadOnly)
    End If
End Function

Sub CALClose(Obj As Object)
    Call Obj.Close(calCloseAbortChanges)
End Sub

Function CALGetFieldValue(FormObj As Object, sField As String) As String
Dim ff                  As CALFormFields
Dim formfieldexists     As CALFormField
 
    If TypeOf FormObj Is CALDocument Then
        Set ff = FormObj.FormFields(calFieldsNoViews)
    ElseIf TypeOf FormObj Is CALFolder Then
        Set ff = FormObj.FormFields(calFieldsNoViews)
    End If
    If ff Is Nothing Then
        CALGetFieldValue = ""
    Else
        Set formfieldexists = ff.Find(sField)
'       If found copy the value
        If Not formfieldexists Is Nothing Then
            CALGetFieldValue = ff.Find(sField).Value
        Else
            CALGetFieldValue = ""
        End If
    End If
End Function

Sub CALSetFieldValue(Obj As Object, sField As String, ByVal sVal As String)
Dim ff                  As CALFormFields

    Set ff = Obj.FormFields(calFieldsNoViews)
    ff.Find(sField).Value = sVal
End Sub

Sub CALSetDateFieldValue(Obj As Object, sField As String, ByVal sVal As String)
Dim ff                  As CALFormFields

    Set ff = Obj.FormFields(calFieldsNoViews)
    ff.Find(sField).Value = Format(sVal, "yyyy-mm-dd")
End Sub

Function CALGetImportClass(myExt As String) As CALImportClass
Dim ImportClass         As CALImportClass

    For Each ImportClass In Application.CALClient.ImportClasses
        If UCase(ImportClass.FileNameExtension) = UCase(myExt) Then
            Set CALGetImportClass = ImportClass
            Set ImportClass = Nothing
            Exit Function
        End If
    Next
End Function

Public Sub CALLinkFolderChilds(fSrc As CALFolder, fDst As CALFolder)
' Link source folder's children to the destination folder.
' The dest folder must already be open for write and must be saved
' after completing this sub.
Dim i                   As Integer
Dim id                  As CALObjID

    For i = 1 To fSrc.Children.Count(calObjTypeAll)
        Set id = fSrc.Children.item(i, calObjTypeAll).Info.objId
        Call fDst.Children.Add(id, calChildLast)
    Next
End Sub

Public Sub CALSave(Obj As Object)
    Obj.Save
End Sub

Function CALGetClass(Ob As Object) As String
'   Get the object's class. Ob should be of type CALDocument or CALFolder.
    CALGetClass = Ob.Class
End Function

Function CALGetName(Ob As Object) As String
'   Get the object's external name. Ob should be of type CALDocument or CALFolder.
    CALGetName = Ob.Info.name
End Function

Private Function CALIsTableRowEmpty(ByVal ESWMTable As Field, ByVal row As Integer) As Boolean
Dim i                   As Integer

    CALIsTableRowEmpty = True
    If ESWMTable Is Nothing Then Exit Function
    If row < 1 Or row > ESWMTable.RowCount Then Exit Function
    For i = 1 To ESWMTable.ColumnCount
         If ESWMTable.CALFormField(i).Value(row) <> "" Then
            CALIsTableRowEmpty = False
            Exit Function
         End If
    Next i
End Function

Public Sub CALSaveTable(ListView As ListView, ESWMTable As Field)
Dim itmx                As ListItem
Dim i, j, x             As Integer
'   i is de rij van de ESWM tabel en Listview
'   j is de eastman kolom (doel)
'   x is de listview kolom (bron)
    
'   In geval van UWO is er geen kinderen tabel
    If ESWMTable Is Nothing Then Exit Sub
'   Lees de rijen van de listview
    For i = 1 To ListView.ListItems.Count
        Set itmx = ListView.ListItems.item(i)
'       Voor iedere kolom in de ESWM tabel
        For j = 1 To ESWMTable.ColumnCount
'           Zoek de bijbehorden kolom in de listview erbij
'           De key van de columnheader moet gelijk zijn aan de
'           kolomnaam in de ESWM tabel.
            For x = 1 To ListView.ColumnHeaders.Count
                If ListView.ColumnHeaders.item(x).Key = ESWMTable.CALFormField(j).Info.name Then
'                   Als het een J/N veld is zet dan een X of niets neer
                    If Left(ESWMTable.CALFormField(j).Info.name, 2) = "JN" Then
                        If itmx.SubItems(x - 1) = "X" Then
                            If ESWMTable.CALFormField(j).Value(i) <> "J" Then
                                ESWMTable.CALFormField(j).Value(i) = "J"
                            End If
                        Else
                            If ESWMTable.CALFormField(j).Value(i) <> "" Then
                                ESWMTable.CALFormField(j).Value(i) = ""
                            End If
                        End If
                    Else
                        If ESWMTable.CALFormField(j).Value(i) <> itmx.SubItems(x - 1) Then
                            ESWMTable.CALFormField(j).Value(i) = itmx.SubItems(x - 1)
                        End If
                    End If
                    x = ListView.ColumnHeaders.Count + 1
                End If
            Next x
        Next j
    Next i
'   Schoon de overige rijen in de ESWM tabel
    For i = ListView.ListItems.Count + 1 To ESWMTable.RowCount
        For j = 1 To ESWMTable.ColumnCount
            ESWMTable.CALFormField(j).Value(i) = ""
        Next j
    Next i
End Sub

Public Sub CALGetTable(ListView As ListView, ESWMTable As Field, Optional Init As Boolean = True)
Dim itmx                As ListItem
Dim i, j, x             As Integer
'   i is de rij van de ESWM tabel en Listview (bron en doel)
'   j is de eastman kolom (bron)
'   x is de listview kolom (doel)

    If Init Then ClearListView ListView
    If ESWMTable Is Nothing Then Exit Sub
'   Lees de rijen een voor een van de ESWM tabel
    For i = 1 To ESWMTable.RowCount
        If Not CALIsTableRowEmpty(ESWMTable, i) Then
            Set itmx = ListView.ListItems.Add()
'           Voor iedere kolom in de ESWM tabel
            For j = 1 To ESWMTable.ColumnCount
'               Zoek de bijbehorden kolom in de listview erbij
'               De key van de columnheader moet gelijk zijn aan de
'               kolomnaam in de ESWM tabel.
                For x = 1 To ListView.ColumnHeaders.Count
                    If ListView.ColumnHeaders.item(x).Key = ESWMTable.CALFormField(j).Info.name Then
'                       Als het een J/N veld is zet dan een X of niets neer
                        If Left(ESWMTable.CALFormField(j).Info.name, 2) = "JN" Then
                            If ESWMTable.CALFormField(j).Value(i) = "J" Then
                                itmx.SubItems(x - 1) = "X"
                            End If
                            If ESWMTable.CALFormField(j).Value(i) = "N" Then
                                itmx.SubItems(x - 1) = ""
                            End If
                        Else
                            itmx.SubItems(x - 1) = ESWMTable.CALFormField(j).Value(i)
                            x = ListView.ColumnHeaders.Count + 1
                        End If
                    End If
                Next x
            Next j
        End If
    Next i
End Sub

Public Function GetUsersPerPerBehGroep(strBehGroep As String, strAfdeling As String) As Collection
Dim colUsers            As New Collection
Dim lngCount            As Long
Dim strHuPo1            As String
Dim strAfdUser          As String

'   Mabr 07-02-2006 1 maal doen en dan niet meer
'   wel enkel op A en B want ieder heeft zijn eigen afdeling op de users te zien...
'   anders komen we hier niet.
    If strBehGroep = "A" Then
        If Not globalBEHGROEP_A Is Nothing Then
            Set GetUsersPerPerBehGroep = globalBEHGROEP_A
            Exit Function
        End If
    End If
    If strBehGroep = "B" Then  ' het is B
        If Not globalBEHGROEP_B Is Nothing Then
            Set GetUsersPerPerBehGroep = globalBEHGROEP_B
            Exit Function
        End If
    End If
    If strBehGroep = "C" Then  ' het is C
        If Not globalBEHGROEP_C Is Nothing Then
            Set GetUsersPerPerBehGroep = globalBEHGROEP_C
            Exit Function
        End If
    End If
'   Als ze nothing zijn moeten ze initieel gevuld worden
    For lngCount = 1 To gobjBehgroepen.Count
        If gobjBehgroepen.item(lngCount).Value.Value = strBehGroep Then
            strAfdUser = CALGetUserVar("Afdeling", gobjBehgroepen.item(lngCount).username)
            If strAfdUser = strAfdeling Then        'User zit in behandelgroep van de juiste afdeling
                strHuPo1 = CALGetUserVar("MyHupo1", gobjBehgroepen.item(lngCount).username)
                colUsers.Add strHuPo1, gobjAfdeling.item(lngCount).username
            End If
        End If
    Next
    Set colUsers = SortCollection(colUsers)
    Set GetUsersPerPerBehGroep = colUsers
    If strBehGroep = "A" Then Set globalBEHGROEP_A = GetUsersPerPerBehGroep
    If strBehGroep = "B" Then Set globalBEHGROEP_B = GetUsersPerPerBehGroep
    If strBehGroep = "C" Then Set globalBEHGROEP_C = GetUsersPerPerBehGroep
End Function

Public Function GetUsersPerAfdeling(strAfdeling As String) As Collection
Dim colUsers            As New Collection
Dim lngCount            As Long
Dim strHuPo1            As String

    For lngCount = 1 To gobjAfdeling.Count
        If gobjAfdeling.item(lngCount).Value.Value = strAfdeling Then
            strHuPo1 = CALGetUserVar("MyHupo1", gobjAfdeling.item(lngCount).username)
            colUsers.Add strHuPo1, gobjAfdeling.item(lngCount).username
        End If
    Next
    Set colUsers = SortCollection(colUsers)
    Set GetUsersPerAfdeling = colUsers
End Function

Public Function CALGetUsersPerAfdeling(strAfdeling As String) As Variant
Dim myWFVarNaam         As CALWorkflowVariable
Dim myWFVarsAllNames    As CALWorkflowVariables
Dim myWFVarsAfdeling    As CALWorkflowVariables
Dim strVarName          As String
Dim strHuPo1            As String
Dim intCount            As Integer
Dim astrAfdelingen()    As String
ReDim astrUsers(0, 1) As String
Dim objDictUsers        As New Dictionary
Dim vItem               As Variant
Dim ff                  As Variant

'   Constante zetten
    strVarName = "Afdeling"
'   Alles ophalen
    On Error GoTo EH
    For intCount = 1 To gobjAfdeling.Count
        If gobjAfdeling.item(intCount).Value.Value = strAfdeling Then
'           Opvragen vanuit een object ipv CALGetuservar
            strHuPo1 = CALGetUserVar("MyHupo1", gobjAfdeling.item(intCount).username)
            objDictUsers.Add strHuPo1, gobjAfdeling.item(intCount).username
        End If
    Next

ReDim astrUsers(objDictUsers.Count, 1)

    intCount = 0
    For Each vItem In objDictUsers
        astrUsers(intCount, 0) = vItem
        intCount = intCount + 1
    Next
    intCount = 0
    For Each vItem In objDictUsers.Items
        astrUsers(intCount, 1) = vItem
        intCount = intCount + 1
    Next
    CALGetUsersPerAfdeling = astrUsers
    Exit Function

EH:
    DisplayError "CALGetUserVar"
    Err.Clear
End Function

Public Function CALGetUsersPerBehGroep(strBehGroep As String, strAfdeling As String) As Variant
Dim myWFVarNaam         As CALWorkflowVariable
Dim myWFVarsAllNames    As CALWorkflowVariables
Dim myWFVarsAfdeling    As CALWorkflowVariables
Dim strVarName          As String
Dim strHuPo1            As String
Dim intCount            As Integer
Dim astrAfdelingen()    As String
ReDim astrUsers(0, 1) As String
Dim objDictUsers        As New Dictionary
Dim vItem               As Variant
Dim ff                  As Variant
Dim strAfdUser          As String

'   Constante zetten
    strVarName = "Afdeling"
    On Error GoTo EH
    For intCount = 1 To gobjBehgroepen.Count
        If gobjBehgroepen.item(intCount).Value.Value = strBehGroep Then
            strHuPo1 = CALGetUserVar("MyHupo1", gobjBehgroepen.item(intCount).username)
            strAfdUser = CALGetUserVar("Afdeling", gobjBehgroepen.item(intCount).username)
            If strAfdUser = strAfdeling Then  'user zit in behandelgroep van de juiste afdeling
                objDictUsers.Add strHuPo1, gobjAfdeling.item(intCount).username
            End If
        End If
    Next

ReDim astrUsers(objDictUsers.Count, 1)

    intCount = 0
    For Each vItem In objDictUsers
        astrUsers(intCount, 0) = vItem
        intCount = intCount + 1
    Next
    intCount = 0
    For Each vItem In objDictUsers.Items
        astrUsers(intCount, 1) = vItem
        intCount = intCount + 1
    Next
    CALGetUsersPerBehGroep = astrUsers
    Exit Function

EH:
    DisplayError "CALGetUserVar"
    Err.Clear
End Function

Public Function CALBehGroepPerUser(strHuPo As String) As Variant
Dim objWFVar            As CALWorkflowVariable
Dim strUserName         As String
Dim strff

    On Error GoTo EH
    For Each objWFVar In gobjHupos1
        If CStr(objWFVar.Value.Value) = strHuPo Then
          strUserName = objWFVar.username
        End If
    Next
    CALBehGroepPerUser = CALGetUserVar("WFUBehGroep", strUserName)
    Exit Function

EH:
    DisplayError "CALBehGroepPerUser"
    Err.Clear
End Function

Public Function WriteAcces(classname) As Boolean
    If getAccessForWIClass(classname) = calAccessWrite Then
        WriteAcces = True
    Else
        WriteAcces = False
    End If
End Function

Public Function ReadAcces(classname) As Boolean
    If getAccessForWIClass(classname) = calAccessRead Or getAccessForWIClass(classname) = calAccessWrite Then
        ReadAcces = True
    Else
        ReadAcces = False
    End If
End Function

Public Function getAccessForWIClass(classname) As AccessConstants
Dim sClass              As String

    On Error Resume Next
    sClass = classname
    getAccessForWIClass = Application.CALClient.WorkitemClasses.Find(sClass).Access
    If Err <> 0 Then getAccessForWIClass = calAccessNone
End Function

Public Function CALAfdelingPerUser(strHuPo As String) As Variant
Dim objWFVar            As CALWorkflowVariable
Dim strUserName         As String
Dim strff

    On Error GoTo EH
    For Each objWFVar In gobjHupos1
        If CStr(objWFVar.Value.Value) = strHuPo Then strUserName = objWFVar.username
    Next
    CALAfdelingPerUser = CALGetUserVar("Afdeling", strUserName)
    Exit Function
 
EH:
    DisplayError "CALAfdelingPerUser"
    Err.Clear
End Function
Attribute VB_Name = "ErrorMods401"
Option Explicit

Public Function NumberCheck(Number As Control) As Boolean
Dim ErrDescription
Dim fieldName

    NumberCheck = False
    fieldName = Number.Tag
    ErrDescription = "Ongeldige numerieke waarde in: " & fieldName 'Default errmsg

    On Error GoTo EH
    If Not Number Is Nothing And Number <> Empty Then
        NumberCheck = IsNumeric(Number.Value)
        If Not NumberCheck Then
            GoTo EH
        End If
    End If
    Number.BackColor = TextboxWhite
    Exit Function

EH:
    Beep
    Number.BackColor = TextboxRed
    Err.Raise 12345, , ErrDescription
End Function

Public Function DateCheck(Datum As Control) As Boolean
Dim ErrDescription
Dim fieldName
Dim strDatum        As String

    On Error GoTo EH
    DateCheck = False
    fieldName = Datum.Tag
    ErrDescription = "Ongeldige datum in: " & fieldName & " "       'Default errmsg
    If Len(Datum) > 0 Then
        If Len(Datum) = 8 Then
            If IsNumeric(Datum) Then
                Datum = Mid(Datum, 1, 2) & "-" & _
                        Mid(Datum, 3, 2) & "-" & _
                        Mid(Datum, 5, 4)
            Else
                GoTo EH
            End If
        End If
        strDatum = Datum
        Call DateStrCheck(strDatum)
        Datum = Format(Datum, "dd/mm/yyyy")
    End If
    DateCheck = True
    Datum.BackColor = TextboxWhite
    Exit Function

EH:
    Beep
    Datum.BackColor = TextboxRed
    Err.Raise 12345, , ErrDescription + Err.Description
End Function

Public Function DateCheckBefore(Datum As Control) As Boolean
' Deze checkt controleert of de ingevoerde datum in de toekomst ligt
' bij nog te verrichten werkzaamheden heeft een rappeldatum in het verleden geen zin.

Dim dtDate As Date
On Error GoTo EH
    
    DateCheckBefore = False
    
    If Datum <> "" Then
        dtDate = Datum
        If dtDate < Date Then GoTo EH
    End If

    DateCheckBefore = True
    Datum.BackColor = TextboxWhite

Exit Function

EH:
    Beep
    Datum.BackColor = TextboxRed
    
    Err.Raise 12333, , "Het betreft een lopende zaak, daarom kan de datum niet in het verleden liggen"
    
End Function

Public Function DateStrCheck(Datum As String)
    If Len(Datum) > 0 Then
        If Len(Datum) <> 10 Then Err.Raise 12345, , " (8 of 10 lang)"
        If Val(Mid(Datum, 7, 4)) < 1900 Or _
           Val(Mid(Datum, 7, 4)) > 2200 Then
            Err.Raise 12345, , " (Jaar 1900-2200)"
        End If
        If Not IsDate(Datum) Then
            Err.Raise 12345
        End If
    End If
End Function

Public Function ANummerCheck(ANummer As Control) As Boolean
Dim strANummer      As String
Dim intCount        As Integer
Dim intDigit        As Integer
Dim intLastDigit    As Integer
Dim lngSomMachten   As Long
Dim lngSom          As Long
Dim ErrDescription  As String

    On Error GoTo EH
    ANummerCheck = False
    ANummer.BackColor = TextboxWhite
    intLastDigit = 0

    strANummer = ANummer
    If Len(strANummer) <> 10 Then
        ErrDescription = "Het A-Nummer moet tien posities hebben"
        GoTo EH
    End If

    If Left(strANummer, 1) = "0" Then
        ErrDescription = "Het A-Nummer mag niet met 0 beginnen"
        GoTo EH
    End If

    For intCount = 0 To 9
        intDigit = CInt(Mid(strANummer, intCount + 1, 1))
        If intDigit = intLastDigit Then
            ErrDescription = "het A-Nummer mag geen twee dezelfde cijfers na elkaar hebben"
            GoTo EH
        End If
        lngSom = lngSom + intDigit
        lngSomMachten = lngSomMachten + (intDigit * 2 ^ intCount)
        intLastDigit = intDigit
    Next

    If lngSom Mod 11 <> 0 Or lngSomMachten Mod 11 <> 0 Then
        ErrDescription = "Het A-Nummer voldoet niet aan de elf-proef"
        GoTo EH
    End If
    Exit Function

EH:
    Beep
    ANummer.BackColor = TextboxRed
    Err.Raise 12345, , ErrDescription
End Function

Public Function PolisNummerCheck(WFM_NR_POLIS As Control) As Boolean
Dim strPolisNummer      As String
Dim intCount            As Integer
Dim intDigit            As Integer
Dim intLastDigit        As Integer
Dim lngSomMachten       As Long
Dim lngSom              As Long
Dim ErrDescription      As String
Dim strFouteKars

    On Error GoTo EH
    PolisNummerCheck = False
    WFM_NR_POLIS.BackColor = TextboxWhite
    strPolisNummer = WFM_NR_POLIS
    If (Len(strPolisNummer) <> 10) And (Len(strPolisNummer) <> 6) Then
        ErrDescription = "deelnemernummer vullen met 6 (klant) of 10 (deelnemer) posities."
        GoTo EH
    End If
'   Het deelnemernr wordt in "Folder vullen" gebruikt als naam voor een map
'   hieronder worden de karakters onderschept die niet in een mapnaam mogen: \/:*?"<>|
'   er zijn ook karakters die helemaal niet in een deelnemernr mogen zoals: %*/\
    strFouteKars = "%\/:*?""<>|"
    For intCount = 1 To Len(strFouteKars)
        If InStr(strPolisNummer, Mid(strFouteKars, intCount, 1)) > 0 Then
            ErrDescription = "een deelnemernummer kan de volgende karakters niet bevatten:"
            For intDigit = 1 To Len(strFouteKars)
                ErrDescription = ErrDescription + " " + Mid(strFouteKars, intDigit, 1)
            Next intDigit
            GoTo EH
        End If
    Next intCount
    PolisNummerCheck = True
    Exit Function

EH:
    Beep
    WFM_NR_POLIS.BackColor = TextboxRed
    Err.Raise 12345, , ErrDescription
End Function

Public Function DisplayError(ModuleName) As Integer
Dim objESWMErr As CALError
Dim ErrDescription
Dim ErrNumber

    DisplayError = csESWMErrorExitSub

    If Err.Number = 1043 Then
            MsgBox "Displayerror. Na het openen van de zaak is er een document aan toegevoegd. Deze functie wordt afgebroken ", vbInformation + vbMsgBoxSetForeground + vbOKOnly, "Bijlagen toevoegen aan Emailbericht"
    End If

    If Err.Number = 1000 Then
        Set objESWMErr = Application.CALMaster.LastError
        ErrNumber = objESWMErr.Code
        ErrDescription = objESWMErr.Details
        If ErrNumber = 26 Then
            DisplayError = csESWMErrorResumeNext
            Exit Function
        End If
    Else
        ErrNumber = Err.Number
        ErrDescription = Err.Description
        Select Case ErrNumber
            Case 2705
                 Err.Description = "Terminal emulatie nog niet gestart."
            Case 0
                 Exit Function
            Case Else
        End Select
    End If

    Beep
    MsgBox Err.Description, _
           vbOKOnly + vbExclamation + vbMsgBoxSetForeground, _
           ModuleName + ",  " + Str$(ErrNumber)
End Function

Public Function CheckHupo(vHupo As Control) As Boolean
Dim objWFVar            As CALWorkflowVariable

    On Error GoTo EH
    CheckHupo = False
    vHupo.BackColor = TextboxWhite
    If vHupo = "" Then
        CheckHupo = True
        Exit Function
    End If
    For Each objWFVar In gobjHupos1
        If CStr(objWFVar.Value.Value) = vHupo Then
            CheckHupo = True
            Exit Function
        End If
    Next
    For Each objWFVar In gobjHupos2
        If CStr(objWFVar.Value.Value) = vHupo Then
            CheckHupo = True
            Exit Function
        End If
    Next

EH:
    Beep
    vHupo.BackColor = TextboxRed
    Err.Raise 12345, , "Hupo komt niet voor in WFM"
End Function

Public Function valutaCheck(valutaVeld As Control) As Boolean 'OmBu 12-okt-2006

Dim DotPosition As Integer
Dim aantalKommas As Integer
Dim Length As Integer
Dim Ending As Integer
Dim heleGetallen As Integer
Dim Begining As Integer

Dim intCount As Integer
Dim intTeken As String
Dim decimalenTeken As String
Dim ErrDescription As String

On Error GoTo EH
    
    valutaCheck = False
    valutaVeld.BackColor = vbWhite 'TextboxWhite
    decimalenTeken = ","
    
    If valutaVeld = "" Then
        Exit Function
    End If
    
    If Len(valutaVeld) > 12 Then
        ErrDescription = "Het valuta-veld mag maximaal 12 posities hebben"
        GoTo EH
    End If

    
    Ending = InStrRev(valutaVeld, decimalenTeken)
    Length = Ending - 1
    heleGetallen = Len(Mid(valutaVeld, 1))
    If Length > 10 Then 'aantal getallen voor de komma
        ErrDescription = "Aantal cijfer voor de komma, mogen niet meer dan 10 zijn!"
        GoTo EH
    End If
    
    If Left(valutaVeld, 1) = "0" Then
        ErrDescription = "Het valuta-veld mag niet met 0 beginnen"
        GoTo EH
    End If
  
    For intCount = 0 To Len(valutaVeld)
        intTeken = (Mid(valutaVeld, intCount + 1, 1))
        If intTeken = decimalenTeken Then
            aantalKommas = aantalKommas + 1
            If aantalKommas > 1 Then
                ErrDescription = "het valuta-veld mag niet meer dan |fffd||fffd|n komma bevatten"
                GoTo EH
            End If
        End If
    Next
If (InStr(valutaVeld, ",") - 1) = -1 Then
    valutaVeld = valutaVeld & ",00"
Else
DotPosition = (Len(valutaVeld)) - (InStr(valutaVeld, ",") - 1)
    
    If DotPosition > 3 Then
            ErrDescription = "Er staan meer dan 2 cijfer achter de komma!"
            GoTo EH
        ElseIf DotPosition < 2 Then
                Begining = 1 '(InStrRev(valutaVeld, "\") + 1)
                Ending = InStrRev(valutaVeld, ",")
                Length = Ending - Begining
                valutaVeld = Mid(valutaVeld, Begining, Length)
                'NewString = Mid(valutaVeld, (InStrRev(valutaVeld, ",") + 1), _
                    (InStrRev(valutaVeld, ",") - (InStrRev(valutaVeld, "\") + 1))) 'Dit is een ingewikkeldere versie van wat boven staat.
        ElseIf DotPosition = 2 Then
            valutaVeld = valutaVeld & "0"
                If Len(valutaVeld) > 12 Then
                    ErrDescription = "Het limit is 9.999.999.999!"
                    GoTo EH
                End If
    End If

End If
valutaCheck = True
Exit Function
EH:
    Beep
    valutaVeld.BackColor = TextboxRed
    Err.Raise 12345, , ErrDescription

End Function

Attribute VB_Name = "ExcelSessie"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private varESWMObjID    As String
Private varDossier      As String

Public Property Let objId(ByVal vData As Variant)
    varESWMObjID = vData
End Property
Public Property Get objId() As Variant
    objId = varESWMObjID
End Property

Public Property Let Dossier(ByVal vData As Variant)
    varDossier = vData
End Property
Public Property Get Dossier() As Variant
    Dossier = varDossier
End Property

Public Sub EXCELSet(ByVal objWorkitemViewer As WFDWorkitem.WorkitemViewer) ', strTemplate)
    ExcelSessie.objId = objWorkitemViewer.id
    ExcelSessie.Dossier = objWorkitemViewer.name
    SaveSetting "ORIGIN", "Excel", "Dossier", objWorkitemViewer.name
    SaveSetting "ORIGIN", "Excel", "Documentnaam", ""
End Sub

Public Sub EXCELRelease()
    On Error GoTo EH
    Err.Clear
    ExcelSessie.objId = ""
    ExcelSessie.Dossier = ""
    DeleteSetting "ORIGIN", "Excel", "Dossier"
    DeleteSetting "ORIGIN", "Excel", "Documentnaam"
    Exit Sub

EH:
    If Err.Number = 5 Then 'registry setting wordt verwijderd terwijl het niet bestaat.
        Err.Clear
        Resume Next
    End If
    DisplayError ("Excelsessie.ExcelRelease")
End Sub

Public Function EXCELActive(ESWMObjID As String) As Boolean
    Select Case ExcelSessie.objId
        Case Is = Empty
             EXCELActive = False
        Case Is = ESWMObjID
'            Voor deze folder staat is al een ExcelSessie gestart.
             MsgBox "Voor dit dossier heeft u inmiddels MS Excel gestart. Verwerk eerst het werkblad in MS Excel, middels 'Save in Workflow'", vbOKOnly + vbCritical
             EXCELActive = True
        Case Else
'            In een andere folder is al een ExcelSessie gestart
'            Deze moet eerst worden afgemaakt.
             MsgBox "Voor Dossier " + ExcelSessie.Dossier + " is momenteel een Excelsessie actief. Verwerk eerst dit dossier.", vbOKOnly + vbCritical
             EXCELActive = True
    End Select
End Function
Attribute VB_Name = "FrmKAPBeoordKapitaal"
Attribute VB_Base = "0{837F0A67-0056-479F-B233-89A4BB50894E}{E8B305F1-49A6-4693-B6EB-A573ECED90A0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim myForm              As Object
Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myPolOver           As CALFormField
Dim WithEvents ObjEmail As Outlook.MailItem
Attribute ObjEmail.VB_VarHelpID = -1
Dim strDateString       As String
Dim booSend             As Boolean

Private Sub Bende()
'   Eigenlijk ergens in een module maar dan moet ik  het form weer meegegeven..
    WFMGetFieldYNO Me, "JN_KAPITAALUITK"
    WFMGetFieldYNO Me, "JN_PENS_VEREVENING"
    WFMGetFieldYNO Me, "JN_OPO_VERZEKERD"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_AFKOOP_NP_BEP"
    WFMGetFieldYNO Me, "JN_PEN_PIN_WIJZ"
    WFMGetFieldYNO Me, "JN_FONDS_UITK"
    WFMGetFieldYNO Me, "JN_BUITENLANDER"
    WFMGetFieldYNO Me, "JN_UITKVIA_WIJZ"
    WFMGetFieldYNO Me, "JN_PARTN_PENS"
    WFMGetFieldYNO Me, "JN_UITRUILBAAR_NP"
    WFMGetField WIViewer, WFM_STATUS_VERZEKERDE, 4
    WFMGetField WIViewer, WFMDDAT_INGANG, 4
'   0VL
    WFMGetFieldYNO Me, "JN_KAPITAALUITK"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_PEN_PIN_WIJZ"
    WFMGetFieldYNO Me, "JN_FONDS_UITK"
    WFMGetFieldYNO Me, "JN_BUITENLANDER"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_EINDE_NP"
    WFMGetFieldYNO Me, "JN_EINDE_OP"
    WFMGetFieldYNO Me, "JN_EINDE_WZP"
    WFMGetFieldYNO Me, "JN_INGANG_NP"
    WFMGetFieldYNO Me, "JN_INGANG_OPO"
    WFMGetFieldYNO Me, "JN_MEER_BEGUNST"
    OVL_WFMDDAT_INGANG = WFMDDAT_INGANG
    WFMGetField WIViewer, WFM_NAAM_PARTNER_ZAAK, 4
End Sub

Private Sub cmdOpslaan_Click()
Dim myIdent             As String

    On Error GoTo EH
    If Not WFM_Validatie Then Exit Sub
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub imgEmailArch_Click()
    Set ObjEmail = golOutlook.CreateEmail2(WIViewer)
    ObjEmail.Send
    If booSend = True Then saveEmail
    Set ObjEmail = Nothing
    WFMrJN_NAAR_PARKEREN_ja.Value = True
    WFM_REDEN_PARKEREN = "Opvraging dossier"
    cmdOpslaan_Click
End Sub

Private Sub objEmail_Send(Cancel As Boolean)
    booSend = False
    If Cancel = False Then
        strDateString = Right(ObjEmail.Subject, 16)
        booSend = True
    End If
End Sub
Private Sub saveEmail()
Dim myDocname           As String
Dim myCLItem            As CALClientListItem
Dim myDoc               As CALDocument
Dim myDocFF             As CALFormFields
Dim myFldFF             As CALFormFields
Dim x                   As Long
Dim myMailItem          As Outlook.MailItem

    Set myMailItem = golOutlook.GetJustSentItem(strDateString)
    If myMailItem Is Nothing Then Exit Sub
    myDocname = Left(myMailItem.Subject, Len(myMailItem.Subject) - 16) & " " & Format(myMailItem.SentOn, "dd-MM-yyyy hh:mm:ss")
    myDocname = Replace(myDocname, "/", "")
    myDocname = Replace(myDocname, "\", "")
    myDocname = Replace(myDocname, "%", "")
    myDocname = Replace(myDocname, "*", "")
    Set myCLItem = CALCreateDocument(myDocname, "COLL")
    If myCLItem Is Nothing Then GoTo EH
    Set myDoc = myCLItem.Open(calOpenReadWrite)
    If myDoc Is Nothing Then GoTo EH
'   Kopieer velden van folder indien viewer is meegegeven
    Set myFldFF = WIViewer.CALClientListItem.OpenedItem.FormFields(calFieldsNoViews)
    Set myDocFF = myDoc.FormFields(calFieldsNoViews)

    CALCopyFormFields myFldFF, myDocFF, "NAAM_DLNMR"
    CALCopyFormFields myFldFF, myDocFF, "NR_POLIS"
    CALCopyFormFields myFldFF, myDocFF, "NR_AEGAR"
    CALCopyFormFields myFldFF, myDocFF, "NAAM_KLANT"
    CALCopyFormFields myFldFF, myDocFF, "NR_KLANT"
    CALCopyFormFields myFldFF, myDocFF, "NR_AEGAR_KLANT"
    CALCopyFormFields myFldFF, myDocFF, "ZK_VOLGNR"
    CALCopyFormFields myFldFF, myDocFF, "IND_TRIGGER"
    CALCopyFormFields myFldFF, myDocFF, "ZAAK_IDENT_NR"
    CALSetFieldValue myDoc, "DOCTYPE", "EMAIL"
    If myMailItem.ReceivedByName <> "" Then     'Received mail
        CALSetFieldValue myDoc, "DAT_ONTV", Format(myMailItem.ReceivedTime, "yyyy-mm-dd")
    Else
        CALSetFieldValue myDoc, "DAT_DOC", Format(myMailItem.SentOn, "yyyy-mm-dd")
    End If
'   Insert body text als import
    x = golOutlook.SaveBody(myMailItem, myDoc, "DOCNAME")
'   Voeg het nieuwe document toe aan de folder
    myDoc.Save
    Call WIViewer.CALClientListItem.OpenedItem.Children.Add(myDoc.Info.objId, calChildLast)
    myDoc.Close calCloseSaveChanges
    CALClient.ClientList.Remove myCLItem
    Set myCLItem = Nothing
    golOutlook.SetEmailUserProperties myMailItem, WIViewer.name, "Opgeslagen"
    Exit Sub

EH:
    If Err Then
        DisplayError "SaveEmail"
        If Not myDoc Is Nothing Then
            myDoc.Close calCloseAbortChanges
        End If
        ' remove myCLItem
        If Not myCLItem Is Nothing Then
            CALClient.ClientList.Remove myCLItem
        End If
    End If
End Sub

Private Sub imgGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
'   Gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean

    If Init Then Exit Sub
    Init = True
    GetCALXFormFields
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    WFM_KAPITAALVORM.AddItem ""
    WFM_KAPITAALVORM.AddItem "Kapitaal bij leven"
    WFM_KAPITAALVORM.AddItem "Kapitaal bij overlijden"
    WFM_KAPITAALVORM.AddItem "Combinatie"
    lbTemplates.AddItem "PIN Kennisgeving KAP"
    Select Case WFM_OORSPR_KENMERK
        Case "PEN"
             MultiPage1.pages("PEN").Visible = True
             MultiPage1.pages("PEN").Enabled = True
             Bende
        Case "OVL"
             MultiPage1.pages("OVL").Visible = True
             MultiPage1.pages("OVL").Enabled = True
             lblDatOVL.Visible = True
             WFMDDAT_OVL.Visible = True
             Select Case WFM_WIE_OVERLEDEN.Value
                Case "D":
                     fraDeelnemer.Visible = True
                Case "P":
                     fraPartner.Visible = True
                Case "W":
                     fraWees.Visible = True
                     lblEx.Visible = False
                     WFM_NAAM_PARTNER_ZAAK.Visible = False
             End Select
             Bende
    End Select
    If WFM_OORSPR_KENMERK = "OVL" Then
        lblDatOVL.Visible = True
        WFMDDAT_OVL.Visible = True
    End If
    If WFM_BEH_GROEP <> "" Then
        lblbeg.Visible = True
        WFM_BEH_GROEP.Visible = True
    End If
    StatusBar1.Panels.item("WFM_NR_POLIS").Text = "Deeln. nr.: " & WFM_NR_POLIS
    StatusBar1.Panels.item("WFM_NR_AEGAR").Text = "Aegarnr.: " & WFM_NR_AEGAR
    MultiPage1.Value = 1
    CheckOpUitzondering WIViewer, txtBijzonderheden
    If txtBijzonderheden.Text = "" Then
        MultiPage1.pages("PageUitz").Visible = False
    End If
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        myPolOver.Value = Right$(Space(10) & Trim(tbPolOver1), 10) & ";" & _
                          Right$(Space(10) & Trim(tbPolOver2), 10) & ";" & _
                          Right$(Space(10) + Trim(tbPolOver3), 10) & ";"
    End If
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappel datum"
End Sub

Private Function WFM_Validatie() As Boolean
    WFM_Validatie = False
'   Er is nog geen duidelijkheid over eventuele validatie op gebruikersniveau.
    WFM_Validatie = True
End Function

Public Sub WFMGetFieldYNO(ByVal WFMForm As Object, ByVal WFMFormFieldName As String)
Dim WFMViewerField      As Field
Dim WFMViewerFieldValue
Dim ctlFormfield        As Control

    Set WFMViewerField = WFMForm.WorkitemViewer.Fields.Find(WFMFormFieldName)
    If WFMViewerField Is Nothing Then
        MsgBox WFMFormFieldName & " not found on WFM form!"
        Call InitFuncSec
        If FuncSecGroup = "SYSTEEMBEHEER" Then
        Else
            Exit Sub
        End If
    End If
    WFMViewerFieldValue = WFMViewerField.CALFormField.Value
'   Loop trhu all fields on the form and look for strFieldName fields
    For Each ctlFormfield In WFMForm.Controls
        If InStr(ctlFormfield.name, WFMFormFieldName) > 0 Then
            If Trim(ctlFormfield.ControlTipText) = "" Then
                ctlFormfield.ControlTipText = WFMViewerField.CALFormField.Info.HelpText     'put help in the tooltip
            End If
            ctlFormfield.Tag = WFMViewerField.CALFormField.Info.Prompt
            If UCase(Mid(WFMViewerFieldValue, 1, 1)) = "J" And _
                UCase(Right(ctlFormfield.name, 2)) = "JA" Then
                
                ctlFormfield = True
            End If
            If UCase(Mid(WFMViewerFieldValue, 1, 1)) = "N" And _
                UCase(Right(ctlFormfield.name, 3)) = "NEE" Then
                
                ctlFormfield = True
            End If
            If UCase(Mid(Trim(WFMViewerFieldValue), 1, 1)) = "" And _
                UCase(Right(ctlFormfield.name, 3)) = "ONB" Then
                ctlFormfield = True
            End If
        End If
    Next
End Sub
Attribute VB_Name = "Globals"
Option Explicit
Declare Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" (lpvDest As Any, lpvSource As Any, ByVal cbCopy As Long)

Public datum_Doc        As String

'Dir's moet eindigen op een \
Public dirWordTemplates         As String   'Locatie word templates
Public dirModhus                As String   'Locatie startwfm-word template in modhus
Public dirCaesarUpload          As String   'Locatie caesar upload files
Public dirInvoerRekenProg       As String   'Locatie uitvoer van waarde rekenprogramma
Public prgWaardeRekenProg       As String   'Locatie waarde rekenprogramma 65-Jaar
Public gsWaardeRekenProg2       As String   '[PAC] - TD170048 67-Jaar
Public pvTempDir                As Variant  'Locatie temp files

'Diversen
Public Const csAegonVBAVersion = "64.01-W7" '[PAC] - 20AUG15 t.b.v. Office2013
Public InitWorkdeskFlag         As Boolean  'Is de workdesk al geinitialiseerd
Public InitScale2Gray           As Boolean  'Is de Scale2Gray in de pageviewer al uitgezet
Public VerplaatsenWorkStep                  'Gekozen workstep waarnaar verplaatst moet worden.
Public geannuleerd                          'Als geannuleerd op frmVerplaatsen
Public WijzigenSetVeldNaamBuff
Public InfoVerstuurd            As Boolean  'Infoverzoek
Public NaarParkeren             As Boolean  'Infoverzoek
Public AFDELING                 As String   'Infoverzoek
Public InfoRappeldat            As String   'Infoverzoek
Public WorkflowSaveAlgedaan     As Boolean
Public Afdelingannuleren        As Boolean
Public NoteExit                 As Boolean

'Uitzonderingen
Public NTServerName                         'Servername
Public WFMDatabaseName                      'Databasenaam van uitzonderingen
Public WFMuid                               'Userid
Public WFMpwd                               'Password
Public UitzonderingenWorksetList As New Collection

Public wdb                      As WDBridge

'[W7]  CAESAR Replica Constants and Variables --------------------------------------
Public Const gcDBCONNECT01      As String = "Driver={Microsoft ODBC for Oracle};CONNECTSTRING=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST="
Public Const gcDBCONNECT02      As String = ")(PORT=1521))(CONNECT_DATA=(SERVICE_NAME="
Public Const gcDBCONNECT03      As String = ")));Uid=Aloralees;Pwd=aloralees;"
Public Const gcQRYDLNMR1        As String = "Select DEELNEMERNAAM,GESLACHT,GEBDAT,AEGARNR,KLANTR,KLANTNAAM,AEGARNR_KLANT,BESTEMMING,IND_PERSONEEL from "
Public Const gcQRYDLNMR2        As String = ".D_Contactgegevens where DLNRNR ='"
Public Const gcQRYDLNMR3        As String = " AND HERKOMST='DVB'"   '[PAC] - 22SEP14
Public Const gcQRYKLANT1        As String = "Select DISTINCT KLANTR,KLANTNAAM,AEGARNR_KLANT,BESTEMMING,IND_PERSONEEL from "
Public Const gcQRYKLANT2        As String = ".D_Contactgegevens where KLANTR ='"
Public Const gcQRYEND           As String = "'"
Public Const gcHOSTTST          As String = "SRV23110"
Public Const gcHOSTPROD         As String = "SRV21104"
Public Const gcSERVICETST       As String = "ACDW1D"
Public Const gcSERVICEPROD      As String = "PCDW2D"
Public Const gcTABLETST         As String = "dmzmlmut01"
Public Const gcTABLEPROD        As String = "dmzmlmut00"

Public gsConnectString          As String
Public gsQueryTable             As String

'Query results
Public gsDeelnemer_naam         As String
Public gsSexe                   As String
Public gsGeboorte_datum         As String
Public gsAEGAR_Nr               As String
Public gsKlant                  As String
Public gsKlantName              As String
Public gsaegar_Nr_Klant         As String
Public gsHUPO                   As String
Public gsRelatie_beheerder      As String
Public gsIND_PERSONEEL          As String
Public gsBestemming             As String
'[W7]  End CEASAR Constants and Variables ------------------------------------------

' Microsoft Office Constants
Public Const gcOFFICEROOT   As String = "C:\Program Files (x86)\Microsoft Office\"
Public Const gcPROGDIR2013  As String = "Office15"
Public Const gcPROGDIR2010  As String = "Office14"
Public Const gcWORDPROG     As String = "\winword.exe"
Public Const gcEXCELPROG    As String = "\excel.exe"
Public Const gcOUTLOOKPROG  As String = "\outlook.exe"

'Word -----------------------------------------------------------------------
Public Const strOfferte = "Offerte"     'Standaard documentnaam Word offertes
Public Const csOpgave = "Opgave O.W."   'Standaard documentnaam Word Opgave OW
Public WordSessie               As New WordSessie
Public strDoctype               As String

'Excel -----------------------------------------------------------------------
Public ExcelSessie              As New ExcelSessie
Public Excelnaam                As String

'Error handling
Public Const csESWMErrorExitSub = 1
Public Const csESWMErrorResumeNext = 2
Public Const csESWMErrorResume = 3
Public Const csESWMErrorOther = 4
Public varESWMError             As Integer  'Return variabele van function displayerror
Public Const TextboxWhite = &H80000005
Public Const TextboxRed = &HFF&
Public Const LabelHighLighted = &HFF0000

'Standaard worksteps
Public Const wsDoorzenden = "Doorzenden"
Public Const wsWeerbehandelen = "WeerBehandelen"
Public Const wsArchief = "REG90 Archief"
Public Const wsArchiefFolder = "REG89 Folder vullen"

'Menu
Public bShowmnuVerplaatsen As Boolean
Public Const mnuWord = "Word document"
Public Const mnuExcel = "Excel document"
Public Const mnuEmail = "Emailbericht"
Public Const mnuHernoem = "Naam document wijzigen"
Public Const mnuBehandelen = "Behandelen"
Public Const mnuInfo = "Informatieverzoek"
Public Const mnuDoorsturen = "Doorsturen"
' 25-10-2004 MaBr button eruit
'Public Const mnuTerug = "Annuleren"
Public Const mnuEscaleren = "Escaleren"
Public Const mnuEscalerenRV = "Escaleren RV"
Public Const mnuBijzonderheden = "Bijzonderheden"
Public Const mnuVerplaatsen = "Verplaatsen"
Public Const mnuExportDoc = "Exporteren Document"               '[PAC] 15DEC09
Public Const mnuPrint = "Print..."
Public Const mnuPrintSetup = "Print Setup..."
Public Const mnuDefaultColumns = "Default kolommen"
Public Const mnuAllColumns = "Alle kolommen"
Public Const mnuFoutVerzonden = "Fout, wel verzonden"
Public Const mnuFoutNietVerzonden = "Fout, niet verzonden"
Public Const FoutNietVerzonden = " FOUT, niet verz."
Public Const FoutWelVerzonden = " FOUT, wel verz."
Public Const mnuWijzigenItems = "Wijzigen Items"
Public Const mnuMUTQuery = "Mutatieformulieren/Salarislijsten"
Public Const mnuPOSTQuery = "Nieuwe Postflow"                   '[PAC] 25SEP09
Public Const mnuTest = "Test"
Public Const mnuDeelnKLant = "Deelnemer en Klantgegevens"
Public Const mnuDoorzenden = "Doorzenden naar ..."
Public Const mnuWeerBehandelen = "In behandeling nemen ..."
Public Const mnuWFVarView = "WFM Tabellen"
Public Const mnuNotities = "Notities..."
Public Const mnuAdd2Email = "Kenmerken toevoegen aan " 'TD86066 20070702 JAG

Public FuncSecGroup As String               'Beveiligings groep
Public FuncSecLevel As Long                 ' 0=ReadOnly, 1=WFMuser ,
Public passFuncSecGroup                     'lazy programmer var
Public passSecList As Collection            'lazy programmer var
Public DesktopSecList As New Collection     ' Desktop Menuitems waarvoor user Niet is geautoriseerd
Public ViewerSecList As New Collection      ' Workitemviewer Menuitems waarvoor user Niet is geautoriseerd
Public PageSecList As New Collection        ' Pageviewer Menuitems waarvoor user Niet is geautoriseerd

'DatePicker JAG20070709
Public Const cdatMinDatum = "01-01-1980"

'PUO
'In memory table for Naam_Pens
Public Type NaamPens
    name As String
    InfoRegel As String
    Postbus As String
    PCPlaats As String
    Rekening As String
End Type
Public PensNames As New Collection

'Email
Public golOutlook       As New RTWorkdeskOutlook
Public Const mnuSaveEmail = "Opslaan Email"
Public Const mnuSaveTelefon = "Opslaan Telefoongesprek"
Public Const mnuCreateEmail = "Email"
Public Const mnuAttachDocument = "Document toevoegen aan Email"
Public Const mnuAttachAll = "Alle documenten toevoegen aan Email"

Public myOutlook As Outlook.Application  'Connect to Outlook
Public myNameSpace As Outlook.NameSpace

'Email reply vanuit een WFM zaak
Public ReplyFolderID As String
Public ReplyObjectID As String
Public ReplyDLNNr As String

'New document
Public Const mnuNewDocument = "Document"

'Help
Public Const csHelpFile = "Aegon"
Public dirHelpFileDest As String
Public dirHelpFileSrc As String
Public Const mnuHelp = "Aegon Help"

'Sysdelete
Public Const mnuSysdelete = "Sysdelete"

Public plActieveProcessen       As Variant
Public plActievePostProcessen   As Variant

'EURO
Public Const csNLG = "NLG"
Public Const csEUR = "EUR"
Public Const csStdValuta = csEUR

'Toevoegen van documenten
Public Const csOverigePost = "XXX Overige post"
Public Const csDocDummy = "0"
Public Const csDocNieuw = "1"
Public Const csDocOverig = "2"
Public Const csDocRendezvous = "3"

Public astrPrios(2, 1)          As String

Public gobjHupos1               As CALWorkflowVariables
Public gobjHupos2               As CALWorkflowVariables
Public gobjAfdeling             As CALWorkflowVariables
Public gobjBehgroepen           As CALWorkflowVariables

Public globalBEHGROEP_A         As Collection
Public globalBEHGROEP_B         As Collection
Public globalBEHGROEP_C         As Collection

Public mapinfoobjClientListItem As CALClientListItem
Public mapEXCASSOClientlistitem As CALClientListItem

'XML
Public Const XMLFolderClass = "WFMData"
Public Const XMLImportClass = "XMLDATA"
Public Const XMLBaseDomain = "Common"
Public Const WFMDataWIName = "WFMCommon_100"
Public VBForm                   As New OWRTVBForm
Public g_DevMode                As Boolean
Public fso                      As New Scripting.FileSystemObject
Public Eastman                  As New OWRTeiStream

'User fullname
Public g_NTUsername             As String

Public Type USER_INFO_2
    usri2_name As Long
    usri2_password  As Long  ' Null, only settable
    usri2_password_age  As Long
    usri2_priv  As Long
    usri2_home_dir  As Long
    usri2_comment  As Long
    usri2_flags  As Long
    usri2_script_path  As Long
    usri2_auth_flags  As Long
    usri2_full_name As Long
    usri2_usr_comment  As Long
    usri2_parms  As Long
    usri2_workstations  As Long
    usri2_last_logon  As Long
    usri2_last_logoff  As Long
    usri2_acct_expires  As Long
    usri2_max_storage  As Long
    usri2_units_per_week  As Long
    usri2_logon_hours  As Long
    usri2_bad_pw_count  As Long
    usri2_num_logons  As Long
    usri2_logon_server  As Long
    usri2_country_code  As Long
    usri2_code_page  As Long
End Type

Public Declare Function GetLocaleInfo Lib "kernel32" Alias "GetLocaleInfoA" _
  (ByVal Locale As Long, ByVal LCType As Long, ByVal lpLCData As String, _
   ByVal cchData As Long) As Long

'TD106382
Public Const constMaxItems = 500
Attribute VB_Name = "HostScreen401"
'00-02-03   1.01 Jasc ErrorHandling gewijzigd
Option Explicit

Private HostScreenFrm  As Object

Public Function Scrape(r, c, w, screen, objViewer As WFDWorkitem.WorkitemViewer) As Variant
    On Error GoTo EH
    If HostScreenFrm Is Nothing Then
        Set HostScreenFrm = New frmHostScreen
    End If
    Set HostScreenFrm.CALXTerminal.AttachToWorkItem = Nothing
    If HostScreenFrm.CALXTerminal.AttachToWorkItem Is Nothing Then
        HostScreenFrm.CALXTerminal.classname = objViewer.CALClientListItem.OpenedItem.Class
        Set HostScreenFrm.CALXTerminal.AttachToWorkItem = objViewer.CALClientListItem
    End If
    HostScreenFrm.CALXTerminal = ""
    HostScreenFrm.CALXTerminal.HostColumn = c
    HostScreenFrm.CALXTerminal.HostRow = r
    HostScreenFrm.CALXTerminal.HostWidth = w
    HostScreenFrm.CALXHostScreen.PatternSignature = screen
    HostScreenFrm.CALXHostScreen.Receive
    Scrape = HostScreenFrm.CALXTerminal.Value
    Set HostScreenFrm.CALXTerminal.AttachToWorkItem = Nothing
    Exit Function

EH:
'   Als screenpattern niet overeenkomt
    If Err.Number = 2704 Then
        Err.Clear
        Resume Next
    End If
    DisplayError "Scrape"
End Function

Public Function TrimScrape(r, c, w, screen, objViewer As WFDWorkitem.WorkitemViewer) As String
    On Error GoTo EH
    TrimScrape = Trim(Scrape(r, c, w, screen, objViewer))
    Exit Function

EH:
    DisplayError "TrimScrape"
End Function

Public Function IsHostScreen(screen, objViewer As WFDWorkitem.WorkitemViewer) As Boolean
    On Error GoTo EH
    IsHostScreen = False
    IsHostScreen = (screen = Scrape(1, 5, Len(screen), screen, objViewer))
    Exit Function

EH:
    DisplayError "IsHostScreen"                         '[PAC] - TD162544 Typo: was "IsHostSreen"
End Function

Public Function IsSubScreen(screen, objViewer As WFDWorkitem.WorkitemViewer) As Boolean
    On Error GoTo EH
    IsSubScreen = False
    IsSubScreen = (screen = Scrape(1, 73, Len(screen), screen, objViewer))
    Exit Function

EH:
    DisplayError "IsSubScreen"
End Function
Attribute VB_Name = "MSExcel"
Option Explicit

Dim naamDIPxls          As String

Public Function StartExcel(Optional strFilename As String) As Boolean
Dim sExcelPath              As String
Dim hWnd                    As Long
Dim objExcel                As Object
Dim oFSO                    As New Scripting.FileSystemObject

    On Error GoTo ErrorHandling
    Set objExcel = GetObject(, "Excel.Application")
'   Mabr timing ??????????
    hWnd = FindWindow(ByVal vbNullString, "Microsoft Excel")
    SetForegroundWindow hWnd
    StartExcel = True
    Exit Function

ErrorHandling:
    sExcelPath = (gcOFFICEROOT & gcPROGDIR2013 & gcEXCELPROG)
    If Not oFSO.FileExists(sExcelPath) Then
        sExcelPath = (gcOFFICEROOT & gcPROGDIR2010 & gcEXCELPROG)
    End If
    
    Shell sExcelPath + " " + strFilename, vbNormalFocus   ' There is no commandline switch for starting MS Excel without a document.
    hWnd = FindWindow(ByVal vbNullString, "Microsoft Excel")
    SetForegroundWindow hWnd
    StartExcel = True
End Function

Public Sub StartWorkbook(ByVal objWorkitemViewer As WFDWorkitem.WorkitemViewer)
Dim strExcelDoc         As String 'Het te importen document
Dim oke                 As Boolean

    On Error Resume Next
    Kill pvTempDir + "WFM*.*"
    On Error Resume Next
    If ExcelSessie.EXCELActive(objWorkitemViewer.id) Then
        Exit Sub
    End If
'   14-10  MaBr nog even geen eventbridge
    ExcelSessie.EXCELSet objWorkitemViewer
    If Not StartExcel Then
        MsgBox "Kan MS Excel niet starten"
        Exit Sub
    End If
    On Error GoTo ErrorHandling
    strExcelDoc = WaitForExcel(objWorkitemViewer.id)
    If strExcelDoc <> "" Then
        If Not objWorkitemViewer.Fields.Find("BESTEMMING") Is Nothing Then
            If objWorkitemViewer.Fields.Find("BESTEMMING").CALFormField.Value = "NEW" Then
'               Dan moet het Excel-document in het document worden toegevoegd.
                oke = ImpExcelDocInDocument(objWorkitemViewer, strExcelDoc)
            Else
                oke = ImpExcelDocInFolder(objWorkitemViewer, strExcelDoc)
            End If
        Else
            oke = ImpExcelDocInFolder(objWorkitemViewer, strExcelDoc)
        End If
    End If
    ExcelSessie.EXCELRelease
    Exit Sub

ErrorHandling:
   DisplayError "StartWorkBook"
End Sub

Public Sub StartWorkbook2(ByVal objWorkitemViewer As WFDWorkitem.WorkitemViewer, strFilename As String, nameDIPxls As String)
Dim strExcelDoc         As String 'Het te importen document
Dim oke                 As Boolean

    naamDIPxls = nameDIPxls
    On Error Resume Next
    Kill pvTempDir + "WFM*.*"
    On Error Resume Next
    If ExcelSessie.EXCELActive(objWorkitemViewer.id) Then
        Exit Sub
    End If
'   14-10  MaBr nog even geen eventbridge
    ExcelSessie.EXCELSet objWorkitemViewer
    If Not StartExcel(strFilename) Then
        MsgBox "Kan MS Excel niet starten"
        Exit Sub
    End If
    On Error GoTo ErrorHandling
    strExcelDoc = WaitForExcel(objWorkitemViewer.id)
    If strExcelDoc <> "" Then
        oke = ImpExcelDocInFolder(objWorkitemViewer, strExcelDoc)
    End If
    ExcelSessie.EXCELRelease
    Exit Sub

ErrorHandling:
   DisplayError "StartWorkBook2"
End Sub

Public Function WaitForExcel(ESWMObjID As String) As String
Dim strExcelDoc         As String
Dim i                   As Integer
'   Wacht tot Word in de registry de naam van het uiteindelijk
'   te importeren document heeft geschreven. Op dat moment is Word
'   klaar en kan het document worden geimporteerd
    On Error GoTo EH
    Err.Clear
    strExcelDoc = ""
    DoEvents

NogEenKeer:
'   Controleer of intussen de gebruiker de excelsessie voor deze folder heeft afgebroken.
    If Not ExcelSessie.objId = ESWMObjID Then
        WaitForExcel = ""
        Exit Function
    End If
    strExcelDoc = GetSetting("ORIGIN", "Excel", "Documentnaam", "")
    For i = 1 To 100        'Allow other processing
        DoEvents
    Next i
    If strExcelDoc = "" Then GoTo NogEenKeer
    WaitForExcel = strExcelDoc
    Exit Function

EH:
    DisplayError "WaitForExcel"
    MsgBox "Er is een fout opgetreden na het wachten op het EXcel-document. De functie wordt afgebroken. Het document zal niet worden ge|fffd|mporteerd.", vbCritical + vbOKOnly + vbMsgBoxSetForeground
    ExcelSessie.EXCELRelease
    WaitForExcel = ""
End Function

Public Function ImpExcelDocInFolder(ByVal objViewer As WFDWorkitem.WorkitemViewer, strExcelDoc As String) As Boolean
Dim objClientNieuwDocument  As CALWorkitemInfo
Dim objClientDocListItem    As CALClientListItem
Dim strPolisNummer          As String 'eerste tien van zaakid; deelnemer nummer
Dim strKenmerk              As String ' mid 11,3 van zaakid; zaak kenmerk
Dim strNr                   As String ' right 1 van zaakid; zaak volgnummer
Dim StrZaakID               As String ' zaak indentificatie nummer
Dim strAegonDatum           As String
Dim objDocument             As CALDocument
Dim objfolder               As CALFolder

    ImpExcelDocInFolder = False
    ActivateWorkDesk
    On Error GoTo EH
    Err.Clear
'   Lezen van alle te kopieren foldervelden in het nieuwe document
    Set objfolder = objViewer.CALClientListItem.OpenedItem
    StrZaakID = objViewer.Fields.Find("ZAAK_IDENT_NR").CALFormField.Value
    strAegonDatum = Format(Date, "yyyy-mm-dd")
'   Soms is het polisnummer maar zes lang
    If Len(StrZaakID) > 13 Then
        strPolisNummer = Left(StrZaakID, 10)
        strKenmerk = Mid(StrZaakID, 11, 3)
        strNr = Right(StrZaakID, 1)
    Else
        strPolisNummer = Left(StrZaakID, 6)
        strKenmerk = Mid(StrZaakID, 7, 3)
        strNr = Right(StrZaakID, 1)
    End If
'   Nieuwe document maken en formfields velden
    While Excelnaam = ""
        strDoctype = GetWFMFromXml(strExcelDoc)
        If strDoctype = "Cancel" Then Exit Function
        Err.Clear
        On Error Resume Next
        Excelnaam = strDoctype
        If strDoctype = "" Then strDoctype = "MARC is een tobberd"
        Set objClientNieuwDocument = Application.CALClient.CreateDocument(Excelnaam, "BEREKENING")
        Select Case Err
            Case Is = 1000
                 If Application.CALMaster.LastError.Code = 79 Then
                    MsgBox "U heeft een ongeldige documentnaam opgegeven. Gebruik geen % en *.", vbApplicationModal + vbExclamation + vbOKOnly
                    Excelnaam = ""
                 Else
                    GoTo EH
                 End If
            Case Is > 0
                 GoTo EH
        End Select
        On Error GoTo EH
    Wend
    Set objClientDocListItem = Application.CALClient.ClientList.Add(objClientNieuwDocument.objId, calAddRetain)
    Set objDocument = objClientDocListItem.Open(calOpenReadWrite)
'   Importeren document
    objDocument.Imports.Add calDocumentImportLast, "Excel Document", "Excel", GetPhysicalFromXml(strExcelDoc)
    SaveNewItem objViewer
    objDocument.Save
'   Verplaatsen naar openstaande folder
    objfolder.Children.Add objDocument.Info.objId, calChildLast
    objfolder.Save
    objDocument.Close (calCloseSaveChanges)
'   Remove document van clientlist
    Application.CALClient.ClientList.Remove objClientDocListItem
    MsgBox "Document is succesvol op geslagen in dossier:  " + ExcelSessie.Dossier, vbOKOnly + vbInformation + vbMsgBoxSetForeground
    ExcelSessie.EXCELRelease
    Excelnaam = ""
    ImpExcelDocInFolder = True
    Exit Function

EH:
    DisplayError "ImpExcelDocInFolder"
    Resume
End Function

Public Function ImpExcelDocInDocument(ByVal objViewer As WFDWorkitem.WorkitemViewer, strExcelDoc As String) As Boolean
Dim objDocument         As CALDocument
Dim objClientNieuwDocument  As CALWorkitemInfo
Dim objClientDocListItem    As CALClientListItem

    ImpExcelDocInDocument = False
    ActivateWorkDesk
    On Error GoTo EH
    Err.Clear
    Set objDocument = objViewer.CALClientListItem.OpenedItem
    objDocument.Imports.Add calDocumentImportLast, "Excel Document", "Excel", strExcelDoc
    SaveNewItem objViewer ' voor het geval het document nieuw is
    objDocument.Save
    MsgBox "Document is succesvol op geslagen in dossier:  " + ExcelSessie.Dossier, vbOKOnly + vbInformation + vbMsgBoxSetForeground
    ImpExcelDocInDocument = True
    Exit Function

EH:
    DisplayError "ImpExcelDocInDocument"
End Function

Public Function GetPhysicalFromXml(ByVal xml As String) As String
    Const CONTENT = "physical"
    GetPhysicalFromXml = GetFromXml(CONTENT, xml)
End Function

Public Function GetWFMFromXml(ByVal xml As String) As String
    Const CONTENT = "wfm"
    GetWFMFromXml = GetFromXml(CONTENT, xml)
End Function

Public Function GetFromXml(ByVal CONTENT As String, ByVal xml As String) As String
Const SLUIT = "/"
Const BEGIN = "<"
Const EIND = ">"
Const FOUT = "[GetFromXml] Er is iets fout gegaan met de XML extractie"

Dim p                   As Long
Dim s                   As String
Dim startP              As Long

    GetFromXml = ""
    s = BEGIN & CONTENT & EIND
    p = InStr(1, xml, s)
    If p = 0 Then
        MsgBox FOUT, vbOKOnly
        Exit Function
    End If
    startP = p + Len(s)
    s = BEGIN & SLUIT & CONTENT & EIND
    p = InStr(startP, xml, s)
    If p = 0 Then
        MsgBox FOUT, vbOKOnly
        Exit Function
    End If
    GetFromXml = Mid(xml, startP, p - startP)
End Function

Sub ActivateWorkDesk()
  On Error GoTo Catch
  
  AppActivate "WorkDesk"
   
  GoTo Finally
Catch:
  ' Activate failed
Finally:
End Sub

Attribute VB_Name = "MSWord405"
Option Explicit

'Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)
'Declare Function SetForegroundWindow Lib "user32" (ByVal Hwnd As Long) As Long
'Declare Function OpenIcon Lib "user32" (ByVal Hwnd As Long) As Long
'Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" (ByVal lpClassAnme As String, ByVal lpWindowName As String) As Long
'Declare Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" (ByVal Hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, ByVal lpParameters As String, ByVal lpDirectory As String, ByVal nShowCmd As Long) As Long

Dim Cn As New Connection
Dim Cmd As New Command
Dim template As String 'Deze var is toegevoegd tbv een missend veld op het COlALG form

Public Function StartWord() As Boolean
Dim sWordPath               As String
Dim x, Handle, lngShell     As Long
Dim i                       As Integer
Dim oFSO                    As New Scripting.FileSystemObject

    On Error Resume Next

    AppActivate "Microsoft Word"
    If Err Then
        On Error GoTo EH
        Err.Clear

        sWordPath = (gcOFFICEROOT & gcPROGDIR2013 & gcWORDPROG)
        If Not oFSO.FileExists(sWordPath) Then
            sWordPath = (gcOFFICEROOT & gcPROGDIR2010 & gcWORDPROG)
        End If

        Call Shell(sWordPath, vbNormalFocus)
    End If

    StartWord = True
    Exit Function

EH:
    DisplayError "StartWord"
    StartWord = False
End Function

Public Function StartTemplate(strTemplate As String) As Boolean
Dim lngShell As Long
Dim fs As New Scripting.FileSystemObject
Dim MyFile As String
Dim strTemplateStart As String
Dim iRetries As Integer
' Word wordt gestart door een template op te starten

On Error GoTo EH

' Eerst checken of de template er is op de WFM-server
' zoniet dan starten we modhus op

    strTemplateStart = dirWordTemplates + strTemplate + ".dot"
    If Not fs.FileExists(strTemplateStart) Then
        SetRegistryKey "eFormity", "SML\Settings", "AutoSML", strTemplate + ".sml"
        strTemplateStart = dirModhus + "Wfmstart.dot"       ' Mabr afhankelijk van omgeving
    End If
    
    ' TD096783 SaBl 20080425
    ' aantal keer retry-n
    iRetries = 1
    Do
        lngShell = ShellExecute(0, "New", strTemplateStart, "", "", 6)
        iRetries = iRetries - 1
    Loop Until iRetries < 0 Or lngShell <> 2
    If lngShell = 2 Then
        Err.Raise 12345, "StartTemplate", "Fout tijdens het opstarten van template " + strTemplate + ". lngShell = " + Str$(lngShell)
    End If
    
    StartTemplate = True

Exit Function

EH:

    DisplayError "StartTemplate"
    StartTemplate = False

End Function
Public Function ImpWordDocInFolder(ByVal objViewer As WFDWorkitem.WorkitemViewer, strWordDoc As String) As Boolean

Dim objClientNieuwDocument As CALWorkitemInfo
Dim objClientDocListItem  As CALClientListItem
Dim strPolisNummer As String 'eerste tien van zaakid; deelnemer nummer
Dim strKenmerk As String ' mid 11,3 van zaakid; zaak kenmerk
Dim strNr As String ' right 1 van zaakid; zaak volgnummer
Dim StrZaakID As String ' zaak indentificatie nummer
Dim strAegonDatum As String
Dim objDocument As CALDocument
Dim objfolder As CALFolder
Dim StrKlantnr As String

    ImpWordDocInFolder = False
    ActivateWorkDesk
    
    On Error GoTo EH
    Err.Clear
    

    ' mabr we kunnen hier komen terwijl het toch een doc is...
    If objViewer.CALClientListItem.Info.Type = calObjTypeDocument Then
        ImpWordDocInFolder = ImpWordDocInDocument(objViewer, strWordDoc)
        Exit Function
    End If
    
    ' lezen van alle te kopieren foldervelden in het nieuwe document
    Set objfolder = objViewer.CALClientListItem.OpenedItem
    StrZaakID = objViewer.Fields.Find("ZAAK_IDENT_NR").CALFormField.Value

    StrKlantnr = objViewer.Fields.Find("NR_KLANT").CALFormField.Value
    
    strAegonDatum = Format(Date, "yyyy-mm-dd")
    
    ' soms is het polisnummer maar zes lang
    If Len(StrZaakID) > 13 Then
        strPolisNummer = Left(StrZaakID, 10)
        strKenmerk = Mid(StrZaakID, 11, 3)
        strNr = Right(StrZaakID, 1)
    Else
        strPolisNummer = Left(StrZaakID, 6)
        strKenmerk = Mid(StrZaakID, 7, 3)
        strNr = Right(StrZaakID, 1)
    End If
    
    ' Nieuwe document maken en formfields velden
    
    strDoctype = WordSessie.template
    If strDoctype = "Word" Then
        strDoctype = ""
    Else
        If Left(objfolder.Class, 4) = "CPPN" Then
            Set objClientNieuwDocument = Application.CALClient.CreateDocument(strDoctype, "PPBRIEF")
        Else
            Set objClientNieuwDocument = Application.CALClient.CreateDocument(strDoctype, "BRIEF")
        End If
    End If
    
    While strDoctype = ""
        frmNaamDocument.strClass = Right(objfolder.Class, 3)
        frmNaamDocument.Show 1
        If strDoctype = "Cancel" Then Exit Function
        Err.Clear
        On Error Resume Next
        
        If strDoctype = "" Then strDoctype = "Word"
        
        If Left(objfolder.Class, 4) = "CPPN" Then
            Set objClientNieuwDocument = Application.CALClient.CreateDocument(strDoctype, "PPBRIEF")
        Else
            Set objClientNieuwDocument = Application.CALClient.CreateDocument(strDoctype, "BRIEF")
        End If
        
        Select Case Err
        
        Case Is = 1000
            If Application.CALMaster.LastError.Code = 79 Then
                MsgBox "U heeft een ongeldige documentnaam opgegeven. Gebruik geen % en *.", vbApplicationModal + vbExclamation + vbOKOnly
                strDoctype = ""
            Else
                GoTo EH
            End If
        Case Is > 0
            GoTo EH
        End Select
        On Error GoTo EH
    Wend
    
    Set objClientDocListItem = Application.CALClient.ClientList.Add(objClientNieuwDocument.objId, calAddRetain)
    Set objDocument = objClientDocListItem.Open(calOpenReadWrite)
    objDocument.FormFields(calFieldsNoViews).Find("ZAAK_IDENT_NR").Value = StrZaakID
    objDocument.FormFields(calFieldsNoViews).Find("IND_TRIGGER").Value = strKenmerk
    objDocument.FormFields(calFieldsNoViews).Find("ZK_VOLGNR").Value = strNr
    If objfolder.Class <> "COLLDEB" Then 'in debiteurenflow bestaan deze velden niet.
        objDocument.FormFields(calFieldsNoViews).Find("NR_POLIS").Value = strPolisNummer
        objDocument.FormFields(calFieldsNoViews).Find("DOCTYPE").Value = Left(WordSessie.template, 34)
        objDocument.FormFields(calFieldsNoViews).Find("DAT_DOC").Value = strAegonDatum
    Else
        objDocument.FormFields(calFieldsNoViews).Find("NR_KLANT").Value = StrKlantnr
    End If
    
    'Importeren document
    objDocument.Imports.Add calDocumentImportLast, "Word Document", "Word95", strWordDoc
    objDocument.Save

    ' verplaatsen naar openstaande folder
    objfolder.Children.Add objDocument.Info.objId, calChildLast
    objfolder.Save
    
    objDocument.Close (calCloseSaveChanges)
    
    ' remove document van clientlist
    Application.CALClient.ClientList.Remove objClientDocListItem
    MsgBox "Document is succesvol op geslagen in dossier:  " + WordSessie.Dossier, vbOKOnly + vbInformation + vbMsgBoxSetForeground
    
    ImpWordDocInFolder = True

Exit Function

EH:

    DisplayError "ImpWordDocInFolder"

End Function
Public Function ImpWordDocInDocument(ByVal objViewer As WFDWorkitem.WorkitemViewer, strWordDoc As String) As Boolean
Dim objDocument As CALDocument

    ImpWordDocInDocument = False
    ActivateWorkDesk
    
    On Error GoTo EH
    Err.Clear
    
    'Importeren document
    Set objDocument = objViewer.CALClientListItem.OpenedItem
    
    If objViewer.Fields.Find("BESTEMMING").CALFormField.Value = "NEW" Then
        objDocument.Imports.Add calDocumentImportLast, "Word Document", "Word95", strWordDoc
    Else
        frmNaamDocument.Show 1
        If strDoctype = "" Then strDoctype = "Word Document"
        objDocument.Imports.Add calDocumentImportLast, strDoctype, "Word95", strWordDoc
        
    End If
    'objDocument.Imports.Add calDocumentImportLast, "Word Document", "Word95", strWordDoc
    SaveNewItem objViewer ' voor het geval het document nieuw is
    objDocument.Save
    
    MsgBox "Document is succesvol op geslagen in dossier:  " + WordSessie.Dossier, vbOKOnly + vbInformation + vbMsgBoxSetForeground
    
    ImpWordDocInDocument = True

Exit Function

EH:

    DisplayError "ImpWordDocInDocument"

End Function
Public Function WaitForWord(ESWMObjID As String) As String
Dim strWordDoc As String
Dim i As Integer

' Wacht tot Word in de registry de naam van het uiteindelijk
' te importeren document heeft geschreven. Op dat moment is Word
' klaar en kan het document worden geimporteerd

On Error GoTo EH
Err.Clear

    strWordDoc = ""
    DoEvents
    
    
NogEenKeer:
    
        ' controleer of intussen de gebruiker de wordsessie
        ' voor deze folder heeft afgebroken.
        If Not WordSessie.objId = ESWMObjID Then
            WaitForWord = ""
            Exit Function
        End If
        
        strWordDoc = GetSetting("ORIGIN", "Word", "Documentnaam", "")
        
    
    For i = 1 To 100 'Allow other processing
        DoEvents
    Next i
    
    If strWordDoc = "" Then GoTo NogEenKeer
    
    WaitForWord = strWordDoc

Exit Function

EH:

    DisplayError "WaitForWord"
    MsgBox "Er is een fout opgetreden na het wachten op het Word-document. De functie wordt afgebroken. Het document zal niet worden ge|fffd|mporteerd.", vbCritical + vbOKOnly + vbMsgBoxSetForeground
    WaitForWord = ""

End Function

Public Sub StartBrief(ByVal objWorkitemViewer As WFDWorkitem.WorkitemViewer, strTemplate As String, Optional Programma As String)
Dim strWordDoc As String 'het te importeren word document
Dim oke As Boolean

On Error GoTo EH
Err.Clear
    
    template = strTemplate
    
    If WordSessie.WRDActive(objWorkitemViewer.id) Then
        Exit Sub
    End If
    
    WordSessie.WRDSet objWorkitemViewer, strTemplate
        
    If (Programma = prgWaardeRekenProg) Or _
       (Programma = gsWaardeRekenProg2) Then            '[PAC] - TD170048
            
        oke = ExportFields(objWorkitemViewer)
        If oke Then
            oke = StartReken(objWorkitemViewer, Programma)
        End If
    
    Else
        Select Case strTemplate
        Case Is = "Word"
            oke = StartWord
        Case Else 'template
            oke = ExportFields(objWorkitemViewer)
            If oke Then
                oke = StartTemplate(strTemplate)
            End If
        End Select
    End If
    
    If oke Then
        strWordDoc = WaitForWord(objWorkitemViewer.id)
        If strWordDoc <> "" Then
                If Not objWorkitemViewer.Fields.Find("BESTEMMING") Is Nothing Then
                    If objWorkitemViewer.Fields.Find("BESTEMMING").CALFormField.Value = "NEW" Then
                        ' dan moet het word-document in het document worden toegevoegd.
                        oke = ImpWordDocInDocument(objWorkitemViewer, strWordDoc)
                    
                    Else
                        oke = ImpWordDocInFolder(objWorkitemViewer, strWordDoc)
                        
                        If ((Programma = prgWaardeRekenProg) Or _
                            (Programma = gsWaardeRekenProg2)) And _
                            oke Then                    '[PAC] - TD170048
                            Call InvoerRekPrg(objWorkitemViewer)
                        End If
                    End If
                Else
                    oke = ImpWordDocInFolder(objWorkitemViewer, strWordDoc)
                    
                    If ((Programma = prgWaardeRekenProg) Or _
                        (Programma = gsWaardeRekenProg2)) And _
                        oke Then                        '[PAC] - TD170048
                        Call InvoerRekPrg(objWorkitemViewer)
                    End If
                End If
            End If
        End If

    
    Call WordSessie.WRDRelease

Exit Sub

EH:

    DisplayError "Startbrief"
    On Error Resume Next
    Call WordSessie.WRDRelease

End Sub
Public Function ExportFields(ByVal objWorkitemViewer As WFDWorkitem.WorkitemViewer) As Boolean
Dim ExportField As Field
Dim strAppName As String, strSection As String
Dim AegarNr As String
Dim KlantAegarNr As String
Dim myfield As CALFormField
Dim udlname As String
Dim rsAegar As Recordset
Dim rsKlant As Recordset
Dim blnAegarRecordGevonden As Boolean
Dim blnKlantRecordGevonden As Boolean
Dim strDateFormat As String

    On Error GoTo EH
    strAppName = "ORIGIN"
    strSection = "Template Fields"
    On Error Resume Next
    DeleteSetting strAppName, strSection
    On Error GoTo EH
    For Each ExportField In objWorkitemViewer.Fields
        If ExportField.name = "SVB" Then

        End If
        strDateFormat = "ddmmyyyy"
        If ExportField.name = "MUT_DATUM" Then
'            SaveSetting strAppName, strSection, ExportField.name, Format(ExportField.CALFormField.Value, "yyyy-mm-dd")
            SaveSetting strAppName, strSection, ExportField.name, Format(ExportField.CALFormField.Value, strDateFormat)
        Else
            If ExportField.CALFormField.Info.Type = calFieldTypeDate Or _
                ExportField.name = "DAT_OPN_REG" Or _
                ExportField.name = "GEB_DEELN" Or _
                ExportField.name = "DAT_DOC" Or _
                ExportField.name = "DAT_ONTV" Or _
                ExportField.name = "INGANG_SVB" Or _
                ExportField.name = "EINDE_SVB" Or _
                ExportField.name = "DATUM_OVERDR" Then
                On Error Resume Next
                DateStrCheck ExportField.CALFormField.Value
                If Err Then
                    Err.Clear
                End If
                On Error GoTo EH
'                SaveSetting strAppName, strSection, ExportField.name, Format(ExportField.CALFormField.Value, "d mmmm yyyy")
                SaveSetting strAppName, strSection, ExportField.name, Format(ExportField.CALFormField.Value, strDateFormat)
            Else
              
                If ExportField.name = "NR_AEGAR" Then
                    AegarNr = ExportField.CALFormField.Value
                End If
                If ExportField.name = "NR_AEGAR_KLANT" Then
                    KlantAegarNr = ExportField.CALFormField.Value
                End If
                SaveSetting strAppName, strSection, ExportField.name, ExportField.CALFormField.Value
            End If
        End If
    Next
    
    If (template = "POST Ontvangstbevestiging") Then
            SaveSetting strAppName, strSection, "AantalWkn", "2"
    End If
    
    SaveSetting strAppName, strSection, "DOCTYPE", WordSessie.template
    SaveSetting strAppName, strSection, "DOMAIN", UCase(Application.SessionInfo.Domain)
    SaveSetting strAppName, strSection, "MYHUPO1", CALGetUserVar("MyHupo1", CALClient.username)
    
    'Now see if there are records in the AEGAR-database
    'Some users have only JET 3.51, some have JET 4.0, some have both
    blnAegarRecordGevonden = True
On Error Resume Next
    udlname = dirHelpFileSrc & "Aegar351.udl"
    If Not ConnDb(udlname) Then
        udlname = dirHelpFileSrc & "Aegar400.udl"
        If Not ConnDb(udlname) Then
            MsgBox udlname & " niet gevonden.", vbCritical + vbOKOnly
            blnAegarRecordGevonden = False
        End If
    End If
On Error GoTo EH
    Cmd.CommandText = "Select * from AegarCorrespondentie where Aegarnr = '" & AegarNr & "'"
    Set rsAegar = New Recordset
    rsAegar.Open Cmd, , adOpenDynamic, adLockReadOnly
    If rsAegar.BOF Then
        ' mabr meldingen overbodig
        'MsgBox "Deelnemer niet gevonden in Aegar, brief wordt gemaakt met WFM data.", vbCritical + vbOKOnly
        blnAegarRecordGevonden = False
    End If
    
'Vind het klantrecord
    blnKlantRecordGevonden = True
    If Cn.State = 0 Then 'Als de database nog niet geopend is. Dit kan als er geen aegarnummer was meegekomen
 On Error Resume Next
       udlname = dirHelpFileSrc & "Aegar351.udl"
        If Not ConnDb(udlname) Then
            udlname = dirHelpFileSrc & "Aegar400.udl"
            If Not ConnDb(udlname) Then
    
                MsgBox udlname & " niet gevonden.", vbCritical + vbOKOnly
                blnAegarRecordGevonden = False
            End If
        End If
    End If
On Error GoTo EH
    Cmd.CommandText = "Select * from AegarCorrespondentie where Aegarnr = '" & KlantAegarNr & "'"

    Set rsKlant = New Recordset
    rsKlant.Open Cmd, , adOpenDynamic, adLockReadOnly
    If rsKlant.BOF Then
            ' mabr meldingen overbodig
        'MsgBox "Klant niet gevonden in Aegar, brief wordt gemaakt met WFM data.", vbCritical + vbOKOnly
        blnKlantRecordGevonden = False
    End If
    
    On Error Resume Next 'als bladwijzer niet bestaat voor een formfield treedt een fout op
  'We brengen eerst alle data uit de records in het dokument
  If blnAegarRecordGevonden Then
       SaveSetting strAppName, strSection, "NAAM_DLNMR", rsAegar.Fields("Naam")
       SaveSetting strAppName, strSection, "ADRES_DLNMR", rsAegar.Fields("Straat") + " " + rsAegar.Fields("Huisnummer")
      If Not IsNull(rsAegar.Fields("Land")) Then 'Voor adressen in nederland is het landveld Null
          SaveSetting strAppName, strSection, "PO_WOON_DLNMR", rsAegar.Fields("Woonplaats") + " " + rsAegar.Fields("Land")
      Else
          SaveSetting strAppName, strSection, "PO_WOON_DLNMR", rsAegar.Fields("Woonplaats")
      End If
      If rsAegar.Fields("Geslacht") = "M" Or rsAegar.Fields("Geslacht") = "V" Then
          SaveSetting strAppName, strSection, "SEXE_DLNMR", rsAegar.Fields("Geslacht")
      End If
  End If
  If blnKlantRecordGevonden Then
      SaveSetting strAppName, strSection, "NAAM_KLANT", rsKlant.Fields("Naam")
      SaveSetting strAppName, strSection, "ADRES_KLANT", rsAegar.Fields("Straat") + " " + rsAegar.Fields("Huisnummer")
      If IsNull(rsKlant.Fields("Land")) Then
          SaveSetting strAppName, strSection, "PO_WOON_KLANT", rsKlant.Fields("Woonplaats")
      Else
          SaveSetting strAppName, strSection, "PO_WOON_KLANT", rsKlant.Fields("Woonplaats") + " " + rsKlant.Fields("Land")
      End If
  End If
    
  ExportFields = True

Exit Function

EH:

    If Err.Number = 5 Then 'registry setting wordt verwijderd terwijl het niet bestaat.
        Err.Clear
        Resume Next
    End If
    
    DisplayError "ExportFields"
    ExportFields = False

End Function

Public Function ConnDb(udlname As String) As Boolean
    Dim mijnpad As String
    On Error GoTo ConnDB_Error
    
    Set Cn = New adodb.Connection
    
    Cn.connectionstring = "File Name=" & udlname
    Cn.Open
    Cmd.ActiveConnection = Cn
    
    If Cn.State = adStateOpen Then
        Dim DataSource As String
        DataSource = Cn.Properties.item("Data Source")
        ConnDb = True
    End If
    Exit Function
    
ConnDB_Error:
    Dim ErrDescription As String
    Dim ErrString As String
    Dim ErrSolution As String
    'Eerste poging met MS Jet 3.51, tweede met Jet 4.0. Pas als die ook fout gaat melding
    If Right(udlname, 3) = "400" Then
        ErrDescription = "Tijdens het maken van verbinding met " & udlname & " is een fout opgetreden."
        ErrSolution = "Controleer het UDL bestand " & udlname & " via de properties."
        ErrString = ErrDescription & vbCrLf & vbCrLf & "Foutnummer " & Str(Err.Number) & vbCrLf & _
                    "Bron : " & Err.Source & vbCrLf & "Beschrijving : " & ErrDescription & _
                    vbCrLf & vbCrLf & ErrSolution
        MsgBox ErrString, vbCritical + vbOKOnly
    End If
    ConnDb = False
    
End Function

Sub ActivateWorkDesk()
  On Error GoTo Catch
  
  AppActivate "WorkDesk"
   
  GoTo Finally
Catch:
  ' Activate failed
Finally:
End Sub

Attribute VB_Name = "MailCheck"
Global lastTimeChecked  As Date
Global previousTimeChecked As Date
Private Declare Function SetTimer Lib "user32" (ByVal hWnd As Long, ByVal nIDEvent As Long, _
                                                ByVal uElapse As Long, ByVal lpTimerFunc As Long) As Long
Private Declare Function KillTimer Lib "user32" (ByVal hWnd As Long, ByVal nIDEvent As Long) As Long
Private Declare Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
Private Declare Function GetActiveWindow Lib "user32" () As Long

Dim mlngID_RefreshTimer As Long

Public Sub CheckMailBox()
Dim myQueue             As New CALQueue
Dim objContents         As CALQueueContents

    myQueue.Client = Application.CALClient
    myQueue.name = Application.SessionInfo.username
    myQueue.Type = calQueueTypeMailbox
    i = 3
    Set objContents = myQueue.GetContents(300, calContentsCheckAccess)
    If objContents.AllItems.Count > 0 Then
        If lastTimeChecked = 0 Then
            frmMailMelding.lblRegel.Caption = "U heeft " + Str(objContents.AllItems.Count) + " item"
            If objContents.AllItems.Count > 1 Then
                frmMailMelding.lblRegel.Caption = frmMailMelding.lblRegel.Caption + "s "
            Else
                frmMailMelding.lblRegel.Caption = frmMailMelding.lblRegel.Caption + " "
            End If
        Else
            If Now < DateAdd("s", 120, lastTimeChecked) Then Exit Sub
'           Tel alleen de items van na lasttimechecked
            frmMailMelding.lblRegel.Caption = ""
            Teller = 0
            For i = 1 To objContents.AllItems.Count
                If objContents.AllItems.item(i).Info.TimeStamp > Format(lastTimeChecked, "yyyy-mm-dd-hh.nn.ss") + ".00" Then
                    Teller = Teller + 1
                End If
            Next i
            If Teller > 0 Then
                frmMailMelding.lblRegel.Caption = "U heeft "
                If Teller > 1 Then
                    frmMailMelding.lblRegel.Caption = frmMailMelding.lblRegel.Caption + " " + Str(objContents.AllItems.Count) + " nieuwe items "
                Else
                    frmMailMelding.lblRegel.Caption = frmMailMelding.lblRegel.Caption + "een nieuw item "
                End If
            Else
                Exit Sub
            End If
        End If
        previousTimeChecked = lastTimeChecked
        lastTimeChecked = Now
        frmMailMelding.lblRegel.Caption = frmMailMelding.lblRegel.Caption + "in uw postbus."
        frmMailMelding.Show 1
    End If
End Sub

Public Sub StartRefreshTimer()
'   Set the timer to 30 seconds
    mlngID_RefreshTimer = SetTimer(0, 0, 30000, AddressOf RefreshTimerProc)
End Sub

Public Sub StopRefreshTimer()
'   Kill the timer
    On Error Resume Next
    Call KillTimer(0, mlngID_RefreshTimer)
End Sub

Private Sub RefreshTimerProc( _
    ByVal hWnd As Long, _
    ByVal lngMsg As Long, _
    ByVal lngID As Long, _
    ByVal lngTime As Long)
'   Refresh the selected workset if WorkDesk is the active window
    If GetActiveWindow = FindWindow("ThunderRT6FormDC", "WorkDesk") Then AutoRefresh
End Sub

Public Sub AutoRefresh()
'   Stop the refresh timer
    StopRefreshTimer
    CheckMailBox
'   Restart the refresh timer
    StartRefreshTimer
End Sub
Attribute VB_Name = "Menus"
Public Sub InitDesktopMenu()
Dim Menu                As Variant
Dim strMyHupo1          As String
Dim strMyHupo2          As String
Dim AFDELING            As String

    On Error Resume Next
    Call InitFuncSec
    ResetCmdBars Application.Desktop
    newCmnd "Install WDBridge", "Tools", Application.Desktop.Commandbars, True
    newCmnd mnuWijzigenItems, "Tools", Application.Desktop.Commandbars, True
    newCmnd mnuMUTQuery, "Tools", Application.Desktop.Commandbars, True
    newCmnd mnuPOSTQuery, "Tools", Application.Desktop.Commandbars, False        '[PAC] 25SEP09
    newCmnd mnuDefaultColumns, "View", Application.Desktop.Commandbars, True
    newCmnd mnuAllColumns, "View", Application.Desktop.Commandbars
    newCmnd mnuHelp, "Help", Application.Desktop.Commandbars, True
    newCmnd mnuSaveEmail, "File", Application.Desktop.Commandbars, False, 6
'   ivm Email import, april 2006 release
    newCmnd "Test Email Open", "Tools", Application.Desktop.Commandbars, True
    newCmnd "Test Email Sent", "Tools", Application.Desktop.Commandbars, True
    newCmnd "Test WDBridge", "Tools", Application.Desktop.Commandbars, True
    newCmnd mnuSaveTelefon, "File", Application.Desktop.Commandbars, False, 7
    If Left(UCase(Application.CALClient.username), 6) = "SYSADM" Then
        newCmnd mnuSysdelete, "Tools", Application.Desktop.Commandbars, True
    End If
'   AEGON Opties
    newCmnd "Aegon Opties", "StandardToolbar", Application.Desktop.Commandbars, True
'   WFM Tabellen
    If WriteAcces("WFMData") Then
        newCmnd mnuWFVarView, "Tools", Application.Desktop.Commandbars, False
        If Left(UCase(Application.CALClient.username), 6) = "SYSADM" Then
            newCmnd mnuWFVarView, "StandardToolbar", Application.Desktop.Commandbars, True
        End If
    End If
    If CALGetUserVar("Afdeling", Application.CALClient.username) = "CCC" Or _
       CALGetUserVar("Afdeling", Application.CALClient.username) = "PAC" Then
        newCmnd "PAC Info", "StandardToolbar", Application.Desktop.Commandbars, True
    End If
'   AEGON Intranet
    newCmnd "I-WFM", "StandardToolbar", Application.Desktop.Commandbars, True
'   Apply the functional security for the desktop
    For Each Menu In DesktopSecList
        HideCommand Application.Desktop.Commandbars, Menu
    Next
    Application.Desktop.Commandbars("File").Controls.item("InsertFromFile").Visible = False
    Application.Desktop.Commandbars.Refresh
End Sub

Public Sub InitPageMenu(ByVal Page As WFDWorkitem.PageViewer)
Dim Menu                As Variant

    On Error Resume Next
    Call InitFuncSec
    ResetCmdBars Page
'   Apply the functional security for the desktop
    For Each Menu In PageSecList
        HideCommand Page.Commandbars, Menu
    Next
'   Default to scale to gray onn
    If Not InitScale2Gray Then
        Page.Commandbars.Controls("ScaleToGray").Checked = True
        InitScale2Gray = True
    End If
    Page.Commandbars.Refresh
End Sub

Public Sub InitViewerMenu(ByVal Viewer As WFDWorkitem.WorkitemViewer)
Dim Menu                As Variant
Dim WiClass             As String
Dim i                   As Integer
Dim bNieuw              As Boolean
Dim bWeerBehandelen     As Boolean
Dim objWorkstepList     As CALWorkitemWorkstepList

    On Error Resume Next
    If Not Viewer.Fields.Find("BESTEMMING") Is Nothing Then
        If Viewer.Fields.Find("BESTEMMING").CALFormField.Value = "NEW" Then
            bNieuw = True
        End If
    End If
'   Is zaak niet WIP en helemaal uit workflow??
    If Viewer.CALClientListItem.Info.Status <> 19 Then
        Set objWorkstepList = CALClient.FindInWorkflow(Viewer.CALClientListItem.Info.objId)
        If objWorkstepList.Count = 0 Then
            If Not Viewer.CALClientListItem.OpenedItem.Class = "IMPORT" Then bWeerBehandelen = True
        End If
    End If
'   Stap 1 : init de lijst met menuopties die gebruiker NIET mag kiezen
'   Stap 2 : Reset de menubar en toolbar zodat alleen de builtin opties
'            nog aanwezig zijn
'   Stap 3:  Voeg custom menuopties, toolbar buttons toe, mede afhankdelijk van dossier
'   Stap 4:  Hide alle menuopties die gebruiker niet mag kiezen op basis van
'            zijn autorisatie
'   Stap 5:  Hide alle menuopties die gebruiker in dit dossier
'            niet mag kiezen.
'   STAP 1
    Call InitFuncSec
'   STAP 2
    ResetCmdBars Viewer
'   STAP 3
    newCmnd mnuExportDoc, "File", Viewer.Commandbars, True, 3       '[PAC] 15DEC09
    newCmnd mnuPrint, "File", Viewer.Commandbars, True
    newCmnd mnuPrintSetup, "File", Viewer.Commandbars
    newCmnd mnuHelp, "Help", Viewer.Commandbars, True
    newCmnd mnuDeelnKLant, "Tools", Viewer.Commandbars, True
    SetMenuCmndCaption Viewer.Commandbars, "NewImport", "Echtscheiding"
    SetMenuCmndCaption Viewer.Commandbars, "NewDocument", "Import document"
'   email menu opties
    If Viewer.ObjType = calObjTypeFolder Then
        newCmnd mnuCreateEmail, "New", Viewer.Commandbars, True
        Viewer.Commandbars.Controls(mnuCreateEmail).ToolTipText = "Maak een nieuwe email. Vul de email handmatig aan en kies vervolgens de menuoptie 'stuur en opslaan Email'."
        newCmnd mnuSaveEmail, "File", Viewer.Commandbars, False, 3
        Viewer.Commandbars.Controls(mnuSendSaveEmail).ToolTipText = "Send email en sla email op in dossier"
        newCmnd mnuAttachDocument, "Contents", Viewer.Commandbars, True
        Viewer.Commandbars.Controls(mnuAttachAll).ToolTipText = "Voeg alle documenten van dossier als bijlage aan email toe."
        newCmnd mnuAttachAll, "Contents", Viewer.Commandbars, False
        Viewer.Commandbars.Controls(mnuAttachAll).ToolTipText = "Voeg alle documenten van dossier als bijlage aan email toe."
    End If
'   Word alleen als in workflow is
    If Viewer.CALClientListItem.Info.SourceWorkstep <> "" Then
        newCmnd mnuNotities, "Contents", Viewer.Commandbars, True
        Viewer.Commandbars.Controls(mnuNotities).ToolTipText = "Bekijk en voeg notities toe."
        Viewer.Commandbars.Controls(mnuNotities).Style = wdoCommandBarControlStyleIconText
        If Viewer.ObjType = calObjTypeFolder Then
            Viewer.Commandbars.Controls(mnuNotities).Picture(wdoCommandBarControlIconStyleNormal) = AEAbout.imlAEGON16x16.ListImages("noteonfolder").ExtractIcon
        Else
            Viewer.Commandbars.Controls(mnuNotities).Picture(wdoCommandBarControlIconStyleNormal) = AEAbout.imlAEGON16x16.ListImages("noteondoc").ExtractIcon
        End If
    End If
'   OK. Nu alleen het icoontje op de knoppenbalk tonen wanneer er een notitie aanwezig is.
Dim FldChildItems       As CALFolderChildrenItems
Dim FldChild            As CALFolderChild
Dim DocImports          As CALDocumentImports
Dim DocImport           As CALDocumentImport

    If Viewer.CALClientListItem.OpenedItem.Info.Type = calObjTypeFolder Then
        Set FldChildItems = Viewer.CALClientListItem.OpenedItem.Children.ImportItems
        If FldChildItems.Count = 0 Then GoTo gaverder
        For Each FldChild In FldChildItems
            If FldChild.Class = "XMLDATA" Then
                newCmnd mnuNotities, "StandardToolbar", Viewer.Commandbars, True
                Viewer.Commandbars("StandardToolbar").Controls(mnuNotities).Style = wdoCommandBarControlStyleIcon
                Viewer.Commandbars("StandardToolbar").Controls(mnuNotities).ToolTipText = "Bekijk en voeg notities toe."
                Viewer.Commandbars("StandardToolbar").Controls(mnuNotities).Picture(wdoCommandBarControlIconStyleNormal) = AEAbout.imlAEGON16x16.ListImages("noteonfolder").ExtractIcon
                Exit For
            End If
        Next
    Else
        Set DocImports = Viewer.CALClientListItem.OpenedItem.Imports
        If DocImports.Count = 0 Then GoTo gaverder
            
        For Each DocImport In DocImports 'imports found -> search for xml data
            If DocImport.Class = "XMLDATA" Then
                newCmnd mnuNotities, "StandardToolbar", Viewer.Commandbars, True
                Viewer.Commandbars("StandardToolbar").Controls(mnuNotities).Style = wdoCommandBarControlStyleIcon
                Viewer.Commandbars("StandardToolbar").Controls(mnuNotities).ToolTipText = "Bekijk en voeg notities toe."
                Viewer.Commandbars("StandardToolbar").Controls(mnuNotities).Picture(wdoCommandBarControlIconStyleNormal) = AEAbout.imlAEGON16x16.ListImages("noteondoc").ExtractIcon
                Exit For
            End If
        Next
    End If

gaverder:
'   Email alleen als in workflow en folder OF indien het een nieuw document betreft.
    If (Viewer.CALClientListItem.Info.SourceWorkstep <> "" And Viewer.ObjType = calObjTypeFolder) Then
'       In verband met de ruimte tonen we alleen een icoon op de standaard toolbar
        newCmnd mnuEmail, "StandardToolbar", Viewer.Commandbars, True
        Viewer.Commandbars("StandardToolbar").Controls(mnuEmail).Style = wdoCommandBarControlStyleIcon
        Viewer.Commandbars("StandardToolbar").Controls(mnuEmail).ToolTipText = "Start een Emailbericht. Outlook zal worden gestart of geactiveerd."
        Viewer.Commandbars("StandardToolbar").Controls(mnuEmail).Picture(wdoCommandBarControlIconStyleNormal) = AEAbout.imlAEGON16x16.ListImages("NewEmail").ExtractIcon
        newCmnd mnuAdd2Email, "StandardToolbar", Viewer.Commandbars, True
        Viewer.Commandbars("StandardToolbar").Controls(mnuAdd2Email).Style = wdoCommandBarControlStyleIcon
        Viewer.Commandbars("StandardToolbar").Controls(mnuAdd2Email).ToolTipText = "Voeg zaakkenmerken toe aan onderwerp en body van Emailbericht."
        Viewer.Commandbars("StandardToolbar").Controls(mnuAdd2Email).Picture(wdoCommandBarControlIconStyleNormal) = AEAbout.imlCopyZKM.ListImages("antwoord").ExtractIcon
    End If
'   Word alleen als in workflow en folder OF indien het een nieuw document betreft.
    If (Viewer.CALClientListItem.Info.SourceWorkstep <> "" And Viewer.ObjType = calObjTypeFolder) Or bNieuw Then
        newCmnd mnuWord, "New", Viewer.Commandbars, False
        Viewer.Commandbars.Controls(mnuWord).ToolTipText = "Start een Wordsessie. Word zal worden gestart of geactiveerd."
'       In verband met de ruimte tonen we alleen een icoon op de standaard toolbar
        newCmnd mnuWord, "StandardToolbar", Viewer.Commandbars, True
        Viewer.Commandbars("StandardToolbar").Controls(mnuWord).Style = wdoCommandBarControlStyleIcon
        Viewer.Commandbars("StandardToolbar").Controls(mnuWord).ToolTipText = "Start een Wordsessie. Word zal worden gestart of geactiveerd."
        Viewer.Commandbars("StandardToolbar").Controls(mnuWord).Picture(wdoCommandBarControlIconStyleNormal) = AEAbout.imlAEGON16x16.ListImages("word").ExtractIcon
    End If
'   Excel alleen als in workflow en folder OF indien het een nieuw document betreft.
    If (Viewer.CALClientListItem.Info.SourceWorkstep <> "" And Viewer.ObjType = calObjTypeFolder) Or bNieuw Then
        newCmnd mnuExcel, "New", Viewer.Commandbars, False
        Viewer.Commandbars.Controls(mnuExcel).ToolTipText = "Start een Excelsessie. Excel zal worden gestart of geactiveerd."
'       In verband met de ruimte tonen we alleen een icoon op de standaard toolbar
        newCmnd mnuExcel, "StandardToolbar", Viewer.Commandbars, False
        Viewer.Commandbars("StandardToolbar").Controls(mnuExcel).Style = wdoCommandBarControlStyleIcon
        Viewer.Commandbars("StandardToolbar").Controls(mnuExcel).ToolTipText = "Start een Excelsessie. Excel zal worden gestart of geactiveerd."
        Viewer.Commandbars("StandardToolbar").Controls(mnuExcel).Picture(wdoCommandBarControlIconStyleNormal) = AEAbout.imlAEGON16x16.ListImages("excel").ExtractIcon
    End If
    If Viewer.CALClientListItem.Info.SourceWorkstep <> "" Or bNieuw Then
'       Als er met bestemming = new naar archief gegaan zijn staan alle opties aan
        If Not bWeerBehandelen Then
            newCmnd mnuBehandelen, "StandardToolbar", Viewer.Commandbars, True
            Viewer.Commandbars.Controls(mnuBehandelen).ToolTipText = "Indexformulier"
            Viewer.Commandbars.Controls(mnuBehandelen).Picture(wdoCommandBarControlIconStyleNormal) = AEAbout.imlAEGON16x16.ListImages("indexform").ExtractIcon
            Viewer.Commandbars.Controls(mnuBehandelen).Style = wdoCommandBarControlStyleIcon
            newCmnd mnuBehandelen, "Tools", Viewer.Commandbars, True
'           Infoverzoek enkel als het een map is
            If (Viewer.ObjType = calObjTypeFolder) = True Then
                newCmnd mnuInfo, "StandardToolbar", Viewer.Commandbars, True
                Viewer.Commandbars.Controls(mnuInfo).ToolTipText = "Verstuur Informatieverzoek"
                Viewer.Commandbars.Controls(mnuInfo).Picture(wdoCommandBarControlIconStyleNormal) = AEAbout.imlAEGON16x16.ListImages("info").ExtractIcon
                Viewer.Commandbars.Controls(mnuInfo).Style = wdoCommandBarControlStyleIcon
                newCmnd mnuBehandelen, "Tools", Viewer.Commandbars, True
            End If
            newCmnd mnuBijzonderheden, "Tools", Viewer.Commandbars, False
            Viewer.Commandbars.Controls(mnuBijzonderheden).ToolTipText = "Check of er bijzonderheden zijn"
'           Als COLLUWO en COLLBWO dan escalatie
            WiClass = Viewer.CALClientListItem.OpenedItem.Class
            If WiClass <> "COLLALG" And WiClass <> "COLL" Then  '[PAC] - 15AUG14  And Left(WiClass, 4) <> "CPPN" Then
                newCmnd mnuEscaleren, "Tools", Viewer.Commandbars, False
                Viewer.Commandbars.Controls(mnuEscaleren).ToolTipText = "Doorzenden naar de escalatie werkbak, notitie verplicht"
            End If
            newCmnd mnuVerplaatsen, "Tools", Viewer.Commandbars, False
            Viewer.Commandbars.Controls(mnuVerplaatsen).ToolTipText = "Verplaatsen naar een andere werkstap"
            newCmnd mnuHernoem, "Contents", Viewer.Commandbars, True
            Viewer.Commandbars.Controls(mnuHernoem).ToolTipText = "Bied de mogelijkheid om het geselecteerde document een andere naam te geven."
            newCmnd mnuFoutVerzonden, "Contents", Viewer.Commandbars
            Viewer.Commandbars.Controls(mnuFoutVerzonden).ToolTipText = "Plaatst achter de naam van de geselecteerde Word brief de tekst:" + FoutWelVerzonden
            newCmnd mnuFoutNietVerzonden, "Contents", Viewer.Commandbars
            Viewer.Commandbars.Controls(mnuFoutNietVerzonden).ToolTipText = "Plaatst achter de naam van de geselecteerde Word brief de tekst:" + FoutNietVerzonden
'           JAG 20071009 Voor Debiteurenflow moet mnuDoorzenden niet worden getoond.
'           WO 20081030 VOR19 Niet iedereen mag doorzenden en verplaatsen
            If WiClass <> "COLLDEB" And (WiClass <> "COLLVORD" Or _
               InStr("FEP;VOR", CALGetUserVar("Afdeling", CALClient.username)) > 0) Then
                newCmnd mnuDoorzenden, "Tools", Viewer.Commandbars, True
            End If
        Else
            If Not bNieuw Then
                newCmnd mnuWeerBehandelen, "Tools", Viewer.Commandbars, True
            Else
                If WiClass <> "COLLDEB" Then  'JAG 20071009 Voor Debiteurenflow moet mnuDoorzenden niet worden getoond.
                    newCmnd mnuDoorzenden, "Tools", Viewer.Commandbars, True
                End If
            End If
        End If
    Else
        If bShowmnuVerplaatsen Then
            newCmnd mnuVerplaatsen, "Tools", Viewer.Commandbars, False
            Viewer.Commandbars.Controls(mnuVerplaatsen).ToolTipText = "Verplaatsen naar een andere werkstap"
            bShowmnuVerplaatsen = False
        End If
'       Zaken die niet meer in Workflow zijn weer in behandeling nemen
        If bWeerBehandelen Then newCmnd mnuWeerBehandelen, "Tools", Viewer.Commandbars, True
    End If
    If Viewer.CALClientListItem.Info.SourceWorkstep = "" And Not bNieuw Then
'       werkstapnaam via zoeken en bepalen rv
        If findItemInRV(Viewer) Then
'           Toevoegen
            newCmnd mnuEscalerenRV, "Tools", Viewer.Commandbars, False
        End If
    End If
'   Apply the functional security for the desktop
'   Hide de commando's waarvoor niet geautoriseerd.
'   STAP 4
    For Each Menu In ViewerSecList
        HideCommand Viewer.Commandbars, Menu
    Next
'   STAP 5
'   nu de builtin menuopties verwijderen afhankelijk van folder/document
    Viewer.Commandbars("Contents").Controls.item("ContentsNew").Visible = False
    Viewer.Commandbars("Contents").Controls.item("Insert").Visible = False
    If Viewer.ObjType = calObjTypeFolder Then
        HideCommand Viewer.Commandbars, "InsertFromFile"
    Else
        Viewer.Commandbars("File").Controls.item("Insert").Visible = True
    End If
    Viewer.Commandbars.Refresh
End Sub

'Restore all menu, popup and toolbars to original state
Private Sub ResetCmdBars(myObject As Object)
Dim combar              As WFDCommon.WDOCommandBar
Dim combars             As WFDCommon.WDOCommandBars     'WDOCommandBarsControlsex
Dim i

    Set combars = myObject.Commandbars
    For i = 1 To combars.Controls.Count
        resetCmndBar combars, combars.item(i).name
    Next i
    combars.Refresh
End Sub

'Restore all original commands.
Private Sub resetCmndBar(Commandbars As WDOCommandBars, MenuBarName)
Dim i
Dim myMenuBar           As WDOCommandBar

    On Error Resume Next
    Set myMenuBar = Commandbars(MenuBarName)    'Find the MenuBar
    If Err <> 0 Then Err.Clear: Exit Sub
    For i = myMenuBar.Controls.Count To 1 Step -1
        If myMenuBar.Controls.item(i).BuiltIn = True Then
            myMenuBar.Controls.item(i).Enabled = True
            myMenuBar.Controls.item(i).Visible = True
        Else
            myMenuBar.Controls.Remove i
        End If
    Next i
End Sub

Private Sub newCmnd(CmndName, MenuBarName, Commandbars As WDOCommandBars, Optional BeginGroup As Boolean, Optional intPosition As Integer = -1)
'   To add a menu you should:
'   - add a menu control
'   - add this control to a menubar
'   After a control is created you can modify the properties like 'BeginGroup'
    addCmndCtrl CmndName, Commandbars
    Commandbars.Controls(CmndName).BeginGroup = BeginGroup
    addCmnd2Bar CmndName, Commandbars, MenuBarName, intPosition
End Sub

Private Sub addCmndCtrl(cmdName, Commandbars As WDOCommandBars)
' To add a menu item on either the mainmenu or a menutoolbar you must
' first add a CommandControl at the highest level i.e. Desktop.CommandBars or Vieuwer.CommandBars
Dim i
Dim myCmndCtrl          As WDOCommandBarControl

    On Error Resume Next
'   Check if CommandBarControl already exist before adding it
    For i = 1 To Commandbars.Controls.Count   'unfortunatly we can not do a 'For Each'
        If Commandbars.Controls.item(i).Caption = cmdName Then

Dim myMenuBar           As WDOCommandBar
            Set myMenuBar = Commandbars("MainMenu")
            Set Commandbars.Controls.item(i).CommandBar = myMenuBar
           Exit Sub
        End If
    Next i
    Set myCmndCtrl = Commandbars.Controls.Add(cmdName)      'Add Control
    If Err.Number <> 0 Then Exit Sub
    myCmndCtrl.Caption = cmdName 'Default to Command Name
    myCmndCtrl.Style = wdoCommandBarControlStyleText    ' Default to text
'   Picture kan helaas niet. De bmp moet dan op iedere pc staan of ergens centraal.
End Sub

Private Sub addCmnd2Bar(cmdName, Commandbars As WDOCommandBars, MenuBarName, Optional intPosition As Integer = -1)
'A MenuBar can be a normal menu or a menutoolbar it is defined by its name
Dim i
Dim myMenuBar           As WDOCommandBar

    Set myMenuBar = Commandbars(MenuBarName)    'Find the MenuBar
'   Check if CommandBarControl already exist before adding it
    For i = 1 To myMenuBar.Controls.Count
        If myMenuBar.Controls.item(i).name = cmdName Then
           myMenuBar.Controls.item(i).Enabled = True
           myMenuBar.Controls.item(i).Visible = True
           Exit Sub
        End If
    Next i
    myMenuBar.Controls.Insert cmdName, intPosition
End Sub

Private Sub HideCommand(CommBars As WDOCommandBars, mndBarCntrlName)
    CommBars.Controls(mndBarCntrlName).Visible = False
    CommBars.Controls(mndBarCntrlName).Enabled = False
End Sub

Private Sub SetMenuCmndCaption(CommBars As WDOCommandBars, mndBarCntrlName, strNewCaption)
Dim myControl           As WDOCommandBarControl

    Set myControl = CommBars.Controls(mndBarCntrlName)
    If myControl Is Nothing Then Exit Sub
    CommBars.Controls(mndBarCntrlName).Caption = strNewCaption
    Set myControl = Nothing
End Sub

Public Sub InitPageSecList(SecGroup)
'This code shows the menu structure and allows you to disable options
Dim MenuControl
Dim UcaseSecGroup

    If PageSecList.Count > 0 Then Exit Sub
'   Set these before calling Add2SecList !!
    UcaseSecGroup = UCase(SecGroup)
    passFuncSecGroup = SecGroup
    Set passSecList = PageSecList
    Add2SecList "File", "", "", ""
    Add2SecList "ImageFile", "X", "X", "X"
    Add2SecList "Save", "X", "", ""
    Add2SecList "SaveAs", "X", "X", ""
    Add2SecList "Print", "", "", ""
    Add2SecList "Close", "", "", ""
    Add2SecList "Edit", "", "", ""
    Add2SecList "Undo", "X", "X", "X"
    Add2SecList "Redo", "X", "X", "X"
    Add2SecList "Cut", "X", "X", "X"
    Add2SecList "Copy", "X", "X", ""
    Add2SecList "CopyAsText", "X", "X", "X"
    Add2SecList "CopyPage", "X", "X", ""
    Add2SecList "Paste", "X", "X", "X"
    Add2SecList "Clear", "X", "X", "X"
    Add2SecList "Crop", "X", "X", "X"
    Add2SecList "Drag", "", "", ""
    Add2SecList "Select", "", "", ""
    Add2SecList "View", "", "", ""
    Add2SecList "ScaleToGray", "", "", ""
    Add2SecList "ViewPage", "X", "X", "X"
    Add2SecList "ViewThumbnail", "X", "X", "X"
    Add2SecList "ViewPageAndThumbnail", "X", "X", "X"
    Add2SecList "Magnifier", "", "", ""
    Add2SecList "FullScreen", "", "", ""
    Add2SecList "Page", "", "", ""
    Add2SecList "PreviousPage", "", "", ""
    Add2SecList "NextPage", "", "", ""
    Add2SecList "FirstPage", "", "", ""
    Add2SecList "LastPage", "", "", ""
    Add2SecList "GotoPage", "", "", ""
    Add2SecList "GoBackPage", "", "", ""
    Add2SecList "PrintPage", "", "", ""
    Add2SecList "RotatePage", "", "", ""
    Add2SecList "RotatePageLeft", "", "", ""
    Add2SecList "RotatePageRight", "", "", ""
    Add2SecList "RotatePage180", "", "", ""
    Add2SecList "PageProperties", "", "", ""
    Add2SecList "Zoom", "", "", ""
    Add2SecList "ZoomIn", "", "", ""
    Add2SecList "ZoomOut", "", "", ""
    Add2SecList "ZoomToSelection", "", "", ""
    Add2SecList "FitToHeight", "", "", ""
    Add2SecList "FitToWidth", "", "", ""
    Add2SecList "BestFit", "", "", ""
    Add2SecList "Pixel", "", "", ""
    Add2SecList "Zoom25", "", "", ""
    Add2SecList "Zoom50", "", "", ""
    Add2SecList "Zoom75", "", "", ""
    Add2SecList "Zoom100", "", "", ""
    Add2SecList "Zoom200", "", "", ""
    Add2SecList "Zoom400", "", "", ""
    Add2SecList "Custom", "", "", ""
    Add2SecList "Tools", "", "", ""
    Add2SecList "OCRZone", "X", "X", "X"
    Add2SecList "DrawTextZone", "X", "X", "X"
    Add2SecList "DrawPictureZone", "X", "X", "X"
    Add2SecList "ShowOCRZone", "X", "X", "X"
    Add2SecList "RemoveAllOCRZone", "x", "X", "X"
    Add2SecList "RemoveSpeckles", "X", "X", "X"
    Add2SecList "StraightenPage", "X", "X", "X"
    Add2SecList "Options", "", "", ""
    Add2SecList "OptionGeneral", "", "", ""
    Add2SecList "OptionOCR", "X", "X", "X"
    Add2SecList "Annotation", "", "", ""
    Add2SecList "ShowAnnotations", "", "", ""
    Add2SecList "Permanent", "X", "X", "X"
    Add2SecList "FreehandLine", "X", "X", "X"
    Add2SecList "Highlighter", "", "", ""
    Add2SecList "StraightLine", "X", "X", "X"
    Add2SecList "HollowRectangle", "", "", ""
    Add2SecList "FilledRectangle", "", "", ""
    Add2SecList "TypedText", "", "", ""
    Add2SecList "Hyperlink", "X", "X", "X"
    Add2SecList "AttachANote", "", "", ""
    Add2SecList "TextFromFile", "", "", ""
    Add2SecList "RubberStamp", "", "", ""
    Add2SecList "RubberStamp_0_Approved", "", "", ""
    Add2SecList "RubberStamp_1_DRAFT", "", "", ""
    Add2SecList "RubberStamp_2_Received", "", "", ""
    Add2SecList "RubberStamp_3_Rejected", "", "", ""
    Add2SecList "AnnotationProperties", "", "", ""
    Add2SecList "Initials", "", "", ""
    Add2SecList "Help", "", "", ""
    Add2SecList "ContentsAndIndex", "X", "X", "X"
    Add2SecList "WhatsThis", "X", "X", "X"
    Add2SecList "About", "", "", ""
    Add2SecList "Refresh", "", "", ""
    Add2SecList "ZoomComboBox", "", "", ""
'   Menubar only options
    Add2SecList "ImageFileListTool", "", "", ""
    Add2SecList "OCRtoWord", "X", "X", "X"
    Add2SecList "OCRtoHTML", "X", "X", "X"
    Add2SecList "PageNumber", "", "", ""
    Add2SecList "AnnotationLink", "", "", ""
    Add2SecList "RubberStampProperties", "", "", ""
End Sub

Public Sub InitViewerSecList(SecGroup)
' This code shows the menu structure and allows you to disable options
Dim MenuControl
Dim UcaseSecGroup

    If ViewerSecList.Count > 0 Then Exit Sub
'   Set these before calling Add2SecList !!
    UcaseSecGroup = UCase(SecGroup)
    passFuncSecGroup = SecGroup
    Set passSecList = ViewerSecList
    Add2SecList "New", "X", "", ""
    Add2SecList "NewImport", "X", "", ""
    Add2SecList "NewDocument", "X", "", ""
    Add2SecList "NewFolder", "X", "X", "X"
    Add2SecList "NewNote", "X", "", ""
    Add2SecList "Insert", "X", "", ""
    Add2SecList "InsertFromFile", "X", "", ""
    Add2SecList "InsertFromWorklist", "X", "", ""
    Add2SecList "Save", "X", "", ""
    Add2SecList "Reserve", "X", "", ""
    Add2SecList "SendTo", "X", "", ""
    Add2SecList "SendToDefault", "X", "", ""
    Add2SecList "SendToWorkstep", "X", "X", "X"
    Add2SecList "SendToMailbox", "X", "", ""
    Add2SecList "SendToPrintWorkstep", "X", "X", "X"
    Add2SecList "SendToFaxWorkstep", "X", "X", "X"
    Add2SecList "Properties", "X", "X", "X"
    Add2SecList "Close", "", "", ""
    Add2SecList mnuPrint, "", "", ""
    Add2SecList mnuPrintSetup, "", "", ""
    Add2SecList "ContentsNew", "X", "X", "X"
'   Insert is already in 'File' !!
    Add2SecList "Open", "", "", ""
    Add2SecList "OpenSpecial", "X", "X", "X"
    Add2SecList "OpenSpecialReserved", "X", "X", "X"
    Add2SecList "OpenSpecialUnreserved", "X", "X", "X"
    Add2SecList "OpenSpecialUnreservedMostRecent", "X", "X", "X"
    Add2SecList "OpenSpecialAttemptReserved", "X", "X", "X"
    Add2SecList "Rename", "X", "", ""
    Add2SecList "Export", "X", "", ""
    Add2SecList "ContentsDelete", "X", "X", ""
    Add2SecList "Cut", "X", "X", ""
    Add2SecList "Copy", "X", "X", ""
    Add2SecList "Paste", "X", "X", ""
    Add2SecList "Delete", "X", "X", ""
    Add2SecList "BothPanes", "", "", ""
    Add2SecList "UpperPane", "", "", ""
    Add2SecList "LowerPane", "", "", ""
    Add2SecList "LargeIcons", "", "", ""
    Add2SecList "SmallIcons", "", "", ""
    Add2SecList "list", "", "", ""
    Add2SecList "Details", "", "", ""
    Add2SecList "StatusBar", "", "", ""
    Add2SecList "Preview", "", "", ""
    Add2SecList "FieldAssistant", "X", "X", "X"
    Add2SecList "Find", "X", "X", "X"
    Add2SecList "Options", "", "", ""
'   CUSTOM
    Add2SecList mnuVerplaatsen, "X", "", ""
    Add2SecList mnuWord, "X", "", ""
    Add2SecList mnuInfo, "X", "", ""
    Add2SecList mnuBehandelen, "X", "", ""
    Add2SecList mnuBijzonderheden, "X", "", ""
    Add2SecList mnuFoutVerzonden, "X", "", ""
    Add2SecList mnuFoutNietVerzonden, "X", "", ""
    Add2SecList mnuEscaleren, "X", "", ""
    Add2SecList mnuHernoem, "X", "", ""
    Add2SecList mnuSaveEmail, "X", "", ""
    Add2SecList mnuSaveTelefon, "X", "", ""
    Add2SecList mnuAttachAll, "X", "", ""
    Add2SecList mnuAttachDocument, "X", "", ""
    Add2SecList mnuCreateEmail, "X", "", ""
    Add2SecList mnuHelp, "", "", ""
    Add2SecList mnuDeelnKLant, "X", "", ""
    Add2SecList mnuWeerBehandelen, "X", "", ""
    Add2SecList "ContentsAndIndex", "X", "X", "X"
    Add2SecList "WhatsThis", "X", "X", "X"
    Add2SecList "About", "", "", ""
'   RightMouse click on Notes
    Add2SecList "OpenNote", "", "", ""
    Add2SecList "DeleteNote", "X", "X", ""
    Add2SecList "RenameNote", "X", "", ""
    Add2SecList "ViewNext", "X", "X", ""
End Sub

Public Sub InitDesktopSecList(SecGroup)
'This code shows the menu structure and allows you to disable options
Dim MenuControl
Dim UcaseSecGroup

    If DesktopSecList.Count > 0 Then Exit Sub
'   Set these before calling Add2SecList !!
    UcaseSecGroup = UCase(SecGroup)
    passFuncSecGroup = SecGroup
    Set passSecList = DesktopSecList
    Add2SecList "New", "X", "", ""
    Add2SecList "NewImport", "X", "X", "X"
    Add2SecList "NewDocument", "X", "", ""
    Add2SecList "NewFolder", "X", "X", "X"
    Add2SecList "NewWorksetGroup", "", "", ""
    Add2SecList "InsertFromFile", "X", "X", "X"
    Add2SecList "OpenSpecial", "X", "X", "X"
    Add2SecList "OpenReserved", "X", "X", "X"
    Add2SecList "OpenUnreserved", "X", "X", "X"
    Add2SecList "OpenUnreservedMostRecent", "X", "X", "X"
    Add2SecList "OpenAttemptReserved", "X", "X", "X"
    Add2SecList "Save", "X", "", ""
    Add2SecList "ExpandOrCollapse", "", "", ""
    Add2SecList "Reserve", "X", "", ""
    Add2SecList "Unreserve", "X", "", ""
    Add2SecList "AutoRetrieve", "", "", ""
    Add2SecList "SendTo", "X", "", ""
    Add2SecList "SendToDefault", "X", "", ""
    Add2SecList "SendToWorkstep", "X", "X", "X"
    Add2SecList "SendToMailbox", "X", "", ""
    Add2SecList "SendToPrintWorkstep", "X", "X", "X"
    Add2SecList "SendToFaxWorkstep", "X", "X", "X"
    Add2SecList "Properties", "X", "X", "X"
    Add2SecList "LogOff", "", "", ""
    Add2SecList "Exit", "", "", ""
    Add2SecList "Remove", "", "", ""
    Add2SecList "MoveToFolder", "X", "", ""
    Add2SecList "CopyToFolder", "X", "", ""
    Add2SecList "MarkAsDone", "X", "", ""
    Add2SecList "EditWorksetGroup", "", "", ""
    Add2SecList "Columns", "", "", ""
    Add2SecList "WorksetContentsColumns", "", "", ""
    Add2SecList "WorklistColumns", "", "", ""
    Add2SecList "BothPanes", "", "", ""
    Add2SecList "LowerPane", "", "", ""
    Add2SecList "UpperPane", "", "", ""
    Add2SecList "LargeIcons", "", "", ""
    Add2SecList "BothPanes", "", "", ""
    Add2SecList "SmallIcons", "", "", ""
    Add2SecList "list", "", "", ""
    Add2SecList "Details", "", "", ""
    Add2SecList "StatusBar", "", "", ""
    Add2SecList "DescriptionBars", "", "", ""
    Add2SecList "Refresh", "", "", ""
    Add2SecList "ViewNext", "X", "X", "X" '???
    Add2SecList "Tools", "", "", ""
    Add2SecList "Find", "", "", ""
    Add2SecList "VisualBasicEditor", "X", "X", "X"
    Add2SecList "Options", "", "", ""
    Add2SecList "Help", "", "", ""
    Add2SecList "ContentsAndIndex", "X", "X", "X"
    Add2SecList "WhatsThis", "X", "X", "X"
    Add2SecList "Web", "X", "X", "X"
    Add2SecList "About", "", "", ""
'   Custom
    Add2SecList mnuSaveEmail, "X", "", ""
    Add2SecList mnuSaveTelefon, "X", "", ""
    Add2SecList mnuSysdelete, "X", "X", "X"
    Add2SecList mnuHelp, "", "", ""
    Add2SecList mnuWijzigenItems, "X", "X", ""
    Add2SecList mnuMUTQuery, "", "", ""
    Add2SecList mnuPOSTQuery, "", "", ""                    '[PAC] 25SEP09
    Add2SecList mnuDefaultColumns, "", "", ""
    Add2SecList mnuAllColumns, "", "", ""
End Sub

Private Sub Add2SecList(MenuControl, AlleenLezen, WFMGebruiker, AppBeheer)
'   passFuncSecGroup is set by the calling program
'   passSecList is set by the calling program
    If UCase(passFuncSecGroup) = "ALLEENLEZEN" Then _
        If AlleenLezen > " " Then passSecList.Add MenuControl
    If UCase(passFuncSecGroup) = "WFMGEBRUIKER" Then _
        If WFMGebruiker > " " Then passSecList.Add MenuControl
    If UCase(passFuncSecGroup) = "APPBEHEER" Then _
        If AppBeheer > " " Then passSecList.Add MenuControl
End Sub

Public Sub InitFuncSec()
Dim username

'   Defaults
    FuncSecLevel = 0
    FuncSecGroup = "ALLEENLEZEN"
    username = Application.SessionInfo.username
    FuncSecGroup = UCase(GetFuncSecGroup(username))  'Get Security form the Eastmanserver
'   Convert security name to security level
    If FuncSecGroup = "WFMGEBRUIKER" Then FuncSecLevel = 1
    If FuncSecGroup = "APPBEHEER" Then FuncSecLevel = 2
    If FuncSecGroup = "SYSTEEMBEHEER" Then FuncSecLevel = 3
    Call InitDesktopSecList(FuncSecGroup)
    Call InitViewerSecList(FuncSecGroup)
    Call InitPageSecList(FuncSecGroup)
End Sub

Public Function GetFuncSecGroup(username) As String
Dim FuncGroup

    On Error GoTo EH
    FuncGroup = UCase(CALGetUserVar("FuncGroup", username))
    Select Case FuncGroup
        Case Is = "ALLEENLEZEN"
        Case Is = "WFMGEBRUIKER"
        Case Is = "APPBEHEER"
        Case Is = "SYSTEEMBEHEER"
        Case Else
             FuncGroup = "ALLEENLEZEN"
    End Select
    GetFuncSecGroup = FuncGroup
    Exit Function

EH:
    DisplayError "GetFuncGroup"
    Err.Clear
End Function
Attribute VB_Name = "OWRTVBForm"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Option Compare Text

'Windows API calls to do all the dirty work!
Private Declare Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
Private Declare Function GetWindowLong Lib "user32" Alias "GetWindowLongA" (ByVal hWnd As Long, ByVal nIndex As Long) As Long
Private Declare Function SetWindowLong Lib "user32" Alias "SetWindowLongA" (ByVal hWnd As Long, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
Private Declare Function GetSystemMenu Lib "user32" (ByVal hWnd As Long, ByVal bRevert As Long) As Long
Private Declare Function DeleteMenu Lib "user32" (ByVal hMenu As Long, ByVal nPosition As Long, ByVal wFlags As Long) As Long
Private Declare Function ShowWindow Lib "user32" (ByVal hWnd As Long, ByVal nCmdShow As Long) As Long
Private Declare Function EnableWindow Lib "user32" (ByVal hWnd As Long, ByVal fEnable As Long) As Long
Private Declare Function DrawMenuBar Lib "user32" (ByVal hWnd As Long) As Long
Private Declare Function ExtractIcon Lib "shell32.dll" Alias "ExtractIconA" (ByVal hInst As Long, ByVal lpszExeFileName As String, ByVal nIconIndex As Long) As Long
Private Declare Function SendMessage Lib "user32" Alias "SendMessageA" (ByVal hWnd As Long, ByVal wMsg As Long, ByVal wParam As Integer, ByVal lParam As Long) As Long
Private Declare Function SetFocus Lib "user32" (ByVal hWnd As Long) As Long

'Lots of window styles for us to play with!
Private Const GWL_STYLE As Long = (-16)           'The offset of a window's style
Private Const GWL_EXSTYLE As Long = (-20)         'The offset of a window's extended style
Private Const WS_CAPTION As Long = &HC00000       'Style to add a titlebar
Private Const WS_SYSMENU As Long = &H80000        'Style to add a system menu
Private Const WS_THICKFRAME As Long = &H40000     'Style to add a sizable frame
Private Const WS_MINIMIZEBOX As Long = &H20000    'Style to add a Minimize box on the title bar
Private Const WS_MAXIMIZEBOX As Long = &H10000    'Style to add a Maximize box to the title bar
Private Const WS_POPUP As Long = &H80000000       'Standard option, cleared when showing a task bar icon
Private Const WS_VISIBLE As Long = &H10000000     'Standard option, cleared when showing a task bar icon

Private Const WS_EX_DLGMODALFRAME As Long = &H1   'Controls if the window has an icon
Private Const WS_EX_APPWINDOW As Long = &H40000   'Application Window: shown on taskbar
Private Const WS_EX_TOOLWINDOW As Long = &H80     'Tool Window: small titlebar

'Constant to identify the Close menu item
Private Const SC_CLOSE As Long = &HF060

'Constants for hide or show a window
Private Const SW_HIDE As Long = 0
Private Const SW_SHOW As Long = 5

'Constants for Windows messages
Private Const WM_SETICON = &H80

'Variables to store the various selections/options
Dim hWndForm As Long, mbSizeable As Boolean, mbCaption As Boolean, mbIcon As Boolean, miModal As Integer

'Routine to set the form's window style
Public Sub setFormStyle2(oForm As Object _
                        , Optional Caption _
                        , Optional SysMenu _
                        , Optional Sizeable _
                        , Optional Minimize _
                        , Optional Maximize _
                        , Optional CloseBtn _
                        , Optional InTaskBar _
                        , Optional Icon _
                        , Optional AppWindow _
                        , Optional ToolWindow _
                        )

Dim iStyle As Long, hMenu As Long, hID As Long, iItems As Integer
Dim hWndForm As Long

    hWndForm = FindWindow(vbNullString, oForm.Caption)
'    Set moForm = oForm     'Remember the form for later

'   Have we got a form to set?
    If hWndForm = 0 Then Exit Sub

    iStyle = GetWindowLong(hWndForm, GWL_EXSTYLE)

'   Build up and set the extended window style
    If Not IsMissing(Icon) Then _
        If Icon = True Then _
        iStyle = iStyle Or WS_EX_DLGMODALFRAME Else iStyle = iStyle And Not WS_EX_DLGMODALFRAME
    If Not IsMissing(AppWindow) Then _
        If AppWindow = True Then _
        iStyle = iStyle Or WS_EX_APPWINDOW Else iStyle = iStyle And Not WS_EX_APPWINDOW
    If Not IsMissing(ToolWindow) Then _
        If ToolWindow = True Then _
        iStyle = iStyle Or WS_EX_TOOLWINDOW Else iStyle = iStyle And Not WS_EX_TOOLWINDOW

    SetWindowLong hWndForm, GWL_EXSTYLE, iStyle

    iStyle = GetWindowLong(hWndForm, GWL_STYLE)

'   Build up the basic window style flags for the form
    If Not IsMissing(Caption) Then _
        If Caption = True Then _
        iStyle = iStyle Or WS_CAPTION Else iStyle = iStyle And Not WS_CAPTION
    If Not IsMissing(SysMenu) Then _
        If SysMenu = True Then _
        iStyle = iStyle Or WS_SYSMENU Else iStyle = iStyle And Not WS_SYSMENU
    If Not IsMissing(Sizeable) Then _
        If Sizeable = True Then _
        iStyle = iStyle Or WS_THICKFRAME Else iStyle = iStyle And Not WS_THICKFRAME
    If Not IsMissing(Minimize) Then _
        If Minimize = True Then _
        iStyle = iStyle Or WS_MINIMIZEBOX Else iStyle = iStyle And Not WS_MINIMIZEBOX
    If Not IsMissing(Maximize) Then _
        If Maximize = True Then _
        iStyle = iStyle Or WS_MAXIMIZEBOX Else iStyle = iStyle And Not WS_MAXIMIZEBOX
    If Not IsMissing(InTaskBar) Then _
        If InTaskBar = True Then _
        iStyle = iStyle And Not WS_VISIBLE And Not WS_POPUP Else iStyle = iStyle Or WS_VISIBLE Or WS_POPUP

'   Set the basic window styles
    SetWindowLong hWndForm, GWL_STYLE, iStyle

'   Handle the close button differently
    If Not IsMissing(CloseBtn) Then
        If CloseBtn = True Then
            'We want it, so reset the control menu
            hMenu = GetSystemMenu(hWndForm, 1)
        Else
            'We don't want it, so delete it from the control menu
            hMenu = GetSystemMenu(hWndForm, 0)
            DeleteMenu hMenu, SC_CLOSE, 0&
        End If
    End If

'   Show the window with the changes
    ShowWindow hWndForm, SW_SHOW
    DrawMenuBar hWndForm
    SetFocus hWndForm
End Sub

Public Sub ChangeIcon(oForm As Object, Picture As Long)
Dim hIcon       As Long
Dim hWndForm    As Long

    hWndForm = FindWindow(vbNullString, oForm.Caption)
    On Error Resume Next
    If hWndForm <> 0 Then
        Err.Clear
        hIcon = Picture
'       Set the big (32x32) and small (16x16) icons
        SendMessage hWndForm, WM_SETICON, True, hIcon
        SendMessage hWndForm, WM_SETICON, False, hIcon
    End If
End Sub
Attribute VB_Name = "OWRTXmlDb"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Option Compare Text

'Easy access of XML files used for storing tables (database alike)
'Format the XPath XML query
'Caching calculated lists for imporved perfomance
'AtosOrigin re-usability module

Private Const m_Version = "2.10"
'2.10 2003-12-02 LLO GetRownodesOnce in buildvirtual
'2.09 2003-09-09 LLO get2list outherjoin


'2.00 02-12-20 LLO Eliminate String parameters
'2.01 02-12-22 LLO Add sec and logging
'2.02 02-12-22 LLO Cleaning
'2.03 02-12-23 LLO Versionnumber
'2.04 02-12-23 LLO XMLDoc property needed
'2.05 03-01-02 LLO Reset cache after save
'2.06 03-01-02 LLO GetField errormessage when not value found
'2.07 2003-03-04 LLO Add removeNodesList
'2.08 2003-05-12 LLO exportCSV skip export table name, Optional separator char

Private m_XMLDoc As DOMDocument
Private m_Path As String                        'Remember file used
Private m_Changed As Boolean

'Caching
Private m_RowNodesCache As New Collection
Private m_RowNodesNoCacheFlag As Boolean        'When true suppress caching
Private m_ListCache As New Collection
Private m_ListNoCacheFlag As Boolean            'When true suppress caching
Private m_Hits As Long

Friend Property Get XMLDoc() As DOMDocument: Set XMLDoc = m_XMLDoc: End Property
Public Property Get path() As String: path = m_Path: End Property
Public Property Get Changed() As Boolean: Changed = m_Changed: End Property
Public Property Get CacheStats() As String: CacheStats = m_RowNodesCache.Count & ", " & m_ListCache.Count & ", " & m_Hits: End Property
Public Property Get Version(): Version = m_Version: End Property
 
Public Sub ResetCache()
    Set m_RowNodesCache = Nothing
    Set m_ListCache = Nothing
    m_Hits = 0
End Sub
 
Public Property Get RootName() As String:
    RootName = m_XMLDoc.documentElement.BaseName
End Property
 
Private Function addTable(TableName As String) As IXMLDOMNode
Dim XMLElement          As IXMLDOMElement

'   Make sure a toplevel node is available
    If m_XMLDoc.firstChild Is Nothing Then Err.Raise 12345, , "XML not properly initialized!"
    Set addTable = m_XMLDoc.documentElement.selectSingleNode(TableName)
    If addTable Is Nothing Then
        m_Changed = True
        Set XMLElement = m_XMLDoc.createElement(TableName)
        m_XMLDoc.documentElement.appendChild XMLElement
        Set addTable = m_XMLDoc.documentElement.selectSingleNode(TableName)
    End If
End Function

Public Sub addDefinition(TableName As String, SingleDefinitionName, AttributeType, AttributeHeader, AttributeWidth, AttributeWFVariable, AttributeUnique)
Dim TableNode           As IXMLDOMNode
Dim DefinitionNode      As IXMLDOMNode
Dim XMLDefinitionElement    As IXMLDOMElement
Dim XMLSingleDefinitionElement  As IXMLDOMElement

    Set TableNode = addTable(TableName)
    If TableNode Is Nothing Then Err.Raise 1234, , "Tablename not found"
    m_Changed = True
    Set XMLDefinitionElement = TableNode.selectSingleNode("Definition")
    If XMLDefinitionElement Is Nothing Then Set XMLDefinitionElement = m_XMLDoc.createElement("Definition")
    Set XMLSingleDefinitionElement = XMLDefinitionElement.selectSingleNode(SingleDefinitionName)
    If XMLSingleDefinitionElement Is Nothing Then
        Set XMLSingleDefinitionElement = m_XMLDoc.createElement(SingleDefinitionName)
        Call XMLDefinitionElement.appendChild(XMLSingleDefinitionElement)
        Call TableNode.appendChild(XMLDefinitionElement)
    End If
    XMLSingleDefinitionElement.setAttribute "Type", AttributeType
    XMLSingleDefinitionElement.setAttribute "Header", AttributeHeader
    XMLSingleDefinitionElement.setAttribute "Width", AttributeWidth
    XMLSingleDefinitionElement.setAttribute "WFVariable", AttributeWFVariable
    XMLSingleDefinitionElement.setAttribute "Unique", AttributeUnique
End Sub

Friend Sub initXMLDb(sRootName As String)
Dim XMLElement          As IXMLDOMElement

    If m_XMLDoc Is Nothing Then
        Set m_XMLDoc = New DOMDocument
        m_XMLDoc.async = False
     End If
     If Not m_XMLDoc.documentElement Is Nothing Then
        If m_XMLDoc.documentElement.childNodes.Length > 1 Then
            Err.Raise 12345, "initXmlDb", "XMLDoc not empty!"
        End If
        m_XMLDoc.removeChild m_XMLDoc.documentElement
    End If
    Set XMLElement = m_XMLDoc.createElement(sRootName)
    m_XMLDoc.appendChild XMLElement
    m_Changed = False
End Sub

Public Property Get AllTablesList() As Collection
Dim myTableNode         As IXMLDOMNode

    Set AllTablesList = New Collection
    For Each myTableNode In AllTables
        AllTablesList.Add myTableNode.BaseName
    Next
End Property

Private Function formatXPathQuery(VarName1, VarValue1, Optional VarName2, Optional VarValue2 = "", Optional VarName3, Optional VarValue3 = "")
Dim tmpXPath

    If VarValue1 <> "" Then tmpXPath = VarName1 & " = """ & VarValue1 & """"
    If Not IsMissing(VarName2) And VarValue2 <> "" Then
        If Len(tmpXPath) > 0 Then tmpXPath = tmpXPath & " and "
        tmpXPath = tmpXPath & VarName2 & " = """ & VarValue2 & """"
    End If
    If Not IsMissing(VarName3) And VarValue3 <> "" Then
    If Len(tmpXPath) > 0 Then tmpXPath = tmpXPath & " and "
        tmpXPath = tmpXPath & VarName3 & " = """ & VarValue3 & """"
    End If
    formatXPathQuery = tmpXPath
End Function

Public Function getTwoListOnce(TableName, ColumnName, ColumnName2, Optional XPathRowFilterOrVarName1 = "", Optional VarValue1 = "", Optional VarName2 = "", Optional VarValue2 = "", Optional VarName3 = "", Optional VarValue3 = "") As IXMLDOMNodeList
    m_ListNoCacheFlag = True
    Set getTwoListOnce = getTwoList(TableName, ColumnName, ColumnName2, XPathRowFilterOrVarName1, VarValue1, VarName2, VarValue2, VarName3, VarValue3)
End Function

Public Function getTwoList(TableName, ColumnName, ColumnName2, Optional XPathRowFilterOrVarName1 = "", Optional VarValue1 = "", Optional VarName2 = "", Optional VarValue2 = "", Optional VarName3 = "", Optional VarValue3 = "") As Collection
Dim myXMLNodes          As IXMLDOMNodeList
Dim myXMLNode           As IXMLDOMNode
Dim myXPathQuery        As String
Dim myItem              As String
Dim cacheKey            As String

    If InStr(XPathRowFilterOrVarName1, """") > 0 Then
        myXPathQuery = XPathRowFilterOrVarName1
     Else
        If XPathRowFilterOrVarName1 = "" Then
            myXPathQuery = ""
        Else
            myXPathQuery = formatXPathQuery(XPathRowFilterOrVarName1, VarValue1, VarName2, VarValue2, VarName3, VarValue3)
        End If
    End If
    cacheKey = TableName & "~" & ColumnName & ColumnName2 & "~" & myXPathQuery
    On Error Resume Next
    Set getTwoList = m_ListCache.item(cacheKey)
    On Error GoTo 0
    If getTwoList Is Nothing Then
        m_RowNodesNoCacheFlag = m_ListNoCacheFlag
        Set myXMLNodes = getRowNodes(TableName, myXPathQuery)
        Set getTwoList = New Collection
        For Each myXMLNode In myXMLNodes
            myItem = ""
            On Error Resume Next 'outher join
            myItem = myXMLNode.selectSingleNode(ColumnName).Text
            myItem = myItem & "~"
            myItem = myItem & myXMLNode.selectSingleNode(ColumnName2).Text
            On Error GoTo 0
            getTwoList.Add myItem
        Next
        Set getTwoList = distinctList(sortList(getTwoList))
        If Not m_ListNoCacheFlag Then m_ListCache.Add getTwoList, cacheKey
     Else
        m_Hits = m_Hits + 1
    End If
    m_ListNoCacheFlag = False
End Function

Public Function getListOnce(TableName, ColumnName, Optional XPathRowFilterOrVarName1 = "", Optional VarValue1 = "", Optional VarName2 = "", Optional VarValue2 = "", Optional VarName3 = "", Optional VarValue3 = "") As Collection
    m_ListNoCacheFlag = True
    Set getListOnce = getList(TableName, ColumnName, XPathRowFilterOrVarName1, VarValue1, VarName2, VarValue2, VarName3, VarValue3)
End Function

Public Function getList(TableName, ColumnName, Optional XPathRowFilterOrVarName1 = "", Optional VarValue1 = "", Optional VarName2 = "", Optional VarValue2 = "", Optional VarName3 = "", Optional VarValue3 = "") As Collection
Dim myXMLNodes          As IXMLDOMNodeList
Dim myXMLNode           As IXMLDOMNode
Dim myXPathQuery        As String
Dim cacheKey            As String

    If InStr(XPathRowFilterOrVarName1, """") > 0 Then
        myXPathQuery = XPathRowFilterOrVarName1
     Else
        If XPathRowFilterOrVarName1 = "" Then
            myXPathQuery = ""
         Else
            myXPathQuery = formatXPathQuery(XPathRowFilterOrVarName1, VarValue1, VarName2, VarValue2, VarName3, VarValue3)
        End If
    End If
    cacheKey = TableName & "~" & ColumnName & "~" & myXPathQuery
    On Error Resume Next

Dim ColumnValue
    Set getList = m_ListCache.item(cacheKey)
    On Error GoTo 0
    If getList Is Nothing Then
        m_RowNodesNoCacheFlag = m_ListNoCacheFlag
        Set myXMLNodes = getRowNodes(TableName, myXPathQuery)
        Set getList = New Collection
        For Each myXMLNode In myXMLNodes
            ColumnValue = myXMLNode.selectSingleNode(ColumnName).Text
            getList.Add ColumnValue
        Next
        Set getList = distinctList(sortList(getList))
        If Not m_ListNoCacheFlag Then m_ListCache.Add getList, cacheKey
     Else
        m_Hits = m_Hits + 1
    End If
    m_ListNoCacheFlag = False
End Function

Public Function getRowNodesOnce(TableName, Optional XPathRowFilterOrVarName1 = "", Optional VarValue1 = "", Optional VarName2 = "", Optional VarValue2 = "", Optional VarName3 = "", Optional VarValue3 = "") As IXMLDOMNodeList
    m_RowNodesNoCacheFlag = True
    Set getRowNodesOnce = getRowNodes(TableName, XPathRowFilterOrVarName1, VarValue1, VarName2, VarValue2, VarName3, VarValue3)
End Function

Public Function getRowNodes(TableName, Optional XPathRowFilterOrVarName1 = "", Optional VarValue1 = "", Optional VarName2 = "", Optional VarValue2 = "", Optional VarName3 = "", Optional VarValue3 = "") As IXMLDOMNodeList
Dim myTableNode         As IXMLDOMNode
Dim myXPath             As String
Dim cacheKey            As String

    If m_XMLDoc Is Nothing Then Err.Raise 1234, "getColumn", "XML database niet gevonden."
    Set myTableNode = m_XMLDoc.documentElement.selectSingleNode(TableName)
    If myTableNode Is Nothing Then Err.Raise 3001, , "Tabel [" & TableName & "] niet gevonden!"
    If InStr(XPathRowFilterOrVarName1, """") > 0 Then
        myXPath = "Row[" & XPathRowFilterOrVarName1 & "]"
     Else
        If XPathRowFilterOrVarName1 = "" Then
            myXPath = "Row"
         Else
            myXPath = "Row[" & formatXPathQuery(XPathRowFilterOrVarName1, VarValue1, VarName2, VarValue2, VarName3, VarValue3) & "]"
        End If
        If myXPath = "Row[]" Then myXPath = "Row"
    End If
    cacheKey = TableName & "~" & myXPath
     
    On Error Resume Next
    Set getRowNodes = m_RowNodesCache.item(cacheKey)
    On Error GoTo 0
    If getRowNodes Is Nothing Then
        Set getRowNodes = myTableNode.selectNodes(myXPath)
        If getRowNodes.Length > 0 _
          And Not m_RowNodesNoCacheFlag Then m_RowNodesCache.Add getRowNodes, cacheKey
     Else
        m_Hits = m_Hits + 1
    End If
    
    m_RowNodesNoCacheFlag = False
    
End Function

Public Function getMetaNodes(TableName) As IXMLDOMNodeList
Dim myTableNode         As IXMLDOMNode
Dim myDefNode           As IXMLDOMNodeList

    If m_XMLDoc Is Nothing Then Err.Raise 1234, "getMetaNodes", "XML database niet gevonden."
    Set myTableNode = m_XMLDoc.documentElement.selectSingleNode(TableName)
    If myTableNode Is Nothing Then Err.Raise 3001, , "Tabel niet gevonden!"
    Set myDefNode = myTableNode.selectNodes("Definition")
    If myDefNode.Length < 1 Then Err.Raise 1234, "getMetaNodes", "Definition for " & TableName & " niet gevonden"
    If myDefNode.Length > 1 Then Err.Raise 1234, "getMetaNodes", "Meer dan 1 Definition for " & TableName & " niet gevonden"
    Set getMetaNodes = myDefNode.item(0).childNodes
End Function

Public Function Save(Optional path As String, Optional Overwrite As Boolean) As String
Dim MSGBoxAnswer

    If path = "" Then
        path = getTemporaryFilename
        m_Path = path
        Save = path
    Else
        If fso.FileExists(path) Then
            If Not Overwrite Then
                MSGBoxAnswer = MsgBox("Overschrijven?", vbYesNoCancel, path)
                Select Case MSGBoxAnswer
                    Case 6:                     'Save
                    Case 7: Exit Function       'Don't save changes
                    Case Else: Exit Function    'Cancel
                End Select
            End If
        End If
    End If
    m_XMLDoc.Save path
    If m_Path = path Then m_Changed = False
End Function

Public Sub Load(path As String)
    Set m_XMLDoc = New DOMDocument
    m_XMLDoc.async = False
    m_Changed = False
    If Not fso.FileExists(path) Then Err.Raise 12345, "OWRTXmlDB.Load", path & " niet gevonden!"
    m_XMLDoc.Load path
    m_Path = path
    ResetCache
End Sub

Public Sub showListItems(ListView As ListView, NodeList As IXMLDOMNodeList)
Dim NodeListItem        As IXMLDOMElement
Dim ListItem            As ListItem
Dim SubListItem         As ListSubItem
Dim ColumnHeader        As ColumnHeader
Dim Waarde

    ListView.ListItems.Clear
    For Each NodeListItem In NodeList
        Set ListItem = ListView.ListItems.Add
        For Each ColumnHeader In ListView.ColumnHeaders
            If ColumnHeader.Key <> "" Then
                If ColumnHeader.Index = 1 Then
                    ListItem.Tag = ColumnHeader.Key
                    ListItem.Text = getListViewFieldValue(ColumnHeader.Key, NodeListItem)
                 Else
                    Set SubListItem = ListItem.ListSubItems.Add(, ColumnHeader.Key)
                    Waarde = getListViewFieldValue(ColumnHeader.Key, NodeListItem)
                    SubListItem.Text = getListViewFieldValue(ColumnHeader.Key, NodeListItem)
                End If
            End If
        Next
    Next
End Sub

Private Function getListViewFieldValue(fieldName, Node As IXMLDOMElement)
Dim tmpNode             As IXMLDOMNode

    Set tmpNode = Node.selectSingleNode(fieldName)
    If tmpNode Is Nothing Then
        getListViewFieldValue = ""
    Else
        getListViewFieldValue = Node.selectSingleNode(fieldName).Text
    End If
End Function

Public Sub saveList(Table As String, Column As String, list As Collection, RecType As String)
Dim TableNode           As IXMLDOMNode
Dim item
Dim row                 As IXMLDOMNode
Dim Value               As IXMLDOMNode

    Set TableNode = getTable2(Table)
    If TableNode Is Nothing Then Err.Raise 12345, , Table & " niet gevonden!"
    removeChildNodes TableNode, RecType
    For Each item In list
        Set row = m_XMLDoc.createElement(RecType)
        Set Value = m_XMLDoc.createElement(Column)
        Value.Text = item
        row.appendChild Value
        TableNode.appendChild row
    Next
    m_Changed = True
End Sub


Public Sub saveListItems(Table As String, ListView As ListView, Optional Clear As Boolean = True, Optional NodeName = "ListItems")
Dim ListItemsNode       As IXMLDOMNode
Dim ListItemNode        As IXMLDOMElement
Dim ListItem            As ListItem
Dim TableNode           As IXMLDOMNode
Dim MetaNodes           As IXMLDOMNodeList
Dim Field               As IXMLDOMNode
Dim fieldName           As String
Dim row                 As IXMLDOMNode
Dim Value               As IXMLDOMNode

    Set TableNode = getTable2(Table)
    If TableNode Is Nothing Then Err.Raise 12345, , Table & " niet gevonden!"
    removeChildNodes TableNode, "Row"
    Set MetaNodes = getMetaNodes(Table)
    For Each ListItem In ListView.ListItems
        Set row = m_XMLDoc.createElement("Row")
        TableNode.appendChild row
        For Each Field In MetaNodes
            fieldName = Field.BaseName
            Set Value = m_XMLDoc.createElement(fieldName)
            Value.Text = ListItem.ListSubItems.item(fieldName)
            row.appendChild Value
        Next
    Next
    ResetCache
    m_Changed = True
End Sub

Public Sub removeChildNodes(Node As IXMLDOMNode, BaseName As String)
Dim myRowNode           As IXMLDOMNode

    For Each myRowNode In Node.childNodes
        If myRowNode.BaseName = BaseName Then Node.removeChild myRowNode
    Next
    m_Changed = True
End Sub

Public Sub removeNodesList(NodeList As IXMLDOMNodeList)
Dim myRowNode           As IXMLDOMNode

    For Each myRowNode In NodeList
        myRowNode.parentNode.removeChild myRowNode
    Next
    m_Changed = True
End Sub

Public Sub removeNode(Node As IXMLDOMNode)
    Node.parentNode.removeChild Node
    m_Changed = True
End Sub

Public Sub moveTable(fromTableNode As IXMLDOMNode)
Dim tmpTableNode        As IXMLDOMNode

    Set tmpTableNode = m_XMLDoc.documentElement.selectSingleNode(fromTableNode.BaseName)
    If Not tmpTableNode Is Nothing Then Err.Raise 12345, , fromTableNode.BaseName & " already exist!"
    m_XMLDoc.documentElement.appendChild fromTableNode
    m_Changed = True
End Sub

Public Function existTable(TableName) As Boolean
Dim tmpTableNode        As IXMLDOMNode

    Set tmpTableNode = m_XMLDoc.documentElement.selectSingleNode(TableName)
    existTable = Not tmpTableNode Is Nothing
End Function

Public Sub removeTable(TableName)
Dim tmpTableNode        As IXMLDOMNode

    Set tmpTableNode = m_XMLDoc.documentElement.selectSingleNode(TableName)
    If Not tmpTableNode Is Nothing Then
        tmpTableNode.parentNode.removeChild tmpTableNode
        m_Changed = True
    End If
End Sub

Public Property Get Table(TableName) As IXMLDOMNode
    Set Table = m_XMLDoc.documentElement.selectSingleNode(TableName)
    If Table Is Nothing Then Err.Raise 3001, , "Tabel niet gevonden!"
End Property

Public Function getTable2(TableName) As IXMLDOMNode
    If m_XMLDoc Is Nothing Then Err.Raise 1234, "getColumn", "XML database niet gevonden."
    Set getTable2 = m_XMLDoc.documentElement.selectSingleNode(TableName)
End Function

Public Function getTableNode(TableName) As IXMLDOMNode
    If m_XMLDoc Is Nothing Then Err.Raise 1234, "getTableNode", "XML database niet gevonden."
    Set getTableNode = m_XMLDoc.documentElement.selectSingleNode(TableName)
    If getTableNode Is Nothing Then Err.Raise 12345, "getTableNode", TableName & " niet gevonden!"
End Function

Public Property Get AllTables() As IXMLDOMNodeList
    If m_XMLDoc Is Nothing Then Err.Raise 1234, "AllTables", "XML database niet gevonden."
    Set AllTables = m_XMLDoc.documentElement.childNodes
End Property

Public Function getField(TableName, ColumnName As String, Optional XPathRowFilterOrVarName1 = "", Optional VarValue1 = "", Optional VarName2 = "", Optional VarValue2 = "", Optional VarName3 = "", Optional VarValue3 = "") As String
Dim myTableNode         As IXMLDOMNode
Dim myNodeList          As IXMLDOMNodeList
Dim myRowNodes          As IXMLDOMNodeList
Dim myXPath             As String
Dim cacheKey            As String

    If XPathRowFilterOrVarName1 = "" Then Err.Raise 12345, "getField", "Geen selectie gespecifiseerd!"
    Set myRowNodes = getRowNodes(TableName, XPathRowFilterOrVarName1, VarValue1, VarName2, VarValue2, VarName3, VarValue3)
    If myRowNodes.Length > 1 Then
        Err.Raise 12345, "getField", "Meerdere waarden gevonden voor !(" & TableName & "." & ColumnName & VarValue1 & ")"
    End If
    If myRowNodes.Length < 1 Then
        Err.Raise 12345, "getField", "Geen waarde gevonden voor " & TableName & "." & ColumnName & " " & VarValue1
    End If
    If Not myRowNodes.item(0).selectSingleNode(ColumnName) Is Nothing Then
        getField = myRowNodes.item(0).selectSingleNode(ColumnName).Text
     Else

Dim Field               As IXMLDOMNode
Dim fieldName           As String

        For Each Field In getMetaNodes(TableName)
            fieldName = Field.BaseName
            If InStr(1, fieldName, ColumnName, vbBinaryCompare) > 0 Then
                getField = "null"
                Exit For
            End If
        Next
        If getField = "null" Then
            getField = ""
         Else
            Err.Raise 12345, "getField", "Field '" & ColumnName & "' niet gevonden! "
        End If
    End If
End Function

Public Sub addRow(TableName As String, NewRow As IXMLDOMElement)
Dim myTableNode         As IXMLDOMNode

    Set myTableNode = Me.getTableNode(TableName)
    myTableNode.appendChild NewRow
    m_Changed = True
End Sub

Private Function dupRow(TableNode As IXMLDOMNode, row As IXMLDOMElement) As Boolean

End Function

Private Function getUniqueFields(MetaData As IXMLDOMNodeList) As Collection
Dim mySingleDefinitionNode  As IXMLDOMNode
Dim fieldName           As String
Dim Unique              As String

'   Setup save order
    Set getUniqueFields = New Collection
    For Each mySingleDefinitionNode In MetaData
        fieldName = mySingleDefinitionNode.NodeName
        Unique = mySingleDefinitionNode.Attributes.getNamedItem("Unique").nodeValue
        If Unique > "" And Unique <> "0" Then
            getUniqueFields.Add fieldName
        End If
    Next
End Function

Public Function NewRow(TableName As String) As IXMLDOMElement
Dim myTableNode         As IXMLDOMNode
Dim myMetaData          As IXMLDOMNodeList
Dim myMetaField         As IXMLDOMNode
Dim myNewFieldNode      As IXMLDOMElement

    Set myTableNode = Me.getTableNode(TableName)
    Set myMetaData = Me.getMetaNodes(TableName)
    Set NewRow = m_XMLDoc.createElement("Row")
    For Each myMetaField In myMetaData
        Set myNewFieldNode = m_XMLDoc.createElement(myMetaField.NodeName)
        NewRow.appendChild myNewFieldNode
    Next
End Function

Public Sub logUpdate(TableName As String, username As String)
Dim myLogElement        As IXMLDOMElement
Dim myTableNode         As IXMLDOMNode
Dim myNewFieldNode      As IXMLDOMElement

    Set myTableNode = Me.getTableNode(TableName)
    Set myLogElement = m_XMLDoc.createElement("Log")
    Set myNewFieldNode = m_XMLDoc.createElement("User")
    myNewFieldNode.Text = username
    myLogElement.appendChild myNewFieldNode
    Set myNewFieldNode = m_XMLDoc.createElement("DateTime")
    myNewFieldNode.Text = Format(Now, "yyyy-mm-dd hh:mm:ss")
    myLogElement.appendChild myNewFieldNode
    myTableNode.appendChild myLogElement
End Sub

Public Property Get SecList(TableName) As Collection
Dim myTableNode         As IXMLDOMNode
Dim mySecNodes          As IXMLDOMNodeList
Dim myXMLNode           As IXMLDOMNode

    Set myTableNode = Me.getTableNode(TableName)
    Set mySecNodes = myTableNode.selectNodes("Sec")
    Set SecList = New Collection
    For Each myXMLNode In mySecNodes
        SecList.Add myXMLNode.selectSingleNode("LANUser").Text
    Next
    Set SecList = sortList(SecList)
End Property

Public Property Get LogList(TableName) As Collection
Dim myTableNode         As IXMLDOMNode
Dim myLogNodes          As IXMLDOMNodeList
Dim myXMLNode           As IXMLDOMNode

    Set myTableNode = Me.getTableNode(TableName)
    Set myLogNodes = myTableNode.selectNodes("Log")
    Set LogList = New Collection
    For Each myXMLNode In myLogNodes
        LogList.Add myXMLNode.selectSingleNode("DateTime").Text & " " & myXMLNode.selectSingleNode("User").Text
    Next
    Set LogList = sortList(LogList)
End Property


Public Sub buildVirtualColumn(TargetTableName As String, TargetLinkColumnName As String, SourceTableName As String, SourceLinkColumnName As String, SourceColumnName, VirtualColumnName As String)
Dim TargetTableNode     As IXMLDOMNode
Dim TargetTableRow      As IXMLDOMNode
Dim TargetLinkColumn    As IXMLDOMNode
Dim TargetRows          As IXMLDOMNodeList
Dim SourceTableNode     As IXMLDOMNode
Dim SourceTableRow      As IXMLDOMNode
Dim SourceLinkColumn    As IXMLDOMNode
Dim SourceColumn        As IXMLDOMNode
Dim VirtualColumn       As IXMLDOMNode
Dim TargetDefinitionNode As IXMLDOMNode

    If m_XMLDoc Is Nothing Then Err.Raise 1234, "getColumn", "XML database niet gevonden."
    Set SourceTableNode = m_XMLDoc.documentElement.selectSingleNode(SourceTableName)
    If SourceTableNode Is Nothing Then Err.Raise 1234, , "Source Tabel " & SourceTableName & " niet gevonden!"
    Set TargetTableNode = m_XMLDoc.documentElement.selectSingleNode(TargetTableName)
    If TargetTableNode Is Nothing Then Err.Raise 1234, , "Target Tabel " & TargetTableNode & " niet gevonden!"
'   Adding definition
    Call addDefinition(TargetTableName, VirtualColumnName, "Virtual", VirtualColumnName, "20", "0", "0")
    For Each SourceTableRow In getRowNodesOnce(SourceTableName)
'       Getting related rows
        Set SourceLinkColumn = SourceTableRow.selectSingleNode(SourceLinkColumnName)
'       Setting virtual column in related rows
        For Each TargetTableRow In getRowNodesOnce(TargetTableName, TargetLinkColumnName, SourceLinkColumn.Text)
'           Testing if virtual column not already exists
            If TargetTableRow.selectSingleNode(VirtualColumnName) Is Nothing Then
'               Getting SourceColumn
                Set SourceColumn = SourceTableRow.selectSingleNode(SourceColumnName)
'               Creating  virtualColumn
                Set VirtualColumn = m_XMLDoc.createNode(NODE_ELEMENT, VirtualColumnName, "")
'               Setting value
                VirtualColumn.Text = SourceColumn.Text
'               Adding Virtual Column Value
                Call TargetTableRow.appendChild(VirtualColumn)
            End If
        Next
    Next
End Sub

Public Function exportCSV(WFMTableName As String, Optional ByVal Separator) As Collection
Dim MetaNodes           As IXMLDOMNodeList
Dim Field               As IXMLDOMNode
Dim fieldName           As String
Dim FieldLen            As Integer
Dim Data                As IXMLDOMNodeList
Dim row                 As IXMLDOMNode
Dim Value               As String
Dim Chapter             As String
Dim CSVLine             As String
Dim CSVHeader           As String

    If IsMissing(Separator) Then Separator = ","
    Set exportCSV = New Collection
    Set Data = getRowNodes(WFMTableName)
    Set MetaNodes = getMetaNodes(WFMTableName)
    If Data.Length > 0 Then
        For Each row In Data
            CSVLine = ""
            For Each Field In MetaNodes
                fieldName = Field.BaseName
                If exportCSV.Count < 1 Then CSVHeader = CSVHeader & fieldName & Separator
                Value = ""
                On Error Resume Next
                Value = row.selectSingleNode(fieldName).Text
                On Error GoTo 0
                CSVLine = CSVLine & Value & Separator
            Next
            If exportCSV.Count < 1 Then
                exportCSV.Add CSVHeader
            End If
            exportCSV.Add CSVLine
        Next
    Else
        For Each Field In MetaNodes
            fieldName = Field.BaseName
            If exportCSV.Count < 1 Then CSVHeader = CSVHeader & fieldName & Separator
        Next
        If exportCSV.Count < 1 Then exportCSV.Add CSVHeader
        exportCSV.Add "No records found"
    End If
    exportCSV.Add ""
End Function

Private Sub Class_Initialize()
    initXMLDb "WFMData"
End Sub
Attribute VB_Name = "OWRTeiStream"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Option Compare Text

Public Master           As CALMaster
Public Client           As CALClient
Public ClientList       As CALClientList

'2004-03-23 1.01 LLO add ClientListWIPCount, ClientListClear
'2004-02-05 1.00 LLO add ClientListItemStatus
Public Function ClientListWIPCount() As Integer
Dim ClientListItem      As CALClientListItem

    ClientListWIPCount = 0
    For Each ClientListItem In ClientList.AllItems
        If ClientListItemStatus(ClientListItem, calObjStatusWIP) Then
            ClientListWIPCount = ClientListWIPCount + 1
        End If
    Next
End Function

Public Sub ClientListWIPClear()
Dim ClientListItem      As CALClientListItem
Dim i                   As Integer

    For i = ClientList.AllItems.Count To 1 Step -1
        Set ClientListItem = ClientList.AllItems.item(i)
        If ClientListItemStatus(ClientListItem, calObjStatusWIP) Then
            sendWorkItem ClientListItem
        End If
    Next i
End Sub

Public Function ClientListItemStatus(ClientListItem As CALClientListItem, Status As ObjStatusConstants) As Boolean
    If (ClientListItem.Info.Status And Status) = Status Then ClientListItemStatus = True
End Function

Public Sub ImportUpload(ByRef objItem As Object, ByVal File As String, Optional ByVal Replace As Boolean, Optional ByVal Class, Optional ByVal ImportName)
Dim DocImports          As CALDocumentImports
Dim DocImport           As CALDocumentImport
Dim oFolder             As CALFolder
Dim oFolderChildren     As CALFolderChildren
Dim oFolderChildrenItems As CALFolderChildrenItems
Dim oFolderChild        As CALFolderChild
Dim oItemInfo           As CALWorkitemInfo
Dim oImport             As CALImport
Dim oImportListItem     As CALClientListItem
Dim FldChilds           As CALFolderChildren
Dim FldChild            As CALFolderChild
Dim objWorkItemInfo     As CALWorkitemInfo
Dim objClientListItem   As CALClientListItem
Dim FldImport           As CALImport
Dim tmpImportName
Dim i                   As Integer

    On Error GoTo ErrH
    If objItem.Info.Type = calObjTypeDocument Then
         Set DocImports = objItem.Imports
         If Replace Then
             For Each DocImport In DocImports 'imports found -> search for xml data
                 i = i + 1
                 If Not IsMissing(Class) Then
                     If DocImport.Class = Class Then Exit For
                  ElseIf Not IsMissing(ImportName) Then
                     If DocImport.name = ImportName Then Exit For
                  Else
                     Exit For
                 End If
                 Set DocImport = Nothing
             Next
         End If
         If Not DocImport Is Nothing Then
             tmpImportName = DocImport.name
             DocImports.Remove DocImport
         End If
         If tmpImportName = "" Then tmpImportName = ImportName
         If tmpImportName = "" Then tmpImportName = Class & "Import"
         
         If i < 1 Then i = 1
         DocImports.Add i, ImportName, Class, File 'add new
    Else
         Set oFolderChildren = objItem.Children
         Set oFolderChildrenItems = oFolderChildren.ImportItems
        
         If Replace Then
            For Each oFolderChild In oFolderChildrenItems
                If Not IsMissing(Class) Then
                   If oFolderChild.Class = Class Then Exit For
                ElseIf Not IsMissing(ImportName) Then
                   If oFolderChild.Info.name = ImportName Then Exit For
                End If
                Set oFolderChild = Nothing
            Next
         End If
         If Not oFolderChild Is Nothing Then
            tmpImportName = oFolderChild.Info.name
            Call oFolderChildren.Remove(oFolderChild)
         End If
          
         If tmpImportName = "" Then tmpImportName = ImportName
         If tmpImportName = "" Then tmpImportName = Class & "Import"
          
         Set oItemInfo = Application.CALClient.CreateImport(ImportName, Class, File)
         Set oImportListItem = Application.CALClient.ClientList.Add(oItemInfo.objId, 0)
         Set oImport = oImportListItem.Open(calOpenReadWrite)
         oImport.Save
         Call oFolderChildren.Add(oImport.Info.objId, calChildFirst)
         objItem.Save
         oImport.Close calCloseSaveChanges
         Application.CALClient.ClientList.Remove oImportListItem
    End If
    Exit Sub

ErrH:
    Err.Raise ES2VB2000Err(Err.Number), "OWRTEastman.DocImportUpload", Err.Description
End Sub

Public Sub DocImportUpload(doc As CALDocument, File As String, Optional Replace As Boolean, Optional Class, Optional ImportName)
Dim DocImports          As CALDocumentImports
Dim DocImport           As CALDocumentImport
Dim tmpImportName
Dim i                   As Integer

    On Error GoTo ErrH
    Set DocImports = doc.Imports
    If Replace Then
        For Each DocImport In DocImports 'imports found -> search for xml data
            i = i + 1
            If Not IsMissing(Class) Then
                If DocImport.Class = Class Then Exit For
             ElseIf Not IsMissing(ImportName) Then
                If DocImport.name = ImportName Then Exit For
             Else
                Exit For
            End If
            Set DocImport = Nothing
        Next
    End If
    If Not DocImport Is Nothing Then
        tmpImportName = DocImport.name
        DocImports.Remove DocImport
    End If
    If tmpImportName = "" Then tmpImportName = ImportName
    If tmpImportName = "" Then tmpImportName = Class & "Import"
    If i < 1 Then i = 1
    DocImports.Add i, ImportName, Class, File 'add new
    Exit Sub

ErrH:
    Err.Raise ES2VB2000Err(Err.Number), "OWRTEastman.DocImportUpload", Err.Description
End Sub

Private Function ES2VB2000Err(ByVal ErrNr)
    If ErrNr = 1000 Then ES2VB2000Err = 2000 + Master.LastError.Code Else ES2VB2000Err = ErrNr
End Function

Public Function DocImportExtract(doc As CALDocument, Optional Class, Optional ImportName) As String
Dim DocImports          As CALDocumentImports
Dim DocImport           As CALDocumentImport
Dim TmpFile             As String

    On Error GoTo ErrH
    Set DocImports = doc.Imports
    If DocImports.Count = 0 Then Err.Raise 345, , "No imports found in document"
    For Each DocImport In DocImports 'imports found -> search for xml data
        If Not IsMissing(Class) Then
            If DocImport.Class = Class Then Exit For
         ElseIf Not IsMissing(ImportName) Then
            If DocImport.name = ImportName Then Exit For
         Else
            Exit For
        End If
        Set DocImport = Nothing
    Next
    If Not DocImport Is Nothing Then
        TmpFile = fso.GetTempName
        DocImport.Extract TmpFile
        DocImportExtract = TmpFile
    Else
        Err.Raise 345, , "Import not found in document"
    End If
    Exit Function

ErrH:
    Err.Raise ES2VB2000Err(Err.Number), "OWRTEastman.DocImportExtract", Err.Description
End Function

Public Function ImportExtract(objItem As Object, Optional Class, Optional ImportName) As String
Dim FldChilds           As CALFolderChildren
Dim FldChild            As CALFolderChild
Dim FldChildItems       As CALFolderChildrenItems
Dim FldImport           As CALImport
Dim DocImports          As CALDocumentImports
Dim DocImport           As CALDocumentImport
Dim objClientListItem   As CALClientListItem
Dim TmpFile             As String

    On Error GoTo ErrH
    If objItem.Info.Type = calObjTypeFolder Then
        Set FldChildItems = objItem.Children.ImportItems
        If FldChildItems.Count = 0 Then Err.Raise 345, , "No imports found in folder"
        For Each FldChild In FldChildItems
            If Not IsMissing(Class) Then
                If FldChild.Class = Class Then Exit For
            ElseIf Not IsMissing(ImportName) Then
                If FldChild.Info.name = ImportName Then Exit For
            Else
                Exit For
            End If
            Set FldChild = Nothing
        Next
        If Not FldChild Is Nothing Then
            TmpFile = Environ("TEMP") + "\~WF" + fso.GetTempName    '[W7]  Was: "C:\TEMP\~WF" + fso.GetTempName
            Set objClientListItem = Eastman.ClientList.Add(FldChild.Info.objId, calAddRetain)
            Set FldImport = objClientListItem.Open(calOpenReadOnly)
            FldImport.Extract TmpFile
            ImportExtract = TmpFile
            FldImport.Close calCloseAbortChanges
            Eastman.ClientList.Remove objClientListItem
         Else
            Err.Raise 345, , "Import not found in folder"
        End If
    Else
        Set DocImports = objItem.Imports
        If DocImports.Count = 0 Then Err.Raise 345, , "No imports found in document"
        For Each DocImport In DocImports 'imports found -> search for xml data
            If Not IsMissing(Class) Then
                If DocImport.Class = Class Then Exit For
             ElseIf Not IsMissing(ImportName) Then
                If DocImport.name = ImportName Then Exit For
             Else
                Exit For
            End If
            Set DocImport = Nothing
        Next
        If Not DocImport Is Nothing Then
            TmpFile = Environ("TEMP") + "\~WF" + fso.GetTempName    '[W7]  Was: "C:\TEMP\~WF" + fso.GetTempName
            DocImport.Extract TmpFile
            ImportExtract = TmpFile
         Else
            Err.Raise 345, , "Import not found in document"
        End If
    End If
    Exit Function

ErrH:
    Err.Raise ES2VB2000Err(Err.Number), "OWRTEastman.DocImportExtract", Err.Description
End Function

Public Property Get DomainName() As String
    DomainName = Client.DomainName
End Property

Public Function GetExtraInfoValue(myEnumItem As CALEnumItem, strFieldName As String) As String

    Dim myExtraInfoItem As CALEnumExtraInfoItem
    Dim myObject As Object
    
    On Error GoTo EH:
    
    For Each myExtraInfoItem In myEnumItem.ExtraInfo
        If UCase(myExtraInfoItem.name) = UCase(strFieldName) Then
            GetExtraInfoValue = myExtraInfoItem.Value
            Exit Function
        End If
    Next
        
    Select Case UCase(strFieldName)
        Case "NAME"
            GetExtraInfoValue = myEnumItem.Info.name
        Case "SOURCEWORKSET"
            GetExtraInfoValue = myEnumItem.Info.SourceWorkset
        Case "SOURCEWORKSTEP"
            GetExtraInfoValue = myEnumItem.Info.SourceWorkstep
        Case "DOMAINNAME"
            GetExtraInfoValue = myEnumItem.Info.DomainName
        Case "TIMESTAMP"
            GetExtraInfoValue = myEnumItem.Info.TimeStamp
    End Select
    
    Exit Function
EH:
    GetExtraInfoValue = ""
    
End Function



Public Sub setWFVarCollectionList(VarName, ValueList As Collection, Optional username)
Dim myStringList() As String
Dim i

    'Convert collection to string()
    If ValueList.Count > 0 Then
        ReDim myStringList(ValueList.Count - 1)
        For i = 0 To ValueList.Count - 1
            myStringList(i) = ValueList.item(i + 1)
        Next i
     Else
        ReDim myStringList(0)
    End If
    
    If IsMissing(username) Then
        Call Eastman.setWFVarStringList(VarName, myStringList)
     Else
        Call Eastman.setWFVarStringList(VarName, myStringList, username)
    End If
    
End Sub


Public Function copyCaseFormToWI(VBAForm As Object, ClientListItem As CALClientListItem) As Boolean
Dim myCaseFormField As Control
Dim FormFieldName As String
Dim myWIFields As CALFormFields
Dim myWIField As CALFormField
Dim myCaseFormFieldType
Dim myCaseFormFieldValue

On Error GoTo EH

    Set myWIFields = ClientListItem.OpenedItem.FormFields(calFieldsNoViews)
    If myWIFields Is Nothing Then Err.Raise 1234, , "Workitem is niet open"

    ' loop trhu all fields on the form and look for WFMxName fields
    For Each myCaseFormField In VBAForm.Controls
        FormFieldName = myCaseFormField.name
        If Left(myCaseFormField.name, 2) = "WI" Then
            ' Set the class property of the form field control
            myCaseFormFieldType = Mid(myCaseFormField.name, 3, 1)
            Set myWIField = myWIFields.Find(Mid(myCaseFormField.name, 4))
            myCaseFormFieldValue = myCaseFormField
            
            Select Case myCaseFormFieldType
                Case Is = "_"       'Plane text
                     ' if Retain zero then value add leading zero's to max lenght
                        If ((myWIField.Info.Flags And calFieldFlagRetainZeros) = calFieldFlagRetainZeros) Then
                            
                            myCaseFormFieldValue = Format(Val(myCaseFormFieldValue), String(myCaseFormField.MaxLength, "#"))
                            If myCaseFormFieldValue <> Empty And Val(myCaseFormFieldValue) <> 0 Then _
                                myCaseFormFieldValue = Format(Val(myCaseFormFieldValue), String(myCaseFormField.MaxLength, "0"))
                        End If
                        If myWIField.Value <> myCaseFormFieldValue Then
                            If Len(myCaseFormFieldValue) > myWIField.Info.Length Then Beep
                            'myWIField.Value = Mid(myCaseFormFieldValue, 1, myWIField.Info.Length)
                            myWIField.Value = myCaseFormFieldValue
                        End If
                        
                        myCaseFormField = myCaseFormFieldValue
                    
                Case Is = "R"       'Readonly
                    
                Case Is = "C"       'CheckBox Yes/No
                        If myCaseFormField = True Then
                            myCaseFormFieldValue = "J"
                         ElseIf myCaseFormField = False Then
                            myCaseFormFieldValue = "N"
                         Else
                            myCaseFormFieldValue = " "
                        End If
                        If myWIField.Value <> myCaseFormFieldValue Then myWIField.Value = myCaseFormFieldValue
                
                Case Is = "D"      'Date
                       'defined as a date on the Eastman form
                        If myWIField.Info.Type = calFieldTypeDate Then
                            myCaseFormFieldValue = Format(myCaseFormField, "yyyy/mm/dd")
                         Else  'defined as Text on the Eastman form
                            myCaseFormFieldValue = Format(myCaseFormField, "dd/mm/yyyy")
                        End If
                        If myWIField.Value <> myCaseFormFieldValue Then myWIField.Value = myCaseFormFieldValue
                
                Case Is = "L"      'ListBox
                    If myWIField.Value <> myCaseFormFieldValue Then myWIField.Value = myCaseFormFieldValue
                    
                Case Else ' some other menu
                'Readonly
                'MsgBox "WFM Field type unknown " & myCaseFormField.Name
            
            End Select
        End If
    Next
    
    copyCaseFormToWI = True
    
Exit Function

EH:
Dim ErrNr As Long
Dim ErrDesc As String
    ErrNr = Err.Number
    ErrDesc = Err.Description
    Beep
    'MsgBox Err.Description, , "Veld: " & FormFieldName

    If MsgBox(Err.Description & vbCrLf & vbCrLf & "Doorgaan?", vbYesNo, "Veld: " & FormFieldName) = vbNo Then
        On Error GoTo 0
        Err.Raise ErrNr, , ErrDesc
        Exit Function
     Else
        Resume Next
    End If

End Function

Public Sub copyWIToCaseForm(WorkItem As CALClientListItem, VBAForm As Object, Optional PreFix)
Dim myCaseFormField As Control
Dim myWIFields As CALFormFields
Dim myWIField As CALFormField
Dim myCaseFormFieldType
Dim myCaseFormFieldValue

Dim SpacesInFront As String
Dim WFMFormPos As Integer

Dim WFMCALFieldList As CALFormFieldValueList
Dim WFMCALFieldListValue
Dim PreFixLen As Integer

    If IsMissing(PreFix) Then PreFix = "WI"
    PreFixLen = Len(PreFix)
    
    Set myWIFields = WorkItem.OpenedItem.FormFields(calFieldsNoViews)
    If myWIFields Is Nothing Then Err.Raise 1234, , "Workitem is niet open"
    'Set objClientListItem = Viewer.CALClientListItem
        
    ' loop trough all fields on the form and look for WFMxName fields
    For Each myCaseFormField In VBAForm.Controls
        If Left(myCaseFormField.name, PreFixLen) = PreFix Then
            Set myWIField = myWIFields.Find(Mid(myCaseFormField.name, 4))
            If myWIField Is Nothing Then
                MsgBox myCaseFormField.name & " niet aanwezig in werkitem!"
            End If
            myCaseFormFieldValue = myWIField.Value
            If myCaseFormField.ControlTipText = "" Then myCaseFormField.ControlTipText = myWIField.Info.HelpText
            If myCaseFormField.Tag = "" Then myCaseFormField.Tag = myWIField.Info.Prompt
            
            myCaseFormFieldType = Mid(myCaseFormField.name, 3, 1)
            Select Case myCaseFormFieldType
                Case Is = "_"     'Plane text
                    myCaseFormField = myWIField.Value
                    On Error Resume Next
                    myCaseFormField.MaxLength = myWIField.Info.Length
                    Err.Clear
                    On Error GoTo 0
                    ' if Retain zero then value add leading zero's to max lenght
                    If ((myWIField.Info.Flags And calFieldFlagRetainZeros) = calFieldFlagRetainZeros) Then
                        
                        myCaseFormField = Format(Val(myCaseFormField), String(myCaseFormField.MaxLength, "#"))
                        If myCaseFormField <> Empty And Val(myCaseFormField) <> 0 Then _
                            myCaseFormField = Format(Val(myCaseFormField), String(myCaseFormField.MaxLength, "0"))
                    End If
                
                Case Is = "R", "F"        'ReadOnly Text
                    'If date on the Eastman form
                    On Error Resume Next 'Dirty way to findout what type of Field we are updating on the VBA Form
                    myCaseFormField.MaxLength = myWIField.Info.Length: Err.Clear
                    SpacesInFront = myCaseFormField.Caption
                    If Err = 0 Then SpacesInFront = "  " Else SpacesInFront = "" 'Only with label fields
                    On Error GoTo 0
                    If myWIField.Info.Type = calFieldTypeDate Then
                       myCaseFormField = SpacesInFront & Format(myCaseFormFieldValue, "dd/mm/yyyy")
                     Else  'defined as Text on the Eastman form
                        myCaseFormField = SpacesInFront & myCaseFormFieldValue
                    End If
                    
                Case Is = "C"       'CheckBox Yes/No
                    If Mid(myWIField.Value, 1, 1) = "Y" Or _
                        Mid(myWIField.Value, 1, 1) = "y" Or _
                        Mid(myWIField.Value, 1, 1) = "J" Or _
                        Mid(myWIField.Value, 1, 1) = "j" Then
                       myCaseFormField = 1
                      Else
                       myCaseFormField = 0
                    End If
                
                Case Is = "D"      'Date
                    If Len(myWIField.Value) > 0 Then
                       If Len(myWIField.Value) = 8 Then
                          myCaseFormFieldValue = Mid(myWIField.Value, 1, 4) & "-" & _
                          Mid(myWIField.Value, 5, 2) & "-" & Mid(myWIField.Value, 7, 2)
                        End If
                        myCaseFormField = Format(myCaseFormFieldValue, "dd/mm/yyyy")
                    End If
                    myCaseFormField.MaxLength = 10
                
                Case Is = "L"      'ListBox
                    myCaseFormField = myWIField.Value
                    Set WFMCALFieldList = myWIField.Info.ValueList
                    myCaseFormField.AddItem " "
                    For Each WFMCALFieldListValue In WFMCALFieldList
                      myCaseFormField.AddItem WFMCALFieldListValue
                    Next
                    
                Case Else ' some other menu
                MsgBox "WFM Field type unknown " & myCaseFormField.name
            
            End Select
       
        End If
        
    Next
End Sub


Function editWFVarStringList(sTargetWFVarName As String, colOldRowValues As Collection, colNewRowValues As Collection)

'leave colOldRowValues empty to add
'leave colNewRowValues empty to remove
'fill both colNewRowValues and colOldRowValues to update

Dim vMatrix As Variant
Dim lRowIndex As Long
Dim sOldRowValues As String
Dim sNewRowValues As String
Dim lTeller As Long
Dim colTempList As New Collection
Dim vNewWFVarStringList() As Variant
Dim bAddValue As Boolean
Dim bRemoveValue As Boolean

    If colOldRowValues.Count = 0 Then bAddValue = True
    If colNewRowValues.Count = 0 Then bRemoveValue = True
        
    vMatrix = getWFVarStringList(sTargetWFVarName)
        
    'set oldRowValues in String
    For lTeller = 1 To colOldRowValues.Count
        If lTeller = 1 Then
            sOldRowValues = colOldRowValues(lTeller)
        Else
            sOldRowValues = sOldRowValues & ";" & colOldRowValues(lTeller)
        End If
    Next
    'set newRowValues in String
    For lTeller = 1 To colNewRowValues.Count
        If lTeller = 1 Then
            sNewRowValues = colNewRowValues(lTeller)
        Else
            sNewRowValues = sNewRowValues & ";" & colNewRowValues(lTeller)
        End If
    Next
    
    If bAddValue Then
        For lRowIndex = LBound(vMatrix) To UBound(vMatrix)
            colTempList.Add vMatrix(lRowIndex)
        Next
        colTempList.Add sNewRowValues
    
    ElseIf bRemoveValue Then
        For lRowIndex = LBound(vMatrix) To UBound(vMatrix)
            
            If sOldRowValues = vMatrix(lRowIndex) Then
                'skip
            Else
                colTempList.Add vMatrix(lRowIndex)
            End If
        Next
    
    Else 'update
        For lRowIndex = LBound(vMatrix) To UBound(vMatrix)
            'set NewRowValues over OldRowValues
            If sOldRowValues = vMatrix(lRowIndex) Then
                colTempList.Add sNewRowValues
            Else
                colTempList.Add vMatrix(lRowIndex)
            End If
        Next
    End If
    
    'converting collection to variant (start index not 1 but 0)
    ReDim vNewWFVarStringList(colTempList.Count - 1)
    
    For lTeller = 1 To colTempList.Count
        vNewWFVarStringList(lTeller - 1) = colTempList.item(lTeller)
    Next lTeller
    
    'store WFVarStringList
    Eastman.setWFVarStringList sTargetWFVarName, vNewWFVarStringList
End Function

'ESCalSubs
Public Function getWFVarStringList(VarName As String, Optional username)
Dim WFVars As CALWorkflowVariables
Dim WFVar As CALWorkflowVariable
Dim WFVarValue As CALWorkflowVariableValue

If Not IsMissing(username) Then
    Set WFVars = Me.Client.WorkflowVariables(VarName, calWorkflowVariableCategoryUser, username)
  Else
    Set WFVars = Me.Client.WorkflowVariables(VarName, calWorkflowVariableCategoryRoute)
End If

Set WFVar = WFVars.item(1)
Set WFVarValue = WFVar.Value

getWFVarStringList = WFVarValue.Value

End Function

Public Function getWFVarString(VarName As String, Optional username)
Dim WFVars As CALWorkflowVariables
Dim WFVar As CALWorkflowVariable
Dim WFVarValue As CALWorkflowVariableValue

If Not IsMissing(username) Then
    Set WFVars = Me.Client.WorkflowVariables(VarName, calWorkflowVariableCategoryUser, username)
  Else
    Set WFVars = Me.Client.WorkflowVariables(VarName, calWorkflowVariableCategoryRoute)
End If

Set WFVar = WFVars.item(1)
Set WFVarValue = WFVar.Value

getWFVarString = WFVarValue.Value

End Function


'ESCalSubs
Public Function saveImportFromWIToFile(oClientListItem As CALClientListItem, sImportClassName As String) As String
 
 On Error GoTo EH
    
    Dim oDoc As CALDocument
    Dim oDocImport As CALDocumentImport
    Dim oDocImports As CALDocumentImports
    Dim lResult As Long
    Dim sFSPath As String

    Set oDoc = oClientListItem.OpenedItem
    Set oDocImports = oDoc.Imports
    
    If oDocImports.Count = 0 Then
        Exit Function
    End If
        
     For Each oDocImport In oDocImports 'imports found -> search for xml data
        If oDocImport.Class = "XMLDATA" Then
            ' Save the document to the users temp-dir.
            sFSPath = getTemporaryFilename()
            If Dir$(sFSPath) <> "" Then Kill sFSPath
    
            ' Save the document to the temporary file
            oDocImport.Extract sFSPath
            
            saveImportFromWIToFile = sFSPath
            Exit Function
        End If
    Next oDocImport
      
Exit Function
EH:
    MsgBox "saveImportFromWIToFile" & Err.Number & " " & Err.Description
End Function

'ESCalSubsx
Public Function saveFileAsImportInWI(oClientListItem As CALClientListItem, sImportClassName As String, sNewImportName As String, sPath As String, bCloseDoc As Boolean) As Boolean

Dim myDocImport As CALDocumentImport
Dim myImport As CALImport
Dim myDocImports As CALDocumentImports
Dim myWorkitemInfo As CALWorkitemInfo
Dim myCLImportDoc As CALClientListItem
Dim myDoc As CALDocument

On Error GoTo EH

    Set myDoc = oClientListItem.OpenedItem
    Set myDocImports = myDoc.Imports
   
    If myDocImports.Count = 0 Then
        Call myDoc.Imports.Add(1, sNewImportName, sImportClassName, sPath) 'add new
        If bCloseDoc Then
        myDoc.Save
        myDoc.Close calCloseSaveChanges
        End If
        Exit Function
    End If
    
    For Each myDocImport In myDocImports 'sImportClassName zoeken en vervangen
        If myDocImport.Class = sImportClassName Then
            Call myDoc.Imports.Remove(myDocImport) 'remove old
            Call myDoc.Imports.Add(1, sNewImportName, sImportClassName, sPath) 'add new
            myDoc.Save
            If bCloseDoc Then myDoc.Close calCloseSaveChanges
            Exit Function
        End If
    Next myDocImport
    
    'WorkItem heeft import file maar geen sImportClassName --> toevoegen sImportClassName
    Set myWorkitemInfo = Application.CALClient.CreateImport(sNewImportName, sImportClassName, sPath)
    Set myCLImportDoc = Application.CALClient.ClientList.Add(myWorkitemInfo.objId, 0)
    Set myImport = myCLImportDoc.Open(calOpenTryReadWrite Or calOpenArchive)
    
    Call myDoc.Add(myImport.Info.objId, calChildLast)
    
    myImport.Close calCloseSaveChanges
    Application.CALClient.ClientList.Remove myCLImportDoc
    
    myDoc.Save
    If bCloseDoc Then myDoc.Close calCloseSaveChanges

Exit Function

EH:
    Call MsgBox("saveFileAsImportInWI" & Err.Description, vbCritical + vbOKOnly, Err.Number)

End Function


Public Function existWorkset(WorksetName) As Boolean
Dim myQueues As CALQueues
Dim myWorkSet As CALQueue

For Each myWorkSet In Me.Client.Queues(calQueueListWorkset)
    If myWorkSet.name = WorksetName Then
        existWorkset = True
        Exit Function
    End If
Next

End Function


Public Sub setWFVarString(VarName, VarValue, Optional username)
Dim WFVars As CALWorkflowVariables
Dim WFVar As CALWorkflowVariable
Dim WFVarValue As CALWorkflowVariableValue
Dim sVarName, sUserName, sVarValue As String

sVarName = VarName
sUserName = username
sVarValue = VarValue

'Set WFVars = Me.Client.WorkflowVariables(sVarName, calWorkflowVariableCategoryUser, sUserName)
If Not IsMissing(username) Then
    Set WFVars = Me.Client.WorkflowVariables(sVarName, calWorkflowVariableCategoryUser, sUserName)
  Else
    Set WFVars = Me.Client.WorkflowVariables(sVarName, calWorkflowVariableCategoryRoute)
End If

Set WFVar = WFVars.item(1)
Set WFVarValue = WFVar.Value

WFVarValue.Value = sVarValue

'Me.Client.SetWorkflowVariable sVarName, calWorkflowVariableCategoryUser, WFVarValue, sUserName
If Not IsMissing(username) Then
   Me.Client.SetWorkflowVariable sVarName, calWorkflowVariableCategoryUser, WFVarValue, sUserName
  Else
    Me.Client.SetWorkflowVariable sVarName, calWorkflowVariableCategoryRoute, WFVarValue
End If


End Sub

Public Sub setWFVarStringList(VarName, StringList, Optional username)
'WFM llo added
Dim WFVars As CALWorkflowVariables
Dim WFVar As CALWorkflowVariable
Dim WFVarValue As CALWorkflowVariableValue

    If Not IsMissing(username) Then
        Set WFVars = Me.Client.WorkflowVariables(VarName, calWorkflowVariableCategoryUser, username)
      Else
        Set WFVars = Me.Client.WorkflowVariables(VarName, calWorkflowVariableCategoryRoute, username)
    End If

    Set WFVar = WFVars.item(1)
    Set WFVarValue = WFVar.Value

    'Clear values
    If Not IsEmpty(WFVarValue.Value) Then
        WFVarValue.Clear
        WFVarValue.Type = calWorkflowVariableTypeStringList
    End If
    
    If StringList(0) <> "" Then
        WFVarValue.Value = StringList
        'Me.Client.SetWorkflowVariable VarName, calWorkflowVariableCategoryUser, WFVarValue, UserName
        If Not IsMissing(username) Then
           Me.Client.SetWorkflowVariable VarName, calWorkflowVariableCategoryUser, WFVarValue, username
          Else
            Me.Client.SetWorkflowVariable VarName, calWorkflowVariableCategoryRoute, WFVarValue
        End If
    End If

End Sub

Public Sub clearWFStringList(VarName, username)
Dim WFVars As CALWorkflowVariables
Dim WFVar As CALWorkflowVariable
Dim WFVarValue As CALWorkflowVariableValue

    Set WFVars = Me.Client.WorkflowVariables(VarName, calWorkflowVariableCategoryUser, username)
    Set WFVar = WFVars.item(1)
    Set WFVarValue = WFVar.Value
    
    'Clear values
    If Not IsEmpty(WFVarValue.Value) Then
        WFVarValue.Clear
        WFVarValue.Type = calWorkflowVariableTypeStringList
    End If

    Me.Client.SetWorkflowVariable VarName, calWorkflowVariableCategoryUser, WFVarValue, username

End Sub

Public Function WriteAcces(classname) As Boolean
    If getAccessForWIClass(classname) = calAccessWrite Then
        WriteAcces = True
     Else
        WriteAcces = False
    End If
End Function

Public Function ReadAcces(classname) As Boolean
    If getAccessForWIClass(classname) = calAccessRead Or getAccessForWIClass(classname) = calAccessWrite Then
        ReadAcces = True
     Else
        ReadAcces = False
    End If
End Function

Public Function getAccessForWIClass(classname) As AccessConstants
Dim sClass As String

sClass = classname
On Error Resume Next
    
    getAccessForWIClass = Me.Client.WorkitemClasses.Find(sClass).Access
    If Err <> 0 Then getAccessForWIClass = calAccessNone

End Function



Public Sub sendWorkItemByID(objId As CALObjID, Optional TargetWorkstepName)
Dim tmpClientListItem As CALClientListItem

    Set tmpClientListItem = ClientList.Find(objId)
    If tmpClientListItem Is Nothing Then Err.Raise 12345, , "Workitem not found by ObjID"

    Call sendWorkItem(tmpClientListItem, TargetWorkstepName)
    
End Sub

Public Sub sendWorkItem(ClientListItem As CALClientListItem, Optional TargetWorkstepName)
Dim myQueue             As New CALQueue

    If Not ClientListItem.OpenedItem Is Nothing Then
        ClientListItem.OpenedItem.Close calCloseSaveChanges
    End If
'   Send the document to this Workstep
    If IsMissing(TargetWorkstepName) Then
        ClientListItem.SendToDefault calSendDiscard
    Else
        myQueue.Client = Me.Client
        myQueue.name = TargetWorkstepName
        myQueue.Type = calQueueTypeWorkstep
        ClientListItem.Send myQueue, calSendDiscard
    End If
End Sub

Public Sub copyTiffs(SourceClientListItem As CALClientListItem, TargetDoc As CALDocument)
Dim item                As CALPage
Dim oPages              As CALPages
Dim lTeller             As Long

    If SourceClientListItem.OpenedItem.pages.Count <= 0 Then Exit Sub
    lTeller = 1
    For Each item In SourceClientListItem.OpenedItem.pages
        Call item.GetPage(pvTempDir & "~ESWMtemp.tif", calGetPageOverwriteExisting)
        Call TargetDoc.pages.SetPage(lTeller, item.name, pvTempDir & "~ESWMtemp.tif", calImageFileTypeTIFF)
        Call Kill(pvTempDir & "~ESWMtemp.tif")
        lTeller = lTeller + 1
    Next item
    Set item = Nothing
    Set oPages = Nothing
    TargetDoc.Save
End Sub

Private Sub CopyFormfieldsCHECK(FromWI As CALClientListItem, ToWI As CALClientListItem, Optional fieldName As String)
Dim FromField           As CALFormField
Dim ToField             As CALFormField
Dim myFieldName

    If Not fieldName = Empty Then
'       If a fieldname is specified then it should be there
        ToWI.OpenedItem.FormFields(calFieldsNoViews).Find(fieldName).Value = FromWI.OpenedItem.FormFields(0).Find(fieldName).Value
     Else
        For Each ToField In ToWI.OpenedItem.FormFields(calFieldsNoViews)
            myFieldName = ToField.Info.name
'           Look for a field with the same name
            Set FromField = FromWI.OpenedItem.FormFields(calFieldsNoViews).Find(myFieldName)
'           If found copy the value
            If Not FromField Is Nothing Then
                If Not FromField.Value = Empty Then ToField.Value = FromField.Value
            End If
        Next
    End If
End Sub

Public Sub copyFormFields(Source As CALFormFields, Dest As CALFormFields, Optional fieldName As String)
Dim SourceField As CALFormField
Dim DestField As CALFormField

    If Not fieldName = "" Then 'Copy the one field, en error occurs when it does not exist
       Dest.Find(fieldName).Value = Source.Find(fieldName).Value
     Else
        For Each DestField In Dest 'Copy allfields whith the same name in the Destignation
            Set SourceField = Source.Find(DestField.Info.name)                    'Find fieldnam
            If Not SourceField Is Nothing Then DestField.Value = SourceField.Value    'if found copy the value
        Next
    End If

End Sub

Public Function GetFormFieldValue(FolderDocument As Object, FormFieldName) As Variant
Dim myFormField As CALFormField
Dim sFormField As String

sFormField = FormFieldName

Set myFormField = FolderDocument.FormFields(calFieldsNoViews).Find(sFormField)
If myFormField Is Nothing Then
    Err.Raise 5556, , "GetFormFieldValue: '" & FormFieldName & "' niet gevonden "
    Exit Function
  End If

GetFormFieldValue = myFormField.Value

End Function

Public Sub setFormField(FolderDocument As Object, FormFieldName, NewValue)
Dim myFormField As CALFormField
Dim sFormField As String

sFormField = FormFieldName

Set myFormField = FolderDocument.FormFields(calFieldsNoViews).Find(sFormField)
If myFormField Is Nothing Then
    Err.Raise 5555, , "SetFormField: '" & FormFieldName & "' niet gevonden "
    Exit Sub
  End If

If myFormField.Info.Length < Len(NewValue) Then
    Err.Raise 5556, , "SetFormField: '" & FormFieldName & "' te klein "
    Exit Sub
  End If

myFormField.Value = NewValue

If Not myFormField.Value = NewValue Then
    Err.Raise 5557, , "SetFormField: '" & FormFieldName & "' Wijzigen mislukt! "
  End If

End Sub


Attribute VB_Name = "PageViewers"
Attribute VB_Base = "0{8353EB4D-8F1A-11D3-8049-00A024E9EEA6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub PageViewerEvents_AfterOpen(ByVal objPageViewer As WFDWorkitem.PageViewer)
    On Error GoTo EH
    InitPageMenu objPageViewer
    Exit Sub

EH:
    DisplayError "PageViewer_AfterOpen"
End Sub

Private Sub PageViewerEvents_CommandBarClicked(ByVal objPageViewer As WFDWorkitem.PageViewer, ByVal CommandBarControl As WFDCommon.WDOCommandBarControl, blnCancel As Boolean)
Dim Menu                As Variant

    On Error GoTo EH
    Select Case CommandBarControl.name
        Case Is = "About"
             AEAbout.Show 1
             blnCancel = True
        Case Else
             For Each Menu In PageSecList
                If CommandBarControl.name = Menu Then blnCancel = True
             Next
    End Select
    Exit Sub

EH:
    DisplayError "PageViewer Command"
End Sub
Attribute VB_Name = "PrintPage"
Attribute VB_Base = "0{DABB367D-D348-4508-A13A-F9DBFADB4FC8}{A77D6D2C-12DC-4EB3-9011-036702C0C16F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "Printing401"
Option Explicit

Public Sub PrintNoteofAll(myViewer As WorkitemViewer)
    On Error GoTo EH
    If myViewer.ActiveTab.TabType = wdoWorkitemTabNotes Then
        If myViewer.Notes.Selected > 0 Then
            PrintNote myViewer.CALClientListItem.OpenedItem.Notes.item(myViewer.Notes.Selected), myViewer.CALClientListItem.OpenedItem
        Else
            MsgBox "Selecteer eerst de te printen notitie.", vbApplicationModal + vbInformation + vbOKOnly, "Print"
        End If
    Else
        If myViewer.Contents.Count = 0 Then
            MsgBox "Geen documenten gevonden.", vbApplicationModal + vbInformation + vbOKOnly, "Print"
        Else
            PrintAll myViewer.CALClientListItem
        End If
    End If
    Exit Sub

EH:
    DisplayError "PrintNoteofAll"
    Resume Next
End Sub

Public Sub PrintAll(item As CALClientListItem)
Dim doc                 As CALDocument
Dim folder              As CALFolder
Dim DocImport           As CALDocumentImport
Dim Import              As CALImport
Dim Child               As CALFolderChild
Dim ChildItem           As CALClientListItem
Dim oPages              As CALPages
Dim oPage               As CALPage
Dim myObject            As Object
Dim TmpFile             As String
Dim iPage               As Integer

    On Error GoTo EH
    PrintPage.MousePointer = fmMousePointerHourGlass
    DoEvents
    Select Case item.Info.Type
    Case Is = calObjTypeDocument
         Set doc = item.OpenedItem
         PrintNotes doc
'        Print pages indien aanwezig
         Set oPages = doc.pages
         If oPages.Count > 0 Then
            iPage = 0
            For Each oPage In oPages
                iPage = iPage + 1
                TmpFile = pvTempDir & "Pag" & Right("000" & CStr(iPage), 3) & ".tif"
                oPage.GetPage TmpFile, calGetPageOverwriteExisting
                PrintPage.ImgEdit1.Image = TmpFile
                PrintPage.ImgEdit1.PrintImage , , 3     'Best Fit
            Next
            Kill pvTempDir & "Pag*.tif"
         End If
         Set oPages = Nothing
'        Print de eventuele Imports in het document
         For Each DocImport In doc.Imports
            DoEvents
            Call PrintImport(DocImport, DocImport.name)
         Next
    Case Is = calObjTypeImport
         Set Import = item.OpenedItem
         Call PrintImport(Import, Import.Info.name)
    Case Is = calObjTypeFolder
         Set folder = item.OpenedItem
         PrintNotes folder
         For Each Child In folder.Children.AllItems
            DoEvents
            Set ChildItem = CALClient.ClientList.Find(Child.Info.objId)
            If ChildItem Is Nothing Then
                Set ChildItem = Application.CALClient.ClientList.Add(Child.Info.objId, calAddDomainOnly)
            End If
            If (ChildItem.Info.Status And calObjStatusOpen) = calObjStatusOpen Then
                ChildItem.OpenedItem.Close calCloseAbortChanges
            End If
            Set myObject = ChildItem.Open(calOpenReadOnly)
            Call PrintAll(ChildItem)
            myObject.Close calOpenReadOnly
            Application.CALClient.ClientList.Remove ChildItem
         Next
    End Select
    PrintPage.MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    DisplayError "PrintAll"
    Resume Next
End Sub

Sub PrintImport(Import As Object, name As String)
Static Nr               As Integer
Dim ImportClass         As CALImportClass
Dim lngShell            As Long
Dim ext, TmpFile        As String

    On Error GoTo EH
    If Nr = Empty Or Nr > 99 Then Nr = 0
    Nr = Nr + 1
    Set ImportClass = CALClient.ImportClasses.Find(Import.Class)
    If ImportClass.PrintASCII Then
        ext = "txt"
    Else
        ext = Trim(ImportClass.FileNameExtension)
    End If
    TmpFile = pvTempDir + "~ESWM " + Trim(name) + " " + Trim(Str(Nr)) + "." + ext
'   verwijder oude voor alle zekerheid
    Kill TmpFile
    Import.Extract TmpFile
    lngShell = ShellExecute(0, "Print", TmpFile, "", "", 6)
    Exit Sub

EH:
    If Err.Number = 53 Then Resume Next ' file not found
    DisplayError "PrintImport"
    Resume Next
End Sub

Private Sub PrintNotes(WorkItem As Object)
Dim Note                As CALNote

    On Error GoTo EH
    For Each Note In WorkItem.Notes
        DoEvents
        PrintNote Note, WorkItem
    Next
    Exit Sub

EH:
    DisplayError "PrintNotes"
    Resume Next
End Sub

Public Sub PrintNote(Note As CALNote, WorkItem As Object)
Static Nr               As Integer
Dim fs, f               As Object
Dim lngShell            As Long
Dim TmpFile             As String

    On Error GoTo EH
    If Nr = Empty Or Nr > 99 Then Nr = 0
    Nr = Nr + 1
    Set fs = CreateObject("Scripting.FileSystemObject")
    TmpFile = pvTempDir + "~ESWM " + Note.name + Trim(Str(Nr)) + ".txt"
    fs.DeleteFile TmpFile, True
    Set f = fs.CreateTextFile(TmpFile, True)
    f.WriteLine (" ")
    f.WriteLine (" ")
    If WorkItem.Info.Type = calObjTypeDocument Then
        f.WriteLine ("DOCUMENT: " + WorkItem.Info.name)
    Else
        f.WriteLine ("FOLDER: " + WorkItem.Info.name)
    End If
    f.WriteLine (" ")
    f.WriteLine ("Auteur:" + Note.Author + "   " + "Notitie: " + Note.name)
    f.WriteLine (" ")
    f.WriteLine (" ")
    f.WriteLine (Note.Text)
    f.Close
    lngShell = ShellExecute(0, "Print", TmpFile, "", "", 6)
    Exit Sub

EH:
    If Err.Number = 53 Then Resume Next     'File not found
    DisplayError "PrintNotes"
    Resume Next
End Sub
Attribute VB_Name = "RTWorkdeskOutlook"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'Outlook variables
Private myFolders       As Outlook.Folders
Private myFolder        As Outlook.MAPIFolder
Private myMessage       As Outlook.MailItem
Private myMailItem      As Object
'Outlook folder variables
Private myDraftsBox     As Outlook.MAPIFolder
Private myInbox         As Outlook.MAPIFolder
Private mySentItemsBox  As Outlook.MAPIFolder
Private myGroup1        As Outlook.MAPIFolder
Private myGroup2        As Outlook.MAPIFolder
Private myGroups()      As Outlook.MAPIFolder
Private myGroupInbox    As Outlook.MAPIFolder
Private GMItem          As Outlook.MAPIFolder
Private mcolViewerEMail As New Collection
Private maViewerEmail(0, 2) As Variant
Const cWfmStatus = "WFM status"
Const cWfmDossier = "WFM dossier"
Const cWfmUser = "WFM gebruiker"
Const cWfmID = "WFM ID"
Const cWfmDLN = "WFM Deelnemernr"
Const SendWaitTime = 5 ' Wait for 5 seconds to decide if mail could not be send

Function Add2Email(ByVal Viewer As WorkitemViewer) As MailItem
'Outlook Emailberichten importeren
'Declaraties
Dim objItem             As Outlook.MailItem
Dim ObjEmail            As Outlook.MailItem
Dim myOutlook           As Outlook.Application
Dim strBody             As String
Dim strSubject          As String
Dim myProperty          As UserProperty
Dim xLink               As Integer
Dim r                   As Integer
Dim WFMID               As String
Dim DLNnr               As String
Dim OutlookOpen         As Boolean
Dim result              As VbMsgBoxResult

    On Error Resume Next
    OutlookOpen = False
    Set myOutlook = CreateObject("Outlook.Application")
    Set ObjEmail = myOutlook.ActiveInspector.CurrentItem
'   Login indien nodig
    Call Login
'   DetectOutlook OutlookOpen
'   Bekijk of er nog een email behorende bij dit dossier in de drafts box staat
'   Zo ja, dan wordt eerst een waarschuwing gegegeven.
'   TD86066 20070702 JAG als send = true copieer zaakkenmerk
    If Not (ObjEmail.Sent) Then
        If (Len(Trim(ObjEmail.Subject)) > 0) Then
            strSubject = ObjEmail.Subject & " - " & CALGetFieldValue(Viewer.CALClientListItem.OpenedItem, "ZAAK_IDENT_NR")
        Else
            strSubject = CALGetFieldValue(Viewer.CALClientListItem.OpenedItem, "ZAAK_IDENT_NR")
        End If
        ObjEmail.Subject = strSubject
'       Body tekst
        strBody = "Dossier    : " + CALGetFieldValue(Viewer.CALClientListItem.OpenedItem, "ZAAK_IDENT_NR") + Chr(13)
        strBody = strBody + "Klant      : " + CALGetFieldValue(Viewer.CALClientListItem.OpenedItem, "NAAM_KLANT") + Chr(13)
        strBody = strBody + "Deelnemer  : " + CALGetFieldValue(Viewer.CALClientListItem.OpenedItem, "NAAM_DLNMR") + Chr(13)
        strBody = strBody + "Polisnummer: " + DLNnr + Chr(13) + " " ' let op! De spaties(" ") in deze en de volgende regel zijn niet overbodig
        ObjEmail.Body = strBody + " " + vbNewLine + ObjEmail.Body  'TD86066 20070702 JAG
'       Save en display item
        objItem.Save
        objItem.Display
    Else
        result = MsgBox("U kunt zaakkenmerken alleen aan een Reply, Forward of nieuw bericht toevoegen." & vbLf & "Toevoegen niet mogelijk", vbExclamation)
    End If
'   Voor later gebruik, koppel mailitem aan viewer
End Function

Public Function NameSpace() As Outlook.NameSpace
    Set NameSpace = myNameSpace
End Function

Public Sub Logout()
    On Error Resume Next
    If myNameSpace Is Nothing Then Exit Sub
    myNameSpace.LogOff
    Set myDraftsBox = Nothing
    Set myInbox = Nothing
    Set mySentItemsBox = Nothing
    Set myNameSpace = Nothing
    Set myOutlook = Nothing
End Sub

Public Function MailBoxExist() As Boolean
'   This routine is useful to check if you have a valid login
    MailBoxExist = False
    On Error Resume Next 'This function only returns true if the folder was found
    Set myFolders = myNameSpace.Folders 'Get access to the outlook folders
'   Loop through the toplevel
    For Each myFolder In myFolders
'   [PAC] - TD169077 Start
    If UCase(Left(myFolder.name, 4)) = "MAIL" Or UCase(Left(myFolder.name, 7)) = "POSTBUS" Or _
       UCase(Left(myFolder.name, 6)) = "PUBLIC" Or UCase(Left(myFolder.name, 8)) = "OPENBARE" Then
'      [PAC] - TD169077 End
        MailBoxExist = True                    ' Signal to the caller if was found
        Exit For
    End If
    Next
    Set myFolders = Nothing
    Set myFolder = Nothing
End Function

Public Function FindMailFolder(FolderName, folder As Outlook.MAPIFolder) As Boolean
' To be able to access a folder you have to loop trough all the folders from the top level
' until you find the folder with the richt name!
' This routine searches at the highest level to find the mailbox folder (this is currently used to send mail to)
' When found it loops through this level to find the right name. So no subfolders will be found!
Dim MailboxFolder       As Outlook.MAPIFolder  'Temp pointer to the toplevel mailbox folder

    FindMailFolder = False
    Set folder = Nothing
    On Error Resume Next 'This function only returns true if the folder was found
    Set myFolders = myNameSpace.Folders 'Get access to the outlook folders
'   Loop through the toplevel
    For Each myFolder In myFolders
        If Mid(myFolder.name, 1, 4) = "Mail" Or Mid(myFolder.name, 1, 7) = "Postbus" Then
            Set MailboxFolder = myFolder             ' Mailbox found
            Exit For
        End If
    Next
'   Loop through the mailbox folder
    Set myFolders = MailboxFolder.Folders
    For Each myFolder In myFolders
        If myFolder.name = FolderName Then
            Set folder = myFolder                    ' Folder found
            FindMailFolder = True                    ' Signal to the caller if was found
            Exit For
        End If
    Next
    Set myFolders = Nothing
    Set myFolder = Nothing
    Set MailboxFolder = Nothing
End Function

Private Sub CleanRecipients(Email As Outlook.MailItem)
Dim i

'   Clean the Recipients list
    With myMessage.Recipients
        If .Count > 0 Then
            For i = 1 To .Count
                .Remove 1
            Next i
        End If
    End With
End Sub

Public Function NewMsg() As Object
    On Error Resume Next
    Set NewMsg = myNameSpace.Application.CreateItem(olMailItem)
End Function

Public Function AttachFile(Message As Outlook.MailItem, File, FileName)
    On Error GoTo EH
    With Message.Attachments.Add(File)
        .DisplayName = FileName
    End With

EH:
    If Err Then
        DisplayError FileName
        Resume Next
    End If
End Function

Public Function AddRecipient(Message As Outlook.MailItem, Recipient)
    On Error Resume Next
    With Message.Recipients.Add(Recipient)
        .Type = olTo
'       We valid adres could be useful if we want to be sure
        If Not .Resolve Then
            Err.Raise 4353, , Recipient & " not found in address book"
            Exit Function
        End If
    End With
End Function

Public Function Login() As Boolean
Dim sOutlookPath            As String
Dim i                       As Integer
Dim lngUpper                As Long
Dim oFSO                    As New Scripting.FileSystemObject

'   ClearErr
    Login = False
    If Not myNameSpace Is Nothing Then Login = True: Exit Function
    On Error Resume Next
    Set myOutlook = New Outlook.Application  'Connect to Outlook
    On Error Resume Next

    Set myOutlook = GetObject(Class:="Outlook.Application")

    If Err.Number = 429 Then
        sOutlookPath = (gcOFFICEROOT & gcPROGDIR2013 & gcOUTLOOKPROG)
        If Not oFSO.FileExists(sOutlookPath) Then
            sOutlookPath = (gcOFFICEROOT & gcPROGDIR2010 & gcOUTLOOKPROG)
        End If

        Shell sOutlookPath, vbMinimizedNoFocus
      Set myOutlook = CreateObject("Outlook.Application")
    End If
    
    Set myNameSpace = myOutlook.GetNamespace("MAPI")
    Call myNameSpace.LogOn(, , False, True) 'Must become False,True in the final version
    DoEvents
'   controleer of outlook correct is opgestart
    If myNameSpace.CurrentUser.name = "Unknown" Then
        Err.Raise 12345, , "Outlook is niet correct gestart. Kan geen mailbox vinden! " + Chr(10) + Chr(13) + "Onbekende User in Name Space"
        Call DisplayError("RTOUTLOOK.Login")
        Logout
        Exit Function
    End If
'   controleer of outlook correct is opgestart
    If Not MailBoxExist Then
        Err.Raise 12345, , "Outlook is niet correct gestart. Kan geen mailbox vinden!  " + Chr(10) + Chr(13) + "Gebruiker is niet ingelogt! Mailbox bestaat niet..."
        Call DisplayError("RTOUTLOOK.Login")
        Logout
        Exit Function
    End If
    If Not myNameSpace Is Nothing Then
'       Used for new items
        Set myDraftsBox = myNameSpace.GetDefaultFolder(olFolderDrafts)
'       Used for saving incoming mail
        Set myInbox = myNameSpace.GetDefaultFolder(olFolderInbox)
'       Used for saving outgoing mail
        Set mySentItemsBox = myNameSpace.GetDefaultFolder(olFolderSentMail)
'       Mabr De groep erbij.
'       Set GMItem = myNameSpace.Application.Session.Folders.GetFirst
        For i = 1 To myNameSpace.Application.Session.Folders.Count
            Set GMItem = myNameSpace.Application.Session.Folders.item(i)
            If Not GMItem.name = "Mailbox - " + myNameSpace.CurrentUser Then
'               MaBr wat doen we ... bij PAC hebben ze er twee ff 1 en 2
                lngUpper = GetUpper(myGroups)
                ReDim Preserve myGroups(lngUpper)
                Set myGroups(lngUpper) = myNameSpace.Application.Session.Folders.item(i)
            End If
'           MaBr Waarom werkt dit nu weer niet meer goed???
'           Ik krijg opeens twee maal achter elkaar de public folders...
'           wat een gekl:(:(t  getfirst en getnext vervangen door Item(i)
        Next
    End If
    
    
End Function

Public Sub BuildTree(ByVal myTree As TreeView)
Dim colMapiFolders      As Outlook.Folders
Dim MapiFolders         As Outlook.MAPIFolder
Dim colFolders          As Outlook.Folders
Dim folder              As Outlook.MAPIFolder
Dim nodX                As Node
Dim strMapiFolder       As String
Dim strFolder           As String
Dim strFolderKey        As String
Dim strKey              As String

    On Error Resume Next
    Set nodX = myTree.Nodes.Add(, , "root", "Outlook: " + myNameSpace.CurrentUser, 2)
'   Walk the MAPI Folder tree
    Set colMapiFolders = myNameSpace.Folders
    For Each MapiFolders In colMapiFolders
        If MapiFolders.DefaultItemType = olMailItem Then
            strMapiFolder = MapiFolders.name
            Set nodX = myTree.Nodes.Add("root", tvwChild, strMapiFolder, strMapiFolder, 1)
'           Folders within mapifolders
            Set colFolders = MapiFolders.Folders
            For Each folder In colFolders
            Next
        End If
    Next
End Sub

Function EnumerateFolders(ByVal myTree As TreeView, objParentFolder As Object) As Integer
Dim colChildFolders     As Outlook.Folders
Dim ChildFolder         As Outlook.MAPIFolder
Dim strChildFolder      As String
Dim strChildFolderKey   As String
Dim strFolderKey        As String
Dim nodX                As Node

    Set colChildFolders = objParentFolder.Folders
    strFolderKey = objParentFolder.EntryID
    If colChildFolders.Count <> 0 Then
        For Each ChildFolder In colChildFolders
            strChildFolder = ChildFolder.name
            strChildFolderKey = ChildFolder.EntryID
            Set nodX = myTree.Nodes.Add(strFolderKey, tvwChild, strChildFolderKey, strChildFolder, 1)
'           MaBr recursief
            EnumerateFolders myTree, ChildFolder
        Next
    Else
        Set nodX = myTree.Nodes.Add(strFolderKey, tvwChild, , "[vernieuwen...]", 1)
    End If
End Function

Function EnumerateFoldersGM(ByVal myTree As TreeView, objParentFolder As Object) As Integer
' MaBr xtra function for GroupMail
' The only folder shown is the Inbox
' Other folders are obsolete
Dim colChildFolders     As Outlook.Folders
Dim ChildFolder         As Outlook.MAPIFolder
Dim strChildFolder      As String
Dim strChildFolderKey   As String
Dim strFolderKey        As String
Dim nodX                As Node

    Set colChildFolders = objParentFolder.Folders
    strFolderKey = objParentFolder.EntryID
    If colChildFolders.Count <> 0 Then
        For Each ChildFolder In colChildFolders
            strChildFolder = ChildFolder.name
            If strChildFolder = "Inbox" Then
                strChildFolderKey = ChildFolder.EntryID
                Set nodX = myTree.Nodes.Add(strFolderKey, tvwChild, strChildFolderKey, strChildFolder, 1)
'               MaBr niet recursief opbouwen gebruikers folders
                EnumerateFolders myTree, ChildFolder
            End If
        Next
    Else
        Set nodX = myTree.Nodes.Add(strFolderKey, tvwChild, , "[vernieuwen...]", 1)
    End If
End Function

Public Sub ExpandNode(ByVal Node As MSComctlLib.Node, ByVal myTree As TreeView, myList As ListView)
Dim NodeChild           As Node
Dim NodeFolder          As Outlook.MAPIFolder
Dim bRefresh            As Boolean

    On Error Resume Next
    myList.ListItems.Clear
    If Node.Key = "root" Then Exit Sub
'   Controleer eerst of mailitems al zijn ingelezen
    Set NodeChild = Node.Child
    If NodeChild = "[vernieuwen...]" Then
        myTree.Nodes.Remove NodeChild.Index
        bRefresh = True
    End If
    If Node.Tag = "" Then
        Set NodeFolder = myNameSpace.GetFolderFromID(Node.Key)
        SetFolderItems myTree, myList, NodeFolder
    End If

ext:
    Set NodeChild = Nothing
    Set NodeFolder = Nothing
End Sub

Public Sub SetFolderItems(ByVal myTree As TreeView, ByVal myList As ListView, objfolder As Object)
Dim item                As Object
Dim colItems            As Object
Dim strItem             As String
Dim strKey              As String
Dim strFolderKey        As String
Dim nodX                As Node
Dim listX               As ListItem
Dim strDossier, strStatus
Dim iIndex              As Integer

    On Error GoTo EH
    strFolderKey = objfolder.EntryID
    Set colItems = objfolder.Items
    If objfolder.DefaultItemType = olMailItem Then
        Select Case GetInOutDraftMapiFolder(objfolder)
            Case mySentItemsBox
                 colItems.Sort "[SentOn]", True
            Case myDraftsBox
                 colItems.Sort "[CreationTime]", False
            Case myInbox
                 colItems.Sort "[ReceivedTime]", True
        End Select
        myList.ListItems.Clear
        colItems.Count
        If colItems.Count > 0 Then
'[PAC]            For Each item In colItems
            For iIndex = 1 To colItems.Count
                Set item = colItems.item(iIndex)
                If item.Class = olMail Then
                    strStatus = ""
                    strDossier = ""
                    On Error Resume Next
                    strStatus = item.UserProperties.item(cWfmStatus).Value
                    strDossier = item.UserProperties.item(cWfmDossier).Value
                    On Error GoTo EH
'                   MaBr de volgende gaat fout bij de groeps/afdelingsmail bakjes
                    Select Case GetInOutDraftMapiFolder(objfolder)
                        Case Is = myInbox
                             strItem = Format(item.ReceivedTime, "dd-mm-yyyy hh:mm")
                             strItem = strItem + ", " + item.SenderName
                        Case Is = mySentItemsBox
                             strItem = Format(item.SentOn, "dd-mm-yyyy hh:mm")
                             strItem = strItem + ", " + item.To
                        Case Is = myDraftsBox
                             strItem = Format(item.CreationTime, "dd-mm-yyyy hh:mm")
                             strItem = strItem + ", " + item.To
                    End Select
'                   Mabr hij laat 2 maal hetzelfde zien
                    strItem = strStatus + ", " + strDossier + ", " + strItem & ", " & item.Subject
                    strKey = item.EntryID
                    Set listX = myList.ListItems.Add(, strKey, strItem)
                    listX.Tag = objfolder.StoreID
'                   MaBr bij een lange list annuleren ???
                End If
                Set item = Nothing
            Next
        End If
    End If

EH:
    If Err Then Resume Next
    Set nodX = Nothing
    Set item = Nothing
End Sub

Private Function GetInOutDraftMapiFolder(objfolder As Outlook.MAPIFolder) As Outlook.MAPIFolder
'   Doel van deze functie is het bepalen of de meegegeven folder
'   de inbox, outbox of draftfolder is of een subfolder van een van deze folders is.
'   Als het bijvoorbeeld de inbox is dan wordt de inbox mapifolder geretourneerd
'   Als het geen van alle is dan wordt de folder "MAPI" gertourneerd.
'   De functie loopt recursief de parents van de folder af totdat een van de drie
'   folders wordt tegengekomen of geen van alle en boven aan de tree is aangekomen.
'   In dat geval wordt de folder "MAPI" terugegeven.
    If objfolder = "MAPI" Or objfolder = myInbox Or objfolder = myDraftsBox Or objfolder = mySentItemsBox Then
        Set GetInOutDraftMapiFolder = objfolder
        Exit Function
    Else
        Set GetInOutDraftMapiFolder = GetInOutDraftMapiFolder(objfolder.Parent)
    End If
End Function

Public Sub DisplayNode(ByVal Node As MSComctlLib.Node)
Dim objItem             As Object

    If Node.Key = "root" Then Exit Sub
    If Node.Tag <> "" Then
        Set objItem = myNameSpace.GetItemFromID(Node.Key, Node.Tag)
    Else
        Set objItem = myNameSpace.GetFolderFromID(Node.Key)
    End If
    objItem.Display
    Set objItem = Nothing
End Sub

Public Sub DisplayListItem(ByVal ListItem As MSComctlLib.ListItem)
Dim objItem             As Object

    If ListItem.Tag <> "" Then
        Set objItem = myNameSpace.GetItemFromID(ListItem.Key, ListItem.Tag)
    Else
        Set objItem = myNameSpace.GetFolderFromID(ListItem.Key)
    End If
    objItem.Display
    Set objItem = Nothing
End Sub
Function LoWord(dw As Long) As Integer
    Static w As Integer
    CopyMemory w, dw, 2
    LoWord = w
End Function

Function CreateEmail(ByVal Viewer As WorkitemViewer) As MailItem
Dim objItem             As Outlook.MailItem
Dim strBody             As String
Dim strSubject          As String
Dim myProperty          As UserProperty
Dim xLink               As Integer
Dim r                   As Integer
Dim WFMID               As String
Dim DLNnr               As String
Dim OutlookOpen         As Boolean

    On Error Resume Next
    OutlookOpen = False
'   Login indien nodig
    Call Login
'   Bekijk of er nog een email behorende bij dit dossier in de drafts box staat
'   Zo ja, dan wordt eerst een waarschuwing gegegeven.
    Set objItem = GetMailItem(Viewer)
    If Not objItem Is Nothing Then
        objItem.Display
        xLink = GetViewerEmailLink(Viewer)
        r = MsgBox("U heeft voor dit dossier nog een incompleet mailitem in de drafts folder staan. Wilt U een nieuw mailitem aanmaken?", vbQuestion + vbYesNo + vbDefaultButton2)
        If r = vbNo Then
            GoTo ext
        Else
            DeleteViewerEmailLink (Viewer)
        End If
    End If
    Set objItem = Nothing
    Set objItem = NewMsg()
    If objItem Is Nothing Then GoTo ext
'   Userproperties
    WFMID = Viewer.id
    DLNnr = CALGetFieldValue(Viewer.CALClientListItem.OpenedItem, "NR_POLIS")
'   Subject tekst
    strSubject = CALGetFieldValue(Viewer.CALClientListItem.OpenedItem, "ZAAK_IDENT_NR")
    objItem.Subject = strSubject
'   Body tekst
    strBody = "Dossier    : " + CALGetFieldValue(Viewer.CALClientListItem.OpenedItem, "ZAAK_IDENT_NR") + Chr(13)
    strBody = strBody + "Klant      : " + CALGetFieldValue(Viewer.CALClientListItem.OpenedItem, "NAAM_KLANT") + Chr(13)
    strBody = strBody + "Deelnemer  : " + CALGetFieldValue(Viewer.CALClientListItem.OpenedItem, "NAAM_DLNMR") + Chr(13)
    strBody = strBody + "Polisnummer: " + DLNnr + Chr(13)
    objItem.Body = strBody
    SetEmailUserProperties objItem, Viewer.name, "Nieuw", WFMID, DLNnr
'   Save en display item
    objItem.Save
    objItem.Display
'   Voor later gebruik, koppel mailitem aan viewer
    SetViewerEmailLink Viewer, objItem

ext:
    Set CreateEmail = objItem
    Set objItem = Nothing
    Set myProperty = Nothing
End Function

Function GetJustSentItem(ByVal strTimeStamp As String) As Outlook.MailItem
Dim objItem             As Object
Dim objfolder           As Outlook.MAPIFolder
Dim strStoreId          As String

'   Login indien nodig
    Call Login
    Set objfolder = myNameSpace.GetDefaultFolder(olFolderSentMail)
    strStoreId = objfolder.StoreID
    For Each objItem In objfolder.Items
        If Right(objItem.Subject, 16) = strTimeStamp Then
            Set GetJustSentItem = objItem
            Exit For
        End If
    Next
    Set objItem = Nothing
    Set objfolder = Nothing
End Function

Function CreateEmail2(ByVal Viewer As WorkitemViewer) As MailItem
Dim objItem             As Outlook.MailItem
Dim strBody             As String
Dim strSubject          As String
Dim myProperty As UserProperty
Dim xLink               As Integer
Dim r                   As Integer

    On Error Resume Next
'   Login indien nodig
    Call Login
    Set objItem = NewMsg()
    If objItem Is Nothing Then GoTo ext
'   To tekst
    objItem.To = "SCP-archief@AEGON.NL" 'SCP Archief
'   From tekst. We willen namen de centrale mailbox zenden
    objItem.SentOnBehalfOfName = "SCP Pensioeningang"
'   Subject tekst
    strSubject = "Opvragen dossier [" & Format(Now, "yyyyMMddhhmmss") & "]"
    objItem.Subject = strSubject
'   Body tekst
    strBody = "Hallo collega," & vbCrLf & vbCrLf
    strBody = strBody & "Graag zouden wij het dossier met polisnummer " & CALGetFieldValue(Viewer.CALClientListItem.OpenedItem, "NR_POLIS") & _
              " willen opvragen." & vbCrLf & vbCrLf
    strBody = strBody & "Het dossier kan verzonden worden naar M / P / PIN. Graag een print van deze mail bij het dossier voegen." & vbCrLf
    strBody = strBody & vbCrLf
    strBody = strBody & "Alvast bedankt" & vbCrLf & vbCrLf
    strBody = strBody & "Groet," & vbCrLf
    strBody = strBody & "SCP Pensioeningang"
    objItem.Body = strBody
    SetEmailUserProperties objItem, Viewer.name, "Nieuw"
'   Save en display item
    objItem.Save
'   RiFr ik vang het af met een event

ext:
    Set CreateEmail2 = objItem
    Set objItem = Nothing
    Set myProperty = Nothing
End Function

Public Sub DeleteViewerEmailLink(ByVal Viewer As WorkitemViewer)
Dim x                   As Integer

    For x = mcolViewerEMail.Count To 1 Step -1
        If mcolViewerEMail.item(x)(0, 0).id = Viewer.id Then mcolViewerEMail.Remove (x)
    Next
End Sub

Public Function GetMailItem(ByVal Viewer As WorkitemViewer) As MailItem
Dim x                   As Integer

    On Error Resume Next
    x = golOutlook.GetViewerEmailLink(Viewer)
    If x > 0 Then
        Set GetMailItem = myNameSpace.GetItemFromID(mcolViewerEMail.item(x)(0, 1), myDraftsBox.StoreID)
        If Err Then DeleteViewerEmailLink Viewer
    End If
End Function

Public Function GetNodeMailItems(LstOutl As ListView) As Collection
Dim i                   As Integer
Dim myMailItems         As Collection

    Set myMailItems = New Collection
    For i = 1 To LstOutl.ListItems.Count
        If LstOutl.ListItems.item(i).Selected Then myMailItems.Add LstOutl.ListItems.item(i)
    Next i
    Set GetNodeMailItems = myMailItems
End Function

Public Function GetViewerEmailLink(ByVal Viewer As WorkitemViewer) As Integer
Dim x                   As Integer

    GetViewerEmailLink = 0
    For x = 1 To mcolViewerEMail.Count
        If mcolViewerEMail.item(x)(0, 0).id = Viewer.id Then
            GetViewerEmailLink = x
            Exit Function
        End If
    Next
End Function

Public Function GetNodeMailItem(Node As MSComctlLib.Node) As Outlook.MailItem
Dim objItem             As Object

    If Node.Tag <> "" Then Set GetNodeMailItem = myNameSpace.GetItemFromID(Node.Key, Node.Tag)
End Function

Public Function GetListMailItem(ListItem As MSComctlLib.ListItem) As Outlook.MailItem
Dim objItem             As Object

    If ListItem.Tag <> "" Then Set GetListMailItem = myNameSpace.GetItemFromID(ListItem.Key, ListItem.Tag)
End Function

Public Sub SetViewerEmailLink(ByVal Viewer As WorkitemViewer, objItem As Outlook.MailItem)
    On Error Resume Next
    Set maViewerEmail(0, 0) = Viewer
    maViewerEmail(0, 1) = objItem.EntryID
    maViewerEmail(0, 2) = objItem.CreationTime
    mcolViewerEMail.Add maViewerEmail
End Sub

Public Sub BuildTreeDefaultFolders(ByVal myTree As TreeView, bDraft As Boolean, bInbox As Boolean, bSent As Boolean)
Dim nodX                As Node
Dim nodY                As Node
Dim ff                  As Outlook.MAPIFolder
Dim Upper               As Long
Dim lngTel              As Long

    On Error Resume Next
    Set nodX = myTree.Nodes.Add(, , "root", "Outlook: " + myNameSpace.CurrentUser, 2)
    If bDraft Then
        Set nodY = myTree.Nodes.Add("root", tvwChild, myDraftsBox.EntryID, myDraftsBox.name, 1)
        EnumerateFolders myTree, myDraftsBox
        If nodY.Children = 0 Then
            myTree.Nodes.Add myDraftsBox.EntryID, tvwChild, "A", "[vernieuwen...]"
        End If
    End If
    If bInbox Then
        Set nodY = myTree.Nodes.Add("root", tvwChild, myInbox.EntryID, myInbox.name, 1)
        EnumerateFolders myTree, myInbox
        If nodY.Children = 0 Then
            myTree.Nodes.Add myInbox.EntryID, tvwChild, "B", "[vernieuwen...]"
        End If
    End If
    If bSent Then
        Set nodY = myTree.Nodes.Add("root", tvwChild, mySentItemsBox.EntryID, mySentItemsBox.name, 1)
        EnumerateFolders myTree, mySentItemsBox
        If nodY.Children = 0 Then
            myTree.Nodes.Add mySentItemsBox.EntryID, tvwChild, "C", "[vernieuwen...]"
        End If
    End If
'   New code RiFr
    If UBound(myGroups) > -1 Then
        For lngTel = LBound(myGroups) To UBound(myGroups)
            Set nodY = myTree.Nodes.Add("root", tvwChild, myGroups(lngTel).EntryID, myGroups(lngTel).name, 1)
'           De inbox enkel tonen
            EnumerateFoldersGM myTree, myGroups(lngTel)
            If nodY.Children = 0 Then myTree.Nodes.Add myGroups(lngTel).EntryID, tvwChild, "C", "[vernieuwen...]"
        Next
    End If
End Sub

Public Sub AttachAll(Viewer As WorkitemViewer, item As CALClientListItem, ObjEmail As Outlook.MailItem)
Dim doc                 As CALDocument
Dim folder              As CALFolder
Dim DocImport           As CALDocumentImport
Dim Import              As CALImport
Dim Child               As CALFolderChild
Dim ChildItem           As CALClientListItem
Dim oPages              As CALPages
Dim oPage               As CALPage
Dim myObject            As Object
Dim TmpFile             As String
Dim WIXMLData           As clsWIData
Dim txt                 As String
Dim iNbrPages           As Integer

    On Error GoTo EH
    Select Case item.Info.Type
        Case Is = calObjTypeDocument
             Set doc = item.OpenedItem
'            Export pages indien aanwezig
             Set oPages = doc.pages
             If oPages.Count > 0 Then
                TmpFile = pvTempDir + "~ESWM " + Trim(doc.Info.objId.InternalName) + ".tif"
                iNbrPages = 0
                For Each oPage In oPages
                    iNbrPages = iNbrPages + 1
                    oPage.GetPage TmpFile, calGetPageOverwriteExisting
                    golOutlook.AttachFile ObjEmail, TmpFile, "Pag." & Str(iNbrPages)        'was: Trim(doc.Info.name)
                    Kill TmpFile
                Next
             End If
             Set oPages = Nothing
'            Print de eventuele Imports in het document
             For Each DocImport In doc.Imports
                DoEvents
                Call AttachImport(DocImport, DocImport.name, ObjEmail)
             Next
        Case Is = calObjTypeImport
             Set Import = item.OpenedItem
             If Not Import.Class = "XMLDATA" Then Call AttachImport(Import, Import.Info.name, ObjEmail)
        Case Is = calObjTypeFolder
             Set folder = item.OpenedItem
'            Zet de folder op de client list
'            open de folder en
'            loop ieder item in de folder na door deze functie
'            per item weer aan te roepen.
             For Each Child In folder.Children.AllItems
                DoEvents
                Set ChildItem = CALClient.ClientList.Find(Child.Info.objId)
                If ChildItem Is Nothing Then
                    Set ChildItem = Application.CALClient.ClientList.Add(Child.Info.objId, calAddDomainOnly)
                End If
                If (ChildItem.Info.Status And calObjStatusOpen) <> calObjStatusOpen Then
                    If ChildItem.Info.Status = calObjStatusModSaved Then
'                       Na het openen van de zaak (formulier) is er een document aan toegevoegd
'                       Dit geeft een error
                        MsgBox "het document '" & ChildItem.Info.name & "' is later aan het formulier toegevoegd en kan nu niet aan het Emailbericht worden toegevoegd. Kies eerst in het formulier voor Doorsturen", vbCritical + vbMsgBoxSetForeground + vbOKOnly, "Documenten toevoegen aan een Email"
                        Application.CALClient.ClientList.Remove ChildItem
                    Else
                        Set myObject = ChildItem.Open(calOpenReadOnly)
                        If Not myObject.Class = "XMLDATA" Then
                            Call AttachAll(Viewer, ChildItem, ObjEmail)
                            myObject.Close calCloseAbortChanges
                            Application.CALClient.ClientList.Remove ChildItem
                        Else
                            myObject.Close calCloseAbortChanges
                            Application.CALClient.ClientList.Remove ChildItem
                            Set frmNotitie.rsViewer = Viewer
'                           ff global up gooien
                            NoteExit = True
                            frmNotitie.Show 1
                            txt = frmNotitie.txtNotitie.Text
                            Call AttachNotes(txt, ObjEmail)
                            Unload frmNotitie
                            NoteExit = False
                        End If
                    End If
                Else
                    Call AttachAll(Viewer, ChildItem, ObjEmail)
                End If
             Next
    End Select
    DoEvents

EH:
    If Err Then
        DisplayError "AttachAll"
        Resume Next
    End If
    Set ChildItem = Nothing
    Set myObject = Nothing
    Set folder = Nothing
    Set Import = Nothing
    Set doc = Nothing
    Set Child = Nothing
End Sub

Private Sub AttachImport(Import As Object, name As String, ObjEmail As Outlook.MailItem)
Dim ImportClass         As CALImportClass
Dim ext, TmpFile        As String
Dim WIXMLData           As clsWIData

    On Error GoTo EH
    Set ImportClass = CALClient.ImportClasses.Find(Import.Class)
    ext = Trim(ImportClass.FileNameExtension)
    TmpFile = pvTempDir + "~ESWM import." + ext
'   Verwijder voor alle zekerheid
    Kill TmpFile
'   MaBr notitie
    If Not Import.Class = "XMLDATA" Then
        Import.Extract TmpFile
        golOutlook.AttachFile ObjEmail, TmpFile, name
    End If
    Kill TmpFile

EH:
    If Err.Number = 53 Then Resume Next ' file not found
    If Err Then DisplayError "AttachImport"
    Set ImportClass = Nothing
End Sub

Public Sub AttachNotes(strTekst As String, ObjEmail As Outlook.MailItem)
Dim myPath              As String
Dim MyFile              As String
Dim fs                  As New Scripting.FileSystemObject
Dim ts                  As TextStream
Dim myFolder            As Scripting.folder
Dim myExt               As String

    On Error GoTo EH
    MyFile = pvTempDir + "ESWM_notes.txt"
    fs.DeleteFile MyFile, True
    Set ts = fs.CreateTextFile(MyFile)
    ts.Write (strTekst)
    ts.Close
    golOutlook.AttachFile ObjEmail, MyFile, "Notities"
    fs.DeleteFile MyFile, True

EH:
    If Err Then Resume Next
    Set fs = Nothing
End Sub

Public Sub AttachItem(Viewer As WorkitemViewer, ObjEmail As Outlook.MailItem)
Dim item                As Object
Dim ChildItem           As CALClientListItem
Dim myObject            As Object

    On Error GoTo EH
    Set item = Viewer.Contents.SelectedItems.item(1)
    Set ChildItem = Application.CALClient.ClientList.Add(item.CALObject.Info.objId, calAddDomainOnly)
    If ChildItem.Info.Status = calObjStatusModSaved Then
'       Na het openen van de zaak (formulier) is er een document aan toegevoegd
'       Dit geeft een error
        MsgBox "het document '" & ChildItem.Info.name & "' is later aan het formulier toegevoegd en kan nu niet aan het Emailbericht worden toegevoegd. Kies eerst in het formulier voor Doorsturen", vbCritical + vbMsgBoxSetForeground + vbOKOnly, "Documenten toevoegen aan een Email"
        Application.CALClient.ClientList.Remove ChildItem
    Else
        Set myObject = ChildItem.Open(calOpenReadOnly)
        Call AttachAll(Viewer, ChildItem, ObjEmail)
        myObject.Close calOpenReadOnly
        Application.CALClient.ClientList.Remove ChildItem
    End If

EH:
    If Err Then DisplayError "AttachItem"
    Set myObject = Nothing
    Set item = Nothing
    Set ChildItem = Nothing
End Sub
Public Function SelectDraftMailItem(ByVal objWorkitemViewer As WorkitemViewer) As Outlook.MailItem
    On Error Resume Next
    golOutlook.DeleteViewerEmailLink objWorkitemViewer
    frmOutlookTree.Caption = objWorkitemViewer.CALClientListItem.Info.name
    frmOutlookTree.cmdOK.Visible = True
    frmOutlookTree.ViewDraftsbox = True
    Set frmOutlookTree.WorkitemViewer = objWorkitemViewer
    frmOutlookTree.BuildTree
    frmOutlookTree.Show 1
    Set SelectDraftMailItem = frmOutlookTree.SelectedMailItem
    If Not SelectDraftMailItem Is Nothing Then golOutlook.SetViewerEmailLink objWorkitemViewer, SelectDraftMailItem
    Unload frmOutlookTree
End Function

Public Function SaveAttachments(MailItem As Object, myDoc As CALDocument) As Integer
Dim myAttachment        As Attachment
Dim ImportClass         As CALImportClass
Dim myPath              As String
Dim MyFile              As String
Dim fs                  As New Scripting.FileSystemObject
Dim myFolder            As Scripting.folder
Dim nSaved              As Integer
Dim x, lenext           As Integer
Dim myExt               As String
Dim intCount            As Integer
Dim objPages            As CALPages
Dim intTotalPages       As Integer
Dim Displaynaam         As String
Dim Procenttekens       As Integer
Dim Respons
Dim iIndex              As Integer

'[PAC] 13DEC13 - New variable definitions
Dim sInvalidChar
Dim sSrch                   As String
Dim iPos                    As Integer
Dim iCntr                   As Integer
'[PAC] 13DEC13 - END New variable definitions

    On Error GoTo EH
    nSaved = 0
    SaveAttachments = -1
    myPath = pvTempDir + "~ESWM " + Trim(myDoc.Info.objId.InternalName)
    If Not fs.FolderExists(myPath) Then
        Set myFolder = fs.CreateFolder(myPath)
        If myFolder Is Nothing Then
            Exit Function
        End If
    End If
    If MailItem.Attachments.Count > 0 Then
'[PAC]        For Each myAttachment In MailItem.Attachments
        For iIndex = 1 To MailItem.Attachments.Count
            Set myAttachment = MailItem.Attachments.item(iIndex)
            Displaynaam = myAttachment.DisplayName
            If myAttachment.Type <> olOLE Then
'               Bijlagen met in de naam een % teken worden niet opgeslagen
'               Het % teken vervangen door het woord "procent"
'[PAC] 13DEC13 - Replaced code
            sInvalidChar = Array("%", "*", "\", "/")
            iCntr = 0
            Do
                sSrch = sInvalidChar(iCntr)
                iPos = InStr(1, Displaynaam, sSrch, 1)
                If iPos > 0 Then
'[PAC] - TD169077   Displaynaam = Replace(myAttachment.DisplayName, sSrch, " ")
                    Displaynaam = Replace(Displaynaam, sSrch, " ")  '[PAC] - TD169077
                Else
                    iCntr = iCntr + 1
                End If
            Loop Until iCntr > 3

'                Procenttekens = InStr(1, Displaynaam, "%", 1)
'                If Procenttekens > 0 Then
'                    Displaynaam = Replace(myAttachment.FileName, "%", "procent")
'                    Respons = MsgBox("De filenaam '" & myAttachment.DisplayName & "' is aangepast in '" & Displaynaam & "'", vbInformation, _
'                    "Email incl bijlage(n) opslaan in WFM: % teken(s) in de bijlage(n) zijn niet toegestaan")
'                End If
'[PAC] 13DEC13 - Replaced code

                myExt = GetFileExtension(myAttachment.FileName)
'[PAC] 13DEC13                MyFile = myPath + "\" + myAttachment.DisplayName
                MyFile = myPath + "\" + myAttachment.FileName   '[PAC] 13DEC13
                If fs.FileExists(MyFile) Then
                    fs.DeleteFile MyFile, True
                End If

'[PAC] 08AUG14 - Geen TIFF document meer aanmaken
'                If UCase(myExt) = "TIF" Then
'                    myAttachment.SaveAsFile MyFile
'                    Set objPages = myDoc.pages
'                    intCount = 1
'                    On Error Resume Next
'                    While Err = 0
''[PAC] - TD169077       objPages.Add intTotalPages + 1, myAttachment.DisplayName & "_p" & intCount, MyFile, intCount
'                        objPages.Add intTotalPages + 1, Displaynaam & "_p" & intCount, MyFile, intCount '[PAC] - TD169077
'                        intCount = intCount + 1
'                        If Err <> 0 Then
'                            intCount = 1
'                        Else
'                            intTotalPages = intTotalPages + 1
'                        End If
'                    Wend
'                    On Error GoTo eh
'                    fs.DeleteFile MyFile, True
'                    nSaved = nSaved + 1
'                End If
'[PAC] 08AUG14 - EINDE Geen TIFF document meer aanmaken

                If UCase(myExt) = "TXT" Then
                    myAttachment.SaveAsFile MyFile
                    myDoc.Imports.Add calDocumentImportFirst, Displaynaam, "TXT", MyFile
                    nSaved = nSaved + 1
                End If

'[PAC] - TD169757 - Process Word files correctly
                If UCase(myExt) = "DOC" Or _
                   UCase(myExt) = "DOCX" Then
                   myAttachment.SaveAsFile MyFile
                    If UCase(myExt) = "DOC" Then
                        myDoc.Imports.Add calDocumentImportFirst, Displaynaam, "Word95", MyFile
                    Else
                        myDoc.Imports.Add calDocumentImportFirst, Displaynaam, "DOCX", MyFile
                    End If
                   nSaved = nSaved + 1
                End If
'[PAC] - TD169757 - END Process Word files correctly

'               Controleer als het geen tif is of de extensie
'               als importclass bekend is in Workflow
                If myExt <> "" And UCase(myExt) <> "TIF" And UCase(myExt) <> "TXT" _
                               And UCase(myExt) <> "DOC" And UCase(myExt) <> "DOCX" Then '[PAC] - TD169757
                    Set ImportClass = CALGetImportClass(myExt)
                    If Not ImportClass Is Nothing Then
                        myAttachment.SaveAsFile (MyFile)
                        myDoc.Imports.Add calDocumentImportFirst, Displaynaam, ImportClass.name, MyFile
                        nSaved = nSaved + 1
                    Else
'[W7]                        De volgende message wordt als hinderlijk ervaren, daarom nu commentaar.
'[W7]                        MsgBox "Uw Emailbericht bevat bijlagen die NIET afzonderlijk naast het Emailbericht opgeslagen konden worden", vbInformation + vbMsgBoxSetForeground + vbOKOnly
                    End If
                End If
            End If
            Set myAttachment = Nothing
        Next
    End If
    SaveAttachments = nSaved
    Set ImportClass = Nothing
    Set myFolder = Nothing
    Set myAttachment = Nothing
    Set fs = Nothing

EH:
    If Err Then
        If Err.Number = -1491058683 Then Resume Next       'Plaatje in text wordt als attachment gezien
        DisplayError "SaveAttachments"
        Resume Next
    End If
    fs.DeleteFolder myPath, True
End Function

Public Function SaveBody(MailItem As Object, myDoc As CALDocument, myDocname As String) As Boolean
' Emaibericht tijdelijk lokaal opslaan
' Elke import krijgt een eigen folder (ObjectID als naam) en in die folder een file met zijn "eigen" naam.
' A.d.v. de modified date kan je zien wanneer de import gestart is.
Dim ImportClass         As CALImportClass
Dim myPath              As String
Dim MyFile              As String
Dim fs                  As New Scripting.FileSystemObject
Dim myFolder            As Scripting.folder
Dim myExt               As String

    On Error GoTo EH
    SaveBody = False
    myPath = pvTempDir + "~ESWM_OPEN" + myDoc.Info.objId.InternalName
    If Not fs.FolderExists(myPath) Then
        Set myFolder = fs.CreateFolder(myPath)
        If myFolder Is Nothing Then
            Exit Function
        End If
    End If
    MyFile = myPath + "\" + myDocname + ".msg"
    MailItem.SaveAs MyFile, olMSG
'   Importeer lokaal opgeslagen Emailbericht
    myDoc.Imports.Add calDocumentImportFirst, myDoc.Info.name, "EMAIL_MSG", MyFile
    fs.DeleteFile MyFile, True 'verwijder lokaal opgeslagen Emailbericht
    SaveBody = True

EH:
    If Err Then
        DisplayError "SaveBody"
        Resume Next
    End If
    fs.DeleteFolder myPath, True
    Set ImportClass = Nothing
    Set myFolder = Nothing
    Set fs = Nothing
End Function

Public Function SaveEmailInWorkflow(Optional bSaveAttachments As Boolean = True, Optional Viewer As WorkitemViewer) As CALClientListItem
Dim ObjEmail            As Outlook.MailItem
Dim x                   As Integer
Dim myCLItem            As CALClientListItem
Dim myDoc               As CALDocument
Dim myDocFF             As CALFormFields
Dim myFldFF             As CALFormFields
Dim myDocname           As String
Dim frmOutlookFrm       As Object
Dim bWithAttachments    As Boolean
Dim i                   As Integer
Dim Response            As Integer
Dim AFDELING            As String
Dim myViewer            As WorkitemViewer
Dim MyUserProperty      As UserProperty
Dim MyUserPropWfmStatus As String
Dim MyUserPropWfmDossier    As String
Dim MyUserPropWfmUser   As String
Dim MyUserPropWfmID     As String
Dim MyUserPropWfmDLN    As String
Dim objClientListItem   As CALClientListItem
Dim newESWMObjId        As CALObjID

'   On Error GoTo eh
    Set SaveEmailInWorkflow = Nothing
'   Afdeling
    If Viewer Is Nothing Then
        frmAfdeling.cbAfdeling.list = plActieveProcessen
        frmAfdeling.cbAfdeling.AddItem "PPN"
        frmAfdeling.cbAfdeling.AddItem "MUT"
        frmAfdeling.Show 1
        If IsNull(frmAfdeling.cbAfdeling) Then Exit Function
        AFDELING = frmAfdeling.cbAfdeling
    End If
'   Emails selecteren
    If Not Viewer Is Nothing Then
        frmOutlookTree.Caption = "Selecteer |fffd||fffd|n of meerdere emails, om op te slaan in dossier: " & Viewer.CALClientListItem.Info.name
        Set frmOutlookTree.WorkitemViewer = Viewer
        frmOutlookTree.LstOutl.MultiSelect = True
    Else
        frmOutlookTree.Caption = "Selecteer een email."
        frmOutlookTree.LstOutl.MultiSelect = False
    End If
    frmOutlookTree.cmdOK.Visible = True
    frmOutlookTree.ViewInbox = True
    frmOutlookTree.ViewSentItemsbox = True
    Set frmOutlookTree.SelectedMailItem = Nothing
    Set frmOutlookTree.SelectedMailItems = Nothing
    frmOutlookTree.BuildTree
    frmOutlookTree.Show 1
    frmOutlookTree.Show 0
    frmOutlookTree.MousePointer = fmMousePointerHourGlass
    DoEvents
'   Geselecteerde Email verwerken
    If Not frmOutlookTree.SelectedMailItems Is Nothing Then
        For i = 1 To frmOutlookTree.SelectedMailItems.Count
            Set ObjEmail = GetListMailItem(frmOutlookTree.SelectedMailItems(i))
'           --------------Nieuwe code April2006 release, gekopieerd vanuit SaveOpenedEmail
'           Userproperties in het Emailbericht
'           Controleren of het Email bericht reeds eerder in WFM is opgeslagen
'[PAC]---------------------------------------------------------------------------------------------
'[PAC]          For Each MyUserProperty In ObjEmail.UserProperties
'[PAC]              If MyUserProperty.name = cWfmStatus Then MyUserPropWfmStatus = MyUserProperty.value
'[PAC]              If MyUserProperty.name = cWfmDossier Then MyUserPropWfmDossier = MyUserProperty.value
'[PAC]              If MyUserProperty.name = cWfmUser Then MyUserPropWfmUser = MyUserProperty.value
'[PAC]              If MyUserProperty.name = cWfmID Then MyUserPropWfmID = MyUserProperty.value
'[PAC]              If MyUserProperty.name = cWfmDLN Then MyUserPropWfmDLN = MyUserProperty.value
'[PAC]          Next
            On Error Resume Next
            Set MyUserProperty = ObjEmail.UserProperties.Find(cWfmStatus)
            If Not MyUserProperty Is Nothing Then
                MyUserPropWfmStatus = MyUserProperty.Value
            End If
            Set MyUserProperty = Nothing
            Set MyUserProperty = ObjEmail.UserProperties.Find(cWfmDossier)
            If Not MyUserProperty Is Nothing Then
                MyUserPropWfmDossier = MyUserProperty.Value
            End If
            Set MyUserProperty = Nothing
            Set MyUserProperty = ObjEmail.UserProperties.Find(cWfmUser)
            If Not MyUserProperty Is Nothing Then
                MyUserPropWfmUser = MyUserProperty.Value
            End If
            Set MyUserProperty = Nothing
            Set MyUserProperty = ObjEmail.UserProperties.Find(cWfmID)
            If Not MyUserProperty Is Nothing Then
                MyUserPropWfmID = MyUserProperty.Value
            End If
            Set MyUserProperty = Nothing
            Set MyUserProperty = ObjEmail.UserProperties.Find(cWfmDLN)
            If Not MyUserProperty Is Nothing Then
                MyUserPropWfmDLN = MyUserProperty.Value
            End If
            Set MyUserProperty = Nothing
'[PAC]---------------------------------------------------------------------------------------------
            If MyUserPropWfmStatus = "Opgeslagen" Then
                Response = MsgBox("Het Emailbericht is reeds eerder in WFM opgeslagen, wilt u doorgaan?", vbInformation + vbMsgBoxSetForeground + vbYesNo, "Email opslaan in WFM")
                If Response = vbNo Then GoTo EH     'Gebruiker koos Nee
            End If
'           WFM viewer vaststellen indien mogelijk
            If Viewer Is Nothing Then
'               Niet vanuit een geopende zaak gestart
                If MyUserPropWfmID <> "" Then
'                   Zoeken op ZaakID (Meegegeven vanuit het Emailtje) tussen de geopende zaken.
                    Set newESWMObjId = New CALObjID
                    newESWMObjId.InternalName = MyUserPropWfmID
                    Set objClientListItem = Application.CALClient.ClientList.Find(newESWMObjId)
                    Set myViewer = Application.Viewers.FindViewer(objClientListItem)
                    If myViewer Is Nothing Then
                        MsgBox "Het Emailbericht is vanuit een zaak aangemaakt, maar deze staat inmiddels niet meer in uw Workdesk open . Gebruik de knop Toevoegen?", vbInformation + vbMsgBoxSetForeground, "Email opslaan in WFM"
                    End If
                End If
            Else
'               Vanuit een geopende zaak gestart
                Set myViewer = Viewer
            End If
'           Filename
'           *** Hier verschijnt de window om toegang te verlenen
            If ObjEmail.ReceivedByName = "" Then
                If ObjEmail.To <> "" Then
                    myDocname = ObjEmail.To + " (S), " + Format(ObjEmail.SentOn, "dd-mm-yyyy") + "; " + ObjEmail.Subject
                Else
                    MsgBox "Email Drafts worden niet in WFM opgeslagen", vbInformation + vbMsgBoxSetForeground, "Email opslaan in WFM"
                    Exit Function
                End If
            Else
                myDocname = ObjEmail.SenderName + " (R)," + Format(ObjEmail.ReceivedTime, "dd-mm-yyyy") + "; " + ObjEmail.Subject
            End If
'           De filename controleren
            If Len(myDocname) > 0 Then
                Call TekensVervangen(myDocname, False)
            Else
                MsgBox "Er is een fout opgetreden. De filename bevat geen waarden", vbInformation + vbMsgBoxSetForeground, "Email opslaan in WFM"
                Exit Function
            End If
'           Emailbericht
            If ObjEmail Is Nothing Then GoTo EH
'           Bijlage(n)
            bWithAttachments = True
            If AFDELING = "PPN" Then
                Set myCLItem = CALCreateDocument(myDocname, "CPPN")
            Else
                If AFDELING = "MUT" Then
                    Set myCLItem = CALCreateDocument(myDocname, "COLLMUT")
                Else
                    Set myCLItem = CALCreateDocument(myDocname, "COLL")
                End If
            End If
            If myCLItem Is Nothing Then GoTo EH
            Set myDoc = myCLItem.Open(calOpenReadWrite)
            If myDoc Is Nothing Then GoTo EH
'           Kopieer velden van folder indien viewer is meegegeven
            If Not myViewer Is Nothing Then
                Set myFldFF = myViewer.CALClientListItem.OpenedItem.FormFields(calFieldsNoViews)
                Set myDocFF = myDoc.FormFields(calFieldsNoViews)
                If myViewer.CALClientListItem.OpenedItem.Class <> "COLLDEB" Then ' WO 2008-05-30 TD105060
                    If myViewer.CALClientListItem.OpenedItem.Class <> "COLLVORD" Then CALCopyFormFields myFldFF, myDocFF, "NAAM_DLNMR"
                    If myViewer.CALClientListItem.OpenedItem.Class <> "COLLVORD" Then CALCopyFormFields myFldFF, myDocFF, "NR_POLIS"
                    CALCopyFormFields myFldFF, myDocFF, "NR_AEGAR_KLANT"
                End If
                CALCopyFormFields myFldFF, myDocFF, "NR_AEGAR"
                CALCopyFormFields myFldFF, myDocFF, "NAAM_KLANT"
                CALCopyFormFields myFldFF, myDocFF, "NR_KLANT"
                CALCopyFormFields myFldFF, myDocFF, "ZK_VOLGNR"
                CALCopyFormFields myFldFF, myDocFF, "IND_TRIGGER"
                CALCopyFormFields myFldFF, myDocFF, "ZAAK_IDENT_NR"
                CALSetFieldValue myDoc, "DOCTYPE", "EMAIL"
'               Dus ook als de viewer bekend is BESTEMMING = NEW
                If AFDELING <> "MUT" Then
                   CALSetFieldValue myDoc, "BESTEMMING", "NEW"
                End If
            Else
                If AFDELING <> "MUT" Then
                   CALSetFieldValue myDoc, "BESTEMMING", "NEW"
                End If
                CALSetFieldValue myDoc, "DOORZENDEN_NAAR", AFDELING
                CALSetFieldValue myDoc, "NR_POLIS", MyUserPropWfmDLN
                CALSetFieldValue myDoc, "DAT_DOC", Format(Now, "yyyy-mm-dd")
            End If
            If ObjEmail.ReceivedByName <> "" Then 'recieved mail
                CALSetFieldValue myDoc, "DAT_ONTV", Format(ObjEmail.ReceivedTime, "yyyy-mm-dd")
            Else
                CALSetFieldValue myDoc, "DAT_DOC", Format(ObjEmail.SentOn, "yyyy-mm-dd")
            End If
'           20080627, SaBl, TD109204
            CALSetFieldValue myDoc, "DOC_BRON", "Outlook"
'           Save, zodat het tijdelijk ObjectID omgezet wordt naat een definitief ObjectID.
            myDoc.Save
'           Emaibericht tijdelijk lokaal opslaan
'           Elke import krijgt een eigen folder (ObjectID als naam) en in die folder een file met zijn "eigen" naam.
'           A.d.v. de modified date kan je zien wanneer de import gestart is.
            x = golOutlook.SaveBody(ObjEmail, myDoc, myDocname)
'           Insert attachments als import
            If bWithAttachments Then
                x = golOutlook.SaveAttachments(ObjEmail, myDoc)
            End If
            If Not myViewer Is Nothing Then
'               Voeg het nieuwe document toe aan de folder
                Call myViewer.CALClientListItem.OpenedItem.Children.Add(myDoc.Info.objId, calChildLast)
                myDoc.Save
                myDoc.Close calCloseSaveChanges
                CALClient.ClientList.Remove myCLItem
                Set myCLItem = Nothing
                SetEmailUserProperties ObjEmail, myViewer.name, "Opgeslagen"
            Else
                SetEmailUserProperties ObjEmail, "", "Opgeslagen"
                Set SaveEmailInWorkflow = myCLItem
            End If
'           --------------Einde Nieuwe code April2006 release
        Next i
    End If
    Unload frmAfdeling

EH:
    If Err Then
        DisplayError "SaveEmailInWorkflow"
        If Not myDoc Is Nothing Then
            myDoc.Close calCloseAbortChanges
        End If
        If Not myCLItem Is Nothing Then
            CALClient.ClientList.Remove myCLItem
        End If
        Unload frmAfdeling
        frmOutlookTree.MousePointer = fmMousePointerDefault
        frmOutlookTree.Hide
        frmOutlookTree.Show 1
    Else
        Unload frmOutlookTree
    End If
    Set ObjEmail = Nothing
End Function

' User property's die in de folderview in outlook
' zichtbaar kunnen zijn
Public Sub SetEmailUserProperties(ObjEmail As Object, strDossier As String, strStatus As String, Optional strWFMID As String, Optional strDLNNR As String)
Dim objUserProperty     As UserProperty

    On Error Resume Next
'   WFM Status
    Set objUserProperty = ObjEmail.UserProperties.Find(cWfmStatus)
    If objUserProperty Is Nothing Then
        Set objUserProperty = ObjEmail.UserProperties.Add(cWfmStatus, olText)
    End If
    If Not objUserProperty Is Nothing Then
        objUserProperty.Value = strStatus
    End If
'   WFM Dossier
    Set objUserProperty = ObjEmail.UserProperties.Find(cWfmDossier)
    If objUserProperty Is Nothing Then
        Set objUserProperty = ObjEmail.UserProperties.Add(cWfmDossier, olText)
    End If
    If Not objUserProperty Is Nothing Then
        objUserProperty.Value = strDossier
    End If
'   WFM user
    Set objUserProperty = ObjEmail.UserProperties.Find(cWfmUser)
    If objUserProperty Is Nothing Then
        Set objUserProperty = ObjEmail.UserProperties.Add(cWfmUser, olText)
    End If
    If Not objUserProperty Is Nothing Then
        objUserProperty.Value = Application.SessionInfo.username
    End If
'   WFM ID
    Set objUserProperty = ObjEmail.UserProperties.Find(cWfmID)
    If objUserProperty Is Nothing Then
        Set objUserProperty = ObjEmail.UserProperties.Add(cWfmID, olText)
    End If
    If Not objUserProperty Is Nothing Then
        objUserProperty.Value = strWFMID
    End If
'   WFM Deelnemernr
    Set objUserProperty = ObjEmail.UserProperties.Find(cWfmDLN)
    If objUserProperty Is Nothing Then
        Set objUserProperty = ObjEmail.UserProperties.Add(cWfmDLN, olText)
    End If
    If Not objUserProperty Is Nothing Then
        objUserProperty.Value = strDLNNR
    End If
    ObjEmail.Save
    Set objUserProperty = Nothing
End Sub

Private Function GetUpper(varArray As Variant) As Long
' Original code from ElementK Journals
Dim Upper               As Long

    On Error Resume Next
    Upper = UBound(varArray)
    If Err.Number Then
        If Err.Number = 9 Then
            Upper = 0
        Else
            With Err
                MsgBox "Error:" & .Number & "-" & .Description
            End With
            Exit Function
        End If
    Else
        Upper = UBound(varArray) + 1
    End If
    On Error GoTo 0
    GetUpper = Upper
End Function

Public Function SaveOpenedEmail(Optional bSaveAttachments As Boolean = True, Optional Viewer As WorkitemViewer, Optional SentEmail As Boolean = True) As CALClientListItem
Dim x                   As Integer                  'tbv msgbox "bijlagen opslaan"
Dim myCLItem            As CALClientListItem
Dim myDoc               As CALDocument
Dim myDocFF             As CALFormFields            'Viewer geopend
Dim myFldFF             As CALFormFields            'Viewer geopend
Dim myDocname           As String
Dim AFDELING            As String
Dim AfdelingForm        As Boolean
Dim bWithAttachments    As Boolean
Dim i                   As Integer
Dim MyUserProperty      As UserProperty
Dim MyUserPropWfmStatus As String
Dim MyUserPropWfmDossier    As String
Dim MyUserPropWfmUser   As String
Dim MyUserPropWfmID     As String
Dim MyUserPropWfmDLN    As String
Dim Response            As Integer
Dim objClientListItem   As CALClientListItem
Dim myViewer            As WorkitemViewer
Dim newESWMObjId        As CALObjID
Dim ObjOLEmail          As Outlook.MailItem
Dim ObjEmail            As Object                   'Container for Redemption.SafeMailItem

    On Error GoTo EH
'   Prepare Redemption wrapper for OL MailItem
    Set ObjEmail = CreateObject("redemption.safemailitem")
'   Emailbericht declareren
    On Error GoTo ErrorOutlook
    Set myOutlook = CreateObject("Outlook.Application")
    Set SaveOpenedEmail = Nothing
    If SentEmail = True Then
        Set ObjOLEmail = myOutlook.ActiveInspector.CurrentItem             'Set laatst geopende Email
    Else

Dim ObjSentEmails       As Object
Dim ObjSentEmail        As Outlook.MailItem
Dim intSndEmailCnt As Integer

        Set myNameSpace = myOutlook.GetNamespace("MAPI")
        If Not myNameSpace Is Nothing Then
            Set mySentItemsBox = myNameSpace.GetDefaultFolder(olFolderSentMail)
            Set ObjSentEmails = mySentItemsBox.Items
            intSndEmailCnt = ObjSentEmails.Count
            Set ObjSentEmail = ObjSentEmails.item(intSndEmailCnt)
            If ObjSentEmail.Class = olMail Then
                Set ObjOLEmail = Nothing
                Set ObjOLEmail = ObjSentEmails.item(intSndEmailCnt)      'Set laatst verstuurde Email
            End If
        End If
    End If
'   Now place OL MailItem in Redemption wrapper
    ObjEmail.item = ObjOLEmail
    On Error GoTo 0
    On Error GoTo EH   'Bij het declareren van de Outlook variabelen wordt een aparte error handling gebruikt.
'   Userproperties in het Emailbericht
'   Indien aanwezig Userproerpties ophalen.
'[PAC]---------------------------------------------------------------------------------------------
'[PAC]    For Each MyUserProperty In ObjEmail.UserProperties
'[PAC]        If MyUserProperty.name = cWfmStatus Then MyUserPropWfmStatus = MyUserProperty.value
'[PAC]        If MyUserProperty.name = cWfmDossier Then MyUserPropWfmDossier = MyUserProperty.value
'[PAC]        If MyUserProperty.name = cWfmUser Then MyUserPropWfmUser = MyUserProperty.value
'[PAC]        If MyUserProperty.name = cWfmID Then MyUserPropWfmID = MyUserProperty.value
'[PAC]        If MyUserProperty.name = cWfmDLN Then MyUserPropWfmDLN = MyUserProperty.value
'[PAC]    Next
    On Error Resume Next
    Set MyUserProperty = ObjEmail.UserProperties.Find(cWfmStatus)
    If Not MyUserProperty Is Nothing Then
        MyUserPropWfmStatus = MyUserProperty.Value
    End If
    Set MyUserProperty = Nothing
    Set MyUserProperty = ObjEmail.UserProperties.Find(cWfmDossier)
    If Not MyUserProperty Is Nothing Then
        MyUserPropWfmDossier = MyUserProperty.Value
    End If
    Set MyUserProperty = Nothing
    Set MyUserProperty = ObjEmail.UserProperties.Find(cWfmUser)
    If Not MyUserProperty Is Nothing Then
        MyUserPropWfmUser = MyUserProperty.Value
    End If
    Set MyUserProperty = Nothing
    Set MyUserProperty = ObjEmail.UserProperties.Find(cWfmID)
    If Not MyUserProperty Is Nothing Then
        MyUserPropWfmID = MyUserProperty.Value
    End If
    Set MyUserProperty = Nothing
    Set MyUserProperty = ObjEmail.UserProperties.Find(cWfmDLN)
    If Not MyUserProperty Is Nothing Then
        MyUserPropWfmDLN = MyUserProperty.Value
    End If
    Set MyUserProperty = Nothing
    On Error GoTo EH
'[PAC]---------------------------------------------------------------------------------------------
'   Controleren of het Email bericht reeds eerder in WFM is opgeslagen
    If MyUserPropWfmStatus = "Opgeslagen" Then
        Response = MsgBox("Het Emailbericht is reeds eerder in WFM opgeslagen, wilt u doorgaan?", vbInformation + vbMsgBoxSetForeground + vbYesNo, "Email opslaan in WFM")
        If Response = vbNo Then GoTo Reset      'Gebruiker koos Nee
    End If
'   Bij een uitgaand bericht controleren of er Reg. settings zijn.
    If MyUserPropWfmID = "" Then
        If SentEmail = False Then
        Dim WFMOpenedEmailTopic As String
            WFMOpenedEmailTopic = GetSetting("ORIGIN", "Outlook", "WFMOpenedEmailTopic")
            If ObjEmail.ConversationTopic = WFMOpenedEmailTopic Then
                MyUserPropWfmID = GetSetting("ORIGIN", "Outlook", "WFMOpenedEmailObjectID")
                MyUserPropWfmDLN = GetSetting("ORIGIN", "Outlook", "WFMOpenedEmailDLNNR")
'               De boel opschonen
                ClearWFMOpenedEmailRegistrySettings
            End If
        End If
    End If
'   Kijken of de opgegeven zaak nog in de Workdesk geopend is
    If MyUserPropWfmID <> "" Then
        Set newESWMObjId = New CALObjID
        newESWMObjId.InternalName = MyUserPropWfmID
        Set objClientListItem = Application.CALClient.ClientList.Find(newESWMObjId)
        Set myViewer = Application.Viewers.FindViewer(objClientListItem)
        If myViewer Is Nothing Then
            MsgBox "Het Emailbericht is vanuit een zaak aangemaakt, maar deze staat inmiddels niet meer in uw Workdesk open . Gebruik de knop Toevoegen?", vbInformation + vbMsgBoxSetForeground, "Email opslaan in WFM"
        End If
    End If
'   Afdeling bepalen
'   De afdeling registratie/indexatie moet zelf een afdeling kunnen selecteren
    If myViewer Is Nothing Then
        AFDELING = CALGetUserVar("Afdeling", Application.CALClient.username)
        If AFDELING = "" Then
            AfdelingForm = True
            frmAfdeling.cbAfdeling.list = plActieveProcessen
            frmAfdeling.cbAfdeling.AddItem "PPN"
            frmAfdeling.cbAfdeling.AddItem "MUT"
            frmAfdeling.Show 1
            If IsNull(frmAfdeling.cbAfdeling) Then Exit Function
            AFDELING = frmAfdeling.cbAfdeling
        End If
    End If
'   Filename
'   *** Hier verschijnt de window om toegang te verlenen
    If ObjEmail.ReceivedByName = "" Then
        If ObjEmail.To <> "" Then
            myDocname = ObjEmail.To + " (S), " + Format(ObjEmail.SentOn, "dd-mm-yyyy") + "; " + ObjEmail.Subject
        Else
            MsgBox "Email Drafts worden niet in WFM opgeslagen", vbInformation + vbMsgBoxSetForeground, "Email opslaan in WFM"
            Exit Function
        End If
    Else
        myDocname = ObjEmail.SenderName + " (R)," + Format(ObjEmail.ReceivedTime, "dd-mm-yyyy") + "; " + ObjEmail.Subject
    End If
'   De filename controleren
    If Len(myDocname) > 0 Then
        Call TekensVervangen(myDocname, False)
    Else
        MsgBox "Er is een fout opgetreden. De filename bevat geen waarden", vbInformation + vbMsgBoxSetForeground, "Email opslaan in WFM"
        Exit Function
    End If
'   Emailbericht
    If ObjEmail Is Nothing Then GoTo EH
'   Bijlage(n)
    bWithAttachments = True
    If AFDELING = "PPN" Then
        Set myCLItem = CALCreateDocument(myDocname, "CPPN")
    Else
        If AFDELING = "MUT" Then
            Set myCLItem = CALCreateDocument(myDocname, "COLLMUT")
        Else
            Set myCLItem = CALCreateDocument(myDocname, "COLL")
        End If
    End If
    If myCLItem Is Nothing Then GoTo EH
    Set myDoc = myCLItem.Open(calOpenReadWrite)
    If myDoc Is Nothing Then GoTo EH
'   Kopieer velden van folder indien viewer is meegegeven
    If Not myViewer Is Nothing Then
        Set myFldFF = myViewer.CALClientListItem.OpenedItem.FormFields(calFieldsNoViews)
        Set myDocFF = myDoc.FormFields(calFieldsNoViews)
'       JAG 20071008 Chage voor Debiteurenflow test op <> "COLLDEB"
        If myViewer.CALClientListItem.OpenedItem.Class <> "COLLDEB" Then
            CALCopyFormFields myFldFF, myDocFF, "NAAM_DLNMR"
            CALCopyFormFields myFldFF, myDocFF, "NR_POLIS"
            CALCopyFormFields myFldFF, myDocFF, "NR_AEGAR"
            CALCopyFormFields myFldFF, myDocFF, "NAAM_KLANT"
            CALCopyFormFields myFldFF, myDocFF, "NR_KLANT"
            CALCopyFormFields myFldFF, myDocFF, "NR_AEGAR_KLANT"
            CALCopyFormFields myFldFF, myDocFF, "ZK_VOLGNR"
            CALCopyFormFields myFldFF, myDocFF, "IND_TRIGGER"
            CALCopyFormFields myFldFF, myDocFF, "ZAAK_IDENT_NR"
        Else
            CALCopyFormFields myFldFF, myDocFF, "NAAM_KLANT"
            CALCopyFormFields myFldFF, myDocFF, "NR_KLANT"
            CALCopyFormFields myFldFF, myDocFF, "ZK_VOLGNR"
            CALCopyFormFields myFldFF, myDocFF, "IND_TRIGGER"
            CALCopyFormFields myFldFF, myDocFF, "ZAAK_IDENT_NR"
        End If
        CALSetFieldValue myDoc, "DOCTYPE", "EMAIL"
'       Dus ook als de viewer bekend is BESTEMMING = NEW
        If AFDELING <> "MUT" Then
           CALSetFieldValue myDoc, "BESTEMMING", "NEW"
        End If
    Else
        If AFDELING <> "MUT" Then CALSetFieldValue myDoc, "BESTEMMING", "NEW"
        CALSetFieldValue myDoc, "DOORZENDEN_NAAR", AFDELING
        CALSetFieldValue myDoc, "NR_POLIS", MyUserPropWfmDLN
        CALSetFieldValue myDoc, "DAT_DOC", Format(Now, "yyyy-mm-dd")
    End If
    If ObjEmail.ReceivedByName <> "" Then 'recieved mail
        CALSetFieldValue myDoc, "DAT_ONTV", Format(ObjEmail.ReceivedTime, "yyyy-mm-dd")
    Else
        CALSetFieldValue myDoc, "DAT_DOC", Format(ObjEmail.SentOn, "yyyy-mm-dd")
    End If
'   20080627, SaBl, TD109204
    CALSetFieldValue myDoc, "DOC_BRON", "Outlook"
'   Save, zodat het tijdelijk ObjectID omgezet wordt naat een definitief ObjectID.
    myDoc.Save
'   Emaibericht tijdelijk lokaal opslaan
'   Elke import krijgt een eigen folder en in die folder een file met zijn "eigen" naam.
'   A.d.v. de modified date kan je zien wanneer de import gestart is.
    x = golOutlook.SaveBody(ObjEmail, myDoc, myDocname)
'   Insert attachments als import
    If bWithAttachments Then x = golOutlook.SaveAttachments(ObjEmail, myDoc)
    If Not myViewer Is Nothing Then
'       Voeg het nieuwe document toe aan de folder
        Call myViewer.CALClientListItem.OpenedItem.Children.Add(myDoc.Info.objId, calChildLast)
                    
        'Commented for EX9.21 Nl on Vista as it gives an Invalid Handler passed error
        'Comment ends
        'Comment - replacement code as suggested by Global360
        myDoc.Save
        'Comment ends - replacement code as suggested by Global360
        myDoc.Close calCloseSaveChanges
        CALClient.ClientList.Remove myCLItem
        Set myCLItem = Nothing
        SetEmailUserProperties ObjEmail, myViewer.name, "Opgeslagen"
    Else
        SetEmailUserProperties ObjEmail, "", "Opgeslagen"
        Set SaveOpenedEmail = myCLItem
        myDoc.Save
    End If
'   Afsluiten
    If AfdelingForm = True Then Unload frmAfdeling
    If SentEmail = True Then ObjEmail.Close olSave          'Eventueel subject ook aanpassen
    GoTo Reset

ErrorOutlook:
    If Err.Number = 13 Then
        MsgBox "Het actieve Outlook item is geen mail item", vbInformation + vbMsgBoxSetForeground, "Email opslaan in WFM"
    Else
        MsgBox "Outlook/Emailbericht is niet (goed) geopend", vbInformation + vbMsgBoxSetForeground, "Email opslaan in WFM"
    End If
    GoTo Reset

EH:
    If Err.Number = -2147467259 Then MsgBox "U heeft Outlook geen toegang verleend", vbInformation + vbMsgBoxSetForeground, "Email opslaan in WFM": GoTo Reset
    DisplayError "Opgeslagen Emailbericht importeren"

Reset:
    Set myOutlook = Nothing
    Set ObjEmail = Nothing
    Set ObjOLEmail = Nothing
End Function

Private Sub TekensVervangen(FileName, Bericht As Boolean)
' Generieke functie om een filename voor zowel WMS als Windows geschikt te maken.
' Met de boolean 'bericht' kan er al-dan-niet voor gekozen worden de gebruiker, indien noodzakelijk,
' te berichten over de gewijzigde filename.
' Declaraties
Dim Teller              As Integer
Dim Respons
Dim OudeFilename        As String

    On Error GoTo EH
    OudeFilename = FileName
'   Files met in de naam een % teken worden niet opgeslagen in WFM
'   Het % teken vervangen door het woord "procent"
'   Eventueel bericht naar de gebruiker
    Teller = 0
    If InStr(1, FileName, "%", 1) > 0 Then FileName = Replace(FileName, "%", "procent"): Teller = 1
    If InStr(1, FileName, ":", 1) > 0 Then FileName = Replace(FileName, ":", ""): Teller = 1
    If InStr(1, FileName, "/", 1) > 0 Then FileName = Replace(FileName, "/", ""): Teller = 1
    If InStr(1, FileName, "\", 1) > 0 Then FileName = Replace(FileName, "\", ""): Teller = 1
    If InStr(1, FileName, "|", 1) > 0 Then FileName = Replace(FileName, "|", ""): Teller = 1
    If InStr(1, FileName, "*", 1) > 0 Then FileName = Replace(FileName, "*", ""): Teller = 1
    If InStr(1, FileName, "?", 1) > 0 Then FileName = Replace(FileName, "?", ""): Teller = 1
    If InStr(1, FileName, ">", 1) > 0 Then FileName = Replace(FileName, ">", ""): Teller = 1
    If InStr(1, FileName, "<", 1) > 0 Then FileName = Replace(FileName, "<", ""): Teller = 1
    If InStr(1, FileName, Chr(34), 1) > 0 Then FileName = Replace(FileName, Chr(34), ""): Teller = 1
    If InStr(1, FileName, vbTab, 1) > 0 Then FileName = Replace(FileName, vbTab, "_") 'Tabs vervangen door underscore (_)
    If Teller > 0 Then
        If Bericht = True Then
            Respons = MsgBox("De filenaam '" & OudeFilename & "' is aangepast in '" & FileName & "'", vbInformation, _
            "Opslaan in WFM: De tekens :%/\|*?<> zijn niet toegestaan")
        End If
    End If

EH:
    DisplayError "De filename wordt niet geaccepteerd"
    Bericht = False
End Sub

Public Function ClearWFMOpenedEmailRegistrySettings()
    SaveSetting "ORIGIN", "Outlook", "WFMOpenedEmailTopic", ""
    SaveSetting "ORIGIN", "Outlook", "WFMOpenedEmailObjectID", ""
    SaveSetting "ORIGIN", "Outlook", "WFMOpenedEmailDLNNR", ""
End Function
Attribute VB_Name = "Registry"
'##########################################
'
' Module:   Registry.bas
' Auteur:   B. van der Haar
' Versie:   1.0
' Datum:    28-04-1999
' Wijzigingshistorie:
'     13-02-2001 : B. van der Haar
'##########################################

Option Explicit

Declare Function RegCloseKey Lib "advapi32.dll" (ByVal hKey As Long) As Long
Declare Function RegOpenKeyEx Lib "advapi32.dll" Alias "RegOpenKeyExA" (ByVal hKey As Long, ByVal lpSubKey As String, ByVal ulOptions As Long, ByVal samDesired As Long, phkResult As Long) As Long
Declare Function RegQueryValueEx Lib "advapi32.dll" Alias "RegQueryValueExA" (ByVal hKey As Long, ByVal lpValueName As String, ByVal lpReserved As Long, lpType As Long, ByVal lpData As Any, lpcbData As Long) As Long         ' Note that if you declare the lpData parameter as String, you must pass it By Value.
Declare Function RegCreateKeyEx Lib "advapi32.dll" Alias "RegCreateKeyExA" (ByVal hKey As Long, ByVal lpSubKey As String, ByVal Reserved As Long, ByVal lpClass As String, ByVal dwOptions As Long, ByVal samDesired As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES, phkResult As Long, lpdwDisposition As Long) As Long
Declare Function RegSetValueEx Lib "advapi32.dll" Alias "RegSetValueExA" (ByVal hKey As Long, ByVal lpValueName As String, ByVal Reserved As Long, ByVal dwType As Long, ByVal lpData As Any, ByVal cbData As Long) As Long         ' Note that if you declare the lpData parameter as String, you must pass it By Value.
Declare Function RegEnumValue Lib "advapi32.dll" Alias "RegEnumValueA" (ByVal hKey As Long, ByVal dwIndex As Long, ByVal lpValueName As String, lpcbValueName As Long, ByVal lpReserved As Long, lpType As Long, ByVal lpData As Any, lpcbData As Long) As Long
Declare Function RegEnumKey Lib "advapi32.dll" Alias "RegEnumKeyA" (ByVal hKey As Long, ByVal dwIndex As Long, ByVal lpName As String, ByVal cbName As Long) As Long

Public Type SECURITY_ATTRIBUTES
    nLength As Long
    lpSecurityDescriptor As Long
    bInheritHandle As Long
End Type

Public Const REG_NONE = 0
Public Const REG_SZ = 1
Public Const REG_DWORD = 4
Public Const KEY_NOTIFY = &H10
Public Const SYNCHRONIZE = &H100000
Public Const READ_CONTROL = &H20000
Public Const KEY_QUERY_VALUE = &H1
Public Const REG_OPTION_NON_VOLATILE = 0
Public Const KEY_CREATE_SUB_KEY = &H4
Public Const KEY_SET_VALUE = &H2
Public Const KEY_ENUMERATE_SUB_KEYS = &H8
Public Const STANDARD_RIGHTS_READ = (READ_CONTROL)
Public Const STANDARD_RIGHTS_WRITE = (READ_CONTROL)
Public Const KEY_WRITE = ((STANDARD_RIGHTS_WRITE Or KEY_SET_VALUE Or KEY_CREATE_SUB_KEY) And (Not SYNCHRONIZE))
Public Const KEY_READ = ((STANDARD_RIGHTS_READ Or KEY_QUERY_VALUE Or KEY_ENUMERATE_SUB_KEYS Or KEY_NOTIFY) And (Not SYNCHRONIZE))
Public Const ERROR_SUCCESS = 0&
Public Const REGISTRY_KEY_DOES_NOT_EXIST As String = "<key not found>"

' De standaard sleutels
Public Const HKEY_CLASSES_ROOT = &H80000000
Public Const HKEY_CURRENT_USER = &H80000001
Public Const HKEY_LOCAL_MACHINE = &H80000002
Public Const HKEY_USERS = &H80000003
Public Const HKEY_PERFORMANCE_DATA = &H80000004
Public Const HKEY_CURRENT_CONFIG = &H80000005
Public Const HKEY_DYN_DATA = &H80000006

Public Function GetRegistryKey(ByVal Vendor As String, Optional ByVal Application As String = "", Optional ByVal Key As String = "") As String
    
    Dim result As String
    If (Application <> "") Then
        Vendor = "SOFTWARE\" + Vendor + "\" + Application + "\" + Key
    End If
    
    result = HelperRegKey(HKEY_CURRENT_USER, Vendor)
    GetRegistryKey = result
    
End Function

Public Function HelperRegKey(ByVal ParentKey As Long, KeyName As String) As String
    
    Dim FirstSlash As Integer
    Dim result As String
    
    FirstSlash = InStr(1, KeyName, "\")
    
    If (FirstSlash > 0) Then
        Dim ChildKeyName As String
        Dim LeftOver As String
        Dim ChildKey As Long
            
        ChildKeyName = Left(KeyName, FirstSlash - 1)
        LeftOver = Mid(KeyName, FirstSlash + 1)
        
        If ((ChildKeyName = "") Or (LeftOver = "")) Then
            HelperRegKey = REGISTRY_KEY_DOES_NOT_EXIST
        Else
            If (RegOpenKeyEx(ParentKey, ChildKeyName, 0, KEY_READ, ChildKey) = ERROR_SUCCESS) Then
                HelperRegKey = HelperRegKey(ChildKey, LeftOver)
                RegCloseKey (ChildKey)
            Else
                HelperRegKey = REGISTRY_KEY_DOES_NOT_EXIST
            End If
        End If
    Else
        Dim AantalBytesKey As Long
        AantalBytesKey = 1000
        Dim ResultString As String
        Dim DataType As Long
        ResultString = Space(AantalBytesKey)
        
        If (RegQueryValueEx(ParentKey, KeyName, 0, DataType, ResultString, AantalBytesKey) = ERROR_SUCCESS) Then
            If (AantalBytesKey = 0) Then
                HelperRegKey = ""
            Else
                result = Mid(ResultString, 1, AantalBytesKey - 1)
                HelperRegKey = result
            End If
        Else
            HelperRegKey = REGISTRY_KEY_DOES_NOT_EXIST
        End If
    End If
    
End Function

Public Function SetRegistryKey(Vendor As String, Application As String, Key As String, Value As String) As Boolean
Dim SoftwareKey As Long
Dim VendorKey As Long
Dim ApplicationKey As Long
Dim AantalBytesKey As Long
Dim ResultString As String
Dim dummy As Long
Dim SecAttr As SECURITY_ATTRIBUTES

    SoftwareKey = 0
    VendorKey = 0
    ApplicationKey = 0
    AantalBytesKey = Len(Value)

    If RegCreateKeyEx(HKEY_CURRENT_USER, "Software", 0, REG_NONE, REG_OPTION_NON_VOLATILE, KEY_WRITE Or KEY_READ, SecAttr, SoftwareKey, dummy) = ERROR_SUCCESS _
            And RegCreateKeyEx(SoftwareKey, Vendor, 0, REG_NONE, REG_OPTION_NON_VOLATILE, KEY_WRITE Or KEY_READ, SecAttr, VendorKey, dummy) = ERROR_SUCCESS _
            And RegCreateKeyEx(VendorKey, Application, 0, REG_NONE, REG_OPTION_NON_VOLATILE, KEY_WRITE Or KEY_READ, SecAttr, ApplicationKey, dummy) = ERROR_SUCCESS _
            And RegSetValueEx(ApplicationKey, Key, 0, REG_SZ, Value, AantalBytesKey) = ERROR_SUCCESS Then
        SetRegistryKey = True
    Else
        SetRegistryKey = False
    End If

    If (SoftwareKey <> 0) Then
        RegCloseKey (SoftwareKey)
    End If

    If (VendorKey <> 0) Then
        RegCloseKey (VendorKey)
    End If

    If (ApplicationKey <> 0) Then
        RegCloseKey (ApplicationKey)
    End If
End Function

' strRegistryKey is de key hangend onder HKLM
Public Function GetAllValues(ByVal strRegistryKey As String) As Collection
Dim rc As Long                                          ' Return Code
Dim hKey As Long                                        ' Handle To An Open Registry Key

Dim KeyValType As Long                                  ' Data Type Of A Registry Key
Dim tmpVal As String                                    ' Tempory Storage For A Registry Key Value
Dim KeyVal As String
Dim lngKeyValLength As Long
Dim lngKeyNameLength As Long
Dim strClass As String
Dim lngIndex As Long
  
Dim tmpName As String
Dim strKeyName As String
Dim i As Long


    '------------------------------------------------------------
    ' Open RegKey Under KeyRoot {HKEY_LOCAL_MACHINE...}
    '------------------------------------------------------------
    rc = RegOpenKeyEx(HKEY_LOCAL_MACHINE, strRegistryKey, 0, KEY_READ, hKey) ' Open Registry Key
    
    If (rc <> ERROR_SUCCESS) Then
        Set GetAllValues = Nothing
        Exit Function
    End If
    
    lngKeyValLength = 1000
    lngKeyNameLength = 1000
    tmpName = Space(lngKeyValLength)
    tmpVal = Space(lngKeyNameLength)
    Set GetAllValues = New Collection
    lngIndex = 0

    While (ERROR_SUCCESS = RegEnumValue(hKey, lngIndex, tmpName, lngKeyNameLength, 0, KeyValType, tmpVal, lngKeyValLength))
      
      
      tmpVal = VBA.Left(tmpVal, InStr(tmpVal, VBA.Chr(0)) - 1)
      strKeyName = VBA.Left(tmpName, InStr(tmpName, VBA.Chr(0)) - 1)
      '------------------------------------------------------------
      ' Determine Key Value Type For Conversion...
      '------------------------------------------------------------
      Select Case KeyValType                                  ' Search Data Types...
      Case REG_SZ                                             ' String Registry Key Data Type
              KeyVal = tmpVal                                     ' Copy String Value
      Case REG_DWORD                                          ' Double Word Registry Key Data Type
              For i = Len(tmpVal) To 1 Step -1                    ' Convert Each Bit
                      KeyVal = KeyVal + Hex(Asc(Mid(tmpVal, i, 1)))   ' Build Value Char. By Char.
              Next
              KeyVal = Format$("&h" + KeyVal)                     ' Convert Double Word To String
      End Select
      
      GetAllValues.Add KeyVal, strKeyName
      
      lngKeyValLength = 1000
      lngKeyNameLength = 1000
      tmpName = Space(lngKeyValLength)
      tmpVal = Space(lngKeyNameLength)
      lngIndex = lngIndex + 1
    Wend
    
    RegCloseKey hKey
    
End Function

Public Function RegistryKeyExists(ByVal strRegistryKey As String) As Boolean
    Dim hKey As Long                                        ' Handle To An Open Registry Key

    If (ERROR_SUCCESS = RegOpenKeyEx(HKEY_CURRENT_USER, strRegistryKey, 0, KEY_READ, hKey)) Then
      RegCloseKey hKey
      RegistryKeyExists = True
    Else
      RegistryKeyExists = False
    End If

End Function

' strRegistryKey is de key hangend onder HKLM
Public Function GetAllKeys(ByVal strRegistryKey As String) As Collection
    Dim rc As Long                                          ' Return Code
    Dim hKey As Long                                        ' Handle To An Open Registry Key
    
    Dim lngKeyNameLength As Long
    Dim lngIndex As Long
      
    Dim tmpName As String
    Dim strKeyName As String
    Dim i As Long


    '------------------------------------------------------------
    ' Open RegKey Under KeyRoot {HKEY_LOCAL_MACHINE...}
    '------------------------------------------------------------
    rc = RegOpenKeyEx(HKEY_CURRENT_USER, strRegistryKey, 0, KEY_READ, hKey) ' Open Registry Key
    
    If (rc <> ERROR_SUCCESS) Then
        Set GetAllKeys = Nothing
        Exit Function
    End If
    
    lngKeyNameLength = 1000
    tmpName = Space(lngKeyNameLength)
    Set GetAllKeys = New Collection
    lngIndex = 0

    While (ERROR_SUCCESS = RegEnumKey(hKey, lngIndex, tmpName, lngKeyNameLength))
      
      strKeyName = VBA.Left(tmpName, InStr(tmpName, VBA.Chr(0)) - 1)
      
      GetAllKeys.Add strKeyName, strKeyName
      
      lngKeyNameLength = 1000
      tmpName = Space(lngKeyNameLength)
      lngIndex = lngIndex + 1
    Wend
    
    RegCloseKey hKey
    
End Function




Attribute VB_Name = "Reken402"
Option Explicit

Public Function StartReken(ByVal objViewer As WFDWorkitem.WorkitemViewer, Programma As String) As Boolean
Dim StrZaakID As String
Dim strPolisNummer As String

    StartReken = False

    StrZaakID = objViewer.Fields.Find("ZAAK_IDENT_NR").CALFormField.Value
    strPolisNummer = objViewer.Fields.Find("NR_POLIS").CALFormField.Value
    
       ' Start Waarde rekenprogramma (without opening a default document).
     Call Shell(Programma + " " + strPolisNummer + " " + StrZaakID, vbNormalFocus)
        
    'End If
    
    StartReken = True

End Function
Public Function InvoerRekPrg(ByVal objViewer As WFDWorkitem.WorkitemViewer) As Boolean

' Inlezen van een eventueel door het rekenprog klaargezette file.
Dim StrZaakID As String
Dim strFilename As String
Dim objFso As Object
Dim objFile As Object
Dim strLine As String

    InvoerRekPrg = False

    StrZaakID = objViewer.Fields.Find("ZAAK_IDENT_NR").CALFormField.Value
    Set objFso = CreateObject("Scripting.FileSystemObject")
    strFilename = Left$(StrZaakID, 5) + "\"
    strFilename = strFilename + Mid$(StrZaakID, 6, 5) + "\"
    strFilename = strFilename + Mid$(StrZaakID, 11, 5) + ".UPL"
    
    strFilename = objFso.BuildPath(dirInvoerRekenProg, strFilename)
    
    If Not objFso.FileExists(strFilename) Then
        ' geen bestand uit rekenprogramma dus geen invoer noodzakelijk
        InvoerRekPrg = True
        Exit Function
    End If
    
    ' open het bestand voor reading
    Set objFile = objFso.OpenTextFile(strFilename, 1)
    strLine = objFile.readline + ";"
    objFile.Close
    
    
    Select Case UCase(objViewer.CALClientListItem.OpenedItem.Class)
    Case Is = "COLLUWO"
        InvoerRekPrg = InvoerRekPrgUWO(objViewer, strLine)
    Case Is = "COLLBWO"
        InvoerRekPrg = InvoerRekPrgBWO(objViewer, strLine)
    Case Else
        Err.Raise vbObjectError + 513, , "Geen COLLUWO of COLLBWO folder. Ontwikkelfoutje."
    End Select
    
    If InvoerRekPrg = True Then
        
        'verwijder de directory's plus .upl file
        On Error GoTo EH_deletefile
        
        strFilename = objFso.GetParentFolderName(strFilename)
        strFilename = objFso.GetParentFolderName(strFilename)
        objFso.DeleteFolder strFilename, True
    
    End If

Exit Function

EH_deletefile:

    MsgBox Err.Description + " File/Folder is niet verwijderd. Inlezen van het rekenprogramma bestand WEL plaatsgevonden.", vbOKOnly + vbExclamation
    
End Function

Public Function InvoerRekPrgUWO(ByVal objViewer As WFDWorkitem.WorkitemViewer, strLine As String) As Boolean
Dim Waarde As Variant
Dim p As Integer
Dim strValuta As String
    InvoerRekPrgUWO = False

    
    p = InStr(strLine, ";")
    strValuta = Left$(strLine, p - 1)
    objViewer.Fields.Find("VALUTA").CALFormField.Value = csStdValuta
    
    
    strLine = Mid$(strLine, p + 1, Len(strLine))
    p = InStr(strLine, ";")
    Waarde = Left$(strLine, p - 1)
    Waarde = Omrekenen(Waarde, strValuta)
    objViewer.Fields.Find("OVERDR_WAARDE_UWO").CALFormField.Value = Waarde
    
    objViewer.Save
    
    InvoerRekPrgUWO = True

End Function
Public Function InvoerRekPrgBWO(ByVal objViewer As WFDWorkitem.WorkitemViewer, strLine As String) As Boolean
Dim Waarde As Variant
Dim strWOregulier As String
Dim p As Integer
Dim strValuta As String

    InvoerRekPrgBWO = False
    'COE
    'strWOregulier = objViewer.Fields.Find("WO_Regulier").CALFormField.Value

    p = InStr(strLine, ";")
    strValuta = Left$(strLine, p - 1)
    objViewer.Fields.Find("VALUTA").CALFormField.Value = csStdValuta
    
    
    
    strLine = Mid$(strLine, p + 1, Len(strLine))
    p = InStr(strLine, ";")
    Waarde = Left$(strLine, p - 1)
    Waarde = Omrekenen(Waarde, strValuta)
    objViewer.Fields.Find("WO_REGULIER").CALFormField.Value = Waarde
    'COE
'    If strWOregulier = "J" Then
'        objViewer.Fields.Find("WO_REGULIER").CALFormField.Value = waarde
'    Else
'        objViewer.Fields.Find("WO_REGULIER").CALFormField.Value = "0"
'    End If
    
    strLine = Mid$(strLine, p + 1, Len(strLine))
    p = InStr(strLine, ";")
    Waarde = Left$(strLine, p - 1)
    objViewer.Fields.Find("WO_NIET_REG").CALFormField.Value = Waarde
    
    strLine = Mid$(strLine, p + 1, Len(strLine))
    p = InStr(strLine, ";")
    Waarde = Left$(strLine, p - 1)
    Waarde = Omrekenen(Waarde, strValuta)
    objViewer.Fields.Find("WO_FICTIEF").CALFormField.Value = Waarde
    
    strLine = Mid$(strLine, p + 1, Len(strLine))
    p = InStr(strLine, ";")
    Waarde = Left$(strLine, p - 1)
    objViewer.Fields.Find("EXTRA_DNST_JR").CALFormField.Value = Waarde
    
    strLine = Mid$(strLine, p + 1, Len(strLine))
    p = InStr(strLine, ";")
    Waarde = Left$(strLine, p - 1)
    objViewer.Fields.Find("EXTRA_DNST_MND").CALFormField.Value = Waarde
    
    strLine = Mid$(strLine, p + 1, Len(strLine))
    p = InStr(strLine, ";")
    Waarde = Left$(strLine, p - 1)
    Waarde = Omrekenen(Waarde, strValuta)
    objViewer.Fields.Find("PV_OP").CALFormField.Value = Waarde
    
    strLine = Mid$(strLine, p + 1, Len(strLine))
    p = InStr(strLine, ";")
    Waarde = Left$(strLine, p - 1)
    Waarde = Omrekenen(Waarde, strValuta)
    objViewer.Fields.Find("EXTRA_OP").CALFormField.Value = Waarde
    
    strLine = Mid$(strLine, p + 1, Len(strLine))
    p = InStr(strLine, ";")
    Waarde = Left$(strLine, p - 1)
    Waarde = Omrekenen(Waarde, strValuta)
    objViewer.Fields.Find("EXTRA_OP_BEP").CALFormField.Value = Waarde
    
    strLine = Mid$(strLine, p + 1, Len(strLine))
    p = InStr(strLine, ";")
    Waarde = Left$(strLine, p - 1)
    Waarde = Omrekenen(Waarde, strValuta)
    objViewer.Fields.Find("PV_NP").CALFormField.Value = Waarde
    
    strLine = Mid$(strLine, p + 1, Len(strLine))
    p = InStr(strLine, ";")
    Waarde = Left$(strLine, p - 1)
    Waarde = Omrekenen(Waarde, strValuta)
    objViewer.Fields.Find("EXTRA_NP").CALFormField.Value = Waarde
    
    strLine = Mid$(strLine, p + 1, Len(strLine))
    p = InStr(strLine, ";")
    Waarde = Left$(strLine, p - 1)
    Waarde = Omrekenen(Waarde, strValuta)
    objViewer.Fields.Find("PV_TOP").CALFormField.Value = Waarde
    
    strLine = Mid$(strLine, p + 1, Len(strLine))
    p = InStr(strLine, ";")
    Waarde = Left$(strLine, p - 1)
    Waarde = Omrekenen(Waarde, strValuta)
    objViewer.Fields.Find("PV_OOP").CALFormField.Value = Waarde
    
    strLine = Mid$(strLine, p + 1, Len(strLine))
    p = InStr(strLine, ";")
    Waarde = Left$(strLine, p - 1)
    objViewer.Fields.Find("BEP_VROUW").CALFormField.Value = Waarde
    
    
    objViewer.Save
    
    InvoerRekPrgBWO = True

End Function

Private Function Omrekenen(strBedrag As Variant, strValuta As String) As String
Dim curBedrag As Currency

On Error Resume Next
Omrekenen = strBedrag

    If strBedrag = "" Then Exit Function
    If strBedrag = "0,00" Then Exit Function
    
    If strValuta = csStdValuta Then Exit Function
    
    curBedrag = StrToCur(strBedrag)
    
    If strValuta = csNLG And csStdValuta = csEUR Then
        Omrekenen = OmrekenenNLGnaarEUR(curBedrag)
    ElseIf strValuta = csEUR And csStdValuta = csNLG Then
        Omrekenen = OmrekenenEURnaarNLG(curBedrag)
    Else
        On Error GoTo 0
        Err.Raise 12345, "Omrekenen", "Onbekende valuta vanuit het rekenprogramma: " & strValuta
    End If
    
    
End Function
Private Function StrToCur(strBedrag As Variant) As Currency
Dim curBedrag As Currency

StrToCur = 0
On Error Resume Next
    ' maak van string -> numeriek
    curBedrag = CCur(strBedrag)
    If Err <> 0 Then
        On Error GoTo 0
        Err.Raise 12345, "StrToCur", "Fout tijdens omrekenen van: " + strBedrag & ". " + Err.Description
        Exit Function
    End If

    If Format(curBedrag, "##########.00") <> Format(strBedrag, "##########.00") Then
        If Err <> 0 Then
            On Error GoTo 0
            Err.Raise 12345, "StrToCur", "Fout tijdens omrekenen van: " + strBedrag & ". " + Err.Description
            Exit Function
        End If
        
        On Error GoTo 0
        Err.Raise 12345, "StrToCur", "Fout tijdens omrekenen van: " + strBedrag & ". " + Err.Description
        Exit Function
        
    End If
    StrToCur = curBedrag
    
End Function
Private Function OmrekenenNLGnaarEUR(curBedrag As Currency) As String

OmrekenenNLGnaarEUR = ""
On Error Resume Next
    
    OmrekenenNLGnaarEUR = Format(curBedrag / 2.20371, "##########.00")
    If Err <> 0 Then
        On Error GoTo 0
        Err.Raise 12345, "OmrekenenNLGnaarEUR ", "Format " & CStr(curBedrag) & "/2.20371"
        Exit Function
    End If
End Function
Private Function OmrekenenEURnaarNLG(curBedrag As Currency) As String

OmrekenenEURnaarNLG = ""
On Error Resume Next
    
    OmrekenenEURnaarNLG = Format(curBedrag * 2.20371, "##########.00")
    If Err <> 0 Then
        On Error GoTo 0
        Err.Raise 12345, "OmrekenenEURnaarNLG ", "Format " & CStr(curBedrag) & "*2.20371"
        Exit Function
    End If
End Function

Attribute VB_Name = "SQLMods400"
Option Explicit

Dim CnAETAS         As New Connection
Dim connWfmDB       As adodb.Connection
Dim Cmd             As New Command

Private Sub CheckConn()
' This routing checks the db connection and if there is a problem
' it tries to resolve the connection
' The connection stays open so there is no overhead of logging in
Dim txtSQL              As String
Dim rsTest              As New adodb.Recordset

    On Error GoTo EH
'   InitDomainSettings  'usefull for debugging after a reset values where lost
    If connWfmDB Is Nothing Then Set connWfmDB = New adodb.Connection
    If Not connWfmDB.State = adStateOpen Then
        connWfmDB.connectionstring = _
            "Provider=MSDASQL" & _
            ";Driver={SQL Server}" & _
            ";server=" & NTServerName & _
            ";uid=" & WFMuid & _
            ";pwd=" & WFMpwd & _
            ";database=" & WFMDatabaseName
        connWfmDB.ConnectionTimeout = 5
        connWfmDB.Open
        If Err <> 0 Then MsgBox Err.Description
     Else
'       Check if existing conn is stil allive
        txtSQL = "Select * from Uitzonderingen where NR_KLANT = '0'"
        Set rsTest = connWfmDB.execute(txtSQL)
    End If
    Exit Sub

EH:
'   Something went wrong so try to reconnect to the database
    Err.Clear
    On Error Resume Next
    connWfmDB.Close
    connWfmDB.connectionstring = _
        "Provider=MSDASQL" & _
        ";Driver={SQL Server}" & _
        ";server=" & NTServerName & _
        ";uid=" & WFMuid & _
        ";pwd=" & WFMpwd & _
        ";database=" & WFMDatabaseName
    connWfmDB.ConnectionTimeout = 5
    connWfmDB.Open
    If Err <> 0 Then DisplayError "Database " & WFMDatabaseName & "Reconnect failed !!! Critical"
'   Recheck new conn
    txtSQL = "Select * from Uitzonderingen where NR_KLANT = '0'"
    Set rsTest = connWfmDB.execute(txtSQL)
    If Err <> 0 Then DisplayError "Database " & WFMDatabaseName & "Reconnect failed !!! Critical"
End Sub

Public Function SQLCheckUitzondering(KlantNr, WorkStep) As Variant
Dim strSQL
Dim rsUitz              As adodb.Recordset

    CheckConn
    strSQL = "SELECT * FROM KLANT WHERE NR_KLANT  = '" & KlantNr & "'"

    Set rsUitz = connWfmDB.execute(strSQL)
    If Err <> 0 Then MsgBox Err.Description

    If Not rsUitz.EOF Then
        If IsNull(rsUitz("KlantgroepID")) Then
            strSQL = "SELECT U.* FROM UITZONDERINGPERAFDELING U, KLANT K, KLANTBEHEERDER B WHERE " & _
                     "K.NR_KLANT = '" & KlantNr & "' AND " & _
                     "K.KlantbeheerderID = B.KlantbeheerderID AND U.AfdelingID =  B.AfdelingID AND U.WORKSTEP = '" & WorkStep & "'"
        Else
            strSQL = "SELECT U.* FROM UITZONDERINGPERAFDELING U, KLANT K, KLANTGROEP G, KLANTBEHEERDER B WHERE " & _
                     "K.NR_KLANT = '" & KlantNr & "' AND K.KlantgroepID = G.KlantgroepID AND " & _
                     "G.KlantbeheerderID = B.KlantbeheerderID AND U.AfdelingID =  B.AfdelingID AND U.WORKSTEP = '" & WorkStep & "'"
        End If

        Set rsUitz = connWfmDB.execute(strSQL)
        If Err <> 0 Then MsgBox Err.Description

        If Not rsUitz.EOF Then
            SQLCheckUitzondering = "Uitzondering op afdelingsniveau:" & vbCrLf
            SQLCheckUitzondering = SQLCheckUitzondering & rsUitz.Fields("Omschrijving") & vbCrLf & vbCrLf
        End If
    End If

    strSQL = "SELECT U.* FROM UITZONDERINGPERKLANTGROEP U, KLANT K, KLANTGROEP G, KLANTBEHEERDER B WHERE " & _
             "K.NR_KLANT = '" & KlantNr & "' AND K.KlantgroepID = G.KlantgroepID AND G.KlantgroepID = U.KlantgroepID" & _
             " AND U.WORKSTEP = '" & WorkStep & "'"

    Set rsUitz = connWfmDB.execute(strSQL)
    If Err <> 0 Then MsgBox Err.Description

    If Not rsUitz.EOF Then
        SQLCheckUitzondering = SQLCheckUitzondering & "Uitzondering op klantgroepniveau:" & vbCrLf
        SQLCheckUitzondering = SQLCheckUitzondering & rsUitz.Fields("Omschrijving") & vbCrLf & vbCrLf
    End If

    strSQL = "Select * from Uitzonderingen where NR_KLANT = '" & KlantNr & "'" & _
             " and WORKSTEP = '" & WorkStep & "'"
    Set rsUitz = connWfmDB.execute(strSQL)
    If Err <> 0 Then MsgBox Err.Description

    If Not rsUitz.EOF Then
        SQLCheckUitzondering = SQLCheckUitzondering & "Uitzondering op klantniveau:" & vbCrLf
        SQLCheckUitzondering = SQLCheckUitzondering & rsUitz.Fields("Omschrijving") & vbCrLf & vbCrLf
    End If
End Function

Public Function SQLCheckUitzonderingII(KlantNr, WorkStep, contract, regeling, pakket, Status) As Variant
Dim strSQL
Dim rsUitz As adodb.Recordset


CheckConn


'Bestaat de klant.
strSQL = "SELECT * FROM KLANT WHERE NR_KLANT  = '" & KlantNr & "'"

Set rsUitz = connWfmDB.execute(strSQL)
If Err <> 0 Then MsgBox Err.Description


'Uitzondering op klantGROEPniveau (2)
'MS SQL statement = SELECT Tbl_UitzBasis.* FROM Klant, KLANTGROEP, Tbl_UitzBasis, Tbl_UitzPerWerkstap WHERE (KLANT.NR_KLANT = '000432') AND (KLANT.KlantgroepID = KLANTGROEP.KlantGroepID) AND (KLANTGROEP.KlantGroepID = Tbl_UitzBasis.NR_KLANT) AND (Tbl_UitzBasis.UitzID = Tbl_UitzPerWerkstap.UitzID) AND (Tbl_UitzPerWerkstap.Workstep = '98P06 Bep. begunst') AND (Tbl_UitzBasis.Niveau = 2)

strSQL = "SELECT Tbl_UitzBasis.* FROM Klant, KLANTGROEP, Tbl_UitzBasis, Tbl_UitzPerWerkstap WHERE" & _
        "(KLANT.NR_KLANT = '" & KlantNr & "') AND" & _
        "(KLANT.KlantgroepID = KLANTGROEP.KlantGroepID) AND" & _
        "(KLANTGROEP.KlantGroepID = Tbl_UitzBasis.NR_KLANT) AND" & _
        "(Tbl_UitzBasis.UitzID = Tbl_UitzPerWerkstap.UitzID) AND" & _
        "(Tbl_UitzPerWerkstap.Workstep = '" & WorkStep & "') AND" & _
        "(Tbl_UitzBasis.Niveau = 2)"


Set rsUitz = connWfmDB.execute(strSQL)
If Err <> 0 Then MsgBox Err.Description

While Not rsUitz.EOF
    'Een WFM zaak heeft in theorie (via PIRA) altijd een status, indien deze toch leeg is in de WFM zaak wordt altijd de uitzondering getoond (ongeacht de waarde in het veld "status" vd uitzondering).
    'De check is hoofdletter gevoelig.
    'In MS SQL: Een nooit ingevuld veld is "" en geleegd veld is Null!!!!
                     
    If IsNull(rsUitz.Fields("Status")) Or rsUitz.Fields("Status") = "" Or InStr(rsUitz.Fields("Status"), Status) > 0 Or Status = "" Then
        If IsNull(rsUitz.Fields("Contract")) Or rsUitz.Fields("Contract") = "" Or rsUitz.Fields("Contract") = contract Or contract = "" Then
            'Het veld regeling ontbreekt vooralsnog (waarschijnlijk per 2007/02) in het download bestand tbv PIRA
            If IsNull(rsUitz.Fields("Regeling")) Or rsUitz.Fields("Regeling") = "" Or rsUitz.Fields("Regeling") = regeling Or regeling = "" Then
                If IsNull(rsUitz.Fields("Pakket")) Or rsUitz.Fields("Pakket") = "" Or InStr(pakket, rsUitz.Fields("Pakket")) > 0 Or pakket = "" Then
               
                    SQLCheckUitzonderingII = SQLCheckUitzonderingII & "Uitzondering op klantgroepniveau (Status= " & rsUitz.Fields("Status") & ", Contract=" & rsUitz.Fields("Contract") & ", Regeling=" & rsUitz.Fields("Regeling") & ", Pakket=" & rsUitz.Fields("Pakket") & "):" & vbCrLf
                    SQLCheckUitzonderingII = SQLCheckUitzonderingII & rsUitz.Fields("Omschrijving_uitz") & vbCrLf & vbCrLf
    
                End If      'Pakket
            End If          'Regeling
        End If              'Contract
    End If                  'Status
    rsUitz.MoveNext
Wend                      'Query


'Uitzondering op klantniveau (3)
'MS SQL statement = SELECT * FROM Tbl_UitzBasis, Tbl_UitzPerWerkstap WHERE (Tbl_UitzBasis.NR_KLANT = '000432') AND (Tbl_UitzBasis.UitzID = Tbl_UitzPerWerkstap.UitzID) AND (Tbl_UitzPerWerkstap.Workstep = '98P06 Bep. begunst') AND (Tbl_UitzBasis.Niveau = 3)

strSQL = "SELECT * FROM Tbl_UitzBasis, Tbl_UitzPerWerkstap WHERE" & _
         "(Tbl_UitzBasis.NR_KLANT = '" & KlantNr & "') AND" & _
         "(Tbl_UitzBasis.UitzID = Tbl_UitzPerWerkstap.UitzID) AND" & _
         "(Tbl_UitzPerWerkstap.Workstep = '" & WorkStep & "')"
'   WO 3 apr 2008: onderstaande clausule verwijderd, omdat er geen rekening mee werd gehouden dat in NR_KLANT een KlantGroepID
'   kon staan. LET OP: Het werkt nu alleen zolang er geen KlantNrs en KlantGroepIDs aan elkaar gelijk zijn (dat is gecontroleerd).
'         " AND (Tbl_UitzBasis.Niveau = 3)"

Set rsUitz = connWfmDB.execute(strSQL)
If Err <> 0 Then MsgBox Err.Description

While Not rsUitz.EOF    'Per werkstap kunnen verschillende uitzonderingen vastgelegd worden.
    'Een WFM zaak heeft in theorie (via PIRA) altijd een status, indien deze toch leeg is wordt altijd de uitzondering getoond (ongeacht de waarde in het veld "status").
    'De check is hoofdletter gevoelig.
    'Een nooit ingevuld veld is "" en geleegd veld is Null!!!!
    
    If IsNull(rsUitz.Fields("Status")) Or rsUitz.Fields("Status") = "" Or InStr(rsUitz.Fields("Status"), Status) > 0 Or Status = "" Then
        If IsNull(rsUitz.Fields("Contract")) Or rsUitz.Fields("Contract") = "" Or rsUitz.Fields("Contract") = contract Or contract = "" Then
            'Het veld regeling ontbreekt vooralsnog (waarschijnlijk per 2007/02) in het download bestand tbv PIRA
            If IsNull(rsUitz.Fields("Regeling")) Or rsUitz.Fields("Regeling") = "" Or rsUitz.Fields("Regeling") = regeling Or regeling = "" Then
                If IsNull(rsUitz.Fields("Pakket")) Or rsUitz.Fields("Pakket") = "" Or InStr(pakket, rsUitz.Fields("Pakket")) > 0 Or pakket = "" Then
               
                    SQLCheckUitzonderingII = SQLCheckUitzonderingII & "Uitzondering op klantniveau (Status= " & rsUitz.Fields("Status") & ", Contract=" & rsUitz.Fields("Contract") & ", Regeling=" & rsUitz.Fields("Regeling") & ", Pakket=" & rsUitz.Fields("Pakket") & "):" & vbCrLf
                    SQLCheckUitzonderingII = SQLCheckUitzonderingII & rsUitz.Fields("Omschrijving_uitz") & vbCrLf & vbCrLf
    
                End If      'Pakket
            End If          'Regeling
        End If              'Contract
    End If                  'Status

    rsUitz.MoveNext
Wend                      'Query


End Function


Public Function SQLGetPUOs() As adodb.Recordset
Dim strSQL As String

    CheckConn
    
    strSQL = "SELECT * FROM PUO ORDER BY Naam"
    
    Set SQLGetPUOs = connWfmDB.execute(strSQL)
    
    If Err <> 0 Then MsgBox Err.Description

End Function

Public Function SQLGetHupo(strKlant As String) As String
Dim strSQL          As String
Dim objRS           As adodb.Recordset
Dim strHuPo1        As String
Dim strHuPo2        As String
Dim strKlantGroep   As String

    strHuPo1 = ""
    strHuPo2 = ""
    CheckConn

    strSQL = "SELECT (select top 1 KlantbeheerderHupo from KLANTBEHEERDER B where B.KLANTBEHEERDERID = K.KLANTBEHEERDERID) as KlantbeheerderHupo"
    strSQL = strSQL + ", (select top 1 KlantbeheerderHupo from KLANTBEHEERDER B where B.KLANTBEHEERDERID = K.MUTBEHEERDERID) as MutatiebeheerderHupo"
    strSQL = strSQL + ", KlantgroepID"
    strSQL = strSQL + "  FROM KLANT K"
    strSQL = strSQL + " WHERE K.NR_KLANT = '" & strKlant & "'"
    Set objRS = connWfmDB.execute(strSQL)
    If Not objRS.EOF Then
'       Klant niet in klantgroep
        If Not IsNull(objRS("KlantbeheerderHupo")) Then strHuPo1 = objRS("KlantbeheerderHupo")
        If Not IsNull(objRS("MutatiebeheerderHupo")) Then strHuPo2 = objRS("MutatiebeheerderHupo")
        If Not IsNull(objRS("KlantgroepID")) Then strKlantGroep = objRS("KlantgroepID")
    Else
        strKlantGroep = strKlant
    End If
    If strHuPo1 = "" Then
        objRS.Close
        strSQL = "SELECT (select top 1 KlantbeheerderHupo from KLANTBEHEERDER B where B.KLANTBEHEERDERID = G.KLANTBEHEERDERID) as KlantbeheerderHupo"
        strSQL = strSQL + ", (select top 1 KlantbeheerderHupo from KLANTBEHEERDER B where B.KLANTBEHEERDERID = G.MUTBEHEERDERID) as MutatiebeheerderHupo"
        strSQL = strSQL + "  FROM KLANTGROEP G"
        strSQL = strSQL + " WHERE G.KLANTGROEPID = '" & strKlantGroep & "'"
        Set objRS = connWfmDB.execute(strSQL)
        If Not objRS.EOF Then
'           Klant in klantgroep of klant is klantgroep
            If Not IsNull(objRS("KlantbeheerderHupo")) Then strHuPo1 = objRS("KlantbeheerderHupo")
            If Not IsNull(objRS("MutatiebeheerderHupo")) Then strHuPo2 = objRS("MutatiebeheerderHupo")
        End If
    End If
    objRS.Close
    SQLGetHupo = AlgKiesBeheerder(strHuPo1, strHuPo2)
End Function

Public Function SQLGetTPnaamnummer(strKlant As String) As adodb.Recordset
Dim strSQL          As String
Dim objRS           As adodb.Recordset

    CheckConn
    strSQL = "SELECT * FROM KLAnrTPnr WHERE klanr = '" & strKlant & "'"
    Set objRS = connWfmDB.execute(strSQL)
    If Not objRS.EOF Then Set SQLGetTPnaamnummer = objRS
End Function

' Vorderingen start
' SaBl 20080516
Public Function SQLGetUitkeringGegs(ByVal sKeyBedrijfscode, ByVal sKeyNr_Begunstigde As String, _
                                    ByVal sMelddatum As String) As adodb.Recordset
Dim strSQL              As String

    CheckConn
    strSQL = "SELECT * FROM dbo.tblVORuitkeringsgegevens"
    strSQL = strSQL & " WHERE BEDRIJFSCODE = '" & sKeyBedrijfscode & "'"
    strSQL = strSQL & " AND NR_BEGUNSTIGDE = '" & sKeyNr_Begunstigde & "'"
    If sMelddatum <> "" Then strSQL = strSQL & " AND DAT_MELD = '" & sMelddatum & "'"
    strSQL = strSQL & " ORDER BY DAT_MELD, NR_POLIS"
    Set SQLGetUitkeringGegs = connWfmDB.execute(strSQL)
    If Err <> 0 Then MsgBox Err.Description
End Function
' Vorderingen eind

Public Function SQLGetOVLPartner(ByVal vID) As adodb.Recordset
'   Inlezen van de Partnergegevens tbv OVL-proces
Dim strSQL              As String

    CheckConn
    strSQL = "SELECT * FROM dbo.tblOVLpartner"
    strSQL = strSQL & " WHERE ID = '" & vID & "'"
    strSQL = strSQL & " ORDER BY SEQ_PARTNER"
    Set SQLGetOVLPartner = connWfmDB.execute(strSQL)
    If Err <> 0 Then MsgBox Err.Description
End Function

Public Function SQLGetOVLKind(ByVal vID) As adodb.Recordset
'   Inlezen van de Kindgegevens tbv OVL-proces
Dim strSQL As String

    CheckConn
    strSQL = "SELECT * FROM dbo.tblOVLkind"
    strSQL = strSQL & " WHERE ID = '" & vID & "'"
    strSQL = strSQL & " ORDER BY SEQ_KIND"
    Set SQLGetOVLKind = connWfmDB.execute(strSQL)
    If Err <> 0 Then MsgBox Err.Description
End Function

Public Function SQLGetOVLPakket(ByVal vID) As adodb.Recordset
'   Inlezen van de Pakketgegevens tbv OVL-proces
Dim strSQL As String

    CheckConn
    strSQL = "SELECT * FROM dbo.tblOVLpakket"
    strSQL = strSQL & " WHERE ID = '" & vID & "'"
    strSQL = strSQL & " ORDER BY NR_PAKKET"
    Set SQLGetOVLPakket = connWfmDB.execute(strSQL)
    If Err <> 0 Then MsgBox Err.Description
End Function

Public Function SQLGetOVLPolis(ByVal vID) As adodb.Recordset
'   Inlezen van de Polisgegevens tbv OVL-proces
Dim strSQL As String

    CheckConn
    strSQL = "SELECT * FROM dbo.tblOVLpolis"
    strSQL = strSQL & " WHERE ID = '" & vID & "'"
    strSQL = strSQL & " ORDER BY PAKKETNR, VERZNR"
    Set SQLGetOVLPolis = connWfmDB.execute(strSQL)
    If Err <> 0 Then MsgBox Err.Description
End Function

Public Function SQLGetOVLbrutus(ByVal vID) As adodb.Recordset
'   Inlezen van de Brutusgegevens tbv OVL-proces
Dim strSQL As String

    CheckConn
    strSQL = "SELECT * FROM dbo.tblOVLbrutus"
    strSQL = strSQL & " WHERE ID = '" & vID & "'"
    strSQL = strSQL & " ORDER BY TERMIJN"
    Set SQLGetOVLbrutus = connWfmDB.execute(strSQL)
    If Err <> 0 Then MsgBox Err.Description
End Function

Public Function SQLGetOVLBeslissing(ByVal vID) As adodb.Recordset
'   Inlezen van de Beslissinggegevens tbv OVL-proces
Dim strSQL As String

    CheckConn
    strSQL = "SELECT * FROM dbo.tblOVLbeslissing"
    strSQL = strSQL & " WHERE ID = '" & vID & "'"
    strSQL = strSQL & " ORDER BY REGELNR"
    Set SQLGetOVLBeslissing = connWfmDB.execute(strSQL)
    If Err <> 0 Then MsgBox Err.Description
End Function

Public Function SQLGetOVLDlnmrRef(ByVal vID) As adodb.Recordset
'   Inlezen van de DeelnemerReferentiegegevens tbv OVL-proces
Dim strSQL As String

    CheckConn
    strSQL = "SELECT * FROM dbo.tblOVLdlnmrref"
    strSQL = strSQL & " WHERE ID = '" & vID & "'"
    strSQL = strSQL & " ORDER BY DLNMRREF"
    Set SQLGetOVLDlnmrRef = connWfmDB.execute(strSQL)
    If Err <> 0 Then MsgBox Err.Description
End Function

Public Function SQLInsertKlacht(ByVal vSQLString, vKlachtNr) As Boolean
'   Toevoegen nieuwe Klacht en retourneren Klachtnummer
Dim oRecSet     As adodb.Recordset

    On Error GoTo ERROR_INSERT
    CheckConn
    Call connWfmDB.execute(vSQLString)

    Set oRecSet = connWfmDB.execute("SELECT @@IDENTITY as NewKlacht")
    vKlachtNr = oRecSet("NewKlacht")
    SQLInsertKlacht = True
    Exit Function

ERROR_INSERT:
    If Err <> 0 Then MsgBox Err.Description
    SQLInsertKlacht = False
End Function

Public Function SQLUpdateKlacht(ByVal vSQLString) As Boolean
'   Bijwerken bestaande Klacht

    On Error GoTo ERROR_UPDATE
    CheckConn
    Call connWfmDB.execute(vSQLString)
    SQLUpdateKlacht = True
    Exit Function

ERROR_UPDATE:
    If Err <> 0 Then MsgBox Err.Description
    SQLUpdateKlacht = False
End Function

Public Function SQLGetKlacht(ByVal vInd As String, ByVal vSQLKey As String) As adodb.Recordset
'   Inlezen van de Klachtgegevens tbv Klachtenproces
Dim sSQLString      As String

    On Error GoTo ERROR_GET
    CheckConn
    sSQLString = "SELECT * FROM dbo.tblKlachten WHERE "
    If UCase(vInd) = "K" Then
        sSQLString = sSQLString & "KLA_WFMKlachtNR = '"  'Klacht# is zoekargument
    Else
        sSQLString = sSQLString & "KLA_OBJID = '"        'ObjectID is zoekargument
    End If
    sSQLString = sSQLString & vSQLKey & "'"
    Set SQLGetKlacht = connWfmDB.execute(sSQLString)
    Exit Function

ERROR_GET:
    If Err <> 0 Then MsgBox Err.Description
End Function

Public Function SQLProcessKlachtRapport(ByVal vSQLString) As Boolean
'   Toevoegen of Bijwerken KlachtRapport (Nabelscript)
Dim oRecSet     As adodb.Recordset

    On Error GoTo ERROR_PROCESS
    CheckConn
    Call connWfmDB.execute(vSQLString)
    SQLProcessKlachtRapport = True
    Exit Function

ERROR_PROCESS:
    If Err <> 0 Then MsgBox Err.Description
    SQLProcessKlachtRapport = False
End Function

Public Function SQLGetKlachtRapport(ByVal vSQLKey As String) As adodb.Recordset
'   Inlezen van het Klachtenrapport tbv Klachtenproces
Dim sSQLString      As String

    On Error GoTo ERROR_GET
    CheckConn
    sSQLString = "SELECT * FROM dbo.tblKlachtenRapport WHERE KLR_WFMKlachtNR = '" & vSQLKey & "'"
    Set SQLGetKlachtRapport = connWfmDB.execute(sSQLString)
    Exit Function

ERROR_GET:
    If Err <> 0 Then MsgBox Err.Description
End Function

'[PAC] - TD169077 Added New Functions
'   Toevoegen nieuw Informatieverzoek
Public Sub SQLInsertINFVerzoek(ByVal vSQLString As String)
    On Error GoTo ERROR_INSERT
    CheckConn
    On Error Resume Next
    Call connWfmDB.execute(vSQLString)
    Exit Sub

ERROR_INSERT:
    If Err <> 0 Then MsgBox (Err.Number & "  -  " & Err.Description)
End Sub

'   Inlezen van de Informatieverzoekgegevens
Public Function SQLGetINFVerzoek(ByVal vObjID As String) As adodb.Recordset
Dim sSQLString      As String

    On Error GoTo ERROR_GET
    CheckConn
    sSQLString = "SELECT * FROM dbo.tblINFVerzoeken WHERE "
    sSQLString = sSQLString & "INF_ObjID = '" & vObjID & "'"
    Set SQLGetINFVerzoek = connWfmDB.execute(sSQLString)
    Exit Function

ERROR_GET:
    If Err <> 0 Then MsgBox Err.Description
End Function

Public Function SQLUpdateINFVerzoek(ByVal vSQLString As String) As Boolean
    On Error GoTo ERROR_UPDATE
    CheckConn
    Call connWfmDB.execute(vSQLString)
    SQLUpdateINFVerzoek = True
    Exit Function

ERROR_UPDATE:
    If Err <> 0 Then MsgBox Err.Description
    SQLUpdateINFVerzoek = False
End Function
'[PAC] - TD169077 End Added New Functions
Attribute VB_Name = "Tabellen414"
Option Explicit

Public Function getaanvraagproces(aanvraag_info) As String
Dim gen
Dim strTemp

    strTemp = Left(aanvraag_info, 2)
    gen = Right(aanvraag_info, 1)
''Q1 Release 2012 CR No. 153254 Dept Changes
    Select Case strTemp
        Case Is = "90"
             getaanvraagproces = "ECH"
''        Case Is = "91"
''             getaanvraagproces = "AOV"
        Case Is = "94"
             getaanvraagproces = "FEP"
        Case Is = "98"
             getaanvraagproces = "PIN"
        Case Is = "99"
             getaanvraagproces = "CWO"
        Case Is = "20"
             getaanvraagproces = "PAC"
        Case Is = "07"
             getaanvraagproces = "KJW"
        Case Is = "10"
             getaanvraagproces = "PPN"
        Case Is = "42"
             getaanvraagproces = "DEB"
        Case Is = "43"
             getaanvraagproces = "DEB"
        Case Is = "44"
             getaanvraagproces = "DEB"
        Case Is = "46"
             getaanvraagproces = "VOR"
        Case Is = "33"
             Select Case gen
                Case Is = "C"
                     getaanvraagproces = "PTA"
                Case Is = "D"
                     getaanvraagproces = "PTB"
                Case Is = "E"
                     getaanvraagproces = "FND"
                Case Is = "I"
                     getaanvraagproces = "PTD"
                Case Is = "L"
                     getaanvraagproces = "PTC"
                Case Is = "F"
                     getaanvraagproces = "PPI"
''                Case Is = "G"
''                     getaanvraagproces = "NT2"
''                Case Is = "H"
''                     getaanvraagproces = "WST"
                Case Is = "K"
                     getaanvraagproces = "FAL"
                Case Is = "J"
                     getaanvraagproces = "FVP"
''                Case Is = "M"
''                     getaanvraagproces = "KSP"
                Case Is = "N"
                     getaanvraagproces = "PTE"
                Case Is = "O"
                     getaanvraagproces = "PTF"
                Case Is = "P"
                     getaanvraagproces = "PTG"
                Case Is = "Q"
                     getaanvraagproces = "PTH"
                Case Is = "R"                           '[PAC] 17MAR15 - PTN --> APP - TD172461
                     getaanvraagproces = "APP"          '[PAC] 17MAR15 - PTN --> APP - TD172461
                Case Is = "S"
                     getaanvraagproces = "PTI"
                Case Is = "X"                           '[PAC] - TD17266
                     getaanvraagproces = "PTL"          '[PAC] - TD17266
                Case Is = "Y"                           '[PAC] - TD17266
                     getaanvraagproces = "PTR"          '[PAC] - TD17266
''                 Case Is = "S"
''                     getaanvraagproces = "MA6"
             End Select
    End Select
End Function

Public Function FindWorkset4Hupo(HupoContactMedew) As String
Dim AfdNaam
''Q1 Release 2012 CR No. 153254 Dept Changes
    AfdNaam = UCase(Mid(HupoContactMedew, 6, 3))
    Select Case AfdNaam
''        Case Is = "KSP"
''             FindWorkset4Hupo = "33A01 Beoord doc"
        Case Is = "KJW"
             FindWorkset4Hupo = "07A01 Beoord doc"
        Case Is = "PPN"
             FindWorkset4Hupo = "10A01 Beoord doc"
        Case Is = "PTA"
             FindWorkset4Hupo = "33A01 Beoord doc"
        Case Is = "PTB"
             FindWorkset4Hupo = "33A01 Beoord doc"
        Case Is = "FND"
             FindWorkset4Hupo = "33A01 Beoord doc"
        Case Is = "PTD"
             FindWorkset4Hupo = "33A01 Beoord doc"
        Case Is = "PTC"
             FindWorkset4Hupo = "33A01 Beoord doc"
        Case Is = "PPI"
             FindWorkset4Hupo = "33A01 Beoord doc"
''        Case Is = "NT2"
''             FindWorkset4Hupo = "33A01 Beoord doc"
''        Case Is = "WST"
''             FindWorkset4Hupo = "33A01 Beoord doc"
        Case Is = "FAL"
             FindWorkset4Hupo = "33A01 Beoord doc"
        Case Is = "PTE"
             FindWorkset4Hupo = "33A01 Beoord doc"
        Case Is = "PTF"
             FindWorkset4Hupo = "33A01 Beoord doc"
        Case Is = "PTG"
             FindWorkset4Hupo = "33A01 Beoord doc"
        Case Is = "PTH"
             FindWorkset4Hupo = "33A01 Beoord doc"
        Case Is = "APP"                                 '[PAC] 17MAR15 - PTN --> APP - TD172461
             FindWorkset4Hupo = "33A01 Beoord doc"
        Case Is = "PTI"
             FindWorkset4Hupo = "33A01 Beoord doc"
        Case Is = "PTL"                                 '[PAC] - TD17266
             FindWorkset4Hupo = "33A01 Beoord doc"      '[PAC] - TD17266
        Case Is = "PTR"                                 '[PAC] - TD17266
             FindWorkset4Hupo = "33A01 Beoord doc"      '[PAC] - TD17266
''        Case Is = "MA6"
''             FindWorkset4Hupo = "33A01 Beoord doc"
    End Select
    If Not FindWorkset4Hupo > "" Then Err.Raise 12345, , "Afdeling niet gevonden, check hupo nummer contact medewerker"
End Function

Public Function GetWFMForm(ByVal Workstepname, Viewer As WorkitemViewer) As Object
Dim AFDELING            As String

'   Per workstep/workset is bepaald welk custom form opgestart
'   moet worden. Via deze functie wordt dit form bepaald.
    If Not Viewer.Fields.Find("DOORZENDEN_NAAR") Is Nothing Then
            AFDELING = Viewer.Fields.Find("DOORZENDEN_NAAR").CALFormField.Value
    End If
    Workstepname = UCase(Workstepname)    'Prevent typo's
    Set GetWFMForm = Nothing
'   Voor nieuwe items via de workdesk aangemaakt. BV emails

'Q1 Release 2012 CR No. 153254 Dept Changes
''    If Workstepname = "NEW" And AFDELING = "AOV" Then Set GetWFMForm = New frmAOVBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "ARC" Then Set GetWFMForm = New frmARCRegistratie
    If Workstepname = "NEW" And AFDELING = "CWO" Then Set GetWFMForm = New frmWOBeoordDoc
    If Workstepname = "NEW" And AFDELING = "ECH" Then Set GetWFMForm = New frmECHBeoordDoc
    If Workstepname = "NEW" And AFDELING = "FEP" Then Set GetWFMForm = New frmALGBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "PIN" Then Set GetWFMForm = New frmEXCBeoordDoc
    If Workstepname = "NEW" And AFDELING = "GBA" Then Set GetWFMForm = New frmGBARegistratie
    If Workstepname = "NEW" And AFDELING = "KJW" Then Set GetWFMForm = New frmALGBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "PPN" Then Set GetWFMForm = New frmALGBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "PAC" Then Set GetWFMForm = New frmALGBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "PTA" Then Set GetWFMForm = New frmALGBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "PTB" Then Set GetWFMForm = New frmALGBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "PTC" Then Set GetWFMForm = New frmALGBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "PTD" Then Set GetWFMForm = New frmALGBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "FND" Then Set GetWFMForm = New frmALGBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "FVP" Then Set GetWFMForm = New frmALGBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "PPI" Then Set GetWFMForm = New frmALGBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "FAL" Then Set GetWFMForm = New frmALGBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "PTE" Then Set GetWFMForm = New frmALGBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "PTF" Then Set GetWFMForm = New frmALGBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "PTG" Then Set GetWFMForm = New frmALGBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "PTH" Then Set GetWFMForm = New frmALGBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "PTI" Then Set GetWFMForm = New frmALGBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "APP" Then Set GetWFMForm = New frmALGBeoordelenDoc  '[PAC] 17MAR15 - PTN --> APP - TD172461
    If Workstepname = "NEW" And AFDELING = "PTL" Then Set GetWFMForm = New frmALGBeoordelenDoc  '[PAC] - TD17266
    If Workstepname = "NEW" And AFDELING = "PTR" Then Set GetWFMForm = New frmALGBeoordelenDoc  '[PAC] - TD17266
    If Workstepname = "NEW" And AFDELING = "KLA" Then Set GetWFMForm = New frm_KLAAlgemeen
    If Workstepname = "NEW" And AFDELING = "DEB" Then Set GetWFMForm = New frmDEBBeoordelenDoc
    If Workstepname = "NEW" And AFDELING = "VOR" Then Set GetWFMForm = New frmVORBeoordDoc
    If Workstepname = "NEW" And Left(AFDELING, 4) = "INFO" Then Set GetWFMForm = New frmInfo
    If Workstepname = "REG10 REG PPN" Then Set GetWFMForm = New frmWORegistratie
    If Workstepname = "REG10 REG COLL" Then Set GetWFMForm = New frmWORegistratie
    If Workstepname = "REG11 RETOUR" Then Set GetWFMForm = New frmWORegistratie
    If Workstepname = "REG11 RETOUR POST" Then Set GetWFMForm = New frm_PostflowRetour
    If Workstepname = "REG13 REG EXCASSO" Then Set GetWFMForm = New frmEXCRegistratie
    If Workstepname = "REG14 REG OVL" Then Set GetWFMForm = New frmGBARegistratie
    If Workstepname = "REG15 REG FVP" Then Set GetWFMForm = New frmFVPRegistratie
    If Workstepname = "REG95 ARCHIEF" Then Set GetWFMForm = New frmARCRegistratie
    If Left(Workstepname, 5) = "34A01" Then Set GetWFMForm = New frm_OfferteBeoord
    If Left(Workstepname, 5) = "34A05" Then Set GetWFMForm = New frm_OffOnhWerk
    If Left(Workstepname, 5) = "50P01" Then Set GetWFMForm = New frm_Postflow
    If Left(Workstepname, 3) = "85A" Then Set GetWFMForm = New frm_KLAAlgemeen      'Klachten
    If Left(Workstepname, 5) = "85A15" Then Set GetWFMForm = New frm_KLAParkeren    'Klachten
    If Left(Workstepname, 5) = "85A45" Then Set GetWFMForm = New frm_KLAParkeren    'Klachten
    If Workstepname = "90A01 BEOORD. DOC." Then Set GetWFMForm = New frmECHBeoordDoc
    If Workstepname = "90A03 DIV. POST" Then Set GetWFMForm = New frmECHDivPost
    If Workstepname = "90A06 BEOORD. AANVR." Then Set GetWFMForm = New frmECHBeoordAanvraag
    If Workstepname = "90A10 PRK BEOORD." Then Set GetWFMForm = New frmECHPrkAanvraag
    If Workstepname = "90A25 BEREKENEN" Then Set GetWFMForm = New frmECHBerekenen
    If Left(Workstepname, 5) = "90A30" Then Set GetWFMForm = New frmECHContrBer
    If Workstepname = "90A42 MUT. CAESAR" Then Set GetWFMForm = New frmECHmutCAESAR
    If Workstepname = "90A50 CONTR. ADM" Then Set GetWFMForm = New frmECHContrAdm
    'RFC 13385 Rq.No 2 Forms for new worksets.*********************
    If Workstepname = "90A01 BEOORDDOC.AFD" Then Set GetWFMForm = New frmECHBeoordDoc
    If Workstepname = "90A01 BEOORDDOC.PER" Then Set GetWFMForm = New frmECHBeoordDoc
    If Workstepname = "90A01 BEOORDDOCTEAM" Then Set GetWFMForm = New frmECHBeoordDoc
    If Workstepname = "90A03 DIV.POST.AFD" Then Set GetWFMForm = New frmECHDivPost
    If Workstepname = "90A03 DIV.POST.PER" Then Set GetWFMForm = New frmECHDivPost
    If Workstepname = "90A03 DIV.POST.TEAM" Then Set GetWFMForm = New frmECHDivPost
    If Workstepname = "90A06 BEORDAANVRPER" Then Set GetWFMForm = New frmECHBeoordAanvraag
    If Workstepname = "90A06 BEORDAANVRAFD" Then Set GetWFMForm = New frmECHBeoordAanvraag
    If Workstepname = "90A06 BEORDAANVRTM" Then Set GetWFMForm = New frmECHBeoordAanvraag
    If Workstepname = "90A10 PRKBEORD.AFD" Then Set GetWFMForm = New frmECHPrkAanvraag
    If Workstepname = "90A10 PRKBEORD.PER" Then Set GetWFMForm = New frmECHPrkAanvraag
    If Workstepname = "90A10 PRKBEORD.TEAM" Then Set GetWFMForm = New frmECHPrkAanvraag
    If Workstepname = "90A25 BEREKENENAFD" Then Set GetWFMForm = New frmECHBerekenen
    If Workstepname = "90A25 BEREKENENPER" Then Set GetWFMForm = New frmECHBerekenen
    If Workstepname = "90A25 BEREKENENTEAM" Then Set GetWFMForm = New frmECHBerekenen
    If Workstepname = "90A42 MUT CAE.AFD" Then Set GetWFMForm = New frmECHmutCAESAR
    If Workstepname = "90A42 MUT CAE.PER" Then Set GetWFMForm = New frmECHmutCAESAR
    If Workstepname = "90A42 MUT CAE.TEAM" Then Set GetWFMForm = New frmECHmutCAESAR
    If Workstepname = "90A50 CONTR. AFD" Then Set GetWFMForm = New frmECHContrAdm
    If Workstepname = "90A50 CONTR. ADMPER" Then Set GetWFMForm = New frmECHContrAdm
    If Workstepname = "90A50 CONTR.ADMTEAM" Then Set GetWFMForm = New frmECHContrAdm
    '***************************************************************
    If Workstepname = "91A01 BEOORD DOC" Then Set GetWFMForm = New frmAOVBeoordelenDoc
    If Workstepname = "91A03 DIV. POST" Then Set GetWFMForm = New frmAOVDivPost
    If Workstepname = "91A04 PRK DIV. POST" Then Set GetWFMForm = New frmAOVDivPost
    If Workstepname = "91V02 BEOORD. VOLL." Then Set GetWFMForm = New frmAOVBeoordVoll
    If Workstepname = "91V05 CONTR. BEOORD." Then Set GetWFMForm = New frmAOVContrBeoord
    If Workstepname = "91V11 PRK VOLLEDIG" Then Set GetWFMForm = New frmAOVStukkenCompl
    If Workstepname = "91V17 VERZ BIJWERKEN" Then Set GetWFMForm = New frmAOVVerzekeringBijwerken
    If Workstepname = "91V17 BIJWERKEN TM" Then Set GetWFMForm = New frmAOVVerzekeringBijwerken
    If Workstepname = "91V17 BIJWERKEN CM" Then Set GetWFMForm = New frmAOVVerzekeringBijwerken
    If Workstepname = "91V30 AFH CAESAR" Then Set GetWFMForm = New frmAOVAfhCAESAR
    If Workstepname = "91V35 BEOORD MUT" Then Set GetWFMForm = New frmAOVBeoordMut
    If Workstepname = "91V40 PRK MOG" Then Set GetWFMForm = New frmAOVMOG
    If Workstepname = "91V52 CONTROLE" Then Set GetWFMForm = New frmAOVControle

    If Workstepname = "94A01 BEOORD DOC" Then Set GetWFMForm = New frmALGBeoordelenDoc
    If Left(Workstepname, 5) = "94A26" Then
        If IsCollAlg(Viewer.CALClientListItem.OpenedItem.Class) Then
            Set GetWFMForm = New frmFEPAlgemeen
        Else
            Set GetWFMForm = New frmFEPFiatteren
        End If
    End If
    If Workstepname = "94A46 VTU" Then
        If IsCollAlg(Viewer.CALClientListItem.OpenedItem.Class) Then
            Set GetWFMForm = New frmFEPAlgemeen
        Else
            Set GetWFMForm = New frmFEPVTU777
        End If
    End If

    If Workstepname = "94A21 AANV. RAET" Then Set GetWFMForm = New frmFEPBruAanv
    If Workstepname = "94A22 PRK AANV. BR." Then Set GetWFMForm = New frmParkeren
    If Workstepname = "94A03 DIV. POST" Then Set GetWFMForm = New frmFEPAlgemeen
    If Workstepname = "94A05 MUTATIES" Then Set GetWFMForm = New frmFEPAlgemeen
    If Workstepname = "94A06 PRK MUTATIES" Then Set GetWFMForm = New frmFEPAlgemeen
    If Workstepname = "94A10 KLACHT" Then Set GetWFMForm = New frmFEPAlgemeen
    If Workstepname = "94A11 PRK KLACHTEN" Then Set GetWFMForm = New frmFEPAlgemeen
    If Workstepname = "94A13 CORRESPOND" Then Set GetWFMForm = New frmFEPAlgemeen
    If Workstepname = "94A14 PRK CORRESPOND" Then Set GetWFMForm = New frmFEPAlgemeen
    If Workstepname = "94A16 VORDERINGEN" Then Set GetWFMForm = New frmVORconversie
    If Workstepname = "94A17 PRK VORDERING" Then Set GetWFMForm = New frmVORconversie
    If Workstepname = "94A47 BLOKKEREN" Then Set GetWFMForm = New frmFEPBlokkeren

'   [SaBl] 20080208 Beleggingskeuze formulier
    If Workstepname = "96A01 VERW BKF" Then Set GetWFMForm = New frmBKFopvoeren
    If Workstepname = "96A04 OPV. GARANTIE" Then Set GetWFMForm = New frmBKFgarantie
    If Workstepname = "96A05 AANMAK. BRF" Then Set GetWFMForm = New frmBKFmakenBrief

    If Workstepname = "97A06 OPVRAGEN GBA" Then Set GetWFMForm = GetFrmGBAOpvragen(Viewer)
    If Workstepname = "97A11 IN BEHANDELING" Then Set GetWFMForm = GetFrmGBAOpvragen(Viewer)

    If Workstepname = "98A01 BEOORD DIP" Or _
       Workstepname = "98A01 BEOORD DOC" Then Set GetWFMForm = New frmEXCBeoordDoc
    If Left(Workstepname, 10) = "98A03 DIV." And Workstepname <> "98A03 DIV. POSTERROR" Then
        Set GetWFMForm = New frmEXCDivPost
    End If
    If Workstepname = "98A04 PRK DIV. POST" Then Set GetWFMForm = New frmEXCDivPost
    If Workstepname = "98A15 CONTROLE BRIEF" Then Set GetWFMForm = New frmEXCContrBrief
    If Workstepname = "98A16 CONTR. UITK.F." Then Set GetWFMForm = New frmEXCContrUitkering
    If Workstepname = "98A21 BEOORD ONVINDB" Then Set GetWFMForm = New frmExcBeoordOnvindb
    If Workstepname = "98A22 PRK ONVINDB" Then Set GetWFMForm = New frmParkeren
    If Workstepname = "98A24 AFHAND ONVINDB" Then Set GetWFMForm = New frmEXCAfhandOnvindb
    If Workstepname = "98A25 ESCALATIES" Then
        Select Case Viewer.CALClientListItem.OpenedItem.Class
            Case "COLLOVL"
                 Set GetWFMForm = New frm_OVLBeoordelen
            Case "COLLPEN"
                 Set GetWFMForm = New frmPENEscalatie
        End Select
    End If
    If Left(Workstepname, 5) = "98A26" Then Set GetWFMForm = New frmEXCAfhandeling
    If Workstepname = "98A31 PRK AFHAND." Then Set GetWFMForm = New frmParkeren
    If Workstepname = "98A41 CONTR. ADM" Then Set GetWFMForm = New frmEXCContrAdm
    If Left(Workstepname, 5) = "98A46" Then Set GetWFMForm = New frmEXCFiatteren
    If Left(Workstepname, 5) = "98A51" Then Set GetWFMForm = New frmEXCBehandelenVoorschot  ''Q3 Release frmEXCBehandelen777 changed to frmEXCBehandelenVoorschot
    If Workstepname = "98A52 Prk Beh. Voors" Then Set GetWFMForm = New frmParkeren
    If Left(Workstepname, 5) = "98A53" Then Set GetWFMForm = New frmEXCControleVoorschot    ''Q3 Release frmEXCControle777 changed to frmEXCControleVoorschot
    If Left(Workstepname, 5) = "98A54" Then Set GetWFMForm = New frmEXCBewakenVoorschot  ''Q3 Release frmEXCBewaken777 changed to frmEXCBewakenVoorschot
    If Workstepname = "98A55 Prk Bew. Voors" Then Set GetWFMForm = New frmParkeren

    If Workstepname = "98O10 BEOORDELEN OVL" Then Set GetWFMForm = New frm_OVLBeoordelen
    If Workstepname = "98O12 PARKEREN OVL" Then Set GetWFMForm = New frmParkeren
    If Left(Workstepname, 5) = "98O14" Then Set GetWFMForm = New frm_OVLBeoordelen

    If Workstepname = "98K06 BEOORD. KAP." Then Set GetWFMForm = New FrmKAPBeoordKapitaal
    If Workstepname = "98K11 PRK BEOORD KAP" Then Set GetWFMForm = New frmKAPParkeren
    If Workstepname = "98K21 OFFERTE KAP" Then Set GetWFMForm = New frmKAPOfferteKap
    If Workstepname = "98K26 PRK. OFFERTE" Then Set GetWFMForm = New frmKAPParkeren
    If Workstepname = "98K36 BEH. REACTIE" Then Set GetWFMForm = New frmKapBehReactie2
    If Workstepname = "98K41 PRK REACTIE" Then Set GetWFMForm = New frmKAPParkeren
    If Workstepname = "98K46 MUT. CAESAR" Then Set GetWFMForm = New frmKAPMutCaesar
    If Workstepname = "98K51 UITSTEL EXP" Then Set GetWFMForm = New frmKAPUitstExp
    If Workstepname = "98K56 PRK UITSTEL" Then Set GetWFMForm = New frmKAPParkeren

    If Workstepname = "98C06 MACHTIGING" Then Set GetWFMForm = New frmPEN2cRegMacht
    If Workstepname = "98C16 BEOORD KEUZE" Then Set GetWFMForm = New frmPEN2cBeoordKeuze
    If Workstepname = "98C21 PRK KEUZE" Then Set GetWFMForm = New frmPEN2cParkKeuze
    If Workstepname = "98C26 INC.MACHT.OFF" Then Set GetWFMForm = New frmPEN2cIncMacht
    If Workstepname = "98C26 INC. MACHT." Then Set GetWFMForm = New frmPEN2cIncMacht
    If Workstepname = "98C28 INC.MACHT.ADM" Then Set GetWFMForm = New frmPEN2cIncMacht2
    If Workstepname = "98C31 CONTR. REMISE" Then Set GetWFMForm = New frmPEN2cIncMacht
    If Workstepname = "98C36 MAKEN OFFERTE" Then Set GetWFMForm = New frmPEN2cMakenOff
    If Workstepname = "98C38 PRK OFFERTE" Then Set GetWFMForm = New frmPEN2cParkKeuze
    If Workstepname = "98C46 MUTEREN CAESAR" Then Set GetWFMForm = New frmPEN2cMutCeasar

    If Workstepname = "98D10 BEOORDELEN DVL" Then Set GetWFMForm = New frm_DVLBeoordeLen
    If Workstepname = "98D12 PARKEREN DVL" Then Set GetWFMForm = New frmParkeren
    If Left(Workstepname, 5) = "98D14" Then Set GetWFMForm = New frm_DVLBeoordeLen

    If Workstepname = "98W01 BEHAND. WZP" Then Set GetWFMForm = New frmWzPBehandelen
    If Workstepname = "98W06 PRK. WZP" Then Set GetWFMForm = New frmParkeren
    If Workstepname = "98W16 CONTROLE BRIEF" Then Set GetWFMForm = New frmEXCContrBrief

    If Left(Workstepname, 5) = "98P07" Then Set GetWFMForm = New frmPENvoorbereiden
    If Workstepname = "98P08 PRK VOORB. PEN" Then Set GetWFMForm = New frmParkeren
    If Workstepname = "98P09 FIAT. VOORBER." Then Set GetWFMForm = New frmPENcontrVoorber
    If Workstepname = "98P16 VERZEND. BRIEF" Then Set GetWFMForm = New frmPENverzbrief
    If Workstepname = "98P21 BEP. RECHTEN" Then Set GetWFMForm = New frmPENBepRecht

    If Workstepname = "99A01 BEOORD DOC" Then Set GetWFMForm = New frmWOBeoordDoc
    If Workstepname = "99A03 DIV. POST" Then Set GetWFMForm = New frmWODivPost
    If Workstepname = "99A04 PRK DIV. POST" Then Set GetWFMForm = New frmWODivPost
    If Workstepname = "99A06 DEELN ONBEKEND" Then Set GetWFMForm = New frmWODeelnOnbekend
    If Workstepname = "99A30 VERW. MUT" Then Set GetWFMForm = New frmMUTVerwerken
    If Workstepname = "99A31 PARKEREN" Then Set GetWFMForm = New frmMUTparkeren
    If Workstepname = "99A32 AANSCHRIJVEN" Then Set GetWFMForm = New frmMUTAanschrijven
    If Workstepname = "99A33 FIATT.MUT" Then Set GetWFMForm = New frmMUTFiatteren
    If Workstepname = "99A35 VERW. BIJZ" Then Set GetWFMForm = New frmMUTBijz

    If Workstepname = "99B01 VOORBEREIDEN" Then Set GetWFMForm = New frmBWOVoorbereiden
    If Workstepname = "99B06 PARKEREN" Then Set GetWFMForm = New frmBWOParkeren
    If Workstepname = "99B21 MAKEN OFFERTE" Then Set GetWFMForm = New frmBWOMakenOfferte
    If Workstepname = "99B25 CONTR. OFFERTE" Then Set GetWFMForm = New frmBWOContrOfferte
    If Workstepname = "99B36 VRAGEN REMISE" Then Set GetWFMForm = New frmBWOVragenRemise
    If Workstepname = "99B41 REMISE" Then Set GetWFMForm = New frmBWORemise
    If Workstepname = "99B43 AANGEK REMISE" Then Set GetWFMForm = New frmBWOAangekondigdeRemise
    If Workstepname = "99B42 ONVOLL REMISE" Then Set GetWFMForm = New frmBWOActieRemise
    If Workstepname = "99B46 MUTEREN ADM" Then Set GetWFMForm = New frmBWOMuterenAdm
    If Workstepname = "99B48 PARKEREN MUT" Then Set GetWFMForm = New frmBWOParkeren
    If Workstepname = "99B51 CONTROLE ADM" Then Set GetWFMForm = New frmBWOControleAdm

    If Workstepname = "99U01 VOORBEREIDEN" Then Set GetWFMForm = New frmUWOVoorbereiden
    If Workstepname = "99U06 PARKEREN" Then Set GetWFMForm = New frmUWOParkeren
    If Workstepname = "99U16 MAKEN OPGAVE" Then Set GetWFMForm = New frmUWOMakenopgave
    If Workstepname = "99U18 CONTR. OPGAVE" Then Set GetWFMForm = New frmUWOContrOpgave
    If Workstepname = "99U26 MUTEREN ADM" Then Set GetWFMForm = New frmUWOMuterenAdm
    If Workstepname = "99U31 FIATTEREN VTU" Then Set GetWFMForm = New frmUWOFiatterenVTU
    If Left(Workstepname, 10) = "99U36 OPDR" Then Set GetWFMForm = New frmUWOOpdrachtBank
    If Left(Workstepname, 11) = "99U41 MAKEN" Then Set GetWFMForm = New frmUWOMakenBoeking
    If Workstepname = "99U46 CONTROLE ADM" Then Set GetWFMForm = New frmUWOControleAdm

    If Left(Workstepname, 3) = "07A" Then
        If Left(Workstepname, 5) = "07A01" Then
            Set GetWFMForm = New frmALGBeoordelenDoc
        Else
            Set GetWFMForm = New frmALGAlgemeen
        End If
    End If

    If Left(Workstepname, 3) = "10A" Then
        If Left(Workstepname, 5) = "10A01" Then
            Set GetWFMForm = New frmALGBeoordelenDoc
        Else
            Set GetWFMForm = New frmALGAlgemeen
        End If
    End If

    If Left(Workstepname, 3) = "20A" Then
        If Left(Workstepname, 5) = "20A01" Then
            Set GetWFMForm = New frmALGBeoordelenDoc
        Else
            Set GetWFMForm = New frmALGAlgemeen
        End If
    End If

    If Left(Workstepname, 3) = "33A" Then
        If Left(Workstepname, 5) = "33A01" Then
            Set GetWFMForm = New frmALGBeoordelenDoc
        Else
            Set GetWFMForm = New frmALGAlgemeen
        End If
    End If
    If Left(Workstepname, 3) = "33D" Then
         Set GetWFMForm = New frmDebAlgemeen
    End If
    If Left(Workstepname, 5) = "33M01" Then
        Set GetWFMForm = New frmALGMutaties
    End If
    If Left(Workstepname, 5) = "33M05" Then
        Set GetWFMForm = New frmMUTparkeren
    End If
'   MaBr Als generiek beoord doc dan even geen form
    If Left(Workstepname, 16) = "33A01 BEOORD DOC" Then
        Set GetWFMForm = Nothing
    End If

    If Right(Left(Workstepname, 5), 2) = "01" Then
        If Viewer.Fields.Find("IND_TRIGGER").CALFormField.Value = "INF" Then
            Set GetWFMForm = New frmInfoAntwoord
        End If
    End If

'   20070803 JAG Debiteurenflow start
'   Debiteuren
    If Left(Workstepname, 2) = "42" Or Left(Workstepname, 2) = "43" Or Left(Workstepname, 2) = "44" Then
        Set GetWFMForm = New frmDebAlgemeen
    End If
    If Left(Workstepname, 5) = "42A01" Then
        Set GetWFMForm = New frmDEBBeoordelenDoc
    End If
'   20070803 JAG Debiteurenflow end

'   Vorderingen start
'   SaBl 20080509
    If Left(Workstepname, 2) = "46" Then
        Set GetWFMForm = New frmVORAlgemeen
    End If
    If Left(Workstepname, 5) = "46A01" Then
        Set GetWFMForm = New frmVORBeoordDoc
    End If
'   Vorderingen end
End Function

Public Function GetNaamPens(name) As NaamPens
Dim i, BEGIN, leng      As Integer
Dim PensName

'   Bepaal puo gegevens aan de hand van de Naam
'   Vul de Pensnames tabel indien nog niet gevuld
    If PensNames.Count < 1 Then InitNaamPens
'   Zoek het juiste record op in de PensNames tabel
    For Each PensName In PensNames
        i = InStr(PensName, ";")
        If Mid(PensName, 1, i - 1) = name Then
            GetNaamPens.name = Mid(PensName, 1, i - 1)
            BEGIN = i + 1: i = InStr(BEGIN, PensName, ";"): leng = i - BEGIN
            GetNaamPens.InfoRegel = Mid(PensName, BEGIN, leng)
            BEGIN = i + 1: i = InStr(BEGIN, PensName, ";"): leng = i - BEGIN
            GetNaamPens.Postbus = Mid(PensName, BEGIN, leng)
            BEGIN = i + 1: i = InStr(BEGIN, PensName, ";"): leng = i - BEGIN
            GetNaamPens.PCPlaats = Mid(PensName, BEGIN, leng)
            BEGIN = i + 1: i = InStr(BEGIN, PensName, ";")
            GetNaamPens.Rekening = Mid(PensName, BEGIN)
        End If
    Next
End Function

Public Sub InitNaamPens()
Dim objRS               As adodb.Recordset
Dim strPUO              As String

    Set PensNames = New Collection
    PensNames.Add ";;;;"
    Set objRS = SQLGetPUOs
    While Not objRS.EOF
        strPUO = objRS("Naam") & ";"
        If Not IsNull(objRS("Inforegel")) Then
            strPUO = strPUO & objRS("Inforegel")
        Else
            strPUO = strPUO & " "
        End If
        strPUO = strPUO & ";" & objRS("Postbus") & ";" & objRS("PCPlaats") & ";" & objRS("Rekening")
        PensNames.Add strPUO
        objRS.MoveNext
    Wend
End Sub

Public Function GetKlant(KlantNr) As String
Dim i                   As Integer
Dim Klant               As Variant

    MsgBox "GetKlant(KlantNr) Not active anymore"
End Function

Public Function IsRendezvous(WorkStep) As Boolean
    IsRendezvous = False
    Select Case UCase(Left(WorkStep, 5))
        Case Is = "99B16"
             IsRendezvous = True
        Case Is = "99B26"
             IsRendezvous = True
        Case Is = "99B31"
             IsRendezvous = True
        Case Is = "99U21"
             IsRendezvous = True
        Case Is = "99A16"
             IsRendezvous = True
        Case Is = "98P26"
             IsRendezvous = True
        Case Is = "98P36"
             IsRendezvous = True
        Case Is = "98O21"
             IsRendezvous = True
        Case Is = "98O31"
             IsRendezvous = True
        Case Is = "98K31"
             IsRendezvous = True
        Case Is = "98C11"
             IsRendezvous = True
    End Select
End Function

Private Function GetFrmGBAOpvragen(WIViewer As WorkitemViewer) As Object
    Select Case WIViewer.CALClientListItem.OpenedItem.Class
        Case Is = "COLLPEN", "COLLOVL", "COLLWZP"
             Set GetFrmGBAOpvragen = New frmGBAExc
        Case Is = "COLLECH"
             Set GetFrmGBAOpvragen = New frmGBAEch
        Case Else
             Set GetFrmGBAOpvragen = New frmGBAUwo
    End Select
End Function
Attribute VB_Name = "Upload401"
Option Explicit

Public Function UploadCaesarBWO(ByVal objViewer As WFDWorkitem.WorkitemViewer) As Boolean
Dim strCsAang           As String
Dim strCsUp2            As String
Dim strDatumOverdr      As String
Dim strCircuitOud       As String
Dim strUpl              As String

    UploadCaesarBWO = False
    strCsAang = objViewer.Fields.Find("CAESAR_AANGEVULD").CALFormField.Value
    strCsUp2 = objViewer.Fields.Find("CAESAR_UP2").CALFormField.Value
    If strCsAang = "J" And strCsUp2 = "N" Then
    Else
'       Geen upload nodig
        UploadCaesarBWO = True
        Exit Function
    End If
'   Twee velden op basis waarvan twee andere velden gewijzigd moeten worden
    strDatumOverdr = objViewer.Fields.Find("DATUM_OVERDR").CALFormField.Value
    strCircuitOud = objViewer.Fields.Find("CIRCUIT_OUD").CALFormField.Value
'   Wijzig de twee velden
    objViewer.Fields.Find("DATUM_OVERDR1").CALFormField.Value = Format(strDatumOverdr, "yyyy-mm-dd")
    objViewer.Fields.Find("CIRCUIT_OUD1").CALFormField.Value = strCircuitOud
    objViewer.Save
'   Lees alle te exporteren velden en zet ze in een string variabele
    strUpl = objViewer.Fields.Find("NR_POLIS1").CALFormField.Value + ";"
    strUpl = strUpl + Format(objViewer.Fields.Find("MUT_DATUM").CALFormField.Value, "yyyy-mm-dd") + ";"
    strUpl = strUpl + "BWO;"
    strUpl = strUpl + objViewer.Fields.Find("VALUTA").CALFormField.Value + ";"
    strUpl = strUpl + Format(objViewer.Fields.Find("DATUM_OVERDR1").CALFormField.Value, "yyyy-mm-dd") + ";"
    strUpl = strUpl + objViewer.Fields.Find("CIRCUIT_OUD1").CALFormField.Value + ";"
    strUpl = strUpl + "099;"
    strUpl = strUpl + objViewer.Fields.Find("WO_REGULIER").CALFormField.Value + ";"
    strUpl = strUpl + objViewer.Fields.Find("WO_NIET_REG").CALFormField.Value + ";"
    strUpl = strUpl + objViewer.Fields.Find("WO_FICTIEF").CALFormField.Value + ";"
    strUpl = strUpl + "J;"
    strUpl = strUpl + objViewer.Fields.Find("BEP_VROUW").CALFormField.Value + ";;;;;;"
'   Creeer de upload file
    If (WriteUploadFile(strUpl) = "") Then
        UploadCaesarBWO = False
        Exit Function
    End If
'   Als er nu iets fout gaat valt niet alles terugdraaien en niet
'   doen of alles goed is gegaan.
    On Error Resume Next
    objViewer.Fields.Find("CAESAR_UP2").CALFormField.Value = "J"
    objViewer.Save
    UploadCaesarBWO = True
End Function

Public Function UploadCaesarUWO(ByVal objViewer As WFDWorkitem.WorkitemViewer) As Boolean
Dim strMutKlaar         As String
Dim strCsUp2            As String
Dim strCircuitNwReg1    As String
Dim dtDatUitgAand       As Date
Dim strUpl              As String

    UploadCaesarUWO = False
    strMutKlaar = objViewer.Fields.Find("MUT_KLAARGEZET").CALFormField.Value
    strCsUp2 = objViewer.Fields.Find("CAESAR_UP2").CALFormField.Value
    If strMutKlaar = "J" And strCsUp2 = "N" Then
    Else
'       Geen upload nodig
        UploadCaesarUWO = True
        Exit Function
    End If
'   Twee velden op basis waarvan twee andere velden gewijzigd moeten worden
    strCircuitNwReg1 = objViewer.Fields.Find("CIRCUIT_NW_REG").CALFormField.Value
    dtDatUitgAand = objViewer.Fields.Find("MUT_DATUM").CALFormField.Value
'   Wijzig de twee velden
    objViewer.Fields.Find("CIRCUIT_NW_REG").CALFormField.Value = strCircuitNwReg1
    objViewer.Fields.Find("DAT_UITGAAND").CALFormField.Value = Format(dtDatUitgAand, "yyyy-mm-dd")
    objViewer.Save
'   Lees alle te exporteren velden en zet ze in een string variabele
    strUpl = objViewer.Fields.Find("NR_POLIS1").CALFormField.Value + ";"
    strUpl = strUpl + Format(objViewer.Fields.Find("MUT_DATUM1").CALFormField.Value, "yyyy-mm-dd") + ";"
    strUpl = strUpl + "UWO;"
    strUpl = strUpl + objViewer.Fields.Find("VALUTA").CALFormField.Value + ";;;;;;;;;"
    strUpl = strUpl + Format(objViewer.Fields.Find("DAT_UITGAAND").CALFormField.Value, "yyyy-mm-dd") + ";"
    strUpl = strUpl + objViewer.Fields.Find("CIRCUIT_NW_REG1").CALFormField.Value + ";"
    strUpl = strUpl + "099;J;J;"
'   Creeer de upload file
    If (WriteUploadFile(strUpl) = "") Then
        UploadCaesarUWO = False
        Exit Function
    End If
'   Als er nu iets fout gaat valt niet alles terugdraaien en niet
'   doen of alles goed is gegaan.
    On Error Resume Next
    objViewer.Fields.Find("CAESAR_UP2").CALFormField.Value = "J"
    objViewer.Save
    UploadCaesarUWO = True
End Function

Public Function WriteUploadFile(strUpload As String) As String
Dim objFso              As Object
Dim objFile             As Object
Dim strFilename         As String

    On Error GoTo EH
    Err.Clear
    WriteUploadFile = ""
'   Bepaal een unieke bestandsnaam die nog niet bestaat in de
'   doel directory. Unieke naam wordt bepaald aan de hand van
'   datum en tijd.
'   Creeer voor alle zekerheid de Upload directory.
    If Not CreateFolder(dirCaesarUpload) Then
        Err.Raise vbObjectError + 513, "WriteUploadFile", "De CAESAR upload is NIET uitgevoerd!"
    End If
    Set objFso = CreateObject("Scripting.FileSystemObject")

CreateFileName:
    Err.Clear
    strFilename = objFso.GetTempName
    strFilename = Left$(strFilename, InStr(strFilename, ".tmp") - 1) + ".txt"
    strFilename = objFso.BuildPath(dirCaesarUpload, strFilename)
    Set objFile = objFso.CreateTextFile(strFilename, False)
    If Err Then GoTo CreateFileName
    objFile.WriteLine strUpload
    objFile.Close
    WriteUploadFile = strFilename
    Exit Function

EH:
'   Als file bestaat is het nummer 58.
    If Err.Number = 70 Or Err.Number = 58 Then
        Resume Next
    End If
    Err.Description = Err.Description + ". De CAESAR upload wordt afgebroken."
    DisplayError "WriteUploadFile"
End Function

Public Function UploadCaesarPartBWO(ByVal objViewer As WFDWorkitem.WorkitemViewer) As Boolean
Dim strMutKlaar         As String
Dim strCsUp1            As String
Dim strDatOpnReg        As String
Dim strNrPolis          As String
Dim strUpl              As String

    On Error GoTo EH
    Err.Clear
    UploadCaesarPartBWO = False
    strMutKlaar = objViewer.Fields.Find("MUT_KLAARGEZET").CALFormField.Value
    strCsUp1 = objViewer.Fields.Find("CAESAR_UP1").CALFormField.Value
    strDatOpnReg = objViewer.Fields.Find("DAT_OPN_REG").CALFormField.Value
    If strMutKlaar = "J" And strCsUp1 = "N" Then
    Else
'       Geen upload noodzakelijk
        UploadCaesarPartBWO = True
        Exit Function
    End If
    If strDatOpnReg = Empty Then
'       Geen upload mogelijk
        Err.Raise vbObjectError + 513, "UploadCaesarBWO", "Opname regeling is niet ingevuld. Upload naar CAESAR wordt afgebroken."
    End If
'   Lees nr polis
    strNrPolis = objViewer.Fields.Find("NR_POLIS").CALFormField.Value
'   Wijzig de twee velden
    objViewer.Fields.Find("NR_POLIS1").CALFormField.Value = strNrPolis
    objViewer.Fields.Find("MUT_DATUM").CALFormField.Value = Format(strDatOpnReg, "yyyy-mm-dd")
    objViewer.Save
'   Lees alle te exporteren velden en zet ze in een string variabele
    strUpl = objViewer.Fields.Find("NR_POLIS1").CALFormField.Value + ";"
    strUpl = strUpl + Format(objViewer.Fields.Find("MUT_DATUM").CALFormField.Value, "yyyy-mm-dd") + ";"
    strUpl = strUpl + "BWO;;;;;;;;;;;;;;;"
'   Creeer de upload file
    If (WriteUploadFile(strUpl) = "") Then
        UploadCaesarPartBWO = False
        Exit Function
    End If
'   Als er nu iets fout gaat valt niet alles terugdraaien en niet
'   doen of alles goed is gegaan.
    On Error Resume Next
    objViewer.Fields.Find("CAESAR_UP1").CALFormField.Value = "J"
    objViewer.Save
    UploadCaesarPartBWO = True
    Exit Function

EH:
    DisplayError "UploadCaesarPartBWO"
End Function

Public Function UploadCaesarPartUWO(ByVal objViewer As WFDWorkitem.WorkitemViewer) As Boolean
Dim strCsMut            As String
Dim strCsUp1            As String
Dim strMutDat           As String
Dim strNrPolis          As String
Dim strUpl              As String

    On Error GoTo EH
    Err.Clear
    UploadCaesarPartUWO = False
    strCsMut = objViewer.Fields.Find("CAESAR_MUTATIE").CALFormField.Value
    strCsUp1 = objViewer.Fields.Find("CAESAR_UP1").CALFormField.Value
    strMutDat = Format(objViewer.Fields.Find("MUT_DATUM").CALFormField.Value, "yyyy-mm-dd")
    If strCsMut = "J" And strCsUp1 = "N" Then
    Else
'       Geen upload noodzakelijk
        UploadCaesarPartUWO = True
        Exit Function
    End If
    If strMutDat = Empty Then
'       Geen upload mogelijk
        Err.Raise vbObjectError + 513, "UploadCaesarUWO", "Mutatie datum is niet ingevuld. Upload naar CAESAR wordt afgebroken."
    End If
'   Lees nr polis
    strNrPolis = objViewer.Fields.Find("NR_POLIS").CALFormField.Value
'   Wijzig de twee velden
    objViewer.Fields.Find("NR_POLIS1").CALFormField.Value = strNrPolis
    objViewer.Fields.Find("MUT_DATUM1").CALFormField.Value = Format(strMutDat, "yyyy-mm-dd")
    objViewer.Save
'   Lees alle te exporteren velden en zet ze in een string variabele
    strUpl = objViewer.Fields.Find("NR_POLIS1").CALFormField.Value + ";"
    strUpl = strUpl + Format(objViewer.Fields.Find("MUT_DATUM1").CALFormField.Value, "yyyy-mm-dd") + ";"
    strUpl = strUpl + "UWO;;;;;;;;;;;;;;;"
'   Creeer de upload file
    If (WriteUploadFile(strUpl) = "") Then
        UploadCaesarPartUWO = False
        Exit Function
    End If
'   Als er nu iets fout gaat valt niet alles terugdraaien en niet
'   doen of alles goed is gegaan.
    On Error Resume Next
    objViewer.Fields.Find("CAESAR_UP1").CALFormField.Value = "J"
    objViewer.Save
    UploadCaesarPartUWO = True
    Exit Function

EH:
    DisplayError "UploadCaesarPartUWO"
End Function
Attribute VB_Name = "Viewers"
Attribute VB_Base = "0{8353EB56-8F1A-11D3-8049-00A024E9EEA6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Public blnImportReadOnly As Boolean

Private Sub Viewers_AfterNoteEdit(ByVal objWorkitemViewer As WFDWorkitem.WorkitemViewer, ByVal lngOrdinal As Long, ByVal lngEditType As WFDWorkitem.WDONoteEditConstants)
    On Error GoTo EH
    If lngEditType = wdoNoteEditText Then
        If InStr(objWorkitemViewer.CALClientListItem.OpenedItem.Notes.item(lngOrdinal).Text, "Door:") = 0 Then
            objWorkitemViewer.CALClientListItem.OpenedItem.Notes.item(lngOrdinal).Text = objWorkitemViewer.CALClientListItem.OpenedItem.Notes.item(lngOrdinal).Text & vbCrLf & "Door: " & CALGetUserVar("MyHupo1", CALClient.username)
        End If
        objWorkitemViewer.CALClientListItem.OpenedItem.Notes.item(lngOrdinal).Text = Replace(objWorkitemViewer.CALClientListItem.OpenedItem.Notes.item(lngOrdinal).Text, "<Voer hier uw tekst in>", "")
    End If
    Exit Sub

EH:
    DisplayError "Viewers_AfterNoteEdit"
End Sub

Private Sub Viewers_AfterWorkitemViewerOpen(ByVal objWorkitemViewer As WFDWorkitem.WorkitemViewer)
'   Nadat de viewer is geopend wordt eventueel een custom form geopend
'   Alleen als het item uit workflow en gelockt is
    On Error GoTo EH
    If GetWorkstep(objWorkitemViewer) <> "" Then
        If ((objWorkitemViewer.CALClientListItem.Info.Status And calObjStatusReserved) = calObjStatusReserved) Then
            Call WorkflowOpen(objWorkitemViewer)
        Else
            If objWorkitemViewer.ObjType = calObjTypeDocument Then
                MsgBox "Het WFM formulier wordt niet getoond omdat het document niet wijzigbaar is. Indien U het document wel wilt verwerken dient u het document te sluiten en eerst het document te reserveren. Daarna kunt het document weer openen "
            End If
            If objWorkitemViewer.ObjType = calObjTypeFolder Then
                MsgBox "Het WFM formulier wordt niet getoond omdat de map niet wijzigbaar is. Indien U de map wel wilt verwerken dient u de map te sluiten en eerst te reserveren. Daarna kunt u de map weer openen "
            End If
        End If
    End If
    Exit Sub

EH:
    DisplayError "Viewers_AfterWorkitemViewerOpen"
End Sub

Private Sub Viewers_BeforeContentsItemOpen(ByVal objWorkitemViewer As WFDWorkitem.WorkitemViewer, ByVal objContentsItem As WFDWorkitem.ContentsItem, blnCancel As Boolean)
Dim objWorkstepList     As CALWorkitemWorkstepList

    On Error GoTo EH
    blnImportReadOnly = False
    If objContentsItem.ItemType = wdoObjTypeFolderChild Or _
       objContentsItem.ItemType = wdoObjTypeDocumentImport Then
        If objContentsItem.CALObject.Class = "XMLDATA" Then
            Set frmNotitie.rsViewer = objWorkitemViewer
            frmNotitie.Show 1
            blnCancel = True
            Exit Sub
        End If
'       IMPORT mag niet gewijzigd worden als folder uit workflow is.
'       Workitem viewer niet standaard openen, maar readonly (reserve wordt disabled)
        If objContentsItem.CALObject.Class = "IMPORT" Then
            If objWorkitemViewer.CALClientListItem.Info.Type = calObjTypeFolder Then
                If objWorkitemViewer.CALClientListItem.Info.Status <> 19 Then
                    MsgBox "Folder niet uit workflow geopend"
                    blnImportReadOnly = True
                    blnCancel = True
                    objWorkitemViewer.OpenChildViewer objContentsItem.Ordinal, wdoOpenViewerRemoveAfterClose, wdoOpenReadOnly
                End If
            End If
        End If
    End If
    Exit Sub

EH:
    DisplayError "Viewers_BeforeContentsItemOpen"
End Sub

Private Sub Viewers_BeforeWorkitemViewerClose(ByVal objWorkitemViewer As WFDWorkitem.WorkitemViewer, blnCancel As Boolean)
Dim item                As ContentsItem
Dim ChildViewer         As WorkitemViewer
Dim ctlFormfield        As CALFormField

    On Error GoTo EH
'   Clear eventuele wordsessie
    If objWorkitemViewer.id = WordSessie.objId Then
        Call WordSessie.WRDRelease
    End If
    If objWorkitemViewer.id = ExcelSessie.objId Then
        Call ExcelSessie.EXCELRelease
    End If
    Call WorkflowClose(objWorkitemViewer)
'   Clear eventuele link naar email
    golOutlook.DeleteViewerEmailLink objWorkitemViewer
'   Clear eventuele registry settings ivm geopende Emails
    If ReplyFolderID = objWorkitemViewer.id Or ReplyObjectID = objWorkitemViewer.id Then
        golOutlook.ClearWFMOpenedEmailRegistrySettings
        ReplyFolderID = ""
        ReplyObjectID = ""
    End If
    DetectAndKillNotepad
'   Sluit viewers van alle openstaande documenten in map
    For Each item In objWorkitemViewer.Contents.Items
        If item.ItemType = wdoObjTypeFolderChild Then
            If item.CALObject.Info.Type <> calObjTypeImport Then
                Set ChildViewer = Viewers.FindViewer(item.CALObject.Info.objId)
                If Not ChildViewer Is Nothing Then
'                   Mabr 5-11-2003                ChildViewer.RemoveAfterClose
                    ChildViewer.TryClose (wdoCloseWorkitem)
                End If
            End If
        End If
    Next
    Exit Sub

EH:
    DisplayError "BeforeWorkItemViewerClose"
End Sub

Private Sub Viewers_CommandBarClicked(ByVal objWorkitemViewer As WFDWorkitem.WorkitemViewer, ByVal CommandBarControl As WFDCommon.WDOCommandBarControl, blnCancel As Boolean)
Dim Menu
Dim ObjEmail            As Outlook.MailItem

    On Error GoTo EH
    Select Case CommandBarControl.name
        Case Is = "NewNote"
             Set frmNotitie.rsViewer = objWorkitemViewer
             frmNotitie.Show 1
             blnCancel = True
        Case Is = "Save"
             If ((objWorkitemViewer.CALClientListItem.Info.Status And calObjStatusNew) = calObjStatusNew) Then
                SaveNewItem objWorkitemViewer
                blnCancel = True
             End If
        Case Is = "NewDocument"
             Call NewDocumentInFolder(objWorkitemViewer)
             blnCancel = True
        Case Is = "SendToMailbox"
             Call sendtomailbox(objWorkitemViewer)
             blnCancel = True
        Case Is = mnuHelp
             Help
        Case Is = "About"
             AEAbout.Show 1
             blnCancel = True
        Case Is = mnuNotities
             Set frmNotitie.rsViewer = objWorkitemViewer
             If Not ((objWorkitemViewer.CALClientListItem.Info.Status And calObjStatusWIP) = calObjStatusWIP) Then
                frmNotitie.lblAddNote.Enabled = False
             End If
             frmNotitie.Show 1
             blnCancel = True
        Case Is = mnuSaveEmail
             golOutlook.SaveEmailInWorkflow , objWorkitemViewer
        Case Is = mnuAttachAll
             Set ObjEmail = golOutlook.GetMailItem(objWorkitemViewer)
             If ObjEmail Is Nothing Then
                MsgBox "WFM kan uw email niet vinden, deze mag niet gesloten worden tijdens het toevoegen van attachments. Maak vanuit deze WFM folder eventueel een nieuw Emailbericht aan."
             End If
             If Not ObjEmail Is Nothing Then
                Call golOutlook.AttachAll(objWorkitemViewer, objWorkitemViewer.CALClientListItem, ObjEmail)
                ObjEmail.Save
                ObjEmail.Display
             End If
             Set ObjEmail = Nothing
        Case Is = mnuAttachDocument
             If objWorkitemViewer.Contents.SelectedItems.Count <> 1 Then
                MsgBox "Selecteer 1 document", vbApplicationModal + vbInformation + vbOKOnly, "AttachDocument"
                Exit Sub
             End If
             Set ObjEmail = golOutlook.GetMailItem(objWorkitemViewer)
             If ObjEmail Is Nothing Then
                Set ObjEmail = golOutlook.SelectDraftMailItem(objWorkitemViewer)
             End If
             If Not ObjEmail Is Nothing Then
                Call golOutlook.AttachItem(objWorkitemViewer, ObjEmail)
                ObjEmail.Save
                ObjEmail.Display
             End If
             Set ObjEmail = Nothing
        Case Is = mnuCreateEmail
             Call golOutlook.CreateEmail(objWorkitemViewer)
        Case Is = mnuEscaleren
             Call Escalatie(objWorkitemViewer, "Escalaties")
        Case Is = mnuEscalerenRV
             Call escalatieRVItem(objWorkitemViewer)
        Case mnuExportDoc       '[PAC] 15DEC09
             Call subExportTIFF(objWorkitemViewer)
        Case Is = mnuVerplaatsen
             Call Verplaatsen(objWorkitemViewer)
        Case Is = mnuBijzonderheden
             Call CheckOpUitzondering(objWorkitemViewer)
        Case Is = mnuEmail
             If (objWorkitemViewer.Fields.Find("DOCTYPE").CALFormField.Value = "INF Informatieverzoek") Then
                MsgBox "Het is niet mogelijk om documenten in een informatie-verzoek te plaatsen", vbApplicationModal + vbInformation + vbOKOnly, "Word"
             Else
                Call golOutlook.CreateEmail(objWorkitemViewer)
             End If
        Case Is = mnuAdd2Email
             Call golOutlook.Add2Email(objWorkitemViewer)
        Case Is = mnuWord
             If (objWorkitemViewer.Fields.Find("DOCTYPE").CALFormField.Value = "INF Informatieverzoek") Then
                MsgBox "Het is niet mogelijk om documenten in een informatie-verzoek te plaatsen", vbApplicationModal + vbInformation + vbOKOnly, "Word"
             Else
                Call StartBrief(objWorkitemViewer, "Word")
             End If
             On Error GoTo EH
        Case Is = mnuExcel
             If (objWorkitemViewer.Fields.Find("DOCTYPE").CALFormField.Value = "INF Informatieverzoek") Then
                MsgBox "Het is niet mogelijk om documenten in een informatie-verzoek te plaatsen", vbApplicationModal + vbInformation + vbOKOnly, "Excel"
             Else
                StartWorkbook objWorkitemViewer
             End If
        Case Is = mnuInfo
             WorkflowSave objWorkitemViewer
             Call NewInfo(objWorkitemViewer)
        Case Is = mnuBehandelen
             Call OpenWFMForm(objWorkitemViewer)
        Case Is = mnuPrintSetup
             On Error Resume Next
             PrintPage.PrintSetup.ShowPrinter
        Case Is = mnuPrint
             PrintNoteofAll objWorkitemViewer
        Case Is = mnuFoutVerzonden
             RenameDocument objWorkitemViewer, FoutWelVerzonden
        Case Is = mnuFoutNietVerzonden
             RenameDocument objWorkitemViewer, FoutNietVerzonden
        Case Is = mnuHernoem
             RenameDocument objWorkitemViewer
        Case Is = mnuDeelnKLant
             OpenDeelnKlant objWorkitemViewer
        Case Is = mnuDoorzenden
             Doorzenden objWorkitemViewer
        Case Is = mnuWeerBehandelen
             WeerBehandelen objWorkitemViewer
        Case Else
             For Each Menu In ViewerSecList
                If CommandBarControl.name = Menu Then blnCancel = True
             Next
    End Select
    Exit Sub

EH:
    DisplayError "Viewer Command"
End Sub

Private Sub Viewers_ContentsSelectionChange(ByVal objWorkitemViewer As WFDWorkitem.WorkitemViewer)
    On Error Resume Next
    If objWorkitemViewer.Contents.SelectedItems.Count = 1 Then
        If objWorkitemViewer.Contents.SelectedItems.item(1).ItemType = wdoObjTypeFolderChild Then
            If objWorkitemViewer.Contents.SelectedItems.item(1).CALObject.Info.Type = calObjTypeDocument Then
                objWorkitemViewer.Commandbars.Controls(mnuHernoem).Enabled = True
                objWorkitemViewer.Commandbars.Controls(mnuFoutNietVerzonden).Enabled = True
                objWorkitemViewer.Commandbars.Controls(mnuFoutVerzonden).Enabled = True
                Exit Sub
            End If
        End If
    End If
    objWorkitemViewer.Commandbars.Controls(mnuHernoem).Enabled = False
    objWorkitemViewer.Commandbars.Controls(mnuFoutNietVerzonden).Enabled = False
    objWorkitemViewer.Commandbars.Controls(mnuFoutVerzonden).Enabled = False
End Sub

Private Sub Viewers_FieldLostFocus(ByVal objWorkitemViewer As WFDWorkitem.WorkitemViewer, ByVal objField As WFDWorkitem.Field, ByVal intColumn As Integer, ByVal intRow As Integer)
Dim ctlFormfield        As CALFormField

    On Error Resume Next
    If ((objWorkitemViewer.CALClientListItem.Info.Status And calObjStatusReserved) = calObjStatusReserved) And _
       objField.name = "NR_AEGAR" Then
        Set ctlFormfield = objField.CALFormField
        If Len(ctlFormfield) < ctlFormfield.Info.Length Then
            ctlFormfield = Format(Val(ctlFormfield), String(ctlFormfield.Info.Length, "#"))
            If ctlFormfield <> Empty And Val(ctlFormfield) <> 0 Then
                ctlFormfield = Format(Val(ctlFormfield), String(ctlFormfield.Info.Length, "0"))
            End If
        End If
    End If
    Set ctlFormfield = Nothing
End Sub

Private Sub Viewers_WorkitemViewerInitialize(ByVal objWorkitemViewer As WFDWorkitem.WorkitemViewer)
Dim objField            As Field
Dim i                   As Integer
Dim A                   As Variant
Dim fld                 As CALFormField

    On Error GoTo EH
    InitViewerMenu objWorkitemViewer
    For Each objField In objWorkitemViewer.Fields
        If (objField.CALFormField.Info.Prompt <> "") Then
            objField.Caption = objField.CALFormField.Info.Prompt
        End If
    Next objField
    If blnImportReadOnly Then
        objWorkitemViewer.Commandbars.Controls("Reserve").Enabled = False
    End If
    objWorkitemViewer.ActiveTab = objWorkitemViewer.Tabs.item(wdoWorkitemTabNotes)
    Exit Sub

EH:
    DisplayError "Workitemviewerinitialize"
End Sub

Private Sub Viewers_AfterContentsItemOpen(ByVal objWorkitemViewer As WFDWorkitem.WorkitemViewer, ByVal objContentsItem As WFDWorkitem.ContentsItem, ByVal objChildViewer As Object)
Dim item                As CALFolderChild
Dim item2               As CALFolder
Dim myViewer            As Object
Dim myImport            As CALDocumentImport
Dim myPage              As CALPage
Dim myImportViewer      As ImportViewer
Dim myPageViewer        As PageViewer
Dim ContentsItem        As ContentsItem
Dim OnlyPages           As Boolean
Dim EmailBerichtGeopend As Boolean
Dim objEmailZaakId      As String

    EmailBerichtGeopend = False
    objEmailZaakId = ""
    On Error GoTo EH
    If objContentsItem.ItemType = wdoObjTypeFolderChild Then
        Set myViewer = objChildViewer
        If objChildViewer.CALClientListItem.Info.Type = calObjTypeImport Then
            Exit Sub
        End If
'       Controleer of er alleen pages in staan
        If myViewer.Contents.Items.Count > 0 Then
            OnlyPages = True
        End If
        For Each ContentsItem In myViewer.Contents.Items
            If ContentsItem.ItemType <> wdoObjTypePage Then
                OnlyPages = False
            End If
        Next
'       Handmatig geopend Emailtje link leggen tussen parent (Folder) en child (object).
        ReplyFolderID = objWorkitemViewer.id
        ReplyObjectID = myViewer.id
'       Automatisch de inhoud (item) tonen
        If myViewer.Contents.Items.Count = 1 Or OnlyPages Then
            Select Case myViewer.Contents.Items.item(1).ItemType
                Case Is = wdoObjTypeFolderChild
                Case Is = wdoObjTypePage
                     Set myPage = myViewer.Contents.Items.item(1).CALObject
                     myViewer.WindowState = wdoWindowStateMinimized
                    If myViewer.PageViewers.Count > 0 Then
                       myViewer.PageViewers.item(myViewer.Contents.Items.item(1).Ordinal).BringToTop
                    Else
                       myViewer.PageViewers.OpenPageViewer (myViewer.Contents.Items.item(1).Ordinal)
                    End If
                Case Is = wdoObjTypeDocumentImport
                     Set myImport = myViewer.Contents.Items.item(1).CALObject
                     If myImport.Class = "XMLDATA" Then
                        Set frmNotitie.rsViewer = objWorkitemViewer
                        frmNotitie.Show 1
                        Exit Sub
                     End If
                     If myImport.Class = "EMAIL_MSG" Then
                        EmailBerichtGeopend = True
                        objEmailZaakId = objWorkitemViewer.id
                     End If
                     Set myImportViewer = Viewers.ImportViewers.Find(myViewer.Contents.Items.item(1).Ordinal)
                     If myImportViewer Is Nothing Then
                        myViewer.WindowState = wdoWindowStateMinimized
                        myViewer.OpenImportViewer myViewer.Contents.Items.item(1).Ordinal
                        If myImport.Class = "Excel" Then
                            StartWorkbook objWorkitemViewer
                        End If
                     End If
            End Select
        End If
    End If
'   Item viewer, geen object viewer
'   Controleren op Email, indien handmatig geopend.
'   Als er meerdere items in het object zitten, wordt er niets automtisch geopend.
    If objContentsItem.ItemType = wdoObjTypeDocumentImport Then
        If objChildViewer.Class = "EMAIL_MSG" Then
            If ReplyObjectID = objWorkitemViewer.id Then
                EmailBerichtGeopend = True
                objEmailZaakId = ReplyFolderID
            End If
        End If
    End If
'   Geopend Emailbericht zaakcredentials meegeven
    If EmailBerichtGeopend = True Then WFMGeopendEmailMarkeren objWorkitemViewer, objEmailZaakId
    Exit Sub

EH:
    DisplayError "AftercontentsItemOpen"
End Sub

Private Sub WFMGeopendEmailMarkeren(ByVal objEmailWorkitemViewer As WFDWorkitem.WorkitemViewer, ByVal objEmailZaakId As String)
Dim myOutlook           As Outlook.Application
Dim ObjWFMEmail         As Outlook.MailItem
Dim myObjectID          As String
Dim DLNnr               As String

    ffWachten 4
    On Error Resume Next
    golOutlook.ClearWFMOpenedEmailRegistrySettings
    Set myOutlook = CreateObject("Outlook.Application")
    Set ObjWFMEmail = myOutlook.ActiveInspector.CurrentItem
'   Registrysettings wegschrijven
    myObjectID = objEmailZaakId
    DLNnr = CALGetFieldValue(objEmailWorkitemViewer.CALClientListItem.OpenedItem, "NR_POLIS")
    SaveSetting "ORIGIN", "Outlook", "WFMOpenedEmailTopic", ObjWFMEmail.ConversationTopic   'Belangrijk, deze maakt het mailtje "uniek".
    SaveSetting "ORIGIN", "Outlook", "WFMOpenedEmailObjectID", myObjectID
    SaveSetting "ORIGIN", "Outlook", "WFMOpenedEmailDLNNR", DLNnr
End Sub

Private Sub ffWachten(PauseTime As Integer)
Dim Start, Finish, TotalTime

    Start = Timer                   ' Set start time.
    Do While Timer < Start + PauseTime
        DoEvents                    ' Yield to other processes.
    Loop
    Finish = Timer                  ' Set end time.
    TotalTime = Finish - Start      ' Calculate total time.
End Sub

Private Sub subExportTIFF(ByVal vWIViewer As WFDWorkitem.WorkitemViewer)
Dim oContentsItem       As WFDWorkitem.ContentsItem
Dim oFolder             As CALFolder
Dim oChild              As CALFolderChild
Dim oChildItem          As CALClientListItem
Dim oObject             As Object
Dim sPath               As String
Dim sPrefix             As String
Dim bDocProcessed       As Boolean

    On Error GoTo ERR_EXPTIIF
    Select Case vWIViewer.ObjType
        Case calObjTypeFolder
             bDocProcessed = False
             Set oFolder = vWIViewer.CALClientListItem.OpenedItem
             PrintPage.PrintSetup.Filter = "Multipage TIFF (*.TIF)|*.TIF|Singlepage TIFF (*.TIF)|*.TIF"
             'eerste keer op Multipage zetten. Hierna laatste waarde gebruiken
             PrintPage.PrintSetup.FilterIndex = 1
             For Each oContentsItem In vWIViewer.Contents.Items
                If oContentsItem.ItemSelected = True Then
                    If Not bDocProcessed Then
                        PrintPage.PrintSetup.CancelError = True
                        PrintPage.PrintSetup.FileName = vWIViewer.name
                        PrintPage.PrintSetup.Filter = "Multipage TIFF (*.TIF)|*.TIF|Singlepage TIFF (*.TIF)|*.TIF"
                        PrintPage.PrintSetup.FilterIndex = 1
                        PrintPage.PrintSetup.ShowSave
                        sPath = PrintPage.PrintSetup.FileName
                        sPrefix = PrintPage.PrintSetup.FileTitle
                        sPath = Left(sPath, InStr(sPath, sPrefix) - 1)
                        sPrefix = Left(sPrefix, Len(sPrefix) - 4)
                    End If

                    Set oChild = oFolder.Children.AllItems.item(oContentsItem.Ordinal)
                    Set oChildItem = CALClient.ClientList.Find(oChild.Info.objId)
                    If oChildItem Is Nothing Then
                        Set oChildItem = Application.CALClient.ClientList.Add(oChild.Info.objId, calAddDomainOnly)
                    End If
                    If (oChildItem.Info.Status And calObjStatusOpen) = calObjStatusOpen Then
                        oChildItem.OpenedItem.Close calCloseAbortChanges
                    End If
                    Set oObject = oChildItem.Open(calOpenReadOnly)
                    If PrintPage.PrintSetup.FilterIndex = 1 Then
                        Call subExportAllMultiPage(oChildItem, sPath, sPrefix & Right("00" & CStr(oContentsItem.Ordinal), 2))
                    Else
                        Call subExportAll(oChildItem, sPath, sPrefix & Right("00" & CStr(oContentsItem.Ordinal), 2))
                    End If
                    oObject.Close calOpenReadOnly
                    Application.CALClient.ClientList.Remove oChildItem
                    Set oObject = Nothing
                    Set oChildItem = Nothing
                    Set oChild = Nothing
                    
                    bDocProcessed = True
                End If
             Next
             Set oFolder = Nothing
             If Not bDocProcessed Then MsgBox "Geen Document geselecteerd."
        Case calObjTypeDocument
             PrintPage.PrintSetup.CancelError = True
             PrintPage.PrintSetup.FileName = vWIViewer.name
             PrintPage.PrintSetup.Filter = "Multipage TIFF (*.TIF)|*.TIF|Singlepage TIFF (*.TIF)|*.TIF"
             PrintPage.PrintSetup.FilterIndex = 1
             PrintPage.PrintSetup.ShowSave
             sPath = PrintPage.PrintSetup.FileName
             sPrefix = PrintPage.PrintSetup.FileTitle
             sPath = Left(sPath, InStr(sPath, sPrefix) - 1)
             sPrefix = Left(sPrefix, Len(sPrefix) - 4)
             If PrintPage.PrintSetup.FilterIndex = 1 Then
                Call subExportAllMultiPage(vWIViewer.CALClientListItem, sPath, sPrefix)
             Else
                Call subExportAll(vWIViewer.CALClientListItem, sPath, sPrefix)
            End If
        Case Else
             MsgBox "Geen Folder of Document gekozen."
    End Select
    Exit Sub

ERR_EXPTIIF:
    If Err.Number <> 32755 Then DisplayError "subExportTIFF"
End Sub

Public Sub subExportAll(vClientLI As CALClientListItem, vPath As String, vPrefix As String)
Dim oDocument           As CALDocument
Dim oPages              As CALPages
Dim oPage               As CALPage
Dim TmpFile             As String
Dim iPage               As Integer

    On Error Resume Next
    If vClientLI.Info.Type = calObjTypeDocument Then
        PrintPage.MousePointer = fmMousePointerHourGlass
        DoEvents
        Kill vPath & vPrefix & "_*.tif"
        Set oDocument = vClientLI.OpenedItem
'       Exporteer Pagina's indien aanwezig
        Set oPages = oDocument.pages
        If oPages.Count > 0 Then
            iPage = 0
            For Each oPage In oPages
                iPage = iPage + 1
                TmpFile = vPath & vPrefix & "_" & Right("000" & CStr(iPage), 3) & ".tif"
                oPage.GetPage TmpFile, calGetPageOverwriteExisting
            Next
        End If
        Set oPages = Nothing
        PrintPage.MousePointer = fmMousePointerDefault
    End If
    Exit Sub

ERR_EXPORT:
    DisplayError "subExportAll"
    Resume Next
End Sub

Public Sub subExportAllMultiPage(vClientLI As CALClientListItem, vPath As String, vPrefix As String)
Dim oDocument           As CALDocument
Dim oPages              As CALPages
Dim oPage               As CALPage
Dim TmpFile             As String
Dim iPage               As Integer
Dim bAllLegacy          As Boolean

    On Error Resume Next
    If vClientLI.Info.Type = calObjTypeDocument Then
        PrintPage.MousePointer = fmMousePointerHourGlass
        DoEvents
        Kill vPath & vPrefix & ".tif"
        Set oDocument = vClientLI.OpenedItem
'       Exporteer Document indien Pagina's aanwezig
        Set oPages = oDocument.pages
        If oPages.Count > 0 Then
            'Indien 1 van de pagina's geen Legacy is werkt de functie ExportPages niet
            bAllLegacy = True
            For Each oPage In oPages
                If oPage.PageType <> calImageFileTypeLegacyTIFF Then
                    bAllLegacy = False
                    Exit For
                End If
            Next
            If bAllLegacy Then
                oDocument.ExportPages vPath & vPrefix & ".tif", calExportPagesOverwriteExisting
            ElseIf MsgBox("Dit document kan niet MultiPage ge|fffd|xporteerd worden!" & vbCrLf & "SinglePage exporteren?", vbQuestion + vbYesNo, "Exporteer Document") = vbYes Then
                Call subExportAll(vClientLI, vPath, vPrefix)
            End If
        End If
        Set oPages = Nothing
        Set oDocument = Nothing
        PrintPage.MousePointer = fmMousePointerDefault
    End If
    Exit Sub

ERR_EXPORT:
    DisplayError "subExportAllMultiPage"
    Resume Next
End Sub

Attribute VB_Name = "WDBridge"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public OLEBridge        As WDBridge3.OLEBridge
Public OLEEventsFromWD  As Object 'to receive events from workdesk
Public WithEvents OLEEventsToWD As WDBridge3.OLEEventsToWD  'to fire events in Workdesk
Attribute OLEEventsToWD.VB_VarHelpID = -1

Private Sub cmdGetReturnValue_Click()
    MsgBox OLEEventsFromWD.ReturnValue
End Sub

Private Sub Form_Load()

End Sub

Public Sub Init()
'   Instance of bridge object
    Set OLEBridge = CreateObject("WDBridge3.OLEBridge")
'   Reference of events object
    If OLEEventsFromWD Is Nothing Then Set OLEEventsFromWD = OLEBridge.getEventsFromWD
'   Reference of workdesk events object
    If OLEEventsToWD Is Nothing Then Set OLEEventsToWD = OLEBridge.getEventsToWD
End Sub

Private Sub Command1_Click()
    Err.Clear
    On Error GoTo EH
    OLEBridge.fireEventFromWD "INIT", 1, 2, 3
    Exit Sub

EH:
    MsgBox Err.Description, , "Command1_Click"
End Sub

Private Sub OLEEventsToWD_Event1(ByVal EventName, ByVal parm1, ByVal parm2, ByVal parm3)
Dim myTijd

    On Error GoTo EH
    ActivateWorkDesk

    myTijd = Now
    Select Case EventName
        Case "In"
              Set ClientListItem = golOutlook.SaveOpenedEmail(, , True)
              If Not ClientListItem Is Nothing Then
                Application.Viewers.OpenViewer ClientListItem, wdoOpenViewerNormal, wdoOpenReadWrite
              End If
              Set ClientListItem = Nothing
        Case "Uit"
              Set ClientListItem = golOutlook.SaveOpenedEmail(, , False)
              If Not ClientListItem Is Nothing Then
                Application.Viewers.OpenViewer ClientListItem, wdoOpenViewerNormal, wdoOpenReadWrite
              End If
              Set ClientListItem = Nothing
        Case "INIT"
              MsgBox EventName & " WDBridge is ge|fffd|nitialiseerd" & Chr(10) & Chr(13) & "Deze melding wordt u aangeboden door uw locale Eistream Workdesk", vbInformation + vbMsgBoxSetForeground, "Email opslaan in WFM"
        Case Else
    End Select
    OLEEventsToWD.ReturnValue = myTijd
    Exit Sub

EH:
    Form1.List1.AddItem myTijd & " " & Err.Description & "(" & Err.Number & ")"
    MsgBox Err.Description, , "ExternalRequests.OLEEvents_Event1"
End Sub

Private Sub Class_Terminate()
    MsgBox "TERMINATED WDBRIDGWE"
End Sub

Public Sub test()
    Init
    Command1_Click
End Sub

Sub ActivateWorkDesk()
  On Error GoTo Catch
  
  AppActivate "WorkDesk"
   
  GoTo Finally
Catch:
  ' Activate failed
Finally:
End Sub

Attribute VB_Name = "WDBridgeExecutioner"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Const LOGON_WITH_PROFILE = &H1&
Private Const LOGON_NETCREDENTIALS_ONLY = &H2&
Private Const CREATE_DEFAULT_ERROR_MODE = &H4000000
Private Const CREATE_NEW_CONSOLE = &H10&
Private Const CREATE_NEW_PROCESS_GROUP = &H200&
Private Const CREATE_SEPARATE_WOW_VDM = &H800&
Private Const CREATE_SUSPENDED = &H4&
Private Const CREATE_UNICODE_ENVIRONMENT = &H400&
Private Const ABOVE_NORMAL_PRIORITY_CLASS = &H8000&
Private Const BELOW_NORMAL_PRIORITY_CLASS = &H4000&
Private Const HIGH_PRIORITY_CLASS = &H80&
Private Const IDLE_PRIORITY_CLASS = &H40&
Private Const NORMAL_PRIORITY_CLASS = &H20&
Private Const REALTIME_PRIORITY_CLASS = &H100&

Private Type PROCESS_INFORMATION
    hProcess As Long
    hThread As Long
    dwProcessId As Long
    dwThreadId As Long
End Type

Private Type STARTUPINFO
    cb As Long
    lpReserved As Long
    lpDesktop As Long
    lpTitle As Long
    dwX As Long
    dwY As Long
    dwXSize As Long
    dwYSize As Long
    dwXCountChars As Long
    dwYCountChars As Long
    dwFillAttribute As Long
    dwFlags As Long
    wShowWindow As Integer
    cbReserved2 As Integer
    lpReserved2 As Byte
    hStdInput As Long
    hStdOutput As Long
    hStdError As Long
End Type

Private Declare Function CreateProcessWithLogon Lib "Advapi32" Alias "CreateProcessWithLogonW" (ByVal lpUsername As Long, ByVal lpDomain As Long, ByVal lpPassword As Long, ByVal dwLogonFlags As Long, ByVal lpApplicationName As Long, ByVal lpCommandLine As Long, ByVal dwCreationFlags As Long, ByVal lpEnvironment As Long, ByVal lpCurrentDirectory As Long, lpStartupInfo As STARTUPINFO, lpProcessInfo As PROCESS_INFORMATION) As Long
Private Declare Function CloseHandle Lib "kernel32" (ByVal hObject As Long) As Long

Public Sub execute()
Dim lpUsername As String, lpDomain As String, lpPassword As String, lpApplicationName As String
Dim lpCommandLine As String, lpCurrentDirectory As String
Dim StartInfo As STARTUPINFO, ProcessInfo As PROCESS_INFORMATION
Dim fso As FileSystemObject

    Set fso = New FileSystemObject
    If Not fso.FileExists("C:\Bumap\WFM\WorkDesk\Bin\WDBridge3.exe") Then
        If fso.FileExists("\\srvnltha10612\WIGClient2000\WDBridge3\WDBridge3.exe") Then
            fso.CopyFile "\\srvnltha10612\WIGClient2000\WDBridge3\WDBridge3.exe", "C:\Bumap\WFM\WorkDesk\Bin\", True
            lpUsername = "DeputySSCP"
            lpDomain = "NL"
            lpPassword = "aegonmaa03!"
            lpApplicationName = "C:\Bumap\WFM\WorkDesk\Bin\WDBridge3.exe"
            lpCommandLine = vbNullString 'use the same as lpApplicationName
            lpCurrentDirectory = vbNullString 'use standard directory
            StartInfo.cb = LenB(StartInfo) 'initialize structure
            StartInfo.dwFlags = 0&
            MsgBox "Logging in as local admin..."
            CreateProcessWithLogon StrPtr(lpUsername), StrPtr(lpDomain), StrPtr(lpPassword), LOGON_WITH_PROFILE, StrPtr(lpApplicationName), StrPtr(lpCommandLine), CREATE_DEFAULT_ERROR_MODE Or CREATE_NEW_CONSOLE Or CREATE_NEW_PROCESS_GROUP, ByVal 0&, StrPtr(lpCurrentDirectory), StartInfo, ProcessInfo
            If Not Err.LastDllError = 0 Then
                MsgBox "error!!! " & CStr(Err.LastDllError) & " " & Error(Err.LastDllError)
            Else
                'SetRegistryKey "Kodak", "Workdesk\3.2\AegonOpties\WDBridge", "installed", "Ja"
                MsgBox "Suc6 Whoohoo!!!!!!"
            End If
            CloseHandle ProcessInfo.hThread 'close the handle to the main thread, since we don't use it
            CloseHandle ProcessInfo.hProcess 'close the handle to the process, since we don't use it
            'note that closing the handles of the main thread and the process do not terminate the process
            'unload this application
        Else
            MsgBox "File not found on server..."
        End If
    End If
End Sub
Attribute VB_Name = "WFMData"
Option Explicit
Option Compare Text

'Easy access to the WFM tables stored in XML format
'Version 2.51 2003-06-23 LLO add get/set WIData
'Version 2.50 2002-12-22 LLO

Private WFMXmlDbCache   As New Collection         'Cache XMLDoc's
Private WFMXmlDbClassList   As New Collection     'List of all classes (Class=Common is the overall XmlDb
Private WFMXmlDbDomainList  As New Collection     'List of all domains (Domain=Common is the overall XmlDb
'Aegon domain security
Private m_AdhocClassList    As Collection
Private m_AdhocDomainList   As Collection
Private WordClassList   As Collection
Private WordDomainList  As Collection
Private m_UserDomainList    As Collection
Private m_UserDomainReadList    As Collection
Private m_UserDocSoortList  As Collection
Private m_UserDocTypeList   As Collection
Private m_UserOvrSoortList  As Collection
'Public WFMDataWIName As String
Public lastWordDomain   As String
Public lastAdhocDomain  As String
Public lastQueryDomain  As String

Public Function getWIData(ByVal objItem As Object) As clsWIData
Dim TmpFile             As String

    On Error Resume Next
    TmpFile = Eastman.ImportExtract(objItem, "XMLDATA")
    On Error GoTo 0
    Set getWIData = New clsWIData
    If TmpFile = "" Then
        getWIData.setNew
        Exit Function
     Else
        getWIData.XMLData.Load TmpFile
        fso.DeleteFile TmpFile, True
        Exit Function
    End If
End Function

Public Sub setWIData(ByRef objItem As Object, ByVal WIData As clsWIData)
Dim TmpFile             As String

    TmpFile = Environ("TEMP") + "\~WF" + fso.GetTempName    '[W7]  Was: "C:\TEMP\~WF" + fso.GetTempName
    WIData.XMLData.Save TmpFile
    Eastman.ImportUpload objItem, TmpFile, True, "XMLDATA", "Notities"
    fso.DeleteFile TmpFile, True
End Sub

Public Sub setWIFldData(doc As CALFolder, WIData As clsWIData)
Dim TmpFile             As String

    TmpFile = Environ("TEMP") + "\~WF" + fso.GetTempName    '[W7]  Was: "C:\TEMP\~WF" + fso.GetTempName
    WIData.XMLData.Save TmpFile
    Eastman.DocImportUpload doc, TmpFile, True, "XMLDATA", "Notities"
    fso.DeleteFile TmpFile, True
End Sub

Public Sub ResetCache()
    Set WFMXmlDbCache = Nothing
    Set WFMXmlDbClassList = Nothing
    Set WFMXmlDbDomainList = Nothing
    Set m_AdhocClassList = Nothing
    Set m_AdhocDomainList = Nothing
    Set WordClassList = Nothing
    Set WordDomainList = Nothing
    Set m_UserDomainList = Nothing
    Set m_UserDomainReadList = Nothing
    Set m_UserDocSoortList = Nothing
    Set m_UserDocTypeList = Nothing
    Set m_UserOvrSoortList = Nothing
End Sub

Public Function CacheUsage() As String
Dim myXMLDB             As OWRTXmlDb

    For Each myXMLDB In WFMXmlDbCache
        CacheUsage = CacheUsage & myXMLDB.CacheStats & " "
    Next
End Function

Public Function UserAdhocList() As Collection
    If m_AdhocDomainList Is Nothing Then InitAdhocList
    Set UserAdhocList = m_AdhocDomainList
End Function

Public Function AdhocClass(Domain As String) As String
    If m_AdhocClassList Is Nothing Then InitAdhocList
    AdhocClass = m_AdhocClassList.item(Domain)
End Function

Public Function UserWordList() As Collection
    If WordDomainList Is Nothing Then InitWordList
    Set UserWordList = WordDomainList
End Function

Public Function WordClass(Domain As String) As String
    If WordClassList Is Nothing Then InitWordList
    WordClass = WordClassList.item(Domain)
End Function

Public Property Get UserDocTypeList() As Collection
    If m_UserDocTypeList Is Nothing Then
        Dim Domain
        Dim item
        Set m_UserDocTypeList = New Collection
        For Each Domain In UserDomainReadList
            If WFMData.Domain(Domain).existTable("WFDocTypes") Then
                For Each item In WFMData.Domain(Domain).getList("WFDocTypes", "Omschr")
                    On Error Resume Next
                    m_UserDocTypeList.Add item, item
                    On Error GoTo 0
                Next
            End If
        Next
    End If
    Set UserDocTypeList = m_UserDocTypeList
End Property

Public Property Get UserOvrSoortList() As Collection
    If m_UserOvrSoortList Is Nothing Then
        Dim Domain
        Dim item
        Set m_UserOvrSoortList = New Collection
        For Each Domain In UserDomainReadList
            If WFMData.Domain(Domain).existTable("WFOvereenstSoort") Then
                For Each item In WFMData.Domain(Domain).getList("WFOvereenstSoort", "Soort")
                    On Error Resume Next
                    m_UserOvrSoortList.Add item, item
                    On Error GoTo 0
                Next
            End If
        Next
    End If
    Set UserOvrSoortList = m_UserOvrSoortList
End Property

Public Property Get UserDocSoortList() As Collection
    If m_UserDocSoortList Is Nothing Then

Dim Domain
Dim item
        Set m_UserDocSoortList = New Collection
        For Each Domain In UserDomainReadList
            If WFMData.Domain(Domain).existTable("WFDocSoorten") Then
                For Each item In WFMData.Domain(Domain).getList("WFDocSoorten", "Omschr")
                    On Error Resume Next
                    m_UserDocSoortList.Add item, item
                    On Error GoTo 0
                Next
            End If
        Next
    End If
    Set UserDocSoortList = m_UserDocSoortList
End Property

Public Property Get UserDomainReadList() As Collection
    If m_UserDomainReadList Is Nothing Then

Dim myXMLNode           As IXMLDOMNode
Dim Domain              As String
        Dim Class As String
        Set m_UserDomainReadList = New Collection
        For Each myXMLNode In WFMData.Common.getRowNodesOnce("Classes")
            Class = myXMLNode.selectSingleNode("CLASS").Text
            If Not Eastman.getAccessForWIClass(Class) = calAccessNone Then
                Domain = myXMLNode.selectSingleNode("Domain").Text
                On Error Resume Next
                    If Domain <> "Common" Then m_UserDomainReadList.Add Domain, Domain
                On Error GoTo 0
            End If
        Next
    End If
    Set UserDomainReadList = m_UserDomainReadList
End Property

Public Property Get UserDomainList() As Collection
    If m_UserDomainList Is Nothing Then
        Dim myXMLNode As IXMLDOMNode
        Dim Domain As String
        Dim Class As String
        Set m_UserDomainList = New Collection
        For Each myXMLNode In WFMData.Common.getRowNodesOnce("Classes")
            Class = myXMLNode.selectSingleNode("CLASS").Text
            If Eastman.getAccessForWIClass(Class) = calAccessWrite Then
                Domain = myXMLNode.selectSingleNode("Domain").Text
                On Error Resume Next
                m_UserDomainList.Add Domain, Domain
                On Error GoTo 0
            End If
        Next
    End If
    Set UserDomainList = m_UserDomainList
End Property

Public Sub InitAdhocList()
'put xml tables in a easy to use collection
Dim myXMLNode           As IXMLDOMNode
Dim Class               As String

    On Error GoTo ErrH
    Set m_AdhocClassList = New Collection
    Set m_AdhocDomainList = New Collection
    For Each myXMLNode In WFMData.Common.getRowNodesOnce("Classes", "Adhoc = ""Y""")
        Class = myXMLNode.selectSingleNode("CLASS").Text
        If Eastman.getAccessForWIClass(Class) = calAccessWrite Then
            m_AdhocClassList.Add Class, myXMLNode.selectSingleNode("Domain").Text
            m_AdhocDomainList.Add myXMLNode.selectSingleNode("Domain").Text
        End If
    Next
    Exit Sub

ErrH:
    DisplayError "InitAdhocList"
End Sub

Public Sub InitWordList()
'put xml tables in a easy to use collection
Dim myXMLNode           As IXMLDOMNode
Dim Class               As String

    On Error GoTo ErrH
    Set WordClassList = New Collection
    Set WordDomainList = New Collection
    For Each myXMLNode In WFMData.Common.getRowNodesOnce("Classes", "Word = ""Y""")
        Class = myXMLNode.selectSingleNode("CLASS").Text
        If Eastman.getAccessForWIClass(Class) = calAccessWrite Then
            WordClassList.Add Class, myXMLNode.selectSingleNode("Domain").Text
            WordDomainList.Add myXMLNode.selectSingleNode("Domain").Text
        End If
    Next
    Exit Sub

ErrH:
    DisplayError "InitClassLists"
End Sub

Public Function DomainList() As Collection
    Set DomainList = Common.getList("Domains", "Nummer")
End Function

Public Function lockXMLTable(WFMTableName) As OWRTXmlDb
Dim oTableNodeList      As IXMLDOMNodeList
Dim Node                As IXMLDOMNode
Dim arList()            As String
Dim tmpErrDesc          As String
Dim tmpErrNr            As Long
Dim tmpXMLDB            As OWRTXmlDb
Dim TmpFile             As String

    On Error Resume Next                        'Search for folder containing the XML doc contating the tables
    Set tmpXMLDB = getXMLTable(WFMTableName, calOpenReadWrite)
    If Err = 2111 Then
        On Error GoTo 0          'Not found so create a empty one

Dim oFolderListItem     As CALClientListItem
Dim oFolder             As CALFolder
Dim oFolderChildren     As CALFolderChildren
Dim oItemInfo           As CALWorkitemInfo
Dim oImportListItem     As CALClientListItem
Dim oImport             As CALImport

        Set tmpXMLDB = New OWRTXmlDb
        tmpXMLDB.initXMLDb "WFMData"
        TmpFile = tmpXMLDB.Save
'       Create folder
        Set oItemInfo = Eastman.Client.CreateFolder(WFMTableName, "WFMData")
        Set oFolderListItem = Eastman.ClientList.Add(oItemInfo.objId, 0)
        Set oFolder = oFolderListItem.Open(calOpenReadWrite)
        oFolder.Save
'       Create import
        Set oItemInfo = Eastman.Client.CreateImport(WFMTableName, "XMLDATA", TmpFile)
        Set oImportListItem = Eastman.ClientList.Add(oItemInfo.objId, 0)
        Set oImport = oImportListItem.Open(calOpenReadWrite)
        oImport.Save
'       Add import
        Call oFolder.Children.Add(oImport.Info.objId, 1)
        oImport.Close calCloseSaveChanges
        Eastman.ClientList.Remove oImportListItem
        oFolder.Save
        fso.DeleteFile TmpFile
    ElseIf Err <> 0 Then
        tmpErrNr = Err.Number
        tmpErrDesc = Err.Description
        On Error GoTo 0
        Err.Raise tmpErrNr, "editXMLTabel", "editXMLTabel" & vbCrLf & tmpErrDesc
        Exit Function
    End If
    Set lockXMLTable = tmpXMLDB
End Function

Public Function getWFMTabelName(Domain) As String
Dim myNode              As IXMLDOMNode
Dim myElement           As IXMLDOMElement

    If Domain = "Common" Then
        getWFMTabelName = WFMDataWIName
        Exit Function
    End If
    For Each myNode In Common.getRowNodes("Domains")
        Set myElement = myNode.selectSingleNode("Nummer")
        If myElement.Text = Domain Then
            getWFMTabelName = myNode.selectSingleNode("WFMTabel").Text
            If getWFMTabelName = "" Then getWFMTabelName = WFMDataWIName
            Exit Function
        End If
    Next
End Function

Public Function getDomain(Class) As String
Dim myNode              As IXMLDOMNode
Dim myElement           As IXMLDOMElement
Dim Domain              As String

    For Each myNode In Common.getRowNodes("Classes")
        Set myElement = myNode.selectSingleNode("CLASS")
        If myElement.Text = Class Then
            getDomain = myNode.selectSingleNode("Domain").Text
            If getDomain = "" Then getDomain = "Common"
            Exit Function
        End If
    Next
    Err.Raise 12345, "getWFMTabelNameByClass", "Geen WFMTabel voor " & Class
End Function

Private Function getXML_DBbyClass(Class As String) As OWRTXmlDb
'Find and cache xmldb's by Class
Dim Domain              As String

    On Error Resume Next
    Set getXML_DBbyClass = WFMXmlDbClassList.item(Class)
    On Error GoTo 0
    If getXML_DBbyClass Is Nothing Then  'no class found at level 2 so create
        Domain = getDomain(Class)
        Set getXML_DBbyClass = getXML_DBByDomain(Domain)
        On Error Resume Next
        WFMXmlDbClassList.Add getXML_DBbyClass, Class
    End If
End Function

Public Function getXML_DBByName(WFMTableName As String) As OWRTXmlDb
'   Find and cache xmldb's by Name
    On Error Resume Next
    Set getXML_DBByName = WFMXmlDbCache.item(WFMTableName)
    On Error GoTo 0
    If getXML_DBByName Is Nothing Then      'No dbname found as level 1 so create
        Set getXML_DBByName = WFMData.getXMLTable(WFMTableName, calOpenReadOnly)
        WFMXmlDbCache.Add getXML_DBByName, WFMTableName
    End If
End Function

Public Function getXML_DBByDomain(Domain) As OWRTXmlDb
' Find and cache xmldb's by Domain
Dim myXML_DBName        As String

    On Error Resume Next
    Set getXML_DBByDomain = WFMXmlDbDomainList.item(Domain)
    On Error GoTo 0
    If getXML_DBByDomain Is Nothing Then  'no class found at level 2 so create
        myXML_DBName = getWFMTabelName(Domain)
        Set getXML_DBByDomain = getXML_DBByName(myXML_DBName)
        WFMXmlDbDomainList.Add getXML_DBByDomain, Domain
    End If
End Function

Public Property Get Domain(DomainName) As OWRTXmlDb
    Set Domain = getXML_DBByDomain(DomainName)
End Property

Public Property Get Common() As OWRTXmlDb
    Set Common = getXML_DBByDomain("Common")
End Property

Public Function Class(classname As String) As OWRTXmlDb
    Set Class = getXML_DBbyClass(classname)
End Function

Public Function getXMLTable(WorkitemName, CalOpen As OpenConstants) As OWRTXmlDb
Dim myQueryResult       As CALQueryResults
Dim myClientListItem    As CALClientListItem
Dim myWFMDataFolder     As CALFolder
Dim myWFMDataFolderChild    As CALFolderChild
Dim tmpXML              As OWRTXmlDb
Dim myImportListItem    As CALClientListItem
Dim myImport            As CALImport
Dim TmpFile             As String

'   eiStream Query
    Set myQueryResult = Eastman.Client.Query(WorkitemName, calObjTypeFolder, calLocationDomain, 0)
    If myQueryResult.Count > 1 Then Err.Raise 2110, , "Er zijn meerdere " & WorkitemName & " mappen aanwezig!"
    If myQueryResult.Count < 1 Then
        Set myClientListItem = Eastman.ClientList.Find(initXMLDb)
    End If
'   Opnieuw opzoeken
    Set myQueryResult = Eastman.Client.Query(WorkitemName, calObjTypeFolder, calLocationDomain, 0)
    Set myClientListItem = Eastman.ClientList.Find(myQueryResult.item(1).Info.objId)
    If Not myClientListItem Is Nothing Then
        If CalOpen = calOpenReadWrite And Not (myClientListItem.Info.Status And calObjStatusReserved) = calObjStatusReserved Then
            If Not myClientListItem.OpenedItem Is Nothing Then myClientListItem.OpenedItem.Close calCloseAbortChanges
            Eastman.ClientList.Remove myClientListItem
        End If
    End If
    If myClientListItem Is Nothing Then Set myClientListItem = myQueryResult.item(1).Retrieve(0)
    If Not myClientListItem.OpenedItem Is Nothing Then
        Set myWFMDataFolder = myClientListItem.OpenedItem
     Else
        Set myWFMDataFolder = myClientListItem.Open(CalOpen)
    End If
'   Extract xmlfile
    For Each myWFMDataFolderChild In myWFMDataFolder.Children.ImportItems
        If myWFMDataFolderChild.Class = "XMLDATA" Then
            Set myImportListItem = Eastman.ClientList.Find(myWFMDataFolderChild.Info.objId)
            If Not myImportListItem Is Nothing Then
                If Not myImportListItem.OpenedItem Is Nothing Then myImportListItem.OpenedItem.Close calCloseAbortChanges
                Eastman.ClientList.Remove myImportListItem
            End If
            Set myImportListItem = Eastman.ClientList.Add(myWFMDataFolderChild.Info.objId, 0)
            Set myImport = myImportListItem.Open(calOpenReadOnly)
            TmpFile = getTemporaryFilename
            Kill TmpFile
            myImport.Extract TmpFile
            Set tmpXML = New OWRTXmlDb
            tmpXML.Load TmpFile
            Kill TmpFile
            Exit For
        End If
    Next
'   Cleanup
    If Not myImportListItem.OpenedItem Is Nothing Then
        myImportListItem.OpenedItem.Close calCloseAbortChanges
        Eastman.ClientList.Remove myImportListItem
    End If
    If Not myClientListItem.OpenedItem Is Nothing Then
        If Not CalOpen = calOpenReadWrite Then
            myClientListItem.OpenedItem.Close calCloseAbortChanges
            Eastman.ClientList.Remove myClientListItem
        End If
    End If
    If tmpXML Is Nothing Then Err.Raise 2112, , "Kan " & WorkitemName & " tabellen niet openen!"
    Set getXMLTable = tmpXML
End Function

Public Sub cleanWFMTable(WorkitemName)
Dim myQueryResult       As CALQueryResults
Dim myClientListItem    As CALClientListItem

'   eiStream Query
    Set myQueryResult = Eastman.Client.Query(WorkitemName, calObjTypeFolder, calLocationDomain, 0)
    If myQueryResult.Count > 1 Then Err.Raise 2110, , "Er zijn meerdere " & WorkitemName & " mappen aanwezig!"
    If myQueryResult.Count < 1 Then Err.Raise 2111, , "Map " & WorkitemName & " niet gevonden!"
    Set myClientListItem = Eastman.ClientList.Find(myQueryResult.item(1).Info.objId)
    If Not myClientListItem Is Nothing Then
        If Not myClientListItem.OpenedItem Is Nothing Then myClientListItem.OpenedItem.Close calCloseAbortChanges
        Eastman.ClientList.Remove myClientListItem
    End If
End Sub

Public Function getWFMTableFile(WorkitemName, CalOpen As OpenConstants) As String
Dim myQueryResult       As CALQueryResults
Dim myClientListItem    As CALClientListItem
Dim myWFMDataFolder     As CALFolder
Dim myWFMDataFolderChild    As CALFolderChild
Dim myImportListItem    As CALClientListItem
Dim myImport            As CALImport
Dim TmpFile             As String

'   eiStream Query
    Set myQueryResult = Eastman.Client.Query(WorkitemName, calObjTypeFolder, calLocationDomain, 0)
    If myQueryResult.Count > 1 Then Err.Raise 2110, , "Er zijn meerdere " & WorkitemName & " mappen aanwezig!"
    If myQueryResult.Count < 1 Then Err.Raise 2111, , "Map " & WorkitemName & " niet gevonden!"
    Set myClientListItem = Eastman.ClientList.Find(myQueryResult.item(1).Info.objId)
    If Not myClientListItem Is Nothing Then
        If Not myClientListItem.OpenedItem Is Nothing Then myClientListItem.OpenedItem.Close calCloseAbortChanges
        Eastman.ClientList.Remove myClientListItem
    End If
    Set myClientListItem = myQueryResult.item(1).Retrieve(0)
    Set myWFMDataFolder = myClientListItem.Open(CalOpen)
'   Extract xmlfile
    For Each myWFMDataFolderChild In myWFMDataFolder.Children.ImportItems
        If myWFMDataFolderChild.Class = "XMLDATA" Then
            Set myImportListItem = Eastman.ClientList.Find(myWFMDataFolderChild.Info.objId)
            If Not myImportListItem Is Nothing Then
                If Not myImportListItem.OpenedItem Is Nothing Then myImportListItem.OpenedItem.Close calCloseAbortChanges
                Eastman.ClientList.Remove myImportListItem
            End If
            Set myImportListItem = Eastman.ClientList.Add(myWFMDataFolderChild.Info.objId, 0)
            Set myImport = myImportListItem.Open(calOpenReadOnly)
            TmpFile = getTemporaryFilename
            Kill TmpFile
            myImport.Extract TmpFile
            getWFMTableFile = TmpFile
            Exit For
        End If
    Next
'   Cleanup
    If Not myImportListItem.OpenedItem Is Nothing Then
        myImportListItem.OpenedItem.Close calCloseAbortChanges
        Eastman.ClientList.Remove myImportListItem
    End If
    If Not myClientListItem.OpenedItem Is Nothing Then
        If Not CalOpen = calOpenReadWrite Then
            myClientListItem.OpenedItem.Close calCloseAbortChanges
            Eastman.ClientList.Remove myClientListItem
        End If
    End If
End Function

Public Sub saveXMLTable(FolderName, newXMLTable As OWRTXmlDb)
Dim myQueryResult       As CALQueryResults
Dim myClientListItem    As CALClientListItem
Dim myFolder            As CALFolder
Dim myFolderChild       As CALFolderChild
Dim myWorkitemInfo      As CALWorkitemInfo
Dim myImportClientListItem  As CALClientListItem
Dim myImport            As CALImport
Dim myPrevImportClientListItem  As CALClientListItem
Dim myPrevImport        As CALImport
Dim TmpFile             As String

'   eiStream Query
    Set myQueryResult = Eastman.Client.Query(FolderName, calObjTypeFolder, calLocationDomain, 0)
    If myQueryResult.Count > 1 Then Err.Raise 2110, , "Er zijn meerdere " & FolderName & " mappen aanwezig!"
    If myQueryResult.Count < 1 Then Err.Raise 2111, , "Map " & FolderName & " niet gevonden!"
    Set myClientListItem = Eastman.ClientList.Find(myQueryResult.item(1).Info.objId)
    If myClientListItem Is Nothing Then
        Set myClientListItem = myQueryResult.item(1).Retrieve(0)
    End If
    If myClientListItem.OpenedItem Is Nothing Then
        Set myFolder = myClientListItem.Open(calOpenReadWrite)
    Else
        Set myFolder = myClientListItem.OpenedItem
    End If
'   Create import
    TmpFile = newXMLTable.Save
    Set myWorkitemInfo = Eastman.Client.CreateImport(FolderName, "XMLDATA", TmpFile)
    Set myImportClientListItem = Eastman.ClientList.Add(myWorkitemInfo.objId, 0)
    Set myImport = myImportClientListItem.Open(calOpenReadWrite)
    myImport.Save
    Kill TmpFile
'   Remove old import
    For Each myFolderChild In myFolder.Children.ImportItems
        If myFolderChild.Class = "XMLDATA" Then
            Set myPrevImportClientListItem = Eastman.ClientList.Find(myFolderChild.Info.objId)
            If Not myPrevImportClientListItem Is Nothing Then
                If Not myPrevImportClientListItem.OpenedItem Is Nothing Then myPrevImportClientListItem.OpenedItem.Close calCloseAbortChanges
                Eastman.ClientList.Remove myPrevImportClientListItem
            End If
            Set myPrevImportClientListItem = Eastman.ClientList.Add(myFolderChild.Info.objId, 0)
            Set myPrevImport = myPrevImportClientListItem.Open(calOpenReadWrite)
            myFolder.Children.Remove myFolderChild
        End If
    Next
'   Add import
    Call myFolder.Children.Add(myImport.Info.objId, 1)
    myFolder.Save
    myImport.Close calCloseAbortChanges
    Eastman.ClientList.Remove myImportClientListItem
    Eastman.ClientList.DeleteWorkitem myPrevImportClientListItem, calDeleteWorkitemSystemDelete
End Sub

Public Sub setMinimumWFMData(XMLTable As OWRTXmlDb)
Dim myRow               As IXMLDOMElement
Dim mySingleNode        As IXMLDOMNode

    XMLTable.addDefinition "WFDocTypes", "Kenmerk", "Text", "Kenmerk", "5", "0", "0"
    XMLTable.addDefinition "WFDocTypes", "DocType", "Text", "Doc. omschrijving", "50", "0", "1"
    XMLTable.addDefinition "WFDocTypes", "DocBeh", "Text", "Behandelcode (1, 2 of 3)", "1", "0", "0"
    XMLTable.addDefinition "WFDocTypes", "DocCode", "Text", "Documentcode", "5", "0", "1"
    XMLTable.addDefinition "WFDocTypes", "Enabled", "Text", "Beschikbaar (0 of 1)", "1", "0", "0"
    Set myRow = XMLTable.NewRow("WFDocTypes")
    myRow.selectSingleNode("Kenmerk").Text = "ARB"
    Set mySingleNode = myRow.selectSingleNode("DocType")
    mySingleNode.Text = "DLN Arbeidsongeschikt"
    Set mySingleNode = myRow.selectSingleNode("DocBeh")
    mySingleNode.Text = "1"
    Set mySingleNode = myRow.selectSingleNode("DocCode")
    mySingleNode.Text = "ARB"
    Set mySingleNode = myRow.selectSingleNode("Enabled")
    mySingleNode.Text = "1"
    XMLTable.addRow "WFDocTypes", myRow
End Sub

Public Function initXMLDb() As CALObjID
Dim myQueryResult       As CALQueryResults
Dim myClientListItem    As CALClientListItem
Dim myWFMDataFolder     As CALFolder
Dim myWFMDataFolderChild    As CALFolderChild
Dim tmpXML              As OWRTXmlDb
Dim objWIInfo           As CALWorkitemInfo
Dim objCLIFolder        As CALClientListItem
Dim objfolder           As CALFolder

'   eiStream Query
'   There is no XMLdb. Create the folder and a basic import
    Set objWIInfo = Application.CALClient.CreateFolder(WFMDataWIName, XMLFolderClass)
    Set objCLIFolder = Application.CALClient.ClientList.Add(objWIInfo.objId, 0)
    Set objfolder = objCLIFolder.Open(calOpenReadWrite)
    objfolder.Save
    objfolder.Close calCloseSaveChanges
    Application.CALClient.ClientList.Remove objCLIFolder
    Set initXMLDb = objWIInfo.objId
    Set objfolder = Nothing
    Set objCLIFolder = Nothing
    Set objWIInfo = Nothing
    Set tmpXML = New OWRTXmlDb
    setMinimumWFMData tmpXML
    WFMDataUtil.saveXMLTable WFMDataWIName, tmpXML, XMLBaseDomain
End Function

Public Function saveFolderFileAsImportInWI(ByVal oClientListItem As CALClientListItem, ByVal sImportClassName As String, ByVal sNewImportName As String, sPath As String, bCloseDoc As Boolean) As Boolean
Dim oFolder             As CALFolder
Dim oFolderChilderen    As CALFolderChildren
Dim oFolderChilderenItems   As CALFolderChildrenItems
Dim oFolderChild        As CALFolderChild
Dim oItemInfo           As CALWorkitemInfo
Dim oImportListItem     As CALClientListItem
Dim oImport             As CALImport
Dim lResult             As Long
Dim sFSPath             As String

    Set oFolder = oClientListItem.OpenedItem
    Set oFolderChilderen = oFolder.Children
    Set oFolderChilderenItems = oFolderChilderen.ImportItems
    If oFolderChilderenItems.Count = 0 Then
       Set oItemInfo = Application.CALClient.CreateImport(sNewImportName, sImportClassName, sPath)
       Set oImportListItem = Application.CALClient.ClientList.Add(oItemInfo.objId, 0)
       Set oImport = oImportListItem.Open(calOpenReadWrite)
       oImport.Save
       Call oFolderChilderen.Add(oImport.Info.objId, calChildFirst)
       oFolder.Save
       oImport.Close calCloseSaveChanges
       Application.CALClient.ClientList.Remove oImportListItem
       Exit Function
    End If
    For Each oFolderChild In oFolderChilderenItems 'sImportClassName zoeken en vervangen
        If oFolderChild.Class = sImportClassName Then
            Call oFolderChilderen.Remove(oFolderChild) 'remove old
            Set oItemInfo = Application.CALClient.CreateImport(sNewImportName, sImportClassName, sPath)
            Set oImportListItem = Application.CALClient.ClientList.Add(oItemInfo.objId, 0)
            Set oImport = oImportListItem.Open(calOpenReadWrite)
            oImport.Save
            Call oFolderChilderen.Add(oImport.Info.objId, calChildFirst)
            oFolder.Save
            oImport.Close calCloseSaveChanges
            Application.CALClient.ClientList.Remove oImportListItem
            Exit Function
       End If
    Next oFolderChild
    Set oItemInfo = Application.CALClient.CreateImport(sNewImportName, sImportClassName, sPath)
    Set oImportListItem = Application.CALClient.ClientList.Add(oItemInfo.objId, 0)
    Set oImport = oImportListItem.Open(calOpenReadWrite)
    oImport.Save
    Call oFolderChilderen.Add(oImport.Info.objId, calChildFirst)
    oFolder.Save
    oImport.Close calCloseSaveChanges
    Application.CALClient.ClientList.Remove oImportListItem
    Exit Function

EH:
    Call MsgBox("saveFolderFileAsImportInWI" & Err.Description, vbCritical + vbOKOnly, Err.Number)
End Function
Attribute VB_Name = "WFMDataUtil"
Option Explicit
Option Compare Text

Public Sub saveXMLTable(FolderName, newXMLTable As OWRTXmlDb, Domain)
Dim myQueryResult       As CALQueryResults
Dim myClientListItem    As CALClientListItem
Dim myFolder            As CALFolder
Dim myFolderChild       As CALFolderChild
Dim myWorkitemInfo      As CALWorkitemInfo
Dim myImportClientListItem As CALClientListItem
Dim myImport            As CALImport
Dim myPrevImportClientListItem As CALClientListItem
Dim myPrevImport        As CALImport
Dim TmpFile             As String

'   eiStream Query
    Set myQueryResult = Eastman.Client.Query(FolderName, calObjTypeFolder, calLocationDomain, 0)
    If myQueryResult.Count > 1 Then Err.Raise 2110, , "Er zijn meerdere " & FolderName & " mappen aanwezig!"
    If myQueryResult.Count < 1 Then Err.Raise 2111, , "Map " & FolderName & " niet gevonden!"
'   Wanneer Map niet is gevonden moeten we er een aanmaken.
    Set myClientListItem = Eastman.ClientList.Find(myQueryResult.item(1).Info.objId)
    If myClientListItem Is Nothing Then
        Set myClientListItem = myQueryResult.item(1).Retrieve(0)
    End If
    If myClientListItem.OpenedItem Is Nothing Then
        Set myFolder = myClientListItem.Open(calOpenReadWrite)
    Else
        Set myFolder = myClientListItem.OpenedItem
    End If
'   Create import
    TmpFile = newXMLTable.Save
    Set myWorkitemInfo = Eastman.Client.CreateImport(FolderName, "XMLDATA", TmpFile)
    Set myImportClientListItem = Eastman.ClientList.Add(myWorkitemInfo.objId, 0)
    Set myImport = myImportClientListItem.Open(calOpenReadWrite)
    myImport.Save
    Kill TmpFile
'   Remove old import
    For Each myFolderChild In myFolder.Children.ImportItems
        If myFolderChild.Class = "XMLDATA" Then
            Set myPrevImportClientListItem = Eastman.ClientList.Find(myFolderChild.Info.objId)
            If Not myPrevImportClientListItem Is Nothing Then
                If Not myPrevImportClientListItem.OpenedItem Is Nothing Then myPrevImportClientListItem.OpenedItem.Close calCloseAbortChanges
                Eastman.ClientList.Remove myPrevImportClientListItem
            End If
            Set myPrevImportClientListItem = Eastman.ClientList.Add(myFolderChild.Info.objId, 0)
            Set myPrevImport = myPrevImportClientListItem.Open(calOpenReadWrite)
            myFolder.Children.Remove myFolderChild
        End If
    Next
'   Add import
    Call myFolder.Children.Add(myImport.Info.objId, 1)
'   Save and clean
    myFolder.Save
    myImport.Close calCloseAbortChanges
    Eastman.ClientList.Remove myImportClientListItem
    If Not myPrevImportClientListItem Is Nothing Then
        Eastman.ClientList.DeleteWorkitem myPrevImportClientListItem, calDeleteWorkitemSystemDelete
    End If
'   Update RouteVars
    saveWFMServerVars newXMLTable, Domain
    WFMData.ResetCache                      'start using new values
End Sub

Private Sub validateUithoudingen(WFMTableName As String, ErrorList As Collection, WFMTables As OWRTXmlDb)
Dim Uithoudingen        As IXMLDOMNodeList
Dim Uithouding          As IXMLDOMNode
Dim tmpValue            As String
Dim DatumVanAf          As String
Dim ErrorsFound         As New Collection
Dim Chapter             As String

    Set Uithoudingen = WFMTables.getRowNodes(WFMTableName)
    For Each Uithouding In Uithoudingen
        tmpValue = Uithouding.selectSingleNode("OvrNr").nodeTypedValue
        If Not tmpValue = "" Then
            If Not IsNumeric(tmpValue) Then
                ErrorsFound.Add "OvrNr" & "=" & tmpValue
            ElseIf Not Len(tmpValue) = 10 Then ErrorsFound.Add "OvrNr" & "=" & tmpValue & " <> 10 posities!"
            End If
        End If
        tmpValue = Uithouding.selectSingleNode("RelNr").nodeTypedValue
        If Not tmpValue = "" Then
            If Not IsNumeric(tmpValue) Then
                ErrorsFound.Add "RelNr" & "=" & tmpValue
            ElseIf Not Len(tmpValue) = 8 Then ErrorsFound.Add "RelNr" & "=" & tmpValue & " <> 10 posities!"
            End If
        End If
        DatumVanAf = Uithouding.selectSingleNode("VanAf").nodeTypedValue
        If Not DatumVanAf = "" Then
            If Not IsDate(DatumVanAf) Then
                ErrorsFound.Add "DatumVanAf" & "=" & tmpValue & " datum ongeldig!"
            ElseIf Not Len(DatumVanAf) = 10 Then ErrorsFound.Add "DatumVanAf" & "=" & DatumVanAf & " <> 10 posities!"
            End If
        End If
        tmpValue = Uithouding.selectSingleNode("TotEnMet").nodeTypedValue
        If Not tmpValue = "" Then
            If Not IsDate(tmpValue) Then
                ErrorsFound.Add "DatumT/M" & "=" & tmpValue & " datum ongeldig!"
            ElseIf Not Len(tmpValue) = 10 Then ErrorsFound.Add "DatumT/M" & "=" & tmpValue & " <> 10 posities!"
            End If
        End If
        If Not (DatumVanAf = "" And tmpValue = "") Then
            If DateDiff("d", DatumVanAf, tmpValue) < 0 Then ErrorsFound.Add "DatumT/M " & DatumVanAf & " ligt voor " & tmpValue & "!"
        End If
    Next

    If ErrorsFound.Count > 0 Then
        Call distinctList(sortList(ErrorsFound))
        Chapter = WFMTableName & " foutmeldingen:"
        appendErrorList Chapter, ErrorList, ErrorsFound
    End If

End Sub

Private Sub validateWidth(WFMTableName As String, ErrorList As Collection, WFMTables As OWRTXmlDb)
Dim MetaNodes           As IXMLDOMNodeList
Dim Field               As IXMLDOMNode
Dim fieldName           As String
Dim FieldLen            As Integer
Dim Data                As IXMLDOMNodeList
Dim row                 As IXMLDOMNode
Dim Value               As String
Dim ErrorsFound         As New Collection
Dim Chapter             As String

    Set Data = WFMTables.getRowNodes(WFMTableName)
    Set MetaNodes = WFMTables.getMetaNodes(WFMTableName)
    For Each row In Data
        For Each Field In MetaNodes
            fieldName = Field.BaseName
            FieldLen = Field.Attributes.getNamedItem("Width").Text
            Value = ""
            On Error Resume Next
            Value = row.selectSingleNode(fieldName).Text
            On Error GoTo 0
            If Len(Value) > FieldLen Then
                ErrorsFound.Add fieldName & "=" & Value
            End If
        Next
    Next
    If ErrorsFound.Count > 0 Then
        Call distinctList(sortList(ErrorsFound))
        Chapter = WFMTableName & " lengte overschrijding voor:"
        appendErrorList Chapter, ErrorList, ErrorsFound
    End If

End Sub

Private Sub validateWindowName(ErrorList As Collection, WFMTable As OWRTXmlDb)
Dim Data                As IXMLDOMNodeList
Dim MetaNodes           As IXMLDOMNodeList
Dim row                 As IXMLDOMNode
Dim WindowName          As String
Dim WindowType          As String
Dim ErrorsFound         As New Collection
Dim Chapter             As String

    Set Data = WFMTable.getRowNodes("WFScreenSettings")
    For Each row In Data
        WindowName = row.selectSingleNode("WindowName").Text
        WindowType = row.selectSingleNode("WindowType").Text
        If WindowType = "WorkDesk" Then
            If Not (WindowName = "PageViewer" Or WindowName = "WIViewer" Or WindowName = "WorkDesk") Then
                ErrorsFound.Add WindowType & "=" & WindowName
            End If
        End If
    Next
    If ErrorsFound.Count > 0 Then
        Call distinctList(sortList(ErrorsFound))
        Chapter = "WFScreenSettings.WindowType bevat ongeldige waarden:"
        appendErrorList Chapter, ErrorList, ErrorsFound
    End If
End Sub

Private Sub validateScreenResolution(ErrorList As Collection, WFMTable As OWRTXmlDb)
Dim Data                As IXMLDOMNodeList
Dim MetaNodes           As IXMLDOMNodeList
Dim row                 As IXMLDOMNode
Dim Field               As String
Dim ErrorsFound         As New Collection
Dim Chapter             As String

    Set Data = WFMTable.getRowNodes("WFScreenSettings")
    For Each row In Data
        Field = row.selectSingleNode("ScreenResolution").Text
        If Not (Field = "ALL") And InStr(Field, "x") = 0 Then
            ErrorsFound.Add Field
        End If
    Next
    If ErrorsFound.Count > 0 Then
        Call distinctList(sortList(ErrorsFound))
        Chapter = "WFScreenSettings.ScreenResolution bevat ongeldige waarden:"
        appendErrorList Chapter, ErrorList, ErrorsFound
    End If
End Sub

Private Sub validateSrtOvereenst(ErrorList As Collection, WFMTable As OWRTXmlDb)
'Special check for WFOvereenstSoort because of value RELATIE
Dim tmpCol              As Collection
Dim Chapter             As String
Dim i                   As Integer

    Set tmpCol = validateListInList(WFMTable.getList("WFDISRules", "OvrSoort"), WFMTable.getList("WFOvereenstSoort", "Soort"))
    If tmpCol.Count > 0 Then
        For i = tmpCol.Count To 1 Step -1
            If tmpCol.item(i) = "RELATIE" Then
                tmpCol.Remove i
            End If
        Next i
        If tmpCol.Count < 1 Then Exit Sub
        Chapter = "Soort in WFOvereenstSoort komen niet voor in  WFOvereenstSoort.Soort"
        appendErrorList Chapter, ErrorList, tmpCol
    End If
End Sub

Private Sub validateWFMTableRelation(ErrorList As Collection, WFMTable As OWRTXmlDb, ChildTable As String, ChildField As String, ParentTable As String, ParentField As String)
Dim tmpCol              As Collection
Dim Chapter             As String

    Set tmpCol = validateListInList(WFMTable.getList(ChildTable, ChildField), WFMTable.getList(ParentTable, ParentField))
    If tmpCol.Count > 0 Then
        Chapter = ChildTable & "." & ChildField & " komen niet voor in  " & ParentTable & "." & ParentField & ":"
        appendErrorList Chapter, ErrorList, tmpCol
    End If
End Sub

Private Sub validateWFMTableValidValues(ErrorList As Collection, WFMTable As OWRTXmlDb, ChildTable As String, ChildField As String, ValidValues)
Dim tmpCol              As Collection
Dim Chapter             As String
Dim tmpValidValues
Dim tmpValidValueList   As New Collection
Dim i                   As Integer

    tmpValidValues = Split(ValidValues, ";")
    For i = LBound(tmpValidValues) To UBound(tmpValidValues)
        tmpValidValueList.Add tmpValidValues(i)
    Next i
    Set tmpCol = validateListInList(WFMTable.getList(ChildTable, ChildField), tmpValidValueList)
    If tmpCol.Count > 0 Then
        Chapter = ChildTable & "." & ChildField & " bevat ongeldige waarden:"
        appendErrorList Chapter, ErrorList, tmpCol
    End If
End Sub

Private Sub validateWFMTableNumeric(ErrorList As Collection, WFMTable As OWRTXmlDb, ChildTable As String, ChildField As String)
Dim tmpCol              As Collection
Dim Chapter             As String

    Set tmpCol = validateListIsNumeric(WFMTable.getList(ChildTable, ChildField))
    If tmpCol.Count > 0 Then
        Chapter = ChildTable & "." & ChildField & " bevat ongeldige numerieke waarden:"
        appendErrorList Chapter, ErrorList, tmpCol
    End If
End Sub

Private Sub validateWFMTableValidList(ErrorList As Collection, WFMTable As OWRTXmlDb, ChildTable As String, ChildField As String, ValidValues As Collection)
Dim tmpCol              As Collection
Dim Chapter             As String

    Set tmpCol = validateListInList(WFMTable.getList(ChildTable, ChildField), ValidValues)
    If tmpCol.Count > 0 Then
        Chapter = ChildTable & "." & ChildField & " bevat ongeldige waarden:"
        appendErrorList Chapter, ErrorList, tmpCol
    End If
End Sub

Private Sub appendErrorList(Chapter As String, ErrorList As Collection, AppendList As Collection)
Dim item

    If AppendList.Count > 0 Then
        ErrorList.Add "----- " & Chapter
        For Each item In AppendList
            ErrorList.Add " " & item
        Next
    End If
End Sub

Private Function validateListInList(list As Collection, CheckList As Collection) As Collection
Dim ListValue
Dim CheckValue
Dim ListValueFound      As Boolean

    Set validateListInList = New Collection
    For Each ListValue In list
        ListValueFound = False
        For Each CheckValue In CheckList
            If Len(CheckValue) = Len(ListValue) _
               And InStr(1, CheckValue, ListValue, vbBinaryCompare) = 1 Then
                ListValueFound = True
                Exit For
            End If
        Next
        If Not ListValueFound Then
            If ListValue = "" Then
                validateListInList.Add "<null>"
             Else
                validateListInList.Add ListValue
            End If
        End If
    Next
End Function

Private Function validateListIsNumeric(list As Collection) As Collection
Dim ListValue
    
    Set validateListIsNumeric = New Collection
    For Each ListValue In list
        If Not IsNumeric(ListValue) Then
            If ListValue = "" Then

             Else
                validateListIsNumeric.Add ListValue
            End If
        End If
    Next
End Function

Public Sub saveWFMServerVars(WFMTable As OWRTXmlDb, Domain)
Dim myTableNode         As IXMLDOMNode
Dim myTableName         As String
Dim myMetaData          As IXMLDOMNodeList
Dim myRVarPrefix        As String
Dim myRVarName          As String
Dim myDomain            As String

    For Each myTableNode In WFMTable.AllTables
        myTableName = myTableNode.BaseName
        Set myMetaData = WFMTable.getMetaNodes(myTableName)
        If setupWFMServerVars(myMetaData).Count > 0 Then
            If Domain <> "Common" Then
                myRVarPrefix = WFMData.Common.getField("Domains", "RVarPrefix", "Nummer", Domain)
                myRVarName = myRVarPrefix & myTableName
             Else
                myRVarName = myTableName
            End If
            If Not (myRVarPrefix = "No") Then
                If myRVarPrefix <> Mid(Domain, 1, 4) And Domain <> "SB" And Domain <> "Common" Then
                    MsgBox Domain & ": RVarPrefix moet gelijk zijn aan Domain naam !!"
                 Else
                    On Error Resume Next
                    If myRVarPrefix <> "No" Then saveWFMServerVar myMetaData, WFMTable.getRowNodes(myTableName), myRVarName
                    If Err <> 0 Then
                        MsgBox "Critical Error !!! [" & myRVarName & "] " & Err.Description
                    End If
                    On Error GoTo 0
                End If
            End If
        End If
    Next
End Sub

Private Function setupWFMServerVars(MetaData As IXMLDOMNodeList) As Collection
Dim mySingleDefinitionNode As IXMLDOMNode
Dim bWFvariablesPresent As Boolean
Dim WFVars(10)          As String    'Table with vars to save in eiStream routevars
Dim fieldName           As String
Dim FieldPosition       As Integer
Dim FieldCnt            As Integer
Dim i                   As Integer

'   Setup save order
    Set setupWFMServerVars = New Collection
    FieldCnt = 0: bWFvariablesPresent = False
    For Each mySingleDefinitionNode In MetaData
        fieldName = mySingleDefinitionNode.NodeName
        FieldPosition = mySingleDefinitionNode.Attributes.getNamedItem("WFVariable").nodeValue
        If FieldPosition > 0 Then
            FieldCnt = FieldCnt + 1
            WFVars(FieldPosition) = fieldName
            bWFvariablesPresent = True
        End If
    Next
    If Not bWFvariablesPresent Then Exit Function
'   Variables found to store in eiStream
    For i = 1 To FieldCnt
        If WFVars(i) = "" Then Err.Raise 12345, , "WFVariables niet juist gedefinieerd!"
        setupWFMServerVars.Add WFVars(i)
    Next i
End Function

Private Sub saveWFMServerVar(MetaData As IXMLDOMNodeList, Data As IXMLDOMNodeList, WFMServerVarName As String)
Dim myRowNode           As IXMLDOMNode
Dim Field               As String
Dim i                   As Integer
Dim RecLine             As String
Dim WFVarNameCnt        As Integer
Dim WFVarName           As String
Dim BufSize             As Integer
Dim BufColl             As Collection
Dim MaxSize             As Integer
Dim ErrDesc             As String
Dim WFMServerFieldList  As Collection

    Set WFMServerFieldList = setupWFMServerVars(MetaData)
    If WFMServerFieldList.Count < 1 Then Err.Raise 12345, , "WFVariables niet gevonden!"
'   Save in parts
    WFVarNameCnt = 1
    BufSize = 0
    Set BufColl = New Collection
    MaxSize = 1950
    If InStr(WFMServerVarName, "WFDISRules") > 0 Then MaxSize = 1300 'Praktijk waarde
    For Each myRowNode In Data
        RecLine = myRowNode.selectSingleNode(WFMServerFieldList.item(1)).Text
        If WFMServerFieldList.Count > 1 Then
            For i = 2 To WFMServerFieldList.Count
                If myRowNode.selectSingleNode(WFMServerFieldList.item(i)) Is Nothing Then
                    Field = "" '2.03 append new fields
                 Else
                    Field = myRowNode.selectSingleNode(WFMServerFieldList.item(i)).Text
                End If
                RecLine = RecLine & ";" & Field
            Next i
        End If
        If BufSize + Len(RecLine) > MaxSize Or BufColl.Count > 50 Then
            WFVarName = WFMServerVarName & Trim(WFVarNameCnt)
            On Error Resume Next
            Eastman.setWFVarCollectionList WFVarName, BufColl
            If Err <> 0 Then
                ErrDesc = Err.Description
                On Error GoTo 0
                Err.Raise 12345, "Eastman.setWFVarCollectionList", WFVarName & " " & ErrDesc
            End If
            On Error GoTo 0
            Set BufColl = New Collection
            WFVarNameCnt = WFVarNameCnt + 1
            BufSize = 0
        End If
        If RecLine <> "" Then
            On Error Resume Next
            BufColl.Add RecLine, RecLine
            BufSize = BufSize + Len(RecLine) + 16 ' Save assumpt on for buffer overhead
            On Error GoTo 0
        End If
    Next
'   Save the rest
    If BufColl.Count > 0 Then
        WFVarName = WFMServerVarName & Trim(Str(WFVarNameCnt))
        On Error Resume Next
        Eastman.setWFVarCollectionList WFVarName, BufColl
        If Err <> 0 Then
            ErrDesc = Err.Description
            On Error GoTo 0
            Err.Raise 12345, "Eastman.setWFVarCollectionList", WFVarName & " " & ErrDesc
        End If
        On Error GoTo 0
        WFVarNameCnt = WFVarNameCnt + 1
    End If
'   Save counter
    Eastman.setWFVarString WFMServerVarName & "Cnt", (WFVarNameCnt - 1)
End Sub
Attribute VB_Name = "WijzigenItems"
Attribute VB_Base = "0{2CE006A0-E560-4CD3-8529-4CD50F0E34D4}{3E69F0C5-E1D2-4DDB-8B5F-C7D424EC419F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private myfield
Private myFromMustFill As Boolean

Public Property Let Field(VarValue)
    myfield = VarValue
End Property

Public Sub FromValue(Mandatory As Boolean)
    myFromMustFill = Mandatory
    If myFromMustFill Then
       TextBox1.Enabled = True
       Label1.Enabled = True
     Else
       TextBox1.Enabled = False
       Label1.Enabled = False
    End If
End Sub

Private Function CheckInput() As Boolean
    CheckInput = False
    If myFromMustFill Then
        If TextBox1 < "            " Then
            MsgBox "Van is verplicht"
            Exit Function
        End If
    End If
    If ComboBox1 < "            " Then
        MsgBox "Veldnaam is verplicht"
        Exit Function
    End If
    CheckInput = True
End Function

Private Sub ComboBox1_Change()
    WijzigenSetVeldNaamBuff = ComboBox1
End Sub

Private Sub CommandButton1_Click()
    'If Not CheckInput Then Exit Sub
    Call WijzigSet(False)
End Sub

Private Sub WijzigSet(Doorzenden As Boolean)
Dim DTWorklistItems As WDOWorklistItems
Dim DTWorklistItem As WDOWorklistItem
Dim ClientList As CALClientList
Dim ClientListItem As CALClientListItem
Dim myFormFields As CALFormFields
Dim myFormField As CALFormField
Dim myFieldName
Dim ErrTeller

'   On Error GoTo EH
    ErrTeller = 0
    myFieldName = ComboBox1
    Set DTWorklistItems = Application.Desktop.Worklist.Items
    Set ClientList = Application.CALClient.ClientList
    For Each DTWorklistItem In DTWorklistItems
        Set ClientListItem = DTWorklistItem.CALClientListItem
 '      Change only open workitems
        If Not ((ClientListItem.Info.Status And calObjStatusReserved) = calObjStatusReserved) Then
            ClientListItem.OpenedItem.Close calCloseRetainLock And calCloseAbortChanges
            ClientListItem.Open calOpenTryReadWrite
        End If
        If ((ClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
            Set myFormField = ClientListItem.OpenedItem.FormFields(calFieldsNoViews).Find(myFieldName)
            If myFromMustFill And myFormField.Value <> TextBox1 Then
                MsgBox ClientListItem.Info.name & " komt niet overeen met " & TextBox1 & ", wijziging niet doorgevoerd!"
                ErrTeller = ErrTeller + 1
            Else
'               Real update of the workitem
                myFormField.Value = TextBox2
                ClientListItem.OpenedItem.Save
                If Doorzenden Then
                    ClientListItem.OpenedItem.Close calCloseSaveChanges
                    ClientListItem.SendToDefault calSendDiscard
                End If
            End If
        End If
    Next
    Exit Sub

EH:
    If Err.Number = 91 Then Err.Description = "Veldnaam onjuist"
    DisplayError "Wijzigen workitems"
End Sub

Private Sub CommandButton2_Click()
    Call WijzigSet(True)
End Sub

Private Sub UserForm_Initialize()
    ComboBox1.AddItem "IND_HUPO"
    ComboBox1.AddItem "BEHANDELAAR"
    ComboBox1.AddItem "BEH_GROEP"
    ComboBox1.AddItem "DOORZENDEN_NAAR"
    ComboBox1 = WijzigenSetVeldNaamBuff
    myFromMustFill = True
End Sub
Attribute VB_Name = "WordSessie"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private varESWMObjID As String
Private varDossier As String
Private varTemplate As String

Public Property Let objId(ByVal vData As Variant)
    varESWMObjID = vData
End Property
Public Property Get objId() As Variant
    objId = varESWMObjID
End Property

Public Property Let Dossier(ByVal vData As Variant)
    varDossier = vData
End Property
Public Property Get Dossier() As Variant
    Dossier = varDossier
End Property

Public Property Let template(ByVal vData As Variant)
    varTemplate = vData
End Property
Public Property Get template() As Variant
    template = varTemplate
End Property

Public Sub WRDSet(ByVal objWorkitemViewer As WFDWorkitem.WorkitemViewer, strTemplate)
    WordSessie.objId = objWorkitemViewer.id
    WordSessie.Dossier = objWorkitemViewer.name
    WordSessie.template = strTemplate
    SaveSetting "ORIGIN", "Word", "Dossier", objWorkitemViewer.name
    SaveSetting "ORIGIN", "Word", "Documentnaam", ""
End Sub

Public Sub WRDRelease()
    On Error GoTo EH
    Err.Clear
    WordSessie.objId = ""
    WordSessie.Dossier = ""
    WordSessie.template = ""
    DeleteSetting "ORIGIN", "Word", "Dossier"
    DeleteSetting "ORIGIN", "Word", "Documentnaam"
    DeleteSetting "ORIGIN", "Template Fields"
    DeleteSetting "ORIGIN", "Partner gegevens"
    Exit Sub

EH:
    If Err.Number = 5 Then 'registry setting wordt verwijderd terwijl het niet bestaat.
        Err.Clear
        Resume Next
    End If
    DisplayError ("Wordsessie.WRDRelease")
End Sub

Public Function WRDActive(ESWMObjID As String) As Boolean
    Select Case WordSessie.objId
        Case Is = Empty
             WRDActive = False
        Case Is = ESWMObjID
'            Voor deze folder staat is al een wordsessie gestart.
             Select Case WordSessie.template
                Case Is = "Word"
                     MsgBox "Voor dit dossier heeft u inmiddels Word gestart. Verwerk eerst de brief in Word, middels 'Save in Workflow'", vbOKOnly + vbCritical
                Case Is = "Offerte"
                     MsgBox "Voor dit dossier heeft u inmiddels het Waarde Rekenprogramma gestart. Verwerk eerst de brief.", vbOKOnly + vbCritical
                Case Else
                     MsgBox "Voor dit dossier heeft u inmiddels de brief " + WordSessie.template + " gestart. Verwerk eerst deze brief.", vbOKOnly + vbCritical
             End Select
             WRDActive = True
        Case Else
'            In een andere folder is al een wordsessie gestart
'            Deze moet eerst worden afgemaakt.
             MsgBox "Voor Dossier " + WordSessie.Dossier + " is momenteel een wordsessie actief. Verwerk eerst dit dossier.", vbOKOnly + vbCritical
             WRDActive = True
    End Select
End Function
Attribute VB_Name = "Worklist"
Attribute VB_Base = "0{05153D06-8F1B-11D3-8049-00A024E9EEA6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub picl_test()
Dim picl As Variant

    picl = CALGetRouteVar("WOI")
End Sub
Attribute VB_Name = "WorksetContents"
Attribute VB_Base = "0{05153CE0-8F1B-11D3-8049-00A024E9EEA6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Worksets"
Attribute VB_Base = "0{05153CC4-8F1B-11D3-8049-00A024E9EEA6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "clsWIData"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Option Compare Text

Private Const m_Version = "2.10"
'2.10 2003-01-23  LLO  Start using this in the SBRobot
'                      add addToelichting,Action,Melding
'2.00 2003-01-23  LLO  'Improve
'1.00 ????-??-??  MaOt 'Initial

Private myXML As New OWRTXmlDb

Property Get XMLData() As OWRTXmlDb
    Set XMLData = myXML
End Property

Public Function setNew() As String
'   Icon: E = Escalatie, I= Information
'   M = Melding
'   T = Toelichting
'   A = Actie
'    myXML.addDefinition "Klacht", "Soort", "Text", "KlachtSoort", "20", "0", "0"
'    myXML.addDefinition "Klacht", "Type", "Text", "KlachtType", "20", "0", "0"
'    myXML.addDefinition "Klacht", "Veroorzaker", "Text", "KlachtVeroorzaker", "20", "0", "0"
'    myXML.addDefinition "Klacht", "Product", "Text", "Product", "20", "0", "0"
    myXML.initXMLDb "WIData"
    myXML.addDefinition "Data", "CreationTime", "Text", "Tijd", "20", "0", "0"
    myXML.addDefinition "Data", "CreationDate", "Text", "Datum", "20", "0", "0"
    myXML.addDefinition "Data", "Name", "Text", "Naam", "20", "0", "0"
    myXML.addDefinition "Data", "Contents", "Text", "Inhoud", "20", "0", "0"
    myXML.addDefinition "Data", "Type", "Text", "Data type", "20", "0", "0"
    myXML.addDefinition "Data", "Icon", "Text", "Data type", "1", "0", "0"
End Function

Function addSingleRow(ByVal myXMLRow As IXMLDOMElement)
    myXML.addRow "Data", myXMLRow
End Function

Function addWIDataRow(ByVal sName As String, ByVal sData As String, ByVal sType As String, ByVal sIcon As String) As IXMLDOMElement
Dim myXMLRow            As IXMLDOMElement

    Set myXMLRow = myXML.NewRow("Data")
    myXMLRow.selectSingleNode("CreationTime").Text = Format(Now, "hh:mm:ss")
    myXMLRow.selectSingleNode("CreationDate").Text = Format(Now, "yyyy-MM-dd")
    myXMLRow.selectSingleNode("Name").Text = sName
    myXMLRow.selectSingleNode("Contents").Text = sData
    myXMLRow.selectSingleNode("Type").Text = sType
    myXMLRow.selectSingleNode("Icon").Text = sIcon
    myXML.addRow "Data", myXMLRow
    Set addWIDataRow = myXMLRow
End Function

Function addMelding(ByVal sName As String, ByVal sData As String, ByVal sIcon As String) As IXMLDOMElement
    Set addMelding = addWIDataRow(sName, sData, "M", sIcon)
End Function

Function addToelichting(ByVal sName As String, ByVal sData As String, ByVal sIcon As String) As IXMLDOMElement
    Set addToelichting = addWIDataRow(sName, sData, "T", sIcon)
End Function

Function addAction(ByVal sName As String, ByVal sData As String, ByVal sIcon As String) As IXMLDOMElement
    Set addAction = addWIDataRow(sName, sData, "A", sIcon)
End Function
Attribute VB_Name = "frmALGAlgemeen"
Attribute VB_Base = "0{E1442359-8E0B-40E9-8A27-F21FA704E608}{7715E04D-60CF-414E-86DD-0D5A80FEA0CB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myStatus            As CALFormField
Dim myZaakMemo          As CALFormField
Dim arrWerksoorten()    As String
Dim arrWerktypen()      As String
Dim arrWKTperWKS()      As String
Dim arrAllWKTperWKS()   As String
Dim bper                As Boolean
Dim strTempdate         As String
Dim Init2               As Boolean
Dim gb1StTime           As Boolean                      '[PAC] - TD169077 First Time Through
Dim gbIntblInfVerzoeken As Boolean
Dim oudePARK_RAPPEL_DAT As String

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub cmdDatum_Click()
'   mvEinddatum leeg geeft een error
    On Error Resume Next
    If Not mvEinddatum.Visible Then
        mvEinddatum.Left = 42
        mvEinddatum.Top = 138
        mvEinddatum.Visible = True
        If Not WFMDEINDDAT = "" Then mvEinddatum = WFMDEINDDAT
    Else
        mvEinddatum.Visible = False
    End If
End Sub
'[PAC]  TD169077  Added Subroutine
Private Sub cmdUBAanmaken_Click()
    Call StartBrief(WIViewer, "Word")
End Sub

Private Sub imgNotitie_Click()
    Set frmNotitie.rsViewer = WIViewer
    If Not ((WIViewer.CALClientListItem.Info.Status And calObjStatusWIP) = calObjStatusWIP) Then
        frmNotitie.lblAddNote.Enabled = False
    End If
    frmNotitie.Show 1
End Sub

Private Sub mvEinddatum_DateClick(ByVal DateClicked As Date)
    WFMDEINDDAT = Format(mvEinddatum, "dd-mm-yyyy")
    mvEinddatum.Visible = False
    WFMDEINDDAT.SetFocus
End Sub

Private Sub optStatBehandelen_Click()
Dim antwoord            As Integer
Dim strAfdeling         As String

    strAfdeling = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR")
    antwoord = 0
    If (Not Init2 And (strAfdeling = "PAC")) Then
        antwoord = MsgBox("Wilt u een onvangst bevestiging versturen?", vbYesNo)
        If (antwoord = 6) Then Call StartBrief(WorkitemViewer, "POST Ontvangstbevestiging")
    End If
    setParkerenVelden (False)
End Sub

Private Sub optStatControle_Click()
    setParkerenVelden (False)
End Sub

Private Sub optStatLeeg_Click()
    setParkerenVelden (False)
End Sub

Private Sub Optstatofferte_Click()
    setParkerenVelden (False)
End Sub

Private Sub Optstatreactie_Click()
    setParkerenVelden (False)
End Sub

Private Sub UserForm_Activate()
Dim strAfdeling         As String
Dim strUser             As String
Dim i                   As Integer
Static Init             As Boolean
Dim bRes                As Boolean

    If (Len(WFM_BEHEER_ID.Text) > 0) Then
        Frame1.Visible = True
    Else
        Frame1.Visible = False
        WFMrJN_IMP_CAESAR_ja.Value = False
        WFMrJN_IMP_CAESARnee.Value = False
    End If
    
    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    Init2 = Init

    gb1StTime = True                                    '[PAC] - TD169077
    bper = True
    strAfdeling = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR")
    strUser = WFM_BEHANDELAAR.Value
    fillDDList True, AFDELING, WFMData.Common.getList("WFAfdeling", "AfdCode", "Enabled", "1")
    AFDELING.Value = strAfdeling
      
    If strAfdeling = "PPN" Then
       Optstatofferte.Visible = True
       Optstatreactie.Visible = True
    End If
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    If Len(Trim(WFM_PRIORITEIT)) = 0 Then WFM_PRIORITEIT = "0"
    StatusBar1.Panels.item("WFM_NR_POLIS").Text = "Deeln. nr.: " & WFM_NR_POLIS
    StatusBar1.Panels.item("WFM_NR_AEGAR").Text = "Aegarnr.: " & WFM_NR_AEGAR
    MultiPage1.Value = 1
    WFM_WERKTYPE.ColumnCount = 2
    WFM_WERKTYPE.BoundColumn = 1
    WFM_WERKTYPE.TextColumn = -1
    WFM_WERKTYPE.ColumnWidths = "30;30"
    WFM_WERKSOORT.ColumnCount = 2
    WFM_WERKSOORT.TextColumn = -1
    WFM_WERKSOORT.ColumnWidths = "30;30"
    arrWerksoorten = Split(WFMData.Common.getField("WFAfdeling", "Werksoorten", "AfdCode", strAfdeling), ",")
    FillComboWRKSOORT arrWerksoorten, WFM_WERKSOORT
    AllWerktypesPERwerksoort (strAfdeling)   ' Vullen van arrAllWKTperWKS
    If WFM_WERKSOORT = "" Then
        FillComboWRKtypen arrAllWKTperWKS, WFM_WERKTYPE
    Else
        arrWKTperWKS = Split(WFMData.Common.getField("WFAfdeling", WFM_WERKSOORT, "AfdCode", AFDELING), ",")
        FillComboWRKtypen arrWKTperWKS, WFM_WERKTYPE
    End If

    On Error Resume Next
    WFM_BEHANDELAAR.Value = strUser
    On Error GoTo EH
    Set myZaakMemo = WIViewer.Fields.Find("ZAAK_VLGNR_MEMO").CALFormField
    Set myStatus = WIViewer.Fields.Find("STATUS").CALFormField
    Select Case myStatus.Value
        Case Is = ""
             optStatLeeg = True
'[PAC] TD166490             optGba.Visible = True
             If strAfdeling = "PAC" Then                '[PAC] TD144690
                setParkerenVelden (False)               '[PAC] TD166490
                optStatParkeren.Visible = False         '[PAC] TD166490
             End If                                     '[PAC] TD166490
        Case "CCC"                                      '[PAC] TD166490
             optCCC.Value = True                        '[PAC] TD166490
             setParkerenVelden (False)                  '[PAC] TD166490
             optStatParkeren.Visible = False            '[PAC] TD166490
        Case Is = "GBA"
             optGba = True
        Case Is = "Behandelen"
             optStatBehandelen = True
'[PAC] TD166490             optGba.Visible = True
        Case Is = "Controle Caesar"
             optStatControle = True
        Case Is = "Parkeren"
             optStatParkeren = True
             datDPARK_RAPPEL_DAT.Visible = True
             optStatLeeg.Visible = False                '[PAC] TD166490
             optCCC.Visible = False                     '[PAC] TD166490
    End Select
    If optStatParkeren Then Call optStatParkerenVoorbereiden
    InitPrios
    If WFM_AANVRAAG_INFO.Value = Left(GetWorkstep(WIViewer), 2) Or WFM_AANVRAAG_INFO.Value = "" Then
        cmdAntInfo.Enabled = False
    End If
'   Voor PAc FVP en KSP geen behandelgroepen
    If strAfdeling = "KSP" Or strAfdeling = "FVP" Or strAfdeling = "PAC" Then
        WFM_BEH_GROEP.Visible = False
        lblbeg.Visible = False
    End If
    bRes = vulBehandelGroep(strAfdeling, Me.WFM_BEH_GROEP)
    If strAfdeling = "PAC" Then
'[PAC] TD166490        optStatBehandelen.Caption = "Behandelen 2e Lijn"
'[PAC] TD166490        optStatParkeren.Caption = "Parkeren (Alleen 2e Lijn)"
'[PAC] TD166490        optStatLeeg.Caption = "Behandelen 1e lijn"
        optStatControle.Visible = False
    Else
'       Aanpassing inz TD73199 de statusoptie "leeg" kan verwijderd worden, behalve bij PAC!
'       Bij PAC staat de status "behandelen" voor 2e lijns, maar bij
'       KS afdeling indien het indexveld "status" geen waarde bevat de vullen met "Behandelen".
        optStatLeeg.Visible = False
        optStatBehandelen.Caption = "Behandelen"        '[PAC] TD166490
        optCCC.Visible = False                          '[PAC] TD166490
        If myStatus.Value = "" Then optStatBehandelen = True
    End If
    Init2 = False
'[PAC] TD166490    ALT_REDEN_PARKEREN.Left = 90
'[PAC] TD166490    ALT_REDEN_PARKEREN.Top = 60
    ALT_REDEN_PARKEREN.Left = WFM_REDEN_PARKEREN.Left     '[PAC] TD166490
    ALT_REDEN_PARKEREN.Height = WFM_REDEN_PARKEREN.Height '[PAC] TD166490
    ALT_REDEN_PARKEREN.Top = WFM_REDEN_PARKEREN.Top       '[PAC] TD166490
    oudePARK_RAPPEL_DAT = datDPARK_RAPPEL_DAT

'[PAC] - TD169077 START
    If Left(GetWorkstep(WIViewer), 2) = "33" Then
        If UCase(WFM_WERKSOORT) = "INF" Then
            If WFM_AANVRAAG_INFO = "$--$" Then              'Wordt gezet in frmALGBeoordelenDoc
                Call subCreateINFVerzoek
                WFM_AANVRAAG_INFO = ""
            Else
                Call subReadINFVerzoek(WIViewer.CALClientListItem.Info.objId.InternalName)
            End If
            gbIntblInfVerzoeken = True
            WFM_WERKSOORT.Enabled = False
            If UCase(WFM_WERKTYPE) = "IFU" Then
                WFM_WERKTYPE.Enabled = False
            End If
            Call subSetINFFields
        End If
        gb1StTime = False
    End If
'[PAC] - TD169077 END

    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub AllWerktypesPERwerksoort(strAfdeling As String)
Dim StrWKTtemp          As String
Dim strWKT              As String
Dim lngDummy, ff        As Long
Dim colalf              As Collection

    On Error GoTo EH
'   Mabr arrAllWKTperWKS al een keer gevuld
    For lngDummy = LBound(arrWerksoorten) To UBound(arrWerksoorten)
        StrWKTtemp = WFMData.Common.getField("WFAfdeling", arrWerksoorten(lngDummy), "AfdCode", strAfdeling)
        If strWKT = "" Then
            strWKT = StrWKTtemp
        Else
            strWKT = strWKT + "," + StrWKTtemp
        End If
    Next
    arrAllWKTperWKS = Split(strWKT, ",")
    Set colalf = New Collection
    For lngDummy = LBound(arrAllWKTperWKS) To UBound(arrAllWKTperWKS)
        colalf.Add arrAllWKTperWKS(lngDummy)
    Next
'   Sorteren
    Set colalf = SortCollection(colalf)
    For lngDummy = 1 To colalf.Count
        ff = lngDummy - 1
        arrAllWKTperWKS(ff) = colalf.item(lngDummy)
    Next
    Exit Sub

EH:
    DisplayError "AllWerktypesPERwerksoort"
End Sub

Private Sub WFM_BEHEER_ID_Change()
    If (Len(WFM_BEHEER_ID.Text) > 0) Then
        Frame1.Visible = True
    Else
        WFMrJN_IMP_CAESAR_ja.Value = False
        WFMrJN_IMP_CAESARnee.Value = False
    End If
End Sub

Private Sub WFM_REDEN_PARKEREN_Change()
Dim strWeken            As String
Dim strDate             As String

    WFM_REDEN_PARKEREN.BackColor = vbWhite
    If WFM_REDEN_PARKEREN.ListIndex >= 1 Then
        If Len(WFM_REDEN_PARKEREN) > 20 Then
            Err.Raise 12345, , "Deze Reden-Parkeren is te lang. Meld dit aan de beheerder!"
            GoTo EH
            WFM_REDEN_PARKEREN.ListIndex = 0
        ElseIf ALT_REDEN_PARKEREN = "" Then
            strWeken = WFMData.Common.getField("WFRedenParkeren", "Doorlooptijd", "RedenParkerenOmschrijving", WFM_REDEN_PARKEREN)
            strDate = Format(Date, "dd-mm-yyyy")
            datDPARK_RAPPEL_DAT = Format(DateAdd("ww", strWeken, Format(strDate, "yyyy-mm-dd")), "dd-mm-yyyy")
            datDPARK_RAPPEL_DAT.MinDate = Date
        End If
    End If
    Exit Sub

EH:
    DisplayError "Reden Parkeren"
End Sub

Private Sub WFM_WERKSOORT_Change()
    On Error GoTo EH

    Me.Width = 219                                      '[PAC] - TD169077
    If Not WFM_WERKSOORT = "" Then
'       Mabr werktypen vullen / weghalen
        If Not AFDELING = "" Then
            arrWKTperWKS = Split(WFMData.Common.getField("WFAfdeling", WFM_WERKSOORT, "AfdCode", AFDELING), ",")
            FillComboWRKtypen arrWKTperWKS, WFM_WERKTYPE
        End If

'[PAC] - TD169077 START
        If Left(GetWorkstep(WIViewer), 2) = "33" Then
            If UCase(WFM_WERKSOORT) = "INF" Then
                Me.Width = 447
                Call subSetINFFields
            End If
        End If
'[PAC] - TD169077 END

    Else            'Mabr werksoorten leeggemaakt
        FillComboWRKtypen arrAllWKTperWKS, WFM_WERKTYPE
        WFM_WERKTYPE = ""
    End If
    Exit Sub

EH:
    DisplayError "Werksoort"
End Sub

Private Sub WFM_WERKTYPE_Change()
Dim strTemp             As String
Dim strWeken            As String
Dim strDate             As String

'   Mabr rare errors
    On Error Resume Next
    If Not WFM_WERKTYPE = "" Then
        If WFM_WERKSOORT = "" Then
'           Doordat de werksoort wijzigt wordt de type weer leeggemaakt.. geinig
            strTemp = WFM_WERKTYPE
            WFM_WERKSOORT = WFMData.Common.getField("WFWerktype", "Werksoort", "Werktype", strTemp)
            WFM_WERKTYPE = strTemp
        End If

'[PAC] - TD169077 START
        If Left(GetWorkstep(WIViewer), 2) = "33" Then
            If UCase(WFM_WERKSOORT) = "INF" And _
               Not gb1StTime Then
                WFMDEINDDAT = ""
            End If
        End If
'[PAC] - TD169077 END

        WFMDEINDDAT.Enabled = True
        cmdDatum.Enabled = True
        labeleinddatum.Enabled = True
'       Mabr en de einddatum
        If WFMDEINDDAT = "" Then
            strWeken = WFMData.Common.getField("WFWerktype", "Doorlooptijd", "Werktype", WFM_WERKTYPE)
'           De dat_doc want dat_ontv is nog niet omhoog getild...
            If WFMDDAT_ONTV = "" Then
                strDate = WFMDDAT_DOC
            Else
                strDate = WFMDDAT_ONTV
            End If
            WFMDEINDDAT = Format(DateAdd("ww", strWeken, Format(strDate, "yyyy-mm-dd")), "dd-mm-yyyy")
            strTempdate = WFMDEINDDAT.Text
        End If
    Else
        WFMDEINDDAT = ""
        WFMDEINDDAT.Enabled = False
        cmdDatum.Enabled = False
        labeleinddatum.Enabled = False
    End If

'[PAC] - TD169077 - START
    If Left(GetWorkstep(WIViewer), 2) = "33" Then
        txtEindDat_Gepland.Text = WFMDEINDDAT.Text
    
        Call subSetINFFields
        Call subCheckViewerMenu
    End If
'[PAC] - TD169077 - END
    Exit Sub

EH:
    DisplayError "Werktype"
End Sub

Public Sub FillComboWRKSOORT(ByRef arrWerksoorten() As String, ByVal cbo As Control)
Dim lngDummy            As Long

    cbo.Clear
    cbo.AddItem
    cbo.list(0) = ""
    For lngDummy = LBound(arrWerksoorten) To UBound(arrWerksoorten)
        cbo.AddItem
        cbo.list(lngDummy + 1, 0) = arrWerksoorten(lngDummy)
        cbo.list(lngDummy + 1, 1) = WFMData.Common.getField("WFWerksoort", "WerksoortOmschrijving", "WerksoortAfkorting", arrWerksoorten(lngDummy), "Enabled", "1")
    Next
End Sub

Public Sub FillComboWRKtypen(ByRef arrWerktypen() As String, ByVal cbo As Control)
Dim lngDummy            As Long

    cbo.Clear
    cbo.AddItem
    cbo.list(0) = ""
    For lngDummy = LBound(arrWerktypen) To UBound(arrWerktypen)
        cbo.AddItem
        cbo.list(lngDummy + 1, 0) = arrWerktypen(lngDummy)
        cbo.list(lngDummy + 1, 1) = WFMData.Common.getField("WFWerktype", "WerktypeOmschrijving", "Werktype", arrWerktypen(lngDummy), "Enabled", "1")
   Next
End Sub

Public Sub FillComboRedenParkeren(ByRef arrRedenParkeren() As String, ByVal cbo As Control)
Dim lngDummy            As Long
Dim lngTeller           As Long
Dim strReden            As String
Dim blnAlert            As Boolean
Dim strExtra            As String

    blnAlert = True
    If WFMrJN_PARKINT_ja Then
        strExtra = "INT"
    Else
        strExtra = "EXT"
    End If
    cbo.Clear
    cbo.AddItem
    cbo.list(0) = ""        'Lege keuze ervoor
    lngTeller = 0
    For lngDummy = LBound(arrRedenParkeren) To UBound(arrRedenParkeren)
        If WFMData.Common.getField("WFRedenParkeren", "Extra", "RedenParkeren", arrRedenParkeren(lngDummy)) = strExtra Then
            If WFMData.Common.getField("WFRedenParkeren", "Enabled", "RedenParkeren", arrRedenParkeren(lngDummy)) = "1" Then
                strReden = WFMData.Common.getField("WFRedenParkeren", "RedenParkerenOmschrijving", "RedenParkeren", arrRedenParkeren(lngDummy))
                cbo.AddItem
                cbo.list(lngTeller + 1, 0) = strReden
                cbo.list(lngTeller + 1, 1) = strReden
                If cbo = strReden Then blnAlert = False
                lngTeller = lngTeller + 1
            End If
        End If
    Next
    If cbo = "" Then blnAlert = False       'Een lege keuze is geen reden tot geel
    If blnAlert Then
        cbo.BackColor = vbRed               'Dus alleen als er een onbekende waarde wordt aangetroffen (b.v. INT of EXT)
    Else
        cbo.BackColor = vbWhite
    End If
End Sub

Private Sub AFDELING_Change()
Dim strAfdeling         As String
Dim strAfdeling_user    As String
Dim vUser               As Variant

    strAfdeling = AFDELING.SelText
    If WFM_BEH_GROEP = "" Then      'Geen behandelgroep dan afdeling
        WFM_BEHANDELAAR.Clear
        For Each vUser In GetUsersPerAfdeling(strAfdeling)
            WFM_BEHANDELAAR.AddItem vUser
        Next
    Else            'wel behandelgroep dan
        WFM_BEHANDELAAR.Clear
        For Each vUser In GetUsersPerPerBehGroep(WFM_BEH_GROEP.Text, strAfdeling)
            WFM_BEHANDELAAR.AddItem vUser
        Next
    End If
    If strAfdeling <> WFM_DOORZENDEN_NAAR.Value Then
        WFM_BEH_GROEP.Value = ""
        WFM_BEH_GROEP.Locked = True
        WFM_BEHANDELAAR.SelText = ""
        WFM_BEHANDELAAR.Locked = True
        WFM_STUUR_VAR.Value = "1"
    Else
        WFM_BEHANDELAAR.Locked = False
        WFM_BEH_GROEP.Locked = False
    End If
    If optStatParkeren Then Call optStatParkeren_Click
End Sub

Private Sub WFM_BEH_GROEP_Change()
' Waarde veranderd dus dan behandelaars leeg
' moeten we nog checken voor groepen onder de afdeling???
' of niet.. een dropdownlistje is beter misschien
Dim beh_groepnew        As String
Dim behgroepgebr        As String
Dim permissie           As String
Dim strAfdeling         As String
Dim vUser               As Variant

    beh_groepnew = WFM_BEH_GROEP.Text
    behgroepgebr = CALGetUserVar("WFUBehGroep", CALClient.username)
    strAfdeling = CALGetUserVar("Afdeling", CALClient.username)
    permissie = CALGetUserVar("FuncGroup", CALClient.username)
    WFM_BEHANDELAAR.Clear
    For Each vUser In GetUsersPerPerBehGroep(WFM_BEH_GROEP.Text, strAfdeling)
        WFM_BEHANDELAAR.AddItem vUser
    Next
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

'Private Sub cmdUitz_Click()
'    On Error GoTo eh
'    CheckOpUitzondering WIViewer
'    Exit Sub
'
'eh:
'    DisplayError "CheckOpUitzondering"
'End Sub

Private Sub cmdAntInfo_Click()
Dim aanvraagproces      As String
Dim myInfoNoteName      As String
Dim Antwoordtext        As String

    On Error GoTo EH
    geannuleerd = True
    aanvraagproces = getaanvraagproces(WFM_AANVRAAG_INFO.Text)
    frmInfoNote.NoteName = "Antwoord Informatieverzoek"
    Set frmInfoNote.WorkitemViewer = WIViewer
    frmInfoNote.Show vbModal
    If Not frmInfoNote.TextBox1 = "" Then
        Antwoordtext = frmInfoNote.TextBox1 & vbCrLf & " door:" + CALGetUserVar("MyHupo1", CALClient.username)
    Else
        Antwoordtext = "Zaak afgehandeld" & vbCrLf & " door:" + CALGetUserVar("MyHupo1", CALClient.username)
    End If
    Unload frmInfoNote
    If geannuleerd Then Exit Sub
    myInfoNoteName = "Antwoord informatieverzoek dd " & Format(Now(), " yyyy-mm-dd")
    Call WIViewer.Notes.Add(1, myInfoNoteName, Antwoordtext)
    Call COLLMemo2Workstep("Doorzenden", "", WIViewer, aanvraagproces)
    WFM_AANVRAAG_INFO.Value = ""
    cmdAntInfo.Enabled = False
    Exit Sub

EH:
    DisplayError "Info"
End Sub

Private Sub cmdGBA_Click()
    On Error GoTo EH
    Set frmALGGBAReadOnly.WorkitemViewer = WIViewer
    frmALGGBAReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub cmdStartBrief_Click()
    Call StartBrief(WIViewer, "Word")
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim sAnswer             As String
Dim ChildItem           As CALClientListItem
Dim folder              As CALFolder

    On Error GoTo EH
    DateCheck WFMDMEMO_DAT_1
    DateCheck WFMDMEMO_DAT_2
    DateCheck WFMDMEMO_DAT_3
    DateCheck WFMDMEMO_DAT_4
    DateCheck WFMDMEMO_DAT_5
    DateCheck WFMDEINDDAT
    If optStatParkeren Then
        If Format(datDPARK_RAPPEL_DAT, "yyyy-mm-dd") <> Format(oudePARK_RAPPEL_DAT, "yyyy-mm-dd") Then
            If Format(datDPARK_RAPPEL_DAT, "yyyy-mm-dd") < Format(Date, "yyyy-mm-dd") Then
                Err.Raise 12345, , "De zaak wordt niet doorgezonden, omdat de gewijzigde Parkeer datum niet in het verleden mag liggen!"
                GoTo EH
            End If
        End If
    Else
        WFM_REDEN_PARKEREN = ""
        WFMDPARK_RAPPEL_DAT = ""
    End If
    If Format(datDPARK_RAPPEL_DAT, "yyyymmdd") < "20000000" Then
        WFMDPARK_RAPPEL_DAT = ""
    Else
        WFMDPARK_RAPPEL_DAT = Format(datDPARK_RAPPEL_DAT, "dd-mm-yyyy")
    End If
    DateCheck WFMDPARK_RAPPEL_DAT
'   Mabr dit gaan we maar even niet doen
    If optStatParkeren Then
'       De datum bij parkeren wordt niet gechecked, want bij een ouder record kan die ondertussen in het verleden liggen en we willen hem dan niet verplicht laten aanpassen.
        If ALT_REDEN_PARKEREN > "" Then
            WFM_REDEN_PARKEREN.AddItem (ALT_REDEN_PARKEREN)
            WFM_REDEN_PARKEREN = ALT_REDEN_PARKEREN
        End If
        If WFM_REDEN_PARKEREN = "" Then
            Err.Raise 12345, , "Er moet een Reden Parkeren worden opgegeven!"
            GoTo EH
            Exit Sub
        End If
        If ALT_REDEN_PARKEREN = "" Then
            If Not WFM_REDEN_PARKEREN.MatchFound Then
                WFM_REDEN_PARKEREN.BackColor = vbRed
                Err.Raise 12345, , "Deze Reden Parkeren is niet geldig!"
                GoTo EH
            End If
        End If
    End If
    If Format(datDPARK_RAPPEL_DAT, "yyyymmdd") > "20000000" Then
        datDPARK_RAPPEL_DAT.MinDate = Date
    End If
    CheckHupo WFM_BEHANDELAAR
    If AFDELING.Value <> WFM_DOORZENDEN_NAAR Then
        If IsLeegmakenVeldenJa(WFM_WERKSOORT.Value, WFM_WERKTYPE.Value) Then
            WFM_WERKSOORT.Value = ""
            WFM_WERKTYPE.Value = ""
        Else
            Exit Sub
        End If
        WFM_DOORZENDEN_NAAR = AFDELING.Value
        Call Doorzendennieuw(WIViewer, WFM_DOORZENDEN_NAAR)
        Exit Sub
    End If

'[PAC] - TD169077 START
    If Left(GetWorkstep(WIViewer), 2) = "33" Then
        If UCase(WFM_WERKSOORT) = "INF" Then
            If WFM_WERKTYPE = "" Then
                MsgBox "Geen werktype voor dit Informatieverzoek gekozen."
                WFM_WERKTYPE.SetFocus
                Exit Sub
            End If
            If UCase(WFM_WERKTYPE) = "IFU" Then
                If WFMrJN_INF_AFGEHANDELD_ja.Value And _
                   WFMrJN_UITBR_VERSTUURDnee.Value Then
                    MsgBox "Geen Uitstelbrief verstuurd."
                    WFMrJN_UITBR_VERSTUURD_ja.SetFocus
                    Exit Sub
                End If
                If txtDat_UitstelBrief.Text = "" Then
                    MsgBox "Geen Datum Uitstelbrief opgegeven."
                    If txtDat_UitstelBrief.Visible Then
                        txtDat_UitstelBrief.Text = Format(Now, "dd-mm-yyyy")
                        txtDat_UitstelBrief.SetFocus
                    End If
                    Exit Sub
                End If
            End If
            If WFMrJN_INF_AFGEHANDELD_ja.Value Then
                sAnswer = MsgBox("Weet u zeker dat dit Informatieverzoek afgesloten moet worden?", vbYesNo, "Informatieverzoek afsluiten")
                If sAnswer = vbNo Then Exit Sub
                If txtDat_Afgehandeld.Text = "" Then
                    MsgBox "Geen Datum Verzoek afgehandeld opgegeven."
                    If txtDat_Afgehandeld.Visible Then
                        txtDat_Afgehandeld.Text = Format(Now, "dd-mm-yyyy")
                        txtDat_Afgehandeld.SetFocus
                    End If
                    Exit Sub
                End If
            End If
    
            If Not gbIntblInfVerzoeken Then
                Call subCreateINFVerzoek
            End If
            Call subUpdateINFVerzoek
        End If
    End If
'[PAC] - TD169077 END

    If Not SetCALXFormFields Then Exit Sub

    If UCase(WFM_WERKSOORT) = "INF" And _
       WFMrJN_INF_AFGEHANDELD_ja.Value Then
        myStatus.Value = "Archief"
    End If

    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub imgCAESAR_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call Extralink(WIViewer, WFM_NR_POLIS)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
End Sub

Private Sub IMGsnelzoek_Click()
    frmQuery.QRYTextBox1 = WFM_NR_POLIS
    frmQuery.cmdFind_Click
    frmQuery.Show 0
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        If optStatLeeg = True Then
            myStatus.Value = ""
        End If
        If optStatBehandelen = True Then
            myStatus.Value = "Behandelen"
        End If
        If optCCC.Value Then                            '[PAC] TD166490
            myStatus.Value = "CCC"                      '[PAC] TD166490
        End If                                          '[PAC] TD166490
        If optGba = True Then
            myStatus.Value = "GBA"
        End If
        If optStatControle = True Then
            myStatus.Value = "Controle Caesar"
        End If
        If optStatParkeren = True Then
            myStatus.Value = "Parkeren"
        End If
        If Optstatofferte = True Then
           myStatus.Value = "Offerte"
        End If
        If Optstatreactie = True Then
           myStatus.Value = "Reactie Offerte"
        End If
    End If
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

'[PAC] - TD169077 Added Subroutines
Private Sub WFMrJN_INF_AFGEHANDELD_ja_Click()
    lblDat_Afgehandeld.Visible = True
    If txtDat_Afgehandeld.Text = "" Then
        txtDat_Afgehandeld.Text = Format(Now, "dd-mm-yyyy")
    End If
    txtDat_Afgehandeld.Visible = True
    txtDat_Afgehandeld.SetFocus
End Sub
Private Sub WFMrJN_INF_AFGEHANDELDnee_Click()
    lblDat_Afgehandeld.Visible = False
    txtDat_Afgehandeld.Visible = False
End Sub

Private Sub WFMrJN_UITBR_VERSTUURD_ja_Click()
    lblUBDatum.Visible = True
    If txtDat_UitstelBrief.Text = "" Then
        txtDat_UitstelBrief.Text = Format(Now, "dd-mm-yyyy")
    End If
    txtDat_UitstelBrief.Visible = True
    txtDat_UitstelBrief.SetFocus
End Sub
Private Sub WFMrJN_UITBR_VERSTUURDnee_Click()
    txtDat_UitstelBrief.Visible = False
    lblUBDatum.Visible = False
End Sub
'[PAC] - TD169077 End Added Subroutines

Private Sub WFMrJN_PARKINT_ja_Click()
    If WFM_PARKEERSOORT = "" Or WFM_PARKEERSOORT = "EXT" Then
        WFM_PARKEERSOORT = "INT"
    End If
    Call optStatParkeren_Click
End Sub
Private Sub WFMrJN_PARKINTnee_Click()
    If WFM_PARKEERSOORT = "" Or WFM_PARKEERSOORT = "INT" Then
        WFM_PARKEERSOORT = "EXT"
    End If
    Call optStatParkeren_Click
End Sub

Private Sub optStatParkeren_Change()
    If Not optStatParkeren Then setParkerenVelden (False)
End Sub

Private Sub optStatParkeren_Click()
Dim arrRedenParkeren()  As String

    frmINTEXTpark.Visible = True
    datDPARK_RAPPEL_DAT.Visible = True
    datDPARK_RAPPEL_DAT.CustomFormat = "dd-MM-yyyy" ' dat was hij al, maar hij moet er toch weer aan herinnerd worden, bug in DTPicker?
    If optStatParkeren Then Call optStatParkerenVoorbereiden
    If WFM_PARKEERSOORT = "" Then WFM_PARKEERSOORT = "EXT"
    If AFDELING > "" Then
        WFM_REDEN_PARKEREN.Visible = True
        ALT_REDEN_PARKEREN.Visible = False
        arrRedenParkeren = Split(WFMData.Common.getField("WFAfdeling", "RedenParkeren", "AfdCode", AFDELING), ",")
        FillComboRedenParkeren arrRedenParkeren, WFM_REDEN_PARKEREN
        ALT_REDEN_PARKEREN = ""
    End If
    If AFDELING = "" Or WFM_REDEN_PARKEREN.ListCount < 2 Then
        WFM_REDEN_PARKEREN.Visible = False
        ALT_REDEN_PARKEREN.Visible = True
        ALT_REDEN_PARKEREN = WFM_REDEN_PARKEREN
    End If
End Sub

Private Sub optStatParkerenVoorbereiden()
    datDPARK_RAPPEL_DAT.MaxDate = DateAdd("m", 3, Date)
    If Format(WFMDPARK_RAPPEL_DAT, "yyyymmdd") < "20000000" Then
        datDPARK_RAPPEL_DAT.MinDate = Date
        datDPARK_RAPPEL_DAT = Date
    ElseIf Format(WFMDPARK_RAPPEL_DAT, "yyyymmdd") < Format(Date, "yyyymmdd") Then
        datDPARK_RAPPEL_DAT.MinDate = WFMDPARK_RAPPEL_DAT
        datDPARK_RAPPEL_DAT = WFMDPARK_RAPPEL_DAT
    Else
        datDPARK_RAPPEL_DAT.MinDate = Date
        datDPARK_RAPPEL_DAT = WFMDPARK_RAPPEL_DAT
    End If
End Sub

Private Sub WFMDMEMO_DAT_1_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDMEMO_DAT_1
    WFMDMEMO_DAT_1.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Memo datum 1"
End Sub

Private Sub WFMDMEMO_DAT_2_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDMEMO_DAT_2
    WFMDMEMO_DAT_2.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Memo datum 2"
End Sub

Private Sub WFMDMEMO_DAT_3_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDMEMO_DAT_3
    WFMDMEMO_DAT_3.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Memo datum 3"
End Sub

Private Sub WFMDMEMO_DAT_4_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDMEMO_DAT_4
    WFMDMEMO_DAT_4.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Memo datum 4"
End Sub

Private Sub WFMDMEMO_DAT_5_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDMEMO_DAT_5
    WFMDMEMO_DAT_5.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Memo datum 5"
End Sub

Private Sub WFMDEINDDAT_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDEINDDAT
    WFMDEINDDAT.BackColor = TextboxWhite
    DateCheckBefore WFMDEINDDAT
    If WFM_WERKTYPE = "" Then
        If Not WFMDEINDDAT = "" Then
            MsgBox "De einddatum mag niet gezet worden bij een leeg werktype"
            WFMDEINDDAT = ""
        End If
    Else
        If Trim(WFMDEINDDAT) = "" Then
            MsgBox "De einddatum mag niet leeg zijn"
            WFMDEINDDAT = strTempdate
        End If
'[PAC] - TD169077 - START
        If Left(GetWorkstep(WIViewer), 2) = "33" Then
            txtEindDat_Gepland.Text = WFMDEINDDAT.Text
        End If
'[PAC] - TD169077 - END
    End If
    Exit Sub

EH:
    DisplayError "Einddatum"
End Sub

Private Function setParkerenVelden(bValue As Boolean)
    Me.WFM_REDEN_PARKEREN.Visible = bValue
    Me.datDPARK_RAPPEL_DAT.Visible = bValue
    Me.ALT_REDEN_PARKEREN.Visible = bValue
    Me.frmINTEXTpark.Visible = bValue
End Function

'[PAC] - TD169077 Added Subroutines
Private Sub txtDat_UitstelBrief_AfterUpdate()
    On Error GoTo ERR_DATUM
    DateCheck txtDat_UitstelBrief
    txtDat_UitstelBrief.BackColor = TextboxWhite
    Exit Sub

ERR_DATUM:
    DisplayError "Datum Uitstelbrief"
End Sub

Private Sub txtEindDat_Gepland_AfterUpdate()
    On Error GoTo ERR_DATUM
    DateCheck txtEindDat_Gepland
    txtEindDat_Gepland.BackColor = TextboxWhite
    Exit Sub

ERR_DATUM:
    DisplayError "Geplande Einddatum"
End Sub

Private Sub txtDat_Afgehandeld_AfterUpdate()
    On Error GoTo ERR_DATUM
    DateCheck txtDat_Afgehandeld
    txtDat_Afgehandeld.BackColor = TextboxWhite
    Exit Sub

ERR_DATUM:
    DisplayError "Datum Afgehandeld"
End Sub

Private Sub subSetINFFields()
    If UCase(WFM_WERKSOORT) = "INF" Then
        txtDat_Afgehandeld.Visible = False
        lblDat_Afgehandeld.Visible = False
        WFMrJN_INF_AFGEHANDELDnee.Visible = False
        WFMrJN_INF_AFGEHANDELD_ja.Visible = False
        lblInfVerzAfgehandeld.Visible = False
        txtDat_UitstelBrief.Visible = False
        lblUBDatum.Visible = False
        WFMrJN_UITBR_VERSTUURDnee.Enabled = False
        WFMrJN_UITBR_VERSTUURD_ja.Enabled = False
        lblUBVerstuurd.Enabled = False
        cmdUBAanmaken.Enabled = False
        frmUitstelBrief.Enabled = False
        If UCase(WFM_WERKTYPE) = "IFU" Then
            frmUitstelBrief.Enabled = True
            cmdUBAanmaken.Enabled = True
            lblUBVerstuurd.Enabled = True
            WFMrJN_UITBR_VERSTUURD_ja.Enabled = True
            WFMrJN_UITBR_VERSTUURDnee.Enabled = True
            If WFMrJN_UITBR_VERSTUURD_ja.Value Then
                lblUBDatum.Visible = True
                txtDat_UitstelBrief.Visible = True
            End If
        End If
        If UCase(WFM_WERKTYPE) <> "" Then
            lblInfVerzAfgehandeld.Visible = True
            WFMrJN_INF_AFGEHANDELD_ja.Visible = True
            WFMrJN_INF_AFGEHANDELDnee.Visible = True
            If WFMrJN_INF_AFGEHANDELD_ja.Value Then
                lblDat_Afgehandeld.Visible = True
                txtDat_Afgehandeld.Visible = True
            End If
        End If
    End If
End Sub

Private Sub subCheckViewerMenu()
    If UCase(WFM_WERKSOORT) = "INF" Then
        WIViewer.Commandbars.Controls(mnuEscaleren).Enabled = False
        WIViewer.Commandbars.Controls(mnuVerplaatsen).Enabled = False
        WIViewer.Commandbars.Controls(mnuDoorzenden).Enabled = False
    Else
        WIViewer.Commandbars.Controls(mnuEscaleren).Enabled = True
        WIViewer.Commandbars.Controls(mnuVerplaatsen).Enabled = True
        WIViewer.Commandbars.Controls(mnuDoorzenden).Enabled = True
    End If
End Sub

Private Sub subCreateINFVerzoek()
Dim sSQLString              As String
Dim sDatumGepland           As String

    On Error Resume Next
    txtEindDat_Gepland.Text = WFMDEINDDAT.Text
    sDatumGepland = Right$(WFMDEINDDAT.Text, 4)
    sDatumGepland = sDatumGepland & Mid$(WFMDEINDDAT.Text, 4, 2)
    sDatumGepland = sDatumGepland + Left$(WFMDEINDDAT.Text, 2)
    sSQLString = "INSERT INTO dbo.tblINFVerzoeken "
    sSQLString = sSQLString & "(INF_ObjID, INF_Dat_Eind_Gepland) "
    sSQLString = sSQLString & " Values ("
    sSQLString = sSQLString & "'" & WIViewer.CALClientListItem.Info.objId.InternalName & "', "
    sSQLString = sSQLString & "'" & sDatumGepland & "'"
    sSQLString = sSQLString & ")"
    Call SQLInsertINFVerzoek(sSQLString)
End Sub

Private Sub subReadINFVerzoek(ByVal vObjID As String)
Dim sHlpDate                As String
Dim oRecSet                 As adodb.Recordset

    On Error Resume Next
    Set oRecSet = SQLGetINFVerzoek(vObjID)
    If Not oRecSet.EOF Then
        sHlpDate = ""
        sHlpDate = Trim(oRecSet("INF_Dat_Uitstelbrief"))
        If sHlpDate <> "" Then
            txtDat_UitstelBrief.Text = Right(sHlpDate, 2) & "-"
            txtDat_UitstelBrief.Text = txtDat_UitstelBrief.Text & Mid(sHlpDate, 5, 2) & "-"
            txtDat_UitstelBrief.Text = txtDat_UitstelBrief.Text & Left(sHlpDate, 4)
        End If
        sHlpDate = ""
        sHlpDate = Trim(oRecSet("INF_Dat_Eind_Gepland"))
        txtEindDat_Gepland.Text = Right(sHlpDate, 2) & "-"
        txtEindDat_Gepland.Text = txtEindDat_Gepland.Text & Mid(sHlpDate, 5, 2) & "-"
        txtEindDat_Gepland.Text = txtEindDat_Gepland.Text & Left(sHlpDate, 4)
        sHlpDate = ""
        sHlpDate = Trim(oRecSet("INF_Dat_Afgehandeld"))
        If sHlpDate <> "" Then
            txtDat_Afgehandeld.Text = Right(sHlpDate, 2) & "-"
            txtDat_Afgehandeld.Text = txtDat_Afgehandeld.Text & Mid(sHlpDate, 5, 2) & "-"
            txtDat_Afgehandeld.Text = txtDat_Afgehandeld.Text & Left(sHlpDate, 4)
        End If
    End If
End Sub

Private Sub subUpdateINFVerzoek()
Dim sSQLString              As String
Dim sDatumUB                As String
Dim sDatumGepland           As String
Dim sDatumAfgehandeld       As String

    On Error Resume Next
    If WFMrJN_UITBR_VERSTUURD_ja.Value Then
        sDatumUB = Right$(txtDat_UitstelBrief.Text, 4)
        sDatumUB = sDatumUB & Mid$(txtDat_UitstelBrief.Text, 4, 2)
        sDatumUB = sDatumUB + Left$(txtDat_UitstelBrief.Text, 2)
    Else
        sDatumUB = ""
    End If
    sDatumGepland = Right$(WFMDEINDDAT.Text, 4)
    sDatumGepland = sDatumGepland & Mid$(WFMDEINDDAT.Text, 4, 2)
    sDatumGepland = sDatumGepland + Left$(WFMDEINDDAT.Text, 2)
    If WFMrJN_INF_AFGEHANDELD_ja.Value Then
        sDatumAfgehandeld = Right$(txtDat_Afgehandeld.Text, 4)
        sDatumAfgehandeld = sDatumAfgehandeld & Mid$(txtDat_Afgehandeld.Text, 4, 2)
        sDatumAfgehandeld = sDatumAfgehandeld + Left$(txtDat_Afgehandeld.Text, 2)
    Else
        sDatumAfgehandeld = ""
    End If
    
    sSQLString = "UPDATE dbo.tblINFVerzoeken SET "
    If sDatumUB <> "" Then
        sSQLString = sSQLString & "INF_Dat_Uitstelbrief = '" & sDatumUB & "', "
    End If
    sSQLString = sSQLString & "INF_Dat_Eind_Gepland = '" & sDatumGepland & "'"
    If sDatumAfgehandeld <> "" Then
        sSQLString = sSQLString & ", "
        sSQLString = sSQLString & "INF_Dat_Afgehandeld = '" & sDatumAfgehandeld & "'"
    End If
    sSQLString = sSQLString & " WHERE INF_ObjID = '" & WIViewer.CALClientListItem.Info.objId.InternalName & "'"
    Call SQLUpdateINFVerzoek(sSQLString)
End Sub
'[PAC] - TD169077 End Added Subroutines
Attribute VB_Name = "frmALGBeoordelenDoc"
Attribute VB_Base = "0{192101F8-541E-4A56-A11F-9E3E841D4A38}{4E9E516E-299A-4C9C-AD7A-73D29707B8B1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim myForm              As Object
Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myStatus            As CALFormField
Dim myESWMObjID         As String
Dim arrWerksoorten()    As String
Dim arrWerktypen()      As String
Dim arrWKTperWKS()      As String
Dim arrAllWKTperWKS()   As String
Dim strTempdate         As String

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Set QueryFrm(objForm)
    Set myForm = objForm
End Property
Public Property Get QueryFrm() As Object
    Set QueryFrm = myForm
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub cmdDatum_Click()
    If Not mvEinddatum.Visible Then
        mvEinddatum.Left = 72
        mvEinddatum.Top = 250
        mvEinddatum.Visible = True
        If Not WFMDEINDDAT = "" Then mvEinddatum = WFMDEINDDAT
    Else
        mvEinddatum.Visible = False
    End If
End Sub

Private Sub cmdExtraScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    If YetAnotherExtralink(WIViewer, WFM_NR_POLIS.Text) Then
        Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
        WFM_BEH_GROEP.Text = get_BEHGRP(WFM_IND_HUPO.Text)
        Call KopieerHUPO
        SetIndTrigger
    End If
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Screenscraping niet gelukt!"
End Sub

Private Sub imgCAESAR_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call Extralink(WIViewer, WFM_NR_POLIS)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
End Sub

Private Sub imgNotitie_Click()
    Set frmNotitie.rsViewer = WIViewer
    If Not ((WIViewer.CALClientListItem.Info.Status And calObjStatusWIP) = calObjStatusWIP) Then
        frmNotitie.lblAddNote.Enabled = False
    End If
    frmNotitie.Show 1
End Sub

Private Sub IMGsnelzoek_Click()
    frmQuery.QRYTextBox1 = WFM_NR_POLIS
    frmQuery.cmdFind_Click
    frmQuery.Show 0
End Sub

Private Sub mvEinddatum_DateClick(ByVal DateClicked As Date)
    WFMDEINDDAT = Format(mvEinddatum, "dd-mm-yyyy")
    'WFMDEINDDAT = mvEinddatum
    mvEinddatum.Visible = False
    WFMDEINDDAT.SetFocus
End Sub

Private Sub UserForm_Activate()
Dim i                   As Integer
Dim strAfdeling         As String
Dim strUser             As String
Dim strAfdelingsNummer  As String
Dim sSavDocType         As String
Dim ff                  As Variant
Static Init             As Boolean
Dim lngDummy            As Long
Dim ffstrwrt            As String
Dim permissie           As String
Dim UsrAfdeling         As String
Dim UsrTeam             As String
Dim bRes                As Boolean

    strAfdelingsNummer = Left(GetWorkstep(WIViewer), 2)
    On Error GoTo EH
    If Init Then Exit Sub
    Init = True

'[PAC] - TD169077 - START
    If Left(GetWorkstep(WIViewer), 2) = "33" Then
        If WFMDDAT_DOC = "" Then WFMDDAT_DOC = WFMDDAT_ONTV
        If WFMDDAT_DOC = "" Then
            WFMDDAT_DOC = Format(Now, "dd-mm-yyyy")
            MsgBox " Documentdatum was niet ingevuld en is nu op vandaag gezet."
        End If
    End If
'[PAC] - TD169077 - END

'[PAC] TD166490    optStatBehandelen2e.Visible = False
    strUser = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "BEHANDELAAR") 'WFM_BEHANDELAAR.Value
    strAfdeling = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR")

    permissie = CALGetUserVar("FuncGroup", CALClient.username)
    UsrAfdeling = CALGetUserVar("Afdeling", CALClient.username)
    UsrTeam = CALGetUserVar("WFUBehGroep", CALClient.username)

    fillDDList True, AFDELING, WFMData.Common.getList("WFAfdeling", "AfdCode", "Enabled", "1")
    AFDELING.Value = strAfdeling

    WFM_BEHANDELAAR.ColumnCount = 2
    WFM_BEHANDELAAR.BoundColumn = 1
    WFM_BEHANDELAAR.TextColumn = -1
    WFM_BEHANDELAAR.ColumnWidths = "50;0"

    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios

    ' ks teams a en b en andere ks beh broep 1 t/m 9 splitsen
    ' misschien eerste een collection bouwen en dan  fillDDListFromColl
    'JAG20070712 verwijderd. Vervangen door call vulBehandelGroep start
    bRes = vulBehandelGroep(strAfdeling, WFM_BEH_GROEP)
'    If Left(strAfdeling, 2) = "KS" And strAfdeling <> "KSP" Then
'        fillDDList True, WFM_BEH_GROEP, WFMData.Common.getList("WFBehGroep", "GroepOmschr", "Enabled", "1")
'        If strAfdeling = "KSA" Or strAfdeling = "KSB" Or _
'        strAfdeling = "KSC" Or strAfdeling = "KSD" Then
'        ' beetje omslachtige manier om A, B en C eruit te halen..
'            For i = 0 To WFM_BEH_GROEP.ListCount
'                If (WFM_BEH_GROEP.List(i, 0) = "A") Or (WFM_BEH_GROEP.List(i, 0) = "B") Or (WFM_BEH_GROEP.List(i, 0) = "C") Then
'                    WFM_BEH_GROEP.RemoveItem (i)
'                    WFM_BEH_GROEP.RemoveItem (i)
'                    WFM_BEH_GROEP.RemoveItem (i)
'                    Exit For
'                End If
'            Next i
            
'        Else
            'createcoll A en B
'            WFM_BEH_GROEP.Clear
'            WFM_BEH_GROEP.AddItem ""
'            WFM_BEH_GROEP.AddItem "A"
'            WFM_BEH_GROEP.AddItem "B"
'            If strAfdeling = "KS3" Then WFM_BEH_GROEP.AddItem "C"
'        End If
'    End If
    'JAG20070712 verwijderd. Vervangen door call vulBehandelGroep start

    On Error Resume Next
    WFM_BEHANDELAAR.Value = strUser
    On Error GoTo EH

    WFM_WERKTYPE.ColumnCount = 2
    WFM_WERKTYPE.BoundColumn = 1
    WFM_WERKTYPE.TextColumn = -1
    WFM_WERKTYPE.ColumnWidths = "30;30"

    WFM_WERKSOORT.ColumnCount = 2
    ' met de volgende gaan we een change event in en krijgen we een error
    ' dit als deze gevuld is met een waarde WERKSOORT...
    ' Omdat het toch de default is.....
    'WFM_WERKSOORT.BoundColumn = 1
    WFM_WERKSOORT.TextColumn = -1
    WFM_WERKSOORT.ColumnWidths = "25;30"

    ' Mabr ophalen werksoorten
    arrWerksoorten = Split(WFMData.Common.getField("WFAfdeling", "Werksoorten", "AfdCode", strAfdeling), ",")
    FillComboWRKSOORT arrWerksoorten, WFM_WERKSOORT
    ' Mabr Werktypes
    AllWerktypesPERwerksoort (strAfdeling)   ' Vullen van arrAllWKTperWKS
    If WFM_WERKSOORT = "" Then
            FillComboWRKtypen arrAllWKTperWKS, WFM_WERKTYPE
    Else
            arrWKTperWKS = Split(WFMData.Common.getField("WFAfdeling", WFM_WERKSOORT, "AfdCode", AFDELING), ",")
            FillComboWRKtypen arrWKTperWKS, WFM_WERKTYPE
    End If
    'Mabr verwijderen van BOP dat als default erop staat ...
    If WFM_IND_TRIGGER.Text = "BOP" Then
        WFM_IND_TRIGGER.AddItem "   "
        WFM_IND_TRIGGER.Text = "   "
    End If

    SetIndTrigger
    If strAfdeling = "PAC" Then
       ' WFM_AANTAL_ZAKEN.Value = 1
       ' WFM_AANTAL_ZAKEN.Visible = False
       ' Label36.Visible = False
'[PAC] TD166490        optStatBehandelen2e.Visible = True
        Label55.Visible = True
        optBehandelen_1e.Visible = True                 '[PAC] TD166490
        optBehandelen_2e.Visible = True                 '[PAC] TD166490
        optBehandelen_CCC.Visible = True                '[PAC] TD166490
'[PAC] TD166490        optStatLeeg.Visible = True
        For i = 1 To 12
            cmbWeken.AddItem i
        Next
        Call optBehandelen_1e_Click                     '[PAC] TD166490
    End If
    ' Voor KSP en PAC en FVP geen behandelgroepen
    If strAfdeling = "KSP" Or strAfdeling = "FVP" _
    Or strAfdeling = "FEP" Or strAfdeling = "PAC" Then
        WFM_BEH_GROEP.Visible = False
        WFM_BEH_GROEP.Value = ""  'TD76806 20071120
        lblbeg.Visible = False
    End If
    Call AFDELING_Change  'TD76806 20071120

'[PAC] - TD162544  Initialize JN_NAAR_CASE360
    If Left(WIViewer.CALClientListItem.Info.SourceWorkset, 5) = "33A01" Then
        fraCase360.Visible = True

        JN_NAAR_CASE360.AddItem ""
        JN_NAAR_CASE360.AddItem "Faillissementen"       '[PAC] - 15AUG14
        JN_NAAR_CASE360.AddItem "Kunduz"                '[PAC] - 15AUG14

        sSavDocType = WFM_DOCTYPE.Text
        If WFM_JN_NAAR_CASE360.Text = "" Then
            Call JN_NAAR_CASE360_Change
        Else
            Select Case WFM_JN_NAAR_CASE360.Text
                Case "FAI"                              '[PAC] - 15AUG14
                     JN_NAAR_CASE360.Value = "Faillissementen"  '[PAC] - 15AUG14
                Case "33K"
                     JN_NAAR_CASE360.Value = "Kunduz"   '[PAC] - 15AUG14
            End Select
            cbCase360DocType.Value = sSavDocType
        End If
    End If
'[PAC] - TD162544  End Initialize JN_NAAR_CASE360

    WFM_NR_POLIS.SetFocus                               '[PAC] - TD169077
    Exit Sub

EH:
    DisplayError "Userform activate"
End Sub

Private Sub AllWerktypesPERwerksoort(strAfdeling As String)
Dim StrWKTtemp      As String
Dim strWKT          As String
Dim lngDummy, ff    As Long
Dim colalf          As Collection

    On Error GoTo EH
'   Mabr arrAllWKTperWKS al een keer gevuld

    For lngDummy = LBound(arrWerksoorten) To UBound(arrWerksoorten)
        StrWKTtemp = WFMData.Common.getField("WFAfdeling", arrWerksoorten(lngDummy), "AfdCode", strAfdeling)
        If strWKT = "" Then
              strWKT = StrWKTtemp
        Else
             strWKT = strWKT + "," + StrWKTtemp
        End If
    Next
    arrAllWKTperWKS = Split(strWKT, ",")
    Set colalf = New Collection
    For lngDummy = LBound(arrAllWKTperWKS) To UBound(arrAllWKTperWKS)
        colalf.Add arrAllWKTperWKS(lngDummy)
    Next
'   Sorteren
    Set colalf = SortCollection(colalf)
    For lngDummy = 1 To colalf.Count
        ff = lngDummy - 1
        arrAllWKTperWKS(ff) = colalf.item(lngDummy)
    Next
    Exit Sub

EH:
    DisplayError "AllWerktypesPERwerksoort"
End Sub

Private Sub WFM_IND_HUPO_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_BEH_GROEP.Text = get_BEHGRP(WFM_IND_HUPO.Text)
End Sub

Private Sub WFM_WERKSOORT_Change()
    On Error GoTo EH
    If Not WFM_WERKSOORT = "" Then
        ' mabr werktypen vullen / weghalen
        If Not AFDELING = "" Then
            arrWKTperWKS = Split(WFMData.Common.getField("WFAfdeling", WFM_WERKSOORT, "AfdCode", AFDELING), ",")
        
            FillComboWRKtypen arrWKTperWKS, WFM_WERKTYPE
        End If
    Else ' mabr werksoorten leeggemaakt
        FillComboWRKtypen arrAllWKTperWKS, WFM_WERKTYPE
    End If
    Exit Sub

EH:
    DisplayError "Werksoort"
End Sub

Private Sub WFM_WERKTYPE_Change()
Dim strTemp     As String
Dim strWeken    As String
Dim strDate     As String

'   mabr rare errors
    On Error Resume Next
    If Not WFM_WERKTYPE = "" Then
        If WFM_WERKSOORT = "" Then
            ' doordat de werksoort wijzigt wordt de type weer leeggemaakt.. geinig
            strTemp = WFM_WERKTYPE
            WFM_WERKSOORT = WFMData.Common.getField("WFWerktype", "Werksoort", "Werktype", strTemp)
            WFM_WERKTYPE = strTemp
        End If

'[PAC] - TD169077 - START
        If Left(GetWorkstep(WIViewer), 2) = "33" Then
            If UCase(WFM_WERKSOORT) = "INF" Then WFMDEINDDAT = ""
        End If
'[PAC] - TD169077 - END

        'Mabr en de einddatum
        WFMDEINDDAT.Enabled = True
        cmdDatum.Enabled = True
        labeleinddatum.Enabled = True
        'Mabr eindatum leeg dan zetten...
        If WFMDEINDDAT = "" Then
            strWeken = WFMData.Common.getField("WFWerktype", "Doorlooptijd", "Werktype", WFM_WERKTYPE)
            ' de dat_doc klopt volgens mij maar met die mailtjes ...
            If AFDELING <> "FEP" Then   'TD 69975. In FEP-flow einddatum op basis van systeemdatum.
                If WFMDDAT_ONTV = "" Then
                    strDate = WFMDDAT_DOC
                Else
                    strDate = WFMDDAT_ONTV
                End If
            Else
                strDate = Format(Date, "dd-mm-yyyy")
            End If

            WFMDEINDDAT = Format(DateAdd("ww", strWeken, Format(strDate, "yyyy-mm-dd")), "dd-mm-yyyy")
            'voor als hij leeggemaakt wordt...
            strTempdate = WFMDEINDDAT
        End If
    Else
        WFMDEINDDAT = ""
        WFMDEINDDAT.Enabled = False
        cmdDatum.Enabled = False
        labeleinddatum.Enabled = False
    End If
    'Mabr kenmerk moet gevuld worden.
    SetIndTrigger
    Exit Sub

EH:
    DisplayError "Werktype"
End Sub

'[PAC] - TD162544  Subroutine Added
Private Sub JN_NAAR_CASE360_Change()
    cbCase360DocType.Clear
    If JN_NAAR_CASE360.Value = "" Then
        cbCase360DocType.Enabled = False
        lblContractNr.Visible = False                   '[PAC] - 15AUG14
        WFM_NR_CONTRACT.Visible = False                 '[PAC] - 15AUG14
        cmdToevoegen.Enabled = True
        cmdCopy.Enabled = True
    Else
        cbCase360DocType.Enabled = True
        Call FillCase360DocTypes(JN_NAAR_CASE360.Value, cbCase360DocType)
        cmdToevoegen.Enabled = False
        cmdCopy.Enabled = False
        lblContractNr.Visible = False                   '[PAC] - 15AUG14
        WFM_NR_CONTRACT.Visible = False                 '[PAC] - 15AUG14
        If JN_NAAR_CASE360.Value = "Kunduz" Then        '[PAC] - 15AUG14
            lblContractNr.Visible = True                '[PAC] - 15AUG14
            WFM_NR_CONTRACT.Visible = True              '[PAC] - 15AUG14
        End If                                          '[PAC] - 15AUG14
    End If
End Sub
'[PAC] - TD162544  End Subroutine Added

Public Sub FillComboWRKSOORT(ByRef arrWerksoorten() As String, ByVal cbo As Control)
Dim lngDummy    As Long

    cbo.Clear
    cbo.AddItem
    cbo.list(0) = ""
    For lngDummy = LBound(arrWerksoorten) To UBound(arrWerksoorten)
        cbo.AddItem
        cbo.list(lngDummy + 1, 0) = arrWerksoorten(lngDummy)
        cbo.list(lngDummy + 1, 1) = WFMData.Common.getField("WFWerksoort", "WerksoortOmschrijving", "WerksoortAfkorting", arrWerksoorten(lngDummy), "Enabled", "1")
    Next
End Sub

Public Sub FillComboWRKtypen(ByRef arrWerktypen() As String, ByVal cbo As Control)
Dim lngDummy As Long

    cbo.Clear
    cbo.AddItem
    cbo.list(0) = ""
    For lngDummy = LBound(arrWerktypen) To UBound(arrWerktypen)
        cbo.AddItem
        'cbo.List(lngDummy + 1, 0) = arrWerktypen(lngDummy)
        cbo.list(lngDummy + 1, 0) = arrWerktypen(lngDummy)
        cbo.list(lngDummy + 1, 1) = WFMData.Common.getField("WFWerktype", "WerktypeOmschrijving", "Werktype", arrWerktypen(lngDummy), "Enabled", "1")
   Next
End Sub

Public Sub FillComboRedenParkeren(ByRef arrRedenParkeren() As String, ByVal cbo As Control)
Dim lngDummy As Long

    cbo.Clear
    cbo.AddItem
    cbo.list(0) = ""
    For lngDummy = LBound(arrRedenParkeren) To UBound(arrRedenParkeren)
        cbo.AddItem
        cbo.list(lngDummy + 1, 0) = arrRedenParkeren(lngDummy)
        cbo.list(lngDummy + 1, 1) = arrRedenParkeren(lngDummy)
   Next
End Sub

Private Sub AFDELING_Change()
Dim strAfdeling         As String
Dim strAfdeling_user    As String
Dim vUser               As Variant
Dim oud_BEHANDELAAR

    strAfdeling = AFDELING.SelText
    oud_BEHANDELAAR = WFM_BEHANDELAAR
    If WFM_BEH_GROEP = "" Then 'Geen behandelgroep dan afdeling
        WFM_BEHANDELAAR.Clear
        For Each vUser In GetUsersPerAfdeling(strAfdeling)
            WFM_BEHANDELAAR.AddItem vUser
            If vUser = oud_BEHANDELAAR Then WFM_BEHANDELAAR = oud_BEHANDELAAR
        Next
    Else            'wel behandelgroep dan
        WFM_BEHANDELAAR.Clear
        For Each vUser In GetUsersPerPerBehGroep(WFM_BEH_GROEP.Text, strAfdeling)
            WFM_BEHANDELAAR.AddItem vUser
            If vUser = oud_BEHANDELAAR Then WFM_BEHANDELAAR = oud_BEHANDELAAR
        Next
    End If
    strAfdeling_user = CALGetUserVar("Afdeling", CALClient.username)
'   Eerst stond hier WFM_doorzenden naar
    If strAfdeling <> strAfdeling_user Then
        WFM_BEHANDELAAR.Value = ""
        WFM_BEH_GROEP.Value = ""
        WFM_BEHANDELAAR.Locked = True
        WFM_BEH_GROEP.Locked = True
        WFM_STUUR_VAR.Value = "1"
        'PAC info verzoeke
    Else
        WFM_BEHANDELAAR.Locked = False
        WFM_BEH_GROEP.Locked = False
    End If
    ' WO 20-3-2009 TD128493
    If strAfdeling <> strAfdeling_user Then
        WFM_WERKTYPE.Value = ""
        WFM_WERKSOORT.Value = ""
        WFM_WERKTYPE.Enabled = False
        WFM_WERKSOORT.Enabled = False
        Label32.Enabled = False
        Label58.Enabled = False
    Else
        WFM_WERKTYPE.Enabled = True
        WFM_WERKSOORT.Enabled = True
        Label32.Enabled = True
        Label58.Enabled = True
    End If
End Sub

Private Sub WFM_BEH_GROEP_Change()
' waarde veranderd dus dan behandelaars leeg
' moeten we nog checken voor groepen onder de afdeling???
' of niet.. een dropdownlistje is beter misschien
Dim beh_groepnew  As String
Dim behgroepgebr  As String
Dim permissie As String
Dim strAfdeling As String
Dim vUser As Variant

    beh_groepnew = WFM_BEH_GROEP.Text
    behgroepgebr = CALGetUserVar("WFUBehGroep", CALClient.username)
    strAfdeling = CALGetUserVar("Afdeling", CALClient.username)
    permissie = CALGetUserVar("FuncGroup", CALClient.username)
    WFM_BEHANDELAAR.Clear
    If WFM_BEH_GROEP.Visible = True Then
        For Each vUser In GetUsersPerPerBehGroep(WFM_BEH_GROEP.Text, strAfdeling)
            WFM_BEHANDELAAR.AddItem vUser
        Next
    End If
End Sub

Private Sub cmdCopy_Click()
Static KopieNr  As Integer
Dim KopieItem   As CALClientListItem

    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    KopieNr = KopieNr + 1
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call CopySendDocument(WIViewer.CALClientListItem, KopieNr)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    DisplayError "Kopie"
    MousePointer = fmMousePointerDefault
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myKenMerk, myIdent      As String
Dim bdoctype                As Boolean

    Err.Clear
    On Error GoTo EH

'[PAC] - TD162544  Code added to check CASE360 DocType
    WFM_JN_NAAR_CASE360.Text = ""
    If JN_NAAR_CASE360.Value <> "" Then
        If cbCase360DocType.Value = "" Then
            MsgBox "CASE360 Document Type niet ingevuld."
            Exit Sub
        End If
        Select Case JN_NAAR_CASE360.Value               '[PAC] - 15AUG14
            Case "Faillissementen"
                 If WFM_NR_KLANT.Text = "" Or _
                    Len(WFM_NR_KLANT.Text) <> 6 Then
                    MsgBox "Klantnummer niet ingevuld of niet 6 pos. lang."
                    Exit Sub
                 End If
                 WFM_JN_NAAR_CASE360.Text = "FAI"
            Case "Kunduz"                               '[PAC] - 15AUG14
                 If WFM_NR_CONTRACT.Text = "" Or _
                    Len(WFM_NR_CONTRACT.Text) <> 5 Then
                    MsgBox "Contractnummer niet ingevuld of niet 5 pos. lang."
                    Exit Sub
                 End If
                 WFM_JN_NAAR_CASE360.Text = "33K"
        End Select                                      '[PAC] - 15AUG14
        If WFM_NR_POLIS <> "" And Len(WFM_NR_POLIS) <> 10 Then
            MsgBox "Deelnemernummer moet 10 pos. lang zijn."
            Exit Sub
        End If
        If WFM_NR_KLANT <> "" And Len(WFM_NR_KLANT) <> 6 Then
            MsgBox "Klantnummer moet 6 pos. lang zijn."
            Exit Sub
        End If

'       Forceer de zaak in 33A01 te blijven !!!
        WFM_IND_TRIGGER.Clear
        WFM_IND_TRIGGER.AddItem "BOP"
        WFM_IND_TRIGGER.ListIndex = 0
        WFM_DOCTYPE.Text = cbCase360DocType.Value
    End If
'[PAC] - TD162544  End Code added to check CASE360 DocType

    Call CheckFields
    If WFM_NAAM_DLNMR = "" And Len(WFM_NR_POLIS) = 10 Then
        WFM_NAAM_DLNMR.BackColor = TextboxRed
        Err.Raise 12345, , "Er moet een Deelnemer worden opgegeven!"
        GoTo EH
        Exit Sub
    Else
        WFM_NAAM_DLNMR.BackColor = TextboxWhite
    End If
    
    If WFM_NAAM_KLANT = "" And WFM_NR_KLANT <> "" Then
        WFM_NAAM_KLANT.BackColor = TextboxRed
        Err.Raise 12345, , "Er moet een Klant worden opgegeven!"
        GoTo EH
        Exit Sub
    Else
        WFM_NAAM_KLANT.BackColor = TextboxWhite
    End If

'[PAC] - TD169077
    If Left(GetWorkstep(WIViewer), 2) = "33" Then
        If UCase(WFM_WERKSOORT) = "INF" Then
            If WFM_WERKTYPE = "" Then
                MsgBox "Geen werktype voor dit Informatieverzoek gekozen."
                Exit Sub
            End If
            WFM_AANVRAAG_INFO = "$--$"                      '"Misbruik" van AANVRAAG_INFO
        End If
    End If
'[PAC] - TD169077

    myIdent = WFM_NR_POLIS + WFM_IND_TRIGGER
    If WFM_ZAAK_IDENT_NR <> myIdent Then
        WFM_ZAAK_IDENT_NR = myIdent
    End If
'[PAC] TD166490    If optStatBehandelen2e.Value = True Then
    If optBehandelen_2e.Value = True Then               '[PAC] TD166490
        Set myStatus = WIViewer.Fields.Find("STATUS").CALFormField
        myStatus.Value = "Behandelen"
    End If
    If optBehandelen_CCC.Value = True Then              '[PAC] TD166490
        Set myStatus = WIViewer.Fields.Find("STATUS").CALFormField  '[PAC] TD166490
        myStatus.Value = "CCC"                          '[PAC] TD166490
    End If                                              '[PAC] TD166490

    If AFDELING.Value <> WFM_DOORZENDEN_NAAR Then
        '[SaBl] 20080717 TD114147, [WO] 20080813 TD114147 rework
'    If AFDELING.value = "FEP" Then ' WO 20090206 TD122860 toch weer voor alle afdelingen
        If IsLeegmakenVeldenJa(WFM_WERKSOORT.Value, WFM_WERKTYPE.Value) Then
            WFM_WERKSOORT.Value = ""
            WFM_WERKTYPE.Value = ""
        Else
            Exit Sub
        End If
'    End If
        If WFM_DOCTYPE.Locked = True Then
            bdoctype = True
        End If
        WFM_DOORZENDEN_NAAR = AFDELING.Value
        Call Doorzendennieuw(WIViewer, WFM_DOORZENDEN_NAAR, bdoctype)
        Exit Sub
    End If

    If WFM_DOCTYPE.Value = "INF Informatieverzoek" Then
       WFM_DOCTYPE.Value = ""
    End If
    WIViewer.Save
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdToevoegen_Click()
Dim mobjQueryResults    As CALQueryResults
Dim myQueryFrm          As Object

    On Error GoTo EH
    If WFM_NR_POLIS = "" Then
        WFM_NR_POLIS.BackColor = TextboxRed
        Err.Raise 12345, , "Deelnemer nummer is niet ingevuld."
    End If
    Call CheckFields
    If Not WorkflowSave(WIViewer) Then Exit Sub
    ' zoeken folders met zelfde deelnemer nummer.
    ' na keuze van folder wordt document hierin geimporteerd.
    If Not Me.QueryFrm Is Nothing Then
       Me.QueryFrm.Show 0
       Exit Sub
    End If
    Set Me.QueryFrm = New frmZoekImport
    Set myQueryFrm = Me.QueryFrm
    Set myQueryFrm.WorkitemViewer = Me.WorkitemViewer
    Set myQueryFrm.ParentForm = Me
    myQueryFrm.Show 0
    Exit Sub

EH:
    ' Doctype, ind_trigger en zk_volgnr worden tijdens de
    ' import gevuld
    ' doctype niet ingevuld. Dat mag dus
    If Err.Number = 12349 Then
        Resume Next ' komt niet meer terug in checkfields
        WFM_DOCTYPE.BackColor = TextboxWhite
    End If
    DisplayError "Toevoegen"
End Sub

Private Sub cmdScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
    WFM_BEH_GROEP.Text = get_BEHGRP(WFM_IND_HUPO.Text)
    Call KopieerHUPO
    SetIndTrigger
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Open eerst het juiste CAESAR scherm (U1 OHUP, U3 INWG of U3 INAK)."
End Sub

Private Sub CheckFields()
    PolisNummerCheck WFM_NR_POLIS
    NumberCheck WFM_AANTAL_ZAKEN
    NumberCheck WFM_NR_AEGAR
    DateCheck WFMDGEB_DEELN
    CheckHupo WFM_BEHANDELAAR
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    mvEinddatum.Visible = False
    Me.Show 0
End Sub

Private Sub UserForm_Terminate()
    If Not Me.QueryFrm Is Nothing Then
        Unload Me.QueryFrm
    End If
End Sub

Private Sub WFM_AANTAL_ZAKEN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    NumberCheck WFM_AANTAL_ZAKEN
    WFM_AANTAL_ZAKEN.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Aantal zaken"
End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub

Private Sub WFM_IND_HUPO_AfterUpdate()
    Call KopieerHUPO
End Sub

Private Sub WFM_NR_AEGAR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Nr. Aegar"
End Sub

Private Sub WFM_NR_KLANT_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    Call getTPnaamnummer(Me)
End Sub

Private Sub WFM_NR_POLIS_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WFM_NR_POLIS.BackColor = TextboxWhite
    PolisNummerCheck WFM_NR_POLIS
    cmdOpslaan.Enabled = True
    SetIndTrigger
    Exit Sub

EH:
    DisplayError "Polisnummer"
   cmdOpslaan.Enabled = False
End Sub

Private Sub WFMDEINDDAT_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDEINDDAT
    WFMDEINDDAT.BackColor = TextboxWhite
    DateCheckBefore WFMDEINDDAT
    If WFM_WERKTYPE = "" Then
        If Not WFMDEINDDAT = "" Then
            MsgBox "De einddatum mag niet gezet worden bij een leeg werktype"
            WFMDEINDDAT = ""
        End If
    Else
        If Trim(WFMDEINDDAT) = "" Then
            MsgBox "De einddatum mag niet leeg zijn"
            WFMDEINDDAT = strTempdate
        End If
    End If
    Exit Sub

EH:
    DisplayError "Einddatum"
End Sub

Private Sub WFMDGEB_DEELN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDGEB_DEELN
    WFMDGEB_DEELN.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Geb. Deelnemer"
    End Sub
' Xtra functionaliteit voor de PAC en 1e en 2e lijns
' staat in de volgende subs.

'[PAC] TD166490 Private Sub optStatBehandelen2e_Click()
Private Sub optBehandelen_1e_Click()                    '[PAC] TD166490
    optJN_BEVEST_BRIEFnee.Visible = True
    optJN_BEVEST_BRIEF_ja.Visible = True
    Label57.Visible = True
    Label77.Visible = True                              '[PAC] TD166490
    cmbWeken.Visible = True
End Sub

'[PAC] TD166490 Private Sub optStatLeeg_Click()
Private Sub optBehandelen_2e_Click()                    '[PAC] TD166490
    optJN_BEVEST_BRIEFnee = True
    optJN_BEVEST_BRIEFnee.Visible = False
    optJN_BEVEST_BRIEF_ja.Visible = False
    Label57.Visible = False
    Label77.Visible = False                             '[PAC] TD166490
    cmbWeken.Visible = False
End Sub

'[PAC] TD166490 - Added subRoutine
Private Sub optBehandelen_ccc_Click()
    Call optBehandelen_2e_Click
End Sub
'[PAC] TD166490 - END Added subRoutine

Private Sub optJN_BEVEST_BRIEF_ja_Click()
    If Not WorkflowSave(WIViewer) Then Exit Sub
    If cmbWeken.Text = "" Then
        MsgBox "Zet het aantal weken voor de afhandeling."
        cmbWeken.SetFocus
        optJN_BEVEST_BRIEFnee = True
    Else
        If Mid(WFM_ZAAK_VLGNR_MEMO, 11, 12) = " Bevestiging" Then
            WFM_ZAAK_VLGNR_MEMO = Format(DateAdd("ww", cmbWeken.Value, Format(Now(), "yyyy-mm-dd")), "dd-mm-yyyy") + " Bevestiging " + Right(WFM_ZAAK_VLGNR_MEMO.Text, 26)
        Else
            WFM_ZAAK_VLGNR_MEMO = Format(DateAdd("ww", cmbWeken.Value, Format(Now(), "yyyy-mm-dd")), "dd-mm-yyyy") + " Bevestiging " + Left(WFM_ZAAK_VLGNR_MEMO.Text, 26)
        End If
        Call StartBrief(WorkitemViewer, "POST Ontvangstbevestiging")
    End If
End Sub

Private Sub optJN_BEVEST_BRIEFnee_Click()
    cmbWeken.Value = ""
    WFM_ZAAK_VLGNR_MEMO = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "ZAAK_VLGNR_MEMO")
End Sub

Public Sub SetIndTrigger()
Dim strIndtrigger As String
Dim arrTrigger() As String
Dim lngDummy As Long

    On Error GoTo EH
    If Not WFM_WERKTYPE = "" Then
'       Eerste schonen en vervolgens weer vullen van het lijstje
        WFM_IND_TRIGGER.Clear
        strIndtrigger = WFMData.Common.getField("WFWerktype", "Kenmerk", "Werktype", WFM_WERKTYPE)
        arrTrigger = Split(strIndtrigger, ",")
        For lngDummy = LBound(arrTrigger) To UBound(arrTrigger)
            WFM_IND_TRIGGER.AddItem arrTrigger(lngDummy)
         Next
        ' En nu het zetten van de juiste waarde.
        ' Als er geen DLN of KLT is ...
        If InStr(strIndtrigger, "DLN") + InStr(strIndtrigger, "KLT") = 0 Then
            ' AHC of JWK...
            WFM_IND_TRIGGER.Text = arrTrigger(0)
        Else ' Als we DLN en KLT hebben
        ' moeten we nog checken of we slechts 1 van de twee hebben
        ' misschien deze check eerst doen voor zowel JWK Als ADhoC en losse DLN OF KLT's
        '???
            If Len(strIndtrigger) = 3 Then
                WFM_IND_TRIGGER.Text = arrTrigger(0)
             Else ' hebben we er meer hebben we DLN en KLT
                If Len(WFM_NR_POLIS.Text) = 10 Then
                    WFM_IND_TRIGGER.Text = "DLN"
                ElseIf Len(WFM_NR_POLIS.Text) = 6 Then
                    WFM_IND_TRIGGER.Text = "KLT"
                End If
            End If
        End If
    Else
        WFM_IND_TRIGGER.Clear
        WFM_IND_TRIGGER = ""
    End If
    Exit Sub

EH:
    DisplayError "Werksoort"
End Sub

Public Sub KopieerHUPO()
    If WFM_BEHANDELAAR.Value = "" Then
            If Len(AFDELING) > 0 And InStr(WFM_IND_HUPO.Text, AFDELING) > 0 Then
                    WFM_BEHANDELAAR.Locked = False      'Deze wordt locked onde afdeling/change indien user/afd<>form/afd
                    WFM_BEH_GROEP.Text = get_BEHGRP(WFM_IND_HUPO.Text)
                    WFM_BEHANDELAAR.AddItem WFM_IND_HUPO
                    WFM_BEHANDELAAR.Value = WFM_IND_HUPO.Value
            End If
    End If
End Sub
Attribute VB_Name = "frmALGGBAReadOnly"
Attribute VB_Base = "0{5DA4A2D7-3518-4F0A-905F-D6A9F4BE1D05}{735A4905-4024-410C-8A05-D615F1087444}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Private Sub cmdPrint_Click()
' door in print bugje in VBA (de inhoud van de listview wordt niet geprint
' wordt eerst een listbox gevuld met de data en hoogte en breedte van de
' listview
    
    lbPartners.ColumnCount = 9
    
    DoEvents ' moet hier staan anders wordt de lb niet goed geprint
    CopyLvTolb lvPartners, lbPartners
    
    DoEvents ' moet hier staan anders wordt de lb niet goed geprint
    Me.Repaint
    
    lbPartners.Visible = True
    Me.PrintForm
    lbPartners.Visible = False
End Sub

Private Sub cmdSluiten_Click()
    Unload Me
End Sub
Private Function GetCALXFormFields() As Boolean

'On Error GoTo eh

    GetCALXFormFields = False
    
    GetFields WIViewer, Me
    CALGetTable lvPartners, WIViewer.Fields.Find("_TABLE_SVB")
    
    GetCALXFormFields = True

Exit Function

EH:
    DisplayError ("GetCALXFormFields")

End Function
Private Sub AddResultField(ListView As ListView, name, Caption, Witdh, Align, ResultOnly As Boolean)
Dim myColHeader As ColumnHeader
    
    Set myColHeader = ListView.ColumnHeaders.Add(, name, Caption, Witdh, Align)
    myColHeader.Tag = ResultOnly
    
End Sub
Private Sub UserForm_Activate()
Static Init As Boolean

'On Error GoTo eh
    
    If Init Then Exit Sub
    Init = True
    
    Me.lvPartners.ColumnHeaders.Add , , , 0, 0 ', Alignment:=1
    AddResultField lvPartners, "JN_HUW_REGEL_AANM", "Aanm.", 35, 0, False
    AddResultField lvPartners, "JN_HUW_REGEL_OK", "Ontv.", 30, 0, False
    AddResultField lvPartners, "INGANG_SVB", "Ingang SVB", 60, 0, False
    AddResultField lvPartners, "EINDE_SVB", "Einde SVB", 60, 0, False
    AddResultField lvPartners, "R", "R", 30, 0, False
    AddResultField lvPartners, "NAAM_PARTNER", "Naam Partner", 126, 0, False
    AddResultField lvPartners, "VOORLETTERS", "Voorl.", 40, 0, False
    AddResultField lvPartners, "VOORVOEGSELS", "Voorvoeg.", 60, 0, False
    AddResultField lvPartners, "GEB_DATUM_PARTNER", "Geb.datum", 60, 0, False
    
    Me.Tag = "Modaal"
    
    GetCALXFormFields
   
Exit Sub

EH:
    DisplayError "UserForm_Activate"
    
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
  Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
  myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
 ESWMObjID = myESWMObjID
End Property
Attribute VB_Name = "frmALGMutaties"
Attribute VB_Base = "0{A0761926-5EF8-42A1-A873-742FD32BE131}{B7B1DA49-F605-4F95-AA99-343B4B3D3C74}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
    Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim HostForm            As Object
Dim myESWMObjID         As String

Private Sub cmdScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Open eerst het juiste CAESAR scherm (UI MDVB)."
End Sub

Private Sub AFDELING_Change()
Dim strAfdeling         As String
Dim strAfdeling_user    As String
Dim vUser               As Variant

    strAfdeling = AFDELING.SelText
    WFM_BEHANDELAAR.Clear
    For Each vUser In GetUsersPerAfdeling(strAfdeling)
        WFM_BEHANDELAAR.AddItem vUser
    Next
    strAfdeling_user = CALGetUserVar("Afdeling", CALClient.username)
    If strAfdeling <> strAfdeling_user Then
        WFM_BEHANDELAAR.Value = ""
        WFM_BEHANDELAAR.Locked = True
        WFM_BEH_GROEP.Clear
        WFM_BEH_GROEP.Locked = True
    Else
        WFM_BEHANDELAAR.Locked = False
    End If
End Sub

Private Sub cmdDoorzenden_Click()
Dim ff                  As Boolean
Dim myFrmAfdeling       As Object

    On Error GoTo EH
    If WFMDDAT_DOC = "" Then
        MsgBox "Om een document door te zenden moet het datum doc zijn ingevuld.", vbOKOnly + vbExclamation
        Exit Sub
    End If
    Call Reclassificeer(WIViewer, "COLL")
    WorkflowSaveAlgedaan = True
    Call Doorzenden(WIViewer)
    If Afdelingannuleren = True Then
        Call WFMBackButton(WIViewer)
        Afdelingannuleren = False
    End If
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myIdent             As String

    On Error GoTo EH
    If WFMrJN_VERWERKT_ja Then
        WFMDDAT_VERWERKT = Format(Now, "dd-mm-yyyy")
    End If
    CheckHupo WFM_BEHANDELAAR
    If AFDELING.Value <> WFM_DOORZENDEN_NAAR Then
        WFM_DOORZENDEN_NAAR = AFDELING.Value
        Call Doorzendennieuw(WIViewer, WFM_DOORZENDEN_NAAR)
        Exit Sub
    End If
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub imgCAESAR_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call Extralink(WIViewer, WFM_NR_POLIS)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
End Sub


Private Sub imgNotitie_Click()
    Set frmNotitie.rsViewer = WIViewer
    If Not ((WIViewer.CALClientListItem.Info.Status And calObjStatusWIP) = calObjStatusWIP) Then
        frmNotitie.lblAddNote.Enabled = False
    End If
    frmNotitie.Show 1
End Sub

Private Sub IMGsnelzoek_Click()
    frmQuery.QRYTextBox1 = WFM_NR_POLIS
    frmQuery.cmdFind_Click
    frmQuery.Show 0
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean
Dim strAfdeling         As String
Dim strUser             As String
Dim i                   As Integer
Dim bRes                As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    WFM_DOCTYPE.AddItem "MUT Mutatieformulier"
    WFM_DOCTYPE.AddItem "SAL Salarislijst"
    strAfdeling = WFM_DOORZENDEN_NAAR.Value
    WFM_BEHANDELAAR.ColumnWidths = "50;0"
    WFM_BEHANDELAAR.list = CALGetUsersPerAfdeling(strAfdeling)
    strUser = WFM_BEHANDELAAR.Value
    'JAG20070712 ?? kan hier geen call naar CALGetFieldValue(WIViewer,CALClientListItem,OpenedItem,"DOORZENDEN_NAAR")
'   Komen? Of wordt hier functioneel het aantal afdelingen beperkt?

''Q1 Release 2012 CR No. 153254 Dept Changes
    AFDELING.AddItem ("PTA")
    AFDELING.AddItem ("PTB")
    AFDELING.AddItem ("FND")
    AFDELING.AddItem ("PTC")
    AFDELING.AddItem ("PTD")
    AFDELING.AddItem ("PPI")
    AFDELING.AddItem ("FAL")
    AFDELING.AddItem ("PTE")
    AFDELING.AddItem ("PTF")
    AFDELING.AddItem ("PTG")
    AFDELING.AddItem ("PTH")
    AFDELING.AddItem ("PTI")
    AFDELING.AddItem ("PTL")                            '[PAC] - TD17266
    AFDELING.AddItem ("PTR")                            '[PAC] - TD17266
    AFDELING.AddItem ("APP")                            '[PAC] 17MAR15 - PTN --> APP - TD172461
    AFDELING.Value = strAfdeling
    WFM_INTVERT.AddItem ""
    WFM_INTVERT.AddItem "Wacht op GBA"
    WFM_INTVERT.AddItem "Wacht op Klant"
    WFM_INTVERT.AddItem "Wijz. Regeling"
    WFM_INTVERT.AddItem "Nieuwe Klant"
    WFM_INTVERT.AddItem "Wijz. Caesar"
    WFM_INTVERT.AddItem "Overig"
    WFM_INTVERT.Value = ""
'   Mabr op team niveau wil men ook een view en dan moet het team gezet kunnen worden.
'   *** TD68006 team vullen in Collmut ***
    bRes = vulBehandelGroep(strAfdeling, WFM_BEH_GROEP)

    On Error Resume Next
    WFM_BEHANDELAAR.Value = strUser
    On Error GoTo EH
    Exit Sub

EH:
    DisplayError "Form activate"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub WFM_BEH_GROEP_Change()
' Waarde veranderd dus dan behandelaars leeg
' moeten we nog checken voor groepen onder de afdeling???
' of niet.. een dropdownlistje is beter misschien
Dim beh_groepnew        As String
Dim behgroepgebr        As String
Dim vUser               As Variant
Dim strAfdeling         As String

    beh_groepnew = WFM_BEH_GROEP.Text
    behgroepgebr = CALGetUserVar("WFUBehGroep", CALClient.username)
    strAfdeling = CALGetUserVar("Afdeling", CALClient.username)
    WFM_BEHANDELAAR.Clear
    For Each vUser In GetUsersPerPerBehGroep(WFM_BEH_GROEP.Text, strAfdeling)
        WFM_BEHANDELAAR.AddItem vUser
    Next
End Sub

Private Sub WFMDDAT_DOC_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_DOC
    WFMDDAT_DOC.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum document"
End Sub

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappeldatum"
End Sub
Attribute VB_Name = "frmAOVAfhCAESAR"
Attribute VB_Base = "0{7D749229-62E8-4EFA-977F-5C4A238D535F}{B2A0721E-01EC-452A-8FC9-42B4F687D960}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver As CALFormField

Private Sub cmdGegevens_Click()
    Set frmAOVGegevens.WorkitemViewer = Me.WorkitemViewer
    frmAOVGegevens.Show vbModal
    Set frmAOVGegevens = Nothing
End Sub

Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
On Error GoTo EH

    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub



Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH
    ' gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, "Word")

Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

On Error GoTo EH

    If Init Then Exit Sub
    Init = True
    
    
    WFM_MUTATIESOORT.Clear
    If WFM_AO_PERC_WAO <> "0" Then
        WFM_MUTATIESOORT.AddItem "IND"
        WFM_MUTATIESOORT.AddItem "INW"
    End If
    WFM_MUTATIESOORT.AddItem "RED"
    WFM_MUTATIESOORT.AddItem "REW"
    
    If WFM_WERKSRT = "NWE" Then
        WFM_MUTATIESOORT = "IND"
    End If
    GetCALXFormFields
    Exit Sub
EH:
    DisplayError "Userform activate"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub WFMDDATUM_INVAL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    DateCheck WFMDDATUM_INVAL
End Sub
Sub GetCALXFormFields()

    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))

End Sub

Private Function SetCALXFormFields() As Boolean

On Error GoTo EH

    SetCALXFormFields = False

    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
    
        myPolOver.Value = Right$(Space(10) & Trim(tbPolOver1), 10) & ";" _
                              & Right$(Space(10) & Trim(tbPolOver2), 10) & ";" _
                              & Right$(Space(10) + Trim(tbPolOver3), 10) & ";"
    
    End If
    SetCALXFormFields = True
Exit Function
EH:
    DisplayError "Save fields"

End Function
Attribute VB_Name = "frmAOVBeoordMut"
Attribute VB_Base = "0{8CFC098A-C558-4F3A-A452-0E615814F8C0}{59A4D510-2B43-403B-A206-37AF0D225179}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver As CALFormField

Private Sub cmdGegevens_Click()
    Set frmAOVGegevens.WorkitemViewer = Me.WorkitemViewer
    frmAOVGegevens.Show vbModal
    Set frmAOVGegevens = Nothing
End Sub

Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
On Error GoTo EH

    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub


Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_Activate()
Static Init As Boolean

On Error GoTo EH

    If Init Then Exit Sub
    Init = True
    
    GetCALXFormFields
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub
EH:
    DisplayError "Userform activate"
End Sub

Sub GetCALXFormFields()

    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))

End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub


Attribute VB_Name = "frmAOVBeoordVoll"
Attribute VB_Base = "0{8EBBEA08-4718-4BAE-ABF8-0A6A2E4D969A}{C25719E0-7DD0-4EF7-93FB-B8564B35A073}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myPolOver           As CALFormField

Private Sub cmdGegevens_Click()
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Set frmAOVGegevens.WorkitemViewer = Me.WorkitemViewer
    frmAOVGegevens.Show vbModal
    If frmAOVGegevens.rbJN_BETALING_ACHTER_ja.Value Or _
        frmAOVGegevens.rbJN_SAL_VERHOGING_ja.Value Or _
        frmAOVGegevens.rbJN_VERZEKERING_BIJnee.Value Then
        Me.WFMrJN_VERZ_AKKOORDnee.Value = True
    End If
    If Not frmAOVGegevens.WFMDDATUM_1E_DAG_WAO.Value = "" Then
        calcWAoleeftijd
    End If
    Set frmAOVGegevens = Nothing
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
'   Gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    Select Case GetWorkstep(WIViewer)
        Case "91V02 Beoord. voll."
             EnableFrame fraVolledig
             EnableFrame fraVerzAkk
    End Select
    If WFM_WERKSRT = "WYZ" Then
        Me.WFM_AOV_WIJZIGING.Visible = True
        Me.WFM_AOV_WIJZIGING.Clear
        Me.WFM_AOV_WIJZIGING.AddItem "Verhoging"
        Me.WFM_AOV_WIJZIGING.AddItem "Verlaging"
        Me.WFM_AOV_WIJZIGING.AddItem "Beeindiging"
    Else
        Me.WFM_AOV_WIJZIGING.Visible = False
        Me.lblWijziging.Visible = False
    End If
    If WFM_DOCTYPE = "AOV Infodrager" Or WFM_DOCTYPE = "AOV Wijz. Formulier" Then
        WFMrJN_VERZOEK_WRKGV_ja.Value = True
        WFMrJN_WAO_VOLLEDIG_ja.Value = True
        fraVolledig.Visible = False
    End If
    GetCALXFormFields
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub

EH:
    DisplayError "Userform activate"
End Sub

Public Sub EnableFrame(fraFrame As Frame)
Dim objControl          As Control

    fraFrame.Enabled = True
    For Each objControl In fraFrame.Controls
        objControl.Enabled = True
    Next
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub EnableButtons()
    If fraVolledig.Enabled Then
        If Me.WFMrJN_VERZOEK_WRKGV_ja.Value Or Me.WFMrJN_VERZOEK_WRKGVonb.Value Then
'           Overige mogelijkheden mogen ook
            Me.WFMrJN_WAO_VOLLEDIG_ja.Enabled = True
            Me.WFMrJN_WAO_VOLLEDIGnee.Enabled = True
            Me.WFMrJN_WAO_VOLLEDIGonb.Enabled = True
        Else
'           Overige mogelijkheden disablen
            Me.WFMrJN_WAO_VOLLEDIG_ja.Enabled = False
            Me.WFMrJN_WAO_VOLLEDIGnee.Enabled = False
            Me.WFMrJN_WAO_VOLLEDIGonb.Enabled = False
        End If
    End If
End Sub

Private Sub calcWAoleeftijd()
Dim date1               As Date
Dim date2               As Date
Dim vMaanden            As Variant
Dim ffdaggeb            As Integer
Dim ffdagWAO            As Integer

    If WFMDGEB_DEELN.Value = "" Then
        MsgBox "De geboortedatum is niet gevuld.", vbExclamation + vbOKOnly
        Exit Sub
    End If
    date1 = WFMDGEB_DEELN.Value                         ' CDate("27-01-1967") MaBr teste
    date2 = frmAOVGegevens.WFMDDATUM_1E_DAG_WAO.Value   ' CDate("07-12-1999") MaBr teste
    vMaanden = DateDiff("m", date1, date2) / 12
    If vMaanden = 33 Or vMaanden = 58 Then
        ffdaggeb = CStr(Format(date1, "dd"))
        ffdagWAO = Format(date2, "dd")
        If ffdagWAO - ffdaggeb > 0 Then vMaanden = vMaanden + 1
    End If

    If vMaanden < 33 Then
        Me.rLFT33.Value = True
    Else
        If vMaanden > 58 Then
            Me.rlft58.Value = True
        Else
            Me.rLft33_58.Value = True
        End If
    End If
End Sub

Private Sub VulBrieven()
    lbTemplates.Clear
    Me.WFM_REDEN_PARKEREN.Value = ""
    If Me.WFMrJN_VERZOEK_WRKGVnee.Value Then
        lbTemplates.AddItem "Verwijzing werkgever 2"
        Me.WFM_REDEN_PARKEREN.Value = "Verzoek niet door werkgever"
    End If
    If Me.WFMrJN_WAO_VOLLEDIGnee.Value Then
        lbTemplates.AddItem "Verzoek WAO beschikking 1"
        Me.WFM_REDEN_PARKEREN.Value = "WAO beschikking niet aanwezig"
    End If
    lbTemplates.AddItem "AOV Opgave uitkering"
    lbTemplates.AddItem "AOV Nieuw"
    lbTemplates.AddItem "AOV Afwijzing"
End Sub

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    DateCheck WFMDRAPPEL
End Sub

Private Sub WFMrJN_VERKL_WERKN_G_ja_Click()
    Call VulBrieven
End Sub
Private Sub WFMrJN_VERKL_WERKN_Gnee_Click()
    Call VulBrieven
End Sub

Private Sub WFMrJN_VRIJSTELLING_ja_Click()
    Call VulBrieven
End Sub
Private Sub WFMrJN_VRIJSTELLINGnee_Click()
    Call VulBrieven
End Sub
Private Sub WFMrJN_VRIJSTELLINGonb_Click()
    Call VulBrieven
End Sub

Private Sub WFMrJN_VERZOEK_WRKGV_ja_Click()
    Call VulBrieven
End Sub
Private Sub WFMrJN_VERZOEK_WRKGVnee_Click()
    Call VulBrieven
    Me.WFMrJN_WAO_VOLLEDIGonb.Value = True
End Sub
Private Sub WFMrJN_VERZOEK_WRKGVonb_Click()
    Call VulBrieven
End Sub

Private Sub WFMrJN_WAO_VOLLEDIG_ja_Click()
    Call VulBrieven
End Sub
Private Sub WFMrJN_WAO_VOLLEDIGnee_Click()
    Call VulBrieven
End Sub
Private Sub WFMrJN_WAO_VOLLEDIGonb_Click()
    Call VulBrieven
End Sub

Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        myPolOver.Value = Right$(Space(10) & Trim(tbPolOver1), 10) & ";" & _
                          Right$(Space(10) & Trim(tbPolOver2), 10) & ";" & _
                          Right$(Space(10) + Trim(tbPolOver3), 10) & ";"
    End If
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

Private Sub WFMrJN_WBP_VERZEKERD_ja_Click()
    If WFM_WERKSRT = "WYZ" Then
       frmFEPinlichten.Visible = True
    Else
        frmEXCinsch.Visible = True
    End If
End Sub
Attribute VB_Name = "frmAOVBeoordelenDoc"
Attribute VB_Base = "0{01000FD2-CA57-473C-8199-1D6D0F4F1F8A}{ED043A43-8B1B-4510-9FB3-9360859FBDD9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim myForm              As Object
Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String

Private Sub cmdCopy_Click()
Static KopieNr          As Integer
Dim KopieItem           As CALClientListItem

    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    KopieNr = KopieNr + 1
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call CopySendDocument(WIViewer.CALClientListItem, KopieNr)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    DisplayError "Kopie"
    MousePointer = fmMousePointerDefault
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myKenMerk, myIdent  As String

    Err.Clear
    On Error GoTo EH
    Call CheckFields
    myIdent = WFM_NR_POLIS + WFM_IND_TRIGGER
    If WFM_ZAAK_IDENT_NR <> myIdent Then
        WFM_ZAAK_IDENT_NR = myIdent
    End If
    If WFM_DOCTYPE.Value = "INF Informatieverzoek" Then
        Err.Raise 12345, , "Verander het Doctype."
    End If
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub CheckFields()
    PolisNummerCheck WFM_NR_POLIS
    NumberCheck WFM_AANTAL_ZAKEN
    NumberCheck WFM_NR_AEGAR
    DateCheck WFMDGEB_DEELN
    If WFM_IND_TRIGGER.Value = "" Then
'       Voor het geval dat de afterupdate van doctype niet is uitgevoerd.
        WFM_IND_TRIGGER.Value = Left(WFM_DOCTYPE, 3)
    End If
    Select Case cboWerksoort
        Case "Aanmelden"
             WFM_WERKSRT = "NWE"
        Case "Wijzigen"
             WFM_WERKSRT = "WYZ"
        Case "Verlate ingang"
             WFM_WERKSRT = "BBU"
    End Select
End Sub

Public Sub EnDisAbleToevoegen(ByRef WFM_DOCTYPE As Object, ByRef cmdToevoegen As Object)
    On Error Resume Next
    If IsNull(WFM_DOCTYPE.list(WFM_DOCTYPE.ListIndex, 1)) Then
        If Err Then Err.Clear
        cmdToevoegen.Enabled = False
        Exit Sub
    End If
    If WFM_DOCTYPE.list(WFM_DOCTYPE.ListIndex, 1) = csDocOverig Or WFM_DOCTYPE.list(WFM_DOCTYPE.ListIndex, 1) = csDocRendezvous Then
        cmdToevoegen.Enabled = True
        WFM_WERKSRT = "TOE"
    Else
        cmdToevoegen.Enabled = False
    End If
End Sub

Private Sub cmdToevoegen_Click()
Dim mobjQueryResults    As CALQueryResults
Dim myQueryFrm          As Object

    On Error GoTo EH
    If WFM_NR_POLIS = "" Then
        WFM_NR_POLIS.BackColor = TextboxRed
        Err.Raise 12345, , "Deelnemer nummer is niet ingevuld."
    End If
    Call CheckFields
    If Not WorkflowSave(WIViewer) Then Exit Sub
'   Zoeken folder met zelfde deelnemer nummer.
'   Na keuze van folder wordt document hierin geimporteerd.
    If Not Me.QueryFrm Is Nothing Then
       Me.QueryFrm.Show 0
       Exit Sub
    End If
    Set Me.QueryFrm = New frmZoekImport
    Set myQueryFrm = Me.QueryFrm
    Set myQueryFrm.WorkitemViewer = Me.WorkitemViewer
    Set myQueryFrm.ParentForm = Me
    myQueryFrm.Show 0
    Exit Sub

EH:
'   Doctype niet ingevuld mag wel
    If Err.Number = 12349 Then
        Resume Next ' komt niet meer terug in checkfields
        WFM_DOCTYPE.BackColor = TextboxWhite
    End If
    DisplayError "Toevoegen"
End Sub

Private Sub cmdScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Open eerst het juiste CAESAR scherm (U1 OHUP of U3 INWG)."    '[PAC] - TD162544 Typo
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
'   set props
    WFM_DOCTYPE.ColumnCount = 2
    WFM_DOCTYPE.BoundColumn = 1
    WFM_DOCTYPE.TextColumn = -1
    WFM_DOCTYPE.ColumnWidths = ";0"
'   Alles Arbeidsongeschiktheid
    DocTypeAdd "", csDocOverig
    DocTypeAdd "AOV Wijz. Formulier", csDocOverig
    DocTypeAdd "AOV Unieke brief", csDocOverig
    DocTypeAdd "AOV AEGONET", csDocOverig
    DocTypeAdd "AOV Infodrager", csDocOverig
    DocTypeAdd "AOV Verzoek werkgever", csDocOverig
    DocTypeAdd "AOV WAO beschikking", csDocOverig
    DocTypeAdd "AOV Brief Caesar", csDocRendezvous
    DocTypeAdd "AOV Verklaring uitbetaling werkgv", csDocRendezvous
    DocTypeAdd "AOV GAK Machtiging", csDocRendezvous
    DocTypeAdd "INF Informatieverzoek", csDocOverig
    DocTypeAdd "DLN Algemeen", csDocOverig
    cboWerksoort.AddItem "Aanmelden"
    cboWerksoort.AddItem "Wijzigen"
    If WFM_DOCTYPE = "" Then WFM_DOCTYPE.ListIndex = 0
    Call EnDisAbleToevoegen(WFM_DOCTYPE, cmdToevoegen)
    Exit Sub

EH:
    DisplayError "Userform activate"
End Sub

Private Sub DocTypeAdd(DocType As String, Kenmerk As String)
Static i                As Integer

    If i = Empty Then i = 0
    WFM_DOCTYPE.AddItem
    WFM_DOCTYPE.list(i, 0) = DocType
    WFM_DOCTYPE.list(i, 1) = Kenmerk
    i = i + 1
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Set QueryFrm(objForm)
    Set myForm = objForm
End Property
Public Property Get QueryFrm() As Object
    Set QueryFrm = myForm
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Terminate()
    If Not Me.QueryFrm Is Nothing Then
        Unload Me.QueryFrm
    End If
End Sub

Private Sub WFM_AANTAL_ZAKEN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    NumberCheck WFM_AANTAL_ZAKEN
    WFM_AANTAL_ZAKEN.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Aantal zaken"
End Sub

Private Sub WFM_DOCTYPE_Change()
    On Error GoTo EH
    If WFM_DOCTYPE = "" Then
        WFM_IND_TRIGGER = "BOP"
    Else
        WFM_IND_TRIGGER = Left(WFM_DOCTYPE, 3)
    End If
    WFM_DOCTYPE.BackColor = TextboxWhite
    Call EnDisAbleToevoegen(WFM_DOCTYPE, cmdToevoegen)
    Exit Sub

EH:
    DisplayError "Documenttype"
End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub

Private Sub WFM_NR_AEGAR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Nr. Aegar"
End Sub

Private Sub WFM_NR_POLIS_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WFM_NR_POLIS.BackColor = TextboxWhite
    PolisNummerCheck WFM_NR_POLIS
    Exit Sub

EH:
    DisplayError "Polisnummer"
End Sub

Private Sub WFM_ZK_VOLGNR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_ZK_VOLGNR.BackColor = TextboxWhite
End Sub

Private Sub WFMDGEB_DEELN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDGEB_DEELN
    WFMDGEB_DEELN.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Geb. Deelnemer"
End Sub
Attribute VB_Name = "frmAOVContrBeoord"
Attribute VB_Base = "0{171F96B6-9C11-4E40-A534-FD9E56FA4CBD}{EC10B353-4178-4ED1-8290-1CC77B4D540D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String
Dim myPolOver As CALFormField

Private Sub cmdGegevens_Click()
    

    Set frmAOVGegevens.WorkitemViewer = Me.WorkitemViewer
    frmAOVGegevens.Show vbModal
    
    If frmAOVGegevens.rbJN_BETALING_ACHTER_ja.Value Or _
        frmAOVGegevens.rbJN_SAL_VERHOGING_ja.Value Or _
        frmAOVGegevens.rbJN_VERZEKERING_BIJnee.Value Then
        
        Me.WFMrJN_VERZ_AKKOORDnee.Value = True
    End If
        If Not frmAOVGegevens.WFMDDATUM_1E_DAG_WAO.Value = "" Then
        calcWAoleeftijd
    End If
    Set frmAOVGegevens = Nothing
End Sub
Private Sub calcWAoleeftijd()

Dim date1 As Date
Dim date2 As Date
Dim vMaanden As Variant
Dim ffdaggeb As Integer
Dim ffdagWAO  As Integer

If WFMDGEB_DEELN.Value = "" Then
    MsgBox "De geboortedatum is niet gevuld.", vbExclamation + vbOKOnly
    Exit Sub
End If
date1 = WFMDGEB_DEELN.Value                         ' CDate("27-01-1967") MaBr teste
date2 = frmAOVGegevens.WFMDDATUM_1E_DAG_WAO.Value   ' CDate("07-12-1999") MaBr teste

vMaanden = DateDiff("m", date1, date2) / 12
If vMaanden = 33 Or vMaanden = 58 Then
    ffdaggeb = CStr(Format(date1, "dd"))
    ffdagWAO = Format(date2, "dd")
    
    If ffdagWAO - ffdaggeb > 0 Then
       vMaanden = vMaanden + 1
    End If
End If

If vMaanden < 33 Then
    Me.rLFT33.Value = True
Else
    If vMaanden > 58 Then
       Me.rlft58.Value = True
    Else
        Me.rLft33_58.Value = True
    End If
End If

End Sub
Private Sub cmdOpslaan_Click()
On Error GoTo EH

    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub


Sub GetCALXFormFields()

    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))


End Sub
Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_Activate()
    GetCALXFormFields
End Sub


Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Attribute VB_Name = "frmAOVControle"
Attribute VB_Base = "0{8AD7A14A-3407-494A-883C-EF37F97217E9}{78DF69D3-01D7-4D53-BCA8-439CD865F515}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myPolOver           As CALFormField

Private Sub cmdgegevensAOV_Click()
    Set frmAOVGegevens.WorkitemViewer = Me.WorkitemViewer
    frmAOVGegevens.DisAbleControls
    frmAOVGegevens.Show vbModal
    Set frmAOVGegevens = Nothing
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
'   Gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, "Word")
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    GetCALXFormFields
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub

EH:
    DisplayError "Userform activate"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Sub VulBrieven()
    lbTemplates.Clear
    If WFMrJN_VERKL_WERKN_G_ja.Value Then
        lbTemplates.AddItem "Verklaring via werkgever 9"
        lbTemplates.AddItem "Verklaring via werkgever 10"
    End If
    If WFMrJN_VRIJSTELLINGnee.Value Then
        lbTemplates.AddItem "Afwijzing werkgever 4"
        lbTemplates.AddItem "Afwijzing werknemer 5"
    End If
End Sub

Private Sub WFMrJN_AOV_ja_Click()
    Label54.Visible = True
    WFMrJN_AAN_WERKN_JA.Visible = True
    WFMrJN_AAN_WERKNnee.Visible = True
End Sub
Private Sub WFMrJN_AOVnee_Click()
    Label54.Visible = False
    WFMrJN_AAN_WERKN_JA.Visible = False
    WFMrJN_AAN_WERKNnee.Visible = False
    WFMrJN_AAN_WERKN_JA = False
    WFMrJN_AAN_WERKNnee = False
End Sub
Attribute VB_Name = "frmAOVDivPost"
Attribute VB_Base = "0{FE0DEC2C-E3EB-4369-86E3-0C5CCB83E60F}{BDB37E84-1544-4EBA-99FA-F1AE7495CD4F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myStatus As CALFormField
Dim myESWMObjID As String

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub cmdOpslaan_Click()
On Error GoTo EH
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
    
        If optStatParkeren = True Then
            myStatus.Value = "Parkeren"
        Else
            myStatus.Value = ""
        End If
    End If
    
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Doorsturen"
    
End Sub

Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub OptionButton2_Click()
    optStatParkerenNee.Value = True
End Sub

Private Sub optStatParkeren_Click()
    WFM_REDEN_PARKEREN.Enabled = True
    WFMDRAPPEL.Enabled = True
    lblRedenParkeren.Enabled = True
    lblDatum.Enabled = True

End Sub

Private Sub optStatParkerenNee_Click()
        WFM_REDEN_PARKEREN.Enabled = False
        WFMDRAPPEL.Enabled = False
        lblRedenParkeren.Enabled = False
        lblDatum.Enabled = False
        WFMDRAPPEL = ""
        WFM_REDEN_PARKEREN = ""
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Activate()
    InitPrios
    
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    
    Set myStatus = WIViewer.Fields.Find("STATUS").CALFormField
    
    If myStatus = "Parkeren" Then
            optStatParkeren = True
            FraDivPost.Visible = True
     End If
     
End Sub
Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH
  
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    
Exit Sub

EH:
    DisplayError "Rappel datum"
End Sub

Private Sub WFMrJN_AFGEHANDELD_ja_Click()
    optStatParkerenNee_Click
End Sub

Attribute VB_Name = "frmAOVGegevens"
Attribute VB_Base = "0{6CF4F4A6-113F-4E41-A645-FBC16366F166}{A3309B45-F9DF-4F5A-9714-E62C259B565E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub cmdTerug_Click()
    Me.Hide
End Sub

Private Sub cmdOK_Click()
On Error GoTo EH

    SetCALXFormFields
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Me.Hide
    
Exit Sub

EH:
    DisplayError "Ok"
End Sub

Private Sub rbJN_CLAIM_AO_LAAT_ja_Click()
    ShowDatums

End Sub

Private Sub rbJN_CLAIM_AO_LAATnee_Click()
    ShowDatums
End Sub

Private Sub rbJN_CLAIM_AO_LAATonb_Click()
    ShowDatums

End Sub

Private Sub UserForm_Activate()
On Error GoTo EH

    WFM_AO_PERC_WAO.AddItem "100"
    WFM_AO_PERC_WAO.AddItem "72,5"
    WFM_AO_PERC_WAO.AddItem "60"
    WFM_AO_PERC_WAO.AddItem "50"
    WFM_AO_PERC_WAO.AddItem "40"
    WFM_AO_PERC_WAO.AddItem "30"
    WFM_AO_PERC_WAO.AddItem "20"
    WFM_AO_PERC_WAO.AddItem "0"
    
    WFM_UITK_PERC_WAO.AddItem "70"
    WFM_UITK_PERC_WAO.AddItem "50,75"
    WFM_UITK_PERC_WAO.AddItem "42"
    WFM_UITK_PERC_WAO.AddItem "35"
    WFM_UITK_PERC_WAO.AddItem "28"
    WFM_UITK_PERC_WAO.AddItem "21"
    WFM_UITK_PERC_WAO.AddItem "14"
    WFM_UITK_PERC_WAO.AddItem "0"
    
    GetCALXFormFields
    
    Select Case GetWorkstep(WIViewer)
    Case "91V05 Contr. Beoord."
      DisAbleControls
    End Select
    
Exit Sub

EH:
    DisplayError "Form"
    
End Sub

Public Sub DisAbleControls()
Dim objControl As Control

    For Each objControl In Me.Controls
        If Left(objControl.name, 3) <> "cmd" And Left(objControl.name, 5) <> "Label" Then
            objControl.Enabled = False
        End If
    Next
End Sub

Private Sub VulBrieven()

End Sub

Private Sub ShowDatums()
On Error GoTo EH
    If Me.rbJN_CLAIM_AO_LAAT_ja.Value Then
        Me.Label23.Visible = True
        Me.WFMDDATUM_VRIJSTELLING.Visible = True
    Else
        Me.Label23.Visible = False
        Me.WFMDDATUM_VRIJSTELLING.Visible = False
    End If

Exit Sub

EH:
    DisplayError "ShowDatums"
End Sub

Private Sub UserForm_Initialize()
    WFM_ARB_ONGESCH_KLASSE.AddItem "0%"
    WFM_ARB_ONGESCH_KLASSE.AddItem "15%-25%"
    WFM_ARB_ONGESCH_KLASSE.AddItem "25%-35%"
    WFM_ARB_ONGESCH_KLASSE.AddItem "35%-45%"
    WFM_ARB_ONGESCH_KLASSE.AddItem "45%-55%"
    WFM_ARB_ONGESCH_KLASSE.AddItem "55%-65%"
    WFM_ARB_ONGESCH_KLASSE.AddItem "65%-80%"
    WFM_ARB_ONGESCH_KLASSE.AddItem "80%-100%"
End Sub


Private Sub WFMDDATUM_1E_DAG_WAO_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH
    
    DateCheck WFMDDATUM_1E_DAG_WAO
    WFMDDATUM_1E_DAG_WAO.BackColor = TextboxWhite

Exit Sub

EH:
    DisplayError "datum ie wao"
End Sub

Private Sub WFMDDATUM_INVAL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH

    DateCheck WFMDDATUM_INVAL
Exit Sub

EH:
    DisplayError "Datum invaliditeit"
End Sub

Private Sub WFMDDATUM_VRIJSTELLING_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH
Dim date1   As Date
Dim date2   As Date

    DateCheck WFMDDATUM_VRIJSTELLING
    
Exit Sub

EH:
    DisplayError "Datum vrijstelling"
End Sub


Private Sub WFMDDATUM_WAO_BESCH_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    
On Error GoTo EH

    DateCheck WFMDDATUM_WAO_BESCH
    Exit Sub

EH:
    DisplayError "Datum WAO"
End Sub

Private Sub WFMrJN_CLAIM_AO_LAAT_ja_Click()
    Call ShowDatums
End Sub
Private Sub WFMrJN_CLAIM_AO_LAATnee_Click()
    Call ShowDatums
End Sub
Private Sub WFMrJN_CLAIM_AO_LAATonb_Click()
    Call ShowDatums
End Sub

Private Sub WFMrJN_BET_AAN_WERKG_ja_Click()
    Call VulBrieven
End Sub
Private Sub WFMrJN_BET_AAN_WERKGnee_Click()
    Call VulBrieven
End Sub
Private Sub WFMrJN_BET_AAN_WERKGonb_Click()
    Call VulBrieven
End Sub

Sub GetCALXFormFields()

On Error GoTo EH

    WFMGetFieldYNO Me, "JN_VERZEKERING_BIJ"
    WFMGetFieldYNO Me, "JN_SAL_VERHOGING"
    WFMGetFieldYNO Me, "JN_BETALING_ACHTER"
    WFMGetFieldYNO Me, "JN_CLAIM_AO_LAAT"
    WFMGetFieldYNO Me, "JN_NEVENINKOMSTEN"
    
    WFMGetField WIViewer, WFM_UITK_PERC_WAO, 4
    WFMGetField WIViewer, WFM_AO_PERC_WAO, 4
    WFMGetField WIViewer, WFMDDATUM_INVAL, 4
    WFMGetField WIViewer, WFMDDATUM_1E_DAG_WAO, 4
    WFMGetField WIViewer, WFMDDATUM_VRIJSTELLING, 4
    WFMGetField WIViewer, WFMDDATUM_WAO_BESCH, 4
    WFMGetField WIViewer, WFM_ARB_ONGESCH_KLASSE, 4

Exit Sub

EH:
    DisplayError "GetFormFields"
End Sub

Sub SetCALXFormFields()

On Error GoTo EH

    WFMSaveFieldYNO Me, "JN_VERZEKERING_BIJ"
    WFMSaveFieldYNO Me, "JN_SAL_VERHOGING"
    WFMSaveFieldYNO Me, "JN_BETALING_ACHTER"
    WFMSaveFieldYNO Me, "JN_CLAIM_AO_LAAT"
    WFMSaveFieldYNO Me, "JN_NEVENINKOMSTEN"
    
    WFMSaveField WIViewer, WFM_UITK_PERC_WAO, 4
    WFMSaveField WIViewer, WFM_AO_PERC_WAO, 4
    WFMSaveField WIViewer, WFMDDATUM_INVAL, 4
     WFMSaveField WIViewer, WFMDDATUM_1E_DAG_WAO, 4
    WFMSaveField WIViewer, WFMDDATUM_VRIJSTELLING, 4
    WFMSaveField WIViewer, WFMDDATUM_WAO_BESCH, 4
    WFMSaveField WIViewer, WFM_ARB_ONGESCH_KLASSE, 4

Exit Sub

EH:
    DisplayError "SetFormFields"

End Sub

Attribute VB_Name = "frmAOVMOG"
Attribute VB_Base = "0{66E8B5A0-38B6-4333-B300-B60B0A2FE233}{0014C314-F4E0-4744-BCAD-468C7727067C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String

Private Sub cmdGegevens_Click()
    Set frmAOVGegevens.WorkitemViewer = Me.WorkitemViewer
    frmAOVGegevens.Show vbModal
    Set frmAOVGegevens = Nothing
End Sub

Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
On Error GoTo EH

    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub




Attribute VB_Name = "frmAOVStukkenCompl"
Attribute VB_Base = "0{E6A45742-5F9D-42C3-A452-FA56AC8D9C7A}{8AA86C44-ECBA-427A-86FB-061BE579BFE4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String


Private Sub cmdGegevens_Click()
    
    Set frmAOVGegevens.WorkitemViewer = Me.WorkitemViewer
    frmAOVGegevens.Show vbModal
    Set frmAOVGegevens = Nothing
End Sub


Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
On Error GoTo EH
    If rb_antwoord_info_JA = True Then
        ' Dit in een aparte procedure met naam meegeven
        Call VerplaatsenVanuitParkeerstap(WIViewer, WFM_WORKSTEP_NAAM.Value)
    End If
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

On Error GoTo EH

    If Init Then Exit Sub
    Init = True
    
    If WFM_WERKSRT = "WYZ" Then
        Me.WFM_AOV_WIJZIGING.Visible = True
        Me.WFM_AOV_WIJZIGING.Clear
        Me.WFM_AOV_WIJZIGING.AddItem "Verhoging"
        Me.WFM_AOV_WIJZIGING.AddItem "Verlaging"
        Me.WFM_AOV_WIJZIGING.AddItem "Beeindiging"
    Else
        Me.WFM_AOV_WIJZIGING.Visible = False
        Me.lblWijziging.Visible = False
    End If
    
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub
EH:
    DisplayError "Userform activate"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property

Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property

Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Attribute VB_Name = "frmAOVVerzekeringBijwerken"
Attribute VB_Base = "0{7ECAD72A-EFC7-4E1D-BAA3-8FADF095737E}{13D3F48F-44D7-4B9C-9110-106E51D8A733}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
On Error GoTo EH

    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    CheckHupo WFM_BEHANDELAAR

Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub


Private Sub UserForm_Activate()
Static Init As Boolean

On Error GoTo EH

    If Init Then Exit Sub
    Init = True
    
    If WFM_JN_SAL_VERHOGING = "J" Then
        lblSalaris.Visible = True
    End If
    If WFM_JN_BETALING_ACHTER = "J" Then
        lblAchterstand.Visible = True
    End If
    
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub
EH:
    DisplayError "Userform activate"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Attribute VB_Name = "frmARCRegistratie"
Attribute VB_Base = "0{D2E4F95E-87C8-484D-A3CA-45782C0E4868}{17341B33-7A4F-41D3-B302-F211CD20B8E0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim HostForm            As Object
Dim myESWMObjID         As String

Private Sub cmdExtraScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    If YetAnotherExtralink(WIViewer, WFM_NR_POLIS.Text) Then
        Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
        cmdScreen_Click
    End If
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Screenscraping niet gelukt!"
End Sub

Private Sub cmdScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Open eerst het juiste CAESAR scherm (U1 OHUP of U3 INWG)."
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myIdent             As String

    On Error GoTo EH
    Call CheckFields
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub CheckFields()
'   Error handling in aanroepen procedure
    NumberCheck WFM_NR_AEGAR
    DateCheck WFMDDAT_DOC
    DateCheck WFMDDAT_ONTV
    DateCheck WFMDGEB_DEELN
    If WFM_NR_POLIS = "" Then
        WFM_NR_POLIS.BackColor = TextboxRed
        Err.Raise 12345, , "Deelnemer nummer is niet ingevuld."
    End If
    If WFMDDAT_DOC = "" Then
        WFMDDAT_DOC.BackColor = TextboxRed
        Err.Raise 12345, , "Datum document is niet ingevuld."
    End If
End Sub

Private Sub UserForm_Activate()
    WFM_IND_TRIGGER = "ARC"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub WFM_BESTEMMING_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_BESTEMMING.Value = UCase(WFM_BESTEMMING.Value)
    Cancel = False
End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub

Private Sub WFM_NR_AEGAR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Nr. Aegar"
End Sub

Private Sub WFMDDAT_DOC_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_DOC
    WFMDDAT_DOC.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum document"
End Sub

Private Sub WFMDDAT_ONTV_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_ONTV
    WFMDDAT_ONTV.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum ontvangen"
End Sub

Private Sub WFMDGEB_DEELN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDGEB_DEELN
    WFMDGEB_DEELN.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Geb. Datum"
End Sub
Attribute VB_Name = "frmAddNotitie"
Attribute VB_Base = "0{BBD01E10-4FB1-411F-806A-16B81E6A27A4}{1C86CF34-6D3F-47CC-AB42-2871865E760D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Public NotitieData      As clsWIData
Public booOk            As Boolean
Public strReason        As String       'E=escalatie, I=Informatie en D=Default
Dim oFormChanger        As New CFormChanger

Private Sub CommandButton1_Click()
    On Error GoTo EH
    booOk = False
    If TextBox1 = Empty Then
        MsgBox "Kan de notitie niet toevoegen, geen tekst!"
        Exit Sub
    End If
'   Hier notitie toevoegen
    NotitieData.addToelichting g_NTUsername, TextBox1, strReason
    booOk = True
    Me.Hide
    Exit Sub

EH:
    DisplayError "Toevoegen notitie"
End Sub

Private Sub CommandButton2_Click()
    booOk = False
    Me.Hide
End Sub

Private Sub UserForm_Activate()
    Set oFormChanger.Form = Me
    oFormChanger.Sizeable = True
    oFormChanger.ShowCaption = True
    oFormChanger.ShowTaskBarIcon = True
    oFormChanger.ShowIcon = True
End Sub
Attribute VB_Name = "frmAegonOpties"
Attribute VB_Base = "0{379BC58C-CB0F-4A88-976D-214B96846879}{1C2E4E0F-1051-4040-9732-0B5F238436F3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub cmdCancel_Click()
    
    Me.Hide
    
End Sub

Private Sub cmdOK_Click()
Dim sTemp As String

    If (optJaMaximizeWD) Then
        SetRegistryKey "Kodak", "Workdesk\3.2\AegonOpties\MAXIMIZEWD", "maximized", "Ja"
    Else
        SetRegistryKey "Kodak", "Workdesk\3.2\AegonOpties\MAXIMIZEWD", "maximized", "Nee"
    End If
    
    If (optJaZoekform) Then
        SetRegistryKey "Kodak", "Workdesk\3.2\AegonOpties\ZOEKFORM_TONEN", "zoekform", "Ja"
    Else
        SetRegistryKey "Kodak", "Workdesk\3.2\AegonOpties\ZOEKFORM_TONEN", "zoekform", "Nee"
    End If
    
    If (optJaMaximizeWD) And (optJaZoekform) Then
        MsgBox "De opties 'Workdesk maximaliseren' en 'Zoekscherm tonen' zijn beide geactiveerd." & vbCrLf & vbCrLf & "Indien de situatie zich voordoet krijgt het tonen van het zoekschem voorrang.", vbInformation, "Terug naar zoekscherm na sluiten resultaat"
    End If

    Me.Hide

End Sub



Private Sub UserForm_Activate()
    
    If GetRegistryKey("Kodak", "Workdesk\3.2\AegonOpties\MAXIMIZEWD", "maximized") = "Ja" Then
        optJaMaximizeWD = True
        optNeeMaximizeWD = False
    Else
        optJaMaximizeWD = False
        optNeeMaximizeWD = True
    End If
    
    'If GetRegistryKey("Kodak", "Workdesk\3.2\AegonOpties\MAXIMIZEWD", "maximized") = "Ja" Then
    If GetRegistryKey("Kodak", "Workdesk\3.2\AegonOpties\ZOEKFORM_TONEN", "zoekform") = "Ja" Then
        optJaZoekform = True
        optNeeZoekform = False
    Else
        optJaZoekform = False
        optNeeZoekform = True
    End If
        
End Sub

Attribute VB_Name = "frmAfdeling"
Attribute VB_Base = "0{FA04E523-21BE-4CA7-9407-1C4D98483CF8}{3926AA98-FDB1-48D8-BCF2-FF8735B4501D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim oFormChanger As New CFormChanger

Private Sub cbAfdeling_Change()
    If Not IsNull(cbAfdeling) Then  ' dit moet want bij Annuleren wordt hij NULL
        cmdOK.Enabled = (cbAfdeling <> "")
    End If
End Sub

Private Sub cbAfdeling_DBlClick(ByVal Cancel As MSForms.ReturnBoolean)
    If cbAfdeling <> "" Then cmdOK_Click
End Sub

Private Sub cmdAnnuleer_Click()
    cbAfdeling.Value = Empty
    Me.Hide
End Sub

Private Sub cmdOK_Click()
    Me.Hide
End Sub

Private Sub UserForm_Activate()
    Set oFormChanger.Form = Me
    oFormChanger.Sizeable = True
    oFormChanger.ShowCaption = True
    oFormChanger.ShowTaskBarIcon = True
    oFormChanger.ShowIcon = True
End Sub
Attribute VB_Name = "frmBKFZoek"
Attribute VB_Base = "0{DD5E2744-F083-4E22-9CEB-0E4D0144B129}{BB8557D2-D8E2-4C61-A60B-CD4CDD12EDB9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim ExtraInfo2ResultListMapping As New Collection
Dim WIViewer                    As WFDWorkitem.WorkitemViewer
Dim myParentForm                As Object
Dim mobjQueryResults            As CALQueryResults
Dim WorkstepColNo               As Integer
Dim myQueryResultRecordColumn   As Integer

Const TerugSturen = 1
Const Behandelen = 2
Const NaarInBehandeling = 3
Const Doorsturen = 4

Private Sub cmdClose_Click()
    Unload Me                   'UserForm_Terminate
End Sub

Private Sub cmdOpen_Click()
Dim myViewer    As WorkitemViewer
Dim i           As Integer

    MousePointer = fmMousePointerHourGlass
    DoEvents
    For i = 1 To ListView1.ListItems.Count
        If (ListView1.ListItems.item(i).Selected = True) Then
            RetrieveNthItem (ListView1.ListItems.item(i).ListSubItems(myQueryResultRecordColumn))
        End If
    Next i
    MousePointer = fmMousePointerDefault
End Sub

Private Sub UserForm_Activate()
Static Init         As Boolean
Dim strWorkstep     As String

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
'   Als activate al is uitgevoerd
    If txtMaxMatches <> Empty Then Exit Sub

    ListView1.MultiSelect = False
    txtMaxMatches = constMaxItems
    cmdOpen.Default = True
    ListView1.ColumnHeaders.Add , , , 0, 0 ', Alignment:=1
    AddResultField "ZAAK_IDENT_NR", "Zaak Ident", 80, 0, True
    AddResultField "NAAM_DLNMR", "Naam Deelnemer", 90, 0, True
    AddResultField "NAAM_PARTNER_ZAAK", "Naam Partner", 120, 0, True
    AddResultField "ZAAK_VLGNR_MEMO", "Zaak memo", 90, 0, True
    AddResultField "WORKSTEP", "Workstep", 90, 0, False
    AddResultField "ZK_VOLGNR", "Volgnummer", 0, 0, True
    AddResultField "IND_TRIGGER", "Indtrigger", 0, 0, True
    AddResultField "QUERYRESULTRECORD", "Query result record", 0, 0, False  'Voor evt. sortering
    AddResultField "WERKSRT", "", 0, 0, False                               'Voor het vullen in het document
    myQueryResultRecordColumn = 6
    WorkstepColNo = 5

    strWorkstep = Left(WorkitemViewer.CALClientListItem.Info.SourceWorkstep, 5)
    QRYTextBox1.Text = Me.WorkitemViewer.Fields.Find("NR_POLIS").CALFormField.Value
    Me.Caption = "Zoekfolder voor deelnemer: " + QRYTextBox1.Text
    
    RunQuery
    LoadResults                 'Load the results into a listbox
    QRYTextBox1.Visible = False
    QRYLabel1.Visible = False
    ListView1.Refresh
    Exit Sub

EH:
    DisplayError "Userform_activate"
End Sub

Public Sub AddResultField(name, Caption, Witdh, Align, ResultOnly As Boolean)
Dim myColHeader     As ColumnHeader

    Set myColHeader = Me.ListView1.ColumnHeaders.Add(, name, Caption, Witdh, Align)
    myColHeader.Tag = ResultOnly
End Sub

Public Sub RunQuery()
Dim objClient       As CALClient
Dim objIndexFields  As New CALIndexFields

    objIndexFields.Value("ZAAK_IDENT_NR") = QRYTextBox1.Text & "BKF%"
    Set objClient = Application.CALClient
    Set mobjQueryResults = objClient.Query("", calObjTypeFolder, calLocationDomain, 0, objIndexFields)
    Exit Sub

QUERY_ERR:
    MsgBox Err.Description
    Err.Raise Err
End Sub

Public Sub LoadResults()
Dim objEnumItem     As CALEnumItem
Dim myEInfoItem     As CALEnumExtraInfoItem
Dim FindListItems   As CALWorkitemWorkstepList
Dim myColHeader     As ColumnHeader
Dim itmx            As ListItem
Dim FlowDocument    As String
Dim FlowZaak        As String
Dim iNbrHits        As Integer
Dim iRow            As Integer
Dim j, t            As Long
Dim EInfiItem       As Variant
Dim x               As Integer
Dim blnBeslissing
Dim Teller1         As Integer

    For iRow = Me.ListView1.ListItems.Count To 1 Step -1
        Me.ListView1.ListItems.Remove iRow
    Next iRow

    iNbrHits = mobjQueryResults.Count
    FlowDocument = Left(WorkitemViewer.CALClientListItem.Info.SourceWorkstep, 2)
'   Add each hit to the listbox
    For iRow = 1 To iNbrHits
        Set objEnumItem = mobjQueryResults.item(iRow)       'Instellen zaak in het query resultaat
        If objEnumItem.Info.ServerName <> "ARCHIVE" Then
'           zet in ExtraInfo2ResultListMapping de extrainfo kolomnummer
'           dat overeenkomt met de kolom in de listview
            If ExtraInfo2ResultListMapping.Count < 1 Then
                For t = 2 To Me.ListView1.ColumnHeaders.Count
                    Set myColHeader = Me.ListView1.ColumnHeaders.item(t)
                    EInfiItem = 0
                    For j = 1 To objEnumItem.ExtraInfo.Count
                        Set myEInfoItem = objEnumItem.ExtraInfo.item(j)
                        If myEInfoItem.name = myColHeader.Key Then EInfiItem = j
                    Next j
                    If EInfiItem > 0 Then ExtraInfo2ResultListMapping.Add EInfiItem
                Next t
            End If
'           Zoek het item in Workflow. Door een split kan het item meerdere malen
'           voorkomen. Voor iedere instance moet een regel in de listview worden opgenomen.
'           Alleen items in flow worden getoond
            Set FindListItems = CALClient.FindInWorkflow(objEnumItem.Info.objId)
            x = FindListItems.Count
            If FindListItems.Count = 0 Then
                iNbrHits = iNbrHits - 1
                x = x + 1
            End If
            While x > 0
'               Transfer each record from the Query result list to the listview line on the form
                If FindListItems.Count = 0 Then
                    FlowZaak = "AR"   ' WO 28-5 TD118086
                Else
                    FlowZaak = Left(FindListItems.item(x).Info.SourceWorkstep, 2)
                End If
                blnBeslissing = False
                blnBeslissing = blnBeslissing Or (FlowDocument = FlowZaak)
                blnBeslissing = blnBeslissing Or (FlowDocument = "")
                blnBeslissing = blnBeslissing Or (FlowDocument = "RE")
                If blnBeslissing Then
'                   Nieuwe items, bijvoorbeeld Emails via Outlook,
                    Set itmx = Me.ListView1.ListItems.Add()
                    For j = 1 To ExtraInfo2ResultListMapping.Count
                        EInfiItem = ExtraInfo2ResultListMapping.item(j)
                        If EInfiItem > 0 Then   'if there is a value in the resultlist
                           itmx.SubItems(j) = objEnumItem.ExtraInfo.item(EInfiItem)
                        End If
                    Next j
'                   Voeg de verwijziging naar de queryresultlist toe
                    itmx.SubItems(myQueryResultRecordColumn) = iRow
'                   Voeg de werkstap naam toe
                    If FindListItems.Count = 0 Then
                        itmx.SubItems(WorkstepColNo) = "Archief"
                    Else
                        itmx.SubItems(WorkstepColNo) = FindListItems.item(x).Info.SourceWorkstep
                    End If
                    Teller1 = Teller1 + 1
                End If
                x = x - 1
            Wend
            Me.ListView1.Refresh
        End If
    Next iRow
    lblCount = "Aantal gevonden: " + Str(Teller1)
    EnableImpRet
    Exit Sub

EH:
    MsgBox Err.Description
End Sub


Private Sub LoadResultsNEW()
Dim itmx            As ListItem
Dim myColHeader     As ColumnHeader
Dim lngCount        As Long    ' het aantal inclusief Archief
Dim lngTel          As Long  ' het aantal wat getoond wordt
Dim Werkstap        As String
Dim i, j, t         As Long
Dim myEInfoItem     As CALEnumExtraInfoItem
Dim EInfiItem

    On Error GoTo EH
    Set ExtraInfo2ResultListMapping = New Collection

    For i = Me.ListView1.ListItems.Count To 1 Step -1
        Me.ListView1.ListItems.Remove i
    Next i

    ' Display the number of hits
    lngCount = mobjQueryResults.Count
    
    ' Add each hit to the listbox
    For i = 1 To lngCount
        Dim objEnumItem As CALEnumItem
        
            Set objEnumItem = mobjQueryResults.item(i)
    'calc the mapping from the ExtraInfo query results to then ResultList shown on the form
            If ExtraInfo2ResultListMapping.Count < 1 Then
               For t = 1 To Me.ListView1.ColumnHeaders.Count
                   Set myColHeader = Me.ListView1.ColumnHeaders.item(t)
                   EInfiItem = 0
                   
                   For j = 1 To objEnumItem.ExtraInfo.Count
                        Set myEInfoItem = objEnumItem.ExtraInfo.item(j)
                        If myEInfoItem.name = myColHeader.Key Then
                            EInfiItem = j
                        ElseIf myColHeader.Key = "WF_STEP" Then
                            EInfiItem = 99
                        End If
                   Next j
                   If EInfiItem > 0 Then
                        ExtraInfo2ResultListMapping.Add EInfiItem
                   ElseIf EInfiItem = 99 Then
                        ExtraInfo2ResultListMapping.Add 99
                   End If
               Next t
               
            End If
            
    'Transfer each record from the Query result list to the listview line on the form
            
        Werkstap = vindWerkstap(objEnumItem.Info.objId.InternalName)
        If Werkstap <> "Archief" Then
            Set itmx = Me.ListView1.ListItems.Add(, , objEnumItem.ExtraInfo.item(ExtraInfo2ResultListMapping.item(1)))
            For j = 2 To ExtraInfo2ResultListMapping.Count
                EInfiItem = ExtraInfo2ResultListMapping.item(j)
                If EInfiItem > 0 And EInfiItem < 99 Then   'if there is a value in the resultlist
                   itmx.SubItems(j - 1) = objEnumItem.ExtraInfo.item(EInfiItem)
                ElseIf EInfiItem = 99 Then
                    On Error Resume Next
                    itmx.SubItems(j - 1) = Werkstap
                    On Error GoTo EH
                End If
            Next j
                            
            ' voeg de verwijziging naar de queryresultlist toe
            itmx.SubItems(myQueryResultRecordColumn) = i
            Me.ListView1.Refresh
            lngTel = lngTel + 1
    
        End If
    Next i
    lblCount = "Aantal gevonden: " + Str(lngTel)
'    Set colUitvullen = ExtraInfo2ResultListMapping
'    EnableRetrieve
    Exit Sub

EH:
    DisplayError "Loadresults"
End Sub


Private Sub ListView1_Click()
    Call EnableImpRet
End Sub
Private Sub ListView1_DblClick()
    cmdOpen_Click
End Sub
Private Sub ListView1_Enter()
    EnableImpRet
End Sub
Private Sub ListView1_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
    If Me.ListView1.SortKey = ColumnHeader.Index - 1 Then
        If Me.ListView1.SortOrder = lvwDescending Then
            Me.ListView1.SortOrder = lvwAscending
        Else
            Me.ListView1.SortOrder = lvwDescending
        End If
    Else
        Me.ListView1.Sorted = True
        Me.ListView1.SortKey = ColumnHeader.Index - 1
        Me.ListView1.SortOrder = lvwAscending
    End If
    Me.ListView1.Refresh
End Sub

Private Sub EnableImpRet()
    cmdOpen.Visible = False
    On Error GoTo EH
    If Not Me.ListView1.SelectedItem Is Nothing Then
        If Me.ListView1.SelectedItem.Index > 0 Then cmdOpen.Visible = True
    End If
    Exit Sub

EH:
    Exit Sub
End Sub

Private Sub RetrieveNthItem(i As Integer)
Dim myViewer            As WorkitemViewer
Dim objEnumItem         As CALEnumItem
Dim objClientListItem   As CALClientListItem

'   Retrieve the selected workitems to the worklist
    On Error GoTo EH
    Err.Clear
    Set objEnumItem = mobjQueryResults.item(i)
    Set objClientListItem = objEnumItem.Retrieve(calRetrieveRetain)
    Set myViewer = Application.Viewers.OpenViewer(mobjQueryResults.item(i).Info.objId, wdoOpenViewerRemoveAfterClose, wdoOpenReadOnly)
    myViewer.BringToTop
    Exit Sub

EH:
    MsgBox Err.Description
End Sub

Private Sub UserForm_Terminate()
'   Geef aan het form, vanwaar dit form is aangeroepen, door dat dit scherm gesloten is
    If WIViewer.CALClientListItem Is Nothing Then
        Unload Me
        Exit Sub
    End If
    Set Me.ParentForm.QueryFrm = Nothing
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Set ParentForm(myForm)
    Set myParentForm = myForm
End Property
Public Property Get ParentForm() As Object
'   Referentie naar het form vanwaar dit form is aangeroepen
    Set ParentForm = myParentForm
End Property

Private Function vindWerkstap(id As String) As String
Dim objId As CALObjID
Dim FindListItems As CALWorkitemWorkstepList
Dim Werkstap As String

    Set objId = New CALObjID
    objId.InternalName = id
    Set FindListItems = CALClient.FindInWorkflow(objId)
    If FindListItems.Count > 0 Then
        Werkstap = FindListItems.item(1).Info.SourceWorkstep
    Else
        Werkstap = "Archief"
    End If
    vindWerkstap = Werkstap
End Function
Attribute VB_Name = "frmBKFgarantie"
Attribute VB_Base = "0{AD8857FE-B1B0-4186-9138-D08881510AE3}{5DC43E82-F078-4AC2-8533-B5174CA44117}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub imgCAESAR_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    If YetAnotherExtralink(WIViewer, WFM_NR_POLIS.Text) Then    ' Om hem in de juiste kloon te zetten
        Call PBRExtralink(WIViewer, WFM_NR_POLIS, True)
    End If
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean

    If Init Then Exit Sub
    Init = True
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim VerplichtVeldOntbreekt As String

    VerplichtVeldOntbreekt = ""
    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub
Attribute VB_Name = "frmBKFmakenBrief"
Attribute VB_Base = "0{54140C0F-BDF4-4B5C-98A8-F01E6D84E7BA}{92120A34-1E5F-4FC2-99B4-56519A6943DC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

    If Init Then Exit Sub
    Init = True
'   Word templates die in deze stap gebruikt kunnen worden.
    lbTemplates.AddItem "BKF Afwijzing"
    lbTemplates.AddItem "BKF Onvolledig"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim VerplichtVeldOntbreekt As String

    On Error GoTo EH
    VerplichtVeldOntbreekt = ""
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
Dim strTemp As String

    On Error GoTo EH
'   Gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    If InStr(lbTemplates.Value, "Onvolledig") > 0 Then
      strTemp = "Beleggingskeuze Verdeelplan niet mogelijk"
    ElseIf InStr(lbTemplates.Value, "Afwijzing") > 0 Then
      strTemp = "Beleggingskeuze Vrij Beleggen niet mogelijk"
    End If
    Call StartBrief(WIViewer, strTemp)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub
Attribute VB_Name = "frmBKFopvoeren"
Attribute VB_Base = "0{CD344F5B-2DD1-451B-9697-C29FC380F42A}{BB2A1FEF-12AE-466F-B9EC-9E61A83B4E98}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myForm              As Object
Dim myESWMObjID         As String

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Public Property Set QueryFrm(objForm)
    Set myForm = objForm
End Property
Public Property Get QueryFrm() As Object
    Set QueryFrm = myForm
End Property

Private Sub cmdZoekDossier_Click()
Dim myQueryFrm          As Object

'11MAY09 [PAC] - Deze knop toegevoegd
    If WFM_NR_POLIS = "" Then
        WFM_NR_POLIS.BackColor = TextboxRed
        MsgBox "Deelnemernummer is niet ingevuld."
        WFM_NR_POLIS.SetFocus
        Exit Sub
    End If
    On Error GoTo EH
    Call CheckFields
    If Not WorkflowSave(WIViewer) Then Exit Sub
'   Zoeken naar folder met zelfde deelnemernummer.
    If Not Me.QueryFrm Is Nothing Then
       Me.QueryFrm.Show 0
       Exit Sub
    End If
    Set Me.QueryFrm = New frmBKFZoek
    Set myQueryFrm = Me.QueryFrm
    Set myQueryFrm.WorkitemViewer = Me.WorkitemViewer
    Set myQueryFrm.ParentForm = Me
    myQueryFrm.Show 0
    Exit Sub

EH:
    DisplayError "Toevoegen"
End Sub

Private Sub UserForm_Activate()
Static Init     As Boolean

    If Init Then Exit Sub
    Init = True
    WFM_IND_TRIGGER.Text = "BKF"
    WFMDDAT_DAGSTEMPEL = WFMDDAT_ONTV
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    If WFM_NR_KLANT = "" Then
        MsgBox "Bijzonderheden kunenn enkel opgehaald worden als het document geindexeerd is met een klantnummer. Klik op Extra! eerst."
        Exit Sub
    End If
    If Not WorkflowSave(WIViewer) Then Exit Sub
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub imgCAESAR_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    If YetAnotherExtralink(WIViewer, WFM_NR_POLIS.Text) Then    'Om hem in de juiste kloon te zetten
        Call PBRExtralink(WIViewer, WFM_NR_POLIS, True)
    End If
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
End Sub

Private Sub cmdExtraScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    If YetAnotherExtralink(WIViewer, WFM_NR_POLIS.Text) Then
        Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
        If NumberCheck(WFM_NR_KLANT) Then
            If Not WorkflowSave(WIViewer) Then Exit Sub
            Call getTPnaamnummer(Me)
            CheckOpUitzondering WIViewer
        End If
    End If
    MousePointer = fmMousePointerDefault
    WFMDDAT_DOC.SetFocus
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Screenscraping niet gelukt!"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myIdent As String

    On Error GoTo EH
    Call CheckFields
    If WFM_ZAAK_IDENT_NR <> WFM_NR_POLIS Then
        WFM_ZAAK_IDENT_NR = WFM_NR_POLIS
    End If
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub CheckFields()
Dim strError    As String

    strError = ""
    NumberCheck WFM_NR_AEGAR
    DateCheck WFMDGEB_DEELN
    DateCheck WFMDDAT_ONTV
    DateCheck WFMDDAT_DAGSTEMPEL
    DateCheck WFMDDAT_DOC

'[PAC] - 24NOV08 (Tijdelijk) inactief gemaakt op verzoek van Irma de Jong (DVM-desk)
'    If WFMDDAT_DAGSTEMPEL = "" Then
'        WFMDDAT_DAGSTEMPEL.BackColor = TextboxRed
'        strError = "Datum dagstempel is niet ingevuld."
'
'    ElseIf WFM_NR_POLIS = "" Then
'        WFM_NR_POLIS.BackColor = TextboxRed
'        strError = "Deelnemer nummer is niet ingevuld."
'    ElseIf WFM_NAAM_DLNMR = "" Then
'        strError = "Deelnemer naam is niet ingevuld."
'    ElseIf WFMDGEB_DEELN = "" Then
'        strError = "Geboortedatum is niet ingevuld."
'    ElseIf WFM_NR_AEGAR = "" Then
'            strError = "Deelnemer AEGAR nr is niet ingevuld."
'    ElseIf WFMDDAT_DOC = "" Then
'        WFMDDAT_DOC.BackColor = TextboxRed
'        strError = "Datum op BK formulier is niet ingevuld."
'    ElseIf WFM_NR_KLANT = "" Then
'        strError = "Klant nummer is niet ingevuld."
'    ElseIf WFM_NAAM_KLANT = "" Then
'                strError = "Klant naam is niet ingevuld."
'    ElseIf WFM_NR_AEGAR_KLANT = "" Then
'            strError = "AEGAR nr klant is niet ingevuld."
'    ElseIf WFM_IND_HUPO = "" Then
'             strError = "Hupo is niet ingevuld."
'    ElseIf Not (WFMrJN_BKF_OPGEVOERD_ja Or WFMrJN_BKF_OPGEVOERDnee) Then
'        strError = "Gewijzigd in Caesar is niet ingevuld."
'    End If
'==========================================================

    If strError > "" Then Err.Raise 12345, , strError
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub

Private Sub WFM_NR_AEGAR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Nr. Aegar"
End Sub

Private Sub WFM_NR_KLANT_Exit(ByVal Cancel As MSForms.ReturnBoolean)
 ' Mabr change dan via screenscrapen klant waarde er in  1 keer in
    On Error GoTo EH
    Call getTPnaamnummer(Me)

EH:
    DisplayError "TPnummer"
End Sub

Private Sub WFM_NR_POLIS_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WFM_NR_POLIS.BackColor = TextboxWhite
    PolisNummerCheck WFM_NR_POLIS
    cmdOpslaan.Enabled = True
    Exit Sub

EH:
    DisplayError "Polisnummer"
    cmdOpslaan.Enabled = False
End Sub

Private Sub WFM_ZAAK_VLGNR_MEMO_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_ZAAK_VLGNR_MEMO.BackColor = TextboxWhite
End Sub

Private Sub WFMDDAT_DOC_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_DOC
    WFMDDAT_DOC.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum document"
End Sub

Private Sub WFMDDAT_ONTV_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_ONTV
    WFMDDAT_ONTV.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum ontvangen"
End Sub

Private Sub WFMDGEB_DEELN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDGEB_DEELN
    WFMDGEB_DEELN.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Geb. Datum"
End Sub

Private Sub WFMrJN_BKF_AFGEWEZEN_ja_Click()
    WFMrJN_BKF_ONVOLLEDIGnee = True
End Sub
Private Sub WFMrJN_BKF_AFGEWEZENnee_Click()
    WFMrJN_BKF_ONVOLLEDIG_ja = True
End Sub

Private Sub WFMrJN_BKF_ONVOLLEDIG_ja_Click()
    WFMrJN_BKF_AFGEWEZENnee = True
End Sub

Private Sub WFMrJN_BKF_OPGEVOERD_ja_Click()
    WFMrJN_BKF_ONVOLLEDIGnee = True
    WFMrJN_BKF_AFGEWEZENnee = True
    fraBKafgewezen.Visible = False
    WFMrJN_BKF_GARANTIEnee.Enabled = True
    WFMrJN_BKF_GARANTIE_ja.Enabled = True
End Sub
Private Sub WFMrJN_BKF_OPGEVOERDnee_Click()
    fraBKafgewezen.Visible = WFMrJN_BKF_OPGEVOERDnee.Value
    fraBKafgewezen.Enabled = WFMrJN_BKF_OPGEVOERDnee.Value
    If WFMrJN_BKF_OPGEVOERDnee Then
        WFMrJN_BKF_AFGEWEZEN_ja = True
        WFMrJN_BKF_ONVOLLEDIGnee = True
        WFMrJN_BKF_GARANTIEnee = True
        WFMrJN_BKF_GARANTIEnee.Enabled = False
        WFMrJN_BKF_GARANTIE_ja.Enabled = False
    End If
End Sub
Private Sub WFMrJN_BKF_OPGEVOERDonb_Click()
    WFMrJN_BKF_AFGEWEZEN_ja = True
    WFMrJN_BKF_ONVOLLEDIGnee = True
    fraBKafgewezen.Visible = False
End Sub

Attribute VB_Name = "frmBWOAangekondigdeRemise"
Attribute VB_Base = "0{C20C36ED-FA5D-4AB6-8ED1-A0E882A2A821}{C7846D0E-24A6-46A8-AFC3-094DE9B56BA9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If WFMCBETAALD Then
        If Not (isGevuld1 And isGevuld2) Then
            MsgBox "Overdrachts velden zijn niet correct ingevuld!", vbExclamation
            Exit Sub
        End If
    End If
    DateCheck WFMDDATUMONTV
    DateCheck WFMDDATUMONTV2
    valutaCheck WFM_OVERDRACHTSWAARDE
    valutaCheck WFM_OVERDRACHTSWAARDE2
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
'   Gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub UserForm_Activate()
'   Word templates die in deze stap gebruikt kunnen worden.
    lbTemplates.AddItem "BWO Info OPU ontvangen aan deelnemer"
    If WFMCBETAALD.Value = True Then
        Frame1.Visible = True
    Else
        Frame1.Visible = False
    End If
    If UCase(Application.CALClient.DomainName) = "MKBPROD" Then
        lblRekCrnt.Visible = False
        WFM_REK_CRT.Visible = False
        WFMCOVERGEBOEKT.Visible = False
        WFMCOVERGEBOEKT.Value = True
    End If
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub WFM_OVERDRACHTSWAARDE_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If Not (KeyAscii >= 48 And KeyAscii <= 57) Then  '(KeyAscii = 44) 'Komma voorlopig niet nodig
        If Not (KeyAscii = 44) Then
            KeyAscii = 0
        End If
    End If
'   OmBu:  ` & ~ gaan niet helemaal goed.
    If KeyAscii = 126 Then KeyAscii = 0
    If KeyAscii = 96 Then KeyAscii = 0
End Sub
Private Sub WFM_OVERDRACHTSWAARDE2_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If Not (KeyAscii >= 48 And KeyAscii <= 57) Then  '(KeyAscii = 44) 'Komma voorlopig niet nodig
        If Not (KeyAscii = 44) Then
            KeyAscii = 0
        End If
    End If
'   OmBu:  ` & ~ gaan niet helemaal goed.
    If KeyAscii = 126 Then KeyAscii = 0
    If KeyAscii = 96 Then KeyAscii = 0
End Sub

Private Sub WFM_OVERDRACHTSWAARDE2_AfterUpdate()
    On Error GoTo EH
    If isGevuld1 Then
        valutaCheck WFM_OVERDRACHTSWAARDE2
        Exit Sub
    Else
        WFM_OVERDRACHTSWAARDE2.Text = ""
    End If

EH:
    MsgBox Err.Description
End Sub

Private Sub WFM_OVERDRACHTSWAARDE_AfterUpdate()
    On Error GoTo EH
    valutaCheck WFM_OVERDRACHTSWAARDE
    Exit Sub

EH:
    MsgBox Err.Description
End Sub

Private Function isGevuld1() As Boolean
    If WFMDDATUMONTV = "" Or WFM_OVERDRACHTSWAARDE = "" Or WFM_REK_CRT = "" Then
        isGevuld1 = False
        WFMDDATUMONTV.SetFocus
    Else
        isGevuld1 = True
    End If
End Function

Private Function isGevuld2() As Boolean
    If Not ((WFMDDATUMONTV2 = "") And (WFM_OVERDRACHTSWAARDE2 = "") And (WFM_REK_CRT2 = "")) Then
        If WFMDDATUMONTV2 = "" Or WFM_OVERDRACHTSWAARDE2 = "" Or WFM_REK_CRT2 = "" Then
            isGevuld2 = False
            WFMDDATUMONTV.SetFocus
           Exit Function
        End If
    End If
    isGevuld2 = True
End Function

Private Sub WFMCBETAALD_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    If WFMCBETAALD.Value = True Then
        Frame1.Visible = True
    Else
        If (MsgBox("Als u het vinkje weghaalt, zullen de overdrachts gegevens geleegd worden!" & Chr(13) _
                   & "Wilt u verder gaan?", vbYesNo) = vbYes) Then
            WFM_OVERDRACHTSWAARDE2.Text = ""
            WFM_REK_CRT2.Text = ""
            WFMDDATUMONTV2 = ""
            WFM_OVERDRACHTSWAARDE.Text = ""
            WFM_REK_CRT.Text = ""
            WFMDDATUMONTV = ""
            Frame1.Visible = False
        Else
            WFMCBETAALD.Value = True
        End If
    End If
End Sub

Private Sub WFMDDATUMONTV_AfterUpdate()
    On Error GoTo EH
    DateCheck WFMDDATUMONTV

EH:
    DisplayError "Datum ontvangen"
End Sub

Private Sub WFMDDATUMONTV2_AfterUpdate()
    On Error GoTo EH
    DateCheck WFMDDATUMONTV2

EH:
    DisplayError "Datum ontvangen2"
End Sub
Attribute VB_Name = "frmBWOActieRemise"
Attribute VB_Base = "0{09E89D8A-C09F-45C2-BEAE-41059F053771}{04B9A0D8-B454-4B33-A7C0-5493AEB03229}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If WFMCBETAALD Then
        If Not (isGevuld1 And isGevuld2) Then
            MsgBox "Overdrachts velden zijn niet correct ingevuld!", vbExclamation
            Exit Sub
        End If
    End If
    DateCheck WFMDDATUMONTV
    DateCheck WFMDDATUMONTV2
    valutaCheck WFM_OVERDRACHTSWAARDE
    valutaCheck WFM_OVERDRACHTSWAARDE2
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
'   Gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

    If WFMCBETAALD = True Then
        Frame1.Visible = True
    Else
        Frame1.Visible = False
    End If
    If Init Then Exit Sub
    Init = True
'   Word templates die in deze stap gebruikt kunnen worden.
    lbTemplates.AddItem "BWO Verzoek Remise OW"
    lbTemplates.AddItem "BWO Diverse"
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub VOLLEDIGE_REMISE_Change()
    If VOLLEDIGE_REMISE.Value = True Then
        WFMCONVOLLEDIGE_REMISE.Value = False
    Else
        WFMCONVOLLEDIGE_REMISE.Value = True
    End If
End Sub
Private Sub WFM_OVERDRACHTSWAARDE_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If Not (KeyAscii >= 48 And KeyAscii <= 57) Then  '(KeyAscii = 44) 'Komma voorlopig niet nodig
        If Not (KeyAscii = 44) Then
            KeyAscii = 0
        End If
    End If
'   OmBu:  ` & ~ gaan niet helemaal goed.
    If KeyAscii = 126 Then KeyAscii = 0
    If KeyAscii = 96 Then KeyAscii = 0
End Sub
Private Sub WFM_OVERDRACHTSWAARDE2_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If Not (KeyAscii >= 48 And KeyAscii <= 57) Then  '(KeyAscii = 44) 'Komma voorlopig niet nodig
        If Not (KeyAscii = 44) Then
            KeyAscii = 0
        End If
    End If
'   OmBu:  ` & ~ gaan niet helemaal goed.
    If KeyAscii = 126 Then KeyAscii = 0
    If KeyAscii = 96 Then KeyAscii = 0
End Sub

Private Sub WFM_OVERDRACHTSWAARDE2_AfterUpdate()
    On Error GoTo EH
    If isGevuld1 Then
        valutaCheck WFM_OVERDRACHTSWAARDE2
        Exit Sub
    Else
        WFM_OVERDRACHTSWAARDE2.Text = ""
    End If

EH:
    MsgBox Err.Description
End Sub

Private Sub WFM_OVERDRACHTSWAARDE_AfterUpdate()
    On Error GoTo EH
    valutaCheck WFM_OVERDRACHTSWAARDE
    Exit Sub

EH:
    MsgBox Err.Description
End Sub

Private Function isGevuld1() As Boolean
    If WFMDDATUMONTV = "" Or WFM_OVERDRACHTSWAARDE = "" Or WFM_REK_CRT = "" Then
        isGevuld1 = False
        WFMDDATUMONTV.SetFocus
    Else
        isGevuld1 = True
    End If
End Function

Private Function isGevuld2() As Boolean
    If Not ((WFMDDATUMONTV2 = "") And (WFM_OVERDRACHTSWAARDE2 = "") And (WFM_REK_CRT2 = "")) Then
        If WFMDDATUMONTV2 = "" Or WFM_OVERDRACHTSWAARDE2 = "" Or WFM_REK_CRT2 = "" Then
            isGevuld2 = False
            WFMDDATUMONTV.SetFocus
            Exit Function
        End If
    End If
    isGevuld2 = True
End Function

Private Sub WFMCBETAALD_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    If WFMCBETAALD.Value = True Then
        Frame1.Visible = True
    Else
        If (MsgBox("Als u het vinkje weghaalt, zullen de overdrachts gegevens geleegd worden!" & Chr(13) _
                   & "Wilt u verder gaan?", vbYesNo) = vbYes) Then
            WFM_OVERDRACHTSWAARDE2.Text = ""
            WFM_REK_CRT2.Text = ""
            WFMDDATUMONTV2 = ""
            WFM_OVERDRACHTSWAARDE.Text = ""
            WFM_REK_CRT.Text = ""
            WFMDDATUMONTV = ""
            Frame1.Visible = False
        Else
            WFMCBETAALD.Value = True
        End If
    End If
End Sub

Private Sub WFMDDATUMONTV_AfterUpdate()
    On Error GoTo EH
    DateCheck WFMDDATUMONTV

EH:
    DisplayError "Datum ontvangen"
End Sub

Private Sub WFMDDATUMONTV2_AfterUpdate()
    On Error GoTo EH
    DateCheck WFMDDATUMONTV2

EH:
    DisplayError "Datum ontvangen2"
End Sub
Attribute VB_Name = "frmBWOContrOfferte"
Attribute VB_Base = "0{84337547-024D-427D-9F48-00B686CCFF92}{18F5D472-30E8-4405-A0E8-55DEE09C40CF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not WFMCCONTROLE_AKKOORD.Value Then
        WFM_PRIORITEIT.Value = "9"
    Else
        WFM_PRIORITEIT.Value = "0"
    End If
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub UserForm_Click()
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
  Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
  myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
 ESWMObjID = myESWMObjID
End Property
Attribute VB_Name = "frmBWOControleAdm"
Attribute VB_Base = "0{20E27589-A8B8-416D-84D1-5A45355932C6}{B5C2E62B-CB7A-4A9D-AFCE-B1AFAA182AE2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Attribute VB_Name = "frmBWOMakenOfferte"
Attribute VB_Base = "0{DA80E43F-DE3C-440D-99F0-3F86F4B49555}{FB9FCAC4-5435-4680-BB55-788A0FBABA9A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String

Private Sub CmdParkDatum_Click()
    On Error GoTo EH
    If Not mvParkdatum.Visible Then
        mvParkdatum.Left = 72
        mvParkdatum.Top = 120
        mvParkdatum.Visible = True
        mvParkdatum = Date + 7
        If Not WFMDRAPPEL = "" Then mvParkdatum = WFMDRAPPEL
    Else
        mvParkdatum.Visible = False
    End If

EH:
    If Err.Number = 13 Then
        mvParkdatum = Date
        Exit Sub
    End If
    DisplayError "Foutieve datum"
End Sub

Private Sub cmdStartWaarde_Click()
    Call StartBrief(WIViewer, strOfferte, prgWaardeRekenProg)
End Sub

'[PAC] - TD170048 - START
Private Sub cmdStartWaarde67_Click()
    Call StartBrief(WIViewer, strOfferte, gsWaardeRekenProg2)
End Sub
'[PAC] - TD170048 - END

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim VerplichtVeldOntbreekt  As String

    On Error GoTo EH
    VerplichtVeldOntbreekt = ""
'   Controleren of bij een vertraging ook de rappeldatum en reden_parkeren zijn ingevuld
    If ParkerenGripTmp = "Parkeren" Then
        If WFMDRAPPEL = "" Then
            VerplichtVeldOntbreekt = "Het verplichte veld rappeldatum bevat geen waarde!"
        End If
        If WFM_REDEN_PARKEREN = "" Then
            If VerplichtVeldOntbreekt = "" Then
                VerplichtVeldOntbreekt = "Het verplichte veld reden parkeren bevat geen waarde!"
            Else
                VerplichtVeldOntbreekt = "De verplichte velden rappeldatum en reden parkeren bevatten geen waarde!"
            End If
        End If
        If VerplichtVeldOntbreekt <> "" Then
            MsgBox VerplichtVeldOntbreekt, vbExclamation, "Verplichte velden bevatten geen waarde"
            Exit Sub
        End If
    End If
    DateCheck WFMDRAPPEL
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"

End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
'   Gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub mvParkdatum_DateClick(ByVal DateClicked As Date)
    WFMDRAPPEL = Format(mvParkdatum, "dd-mm-yyyy")
    mvParkdatum.Visible = False
    WFMDRAPPEL.SetFocus
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

    If Init Then Exit Sub
    Init = True

'   Word templates die in deze stap gebruikt kunnen worden.
    lbTemplates.AddItem "BWO Afwijzing"
    lbTemplates.AddItem "BWO Offerte deelnemer"
    lbTemplates.AddItem "BWO Diverse"
    ParkerenGripTmp.ColumnCount = 2
    ParkerenGripTmp.BoundColumn = 1
    ParkerenGripTmp.TextColumn = -1
    ParkerenGripTmp.ColumnWidths = "0;"
    ParkerenGripTmp.AddItem
    ParkerenGripTmp.list(0, 1) = "Ja"
    ParkerenGripTmp.list(0, 0) = "Parkeren"
    ParkerenGripTmp.AddItem
    ParkerenGripTmp.list(1, 1) = "Nee"
    ParkerenGripTmp.list(1, 0) = ""
    ParkerenGripTmp.AddItem
    ParkerenGripTmp = ""
    If UCase(Application.CALClient.DomainName) = "MKBPROD" Then
        WFM_JN_GEBELD = "N"
    End If
'   Max 20 karakters voor het veld IntVert
'   Let op indien de reden_parkeren ook door de GRIP robot gecontroleerd
'   moet worden moet de waarde "nieuwe DLN" gevuld worden in IntVert
    WFM_REDEN_PARKEREN.AddItem "Akkoord werkgever"
    WFM_REDEN_PARKEREN.AddItem "Nieuwe dln (NWD)"
    WFM_REDEN_PARKEREN.AddItem "Nieuwe aanmeld (NWA)"
    WFM_REDEN_PARKEREN.AddItem "Blokkade GB"
    WFM_REDEN_PARKEREN.AddItem "Blokkade VP"
    WFM_REDEN_PARKEREN.AddItem "Blokkade WIA"
    WFM_REDEN_PARKEREN.AddItem "Blokkade Overig"
    WFM_REDEN_PARKEREN.AddItem "Contractsverlenging"
    WFM_REDEN_PARKEREN.AddItem "Inregelen contract"
    WFM_REDEN_PARKEREN.AddItem "Klant gaat weg"
    WFM_REDEN_PARKEREN.AddItem "Info verzoek"
    WFM_REDEN_PARKEREN.AddItem "Pakket toevoegen"
    WFM_REDEN_PARKEREN.AddItem "Buitenland"
    WFM_REDEN_PARKEREN.AddItem "DG Extern"
    WFM_REDEN_PARKEREN.AddItem "DG Intern"
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub ParkerenGripTmp_Change()
'   De componenten
'   Label rappeldatum = LabelRappelDatum (denk aan waarde legen)
'   Rappeldatum = WFMDRAPPEL
'   Knop kalender = CmdParkDatum
'   Kalender = mvParkdatum (denk aan positie)
'   Label reden parkeren = LabelRedenParkeren
'   Reden parkeren = WFM_REDEN_PARKEREN
    If ParkerenGripTmp = "Parkeren" Then
'       Bevat een waarde
        CmdParkDatum.Visible = True
        LabelRappelDatum.Visible = True
        mvParkdatum.Left = 72
        mvParkdatum.Top = 120
        mvParkdatum.Visible = True
'       De te tonen maand in de kalender.
        If WFMDRAPPEL = "" Then
            mvParkdatum = Date
        Else
            mvParkdatum = WFMDRAPPEL
        End If
        WFMDRAPPEL.Visible = True
        WFM_REDEN_PARKEREN.Visible = True
        LabelRedenParkeren.Visible = True
        WFMCOFFERTE_AKKOORD.Visible = False
    Else
'       Bevat geen waarde
        CmdParkDatum.Visible = False
        mvParkdatum.Visible = False
        LabelRappelDatum.Visible = False
        WFMDRAPPEL.Visible = False
        WFMDRAPPEL = ""
        WFM_REDEN_PARKEREN = ""
        WFMDRAPPEL.BackColor = TextboxWhite
        WFM_REDEN_PARKEREN.Visible = False
        LabelRedenParkeren.Visible = False
        WFMCOFFERTE_AKKOORD.Visible = True
    End If
End Sub

Private Sub WFM_REDEN_PARKEREN_Change()
' **********************************************************************************
' *    Wijzigingen hier kunnen effect hebben op de werking van de GripRobot.       *
' *    Indien de GripRobot op de Intvert waarde moet controleren is het zaak dat   *
' *    deze waarde bekend is in de Griprobot in de module ADOGripMutatie           *
' **********************************************************************************
    If ParkerenGripTmp = "Parkeren" Then
        WFM_INTVERT = "Parkeren"    'Default geen GRIPRobot
'       Intvert vullen tbv Grip robot
        If WFM_REDEN_PARKEREN = "Nieuwe dln (NWD)" Then WFM_INTVERT = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Nieuwe aanmeld (NWA)" Then WFM_INTVERT = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Blokkade GB" Then WFM_INTVERT = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Blokkade VP" Then WFM_INTVERT = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Blokkade WIA" Then WFM_INTVERT = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Blokkade Overig" Then WFM_INTVERT = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Contractsverlenging" Then WFM_INTVERT = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Inregelen contract" Then WFM_INTVERT = "nieuwe DLN"
    Else
        WFM_INTVERT = ""
    End If
End Sub

Private Sub WFMDDATUM_OVERDR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDATUM_OVERDR
    WFMDDATUM_OVERDR.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum overdracht"
End Sub

Private Sub WFMDRAPPEL_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    DateCheckBefore WFMDRAPPEL
    Exit Sub

EH:
    DisplayError "Parkeren einddatum"
End Sub
Attribute VB_Name = "frmBWOMuterenAdm"
Attribute VB_Base = "0{C19A0099-CCF8-44B5-9365-57399DBE5EAD}{A28430F5-E63B-4C66-9525-367FD4775EF5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myCeasarKlaargezet  As CALFormField
Dim myESWMObjID         As String

Private Sub CmdParkDatum_Click()
    On Error GoTo EH
    If Not mvParkdatum.Visible Then
        mvParkdatum.Left = 72
        mvParkdatum.Top = 168
        mvParkdatum.Visible = True
        mvParkdatum = Date + 7
        If Not WFMDRAPPEL = "" Then mvParkdatum = WFMDRAPPEL
    Else
        mvParkdatum.Visible = False
    End If

EH:
    If Err.Number = 13 Then
        mvParkdatum = Date
        Exit Sub
    End If
    DisplayError "Foutieve datum"
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim VerplichtVeldOntbreekt  As String

    On Error GoTo EH
    VerplichtVeldOntbreekt = ""
'   *****OmBu dit stuk wegsterren als het niet meer wijzigbaar moet zijn******
    If WFMCBETAALD Then
        If Not (isGevuld1 And isGevuld2) Then
            MsgBox "Overdrachts velden zijn niet correct ingevuld!", vbExclamation
            Exit Sub
         End If
    End If
    DateCheck WFMDDATUMONTV
    DateCheck WFMDDATUMONTV2
    valutaCheck WFM_OVERDRACHTSWAARDE
    valutaCheck WFM_OVERDRACHTSWAARDE2
'   ************************
'   Controleren of bij een vertraging ook de rappeldatum en reden_parkeren zijn ingevuld
    If WFM_INTVERT <> "" Then
        If WFMDRAPPEL = "" Then
            VerplichtVeldOntbreekt = "Het verplichte veld rappeldatum bevat geen waarde!"
        End If
        If WFM_REDEN_PARKEREN = "" Then
            If VerplichtVeldOntbreekt = "" Then
                VerplichtVeldOntbreekt = "Het verplichte veld reden parkeren bevat geen waarde!"
            Else
                VerplichtVeldOntbreekt = "De verplichte velden rappeldatum en reden parkeren bevatten geen waarde!"
            End If
        End If
        If VerplichtVeldOntbreekt <> "" Then
            MsgBox VerplichtVeldOntbreekt, vbExclamation, "Verplichte velden bevatten geen waarde"
            Exit Sub
        End If
    End If
    DateCheck WFMDRAPPEL
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    If Not UploadCaesarBWO(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        If optCsKlaarWFM = True Then
            If myCeasarKlaargezet.Value <> "J" Then
                myCeasarKlaargezet.Value = "J"
            End If
        End If
        If optCsKlaarHandm = True Then
            If myCeasarKlaargezet.Value <> "Oke" Then
                myCeasarKlaargezet.Value = "Oke"
            End If
        End If
        If optCsKlaarLeeg = True Then
            If myCeasarKlaargezet.Value <> "" Then
                myCeasarKlaargezet.Value = ""
            End If
        End If
    End If
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
'   Gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub mvParkdatum_DateClick(ByVal DateClicked As Date)
    WFMDRAPPEL = Format(mvParkdatum, "dd-mm-yyyy")
    mvParkdatum.Visible = False
    WFMDRAPPEL.SetFocus
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

    On Error GoTo EH
'   Word templates die in deze stap gebruikt kunnen worden.
    lbTemplates.AddItem "BWO Afronding aan deelnemer"

    WFM_INTVERT.ColumnCount = 2
    WFM_INTVERT.BoundColumn = 1
    WFM_INTVERT.TextColumn = -1
    WFM_INTVERT.ColumnWidths = "0;"
    WFM_INTVERT.AddItem
    WFM_INTVERT.list(0, 1) = "Ja"
    WFM_INTVERT.list(0, 0) = "Muteren"  'naar parkeerbak
    WFM_INTVERT.AddItem
    WFM_INTVERT.list(1, 1) = "Nee"
    WFM_INTVERT.list(1, 0) = ""
    WFM_INTVERT.AddItem
    WFM_INTVERT = ""

    WFM_REDEN_PARKEREN.AddItem "Kostencorrectie"
    WFM_REDEN_PARKEREN.AddItem "Salaris 2005"
    WFM_REDEN_PARKEREN.AddItem "Salaris 2006"
    WFM_REDEN_PARKEREN.AddItem "Salaris 2007"
    WFM_REDEN_PARKEREN.AddItem "Blokkade GB"
    WFM_REDEN_PARKEREN.AddItem "Blokkade VP"
    WFM_REDEN_PARKEREN.AddItem "Blokkade WIA"
    WFM_REDEN_PARKEREN.AddItem "Contractsverlenging"
    WFM_REDEN_PARKEREN.AddItem "Inregelen contract"
    WFM_REDEN_PARKEREN.AddItem "Klant gaat weg"
    WFM_REDEN_PARKEREN.AddItem "Info verzoek"
    WFM_REDEN_PARKEREN.AddItem "Pakket toevoegen"
    WFM_REDEN_PARKEREN.AddItem "Streefregeling"
    WFM_REDEN_PARKEREN.AddItem "Buitenland"
    WFM_REDEN_PARKEREN.AddItem "DG Extern"
    WFM_REDEN_PARKEREN.AddItem "DG Intern"

    If WFMCBETAALD = True Then
        Frame1.Visible = True
'       OmBu: Code voor niet wijzigbaar wel zichtbaar!
    Else
        Frame1.Visible = False
    End If
    If Init Then Exit Sub
    Init = True
    Set myCeasarKlaargezet = WIViewer.Fields.Find("CAESAR_AANGEVULD").CALFormField
    Select Case myCeasarKlaargezet.Value
        Case Is = "J"
             optCsKlaarWFM = True
        Case Is = "Oke"
             optCsKlaarHandm = True
        Case Is = ""
             optCsKlaarLeeg = True
    End Select
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub WFM_OVERDRACHTSWAARDE2_AfterUpdate()
    On Error GoTo EH
    If isGevuld1 Then
        valutaCheck WFM_OVERDRACHTSWAARDE2
        Exit Sub
    Else
        WFM_OVERDRACHTSWAARDE2.Text = ""
    End If

EH:
    MsgBox Err.Description
End Sub

Private Sub WFM_OVERDRACHTSWAARDE_AfterUpdate()
    On Error GoTo EH
    valutaCheck WFM_OVERDRACHTSWAARDE
    Exit Sub

EH:
    MsgBox Err.Description
End Sub

Private Sub WFM_OVERDRACHTSWAARDE_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If Not (KeyAscii >= 48 And KeyAscii <= 57) Then  '(KeyAscii = 44) 'Komma voorlopig niet nodig
        If Not (KeyAscii = 44) Then
            KeyAscii = 0
        End If
    End If
'   OmBu:  ` & ~ gaan niet helemaal goed.
    If KeyAscii = 126 Then KeyAscii = 0
    If KeyAscii = 96 Then KeyAscii = 0
End Sub

Private Sub WFM_OVERDRACHTSWAARDE2_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If Not (KeyAscii >= 48 And KeyAscii <= 57) Then  '(KeyAscii = 44) 'Komma voorlopig niet nodig
        If Not (KeyAscii = 44) Then
            KeyAscii = 0
        End If
    End If
'   OmBu:  ` & ~ gaan niet helemaal goed.
    If KeyAscii = 126 Then KeyAscii = 0
    If KeyAscii = 96 Then KeyAscii = 0
End Sub

Private Function isGevuld1() As Boolean
    If WFMDDATUMONTV = "" Or WFM_OVERDRACHTSWAARDE = "" Or WFM_REK_CRT = "" Then
        isGevuld1 = False
        WFMDDATUMONTV.SetFocus
    Else
        isGevuld1 = True
    End If
End Function

Private Function isGevuld2() As Boolean
    If Not ((WFMDDATUMONTV2 = "") And (WFM_OVERDRACHTSWAARDE2 = "") And (WFM_REK_CRT2 = "")) Then
        If WFMDDATUMONTV2 = "" Or WFM_OVERDRACHTSWAARDE2 = "" Or WFM_REK_CRT2 = "" Then
            isGevuld2 = False
            WFMDDATUMONTV.SetFocus
            Exit Function
        End If
    End If
    isGevuld2 = True
End Function

Private Sub WFMCBETAALD_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    If WFMCBETAALD.Value = True Then
        Frame1.Visible = True
    Else
        If (MsgBox("Als u het vinkje weghaalt, zullen de overdrachts gegevens geleegd worden!" & Chr(13) _
                   & "Wilt u verder gaan?", vbYesNo) = vbYes) Then
            WFM_OVERDRACHTSWAARDE2.Text = ""
            WFM_REK_CRT2.Text = ""
            WFMDDATUMONTV2 = ""
            WFM_OVERDRACHTSWAARDE.Text = ""
            WFM_REK_CRT.Text = ""
            WFMDDATUMONTV = ""
            Frame1.Visible = False
        Else
            WFMCBETAALD.Value = True
        End If
    End If
End Sub

Private Sub WFMDDATUMONTV_AfterUpdate()
    On Error GoTo EH
    DateCheck WFMDDATUMONTV

EH:
    DisplayError "Datum ontvangen"
End Sub

Private Sub WFMDDATUMONTV2_AfterUpdate()
    On Error GoTo EH
    DateCheck WFMDDATUMONTV2

EH:
    DisplayError "Datum ontvangen2"
End Sub

Private Sub WFM_INTVERT_Change()
' De componenten
' Label rappeldatum = LabelRappelDatum (denk aan waarde legen)
' Rappeldatum = WFMDRAPPEL
' Knop kalender = CmdParkDatum
' Kalender = mvParkdatum (denk aan positie)
' Label reden parkeren = LabelRedenParkeren
' Reden parkeren = WFM_REDEN_PARKEREN
    If (WFM_INTVERT.Value <> "Muteren") And (WFM_INTVERT.Value <> "") Then
        WFM_INTVERT.Value = ""
        MsgBox "Kies Muteren voor plaatsen van de map in 99B48 Parkeren MUT"
    End If
    If Not WFM_INTVERT = "" Then
'       Bevat een waarde
        CmdParkDatum.Visible = True
        LabelRappelDatum.Visible = True
        mvParkdatum.Left = 72
        mvParkdatum.Top = 168
        mvParkdatum.Visible = True
'       De te tonen maand in de kalender.
        If WFMDRAPPEL = "" Then
            mvParkdatum = Date
        Else
            mvParkdatum = WFMDRAPPEL
        End If
        WFMDRAPPEL.Visible = True
        WFM_REDEN_PARKEREN.Visible = True
        LabelRedenParkeren.Visible = True
    Else
'       Bevat geen waarde
        CmdParkDatum.Visible = False
        mvParkdatum.Visible = False
        LabelRappelDatum.Visible = False
        WFMDRAPPEL.Visible = False
        WFMDRAPPEL = ""
        WFM_REDEN_PARKEREN = ""
        WFM_REDEN_PARKEREN.Visible = False
        LabelRedenParkeren.Visible = False
    End If
End Sub

Private Sub WFMDRAPPEL_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    DateCheckBefore WFMDRAPPEL
    Exit Sub

EH:
    DisplayError "Parkeren einddatum"
End Sub
Attribute VB_Name = "frmBWOParkeren"
Attribute VB_Base = "0{240460B8-F3F6-4B33-BCB5-2A342A8883E6}{83856E7E-D102-4FFC-AC4D-7DF5903B2F6A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myRedenVertraging   As CALFormField

Private Sub CmdParkDatum_Click()
    On Error GoTo EH
    If Not mvParkdatum.Visible Then
        mvParkdatum.Left = 72
        mvParkdatum.Top = 144
        mvParkdatum.Visible = True
        mvParkdatum = Date + 7
        If Not WFMDRAPPEL = "" Then mvParkdatum = WFMDRAPPEL
    Else
        mvParkdatum.Visible = False
    End If

EH:
    If Err.Number = 13 Then
        mvParkdatum = Date
        Exit Sub
    End If
    DisplayError "Foutieve datum"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim VerplichtVeldOntbreekt  As String

    On Error GoTo EH
    VerplichtVeldOntbreekt = ""
'   *****OmBu dit stuk wegsterren als het niet meer wijzigbaar moet zijn******
    If WFMCBETAALD Then
        If Not (isGevuld1 And isGevuld2) Then
            MsgBox "Overdrachts velden zijn niet correct ingevuld!", vbExclamation
            Exit Sub
         End If
    End If
    DateCheck WFMDDATUMONTV
    DateCheck WFMDDATUMONTV2
    valutaCheck WFM_OVERDRACHTSWAARDE
    valutaCheck WFM_OVERDRACHTSWAARDE2
'   **************************************************************
    If optParkeren = True Then
'       De zaak blijft in de parkeer werkstap staan
        If WFMDRAPPEL = "" Then
            VerplichtVeldOntbreekt = "Het verplichte veld rappeldatum bevat geen waarde!"
        End If
        If WFM_REDEN_PARKEREN = "" Then
            If VerplichtVeldOntbreekt = "" Then
                VerplichtVeldOntbreekt = "Het verplichte veld reden parkeren bevat geen waarde!"
            Else
                VerplichtVeldOntbreekt = "De verplichte velden rappeldatum en reden parkeren bevatten geen waarde!"
            End If
        End If
        If VerplichtVeldOntbreekt <> "" Then
            MsgBox VerplichtVeldOntbreekt, vbExclamation, "Verplichte velden bevatten geen waarde"
            Exit Sub
        End If
        DateCheck WFMDRAPPEL
    End If
    If rb_antwoord_info_JA = True Then
'       Dit in een aparte procedure met naam meegeven
        Call VerplaatsenVanuitParkeerstap(WIViewer, WFM_WORKSTEP_NAAM.Value)
    End If
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        If optVoorbereiden = True Then
            If myRedenVertraging.Value <> "Voorbereiden" Then
                myRedenVertraging.Value = "Voorbereiden"
            End If
        End If
        If optMakenOfferte = True Then
            If myRedenVertraging.Value <> "Maken offerte" Then
                myRedenVertraging.Value = "Maken offerte"
            End If
        End If
        If OptMuteren = True Then
            myRedenVertraging.Value = ""
        End If
        If optParkeren = True Then
            myRedenVertraging.Value = tbRedenVertraging
        End If
    End If
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

Private Sub mvParkdatum_DateClick(ByVal DateClicked As Date)
    WFMDRAPPEL = Format(mvParkdatum, "dd-mm-yyyy")
    mvParkdatum.Visible = False
    WFMDRAPPEL.SetFocus
End Sub

Private Sub UserForm_Activate()
Static Init         As Boolean
Dim strWorkstep     As String

    On Error GoTo EH

    If WFMCBETAALD = True Then
        Frame1.Visible = True
'       OmBu: Code voor niet wijzigbaar wel zichtbaar!
    Else
        Frame1.Visible = False
    End If
    If Init Then Exit Sub
    Init = True
    strWorkstep = GetWorkstep(WIViewer)
    If strWorkstep = "99B48 Parkeren MUT" Then
        optMakenOfferte.Enabled = False
        optVoorbereiden.Enabled = False
        OptMuteren.Enabled = True
'       Pulldown reden_parkeren vullen
'       Max 20 karakters voor het veld IntVert
        WFM_REDEN_PARKEREN.AddItem "Kostencorrectie"
        WFM_REDEN_PARKEREN.AddItem "Salaris 2005"
        WFM_REDEN_PARKEREN.AddItem "Salaris 2006"
        WFM_REDEN_PARKEREN.AddItem "Salaris 2007"
        WFM_REDEN_PARKEREN.AddItem "Blokkade GB"
        WFM_REDEN_PARKEREN.AddItem "Blokkade VP"
        WFM_REDEN_PARKEREN.AddItem "Blokkade WIA"
        WFM_REDEN_PARKEREN.AddItem "Blokkade Overig"
        WFM_REDEN_PARKEREN.AddItem "Contractsverlenging"
        WFM_REDEN_PARKEREN.AddItem "Inregelen contract"
        WFM_REDEN_PARKEREN.AddItem "Klant gaat weg"
        WFM_REDEN_PARKEREN.AddItem "Info verzoek"
        WFM_REDEN_PARKEREN.AddItem "Pakket toevoegen"
        WFM_REDEN_PARKEREN.AddItem "DG Extern"
        WFM_REDEN_PARKEREN.AddItem "DG Intern"
    End If
    If strWorkstep = "99B06 Parkeren" Then
        WFM_REDEN_PARKEREN.AddItem "Akkoord werkgever"
        WFM_REDEN_PARKEREN.AddItem "Nieuwe dln (NWD)"
        WFM_REDEN_PARKEREN.AddItem "Nieuwe aanmeld (NWA)"
        WFM_REDEN_PARKEREN.AddItem "Blokkade GB"
        WFM_REDEN_PARKEREN.AddItem "Blokkade VP"
        WFM_REDEN_PARKEREN.AddItem "Blokkade WIA"
        WFM_REDEN_PARKEREN.AddItem "Blokkade Overig"
        WFM_REDEN_PARKEREN.AddItem "Contractsverlenging"
        WFM_REDEN_PARKEREN.AddItem "Inregelen contract"
        WFM_REDEN_PARKEREN.AddItem "Klant gaat weg"
        WFM_REDEN_PARKEREN.AddItem "Info verzoek"
        WFM_REDEN_PARKEREN.AddItem "Pakket toevoegen"
        WFM_REDEN_PARKEREN.AddItem "DG Extern"
        WFM_REDEN_PARKEREN.AddItem "DG Intern"
    End If
    Set myRedenVertraging = WIViewer.Fields.Find("Intvert").CALFormField
    optParkeren.Value = True
    tbRedenVertraging.Value = myRedenVertraging.Value
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub WFM_OVERDRACHTSWAARDE_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If Not (KeyAscii >= 48 And KeyAscii <= 57) Then  '(KeyAscii = 44) 'Komma voorlopig niet nodig
        If Not (KeyAscii = 44) Then
            KeyAscii = 0
        End If
    End If
'   OmBu:  ` & ~ gaan niet helemaal goed.
    If KeyAscii = 126 Then KeyAscii = 0
    If KeyAscii = 96 Then KeyAscii = 0
End Sub

Private Sub WFM_OVERDRACHTSWAARDE2_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If Not (KeyAscii >= 48 And KeyAscii <= 57) Then  '(KeyAscii = 44) 'Komma voorlopig niet nodig
        If Not (KeyAscii = 44) Then
            KeyAscii = 0
        End If
    End If
'   OmBu:  ` & ~ gaan niet helemaal goed.
    If KeyAscii = 126 Then KeyAscii = 0
    If KeyAscii = 96 Then KeyAscii = 0
End Sub

Private Sub WFM_OVERDRACHTSWAARDE2_AfterUpdate()
    On Error GoTo EH
    If isGevuld1 Then
        valutaCheck WFM_OVERDRACHTSWAARDE2
        Exit Sub
    Else
        WFM_OVERDRACHTSWAARDE2.Text = ""
    End If

EH:
    MsgBox Err.Description
End Sub

Private Sub WFM_OVERDRACHTSWAARDE_AfterUpdate()
    On Error GoTo EH
    valutaCheck WFM_OVERDRACHTSWAARDE
    Exit Sub

EH:
    MsgBox Err.Description
End Sub

Private Function isGevuld1() As Boolean
    If WFMDDATUMONTV = "" Or WFM_OVERDRACHTSWAARDE = "" Or WFM_REK_CRT = "" Then
        isGevuld1 = False
        WFMDDATUMONTV.SetFocus
    Else
        isGevuld1 = True
    End If
End Function

Private Function isGevuld2() As Boolean
    If Not ((WFMDDATUMONTV2 = "") And (WFM_OVERDRACHTSWAARDE2 = "") And (WFM_REK_CRT2 = "")) Then
        If WFMDDATUMONTV2 = "" Or WFM_OVERDRACHTSWAARDE2 = "" Or WFM_REK_CRT2 = "" Then
            isGevuld2 = False
            WFMDDATUMONTV.SetFocus
            Exit Function
        End If
    End If
    isGevuld2 = True
End Function

Private Sub WFM_REDEN_PARKEREN_Change()
Dim strWorkstep     As String

' **********************************************************************************
' *    Wijzigingen hier kunnen effect hebben op de werking van de GripRobot.       *
' *    Indien de GripRobot op de Intvert waarde moet controleren is het zaak dat   *
' *    deze waarde bekend is in de Griprobot in de module ADOGripMutatie           *
' **********************************************************************************
    strWorkstep = GetWorkstep(WIViewer)
    If strWorkstep = "99B06 Parkeren" Then
        If WFM_REDEN_PARKEREN = "Nieuwe dln (NWD)" Then tbRedenVertraging = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Nieuwe aanmeld (NWA)" Then tbRedenVertraging = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Blokkade GB" Then tbRedenVertraging = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Blokkade VP" Then tbRedenVertraging = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Blokkade WIA" Then tbRedenVertraging = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Blokkade Overig" Then tbRedenVertraging = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Contractsverlenging" Then tbRedenVertraging = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Inregelen contract" Then tbRedenVertraging = "nieuwe DLN"
    End If
End Sub

Private Sub WFMCBETAALD_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    If WFMCBETAALD.Value = True Then
        Frame1.Visible = True
    Else
        If (MsgBox("Als u het vinkje weghaalt, zullen de overdrachts gegevens geleegd worden!" & Chr(13) _
                   & "Wilt u verder gaan?", vbYesNo) = vbYes) Then
            WFM_OVERDRACHTSWAARDE2.Text = ""
            WFM_REK_CRT2.Text = ""
            WFMDDATUMONTV2 = ""
            WFM_OVERDRACHTSWAARDE.Text = ""
            WFM_REK_CRT.Text = ""
            WFMDDATUMONTV = ""
            Frame1.Visible = False
        Else
            WFMCBETAALD.Value = True
        End If
    End If
End Sub

Private Sub WFMDDATUMONTV_AfterUpdate()
    On Error GoTo EH
    DateCheck WFMDDATUMONTV

EH:
    DisplayError "Datum ontvangen"
End Sub

Private Sub WFMDDATUMONTV2_AfterUpdate()
    On Error GoTo EH
    DateCheck WFMDDATUMONTV2

EH:
    DisplayError "Datum ontvangen2"
End Sub

Private Sub WFMDRAPPEL_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    DateCheckBefore WFMDRAPPEL
    Exit Sub

EH:
    DisplayError "Parkeren einddatum"
End Sub
Attribute VB_Name = "frmBWORemise"
Attribute VB_Base = "0{BAB0C994-38DA-49E2-9D22-0F30EA573CA6}{25C55123-684C-45E0-BFA3-E7CACC7D30D9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String

' Pass along all messages except the one that
' makes the context menu appear.
'Public Function NoPopupWindowProc(ByVal hWnd As Long, ByVal _
'    Msg As Long, ByVal wParam As Long, ByVal lParam As _
'    Long) As Long
'Const WM_NCDESTROY = &H82
'Const WM_CONTEXTMENU = &H7B
'
'    ' If we're being destroyed,
'    ' restore the original WindowProc.
'    If Msg = WM_NCDESTROY Then
'        SetWindowLong _
'            hWnd, GWL_WNDPROC, _
'            OldWindowProc
'    End If
'
'    If Msg <> WM_CONTEXTMENU Then _
'        NoPopupWindowProc = CallWindowProc( _
'            OldWindowProc, hWnd, Msg, wParam, _
'            lParam)
'End Function

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If WFMCBETAALD Then
        If Not (isGevuld1 And isGevuld2) Then
            MsgBox "Overdrachts velden zijn niet correct ingevuld!", vbExclamation
            Exit Sub
         End If
    End If
    DateCheck WFMDDATUMONTV
    DateCheck WFMDDATUMONTV2
    valutaCheck WFM_OVERDRACHTSWAARDE
    valutaCheck WFM_OVERDRACHTSWAARDE2
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub UserForm_Activate()
    If WFMCBETAALD = True Then
        Frame1.Visible = True
    Else
        Frame1.Visible = False
    End If
    If UCase(Application.CALClient.DomainName) = "MKBPROD" Then
        lblRekCrnt.Visible = False
        WFM_REK_CRT.Visible = False
        WFMCOVERGEBOEKT.Visible = False
        WFMCOVERGEBOEKT.Value = True
    End If
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub WFM_OVERDRACHTSWAARDE_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If Not (KeyAscii >= 48 And KeyAscii <= 57) Then   '(KeyAscii = 44) 'Komma
        If Not (KeyAscii = 44) Then
            KeyAscii = 0
        End If
    End If
'   OmBu:  ` & ~ gaan niet helemaal goed.
    If KeyAscii = 126 Then KeyAscii = 0
    If KeyAscii = 96 Then KeyAscii = 0
End Sub

Private Sub WFM_OVERDRACHTSWAARDE2_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If Not (KeyAscii >= 48 And KeyAscii <= 57) Then  '(KeyAscii = 44) 'Komma voorlopig niet nodig
        If Not (KeyAscii = 44) Then
            KeyAscii = 0
        End If
    End If
'   OmBu:  ` & ~ gaan niet helemaal goed.
    If KeyAscii = 126 Then KeyAscii = 0
    If KeyAscii = 96 Then KeyAscii = 0
End Sub

Private Sub WFMCAANGEK_REMISE_Change()
    If WFMCAANGEK_REMISE.Value = True Then
        WFMCONVOLLEDIGE_REMISE.Value = False
        WFMCONVOLLEDIGE_REMISE.Enabled = False
    Else
        WFMCONVOLLEDIGE_REMISE.Enabled = True
    End If
End Sub

Private Sub WFMCBETAALD_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    If WFMCBETAALD.Value = True Then
        Frame1.Visible = True
    Else
        If (MsgBox("Als u het vinkje weghaalt, zullen de overdrachts gegevens geleegd worden!" & Chr(13) _
                  & "Wilt u verder gaan?", vbYesNo) = vbYes) Then
            WFM_OVERDRACHTSWAARDE2.Text = ""
            WFM_REK_CRT2.Text = ""
            WFMDDATUMONTV2 = ""
            WFM_OVERDRACHTSWAARDE.Text = ""
            WFM_REK_CRT.Text = ""
            WFMDDATUMONTV = ""
            Frame1.Visible = False
        Else
            WFMCBETAALD.Value = True
        End If
    End If
End Sub

Private Sub WFMCONVOLLEDIGE_REMISE_change()
    If WFMCONVOLLEDIGE_REMISE.Value = True Then
        WFMCAANGEK_REMISE.Value = False
        WFMCAANGEK_REMISE.Enabled = False
    Else
        WFMCAANGEK_REMISE.Enabled = True
    End If
End Sub

Private Sub WFMDDATUMONTV_AfterUpdate()
    On Error GoTo EH
    DateCheck WFMDDATUMONTV

EH:
    DisplayError "Datum ontvangen"
End Sub

Private Sub WFMDDATUMONTV2_AfterUpdate()
Dim strFormat       As String

    If WFMDDATUMONTV2.Text = "" Then Exit Sub
    On Error GoTo EH
    DateCheck WFMDDATUMONTV2

EH:
    DisplayError "Datum ontvangen2"
End Sub

Private Sub WFM_OVERDRACHTSWAARDE2_AfterUpdate()
    On Error GoTo EH
    If isGevuld1 Then
        valutaCheck WFM_OVERDRACHTSWAARDE2
        Exit Sub
    Else
        WFM_OVERDRACHTSWAARDE2.Text = ""
    End If

EH:
    MsgBox Err.Description
End Sub

Private Sub WFM_OVERDRACHTSWAARDE_AfterUpdate()
    On Error GoTo EH
    valutaCheck WFM_OVERDRACHTSWAARDE
    Exit Sub

EH:
    MsgBox Err.Description
End Sub

Private Sub WFM_REK_CRT2_AfterUpdate()
    If isGevuld1 Then
        Exit Sub
    Else
        WFM_REK_CRT2.Text = ""
    End If
End Sub

Private Function isGevuld1() As Boolean
    If WFMDDATUMONTV = "" Or WFM_OVERDRACHTSWAARDE = "" Or WFM_REK_CRT = "" Then
        isGevuld1 = False
        WFMDDATUMONTV.SetFocus
    Else
        isGevuld1 = True
    End If
End Function

Private Function isGevuld2() As Boolean
    If Not ((WFMDDATUMONTV2 = "") And (WFM_OVERDRACHTSWAARDE2 = "") And (WFM_REK_CRT2 = "")) Then
        If WFMDDATUMONTV2 = "" Or WFM_OVERDRACHTSWAARDE2 = "" Or WFM_REK_CRT2 = "" Then
            isGevuld2 = False
            WFMDDATUMONTV.SetFocus
            Exit Function
        End If
    End If
    isGevuld2 = True
End Function

Public Function IsValidDate(ByVal txt As String, Optional strFormat As String) As Boolean
    On Error GoTo DoneChecking
    IsValidDate = (Format$(CDate(txt), strFormat) = txt)
    Exit Function

DoneChecking:
    MsgBox "Datum is niet correct!", vbExclamation
End Function

Private Function InputDateFormat() As String
    Select Case LocalDMY
        Case 0
             InputDateFormat = "m" & LocalDateDiv & "d" & _
             LocalDateDiv & "yy"
        Case 1
             InputDateFormat = "d" & LocalDateDiv & "m" & _
             LocalDateDiv & "yy"
        Case 2
             InputDateFormat = "yy" & LocalDateDiv & "m" & _
             LocalDateDiv & "d"
    End Select
    InputDateFormat = "yy-mm-dd"
End Function

Private Function LocalDateDiv() As String
    LocalDateDiv = LocalizationData(2) 'LOCALE_SDATE)
End Function

Public Function LocalDMY() As Integer
'   gets the D M Y order
'   Returns 0,1, or 2
'       0 Month-Day-Year
'       1 Day-Month-Year
'       2 Year-Month-Day
'   LocalDMY = LocalizationData(LOCALE_ILDATE)
    LocalDMY = 2 'LocalizationData(LOCALE_IDATE) 'would also work
'(  I can't imagine anyone uses different ones in a single local)
End Function

Public Function LocalizationData(ByVal LData As Long) As String
'   This is a general routine to read whatever bit of data
'   you want based on the constants fed to it as LData
Dim stBuff      As String * 255
Dim Ret         As Long

    Ret = GetLocaleInfo(1024, LData, ByVal stBuff, Len(stBuff))
    If Ret Then
        LocalizationData = Left$(stBuff, Ret - IIf(StrConv(stBuff, vbFromUnicode) = stBuff, 0, 1))
'       NOTE the IIf bit of code determines whether you are
'       dealing with an ASCII or UniCode system and
'       trims the string accordingly
    End If
End Function
Attribute VB_Name = "frmBWOVoorbereiden"
Attribute VB_Base = "0{8798F2A7-7E5C-40AE-A59A-39D8DD038556}{BFB6FB07-2D5F-45F6-9681-F6737533919B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String

Private Sub mvParkdatum_DateClick(ByVal DateClicked As Date)
    WFMDRAPPEL = Format(mvParkdatum, "dd-mm-yyyy")
    mvParkdatum.Visible = False
    WFMDRAPPEL.SetFocus
End Sub

Private Sub WFM_REDEN_PARKEREN_Change()
' **********************************************************************************
' *    Wijzigingen hier kunnen effect hebben op de werking van de GripRobot.       *
' *    Indien de GripRobot op de Intvert waarde moet controleren is het zaak dat   *
' *    deze waarde bekend is in de Griprobot in de module ADOGripMutatie           *
' **********************************************************************************
    If ParkerenGripTmp = "Wachtregeling" Then WFM_INTVERT = "Wachtregeling"
    If ParkerenGripTmp = "Parkeren" Then
        WFM_INTVERT = "Parkeren"    'Default geen GRIPRobot
        If WFM_REDEN_PARKEREN = "Nieuwe dln (NWD)" Then WFM_INTVERT = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Nieuwe aanmeld (NWA)" Then WFM_INTVERT = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Blokkade GB" Then WFM_INTVERT = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Blokkade VP" Then WFM_INTVERT = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Blokkade WIA" Then WFM_INTVERT = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Blokkade Overig" Then WFM_INTVERT = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Contractsverlenging" Then WFM_INTVERT = "nieuwe DLN"
        If WFM_REDEN_PARKEREN = "Inregelen contract" Then WFM_INTVERT = "nieuwe DLN"
    End If
End Sub

Private Sub WFMDDAT_OPN_REG_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_OPN_REG
    If WFM_INTVERT = "Wachtregeling" Then
        If WFMDDAT_OPN_REG = Empty Then
            WFMDRet_Dat = Empty
        Else
            If WFMDDAT_OPN_REG <> Empty Then
                WFMDRet_Dat = Format(DateAdd("m", 1, WFMDDAT_OPN_REG), "dd-mm-yyyy")
            End If
        End If
    End If
    WFMDDAT_OPN_REG.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Opname regeling"
End Sub

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappeldatum"
End Sub

Private Sub WFMDRet_Dat_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRet_Dat
    WFMDRet_Dat.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappeldatum"
End Sub

Private Sub ParkerenGripTmp_Change()
' De componenten
' Label rappeldatum = LabelRappelDatum (denk aan waarde legen)
' Rappeldatum = WFMDRAPPEL
' Knop kalender = CmdParkDatum
' Kalender = mvParkdatum (denk aan positie)
' Label reden parkeren = LabelRedenParkeren
' Reden parkeren = WFM_REDEN_PARKEREN
    If ParkerenGripTmp <> "" Then
        WFM_INTVERT = ParkerenGripTmp
    End If
    Call DisplayRappelvsRetourDatum
    If WFM_INTVERT = "Parkeren" Then
'       Bevat een waarde
        CmdParkDatum.Visible = True
        LabelRappelDatum.Visible = True
        mvParkdatum.Left = 72
        mvParkdatum.Top = 72
        mvParkdatum.Visible = True
'       De te tonen maand in de kalender.
        If WFMDRAPPEL = "" Then
            mvParkdatum = Date
        Else
            mvParkdatum = WFMDRAPPEL
        End If
        WFMDRAPPEL.Visible = True
        WFM_REDEN_PARKEREN.Visible = True
        LabelRedenParkeren.Visible = True
'       De verplichte velden, niet-verplicht maken, omdat de zaak naar parkeren gaat
        WFMCReaktie_Werkgever.ForeColor = &H80000006
        Label_WFM_MUT_KLAARGEZET.ForeColor = &H80000
    Else
'       Bevat geen waarde
        CmdParkDatum.Visible = False
        mvParkdatum.Visible = False
        LabelRappelDatum.Visible = False
        WFMDRAPPEL.Visible = False
        WFMDRAPPEL = ""
        WFM_REDEN_PARKEREN = ""
        WFMDRAPPEL.BackColor = TextboxWhite
        WFM_REDEN_PARKEREN.Visible = False
        LabelRedenParkeren.Visible = False
'       De verplichte velden, bij niet-parkeren, de titels blauw maken.
        WFMCReaktie_Werkgever.ForeColor = &HFF0000
        Label_WFM_MUT_KLAARGEZET.ForeColor = &HFF0000
6
    End If
    Call DisplayRappelvsRetourDatum
End Sub

Private Sub cbOudePuo_Change()
Dim strOudePuo  As String
Dim OudePuo     As NaamPens

    On Error GoTo EH
    If Not cbOudePuo.Value = Empty Then
        OudePuo = GetNaamPens(cbOudePuo.Value)
        WFM_NAAM_PENS_OUD = cbOudePuo.Value
        WFM_INFO_PENS_OUD = OudePuo.InfoRegel
        WFM_ADRES_PENS_OUD = OudePuo.Postbus
        WFM_POSTC_PENS_OUD = OudePuo.PCPlaats
    Else
        WFM_NAAM_PENS_OUD = Empty
        WFM_INFO_PENS_OUD = Empty
        WFM_ADRES_PENS_OUD = Empty
        WFM_POSTC_PENS_OUD = Empty
    End If
    cbOudePuo.BackColor = TextboxWhite
    Exit Sub

EH:
    cbOudePuo.BackColor = TextboxRed
    DisplayError "cbOudePuo"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim VerplichtVeldOntbreekt      As String

    On Error GoTo EH
    VerplichtVeldOntbreekt = ""
    DateCheck WFMDDAT_OPN_REG
    DateCheck WFMDRAPPEL
    DateCheck WFMDRet_Dat
'   Controleren of bij een vertraging ook de rappeldatum en reden_parkeren zijn ingevuld
    If ParkerenGripTmp = "Parkeren" Then
        If WFMDRAPPEL = "" Then
            VerplichtVeldOntbreekt = "Het verplichte veld rappeldatum bevat geen waarde!"
        End If
        If WFM_REDEN_PARKEREN = "" Then
            If VerplichtVeldOntbreekt = "" Then
                VerplichtVeldOntbreekt = "Het verplichte veld reden parkeren bevat geen waarde!"
            Else
                VerplichtVeldOntbreekt = "De verplichte velden rappeldatum en reden parkeren bevatten geen waarde!"
            End If
        End If
        If VerplichtVeldOntbreekt <> "" Then
            MsgBox VerplichtVeldOntbreekt, vbExclamation, "Verplichte velden bevatten geen waarde"
            Exit Sub
        End If
    End If
    If Not WorkflowSave(WIViewer) Then Exit Sub
'   CAESAR-karretje afhankelijk van MUT_KLAARGEZET
    If Not UploadCaesarPartBWO(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WorkitemViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik op Brief"
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub UserForm_Activate()
Static Init     As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
'   Templates die in deze werkstap zijn te gebruiken
    If lbTemplates.ListCount = 0 Then
        lbTemplates.AddItem "BWO Afwijzing"
        lbTemplates.AddItem "BWO Akkoord werkgever"
        lbTemplates.AddItem "BWO Ontvangstbevestiging"
        lbTemplates.AddItem "BWO Verzoek Opgave OW"
        lbTemplates.AddItem "BWO Diverse"
    End If

    If ParkerenGripTmp.ListCount = 0 Then
        ParkerenGripTmp.ColumnCount = 2
        ParkerenGripTmp.BoundColumn = 1
        ParkerenGripTmp.TextColumn = -1
        ParkerenGripTmp.ColumnWidths = "0;"
        ParkerenGripTmp.AddItem
        ParkerenGripTmp.list(0, 1) = "Parkeren"
        ParkerenGripTmp.list(0, 0) = "Parkeren"
        ParkerenGripTmp.AddItem
        ParkerenGripTmp.list(1, 1) = "Wachtregeling"
        ParkerenGripTmp.list(1, 0) = "Wachtregeling"
        ParkerenGripTmp.AddItem
        ParkerenGripTmp = ""
    End If
'   Max 20 karakters voor het veld IntVert
'   Let op indien de reden_parkeren ook door de GRIP robot gecontroleerd
'   moet worden moet de waarde "nieuwe DLN" gevuld worden in IntVert
    WFM_REDEN_PARKEREN.AddItem "Akkoord werkgever"
    WFM_REDEN_PARKEREN.AddItem "Nieuwe dln (NWD)"
    WFM_REDEN_PARKEREN.AddItem "Nieuwe aanmeld (NWA)"
    WFM_REDEN_PARKEREN.AddItem "Blokkade GB"
    WFM_REDEN_PARKEREN.AddItem "Blokkade VP"
    WFM_REDEN_PARKEREN.AddItem "Blokkade WIA"
    WFM_REDEN_PARKEREN.AddItem "Blokkade Overig"
    WFM_REDEN_PARKEREN.AddItem "Contractsverlenging"
    WFM_REDEN_PARKEREN.AddItem "Inregelen contract"
    WFM_REDEN_PARKEREN.AddItem "Klant gaat weg"
    WFM_REDEN_PARKEREN.AddItem "Info verzoek"
    WFM_REDEN_PARKEREN.AddItem "Pakket toevoegen"
    WFM_REDEN_PARKEREN.AddItem "Buitenland"
    WFM_REDEN_PARKEREN.AddItem "DG Extern"
    WFM_REDEN_PARKEREN.AddItem "DG Intern"

    WFM_MUT_KLAARGEZET.ColumnCount = 2
    WFM_MUT_KLAARGEZET.BoundColumn = 1
    WFM_MUT_KLAARGEZET.TextColumn = -1
    WFM_MUT_KLAARGEZET.ColumnWidths = "0;"
    WFM_MUT_KLAARGEZET.AddItem
    WFM_MUT_KLAARGEZET.list(0, 1) = "Aegonet mutatie"
    WFM_MUT_KLAARGEZET.list(0, 0) = "A"
    WFM_MUT_KLAARGEZET.AddItem
    WFM_MUT_KLAARGEZET.list(1, 1) = "Wel mutatie"
    WFM_MUT_KLAARGEZET.list(1, 0) = "J"
    WFM_MUT_KLAARGEZET.AddItem
    WFM_MUT_KLAARGEZET.list(2, 1) = "Geen mutatie"
    WFM_MUT_KLAARGEZET.list(2, 0) = "N"
    WFM_MUT_KLAARGEZET = ""
    Call DisplayRappelvsRetourDatum
    If cbOudePuo.ListCount = 0 Then
        Call GetOudePuo
    End If
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub GetOudePuo()
Dim PensName    As Variant
Dim i           As Integer

    On Error GoTo EH
    If PensNames.Count < 1 Then InitNaamPens
    For Each PensName In PensNames
        i = InStr(PensName, ";")
        cbOudePuo.AddItem (Mid(PensName, 1, i - 1))
    Next
    Exit Sub

EH:
    DisplayError "GetOudePuo"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    Exit Sub

EH:
    DisplayError "UserForm_DblClick"
End Sub

Private Sub DisplayRappelvsRetourDatum()
    On Error GoTo EH
    Label11.ForeColor = &H80000012
    Select Case WFM_INTVERT
    Case Is = "Interne navraag"
         WFMDRet_Dat.Enabled = False
         WFMDRet_Dat.Visible = False
         WFMDRet_Dat.TabStop = False
         LabelReturn.Visible = False
         LabelReturn.Enabled = False
         WFMDRet_Dat = Empty
    Case Is = "Wachtregeling"
         WFMDRet_Dat.Enabled = False ' display only
         WFMDRet_Dat.Visible = True
         WFMDRet_Dat.TabStop = False
         Label11.ForeColor = LabelHighLighted
         LabelReturn.Visible = True
         LabelReturn.Enabled = False
         If WFMDDAT_OPN_REG = Empty Then
            WFMDRet_Dat = Empty
         Else
            WFMDRet_Dat = Format(DateAdd("m", 1, WFMDDAT_OPN_REG), "dd-mm-yyyy")
         End If
    Case Else
         WFMDRet_Dat.Enabled = False ' display only
         WFMDRet_Dat.Visible = False
         WFMDRet_Dat.TabStop = False
         LabelReturn.Visible = False
         LabelReturn.Enabled = False
    End Select
    Exit Sub
EH:
    DisplayError "DisplayRappelvsRetourDatum"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
  myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
 ESWMObjID = myESWMObjID
End Property

Private Sub WFMDRAPPEL_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    DateCheckBefore WFMDRAPPEL
    Exit Sub

EH:
    DisplayError "Parkeren einddatum"
End Sub

Private Sub CmdParkDatum_Click()
    On Error GoTo EH
    If Not mvParkdatum.Visible Then
        mvParkdatum.Left = 72
        mvParkdatum.Top = 72
        mvParkdatum.Visible = True
        mvParkdatum = Date + 7
        If Not WFMDRAPPEL = "" Then mvParkdatum = WFMDRAPPEL
    Else
        mvParkdatum.Visible = False
    End If

EH:
    If Err.Number = 13 Then
        mvParkdatum = Date
        Exit Sub
    End If
    DisplayError "Foutieve datum"
End Sub
Attribute VB_Name = "frmBWOVragenRemise"
Attribute VB_Base = "0{65175F60-1F65-4E5B-8913-6012A5641904}{9E6E1A0B-DF20-4710-B5EE-D80E72A7FC10}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
'   Gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub UserForm_Activate()
Static Init     As Boolean

    If Init Then Exit Sub
    Init = True
'   Word templates die in deze stap gebruikt kunnen worden.
    lbTemplates.AddItem "BWO Afleggen Verzoek"
    lbTemplates.AddItem "BWO Ontvangst reactie"
    lbTemplates.AddItem "BWO Verzoek Remise OW"
    lbTemplates.AddItem "BWO Diverse"
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    If cbOudePuo.ListCount = 0 Then
        Call GetOudePuo
    End If
End Sub
Private Sub GetOudePuo()
Dim PensName    As Variant
Dim i           As Integer

    On Error GoTo EH
    If PensNames.Count < 1 Then InitNaamPens
    For Each PensName In PensNames
        i = InStr(PensName, ";")
        cbOudePuo.AddItem (Mid(PensName, 1, i - 1))
    Next
    Exit Sub

EH:
    DisplayError "GetOudePuo"
End Sub
Private Sub cbOudePuo_Change()
Dim strOudePuo  As String
Dim OudePuo     As NaamPens

    On Error GoTo EH
    If Not cbOudePuo.Value = Empty Then
        OudePuo = GetNaamPens(cbOudePuo.Value)
        WFM_NAAM_PENS_OUD = cbOudePuo.Value
        WFM_INFO_PENS_OUD = OudePuo.InfoRegel
        WFM_ADRES_PENS_OUD = OudePuo.Postbus
        WFM_POSTC_PENS_OUD = OudePuo.PCPlaats
    Else
        WFM_NAAM_PENS_OUD = Empty
        WFM_INFO_PENS_OUD = Empty
        WFM_ADRES_PENS_OUD = Empty
        WFM_POSTC_PENS_OUD = Empty
    End If
    cbOudePuo.BackColor = TextboxWhite
    Exit Sub

EH:
    cbOudePuo.BackColor = TextboxRed
    DisplayError "cbOudePuo"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Attribute VB_Name = "frmDEBBeoordelenDoc"
Attribute VB_Base = "0{2BD9319C-3188-4663-9DF4-773284BA06EC}{AC45C7AD-CCA0-4FBA-B262-E9311C086B22}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myStatus As CALFormField
Dim myESWMObjID As String
Dim arrWerksoorten() As String
Dim arrWerktypen() As String
Dim arrWKTperWKS() As String
Dim arrAllWKTperWKS() As String
Dim strTempdate As String
Dim strAfdeling As String

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Set QueryFrm(objForm)
    Set myForm = objForm
End Property
Public Property Get QueryFrm() As Object
    Set QueryFrm = myForm
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub cmdExtraScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    If YetAnotherExtralink(WIViewer, WFM_NR_POLIS.Text) Then
        Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
        WFM_BEH_GROEP.Text = get_BEHGRP(WFM_IND_HUPO.Text)
    End If
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Screenscraping niet gelukt!"
End Sub

Private Sub imgCAESAR_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call ExtralinkAlg("U6", "RCKL", WFM_NR_KLANT, WIViewer)    ' Deze regel is tijdelijk om iets voor de debiteurenflow te testen
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
End Sub

Private Sub imgNotitie_Click()
    Set frmNotitie.rsViewer = WIViewer
    If Not ((WIViewer.CALClientListItem.Info.Status And calObjStatusWIP) = calObjStatusWIP) Then
        frmNotitie.lblAddNote.Enabled = False
    End If
    frmNotitie.Show 1
End Sub

Private Sub IMGsnelzoek_Click()
    frmQuery.QRYTextBox1 = WFM_NR_POLIS
    frmQuery.cmdFind_Click
    frmQuery.Show 0
End Sub

Private Sub UserForm_Activate()
Dim strUser                 As String
Dim sSavDocType             As String                   '[PAC] - BTA (BeTaalAchterstanden)

Static Init As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    strUser = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "BEHANDELAAR") 'WFM_BEHANDELAAR.Value
    strAfdeling = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR")

    On Error Resume Next
    WFM_BEHANDELAAR.Value = strUser
    
    On Error GoTo EH
    WFM_WERKTYPE.ColumnCount = 2
    WFM_WERKTYPE.BoundColumn = 1
    WFM_WERKTYPE.TextColumn = -1
    WFM_WERKTYPE.ColumnWidths = "30;30"
    WFM_WERKSOORT.ColumnCount = 2
    ' met de volgende gaan we een change event in en krijgen we een error
    ' dit als deze gevuld is met een waarde WERKSOORT...
    ' Omdat het toch de default is.....
    'WFM_WERKSOORT.BoundColumn = 1
    WFM_WERKSOORT.TextColumn = -1
    WFM_WERKSOORT.ColumnWidths = "30;30"
    ' Mabr ophalen werksoorten
    arrWerksoorten = Split(WFMData.Common.getField("WFAfdeling", "Werksoorten", "AfdCode", strAfdeling), ",")
    FillComboWRKSOORT arrWerksoorten, WFM_WERKSOORT
    ' Mabr Werktypes
    AllWerktypesPERwerksoort (strAfdeling)   ' Vullen van arrAllWKTperWKS
    If WFM_WERKSOORT = "" Then
            FillComboWRKtypen arrAllWKTperWKS, WFM_WERKTYPE
    Else
            arrWKTperWKS = Split(WFMData.Common.getField("WFAfdeling", WFM_WERKSOORT, "AfdCode", strAfdeling), ",")
            FillComboWRKtypen arrWKTperWKS, WFM_WERKTYPE
    End If

'[PAC] - BTA  Initialize JN_NAAR_CASE360
    JN_NAAR_CASE360.AddItem ""
    JN_NAAR_CASE360.AddItem "DEB"

    sSavDocType = WFM_DOCTYPE.Text
    If WFM_JN_NAAR_CASE360.Text = "42D" Then
        JN_NAAR_CASE360.Value = "DEB"
        cbCase360DocType.Value = sSavDocType
    Else
        Call JN_NAAR_CASE360_Change
    End If
'[PAC] - BTA  End Initialize JN_NAAR_CASE360
    Exit Sub

EH:
    DisplayError "Userform activate"
End Sub

Private Sub AllWerktypesPERwerksoort(strAfdeling As String)
Dim StrWKTtemp As String
Dim strWKT As String
Dim lngDummy As Long
Dim colalf As Collection

    On Error GoTo EH
    For lngDummy = LBound(arrWerksoorten) To UBound(arrWerksoorten)
        StrWKTtemp = WFMData.Common.getField("WFAfdeling", arrWerksoorten(lngDummy), "AfdCode", strAfdeling)
        If strWKT = "" Then
              strWKT = StrWKTtemp
        ElseIf StrWKTtemp <> "" Then
             strWKT = strWKT + "," + StrWKTtemp
        End If
    Next
    arrAllWKTperWKS = Split(strWKT, ",")
    Set colalf = New Collection
    For lngDummy = LBound(arrAllWKTperWKS) To UBound(arrAllWKTperWKS)
        colalf.Add arrAllWKTperWKS(lngDummy)
    Next
    ' sorteren
    Set colalf = SortCollection(colalf)
    For lngDummy = 1 To colalf.Count
        arrAllWKTperWKS(lngDummy - 1) = colalf.item(lngDummy)
    Next
    Exit Sub

EH:
    DisplayError "AllWerktypesPERwerksoort"
End Sub

'[PAC] - BTA  Subroutine Added
Private Sub JN_NAAR_CASE360_Change()
    cbCase360DocType.Clear
    If JN_NAAR_CASE360.Value = "" Then
        cbCase360DocType.Enabled = False
        WFM_WERKSOORT.Enabled = True
        cmdToevoegen.Enabled = True
        cmdCopy.Enabled = True
    Else
        cbCase360DocType.Enabled = True
'       Call FillCase360DocTypes(JN_NAAR_CASE360.Value, cbCase360DocType)
        cbCase360DocType.AddItem "Overig"               'Vervangen door subRoutine
        cbCase360DocType.ListIndex = 0                  'als meer DocTypen komen
        WFM_WERKSOORT.ListIndex = 0
        WFM_WERKSOORT.Enabled = False
        cmdToevoegen.Enabled = False
        cmdCopy.Enabled = False
    End If
End Sub
'[PAC] - BTA  End Subroutine Added

Private Sub WFM_WERKSOORT_Change()
    On Error GoTo EH
    If Not WFM_WERKSOORT = "" Then
        ' mabr werktypen vullen / weghalen
        If Not strAfdeling = "" Then
            arrWKTperWKS = Split(WFMData.Common.getField("WFAfdeling", WFM_WERKSOORT, "AfdCode", strAfdeling), ",")
            FillComboWRKtypen arrWKTperWKS, WFM_WERKTYPE
        End If
    Else ' mabr werksoorten leeggemaakt
        FillComboWRKtypen arrAllWKTperWKS, WFM_WERKTYPE
    End If
    Exit Sub

EH:
    DisplayError "Werksoort"
End Sub

Private Sub WFM_WERKTYPE_Change()
Dim strTemp As String
Dim strWeken As String
Dim strDate As String

    On Error Resume Next
    If Not WFM_WERKTYPE = "" Then
        If WFM_WERKSOORT = "" Then
            ' doordat de werksoort wijzigt wordt de type weer leeggemaakt.. geinig
            strTemp = WFM_WERKTYPE
            WFM_WERKSOORT = WFMData.Common.getField("WFWerktype", "Werksoort", "Werktype", strTemp)
            WFM_WERKTYPE = strTemp
        End If
    End If
    Exit Sub

EH:
    DisplayError "Werktype"
End Sub

Public Sub FillComboWRKSOORT(ByRef arrWerksoorten() As String, ByVal cbo As Control)
Dim lngDummy As Long

    cbo.Clear
    cbo.AddItem
    cbo.list(0) = ""
    For lngDummy = LBound(arrWerksoorten) To UBound(arrWerksoorten)
        cbo.AddItem
        cbo.list(lngDummy + 1, 0) = arrWerksoorten(lngDummy)
        cbo.list(lngDummy + 1, 1) = WFMData.Common.getField("WFWerksoort", "WerksoortOmschrijving", "WerksoortAfkorting", arrWerksoorten(lngDummy), "Enabled", "1")
    Next
End Sub

Public Sub FillComboWRKtypen(ByRef arrWerktypen() As String, ByVal cbo As Control)
Dim lngDummy As Long

    cbo.Clear
    cbo.AddItem
    cbo.list(0) = ""
    For lngDummy = LBound(arrWerktypen) To UBound(arrWerktypen)
        cbo.AddItem
        cbo.list(lngDummy + 1, 0) = arrWerktypen(lngDummy)
        cbo.list(lngDummy + 1, 1) = WFMData.Common.getField("WFWerktype", "WerktypeOmschrijving", "Werktype", arrWerktypen(lngDummy), "Enabled", "1")
    Next
    If cbo.ListCount = 2 Then
        cbo.ListIndex = 1
    Else
        WFM_WERKTYPE.ListIndex = 0
    End If
End Sub

Private Sub cmdCopy_Click()
Static KopieNr As Integer
Dim KopieItem As CALClientListItem

    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    KopieNr = KopieNr + 1
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call CopySendDocument(WIViewer.CALClientListItem, KopieNr)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    DisplayError "Kopie"
    MousePointer = fmMousePointerDefault
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myKenMerk, myIdent      As String
Dim bdoctype                As Boolean

    Err.Clear
    On Error GoTo EH
    
'[PAC] - BTA  Code added to check CASE360 DocType
    WFM_JN_NAAR_CASE360.Text = ""
    If JN_NAAR_CASE360.Value <> "" Then
        If Len(WFM_NR_KLANT.Text) <> 6 Then
            MsgBox "Klantnummer niet correct of niet ingevuld."
            WFM_NR_KLANT.SetFocus
            Exit Sub
        End If
        If cbCase360DocType.Value = "" Then
            MsgBox "CASE360 Documenttype niet ingevuld."
            Exit Sub
        End If
        WFM_JN_NAAR_CASE360.Text = "42D"
        WFM_DOCTYPE.Text = cbCase360DocType.Value
    End If
'[PAC] - BTA  End Code added to check CASE360 DocType

    Call CheckFields
    WFM_NR_POLIS = WFM_NR_KLANT
    WFM_IND_TRIGGER = "DEB"
    myIdent = WFM_NR_POLIS + WFM_IND_TRIGGER
    If WFM_ZAAK_IDENT_NR <> myIdent Then
        WFM_ZAAK_IDENT_NR = myIdent
    End If
    WIViewer.Save
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdToevoegen_Click()
Dim mobjQueryResults As CALQueryResults
Dim myQueryFrm As Object

    On Error GoTo EH
    Call CheckFields
    WFM_NR_POLIS = WFM_NR_KLANT
    If Not WorkflowSave(WIViewer) Then Exit Sub
    ' zoeken folders met zelfde deelnemer nummer.
    ' na keuze van folder wordt document hierin geimporteerd.
    If Not Me.QueryFrm Is Nothing Then
       Me.QueryFrm.Show 0
       Exit Sub
    End If
    Set Me.QueryFrm = New frmZoekImport
    Set myQueryFrm = Me.QueryFrm
    Set myQueryFrm.WorkitemViewer = Me.WorkitemViewer
    Set myQueryFrm.ParentForm = Me
    myQueryFrm.Show 0
    Exit Sub

EH:
    ' Doctype, ind_trigger en zk_volgnr worden tijdens de
    ' import gevuld
    ' doctype niet ingevuld. Dat mag dus
    If Err.Number = 12349 Then
        Resume Next ' komt niet meer terug in checkfields
        WFM_DOCTYPE.BackColor = TextboxWhite
    End If
    DisplayError "Toevoegen"
End Sub

Private Sub cmdScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
    WFM_BEH_GROEP.Text = get_BEHGRP(WFM_IND_HUPO.Text)
'    SetIndTrigger
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Open eerst het juiste CAESAR scherm (U1 OHUP, U3 INWG of U3 INAK)."
End Sub

Private Sub CheckFields()
    If WFM_NR_KLANT = "" Then
        WFM_NR_KLANT.BackColor = TextboxRed
        Err.Raise 12345, , "Klantnummer is niet ingevuld."
    End If
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Terminate()
    If Not Me.QueryFrm Is Nothing Then
        Unload Me.QueryFrm
    End If
End Sub

Private Sub WFM_NR_KLANT_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    Call getTPnaamnummer(Me)
End Sub
Attribute VB_Name = "frmDebAlgemeen"
Attribute VB_Base = "0{E6E04D9E-71FD-459E-B661-98CBFB1576F8}{EB0C702E-7FE9-4BA7-B32D-BF7E94D38AB4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim intLeft             As Integer
Dim intTop              As Integer
Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim strUser             As String
Dim strAfdeling         As String
Dim strOrgDoorzendenNaar As String
Dim myESWMObjID         As String
Dim WorkstepDebFlow     As String
Dim intStatus           As Integer
Dim blnInit             As Boolean

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub cbnAnnuleren_Click()
    On Error GoTo ErrAnnuleren_Click
    Call WFMBackButton(WIViewer)
    Exit Sub

ErrAnnuleren_Click:
    DisplayError "frmDebAlgemeen.cbnAnnuleren_Click"
End Sub

Private Sub cbnDoorSturen_Click()
On Error GoTo EH
'   De Indexform (4 setjes) parkeervelden opnemen in de WFM form parkeervelden (1 setje)
'   dprRAPPEL2
'   cmbRedenParkeren2
'   dprRAPPEL3
'   cmbRedenParkeren3
'   dprRappelBet
'   cmbRedenParkerenBet
'   dprRappelBlok
'   cmbRedenParkerenBlok
'   Er zijn 4 Worksteps van waaruit geparkeerd kan worden met ieder hun eigen velden.
    ParkerenFieldsWegschrijven (intStatus)
'   Opslaan van data van het scherm
    If Me.obnBetaaldJa.Value = True Then  'betaald door naar nazorg
        VerplaatsenWorkStep = "42Z01 Nazorg"
'       Voordat zaak naar nazorg wordt gestuurd moeten de wijzigingen worden opgeslagen
        If Not SetCALXFormFields Then Exit Sub
        If Not WorkflowSave(WIViewer) Then Exit Sub
        Call verplaatsNaarWorkStep(WIViewer)
        Exit Sub
    End If
    If Me.WFMrArchiefJN_ja.Value = True Then
'       Reden archie moet ingevuld.
        If Trim(Me.WFM_REDEN_ARCHIEF.Text) <> "" Then
            VerplaatsenWorkStep = "REG90 Archief"
            Call verplaatsNaarWorkStep(WIViewer)
        Else
            MsgBox "Reden archief dient ingevuld te zijn.", vbCritical
        End If
        Exit Sub
    End If
'   REDEN_PARKERN moet zijn ingevuld als parkeren = ja.
    If Me.obnParkerenJa Or Me.obnParkeren3Ja Or Me.obnParkerenJaBet Or Me.obnParkerenJaBlok Then
        If WFM_REDEN_PARKEREN = "" Then
            Err.Raise 12345, , "Er moet een Reden Parkeren worden opgegeven!"
            GoTo EH
            Exit Sub
        End If
'       Controle of datum in systeem maand ligt vwb de 42 flow.
        If Me.obnParkerenJa Then
            If Month(dprRAPPEL2.Value) <> Month(Now) Then
                Err.Raise 12345, , "Rappeldatum moet in huidige maand liggen!"
            End If
        End If
        If Me.obnParkeren3Ja Then
            If Month(dprRAPPEL3.Value) <> Month(Now) Then
                Err.Raise 12345, , "Rappeldatum moet in huidige maand liggen!"
            End If
        End If
    End If
    Me.WFM_Betal_Start.Value = Me.dprBetal_Start
    Me.WFM_Betal_Eind.Value = Me.dprBetal_Eind
    WFM_BlokkadeDatum.Value = dprBlokkadeDatum

    On Error GoTo EH
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
           
    End If
    SetCALXFormFields = True
    Exit Function

EH:
  DisplayError "SetCALXFormFields"
End Function

Private Sub dprRappelBlok_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck dprRappelBlok
    DateCheckBefore dprRappelBlok
    Exit Sub

EH:
    DisplayError "Rappeldatum"
End Sub

Private Sub imgCAESAR_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call ExtralinkAlg("U6", "RCKL", WFM_NR_KLANT, WIViewer)    ' Deze regel is tijdelijk om iets voor de debiteurenflow te testen
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
End Sub

Private Sub imgNotitie_Click()
    Set frmNotitie.rsViewer = WIViewer
    If Not ((WIViewer.CALClientListItem.Info.Status And calObjStatusWIP) = calObjStatusWIP) Then
        frmNotitie.lblAddNote.Enabled = False
    End If
    frmNotitie.Show 1
End Sub

Private Sub IMGsnelzoek_Click()
    frmQuery.QRYTextBox4 = WFM_NR_KLANT
    frmQuery.cmdFind_Click
    frmQuery.Show 0
End Sub

Private Sub obnBetaaldJa_Click()
    WFM_REDEN_ARCHIEF = "Betaald"
    If Me.WFMrArchiefJN_ja = True Then
        MsgBox "Archiveren J/N is Ja. Dit is niet mogelijk in combinatie met Betaald J/N is ja", vbInformation
        Me.obnBetaaldNee.Value = True
    End If
End Sub

Private Sub UserForm_Activate()
    On Error GoTo ErrUserForm_Activate
'   Eerst alle velden velden vullen
    Call initForm           'Initieeren van form (Welke velden tonen).
    Exit Sub

ErrUserForm_Activate:
    DisplayError "frmDebAlgemeen.UserForm_Activate"
End Sub

Function initForm()
    frmDebAlgemeen.Left = 1
    frmDebAlgemeen.Top = 1
    intLeft = 6                 'Default waarde positie frames
    intTop = 12                 'Default waarde positie frames
'   Op basis van de WorkstepDebFlow wordt bepaald welke velden van het_
'   tabblad "Proces" op het VBA indexform getoond worden.
    WorkstepDebFlow = GetWorkstep(WIViewer)
'   Bewaar oude waarde (globaal) van dropdownlist.
'   Deze wordt gecheckt in WFM_DOORZENDEN_NAAR_Change
    strOrgDoorzendenNaar = Me.WFM_DOORZENDEN_NAAR.Value
    strUser = WFM_BEHANDELAAR.Value
'   Worksteps met Parkeersetje; deze velden vullen
    If Left(WorkstepDebFlow, 3) = "43D" Or Left(WorkstepDebFlow, 3) = "43G" Then
        intStatus = 10
        ParkerenFieldsOpenen (intStatus)
    End If
    If Left(WorkstepDebFlow, 3) = "44D" Or Left(WorkstepDebFlow, 3) = "44G" Then
        intStatus = 11
        ParkerenFieldsOpenen (intStatus)
    End If
    If Left(WorkstepDebFlow, 4) = "42D2" Or Left(WorkstepDebFlow, 4) = "33D2" Or Left(WorkstepDebFlow, 4) = "42G2" Then
        intStatus = 2
        ParkerenFieldsOpenen (intStatus)
'       JAG 20071009 Op tabblad overig mag bij status 2 archiveren niet worden getoond.
        lblArchieverenJN.Visible = False
        lblRedenArchief.Visible = False
        WFMrArchiefJN_ja.Visible = False
        WFMrArchiefJNnee.Visible = False
        WFM_REDEN_ARCHIEF.Visible = False
    End If
    If Left(WorkstepDebFlow, 4) = "42D3" Or Left(WorkstepDebFlow, 4) = "42G3" Then
        intStatus = 3
        ParkerenFieldsOpenen (intStatus)
    End If
'   Worksteps Zonder parkeerset
    If Left(WorkstepDebFlow, 4) = "42D4" Or Left(WorkstepDebFlow, 4) = "42G4" Then intStatus = 4
    If Left(WorkstepDebFlow, 4) = "42D5" Or Left(WorkstepDebFlow, 4) = "42G5" Then intStatus = 5
    If Left(WorkstepDebFlow, 4) = "42D6" Or Left(WorkstepDebFlow, 4) = "42G6" Then intStatus = 6
    If Left(WorkstepDebFlow, 4) = "42D7" Or Left(WorkstepDebFlow, 4) = "42G7" Then intStatus = 7
    If Left(WorkstepDebFlow, 4) = "42D8" Or Left(WorkstepDebFlow, 4) = "33D8" Or Left(WorkstepDebFlow, 4) = "42G8" Then intStatus = 8
    If Left(WorkstepDebFlow, 5) = "42Z01" Then intStatus = 9
    Select Case intStatus
        Case 2
             Call initStatus2 'vullen van velden voor status 2
        Case 3
             Call initStatus3 'vullen van velden voor status 3
        Case 4
             Call initStatus4 'vullen van velden voor status 4
        Case 5
             Call initStatus5 'vullen van velden voor status 5
        Case 6
             Call initStatus6 'vullen van velden voor status 6
        Case 7
             Call initStatus7 'vullen van velden voor status 7
        Case 8
             Call initStatus8 'vullen van velden voor status 8
        Case 9
             Call initStatusNazorg 'vullen van velden voor status Nazorg
        Case 10
             Call initStatusBet 'vullen van velden voor status Betalingsregeling
        Case 11
             Call initStatusBlok 'vullen van velden voor status Blokkering
    End Select
    MultiPage1.Value = 0
    Call getRelatieBeheerderDeb 'ophalen relatieBeheerderDeb
End Function

Function showParkerenFields(ByVal bShow As Boolean, ByVal sStatus As String)
'   Adhv bShow wordt visible op true/false gezet.
'   sStatus geeft processtap aan.
    Select Case sStatus
        Case "2"
             Me.lblRappelDatum2.Visible = bShow
             Me.lblRedenParkeren2.Visible = bShow
             Me.dprRAPPEL2.Visible = bShow
             Me.cmbRedenParkeren2.Visible = bShow
        Case "3"
             Me.lblRappelDatum3.Visible = bShow
             Me.lblRedenParkeren3.Visible = bShow
             Me.dprRAPPEL3.Visible = bShow
             Me.cmbRedenParkeren3.Visible = bShow
        Case "BET"
             Me.lblRappelDatumBet.Visible = bShow
             Me.dprRappelBet.Visible = bShow
             cmdRedenParkerenBet.Visible = bShow
             Me.lblRedenParkerenBet.Visible = bShow
        Case "BLOK"
             If WFMrBlokk_IngeregldJN_ja = True Then
                 Call showParkerenFieldsII(True, "BLOK")
             Else
                Call showParkerenFieldsII(False, "BLOK")
             End If
    End Select
End Function

Function showParkerenFieldsII(ByVal bShowII As Boolean, ByVal sStatusII As String)
' Deze functie betreft de vraag of een gebruiker Ubergaupt zaken mag parkeren.
' Adhv bShow wordt visible op true/false gezet.
' sStatus geeft processtap aan.
Dim bShowIII            As String

    Select Case sStatusII
        Case "2"
        Case "3"
        Case "BET"
        Case "BLOK"
'            Parkeren ja/nee labels
             lblParkerenJNBlok.Visible = bShowII
             obnParkerenJaBlok.Visible = bShowII
             obnParkerenNeeBlok.Visible = bShowII
'            De vragen behorende bij parkeren Ja
             If obnParkerenJaBlok = True And WFMrBlokk_IngeregldJN_ja = True Then
                bShowIII = True
             Else
                bShowIII = False
             End If
             Me.lblRappelDatumBlok.Visible = bShowIII
             Me.lblRedenParkerenBlok.Visible = bShowIII
             Me.dprRappelBlok.Visible = bShowIII
             Me.cmbRedenParkerenBlok.Visible = bShowIII
    End Select
End Function

Function ParkerenFieldsOpenen(ByVal sProces As String)
' sProces geeft het proces aan waarvoor de parkeervelden gevuld moeten worden
    Select Case sProces
        Case "2"
             If WFMDRAPPEL.Value <> "" Then
                dprRAPPEL2.Visible = True
                dprRAPPEL2 = Format(WFMDRAPPEL, "dd-MM-yyyy")
             End If
             cmbRedenParkeren2 = WFM_REDEN_PARKEREN.Value
             If WFM_ParkerenJN.Value = "J" Then obnParkerenJa = True Else obnParkerenNee = True
        Case "3"
             If WFMDRAPPEL.Value <> "" Then
                dprRAPPEL3.Visible = True
                Call zetDate(dprRAPPEL3, Format(WFMDRAPPEL, "dd-MM-yyyy"))
             End If
             cmbRedenParkeren3 = WFM_REDEN_PARKEREN.Value
             If WFM_ParkerenJN.Value = "J" Then obnParkeren3Ja = True Else obnParkeren3Nee = True
        Case "10"
             If WFMDRAPPEL.Value <> "" Then
                dprRappelBet.Visible = True
                Call zetDate(dprRappelBet, Format(WFMDRAPPEL, "dd-MM-yyyy"))
             End If
             cmdRedenParkerenBet = WFM_REDEN_PARKEREN.Value
             If WFM_ParkerenJN.Value = "J" Then
                obnParkerenJaBet = True
             Else
                obnParkerenNeeBet = True
             End If
        Case "11"
             If WFMDRAPPEL.Value <> "" Then
                dprRappelBlok.Visible = True
                Call zetDate(dprRappelBlok, Format(WFMDRAPPEL, "dd-MM-yyyy"))
             End If
             cmbRedenParkerenBlok = WFM_REDEN_PARKEREN.Value
             If WFM_ParkerenJN.Value = "J" Then
                obnParkerenJaBlok = True
                dprRappelBlok.Visible = True
                Call zetDate(dprRappelBlok, WFMDRAPPEL.Value)
                Call zetMinDate(dprRappelBlok, Date)
             Else
                obnParkerenNeeBlok = True
                dprRappelBlok.Visible = True
                Call zetMinDate(dprRappelBlok, Date)
                dprRappelBlok.Visible = False
             End If
    End Select
End Function

Function ParkerenFieldsWegschrijven(ByVal sProces As String)
' sProces geeft het proces aan waarvoor de parkeervelden gevuld moeten worden
    Select Case sProces
        Case "2"
             If obnParkerenJa = True Then
                WFM_ParkerenJN.Value = "J"
                WFMDRAPPEL.Value = dprRAPPEL2
                WFM_REDEN_PARKEREN.Value = cmbRedenParkeren2
             Else
                WFM_ParkerenJN.Value = "N"
             End If
        Case "3"
             If obnParkeren3Ja = True Then
                WFM_ParkerenJN.Value = "J"
                WFMDRAPPEL.Value = dprRAPPEL3
                WFM_REDEN_PARKEREN.Value = cmbRedenParkeren3
             Else
                WFM_ParkerenJN.Value = "N"
             End If
        Case "10"
             If obnParkerenJaBet = True Then
                WFM_ParkerenJN.Value = "J"
                WFMDRAPPEL.Value = dprRappelBet
                WFM_REDEN_PARKEREN.Value = cmdRedenParkerenBet
             Else
                WFM_ParkerenJN.Value = "N"
             End If
        Case "11"
             If obnParkerenJaBlok = True Then
                WFM_ParkerenJN.Value = "J"
                WFMDRAPPEL.Value = dprRappelBlok
                WFM_REDEN_PARKEREN.Value = cmbRedenParkerenBlok
             Else
                WFM_ParkerenJN.Value = "N"
             End If
    End Select
    If Format(WFMDRAPPEL, "yyyymmdd") < "20000000" Then
        WFMDRAPPEL = ""
    Else
        WFMDRAPPEL = Format(WFMDRAPPEL, "dd-mm-yyyy")
    End If
    DateCheck WFMDRAPPEL
End Function

Function vulContactNaw(ByVal iStatus As Integer)
' iStatus geeft processtap aan.
Dim strTemp             As String

'   Hier moet waardes uit WFM komen
    strTemp = Me.WFM_NAAM_KLANT.Value & vbCrLf
    strTemp = strTemp & Me.WFM_KLT_CP_AD1_NM.Value & vbCrLf
    strTemp = strTemp & Me.WFM_STR_HNR_NAW.Value & vbCrLf
    strTemp = strTemp & Me.WFM_PC_WNPL_NAW.Value
    Select Case iStatus
        Case 3
             Me.txtContactNaw3.Text = strTemp
        Case 4
             Me.txtContactNaw4.Text = strTemp
        Case 5
             Me.txtContactNaw5.Text = strTemp
        Case 6
             Me.txtContactNaw6.Text = strTemp
        Case 7
             Me.txtContactNaw7.Text = strTemp
    End Select
End Function

Function initStatus2()
' Functie haalt alle voor processtap 2 de waardes op uit WFM
' Deze worden in het schermvelden geplaatst.
Dim strUser             As String
Dim bRes                As Boolean

'   Alleen frame voor status tonen. De rest uit
    Me.frameStatus2.Left = intLeft
    Me.frameStatus2.Top = intTop
    Me.frameStatus2.Visible = True
    Me.frameStatus3.Visible = False
    Me.frameStatus4_.Visible = False
    Me.frameStatus5.Visible = False
    Me.frameStatus6.Visible = False
    Me.FrameStatus7.Visible = False
    Me.frameStatus8.Visible = False
    Me.FrameNazorg.Visible = False
    Me.frameBetalingsregeling.Visible = False
    Me.frameBlokkade.Visible = False
    Me.frameKlantenService.Top = 130
    Me.frameKlantenService.Left = intLeft
    Me.frameKlantenService.Visible = True
    Call getKlantenService
'   Testen wat WFM voor waarde heeft. Deze waarde bepaald welke radiobutton aan staat.
    If Me.WFM_ParkerenJN.Value = "J" Then
        Call showParkerenFields(True, "2")
        Me.obnParkerenJa.Value = True
        Me.dprRAPPEL2.Value = Me.WFMDRAPPEL.Value
    Else
        Call showParkerenFields(False, "2")
        Me.obnParkerenNee.Value = True
        'JAG. Voor datePickers geldt dat visible true moet zijn om de minDate te kunnen zetten
        Me.dprRAPPEL2.Visible = True
        Me.dprRAPPEL2.Visible = False
    End If
    WFM_BehandelaarDeb.Enabled = False
End Function

Function initStatus3()
'   Functie haalt alle voor processtap 3 de waardes op uit WFM
'   Deze worden in het schermvelden geplaatst.
'   Alleen frame voor status tonen. De rest uit
    Me.frameStatus2.Visible = False
    Me.frameStatus3.Left = intLeft
    Me.frameStatus3.Top = intTop
    Me.frameStatus3.Visible = True
    Me.frameStatus4_.Visible = False
    Me.frameStatus5.Visible = False
    Me.frameStatus6.Visible = False
    Me.FrameStatus7.Visible = False
    Me.frameStatus8.Visible = False
    Me.FrameNazorg.Visible = False
    Me.frameBetalingsregeling.Visible = False
    Me.frameBlokkade.Visible = False
    Me.frameKlantenService.Visible = False
    If Left(WorkstepDebFlow, 5) = "42D33" Or Left(WorkstepDebFlow, 5) = "42D34" Then
        Me.lblParkeren3.Visible = True
        Me.obnParkeren3Ja.Visible = True
        Me.obnParkeren3Nee.Visible = True
        If Me.WFM_ParkerenJN.Value = "J" Then
            Call showParkerenFields(True, "3")
            Me.obnParkeren3Ja.Value = True
            Call zetDate(Me.dprRAPPEL3, Me.WFMDRAPPEL.Value)
            Me.cmbRedenParkeren3.Value = Me.WFM_REDEN_PARKEREN
        Else
            Call showParkerenFields(False, "3")
            'JAG. Voor datePickers geldt dat visible true moet zijn om de minDate te kunnen zetten
            dprRAPPEL3.Visible = True
            Call zetMinDate(Me.dprRAPPEL3, Date)
            dprRAPPEL3.Visible = False
        End If
    Else
        Call showParkerenFields(False, "3")
        Me.lblParkeren3.Visible = False
        Me.obnParkeren3Ja.Visible = False
        Me.obnParkeren3Nee.Visible = False
    End If
    Call vulContactNaw(3)
End Function

Function initStatus4()
'   Functie haalt alle voor processtap 4 de waardes op uit WFM
'   Deze worden in het schermvelden geplaatst.
'   Alleen frame voor status tonen. De rest uit
    Me.frameStatus2.Visible = False
    Me.frameStatus3.Visible = False
    Me.frameStatus4_.Left = intLeft
    Me.frameStatus4_.Top = intTop
    Me.frameStatus4_.Visible = True
    Me.frameStatus5.Visible = False
    Me.frameStatus6.Visible = False
    Me.FrameStatus7.Visible = False
    Me.frameStatus8.Visible = False
    Me.FrameNazorg.Visible = False
    Me.frameBetalingsregeling.Visible = False
    Me.frameBlokkade.Visible = False
    Me.frameKlantenService.Visible = False
    Call vulContactNaw(4)
End Function

Function initStatus5()
'   Functie haalt alle voor processtap 5 de waardes op uit WFM
'   Deze worden in het schermvelden geplaatst.
'   Alleen frame voor status tonen. De rest uit
    Me.frameStatus2.Visible = False
    Me.frameStatus3.Visible = False
    Me.frameStatus4_.Visible = False
    Me.frameStatus5.Left = intLeft
    Me.frameStatus5.Top = intTop
    Me.frameStatus5.Visible = True
    Me.frameStatus6.Visible = False
    Me.FrameStatus7.Visible = False
    Me.frameStatus8.Visible = False
    Me.FrameNazorg.Visible = False
    Me.frameBetalingsregeling.Visible = False
    Me.frameBlokkade.Visible = False
    Me.frameKlantenService.Visible = False
    Call vulContactNaw(5)
End Function

Function initStatus6()
'   Functie haalt alle voor processtap 6 de waardes op uit WFM
'   Deze worden in het schermvelden geplaatst.
'   Alleen frame voor status tonen. De rest uit
    Me.frameStatus2.Visible = False
    Me.frameStatus3.Visible = False
    Me.frameStatus4_.Visible = False
    Me.frameStatus5.Visible = False
    Me.frameStatus6.Left = intLeft
    Me.frameStatus6.Top = intTop
    Me.frameStatus6.Visible = True
    Me.FrameStatus7.Visible = False
    Me.frameStatus8.Visible = False
    Me.FrameNazorg.Visible = False
    Me.frameBetalingsregeling.Visible = False
    Me.frameBlokkade.Visible = False
    Me.frameKlantenService.Visible = False
    Call vulContactNaw(6)
End Function

Function initStatus7()
'   Functie haalt alle voor processtap 7 de waardes op uit WFM
'   Deze worden in het schermvelden geplaatst.
'   Alleen frame voor status tonen. De rest uit
    Me.frameStatus2.Visible = False
    Me.frameStatus3.Visible = False
    Me.frameStatus4_.Visible = False
    Me.frameStatus5.Visible = False
    Me.frameStatus6.Visible = False
    Me.FrameStatus7.Left = intLeft
    Me.FrameStatus7.Top = intTop
    Me.FrameStatus7.Visible = True
    Me.frameStatus8.Visible = False
    Me.FrameNazorg.Visible = False
    Me.frameBetalingsregeling.Visible = False
    Me.frameBlokkade.Visible = False
    Me.frameKlantenService.Visible = False
    Call vulContactNaw(7)
End Function

Function initStatus8()
'   Functie haalt alle voor processtap 8 de waardes op uit WFM
'   Deze worden in het schermvelden geplaatst.
'   Alleen frame voor status tonen. De rest uit
    Me.frameStatus2.Visible = False
    Me.frameStatus3.Visible = False
    Me.frameStatus4_.Visible = False
    Me.frameStatus5.Visible = False
    Me.frameStatus6.Visible = False
    Me.FrameStatus7.Visible = False
    Me.frameStatus8.Left = intLeft
    Me.frameStatus8.Top = intTop
    Me.frameStatus8.Visible = True
    Me.FrameNazorg.Visible = False
    Me.frameBetalingsregeling.Visible = False
    Me.frameBlokkade.Visible = False
    Me.frameKlantenService.Top = 184
    Me.frameKlantenService.Left = intLeft
    Me.frameKlantenService.Visible = True
    Call getKlantenService
End Function

Function initStatusNazorg()
'   Functie haalt alle voor processtap nazorg de waardes op uit WFM
'   Deze worden in het schermvelden geplaatst.
'   Alleen frame voor status tonen. De rest uit
    Me.frameStatus2.Visible = False
    Me.frameStatus3.Visible = False
    Me.frameStatus4_.Visible = False
    Me.frameStatus5.Visible = False
    Me.frameStatus6.Visible = False
    Me.FrameStatus7.Visible = False
    Me.frameStatus8.Visible = False
    Me.FrameNazorg.Left = intLeft
    Me.FrameNazorg.Top = intTop
    Me.FrameNazorg.Visible = True
    Me.frameBetalingsregeling.Visible = False
    Me.frameBlokkade.Visible = False
    Me.frameKlantenService.Visible = False
    TextBox1.MultiLine = True
    TextBox1.Text = TextBox1.Text & Chr$(13) & vbLf & vbTab & "* Deelnemers informeren" & vbLf & vbTab & "* Relatiebeheerder informeren"
End Function

Function initStatusBet()
'   Functie haalt alle voor processtap Betalingsregeling de waardes op uit WFM
'   Deze worden in het schermvelden geplaatst.
'   Alleen frame voor status tonen. De rest uit
    Me.frameStatus2.Visible = False
    Me.frameStatus3.Visible = False
    Me.frameStatus4_.Visible = False
    Me.frameStatus5.Visible = False
    Me.frameStatus6.Visible = False
    Me.FrameStatus7.Visible = False
    Me.frameStatus8.Visible = False
    Me.FrameNazorg.Visible = False
    Me.frameBetalingsregeling.Left = intLeft
    Me.frameBetalingsregeling.Height = 360
    Me.frameBetalingsregeling.Width = 210
    Me.frameBetalingsregeling.Top = intTop
    Me.frameBetalingsregeling.Visible = True
    Me.frameBlokkade.Visible = False
    Me.frameKlantenService.Visible = False
    Call zetMinDate(dprBetal_Start, Date)
    Call zetMinDate(dprBetal_Eind, Date)
    If Me.WFM_Betal_Start <> "" Then Call zetDate(Me.dprBetal_Start, WFM_Betal_Start.Value)
    If Me.WFM_Betal_Eind <> "" Then Call zetDate(Me.dprBetal_Eind, WFM_Betal_Eind.Value)
    If WFM_ParkerenJN.Value = "J" Then
        Call showParkerenFields(True, "BET")
    Else
        Call showParkerenFields(False, "BET")
        dprRappelBet.Visible = True
        Call zetMinDate(dprRappelBet, Date)
        dprRappelBet.Visible = False
    End If
End Function

Function initStatusBlok()
'   Functie haalt alle voor processtap Blokkering de waardes op uit WFM
'   Deze worden in het schermvelden geplaatst.
'   Alleen frame voor status tonen. De rest uit
    Me.frameStatus2.Visible = False
    Me.frameStatus3.Visible = False
    Me.frameStatus4_.Visible = False
    Me.frameStatus5.Visible = False
    Me.frameStatus6.Visible = False
    Me.FrameStatus7.Visible = False
    Me.frameStatus8.Visible = False
    Me.FrameNazorg.Visible = False
    Me.frameBetalingsregeling.Visible = False
    Me.frameBlokkade.Left = intLeft
    Me.frameBlokkade.Height = 270
    Me.frameBlokkade.Width = 210
    Me.frameBlokkade.Top = intTop
    Me.frameBlokkade.Visible = True
    Me.frameKlantenService.Visible = False
'   Afhankelijk van de werkstap/stap in het proces, de juiste vragen tonen.
    If WFMrBlokk_IngeregldJN_ja = False Then
'       Blokkade opgeheven niet tonen in de Inregelen bak.
        WFMrBlokk_OpgehevenJN_ja.Visible = False
        WFMrBlokk_OpgehevenJNnee.Visible = False
        Lbl_Blokk_Opgeheven.Visible = False
'       Parkeren mag pas nadat de zaak ingeregeld is.
        Call showParkerenFields(False, "BLOK")
        dprRappelBlok.Visible = True
        Call zetMinDate(dprRappelBlok, Date)
        dprRappelBlok.Visible = False
        dprRappelBlok.Visible = True
        Call zetMinDate(dprRappelBlok, Date)
        dprRappelBlok.Visible = False
    Else
        If obnParkerenNeeBlok = True Then Call showParkerenFields(False, "BLOK")
    End If
    If WFM_BlokkadeDatum <> "" Then Call zetDate(dprBlokkadeDatum, WFM_BlokkadeDatum.Value)
    Call zetMinDate(dprBlokkadeDatum, Date)
End Function

Private Sub obnParkerenJa_Click()
    Call showParkerenFields(True, "2")
End Sub
Private Sub obnParkerenNee_Click()
    Call showParkerenFields(False, "2")
    WFMDRAPPEL.Value = ""
End Sub

Private Sub obnParkeren3Ja_Click()
    Call showParkerenFields(True, "3")
End Sub
Private Sub obnParkeren3Nee_Click()
    Call showParkerenFields(False, "3")
    WFMDRAPPEL.Value = ""
End Sub

Private Sub obnParkerenJaBet_Click()
    Call showParkerenFields(True, "BET")
End Sub
Private Sub obnParkerenNeeBet_Click()
    Call showParkerenFields(False, "BET")
    WFMDRAPPEL.Value = ""
End Sub

Private Sub obnParkerenJaBlok_Click()
    Call showParkerenFields(True, "BLOK")
End Sub
Private Sub obnParkerenNeeBlok_Click()
    Call showParkerenFields(False, "BLOK")
    WFMDRAPPEL.Value = ""
End Sub

Private Sub obnBetalIngeregeldJa_Click()
    Me.lblParkerenJNBet.Visible = True
    Me.obnParkerenJaBet.Visible = True
    Me.obnParkerenNeeBet.Visible = True
'   Truc om default de click NEE te doen.
    Call showParkerenFields(False, "BET")
End Sub
Private Sub obnBetalIngeregeldNee_Click()
    Me.lblParkerenJNBet.Visible = False
    Me.obnParkerenJaBet.Visible = False
    Me.obnParkerenNeeBet.Visible = False
'   Truc om default de click NEE te doen.
    obnParkerenNeeBet_Click
End Sub

Private Sub UserForm_Initialize()
    blnInit = True
End Sub

Private Sub WFM_DOORZENDEN_NAAR_Change()
Dim strAfdeling_user    As String
Dim vUser               As Variant

'   JAG 20071003 om de initieele waarde van de WFM_DOORZENDEN_NAAR vast te houden is er een
'   boolean flag die registreert of form initieel geladen wordt. blnInit wordt in
'   UserForm_Initialize op true gezet. Daarna wordt blnInit op false gezet.
    If blnInit Then
        strOrgDoorzendenNaar = WFM_DOORZENDEN_NAAR.Value
        blnInit = False
    End If
    strAfdeling = Me.WFM_DOORZENDEN_NAAR.Value  'ophalen waarde scherm
    If Me.WFM_BEH_GROEP = "" Then 'Geen behandelgroep dan afdeling
        WFM_BEHANDELAAR.Clear
        For Each vUser In GetUsersPerAfdeling(strAfdeling)
            WFM_BEHANDELAAR.AddItem vUser
        Next
    Else            'wel behandelgroep dan
        WFM_BEHANDELAAR.Clear
        For Each vUser In GetUsersPerPerBehGroep(WFM_BEH_GROEP.Text, strAfdeling)
            WFM_BEHANDELAAR.AddItem vUser
        Next
    End If
    If strOrgDoorzendenNaar <> WFM_DOORZENDEN_NAAR.Value Then
        WFM_BEH_GROEP.Clear
        WFM_BEH_GROEP.Locked = True
        WFM_BEHANDELAAR.Value = ""
        WFM_BEHANDELAAR.Locked = True
    Else
        WFM_BEHANDELAAR.Locked = False
    End If
End Sub

Private Sub WFMrArchiefJN_ja_Click()
    If Me.obnBetaaldJa.Value = True Then
        MsgBox "Betaald J/N is Ja. Dit is niet mogelijk in combinatie met Archiveren J/N is ja", vbInformation
        Me.WFMrArchiefJNnee.Value = True
    End If
End Sub

Private Sub WFMrBlokk_IngeregldJN_ja_Click()
    Call showParkerenFields(True, "BLOK")
End Sub
Private Sub WFMrBlokk_IngeregldJNNee_Click()
    Call showParkerenFields(False, "BLOK")
End Sub

Private Function getRelatieBeheerderDeb()
Dim vUser As Variant

'   Vullen van WFM_BehandelaarDeb met users met de afdeling = "DEB"
    For Each vUser In GetUsersPerAfdeling("DEB")
        WFM_BehandelaarDeb.AddItem vUser
    Next
End Function

Private Function getKlantenService()
Dim bRes                As Boolean

    strAfdeling = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR")
'   Vullen van de behandelgroep mbv de DOORZENDEN_NAAR afdeling
    bRes = vulBehandelGroep(strAfdeling, WFM_BEH_GROEP)
    fillDDList True, WFM_DOORZENDEN_NAAR, WFMData.Common.getList("WFAfdeling", "AfdCode", "Enabled", "1")
End Function

Private Sub zetMinDate(ByRef Veld As DTPicker, ByVal Waarde As Date)
    On Error GoTo FOUT
    Veld.MinDate = Waarde
    GoTo EINDE

FOUT:
    On Error GoTo EINDE ' als het nu nog misgaat, dan laten we de MinDate maar zitten
    Veld.MinDate = Veld.Value

EINDE:
End Sub

Private Sub zetDate(ByRef Veld As DTPicker, ByVal Waarde As Date)
    On Error GoTo FOUT
    Veld.Value = Waarde
    GoTo EINDE

FOUT:
    On Error GoTo EINDE ' als het nu nog misgaat, dan hebben we een ongeldige Waarde
    Veld.MinDate = Waarde
    Veld.Value = Waarde

EINDE:
End Sub
Attribute VB_Name = "frmDeelnKlant"
Attribute VB_Base = "0{5E59B744-975A-442E-A2C0-8C85E3661A02}{7C41DD03-5783-4B77-B5CD-92BDABAB7C20}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer As WFDWorkitem.WorkitemViewer

Private Sub cmdOK_Click()
Dim ctrl As MSForms.Control
    
    ' update veld als werkitem is gereserveerd, visible is en waarde afwijkt van origineel
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusReserved) = calObjStatusReserved) Then
        For Each ctrl In Me.Controls
            If Left(ctrl.name, 3) = "WFM" And ctrl.Visible Then
                If ctrl.Value <> WIViewer.Fields.Find(Right(ctrl.name, Len(ctrl.name) - 4)).CALFormField.Value Then
                
                    WFMSaveField WIViewer, ctrl, 4
                End If
            End If
        Next
    End If
    
    Unload Me
    
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean
Dim ctrl As MSForms.Control

    If Init Then Exit Sub
    Init = True
    
    For Each ctrl In Me.Controls
        If Left(ctrl.name, 3) = "WFM" Then
            If Not WIViewer.Fields.Find(Right(ctrl.name, Len(ctrl.name) - 4)) Is Nothing Then
                If ((WIViewer.CALClientListItem.Info.Status And calObjStatusReserved) = calObjStatusReserved) Then
                    ctrl.Enabled = True
                End If
                WFMGetField WIViewer, ctrl, 4
            Else
                ctrl.Visible = False
            End If
        End If
    Next

End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
  Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property

Private Sub WFMDGEB_DEELN_Exit(ByVal Cancel As MSForms.ReturnBoolean)

On Error GoTo EH
    
    DateCheck WFMDGEB_DEELN
    WFMDGEB_DEELN.BackColor = TextboxWhite
    
Exit Sub

EH:
    DisplayError "Geb. Deelnemer"

End Sub
Attribute VB_Name = "frmECHBeoordAanvraag"
Attribute VB_Base = "0{30318489-1A40-41F3-999E-419247CBF2D9}{D25967BB-32A4-49F9-AF5F-E744B7E683C0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myPolOver           As CALFormField
Dim mblnNotFirstTime    As Boolean

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myKenMerk, myIdent  As String

    Err.Clear
    On Error GoTo EH
    If Not fncCheckFields Then Exit Sub
    If Not SetCALXFormFields Then Exit Sub
    
     'RFC 133885 - Rq.No 9**********************************
    If AFDELING.Value <> WFM_DOORZENDEN_NAAR Then
        WFM_DOORZENDEN_NAAR = AFDELING.Value
    End If
    '******************************************************
    
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Function fncCheckFields() As Boolean
    Dim strMessage As String

    strMessage = "De volgende fouten zijn opgetreden:" & vbCrLf & vbCrLf & "FIELD niet aangegeven."
    fncCheckFields = False
    
    'Check if the Memo CategoryA field is blank
    If Trim(WFM_Memo_CategoryA.Text) = "" Then
        strMessage = Replace(strMessage, "FIELD", "Memo Category A", 1, , vbTextCompare)
        MsgBox strMessage
        WFM_Memo_CategoryA.SetFocus
        Exit Function
    End If
    'Check if the Memo CategoryB field is blank
    If Trim(WFM_Memo_CategoryB.Text) = "" Then
        strMessage = Replace(strMessage, "FIELD", "Memo Category B", 1, , vbTextCompare)
        MsgBox strMessage
        WFM_Memo_CategoryB.SetFocus
        Exit Function
    End If
    'Check if the field is blank
    If Trim(WFMDDAT_ECHT.Text) = "" Then
        strMessage = Replace(strMessage, "FIELD", "Datum echtscheiding", 1, , vbTextCompare)
        MsgBox strMessage
        WFMDDAT_ECHT.SetFocus
        Exit Function
    End If
    'Check if the field is blank
    If Trim(WFMDDAT_DOC.Text) = "" Then
        strMessage = Replace(strMessage, "FIELD", "Datum Aanvraag")
        MsgBox strMessage
        WFMDDAT_DOC.SetFocus
        Exit Function
    End If
    'Check if the field is blank
    If Trim(WFM_AFZ_AANVRAAG.Text) = "" Then
        strMessage = Replace(strMessage, "FIELD", "Aanvraag door")
        MsgBox strMessage
        WFM_AFZ_AANVRAAG.SetFocus
        Exit Function
    End If
    If Not WFMrJN_STUKKEN_COMPLnee.Value Then
        WFMDRAPPEL.Text = ""
        fncCheckFields = True
        Exit Function
    End If
    If WFMDRAPPEL = "" Then
        MsgBox "Rappeldatumm niet ingevuld."
        WFMDRAPPEL.SetFocus
        Exit Function
    End If
    DateCheck WFMDRAPPEL
    fncCheckFields = True
End Function

Private Sub cmdGegevens_Click()
'[PAC]    Set frmECHGegevens.WorkitemViewer = Me.WorkitemViewer
'[PAC]    frmECHGegevens.Show vbModal
'[PAC]    checkGegegevens frmECHGegevens
End Sub

Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        myPolOver.Value = Right$(Space(10) & Trim(tbPolOver1), 10) & ";" & _
                          Right$(Space(10) & Trim(tbPolOver2), 10) & ";" & _
                          Right$(Space(10) + Trim(tbPolOver3), 10) & ";"
    End If
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

Private Sub UserForm_Activate()
Static Init     As Boolean

Dim bRes As Boolean

Dim strUser As String
Dim strAfdeling As String
Dim strUserTeam As String


    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    lbTemplates.AddItem "VER Afwijzen verzoek"
    lbTemplates.AddItem "VER Brief afstandsverklaring"
    lbTemplates.AddItem "VER Ontbrekende gegevens + machtiging"
    lbTemplates.AddItem "VER Ontvangstbevestiging, kosten, betalingsmachtiging"
    WFM_AFZ_AANVRAAG.AddItem "Advocaat"             '[PAC]
    WFM_AFZ_AANVRAAG.AddItem "Afd.Waardeoverdracht" '[PAC]
    WFM_AFZ_AANVRAAG.AddItem "Ex-partner"
    WFM_AFZ_AANVRAAG.AddItem "GBA"                  '[PAC]
    WFM_AFZ_AANVRAAG.AddItem "Tussenpersoon"        '[PAC]
    WFM_AFZ_AANVRAAG.AddItem "Verzekerde"
    WFM_AFZ_AANVRAAG.AddItem "Werkgever"            '[PAC]
''    WFM_AANVRAAG_BETREFT.AddItem "Akte van Afstand"
''    WFM_AANVRAAG_BETREFT.AddItem "Conversie"
''    WFM_AANVRAAG_BETREFT.AddItem "Herroeping"
''    WFM_AANVRAAG_BETREFT.AddItem "Informatie"
''    WFM_AANVRAAG_BETREFT.AddItem "Opgave"
''    WFM_AANVRAAG_BETREFT.AddItem "Opgave BNP"
''    WFM_AANVRAAG_BETREFT.AddItem "Verevening"
''    If WFM_DOCTYPE = "ECH Herroeping" Then
''        WFM_AANVRAAG_BETREFT = "Herroeping"
''    End If
    WFMDDAT_AANVRAAG = WFMDDAT_DOC
    fraOpgave.Top = fraAfwijzen.Top
    fraOpgave.Left = fraAfwijzen.Left
    fraAfhandelen.Top = fraAfwijzen.Top
    fraAfhandelen.Left = fraAfwijzen.Left
    fraUniek.Top = fraConversie.Top
    fraUniek.Left = fraConversie.Left
    fraBoon.Top = fraOfficieel.Top
    fraBoon.Left = fraOfficieel.Left
    fraOpgave2.Top = fraConversie.Top + 20
    fraOpgave2.Left = fraConversie.Left
    Me.Width = 206
    GetCALXFormFields
    CheckDatEcht
    
    PopulateMemoFields
    
    mblnNotFirstTime = True
''    If WFM_AANVRAAG_BETREFT <> "" Then WFM_AANVRAAG_BETREFT_Change
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    
    'RFC 133885 - Rq.No 9******************************
    strUser = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "BEHANDELAAR") 'WFM_BEHANDELAAR.Value
    strAfdeling = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR")
    strUserTeam = CALGetUserVar("WFUBehGroep", CALClient.username)
    'Fill the Afdeling dropdown list
    fillDDList True, AFDELING, WFMData.Common.getList("WFAfdeling", "AfdCode", "Enabled", "1")
    CheckFieldValue AFDELING, strAfdeling
    AFDELING.Value = strAfdeling
    
    'Fill the Team drop down list
    bRes = vulBehandelGroep(strAfdeling, WFM_BEH_GROEP)
    
    'Disable the Team field if the Afdeling is KSP/FVP/FEP/PAC
    If strAfdeling = "KSP" Or strAfdeling = "FVP" _
        Or strAfdeling = "FEP" Or strAfdeling = "PAC" Then
            WFM_BEH_GROEP.Visible = False
            WFM_BEH_GROEP.Value = ""
            lblTeam.Visible = False
    Else
        CheckFieldValue WFM_BEH_GROEP, strUserTeam
        WFM_BEH_GROEP.Value = strUserTeam
        WFM_BEH_GROEP.Visible = True
        lblTeam.Visible = True
    End If
    
    WFM_BEHANDELAAR.ColumnCount = 2
    WFM_BEHANDELAAR.BoundColumn = 1
    WFM_BEHANDELAAR.TextColumn = -1
    WFM_BEHANDELAAR.ColumnWidths = "50;0"
    CheckFieldValue WFM_BEHANDELAAR, strUser
    If strUser <> "" Then WFM_BEHANDELAAR.Text = strUser
    '****************************************************
    
    Exit Sub

EH:
    DisplayError "Userform activate"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
Dim myFrm           As Object
Dim strAppName      As String
Dim strSection      As String

    On Error GoTo EH
'   Gegevens exporteren
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    strAppName = "ORIGIN"
    strSection = "Partner Gegevens"
    On Error Resume Next
    DeleteSetting strAppName, strSection
    On Error GoTo EH
'   Partner selecteren, verandering
    If lbTemplates.Value = "VER Afwijzen verzoek" Or _
       lbTemplates.Value = "VER Bevestiging niet afsplitsen" Or _
       lbTemplates.Value = "VER Bevestiging ontvangst form" Or _
       lbTemplates.Value = "VER Brief + afstandverklaring" Or _
       lbTemplates.Value = "VER Conversie afwijzen" Or _
       lbTemplates.Value = "VER Conversie akkoord" Then
        Set frmECHPartners.WorkitemViewer = WIViewer
        frmECHPartners.Show vbModal
        If frmECHPartners.annuleren Then
            Exit Sub
        End If
    End If
    Call StartBrief(WorkitemViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

''Private Sub WFM_AANVRAAG_BETREFT_Change()
''Dim myFrm       As Object
''
''    If mblnNotFirstTime Then
''        fraUniek.Visible = False
''        fraAfwijzen.Visible = False
''        fraOpgave.Visible = False
''        fraOpgave2.Visible = False
''        fraOfficieel.Visible = False
''        fraConversie.Visible = False
''        fraAfhandelen.Visible = False
'''[PAC]        fraCaesar.Visible = True
''        lblOndertekend.Visible = True
''        WFMrJN_HANDTEK_AANVR_ja.Visible = True
''        WFMrJN_HANDTEK_AANVRnee.Visible = True
''        WFMrJN_HANDTEK_AANVRonb.Visible = True
''        Select Case WFM_AANVRAAG_BETREFT
''            Case "Opgave"
'''[PAC]                 fraOpgave.Visible = True
''                 If optOverig.value Then
'''[PAC]                    fraOpgave2.Visible = True
''                 End If
''                 cmdGegevens.Visible = False
''            Case "Verevening"
'''[PAC]                 fraAfwijzen.Visible = True
'''[PAC]                 Set frmECHGegevens.WorkitemViewer = Me.WorkitemViewer
'''[PAC]                 frmECHGegevens.Show vbModal
'''[PAC]                 checkGegegevens frmECHGegevens
'''[PAC]                 cmdGegevens.Visible = True
''            Case "Conversie"
'''[PAC]                 fraAfwijzen.Visible = True
''                 lblOndertekend.Visible = False
''                 WFMrJN_HANDTEK_AANVR_ja.Visible = False
''                 WFMrJN_HANDTEK_AANVRnee.Visible = False
''                 WFMrJN_HANDTEK_AANVRonb.Visible = False
'''[PAC]                 Set frmECHGegevens.WorkitemViewer = Me.WorkitemViewer
'''[PAC]                 frmECHGegevens.Show vbModal
'''[PAC]                 checkGegegevens frmECHGegevens
'''[PAC]                 If frmECHGegevens.tbAANVRAAG_DMV = "Formulier" Then
'''[PAC]                    fraConversie.Visible = True
'''[PAC]                    fraOfficieel.Visible = True
'''[PAC]                 End If
'''[PAC]                 cmdGegevens.Visible = True
''            Case "Herroeping"
'''[PAC]                 fraAfwijzen.Visible = True
'''[PAC]                 Set frmECHGegevens.WorkitemViewer = Me.WorkitemViewer
'''[PAC]                 frmECHGegevens.Show vbModal
'''[PAC]                 checkGegegevens frmECHGegevens
'''[PAC]                 cmdGegevens.Visible = True
''            Case "Informatie"
'''[PAC]                 fraAfhandelen.Visible = True
''                 fraCaesar.Visible = False
''            Case "Opgave BNP"
''                 fraCaesar.Visible = False
''            Case "Akte van Afstand"
'''[PAC]                 fraAfwijzen.Visible = True
'''[PAC]                 Label61.Visible = False
''                 WFMrJN_AFWIJZEN_ja.Visible = False
''                 WFMrJN_AFWIJZENnee.Visible = False
''                 WFMrJN_AFWIJZENonb.Visible = False
''                 lblBNP.Visible = True
''                 WFMrJN_BNP_BEREKENEN_ja.Visible = True
''                 WFMrJN_BNP_BEREKENENnee.Visible = True
''                 WFMrJN_BNP_BEREKENENonb.Visible = True
'''[PAC]                 WFMDRAPPEL = Format(DateAdd("m", 1, Format(Now(), " yyyy-mm-dd")), "dd-mm-yyyy")
''                 Exit Sub
''        End Select
''        ShowBNP
''    End If
''End Sub

'[PAC]Private Sub checkGegegevens(myFrm As frmECHGegevens)
'    If myFrm.tbAANVRAAG_DMV = "Unieke brief" Then
'        fraUniek.Visible = True
'    End If
'    If myFrm.tbAANVRAAG_DMV = "Formulier" Then
'        fraOfficieel.Visible = True
'    End If
''   Afwijzen als niet aan alle voorwaarden voldaan is
'    If myFrm.rbJN_OP_TIJDnee.value Or myFrm.rbJN_POLIS_GEEN_WRD_ja.value Or _
'       myFrm.rbJN_KLEIN_PENS_ja.value Or myFrm.rbJN_UWO_ja Or _
'       myFrm.rbJN_DEELN_KL2_ja.value Then
'        WFMrJN_AFWIJZEN_ja.value = True
'    End If
''   Doorverwijzen als aan alle voorwaarden voldaan is
'    If myFrm.rbJN_OP_TIJD_ja.value And myFrm.rbJN_POLIS_GEEN_WRDnee.value And _
'       myFrm.rbJN_KLEIN_PENSnee.value And myFrm.rbJN_UWOnee And _
'       myFrm.rbJN_DEELN_KL2nee.value Then
'        If myFrm.tbAANVRAAG_DMV = "Unieke brief" Then
'            WFMrJN_DOORVERWIJZEN_ja.value = True
'        Else
'            WFMrJN_DOORVERWIJZENonb.value = True
'        End If
'        WFMrJN_AFWIJZENnee.value = True
'    End If
'    WFMGetFieldYNO Me, "JN_POLIS_GEEN_WRD"
'    WFMGetFieldYNO Me, "JN_KLEIN_PENS"
'    WFMGetFieldYNO Me, "JN_UWO"
'    WFMGetFieldYNO Me, "JN_DEELN_KL2"
'    WFMGetFieldYNO Me, "JN_INGEGAAN_PENS"
'[PAC]End Sub

Private Sub WFM_AFZ_AANVRAAG_Change()
    lbAanvrOndertekend.Visible = False
    WFMrJN_ONDERTEKEND_ja.Visible = False
    WFMrJN_ONDERTEKENDnee.Visible = False
    WFMrJN_ONDERTEKENDonb.Visible = False
    lbHandtekVerz.Visible = False
    WFMrJN_HANDTEK_VERZ_ja.Visible = False
    WFMrJN_HANDTEK_VERZnee.Visible = False
    WFMrJN_HANDTEK_VERZonb.Visible = False
    If WFM_AFZ_AANVRAAG = "Verzekerde" Then
        lbAanvrOndertekend.Visible = True
        WFMrJN_ONDERTEKEND_ja.Visible = True
        WFMrJN_ONDERTEKENDnee.Visible = True
        WFMrJN_ONDERTEKENDonb.Visible = True
    End If
    If WFM_AFZ_AANVRAAG = "Ex-partner" Then
        lbHandtekVerz.Visible = True
        WFMrJN_HANDTEK_VERZ_ja.Visible = True
        WFMrJN_HANDTEK_VERZnee.Visible = True
        WFMrJN_HANDTEK_VERZonb.Visible = True
    End If
End Sub

Private Sub WFMDDAT_DOC_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_DOC
    WFMDDAT_DOC.BackColor = TextboxWhite
    WFMDDAT_AANVRAAG = WFMDDAT_DOC
    Exit Sub

EH:
    DisplayError "Datum aanvraag"
End Sub

Private Sub WFMDDAT_ECHT_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    CheckDatEcht
End Sub

Private Sub CheckDatEcht()
Dim dAfwijzen       As Date
Dim dBoon           As Date
Dim dAanvraag       As Date

    On Error GoTo EH
    If WFMDDAT_ECHT <> "" Then
        dAfwijzen = CDate("27-11-1981")
        dBoon = CDate("01-05-1995")
        DateCheck WFMDDAT_ECHT
        dAanvraag = CDate(WFMDDAT_ECHT)
        HideAllFrames
        If dAanvraag < dAfwijzen Then
'       V|fffd||fffd|r 27-11-1981 -> afwijzen
            EnableAfwijzen
        Else
            If dAanvraag > dBoon Then
'               N|fffd| 01-05-1995 -> normale aanvraag
                EnableOverig
            Else
'               Tussenin -> Boon van Loon
                EnableBoon
            End If
        End If
        WFMDDAT_ECHT.BackColor = TextboxWhite
    End If
    Exit Sub

EH:
    DisplayError "Datum echtscheiding"
End Sub

'Populate the Memo fields
Private Sub PopulateMemoFields()
    WFM_Memo_CategoryA.AddItem "VER"
    WFM_Memo_CategoryA.AddItem "BPP"
    WFM_Memo_CategoryA.AddItem "OVERIG"
    
    WFM_Memo_CategoryB.AddItem "SD"
    WFM_Memo_CategoryB.AddItem "KAP"
    WFM_Memo_CategoryB.AddItem "UL"
    WFM_Memo_CategoryB.AddItem "UVL"
    WFM_Memo_CategoryB.AddItem "COM"
    
    WFM_Memo_CategoryC.AddItem "DVL"
    WFM_Memo_CategoryC.AddItem "UWO"
    WFM_Memo_CategoryC.AddItem "AFSTAND"
    WFM_Memo_CategoryC.AddItem "AFSTAND VER"
    WFM_Memo_CategoryC.AddItem "AFSTAND BPP"
    WFM_Memo_CategoryC.AddItem "OPGAVE"
End Sub

Private Sub EnableAfwijzen()
    optAfwijzen.Value = True
'[PAC]    fraAfwijzen.Visible = True
''    WFM_AANVRAAG_BETREFT.Enabled = False
    WFM_WERKSRT = "OUD"
End Sub

Private Sub EnableBoon()
    optBoon.Value = True
'[PAC]    fraBoon.Visible = True
''    WFM_AANVRAAG_BETREFT = "Opgave"
''    WFM_AANVRAAG_BETREFT.Enabled = False
''    WFM_AANVRAAG_BETREFT_Change
    WFM_AFZ_AANVRAAG_Change
    WFMrJN_BNP_BEREKENEN_ja = False
    WFMrJN_BNP_BEREKENENnee = True
    WFMrJN_BNP_BEREKENENonb = False
    WFM_WERKSRT = "BVL"
End Sub

Private Sub EnableOverig()
    optOverig.Value = True
''    WFM_AANVRAAG_BETREFT.Enabled = True
''    WFM_AANVRAAG_BETREFT_Change
    WFM_WERKSRT = "NWE"
End Sub
Private Sub HideAllFrames()
    fraAfwijzen.Visible = False
    fraBoon.Visible = False
    fraConversie.Visible = False
    fraOfficieel.Visible = False
    fraOpgave.Visible = False
    fraOpgave2.Visible = False
    fraUniek.Visible = False
End Sub

Private Sub ShowBNP()
    If WFMrJN_AFWIJZEN_ja.Value Or WFMrJN_DOORVERWIJZEN_ja.Value Then
        lblBNP.Visible = True
        WFMrJN_BNP_BEREKENEN_ja.Visible = True
        WFMrJN_BNP_BEREKENENnee.Visible = True
        WFMrJN_BNP_BEREKENENonb.Visible = True
    Else
        lblBNP.Visible = False
        WFMrJN_BNP_BEREKENEN_ja.Visible = False
        WFMrJN_BNP_BEREKENENnee.Visible = False
        WFMrJN_BNP_BEREKENENonb.Visible = False
    End If
End Sub

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappeldatum"
End Sub

Private Sub WFMrJN_AFWIJZEN_ja_Click()
    ShowBNP
End Sub
Private Sub WFMrJN_AFWIJZENnee_Click()
    ShowBNP
End Sub
Private Sub WFMrJN_AFWIJZENonb_Click()
    ShowBNP
End Sub

Private Sub WFMrJN_STUKKEN_COMPL_ja_Click()
    lblRappelDatum.Visible = False
    WFMDRAPPEL.Visible = False
End Sub
Private Sub WFMrJN_STUKKEN_COMPLnee_Click()
    lblRappelDatum.Visible = True
    WFMDRAPPEL.BackColor = TextboxWhite
    WFMDRAPPEL.Visible = True
End Sub
Private Sub WFMrJN_STUKKEN_COMPLonb_Click()
    lblRappelDatum.Visible = False
    WFMDRAPPEL.Visible = False
End Sub

'RFC 133885 - Rq.No 9
Private Sub AFDELING_Change()
Dim strAfdeling         As String
Dim strAfdeling_user    As String
Dim vUser               As Variant

    strAfdeling = AFDELING.SelText
    If WFM_BEH_GROEP = "" Then      'Geen behandelgroep dan afdeling
        WFM_BEHANDELAAR.Clear
        For Each vUser In GetUsersPerAfdeling(strAfdeling)
            WFM_BEHANDELAAR.AddItem vUser
        Next
    Else            'wel behandelgroep dan
        WFM_BEHANDELAAR.Clear
        For Each vUser In GetUsersPerPerBehGroep(WFM_BEH_GROEP.Text, strAfdeling)
            WFM_BEHANDELAAR.AddItem vUser
        Next
    End If
    strAfdeling_user = CALGetUserVar("Afdeling", CALClient.username)
    '   Eerst stond hier WFM_doorzenden naar
    If strAfdeling <> strAfdeling_user Then
        WFM_BEH_GROEP.Value = ""
        WFM_BEH_GROEP.Locked = True
        WFM_BEHANDELAAR.Value = ""
        WFM_BEHANDELAAR.Locked = True
        'WFM_STUUR_VAR.value = "1"
    Else
        WFM_BEHANDELAAR.Locked = False
        WFM_BEH_GROEP.Locked = False
    End If
    'If optStatParkeren Then Call optStatParkeren_Click
End Sub

'RFC 133885 - Rq.No 9
Private Sub WFM_BEH_GROEP_Change()
''Dim strAfdeling As String
''Dim strAfdeling_user As String
''Dim vntUser As Variant
''
''    strAfdeling_user = CALGetUserVar("Afdeling", CALClient.username)
''    strAfdeling = AFDELING.SelText
''    WFM_BEHANDELAAR.Clear
''
''    If WFM_BEH_GROEP.Visible = True Then
''        For Each vntUser In GetUsersPerPerBehGroep(WFM_BEH_GROEP.Text, strAfdeling)
''            WFM_BEHANDELAAR.AddItem CStr(vntUser)
''        Next
''    End If

''    If strAfdeling <> strAfdeling_user Then
''        WFM_BEH_GROEP.value = ""
''        WFM_BEH_GROEP.Locked = True
''        WFM_BEHANDELAAR.value = ""
''        WFM_BEHANDELAAR.Locked = True
''        'WFM_STUUR_VAR.value = "1"
''    Else
''        WFM_BEHANDELAAR.Locked = False
''        WFM_BEH_GROEP.Locked = False
''    End If

Dim strAfdeling As String
Dim vntUser As Variant

    strAfdeling = CALGetUserVar("Afdeling", CALClient.username)
    WFM_BEHANDELAAR.Clear

    If WFM_BEH_GROEP.Visible = True Then
        For Each vntUser In GetUsersPerPerBehGroep(WFM_BEH_GROEP.Text, strAfdeling)
            WFM_BEHANDELAAR.AddItem CStr(vntUser)
        Next
    End If
End Sub

'RFC 133885 - Rq.No 9
Public Sub KopieerHUPO()
''    If WFM_BEHANDELAAR.value = "" Then
''            If Len(AFDELING) > 0 And InStr(WFM_IND_HUPO.Text, AFDELING) > 0 Then
''                    WFM_BEHANDELAAR.Locked = False      'Deze wordt locked onde afdeling/change indien user/afd<>form/afd
''                    WFM_BEH_GROEP.Text = get_BEHGRP(WFM_IND_HUPO.Text)
''                    WFM_BEHANDELAAR.AddItem WFM_IND_HUPO
''                    WFM_BEHANDELAAR.value = WFM_IND_HUPO.value
''            End If
''    End If
End Sub

'RFC 133885 Rq.No 9
'Check whether the value exists in the drop down list, if not adds the value to the list.
Private Sub CheckFieldValue(ddList As ComboBox, strValue As String)
    Dim intItem As Integer
    Dim blnValueExist As Boolean
    
    blnValueExist = False
    
    If strValue = "" Then Exit Sub
    
    For intItem = 0 To ddList.ListCount - 1
        If strValue = ddList.list(intItem) Then
            blnValueExist = True
        End If
    Next intItem
    
    If blnValueExist = False Then
        ddList.AddItem strValue
    End If
End Sub
Attribute VB_Name = "frmECHBeoordDoc"
Attribute VB_Base = "0{D6DEE4CE-7BFE-412E-925E-47502DC4D19B}{D2D3EA6A-1CC9-4BEE-9809-E3BA1E3E3BCB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim myForm              As Object
Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String

Private Sub cmdCopy_Click()
Static KopieNr          As Integer
Dim KopieItem           As CALClientListItem

    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    KopieNr = KopieNr + 1
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call CopySendDocument(WIViewer.CALClientListItem, KopieNr)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    DisplayError "Kopie"
    MousePointer = fmMousePointerDefault
End Sub

Private Sub cmdExtraScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    If YetAnotherExtralink(WIViewer, WFM_NR_POLIS.Text) Then
        Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
        WFM_BEH_GROEP.Text = get_BEHGRP(WFM_IND_HUPO.Text)
        'RFC 133885 - Rq.No 1
        KopieerHUPO
    End If
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Screenscraping niet gelukt!"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myKenMerk, myIdent      As String

    Err.Clear
    On Error GoTo EH

'[PAC] - TD162544  Code added to check CASE360 DocType
    WFM_JN_NAAR_CASE360.Text = ""
    If JN_NAAR_CASE360.Value <> "" Then
        If cbCase360DocType.Value = "" Then
            MsgBox "CASE360 Document Type niet ingevuld."
            Exit Sub
        End If
        If WFM_NR_POLIS.Text = "" And _
           WFM_NR_AEGAR.Text = "" And _
           WFM_NR_KLANT.Text = "" Then
            MsgBox "Geen van verplichte velden (DLNMR, Aegar, Klant) ingevuld."
            Exit Sub
        End If
        If WFM_NR_POLIS.Text <> "" And _
           Len(WFM_NR_POLIS.Text) <> 10 Then
            MsgBox "DLNMR niet volledig ingevuld (10 pos.)."
            Exit Sub
        End If
        If WFM_NR_AEGAR.Text <> "" And _
           Len(WFM_NR_AEGAR.Text) <> 9 Then
            MsgBox "Aegarnummer niet volledig ingevuld (9 pos.)."
            Exit Sub
        End If
        If WFM_NR_KLANT.Text <> "" And _
           Len(WFM_NR_KLANT.Text) <> 6 Then
            MsgBox "Klantnummer niet volledig ingevuld (6 pos.)."
            Exit Sub
        End If

        WFM_JN_NAAR_CASE360.Text = "90S"
        WFM_IND_TRIGGER.Text = "BOP"            'Forceer de zaak in 90A01 te blijven !!!
        WFM_DOCTYPE.Clear
        WFM_DOCTYPE.AddItem cbCase360DocType.Value
        WFM_DOCTYPE.ListIndex = 0
    End If
'[PAC] - TD162544  End Code added to check CASE360 DocType

    Call CheckFields
    myIdent = WFM_NR_POLIS + WFM_IND_TRIGGER
    If WFM_ZAAK_IDENT_NR <> myIdent Then
        WFM_ZAAK_IDENT_NR = myIdent
    End If
    If WFM_DOCTYPE.Value = "INF Informatieverzoek" Then
        Err.Raise 12345, , "Verander het Doctype."
    End If
    If WFM_DOCTYPE.Value = "ECH Nieuwe aanvraag" Then
        WFM_JN_NAAR_GBA = "J"
    End If
    If WFM_DOCTYPE.Value = "DNL Algemeen" Then
        WFM_JN_NAAR_GBA = "N"
    End If

    'RFC 133885 - Rq.No 1**********************************
    If AFDELING.Value <> WFM_DOORZENDEN_NAAR Then
        WFM_DOORZENDEN_NAAR = AFDELING.Value
    End If
    '******************************************************

    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub CheckFields()
    PolisNummerCheck WFM_NR_POLIS
    NumberCheck WFM_AANTAL_ZAKEN
    NumberCheck WFM_NR_AEGAR
    DateCheck WFMDGEB_DEELN
    If WFM_IND_TRIGGER.Value = "" Then
'       Voor het geval dat de afterupdate van doctype niet is uitgevoerd.
        WFM_IND_TRIGGER.Value = Left(WFM_DOCTYPE, 3)
    End If
End Sub

Public Sub EnDisAbleToevoegen(ByRef WFM_DOCTYPE As Object, ByRef cmdToevoegen As Object)
    On Error Resume Next
    If IsNull(WFM_DOCTYPE.list(WFM_DOCTYPE.ListIndex, 1)) Then
        If Err Then Err.Clear
        cmdToevoegen.Enabled = False
        Exit Sub
    End If
    If WFM_DOCTYPE.list(WFM_DOCTYPE.ListIndex, 1) = csDocOverig Or WFM_DOCTYPE.list(WFM_DOCTYPE.ListIndex, 1) = csDocRendezvous Then
        cmdToevoegen.Enabled = True
        WFM_WERKSRT = "TOE"
    Else
        cmdToevoegen.Enabled = False
    End If
End Sub

Private Sub cmdToevoegen_Click()
Dim mobjQueryResults    As CALQueryResults
Dim myQueryFrm          As Object

    On Error GoTo EH
    If WFM_NR_POLIS = "" Then
        WFM_NR_POLIS.BackColor = TextboxRed
        Err.Raise 12345, , "Deelnemer nummer is niet ingevuld."
    End If
    Call CheckFields
    If Not WorkflowSave(WIViewer) Then Exit Sub
'   Zoeken folder met zelfde deelnemer nummer.
'   na keuze van folder wordt document hierin geimporteerd.
    If Not Me.QueryFrm Is Nothing Then
       Me.QueryFrm.Show 0
       Exit Sub
    End If
    Set Me.QueryFrm = New frmZoekImport
    Set myQueryFrm = Me.QueryFrm
    Set myQueryFrm.WorkitemViewer = Me.WorkitemViewer
    Set myQueryFrm.ParentForm = Me
    myQueryFrm.Show 0
    Exit Sub

EH:
    If Err.Number = 12349 Then
'       Doctype niet ingevuld. Dat mag dus
        Resume Next                 'Komt niet meer terug in checkfields
        WFM_DOCTYPE.BackColor = TextboxWhite
    End If
    DisplayError "Toevoegen"
End Sub

Private Sub cmdScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
    WFM_BEH_GROEP.Text = get_BEHGRP(WFM_IND_HUPO.Text)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Open eerst het juiste CAESAR scherm (U1 OHUP of U3 INWG)."    '[PAC] - TD162544 Typo
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean

Dim bRes                As Boolean

Dim strAfdeling         As String
Dim strUser             As String
Dim strUserTeam         As String
Dim sSavDocType         As String

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    WFM_DOCTYPE.ColumnCount = 2
    WFM_DOCTYPE.BoundColumn = 1
    WFM_DOCTYPE.TextColumn = -1
    WFM_DOCTYPE.ColumnWidths = ";0"
    DocTypeAdd "", csDocOverig
    DocTypeAdd "ECH Nieuwe aanvraag", csDocNieuw
    DocTypeAdd "ECH Herroeping", csDocNieuw
''    DocTypeAdd "ECH Nieuwe verzekering", csDocNieuw
    DocTypeAdd "ECH Overige Post", csDocOverig
''    DocTypeAdd "DLN Algemeen", csDocNieuw
    DocTypeAdd "INF Informatieverzoek", csDocOverig
    If WFM_DOCTYPE = "" Then WFM_DOCTYPE.ListIndex = 0
    Call EnDisAbleToevoegen(WFM_DOCTYPE, cmdToevoegen)

    'RFC 133885 - Rq.No 1******************************
    strUser = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "BEHANDELAAR") 'WFM_BEHANDELAAR.Value
    strAfdeling = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR")
    strUserTeam = CALGetUserVar("WFUBehGroep", CALClient.username)
    'Fill the Afdeling dropdown list
    fillDDList True, AFDELING, WFMData.Common.getList("WFAfdeling", "AfdCode", "Enabled", "1")
    CheckFieldValue AFDELING, strAfdeling
    AFDELING.Value = strAfdeling

    'Fill the Team drop down list
    bRes = vulBehandelGroep(strAfdeling, WFM_BEH_GROEP)

    'Disable the Team field if the Afdeling is KSP/FVP/FEP/PAC
    If strAfdeling = "KSP" Or strAfdeling = "FVP" _
        Or strAfdeling = "FEP" Or strAfdeling = "PAC" Then
            WFM_BEH_GROEP.Visible = False
            WFM_BEH_GROEP.Value = ""
            lblTeam.Visible = False
    Else
        CheckFieldValue WFM_BEH_GROEP, strUserTeam
        WFM_BEH_GROEP.Value = strUserTeam
        WFM_BEH_GROEP.Visible = True
        lblTeam.Visible = True
    End If

    WFM_BEHANDELAAR.ColumnCount = 2
    WFM_BEHANDELAAR.BoundColumn = 1
    WFM_BEHANDELAAR.TextColumn = -1
    WFM_BEHANDELAAR.ColumnWidths = "50;0"
    CheckFieldValue WFM_BEHANDELAAR, strUser
    If strUser <> "" Then WFM_BEHANDELAAR.Text = strUser
    '****************************************************

'[PAC] - TD162544  Initialize JN_NAAR_CASE360
    JN_NAAR_CASE360.AddItem ""
    JN_NAAR_CASE360.AddItem "ECH"

    sSavDocType = WFM_DOCTYPE.Text
    If WFM_JN_NAAR_CASE360.Text = "90S" Then
        JN_NAAR_CASE360.Value = "ECH"
        cbCase360DocType.Value = sSavDocType
    Else
        Call JN_NAAR_CASE360_Change
    End If
'[PAC] - TD162544  End Initialize JN_NAAR_CASE360
    Exit Sub

EH:
    DisplayError "Userform activate"
End Sub

Private Sub DocTypeAdd(DocType As String, Kenmerk As String)
Static i                As Integer

    If i = Empty Then i = 0
    WFM_DOCTYPE.AddItem
    WFM_DOCTYPE.list(i, 0) = DocType
    WFM_DOCTYPE.list(i, 1) = Kenmerk
    i = i + 1
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Set QueryFrm(objForm)
    Set myForm = objForm
End Property
Public Property Get QueryFrm() As Object
    Set QueryFrm = myForm
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Private Sub UserForm_Terminate()
    If Not Me.QueryFrm Is Nothing Then
        Unload Me.QueryFrm
    End If
End Sub

Private Sub WFM_AANTAL_ZAKEN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    NumberCheck WFM_AANTAL_ZAKEN
    WFM_AANTAL_ZAKEN.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Aantal zaken"
End Sub

'[PAC] - TD162544  Subroutine Added
Private Sub JN_NAAR_CASE360_Change()
    cbCase360DocType.Clear
    If JN_NAAR_CASE360.Value = "" Then
        cbCase360DocType.Enabled = False
        WFM_DOCTYPE.Enabled = True
        cmdToevoegen.Enabled = True
        cmdCopy.Enabled = True
    Else
        cbCase360DocType.Enabled = True
        Call FillCase360DocTypes(JN_NAAR_CASE360.Value, cbCase360DocType)
        WFM_DOCTYPE.ListIndex = 0
        WFM_DOCTYPE.Enabled = False
        cmdToevoegen.Enabled = False
        cmdCopy.Enabled = False
    End If
End Sub
'[PAC] - TD162544  End Subroutine Added

Private Sub WFM_DOCTYPE_Change()
    On Error GoTo EH
    If WFM_DOCTYPE = "" Then
        WFM_IND_TRIGGER = "BOP"
    Else
        WFM_IND_TRIGGER = Left(WFM_DOCTYPE, 3)
    End If
    WFM_DOCTYPE.BackColor = TextboxWhite
    Call EnDisAbleToevoegen(WFM_DOCTYPE, cmdToevoegen)
    Exit Sub

EH:
    DisplayError "Documenttype"
End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub

Private Sub WFM_NR_AEGAR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Nr. Aegar"
End Sub

Private Sub WFM_NR_POLIS_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WFM_NR_POLIS.BackColor = TextboxWhite
    PolisNummerCheck WFM_NR_POLIS
    cmdOpslaan.Enabled = True
    Exit Sub

EH:
    DisplayError "Polisnummer"
    cmdOpslaan.Enabled = False
End Sub

Private Sub WFM_ZK_VOLGNR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_ZK_VOLGNR.BackColor = TextboxWhite
End Sub

Private Sub WFMDGEB_DEELN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDGEB_DEELN
    WFMDGEB_DEELN.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Geb. Deelnemer"
End Sub

'RFC 133885 - Rq.No 1
Private Sub AFDELING_Change()
Dim strAfdeling         As String
Dim strAfdeling_user    As String
Dim vUser               As Variant

    strAfdeling = AFDELING.SelText
    If WFM_BEH_GROEP = "" Then      'Geen behandelgroep dan afdeling
        WFM_BEHANDELAAR.Clear
        For Each vUser In GetUsersPerAfdeling(strAfdeling)
            WFM_BEHANDELAAR.AddItem vUser
        Next
    Else            'wel behandelgroep dan
        WFM_BEHANDELAAR.Clear
        For Each vUser In GetUsersPerPerBehGroep(WFM_BEH_GROEP.Text, strAfdeling)
            WFM_BEHANDELAAR.AddItem vUser
        Next
    End If
    strAfdeling_user = CALGetUserVar("Afdeling", CALClient.username)
    '   Eerst stond hier WFM_doorzenden naar
    If strAfdeling <> strAfdeling_user Then
        WFM_BEH_GROEP.Value = ""
        WFM_BEH_GROEP.Locked = True
        WFM_BEHANDELAAR.Value = ""
        WFM_BEHANDELAAR.Locked = True
        'WFM_STUUR_VAR.value = "1"
    Else
        WFM_BEHANDELAAR.Locked = False
        WFM_BEH_GROEP.Locked = False
    End If
    'If optStatParkeren Then Call optStatParkeren_Click
End Sub

'RFC 133885 - Rq.No 1
Private Sub WFM_BEH_GROEP_Change()
Dim strAfdeling         As String
Dim vntUser             As Variant

    strAfdeling = CALGetUserVar("Afdeling", CALClient.username)
    WFM_BEHANDELAAR.Clear

    If WFM_BEH_GROEP.Visible = True Then
        For Each vntUser In GetUsersPerPerBehGroep(WFM_BEH_GROEP.Text, strAfdeling)
            WFM_BEHANDELAAR.AddItem CStr(vntUser)
        Next
    End If
End Sub

'RFC 133885 - Rq.No 1
Public Sub KopieerHUPO()
    If WFM_BEHANDELAAR.Value = "" Then
            If Len(AFDELING) > 0 And InStr(WFM_IND_HUPO.Text, AFDELING) > 0 Then
                    WFM_BEHANDELAAR.Locked = False      'Deze wordt locked onde afdeling/change indien user/afd<>form/afd
                    WFM_BEH_GROEP.Text = get_BEHGRP(WFM_IND_HUPO.Text)
                    WFM_BEHANDELAAR.AddItem WFM_IND_HUPO
                    WFM_BEHANDELAAR.Value = WFM_IND_HUPO.Value
            End If
    End If
End Sub

'RFC 133885 Rq.No 1
'Check whether the value exists in the drop down list, if not adds the value to the list.
Private Sub CheckFieldValue(ddList As ComboBox, strValue As String)
Dim intItem             As Integer
Dim blnValueExist       As Boolean

    blnValueExist = False

    If strValue = "" Then Exit Sub

    For intItem = 0 To ddList.ListCount - 1
        If strValue = ddList.list(intItem) Then
            blnValueExist = True
        End If
    Next intItem

    If blnValueExist = False Then
        ddList.AddItem strValue
    End If
End Sub
Attribute VB_Name = "frmECHBerekenen"
Attribute VB_Base = "0{0D028E0B-681E-47BF-9886-A91E91795FE8}{C429CDD7-71DF-44CB-B805-119F4A2ABE84}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myPolOver           As CALFormField

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
'   Partner selecteren
    If lbTemplates.Value = "VER Afwijzen verzoek" Or _
        lbTemplates.Value = "VER Model 18 opgave rente" Or _
        lbTemplates.Value = "VER Model 20 beg brief kopie opg" Then
        Set frmECHPartners.WorkitemViewer = WIViewer
        frmECHPartners.Show vbModal
        If frmECHPartners.annuleren Then
            Exit Sub
        End If
    End If
    Call StartBrief(WorkitemViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub cmdGBA_Click()
    On Error GoTo EH
    Set frmECHSelecteerBegunst.WorkitemViewer = WIViewer
    frmECHSelecteerBegunst.Show 1
    WFMGetField WIViewer, WFMCJN_X_AANM, 4
    Me.Repaint
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myKenMerk, myIdent  As String

    Err.Clear
    On Error GoTo EH
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        myPolOver.Value = Right$(Space(10) & Trim(tbPolOver1), 10) & ";" & _
                          Right$(Space(10) & Trim(tbPolOver2), 10) & ";" & _
                          Right$(Space(10) + Trim(tbPolOver3), 10) & ";"
    End If
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

Private Sub UserForm_Activate()
Static Init             As Boolean

    On Error GoTo EH
    fraOverig.Top = lblBNP.Top
    fraOverig.Left = lblBNP.Left
    Me.Width = 212
    If Init Then Exit Sub
    Init = True
'[PAC]    If WFM_AANVRAAG_BETREFT = "Conversie" And WFM_JN_BNP_BEREKENEN <> "J" Then
'[PAC]        fraConversie.Visible = True
'[PAC]    Else
'[PAC]        If WFM_AANVRAAG_BETREFT <> "Opgave BNP" Then
'[PAC]            lblBNP.Visible = True
'[PAC]            fraOpgave.Visible = True
'[PAC]            fraOverig.Visible = True
'[PAC]        End If
'[PAC]    End If
'[PAC]    If WFM_JN_BNP_BEREKENEN = "J" Or WFM_AANVRAAG_BETREFT = "Opgave BNP" Then
'[PAC]        lblBNP.Visible = True
'[PAC]        fraOverig.Visible = True
'[PAC]        fraOpgave.Visible = True
'[PAC]    End If
    lbTemplates.AddItem "VER Opgave BNP"
    lbTemplates.AddItem "VER Opgave brief"
    GetCALXFormFields
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub

EH:
    DisplayError "Userform activate"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub Decentraal()
''    lblBerekUitgev.Visible = False
''    WFMrJN_BEREK_UITG_ja.Visible = False
''    WFMrJN_BEREK_UITGnee.Visible = False
''    WFMrJN_BEREK_UITGonb.Visible = False
    If WFMrJN_CENTR_BEREKnee.Value Then
        WFMrJN_CENTR_CONTRnee.Value = True
    End If
    If WFMrJN_CENTR_BEREK_ja.Value Then
        lblBerekUitgev.Visible = True
        WFMrJN_BEREK_UITG_ja.Visible = True
        WFMrJN_BEREK_UITGnee.Visible = True
        WFMrJN_BEREK_UITGonb.Visible = True
    End If
End Sub

Private Sub WFMrJN_CENTR_BEREK_ja_Click()
    Decentraal
End Sub
Private Sub WFMrJN_CENTR_BEREKnee_Click()
    Decentraal
End Sub
Private Sub WFMrJN_CENTR_BEREKonb_Click()
    Decentraal
End Sub

Private Sub WFMrJN_CENTR_CONTR_ja_Click()
    Decentraal
End Sub
Private Sub WFMrJN_CENTR_CONTRnee_Click()
    Decentraal
End Sub
Private Sub WFMrJN_CENTR_CONTRonb_Click()
    Decentraal
End Sub
Attribute VB_Name = "frmECHContrAdm"
Attribute VB_Base = "0{E6FB8C3A-3A0F-45D3-A9A8-7CB9FC554656}{7A2FD0C5-15A0-416C-87BA-597AC65793CC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myPolOver           As CALFormField

Private Sub cmdAntInfo_Click()
Dim aanvraagproces      As String
Dim myInfoNoteName      As String
Dim Antwoordtext        As String

    On Error GoTo EH
    aanvraagproces = getaanvraagproces(WFM_AANVRAAG_INFO.Text)
    frmInfoNote.NoteName = "Antwoord Informatieverzoek"
    Set frmInfoNote.WorkitemViewer = WIViewer
    frmInfoNote.Show vbModal
    If Not frmInfoNote.TextBox1 = "" Then
        Antwoordtext = frmInfoNote.TextBox1 & vbCrLf & " door:" + CALGetUserVar("MyHupo1", CALClient.username)
    Else
        Antwoordtext = "Zaak afgehandeld" & vbCrLf & " door:" + CALGetUserVar("MyHupo1", CALClient.username)
    End If
        Unload frmInfoNote
    If geannuleerd Then Exit Sub
    myInfoNoteName = "Antwoord informatieverzoek dd " & Format(Now(), " yyyy-mm-dd")
    Call WIViewer.Notes.Add(1, myInfoNoteName, Antwoordtext)
    Call COLLMemo2Workstep("Doorzenden", "", WIViewer, aanvraagproces)
    WFM_AANVRAAG_INFO.Value = ""
    cmdAntInfo.Enabled = False
    Exit Sub

EH:
    DisplayError "Info"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myKenMerk, myIdent  As String

    Err.Clear
    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub UserForm_Activate()
Static Init         As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
    If WFM_AANVRAAG_INFO.Value = Left(GetWorkstep(WIViewer), 2) Or WFM_AANVRAAG_INFO.Value = "" Then
        cmdAntInfo.Enabled = False
    End If
    Init = True
    Exit Sub

EH:
    DisplayError "Userform activate"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Attribute VB_Name = "frmECHContrBer"
Attribute VB_Base = "0{77275729-A1F0-4938-80EE-CC4EAFC04D5E}{AC972A25-6AB7-4E91-8606-D150A8B6A879}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myPolOver           As CALFormField

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myKenMerk, myIdent  As String

    Err.Clear
    On Error GoTo EH
    CheckHupo WFM_BEHANDELAAR
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        myPolOver.Value = Right$(Space(10) & Trim(tbPolOver1), 10) & ";" & _
                          Right$(Space(10) & Trim(tbPolOver2), 10) & ";" & _
                          Right$(Space(10) + Trim(tbPolOver3), 10) & ";"
    End If
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

Private Sub UserForm_Activate()
Static Init             As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    GetCALXFormFields
'[PAC]    If WFM_JN_BNP_BEREKENEN = "J" Or WFM_AANVRAAG_BETREFT = "Opgave BNP" Then
'[PAC]        lblBNP.Visible = True
'[PAC]    End If
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub

EH:
    DisplayError "Userform activate"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Attribute VB_Name = "frmECHDivPost"
Attribute VB_Base = "0{66E3A0E9-127A-4782-842E-04FE3A4902A3}{6FA6E640-F023-4931-B7D9-39834B021089}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Activate()
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
End Sub
Attribute VB_Name = "frmECHPartners"
Attribute VB_Base = "0{E36453C1-3922-4AE6-AAC6-0D618FFBD122}{110E6230-242E-44D8-B988-25A894144936}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim myannuleren         As Boolean
Dim NrFoldersCreated    As Integer
Dim bOVL, bWZP          As Boolean
Dim WIViewer            As WFDWorkitem.WorkitemViewer

Public Function annuleren() As Boolean
    annuleren = myannuleren
End Function

Private Sub lvRegels_DblClick()
Dim strAppName          As String
Dim strSection
Dim i                   As Integer

    On Error GoTo EH
    strAppName = "ORIGIN"
    strSection = "Partner Gegevens"
    On Error Resume Next
    DeleteSetting strAppName, strSection
    On Error Resume Next
    For i = 1 To lvRegels.ColumnHeaders.Count
        If lvRegels.SelectedItem.ListSubItems(i) = "X" Then
            SaveSetting strAppName, strSection, lvRegels.ColumnHeaders.item(i + 1).Key, "J"
        Else
            If IsDate(lvRegels.SelectedItem.ListSubItems(i)) Then
                SaveSetting strAppName, strSection, lvRegels.ColumnHeaders.item(i + 1).Key, Format(lvRegels.SelectedItem.ListSubItems(i), "dd mmmm yyyy")
            Else
                SaveSetting strAppName, strSection, lvRegels.ColumnHeaders.item(i + 1).Key, lvRegels.SelectedItem.ListSubItems(i)
            End If
        End If
    Next i
    myannuleren = False
    Me.Hide
    Exit Sub

EH:
    DisplayError "ListView DblClick"
End Sub

Private Sub cmdSluiten_Click()
    myannuleren = True
    Me.Hide
End Sub

Private Function SetCALXFormFields() As Boolean
Dim itmx                As ListItem
Dim SVB                 As Field

    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        SetCALXFormFields = True
    End If
    Exit Function

EH:
    DisplayError ("SetCALXFormFields")
End Function

Private Function GetCALXFormFields() As Boolean
Dim itmx                As ListItem
Dim SVB                 As Field

    On Error GoTo EH
    GetCALXFormFields = False
    CALGetTable lvRegels, WIViewer.Fields.Find("_TABLE_SVB")
    GetCALXFormFields = True
    Exit Function

EH:
    DisplayError "GetCALXFormFields"
End Function

Private Sub AddResultField(ListView As ListView, name, Caption, Witdh, Align, ResultOnly As Boolean)
Dim myColHeader         As ColumnHeader

    Set myColHeader = ListView.ColumnHeaders.Add(, name, Caption, Witdh, Align)
    myColHeader.Tag = ResultOnly

End Sub

Private Sub UserForm_Activate()
Static Init As Boolean
Dim j                   As Integer

    On Error GoTo EH
    NrFoldersCreated = 0
    Me.Caption = "Kiezen ex-partner voor pensioen"
    Me.lvRegels.ColumnHeaders.Clear
    Me.lvRegels.ColumnHeaders.Add , , , 0, 0 ', Alignment:=1
    AddResultField lvRegels, "VOORLETTERS", "Voorl.", 50, 0, False
    AddResultField lvRegels, "VOORVOEGSELS", "Voorv.", 50, 0, False
    AddResultField lvRegels, "NAAM_PARTNER", "Naam partner", 123, 0, False
    AddResultField lvRegels, "AEGAR_NR", "Aegarnr", 50, 0, False
    AddResultField lvRegels, "INGANG_SVB", "Ingang SVB", 75, 0, False
    AddResultField lvRegels, "EINDE_SVB", "Einde SVB", 75, 0, False
    GetCALXFormFields
    Me.lvRegels.Refresh
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Private Sub UserForm_Initialize()
    myannuleren = True
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If Cancel = 0 Then myannuleren = True
End Sub
Attribute VB_Name = "frmECHPrkAanvraag"
Attribute VB_Base = "0{7510D9F6-F3FE-468B-AD1F-7C4F2C8E08B4}{13358467-618C-46B4-8DAA-2520F085D8DE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myKenMerk, myIdent  As String

    Err.Clear
    On Error GoTo EH
    If rb_antwoord_info_JA = True Then
'       Dit in een aparte procedure met naam meegeven
        Call VerplaatsenVanuitParkeerstap(WIViewer, WFM_WORKSTEP_NAAM.Value)
    End If
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
'[PAC]    Select Case WFM_AANVRAAG_BETREFT
'[PAC]        Case "Conversie"
'[PAC]             fraConversie.Visible = True
'[PAC]        Case "Opgave"
'[PAC]             fraOpgaveEx.Visible = True
'[PAC]        Case Else
'[PAC]             fraVerevening.Visible = True
'[PAC]    End Select
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub

EH:
    DisplayError "Userform activate"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Attribute VB_Name = "frmECHSelecteerBegunst"
Attribute VB_Base = "0{9DE86FED-04AF-41CA-A597-6207D9E3CF56}{CEEEB50C-6145-4169-B3F3-5E6EE58A33CF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim myForm              As Object
Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String

Private Sub cmdPrint_Click()
'   Door print bugje in VBA (inhoud van listview wordt niet geprint
'   wordt eerst listbox gevuld met data, hoogte en breedte van de listview
    lbPartners.ColumnCount = 9
    DoEvents                        'Moet hier anders wordt lb niet goed geprint
    CopyLvTolb lvPartners, lbPartners
    Me.Repaint
    lbPartners.Visible = True
    Me.PrintForm
    lbPartners.Visible = False
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    Me.lvPartners.ColumnHeaders.Add , , , 0, 0 ', Alignment:=1
    AddResultField lvPartners, "JN_HUW_REGEL_AANM", "Aanm.", 35, 0, False
    AddResultField lvPartners, "JN_HUW_REGEL_OK", "Ontv.", 30, 0, False
    AddResultField lvPartners, "INGANG_SVB", "Ingang SVB", 60, 0, False
    AddResultField lvPartners, "EINDE_SVB", "Einde SVB", 60, 0, False
    AddResultField lvPartners, "R", "R", 30, 0, False
    AddResultField lvPartners, "NAAM_PARTNER", "Naam Partner", 126, 0, False
    AddResultField lvPartners, "VOORLETTERS", "Voorl.", 40, 0, False
    AddResultField lvPartners, "VOORVOEGSELS", "Voorvoeg.", 60, 0, False
    AddResultField lvPartners, "GEB_DATUM_PARTNER", "Geb.datum", 60, 0, False
    GetCALXFormFields
    lvPartners.ControlTipText = "Dubbelklik op een regel om rubriek 'Aanm.' aan/uit te vinken"
    Me.lvPartners.Refresh
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub cmdOK_Click()
Dim i                   As Integer

    On Error GoTo EH
'   Deze button kan alleen ingedrukt zijn als het item in
'   een begunstige werkstap staat.
'   indien een partner/kind aangemeld moet worden (een x is ingevuld)
'   wordt veld WFMCJN_X_AANM aangepast.
'   Kinderen kunnen alleen bij overlijden aangemeld worden.
'   Het kan zijn dat partners of kinderen al eerder zijn aangemeld.
'   Alleen kinderen of parterns die nog niet zijn aangemeld kunnen worden
'   aangemeld. Subitem(2) = ""
    WFMCJN_X_AANM.Value = False
    For i = 1 To lvPartners.ListItems.Count
        If lvPartners.ListItems.item(i).SubItems(1) = "X" And _
           lvPartners.ListItems.item(i).SubItems(2) = "" Then
            WFMCJN_X_AANM.Value = True
            i = lvPartners.ListItems.Count + 1
        End If
    Next
    If WFMCJN_X_AANM Then WFM_JN_NAAR_GBA = "J"
    WFMSaveField WIViewer, WFMCJN_X_AANM, 4
    WFMSaveField WIViewer, WFM_JN_NAAR_GBA, 4
    CALSaveTable lvPartners, WIViewer.Fields.Find("_TABLE_SVB")
    Unload Me
    Exit Sub

EH:
    DisplayError "Button OK"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Unload Me
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Function GetCALXFormFields() As Boolean
Dim itmx                As ListItem
Dim SVB                 As Field

    On Error GoTo EH
    GetCALXFormFields = False
    GetFields WIViewer, Me
    CALGetTable lvPartners, WIViewer.Fields.Find("_TABLE_SVB")
    GetCALXFormFields = True
    Exit Function

EH:
    DisplayError ("GetCALXFormFields")
End Function

Private Sub AddResultField(ListView As ListView, name, Caption, Witdh, Align, ResultOnly As Boolean)
Dim myColHeader         As ColumnHeader

    Set myColHeader = ListView.ColumnHeaders.Add(, name, Caption, Witdh, Align)
    myColHeader.Tag = ResultOnly
End Sub

Private Sub lvPartners_ItemClick(ByVal item As MSComctlLib.ListItem)
'   Item mag alleen aangekruist worden als nog niet eerder is aangemeld.
    If item.SubItems(2) = "" Then
        If item.SubItems(1) = "X" Then
            item.SubItems(1) = ""
            Exit Sub
        End If
        If item.SubItems(1) = "" Then
            item.SubItems(1) = "X"
            Exit Sub
        End If
    End If
    lvPartners.Refresh
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Attribute VB_Name = "frmECHmutCAESAR"
Attribute VB_Base = "0{2E20F453-4F6A-4403-A33F-BC33EDA7DDBE}{B922ED0D-B8F8-4C48-A116-ED8E55DE80AD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myPolOver           As CALFormField

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myKenMerk, myIdent  As String

    Err.Clear
    On Error GoTo EH
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        myPolOver.Value = Right$(Space(10) & Trim(tbPolOver1), 10) & ";" & _
                          Right$(Space(10) & Trim(tbPolOver2), 10) & ";" & _
                          Right$(Space(10) + Trim(tbPolOver3), 10) & ";"
    End If
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

Private Sub UserForm_Activate()
Static Init             As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    GetCALXFormFields
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub

EH:
    DisplayError "Userform activate"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Attribute VB_Name = "frmEXCAfhandOnvindb"
Attribute VB_Base = "0{73343E48-149E-4262-BF88-C601FAE07706}{BA5269A7-B252-4C28-86E6-6DCEA692B146}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer    As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver   As CALFormField


Private Sub cmdCreateFolder_Click()
Dim myFrm       As Object

    Set myFrm = New frmEXCNabestaanden
    myFrm.Tag = "WZP"
    Set myFrm.WorkitemViewer = WIViewer
    myFrm.Show 1
    Set myFrm = Nothing
End Sub

Private Sub cmdGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub cmdInfo_Click()
    On Error GoTo EH
    Select Case WFM_IND_TRIGGER
        Case "PEN"
             Set frmPENInfo.WorkitemViewer = WIViewer
             frmPENInfo.Tag = "1"
             frmPENInfo.Show 1
        Case "OVL"
             Set frm_OVLBeoordelen.WorkitemViewer = WIViewer
             frm_OVLBeoordelen.ESWMObjID = WIViewer.CALClientListItem.Info.objId.InternalName
             GetFields WIViewer, frm_OVLBeoordelen
             frm_OVLBeoordelen.Show 0
        Case "AOV"
             Set frmAOVGegevens.WorkitemViewer = Me.WorkitemViewer
             frmAOVGegevens.DisAbleControls
             frmAOVGegevens.Show vbModal
    End Select
    Exit Sub

EH:
    DisplayError "PEN info"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If WFM_JN_AFGEHANDELD <> "J" Then
        If Not CaesarNotitie Then Exit Sub
    End If
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub UserForm_Activate()
    If WFM_JN_PEN_PIN_WIJZ = "J" Then
        lblPENPIN.Visible = True
        WFMrJN_PEN_PIN_GEWIJZ_ja.Visible = True
        WFMrJN_PEN_PIN_GEWIJZnee.Visible = True
        WFMrJN_PEN_PIN_GEWIJZonb.Visible = True
    End If
    If WFM_JN_AFGEHANDELD = "J" Then
        lblingmut.Visible = True
        WFMrJN_INGANGSMUT_OK_ja.Visible = True
        WFMrJN_INGANGSMUT_OKnee.Visible = True
        WFMrJN_INGANGSMUT_OKonb.Visible = True
    End If
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Function CaesarNotitie() As Boolean
Dim strTekst    As String
Dim strFilename As String
Dim fs          As New FileSystemObject
Dim ts          As TextStream
Dim WI          As CALWorkitemInfo
Dim ChildItem   As CALClientListItem
Dim objImport   As CALImport
Dim FldChild    As CALFolderChild
Dim lngShell    As Long

    On Error GoTo EH
    CaesarNotitie = False
    strTekst = "CAESAR BRIEF VERNIETIGEN" + vbCrLf + vbCrLf
    strTekst = strTekst + "Polisnummer: " + WFM_NR_POLIS + vbCrLf
    strTekst = strTekst + "Naam       : " + WFM_NAAM_DLNMR
    strFilename = pvTempDir + "~ESWM" + Trim(ESWMObjID) + ".txt"
    Kill strFilename
    Set ts = fs.CreateTextFile(strFilename)
    ts.Write (strTekst)
    ts.Close
'   Importeren document
    Set WI = CALClient.CreateImport("CAESAR Brief vernietigen", "MEMO", strFilename)
    Set ChildItem = CALClient.ClientList.Add(WI.objId, calAddRetain)
    Set objImport = ChildItem.Open(calOpenReadWrite)
    objImport.Save
    Set FldChild = WIViewer.CALClientListItem.OpenedItem.Children.Add(ChildItem.Info.objId, calChildLast)
    objImport.Close calCloseAbortChanges
    CALClient.ClientList.Remove ChildItem

EH:
    If Err Then
        If Err = 53 Then
            Resume Next
        Else
            DisplayError "CaesarNotitie"
        End If
    Else
        CaesarNotitie = True
    End If
    Set WI = Nothing
    Set ChildItem = Nothing
    Set objImport = Nothing
    Set FldChild = Nothing
    Set ts = Nothing
    Set fs = Nothing
End Function
Attribute VB_Name = "frmEXCAfhandeling"
Attribute VB_Base = "0{A56EC8E5-5DF9-4CC0-A209-0B0AE8BCCCE3}{244AFE9E-F3E7-4CC1-9BCF-43D320BE2BB4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'Changes:
'16JAN08 [PAC] Toegevoegd fraAfkoopAkkoord
Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String
Dim myPolOver       As CALFormField
Dim mydate          As Date
Dim strAfdeling     As String
Private Declare Sub keybd_event Lib "user32" (ByVal bVk As Byte, ByVal _
                    bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)

''Q3 Release Button 777 and its functionality not required.

''Private Sub cmd777_Click()
'''   Show frm777
''    Set frmEXCAfhandeling777.WorkitemViewer = Me.WorkitemViewer
''    frmEXCAfhandeling777.Show vbModal
''    If Not frmEXCAfhandeling777.o777annuleren.value Then
''        WFM_JN_777_GEMAAKT.value = "J"
''    End If
''    Set frmEXCAfhandeling777.WorkitemViewer = Nothing
''    Set frmEXCAfhandeling777 = Nothing
''End Sub

Private Sub cmdVTU_Click()
'   Show frmVTU
    Set frmExcAfhandelingVTU.WorkitemViewer = Me.WorkitemViewer
    frmExcAfhandelingVTU.Show vbModal
    If Not frmExcAfhandelingVTU.oVTUannuleren.Value Then
        WFM_JN_VTU_GEMAAKT.Value = "J"
    End If
    Set frmExcAfhandelingVTU.WorkitemViewer = Nothing
    Set frmExcAfhandelingVTU = Nothing
End Sub

Private Sub cmdCreateFolder_Click()
Dim myFrm       As Object

    Set myFrm = New frmEXCNabestaanden
    myFrm.Tag = "WZP"
    Set myFrm.WorkitemViewer = WIViewer
    myFrm.Show 1
    Set myFrm = Nothing
End Sub

Private Sub cmdInfo_Click()
    On Error GoTo EH
    Select Case WFM_IND_TRIGGER
        Case "PEN"
             Set frmPENInfo.WorkitemViewer = WIViewer
             frmPENInfo.Tag = "1"
             frmPENInfo.Show 1
        Case "OVL"
             Set frm_OVLBeoordelen.WorkitemViewer = WIViewer
             frm_OVLBeoordelen.ESWMObjID = WIViewer.CALClientListItem.Info.objId.InternalName
             GetFields WIViewer, frm_OVLBeoordelen
             frm_OVLBeoordelen.Show 0
        Case "AOV"
             Set frmAOVGegevens.WorkitemViewer = Me.WorkitemViewer
             frmAOVGegevens.DisAbleControls
             frmAOVGegevens.Show vbModal
             Set frmAOVGegevens = Nothing
    End Select
    Exit Sub

EH:
    DisplayError "PEN info"
End Sub

Private Sub cmdGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim newinfoForm     As Object
Dim strExcasso      As String
Dim myFrmAfdeling   As Object

    On Error GoTo EH
    
'Q3 Release
    If WFMrJN_VOORSCHOT_ja And Not (Len(Trim$(WFM_REDEN_VOORSCHOT)) > 0) Then
        MsgBox "Reden moet gevuld zijn"
        Exit Sub
    End If
    
    If Not WFM_Validatie Then Exit Sub
    DateCheck WFMDRAPPEL
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Function WFM_Validatie() As Boolean
    WFM_Validatie = False
    If fraAfkoopAkkoord.Visible = True And _
        WFMrJN_AKKOORD_AFKOOPonb.Value = True Then
        MsgBox "Afkoop Akkoord niet aangegeven!"
        Exit Function
    End If
    WFM_Validatie = True
End Function

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        If WIViewer.CALClientListItem.OpenedItem.Class <> "COLLAOV" Then
            WFMSaveFieldYNO Me, "JN_PEN_PIN_GEWIJZ"
        End If
    End If
    SetCALXFormFields = True
    Exit Function

EH:
  DisplayError "SetCALXFormFields"
End Function

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
'   Gegevens exporteren
    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    
'Q3 Release
    If WFMrJN_VOORSCHOT_ja Then
        Label75.Visible = True
        WFM_REDEN_VOORSCHOT.Visible = True
    End If
    
'   Zelfde formulier wordt gebruikt bij Excasso en overlijden
    lbTemplates.AddItem "PIN Ontvangst reactie"
    lbTemplates.AddItem "PIN Betaalopdracht"
    If WFM_JN_STUKKEN_VOLL = "N" Then
        MsgBox "De stukken zijn volgens FEP niet volledig. Zie notitie.", vbExclamation + vbOKOnly
        lblBrutus.Caption = "STUKKEN NIET VOLLEDIG!"
        lblBrutus.Visible = True
    End If
    If WIViewer.CALClientListItem.OpenedItem.Class = "COLLAOV" Then
        lblPENPIN.Visible = False
        rbJN_PEN_PIN_GEWIJZ_ja.Visible = False
        rbJN_PEN_PIN_GEWIJZnee.Visible = False
        rbJN_PEN_PIN_GEWIJZonb.Visible = False
        cmdCreateFolder.Visible = False
        cmdGBA.Visible = False
        cmdInfo.Visible = False
    Else
        WFMGetFieldYNO Me, "JN_PEN_PIN_GEWIJZ"
        tbNAAM_PARTNER_ZAAK = WIViewer.Fields.Find("NAAM_PARTNER_ZAAK").CALFormField.Value
        If tbNAAM_PARTNER_ZAAK <> Empty Then
            lblNaamPartner.Visible = True
            tbNAAM_PARTNER_ZAAK.Visible = True
        End If
    End If
    
    If WFMrJN_NAAR_PARKEREN_ja Then
        WFM_REDEN_PARKEREN.Enabled = True
        WFMDRAPPEL.Enabled = True
        lblRedenParkeren.Enabled = True
        lblDatum.Enabled = True
    Else
        WFM_REDEN_PARKEREN.Enabled = False
        lblRedenParkeren.Enabled = False
        lblDatum.Enabled = False
        WFMDRAPPEL.Enabled = False
        WFMDRAPPEL = ""
        WFM_REDEN_PARKEREN = ""
    End If
    Select Case WFM_IND_TRIGGER
        Case "OVL"
             cmdCreateFolder.Visible = True
             fraVervolg.Visible = True
        Case "PEN"
             Frauitruil.Visible = True
             If UCase(WFM_DVB_STATUS) = "S" And UCase(WFM_JN_AFKOOP) = "J" Then
                fraAfkoopAkkoord.Visible = True
                WFMrJN_AKKOORD_AFKOOPonb.Value = True
             End If
    End Select
    If WFMrJN_NAAR_PARKERENnee.Value Then
        WFM_REDEN_PARKEREN.Enabled = False
        WFMDRAPPEL.Enabled = False
        lblRedenParkeren.Enabled = False
        lblDatum.Enabled = False
        WFMDRAPPEL = ""
        WFM_REDEN_PARKEREN = ""
    End If
    
''    If WFMrJN_INGANGSMUT_OKnee = True And WFMrJN_VOORSCHOTnee = True Then
''        cmd777.Visible = True
''    End If
    WFM_REDEN_PARKEREN.AddItem "Wacht op Sofinr."
    WFM_REDEN_PARKEREN.AddItem "Wacht op LB-verkl."
    WFM_REDEN_PARKEREN.AddItem "Wacht op ZF-gegevens"
    WFM_REDEN_PARKEREN.AddItem "Wacht op Handteken."
    WFM_REDEN_PARKEREN.AddItem "Wacht op Uitruilform."
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    Exit Sub

EH:
    DisplayError "UserForm_DblClick"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappeldatum"
End Sub

Private Sub WFMrJN_NAAR_PARKEREN_ja_Change()
    WFM_REDEN_PARKEREN.Enabled = True
    WFMDRAPPEL.Enabled = True
    lblRedenParkeren.Enabled = True
    lblDatum.Enabled = True
    If mydate = "0:00:00" Then
        mydate = DateAdd("d", 7, Date)
    End If
    WFMDRAPPEL.Value = Format(mydate, "dd-mm-yyyy")
End Sub
Private Sub WFMrJN_NAAR_PARKERENnee_Click()
    WFM_REDEN_PARKEREN.Enabled = False
    lblRedenParkeren.Enabled = False
    lblDatum.Enabled = False
    WFMDRAPPEL.Enabled = False
    WFMDRAPPEL = ""
    WFM_REDEN_PARKEREN = ""
End Sub

Private Sub WFMrJN_ONTBREKENDE_GEG_ja_Click()
    WFMrJN_NAAR_PARKEREN_ja = True
    WFM_REDEN_PARKEREN = "Ontbrekende gegevens"
    WFMDRAPPEL.SetFocus
End Sub

Private Sub WFMrJN_VOORSCHOT_ja_Click()
Dim myFrmAfdeling As Object
''Q3 Release Button 777 and its functionality not required.
''    cmd777.Visible = False

    Label75.Visible = True
    WFM_REDEN_VOORSCHOT.Visible = True

'   Q3 Release Start
'    If WFMrJN_INGANGSMUT_OKnee.value = True Then
'        Setparkeren
'    End If
'   Q3 Release End
End Sub
Private Sub WFMrJN_VOORSCHOTnee_Click()
''Q3 Release
    Label75.Visible = False
    WFM_REDEN_VOORSCHOT.Visible = False
    WFM_REDEN_VOORSCHOT.Text = ""
    
''Q3 Release Button 777 and its functionality not required.
''    If WFMrJN_INGANGSMUT_OKnee = True Then
''        cmd777.Visible = True
''    End If
End Sub

Private Sub WFMrJN_INGANGSMUT_OKnee_Click()
'   Q3 Release Start
'    If WFMrJN_VOORSCHOT_ja.value = True Then
'        Setparkeren
'    End If
'   Q3 Release End

''Q3 Release Button 777 and its functionality not required.
''    If WFMrJN_VOORSCHOTnee = True Then
''       cmd777.Visible = True
''    End If
End Sub
Private Sub WFMrJN_INGANGSMUT_OK_ja_Click()
    WFMrJN_NAAR_PARKERENnee.Value = True
    
''Q3 Release Button 777 and its functionality not required.
''    cmd777.Visible = False
End Sub

'   Q3 Release Start
'Private Sub Setparkeren()
'    mydate = DateAdd("d", 15, Date)
'    WFMrJN_NAAR_PARKEREN_ja.value = True
'    WFM_REDEN_PARKEREN.value = "VSP ?"
'End Sub
'   Q3 Release End
Attribute VB_Name = "frmEXCAfhandeling777"
Attribute VB_Base = "0{D81B9DAE-7491-4045-8F03-6654B4F1BC62}{585636A5-875E-495C-BEDA-D58BF496AA26}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim b777Annuleren       As Boolean

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub cmdOK_Click()
Const VK_SNAPSHOT = &H2C
Dim strFile             As String
Dim appWord             As Object

    On Error GoTo EH
    strFile = Environ("TEMP") + "\print.doc"                '[W7]  Was: "C:\TEMP\print.doc"
'   MabR del PutFormIntoWord sub ????? anders twee maal ook vanuit 777
'   Printscreen
    keybd_event VK_SNAPSHOT, 1, 0, 0
'   Start word
    Set appWord = CreateObject("Word.Application")
'   Place a message at the bottom of the Word window
'   Nieuw doc
    appWord.Documents.Add
'   Paste
    appWord.Selection.Paste
'   Save overschijft altijd
    appWord.Activedocument.SaveAs strFile
'   Close & quit
    appWord.Activedocument.Close
    appWord.Quit
'   Import in folder
    Call NewWordDocumentInFolder(WIViewer, "777", strFile)
'   Waarden saven
    SetCALXFormFields
'   Gemaakt zetten
    o777annuleren.Value = False
'   In hoofscherm closen
    Me.Hide
    Exit Sub

EH:
    DisplayError "Ok"
End Sub

Sub SetCALXFormFields()
    WFMSaveField WIViewer, tbBEDRAG_UITKERING, 2
    WFMSaveField WIViewer, tbUITKERINGSTERMIJN, 2
    WFMSaveField WIViewer, tbREDEN_VERZOEK_777, 2
End Sub

Sub GetCALXFormFields()
    WFMGetField WIViewer, tbNAAM_DLNMR, 2
    WFMGetField WIViewer, tbNR_POLIS, 2
    WFMGetField WIViewer, dtDAT_INGANG, 2
    WFMGetField WIViewer, tbBEDRAG_UITKERING, 2
    WFMGetField WIViewer, tbUITKERINGSTERMIJN, 2
    WFMGetField WIViewer, tbREDEN_VERZOEK_777, 2
End Sub

Private Sub cmdTerug_Click()
 Me.Hide
End Sub

Private Sub UserForm_Activate()
    On Error GoTo EH:
    GetCALXFormFields
    If g_NTUsername = "" Then initUservars
    txtOpgaveDoor = g_NTUsername
    Exit Sub

EH:
    DisplayError "Form activate"
    GetCALXFormFields
End Sub
Attribute VB_Name = "frmEXCBehandelenVoorschot"
Attribute VB_Base = "0{468A523B-D1BA-4DC0-8313-5A60B1DA817A}{2B017746-16E8-415B-A9A6-E5D74F94850D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer    As WFDWorkitem.WorkitemViewer
Dim mydate      As Date
Dim myESWMObjID As String

Private Sub cmdInfo_Click()
    On Error GoTo EH
    Select Case WFM_IND_TRIGGER
        Case "PEN"
             Set frmPENInfo.WorkitemViewer = WIViewer
             frmPENInfo.Tag = "1"
             frmPENInfo.Show 1
        Case "OVL"
             Set frm_OVLBeoordelen.WorkitemViewer = WIViewer
             frm_OVLBeoordelen.ESWMObjID = WIViewer.CALClientListItem.Info.objId.InternalName
             GetFields WIViewer, frm_OVLBeoordelen
             frm_OVLBeoordelen.Show 0
    End Select
    Exit Sub

EH:
    DisplayError "PEN info"
End Sub

Private Sub cmdGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then

    End If
    SetCALXFormFields = True
    Exit Function

EH:
  DisplayError "SetCALXFormFields"
End Function

Private Sub UserForm_Activate()
Static Init As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
'   Zelfde formulier bij Excasso en overlijden
    If WFM_IND_TRIGGER = "AOV" Then
        cmdInfo.Visible = False
        cmdGBA.Visible = False
    End If
    If WFMrJN_NAAR_PARKEREN_ja Then
        WFM_REDEN_PARKEREN.Enabled = True
        WFMDRAPPEL.Enabled = True
        lblRedenParkeren.Enabled = True
        lblDatum.Enabled = True
    Else
        WFM_REDEN_PARKEREN.Enabled = False
        lblRedenParkeren.Enabled = False
        lblDatum.Enabled = False
        WFMDRAPPEL.Enabled = False
        WFMDRAPPEL = ""
'        WFM_REDEN_PARKEREN = "" ' 13-11-2008 WO TD110995 RedenParkeren wel laten zien
    End If
    If WFMrJN_NAAR_PARKERENnee.Value Then
        WFM_REDEN_PARKEREN.Enabled = False
        WFMDRAPPEL.Enabled = False
        lblRedenParkeren.Enabled = False
        lblDatum.Enabled = False
        WFMDRAPPEL = ""
'        WFM_REDEN_PARKEREN = "" ' 13-11-2008 WO TD110995 RedenParkeren wel laten zien
    End If
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    Exit Sub

EH:
    DisplayError "UserForm_DblClick"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappeldatum"
End Sub

Private Sub WFMrJN_NAAR_PARKEREN_ja_Change()
    WFM_REDEN_PARKEREN.Enabled = True
    WFMDRAPPEL.Enabled = True
    lblRedenParkeren.Enabled = True
    lblDatum.Enabled = True
    If mydate = "0:00:00" Then
        mydate = DateAdd("d", 7, Date)
    End If
    WFMDRAPPEL.Value = Format(mydate, "dd-mm-yyyy")
End Sub
        
Private Sub WFMrJN_NAAR_PARKERENnee_Click()
    WFM_REDEN_PARKEREN.Enabled = False
    lblRedenParkeren.Enabled = False
    lblDatum.Enabled = False
    WFMDRAPPEL.Enabled = False
    WFMDRAPPEL = ""
    WFM_REDEN_PARKEREN = ""
End Sub
Attribute VB_Name = "frmEXCBeoordDoc"
Attribute VB_Base = "0{4DEC02CA-0DF4-44FD-AB03-2E9EF28BAA30}{4093EC48-CE6B-49AD-8047-357C34C7E013}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'[PAC] - TD162544  Module copied from VBA version AegonProdV62_30_Vista.vba
Option Explicit

Dim myForm              As Object
Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim strUser             As String
Dim strAfdeling         As String ' Let op deze wordt tot nu toe alleen gebruikt voor de PIN(EXC) uitzondering en wordt dus, ongeacht user of bestemming, altijd gevuld met EXC. Niet zomaar voor andere doeleinden gebruiken!
Dim arrWerksoorten()    As String
Dim arrWKTperWKS()      As String
Dim arrAllWKTperWKS()   As String

Private Sub cmdCopy_Click()
Static KopieNr  As Integer
Dim KopieItem   As CALClientListItem

    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    KopieNr = KopieNr + 1
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call CopySendDocument(WIViewer.CALClientListItem, KopieNr)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    DisplayError "Kopie"
    MousePointer = fmMousePointerDefault
End Sub

Private Sub cmdScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
    WFM_BEH_GROEP.Text = get_BEHGRP(WFM_IND_HUPO.Text)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Open eerst het juiste CAESAR scherm (OHUP)."      '[PAC] - TD162544 Typo
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myIdent     As String

    On Error GoTo EH

'[PAC] - TD162544  Code added to check CASE360 DocType
    If JN_NAAR_CASE360.Value <> "" Then
        If cbCase360DocType.Value = "" Then
            MsgBox "CASE360 Document Type niet ingevuld."
            Exit Sub
        End If
        If WFM_NR_POLIS.Text = "" And _
           WFM_NR_AEGAR.Text = "" And _
           WFM_NR_KLANT.Text = "" Then
            MsgBox "Geen van verplichte velden (DLNMR, Aegar, Klant) ingevuld."
            Exit Sub
        End If
        If WFM_NR_POLIS.Text <> "" And _
           Len(WFM_NR_POLIS.Text) <> 10 Then
            MsgBox "DLNMR niet volledig ingevuld (10 pos.)."
            Exit Sub
        End If
        If WFM_NR_AEGAR.Text <> "" And _
           Len(WFM_NR_AEGAR.Text) <> 9 Then
            MsgBox "Aegarnummer niet volledig ingevuld (9 pos.)."
            Exit Sub
        End If
        If WFM_NR_KLANT.Text <> "" And _
           Len(WFM_NR_KLANT.Text) <> 6 Then
            MsgBox "Klantnummer niet volledig ingevuld (6 pos.)."
            Exit Sub
        End If

        WFM_DOCTYPE.Clear
        WFM_DOCTYPE.AddItem cbCase360DocType.Value
        WFM_DOCTYPE.ListIndex = 0
    End If
'[PAC] - TD162544  End Code added to check CASE360 DocType

    Call CheckFields

'   Q2 release 2012 added
    'If WFMrJN_NAAR_CASE360_ja.Value = True Then
        If WFM_NAAM_DLNMR.Value = "" Or WFM_NR_POLIS.Value = "" Or WFM_NR_AEGAR.Value = "" Or _
            WFMDGEB_DEELN.Value = "" Or WFM_SEXE_DLNMR.Value = "" Or WFM_NAAM_KLANT.Value = "" Or _
            WFM_NR_KLANT.Value = "" Or WFM_IND_HUPO.Value = "" Then
            'WFMrJN_NAAR_CASE360nee.Value = True
            MsgBox "Deelnemer, Deeln.Nr., AegarNr., Geb. datum, Sexe, Klant, KlantNr. and Contactmedew. Waarden kunnen niet leeg zijn"
            Exit Sub
        End If
    'End If

    ' TD 162544 change added
    WFM_JN_NAAR_CASE360.Value = ""                      '[PAC] - TD162544
    If JN_NAAR_CASE360.Value = "PIN" Then WFM_JN_NAAR_CASE360.Value = "98P"
    If JN_NAAR_CASE360.Value = "Kap Exp" Then WFM_JN_NAAR_CASE360.Value = "98K"
    If JN_NAAR_CASE360.Value = "OVL" Then WFM_JN_NAAR_CASE360.Value = "98O"

    If WFM_DOCTYPE <> "EXC unieke POST" Then
        WFM_WERKTYPE = ""
        WFM_WERKSOORT = ""
        WFM_BEHANDELAAR = ""
    End If
    If Format(datDEINDDAT, "yyyymmdd") < "20000000" Then
        WFMDEINDDAT = ""
    Else
        WFMDEINDDAT = Format(datDEINDDAT, "dd-mm-yyyy")
    End If
    DateCheck WFMDEINDDAT
    myIdent = WFM_NR_POLIS + WFM_IND_TRIGGER

    If WFM_ZAAK_IDENT_NR <> myIdent Then
        WFM_ZAAK_IDENT_NR = myIdent
    End If

'[PAC] - TD162544  Code added to force the case to stay in 98A01
    If JN_NAAR_CASE360.Value <> "" Then
        WFM_IND_TRIGGER.Text = "BOP"            'Forceer de zaak in 98A01 te blijven !!!
    End If
'[PAC] - TD162544  End Code added to force the case to stay in 98A01
    
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdToevoegen_Click()
Dim mobjQueryResults As CALQueryResults
Dim myQueryFrm As Object

    On Error GoTo EH
    Call CheckFields
    If Not WorkflowSave(WIViewer) Then Exit Sub
'   Zoeken naar folder met zelfde deelnemer nummer.
'   na keuze van folder wordt document hierin geimporteerd.
    If Not Me.QueryFrm Is Nothing Then
       Me.QueryFrm.Show 0
       Exit Sub
    End If
    Set Me.QueryFrm = New frmZoekImport
    Set myQueryFrm = Me.QueryFrm
    Set myQueryFrm.WorkitemViewer = Me.WorkitemViewer
    Set myQueryFrm.ParentForm = Me
    myQueryFrm.Show 0
    Exit Sub

EH:
    If Err.Number = 12349 Then
        Resume Next ' komt niet meer terug in checkfields
        WFM_DOCTYPE.BackColor = TextboxWhite
    End If
    DisplayError "Toevoegen"
End Sub

Private Sub datDEINDDAT_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck datDEINDDAT
    datDEINDDAT.CalendarBackColor = TextboxWhite
    DateCheckBefore datDEINDDAT
    Exit Sub

EH:
    DisplayError "Einddatum"
End Sub

Private Sub datDEINDDAT_Change()
    If Format(datDEINDDAT, "yyyymmdd") < Format(Date, "yyyymmdd") Then
        Err.Raise 12345, , "De datum mag niet in het verleden liggen!"
        GoTo EH
    End If
    datDEINDDAT.MinDate = Date
    Exit Sub

EH:
    DisplayError "Einddatum"
End Sub

'[PAC] - TD162544  Subroutine Added
Private Sub JN_NAAR_CASE360_Change()
    cbCase360DocType.Clear
    If JN_NAAR_CASE360.Value = "" Then
        cbCase360DocType.Enabled = False
        WFM_DOCTYPE.Enabled = True
        cmdToevoegen.Enabled = True
        cmdCopy.Enabled = True
    Else
        cbCase360DocType.Enabled = True
        Call FillCase360DocTypes(JN_NAAR_CASE360.Value, cbCase360DocType)
        WFM_DOCTYPE.ListIndex = 0
        WFM_DOCTYPE.Enabled = False
        cmdToevoegen.Enabled = False
        cmdCopy.Enabled = False
    End If
End Sub
'[PAC] - TD162544  End Subroutine Added

Private Sub UserForm_Activate()
Static Init                 As Boolean
Dim sSavDocType             As String
Dim varDoorzendenNaarList   As Variant
Dim i                       As Integer

    strUser = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "BEHANDELAAR") 'WFM_BEHANDELAAR.Value
    strAfdeling = "PIN" ' werksoort en werktype worden vast gevuld, maar alleen getoond bij PIN(EXC)
    If Init Then Exit Sub
    Init = True

'   CheckMailBox
    WFM_DOCTYPE.ColumnCount = 2
    WFM_DOCTYPE.BoundColumn = 1
    WFM_DOCTYPE.TextColumn = -1
    WFM_DOCTYPE.ColumnWidths = ";0"
'   Doctype, werksrt
    DocTypeAdd "", csDocOverig
    DocTypeAdd "PEN Ingang", csDocNieuw
'[PAC] 24OCT14    DocTypeAdd "EXC unieke POST", csDocNieuw
    DocTypeAdd "FLX Flex-pensioen", csDocNieuw          '[PAC] 13MAR15
    DocTypeAdd "OVL Ingang", csDocNieuw
    DocTypeAdd "WZP Ingang verlenging", csDocNieuw
    DocTypeAdd "WZP Einde", csDocNieuw
    DocTypeAdd "XXX Uitkeringsformulier", csDocRendezvous
    DocTypeAdd "XXX KAP KEP Reactie Offerte", csDocRendezvous
    DocTypeAdd csOverigePost, csDocOverig
    DocTypeAdd "XXX Uitkeringsform BTL WZP", csDocOverig
    DocTypeAdd "XXX Schoolverklaring", csDocOverig
    DocTypeAdd "XXX Ziektekosten", csDocOverig
    DocTypeAdd "XXX Sofinummer", csDocOverig
    DocTypeAdd "XXX Echtscheidingscon", csDocOverig
    DocTypeAdd "XXX Flex keuzeformulier", csDocRendezvous
    DocTypeAdd "XXX Flex Beslissing DLN", csDocRendezvous
    DocTypeAdd "XXX Flex Brief CAESAR", csDocRendezvous
    WFM_WERKTYPE.ColumnCount = 2
    WFM_WERKTYPE.BoundColumn = 1
    WFM_WERKTYPE.TextColumn = -1
    WFM_WERKTYPE.ColumnWidths = "30;30"
    WFM_WERKSOORT.ColumnCount = 2
    WFM_WERKSOORT.TextColumn = -1
    WFM_WERKSOORT.ColumnWidths = "30;30"
    WFM_BEHANDELAAR.ColumnCount = 2
    WFM_BEHANDELAAR.BoundColumn = 1
    WFM_BEHANDELAAR.TextColumn = -1
    WFM_BEHANDELAAR.ColumnWidths = "50;0"

    ' TD162544 change added
'       JN_NAAR_CASE360.ColumnCount = 2             '[PAC] - TD162544
'       JN_NAAR_CASE360.BoundColumn = 1             '[PAC] - TD162544
'       JN_NAAR_CASE360.TextColumn = -1             '[PAC] - TD162544
'       JN_NAAR_CASE360.ColumnWidths = "50;50"      '[PAC] - TD162544
    Call InitWFMrJN_NAAR_CASE360

'[PAC] - TD162544  Initialize JN_NAAR_CASE360
    sSavDocType = WFM_DOCTYPE.Text
    If WFM_JN_NAAR_CASE360.Text = "" Then
        Call JN_NAAR_CASE360_Change
    Else
        Select Case WFM_JN_NAAR_CASE360.Text
            Case "98K"
                 JN_NAAR_CASE360.Value = "Kap Exp"
            Case "98O"
                 JN_NAAR_CASE360.Value = "OVL"
            Case "98P"
                 JN_NAAR_CASE360.Value = "PIN"
'''''            Case "ZZZ"                                  '[PAC] - 15AUG14
'''''                 JN_NAAR_CASE360.Value = "Onwilligen"   '[PAC] - 15AUG14
        End Select
        cbCase360DocType.Value = sSavDocType
    End If
'[PAC] - TD162544  End Initialize JN_NAAR_CASE360

    arrWerksoorten = Split(WFMData.Common.getField("WFAfdeling", "Werksoorten", "AfdCode", strAfdeling), ",")
    FillComboWRKSOORT arrWerksoorten, WFM_WERKSOORT
    AllWerktypesPERwerksoort (strAfdeling)   ' Vullen van arrAllWKTperWKS
    FillComboWRKtypen arrAllWKTperWKS, WFM_WERKTYPE
    DocTypeAdd "INF Informatieverzoek", csDocOverig

'   Q2 Release 2012 Change
    'If WIViewer.Fields.item("JN_NAAR_CASE360").CALFormField.Value = "98" Then
     '   WFMrJN_NAAR_CASE360_ja.Value = True
    'ElseIf WIViewer.Fields.item("JN_NAAR_CASE360").CALFormField.Value = "" Then
     '   WFMrJN_NAAR_CASE360nee.Value = True
    'End If

    If WFM_DOCTYPE = "" Then WFM_DOCTYPE.ListIndex = 0
    Call EnDisAbleToevoegen(WFM_DOCTYPE, cmdToevoegen)
    If WFM_AANTAL_ZAKEN < 1 Then
        WFM_AANTAL_ZAKEN = 1
    End If
    WFM_DOCTYPE.BackColor = TextboxWhite
End Sub

Public Sub FillComboWRKSOORT(ByRef arrWerksoorten() As String, ByVal cbo As Control)
Dim lngDummy As Long

    cbo.Clear
    cbo.AddItem
    cbo.list(0) = ""
    For lngDummy = LBound(arrWerksoorten) To UBound(arrWerksoorten)
        cbo.AddItem
        cbo.list(lngDummy + 1, 0) = arrWerksoorten(lngDummy)
        cbo.list(lngDummy + 1, 1) = WFMData.Common.getField("WFWerksoort", "WerksoortOmschrijving", "WerksoortAfkorting", arrWerksoorten(lngDummy), "Enabled", "1")
    Next
End Sub

Public Sub FillComboWRKtypen(ByRef arrWerktypen() As String, ByVal cbo As Control)
Dim lngDummy As Long

    cbo.Clear
    cbo.AddItem
    cbo.list(0) = ""
    For lngDummy = LBound(arrWerktypen) To UBound(arrWerktypen)
        cbo.AddItem
        cbo.list(lngDummy + 1, 0) = arrWerktypen(lngDummy)
        cbo.list(lngDummy + 1, 1) = WFMData.Common.getField("WFWerktype", "WerktypeOmschrijving", "Werktype", arrWerktypen(lngDummy), "Enabled", "1")
   Next
End Sub

Private Sub AllWerktypesPERwerksoort(strAfdeling As String)
Dim StrWKTtemp      As String
Dim strWKT          As String
Dim lngDummy, ff    As Long
Dim colalf          As Collection

    On Error GoTo EH
    For lngDummy = LBound(arrWerksoorten) To UBound(arrWerksoorten)
        StrWKTtemp = WFMData.Common.getField("WFAfdeling", arrWerksoorten(lngDummy), "AfdCode", strAfdeling)
        If strWKT = "" Then
              strWKT = StrWKTtemp
        Else
             strWKT = strWKT + "," + StrWKTtemp
        End If
    Next
    arrAllWKTperWKS = Split(strWKT, ",")
    Set colalf = New Collection
    For lngDummy = LBound(arrAllWKTperWKS) To UBound(arrAllWKTperWKS)
        colalf.Add arrAllWKTperWKS(lngDummy)
    Next
'   Sorteren
    Set colalf = SortCollection(colalf)
    For lngDummy = 1 To colalf.Count
        ff = lngDummy - 1
        arrAllWKTperWKS(ff) = colalf.item(lngDummy)
    Next
    Exit Sub

EH:
    DisplayError "AllWerktypesPERwerksoort"
End Sub

Private Sub DocTypeAdd(DocType As String, DocBehandeling As String)
Static i    As Integer

    If i = Empty Then i = 0
    WFM_DOCTYPE.AddItem
    WFM_DOCTYPE.list(i, 0) = DocType
    WFM_DOCTYPE.list(i, 1) = DocBehandeling
    i = i + 1
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Set QueryFrm(objForm)
    Set myForm = objForm
End Property
Public Property Get QueryFrm() As Object
    Set QueryFrm = myForm
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Terminate()
    If Not Me.QueryFrm Is Nothing Then
        Unload Me.QueryFrm
    End If
End Sub

Private Sub WFM_AANTAL_ZAKEN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    NumberCheck WFM_AANTAL_ZAKEN
    WFM_AANTAL_ZAKEN.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Aantal zaken"
End Sub

Private Sub WFM_DOCTYPE_Change()
    fraOVL.Visible = False
    Call showUniekePost
    If WFM_DOCTYPE = "" Then
        WFM_IND_TRIGGER = "BOP"
    Else
        If WFM_DOCTYPE = "EXC unieke POST" Then
            WFM_IND_TRIGGER = "DLN"
        ElseIf WFM_DOCTYPE = "FLX Flex-pensioen" Then   ' [PAC] 13MAR15
            WFM_IND_TRIGGER = "PEN"
        ElseIf WFM_DOCTYPE = "OVL Ingang" Then
            fraOVL.Left = 6
            fraOVL.Visible = True
            WFM_IND_TRIGGER = "OVL"
        Else
            WFM_IND_TRIGGER = Left(WFM_DOCTYPE, 3)
        End If
    End If
    WFM_DOCTYPE.BackColor = TextboxWhite
    Call EnDisAbleToevoegen(WFM_DOCTYPE, cmdToevoegen)
End Sub

Private Sub showUniekePost()
Dim vUser As Variant

    If WFM_DOCTYPE = "EXC unieke POST" Then
        Label41.Visible = True
        Label59.Visible = True
        Label38.Visible = True
        WFM_WERKTYPE.Visible = True
        datDEINDDAT.Visible = True
        If WFMDEINDDAT > "" Then
            datDEINDDAT = WFMDEINDDAT
        Else
            datDEINDDAT = Date
        End If
        If Format(datDEINDDAT, "yyyymmdd") < Format(Date, "yyyymmdd") Then
            datDEINDDAT.MinDate = datDEINDDAT
        Else
            datDEINDDAT.MinDate = Date
        End If
        WFM_BEHANDELAAR.Clear
        For Each vUser In GetUsersPerAfdeling(strAfdeling)
            WFM_BEHANDELAAR.AddItem vUser
        Next
        WFM_BEHANDELAAR.Visible = True
        WFM_BEHANDELAAR.Value = strUser
    Else
        Label41.Visible = False
        Label58.Visible = False
        Label59.Visible = False
        Label38.Visible = False
        WFM_WERKTYPE.Visible = False
        WFM_WERKSOORT.Visible = False
        datDEINDDAT.Visible = False
        WFM_BEHANDELAAR.Visible = False
        WFM_BEHANDELAAR.Value = ""
    End If
End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub

' TD162544 change added
Private Sub InitWFMrJN_NAAR_CASE360()

    JN_NAAR_CASE360.AddItem ""
    JN_NAAR_CASE360.AddItem "PIN"
    JN_NAAR_CASE360.AddItem "Kap Exp"
'''''    JN_NAAR_CASE360.AddItem "Onwilligen"           '[PAC] - 15AUG14
    JN_NAAR_CASE360.AddItem "OVL"

End Sub

Private Sub WFM_NR_AEGAR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Nr. Aegon"
End Sub

Private Sub WFM_NR_KLANT_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    Call getTPnaamnummer(Me)

EH:
    DisplayError "TP nummer "
End Sub

Private Sub WFM_NR_POLIS_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WFM_NR_POLIS.BackColor = TextboxWhite
    PolisNummerCheck WFM_NR_POLIS
    Exit Sub

EH:
    DisplayError "Polisnummer"
End Sub

Private Sub WFM_WERKSOORT_Change()
    On Error GoTo EH
    If Not WFM_WERKSOORT = "" Then
        If Not strAfdeling = "" Then
            arrWKTperWKS = Split(WFMData.Common.getField("WFAfdeling", WFM_WERKSOORT, "AfdCode", strAfdeling), ",")
            FillComboWRKtypen arrWKTperWKS, WFM_WERKTYPE
        End If
        If WFM_WERKTYPE.ListCount = 2 Then WFM_WERKTYPE.ListIndex = 1
    Else
        FillComboWRKtypen arrAllWKTperWKS, WFM_WERKTYPE
        WFM_WERKTYPE = ""
    End If
    Exit Sub

EH:
    DisplayError "Werksoort"
End Sub

Private Sub WFM_WERKTYPE_Change()
Dim strTemp As String
Dim strWeken As String
Dim strDate  As String

    On Error Resume Next
    If Not WFM_WERKTYPE = "" Then
        If WFM_WERKSOORT = "" Then
        ' doordat de werksoort wijzigt wordt de type weer leeggemaakt.. geinig
            strTemp = WFM_WERKTYPE
            WFM_WERKSOORT = WFMData.Common.getField("WFWerktype", "Werksoort", "Werktype", strTemp)
            WFM_WERKTYPE = strTemp
        End If
        strWeken = WFMData.Common.getField("WFWerktype", "Doorlooptijd", "Werktype", WFM_WERKTYPE)
        ' de dat_doc want dat_ontv is nog niet omhoog getild...
        strDate = Date
        datDEINDDAT = Format(DateAdd("ww", strWeken, Format(strDate, "yyyy-mm-dd")), "dd-mm-yyyy")
    End If
    Exit Sub

EH:
    DisplayError "Werktype"

End Sub

Private Sub WFMDDAT_DOC_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_DOC
    WFMDDAT_DOC.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Document datum"
End Sub

Private Sub WFMDGEB_DEELN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDGEB_DEELN
    WFMDGEB_DEELN.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Geb. Deelnemer"
End Sub

Private Sub WFMDDAT_OVL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_OVL
    WFMDDAT_OVL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum Overlijden"
End Sub

Private Sub CheckFields()
    If fraOVL.Visible Then
        If WFM_NAAM_OVL = "" Then
            Err.Raise 12369, , "Naam overledene niet ingevuld."
        End If
        If WFMDDAT_OVL = "" Then
            Err.Raise 12370, , "Geen datum overlijden ingegeven."
        Else
            DateCheck WFMDDAT_OVL
        End If
        If Not optMutOVD.Value And Not optMutOVP.Value And Not optMutOVW.Value Then
            Err.Raise 12371, , "Mutatiesoort niet aangegeven."
        Else
            WFM_MUT_SRT = "OVD"
            If optMutOVP.Value Then WFM_MUT_SRT = "OVP"
            If optMutOVW.Value Then WFM_MUT_SRT = "OVW"
        End If
    End If
    PolisNummerCheck WFM_NR_POLIS
    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR = Format(Val(WFM_NR_AEGAR), "#########")
    If WFM_NR_AEGAR <> Empty And Val(WFM_NR_AEGAR) <> 0 Then
        WFM_NR_AEGAR = Format(Val(WFM_NR_AEGAR), "000000000")
    End If
    DateCheck WFMDGEB_DEELN
    If WFM_NR_POLIS = "" Then
        WFM_NR_POLIS.BackColor = TextboxRed
        Err.Raise 12345, , "Deelnemer nummer is niet ingevuld."
    End If
    If WFMDDAT_DOC = "" Then
        WFMDDAT_DOC.BackColor = TextboxRed
        Err.Raise 12346, , "Document datum is niet ingevuld."
    End If
    DateCheck WFMDDAT_DOC
    If WFM_DOCTYPE.Value = "" Then
        WFM_DOCTYPE.BackColor = TextboxRed
        Err.Raise 12349, , "Document type is niet ingevuld."
    End If
    If WFM_IND_TRIGGER.Value = "" Or WFM_IND_TRIGGER = "BOP" Then
        WFM_IND_TRIGGER.Value = Left(WFM_DOCTYPE, 3)
    End If
End Sub
Attribute VB_Name = "frmEXCBewakenVoorschot"
Attribute VB_Base = "0{09930007-A111-462C-8C16-233C69557841}{15DB4FE6-C5D8-4D47-8F44-BEFAF6936896}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim mydate          As Date
Dim myESWMObjID     As String

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    Exit Sub

EH:
    DisplayError "UserForm_DblClick"
End Sub

Private Sub UserForm_Activate()
Static Init     As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
'   Zelfde formulier bij Excasso en overlijden
    If WFM_IND_TRIGGER = "AOV" Then
        cmdInfo.Visible = False
        cmdGBA.Visible = False
    End If
    If WFMrJN_NAAR_PARKEREN_ja Then
        WFM_REDEN_PARKEREN.Enabled = True
        WFMDRAPPEL.Enabled = True
        lblRedenParkeren.Enabled = True
        lblDatum.Enabled = True
    Else
        WFM_REDEN_PARKEREN.Enabled = False
        lblRedenParkeren.Enabled = False
        lblDatum.Enabled = False
        WFMDRAPPEL.Enabled = False
        WFMDRAPPEL = ""
    End If
    If WFMrJN_NAAR_PARKERENnee.Value Then
        WFM_REDEN_PARKEREN.Enabled = False
        WFMDRAPPEL.Enabled = False
        lblRedenParkeren.Enabled = False
        lblDatum.Enabled = False
        WFMDRAPPEL = ""
    End If
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
 
    End If
    SetCALXFormFields = True
    Exit Function

EH:
  DisplayError "SetCALXFormFields"
End Function

Private Sub cmdInfo_Click()
    On Error GoTo EH
    Select Case WFM_IND_TRIGGER
        Case "PEN"
             Set frmPENInfo.WorkitemViewer = WIViewer
             frmPENInfo.Tag = "1"
             frmPENInfo.Show 1
        Case "OVL"
             Set frm_OVLBeoordelen.WorkitemViewer = WIViewer
             frm_OVLBeoordelen.ESWMObjID = WIViewer.CALClientListItem.Info.objId.InternalName
             GetFields WIViewer, frm_OVLBeoordelen
             frm_OVLBeoordelen.Show 0
    End Select
    Exit Sub

EH:
    DisplayError "PEN info"
End Sub

Private Sub cmdGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappeldatum"
End Sub

Private Sub WFMrJN_777_OMGEZET_ja_Click()
    lblMelding = "naar Archief"
End Sub
Private Sub WFMrJN_777_OMGEZETnee_Click()
    lblMelding = "naar FEP"
End Sub
Private Sub WFMrJN_777_OMGEZETonb_Click()
    lblMelding = ""
End Sub

Private Sub WFMrJN_NAAR_PARKEREN_ja_Change()
    WFM_REDEN_PARKEREN.Enabled = True
    WFMDRAPPEL.Enabled = True
    lblRedenParkeren.Enabled = True
    lblDatum.Enabled = True
    If mydate = "0:00:00" Then
        mydate = DateAdd("m", 3, Date)
    End If
    WFMDRAPPEL.Value = Format(mydate, "dd-mm-yyyy")
End Sub
Private Sub WFMrJN_NAAR_PARKERENnee_Click()
    WFM_REDEN_PARKEREN.Enabled = False
    lblRedenParkeren.Enabled = False
    lblDatum.Enabled = False
    WFMDRAPPEL.Enabled = False
    WFMDRAPPEL = ""
    WFM_REDEN_PARKEREN = ""
End Sub
Attribute VB_Name = "frmEXCContrAdm"
Attribute VB_Base = "0{6D9675C0-CEDF-4E7E-8782-66222FCDB6A5}{909DDED5-5B84-4694-A642-184D38D11089}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer    As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String

Private Sub cmdInfo_Click()
    On Error GoTo EH
    Select Case WFM_IND_TRIGGER
        Case "PEN"
             Set frmPENInfo.WorkitemViewer = WIViewer
             frmPENInfo.Tag = "1"
             frmPENInfo.Show 1
        Case "OVL"
             Set frm_OVLBeoordelen.WorkitemViewer = WIViewer
             frm_OVLBeoordelen.ESWMObjID = WIViewer.CALClientListItem.Info.objId.InternalName
             GetFields WIViewer, frm_OVLBeoordelen
             frm_OVLBeoordelen.Show 0
    End Select
    Exit Sub

EH:
    DisplayError "PEN info"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    
''    Q3 Release
      
    If Not WFMrJN_AANVULLEN_NOMIN_ja.Value And Not WFMrJN_AANVULLEN_NOMINnee.Value Then
        MsgBox "Selecteer Aanvullen nominale verdeling "
        Exit Sub
    End If
    
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Activate()
Dim FiledValue As String
    On Error GoTo EH
    If WFM_IND_TRIGGER = "AOV" Then
        cmdInfo.Visible = False
    End If
    FiledValue = WIViewer.Fields.Find("JN_INVOVERD").CALFormField.Value
    If FiledValue = "J" Then
    WFMrJN_AANVULLEN_NOMIN_ja = 1
    Else
    WFMrJN_AANVULLEN_NOMINnee = 1
    End If
    Exit Sub

EH:
        DisplayError "Activate"
End Sub
Attribute VB_Name = "frmEXCContrBrief"
Attribute VB_Base = "0{8148BF77-0C8F-48B2-A5CF-2DD02D530A94}{D624B7D6-2609-4375-8198-B68BBE0391B2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer    As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String

Private Sub cmdInfo_Click()
    On Error GoTo EH
    Select Case WFM_IND_TRIGGER
        Case "PEN"
             Set frmPENInfo.WorkitemViewer = WIViewer
             frmPENInfo.Tag = "1"
             frmPENInfo.Show 1
        Case "OVL"
             Set frm_OVLBeoordelen.WorkitemViewer = WIViewer
             frm_OVLBeoordelen.ESWMObjID = WIViewer.CALClientListItem.Info.objId.InternalName
             GetFields WIViewer, frm_OVLBeoordelen
             frm_OVLBeoordelen.Show 0
    End Select
    Exit Sub

EH:
    DisplayError "Info"
End Sub

Private Sub cmdGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub UserForm_Activate()
Static Init     As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True

    If WFM_NAAM_PARTNER_ZAAK <> Empty Then
        lblNaamPartner.Visible = True
        WFM_NAAM_PARTNER_ZAAK.Visible = True
    End If
'   Als de caesar brief
    If WFM_JN_VERV_BRIEF_AANG = "J" And WFM_JN_CAES_BRIEF_VERW = "J" Then
         fraCSBRIEF.Visible = True
    End If
    If WFM_JN_CAES_BRIEF_VERW = "N" Then
        WFMrJN_VERV_BRIEF_AANG_ja = True
        frahandbrief.Visible = True
    End If
'   Bij wezen geen beoordelingsscherm
    If WFM_IND_TRIGGER = "WZP" Then
        cmdInfo.Visible = False
    End If
    If WFM_IND_TRIGGER <> "PEN" Then
        lblBriefVerz.Caption = "Brief behandeld"
    End If
'   Voor kap toon terug
    If WFM_IND_TRIGGER = "KAP" Or WFM_IND_TRIGGER = "KEP" Or WFM_IND_TRIGGER = "KEO" Then
        frakap.Visible = True
    End If
    If WFM_IND_TRIGGER = "OVL" Then
        lblflex.Visible = False
        WFMrJN_FLEXPENSIOEN_JA.Visible = False
        WFMrJN_FLEXPENSIOENnee.Visible = False
        WFMrJN_FLEXPENSIOENonb.Visible = False
    End If
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    Exit Sub

EH:
    DisplayError "UserForm_DblClick"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Attribute VB_Name = "frmEXCContrUitkering"
Attribute VB_Base = "0{068C62DD-2BE9-489B-A4F8-2E1962A4CAFB}{D25FC6C0-0B0A-4B11-9565-948CC73085FC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String
Dim myPolOver       As CALFormField
Dim mydate          As Date
Dim strAfdeling     As String
Private Declare Sub keybd_event Lib "user32" (ByVal bVk As Byte, ByVal bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)

Private Sub cmdInfo_Click()
    On Error GoTo EH
    Select Case WFM_IND_TRIGGER
        Case "PEN"
             Set frmPENInfo.WorkitemViewer = WIViewer
             frmPENInfo.Tag = "1"
             frmPENInfo.Show 1
        Case "OVL"
             Set frm_OVLBeoordelen.WorkitemViewer = WIViewer
             frm_OVLBeoordelen.ESWMObjID = WIViewer.CALClientListItem.Info.objId.InternalName
             GetFields WIViewer, frm_OVLBeoordelen
             frm_OVLBeoordelen.Show 0
    End Select
    Exit Sub

EH:
    DisplayError "Info"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
'   Gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub UserForm_Activate()
Static Init         As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    lbTemplates.AddItem "PIN Ontvangst PEN"
    Call checkRadios
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    Exit Sub

EH:
    DisplayError "UserForm_DblClick"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub checkRadios()
Dim result As Boolean
Dim result2 As Boolean

    result = True
    result = result And Not WFMrJN_HTEKEN_BEGUNSTonb
    result = result And Not WFMrJN_HTEKEN_PARTNERonb
    result = result And Not WFMrJN_BANKREK_NRonb
    result = result And Not WFMrJN_BURGER_NRonb
    result = result And Not WFMrJN_NATIONALITEITonb
    result = result And Not WFMrJN_UITRUIL_NPonb
    result = result And Not WFMrJN_FLEX_PENSIOENonb
    result = result And Not WFMrJN_AFSTAND_NPonb
    result = result And Not WFMrJN_BEWIJS_IN_LEVENonb
    result = result And Not WFMrJN_IBAN_SWIFTCODEonb
    result = result And Not WFMrJN_VERKL_KINDonb
    result = result And Not WFMrJN_VERKL_ERFRECHTonb
    result = result And Not WFMrJN_ECHTSCHEID_CONVonb
    result = result And Not WFMrJN_LEGITIMATIEonb
    WFMrJN_TOTAAL_ja.Enabled = result
    WFMrJN_TOTAALnee.Enabled = result
    WFMrJN_TOTAALonb.Enabled = result
'   Het volgende was niet afgesproken, het zorgt ervoor dat de totaalstand automatisch gaat
'   Als het niet gewenst is, dan het volgende blok uitcommentari|fffd|ren
    result2 = True
    result2 = result2 And Not WFMrJN_HTEKEN_BEGUNSTnee
    result2 = result2 And Not WFMrJN_HTEKEN_PARTNERnee
    result2 = result2 And Not WFMrJN_BANKREK_NRnee
    result2 = result2 And Not WFMrJN_BURGER_NRnee
    result2 = result2 And Not WFMrJN_NATIONALITEITnee
    result2 = result2 And Not WFMrJN_UITRUIL_NPnee
    result2 = result2 And Not WFMrJN_FLEX_PENSIOENnee
    result2 = result2 And Not WFMrJN_AFSTAND_NPnee
    result2 = result2 And Not WFMrJN_BEWIJS_IN_LEVENnee
    result2 = result2 And Not WFMrJN_IBAN_SWIFTCODEnee
    result2 = result2 And Not WFMrJN_VERKL_KINDnee
    result2 = result2 And Not WFMrJN_VERKL_ERFRECHTnee
    result2 = result2 And Not WFMrJN_ECHTSCHEID_CONVnee
    result2 = result2 And Not WFMrJN_LEGITIMATIEnee
    WFMrJN_TOTAAL_ja.Enabled = False
    WFMrJN_TOTAALnee.Enabled = False
    WFMrJN_TOTAALonb.Enabled = False
    WFMrJN_TOTAAL_ja.Value = result2
    WFMrJN_TOTAALnee.Value = Not result2
    If Not result Then WFMrJN_TOTAALonb.Value = True
    If WFMrJN_TOTAALonb.Value Then
        Status.Caption = "De vragen zijn nog niet allemaal beantwoord"
        Conclusie.Caption = ""
        Status.ForeColor = &HE0&
        Conclusie.ForeColor = vbBlack
    ElseIf WFMrJN_TOTAAL_ja.Value Then
        Status.Caption = "Alle vragen zijn beantwoord"
        Conclusie.Caption = "De stukken zijn compleet"
        Status.ForeColor = &H8000&
        Conclusie.ForeColor = &H8000&
    ElseIf WFMrJN_TOTAALnee.Value Then
        Status.Caption = "Alle vragen zijn beantwoord"
        Conclusie.Caption = "De stukken zijn incompleet"
        Status.ForeColor = &H8000&
        Conclusie.ForeColor = &HE0&
    End If
End Sub

Private Sub WFMrJN_HTEKEN_BEGUNST_ja_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_HTEKEN_BEGUNSTnee_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_HTEKEN_BEGUNSTonb_Click(): Call checkRadios: End Sub

Private Sub WFMrJN_HTEKEN_PARTNER_ja_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_HTEKEN_PARTNERnee_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_HTEKEN_PARTNERnvt_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_HTEKEN_PARTNERonb_Click(): Call checkRadios: End Sub

Private Sub WFMrJN_BANKREK_NR_ja_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_BANKREK_NRnee_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_BANKREK_NRonb_Click(): Call checkRadios: End Sub

Private Sub WFMrJN_BURGER_NR_ja_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_BURGER_NRnee_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_BURGER_NRonb_Click(): Call checkRadios: End Sub

Private Sub WFMrJN_NATIONALITEIT_ja_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_NATIONALITEITnee_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_NATIONALITEITonb_Click(): Call checkRadios: End Sub

Private Sub WFMrJN_UITRUIL_NP_ja_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_UITRUIL_NPnee_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_UITRUIL_NPnvt_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_UITRUIL_NPonb_Click(): Call checkRadios: End Sub

Private Sub WFMrJN_FLEX_PENSIOEN_ja_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_FLEX_PENSIOENnee_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_FLEX_PENSIOENonb_Click(): Call checkRadios: End Sub

Private Sub WFMrJN_AFSTAND_NP_ja_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_AFSTAND_NPnee_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_AFSTAND_NPnvt_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_AFSTAND_NPonb_Click(): Call checkRadios: End Sub

Private Sub WFMrJN_BEWIJS_IN_LEVEN_ja_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_BEWIJS_IN_LEVENnee_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_BEWIJS_IN_LEVENnvt_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_BEWIJS_IN_LEVENonb_Click(): Call checkRadios: End Sub

Private Sub WFMrJN_IBAN_SWIFTCODE_ja_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_IBAN_SWIFTCODEnee_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_IBAN_SWIFTCODEnvt_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_IBAN_SWIFTCODEonb_Click(): Call checkRadios: End Sub

Private Sub WFMrJN_VERKL_KIND_ja_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_VERKL_KINDnee_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_VERKL_KINDnvt_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_VERKL_KINDonb_Click(): Call checkRadios: End Sub

Private Sub WFMrJN_VERKL_ERFRECHT_ja_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_VERKL_ERFRECHTnee_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_VERKL_ERFRECHTnvt_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_VERKL_ERFRECHTonb_Click(): Call checkRadios: End Sub

Private Sub WFMrJN_ECHTSCHEID_CONV_ja_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_ECHTSCHEID_CONVnee_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_ECHTSCHEID_CONVnvt_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_ECHTSCHEID_CONVonb_Click(): Call checkRadios: End Sub

Private Sub WFMrJN_LEGITIMATIE_ja_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_LEGITIMATIEnee_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_LEGITIMATIEnvt_Click(): Call checkRadios: End Sub
Private Sub WFMrJN_LEGITIMATIEonb_Click(): Call checkRadios: End Sub
Attribute VB_Name = "frmEXCControleVoorschot"
Attribute VB_Base = "0{4507C603-47EE-4F52-83A5-81D4AE76C667}{59C48635-7E4D-45DA-8948-BA986A737294}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer    As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String

Private Sub cmdInfo_Click()
    On Error GoTo EH
    Select Case WFM_IND_TRIGGER
        Case "PEN"
             Set frmPENInfo.WorkitemViewer = WIViewer
             frmPENInfo.Tag = "1"
             frmPENInfo.Show 1
        Case "OVL"
             Set frm_OVLBeoordelen.WorkitemViewer = WIViewer
             frm_OVLBeoordelen.ESWMObjID = WIViewer.CALClientListItem.Info.objId.InternalName
             GetFields WIViewer, frm_OVLBeoordelen
             frm_OVLBeoordelen.Show 0
    End Select
    Exit Sub

EH:
    DisplayError "PEN info"
End Sub

Private Sub cmdGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then

    End If
    SetCALXFormFields = True
    Exit Function

EH:
  DisplayError "SetCALXFormFields"
End Function

Private Sub UserForm_Activate()
Static Init     As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
'   Zelfde formulier bij Excasso en overlijden
    If WFM_IND_TRIGGER = "AOV" Then
        cmdInfo.Visible = False
        cmdGBA.Visible = False
    End If
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    Exit Sub

EH:
    DisplayError "UserForm_DblClick"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Attribute VB_Name = "frmEXCCreateFolder"
Attribute VB_Base = "0{3A6518C1-BAE2-4C66-AB93-126C357D1641}{22A224C9-A2B2-4B44-B14F-691AF48B704A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer As WFDWorkitem.WorkitemViewer

Private Sub cmdMaakFolder_Click()
    On Error GoTo EH
    Me.Succes = "0"
    NumberCheck tbNr_aegar
    If tbNr_aegar = "" Then
        tbNr_aegar.BackColor = TextboxRed
        Err.Raise 12345, , "Aegarnummer is niet ingevuld."
    End If
    Me.MousePointer = fmMousePointerHourGlass
    DoEvents
    If CreateAndCopyFolder(WIViewer.CALClientListItem.OpenedItem, tbNaam, tbNr_aegar, txtTrigger) Then
        Me.Succes = "1"
        Me.Hide
    End If
    Me.MousePointer = fmMousePointerDefault
    DoEvents
    Exit Sub

EH:
    Me.MousePointer = fmMousePointerDefault
    DoEvents
    DisplayError "Button Maak Folder"
End Sub

Private Sub cmdTerug_Click()
    Me.Hide
End Sub

Private Sub tbNr_aegar_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    NumberCheck tbNr_aegar
    tbNr_aegar.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Nr. Aegar"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
  Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property

Attribute VB_Name = "frmEXCDivPost"
Attribute VB_Base = "0{D3A21920-703C-498E-89DD-FB82D769EDD5}{9AD2D6C8-6D0F-40A9-B924-D6245D3D0438}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myStatus            As CALFormField
Dim myESWMObjID         As String
Dim bIsCollalg          As Boolean
Dim strUser             As String
Dim strAfdeling         As String ' Let op deze wordt tot nu toe alleen gebruikt voor de PIN(EXC) uitzondering en wordt dus, ongeacht user of bestemming, altijd gevuld met EXC. Niet zomaar voor andere doeleinden gebruiken!
Dim arrWerksoorten()    As String
Dim arrWKTperWKS()      As String
Dim arrAllWKTperWKS()   As String

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
'   MaBr de PIN(EXC) folders hebben geen status veld
    If bIsCollalg Then
        If optStatParkeren = True Then
            myStatus.Value = "Parkeren"
         Else
            myStatus.Value = ""
         End If
    End If
    WFMDEINDDAT = datDEINDDAT
    If optStatParkeren Then
        If WFM_REDEN_PARKEREN = "" Then
            Err.Raise 12345, , "Er moet een Reden Parkeren worden opgegeven!"
            GoTo EH
            Exit Sub
        ElseIf Not WFM_REDEN_PARKEREN.MatchFound Then
            WFM_REDEN_PARKEREN.BackColor = vbRed
            Err.Raise 12345, , "Deze Reden Parkeren is niet geldig!"
            GoTo EH
        End If
    End If
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub OptionButton2_Click()
    optStatParkerenNee.Value = True
End Sub

Private Sub optStatParkeren_Click()
Dim mydate
Dim arrRedenParkeren()  As String

'   MaBr the PIN(EXC) folders
    On Error GoTo EH
    If IsCollAlg(WIViewer.CALClientListItem.OpenedItem.Class) Then
        WFMrJN_PARKINT_ja.Enabled = True
        WFMrJN_PARKINTnee.Enabled = True
        WFM_REDEN_PARKEREN.Enabled = True
        WFMDRAPPEL.Enabled = True
        lblRedenParkeren.Enabled = True
        lblDatum.Enabled = True
        If WIViewer.CALClientListItem.Info.SourceWorkstep = "98A03 Div. post" Then
            mydate = DateAdd("d", 14, Date)
            WFMDRAPPEL.Value = Format(mydate, "dd-mm-yyyy")
        End If
    Else
        MsgBox "Deze PIN map kan niet naar parkeren gestuurd worden.", vbOKOnly + vbExclamation
        optStatParkerenNee.Value = True
    End If
    If WFM_PARKEERSOORT = "" Then WFM_PARKEERSOORT = "EXT"
    If AFDELING > "" Then
        WFM_REDEN_PARKEREN.Visible = True
        arrRedenParkeren = Split(WFMData.Common.getField("WFAfdeling", "RedenParkeren", "AfdCode", AFDELING), ",")
        FillComboRedenParkeren arrRedenParkeren, WFM_REDEN_PARKEREN
    End If
    If AFDELING = "" Or WFM_REDEN_PARKEREN.ListCount < 2 Then
        WFM_REDEN_PARKEREN.Visible = False
    End If
    WFMrJN_AFGEHANDELDnee.Value = True
    Exit Sub

EH:
    DisplayError "Parkeren error"
End Sub

Private Sub optStatParkerenNee_Click()
    WFMDRAPPEL = ""
    WFM_REDEN_PARKEREN = ""
    WFMrJN_PARKINT_ja.Enabled = False
    WFMrJN_PARKINTnee.Enabled = False
    WFM_REDEN_PARKEREN.Enabled = False
    WFMDRAPPEL.Enabled = False
    lblRedenParkeren.Enabled = False
    lblDatum.Enabled = False
End Sub
Private Sub UserForm_Activate()
Dim vUser       As Variant

    On Error GoTo EH
    strUser = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "BEHANDELAAR") 'WFM_BEHANDELAAR.Value
    strAfdeling = "PIN" ' werksoort en werktype worden vast gevuld, maar alleen getoond bij PIN
'   MaBr de PIN(EXC) folders
    bIsCollalg = IsCollAlg(WIViewer.CALClientListItem.OpenedItem.Class)
    If bIsCollalg Then
        Set myStatus = WIViewer.Fields.Find("STATUS").CALFormField
        If myStatus = "Parkeren" Then
            optStatParkeren.Value = True
            FraDivPost.Visible = True
        End If
    End If
    AFDELING = "PIN"
    WFM_WERKTYPE.ColumnCount = 2
    WFM_WERKTYPE.BoundColumn = 1
    WFM_WERKTYPE.TextColumn = -1
    WFM_WERKTYPE.ColumnWidths = "30;30"
    WFM_WERKSOORT.ColumnCount = 2
    WFM_WERKSOORT.TextColumn = -1
    WFM_WERKSOORT.ColumnWidths = "30;30"
    WFM_BEHANDELAAR.ColumnCount = 2
    WFM_BEHANDELAAR.BoundColumn = 1
    WFM_BEHANDELAAR.TextColumn = -1
    WFM_BEHANDELAAR.ColumnWidths = "50;0"
    arrWerksoorten = Split(WFMData.Common.getField("WFAfdeling", "Werksoorten", "AfdCode", strAfdeling), ",")
    FillComboWRKSOORT arrWerksoorten, WFM_WERKSOORT
    AllWerktypesPERwerksoort (strAfdeling)   ' Vullen van arrAllWKTperWKS
    If WFM_WERKSOORT = "" Then
        FillComboWRKtypen arrAllWKTperWKS, WFM_WERKTYPE
    Else
        arrWKTperWKS = Split(WFMData.Common.getField("WFAfdeling", WFM_WERKSOORT, "AfdCode", strAfdeling), ",")
        FillComboWRKtypen arrWKTperWKS, WFM_WERKTYPE
    End If
    WFM_BEHANDELAAR.Clear
    For Each vUser In GetUsersPerAfdeling(strAfdeling)
        WFM_BEHANDELAAR.AddItem vUser
    Next
    If WFMDEINDDAT > "" Then datDEINDDAT = WFMDEINDDAT
    If Not optStatParkeren.Value Then Call optStatParkerenNee_Click
    Exit Sub

EH:
    DisplayError "Userform activate"
End Sub

Public Sub FillComboRedenParkeren(ByRef arrRedenParkeren() As String, ByVal cbo As Control)
Dim lngDummy        As Long
Dim lngTeller       As Long
Dim strReden        As String
Dim blnAlert        As Boolean
Dim strExtra        As String

    blnAlert = True
    If WFMrJN_PARKINT_ja Then
        strExtra = "INT"
    Else
        strExtra = "EXT"
    End If
    cbo.Clear
    cbo.AddItem
    cbo.list(0) = "" ' lege keuze ervoor
    lngTeller = 0
    For lngDummy = LBound(arrRedenParkeren) To UBound(arrRedenParkeren)
        If WFMData.Common.getField("WFRedenParkeren", "Extra", "RedenParkeren", arrRedenParkeren(lngDummy)) = strExtra Then
            If WFMData.Common.getField("WFRedenParkeren", "Enabled", "RedenParkeren", arrRedenParkeren(lngDummy)) = "1" Then
                strReden = WFMData.Common.getField("WFRedenParkeren", "RedenParkerenOmschrijving", "RedenParkeren", arrRedenParkeren(lngDummy))
                cbo.AddItem
                cbo.list(lngTeller + 1, 0) = strReden
                cbo.list(lngTeller + 1, 1) = strReden
                If cbo = strReden Then blnAlert = False
                lngTeller = lngTeller + 1
            End If
        End If
    Next
    If cbo = "" Then blnAlert = False ' een lege keuze is geen reden tot geel
    If blnAlert Then
        cbo.BackColor = vbRed ' dus alleen als er een onbekende waarde wordt aangetroffen (b.v. INT of EXT)
    Else
        cbo.BackColor = vbWhite
    End If
End Sub

Public Sub FillComboWRKSOORT(ByRef arrWerksoorten() As String, ByVal cbo As Control)
Dim lngDummy        As Long

    cbo.Clear
    cbo.AddItem
    cbo.list(0) = ""
    For lngDummy = LBound(arrWerksoorten) To UBound(arrWerksoorten)
        cbo.AddItem
        cbo.list(lngDummy + 1, 0) = arrWerksoorten(lngDummy)
        cbo.list(lngDummy + 1, 1) = WFMData.Common.getField("WFWerksoort", "WerksoortOmschrijving", "WerksoortAfkorting", arrWerksoorten(lngDummy), "Enabled", "1")
    Next
End Sub

Public Sub FillComboWRKtypen(ByRef arrWerktypen() As String, ByVal cbo As Control)
Dim lngDummy        As Long
    
    cbo.Clear
    cbo.AddItem
    cbo.list(0) = ""
    For lngDummy = LBound(arrWerktypen) To UBound(arrWerktypen)
        cbo.AddItem
        cbo.list(lngDummy + 1, 0) = arrWerktypen(lngDummy)
        cbo.list(lngDummy + 1, 1) = WFMData.Common.getField("WFWerktype", "WerktypeOmschrijving", "Werktype", arrWerktypen(lngDummy), "Enabled", "1")
   Next
End Sub

Private Sub AllWerktypesPERwerksoort(strAfdeling As String)
Dim StrWKTtemp      As String
Dim strWKT          As String
Dim lngDummy, ff    As Long
Dim colalf          As Collection

    On Error GoTo EH
'   Mabr arrAllWKTperWKS al een keer gevuld
    For lngDummy = LBound(arrWerksoorten) To UBound(arrWerksoorten)
        StrWKTtemp = WFMData.Common.getField("WFAfdeling", arrWerksoorten(lngDummy), "AfdCode", strAfdeling)
        If strWKT = "" Then
            strWKT = StrWKTtemp
        Else
            strWKT = strWKT + "," + StrWKTtemp
        End If
    Next
    arrAllWKTperWKS = Split(strWKT, ",")
    Set colalf = New Collection
    For lngDummy = LBound(arrAllWKTperWKS) To UBound(arrAllWKTperWKS)
        colalf.Add arrAllWKTperWKS(lngDummy)
    Next
'   Sorteren
    Set colalf = SortCollection(colalf)
    For lngDummy = 1 To colalf.Count
        ff = lngDummy - 1
        arrAllWKTperWKS(ff) = colalf.item(lngDummy)
    Next
    Exit Sub

EH:
    DisplayError "AllWerktypesPERwerksoort"
End Sub

Private Sub WFM_WERKSOORT_Change()
    On Error GoTo EH
    If Not WFM_WERKSOORT = "" Then
'       Mabr werktypen vullen / weghalen
        If Not strAfdeling = "" Then
            arrWKTperWKS = Split(WFMData.Common.getField("WFAfdeling", WFM_WERKSOORT, "AfdCode", strAfdeling), ",")
            FillComboWRKtypen arrWKTperWKS, WFM_WERKTYPE
        End If
        If WFM_WERKTYPE.ListCount = 2 Then WFM_WERKTYPE.ListIndex = 1
    Else ' mabr werksoorten leeggemaakt
        FillComboWRKtypen arrAllWKTperWKS, WFM_WERKTYPE
        WFM_WERKTYPE = ""
    End If
    Exit Sub

EH:
    DisplayError "Werksoort"
End Sub

Private Sub WFM_WERKTYPE_Change()
Dim strTemp     As String
Dim strWeken    As String
Dim strDate     As String

    On Error Resume Next
    If Not WFM_WERKTYPE = "" Then
        If WFM_WERKSOORT = "" Then
'           Doordat de werksoort wijzigt wordt de type weer leeggemaakt.. geinig
            strTemp = WFM_WERKTYPE
            WFM_WERKSOORT = WFMData.Common.getField("WFWerktype", "Werksoort", "Werktype", strTemp)
            WFM_WERKTYPE = strTemp
        End If
        strWeken = WFMData.Common.getField("WFWerktype", "Doorlooptijd", "Werktype", WFM_WERKTYPE)
'       De dat_doc want dat_ontv is nog niet omhoog getild...
        strDate = Date
        datDEINDDAT = Format(DateAdd("ww", strWeken, Format(strDate, "yyyy-mm-dd")), "dd-mm-yyyy")
    End If
    Exit Sub

EH:
    DisplayError "Werktype"
End Sub

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappel datum"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub WFMrJN_AFGEHANDELD_ja_Click()
    optStatParkerenNee.Value = True
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub WFMrJN_PARKINT_ja_Click()
    If WFM_PARKEERSOORT = "" Or WFM_PARKEERSOORT = "EXT" Then WFM_PARKEERSOORT = "INT"
    Call optStatParkeren_Click
End Sub
Private Sub WFMrJN_PARKINTnee_Click()
    If WFM_PARKEERSOORT = "" Or WFM_PARKEERSOORT = "INT" Then WFM_PARKEERSOORT = "EXT"
    Call optStatParkeren_Click
End Sub
Attribute VB_Name = "frmEXCFiatteren"
Attribute VB_Base = "0{E56362B4-8D00-4C2F-87D6-A4619FBE2D7C}{CBBA11DD-2E34-466D-88C3-1CAC96738E79}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String
Dim myPolOver       As CALFormField

Private Sub cmdGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub cmdInfo_Click()
    On Error GoTo EH
    Select Case WFM_IND_TRIGGER
        Case "PEN"
             Set frmPENInfo.WorkitemViewer = WIViewer
             frmPENInfo.Tag = "1"
             frmPENInfo.Show 1
        Case "OVL"
             Set frm_OVLBeoordelen.WorkitemViewer = WIViewer
             frm_OVLBeoordelen.ESWMObjID = WIViewer.CALClientListItem.Info.objId.InternalName
             GetFields WIViewer, frm_OVLBeoordelen
             frm_OVLBeoordelen.Show 0
        Case "AOV"
             Set frmAOVGegevens.WorkitemViewer = Me.WorkitemViewer
             frmAOVGegevens.DisAbleControls
             frmAOVGegevens.Show vbModal
             Set frmAOVGegevens = Nothing
    End Select
    Exit Sub

EH:
    DisplayError "PEN info"
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub UserForm_Activate()
Static Init     As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    If WFM_JN_777_GEMAAKT = "J" Then fra777.Visible = True
    If WFM_JN_VTU_GEMAAKT = "J" Then fraVTU.Visible = True
    If WFM_JN_VOORSCHOT = "J" Then FraVSP.Visible = True
    If WFM_JN_UITRUIL = "J" Then Frauitruil.Visible = True
    If WFM_JN_OVERIGE_BEHAND = "J" Then FraOverigen.Visible = True
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    If WFM_IND_TRIGGER = "AOV" Then
        cmdInfo.Visible = False
        cmdGBA.Visible = False
    End If
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    Exit Sub

EH:
    DisplayError "UserForm_DblClick"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Attribute VB_Name = "frmEXCNabestaanden"
Attribute VB_Base = "0{914AE754-A9D0-4CB3-9265-D8A45D200965}{9191EC7F-65AC-4561-ADF6-6025C81EEFFB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim NrFoldersCreated As Integer
Dim bOVL, bWZP As Boolean
Dim WIViewer As WFDWorkitem.WorkitemViewer

Private Sub cmdMaakDossier_Click()
    Call MaakDossier(Me.lvRegels.SelectedItem)
End Sub

Private Sub lvRegels_DblClick()
    On Error GoTo EH
    If Not Me.lvRegels.SelectedItem Is Nothing Then
        MaakDossier Me.lvRegels.SelectedItem
    End If
    Call EnableMaakDossier
    Exit Sub

EH:
    DisplayError "ListView DblClick"
End Sub

Private Sub lvRegels_Click()
    Call EnableMaakDossier
End Sub

Private Sub cmdSluiten_Click()
    Unload Me
End Sub

Private Function SetCALXFormFields() As Boolean
Dim itmx As ListItem
Dim SVB As Field

    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        ' deze velden komen niet op ieder formulier voor
        'WFMSaveField WIViewer, tbAANTAL_PARTNERS, 2
        SetCALXFormFields = True
    End If
    Exit Function

EH:
    DisplayError ("SetCALXFormFields")
End Function

Private Function GetCALXFormFields() As Boolean
Dim itmx As ListItem
Dim SVB As Field

    On Error GoTo EH
    GetCALXFormFields = False
    CALGetTable lvRegels, WIViewer.Fields.Find("_TABLE_SVB")
    If bOVL Or bWZP Then
        CALGetTable lvRegels, WIViewer.Fields.Find("_TABLE_KINDEREN"), False
    End If
    Call WFMGetField(WIViewer, tbAANTAL_PARTNERS, 2)
    GetCALXFormFields = True
    Exit Function

EH:
    DisplayError "GetCALXFormFields"
End Function

Private Sub AddResultField(ListView As ListView, name, Caption, Witdh, Align, ResultOnly As Boolean)
Dim myColHeader As ColumnHeader

    Set myColHeader = ListView.ColumnHeaders.Add(, name, Caption, Witdh, Align)
    myColHeader.Tag = ResultOnly

End Sub

Private Sub MaakDossier(ByVal item As MSComctlLib.ListItem)
Dim MaakFolder      As Object
Dim sTmpKenmerk     As String

    Set MaakFolder = New frmEXCCreateFolder
    Set MaakFolder.WorkitemViewer = WIViewer
    If Trim(item.SubItems(3)) <> "" Then
        sTmpKenmerk = UCase(WIViewer.Fields.Find("IND_TRIGGER").CALFormField.Value)
        MaakFolder.tbNaam = item.SubItems(2) & " " & item.SubItems(3)
        If InStr("AFD*AFE", sTmpKenmerk) > 0 Then
            MaakFolder.txtTrigger = sTmpKenmerk     'AFD en AFE behouden hun eigen kenmerk
        Else
            MaakFolder.txtTrigger = "PEN"
        End If
    End If
    If Trim(item.SubItems(5)) <> "" Then
        MaakFolder.tbNaam = item.SubItems(4) & " " & item.SubItems(5)
        MaakFolder.txtTrigger = "WZP"
    End If
    MaakFolder.tbNr_aegar = item.SubItems(6)
    MaakFolder.Show 1
    If MaakFolder.Succes = "1" Then
        NrFoldersCreated = NrFoldersCreated + 1
        item.SubItems(1) = "X"
    End If
    item.SubItems(6) = MaakFolder.tbNr_aegar
    Unload MaakFolder
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    NrFoldersCreated = 0
    If Me.Tag = "WZP" Then
        bWZP = True
    ElseIf WIViewer.Fields.Find("IND_TRIGGER").CALFormField.Value = "OVL" Then
        bOVL = True
        lblTekst.Visible = True
    Else
        Me.Caption = "Aanmaken folder voor ex-partners"
    End If
    Me.lvRegels.ColumnHeaders.Add , , , 0, 0 ', Alignment:=1
    AddResultField lvRegels, "JN_FOLDER_AANM", "OK", 45, 0, False
    If Not bWZP Then
        AddResultField lvRegels, "VOORLETTERS", "Voorl. partner", 35, 0, False
        AddResultField lvRegels, "NAAM_PARTNER", "Naam partner", 126, 0, False
    Else
        AddResultField lvRegels, "VOORLETTERS", "Voorl. partner", 0, 0, False
        AddResultField lvRegels, "NAAM_PARTNER", "Naam partner", 0, 0, False
    
    End If
    If bOVL Or bWZP Then
        AddResultField lvRegels, "VOORLETTERS_KIND", "Voorl. kind", 55, 0, False
        AddResultField lvRegels, "NAAM_KIND", "Naam kind", 126, 0, False
    Else
        AddResultField lvRegels, "VOORLETTERS_KIND", "Voorl. kind", 0, 0, False
        AddResultField lvRegels, "NAAM_KIND", "Naam kind", 0, 0, False
    End If
    AddResultField lvRegels, "AEGAR_NR", "Aegarnr", 126, 0, False
    GetCALXFormFields
    Call EnableMaakDossier
    Me.lvRegels.Refresh
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub EnableMaakDossier()
    If Not Me.lvRegels.SelectedItem Is Nothing Then
        If Me.lvRegels.SelectedItem.Index > 0 Then
            cmdMaakDossier.Enabled = True
            Exit Sub
        End If
    End If
    cmdMaakDossier.Enabled = False
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
  Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property
Attribute VB_Name = "frmEXCRegistratie"
Attribute VB_Base = "0{F17113E5-34A1-4992-AE87-3DF7F4F86C2F}{AD616056-2A56-46B8-9FE7-1D9C1045E4B3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim HostForm As Object
Dim myESWMObjID As String

Private Sub cmdExtraScreen_Click()
On Error GoTo EH
        MousePointer = fmMousePointerHourGlass
        DoEvents
    If YetAnotherExtralink(WIViewer, WFM_NR_POLIS.Text) Then
        Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
        cmdScreen_Click
    End If
    MousePointer = fmMousePointerDefault
Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Screenscraping niet gelukt!"
End Sub

Private Sub cmdScreen_Click()

On Error GoTo EH
    
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
    MousePointer = fmMousePointerDefault

Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Open eerst het juiste CAESAR scherm (OHUP)."

End Sub

Private Sub UserForm_Terminate()
    If Not Me.QueryFrm Is Nothing Then
        Unload Me.QueryFrm
    End If
End Sub
Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub
Private Sub cmdOpslaan_Click()
Dim myIdent As String, myIndent As String

On Error GoTo EH

    Call CheckFields
    myIdent = WFM_NR_POLIS + WFM_IND_TRIGGER
    If WFM_ZAAK_IDENT_NR <> myIdent Then
        WFM_ZAAK_IDENT_NR = myIdent
    End If
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)

Exit Sub

EH:
    DisplayError "Doorsturen"

End Sub
Private Sub CheckFields()

    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR = Format(Val(WFM_NR_AEGAR), "#########")
    If WFM_NR_AEGAR <> Empty And Val(WFM_NR_AEGAR) <> 0 Then _
        WFM_NR_AEGAR = Format(Val(WFM_NR_AEGAR), "000000000")

    DateCheck WFMDDAT_DOC
    DateCheck WFMDDAT_ONTV
    DateCheck WFMDGEB_DEELN
    
    If WFM_NR_POLIS = "" Then
        WFM_NR_POLIS.BackColor = TextboxRed
        Err.Raise 12345, , "Deelnemer nummer is niet ingevuld."
    End If
    
    If WFMDDAT_DOC = "" Then
        WFMDDAT_DOC.BackColor = TextboxRed
        Err.Raise 12345, , "Datum document is niet ingevuld."
    End If

End Sub

Private Sub cmdToevoegen_Click()
Dim mobjQueryResults As CALQueryResults
Dim myQueryFrm As Object

On Error GoTo EH

    
    If WFM_NR_POLIS = "" Then
        WFM_NR_POLIS.BackColor = TextboxRed
        Err.Raise 12345, , "Deelnemer nummer is niet ingevuld."
    End If
    Call CheckFields
    
    If Not WorkflowSave(WIViewer) Then Exit Sub
    
    ' zoeken naar folder met zelfde deelnemer nummer.
    ' na keuze van folder wordt document hierin geimporteerd.
    If Not Me.QueryFrm Is Nothing Then
       Me.QueryFrm.Show 0
       Exit Sub
    End If
    
    Set Me.QueryFrm = New frmZoekImport
    Set myQueryFrm = Me.QueryFrm
    Set myQueryFrm.WorkitemViewer = Me.WorkitemViewer
    Set myQueryFrm.ParentForm = Me
    
    myQueryFrm.Show 0


Exit Sub

EH:
    If Err.Number = 12349 Then
        Resume Next ' komt niet meer terug in checkfields
        WFM_DOCTYPE.BackColor = TextboxWhite
    End If

    DisplayError "Toevoegen"

End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

If Init = True Then Exit Sub

    Init = True
    
    
    WFM_DOCTYPE.ColumnCount = 2
    WFM_DOCTYPE.BoundColumn = 1
    WFM_DOCTYPE.TextColumn = -1
    WFM_DOCTYPE.ColumnWidths = ";0"
    
    ' Doctype, werksrt
    DocTypeAdd "", csDocDummy
    DocTypeAdd "XXX Brief Caesar", csDocRendezvous
    DocTypeAdd "PEN BS-Formulier", csDocRendezvous
    
    Call EnDisAbleToevoegen(WFM_DOCTYPE, cmdToevoegen)
    
End Sub
Private Sub DocTypeAdd(DocType As String, DocBehandeling As String)
Static i As Integer
    If i = Empty Then i = 0
    WFM_DOCTYPE.AddItem
    WFM_DOCTYPE.list(i, 0) = DocType
    WFM_DOCTYPE.list(i, 1) = DocBehandeling
    i = i + 1
End Sub
Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub

Private Sub WFM_NR_AEGAR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH

    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR.BackColor = TextboxWhite
    
Exit Sub

EH:
    DisplayError "Nr. Aegar"
    
End Sub


Private Sub WFM_NR_AEGAR_KLANT_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH

    NumberCheck WFM_NR_AEGAR_KLANT
    WFM_NR_AEGAR_KLANT.BackColor = TextboxWhite
    
Exit Sub

EH:
    DisplayError "Nr. Aegar Klant"
End Sub

Private Sub WFM_NR_KLANT_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    Call getTPnaamnummer(Me)
End Sub

Private Sub WFMDDAT_DOC_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH

    DateCheck WFMDDAT_DOC
    WFMDDAT_DOC.BackColor = TextboxWhite
    
Exit Sub

EH:
    DisplayError "Datum document"
    
End Sub
Private Sub WFMDDAT_ONTV_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH

    DateCheck WFMDDAT_ONTV
    WFMDDAT_ONTV.BackColor = TextboxWhite

Exit Sub

EH:
    DisplayError "Datum ontvangen"
    
End Sub
Private Sub WFMDGEB_DEELN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH

    DateCheck WFMDGEB_DEELN
    WFMDGEB_DEELN.BackColor = TextboxWhite
    
Exit Sub

EH:
    DisplayError "Geb. Datum"
    
End Sub
Private Sub WFM_DOCTYPE_Change()
    If WFM_DOCTYPE = "" Then
        WFM_IND_TRIGGER = "BOP"
    Else
        WFM_IND_TRIGGER = Left(WFM_DOCTYPE, 3)
    End If
    WFM_DOCTYPE.BackColor = TextboxWhite
    
    Call EnDisAbleToevoegen(WFM_DOCTYPE, cmdToevoegen)
End Sub
Public Property Set QueryFrm(objForm)
    Set myForm = objForm
End Property
Public Property Get QueryFrm() As Object
    Set QueryFrm = myForm
End Property

Attribute VB_Name = "frmEXCVoegWeesToe"
Attribute VB_Base = "0{F60E657F-095D-476E-8B33-CBDCA400DA4D}{F880982B-BCB9-4680-A532-1D34352A6ABF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdAddWees_Click()
    Dim objListItem As ListItem
    
    On Error GoTo EH
    If tbNaamWees = "" Then
        MsgBox "Naam wees is niet ingevuld"
        Exit Sub
    End If
    If tbVoorlettersWees = "" Then
        MsgBox "Voorletters zijn niet ingevuld"
        Exit Sub
    End If
    If tbGebDatWees = "" Then
        MsgBox "Geboortedatum is niet ingevuld"
        Exit Sub
    End If
    If Not DateCheck(tbGebDatWees) Then
        MsgBox "Geen geldige geboortedatum"
        Exit Sub
    End If
    
    Set objListItem = frmExcSelecteerBegunst.lvKinderen.ListItems.Add()
    objListItem.SubItems(3) = tbGebDatWees
    objListItem.SubItems(4) = tbNaamWees
    objListItem.SubItems(5) = tbVoorlettersWees
    objListItem.SubItems(6) = tbANummerWees
    
    Unload Me
    Exit Sub
EH:
    DisplayError "Wees toevoegen"
End Sub

Private Sub cmdCancel_Click()
    Unload Me
End Sub

Attribute VB_Name = "frmExcAfhandelingVTU"
Attribute VB_Base = "0{9C5F1F2B-B319-422E-9322-B0EAC3D781E4}{BF41C725-FA76-43E2-A760-2ABFB60B6B09}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property


Private Sub UserForm_Activate()
On Error GoTo EH:

    GetCALXFormFields

    If g_NTUsername = "" Then
        initUservars
    End If
    
    txtOpgaveDoor = g_NTUsername

Exit Sub

EH:
        DisplayError "Form activate"
End Sub

Private Sub cmdOK_Click()
Const VK_SNAPSHOT = &H2C
Dim strFile             As String
Dim appWord             As Object

    On Error GoTo EH
    strFile = Environ("TEMP") + "\print.doc"                '[W7]  Was: "C:\TEMP\print.doc"
'   MabR del PutFormIntoWord sub ????? anders twee maal ook vanuit 777
'   Printscreen
    keybd_event VK_SNAPSHOT, 1, 0, 0
'   Start word
    Set appWord = CreateObject("Word.Application")
'   Place a message at the bottom of the Word window
'   Nieuw doc
    appWord.Documents.Add
'   Paste
    appWord.Selection.Paste
'   Save overschijft altijd
    appWord.Activedocument.SaveAs strFile
'   Close & quit
    appWord.Activedocument.Close
    appWord.Quit
'   Import in folder
    Call NewWordDocumentInFolder(WIViewer, "VTU", strFile)
'   Waarden saven
    SetCALXFormFields
    oVTUannuleren.Value = False
'   In hoofscherm closen
    Me.Hide
    Exit Sub

EH:
    DisplayError "Ok"
End Sub

Sub SetCALXFormFields()
    WFMSaveField WIViewer, tbBEDRAG_UITK_VTU, 2
    WFMSaveField WIViewer, tbREDEN_VERZOEK_VTU, 2
    WFMSaveField WIViewer, tbUITKERINGSTERM_VTU, 2
End Sub

Private Sub cmdTerug_Click()
    Me.Hide
End Sub

Sub GetCALXFormFields()
    WFMGetField WIViewer, tbNAAM_DLNMR, 2
    WFMGetField WIViewer, tbNR_POLIS, 2
    WFMGetField WIViewer, dtDAT_INGANG, 2
    WFMGetField WIViewer, tbREDEN_VERZOEK_VTU, 2
    WFMGetField WIViewer, tbBEDRAG_UITK_VTU, 2
    WFMGetField WIViewer, tbUITKERINGSTERM_VTU, 2
End Sub
Attribute VB_Name = "frmExcBeoordOnvindb"
Attribute VB_Base = "0{8C9A0DA1-259D-46EE-B5A0-46A8BEDDB3A0}{E31B1CA5-A8FB-470E-BFA3-25EEA2E612BB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim mbOrgVervBriefAang  As Boolean

Private Sub cmdGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub UserForm_Activate()
Static Init     As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    Exit Sub

EH:
    DisplayError "UserForm_DblClick"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub cmdInfo_Click()
    On Error GoTo EH
    Select Case WFM_IND_TRIGGER
        Case "PEN"
             Set frmPENInfo.WorkitemViewer = WIViewer
             frmPENInfo.Tag = "1"
             frmPENInfo.Show 1
        Case "OVL"
             Set frm_OVLBeoordelen.WorkitemViewer = WIViewer
             frm_OVLBeoordelen.ESWMObjID = WIViewer.CALClientListItem.Info.objId.InternalName
             GetFields WIViewer, frm_OVLBeoordelen
             frm_OVLBeoordelen.Show 0
    End Select
    Exit Sub

EH:
    DisplayError "PEN info"
End Sub

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappel datum"
End Sub

Private Sub WFMrJN_NAAR_PARKEREN_ja_Click()
    WFM_REDEN_PARKEREN.Enabled = True
    lblRedenParkeren.Enabled = True
End Sub
Private Sub WFMrJN_NAAR_PARKERENnee_Click()
        WFM_REDEN_PARKEREN.Enabled = False
        lblRedenParkeren.Enabled = False
        WFM_REDEN_PARKEREN = ""
End Sub
Attribute VB_Name = "frmExcGbaReadOnly"
Attribute VB_Base = "0{EF7FB100-1476-4C37-B7CA-5ADB0A20A5C8}{B35CD20A-3DCD-4E54-AF51-541AFB944401}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Dim bPEN, bOVL As Boolean
Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Private Sub cmdPrint_Click()
' door in print bugje in VBA (de inhoud van de listview wordt niet geprint
' wordt eerst een listbox gevuld met de data en hoogte en breedte van de
' listview
    
    lbPartners.ColumnCount = 9
    If bOVL Then lbKinderen.ColumnCount = 6
    
    DoEvents ' moet hier staan anders wordt de lb niet goed geprint
    CopyLvTolb lvPartners, lbPartners
    
    DoEvents ' moet hier staan anders wordt de lb niet goed geprint
    If bOVL Then
        CopyLvTolb lvKinderen, lbKinderen
        DoEvents
    End If
    Me.Repaint
    
    lbPartners.Visible = True
    If bOVL Then lbKinderen.Visible = True
    Me.PrintForm
    lbPartners.Visible = False
    If bOVL Then lbKinderen.Visible = False
End Sub

Private Sub cmdSluiten_Click()
    Unload Me
End Sub
Private Function GetCALXFormFields() As Boolean

On Error GoTo EH

    GetCALXFormFields = False
    
    GetFields WIViewer, Me
    CALGetTable lvPartners, WIViewer.Fields.Find("_TABLE_SVB")
    If bOVL Then CALGetTable lvKinderen, WIViewer.Fields.Find("_TABLE_KINDEREN")
    
    GetCALXFormFields = True

Exit Function

EH:
    DisplayError ("GetCALXFormFields")

End Function
Private Sub AddResultField(ListView As ListView, name, Caption, Witdh, Align, ResultOnly As Boolean)
Dim myColHeader As ColumnHeader
    
    Set myColHeader = ListView.ColumnHeaders.Add(, name, Caption, Witdh, Align)
    myColHeader.Tag = ResultOnly
    
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

On Error GoTo EH
    
    If Init Then Exit Sub
    Init = True
    
    Me.lvPartners.ColumnHeaders.Add , , , 0, 0 ', Alignment:=1
    AddResultField lvPartners, "JN_HUW_REGEL_AANM", "Aanm.", 35, 0, False
    AddResultField lvPartners, "JN_HUW_REGEL_OK", "Ontv.", 30, 0, False
    AddResultField lvPartners, "INGANG_SVB", "Ingang SVB", 60, 0, False
    AddResultField lvPartners, "EINDE_SVB", "Einde SVB", 60, 0, False
    AddResultField lvPartners, "R", "R", 30, 0, False
    AddResultField lvPartners, "NAAM_PARTNER", "Naam Partner", 126, 0, False
    AddResultField lvPartners, "VOORLETTERS", "Voorl.", 40, 0, False
    AddResultField lvPartners, "VOORVOEGSELS", "Voorvoeg.", 60, 0, False
    AddResultField lvPartners, "GEB_DATUM_PARTNER", "Geb.datum", 60, 0, False
    
    Select Case WIViewer.Fields.Find("IND_TRIGGER").CALFormField.Value
    Case Is = "OVL"
        bOVL = True
    Case Is = "PEN"
        bPEN = True
    Case Is = "KAP"
        bOVL = True
    Case Is = "KEO"
        bOVL = True
    Case Is = "KEP"
        bOVL = True
    End Select
    
    If bOVL Then
        lvKinderen.Visible = True
        Me.lvKinderen.ColumnHeaders.Add , , , 0, 0 ', Alignment:=1
        AddResultField lvKinderen, "JN_KIND_AANM", "Aanm.", 35, 0, False
        AddResultField lvKinderen, "JN_KIND_OK", "Ontv.", 30, 0, False
        AddResultField lvKinderen, "DAT_GEB_KIND", "Geb.datum", 60, 0, False
        AddResultField lvKinderen, "NAAM_KIND", "Naam kind", 126, 0, False
        AddResultField lvKinderen, "VOORLETTERS_KIND", "Voorl.", 40, 0, False
        AddResultField lvKinderen, "ANUMMER_KIND", "A-nr. kind", 60, 0, False
    Else
        Me.Height = Me.Height - lvKinderen.Height
        WFMLGBA_Status.Top = WFMLGBA_Status.Top - lvKinderen.Height
        cmdSluiten.Top = cmdSluiten.Top - lvKinderen.Height
        
    End If
    
    Me.Tag = "Modaal"
    
    GetCALXFormFields
   
Exit Sub

EH:
    DisplayError "UserForm_Activate"
    
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
  Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
  myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
 ESWMObjID = myESWMObjID
End Property


Attribute VB_Name = "frmExcSelecteerBegunst"
Attribute VB_Base = "0{54FD95CB-2EFB-44F5-AA24-3B5CDF21BCA8}{1E2FD16E-5955-491B-ACB3-E8C47A18DF4A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim bOVL        As Boolean
Dim bWZP        As Boolean
Dim myForm      As Object
Dim WIViewer    As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String

Private Sub cmdAddWees_Click()
    frmEXCVoegWeesToe.Show vbModal
End Sub

Private Sub cmdPrint_Click()
' door print bugje in VBA (inhoud van listview wordt niet geprint)
' wordt eerst listbox gevuld met de data, hoogte en breedte van
' listview
    If Not bWZP Then lbPartners.ColumnCount = 9
    If bOVL Or bWZP Then lbKinderen.ColumnCount = 6
    DoEvents            'Moet hier anders wordt lb niet goed geprint
    CopyLvTolb lvPartners, lbPartners
    DoEvents            'Idem
    If bOVL Or bWZP Then
        CopyLvTolb lvKinderen, lbKinderen
        DoEvents
    End If
    Me.Repaint
    If Not bWZP Then lbPartners.Visible = True
    If bOVL Or bWZP Then lbKinderen.Visible = True
    Me.PrintForm
    lbPartners.Visible = False
    lbKinderen.Visible = False
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    Me.lvPartners.ColumnHeaders.Add , , , 0, 0 ', Alignment:=1
    AddResultField lvPartners, "JN_HUW_REGEL_AANM", "Aanm.", 35, 0, False
    AddResultField lvPartners, "JN_HUW_REGEL_OK", "Ontv.", 30, 0, False
    AddResultField lvPartners, "INGANG_SVB", "Ingang SVB", 60, 0, False
    AddResultField lvPartners, "EINDE_SVB", "Einde SVB", 60, 0, False
    AddResultField lvPartners, "R", "R", 30, 0, False
    AddResultField lvPartners, "NAAM_PARTNER", "Naam Partner", 126, 0, False
    AddResultField lvPartners, "VOORLETTERS", "Voorl.", 40, 0, False
    AddResultField lvPartners, "VOORVOEGSELS", "Voorvoeg.", 60, 0, False
    AddResultField lvPartners, "GEB_DATUM_PARTNER", "Geb.datum", 60, 0, False
    Select Case WIViewer.Fields.Find("IND_TRIGGER").CALFormField.Value
        Case Is = "OVL"
             bOVL = True
    End Select
    If WIViewer.CALClientListItem.OpenedItem.Class = "COLLWZP" Then
        bWZP = True
    End If
    If bOVL Or bWZP Then
        Me.lvKinderen.ColumnHeaders.Add , , , 0, 0 ', Alignment:=1
        AddResultField lvKinderen, "JN_KIND_AANM", "Aanm.", 35, 0, False
        AddResultField lvKinderen, "JN_KIND_OK", "Ontv.", 30, 0, False
        AddResultField lvKinderen, "DAT_GEB_KIND", "Geb.datum", 60, 0, False
        AddResultField lvKinderen, "NAAM_KIND", "Naam kind", 126, 0, False
        AddResultField lvKinderen, "VOORLETTERS_KIND", "Voorl.", 40, 0, False
        AddResultField lvKinderen, "ANUMMER_KIND", "A-nr. kind", 60, 0, False
        lvKinderen.Visible = True
    Else
        lvKinderen.Visible = False
    End If
    If bWZP Then
        lvPartners.Visible = False
        Select Case WIViewer.Fields.Find("DOCTYPE").CALFormField.Value
        Case "WZP Einde"
            cmdAddWees.Visible = True
        Case "WZP Ingang verlenging"
            cmdAddWees.Visible = True
        End Select
    End If
    GetCALXFormFields
    lvPartners.ControlTipText = "Dubbelklik op een regel om rubriek 'Aanm.' aan/uit te vinken"
    If bOVL Or bWZP Then
        lvKinderen.ControlTipText = "Dubbelklik op een regel om rubriek 'Aanm.' aan/uit te vinken"
    End If
    Me.lvPartners.Refresh
    Me.lvKinderen.Refresh
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub cmdOK_Click()
Dim i As Integer

    On Error GoTo EH
'   deze button kan alleen ingedrukt zijn als het item in
'   een begunstige werkstap staat.
'   indien een partner/kind aangemeld moet worden (een x is ingevuld)
'   wordt het veld WFMCJN_X_AANM aangepast.
'   Kinderen kunnen alleen bij overlijden aangemeld worden.
'   Het kan zijn dat partners of kinderen al eerder zijn aangemeld.
'   Alleen kinderen of parterns die nog niet zijn aangemeld kunnen worden
'   aangemeld. Subitem(2) = "".
    WFMCJN_X_AANM.Value = False
    For i = 1 To lvPartners.ListItems.Count
        If lvPartners.ListItems.item(i).SubItems(1) = "X" And _
        lvPartners.ListItems.item(i).SubItems(2) = "" Then
            WFMCJN_X_AANM.Value = True
            i = lvPartners.ListItems.Count + 1
        End If
    Next
    If Not WFMCJN_X_AANM.Value And (bOVL Or bWZP) Then
        For i = 1 To lvKinderen.ListItems.Count
            If lvKinderen.ListItems.item(i).SubItems(1) = "X" And _
            lvKinderen.ListItems.item(i).SubItems(2) = "" Then
                WFMCJN_X_AANM.Value = True
                i = lvKinderen.ListItems.Count + 1
            End If
        Next
    End If
    If WFMCJN_X_AANM Then WFM_JN_NAAR_GBA = "J"
    WFMSaveField WIViewer, WFMCJN_X_AANM, 4
    WFMSaveField WIViewer, WFM_JN_NAAR_GBA, 4
    CALSaveTable lvPartners, WIViewer.Fields.Find("_TABLE_SVB")
    If bOVL Or bWZP Then
        CALSaveTable lvKinderen, WIViewer.Fields.Find("_TABLE_KINDEREN")
    End If
    Unload Me
    Exit Sub

EH:
    DisplayError "Button OK"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Unload Me
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Function GetCALXFormFields() As Boolean
Dim itmx    As ListItem
Dim SVB     As Field

    On Error GoTo EH
    GetCALXFormFields = False
    GetFields WIViewer, Me
    CALGetTable lvPartners, WIViewer.Fields.Find("_TABLE_SVB")
    If bOVL Or bWZP Then CALGetTable lvKinderen, WIViewer.Fields.Find("_TABLE_KINDEREN")
    GetCALXFormFields = True
    Exit Function

EH:
    DisplayError ("GetCALXFormFields")
End Function

Private Sub AddResultField(ListView As ListView, name, Caption, Witdh, Align, ResultOnly As Boolean)
Dim myColHeader As ColumnHeader

    Set myColHeader = ListView.ColumnHeaders.Add(, name, Caption, Witdh, Align)
    myColHeader.Tag = ResultOnly
End Sub

Private Sub lvPartners_ItemClick(ByVal item As MSComctlLib.ListItem)
'   Item mag alleen aangekruist worden als nog niet eerder is aangemeld.
    If item.SubItems(2) = "" Then
        If item.SubItems(1) = "X" Then
            item.SubItems(1) = ""
            Exit Sub
        End If
        If item.SubItems(1) = "" Then
            item.SubItems(1) = "X"
            Exit Sub
        End If
    End If
    lvPartners.Refresh
End Sub

Private Sub lvKinderen_ItemClick(ByVal item As MSComctlLib.ListItem)
'   Item mag alleen aangekruist worden als nog niet eerder is aangemeld.
    If item.SubItems(2) = "" Then
        If (bOVL Or bWZP) And item.SubItems(1) = "X" Then
            item.SubItems(1) = ""
            Exit Sub
        End If
        If (bOVL Or bWZP) And item.SubItems(1) = "" Then
            item.SubItems(1) = "X"
            Exit Sub
        End If
    End If
    lvKinderen.Refresh
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
  Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
  myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
 ESWMObjID = myESWMObjID
End Property
Attribute VB_Name = "frmFEPAlgemeen"
Attribute VB_Base = "0{DE9396D9-57D0-4F8A-A919-0B7C7ADB1878}{E0BC90AB-4711-469A-95A1-990D13861CED}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myStatus            As CALFormField
Dim myZaakMemo          As CALFormField
Dim arrWerksoorten()    As String
Dim arrWerktypen()      As String
Dim arrWKTperWKS()      As String
Dim arrAllWKTperWKS()   As String
Dim bper                As Boolean
Dim strTempdate         As String
Dim Init2               As Boolean
Dim init3               As Boolean
Dim initBWK             As Boolean

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
  Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
  myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
 ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_Activate()
Dim strAfdeling     As String
Dim strUser         As String
Dim i               As Integer
Dim Workstepname    As String
Static Init         As Boolean

    On Error GoTo EH
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    If WFM_PRIORITEIT = "" Then WFM_PRIORITEIT = 0
    If Init Then Exit Sub
    initBWK = True
    Init = True
    bper = True
    strAfdeling = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR")
    strUser = WFM_BEHANDELAAR.Value
    fillDDList True, AFDELING, WFMData.Common.getList("WFAfdeling", "AfdCode", "Enabled", "1")
    AFDELING.Value = strAfdeling
    WFM_WERKTYPE.ColumnCount = 2
    WFM_WERKTYPE.BoundColumn = 1
    WFM_WERKTYPE.TextColumn = -1
    WFM_WERKTYPE.ColumnWidths = "30;30"
    WFM_WERKSOORT.ColumnCount = 2
    WFM_WERKSOORT.TextColumn = -1
    WFM_WERKSOORT.ColumnWidths = "30;30"
    arrWerksoorten = Split(WFMData.Common.getField("WFAfdeling", "Werksoorten", "AfdCode", strAfdeling), ",")
    FillComboWRKSOORT arrWerksoorten, WFM_WERKSOORT
    AllWerktypesPERwerksoort (strAfdeling)   ' Vullen van arrAllWKTperWKS
    If WFM_WERKSOORT = "" Then
        FillComboWRKtypen arrAllWKTperWKS, WFM_WERKTYPE
    Else
        arrWKTperWKS = Split(WFMData.Common.getField("WFAfdeling", WFM_WERKSOORT, "AfdCode", AFDELING), ",")
        FillComboWRKtypen arrWKTperWKS, WFM_WERKTYPE
    End If
    On Error Resume Next
    WFM_BEHANDELAAR.Value = strUser
    On Error GoTo EH
    Set myStatus = WIViewer.Fields.Find("STATUS").CALFormField
    If myStatus = "Parkeren" Then optStatParkeren.Value = True
    CheckOpUitzondering WIViewer, txtBijzonderheden
    If txtBijzonderheden.Text = "" Then MultiPage1.pages("PageUitz").Visible = False
    MultiPage1.Value = 1
    StatusBar1.Panels.item("WFM_NR_POLIS").Text = "Deeln. nr.: " & WFM_NR_POLIS
    StatusBar1.Panels.item("WFM_NR_AEGAR").Text = "Aegarnr.: " & WFM_NR_AEGAR
    Workstepname = GetWorkstep(WIViewer)
'   Mabr Fiatteur heeft weer 2 views
    If Left(Workstepname, 5) = "94A26" Then Workstepname = "94A26"
'   Afhankelijk van de stap waarin we staan.
'   misschien moet ik maar een hele lijst maken
    fraDATACT.Visible = True
'   Soms is afgehandeld op ja gezet vanuit de ene stap en dan in de volgende moet
'   de default weer op nee staan.
    WFMrJN_AFGEHANDELDnee.Value = True
    Select Case Workstepname
        Case "94A03 Div. post"
             lblDatum.Visible = False
             lblRedenParkeren.Visible = False
             WFMDRAPPEL.Visible = False
             WFM_REDEN_PARKEREN.Visible = False
             LblPark.Visible = False
             CmdParkDatum.Visible = False
             optStatParkeren.Visible = False
             optStatParkerenNee.Visible = False
             cmdDatum.Visible = True
             WFMrJN_AFGEHANDELD_ja.Visible = False
             WFMrJN_AFGEHANDELDnee.Visible = False
             Lblafgehand.Visible = False
             lblWKT.ForeColor = &HC00000
             WFM_WERKSOORT.Locked = False
             WFM_WERKTYPE.Locked = False
             fraDATACT.Visible = False
             WFMDEINDDAT.Locked = False
             myStatus = ""
             optStatParkeren.Value = False
        Case "94A05 Mutaties"
             lblDatum.Visible = False
             lblRedenParkeren.Visible = False
             WFMDRAPPEL.Visible = False
             WFM_REDEN_PARKEREN.Visible = False
             CmdParkDatum.Visible = False
             lblFiateer.Visible = True
             WFMrJN_FEP_FIAT_ja.Visible = True
             WFMrJN_FEP_FIATnee.Visible = True
        Case "94A06 Prk Mutaties"
             lblFiateer.Visible = True
             WFMrJN_FEP_FIAT_ja.Visible = True
             WFMrJN_FEP_FIATnee.Visible = True
        Case "94A26"
             LblPark.Visible = False
             optStatParkeren.Visible = False
             optStatParkerenNee.Visible = False
             lblFiateer.Visible = False
             WFMrJN_FEP_FIAT_ja.Visible = False
             WFMrJN_FEP_FIATnee.Visible = False
             lblBWKzaak.Visible = True
             WFMrJN_FEP_BWKZAAK_ja.Visible = True
             WFMrJN_FEP_BWKZAAKnee.Visible = True
             WFMrJN_FEP_BWKZAAKnee.Value = True
        Case "94A46 VTU"
             LblPark.Visible = False
             optStatParkeren.Visible = False
             optStatParkerenNee.Visible = False
             lblDatum.Visible = False
             lblRedenParkeren.Visible = False
             fraDATACT.Visible = False
             WFM_REDEN_PARKEREN.Visible = False
             LblPark.Visible = False
             CmdParkDatum.Visible = False
             WFMDRAPPEL.Visible = False
    End Select
    WFMrJN_FEP_FIAT_ja.Value = True
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub cmdDatum_Click()
'   mvEinddatum leeg geeft een error
    On Error Resume Next
    If Not mvEinddatum.Visible Then
        mvEinddatum.Left = 42
        mvEinddatum.Top = 130
        mvEinddatum.Visible = True
        If Not WFMDEINDDAT = "" Then mvEinddatum = WFMDEINDDAT
    Else
        mvEinddatum.Visible = False
    End If
End Sub

Private Sub CmdParkDatum_Click()
    If Not mvParkdatum.Visible Then
        mvParkdatum.Left = 68
        mvParkdatum.Top = 265
        mvParkdatum.Visible = True
        mvParkdatum = Date + 7
        If Not WFMDRAPPEL = "" Then mvParkdatum = WFMDRAPPEL
    Else
        mvParkdatum.Visible = False
    End If
End Sub

Private Sub imgNotitie_Click()
    Set frmNotitie.rsViewer = WIViewer
    If Not ((WIViewer.CALClientListItem.Info.Status And calObjStatusWIP) = calObjStatusWIP) Then
        frmNotitie.lblAddNote.Enabled = False
    End If
    frmNotitie.Show 1
End Sub

Private Sub mvEinddatum_DateClick(ByVal DateClicked As Date)
    WFMDEINDDAT = Format(mvEinddatum, "dd-mm-yyyy")
    mvEinddatum.Visible = False
    WFMDEINDDAT.SetFocus
End Sub

Private Sub mvParkdatum_DateClick(ByVal DateClicked As Date)
    WFMDRAPPEL = Format(mvParkdatum, "dd-mm-yyyy")
    mvParkdatum.Visible = False
    WFMDRAPPEL.SetFocus
End Sub

Private Sub AllWerktypesPERwerksoort(strAfdeling As String)
Dim StrWKTtemp      As String
Dim strWKT          As String
Dim lngDummy, ff    As Long
Dim colalf          As Collection

    On Error GoTo EH
'   Mabr arrAllWKTperWKS al een keer gevuld
    For lngDummy = LBound(arrWerksoorten) To UBound(arrWerksoorten)
        StrWKTtemp = WFMData.Common.getField("WFAfdeling", arrWerksoorten(lngDummy), "AfdCode", strAfdeling)
        If strWKT = "" Then
            strWKT = StrWKTtemp
        Else
            strWKT = strWKT + "," + StrWKTtemp
        End If
    Next
    arrAllWKTperWKS = Split(strWKT, ",")
    Set colalf = New Collection
    For lngDummy = LBound(arrAllWKTperWKS) To UBound(arrAllWKTperWKS)
        colalf.Add arrAllWKTperWKS(lngDummy)
    Next
'   Sorteren
    Set colalf = SortCollection(colalf)
    For lngDummy = 1 To colalf.Count
        ff = lngDummy - 1
        arrAllWKTperWKS(ff) = colalf.item(lngDummy)
    Next
    Exit Sub

EH:
    DisplayError "AllWerktypesPERwerksoort"
End Sub

Private Sub WFM_WERKSOORT_Change()
    On Error GoTo EH
    If Not WFM_WERKSOORT = "" Then
'       Mabr werktypen vullen / weghalen
        If Not AFDELING = "" Then
            arrWKTperWKS = Split(WFMData.Common.getField("WFAfdeling", WFM_WERKSOORT, "AfdCode", AFDELING), ",")
            FillComboWRKtypen arrWKTperWKS, WFM_WERKTYPE
        End If
    Else        'Mabr werksoorten leeggemaakt
        FillComboWRKtypen arrAllWKTperWKS, WFM_WERKTYPE
        WFM_WERKTYPE = ""
    End If
    Exit Sub

EH:
    DisplayError "Werksoort"
End Sub

Private Sub WFM_WERKTYPE_Change()
Dim strTemp     As String
Dim strWeken    As String
Dim strDate     As String

    On Error Resume Next
    If Not WFM_WERKTYPE = "" Then
        If WFM_WERKSOORT = "" Then
'           Doordat de werksoort wijzigt wordt de type weer leeggemaakt.. geinig
            strTemp = WFM_WERKTYPE
            WFM_WERKSOORT = WFMData.Common.getField("WFWerktype", "Werksoort", "Werktype", strTemp)
            WFM_WERKTYPE = strTemp
        End If
        WFMDEINDDAT.Enabled = True
        cmdDatum.Enabled = True
        labeleinddatum.Enabled = True
'       Mabr en de einddatum
        If WFMDEINDDAT = "" Then
            strWeken = WFMData.Common.getField("WFWerktype", "Doorlooptijd", "Werktype", WFM_WERKTYPE)
'           De dat_doc want dat_ontv is nog niet omhoog getild...
            If WFMDDAT_ONTV = "" Then
                strDate = WFMDDAT_DOC
            Else
                strDate = WFMDDAT_ONTV
            End If
            WFMDEINDDAT = Format(DateAdd("ww", strWeken, Format(strDate, "yyyy-mm-dd")), "dd-mm-yyyy")
            WFMDEINDDAT.Enabled = True
            strTempdate = WFMDEINDDAT.Text
        End If
    Else
        WFMDEINDDAT = ""
        WFMDEINDDAT.Enabled = False
        cmdDatum.Enabled = False
        labeleinddatum.Enabled = False
    End If
    Exit Sub

EH:
    DisplayError "Werktype"
End Sub

Public Sub FillComboWRKSOORT(ByRef arrWerksoorten() As String, ByVal cbo As Control)
Dim lngDummy        As Long

    cbo.Clear
    cbo.AddItem
    cbo.list(0) = ""
    For lngDummy = LBound(arrWerksoorten) To UBound(arrWerksoorten)
        cbo.AddItem
        cbo.list(lngDummy + 1, 0) = arrWerksoorten(lngDummy)
        cbo.list(lngDummy + 1, 1) = WFMData.Common.getField("WFWerksoort", "WerksoortOmschrijving", "WerksoortAfkorting", arrWerksoorten(lngDummy), "Enabled", "1")
    Next
End Sub

Public Sub FillComboWRKtypen(ByRef arrWerktypen() As String, ByVal cbo As Control)
Dim lngDummy        As Long

    cbo.Clear
    cbo.AddItem
    cbo.list(0) = ""
    For lngDummy = LBound(arrWerktypen) To UBound(arrWerktypen)
        cbo.AddItem
        cbo.list(lngDummy + 1, 0) = arrWerktypen(lngDummy)
        cbo.list(lngDummy + 1, 1) = WFMData.Common.getField("WFWerktype", "WerktypeOmschrijving", "Werktype", arrWerktypen(lngDummy), "Enabled", "1")
   Next
End Sub

Private Sub AFDELING_Change()
Dim strAfdeling         As String
Dim strAfdeling_user    As String
Dim vUser               As Variant

    strAfdeling = AFDELING.SelText
    WFM_BEHANDELAAR.Clear
    WFM_BEHANDELAAR.AddItem ""
    For Each vUser In GetUsersPerAfdeling(strAfdeling)
        WFM_BEHANDELAAR.AddItem vUser
    Next
    If strAfdeling <> WFM_DOORZENDEN_NAAR.Value Then
        WFM_BEHANDELAAR.SelText = ""
        WFM_BEHANDELAAR.Locked = True
        WFM_STUUR_VAR.Value = "1"
    Else
        WFM_BEHANDELAAR.Locked = False
    End If
End Sub

Private Sub cmdGBA_Click()
    On Error GoTo EH
    Set frmALGGBAReadOnly.WorkitemViewer = WIViewer
    frmALGGBAReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub cmdStartBrief_Click()
    Call StartBrief(WIViewer, "Word")
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim ChildItem       As CALClientListItem
Dim folder          As CALFolder

    On Error GoTo EH
    DateCheck WFMDMEMO_DAT_1
    DateCheck WFMDMEMO_DAT_2
    DateCheck WFMDMEMO_DAT_3
    DateCheck WFMDMEMO_DAT_4
    DateCheck WFMDMEMO_DAT_5
    DateCheck WFMDEINDDAT
'   MaBr 24-05-20006   voor bewaakzaak
    If Not (myStatus.Value = "Parkeren") Then
        If optStatParkeren = True Then
            myStatus.Value = "Parkeren"
        Else
            myStatus.Value = ""
        End If
    End If
    If myStatus.Value = "Parkeren" Then
        DateCheck WFMDRAPPEL
        If WFMDRAPPEL.Value = "" Then
            MsgBox "De rappeldatum mag niet leeg zijn als Parkeren op Ja staat"
            Exit Sub
        End If
        If WFM_REDEN_PARKEREN = "" Then
            MsgBox "De reden parkeren mag niet leeg zijn als Parkeren op Ja staat"
            Exit Sub
        End If
    End If
    DateCheck WFMDRAPPEL
    CheckHupo WFM_BEHANDELAAR
    If AFDELING.Value <> WFM_DOORZENDEN_NAAR Then
        If IsLeegmakenVeldenJa(WFM_WERKSOORT.Value, WFM_WERKTYPE.Value) Then
            WFM_WERKSOORT.Value = ""
            WFM_WERKTYPE.Value = ""
        Else
            Exit Sub
        End If
        WFM_DOORZENDEN_NAAR = AFDELING.Value
        Call Doorzendennieuw(WIViewer, WFM_DOORZENDEN_NAAR)
        Exit Sub
    End If
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub imgCAESAR_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call Extralink(WIViewer, WFM_NR_POLIS, True)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
End Sub

Private Sub IMGsnelzoek_Click()
    frmQuery.QRYTextBox1 = WFM_NR_POLIS
    frmQuery.cmdFind_Click
    frmQuery.Show 0
End Sub

Private Sub WFMDEINDDAT_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDEINDDAT
    WFMDEINDDAT.BackColor = TextboxWhite
    DateCheckBefore WFMDEINDDAT
    If WFM_WERKTYPE = "" Then
        If Not WFMDEINDDAT = "" Then
            MsgBox "De einddatum mag niet gezet worden bij een leeg werktype"
            WFMDEINDDAT = ""
        End If
    Else
        If Trim(WFMDEINDDAT) = "" Then
            MsgBox "De einddatum mag niet leeg zijn"
            WFMDEINDDAT = strTempdate
        End If
    End If
    Exit Sub

EH:
    DisplayError "Einddatum"
    WFMDEINDDAT = strTempdate
    WFMDEINDDAT.BackColor = TextboxWhite
End Sub

Private Sub WFMDRAPPEL_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    DateCheckBefore WFMDRAPPEL
    If Trim(WFMDEINDDAT) = "" Then
        MsgBox "De rappeldatum mag niet leeg zijn"
    End If
    Exit Sub

EH:
    DisplayError "Rappeldatum"
    WFMDRAPPEL = ""
End Sub

Private Sub WFMrJN_AFGEHANDELD_ja_Click()
    optStatParkerenNee.Value = True
    optStatParkerenNee_Click
End Sub

Private Sub WFMrJN_FEP_BWKZAAK_ja_Click()
    If initBWK Then
        LblPark.Visible = True
        lblDatum.Visible = True
        lblRedenParkeren.Visible = True
        WFM_REDEN_PARKEREN.Visible = True
        CmdParkDatum.Visible = True
        WFMDRAPPEL.Visible = True
        WFM_REDEN_PARKEREN.Visible = True
        If WFM_REDEN_PARKEREN.Text = "" Then
            WFM_REDEN_PARKEREN.Text = "Bewaakzaak"
        End If
        If myStatus Is Nothing Then Exit Sub
        myStatus.Value = "Parkeren"
        initBWK = True
    End If
End Sub

Private Sub WFMrJN_FEP_BWKZAAKnee_Click()
    optStatParkerenNee_Click
    LblPark.Visible = False
    optStatParkeren.Visible = False
    optStatParkeren.Value = False
End Sub

Private Sub WFMrJN_FEP_FIAT_ja_Click()
    If Not init3 Then Exit Sub
    optStatParkerenNee_Click
    optStatParkerenNee.Value = True
    WFMrJN_AFGEHANDELDnee = True
    init3 = True
End Sub

Private Sub optStatParkeren_Click()
    If optStatParkeren Then
        lblDatum.Visible = True
        lblRedenParkeren.Visible = True
        WFM_REDEN_PARKEREN.Visible = True
        CmdParkDatum.Visible = True
        WFMDRAPPEL.Visible = True
        WFM_REDEN_PARKEREN.Visible = True
        If myStatus Is Nothing Then Exit Sub
        myStatus.Value = "Parkeren"
        WFMrJN_AFGEHANDELDnee.Value = True
    End If
End Sub

Private Sub optStatParkerenNee_Click()
    lblDatum.Visible = False
    lblRedenParkeren.Visible = False
    WFM_REDEN_PARKEREN.Visible = False
    CmdParkDatum.Visible = False
    WFMDRAPPEL.Visible = False
    WFM_REDEN_PARKEREN.Visible = False
    If myStatus Is Nothing Then Exit Sub
    myStatus.Value = ""
End Sub
Attribute VB_Name = "frmFEPBlokkeren"
Attribute VB_Base = "0{52E13395-7C00-497F-B1F2-7ECD58EDD156}{F190D9CB-2329-4166-A865-16276D72D021}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer    As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If rbGeblokkeerd_ja.Value = True Then
        WFM_DOORZENDEN_NAAR = "ARCHIEF"
    End If
    SetCALXFormFields = True
    Exit Function

EH:
  DisplayError "SetCALXFormFields"
End Function

Private Sub UserForm_Activate()
Static Init     As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    A47DDAT_OVL = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_OVL")
    A47_NAAM_OVL = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "NAAM_OVL")
    If A47DDAT_OVL = "" And A47_NAAM_OVL = "" And WIViewer.CALClientListItem.OpenedItem.Class <> "COLL" Then
        A47DDAT_OVL.Visible = False
        lblDatOVL.Visible = False
    End If
    If A47_NAAM_OVL = "" Then
        A47_NAAM_OVL.Visible = False
        lblNaamOVL.Visible = False
    End If
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    Exit Sub

EH:
    DisplayError "UserForm_DblClick"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Attribute VB_Name = "frmFEPBruAanv"
Attribute VB_Base = "0{B13AD027-C232-464F-A46F-F6AA207D7B64}{C0775B31-AD5B-4578-92B9-29BC63E0ED12}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myPolOver           As CALFormField
Dim myNaamPartnerZaak   As CALFormField

Private Sub cmdGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        myPolOver.Value = Right$(Space(10) & Trim(tbPolOver1), 10) & ";" & _
                          Right$(Space(10) & Trim(tbPolOver2), 10) & ";" & _
                          Right$(Space(10) + Trim(tbPolOver3), 10) & ";"
    End If
    SetCALXFormFields = True
    Exit Function

EH:
  DisplayError "SetCALXFormFields"
End Function

Private Sub UserForm_Activate()
Static Init             As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    If WFM_JN_GEFIATTEERD = "N" Then
        MsgBox "De mutatie is door de fiatteur niet gefiatteerd. Zie notitie.", vbExclamation + vbOKOnly
        lblNietGefiatteerd.Caption = "NIET GEFIATTEERD!"
        lblNietGefiatteerd.Visible = True
    End If
    If WFM_JN_777_OMGEZET = "J" Then
        Label777.Visible = True
    End If
    If WFM_JN_DEF_ONVINDBAAR = "J" Then
        Labelonvindbeg.Visible = True
    End If
    If WFM_IND_TRIGGER <> "OVL" Then
    Else
        Set myNaamPartnerZaak = WIViewer.Fields.Find("NAAM_PARTNER_ZAAK").CALFormField
        tbNAAM_PARTNER_ZAAK = myNaamPartnerZaak.Value
        If tbNAAM_PARTNER_ZAAK <> Empty Then
            lblNaamPartner.Visible = True
            tbNAAM_PARTNER_ZAAK.Visible = True
        End If
    End If
    If WFM_IND_TRIGGER = "AOV" Then
        cmdGBA.Visible = False
    End If
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    Exit Sub

EH:
    DisplayError "UserForm_DblClick"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Attribute VB_Name = "frmFEPFiatteren"
Attribute VB_Base = "0{FB1E96E8-C239-4FF2-813D-CA4197690501}{4FE33B5F-E9D0-4A44-BA0A-417C9C3B2085}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myPolOver           As CALFormField

Private Sub cmdGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        myPolOver.Value = Right$(Space(10) & Trim(tbPolOver1), 10) & ";" & _
                          Right$(Space(10) & Trim(tbPolOver2), 10) & ";" & _
                          Right$(Space(10) + Trim(tbPolOver3), 10) & ";"
    End If
    SetCALXFormFields = True
    Exit Function

EH:
  DisplayError "SetCALXFormFields"
End Function

Private Sub UserForm_Activate()
Static Init             As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
    If WFM_IND_TRIGGER <> "OVL" Then
        frOVL.Visible = False
    Else
        tbNAAM_PARTNER_ZAAK = WIViewer.Fields.Find("NAAM_PARTNER_ZAAK").CALFormField.Value
        If tbNAAM_PARTNER_ZAAK <> Empty Then
            lblNaamPartner.Visible = True
            tbNAAM_PARTNER_ZAAK.Visible = True
        End If
    End If
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    Exit Sub

EH:
    DisplayError "UserForm_DblClick"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
  Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
  myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
 ESWMObjID = myESWMObjID
End Property
Attribute VB_Name = "frmFEPVTU777"
Attribute VB_Base = "0{5EF271AD-37D6-429C-83FB-F2BA2B0F7C7B}{FCAA714A-3A0B-4A2F-93A4-DBFCD9751DC0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer    As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver   As CALFormField

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub
EH:
    DisplayError "Doorsturen"
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True

    If WFMrJN_VTU_BEHAND_ja.Value Then
        Waarschuwing.Caption = "Let op!!!" + vbCrLf + "Er heeft reeds een betaling plaatsgevonden"
        Waarschuwing.ForeColor = vbRed
        Waarschuwing.Visible = True
    End If

    If WFM_JN_VTU_GEMAAKT = "J" Then
        lblVTU.Enabled = True
        WFMrJN_VTU_BEHAND_ja.Enabled = True
        WFMrJN_VTU_BEHANDnee.Enabled = True
        WFMrJN_VTU_BEHANDonb.Enabled = True
    End If
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    Exit Sub

EH:
    DisplayError "UserForm_DblClick"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Attribute VB_Name = "frmFVPRegistratie"
Attribute VB_Base = "0{0B0D95AB-FAB4-40C2-8AC7-C7BFAFFAA622}{79F8841D-0A0A-404C-9ED2-040DEE349A09}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim HostForm As Object
Dim myESWMObjID As String
Private Sub cmdScreen_Click()

On Error GoTo EH
    
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
    MousePointer = fmMousePointerDefault

Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Open eerst het scherm U1 OHUP"


End Sub
Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub
Private Sub cmdOpslaan_Click()
Dim myIdent As String

On Error GoTo EH

    Call CheckFields
    myIdent = WFM_NR_POLIS + WFM_IND_TRIGGER + WFM_ZK_VOLGNR
    If WFM_ZAAK_IDENT_NR <> myIdent Then
        WFM_ZAAK_IDENT_NR = myIdent
    End If
    
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)

Exit Sub

EH:
    DisplayError "Doorsturen"

End Sub
Private Sub CheckFields()
    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR = Format(Val(WFM_NR_AEGAR), "#########")
    If WFM_NR_AEGAR <> Empty And Val(WFM_NR_AEGAR) <> 0 Then _
        WFM_NR_AEGAR = Format(Val(WFM_NR_AEGAR), "000000000")

    DateCheck WFMDDAT_DOC
    DateCheck WFMDDAT_ONTV
    DateCheck WFMDGEB_DEELN
    NumberCheck WFM_ZK_VOLGNR

    If WFM_NR_POLIS = "" Then
        WFM_NR_POLIS.BackColor = TextboxRed
        Err.Raise 12345, , "Deelnemer nummer is niet ingevuld."
    End If
    
    If WFMDDAT_DOC = "" Then
        WFMDDAT_DOC.BackColor = TextboxRed
        Err.Raise 12345, , "Datum document is niet ingevuld."
    End If
    
    If WFM_IND_TRIGGER.Value = "" Then
        WFM_IND_TRIGGER.BackColor = TextboxRed
        Err.Raise 12349, , "Kenmerk is niet ingevuld."
    End If

End Sub

Private Sub UserForm_Activate()
Static Init As Boolean
    
    If Init = True Then Exit Sub
    Init = True
    
    WFM_IND_TRIGGER.AddItem "ABP"
    WFM_IND_TRIGGER.AddItem "FVP"
    
    WFM_ZK_VOLGNR = 1  'invisible standaard op 1 zetten
    WFM_AANTAL_ZAKEN = 1  'invisible standaard op 1 zetten
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub
Private Sub WFM_NR_AEGAR_Exit(ByVal Cancel As MSForms.ReturnBoolean)

On Error GoTo EH
    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR.BackColor = TextboxWhite
    
Exit Sub

EH:
    DisplayError "Nr. Aegar"
    
End Sub

Private Sub WFM_NR_POLIS_Exit(ByVal Cancel As MSForms.ReturnBoolean)

On Error GoTo EH
    
    WFM_NR_POLIS.BackColor = TextboxWhite
    PolisNummerCheck WFM_NR_POLIS
       cmdOpslaan.Enabled = True
    Exit Sub
EH:
    DisplayError "Polisnummer"
       cmdOpslaan.Enabled = False

End Sub

Private Sub WFMDDAT_DOC_Exit(ByVal Cancel As MSForms.ReturnBoolean)

On Error GoTo EH

    DateCheck WFMDDAT_DOC
    WFMDDAT_DOC.BackColor = TextboxWhite
    
Exit Sub

EH:
    DisplayError "Datum document"
    
End Sub
Private Sub WFMDGEB_DEELN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH

    DateCheck WFMDGEB_DEELN
    WFMDGEB_DEELN.BackColor = TextboxWhite
    
Exit Sub

EH:
    DisplayError "Geb. Datum"
    
End Sub
Public Property Set QueryFrm(objForm)
    Set myForm = objForm
End Property
Public Property Get QueryFrm() As Object
    Set QueryFrm = myForm
End Property
Private Sub UserForm_Terminate()
    If Not Me.QueryFrm Is Nothing Then
        Unload Me.QueryFrm
    End If
End Sub
Private Sub WFMDDAT_ONTV_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH

    DateCheck WFMDDAT_ONTV
    WFMDDAT_ONTV.BackColor = TextboxWhite

Exit Sub

EH:
    DisplayError "Datum ontvangen"
    
End Sub
Attribute VB_Name = "frmGBADocument"
Attribute VB_Base = "0{1B1E52BD-67AB-4BAA-B2A6-1EA121E2E1B7}{79D6E51D-A498-4356-89C8-4A7FB243955C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim myParentForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer

Public Property Set WorkitemViewer(objWorkitemViewer)
  Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property

Private Sub cmdOK_Click()
    If tbGba.Value <> Empty Then
    
        If Not SaveGBADocument Then Exit Sub
        
    End If
    
    Unload Me
End Sub

Private Sub cmdScreen_Click()
Dim i As Integer

On Error GoTo EH

    MousePointer = fmMousePointerHourGlass
    DoEvents
    
    If IsHostScreen("IGBA", WIViewer) Then
        
        For i = 2 To 23
    
        ' lees de 12 rijen van de SVB tabel
            tbGba = tbGba + RTrim(Scrape(i, 1, 80, "IGBA", WIViewer) + Chr(10))
        Next i
        
    ElseIf IsHostScreen("IACT", WIViewer) Then
        For i = 2 To 23
    
        ' lees de 12 rijen van de SVB tabel
            tbGba = tbGba + RTrim(Scrape(i, 1, 80, "IACT", WIViewer) + Chr(13) + Chr(10))
        Next i
    
    Else
        Err.Raise 12345, , "Open eerst een de HX schermen: IGBA of IACT"
    End If
    
    
    MousePointer = fmMousePointerDefault

Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "cmdScreen_Click"

End Sub



Private Sub cmdTerug_Click()
    Call UserForm_Terminate
End Sub


Private Sub UserForm_Activate()
        
    ReadGBADocument
    
End Sub

Private Sub UserForm_Terminate()
' geef aan het form, vanwaar dit form is aangeroepen, door
' dat dit scherm gesloten is

If Not Me.ParentForm Is Nothing Then
    Set Me.ParentForm.GBADocument = Nothing
End If
Unload Me
End Sub
Public Property Set ParentForm(myForm)
  Set myParentForm = myForm
End Property
Public Property Get ParentForm() As Object
  ' referentie naar het form vanwaar dit form is aangeroepen
  Set ParentForm = myParentForm
End Property
Private Function GetGBADocumentItemOrdinal() As Long
Dim i                   As Integer

    GetGBADocumentItemOrdinal = 0
    For i = 1 To WIViewer.Contents.Items.Count
        If WIViewer.Contents.Items.item(i).ItemType = wdoObjTypeFolderChild Then
            If WIViewer.Contents.Items.item(i).CALObject.Class = "GBA" Then
                GetGBADocumentItemOrdinal = i
                Exit Function
            End If
        End If
    Next
End Function

Private Function ReadGBADocument() As Boolean
Dim contentItem         As ContentsItem
Dim Import              As CALImport
Dim ChildItem           As CALClientListItem
Dim myObject            As Object
Dim fs                  As New FileSystemObject
Dim TmpFile             As TextStream
Dim Ordinal             As Long

    On Error GoTo EH
    ReadGBADocument = False
    Ordinal = GetGBADocumentItemOrdinal
    If Ordinal = 0 Then Exit Function
    Set ChildItem = CALClient.ClientList.Find(WIViewer.Contents.Items.item(Ordinal).CALObject.Info.objId)
    If ChildItem Is Nothing Then
        Set ChildItem = Application.CALClient.ClientList.Add(WIViewer.Contents.Items.item(Ordinal).CALObject.Info.objId, calAddDomainOnly)
    End If
    If (ChildItem.Info.Status And calObjStatusOpen) = calObjStatusOpen Then
        ChildItem.OpenedItem.Close calCloseAbortChanges
    End If
    Set Import = ChildItem.Open(calOpenReadOnly)
    On Error Resume Next
    Kill pvTempDir + "~ESWM export.tmp"
    Import.Extract (pvTempDir + "~ESWM export.tmp")
    Set TmpFile = fs.OpenTextFile(pvTempDir + "~ESWM export.tmp")
    tbGba = TmpFile.ReadAll
    TmpFile.Close
    Kill pvTempDir + "~ESWM export.tmp"
    Import.Close calOpenReadOnly
    Application.CALClient.ClientList.Remove ChildItem
    Me.Repaint
    ReadGBADocument = True
    Exit Function

EH:
    If Err.Number = 53 Then Resume Next
    DisplayError "ReadGbaDocument"
    ReadGBADocument = False
End Function

Private Function SaveGBADocument() As Boolean
Dim contentItem         As ContentsItem
Dim Import              As CALImport
Dim ChildItem           As CALClientListItem
Dim myObject            As Object
Dim Ordinal             As Long
Dim WI                  As CALWorkitemInfo
Dim objImport           As CALImport
Dim FldChild            As CALFolderChild

    On Error GoTo EH
    SaveGBADocument = False
    Ordinal = GetGBADocumentItemOrdinal
'   Remove GBAdocument als bestaat
    If Ordinal <> 0 Then
        WIViewer.CALClientListItem.OpenedItem.Children.Remove _
        WIViewer.CALClientListItem.OpenedItem.Children.item(Ordinal, calObjTypeAll)
    End If
    SaveToFile tbGba.Value, pvTempDir + "~ESWM GBA gegevens.txt"
    Set WI = CALClient.CreateImport("GBA gegevens", "GBA", pvTempDir + "~ESWM GBA gegevens.txt")
    Set ChildItem = CALClient.ClientList.Add(WI.objId, calAddRetain)
    Set objImport = ChildItem.Open(calOpenReadWrite)
    objImport.Save
    Set FldChild = WIViewer.CALClientListItem.OpenedItem.Children.Add(ChildItem.Info.objId, calChildLast)
    objImport.Close calCloseAbortChanges
    CALClient.ClientList.Remove ChildItem
    Kill pvTempDir + "~ESWM GBA gegevens"
    Me.Repaint
    SaveGBADocument = True
    Exit Function

EH:
    If Err.Number = 53 Then Resume Next
    DisplayError "ReadGbaDocument"
    SaveGBADocument = False
End Function

Private Sub SaveToFile(ByVal Text As String, FileName As String)
Dim fs                  As New FileSystemObject
Dim TmpFile             As TextStream

    On Error Resume Next
    Kill FileName
    Set TmpFile = fs.OpenTextFile(FileName, ForWriting, True)
    TmpFile.Write Text
    TmpFile.Close
End Sub
Attribute VB_Name = "frmGBAEch"
Attribute VB_Base = "0{8F46D17D-9726-45F9-A5A5-CA8735BED02B}{E53A0F99-A92F-4525-BC02-98DB05DC6EFB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim bOntv As Boolean
Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String

Private Sub cmdGBADocument_Click()
Dim myGBADocument As Object

    If Not Me.GBADocument Is Nothing Then
       Me.GBADocument.Show 0
       Exit Sub
    End If
    
    Set Me.GBADocument = New frmGBADocument
    Set myGBADocument = Me.GBADocument
    Set myGBADocument.WorkitemViewer = WIViewer
    Set myGBADocument.ParentForm = Me
    
    myGBADocument.Show 0
End Sub


Private Sub cmdPrint_Click()

' door print bugje in VBA (inhoud van listview wordt niet geprint
' wordt eerst listbox gevuld met data, hoogte en breedte van de
' listview
    
    lbPartners.ColumnCount = 9
    DoEvents ' moet hier anders wordt lb niet goed geprint
    CopyLvTolb lvPartners, lbPartners
    
    DoEvents ' idem
    
    Me.Repaint
    
    lbPartners.Visible = True
    Me.PrintForm
    lbPartners.Visible = False
End Sub
Private Sub cmdUitz_Click()
On Error GoTo EH

    CheckOpUitzondering WIViewer
Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub
Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub
Private Sub cmdOpslaan_Click()
On Error GoTo EH

    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    
    Call WFMSaveButton(WIViewer)

Exit Sub

EH:
    DisplayError "Doorsturen"
    
End Sub
Private Function SetCALXFormFields() As Boolean
Dim itmx As ListItem
Dim SVB As Field
Dim i As Integer

On Error GoTo EH

    SetCALXFormFields = False
    
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        
        CALSaveTable lvPartners, WIViewer.Fields.Find("_TABLE_SVB")
            
        WFMCJN_X_ONTV.Value = False
            
        For i = 1 To lvPartners.ListItems.Count
            If lvPartners.ListItems.item(i).SubItems(2) = "X" Then
                WFMCJN_X_ONTV.Value = True
                i = lvPartners.ListItems.Count + 1
            End If
        Next
                
    End If
            
            
    SetCALXFormFields = True
        
    
Exit Function

EH:
    DisplayError ("SetCALXFormFields")

End Function
Private Function GetCALXFormFields() As Boolean

On Error GoTo EH

    GetCALXFormFields = False
    CALGetTable lvPartners, WIViewer.Fields.Find("_TABLE_SVB")
    GetCALXFormFields = True

Exit Function

EH:
    DisplayError ("GetCALXFormFields")

End Function
Private Sub AddResultField(ListView As ListView, name, Caption, Witdh, Align, ResultOnly As Boolean)
Dim myColHeader As ColumnHeader
    
    Set myColHeader = ListView.ColumnHeaders.Add(, name, Caption, Witdh, Align)
    myColHeader.Tag = ResultOnly
    
End Sub
Private Sub cmdScreen_Click()
Dim itmx As ListItem
Dim i As Integer

On Error GoTo EH

    MousePointer = fmMousePointerHourGlass
    DoEvents
    
    If IsHostScreen("IGBA", WIViewer) Then
        ClearListView lvPartners
        
        For i = 0 To 11
    
        ' lees de 12 rijen van de SVB tabel
            Set itmx = Me.lvPartners.ListItems.Add()
            itmx.SubItems(3) = TrimScrape(11 + i, 4, 10, "IGBA", WIViewer)
            itmx.SubItems(4) = TrimScrape(11 + i, 15, 10, "IGBA", WIViewer)
            itmx.SubItems(5) = TrimScrape(11 + i, 26, 1, "IGBA", WIViewer)
            itmx.SubItems(6) = TrimScrape(11 + i, 28, 25, "IGBA", WIViewer)
            itmx.SubItems(7) = TrimScrape(11 + i, 54, 5, "IGBA", WIViewer)
            itmx.SubItems(8) = TrimScrape(11 + i, 60, 10, "IGBA", WIViewer)
            itmx.SubItems(9) = TrimScrape(11 + i, 71, 10, "IGBA", WIViewer)
        Next i
        lvPartners.Refresh
        
    Else
        Err.Raise 12345, , "Open eerst het HX scherm: IGBA"
    End If
    
    
    MousePointer = fmMousePointerDefault

Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "cmdScreen_Click"
    lvPartners.Refresh

End Sub

Private Sub lvPartners_ItemClick(ByVal item As MSComctlLib.ListItem)

    If bOntv And item.SubItems(2) = "X" And item.SubItems(1) = "X" Then
        item.SubItems(2) = ""
        Exit Sub
    End If
    If bOntv And item.SubItems(2) = "" And item.SubItems(1) = "X" Then
        item.SubItems(2) = "X"
        Exit Sub
    End If
    lvPartners.Refresh
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

On Error GoTo EH
    
    If Init Then Exit Sub
    Init = True
    
    Me.lvPartners.ColumnHeaders.Add , , , 0, 0 ', Alignment:=1
    AddResultField lvPartners, "JN_HUW_REGEL_AANM", "Aanm.", 35, 0, False
    AddResultField lvPartners, "JN_HUW_REGEL_OK", "Ontv.", 30, 0, False
    AddResultField lvPartners, "INGANG_SVB", "Ingang SVB", 60, 0, False
    AddResultField lvPartners, "EINDE_SVB", "Einde SVB", 60, 0, False
    AddResultField lvPartners, "R", "R", 30, 0, False
    AddResultField lvPartners, "NAAM_PARTNER", "Naam Partner", 126, 0, False
    AddResultField lvPartners, "VOORLETTERS", "Voorl.", 40, 0, False
    AddResultField lvPartners, "VOORVOEGSELS", "Voorvoeg.", 60, 0, False
    AddResultField lvPartners, "GEB_DATUM_PARTNER", "Geb.datum", 60, 0, False
    
    GetCALXFormFields
    
    ' bepaald of bij dubbelklik op de regel de kolom ontv aangevinkt kan worden
    If WFMCJN_X_AANM Then bOntv = True
    
    Call EnDisable
    
    If bOntv Then
        lvPartners.ControlTipText = "Dubbelklik op een regel om rubriek 'Ontv.' aan/uit te vinken"
    End If
    
    Me.lvPartners.Refresh
Exit Sub

EH:
    DisplayError "UserForm_Activate"
    
End Sub
Private Sub EnDisable()
On Error Resume Next

        WFMCJN_SZ_INGELICHT.Visible = False

End Sub
Public Property Set GBADocument(objForm)
    Set myForm = objForm
End Property
Public Property Get GBADocument() As Object
    Set GBADocument = myForm
End Property
Public Property Set WorkitemViewer(objWorkitemViewer)
  Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
  myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
 ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
On Error Resume Next
    
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0

End Sub

Private Sub UserForm_Terminate()
If Not Me.GBADocument Is Nothing Then
    Unload Me.GBADocument
End If
End Sub


Attribute VB_Name = "frmGBAExc"
Attribute VB_Base = "0{73C83E5B-E006-4460-BF7C-E7F628474857}{4E0C18F9-07C0-48E9-84DA-A278FE65002D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim bPEN As Boolean
Dim bOVL As Boolean
Dim bOntv As Boolean
Dim bWZP As Boolean
Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String

Private Sub cmdGBADocument_Click()
Dim myGBADocument As Object

    If Not Me.GBADocument Is Nothing Then
       Me.GBADocument.Show 0
       Exit Sub
    End If
    
    Set Me.GBADocument = New frmGBADocument
    Set myGBADocument = Me.GBADocument
    Set myGBADocument.WorkitemViewer = WIViewer
    Set myGBADocument.ParentForm = Me
    
    myGBADocument.Show 0
End Sub


Private Sub cmdPrint_Click()

' door print bugje in VBA (inhoud van listview wordt niet geprint
' wordt eerst listbox gevuld met data, hoogte en breedte van
' listview
    
    
        
    lbPartners.ColumnCount = 9
    If bOVL Then lbKinderen.ColumnCount = 6
    
    DoEvents ' moet hier anders wordt lb niet goed geprint
    CopyLvTolb lvPartners, lbPartners
    
    DoEvents ' idem
    If bOVL Then CopyLvTolb lvKinderen, lbKinderen
    DoEvents
    
    Me.Repaint
    
    lbPartners.Visible = True
    If bOVL Then lbKinderen.Visible = True
    Me.PrintForm
    lbPartners.Visible = False
    If bOVL Then lbKinderen.Visible = False
End Sub
Private Sub cmdUitz_Click()
On Error GoTo EH

    CheckOpUitzondering WIViewer
Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub
Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub
Private Sub cmdOpslaan_Click()
On Error GoTo EH

    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    
    Call WFMSaveButton(WIViewer)

Exit Sub

EH:
    DisplayError "Doorsturen"
    
End Sub
Private Function SetCALXFormFields() As Boolean
Dim itmx As ListItem
Dim SVB As Field
Dim i As Integer

On Error GoTo EH

    SetCALXFormFields = False
    
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        
        CALSaveTable lvPartners, WIViewer.Fields.Find("_TABLE_SVB")
            
        If bOVL Or bWZP Then CALSaveTable lvKinderen, WIViewer.Fields.Find("_TABLE_KINDEREN")
        
        
        WFMCJN_X_ONTV.Value = False
            
        For i = 1 To lvPartners.ListItems.Count
            If lvPartners.ListItems.item(i).SubItems(2) = "X" Then
                WFMCJN_X_ONTV.Value = True
                i = lvPartners.ListItems.Count + 1
            End If
        Next
                
        If Not WFMCJN_X_ONTV.Value And (bOVL Or bWZP) Then
            For i = 1 To lvKinderen.ListItems.Count
                If lvKinderen.ListItems.item(i).SubItems(2) = "X" Then
                    WFMCJN_X_ONTV.Value = True
                    i = lvKinderen.ListItems.Count + 1
                End If
            Next
        End If
        
        
    End If
            
            
    SetCALXFormFields = True
        
    
Exit Function

EH:
    DisplayError ("SetCALXFormFields")

End Function
Private Function GetCALXFormFields() As Boolean

On Error GoTo EH

    GetCALXFormFields = False
    
    If Not bWZP Then
        CALGetTable lvPartners, WIViewer.Fields.Find("_TABLE_SVB")
    End If
    If bOVL Or bWZP Then CALGetTable lvKinderen, WIViewer.Fields.Find("_TABLE_KINDEREN")
    
    GetCALXFormFields = True

Exit Function

EH:
    DisplayError ("GetCALXFormFields")

End Function
Private Sub AddResultField(ListView As ListView, name, Caption, Witdh, Align, ResultOnly As Boolean)
Dim myColHeader As ColumnHeader
    
    Set myColHeader = ListView.ColumnHeaders.Add(, name, Caption, Witdh, Align)
    myColHeader.Tag = ResultOnly
    
End Sub
Private Sub cmdScreen_Click()
Dim itmx As ListItem
Dim i As Integer

On Error GoTo EH

    MousePointer = fmMousePointerHourGlass
    DoEvents
    
    If IsHostScreen("IGBA", WIViewer) Then
        ClearListView lvPartners
        
        WFM_ANUMMER = TrimScrape(4, 41, 11, "IGBA", WIViewer)
        WFM_GEMEENTE = TrimScrape(7, 69, 4, "IGBA", WIViewer)
        
        For i = 0 To 11
    
        ' lees de 12 rijen van de SVB tabel
            Set itmx = Me.lvPartners.ListItems.Add()
            itmx.SubItems(3) = TrimScrape(11 + i, 4, 10, "IGBA", WIViewer)
            itmx.SubItems(4) = TrimScrape(11 + i, 15, 10, "IGBA", WIViewer)
            itmx.SubItems(5) = TrimScrape(11 + i, 26, 1, "IGBA", WIViewer)
            itmx.SubItems(6) = TrimScrape(11 + i, 28, 25, "IGBA", WIViewer)
            itmx.SubItems(7) = TrimScrape(11 + i, 54, 5, "IGBA", WIViewer)
            itmx.SubItems(8) = TrimScrape(11 + i, 60, 10, "IGBA", WIViewer)
            itmx.SubItems(9) = TrimScrape(11 + i, 71, 10, "IGBA", WIViewer)
        Next i
        lvPartners.Refresh
        
    ElseIf IsHostScreen("OKND", WIViewer) Then
        ClearListView lvKinderen
        
        For i = 0 To 11
    
        ' lees de 12 rijen van de SVB tabel
            Set itmx = Me.lvKinderen.ListItems.Add()
            itmx.SubItems(3) = TrimScrape(5 + i, 4, 10, "OKND", WIViewer)
            itmx.SubItems(4) = TrimScrape(5 + i, 15, 32, "OKND", WIViewer)
            itmx.SubItems(5) = TrimScrape(5 + i, 48, 5, "OKND", WIViewer)
            itmx.SubItems(6) = TrimScrape(5 + i, 60, 10, "OKND", WIViewer)
        Next i
        lvKinderen.Refresh
        
    Else
        Err.Raise 12345, , "Open eerst een van de HX schermen: IGBA of OKND"
    End If
    
    
    MousePointer = fmMousePointerDefault

Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "cmdScreen_Click"
    lvPartners.Refresh
    If bOVL Then lvKinderen.Refresh

End Sub

Private Sub lbSTATUS_VERZEKERDE_Change()
Dim objNote As CALNote
Dim i As Integer

    If WFM_IND_TRIGGER <> "OVL" Then
        If WFMLSTATUS_VERZEKERDE = "Overleden" Then
            Call WIViewer.Notes.Add(1, "_Overleden", "Reclassificeer naar OVL")
        Else
            For i = WIViewer.CALClientListItem.OpenedItem.Notes.Count To 1 Step -1
                If WIViewer.CALClientListItem.OpenedItem.Notes.item(i).name = "_Overleden" Then
                   WIViewer.CALClientListItem.OpenedItem.Notes.Remove WIViewer.CALClientListItem.OpenedItem.Notes.item(i)
                End If
            Next
        End If
    End If
End Sub
Private Sub lvPartners_ItemClick(ByVal item As MSComctlLib.ListItem)

    If bOntv And item.SubItems(2) = "X" And item.SubItems(1) = "X" Then
        item.SubItems(2) = ""
        Exit Sub
    End If
    If bOntv And item.SubItems(2) = "" And item.SubItems(1) = "X" Then
        item.SubItems(2) = "X"
        Exit Sub
    End If
    lvPartners.Refresh
End Sub
Private Sub lvKinderen_ItemClick(ByVal item As MSComctlLib.ListItem)

    If bOntv And (bOVL Or bWZP) And item.SubItems(2) = "X" And item.SubItems(1) = "X" Then
        item.SubItems(2) = ""
        Exit Sub
    End If
    If bOntv And (bOVL Or bWZP) And item.SubItems(2) = "" And item.SubItems(1) = "X" Then
        item.SubItems(2) = "X"
        Exit Sub
    End If
End Sub
Private Sub UserForm_Activate()
Static Init As Boolean

On Error GoTo EH
    If WFMLSTATUS_VERZEKERDE.Value = "In Leven" Then
        WFMLSTATUS_VERZEKERDE.Value = "In leven"
    End If
    If Init Then Exit Sub
    Init = True
    
    Select Case WIViewer.Fields.Find("IND_TRIGGER").CALFormField.Value
    Case Is = "OVL"
        bOVL = True
        lblTypeAanvraag.Caption = "Overlijden"
    Case Is = "PEN"
        bPEN = True
        lblTypeAanvraag.Caption = "Pensioeningang"
    Case Is = "WZP"
        bWZP = True
        lblTypeAanvraag.Caption = "Wezenpensioen"
    End Select
    
    If Not bWZP Then
        Me.lvPartners.ColumnHeaders.Add , , , 0, 0 ', Alignment:=1
        AddResultField lvPartners, "JN_HUW_REGEL_AANM", "Aanm.", 35, 0, False
        AddResultField lvPartners, "JN_HUW_REGEL_OK", "Ontv.", 30, 0, False
        AddResultField lvPartners, "INGANG_SVB", "Ingang SVB", 60, 0, False
        AddResultField lvPartners, "EINDE_SVB", "Einde SVB", 60, 0, False
        AddResultField lvPartners, "R", "R", 30, 0, False
        AddResultField lvPartners, "NAAM_PARTNER", "Naam Partner", 126, 0, False
        AddResultField lvPartners, "VOORLETTERS", "Voorl.", 40, 0, False
        AddResultField lvPartners, "VOORVOEGSELS", "Voorvoeg.", 60, 0, False
        AddResultField lvPartners, "GEB_DATUM_PARTNER", "Geb.datum", 60, 0, False
    End If
    
    If bOVL Or bWZP Then
        Me.lvKinderen.ColumnHeaders.Add , , , 0, 0 ', Alignment:=1
        AddResultField lvKinderen, "JN_KIND_AANM", "Aanm.", 35, 0, False
        AddResultField lvKinderen, "JN_KIND_OK", "Ontv.", 30, 0, False
        AddResultField lvKinderen, "DAT_GEB_KIND", "Geb.datum", 60, 0, False
        AddResultField lvKinderen, "NAAM_KIND", "Naam kind", 126, 0, False
        AddResultField lvKinderen, "VOORLETTERS_KIND", "Voorl.", 40, 0, False
        AddResultField lvKinderen, "ANUMMER_KIND", "A-nr. kind", 60, 0, False
    End If
    
    GetCALXFormFields
    
    ' bepaald of bij dubbelklik op de regel de kolom ontv aangevinkt kan worden
    If WFMCJN_X_AANM Then bOntv = True
    
    
    Call EnDisable
    
    If bOntv Then
        lvPartners.ControlTipText = "Dubbelklik op een regel om rubriek 'Ontv.' aan/uit te vinken"
    End If
    If bOntv And bOVL Then
        lvKinderen.ControlTipText = "Dubbelklik op een regel om rubriek 'Ontv.' aan/uit te vinken"
    End If
    
    
    Me.lvPartners.Refresh
Exit Sub

EH:
    DisplayError "UserForm_Activate"
    
End Sub
Private Sub EnDisable()
On Error Resume Next


    If bOVL Then
        lblTypeAanvraag = "Overlijden"
    End If
    If bPEN Then
        lblTypeAanvraag = "Pensioeningang"
        WFMCJN_SZ_INGELICHT.Visible = False
    End If

End Sub
Public Property Set GBADocument(objForm)
    Set myForm = objForm
End Property
Public Property Get GBADocument() As Object
    Set GBADocument = myForm
End Property
Public Property Set WorkitemViewer(objWorkitemViewer)
  Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
  myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
 ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
On Error Resume Next
    
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0

End Sub

Private Sub UserForm_Terminate()
    If Not Me.GBADocument Is Nothing Then
        Unload Me.GBADocument
    End If
End Sub


Attribute VB_Name = "frmGBARegistratie"
Attribute VB_Base = "0{1E65CB40-0324-482E-9D60-202977D1520E}{07BF9471-9430-47B6-8D18-E3BEA888EAC1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim HostForm As Object
Dim myESWMObjID As String

Private Sub cdmVerwijderen_Click()
    If MsgBox("Weet u zeker dat u dit document voorgoed wilt verwijderen?", vbYesNo) = vbYes Then
        WFM_BESTEMMING = "DEL"
        cmdOpslaan_Click
    End If
End Sub

Private Sub cmdScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Open eerst het juiste CAESAR scherm (OHUP of INWG)."
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Application.Desktop.WindowState = DesktopWindowState
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myIdent     As String

    On Error GoTo EH
    If WFM_BESTEMMING <> "DEL" Then Call CheckFields
    
    myIdent = WFM_NR_POLIS + WFM_IND_TRIGGER + WFM_ZK_VOLGNR
    If WFM_ZAAK_IDENT_NR <> myIdent Then
        WFM_ZAAK_IDENT_NR = myIdent
    End If

    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Application.Desktop.WindowState = DesktopWindowState
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub CheckFields()
    If WFM_DOCTYPE = "OVL Melding GBA" Then ANummerCheck WFM_ANUMMER

    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR = Format(Val(WFM_NR_AEGAR), "#########")
    If WFM_NR_AEGAR <> Empty And Val(WFM_NR_AEGAR) <> 0 Then _
        WFM_NR_AEGAR = Format(Val(WFM_NR_AEGAR), "000000000")
    DateCheck WFMDDAT_OVL
    DateCheck WFMDDAT_DOC
    DateCheck WFMDDAT_ONTV
    DateCheck WFMDGEB_DEELN

    If WFM_DOCTYPE <> "OVL Melding GBA" Then
        If WFM_NR_POLIS = "" Then
            WFM_NR_POLIS.BackColor = TextboxRed
            Err.Raise 12345, , "Deelnemer nummer is niet ingevuld."
        End If
    End If

    If WFMDDAT_DOC = "" Then
        WFMDDAT_DOC.BackColor = TextboxRed
        Err.Raise 12345, , "Datum document is niet ingevuld."
    End If
End Sub

Private Sub cmdNaarPIN_Click()
Dim myQueue As New CALQueue

    On Error GoTo ERR_NAARPIN
    If WFMDDAT_DOC <> "" Then
        If MsgBox("Wilt u dit document echt naar PIN versturen?", vbYesNo) = vbYes Then
            DateCheck WFMDDAT_DOC
            WFM_DOCTYPE = ""
            If WorkflowSave(WIViewer) Then
                CALSetFieldValue WIViewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR", "PIN"
    
                myQueue.Client = Application.CALClient
                myQueue.name = wsDoorzenden
    
                myQueue.Type = calQueueTypeWorkstep
                
                'Commented for EX9.21 Nl on Vista as it gives an Invalid Handler passed error
                'WIViewer.CALClientListItem.OpenedItem.Close (calCloseSaveChanges)
                'Comment ends
                'Comment - replacement code as suggested by Global360
                WIViewer.CALClientListItem.OpenedItem.Save
                WIViewer.CALClientListItem.OpenedItem.Close (calCloseAbortChanges)
                'Comment ends - replacement code as suggested by Global360
                
                WIViewer.CALClientListItem.Send myQueue, calSendDiscard
                WIViewer.TryClose wdoForceCloseSaveChanges
                Application.Desktop.WindowState = DesktopWindowState
            End If
        End If
    Else
        MsgBox "Geen documentdatum ingevuld."
        WFMDDAT_DOC.SetFocus
    End If
    Exit Sub

ERR_NAARPIN:
    DisplayError "Naar PIN"
End Sub

Private Sub UserForm_Activate()
Static Init     As Boolean

    If Init Then Exit Sub
    Init = True

    DocTypeAdd "", csDocDummy
    DocTypeAdd "OVL Melding GBA", csDocOverig
    WFM_ZK_VOLGNR.Value = "1"
    WFM_DOORZENDEN_NAAR = ""
End Sub

Private Sub DocTypeAdd(DocType As String, DocBehandeling As String)
Static i    As Integer

    If i = Empty Then i = 0
    WFM_DOCTYPE.AddItem
    WFM_DOCTYPE.list(i, 0) = DocType
    WFM_DOCTYPE.list(i, 1) = DocBehandeling
    i = i + 1
End Sub

Private Sub UserForm_Terminate()
    If Not Me.QueryFrm Is Nothing Then
        Unload Me.QueryFrm
    End If
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Public Property Set QueryFrm(objForm)
    Set myForm = objForm
End Property
Public Property Get QueryFrm() As Object
    Set QueryFrm = myForm
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub WFM_BESTEMMING_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_BESTEMMING.Value = UCase(WFM_BESTEMMING.Value)
    Cancel = False
End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub

Private Sub WFM_NR_AEGAR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Nr. Aegar"
End Sub

Private Sub WFM_NR_POLIS_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WFM_NR_POLIS.BackColor = TextboxWhite
    If WFM_NR_POLIS.Text <> "" Then PolisNummerCheck WFM_NR_POLIS
    Exit Sub

EH:
    DisplayError "Polisnummer"
End Sub

Private Sub WFMDDAT_DOC_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_DOC
    WFMDDAT_DOC.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum document"
End Sub

Private Sub WFMDDAT_ONTV_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_ONTV
    WFMDDAT_ONTV.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum ontvangen"
End Sub

Private Sub WFMDDAT_OVL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo ERR_DATOVL
    DateCheck WFMDDAT_OVL
    WFMDDAT_OVL.BackColor = TextboxWhite
    Exit Sub
    
ERR_DATOVL:
    DisplayError "Datum Overlijden"
End Sub

Private Sub WFMDGEB_DEELN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDGEB_DEELN
    WFMDGEB_DEELN.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Geb. Datum"
End Sub

Private Sub WFM_DOCTYPE_Change()
    If WFM_DOCTYPE = "" Then
        WFM_IND_TRIGGER = "BOP"
    Else
        WFM_IND_TRIGGER = Left(WFM_DOCTYPE, 3)
    End If
    WFM_DOCTYPE.BackColor = TextboxWhite
End Sub

Private Sub cmdCopy_Click()
Static KopieNr  As Integer
Dim KopieItem   As CALClientListItem

    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    KopieNr = KopieNr + 1
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call CopySendDocument(WIViewer.CALClientListItem, KopieNr)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    DisplayError "Kopie"
    MousePointer = fmMousePointerDefault
End Sub
Attribute VB_Name = "frmGBAUwo"
Attribute VB_Base = "0{D0B37F0C-B8F0-4F5A-A78B-3D4EF7F01807}{B766796C-1B74-478D-8DBD-2467099122BF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String

Private Sub cmdGBADocument_Click()
Dim myGBADocument As Object

    If Not Me.GBADocument Is Nothing Then
       Me.GBADocument.Show 0
       Exit Sub
    End If
    
    Set Me.GBADocument = New frmGBADocument
    Set myGBADocument = Me.GBADocument
    Set myGBADocument.WorkitemViewer = WIViewer
    Set myGBADocument.ParentForm = Me
    
    myGBADocument.Show 0
End Sub

Private Sub cmdPrint_Click()

    lbPartners.ColumnCount = 9
    
    DoEvents ' moet hier anders wordt lb niet goed geprint
    CopyLvTolb lvPartners, lbPartners
    
    DoEvents
    
    Me.Repaint
    
    lbPartners.Visible = True
    Me.PrintForm
    lbPartners.Visible = False
End Sub
Private Sub cmdUitz_Click()
On Error GoTo EH

    CheckOpUitzondering WIViewer
Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub
Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub
Private Sub cmdOpslaan_Click()
On Error GoTo EH

    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    
    Call WFMSaveButton(WIViewer)

Exit Sub

EH:
    DisplayError "Doorsturen"
    
End Sub
Private Function SetCALXFormFields() As Boolean
Dim itmx As ListItem
Dim SVB As Field
Dim i As Integer

On Error GoTo EH

    SetCALXFormFields = False
    
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        
        CALSaveTable lvPartners, WIViewer.Fields.Find("_TABLE_SVB")

        SetCALXFormFields = True
        
    End If
    
    If IsCollAlg(WIViewer.CALClientListItem.OpenedItem.Class) Then
        lblTypeAanvraag = "Algemeen"
    End If

Exit Function

EH:
    DisplayError ("SetCALXFormFields")

End Function
Private Function GetCALXFormFields() As Boolean
Dim itmx As ListItem
Dim SVB As Field

On Error GoTo EH

    GetCALXFormFields = False
    
    CALGetTable lvPartners, WIViewer.Fields.Find("_TABLE_SVB")
    
    GetCALXFormFields = True
    

Exit Function

EH:
    DisplayError ("GetCALXFormFields")

End Function
Private Sub AddResultField(ListView As ListView, name, Caption, Witdh, Align, ResultOnly As Boolean)
Dim myColHeader As ColumnHeader
    
    Set myColHeader = ListView.ColumnHeaders.Add(, name, Caption, Witdh, Align)
    myColHeader.Tag = ResultOnly
    
End Sub
Private Sub cmdScreen_Click()
Dim itmx As ListItem
Dim i As Integer

On Error GoTo EH

    MousePointer = fmMousePointerHourGlass
    DoEvents
    
    If IsHostScreen("IGBA", WIViewer) Then
        ClearListView lvPartners
        
        For i = 0 To 11
    
        ' lees de 12 rijen van de SVB tabel
            Set itmx = Me.lvPartners.ListItems.Add()
            itmx.SubItems(3) = TrimScrape(11 + i, 4, 10, "IGBA", WIViewer)
            itmx.SubItems(4) = TrimScrape(11 + i, 15, 10, "IGBA", WIViewer)
            itmx.SubItems(5) = TrimScrape(11 + i, 26, 1, "IGBA", WIViewer)
            itmx.SubItems(6) = TrimScrape(11 + i, 28, 25, "IGBA", WIViewer)
            itmx.SubItems(7) = TrimScrape(11 + i, 54, 5, "IGBA", WIViewer)
            itmx.SubItems(8) = TrimScrape(11 + i, 60, 10, "IGBA", WIViewer)
            itmx.SubItems(9) = TrimScrape(11 + i, 71, 10, "IGBA", WIViewer)
        Next i
        lvPartners.Refresh
        
    Else
        Err.Raise 12345, , "Open eerst het HX scherm IGBA"
    End If
    
    
    MousePointer = fmMousePointerDefault

Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "cmdScreen_Click"
    lvPartners.Refresh

End Sub


Private Sub UserForm_Activate()
Static Init As Boolean

On Error GoTo EH
    
    If Init Then Exit Sub
    Init = True
    
    Me.lvPartners.ColumnHeaders.Add , , , 0, 0 ', Alignment:=1
    AddResultField lvPartners, "JN_HUW_REGEL_AANM", "Aanm.", 35, 0, False
    AddResultField lvPartners, "JN_HUW_REGEL_OK", "Ontv.", 30, 0, False
    AddResultField lvPartners, "INGANG_SVB", "Ingang SVB", 60, 0, False
    AddResultField lvPartners, "EINDE_SVB", "Einde SVB", 60, 0, False
    AddResultField lvPartners, "R", "R", 30, 0, False
    AddResultField lvPartners, "NAAM_PARTNER", "Naam Partner", 126, 0, False
    AddResultField lvPartners, "VOORLETTERS", "Voorl.", 40, 0, False
    AddResultField lvPartners, "VOORVOEGSELS", "Voorvoeg.", 60, 0, False
    If WIViewer.CALClientListItem.OpenedItem.Class = "COLLUWO" Then
        AddResultField lvPartners, "GEB_DATUM", "Geb.datum", 60, 0, False
    Else
        AddResultField lvPartners, "GEB_DATUM_PARTNER", "Geb.datum", 60, 0, False
    End If
    GetCALXFormFields
    
Exit Sub

EH:
    DisplayError "UserForm_Activate"
    
End Sub
Public Property Set GBADocument(objForm)
    Set myForm = objForm
End Property
Public Property Get GBADocument() As Object
    Set GBADocument = myForm
End Property
Public Property Set WorkitemViewer(objWorkitemViewer)
  Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
  myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
 ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
On Error Resume Next
    
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Terminate()
If Not Me.GBADocument Is Nothing Then
    Unload Me.GBADocument
End If
End Sub

Attribute VB_Name = "frmHostScreen"
Attribute VB_Base = "0{8D9B1080-243F-4F1F-A7DC-E0CDAE38433B}{1D116272-85A4-4AEB-B425-7FA9C58486C5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Attribute VB_Name = "frmInfo"
Attribute VB_Base = "0{96560C66-D4A2-4529-BB03-421FD979C691}{7EEB89AF-DC3A-4DF4-99BD-FB043FD340AA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim myForm      As Object
Dim WIViewer    As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    InfoVerstuurd = False
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Public Sub cmdOpslaan_Click()
Dim myKenMerk, myIdent, myInfoNoteName As String
Dim mapViewer As WorkitemViewer
Dim myffDoc  As CALFormFields
Dim WIXMLData As New clsWIData
Dim sNTUsername As String

    Err.Clear
    On Error GoTo EH
    If TextBox1.Text = "" Then
        MsgBox "Verzoek is leeg!              "
    ElseIf Not WFM_DOORZENDEN_NAAR.Text = "INFO" Then
            If (InfoSent <> "") Then
                g_NTUsername = Eastman.getWFVarString("WFUAdsName", InfoUserName.Value)
                If g_NTUsername = "" Then
                    sNTUsername = fGetFullNameOfLoggedUser(InfoUserName.Value)
                    sNTUsername = Left(sNTUsername, 20) 'Make sure it not to long
                    If sNTUsername = "" Then sNTUsername = InfoUserName.Value
                    Eastman.setWFVarString "WFUAdsName", sNTUsername, InfoUserName.Value
                    g_NTUsername = sNTUsername
                    End If
                If g_NTUsername = "" Then g_NTUsername = InfoUserName.Value
            End If

'           Eerst toegang krijgen tot XML database
            Set WIXMLData = WFMData.getWIData(WIViewer.CALClientListItem.OpenedItem)
'           Nu moet ik de tekst toevoegen..
            WIXMLData.addToelichting g_NTUsername, TextBox1, "I"
'           Wanneer database is gewijzigd dan opslaan.
            If WIXMLData.XMLData.Changed Then
                WFMData.setWIData WIViewer.CALClientListItem.OpenedItem, WIXMLData  'WIViewer.CALClientListItem.OpenedItem, WIXMLData
            End If

            Set mapViewer = Application.Viewers.FindViewer(mapinfoobjClientListItem)
            If Not mapViewer Is Nothing Then
'               Eerst toegang krijgen tot XML database
                Set WIXMLData = WFMData.getWIData(mapViewer.CALClientListItem.OpenedItem)
'               Nu moet ik de tekst toevoegen..
                WIXMLData.addToelichting g_NTUsername, TextBox1, "I"
'               Wanneer database is gewijzigd dan opslaan.
                If WIXMLData.XMLData.Changed Then
                    WFMData.setWIData mapViewer.CALClientListItem.OpenedItem, WIXMLData  'WIViewer.CALClientListItem.OpenedItem, WIXMLData
                End If
                InfoRappeldat = Format(TMPDRAPPEL, "yyyy-mm-dd")
            End If

            WFM_BEH_GROEP.Text = get_BEHGRP(WFM_IND_HUPO.Text)

'           Tbv aftesting naar Parkeren
            If optNAAR_PARK_ja.Value = True Then
                NaarParkeren = True
            Else
                NaarParkeren = False
            End If
            If Not WorkflowSave(WIViewer) Then Exit Sub
            Call WFMSaveButton(WIViewer)
            InfoVerstuurd = True
    End If
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub UserForm_Activate()
    WIViewer.Commandbars.Controls("Insert").Enabled = False
    WFM_DOORZENDEN_NAAR.Text = Right(WFM_DOORZENDEN_NAAR.Text, 3)
    InfoVerstuurd = False
    TMPDRAPPEL.Value = ""
    AFDELING = Eastman.getWFVarString("Afdeling", Eastman.Client.username)
    Label55.Visible = True
    optNAAR_PARK_ja.Visible = True
    optNAAR_PARKnee.Visible = True
    Exit Sub

EH:
    DisplayError "Userform activate"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Set QueryFrm(objForm)
    Set myForm = objForm
End Property
Public Property Get QueryFrm() As Object
    Set QueryFrm = myForm
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Control As MSForms.Control, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal x As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
    MsgBox "Paste"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Terminate()
    If Not Me.QueryFrm Is Nothing Then
        Unload Me.QueryFrm
    End If
End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub

Private Sub WFM_NR_AEGAR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Nr. Aegar"
End Sub

Private Sub WFM_NR_POLIS_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_NR_POLIS.BackColor = TextboxWhite
End Sub

Private Sub WFMDGEB_DEELN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDGEB_DEELN
    WFMDGEB_DEELN.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Geb. Deelnemer"
End Sub

Private Sub TMPDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck TMPDRAPPEL
    TMPDRAPPEL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappeldatum"
End Sub
Attribute VB_Name = "frmInfoAntwoord"
Attribute VB_Base = "0{512134AB-46C3-41C0-98FB-FF38E2555653}{CAD9E26A-0737-400E-BA34-446AD40AB615}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim initNotitie         As Boolean
Dim myForm              As Object
Dim myNotitie           As Object
Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim strAfdelingsNummer  As String

Private Sub AFDELING_Change()
Dim strAfdeling         As String
Dim strAfdeling_user    As String
Dim vUser               As Variant

    strAfdeling = AFDELING.SelText
'   WO 20080827 TD122795 onderstaande regel vervangen door de If daaronder i.v.m. sorteren
'   WFM_BEHANDELAAR.list = CALGetUsersPerAfdeling(strAfdeling)
    If WFM_BEH_GROEP = "" Then 'Geen behandelgroep dan afdeling
        WFM_BEHANDELAAR.Clear
        For Each vUser In GetUsersPerAfdeling(strAfdeling)
            WFM_BEHANDELAAR.AddItem vUser
        Next
    Else            'wel behandelgroep dan
        WFM_BEHANDELAAR.Clear
        For Each vUser In GetUsersPerPerBehGroep(WFM_BEH_GROEP.Text, strAfdeling)
            WFM_BEHANDELAAR.AddItem vUser
        Next
    End If
    strAfdeling_user = CALGetUserVar("Afdeling", CALClient.username)
    If strAfdeling <> strAfdeling_user Then
        WFM_BEHANDELAAR.Value = ""
        WFM_BEHANDELAAR.Locked = True
        WFM_BEH_GROEP.Value = ""
        WFM_BEH_GROEP.Locked = True
        WFM_STUUR_VAR.Value = "1"
    Else
        WFM_BEHANDELAAR.Locked = False
    End If
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myKenMerk, myIdent, myInfoNoteName As String
Dim bdoctype            As Boolean

    Err.Clear
    On Error GoTo EH
    Call CheckFields
    If strAfdelingsNummer = "" Then
'       Voor de centrale flows gaan we terug naar beoordelen doc
        WFM_IND_TRIGGER.Value = ""
    Else        'Decentraleprocessen
'       Naar een ander beoord INFO als de afdeling gewijzigd is
        If AFDELING.Value <> CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR") Then
            WFM_DOCTYPE.Value = "INF Informatieverzoek"
            WFM_IND_TRIGGER.Value = Left(WFM_DOCTYPE, 3)
            WFM_DOORZENDEN_NAAR.Value = AFDELING.Value
            WFM_BESTEMMING.Value = AFDELING.Value
            bdoctype = True
            Call Doorzendennieuw(WIViewer, WFM_BESTEMMING.Value, bdoctype)
            Exit Sub
        End If
'       Voor de decentrale niet maar wel terug naar beoord INFO,
'       naar een ander beoord INFO of naar folder vullen...
        If WFM_DOCTYPE.Value <> "" Then
            If WFM_DOCTYPE.Value = "INF Informatieverzoek" Then
                Beep
                WFM_DOCTYPE.BackColor = TextboxRed
                Err.Raise 12345, , "Verander het Document type indien er een map van gemaakt moet worden!"
            End If
            WFM_IND_TRIGGER.Value = Left(WFM_DOCTYPE, 3)
            WFM_WERKSRT = WFM_DOCTYPE.list(WFM_DOCTYPE.ListIndex, 2)
        Else
            WFM_DOCTYPE.Value = "INF Informatieverzoek"
        End If
    End If
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub CheckFields()
    CheckHupo WFM_BEHANDELAAR
End Sub

Private Sub CommandTerugsturen_Click()
Dim myQueue             As New CALQueue
Dim myKenMerk, myIdent, myInfoNoteName, aanvraagproces As String
Dim WIXMLData           As New clsWIData

    On Error GoTo EH
    Err.Clear
    If Not TextBox1.Text = "" Then
        Set WIXMLData = WFMData.getWIData(WIViewer.CALClientListItem.OpenedItem)
        ' Nu moet ik de tekst toevoegen..
        WIXMLData.addToelichting g_NTUsername, TextBox1.Text, "A"
        '  Wanneer database is gewijzigd dan opslaan.
        If WIXMLData.XMLData.Changed Then
            WFMData.setWIData WIViewer.CALClientListItem.OpenedItem, WIXMLData  'WIViewer.CALClientListItem.OpenedItem, WIXMLData
        End If
        CALSetFieldValue WIViewer.CALClientListItem.OpenedItem, "ZAAK_VLGNR_MEMO", "Antwoord informatieverzoek"
        aanvraagproces = getaanvraagproces(WFM_AANVRAAG_INFO.Text)
        CALSetFieldValue WIViewer.CALClientListItem.OpenedItem, "IND_TRIGGER", ""
        CALSetFieldValue WIViewer.CALClientListItem.OpenedItem, "BEHANDELAAR", ""
        CALSetFieldValue WIViewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR", aanvraagproces
        myQueue.name = wsDoorzenden
        myQueue.Type = calQueueTypeWorkstep
        
        'Commented for EX9.21 Nl on Vista as it gives an Invalid Handler passed error
        'WIViewer.CALClientListItem.OpenedItem.Close (calCloseSaveChanges)
        'Comment ends
        'Comment - replacement code as suggested by Global360
        WIViewer.CALClientListItem.OpenedItem.Save
        WIViewer.CALClientListItem.OpenedItem.Close (calCloseAbortChanges)
        'Comment ends - replacement code as suggested by Global360
        
        WIViewer.CALClientListItem.Send myQueue, calSendDiscard
        WIViewer.TryClose wdoForceCloseSaveChanges
    Else
        MsgBox "Antwoord is leeg!                "
    End If
    Exit Sub

EH:
    DisplayError "Terugsturen informatieverzoek"
End Sub

Private Sub imgCAESAR_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call Extralink(WIViewer, WFM_NR_POLIS)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
End Sub

Private Sub imgNotitie_Click()
    Set frmNotitie.rsViewer = WIViewer
    If Not ((WIViewer.CALClientListItem.Info.Status And calObjStatusWIP) = calObjStatusWIP) Then
        frmNotitie.lblAddNote.Enabled = False
    End If
    frmNotitie.Show 0
End Sub

Private Sub IMGsnelzoek_Click()
    frmQuery.QRYTextBox1 = WFM_NR_POLIS
    frmQuery.cmdFind_Click
    frmQuery.Show 0
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean
Dim i                   As Integer
Dim strAfdeling         As String
Dim strUser             As String

    On Error GoTo EH
    WIViewer.Commandbars.Controls("Insert").Enabled = False
    If initNotitie = True Then Exit Sub
    frmInfoAntwoord.Caption = "Informatievraag"
    strAfdelingsNummer = Left(GetWorkstep(WIViewer), 2)
    If Init Then Exit Sub
    Init = True
    strAfdeling = WFM_DOORZENDEN_NAAR.Value
    WFM_ZAAK_VLGNR_MEMO.Text = getaanvraagproces(WFM_AANVRAAG_INFO.Text)
    strAfdelingsNummer = ""
''Q1 Release 2012 CR No. 153254 Dept Changes
    Select Case strAfdeling
        Case "PTA"
             strAfdelingsNummer = "01"
        Case "PTB"
             strAfdelingsNummer = "02"
        Case "FND"
             strAfdelingsNummer = "03"
        Case "PTD"
             strAfdelingsNummer = "04"
        Case "KJW"
             strAfdelingsNummer = "07"
        Case "PPN"
             strAfdelingsNummer = "10"
        Case "PAC"
             strAfdelingsNummer = "11"
        Case "PPI"
             strAfdelingsNummer = "14"
        Case "FVP"
             strAfdelingsNummer = "17"
        Case "FAL"
             strAfdelingsNummer = "18"
        Case "PTC"
             strAfdelingsNummer = "19"
        Case "PTE"
             strAfdelingsNummer = "21"
        Case "PTF"
             strAfdelingsNummer = "22"
        Case "PTG"
             strAfdelingsNummer = "23"
        Case "PTH"
             strAfdelingsNummer = "24"
        Case "PTI"
             strAfdelingsNummer = "26"
        Case "APP"                                      '[PAC] 17MAR15 - PTN --> APP - TD172461
             strAfdelingsNummer = "25"                  '[PAC] 17MAR15 - PTN --> APP - TD172461
        Case "PTL"                                      '[PAC] - TD17266
             strAfdelingsNummer = "27"                  '[PAC] - TD17266
        Case "PTR"                                      '[PAC] - TD17266
             strAfdelingsNummer = "28"                  '[PAC] - TD17266
    End Select
    If strAfdelingsNummer = "" Then
        Label44.Visible = False
        Label52.Visible = False
        Label41.Visible = False
        AFDELING.Visible = False
        WFM_BEHANDELAAR.Visible = False
        WFM_DOCTYPE.Visible = False
    Else
        AFDELING.list = plActievePostProcessen
        AFDELING.Value = strAfdeling
        strUser = WFM_BEHANDELAAR.Value
        WFM_BEHANDELAAR.ColumnCount = 2
        WFM_BEHANDELAAR.BoundColumn = 1
        WFM_BEHANDELAAR.TextColumn = -1
        WFM_BEHANDELAAR.ColumnWidths = "50;0"
        On Error Resume Next
        WFM_BEHANDELAAR.Value = strUser
        On Error GoTo EH
        WFM_DOCTYPE.ColumnCount = 3
        WFM_DOCTYPE.BoundColumn = 1
        WFM_DOCTYPE.TextColumn = -1
        WFM_DOCTYPE.ColumnWidths = ";0;0"
'       Doctype, type werksrt
        DocTypeAdd "", csDocOverig, ""
        DocTypeAdd csOverigePost, csDocOverig, ""
        DocTypeAdd "INF Informatieverzoek", csDocOverig, "INF"
        WFM_DOCTYPE.Value = ""
    End If
    initNotitie = False
    Set frmNotitie.rsViewer = WIViewer
    frmNotitie.lblAddNote.Enabled = False
    Set NotitieFrm = frmNotitie
    initNotitie = True
    frmNotitie.Show vbModeless
'   Mabr op team nivaue wil men ook een view en dan moet het team gezet kunnen worden.
    If strAfdeling = "PTA" Or strAfdeling = "PTB" Or strAfdeling = "FND" Or strAfdeling = "PTC" Or strAfdeling = "PTD" Then
        WFM_BEH_GROEP.Clear
        WFM_BEH_GROEP.AddItem ""
        WFM_BEH_GROEP.AddItem "A"
        WFM_BEH_GROEP.AddItem "B"
        WFM_BEH_GROEP.AddItem "C"   '24NOV09 [PAC] - Hardcoded
        WFM_BEH_GROEP.AddItem "D"   '24NOV09 [PAC] - Hardcoded
    Else
        WFM_BEH_GROEP.Visible = False
        lblbeg.Visible = False
    End If
    WFM_BEH_GROEP.Text = get_BEHGRP(WFM_IND_HUPO.Text)
    Exit Sub

EH:
    DisplayError "Userform activate"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Set QueryFrm(objForm)
    Set myForm = objForm
End Property
Public Property Get QueryFrm() As Object
    Set QueryFrm = myForm
End Property

Public Property Set NotitieFrm(objForm)
    Set myNotitie = objForm
End Property
Public Property Get NotitieFrm() As Object
    Set NotitieFrm = myNotitie
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_BeforeDropOrPaste(ByVal Cancel As MSForms.ReturnBoolean, ByVal Control As MSForms.Control, ByVal Action As MSForms.fmAction, ByVal Data As MSForms.DataObject, ByVal x As Single, ByVal Y As Single, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)
    MsgBox "paste"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Terminate()
    If Not Me.QueryFrm Is Nothing Then
        Unload Me.QueryFrm
    End If
    If Not Me.NotitieFrm Is Nothing Then
        Unload Me.NotitieFrm
    End If
End Sub

Private Sub WFM_BEH_GROEP_Change()
' waarde veranderd dus dan behandelaars leeg
' moeten we nog checken voor groepen onder de afdeling???
' of niet.. een dropdownlistje is beter misschien
Dim beh_groepnew        As String
Dim behgroepgebr        As String
Dim vUser               As Variant
Dim strAfdeling         As String

    beh_groepnew = WFM_BEH_GROEP.Text
    behgroepgebr = CALGetUserVar("WFUBehGroep", CALClient.username)
    strAfdeling = CALGetUserVar("Afdeling", CALClient.username)
'   Alle users van de KS1 2 3 4 voor welk team dan ook
'   AFDELING.Text
    If beh_groepnew = "A" Or beh_groepnew = "B" Or beh_groepnew = "C" Or beh_groepnew = "D" Then
        WFM_BEHANDELAAR.Clear
        If strAfdeling <> "" Then
            For Each vUser In GetUsersPerPerBehGroep(WFM_BEH_GROEP.Text, strAfdeling)
                WFM_BEHANDELAAR.AddItem vUser
            Next
        End If
    Else
        If beh_groepnew <> behgroepgebr And beh_groepnew <> "" Then
           WFM_BEHANDELAAR.Value = ""
           WFM_BEHANDELAAR.Locked = True
        Else
           WFM_BEHANDELAAR.Locked = False
           If beh_groepnew = "" Then WFM_BEHANDELAAR.list = CALGetUsersPerAfdeling(AFDELING.Text)
        End If
    End If
End Sub

Private Sub WFM_BEHANDELAAR_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_BEHANDELAAR.Value = UCase(WFM_BEHANDELAAR.Value)
    Cancel = False
End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub

Private Sub WFM_NR_AEGAR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Nr. Aegar"
End Sub

Private Sub WFM_NR_POLIS_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_NR_POLIS.BackColor = TextboxWhite
End Sub

Private Sub WFMDGEB_DEELN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDGEB_DEELN
    WFMDGEB_DEELN.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Geb. Deelnemer"
End Sub

Private Sub DocTypeAdd(DocType As String, DocBehandeling As String, Kenmerk As String)
Static i                As Integer

    If i = Empty Then i = 0
    WFM_DOCTYPE.AddItem
    WFM_DOCTYPE.list(i, 0) = DocType
    WFM_DOCTYPE.list(i, 1) = DocBehandeling
    WFM_DOCTYPE.list(i, 2) = Kenmerk
    i = i + 1
End Sub
Attribute VB_Name = "frmInfoNote"
Attribute VB_Base = "0{204C878B-8190-4A45-8AA8-350C4AE75F9A}{8514E6FA-618E-4918-9DA5-CCEE08DB3811}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myNoteName          As String

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Public Property Let NoteName(VarValue)
    myNoteName = VarValue
End Property
Public Property Get NoteName()
    NoteName = myNoteName
End Property

Private Sub CommandButton1_Click()
Dim myHupo              As WFDWorkitem.Field

    On Error GoTo EH
    geannuleerd = False
    Me.Hide
    Exit Sub

EH:
    DisplayError "Toevoegen notitie"
End Sub

Private Sub CommandButton2_Click()
    geannuleerd = True
    Me.Hide
End Sub

Private Sub UserForm_Activate()
    If myNoteName = Empty Then
        myNoteName = "Notitie dd " & Format(Now(), " yyyy-mm-dd")
    Else
        myNoteName = myNoteName & " dd " & Format(Now(), " yyyy-mm-dd")
    End If
    TextBox1.SetFocus
    Me.Caption = myNoteName
End Sub
Attribute VB_Name = "frmKAPMutCaesar"
Attribute VB_Base = "0{370E7E29-78FA-4F72-B7D6-650AC1FF50A9}{C9634F75-CA9A-4FF4-9A0E-02563F2181DD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim myForm              As Object
Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myPolOver           As CALFormField
Dim WithEvents ObjEmail As Outlook.MailItem
Attribute ObjEmail.VB_VarHelpID = -1
Dim strDateString       As String
Dim booSend             As Boolean

Private Sub cmdFEP_GELFORM_Click()
Dim strTekst            As String
Dim strFilename         As String
Dim fs                  As New FileSystemObject
Dim ts                  As TextStream
Dim WI                  As CALWorkitemInfo
Dim ChildItem           As CALClientListItem
Dim objImport           As CALImport
Dim FldChild            As CALFolderChild
Dim lngShell            As Long
Dim nameDIPdoc          As String

    On Error GoTo EH
    MsgBox Err.Description, _
       vbOKOnly + vbExclamation + vbMsgBoxSetForeground, _
        "WAAR is dat formulier????!!!!"
    Exit Sub

EH:
    DisplayError "cmdFEP_gelform_Click() Dont try this at home KIDS!!!!"
End Sub

Private Sub cmdOpslaan_Click()
Dim myIdent             As String

    On Error GoTo EH
    If Not WFM_Validatie Then Exit Sub
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub imgGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean

    If Init Then Exit Sub
    Init = True
    GetCALXFormFields
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Select Case WFM_OORSPR_KENMERK
        Case "PEN"
             MultiPage1.pages("PEN").Visible = True
             MultiPage1.pages("PEN").Enabled = True
             Bende
        Case "OVL"
             MultiPage1.pages("OVL").Visible = True
             MultiPage1.pages("OVL").Enabled = True
             Select Case WFM_WIE_OVERLEDEN.Value
                Case "D":
                     fraDeelnemer.Visible = True
                Case "P":
                     fraPartner.Visible = True
                Case "W":
                     fraWees.Visible = True
                     lblEx.Visible = False
                     WFM_NAAM_PARTNER_ZAAK.Visible = False
             End Select
             Bende
    End Select
    If WFM_BESL_BEG = "Ingang bij AEGON" Then fraIngang.Visible = True
    If WFM_BESL_BEG = "" Then fraBeslis.Visible = True
    If WFM_BEH_GROEP <> "" Then
        lblbeg.Visible = True
        WFM_BEH_GROEP.Visible = True
    End If
    StatusBar1.Panels.item("WFM_NR_POLIS").Text = "Deeln. nr.: " & WFM_NR_POLIS
    StatusBar1.Panels.item("WFM_NR_AEGAR").Text = "Aegarnr.: " & WFM_NR_AEGAR
    MultiPage1.Value = 1
    CheckOpUitzondering WIViewer, txtBijzonderheden
    If txtBijzonderheden.Text = "" Then
        MultiPage1.pages("PageUitz").Visible = False
    End If
End Sub

Private Sub Bende()
'   Eigenlijk ergens in een module maar dan moet ik  het form weer meegegeven..
    WFMGetFieldYNO Me, "JN_KAPITAALUITK"
    WFMGetFieldYNO Me, "JN_PENS_VEREVENING"
    WFMGetFieldYNO Me, "JN_OPO_VERZEKERD"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_AFKOOP_NP_BEP"
    WFMGetFieldYNO Me, "JN_PEN_PIN_WIJZ"
    WFMGetFieldYNO Me, "JN_FONDS_UITK"
    WFMGetFieldYNO Me, "JN_BUITENLANDER"
    WFMGetFieldYNO Me, "JN_UITKVIA_WIJZ"
    WFMGetFieldYNO Me, "JN_PARTN_PENS"
    WFMGetFieldYNO Me, "JN_UITRUILBAAR_NP"
    WFMGetField WIViewer, WFM_STATUS_VERZEKERDE, 4
    WFMGetField WIViewer, WFMDDAT_INGANG, 4
'   OVL
    WFMGetFieldYNO Me, "JN_KAPITAALUITK"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_PEN_PIN_WIJZ"
    WFMGetFieldYNO Me, "JN_FONDS_UITK"
    WFMGetFieldYNO Me, "JN_BUITENLANDER"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_EINDE_NP"
    WFMGetFieldYNO Me, "JN_EINDE_OP"
    WFMGetFieldYNO Me, "JN_EINDE_WZP"
    WFMGetFieldYNO Me, "JN_INGANG_NP"
    WFMGetFieldYNO Me, "JN_INGANG_OPO"
    WFMGetFieldYNO Me, "JN_MEER_BEGUNST"
    OVL_WFMDDAT_INGANG = WFMDDAT_INGANG
    WFMGetField WIViewer, WFM_NAAM_PARTNER_ZAAK, 4
End Sub

Public Sub WFMGetFieldYNO(ByVal WFMForm As Object, ByVal WFMFormFieldName As String)
Dim WFMViewerField      As Field
Dim WFMViewerFieldValue
Dim ctlFormfield        As Control

    Set WFMViewerField = WFMForm.WorkitemViewer.Fields.Find(WFMFormFieldName)
    If WFMViewerField Is Nothing Then
        MsgBox WFMFormFieldName & " not found on WFM form!"
        Call InitFuncSec
        If FuncSecGroup = "SYSTEEMBEHEER" Then
        Else
            Exit Sub
        End If
    End If
    WFMViewerFieldValue = WFMViewerField.CALFormField.Value
'   Loop trhu all fields on the form and look for strFieldName fields
    For Each ctlFormfield In WFMForm.Controls
        If InStr(ctlFormfield.name, WFMFormFieldName) > 0 Then
            If Trim(ctlFormfield.ControlTipText) = "" Then
                ctlFormfield.ControlTipText = WFMViewerField.CALFormField.Info.HelpText     'put help in the tooltip
            End If
            ctlFormfield.Tag = WFMViewerField.CALFormField.Info.Prompt
            If UCase(Mid(WFMViewerFieldValue, 1, 1)) = "J" And _
                UCase(Right(ctlFormfield.name, 2)) = "JA" Then
                ctlFormfield = True
            End If
            If UCase(Mid(WFMViewerFieldValue, 1, 1)) = "N" And _
                UCase(Right(ctlFormfield.name, 3)) = "NEE" Then
                ctlFormfield = True
            End If
            If UCase(Mid(Trim(WFMViewerFieldValue), 1, 1)) = "" And _
                UCase(Right(ctlFormfield.name, 3)) = "ONB" Then
                ctlFormfield = True
            End If
        End If
    Next
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        myPolOver.Value = Right$(Space(10) & Trim(tbPolOver1), 10) & ";" & _
                          Right$(Space(10) & Trim(tbPolOver2), 10) & ";" & _
                          Right$(Space(10) + Trim(tbPolOver3), 10) & ";"
    End If
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

Private Function WFM_Validatie() As Boolean
    WFM_Validatie = False
'   Er is nog geen duidelijkheid over eventuele validatie op gebruikersniveau.
    WFM_Validatie = True
End Function
Attribute VB_Name = "frmKAPOfferteKap"
Attribute VB_Base = "0{9B7F5D49-CE25-4DB7-BF43-CA490FAE2B1A}{97E0BAC3-C486-454E-9C0C-2E32DE92F2EE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver  As CALFormField
Dim WithEvents ObjEmail As Outlook.MailItem
Attribute ObjEmail.VB_VarHelpID = -1
Dim strDateString As String
Dim booSend As Boolean
Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property



Private Sub imgGBA_Click()
On Error GoTo EH

    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
 
Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH
    
    ' gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, lbTemplates.Value)
    
Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    
End Sub
Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub
Private Sub cmdOpslaan_Click()
On Error GoTo EH

    If Not WFM_Validatie Then Exit Sub
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)

Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub
Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub
Private Sub UserForm_Activate()
Static Init As Boolean

    If Init Then Exit Sub
    Init = True
    
    GetCALXFormFields
    
    lbTemplates.AddItem "Offerte kapitaal"
    lbTemplates.AddItem "PIN Offerte KAP"
    
    If WFM_OORSPR_KENMERK = "OVL" Then
        lblDatOVL.Visible = True
        WFMDDAT_OVL.Visible = True
    End If
    
    Select Case WFM_OORSPR_KENMERK
        Case "PEN"
            MultiPage1.pages("PEN").Visible = True
            MultiPage1.pages("PEN").Enabled = True
            Bende
        Case "OVL"
            MultiPage1.pages("OVL").Visible = True
            MultiPage1.pages("OVL").Enabled = True
            lblDatOVL.Visible = True
            WFMDDAT_OVL.Visible = True
             Select Case WFM_WIE_OVERLEDEN.Value
            Case "D":
                fraDeelnemer.Visible = True
            Case "P":
                fraPartner.Visible = True
            Case "W":
                fraWees.Visible = True
                 lblEx.Visible = False
        WFM_NAAM_PARTNER_ZAAK.Visible = False
            End Select
            Bende
    End Select
    StatusBar1.Panels.item("WFM_NR_POLIS").Text = "Deeln. nr.: " & WFM_NR_POLIS
    StatusBar1.Panels.item("WFM_NR_AEGAR").Text = "Aegarnr.: " & WFM_NR_AEGAR
    
    MultiPage1.Value = 1
       
    CheckOpUitzondering WIViewer, txtBijzonderheden

    If txtBijzonderheden.Text = "" Then
        MultiPage1.pages("PageUitz").Visible = False
    End If
 
End Sub
Private Sub Bende()
' eigenlijk ergens in een module maar dan moet ik  het form weer meegegeven..

    WFMGetFieldYNO Me, "JN_KAPITAALUITK"
    WFMGetFieldYNO Me, "JN_PENS_VEREVENING"
    WFMGetFieldYNO Me, "JN_OPO_VERZEKERD"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_AFKOOP_NP_BEP"
    WFMGetFieldYNO Me, "JN_PEN_PIN_WIJZ"
    WFMGetFieldYNO Me, "JN_FONDS_UITK"
    WFMGetFieldYNO Me, "JN_BUITENLANDER"
    WFMGetFieldYNO Me, "JN_UITKVIA_WIJZ"
    WFMGetFieldYNO Me, "JN_PARTN_PENS"
    WFMGetFieldYNO Me, "JN_UITRUILBAAR_NP"
    WFMGetField WIViewer, WFM_STATUS_VERZEKERDE, 4
    WFMGetField WIViewer, WFMDDAT_INGANG, 4

' 0vl
    WFMGetFieldYNO Me, "JN_KAPITAALUITK"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_PEN_PIN_WIJZ"
    WFMGetFieldYNO Me, "JN_FONDS_UITK"
    WFMGetFieldYNO Me, "JN_BUITENLANDER"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_EINDE_NP"
    WFMGetFieldYNO Me, "JN_EINDE_OP"
    WFMGetFieldYNO Me, "JN_EINDE_WZP"
    WFMGetFieldYNO Me, "JN_INGANG_NP"
    WFMGetFieldYNO Me, "JN_INGANG_OPO"
    WFMGetFieldYNO Me, "JN_MEER_BEGUNST"
    'WFMGetField WIViewer, WFMDDAT_INGANG, 8
    OVL_WFMDDAT_INGANG = WFMDDAT_INGANG
    WFMGetField WIViewer, WFM_NAAM_PARTNER_ZAAK, 4
End Sub
Public Sub WFMGetFieldYNO(ByVal WFMForm As Object, ByVal WFMFormFieldName As String)
Dim WFMViewerField As Field
Dim WFMViewerFieldValue
Dim ctlFormfield As Control

    Set WFMViewerField = WFMForm.WorkitemViewer.Fields.Find(WFMFormFieldName)
    If WFMViewerField Is Nothing Then
        MsgBox WFMFormFieldName & " not found on WFM form!"
        Call InitFuncSec
        If FuncSecGroup = "SYSTEEMBEHEER" Then
        Else
            Exit Sub
        End If
    End If
    WFMViewerFieldValue = WFMViewerField.CALFormField.Value
    
    ' loop trhu all fields on the form and look for strFieldName fields
    For Each ctlFormfield In WFMForm.Controls
        If InStr(ctlFormfield.name, WFMFormFieldName) > 0 Then
            If Trim(ctlFormfield.ControlTipText) = "" Then
                ctlFormfield.ControlTipText = WFMViewerField.CALFormField.Info.HelpText     'put help in the tooltip
            End If
            ctlFormfield.Tag = WFMViewerField.CALFormField.Info.Prompt
        
            If UCase(Mid(WFMViewerFieldValue, 1, 1)) = "J" And _
                UCase(Right(ctlFormfield.name, 2)) = "JA" Then
                
                ctlFormfield = True
            End If
    
            If UCase(Mid(WFMViewerFieldValue, 1, 1)) = "N" And _
                UCase(Right(ctlFormfield.name, 3)) = "NEE" Then
                
                ctlFormfield = True
            End If
            
            If UCase(Mid(Trim(WFMViewerFieldValue), 1, 1)) = "" And _
                UCase(Right(ctlFormfield.name, 3)) = "ONB" Then
                
                ctlFormfield = True
            End If
        End If
    Next
End Sub

Private Function SetCALXFormFields() As Boolean

On Error GoTo EH

    SetCALXFormFields = False

        'Er is nog binnen dit formulier geen set van de form fields nodig.
    
    SetCALXFormFields = True

Exit Function

EH:
    DisplayError "SetCALXFormFields"

End Function
Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH
    
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite

Exit Sub

EH:
    DisplayError "Rappel datum"
End Sub
Private Function WFM_Validatie() As Boolean
    WFM_Validatie = False
        'Er is nog geen duidelijkheid over eventuele validatie op gebruikersniveau.
    'reclassificeer voor de RV stap.....
    If WFMrJN_NAAR_PARKEREN_ja = False And _
        WFMrJN_OFFERTE_UITG_ja = True And _
        WFMrJN_IN_WACHTSTAND_ja = False Then
        Call Reclassificeer(WIViewer, "COLLEXC")
    End If
    
    WFM_Validatie = True
End Function

Private Sub WFMrJN_IN_WACHTSTAND_ja_Click()
 Dim mydate As Date
        WFM_REDEN_PARKEREN.Text = "In wachtstand"
        WFMrJN_NAAR_PARKEREN_ja = True
        If Not WFMDDAT_INGANG = "" Then
            mydate = WFMDDAT_INGANG
            mydate = DateAdd("d", -61, mydate)
            WFMDRAPPEL.Value = Format(mydate, "dd-mm-yyyy")
        End If
End Sub


Private Sub WFMrJN_IN_WACHTSTANDnee_Click()
    WFMrJN_NAAR_PARKERENnee.Value = True
End Sub

Private Sub WFMrJN_NAAR_PARKEREN_ja_Click()
        
        WFM_REDEN_PARKEREN.Enabled = True
        lblRedenParkeren.Enabled = True
        lblDatum.Enabled = True
        WFMDRAPPEL.Enabled = True

End Sub

Private Sub WFMrJN_NAAR_PARKERENnee_Click()

           
        WFM_REDEN_PARKEREN.Enabled = False
        lblRedenParkeren.Enabled = False
        lblDatum.Enabled = False
        WFMDRAPPEL.Enabled = False
        WFMDRAPPEL = ""
        WFM_REDEN_PARKEREN = ""
        
        WFMrJN_IN_WACHTSTANDnee = True
End Sub
Attribute VB_Name = "frmKAPParkeren"
Attribute VB_Base = "0{92C4A13F-B701-4B79-8642-293FAD53CE92}{782A9DDF-005D-44FD-A0AE-4DF7C86CACD8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit
Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver  As CALFormField
Dim WithEvents ObjEmail As Outlook.MailItem
Attribute ObjEmail.VB_VarHelpID = -1
Dim strDateString As String
Dim booSend As Boolean

Private Sub cmdOpslaan_Click()
Dim myIdent As String

On Error GoTo EH

    If Not WFM_Validatie Then Exit Sub
    If rb_antwoord_info_JA = True Then
        ' Dit in een aparte procedure met naam meegeven
        Call VerplaatsenVanuitParkeerstap(WIViewer, WFM_WORKSTEP_NAAM.Value)
        Exit Sub
    End If
    
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)

Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub imgGBA_Click()
On Error GoTo EH

    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
 
Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

    If Init Then Exit Sub
    Init = True
    
    GetCALXFormFields
     Select Case WFM_OORSPR_KENMERK
        Case "PEN"
            MultiPage1.pages("PEN").Visible = True
            MultiPage1.pages("PEN").Enabled = True
            Bende
        Case "OVL"
            MultiPage1.pages("OVL").Visible = True
            MultiPage1.pages("OVL").Enabled = True
             Select Case WFM_WIE_OVERLEDEN.Value
            Case "D":
                fraDeelnemer.Visible = True
            Case "P":
                fraPartner.Visible = True
            Case "W":
                fraWees.Visible = True
                 lblEx.Visible = False
            WFM_NAAM_PARTNER_ZAAK.Visible = False
            End Select
            Bende
    End Select
    
    StatusBar1.Panels.item("WFM_NR_POLIS").Text = "Deeln. nr.: " & WFM_NR_POLIS
    StatusBar1.Panels.item("WFM_NR_AEGAR").Text = "Aegarnr.: " & WFM_NR_AEGAR
    
    MultiPage1.Value = 1
    
    CheckOpUitzondering WIViewer, txtBijzonderheden

    If txtBijzonderheden.Text = "" Then
        MultiPage1.pages("PageUitz").Visible = False
    End If
    
    If Left(GetWorkstep(WIViewer), 5) = "98K26" Then
        'WFMDDAT_INGANG.Enabled = True
        WFMDDAT_INGANG.Visible = True
        lblWFMDDAT_INGANG.Enabled = True
        lblWFMDDAT_INGANG.Visible = True
    End If
        
 

End Sub
Private Sub Bende()
' eigenlijk ergens in een module maar dan moet ik  het form weer meegegeven..

    WFMGetFieldYNO Me, "JN_KAPITAALUITK"
    WFMGetFieldYNO Me, "JN_PENS_VEREVENING"
    WFMGetFieldYNO Me, "JN_OPO_VERZEKERD"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_AFKOOP_NP_BEP"
    WFMGetFieldYNO Me, "JN_PEN_PIN_WIJZ"
    WFMGetFieldYNO Me, "JN_FONDS_UITK"
    WFMGetFieldYNO Me, "JN_BUITENLANDER"
    WFMGetFieldYNO Me, "JN_UITKVIA_WIJZ"
    WFMGetFieldYNO Me, "JN_PARTN_PENS"
    WFMGetFieldYNO Me, "JN_UITRUILBAAR_NP"
    WFMGetField WIViewer, WFM_STATUS_VERZEKERDE, 4
    WFMGetField WIViewer, WFMDDAT_INGANG, 4

' 0vl
    WFMGetFieldYNO Me, "JN_KAPITAALUITK"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_PEN_PIN_WIJZ"
    WFMGetFieldYNO Me, "JN_FONDS_UITK"
    WFMGetFieldYNO Me, "JN_BUITENLANDER"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_EINDE_NP"
    WFMGetFieldYNO Me, "JN_EINDE_OP"
    WFMGetFieldYNO Me, "JN_EINDE_WZP"
    WFMGetFieldYNO Me, "JN_INGANG_NP"
    WFMGetFieldYNO Me, "JN_INGANG_OPO"
    WFMGetFieldYNO Me, "JN_MEER_BEGUNST"
    'WFMGetField WIViewer, WFMDDAT_INGANG, 8
    OVL_WFMDDAT_INGANG = WFMDDAT_INGANG
    WFMGetField WIViewer, WFM_NAAM_PARTNER_ZAAK, 4
End Sub
Public Sub WFMGetFieldYNO(ByVal WFMForm As Object, ByVal WFMFormFieldName As String)
Dim WFMViewerField As Field
Dim WFMViewerFieldValue
Dim ctlFormfield As Control

    Set WFMViewerField = WFMForm.WorkitemViewer.Fields.Find(WFMFormFieldName)
    If WFMViewerField Is Nothing Then
        MsgBox WFMFormFieldName & " not found on WFM form!"
        Call InitFuncSec
        If FuncSecGroup = "SYSTEEMBEHEER" Then
        Else
            Exit Sub
        End If
    End If
    WFMViewerFieldValue = WFMViewerField.CALFormField.Value
    
    ' loop trhu all fields on the form and look for strFieldName fields
    For Each ctlFormfield In WFMForm.Controls
        If InStr(ctlFormfield.name, WFMFormFieldName) > 0 Then
            If Trim(ctlFormfield.ControlTipText) = "" Then
                ctlFormfield.ControlTipText = WFMViewerField.CALFormField.Info.HelpText     'put help in the tooltip
            End If
            ctlFormfield.Tag = WFMViewerField.CALFormField.Info.Prompt
        
            If UCase(Mid(WFMViewerFieldValue, 1, 1)) = "J" And _
                UCase(Right(ctlFormfield.name, 2)) = "JA" Then
                
                ctlFormfield = True
            End If
    
            If UCase(Mid(WFMViewerFieldValue, 1, 1)) = "N" And _
                UCase(Right(ctlFormfield.name, 3)) = "NEE" Then
                
                ctlFormfield = True
            End If
            
            If UCase(Mid(Trim(WFMViewerFieldValue), 1, 1)) = "" And _
                UCase(Right(ctlFormfield.name, 3)) = "ONB" Then
                
                ctlFormfield = True
            End If
        End If
    Next
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    
End Sub
Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean

On Error GoTo EH

    SetCALXFormFields = False

    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
    
        myPolOver.Value = Right$(Space(10) & Trim(tbPolOver1), 10) & ";" _
                              & Right$(Space(10) & Trim(tbPolOver2), 10) & ";" _
                              & Right$(Space(10) + Trim(tbPolOver3), 10) & ";"
    End If
    SetCALXFormFields = True

Exit Function

EH:
    DisplayError "SetCALXFormFields"

End Function

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH
    
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite

Exit Sub

EH:
    DisplayError "Rappel datum"
End Sub
Private Function WFM_Validatie() As Boolean
    WFM_Validatie = False
        'Er is nog geen duidelijkheid over eventuele validatie op gebruikersniveau.
    
    WFM_Validatie = True
End Function


Attribute VB_Name = "frmKAPUitstExp"
Attribute VB_Base = "0{1F8804D5-7FF1-40EA-A76F-82EEC95C36F6}{98722D55-735D-48A7-825A-02C651FAF9DD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim myForm              As Object
Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myPolOver           As CALFormField
Dim WithEvents ObjEmail As Outlook.MailItem
Attribute ObjEmail.VB_VarHelpID = -1
Dim strDateString       As String
Dim booSend             As Boolean

Private Sub cmdOpslaan_Click()
Dim myIdent             As String

    On Error GoTo EH
    If Not WFM_Validatie Then Exit Sub
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
'   Gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean

    If Init Then Exit Sub
    Init = True
    GetCALXFormFields
    lbTemplates.AddItem "Offerte uitstel"
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    StatusBar1.Panels.item("WFM_NR_POLIS").Text = "Deeln. nr.: " & WFM_NR_POLIS
    StatusBar1.Panels.item("WFM_NR_AEGAR").Text = "Aegarnr.: " & WFM_NR_AEGAR
    If WFM_JN_PREMIEVRIJ = "J" Then
        fraUitstel.Visible = True
        txtPostis = "Premievrij"
    Else
        txtPostis = "Premiebetalend"
    End If
    If WFM_BEH_GROEP <> "" Then
        lblbeg.Visible = True
        WFM_BEH_GROEP.Visible = True
    End If
    Select Case WFM_OORSPR_KENMERK
        Case "PEN"
              MultiPage1.pages("PEN").Visible = True
              MultiPage1.pages("PEN").Enabled = True
              Bende
        Case "OVL"
              MultiPage1.pages("OVL").Visible = True
              MultiPage1.pages("OVL").Enabled = True
              Select Case WFM_WIE_OVERLEDEN.Value
                Case "D":
                      fraDeelnemer.Visible = True
                Case "P":
                      fraPartner.Visible = True
                Case "W":
                      fraWees.Visible = True
                      lblEx.Visible = False
                      WFM_NAAM_PARTNER_ZAAK.Visible = False
              End Select
              Bende
    End Select
    MultiPage1.Value = 1
    CheckOpUitzondering WIViewer, txtBijzonderheden
    If txtBijzonderheden.Text = "" Then MultiPage1.pages("PageUitz").Visible = False
End Sub

Private Sub Bende()
'   Eigenlijk ergens in een module maar dan moet ik  het form weer meegegeven..
    WFMGetFieldYNO Me, "JN_KAPITAALUITK"
    WFMGetFieldYNO Me, "JN_PENS_VEREVENING"
    WFMGetFieldYNO Me, "JN_OPO_VERZEKERD"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_AFKOOP_NP_BEP"
    WFMGetFieldYNO Me, "JN_PEN_PIN_WIJZ"
    WFMGetFieldYNO Me, "JN_FONDS_UITK"
    WFMGetFieldYNO Me, "JN_BUITENLANDER"
    WFMGetFieldYNO Me, "JN_UITKVIA_WIJZ"
    WFMGetFieldYNO Me, "JN_PARTN_PENS"
    WFMGetFieldYNO Me, "JN_UITRUILBAAR_NP"
    WFMGetField WIViewer, WFM_STATUS_VERZEKERDE, 4
    WFMGetField WIViewer, WFMDDAT_INGANG, 4
'   0VL
    WFMGetFieldYNO Me, "JN_KAPITAALUITK"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_PEN_PIN_WIJZ"
    WFMGetFieldYNO Me, "JN_FONDS_UITK"
    WFMGetFieldYNO Me, "JN_BUITENLANDER"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_EINDE_NP"
    WFMGetFieldYNO Me, "JN_EINDE_OP"
    WFMGetFieldYNO Me, "JN_EINDE_WZP"
    WFMGetFieldYNO Me, "JN_INGANG_NP"
    WFMGetFieldYNO Me, "JN_INGANG_OPO"
    WFMGetFieldYNO Me, "JN_MEER_BEGUNST"
    OVL_WFMDDAT_INGANG = WFMDDAT_INGANG
    WFMGetField WIViewer, WFM_NAAM_PARTNER_ZAAK, 4
End Sub

Public Sub WFMGetFieldYNO(ByVal WFMForm As Object, ByVal WFMFormFieldName As String)
Dim WFMViewerField      As Field
Dim WFMViewerFieldValue
Dim ctlFormfield        As Control

    Set WFMViewerField = WFMForm.WorkitemViewer.Fields.Find(WFMFormFieldName)
    If WFMViewerField Is Nothing Then
        MsgBox WFMFormFieldName & " not found on WFM form!"
        Call InitFuncSec
        If FuncSecGroup = "SYSTEEMBEHEER" Then
        Else
            Exit Sub
        End If
    End If
    WFMViewerFieldValue = WFMViewerField.CALFormField.Value
'   Loop trhu all fields on the form and look for strFieldName fields
    For Each ctlFormfield In WFMForm.Controls
        If InStr(ctlFormfield.name, WFMFormFieldName) > 0 Then
            If Trim(ctlFormfield.ControlTipText) = "" Then
                ctlFormfield.ControlTipText = WFMViewerField.CALFormField.Info.HelpText     'put help in the tooltip
            End If
            ctlFormfield.Tag = WFMViewerField.CALFormField.Info.Prompt
            If UCase(Mid(WFMViewerFieldValue, 1, 1)) = "J" And _
                UCase(Right(ctlFormfield.name, 2)) = "JA" Then
                ctlFormfield = True
            End If
            If UCase(Mid(WFMViewerFieldValue, 1, 1)) = "N" And _
                UCase(Right(ctlFormfield.name, 3)) = "NEE" Then
                ctlFormfield = True
            End If
            If UCase(Mid(Trim(WFMViewerFieldValue), 1, 1)) = "" And _
                UCase(Right(ctlFormfield.name, 3)) = "ONB" Then
                ctlFormfield = True
            End If
        End If
    Next
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        myPolOver.Value = Right$(Space(10) & Trim(tbPolOver1), 10) & ";" & _
                          Right$(Space(10) & Trim(tbPolOver2), 10) & ";" & _
                          Right$(Space(10) + Trim(tbPolOver3), 10) & ";"
    End If
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

Private Function WFM_Validatie() As Boolean
    WFM_Validatie = False
    WFM_Validatie = True
End Function
Attribute VB_Name = "frmKapBehReactie"
Attribute VB_Base = "0{A87CA5FC-52BF-4DC1-A77C-9D333387E58E}{C48E654E-D987-4414-AA8C-A230CDDF2FA2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String

Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
On Error GoTo EH

    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Doorsturen"
    
End Sub
Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Attribute VB_Name = "frmKapBehReactie2"
Attribute VB_Base = "0{DD72D99F-191F-438F-8DFC-6D5956A3DD55}{E25D3014-0D76-442E-BE2D-7CB189ACA804}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim myForm              As Object
Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myPolOver           As CALFormField
Dim WithEvents ObjEmail As Outlook.MailItem
Attribute ObjEmail.VB_VarHelpID = -1
Dim strDateString       As String
Dim booSend             As Boolean
Dim StrPagename         As String

Private Sub Bende()
'   Eigenlijk ergens in een module maar dan moet ik  het form weer meegegeven..
    WFMGetFieldYNO Me, "JN_KAPITAALUITK"
    WFMGetFieldYNO Me, "JN_PENS_VEREVENING"
    WFMGetFieldYNO Me, "JN_OPO_VERZEKERD"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_AFKOOP_NP_BEP"
    WFMGetFieldYNO Me, "JN_PEN_PIN_WIJZ"
    WFMGetFieldYNO Me, "JN_FONDS_UITK"
    WFMGetFieldYNO Me, "JN_BUITENLANDER"
    WFMGetFieldYNO Me, "JN_UITKVIA_WIJZ"
    WFMGetFieldYNO Me, "JN_PARTN_PENS"
    WFMGetFieldYNO Me, "JN_UITRUILBAAR_NP"
    WFMGetField WIViewer, WFM_STATUS_VERZEKERDE, 4
    WFMGetField WIViewer, WFMDDAT_INGANG, 4
'   OVL
    WFMGetFieldYNO Me, "JN_KAPITAALUITK"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_PEN_PIN_WIJZ"
    WFMGetFieldYNO Me, "JN_FONDS_UITK"
    WFMGetFieldYNO Me, "JN_BUITENLANDER"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_EINDE_NP"
    WFMGetFieldYNO Me, "JN_EINDE_OP"
    WFMGetFieldYNO Me, "JN_EINDE_WZP"
    WFMGetFieldYNO Me, "JN_INGANG_NP"
    WFMGetFieldYNO Me, "JN_INGANG_OPO"
    WFMGetFieldYNO Me, "JN_MEER_BEGUNST"
    OVL_WFMDDAT_INGANG = WFMDDAT_INGANG
    WFMGetField WIViewer, WFM_NAAM_PARTNER_ZAAK, 4
End Sub

Public Sub WFMGetFieldYNO(ByVal WFMForm As Object, ByVal WFMFormFieldName As String)
Dim WFMViewerField      As Field
Dim WFMViewerFieldValue
Dim ctlFormfield        As Control

    Set WFMViewerField = WFMForm.WorkitemViewer.Fields.Find(WFMFormFieldName)
    If WFMViewerField Is Nothing Then
        MsgBox WFMFormFieldName & " not found on WFM form!"
        Call InitFuncSec
        If FuncSecGroup = "SYSTEEMBEHEER" Then
        Else
            Exit Sub
        End If
    End If
    WFMViewerFieldValue = WFMViewerField.CALFormField.Value
'   Loop trhu all fields on the form and look for strFieldName fields
    For Each ctlFormfield In WFMForm.Controls
        If InStr(ctlFormfield.name, WFMFormFieldName) > 0 Then
            If Trim(ctlFormfield.ControlTipText) = "" Then
                ctlFormfield.ControlTipText = WFMViewerField.CALFormField.Info.HelpText     'put help in the tooltip
            End If
            ctlFormfield.Tag = WFMViewerField.CALFormField.Info.Prompt
            If UCase(Mid(WFMViewerFieldValue, 1, 1)) = "J" And _
               UCase(Right(ctlFormfield.name, 2)) = "JA" Then
                ctlFormfield = True
            End If
            If UCase(Mid(WFMViewerFieldValue, 1, 1)) = "N" And _
               UCase(Right(ctlFormfield.name, 3)) = "NEE" Then
                ctlFormfield = True
            End If
            If UCase(Mid(Trim(WFMViewerFieldValue), 1, 1)) = "" And _
               UCase(Right(ctlFormfield.name, 3)) = "ONB" Then
                ctlFormfield = True
            End If
        End If
    Next
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
'   Gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean
Dim strClass            As String

    If Init Then Exit Sub
    Init = True
    If WIViewer.CALClientListItem.OpenedItem.Class = "COLLEXC" Then
'       MAbr 18-3-2005 er zijn ovlen die niet goed gaan daar wordt een coll van gemaakt.
'       dat mag dus zeker niet
        If WFM_OORSPR_KENMERK.Text <> "" Then
            strClass = "COLL" + WFM_OORSPR_KENMERK.Text
            Call Reclassificeer(WIViewer, strClass)
        End If
    End If
    lbTemplates.AddItem "PIN Ontvangst reactie KAP"
    GetCALXFormFields
'   MaBr geen beoordeling... behalve dan dat OVL nog niet getest is...
    Select Case WFM_OORSPR_KENMERK
        Case "PEN"
             MultiPage1.pages("PEN").Visible = True
             MultiPage1.pages("PEN").Enabled = True
             Bende
        Case "OVL"
             MultiPage1.pages("OVL").Visible = True
             MultiPage1.pages("OVL").Enabled = True
             lblDatOVL.Visible = True
             WFMDDAT_OVL.Visible = True
             Select Case WFM_WIE_OVERLEDEN.Value
                Case "D":
                     fraDeelnemer.Visible = True
                Case "P":
                     fraPartner.Visible = True
                Case "W":
                     fraWees.Visible = True
                     lblEx.Visible = False
                     WFM_NAAM_PARTNER_ZAAK.Visible = False
             End Select
                Bende
    End Select

'   Listbox met beslissing begunstigde vullen
    WFM_BESL_BEG.AddItem "", 0
    WFM_BESL_BEG.AddItem "Afkoop kapitaal", 1
    WFM_BESL_BEG.AddItem "Naar Pensioen BV", 2
    WFM_BESL_BEG.AddItem "Uitstel Exp. datum", 3
    WFM_BESL_BEG.AddItem "Uitkering andere My", 4
    WFM_BESL_BEG.AddItem "Ingang bij AEGON", 5
    WFM_BESL_BEG.AddItem "Geen reactie", 6
    StatusBar1.Panels.item("WFM_NR_POLIS").Text = "Deeln. nr.: " & WFM_NR_POLIS
    StatusBar1.Panels.item("WFM_NR_AEGAR").Text = "Aegarnr.: " & WFM_NR_AEGAR
    MultiPage1.Value = 1
    WFM_BESL_BEG_Change
    CheckOpUitzondering WIViewer, txtBijzonderheden
    If txtBijzonderheden.Text = "" Then
        MultiPage1.pages("PageUitz").Visible = False
    End If
End Sub

Private Sub cmdOpslaan_Click()
Dim myIdent             As String

    On Error GoTo EH
    If Not WFM_Validatie Then Exit Sub
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub imgGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub JN_STUKKEN_VOLL1_ja_Click()
    WFMrJN_STUKKEN_VOLL_ja.Value = JN_STUKKEN_VOLL1_ja.Value
End Sub
Private Sub JN_STUKKEN_VOLL1_nee_Click()
    WFMrJN_STUKKEN_VOLLnee.Value = JN_STUKKEN_VOLL1_nee.Value
End Sub
Private Sub JN_STUKKEN_VOLL1_onb_Click()
    WFMrJN_STUKKEN_VOLLonb.Value = JN_STUKKEN_VOLL1_onb.Value
End Sub

Private Sub JN_STUKKEN_VOLL2_ja_Click()
    WFMrJN_STUKKEN_VOLL_ja.Value = JN_STUKKEN_VOLL2_ja.Value
End Sub
Private Sub JN_STUKKEN_VOLL2_nee_Click()
    WFMrJN_STUKKEN_VOLLnee.Value = JN_STUKKEN_VOLL2_nee.Value
End Sub
Private Sub JN_STUKKEN_VOLL2_onb_Click()
    WFMrJN_STUKKEN_VOLLonb.Value = JN_STUKKEN_VOLL2_onb.Value
End Sub

Private Sub JN_STUKKEN_VOLL3_ja_Click()
    WFMrJN_STUKKEN_VOLL_ja.Value = JN_STUKKEN_VOLL3_ja.Value
End Sub
Private Sub JN_STUKKEN_VOLL3_nee_Click()
    WFMrJN_STUKKEN_VOLLnee.Value = JN_STUKKEN_VOLL3_nee.Value
End Sub
Private Sub JN_STUKKEN_VOLL3_onb_Click()
    WFMrJN_STUKKEN_VOLLonb.Value = JN_STUKKEN_VOLL3_onb.Value
End Sub

Private Sub JN_STUKKEN_VOLL4_ja_Click()
    WFMrJN_STUKKEN_VOLL_ja.Value = JN_STUKKEN_VOLL4_ja.Value
End Sub
Private Sub JN_STUKKEN_VOLL4_nee_Click()
    WFMrJN_STUKKEN_VOLLnee.Value = JN_STUKKEN_VOLL4_nee.Value
End Sub
Private Sub JN_STUKKEN_VOLL4_onb_Click()
    WFMrJN_STUKKEN_VOLLonb.Value = JN_STUKKEN_VOLL4_onb.Value
End Sub

Private Sub JN_STUKKEN_VOLL5_ja_Click()
    WFMrJN_STUKKEN_VOLL_ja.Value = JN_STUKKEN_VOLL5_ja.Value
End Sub
Private Sub JN_STUKKEN_VOLL5_nee_Click()
    WFMrJN_STUKKEN_VOLLnee.Value = JN_STUKKEN_VOLL5_nee.Value
End Sub
Private Sub JN_STUKKEN_VOLL5_onb_Click()
    WFMrJN_STUKKEN_VOLLonb.Value = JN_STUKKEN_VOLL5_onb.Value
End Sub

Private Sub JN_AANVR_FORM1_ja_Click()
    WFMrJN_AANVR_FORM_ja.Value = JN_AANVR_FORM1_ja.Value
End Sub
Private Sub JN_AANVR_FORM1_nee_Click()
    WFMrJN_AANVR_FORMnee.Value = JN_AANVR_FORM1_nee.Value
End Sub
Private Sub JN_AANVR_FORM1_onb_Click()
    WFMrJN_AANVR_FORMonb.Value = JN_AANVR_FORM1_onb.Value
End Sub

Private Sub JN_AANVR_FORM5_ja_Click()
    WFMrJN_AANVR_FORM_ja.Value = JN_AANVR_FORM5_ja.Value
End Sub
Private Sub JN_AANVR_FORM5_nee_Click()
    WFMrJN_AANVR_FORMnee.Value = JN_AANVR_FORM5_nee.Value
End Sub
Private Sub JN_AANVR_FORM5_onb_Click()
    WFMrJN_AANVR_FORMonb.Value = JN_AANVR_FORM5_onb.Value
End Sub

Private Sub JN_LB_VERKL1_ja_Click()
    WFMrJN_LB_VERKLARING_ja.Value = JN_LB_VERKL1_ja.Value
End Sub
Private Sub JN_LB_VERKL1_nee_Click()
    WFMrJN_LB_VERKLARINGnee.Value = JN_LB_VERKL1_nee.Value
End Sub
Private Sub JN_LB_VERKL1_onb_Click()
    WFMrJN_LB_VERKLARINGonb.Value = JN_LB_VERKL1_onb.Value
End Sub

Private Sub JN_LB_VERKL5_ja_Click()
        WFMrJN_LB_VERKLARING_ja.Value = JN_LB_VERKL5_ja.Value
End Sub
Private Sub JN_LB_VERKL5_nee_Click()
            WFMrJN_LB_VERKLARINGnee.Value = JN_LB_VERKL5_nee.Value
End Sub
Private Sub JN_LB_VERKL5_onb_Click()
    WFMrJN_LB_VERKLARINGonb.Value = JN_LB_VERKL5_onb.Value
End Sub

Private Sub JN_ORG_POLIS1_ja_Click()
    WFMrJN_ORG_POLIS_ja.Value = JN_ORG_POLIS1_ja.Value
End Sub
Private Sub JN_ORG_POLIS1_nee_Click()
    WFMrJN_ORG_POLISnee.Value = JN_ORG_POLIS1_nee.Value
End Sub
Private Sub JN_ORG_POLIS1_onb_Click()
    WFMrJN_ORG_POLISonb.Value = JN_ORG_POLIS1_onb.Value
End Sub

Private Sub JN_ORG_POLIS2_ja_Click()
    WFMrJN_ORG_POLIS_ja.Value = JN_ORG_POLIS2_ja.Value
End Sub
Private Sub JN_ORG_POLIS2_nee_Click()
    WFMrJN_ORG_POLISnee.Value = JN_ORG_POLIS2_nee.Value
End Sub
Private Sub JN_ORG_POLIS2_onb_Click()
    WFMrJN_ORG_POLISonb.Value = JN_ORG_POLIS2_onb.Value
End Sub

Private Sub JN_ORG_POLIS3_ja_Click()
    WFMrJN_ORG_POLIS_ja.Value = JN_ORG_POLIS3_ja.Value
End Sub
Private Sub JN_ORG_POLIS3_nee_Click()
    WFMrJN_ORG_POLISnee.Value = JN_ORG_POLIS3_nee.Value
End Sub
Private Sub JN_ORG_POLIS3_onb_Click()
    WFMrJN_ORG_POLISonb.Value = JN_ORG_POLIS3_onb.Value
End Sub

Private Sub JN_ORG_POLIS4_ja_Click()
    WFMrJN_ORG_POLIS_ja.Value = JN_ORG_POLIS4_ja.Value
End Sub
Private Sub JN_ORG_POLIS4_nee_Click()
    WFMrJN_ORG_POLISnee.Value = JN_ORG_POLIS4_nee.Value
End Sub
Private Sub JN_ORG_POLIS4_onb_Click()
    WFMrJN_ORG_POLISonb.Value = JN_ORG_POLIS4_onb.Value
End Sub

Private Sub JN_ORG_POLIS5_ja_Click()
    WFMrJN_ORG_POLIS_ja.Value = JN_ORG_POLIS5_ja.Value
End Sub
Private Sub JN_ORG_POLIS5_nee_Click()
    WFMrJN_ORG_POLISnee.Value = JN_ORG_POLIS5_nee.Value
End Sub
Private Sub JN_ORG_POLIS5_onb_Click()
    WFMrJN_ORG_POLISonb.Value = JN_ORG_POLIS5_onb.Value
End Sub

Private Sub CleanRadioButtonsAndPages()
Dim ctlFormfield        As Control

'   Mabr ?? wel hele rare gedrag nu
'   ik heb de onb standaard op True gezet en de groepen regelt ut een en ander
    MultiPage1.pages("DDB1").Visible = False
    MultiPage1.pages("DDB1").Enabled = False
    MultiPage1.pages("DDB2").Visible = False
    MultiPage1.pages("DDB2").Enabled = False
    MultiPage1.pages("DDB3").Visible = False
    MultiPage1.pages("DDB3").Enabled = False
    MultiPage1.pages("DDB4").Visible = False
    MultiPage1.pages("DDB4").Enabled = False
    MultiPage1.pages("DDB5").Visible = False
    MultiPage1.pages("DDB5").Enabled = False
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Sub GetCALXFormFields()
'   Waarom gaat deze fout????
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        myPolOver.Value = Right$(Space(10) & Trim(tbPolOver1), 10) & ";" & _
                          Right$(Space(10) & Trim(tbPolOver2), 10) & ";" & _
                          Right$(Space(10) + Trim(tbPolOver3), 10) & ";"
    End If
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

Private Sub WFM_BESL_BEG_Change()
'   0 ff  afvangen
'   en de 6.... Geen reactie
    If WFM_BESL_BEG.ListIndex = 0 Or WFM_BESL_BEG.ListIndex = 6 Then
        CleanRadioButtonsAndPages
        Exit Sub
    End If
'   En de -1....
    If WFM_BESL_BEG.ListIndex = -1 Then
        Exit Sub
    End If
    StrPagename = "DDB" & WFM_BESL_BEG.ListIndex
    If MultiPage1.pages(StrPagename).Visible = True Then
        Exit Sub
    Else
        CleanRadioButtonsAndPages
    End If
    Select Case WFM_BESL_BEG.ListIndex
        Case 1:
             MultiPage1.pages("DDB1").Visible = True
             MultiPage1.pages("DDB1").Enabled = True
        Case 2:
             MultiPage1.pages("DDB2").Visible = True
             MultiPage1.pages("DDB2").Enabled = True
        Case 3:
             MultiPage1.pages("DDB3").Visible = True
             MultiPage1.pages("DDB3").Enabled = True
        Case 4:
             MultiPage1.pages("DDB4").Visible = True
             MultiPage1.pages("DDB4").Enabled = True
        Case 5
             MultiPage1.pages("DDB5").Visible = True
             MultiPage1.pages("DDB5").Enabled = True
    End Select
    WFM_ZAAK_VLGNR_MEMO.Text = WFM_BESL_BEG.Text
    setDummyrButtons (StrPagename)
    MultiPage1.Value = 2
End Sub

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappel datum"
End Sub

Private Function WFM_Validatie() As Boolean
    WFM_Validatie = True
End Function

Private Function setDummyrButtons(StrPagename As String) As Boolean
    WFMGetFieldYNO_2 Me, "JN_ORG_POLIS"
    WFMGetFieldYNO_2 Me, "JN_LB_VERKLARING"
    WFMGetFieldYNO_2 Me, "JN_AANVR_FORM"
    WFMGetFieldYNO_2 Me, "JN_STUKKEN_VOLL"
End Function

Public Sub WFMGetFieldYNO_2(ByVal WFMForm As Object, ByVal WFMFormFieldName As String)
Dim WFMViewerField      As Field
Dim WFMViewerFieldValue
Dim ctlFormfield        As Control
Dim intLenPrefix        As Integer

    Set WFMViewerField = WFMForm.WorkitemViewer.Fields.Find(WFMFormFieldName)
    WFMViewerFieldValue = WFMViewerField.CALFormField.Value
'   Loop trhu all fields on the form and look for strFieldName fields
    For Each ctlFormfield In MultiPage1.pages(StrPagename).Controls
'       LET OP check is niet helemaal lekker 10 vanaf links maar ut is niet anders
        If Left(ctlFormfield.name, 10) = Left(WFMFormFieldName, 10) Then
'           Control tip text ..weg ??...??
            If Trim(ctlFormfield.ControlTipText) = "" Then
                ctlFormfield.ControlTipText = WFMViewerField.CALFormField.Info.HelpText     'put help in the tooltip
            End If
            ctlFormfield.Tag = WFMViewerField.CALFormField.Info.Prompt
            If UCase(Mid(WFMViewerFieldValue, 1, 1)) = "J" And _
               UCase(Right(ctlFormfield.name, 2)) = "JA" Then
                ctlFormfield = True
            End If
            If UCase(Mid(WFMViewerFieldValue, 1, 1)) = "N" And _
               UCase(Right(ctlFormfield.name, 3)) = "NEE" Then
                ctlFormfield = True
            End If
            If UCase(Mid(Trim(WFMViewerFieldValue), 1, 1)) = "" And _
               UCase(Right(ctlFormfield.name, 3)) = "ONB" Then
                ctlFormfield = True
            End If
        End If
    Next
End Sub
Attribute VB_Name = "frmMUTAanschrijven"
Attribute VB_Base = "0{B4BC5D55-3A93-4AD6-AB60-36AA4A64A7E3}{9A43D0C1-C756-4B29-A86C-4E4DABD5EEA4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim HostForm As Object
Dim myESWMObjID As String

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub
Private Sub cmdOpslaan_Click()
Dim myIdent As String

On Error GoTo EH
    
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)

Exit Sub

EH:
    DisplayError "Doorsturen"

End Sub
Private Sub UserForm_Activate()
Static Init As Boolean


    If Init Then Exit Sub
    Init = True
    lbTemplates.AddItem "BWO Aanschrijven"
    
End Sub
Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH

    ' gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    
    Call StartBrief(WorkitemViewer, "waardeoverdracht-recht nieuwe deelnemer (verzekerde)") 'lbTemplates.Value)
    
Exit Sub

EH:
    DisplayError "Dubbelklik brief"
    
End Sub

Attribute VB_Name = "frmMUTBijz"
Attribute VB_Base = "0{1AB05B13-46FC-4830-B204-8E2CB5C985CB}{489EC00A-9958-4BF8-896E-082BA1DC1E8A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim HostForm As Object
Dim Init As Boolean
Dim myESWMObjID As String

Private Sub cmdScreen_Click()

On Error GoTo EH
    
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
    MousePointer = fmMousePointerDefault
    Call getTPnaamnummer(Me)

Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Open eerst het juiste CAESAR scherm (U1 OHUP of U3 INWG)."

End Sub

Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub
Private Sub cmdOpslaan_Click()
Dim myIdent As String

On Error GoTo EH
    
    
   If WFMrJN_TERUG_CM_ja Then
        If WFM_DOORZENDEN_NAAR = "" Or WFM_DOORZENDEN_NAAR = "CVE" Then
            MsgBox "Kies eerst de afdeling", vbCritical
            Exit Sub
        Else
            WFM_BEHANDELAAR.Value = ""
        End If
    End If

    
    
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)

Exit Sub

EH:
    DisplayError "Doorsturen"

End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub cmdWord_Click()

On Error GoTo EH

    Call StartBrief(WorkitemViewer, "Word")
    Exit Sub

EH:
    DisplayError "Starten Word"

End Sub

Private Sub UserForm_Activate()
Dim arrAfdelingen(15, 1) As String
Dim bRes As Boolean

On Error GoTo EH
    If Init Then Exit Sub
    Init = True

    bRes = vulArrayKS_Afdelingen(arrAfdelingen, False)
    WFM_DOORZENDEN_NAAR.list = arrAfdelingen
    
    
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
      Exit Sub
EH:
    DisplayError "Form activate"

End Sub

Private Sub WFM_DOORZENDEN_NAAR_Change()
If WFM_DOORZENDEN_NAAR.Value <> "" Then
    WFMrJN_TERUG_CM_ja = True
End If
End Sub

Private Sub WFM_NR_KLANT_Exit(ByVal Cancel As MSForms.ReturnBoolean)
 ' Mabr change dan via screenscrapen klant waarde er in  1 keer in
On Error GoTo EH
    Call getTPnaamnummer(Me)
    Exit Sub
EH:
    DisplayError "TPnummer"
    
End Sub
Attribute VB_Name = "frmMUTFiatteren"
Attribute VB_Base = "0{8BE5CC5F-8D38-4DA5-9E67-12D0A32EE538}{D20A6698-6F24-4869-A7B6-B7424DA46341}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Option Explicit

Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim HostForm As Object
Dim myESWMObjID As String
Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub CopyButton_Click()

    Static KopieNr As Integer
    Dim KopieItem As CALClientListItem

On Error GoTo EH

    MousePointer = fmMousePointerHourGlass
    DoEvents

    KopieNr = KopieNr + 1
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call CopySendDocument(WIViewer.CALClientListItem, KopieNr)
    MousePointer = fmMousePointerDefault
    
Exit Sub

EH:
    DisplayError "Kopie"
    MousePointer = fmMousePointerDefault
End Sub
Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Private Sub UserForm_Activate()
Static Init As Boolean
Dim arrAfdelingen(15, 1) As String
Dim bRes As Boolean

On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    
        
    WFM_DOCTYPE.AddItem "MUT Mutatieformulier"
    WFM_DOCTYPE.AddItem "SAL Salarislijst"
    
    'lbTemplates.AddItem "Klant opvoedbrief"
    lbTemplates.AddItem "Ontbrekende gegevens mutatieformulier"
        
    bRes = vulArrayKS_Afdelingen(arrAfdelingen, False)
    WFM_DOORZENDEN_NAAR.list = arrAfdelingen
        
    WFM_INTVERT.AddItem ""
    WFM_INTVERT.AddItem "AEGARNR"
    WFM_INTVERT.AddItem "Incompleet"
    WFM_INTVERT.AddItem "Diversen"
    WFM_INTVERT.Value = ""
     Exit Sub
EH:
    DisplayError "Form activate"
End Sub
Private Sub cmdDoorsturen_Click()
Dim ff As Boolean
 On Error GoTo EH
 Dim myFrmAfdeling As Object
 MsgBox "Let op. Mutatieformulier wordt gereclassificeerd.", vbOKOnly + vbExclamation
       
       Call Reclassificeer(WIViewer, "COLL")
   
    
    WorkflowSaveAlgedaan = True
    Call Doorzenden(WIViewer)
    
    If Afdelingannuleren = True Then
        Call WFMBackButton(WIViewer)
        Afdelingannuleren = False
    End If

 
Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub
Private Sub cmdOpslaan_Click()
Dim myIdent As String

On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)

Exit Sub

EH:
    DisplayError "Doorsturen"

End Sub
Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH

    ' gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    
    Call StartBrief(WorkitemViewer, lbTemplates.Value)
    
    
Exit Sub

EH:
    DisplayError "Dubbelklik brief"
    
End Sub
Attribute VB_Name = "frmMUTQuery"
Attribute VB_Base = "0{5E6B33D6-B6AB-42CF-A606-BC43A0B84966}{09E1464E-0D08-43E2-86E9-28459E2FFFEE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim mobjQueryResults    As CALQueryResults
Dim ExtraInfo2ResultListMapping As New Collection
Dim myQueryResultRecordColumn   As Integer
Dim bVanafDatum         As Boolean
Dim bTotDatum           As Boolean

Const vbDefault = 0
Const vbHourglass = 11

Private Function EenofMeerSelectedItems() As Integer
Dim i                   As Integer

    EenofMeerSelectedItems = 0
    For i = 1 To ListView1.ListItems.Count
        If ListView1.ListItems.item(i).Selected Then
            EenofMeerSelectedItems = EenofMeerSelectedItems + 1
            If EenofMeerSelectedItems = 2 Then Exit Function
        End If
    Next
End Function

Private Sub CommandButton1_Click()
    Me.Hide
End Sub

Private Sub ListView1_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
    On Error GoTo EH
    If Me.ListView1.SortKey = ColumnHeader.Index - 1 Then
        If Me.ListView1.SortOrder = lvwDescending Then
            Me.ListView1.SortOrder = lvwAscending
        Else
            Me.ListView1.SortOrder = lvwDescending
        End If
    Else
        Me.ListView1.Sorted = True
        Me.ListView1.SortKey = ColumnHeader.Index - 1
        Me.ListView1.SortOrder = lvwAscending
    End If
    Me.ListView1.Refresh
    Exit Sub

EH:
    DisplayError "ListView ColumnClick"
End Sub

Private Sub EnableRetrieve()
    On Error GoTo EH
    cmdRetrieve.Enabled = False
    If Not Me.ListView1.SelectedItem Is Nothing Then
        If Me.ListView1.SelectedItem.Index > 0 Then cmdRetrieve.Enabled = True
    End If
    Exit Sub

EH:
    DisplayError "EnableRetrieve"
End Sub

Private Sub QRYTextBox6_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck QRYTextBox6
    QRYTextBox6.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum vanaf"
End Sub

Private Sub QRYTextBox7_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck QRYTextBox7
    QRYTextBox7.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum tot en met"
End Sub

Private Sub UserForm_Initialize()
Static Init             As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
'   Initialize the query form
    ListView1.MultiSelect = True
    txtMaxMatches = 100
    cmdFind.Default = True
    NewSearch
    Me.ListView1.ColumnHeaders.Add , "A", "A", 0, 0 ', Alignment:=1
    AddResultField "NR_POLIS", "deeln.nr.", 60, 0, False
    AddResultField "NAAM_DLNMR", "Naam dln.", 200, 0, False
    AddResultField "NR_AEGAR", "Aegarnr.", 60, 0, False
    AddResultField "NR_KLANT", "Klantnr.", 60, 0, False
    AddResultField "IND_TRIGGER", "Kenmerk", 60, 0, False
    AddResultField "DAT_DOC", "Datum document", 100, 0, False
    AddResultField "DOCTYPE", "Documenttype", 200, 0, True
    AddResultField "QUERYRESULTRECORD", "Query result record", 0, 0, False
    myQueryResultRecordColumn = 8
    Me.ListView1.Refresh
    DefQryField 1, "NR_POLIS", "Deeln. nr.", 10, "Deelnemer nummer"
    DefQryField 2, "NAAM_DLNMR", "Deeln. naam", 34, "Naam Deelnemer"
    DefQryField 3, "NR_AEGAR", "Aegarnr.", 9, "Aegarnummer"
    DefQryField 4, "NR_KLANT", "Klantnr", 6, "Klantnummer"
    DefQryField 5, "IND_TRIGGER", "Zaak Kenmerk", 3, "Altijd in combinatie met een ander zoekcriteria!"
    DefQryField 6, "DAT_DOC", "Datum  vanaf", 12, "Datum document (dd-mm-eejj)"
    DefQryField 7, "DAT_DOC", "tot en met", 12, "Datum document (dd-mm-eejj)"
    QRYTextBox5.AddItem ""
    QRYTextBox5.AddItem "MUT"
    QRYTextBox5.AddItem "SAL"
    Exit Sub

EH:
    DisplayError "Userform initialize frmMUTQuery"
End Sub

Private Sub AddResultField(name, Caption, Witdh, Align, ResultOnly As Boolean)
Dim myColHeader         As ColumnHeader

    On Error GoTo EH
    Set myColHeader = Me.ListView1.ColumnHeaders.Add(, name, Caption, Witdh, Align)
    myColHeader.Tag = ResultOnly
    Exit Sub

EH:
    DisplayError "AddResultField: " + name
End Sub

Private Sub DefQryField(No, name, Caption, MaxLen, TipText)
Dim ctlControl          As Control
Dim ctlTextBox          As Variant

    On Error GoTo EH
    For Each ctlControl In Me.Controls
        If Left(ctlControl.name, 10) = "QRYTextBox" Then
            Set ctlTextBox = ctlControl
            If Val(Mid(ctlTextBox.name, 11)) = No Then
                ctlTextBox.Tag = name
                ctlTextBox.MaxLength = MaxLen
                ctlTextBox.ControlTipText = TipText
                ctlTextBox.Enabled = True
                ctlTextBox.Visible = True
           End If
        End If
        If Left(ctlControl.name, 8) = "QRYLabel" Then
            If Val(Mid(ctlControl.name, 9)) = No Then
                ctlControl = Caption
                ctlControl.ControlTipText = TipText
                ctlControl.Enabled = True
                ctlControl.Visible = True
           End If
        End If
    Next
    Exit Sub

EH:
    DisplayError "DefQryField: " + name
End Sub

Private Sub cmdFind_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    If QRYTextBox5 <> "" And AantalCriteria = 1 Then
        MsgBox "Op 'zaak kenmerk' kan alleen gezocht worden in combinatie met mininaal 1 extra zoekcriteria."
        GoTo EH
    End If
    If AantalCriteria = 0 Then
        MsgBox "Vul minimaal 1 zoekcriteria in."
        GoTo EH
    End If
    DateCheck QRYTextBox6
    DateCheck QRYTextBox7
'   Execute the query
    Set mobjQueryResults = RunQuery()
'   Load the results into a listbox
    LoadResults

EH:
    MousePointer = fmMousePointerDefault
    If Err Then DisplayError "Zoek"
End Sub
Private Function AantalCriteria() As Integer
Dim ctlTextBox          As Control
Dim criteria            As String

    On Error Resume Next
    AantalCriteria = 0
    For Each ctlTextBox In Me.Controls
        If Left(ctlTextBox.name, 10) = "QRYTextBox" Then
            criteria = Replace(ctlTextBox, "*", "")
            criteria = Replace(criteria, "%", "")
            If Trim(criteria) <> "" Then AantalCriteria = AantalCriteria + 1
        End If
    Next
End Function

Private Sub cmdNew_Click()
    On Error Resume Next
    NewSearch
    QRYTextBox1.SetFocus
End Sub

Private Sub cmdRetrieve_Click()
Dim myViewer            As WorkitemViewer
Dim i                   As Integer

    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    For i = 1 To ListView1.ListItems.Count
        If (ListView1.ListItems.item(i).Selected = True) Then
            RetrieveNthItem (i)
        End If
    Next i

EH:
    MousePointer = fmMousePointerDefault
    If Err Then DisplayError "Open"
End Sub

Private Sub ListView1_DblClick()
    On Error GoTo EH
    If Not Me.ListView1.SelectedItem Is Nothing Then
        RetrieveNthItem Me.ListView1.SelectedItem.Index
    End If
    Call EnableRetrieve
    Exit Sub

EH:
    DisplayError "ListView DblClick"
End Sub

Private Sub ListView1_Click()
    Call EnableRetrieve
End Sub

Private Sub ListView1_Enter()
    cmdFind.Default = False
    cmdRetrieve.Default = True
End Sub

Private Sub ListView1_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    cmdFind.Default = True
End Sub

Private Sub cmdClose_Click()
    Unload Me
End Sub

Private Sub NewSearch()
Dim ctlTextBox          As Control

    On Error Resume Next
'   Fields are named 'QRYTextboxN" so new fields can be added
'   without changing this code.
    For Each ctlTextBox In Me.Controls
        If Left(ctlTextBox.name, 10) = "QRYTextBox" Then
            ctlTextBox = ""
            ctlTextBox.BackColor = TextboxWhite
        End If
    Next
End Sub

Private Function RunQuery() As CALQueryResults
Dim myColHeader         As ColumnHeader
Dim ctlTextBox          As Control
Dim ctlLabel            As Control
Dim strTemp             As String
Dim objClient           As CALClient
Dim lngMaxMatches       As Long
Dim calObjType          As Long
Dim calLocation         As Long
Dim i                   As Integer
Dim objIndexFields      As CALIndexFields2
Dim myClient            As CALClient

    Set myClient = Application.CALClient
    Set objIndexFields = New CALIndexFields2
'   Beetje omslachtig. objIndexFields.
    Set objIndexFields = Application.CALClient.IndexFields2
    For i = objIndexFields.Count To 1 Step -1
        Call objIndexFields.Remove(objIndexFields.item(i))
    Next
    Set RunQuery = Nothing
    lngMaxMatches = Val(txtMaxMatches)
    calObjType = calObjTypeDocument
    calLocation = calLocationDomain '    calLocationDomain
'   Search only for class COLLMUT
    SetIndex objIndexFields, "OBJECT_CLASS", "COLLMUT"
'   Fields are named 'QryTextboxN" and captions are named 'QryLabelN"
'   so new fields can be added without changing this code.
    For Each ctlTextBox In Me.Controls
        If Left(ctlTextBox.name, 10) = "QRYTextBox" Then
            If ctlTextBox.name = "QRYTextBox6" Then
                bVanafDatum = True
            ElseIf ctlTextBox.name = "QRYTextBox7" Then
                bTotDatum = True
            End If
            If ctlTextBox.Enabled = True Then
               SetIndex objIndexFields, ctlTextBox.Tag, ctlTextBox
            End If
        End If
    Next
'   Append result fields only to the Indexfield object
'   CAL only retrieves fields which are in the indexfields object,
'   Result only fields do have a blank selection
    For Each myColHeader In Me.ListView1.ColumnHeaders
        If myColHeader.Tag = True Then
            SetIndex objIndexFields, myColHeader.Key, ""
        End If
    Next
'   Execute the query
    Set objClient = Application.CALClient
    Set RunQuery = objClient.Query("", calObjType, calLocation, lngMaxMatches, objIndexFields)
    calObjType = calObjTypeFolder
    calLocation = calLocationDomain
    Set objIndexFields = Nothing
    Set objClient = Nothing
End Function

Private Sub SetIndex(objIndexFields As CALIndexFields2, Field As Variant, Value As Variant)
Dim strValue            As String
Dim strField            As String
Dim StarPos             As Integer
Dim objIndexField       As CALIndexField

'   Forces a blank field to be interpreted as 'any value'
'   CAL needs a field as string (variant is not working)
    strField = Field
    If Value <= " " Then
        strValue = ""
    Else
       strValue = RTrim(Value)
    End If
'   Replace * met %
    strValue = Replace(strValue, "*", "%")
'   Zet voor eerste dat_doc >= en tweede <=
    If strField = "DAT_DOC" Then
        If bVanafDatum Then
            If strValue <> "" Then
                strValue = ">=" & Format(strValue, "yyyy-mm-dd")
            End If
            bVanafDatum = False
        End If
        If bTotDatum Then
            If strValue <> "" Then
                strValue = "<=" & Format(strValue, "yyyy-mm-dd")
            End If
            bTotDatum = False
        End If
    End If
    Set objIndexField = objIndexFields.Add(calIndexFieldLast, strField, strValue)
End Sub

Private Sub LoadResults()
Dim itmx                As ListItem
Dim myColHeader         As ColumnHeader
Dim lngCount            As Long
Dim i, j, t             As Long
Dim myEInfoItem         As CALEnumExtraInfoItem
Dim EInfiItem

    On Error GoTo EH
    For i = Me.ListView1.ListItems.Count To 1 Step -1
        Me.ListView1.ListItems.Remove i
    Next i
'   Display the number of hits
    lngCount = mobjQueryResults.Count
    lblCount = "Aantal gevonden: " + Str(lngCount)
'   Add each hit to the listbox
    For i = 1 To lngCount

Dim objEnumItem         As CALEnumItem

        Set objEnumItem = mobjQueryResults.item(i)
'       Calc the mapping from the ExtraInfo query results to then ResultList shown on the form
        If ExtraInfo2ResultListMapping.Count < 1 Then
            For t = 2 To Me.ListView1.ColumnHeaders.Count
                Set myColHeader = Me.ListView1.ColumnHeaders.item(t)
                EInfiItem = 0
                For j = 1 To objEnumItem.ExtraInfo.Count
                Set myEInfoItem = objEnumItem.ExtraInfo.item(j)
                    If myEInfoItem.name = myColHeader.Key Then
                        EInfiItem = j
                    End If
                Next j
                If EInfiItem > 0 Then ExtraInfo2ResultListMapping.Add EInfiItem
            Next t
        End If
'       Transfer each record from the Query result list to the listview line on the form
        Set itmx = Me.ListView1.ListItems.Add()
        For j = 1 To ExtraInfo2ResultListMapping.Count
            EInfiItem = ExtraInfo2ResultListMapping.item(j)
            If EInfiItem > 0 Then   'if there is a value in the resultlist
                itmx.SubItems(j) = objEnumItem.ExtraInfo.item(EInfiItem)
            End If
        Next j
'       Voeg de verwijziging naar de queryresultlist toe
        itmx.SubItems(myQueryResultRecordColumn) = i
        Me.ListView1.Refresh
    Next i
    EnableRetrieve
    Exit Sub

EH:
    DisplayError "Loadresults"
End Sub

Private Sub RetrieveNthItem(i As Integer, Optional FromWorkflow As Boolean)
Dim myViewer            As WorkitemViewer
Dim FindListItems       As CALWorkitemWorkstepList
Dim objEnumItem         As CALEnumItem
Dim objClientListItem   As CALClientListItem
Dim j                   As Integer

    On Error GoTo EH
'   Bepaal het recordnr in de queryresult list
    j = Me.ListView1.ListItems.item(i).ListSubItems(myQueryResultRecordColumn)
    Set objEnumItem = mobjQueryResults.item(j)
    If objEnumItem.Info.ServerName = "ARCHIVE" Then
        Err.Raise 12344, , "Deze folder is verplaatst naar een andere business unit. Openen van deze folder is niet mogelijk."
    End If
    Set objClientListItem = objEnumItem.Retrieve(0)
    Set myViewer = Application.Viewers.OpenViewer(mobjQueryResults.item(j).Info.objId, wdoOpenViewerNormal, wdoOpenReadOnly)
    myViewer.BringToTop
    Exit Sub

EH:
    If Err.Number = 1000 And Application.CALMaster.LastError.Code = 26 Then
        Resume Next
        Err.Clear
    End If
    DisplayError "Open"
End Sub

Private Sub UserForm_Terminate()
    Unload Me
End Sub
Attribute VB_Name = "frmMUTVerwerken"
Attribute VB_Base = "0{F972E8BD-7170-4CA2-8C88-3518594FFD0B}{0D50E8E4-9D96-4461-8502-0842AD425DDB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim HostForm            As Object
Dim myESWMObjID         As String

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub CopyButton_Click()
Static KopieNr          As Integer
Dim KopieItem           As CALClientListItem

    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    KopieNr = KopieNr + 1
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call CopySendDocument(WIViewer.CALClientListItem, KopieNr)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    DisplayError "Kopie"
    MousePointer = fmMousePointerDefault
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean
Dim arrAfdelingen(15, 1) As String
Dim bRes                As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    WFM_DOCTYPE.AddItem "MUT Mutatieformulier"
    WFM_DOCTYPE.AddItem "SAL Salarislijst"
    lbTemplates.AddItem "Ontbrekende gegevens mutatieformulier"
    bRes = vulArrayKS_Afdelingen(arrAfdelingen, False)
    WFM_DOORZENDEN_NAAR.list = arrAfdelingen
    WFM_INTVERT.AddItem ""
    WFM_INTVERT.AddItem "AEGARNR"
    WFM_INTVERT.AddItem "Incompleet"
    WFM_INTVERT.AddItem "Diversen"
    WFM_INTVERT.Value = ""
    Exit Sub
EH:
    DisplayError "Form activate"
End Sub

Private Sub cmdToonUitzondering_Click()
    Call CheckOpUitzondering(WIViewer, , WFM_NR_KLANT)
End Sub

Private Sub cmdDoorsturen_Click()
Dim ff                  As Boolean
Dim myFrmAfdeling       As Object

    On Error GoTo EH
    MsgBox "Let op. Mutatieformulier wordt gereclassificeerd.", vbOKOnly + vbExclamation
    Call Reclassificeer(WIViewer, "COLL")
    WorkflowSaveAlgedaan = True
    Call Doorzenden(WIViewer)
    If Afdelingannuleren = True Then
        Call WFMBackButton(WIViewer)
        Afdelingannuleren = False
    End If
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdExtraScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    If YetAnotherExtralink(WIViewer, WFM_NR_POLIS.Text) Then
        Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
    End If
    MousePointer = fmMousePointerDefault
    MsgBox "Let op! De gegevens komen van een ander scherm." + vbCrLf + "Plaats de initialen in het veld deelnemer achteraan."
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Screenscraping niet gelukt!"
End Sub

Private Sub cmdScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Open eerst het juiste CAESAR scherm (UI MDVB)."
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myIdent             As String

    If WFMrJN_NAAR_AFD_ja Then
        If WFM_DOORZENDEN_NAAR = "" Then
            MsgBox "Kies eerst de afdeling", vbCritical
            Exit Sub
        Else
            WFM_BEHANDELAAR.Value = ""
        End If
    End If
    DateCheck WFMDRAPPEL
    On Error GoTo EH
    If WFMrJN_VERWERKT_ja Then WFMDDAT_VERWERKT = Format(Now, "dd-mm-yyyy")
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
'   Gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WorkitemViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub WFM_DOORZENDEN_NAAR_Change()
    WFMrJN_NAAR_AFD_ja = True
End Sub

Private Sub WFM_NR_KLANT_Change()
    If Len(WFM_NR_KLANT) = 6 Then
        WFM_BEHANDELAAR = SQLGetHupo(WFM_NR_KLANT)
        WFM_BEH_GROEP.Text = get_BEHGRP(WFM_BEHANDELAAR.Text)
    End If
End Sub

Private Sub WFM_NR_POLIS_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WFM_NR_POLIS.BackColor = TextboxWhite
    PolisNummerCheck WFM_NR_POLIS
    Exit Sub

EH:
    DisplayError "Polisnummer"
End Sub

Private Sub WFMDDAT_DOC_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_DOC
    WFMDDAT_DOC.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum document"
End Sub

Private Sub WFMDGEB_DEELN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDGEB_DEELN
    WFMDGEB_DEELN.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Geboorte Datum deelenemer"
End Sub

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappeldatum"
End Sub
Attribute VB_Name = "frmMUTparkeren"
Attribute VB_Base = "0{AD7A439E-D310-46FE-A190-CE425EF753A3}{764FF821-21CD-4595-954F-E3F997474EE9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myRedenVertraging As CALFormField

Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
On Error GoTo EH

    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)

Exit Sub

EH:
    DisplayError "Doorsturen"

End Sub

Private Function SetCALXFormFields() As Boolean

On Error GoTo EH

    SetCALXFormFields = False
    
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        If OptTerugMuteren = True Then
            myRedenVertraging.Value = "Muteren"
        End If
       If optParkeren = True Then
            ' waarde blijft hetzelfde
        End If
    
    End If
    
    SetCALXFormFields = True

Exit Function

EH:

    DisplayError "SetCALXFormFields"

End Function

Private Sub UserForm_Activate()
Static Init As Boolean
Dim strWorkstep As String
On Error GoTo EH
    
    If Init Then Exit Sub
    Init = True
    
    

    strWorkstep = GetWorkstep(WIViewer)
    If Left(strWorkstep, 5) = "33M05" Then
    OptTerugMuteren.Caption = "terug"
    End If
    
    Set myRedenVertraging = WIViewer.Fields.Find("INTVERT").CALFormField
    optParkeren.Value = True
    tbRedenVertraging.Value = myRedenVertraging.Value
Exit Sub

EH:

    DisplayError "UserForm_Activate"

End Sub
Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub


Attribute VB_Name = "frmMailMelding"
Attribute VB_Base = "0{63947465-0731-4D00-B6C0-A8787F707ACD}{C953A061-C607-48A1-9168-A93C99D66748}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdOK_Click()
   Hide
End Sub
Attribute VB_Name = "frmMailbox"
Attribute VB_Base = "0{5C491992-1E23-43A2-93ED-B8C42C65E57C}{8054F03B-AD59-46B6-96BF-E6EC4BF96345}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdAnnuleer_Click()
    Me.lUsers.Clear
    Me.Hide
End Sub

Private Sub cmdOK_Click()
    Me.Hide
End Sub

Private Sub lUsers_DBlClick(ByVal Cancel As MSForms.ReturnBoolean)
        Me.Hide
End Sub

Private Sub UserForm_Activate()
     Me.lUsers.AddItem Application.CALClient.username
     Me.lUsers = Application.CALClient.username
End Sub
Attribute VB_Name = "frmNaamDocument"
Attribute VB_Base = "0{8088E821-7B35-497B-87F2-FB7F47D592B7}{6AD1693E-319E-4EAA-BC4B-DD63E600F017}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cboDocType_Change()
    tbNaamDocument = cboDocType.list(cboDocType.ListIndex)
End Sub

Private Sub cmdAnnuleer_Click()
    strDoctype = "Cancel"
    Unload Me
End Sub

Private Sub CommandButton1_Click()
    If optVervangendeBrief.Value = False And optVrijeBrief.Value = False Then
        MsgBox "Kies eerst of het een vervangende brief of een vrije brief is"
        Exit Sub
    End If
    If Trim(tbNaamDocument) = "" Then
        MsgBox "Naam document is verplicht.", vbCritical + vbApplicationModal + vbOKOnly
    Else
        strDoctype = tbNaamDocument
        Unload Me
    End If
End Sub

Private Sub optVervangendeBrief_Change()
    If optVervangendeBrief.Value = True Then
        cboDocType.Enabled = True
        tbNaamDocument = ""
        If cboDocType.ListIndex <> -1 Then
            tbNaamDocument = cboDocType.list(cboDocType.ListIndex)
        End If
        tbNaamDocument.Enabled = False
        cboDocType.SetFocus
    End If
End Sub

Private Sub optVrijeBrief_Change()
    If optVrijeBrief.Value = True Then
        cboDocType.Enabled = False
        tbNaamDocument.Enabled = True
        tbNaamDocument = ""
        tbNaamDocument.SetFocus
    End If
End Sub

Private Sub UserForm_Activate()
    cboDocType.Enabled = False
    cboDocType.AddItem ""
    If Not strImport = "Excel" Then
        If strClass.Value = "OVL" Or strClass.Value = "PEN" Or strClass.Value = "WZP" Then
            cboDocType.AddItem "OVL Brief Caesar"
            cboDocType.AddItem "PEN Brief Caesar"
        ElseIf strClass.Value = "KLA" Then
            cboDocType.AddItem "KLA Ontvangstbevestiging"
            cboDocType.AddItem "KLA Antwoordbrief"
        Else
            cboDocType.AddItem "UWO Fiat VTU Checklist"
            cboDocType.AddItem "BWO Offerte deelnemer"
            cboDocType.AddItem "BWO Aanschrijven deelnemer"
        End If
    Else
        optVervangendeBrief.Enabled = False
        optVrijeBrief.Enabled = False
        cboDocType.Enabled = False
    End If
End Sub
Attribute VB_Name = "frmNotitie"
Attribute VB_Base = "0{7995D2BD-15ED-41FD-AD5C-DB4B106907CE}{E64EA857-4713-4B34-B0BE-38F259BB8883}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'XML Variables
Private WIDataXMLPath   As String
Private WIXMLData       As clsWIData
Private XMLNode         As IXMLDOMNode
Private myViewer        As WFDWorkitem.WorkitemViewer
Public printff          As String

Dim oFormChanger        As New CFormChanger

Public Property Set rsViewer(ByVal vData As WFDWorkitem.WorkitemViewer)
   Set myViewer = vData
End Property
Public Property Get rsViewer() As WFDWorkitem.WorkitemViewer
   Set rsViewer = myViewer
End Property
Public Property Let rsViewer(ByVal vData As WFDWorkitem.WorkitemViewer)
   Set myViewer = vData
End Property

Private Sub lblAddNote_Click()
    Set frmAddNotitie.NotitieData = WIXMLData
    frmAddNotitie.strReason = "D"
    frmAddNotitie.Show 1
    If frmAddNotitie.booOk = True Then
        txtNotitie.Text = ""
        WFMData.setWIData rsViewer.CALClientListItem.OpenedItem, WIXMLData  'WIViewer.CALClientListItem.OpenedItem, WIXMLData
        Set WIXMLData = WFMData.getWIData(rsViewer.CALClientListItem.OpenedItem)  '.OpenedItem)
        drawToelichtingen
    End If
    Unload frmAddNotitie
End Sub

Private Sub lblAfsluiten_Click()
    Unload Me
End Sub

Private Sub lblAllNotes_Click()
Dim lstItem             As ListItem

    txtNotitie.Text = ""
    For Each lstItem In lvNotitie.ListItems
        txtNotitie.Text = txtNotitie.Text & lstItem.Text & _
                          ", " & lstItem.ListSubItems(1).Text & vbCr & vbCr & _
                          lstItem.ListSubItems(2).Text & vbCr & vbCr
    Next
    txtNotitie.SetFocus
'[W7]    SendKeys "{TAB}"
    DoEvents
            'printff = " "
'[W7]    SendKeys "+{TAB}"
    DoEvents
End Sub

Private Sub lblPrintAll_Click()
Dim strInhoudnote       As String

    strInhoudnote = txtNotitie.Text
    Call PrintXMLNote(rsViewer.CALClientListItem.Info.name, printff, strInhoudnote)
End Sub

Private Sub lvNotitie_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
    lvNotitie.SortKey = ColumnHeader.Index - 1
    If lvNotitie.SortOrder = lvwAscending Then
        lvNotitie.SortOrder = lvwDescending
    Else
        lvNotitie.SortOrder = lvwAscending
    End If
    lvNotitie.Sorted = True
End Sub

Private Sub lvNotitie_ItemClick(ByVal item As MSComctlLib.ListItem)
    txtNotitie.Text = item.ListSubItems(2).Text
    txtNotitie.ScrollBars = fmScrollBarsVertical
    printff = item.Default + "  " + item.ListSubItems(1).Text
End Sub

Private Sub txtNotitie_Change()
    'SendKeys "^{HOME}"
End Sub

Private Sub txtNotitie_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
'    MsgBox "this is mousdown"
End Sub

Private Sub UserForm_Activate()
'   Add ColumnHeaders.  The width of the columns is the width
'   of the control divided by the number of ColumnHeader objects.
Dim clmX                As ColumnHeader

    Set clmX = lvNotitie.ColumnHeaders.Add(, , "Behandelaar", "120")
    Set clmX = lvNotitie.ColumnHeaders.Add(, , "Datum", "160")
    Set clmX = lvNotitie.ColumnHeaders.Add(, , "Notitie", "0")
    lvNotitie.View = lvwReport ' Set View property to Report.
    Set WIXMLData = WFMData.getWIData(rsViewer.CALClientListItem.OpenedItem)  '.OpenedItem)
    If rsViewer.ObjType = calObjTypeFolder Then
        VBForm.ChangeIcon Me, AEAbout.imlAEGON.ListImages("noteonfolder").ExtractIcon
        lblAllNotes.Picture = AEAbout.imlAEGON.ListImages("allnotesfld").ExtractIcon
    Else
        VBForm.ChangeIcon Me, AEAbout.imlAEGON.ListImages("noteondoc").ExtractIcon
        lblAllNotes.Picture = AEAbout.imlAEGON.ListImages("allnotes").ExtractIcon
    End If
    lblPrintAll.Picture = AEAbout.imlAEGON.ListImages("print").ExtractIcon
    drawToelichtingen
    lblAllNotes_Click
'   Mabr ik heb het txtnotitie veld even nodig. O dat nu helemaal opnieuw op te gaan bouwen
    If NoteExit = True Then
        Me.Hide
        NoteExit = False
    End If
    Set oFormChanger.Form = Me
    oFormChanger.Sizeable = True
    oFormChanger.ShowCaption = True
    oFormChanger.ShowTaskBarIcon = True
    oFormChanger.ShowIcon = True
End Sub

Private Sub UserForm_Initialize()
'   Voor alle zekerheid nogmaals initaliseren
    initEiStream
    initUservars
    lvNotitie.Icons = AEAbout.imlAEGON16x16
    lvNotitie.SmallIcons = AEAbout.imlAEGON16x16
End Sub

Private Sub drawToelichtingen()
Dim myXMLNodes          As IXMLDOMNodeList
Dim myXMLNode           As IXMLDOMNode
Dim itmx                As ListItem
Dim i                   As Long

    lvNotitie.ListItems.Clear
    lvNotitie.Refresh
    Set myXMLNodes = WIXMLData.XMLData.getRowNodes("Data", "Type = ""T""")
'   Create a ListItem object.
    If myXMLNodes.Length > 0 Then
        For i = myXMLNodes.Length - 1 To 0 Step -1
            Set itmx = lvNotitie.ListItems.Add(, , myXMLNodes.item(i).selectSingleNode("Name").Text)
            Select Case myXMLNodes.item(i).selectSingleNode("Icon").Text
                Case "E"
                     itmx.Icon = "escalatie"
                     itmx.SmallIcon = "escalatie"
                Case "I"
                     itmx.Icon = "info"
                     itmx.SmallIcon = "info"
                Case "A"
                     itmx.Icon = "antwoord"
                     itmx.SmallIcon = "antwoord"
            End Select
            itmx.SubItems(1) = myXMLNodes.item(i).selectSingleNode("CreationDate").Text & " " & _
                               myXMLNodes.item(i).selectSingleNode("CreationTime").Text
            itmx.SubItems(2) = myXMLNodes.item(i).selectSingleNode("Contents").Text
        Next
        txtNotitie.Text = lvNotitie.SelectedItem.ListSubItems(2).Text
    End If
    lvNotitie.SortKey = 1
    lvNotitie.SortOrder = lvwDescending
    lvNotitie.Sorted = True
    lvNotitie.Refresh
End Sub
Attribute VB_Name = "frmOutlookTree"
Attribute VB_Base = "0{02141C52-88B7-49D9-8CF2-6FCB53A6E18F}{4FFDDB00-6601-4145-905B-CC88B9C95F08}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim oFormChanger As New CFormChanger

'******************************************************
' Changed
' Date 16-10-2001
' By Hans Keesom
' Added code to allow multipe selection of mailitem
' For this I added a listview on the form in which the mailitems are displayed
' I removed the opslaan button as it was void
' Changed 8-4-2004
' MaBr listview multiple select doesn't work
'
'***********************************************************

Private bViewDraftsBox As Boolean
Private bViewInbox As Boolean
Private bViewSentItemsBox As Boolean
Private WIViewer As WorkitemViewer
Private myMailItem As Outlook.MailItem
Private myMailItems As Collection
Private Sub cmdAnnuleer_Click()
    Me.Hide
    
End Sub

Private Sub cmdOpen_Click()
    If LstOutl.SelectedItem Is Nothing Then
        Call golOutlook.DisplayNode(treOutl.SelectedItem)
    Else
        Call golOutlook.DisplayListItem(LstOutl.SelectedItem)
    End If
    
End Sub
Private Sub cmdOK_Click()
Dim objItem As Outlook.MailItem
    Set Me.SelectedMailItem = golOutlook.GetNodeMailItem(treOutl.SelectedItem)
    Set Me.SelectedMailItems = golOutlook.GetNodeMailItems(LstOutl)
    
    If Not Me.SelectedMailItems.Count = 0 Then
        Me.Hide
    End If
End Sub

Private Sub LstOutl_DblClick()
    Call golOutlook.DisplayListItem(LstOutl.SelectedItem)
End Sub

Private Sub LstOutl_ItemClick(ByVal item As MSComctlLib.ListItem)
    cmdOpen.Enabled = False
    cmdOK.Enabled = False
    
    If item.Tag <> "" Then
        cmdOpen.Enabled = True
        cmdOK.Enabled = True
    End If
    If item.Tag = "" Then
        cmdOpen.Enabled = True
    End If

End Sub

Private Sub treOutl_BeforeLabelEdit(Cancel As Integer)
     Cancel = True
End Sub

Private Sub treOutl_DblClick()
    Call golOutlook.DisplayNode(treOutl.SelectedItem)
End Sub

Private Sub treOutl_Expand(ByVal Node As MSComctlLib.Node)
    golOutlook.ExpandNode Node, Me.treOutl, Me.LstOutl
    treOutl_NodeClick Node
    Node.EnsureVisible
End Sub
Private Sub treOutl_NodeClick(ByVal Node As MSComctlLib.Node)
    cmdOpen.Enabled = False
    cmdOK.Enabled = False
    
    If Node.Tag <> "" Then
        cmdOpen.Enabled = True
        cmdOK.Enabled = True
        cmdOpslaan.Enabled = True
    End If
    If Node.Tag = "" And Node.Key <> "root" Then
        cmdOpen.Enabled = True
    End If
    golOutlook.ExpandNode Node, Me.treOutl, Me.LstOutl
End Sub

Private Sub UserForm_Initialize()
    treOutl.ImageList = imlOutlook
    
    LstOutl.ColumnHeaders.Add , , "Hello"
    LstOutl.ColumnHeaders.item(1).Width = LstOutl.Width - 20
    LstOutl.View = lvwReport
  
End Sub

Private Sub UserForm_Activate()
Set oFormChanger.Form = Me
    oFormChanger.Sizeable = True
     'oFormChanger.ShowCaption = True
     'oFormChanger.ShowSysMenu = True
     oFormChanger.ShowTaskBarIcon = True
     oFormChanger.ShowIcon = True
     'oFormChanger.ShowCloseBtn = True
     'oFormChanger.ShowMaximizeBtn = True
     'oFormChanger.ShowMinimizeBtn = True

End Sub
Public Property Let ViewDraftsbox(VarValue As Variant)
  bViewDraftsBox = VarValue
End Property
Public Property Get ViewDraftsbox()
 ViewDraftsbox = bViewDraftsBox
End Property
Public Property Let ViewInbox(VarValue As Variant)
  bViewInbox = VarValue
End Property
Public Property Get ViewInbox()
 ViewInbox = bInbox
End Property
Public Property Let ViewSentItemsbox(VarValue As Variant)
  bViewSentItemsBox = VarValue
End Property
Public Property Get ViewSentItemsbox()
 ViewSentItemsbox = bViewSentItemsBox
End Property
Public Property Set WorkitemViewer(objWorkitemViewer)
  Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property
Public Property Set SelectedMailItem(olValue As Outlook.MailItem)
  Set myMailItem = olValue
End Property
Public Property Get SelectedMailItem() As Outlook.MailItem
  Set SelectedMailItem = myMailItem
End Property
Public Property Set SelectedMailItems(olValue As Collection)
  Set myMailItems = olValue
End Property
Public Property Get SelectedMailItems() As Collection
  Set SelectedMailItems = myMailItems
End Property

Public Function BuildTree()
    golOutlook.Login
    golOutlook.BuildTreeDefaultFolders treOutl, bViewDraftsBox, bViewInbox, bViewSentItemsBox

End Function
Attribute VB_Name = "frmPEN2cBeoordKeuze"
Attribute VB_Base = "0{C467E6C1-93FC-49B9-B7BB-00A9C8EAE74B}{4D387BBE-B546-4341-8941-920D42E5CC31}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver  As CALFormField
Dim mydate As Date

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub JN_STUKKEN_VOLL5_ja_Click()
    WFM_REDEN_PARKEREN.Enabled = False
    lblRedenParkeren.Enabled = False
    lblDatum.Enabled = False
    WFMDRAPPEL.Enabled = False
    WFMDRAPPEL = ""
    WFM_REDEN_PARKEREN = ""
End Sub
Private Sub JN_STUKKEN_VOLL5_nee_Click()
    WFMrJN_NAAR_PARKEREN_ja.Value = True
    WFM_REDEN_PARKEREN.Enabled = True
    lblRedenParkeren.Enabled = True
    lblDatum.Enabled = True
    WFMDRAPPEL.Enabled = True
    mydate = WFMDDAT_INGANG.Value
    mydate = DateAdd("d", 15, Date)
    WFMDRAPPEL.Value = mydate
    WFM_REDEN_PARKEREN.Text = "Incomplete stukken"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
'   Gegevens exporteren
    Call StartBrief(WorkitemViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

    If Init Then Exit Sub
    Init = True

    lbTemplates.AddItem "Incomplete stukken"
    lbTemplates.AddItem "Macht. nwe. offerte"
    
    GetCALXFormFields

    StatusBar1.Panels.item("WFM_NR_POLIS").Text = "Deeln. nr.: " & WFM_NR_POLIS
    StatusBar1.Panels.item("WFM_NR_AEGAR").Text = "Aegarnr.: " & WFM_NR_AEGAR
    
    MultiPage1.Value = 1
    
    CheckOpUitzondering WIViewer, txtBijzonderheden
    
    If txtBijzonderheden.Text = "" Then
        MultiPage1.pages("PageUitz").Visible = False
    End If

    If WFM_BEH_GROEP <> "" Then
        lblbeg.Visible = True
        WFM_BEH_GROEP.Visible = True
    End If

    If WFMDDAT_INGANG <> "" Then
        MultiPage1.pages("PEN").Visible = True
        MultiPage1.pages("PEN").Enabled = True
    End If

    If WFMLFLEX_BESLIS_DLN = "Nieuwe offerte" Then
        WFMrJN_EERSTE_OFFERTEnee.Value = True
        fraVerzoekOff.Visible = True
        WFMLFLEX_KEUZE_DLN.Text = "Verzoek offerte"
        WFMLFLEX_KEUZE_DLN.Enabled = False
    End If
End Sub

Private Sub WFMDDAT_INGANG_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_INGANG
    WFMDDAT_INGANG.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Ingangsdatum"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myIdent As String

    On Error GoTo EH
    If Not WFM_Validatie Then Exit Sub
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub

Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean
Dim newName As String

    On Error GoTo EH
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

Private Function WFM_Validatie() As Boolean
    WFM_Validatie = True
End Function

Private Sub WFMLFLEX_KEUZE_DLN_Change()
    Select Case WFMLFLEX_KEUZE_DLN.Text
        Case "Pensioen-ingang"
             fraPensIngang.Visible = True
             fraVerzoekOff.Visible = False
             fraKeuze.Visible = False
             If WFMrJN_EERSTE_OFFERTEnee.Value = True Then
                fraVerzoekOff.Visible = True
                End If
        Case "Keuze bepaald"
             fraPensIngang.Visible = False
             fraKeuze.Visible = True
             fraVerzoekOff.Visible = False
             If WFMrJN_EERSTE_OFFERTEnee.Value = True Then
                fraVerzoekOff.Visible = True
             End If
        Case "Verzoek Offerte"
             fraPensIngang.Visible = False
             fraKeuze.Visible = False
             fraVerzoekOff.Visible = True
    End Select
End Sub

Private Sub WFMrJN_NAAR_PARKEREN_ja_Click()
    WFMrJN_NAAR_PARKEREN_ja.Value = True
    WFM_REDEN_PARKEREN.Enabled = True
    lblRedenParkeren.Enabled = True
    lblDatum.Enabled = True
    WFMDRAPPEL.Enabled = True
End Sub
Private Sub WFMrJN_NAAR_PARKERENnee_Click()
    WFM_REDEN_PARKEREN.Enabled = False
    lblRedenParkeren.Enabled = False
    lblDatum.Enabled = False
    WFMDRAPPEL.Enabled = False
    WFMDRAPPEL = ""
    WFM_REDEN_PARKEREN = ""
End Sub

Private Sub WFMrJN_UITKFORM_ONTVnee_Click()
    WFMrJN_STUKKEN_VOLLnee.Value = True
End Sub

Private Sub WFMrJN_LB_VERKLARINGnee_Click()
    WFMrJN_STUKKEN_VOLLnee.Value = True
End Sub
Attribute VB_Name = "frmPEN2cIncMacht"
Attribute VB_Base = "0{A3B8D734-4B54-4DD4-AFE5-CBC6EA340CB5}{733E1010-CF4E-47A8-8236-2A089C091C76}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver  As CALFormField
Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property



Private Sub imgGBA_Click()
On Error GoTo EH

    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
 
Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Private Sub UserForm_Activate()
Static Init As Boolean

    If Init Then Exit Sub
    Init = True

    GetCALXFormFields

    StatusBar1.Panels.item("WFM_NR_POLIS").Text = "Deeln. nr.: " & WFM_NR_POLIS
    StatusBar1.Panels.item("WFM_NR_AEGAR").Text = "Aegarnr.: " & WFM_NR_AEGAR
    
    MultiPage1.Value = 0
    
    'MaBr even de proces niet laten zien voor FEP
    MultiPage1.pages("Page2").Visible = False
    
    CheckOpUitzondering WIViewer, txtBijzonderheden
    
     If txtBijzonderheden.Text = "" Then
        MultiPage1.pages("PageUitz").Visible = False
     End If
   
    If WFM_BEH_GROEP <> "" Then
        lblbeg.Visible = True
        WFM_BEH_GROEP.Visible = True
    End If
    
    If WFMDDAT_INGANG <> "" Then
            MultiPage1.pages("PEN").Visible = True
            MultiPage1.pages("PEN").Enabled = True
    End If
    
     ' mabr dat kan netter...
    If Left(GetWorkstep(WIViewer), 5) = "98C26" Then
            framachtiging.Visible = True
        WFM_KOSTEN_INZAKE.Text = "Offerte"
    Else
       If WFM_KOSTEN_INZAKE = "Offerte" Then
            frakosten.Visible = True
       Else
            frakostenADM.Visible = True
       End If
    End If
End Sub
Private Sub WFMDDAT_INGANG_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH
   
    DateCheck WFMDDAT_INGANG
    WFMDDAT_INGANG.BackColor = TextboxWhite

Exit Sub

EH:
    DisplayError "Ingangsdatum"
End Sub

Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)

Exit Sub

EH:
    DisplayError "Annuleren"
End Sub
Private Sub cmdOpslaan_Click()
Dim myIdent As String

On Error GoTo EH

    If Not WFM_Validatie Then Exit Sub
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)

Exit Sub

EH:
    DisplayError "Doorsturen"

End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub
Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean
Dim newName As String
On Error GoTo EH

    SetCALXFormFields = False

    SetCALXFormFields = True

Exit Function

EH:
    DisplayError "SetCALXFormFields"

End Function
Private Function WFM_Validatie() As Boolean

    WFM_Validatie = True
End Function
Attribute VB_Name = "frmPEN2cIncMacht2"
Attribute VB_Base = "0{DFA528B1-3B16-4E86-89F6-8EBFA4128667}{0F65214A-9691-4305-BDAB-5A1F1A6A022F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver  As CALFormField
Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub imgGBA_Click()
On Error GoTo EH

    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
 
Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Private Sub UserForm_Activate()
Static Init As Boolean

    If Init Then Exit Sub
    Init = True

    GetCALXFormFields

    StatusBar1.Panels.item("WFM_NR_POLIS").Text = "Deeln. nr.: " & WFM_NR_POLIS
    StatusBar1.Panels.item("WFM_NR_AEGAR").Text = "Aegarnr.: " & WFM_NR_AEGAR
    
    MultiPage1.Value = 0
    
    'MaBr even de proces niet laten zien voor FEP
    MultiPage1.pages("Page2").Visible = False
    
    CheckOpUitzondering WIViewer, txtBijzonderheden
    
     If txtBijzonderheden.Text = "" Then
        MultiPage1.pages("PageUitz").Visible = False
     End If
   
   If WFMDDAT_INGANG <> "" Then
            MultiPage1.pages("PEN").Visible = True
            MultiPage1.pages("PEN").Enabled = True
    End If
    
   If WFM_BEH_GROEP <> "" Then
        lblbeg.Visible = True
        WFM_BEH_GROEP.Visible = True
    End If
     
    framachtiging.Visible = True

     
    WFM_KOSTEN_INZAKE.Text = "Adm. kosten"
    
End Sub



Private Sub WFMDDAT_INGANG_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH
   
    DateCheck WFMDDAT_INGANG
    WFMDDAT_INGANG.BackColor = TextboxWhite

Exit Sub

EH:
    DisplayError "Ingangsdatum"
End Sub

Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)

Exit Sub

EH:
    DisplayError "Annuleren"
End Sub
Private Sub cmdOpslaan_Click()
Dim myIdent As String

On Error GoTo EH

    If Not WFM_Validatie Then Exit Sub
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)

Exit Sub

EH:
    DisplayError "Doorsturen"

End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub
Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean
Dim newName As String
On Error GoTo EH

    SetCALXFormFields = False

    
    SetCALXFormFields = True

Exit Function

EH:
    DisplayError "SetCALXFormFields"

End Function
Private Function WFM_Validatie() As Boolean

    WFM_Validatie = True
End Function
Attribute VB_Name = "frmPEN2cMakenOff"
Attribute VB_Base = "0{2339954D-48E1-4873-8AEB-5DA3F4BE6AA9}{BA325674-F881-45DB-966F-0D93C52491FE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver  As CALFormField

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub imgGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
'   Gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

    If Init Then Exit Sub
    Init = True

    lbTemplates.AddItem "Offertebrief"
    lbTemplates.AddItem "PIN Offerte uitruil (PSW2c)"
    GetCALXFormFields
    If Not WFMrJN_KOSTEN_ONTVonb = True Then
        frakosten.Visible = True
    End If
    If WFMLFLEX_BESLIS_DLN = "Nieuwe Offerte" Then
           rbEerderJA.Value = True
    End If
    StatusBar1.Panels.item("WFM_NR_POLIS").Text = "Deeln. nr.: " & WFM_NR_POLIS
    StatusBar1.Panels.item("WFM_NR_AEGAR").Text = "Aegarnr.: " & WFM_NR_AEGAR
    MultiPage1.Value = 1
    CheckOpUitzondering WIViewer, txtBijzonderheden
    If WFM_BEH_GROEP <> "" Then
        lblbeg.Visible = True
        WFM_BEH_GROEP.Visible = True
    End If
     If WFMDDAT_INGANG <> "" Then
            MultiPage1.pages("PEN").Visible = True
            MultiPage1.pages("PEN").Enabled = True
    End If
    If txtBijzonderheden.Text = "" Then
        MultiPage1.pages("PageUitz").Visible = False
    End If
End Sub

Private Sub WFMDDAT_INGANG_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_INGANG
    WFMDDAT_INGANG.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Ingangsdatum"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myIdent As String

    On Error GoTo EH
    If Not WFM_Validatie Then Exit Sub
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub

Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean
Dim newName As String

    On Error GoTo EH
    SetCALXFormFields = False
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

Private Function WFM_Validatie() As Boolean
    WFM_Validatie = False
    WFM_Validatie = True
End Function

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappel datum"
End Sub
Attribute VB_Name = "frmPEN2cMutCeasar"
Attribute VB_Base = "0{D8E02175-64E5-45A4-BB52-47160B106A6A}{1045C2FF-90FD-442A-BFF1-AA9003F2DDE9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim myForm              As Object
Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myPolOver           As CALFormField
Dim WithEvents ObjEmail As Outlook.MailItem
Attribute ObjEmail.VB_VarHelpID = -1
Dim strDateString       As String
Dim booSend             As Boolean

Private Sub cmdOpslaan_Click()
Dim myIdent             As String

    On Error GoTo EH
    If Not WFM_Validatie Then Exit Sub
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub imgGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean

    If Init Then Exit Sub
    Init = True
    GetCALXFormFields
    StatusBar1.Panels.item("WFM_NR_POLIS").Text = "Deeln. nr.: " & WFM_NR_POLIS
    StatusBar1.Panels.item("WFM_NR_AEGAR").Text = "Aegarnr.: " & WFM_NR_AEGAR
    MultiPage1.Value = 1
    CheckOpUitzondering WIViewer, txtBijzonderheden
    If txtBijzonderheden.Text = "" Then MultiPage1.pages("PageUitz").Visible = False
    If WFMDDAT_INGANG <> "" Then
        MultiPage1.pages("PEN").Visible = True
        MultiPage1.pages("PEN").Enabled = True
    End If
    If WFM_BEH_GROEP <> "" Then
        lblbeg.Visible = True
        WFM_BEH_GROEP.Visible = True
    End If
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        myPolOver.Value = Right$(Space(10) & Trim(tbPolOver1), 10) & ";" & _
                          Right$(Space(10) & Trim(tbPolOver2), 10) & ";" & _
                          Right$(Space(10) + Trim(tbPolOver3), 10) & ";"
    End If
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

Private Function WFM_Validatie() As Boolean
    WFM_Validatie = False
'   Er is nog geen duidelijkheid over eventuele validatie op gebruikersniveau.
    WFM_Validatie = True
End Function

Private Sub WFMLFLEX_BESLIS_DLN_Change()
    Select Case Left(WFMLFLEX_BESLIS_DLN.Text, 7)
        Case Is = "Vervroe"     'Or "Uitstel"   'Mabr ???
             fraDirect.Visible = False
             fraVervUit.Visible = True
             framachtiging.Visible = True
             WFM_WORKSTEP_NAAM = "98C51 bevest.CAESAR"
        Case Is = "Uitstel"
             fraDirect.Visible = False
             fraVervUit.Visible = True
             framachtiging.Visible = True
             WFM_WORKSTEP_NAAM = "98C51 bevest.CAESAR"
        Case Is = "Directe"
             fraDirect.Visible = True
             framachtiging.Visible = True
             fraVervUit.Visible = True
             If WFMLFLEX_BESLIS_DLN.Text = "Directe ingang" Then
                framachtiging.Visible = False
                fraVervUit.Visible = False
                WFM_WORKSTEP_NAAM = "98A26 Afhandeling"
             Else
                WFM_WORKSTEP_NAAM = "98C51 bevest.CAESAR"
             End If
        Case Is = "Nieuwe "
             fraDirect.Visible = False
             fraVervUit.Visible = False
             framachtiging.Visible = False
             WFM_WORKSTEP_NAAM = "98C16 Beoord Keuze"
         Case Is = " "
             fraDirect.Visible = False
             fraVervUit.Visible = False
             framachtiging.Visible = False
    End Select
End Sub
Attribute VB_Name = "frmPEN2cParkKeuze"
Attribute VB_Base = "0{F17996F1-6EAC-444A-AB0F-EE207FD9D23E}{7EBEC23A-E4BD-40EA-A1F8-8EA3DE1984D4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit
Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver  As CALFormField
Dim WithEvents ObjEmail As Outlook.MailItem
Attribute ObjEmail.VB_VarHelpID = -1
Dim strDateString As String
Dim booSend As Boolean

Private Sub cmdOpslaan_Click()
Dim myIdent As String

On Error GoTo EH

    If Not WFM_Validatie Then Exit Sub
    If rb_antwoord_info_JA = True Then
        ' Dit in een aparte procedure met naam meegeven
        Call VerplaatsenVanuitParkeerstap(WIViewer, WFM_WORKSTEP_NAAM.Value)
        Exit Sub
    End If
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)

Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub imgGBA_Click()
On Error GoTo EH

    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
 
Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

    If Init Then Exit Sub
    Init = True
    
    GetCALXFormFields

    StatusBar1.Panels.item("WFM_NR_POLIS").Text = "Deeln. nr.: " & WFM_NR_POLIS
    StatusBar1.Panels.item("WFM_NR_AEGAR").Text = "Aegarnr.: " & WFM_NR_AEGAR
    
    MultiPage1.Value = 1
    
    If WFM_BEH_GROEP <> "" Then
        lblbeg.Visible = True
        WFM_BEH_GROEP.Visible = True
    End If
    
    CheckOpUitzondering WIViewer, txtBijzonderheden
    
    If WFMDDAT_INGANG <> "" Then
            MultiPage1.pages("PEN").Visible = True
            MultiPage1.pages("PEN").Enabled = True
    End If
    
    If txtBijzonderheden.Text = "" Then
        MultiPage1.pages("PageUitz").Visible = False
    End If

End Sub
Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    
End Sub
Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean

On Error GoTo EH

    SetCALXFormFields = False

    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
    
        myPolOver.Value = Right$(Space(10) & Trim(tbPolOver1), 10) & ";" _
                              & Right$(Space(10) & Trim(tbPolOver2), 10) & ";" _
                              & Right$(Space(10) + Trim(tbPolOver3), 10) & ";"
    End If
    SetCALXFormFields = True

Exit Function

EH:
    DisplayError "SetCALXFormFields"

End Function

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH
    
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite

Exit Sub

EH:
    DisplayError "Rappel datum"
End Sub
Private Function WFM_Validatie() As Boolean
    WFM_Validatie = False
        'Er is nog geen duidelijkheid over eventuele validatie op gebruikersniveau.
    
    WFM_Validatie = True
End Function




Attribute VB_Name = "frmPEN2cRegMacht"
Attribute VB_Base = "0{F22A7BAD-A98D-4F32-BF39-4D893D244845}{E6485A8C-B3AB-4FDC-9CB7-75F366A3B9FA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver  As CALFormField
Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub imgGBA_Click()
On Error GoTo EH

    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
 
Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH

    ' gegevens exporteren
    'If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WorkitemViewer, lbTemplates.Value)
    
Exit Sub

EH:
    DisplayError "Dubbelklik brief"
    
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Private Sub UserForm_Activate()
Static Init As Boolean

    If Init Then Exit Sub
    Init = True
    
    
    lbTemplates.AddItem "Verzoek keuzeformulier"
    lbTemplates.AddItem "Verzoek machtiging"
     
     GetCALXFormFields

    StatusBar1.Panels.item("WFM_NR_POLIS").Text = "Deeln. nr.: " & WFM_NR_POLIS
    StatusBar1.Panels.item("WFM_NR_AEGAR").Text = "Aegarnr.: " & WFM_NR_AEGAR
    
    MultiPage1.Value = 1
    
    CheckOpUitzondering WIViewer, txtBijzonderheden

    
     If txtBijzonderheden.Text = "" Then
        MultiPage1.pages("PageUitz").Visible = False
     End If
 
End Sub


Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)

Exit Sub

EH:
    DisplayError "Annuleren"
End Sub
Private Sub cmdOpslaan_Click()
Dim myIdent As String

On Error GoTo EH

    If Not WFM_Validatie Then Exit Sub
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)

Exit Sub

EH:
    DisplayError "Doorsturen"

End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub
Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean
Dim newName As String
On Error GoTo EH

    SetCALXFormFields = False

    
    SetCALXFormFields = True

Exit Function

EH:
    DisplayError "SetCALXFormFields"

End Function


Private Function WFM_Validatie() As Boolean
     WFM_Validatie = True
End Function


Attribute VB_Name = "frmPENBepRecht"
Attribute VB_Base = "0{25997238-A6BB-4E77-A933-710A31EEA652}{297ED2C5-3C62-48C4-97E6-69F1C529E3B9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver As CALFormField
Dim mbOrgVervBriefAang As Boolean
Dim mydate As Date

Private Sub cmdInfo_Click()
    On Error GoTo EH
    Select Case WFM_IND_TRIGGER
        Case "PEN"
             Set frmPENInfo.WorkitemViewer = WIViewer
             frmPENInfo.Tag = "1"
             frmPENInfo.Show 1
        Case "OVL"
             Set frm_OVLBeoordelen.WorkitemViewer = WIViewer
             frm_OVLBeoordelen.ESWMObjID = WIViewer.CALClientListItem.Info.objId.InternalName
             GetFields WIViewer, frm_OVLBeoordelen
             frm_OVLBeoordelen.Show 0
    End Select
    Exit Sub

EH:
    DisplayError "PEN info"
End Sub

Private Sub cmdCreateFolder_Click()
Dim myFrm As Object

    Set myFrm = New frmEXCNabestaanden
    Set myFrm.WorkitemViewer = WIViewer
    myFrm.Show 1
    Set myFrm = Nothing
End Sub

Private Sub cmdGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub cmdNweVerz_Click()
    On Error GoTo EH
    If WFM_IND_TRIGGER = "OVL" Then
            MsgBox "Dit is een OVL !!!", vbCritical
        Exit Sub
    End If
   ' Call NewDocument("EXC", "PEN Ingang") 'TD91474
    Call NewDocument("PIN", "PEN Ingang")
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If WFMrJN_CAES_BRIEF_VERWnee And WFMrJN_VERV_BRIEF_AANGonb Then
        MsgBox "Vul Verv. brief aangemaakt in!"
        Exit Sub
    End If
    If mbOrgVervBriefAang = False And WFMrJN_VERV_BRIEF_AANG_ja Then
        If Not CaesarNotitie Then Exit Sub
    End If
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Function CaesarNotitie() As Boolean
Dim strTekst            As String
Dim strFilename         As String
Dim fs                  As New FileSystemObject
Dim ts                  As TextStream
Dim WI                  As CALWorkitemInfo
Dim ChildItem           As CALClientListItem
Dim objImport           As CALImport
Dim FldChild            As CALFolderChild
Dim lngShell            As Long

    On Error GoTo EH
    CaesarNotitie = False
    strTekst = "CAESAR BRIEF VERNIETIGEN" + vbCrLf + vbCrLf
    strTekst = strTekst + "Polisnummer: " + WFM_NR_POLIS + vbCrLf
    strTekst = strTekst + "Naam       : " + WFM_NAAM_DLNMR
    strFilename = pvTempDir + "~ESWM" + Trim(ESWMObjID) + ".txt"
    Kill strFilename
    Set ts = fs.CreateTextFile(strFilename)
    ts.Write (strTekst)
    ts.Close
'   Importeren document
    Set WI = CALClient.CreateImport("CAESAR Brief vernietigen", "MEMO", strFilename)
    Set ChildItem = CALClient.ClientList.Add(WI.objId, calAddRetain)
    Set objImport = ChildItem.Open(calOpenReadWrite)
    objImport.Save
    Set FldChild = WIViewer.CALClientListItem.OpenedItem.Children.Add(ChildItem.Info.objId, calChildLast)
    objImport.Close calCloseAbortChanges
    CALClient.ClientList.Remove ChildItem

EH:
    If Err Then
        If Err = 53 Then
            Resume Next
        Else
            DisplayError "CaesarNotitie"
        End If
    Else
        CaesarNotitie = True
    End If
    Set WI = Nothing
    Set ChildItem = Nothing
    Set objImport = Nothing
    Set FldChild = Nothing
    Set ts = Nothing
    Set fs = Nothing
End Function

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        myPolOver.Value = Right$(Space(10) & Trim(tbPolOver1), 10) & ";" _
                          & Right$(Space(10) & Trim(tbPolOver2), 10) & ";" _
                          & Right$(Space(10) + Trim(tbPolOver3), 10) & ";"
    End If
    SetCALXFormFields = True
    Exit Function

EH:
  DisplayError "SetCALXFormFields"
End Function

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappel datum"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    ' gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    lbTemplates.AddItem "PIN Kennisgeving PEN"
    lbTemplates.AddItem "PIN Opgave OVL"
    lbTemplates.AddItem "PIN Uitruil (PSW2c)"
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
    If WFM_NAAM_PARTNER_ZAAK <> Empty Then
        cmdCreateFolder.Visible = False
        lblNaamPartner.Visible = True
        WFM_NAAM_PARTNER_ZAAK.Visible = True
    End If
    If WFMrJN_NAAR_PARKERENnee.Value Then
        WFM_REDEN_PARKEREN.Enabled = False
        WFMDRAPPEL.Enabled = False
        lblRedenParkeren.Enabled = False
        lblDatum.Enabled = False
        WFMDRAPPEL = ""
        WFM_REDEN_PARKEREN = ""
    End If
    If WFM_JN_FONDS_UITK = "J" Then
        fraUITKVIA.Visible = True
    End If
    mbOrgVervBriefAang = WFMrJN_VERV_BRIEF_AANG_ja
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    Exit Sub

EH:
    DisplayError "UserForm_DblClick"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
  Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
  myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
 ESWMObjID = myESWMObjID
End Property

Private Sub WFMrJN_CAES_BRIEF_VERWnee_Click()
    If WFMrJN_CAES_BRIEF_VERWnee.Value = True Then
        mbOrgVervBriefAang = True
    End If
End Sub

Private Sub WFMrJN_NAAR_PARKEREN_ja_Click()
    WFM_REDEN_PARKEREN.Enabled = True
    WFMDRAPPEL.Enabled = True
    lblRedenParkeren.Enabled = True
    lblDatum.Enabled = True
    If mydate = "0:00:00" Then
        mydate = DateAdd("d", 31, Date)
    End If
    WFMDRAPPEL.Value = Format(mydate, "dd-mm-yyyy")
    WFM_REDEN_PARKEREN.Value = "Buitenlander"
End Sub

Private Sub WFMrJN_NAAR_PARKERENnee_Click()
    WFMDRAPPEL.Value = ""
    WFM_REDEN_PARKEREN.Value = ""
End Sub
Attribute VB_Name = "frmPENEscalatie"
Attribute VB_Base = "0{D9CE1D07-F410-4CB6-92CF-67E8349AFE28}{74306845-BC18-4059-8A53-393B18A469DA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer    As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver   As CALFormField

Private Sub cmdGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean
    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    GetCALXFormFields
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Attribute VB_Name = "frmPENInfo"
Attribute VB_Base = "0{34E02B60-57E0-4AA6-A8F2-8E0D478233D9}{FA56D540-BBD4-4A79-8968-7928A58EBE6F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer    As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver   As CALFormField

Private Sub cmdOK_Click()
    On Error GoTo EH
    Unload Me
    Exit Sub

EH:
    DisplayError "OK"
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    GetCALXFormFields
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
    WFMGetFieldYNO Me, "JN_KAPITAALUITK"
    WFMGetFieldYNO Me, "JN_KEP"
    WFMGetFieldYNO Me, "JN_PENS_VEREVENING"
    WFMGetFieldYNO Me, "JN_OPO_VERZEKERD"
    WFMGetFieldYNO Me, "JN_AFKOOP"
    WFMGetFieldYNO Me, "JN_AFKOOP_NP_BEP"
    WFMGetFieldYNO Me, "JN_PEN_PIN_WIJZ"
    WFMGetFieldYNO Me, "JN_FONDS_UITK"
    WFMGetFieldYNO Me, "JN_BUITENLANDER"
    WFMGetFieldYNO Me, "JN_UITKVIA_WIJZ"
    WFMGetFieldYNO Me, "JN_PARTN_PENS"
    WFMGetFieldYNO Me, "JN_UITRUILBAAR_NP"
    WFMGetFieldYNO Me, "JN_FLEXPENSIOEN"
    WFMGetField WIViewer, WFM_STATUS_VERZEKERDE, 4
    WFMGetField WIViewer, WFMDDAT_INGANG, 4
End Sub

Public Sub WFMGetFieldYNO(ByVal WFMForm As Object, ByVal WFMFormFieldName As String)
Dim WFMViewerField      As Field
Dim WFMViewerFieldValue
Dim ctlFormfield        As Control

    Set WFMViewerField = WFMForm.WorkitemViewer.Fields.Find(WFMFormFieldName)
    If WFMViewerField Is Nothing Then
        MsgBox WFMFormFieldName & " not found on WFM form!"
        Call InitFuncSec
        If FuncSecGroup = "SYSTEEMBEHEER" Then
        Else
            Exit Sub
        End If
    End If
    WFMViewerFieldValue = WFMViewerField.CALFormField.Value
'   Loop trhu all fields on the form and look for strFieldName fields
    For Each ctlFormfield In WFMForm.Controls
        If InStr(ctlFormfield.name, WFMFormFieldName) > 0 Then
            If Trim(ctlFormfield.ControlTipText) = "" Then
                ctlFormfield.ControlTipText = WFMViewerField.CALFormField.Info.HelpText     'put help in the tooltip
            End If
            ctlFormfield.Tag = WFMViewerField.CALFormField.Info.Prompt
            If UCase(Mid(WFMViewerFieldValue, 1, 1)) = "J" And _
                UCase(Right(ctlFormfield.name, 2)) = "JA" Then
                ctlFormfield = True
            End If
            If UCase(Mid(WFMViewerFieldValue, 1, 1)) = "N" And _
                UCase(Right(ctlFormfield.name, 3)) = "NEE" Then
                ctlFormfield = True
            End If
            If UCase(Mid(Trim(WFMViewerFieldValue), 1, 1)) = "" And _
                UCase(Right(ctlFormfield.name, 3)) = "ONB" Then
                ctlFormfield = True
            End If
        End If
    Next
End Sub

Attribute VB_Name = "frmPENcontrVoorber"
Attribute VB_Base = "0{07A6C5CC-406C-453E-B40D-56B9DFF632BD}{82D6FDC7-238E-48AA-9198-A86705334D36}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver  As CALFormField

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub imgGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

    If Init Then Exit Sub
    Init = True

    GetCALXFormFields
    StatusBar1.Panels.item("WFM_NR_POLIS").Text = "Deeln. nr.: " & WFM_NR_POLIS
    StatusBar1.Panels.item("WFM_NR_AEGAR").Text = "Aegarnr.: " & WFM_NR_AEGAR
    MultiPage1.Value = 1
    CheckOpUitzondering WIViewer, txtBijzonderheden
    If WFM_BEH_GROEP <> "" Then
        lblbeg.Visible = True
        WFM_BEH_GROEP.Visible = True
    End If
    
    If txtBijzonderheden.Text = "" Then
       MultiPage1.pages("PageUitz").Visible = False
    End If

    If WFM_InfoSent = "" Then
       MultiPage1.pages("InfoVerzoek").Visible = False
    End If
End Sub

Private Sub WFMDDAT_INGANG_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_INGANG
    WFMDDAT_INGANG.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Ingangsdatum"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub
Private Sub cmdOpslaan_Click()
Dim myIdent As String

    On Error GoTo EH
    If Not WFM_Validatie Then Exit Sub
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub

Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean
Dim newName As String

    On Error GoTo EH
    SetCALXFormFields = False
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

Private Sub WFM_STATUS_VERZEKERDE_Change()
Dim objNote As CALNote
Dim i As Integer

    If WFMLSTATUS_VERZEKERDE = "Overleden" Then
        Call WIViewer.Notes.Add(1, "_Overleden", "Reclassificeer naar OVL")
    Else
        For i = WIViewer.CALClientListItem.OpenedItem.Notes.Count To 1 Step -1
            If WIViewer.CALClientListItem.OpenedItem.Notes.item(i).name = "_Overleden" Then
               WIViewer.CALClientListItem.OpenedItem.Notes.Remove WIViewer.CALClientListItem.OpenedItem.Notes.item(i)
            End If
        Next
    End If
End Sub

Private Function WFM_Validatie() As Boolean
Dim bOk As Boolean

    WFM_Validatie = False
    If WFMrJN_VOORBER_AKKnee.Value Then
            WFM_PRIORITEIT.Value = "9"
            'show note
        bOk = createNote(WIViewer, "E")
        
        If bOk = False Then
            WFM_Validatie = False
        Else
            WFM_Validatie = True
        End If
    Else
        WFM_Validatie = True
    End If
End Function

Private Sub WFMrJN_VOORBER_AKK_ja_Click()
'   Caesar brief vernietigen toevoegen
    If WFMrJN_VERV_BRIEF_AANG_ja And WFMrJN_BRIEFMUT_OK_ja Then
        CaesarNotitie
    End If
    
Dim test As Variant

    If WFMrJN_VOORBER_AKK_ja And WFM_InfoSent <> "" Then
        If MsgBox("Deze zaak heeft een opgeslagen informatie-verzoek, wilt u dit nu versturen?", vbYesNo, "Infoverzoek versturen?") = vbYes Then
            Call NewInfo(WIViewer, "Fiat Note")
        End If
    End If
End Sub

Function CaesarNotitie() As Boolean
Dim strTekst As String
Dim strFilename As String
Dim fs As New FileSystemObject
Dim ts As TextStream
Dim WI As CALWorkitemInfo
Dim ChildItem As CALClientListItem
Dim objImport As CALImport
Dim item As CALImport
Dim FldChild As CALFolderChild
Dim lngShell As Long
Dim i As Integer

    On Error GoTo EH
    CaesarNotitie = False
    If Not WIViewer.CALClientListItem.OpenedItem.Children.ImportItems.Count = 0 Then
        For i = WIViewer.CALClientListItem.OpenedItem.Children.ImportItems.Count To 1 Step -1
                If UCase(WIViewer.CALClientListItem.OpenedItem.Children.ImportItems.item(i).Info.name) = "CAESAR BRIEF VERNIETIGEN" Then
                    CaesarNotitie = True
                    Exit Function
                End If
        Next
   End If
    
    strTekst = "CAESAR BRIEF VERNIETIGEN" + vbCrLf + vbCrLf
    strTekst = strTekst + "Polisnummer: " + WFM_NR_POLIS + vbCrLf
    strTekst = strTekst + "Naam       : " + WFM_NAAM_DLNMR

    strFilename = pvTempDir + "~ESWM" + Trim(ESWMObjID) + ".txt"
    Kill strFilename

    Set ts = fs.CreateTextFile(strFilename)
    ts.Write (strTekst)
    ts.Close

    'Importeren document
    Set WI = CALClient.CreateImport("CAESAR Brief vernietigen", "MEMO", strFilename)
    Set ChildItem = CALClient.ClientList.Add(WI.objId, calAddRetain)
    Set objImport = ChildItem.Open(calOpenReadWrite)
    objImport.Save

    Set FldChild = WIViewer.CALClientListItem.OpenedItem.Children.Add(ChildItem.Info.objId, calChildLast)
    objImport.Close calCloseAbortChanges
    CALClient.ClientList.Remove ChildItem

EH:
    If Err Then
        If Err = 53 Then
            Resume Next
        Else
            DisplayError "CaesarNotitie"
        End If
    Else
        CaesarNotitie = True
    End If

    Set WI = Nothing
    Set ChildItem = Nothing
    Set objImport = Nothing
    Set FldChild = Nothing
    Set ts = Nothing
    Set fs = Nothing
End Function
Attribute VB_Name = "frmPENverzbrief"
Attribute VB_Base = "0{D4DD5EB7-C433-4CB0-B912-08A9FDEB40D8}{37BDD39A-40B2-42B8-8A65-B22DBAD69EEA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver  As CALFormField
Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub


Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)

Exit Sub

EH:
    DisplayError "Annuleren"
End Sub
Private Sub cmdOpslaan_Click()
Dim myIdent As String

On Error GoTo EH


    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)

Exit Sub

EH:
    DisplayError "Doorsturen"

End Sub






Attribute VB_Name = "frmPENvoorbereiden"
Attribute VB_Base = "0{68FCCFE9-E266-4DCF-85C2-EB9EC946B082}{11D8C1BF-A829-45FA-8CB3-AEE15D175DC2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim myForm      As Object
Dim WIViewer    As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver   As CALFormField

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub imgGBA_Click()
    On Error GoTo EH
    Set frmExcSelecteerBegunst.WorkitemViewer = WIViewer
    frmExcSelecteerBegunst.Show 1
    WFMGetField WIViewer, WFMCJN_X_AANM, 4
    Me.Repaint
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
'   Gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

    If WFMLSTATUS_VERZEKERDE.Value = "In Leven" Then
        WFMLSTATUS_VERZEKERDE.Value = "In leven"
    End If
    If Init Then Exit Sub
    Init = True

    lbTemplates.AddItem "PIN Kennisgeving PEN"
    lbTemplates.AddItem "PIN Opgave OVL"
    lbTemplates.AddItem "PIN Uitruil (PSW2c)"
    GetCALXFormFields
    StatusBar1.Panels.item("WFM_NR_POLIS").Text = "Deeln. nr.: " & WFM_NR_POLIS
    StatusBar1.Panels.item("WFM_NR_AEGAR").Text = "Aegarnr.: " & WFM_NR_AEGAR
    MultiPage1.Value = 1
    CheckOpUitzondering WIViewer, txtBijzonderheden
    If WFM_BEH_GROEP <> "" Then
        lblbeg.Visible = True
        WFM_BEH_GROEP.Visible = True
    End If
    If WFM_JN_VOORBER_AKK = "N" Then
        Set frmNotitie.rsViewer = WIViewer
        frmNotitie.Show 1
    End If
    If WFMrJN_NAAR_PARKERENnee.Value Then
        WFM_REDEN_PARKEREN.Enabled = False
        WFMDRAPPEL.Enabled = False
        lblRedenParkeren.Enabled = False
        lblDatum.Enabled = False
        WFMDRAPPEL = ""
        WFM_REDEN_PARKEREN = ""
    End If
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    MultiPage1.pages("InfoVerzoek").Visible = False
    If txtBijzonderheden.Text = "" Then
        MultiPage1.pages("PageUitz").Visible = False
    End If
End Sub

Private Sub WFMDDAT_INGANG_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_INGANG
    WFMDDAT_INGANG.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Ingangsdatum"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myIdent As String

    On Error GoTo EH
    If WFMDDAT_INGANG = "" Then
        MsgBox "Ingangsdatum niet ingevuld."
        MultiPage1.Value = 0
        WFMDDAT_INGANG.SetFocus
        Exit Sub
    End If
    DateCheck WFMDDAT_INGANG
    DateCheck WFMDRAPPEL
    If Not WFM_Validatie Then Exit Sub
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub

Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Function SetCALXFormFields() As Boolean
Dim newName     As String

    On Error GoTo EH
    SetCALXFormFields = False
    If WFMrJN_VOORBER_GEREED_ja Then
'       Als KAP of KEP dan IND_TRIGGER aanpassen, OORSPR_KENMERK vullen en naam wijzigen
        If WFMrJN_KAPITAALUITK_ja.Value = True Then
            WIViewer.Fields.Find("IND_TRIGGER").CALFormField.Value = "KAP"
            newName = WFM_NR_POLIS & "KAP" & WIViewer.Fields.Find("ZK_VOLGNR").CALFormField.Value
            WIViewer.Fields.Find("ZAAK_IDENT_NR").CALFormField.Value = newName
            WIViewer.CALClientListItem.OpenedItem.SetName (newName)
        End If
        If WFMrJN_KEP_ja.Value = True Then
            WIViewer.Fields.Find("IND_TRIGGER").CALFormField.Value = "KEP"
            newName = WFM_NR_POLIS & "KEP" & WIViewer.Fields.Find("ZK_VOLGNR").CALFormField.Value
            WIViewer.Fields.Find("ZAAK_IDENT_NR").CALFormField.Value = newName
            WIViewer.CALClientListItem.OpenedItem.SetName (newName)
        End If
    End If
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

Private Sub WFM_STATUS_VERZEKERDE_Change()
Dim objNote     As CALNote
Dim i           As Integer

    If WFMLSTATUS_VERZEKERDE = "Overleden" Then
        Call WIViewer.Notes.Add(1, "_Overleden", "Reclassificeer naar OVL")
    Else
        For i = WIViewer.CALClientListItem.OpenedItem.Notes.Count To 1 Step -1
            If WIViewer.CALClientListItem.OpenedItem.Notes.item(i).name = "_Overleden" Then
                WIViewer.CALClientListItem.OpenedItem.Notes.Remove WIViewer.CALClientListItem.OpenedItem.Notes.item(i)
            End If
        Next
    End If
End Sub

Private Function WFM_Validatie() As Boolean
    WFM_Validatie = False
    WFM_Validatie = True
End Function

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappel datum"
End Sub

Private Sub WFMrJN_KAPITAALUITK_ja_Click()
    WFMrJN_KEPnee = True
End Sub

Private Sub WFMrJN_KEP_ja_Click()
    WFMrJN_KAPITAALUITKnee = True
End Sub

Private Sub WFMrJN_NAAR_PARKEREN_ja_Click()
    WFM_REDEN_PARKEREN.Enabled = True
    WFMDRAPPEL.Enabled = True
    lblRedenParkeren.Enabled = True
    lblDatum.Enabled = True
End Sub

Private Sub WFMrJN_NAAR_PARKERENnee_Click()
    WFM_REDEN_PARKEREN.Enabled = False
    WFMDRAPPEL.Enabled = False
    lblRedenParkeren.Enabled = False
    lblDatum.Enabled = False
    WFMDRAPPEL = ""
    WFM_REDEN_PARKEREN = ""
End Sub
Attribute VB_Name = "frmParkeren"
Attribute VB_Base = "0{B9684028-51C6-4B40-8609-646FDAEF6204}{2FBCF973-5621-48BF-9284-F3BB1E2D18CF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer    As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String

Private Sub cmdGBA_Click()
    On Error GoTo EH
    Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
    frmExcGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub cmdInfo_Click()
    On Error GoTo EH
    Select Case WFM_IND_TRIGGER
        Case "PEN"
             Set frmPENInfo.WorkitemViewer = WIViewer
             frmPENInfo.Tag = "1"
             frmPENInfo.Show 1
        Case "OVL"
             Set frm_OVLBeoordelen.WorkitemViewer = WIViewer
             frm_OVLBeoordelen.ESWMObjID = WIViewer.CALClientListItem.Info.objId.InternalName
             GetFields WIViewer, frm_OVLBeoordelen
             frm_OVLBeoordelen.Show 0
    End Select
    Exit Sub

EH:
    DisplayError WFM_IND_TRIGGER & "PEN info"
End Sub

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappel datum"
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myQueue As New CALQueue

    On Error GoTo EH
    DateCheck WFMDRAPPEL
    If rb_antwoord_info_JA = True Then
'       Dit in een aparte procedure met naam meegeven
        Call VerplaatsenVanuitParkeerstap(WIViewer, WFM_WORKSTEP_NAAM.Value)
        Exit Sub
    End If
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub UserForm_Activate()
Static Init         As Boolean
Dim strWorkstep     As String
Dim strTipText      As String

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True

'   Parkeerformulier wordt in verschillende stappen gebruikt.
'   In iedere stap geldt een andere helptekst.
    strWorkstep = GetWorkstep(WIViewer)
    Select Case Left(strWorkstep, 5)
        Case "98A04"
             cmdInfo.Visible = False
        Case "98A22"
             Me.HelpContextID = 13150
             strTipText = "Terug naar beoordelen onvindbaar"
        Case "98A31"
             Me.HelpContextID = 12690
             strTipText = "Terug naar afhandelen"
        Case "98A52"
             Me.HelpContextID = 0    'Mabr
             strTipText = "Terug naar Behandelen"
        Case "98A55"
             Me.HelpContextID = 0   'Mabr
             strTipText = "Terug naar Bewaken"
        Case "98D12"
             Me.HelpContextID = 12030
             strTipText = "Terug naar beoordelen DVL"
        Case "98O12"
             Me.HelpContextID = 12030
             strTipText = "Terug naar beoordelen OVL"
             cmdGBA.Visible = False
        Case "98P08"
             Me.HelpContextID = 10151
             strTipText = "Terug naar voorbereiden PEN"
        Case "98W06"
             Me.HelpContextID = 12720
             strTipText = "Terug naar afhandelen wees"
    End Select
    lblTerug.ControlTipText = strTipText
    WFMrJN_NAAR_PARKEREN_ja.ControlTipText = strTipText
    WFMrJN_NAAR_PARKERENnee.ControlTipText = strTipText
    If WFM_IND_TRIGGER = "WZP" Then cmdInfo.Visible = False
    If WFM_IND_TRIGGER = "AOV" Then
        cmdInfo.Visible = False
        cmdGBA.Visible = False
    End If
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    Exit Sub

EH:
    DisplayError "UserForm_DblClick"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
  Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
  myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
 ESWMObjID = myESWMObjID
End Property
Attribute VB_Name = "frmQuery"
Attribute VB_Base = "0{88640B0F-3B00-404F-AA5C-596C8E9DD0B0}{2A17F5A8-C700-4090-965B-07FFEE1D8C68}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim mobjQueryResults    As CALQueryResults
Dim ExtraInfo2ResultListMapping As New Collection
Dim colUitvullen        As New Collection
Dim myWorkStepColumn    As Integer
Dim myQueryResultRecordColumn   As Integer
Dim bUitvullen          As Boolean
Dim bVanafDatum         As Boolean
Dim bTotDatum           As Boolean
Dim childForm           As Object
Dim kenmerkList         As New Collection
Dim myExcluded          As New Collection
Dim myRemaining         As New Collection
Dim isExcluded          As Boolean

Const vbDefault = 0
Const vbHourglass = 11

Public Function getKenmerkList() As Collection
    Set getKenmerkList = kenmerkList
End Function

Public Function setExcluded(excluded As Collection)
    Set myExcluded = excluded
End Function
Public Function getExcluded() As Collection
    Set getExcluded = myExcluded
End Function

Public Function setRemaining(remaining As Collection)
    Set myRemaining = remaining
End Function
Public Function getRemaining() As Collection
    Set getRemaining = myRemaining
End Function

Public Function setIsExcluded(excluded As Boolean)
    isExcluded = excluded
End Function
Public Function getIsExcluded() As Boolean
    getIsExcluded = isExcluded
End Function

Private Function EenofMeerSelectedItems() As Integer
Dim i                   As Integer

    On Error GoTo EH
    EenofMeerSelectedItems = 0
    For i = 1 To ListView1.ListItems.Count
        If ListView1.ListItems.item(i).Selected Then
            EenofMeerSelectedItems = EenofMeerSelectedItems + 1
            If EenofMeerSelectedItems = 2 Then Exit Function
        End If
    Next
    Exit Function

EH:
    DisplayError "WFMSaveButton"
End Function

Private Sub cbUitvullen_Click()
    bUitvullen = cbUitvullen.Value
    If bUitvullen Then
        SetRegistryKey "Kodak", "Workdesk\3.2\UITVULLEN", "bUitvullen", "true"
    Else
        SetRegistryKey "Kodak", "Workdesk\3.2\UITVULLEN", "bUitvullen", "False"
    End If
End Sub

Private Sub cmdStatus_Click()
Dim nIndex              As Integer
Dim FindListItems       As CALWorkitemWorkstepList
Dim strMsg              As String
Dim i                   As Integer
Dim j                   As Integer
Dim strDescription      As String

    On Error GoTo EH
    For i = 1 To ListView1.ListItems.Count
        If (ListView1.ListItems.item(i).Selected = True) Then
            nIndex = Me.ListView1.ListItems.item(i).ListSubItems(myQueryResultRecordColumn)
            If mobjQueryResults.item(nIndex).Info.ServerName <> "ARCHIVE" Then
                Set FindListItems = CALClient.FindInWorkflow(mobjQueryResults.item(nIndex).Info.objId)
                If FindListItems.Count = 0 Then
                    MsgBox "Item " & mobjQueryResults.item(nIndex).Info.name & " komt niet voor in een inbox.", vbApplicationModal + vbInformation + vbOKOnly
                Else
                    strMsg = "Dossier/document " & mobjQueryResults.item(nIndex).Info.name & " is aanwezig in de werkstap(pen):"
                    For j = 1 To FindListItems.Count
'                       MaBr de omschrijving erbij
                        strDescription = GetXMLDescription(FindListItems.item(j).Info.SourceWorkstep)
                        strMsg = strMsg + vbCrLf + vbTab + vbTab + FindListItems.item(j).Info.SourceWorkstep
                        strMsg = strMsg + vbCrLf + "Omschrijving: " + vbTab + strDescription
                        If Left(FindListItems.item(j).Info.SourceWorkstep, 2) = "33" Then
                            strMsg = strMsg + vbCrLf + "Afdeling: " + vbTab + vbTab + FindListItems.item(j).ExtraInfo.item(71).Value + "  " + FindListItems.item(j).ExtraInfo.item(72).Value
                            strMsg = strMsg + vbCrLf + "Behandelaar: " + vbTab + FindListItems.item(j).ExtraInfo.item(64).Value
                        End If
                    Next
                    MsgBox strMsg, vbApplicationModal + vbInformation + vbOKOnly
                End If
            Else
                MsgBox "Dit workitem is verplaatst naar de andere business unit", vbApplicationModal + vbInformation + vbOKOnly
            End If
        End If
    Next i
    Exit Sub

EH:
    DisplayError "WFMSaveButton"
End Sub

Private Sub cmdUitsluiten_Click()
    Set frmQueryUitsluiten.ParentForm = Me
    frmQueryUitsluiten.Show 1
End Sub

Private Sub cmdVerberg_Click()
    Me.Hide
End Sub

Private Sub EnableRetrieve()
    On Error GoTo EH
    cmdRetrieve.Enabled = False
    cmdStatus.Enabled = False
    If Not Me.ListView1.SelectedItem Is Nothing Then
        If Me.ListView1.SelectedItem.Index > 0 Then
            cmdRetrieve.Enabled = True
            cmdStatus.Enabled = True
        End If
    End If
    Exit Sub

EH:
    DisplayError "EnableRetrieve"
End Sub

Private Sub QRYTextBox3_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
Dim WithWildCards       As String

    On Error Resume Next
    Cancel = False
'   Als er wildcards zijn gebruikt geen voorloop nullen plaatsen
    WithWildCards = Replace(QRYTextBox3, "%", "")
    WithWildCards = Replace(WithWildCards, "*", "")
    If WithWildCards = QRYTextBox3 Then ' geen wildcards gebruikt
        QRYTextBox3 = Format(Val(QRYTextBox3), "#########")
        If QRYTextBox3 <> Empty And Val(QRYTextBox3) <> 0 Then _
            QRYTextBox3 = Format(Val(QRYTextBox3), "000000000")
    End If
End Sub

Private Sub QRYTextBox9_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck QRYTextBox9
    QRYTextBox9.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum vanaf"
End Sub

Private Sub QRYTextBox10_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck QRYTextBox10
    QRYTextBox10.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum tot en met"
End Sub

Public Function enableKenmerk(enable As Boolean)
Dim excludes            As String
Dim i                   As Integer

    Me.QRYTextBox6.Enabled = enable
    If enable Then
        Me.QRYTextBox6.BackColor = &H8000000E
        Me.UitslKenmerk.Caption = ""
        Me.QRYTextBox21.Visible = True
        Me.QRYLabel21.Visible = True
        Me.VolgnrLabel.Visible = True
        Me.UitslKenmerk.Visible = False
    Else
        For i = 1 To myExcluded.Count
            excludes = excludes & " " & myExcluded.item(i)
        Next i
        Me.UitslKenmerk.Caption = "Uitgesloten kenmerken: " & excludes
        Me.QRYTextBox6.BackColor = &H80000013
        Me.QRYTextBox21.Visible = False
        Me.QRYTextBox21.Value = ""
        Me.QRYLabel21.Visible = False
        Me.VolgnrLabel.Visible = False
        Me.UitslKenmerk.Visible = True
    End If
End Function

Private Sub UserForm_Initialize()
Static Init             As Boolean
Dim colResultfields     As Collection
Dim vResultfield        As Variant
Dim strCaption          As String
Dim intWidth            As Integer
Dim bResultOnly         As Boolean
Dim intPosition         As Integer
Dim intCount            As Integer

    On Error GoTo EH
'   For development
    InitWorkdesk
    isExcluded = False
    If Init Then Exit Sub
    Init = True
    ListView1.MultiSelect = True
    txtMaxMatches = 100
    optFolder.Value = True
    cmdFind.Default = True
    NewSearch
    Me.ListView1.ColumnHeaders.Add , "A", "A", 0, 0 ', Alignment:=1
    CheckRegistryColumnsExists
'   Read the column settings from the registry and add the columnheaders
    Set colResultfields = GetAllKeys("Software\Kodak\Workdesk\3.2\Queryform")
    For intCount = 1 To colResultfields.Count - 1
        ListView1.ColumnHeaders.Add , "Item" & intCount, "", 0, 0, 0
    Next
    For Each vResultfield In colResultfields
        strCaption = GetRegistryKey("Kodak", "Workdesk\3.2\Queryform\" & vResultfield, "Caption")
        intWidth = CInt(GetRegistryKey("Kodak", "Workdesk\3.2\Queryform\" & vResultfield, "Width"))
        bResultOnly = CBool(GetRegistryKey("Kodak", "Workdesk\3.2\Queryform\" & vResultfield, "Resultonly"))
        intPosition = CInt(GetRegistryKey("Kodak", "Workdesk\3.2\Queryform\" & vResultfield, "Position"))
        ListView1.ColumnHeaders(intPosition).Key = vResultfield
        ListView1.ColumnHeaders(intPosition).Text = strCaption
        ListView1.ColumnHeaders(intPosition).Width = intWidth
        ListView1.ColumnHeaders(intPosition).Tag = bResultOnly
    Next
    bUitvullen = CBool(GetRegistryKey("Kodak", "Workdesk\3.2\UITVULLEN", "bUitvullen"))
    cbUitvullen = bUitvullen
    AddResultField "QUERYRESULTRECORD", "Query result record", 0, 0, False
    myQueryResultRecordColumn = colResultfields.Count
    Me.ListView1.Refresh
    DefQryField 1, "NR_POLIS", "Deeln. nr.", 10, "Deelnemer nummer"
    DefQryField 2, "NAAM_DLNMR", "Deeln. naam", 34, "Naam Deelnemer"
    DefQryField 3, "NR_AEGAR", "Aegarnr.", 9, "Aegarnummer"
    DefQryField 4, "NR_KLANT", "Klantnr", 6, "Klantnummer"
    DefQryField 5, "NAAM_KLANT", "Naam Klant", 34, "Klantnaam"
    DefQryField 6, "IND_TRIGGER", "Zaak Kenmerk", 3, "Altijd in combinatie met een ander zoekcriteria!"
    DefQryField 7, "IND_HUPO", "Hupo RB", 12, "Hupo Relatiebeheerder"
    DefQryField 8, "ZAAK_VLGNR_MEMO", "Zaak memo", 50, "Zaak memo"
    DefQryField 9, "DAT_DOC", "Datum  vanaf", 12, "Datum document (dd-mm-eejj)"
    DefQryField 10, "DAT_DOC", "tot en met", 12, "Datum document (dd-mm-eejj)"
    DefQryField 11, "NR_TP", "TP nummer", 6, "TP nummer"
    DefQryField 12, "NAAM_TP", "TP naam ", 34, "TP naam"
    DefQryField 13, "WERKSOORT", "Werksoort", 34, "Werksoort"
    DefQryField 14, "WERKTYPE", "Werktype ", 34, "Werktype"
    DefQryField 15, "NR_BEGUNSTIGDE", "Begunstigde nr. VOR", 7, "Begunstigde Nr Vorderingen"
    DefQryField 16, "BSN_DLNMR", "BSN nr.Deeln.", 9, "BSNnummer Deelnemer"
    DefQryField 17, "GEB_DEELN", "Deeln. geb. Datum", 10, "Geboortedatum Deelnemer"
    DefQryField 18, "NR_PF", "PF nummer", 6, "PF nummer"
    DefQryField 19, "NAAM_PF", "PF naam", 34, "PF naam"
    DefQryField 20, "collectiviteitstruc", "Collectiviteit nr. VOR", 5, "Collectiviteit Nr Vorderingen" ' WO okt 2008 TD 124439 VOR 13
    DefQryField 21, "ZK_VOLGNR", "Volgnr", 4, "Volgnr"

    kenmerkList.Add "AAN"
    kenmerkList.Add "ABP"
    kenmerkList.Add "ACT"
    kenmerkList.Add "AFD"       'Afkoop bij Dienstverlating
    kenmerkList.Add "AFE"       'Afkoop bij Dienstverlating
    kenmerkList.Add "AFK"
    kenmerkList.Add "AHC"
    kenmerkList.Add "AOV"
    kenmerkList.Add "ARC"
    kenmerkList.Add "BOP"
    kenmerkList.Add "BWO"
    kenmerkList.Add "DEB"
    kenmerkList.Add "DIV"
    kenmerkList.Add "DLN"
    kenmerkList.Add "ECH"
    kenmerkList.Add "EXP"
    kenmerkList.Add "FVP"
    kenmerkList.Add "IND"
    kenmerkList.Add "INF"
    kenmerkList.Add "JWK"
    kenmerkList.Add "KAP"
    kenmerkList.Add "KEP"
    kenmerkList.Add "KJW"
    kenmerkList.Add "KLA"
    kenmerkList.Add "KLT"
    kenmerkList.Add "KPE"
    kenmerkList.Add "KPO"
    kenmerkList.Add "NWD"
    kenmerkList.Add "OVL"
    kenmerkList.Add "PEN"
    kenmerkList.Add "PIN"
    kenmerkList.Add "PPO"
    kenmerkList.Add "PPC"
    kenmerkList.Add "PVI"
    kenmerkList.Add "PVP"
    kenmerkList.Add "OVR"
    kenmerkList.Add "ROY"
    kenmerkList.Add "SIG"
    kenmerkList.Add "UPO"
    kenmerkList.Add "UWO"
    kenmerkList.Add "VOR"
    kenmerkList.Add "WYZ"
    kenmerkList.Add "WZP"
    kenmerkList.Add "XXX"

Dim x                   As Integer

    QRYTextBox6.AddItem ""
    For x = 1 To kenmerkList.Count
        QRYTextBox6.AddItem kenmerkList(x)
    Next x
    Exit Sub

EH:
    DisplayError "Userform initialize frmQuery"
End Sub

Private Sub CheckRegistryColumnsExists()
'   Set the default values for the columns if they're not in the registry yet
    If Not RegistryKeyExists("Software\Kodak\Workdesk\3.2\Queryform\ZAAK_IDENT_NR") Then
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\ZAAK_IDENT_NR", "Caption", "ZaakId"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\ZAAK_IDENT_NR", "Position", "1"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\ZAAK_IDENT_NR", "Width", "75"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\ZAAK_IDENT_NR", "ResultOnly", "True"
    End If
    If Not RegistryKeyExists("Software\Kodak\Workdesk\3.2\Queryform\OBJECT_NAME") Then
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\OBJECT_NAME", "Caption", "Naam"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\OBJECT_NAME", "Position", "2"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\OBJECT_NAME", "Width", "75"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\OBJECT_NAME", "ResultOnly", "True"
    End If
    If Not RegistryKeyExists("Software\Kodak\Workdesk\3.2\Queryform\NAAM_DLNMR") Then
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NAAM_DLNMR", "Caption", "Naam deeln."
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NAAM_DLNMR", "Position", "3"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NAAM_DLNMR", "Width", "100"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NAAM_DLNMR", "ResultOnly", "False"
    End If
    If Not RegistryKeyExists("Software\Kodak\Workdesk\3.2\Queryform\NR_AEGAR") Then
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NR_AEGAR", "Caption", "Aegarnr."
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NR_AEGAR", "Position", "4"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NR_AEGAR", "Width", "75"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NR_AEGAR", "ResultOnly", "False"
    End If
    If Not RegistryKeyExists("Software\Kodak\Workdesk\3.2\Queryform\NAAM_PARTNER_ZAAK") Then
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NAAM_PARTNER_ZAAK", "Caption", "Naam partner"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NAAM_PARTNER_ZAAK", "Position", "5"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NAAM_PARTNER_ZAAK", "Width", "100"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NAAM_PARTNER_ZAAK", "ResultOnly", "True"
    End If
    If Not RegistryKeyExists("Software\Kodak\Workdesk\3.2\Queryform\IND_HUPO") Then
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\IND_HUPO", "Caption", "Hupo CM"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\IND_HUPO", "Position", "6"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\IND_HUPO", "Width", "70"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\IND_HUPO", "ResultOnly", "False"
    End If
    If Not RegistryKeyExists("Software\Kodak\Workdesk\3.2\Queryform\NAAM_KLANT") Then
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NAAM_KLANT", "Caption", "Naam klant"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NAAM_KLANT", "Position", "7"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NAAM_KLANT", "Width", "100"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NAAM_KLANT", "ResultOnly", "False"
    End If
    If Not RegistryKeyExists("Software\Kodak\Workdesk\3.2\Queryform\NR_KLANT") Then
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NR_KLANT", "Caption", "Klantnr."
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NR_KLANT", "Position", "8"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NR_KLANT", "Width", "40"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NR_KLANT", "ResultOnly", "False"
    End If
    If Not RegistryKeyExists("Software\Kodak\Workdesk\3.2\Queryform\ZAAK_VLGNR_MEMO") Then
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\ZAAK_VLGNR_MEMO", "Caption", "Zaak memo"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\ZAAK_VLGNR_MEMO", "Position", "9"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\ZAAK_VLGNR_MEMO", "Width", "100"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\ZAAK_VLGNR_MEMO", "ResultOnly", "False"
    End If
    If Not RegistryKeyExists("Software\Kodak\Workdesk\3.2\Queryform\DAT_DOC") Then
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\DAT_DOC", "Caption", "Datum (eerste) document"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\DAT_DOC", "Position", "10"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\DAT_DOC", "Width", "100"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\DAT_DOC", "ResultOnly", "True"
    End If
        If Not RegistryKeyExists("Software\Kodak\Workdesk\3.2\Queryform\NR_TP") Then
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NR_TP", "Caption", "TP nr"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NR_TP", "Position", "11"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NR_TP", "Width", "40"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NR_TP", "ResultOnly", "True"
    End If
        If Not RegistryKeyExists("Software\Kodak\Workdesk\3.2\Queryform\NAAM_TP") Then
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NAAM_TP", "Caption", "TP naam"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NAAM_TP", "Position", "12"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NAAM_TP", "Width", "100"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\NAAM_TP", "ResultOnly", "True"
    End If
    If Not RegistryKeyExists("Software\Kodak\Workdesk\3.2\Queryform\WERKSOORT") Then
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\WERKSOORT", "Caption", "Werksoort"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\WERKSOORT", "Position", "13"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\WERKSOORT", "Width", "100"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\WERKSOORT", "ResultOnly", "True"
    End If
    If Not RegistryKeyExists("Software\Kodak\Workdesk\3.2\Queryform\WERKTYPE") Then
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\WERKTYPE", "Caption", "Werktype"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\WERKTYPE", "Position", "14"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\WERKTYPE", "Width", "100"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\WERKTYPE", "ResultOnly", "True"
    End If
    If Not RegistryKeyExists("Software\Kodak\Workdesk\3.2\Queryform\WF_STEP") Then
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\WF_STEP", "Caption", "WF step"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\WF_STEP", "Position", "15"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\WF_STEP", "Width", "100"
        SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\WF_STEP", "ResultOnly", "True"
    End If
    If Not RegistryKeyExists("Software\Kodak\Workdesk\3.2\UITVULLEN") Then
        SetRegistryKey "Kodak", "Workdesk\3.2\UITVULLEN", "bUitvullen", "True"
    End If
End Sub

Private Sub AddResultField(name, Caption, Witdh, Align, ResultOnly As Boolean)
Dim myColHeader         As ColumnHeader

    On Error GoTo EH
    Set myColHeader = Me.ListView1.ColumnHeaders.Add(, name, Caption, Witdh, Align)
    myColHeader.Tag = ResultOnly
    Exit Sub

EH:
    DisplayError "AddResultField: " + name
End Sub

Private Sub DefQryField(No, name, Caption, MaxLen, TipText)
'Sub to define the custom fields
Dim ctlControl          As Control
Dim ctlTextBox          As Variant

    On Error GoTo EH
    For Each ctlControl In Me.Controls
        If Left(ctlControl.name, 10) = "QRYTextBox" Then
            Set ctlTextBox = ctlControl
            If Val(Mid(ctlTextBox.name, 11)) = No Then
                ctlTextBox.Tag = name
                ctlTextBox.MaxLength = MaxLen
                ctlTextBox.ControlTipText = TipText
                ctlTextBox.Enabled = True
                ctlTextBox.Visible = True
           End If
        End If
        If Left(ctlControl.name, 8) = "QRYLabel" Then
           If Val(Mid(ctlControl.name, 9)) = No Then
                ctlControl = Caption
                ctlControl.ControlTipText = TipText
                ctlControl.Enabled = True
                ctlControl.Visible = True
           End If
        End If
    Next
    Exit Sub

EH:
    DisplayError "DefQryField: " + name
End Sub

Public Sub cmdFind_Click()
Dim strZAAK_IDENT_NR    As String ' WO 12-01-2009 TD 123871 zoeken op ZAAK_IDENT_NR (TIP, om de werking te begrijpen: zoek op "strZAAK_IDENT_NR")

    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    If QRYTextBox6 <> "" And AantalCriteria = 1 Then
        MsgBox "Op 'zaak kenmerk' kan alleen gezocht worden in combinatie met mininaal 1 extra zoekcriteria."
        GoTo EH
    End If
    If AantalCriteria = 0 Then
        MsgBox "Vul minimaal 1 zoekcriteria in."
        GoTo EH
    End If
'   WO 12-01-2009 TD 123871 detecteren dat er op ZAAK_IDENT_NR gezocht gaat worden
    If Me.QRYTextBox6.Value <> "" And Me.QRYTextBox21.Value <> "" Then
        If Me.QRYTextBox1.Value <> "" Then
            strZAAK_IDENT_NR = Me.QRYTextBox1.Value    ' NR_POLIS
        ElseIf Me.QRYTextBox4.Value <> "" Then
            strZAAK_IDENT_NR = Me.QRYTextBox4.Value    ' NR_KLANT
        ElseIf Me.QRYTextBox11.Value <> "" Then
            strZAAK_IDENT_NR = Me.QRYTextBox11.Value   ' NR_TP
        End If
    End If
    If strZAAK_IDENT_NR <> "" Then
        strZAAK_IDENT_NR = strZAAK_IDENT_NR & Me.QRYTextBox6.Value & Me.QRYTextBox21.Value
    Else
        DateCheck QRYTextBox9
        DateCheck QRYTextBox10
    End If
    
    ListView1.Refresh
'   Execute the query
    Set mobjQueryResults = RunQuery(strZAAK_IDENT_NR)
'   Load the results into a listbox
    LoadResults
    PutresultsAbove

EH:
    MousePointer = fmMousePointerDefault
    If Err Then DisplayError "Zoek"
End Sub

Private Sub PutresultsAbove()
Dim EInfiItem
Dim i, j

    On Error GoTo EH
    If ListView1.ListItems.Count = 0 Then Exit Sub
    If bUitvullen Then
'       EInfiItem = ExtraInfo2ResultListMapping.item(1)
        For i = 1 To ListView1.ListItems.Count
            If (ListView1.ListItems.item(i).Selected = True) Then
            Exit For
            End If
        Next i

'       er zit een resultlistmapping in met een tabel
'       ik moet deze andersom benaderen of een nieuwe maken...
'       geinig verhaal...
'       eerst de eerste
        Select Case Me.ListView1.ColumnHeaders.item(1).Key
            Case "NAAM_DLNMR"
                 QRYTextBox2 = Me.ListView1.ListItems.item(i)
            Case "NR_AEGAR"
                 QRYTextBox3 = Me.ListView1.ListItems.item(i)
            Case "NR_KLANT"
                 QRYTextBox4 = Me.ListView1.ListItems.item(i)
            Case "NAAM_KLANT"
                 QRYTextBox5 = Me.ListView1.ListItems.item(i)
            Case "IND_HUPO"
                 QRYTextBox7 = Me.ListView1.ListItems.item(i)
            Case "ZAAK_VLGNR_MEMO"
                 QRYTextBox8.Text = Me.ListView1.ListItems.item(i)
            Case "NR_TP"
                 QRYTextBox11 = Me.ListView1.ListItems.item(i)
            Case "NAAM_TP"
                 QRYTextBox12 = Me.ListView1.ListItems.item(i)
            Case "ZAAK_IDENT_NR"
                 If InStr((Me.ListView1.ListItems.item(i)), "VOR") > 0 Then
                    QRYTextBox15 = Mid((Me.ListView1.ListItems.item(i)), 4, 7)
                 Else
                    QRYTextBox1 = Left(Me.ListView1.ListItems.item(i), 10)
                 End If
            Case "WERKSOORT"
                 QRYTextBox13 = Me.ListView1.ListItems.item(i)
            Case "WERKTYPE"
                 QRYTextBox14 = Me.ListView1.ListItems.item(i)
        End Select

'       vervolgens de rest zoeken en plaatsen
        For j = 2 To 14
            Select Case Me.ListView1.ColumnHeaders.item(j).Key
                Case "OBJECT_NAME"
                     If Not optDocument Then        'Docs hebben een iets andere naam
                        If InStr((Me.ListView1.ListItems.item(i)), "VOR") = 0 Then
                            If Len(Me.ListView1.ListItems.item(i).SubItems(j - 1)) > 10 Then
                                QRYTextBox1 = Left(Me.ListView1.ListItems.item(i).SubItems(j - 1), 10)
                            Else
                                QRYTextBox1 = Left(Me.ListView1.ListItems.item(i).SubItems(j - 1), 6)
                            End If
                        End If
                     End If
                Case "ZAAK_IDENT_NR"
                     If optDocument Then            'Polis nummer van een doc ???
                        QRYTextBox1 = Left(Me.ListView1.ListItems.item(i).SubItems(j - 1), 10)
                     End If
                Case "NAAM_DLNMR"
                     QRYTextBox2 = Me.ListView1.ListItems.item(i).SubItems(j - 1)
                Case "NR_AEGAR"
                     QRYTextBox3 = Me.ListView1.ListItems.item(i).SubItems(j - 1)
                Case "NR_KLANT"
                     QRYTextBox4 = Me.ListView1.ListItems.item(i).SubItems(j - 1)
                Case "NAAM_KLANT"
                     QRYTextBox5 = Me.ListView1.ListItems.item(i).SubItems(j - 1)
                Case "IND_HUPO"
                     QRYTextBox7 = Me.ListView1.ListItems.item(i).SubItems(j - 1)
                Case "ZAAK_VLGNR_MEMO"
                     QRYTextBox8.Text = Me.ListView1.ListItems.item(i).SubItems(j - 1)
                Case "NR_TP"
                     QRYTextBox11 = Me.ListView1.ListItems.item(i).SubItems(j - 1)
                Case "NAAM_TP"
                     QRYTextBox12 = Me.ListView1.ListItems.item(i).SubItems(j - 1)
                Case "WERKSOORT"
                     QRYTextBox13 = Me.ListView1.ListItems.item(i).SubItems(j - 1)
                Case "WERKTYPE"
                     QRYTextBox14 = Me.ListView1.ListItems.item(i).SubItems(j - 1)
            End Select
        Next
    End If
    Exit Sub

EH:
    If Err Then DisplayError "Zoek"
End Sub

Private Function AantalCriteria() As Integer
Dim ctlTextBox          As Control
Dim criteria            As String

    On Error Resume Next
    AantalCriteria = 0
    For Each ctlTextBox In Me.Controls
        If Left(ctlTextBox.name, 10) = "QRYTextBox" Then
            criteria = Replace(ctlTextBox, "*", "")
            criteria = Replace(criteria, "%", "")
            If Trim(criteria) <> "" Then AantalCriteria = AantalCriteria + 1
        End If
    Next

End Function

Private Sub cmdNew_Click()
    On Error Resume Next
    NewSearch
    QRYTextBox1.SetFocus
End Sub

Private Sub cmdRetrieve_Click()
Dim myViewer            As WorkitemViewer
Dim i                   As Integer

    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents

    For i = 1 To ListView1.ListItems.Count
        If (ListView1.ListItems.item(i).Selected = True) Then
            RetrieveNthItem (i)
        End If
    Next i

EH:
    MousePointer = fmMousePointerDefault
    If Err Then DisplayError "Open"
End Sub

Private Sub ListView1_Click()
    Call EnableRetrieve
    PutresultsAbove
End Sub

Private Sub ListView1_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
    On Error GoTo EH
    If Me.ListView1.SortKey = ColumnHeader.Index - 1 Then
       If Me.ListView1.SortOrder = lvwDescending Then
          Me.ListView1.SortOrder = lvwAscending
         Else
          Me.ListView1.SortOrder = lvwDescending
       End If
     Else
        Me.ListView1.Sorted = True
        Me.ListView1.SortKey = ColumnHeader.Index - 1
        Me.ListView1.SortOrder = lvwAscending
    End If
    Me.ListView1.Refresh
    Exit Sub

EH:
    DisplayError "ListView ColumnClick"
End Sub

Private Sub ListView1_DblClick()
    On Error GoTo EH
    If Not Me.ListView1.SelectedItem Is Nothing Then
        RetrieveNthItem Me.ListView1.SelectedItem.Index
    End If
    Call EnableRetrieve
    Exit Sub

EH:
    DisplayError "ListView DblClick"
End Sub

Private Sub ListView1_Enter()
    cmdFind.Default = False
    cmdRetrieve.Default = True
    PutresultsAbove
End Sub

Private Sub ListView1_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    cmdFind.Default = True
End Sub

Private Sub cmdClose_Click()
    UserForm_Terminate
End Sub

Private Sub NewSearch()
Dim ctlTextBox          As Control

    On Error Resume Next
'   Fields are named 'QRYTextboxN" so new fields can be added
'   without changing this code.
    For Each ctlTextBox In Me.Controls
        If Left(ctlTextBox.name, 10) = "QRYTextBox" Then
            ctlTextBox = ""
            ctlTextBox.BackColor = TextboxWhite
        End If
    Next
End Sub

Private Function RunQuery(strZAAK_IDENT_NR As String) As CALQueryResults
Dim myColHeader         As ColumnHeader
Dim ctlTextBox          As Control
Dim ctlLabel            As Control
Dim strTemp             As String
Dim objClient           As CALClient
Dim lngMaxMatches       As Long
Dim calObjType          As Long
Dim calLocation         As Long
Dim i                   As Integer
Dim objIndexFields      As CALIndexFields2
Dim myClient            As CALClient

    On Error GoTo EH
    Set myClient = Application.CALClient
    Set objIndexFields = New CALIndexFields2

'   Beetje omslachtig. objINdexFields.
    Set objIndexFields = Application.CALClient.IndexFields2
    For i = objIndexFields.Count To 1 Step -1
        Call objIndexFields.Remove(objIndexFields.item(i))
    Next
    Set RunQuery = Nothing
    lngMaxMatches = Val(txtMaxMatches)
'   Set the query type (Folder, Document, or Import)
    If (optDocument.Value = True) Then
        calObjType = calObjTypeDocument
    ElseIf (optFolder.Value = True) Then
        calObjType = calObjTypeFolder
    Else
        calObjType = calObjTypeImport
    End If
    calLocation = calLocationDomain

'   Fields are named 'QryTextboxN" and captions are named 'QryLabelN"
'   so new fields can be added without changing this code.
    If strZAAK_IDENT_NR <> "" Then
        Call SetIndex(objIndexFields, "ZAAK_IDENT_NR", strZAAK_IDENT_NR)    ' WO 12-01-2009 TD 123871 zoeken op ZAAK_IDENT_NR
    Else
        SetIndex objIndexFields, "OBJECT_CLASS", "<>COLLMUT"
        SetIndex objIndexFields, "OBJECT_ID", "NOT LIKE ZZZ%"   '[PAC] 15JAN15 ZZZObject_id gemigreerd naar DIS_SCP
        For Each ctlTextBox In Me.Controls
            If Left(ctlTextBox.name, 10) = "QRYTextBox" Then
                ' mabr zetten van boll voor zoeken op 1 dat doc TD 54247
                If ctlTextBox.name = "QRYTextBox9" Then
                    bVanafDatum = True
                ElseIf ctlTextBox.name = "QRYTextBox10" Then
                    bTotDatum = True
                End If
                If (ctlTextBox.Enabled = True) Or (ctlTextBox.name = "QRYTextBox6" And ctlTextBox.Enabled = False) Then
                    Select Case ctlTextBox.Tag
                        Case "collectiviteitstruc" ' WO okt 2008 TD 124439 VOR 13
                            If ctlTextBox <> "" Then
                                Call SetIndex(objIndexFields, "ZAAK_IDENT_NR", "%_" & ctlTextBox & "VOR%")
                            End If
                        Case Else
                            Call SetIndex(objIndexFields, ctlTextBox.Tag, ctlTextBox)
                    End Select
                End If
            End If
        Next
    End If
    
'   Append result fields only to the Indexfield object
    For Each myColHeader In Me.ListView1.ColumnHeaders
        If myColHeader.Tag = True And myColHeader.Key <> "WF_STEP" Then
               Call SetIndex(objIndexFields, myColHeader.Key, "")
        End If
    Next

'   Execute the query
    Set objClient = Application.CALClient
    Set RunQuery = objClient.Query("", calObjType, calLocation, lngMaxMatches, objIndexFields)
    calObjType = calObjTypeFolder
    calLocation = calLocationDomain
    Set objIndexFields = Nothing
    Set objClient = Nothing
    Exit Function

EH:
    DisplayError "Runquery"
End Function

Private Sub SetIndex(objIndexFields As CALIndexFields2, Field As Variant, Value As Variant)
Dim strValue            As String
Dim strField            As String
Dim StarPos             As Integer
Dim objIndexField       As CALIndexField
Dim i                   As Integer

    On Error GoTo EH
'   Forces a blank field to be interpreted as 'any value'
'   CAL needs a field as string (variant is not working)
    strField = Field
    If Value <= " " Then
        strValue = ""
      Else
       strValue = RTrim(Value)
    End If
'   Replace * met %
    strValue = Replace(strValue, "*", "%")
'   Zet voor eerste dat_doc >= en tweede <=
'   Mabr 29-08-2005 het zoeken met slechts 1 dat_doc gaat niet goed omdat
'   het loopmechanisme niet goed werkt...
'   Nogal ernstig omdat mensen mogelijk dingen niet vinden als ze 1 criterium invulllen
'   Gezien het aantal wijzigingen in de afgelopen 3 jaar gaat het generiek verhaal hierbij ophouden.
    If strField = "DAT_DOC" Then
        If bVanafDatum Then
            If strValue <> "" Then
                strValue = ">=" & Format(strValue, "yyyy-mm-dd")
            End If
            bVanafDatum = False
        End If
        If bTotDatum Then
            If strValue <> "" Then
                strValue = "<=" & Format(strValue, "yyyy-mm-dd")
            End If
            bTotDatum = False       'Reset
        End If
    End If
    If strField = "IND_TRIGGER" And myExcluded.Count > 0 Then
        For i = 1 To myExcluded.Count
            Set objIndexField = objIndexFields.Add(calIndexFieldLast, "IND_TRIGGER", "<>" & myExcluded.item(i))
        Next i
    Else
        Set objIndexField = objIndexFields.Add(calIndexFieldLast, strField, strValue)
    End If
    Exit Sub

EH:
    DisplayError "Setindex"
End Sub

Private Sub LoadResults()
Dim itmx                As ListItem
Dim myColHeader         As ColumnHeader
Dim lngCount            As Long         'Het aantal inclusief Archief
Dim lngTel              As Long         'Het aantal wat getoond wordt
Dim Werkstap            As String
Dim i, j, t             As Long
Dim myEInfoItem         As CALEnumExtraInfoItem
Dim EInfiItem

    Set ExtraInfo2ResultListMapping = New Collection
    On Error GoTo EH
    For i = Me.ListView1.ListItems.Count To 1 Step -1
           Me.ListView1.ListItems.Remove i
    Next i
'   Display the number of hits
    lngCount = mobjQueryResults.Count
'   Add each hit to the listbox
    For i = 1 To lngCount
        Dim objEnumItem As CALEnumItem
        
            Set objEnumItem = mobjQueryResults.item(i)
'           Calc the mapping from the ExtraInfo query results to then ResultList shown on the form
            If ExtraInfo2ResultListMapping.Count < 1 Then
               For t = 1 To Me.ListView1.ColumnHeaders.Count
                   Set myColHeader = Me.ListView1.ColumnHeaders.item(t)
                   EInfiItem = 0
                   For j = 1 To objEnumItem.ExtraInfo.Count
                        Set myEInfoItem = objEnumItem.ExtraInfo.item(j)
                        If myEInfoItem.name = myColHeader.Key Then
                            EInfiItem = j
                        ElseIf myColHeader.Key = "WF_STEP" Then
                            EInfiItem = 99
                        End If
                   Next j
                   If EInfiItem > 0 Then
                        ExtraInfo2ResultListMapping.Add EInfiItem
                   ElseIf EInfiItem = 99 Then
                        ExtraInfo2ResultListMapping.Add 99
                   End If
               Next t
               
            End If
'       Transfer each record from the Query result list to the listview line on the form
        Werkstap = vindWerkstap(objEnumItem.Info.objId.InternalName)
        If optArchief Or Werkstap <> "Archief" Then
            Set itmx = Me.ListView1.ListItems.Add(, , objEnumItem.ExtraInfo.item(ExtraInfo2ResultListMapping.item(1)))
            For j = 2 To ExtraInfo2ResultListMapping.Count
                EInfiItem = ExtraInfo2ResultListMapping.item(j)
                If EInfiItem > 0 And EInfiItem < 99 Then        'If there is a value in the resultlist
                   itmx.SubItems(j - 1) = objEnumItem.ExtraInfo.item(EInfiItem)
                ElseIf EInfiItem = 99 Then
                    On Error Resume Next
                    itmx.SubItems(j - 1) = Werkstap
                    On Error GoTo EH
                End If
            Next j
'           Voeg de verwijziging naar de queryresultlist toe
            itmx.SubItems(myQueryResultRecordColumn) = i
            Me.ListView1.Refresh
            lngTel = lngTel + 1
        End If
    Next i
    lblCount = "Aantal gevonden: " + Str(lngTel)
    Set colUitvullen = ExtraInfo2ResultListMapping
    EnableRetrieve
    Exit Sub

EH:
    DisplayError "Loadresults"
End Sub

Private Sub RetrieveNthItem(i As Integer, Optional FromWorkflow As Boolean)
Dim myViewer            As WorkitemViewer
Dim FindListItems       As CALWorkitemWorkstepList
Dim objEnumItem         As CALEnumItem
Dim objClientListItem   As CALClientListItem
Dim j                   As Integer

    On Error GoTo EH
'   Bepaal het recordnr in de queryresult list
    j = Me.ListView1.ListItems.item(i).ListSubItems(myQueryResultRecordColumn)
    Set objEnumItem = mobjQueryResults.item(j)
    If objEnumItem.Info.ServerName = "ARCHIVE" Then
        Err.Raise 12344, , "Deze folder is verplaatst naar een andere business unit. Openen van deze folder is niet mogelijk."
    End If
    If FromWorkflow Then
        Set FindListItems = CALClient.FindInWorkflow(mobjQueryResults.item(j).Info.objId)
        If FindListItems.Count = 0 Then
            MsgBox "Item komt niet voor in een inbox of u heeft niet de rechten om deze inbox te raadplegen.", vbApplicationModal + vbExclamation + vbOKOnly
'           Item standaard op halen
            RetrieveNthItem (i)
            Exit Sub
        Else
            Set objClientListItem = FindListItems.item(1).Retrieve(0)
        End If
    Else
        Set objClientListItem = objEnumItem.Retrieve(0)
    End If
    Set myViewer = Application.Viewers.OpenViewer(mobjQueryResults.item(j).Info.objId, wdoOpenViewerNormal, wdoOpenReadOnly)
'   Voor Klachtenproces: start het algemene scherm
    If InStr(Right(myViewer.CALClientListItem.Info.name, 6), "KLA") > 0 Then
        Set frm_KLAAlgemeen.WorkitemViewer = myViewer
        frm_KLAAlgemeen.ESWMObjID = myViewer.CALClientListItem.Info.objId.InternalName
        GetFields myViewer, frm_KLAAlgemeen
        frm_KLAAlgemeen.Show 0
    End If
'   Voor OVL Fase II: start het indexeerscherm
    If InStr(Right(myViewer.CALClientListItem.Info.name, 6), "OVL") > 0 And _
       myViewer.CALClientListItem.Info.Type = calObjTypeFolder Then
        Set frm_OVLBeoordelen.WorkitemViewer = myViewer
        frm_OVLBeoordelen.ESWMObjID = myViewer.CALClientListItem.Info.objId.InternalName
        GetFields myViewer, frm_OVLBeoordelen
        frm_OVLBeoordelen.Show 0
    End If
    myViewer.BringToTop
    Exit Sub

EH:
    If Err.Number = 1000 And Application.CALMaster.LastError.Code = 26 Then
        Resume Next
        Err.Clear
    End If
    DisplayError "Open"
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
Dim objColHeader        As ColumnHeader
Dim intCount            As Integer

    On Error GoTo EH
'   Save column settings
    For intCount = 1 To ListView1.ColumnHeaders.Count
        If ListView1.ColumnHeaders(intCount).Key <> "QUERYRESULTRECORD" Then
            If ListView1.ColumnHeaders(intCount).Position > ListView1.ColumnHeaders("QUERYRESULTRECORD").Position Then
                'A column is moved to the right past hidden columns
                SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\" & ListView1.ColumnHeaders(intCount).Key, "Position", CStr(ListView1.ColumnHeaders(intCount).Position - 1)
            Else
                SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\" & ListView1.ColumnHeaders(intCount).Key, "Position", CStr(ListView1.ColumnHeaders(intCount).Position)
            End If
            SetRegistryKey "Kodak", "Workdesk\3.2\Queryform\" & ListView1.ColumnHeaders(intCount).Key, "Width", ListView1.ColumnHeaders(intCount).Width
        End If
    Next
    Exit Sub

EH:
    DisplayError "userform_queryclose"
End Sub

Private Sub UserForm_Terminate()
    Application.Desktop.WindowState = DesktopWindowState
    Unload Me
End Sub

Private Function vindWerkstap(id As String) As String
Dim objId               As CALObjID
Dim FindListItems       As CALWorkitemWorkstepList
Dim Werkstap            As String

    Set objId = New CALObjID
    objId.InternalName = id
    Set FindListItems = CALClient.FindInWorkflow(objId)
    If FindListItems.Count > 0 Then
        Werkstap = FindListItems.item(1).Info.SourceWorkstep
    Else
        Werkstap = "Archief"
    End If
    vindWerkstap = Werkstap
End Function
Attribute VB_Name = "frmQueryUitsluiten"
Attribute VB_Base = "0{1365D0F3-1E08-4D0F-B410-6DA21ADEB871}{A41623CC-1E2F-468D-9E44-5A28B39739B1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Dim myParentForm As Object

Public Property Set ParentForm(myForm)
  Set myParentForm = myForm
  
  Call Initialize
End Property

Private Sub cmdAlleT_Click()
    
    For i = 0 To Me.LBChoose.ListCount - 1
        
        Me.LBChosen.AddItem (Me.LBChoose.list(i))
                
        
    Next i
    
    Me.LBChoose.Clear
    
End Sub

Private Sub cmdAlleV_Click()

    For i = 0 To Me.LBChosen.ListCount - 1
        
        Me.LBChoose.AddItem (Me.LBChosen.list(i))
                
        
    Next i
    
    Me.LBChosen.Clear
    
End Sub

Private Sub cmdAnnuleren_Click()
    Me.Hide
              
End Sub

Private Sub cmdOK_Click()
    
    Dim tmpCol1 As New Collection
    Dim tmpCol2 As New Collection
    
    Dim i As Integer
    
    For i = 0 To Me.LBChoose.ListCount - 1
        tmpCol1.Add Me.LBChoose.list(i)
    Next i
    
    For i = 0 To Me.LBChosen.ListCount - 1
        tmpCol2.Add Me.LBChosen.list(i)
    Next i
    
    Call myParentForm.setRemaining(tmpCol1)
    Call myParentForm.setExcluded(tmpCol2)
    Call myParentForm.setIsExcluded(True)
    
    If tmpCol2.Count > 0 Then
        Call myParentForm.enableKenmerk(False)
    Else
        Call myParentForm.enableKenmerk(True)
    End If
    
    Me.Hide
End Sub

Private Sub cmdToevoegen_Click()
    
    Dim i As Integer
    
    'Me.LBChosen.List.Sorted = True
    
    For i = 0 To Me.LBChoose.ListCount - 1
        
        If Me.LBChoose.Selected(i) Then
            Me.LBChosen.AddItem (Me.LBChoose.list(i))
            Me.LBChoose.RemoveItem (i)
            Exit For
        End If
        
    Next i
        
End Sub

Private Sub cmdVerwijderen_Click()
    
    Dim i As Integer
    
    'Me.LBChoose.List.Sorted = True
    
    For i = 0 To Me.LBChosen.ListCount - 1
        
        If Me.LBChosen.Selected(i) Then
            Me.LBChoose.AddItem (Me.LBChosen.list(i))
            Me.LBChosen.RemoveItem (i)
        End If
        
    Next i
    
End Sub

Private Sub Initialize()
    
    Me.LBChoose.Clear
    Me.LBChosen.Clear
    
    If myParentForm.getIsExcluded() Then
        Call veldVullenSavedData
    Else
        Call veldVullen
    End If
    
End Sub

Private Sub UserForm_Terminate()
    Me.LBChoose.Clear
    Me.LBChosen.Clear
End Sub

Private Sub veldVullen()
    
    Dim x As Integer
    
    For x = 1 To myParentForm.getKenmerkList.Count
        Me.LBChoose.AddItem myParentForm.getKenmerkList(x)
    Next x
    
End Sub

Private Sub veldVullenSavedData()

    Dim x As Integer
    
    For x = 1 To myParentForm.getRemaining.Count
        Me.LBChoose.AddItem myParentForm.getRemaining(x)
    Next x
    
    For x = 1 To myParentForm.getExcluded.Count
        Me.LBChosen.AddItem myParentForm.getExcluded(x)
    Next x
    
End Sub
Attribute VB_Name = "frmUWOContrOpgave"
Attribute VB_Base = "0{00EC99BC-2787-4CDA-9255-2209089B78F3}{61C8B3D4-08AF-46DF-9B36-F3DE4B076F96}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String
   
Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not WFMCCONTROLE_AKKOORD.Value Then
        WFM_PRIORITEIT.Value = "9"
    Else
        WFM_PRIORITEIT.Value = "0"
    End If
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub UserForm_Click()
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Attribute VB_Name = "frmUWOControleAdm"
Attribute VB_Base = "0{7F44FE9B-61AB-41DA-8F1F-DED3409D7C22}{B27E4475-6946-4C1B-A67D-6EFE59AE9690}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Attribute VB_Name = "frmUWOFiatterenVTU"
Attribute VB_Base = "0{10CD9022-71BD-4CD0-9D68-63AC9D6ADD94}{FDB1FB8D-2317-421C-89E0-39F86ADB6D08}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Activate()
Static Init     As Boolean

    On Error GoTo EH
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub
Attribute VB_Name = "frmUWOGbaReadOnly"
Attribute VB_Base = "0{07EFA0B6-F1E8-4473-82A1-A5F3E6050925}{C90613CD-889C-4421-B9B7-BBB1BC769BDB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim myForm          As Object
Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String

Private Sub cmdPrint_Click()
    lbPartners.ColumnCount = 9
    DoEvents
    CopyLvTolb lvPartners, lbPartners
    DoEvents
    Me.Repaint
    lbPartners.Visible = True
    Me.PrintForm
    lbPartners.Visible = False
End Sub

Private Sub cmdSluiten_Click()
    Unload Me
End Sub

Private Function GetCALXFormFields() As Boolean
Dim itmx    As ListItem
Dim SVB     As Field

    On Error GoTo EH
    GetCALXFormFields = False
    GetFields WIViewer, Me
    CALGetTable lvPartners, WIViewer.Fields.Find("_TABLE_SVB")
    GetCALXFormFields = True
    Exit Function

EH:
    DisplayError ("GetCALXFormFields")
End Function

Private Sub AddResultField(ListView As ListView, name, Caption, Witdh, Align, ResultOnly As Boolean)
Dim myColHeader     As ColumnHeader

    Set myColHeader = ListView.ColumnHeaders.Add(, name, Caption, Witdh, Align)
    myColHeader.Tag = ResultOnly

End Sub

Private Sub UserForm_Activate()
Static Init     As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    Me.lvPartners.ColumnHeaders.Add , , , 0, 0 ', Alignment:=1
    AddResultField lvPartners, "JN_HUW_REGEL_AANM", "Aanm.", 35, 0, False
    AddResultField lvPartners, "JN_HUW_REGEL_OK", "Ontv.", 30, 0, False
    AddResultField lvPartners, "INGANG_SVB", "Ingang SVB", 60, 0, False
    AddResultField lvPartners, "EINDE_SVB", "Einde SVB", 60, 0, False
    AddResultField lvPartners, "R", "R", 30, 0, False
    AddResultField lvPartners, "NAAM_PARTNER", "Naam Partner", 126, 0, False
    AddResultField lvPartners, "VOORLETTERS", "Voorl.", 40, 0, False
    AddResultField lvPartners, "VOORVOEGSELS", "Voorvoeg.", 60, 0, False
    AddResultField lvPartners, "GEB_DATUM", "Geb.datum", 60, 0, False
    GetCALXFormFields
    Me.lvPartners.Refresh
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Attribute VB_Name = "frmUWOMakenBoeking"
Attribute VB_Base = "0{2675B451-305A-4DE9-939F-116CD27DAB43}{37E2339B-556C-4CDC-8E0E-4133A3C0D497}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"

End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Attribute VB_Name = "frmUWOMakenopgave"
Attribute VB_Base = "0{A270DA19-EE5C-48CA-87BC-14443884343A}{F1071120-E836-4CB1-951A-BA601ACF9B1A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String

Private Sub cmdGBA_Click()
    On Error GoTo EH
    Set frmUWOGbaReadOnly.WorkitemViewer = WIViewer
    frmUWOGbaReadOnly.Show 1
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub cbNieuwePuo_Change()
Dim strNieuwePuo    As String
Dim NieuwePuo       As NaamPens

    On Error GoTo EH
    If Not cbNieuwePuo.Value = Empty Then
        NieuwePuo = GetNaamPens(cbNieuwePuo.Value)
        WFM_NAAM_PENS_NW = cbNieuwePuo.Value
        WFM_INFO_PENS_NW = NieuwePuo.InfoRegel
        WFM_ADRES_PENS_NW = NieuwePuo.Postbus
        WFM_POSTC_PENS_NW = NieuwePuo.PCPlaats
    Else
        WFM_NAAM_PENS_NW = Empty
        WFM_INFO_PENS_NW = Empty
        WFM_ADRES_PENS_NW = Empty
        WFM_POSTC_PENS_NW = Empty
    End If
    Exit Sub

EH:
    DisplayError "cbNieuwePuo"
End Sub

Private Sub CmdParkDatum_Click()
    On Error GoTo EH
    If Not mvParkdatum.Visible Then
        mvParkdatum.Left = 72
        mvParkdatum.Top = 66
        mvParkdatum.Visible = True
        mvParkdatum = Date + 7
        If Not WFMDRAPPEL = "" Then mvParkdatum = WFMDRAPPEL
    Else
        mvParkdatum.Visible = False
    End If
EH:
    If Err.Number = 13 Then
        mvParkdatum = Date
        Exit Sub
    End If
    DisplayError "Foutieve datum"
End Sub

Private Sub cmdStartWaarde_Click()
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, csOpgave, prgWaardeRekenProg)
End Sub

'[PAC] - TD170048 - START
Private Sub cmdStartWaarde67_Click()
    Call StartBrief(WIViewer, strOfferte, gsWaardeRekenProg2)
End Sub
'[PAC] - TD170048 - END

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim VerplichtVeldOntbreekt As String

    VerplichtVeldOntbreekt = ""
    On Error GoTo EH
'   Controleren of bij een vertraging ook de rappeldatum en reden_parkeren zijn ingevuld
    If WFM_INTVERT <> "" Then
        If WFMDRAPPEL = "" Then
            VerplichtVeldOntbreekt = "Het verplichte veld rappeldatum bevat geen waarde!"
        End If
        If WFM_REDEN_PARKEREN = "" Then
            If VerplichtVeldOntbreekt = "" Then
                VerplichtVeldOntbreekt = "Het verplichte veld reden parkeren bevat geen waarde!"
            Else
                VerplichtVeldOntbreekt = "De verplichte velden rappeldatum en reden parkeren bevatten geen waarde!"
            End If
        End If
        If VerplichtVeldOntbreekt <> "" Then
            MsgBox VerplichtVeldOntbreekt, vbExclamation, "Verplichte velden bevatten geen waarde"
            Exit Sub
        End If
    End If
    DateCheck WFMDRAPPEL
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
'   Gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WIViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"
End Sub

Private Sub mvParkdatum_DateClick(ByVal DateClicked As Date)
    WFMDRAPPEL = Format(mvParkdatum, "dd-mm-yyyy")
    mvParkdatum.Visible = False
    WFMDRAPPEL.SetFocus
End Sub

Private Sub UserForm_Activate()
Static Init As Boolean

    On Error GoTo EH
'   Max 20 karakters voor het veld IntVert
    WFM_REDEN_PARKEREN.AddItem "Echtscheiding"
    WFM_REDEN_PARKEREN.AddItem "Info verzoek"
    WFM_REDEN_PARKEREN.AddItem "Klant gaat weg"
    WFM_REDEN_PARKEREN.AddItem "DG Extern"
    WFM_REDEN_PARKEREN.AddItem "DG Intern"
    If Init Then Exit Sub
    Init = True
    ParkerenGripTmp.ColumnCount = 2
    ParkerenGripTmp.BoundColumn = 1
    ParkerenGripTmp.TextColumn = -1
    ParkerenGripTmp.ColumnWidths = "0;"
    ParkerenGripTmp.AddItem
    ParkerenGripTmp.list(0, 1) = "Ja"
    ParkerenGripTmp.list(0, 0) = "Parkeren"  'naar parkeerbak
    ParkerenGripTmp.AddItem
    ParkerenGripTmp.list(1, 1) = "Nee"
    ParkerenGripTmp.list(1, 0) = ""
    ParkerenGripTmp.AddItem
    ParkerenGripTmp = ""
    If cbNieuwePuo.ListCount = 0 Then
        Call GetNieuwePuo(Me)
    End If
    lbTemplates.AddItem "UWO Opgave Kapitaal"
    lbTemplates.AddItem "UWO Opgave OW"
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub OldGetNieuwePuo()
Dim PensName    As Variant
Dim i           As Integer

    On Error GoTo EH
    If PensNames.Count < 1 Then InitNaamPens
    For Each PensName In PensNames
        i = InStr(PensName, ";")
        cbNieuwePuo.AddItem (Mid(PensName, 1, i - 1))
    Next
    Exit Sub

EH:
   DisplayError "GetNieuwePuo"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    Exit Sub

EH:
    DisplayError "UserForm_DblClick"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
  Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
  myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
 ESWMObjID = myESWMObjID
End Property

Private Sub ParkerenGripTmp_Change()
' De componenten
' Label rappeldatum = LabelRappelDatum (denk aan waarde legen)
' Rappeldatum = WFMDRAPPEL
' Knop kalender = CmdParkDatum
' Kalender = mvParkdatum (denk aan positie)
' Label reden parkeren = LabelRedenParkeren
' Reden parkeren = WFM_REDEN_PARKEREN
    If Not ParkerenGripTmp = "" Then
'       Bevat een waarde
        CmdParkDatum.Visible = True
        LabelRappelDatum.Visible = True
        mvParkdatum.Left = 72
        mvParkdatum.Top = 66
        mvParkdatum.Visible = True
'       De te tonen maand in de kalender.
        If WFMDRAPPEL = "" Then
            mvParkdatum = Date
        Else
            mvParkdatum = WFMDRAPPEL
        End If
        WFMDRAPPEL.Visible = True
        WFM_REDEN_PARKEREN.Visible = True
        LabelRedenParkeren.Visible = True
        WFMCOFFERTE_AKKOORD.Visible = False
    Else
'       Bevat geen waarde
        CmdParkDatum.Visible = False
        mvParkdatum.Visible = False
        LabelRappelDatum.Visible = False
        WFMDRAPPEL.Visible = False
        WFMDRAPPEL = ""
        WFM_REDEN_PARKEREN = ""
        WFMDRAPPEL.BackColor = TextboxWhite
        WFM_REDEN_PARKEREN.Visible = False
        LabelRedenParkeren.Visible = False
        WFMCOFFERTE_AKKOORD.Visible = True
    End If
End Sub

Private Sub WFM_REDEN_PARKEREN_Change()
' **********************************************************************************
' *    Wijzigingen hier kunnen effect hebben op de werking van de GripRobot.       *
' *    Indien de GripRobot op de Intvert waarde moet controleren is het zaak dat   *
' *    deze waarde bekend is in de Griprobot in de module ADOGripMutatie           *
' **********************************************************************************
    If ParkerenGripTmp = "Parkeren" Then
        WFM_INTVERT = "Parkeren"    'Default geen GRIPRobot
        'Intvert vullen tbv Grip robot
        If WFM_REDEN_PARKEREN = "Echtscheiding" Then WFM_INTVERT = "Echtscheiding"
    Else
        WFM_INTVERT = ""
    End If
End Sub

Private Sub WFMDMUT_DATUM_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDMUT_DATUM
    WFMDMUT_DATUM.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Mutatiedatum"
End Sub

Private Sub WFMDRAPPEL_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    DateCheckBefore WFMDRAPPEL
    Exit Sub

EH:
    DisplayError "Parkeren einddatum"
End Sub
Attribute VB_Name = "frmUWOMuterenAdm"
Attribute VB_Base = "0{98EF2284-FDB2-4959-B0A2-672DC10FB625}{B878C3BE-8994-4A49-BFF4-9181B6635583}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myCeasarKlaargezet  As CALFormField
Dim myZaakMemo          As CALFormField
Dim myHulp              As String

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    DateCheck WFMDMUT_DATUM
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    If Not UploadCaesarUWO(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"

End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        If optCsKlaarWFM = True Then
            If myCeasarKlaargezet.Value <> "J" Then
                myCeasarKlaargezet.Value = "J"
            End If
        End If
        If optCsKlaarLeeg = True Then
            If myCeasarKlaargezet.Value <> "" Then
                myCeasarKlaargezet.Value = ""
            End If
        End If
    End If
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WorkitemViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"

End Sub

Private Sub UserForm_Activate()
Static Init     As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    lbTemplates.AddItem "UWO Betaalopdracht"
    Set myZaakMemo = WIViewer.Fields.Find("ZAAK_VLGNR_MEMO").CALFormField
    myHulp = myZaakMemo
    Set myCeasarKlaargezet = WIViewer.Fields.Find("MUT_KLAARGEZET").CALFormField
    Select Case myCeasarKlaargezet.Value
        Case Is = ""
             optCsKlaarLeeg = True
        Case Is = "J"
             optCsKlaarWFM = True
        Case Else
             optCsKlaarLeeg = True
    End Select
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub WFMDMUT_DATUM_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDMUT_DATUM
    WFMDMUT_DATUM.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Mutatiedatum"
End Sub
Attribute VB_Name = "frmUWOOpdrachtBank"
Attribute VB_Base = "0{67C83ED3-10AE-4734-B97E-AEC4EB3A3106}{55FFB789-9F21-4751-B6C3-8D489A5536C6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Attribute VB_Name = "frmUWOParkeren"
Attribute VB_Base = "0{CE00C6F1-05D8-44A4-B75C-E48102BEC65B}{EE85121D-1869-45CF-9435-B9664B258150}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myRedenVertraging   As CALFormField

Private Sub CmdParkDatum_Click()
    On Error GoTo EH
    If Not mvParkdatum.Visible Then
        mvParkdatum.Left = 72
        mvParkdatum.Top = 144
        mvParkdatum.Visible = True
        mvParkdatum = Date + 7
        If Not WFMDRAPPEL = "" Then mvParkdatum = WFMDRAPPEL
    Else
        mvParkdatum.Visible = False
    End If

EH:
    If Err.Number = 13 Then
        mvParkdatum = Date
        Exit Sub
    End If
    DisplayError "Foutieve datum"
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim GetWorkstep             As String
Dim VerplichtVeldOntbreekt  As String

    On Error GoTo EH
    VerplichtVeldOntbreekt = ""
    If optParkeren.Value = True Then
'       Check als de zaak in parkeren blijft staan
        If WFMDRAPPEL = "" Then
            VerplichtVeldOntbreekt = "Het verplichte veld rappeldatum bevat geen waarde!"
        End If
        If WFM_REDEN_PARKEREN = "" Then
            If VerplichtVeldOntbreekt = "" Then
                VerplichtVeldOntbreekt = "Het verplichte veld reden parkeren bevat geen waarde!"
            Else
                VerplichtVeldOntbreekt = "De verplichte velden rappeldatum en reden parkeren bevatten geen waarde!"
            End If
        End If
        If VerplichtVeldOntbreekt <> "" Then
            MsgBox VerplichtVeldOntbreekt, vbExclamation, "Verplichte velden bevatten geen waarde"
            Exit Sub
        End If
        DateCheck WFMDRAPPEL
    End If
    If rb_antwoord_info_JA = True Then
'       Dit in een aparte procedure met naam meegeven
        Call VerplaatsenVanuitParkeerstap(WIViewer, WFM_WORKSTEP_NAAM.Value)
        Exit Sub
    End If
    GetWorkstep = WIViewer.CALClientListItem.Info.SourceWorkstep
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo EH
    SetCALXFormFields = False
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        If optVoorbereiden = True Then
            If myRedenVertraging.Value <> "Voorbereiden" Then
                myRedenVertraging.Value = "Voorbereiden"
            End If
        End If
        If optMakenOpgave = True Then
            If myRedenVertraging.Value <> "Maken opgave" Then
                myRedenVertraging.Value = "Maken opgave"
            End If
        End If
        If optParkeren = True Then
'           Waarde blijft hetzelfde
        End If
    End If
    SetCALXFormFields = True
    Exit Function

EH:
    DisplayError "SetCALXFormFields"
End Function

Private Sub mvParkdatum_DateClick(ByVal DateClicked As Date)
    WFMDRAPPEL = Format(mvParkdatum, "dd-mm-yyyy")
    mvParkdatum.Visible = False
    WFMDRAPPEL.SetFocus
End Sub

Private Sub UserForm_Activate()
Static Init     As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
'   Max 20 karakters voor het veld IntVert
    WFM_REDEN_PARKEREN.AddItem "DVL niet gedraaid"
    WFM_REDEN_PARKEREN.AddItem "Contractsverlenging"
    WFM_REDEN_PARKEREN.AddItem "Faillissement"
    WFM_REDEN_PARKEREN.AddItem "Blokkade GB"
    WFM_REDEN_PARKEREN.AddItem "Blokkade VP"
    WFM_REDEN_PARKEREN.AddItem "Blokkade WIA"
    WFM_REDEN_PARKEREN.AddItem "Blokkade Overig"
    WFM_REDEN_PARKEREN.AddItem "Eerst BWO"
    WFM_REDEN_PARKEREN.AddItem "Echtscheiding"
    WFM_REDEN_PARKEREN.AddItem "Infoverzoek"
    WFM_REDEN_PARKEREN.AddItem "Klant gaat weg"
    WFM_REDEN_PARKEREN.AddItem "DG Extern"
    WFM_REDEN_PARKEREN.AddItem "DG Intern"
    Set myRedenVertraging = Nothing
    Set myRedenVertraging = WIViewer.Fields.Find("INTVERT").CALFormField
    optParkeren.Value = True
    tbRedenVertraging.Value = myRedenVertraging.Value
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub
Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub WFM_REDEN_PARKEREN_Change()
' **********************************************************************************
' *    Wijzigingen hier kunnen effect hebben op de werking van de GripRobot.       *
' *    Indien de GripRobot op de Intvert waarde moet controleren is het zaak dat   *
' *    deze waarde bekend is in de Griprobot in de module ADOGripMutatie           *
' **********************************************************************************
'   Intvert vullen tbv Grip robot
    If WFM_REDEN_PARKEREN = "DVL niet gedraaid" Then tbRedenVertraging = "Niet premievrij"
    If WFM_REDEN_PARKEREN = "Contractsverlenging" Then tbRedenVertraging = "Niet premievrij"
    If WFM_REDEN_PARKEREN = "Faillissement" Then tbRedenVertraging = "Niet premievrij"
    If WFM_REDEN_PARKEREN = "Blokkade GB" Then tbRedenVertraging = "Niet premievrij"
    If WFM_REDEN_PARKEREN = "Blokkade VP" Then tbRedenVertraging = "Niet premievrij"
    If WFM_REDEN_PARKEREN = "Blokkade WIA" Then tbRedenVertraging = "Niet premievrij"
    If WFM_REDEN_PARKEREN = "Blokkade Overig" Then tbRedenVertraging = "Niet premievrij"
    If WFM_REDEN_PARKEREN = "Eerst BWO" Then tbRedenVertraging = "BWO"
    If WFM_REDEN_PARKEREN = "Echtscheiding" Then tbRedenVertraging = "Echtscheiding"
End Sub

Private Sub WFMDRAPPEL_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    DateCheckBefore WFMDRAPPEL
    Exit Sub

EH:
    DisplayError "Parkeren einddatum"
End Sub
Attribute VB_Name = "frmUWOVoorbereiden"
Attribute VB_Base = "0{CD8DF8EB-AF05-4AD4-B527-F17C6FC8C9F1}{4B21A884-31E3-48A9-BE97-09E8635C50F5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim myCAESAR_MUTATIE    As CALFormField

Private Sub CmdParkDatum_Click()
    On Error GoTo EH
    If Not mvParkdatum.Visible Then
        mvParkdatum.Left = 72
        mvParkdatum.Top = 70
        mvParkdatum.Visible = True
        mvParkdatum = Date + 7
        If Not WFMDRAPPEL = "" Then mvParkdatum = WFMDRAPPEL
    Else
        mvParkdatum.Visible = False
    End If

EH:
    If Err.Number = 13 Then
        mvParkdatum = Date
        Exit Sub
    End If
    DisplayError "Foutieve datum"
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim VerplichtVeldOntbreekt  As String

    On Error GoTo EH
    VerplichtVeldOntbreekt = ""
'   Controleren of bij een vertraging ook de rappeldatum en reden_parkeren zijn ingevuld
    If ParkerenGripTmp <> "" Then
        If WFMDRAPPEL = "" Then
            VerplichtVeldOntbreekt = "Het verplichte veld rappeldatum bevat geen waarde!"
        End If
        If WFM_REDEN_PARKEREN = "" Then
            If VerplichtVeldOntbreekt = "" Then
                VerplichtVeldOntbreekt = "Het verplichte veld reden parkeren bevat geen waarde!"
            Else
                VerplichtVeldOntbreekt = "De verplichte velden rappeldatum en reden parkeren bevatten geen waarde!"
            End If
        End If
        If VerplichtVeldOntbreekt <> "" Then
            MsgBox VerplichtVeldOntbreekt, vbExclamation, "Verplichte velden bevatten geen waarde"
            Exit Sub
        End If
    End If
    DateCheck WFMDRAPPEL
    DateCheck WFMDMUT_DATUM
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Opslaan"
End Sub

Private Sub cbNieuwePuo_Change()
Dim strNieuwePuo    As String
Dim NieuwePuo       As NaamPens

    On Error GoTo EH
    If Not cbNieuwePuo.Value = Empty Then
        NieuwePuo = GetNaamPens(cbNieuwePuo.Value)
        WFM_NAAM_PENS_NW = cbNieuwePuo.Value
        WFM_INFO_PENS_NW = NieuwePuo.InfoRegel
        WFM_ADRES_PENS_NW = NieuwePuo.Postbus
        WFM_POSTC_PENS_NW = NieuwePuo.PCPlaats
    Else
        WFM_NAAM_PENS_NW = Empty
        WFM_INFO_PENS_NW = Empty
        WFM_ADRES_PENS_NW = Empty
        WFM_POSTC_PENS_NW = Empty
    End If
    Exit Sub

EH:
    DisplayError "cbNieuwePuo"
End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
'   Gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WorkitemViewer, lbTemplates.Value)
    Exit Sub

EH:
    DisplayError "Dubbelklik brief"

End Sub

Private Sub mvParkdatum_DateClick(ByVal DateClicked As Date)
    WFMDRAPPEL = Format(mvParkdatum, "dd-mm-yyyy")
    mvParkdatum.Visible = False
    WFMDRAPPEL.SetFocus
End Sub

Private Sub UserForm_Activate()
Static Init     As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
'   Templates die in deze werkstap zijn te gebruiken
    lbTemplates.AddItem "UWO Afwijzing"
    lbTemplates.AddItem "UWO Vertraging"
    ParkerenGripTmp.ColumnCount = 2
    ParkerenGripTmp.BoundColumn = 1
    ParkerenGripTmp.TextColumn = -1
    ParkerenGripTmp.ColumnWidths = "0;"
    ParkerenGripTmp.AddItem
    ParkerenGripTmp.list(0, 1) = "Ja"
    ParkerenGripTmp.list(0, 0) = "Parkeren"  'naar parkeerbak
    ParkerenGripTmp.AddItem
    ParkerenGripTmp.list(1, 1) = "Nee"
    ParkerenGripTmp.list(1, 0) = ""
    ParkerenGripTmp.AddItem
    ParkerenGripTmp = ""
'   Max 20 karakters voor het veld IntVert
    WFM_REDEN_PARKEREN.AddItem "DVL niet gedraaid"
    WFM_REDEN_PARKEREN.AddItem "Contractsverlenging"
    WFM_REDEN_PARKEREN.AddItem "Faillissement"
    WFM_REDEN_PARKEREN.AddItem "Blokkade GB"
    WFM_REDEN_PARKEREN.AddItem "Blokkade VP"
    WFM_REDEN_PARKEREN.AddItem "Blokkade WIA"
    WFM_REDEN_PARKEREN.AddItem "Blokkade Overig"
    WFM_REDEN_PARKEREN.AddItem "Eerst BWO"
    WFM_REDEN_PARKEREN.AddItem "Infoverzoek"
    WFM_REDEN_PARKEREN.AddItem "Klant gaat weg"
    WFM_REDEN_PARKEREN.AddItem "Echtscheiding"
    WFM_REDEN_PARKEREN.AddItem "DG Extern"
    WFM_REDEN_PARKEREN.AddItem "DG Intern"
    If cbNieuwePuo.ListCount = 0 Then Call GetNieuwePuo(Me)
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    Exit Sub

EH:
    DisplayError "UserForm_DblClick"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub ParkerenGripTmp_Change()
' De componenten
' Label rappeldatum = LabelRappelDatum (denk aan waarde legen)
' Rappeldatum = WFMDRAPPEL
' Knop kalender = CmdParkDatum
' Kalender = mvParkdatum (denk aan positie)
    If Not ParkerenGripTmp = "" Then
'       Bevat een waarde
        CmdParkDatum.Visible = True
        LabelRappelDatum.Visible = True
        mvParkdatum.Left = 72
        mvParkdatum.Top = 70
        mvParkdatum.Visible = True
'       De te tonen maand in de kalender.
        If WFMDRAPPEL = "" Then
            mvParkdatum = Date
        Else
            mvParkdatum = WFMDRAPPEL
        End If
        WFMDRAPPEL.Visible = True
        WFM_REDEN_PARKEREN.Visible = True
        LabelRedenParkeren.Visible = True
    Else
'       Bevat geen waarde
        CmdParkDatum.Visible = False
        mvParkdatum.Visible = False
        LabelRappelDatum.Visible = False
        WFMDRAPPEL.Visible = False
        WFMDRAPPEL = ""
        WFM_REDEN_PARKEREN = ""
        WFMDRAPPEL.BackColor = TextboxWhite
        WFM_REDEN_PARKEREN.Visible = False
        LabelRedenParkeren.Visible = False
    End If
End Sub

Private Sub WFM_REDEN_PARKEREN_Change()
' **********************************************************************************
' *    Wijzigingen hier kunnen effect hebben op de werking van de GripRobot.       *
' *    Indien de GripRobot op de Intvert waarde moet controleren is het zaak dat   *
' *    deze waarde bekend is in de Griprobot in de module ADOGripMutatie           *
' **********************************************************************************
    If ParkerenGripTmp = "Parkeren" Then
        WFM_INTVERT = "Parkeren"    'Default geen GRIPRobot
'       Intvert vullen tbv Grip robot
        If WFM_REDEN_PARKEREN = "DVL niet gedraaid" Then WFM_INTVERT = "Niet premievrij"
        If WFM_REDEN_PARKEREN = "Contractsverlenging" Then WFM_INTVERT = "Niet premievrij"
        If WFM_REDEN_PARKEREN = "Faillissement" Then WFM_INTVERT = "Niet premievrij"
        If WFM_REDEN_PARKEREN = "Blokkade GB" Then WFM_INTVERT = "Niet premievrij"
        If WFM_REDEN_PARKEREN = "Blokkade VP" Then WFM_INTVERT = "Niet premievrij"
        If WFM_REDEN_PARKEREN = "Blokkade WIA" Then WFM_INTVERT = "Niet premievrij"
        If WFM_REDEN_PARKEREN = "Blokkade Overig" Then WFM_INTVERT = "Niet premievrij"
        If WFM_REDEN_PARKEREN = "Eerst BWO" Then WFM_INTVERT = "BWO"
    Else
        If WFM_REDEN_PARKEREN = "" Then WFM_INTVERT = ""
    End If
End Sub

Private Sub WFMDMUT_DATUM_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDMUT_DATUM
    WFMDMUT_DATUM.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Mutatiedatum"
End Sub

Private Sub WFMDRAPPEL_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    DateCheckBefore WFMDRAPPEL
    Exit Sub

EH:
    DisplayError "Rappeldatum"
End Sub
Attribute VB_Name = "frmUitzondering"
Attribute VB_Base = "0{18C3079E-FA33-4979-BFFC-8DBE3FC66381}{A6B7F105-728C-4A97-A8B0-F9221FE727E3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdOK_Click()
    Me.Hide
End Sub

Private Sub UserForm_Activate()
    TextBox1.SetFocus
    cmdOK.SetFocus
End Sub

Attribute VB_Name = "frmVORAlgemeen"
Attribute VB_Base = "0{3168156B-BA86-402F-8263-6CBD7193B461}{A6EBAEB7-8041-4B57-814F-6B85FD381071}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim WorkstepVorFlow     As String
Dim intLeft             As Integer
Dim intTop              As Integer
Dim intVerticalSpace    As Integer
Dim currentDateField    As Control
Dim sTargetSId          As String

Const RAPPEL_TERMIJN24 = 24
Const RAPPEL_TERMIJN14 = 14

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

' Begin van de events op de tabbladen
Private Sub AFDELING_Change()
    Call Handle46V02ScreenInfo
End Sub

Private Sub cmdRappel_Click()
    Call handleVORDateButtonClick(Me.WFMDRAPPEL, Me.cmdRappel, Me.mvUniform)
End Sub

Private Sub V08_AFDELING_Change()
Dim strAfdeling         As String
Dim strAfdeling_user    As String
Dim vUser               As Variant

    strAfdeling = V08_AFDELING.SelText
    If WFM_BEH_GROEP = "" Then 'Geen behandelgroep dan afdeling
        WFM_BEHANDELAAR.Clear
        For Each vUser In GetUsersPerAfdeling(strAfdeling)
            WFM_BEHANDELAAR.AddItem vUser
        Next
    Else            'wel behandelgroep dan
        WFM_BEHANDELAAR.Clear
        For Each vUser In GetUsersPerPerBehGroep(WFM_BEH_GROEP.Text, strAfdeling)
            WFM_BEHANDELAAR.AddItem vUser
        Next
    End If
    If strAfdeling <> CALGetUserVar("Afdeling", CALClient.username) Then
        WFM_BEH_GROEP.Value = ""
        WFM_BEH_GROEP.Locked = True
        WFM_BEHANDELAAR.Value = ""
        WFM_BEHANDELAAR.Locked = True
    Else
        WFM_BEHANDELAAR.Locked = False
        WFM_BEH_GROEP.Locked = False
    End If
End Sub

Private Sub V16_WFM_VOR_ACTIE_Click()
'   De business wil een routering naar 46V30 Afboeken.
'   In de stappen 2, 4 en 11 werkt men met een pulldown met de waarden Terugvorderen, Verrekeningen en Afboeken.
'   Hier wil de business alleen routeren naar 46V30 afboeken.
'   In de route staat echter voor 46V30 rule een rule tbv 46V36 Kwart. Contr
'   Dus vandaar niet het gebruikelijke lijstje in de pulldownlist

    If WFMDDAT_INCASSOBUR_BRF <> "" Then
        If V16_WFMDDAT_CONTROLE1 <> "" Then
            MsgBox "Omdat 'datum brief incassobureau' en 'controle datum' zijn ingevuld vindt hier de routering op plaats naar '46V36 Kwart. Contr' en is het vullen van een waarde bij 'vordering actie' niet van toepassing"
            V16_WFM_VOR_ACTIE.Value = ""
        End If
    End If
End Sub

Private Sub V16radioJa_Click()    ' WO 18 nov 2008 punt 9
    Label214.Visible = True
    V16_WFMDDAT_CONTROLE1.Visible = True
    cmdV16_WFMDDAT_CONTROLE1.Visible = True
End Sub

Private Sub V16radioNee_Click()   ' WO 18 nov 2008 punt 9
    Label214.Visible = False
    V16_WFMDDAT_CONTROLE1.Visible = False
    cmdV16_WFMDDAT_CONTROLE1.Visible = False
End Sub

Private Sub V36radioJa_Click()    ' WO 3 okt 2008 punt 9
    Label196.Visible = True
    WFMDDAT_CONTROLE2.Visible = True
    cmdDAT_CONTROLE2.Visible = True
End Sub

Private Sub V36radioNee_Click()   ' WO 3 okt 2008 punt 9
    Label196.Visible = False
    WFMDDAT_CONTROLE2.Visible = False
    cmdDAT_CONTROLE2.Visible = False
End Sub

Private Sub V50_CmdOpslaan_Click()
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_VORBRIEF", V50_WFMDDAT_VORBRIEF)
    Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_RAP_VORBRIEF1", V50_WFMDDAT_RAP_VORBRIEF1)
    Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_RAP_VORBRIEF2", V50_WFMDDAT_RAP_VORBRIEF2)
    Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_RAP_VORBRIEF3", V50_WFMDDAT_RAP_VORBRIEF3)
End Sub

Private Sub V60radioJa_Click()    ' WO 3 okt 2008 punt 9
    Label127.Visible = True
    WFMDDAT_BET_REGEL2.Visible = True
    cmdWFMDDAT_BET_REGEL2.Visible = True
End Sub

Private Sub V60radioNee_Click()    ' WO 3 okt 2008 punt 9
    Label127.Visible = False
    WFMDDAT_BET_REGEL2.Visible = False
    cmdWFMDDAT_BET_REGEL2.Visible = False
End Sub

Private Sub WFMDRAPPEL_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(WFMDRAPPEL)
End Sub

Private Sub mvUniform_DateClick(ByVal DateClicked As Date)
    Call handleVORDateMvClick(mvUniform)
End Sub

Private Sub WFMrJN_BET_REG_BRF_VER_ja_Click()
    V54_WFM_REDEN_PARKEREN = "Wacht op brief klant"
    V54_WFMDRAPPEL = AddDays(Now, RAPPEL_TERMIJN24)
End Sub
Private Sub WFMrJN_BET_REG_BRF_VERnee_Click()
    V54_WFM_REDEN_PARKEREN = ""
    V54_WFMDRAPPEL = ""
End Sub

Private Sub WFMrJN_BET_REG_INGEVRD_ja_Click()
    V56_WFMDDAT_BET_REGEL1 = Format(DateAdd("m", 3, Format(Now, "yyyy-mm-dd")), "dd-mm-yyyy")
End Sub

Private Sub WFMrJN_BET_REG_ONTV_ja_Click()
    V56_WFMDRAPPEL = ""
    V56_WFM_REDEN_PARKEREN = ""
End Sub

Private Sub WFMrJN_CORR_INHOUDING_ja_Change()
    Call Handle46V02ScreenInfo
End Sub

Private Sub WFM_VOR_ACTIE_Change()
    Call Handle46V02ScreenInfo
End Sub

Private Sub V04_AFDELING_Change()
    Call Handle46V04ScreenInfo
End Sub

Private Sub V04_NEWrJN_CORR_INHOUDING_ja_Change()
    Call Handle46V04ScreenInfo
End Sub

Private Sub V04_WFM_VOR_ACTIE_Change()
    Call Handle46V04ScreenInfo
End Sub

Private Sub V04_cmdWFMDRAPPEL_Click()
    Call handleVORDateButtonClick(Me.V04_WFMDRAPPEL, Me.V04_cmdWFMDRAPPEL, Me.mvUniform)
End Sub

Private Sub V04_WFMDRAPPEL_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(V04_WFMDRAPPEL)
End Sub

Private Sub V09_cmdRappel_Click()
    Call handleVORDateButtonClick(Me.V09_WFMDRAPPEL, Me.V09_cmdRappel, Me.mvUniform)
End Sub

Private Sub V09_WFMDRAPPEL_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(V09_WFMDRAPPEL)
End Sub

Private Sub cmdBrut_Corr_Datum_Click()
    Call handleVORDateButtonClick(Me.WFMDBRUT_CORR_DATUM, Me.cmdBrut_Corr_Datum, Me.mvUniform)
End Sub

Private Sub WFMDBRUT_CORR_DATUM_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(WFMDBRUT_CORR_DATUM)
End Sub

Private Sub V11_AFDELING_Change()
    Call Handle46V11ScreenInfo
End Sub

Private Sub V11_NEWrJN_CORR_INHOUDING_ja_Change()
    Call Handle46V11ScreenInfo
End Sub

Private Sub V11_WFM_VOR_ACTIE_Change()
    Call Handle46V11ScreenInfo
End Sub

Private Sub V11_cmdRappel_Click()
    Call handleVORDateButtonClick(Me.V11_WFMDRAPPEL, Me.V11_cmdRappel, Me.mvUniform, 142, 98)
End Sub

Private Sub V11_WFMDRAPPEL_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(V11_WFMDRAPPEL)
End Sub


Private Sub cmdV12_WFMDDAT_RAP_VORBRIEF1_Click()
    Call handleVORDateButtonClick(Me.V12_WFMDDAT_RAP_VORBRIEF1, Me.cmdV12_WFMDDAT_RAP_VORBRIEF1, Me.mvUniform)
End Sub

Private Sub V12_WFMDDAT_RAP_VORBRIEF1_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(V12_WFMDDAT_RAP_VORBRIEF1)
End Sub

Private Sub cmdV14_WFMDDAT_VORBRIEF_Click()
    Call handleVORDateButtonClick(Me.V14_WFMDDAT_VORBRIEF, Me.cmdV14_WFMDDAT_VORBRIEF, Me.mvUniform)
End Sub

Private Sub WV14_WFMDDAT_VORBRIEF_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(V14_WFMDDAT_VORBRIEF)
End Sub

Private Sub cmdWFMDDAT_RAP_VORBRIEF1_Click()
    Call handleVORDateButtonClick(Me.WFMDDAT_RAP_VORBRIEF1, Me.cmdWFMDDAT_RAP_VORBRIEF1, Me.mvUniform)
End Sub

Private Sub WFMDDAT_RAP_VORBRIEF1_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(WFMDDAT_RAP_VORBRIEF1)
End Sub

Private Sub cmdDAT_RAP_VORBRIEF2_Click()
    Call handleVORDateButtonClick(Me.WFMDDAT_RAP_VORBRIEF2, Me.cmdDAT_RAP_VORBRIEF2, Me.mvUniform)
End Sub

Private Sub WFMDDAT_RAP_VORBRIEF2_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(WFMDDAT_RAP_VORBRIEF2)
End Sub

Private Sub cmdDAT_RAP_VORBRIEF3_Click()
    Call handleVORDateButtonClick(Me.WFMDDAT_RAP_VORBRIEF3, Me.cmdDAT_RAP_VORBRIEF3, Me.mvUniform)
End Sub

Private Sub WFMDDAT_RAP_VORBRIEF3_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(WFMDDAT_RAP_VORBRIEF3)
End Sub

Private Sub cmdDAT_INCASSOBUR_BRF_Click()
      Call handleVORDateButtonClick(Me.WFMDDAT_INCASSOBUR_BRF, Me.cmdDAT_INCASSOBUR_BRF, Me.mvUniform)
End Sub
Private Sub cmdV16_WFMDDAT_CONTROLE1_Click()
      Call handleVORDateButtonClick(Me.V16_WFMDDAT_CONTROLE1, Me.cmdV16_WFMDDAT_CONTROLE1, Me.mvUniform)
End Sub
Private Sub WFMDDAT_INCASSOBUR_BRF_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(WFMDDAT_INCASSOBUR_BRF)
End Sub

Private Sub cmdDAT_VERREKEN_BRF_Click()
    Call handleVORDateButtonClick(Me.WFMDDAT_VERREKEN_BRF, Me.cmdDAT_VERREKEN_BRF, Me.mvUniform)
End Sub

Private Sub WFMDDAT_VERREKEN_BRF_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(WFMDDAT_VERREKEN_BRF)
End Sub

Private Sub cmdDAT_VERREK_BRUTUS_Click()
    Me.WFMDDAT_VERREK_BRUTUS = Format(Now, "dd-mm-yyyy")
      Call handleVORDateButtonClick(Me.WFMDDAT_VERREK_BRUTUS, Me.cmdDAT_VERREK_BRUTUS, Me.mvUniform)
End Sub

Private Sub WFMDDAT_VERREK_BRUTUS_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(WFMDDAT_VERREK_BRUTUS)
End Sub

Private Sub cmdDAT_CONTROLE1_Click()
    Call handleVORDateButtonClick(Me.WFMDDAT_CONTROLE1, Me.cmdDAT_CONTROLE1, Me.mvUniform)
End Sub

Private Sub WFMDDAT_CONTROLE1_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(WFMDDAT_CONTROLE1)
End Sub

Private Sub cmdDAT_CONTROLE2_Click()
    Call handleVORDateButtonClick(Me.WFMDDAT_CONTROLE2, Me.cmdDAT_CONTROLE2, Me.mvUniform)
End Sub

Private Sub WFMDDAT_CONTROLE2_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(WFMDDAT_CONTROLE2)
End Sub

Private Sub cmdV54_WFMDRAPPEL_Click()
    Call handleVORDateButtonClick(Me.V54_WFMDRAPPEL, Me.cmdV54_WFMDRAPPEL, Me.mvUniform)
End Sub

Private Sub V54_WFMDRAPPEL_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(V54_WFMDRAPPEL)
End Sub

Private Sub cmdV56_WFMDRAPPEL_Click()
    Call handleVORDateButtonClick(Me.V56_WFMDRAPPEL, Me.cmdV54_WFMDRAPPEL, Me.mvUniform)
End Sub

Private Sub cmd56_V56_WFMDDAT_CONTROLE1_Click()
    Call handleVORDateButtonClick(Me.V56_WFMDDAT_BET_REGEL1, Me.cmd56_V56_WFMDDAT_CONTROLE1, Me.mvUniform)
End Sub

Private Sub V56_WFMDRAPPEL_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(V56_WFMDRAPPEL)
End Sub

Private Sub cmdWFMDDAT_BET_REGEL1_Click()
    Call handleVORDateButtonClick(Me.WFMDDAT_BET_REGEL1, Me.cmdWFMDDAT_BET_REGEL1, Me.mvUniform)
End Sub

Private Sub WFMDDAT_BET_REGEL1_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(WFMDDAT_BET_REGEL1)
End Sub

Private Sub cmdWFMDDAT_BET_REGEL2_Click()
    Call handleVORDateButtonClick(Me.WFMDDAT_BET_REGEL2, Me.cmdWFMDDAT_BET_REGEL2, Me.mvUniform)
End Sub

Private Sub WFMDDAT_BET_REGEL2_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Call handleVORDateBeforeUpdate(WFMDDAT_BET_REGEL2)
End Sub

Private Sub V12_lbTemplates_Click()
Dim strTemplate         As String

    Call handleLaunchTemplate(V12_lbTemplates.Value)
End Sub

Private Sub V14_lbTemplates_Click()
    If InStr(V14_lbTemplates.Value, "1") > 0 Then
        WFMDDAT_RAP_VORBRIEF2 = AddDays(Now, RAPPEL_TERMIJN24)
    ElseIf InStr(V14_lbTemplates.Value, "2") > 0 Then
        WFMDDAT_RAP_VORBRIEF3 = AddDays(Now, RAPPEL_TERMIJN24)
    End If
    Call handleLaunchTemplate(V14_lbTemplates.Value)
End Sub

Private Sub V16_lbTemplates_Click()
    Call handleLaunchTemplate(V16_lbTemplates.Value)
End Sub

Private Sub V26_lbTemplates_Click()
    Call handleLaunchTemplate(V26_lbTemplates.Value)
End Sub

Private Sub V54_lbTemplates_Click()
    Call handleLaunchTemplate(V54_lbTemplates.Value)
End Sub

' + + + + + einde van de events op de tabbladen

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError Me.name & ".cmdTerug_Click"
End Sub

Private Sub cmdExtraScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    If YetAnotherExtralink(WIViewer, ("0" + WFM_NR_COLLECTIVITEIT.Text)) Then
        Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
        ' cmdScreen_Click
    End If
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Screenscraping niet gelukt!"
End Sub

Private Sub cmdOpslaan_Click()
Dim myIdent             As String

    On Error GoTo EH
    If sTargetSId = "46V08" Then
        If V08_AFDELING <> "" Then
            WFM_DOORZENDEN_NAAR = V08_AFDELING
        End If
    End If
    If Not WorkflowSave(WIViewer) Then Exit Sub
    If sTargetSId = "46V02" Then
'       De velden WFM_NR_KLANT, WFM_NAAM_KLANT, WFM_IND_HUPO, WFM_NR_CONTRACT zijn verplicht
        If WFM_NR_COLLECTIVITEIT <> "" Then
            If WFM_NR_KLANT = "" Or WFM_NAAM_KLANT = "" Or WFM_IND_HUPO = "" Or WFM_NR_CONTRACT = "" Then
                MsgBox "De velden KLANTNR, KLANTNAAM, RELATIEBEHEERDER, CONTRACTNR zijn verplicht bij Collectiviteit"
                Exit Sub
            End If
        End If
    End If
    Call SaveFrameFormFields
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError Me.name & ".cmdOpslaan_Click"
End Sub

Private Sub imgCAESAR_Click()
Dim nrTemp              As String

    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    If WFM_NR_COLLECTIVITEIT <> "" Then
        nrTemp = WFM_BEDRIJFSCODE + "/" + WFM_NR_COLLECTIVITEIT
    Else
        nrTemp = WFM_BEDRIJFSCODE + "/" + WFM_NR_BEGUNSTIGDE
    End If
    Call ExtralinkAlg("UJ", "ISBG", nrTemp, WIViewer)    ' MaBr 02062008 uitzoeken juiste scherm..
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
End Sub

Private Sub imgNotitie_Click()
    On Error GoTo EH
    Set frmNotitie.rsViewer = WIViewer
    If Not ((WIViewer.CALClientListItem.Info.Status And calObjStatusWIP) = calObjStatusWIP) Then
        frmNotitie.lblAddNote.Enabled = False
    End If
    frmNotitie.Show 1
    Exit Sub

EH:
    DisplayError Me.name & ".imgNotitie_Click"
End Sub

Private Sub IMGsnelzoek_Click()
    On Error GoTo EH
    frmQuery.QRYTextBox15 = WFM_NR_BEGUNSTIGDE
    frmQuery.cmdFind_Click
    frmQuery.Show 0
    Exit Sub

EH:
    DisplayError Me.name & ".IMGsnelzoek_Click"
End Sub

Private Sub ImgWord_Click()
    Call StartBrief(WIViewer, "Word")
End Sub

Private Sub UserForm_Activate()
    On Error GoTo EH
    Call initForm ' initieeren van form (Welke velden tonen).
    Exit Sub

EH:
    DisplayError Me.name & ".UserForm_Activate"
End Sub

Private Sub initForm()
Dim rs          As adodb.Recordset
Static Init     As Boolean

    On Error GoTo EH
'   Slechts eenmaal doorl open
    If Init Then Exit Sub
    Init = True
'   Besturing voor de juiste layout van de form
'   Default waardes positie frames
    intLeft = 6
    intVerticalSpace = 4
    intTop = intVerticalSpace + Me.imgCAESAR.Height + intVerticalSpace
'   Op basis van de WorkstepVORFlow wordt bepaald welke velden van het
'   Tabblad "Proces" op het VBA indexform getoond worden.
    WorkstepVorFlow = GetWorkstep(WIViewer)
    sTargetSId = Left(WorkstepVorFlow, 5)
'   Reset alle frames
    Call ResetAllFrames
    Call RetrieveFrameFormFields
'   Obv target screen id de opbouw van de form bepalen
    If sTargetSId = "46V02" Then
        Call SetupForm46V02
    ElseIf sTargetSId = "46V04" Then
        Call SetupForm46V04
    ElseIf sTargetSId = "46V08" Then
        Call SetupForm46V08
    ElseIf sTargetSId = "46V09" Then
        Call SetupForm46V09
    ElseIf sTargetSId = "46V10" Then
        Call SetupForm46V10
    ElseIf sTargetSId = "46V11" Then
        Call SetupForm46V11
    ElseIf sTargetSId = "46V12" Then
        Call SetupForm46V12
    ElseIf sTargetSId = "46V14" Then
        Call SetupForm46V14
    ElseIf sTargetSId = "46V15" Then
        Call SetupForm46V14             ' Let op V15 gebruikt hetzelfde frame als V14
    ElseIf sTargetSId = "46V16" Then
        Call SetupForm46V16
    ElseIf sTargetSId = "46V26" Then
        Call SetupForm46V26
    ElseIf sTargetSId = "46V30" Then
        Call SetupForm46V30
    ElseIf sTargetSId = "46V36" Then
        Call SetupForm46V36
    ElseIf sTargetSId = "46V40" Then
        Call SetupForm46V40
    ElseIf sTargetSId = "46V54" Then
        Call SetupForm46V54
    ElseIf sTargetSId = "46V56" Then
        Call SetupForm46V56
    ElseIf sTargetSId = "46V60" Then
        Call SetupForm46V60
    ElseIf sTargetSId = "46V50" Then
        Call SetupForm46V50
    Else
        Call Err.Raise(12345, , "Er is een onjuiste formFlowId gebruikt")
        GoTo EH
    End If
'   Vul het tabblad data
    If Not IsCollectief() Then
        Me.MultiPage1.pages("Data").Visible = True
        Call SetControlProps(Me.lvUitkeringsGegs, intVerticalSpace, Me.MultiPage1.Width)
        lvUitkeringsGegs.Width = Me.MultiPage1.Width - intLeft
        lvUitkeringsGegs.Height = Me.MultiPage1.Height - 18
        ' besturing init tabblad data
        Me.lvUitkeringsGegs.ColumnHeaders.Add , , , 0, 0 ', Alignment:=1
        AddResultField lvUitkeringsGegs, "NR_POLIS", "DLN Nummer", 54, 0, False
        AddResultField lvUitkeringsGegs, "IND_SCHULD", "Ind Schuld", 12.75, 0, False
        AddResultField lvUitkeringsGegs, "NR_CONTRACT", "Contract NR", 45, 0, False
        AddResultField lvUitkeringsGegs, "IND_HUPO", "HUPO", 60.75, 0, False
        AddResultField lvUitkeringsGegs, "NR_KLANT", "Klant Nr", 36, 0, False
        AddResultField lvUitkeringsGegs, "NR_AEGAR_KLANT", "AEGAR NR", 49.5, 0, False
        AddResultField lvUitkeringsGegs, "IND_AFVOER", "Ind Afvoer", 12.75, 0, False
        AddResultField lvUitkeringsGegs, "MUT_SOORT", "MutSrt", 36, 0, False
        AddResultField lvUitkeringsGegs, "PENSIOEN_SOORT", "Pens Soort", 100.75, 0, False
        '-----
        ' Als de standaard-breedte van deze kolommen wil bepalen, kan je de onderstaande statement gebruiken
        ' eerst tonen, dan naar wens aanpassen en dan de onderstaande regel laten lopen
        ' for i = 1 to 8: print "<" & i & ">" & Me.lvUitkeringsGegs.ColumnHeaders.Item(i).Width & " ": next i
        '-----
        ' vullen van tabblad data
        Set rs = SQLGetUitkeringGegs(Me.WFM_BEDRIJFSCODE, Me.WFM_NR_BEGUNSTIGDE, Format(Me.WFMDDAT_MELD, "yyyy-mm-dd"))
        Call DumpRecordSetInListView(Me.lvUitkeringsGegs, rs)
    End If
'   Init fields
    Me.AFDELING.Value = ""
    Exit Sub

EH:
    Call DisplayError(Me.name & ".initform")
End Sub

Private Sub SetupForm46V02()
    On Error GoTo EH
    Call SetupVorForm
    Call Handle46V02ScreenInfo
    Call SetControlProps(Me.frame46V02TabProces, intVerticalSpace, Me.MultiPage1.Width)
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupForm46V02")
End Sub

Private Sub Handle46V02ScreenInfo()
    On Error GoTo EH
    Call HandleInterneInfo(Me.AFDELING, Me.WFMrJN_CORR_INHOUDING_ja, Me.WFMrJN_CORR_INHOUDINGnee, _
        Me.WFM_VOR_ACTIE)
    Call HandleRappelTonen(Me.AFDELING, Me.WFMDRAPPEL, Me.cmdRappel, Me.WFM_REDEN_PARKEREN, _
        V02_lblRappel, V02_lblReden)
    ' Mabr module maken ook voor v04 en v11
        lblRB.Visible = False
        V02_WFM_IND_HUPO = ""
        V02_WFM_IND_HUPO.Visible = False
        V02_WFM_IND_HUPO.Clear
        
''Q1 Release 2012 CR No. 153254 Dept Changes
        If Me.AFDELING = "" Then
            lblRB.Visible = False
             V02_WFM_IND_HUPO.Visible = False
        ElseIf Me.AFDELING <> "PIN" And Me.AFDELING <> "FEP" And Me.AFDELING <> "SCL" And Me.AFDELING <> "AVN" Then
            Call FillBehandelaars(Me.V02_WFM_IND_HUPO, Me.AFDELING)
            lblRB.Visible = True
            V02_WFM_IND_HUPO.Visible = True
        End If
    Exit Sub

EH:
    Call DisplayError(Me.name & ".Handle46V02ScreenInfo")
End Sub

Private Sub SetupForm46V04()
    On Error GoTo EH
    Call SetupVorForm
    Call Handle46V04ScreenInfo
    Call SetControlProps(Me.frame46V04TabProces, intVerticalSpace, Me.MultiPage1.Width)
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupForm46V04")
End Sub

Private Sub Handle46V04ScreenInfo()
    On Error GoTo EH
    Call HandleInterneInfo(Me.V04_AFDELING, Me.V04_NEWrJN_CORR_INHOUDING_ja, Me.V04_NEWrJN_CORR_INHOUDINGnee, _
        Me.V04_WFM_VOR_ACTIE)
    Call HandleRappelTonen(Me.V04_AFDELING, Me.V04_WFMDRAPPEL, Me.V04_cmdWFMDRAPPEL, Me.V04_WFM_REDEN_PARKEREN, _
        V04_lblRappel, V04_lblReden)
            ' Mabr module maken ook voor v04 en v11
        lblRBV04.Visible = False
        V04_WFM_IND_HUPO = ""
        V04_WFM_IND_HUPO.Visible = False
        V04_WFM_IND_HUPO.Clear
        
''Q1 Release 2012 CR No. 153254 Dept Changes
        If Me.V04_AFDELING = "" Then
            lblRBV04.Visible = False
             V04_WFM_IND_HUPO.Visible = False
        ElseIf Me.V04_AFDELING <> "PIN" And Me.V04_AFDELING <> "FEP" And Me.V04_AFDELING <> "SCL" And Me.V04_AFDELING <> "AVN" Then
            Call FillBehandelaars(Me.V04_WFM_IND_HUPO, Me.V04_AFDELING)
            lblRBV04.Visible = True
            V04_WFM_IND_HUPO.Visible = True
        End If
    Exit Sub

EH:
    Call DisplayError(Me.name & ".Handle46V04ScreenInfo")
End Sub

Private Sub SetupForm46V08()
    On Error GoTo EH
    Call SetupVorForm
    Call SetControlProps(Me.frame46V08TabProces, intVerticalSpace, Me.MultiPage1.Width)
    Call vulBehandelGroep(V08_AFDELING.Value, WFM_BEH_GROEP)
    Me.MultiPage1.pages("Data").Visible = True
    Me.MultiPage1.Value = 0
    Me.MultiPage1.TabIndex = 1
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupForm46V08")
End Sub

Private Sub SetupForm46V09()
    On Error GoTo EH
    Call SetupVorForm
    Call SetControlProps(Me.frame46V09TabProces, intVerticalSpace, Me.MultiPage1.Width)
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupForm46V09")
End Sub

Private Sub SetupForm46V10()
    On Error GoTo EH
    Call SetupVorForm
    Call SetControlProps(Me.frame46V10TabProces, intVerticalSpace, Me.MultiPage1.Width)
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupForm46V10")
End Sub

Private Sub SetupForm46V11()
    On Error GoTo EH
    Call SetupVorForm
    Call Handle46V11ScreenInfo
    Call SetControlProps(Me.frame46V11TabProces, intVerticalSpace, Me.MultiPage1.Width)
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupForm46V11")
End Sub

Private Sub Handle46V11ScreenInfo()
    On Error GoTo EH
    Call HandleInterneInfo(Me.V11_AFDELING, Me.V11_NEWrJN_CORR_INHOUDING_ja, Me.V11_NEWrJN_CORR_INHOUDINGnee, Me.V11_WFM_VOR_ACTIE)
    Call HandleRappelTonen(Me.V11_AFDELING, Me.V11_WFMDRAPPEL, Me.V11_cmdRappel, Me.V11_WFM_REDEN_PARKEREN, V11_lblRappel, V11_lblReden)
'   JN naar incasso
'   Mabr module maken ook voor v04 en v11
    lblRBV11.Visible = False
    V11_WFM_IND_HUPO = ""
    V11_WFM_IND_HUPO.Visible = False
    V11_WFM_IND_HUPO.Clear
    
''Q1 Release 2012 CR No. 153254 Dept Changes
    If Me.V11_AFDELING = "" Then
        lblRBV11.Visible = False
        V11_WFM_IND_HUPO.Visible = False
    ElseIf Me.V11_AFDELING <> "PIN" And Me.V11_AFDELING <> "FEP" And Me.V11_AFDELING <> "SCL" And Me.V11_AFDELING <> "AVN" Then
        Call FillBehandelaars(Me.V11_WFM_IND_HUPO, Me.V11_AFDELING)
        lblRBV11.Visible = True
        V11_WFM_IND_HUPO.Visible = True
    End If
    Exit Sub

EH:
    Call DisplayError(Me.name & ".Handle46V11ScreenInfo")
End Sub

Private Sub SetupForm46V12()
    On Error GoTo EH
    Call SetupVorForm
    Call SetControlProps(Me.frame46V12TabProces, intVerticalSpace, Me.MultiPage1.Width)
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupForm46V12")
End Sub

Private Sub SetupForm46V14()
    On Error GoTo EH
    Call SetupVorForm
    Call SetControlProps(Me.frame46V14TabProces, intVerticalSpace, Me.MultiPage1.Width)
    If sTargetSId = "46V14" Then
        V14_WFMDDAT_VORBRIEF.Enabled = True
        cmdV14_WFMDDAT_VORBRIEF.Enabled = True
        WFMDDAT_RAP_VORBRIEF1.Enabled = True
        cmdWFMDDAT_RAP_VORBRIEF1.Enabled = True
        WFMDDAT_RAP_VORBRIEF2.Enabled = True
        cmdDAT_RAP_VORBRIEF2.Enabled = True
        WFMDDAT_RAP_VORBRIEF3.Enabled = True
        cmdDAT_RAP_VORBRIEF3.Enabled = True
        V14_lbTemplates.Enabled = True
        WFMrJN_VOR_GEREED_ja.Enabled = True
        WFMrJN_VOR_GEREEDnee.Enabled = True
        Me.Label215.Visible = False
        Me.WFMrJN_REMISE_FIAT_ja.Visible = False
        Me.WFMrJN_REMISE_FIATnee.Visible = False
        Me.WFMrJN_REMISE_FIATonb.Visible = False
    Else
        V14_WFMDDAT_VORBRIEF.Enabled = False
        cmdV14_WFMDDAT_VORBRIEF.Enabled = False
        WFMDDAT_RAP_VORBRIEF1.Enabled = False
        cmdWFMDDAT_RAP_VORBRIEF1.Enabled = False
        WFMDDAT_RAP_VORBRIEF2.Enabled = False
        cmdDAT_RAP_VORBRIEF2.Enabled = False
        WFMDDAT_RAP_VORBRIEF3.Enabled = False
        cmdDAT_RAP_VORBRIEF3.Enabled = False
        V14_lbTemplates.Enabled = False
        WFMrJN_VOR_GEREED_ja.Enabled = False
        WFMrJN_VOR_GEREEDnee.Enabled = False
        Me.Label215.Visible = True
        Me.WFMrJN_REMISE_FIAT_ja.Visible = True
        Me.WFMrJN_REMISE_FIATnee.Visible = True
        Me.WFMrJN_REMISE_FIATonb.Visible = True
    End If
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupForm46V14")
End Sub

Private Sub SetupForm46V16()
    On Error GoTo EH
    Call SetupVorForm
    Call SetControlProps(Me.frame46V16TabProces, intVerticalSpace, Me.MultiPage1.Width)
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupForm46V16")
End Sub

Private Sub SetupForm46V26()
    On Error GoTo EH
    Call SetupVorForm
    Call SetControlProps(Me.frame46V26TabProces, intVerticalSpace, Me.MultiPage1.Width)
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupForm46V26")
End Sub

Private Sub SetupForm46V30()
    On Error GoTo EH
    Call SetupVorForm
    Call Handle46V030ScreenInfo
    Call SetControlProps(Me.frame46V30TabProces, intVerticalSpace, Me.MultiPage1.Width)
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupForm46V30")
End Sub

Private Sub Handle46V030ScreenInfo()
    On Error GoTo EH
    If Right(GetWorkstep(WIViewer), 4) = "Fiat" Then
        frame46V30Fiat.Visible = True
        WFMrJN_AFBOEK_GEMAAKT_ja.Enabled = False
        WFMrJN_AFBOEK_GEMAAKTnee.Enabled = False
    Else
        frame46V30Fiat.Visible = False
    End If
    Exit Sub

EH:
    Call DisplayError(Me.name & ".Handle46V30ScreenInfo")
End Sub

Private Sub SetupForm46V36()
    On Error GoTo EH
    Call SetupVorForm
    Call SetControlProps(Me.frame46V36TabProces, intVerticalSpace, Me.MultiPage1.Width)
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupForm46V36")
End Sub

Private Sub SetupForm46V40()
    On Error GoTo EH
    Call SetupVorForm
    Me.MultiPage1.pages("data").Visible = True
    Me.MultiPage1.Value = 1
    Me.MultiPage1.pages("Proces").Visible = False
    Me.MultiPage1.TabIndex = 1
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupForm46V40")
End Sub

Private Sub SetupForm46V50()
    On Error GoTo EH
    Call SetupVorForm
    Call SetControlProps(Me.frame46V50TabProces, intVerticalSpace, Me.MultiPage1.Width)
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupForm46V50")
End Sub

Private Sub SetupForm46V54()
    On Error GoTo EH
    Call SetupVorForm
    Call Handle46V54ScreenInfo
    Call SetControlProps(Me.frame46V54TabProces, intVerticalSpace, Me.MultiPage1.Width)
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupForm46V54")
End Sub

Private Sub Handle46V54ScreenInfo()
    On Error GoTo EH
    Exit Sub

EH:
    Call DisplayError(Me.name & ".Handle46V54ScreenInfo")
End Sub

Private Sub SetupForm46V56()
    On Error GoTo EH
    Call SetupVorForm
    Call SetControlProps(Me.frame46V56TabProces, intVerticalSpace, Me.MultiPage1.Width)
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupForm46V56")
End Sub

Private Sub SetupForm46V60()
    On Error GoTo EH
    Call SetupVorForm
    Call SetControlProps(Me.frame46V60TabProces, intVerticalSpace, Me.MultiPage1.Width)
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupForm46V60")
End Sub

Private Sub HandleInterneInfo(ByRef afd As Control, ByRef ciJa As Control, _
                              ByRef ciNee As Control, ByRef act As Control)
' Toon 1 van de 3 volgende sets velden
'   of afdeling, rappel, knop, monthview en reden rappel
'   of correcties inhoudingen
'   of vordering actie
' Dit is afhankelijk van de inhoud van deze velden.
Dim ToonInterneInfo     As Boolean
Dim ToonCorrecties      As Boolean
Dim ToonActie           As Boolean

    On Error GoTo EH
'   Condities
    If (ciJa = False) And (act.Value = "") And (afd.Value = "") Then
        ToonInterneInfo = True
        ToonCorrecties = True
        ToonActie = True
    Else
        ToonInterneInfo = (afd.Value <> "")
        ToonCorrecties = (ciJa.Value = True)
        ToonActie = (act.Value <> "")
    End If
    ' toon velden?
    afd.Enabled = ToonInterneInfo
    ciJa.Enabled = ToonCorrecties
    ciNee.Enabled = ToonCorrecties
    act.Enabled = ToonActie
    ' init velden
    If ToonCorrecties Or ToonActie Then
        afd.Value = ""
    End If
    If ToonInterneInfo Or ToonActie Then
        ciNee.Value = True
    End If
    If ToonInterneInfo Or ToonCorrecties Then
        act.Value = ""
    End If
    Exit Sub

EH:
    DisplayError Me.name & ".HandleInterneInfo"
End Sub

Private Sub HandleRappelTonen(ByVal afd As ComboBox, ByRef rap As TextBox, ByRef knp As CommandButton, _
                              ByRef red As TextBox, ByRef lb1 As Label, ByRef lb2 As Label)
Dim ToonRappel      As Boolean

    On Error GoTo EH
'   Condities
    ToonRappel = afd.Value = "AVN" Or afd.Value = "FEP" Or afd.Value = "SCL"
    ' toon velden?
    rap.Enabled = ToonRappel
    rap.Visible = ToonRappel
    knp.Enabled = ToonRappel
    knp.Visible = ToonRappel
    red.Enabled = ToonRappel
    red.Visible = ToonRappel
    lb1.Visible = ToonRappel
    lb2.Visible = ToonRappel
    ' init velden
    If ToonRappel Then
        If rap.Value = 0 Then
            rap.Value = Format(Now + RAPPEL_TERMIJN14, "dd-mm-yyyy")
        End If
    Else
        rap.Value = 0
        red.Value = ""
    End If
    Exit Sub

EH:
    DisplayError Me.name & ".HandleRappelTonen"
End Sub

Private Sub SetupVorForm()
    On Error GoTo EH
    Me.Width = 300
    Me.MultiPage1.Width = Me.Width - 18
'   Frames op form
    Call SetupFrameBeguColl(intTop)
'   Tabbladen
    Call SetPositionUnder(Me.MultiPage1, Me.frameBeguColl)
    Me.MultiPage1.Height = Me.cmdOpslaan.Top - intVerticalSpace - Me.MultiPage1.Top
    Me.MultiPage1.Visible = True
    Me.MultiPage1.pages("Proces").Visible = True
'   Frame op tabblad
    Me.MultiPage1.TabIndex = 0
    Me.Height = 634
    Me.frameAlgBeguColl.Enabled = False
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupVorForm")
End Sub

Private Sub SetupFrameBeguColl(ByVal iTop As Integer)
' Setup top frame, qua inhoud en plaats
' Afhankelijk van collectiviteit worden we 2 verschillende frame varianten opgebouwd
Dim iFrameTop       As Integer
Const LEFT_TAB = 6

    On Error GoTo EH
'   Reset alle varianten
    Call SetControlProps(Me.frameBeguColl, iTop, Me.Width)
    Me.lblWFM_NR_BEGUNSTIGDE.Visible = False
    Me.WFM_NR_BEGUNSTIGDE.Visible = False
    Me.lblWFM_NR_COLLECTIVITEIT.Visible = False
    Me.WFM_NR_COLLECTIVITEIT.Visible = False
    Me.frameVerrekeningsgegevens.Visible = False
    Me.frameCollectiviteitKlantdata.Visible = False
'   Opbouw variant
    iFrameTop = Me.frameAlgBeguColl.Height + intVerticalSpace
    If IsCollectief() Then
        Me.frameAlgBeguColl.Caption = "Algemeen collectiviteit"
        Me.lblWFM_NR_COLLECTIVITEIT.Visible = True
        Call SetPositionUnder(Me.lblWFM_NR_COLLECTIVITEIT, Me.lblBEDRIJFSCODE)
        Me.WFM_NR_COLLECTIVITEIT.Visible = True
        Call SetPositionUnder(Me.WFM_NR_COLLECTIVITEIT, Me.WFM_BEDRIJFSCODE)
        Me.frameCollectiviteitKlantdata.Visible = True
        Call SetPositionUnder(Me.frameCollectiviteitKlantdata, Me.frameAlgBeguColl)
        Call SetPositionUnder(Me.frameZonder01, Me.frameCollectiviteitKlantdata)
    Else
        Me.frameAlgBeguColl.Caption = "Algemeen begunstigde"
        Me.lblWFM_NR_BEGUNSTIGDE.Visible = True
        Call SetPositionUnder(Me.lblWFM_NR_BEGUNSTIGDE, Me.lblBEDRIJFSCODE)
        Me.WFM_NR_BEGUNSTIGDE.Visible = True
        Call SetPositionUnder(Me.WFM_NR_BEGUNSTIGDE, Me.WFM_BEDRIJFSCODE)
        Me.frameVerrekeningsgegevens.Visible = True
        Call SetPositionUnder(Me.frameVerrekeningsgegevens, Me.frameAlgBeguColl)
        Call SetPositionUnder(Me.frameZonder01, Me.frameVerrekeningsgegevens)
        Me.frameVerrekeningsgegevens.Enabled = False
        TMP_VER_BEDRIJFSCODE = WFM_BEDRIJFSCODE
    End If
    Me.frameBeguColl.Height = Me.frameZonder01.Height + Me.frameZonder01.Top
'   Altijd zichtbaar
    Me.frameBeguColl.Visible = True
    Me.frameAlgBeguColl.Visible = True
    Me.frameZonder01.Visible = True
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupFrameBeguColl")
End Sub

Private Function IsCollectief()
' Bepaal of er sprake is van 'n collectief
    On Error GoTo EH
    If Me.WFM_NR_BEGUNSTIGDE = "" Then
        IsCollectief = True
    Else
        IsCollectief = False
    End If
    Exit Function

EH:
    Call DisplayError(Me.name & ".isCollectief")
End Function

Private Sub SetPositionUnder(ByRef cU As Control, ByVal cT As Control)
' Plaats control cU precies onder cT
Const VERTICAL_TAB = 2

    On Error GoTo EH
    cU.Left = cT.Left
    cU.Top = cT.Top + cT.Height + VERTICAL_TAB
    If Left(cT.name, 3) = "lbl" Then cU.Top = cU.Top + 4
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetPositionUnder")
End Sub

Private Sub SetControlProps(ByVal c As Control, ByVal t As Integer, ByVal w As Integer)
'   Set de frame propeties in 'n tabblad
    On Error GoTo EH
'   Positie links
    c.Left = intLeft
'   Positie top
    c.Top = t
'   Breedte
    c.Width = w - intLeft - 10
'   Zichtbaar
    c.Visible = True
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetControlProps")
End Sub

Private Sub ResetAllFrames()
' Set alle frames op invisible
    On Error GoTo EH
    Me.frameBeguColl.Visible = False
    Me.frameAlgBeguColl.Visible = False
    Me.MultiPage1.Visible = False
    Me.MultiPage1.pages("Data").Visible = False
    Me.frame46V02TabProces.Visible = False
    Me.frame46V04TabProces.Visible = False
    Me.frame46V08TabProces.Visible = False
    Me.frame46V09TabProces.Visible = False
    Me.frame46V10TabProces.Visible = False
    Me.frame46V11TabProces.Visible = False
    Me.frame46V12TabProces.Visible = False
    Me.frame46V14TabProces.Visible = False
    Me.frame46V16TabProces.Visible = False
    Me.frame46V26TabProces.Visible = False
    Me.frame46V30TabProces.Visible = False
    Me.frame46V36TabProces.Visible = False
    Me.frame46V54TabProces.Visible = False
    Me.frame46V56TabProces.Visible = False
    Me.frame46V60TabProces.Visible = False
    Exit Sub

EH:
    Call DisplayError(Me.name & ".ResetAllFrames")
End Sub

Private Sub SetupBehandelaars()
    Call FillBehandelaars(Me.WFM_FEP_BEHANDELAAR, "VOR")
End Sub

Private Sub FillBehandelaars(ByRef cb As Control, A As String)
' Setup listbox behandelaar
Dim vUser       As Variant
Dim s           As String

    On Error GoTo EH
    s = cb.Value
'   Vullen van cb met users met de afdeling = "VOR"
    For Each vUser In GetUsersPerAfdeling(A)
        cb.AddItem vUser
    Next
    On Error Resume Next
    cb.Value = s
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupBehandelaars")
End Sub

Private Sub SetupPrioriteit()
' Setup combobox prioriteit
    On Error GoTo EH
    InitPrios
    Me.WFM_PRIORITEIT.ColumnCount = 2
    Me.WFM_PRIORITEIT.BoundColumn = 1
    Me.WFM_PRIORITEIT.TextColumn = -1
    Me.WFM_PRIORITEIT.ColumnWidths = "15;"
    Me.WFM_PRIORITEIT.list = astrPrios
    Exit Sub

EH:
    Call DisplayError(Me.name & ".GetPrioriteit")
End Sub

Private Sub AddResultField(ListView As ListView, name, Caption, Witdh, Align, ResultOnly As Boolean)
' setup field in 'n listview
Dim myColHeader     As ColumnHeader

    On Error GoTo EH
    Set myColHeader = ListView.ColumnHeaders.Add(, name, Caption, Witdh, Align)
    myColHeader.Tag = ResultOnly
    Exit Sub

EH:
    Call DisplayError(Me.name & ".AddResultField")
End Sub

Private Sub DumpRecordSetInListView(ByRef lv As ListView, ByVal rs As adodb.Recordset, Optional Init As Boolean = True)
' Zet Recordset in Listview
Dim itmx        As ListItem
Dim x           As Integer
Dim fieldName   As String

    On Error GoTo EH
    If Init Then Call ClearListView(lv)
    While Not rs.EOF()
        Set itmx = lv.ListItems.Add()
'       x is de Listview kolom (doel)
        For x = 1 To lv.ColumnHeaders.Count
            fieldName = lv.ColumnHeaders.item(x).Key
            If fieldName <> "" Then
                If fieldName = "MUT_SOORT" Or fieldName = "PENSIOEN_SOORT" Then
                    If Not IsNull(rs(fieldName)) Then itmx.SubItems(x - 1) = rs(fieldName)
                Else
                    itmx.SubItems(x - 1) = rs(fieldName)
                End If
            End If
        Next x
        rs.MoveNext
    Wend
    Exit Sub

EH:
    Call DisplayError(Me.name & ".DumpRecordSetInListView")
End Sub

Private Sub SetupAfdeling(ByRef afd As Control)
Dim strAfdeling     As String

''Q1 Release 2012 CR No. 153254 Dept Changes
    On Error GoTo EH
    Call afd.AddItem("")
    Call afd.AddItem("AVN")
    Call afd.AddItem("PTA")
    Call afd.AddItem("PTB")
    Call afd.AddItem("PTC")
    Call afd.AddItem("PTD")
    Call afd.AddItem("FEP")
    Call afd.AddItem("FND")
    Call afd.AddItem("FAL")
    Call afd.AddItem("PTE")
    Call afd.AddItem("PTF")
    Call afd.AddItem("PTG")
    Call afd.AddItem("PTH")
    Call afd.AddItem("APP")                             '[PAC] 17MAR15 - PTN --> APP - TD172461
    Call afd.AddItem("PTI")
    Call afd.AddItem("PPI")
    Call afd.AddItem("PTL")                             '[PAC] - TD17266
    Call afd.AddItem("PTR")                             '[PAC] - TD17266
    Call afd.AddItem("PIN")
    Call afd.AddItem("SCL")
    afd.Value = strAfdeling
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupAfdeling")
End Sub

Private Sub SetupAfdelingV08(ByRef afd As Control)
Dim strAfdeling     As String

''Q1 Release 2012 CR No. 153254 Dept Changes
    On Error GoTo EH
    Call afd.AddItem("")
    Call afd.AddItem("PTA")
    Call afd.AddItem("PTB")
    Call afd.AddItem("PTC")
    Call afd.AddItem("PTD")
    Call afd.AddItem("FND")
    Call afd.AddItem("FAL")
    Call afd.AddItem("PTE")
    Call afd.AddItem("PTF")
    Call afd.AddItem("PTG")
    Call afd.AddItem("PTH")
    Call afd.AddItem("APP")                             '[PAC] 17MAR15 - PTN --> APP - TD172461
    Call afd.AddItem("PTI")
    Call afd.AddItem("PPI")
    Call afd.AddItem("PTL")                             '[PAC] - TD17266
    Call afd.AddItem("PTR")                             '[PAC] - TD17266
    Call afd.AddItem("PIN")
    afd.Value = strAfdeling
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupAfdelingV08")
End Sub

Private Sub SetupVorActie(ByRef act As Control)
Dim strVorActie     As String

    On Error GoTo EH
    Call act.AddItem("")
    Call act.AddItem("Afboeken")
    Call act.AddItem("Verrekenen")
    Call act.AddItem("Terugvorderen")
    act.Value = strVorActie
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupVorActie")
End Sub

Private Sub handleVORDateButtonClick(ByRef df As Control, ByVal b As CommandButton, ByRef mv As MonthView, _
                                     Optional tp As Integer, Optional lp As Integer)
' Handel de verwerking van de "date-button" af.
' Per scherm is voor elk datumveld 1 TextBox en 1 CommandButton nodig,
' maar slechts 1 MonthView voor alle "date-buttons"
' Positioneer de MonthView onder de onderste CommandButton, zodat je zeker weet dat deze in het frame past.
Dim t       As Integer
Dim l       As Integer
Dim h       As Object
Dim i       As Integer

    On Error Resume Next
    If df.Value = "" Or df.Value = 0 Then
        df.Value = Format(Now + RAPPEL_TERMIJN24, "dd-mm-yyyy")
    End If
    If Not mv.Visible Then
        mv.Visible = True
        If tp = 0 And lp = 0 Then
            Set h = b
            t = h.Height + 8
            l = b.Width - mv.Width
            i = 0
            While h.name <> "Proces" And TypeName(h) <> "Page" And i < 10
                t = t + h.Top
                l = l + h.Left
                Set h = h.Parent
                i = i + 1
            Wend
            If i >= 10 Then MsgBox "er is een probleem met het positioneren van de kalender"
        Else
            t = tp
            l = lp
        End If
        mv.Top = t
        mv.Left = l
        If Not df = 0 Then mv = df
    Else
        mv.Visible = False
    End If
    Call mv.Zorder
'   Set een globale variabele om met slechts 1 MonthView te hoeven werken
    Set currentDateField = df
End Sub

Private Sub handleVORDateBeforeUpdate(ByRef df As Control)
' Handel de datum before update af
    On Error GoTo EH
    Call DateCheck(df)
    df.BackColor = TextboxWhite
    Call DateCheckBefore(df)
    Exit Sub

EH:
    Call DisplayError(Me.name & ".handleVORDateBeforeUpdate")
End Sub

Private Sub handleVORDateMvClick(ByRef mv As Control)
' Handel de klik in de monthview af
    On Error GoTo EH
    currentDateField = Format(mv, "dd-mm-yyyy")
    mv.Visible = False
    currentDateField.SetFocus
    Exit Sub

EH:
    Call DisplayError(Me.name & ".handleVORDateMvClick")
End Sub

Private Sub SaveFrameFormFields()
    On Error GoTo EH
    If sTargetSId = "46V02" Then
'       De velden WFM_NR_KLANT, WFM_NAAM_KLANT, WFM_IND_HUPO, WFM_NR_CONTRACT zijn verplicht
        If WFM_NR_COLLECTIVITEIT <> "" Then
            If WFM_NR_KLANT = "" Or WFM_NAAM_KLANT = "" Or WFM_IND_HUPO = "" Or WFM_NR_CONTRACT = "" Then
                MsgBox "De velden KLANTNR, KLANTNAAM, Relatiebeheerder, CONTRACTNR zijn verplicht bij Collectiviteit"
                Exit Sub
            End If
        End If
        Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "JN_INTERNE_INFO", GetJNValue(AFDELING.Value <> ""))
        Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR", AFDELING)
        Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "IND_HUPO", V02_WFM_IND_HUPO)
    ElseIf sTargetSId = "46V04" Then
        Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "RAPPEL", V04_WFMDRAPPEL)
        Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "REDEN_PARKEREN", V04_WFM_REDEN_PARKEREN)
        Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "VOR_ACTIE", V04_WFM_VOR_ACTIE)
        If V04_AFDELING <> "" Then
              Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR", V04_AFDELING)
        End If
        Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "JN_INTERNE_INFO", GetJNValue(V04_AFDELING.Value <> ""))
        Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "JN_CORR_INHOUDING", GetJNValue(V04_NEWrJN_CORR_INHOUDING_ja))
        Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "IND_HUPO", V04_WFM_IND_HUPO)
    ElseIf sTargetSId = "46V08" Then
    ElseIf sTargetSId = "46V09" Then
        Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "RAPPEL", V09_WFMDRAPPEL)
        Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "REDEN_PARKEREN", V09_WFM_REDEN_PARKEREN)
        Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "JN_VERZK_AFGEHAND", GetJNValue(V09_WFMrJN_VERZK_AFGEHAND_ja))
    ElseIf sTargetSId = "46V10" Then
    ElseIf sTargetSId = "46V11" Then
        Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "JN_INTERNE_INFO", GetJNValue(V11_AFDELING.Value <> ""))
        If V11_AFDELING <> "" Then
            Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR", V11_AFDELING)
        End If
        Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "JN_CORR_INHOUDING", GetJNValue(V11_NEWrJN_CORR_INHOUDING_ja))
        Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "RAPPEL", V11_WFMDRAPPEL)
        Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "REDEN_PARKEREN", V11_WFM_REDEN_PARKEREN)
        Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "VOR_ACTIE", V11_WFM_VOR_ACTIE)
        Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "IND_HUPO", V11_WFM_IND_HUPO)
    ElseIf sTargetSId = "46V12" Then
        Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_RAP_VORBRIEF1", V12_WFMDDAT_RAP_VORBRIEF1)
        Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "RAPPEL", V12_WFMDDAT_RAP_VORBRIEF1)
    ElseIf sTargetSId = "46V14" Then
        Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_VORBRIEF", V14_WFMDDAT_VORBRIEF)
    ElseIf sTargetSId = "46V15" Then
    ElseIf sTargetSId = "46V16" Then
        If V16_WFMDDAT_CONTROLE1.Visible = True Then    ' WO 18 nov 2008 punt 9
            Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_CONTROLE1", V16_WFMDDAT_CONTROLE1)
        End If
        Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "VOR_ACTIE", V16_WFM_VOR_ACTIE)
    ElseIf sTargetSId = "46V26" Then
        Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_CONTROLE1", WFMDDAT_VERREK_BRUTUS)
    ElseIf sTargetSId = "46V30" Then
    ElseIf sTargetSId = "46V36" Then
        If WFMDDAT_CONTROLE2.Visible = True Then    ' WO 3 okt 2008 punt 9
            Me.WFMDDAT_CONTROLE1.Value = Me.WFMDDAT_CONTROLE2.Value
            Me.WFMDDAT_CONTROLE2.Value = ""
            Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_CONTROLE2", WFMDDAT_CONTROLE2)
        End If
        Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_CONTROLE1", WFMDDAT_CONTROLE1)
    ElseIf sTargetSId = "46V40" Then
    ElseIf sTargetSId = "46V50" Then
        Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_VORBRIEF", V50_WFMDDAT_VORBRIEF)
        Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_RAP_VORBRIEF1", V50_WFMDDAT_RAP_VORBRIEF1)
        Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_RAP_VORBRIEF2", V50_WFMDDAT_RAP_VORBRIEF2)
        Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_RAP_VORBRIEF3", V50_WFMDDAT_RAP_VORBRIEF3)
    ElseIf sTargetSId = "46V54" Then
        If V54_WFMDRAPPEL <> "" Or V54_WFMDRAPPEL <> 0 Then
            Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "JN_NAAR_PARKEREN", "J")
        Else
              Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "JN_NAAR_PARKEREN", "N")
        End If
        Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "RAPPEL", V54_WFMDRAPPEL)
        Call CALSetFieldValue(WIViewer.CALClientListItem.OpenedItem, "REDEN_PARKEREN", V54_WFM_REDEN_PARKEREN)
    ElseIf sTargetSId = "46V56" Then
        Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "RAPPEL", V56_WFMDRAPPEL)
        Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "REDEN_PARKEREN", V56_WFM_REDEN_PARKEREN)
        Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_BET_REGEL1", V56_WFMDDAT_BET_REGEL1)
    ElseIf sTargetSId = "46V60" Then
        If WFMDDAT_BET_REGEL2.Visible = True Then    ' WO 3 okt 2008 punt 9
            Me.WFMDDAT_BET_REGEL1.Value = Me.WFMDDAT_BET_REGEL2.Value
            Me.WFMDDAT_BET_REGEL2.Value = ""
            Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_BET_REGEL2", WFMDDAT_BET_REGEL2)
        End If
        Call CALSetDateFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_BET_REGEL1", WFMDDAT_BET_REGEL1)
    Else
        Call Err.Raise(12345, , "Er is een onjuiste formFlowId gebruikt")
        GoTo EH
    End If
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SaveFrameFormFields")
End Sub

Private Function GetJNValue(ByVal b As Boolean)
    If b Then
        GetJNValue = "J"
    Else
        GetJNValue = "N"
    End If
End Function

Private Sub RetrieveFrameFormFields()
Dim Is_JN_Ja            As Boolean

    On Error GoTo EH
'   Listbox velden
    Call SetupBehandelaars
    Call SetupPrioriteit
    If sTargetSId = "46V02" Then
        Call SetupAfdeling(Me.AFDELING)
        Call SetupVorActie(Me.WFM_VOR_ACTIE)
    ElseIf sTargetSId = "46V04" Then
        Call SetupAfdeling(Me.V04_AFDELING)
        Call SetupVorActie(Me.V04_WFM_VOR_ACTIE)
        V04_WFMDRAPPEL = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "RAPPEL")
        V04_WFMDRAPPEL = Format(V04_WFMDRAPPEL, "dd-mm-yyyy")
        V04_WFM_REDEN_PARKEREN = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "REDEN_PARKEREN")
        V04_WFM_VOR_ACTIE = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "VOR_ACTIE")
        Is_JN_Ja = (CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "JN_INTERNE_INFO") = "J")
        Me.V04_WFMrJN_INTERNE_INFO_ja = Is_JN_Ja
        Me.V04_WFMrJN_INTERNE_INFOnee = Not Is_JN_Ja
        Is_JN_Ja = (CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "JN_CORR_INHOUDING") = "J")
        Me.V04_WFMrJN_CORR_INHOUDING_ja = Is_JN_Ja
        Me.V04_WFMrJN_CORR_INHOUDINGnee = Not Is_JN_Ja
    ElseIf sTargetSId = "46V08" Then
        Call SetupAfdelingV08(Me.V08_AFDELING)
        V08_AFDELING = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR")
        Call FillBehandelaars(Me.WFM_BEHANDELAAR, V08_AFDELING.Value)
        frameZonder01.WFM_FEP_BEHANDELAAR.Locked = True
'[21JAN09 TD123869]         WFM_ZAAK_VLGNR_MEMO.Visible = False
         frameZonder01.Label2.Visible = False
         WFM_PRIORITEIT.Visible = False
    ElseIf sTargetSId = "46V09" Then
        V09_WFM_DOORZENDEN_NAAR = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR")
        V09_WFMDRAPPEL = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "RAPPEL")
        V09_WFMDRAPPEL = Format(V09_WFMDRAPPEL, "dd-mm-yyyy")
        V09_WFM_REDEN_PARKEREN = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "REDEN_PARKEREN")
        Is_JN_Ja = (CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "JN_VERZK_AFGEHAND") = "J")
    ElseIf sTargetSId = "46V10" Then
    ElseIf sTargetSId = "46V11" Then
        Call SetupAfdeling(Me.V11_AFDELING)
        Call SetupVorActie(Me.V11_WFM_VOR_ACTIE)
        'Is_JN_Ja = (CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "JN_INTERNE_INFO") = "J")
        'Me.V11_WFMrJN_INTERNE_INFO_ja = Is_JN_Ja
        'Me.V11_WFMrJN_INTERNE_INFOnee = Not Is_JN_Ja
        'V11_WFM_DOORZENDEN_NAAR = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DOORZENDEN_NAAR")
        'Is_JN_Ja = (CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "JN_CORR_INHOUDING") = "J")
        'Me.V11_WFMrJN_CORR_INHOUDING_ja = Is_JN_Ja
        'Me.V11_WFMrJN_CORR_INHOUDINGnee = Not Is_JN_Ja
        V11_WFMDRAPPEL = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "RAPPEL")
        V11_WFMDRAPPEL = Format(V11_WFMDRAPPEL, "dd-mm-yyyy")
        V11_WFM_REDEN_PARKEREN = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "REDEN_PARKEREN")
        'V11_WFM_VOR_ACTIE = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "VOR_ACTIE")
    ElseIf sTargetSId = "46V12" Then
        V12_WFMDDAT_RAP_VORBRIEF1 = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_RAP_VORBRIEF1")
        V12_WFMDDAT_RAP_VORBRIEF1 = Format(V12_WFMDDAT_RAP_VORBRIEF1, "dd-mm-yyyy")
        If WFMDDAT_VORBRIEF = "" Or WFMDDAT_VORBRIEF = 0 Then
            WFMDDAT_VORBRIEF = Format(Now, "dd-mm-yyyy")
        End If
        If V12_WFMDDAT_RAP_VORBRIEF1 = "" Or V12_WFMDDAT_RAP_VORBRIEF1 = 0 Then
            V12_WFMDDAT_RAP_VORBRIEF1 = AddDays(WFMDDAT_VORBRIEF, RAPPEL_TERMIJN24)
        End If
        V12_lbTemplates.AddItem "VOR Terugvorderen met brief"
        V12_lbTemplates.AddItem "VOR Terugvorderen zonder brief"
    ElseIf sTargetSId = "46V14" Or sTargetSId = "46V15" Then
        V14_WFMDDAT_VORBRIEF = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_VORBRIEF")
        V14_WFMDDAT_VORBRIEF = Format(V14_WFMDDAT_VORBRIEF, "dd-mm-yyyy")

        If WFMDDAT_RAP_VORBRIEF2 = "" Or WFMDDAT_RAP_VORBRIEF2 = 0 Then
            V14_lbTemplates.AddItem "VOR Rappel 1"
            WFMDDAT_RAP_VORBRIEF3.Locked = True
            cmdDAT_RAP_VORBRIEF3.Enabled = False
        ElseIf WFMDDAT_RAP_VORBRIEF3 = "" Or WFMDDAT_RAP_VORBRIEF3 = 0 Then
            V14_lbTemplates.AddItem "VOR Rappel 2"
        Else
            V14_lbTemplates.AddItem "VOR Rappel 1"
            V14_lbTemplates.AddItem "VOR Rappel 2"
        End If
    ElseIf sTargetSId = "46V16" Then
        V16_lbTemplates.AddItem "VOR Inschakelen incassobureau"
           WFMDDAT_INCASSOBUR_BRF = Format(Now, "dd-mm-yyyy")
           V16_WFMDDAT_CONTROLE1 = Format(DateAdd("m", 1, Format(Now, "yyyy-mm-dd")), "dd-mm-yyyy")
           V16_WFM_VOR_ACTIE.AddItem ("Afboeken")
    ElseIf sTargetSId = "46V26" Then
        If WFMDDAT_VERREKEN_BRF = "" Or WFMDDAT_VERREKEN_BRF = 0 Then
            WFMDDAT_VERREKEN_BRF = Format(Now, "dd-mm-yyyy")
        End If
        V26_lbTemplates.AddItem "VOR Verrekening met brief"
        V26_lbTemplates.AddItem "VOR Verrekening zonder brief"
    ElseIf sTargetSId = "46V30" Then
    ElseIf sTargetSId = "46V36" Then
        If WFMDDAT_CONTROLE1 = "" Or WFMDDAT_VERREKEN_BRF = 0 Then
            WFMDDAT_CONTROLE1 = Format(Now, "dd-mm-yyyy")
        End If
        WFMDDAT_CONTROLE2 = Format(DateAdd("m", 3, Format(WFMDDAT_CONTROLE1, "yyyy-mm-dd")), "dd-mm-yyyy")
    ElseIf sTargetSId = "46V40" Then
    ElseIf sTargetSId = "46V54" Then
        V54_lbTemplates.AddItem "VOR Treffen betalingsregeling"
        V54_WFMDRAPPEL = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "RAPPEL")
        V54_WFMDRAPPEL = Format(V54_WFMDRAPPEL, "dd-mm-yyyy")
        V54_WFM_REDEN_PARKEREN = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "REDEN_PARKEREN")
    ElseIf sTargetSId = "46V56" Then
        V56_WFMrJN_BET_REG_BRF_VER_ja.Value = (CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "JN_BET_REG_BRF_VER") = "J")
        V56_WFMDRAPPEL = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "RAPPEL")
        V56_WFMDRAPPEL = Format(V56_WFMDRAPPEL, "dd-mm-yyyy")
        V56_WFM_REDEN_PARKEREN = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "REDEN_PARKEREN")
    ElseIf sTargetSId = "46V60" Then
            WFMDDAT_BET_REGEL2 = Format(DateAdd("m", 1, Format(WFMDDAT_BET_REGEL1, "yyyy-mm-dd")), "dd-mm-yyyy")
    ElseIf sTargetSId = "46V50" Then
        V50_WFMDDAT_VORBRIEF = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_VORBRIEF")
        V50_WFMDDAT_RAP_VORBRIEF1 = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_RAP_VORBRIEF1")
        V50_WFMDDAT_RAP_VORBRIEF2 = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_RAP_VORBRIEF2")
        V50_WFMDDAT_RAP_VORBRIEF3 = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "DAT_RAP_VORBRIEF3")
    Else
        Call Err.Raise(12345, , "Er is een onjuiste formFlowId gebruikt")
        GoTo EH
    End If
    Exit Sub

EH:
    Call DisplayError(Me.name & ".RetrieveFrameFormFields")
End Sub

Private Function AddDays(ByVal s As String, ByVal D As Integer) As String
    On Error GoTo EH
    AddDays = Format(DateAdd("d", D, Format(s, "yyyy-mm-dd")), "dd-mm-yyyy")
    Exit Function

EH:
    Call DisplayError(Me.name & ".AddDays")
End Function

Private Sub handleLaunchTemplate(ByVal template As String)
    On Error GoTo EH
'   Gegevens exporteren
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WorkitemViewer, template)
    Exit Sub

EH:
    Call DisplayError(Me.name & ".handleLaunchTemplate")
End Sub

Private Sub WFMrJN_VERREKEN_MUT_ja_Click()
    WFMDDAT_VERREK_BRUTUS = Format(DateAdd("m", 3, Format(Now, "yyyy-mm-dd")), "dd-mm-yyyy")
End Sub
Attribute VB_Name = "frmVORBeoordDoc"
Attribute VB_Base = "0{23AFF1E3-1CCF-4FE3-AC90-A9DDD723DA50}{858D107F-5402-4AB0-8C3E-7FF020E8E4AA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim strUser As String
Dim strAfdeling As String ' Let op deze wordt tot nu toe alleen gebruikt voor de PIN(EXC) uitzondering en wordt dus, ongeacht user of bestemming, altijd gevuld met EXC. Niet zomaar voor andere doeleinden gebruiken!

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Set QueryFrm(objForm)
    Set myForm = objForm
End Property
Public Property Get QueryFrm() As Object
    Set QueryFrm = myForm
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub cmdExtraScreen_Click()
'   Button text = extra!
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    If YetAnotherExtralink(WIViewer, WFM_NR_POLIS.Text) Then
        Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
    End If
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Screenscraping niet gelukt!"
End Sub

Private Sub cmdTerug_Click()
'   button text = annuleren
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError Me.name & ".cmdTerug_Click"
End Sub

Private Sub cmdToevoegen_Click()
'   button text = toevoegen
Dim mobjQueryResults As CALQueryResults
Dim myQueryFrm As Object

    On Error GoTo EH
    Call CheckFields
    If Not WorkflowSave(WIViewer) Then Exit Sub
    ' zoeken naar folder met zelfde deelnemer nummer.
    ' na keuze van folder wordt document hierin geimporteerd.
    If Not Me.QueryFrm Is Nothing Then
        Me.QueryFrm.Show 0
        Exit Sub
    End If
    Set Me.QueryFrm = New frmZoekImport
    Set myQueryFrm = Me.QueryFrm
    Set myQueryFrm.WorkitemViewer = Me.WorkitemViewer
    Set myQueryFrm.ParentForm = Me
    myQueryFrm.Show 0
    Exit Sub

EH:
    If Err.Number = 12349 Then
        Resume Next ' komt niet meer terug in checkfields
        WFM_DOCTYPE.BackColor = TextboxWhite
    End If
    DisplayError Me.name & ".cmdToevoegen_Click"
End Sub

Private Sub cmdOpslaan_Click()
'   button text = doorsturen
Dim myIdent As String
Dim WFMViewerField As Field

    On Error GoTo EH
    CheckFields
    
'   Q3 release 2011 added
    If WFMrJN_NAAR_CASE360_ja.Value = True Then
        If WFM_NAAM_DLNMR.Value = "" Or WFM_NR_POLIS.Value = "" Or WFM_NR_BEGUNSTIGDE.Value = "" Or _
            WFM_NR_AEGAR.Value = "" Or WFMDGEB_DEELN.Value = "" Or WFM_SEXE_DLNMR.Value = "" Or _
            WFM_NAAM_KLANT.Value = "" Or WFM_NR_KLANT.Value = "" Or WFM_NR_AEGAR_KLANT.Value = "" Or _
            WFM_IND_HUPO.Value = "" Then
            WFMrJN_NAAR_CASE360nee.Value = True
            MsgBox "Deelnemer, Deeln.Nr., Begunstigde Nr, AegarNr., Geb. datum, Sexe, Klant, KlantNr., Klant AegarNr. and Contactmedew. Waarden kunnen niet leeg zijn"
            Exit Sub
        End If
    End If
    
    If Not WorkflowSave(WIViewer, Me) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError Me.name & ".cmdOpslaan_Click"
End Sub

Private Sub imgCAESAR_Click()
'   knop met 'n plaatje van 'n terminal
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call Extralink(WIViewer, WFM_NR_POLIS)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
End Sub

Private Sub imgNotitie_Click()
'   knop met 'n plaatje van 'n notitieblok
    On Error GoTo EH
    Set frmNotitie.rsViewer = WIViewer
    If Not ((WIViewer.CALClientListItem.Info.Status And calObjStatusWIP) = calObjStatusWIP) Then
        frmNotitie.lblAddNote.Enabled = False
    End If
    frmNotitie.Show 1
    Exit Sub

EH:
    DisplayError Me.name & ".imgNotitie_Click"
End Sub

Private Sub IMGsnelzoek_Click()
'   knop met 'n plaatje van 'n verrekijker
    On Error GoTo EH
    frmQuery.QRYTextBox15 = WFM_NR_BEGUNSTIGDE
    frmQuery.cmdFind_Click
    frmQuery.Show 0
    Exit Sub

EH:
    DisplayError Me.name & ".IMGsnelzoek_Click"
End Sub

Private Sub WFM_NAAM_DLNMR_Change()
'   deelnemer
End Sub

Private Sub WFM_NR_BEGUNSTIGDE_Change()
    If WFM_NR_BEGUNSTIGDE <> "" Then
        WFM_NR_COLLECTIVITEIT = ""
        WFM_NR_COLLECTIVITEIT.Enabled = False
        lblcoll.Enabled = False
        Else
        WFM_NR_COLLECTIVITEIT.Enabled = True
        lblcoll.Enabled = True
    End If
End Sub

Private Sub WFM_NR_COLLECTIVITEIT_Change()
    If WFM_NR_COLLECTIVITEIT <> "" Then
        WFM_NR_BEGUNSTIGDE = ""
        WFM_NR_BEGUNSTIGDE.Enabled = False
        lblbeg.Enabled = False
    Else
        WFM_NR_BEGUNSTIGDE.Enabled = True
        lblbeg.Enabled = True
    End If
End Sub

Private Sub WFM_NR_POLIS_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'   deelnemer nr
    On Error GoTo EH
    Exit Sub

EH:
    Call DisplayError(Me.name & ".WFM_NR_POLIS_Exit")
End Sub

Private Sub WFM_NR_AEGAR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'   aegar nr
    On Error GoTo EH
    Call NumberCheck(WFM_NR_AEGAR)
    WFM_NR_AEGAR.BackColor = TextboxWhite
    Exit Sub

EH:
    Call DisplayError(Me.name & ".WFM_NR_AEGAR_Exit")
End Sub

Private Sub WFMDGEB_DEELN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'   geboorte datum
    On Error GoTo EH
    Call DateCheck(WFMDGEB_DEELN)
    WFMDGEB_DEELN.BackColor = TextboxWhite
    Exit Sub

EH:
    Call DisplayError(Me.name & ".WFMDGEB_DEELN_Exit")
End Sub

Private Sub WFM_SEXE_DLNMR_Change()
'   sexe
End Sub

Private Sub WFM_NAAM_KLANT_Change()
'   klant
End Sub

Private Sub WFM_NR_KLANT_Exit(ByVal Cancel As MSForms.ReturnBoolean)
'   klant nr
    On Error GoTo EH
    Call getTPnaamnummer(Me)
    Exit Sub

EH:
    Call DisplayError(Me.name & ".WFM_NR_KLANT_Exit")
End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
'   Contact medewerker
    On Error GoTo EH
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
    Exit Sub

EH:
    Call DisplayError(Me.name & ".WFM_IND_HUPO_BeforeUpdate")
End Sub

Private Sub WFM_DOCTYPE_Change()
'   Doctype
    If WFM_DOCTYPE = "" Then
        Call EnDisAbleToevoegen(WFM_DOCTYPE, cmdToevoegen)
    End If

End Sub

Private Sub UserForm_Activate()
Static Init As Boolean
Dim varDoorzendenNaarList As Variant
Dim i As Integer

    strUser = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "BEHANDELAAR") 'WFM_BEHANDELAAR.Value
    strAfdeling = "VOR" ' werksoort en werktype worden vast gevuld, maar alleen getoond bij PIN(EXC)

    If Init Then Exit Sub
    Init = True
'    CheckMailBox
    WFM_DOCTYPE.ColumnCount = 2
    WFM_DOCTYPE.BoundColumn = 1
    WFM_DOCTYPE.TextColumn = -1
    WFM_DOCTYPE.ColumnWidths = ";0"

'   Doctype, werksrt
    DocTypeAdd "", csDocOverig
'    DocTypeAdd "VOR Toekomstig", csDocNieuw
    DocTypeAdd "XXX Overige post", csDocOverig

    'Q3 Release Change
    If WIViewer.Fields.item("JN_NAAR_CASE360").CALFormField.Value = "46" Then
        WFMrJN_NAAR_CASE360_ja.Value = True
    ElseIf WIViewer.Fields.item("JN_NAAR_CASE360").CALFormField.Value = "" Then
        WFMrJN_NAAR_CASE360nee.Value = True
    End If

    If WFM_DOCTYPE = "" Then WFM_DOCTYPE.ListIndex = 0
    Call EnDisAbleToevoegen(WFM_DOCTYPE, cmdToevoegen)
    WFM_DOCTYPE.BackColor = TextboxWhite
End Sub

Private Sub DocTypeAdd(DocType As String, DocBehandeling As String)
Static i As Integer

    If i = Empty Then i = 0
    WFM_DOCTYPE.AddItem
    WFM_DOCTYPE.list(i, 0) = DocType
    WFM_DOCTYPE.list(i, 1) = DocBehandeling
    i = i + 1
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Terminate()
    If Not Me.QueryFrm Is Nothing Then
        Unload Me.QueryFrm
    End If
End Sub

Private Sub CheckFields()
    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR = Format(Val(WFM_NR_AEGAR), "#########")
    If WFM_NR_AEGAR <> Empty And Val(WFM_NR_AEGAR) <> 0 Then
        WFM_NR_AEGAR = Format(Val(WFM_NR_AEGAR), "000000000")
    End If
    DateCheck WFMDGEB_DEELN
    If WFM_NR_BEGUNSTIGDE = "" And WFM_NR_COLLECTIVITEIT = "" Then
        WFM_NR_BEGUNSTIGDE.BackColor = TextboxRed
        Err.Raise 12345, , "Begunstigde/Collectiviteit nummer is niet ingevuld."
    End If
    
    If WFM_NR_COLLECTIVITEIT <> Empty Then
        If WFM_NR_KLANT = "" Then
        Err.Raise 12345, , "Klantnummer is niet ingevuld."
        End If
    End If
End Sub




Attribute VB_Name = "frmVORconversie"
Attribute VB_Base = "0{D2E145BD-0541-4A62-9CD3-54306F318271}{90818426-7A80-490A-80C7-B0039449A5EA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim HostForm            As Object
Dim myESWMObjID         As String
Dim rec             As Boolean

Private Sub cmdScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Open eerst het juiste CAESAR scherm (UI MDVB)."
End Sub

Private Sub cmdDoorzenden_Click()
Dim ff                  As Boolean
 
    On Error GoTo EH
    WIViewer.CALClientListItem.OpenedItem.SetName (WFM_ZAAK_IDENT_NR.Text)
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call Reclassificeer(WIViewer, "COLLVORD")
    rec = True
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdff_Click()
    WFM_NR_POLIS = ""
    WFM_NR_AEGAR = ""
    WFMDGEB_DEELN = ""
    WFM_SEXE_DLNMR = ""
    WFM_DOCTYPE = ""
    WFM_NAAM_DLNMR = ""
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myIdent             As String

    On Error GoTo EH
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub imgCAESAR_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call Extralink(WIViewer, WFM_NR_POLIS)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
End Sub

Private Sub imgNotitie_Click()
    Set frmNotitie.rsViewer = WIViewer
    If Not ((WIViewer.CALClientListItem.Info.Status And calObjStatusWIP) = calObjStatusWIP) Then
        frmNotitie.lblAddNote.Enabled = False
    End If
    frmNotitie.Show 1
End Sub

Private Sub IMGsnelzoek_Click()
    frmQuery.QRYTextBox1 = WFM_NR_POLIS
    frmQuery.cmdFind_Click
    frmQuery.Show 0
End Sub

Private Sub CommandButton1_Click()
    WorkflowSaveAlgedaan = True
    Call Doorzenden(WIViewer)
    If Afdelingannuleren = True Then
        Call WFMBackButton(WIViewer)
        Afdelingannuleren = False
    End If
End Sub

Private Sub cmdVerstuur_Click()
    If rec Then
        WorkflowSaveAlgedaan = True
        CALSetFieldValue WIViewer.CALClientListItem.OpenedItem, "NR_BEGUNSTIGDE", temp_NR_BEGUNSTIGDE
        CALSetFieldValue WIViewer.CALClientListItem.OpenedItem, "NR_COLLECTIVITEIT", temp_NR_COLLECTIVITEIT
        CALSetFieldValue WIViewer.CALClientListItem.OpenedItem, "BEDRIJFSCODE", temp_BEDRIJFSCODE
        CALSetFieldValue WIViewer.CALClientListItem.OpenedItem, "DAT_VORBRIEF", temp_WFMDDAT_VORBRIEF
        CALSetDateFieldValue WIViewer.CALClientListItem.OpenedItem, "DAT_RAP_VORBRIEF1", temp_WFMDDAT_RAP_VORBRIEF1
        CALSetDateFieldValue WIViewer.CALClientListItem.OpenedItem, "DAT_RAP_VORBRIEF2", temp_WFMDDAT_RAP_VORBRIEF2
        CALSetDateFieldValue WIViewer.CALClientListItem.OpenedItem, "VOR_ACTIE", TEMP_WFM_VOR_ACTIE
        CALSetDateFieldValue WIViewer.CALClientListItem.OpenedItem, "DAT_CONTROLE1", temp_WFMDDAT_CONTROLE1
        CALSetFieldValue WIViewer.CALClientListItem.OpenedItem, "FEP_BEHANDELAAR", temp_FEP_BEHANDELAAR
        Call Doorzenden(WIViewer)
        If Afdelingannuleren = True Then
            Call WFMBackButton(WIViewer)
            Afdelingannuleren = False
        End If
    Else
        MsgBox "Eerst reclassify.", vbOKOnly
    End If
End Sub

Private Sub temp_NR_BEGUNSTIGDE_Change()
    If temp_NR_BEGUNSTIGDE <> "" Then
        temp_NR_COLLECTIVITEIT = ""
        temp_NR_COLLECTIVITEIT.Enabled = False
        lblcoll.Enabled = False
    Else
        temp_NR_COLLECTIVITEIT.Enabled = True
        lblcoll.Enabled = True
    End If
    If Len(temp_NR_BEGUNSTIGDE) = 7 Then
        WFM_ZAAK_IDENT_NR.Text = temp_BEDRIJFSCODE.Text + "_" + temp_NR_BEGUNSTIGDE + "VOR1"
    End If
End Sub

Private Sub temp_NR_COLLECTIVITEIT_Change()
    If temp_NR_COLLECTIVITEIT <> "" Then
        temp_NR_BEGUNSTIGDE = ""
        temp_NR_BEGUNSTIGDE.Enabled = False
        lblbeg.Enabled = False
    Else
        temp_NR_BEGUNSTIGDE.Enabled = True
        lblbeg.Enabled = True
    End If
    If Len(temp_NR_COLLECTIVITEIT) = 5 Then
        WFM_ZAAK_IDENT_NR.Text = temp_BEDRIJFSCODE.Text + "_" + temp_NR_COLLECTIVITEIT.Text + "VOR1"
    End If
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean
Dim strAfdeling         As String
Dim strUser             As String
Dim i                   As Integer
Dim bRes                As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
    WFM_IND_TRIGGER = "VOR"
    WFM_DOORZENDEN_NAAR = "VOR"
    Call TEMP_WFM_VOR_ACTIE.AddItem("Afboeken")
    Call TEMP_WFM_VOR_ACTIE.AddItem("Verrekenen")
    Call TEMP_WFM_VOR_ACTIE.AddItem("Terugvorderen")
    WFM_NR_POLIS = ""
    WFM_NR_AEGAR = ""
    WFMDGEB_DEELN = ""
    WFM_SEXE_DLNMR = ""
    WFM_DOCTYPE = ""
    WFM_NAAM_DLNMR = ""
    Call FillBehandelaars(Me.temp_FEP_BEHANDELAAR, "VOR")
    If Right(WFM_ZAAK_IDENT_NR.Text, 1) <> "1" Then
        WFM_ZAAK_IDENT_NR.BackColor = &HFF&
    End If
    Exit Sub

EH:
    DisplayError "Form activate"
End Sub

Private Sub FillBehandelaars(ByRef cb As Control, A As String)
' Setup listbox behandelaar
Dim vUser               As Variant
Dim s                   As String

    On Error GoTo EH
    s = cb.Value
'   Vullen van cb met users met de afdeling = "VOR"
    For Each vUser In GetUsersPerAfdeling(A)
        cb.AddItem vUser
    Next
    cb.Value = s
    Exit Sub

EH:
    Call DisplayError(Me.name & ".SetupBehandelaars")
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub
Attribute VB_Name = "frmVerplaatsen"
Attribute VB_Base = "0{F693619F-3C90-407C-BE6B-902B270BBE31}{B3A4A037-41CE-4EA4-BD37-D4F198075E0B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String
Dim myWorkStep      As String

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Public Property Let WorkStep(VarValue)
    myWorkStep = VarValue
End Property
Public Property Get WorkStep()
    WorkStep = myWorkStep
End Property

Private Sub cmdAnnuleren_Click()
    VerplaatsenWorkStep = ""
    Me.Hide
End Sub

Private Sub cmdVerplaatsen_Click()
    VerplaatsenWorkStep = ListBox1.Value
    Me.Hide
End Sub

Private Sub UserForm_Activate()
Dim WiClass         As String
Dim Workstepname    As String
Dim username

'   Toon afhankelijk van de class de worksteps waar
'   het workitem naar toe verplaatst zou mogen
    WiClass = WIViewer.CALClientListItem.OpenedItem.Class
    VerplaatsenWorkStep = ""

    Workstepname = GetWorkstep(WIViewer)

    username = Application.SessionInfo.username
    FuncSecGroup = UCase(GetFuncSecGroup(username))  'Get Security form the Eastmanserver
    If FuncSecGroup = "WFMGEBRUIKER" Then
        If WiClass = "COLL" Then
            ListBox1.AddItem "REG11 Retour"
        End If
    Else
'       De volgende verplaatsbakken zijn voor beheerdoeleinden
        If Left(Workstepname, 5) = "BEH01" Then
            ListBox1.AddItem "00A02 Folder Vullen"
            ListBox1.AddItem "90A02 Folder vullen"
            ListBox1.AddItem "91A02 Folder vullen"
            ListBox1.AddItem "94A02 Folder vullen"
            ListBox1.AddItem "95A11 Folder vullen"
            ListBox1.AddItem "98A06 Folder vullen"
            ListBox1.AddItem "99A11 Folder vullen"
        End If

        If WiClass = "COLL" Then
            ListBox1.AddItem "90A01 Beoord. doc."
            ListBox1.AddItem "91A01 Beoord doc"
            ListBox1.AddItem "91V26 Verkl. Uitbet."
            ListBox1.AddItem "91V32 Nachtverw."
            ListBox1.AddItem "91V50 Brief CAESAR"

            ListBox1.AddItem "97A03 Melding GBA"

            ListBox1.AddItem "98A01 Beoord doc"
            ListBox1.AddItem "98O21 Brief Caesar"
            ListBox1.AddItem "98O31 Uitk. form."
            ListBox1.AddItem "98P26 Brief Caesar"
            ListBox1.AddItem "98P36 Uitk. form."
            ListBox1.AddItem "98V70 Uitk.form"
            ListBox1.AddItem "98W11 Brief Caesar"

            ListBox1.AddItem "99A01 Beoord doc"
            ListBox1.AddItem "99A06 Deeln onbekend"
            ListBox1.AddItem "99B16 Opgave OW"
            ListBox1.AddItem "99B26 Akkoord werkg"
            ListBox1.AddItem "99B31 React offerte"
            ListBox1.AddItem "99U21 Reactie opgave"

            ListBox1.AddItem "05A01 Beoord doc"
            ListBox1.AddItem "06A01 Beoord doc"
            ListBox1.AddItem "07A01 Beoord doc"
            ListBox1.AddItem "08A01 Beoord doc"
            ListBox1.AddItem "09A01 Beoord doc"
            ListBox1.AddItem "20A01 Beoord doc"
            ListBox1.AddItem "33A01 Beoord doc"

            ListBox1.AddItem "REG10 Reg coll"
            ListBox1.AddItem "REG12 Reg overig"
            ListBox1.AddItem "REG13 Reg excasso"
            ListBox1.AddItem "REG14 Reg OVL"
            ListBox1.AddItem "REG15 Reg fvp"
            ListBox1.AddItem "REG30 Barc.Caesar"
            ListBox1.AddItem "REG95 Archief"
            ListBox1.AddItem "REG96 Mut"

            ListBox1.AddItem "Verwijderen"
            ListBox1.AddItem " "
            ListBox1.AddItem "REG11 Retour"
        End If

'[PAC] - TD157138 - Added CPPN Worksteps to table Verplaatsen
        If WiClass = "CPPN" Then
            ListBox1.AddItem "99A01 Beoord doc"
            ListBox1.AddItem "99A06 Deeln onbekend"
            ListBox1.AddItem "99B16 Opgave OW"
            ListBox1.AddItem "99B26 Akkoord werkg"
            ListBox1.AddItem "99B31 React offerte"
            ListBox1.AddItem "99U21 Reactie opgave"
        End If
'[PAC] - TD157138 - End Added CPPN Worksteps to table Verplaatsen

        If WiClass = "COLLAOV" Then
            If Left(Workstepname, 2) = "98" Then
                ListBox1.AddItem "98A31 Prk Afhand."
                ListBox1.AddItem "98A26 Afhandeling"
                ListBox1.AddItem "98A41 Contr. Adm"
                ListBox1.AddItem "98A46 Fiatteren"
                ListBox1.AddItem " "
                ListBox1.AddItem "91V52 Controle"
            Else
                ListBox1.AddItem "91V02 Beoord. voll."
                ListBox1.AddItem "91V05 Contr. Beoord."
                ListBox1.AddItem "91V11 Prk Volledig"
                ListBox1.AddItem "91V17 Verz bijwerken"
                ListBox1.AddItem "91V26 Verkl. Uitbet."
                ListBox1.AddItem "91V30 Afh CAESAR"
                ListBox1.AddItem "91V32 Nachtverw."
                ListBox1.AddItem "91V35 Beoord Mut"
                ListBox1.AddItem "91V50 Brief CAESAR"
                ListBox1.AddItem "91V52 Controle"
                ListBox1.AddItem " "
                ListBox1.AddItem "98A26 Afhandeling"
                ListBox1.AddItem " "
                ListBox1.AddItem "Verwijderen"
            End If
        End If

'[PAC] - TD157138 - Added Class CPPNBWO
        If WiClass = "COLLBWO" Or WiClass = "CPPNBWO" Then
            ListBox1.AddItem "99B01 Voorbereiden"
            ListBox1.AddItem "99B06 Parkeren"
            ListBox1.AddItem "99B11 In wachtreg"
            ListBox1.AddItem "99B16 Opgave OW"
            ListBox1.AddItem "99B21 Maken offerte"
            ListBox1.AddItem "99B26 Akkoord werkg"
            ListBox1.AddItem "99B31 React offerte"
            ListBox1.AddItem "99B36 Vragen remise"
            ListBox1.AddItem "99B41 Remise"
            ListBox1.AddItem "99B42 Onvoll Remise"
            ListBox1.AddItem "99B43 Aangek Remise"
            ListBox1.AddItem "99B46 Muteren adm"
            ListBox1.AddItem "99B51 Controle adm"
            ListBox1.AddItem " "
            ListBox1.AddItem "Verwijderen"
        End If

        If WiClass = "COLLECH" Then
            ListBox1.AddItem "90A06 Beoord. aanvr."
            ListBox1.AddItem "90A10 Prk Beoord."
            ListBox1.AddItem "90A25 Berekenen"
            ListBox1.AddItem "90A30 Contr Berek."
            ListBox1.AddItem "90A42 Mut. Caesar"
            ListBox1.AddItem "90A50 Contr. Adm"
            ListBox1.AddItem " "
            ListBox1.AddItem "Verwijderen"
        End If

        If WiClass = "COLLEXC" Then
            If Left(Workstepname, 3) = "98K" Then
                ListBox1.AddItem "98K06 Beoord. Kap."
                ListBox1.AddItem "98K11 Prk Beoord Kap"
                ListBox1.AddItem "98K21 Offerte Kap"
                ListBox1.AddItem "98K26 Prk. Offerte"
                ListBox1.AddItem "98K36 Beh. Reactie"
                ListBox1.AddItem "98K41 Prk Reactie"
                ListBox1.AddItem "98K46 Mut. Caesar"
                ListBox1.AddItem "98K51 Uitstel Exp"
                ListBox1.AddItem "98K56 Prk Uitstel"
                ListBox1.AddItem " "
                ListBox1.AddItem "97A06 Opvragen GBA"
                ListBox1.AddItem " "
                ListBox1.AddItem "Verwijderen"
            Else
                ListBox1.AddItem "98A03 Div. post"
                ListBox1.AddItem " "
                ListBox1.AddItem "Verwijderen"
            End If
        End If

        If WiClass = "COLLOVL" Then
            If Left(Workstepname, 3) = "98K" Then
                ListBox1.AddItem "98K06 Beoord. Kap."
                ListBox1.AddItem "98K11 Prk Beoord Kap"
                ListBox1.AddItem "98K21 Offerte Kap"
                ListBox1.AddItem "98K26 Prk. Offerte"
                ListBox1.AddItem "98K36 Beh. Reactie"
                ListBox1.AddItem "98K41 Prk Reactie"
                ListBox1.AddItem "98K46 Mut. Caesar"
                ListBox1.AddItem "98K51 Uitstel Exp"
                ListBox1.AddItem "98K56 Prk Uitstel"
                ListBox1.AddItem " "
                ListBox1.AddItem "97A06 Opvragen GBA"
                ListBox1.AddItem " "
                ListBox1.AddItem "Verwijderen"
            Else
                If Left(Workstepname, 5) <> "98O12" Then
                    ListBox1.AddItem "98O10 Beoordelen OVL"
                    ListBox1.AddItem "98O14 Fiatteren OVL"
                    ListBox1.AddItem "98O21 Brief Caesar"
                    ListBox1.AddItem "98O31 Uitk. form."
                    ListBox1.AddItem "98A15 Controle brief"
                    ListBox1.AddItem "98A16 Contr. Uitk.F."
                    ListBox1.AddItem "98A21 Beoord Onvindb"
                    ListBox1.AddItem "98A24 Afhand Onvindb"
                    ListBox1.AddItem "98A26 Afhandeling"
                    ListBox1.AddItem "98A41 Contr. Adm"
                    ListBox1.AddItem "98A46 Fiatteren"
                    ListBox1.AddItem "98A51 Beh. Voorschot"
                    ListBox1.AddItem "98A53 Contr. Voors"
                    ListBox1.AddItem "98A54 Bew. Voorschot"
                    ListBox1.AddItem " "
                End If
                ListBox1.AddItem "Verwijderen"
            End If
        End If

        If WiClass = "COLLPEN" Then
            If Left(Workstepname, 3) = "98C" Then
                ListBox1.AddItem "98A15 Controle brief"
                ListBox1.AddItem "98A26 Afhandeling"
                ListBox1.AddItem "98A41 Contr. Adm"
                ListBox1.AddItem "98C06 Machtiging"
                ListBox1.AddItem "98C11 Keuze Dln."
                ListBox1.AddItem "98C16 Beoord Keuze"
                ListBox1.AddItem "98C21 Prk keuze"
                ListBox1.AddItem "98C26 Inc. Macht."
                ListBox1.AddItem "98C28 Inc. Macht.2"
                ListBox1.AddItem "98C31 Contr. remise"
                ListBox1.AddItem "98C36 Maken Offerte"
                ListBox1.AddItem "98C41 Beslis. Dln."
                ListBox1.AddItem "98C46 Muteren CAESAR"
                ListBox1.AddItem "98C51 bevest.CAESAR"
            ElseIf Left(Workstepname, 3) = "98D" Then
                ListBox1.AddItem "98D10 Beoordelen DVL"
                ListBox1.AddItem "98P26 Brief Caesar"
                ListBox1.AddItem "98P36 Uitk. form."
                ListBox1.AddItem "98A15 Controle brief"
                ListBox1.AddItem "98A16 Contr. Uitk.F."
                ListBox1.AddItem "98A21 Beoord Onvindb"
                ListBox1.AddItem "98A24 Afhand Onvindb"
                ListBox1.AddItem "98A26 Afhandeling"
                ListBox1.AddItem "98A41 Contr. Adm"
                ListBox1.AddItem "98A46 Fiatteren"
                ListBox1.AddItem "98A51 Beh. Voorschot"
                ListBox1.AddItem "98A53 Contr. Voors"
                ListBox1.AddItem "98A54 Bew. Voorschot"
                ListBox1.AddItem " "
                ListBox1.AddItem "Verwijderen"
            ElseIf Left(Workstepname, 3) = "98K" Then
                ListBox1.AddItem "98K06 Beoord. Kap."
                ListBox1.AddItem "98K11 Prk Beoord Kap"
                ListBox1.AddItem "98K21 Offerte Kap"
                ListBox1.AddItem "98K26 Prk. Offerte"
                ListBox1.AddItem "98K36 Beh. Reactie"
                ListBox1.AddItem "98K41 Prk Reactie"
                ListBox1.AddItem "98K46 Mut. Caesar"
                ListBox1.AddItem "98K51 Uitstel Exp"
                ListBox1.AddItem "98K56 Prk Uitstel"
                ListBox1.AddItem " "
                ListBox1.AddItem "97A06 Opvragen GBA"
                ListBox1.AddItem " "
                ListBox1.AddItem "Verwijderen"
            Else
                If Left(WIViewer.Fields.Find("IND_TRIGGER").CALFormField.Value, 2) = "AF" Then
                    ListBox1.AddItem "98D10 Beoordelen DVL"
                Else
                    ListBox1.AddItem "98P07 Voorber. PEN"
                    ListBox1.AddItem "98P08 Prk Voorb. PEN"
                    ListBox1.AddItem "98P21 Bep. rechten"
                End If
                ListBox1.AddItem "98P26 Brief Caesar"
                ListBox1.AddItem "98P36 Uitk. form."
                ListBox1.AddItem "98A15 Controle brief"
                ListBox1.AddItem "98A16 Contr. Uitk.F."
                ListBox1.AddItem "98A21 Beoord Onvindb"
                ListBox1.AddItem "98A22 Prk Onvindb"
                ListBox1.AddItem "98A24 Afhand Onvindb"
                ListBox1.AddItem "98A26 Afhandeling"
                ListBox1.AddItem "98A41 Contr. Adm"
                ListBox1.AddItem "98A46 Fiatteren"
                ListBox1.AddItem "98A51 Beh. Voorschot"
                ListBox1.AddItem "98A53 Contr. Voors"
                ListBox1.AddItem "98A54 Bew. Voorschot"
                ListBox1.AddItem " "
                ListBox1.AddItem "Verwijderen"
            End If
        End If

'[PAC] - TD157138 - Added Class CPPNUWO
        If WiClass = "COLLUWO" Or WiClass = "CPPNUWO" Then
            ListBox1.AddItem "99U01 Voorbereiden"
            ListBox1.AddItem "99U06 Parkeren"
            ListBox1.AddItem "99U16 Maken opgave"
            ListBox1.AddItem "99U21 Reactie opgave"
            ListBox1.AddItem "99U26 Muteren adm"
            ListBox1.AddItem "99U31 Fiatteren VTU"
            ListBox1.AddItem "99U36 Opdracht bank"
            ListBox1.AddItem "99U41 Maken boeking"
            ListBox1.AddItem "99U46 Controle adm"
            ListBox1.AddItem " "
            ListBox1.AddItem "Verwijderen"
        End If

        If WiClass = "COLLWZP" Then
            ListBox1.AddItem "98W01 Behand. WzP"
            ListBox1.AddItem "98W11 Brief Caesar"
            ListBox1.AddItem "98W16 Controle brief"
            ListBox1.AddItem "98A41 Contr. Adm"
            ListBox1.AddItem "98A46 Fiatteren"
            ListBox1.AddItem " "
            ListBox1.AddItem "Verwijderen"
        End If

        If IsCollAlg(WiClass) Then
            ListBox1.AddItem "Verwijderen"
        End If

        If WiClass = "COLLKLA" Then
            ListBox1.AddItem "85A06 Ontv. Bevest."
            ListBox1.AddItem "85A11 Beoord. OM"
            ListBox1.AddItem "85A16 Klachtafh."
            ListBox1.AddItem "85A18 Park.Afh."
            ListBox1.AddItem "85A20 Controle OM"
            ListBox1.AddItem "85A26 Communicatie"
            ListBox1.AddItem "85A30 Dir. Brief"
            ListBox1.AddItem "85A36 Nazorg"
            ListBox1.AddItem " "
            ListBox1.AddItem "85A40 Voortgang"
            ListBox1.AddItem "Verwijderen"
        End If
    End If

    If FuncSecGroup <> "WFMGEBRUIKER" Then
        If (WiClass <> "COLLDEB") And (WiClass <> "COLLVORD") Then
            ListBox1.AddItem " "
            ListBox1.AddItem "REG90 Archief"
        End If
    End If

    If WiClass = "COLLDEB" Then
        ListBox1.AddItem "42D21 Bellen"
        ListBox1.AddItem "42D31 Brief"
        ListBox1.AddItem "42D41 Brief"
        ListBox1.AddItem "42D51 Brief"
        ListBox1.AddItem "42D61 Brief"
        ListBox1.AddItem "42D71 Brief"
        ListBox1.AddItem "42D81 Brief"
        ListBox1.AddItem "43D01 Inregelen"
        ListBox1.AddItem "44D01 Inregelen"
        If FuncSecGroup <> "WFMGEBRUIKER" Then
            ListBox1.AddItem " "
            ListBox1.AddItem "Verwijderen"
        End If
    End If

    If WiClass = "COLLVORD" Then
        ' WO 30-10-2008 VOR19 Niet iedereen mag doorzenden en verplaatsen
        If (FuncSecGroup = "APPBEHEER" And InStr("FEP;VOR", CALGetUserVar("Afdeling", CALClient.username)) > 0) _
        Or FuncSecGroup = "SYSTEEMBEHEER" Then
            ListBox1.AddItem "46V02 Nieuwe VOR"
            ListBox1.AddItem "46V04 Beoordelen VOR"
            ListBox1.AddItem "46V08 Informatie VOR"
            ListBox1.AddItem "46V09 Prk Nieuwe VOR"
            ListBox1.AddItem "46V10 Inh Corr."
            ListBox1.AddItem "46V11 HerBeoord.VOR"
            ListBox1.AddItem "46V12 Terugvorderen"
            ListBox1.AddItem "46V14 Remises"
            ListBox1.AddItem "46V15 Remises Fiat"
            ListBox1.AddItem "46V16 Incassobureau"
            ListBox1.AddItem "46V26 Verrekeningen"
            ListBox1.AddItem "46V30 Afboeken"
            ListBox1.AddItem "46V36 Kwart. Contr"
            ListBox1.AddItem "46V40 VOR Gereed"
            ListBox1.AddItem "46V50 Uitzoeken VOR"
            ListBox1.AddItem "46V54 Bet. regeling"
            ListBox1.AddItem "46V56 Prk. Bet. reg"
            ListBox1.AddItem "46V60 Contr. Bet Reg"
            ListBox1.AddItem "  "
            ListBox1.AddItem "REG90 Archief"
            ListBox1.AddItem " "
            ListBox1.AddItem " "
            ListBox1.AddItem "Verwijderen"
        End If
    End If
End Sub
Attribute VB_Name = "frmWFMData"
Attribute VB_Base = "0{B2346AA5-3B53-4077-A63F-0926EDACFA74}{49302336-4AA2-48AE-AE64-B2D0FB238BDC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Option Compare Text

Private FormInit        As Boolean

Private Sub cmdAfsluiten_Click()
    FormInit = False
    Me.Hide
End Sub

Private Sub cmdExcel_Click()
Dim AllTables           As Collection
Dim TableName
Dim CSVLines            As Collection
Dim CSVLine
Dim CSVRec
Dim XMLDb               As OWRTXmlDb
Dim xlApp               As Object
Dim xlWbk               As Object
Dim xlSht               As Object
Dim xlShtRow            As Long
Dim i                   As Integer
Dim xlShtColumn         As Long
Dim WFMTableName        As String

    On Error GoTo ErrH
    WFMTableName = ListView1.SelectedItem.Text
    Set XMLDb = WFMData.getXML_DBByDomain(WFMTableName)
    On Error Resume Next
    Set xlApp = GetObject(, "Excel.Application")
    If xlApp Is Nothing Then
        On Error GoTo ErrH
        Set xlApp = CreateObject("Excel.Application")
        If xlApp Is Nothing Then Err.Raise 12345, , "Kan Excel niet openen"
    End If
    On Error GoTo ErrH
    If Not xlApp.Visible Then xlApp.Visible = True
    Set xlWbk = xlApp.Workbooks.Add
    If Not xlWbk Is Nothing Then
        Set AllTables = XMLDb.AllTablesList
        For Each TableName In AllTables
            Set CSVLines = XMLDb.exportCSV(CStr(TableName), "~")
            Set xlSht = xlWbk.Worksheets.Add
            xlSht.name = TableName
            xlShtRow = 1
            For Each CSVLine In CSVLines
                xlShtColumn = 1
                CSVRec = Split(CSVLine, "~")
                For i = LBound(CSVRec) To UBound(CSVRec)
                    xlSht.Cells(xlShtRow, xlShtColumn) = CSVRec(i)
                    xlShtColumn = xlShtColumn + 1
                Next i
                xlShtRow = xlShtRow + 1
            Next
            With xlSht
                .Columns.AutoFit
            End With
        Next
    End If
    xlApp.Visible = True
    Exit Sub

ErrH:
    DisplayError "Excel"
End Sub

Private Sub cmdExportAll_Click()
Dim XMLDb               As OWRTXmlDb
Dim WFMTableName        As String
Dim Domain              As String
Dim tmpCurrentPath      As String

    On Error GoTo ErrH
    Domain = ListView1.SelectedItem.Text
    WFMTableName = ListView1.SelectedItem.ListSubItems.item(1).Text
    CommonDialog1.Filter = "XML files|*.xml|Alle files|*.*"
    CommonDialog1.FilterIndex = 1
    On Error Resume Next
    CommonDialog1.CancelError = True
    CommonDialog1.ShowSave
    If Err <> 0 Then Exit Sub
    On Error GoTo 0
    tmpCurrentPath = CommonDialog1.FileName
    If tmpCurrentPath = "" Then Exit Sub
    Set XMLDb = WFMData.lockXMLTable(WFMTableName)
    XMLDb.Save tmpCurrentPath, False
    ListView1.SetFocus
    Exit Sub
    Me.MousePointer = fmMousePointerDefault

ErrH:
    DisplayError "Export"
End Sub

Private Sub cmdImport_Click()
Dim XMLDb               As OWRTXmlDb
Dim WFMTableName        As String
Dim Domain              As String

    On Error GoTo ErrH
    If Not Left(UCase(Application.CALClient.username), 6) = "SYSADM" Then
        Beep
        MsgBox "Alleen sysadminstrators!"
        Exit Sub
    End If
    Domain = ListView1.SelectedItem.Text
    WFMTableName = ListView1.SelectedItem.ListSubItems.item(1).Text
    CommonDialog1.FileName = WFMTableName & ".xml"
    CommonDialog1.Filter = "XML files|*.xml|Alle files|*.*"
    CommonDialog1.FilterIndex = 1
    On Error Resume Next
    CommonDialog1.CancelError = True
    CommonDialog1.ShowOpen
    If Err <> 0 Then Exit Sub
    On Error GoTo ErrH
    Me.MousePointer = fmMousePointerHourGlass
    Set XMLDb = WFMData.lockXMLTable(WFMTableName)
    XMLDb.Load CommonDialog1.FileName
    If XMLDb.RootName <> "WFMData" Then Err.Raise 12345, , CommonDialog1.FileName & " is geen WFMData bestand!"
    WFMDataUtil.saveXMLTable WFMTableName, XMLDb, Domain
    WFMData.ResetCache
    Me.MousePointer = fmMousePointerDefault
    UserForm_Activate
    Exit Sub
    Me.MousePointer = fmMousePointerDefault

ErrH:
    DisplayError "Import"
End Sub

Private Sub cmdUpdateCommon_Click()
Dim XMLDb               As OWRTXmlDb
Dim WFMTableName        As String
Dim Domain              As String

    On Error GoTo ErrH
    Domain = ListView1.SelectedItem.Text
    WFMTableName = ListView1.SelectedItem.ListSubItems.item(1).Text
    If WFMTableName = "" Then Err.Raise 12345, , "Selecteer eerst een WFMTabel"
    Set XMLDb = WFMData.lockXMLTable(WFMTableName)
    WFMDataUtil.saveXMLTable WFMTableName, XMLDb, Domain
    ListView1.SetFocus
    Exit Sub
    Me.MousePointer = fmMousePointerDefault

ErrH:
    DisplayError "Update Definition"
End Sub

Private Sub ListView1_DblClick()
Dim WFMTableName        As String
Dim Domain              As String
Dim hWnd                As Long
Dim TabelEditor

    On Error GoTo ErrH
    Domain = ListView1.SelectedItem.Text
    WFMTableName = ListView1.SelectedItem.ListSubItems.item(1).Text
    On Error Resume Next
    Set TabelEditor = CreateObject("WFMTabelEdit2.WFMTabelEdit2OCX")
    If Err = 0 Then
        On Error GoTo ErrH
        editWFMTable2 WFMTableName, Domain
    Else
        On Error GoTo ErrH
        editWFMTable WFMTableName, Domain
    End If
    ListView1.SetFocus
    DoEvents
    hWnd = FindWindow(ByVal vbNullString, "Beheer WFMTabellen")
    If hWnd <> 0 Then
        SetFocus hWnd
        DoEvents
'[W7]        SendKeys ("{TAB}")
'[W7]        SendKeys ("+{TAB}")
    End If
    Exit Sub

ErrH:
    frmWFMData.Enabled = True
    frmWFMData.MousePointer = fmMousePointerDefault
    DisplayError "editWFMTable"
End Sub

Private Sub editWFMTable2(WFMTableName As String, Domain)
Dim TmpFile             As String
Dim XMLDb               As OWRTXmlDb
Dim TabelEditor
Dim tmpFileProps        As Scripting.File
Dim tmpFileDate

    On Error GoTo ErrH
    Set XMLDb = WFMData.lockXMLTable(WFMTableName)
    TmpFile = fso.GetSpecialFolder(TemporaryFolder) & "\~" & WFMTableName & ".xml"
    XMLDb.Save TmpFile, True
    Set tmpFileProps = fso.GetFile(TmpFile)
    tmpFileDate = tmpFileProps.DateLastModified
    frmWFMData.MousePointer = fmMousePointerHourGlass
    frmWFMData.Enabled = False
    Set TabelEditor = CreateObject("WFMTabelEdit2.WFMTabelEdit2OCX")
    TabelEditor.File = TmpFile
    TabelEditor.showUI
    On Error GoTo Finish
    While TabelEditor.showUIActive
        Sleep 100
    Wend
    Set tmpFileProps = fso.GetFile(TmpFile)
    If tmpFileDate < tmpFileProps.DateLastModified Then
        XMLDb.Load TmpFile
        If XMLDb.RootName <> "WFMData" Then Err.Raise 12345, , TmpFile & " is geen WFMData bestand!"
        WFMDataUtil.saveXMLTable WFMTableName, XMLDb, Domain
    End If

Finish:
    On Error Resume Next
    TabelEditor.closeUI
    fso.DeleteFile TmpFile, True
    DoEvents
    Set TabelEditor = Nothing
    frmWFMData.Enabled = True
    frmWFMData.MousePointer = fmMousePointerDefault
    Exit Sub

ErrH:
    frmWFMData.Enabled = True
    frmWFMData.MousePointer = fmMousePointerDefault
    DisplayError "Update WFMTables"
    If fso.FileExists(TmpFile) Then fso.DeleteFile TmpFile
    FixFocus
End Sub

Private Sub editWFMTable(WFMTableName As String, Domain)
Dim TmpFile             As String
Dim XMLDb               As OWRTXmlDb
Dim FileVersion
Dim hWnd                As Long
Dim tmpFileProps        As Scripting.File
Dim tmpFileDate
Dim TabelEditor

    On Error GoTo ErrH
    Set XMLDb = WFMData.lockXMLTable(WFMTableName)
    TmpFile = "~" & WFMTableName & ".xml"
    XMLDb.Save TmpFile, True
    Set tmpFileProps = fso.GetFile(TmpFile)
    tmpFileDate = tmpFileProps.DateLastModified
    frmWFMData.MousePointer = fmMousePointerHourGlass
    frmWFMData.Enabled = False
    Shell "C:\BUmap\WFM\Workdesk\Bin\WFMTabelEdit2.exe " & "WFMTable= " & TmpFile, vbNormalFocus
    AppActivate "Workflowtabel", 1

Wait:
    Sleep 100
    DoEvents
    hWnd = FindWindow(ByVal vbNullString, "Workflowtabel")
    If hWnd <> 0 Then GoTo Wait
    Set tmpFileProps = fso.GetFile(TmpFile)
    If tmpFileDate < tmpFileProps.DateLastModified Then
        frmWFMData.MousePointer = fmMousePointerHourGlass
        XMLDb.Load TmpFile
        If XMLDb.RootName <> "WFMData" Then Err.Raise 12345, , TmpFile & " is geen WFMData bestand!"

        WFMDataUtil.saveXMLTable WFMTableName, XMLDb, Domain
    End If
    fso.DeleteFile TmpFile
    frmWFMData.Enabled = True
    frmWFMData.MousePointer = fmMousePointerDefault
    Exit Sub

ErrH:
    frmWFMData.Enabled = True
    frmWFMData.MousePointer = fmMousePointerDefault
    DisplayError "Update WFMTables"
    If fso.FileExists(TmpFile) Then fso.DeleteFile TmpFile
    FixFocus
End Sub

Private Sub UserForm_Activate()
Dim myDomain
Dim myListItem          As ListItem
Dim temp                As String
Dim myDomainList        As Collection

    On Error GoTo ErrH
    InitWorkdesk            'Check init makes development easier
    If Not FormInit Then
        If Left(UCase(Application.CALClient.username), 6) = "SYSADM" Then
            VBForm.setFormStyle2 Me, True, True, True, True, True, True, True, True, True, False
            cmdUpdateCommon.Visible = True
            cmdExportAll.Visible = True
            cmdImport.Visible = True
        End If
        ListView1.ColumnHeaders.item(1).Width = ListView1.Width * 0.28
        ListView1.ColumnHeaders.item(2).Width = ListView1.Width * 0.7
        ListView1.Appearance = cc3D
        ListView1.View = lvwReport
        ListView1.LabelWrap = True
        ListView1.LabelEdit = lvwManual
        FormInit = True
    End If
    ListView1.ListItems.Clear
    Set myListItem = ListView1.ListItems.Add(, "Common", "Common")
    myListItem.ListSubItems.Add , WFMDataWIName, WFMDataWIName
    On Error GoTo ErrH
    Set ListView1.SelectedItem = ListView1.ListItems.item(1)
    ListView1.SelectedItem.Selected = True
    ListView1.SetFocus
    FixFocus
    Exit Sub

ErrH:
    DisplayError "WFMData"
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
Dim myListItem          As ListItem

    On Error Resume Next
    For Each myListItem In ListView1.ListItems
        WFMData.cleanWFMTable myListItem.ListSubItems.item(1).Text
    Next
    FormInit = False
End Sub
Attribute VB_Name = "frmWOBeoordDoc"
Attribute VB_Base = "0{E34FB8A6-4691-491C-9E51-8DA2D27446DF}{D3E1C448-5E00-4C45-9FDC-1592E7B0FB86}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Const csBWONieuw = "BWO Nieuw"

Dim myForm              As Object
Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String

Private Sub cmdExtraScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    If YetAnotherExtralink(WIViewer, WFM_NR_POLIS.Text) Then
        Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
        WFM_BEH_GROEP.Text = get_BEHGRP(WFM_IND_HUPO.Text)
'       SVT nvt bij verevening 31-03-2006
'       SetIndTrigger
    End If
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Screenscraping niet gelukt!"
End Sub

Private Sub cmdScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
    WFM_BEH_GROEP.Text = get_BEHGRP(WFM_IND_HUPO.Text)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Open eerst het juiste CAESAR scherm (U1 OHUP of U3 INWG)."
End Sub

Private Sub cmdUitz_Click()
    On Error GoTo EH
    CheckOpUitzondering WIViewer
    Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub CheckFields()
    If WFM_JN_NAAR_CASE360 = "" Then                    '[PAC] - TD17266
        PolisNummerCheck WFM_NR_POLIS
    End If                                              '[PAC] - TD17266
    DateCheck WFMDGEB_DEELN
    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR = Format(Val(WFM_NR_AEGAR), "#########")
    If WFM_NR_AEGAR <> Empty And Val(WFM_NR_AEGAR) <> 0 Then WFM_NR_AEGAR = Format(Val(WFM_NR_AEGAR), "000000000")
    NumberCheck WFM_AANTAL_ZAKEN
    If WFM_DOCTYPE.Value = "" Then
        WFM_DOCTYPE.BackColor = TextboxRed
        Err.Raise 12349, , "Document type is niet ingevuld."
    End If
    If WFM_IND_TRIGGER.Value = "" Then
'       Voor het geval dat de afterupdate van doctype niet is uitgevoerd.
        WFM_IND_TRIGGER.Value = Left(WFM_DOCTYPE, 3)
    End If
End Sub

Private Sub cmdOpslaan_Click()
Dim myIdent                 As String

    On Error GoTo EH

'[PAC] - TD17266  Code added to check CASE360 DocType
    WFM_JN_NAAR_CASE360.Text = ""
    If JN_NAAR_CASE360.Value <> "" Then
        cbCase360DocType.ListIndex = 0
        If WFM_NR_POLIS.Text <> "" And _
           Len(WFM_NR_POLIS.Text) <> 10 Then
            MsgBox "DLNMR niet volledig ingevuld (10 pos.)."
            Exit Sub
        End If
        If WFM_NR_AEGAR.Text <> "" And _
           Len(WFM_NR_AEGAR.Text) <> 9 Then
            MsgBox "Aegarnummer niet volledig ingevuld (9 pos.)."
            Exit Sub
        End If
        If WFM_NR_KLANT.Text <> "" And _
           Len(WFM_NR_KLANT.Text) <> 6 Then
            MsgBox "Klantnummer niet volledig ingevuld (6 pos.)."
            Exit Sub
        End If

        WFM_JN_NAAR_CASE360.Text = "WOI"
        WFM_IND_TRIGGER.Text = "BOP"            'Forceer de zaak in 99A01 te blijven !!!
        WFM_DOCTYPE.Clear
        WFM_DOCTYPE.AddItem cbCase360DocType.Value
        WFM_DOCTYPE.ListIndex = 0
    End If
'[PAC] - TD17266  End Code added to check CASE360 DocType

    Call CheckFields
    myIdent = WFM_NR_POLIS + WFM_IND_TRIGGER
    If WFM_ZAAK_IDENT_NR <> myIdent Then WFM_ZAAK_IDENT_NR = myIdent
    If WFM_DOCTYPE.Value = "INF Informatieverzoek" Then Err.Raise 12345, , "Verander het Doctype."
    If Not WorkflowSave(WIViewer, Me) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdToevoegen_Click()
Dim mobjQueryResults    As CALQueryResults
Dim myQueryFrm          As Object

    On Error GoTo EH
    If WFM_NR_POLIS = "" Then
        WFM_NR_POLIS.BackColor = TextboxRed
        Err.Raise 12345, , "Deelnemer nummer is niet ingevuld."
    End If
    Call CheckFields
    If Not WorkflowSave(WIViewer) Then Exit Sub
'   Zoeken naar folder met zelfde deelnemer nummer.
'   na keuze van folder wordt document hierin geimporteerd.
    If Not Me.QueryFrm Is Nothing Then
       Me.QueryFrm.Show 0
       Exit Sub
    End If
    Set Me.QueryFrm = New frmZoekImport
    Set myQueryFrm = Me.QueryFrm
    Set myQueryFrm.WorkitemViewer = Me.WorkitemViewer
    Set myQueryFrm.ParentForm = Me
    myQueryFrm.Show 0
    Exit Sub

EH:
    If Err.Number = 12349 Then
        Resume Next ' komt niet meer terug in checkfields
        WFM_DOCTYPE.BackColor = TextboxWhite
    End If
    DisplayError "Toevoegen"
End Sub

Private Sub CopyButton_Click()
Static KopieNr          As Integer
Dim KopieItem           As CALClientListItem

    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    KopieNr = KopieNr + 1
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call CopySendDocument(WIViewer.CALClientListItem, KopieNr)
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    DisplayError "Kopie"
    MousePointer = fmMousePointerDefault
End Sub

Private Sub UserForm_Activate()
Dim varDoorzendenNaarList   As Variant
Dim i                       As Integer
Dim sSavDocType             As String                   '[PAC] - TD17266
Static Init                 As Boolean

    CheckMailBox
    If Init Then Exit Sub
    Init = True
    If UCase(WIViewer.CALClientListItem.Info.SourceWorkstep) = "99A06 DEELN ONBEKEND" Then
        cmdToevoegen.Visible = False
    End If
'   Doctype, werksrt
    WFM_DOCTYPE.ColumnCount = 2
    WFM_DOCTYPE.BoundColumn = 1
    WFM_DOCTYPE.TextColumn = -1
    WFM_DOCTYPE.ColumnWidths = ";0"
'   Doctype
    DocTypeAdd "", csDocOverig
    DocTypeAdd csBWONieuw, csDocNieuw
    DocTypeAdd "BWO Akkoord werkgever", csDocRendezvous
    DocTypeAdd "BWO Opgave OW", csDocRendezvous
    DocTypeAdd "BWO Reaktie deelnemer", csDocRendezvous
    DocTypeAdd "UWO Nieuw", csDocNieuw
    DocTypeAdd "UWO Reaktie nieuwe PUO", csDocRendezvous
    DocTypeAdd csOverigePost, csDocOverig
    DocTypeAdd "XXX Vertraging", csDocOverig
    DocTypeAdd "XXX Rappel", csDocOverig
    DocTypeAdd "XXX Klacht", csDocOverig
    DocTypeAdd "DLN Algemeen", csDocNieuw
    DocTypeAdd "INF Informatieverzoek", csDocOverig
    If WFM_DOCTYPE = "" Then WFM_DOCTYPE.ListIndex = 0
    Call EnDisAbleToevoegen(WFM_DOCTYPE, cmdToevoegen)
    Call EnDisAbleTelefoonframe

'[PAC] - TD17266  Initialize JN_NAAR_CASE360
Dim oWFVars                 As CALWorkflowVariables     '[PAC] - TD17266 - TIJDELIJK
Dim sWOIOn                  As String                   '[PAC] - TD17266 - TIJDELIJK

    On Error Resume Next
    Set oWFVars = Application.CALClient.WorkflowVariables("crvWOI", calWorkflowVariableCategoryRoute)
    sWOIOn = UCase(oWFVars.item(1).Value.Value)
    If UCase(sWOIOn) = "ON" Then
        fraCase360.Visible = True
        JN_NAAR_CASE360.AddItem ""
        JN_NAAR_CASE360.AddItem "WaardeOverdracht Inkomend"
'        JN_NAAR_CASE360.AddItem "WaardeOverdracht Uitgaand"

        sSavDocType = WFM_DOCTYPE.Text
        If WFM_JN_NAAR_CASE360.Text = "WOI" Then
            JN_NAAR_CASE360.Value = "WaardeOverdracht Inkomend"
            cbCase360DocType.Value = sSavDocType
        Else
            Call JN_NAAR_CASE360_Change
        End If
    End If
'[PAC] - TD17266  End Initialize JN_NAAR_CASE360
End Sub

Private Sub DocTypeAdd(DocType As String, DocBehandeling As String)
Static i                As Integer

    If i = Empty Then i = 0
    WFM_DOCTYPE.AddItem
    WFM_DOCTYPE.list(i, 0) = DocType
    WFM_DOCTYPE.list(i, 1) = DocBehandeling
    i = i + 1
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Set QueryFrm(objForm)
    Set myForm = objForm
End Property
Public Property Get QueryFrm() As Object
    Set QueryFrm = myForm
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Terminate()
    If Not Me.QueryFrm Is Nothing Then
        Unload Me.QueryFrm
    End If
End Sub

Private Sub WFM_AANTAL_ZAKEN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    NumberCheck WFM_AANTAL_ZAKEN
    WFM_AANTAL_ZAKEN.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Aantal zaken"
End Sub

'[PAC] - TD17266  Subroutine Added
Private Sub JN_NAAR_CASE360_Change()
    cbCase360DocType.Clear
    If JN_NAAR_CASE360.Value = "" Then
        cbCase360DocType.Enabled = False
        WFM_DOCTYPE.Enabled = True
        cmdToevoegen.Enabled = True
        CopyButton.Enabled = True
    Else
        cbCase360DocType.Enabled = True
        Call FillCase360DocTypes(JN_NAAR_CASE360.Value, cbCase360DocType)
        WFM_DOCTYPE.ListIndex = 0
        WFM_DOCTYPE.Enabled = False
        cmdToevoegen.Enabled = False
        CopyButton.Enabled = False
    End If
End Sub
'[PAC] - TD17266  End Subroutine Added

Private Sub WFM_DOCTYPE_Change()
    If WFM_DOCTYPE = "" Then
        WFM_IND_TRIGGER = "BOP"
    Else
'       MaBr added the div post only for the COLLDLN
'       WIm still wants to see it as XXX klacht...
        If WFM_DOCTYPE = "XXX Klacht" Then
            WFM_IND_TRIGGER = "DLN"
        Else
            WFM_IND_TRIGGER = Left(WFM_DOCTYPE, 3)
        End If
    End If
    Call EnDisAbleTelefoonframe
    WFM_DOCTYPE.BackColor = TextboxWhite
    Call EnDisAbleToevoegen(WFM_DOCTYPE, cmdToevoegen)
End Sub

Private Sub EnDisAbleTelefoonframe()
    If WFM_DOCTYPE = csBWONieuw Then
        frmTelefoon.Visible = True
    Else
        frmTelefoon.Visible = False
    End If
End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub

Private Sub WFM_NR_AEGAR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Nr. Aegon"
End Sub

Private Sub WFM_NR_POLIS_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WFM_NR_POLIS.BackColor = TextboxWhite
    PolisNummerCheck WFM_NR_POLIS
    Exit Sub

EH:
    DisplayError "Polisnummer"
End Sub

Private Sub WFMDGEB_DEELN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDGEB_DEELN
    WFMDGEB_DEELN.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Geb. Deelnemer"
End Sub
Attribute VB_Name = "frmWODeelnOnbekend"
Attribute VB_Base = "0{577EE984-0747-4127-BD77-67AB31604B4C}{378BF483-5738-4A75-A930-AFDD2EDAACAE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String

Private Sub cmdScreen_Click()

On Error GoTo EH
    
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call AlgScreenScraping(Me, Me.WorkitemViewer)
    MousePointer = fmMousePointerDefault

Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Open eerst het juiste CAESAR scherm (OHUP of INWG)."

End Sub

Private Sub cmdUitz_Click()
On Error GoTo EH

    CheckOpUitzondering WIViewer

Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub
Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub
Private Sub CheckFields()
    
    DateCheck WFMDGEB_DEELN
    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR = Format(Val(WFM_NR_AEGAR), "#########")
    If WFM_NR_AEGAR <> Empty And Val(WFM_NR_AEGAR) <> 0 Then _
        WFM_NR_AEGAR = Format(Val(WFM_NR_AEGAR), "000000000")

End Sub
Private Sub cmdOpslaan_Click()
Dim myIdent As String

On Error GoTo EH

    Call CheckFields
    
    myIdent = WFM_NR_POLIS + WFM_IND_TRIGGER + WFM_ZK_VOLGNR
    If WFM_ZAAK_IDENT_NR <> myIdent Then
        WFM_ZAAK_IDENT_NR = myIdent
    End If
    
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)

Exit Sub

EH:
    DisplayError "Doorsturen"

End Sub


Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Set QueryFrm(objForm)
    Set myForm = objForm
End Property
Public Property Get QueryFrm() As Object
    Set QueryFrm = myForm
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property



Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    
End Sub

Private Sub UserForm_Terminate()
If Not Me.QueryFrm Is Nothing Then
    Unload Me.QueryFrm
End If

End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub



Private Sub WFM_NR_AEGAR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH

    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR.BackColor = TextboxWhite
   
Exit Sub

EH:
    DisplayError "Nr. Aegon"
End Sub

Private Sub WFM_NR_POLIS_Exit(ByVal Cancel As MSForms.ReturnBoolean)
WFM_NR_POLIS.BackColor = TextboxWhite
End Sub

Private Sub WFM_ZK_VOLGNR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_ZK_VOLGNR.BackColor = TextboxWhite
End Sub

Private Sub WFMDGEB_DEELN_Exit(ByVal Cancel As MSForms.ReturnBoolean)

On Error GoTo EH
    
    DateCheck WFMDGEB_DEELN
    WFMDGEB_DEELN.BackColor = TextboxWhite
    
Exit Sub

EH:
    DisplayError "Geb. Deelnemer"

End Sub

Attribute VB_Name = "frmWODivPost"
Attribute VB_Base = "0{BBC5EF4C-C91A-48E5-A8DA-2C80524E02E5}{B3B8287D-EE64-42A7-B003-DAEF46598DD9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myStatus As CALFormField
Dim myESWMObjID As String

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub cmdOpslaan_Click()
On Error GoTo EH
    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
    
        If optStatParkeren = True Then
            myStatus.Value = "Parkeren"
        Else
            myStatus.Value = ""
        End If
    End If
    
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Doorsturen"
    
End Sub

Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub optStatParkeren_Click()
    WFM_REDEN_PARKEREN.Enabled = True
    WFMDRAPPEL.Enabled = True
    lblRedenParkeren.Enabled = True
    lblDatum.Enabled = True

End Sub

Private Sub optStatParkerenNee_Click()
        WFM_REDEN_PARKEREN.Enabled = False
        WFMDRAPPEL.Enabled = False
        lblRedenParkeren.Enabled = False
        lblDatum.Enabled = False
        WFMDRAPPEL = ""
        WFM_REDEN_PARKEREN = ""
End Sub

Private Sub rNaarDivpostJa_Click()
    optStatParkerenNee = True
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Activate()
    InitPrios
    
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios
    
    Set myStatus = WIViewer.Fields.Find("STATUS").CALFormField
    
    If myStatus = "Parkeren" Then
            optStatParkeren = True
            FraDivPost.Visible = True
     End If
     
End Sub
Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH
  
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    
Exit Sub

EH:
    DisplayError "Rappel datum"
End Sub

Private Sub WFMrJN_AFGEHANDELD_ja_Click()
    optStatParkerenNee_Click
End Sub
Attribute VB_Name = "frmWORegistratie"
Attribute VB_Base = "0{36957BC1-2102-4B41-A0E5-DDD6A36D148D}{929D7BDB-2B11-4BAC-A4E6-E7537D4DF960}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim strAfdeling         As String ' Let op deze wordt tot nu toe alleen gebruikt voor de KJWA uitzondering en wordt dus, ongeacht user of bestemming, altijd gevuld met KJW. Niet zomaar voor andere doeleinden gebruiken!
Dim HostForm            As Object
Dim myESWMObjID         As String
Dim arrWerksoorten()    As String
Dim arrWerktypen()      As String
Dim arrWKTperWKS()      As String
Dim arrKNMperWKT()      As String
Dim arrAllWKTperWKS()   As String

Private Sub cmdExtraScreen_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    If YetAnotherExtralink(WIViewer, WFM_NR_POLIS.Text) Then
        Call AlgScreenScraping(Me, Me.WorkitemViewer, False)
        cmdScreen_Click
    End If
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Screenscraping niet gelukt!"
End Sub

Private Sub cmdScreen_Click()
Dim strleegofniet
Dim ff
''Q1 Release 2012 CR No. 153254 Dept Changes
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    Call AlgScreenScraping(Me, Me.WorkitemViewer)
    Call getTPnaamnummer(Me)
    MousePointer = fmMousePointerDefault
'   KSP blijft KSP
''    If WFM_BESTEMMING = "KSP" Then Exit Sub
'   Behandel groep zetten
'   Hier gaat het niet helemaal lekker...
    WFM_BEH_GROEP.Text = get_BEHGRP(WFM_IND_HUPO.Text)
'[PAC] - TD17266   Toegevevoegd PTL en PTR
    If WFM_BESTEMMING = "PPI" Or WFM_BESTEMMING = "FAL" Or _
       WFM_BESTEMMING = "PTE" Or WFM_BESTEMMING = "PTF" Or _
       WFM_BESTEMMING = "PTG" Or WFM_BESTEMMING = "PTH" Or _
       WFM_BESTEMMING = "PTL" Or WFM_BESTEMMING = "PTR" Or _
       WFM_BESTEMMING = "APP" Then                      '[PAC] 17MAR15 - PTN --> APP - TD172461
        Exit Sub
    End If
'   En als we tot hier gekomen zijn dan gaat het een en ander
'   (of alles naar )het PAC. Klant post gaat naar KS1 of KS2 of KS3
    If Not (WFM_NAAM_DLNMR = "") And (Len(WFM_NR_POLIS) = 10) Then WFM_BESTEMMING = "PAC"
    Exit Sub

EH:
    MousePointer = fmMousePointerDefault
    DisplayError "Open eerst het juiste CAESAR scherm (U1 OHUP of U3 INWG)."
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myIdent             As String

    On Error GoTo EH
    Call CheckFields
    
''Q1 Release 2012 CR No. 153254 Dept Changes
    If WFM_IND_HUPO = "M/P PTDC/ALG" Then WFM_PRIORITEIT = "2"
    If WFM_ZAAK_IDENT_NR <> WFM_NR_POLIS Then
        WFM_ZAAK_IDENT_NR = WFM_NR_POLIS
    End If
    If Not WorkflowSave(WIViewer) Then Exit Sub
    If WFM_BESTEMMING <> "KJWA" Then
        WFM_WERKSOORT = ""
        WFM_WERKTYPE = ""
        WFM_ZAAK_VLGNR_MEMO = ""
    End If
    Call WFMSaveButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub CheckFields()
Dim strError            As String

    strError = ""
    NumberCheck WFM_NR_AEGAR
    DateCheck WFMDDAT_DOC
    DateCheck WFMDDAT_ONTV
    DateCheck WFMDGEB_DEELN
    If WFM_BESTEMMING = "KJWA" Then
        If WFM_WERKSOORT = "" Then
            WFM_WERKSOORT.BackColor = TextboxRed
            strError = "Werksoort is niet ingevuld."
        End If
        If WFM_WERKTYPE = "" Then
            WFM_WERKTYPE.BackColor = TextboxRed
            strError = "Werktype is niet ingevuld."
        End If
        If WFM_ZAAK_VLGNR_MEMO = "" Then
            WFM_ZAAK_VLGNR_MEMO.BackColor = TextboxRed
            strError = "Zaak memo is niet ingevuld."
        End If
    End If
    If WFMDDAT_DOC = "" Then
        WFMDDAT_DOC.BackColor = TextboxRed
        strError = "Datum document is niet ingevuld."
    End If
    If strError > "" Then
        Err.Raise 12345, , strError
    End If
End Sub

Private Sub UserForm_Activate()
Dim iPos                As Integer

    WFM_BESTEMMING.list = plActieveProcessen
    iPos = 0
    While WFM_BESTEMMING.list(iPos, 0) < "KJWA"
        iPos = iPos + 1
    Wend
    WFM_BESTEMMING.AddItem "KJWA", iPos
    WFM_BESTEMMING.list(iPos, 1) = "direct naar Archief (folder)"
    strAfdeling = "KJW"             'Werksoort en werktype worden vast gevuld, maar alleen getoond bij KJWA
'   Hardcoded voor de afdelingen CCA / TOP / PJZ / PON / POV
    iPos = 0
    While WFM_BESTEMMING.list(iPos, 0) < "CCA"
        iPos = iPos + 1
    Wend
    WFM_BESTEMMING.AddItem "CCA", iPos
    WFM_BESTEMMING.list(iPos, 1) = "Contract Techniek"
    iPos = 0
    While WFM_BESTEMMING.list(iPos, 0) < "TOP"
        iPos = iPos + 1
    Wend
    WFM_BESTEMMING.AddItem "TOP", iPos
    WFM_BESTEMMING.list(iPos, 1) = "Offerte Implementatie"
    iPos = 0
    While WFM_BESTEMMING.list(iPos, 0) < "PJZ"
        iPos = iPos + 1
    Wend
    WFM_BESTEMMING.AddItem "PJZ", iPos
    WFM_BESTEMMING.list(iPos, 1) = "Pens. Juridische Zaken"
    iPos = 0
    While WFM_BESTEMMING.list(iPos, 0) < "PON"
        iPos = iPos + 1
    Wend
    WFM_BESTEMMING.AddItem "PON", iPos
    WFM_BESTEMMING.list(iPos, 1) = "Pens. Offertes Nieuw"
    iPos = 0
    While WFM_BESTEMMING.list(iPos, 0) < "POV"
        iPos = iPos + 1
    Wend
    WFM_BESTEMMING.AddItem "POV", iPos
    WFM_BESTEMMING.list(iPos, 1) = "Pens. Offertes Verlengingen"
    
'   Q3 RELEASE CHANGE TD NUMBER 157083
    iPos = 0
    While WFM_BESTEMMING.list(iPos, 0) < "PPN"
        iPos = iPos + 1
    Wend
    WFM_BESTEMMING.AddItem "PPN", iPos
    WFM_BESTEMMING.list(iPos, 1) = "PersPensioenen"
    
'   Einde hardcoded
    WFM_WERKTYPE.ColumnCount = 2
    WFM_WERKTYPE.BoundColumn = 1
    WFM_WERKTYPE.TextColumn = -1
    WFM_WERKTYPE.ColumnWidths = "30;30"
    WFM_WERKSOORT.ColumnCount = 2
    WFM_WERKSOORT.TextColumn = -1
    WFM_WERKSOORT.ColumnWidths = "30;30"

    WFM_NR_POLIS.SetFocus                               '[PAC] - TD166490
End Sub

Public Sub FillComboWRKSOORT(ByRef arrWerksoorten() As String, ByVal cbo As Control)
Dim lngDummy            As Long

    cbo.Clear
    cbo.AddItem
    cbo.list(0) = ""
    For lngDummy = LBound(arrWerksoorten) To UBound(arrWerksoorten)
        cbo.AddItem
        cbo.list(lngDummy + 1, 0) = arrWerksoorten(lngDummy)
        cbo.list(lngDummy + 1, 1) = WFMData.Common.getField("WFWerksoort", "WerksoortOmschrijving", "WerksoortAfkorting", arrWerksoorten(lngDummy), "Enabled", "1")
    Next
End Sub

Public Sub FillComboWRKtypen(ByRef arrWerktypen() As String, ByVal cbo As Control)
Dim lngDummy            As Long

    cbo.Clear
    cbo.AddItem
    cbo.list(0) = ""
    For lngDummy = LBound(arrWerktypen) To UBound(arrWerktypen)
        cbo.AddItem
        cbo.list(lngDummy + 1, 0) = arrWerktypen(lngDummy)
        cbo.list(lngDummy + 1, 1) = WFMData.Common.getField("WFWerktype", "WerktypeOmschrijving", "Werktype", arrWerktypen(lngDummy), "Enabled", "1")
   Next
End Sub

Public Sub FillComboKenmerken(ByRef arrKenmerken() As String, ByVal cbo As Control)
Dim lngDummy            As Long

    cbo.Clear
    cbo.AddItem
    cbo.list(0) = ""
    For lngDummy = LBound(arrKenmerken) To UBound(arrKenmerken)
        cbo.AddItem arrKenmerken(lngDummy)
   Next
End Sub

Private Sub AllWerktypesPERwerksoort(strAfdeling As String)
Dim StrWKTtemp          As String
Dim strWKT              As String
Dim lngDummy, ff        As Long
Dim colalf              As Collection

    On Error GoTo EH
    For lngDummy = LBound(arrWerksoorten) To UBound(arrWerksoorten)
        StrWKTtemp = WFMData.Common.getField("WFAfdeling", arrWerksoorten(lngDummy), "AfdCode", strAfdeling)
        If strWKT = "" Then
              strWKT = StrWKTtemp
        Else
             strWKT = strWKT + "," + StrWKTtemp
        End If
    Next
    arrAllWKTperWKS = Split(strWKT, ",")
    Set colalf = New Collection
    For lngDummy = LBound(arrAllWKTperWKS) To UBound(arrAllWKTperWKS)
        colalf.Add arrAllWKTperWKS(lngDummy)
    Next
'   Sorteren
    Set colalf = SortCollection(colalf)
    For lngDummy = 1 To colalf.Count
        ff = lngDummy - 1
        arrAllWKTperWKS(ff) = colalf.item(lngDummy)
    Next
    Exit Sub

EH:
    DisplayError "AllWerktypesPERwerksoort"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub WFM_BESTEMMING_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_BESTEMMING.Value = UCase(WFM_BESTEMMING.Value)
    Cancel = False
End Sub

Private Sub WFM_BESTEMMING_Change()
    If WFM_BESTEMMING = "KJWA" Then
'       Onderstaand stuk is gekopieerd van uitgecommentarieerd stuk uit Activate WO 19 nov 2007 TD99161
        arrWerksoorten = Split(WFMData.Common.getField("WFAfdeling", "Werksoorten", "AfdCode", strAfdeling), ",")
        FillComboWRKSOORT arrWerksoorten, WFM_WERKSOORT
        AllWerktypesPERwerksoort (strAfdeling)   ' Vullen van arrAllWKTperWKS
        If WFM_WERKSOORT = "" Then
            FillComboWRKtypen arrAllWKTperWKS, WFM_WERKTYPE
        Else
            arrWKTperWKS = Split(WFMData.Common.getField("WFAfdeling", WFM_WERKSOORT, "AfdCode", strAfdeling), ",")
            FillComboWRKtypen arrWKTperWKS, WFM_WERKTYPE
        End If
'       Dit is gedaan omdat de comboboxen van WerkSoort en -Type niet goed gevuld werden (v.w.b. mogelijke keuze)
        Label52.Visible = True
        Label53.Visible = True
        Label59.Visible = True
        Label60.Visible = True
        WFM_ZAAK_VLGNR_MEMO.Visible = True
        WFM_WERKTYPE.Visible = True
        WFM_WERKSOORT.Visible = True
        WFM_IND_TRIGGER.Visible = True
        If WFM_WERKTYPE.ListIndex < 1 And WFM_WERKSOORT.ListIndex < 1 Then
            WFM_WERKTYPE = "JWK" ' werksoort wordt er automatisch bijgezocht
        End If
    Else
        Label52.Visible = False
        Label53.Visible = False
        Label59.Visible = False
        Label60.Visible = False
        WFM_ZAAK_VLGNR_MEMO.Visible = False
        WFM_WERKTYPE.Visible = False
        WFM_WERKSOORT.Visible = False
        WFM_IND_TRIGGER.Visible = False
        WFM_ZAAK_VLGNR_MEMO.BackColor = TextboxWhite
        WFM_WERKTYPE.BackColor = TextboxWhite
        WFM_WERKSOORT.BackColor = TextboxWhite
        WFM_IND_TRIGGER.BackColor = TextboxWhite
        WFM_ZAAK_VLGNR_MEMO = ""
        WFM_WERKSOORT = ""
        WFM_WERKTYPE = ""
        WFM_IND_TRIGGER = ""
    End If
End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub

Private Sub WFM_NR_AEGAR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    NumberCheck WFM_NR_AEGAR
    WFM_NR_AEGAR.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Nr. Aegar"
End Sub

Private Sub WFM_NR_KLANT_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    Call getTPnaamnummer(Me)

EH:
    DisplayError "TPnummer"
End Sub

Private Sub WFM_NR_POLIS_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WFM_NR_POLIS.BackColor = TextboxWhite
    PolisNummerCheck WFM_NR_POLIS
    cmdOpslaan.Enabled = True
    Exit Sub

EH:
    DisplayError "Polisnummer"
   cmdOpslaan.Enabled = False
End Sub

Private Sub WFM_WERKSOORT_Change()
    On Error GoTo EH
    If Not WFM_WERKSOORT = "" Then
'       Mabr werktypen vullen / weghalen
        If Not strAfdeling = "" Then
            arrWKTperWKS = Split(WFMData.Common.getField("WFAfdeling", WFM_WERKSOORT, "AfdCode", strAfdeling), ",")
            FillComboWRKtypen arrWKTperWKS, WFM_WERKTYPE
            If WFM_WERKTYPE.ListCount = 2 Then WFM_WERKTYPE.ListIndex = 1
        End If
    Else            'Mabr werksoorten leeggemaakt
        If WFM_BESTEMMING = "KJWA" Then FillComboWRKtypen arrAllWKTperWKS, WFM_WERKTYPE
        WFM_WERKTYPE = ""
    End If
    WFM_WERKSOORT.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Werksoort"
End Sub

Private Sub WFM_WERKTYPE_Change()
Dim strTemp             As String
Dim strWeken            As String
Dim strDate             As String

'   Mabr rare errors
    On Error Resume Next
    If Not WFM_WERKTYPE = "" Then
        If WFM_WERKSOORT = "" Then
'           Doordat de werksoort wijzigt wordt de type weer leeggemaakt.. geinig
            strTemp = WFM_WERKTYPE
            WFM_WERKSOORT = WFMData.Common.getField("WFWerktype", "Werksoort", "Werktype", strTemp)
            WFM_WERKTYPE = strTemp
        End If
        arrKNMperWKT = Split(WFMData.Common.getField("WFWerktype", "Kenmerk", "Werktype", WFM_WERKTYPE), ",")
        FillComboKenmerken arrKNMperWKT, WFM_IND_TRIGGER
        If WFM_IND_TRIGGER.ListCount = 2 Then WFM_IND_TRIGGER.ListIndex = 1
    End If
    WFM_WERKTYPE.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Werktype"
End Sub

Private Sub WFM_ZAAK_VLGNR_MEMO_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_ZAAK_VLGNR_MEMO.BackColor = TextboxWhite
End Sub

Private Sub WFMDDAT_DOC_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_DOC
    WFMDDAT_DOC.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum document"
End Sub

Private Sub WFMDDAT_ONTV_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_ONTV
    WFMDDAT_ONTV.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum ontvangen"
End Sub

Private Sub WFMDGEB_DEELN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDGEB_DEELN
    WFMDGEB_DEELN.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Geb. Datum"
End Sub
Attribute VB_Name = "frmWzPBehandelen"
Attribute VB_Base = "0{05162A82-105D-45E6-92D1-139E92AEADA3}{43BAA4FC-A0CF-4B94-9F98-E4B8C3418A63}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit
Dim myForm As Object
Dim WIViewer As WFDWorkitem.WorkitemViewer
Dim myESWMObjID As String
Dim myPolOver  As CALFormField
Dim mbOrgVervBriefAang As Boolean

Private Sub cmdGBA_Click()
On Error GoTo EH

    Set frmExcSelecteerBegunst.WorkitemViewer = WIViewer
    frmExcSelecteerBegunst.Show 1
    WFMGetField WIViewer, WFMCJN_X_AANM, 4
    
    Me.Repaint
 
Exit Sub

EH:
    DisplayError "GBA gegevens"
    

End Sub

Private Sub lbTemplates_DBLClick(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH

    'If Not WorkflowSave(WIViewer) Then Exit Sub
    Call StartBrief(WorkitemViewer, lbTemplates.Value)
    
Exit Sub

EH:
    DisplayError "Dubbelklik brief"
    
End Sub

Private Sub WFMDDAT_INGANG_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH
    
    DateCheck WFMDDAT_INGANG
    WFMDDAT_INGANG.BackColor = TextboxWhite

Exit Sub

EH:
    DisplayError "Ingangsdatum"

End Sub

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
On Error GoTo EH

    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite

Exit Sub

EH:
    DisplayError "Rappeldatum"

End Sub
Private Sub UserForm_Activate()
Static Init As Boolean

    If Init Then Exit Sub
    Init = True
    
    lbTemplates.AddItem "777"
    lbTemplates.AddItem "VTU"
    lbTemplates.AddItem "PIN Opgave OVL"

    GetCALXFormFields
    If WFM_JN_VTU_BEHAND = "J" Then
        lblVTU.Enabled = False
        WFMrJN_VTU_GEMAAKT_ja.Enabled = False
        WFMrJN_VTU_GEMAAKTnee.Enabled = False
        WFMrJN_VTU_GEMAAKTonb.Enabled = False
    End If
    
    If Left(WFM_DOCTYPE, 3) = "OVL" Then
        txtBetreft = "WZP Ingang verlenging"
    Else
        txtBetreft = WFM_DOCTYPE
    End If
    
    If WFM_DOCTYPE = "WZP Einde" Then
        fraEinde.Visible = True
    Else
        fraIngang.Visible = True
    End If
    If WFM_JN_STUKKEN_VOLL = "N" Then
        MsgBox "De stukken zijn volgens FEP niet volledig. Zie notitie.", vbExclamation + vbOKOnly
    End If
    
    mbOrgVervBriefAang = WFMrJN_VERV_BRIEF_AANG_ja
    
    InitPrios
    WFM_PRIORITEIT.ColumnCount = 2
    WFM_PRIORITEIT.BoundColumn = 1
    WFM_PRIORITEIT.TextColumn = -1
    WFM_PRIORITEIT.ColumnWidths = "15;"
    WFM_PRIORITEIT.list = astrPrios

End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property
Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    
End Sub

Sub GetCALXFormFields()
    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
End Sub

Private Sub cmdUitz_Click()
On Error GoTo EH

    CheckOpUitzondering WIViewer

Exit Sub

EH:
    DisplayError "CheckOpUitzondering"
End Sub
Private Sub cmdTerug_Click()
On Error GoTo EH

    Call WFMBackButton(WIViewer)
    
Exit Sub

EH:
    DisplayError "Annuleren"
End Sub
Private Sub cmdOpslaan_Click()
Dim myIdent As String

On Error GoTo EH

    DateCheck WFMDRAPPEL
    
    If mbOrgVervBriefAang = False And WFMrJN_VERV_BRIEF_AANG_ja Then
        If Not CaesarNotitie Then Exit Sub
    End If
    
    If Not SetCALXFormFields Then Exit Sub
    
    
    
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)

Exit Sub

EH:
    DisplayError "Doorsturen"

End Sub
Function CaesarNotitie() As Boolean
Dim strTekst As String
Dim strFilename As String
Dim fs As New FileSystemObject
Dim ts As TextStream
Dim WI As CALWorkitemInfo
Dim ChildItem As CALClientListItem
Dim objImport As CALImport
Dim FldChild As CALFolderChild
Dim lngShell As Long

On Error GoTo EH

    CaesarNotitie = False
    
    strTekst = "CAESAR BRIEF VERNIETIGEN" + vbCrLf + vbCrLf
    strTekst = strTekst + "Polisnummer: " + WFM_NR_POLIS + vbCrLf
    strTekst = strTekst + "Naam       : " + WFM_NAAM_DLNMR
    
    strFilename = pvTempDir + "~ESWM" + Trim(ESWMObjID) + ".txt"
    Kill strFilename
    
    Set ts = fs.CreateTextFile(strFilename)
    ts.Write (strTekst)
    ts.Close
    
    'Importeren document
    Set WI = CALClient.CreateImport("CAESAR Brief vernietigen", "MEMO", strFilename)
    Set ChildItem = CALClient.ClientList.Add(WI.objId, calAddRetain)
    Set objImport = ChildItem.Open(calOpenReadWrite)
    objImport.Save

    Set FldChild = WIViewer.CALClientListItem.OpenedItem.Children.Add(ChildItem.Info.objId, calChildLast)
    objImport.Close calCloseAbortChanges
    CALClient.ClientList.Remove ChildItem
    
    ' print
    'lngShell = ShellExecute(0, "Print", strFileName, "", "", 6)
    
EH:
    If Err Then
        If Err = 53 Then
            Resume Next
        Else
            DisplayError "CaesarNotitie"
        End If
    Else
        CaesarNotitie = True
    End If
    
    Set WI = Nothing
    Set ChildItem = Nothing
    Set objImport = Nothing
    Set FldChild = Nothing
    Set ts = Nothing
    Set fs = Nothing
    
End Function
Private Function SetCALXFormFields() As Boolean

On Error GoTo EH

    SetCALXFormFields = False

    If ((WIViewer.CALClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        myPolOver.Value = Right$(Space(10) & Trim(tbPolOver1), 10) & ";" _
                              & Right$(Space(10) & Trim(tbPolOver2), 10) & ";" _
                              & Right$(Space(10) + Trim(tbPolOver3), 10) & ";"
    End If
    SetCALXFormFields = True

Exit Function

EH:
    DisplayError "SetCALXFormFields"

End Function





Attribute VB_Name = "frmZoekImport"
Attribute VB_Base = "0{2D3DF049-4120-45F9-A811-738956643D8F}{03819327-F8EB-4B9D-ABF2-1EC0B200F524}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim ExtraInfo2ResultListMapping As New Collection
Dim WIViewer                    As WFDWorkitem.WorkitemViewer
Dim myParentForm                As Object
Dim mobjQueryResults            As CALQueryResults
Dim WorkstepColNo               As Integer
Dim myQueryResultRecordColumn   As Integer

Const TerugSturen = 1
Const Behandelen = 2
Const NaarInBehandeling = 3
Const Doorsturen = 4

Private Sub Import(WatTeDoen As Integer, Optional WorkStep As String)
' document wordt in folder geimporteerd.
' Het document + viewer wordt gesloten en naar default gestuurd.
' als WatTeDoen = terugsturen wordt folder eerst in de worklist gezocht vervolgens
' in archief. Na importeren wordt item van de worklist verwijderd,
' mits niet oorspronkelijk in worklist
' als WatTeDoen = behandelen wordt de folder eerst in de worklist gezocht.
' als de folder daarin voorkomt maar niet uit de juiste werkstap is opgehaald
' wordt het item verwijderd. Vervolgens wordt in workflow gezocht en uit de juiste
' werkstap gehaald, mits niet gelocked.
' Na het importeren wordt het item en werkitemviever geopend.
Dim strDoctype          As String
Dim i                   As Integer
Dim j                   As Integer
Dim objClientListItem   As CALClientListItem
Dim objWorkListItem     As WDOWorklistItem
Dim FindListItems       As CALWorkitemWorkstepList
Dim FindListItem        As CALEnumItem
Dim FindLockedListItem  As CALEnumItem
Dim FindLockedItem      As Integer
Dim ESWMObjID           As CALObjID
Dim bAlOnDeskTop        As Boolean
Dim objfolder           As CALFolder
Dim objToImportDoc      As CALDocument
Dim myViewer            As WorkitemViewer
Dim lRemoved            As Boolean
Dim myKenMerk           As String
Dim myTargetWorkstep    As String
Dim mySourceWorkstep    As String
Dim objDocNote          As CALNote
Dim objFolderNote       As CALNote
Dim WIXMLDataDOC        As clsWIData
Dim WIXMLDataFLD        As clsWIData
Dim myXMLNodesDOC       As IXMLDOMNodeList
Dim myXMLNodeDOC        As IXMLDOMNode
Dim myXMLNodesFLD       As IXMLDOMNodeList

    Err.Clear
    MousePointer = fmMousePointerHourGlass
    DoEvents
    j = Me.ListView1.ListItems.item(Me.ListView1.SelectedItem.Index).ListSubItems(myQueryResultRecordColumn)
    WorkStep = Me.ListView1.ListItems.item(Me.ListView1.SelectedItem.Index).ListSubItems(WorkstepColNo)
    If Not UserHasInbox(WorkStep) And WatTeDoen = Behandelen Then
        Err.Raise 12345, , "U heeft geen rechten om deze stap te behandelen. Kies 'Importeren'"
    End If
    If mobjQueryResults.item(j).Info.ServerName = "ARCHIVE" Then
        Err.Raise 12344, , "Deze folder is verplaatst naar een andere business unit. Openen van deze folder is niet mogelijk."
    End If
'   folder op desktop?
'   als behandelen en folder op clientlist staat maar niet WIP
'   dan verwijderen van clientlist
'   ook verwijderen als item wel via workflow is retrieved maar uit verkeerde werkstap
'   Anders referentie naar item bewaren in objClientListItem
    bAlOnDeskTop = False
    Set ESWMObjID = mobjQueryResults.item(j).Info.objId
    Set objClientListItem = Application.CALClient.ClientList.Find(ESWMObjID)
    If Not objClientListItem Is Nothing Then
        If WatTeDoen = Behandelen And _
            (Not ((objClientListItem.Info.Status And calObjStatusWIP) = calObjStatusWIP) Or _
            objClientListItem.Info.SourceWorkstep <> WorkStep) Then
'           close workitem if open
            If ((objClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
'               sluit de workitem viewer als het open is
                Set myViewer = Application.Viewers.FindViewer(objClientListItem)
                If Not myViewer Is Nothing Then
'                   kan zijn dat na het sluiten van de viewer het item
'                   automatisch van de worklist wordt verwijderd
                    lRemoved = myViewer.RemoveAfterClose
                    myViewer.TryClose (wdoForceCloseSaveChanges)
                Else
                    
                    'Commented for EX9.21 Nl on Vista as it gives an Invalid Handler passed error
                    'objClientListItem.OpenedItem.Close calCloseSaveChanges
                    'Comment ends
                    'Comment - replacement code as suggested by Global360
                    objClientListItem.OpenedItem.Save
                    objClientListItem.OpenedItem.Close (calCloseAbortChanges)
                    'Comment ends - replacement code as suggested by Global360
                    
                End If
            End If
            If Not lRemoved Then
                Application.CALClient.ClientList.Remove objClientListItem
            End If
            Set objClientListItem = Nothing
        Else
            bAlOnDeskTop = True
        End If
    End If
'   als behandelen en folder nog niet op clientlist staat zoek folder in
'   workflow in de juiste werkstap.
'   Indien het item is gelocked afbreken
    FindLockedItem = 0
'   Aangepast dd 9/5/6 ivm TD49206 Melding locked geven bij de knop [Importeren]
    If WatTeDoen = Behandelen Or WatTeDoen = Doorsturen Or WatTeDoen = TerugSturen And objClientListItem Is Nothing Then
        Set FindListItems = CALClient.FindInWorkflow(ESWMObjID)
        For i = 1 To FindListItems.Count
            If FindListItems.item(i).Info.SourceWorkstep = WorkStep Then
                If CALGetListResultField(FindListItems, i, "RESOURCE") <> Empty Then
                      ' gelocked.
                Else
                      ' niet gelocked. Van deze wordt de workstep bepaald
                      Set FindListItem = FindListItems.item(i)
                End If
                Exit For
            End If
        Next i
        If Not FindListItem Is Nothing Then
'           retrieve gevonden item naar de desktop
            If WatTeDoen <> TerugSturen Then Set objClientListItem = FindListItem.Retrieve(0)
        ElseIf WorkStep <> "Archief" Then
            MsgBox "Folder is gelockt. Document kan niet in deze folder worden geimporteerd. Probeer indien mogelijk de folder vanuit een andere werkstap te benaderen."
            GoTo lb_exit
        End If
    End If
'   als terugsturen en nog niet op desktop dan retrieve maar niet uit een werkstap
    If WatTeDoen = TerugSturen And objClientListItem Is Nothing Then
        Set objClientListItem = mobjQueryResults.item(j).Retrieve(0)
    End If
    If objClientListItem Is Nothing Then GoTo lb_exit
'   open de folder waarin het document geimporteerd moet worden
'   Controleer of het item wellicht al reserved geopened is. Zo nee dan alsnog openen.
    If ((objClientListItem.Info.Status And calObjStatusOpen) = calObjStatusOpen) Then
        If Not ((objClientListItem.Info.Status And calObjStatusReserved) = calObjStatusReserved) Then
            
            'Commented for EX9.21 Nl on Vista as it gives an Invalid Handler passed error
            'objClientListItem.OpenedItem.Close calCloseSaveChanges
            'Comment ends
            'Comment - replacement code as suggested by Global360
            objClientListItem.OpenedItem.Save
            objClientListItem.OpenedItem.Close (calCloseAbortChanges)
            'Comment ends - replacement code as suggested by Global360
            
            Set objfolder = objClientListItem.Open(calOpenReadWrite)
        Else
            Set objfolder = objClientListItem.OpenedItem
        End If
    Else
        Set objfolder = objClientListItem.Open(calOpenReadWrite)
    End If
'   Neem zaak_ident_nr, ind_trigger, zk_volgnr en werksrt over van de folder
'   in het document. De Werksrt komt niet voor bij UWO en BWO en PIN(EXC).
'   Verander het doctype in "<IND_TRIGGER> Overig"
'   zodat dit document via de route verwijderd wordt uit workflow
'   zaak_ident_nr en ind_trigger
    WIViewer.Fields.Find("ZAAK_IDENT_NR").CALFormField.Value = objfolder.FormFields(calFieldsNoViews).Find("ZAAK_IDENT_NR").Value
    WIViewer.Fields.Find("ZK_VOLGNR").CALFormField.Value = objfolder.FormFields(calFieldsNoViews).Find("ZK_VOLGNR").Value
    myKenMerk = objfolder.FormFields(calFieldsNoViews).Find("IND_TRIGGER").Value
    WIViewer.Fields.Find("IND_TRIGGER").CALFormField.Value = myKenMerk
    WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = "REM" ' zorgt er voor dat in de posprocessing dit document van workflow wordt removed.
'   Zet het doctype van het document
    If WIViewer.Fields.Find("DOCTYPE").CALFormField.Value = "" Then
        strDoctype = Trim(myKenMerk) + " Overige post"
        WIViewer.Fields.Find("DOCTYPE").CALFormField.Value = strDoctype
        Call WIViewer.CALClientListItem.OpenedItem.SetName(strDoctype)
    End If
'   Neem de werksrt over van de folder naar het document mits
'   de werksrt voorkomt als field in de folder (BWO en UWO kent het niet)
'   importeer document.
    If Not objfolder.FormFields(calFieldsNoViews).Find("WERKSRT") Is Nothing Then
        WIViewer.Fields.Find("WERKSRT").CALFormField.Value = objfolder.FormFields(calFieldsNoViews).Find("WERKSRT").Value
    End If
'   Kopieer notities van het document naar de folder
    WIViewer.CALClientListItem.OpenedItem.Save
    For Each objDocNote In WIViewer.CALClientListItem.OpenedItem.Notes
        If Left(objDocNote.name, 17) <> "Informatieverzoek" Then
        Set objFolderNote = objfolder.Notes.Add(calNoteLast, objDocNote.name, objDocNote.Text)
        End If
    Next
'   OK. We gaan iedere node toevoegen uit het bron document aan de folder.
    Set WIXMLDataDOC = WFMData.getWIData(WIViewer.CALClientListItem.OpenedItem)
    Set myXMLNodesDOC = WIXMLDataDOC.XMLData.getRowNodes("Data", "Type = ""T""")
    If myXMLNodesDOC.Length > 0 Then
'       Als er een notitie is maken we er een aan in de folder
        Set WIXMLDataFLD = WFMData.getWIData(objfolder)
        Set myXMLNodesFLD = WIXMLDataFLD.XMLData.getRowNodes("Data", "Type = ""T""")
        For i = myXMLNodesDOC.Length - 1 To 0 Step -1
            If myXMLNodesDOC.item(i).selectSingleNode("Icon").Text <> "I" Then
                WIXMLDataFLD.addSingleRow myXMLNodesDOC.item(i)
            End If
        Next
    End If
    If Not WIXMLDataFLD Is Nothing Then
        If WIXMLDataFLD.XMLData.Changed Then
            WFMData.setWIData objfolder, WIXMLDataFLD 'WIViewer.CALClientListItem.OpenedItem, WIXMLDataFLD
        End If
    End If
'   Importeer het document en stuur het document to default zodat het
'   via de postprocessing wordt verwijderd uit workflow
    SaveNewItem WIViewer
    Set objToImportDoc = WIViewer.CALClientListItem.OpenedItem
    objfolder.Children.Add objToImportDoc.Info.objId, calChildLast
    objfolder.Save
    myTargetWorkstep = objfolder.Info.SourceWorkstep
    mySourceWorkstep = WIViewer.CALClientListItem.Info.SourceWorkstep
'   send oorspronkelijk document to default en sluit form en viewer
    Call WFMSaveButton(WIViewer)
'   Afhankelijk welke button op het scherm is gekozen en de source
'   workstep wordt de folder teruggestuurd of
'   geopend in de workitem viewer.
'   als Import en behandelen is gekozen dan:
'        de folder openen  anders
'        de folder sluiten en als nog niet op desktop stond removen
'   Als doorsturen gezet is
'       de folder naar de volgende stap sturen
    If WatTeDoen = Doorsturen Then
'       variabele AANGEK_REMISE moet nog op  J gezet worden omdat er
'       nog maar 1 doorgestuurd wordt zijnde 99B42 Aangek Remise
         Call CALSetFieldValue(objfolder, "AANGEK_REMISE", "J")
        objfolder.Close (calCloseSaveChanges)
        objClientListItem.SendToDefault (calSendDiscard)
    End If
    If WatTeDoen = Behandelen Then
        Set myViewer = Application.Viewers.OpenViewer(objfolder.Info.objId, wdoOpenViewerNormal, wdoOpenReadWrite)
        myViewer.BringToTop
        GoTo lb_exit
    End If

Lbl_terugsturen:
'   als niet op desktop stond dan folder sluiten en verwijderen van de desktop
    If bAlOnDeskTop = False And WatTeDoen = TerugSturen Then
            objfolder.Close (calCloseSaveChanges)
            Application.CALClient.ClientList.Remove objClientListItem
    End If

lb_exit:
    MousePointer = fmMousePointerDefault
    Exit Sub

EH:
    If Err Then DisplayError "Import"
    MousePointer = fmMousePointerDefault
    DoEvents
End Sub

Private Sub cmdImpBeh_Click()
    Call Import(Behandelen)
    Unload Me
End Sub

Private Sub cmdImpTerug_Click()
    On Error GoTo EH
    If Me.ParentForm.WFM_DOCTYPE.list(Me.ParentForm.WFM_DOCTYPE.ListIndex, 1) = csDocOverig Then
        Call Import(TerugSturen)
    Else
        Call AanvullenDocument
    End If
    Exit Sub

EH:
    Call Import(TerugSturen)
    Exit Sub
End Sub

' vul het document aan met onder andere het zaakid en volgnr zodat
' in een rendezvousstap het document aan de juiste folder gekoppeld kan worden
Private Sub AanvullenDocument()
Dim item                As ListItem
Dim j                   As Integer
Dim StrZaakID           As String
Dim str_zk_volgnr       As String
Dim str_Indtrigger      As String
Dim strDoctype          As String
Dim ESWMObjID           As CALObjID
Dim objClientListItem   As CALClientListItem
Dim objfolder           As CALFolder
Dim objDocNote          As CALNote
Dim objFolderNote       As CALNote

    MousePointer = fmMousePointerHourGlass
    DoEvents
'   bepaal het recordnr in de queryresultlist
    j = Me.ListView1.ListItems.item(Me.ListView1.SelectedItem.Index).ListSubItems(myQueryResultRecordColumn)
    StrZaakID = CALGetListResultField(mobjQueryResults, j, "ZAAK_IDENT_NR")
    str_zk_volgnr = CALGetListResultField(mobjQueryResults, j, "ZK_VOLGNR")
    str_Indtrigger = CALGetListResultField(mobjQueryResults, j, "IND_TRIGGER")
    WIViewer.Fields.Find("ZAAK_IDENT_NR").CALFormField.Value = StrZaakID
    WIViewer.Fields.Find("ZK_VOLGNR").CALFormField.Value = str_zk_volgnr
    WIViewer.Fields.Find("IND_TRIGGER").CALFormField.Value = str_Indtrigger
    strDoctype = Mid(WIViewer.Fields.Find("DOCTYPE").CALFormField.Value, 5)
    If str_Indtrigger = "KAP" Or str_Indtrigger = "KEP" Or str_Indtrigger = "KEO" Then
        WIViewer.Fields.Find("DOCTYPE").CALFormField.Value = strDoctype
    Else
'       Aanpassing zie TD74888 met doctype XXX KAP KEP Reactie offerte gaat fout, de code hiervoor
'       staat hierboven, maar het kenmerk (Indtrigger) kan ook PEN of OVL zijn.
        If strDoctype = "KAP KEP Reactie Offerte" Then
            WIViewer.Fields.Find("DOCTYPE").CALFormField.Value = strDoctype
        Else
'           Plaats het kenmerk voor het documenttype
            WIViewer.Fields.Find("DOCTYPE").CALFormField.Value = str_Indtrigger + " " + strDoctype
        End If
    End If
    If Not WIViewer.Fields.Find("WERKSRT") Is Nothing Then
        WIViewer.Fields.Find("WERKSRT").CALFormField.Value = CALGetListResultField(mobjQueryResults, j, "WERKSRT")
    End If
'   geef het document als naam de documenttype
    Call WIViewer.CALClientListItem.OpenedItem.SetName(WIViewer.Fields.Find("DOCTYPE").CALFormField.Value)
'   send oorspronkelijk document to default en
'   sluit form en viewer
'   Kopieer eventuele notities naar de folder
    If WIViewer.CALClientListItem.OpenedItem.Notes.Count > 0 Then
'       Niet uit workflow openen, folder zit in rendezvous bak.
        Set ESWMObjID = mobjQueryResults.item(j).Info.objId
        Set objClientListItem = Application.CALClient.ClientList.Find(ESWMObjID)
        If objClientListItem Is Nothing Then
            'niet op clientlist
            Set objClientListItem = mobjQueryResults.item(j).Retrieve(0)
        End If
        Set objfolder = objClientListItem.Open(calOpenReadWrite)
        For Each objDocNote In WIViewer.CALClientListItem.OpenedItem.Notes
            Set objFolderNote = objfolder.Notes.Add(calNoteLast, objDocNote.name, objDocNote.Text)
        Next
        CALSave objfolder
        CALClose objfolder
        Application.CALClient.ClientList.Remove objClientListItem
    End If
    Call WFMSaveButton(WIViewer)
    MousePointer = fmMousePointerDefault
    DoEvents
End Sub

Private Sub ListView1_Click()
    Call EnableImpRet
End Sub

Private Sub ListView1_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
    If Me.ListView1.SortKey = ColumnHeader.Index - 1 Then
        If Me.ListView1.SortOrder = lvwDescending Then
            Me.ListView1.SortOrder = lvwAscending
        Else
            Me.ListView1.SortOrder = lvwDescending
       End If
    Else
        Me.ListView1.Sorted = True
        Me.ListView1.SortKey = ColumnHeader.Index - 1
        Me.ListView1.SortOrder = lvwAscending
    End If
    Me.ListView1.Refresh
End Sub

Private Sub ListView1_DblClick()
    cmdRetrieve_Click
End Sub

Private Sub EnableImpRet()
    cmdRetrieve.Visible = False
    cmdImpTerug.Visible = False
    cmdImpBeh.Visible = False
    On Error GoTo EH
    If Not Me.ListView1.SelectedItem Is Nothing Then
        If Me.ListView1.SelectedItem.Index > 0 Then
            cmdRetrieve.Visible = True
            cmdImpTerug.Visible = True
            If Me.ParentForm.WFM_DOCTYPE.list(Me.ParentForm.WFM_DOCTYPE.ListIndex, 1) = csDocOverig Then
                cmdImpBeh.Visible = True
            End If
        End If
    End If
    Exit Sub

EH:
    cmdImpBeh.Visible = True
    Exit Sub
End Sub

Private Sub UserForm_Activate()
Static Init     As Boolean
Dim strWorkstep As String

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
'   als activate al is uitgevoerd
    If txtMaxMatches <> Empty Then
        Exit Sub
    End If
    ListView1.MultiSelect = False
    txtMaxMatches = constMaxItems
    optFolder.Value = True
    cmdRetrieve.Default = True
    ListView1.ColumnHeaders.Add , , , 0, 0 ', Alignment:=1
    AddResultField "ZAAK_IDENT_NR", "Zaak Ident", 80, 0, True
    AddResultField "NAAM_DLNMR", "Naam Deelnemer", 90, 0, True
    AddResultField "NAAM_PARTNER_ZAAK", "Naam Partner", 120, 0, True
    AddResultField "ZAAK_VLGNR_MEMO", "Zaak memo", 90, 0, True
    AddResultField "WORKSTEP", "Workstep", 90, 0, False
    AddResultField "ZK_VOLGNR", "Volgnummer", 0, 0, True
    AddResultField "IND_TRIGGER", "Indtrigger", 0, 0, True
    AddResultField "QUERYRESULTRECORD", "Query result record", 0, 0, False 'voor evt. sortering
    AddResultField "WERKSRT", "", 0, 0, False 'voor het vullen in het documente
    myQueryResultRecordColumn = 6
    WorkstepColNo = 5
'    ' JAG & WO Code wordt ook gebruikt vanuit MAIL. Hierbij is er geen SourceWorkstep bekend.
'    ' Het scherm frmDrbBeoordelenDoc wordt vanuit MAIL gepresenteerd. Hier kan je een klantnr. ingeven.
'    ' standaard zoeken op deelnemernummer (= nr_polis)
'    If Left(WorkitemViewer.CALClientListItem.Info.SourceWorkstep, 5) = "42A01" _
'    Or (Left(WorkitemViewer.CALClientListItem.Info.SourceWorkstep, 5) = "" _
'        And Len(Me.WorkitemViewer.Fields.Find("NR_POLIS").CALFormField.Value) <= 6) Then
'        DefQryField 1, "NR_KLANT", "Klant:", 6, "Klant nummer"
'        QRYTextBox1 = Me.WorkitemViewer.Fields.Find("NR_KLANT").CALFormField.Value
'        Me.Caption = "Zoekfolder voor klant: " + QRYTextBox1
'    Else
'        DefQryField 1, "NR_POLIS", "Deelnemer:", 10, "Deelnemer nummer"
'        QRYTextBox1 = Me.WorkitemViewer.Fields.Find("NR_POLIS").CALFormField.Value
'        Me.Caption = "Zoekfolder voor deelnemer: " + QRYTextBox1
'    End If
'   standaard zoeken op deelnemernummer (= nr_polis)
'   SaBl
'   Uitbreiding en reformat tbv Vorderingen
'   Vergeet klantnummer niet bij collectiviteit
    strWorkstep = Left(WorkitemViewer.CALClientListItem.Info.SourceWorkstep, 5)
    If strWorkstep = "42A01" Then
'       deze conditie wordt ook al door de laatste else tak opgevangen, maar ik weet niet of
'       de conditie "doorzenden naar" wellicht roet in het eten gooit.
        DefQryField 1, "NR_KLANT", "Klant:", 6, "Klant nummer"
        QRYTextBox1 = Me.WorkitemViewer.Fields.Find("NR_KLANT").CALFormField.Value
        Me.Caption = "Zoekfolder voor klant: " + QRYTextBox1
    ElseIf strWorkstep = "46A01" Then
        If Me.WorkitemViewer.Fields.Find("NR_COLLECTIVITEIT").CALFormField.Value = "" Then
                DefQryField 1, "NR_BEGUNSTIGDE", "FF:", 7, "Begunstigde nummer"
            QRYTextBox1 = Me.WorkitemViewer.Fields.Find("NR_BEGUNSTIGDE").CALFormField.Value
            Me.Caption = "Zoekfolder voor Begunstigde: " + QRYTextBox1
        Else
            DefQryField 1, "NR_KLANT", "FF:", 7, "Klant nummer"
            QRYTextBox1 = Me.WorkitemViewer.Fields.Find("NR_KLANT").CALFormField.Value
            Me.Caption = "Zoekfolder voor Collectiviteit op Klantnummer: " + QRYTextBox1
        End If
    ElseIf WIViewer.Fields.Find("DOORZENDEN_NAAR").CALFormField <> "DEB" Then 'JAG 20071011 Deiteurenflow
        DefQryField 1, "NR_POLIS", "Deelnemer:", 10, "Deelnemer nummer"
        QRYTextBox1 = Me.WorkitemViewer.Fields.Find("NR_POLIS").CALFormField.Value
        Me.Caption = "Zoekfolder voor deelnemer: " + QRYTextBox1
    Else
        DefQryField 1, "NR_KLANT", "Klant:", 6, "Klant nummer"
        QRYTextBox1 = Me.WorkitemViewer.Fields.Find("NR_KLANT").CALFormField.Value
        Me.Caption = "Zoekfolder voor klant: " + QRYTextBox1
    End If
    RunQuery
'   Load the results into a listbox
    LoadResults
    QRYTextBox1.Visible = False
    QRYLabel1.Visible = False
    ListView1.Refresh
    Exit Sub

EH:
    DisplayError "Userform_activate"
End Sub

Public Sub AddResultField(name, Caption, Witdh, Align, ResultOnly As Boolean)
Dim myColHeader As ColumnHeader

    Set myColHeader = Me.ListView1.ColumnHeaders.Add(, name, Caption, Witdh, Align)
    myColHeader.Tag = ResultOnly
End Sub

Public Sub DefQryField(No, name, Caption, MaxLen, TipText)
Dim ctlControl As Control
Dim ctlTextBox As TextBox

    For Each ctlControl In Me.Controls
        If Left(ctlControl.name, 10) = "QRYTextBox" Then
            Set ctlTextBox = ctlControl
            If Val(Mid(ctlTextBox.name, 11)) = No Then
                ctlTextBox.Tag = name
                ctlTextBox.MaxLength = MaxLen
                ctlTextBox.ControlTipText = TipText
                ctlTextBox.Enabled = True
                ctlTextBox.Visible = True
           End If
        End If
        If Left(ctlControl.name, 8) = "QRYLabel" Then
           If Val(Mid(ctlControl.name, 9)) = No Then
                ctlControl = Caption
                ctlControl.ControlTipText = TipText
                ctlControl.Enabled = True
                ctlControl.Visible = True
           End If
        End If
    Next
End Sub

Private Sub cmdRetrieve_Click()
Dim myViewer As WorkitemViewer
Dim i As Integer

    MousePointer = fmMousePointerHourGlass
    DoEvents
    For i = 1 To ListView1.ListItems.Count
        If (ListView1.ListItems.item(i).Selected = True) Then
                RetrieveNthItem (ListView1.ListItems.item(i).ListSubItems(myQueryResultRecordColumn))
        End If
    Next i
    MousePointer = fmMousePointerDefault
End Sub

Private Sub ListView1_Enter()
    EnableImpRet
End Sub

Private Sub cmdClose_Click()
    Unload Me 'UserForm_Terminate
End Sub

Public Sub RunQuery()
Dim myColHeader     As ColumnHeader
Dim ctlTextBox      As Control
Dim ctlLabel        As Control
Dim strTemp         As String

    On Error GoTo EH
    Err.Clear

Dim objClient       As CALClient
Dim lngMaxMatches   As Long
Dim calObjType      As Long
Dim calLocation     As Long
Dim objIndexFields  As New CALIndexFields
Dim sTemp           As String
Dim intRes          As Integer

    lngMaxMatches = constMaxItems
    If (optDocument.Value = True) Then
        calObjType = calObjTypeDocument
    ElseIf (optFolder.Value = True) Then
        calObjType = calObjTypeFolder
    Else
        calObjType = calObjTypeImport
    End If
    calLocation = calLocationDomain
    For Each ctlTextBox In Me.Controls
        If Left(ctlTextBox.name, 10) = "QRYTextBox" Then
            If ctlTextBox.Enabled = True Then
               SetIndex objIndexFields, _
                        ctlTextBox.Tag, _
                        ctlTextBox
           End If
        End If
    Next
'   Append result fields only to the Indexfield object
'   CAL only retriefs fields which are in the indexfields object,
'   Result only fields do have a blank selection
    For Each myColHeader In Me.ListView1.ColumnHeaders
        If myColHeader.Tag = True Then
               SetIndex objIndexFields, _
                        myColHeader.Key, _
                        ""
        End If
    Next
'   TD103825 JAG Speciaal voor debiteurenflow. Daar er op NR_KLANT gezocht wordt kan het gevonden resultaat erg groot
'   worden. Extra indexfield toegevoegd op IND_TRIGGER.
    If WIViewer.Fields.Find("DOORZENDEN_NAAR").CALFormField = "DEB" Then
        objIndexFields.Value("IND_TRIGGER") = "DEB"
        SetIndex objIndexFields, "IND_TRIGGER", "DEB"
    End If
'   Execute the query
    Set objClient = Application.CALClient
    Set mobjQueryResults = objClient.Query("", calObjType, calLocation, lngMaxMatches, objIndexFields)
    If mobjQueryResults.Count = Me.txtMaxMatches.Text Then  'TD106382
        sTemp = "Niet alle folders zijn doorzocht." & vbLf & "Wilt u verder zoeken? Dit kan wat langer duren."
        intRes = MsgBox(sTemp, vbYesNo, "Verder zoeken")
        If intRes = 6 Then
            Set mobjQueryResults = objClient.Query("", calObjType, calLocation, 0, objIndexFields)
        End If
    End If
'   Even een verklaring voor bovenstaande query (2x).
'   De constante calLocation (=calLocationArchive=0) zoekt in het domain en niet in het Archief,
'   maar helaas hier wordt niet ons Archief bedoeld, maar de ArchiveManager,
'   die hier niet wordt gebruikt. De constante calLocationArchive (=1) wordt niet geaccepteerd.
'   Er wordt dus wel degelijk in ons Archief gezocht.
'   Als in eerste instantie bij het zoeken het aantal 500 (lngMaxMatches) wordt bereikt,
'   krijgt de gebruiker de vraag of hij "verder" wil zoeken, maar eigenlijk begint het zoeken dan
'   opnieuw met geen maximum, dat is geen probleem omdat de Query erg snel is.
'   De echte vertraging komt verderop pas als het resultaat verwerkt wordt in LoadResults().
    Exit Sub

EH:
    MsgBox Err.Description
    Err.Raise Err
End Sub

Private Sub SetIndex(objIndexFields As CALIndexFields, Field As Variant, Value As Variant)
Dim strValue    As String
Dim strField    As String
Dim StarPos     As Integer

    strField = Field
    If Value <= " " Then
        strValue = ""
    Else
       strValue = Value
    End If

LoopAllStarsReplaced:      'The SQL wildcard is still a % users may enter a '*'
    StarPos = InStr(strValue, "*")
    If StarPos > 0 Then
        Mid(strValue, StarPos, 1) = "%"
        GoTo LoopAllStarsReplaced
    End If
    objIndexFields.Value(strField) = strValue
End Sub

Public Sub LoadResults()
Dim itmx            As ListItem
Dim myColHeader     As ColumnHeader
Dim lngCount        As Long
Dim i, j, t         As Long
Dim myEInfoItem     As CALEnumExtraInfoItem
Dim EInfiItem       As Variant
Dim objEnumItem     As CALEnumItem
Dim FindListItems   As CALWorkitemWorkstepList
Dim x               As Integer
Dim blnBeslissing
Dim FlowDocument    As String
Dim FlowZaak        As String
Dim DOORZENDEN_NAAR As String
Dim Teller1         As Integer          'Het aantal zaken dat uiteindelijk getoond wordt.
Dim sTemp           As String
Dim intRes          As Integer

    For i = Me.ListView1.ListItems.Count To 1 Step -1
        Me.ListView1.ListItems.Remove i
    Next i
'   Display the number of hits
    lngCount = mobjQueryResults.Count   'dit betreft het totaal aantal zaken in Workflow
    FlowDocument = Left(WorkitemViewer.CALClientListItem.Info.SourceWorkstep, 2) 'Onderdeel TD70167
    If FlowDocument = "" Then   'New document nog niet eerder opgeslagen
        DOORZENDEN_NAAR = WIViewer.Fields.Find("DOORZENDEN_NAAR").CALFormField
        OphalenFlowNr DOORZENDEN_NAAR, FlowDocument
    End If
'   Add each hit to the listbox
    For i = 1 To lngCount
        Set objEnumItem = mobjQueryResults.item(i)  'Instellen zaak in het query resultaat
        If objEnumItem.Info.ServerName <> "ARCHIVE" Then
'           zet in ExtraInfo2ResultListMapping de extrainfo kolomnummer
'           dat overeenkomt met de kolom in de listview
            If ExtraInfo2ResultListMapping.Count < 1 Then
                For t = 2 To Me.ListView1.ColumnHeaders.Count
                    Set myColHeader = Me.ListView1.ColumnHeaders.item(t)
                    EInfiItem = 0
                    For j = 1 To objEnumItem.ExtraInfo.Count
                        Set myEInfoItem = objEnumItem.ExtraInfo.item(j)
                        If myEInfoItem.name = myColHeader.Key Then
                            EInfiItem = j
                        End If
                    Next j
                    If EInfiItem > 0 Then ExtraInfo2ResultListMapping.Add EInfiItem
                Next t
            End If
'           zoek het item in Workflow. Door een split kan het item meerdere malen
'           voorkomen. Voor iedere instance moet een regel in de listview worden
'           opgenomen.
'           alleen items in flow worden getoond
            Set FindListItems = CALClient.FindInWorkflow(objEnumItem.Info.objId)
            x = FindListItems.Count
            If FindListItems.Count = 0 Then
                lngCount = lngCount - 1
                x = x + 1   ' WO 28-5 TD118086
            End If
            While x > 0
'               Transfer each record from the Query result list to the listview line on the form
'               Aanpassing inz TD70167; documenten alleen toevoegen aan eigen flow/zaken
'               *** KPO?
'               *** Mailtje toevoegen vanuit Outlook aan een lopende zaak
                If FindListItems.Count = 0 Then
                    FlowZaak = "AR"   ' WO 28-5 TD118086
                Else
                    FlowZaak = Left(FindListItems.item(x).Info.SourceWorkstep, 2)
                End If
                blnBeslissing = False
                blnBeslissing = blnBeslissing Or (FlowDocument = FlowZaak)
                blnBeslissing = blnBeslissing Or (FlowDocument = "") ' Nieuw document
                blnBeslissing = blnBeslissing Or (FlowDocument = "RE") ' Scanafdeling
                blnBeslissing = blnBeslissing Or (FlowDocument = "98" And FlowZaak = "97") ' Extra uitzondering TD83367
                blnBeslissing = blnBeslissing Or (FlowDocument = "98" And FlowZaak = "94") ' Extra uitzondering TD93949 20071029 JAG
                blnBeslissing = blnBeslissing Or (FlowDocument = "98" And FlowZaak = "AR")   ' WO 28-5 TD118086
                blnBeslissing = blnBeslissing Or (FlowDocument = "99" And FlowZaak = "97") ' Extra uitzondering TD83367
                blnBeslissing = blnBeslissing Or (FlowDocument = "42" And InStr("42 43 44", FlowZaak) > 0)   'DebiteurenFlow
                If blnBeslissing Then
'                   Nieuwe items, bijvoorbeeld Emails via Outlook,
                    Set itmx = Me.ListView1.ListItems.Add()
                    For j = 1 To ExtraInfo2ResultListMapping.Count
                        EInfiItem = ExtraInfo2ResultListMapping.item(j)
                        If EInfiItem > 0 Then   'if there is a value in the resultlist
                           itmx.SubItems(j) = objEnumItem.ExtraInfo.item(EInfiItem)
                        End If
                    Next j
'                   voeg de verwijziging naar de queryresultlist toe
                    itmx.SubItems(myQueryResultRecordColumn) = i
'                   voeg de werkstap naam toe
                    If FindListItems.Count = 0 Then
                        itmx.SubItems(WorkstepColNo) = "Archief"      ' WO 28-5 TD118086
                    Else
                        itmx.SubItems(WorkstepColNo) = FindListItems.item(x).Info.SourceWorkstep
                    End If
                    Teller1 = Teller1 + 1
                End If
                x = x - 1
            Wend
            Me.ListView1.Refresh
        End If
    Next i
    lblCount = "Aantal gevonden: " + Str(Teller1)
    EnableImpRet
    Exit Sub

EH:
    MsgBox Err.Description
End Sub

Private Sub OphalenFlowNr(AFDELING As String, FlowDocument As String)
'Onderstaande lijst moet gelijk zijn aan de afdelingen welke getoond worden
'bij een NEW document (frmAfdeling).
'De lijst wordt opgeheaald uit de route variable "ActieveProcessen" en daar wordt PPN aan toegevoegd.

''Q1 Release 2012 CR No. 153254 Dept Changes
    If AFDELING = "CWO" Then FlowDocument = "99"
    If AFDELING = "ECH" Then FlowDocument = "90"
    If AFDELING = "PIN" Then FlowDocument = "98"
    If AFDELING = "FEP" Then FlowDocument = "94"
    If AFDELING = "FVP" Then FlowDocument = "33"
    If AFDELING = "GBA" Then FlowDocument = "97"
    If AFDELING = "KJW" Then FlowDocument = "07"
    If AFDELING = "PTA" Then FlowDocument = "33"
    If AFDELING = "PTB" Then FlowDocument = "33"
    If AFDELING = "FND" Then FlowDocument = "33"
    If AFDELING = "PTC" Then FlowDocument = "33"
    If AFDELING = "PTD" Then FlowDocument = "33"
    If AFDELING = "PPI" Then FlowDocument = "33"
    If AFDELING = "FAL" Then FlowDocument = "33"
    If AFDELING = "PTE" Then FlowDocument = "33"
    If AFDELING = "PTF" Then FlowDocument = "33"
    If AFDELING = "PTG" Then FlowDocument = "33"
    If AFDELING = "PTH" Then FlowDocument = "33"
    If AFDELING = "PTI" Then FlowDocument = "33"
    If AFDELING = "PTL" Then FlowDocument = "33"        '[PAC] - TD17266
    If AFDELING = "PTR" Then FlowDocument = "33"        '[PAC] - TD17266
    If AFDELING = "APP" Then FlowDocument = "33"        '[PAC] 17MAR15 - PTN --> APP - TD172461
    If AFDELING = "PAC" Then FlowDocument = "20"
    If AFDELING = "PPN" Then FlowDocument = "10"
    If AFDELING = "DEB" Then FlowDocument = "42"
    If AFDELING = "VOR" Then FlowDocument = "46"
End Sub

Private Sub RetrieveNthItem(i As Integer)
Dim myViewer As WorkitemViewer

    On Error GoTo EH
    Err.Clear

Dim objEnumItem As CALEnumItem
Dim objClientListItem As CALClientListItem

'   Retrieve the selected workitems to the worklist
    Set objEnumItem = mobjQueryResults.item(i)
    Set objClientListItem = objEnumItem.Retrieve(calRetrieveRetain)
    Set myViewer = Application.Viewers.OpenViewer(mobjQueryResults.item(i).Info.objId, wdoOpenViewerRemoveAfterClose, wdoOpenReadOnly)
    myViewer.BringToTop
    Exit Sub

EH:
    MsgBox Err.Description
End Sub

Private Sub UserForm_Terminate()
' geef aan het form, vanwaar dit form is aangeroepen, door
' dat dit scherm gesloten is
    If WIViewer.CALClientListItem Is Nothing Then
        Unload Me
        Exit Sub
    End If
    If Not Me.ParentForm Is Nothing Then
        Set Me.ParentForm.QueryFrm = Nothing
    End If
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
  Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
  Set WorkitemViewer = WIViewer
End Property

Public Property Set ParentForm(myForm)
  Set myParentForm = myForm
End Property
Public Property Get ParentForm() As Object
  ' referentie naar het form vanwaar dit form is aangeroepen
  Set ParentForm = myParentForm
End Property

Private Function UserHasInbox(strWorkstep As String) As Boolean
Dim strWorkstepNumber   As String
Dim objQueues           As CALQueues
Dim intCount            As Integer

    strWorkstepNumber = Left(strWorkstep, 5)
    UserHasInbox = False
    Set objQueues = Worksets.CALQueues
    For intCount = 1 To objQueues.Count
        If Left(objQueues.item(intCount).name, 5) = strWorkstepNumber Then
            UserHasInbox = True
            Exit Function
        End If
    Next
End Function
Attribute VB_Name = "frm_DVLBeoordeLen"
Attribute VB_Base = "0{5A15FCF3-95CA-4BC2-A2B2-565201B755FC}{B0BF6F28-03C4-48F2-9E68-1067058294DF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myPolOver       As CALFormField
Dim myESWMObjID     As String
Dim bFiatteren      As Boolean      'False = Beoordelen     True = Fiatteren

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub cmdOpslaan_Click()
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    If fncWFM_Validatie Then
        If WorkflowSave(WIViewer) Then
            Call WFMSaveButton(WIViewer)
        End If
    End If
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdPartners_Click()
Dim myFrm As Object

    Set myFrm = New frmEXCNabestaanden
    Set myFrm.WorkitemViewer = WIViewer
    myFrm.Show 1
    Set myFrm = Nothing
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub imgGBA_Click()
    On Error GoTo EH
    If Not bFiatteren Then      'Werkstap Beoordelen
        Set frmExcSelecteerBegunst.WorkitemViewer = WIViewer
        frmExcSelecteerBegunst.Show 1
        WFMGetField WIViewer, WFMCJN_X_AANM, 4
        Me.Repaint
    Else                        'Werkstap Fiatteren
        Set frmExcGbaReadOnly.WorkitemViewer = WIViewer
        frmExcGbaReadOnly.Show 1
    End If
    Exit Sub

EH:
    DisplayError "GBA gegevens"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Sub UserForm_Activate()
Static bPassed  As Boolean

    bFiatteren = False
    If Left(GetWorkstep(WIViewer), 5) = "98D14" Then bFiatteren = True
    If WFMLSTATUS_VERZEKERDE.Value = "In Leven" Then WFMLSTATUS_VERZEKERDE.Value = "In leven"

    If bPassed Then
        If InfoVerstuurd Then
            WFMrJN_NAAR_PARKEREN_ja.Value = True
            WFM_REDEN_PARKEREN = "INFO verzoek"
            WFMDRAPPEL = Right(InfoRappeldat, 2) & Mid(InfoRappeldat, 5, 4) & Left(InfoRappeldat, 4)
            cmdTerug.Enabled = False
            MsgBox "INFO verzoek verstuurd" & vbCrLf & _
            "Deze zaak kan niet meer geannuleerd worden."
        End If
        Exit Sub
    End If
    bPassed = True

    Set myPolOver = WIViewer.Fields.Find("NR_POLIS_OVERIG").CALFormField
    tbPolOver1.Value = Trim(Mid(myPolOver, 1, 10))
    tbPolOver2.Value = Trim(Mid(myPolOver, 12, 10))
    tbPolOver3.Value = Trim(Mid(myPolOver, 23, 10))
    StatusBar1.Panels.item("WFM_NR_POLIS").Text = " Deeln. nr.: " & WFM_NR_POLIS & "  "
    StatusBar1.Panels.item("WFM_NR_AEGAR").Text = " Aegarnr.: " & WFM_NR_AEGAR & "  "
    MultiPage1.Value = 1
    CheckOpUitzondering WIViewer, txtBijzonderheden
    WFMCJN_X_AANM.Value = False
    If WFM_BEH_GROEP <> "" Then
        lblTeam.Visible = True
        WFM_BEH_GROEP.Visible = True
    End If
    If WFM_NAAM_PARTNER_ZAAK <> Empty Then
        cmdPartners.Visible = False
        lblNaamExPartner.Visible = True
        WFM_NAAM_PARTNER_ZAAK.Visible = True
    End If

    If bFiatteren Then          'Werkstap Fiatteren
        WFMrJN_VOORBER_AKK_ja.Value = False
        WFMrJN_VOORBER_AKKnee.Value = False
        Call SetFiatteren
        imgGBA.Visible = True
        cmdPartners.Visible = False
    Else                        'Werkstap Beoordelen
        WFMrJN_VOORBER_GEREED_ja.Value = False
        WFMrJN_VOORBER_GEREEDnee.Value = False
        If WFM_JN_VOORBER_AKK = "N" Then
            Set frmNotitie.rsViewer = WIViewer
            frmNotitie.Show 1
        End If
        If WFMrJN_NAAR_PARKERENnee.Value Then
            WFM_REDEN_PARKEREN.Enabled = False
            WFMDRAPPEL.Enabled = False
            lblRedenParkeren.Enabled = False
            lblDatum.Enabled = False
            WFMDRAPPEL = ""
            WFM_REDEN_PARKEREN = ""
        End If
        WFM_PRIORITEIT.Enabled = True
        InitPrios
        WFM_PRIORITEIT.ColumnCount = 2
        WFM_PRIORITEIT.BoundColumn = 1
        WFM_PRIORITEIT.TextColumn = -1
        WFM_PRIORITEIT.ColumnWidths = "15;"
        WFM_PRIORITEIT.list = astrPrios
    End If

    If WFM_InfoSent = "" Then
        MultiPage1.pages("InfoVerzoek").Visible = False
    End If
    If txtBijzonderheden.Text = "" Then
        MultiPage1.pages("PageUitz").Visible = False
    End If
End Sub

Private Sub WFMCJN_X_AANM_Change()
    If WFMCJN_X_AANM.Value Then
        WFMrJN_WO_GESTART_ja.Enabled = False
        WFMrJN_WO_GESTARTnee.Enabled = False
        Call subSetFields(False)
        Call subSetParkeren(False)
        cmdPartners.Visible = False
    Else
        WFMrJN_WO_GESTART_ja.Enabled = True
        WFMrJN_WO_GESTARTnee.Enabled = True
        Call subSetFields(True)
        Call subSetParkeren(True)
        cmdPartners.Visible = True
    End If
End Sub

Private Sub WFMDDAT_INGANG_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDDAT_INGANG
    WFMDDAT_INGANG.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Ingangsdatum"
End Sub

Private Sub WFM_IND_HUPO_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    WFM_IND_HUPO.Value = UCase(WFM_IND_HUPO.Value)
    Cancel = False
End Sub

Private Function fncWFM_Validatie() As Boolean
Dim sMessage    As String

    fncWFM_Validatie = True
'   Werkstap Fiatteren
    sMessage = "De volgende fouten zijn opgetreden:" & vbCrLf & vbCrLf
    If bFiatteren Then
        fncWFM_Validatie = fncCheckOption(WFMrJN_VOORBER_AKK_ja, WFMrJN_VOORBER_AKKnee, lblFiatteren, sMessage)
        If Not fncWFM_Validatie Then
            MsgBox sMessage
            Exit Function
        End If
        If WFMrJN_VOORBER_AKKnee.Value Then
            WFM_PRIORITEIT.Value = "9"
            fncWFM_Validatie = createNote(WIViewer, "E")
        End If
        Exit Function
    End If

'   Werkstap Beoordelen
    If Not lblParkeren.Visible Or _
           WFMLSTATUS_VERZEKERDE.Text = "Onbekend" Then
        fncWFM_Validatie = fncCheckOption(WFMrJN_VOORBER_GEREED_ja, WFMrJN_VOORBER_GEREEDnee, lblVoorbereidenGereed, sMessage)
        If fncWFM_Validatie Then
            WFMrJN_NAAR_PARKERENnee.Value = True    'Voor alle zekerheid: Parkeren = Nee
        Else
            MsgBox sMessage
        End If
        Exit Function
    End If

    If WFMrJN_NAAR_PARKEREN_ja.Value Then
        fncWFM_Validatie = False
        If WFM_REDEN_PARKEREN.Text = "" Then
            MsgBox "Geen reden parkeren ingevuld."
        ElseIf WFMDRAPPEL.Text = "" Then
            MsgBox "Geen rappeldatum ingevuld."
        Else
            fncWFM_Validatie = True
        End If
        Exit Function
    End If
    
    If WFMrJN_VOORBER_GEREEDnee.Value Then Exit Function
    fncWFM_Validatie = fncCheckOption(WFMrJN_WO_GESTART_ja, WFMrJN_WO_GESTARTnee, lblWOGestart, sMessage)
    If Not WFMrJN_WO_GESTART_ja.Value Then
        fncWFM_Validatie = fncWFM_Validatie And fncCheckOption(WFMrJN_ECHTSCHEIDING_ja, WFMrJN_ECHTSCHEIDINGnee, lblEchtscheiding, sMessage)
        fncWFM_Validatie = fncWFM_Validatie And fncCheckOption(WFMrJN_PARTN_PENS_ja, WFMrJN_PARTN_PENSnee, lblRechtPP, sMessage)
        fncWFM_Validatie = fncWFM_Validatie And fncCheckOption(WFMrJN_PENS_VEREVENING_ja, WFMrJN_PENS_VEREVENINGnee, lblPensVerevening, sMessage)
        If WFMLSTATUS_VERZEKERDE.ListIndex = 0 Then
            sMessage = sMessage & "Status deelnemer niet aangegeven." & vbCrLf
            fncWFM_Validatie = False
        End If
        fncWFM_Validatie = fncWFM_Validatie And fncCheckOption(WFMrJN_BUITENLANDER_ja, WFMrJN_BUITENLANDERnee, lblBuitenlander, sMessage)
        fncWFM_Validatie = fncWFM_Validatie And fncCheckOption(WFMrJN_KAPITAALUITK_ja, WFMrJN_KAPITAALUITKnee, lblAlleenKapitaal, sMessage)
        fncWFM_Validatie = fncWFM_Validatie And fncCheckOption(WFMrJN_KEP_ja, WFMrJN_KEPnee, lblKapNaastPensioen, sMessage)
        fncWFM_Validatie = fncWFM_Validatie And fncCheckOption(WFMrJN_FONDS_UITK_ja, WFMrJN_FONDS_UITKnee, lblFondsUitkering, sMessage)
        fncWFM_Validatie = fncWFM_Validatie And fncCheckOption(WFMrJN_UITKVIA_WIJZ_ja, WFMrJN_UITKVIA_WIJZnee, lblUitkViaWijzigen, sMessage)
        fncWFM_Validatie = fncWFM_Validatie And fncCheckOption(WFMrJN_CAES_BRIEF_VERW_ja, WFMrJN_CAES_BRIEF_VERWnee, lblCSRBriefVerw, sMessage)
    End If
    fncWFM_Validatie = fncWFM_Validatie And fncCheckOption(WFMrJN_VOORBER_GEREED_ja, WFMrJN_VOORBER_GEREEDnee, lblVoorbereidenGereed, sMessage)
    If Not fncWFM_Validatie Then
        MsgBox sMessage
    End If
End Function

Private Function fncCheckOption(vOpt1 As OptionButton, vOpt2 As OptionButton, vLabel As Label, vMessage As String) As Boolean
    fncCheckOption = True
    If vOpt1 = vOpt2 Then
        vMessage = vMessage & vLabel.Caption & " niet aangegeven." & vbCrLf
        fncCheckOption = False
    End If
End Function

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappel datum"
End Sub

Private Sub WFMLSTATUS_VERZEKERDE_Change()
    If InStr("Onvindbaar*Overleden", WFMLSTATUS_VERZEKERDE.Text) > 0 Then
        WFMrJN_WO_GESTART_ja.Enabled = False
        WFMrJN_WO_GESTARTnee.Enabled = False
        Call subSetFields(False)
        WFMLSTATUS_VERZEKERDE.Enabled = True
        imgGBA.Visible = False
        Call subSetParkeren(False)
        cmdPartners.Visible = False
    Else
        WFMrJN_WO_GESTART_ja.Enabled = True
        WFMrJN_WO_GESTARTnee.Enabled = True
        Call subSetFields(True)
        imgGBA.Visible = True
        Call subSetParkeren(True)
        cmdPartners.Visible = True
    End If
End Sub

Private Sub WFMrJN_CAES_BRIEF_VERW_ja_Click()
    WFM_JN_VERV_BRIEF_AANG.Text = "N"
End Sub
Private Sub WFMrJN_CAES_BRIEF_VERWnee_Click()
    WFM_JN_VERV_BRIEF_AANG.Text = "J"
End Sub

Private Sub WFMrJN_KAPITAALUITK_ja_Click()
    WFMrJN_KEPnee = True
End Sub

Private Sub WFMrJN_KEP_ja_Click()
    WFMrJN_KAPITAALUITKnee = True
End Sub

Private Sub WFMrJN_NAAR_PARKEREN_ja_Click()
    lblRedenParkeren.Enabled = True
    WFM_REDEN_PARKEREN.Enabled = True
    lblDatum.Enabled = True
    WFMDRAPPEL.Enabled = True
End Sub

Private Sub WFMrJN_NAAR_PARKERENnee_Click()
    lblRedenParkeren.Enabled = False
    WFM_REDEN_PARKEREN = ""
    WFM_REDEN_PARKEREN.Enabled = False
    lblDatum.Enabled = False
    WFMDRAPPEL = ""
    WFMDRAPPEL.Enabled = False
End Sub

Private Sub WFMrJN_VOORBER_AKK_ja_Click()
    If WFMrJN_VOORBER_AKK_ja And WFM_InfoSent <> "" Then
        If MsgBox("Deze zaak heeft een opgeslagen informatie-verzoek, wilt u dit nu versturen?", vbYesNo, "Infoverzoek versturen?") = vbYes Then
            Call NewInfo(WIViewer, "Fiat Note")
        End If
    End If
End Sub

Private Sub WFMrJN_WO_GESTART_ja_Click()
    Call subSetFields(False)
    imgGBA.Visible = False
    Call subSetParkeren(False)
    cmdPartners.Visible = False
End Sub

Private Sub WFMrJN_WO_GESTARTnee_Click()
    Call subSetFields(True)
    imgGBA.Visible = True
    Call subSetParkeren(True)
    cmdPartners.Visible = True
End Sub

Private Sub SetFiatteren()
    WFMrJN_WO_GESTART_ja.Enabled = False
    WFMrJN_WO_GESTARTnee.Enabled = False
    Call subSetFields(False)
    lblVoorbereidenGereed.Visible = False
    WFMrJN_VOORBER_GEREED_ja.Visible = False
    WFMrJN_VOORBER_GEREEDnee.Visible = False
    lblFiatteren.Top = lblVoorbereidenGereed.Top
    WFMrJN_VOORBER_AKK_ja.Top = lblFiatteren.Top
    WFMrJN_VOORBER_AKKnee.Top = lblFiatteren.Top
    lblFiatteren.Visible = True
    WFMrJN_VOORBER_AKK_ja.Visible = True
    WFMrJN_VOORBER_AKKnee.Visible = True
    Call subSetParkeren(False)
End Sub

Private Sub subSetFields(vValue As Boolean)
    WFMrJN_ECHTSCHEIDING_ja.Enabled = vValue
    WFMrJN_ECHTSCHEIDINGnee.Enabled = vValue
    WFMrJN_PARTN_PENS_ja.Enabled = vValue
    WFMrJN_PARTN_PENSnee.Enabled = vValue
    WFMrJN_PENS_VEREVENING_ja.Enabled = vValue
    WFMrJN_PENS_VEREVENINGnee.Enabled = vValue
    WFMLSTATUS_VERZEKERDE.Enabled = vValue
    WFMrJN_BUITENLANDER_ja.Enabled = vValue
    WFMrJN_BUITENLANDERnee.Enabled = vValue
    WFMrJN_KAPITAALUITK_ja.Enabled = vValue
    WFMrJN_KAPITAALUITKnee.Enabled = vValue
    WFMrJN_KEP_ja.Enabled = vValue
    WFMrJN_KEPnee.Enabled = vValue
    WFMrJN_FONDS_UITK_ja.Enabled = vValue
    WFMrJN_FONDS_UITKnee.Enabled = vValue
    WFMrJN_UITKVIA_WIJZ_ja.Enabled = vValue
    WFMrJN_UITKVIA_WIJZnee.Enabled = vValue
    WFMrJN_CAES_BRIEF_VERW_ja.Enabled = vValue
    WFMrJN_CAES_BRIEF_VERWnee.Enabled = vValue
End Sub

Private Sub subSetParkeren(vValue As Boolean)
    lblParkeren.Visible = vValue
    lblNaarParkeerstap.Visible = vValue
    WFMrJN_NAAR_PARKEREN_ja.Visible = vValue
    WFMrJN_NAAR_PARKERENnee.Visible = vValue
    lblRedenParkeren.Visible = vValue
    WFM_REDEN_PARKEREN.Visible = vValue
    lblDatum.Visible = vValue
    WFMDRAPPEL.Visible = vValue
End Sub
Attribute VB_Name = "frm_KLAAlgemeen"
Attribute VB_Base = "0{B190590D-EC30-4729-A230-D5B9D83E2165}{A869E69A-CCE1-4B61-9EB8-7382EB6DC924}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim myForm              As Object
Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim gsObjID             As String           'G360 ObjectID van de lopende klacht
Dim gsKlDatum           As String           'Datum van de klacht
Dim gsKlachtNr          As String           'KlachtNr retour van frm_KLAKlachtInfo
Dim bNwKlacht           As Boolean          'Er is een nieuwe klacht aangemaakt
Dim gbRetVal            As Boolean          'Retour van frm_KLAKlachtInfo (False=Annuleren,  True=OK)
Dim rdBtToegewezen      As String

Dim oldGEPLANDEDate     As String
Dim newGEPLANDEDate     As String
Dim oldUTIL_VERST_DAT   As String
Dim newUTIL_VERST_DAT   As String
Dim blnGEPLANDE            As Boolean
Dim blnUTIL_VERST_DAT      As Boolean

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Public Property Set QueryFrm(objForm)
    Set myForm = objForm
End Property
Public Property Get QueryFrm() As Object
    Set QueryFrm = myForm
End Property

Private Sub cbReactComm_Change()
    WFM_REACT_COM.Text = cbReactComm.Value
End Sub

Private Sub WFM_SOORT_KLACHT_Change()
    WFM_JN_DIR_BRIEF.Text = "N"
    WFM_KLA_DIRBRIEF.Text = ""
    If WFM_SOORT_KLACHT.Text = "Directieklacht" Then
'        WFM_JN_DIR_BRIEF.Text = "J"        'Q3 Release Change, Not required by Client
        WFM_KLA_DIRBRIEF.Text = "!"
    End If
    
'   Code added for Dates RFC Klachten
    If WFM_SOORT_KLACHT.Text = "KIFID klacht" And WFMrJN_OM_AKKOORD_ja.Value Then
        lblNaarComm.Visible = True
        WFMrJN_NAAR_COM_ja.Visible = True
        WFMrJN_NAAR_COMnee.Visible = True
        WFMrJN_NAAR_COM_ja.Value = True
    ElseIf Not WFM_SOORT_KLACHT.Text = "KIFID klacht" Then
        WFMrJN_NAAR_COMnee.Value = True
        lblNaarComm.Visible = False
        WFMrJN_NAAR_COM_ja.Visible = False
        WFMrJN_NAAR_COMnee.Visible = False
    End If
End Sub

Private Sub cmdKopieren_Click()
Static iKopieNr         As Integer
Dim KopieItem           As CALClientListItem

    On Error GoTo ERR_KOPIEREN
    MousePointer = fmMousePointerHourGlass
    DoEvents
    iKopieNr = iKopieNr + 1
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call CopySendDocument(WIViewer.CALClientListItem, iKopieNr)
    MousePointer = fmMousePointerDefault
    Exit Sub

ERR_KOPIEREN:
    DisplayError "Kopi|fffd|ren"
    MousePointer = fmMousePointerDefault
End Sub

Private Sub cmdNaBelscript_Click()
    Load frm_KLANabelscript
    frm_KLANabelscript.gbEnabled = True
    frm_KLANabelscript.gsKlachtNr = gsKlachtNr
    If UCase(Right(cmdNabelscript.Caption, 5)) = "TONEN" Then frm_KLANabelscript.gbEnabled = False
    frm_KLANabelscript.Show 1
End Sub

Private Sub cmdNieuweKlacht_Click()
    Load frm_KLAKlachtInfo
    frm_KLAKlachtInfo.gsKlachtNr = ""       'Klacht# niet ingevuld = Nieuwe aanmaken
    frm_KLAKlachtInfo.Show 1
    gbRetVal = frm_KLAKlachtInfo.gbRetVal
    gsKlachtNr = frm_KLAKlachtInfo.gsKlachtNr
    Unload frm_KLAKlachtInfo
    bNwKlacht = False
    If gbRetVal Then                        'Nieuwe Klacht aangemaakt
        bNwKlacht = True
        Call subReadKlacht("K", gsKlachtNr) 'Lees de nieuwe klacht uit de SQL-tabel
        Call subDspOptVelden
        WFM_JN_DIR_BRIEF.Text = "N"         'Standaard geen Directieklacht
        lblBron.Visible = True              'Juiste objecten tonen/verbergen
        cbBron.Visible = True
        lblSoort.Visible = True
        WFM_SOORT_KLACHT.Visible = True
        lblOorzaak.Visible = True
        cbOorzaak.Visible = True
        lblAard.Visible = True
        cbAard.Visible = True
        lblOmschrijving.Visible = True
        txtExtraOms.Visible = True
        cmdNieuweKlacht.Visible = False
        cmdToevoegen.Visible = False
        cmdTerug.Visible = False
    End If
End Sub

Private Sub cmdOntvBevestiging_Click()
    Call StartBrief(WIViewer, "Word")
End Sub

Private Sub cmdOpslaan_Click()
Dim oClientLItem        As CALClientListItem
Dim oFolder             As CALFolder
Dim sEindDatum          As String           'Datum klacht afgehandeld
Dim sAfgehandeld        As String
Dim iVolgnr             As Integer
Dim newWorkItem         As Boolean

    On Error GoTo ERROR_OPSLAAN
    sEindDatum = ""
    newWorkItem = False
    
    Select Case Left(GetWorkstep(WIViewer), 5)
        Case "85A01", "NEW"
            newWorkItem = True
        Case "85A05"
        
             If cbBron.Value = "" Then
                MsgBox "Bron van de klacht niet ingevuld."
                Exit Sub
             End If
          
             If WFM_SOORT_KLACHT.Value = "" Then
                MsgBox "Soort klacht niet ingevuld."
                Exit Sub
             End If
             
             'Q3 Release
             If WFMrJN_ONTV_BEVEST_ja.Value Then
                If WFM_ONTVAGST_BEVSTDAT.Value = "" Then
                    MsgBox "Datum Ontvangst bevestiging mag niet leeg zijn."
                    Exit Sub
                End If
             End If
             
             If Not WFMrJN_KLAC_TOEGEW_ja.Value And Not WFMrJN_KLAC_TOEGEWnee.Value Then
                MsgBox "Klacht toegewezen niet ingevuld."
                Exit Sub
             End If
             
             If Not WFMrJN_ONTV_BEVEST_ja.Value And Not WFMrJN_ONTV_BEVESTnee.Value Then
                MsgBox "Geen ontvangstbevestiging aangegeven."
                Exit Sub
             End If
             If WFMrJN_ONTV_BEVEST_ja And WFM_GEPLANDE_EINDDAT.Text = "" Then
                MsgBox "Geen verwachte einddatum opgegeven."
                Exit Sub
             End If
             DateCheck WFM_GEPLANDE_EINDDAT
             
'   Code added for Dates RFC Klachten
             DateCheck WFM_ONTVAGST_BEVSTDAT
             DateCheck WFM_ERST_REACTDAT
        Case "85A10"
             If WFMrJN_NAAR_PARKERENnee.Value Then
                If Not WFMrJN_ANTW_BRIEF_ja.Value And Not WFMrJN_ANTW_BRIEFnee.Value Then
                    MsgBox "Antwoordbrief niet aangegeven."
                    Exit Sub
                End If
                If WFMrJN_ANTW_BRIEF_ja.Value Then
                    WFM_REDEN_PARKEREN.Text = ""
                    WFMDRAPPEL.Text = ""
                End If
             End If
        Case "85A20", "85A25"
             If Not WFMrJN_OM_AKKOORD_ja.Value And Not WFMrJN_OM_AKKOORDnee.Value Then
                MsgBox "Akkoord niet aangegeven."
                Exit Sub
             End If
             If WFMrJN_OM_AKKOORD_ja.Value And Left(GetWorkstep(WIViewer), 5) = "85A20" And _
                    (Not WFMrJN_NAAR_COM_ja.Value And Not WFMrJN_NAAR_COMnee.Value) Then
                MsgBox "Route naar Communicatie niet aangegeven."
                Exit Sub
             End If
             If WFMrJN_OM_AKKOORDnee.Value Then _
                WFM_ZAAK_VLGNR_MEMO.Text = "NAK> " & WFM_ZAAK_VLGNR_MEMO.Text
        Case "85A30"
             If Not WFMrJN_COM_AKKOORD_ja.Value And Not WFMrJN_COM_AKKOORDnee.Value Then
                MsgBox "Akkoord Communicatie niet aangegeven."
                Exit Sub
             End If
             If WFMrJN_COM_AKKOORDnee.Value And WFM_REACT_COM.Text = "" Then
                MsgBox "Geen reactie Communicatie aangegeven."
                Exit Sub
             End If
             If WFMrJN_COM_AKKOORDnee.Value Then _
                WFM_ZAAK_VLGNR_MEMO.Text = "COMM> " & WFM_ZAAK_VLGNR_MEMO.Text
        Case "85A35"
             If Not WFMrJN_KLACHT_GEREED_ja.Value And Not WFMrJN_KLACHT_GEREEDnee.Value Then
                MsgBox "Antwoordbrief verstuurd niet aangegeven."
                Exit Sub
             End If
             If Not WFMrJN_NABELLEN_ja.Value And Not WFMrJN_NABELLENnee.Value Then
                MsgBox "Nabellen niet aangegeven."
                Exit Sub
             End If
             If WFMrJN_KLACHT_GEREED_ja.Value Then
                If fncCheckKlacht = False Then Exit Sub
             End If
             If WFM_ERST_REACTDAT.Value = "" Then
                MsgBox "Datum eerste inhoudelijke reactie mag niet leeg zijn."
                WFM_ERST_REACTDAT.BackColor = TextboxRed
                Exit Sub
             End If
             sEindDatum = Format(Date, "ddmmyyyy")
        Case "85A40"
             If WFMrJN_NAAR_PARKERENnee.Value Then
                If Not WFMrJN_DIRBRIEF_VERZ_ja.Value And Not WFMrJN_DIRBRIEF_VERZnee.Value Then
                    MsgBox "Directie Akkoord niet aangegeven."
                    Exit Sub
                End If
                If WFMrJN_DIRBRIEF_VERZ_ja.Value Then
                    WFM_REDEN_PARKEREN.Text = ""
                    WFMDRAPPEL.Text = ""
                End If
             End If
             
             If WFMrJN_DIRBRIEF_VERZ_ja.Value Then
                If fncCheckKlacht = False Then Exit Sub
             End If
             sEindDatum = Format(Date, "ddmmyyyy")
        Case "85A50"
             If Not WFMrJN_NAZORG_GER_ja.Value And Not WFMrJN_NAZORG_GERnee.Value Then
                MsgBox "Nazorg Gereed niet aangegeven."
                Exit Sub
             End If
             If WFMrJN_NAZORG_GER_ja.Value Then
                If fncCheckKlacht = False Then Exit Sub
             End If
    End Select
    
''    Q3 Release 2012 for Change TD. 156156
    If Not newWorkItem Then

'       [PAC] - TD162578 - Added Check on compulsary fields
        If (cbOorzaak.Text = "Overig" Or cbAard.Text = "Overig") And _
            txtExtraOms.Text = "" Then
           MsgBox "Geen toelichting gegeven in veld 'Extra Omschrijving'."
           Exit Sub
        End If
'       [PAC] - TD162578 - End Added Check on compulsary fields

        If Not WFMrJN_UTIL_VERST_ja.Value And Not WFMrJN_UTIL_VERSTnee.Value Then
           MsgBox "Uitstelbrief verstuurd niet aangegeven."
           Exit Sub
        End If
                 
        If WFMrJN_UTIL_VERST_ja.Value Then
            If WFM_UTIL_VERST_DAT.Value = "" Then
                MsgBox "Datum Uitstelbrief verstuurd mag niet leeg zijn."
                Exit Sub
            Else
                DateCheck WFM_UTIL_VERST_DAT
            End If
        End If
                               
        If WFMrJN_ONTV_BEVEST_ja.Value Then
            If (CDate(Format(WFM_ONTVAGST_BEVSTDAT.Value, "dd-mm-yyyy")) < CDate(Format(gsKlDatum, "dd-mm-yyyy"))) Then
                MsgBox "Ontvangstbevestiging verstuurd datum kan niet 'Kleiner dan " & gsKlDatum
                WFM_ONTVAGST_BEVSTDAT.BackColor = TextboxRed
                Exit Sub
            End If
        End If
        
        If Not WFMrJN_UTIL_VERSTnee.Value Then
            DateCheck WFM_UTIL_VERST_DAT
            If (CDate(Format(WFM_UTIL_VERST_DAT, "dd-mm-yyyy")) < CDate(Format(gsKlDatum, "dd-mm-yyyy"))) Then
                MsgBox "Uitstelbrief verstuurd datum kan niet 'Kleiner dan " & gsKlDatum
                WFM_UTIL_VERST_DAT.BackColor = TextboxRed
                Exit Sub
            End If
            If blnUTIL_VERST_DAT Then
                If Not (oldUTIL_VERST_DAT = newUTIL_VERST_DAT) Then
                    If oldGEPLANDEDate = newGEPLANDEDate Then
                        MsgBox "Geplande Einddatum moet worden veranderd"
                        WFM_GEPLANDE_EINDDAT.BackColor = TextboxRed
                        Exit Sub
                    End If
                End If
            End If
        End If
        
        If Not (WFM_ERST_REACTDAT.Value = "") Then
            DateCheck WFM_ERST_REACTDAT
            If (CDate(Format(WFM_ERST_REACTDAT, "dd-mm-yyyy")) < CDate(Format(gsKlDatum, "dd-mm-yyyy"))) Then
                MsgBox "eerste inhoudelijke reactie datum kan niet 'Kleiner dan " & gsKlDatum
                WFM_ERST_REACTDAT.BackColor = TextboxRed
                Exit Sub
            End If
        End If
        
        
    End If

'   Parkeren
    If fraParkeren.Visible = True Then
        If WFMrJN_NAAR_PARKEREN_ja.Value Then
            If WFM_REDEN_PARKEREN.Text = "" Then
                MsgBox "Geen reden parkeren opgegeven."
                WFM_REDEN_PARKEREN.SetFocus
                Exit Sub
            Else
                If DateCheck(WFMDRAPPEL) Then
                    If WFMDRAPPEL = "" Or (CDate(Format(WFMDRAPPEL, "dd-mm-yyyy")) <= CDate(Format(Date, "dd-mm-yyyy"))) Then
                        MsgBox "Rappeldatum moet in de toekomst liggen."
                        WFMDRAPPEL.SetFocus
                        Exit Sub
                    End If
                End If
            End If
        End If
    End If

    If bNwKlacht Then               'Nieuwe Klacht: dan folder aanmaken
        WFM_NR_POLIS.Text = lblBetreftNr.Caption
        WFM_IND_TRIGGER.Text = "KLA"
        iVolgnr = GetMaxVolgNr(WFM_NR_POLIS.Text, WFM_IND_TRIGGER.Text)
        WFM_ZK_VOLGNR.Text = Format(iVolgnr + 1)
        WFM_ZAAK_IDENT_NR.Text = WFM_NR_POLIS.Text & WFM_IND_TRIGGER.Text & WFM_ZK_VOLGNR.Text

        WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = "REM"
        WIViewer.Fields.Find("DOCTYPE").CALFormField.Value = "Klacht"   'DocumentType in Form(Document)
        WIViewer.CALClientListItem.OpenedItem.SetName ("Nieuwe Klacht")
        WIViewer.CALClientListItem.OpenedItem.Save

        Set oClientLItem = CALCreateFolder(WFM_ZAAK_IDENT_NR.Text, "COLLKLA")
        Set oFolder = CALOpenFolder(oClientLItem, True)
        Call CALSetFieldValue(oFolder, "NR_POLIS", WFM_NR_POLIS.Text)
        Call CALSetFieldValue(oFolder, "NR_AEGAR", WFM_NR_AEGAR.Text)
        Call CALSetFieldValue(oFolder, "NR_KLANT", WFM_NR_KLANT.Text)
        Call CALSetFieldValue(oFolder, "NR_TP", WFM_NR_TP.Text)
        Call CALSetFieldValue(oFolder, "DAT_DOC", WFMDDAT_DOC.Text)
        Call CALSetFieldValue(oFolder, "BEHANDELAAR", WFM_BEHANDELAAR.Text)
        Call CALSetFieldValue(oFolder, "IND_TRIGGER", WFM_IND_TRIGGER.Text)
        Call CALSetFieldValue(oFolder, "ZK_VOLGNR", WFM_ZK_VOLGNR.Text)
        Call CALSetFieldValue(oFolder, "ZAAK_IDENT_NR", WFM_ZAAK_IDENT_NR.Text)
        Call CALSetFieldValue(oFolder, "ZAAK_VLGNR_MEMO", WFM_ZAAK_VLGNR_MEMO.Text)
        Call CALSetFieldValue(oFolder, "KLA_AFD", WFM_KLA_AFD.Text)
        Call CALSetFieldValue(oFolder, "JN_DIR_BRIEF", WFM_JN_DIR_BRIEF.Text)
        
        Call oFolder.Children.Add(WIViewer.CALClientListItem.Info.objId, calChildLast)
        oFolder.Save
        gsObjID = oFolder.Info.objId.InternalName
        oFolder.Close (calCloseSaveChanges)
        oClientLItem.SendToDefault (calSendDiscard)
    End If

    If gsKlachtNr <> "" Then
        On Error GoTo ERROR_DOCUMENT
        sAfgehandeld = WIViewer.Fields.Find("JN_TEL_AFGEHANDELD").CALFormField.Value
        Call subUpdateKlacht(gsObjID, sEindDatum, sAfgehandeld)
        Call subSetNagebeld(gsKlachtNr)     'Field WFM_JN_NAGEBELD
    End If

    
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Application.Desktop.WindowState = DesktopWindowState
    Exit Sub

ERROR_DOCUMENT:
    If Err.Number = 91 Then
        On Error GoTo ERROR_OPSLAAN
        Resume Next
    End If

ERROR_OPSLAAN:
    DisplayError "Doorsturen" & Err.Number & "---" & Err.Description
End Sub

Private Sub cmdSluiten_Click()
    On Error Resume Next
    WIViewer.WindowState = wdoWindowStateMinimized
    frmQuery.Show 0
    Unload Me
End Sub

Private Sub cmdTelAfgehandeld_Click()
Dim sEindDatum          As String
Dim sAnswer             As String

    On Error GoTo ERROR_TEL_AFGEHANDELD
        
    'Q3 Release change start
    sEindDatum = Format(Date, "ddmmyyyy")
    
    If Not (WFMrJN_KLAC_TOEGEW_ja Or WFMrJN_KLAC_TOEGEWnee) Then
        MsgBox "Klacht toegewezen Ja/Nee moet geselecteerd"
        Exit Sub
    End If

    If Trim(WFM_ONTVAGST_BEVSTDAT.Text) = "" Then
        WFM_ONTVAGST_BEVSTDAT.Text = sEindDatum
    End If
    
    If Trim(WFM_ERST_REACTDAT.Text) = "" Then
        WFM_ERST_REACTDAT.Text = sEindDatum
    End If
    'Q3 Release change end
    
    sAnswer = MsgBox("Deze telefonisch afgehandelde klacht wordt gearchiveerd." & vbCrLf & _
                   "Wilt u de klacht eerst nog naar werkstap Nazorg versturen?", _
                   vbYesNoCancel + vbQuestion, "Telefonisch Afgehandeld")
    If sAnswer = vbCancel Then Exit Sub
    If sAnswer = vbYes Then
        sAnswer = "N"     'Nazorg
    Else
        sAnswer = "A"     'Archief
        If fncCheckKlacht = False Then Exit Sub
    End If

    WIViewer.Fields.Find("JN_TEL_AFGEHANDELD").CALFormField.Value = sAnswer

    
    Call subUpdateKlacht(gsObjID, sEindDatum, sAnswer)

    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Application.Desktop.WindowState = DesktopWindowState
    Exit Sub

ERROR_TEL_AFGEHANDELD:
    DisplayError "Telefonisch Afhandelen"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo ERROR_TERUG
    Call WFMBackButton(WIViewer)
    Application.Desktop.WindowState = DesktopWindowState
    Exit Sub

ERROR_TERUG:
    DisplayError "Annuleren"
End Sub

Private Sub cmdToevoegen_Click()
Dim mobjQueryResults    As CALQueryResults
Dim myQueryFrm          As Object

    On Error GoTo ERR_TOEVOEGEN
    If WFM_NR_POLIS.Text = "" Then
        MsgBox "Dossiernummer is niet ingevuld."
        WFM_NR_POLIS.SetFocus
        Exit Sub
    End If
    If Len(WFM_NR_POLIS.Text) <> 6 And Len(WFM_NR_POLIS.Text) <> 10 Then
        MsgBox "Dossiernummer niet correct,  moet zijn:" & vbCrLf & vbCrLf & _
               " 6 pos. voor Klant of Tussenpersoon of" & vbCrLf & _
               "10 pos. voor Deelnemer"
        WFM_NR_POLIS.SetFocus
        Exit Sub
    End If

    If Not WorkflowSave(WIViewer) Then Exit Sub
'   Zoeken naar folder met zelfde deelnemernummer.
'   Na keuze van folder wordt document hierin geimporteerd.
    If Not Me.QueryFrm Is Nothing Then
       Me.QueryFrm.Show 0
       Exit Sub
    End If
    Set Me.QueryFrm = New frmZoekImport
    Set myQueryFrm = Me.QueryFrm
    Set myQueryFrm.WorkitemViewer = Me.WorkitemViewer
    Set myQueryFrm.ParentForm = Me
    myQueryFrm.Show 0
    Exit Sub

ERR_TOEVOEGEN:
'   Doctype niet ingevuld. Dat mag dus
    If Err.Number = 12349 Then Resume Next
    DisplayError "Toevoegen"
End Sub

Private Sub cmdWijzigen_Click()
Dim sKlachtNr           As String

    sKlachtNr = gsKlachtNr                      'Bewaar het Klacht#
    Load frm_KLAKlachtInfo
    frm_KLAKlachtInfo.gsKlachtNr = gsKlachtNr
    frm_KLAKlachtInfo.Show 1
    gbRetVal = frm_KLAKlachtInfo.gbRetVal
    gsKlachtNr = frm_KLAKlachtInfo.gsKlachtNr
    Unload frm_KLAKlachtInfo
    If gbRetVal Then
        Call subReadKlacht("K", gsKlachtNr)
        Call subDspOptVelden
    Else
        gsKlachtNr = sKlachtNr              'Geannuleerd of SQL-update fout gegaan
    End If
End Sub

Private Sub txtExtraInfo_Change()
    txtExtraInfo.Text = fncReplaceQuote(txtExtraInfo.Text)
    DoEvents
End Sub

Private Sub txtExtraOms_Change()
    txtExtraOms.Text = fncReplaceQuote(txtExtraOms.Text)
    DoEvents
End Sub

Private Sub AFDELING_Change()
Dim strAfdeling         As String
Dim vUser               As Variant

    WFM_KLA_AFD.Text = AFDELING.Text
    strAfdeling = AFDELING.SelText
    WFM_BEHANDELAAR.Clear
    WFM_BEHANDELAAR.AddItem ""
    For Each vUser In GetUsersPerAfdeling(strAfdeling)
        WFM_BEHANDELAAR.AddItem vUser
    Next
End Sub

Private Sub UserForm_Activate()
Static bInit            As Boolean
Dim sWerkStap           As String
Dim sAfgehandeld        As String

blnUTIL_VERST_DAT = False

    If bInit Then
        If InfoVerstuurd Then
            WFMrJN_NAAR_PARKEREN_ja.Value = True
            WFM_REDEN_PARKEREN = "INFO verzoek"
            WFMDRAPPEL = Right(InfoRappeldat, 2) & Mid(InfoRappeldat, 5, 4) & Left(InfoRappeldat, 4)
            cmdTerug.Visible = False
            MsgBox "INFO verzoek verstuurd" & vbCrLf & _
                   "Deze zaak kan niet meer geannuleerd worden."
        End If
        Exit Sub
    End If
    
    'Q3 Release Change
    datum_Doc = WIViewer.Fields.Find("DAT_DOC").CALFormField.Value
    WFMrJN_KLAC_TOEGEW_ja.Visible = True
    WFMrJN_KLAC_TOEGEWnee.Visible = True
    bInit = True
    gsKlachtNr = ""
    gbRetVal = False
    fillDDList True, AFDELING, WFMData.Common.getList("WFAfdeling", "AfdCode", "Enabled", "1")
    AFDELING.AddItem "TPO"              'Hardcoded voor Klachtenproces
    AFDELING.AddItem "PON"              'Hardcoded voor Klachtenproces
    AFDELING.AddItem "TOP"              'Hardcoded voor Klachtenproces  /OIC changed to TOP
    AFDELING.AddItem "PJZ"              'Hardcoded voor Klachtenproces
    AFDELING.AddItem "CTC"              'Hardcoded voor Klachtenproces
    AFDELING.AddItem "POV"              'Hardcoded voor Klachtenproces
    AFDELING.AddItem "CIC"              'Hardcoded voor Klachtenproces
    AFDELING.AddItem "CWO"              '[PAC] - TD169757
    AFDELING.AddItem "WOD"              '[PAC] - TD169757
    Call subSortAfdeling(AFDELING, 0, AFDELING.ListCount - 1)
    Do While AFDELING.list(0) = ""      'Verwijder blanco regel(s)
        AFDELING.RemoveItem 0
    Loop
    AFDELING.Value = WFM_KLA_AFD.Text

    fillCmbAARD_KLACHT cbAard
    fillCmbBRON_KLACHT cbBron
    fillCmbExtraAfhandeling cbExtraAfhandeling
    fillCmbNazorg cbNazorg
    fillCmbOORZAAK_KLACHT cbOorzaak
    fillCmbReactieComm cbReactComm
    fillCmbSOORT_KLACHT WFM_SOORT_KLACHT

    If WIViewer.CALClientListItem.Info.Type = calObjTypeFolder Then
        Call subReadKlacht("O", WIViewer.CALClientListItem.Info.objId.InternalName)
        Call subDspOptVelden
    End If

    sWerkStap = Left(GetWorkstep(WIViewer), 5)
    If sWerkStap = "85A01" Or sWerkStap = "NEW" Then
        lblBron.Visible = False
        cbBron.Visible = False
        lblSoort.Visible = False
        WFM_SOORT_KLACHT.Visible = False
        lblOorzaak.Visible = False
        cbOorzaak.Visible = False
        lblAard.Visible = False
        cbAard.Visible = False
        lblOmschrijving.Visible = False
        txtExtraOms.Visible = False
        WFM_NR_POLIS.Enabled = True
        cmdToevoegen.Visible = True
        cmdNieuweKlacht.Visible = True
        fraKlacht.Visible = False
        fraOpties.Visible = False
        Exit Sub
    End If
    
'Code Commented for RFC Klachten
    'AFDELING.Enabled = False                'Uitvoerende afdeling kan niet meer gewijzigd worden
    lblAfgehandeldInfo.Visible = False
    lblExtraAfhandeling.Visible = True
    cbExtraAfhandeling.Visible = True
    lblNazorg.Visible = True
    cbNazorg.Visible = True
    cmdOntvBevestiging.Visible = True
    lblOBVerstuurd.Visible = True
    WFMrJN_ONTV_BEVEST_ja.Visible = True
    WFMrJN_ONTV_BEVESTnee.Visible = True
    
    lblKlacht.Visible = True
    lblEindDatum.Visible = True
    WFM_GEPLANDE_EINDDAT.Visible = True
    WFM_GEPLANDE_EINDDAT.Enabled = True
    
'   Code added for Dates RFC Klachten
    lblBevestiging.Visible = True
    WFM_ONTVAGST_BEVSTDAT.Visible = True
    WFM_ONTVAGST_BEVSTDAT.Enabled = True
    lblreactiedatum.Visible = True
    WFM_ERST_REACTDAT.Visible = True
    WFM_ERST_REACTDAT.Enabled = True
    
    lblNaarBehandelen.Visible = False
    WFMrJN_NAAR_BEHANDEL_ja.Value = False
    WFMrJN_NAAR_BEHANDEL_ja.Visible = False
    WFMrJN_NAAR_BEHANDELnee.Value = False
    WFMrJN_NAAR_BEHANDELnee.Visible = False
    If sWerkStap = "85A05" Then
        cmdOntvBevestiging.Enabled = True
        WFMrJN_ONTV_BEVEST_ja.Value = False
        WFMrJN_ONTV_BEVEST_ja.Enabled = True
        WFMrJN_ONTV_BEVESTnee.Value = False
        WFMrJN_ONTV_BEVESTnee.Enabled = True
        
        'Q3 Release Change in order to enable the WFMrJN_KLAC_TOEGEW to 85... Flow
'        WFMrJN_KLAC_TOEGEW_ja.Enabled = True
'        WFMrJN_KLAC_TOEGEW_ja.value = False
'        WFMrJN_KLAC_TOEGEWnee.Enabled = True
'        WFMrJN_KLAC_TOEGEWnee.value = False
        
        
        lblEindDatum.Enabled = True
        If WFM_GEPLANDE_EINDDAT.Text = "" Then _
           WFM_GEPLANDE_EINDDAT.Text = Format(DateAdd("ww", 2, CDate(gsKlDatum)), "dd-mm-yyyy")
        
        oldGEPLANDEDate = WFM_GEPLANDE_EINDDAT.Value    ''    Q3 Release 2012 for Change TD. 156156
                
        cmdTelAfgehandeld.Left = (fraOpties.Width - cmdTelAfgehandeld.Width) / 2
        cmdTelAfgehandeld.Top = lblEindDatum.Top + lblEindDatum.Height + 50
        cmdTelAfgehandeld.Visible = True
        Exit Sub
    End If

    If WFMrJN_OM_AKKOORDnee.Value Then
        lblReactFiat.ForeColor = &HFF&
        lblReactFiat.Visible = True
    End If
    If WFM_REACT_COM.Text <> "" Then
        lblReactComm.ForeColor = &HFF&
        lblReactComm.Visible = True
        cbReactComm.Visible = True
        cbReactComm.Value = WFM_REACT_COM.Text
        cbReactComm.Enabled = False
    End If
    lblAntwoordBrief.Visible = True
    WFMrJN_ANTW_BRIEF_ja.Visible = True
    WFMrJN_ANTW_BRIEFnee.Visible = True
    If sWerkStap = "85A10" Then
        WFMrJN_NAAR_PARKERENnee.Value = True
        WFMrJN_ANTW_BRIEF_ja.Value = False
        WFMrJN_ANTW_BRIEF_ja.Enabled = True
        WFMrJN_ANTW_BRIEFnee.Value = False
        WFMrJN_ANTW_BRIEFnee.Enabled = True
        fraParkeren.Visible = True
        cmdTelAfgehandeld.Left = (fraOpties.Width - cmdTelAfgehandeld.Width) / 2
        cmdTelAfgehandeld.Top = lblAntwoordBrief.Top + lblAntwoordBrief.Height + 35
        cmdTelAfgehandeld.Visible = True
        
        oldGEPLANDEDate = WFM_GEPLANDE_EINDDAT.Value    ''    Q3 Release 2012 for Change TD. 156156
        oldUTIL_VERST_DAT = WFM_UTIL_VERST_DAT.Value
        
        Exit Sub
    End If

    lblAkkoord.Caption = "Fiatteren Akkoord"
    If WFM_JN_DIR_BRIEF.Text = "J" Then lblAkkoord.Caption = "Controle Akkoord"
    lblAkkoord.Visible = True
    WFMrJN_OM_AKKOORD_ja.Visible = True
    WFMrJN_OM_AKKOORDnee.Visible = True
    lblNaarComm.Visible = True
    WFMrJN_NAAR_COM_ja.Visible = True
    WFMrJN_NAAR_COMnee.Visible = True
    If sWerkStap = "85A20" Or sWerkStap = "85A25" Then
        WFMrJN_NAAR_COM_ja.Value = False
        WFMrJN_NAAR_COMnee.Value = True
        If WFM_JN_DIR_BRIEF.Text <> "J" Then
            WFMrJN_NAAR_COM_ja.Value = False
            WFMrJN_NAAR_COM_ja.Enabled = True
            WFMrJN_NAAR_COMnee.Enabled = True
            lblNaarComm.Visible = False
            WFMrJN_NAAR_COM_ja.Visible = False
            WFMrJN_NAAR_COMnee.Visible = False
        End If
        WFMrJN_OM_AKKOORD_ja.Value = False
        WFMrJN_OM_AKKOORD_ja.Enabled = True
        WFMrJN_OM_AKKOORDnee.Value = False
        WFMrJN_OM_AKKOORDnee.Enabled = True
        
        oldGEPLANDEDate = WFM_GEPLANDE_EINDDAT.Value    ''    Q3 Release 2012 for Change TD. 156156
        oldUTIL_VERST_DAT = WFM_UTIL_VERST_DAT.Value
        
        Exit Sub
    End If

    lblCommAkkoord.Visible = True
    WFMrJN_COM_AKKOORD_ja.Visible = True
    WFMrJN_COM_AKKOORDnee.Visible = True
    If sWerkStap = "85A30" Then
        lblReactComm.Visible = True
        cbReactComm.Visible = True
        cbReactComm.Enabled = False
        WFMrJN_COM_AKKOORD_ja.Value = False
        WFMrJN_COM_AKKOORD_ja.Enabled = True
        WFMrJN_COM_AKKOORDnee.Value = False
        WFMrJN_COM_AKKOORDnee.Enabled = True
        If WFM_REACT_COM.Text <> "" Then
            cbReactComm.Value = WFM_REACT_COM.Text
            WFMrJN_COM_AKKOORDnee.Value = True
        End If

        cmdWijzigen.Visible = False
        WFM_NR_AEGAR.Enabled = False
        WFM_NR_KLANT.Enabled = False
        WFM_NR_TP.Enabled = False
        WFM_GEPLANDE_EINDDAT.Enabled = False
        
'   Code added for Dates RFC Klachten
        WFM_ERST_REACTDAT.Enabled = False
        WFM_ONTVAGST_BEVSTDAT.Enabled = False
        
        cbBron.Enabled = False
        WFM_SOORT_KLACHT.Enabled = False
        cbOorzaak.Enabled = False
        cbAard.Enabled = False
        txtExtraOms.Enabled = False
        cbExtraAfhandeling.Enabled = False
        cbNazorg.Enabled = False
        WFM_ZAAK_VLGNR_MEMO.Enabled = False
        
        oldGEPLANDEDate = WFM_GEPLANDE_EINDDAT.Value    ''    Q3 Release 2012 for Change TD. 156156
        oldUTIL_VERST_DAT = WFM_UTIL_VERST_DAT.Value
        
        Exit Sub
    End If
    
    
    If sWerkStap = "85A35" Or sWerkStap = "85A40" Then
    '   Q3 Release Change Start
        lblNaarComm.Visible = False
        WFMrJN_NAAR_COM_ja.Visible = False
        WFMrJN_NAAR_COMnee.Visible = False
        
        lblCommAkkoord.Visible = False
        WFMrJN_COM_AKKOORD_ja.Visible = False
        WFMrJN_COM_AKKOORDnee.Visible = False
    '   Q3 Release Change End
    End If
    
    If sWerkStap = "85A35" Then
        lblAfgehandeld.Visible = True
        WFMrJN_KLACHT_GEREED_ja.Value = False
        WFMrJN_KLACHT_GEREED_ja.Visible = True
        WFMrJN_KLACHT_GEREED_ja.Enabled = True
        WFMrJN_KLACHT_GEREEDnee.Value = False
        WFMrJN_KLACHT_GEREEDnee.Visible = True
        WFMrJN_KLACHT_GEREEDnee.Enabled = True
        
        oldGEPLANDEDate = WFM_GEPLANDE_EINDDAT.Value    ''    Q3 Release 2012 for Change TD. 156156
        oldUTIL_VERST_DAT = WFM_UTIL_VERST_DAT.Value
        
        Exit Sub
    End If

    lblDirAkkoord.Visible = True
    WFMrJN_DIRBRIEF_VERZ_ja.Visible = True
    WFMrJN_DIRBRIEF_VERZnee.Visible = True
    If sWerkStap = "85A40" Then
        WFMrJN_NAAR_PARKERENnee.Value = True
        WFMrJN_DIRBRIEF_VERZ_ja.Value = False
        WFMrJN_DIRBRIEF_VERZ_ja.Enabled = True
        WFMrJN_DIRBRIEF_VERZnee.Value = False
        WFMrJN_DIRBRIEF_VERZnee.Enabled = True
        fraParkeren.Visible = True
        
        oldGEPLANDEDate = WFM_GEPLANDE_EINDDAT.Value    ''    Q3 Release 2012 for Change TD. 156156
        oldUTIL_VERST_DAT = WFM_UTIL_VERST_DAT.Value
        
''   Q3 Release Change Start
'        lblNaarComm.Visible = False
'        WFMrJN_NAAR_COM_ja.Visible = False
'        WFMrJN_NAAR_COMnee.Visible = False
'
'        lblCommAkkoord.Visible = False
'        WFMrJN_COM_AKKOORD_ja.Visible = False
'        WFMrJN_COM_AKKOORDnee.Visible = False
''   Q3 Release Change End
        Exit Sub
    End If

    If WFM_JN_DIR_BRIEF.Text <> "J" Then
        lblAfgehandeld.Visible = True
        WFMrJN_KLACHT_GEREED_ja.Visible = True
        WFMrJN_KLACHT_GEREEDnee.Visible = True
        lblDirAkkoord.Visible = False
        WFMrJN_DIRBRIEF_VERZ_ja.Visible = False
        WFMrJN_DIRBRIEF_VERZnee.Visible = False
    End If
    lblNazorgGereed.Visible = True
    WFMrJN_NAZORG_GER_ja.Visible = True
    WFMrJN_NAZORG_GERnee.Visible = True
    lblExtraInfo.Visible = True
    txtExtraInfo.Visible = True
    If sWerkStap = "85A50" Then
        WFMrJN_NAZORG_GER_ja.Value = False
        WFMrJN_NAZORG_GER_ja.Enabled = True
        WFMrJN_NAZORG_GERnee.Value = False
        WFMrJN_NAZORG_GERnee.Enabled = True
        txtExtraInfo.Enabled = True
        cmdNabelscript.Visible = True
        If WFM_JN_NAGEBELD = "J" Then cmdNabelscript.Caption = "Nabelscript Wijzigen"
        
        oldGEPLANDEDate = WFM_GEPLANDE_EINDDAT.Value    ''    Q3 Release 2012 for Change TD. 156156
        oldUTIL_VERST_DAT = WFM_UTIL_VERST_DAT.Value
        
        Exit Sub
    End If

    If sWerkStap = "" Then                          'Gestart vanuit het zoekscherm
        cmdWijzigen.Visible = False
        WFM_NR_AEGAR.Enabled = False
        WFM_NR_KLANT.Enabled = False
        WFM_NR_TP.Enabled = False
        WFM_BEHANDELAAR.Enabled = False
        WFM_GEPLANDE_EINDDAT.Enabled = False
        
'   Code added for Dates RFC Klachten
        WFM_ERST_REACTDAT.Enabled = False
        WFM_ONTVAGST_BEVSTDAT.Enabled = False

        cbBron.Enabled = False
        WFM_SOORT_KLACHT.Enabled = False
        cbOorzaak.Enabled = False
        cbAard.Enabled = False
        txtExtraOms.Enabled = False
        cbExtraAfhandeling.Enabled = False
        cbNazorg.Enabled = False
        WFM_ZAAK_VLGNR_MEMO.Enabled = False
        If WFM_JN_NAGEBELD = "J" Then
            cmdNabelscript.Caption = "Nabelscript Tonen"
            cmdNabelscript.Visible = True
        End If
        sAfgehandeld = WIViewer.Fields.Find("JN_TEL_AFGEHANDELD").CALFormField.Value
        If sAfgehandeld = "A" Or sAfgehandeld = "N" Then
            lblAfgehandeldInfo.Caption = "Klacht telefonisch afgehandeld"
            lblAfgehandeldInfo.Visible = True
        End If
        cmdOpslaan.Visible = False
        cmdTerug.Visible = False
        cmdSluiten.Visible = True
        cmdSluiten.Default = True
        frmQuery.Hide
        Application.Desktop.WindowState = wdoWindowStateMinimized
    End If
    
    
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Private Function fncCheckKlacht() As Boolean
    fncCheckKlacht = False
    If cbBron.Value = "" Then
        MsgBox "Bron van de klacht niet ingevuld."
        cbBron.SetFocus
        Exit Function
    End If
    If WFM_SOORT_KLACHT.Value = "" Then
        MsgBox "Soort klacht niet ingevuld."
        WFM_SOORT_KLACHT.SetFocus
        Exit Function
    End If
    If cbOorzaak.Value = "" Then
        MsgBox "Oorzaak van de klacht niet ingevuld."
        cbOorzaak.SetFocus
        Exit Function
    End If
    fncCheckKlacht = True
End Function

Private Function fncReplaceQuote(vString As String) As String
    fncReplaceQuote = Replace(vString, "'", "?")
End Function

Private Sub subDspOptVelden()
    WFM_NR_POLIS.Text = lblBetreftNr.Caption
    WFM_NR_POLIS.Enabled = False

    lblAegar.Visible = True
    WFM_NR_AEGAR.Visible = True
    WFM_NR_AEGAR.Enabled = True
    If InStr("De*Kl*Tu*", Left(lblAfzenderType.Caption, 2)) < 1 Then
        WFM_NR_AEGAR.Text = lblAfzenderNr.Caption   'Als geen Deelnemer/Klant/Tussenpersoon
        WFM_NR_AEGAR.Enabled = False
    End If

    lblKlant.Visible = True
    WFM_NR_KLANT.Visible = True
    WFM_NR_KLANT.Enabled = True
    If lblBetreft.Caption = "Klant" Then
        WFM_NR_KLANT.Text = lblBetreftNr.Caption
        WFM_NR_KLANT.Enabled = False
    End If
    If Trim(lblAfzenderType.Caption) = "Klant" And WFM_NR_KLANT.Text = "" Then
        WFM_NR_KLANT.Text = lblAfzenderNr.Caption
        WFM_NR_KLANT.Enabled = False
    End If

    lblTP.Visible = True
    WFM_NR_TP.Visible = True
    WFM_NR_TP.Enabled = True
    If lblBetreft.Caption = "Tussenpersoon" Then
        WFM_NR_TP.Text = lblBetreftNr.Caption
        WFM_NR_TP.Enabled = False
    End If
    If Trim(lblAfzenderType.Caption) = "Tussenpersoon" And WFM_NR_TP.Text = "" Then
        WFM_NR_TP.Text = lblAfzenderNr.Caption
        WFM_NR_TP.Enabled = False
    End If
    cmdWijzigen.Visible = True
End Sub

Private Sub subSortAfdeling(vAfdeling As ComboBox, vBottom As Integer, vTop As Integer)
Dim sPivot              As String
Dim sTemp               As String
Dim iBottomTMP          As Integer
Dim iTopTMP             As Integer

    iBottomTMP = vBottom
    iTopTMP = vTop
    sPivot = vAfdeling.list((vBottom + vTop) \ 2)
    While (iBottomTMP <= iTopTMP)
        While (vAfdeling.list(iBottomTMP) < sPivot And iBottomTMP < vTop)
            iBottomTMP = iBottomTMP + 1
        Wend
        While (sPivot < vAfdeling.list(iTopTMP) And iTopTMP > vBottom)
            iTopTMP = iTopTMP - 1
        Wend
        If iBottomTMP < iTopTMP Then
            sTemp = vAfdeling.list(iBottomTMP)
            vAfdeling.list(iBottomTMP) = vAfdeling.list(iTopTMP)
            vAfdeling.list(iTopTMP) = sTemp
        End If
        If iBottomTMP <= iTopTMP Then
            iBottomTMP = iBottomTMP + 1
            iTopTMP = iTopTMP - 1
        End If
  Wend

'   The function calls itself until everything is in good order
    If (vBottom < iTopTMP) Then subSortAfdeling vAfdeling, vBottom, iTopTMP
    If (iBottomTMP < vTop) Then subSortAfdeling vAfdeling, iBottomTMP, vTop
End Sub

Private Sub subReadKlacht(ByVal vInd As String, ByVal vSQLKey As String)
Dim oRecSet             As adodb.Recordset

    Set oRecSet = SQLGetKlacht(vInd, vSQLKey)
    If Not oRecSet.EOF Then
        gsObjID = ""
        If Not IsNull(oRecSet("KLA_OBJID")) Then gsObjID = Trim(oRecSet("KLA_OBJID"))
        gsKlDatum = Trim(oRecSet("KLA_Datum"))
        gsKlDatum = Right(gsKlDatum, 2) & "-" & Mid(gsKlDatum, 5, 2) & "-" & Left(gsKlDatum, 4)
        gsKlachtNr = Trim(oRecSet("KLA_WFMKlachtNR"))
        fraKlacht.Caption = "Informatie Klacht   " & gsKlachtNr & "     Datum:  " & gsKlDatum
        lblAfzenderLabel.Visible = True
        lblAfzenderType.Caption = Trim(oRecSet("KLA_AfzenderType"))
        lblAfzenderType.Visible = True
        lblAfzNrLabel.Caption = "Nummer"
        If InStr("DEE*KLA*TUS*", Left(UCase(lblAfzenderType.Caption), 3)) = 0 Then _
            lblAfzNrLabel.Caption = "AR Nummer"
        lblAfzNrLabel.Visible = True
        lblAfzenderNr.Caption = Trim(oRecSet("KLA_AfzenderNr"))
        lblAfzenderNr.Visible = True
        lblCorrespondentie.Visible = True
        lblCorrNAW.Caption = Trim(oRecSet("KLA_CorrNaam")) & vbCrLf & _
                             Trim(oRecSet("KLA_CorrAdres")) & vbCrLf & _
                             Trim(oRecSet("KLA_CorrPoWoon"))
        lblCorrNAW.Visible = True
        lblBetreftLabel.Visible = True
        lblBetreft.Caption = Trim(oRecSet("KLA_Betreft"))
        lblBetreft.Visible = True
        lblBetreftNrLabel.Visible = True
        lblBetreftNr.Caption = Trim(oRecSet("KLA_BetreftNr"))
        lblBetreftNr.Visible = True
        On Error Resume Next                            '[PAC] - TD162578
        cbBron.Value = Trim(oRecSet("KLA_Bron"))
        WFM_SOORT_KLACHT.Value = Trim(oRecSet("KLA_Soort"))
        cbAard.Value = Trim(oRecSet("KLA_Aard"))
        cbOorzaak.Value = Trim(oRecSet("KLA_Oorzaak"))
        cbExtraAfhandeling.Value = Trim(oRecSet("KLA_ExtraAfhand"))
        cbNazorg.Value = Trim(oRecSet("KLA_NazorgIntern"))
        If Trim(oRecSet("KLA_ExtraOms")) <> vbNull Then _
            txtExtraOms.Text = Trim(oRecSet("KLA_ExtraOms"))
        If Trim(oRecSet("KLA_ExtraInfo")) <> vbNull Then _
            txtExtraInfo.Text = Trim(oRecSet("KLA_ExtraInfo"))
    End If
End Sub

Private Sub subSetNagebeld(ByVal vKlachtNr As String)
Dim oRecSet             As adodb.Recordset

    WFM_JN_NAGEBELD = "N"
    Set oRecSet = SQLGetKlachtRapport(vKlachtNr)
    If Not oRecSet.EOF Then WFM_JN_NAGEBELD = "J"
End Sub

Private Sub subUpdateKlacht(vObjID As String, vKlachtEindDat As String, vTelAfgehandeld As String)
Dim sSQLString          As String

    sSQLString = "UPDATE dbo.tblKlachten "
    sSQLString = sSQLString & "SET KLA_OBJID = '" & vObjID & "', "
    sSQLString = sSQLString & "KLA_Bron = '" & cbBron.Text & "', "
    sSQLString = sSQLString & "KLA_Soort = '" & WFM_SOORT_KLACHT.Text & "', "
    sSQLString = sSQLString & "KLA_Aard = '" & cbAard.Text & "', "
    sSQLString = sSQLString & "KLA_Oorzaak = '" & cbOorzaak.Text & "', "
    sSQLString = sSQLString & "KLA_ExtraAfhand = '" & cbExtraAfhandeling.Text & "', "
    sSQLString = sSQLString & "KLA_NazorgIntern = '" & cbNazorg.Text & "', "
    sSQLString = sSQLString & "KLA_ExtraOms = '" & txtExtraOms.Text & "', "
    sSQLString = sSQLString & "KLA_ExtraInfo = '" & txtExtraInfo.Text & "', "
    sSQLString = sSQLString & "KLA_EindeKlacht = '" & vKlachtEindDat & "', "
    sSQLString = sSQLString & "KLA_Tel_Afgehandeld = '" & vTelAfgehandeld & "', "
    sSQLString = sSQLString & "KLA_Toegewezen = '" & rdBtToegewezen & "', "
    sSQLString = sSQLString & "KLA_erstReactDat = '" & WFM_ERST_REACTDAT.Text & "', "           ''Code Added for RFC Klachtnen
    sSQLString = sSQLString & "KLA_ontvgstBevstDat = '" & WFM_ONTVAGST_BEVSTDAT.Text & "', "    ''Code Added for RFC Klachtnen
    sSQLString = sSQLString & "KLA_Utstlverstuurd = '" & WFM_UTIL_VERST_DAT.Text & "', "        ''Q3 Release 2012 for Change TD. 156156
    sSQLString = sSQLString & "KLA_GplndEndatum = '" & WFM_GEPLANDE_EINDDAT.Text & "' "         ''Q3 Release 2012 for Change TD. 156156
    sSQLString = sSQLString & " WHERE KLA_WFMKlachtNr = '" & gsKlachtNr & "'"
    gbRetVal = SQLUpdateKlacht(sSQLString)
End Sub

Private Sub WFM_GEPLANDE_EINDDAT_AfterUpdate()
    On Error GoTo ERR_EINDDAT
    DateCheck WFM_GEPLANDE_EINDDAT
    newGEPLANDEDate = WFM_GEPLANDE_EINDDAT.Value
    Exit Sub

ERR_EINDDAT:
    DisplayError "Geplande Einddatum"
End Sub

'   Code added for Dates RFC Klachten
Private Sub WFM_ONTVAGST_BEVSTDAT_AfterUpdate()
    On Error GoTo ERR_BEVSTDAT
    DateCheck WFM_ONTVAGST_BEVSTDAT
    Exit Sub

ERR_BEVSTDAT:
    DisplayError "datum ontvangst bevestiging"
End Sub

'   Code added for Dates RFC Klachten
Private Sub WFM_ERST_REACTDAT_AfterUpdate()
    On Error GoTo ERR_REACTDAT
    DateCheck WFM_ERST_REACTDAT
    Exit Sub

ERR_REACTDAT:
    DisplayError "datum eerste reactie"
End Sub

Private Sub WFM_UTIL_VERST_DAT_AfterUpdate()
    On Error GoTo ERR_UTILVERSTDAT
    DateCheck WFM_UTIL_VERST_DAT
    
''    Q3 Release 2012 for Change TD. 156156
    If WFMrJN_UTIL_VERST_ja.Value And Not WFM_UTIL_VERST_DAT.Value = "" Then
        blnUTIL_VERST_DAT = True
        newUTIL_VERST_DAT = WFM_UTIL_VERST_DAT.Value
        newGEPLANDEDate = WFM_GEPLANDE_EINDDAT.Value    ''    Q3 Release 2012 for Change TD. 156156
        WFM_GEPLANDE_EINDDAT.Locked = False
    End If
    Exit Sub

ERR_UTILVERSTDAT:
    DisplayError "datum Uitstelbrief verstuurd"
End Sub

Private Sub WFMDRAPPEL_AfterUpdate()
    On Error GoTo ERR_RAPPEL
    DateCheck WFMDRAPPEL
    Exit Sub

ERR_RAPPEL:
    DisplayError "Rappeldatum (Parkeren)"
End Sub

Private Sub subCheck_WFMNabellen()
    If WFMrJN_KLACHT_GEREED_ja.Value Then
        lblNabellen.Top = lblDirAkkoord.Top
        lblNabellen.Left = lblDirAkkoord.Left
        lblNabellen.Visible = True
        WFMrJN_NABELLEN_ja.Top = WFMrJN_DIRBRIEF_VERZ_ja.Top
        WFMrJN_NABELLEN_ja.Left = WFMrJN_DIRBRIEF_VERZ_ja.Left
        WFMrJN_NABELLEN_ja.Value = False
        WFMrJN_NABELLEN_ja.Visible = True
        WFMrJN_NABELLENnee.Top = WFMrJN_DIRBRIEF_VERZnee.Top
        WFMrJN_NABELLENnee.Left = WFMrJN_DIRBRIEF_VERZnee.Left
        WFMrJN_NABELLENnee.Value = False
        WFMrJN_NABELLENnee.Visible = True
'[PAC]        If InStr("*CA1*CA2*CA3*FND*CIC*", WFM_KLA_AFD) > 0 Then _ 'Alleen voor MKB
        WFMrJN_NABELLEN_ja.Value = True
    Else
        lblNabellen.Visible = False
        WFMrJN_NABELLEN_ja.Visible = False
        WFMrJN_NABELLENnee.Visible = False
    End If
End Sub

Private Sub WFMrJN_COM_AKKOORD_ja_Click()
    cbReactComm.Value = ""
    cbReactComm.Enabled = False
End Sub
Private Sub WFMrJN_COM_AKKOORDnee_Click()
    cbReactComm.Enabled = True
    If cbReactComm.Visible And cbReactComm.Value = "" Then cbReactComm.SetFocus
End Sub

Private Sub WFMrJN_DIRBRIEF_VERZ_ja_Click()
    lblAfgehandeldInfo.Visible = True
    
'   Q3 Release Change start
    If Trim(WFM_ONTVAGST_BEVSTDAT.Text) = "" Then
        WFM_ONTVAGST_BEVSTDAT.Text = Format(Date, "ddmmyyyy")
    End If
    If Trim(WFM_ERST_REACTDAT.Text) = "" Then
        WFM_ERST_REACTDAT.Text = Format(Date, "ddmmyyyy")
    End If
'   Q3 Release Change End
End Sub
Private Sub WFMrJN_DIRBRIEF_VERZnee_Click()
    lblAfgehandeldInfo.Visible = False
End Sub

Private Sub WFMrJN_KLAC_TOEGEW_ja_Click()
    rdBtToegewezen = "J"
End Sub

Private Sub WFMrJN_KLAC_TOEGEWnee_Click()
    rdBtToegewezen = "N"
End Sub

Private Sub WFMrJN_KLACHT_GEREED_ja_Click()
    lblAfgehandeldInfo.Visible = True
    If Left(GetWorkstep(WIViewer), 5) = "85A35" Then Call subCheck_WFMNabellen
    
'   Q3 Release Change start
'   Q3 Release 2012 Code commented because of new functionality Change start
'    If Trim(WFM_ONTVAGST_BEVSTDAT.Text) = "" Then
'        WFM_ONTVAGST_BEVSTDAT.Text = Format(Date, "dd-mm-yyyy")
'    End If
'    If Trim(WFM_ERST_REACTDAT.Text) = "" Then
'        WFM_ERST_REACTDAT.Text = Format(Date, "dd-mm-yyyy")
'    End If
'   Q3 Release Change End
End Sub
Private Sub WFMrJN_KLACHT_GEREEDnee_Click()
    lblAfgehandeldInfo.Visible = False
    If Left(GetWorkstep(WIViewer), 5) = "85A35" Then Call subCheck_WFMNabellen
End Sub

Private Sub WFMrJN_NAAR_PARKEREN_ja_Click()
    lblRedenParkeren.Visible = True
    WFM_REDEN_PARKEREN.Visible = True
    lblRappelDatum.Visible = True
    WFMDRAPPEL.Visible = True
End Sub
Private Sub WFMrJN_NAAR_PARKERENnee_Click()
    lblRedenParkeren.Visible = False
    WFM_REDEN_PARKEREN.Visible = False
    lblRappelDatum.Visible = False
    WFMDRAPPEL.Visible = False
End Sub

Private Sub WFMrJN_NAZORG_GER_ja_Click()
    lblNaarBehandelen.Visible = False
    WFMrJN_NAAR_BEHANDEL_ja.Visible = False
    WFMrJN_NAAR_BEHANDELnee.Visible = False
End Sub
Private Sub WFMrJN_NAZORG_GERnee_Click()
    lblNaarBehandelen.Visible = True
    WFMrJN_NAAR_BEHANDEL_ja.Value = False
    WFMrJN_NAAR_BEHANDEL_ja.Visible = True
    WFMrJN_NAAR_BEHANDELnee.Value = False
    WFMrJN_NAAR_BEHANDELnee.Visible = True
End Sub

Private Sub WFMrJN_OM_AKKOORD_ja_Click()
'   Code added for Dates RFC Klachten
    If Left(GetWorkstep(WIViewer), 5) = "85A20" Then
        If WFM_SOORT_KLACHT.Text = "KIFID klacht" Then
            lblNaarComm.Visible = True
            WFMrJN_NAAR_COM_ja.Visible = True
            WFMrJN_NAAR_COMnee.Visible = True
            WFMrJN_NAAR_COM_ja.Value = True
        Else
            WFMrJN_NAAR_COMnee.Value = True
        End If
    
    End If
End Sub
Private Sub WFMrJN_OM_AKKOORDnee_Click()
    If Left(GetWorkstep(WIViewer), 5) = "85A20" Then
        lblNaarComm.Visible = False
        WFMrJN_NAAR_COM_ja.Visible = False
        WFMrJN_NAAR_COMnee.Visible = False
        WFMrJN_NAAR_COMnee.Value = True
    End If
End Sub

''    Q3 Release 2012 for Change TD. 156156
Private Sub WFMrJN_ONTV_BEVEST_ja_Click()
    WFM_ONTVAGST_BEVSTDAT.Locked = False
End Sub

''    Q3 Release 2012 for Change TD. 156156
Private Sub WFMrJN_ONTV_BEVESTnee_Click()
    WFM_ONTVAGST_BEVSTDAT.Value = ""
    WFM_ONTVAGST_BEVSTDAT.Locked = True
End Sub

''    Q3 Release 2012 for Change TD. 156156
Private Sub WFMrJN_UTIL_VERST_ja_Click()
    WFM_UTIL_VERST_DAT.Locked = False
    If WFMrJN_UTIL_VERST_ja.Value And Not WFM_UTIL_VERST_DAT.Value = "" Then
        WFM_GEPLANDE_EINDDAT.Locked = False
    End If
End Sub

''    Q3 Release 2012 for Change TD. 156156
Private Sub WFMrJN_UTIL_VERSTnee_Click()
    WFM_UTIL_VERST_DAT.Value = ""
    WFM_UTIL_VERST_DAT.Locked = True
    WFM_GEPLANDE_EINDDAT.Locked = True
End Sub
Attribute VB_Name = "frm_KLAKlachtInfo"
Attribute VB_Base = "0{0AED32DC-B6C0-4D85-869C-E69775FEA8C8}{59BD3D79-0317-4806-8313-E890F8BFE995}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Public gbRetVal         As Boolean      'False=Annuleren,  True=OK
Public gsKlachtNr       As String       'KlachtNr terug van SQL Insert

Private Sub cbAfzenderType_Change()
Dim iIndBetreft         As Integer

    iIndBetreft = cbBetreft.ListIndex
    lblAfzenderNr.Caption = "Nummer"
    cbBetreft.Clear
    cbBetreft.AddItem ""
    cbBetreft.AddItem "Deelnemer"
    Select Case cbAfzenderType.Value
        Case "Deelnemer"
             txtAfzenderNr.MaxLength = 10
             cbBetreft.ListIndex = 1
             iIndBetreft = 1
        Case "Klant"
             cbBetreft.AddItem "Klant"
             txtAfzenderNr.MaxLength = 6
        Case "Tussenpersoon"
             cbBetreft.AddItem "Klant"
             cbBetreft.AddItem "Tussenpersoon"
             txtAfzenderNr.MaxLength = 6
        Case Else
             lblAfzenderNr.Caption = "AR Nummer"
             cbBetreft.AddItem "Klant"
             cbBetreft.AddItem "Tussenpersoon"
             txtAfzenderNr.MaxLength = 9
    End Select
    If iIndBetreft < cbBetreft.ListCount Then cbBetreft.ListIndex = iIndBetreft
    Call subVulBetreft
End Sub

Private Sub cbBetreft_Change()
    Select Case cbBetreft.Value
        Case "Deelnemer"
             txtBetreftNr.MaxLength = 10
        Case "Klant", "Tussenpersoon"
             txtBetreftNr.MaxLength = 6
        Case Else
             txtBetreftNr.MaxLength = 9
    End Select
    Call subVulBetreft
End Sub

Private Sub cmdAnnuleren_Click()
    gbRetVal = False
    gsKlachtNr = ""
    Me.Hide
End Sub

Private Sub cmdOpslaan_Click()
Dim sKlachtDatum        As String
Dim sSQLString          As String

    If Not fncCheckFields Then Exit Sub
    On Error GoTo ERR_DATUMKLACHT
    DateCheck txtDatumKlacht
    sKlachtDatum = Right(txtDatumKlacht.Text, 4) & _
                   Mid(txtDatumKlacht.Text, 4, 2) & _
                   Left(txtDatumKlacht.Text, 2)
    If gsKlachtNr = "" Then                 'Nieuwe Klacht toevoegen
        sSQLString = "INSERT INTO dbo.tblKlachten "
        sSQLString = sSQLString & "(KLA_Datum, KLA_AfzenderType, KLA_AfzenderNr,"
        sSQLString = sSQLString & " KLA_CorrNaam, KLA_CorrAdres, KLA_CorrPoWoon,"
        sSQLString = sSQLString & " KLA_Betreft, KLA_BetreftNr)"
        sSQLString = sSQLString & " Values ("
        sSQLString = sSQLString & "'" & sKlachtDatum & "', "
        sSQLString = sSQLString & "'" & cbAfzenderType.Text & "', "
        sSQLString = sSQLString & "'" & txtAfzenderNr.Text & "', "
        sSQLString = sSQLString & "'" & txtCorrNaam.Text & "', "
        sSQLString = sSQLString & "'" & txtCorrAdres.Text & "', "
        sSQLString = sSQLString & "'" & txtCorrPoWoon.Text & "', "
        sSQLString = sSQLString & "'" & cbBetreft.Text & "', "
        sSQLString = sSQLString & "'" & txtBetreftNr.Text & "'"
        sSQLString = sSQLString & ")"
        gbRetVal = SQLInsertKlacht(sSQLString, gsKlachtNr)
    Else                                    'Bestaande Klacht bijwerken
        sSQLString = "UPDATE dbo.tblKlachten "
        sSQLString = sSQLString & "SET KLA_Datum = '" & sKlachtDatum & "', "
        sSQLString = sSQLString & "KLA_AfzenderType = '" & cbAfzenderType.Text & "', "
        sSQLString = sSQLString & "KLA_AfzenderNr = '" & txtAfzenderNr.Text & "', "
        sSQLString = sSQLString & "KLA_CorrNaam = '" & txtCorrNaam.Text & "', "
        sSQLString = sSQLString & "KLA_CorrAdres = '" & txtCorrAdres.Text & "', "
        sSQLString = sSQLString & "KLA_CorrPoWoon = '" & txtCorrPoWoon.Text & "', "
        sSQLString = sSQLString & "KLA_Betreft = '" & cbBetreft.Text & "', "
        sSQLString = sSQLString & "KLA_BetreftNr = '" & txtBetreftNr.Text & "' "
        sSQLString = sSQLString & " WHERE KLA_WFMKlachtNr = '" & gsKlachtNr & "'"
        gbRetVal = SQLUpdateKlacht(sSQLString)
    End If
    If Not gbRetVal Then gsKlachtNr = ""     'SQL-opdracht mislukt
    Me.Hide
    Exit Sub

ERR_DATUMKLACHT:
    DisplayError "Datum Klacht"
End Sub

'Private Sub cmdTerminal_Click()
'    On Error GoTo ERROR_TERMINAL
'    MousePointer = fmMousePointerHourGlass
'    DoEvents
'    Call AlgScreenScraping(Me, Me.WorkitemViewer)
'    MousePointer = fmMousePointerDefault
'    Exit Sub
'
'ERROR_TERMINAL:
'    MousePointer = fmMousePointerDefault
'    DisplayError "Open eerst het juiste CAESAR scherm (U1 OHUP of U3 INWG)."
'End Sub

Private Sub txtAfzenderNr_Afterupdate()
    Call subVulBetreft
End Sub

Private Sub txtCorrAdres_Change()
    txtCorrAdres.Text = fncReplaceQuote(txtCorrAdres.Text)
    DoEvents
End Sub

Private Sub txtCorrNaam_Change()
    txtCorrNaam.Text = fncReplaceQuote(txtCorrNaam.Text)
    DoEvents
End Sub

Private Sub txtCorrPoWoon_Change()
    txtCorrPoWoon.Text = fncReplaceQuote(txtCorrPoWoon.Text)
    DoEvents
End Sub

Private Sub txtDatumKlacht_Afterupdate()
    On Error GoTo ERR_DATUMKLACHT
    DateCheck txtDatumKlacht
    Exit Sub

ERR_DATUMKLACHT:
    DisplayError "Datum Klacht"
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean
Dim strAfdeling         As String

    txtDatumKlacht.Text = Format(datum_Doc, "dd/mm/yyyy")

    fillCmbAFZENDER_KLACHT cbAfzenderType
    If gsKlachtNr <> "" Then Call subGetKlacht(gsKlachtNr)
End Sub

Private Function fncCheckFields() As Boolean
    fncCheckFields = False
    If txtDatumKlacht.Text = "" Or _
       cbAfzenderType.ListIndex < 1 Or _
       txtAfzenderNr.Text = "" Or _
       txtCorrNaam.Text = "" Or _
       txtCorrAdres.Text = "" Or _
       txtCorrPoWoon.Text = "" Or _
       cbBetreft.ListIndex < 1 Or _
       txtBetreftNr.Text = "" Then
        MsgBox "E|fffd|n van de velden is niet ingevuld." & vbCrLf & "(Alle velden zijn verplicht in te vullen)."
        txtDatumKlacht.SetFocus
        Exit Function
    End If
    txtAfzenderNr.Text = Trim(txtAfzenderNr.Text)
    If Not Len(txtAfzenderNr.Text) = txtAfzenderNr.MaxLength Then
        MsgBox "Lengte van Nummer Afzender niet gelijk aan " & txtAfzenderNr.MaxLength & " postities."
        txtAfzenderNr.SetFocus
        Exit Function
    End If
    txtBetreftNr.Text = Trim(txtBetreftNr.Text)
    If Not Len(txtBetreftNr.Text) = txtBetreftNr.MaxLength Then
        MsgBox "Lengte van Nummer Betreft niet gelijk aan " & txtBetreftNr.MaxLength & " postities."
        txtBetreftNr.SetFocus
        Exit Function
    End If
    fncCheckFields = True
End Function

Private Function fncReplaceQuote(vString As String) As String
    fncReplaceQuote = Replace(vString, "'", "?")
End Function

Private Sub subGetKlacht(vKlachtNr As String)
Dim oRecSet             As adodb.Recordset
Dim sHlpDatum           As String

    Set oRecSet = SQLGetKlacht("K", vKlachtNr)
    If Not oRecSet.EOF Then
        sHlpDatum = Trim(oRecSet("KLA_Datum"))
        sHlpDatum = Right(sHlpDatum, 2) & "-" & Mid(sHlpDatum, 5, 2) & "-" & Left(sHlpDatum, 4)
        txtDatumKlacht.Text = sHlpDatum
        cbAfzenderType.Value = Trim(oRecSet("KLA_AfzenderType"))
        txtAfzenderNr.Text = Trim(oRecSet("KLA_AfzenderNr"))
        txtCorrNaam.Text = Trim(oRecSet("KLA_CorrNaam"))
        txtCorrAdres.Text = Trim(oRecSet("KLA_CorrAdres"))
        txtCorrPoWoon.Text = Trim(oRecSet("KLA_CorrPoWoon"))
        cbBetreft.Value = Trim(oRecSet("KLA_Betreft"))
        txtBetreftNr.Text = Trim(oRecSet("KLA_BetreftNr"))
    End If
End Sub

Private Sub subVulBetreft()
    If cbAfzenderType.Text = cbBetreft.Text And _
       cbAfzenderType.Text <> "" And _
       txtBetreftNr.Text = "" Then txtBetreftNr.Text = txtAfzenderNr.Text
End Sub
Attribute VB_Name = "frm_KLANabelscript"
Attribute VB_Base = "0{13488B1F-4448-4CCA-ABF5-85BAB4A938AA}{6D977B66-8BE4-4573-A5AE-C2D0A7855BA8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Public gsKlachtNr       As String       'Klachtnr. in behandeling
Public gbEnabled        As Boolean      'True indien velden wijzigbaar, False alleen tonen
Private gbExistsRap     As Boolean      'True indien Nabelscript bestaat, anders False

Private Sub cmdAnnuleren_Click()
    Unload Me
End Sub

Private Sub cmdOpslaan_Click()
Dim sHlpDatum           As String
Dim sSQLString          As String

    If Not fncCheckFields Then Exit Sub
    On Error GoTo ERROR_OPSLAAN
    DateCheck txtDatum
    sHlpDatum = Right(txtDatum.Text, 4) & _
                Mid(txtDatum.Text, 4, 2) & _
                Left(txtDatum.Text, 2)
    If Not gbExistsRap Then         'Nieuw record toevoegen aan tblKlachtenRapport
        sSQLString = "INSERT INTO dbo.tblKlachtenRapport "
        sSQLString = sSQLString & "(KLR_WFMKlachtNR, KLR_GesprekDoor, KLR_GesprokenMet, KLR_Datum,"
        sSQLString = sSQLString & " KLR_Inh_Tevreden, KLR_Inh_Reden, KLR_Inh_Suggestie, KLR_Inh_Verwachting,"
        sSQLString = sSQLString & " KLR_Com_Tevreden, KLR_Com_Reden, KLR_Alg_Tevreden)"
        sSQLString = sSQLString & " Values ("
        sSQLString = sSQLString & "'" & gsKlachtNr & "', "
        sSQLString = sSQLString & "'" & cbGesprekDoor.Text & "', "
        sSQLString = sSQLString & "'" & txtGesprokenMet.Text & "', "
        sSQLString = sSQLString & "'" & sHlpDatum & "', "
        sSQLString = sSQLString & "'" & IIf(optInhTevredenJa.Value, "J", "N") & "', "
        sSQLString = sSQLString & "'" & txtInhReden.Text & "', "
        sSQLString = sSQLString & "'" & txtInhSuggestie.Text & "', "
        sSQLString = sSQLString & "'" & txtInhVerwachting.Text & "', "
        sSQLString = sSQLString & "'" & IIf(optComTevredenJa.Value, "J", "N") & "', "
        sSQLString = sSQLString & "'" & txtComReden.Text & "', "
        sSQLString = sSQLString & "'" & IIf(optAlgTevredenJa.Value, "J", "N") & "'"
        sSQLString = sSQLString & ")"
        Call SQLProcessKlachtRapport(sSQLString)
    Else                            'Bestaand record bijwerken in tblKlachtenRapport
        sSQLString = "UPDATE dbo.tblKlachtenRapport "
        sSQLString = sSQLString & "SET KLR_GesprekDoor = '" & cbGesprekDoor.Text & "', "
        sSQLString = sSQLString & "KLR_GesprokenMet = '" & txtGesprokenMet.Text & "', "
        sSQLString = sSQLString & "KLR_Datum = '" & sHlpDatum & "', "
        sSQLString = sSQLString & "KLR_Inh_Tevreden = '" & IIf(optInhTevredenJa.Value, "J", "N") & "', "
        sSQLString = sSQLString & "KLR_Inh_Reden = '" & txtInhReden.Text & "', "
        sSQLString = sSQLString & "KLR_Inh_Suggestie = '" & txtInhSuggestie.Text & "', "
        sSQLString = sSQLString & "KLR_Inh_Verwachting = '" & txtInhVerwachting.Text & "', "
        sSQLString = sSQLString & "KLR_Com_Tevreden = '" & IIf(optComTevredenJa.Value, "J", "N") & "', "
        sSQLString = sSQLString & "KLR_Com_Reden = '" & txtComReden.Text & "', "
        sSQLString = sSQLString & "KLR_Alg_Tevreden = '" & IIf(optAlgTevredenJa.Value, "J", "N") & "' "
        sSQLString = sSQLString & " WHERE KLR_WFMKlachtNr = '" & gsKlachtNr & "'"
        Call SQLProcessKlachtRapport(sSQLString)
    End If
    gbExistsRap = True
    Unload Me
    Exit Sub

ERROR_OPSLAAN:
    DisplayError "Doorsturen " & Err.Number & "---" & Err.Description
End Sub

Private Sub txtComReden_Change()
    txtComReden.Text = fncReplaceQuote(txtComReden.Text)
    DoEvents
End Sub

Private Sub txtDatum_Afterupdate()
    On Error GoTo ERR_DATUM
    DateCheck txtDatum
    Exit Sub

ERR_DATUM:
    DisplayError "Datum Klacht"
End Sub

Private Sub txtGesprokenMet_Change()
    txtGesprokenMet.Text = fncReplaceQuote(txtGesprokenMet.Text)
    DoEvents
End Sub

Private Sub txtInhReden_Change()
    txtInhReden.Text = fncReplaceQuote(txtInhReden.Text)
    DoEvents
End Sub

Private Sub txtInhSuggestie_Change()
    txtInhSuggestie.Text = fncReplaceQuote(txtInhSuggestie.Text)
    DoEvents
End Sub

Private Sub txtInhVerwachting_Change()
    txtInhVerwachting.Text = fncReplaceQuote(txtInhVerwachting.Text)
    DoEvents
End Sub

Private Sub UserForm_Activate()
'[PAC] Static init             As Boolean

'[PAC]    If init Then Exit Sub
    cbGesprekDoor.AddItem "Account Manager"
    cbGesprekDoor.AddItem "Klachtenco|fffd|rdinator"
    cbGesprekDoor.AddItem "MT Lid"
    cbGesprekDoor.AddItem "Operationeel Manager"
    cbGesprekDoor.AddItem "Relatiebeheerder"
    cbGesprekDoor.AddItem "Overig"
    Call subGetKlachtRapport(gsKlachtNr)
    If Not gbEnabled Then
        cbGesprekDoor.Enabled = False
        txtGesprokenMet.Enabled = False
        txtDatum.Enabled = False
        optInhTevredenJa.Enabled = False
        optInhTevredenNee.Enabled = False
        txtInhReden.Enabled = False
        txtInhSuggestie.Enabled = False
        txtInhVerwachting.Enabled = False
        optComTevredenJa.Enabled = False
        optComTevredenNee.Enabled = False
        txtComReden.Enabled = False
        optAlgTevredenJa.Enabled = False
        optAlgTevredenNee.Enabled = False
        cmdOpslaan.Visible = False
        cmdAnnuleren.Caption = "Sluiten"
        cmdAnnuleren.Accelerator = "S"
    End If
'[PAC]    init = True
End Sub

Private Function fncCheckFields() As Boolean
    fncCheckFields = False
    If cbGesprekDoor.Text = "" Then
        MsgBox "Gesprek gevoerd door niet ingevuld."
        cbGesprekDoor.SetFocus
        Exit Function
    End If
    If txtGesprokenMet.Text = "" Then
        MsgBox "Gesproken met niet ingevuld."
        txtGesprokenMet.SetFocus
        Exit Function
    End If
    If txtDatum.Text = "" Then
        MsgBox "Datum Nabelscript niet ingevuld."
        txtDatum.SetFocus
        Exit Function
    End If
    If Not optInhTevredenJa.Value And Not optInhTevredenNee.Value Then
        MsgBox "Inhoudelijk tevreden niet aangegeven."
        optInhTevredenNee.SetFocus
        Exit Function
    End If
    If Not optComTevredenJa.Value And Not optComTevredenNee.Value Then
        MsgBox "Communicatie tevreden niet aangegeven."
        optComTevredenNee.SetFocus
        Exit Function
    End If
    If Not optAlgTevredenJa.Value And Not optAlgTevredenNee.Value Then
        MsgBox "Algeheel tevreden niet aangegeven."
        optAlgTevredenNee.SetFocus
        Exit Function
    End If
    fncCheckFields = True
End Function

Private Function fncReplaceQuote(vString As String) As String
    fncReplaceQuote = Replace(vString, "'", "?")
End Function

Private Sub subGetKlachtRapport(vKlachtNr As String)
Dim oRecSet             As adodb.Recordset
Dim sHlpDatum           As String
Dim sHlpTevreden        As String

    gbExistsRap = False
    sHlpDatum = ""
    Set oRecSet = SQLGetKlachtRapport(vKlachtNr)
    If Not oRecSet.EOF Then
        gbExistsRap = True
        cbGesprekDoor.Text = Trim(oRecSet("KLR_GesprekDoor"))
        txtGesprokenMet.Text = Trim(oRecSet("KLR_GesprokenMet"))
        If Trim(oRecSet("KLR_Datum")) <> vbNull Then
            sHlpDatum = Trim(oRecSet("KLR_Datum"))
            sHlpDatum = Right(sHlpDatum, 2) & "-" & Mid(sHlpDatum, 5, 2) & "-" & Left(sHlpDatum, 4)
        End If
        txtDatum.Text = sHlpDatum
        sHlpTevreden = Trim(oRecSet("KLR_Inh_Tevreden"))
        Call subOptButton(sHlpTevreden, optInhTevredenJa, optInhTevredenNee)
        txtInhReden.Text = Trim(oRecSet("KLR_Inh_Reden"))
        txtInhSuggestie.Text = Trim(oRecSet("KLR_Inh_Suggestie"))
        txtInhVerwachting.Text = Trim(oRecSet("KLR_Inh_Verwachting"))
        sHlpTevreden = Trim(oRecSet("KLR_Com_Tevreden"))
        Call subOptButton(sHlpTevreden, optComTevredenJa, optComTevredenNee)
        txtComReden.Text = Trim(oRecSet("KLR_Com_Reden"))
        sHlpTevreden = Trim(oRecSet("KLR_Alg_Tevreden"))
        Call subOptButton(sHlpTevreden, optAlgTevredenJa, optAlgTevredenNee)
    End If
End Sub

Private Sub subOptButton(vTevreden As String, voptTevredenJa As OptionButton, voptTevredenNee As OptionButton)
    If vTevreden = "J" Then voptTevredenJa.Value = True
    If vTevreden = "N" Then voptTevredenNee.Value = True
End Sub
Attribute VB_Name = "frm_KLAParkeren"
Attribute VB_Base = "0{C857CF3B-E5D5-47E4-A7DF-662D87E8EB58}{F568C8DE-8314-4CB2-AF91-0E61BF912BEC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String

Private Sub WFMDRAPPEL_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck WFMDRAPPEL
    WFMDRAPPEL.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Rappel datum"
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo EH
    Call WFMBackButton(WIViewer)
    Application.Desktop.WindowState = DesktopWindowState
    Exit Sub

EH:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
Dim myQueue             As New CALQueue

    On Error GoTo EH
    DateCheck WFMDRAPPEL
    If rb_antwoord_info_JA = True Then
'       Dit in een aparte procedure met naam meegeven
        Call VerplaatsenVanuitParkeerstap(WIViewer, WFM_WORKSTEP_NAAM.Value)
        Exit Sub
    End If
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Application.Desktop.WindowState = DesktopWindowState
    Exit Sub

EH:
    DisplayError "Doorsturen"
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean
Dim strWorkstep         As String
Dim strTipText          As String

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True

'   Parkeerformulier wordt in verschillende stappen gebruikt.
'   In iedere stap geldt een andere helptekst.
    strWorkstep = GetWorkstep(WIViewer)
    Select Case Left(strWorkstep, 5)
        Case "85A15"
             Me.HelpContextID = 12030
             strTipText = "Terug naar Behandelen"
        Case "85A45"
             Me.HelpContextID = 12030
             strTipText = "Terug naar Akkoord Dir"
    End Select
    lblTerug.ControlTipText = strTipText
    WFMrJN_NAAR_PARKEREN_ja.ControlTipText = strTipText
    WFMrJN_NAAR_PARKERENnee.ControlTipText = strTipText
    Exit Sub

EH:
    DisplayError "UserForm_Activate"
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
    Exit Sub

EH:
    DisplayError "UserForm_DblClick"
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Attribute VB_Name = "frm_OVLBeoordelen"
Attribute VB_Base = "0{13357905-3290-4ED9-A82A-526EF8135F3F}{C1E95ED1-9812-458C-9549-574334B2A2A7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer        As WFDWorkitem.WorkitemViewer
Dim myESWMObjID     As String
Dim sExPartnerOnb   As String

Private Sub UserForm_Activate()
Static bPassed      As Boolean
Dim oTabs           As WFDWorkitem.Tabs
Dim otab            As WFDWorkitem.Tab

    If bPassed Then
        If InfoVerstuurd Then
            WFMrJN_NAAR_PARKEREN_ja.Value = True
            WFM_REDEN_PARKEREN = "INFO verzoek"
            WFMDRAPPEL = Right(InfoRappeldat, 2) & Mid(InfoRappeldat, 5, 4) & Left(InfoRappeldat, 4)
            cmdTerug.Enabled = False
            MsgBox "INFO verzoek verstuurd" & vbCrLf & _
                   "Deze zaak kan niet meer geannuleerd worden."
        End If
        Exit Sub
    End If
    bPassed = True

    WIViewer.WindowState = wdoWindowStateMinimized
    Set oTabs = WIViewer.Tabs
    For Each otab In oTabs
        If otab.TabType = wdoWorkitemTabFields Then otab.Visible = False
'[PAC]        If otab.TabType = wdoWorkitemTabFields Or _
'[PAC]           otab.TabType = wdoWorkitemTabHistory Then otab.Visible = False
    Next
    WIViewer.Tabs.Refresh
    Set otab = Nothing
    Set oTabs = Nothing
    Call subVulTabellen

    GetCALXFormFields
    fraDeelnemer.Caption = "Deelnemer:  " & WFM_NR_POLIS & "   -   AegarNr:  " & WFM_NR_AEGAR
    fraKlant.Caption = "Klant:  " & WFM_NR_KLANT & "   -   AegarNr:  " & WFM_NR_AEGAR_KLANT
    fraOpties.Height = 168
    fraOpties.Caption = "Opties   (STANDAARD)"
    If WFM_JN_STANDAARD_PEN <> "S" Then fraOpties.Caption = "Opties   (NIET-STANDAARD)"
    DoEvents
    
    Select Case WFM_WIE_OVERLEDEN
        Case "D", "1"
             If WFM_OVL_EXPARTNER <> "" Then        'Subfolder (Ex-partner)
                lblEindeOP.Visible = False
                WFMrJN_EINDE_OP_ja.Visible = False
                WFMrJN_EINDE_OPnee.Visible = False
                fraFEP.Visible = False
                If sExPartnerOnb = "J" Then         'Ex-partner onvindbaar
                    lblOnvindbaar.ForeColor = &HFF& 'Deze situatie komt op dit moment
                    lblOnvindbaar.Visible = True    'niet voor
                End If
             End If
        Case "P"
             If WFMrJN_EINDE_NP_ja.Value Then
                lblIngangOPO.Visible = False
                WFMrJN_INGANG_OPO_ja.Visible = False
                WFMrJN_INGANG_OPOnee.Visible = False
             End If
             fraOVP.Left = fraOVD.Left
             fraOVP.Top = fraOVD.Top
             fraOVD.Visible = False
             fraOVP.Visible = True
        Case "W"
             fraOVW.Left = fraOVD.Left
             fraOVW.Top = fraOVD.Top
             fraOVD.Visible = False
             fraOVW.Visible = True
    End Select

    txtDVB_Status.Text = WFM_DVB_STATUS & " - "
    Select Case WFM_DVB_STATUS
        Case "A"
             txtDVB_Status.Text = txtDVB_Status.Text & "Aktief"
        Case "I"
             txtDVB_Status.Text = txtDVB_Status.Text & "Invalide"
        Case "S"
             txtDVB_Status.Text = txtDVB_Status.Text & "Slaper"
        Case "T"
             txtDVB_Status.Text = txtDVB_Status.Text & "Trekker"
        Case Else
             txtDVB_Status.Text = ""
    End Select

    If Not WFMrJN_BUITENLANDER_ja.Value And Not WFMrJN_BUITENLANDERnee.Value Then
        lblBuitenlander.Visible = True
        WFMrJN_BUITENLANDER_ja.Visible = True
        WFMrJN_BUITENLANDERnee.Visible = True
    End If
    
    cmdFEP.Enabled = True
    If WFMCJN_FEP_INGELICHT Then
        cmdFEP.Enabled = False
    End If

    CheckOpUitzondering WIViewer, txtUitzonderingen
    If txtUitzonderingen.Text = "" Then fraUitzonderingen.Visible = False

    Call subToonAanhouden
    Call subToonBrief
    lblBriefAanmaken.ForeColor = &HFF&      'Zet de kleur vast voor later

    cmdTerug.Default = True
    Me.Tag = Left(WIViewer.CALClientListItem.Info.SourceWorkset, 5)
    If Me.Tag <> "98O10" Then               'Speciale akties waneer geactiveerd vanuit andere werkstappen
        fraFEP.Enabled = False
        fraOpties.Enabled = False
        fraParkeren.Enabled = False
        If Me.Tag = "98O14" Then            'Fiatteren
            fraOpties.Height = 150
            fraFiatteren.Visible = True
        Else                                'Geactiveerd vanuit Find of andere werkstappen
            WFM_ZAAK_VLGNR_MEMO.Enabled = False
            cmdOpslaan.Visible = False
            cmdTerug.Visible = False
            cmdSluiten.Visible = True
            cmdSluiten.Default = True
            If Me.Tag = "" Then frmQuery.Hide
            Application.Desktop.WindowState = wdoWindowStateMinimized
        End If
    End If
    
''  Q3 Release
    If WFMrJN_BRUTUS_AANH_ja Then
        cmdFEP.Enabled = False
    ElseIf WFMrJN_BRUTUS_AANHnee Then
        cmdFEP.Enabled = True
    End If
    
    MultiPage1.Value = 0
    MousePointer = fmMousePointerDefault
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    Call cmdTonen_Click
End Sub

Private Sub subVulTabellen()
Dim rsRecSet    As adodb.Recordset
Dim objWIH      As CALWorkitemHistory
Dim objWIHI     As CALWorkitemHistoryInfo
Dim itmx        As ListItem
Dim sObjID      As String

    sObjID = myESWMObjID
'   Tabblad 1
    lvPartners.ColumnHeaders.Clear
    lvPartners.LabelEdit = lvwManual
    lvPartners.ColumnHeaders.Add , , , 0, 0
    lvPartners.ColumnHeaders.Add , "NR_AEGAR_PARTNER", "Aegar", 50
    lvPartners.ColumnHeaders.Add , "ANUMMER_PARTNER", "A-Nummer", 54
    lvPartners.ColumnHeaders.Add , "GEB_DATUM_PARTNER", "Geb.datum", 51
    lvPartners.ColumnHeaders.Add , "SEXE_PARTNER", "Sexe", 30, lvwColumnCenter
    lvPartners.ColumnHeaders.Add , "FULLNAME_PARTNER", "Naam Partner", 150
    lvPartners.ColumnHeaders.Add , "ADRES_ONB_PARTNER", "Onb.", 27, lvwColumnCenter
    lvPartners.ColumnHeaders.Add , "INGANG_SVB", "Ingang SVB", 51
    lvPartners.ColumnHeaders.Add , "EINDE_SVB", "Einde SVB", 51
    lvPartners.ColumnHeaders.Add , "R", "R", 15
    lvPartners.ColumnHeaders.Add , "DAT_OVL_PARTNER", "Datum OVL", 51
    lvPartners.ColumnHeaders.Add , "PENSIOEN_PARTNER", "NP", 20, lvwColumnCenter
    lvPartners.ColumnHeaders.Add , "AFKOOP_PARTNER", "Afk. NP", 36, lvwColumnCenter
    lvPartners.ColumnHeaders.Add , "BSN_PARTNER", "BSN", 60
    Set rsRecSet = SQLGetOVLPartner(myESWMObjID)
    Call subCopyToList(lvPartners, rsRecSet)

    lvKinderen.ColumnHeaders.Clear
    lvKinderen.LabelEdit = lvwManual
    lvKinderen.ColumnHeaders.Add , , , 0, 0
    lvKinderen.ColumnHeaders.Add , "NR_AEGAR_KIND", "Aegar", 50
    lvKinderen.ColumnHeaders.Add , "ANUMMER_KIND", "A-Nummer", 54
    lvKinderen.ColumnHeaders.Add , "DAT_GEB_KIND", "Geb.Datum", 51
    lvKinderen.ColumnHeaders.Add , "SEXE_KIND", "Sexe", 30, lvwColumnCenter
    lvKinderen.ColumnHeaders.Add , "VOORLETTERS_KIND", "Voorl.", 40
    lvKinderen.ColumnHeaders.Add , "NAAM_KIND", "Naam", 60
    lvKinderen.ColumnHeaders.Add , "ADRES_ONB_KIND", "Onb.", 27, lvwColumnCenter
    lvKinderen.ColumnHeaders.Add , "DAT_OVL_KIND", "Datum OVL", 51
    lvKinderen.ColumnHeaders.Add , "LIMIET1", "Lim-1", 30, lvwColumnCenter
    lvKinderen.ColumnHeaders.Add , "LIMIET2", "Lim-2", 30, lvwColumnCenter
    lvKinderen.ColumnHeaders.Add , "PENSIOEN_KIND", "WZP", 27, lvwColumnCenter
    lvKinderen.ColumnHeaders.Add , "BSN_KIND", "BSN", 60
    Set rsRecSet = SQLGetOVLKind(myESWMObjID)
    Call subCopyToList(lvKinderen, rsRecSet)
    DoEvents

'   Tabblad 2
    lvVerzGegs.ColumnHeaders.Clear
    lvVerzGegs.LabelEdit = lvwManual
    lvVerzGegs.ColumnHeaders.Add , , , 0, 0
    lvVerzGegs.ColumnHeaders.Add , "PAKKETNR", "Pakket", 35
    lvVerzGegs.ColumnHeaders.Add , "PAKKETNAAM", "Omschrijving", 100
    lvVerzGegs.ColumnHeaders.Add , "VERZNR", "VzNr.", 30
    lvVerzGegs.ColumnHeaders.Add , "VORMNAAM", "Vorm Naam", 50
    lvVerzGegs.ColumnHeaders.Add , "VERZBEDRAG", "Verz. Bedrag", 60, lvwColumnRight
    lvVerzGegs.ColumnHeaders.Add , "VERVALDAG", "Verval Dag", 50
    lvVerzGegs.ColumnHeaders.Add , "TERMIJN", "Term", 27, lvwColumnCenter
    lvVerzGegs.ColumnHeaders.Add , "POST_PRAE", "P/P", 23, lvwColumnCenter
    lvVerzGegs.ColumnHeaders.Add , "UITKERING_VIA", "Uitk.Via", 37
    lvVerzGegs.ColumnHeaders.Add , "DAT_STARTUITK", "Start Uitk.", 51
    lvVerzGegs.ColumnHeaders.Add , "DAT_EINDUITK", "Eind Uitk.", 51
    Set rsRecSet = SQLGetOVLPolis(myESWMObjID)
    Call subCopyToList(lvVerzGegs, rsRecSet)

    lvPakketten.ColumnHeaders.Clear
    lvPakketten.LabelEdit = lvwManual
    lvPakketten.ColumnHeaders.Add , , , 0, 0
    lvPakketten.ColumnHeaders.Add , "NR_PAKKET", "Pakket", 35
    lvPakketten.ColumnHeaders.Add , "NAAM_PAKKET", "Omschrijving", 100
    lvPakketten.ColumnHeaders.Add , "SVB", "SVB", 25
    lvPakketten.ColumnHeaders.Add , "PENS_DAT", "Pens.Datum", 53
    Set rsRecSet = SQLGetOVLPakket(myESWMObjID)
    Call subCopyToList(lvPakketten, rsRecSet)

    lvBrutus.ColumnHeaders.Clear
    lvBrutus.LabelEdit = lvwManual
    lvBrutus.ColumnHeaders.Add , , , 0, 0
    lvBrutus.ColumnHeaders.Add , "TERMIJN", "Termijn", 35
    lvBrutus.ColumnHeaders.Add , "BETAALWIJZE", "Bet.Wijze", 45
    Set rsRecSet = SQLGetOVLbrutus(myESWMObjID)
    Call subCopyToList(lvBrutus, rsRecSet)
    DoEvents

'   Tabblad 3
    lvBeslissingen.ColumnHeaders.Clear
    lvBeslissingen.LabelEdit = lvwManual
    lvBeslissingen.ColumnHeaders.Add , , , 0, 0
    lvBeslissingen.ColumnHeaders.Add , "REGELNR", "Nr.", 30
    lvBeslissingen.ColumnHeaders.Add , "REGELNAAM", "Omschrijving", 200
    lvBeslissingen.ColumnHeaders.Add , "BESLISSING", "Res.", 30, lvwColumnCenter
    Set rsRecSet = SQLGetOVLBeslissing(myESWMObjID)
    Call subCopyToList(lvBeslissingen, rsRecSet)

'   Tabblad 4
    Set objWIH = WorkitemViewer.CALClientListItem.OpenedItem.History
    lvHistory.ColumnHeaders.Clear
    lvHistory.LabelEdit = lvwManual
    lvHistory.ListItems.Clear
    lvHistory.ColumnHeaders.Add , , "Date", 100, 0
    lvHistory.ColumnHeaders.Add , , "Operator", 60, 0
    lvHistory.ColumnHeaders.Add , , "Source", 150, 0
    lvHistory.ColumnHeaders.Add , , "Destination", 150, 0
    lvHistory.ColumnHeaders.Add , , "Error", 27, lvwColumnCenter
    For Each objWIHI In objWIH
        Set itmx = lvHistory.ListItems.Add(, , objWIHI.TimeStamp)
        itmx.SubItems(1) = objWIHI.Resource
        itmx.SubItems(2) = objWIHI.SourceWorkstep
        itmx.SubItems(3) = objWIHI.DestinationWorkstep
        itmx.SubItems(4) = objWIHI.Error
    Next
    DoEvents

    cboDeelnemers.ListIndex = -1
    Set rsRecSet = SQLGetOVLDlnmrRef(myESWMObjID)
    Do While Not rsRecSet.EOF
        cboDeelnemers.AddItem rsRecSet(2)   'Veld DLNMRREF
        rsRecSet.MoveNext
    Loop
    If cboDeelnemers.ListCount Then cboDeelnemers.ListIndex = 0
End Sub

Private Sub subCopyToList(ByRef vList As ListView, ByVal vRecSet As adodb.Recordset, _
                                    Optional vClrList As Boolean = True)
Dim itmx        As ListItem
Dim iCol        As Integer
Dim sTemp       As String
Dim sField      As String

    On Error GoTo ERR_COPYLIST
    If vClrList Then vList.ListItems.Clear
    Do While Not vRecSet.EOF()
        Set itmx = vList.ListItems.Add()
        For iCol = 1 To vList.ColumnHeaders.Count
            sField = vList.ColumnHeaders.item(iCol).Key
            If sField <> "" Then
                If sField = "FULLNAME_PARTNER" Then
                    sTemp = Trim(vRecSet("VOORLETTERS_PARTNER")) + " "
                    sTemp = Trim(sTemp & Trim(vRecSet("VOORVOEGSELS_PARTNER"))) + " "
                    sTemp = Trim(sTemp & Trim(vRecSet("NAAM_PARTNER")))
                Else
                    sTemp = vRecSet(sField)
                    If sField = "VERZBEDRAG" Then
                        sTemp = Trim(sTemp)
                    ElseIf sField = "GEB_DATUM_PARTNER" Or _
                           sField = "INGANG_SVB" Or _
                           sField = "EINDE_SVB" Or _
                           sField = "DAT_OVL_PARTNER" Or _
                           sField = "DAT_GEB_KIND" Or _
                           sField = "DAT_OVL_KIND" Or _
                           sField = "PENS_DAT" Or _
                           sField = "DAT_STARTUITK" Or _
                           sField = "DAT_EINDUITK" Then
                            sTemp = Right(sTemp, 2) & "-" & Mid(sTemp, 5, 2) & "-" & Left(sTemp, 4)
                            If sTemp = "00-00-0000" Then sTemp = ""
                    End If
                End If
                itmx.SubItems(iCol - 1) = sTemp
            End If
        Next iCol
        vRecSet.MoveNext
    Loop
    Exit Sub

ERR_COPYLIST:
    Call DisplayError(Me.name & ".DumpRecordSetInListView")
End Sub

Private Sub WFMrJN_BRUTUS_AANH_ja_Click()
    cmdFEP.Enabled = False
End Sub

Private Sub WFMrJN_BRUTUS_AANHnee_Click()
    cmdFEP.Enabled = True
End Sub

Private Sub WFMrJN_BUITENLANDER_ja_Change()
    If WFMrJN_BUITENLANDER_ja.Value = True Then
        cmdFEP.Enabled = True
    Else
        cmdFEP.Enabled = False
    End If
End Sub
Private Sub WFMrJN_BUITENLANDERnee_Change()
    If WFMrJN_BUITENLANDER_ja.Value = True Then
        cmdFEP.Enabled = True
    Else
        cmdFEP.Enabled = False
    End If
End Sub

Private Sub WFMrJN_EINDE_OP_ja_Click()
    Call subToonAanhouden
    Call subToonBrief
End Sub
Private Sub WFMrJN_EINDE_OPnee_Click()
    Call subToonAanhouden
    Call subToonBrief
End Sub

Private Sub WFMrJN_OVL_NPINGANG_ja_Click()
    Call subToonBrief
End Sub
Private Sub WFMrJN_OVL_NPINGANGnee_Click()
    Call subToonBrief
End Sub

Private Sub WFMrJN_OVL_WZPINGANG_ja_Click()
    Call subToonBrief
End Sub
Private Sub WFMrJN_OVL_WZPINGANGnee_Click()
    Call subToonBrief
End Sub

Private Sub WFMrJN_EINDE_NP_ja_Click()
    Call subToonAanhouden
    Call subToonOPO
    Call subToonBrief
End Sub
Private Sub WFMrJN_EINDE_NPnee_Click()
    Call subToonAanhouden
    Call subToonOPO
    Call subToonBrief
End Sub

Private Sub WFMrJN_INGANG_OPO_ja_Click()
    Call subToonBrief
End Sub
Private Sub WFMrJN_INGANG_OPOnee_Click()
    Call subToonBrief
End Sub

Private Sub WFMrJN_EINDE_WZP_ja_Click()
    Call subToonAanhouden
    Call subToonBrief
End Sub
Private Sub WFMrJN_EINDE_WZPnee_Click()
    Call subToonAanhouden
    Call subToonBrief
End Sub

Private Sub WFMrJN_CAES_BRIEF_VERW_ja_Click()
    lblBriefAanmaken.Visible = False
End Sub
Private Sub WFMrJN_CAES_BRIEF_VERWnee_Click()
    lblBriefAanmaken.Visible = True
End Sub
Private Sub WFMrJN_CAES_BRIEF_VERWonb_Click()
    lblBriefAanmaken.Visible = False
End Sub

Private Sub WFMrJN_NAAR_PARKEREN_ja_Click()
    lblRedenParkeren.Visible = True
    WFM_REDEN_PARKEREN.Visible = True
    lblRappelDatum.Visible = True
    WFMDRAPPEL.Visible = True
    WFM_REDEN_PARKEREN.SetFocus
End Sub
Private Sub WFMrJN_NAAR_PARKERENnee_Click()
    lblRedenParkeren.Visible = False
    WFM_REDEN_PARKEREN.Visible = False
    lblRappelDatum.Visible = False
    WFMDRAPPEL.Visible = False
End Sub

Private Sub WFMDRAPPEL_AfterUpdate()
    On Error GoTo ERR_RAPPEL
    DateCheck WFMDRAPPEL
    Exit Sub

ERR_RAPPEL:
    DisplayError "Rappeldatum (Parkeren)"
End Sub

Private Sub cmdFEP_Click()
Dim oFolder     As CALFolder
Dim sMemo       As String

    sMemo = "Blokkeren uitkering i.v.m. overlijden "
    Select Case WFM_WIE_OVERLEDEN
        Case "D", "1"
             sMemo = sMemo & "deelnemer"
        Case "P"
             sMemo = sMemo & "partner van deelnemer"
        Case "W"
             sMemo = sMemo & "wees van deelnemer"
        Case Else
             Exit Sub   'In het onwaarschijnlijke geval van een verkeerde mutatiecode
    End Select
    sMemo = sMemo & " " & WFM_NR_POLIS
    Call COLLMemo2Workstep("94A47 Blokkeren", sMemo, WIViewer)
    
    Set oFolder = WIViewer.CALClientListItem.OpenedItem
    Call oFolder.Notes.Add(calNoteFirst, "Informatieverzoek dd " & Format(Now(), " yyyy-mm-dd"), sMemo)
    oFolder.Save

    cmdFEP.Enabled = False
    WFMCJN_FEP_INGELICHT = True
    cmdTerug.Enabled = False
    MsgBox "Memo aangemaakt voor FEP" & vbCrLf & _
           "Deze zaak kan niet meer geannuleerd worden."
End Sub

Private Sub cmdTonen_Click()
    WIViewer.WindowState = wdoWindowStateNormal
    WIViewer.BringToTop
End Sub

Private Sub cmdTerug_Click()
    On Error GoTo ERR_ANNULEREN
    Call WFMBackButton(WIViewer)
    Application.Desktop.WindowState = DesktopWindowState
    Exit Sub

ERR_ANNULEREN:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
'   Fiatteren
    If fraFiatteren.Visible = True Then
        If WFMrJN_VOORBER_AKKonb.Value Then
            MsgBox "Fiatteren akkoord niet aangegeven."
            WFMrJN_VOORBER_AKKonb.SetFocus
        Else
            If WFMrJN_VOORBER_AKKnee.Value Then
                Call createNote(WIViewer, "E")
            End If
            Call subDoorsturenZaak
        End If
        Exit Sub
    End If
    
'   Parkeren
    If WFMrJN_NAAR_PARKEREN_ja.Value Then
        If WFM_REDEN_PARKEREN = "" Then
            MsgBox "Geen reden parkeren opgegeven."
            WFM_REDEN_PARKEREN.SetFocus
        Else
            On Error GoTo ERR_DATUM
            If DateCheck(WFMDRAPPEL) Then
                If WFMDRAPPEL = "" Or (Format(WFMDRAPPEL, "yyyymmdd") <= Format(Date, "yyyymmdd")) Then
                    MsgBox "Rappeldatum moet in de toekomst liggen."
                    WFMDRAPPEL.SetFocus
                Else
                    Call subDoorsturenZaak
                End If
            End If
        End If
        Exit Sub
    End If

'   Beoordelen
    If lblBuitenlander.Visible = True And _
       Not WFMrJN_BUITENLANDER_ja.Value And Not WFMrJN_BUITENLANDERnee.Value Then
        MsgBox "Buitenlander niet aangegeven."
        Exit Sub
    End If
    If fraFEP.Visible And WFMrJN_BRUTUS_AANH_ja.Visible = True And _
       Not WFMrJN_BRUTUS_AANH_ja.Value And Not WFMrJN_BRUTUS_AANHnee.Value Then
        MsgBox "Aanhouden Brutus niet aangegeven."
        Exit Sub
    End If
    If WFMrJN_KAPITAALUITKonb.Value Then
        MsgBox "Kapitaaluitkering niet aangegeven."
        Exit Sub
    End If

    If fraOVD.Visible Then
        If lblEindeOP.Visible And _
           Not WFMrJN_EINDE_OP_ja.Value And Not WFMrJN_EINDE_OPnee.Value Then
            MsgBox "Einde ingegaan OP niet aangegeven."
            Exit Sub
        End If
        If WFMrJN_OVL_NPINGANGonb.Value Then
            MsgBox "Ingang NP niet aangegeven."
            Exit Sub
        End If
        If WFMrJN_OVL_WZPINGANGonb.Value Then
            MsgBox "Ingang WzP niet aangegeven."
            Exit Sub
        End If
    End If
    If fraOVP.Visible Then
        If Not WFMrJN_EINDE_NP_ja.Value And Not WFMrJN_EINDE_NPnee.Value Then
            MsgBox " Einde NP niet aangegeven."
            Exit Sub
        End If
        If lblIngangOPO.Visible And _
           Not WFMrJN_INGANG_OPO_ja.Value And Not WFMrJN_INGANG_OPOnee.Value Then
            MsgBox "Ingang OPO niet aangegeven."
            Exit Sub
        End If
    End If
    If fraOVW.Visible Then
        If Not WFMrJN_EINDE_WZP_ja.Value And Not WFMrJN_EINDE_WZPnee.Value Then
            MsgBox "Einde WzP niet aangegeven."
            Exit Sub
        End If
    End If

    If WFMrJN_FONDS_UITKonb.Value Then
        MsgBox "Fondsuitkering niet aangegeven."
        Exit Sub
    End If
    If WFMrJN_UITKVIA_GEWIJZonb.Value Then
        MsgBox "Uitkering Via gewijzigd niet aangegeven."
        Exit Sub
    End If
    If lblBriefVerwacht.Visible And _
       WFMrJN_CAES_BRIEF_VERWonb.Value Then
        MsgBox "Caesar Brief verwacht niet aangegeven."
        Exit Sub
    End If

    WFM_REDEN_PARKEREN = ""
    WFMDRAPPEL = ""
    Call subDoorsturenZaak
    Exit Sub
    
ERR_DATUM:
    DisplayError "Rappeldatum (Parkeren)"
End Sub
    
Private Sub subDoorsturenZaak()
    On Error GoTo ERR_EINDEZAAK
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Application.Desktop.WindowState = DesktopWindowState
    Exit Sub

ERR_EINDEZAAK:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdSluiten_Click()
Dim oTabs           As WFDWorkitem.Tabs
Dim otab            As WFDWorkitem.Tab

    On Error Resume Next
    WIViewer.WindowState = wdoWindowStateMinimized
    Set oTabs = WIViewer.Tabs
    For Each otab In oTabs
        otab.Visible = True
    Next
    Set otab = Nothing
    Set oTabs = Nothing
    If Me.Tag = "" Then
        WIViewer.Tabs.Refresh
        frmQuery.Show 0
    End If
    Unload Me
End Sub

Sub GetCALXFormFields()
    sExPartnerOnb = WIViewer.Fields.Find("JN_EX_ONVINDBAAR").CALFormField.Value
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo ERR_SETCALX
    SetCALXFormFields = False

    WIViewer.Fields.Find("JN_INGANG_NP").CALFormField.Value = "J"
    If WFMrJN_OVL_NPINGANGnee.Value And WFMrJN_OVL_WZPINGANGnee.Value Then _
        WIViewer.Fields.Find("JN_INGANG_NP").CALFormField.Value = "N"

    SetCALXFormFields = True
    Exit Function

ERR_SETCALX:
    DisplayError "SetCALXFormFields"
End Function

Private Sub subToonAanhouden()
    If WFM_JN_STANDAARD_PEN = "S" Then
        If WFMrJN_EINDE_OP_ja.Value = True Or _
           WFMrJN_EINDE_NP_ja.Value = True Or _
           WFMrJN_EINDE_WZP_ja.Value = True Then
            lblAanhouden.Visible = True
            WFMrJN_BRUTUS_AANH_ja.Visible = True
            WFMrJN_BRUTUS_AANHnee.Visible = True
        Else
            lblAanhouden.Visible = False
            WFMrJN_BRUTUS_AANH_ja.Visible = False
            WFMrJN_BRUTUS_AANHnee.Visible = False
        End If
    Else    'Bij N-STD altijd tonen
        lblAanhouden.Visible = True
        WFMrJN_BRUTUS_AANH_ja.Visible = True
        WFMrJN_BRUTUS_AANHnee.Visible = True
    End If
End Sub

Private Sub subToonOPO()
    If WFMrJN_EINDE_NP_ja.Value Then
        lblIngangOPO.Visible = False
        WFMrJN_INGANG_OPO_ja.Visible = False
        WFMrJN_INGANG_OPOnee.Visible = False
    Else
        lblIngangOPO.Visible = True
        WFMrJN_INGANG_OPO_ja.Visible = True
        WFMrJN_INGANG_OPOnee.Visible = True
    End If
End Sub

Private Sub subToonBrief()
Dim iTonen      As Boolean

    Select Case WFM_WIE_OVERLEDEN
        Case "D", "1"
             If WFM_OVL_EXPARTNER = "" Then
                iTonen = True
                If WFMrJN_OVL_NPINGANGnee.Value And WFMrJN_OVL_WZPINGANGnee.Value And WFMrJN_EINDE_OPnee.Value Then _
                    iTonen = False
             Else
                iTonen = True
                If WFMrJN_OVL_NPINGANGnee.Value And WFMrJN_OVL_WZPINGANGnee.Value Then _
                    iTonen = False
             End If
        Case "P"
             iTonen = True
             If WFMrJN_EINDE_NPnee.Value And WFMrJN_INGANG_OPOnee.Value Then _
                iTonen = False
        Case "W"
             iTonen = True
             If WFMrJN_EINDE_WZPnee.Value Then _
                iTonen = False
    End Select

    If iTonen Then
            lblBriefVerwacht.Visible = True
            WFMrJN_CAES_BRIEF_VERW_ja.Visible = True
            WFMrJN_CAES_BRIEF_VERWnee.Visible = True
            WFMrJN_CAES_BRIEF_VERWonb.Visible = True
            If WFMrJN_CAES_BRIEF_VERWnee.Value Then WFMrJN_CAES_BRIEF_VERWnee_Click
        Else
            lblBriefVerwacht.Visible = False
            WFMrJN_CAES_BRIEF_VERW_ja.Visible = False
            WFMrJN_CAES_BRIEF_VERWnee.Visible = False
            WFMrJN_CAES_BRIEF_VERWonb.Visible = False
            lblBriefAanmaken.Visible = False
    End If
End Sub

Private Sub lblToonOpties_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Dim sKapitaal   As String
Dim sEindeOP    As String
Dim sIngangNP   As String
Dim sIngangWZP  As String
Dim sEindeNP    As String
Dim sIngangOPO  As String
Dim sEindeWZP   As String
Dim sFonds      As String
Dim sBrief      As String

    sKapitaal = WIViewer.Fields.Find("JN_KAPITAALUITK").CALFormField.Value
    sEindeOP = WIViewer.Fields.Find("JN_EINDE_OP").CALFormField.Value
    sIngangNP = WIViewer.Fields.Find("JN_OVL_NPINGANG").CALFormField.Value
    sIngangWZP = WIViewer.Fields.Find("JN_OVL_WZPINGANG").CALFormField.Value
    sEindeNP = WIViewer.Fields.Find("JN_EINDE_NP").CALFormField.Value
    sIngangOPO = WIViewer.Fields.Find("JN_INGANG_OPO").CALFormField.Value
    sEindeWZP = WIViewer.Fields.Find("JN_EINDE_WZP").CALFormField.Value
    sFonds = WIViewer.Fields.Find("JN_FONDS_UITK").CALFormField.Value
    sBrief = WIViewer.Fields.Find("JN_CAES_BRIEF_VERW").CALFormField.Value
    MsgBox "Kapitaaluitkering" & vbTab & vbTab & ": " & sKapitaal & vbCrLf & _
           "Einde ingegaan OP" & vbTab & vbTab & ": " & sEindeOP & vbCrLf & _
           "Ingang   NP" & vbTab & vbTab & ": " & sIngangNP & vbCrLf & _
           "Ingang   WzP" & vbTab & vbTab & ": " & sIngangWZP & vbCrLf & _
           "Einde ingegaan NP" & vbTab & vbTab & ": " & sEindeNP & vbCrLf & _
           "Ingang   OPO" & vbTab & vbTab & ": " & sIngangOPO & vbCrLf & _
           "Einde ingegaan WzP" & vbTab & ": " & sEindeWZP & vbCrLf & _
           "Fondsuitkering" & vbTab & vbTab & ": " & sFonds & vbCrLf & _
           "CAESAR Brief verwacht" & vbTab & ": " & sBrief & vbCrLf, , _
           "Standaard: " & WFM_JN_STANDAARD_PEN
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Attribute VB_Name = "frm_OffOnhWerk"
Attribute VB_Base = "0{72E4484F-39D5-47DE-BB1F-F1203232D8BC}{EA54C37E-D393-46A2-BB45-FD943347FCAC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim arrWerksoorten()    As String
Dim arrWerktypen()      As String
Dim arrWKTperWKS()      As String
Dim arrAllWKTperWKS()   As String

Private Sub cmdAnnuleren_Click()
    On Error GoTo ERR_ANNULEREN
    Call WFMBackButton(WIViewer)
    Exit Sub

ERR_ANNULEREN:
    DisplayError "Annuleren"
End Sub

Private Sub cmdArchiveren_Click()
    WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = "ARC"
    Call subDoorsturen
End Sub

Private Sub cmdNaarPIN_Click()
Dim sAnswer             As String

    sAnswer = MsgBox("Weet u zeker dat dit document naar PIN moeten worden verstuurd?", vbYesNo, "Naar PIN versturen")
    If sAnswer = vbYes Then
        WFM_ZAAK_VLGNR_MEMO.Text = "DIP " & WFM_ZAAK_VLGNR_MEMO.Text
        If Len(WFM_ZAAK_VLGNR_MEMO.Text) > 50 Then WFM_ZAAK_VLGNR_MEMO.Text = Left(WFM_ZAAK_VLGNR_MEMO.Text, 50)
        WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = "98A1"   'Tbv Routering
        Call subDoorsturen
    End If
End Sub

Private Sub cmdOpslaan_Click()
    Err.Clear
    On Error GoTo ERR_OPSLAAN
    Call CheckFields
    If AFDELING.Value <> WFM_DOORZENDEN_NAAR Then WFM_DOORZENDEN_NAAR = AFDELING.Value
    WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = ""
    WIViewer.Save
    Call subDoorsturen
    Exit Sub

ERR_OPSLAAN:
    DisplayError "Opslaan"
End Sub

Private Sub cmdRetour_Click()
Dim sNotitieNaam        As String
Dim sNotitie            As String

    On Error GoTo ERR_RETOUR
    geannuleerd = True
    frmInfoNote.NoteName = "Notitie Retouren Postkamer"
    Set frmInfoNote.WorkitemViewer = WIViewer
    frmInfoNote.Show vbModal
    sNotitie = Trim(frmInfoNote.TextBox1)
    Unload frmInfoNote
    If geannuleerd Or _
       sNotitie = "" Then Exit Sub
    sNotitie = sNotitie & vbCrLf & "Van: " + CALGetUserVar("MyHupo1", CALClient.username)
    sNotitieNaam = "Retour dd " & Format(Now(), " yyyy-mm-dd")
    Call WIViewer.Notes.Add(1, sNotitieNaam, sNotitie)
    WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = "RET"
    Call subDoorsturen

ERR_RETOUR:
    DisplayError "Retour"
End Sub

Private Sub cmdTerugsturen_Click()
    Err.Clear
    On Error GoTo ERR_TERUGSTUREN
    Call CheckFields
    If AFDELING.Value <> WFM_DOORZENDEN_NAAR Then WFM_DOORZENDEN_NAAR = AFDELING.Value
    WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = "34A1"  'Tbv Routering
    WIViewer.Save
    Call subDoorsturen
    Exit Sub

ERR_TERUGSTUREN:
    DisplayError "Terugsturen"
End Sub

Private Sub cmdVerwijderen_Click()
Dim sAnswer             As String

    sAnswer = MsgBox("Weet u zeker dat dit document DEFINITIEF verwijderd moet worden?", vbYesNo, "Verwijderen")
    If sAnswer = vbYes Then
        WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = "DEL"
        Call subDoorsturen
    End If
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean
Dim sWerksoort          As String
Dim sWerktype           As String
''Q1 Release 2012 CR No. 153254 Dept Changes
    On Error Resume Next
    If Init Then Exit Sub
    Init = True
    AFDELING.AddItem            'Hardcoded
    AFDELING.AddItem "PTA"
    AFDELING.AddItem "PTB"
    AFDELING.AddItem "PTC"
    AFDELING.AddItem "PTD"
    AFDELING.AddItem "CCA"      'Hardcoded
    AFDELING.AddItem "PTE"      'Hardcoded
    AFDELING.AddItem "PTF"      'Hardcoded
    AFDELING.AddItem "PTG"      'Hardcoded
    AFDELING.AddItem "PTH"      'Hardcoded
    AFDELING.AddItem "APP"      'Hardcoded              '[PAC] 17MAR15 - PTN --> APP - TD172461
    AFDELING.AddItem "PTI"
    AFDELING.AddItem "PTL"      'Hardcoded              '[PAC] - TD17266
    AFDELING.AddItem "PTR"      'Hardcoded              '[PAC] - TD17266
    AFDELING.AddItem "TOP"      'Hardcoded  / OIC changed to TOP
    AFDELING.AddItem "PJZ"      'Hardcoded
    AFDELING.AddItem "PON"      'Hardcoded
    AFDELING.AddItem "POV"      'Hardcoded
    AFDELING.Value = WFM_DOORZENDEN_NAAR
    On Error GoTo ERR_ACTIVATE
    WFM_BEHANDELAAR.ColumnCount = 2
    WFM_BEHANDELAAR.BoundColumn = 1
    WFM_BEHANDELAAR.TextColumn = -1
    WFM_BEHANDELAAR.ColumnWidths = "50;0"
    On Error Resume Next
    WFM_BEHANDELAAR.Value = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "BEHANDELAAR")
    sWerksoort = WFM_WERKSOORT
    sWerktype = WFM_WERKTYPE
    Call subVulWerkSoort        'Hardcoded
    WFM_WERKSOORT.Value = sWerksoort
    WFM_WERKTYPE.Value = sWerktype
    On Error GoTo ERR_ACTIVATE
    cmdAnnuleren.SetFocus
    MultiPage1.Value = 0
    DoEvents
    Exit Sub

ERR_ACTIVATE:
    DisplayError "Userform activate"
End Sub

Private Sub subDoorsturen()
    On Error GoTo ERR_DOORSTUREN
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Application.Desktop.WindowState = DesktopWindowState
    Exit Sub

ERR_DOORSTUREN:
    DisplayError "Doorsturen"
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo ERR_SETCALX
    SetCALXFormFields = False

    SetCALXFormFields = True
    Exit Function

ERR_SETCALX:
    DisplayError "SetCALXFormFields"
End Function

Private Sub AFDELING_Change()
Dim sAfdeling           As String
Dim sAfdeling_User      As String
Dim vBehandelaar        As Variant

    sAfdeling = AFDELING.SelText
    sAfdeling_User = CALGetUserVar("Afdeling", CALClient.username)
    If sAfdeling = sAfdeling_User Then
        WFM_BEHANDELAAR.Clear
        For Each vBehandelaar In GetUsersPerAfdeling(sAfdeling)
            WFM_BEHANDELAAR.AddItem vBehandelaar
        Next
        lblBehandelaar.Enabled = True
        WFM_BEHANDELAAR.Enabled = True
        lblWerkSoort.Enabled = True
        WFM_WERKSOORT.Enabled = True
        lblWerkType.Enabled = True
        WFM_WERKTYPE.Enabled = True
    Else
        WFM_BEHANDELAAR.Value = ""
        lblBehandelaar.Enabled = False
        WFM_BEHANDELAAR.Enabled = False
        lblWerkSoort.Enabled = False
        WFM_WERKSOORT.Value = ""
        WFM_WERKSOORT.Enabled = False
        lblWerkType.Enabled = False
        WFM_WERKTYPE.Value = ""
        WFM_WERKTYPE.Enabled = False
    End If
End Sub

Private Sub WFM_WERKSOORT_Change()
    On Error GoTo EH
    Call subVulWerkType
    Exit Sub

EH:
    DisplayError "Werksoort"
End Sub

Private Sub CheckFields()
    CheckHupo WFM_BEHANDELAAR
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub subVulWerkSoort()
    WFM_WERKSOORT.ColumnCount = 2
    WFM_WERKSOORT.TextColumn = -1
    WFM_WERKSOORT.ColumnWidths = "30;35"
    WFM_WERKSOORT.Clear
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(0) = ""
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(1, 0) = "AANM"
    WFM_WERKSOORT.list(1, 1) = "Aanmeldingsformulier"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(2, 0) = "ADD"
    WFM_WERKSOORT.list(2, 1) = "Addendum + aanvullingen"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(3, 0) = "AFST"
    WFM_WERKSOORT.list(3, 1) = "Afstandsverklaring"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(4, 0) = "AKT"
    WFM_WERKSOORT.list(4, 1) = "Akten van overdracht"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(5, 0) = "BELF"
    WFM_WERKSOORT.list(5, 1) = "Beleggingsformulier"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(6, 0) = "CLAU"
    WFM_WERKSOORT.list(6, 1) = "Clausules"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(7, 0) = "OPR"
    WFM_WERKSOORT.list(7, 1) = "Oprichtingsstukken"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(8, 0) = "OVER"
    WFM_WERKSOORT.list(8, 1) = "Overig"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(9, 0) = "POVK"
    WFM_WERKSOORT.list(9, 1) = "Pensioenovereenkomst"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(10, 0) = "UITK"
    WFM_WERKSOORT.list(10, 1) = "Uitkeringsformulier"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(11, 0) = "UOVK"
    WFM_WERKSOORT.list(11, 1) = "Uitvoeringsovereenkomst"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(12, 0) = "VERB"
    WFM_WERKSOORT.list(12, 1) = "Verzekeringsbewijs"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(13, 0) = "VOOR"
    WFM_WERKSOORT.list(13, 1) = "Voorwerk"
End Sub

Private Sub subVulWerkType()
    WFM_WERKTYPE.ColumnCount = 2
    WFM_WERKTYPE.BoundColumn = 1
    WFM_WERKTYPE.TextColumn = -1
    WFM_WERKTYPE.ColumnWidths = "30;75"
    WFM_WERKTYPE.Clear
    WFM_WERKTYPE.AddItem
    WFM_WERKTYPE.list(0) = ""
    Select Case WFM_WERKSOORT.Value
        Case "AANM"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "AANF"
             WFM_WERKTYPE.list(1, 1) = "Aanmeldingsformulier"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(2, 0) = "DLNF"
             WFM_WERKTYPE.list(2, 1) = "Deelnemersformulier"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(3, 0) = "PPVO"
             WFM_WERKTYPE.list(3, 1) = "Persoonlijk Pensioen Voorstel"
        Case "ADD"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "ADD"
             WFM_WERKTYPE.list(1, 1) = "Addendum + aanvullingen"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(2, 0) = "WIJZ"
             WFM_WERKTYPE.list(2, 1) = "Wijzigingsblad"
        Case "AFST"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "AFST"
             WFM_WERKTYPE.list(1, 1) = "Afstandsverklaring"
        Case "AKT"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "AKT"
             WFM_WERKTYPE.list(1, 1) = "Akten van overdracht"
        Case "BELF"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "BELF"
             WFM_WERKTYPE.list(1, 1) = "Beleggingsformulier"
        Case "CLAU"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "CLAU"
             WFM_WERKTYPE.list(1, 1) = "Clausules"
        Case "OPR"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "OPRS"
             WFM_WERKTYPE.list(1, 1) = "Oprichtingsstukken"
        Case "OVER"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "OVERI"
             WFM_WERKTYPE.list(1, 1) = "Overigen"
        Case "POVK"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "PENB"
             WFM_WERKTYPE.list(1, 1) = "Pensioenbrief"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(2, 0) = "POVK"
             WFM_WERKTYPE.list(2, 1) = "Pensioenovereenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(3, 0) = "PRG"
             WFM_WERKTYPE.list(3, 1) = "Pensioenreglement"
        Case "UITK"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "UITK"
             WFM_WERKTYPE.list(1, 1) = "Uitkeringsformulier"
        Case "UOVK"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "AOVK"
             WFM_WERKTYPE.list(1, 1) = "Aansluitingsovereenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(2, 0) = "APS"
             WFM_WERKTYPE.list(2, 1) = "APS overeenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(3, 0) = "BOVK"
             WFM_WERKTYPE.list(3, 1) = "Beheernet overeenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(4, 0) = "MOVK"
             WFM_WERKTYPE.list(4, 1) = "Mantelovereenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(5, 0) = "OVK"
             WFM_WERKTYPE.list(5, 1) = "Overeenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(6, 0) = "ROVK"
             WFM_WERKTYPE.list(6, 1) = "Raamovereenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(7, 0) = "UBOVK"
             WFM_WERKTYPE.list(7, 1) = "Uitbestedingsovereenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(8, 0) = "UOVK"
             WFM_WERKTYPE.list(8, 1) = "Uivoeringsovereenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(9, 0) = "VEOVK"
             WFM_WERKTYPE.list(9, 1) = "Verbindingsovereenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(10, 0) = "VOVK"
             WFM_WERKTYPE.list(10, 1) = "Verzekeringsovereenkomst"
        Case "VERB"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "VERB"
             WFM_WERKTYPE.list(1, 1) = "Verzekeringsbewijs"
        Case "VOOR"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "BNF"
             WFM_WERKTYPE.list(1, 1) = "Beheernet formulier"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(2, 0) = "CDD"
             WFM_WERKTYPE.list(2, 1) = "Customer due diligence"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(3, 0) = "KID"
             WFM_WERKTYPE.list(3, 1) = "Kopie identiteitsbewijs"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(4, 0) = "OFF"
             WFM_WERKTYPE.list(4, 1) = "Offerte"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(5, 0) = "OUPR"
             WFM_WERKTYPE.list(5, 1) = "Opdracht tot uitvoering pensioenregeling"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(6, 0) = "OVER"
             WFM_WERKTYPE.list(6, 1) = "Opdracht tot verzekeren"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(7, 0) = "UKVK"
             WFM_WERKTYPE.list(7, 1) = "Uittreksel Kamer van Koophandel"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(8, 0) = "VID"
             WFM_WERKTYPE.list(8, 1) = "Vaststelling identiteit"
    End Select
End Sub
Attribute VB_Name = "frm_OfferteBeoord"
Attribute VB_Base = "0{F7102CF1-9081-4459-938A-05CB407EAFDD}{513F05BF-9DD0-4464-B4FB-A913DDE25EB6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String
Dim arrWerksoorten()    As String
Dim arrWerktypen()      As String
Dim arrWKTperWKS()      As String
Dim arrAllWKTperWKS()   As String

Private Sub cmdAnnuleren_Click()
    On Error GoTo ERR_ANNULEREN
    Call WFMBackButton(WIViewer)
    Exit Sub

ERR_ANNULEREN:
    DisplayError "Annuleren"
End Sub

Private Sub cmdArchiveren_Click()
    WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = "ARC"
    Call subDoorsturen
End Sub

Private Sub cmdDoorsturen_Click()
    Err.Clear
    On Error GoTo ERR_DOORSTUREN
    Call CheckFields
    If AFDELING.Value <> WFM_DOORZENDEN_NAAR Then WFM_DOORZENDEN_NAAR = AFDELING.Value
    WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = "34A5"  'Tbv Routering
    WIViewer.Save
    Call subDoorsturen
    Exit Sub

ERR_DOORSTUREN:
    DisplayError "Doorsturen"
End Sub

Private Sub cmdNaarPIN_Click()
Dim sAnswer             As String

    sAnswer = MsgBox("Weet u zeker dat dit document naar PIN moeten worden verstuurd?", vbYesNo, "Naar PIN versturen")
    If sAnswer = vbYes Then
        WFM_ZAAK_VLGNR_MEMO.Text = "DIP " & WFM_ZAAK_VLGNR_MEMO.Text
        If Len(WFM_ZAAK_VLGNR_MEMO.Text) > 50 Then WFM_ZAAK_VLGNR_MEMO.Text = Left(WFM_ZAAK_VLGNR_MEMO.Text, 50)
        WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = "98A1"   'Tbv Routering
        Call subDoorsturen
    End If
End Sub

Private Sub cmdOpslaan_Click()
    Err.Clear
    On Error GoTo ERR_OPSLAAN
    Call CheckFields
    If AFDELING.Value <> WFM_DOORZENDEN_NAAR Then WFM_DOORZENDEN_NAAR = AFDELING.Value
    WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = ""
    WIViewer.Save
    Call subDoorsturen
    Exit Sub

ERR_OPSLAAN:
    DisplayError "Opslaan"
End Sub

Private Sub cmdRetour_Click()
Dim sNotitieNaam        As String
Dim sNotitie            As String

    On Error GoTo ERR_RETOUR
    geannuleerd = True
    frmInfoNote.NoteName = "Notitie Retouren Postkamer"
    Set frmInfoNote.WorkitemViewer = WIViewer
    frmInfoNote.Show vbModal
    sNotitie = Trim(frmInfoNote.TextBox1)
    Unload frmInfoNote
    If geannuleerd Or _
       sNotitie = "" Then Exit Sub
    sNotitie = sNotitie & vbCrLf & "Van: " + CALGetUserVar("MyHupo1", CALClient.username)
    sNotitieNaam = "Retour dd " & Format(Now(), " yyyy-mm-dd")
    Call WIViewer.Notes.Add(1, sNotitieNaam, sNotitie)
    WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = "RET"
    Call subDoorsturen

ERR_RETOUR:
    DisplayError "Retour"
End Sub

Private Sub cmdVerwijderen_Click()
Dim sAnswer             As String

    sAnswer = MsgBox("Weet u zeker dat dit document DEFINITIEF verwijderd moet worden?", vbYesNo, "Verwijderen")
    If sAnswer = vbYes Then
        WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = "DEL"
        Call subDoorsturen
    End If
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean
Dim sWerksoort          As String
Dim sWerktype           As String

    On Error Resume Next
    If Init Then Exit Sub
    Init = True
    
''    Q1 Release 2012 CR No. 153254 Dept Changes
    AFDELING.AddItem            'Hardcoded
    AFDELING.AddItem "PTA"
    AFDELING.AddItem "PTB"
    AFDELING.AddItem "PTC"
    AFDELING.AddItem "PTD"
    AFDELING.AddItem "CCA"      'Hardcoded
    AFDELING.AddItem "PTE"      'Hardcoded
    AFDELING.AddItem "PTF"      'Hardcoded
    AFDELING.AddItem "PTG"      'Hardcoded
    AFDELING.AddItem "PTH"      'Hardcoded
    AFDELING.AddItem "APP"      'Hardcoded              '[PAC] 17MAR15 - PTN --> APP - TD172461
    AFDELING.AddItem "PTI"      'Hardcoded
    AFDELING.AddItem "PTL"      'Hardcoded              '[PAC] - TD17266
    AFDELING.AddItem "PTR"      'Hardcoded              '[PAC] - TD17266
    AFDELING.AddItem "TOP"      'Hardcoded  /OIC changed to TOP
    AFDELING.AddItem "PJZ"      'Hardcoded
    AFDELING.AddItem "PON"      'Hardcoded
    AFDELING.AddItem "POV"      'Hardcoded

    
    AFDELING.Value = WFM_DOORZENDEN_NAAR
    On Error GoTo ERR_ACTIVATE
    WFM_BEHANDELAAR.ColumnCount = 2
    WFM_BEHANDELAAR.BoundColumn = 1
    WFM_BEHANDELAAR.TextColumn = -1
    WFM_BEHANDELAAR.ColumnWidths = "50;0"
    On Error Resume Next
    WFM_BEHANDELAAR.Value = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "BEHANDELAAR")
    sWerksoort = WFM_WERKSOORT
    sWerktype = WFM_WERKTYPE
    Call subVulWerkSoort        'Hardcoded
    WFM_WERKSOORT.Value = sWerksoort
    WFM_WERKTYPE.Value = sWerktype
    On Error GoTo ERR_ACTIVATE
    cmdAnnuleren.SetFocus
    MultiPage1.Value = 0
    DoEvents
    Exit Sub

ERR_ACTIVATE:
    DisplayError "Userform activate"
End Sub

Private Sub subDoorsturen()
    On Error GoTo ERR_DOORSTUREN
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Application.Desktop.WindowState = DesktopWindowState
    Exit Sub

ERR_DOORSTUREN:
    DisplayError "Doorsturen"
End Sub

Private Function SetCALXFormFields() As Boolean
    On Error GoTo ERR_SETCALX
    SetCALXFormFields = False

    SetCALXFormFields = True
    Exit Function

ERR_SETCALX:
    DisplayError "SetCALXFormFields"
End Function

Private Sub AFDELING_Change()
Dim sAfdeling           As String
Dim sAfdeling_User      As String
Dim vBehandelaar        As Variant

    sAfdeling = AFDELING.SelText
    sAfdeling_User = CALGetUserVar("Afdeling", CALClient.username)
    If sAfdeling = sAfdeling_User Then
        WFM_BEHANDELAAR.Clear
        For Each vBehandelaar In GetUsersPerAfdeling(sAfdeling)
            WFM_BEHANDELAAR.AddItem vBehandelaar
        Next
        lblBehandelaar.Enabled = True
        WFM_BEHANDELAAR.Enabled = True
        lblWerkSoort.Enabled = True
        WFM_WERKSOORT.Enabled = True
        lblWerkType.Enabled = True
        WFM_WERKTYPE.Enabled = True
    Else
        WFM_BEHANDELAAR.Value = ""
        lblBehandelaar.Enabled = False
        WFM_BEHANDELAAR.Enabled = False
        lblWerkSoort.Enabled = False
        WFM_WERKSOORT.Value = ""
        WFM_WERKSOORT.Enabled = False
        lblWerkType.Enabled = False
        WFM_WERKTYPE.Value = ""
        WFM_WERKTYPE.Enabled = False
    End If
End Sub

Private Sub WFM_WERKSOORT_Change()
    On Error GoTo EH
    Call subVulWerkType
    Exit Sub

EH:
    DisplayError "Werksoort"
End Sub

Private Sub CheckFields()
    CheckHupo WFM_BEHANDELAAR
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.BringToTop
    WIViewer.WindowState = wdoWindowStateNormal
    Me.Show 0
End Sub

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

Private Sub subVulWerkSoort()
    WFM_WERKSOORT.ColumnCount = 2
    WFM_WERKSOORT.TextColumn = -1
    WFM_WERKSOORT.ColumnWidths = "30;35"
    WFM_WERKSOORT.Clear
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(0) = ""
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(1, 0) = "AANM"
    WFM_WERKSOORT.list(1, 1) = "Aanmeldingsformulier"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(2, 0) = "ADD"
    WFM_WERKSOORT.list(2, 1) = "Addendum + aanvullingen"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(3, 0) = "AFST"
    WFM_WERKSOORT.list(3, 1) = "Afstandsverklaring"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(4, 0) = "AKT"
    WFM_WERKSOORT.list(4, 1) = "Akten van overdracht"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(5, 0) = "BELF"
    WFM_WERKSOORT.list(5, 1) = "Beleggingsformulier"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(6, 0) = "CLAU"
    WFM_WERKSOORT.list(6, 1) = "Clausules"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(7, 0) = "OPR"
    WFM_WERKSOORT.list(7, 1) = "Oprichtingsstukken"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(8, 0) = "OVER"
    WFM_WERKSOORT.list(8, 1) = "Overig"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(9, 0) = "POVK"
    WFM_WERKSOORT.list(9, 1) = "Pensioenovereenkomst"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(10, 0) = "UITK"
    WFM_WERKSOORT.list(10, 1) = "Uitkeringsformulier"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(11, 0) = "UOVK"
    WFM_WERKSOORT.list(11, 1) = "Uitvoeringsovereenkomst"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(12, 0) = "VERB"
    WFM_WERKSOORT.list(12, 1) = "Verzekeringsbewijs"
    WFM_WERKSOORT.AddItem
    WFM_WERKSOORT.list(13, 0) = "VOOR"
    WFM_WERKSOORT.list(13, 1) = "Voorwerk"
End Sub

Private Sub subVulWerkType()
    WFM_WERKTYPE.ColumnCount = 2
    WFM_WERKTYPE.BoundColumn = 1
    WFM_WERKTYPE.TextColumn = -1
    WFM_WERKTYPE.ColumnWidths = "30;75"
    WFM_WERKTYPE.Clear
    WFM_WERKTYPE.AddItem
    WFM_WERKTYPE.list(0) = ""
    Select Case WFM_WERKSOORT.Value
        Case "AANM"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "AANF"
             WFM_WERKTYPE.list(1, 1) = "Aanmeldingsformulier"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(2, 0) = "DLNF"
             WFM_WERKTYPE.list(2, 1) = "Deelnemersformulier"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(3, 0) = "PPVO"
             WFM_WERKTYPE.list(3, 1) = "Persoonlijk Pensioen Voorstel"
        Case "ADD"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "ADD"
             WFM_WERKTYPE.list(1, 1) = "Addendum + aanvullingen"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(2, 0) = "WIJZ"
             WFM_WERKTYPE.list(2, 1) = "Wijzigingsblad"
        Case "AFST"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "AFST"
             WFM_WERKTYPE.list(1, 1) = "Afstandsverklaring"
        Case "AKT"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "AKT"
             WFM_WERKTYPE.list(1, 1) = "Akten van overdracht"
        Case "BELF"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "BELF"
             WFM_WERKTYPE.list(1, 1) = "Beleggingsformulier"
        Case "CLAU"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "CLAU"
             WFM_WERKTYPE.list(1, 1) = "Clausules"
        Case "OPR"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "OPRS"
             WFM_WERKTYPE.list(1, 1) = "Oprichtingsstukken"
        Case "OVER"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "OVERI"
             WFM_WERKTYPE.list(1, 1) = "Overigen"
        Case "POVK"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "PENB"
             WFM_WERKTYPE.list(1, 1) = "Pensioenbrief"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(2, 0) = "POVK"
             WFM_WERKTYPE.list(2, 1) = "Pensioenovereenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(3, 0) = "PRG"
             WFM_WERKTYPE.list(3, 1) = "Pensioenreglement"
        Case "UITK"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "UITK"
             WFM_WERKTYPE.list(1, 1) = "Uitkeringsformulier"
        Case "UOVK"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "AOVK"
             WFM_WERKTYPE.list(1, 1) = "Aansluitingsovereenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(2, 0) = "APS"
             WFM_WERKTYPE.list(2, 1) = "APS overeenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(3, 0) = "BOVK"
             WFM_WERKTYPE.list(3, 1) = "Beheernet overeenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(4, 0) = "MOVK"
             WFM_WERKTYPE.list(4, 1) = "Mantelovereenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(5, 0) = "OVK"
             WFM_WERKTYPE.list(5, 1) = "Overeenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(6, 0) = "ROVK"
             WFM_WERKTYPE.list(6, 1) = "Raamovereenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(7, 0) = "UBOVK"
             WFM_WERKTYPE.list(7, 1) = "Uitbestedingsovereenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(8, 0) = "UOVK"
             WFM_WERKTYPE.list(8, 1) = "Uivoeringsovereenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(9, 0) = "VEOVK"
             WFM_WERKTYPE.list(9, 1) = "Verbindingsovereenkomst"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(10, 0) = "VOVK"
             WFM_WERKTYPE.list(10, 1) = "Verzekeringsovereenkomst"
        Case "VERB"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "VERB"
             WFM_WERKTYPE.list(1, 1) = "Verzekeringsbewijs"
        Case "VOOR"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(1, 0) = "BNF"
             WFM_WERKTYPE.list(1, 1) = "Beheernet formulier"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(2, 0) = "CDD"
             WFM_WERKTYPE.list(2, 1) = "Customer due diligence"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(3, 0) = "KID"
             WFM_WERKTYPE.list(3, 1) = "Kopie identiteitsbewijs"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(4, 0) = "OFF"
             WFM_WERKTYPE.list(4, 1) = "Offerte"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(5, 0) = "OUPR"
             WFM_WERKTYPE.list(5, 1) = "Opdracht tot uitvoering pensioenregeling"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(6, 0) = "OVER"
             WFM_WERKTYPE.list(6, 1) = "Opdracht tot verzekeren"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(7, 0) = "UKVK"
             WFM_WERKTYPE.list(7, 1) = "Uittreksel Kamer van Koophandel"
             WFM_WERKTYPE.AddItem
             WFM_WERKTYPE.list(8, 0) = "VID"
             WFM_WERKTYPE.list(8, 1) = "Vaststelling identiteit"
    End Select
End Sub
Attribute VB_Name = "frm_PostQuery"
Attribute VB_Base = "0{B220103B-39A2-4632-B175-7895C984C653}{BF6B8119-319F-4552-BF10-317DD04F13BC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim mobjQueryResults    As CALQueryResults
Dim ExtraInfo2ResultListMapping As New Collection
Dim myQueryResultRecordColumn   As Integer
Dim bVanDat_DAT         As Boolean
Dim bTotDat_DAT         As Boolean
Dim bVanDat_PST         As Boolean
Dim bTotDat_PST         As Boolean

Const vbDefault = 0
Const vbHourglass = 11

Private Function EenofMeerSelectedItems() As Integer
Dim i                   As Integer

    EenofMeerSelectedItems = 0
    For i = 1 To ListView1.ListItems.Count
        If ListView1.ListItems.item(i).Selected Then
            EenofMeerSelectedItems = EenofMeerSelectedItems + 1
            If EenofMeerSelectedItems = 2 Then Exit Function
        End If
    Next
End Function

Private Sub cmdHide_Click()
    Me.Hide
End Sub

Private Sub ListView1_ColumnClick(ByVal ColumnHeader As MSComctlLib.ColumnHeader)
    On Error GoTo EH
    If Me.ListView1.SortKey = ColumnHeader.Index - 1 Then
        If Me.ListView1.SortOrder = lvwDescending Then
            Me.ListView1.SortOrder = lvwAscending
        Else
            Me.ListView1.SortOrder = lvwDescending
        End If
    Else
        Me.ListView1.Sorted = True
        Me.ListView1.SortKey = ColumnHeader.Index - 1
        Me.ListView1.SortOrder = lvwAscending
    End If
    Me.ListView1.Refresh
    Exit Sub

EH:
    DisplayError "ListView ColumnClick"
End Sub

Private Sub EnableRetrieve()
    On Error GoTo EH
    cmdRetrieve.Enabled = False
    If Not Me.ListView1.SelectedItem Is Nothing Then
        If Me.ListView1.SelectedItem.Index > 0 Then cmdRetrieve.Enabled = True
    End If
    Exit Sub

EH:
    DisplayError "EnableRetrieve"
End Sub

Private Sub QRYTextBox5_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck QRYTextBox5
    QRYTextBox5.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum vanaf"
End Sub

Private Sub QRYTextBox6_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck QRYTextBox6
    QRYTextBox6.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum tot en met"
End Sub

Private Sub QRYTextBox9_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck QRYTextBox9
    QRYTextBox9.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum tot en met"
End Sub

Private Sub QRYTextBox10_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    On Error GoTo EH
    DateCheck QRYTextBox10
    QRYTextBox10.BackColor = TextboxWhite
    Exit Sub

EH:
    DisplayError "Datum tot en met"
End Sub

Private Sub UserForm_Initialize()
Static Init             As Boolean

    On Error GoTo EH
    If Init Then Exit Sub
    Init = True
'   Initialize the query form
    ListView1.MultiSelect = True

    txtMaxMatches = 100
    cmdFind.Default = True
    NewSearch

    Me.ListView1.ColumnHeaders.Add , "A", "A", 0, 0 ', Alignment:=1

    AddResultField "DAT_DOC", "Datum Doc.", 55, 0, False
    AddResultField "PST_DATPOSTSTUK", "Datum Poststuk", 65, 0, True
    AddResultField "DOORZENDEN_NAAR", "Afdeling", 40, 0, False
    AddResultField "BEHANDELAAR", "Behandelaar", 65, 0, False
    AddResultField "NR_ORT", "ORT", 38, 0, False
    AddResultField "NR_CONTRACT", "Contract Nr.", 55, 0, False
    AddResultField "NR_OFFERTE", "Offerte Nr.", 52, 0, False
    AddResultField "NAAM_KLANT", "Klantnaam", 200, 0, False
    AddResultField "QUERYRESULTRECORD", "Query result record", 0, 0, False

    myQueryResultRecordColumn = 9
    Me.ListView1.Refresh

    DefQryField 1, "NR_OFFERTE", "Offerte Nr.", 9, "Offertenummer"
    DefQryField 2, "NR_ORT", "ORT", 6, "ORT"
    DefQryField 3, "NR_CONTRACT", "Contract Nr.", 5, "Contractnummer"
    DefQryField 4, "NAAM_KLANT", "Klantnaam", 34, "Klantnaam"
    DefQryField 5, "DAT_DOC", "Datum Doc.", 10, "Datum Document (DD-MM-EEJJ)"
    DefQryField 6, "DAT_DOC", "T/m", 10, "Datum Document (DD-MM-EEJJ)"
    DefQryField 7, "DOORZENDEN_NAAR", "Afdeling", 3, "Afdeling"
    DefQryField 8, "BEHANDELAAR", "Behandelaar", 12, "Behandelaar"
    DefQryField 9, "PST_DATPOSTSTUK", "Datum Poststuk", 10, "Datum Poststuk (DD-MM-EEJJ)"
    DefQryField 10, "PST_DATPOSTSTUK", "T/m", 10, "Datum Poststuk (DD-MM-EEJJ)"
    Exit Sub

EH:
    DisplayError "Userform Initialize frm_PostQuery"
End Sub

Private Sub AddResultField(name, Caption, Witdh, Align, ResultOnly As Boolean)
Dim myColHeader         As ColumnHeader

    On Error GoTo EH
    Set myColHeader = Me.ListView1.ColumnHeaders.Add(, name, Caption, Witdh, Align)
    myColHeader.Tag = ResultOnly
    Exit Sub

EH:
    DisplayError "AddResultField: " + name
End Sub

Private Sub DefQryField(No, name, Caption, MaxLen, TipText)
'Sub to define the custom fields
Dim ctlControl          As Control
Dim ctlTextBox          As Variant

    On Error GoTo EH
    For Each ctlControl In Me.Controls
        If Left(ctlControl.name, 10) = "QRYTextBox" Then
            Set ctlTextBox = ctlControl
            If Val(Mid(ctlTextBox.name, 11)) = No Then
                ctlTextBox.Tag = name
                ctlTextBox.MaxLength = MaxLen
                ctlTextBox.ControlTipText = TipText
                ctlTextBox.Enabled = True
                ctlTextBox.Visible = True
           End If
        End If
        If Left(ctlControl.name, 8) = "QRYLabel" Then
           If Val(Mid(ctlControl.name, 9)) = No Then
                ctlControl = Caption
                ctlControl.ControlTipText = TipText
                ctlControl.Enabled = True
                ctlControl.Visible = True
           End If
        End If
    Next
    Exit Sub

EH:
    DisplayError "DefQryField: " + name
End Sub

Private Sub cmdFind_Click()
    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    If AantalCriteria = 0 Then
        MsgBox "Vul minimaal 1 zoekcriteria in."
        GoTo EH
    End If
    DateCheck QRYTextBox5
    DateCheck QRYTextBox6
    DateCheck QRYTextBox9
    DateCheck QRYTextBox10
'   Execute the query
    Set mobjQueryResults = RunQuery()
'   Load the results into a listbox
    LoadResults

EH:
    MousePointer = fmMousePointerDefault
    If Err Then DisplayError "Zoek"
End Sub

Private Function AantalCriteria() As Integer
Dim ctlTextBox          As Control
Dim criteria            As String

    On Error Resume Next
    AantalCriteria = 0
    For Each ctlTextBox In Me.Controls
        If Left(ctlTextBox.name, 10) = "QRYTextBox" Then
            criteria = Replace(ctlTextBox, "*", "")
            criteria = Replace(criteria, "%", "")
            If Trim(criteria) <> "" Then AantalCriteria = AantalCriteria + 1
        End If
    Next
End Function

Private Sub cmdNew_Click()
    On Error Resume Next
    NewSearch
    QRYTextBox1.SetFocus
End Sub

Private Sub cmdRetrieve_Click()
Dim myViewer            As WorkitemViewer
Dim i                   As Integer

    On Error GoTo EH
    MousePointer = fmMousePointerHourGlass
    DoEvents
    For i = 1 To ListView1.ListItems.Count
        If (ListView1.ListItems.item(i).Selected = True) Then RetrieveNthItem (i)
    Next i

EH:
    MousePointer = fmMousePointerDefault
    If Err Then DisplayError "Open"
End Sub

Private Sub ListView1_DblClick()
    On Error GoTo EH
    If Not Me.ListView1.SelectedItem Is Nothing Then RetrieveNthItem Me.ListView1.SelectedItem.Index
    Call EnableRetrieve
    Exit Sub

EH:
    DisplayError "ListView DblClick"
End Sub

Private Sub ListView1_Click()
    Call EnableRetrieve
End Sub

Private Sub ListView1_Enter()
    cmdFind.Default = False
    cmdRetrieve.Default = True
End Sub

Private Sub ListView1_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    cmdFind.Default = True
End Sub

Private Sub cmdClose_Click()
    Unload Me
End Sub

Private Sub NewSearch()
Dim ctlTextBox          As Control

    On Error Resume Next
'   Fields are named 'QRYTextboxN" so new fields can be added
'   without changing this code.
    For Each ctlTextBox In Me.Controls
        If Left(ctlTextBox.name, 10) = "QRYTextBox" Then
            ctlTextBox = ""
            ctlTextBox.BackColor = TextboxWhite
        End If
    Next
End Sub

Private Function RunQuery() As CALQueryResults
Dim myColHeader         As ColumnHeader
Dim ctlTextBox          As Control
Dim ctlLabel            As Control
Dim strTemp             As String
Dim objClient           As CALClient
Dim lngMaxMatches       As Long
Dim calObjType          As Long
Dim calLocation         As Long
Dim i                   As Integer
Dim objIndexFields      As CALIndexFields2
Dim myClient            As CALClient

    Set myClient = Application.CALClient
    Set objIndexFields = New CALIndexFields2
'   Beetje omslachtig. objIndexFields.
    Set objIndexFields = Application.CALClient.IndexFields2
    For i = objIndexFields.Count To 1 Step -1
        Call objIndexFields.Remove(objIndexFields.item(i))
    Next
    Set RunQuery = Nothing
    lngMaxMatches = Val(txtMaxMatches)
    calObjType = calObjTypeDocument
    calLocation = calLocationDomain
'   Fields are named 'QryTextboxN" and captions are named 'QryLabelN"
'   So new fields can be added without changing this code.
    For Each ctlTextBox In Me.Controls
        If Left(ctlTextBox.name, 10) = "QRYTextBox" Then
            Select Case ctlTextBox.name
                Case "QRYTextBox5"
                     bVanDat_DAT = True
                Case "QRYTextBox6"
                     bTotDat_DAT = True
                Case "QRYTextBox9"
                     bVanDat_PST = True
                Case "QRYTextBox10"
                     bTotDat_PST = True
            End Select
            If ctlTextBox.Enabled = True Then SetIndex objIndexFields, ctlTextBox.Tag, ctlTextBox
        End If
    Next
'   Append result fields only to the Indexfield object
'   CAL only retrieves fields which are in the indexfields object,
'   Result only fields do have a blank selection
    For Each myColHeader In Me.ListView1.ColumnHeaders
        If myColHeader.Tag = True Then SetIndex objIndexFields, myColHeader.Key, ""
    Next
'   Execute the query
    Set objClient = Application.CALClient
    Set RunQuery = objClient.Query("", calObjType, calLocation, lngMaxMatches, objIndexFields)
    calObjType = calObjTypeFolder
    calLocation = calLocationDomain
    Set objIndexFields = Nothing
    Set objClient = Nothing
End Function

Private Sub SetIndex(objIndexFields As CALIndexFields2, Field As Variant, Value As Variant)
Dim strValue            As String
Dim strField            As String
Dim StarPos             As Integer
Dim objIndexField       As CALIndexField

'   Forces a blank field to be interpreted as 'any value'
'   CAL needs a field as string (variant is not working)
    strField = Field
    If Value <= " " Then
        strValue = ""
    Else
        strValue = RTrim(Value)
    End If
'   replace * met %
    strValue = Replace(strValue, "*", "%")
'   Zet voor eerste dat_doc >= en tweede <=
    If strField = "DAT_DOC" Then
        If bVanDat_DAT Then
            If strValue <> "" Then
                strValue = ">=" & Format(strValue, "yyyy-mm-dd")
            End If
            bVanDat_DAT = False
        End If
        If bTotDat_DAT Then
            If strValue <> "" Then
                strValue = "<=" & Format(strValue, "yyyy-mm-dd")
            End If
            bTotDat_DAT = False
        End If
    End If
    If strField = "PST_DATPOSTSTUK" Then
        If bVanDat_PST Then
            If strValue <> "" Then
                strValue = ">=" & Format(strValue, "yyyy-mm-dd")
            End If
            bVanDat_PST = False
        End If
        If bTotDat_PST Then
            If strValue <> "" Then
                strValue = "<=" & Format(strValue, "yyyy-mm-dd")
            End If
            bTotDat_PST = False
        End If
    End If
    Set objIndexField = objIndexFields.Add(calIndexFieldLast, strField, strValue)
End Sub

Private Sub LoadResults()
Dim itmx                As ListItem
Dim myColHeader         As ColumnHeader
Dim lngCount            As Long
Dim i, j, t             As Long
Dim myEInfoItem         As CALEnumExtraInfoItem
Dim EInfiItem

    On Error GoTo EH
'   Err.Clear
    For i = Me.ListView1.ListItems.Count To 1 Step -1
           Me.ListView1.ListItems.Remove i
    Next i
'   Display the number of hits
    lngCount = mobjQueryResults.Count
    lblCount = "Aantal gevonden: " + Str(lngCount)
'   Add each hit to the listbox
    For i = 1 To lngCount
        Dim objEnumItem As CALEnumItem

        Set objEnumItem = mobjQueryResults.item(i)
'       Calc the mapping from the ExtraInfo query results to then ResultList shown on the form
        If ExtraInfo2ResultListMapping.Count < 1 Then
            For t = 2 To Me.ListView1.ColumnHeaders.Count
                Set myColHeader = Me.ListView1.ColumnHeaders.item(t)
                EInfiItem = 0
                For j = 1 To objEnumItem.ExtraInfo.Count
                    Set myEInfoItem = objEnumItem.ExtraInfo.item(j)
                    If myEInfoItem.name = myColHeader.Key Then EInfiItem = j
                Next j
                If EInfiItem > 0 Then ExtraInfo2ResultListMapping.Add EInfiItem
            Next t
        End If
'       Transfer each record from the Query result list to the listview line on the form
        Set itmx = Me.ListView1.ListItems.Add()
        For j = 1 To ExtraInfo2ResultListMapping.Count
            EInfiItem = ExtraInfo2ResultListMapping.item(j)
            If EInfiItem > 0 Then   'if there is a value in the resultlist
               itmx.SubItems(j) = objEnumItem.ExtraInfo.item(EInfiItem)
            End If
        Next j
'       Voeg de verwijziging naar de queryresultlist toe
        itmx.SubItems(myQueryResultRecordColumn) = i
        Me.ListView1.Refresh
    Next i
    EnableRetrieve
    Exit Sub

EH:
    DisplayError "Loadresults"
End Sub

Private Sub RetrieveNthItem(i As Integer, Optional FromWorkflow As Boolean)
Dim myViewer            As WorkitemViewer
Dim FindListItems       As CALWorkitemWorkstepList
Dim objEnumItem         As CALEnumItem
Dim objClientListItem   As CALClientListItem
Dim j                   As Integer

    On Error GoTo EH
'   Bepaal het recordnr in de queryresult list
    j = Me.ListView1.ListItems.item(i).ListSubItems(myQueryResultRecordColumn)
    Set objEnumItem = mobjQueryResults.item(j)
    If objEnumItem.Info.ServerName = "ARCHIVE" Then
        Err.Raise 12344, , "Deze folder is verplaatst naar een andere business unit. Openen van deze folder is niet mogelijk."
    End If
    Set objClientListItem = objEnumItem.Retrieve(0)
    Set myViewer = Application.Viewers.OpenViewer(mobjQueryResults.item(j).Info.objId, wdoOpenViewerNormal, wdoOpenReadOnly)
    myViewer.BringToTop
    Exit Sub

EH:
    If Err.Number = 1000 And Application.CALMaster.LastError.Code = 26 Then
        Resume Next
        Err.Clear
    End If
    DisplayError "Open"
End Sub

Private Sub UserForm_Terminate()
    Unload Me
End Sub
Attribute VB_Name = "frm_Postflow"
Attribute VB_Base = "0{41228CA8-AE2F-4D36-95C0-BF5833C4A04F}{FC5E1339-020B-4D15-8D4D-58BA0AAC6EBA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim myESWMObjID         As String

Private Sub cmdAnnuleren_Click()
    On Error GoTo ERR_ANNULEREN
    Call WFMBackButton(WIViewer)
    Application.Desktop.WindowState = DesktopWindowState
    Exit Sub

ERR_ANNULEREN:
    DisplayError "Annuleren"
End Sub

Private Sub cmdArchiveren_Click()
    WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = "ARC"
    Call subDoorsturen
End Sub

Private Sub cmdOpslaan_Click()
    WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = ""
    Call subDoorsturen
End Sub

Private Sub cmdRetour_Click()
Dim sNotitieNaam        As String
Dim sNotitie            As String

    On Error GoTo ERR_RETOUR
    geannuleerd = True
    frmInfoNote.NoteName = "Notitie Retouren Postkamer"
    Set frmInfoNote.WorkitemViewer = WIViewer
    frmInfoNote.Show vbModal
    sNotitie = Trim(frmInfoNote.TextBox1)
    Unload frmInfoNote
    If geannuleerd Or _
       sNotitie = "" Then Exit Sub
    sNotitie = sNotitie & vbCrLf & "Van: " + CALGetUserVar("MyHupo1", CALClient.username)
    sNotitieNaam = "Retour dd " & Format(Now(), " yyyy-mm-dd")
    Call WIViewer.Notes.Add(1, sNotitieNaam, sNotitie)
    WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = "RET"
    Call subDoorsturen
    Exit Sub

ERR_RETOUR:
    DisplayError "Retour"
End Sub

Private Sub cmdVerwijderen_Click()
Dim sAnswer             As String

    sAnswer = MsgBox("Weet u zeker dat dit document DEFINITIEF verwijderd moet worden?", vbYesNo, "Verwijderen")
    If sAnswer = vbYes Then
        WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = "DEL"
        Call subDoorsturen
    End If
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean
Dim vBehandelaar        As Variant

    If Init Then Exit Sub
    Init = True
    fraPoststuk.Caption = "Poststuk voor: " & WFM_USERACCOUNT & " (" & fncGetUserName(WFM_USERACCOUNT) & ")"
    WFM_BEHANDELAAR.Value = CALGetFieldValue(WIViewer.CALClientListItem.OpenedItem, "BEHANDELAAR")
    WFM_BEHANDELAAR.Clear
    WFM_BEHANDELAAR.AddItem ""
    For Each vBehandelaar In GetUsersPerAfdeling(WFM_DOORZENDEN_NAAR)
        WFM_BEHANDELAAR.AddItem vBehandelaar
    Next
    MultiPage1.Value = 0
    DoEvents

    cmdAnnuleren.Default = True
    Me.Tag = Left(WIViewer.CALClientListItem.Info.SourceWorkset, 5)
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.WindowState = wdoWindowStateNormal
    WIViewer.BringToTop
End Sub

Private Sub WFMDPST_DATPOSTSTUK_AfterUpdate()
    On Error GoTo ERR_POSTSTUK
    DateCheck WFMDPST_DATPOSTSTUK
    Exit Sub

ERR_POSTSTUK:
    DisplayError "Datum Poststuk"
End Sub

Private Sub subDoorsturen()
    On Error GoTo ERR_EINDEZAAK
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Application.Desktop.WindowState = DesktopWindowState
    Exit Sub

ERR_EINDEZAAK:
    DisplayError "Doorsturen"
End Sub

Public Function fncGetUserName(vUserID) As String
Dim oWFVars             As CALWorkflowVariables
Dim oWFVar              As CALWorkflowVariable
Dim sVariable           As String

    On Error Resume Next
    sVariable = "WFUAdsName"
    fncGetUserName = "Onbekend"
    Set oWFVars = Application.CALClient.WorkflowVariables(sVariable, calWorkflowVariableCategoryUser, vUserID)
    If Not oWFVars Is Nothing Then
        For Each oWFVar In oWFVars
            If oWFVar.name = sVariable And UCase(oWFVar.username) = UCase(vUserID) Then fncGetUserName = oWFVar.Value.Value
        Next
    End If
End Function

Private Function SetCALXFormFields() As Boolean
    On Error GoTo ERR_SETCALX
    SetCALXFormFields = False

    SetCALXFormFields = True
    Exit Function

ERR_SETCALX:
    DisplayError "SetCALXFormFields"
End Function

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property
Attribute VB_Name = "frm_PostflowRetour"
Attribute VB_Base = "0{16EF881C-8F97-4BD3-B6D1-17472663B7C3}{6890541C-37DE-4EE5-A575-F35B045D71B9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim WIViewer            As WFDWorkitem.WorkitemViewer
Dim gsAfdeling          As String
Dim gsBehandelaar       As String
Dim myESWMObjID         As String

Private Sub AFDELING_Change()
    WFM_BEHANDELAAR = ""
    If AFDELING.Value = gsAfdeling Then
        WFM_BEHANDELAAR = gsBehandelaar
    End If
End Sub

Private Sub cmdAnnuleren_Click()
    On Error GoTo ERR_ANNULEREN
    Call WFMBackButton(WIViewer)
    Application.Desktop.WindowState = DesktopWindowState
    Exit Sub

ERR_ANNULEREN:
    DisplayError "Annuleren"
End Sub

Private Sub cmdOpslaan_Click()
    WFM_DOORZENDEN_NAAR = AFDELING.Value
    WIViewer.Fields.Find("BESTEMMING").CALFormField.Value = "POS"   'Tbv Routering
    Call subDoorsturen
End Sub

Private Sub UserForm_Activate()
Static Init             As Boolean

    If Init Then Exit Sub
    Init = True
    fraPoststuk.Caption = "Poststuk voor: " & WFM_USERACCOUNT & " (" & fncGetUserName(WFM_USERACCOUNT) & ")"
    fillDDList True, AFDELING, WFMData.Common.getList("WFAfdeling", "AfdCode", "Enabled", "1")
    On Error Resume Next
    gsBehandelaar = WFM_BEHANDELAAR
    AFDELING.AddItem "BEO"      'Hardcoded
    AFDELING.AddItem "EXT"      'Hardcoded
    AFDELING.AddItem "JFL"      'Hardcoded
    AFDELING.AddItem "KPO"      'Hardcoded
    AFDELING.AddItem "MT"       'Hardcoded
    AFDELING.AddItem "PJT"      'Hardcoded
    AFDELING.AddItem "PMT"      'Hardcoded
    AFDELING.AddItem "QCT"      'Hardcoded
    AFDELING.AddItem "TPO"      'Hardcoded
    AFDELING.AddItem "VTC"      'Hardcoded
    Call subSortAfdeling(AFDELING, 0, AFDELING.ListCount - 1)
    Do While Trim(AFDELING.list(1)) = ""
        AFDELING.RemoveItem (1)
    Loop
    AFDELING.Value = WFM_DOORZENDEN_NAAR
    gsAfdeling = WFM_DOORZENDEN_NAAR
    WFM_BEHANDELAAR = gsBehandelaar
    MultiPage1.Value = 0
    DoEvents
    Me.Tag = Left(WIViewer.CALClientListItem.Info.SourceWorkset, 5)
End Sub

Private Sub UserForm_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    WIViewer.WindowState = wdoWindowStateNormal
    WIViewer.BringToTop
End Sub

Private Sub WFMDPST_DATPOSTSTUK_AfterUpdate()
    On Error GoTo ERR_POSTSTUK
    DateCheck WFMDPST_DATPOSTSTUK
    Exit Sub

ERR_POSTSTUK:
    DisplayError "Datum Poststuk"
End Sub

Private Sub subDoorsturen()
    On Error GoTo ERR_EINDEZAAK
    If Not SetCALXFormFields Then Exit Sub
    If Not WorkflowSave(WIViewer) Then Exit Sub
    Call WFMSaveButton(WIViewer)
    Application.Desktop.WindowState = DesktopWindowState
    Exit Sub

ERR_EINDEZAAK:
    DisplayError "Doorsturen"
End Sub

Private Sub subSortAfdeling(vAfdeling As ComboBox, vBottom As Integer, vTop As Integer)
Dim sPivot              As String
Dim sTemp               As String
Dim iBottomTMP          As Integer
Dim iTopTMP             As Integer

    iBottomTMP = vBottom
    iTopTMP = vTop
    sPivot = vAfdeling.list((vBottom + vTop) \ 2)
    While (iBottomTMP <= iTopTMP)
        While (vAfdeling.list(iBottomTMP) < sPivot And iBottomTMP < vTop)
            iBottomTMP = iBottomTMP + 1
        Wend
        While (sPivot < vAfdeling.list(iTopTMP) And iTopTMP > vBottom)
            iTopTMP = iTopTMP - 1
        Wend
        If iBottomTMP < iTopTMP Then
            sTemp = vAfdeling.list(iBottomTMP)
            vAfdeling.list(iBottomTMP) = vAfdeling.list(iTopTMP)
            vAfdeling.list(iTopTMP) = sTemp
        End If
        If iBottomTMP <= iTopTMP Then
            iBottomTMP = iBottomTMP + 1
            iTopTMP = iTopTMP - 1
        End If
  Wend

'   The function calls itself until everything is in good order
    If (vBottom < iTopTMP) Then subSortAfdeling vAfdeling, vBottom, iTopTMP
    If (iBottomTMP < vTop) Then subSortAfdeling vAfdeling, iBottomTMP, vTop
End Sub

Public Function fncGetUserName(vUserID) As String
Dim oWFVars             As CALWorkflowVariables
Dim oWFVar              As CALWorkflowVariable
Dim sVariable           As String

    On Error Resume Next
    sVariable = "WFUAdsName"
    fncGetUserName = "Onbekend"
    Set oWFVars = Application.CALClient.WorkflowVariables(sVariable, calWorkflowVariableCategoryUser, vUserID)
    If Not oWFVars Is Nothing Then
        For Each oWFVar In oWFVars
            If oWFVar.name = sVariable And UCase(oWFVar.username) = UCase(vUserID) Then fncGetUserName = oWFVar.Value.Value
        Next
    End If
End Function

Private Function SetCALXFormFields() As Boolean
    On Error GoTo ERR_SETCALX
    SetCALXFormFields = False

    SetCALXFormFields = True
    Exit Function

ERR_SETCALX:
    DisplayError "SetCALXFormFields"
End Function

Public Property Set WorkitemViewer(objWorkitemViewer)
    Set WIViewer = objWorkitemViewer
End Property
Public Property Get WorkitemViewer() As WFDWorkitem.WorkitemViewer
    Set WorkitemViewer = WIViewer
End Property

Public Property Let ESWMObjID(VarValue)
    myESWMObjID = VarValue
End Property
Public Property Get ESWMObjID()
    ESWMObjID = myESWMObjID
End Property

' InQuest injected base64 decoded content
' ;-jw
' Z,x8
' .+-"
' Z,y&
' $R+s
' UzWMi
' x%x7
' &j)Qz
' F<D@
' z{lI
' &j)Lj
' )^O*^-
' ,"jh
' <Dpz
' m.+-1
' zr'~

INQUEST-PP=macro
