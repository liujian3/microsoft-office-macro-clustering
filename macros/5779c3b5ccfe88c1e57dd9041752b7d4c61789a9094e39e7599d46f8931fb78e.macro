Attribute VB_Name = "AboutDialog"
Attribute VB_Base = "0{23A01118-C837-484C-89C6-EE02C114AC57}{CA17711D-A2BA-441D-808C-ACB264303FBF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
'
'----------------------------------------------------------------------------------

Private Sub OKButton_Click()

    Unload AboutDialog
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("ShowAbout").Value = ShowAbout.Value
    
End Sub

Private Sub UserForm_Initialize()
    
    ShowAbout = Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("ShowAbout").Value
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_SUMM").Value Then
        ProgramName.Caption = ProgramName.Caption + " |fffd||fffd||fffd||fffd|"
    End If
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_PRIM").Value Then
        ProgramName.Caption = ProgramName.Caption + " |fffd||fffd||fffd||fffd|"
    End If
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then
        ProgramName.Caption = ProgramName.Caption + " |fffd||fffd||fffd||fffd|"
    End If
    
    RegNum.Caption = strREG_SerialNumber
    UserName.Caption = strREG_UserName

    DateVersion.Caption = DateVersion.Caption + " " + CStr(Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("Ver_ChangeDate").Value)
    
End Sub


Attribute VB_Name = "AddAsset"
Attribute VB_Base = "0{EBA4F0E5-1A86-4D82-8653-DDB018CDBCD5}{14ACB6B8-98FA-4F84-ADEA-B19C20F4C6A0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| / |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

Private Sub OKButton_Click()

    Unload AddAsset
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Exit Sub
    End If
    
    Dim nWas(3) As Integer
    Dim nWill(3) As Integer
    Dim nTableStep(3) As Integer
    nWas(1) = CInt(Range("asset_count_1").Value)
    nWas(2) = CInt(Range("asset_count_2").Value)
    nWas(3) = CInt(Range("asset_count_3").Value)
    nWill(1) = CInt(Num_1.Value)
    nWill(2) = CInt(Num_2.Value)
    nWill(3) = CInt(Num_3.Value)
    nTableStep(1) = 19
    nTableStep(2) = 21
    nTableStep(3) = 16
    bSomethingNew = False
    For i = 1 To 3
        If nWill(i) <> nWas(i) Then bSomethingNew = True
    Next
    
    If bSomethingNew Then
        Application.ScreenUpdating = False
        
        For section = 1 To 3
            If nWill(section) > nWas(section) Then
                
                ' ----------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| ---
                
                For nNewItemCount = 1 To nWill(section) - nWas(section)
                    nCopyFromStart = Range("asset_count_" + Trim(Str(section))).Row + 1 + (nWas(section) + nNewItemCount - 2) * nTableStep(section)
                    nCopyFromEnd = nCopyFromStart + nTableStep(section) - 1
                    Range(Rows(nCopyFromStart), Rows(nCopyFromEnd)).Select
                    Selection.Copy
                    Rows(nCopyFromEnd + 1).Select
                    Selection.Insert Shift:=xlDown
                    Application.CutCopyMode = False
                Next
                
            End If
            If nWill(section) < nWas(section) Then
                
                ' ------------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| ---
            
                nFromRow = Range("asset_count_" + Trim(Str(section))).Row + 1 + nWill(section) * nTableStep(section)
                nToRow = Range("asset_count_" + Trim(Str(section))).Row + 1 + nWas(section) * nTableStep(section) - 1
                Range(Rows(nFromRow), Rows(nToRow)).Delete
            
            End If
        Next
        
        Range("asset_count_1").Value = nWill(1)
        Range("asset_count_2").Value = nWill(2)
        Range("asset_count_3").Value = nWill(3)
        
        Application.CutCopyMode = False
        Cells(Range("asset_count_1").Row - 2, 1).Select
        Application.ScreenUpdating = True
    End If

End Sub

Private Sub Num_1_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(Num_1.Value)) Then Num_1.Value = Range("asset_count_1").Value
    If (Num_1.Value < 1) Then Num_1.Value = 1
    If (Num_1.Value > 100) Then Num_1.Value = 100
    Num_1_Spin.Value = Num_1.Value
End Sub
Private Sub Num_1_Spin_Change()
    Num_1.Value = Num_1_Spin.Value
End Sub

Private Sub Num_2_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(Num_2.Value)) Then Num_2.Value = Range("asset_count_2").Value
    If (Num_2.Value < 1) Then Num_2.Value = 1
    If (Num_2.Value > 100) Then Num_2.Value = 100
    Num_2_Spin.Value = Num_2.Value
End Sub
Private Sub Num_2_Spin_Change()
    Num_2.Value = Num_2_Spin.Value
End Sub

Private Sub Num_3_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(Num_3.Value)) Then Num_3.Value = Range("asset_count_3").Value
    If (Num_3.Value < 1) Then Num_3.Value = 1
    If (Num_3.Value > 100) Then Num_3.Value = 100
    Num_3_Spin.Value = Num_3.Value
End Sub
Private Sub Num_3_Spin_Change()
    Num_3.Value = Num_3_Spin.Value
End Sub

Private Sub CancelButton_Click()
    Unload AddAsset
End Sub

Private Sub UserForm_Initialize()
    
    szCurrentSheet = ActiveSheet.Name
    
    Num_1.Value = Range("asset_count_1").Value
    Num_1_Spin.Value = Num_1.Value
    Num_2.Value = Range("asset_count_2").Value
    Num_2_Spin.Value = Num_2.Value
    Num_3.Value = Range("asset_count_3").Value
    Num_3_Spin.Value = Num_3.Value
    
End Sub


Attribute VB_Name = "AddExpenses"
Attribute VB_Base = "0{2A457289-9988-4CFB-886C-C84AB52464B3}{2283C73D-B529-4E6A-912B-AD2B3E17F49F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| / |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

Private Sub OKButton_Click()

    Unload AddExpenses
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Exit Sub
    End If
    
    Dim nWas(4) As Integer
    Dim nWill(4) As Integer
    nWas(1) = CInt(Range("gexp_count_1").Value)
    nWas(2) = CInt(Range("gexp_count_2").Value)
    nWas(3) = CInt(Range("gexp_count_3").Value)
    nWas(4) = CInt(Range("gexp_count_4").Value)
    nWill(1) = CInt(Num_1.Value)
    nWill(2) = CInt(Num_2.Value)
    nWill(3) = CInt(Num_3.Value)
    nWill(4) = CInt(Num_4.Value)
    bSomethingNew = False
    For i = 1 To 4
        If nWill(i) <> nWas(i) Then bSomethingNew = True
    Next
    
    If bSomethingNew Then
        Application.ScreenUpdating = False
        
        For section = 1 To 4
            If nWill(section) > nWas(section) Then
                
                ' ----------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ---
                
                For nNewItemCount = 1 To nWill(section) - nWas(section)
                    nTableStep = 2
                    nCopyFromStart = Range("gexp_count_" + Trim(Str(section))).Row + 1 + (nWas(section) + nNewItemCount - 2) * nTableStep
                    nCopyFromEnd = nCopyFromStart + nTableStep - 1
                    Range(Rows(nCopyFromStart), Rows(nCopyFromEnd)).Select
                    Selection.Copy
                    Rows(nCopyFromEnd + 1).Select
                    Selection.Insert Shift:=xlDown
                    Application.CutCopyMode = False
                Next
                
            End If
            If nWill(section) < nWas(section) Then
                
                ' ------------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ---
            
                nTableStep = 2
                nFromRow = Range("gexp_count_" + Trim(Str(section))).Row + 1 + nWill(section) * nTableStep
                nToRow = Range("gexp_count_" + Trim(Str(section))).Row + 1 + nWas(section) * nTableStep - 1
                Range(Rows(nFromRow), Rows(nToRow)).Delete
            
            End If
        Next
        
        Range("gexp_count_1").Value = nWill(1)
        Range("gexp_count_2").Value = nWill(2)
        Range("gexp_count_3").Value = nWill(3)
        Range("gexp_count_4").Value = nWill(4)
        
        Application.CutCopyMode = False
        Cells(Range("gexp_count_1").Row - 2, 1).Select
        Application.ScreenUpdating = True
    End If

End Sub

Private Sub Num_1_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(Num_1.Value)) Then Num_1.Value = Range("gexp_count_1").Value
    If (Num_1.Value < 1) Then Num_1.Value = 1
    If (Num_1.Value > 100) Then Num_1.Value = 100
    Num_1_Spin.Value = Num_1.Value
End Sub
Private Sub Num_1_Spin_Change()
    Num_1.Value = Num_1_Spin.Value
End Sub

Private Sub Num_2_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(Num_2.Value)) Then Num_2.Value = Range("gexp_count_2").Value
    If (Num_2.Value < 1) Then Num_2.Value = 1
    If (Num_2.Value > 100) Then Num_2.Value = 100
    Num_2_Spin.Value = Num_2.Value
End Sub
Private Sub Num_2_Spin_Change()
    Num_2.Value = Num_2_Spin.Value
End Sub

Private Sub Num_3_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(Num_3.Value)) Then Num_3.Value = Range("gexp_count_3").Value
    If (Num_3.Value < 1) Then Num_3.Value = 1
    If (Num_3.Value > 100) Then Num_3.Value = 100
    Num_3_Spin.Value = Num_3.Value
End Sub
Private Sub Num_3_Spin_Change()
    Num_3.Value = Num_3_Spin.Value
End Sub

Private Sub Num_4_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(Num_4.Value)) Then Num_4.Value = Range("gexp_count_4").Value
    If (Num_4.Value < 1) Then Num_4.Value = 1
    If (Num_4.Value > 100) Then Num_4.Value = 100
    Num_4_Spin.Value = Num_4.Value
End Sub
Private Sub Num_4_Spin_Change()
    Num_4.Value = Num_4_Spin.Value
End Sub

Private Sub CancelButton_Click()
    Unload AddExpenses
End Sub

Private Sub UserForm_Initialize()
    
    Num_1.Value = Range("gexp_count_1").Value
    Num_1_Spin.Value = Num_1.Value
    Num_2.Value = Range("gexp_count_2").Value
    Num_2_Spin.Value = Num_2.Value
    Num_3.Value = Range("gexp_count_3").Value
    Num_3_Spin.Value = Num_3.Value
    Num_4.Value = Range("gexp_count_4").Value
    Num_4_Spin.Value = Num_4.Value
    
End Sub


Attribute VB_Name = "AddLease"
Attribute VB_Base = "0{BCA0361D-B46C-4D04-B3D9-447C1384DA81}{89D91FFB-2616-425D-A6D1-AB5B721C74DC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| / |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

Private Sub OKButton_Click()

    Unload AddLease
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Exit Sub
    End If
 
    nWas = CInt(Range("lease_count").Value)
    nWill = CInt(Num_1.Value)
    nTableStep = 19
    
    If nWill <> nWas Then
        Application.ScreenUpdating = False
        
        If nWill > nWas Then
            
            ' ----------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| ---
            
            For nNewItemCount = 1 To nWill - nWas
                nCopyFromStart = Range("lease_count").Row + 1 + (nWas + nNewItemCount - 2) * nTableStep
                nCopyFromEnd = nCopyFromStart + nTableStep - 1
                Range(Rows(nCopyFromStart), Rows(nCopyFromEnd)).Select
                Selection.Copy
                Rows(nCopyFromEnd + 1).Select
                Selection.Insert Shift:=xlDown
                Application.CutCopyMode = False
            Next
            
        End If
        If nWill < nWas Then
            
            ' ------------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| ---
        
            nFromRow = Range("lease_count").Row + 1 + nWill * nTableStep
            nToRow = Range("lease_count").Row + 1 + nWas * nTableStep - 1
            Range(Rows(nFromRow), Rows(nToRow)).Delete
        
        End If
        
        Range("lease_count").Value = nWill
        Application.CutCopyMode = False
        Cells(Range("lease_count").Row - 2, 1).Select
        Application.ScreenUpdating = True
    End If

End Sub

Private Sub Num_1_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(Num_1.Value)) Then Num_1.Value = Range("lease_count").Value
    If (Num_1.Value < 1) Then Num_1.Value = 1
    If (Num_1.Value > 100) Then Num_1.Value = 100
    Num_1_Spin.Value = Num_1.Value
End Sub
Private Sub Num_1_Spin_Change()
    Num_1.Value = Num_1_Spin.Value
End Sub

Private Sub CancelButton_Click()
    Unload AddLease
End Sub

Private Sub UserForm_Initialize()
    
    Num_1.Value = Range("lease_count").Value
    Num_1_Spin.Value = Num_1.Value
    
End Sub

Attribute VB_Name = "AddLoan"
Attribute VB_Base = "0{CF56C1A3-EB19-4C0A-BA65-E8FDCC60211A}{A64DDEA1-8F42-400F-8386-6ACB4F34CF29}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| / |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'----------------------------------------------------------------------------------

Private Sub OKButton_Click()

    Unload AddLoan
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Exit Sub
    End If
 
    nWas = CInt(Range("loan_count").Value)
    nWill = CInt(Num_1.Value)
    nTableStep = 16
    
    If nWill <> nWas Then
        Application.ScreenUpdating = False
        
        If nWill > nWas Then
            
            ' ----------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ---
            
            For nNewItemCount = 1 To nWill - nWas
                nCopyFromStart = Range("loan_count").Row + 1 + (nWas + nNewItemCount - 2) * nTableStep
                nCopyFromEnd = nCopyFromStart + nTableStep - 1
                Range(Rows(nCopyFromStart), Rows(nCopyFromEnd)).Select
                Selection.Copy
                Rows(nCopyFromEnd + 1).Select
                Selection.Insert Shift:=xlDown
                Application.CutCopyMode = False
            Next
            
        End If
        If nWill < nWas Then
            
            ' ------------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ---
        
            nFromRow = Range("loan_count").Row + 1 + nWill * nTableStep
            nToRow = Range("loan_count").Row + 1 + nWas * nTableStep - 1
            
            i = 1
            Do
                If Range(ActiveSheet.Shapes(i).TopLeftCell.Address).Row > nFromRow And _
                   Range(ActiveSheet.Shapes(i).TopLeftCell.Address).Row < nToRow Then
                    ActiveSheet.Shapes(i).Delete
                End If
                i = i + 1
                If i > ActiveSheet.Shapes.Count Then Exit Do
            Loop
            Range(Rows(nFromRow), Rows(nToRow)).Delete
        
        End If
        
        Range("loan_count").Value = nWill
        Application.CutCopyMode = False
        Cells(Range("loan_count").Row - 2, 1).Select
        Application.ScreenUpdating = True
    End If

End Sub

Private Sub Num_1_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(Num_1.Value)) Then Num_1.Value = Range("loan_count").Value
    If (Num_1.Value < 1) Then Num_1.Value = 1
    If (Num_1.Value > 100) Then Num_1.Value = 100
    Num_1_Spin.Value = Num_1.Value
End Sub
Private Sub Num_1_Spin_Change()
    Num_1.Value = Num_1_Spin.Value
End Sub

Private Sub CancelButton_Click()
    Unload AddLoan
End Sub

Private Sub UserForm_Initialize()
    
    Num_1.Value = Range("loan_count").Value
    Num_1_Spin.Value = Num_1.Value
    
End Sub


Attribute VB_Name = "AddPersonnel"
Attribute VB_Base = "0{20922D31-C0CC-4C7E-8B9A-4091A0FE932A}{5BECA6C6-B0BD-4B90-A065-6EA5D4227164}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| / |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

Private Sub OKButton_Click()

    Unload AddPersonnel
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Exit Sub
    End If
    
    Dim nWas(4) As Integer
    Dim nWill(4) As Integer
    nWas(1) = CInt(Range("pers_count_1").Value)
    nWas(2) = CInt(Range("pers_count_2").Value)
    nWas(3) = CInt(Range("pers_count_3").Value)
    nWas(4) = CInt(Range("pers_count_4").Value)
    nWill(1) = CInt(Num_1.Value)
    nWill(2) = CInt(Num_2.Value)
    nWill(3) = CInt(Num_3.Value)
    nWill(4) = CInt(Num_4.Value)
    bSomethingNew = False
    For i = 1 To 4
        If nWill(i) <> nWas(i) Then bSomethingNew = True
    Next
    
    If bSomethingNew Then
        Application.ScreenUpdating = False
        
        For section = 1 To 4
            If nWill(section) > nWas(section) Then
                
                ' ----------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ---
                
                For nNewItemCount = 1 To nWill(section) - nWas(section)
                    nTableStep = 3
                    nCopyFromStart = Range("pers_count_" + Trim(Str(section))).Row + 1 + (nWas(section) + nNewItemCount - 2) * nTableStep
                    nCopyFromEnd = nCopyFromStart + nTableStep - 1
                    Range(Rows(nCopyFromStart), Rows(nCopyFromEnd)).Select
                    Selection.Copy
                    Rows(nCopyFromEnd + 1).Select
                    Selection.Insert Shift:=xlDown
                    Application.CutCopyMode = False
                Next
                
            End If
            If nWill(section) < nWas(section) Then
                
                ' ------------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ---
            
                nTableStep = 3
                nFromRow = Range("pers_count_" + Trim(Str(section))).Row + 1 + nWill(section) * nTableStep
                nToRow = Range("pers_count_" + Trim(Str(section))).Row + 1 + nWas(section) * nTableStep - 1
                Range(Rows(nFromRow), Rows(nToRow)).Delete
            
            End If
        Next
        
        Range("pers_count_1").Value = nWill(1)
        Range("pers_count_2").Value = nWill(2)
        Range("pers_count_3").Value = nWill(3)
        Range("pers_count_4").Value = nWill(4)
        
        Application.CutCopyMode = False
        Cells(Range("pers_count_1").Row - 2, 1).Select
        Application.ScreenUpdating = True
    End If

End Sub

Private Sub Num_1_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(Num_1.Value)) Then Num_1.Value = Range("pers_count_1").Value
    If (Num_1.Value < 1) Then Num_1.Value = 1
    If (Num_1.Value > 100) Then Num_1.Value = 100
    Num_1_Spin.Value = Num_1.Value
End Sub
Private Sub Num_1_Spin_Change()
    Num_1.Value = Num_1_Spin.Value
End Sub

Private Sub Num_2_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(Num_2.Value)) Then Num_2.Value = Range("pers_count_2").Value
    If (Num_2.Value < 1) Then Num_2.Value = 1
    If (Num_2.Value > 100) Then Num_2.Value = 100
    Num_2_Spin.Value = Num_2.Value
End Sub
Private Sub Num_2_Spin_Change()
    Num_2.Value = Num_2_Spin.Value
End Sub

Private Sub Num_3_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(Num_3.Value)) Then Num_3.Value = Range("pers_count_3").Value
    If (Num_3.Value < 1) Then Num_3.Value = 1
    If (Num_3.Value > 100) Then Num_3.Value = 100
    Num_3_Spin.Value = Num_3.Value
End Sub
Private Sub Num_3_Spin_Change()
    Num_3.Value = Num_3_Spin.Value
End Sub

Private Sub Num_4_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(Num_4.Value)) Then Num_4.Value = Range("pers_count_4").Value
    If (Num_4.Value < 1) Then Num_4.Value = 1
    If (Num_4.Value > 100) Then Num_4.Value = 100
    Num_4_Spin.Value = Num_4.Value
End Sub
Private Sub Num_4_Spin_Change()
    Num_4.Value = Num_4_Spin.Value
End Sub

Private Sub CancelButton_Click()
    Unload AddPersonnel
End Sub

Private Sub UserForm_Initialize()
    
    Num_1.Value = Range("pers_count_1").Value
    Num_1_Spin.Value = Num_1.Value
    Num_2.Value = Range("pers_count_2").Value
    Num_2_Spin.Value = Num_2.Value
    Num_3.Value = Range("pers_count_3").Value
    Num_3_Spin.Value = Num_3.Value
    Num_4.Value = Range("pers_count_4").Value
    Num_4_Spin.Value = Num_4.Value
    
End Sub

Attribute VB_Name = "AddProduct"
Attribute VB_Base = "0{27920F0C-A4C0-420F-8FD2-7BCD3B9E3BD9}{67DAF7B4-756A-4B76-B64F-922369677F38}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| / |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

Private Sub OKButton_Click()
    
    nCurCalcMode = Application.Calculation
    nWas = CInt(Range("ProdNum").Value)
    nWill = CInt(ProdNum_1.Value)
    
    Unload AddProduct
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Exit Sub
    End If
    
    If nWill <> nWas Then
        Application.StatusBar = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|..."
        Application.ScreenUpdating = False
        Application.Calculation = xlCalculationManual
        
        Dim StartOfProdTbl(7) As Integer    ' |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Dim ProdTblStep(7) As Integer       ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        For i = 1 To 7
            StartOfProdTbl(i) = Range("prod_tbl_" + Trim(Str(i))).Row
        Next
        ProdTblStep(1) = 1  ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        ProdTblStep(2) = 1  ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        ProdTblStep(3) = 5  ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        ProdTblStep(4) = 13 ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        ProdTblStep(5) = 1  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        ProdTblStep(6) = 1  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        ProdTblStep(7) = 25 ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        
        If nWill < nWas Then
        
            ' ---------------------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ---
        
            For nTable = 7 To 1 Step -1
                nFromRow = StartOfProdTbl(nTable) + nWill * ProdTblStep(nTable)
                nToRow = StartOfProdTbl(nTable) + nWas * ProdTblStep(nTable) - 1
                Range(Rows(nFromRow), Rows(nToRow)).Delete
            Next
        
        Else
        
            ' -------------------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ---
            
            For i = 2 To 7
                StartOfProdTbl(i) = StartOfProdTbl(i) + nProdTblStepMax * (i - 1)
            Next
            
            For nNewProdCount = 1 To nWill - nWas
                
                For nTable = 1 To 7
                
                    Application.StatusBar = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| " + Str(nNewProdCount) + ":" + " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| " + Str(nTable) + " |fffd||fffd| 7"
                    
                    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
                    If nTable > 1 Then
                        For nPrevTable = 1 To nTable - 1
                            If ProdTblStep(nPrevTable) < ProdTblStep(nTable) Then
                                nAddShiftFrom = Range("prod_tbl_" + Trim(Str(nPrevTable))).Row _
                                + ProdTblStep(nPrevTable) * (nWas + nNewProdCount - 1)
                                Rows(nAddShiftFrom).Select
                                nNumOfRows = ProdTblStep(nTable) - ProdTblStep(nPrevTable) - 1
                                Range(Rows(nAddShiftFrom), Rows(nAddShiftFrom + nNumOfRows)).Select
                                Selection.Copy
                                Rows(nAddShiftFrom).Select
                                Selection.Insert Shift:=xlDown
                                ' For i = ProdTblStep(nPrevTable) + 1 To ProdTblStep(nTable)
                                '     Selection.Insert Shift:=xlDown
                                ' Next
                            End If
                        Next
                    End If
                    
                    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    nCopyFromStart = Range("prod_tbl_" + Trim(Str(nTable))).Row + (nWas + nNewProdCount - 2) * ProdTblStep(nTable)
                    nCopyFromEnd = nCopyFromStart + ProdTblStep(nTable) - 1
                    Range(Rows(nCopyFromStart), Rows(nCopyFromEnd)).Select
                    Selection.Copy
                    Rows(nCopyFromEnd + 1).Select
                    Selection.Insert Shift:=xlDown
                    Application.CutCopyMode = False
                    
                    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    If nTable > 1 Then
                        For nPrevTable = 1 To nTable - 1
                            If ProdTblStep(nPrevTable) < ProdTblStep(nTable) Then
                                nDelShiftFrom = Range("prod_tbl_" + Trim(Str(nPrevTable))).Row _
                                + ProdTblStep(nPrevTable) * (nWas + nNewProdCount - 1)
                                nDelShiftTo = nDelShiftFrom + ProdTblStep(nTable) - ProdTblStep(nPrevTable) - 1
                                Range(Rows(nDelShiftFrom), Rows(nDelShiftTo)).Delete
                            End If
                        Next
                    End If
                
                Next
            Next
        
        End If
        
        Range("ProdNum").Value = nWill
        Application.CutCopyMode = False
        Application.Calculation = nCurCalcMode
        Application.ScreenUpdating = True
        Application.StatusBar = False
    End If
    
End Sub

Private Sub ProdNum_1_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(ProdNum_1.Value)) Then ProdNum_1.Value = Range("ProdNum").Value
    If (ProdNum_1.Value < 1) Then ProdNum_1.Value = 1
    If (ProdNum_1.Value > 100) Then ProdNum_1.Value = 100
    ProdNum_1_Spin.Value = ProdNum_1.Value
End Sub

Private Sub ProdNum_1_Spin_Change()
    ProdNum_1.Value = ProdNum_1_Spin.Value
End Sub

Private Sub CancelButton_Click()
    Unload AddProduct
End Sub

Private Sub UserForm_Initialize()
    
    ProdNum_1.Value = Range("ProdNum").Value
    ProdNum_1_Spin.Value = ProdNum_1.Value
    
End Sub

Attribute VB_Name = "AddProject"
Attribute VB_Base = "0{6FA6C083-B4EA-4D7B-9093-51B599BE9887}{699A7B16-7BCA-4422-AC74-37E570B40A8D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

Const MAX_PROJECTS_IN_SHEET As Integer = 20

Dim ProjectNames(MAX_PROJECTS_IN_SHEET + 1) As String
Dim ProjectSheets(MAX_PROJECTS_IN_SHEET + 1) As String
Dim nProjectCount As Integer

Private Sub OKButton_Click()

    AddProject.Hide
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Unload AddProject
        Exit Sub
    End If
    If PrjList.ListIndex < 0 Then
        MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        Unload AddProject
        Exit Sub
    End If
    If nProjectCount >= MAX_PROJECTS_IN_SHEET Then
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| " + CStr(MAX_PROJECTS_IN_SHEET) + " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        Unload AddProject
        Exit Sub
    End If
    
    szCopyFrom = ProjectSheets(PrjList.ListIndex + 1)
    Application.StatusBar = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|..."
    Application.ScreenUpdating = False
    nCurCalcMode = Application.Calculation
    Application.Calculation = xlCalculationManual
    
    ' ----------------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    nPrjCount = CInt(Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_COUNT").Value)
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    
    Sheets(szCopyFrom).Select
    Sheets(szCopyFrom).Copy After:=Sheets(szCopyFrom)
    nPrjCount = nPrjCount + 1
    nNewSheetIndex = Sheets(szCopyFrom).Index + 1
    szNewSheetName = "|fffd||fffd|." + CStr(nPrjCount)
    Sheets(nNewSheetIndex).Name = szNewSheetName
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Select
    nCopyFromProject = 0
    For i = 1 To nPrjCount
        If InStr(Cells(Range("PRJ_COUNT").Row + i, 2).Formula, szCopyFrom) > 0 Then
            nCopyFromProject = i
            Exit For
        End If
    Next
    If nCopyFromProject = 0 Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd|: |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        Unload AddProject
        Exit Sub
    End If
    nCopyFrom = Range("PRJ_COUNT").Row + nCopyFromProject
    Rows(nCopyFrom).Select
    Selection.Copy
    Rows(nCopyFrom + 1).Select
    Selection.Insert Shift:=xlDown
    Application.CutCopyMode = False
    Cells(nCopyFrom + 1, 1).Formula = "='" + szNewSheetName + "'!PRJ_Name"
    Cells(nCopyFrom + 1, 2).Value = szNewSheetName
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_COUNT").Value = nPrjCount
    
    Sheets("|fffd||fffd||fffd||fffd|").Select
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    
    nPrjTitlesRow = Sheets("|fffd||fffd||fffd||fffd|").Range("SUMM_PrjList").Row
    nCopyFrom = nPrjTitlesRow + nCopyFromProject
    Rows(nCopyFrom).Select
    Selection.Copy
    Rows(nCopyFrom + 1).Select
    Selection.Insert Shift:=xlDown
    Application.CutCopyMode = False
    Cells(nCopyFrom + 1, 1).Formula = "=" + Chr(34) + "    " + Chr(34) + "&'" + szNewSheetName + "'!PRJ_Name"
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    
    nRowsInSheet = Sheets("|fffd||fffd||fffd||fffd|").UsedRange.Rows.Count
    szOldPrjMark = "[" + szCopyFrom + "]"
    szNewPrjMark = "[" + szNewSheetName + "]"
    nPrjLen = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_Len").Value
    For r = 1 To nRowsInSheet
        If InStr(Cells(r, 4).Value, szOldPrjMark) > 0 Then
            Rows(r).Select
            Selection.Copy
            Rows(r + 1).Select
            Selection.Insert Shift:=xlDown
            Application.CutCopyMode = False
            For c = 4 To 7 + nPrjLen
                Cells(r + 1, c).Formula = Replace(Cells(r + 1, c).Formula, szCopyFrom, szNewSheetName)
            Next
        End If
    Next
    
    Range("A1").Select
    
    ' ----------------------------------------------------------- |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|

    Unload AddProject
    Application.Calculation = nCurCalcMode
    Application.ScreenUpdating = True
    Application.StatusBar = False
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Select
    Range("A1").Select

End Sub


Private Sub CancelButton_Click()
    Unload AddProject
End Sub

Private Sub UserForm_Initialize()
    
    nProjectCount = 1
    
    ProjectNames(1) = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_Name").Value
    ProjectSheets(1) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
    PrjList.AddItem ProjectNames(1) + " (" + ProjectSheets(1) + ")"
    
    For sh = 1 To Sheets.Count
        If InStr(Sheets(sh).Name, "|fffd||fffd|.") = 1 Then
            nProjectCount = nProjectCount + 1
            ProjectNames(nProjectCount) = Sheets(sh).Range("PRJ_Name").Value
            ProjectSheets(nProjectCount) = Sheets(sh).Name
            PrjList.AddItem ProjectNames(nProjectCount) + " (" + ProjectSheets(nProjectCount) + ")"
        End If
    Next

    
End Sub


Attribute VB_Name = "AutoLoan"
Attribute VB_Base = "0{C08F41E2-9BB7-412F-BDFA-63F593794B1F}{6B9B77F7-32CF-40F8-B6C2-B2B2034F7566}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

Dim nPrjLen As Integer
Dim nLoanButtonRow As Integer
Dim nLoanGetRow As Integer
Dim nLoanRepayRow As Integer
Dim nLoanInterestRow As Integer
Dim nLoanRestRow As Integer
Dim nLoanInterestRateRow As Integer
Dim nCashRow As Integer
Dim nLoanCurrencyRow As Integer

Private Sub OKButton_Click()

    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Unload AutoLoan
        Exit Sub
    End If
    
    nLookFrom = CInt(RepayFrom.Value)
    If nLookFrom < 1 Or nLookFrom > nPrjLen Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    End If
    nLookTill = nLookFrom + RepayPeriod.Value - 1
    If nLookTill > nPrjLen Then nLookTill = nPrjLen
    
    Application.StatusBar = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|..."
    Application.ScreenUpdating = False
    nCurCalcMode = Application.Calculation
    Application.Calculation = xlSemiautomatic
    
    nPrjStep = Range("PRJ_Step").Value
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|

    nPayCount = nLookTill - nLookFrom + 1
    dCover = CDbl(Cover.Value)
    
    For nPeriod = 0 To nPrjLen
    
        Cells(nLoanRepayRow, 6 + nPeriod).Value = 0
        dCurDebt = Cells(nLoanRestRow, 6 + nPeriod).Value
        If OptionButton4.Value Then
            Cells(nLoanGetRow, 6 + nPeriod).Value = 0
        End If
        
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        If OptionButton1.Value Then
            If nPeriod >= nLookFrom And nPeriod <= nLookTill Then
                Cells(nLoanRepayRow, 6 + nPeriod).Value = dCurDebt / nPayCount
                nPayCount = nPayCount - 1
            End If
        End If

        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If OptionButton2.Value Then
            If nPeriod >= nLookFrom And nPeriod <= nLookTill Then
                Cells(nLoanRepayRow, 6 + nPeriod).Value = _
                        Application.Pmt(Cells(nLoanInterestRateRow, 6 + nPeriod).Value * nPrjStep / 360, nPayCount, -dCurDebt) _
                        - Cells(nLoanInterestRow, 6 + nPeriod).Value
                nPayCount = nPayCount - 1
            End If
        End If
    
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If OptionButton3.Value Then
            If nPeriod >= nLookFrom And nPeriod <= nLookTill Then
                nLoanCurrency = Cells(nLoanCurrencyRow, 2).Value
                nReportCurrency = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("CUR_I_Report").Value
                dCurrRate = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Cells(Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("CurrencyRate").Row, 6 + nPeriod)
                kCurrRate = 1
                If nLoanCurrency <> nReportCurrency Then
                    If nLoanCurrency = 1 Then
                        kCurrRate = dCurrRate
                    Else
                        kCurrRate = 1 / dCurrRate
                    End If
                End If
                dCashWithoutPayment = kCurrRate * Cells(nCashRow, 6 + nPeriod).Value
                dInterest = kCurrRate * Cells(nLoanInterestRow, 6 + nPeriod).Value
                dCanPay = (dCashWithoutPayment + dInterest) / dCover - dInterest
                dWantPay = Application.Min(dCanPay, dCurDebt)
                Cells(nLoanRepayRow, 6 + nPeriod).Value = Application.Max(0, dWantPay)
            End If
        End If
    
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If OptionButton4.Value Then
            nLoanCurrency = Cells(nLoanCurrencyRow, 2).Value
            nReportCurrency = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("CUR_I_Report").Value
            dCurrRate = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Cells(Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("CurrencyRate").Row, 6 + nPeriod)
            kCurrRate = 1
            If nLoanCurrency <> nReportCurrency Then
                If nLoanCurrency = 1 Then
                    kCurrRate = dCurrRate
                Else
                    kCurrRate = 1 / dCurrRate
                End If
            End If
            If nPeriod <= nLookTill Then
                dCashWithoutPayment = kCurrRate * Cells(nCashRow, 6 + nPeriod).Value
                If dCashWithoutPayment < 0 Then
                    Cells(nLoanGetRow, 6 + nPeriod).Value = -dCashWithoutPayment
                Else
                    If nPeriod >= nLookFrom Then
                        dInterest = kCurrRate * Cells(nLoanInterestRow, 6 + nPeriod).Value
                        dCanPay = (dCashWithoutPayment + dInterest) / dCover - dInterest
                        dWantPay = Application.Min(dCanPay, dCurDebt)
                        Cells(nLoanRepayRow, 6 + nPeriod).Value = Application.Max(0, dWantPay)
                    End If
                End If
            End If
        End If
    
    Next
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|

    Unload AutoLoan
    Cells(nLoanButtonRow, 1).Select
    Application.CutCopyMode = False
    Application.Calculation = nCurCalcMode
    Application.ScreenUpdating = True
    Application.StatusBar = False

End Sub

Private Sub RepayFrom_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(RepayFrom.Value)) Then RepayFrom.Value = 1
    If (RepayFrom.Value < 1) Then RepayFrom.Value = 1
    If (RepayFrom.Value > nPrjLen) Then RepayFrom.Value = nPrjLen
    RepayFrom_Spin.Value = RepayFrom.Value
End Sub
Private Sub RepayFrom_Spin_Change()
    RepayFrom.Value = RepayFrom_Spin.Value
End Sub

Private Sub RepayPeriod_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(RepayPeriod.Value)) Then RepayPeriod.Value = 1
    If (RepayPeriod.Value < 1) Then RepayPeriod.Value = 1
    If (RepayPeriod.Value > nPrjLen) Then RepayPeriod.Value = nPrjLen
    RepayPeriod_Spin.Value = RepayPeriod.Value
End Sub
Private Sub RepayPeriod_Spin_Change()
    RepayPeriod.Value = RepayPeriod_Spin.Value
End Sub

Private Sub Cover_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(Cover.Value)) Then Cover.Value = CStr(1)
    If (CDbl(Cover.Value) < 0.1) Then Cover.Value = CStr(0.1)
    If (CDbl(Cover.Value) > 10) Then Cover.Value = CStr(10)
    Cover_Spin.Value = CDbl(Cover.Value) * 100
End Sub
Private Sub Cover_Spin_Change()
    Cover.Value = CStr(Cover_Spin.Value / 100)
End Sub

Private Sub CancelButton_Click()
    Unload AutoLoan
End Sub

Private Sub UserForm_Activate()

    If (InStr(Cells(nLoanButtonRow, 4).Value, "autoloan_button") < 1) Or _
       (InStr(Cells(nLoanGetRow, 4).Value, "_01") < 1) Or _
       (InStr(Cells(nLoanRepayRow, 4).Value, "_02") < 1) Or _
       (InStr(Cells(nLoanInterestRow, 4).Value, "_03") < 1) Or _
       (InStr(Cells(nLoanRestRow, 4).Value, "_04") < 1) Or _
       (InStr(Cells(nLoanInterestRateRow, 4).Value, "int_rate") < 1) Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|."
        Unload AutoLoan
    End If

End Sub

Private Sub UserForm_Initialize()

    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    nLoanButtonRow = Range(ActiveSheet.DrawingObjects(Application.Caller).TopLeftCell.Address).Row
    nLoanGetRow = nLoanButtonRow + 1
    nLoanRepayRow = nLoanButtonRow + 2
    nLoanInterestRow = nLoanButtonRow + 3
    nLoanRestRow = nLoanButtonRow + 4
    nLoanInterestRateRow = nLoanButtonRow - 2
    nLoanCurrencyRow = nLoanButtonRow - 3
    
    nCashRow = Range("Cash_At_End").Row
    
    nPrjLen = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_Len").Value
    LoanName.Caption = CStr(Cells(nLoanButtonRow - 5, 1).Value)
    
    RepayFrom.Value = 1
    RepayFrom_Spin.Value = 1
    RepayFrom_Spin.Max = nPrjLen

    RepayPeriod.Value = nPrjLen
    RepayPeriod_Spin.Value = nPrjLen
    RepayPeriod_Spin.Max = nPrjLen

    Cover.Value = CStr(1)
    Cover_Spin.Value = 100

End Sub


Attribute VB_Name = "DelProject"
Attribute VB_Base = "0{2EEB79A8-ECE8-4225-A763-543DCFCBC11F}{CF65E367-DBA0-4B0A-8656-765ACCEB0AA0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

Dim ProjectNames(20) As String
Dim ProjectSheets(20) As String
Dim nProjectCount As Integer

Private Sub OKButton_Click()

    DelProject.Hide
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Unload DelProject
        Exit Sub
    End If
    
    If PrjList.ListIndex < 0 Then
        MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        Unload DelProject
        Exit Sub
    End If
    
    szPrjToDelete = ProjectSheets(PrjList.ListIndex + 1)
    Application.StatusBar = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|..."
    Application.ScreenUpdating = False
    nCurCalcMode = Application.Calculation
    Application.Calculation = xlCalculationManual
    
    ' ----------------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Select
    nPrjCount = CInt(Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_COUNT").Value)
    nProjectToDel = 0
    For i = 1 To nPrjCount
        If InStr(Cells(Range("PRJ_COUNT").Row + i, 2).Formula, szPrjToDelete) > 0 Then
            nProjectToDel = i
            Exit For
        End If
    Next
    If nProjectToDel = 0 Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd|: |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        Unload DelProject
        Exit Sub
    End If
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    
    Sheets("|fffd||fffd||fffd||fffd|").Select
    
    nRowsInSheet = Sheets("|fffd||fffd||fffd||fffd|").UsedRange.Rows.Count
    szPrjMark = "[" + szPrjToDelete + "]"
    nPrjLen = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_Len").Value
    For r = 1 To nRowsInSheet
        If InStr(Cells(r, 4).Value, szPrjMark) > 0 Then
            Rows(r).Delete
        End If
    Next
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    
    nPrjTitlesRow = Sheets("|fffd||fffd||fffd||fffd|").Range("SUMM_PrjList").Row
    nRowToDel = nPrjTitlesRow + nProjectToDel
    Rows(nRowToDel).Delete
    Range("A1").Select
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Select
    
    nDelFrom = Range("PRJ_COUNT").Row + nProjectToDel
    Rows(nDelFrom).Delete
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_COUNT").Value = nPrjCount - 1
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    Application.DisplayAlerts = False
    Sheets(szPrjToDelete).Delete
    Application.DisplayAlerts = True
    
    ' ----------------------------------------------------------- |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|

    Unload DelProject
    Application.Calculation = nCurCalcMode
    Application.ScreenUpdating = True
    Application.StatusBar = False
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Select
    Range("A1").Select
    
End Sub


Private Sub CancelButton_Click()
    Unload DelProject
End Sub

Private Sub UserForm_Activate()

    If nProjectCount = 0 Then
        Unload DelProject
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        Exit Sub
    End If

End Sub

Private Sub UserForm_Initialize()
    
    nProjectCount = 0
    For sh = 1 To Sheets.Count
        If InStr(Sheets(sh).Name, "|fffd||fffd|.") = 1 Then
            nProjectCount = nProjectCount + 1
            ProjectNames(nProjectCount) = Sheets(sh).Range("PRJ_Name").Value
            ProjectSheets(nProjectCount) = Sheets(sh).Name
            PrjList.AddItem ProjectNames(nProjectCount) + " (" + ProjectSheets(nProjectCount) + ")"
        End If
    Next
    
End Sub


Attribute VB_Name = "EST_AddStage"
Attribute VB_Base = "0{B50A1F99-4E1D-4BD3-B9B0-2C2C7710677D}{84A9213A-62EE-4AC6-9A9A-12DD3F6DCA6F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| / |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ESTATE
'----------------------------------------------------------------------------------

Private Sub OKButton_Click()
    
    nCurCalcMode = Application.Calculation
    nWas = CInt(Range("EST_NumStages").Value)
    nWill = CInt(Num_1.Value)
    
    Unload Me
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Exit Sub
    End If
    
    If nWill <> nWas Then
        Application.ScreenUpdating = False
        Application.Calculation = xlCalculationManual
        
        If nWill < nWas Then
        
            ' ---------------------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ---
        
            nTableStep = 7
            nStartOfTable = Range("EST_NumStages").Row + 2
            nFromRow = nStartOfTable + nWill * nTableStep
            nToRow = nStartOfTable + nWas * nTableStep - 1
            Range(Rows(nFromRow), Rows(nToRow)).Delete
        
        Else
        
            ' -------------------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ---
            
            nStartOfTable = Range("EST_NumStages").Row + 2
            nTableStep = 7
            
            For nNewItemCount = 1 To nWill - nWas
                nCopyFromStart = nStartOfTable + (nWas + nNewItemCount - 2) * nTableStep
                nCopyFromEnd = nCopyFromStart + nTableStep - 1
                Range(Rows(nCopyFromStart), Rows(nCopyFromEnd)).Select
                Selection.Copy
                Rows(nCopyFromEnd + 1).Select
                Selection.Insert Shift:=xlDown
                Application.CutCopyMode = False
            Next
            
        End If
        
        Range("EST_NumStages").Value = nWill
        Cells(Range("EST_NumStages").Row, 1).Select
        Application.CutCopyMode = False
        Application.Calculation = nCurCalcMode
        Application.ScreenUpdating = True
    End If
    
End Sub

Private Sub Num_1_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(Num_1.Value)) Then Num_1.Value = Range("EST_NumStages").Value
    If (Num_1.Value < 1) Then Num_1.Value = 1
    If (Num_1.Value > 100) Then Num_1.Value = 100
    Num_1_Spin.Value = Num_1.Value
End Sub
Private Sub Num_1_Spin_Change()
    Num_1.Value = Num_1_Spin.Value
End Sub

Private Sub CancelButton_Click()
    Unload Me
End Sub

Private Sub UserForm_Initialize()
    
    Num_1.Value = Range("EST_NumStages").Value
    Num_1_Spin.Value = Num_1.Value
    
End Sub


Attribute VB_Name = "EST_AddType"
Attribute VB_Base = "0{3EBA931B-B0C0-4689-8E19-20EB2214D4C7}{CBEA9598-1378-4FC0-B1F5-B7B550E0D7ED}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| / |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ESTATE
'----------------------------------------------------------------------------------

Private Sub OKButton_Click()
    
    nCurCalcMode = Application.Calculation
    nWas = CInt(Range("EST_ProdNum").Value)
    nWill = CInt(Num_1.Value)
    
    Unload Me
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Exit Sub
    End If
    
    If nWill <> nWas Then
        Application.ScreenUpdating = False
        Application.Calculation = xlCalculationManual
        
        If nWill < nWas Then
        
            ' ---------------------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ---
        
            For nTable = 10 To 1 Step -1
                szTblName = "EST_Obj_" + Format(nTable)
                nStartOfTable = Range(szTblName).Row + 1
                nFromRow = nStartOfTable + nWill
                nToRow = nStartOfTable + nWas - 1
                Range(Rows(nFromRow), Rows(nToRow)).Delete
            Next
        
        Else
        
            ' -------------------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ---
            
            For nTable = 1 To 10
            
                szTblName = "EST_Obj_" + Format(nTable)
                nStartOfTable = Range(szTblName).Row + 1
                
                For nNewItemCount = 1 To nWill - nWas
                    nCopyFromStart = nStartOfTable + nWas + nNewItemCount - 2
                    nCopyFromEnd = nCopyFromStart
                    Range(Rows(nCopyFromStart), Rows(nCopyFromEnd)).Select
                    Selection.Copy
                    Rows(nCopyFromEnd + 1).Select
                    Selection.Insert Shift:=xlDown
                    Application.CutCopyMode = False
                Next
            
            Next
            
        End If
        
        Range("EST_ProdNum").Value = nWill
        Cells(Range("EST_ProdNum").Row, 1).Select
        Application.CutCopyMode = False
        Application.Calculation = nCurCalcMode
        Application.ScreenUpdating = True
    End If
    
End Sub

Private Sub Num_1_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(Num_1.Value)) Then Num_1.Value = Range("EST_ProdNum").Value
    If (Num_1.Value < 1) Then Num_1.Value = 1
    If (Num_1.Value > 100) Then Num_1.Value = 100
    Num_1_Spin.Value = Num_1.Value
End Sub
Private Sub Num_1_Spin_Change()
    Num_1.Value = Num_1_Spin.Value
End Sub

Private Sub CancelButton_Click()
    Unload Me
End Sub

Private Sub UserForm_Initialize()
    
    Num_1.Value = Range("EST_ProdNum").Value
    Num_1_Spin.Value = Num_1.Value
    
End Sub



Attribute VB_Name = "GenerateReport"
Attribute VB_Base = "0{24B06300-0A8F-4D9B-877B-4BAF6978B9D2}{FF45BE3D-1FD5-4AAE-9F2C-E2F0A667970E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd|"
'
'----------------------------------------------------------------------------------

Const SECT_TABLE As Integer = 1
Const SECT_CHART As Integer = 2

Dim SectionNames(60) As String
Dim SectionTypes(60) As Integer
Dim SectionRangeNames(60) As String
Dim nSectionsCount As Integer

Dim SheetNames(25) As String
Dim SheetCaptions(25) As String
Dim nSheetsCount As Integer

Dim nPrjLen As Integer
Dim nFirstYear_Q, nLastYear_Q As Integer
Dim nFirstYear_Y, nLastYear_Y As Integer

Private Sub OKButton_Click()

    GenerateReport.Hide
    
    Application.StatusBar = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|..."
    Application.ScreenUpdating = False
    nCurCalcMode = Application.Calculation
    Application.Calculation = xlCalculationManual
    
    ' ----------------------------------------------------------- |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    
    nLastRowOfReport = 1
    nGenerateFromSheet = ActiveSheet.Index
    szGenerateFromSheet = ActiveSheet.Name
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Select
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    
    nMonthsInPeriod = Choose(CInt(Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_StepType").Value), 1, 3, 6, 12)
    nQFromYear = 0
    If CompressQ.Value Then
        nQFromYear = CInt(ByQuarters.Value)
    End If
    nYFromYear = 0
    nYK = 0
    If CompressY.Value Then
        nYFromYear = CInt(ByYears.Value)
        nYK = Choose(CInt(Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_StepType").Value), 12, 4, 2, 1)
    End If
    nStartYear = CInt(Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_StartYear").Value)
    nStartMon = CInt(Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_StartMon").Value)
    
    nYFromPeriod = 0
    nYPeriods = 0
    If CompressY.Value Then
        If nYFromYear = nStartYear Then
            nYFromPeriod = 1
            nYPeriods = WorksheetFunction.RoundUp(nPrjLen / nYK, 0)
        Else
            nYFromPeriod = (nYFromYear - nStartYear) * nYK - (nStartMon - 1) / 12 * nYK + 1
            nYPeriods = WorksheetFunction.RoundUp((nPrjLen - nYFromPeriod) / nYK, 0)
        End If
    End If
    
    nQFromPeriod = 0
    nQPeriods = 0
    If CompressQ.Value Then
        If nQFromYear = nStartYear Then
            nQFromPeriod = 1
            If nYFromPeriod > 0 Then
                nQPeriods = WorksheetFunction.RoundUp((nYFromPeriod - 1) / 3, 0)
            Else
                nQPeriods = WorksheetFunction.RoundUp(nPrjLen / 3, 0)
            End If
        Else
            nQFromPeriod = (nQFromYear - nStartYear) * 12 - (nStartMon - 1) + 1
            If nYFromPeriod > 0 Then
                nQPeriods = WorksheetFunction.RoundUp((nYFromPeriod - nQFromPeriod) / 3, 0)
            Else
                nQPeriods = WorksheetFunction.RoundUp((nPrjLen - nQFromPeriod) / 3, 0)
            End If
        End If
    End If
    
    nNotCompressedPeriods = nPrjLen
    If nQFromPeriod > 0 Then nNotCompressedPeriods = nQFromPeriod - 1
    If nYFromPeriod > 0 Then nNotCompressedPeriods = WorksheetFunction.Min(nYFromPeriod - 1, nNotCompressedPeriods)
    
    nPeriodsInReport = nNotCompressedPeriods + nQPeriods + nYPeriods
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    
    If DoNotClear.Value Then
        nLastRowOfReport = ActiveSheet.UsedRange.Rows.Count + 3
    Else
        ActiveSheet.UsedRange.EntireRow.Delete
        For col = 1 To 6 + nPeriodsInReport
            ActiveSheet.Columns(col).ColumnWidth = Sheets(nGenerateFromSheet).Columns(col).ColumnWidth
        Next
        ActiveSheet.Columns(7 + nPeriodsInReport).ColumnWidth = Sheets(nGenerateFromSheet).Columns(7 + nPrjLen).ColumnWidth
        ActiveSheet.Columns(8 + nPeriodsInReport).ColumnWidth = Sheets(nGenerateFromSheet).Columns(8 + nPrjLen).ColumnWidth
    End If
    
    ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|
    
    For nCurSection = 1 To SectionsList.ListCount
        If SectionsList.Selected(nCurSection - 1) Then
            
            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|
            
            If SectionTypes(nCurSection) = SECT_TABLE Then
                
                Set rngTable = Sheets(nGenerateFromSheet).Range(SectionRangeNames(nCurSection))
                rngTable.Rows(1).EntireRow.ShowDetail = True
                
                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
                
                Set rngCopyFrom = Range(rngTable.Columns(1), rngTable.Columns(6 + nPeriodsInReport))
                Set rngCopyTo = Range(Cells(nLastRowOfReport, 1), Cells(nLastRowOfReport + rngTable.Rows.Count - 1, 6 + nPeriodsInReport))
                rngCopyFrom.Copy
                rngCopyTo.PasteSpecial xlPasteFormats
                
                Set rngCopyFrom = Range(rngTable.Columns(7 + nPrjLen), rngTable.Columns(8 + nPrjLen))
                Set rngCopyTo = Range(Cells(nLastRowOfReport, 7 + nPeriodsInReport), Cells(nLastRowOfReport + rngTable.Rows.Count - 1, 8 + nPeriodsInReport))
                rngCopyFrom.Copy
                rngCopyTo.PasteSpecial xlPasteFormats
                
                Set rngCopyTo = Range(Cells(nLastRowOfReport, 1), Cells(nLastRowOfReport + rngTable.Rows.Count - 1, 8 + nPeriodsInReport))
                
                For i = 1 To rngTable.Rows.Count
                    rngCopyTo.Rows(i).RowHeight = rngTable.Rows(i).RowHeight
                Next
                For i = 2 To rngTable.Rows.Count
                    rngCopyTo.Rows(i).Interior.ColorIndex = 0
                Next
                
                ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
                
                Set rngTable = Sheets(nGenerateFromSheet).Range(SectionRangeNames(nCurSection))
                
                For nRow = 1 To rngTable.Rows.Count
                    
                    For nCol = 1 To 6
                        If Not IsEmpty(rngTable.Cells(nRow, nCol).Value) Then
                            szCellName = rngTable.Cells(nRow, nCol).Address
                            rngCopyTo.Cells(nRow, nCol).Formula = "=" + szGenerateFromSheet + "!" + szCellName
                        End If
                    Next
                    
                    nColInSrc = 7
                    nColInDest = 7
                    
                    If nNotCompressedPeriods > 0 Then
                        For nPeriod = 1 To nNotCompressedPeriods
                            If Not IsEmpty(rngTable.Cells(nRow, nColInSrc).Value) Then
                                szCellName = rngTable.Cells(nRow, nColInSrc).Address
                                rngCopyTo.Cells(nRow, nColInDest).Formula = "=" + szGenerateFromSheet + "!" + szCellName
                            End If
                            nColInSrc = nColInSrc + 1
                            nColInDest = nColInDest + 1
                        Next
                    End If
                    For nPeriod = 1 To 2
                        If Not IsEmpty(rngTable.Cells(nRow, 6 + nPrjLen + nPeriod).Value) Then
                            szCellName = rngTable.Cells(nRow, 6 + nPrjLen + nPeriod).Address
                            rngCopyTo.Cells(nRow, 6 + nPeriodsInReport + nPeriod).Formula = "=" + szGenerateFromSheet + "!" + szCellName
                        End If
                    Next
                    
                    nCompressType = 0
                    If InStr(rngTable.Cells(nRow, 4).Value, "int_sum") > 0 Then nCompressType = 1
                    If InStr(rngTable.Cells(nRow, 4).Value, "int_end") > 0 Then nCompressType = 2
                    If InStr(rngTable.Cells(nRow, 4).Value, "int_start") > 0 Then nCompressType = 3
                    If InStr(rngTable.Cells(nRow, 4).Value, "int_avg") > 0 Then nCompressType = 4
                    If nRow = 1 Then nCompressType = 5
                    
                    If nQPeriods > 0 Then
                        For nPeriod = 1 To nQPeriods
                            If Not IsEmpty(rngTable.Cells(nRow, nColInSrc).Value) Then
                                szFormulaSt = rngTable.Cells(nRow, nColInSrc).Address
                                nShift = WorksheetFunction.Min(2, nPrjLen - (nColInSrc - 6))
                                szFormulaEnd = rngTable.Cells(nRow, nColInSrc + nShift).Address
                                Select Case nCompressType
                                    Case 0
                                        szFormula = "=SUM(" + szGenerateFromSheet + "!" + szFormulaSt + ":" + szFormulaEnd + ")"
                                    Case 1
                                        szFormula = "=SUM(" + szGenerateFromSheet + "!" + szFormulaSt + ":" + szFormulaEnd + ")"
                                    Case 2
                                        szFormula = "=" + szGenerateFromSheet + "!" + szFormulaEnd
                                    Case 3
                                        szFormula = "=" + szGenerateFromSheet + "!" + szFormulaSt
                                    Case 4
                                        szFormula = "=AVERAGE(" + szGenerateFromSheet + "!" + szFormulaSt + ":" + szFormulaEnd + ")"
                                    Case 5
                                        szFormula = "=" + Chr(34) + CStr(nPeriod - Int((nPeriod - 1) / 4) * 4) + " |fffd||fffd|. " + CStr(nQFromYear + Int((nPeriod - 1) / 4) * 4) + Chr(34)
                                End Select
                                rngCopyTo.Cells(nRow, nColInDest).Formula = szFormula
                            End If
                            nColInSrc = nColInSrc + 3
                            nColInDest = nColInDest + 1
                        Next
                    End If
                    
                    If nYPeriods > 0 Then
                        For nPeriod = 1 To nYPeriods
                            If Not IsEmpty(rngTable.Cells(nRow, nColInSrc).Value) Then
                                szFormulaSt = rngTable.Cells(nRow, nColInSrc).Address
                                nShift = WorksheetFunction.Min(nYK - 1, nPrjLen - (nColInSrc - 6))
                                szFormulaEnd = rngTable.Cells(nRow, nColInSrc + nShift).Address
                                Select Case nCompressType
                                    Case 0
                                        szFormula = "=SUM(" + szGenerateFromSheet + "!" + szFormulaSt + ":" + szFormulaEnd + ")"
                                    Case 1
                                        szFormula = "=SUM(" + szGenerateFromSheet + "!" + szFormulaSt + ":" + szFormulaEnd + ")"
                                    Case 2
                                        szFormula = "=" + szGenerateFromSheet + "!" + szFormulaEnd
                                    Case 3
                                        szFormula = "=" + szGenerateFromSheet + "!" + szFormulaSt
                                    Case 4
                                        szFormula = "=AVERAGE(" + szGenerateFromSheet + "!" + szFormulaSt + ":" + szFormulaEnd + ")"
                                    Case 5
                                        szFormula = "=" + Chr(34) + CStr(nYFromYear + (nPeriod - 1)) + " |fffd|." + Chr(34)
                                End Select
                                rngCopyTo.Cells(nRow, nColInDest).Formula = szFormula
                            End If
                            nColInSrc = nColInSrc + nYK
                            nColInDest = nColInDest + 1
                        Next
                    End If
                
                Next
                
                nLastRowOfReport = nLastRowOfReport + rngTable.Rows.Count + 2
            End If
            
            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|
            
            If SectionTypes(nCurSection) = SECT_CHART Then
                Set rngChart = Sheets(nGenerateFromSheet).Range(SectionRangeNames(nCurSection))
                Set rngChartRow = rngChart.Rows(1).EntireRow
                If rngChartRow.Hidden Then
                    For i = 1 To 100
                        If rngChartRow.Offset(-i, 0).OutlineLevel = 1 Then
                            rngChartRow.Offset(-i, 0).ShowDetail = True
                            Exit For
                        End If
                    Next
                End If
                rngChartRow.ShowDetail = True
                
                Set rngCopyTo = Sheets("|fffd||fffd||fffd||fffd||fffd|").Cells(nLastRowOfReport, 1)
                rngChart.Copy rngCopyTo
                nLastRowOfReport = nLastRowOfReport + rngChart.Rows.Count + 2
            End If
        
        End If
    Next
    
    ' ----------------------------------------------------------- |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|

    Unload GenerateReport
    Application.Calculation = nCurCalcMode
    Application.ScreenUpdating = True
    Application.StatusBar = False
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Select
    Range("A1").Select
    
End Sub


Private Sub CompressQ_Change()

    If CompressQ.Value Then
        ByQuarters.Enabled = True
        ByQuarters_Spin.Enabled = True
    Else
        ByQuarters.Enabled = False
        ByQuarters_Spin.Enabled = False
    End If

End Sub

Private Sub CompressY_Change()

    If CompressY.Value Then
        ByYears.Enabled = True
        ByYears_Spin.Enabled = True
    Else
        ByYears.Enabled = False
        ByYears_Spin.Enabled = False
    End If

End Sub

Private Sub SheetsList_Change()

    Sheets(SheetNames(SheetsList.ListIndex + 1)).Select
    SectionsList.Clear
    LoadTablesAndCharts

End Sub

Private Sub ByQuarters_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(ByQuarters.Value)) Then ByQuarters.Value = nFirstYear_Q
    If (ByQuarters.Value < nFirstYear_Q) Then ByQuarters.Value = nFirstYear_Q
    If (ByQuarters.Value > nLastYear_Q) Then ByQuarters.Value = nLastYear_Q
    ByQuarters_Spin.Value = ByQuarters.Value
End Sub

Private Sub ByQuarters_Spin_Change()
    ByQuarters.Value = ByQuarters_Spin.Value
End Sub

Private Sub ByYears_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(ByYears.Value)) Then ByYears.Value = nFirstYear_Y
    If (ByYears.Value < nFirstYear_Y) Then ByYears.Value = nFirstYear_Y
    If (ByYears.Value > nLastYear_Y) Then ByYears.Value = nLastYear_Y
    ByYears_Spin.Value = ByYears.Value
End Sub

Private Sub ByYears_Spin_Change()
    ByYears.Value = ByYears_Spin.Value
End Sub

Private Sub UserForm_Initialize()
    
    nPrjLen = CInt(Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_Len").Value)
    nPrjMonthInStep = CInt(Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_Step").Value) / 30
    nPrjStepIndex = CInt(Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_StepType").Value)
    nPrjStartYear = CInt(Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_StartYear").Value)
    nPrjStartMonth = CInt(Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_StartMon").Value)
    dtEndDate = DateSerial(nPrjStartYear, nPrjStartMonth + (nPrjLen - 1) * nPrjMonthInStep, 1)
    nPrjLastYear = Year(dtEndDate)
    
    If nPrjStepIndex = 1 Then
        nFirstYear_Q = nPrjStartYear
        nLastYear_Q = nPrjLastYear
        ByQuarters_Spin.Min = nFirstYear_Q
        ByQuarters_Spin.Max = nLastYear_Q
        
        If nPrjStartMonth > 1 Then
            nFirstYear_Q = nFirstYear_Q + 1
            If nFirstYear_Q > nLastYear_Q Then
                CompressQ.Enabled = False
                nFirstYear_Q = 0
                nLastYear_Q = 0
            End If
        End If
        If nFirstYear_Q > 0 Then
            ByQuarters_Spin.Min = nFirstYear_Q
            ByQuarters_Spin.Max = nLastYear_Q
        End If
    Else
        CompressQ.Enabled = False
        nFirstYear_Q = 0
        nLastYear_Q = 0
    End If
    
    If nPrjStepIndex < 4 Then
        nFirstYear_Y = nPrjStartYear
        nLastYear_Y = nPrjLastYear
        If nPrjStartMonth > 1 Then
            nFirstYear_Y = nFirstYear_Y + 1
            If nFirstYear_Y > nLastYear_Y Then
                CompressY.Enabled = False
                nFirstYear_Y = 0
                nLastYear_Y = 0
            End If
        End If
        If nFirstYear_Y > 0 Then
            ByYears_Spin.Min = nFirstYear_Y
            ByYears_Spin.Max = nLastYear_Y
        End If
    Else
        CompressY.Enabled = False
        nFirstYear_Y = 0
        nLastYear_Y = 0
    End If
    
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_SUMM").Value Then
        SheetNames(1) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        SheetNames(2) = "|fffd||fffd||fffd||fffd|"
        SheetNames(3) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
        SheetCaptions(1) = Sheets(SheetNames(1)).Range("A2").Value
        SheetCaptions(2) = Sheets(SheetNames(2)).Range("A2").Value
        SheetCaptions(3) = Sheets(SheetNames(3)).Range("PRJ_Name").Value
        nSheetsCount = 3
        For sh = 1 To Sheets.Count
            If InStr(Sheets(sh).Name, "|fffd||fffd|.") = 1 Then
                nSheetsCount = nSheetsCount + 1
                SheetNames(nSheetsCount) = Sheets(sh).Name
                SheetCaptions(nSheetsCount) = Sheets(sh).Range("PRJ_Name").Value
            End If
        Next
        For i = 1 To nSheetsCount
            SheetsList.AddItem SheetCaptions(i)
        Next
        SheetsList.ListIndex = 1
        Sheets(SheetNames(SheetsList.ListIndex + 1)).Select
        LoadTablesAndCharts
    Else
        SheetsListPrompt.Visible = False
        SheetsList.Visible = False
        SectionsListPrompt.Top = SheetsListPrompt.Top
        nNewSectHeight = SectionsList.Height + SectionsList.Top - SheetsList.Top
        SectionsList.Top = SheetsList.Top
        SectionsList.Height = nNewSectHeight
        Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Select
        LoadTablesAndCharts
    End If
    
End Sub

Private Sub LoadTablesAndCharts()

    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    
    nSectionsCount = 0
    nTotalNamesCount = ActiveSheet.Names.Count
    
    For i = 1 To nTotalNamesCount
        If InStr(ActiveSheet.Names(i).Name, "Table_") > 0 Then
            nSectionsCount = nSectionsCount + 1
            SectionRangeNames(nSectionsCount) = ActiveSheet.Names(i).Name
            SectionTypes(nSectionsCount) = SECT_TABLE
        End If
        If InStr(ActiveSheet.Names(i).Name, "Chart_") > 0 Then
            nSectionsCount = nSectionsCount + 1
            SectionRangeNames(nSectionsCount) = ActiveSheet.Names(i).Name
            SectionTypes(nSectionsCount) = SECT_CHART
        End If
    Next
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    For i = 1 To nSectionsCount - 1
        nCurFirstSection = 0
        nCurFirstSectionPos = 10000
        For j = i To nSectionsCount
            If Range(SectionRangeNames(j)).Cells(1, 1).Row < nCurFirstSectionPos Then
                nCurFirstSection = j
                nCurFirstSectionPos = Range(SectionRangeNames(j)).Cells(1, 1).Row
            End If
        Next
        szMinRange = SectionRangeNames(nCurFirstSection)
        SectionRangeNames(nCurFirstSection) = SectionRangeNames(i)
        SectionRangeNames(i) = szMinRange
        nMinType = SectionTypes(nCurFirstSection)
        SectionTypes(nCurFirstSection) = SectionTypes(i)
        SectionTypes(i) = nMinType
    Next
    
    For i = 1 To nSectionsCount
        SectionNames(i) = Range(SectionRangeNames(i)).Cells(1, 1).Value
        SectionsList.AddItem SectionNames(i)
    Next

End Sub

Private Sub CancelButton_Click()
    Unload GenerateReport
End Sub


Attribute VB_Name = "GoChart"
Attribute VB_Base = "0{5C5AE582-F6A3-488B-9272-70977009A6D1}{415C3B60-EAD5-49F6-AF87-BB2EDE6DCC18}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

Dim SectionNames(30) As String
Dim SectionRangeNames(30) As String
Dim nSectionsCount As Integer

Private Sub CloseButton_Click()
    Unload GoChart
End Sub

Private Sub SectionsList_Click()
    
    nGoTo = SectionsList.ListIndex + 1
    szGoToRange = SectionRangeNames(nGoTo)
    Set rngChartRow = ActiveSheet.Range(szGoToRange).Cells(1, 1).EntireRow
    If rngChartRow.Hidden Then
        For i = 1 To 100
            If rngChartRow.Offset(-i, 0).OutlineLevel = 1 Then
                rngChartRow.Offset(-i, 0).ShowDetail = True
                Exit For
            End If
        Next
    End If
    rngChartRow.ShowDetail = True
    Application.Goto Reference:=rngChartRow.Cells(1, 1), Scroll:=True

End Sub

Private Sub UserForm_Activate()

    If nSectionsCount = 0 Then
        Unload GoChart
        MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.", vbExclamation, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        Exit Sub
    End If

End Sub

Private Sub UserForm_Initialize()
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    
    nSectionsCount = 0
    nTotalNamesCount = ActiveSheet.Names.Count
    
    For i = 1 To nTotalNamesCount
        If InStr(ActiveSheet.Names(i).Name, "Chart_") > 0 Then
            nSectionsCount = nSectionsCount + 1
            SectionRangeNames(nSectionsCount) = ActiveSheet.Names(i).Name
        End If
    Next
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    For i = 1 To nSectionsCount - 1
        nCurFirstSection = 0
        nCurFirstSectionPos = 10000
        For j = i To nSectionsCount
            If Range(SectionRangeNames(j)).Cells(1, 1).Row < nCurFirstSectionPos Then
                nCurFirstSection = j
                nCurFirstSectionPos = Range(SectionRangeNames(j)).Cells(1, 1).Row
            End If
        Next
        szMinRange = SectionRangeNames(nCurFirstSection)
        SectionRangeNames(nCurFirstSection) = SectionRangeNames(i)
        SectionRangeNames(i) = szMinRange
    Next
    
    For i = 1 To nSectionsCount
        SectionNames(i) = Range(SectionRangeNames(i)).Cells(1, 1).Value
        SectionsList.AddItem SectionNames(i)
    Next
    
End Sub




























Attribute VB_Name = "GoTable"
Attribute VB_Base = "0{0B40C015-42A6-4B1E-AC6F-863FDD9D9A86}{28097202-34E7-4395-A072-B067DC14FA0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

Dim SectionNames(40) As String
Dim SectionRangeNames(40) As String
Dim nSectionsCount As Integer

Private Sub CloseButton_Click()
    Unload GoTable
End Sub

Private Sub SectionsList_Click()
    
    nGoTo = SectionsList.ListIndex + 1
    szGoToRange = SectionRangeNames(nGoTo)
    Application.Goto Reference:=ActiveSheet.Range(szGoToRange).Cells(1, 1), Scroll:=True
    ActiveSheet.Range(szGoToRange).Cells(1, 1).EntireRow.ShowDetail = True

End Sub

Private Sub UserForm_Activate()

    If nSectionsCount = 0 Then
        Unload GoTable
        MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.", vbExclamation, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        Exit Sub
    End If

End Sub

Private Sub UserForm_Initialize()
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    
    nSectionsCount = 0
    nTotalNamesCount = ActiveSheet.Names.Count
    
    For i = 1 To nTotalNamesCount
        If InStr(ActiveSheet.Names(i).Name, "Table_") > 0 Then
            nSectionsCount = nSectionsCount + 1
            SectionRangeNames(nSectionsCount) = ActiveSheet.Names(i).Name
        End If
    Next
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    
    For i = 1 To nSectionsCount - 1
        nCurFirstSection = 0
        nCurFirstSectionPos = 10000
        For j = i To nSectionsCount
            If Range(SectionRangeNames(j)).Cells(1, 1).Row < nCurFirstSectionPos Then
                nCurFirstSection = j
                nCurFirstSectionPos = Range(SectionRangeNames(j)).Cells(1, 1).Row
            End If
        Next
        szMinRange = SectionRangeNames(nCurFirstSection)
        SectionRangeNames(nCurFirstSection) = SectionRangeNames(i)
        SectionRangeNames(i) = szMinRange
    Next
    
    For i = 1 To nSectionsCount
        SectionNames(i) = Range(SectionRangeNames(i)).Cells(1, 1).Value
        SectionsList.AddItem SectionNames(i)
    Next
    
End Sub

Attribute VB_Name = "Navigator"
Attribute VB_Base = "0{312453F1-4EA3-4896-BD89-5EEB40824927}{F6D657CC-EC59-4A7B-91CC-B6F1333E7D0B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
'
'----------------------------------------------------------------------------------

Private Sub CancelButton_Click()
    Unload Navigator
End Sub

Private Sub CommandButton1_Click()
    Application.Goto Reference:=ActiveSheet.Range("PRJ_Name").Cells(1, 1), Scroll:=True
    Unload Navigator
End Sub
Private Sub CommandButton2_Click()
    Application.Goto Reference:=ActiveSheet.Range("Table_1").Cells(1, 1), Scroll:=True
    Unload Navigator
End Sub
Private Sub CommandButton3_Click()
    Application.Goto Reference:=ActiveSheet.Range("Table_2").Cells(1, 1), Scroll:=True
    Unload Navigator
End Sub
Private Sub CommandButton4_Click()
    Application.Goto Reference:=ActiveSheet.Range("Table_9").Cells(1, 1), Scroll:=True
    Unload Navigator
End Sub
Private Sub CommandButton5_Click()
    Application.Goto Reference:=ActiveSheet.Range("Table_11").Cells(1, 1), Scroll:=True
    Unload Navigator
End Sub
Private Sub CommandButton6_Click()
    Application.Goto Reference:=ActiveSheet.Range("Table_13").Cells(1, 1), Scroll:=True
    Unload Navigator
End Sub
Private Sub CommandButton7_Click()
    Application.Goto Reference:=ActiveSheet.Range("Table_14").Cells(1, 1), Scroll:=True
    Unload Navigator
End Sub
Private Sub CommandButton8_Click()
    Application.Goto Reference:=ActiveSheet.Range("Table_17").Cells(1, 1), Scroll:=True
    Unload Navigator
End Sub


Private Sub CommandButton9_Click()
    Application.Goto Reference:=ActiveSheet.Range("Table_18").Cells(1, 1), Scroll:=True
    Unload Navigator
End Sub
Private Sub CommandButton10_Click()
    Application.Goto Reference:=ActiveSheet.Range("Table_22").Cells(1, 1), Scroll:=True
    Unload Navigator
End Sub
Private Sub CommandButton11_Click()
    Application.Goto Reference:=ActiveSheet.Range("Table_23").Cells(1, 1), Scroll:=True
    Unload Navigator
End Sub
Private Sub CommandButton12_Click()
    Application.Goto Reference:=ActiveSheet.Range("Table_24").Cells(1, 1), Scroll:=True
    Unload Navigator
End Sub
Private Sub CommandButton13_Click()
    Application.Goto Reference:=ActiveSheet.Range("Table_25").Cells(1, 1), Scroll:=True
    Unload Navigator
End Sub
Private Sub CommandButton14_Click()
    Application.Goto Reference:=ActiveSheet.Range("Table_26").Cells(1, 1), Scroll:=True
    Unload Navigator
End Sub

Private Sub UserForm_Activate()
    If Not Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_SUMM").Value Then
        Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Activate
    End If
End Sub

Attribute VB_Name = "PrjToImport"
Attribute VB_Base = "0{65CFFFC6-C004-437D-946B-DC47D923BBDD}{DD95817F-FDF7-4F3F-A68F-1CA15DB58F76}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

Private Sub OKButton_Click()
    PrjToImport.Hide
End Sub


Private Sub CancelButton_Click()
    PrjToImport.Hide
End Sub

Attribute VB_Name = "ProjectSetup"
Attribute VB_Base = "0{6BA3FC54-2287-4F84-8652-991562DF25C9}{4C0A6EF3-3432-4E9B-A235-0514BF3AE614}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

Private Sub OKButton_Click()

    Unload ProjectSetup
    
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Exit Sub
    End If
    
    nWas = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_Len").Value
    nWill = Val(PerNumber.Value)
    
    nCurCalcMode = Application.Calculation
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    szCurSheet = ActiveSheet.Name
    
    If PeriodLen.ListIndex = 1 Then StartMonth.ListIndex = Int(CInt(StartMonth.ListIndex) / 3) * 3
    If PeriodLen.ListIndex = 2 Then StartMonth.ListIndex = Int(CInt(StartMonth.ListIndex) / 6) * 6
    If PeriodLen.ListIndex = 3 Then StartMonth.ListIndex = 0
    
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_Len").Value = PerNumber.Value
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_StepType").Value = PeriodLen.ListIndex + 1
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_StartMon").Value = StartMonth.ListIndex + 1
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_StartYear").Value = StartYear.ListIndex + 2000
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("CUR_I_Main").Value = CurMain.ListIndex
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("CUR_I_Foreign").Value = CurForeign.ListIndex
    
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_SUMM").Value Then
        For sh = 1 To Sheets.Count
            szSheetName = Sheets(sh).Name
            If InStr(szSheetName, "|fffd||fffd|.") = 1 Then
                Sheets(szSheetName).Range("PRJ_Len").Value = PerNumber.Value
                Sheets(szSheetName).Range("PRJ_StepType").Value = PeriodLen.ListIndex + 1
                Sheets(szSheetName).Range("PRJ_StartMon").Value = StartMonth.ListIndex + 1
                Sheets(szSheetName).Range("PRJ_StartYear").Value = StartYear.ListIndex + 2000
                Sheets(szSheetName).Range("CUR_I_Main").Value = CurMain.ListIndex
                Sheets(szSheetName).Range("CUR_I_Foreign").Value = CurForeign.ListIndex
            End If
        Next
    End If
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

    If (nWas = nWill) Then
        Application.ScreenUpdating = True
        Application.Calculation = nCurCalcMode
        Exit Sub
    End If
    
    Application.ScreenUpdating = False
    nDifference = nWill - nWas
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Select
    
    If nDifference < 0 Then
        For col = -1 To nDifference Step -1
            Range("LAST_COLUMN").Offset(0, -1).Delete
            Range("LAST_COLUMN").Offset(0, -1).Copy
            ActiveSheet.Paste Destination:=Range("LAST_COLUMN")
            Application.StatusBar = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd| [|fffd||fffd||fffd||fffd||fffd||fffd|], |fffd||fffd||fffd||fffd||fffd||fffd| " + CStr(Abs(col))
        Next
    Else
        For col = 1 To nDifference Step 1
            Range("LAST_COLUMN").Insert Shift:=xlToRight
            Range("LAST_COLUMN").Offset(0, -2).Copy
            ActiveSheet.Paste Destination:=Range("LAST_COLUMN").Offset(0, -1)
            ActiveSheet.Paste Destination:=Range("LAST_COLUMN")
            Application.StatusBar = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd| [|fffd||fffd||fffd||fffd||fffd||fffd|], |fffd||fffd||fffd||fffd||fffd||fffd| " + CStr(Abs(col))
        Next
    End If

    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_SUMM").Value Then
        For sh = 1 To Sheets.Count
            szSheetName = Sheets(sh).Name
            If InStr(szSheetName, "|fffd||fffd|.") = 1 Or InStr(szSheetName, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|") = 1 Or InStr(szSheetName, "|fffd||fffd||fffd||fffd|") = 1 Then
                szLastColName = "LAST_COLUMN"
                If InStr(szSheetName, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|") = 1 Then
                    szLastColName = "COMP_LAST_COLUMN"
                End If
                If InStr(szSheetName, "|fffd||fffd||fffd||fffd|") = 1 Then
                    szLastColName = "SUMM_LAST_COLUMN"
                End If
                Sheets(sh).Select
                If nDifference < 0 Then
                    For col = -1 To nDifference Step -1
                        Range(szLastColName).Offset(0, -1).Delete
                        Range(szLastColName).Offset(0, -1).Copy
                        ActiveSheet.Paste Destination:=Range(szLastColName)
                        Application.StatusBar = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd| [" + szSheetName + "], |fffd||fffd||fffd||fffd||fffd||fffd| " + CStr(Abs(col))

                    Next
                Else
                    For col = 1 To nDifference Step 1
                        Range(szLastColName).Insert Shift:=xlToRight
                        Range(szLastColName).Offset(0, -2).Copy
                        ActiveSheet.Paste Destination:=Range(szLastColName).Offset(0, -1)
                        ActiveSheet.Paste Destination:=Range(szLastColName)
                        Application.StatusBar = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd| [" + szSheetName + "], |fffd||fffd||fffd||fffd||fffd||fffd| " + CStr(Abs(col))
                    Next
                End If
            End If
        Next
    End If
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|

    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Select
    Range("PRJ_Name").Select
    Sheets(szCurSheet).Select
    Application.CutCopyMode = False
    Application.StatusBar = False
    Application.Calculation = nCurCalcMode
    Application.ScreenUpdating = True

End Sub

Private Sub PerNumber_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If (Not IsNumeric(PerNumber.Value)) Then PerNumber.Value = 3
    If (PerNumber.Value < 3) Then PerNumber.Value = 3
    If (PerNumber.Value > 120) Then PerNumber.Value = 120
    PerNumberSpin.Value = PerNumber.Value
End Sub

Private Sub PerNumberSpin_Change()
    PerNumber.Value = PerNumberSpin.Value
End Sub

Private Sub CancelButton_Click()
    Unload ProjectSetup
End Sub

Private Sub UserForm_Initialize()
    
    PerNumber.Value = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_Len").Value
    PerNumberSpin.Value = PerNumber.Value
            
    PeriodLen.AddItem "|fffd||fffd||fffd||fffd||fffd|"
    PeriodLen.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    PeriodLen.AddItem "6 |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    PeriodLen.AddItem "|fffd||fffd||fffd|"
    PeriodLen.ListIndex = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_StepType").Value - 1

    StartMonth.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
    StartMonth.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    StartMonth.AddItem "|fffd||fffd||fffd||fffd|"
    StartMonth.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
    StartMonth.AddItem "|fffd||fffd||fffd|"
    StartMonth.AddItem "|fffd||fffd||fffd||fffd|"
    StartMonth.AddItem "|fffd||fffd||fffd||fffd|"
    StartMonth.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
    StartMonth.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    StartMonth.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    StartMonth.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd|"
    StartMonth.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    StartMonth.ListIndex = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_StartMon").Value - 1

    StartYear.AddItem "2000"
    StartYear.AddItem "2001"
    StartYear.AddItem "2002"
    StartYear.AddItem "2003"
    StartYear.AddItem "2004"
    StartYear.AddItem "2005"
    StartYear.AddItem "2006"
    StartYear.AddItem "2007"
    StartYear.AddItem "2008"
    StartYear.AddItem "2009"
    StartYear.AddItem "2010"
    StartYear.ListIndex = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_StartYear").Value - 2000
    
    For i = 1 To 10
        CurMain.AddItem CStr(Sheets("|fffd||fffd||fffd||fffd|").Cells(8 + i, 1).Value)
        CurForeign.AddItem CStr(Sheets("|fffd||fffd||fffd||fffd|").Cells(8 + i, 1).Value)
    Next
    
    CurMain.ListIndex = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("CUR_I_Main").Value
    CurForeign.ListIndex = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("CUR_I_Foreign").Value
    
End Sub















Attribute VB_Name = "ProjectView"
Attribute VB_Base = "0{9D21D5D0-6E7E-4F86-8E06-7AAEC5917F0E}{761BCE3B-3A9F-4ABF-908D-054820F19647}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

Private Sub OKButton_Click()

    Unload ProjectView
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Exit Sub
    End If
    Application.ScreenUpdating = False
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("LANGUAGE").Value = Language.ListIndex
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("ShowRealDates").Value = ShowRealDates.Value
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_Protected").Value = IsProtected.Value
    nReportCurrency = 1
    If RepCurOption2.Value Then nReportCurrency = 2
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("CUR_I_Report").Value = nReportCurrency
    
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_SUMM").Value Then
        For sh = 1 To Sheets.Count
            szSheetName = Sheets(sh).Name
            If InStr(szSheetName, "|fffd||fffd|.") = 1 Then
                Sheets(szSheetName).Range("LANGUAGE").Value = Language.ListIndex
                Sheets(szSheetName).Range("ShowRealDates").Value = ShowRealDates.Value
                Sheets(szSheetName).Range("PRJ_Protected").Value = IsProtected.Value
                Sheets(szSheetName).Range("CUR_I_Report").Value = nReportCurrency
            End If
        Next
    End If
    
    Application.ScreenUpdating = True
    
End Sub

Private Sub CancelButton_Click()
    Unload ProjectView
End Sub

Private Sub UserForm_Initialize()
    
    Language.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    Language.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    Language.AddItem "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    Language.ListIndex = CInt(Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("LANGUAGE").Value)
    
    nReportCurrency = CInt(Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("CUR_I_Report").Value)
    If nReportCurrency = 2 Then
        RepCurOption2.Value = True
    Else
        RepCurOption1.Value = True
    End If
    ShowRealDates.Value = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("ShowRealDates").Value
    IsProtected = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_Protected").Value
    
End Sub

Attribute VB_Name = "Sensitivity"
Attribute VB_Base = "0{035536EE-2CF2-4C07-914F-8582E5EA2336}{892FDB3C-4162-4DE9-8C91-D41FEE080FD9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

Dim SheetNames(25) As String
Dim PrjNames(25) As String


Private Sub OKButton_Click()
    
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Unload Sensitivity
        Exit Sub
    End If
    Application.ScreenUpdating = False
    
    If SourceParameter.ListIndex >= 0 Then Range("SENS_Parameter").Value = SourceParameter.ListIndex + 1
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_SUMM").Value And ForProject.ListIndex >= 0 Then
        Range("SENS_Project").Value = SheetNames(ForProject.ListIndex + 1)
    End If
        
    Unload Sensitivity
    Application.ScreenUpdating = True
    
End Sub

Private Sub CancelButton_Click()
    Unload Sensitivity
End Sub


Private Sub UserForm_Initialize()
    
    nListCount = Range("ListForSensAnal").Rows.Count - 2
    If nListCount < 1 Then MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|."
    For i = 1 To nListCount
        SourceParameter.AddItem Range("ListForSensAnal").Cells(i + 1, 1)
    Next
    SourceParameter.ListIndex = Range("SENS_Parameter").Value - 1
    
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_SUMM").Value Then
        SheetNames(1) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
        PrjNames(1) = Sheets(SheetNames(1)).Range("PRJ_Name").Value
        nSheetsCount = 1
        For sh = 1 To Sheets.Count
            If InStr(Sheets(sh).Name, "|fffd||fffd|.") = 1 Then
                nSheetsCount = nSheetsCount + 1
                SheetNames(nSheetsCount) = Sheets(sh).Name
                PrjNames(nSheetsCount) = Sheets(sh).Range("PRJ_Name").Value
            End If
        Next
        szCurProject = Range("SENS_Project").Value
        nCurProjectInList = 0
        For i = 1 To nSheetsCount
            ForProject.AddItem PrjNames(i)
            If StrComp(szCurProject, SheetNames(i), vbTextCompare) = 0 Then nCurProjectInList = i - 1
        Next
        ForProject.ListIndex = nCurProjectInList
    Else
        ForProject.Visible = False
        ForProject_Prompt.Visible = False
    End If
    
End Sub

Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

'------------------------------------------------------|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Const REG_ALTINVEST        As Long = 1 '|fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
Const REG_ALTINVESTSUMM    As Long = 2 '|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
Const REG_ALTINVESTPRIM    As Long = 3 '|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
Const REG_ALTFINANCE       As Long = 4 '|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Const REG_ALTFINANCESUMM   As Long = 5 '|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
Const REG_ALTPROGNOZ       As Long = 6 '|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Const REG_ALTBUDJET        As Long = 7 '|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|

'|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public strREG_SerialNumber As String
Public strREG_UserName As String

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Sub CheckActivation()
    
    Dim strCheckCode As String
    Dim nCheckCode As Long
    Dim nGoodCode As Long
    Dim nProgramType As Long
    Dim strPrType As String
    Dim nSerialNumber As Long
    
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then
        Exit Sub
    End If
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_SUMM").Value Then
        nProgramType = REG_ALTINVESTSUMM
    Else
        nProgramType = REG_ALTINVEST
    End If
    
    strPrType = Trim(Str(nProgramType))
    strCheckCode = GetSetting("Alt-Invest", "Activation", "CheckCode" & strPrType, "")
    strREG_SerialNumber = GetSetting("Alt-Invest", "Activation", "SerialKey" & strPrType, "")
    strREG_UserName = GetSetting("Alt-Invest", "Activation", "UserInfo" & strPrType, "")
    
    nSerialNumber = Val(strREG_SerialNumber)
    nCheckCode = Val(strCheckCode)
    
    Dim fs, d, s
    Set fs = CreateObject("Scripting.FileSystemObject")
    Set d = fs.GetDrive("c:")
    s = d.SerialNumber
    
    nGoodCode = s / 1000 + nSerialNumber + nProgramType * 22
    If nCheckCode = nGoodCode Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.", vbExclamation, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        End
    End If

End Sub

'------------------------------------------------------ |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

Sub Auto_Open()
  
    CheckActivation
    
    Application.StatusBar = False
    Application.ScreenUpdating = False
    Application.Calculation = xlManual
    Application.DisplayAlerts = False

    Application.StatusBar = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|..."
    Add_Menu
    
    Application.StatusBar = False
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.Calculation = xlAutomatic
    
    szStartSheet = "|fffd||fffd||fffd||fffd||fffd||fffd|"
    If Worksheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then szStartSheet = "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    Worksheets(szStartSheet).Activate
    Worksheets(szStartSheet).Range("A3").Select
    
    If Worksheets("|fffd||fffd||fffd||fffd||fffd|").Range("ShowAbout").Value Then
        About
    End If
    
End Sub

Sub Add_Menu()

    Dim item(7), macro(7) As Variant
    Dim nMenuPosition As Integer

    Remove_Menu

    szMenuName = "|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5"
    
    item(1) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|..."
    item(2) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|..."
    item(3) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|..."
    item(4) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|..."
    item(5) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|..."
    item(6) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|..."
    'item(7) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|..."
    item(7) = "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|..."
    
    macro(1) = "Run_ProjectSetup"
    macro(2) = "Run_ProjectView"
    macro(3) = "Run_Navigator"
    macro(4) = "Run_GoTable"
    macro(5) = "Run_GoChart"
    macro(6) = "Run_GenerateReport"
    'macro(7) = "CopyProjectFromFile"
    macro(7) = "About"

    nMenuPosition = MenuBars(xlWorksheet).Menus.Count + 1
    MenuBars(xlWorksheet).Menus.Add Caption:=szMenuName, Before:=nMenuPosition
    For i = 7 To 1 Step -1
        MenuBars(xlWorksheet).Menus(szMenuName).MenuItems.Add Caption:=item(i), Before:=1, OnAction:=macro(i)
    Next

    nMenuPosition = MenuBars(xlChart).Menus.Count + 1
    MenuBars(xlChart).Menus.Add Caption:=szMenuName, Before:=nMenuPosition
    For i = 7 To 1 Step -1
        MenuBars(xlChart).Menus(szMenuName).MenuItems.Add Caption:=item(i), Before:=1, OnAction:=macro(i)
    Next

    Application.StatusBar = False
    
End Sub

Sub Remove_Menu()

    szMenuName = "|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5"
    For Each MenuName In MenuBars(xlWorksheet).Menus
        If MenuName.Caption = szMenuName Then
            MenuName.Delete
        End If
    Next
    For Each MenuName In MenuBars(xlChart).Menus
        If MenuName.Caption = szMenuName Then
            MenuName.Delete
        End If
    Next

End Sub

Sub Remove_Toolbar()

    szBarName = "|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|"
    For Each m In Application.CommandBars
        If m.Name = szBarName Then
            m.Delete
            Exit For
        End If
    Next m
    
End Sub

Sub About()
    
    CheckActivation
    ThisWorkbook.Activate
    Load AboutDialog
    AboutDialog.Show

End Sub

Sub Auto_Close()
    
    Remove_Menu
    Remove_Toolbar

End Sub

Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

Public Sub Run_ProjectSetup()
    CheckActivation
    ThisWorkbook.Activate
    Load ProjectSetup
    ProjectSetup.Show
End Sub

Public Sub Run_ProjectView()
    CheckActivation
    ThisWorkbook.Activate
    Load ProjectView
    ProjectView.Show
End Sub

Public Sub Run_AddProduct()
    CheckActivation
    Load AddProduct
    AddProduct.Show
End Sub

Public Sub Run_AddPersonnel()
    CheckActivation
    Load AddPersonnel
    AddPersonnel.Show
End Sub

Public Sub Run_AddExpenses()
    CheckActivation
    Load AddExpenses
    AddExpenses.Show
End Sub

Public Sub Run_AddAsset()
    CheckActivation
    Load AddAsset
    AddAsset.Show
End Sub

Public Sub Run_AddLease()
    CheckActivation
    Load AddLease
    AddLease.Show
End Sub

Public Sub Run_AddLoan()
    CheckActivation
    Load AddLoan
    AddLoan.Show
End Sub

Public Sub Run_AutoLoan()
    CheckActivation
    Load AutoLoan
    AutoLoan.Show
End Sub

Public Sub Run_AddProject()
    CheckActivation
    Load AddProject
    AddProject.Show
End Sub

Public Sub Run_DelProject()
    CheckActivation
    Load DelProject
    DelProject.Show
End Sub

Public Sub Run_GoTable()
    ThisWorkbook.Activate
    Load GoTable
    GoTable.Show
End Sub

Public Sub Run_GoChart()
    ThisWorkbook.Activate
    Load GoChart
    GoChart.Show
End Sub

Public Sub Run_GenerateReport()
    CheckActivation
    ThisWorkbook.Activate
    Load GenerateReport
    GenerateReport.Show
End Sub

Public Sub Run_Navigator()
    ThisWorkbook.Activate
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_SUMM").Value Then
        If InStr(ActiveSheet.Name, "|fffd||fffd|") < 1 Then
            MsgBox "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd|.#)"
            Exit Sub
        End If
    End If
    Load Navigator
    Navigator.Show
End Sub

Public Sub Run_SensTune()
    CheckActivation
    ThisWorkbook.Activate
    Load Sensitivity
    Sensitivity.Show
End Sub

Public Sub Run_EST_AddType()
    CheckActivation
    Load EST_AddType
    EST_AddType.Show
End Sub

Public Sub Run_EST_AddStage()
    CheckActivation
    Load EST_AddStage
    EST_AddStage.Show
End Sub

Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

Public Sub CopyProjectFromFile()
    
    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Exit Sub
    End If
    
    ' ------------------------------------------------------------ |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    szCurrentFile = ActiveWorkbook.Name
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Select
    
    bCanLoadProject = True
    
    For sh = 1 To Sheets.Count
        If InStr(Sheets(sh).Name, "|fffd||fffd|.") = 1 Then
            bCanLoadProject = False
            Exit For
        End If
    Next
    
    If CInt(ActiveSheet.Range("ProdNum").Value) > 1 Then bCanLoadProject = False
    If CInt(ActiveSheet.Range("asset_count_1").Value) > 1 Then bCanLoadProject = False
    If CInt(ActiveSheet.Range("asset_count_2").Value) > 1 Then bCanLoadProject = False
    If CInt(ActiveSheet.Range("asset_count_3").Value) > 1 Then bCanLoadProject = False
    If CInt(ActiveSheet.Range("gexp_count_1").Value) > 1 Then bCanLoadProject = False
    If CInt(ActiveSheet.Range("gexp_count_2").Value) > 1 Then bCanLoadProject = False
    If CInt(ActiveSheet.Range("gexp_count_3").Value) > 1 Then bCanLoadProject = False
    If CInt(ActiveSheet.Range("gexp_count_4").Value) > 1 Then bCanLoadProject = False
    If CInt(ActiveSheet.Range("lease_count").Value) > 1 Then bCanLoadProject = False
    If CInt(ActiveSheet.Range("loan_count").Value) > 1 Then bCanLoadProject = False
    If CInt(ActiveSheet.Range("pers_count_1").Value) > 1 Then bCanLoadProject = False
    If CInt(ActiveSheet.Range("pers_count_2").Value) > 1 Then bCanLoadProject = False
    If CInt(ActiveSheet.Range("pers_count_3").Value) > 1 Then bCanLoadProject = False
    If CInt(ActiveSheet.Range("pers_count_4").Value) > 1 Then bCanLoadProject = False
    
    If CInt(ActiveSheet.Range("MinMoney").Value) < -1 Or CInt(ActiveSheet.Range("MinMoney").Value) > 1 Then bCanLoadProject = False
        
    If Not bCanLoadProject Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        Exit Sub
    End If
    
    ' ------------------------------------------------------------ |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    Dim szFileName As String
    Dim fd As FileDialog
    Set fd = Application.FileDialog(msoFileDialogFilePicker)
    With fd
        .AllowMultiSelect = True
        .Filters.Clear
        .Filters.Add "|fffd||fffd||fffd||fffd||fffd| Microsoft Excel", "*.xls", 1
        .FilterIndex = 1
        If .Show = -1 Then
            szFileName = .SelectedItems(1)
        Else
            Exit Sub
        End If
    End With
    Set fd = Nothing

    ' ------------------------------------------------------------ |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|

    Workbooks.Open Filename:=szFileName
    szFromWorkbookName = ActiveWorkbook.Name
    bIsOurFile = False
    nOurFields = 0
    Set nms = Workbooks(szFromWorkbookName).Names
    For i = 1 To nms.Count
        If nms(i).Name = "PRJ_Len" Or nms(i).Name = "CUR_Main" Or nms(i).Name = "IS_SUMM" Then
            nOurFields = nOurFields + 1
        End If
    Next
    If nOurFields = 3 Then bIsOurFile = True
    
    If Not bIsOurFile Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        Workbooks(szFromWorkbookName).Close False
        Exit Sub
    End If
    
    ' ------------------------------------------------------------ |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    
    Workbooks(szFromWorkbookName).Activate
    Load PrjToImport
    Dim ProjectNames(20) As String
    Dim ProjectSheets(20) As String
    Dim nProjectCount As Integer
    nProjectCount = 0
    For sh = 1 To Workbooks(szFromWorkbookName).Sheets.Count
        If InStr(Sheets(sh).Name, "|fffd||fffd|.") = 1 Or InStr(Sheets(sh).Name, "|fffd||fffd||fffd||fffd||fffd||fffd|") = 1 Then
            nProjectCount = nProjectCount + 1
            ProjectNames(nProjectCount) = Sheets(sh).Range("PRJ_Name").Value
            ProjectSheets(nProjectCount) = Sheets(sh).Name
            PrjToImport.PrjList.AddItem ProjectNames(nProjectCount) + " (" + ProjectSheets(nProjectCount) + ")"
        End If
    Next
    
    If nProjectCount = 0 Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        Unload PrjToImport
        Workbooks(szFromWorkbookName).Close False
        Exit Sub
    End If
    
    szLoadFromSheet = "|fffd||fffd||fffd||fffd||fffd||fffd|"
    
    If nProjectCount > 1 Then
        
        PrjToImport.Show
        If PrjToImport.PrjList.ListIndex < 0 Then
            MsgBox "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
            Unload PrjToImport
            Exit Sub
        Else
            szLoadFromSheet = ProjectSheets(PrjToImport.PrjList.ListIndex)
        End If
        
    End If
  
    ' ------------------------------------------------------------ |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|

    ' ------------------------------------------------------------ |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|

    ' ------------------------------------------------------------ |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|

    ' ------------------------------------------------------------ |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|

End Sub















Attribute VB_Name = "|fffd||fffd||fffd||fffd|1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Dim bInUndo As Boolean

Private Sub Worksheet_Change(ByVal Target As Range)
    If Target.Interior.ColorIndex <> 36 Then
        If Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_Protected").Value And Not bInUndo And Application.ScreenUpdating Then
            MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|." + Chr(10) + "|fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|." + Chr(10) + "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd|"
            bInUndo = True
            Application.Undo
            bInUndo = False
        End If
    End If
End Sub

Attribute VB_Name = "|fffd||fffd||fffd||fffd|6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd|"
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

Public Sub Make_AI_Std()
    
    If MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5?", vbOKCancel, "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|") = vbCancel Then
        Exit Sub
    End If
    
    Application.ScreenUpdating = False
    
    PrepareStruct_AI_Std
    
    Application.DisplayAlerts = False
    Sheets("|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Delete
    Application.DisplayAlerts = True
    
    Application.ScreenUpdating = True
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5 |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOK, "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"

End Sub

Public Sub Make_AI_Std_Demo()
    
    If MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5?", vbOKCancel, "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|") = vbCancel Then
        Exit Sub
    End If
    Application.ScreenUpdating = False
    
    PrepareStruct_AI_Std
    
    Sheets("|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Visible = xlSheetVisible
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value = True
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("Ver_BuildDate").Value = Date
    
    Dim SheetsToClear(4) As String
    SheetsToClear(1) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
    SheetsToClear(2) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
    SheetsToClear(3) = "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    For Sheet = 1 To 3
        Sheets(SheetsToClear(Sheet)).Select
        Cells.Select
        Selection.Copy
        Selection.PasteSpecial Paste:=xlPasteValues
        Application.CutCopyMode = False
        Range("A1").Select
    Next
    
    Sheets("|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Select
    Range("About_AI_Summ").Rows.Delete
    Range("A1").Select
    
    Application.ScreenUpdating = True
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5 |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOK, "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"

End Sub

Public Sub Make_AI_Summ()
    
    If MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| 5?", vbOKCancel, "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|") = vbCancel Then
        Exit Sub
    End If
    Application.ScreenUpdating = False
    
    PrepareStruct_AI_Summ
    
    Application.DisplayAlerts = False
    Sheets("|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Delete
    Application.DisplayAlerts = True
    
    Application.ScreenUpdating = True
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| 5 |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOK, "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"

End Sub

Public Sub Make_AI_Summ_Demo()
    
    If MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| 5?", vbOKCancel, "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|") = vbCancel Then
        Exit Sub
    End If
    Application.ScreenUpdating = False
    
    PrepareStruct_AI_Summ
    
    Sheets("|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Visible = xlSheetVisible
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value = True
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("Ver_BuildDate").Value = Date
    
    Dim SheetsToClear(6) As String
    SheetsToClear(1) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
    SheetsToClear(2) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
    SheetsToClear(3) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    SheetsToClear(4) = "|fffd||fffd||fffd||fffd|"
    SheetsToClear(5) = "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    For Sheet = 1 To 5
        Sheets(SheetsToClear(Sheet)).Select
        Cells.Select
        Selection.Copy
        Selection.PasteSpecial Paste:=xlPasteValues
        Application.CutCopyMode = False
        Range("A1").Select
    Next
    
    Sheets("|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Select
    Range("About_AI").Rows.Delete
    Range("A1").Select
    
    Application.ScreenUpdating = True
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| 5 |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOK, "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"

End Sub

Private Sub PrepareStruct_AI_Std()
    
    Remove_Estate
    
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Visible = xlSheetVisible
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Select
    Range("A1").Select
    
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Visible = xlSheetVisible
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Select
    Range("A1").Select
    nFromRow = Range("SensForSumm").Row
    nToRow = Range("SensForSumm").Row + Range("SensForSumm").Rows.Count - 1
    i = 1
    Do
        If Range(Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Shapes(i).TopLeftCell.Address).Row > nFromRow And _
           Range(Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Shapes(i).TopLeftCell.Address).Row < nToRow Then
            Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Shapes(i).Delete
        End If
        i = i + 1
        If i > Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Shapes.Count Then Exit Do
    Loop
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("SensForSumm").EntireRow.Delete
    ActiveWorkbook.Names("SensForSumm").Delete
    
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Visible = xlSheetVisible
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Select
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_Protected").Value = True
    Range("A1").Select
    
    Application.DisplayAlerts = False
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Delete
    Sheets("|fffd||fffd||fffd||fffd|").Delete
    Application.DisplayAlerts = True
    
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("Ver_ChangeDate").Value = Date
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value = False
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("ShowAbout").Value = True
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_SUMM").Value = False
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_PRIM").Value = False
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_NULL").Value = False
    
    Sheets("|fffd||fffd||fffd||fffd|").Visible = xlSheetHidden
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Visible = xlSheetVeryHidden

End Sub

Private Sub PrepareStruct_AI_Summ()
    
    Remove_Estate
    
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Visible = xlSheetVisible
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Select
    Range("A1").Select
    
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Visible = xlSheetVisible
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Select
    Range("A1").Select
    
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Visible = xlSheetVisible
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Select
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Range("PRJ_Protected").Value = True
    Range("A1").Select
    
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Visible = xlSheetVisible
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Select
    Range("A1").Select
    
    Sheets("|fffd||fffd||fffd||fffd|").Visible = xlSheetVisible
    Sheets("|fffd||fffd||fffd||fffd|").Select
    Range("A1").Select
    
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("Ver_ChangeDate").Value = Date
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value = False
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("ShowAbout").Value = True
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_SUMM").Value = True
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_PRIM").Value = False
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_NULL").Value = False
    
    Sheets("|fffd||fffd||fffd||fffd|").Visible = xlSheetHidden
    Sheets("|fffd||fffd||fffd||fffd||fffd|").Visible = xlSheetVeryHidden

End Sub

Private Sub Remove_Estate()

    nCurCalcMode = Application.Calculation
    Application.Calculation = xlCalculationManual
    
    Sheets("|fffd||fffd||fffd||fffd||fffd||fffd|").Select
    
    ActiveSheet.Shapes("EST_Button1").Delete
    ActiveSheet.Shapes("EST_Button2").Delete
    
    Dim rngBalance As Range
    Dim rngData As Range
    Set rngBalance = Range("EST_BALANCE")
    Set rngData = Range("EST_DATA")
    
    For r = 2 To rngBalance.Rows.Count
        For c = 1 To 14
            rngBalance.Cells(r, c).Formula = ""
        Next
    Next
    rngData.Delete
    rngBalance.EntireRow.Hidden = True
    
    Application.Calculation = nCurCalcMode

End Sub
































Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
'----------------------------------------------------------------------------------
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| 5.|fffd|
' Copyright (c) 1993-2005, |fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' http://www.alt-invest.ru
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'
'----------------------------------------------------------------------------------

Public Sub Run_SensAnal()

    If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_DEMO").Value Then
        MsgBox "|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKOnly, "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
        Exit Sub
    End If
    If MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|! |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| - |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|?", vbOKCancel, "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|") = vbCancel Then
        Exit Sub
    End If
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    szSourceSheet = Range("SENS_Project").Value
    szSourceRangeName = Range("ListForSensAnal").Cells(1 + Range("SENS_Parameter").Value, 2).Value
    If Len(szSourceRangeName) < 1 Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbCritical, "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    End If
    
    nRowsInSrc = Sheets(szSourceSheet).Range(szSourceRangeName).Rows.Count
    nColsInSrc = Sheets(szSourceSheet).Range(szSourceRangeName).Columns.Count
    Dim CurrentSrcFormula() As String
    Dim CurrentSrc()
    ReDim CurrentSrcFormula(nRowsInSrc + 1, nColsInSrc + 1)
    ReDim CurrentSrc(nRowsInSrc + 1, nColsInSrc + 1)
    
    Dim nKoeff(8) As Double
    For i = 1 To 7
        nKoeff(i) = CDbl(Cells(Range("SENS_Parameter").Row, Range("SENS_Parameter").Column + i).Value)
    Next

    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    For r = 1 To nRowsInSrc
        For c = 1 To nColsInSrc
            CurrentSrcFormula(r, c) = Sheets(szSourceSheet).Range(szSourceRangeName).Cells(r, c).Formula
            CurrentSrc(r, c) = Sheets(szSourceSheet).Range(szSourceRangeName).Cells(r, c).Value
        Next
    Next
    
    ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    Application.ScreenUpdating = False
    nCurCalcMode = Application.Calculation
    Application.Calculation = xlCalculationManual
    
    For nSensPos = 1 To 7
        For r = 1 To nRowsInSrc
            For c = 1 To nColsInSrc
                Sheets(szSourceSheet).Range(szSourceRangeName).Cells(r, c).Value = CurrentSrc(r, c) * nKoeff(nSensPos)
            Next
        Next
        Application.Calculate
        nResCount1 = Range("SENS_Res1").Rows.Count
        For i = 1 To nResCount1
            dResultValue = Sheets(szSourceSheet).Range(Range("SENS_Res1").Cells(i, 5).Value).Value
            Range("SENS_Res1").Cells(i, 5 + nSensPos).Value = dResultValue
        Next
        If Sheets("|fffd||fffd||fffd||fffd||fffd|").Range("IS_SUMM").Value Then
            nResCount2 = Range("SENS_Res2").Rows.Count
            For i = 1 To nResCount2
                dResultValue = Sheets("|fffd||fffd||fffd||fffd|").Range(Range("SENS_Res2").Cells(i, 5).Value).Value
                Range("SENS_Res2").Cells(i, 5 + nSensPos).Value = dResultValue
            Next
        End If
    Next
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

    For r = 1 To nRowsInSrc
        For c = 1 To nColsInSrc
            Sheets(szSourceSheet).Range(szSourceRangeName).Cells(r, c).Formula = CurrentSrcFormula(r, c)
        Next
    Next
    Application.Calculation = nCurCalcMode
    Application.ScreenUpdating = True

End Sub

Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
