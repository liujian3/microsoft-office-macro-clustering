Attribute VB_Name = "Module1"

Global Const MENU As String = "Menu-Setup"
Global Const FORM1 As String = "Form - 1"
Global Const FORM2a As String = "Form- 2"
Global Const FORM2b As String = "Form- 2E"
Global Const FORM3a As String = "Form 3 - Installation Report"
Global Const FORM3b As String = "Form 3E - Installation Report"
Global Const FORMLT As String = "Lighting Tables - Application"

Sub ShowApplication2()
'
' Display 'Application - 2'
'
    ActiveWorkbook.Unprotect "UTILREV"
    Sheets(FORM2a).Visible = True
    Sheets(FORM3a).Visible = True
    Sheets(FORMLT).Visible = True
    
    Sheets(FORM2b).Visible = False
    Sheets(FORM3b).Visible = False
    ActiveWorkbook.Protect Password:="UTILREV", Structure:=True, Windows:=False
    
    Sheets(MENU).Shapes("Button 4").Visible = True
    Sheets(MENU).Shapes("Line 18").Visible = True
    Sheets(MENU).Shapes("Text Box 20").Visible = True
    Sheets(MENU).Shapes("Text Box 23").Visible = False
End Sub

Sub ShowApplication2E()
'
' Display 'Application - 2E'
'
    ActiveWorkbook.Unprotect "UTILREV"
    Sheets(FORM2a).Visible = False
    Sheets(FORM3a).Visible = False
    Sheets(FORMLT).Visible = False
    
    Sheets(FORM2b).Visible = True
    Sheets(FORM3b).Visible = True
    ActiveWorkbook.Protect Password:="UTILREV", Structure:=True, Windows:=False
    
    Sheets(MENU).Shapes("Button 4").Visible = False
    Sheets(MENU).Shapes("Line 18").Visible = False
    Sheets(MENU).Shapes("Text Box 20").Visible = False
    Sheets(MENU).Shapes("Text Box 23").Visible = True
End Sub

Public Sub ListShapes()
    Dim curSheet As Worksheet
    Dim curShape As Shape

    Set curSheet = Sheets(FORM1)
    
    For Each curShape In curSheet.Shapes
        curShape.Select
        Debug.Print "Shape: " & curShape.Type
    Next
End Sub

Public Sub UpdateCombos()
    Dim curSheet As Worksheet
    Dim curShape As Shape
    Dim i As Integer
    Dim ComboIndex As Integer, CurComboIndex As Integer
    Dim CellIndex As Integer, CurCellIndex As Integer
    
    Set curSheet = Sheets(FORMLT)
    
    ComboIndex = 203
    CellIndex = 128
    For i = 0 To 19
        CurComboIndex = ComboIndex + i
        CurCellIndex = CellIndex + i
        
        curSheet.Shapes("Drop Down " & CurComboIndex).Select
        With Selection
            '.LinkedCell = "$P$" & CurCellIndex
            .LinkedCell = "$R$" & CurCellIndex
        End With
    Next
End Sub

Attribute VB_Name = "Module2"
Sub Form1_Select()
    Sheets(FORM1).Select
End Sub

Sub Form2_Select()
    If (Sheets(FORM1).Cells(17, 35).Value = 2) Then
        Sheets(FORM2a).Select
    Else
        Sheets(FORM2b).Select
    End If
End Sub

Sub Form3_Select()
    If (Sheets(FORM1).Cells(17, 35).Value = 2) Then
        Sheets(FORM3a).Select
    Else
        Sheets(FORM3b).Select
    End If
End Sub

Sub FormLT_Select()
    Sheets(FORMLT).Select
End Sub

Sub Form1_PrintOut()
    Sheets(FORM1).PrintOut
End Sub

Sub Form2_PrintOut()
    If (Sheets(FORM1).Cells(17, 35).Value = 2) Then
        Sheets(FORM2a).PrintOut
    Else
        Sheets(FORM2b).PrintOut
    End If
End Sub

Sub Form3_PrintOut()
    If (Sheets(FORM1).Cells(17, 35).Value = 2) Then
        Sheets(FORM3a).PrintOut
    Else
        Sheets(FORM3b).PrintOut
    End If
End Sub

Sub FormLT_PrintOut()
    Sheets(FORMLT).PrintOut
End Sub


Attribute VB_Name = "Module3"
Sub Macro1()
Attribute Macro1.VB_Description = "Macro recorded 5/10/2005 by Eliseo Sandoval"
Attribute Macro1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro1 Macro
' Macro recorded 5/10/2005 by Eliseo Sandoval
'

'
    ActiveWorkbook.Protect Structure:=True, Windows:=False
    ActiveWorkbook.Unprotect
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
    Dim sFixtureType As String
    Dim sFixtureKW As String
    
    sFixtureType = Cells(Target.Row, 1).Value
    sFixtureKW = Cells(Target.Row, 7).Value
    Debug.Print "Selected Fixture: " & sFixtureType & " with " & sFixtureKW & " kW/Fixt."
                
    If Target.Column < 8 And Target.Row > 2 Then
        UserInputForm.SetFixture sFixtureType, sFixtureKW
    End If
    
    Cancel = True
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    If (Target.Column < 8 And Target.Row > 2) Then
        Range(Cells(Target.Row, 1), Cells(Target.Row, 7)).Select
        Target.Activate
    End If
End Sub

Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserInputForm"
Attribute VB_Base = "0{B854D154-0318-4013-A387-AA7FFC634BCE}{AF73305D-49C6-4FED-B8BA-25723C3BD379}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Dim FixtureType As String
Dim FixtureKW As String

Sub SetFixture(ByVal sFixtureType As String, ByVal sFixtureKW As String)
    FixtureType = sFixtureType
    FixtureKW = sFixtureKW
    'UpdateSiteNames
    Show
End Sub

Private Sub UserForm_Initialize()
    Dim i As Integer
    
    'Populate the Site combo box
    UpdateSiteNames
    
    'Populate the Type combo box
    cmbType.AddItem ("Existing")
    cmbType.AddItem ("Proposed")
    cmbType.ListIndex = 0
    
    
    'Populate the slot combo box
    cmbSlot.AddItem ("Next Empty Space")
    For i = 1 To 20
        cmbSlot.AddItem (i & "")
    Next
    cmbSlot.ListIndex = 0
    
    cmdOK.SetFocus
End Sub

Private Sub cmdOK_Click()
    Dim iRow As Integer
    Dim iCol As Integer
    Dim iRowOffset As Integer
    Dim iColOffset As Integer
    Dim LightingTableSheet As Worksheet
    
    Set LightingTableSheet = Sheets("Lighting Tables - Application")
    
    'Get the cell offset
    iRowOffset = cmbSite.ListIndex * 30
    iColOffset = cmbType.ListIndex * 6
    
    If (iRowOffset > 0) Then
        iRowOffset = iRowOffset + 14
    End If
        
    iRow = iRowOffset + 9
    iCol = iColOffset + 5
    If cmbSlot.ListIndex = 0 Then
        While (Not IsEmpty(LightingTableSheet.Cells(iRow, iCol).Value))
            iRow = iRow + 1
            'TODO: Need to add check if there aren't any empty slots
        Wend
    Else
        iRow = iRow + (cmbSlot.ListIndex - 1)
    End If
    'Debug.Print "Row: " & iRow & " Col: " & iCol
    
    LightingTableSheet.Cells(iRow, iCol).Value = FixtureType
    LightingTableSheet.Cells(iRow, iCol + 1).Value = FixtureKW
    Hide
End Sub

Private Sub cmdCancel_Click()
    Hide
End Sub

Private Sub UpdateSiteNames()
    Dim LightingTableSheet As Worksheet
    Dim sSiteName As String
    Dim iListIndex As Integer
    Dim iCurrRow As Integer
    
    iListIndex = cmbSite.ListIndex
    'Debug.Print "List Index: " & iListIndex
    Set LightingTableSheet = Sheets("Lighting Tables - Application")
    
    
    cmbSite.Clear
    For i = 1 To 5
        iCurrRow = ((i - 1) * 30) + 5
        If i <> 1 Then iCurrRow = iCurrRow + 14
        
        'Debug.Print "Page " & i & " Name Row: " & iCurrRow
        sSiteName = LightingTableSheet.Cells(iCurrRow, 3).Text
        'Debug.Print "Site Name " & i & ": " & sSiteName
        cmbSite.AddItem ("Site " & i & " (" & IIf(sSiteName = "", "Unknown", sSiteName) & ")")
    Next
    
    If cmbSite.ListCount > 0 And cmbSite.ListCount < iListIndex Then
        cmbSite.ListIndex = iListIndex
    Else
        cmbSite.ListIndex = 0
    End If
End Sub


INQUEST-PP=macro
