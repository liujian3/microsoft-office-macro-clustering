Attribute VB_Name = "Module1"
'|fffd| copyright 2018 - Splunk Inc. All rights reserved
'You may use this workbook in the context of the Splunk project and the Data Source Assessment
'Distribution is strictly forbidden
'Angelo Brancato <abrancato@splunk.com>


Public global_initiate
Public SecEssentialsBegin
Public SecEssentialsEnd
Public details As Integer
Public Indexed As Integer


Public S3_SE_start As Integer
Public S3_SE_end As Integer

Public S3_ES_start As Integer
Public S3_ES_end As Integer

Public S3_ES_DB_start As Integer
Public S3_ES_DB_end As Integer

Public S3_CIS_start As Integer
Public S3_CIS_end As Integer

Public S3_ESCU_start As Integer
Public S3_ESCU_end As Integer

Public S3_UBA_start As Integer
Public S3_UBA_end As Integer

Public S3_ITSI_start As Integer
Public S3_ITSI_end As Integer



Sub Show_Hide_IT_OPS_Adoption()
  ActiveSheet.Shapes.Range(Array("Button 1")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show("ITOPS_Table", 16, 21, "Button 1", "Chart 33", 0, 15)
  Else
    Call Hide("ITOPS_Table", 16, 21, "Button 1", "Chart 33", 15)
  End If
End Sub
Sub Show_Hide_IT_OPS_DataSources()
  ActiveSheet.Shapes.Range(Array("Button 13")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show("ITOPS_Table", 23, 133, "Button 13", "Chart 33", 1, 15)
  Else
    Call Hide("ITOPS_Table", 23, 133, "Button 13", "Chart 33", 15)
  End If
End Sub
Sub Show_Hide_App_Support_Adoption()
  ActiveSheet.Shapes.Range(Array("Button 2")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show("AppSupp_Table", 146, 156, "Button 2", "Chart 41", 0, 140)
  Else
    Call Hide("AppSupp_Table", 146, 156, "Button 2", "Chart 41", 140)
  End If
End Sub
Sub Show_Hide_App_Support_DataSources()
  ActiveSheet.Shapes.Range(Array("Button 14")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show("AppSupp_Table", 158, 267, "Button 14", "Chart 41", 1, 140)
  Else
    Call Hide("AppSupp_Table", 158, 267, "Button 14", "Chart 41", 140)
  End If
End Sub
Sub Show_Hide_Security_Adoption()
  ActiveSheet.Shapes.Range(Array("Button 3")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show("Security_Table", 280, 290, "Button 3", "Chart 48", 0, 269)
  Else
    Call Hide("Security_Table", 280, 290, "Button 3", "Chart 48", 269)
  End If
End Sub
Sub Show_Hide_Security_DataSources()
  ActiveSheet.Shapes.Range(Array("Button 17")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show("Security_Table", 292, 401, "Button 17", "Chart 48", 1, 269)
  Else
    Call Hide("Security_Table", 292, 401, "Button 17", "Chart 48", 269)
  End If
End Sub

Sub Show_Hide_App_Dev_Adoption()
  ActiveSheet.Shapes.Range(Array("Button 4")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show("AppDev_Table", 414, 425, "Button 4", "Chart 49", 0, 398)
  Else
    Call Hide("AppDev_Table", 414, 425, "Button 4", "Chart 49", 398)
  End If
End Sub
Sub Show_Hide_App_Dev_Datasources()
  ActiveSheet.Shapes.Range(Array("Button 20")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show("AppDev_Table", 427, 536, "Button 20", "Chart 49", 1, 398)
  Else
    Call Hide("AppDev_Table", 427, 536, "Button 20", "Chart 49", 398)
  End If
End Sub
Sub Show_Hide_Business_Analytics_Adoption()
  ActiveSheet.Shapes.Range(Array("Button 5")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show("BizAnalytics_Table", 549, 556, "Button 5", "Chart 58", 0, 528)
  Else
    Call Hide("BizAnalytics_Table", 549, 556, "Button 5", "Chart 58", 528)
  End If
End Sub
Sub Show_Hide_Business_Analytics_DataSources()
  ActiveSheet.Shapes.Range(Array("Button 22")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show("BizAnalytics_Table", 558, 667, "Button 22", "Chart 58", 1, 528)
  Else
    Call Hide("BizAnalytics_Table", 558, 667, "Button 22", "Chart 58", 528)
  End If
End Sub
Sub Hide(table_nm As String, row1 As Integer, row2 As Integer, button_nm As String, chart_nm As String, select_row As Integer)
    Application.ScreenUpdating = False
    Rows(row1 & ":" & row2).Select
    Selection.EntireRow.Hidden = True
    Range("B" & row1).Select
    ActiveSheet.Shapes.Range(Array(button_nm)).Select
    Selection.Characters.Text = "+"
    Range("M" & select_row).Select
    ActiveSheet.Shapes(chart_nm).Height = 193.68
    Application.ScreenUpdating = True
End Sub

Sub Show(table_nm As String, row1 As Integer, row2 As Integer, button_nm As String, chart_nm As String, apply_filters As Integer, select_row As Integer)
    Application.ScreenUpdating = False
    Rows(row1 & ":" & row2).Select
    Selection.EntireRow.Hidden = False
        
    If apply_filters Then

      With ActiveWorkbook.Worksheets("Analysis").ListObjects(table_nm)
         .AutoFilter.ApplyFilter
      End With
       
      Set Lst = ActiveSheet.ListObjects(table_nm)
      i = 1
      For Each c In Lst.HeaderRowRange
        Lst.Range.AutoFilter Field:=i, _
        VisibleDropDown:=False
        i = i + 1
      Next
       
      ActiveSheet.ListObjects(table_nm).Range.AutoFilter Field:=2, Criteria1 _
        :=">0", Operator:=xlAnd
 '''   ActiveSheet.ListObjects(table_nm).Range.AutoFilter Field:=8, Criteria1 _
 '''       :="<1", Operator:=xlAnd
      ActiveSheet.ListObjects(table_nm).Range.AutoFilter Field:=12, Criteria1 _
        :="x", Operator:=xlAnd
    
    End If
    
    ActiveSheet.Shapes(chart_nm).Height = 193.68
    
    ActiveSheet.Shapes.Range(Array(button_nm)).Select
    Selection.Characters.Text = "-"
    Range("M" & select_row).Select
    Application.ScreenUpdating = True
End Sub



Sub show_current_datasources()
    Exit Sub
    Application.ScreenUpdating = False
    r = 6
    nr = 267
    Do Until r = 70
        Sheets("Content Mapping").Select
        If Range("C" & r).Value > 0.19 Then
            c = 4
            Do Until c = 34
                If Cells(r, c).Value = "x" Then
                    t_datatype = Cells(4, c).Value
                    Sheets("DataModel-DataType Mapping").Select
                    cc1 = 6
                    Do Until cc1 = 36
                        If Cells(4, cc1).Value = t_datatype Then
                            rr1 = 6
                            Do Until rr1 = 115
                                If Cells(rr1, cc1).Value = "x" Then
                                    t_CI1 = Cells(rr1, 3).Value
                                    t_CI2 = Cells(rr1, 4).Value
                                    Sheets("Security Recommendations").Select
                                    Application.ScreenUpdating = True
                                    Cells(nr, 2).Value = t_CI1
                                    Cells(nr, 3).Value = t_CI2
                                    Application.ScreenUpdating = False
                                    nr = nr + 1
                                    Sheets("DataModel-DataType Mapping").Select
                                End If
                                rr1 = rr1 + 1
                            Loop
                        End If
                        cc1 = cc1 + 1
                    Loop
                End If
                c = c + 1
            Loop
        End If
        r = r + 1
    Loop
    Sheets("Security Recommendations").Select
    Application.ScreenUpdating = True
End Sub


Sub reset_allSecToNo()
'Set all required content in Sheet "STEP 3 -..." to "no"
    Call SetVars
    ActiveWorkbook.Worksheets("STEP 3 - Content").Range("D" & CStr(S3_SE_start), "D" & CStr(S3_SE_end)).Value = "no"
        ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_SE_start), "D" & CStr(S3_SE_end)).Interior.ColorIndex = 0
        
    ActiveWorkbook.Worksheets("STEP 3 - Content").Range("D" & CStr(S3_CIS_start), "D" & CStr(S3_CIS_end)).Value = "no"
        ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_CIS_start), "D" & CStr(S3_CIS_end)).Interior.ColorIndex = 0
        
    ActiveWorkbook.Worksheets("STEP 3 - Content").Range("D" & CStr(S3_ES_start), "D" & CStr(S3_ES_end)).Value = "no"
        ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_ES_start), "D" & CStr(S3_ES_end)).Interior.ColorIndex = 0
        
    ActiveWorkbook.Worksheets("STEP 3 - Content").Range("D" & CStr(S3_ES_DB_start), "D" & CStr(S3_ES_DB_end)).Value = "no"
        ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_ES_DB_start), "D" & CStr(S3_ES_DB_end)).Interior.ColorIndex = 0
        
    ActiveWorkbook.Worksheets("STEP 3 - Content").Range("D" & CStr(S3_ESCU_start), "D" & CStr(S3_ESCU_end)).Value = "no"
        ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_ESCU_start), "D" & CStr(S3_ESCU_end)).Interior.ColorIndex = 0
        
    ActiveWorkbook.Worksheets("STEP 3 - Content").Range("D" & CStr(S3_UBA_start), "D" & CStr(S3_UBA_end)).Value = "no"
            ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_UBA_start), "D" & CStr(S3_UBA_end)).Interior.ColorIndex = 0

End Sub

Sub reset_allITOAToNo()
'Set all required content in Sheet "STEP 3 -..." to "no"
    Call SetVars
  
    ActiveWorkbook.Worksheets("STEP 3 - Content").Range("D" & CStr(S3_ITSI_start), "D" & CStr(S3_ITSI_end)).Value = "no"
            ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_ITSI_start), "D" & CStr(S3_ITSI_end)).Interior.ColorIndex = 0

End Sub




Sub set_ALL_use_cases()
    
details = 1
Indexed = 1

    Call SetVars
    Call check_Boxes
    Call reset_allSecToNo
    Call reset_allITOAToNo
    
    'Set all ES OTB to "yes"
    Set ES_OTB = ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_ES_start), "B" & CStr(S3_ES_end))
    
    For Each cell_ES_OTB In ES_OTB
           If Len(cell_ES_OTB) > 0 Then
              Range("D" & cell_ES_OTB.Row).Value = "yes"
              Range("B" & cell_ES_OTB.Row, "F" & cell_ES_OTB.Row).Interior.ColorIndex = 43
            End If
    Next
    
    'Set all ES DB OTB to "yes"
    Set ES_DB_OTB = ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_ES_DB_start), "B" & CStr(S3_ES_DB_end))
    
    For Each cell_ES_DB_OTB In ES_DB_OTB
           If Len(cell_ES_DB_OTB) > 0 Then
              Range("D" & cell_ES_DB_OTB.Row).Value = "yes"
              Range("B" & cell_ES_DB_OTB.Row, "F" & cell_ES_DB_OTB.Row).Interior.ColorIndex = 43
            End If
    Next
    
   'Set all SE to "yes"
    Set ES_OTB = ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_SE_start), "B" & CStr(S3_SE_end))
    
    For Each cell_ES_OTB In ES_OTB
            If Len(cell_ES_OTB) > 0 Then
              Range("D" & cell_ES_OTB.Row).Value = "yes"
              Range("B" & cell_ES_OTB.Row, "F" & cell_ES_OTB.Row).Interior.ColorIndex = 43
            End If
    Next
    
    'Set all CIS to "yes"
    Set ES_OTB = ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_CIS_start), "B" & CStr(S3_CIS_end))
    
    For Each cell_ES_OTB In ES_OTB
              Range("D" & cell_ES_OTB.Row).Value = "yes"
              Range("B" & cell_ES_OTB.Row, "F" & cell_ES_OTB.Row).Interior.ColorIndex = 43
    Next


    'Set all ESCU to "yes"
    Set ES_OTB = ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_ESCU_start), "B" & CStr(S3_ESCU_end))
    
    For Each cell_ES_OTB In ES_OTB
            If Len(cell_ES_OTB) > 0 Then 'If Not IsEmpty(cell_ES_OTB) Then
              Range("D" & cell_ES_OTB.Row).Value = "yes"
              Range("B" & cell_ES_OTB.Row, "F" & cell_ES_OTB.Row).Interior.ColorIndex = 43
            End If
    Next

    'Set all UBA to "yes"
    Set UBA_OTB = ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_UBA_start), "B" & CStr(S3_UBA_end))
    
    For Each cell_UBA_OTB In UBA_OTB
            If Len(cell_UBA_OTB) > 0 _
            And cell_UBA_OTB.Row <> 387 _
            And cell_UBA_OTB.Row <> 410 _
            Then
              Range("D" & cell_UBA_OTB.Row).Value = "yes"
              Range("B" & cell_UBA_OTB.Row, "F" & cell_UBA_OTB.Row).Interior.ColorIndex = 43
            End If
    Next
    
    'Set all ITSI to "yes"
    Set ITSI_OTB = ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_ITSI_start), "B" & CStr(S3_ITSI_end))
    
    For Each cell_ITSI_OTB In ITSI_OTB
            If Len(cell_ITSI_OTB) > 0 _
            And cell_ITSI_OTB.Row <> 463 _
            And cell_ITSI_OTB.Row <> 475 _
            Then
              Range("D" & cell_ITSI_OTB.Row).Value = "yes"
              Range("B" & cell_ITSI_OTB.Row, "F" & cell_ITSI_OTB.Row).Interior.ColorIndex = 43
            End If
    Next

End Sub



Sub set_SiemEssentials_controls()
    Call SetVars
    Call reset_allToNo
   'Set all SE to "yes"
    Set ES_OTB = ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_SE_start), "B" & CStr(S3_SE_end))
    
    For Each cell_ES_OTB In ES_OTB
            If Len(cell_ES_OTB) > 0 Then
              Range("D" & cell_ES_OTB.Row).Value = "yes"
              Range("B" & cell_ES_OTB.Row, "E" & cell_ES_OTB.Row).Interior.ColorIndex = 43
            End If
    Next
End Sub



Sub OptionButton10_EnableLookup()
    details = 1
End Sub

Sub OptionButton11_DisableLookup()
    details = 0
End Sub

Sub OptionButton12_Indexed1()
    Indexed = 1
End Sub

Sub OptionButton13_Indexed0()
    Indexed = 0
End Sub

Sub OptionButton14_Items111()
    Items = 111
End Sub

Sub Button1_ResetDSA(Indexed As Integer, Items As Integer)


'Reset STEP - 1
Worksheets("STEP 1 - Key Goals").Range("D7:D13,D18:D24,D29:D36,D41:D45,D54:D58").Value = "NO"

'Reset STEP - 2
'Reset data items
    Worksheets("STEP 2 - Data Sources").Range("C14:C24,C50:C57,C82:C99,C125:C129,C154:C165,C191:C201,C227:C235,C257:C273,C295:C298,C323:C330,C359:C364,C393:C398,C427:C432,C461:C466").Value = Items
'Reset % indexed
    Worksheets("STEP 2 - Data Sources").Range("E14:E24,E50:E57,E82:E99,E125:E129,E154:E165,E191:E201,E227:E235,E257:E273,E295:E298,E323:E330,E359:E364,E393:E398,E427:E432,E461:E466").Value = Indexed
'Reset % Data Source Types Indexed
    Worksheets("STEP 2 - Data Sources").Range("I14:I24,I50:I57,I82:I99,I125:I129,I154:I165,I191:I201,I227:I235,I257:I273,I295:I298,I323:I330,I359:I364,I393:I398,I427:I432,I461:I466").Value = Indexed
    

'Reset "Other Logs... ..." with NO - this is important for "Sheet: "
    Worksheets("STEP 2 - Data Sources").Range("E28:E32,I28,O28:O32,E61:E65,I61,O61:O65,E103:E107,I103,O103:O107,E133:E137,I133,O133:O137,E169:E173,I169,O169:O173,E205:E209").Value = "No"
    Worksheets("STEP 2 - Data Sources").Range("I205,O205:O209,E239:E243,I239,O239:O243,E277:E281,I277:I278,O277:O281,E302:E306,I302:I303,O302:O306,E334:E338,I334:I335,O334:O337").Value = "NO"
    Worksheets("STEP 2 - Data Sources").Range("E368:E372,I368:I369,O368:O371,E402:E406,I402:I403,O402:O405,E436:E440,I436:I437,O436:O439,E470:E474,I470:I471,O470:O473").Value = "NO"
         
'Reset "Is Splunk in use by ..." with NO - this is important for "Sheet: Adoption Chart"
    Worksheets("STEP 2 - Data Sources").Range("E36:E44,E69:E76,E111:E117,E141:E148,E177:E185,E213:E219,E247:E249,E285:E289,E310:E315,E342:E353,E376:E387,E410:E421,E444:E455,E478:E489").Value = "NO"
    
'Reset value realized
    Worksheets("STEP 2 - Data Sources").Range("O36:O41,O69:O73,O111:O114,O141:O145,O177:O182,O213:O216,O247:O249,O285:O288,O310:O313,O376:O385,O410:O419,O444:O453,O478:O487,O342:O351").Value = 0
       
'Reset Comments
   Worksheets("STEP 2 - Data Sources").Range("X10:X487").Value = ""




End Sub

Sub HideSheets_ResetButtons()
    Sheets("Introduction").Visible = True
    Sheets("STEP 1 - Key Goals").Visible = True
    Sheets("STEP 2 - Data Sources").Visible = True
    Sheets("STEP 3 - Content").Visible = True
    Sheets("Key Goals").Visible = False
    Sheets("Overview").Visible = False
    Sheets("Analysis").Visible = False
    Sheets("Value Realized").Visible = False
    Sheets("Adoption Chart").Visible = False
    Sheets("Recommendation1").Visible = False
    Sheets("Recommendation2").Visible = False
    Sheets("Data Mapping").Visible = False
    Sheets("DataModel-DataType Mapping").Visible = False
    Sheets("Content Mapping").Visible = False
    Sheets("OOTB ES Dashboards 4.5 Mapping").Visible = False
    Sheets("Security Recommendations").Visible = False
    Sheets("ITOA Recommendations").Visible = False
    Sheets("Kill-Chain Mapping").Visible = False
    Sheets("Dashboard").Visible = False
    Sheets("lookup").Visible = False
    Sheets("content").Visible = False
    Sheets("SOC Use Cases Designer").Visible = False
End Sub

Sub UnhideSheets_FullDSA()
    Sheets("Introduction").Visible = True
    Sheets("STEP 1 - Key Goals").Visible = True
    Sheets("STEP 2 - Data Sources").Visible = True
    Sheets("STEP 3 - Content").Visible = True
    Sheets("Key Goals").Visible = True
    Sheets("Overview").Visible = True
    Sheets("Analysis").Visible = True
    Sheets("Value Realized").Visible = True
    Sheets("Adoption Chart").Visible = True
    Sheets("Recommendation1").Visible = True
    Sheets("Recommendation2").Visible = True
    Sheets("Data Mapping").Visible = False
    Sheets("DataModel-DataType Mapping").Visible = False
    Sheets("Content Mapping").Visible = False
    Sheets("OOTB ES Dashboards 4.5 Mapping").Visible = False
    Sheets("Security Recommendations").Visible = True
    Sheets("ITOA Recommendations").Visible = True
    Sheets("Dashboard").Visible = True
    Sheets("lookup").Visible = False
End Sub

Sub UnhideSheets_SecDSA()
    Sheets("Introduction").Visible = True
    Sheets("STEP 1 - Key Goals").Visible = True
    Sheets("STEP 2 - Data Sources").Visible = True
    Sheets("STEP 3 - Content").Visible = True
    Sheets("Key Goals").Visible = False
    Sheets("Overview").Visible = True
    Sheets("Analysis").Visible = True
    Sheets("Value Realized").Visible = False
    Sheets("Adoption Chart").Visible = False
    Sheets("Recommendation1").Visible = False
    Sheets("Recommendation2").Visible = False
    Sheets("Data Mapping").Visible = False
    Sheets("DataModel-DataType Mapping").Visible = False
    Sheets("Content Mapping").Visible = False
    Sheets("OOTB ES Dashboards 4.5 Mapping").Visible = False
    Sheets("Security Recommendations").Visible = True
    Sheets("Dashboard").Visible = True
    Sheets("lookup").Visible = False
End Sub


Sub Button_FullDSA()

    If MsgBox("This will reset the entire DSA workbook. Are you sure?", vbYesNo) = vbNo Then Exit Sub
    
    Application.ScreenUpdating = False
    
    Call Button1_ResetDSA(Indexed, 0)
    Call HideSheets_ResetButtons
    
    Application.ScreenUpdating = True
    
    Worksheets("STEP 2 - Data Sources").Outline.ShowLevels RowLevels:=8, ColumnLevels:=8
    'Worksheets("STEP 2 - Data Sources").Range("B25:B43,B58:B75,B97:B113,B127:B144,B159:B177,B192:B208,B224:B236,B261:B275,B285:B300,B315:B336,B349:B370,B383:B404,B417:B438,B451:B472").EntireRow.Hidden = False
    'Worksheets("STEP 2 - Data Sources").Outline.ShowLevels RowLevels:=1, ColumnLevels:=1
    
End Sub


Sub Button8_Dev()

    If MsgBox("This will reset the entire DSA workbook. Are you sure?", vbYesNo) = vbNo Then Exit Sub
    
    Application.ScreenUpdating = False
    Indexed = 1

    Call Button1_ResetDSA(1, 111)
        
    Dim ws As Worksheet
    For Each ws In ActiveWorkbook.Worksheets
        ws.Visible = xlSheetVisible
    Next ws
    Application.ScreenUpdating = True
    
    Worksheets("Introduction").Activate

End Sub


Sub Expand_All()
    ActiveSheet.Outline.ShowLevels RowLevels:=8, ColumnLevels:=8
End Sub


Sub Collapse_All()
    ActiveSheet.Outline.ShowLevels RowLevels:=1, ColumnLevels:=1
End Sub




Sub Button1_GetDS()

Dim ucs As Integer
Dim count As Integer
count = 0
Dim DataSources As String

For uc = 4 To 293

    Dim ds As Integer

    For ds = 33 To 65

        If Cells(uc, ds).Value = "x" Then
        DataSources = DataSources & Cells(2, ds).Value & "; "
        count = count + 1
        End If
    
    Next ds
    'Cells(uc, 32).Value = "(" & count & ")" & " - " & DataSources
    Cells(uc, 34).Value = DataSources
    DataSources = ""
    count = 0
Next uc

End Sub


'Create Report Sheet
Sub CreateSheet()
    With ThisWorkbook
        .Sheets.Add(After:=.Sheets(.Sheets.count)).Name = "Temp"
    End With
End Sub

'Buttons in Sheet "Step 1 - Key Goals" to set the use-case group goals to "YES"
Sub Button_ITOps_SetYes_Click()
    Worksheets("STEP 1 - Key Goals").Range("D7:D13").Value = "YES"
End Sub

Sub Button_AppSupport_SetYes_Click()
    Worksheets("STEP 1 - Key Goals").Range("D18:D24").Value = "YES"
End Sub

Sub Button_SecCompFraud_SetYes_Click()
    Worksheets("STEP 1 - Key Goals").Range("D29:D36").Value = "YES"
End Sub

Sub Button_AppDev_SetYes_Click()
    Worksheets("STEP 1 - Key Goals").Range("D41:D45").Value = "YES"
End Sub

Sub Button_BizAnalytics_SetYes_Click()
    Worksheets("STEP 1 - Key Goals").Range("D54:D58").Value = "YES"
End Sub


Sub Button20_CopySPLtoClipboard()
  Call Worksheets("STEP 2 - Data Sources").Range("AK1").Copy
  MsgBox "The SPL is now copied to your clipboard. " & vbNewLine & "Please paste it into your Splunk search and remove the leading and ending quotes...", vbInformation
End Sub


Sub Button20_ExportKillChain()
    Call Worksheets("Kill-Chain Mapping").Range("A5:G28").CopyPicture(xlScreen, xlPicture)
    Call CopyMsg
End Sub

Sub Button20_ExportKillChainDashboards()
    Call Worksheets("Kill-Chain Mapping").Range("A30:G79").CopyPicture(xlScreen, xlPicture)
    Call CopyMsg
End Sub

Sub Button20_ExportES_SecurityRecommendations()
    Call Worksheets("Security Recommendations").Range("B10:D60").CopyPicture(xlScreen, xlPicture)
    Call CopyMsg
End Sub

Sub Button20_ExportES_Dashboards_SecurityRecommendations()
    Call Worksheets("Security Recommendations").Range("B75:D137").CopyPicture(xlScreen, xlPicture)
    Call CopyMsg
End Sub

Sub Button20_Export_SecurityEssentials_part1_SecurityRecommendations()
    Call Worksheets("Security Recommendations").Range("B142:D208").CopyPicture(xlScreen, xlPicture)
    Call CopyMsg
End Sub
Sub Button20_Export_SecurityEssentials_part2_SecurityRecommendations()
    Call Worksheets("Security Recommendations").Range("B209:D274").CopyPicture(xlScreen, xlPicture)
    Call CopyMsg
End Sub

Sub Button20_Export_ESCU_SecurityRecommendations()
    Call Worksheets("Security Recommendations").Range("B283:D342").CopyPicture(xlScreen, xlPicture)
    Call CopyMsg
End Sub

Sub Button20_Export_CIS_SecurityRecommendations()
    Call Worksheets("Security Recommendations").Range("B352:D378").CopyPicture(xlScreen, xlPicture)
    Call CopyMsg
End Sub

Sub Button20_Export_UBA_SecurityRecommendations()
    Call Worksheets("Security Recommendations").Range("B383:E449").CopyPicture(xlScreen, xlPicture)
    Call CopyMsg
End Sub

Sub Button20_Export_Autobahn_SecurityRecommendations()
    Call Worksheets("Security Recommendations").Range("B457:E469").CopyPicture(xlScreen, xlPicture)
    Call CopyMsg
End Sub


Sub Button20_Export_DataSourceInventory_SecurityRecommendations()
    Call Worksheets("Security Recommendations").Range("B476:C614").CopyPicture(xlScreen, xlPicture)
    Call CopyMsg
End Sub

Sub Button20_ExportITSI_Recommendations()
    Call Worksheets("ITOA Recommendations").Range("B8:D79").CopyPicture(xlScreen, xlPicture)
    Call CopyMsg
End Sub
    Sub CopyMsg()
        MsgBox "OK, it's in your clipboard now." & vbNewLine & "Paste it somewhere..."
    End Sub

Sub Button20_LaunchSOCUseCaseDesigner()

    Application.ScreenUpdating = False
 
    Sheets("SOC Use Cases Designer").Visible = True

    Application.ScreenUpdating = True
    
    Worksheets("SOC Use Cases Designer").Activate

End Sub

Sub Button_ExportDSA_Click()
    Dim excelRange As Range
    Dim jsonItems As New Collection
    Dim jsonDictionary As New Dictionary
    Dim i As Long
    Dim cell As Variant
    
    
    Set excelRange = Cells(1, 1).CurrentRegion

For i = 2 To excelRange.Rows.count
    jsonDictionary("id") = Cells(i, 1)
    jsonDictionary("name") = Cells(i, 2)
    jsonDictionary("username") = Cells(i, 3)
    jsonDictionary("email") = Cells(i, 4)
    jsonDictionary("street") = Cells(i, 5)
    jsonDictionary("suite") = Cells(i, 6)
    jsonDictionary("city") = Cells(i, 7)
    jsonDictionary("zipcode") = Cells(i, 8)
    jsonDictionary("phone") = Cells(i, 9)
    jsonDictionary("website") = Cells(i, 10)
    jsonDictionary("company") = Cells(i, 11)

    jsonItems.Add jsonDictionary
    Set jsonDictionary = Nothing
Next i

MsgBox JsonConverter.ConvertToJson(jsonItems, Whitespace:=3)
End Sub




Sub Show_Hide_Adoption_SysAdmin()
  ActiveSheet.Shapes.Range(Array("Button 1")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show_Adoption("Adoption_SysAdmin", 8, 117, "Button 1")
  Else
    Call Hide_Adoption("Adoption_SysAdmin", 8, 117, "Button 1")
  End If
End Sub

Sub Show_Hide_Adoption_StorageAdmin()
  ActiveSheet.Shapes.Range(Array("Button 6")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show_Adoption("Adoption_StorageAdmin", 119, 228, "Button 6")
  Else
    Call Hide_Adoption("Adoption_StorageAdmin", 119, 228, "Button 6")
  End If
End Sub

Sub Show_Hide_Adoption_NetworkAdmin()
  ActiveSheet.Shapes.Range(Array("Button 7")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show_Adoption("Adoption_NetworkAdmin", 230, 339, "Button 7")
  Else
    Call Hide_Adoption("Adoption_NetworkAdmin", 230, 339, "Button 7")
  End If
End Sub

Sub Show_Hide_Adoption_DatabaseAdmin()
  ActiveSheet.Shapes.Range(Array("Button 8")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show_Adoption("Adoption_DatabaseAdmin", 341, 450, "Button 8")
  Else
    Call Hide_Adoption("Adoption_DatabaseAdmin", 341, 450, "Button 8")
  End If
End Sub

Sub Show_Hide_Adoption_AppSupport()
  ActiveSheet.Shapes.Range(Array("Button 9")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show_Adoption("Adoption_AppSupport", 452, 561, "Button 9")
  Else
    Call Hide_Adoption("Adoption_AppSupport", 452, 561, "Button 9")
  End If
End Sub

Sub Show_Hide_Adoption_EndUserSupport()
  ActiveSheet.Shapes.Range(Array("Button 19")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show_Adoption("Adoption_EndUserSupport", 563, 672, "Button 19")
  Else
    Call Hide_Adoption("Adoption_EndUserSupport", 563, 672, "Button 19")
  End If
End Sub

Sub Show_Hide_Adoption_Security()
  ActiveSheet.Shapes.Range(Array("Button 11")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show_Adoption("Adoption_Security", 674, 783, "Button 11")
  Else
    Call Hide_Adoption("Adoption_Security", 674, 783, "Button 11")
  End If
End Sub

Sub Show_Hide_Adoption_Fraud()
  ActiveSheet.Shapes.Range(Array("Button 12")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show_Adoption("Adoption_Fraud", 785, 894, "Button 12")
  Else
    Call Hide_Adoption("Adoption_Fraud", 785, 894, "Button 12")
  End If
End Sub

Sub Show_Hide_Adoption_TestDev()
  ActiveSheet.Shapes.Range(Array("Button 13")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show_Adoption("Adoption_TestDev", 896, 1005, "Button 13")
  Else
    Call Hide_Adoption("Adoption_TestDev", 896, 1005, "Button 13")
  End If
End Sub

Sub Show_Hide_Adoption_BizService1()
  ActiveSheet.Shapes.Range(Array("Button 14")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show_Adoption("Adoption_BizService1", 1007, 1116, "Button 14")
  Else
    Call Hide_Adoption("Adoption_BizService1", 1007, 1116, "Button 14")
  End If
End Sub

Sub Show_Hide_Adoption_BizService2()
  ActiveSheet.Shapes.Range(Array("Button 15")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show_Adoption("Adoption_BizService2", 1118, 1227, "Button 15")
  Else
    Call Hide_Adoption("Adoption_BizService2", 1118, 1227, "Button 15")
  End If
End Sub

Sub Show_Hide_Adoption_BizService3()
  ActiveSheet.Shapes.Range(Array("Button 16")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show_Adoption("Adoption_BizService3", 1229, 1338, "Button 16")
  Else
    Call Hide_Adoption("Adoption_BizService3", 1229, 1338, "Button 16")
  End If
End Sub

Sub Show_Hide_Adoption_BizService4()
  ActiveSheet.Shapes.Range(Array("Button 17")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show_Adoption("Adoption_BizService4", 1340, 1449, "Button 17")
  Else
    Call Hide_Adoption("Adoption_BizService4", 1340, 1449, "Button 17")
  End If
End Sub

Sub Show_Hide_Adoption_BizService5()
  ActiveSheet.Shapes.Range(Array("Button 18")).Select
  If (Selection.Characters.Text = "+") Then
    Call Show_Adoption("Adoption_BizService5", 1451, 1560, "Button 18")
  Else
    Call Hide_Adoption("Adoption_BizService5", 1451, 1560, "Button 18")
  End If
End Sub

Sub Hide_Adoption(table_nm As String, row1 As Integer, row2 As Integer, button_nm As String)
    Application.ScreenUpdating = False
    Rows(row1 & ":" & row2).Select
    Selection.EntireRow.Hidden = True
    Range("B" & row1).Select
    ActiveSheet.Shapes.Range(Array(button_nm)).Select
    Selection.Characters.Text = "+"
    Range("B" & row1).Select
    Application.ScreenUpdating = True
End Sub

Sub Show_Adoption(table_nm As String, row1 As Integer, row2 As Integer, button_nm As String)
    Application.ScreenUpdating = False
    Rows(row1 & ":" & row2).Select
    Selection.EntireRow.Hidden = False
    With ActiveWorkbook.Worksheets("Adoption Chart").ListObjects(table_nm)
         .AutoFilter.ApplyFilter
    End With
     
    Set Lst = ActiveSheet.ListObjects(table_nm)
    i = 1
    For Each c In Lst.HeaderRowRange
      Lst.Range.AutoFilter Field:=i, _
      VisibleDropDown:=False
      i = i + 1
    Next
     
    ActiveSheet.ListObjects(table_nm).Range.AutoFilter Field:=2, Criteria1 _
        :=">0", Operator:=xlAnd
     ActiveSheet.ListObjects(table_nm).Range.AutoFilter Field:=18, Criteria1 _
        :="x", Operator:=xlAnd
  
    Range("B" & row1).Select
    ActiveSheet.Shapes.Range(Array(button_nm)).Select
    Selection.Characters.Text = "-"
    Range("B" & row1).Select
    Application.ScreenUpdating = True
End Sub

Sub SetVars()
S3_SE_start = 11
S3_SE_end = 153

S3_CIS_start = 158
S3_CIS_end = 183

S3_ES_start = 188
S3_ES_end = 247

S3_ES_DB_start = 250
S3_ES_DB_end = 311

S3_ESCU_start = 316
S3_ESCU_end = 383

S3_UBA_start = 388
S3_UBA_end = 453

S3_ITSI_start = 463
S3_ITSI_end = 523

End Sub

Sub Bildlaufleiste4_Change()

Application.ScreenUpdating = False

   Set proc_indxd = Range("C9:C362")
    For Each cell_proc_indxd In proc_indxd
        If Not IsEmpty(cell_proc_indxd.Value) And IsNumeric(cell_proc_indxd.Value) And cell_proc_indxd.Value <= Range("P2").Value / 100 Then
           Range("B" & cell_proc_indxd.Row, "E" & cell_proc_indxd.Row).Interior.Color = RGB(255, 255, 255)
           Range("Q" & cell_proc_indxd.Row).Value = "no"
        End If
        If Not IsEmpty(cell_proc_indxd.Value) And IsNumeric(cell_proc_indxd.Value) And cell_proc_indxd.Value >= Range("P2").Value / 100 Then
           Range("B" & cell_proc_indxd.Row, "E" & cell_proc_indxd.Row).Interior.Color = RGB(102, 204, 255)
           Range("Q" & cell_proc_indxd.Row).Value = "yes"
        End If
    Next
        
    'UBA, as it is special
       Set proc_indxd = Range("C368:C395")
    For Each cell_proc_indxd In proc_indxd
        If Not IsEmpty(cell_proc_indxd.Value) And IsNumeric(cell_proc_indxd.Value) And cell_proc_indxd.Value < 1 Then
           Range("B" & cell_proc_indxd.Row, "E" & cell_proc_indxd.Row).Interior.Color = RGB(255, 255, 255)
           Range("Q" & cell_proc_indxd.Row).Value = "no"
        End If
        If Not IsEmpty(cell_proc_indxd.Value) And IsNumeric(cell_proc_indxd.Value) And cell_proc_indxd.Value >= 1 Then
           Range("B" & cell_proc_indxd.Row, "E" & cell_proc_indxd.Row).Interior.Color = RGB(102, 204, 255)
           Range("Q" & cell_proc_indxd.Row).Value = "yes"
        End If
    Next
            
 Application.ScreenUpdating = True

End Sub

Sub Bildlaufleiste_ITOA_Change()

Application.ScreenUpdating = False

   Set proc_indxd = Worksheets("ITOA Recommendations").Range("C9:C38")
    For Each cell_proc_indxd In proc_indxd
        If Not IsEmpty(cell_proc_indxd.Value) And IsNumeric(cell_proc_indxd.Value) And cell_proc_indxd.Value <= Worksheets("ITOA Recommendations").Range("P2").Value / 100 Then
           Worksheets("ITOA Recommendations").Range("B" & cell_proc_indxd.Row, "E" & cell_proc_indxd.Row).Interior.Color = RGB(255, 255, 255)
           Worksheets("ITOA Recommendations").Range("Q" & cell_proc_indxd.Row).Value = "no"
        End If
        If Not IsEmpty(cell_proc_indxd.Value) And IsNumeric(cell_proc_indxd.Value) And cell_proc_indxd.Value >= Worksheets("ITOA Recommendations").Range("P2").Value / 100 Then
           Worksheets("ITOA Recommendations").Range("B" & cell_proc_indxd.Row, "E" & cell_proc_indxd.Row).Interior.Color = RGB(102, 204, 255)
           Worksheets("ITOA Recommendations").Range("Q" & cell_proc_indxd.Row).Value = "yes"
        End If
    Next
        
Application.ScreenUpdating = True
            

End Sub

Sub OptionButton_PossibleOnly_Click()

    Application.ScreenUpdating = False
   Set proc_indxd = Worksheets("Security Recommendations").Range("Q11:Q472")
    For Each cell_proc_indxd In proc_indxd
        If cell_proc_indxd.Value = "no" Then
           Worksheets("Security Recommendations").Range("Q" & cell_proc_indxd.Row).EntireRow.Hidden = True
        End If
        If cell_proc_indxd.Value = "yes" Then
           Worksheets("Security Recommendations").Range("Q" & cell_proc_indxd.Row).EntireRow.Hidden = False
        End If
    Next
    Application.ScreenUpdating = True
End Sub

Sub OptionButton_NewDataOnly_Click()

    Application.ScreenUpdating = False
   Set proc_indxd = Worksheets("Security Recommendations").Range("Q11:Q472")
    For Each cell_proc_indxd In proc_indxd
        If cell_proc_indxd.Value = "no" Then
           Worksheets("Security Recommendations").Range("Q" & cell_proc_indxd.Row).EntireRow.Hidden = False
        End If
        If cell_proc_indxd.Value = "yes" Then
           Worksheets("Security Recommendations").Range("Q" & cell_proc_indxd.Row).EntireRow.Hidden = True
        End If
    Next
    Application.ScreenUpdating = True
End Sub

Sub OptionButton_UnhideAll_Click()

   Worksheets("Security Recommendations").Columns.EntireColumn.Hidden = False
   Worksheets("Security Recommendations").Rows.EntireRow.Hidden = False

End Sub

Sub OptionButton_ITOA_PossibleOnly_Click()

    Application.ScreenUpdating = False
   Set proc_indxd = Worksheets("ITOA Recommendations").Range("Q10:Q77")
    For Each cell_proc_indxd In proc_indxd
        If cell_proc_indxd.Value = "no" Then
           Worksheets("ITOA Recommendations").Range("Q" & cell_proc_indxd.Row).EntireRow.Hidden = True
        End If
        If cell_proc_indxd.Value = "yes" Then
           Worksheets("ITOA Recommendations").Range("Q" & cell_proc_indxd.Row).EntireRow.Hidden = False
        End If
    Next
    Application.ScreenUpdating = True
End Sub

Sub OptionButton_ITOA_NewDataOnly_Click()

    Application.ScreenUpdating = False
   Set proc_indxd = Worksheets("ITOA Recommendations").Range("Q9:Q500")
    For Each cell_proc_indxd In proc_indxd
        If cell_proc_indxd.Value = "no" Then
           Worksheets("ITOA Recommendations").Range("Q" & cell_proc_indxd.Row).EntireRow.Hidden = False
        End If
        If cell_proc_indxd.Value = "yes" Then
           Worksheets("ITOA Recommendations").Range("Q" & cell_proc_indxd.Row).EntireRow.Hidden = True
        End If
    Next
    Application.ScreenUpdating = True
End Sub

Sub OptionButton_ITOA_UnhideAll_Click()

   Worksheets("ITOA Recommendations").Columns.EntireColumn.Hidden = False
   Worksheets("ITOA Recommendations").Rows.EntireRow.Hidden = False

End Sub
Attribute VB_Name = "Module2"
'|fffd| copyright 2018 - Splunk Inc. All rights reserved
'You may use this workbook in the context of the Splunk project and the Data Source Assessment
'Distribution is strictly forbidden
'Angelo Brancato <abrancato@splunk.com>


'#######   Preset Buttons      #######
'Sub ButtonStep3SecPresetNone_Click()
' Call uncheck_SecBoxes
' Call reset_allSecToNo
'End Sub

'Sub ButtonStep3ITOAPresetNone_Click()
' Call uncheck_ITOABoxes
'Call reset_allITOAToNo
'End Sub

Sub uncheck_SecBoxes()
  ActiveSheet.CheckBoxes("Check Box Security Essentials").Value = False
  ActiveSheet.CheckBoxes("Check Box CIS CSC Top20").Value = False
  ActiveSheet.CheckBoxes("Check Box ES All").Value = False
  ActiveSheet.CheckBoxes("Check Box ES Top13 Subset").Value = False
  ActiveSheet.CheckBoxes("Check Box ES Content Update").Value = False
  ActiveSheet.CheckBoxes("Check Box UBA").Value = False
End Sub

Sub uncheck_ITOABoxes()
  ActiveSheet.CheckBoxes("Check Box ITSI").Value = False
End Sub

Sub check_Boxes()
  ActiveSheet.CheckBoxes("Check Box Security Essentials").Value = True
  ActiveSheet.CheckBoxes("Check Box CIS CSC Top20").Value = True
  ActiveSheet.CheckBoxes("Check Box ES All").Value = True
  ActiveSheet.CheckBoxes("Check Box ES Content Update").Value = True
  ActiveSheet.CheckBoxes("Check Box UBA").Value = True
  ActiveSheet.CheckBoxes("Check Box ITSI").Value = True
End Sub




'#######   Preset Checkboxes      #######
Sub CheckBoxSecurityEssentials_Click()
 Call SetVars
 
     If ActiveSheet.Shapes("Check Box Security Essentials").ControlFormat.Value = 1 Then
      Row_Color = 43
      Row_Status = "yes"
    Else
      Row_Color = 0
      Row_Status = "no"
    End If
    
    Set ES_OTB = ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_SE_start), "B" & CStr(S3_SE_end))
    
    For Each cell_ES_OTB In ES_OTB
            If Len(cell_ES_OTB) > 0 Then
              Range("D" & cell_ES_OTB.Row).Value = Row_Status
              Range("B" & cell_ES_OTB.Row, "F" & cell_ES_OTB.Row).Interior.ColorIndex = Row_Color
            End If
    Next
End Sub


Sub CheckBoxCISCSCTop20_Click()

    Call SetVars
    
    If ActiveSheet.Shapes("Check Box CIS CSC Top20").ControlFormat.Value = 1 Then
      Row_Color = 43
      Row_Status = "yes"
    Else
      Row_Color = 0
      Row_Status = "no"
    End If
     
    'Set all CIS to "yes"
    Set ES_OTB = ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_CIS_start), "B" & CStr(S3_CIS_end))
    
    For Each cell_ES_OTB In ES_OTB
              Range("D" & cell_ES_OTB.Row).Value = Row_Status
              Range("B" & cell_ES_OTB.Row, "F" & cell_ES_OTB.Row).Interior.ColorIndex = Row_Color
    Next

End Sub

Sub CheckBoxESAll_Click()
    Call SetVars

    
    If ActiveSheet.Shapes("Check Box ES All").ControlFormat.Value = 1 Then
      Row_Color = 43
      Row_Status = "yes"
'      ActiveSheet.CheckBoxes("Check Box ES Top13 Subset").Value = False
    Else
      Row_Color = 0
      Row_Status = "no"
    End If
    
    'Set all ES OTB to "yes"
    Set ES_OTB = ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_ES_start), "B" & CStr(S3_ES_end))
    
    For Each cell_ES_OTB In ES_OTB
            If Not IsEmpty(cell_ES_OTB) Then
              Range("D" & cell_ES_OTB.Row).Value = Row_Status
              Range("B" & cell_ES_OTB.Row, "F" & cell_ES_OTB.Row).Interior.ColorIndex = Row_Color
            End If
    Next
    
    'Set all ES DB OTB to "yes"
    Set ES_DB_OTB = ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_ES_DB_start), "B" & CStr(S3_ES_DB_end))
    
    For Each cell_ES_DB_OTB In ES_DB_OTB
           If Len(cell_ES_DB_OTB) > 0 Then
              Range("D" & cell_ES_DB_OTB.Row).Value = Row_Status
              Range("B" & cell_ES_DB_OTB.Row, "F" & cell_ES_DB_OTB.Row).Interior.ColorIndex = Row_Color
            End If
    Next
End Sub


Sub CheckBoxESTop13Subset_Click()
    Call SetVars

    Call reset_allSecToNo
     
    If ActiveSheet.Shapes("Check Box ES Top13 Subset").ControlFormat.Value = 1 Then
      Row_Color = 43
      Row_Status = "yes"
      ActiveSheet.CheckBoxes("Check Box ES All").Value = False
    Else
      Row_Color = 0
      Row_Status = "no"
    End If
    

    Set ES_OTB_Step3 = ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_ES_start), "B" & CStr(S3_ES_end))
    Set ES_SIEM_E_x = ActiveWorkbook.Worksheets("lookup").Range("AU2:AU70")
    Set ES_SIEM_E_name = ActiveWorkbook.Worksheets("lookup").Range("AT2:AT70")
   
    For Each cell_ES_OTB_Step3 In ES_OTB_Step3
        For Each cell_ES_SIEM_E_x In ES_SIEM_E_x
                If Not IsEmpty(cell_ES_SIEM_E_x) Then
                    If cell_ES_OTB_Step3.Value = ActiveWorkbook.Worksheets("lookup").Range("AT" & cell_ES_SIEM_E_x.Row).Value Then
                        Range("B" & cell_ES_OTB_Step3.Row, "F" & cell_ES_OTB_Step3.Row).Interior.ColorIndex = Row_Color
                        Range("D" & cell_ES_OTB_Step3.Row).Value = Row_Status
                    End If
                End If
        Next
     Next
     

    Set ES_DB_OTB = ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_ES_DB_start), "B" & CStr(S3_ES_DB_end))
    
    For Each cell_ES_DB_OTB In ES_DB_OTB
           If Len(cell_ES_DB_OTB) > 0 Then
              Range("D" & cell_ES_DB_OTB.Row).Value = Row_Status
              Range("B" & cell_ES_DB_OTB.Row, "F" & cell_ES_DB_OTB.Row).Interior.ColorIndex = Row_Color
            End If
    Next

End Sub


Sub CheckBoxESContentUpdate_Click()
    Call SetVars

    
    If ActiveSheet.Shapes("Check Box ES Content Update").ControlFormat.Value = 1 Then
      Row_Color = 43
      Row_Status = "yes"
    Else
      Row_Color = 0
      Row_Status = "no"
    End If
 
    'Set all ES OTB to "yes"
    Set ES_OTB = ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_ESCU_start), "B" & CStr(S3_ESCU_end))
    
    For Each cell_ES_OTB In ES_OTB
            If Len(cell_ES_OTB) > 0 Then
              Range("D" & cell_ES_OTB.Row).Value = Row_Status
              Range("B" & cell_ES_OTB.Row, "F" & cell_ES_OTB.Row).Interior.ColorIndex = Row_Color
            End If
    Next
End Sub

Sub CheckBoxUBA_Click()
    Call SetVars
    
    If ActiveSheet.Shapes("Check Box UBA").ControlFormat.Value = 1 Then
      Row_Color = 43
      Row_Status = "yes"
    Else
      Row_Color = 0
      Row_Status = "no"
    End If
 
    
    'Set all UBA OTB to "yes"
    Set ES_OTB = ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_UBA_start), "B" & CStr(S3_UBA_end))
    
    For Each cell_ES_OTB In ES_OTB
           If Len(cell_ES_OTB) > 0 _
            And cell_ES_OTB.Row <> 387 _
            And cell_ES_OTB.Row <> 410 _
            Then
              Range("D" & cell_ES_OTB.Row).Value = Row_Status
              Range("B" & cell_ES_OTB.Row, "F" & cell_ES_OTB.Row).Interior.ColorIndex = Row_Color
            End If
    Next
End Sub

Sub CheckBoxITSI_Click()
    Call SetVars
    
    If ActiveSheet.Shapes("Check Box ITSI").ControlFormat.Value = 1 Then
      Row_Color = 43
      Row_Status = "yes"
    Else
      Row_Color = 0
      Row_Status = "no"
    End If
      
      'Set all ITSI to "yes"
 Set ITSI_OTB = ActiveWorkbook.Worksheets("STEP 3 - Content").Range("B" & CStr(S3_ITSI_start), "B" & CStr(S3_ITSI_end))
    
    For Each cell_ITSI_OTB In ITSI_OTB
            If Len(cell_ITSI_OTB) > 0 _
            And cell_ITSI_OTB.Row <> 463 _
            And cell_ITSI_OTB.Row <> 475 _
            Then
              Range("D" & cell_ITSI_OTB.Row).Value = Row_Status
              Range("B" & cell_ITSI_OTB.Row, "F" & cell_ITSI_OTB.Row).Interior.ColorIndex = Row_Color
            End If
    Next

 
End Sub



Sub Button20_Update_Step3_Content()

 If MsgBox("This will re-build the content database and you have to manually double-check the mappings! Are you really sure?", vbYesNo) = vbNo Then Exit Sub
    
Application.ScreenUpdating = False

Dim lCol As Long
' populate SSE Content
Set ES_Content = Range("B11:F153")
Set ES_Lookup = ActiveWorkbook.Worksheets("content").Range("A2:A500")
lCol = 11

For Each ES_Lookup_row In ES_Lookup
    If ES_Lookup_row.Value = "Security Essentials" Then
        Cells(lCol, 2).Value = ActiveWorkbook.Worksheets("content").Range("C" & ES_Lookup_row.Row)
        Cells(lCol, 3).Value = ActiveWorkbook.Worksheets("content").Range("D" & ES_Lookup_row.Row)
        Cells(lCol, 5).Value = ActiveWorkbook.Worksheets("content").Range("E" & ES_Lookup_row.Row)
        Cells(lCol, 6).Value = ActiveWorkbook.Worksheets("content").Range("F" & ES_Lookup_row.Row)
        lCol = lCol + 1
    End If
Next

' populate ES Content
Set ES_Content = Range("B188:F247")
Set ES_Lookup = ActiveWorkbook.Worksheets("content").Range("A2:A500")
lCol = 188

For Each ES_Lookup_row In ES_Lookup
    If ES_Lookup_row.Value = "ES" Then
        Cells(lCol, 2).Value = ActiveWorkbook.Worksheets("content").Range("C" & ES_Lookup_row.Row)
        Cells(lCol, 3).Value = ActiveWorkbook.Worksheets("content").Range("D" & ES_Lookup_row.Row)
        Cells(lCol, 5).Value = ActiveWorkbook.Worksheets("content").Range("E" & ES_Lookup_row.Row)
        Cells(lCol, 6).Value = ActiveWorkbook.Worksheets("content").Range("F" & ES_Lookup_row.Row)
        lCol = lCol + 1
    End If
Next


' populate ESCU Analytic Stories Content
Set ES_Content = Range("B316:F383")
Set ES_Lookup = ActiveWorkbook.Worksheets("content").Range("A2:A500")
lCol = 316

For Each ES_Lookup_row In ES_Lookup
    If ES_Lookup_row.Value = "ESCU Analytic Stories" Then
        Cells(lCol, 2).Value = ActiveWorkbook.Worksheets("content").Range("C" & ES_Lookup_row.Row)
        Cells(lCol, 3).Value = ActiveWorkbook.Worksheets("content").Range("D" & ES_Lookup_row.Row)
        Cells(lCol, 5).Value = ActiveWorkbook.Worksheets("content").Range("E" & ES_Lookup_row.Row)
        Cells(lCol, 6).Value = ActiveWorkbook.Worksheets("content").Range("F" & ES_Lookup_row.Row)
        lCol = lCol + 1
    End If
Next

' populate UBA Anomaly Models Content
Set ES_Content = Range("B411:F444")
Set ES_Lookup = ActiveWorkbook.Worksheets("content").Range("A2:A500")
lCol = 411

For Each ES_Lookup_row In ES_Lookup
    If ES_Lookup_row.Value = "UBA" Then
        Cells(lCol, 2).Value = ActiveWorkbook.Worksheets("content").Range("C" & ES_Lookup_row.Row)
        Cells(lCol, 3).Value = ActiveWorkbook.Worksheets("content").Range("D" & ES_Lookup_row.Row)
        Cells(lCol, 5).Value = ActiveWorkbook.Worksheets("content").Range("E" & ES_Lookup_row.Row)
        Cells(lCol, 6).Value = ActiveWorkbook.Worksheets("content").Range("F" & ES_Lookup_row.Row)
        lCol = lCol + 1
    End If
Next

' populate ITSI Content
Set ES_Content = Range("B463:F523")
Set ES_Lookup = ActiveWorkbook.Worksheets("content").Range("A554:A622")
lCol = 463

For Each ES_Lookup_row In ES_Lookup
    If ES_Lookup_row.Value = "ITOA" Then
        Cells(lCol, 2).Value = ActiveWorkbook.Worksheets("content").Range("C" & ES_Lookup_row.Row)
        Cells(lCol, 3).Value = ActiveWorkbook.Worksheets("content").Range("D" & ES_Lookup_row.Row)
        Cells(lCol, 6).Value = ActiveWorkbook.Worksheets("content").Range("E" & ES_Lookup_row.Row)
        lCol = lCol + 1
    End If
Next

Application.ScreenUpdating = True
End Sub


Sub Button_ExportQuestionaire()
    
    If MsgBox("This will create a new (macro free) Excel Workbook with this questionaire sheet only." & vbNewLine & "Feel free to save it and send it to your prospect/customer for the pre-work.", vbYesNo) = vbNo Then Exit Sub
    
    
    Dim Wb1 As Workbook
    Dim Wb2 As Workbook
    Dim dateStr As String
    Dim myDate As Date

    With Application
        .ScreenUpdating = False
        .DisplayAlerts = False
        .EnableEvents = False
    End With

    Set Wb1 = ActiveWorkbook

    myDate = Date

    dateStr = Format(myDate, "MM-DD-YY")

    Set Wb2 = Application.Workbooks.Add(1)
    Wb1.Sheets("STEP 2 - Data Sources").Copy Before:=Wb2.Sheets(1)
    Wb2.Sheets(Wb2.Sheets.count).Delete
    'Wb2.SaveAs FileName:="New Report Name" & " " & dateStr, FileFormat:=51

    With ActiveWorkbook
    Links = .LinkSources(xlExcelLinks)
    If Not IsEmpty(Links) Then
        For i = 1 To UBound(Links)
            .BreakLink Links(i), xlLinkTypeExcelLinks
        Next i
    End If
        
    End With

    ActiveWorkbook.Worksheets("STEP 2 - Data Sources").Rows("2:3").EntireRow.Delete
    

    'Wb1.Close
    With Application
        .ScreenUpdating = True
        .DisplayAlerts = True
        .EnableEvents = True
    End With
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
    Application.ScreenUpdating = False

    ActiveSheet.Shapes("ZeroPercent").ControlFormat.Value = True
    ActiveSheet.Shapes("HundredPercent").ControlFormat.Value = False
    
    Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Dim PrevCell As Range


'Private Sub Worksheet_Activate()
'If ActiveWorkbook.ProtectWindows Then
' With Sheets("STEP 1 - Data Sources")
' .Protect "VMO2014", , , , True
' .EnableOutlining = True
' End With
'End If
'End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

Set PrevCell = ActiveCell
If Range("P3").Value = "Complete at least 1 section to produce Data Analysis" Then
    
  If Sheets("Overview").Visible Then
   
    Call HideSheets_ResetButtons

  End If
Else

    If Not (Sheets("Overview").Visible) Then

    Application.ScreenUpdating = False
    
    Call UnhideSheets_FullDSA
    'If FullDSA = 0 Then Call UnhideSheets_SecDSA
    
    Application.ScreenUpdating = True
    
'    Sheets("STEP 2 - Data Sources").Select
'    PrevCell.Select
  End If

End If

End Sub


Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
If ActiveWorkbook.ProtectWindows Then
 With Sheets("STEP 1 - Data Sources")
 .Protect "VMO2014", , , , True
 .EnableOutlining = True
 End With
End If
End Sub


Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
If ActiveWorkbook.ProtectWindows Then
 With Sheets("STEP 1 - Data Sources")
 .Protect "VMO2014", , , , True
 .EnableOutlining = True
 End With
End If
End Sub


Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()

  If ActiveWorkbook.Worksheets("Security Recommendations").Range("P2") > 0 Then
      Sheets("Kill-Chain Mapping").Visible = True
      'Sheets("SOC Use Cases Designer").Visible = True
  Else
      Sheets("Kill-Chain Mapping").Visible = False
      'Sheets("SOC Use Cases Designer").Visible = False
  End If

Application.ScreenUpdating = False

   'Security Controls
   Set proc_indxd = Range("C11:C470")
    For Each cell_proc_indxd In proc_indxd
        If Not IsEmpty(cell_proc_indxd.Value) And IsNumeric(cell_proc_indxd.Value) And cell_proc_indxd.Value <= Range("P2").Value / 100 Then
           Range("B" & cell_proc_indxd.Row, "E" & cell_proc_indxd.Row).Interior.Color = RGB(255, 255, 255)
           Range("Q" & cell_proc_indxd.Row).Value = "no"
        End If
        If Not IsEmpty(cell_proc_indxd.Value) And IsNumeric(cell_proc_indxd.Value) And cell_proc_indxd.Value >= Range("P2").Value / 100 Then
           Range("B" & cell_proc_indxd.Row, "E" & cell_proc_indxd.Row).Interior.Color = RGB(102, 204, 255)
           Range("Q" & cell_proc_indxd.Row).Value = "yes"
        End If
    Next
        
    'UBA, as it is special
       Set proc_indxd = Range("C384:C405")
    For Each cell_proc_indxd In proc_indxd
        If Not IsEmpty(cell_proc_indxd.Value) And IsNumeric(cell_proc_indxd.Value) And cell_proc_indxd.Value < 1 Then
           Range("B" & cell_proc_indxd.Row, "E" & cell_proc_indxd.Row).Interior.Color = RGB(255, 255, 255)
           Range("Q" & cell_proc_indxd.Row).Value = "no"
        End If
        If Not IsEmpty(cell_proc_indxd.Value) And IsNumeric(cell_proc_indxd.Value) And cell_proc_indxd.Value >= 1 Then
           Range("B" & cell_proc_indxd.Row, "E" & cell_proc_indxd.Row).Interior.Color = RGB(102, 204, 255)
           Range("Q" & cell_proc_indxd.Row).Value = "yes"
        End If
    Next
        
  
        
Application.ScreenUpdating = True

End Sub



Attribute VB_Name = "Sheet14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
If Application.ScreenUpdating Then

' MsgBox "in form activate"

    Application.ScreenUpdating = False
    
    rr = 10
    Do Until rr = 515
        Range("d" & rr).Value = Range("z" & rr).Value
        rr = rr + 1
    Loop
    Application.ScreenUpdating = True
End If
End Sub

Private Sub Worksheet_Deactivate()
If Application.ScreenUpdating Then
    
' MsgBox "in form deactivate"
    
    Application.ScreenUpdating = False
    rr = 10
    Do Until rr = 515
        Range("z" & rr).Value = Range("d" & rr).Value
        rr = rr + 1
    Loop
    Application.ScreenUpdating = True
End If
End Sub



Attribute VB_Name = "Sheet18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()

Application.ScreenUpdating = False

   Set proc_indxd = Range("C9:C83")
    For Each cell_proc_indxd In proc_indxd
        If Not IsEmpty(cell_proc_indxd.Value) And IsNumeric(cell_proc_indxd.Value) And cell_proc_indxd.Value <= Range("P2").Value / 100 Then
           Range("B" & cell_proc_indxd.Row, "E" & cell_proc_indxd.Row).Interior.Color = RGB(255, 255, 255)
           Range("Q" & cell_proc_indxd.Row).Value = "no"
        End If
        If Not IsEmpty(cell_proc_indxd.Value) And IsNumeric(cell_proc_indxd.Value) And cell_proc_indxd.Value >= Range("P2").Value / 100 Then
           Range("B" & cell_proc_indxd.Row, "E" & cell_proc_indxd.Row).Interior.Color = RGB(102, 204, 255)
           Range("Q" & cell_proc_indxd.Row).Value = "yes"
        End If
    Next
        
Application.ScreenUpdating = True

End Sub

Attribute VB_Name = "Sheet19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
If ActiveWorkbook.ProtectWindows Then
 With Sheets("STEP 2 - Data Sources")
 .Protect "VMO2014", , , , True
 .EnableOutlining = True
 End With
End If
End Sub



Attribute VB_Name = "Sheet20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'Angelo Brancato, angelo@splunk.com
'Initial Version, v0.1

Private Sub Worksheet_Activate()


If Application.ScreenUpdating Then

' MsgBox "in form activate"


    Application.ScreenUpdating = False

'Map Correlation Searches

   Set KC_UC = Range("A5:H28") 'kill chain mapping matrix
   Set DSA_UC = ActiveWorkbook.Worksheets("Security Recommendations").Range("B9:B88")
 
    'reset all correlations in kill chain to grey
    For Each cell_KC_UC In KC_UC
        cell_KC_UC.Interior.ColorIndex = 0
        If IsEmpty(cell_KC_UC.Value) = False Then cell_KC_UC.Interior.ColorIndex = 15
    Next
   
   'color these green that are above data source indexed set
    For Each cell_KC_UC In KC_UC
        For Each cell_DSA_UC In DSA_UC
            If cell_DSA_UC.Value <> vbNullString Then
                If cell_KC_UC.Value = cell_DSA_UC.Value And ActiveWorkbook.Worksheets("Security Recommendations").Range("C" & cell_DSA_UC.Row) >= ActiveWorkbook.Worksheets("Security Recommendations").Range("P2").Value / 100 Then
                   cell_KC_UC.Interior.ColorIndex = 43
                End If
            End If
        Next
     Next
     
     
'Map Dashboards

   Set KC_UC = Range("A30:H79") 'kill chain mapping matrix
   Set DSA_UC = ActiveWorkbook.Worksheets("Security Recommendations").Range("B74:B135")
 
    'reset all correlations in kill chain to grey
    For Each cell_KC_UC In KC_UC
        cell_KC_UC.Interior.ColorIndex = 0
        If IsEmpty(cell_KC_UC.Value) = False Then cell_KC_UC.Interior.ColorIndex = 15
    Next
   
   'color these green that are above data source indexed set
    For Each cell_KC_UC In KC_UC
        For Each cell_DSA_UC In DSA_UC
            If cell_DSA_UC.Value <> vbNullString Then
                If cell_KC_UC.Value = cell_DSA_UC.Value And ActiveWorkbook.Worksheets("Security Recommendations").Range("C" & cell_DSA_UC.Row) >= ActiveWorkbook.Worksheets("Security Recommendations").Range("P2").Value / 100 Then
                   cell_KC_UC.Interior.ColorIndex = 43
                End If
            End If
        Next
     Next
     
'Map Dashboards
'
'    Set KC_UC = Range("A30:H79") 'kill chain mapping matrix for ES dashboards
'    Set DSA_UC = ActiveWorkbook.Worksheets("Security Recommendations").Range("B94:B155")
'
'    'reset all correlations in kill chain to grey
'    For Each cell_KC_UC In KC_UC
'        cell_KC_UC.Interior.ColorIndex = 0
'        If IsEmpty(cell_KC_UC.Value) = False Then cell_KC_UC.Interior.ColorIndex = 15
'    Next
'
'   'color these green that are above data source indexed set
'    For Each cell_KC_UC In KC_UC
'        For Each cell_DSA_UC In DSA_UC
'            If cell_DSA_UC.Value <> vbNullString Then
'                If cell_KC_UC.Value = cell_DSA_UC.Value And ActiveWorkbook.Worksheets("Security Recommendations").Range("C" & cell_DSA_UC.Row) > ActiveWorkbook.Worksheets("Security Recommendations").Range("E3").Value / 100 Then
'                   cell_KC_UC.Interior.ColorIndex = 43
'                End If
'            End If
'        Next
'     Next


    Application.ScreenUpdating = True
End If
End Sub

Sub Worksheet_SelectionChange(ByVal Target As Range)
 If details = 1 Then
    Application.DisplayAlerts = False
        If Not Intersect(Target, Range("A5:G28")) Is Nothing Then _
            If Not IsEmpty(ActiveCell.Value) Then _
                generateMsgBox (ActiveCell.Value)
 End If
End Sub


'Pops a message boxes with the correlation search description if Lookup is set to "enabled" in the sheet
Sub generateMsgBox(UC_name As String)

UC_desctiption = Application.WorksheetFunction.VLookup(UC_name, Sheets("lookup").Range("AT2:AZ70"), 3, False)
UC_DataSources = Application.WorksheetFunction.VLookup(UC_name, Sheets("lookup").Range("AT2:AZ70"), 6, False)
UC_Technologies = Application.WorksheetFunction.VLookup(UC_name, Sheets("lookup").Range("AT2:AZ70"), 4, False)

'UC_correlationSearch = Application.WorksheetFunction.VLookup(UC_name, Sheets("lookup").Range("AT2:AX100"), 4, False)
'UC_desctiptionDetails = Application.WorksheetFunction.VLookup(UC_name, Sheets("lookup").Range("AT2:AX100"), 47, False)
'UC_Notes = Application.WorksheetFunction.VLookup(UC_name, Sheets("lookup").Range("A4:AF300"), 28, False)


MsgBox ChrW(8226) & " Description:" & vbNewLine & UC_desctiption _
& vbNewLine & vbNewLine _
& ChrW(8226) & " Data Sources:" & vbNewLine & UC_DataSources _
& vbNewLine & vbNewLine _
& ChrW(8226) & " Exemplary Technologies:" & vbNewLine & UC_Technologies, vbOKOnly + vbInformation, UC_name

'& vbNewLine & vbNewLine _
'& ChrW(8226) & " Correlation Search:" & vbNewLine & UC_correlationSearch _


End Sub





Attribute VB_Name = "Sheet22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()


  Application.ScreenUpdating = False

' When activating the sheet "SOC USe Case Designer", this will check for the possible correlation searches and dashboards out of the DSA and mark them green
 'Map Correlation Searches
    Set KC_UC = Range("F4:F100") 'increase F100 if you have more than 200 rows
    Set DSA_UC = ActiveWorkbook.Worksheets("lookup").Range("AT2:AT100")
 
    For Each cell_KC_UC In KC_UC
        cell_KC_UC.Interior.ColorIndex = 0
        'If IsEmpty(cell_KC_UC.Value) = False Then cell_KC_UC.Interior.ColorIndex = 0
    Next
   
'    For Each cell_KC_UC In KC_UC
'        For Each cell_DSA_UC In DSA_UC
'            If IsEmpty(cell_DSA_UC.Value) = False And Not cell_DSA_UC.Value = "0" Then
'                If cell_KC_UC.Value = cell_DSA_UC.Value Then
'                   cell_KC_UC.Interior.ColorIndex = 43
'                End If
'            End If
'        Next
'     Next
     
     'color these green that are above data source indexed set
    For Each cell_KC_UC In KC_UC
        For Each cell_DSA_UC In DSA_UC
            If cell_DSA_UC.Value <> vbNullString Then
                If cell_KC_UC.Value = cell_DSA_UC.Value And ActiveWorkbook.Worksheets("Security Recommendations").Range("C" & cell_DSA_UC.Row) > ActiveWorkbook.Worksheets("Security Recommendations").Range("E3").Value / 100 Then
                   cell_KC_UC.Interior.ColorIndex = 43
                End If
            End If
        Next
     Next

'Map Dashboards
'    Set KC_UC = Range("H4:I400") 'increase I400 if you have more than 400 rows
'    Set DSA_UC = ActiveWorkbook.Worksheets("lookup").Range("AB2:AB100")
'
'    For Each cell_KC_UC In KC_UC
'        cell_KC_UC.Interior.ColorIndex = 0
'        If IsEmpty(cell_KC_UC.Value) = False Then cell_KC_UC.Interior.ColorIndex = 0
'    Next
'
'    For Each cell_KC_UC In KC_UC
'        For Each cell_DSA_UC In DSA_UC
'            If IsEmpty(cell_DSA_UC.Value) = False And Not cell_DSA_UC.Value = "0" Then
'                If cell_KC_UC.Value = cell_DSA_UC.Value Then
'                   cell_KC_UC.Interior.ColorIndex = 43
'                End If
'            End If
'        Next
'     Next

  Application.ScreenUpdating = True

End Sub



'This will lookup (from sheet "lookup") and add the data models and technologies when you select a correlation search from the drop-down
Private Sub Worksheet_Change(ByVal Target As Range)

If Target.Cells.count = 1 And IsEmpty(Target.Value) = False Then
  With ActiveWorkbook.Worksheets("lookup").Range("AT2:AT100")
        Set c = .Find(Target.Value, LookIn:=xlValues)
        If Not c Is Nothing Then
            firstAddress = c.Address
            Do
                'Data Sources:
                ActiveWorkbook.Worksheets("SOC Use Cases Designer").Cells(Target.Row, 11).Value = ActiveWorkbook.Worksheets("lookup").Cells(c.Row, 50).Value
                'Technologies:
                ActiveWorkbook.Worksheets("SOC Use Cases Designer").Cells(Target.Row, 12).Value = ActiveWorkbook.Worksheets("lookup").Cells(c.Row, 48).Value
            Set c = .FindNext(c)
            Loop While Not c Is Nothing
        End If
    End With
End If

End Sub


Attribute VB_Name = "Sheet23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
  If Rows(8).Hidden = False Then
      With ActiveWorkbook.Worksheets("Adoption Chart").ListObjects("Adoption_SysAdmin")
         .AutoFilter.ApplyFilter
    End With
  End If
  If Rows(114).Hidden = False Then
      With ActiveWorkbook.Worksheets("Adoption Chart").ListObjects("Adoption_StorageAdmin")
         .AutoFilter.ApplyFilter
    End With
  End If
  If Rows(220).Hidden = False Then
      With ActiveWorkbook.Worksheets("Adoption Chart").ListObjects("Adoption_NetworkAdmin")
         .AutoFilter.ApplyFilter
    End With
  End If
  If Rows(326).Hidden = False Then
      With ActiveWorkbook.Worksheets("Adoption Chart").ListObjects("Adoption_DatabaseAdmin")
         .AutoFilter.ApplyFilter
    End With
  End If
  If Rows(432).Hidden = False Then
      With ActiveWorkbook.Worksheets("Adoption Chart").ListObjects("Adoption_AppSupport")
         .AutoFilter.ApplyFilter
    End With
  End If
  If Rows(538).Hidden = False Then
      With ActiveWorkbook.Worksheets("Adoption Chart").ListObjects("Adoption_EndUserSupport")
         .AutoFilter.ApplyFilter
    End With
  End If
  If Rows(644).Hidden = False Then
      With ActiveWorkbook.Worksheets("Adoption Chart").ListObjects("Adoption_Security")
         .AutoFilter.ApplyFilter
    End With
  End If
  If Rows(750).Hidden = False Then
      With ActiveWorkbook.Worksheets("Adoption Chart").ListObjects("Adoption_Fraud")
         .AutoFilter.ApplyFilter
    End With
  End If
  If Rows(856).Hidden = False Then
      With ActiveWorkbook.Worksheets("Adoption Chart").ListObjects("Adoption_TestDev")
         .AutoFilter.ApplyFilter
    End With
  End If
  If Rows(962).Hidden = False Then
      With ActiveWorkbook.Worksheets("Adoption Chart").ListObjects("Adoption_BizService1")
         .AutoFilter.ApplyFilter
    End With
  End If
  If Rows(1068).Hidden = False Then
      With ActiveWorkbook.Worksheets("Adoption Chart").ListObjects("Adoption_BizService2")
         .AutoFilter.ApplyFilter
    End With
  End If
  If Rows(1174).Hidden = False Then
      With ActiveWorkbook.Worksheets("Adoption Chart").ListObjects("Adoption_BizService3")
         .AutoFilter.ApplyFilter
    End With
  End If
  If Rows(1280).Hidden = False Then
      With ActiveWorkbook.Worksheets("Adoption Chart").ListObjects("Adoption_BizService4")
         .AutoFilter.ApplyFilter
    End With
  End If
  If Rows(1386).Hidden = False Then
      With ActiveWorkbook.Worksheets("Adoption Chart").ListObjects("Adoption_BizService5")
         .AutoFilter.ApplyFilter
    End With
  End If
End Sub
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
  If Rows(23).Hidden = False Then
      With ActiveWorkbook.Worksheets("Analysis").ListObjects("ITOps_Table")
         .AutoFilter.ApplyFilter
    End With
  End If
  
  If Rows(158).Hidden = False Then
    With ActiveWorkbook.Worksheets("Analysis").ListObjects("AppSupp_Table")
         .AutoFilter.ApplyFilter
    End With
  End If
    
  If Rows(292).Hidden = False Then
    With ActiveWorkbook.Worksheets("Analysis").ListObjects("Security_Table")
         .AutoFilter.ApplyFilter
    End With
  End If
    
  If Rows(427).Hidden = False Then
    With ActiveWorkbook.Worksheets("Analysis").ListObjects("AppDev_Table")
         .AutoFilter.ApplyFilter
    End With
  End If

  If Rows(558).Hidden = False Then
    With ActiveWorkbook.Worksheets("Analysis").ListObjects("BizAnalytics_Table")
         .AutoFilter.ApplyFilter
    End With
  End If
End Sub


Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Public Sub Workbook_Open()

details = 1
'Indexed = 0
Items = 0

End Sub


INQUEST-PP=macro
