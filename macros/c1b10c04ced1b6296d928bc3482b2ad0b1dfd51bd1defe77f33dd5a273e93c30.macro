Attribute VB_Name = "Beck_Tools"
'Beck Tools CB Nov. 2009, Mai 2010
Option Private Module
Public Verlagshersteller, Tool_Login, Aenderungen_anzeigen, Start_Aenderungen_anzeigen, End_Aenderungen_anzeigen, Original, Aenderungen, Aenderungen_verfolgen As Boolean

Sub Passwort_eingabe()
Dim Passwort

If Not Dokumentschutz Then Exit Sub

If Tool_Login = False Then
   Unload beck_tool_passwort
   beck_tool_passwort.Show
   Passwort = beck_tool_passwort.TextBox1
   If Passwort = "" Then Exit Sub
   If Passwort <> "herstellung" Then
      MsgBox ("Falsches Passwort! Bitte nochmal versuchen.")
      Exit Sub
   End If
End If

If ActiveDocument.Endnotes.Count > 0 Then
    MsgBox "ACHTUNG: Die Pr|fffd|fung des Dokumentes kann aus folgendem Grund nicht erfolgen:" & Chr(13) & "Ihr Dokument enth|fffd|lt Endnoten. Bitte wandeln Sie diese in Fu|fffd|noten um. Verwenden Sie dazu die Funktion |fffd|Endnoten konvertieren|fffd| im Bereich |fffd|Sonstiges|fffd| des Beck-Template.", vbOKOnly, "Hinweis"
    Exit Sub
End If

Tool_Login = True
beck_form.MultiPage1.Pages("Page_Typografie").Visible = True
Load beck_tool
beck_tool.Show
beck_tool.Left = Application.Width - beck_tool.Width + Application.Left - 280 'rechts ausrichten
If Val(Application.Version) > 11 Then
   beck_tool.Top = 0 + Application.Top + 140
Else
   beck_tool.Top = 0 + Application.Top + 100
End If
FocusAnDocument
End Sub

Sub Zwischenablage_loeschen()
Dim ZW As DataObject

Set ZW = New DataObject
ZW.SetText ""
ZW.PutInClipboard
End Sub

Sub FnEinf|fffd|gen()

With Selection
       With .FootnoteOptions
            .Location = wdBottomOfPage
            .NumberingRule = wdRestartContinuous
            .StartingNumber = 1
            .NumberStyle = wdNoteNumberStyleArabic
            .NumberingRule = wdRestartSection
       End With
       .Footnotes.Add Range:=Selection.Range, Reference:=""
End With
End Sub

Sub KopfzeilenEntfernen()
Dim Anzahl, Antwort

On Error GoTo Fehler

With beck_tool
    .Width = 425.25
    .Label4 = "Verarbeitung l|fffd|uft ..."
    .Repaint
End With

Ueberarbeitungsmodus_aus
Anzahl = ActiveDocument.Sections.Count
Antwort = MsgBox("Kopfzeilen werden entfernt. Sollen auch die Fu|fffd|zeilen entfernt werden (evtl. nicht, wenn Autorennamen)?", vbYesNo)
'ActiveDocument.PageSetup.DifferentFirstPageHeaderFooter = True   'erste Seite anders
'ActiveDocument.PageSetup.OddAndEvenPagesHeaderFooter = True      'links, rechts anders
For i = 1 To Anzahl
  With ActiveDocument.Sections(i)
    .Headers(wdHeaderFooterFirstPage).Range.Delete 'wegen "erster Seite anders" diese separat l|fffd|schen
    .Headers(wdHeaderFooterPrimary).Range.Delete
    .Headers(wdHeaderFooterEvenPages).Range.Delete
    If Antwort = vbYes Then
      .Footers(wdHeaderFooterFirstPage).Range.Delete
      .Footers(wdHeaderFooterPrimary).Range.Delete
      .Footers(wdHeaderFooterEvenPages).Range.Delete
    End If
  End With
Next i

With beck_tool
    .Label4 = "Verarbeitung beendet"
    .Repaint
End With

ActiveWindow.View.Type = wdNormalView   'Ansicht hin- und herschalten l|fffd|scht verbliebenes Absatzzeichen
ActiveWindow.View.Type = wdPrintView
ActiveWindow.View.Type = wdNormalView
Application.StatusBar = "Verarbeitung beendet"
Ueberarbeitungsmodus_ein
Exit Sub

Fehler:
Ueberarbeitungsmodus_ein
Call Fehler

End Sub

Sub WeisseKaestenEntfernen()
Dim KastenZahl, KastenDel, i, n As Integer

On Error GoTo Fehler

With beck_tool
    .Width = 425.25
    .Label3 = "Verarbeitung l|fffd|uft ..."
    .Repaint
End With
KastenZahl = ActiveDocument.Shapes.Count
KastenDel = 0
n = 1
Ueberarbeitungsmodus_aus

If KastenZahl = 0 Then GoTo Ende
For i = 1 To KastenZahl
   If ActiveDocument.Shapes(n).Fill.ForeColor.RGB = RGB(255, 255, 255) Then
      'Textfelder, verschachtelte Felder und Organigramme nicht l|fffd|schen
      If ActiveDocument.Shapes(n).TextFrame.HasText Or Left((ActiveDocument.Shapes(1).name), 9) <> "Rectangle" Then
         n = n + 1
      Else:
      KastenDel = KastenDel + 1
      ActiveDocument.Shapes(n).Delete 'immer den ersten (bzw. ersten nach dem Textfeld) entfernen bis keiner mehr da
      If ActiveDocument.Shapes.Count = 0 + n - 1 Then GoTo Ende 'alle entfernt
      End If
   End If
ActiveDocument.UndoClear 'verhindert Speicher|fffd|berlauf
Next i

Ende:
With beck_tool
    .Label3 = "Verarbeitung beendet. " & KastenDel & " wei|fffd|e K|fffd|sten entfernt."
    .Repaint
End With
Application.StatusBar = "Verarbeitung beendet"
ActiveWindow.View.Type = wdNormalView
Ueberarbeitungsmodus_ein
Exit Sub

Fehler:
Ueberarbeitungsmodus_ein
Call Fehler

End Sub

Sub Word2007_wei|fffd|_del()

On Error GoTo Fehler
Selection.Find.Font.Color = -603914241   'Office 2007 Farbe Hintergrund1 = wei|fffd|
Selection.Find.Execute Replace:=wdReplaceAll
Exit Sub

Fehler:
'nichts tun
End Sub

Sub WeissenTextEntfernen()

On Error GoTo Fehler

With beck_tool
    .Width = 425.25
    .Label2 = "Verarbeitung l|fffd|uft ..."
    .Repaint
End With

Ueberarbeitungsmodus_aus
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
        .Text = "^?"
        .Font.Color = RGB(255, 255, 255)
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = True
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
Call Word2007_wei|fffd|_del

If ActiveDocument.Footnotes.Count > 0 Then
   ActiveWindow.View.SplitSpecial = wdPaneFootnotes
   Selection.Find.ClearFormatting
   Selection.Find.Replacement.ClearFormatting
   With Selection.Find
        .Text = "^?"
        .Font.Color = RGB(255, 255, 255)
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = True
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
   End With
   Selection.Find.Execute Replace:=wdReplaceAll
   Call Word2007_wei|fffd|_del
End If

With beck_tool
    .Label2 = "Verarbeitung beendet"
    .Repaint
End With

Application.StatusBar = "Verarbeitung beendet"
ActiveWindow.View.Type = wdNormalView
Ueberarbeitungsmodus_ein
Exit Sub

Fehler:
Ueberarbeitungsmodus_ein
Call Fehler

End Sub

Sub ManuellenZeilenumbruchL|fffd|schen()

On Error GoTo Fehler

Ueberarbeitungsmodus_aus
ActiveWindow.View.Type = wdPageView
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""

Load beck_Umbruchabfrage
beck_Umbruchabfrage.Show
Ueberarbeitungsmodus_ein
Exit Sub

Fehler:
Ueberarbeitungsmodus_ein
Call Fehler

End Sub

Sub SucheErsetze(Suche, Ersetze, Mustervergleich)  'Durchsucht beliebigen Text und Fn. in Layoutansicht (!)
                                                   'Kehrt am Ende zur|fffd|ck zu Seite 1 und schaltet in Normalansicht
On Error GoTo Fehler

'Im Text
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
ActiveWindow.View.Type = wdPageView
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
        .Text = Suche
        .Replacement.Text = Ersetze
        .Forward = True
        .Wrap = wdFindContinue
        .Format = True
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = Mustervergleich
        .MatchSoundsLike = False
        .MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll

'In den Noten
If ActiveDocument.Footnotes.Count = 0 Then GoTo Ende
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
ActiveWindow.View.SeekView = wdSeekFootnotes
Selection.GoTo What:=wdGoToFootnote, _
Which:=wdGoToAbsolute, Count:=1
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
        .Text = Suche
        .Replacement.Text = Ersetze
        .Forward = True
        .Wrap = wdFindContinue
        .Format = True
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = Mustervergleich
        .MatchSoundsLike = False
        .MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
Selection.HomeKey Unit:=wdStory

Ende:
Selection.HomeKey Unit:=wdStory
ActiveWindow.View.Type = wdNormalView
Exit Sub

Fehler:
Call Fehler

End Sub

Sub ManuelleZeilenschaltungenbeiDivisEntfernen()

On Error GoTo Fehler
With beck_tool
    .Width = 425.25
    .Label8 = "Verarbeitung l|fffd|uft ..."
    .Repaint
End With

Ueberarbeitungsmodus_aus
Application.ScreenUpdating = False
Call SucheErsetze("^-", "", False) 'Zus|fffd|tzlich zuerst bedingte Trennungen entfernen
Call SucheErsetze("-^l", "", False)

Application.ScreenUpdating = True
With beck_tool
    .Label8 = "Verarbeitung beendet"
    .Repaint
End With
Ueberarbeitungsmodus_ein
Exit Sub

Fehler:
Application.ScreenUpdating = True
Ueberarbeitungsmodus_ein
Call Fehler

End Sub

Sub MehrfachreturnsInFu|fffd|notenEntfernen()
Dim r, entfernt

On Error GoTo Fehler

r = 0
With beck_tool
    .Width = 425.25
    .Label7 = "Verarbeitung l|fffd|uft ..."
    .Repaint
End With
Ueberarbeitungsmodus_aus
If ActiveDocument.Footnotes.Count = 0 Then GoTo Ende2

ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial <> wdPaneFootnotes Then
   ActiveWindow.View.SplitSpecial = wdPaneFootnotes
End If
ActiveWindow.Panes(2).Activate
Selection.WholeStory
If Selection.Range.Tables.Count > 0 Then
   MsgBox ("Die Fu|fffd|noten enthalten eine oder mehrere Tabellen. Das sichere Entfernen von Mehrfachreturns ist daher nicht m|fffd|glich. Die Bearbeitung wird nicht durchgef|fffd|hrt.")
   r = 1
   GoTo Ende2
End If

Selection.HomeKey Unit:=wdStory
  
Application.ScreenUpdating = False

Selection.EndKey Unit:=wdStory
Selection.Text = Chr(13) & Chr(13) & "|fffd|" 'Ende markieren
Selection.Font.name = "Times New Roman"
Selection.HomeKey Unit:=wdStory

On Error Resume Next

While Not Selection.Text = "|fffd|"
  Selection.HomeKey Unit:=wdLine
  While Selection.Text = Chr(13) Or Selection.Text = Chr(11)
     If Err.Number <> 5252 Then
        Selection.Delete
        r = r + 1
        If Selection.Text = "|fffd|" Then
           Selection.Delete
           GoTo Ende
        End If
     End If
     If Err.Number = 5252 Then   'Fehler 5252 ist die Absatzmarke der Note selbst
        Err.Number = 0
        Selection.MoveUp Unit:=wdLine, Count:=1
        Selection.EndKey Unit:=wdLine
        If Selection.Text = Chr(13) Or Selection.Text = Chr(11) Then
           Selection.Delete
        End If
        If Selection.Text = "|fffd|" Then
           Selection.Delete
           GoTo Ende
        End If
        Selection.HomeKey Unit:=wdLine
        Selection.MoveDown Unit:=wdLine, Count:=1
     End If
  Wend
  Selection.MoveDown Unit:=wdLine, Count:=1
Wend

Ende:
Selection.Delete  'Reste entfernen
Selection.MoveUp Unit:=wdLine, Count:=1
Selection.EndKey Unit:=wdLine
If Selection.Text = Chr(13) Or Selection.Text = Chr(11) Then Selection.Delete
Selection.HomeKey Unit:=wdStory
ActiveWindow.View.Type = wdNormalView
Ende2:
Application.ScreenUpdating = True
Application.StatusBar = "Verarbeitung beendet"
If ActiveDocument.Footnotes.Count = 0 Then entfernt = 0 Else entfernt = r - 1
With beck_tool
    .Label7 = "Verarbeitung beendet. " & entfernt & " Absatzmarke(n) entfernt."
    .Repaint
End With
Ueberarbeitungsmodus_ein
Exit Sub

Fehler:
Application.ScreenUpdating = True
Ueberarbeitungsmodus_ein
Call Fehler

End Sub

Sub AlleListenNachTextUmwandeln()

Dim Anz, Antwort

Antwort = InputBox("ACHTUNG: Diese Funktion ist nur zur Bereinigung von Datenauslagerungen gedacht." & Chr(13) & "Nicht bei Texten anwenden, die direkt in der XML-Dokumentvorlage erfasst wurden!" & Chr(13) & Chr(13) & "Bitte Passwort erneut eingeben!", "Beck Tools Passworteingabe ...")
If Antwort = "" Then
  With beck_tool
    .Width = 425.25
    .Label11 = "Verarbeitung abgebrochen"
    .Repaint
  End With
  Exit Sub
End If

If Antwort <> "herstellung" Then
  MsgBox ("Falsches Passwort! Bitte nochmal versuchen.")
  With beck_tool
    .Width = 425.25
    .Label11 = "Verarbeitung abgelehnt"
    .Repaint
  End With
  Exit Sub
End If

Antwort = MsgBox("ACHTUNG:" & Chr(13) & "Automatische Nummerierungen werden nun in feststehenden Text umgewandelt. Diese |fffd|nderung kann nicht r|fffd|ckg|fffd|ngig gemacht werden!" & Chr(13) & Chr(13) & "M|fffd|chten Sie fortfahren?", vbYesNo + vbDefaultButton2, "Hinweis")
If Antwort = vbNo Then
   With beck_tool
       .Width = 425.25
       .Label11 = "Verarbeitung abgelehnt"
       .Repaint
   End With
   Exit Sub
End If

On Error GoTo Fehler
Ueberarbeitungsmodus_aus
Anz = ActiveDocument.lists.Count
ActiveDocument.Range.ListFormat.ConvertNumbersToText
Application.StatusBar = "Verarbeitung beendet"
ActiveWindow.View.Type = wdNormalView
With beck_tool
    .Width = 425.25
    .Label11 = "Verarbeitung beendet. " & Anz & " Liste(n) verarbeitet."
    .Repaint
End With

Ueberarbeitungsmodus_ein
Exit Sub

Fehler:
Ueberarbeitungsmodus_ein
Call Fehler

End Sub

Sub LeereFu|fffd|notenMitBlockadeVersehen()
Dim l As Integer

On Error GoTo Fehler

With beck_tool
    .Width = 425.25
    .Label5 = "Verarbeitung l|fffd|uft ..."
    .Repaint
End With
Ueberarbeitungsmodus_aus
l = 0
If ActiveDocument.Footnotes.Count = 0 Then GoTo Ende
For i = 1 To ActiveDocument.Footnotes.Count
  If Len(ActiveDocument.Footnotes(i).Range) = 0 Then
   l = l + 1
   ActiveDocument.Footnotes(i).Range.InsertAfter ("n")        'Blockade einf|fffd|gen
   ActiveDocument.Footnotes(i).Range.Font.name = "Wingdings"
  End If
Next i

Ende:
With beck_tool
    .Label5 = "Verarbeitung beendet. " & l & " Blockade(n) eingef|fffd|gt."
    .Repaint
End With

Application.StatusBar = "Verarbeitung beendet"
ActiveWindow.View.Type = wdNormalView
Ueberarbeitungsmodus_ein
Exit Sub

Fehler:
Ueberarbeitungsmodus_ein
Call Fehler

End Sub

Sub Fu|fffd|noten_Rot()   'Formatiert wei|fffd|e Fu|fffd|notenziffern rot. Wei|fffd| = Trick von N|fffd|, damit abschnittweise Fu|fffd|notenz|fffd|hlung bei fortlaufenden Abschnittswechseln m|fffd|glich ist
Dim Fn As Footnote

For Each Fn In ActiveDocument.Footnotes
        Fn.Reference.Select
        If Selection.Font.Color = wdColorWhite Or Selection.Font.Color = -603914241 Then Selection.Font.Color = wdColorRed
ActiveDocument.UndoClear 'verhindert Speicher|fffd|berlauf
Next Fn
End Sub

Sub Fu|fffd|notenReparieren()

Dim Fn As Footnote
Dim Satzzeichen As String
Dim Antwort

On Error GoTo Fehler

Antwort = InputBox("ACHTUNG: Dies ist ein inhaltlicher Eingriff. Alle Fu|fffd|notenziffern im Text werden hinter das Satzzeichen verschoben. Bitte mit dem Lektorat kl|fffd|ren." & Chr(13) & Chr(13) & "Bitte Passwort erneut eingeben!", "Beck Tools Passworteingabe ...")
If Antwort = "" Then
   With beck_tool
    .Width = 425.25
    .Label10 = "Verarbeitung abgebrochen"
    .Repaint
   End With
Exit Sub
End If

If Antwort <> "herstellung" Then
  MsgBox ("Falsches Passwort! Bitte nochmal versuchen.")
   With beck_tool
    .Width = 425.25
    .Label10 = "Verarbeitung abgelehnt"
    .Repaint
   End With
  Exit Sub
End If
    
Antwort = MsgBox("ACHTUNG: Dies ist ein inhaltlicher Eingriff. Sollen alle Fu|fffd|notenziffern im Text hinter das Satzzeichen verschoben werden?", vbYesNo + vbDefaultButton2)
If Antwort = vbNo Then
   With beck_tool
    .Width = 425.25
    .Label10 = "Verarbeitung abgelehnt"
    .Repaint
   End With
   Exit Sub
End If
    
With beck_tool
    .Width = 425.25
    .Label10 = "Verarbeitung l|fffd|uft ..."
    .Repaint
End With

Ueberarbeitungsmodus_aus
If ActiveDocument.Footnotes.Count = 0 Then GoTo Ende

Application.ScreenUpdating = False 'schnellere Verarbeitung

For Each Fn In ActiveDocument.Footnotes
        Fn.Reference.Select
        With Selection
            .Collapse wdCollapseEnd
            .MoveRight Unit:=wdCharacter, Count:=1, Extend:=True
            Satzzeichen = .Text
            Select Case Satzzeichen
                Case ".", ",", ";", ":", "!", "?"
                    .Delete
                    .MoveLeft Unit:=wdCharacter, Count:=1, Extend:=False
                    .Collapse wdCollapseStart
                    .Text = Satzzeichen
                    .Collapse wdCollapseEnd
                Case Else
                    .Collapse wdCollapseEnd
            End Select
        End With
ActiveDocument.UndoClear 'verhindert Speicher|fffd|berlauf
Next Fn

Ende:
With beck_tool
    .Label10 = "Verarbeitung beendet"
    .Repaint
End With
Application.ScreenUpdating = True
Selection.HomeKey Unit:=wdStory
ActiveWindow.View.Type = wdNormalView
Application.StatusBar = "Verarbeitung beendet"
Ueberarbeitungsmodus_ein
Exit Sub

Fehler:
Application.ScreenUpdating = True
Ueberarbeitungsmodus_ein
Call Fehler

End Sub

Sub Fehler()
Dim Antwort

ActiveWindow.View.Type = wdNormalView
Antwort = MsgBox("Die Verarbeitung konnte wegen eines Fehlers nicht abgeschlossen werden." & Chr(13) & "Bitte mit einer Sicherheitskopie weiterarbeiten.", , "Verarbeitungsfehler")
End
End Sub

Sub W2000Ueberarbeiten_aus() 'Word 2000 Workaround
If ActiveDocument.TrackRevisions Then
   Aenderungen_verfolgen = True
   Else:
   Aenderungen_verfolgen = False
End If

If ActiveDocument.ShowRevisions Then
   End_Aenderungen_anzeigen = True
   Else:
   End_Aenderungen_anzeigen = False
End If

With ActiveDocument
        .TrackRevisions = False
        .PrintRevisions = False
        .ShowRevisions = False
End With
End Sub

Sub W2000Ueberarbeiten_ein()
If Aenderungen_verfolgen Then ActiveDocument.TrackRevisions = True
If End_Aenderungen_anzeigen Then
   ActiveDocument.ShowRevisions = True
   ActiveDocument.PrintRevisions = True
End If
End Sub

Sub Ueberarbeitungsmodus_aus()

ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial = 7 Then
        ActiveWindow.Panes(2).Close   'Fn.Bereich schlie|fffd|en, sonst Probleme in Word 2010
End If

'8 = Word 97. 9 = Word 2000. 10 = Word 2002. 11 = Word 2003. 12 = Word 2007. 14 = Word 2010
If Val(Application.Version) < 11 Then
   Call W2000Ueberarbeiten_aus
   Exit Sub
End If
Call Ausschalten  'Word 2003 und h|fffd|her
End Sub

Sub Ausschalten()
Dim dlgFind As Dialog

If ActiveWindow.View.ShowRevisionsAndComments Then
   Aenderungen_anzeigen = True
   Else:
   Aenderungen_anzeigen = False
End If

If ActiveWindow.View.RevisionsView = wdRevisionsViewFinal Then
   End_Aenderungen_anzeigen = True
   Start_Aenderungen_anzeigen = False
End If

If ActiveWindow.View.RevisionsView = wdRevisionsViewOriginal Then
   Start_Aenderungen_anzeigen = True
   End_Aenderungen_anzeigen = False
End If

On Error GoTo Standardeinstellung  'Fehler wird ausgel|fffd|st, wenn Cursor sich in OLE-Object (z.B.Formel) befindet, dann Standardeinstellung, sonst Absturz
If ActiveDocument.TrackRevisions Then
   Aenderungen_verfolgen = True
   Else:
Standardeinstellung:
   Aenderungen_verfolgen = False
End If

Set dlgFind = Dialogs(wdDialogEditFind)   'Suche und Ersetze Fenster ausschalten, sonst im Folgenden Fehler

If End_Aenderungen_anzeigen Or Start_Aenderungen_anzeigen Then
   Options.RevisionsBalloonPrintOrientation = wdBalloonPrintOrientationPreserve  'Sprechblasen aus
   ActiveWindow.View.RevisionsMode = wdInLineRevisions 'Sprechblasen aus
End If

If Aenderungen_verfolgen Then ActiveDocument.TrackRevisions = False

With ActiveWindow.View
   .ShowRevisionsAndComments = False
   .RevisionsView = wdRevisionsViewFinal
End With

End Sub

Sub Ueberarbeitungsmodus_ein()
If Val(Application.Version) < 11 Then
   Call W2000Ueberarbeiten_ein
   Exit Sub
End If
Call Einschalten 'Word 2003 und h|fffd|her
End Sub

Sub Einschalten()
With ActiveWindow.View
   If Aenderungen_anzeigen Then
      .ShowRevisionsAndComments = True
      Else
      .ShowRevisionsAndComments = False
   End If
   
   If End_Aenderungen_anzeigen Then .RevisionsView = wdRevisionsViewFinal
   If Start_Aenderungen_anzeigen Then .RevisionsView = wdRevisionsViewOriginal
End With

If Aenderungen_verfolgen Then ActiveDocument.TrackRevisions = True
End Sub
Attribute VB_Name = "Fokus"
'Fokus zur|fffd|ck an Word-Dokument. CB Mai 2010
Option Private Module
'Falls Word 2010 in der 64-bit Variante, dann muss "PtrSafe" eingef|fffd|gt sein. Vgl.: http://msdn.microsoft.com/de-de/library/ee691831.aspx
#If VBA7 Then
   Private Declare PtrSafe Function GetActiveWindow Lib "user32" () As Long
   Private Declare PtrSafe Function SetFocus Lib "user32" (ByVal hwnd As LongPtr) As Long
   Private Declare PtrSafe Function GetParent Lib "user32" (ByVal hwnd As LongPtr) As Long
#Else
   Private Declare Function GetActiveWindow Lib "user32" () As Long
   Private Declare Function SetFocus Lib "user32" (ByVal hwnd As Long) As Long
   Private Declare Function GetParent Lib "user32" (ByVal hwnd As Long) As Long
#End If
   
Sub FocusAnDocument()
On Error Resume Next
  Dim h As Long
  h = GetActiveWindow()
  h = GetParent(h)
  SetFocus h
End Sub

Attribute VB_Name = "Formate_bereinigen"
Option Private Module

Sub Formate_loeschen()

'Admintool um Dokumentvorlage von benutzerdefinierten Formaten zu bereinigen,
'die sich bei der Entwicklung durch Copy & Paste "eingeschlichen" haben.
'Dieses Makro ist nicht aus Men|fffd|s heraus zug|fffd|nglich!

Start
Dim mp_anzahl, mp, p_anzahl, p, lname, mpname
Dim p_Liste, Ausschluss, a_element, element
Dim Formate As New Collection
Dim sty As style
Dim a_treffer
Dim Antwort

If ActiveDocument.BuiltInDocumentProperties(4) <> "" Then
   MsgBox ("Bereinigung nur m|fffd|glich, wenn keine Reihe definiert ist.")
   Exit Sub
End If

Antwort = MsgBox("Das L|fffd|schen von Absatz- und Zeichenformatvorlagen kann nicht r|fffd|ckg|fffd|ngig gemacht werden!", vbOKCancel, "Hinweis")
If Antwort = vbCancel Then Exit Sub

'Die Otto-Listboxen hei|fffd|en anders! Daf|fffd|r haben die Formate eine "b_" am Anfang oder "start", "stop" am Ende.
'Diese Multipageseiten und weitere nicht verarbeiten:
Ausschluss = Array("Metadaten", "Blickfang", "Listen", "Sonstiges")

mp_anzahl = beck_form.MultiPage1.Pages.Count
For mp = 0 To mp_anzahl - 1
  mpname = beck_form.MultiPage1.Pages(mp).caption
  For Each a_element In Ausschluss
      If a_element = mpname Then GoTo next_mp
  Next
  lname = "ListBox_" & mpname 'ListBox-Namen zusammenbauen
  p_anzahl = beck_form.MultiPage1.Pages(mp).Controls(lname).ListCount
  For p = 0 To p_anzahl - 1
      Formate.Add (beck_form.MultiPage1.Pages(mp).Controls(lname).List(p))
      'Char und Zchn aus Komp.-gr|fffd|nden zu alten Word-Versionen nicht l|fffd|schen.
      Formate.Add (beck_form.MultiPage1.Pages(mp).Controls(lname).List(p) & " Zchn")
      Formate.Add (beck_form.MultiPage1.Pages(mp).Controls(lname).List(p) & " Char")
  Next p
next_mp:
Next mp

Unload beck_form

'On Error Resume Next
For Each sty In ActiveDocument.Styles
      a_treffer = 0
      StatusBar = "Pr|fffd|fe Format: " & sty
      
      'Formate mit vorangestelltem Leerzeichen verursachen Programmabsturz.
      'Ausnahmen definieren.
      If Left(sty.NameLocal, 1) <> " " And Left(sty.NameLocal, 2) <> "b_" _
        And Len(sty.NameLocal) > 0 And Right(sty.NameLocal, 5) <> "start" _
        And Right(sty.NameLocal, 4) <> "stop" And sty.NameLocal <> "Seitenwechsel" And sty.NameLocal <> "Frage" Then
        If sty.BuiltIn = False Then
          For Each element In Formate
             If element = sty Then a_treffer = a_treffer + 1
          Next
          If a_treffer = 0 Then
             If sty <> "" Then sty.Delete
             ActiveDocument.UndoClear
          End If
        End If
      End If
Next sty

MsgBox ("Verarbeitung beendet." & Chr(13) & "ACHTUNG: Bitte unbedingt pr|fffd|fen ob alle ben|fffd|tigten Formate in Beck-Template noch vorhanden sind und erst dann Dokument speichern!")
End Sub



Attribute VB_Name = "Modul1"
Option Private Module
Option Explicit
Dim tree(), tree_buch_h(), tree_gesetz_h() As String
Dim tree_index, tree_index_buch, tree_index_gesetz As Long
Public Men|fffd|_angepasst As Boolean
Public style As String
Public style_error(255)
Public error_count As Integer
Public Anzahl_Hyperlinks, Anzahl_Bookmarks As Integer
Public Leerstellen_korrigiert As Boolean
Public para_zaehler, foot_zaehler
Public Absatz_pruefen, Absaetze_geprueft As Boolean
Public error
Public Verkn_anzeigen, Fields_inText As Boolean
Public Loseblatt_Kommentar As Boolean
Public Version As String

Private Sub Container_konvertieren(Absatzformat, Absatzinhalt)

'Alte Blickf|fffd|nge (vor Version 1.44) neu zu ordnen
If Left(Absatzformat, 5) = "b_box" Then
        
        Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend 'ohne Absatzmarke, damit Selection.Text ohne Probleme funktioniert
        Select Case Absatzinhalt
            
            Case "Beispiel Start" & Chr(13)
                 Selection.style = "b_beispiel_start"
            Case "Beispiel Stop" & Chr(13)
                 Selection.style = "b_beispiel_stop"
         
            Case "Blickfang Start" & Chr(13)
                 Selection.Text = "Hervorhebung/Emphasis Start"
                 Selection.style = "b_hervorhebung_emphasis_start"
            Case "Blickfang Stop" & Chr(13)
                 Selection.Text = "Hervorhebung/Emphasis Stop"
                 Selection.style = "b_hervorhebung_emphasis_stop"
    
            Case "F|fffd|lle Start" & Chr(13)
                 Selection.Text = "F|fffd|lle/Aufgabe Start"
                 Selection.style = "b_faelle_aufgabe_start"
            Case "F|fffd|lle Stop" & Chr(13)
                 Selection.Text = "F|fffd|lle/Aufgabe Stop"
                 Selection.style = "b_faelle_aufgabe_stop"
           
            Case "L|fffd|sung Start" & Chr(13)
                 Selection.style = "b_loesung_start"
            Case "L|fffd|sung Stop" & Chr(13)
                 Selection.style = "b_loesung_stop"
       
            Case "Merke Start" & Chr(13)
                 Selection.style = "b_merke_start"
            Case "Merke Stop" & Chr(13)
                 Selection.style = "b_merke_stop"
        
            Case "Schema Start" & Chr(13)
                 Selection.style = "b_schema_start"
            Case "Schema Stop" & Chr(13)
                 Selection.style = "b_schema_stop"
          
            Case "Zitat Start" & Chr(13)
                 Selection.style = "b_zitat_start"
            Case "Zitat Stop" & Chr(13)
                 Selection.style = "b_zitat_stop"
            
            Case "Material Start" & Chr(13)
                 Selection.style = "b_material_start"
            Case "Material Stop" & Chr(13)
                 Selection.style = "b_material_stop"
            
            Case "Wichtig Start" & Chr(13)
                 Selection.style = "b_wichtig_start"
            Case "Wichtig Stop" & Chr(13)
                 Selection.style = "b_wichtig_stop"
            
            Case "Motto/Leitgedanke Start" & Chr(13)
                 Selection.style = "b_motto_leitgedanke_start"
            Case "Motto/Leitgedanke Stop" & Chr(13)
                 Selection.style = "b_motto_leitgedanke_stop"
            
            Case "Formel/Berechnung Start" & Chr(13)
                 Selection.style = "b_formel_berechnung_start"
            Case "Formel/Berechnung Stop" & Chr(13)
                 Selection.style = "b_formel_berechnung_stop"
             
            Case "Material/Muster Start" & Chr(13)
                 Selection.style = "b_material_muster_start"
            Case "Material/Muster Stop" & Chr(13)
                 Selection.style = "b_material_muster_stop"
            
            Case "Checkliste Start" & Chr(13)
                 Selection.style = "b_checkliste_start"
            Case "Checkliste Stop" & Chr(13)
                 Selection.style = "b_checkliste_stop"
              
            Case "Kleindruck Start" & Chr(13)
                 Selection.style = "b_kleindruck_start"
            Case "Kleindruck Stop" & Chr(13)
                 Selection.style = "b_kleindruck_stop"
        
         End Select
     style = Selection.Paragraphs.style
     End If
End Sub

Private Sub beck_error_end(ByVal errortext)
    error = 1
    MsgBox errortext, vbOKOnly, "Beck-Template-Check: Fehler"
    'End
End Sub

Private Sub Error_def() 'CB Mai 2010

If Absatz_pruefen = False Then   'Zeichenformatpr|fffd|fung
   With ActiveDocument.Bookmarks
      .Add Range:=Selection.Range, name:="Fehler_" & error_count
      .DefaultSorting = wdSortByName
      .ShowHidden = False
   End With
End If
  
If Absatz_pruefen = True Then    'Absatzformat- und Strukturpr|fffd|fung
   If ActiveWindow.View.SplitSpecial = 7 Then   'in Fu|fffd|noten
     With ActiveDocument.Bookmarks
        .Add Range:=ActiveDocument.Footnotes(foot_zaehler).Range, name:="Fehler_" & error_count
        .DefaultSorting = wdSortByName
        .ShowHidden = False
     End With
   Else:   'im Text
     With ActiveDocument.Bookmarks
        .Add Range:=ActiveDocument.Paragraphs(para_zaehler).Range, name:="Fehler_" & error_count
        .DefaultSorting = wdSortByName
        .ShowHidden = False
     End With
   End If
End If

style_error(error_count) = "Fehler_" & error_count
                    
error_count = error_count + 1
error = 1

End Sub

Private Sub beck_paragraphs()
    Dim apara
    Dim foot
    Dim para_inhalt
    Dim s
    Dim f As Integer
    Dim last As String
    Dim para_anzahl As Long
    Dim foot_anzahl As Long
    
    error_count = 0
    last = ""
    Erase tree
    Erase tree_buch_h
    Erase tree_gesetz_h
    tree_index = 0
    tree_index_buch = 0
    tree_index_gesetz = 0
        
    'Ansicht auf Normal umschalten
    ActiveWindow.View.Type = wdNormalView
    Selection.Bookmarks.Add ("Pruefen_Pos")
    Ueberarbeitungsmodus_aus
        
    Absatz_pruefen = True
    
    para_zaehler = 0
    foot_zaehler = 0
    para_anzahl = ActiveDocument.Paragraphs.Count
    Application.ScreenUpdating = False
    ActiveDocument.Styles(wdStyleFootnoteText).NameLocal = "Fu|fffd|notentext" 'falls der Word-Standardname umbenannt wurde
    
    For Each apara In ActiveDocument.Paragraphs
        apara.Range.Select
        para_zaehler = para_zaehler + 1
        StatusBar = "Template-Check: Absatz " & para_zaehler & " von " & para_anzahl
        
        If apara.Range.Information(wdWithInTable) = True Then  'Tabellen k|fffd|nnen nicht sauber gepr|fffd|ft werden (insb. Aufz.).
            style = "p"  'Daher f|fffd|r jeden Tabellenabsatz "p" vorgaukeln und den folgenden Code |fffd|berspringen.
            GoTo Start_Pruefung
        End If
        
        If Selection.Bookmarks.Exists("\EndOfDoc") Then
           Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend 'am Ende des Doks letztes Absatzzeichen auslassen
           If Selection.Paragraphs.Count = 1 Then
              style = Selection.Paragraphs.style
              Else:
              style = Selection.Paragraphs(1).style 'bestimmte Felder z|fffd|hlt apara als  e i n  paragraph, dieser besteht aber aus mehreren paragraphs. Z.B. Rechtsgrundlagenverz."
           End If
        Else:
           If Selection.Paragraphs.Count = 1 Then
              style = Selection.Paragraphs.style
              Else:
              style = Selection.Paragraphs(1).style 'bestimmte Felder z|fffd|hlt apara als  e i n  paragraph, dieser besteht aber aus mehreren paragraphs. Z.B. Rechtsgrundlagenverz.
           End If
        End If

        para_inhalt = apara.Range.Text
        'MsgBox (para_inhalt & " " & style) 'f|fffd|r Testzwecke
        
        'Alte Blickf|fffd|nge (vor Version 1.44) neu zu ordnen
        Call Container_konvertieren(style, para_inhalt)
        
        Select Case style 'Die Formate mit Typoattributen einer "echten" |fffd|berschrift logisch zuordnen
            
            Case "h1(Typo_h2)", "h1(Typo_h3)", "h2(Typo_h3)", "h2(Typo_h4)", "h3(Typo_h4)", "h3(Typo_h5)", "h4(Typo_h5)", "h4(Typo_h6)", "h5(Typo_h6)", "h5(Typo_h7)", "h6(Typo_h7)", "h6(Typo_h8)", "h7(Typo_h8)", "h7(Typo_h9)", "h8(Typo_h9)"
                 style = Left(style, 2)
       
       'Anhang-Formate vor Version 1.3 in aktuelle Formate konvertieren
            Case "anhang_h1", "anhang_h2", "anhang_h3", "anhang_h4", "anhang_h5"
                Selection.style = Right(style, 2)
                style = Right(style, 2)
            
            Case "anhang_paratitel"
                Selection.style = "paratitel"
                style = "paratitel"
            
            Case "anhang_paratext"
                Selection.style = "paratext"
                style = "paratext"
                
       'Blickfang-Formate vor Version 1.44 in aktuelle Formate konvertieren
            Case "b_containertitle"
                Selection.style = "b_blickfangtitle"
                style = "b_blickfangtitle"
                
        End Select

Start_Pruefung:
        Select Case style
      
        'Word-Indexe und Word-Verzeichnisse d|fffd|rfen verwendet werden
            Case "Index 1"
            
            Case "Index 2"
            
            Case "Index 3"
            
            Case "Index 4"
            
            Case "Index 5"
            
            Case "Index 6"
            
            Case "Index 7"
            
            Case "Index 8"
            
            Case "Index 9"
            
            Case "Index|fffd|berschrift"
            
            Case "Verzeichnis 1"
            
            Case "Verzeichnis 2"
            
            Case "Verzeichnis 3"
            
            Case "Verzeichnis 4"
            
            Case "Verzeichnis 5"
            
            Case "Verzeichnis 6"
            
            Case "Verzeichnis 7"
            
            Case "Verzeichnis 8"
            
            Case "Verzeichnis 9"
      
       '-------------------------------------
       'Titelei

           Case "Seitenwechsel" 'f|fffd|r N|fffd|. Wird nicht offiziell verwendet
           
           Case "schmutztitel_autor"
            
           Case "schmutztitel_titel"
            
           Case "titelei_untertitel"
            
           Case "titelei_buchtyp"
           
           Case "titelei_autor"
            
           Case "titelei_verlag"
            
           Case "titelei_p"
            
           Case "titelei_titel"
            
           Case "impressum_online"
            
           Case "impressum_isbn"
            
           Case "impressum_p"
           
           Case "vorwort_titel"
            
           Case "vorwort_p"
           
           Case "vorwort_autor"
            
                           
       '-------------------------------------
       'Standard/Gesetz
            
            Case "p"

            Case "randziffer"

            Case "h1", "buch_h1", "gesetz_h1"
                If Left(style, 1) = "h" Then set_tree (style)
                If Left(style, 1) = "b" Then set_tree_buch_h (style)
                If Left(style, 1) = "g" Then set_tree_gesetz_h (style)
                If last = "randziffer" Then
                    beck_Fehlermeldung.ListBox1.AddItem "Strukturfehler " & style & ": " & style & " direkt nach randziffer"
                    Call Error_def
                    If error_count = 255 Then GoTo beck_paragraphs_end
                End If
                If last = style Then
                    'apara.Range.Select
                    beck_Fehlermeldung.ListBox1.AddItem "Strukturfehler " & style & ": " & style & " direkt nach h1"
                    Call Error_def
                    If error_count = 255 Then GoTo beck_paragraphs_end
                End If
                
            Case "h2", "h3", "h4", "h5", "h6", "h7", "h8", "h9", "buch_h2", "buch_h3", "buch_h4", "buch_h5", "buch_h6", "gesetz_h2", "gesetz_h3", "gesetz_h4", "gesetz_h5", "gesetz_h6"
                If Left(style, 1) = "h" Then set_tree (style)
                If Left(style, 1) = "b" Then set_tree_buch_h (style)
                If Left(style, 1) = "g" Then set_tree_gesetz_h (style)
                If last = "randziffer" Then
                    beck_Fehlermeldung.ListBox1.AddItem "Strukturfehler " & style & ": " & style & " direkt nach randziffer"
                    Call Error_def
                    If error_count = 255 Then GoTo beck_paragraphs_error
                End If
                If last = style Then
                    beck_Fehlermeldung.ListBox1.AddItem "Strukturfehler " & style & ": " & style & " direkt nach " & style
                    Call Error_def
                    If error_count = 255 Then GoTo beck_paragraphs_error
                End If
                get_tree (style)
                If error_count = 255 Then GoTo beck_paragraphs_error
    
            Case "bildunterschrift"
  
            Case "anhang_titel"
    
            Case "artikel_titel"
                
       '-------------------------------------
       'Verzeichnis
            Case "abbildungsverz_titel"
                            
            Case "abbildungsverz_p"
                     
            Case "abkverz_titel"
            
            Case "abkverz_p"
                            
       'Anhang-Formate vor Version 1.4 in aktuelle Formate konvertieren
            Case "abkverz"
                Selection.style = "abkverz_p"
                style = "abkverz_p"
            
            Case "autorverz_titel"
            
            Case "autorverz_p"
                            
            Case "literatur_titel"
            
            Case "literatur_p"
                
            Case "litabk_titel"
                
            Case "litabk_p"
                
            Case "litabk"
                Selection.style = "litabk_p"
                style = "litabk_p"
                
            Case "litverz_titel"
            
            Case "litverz_p"
                
            Case "litverz"
                Selection.style = "litverz_p"
                style = "litverz_p"
                            
            Case "tabverz_titel"
            
            Case "tabverz_p"
            
            Case "verz_untertitel"
                                 
       '-------------------------------------
       'Gesetze
       
            Case "gesetz_titel"
               
            Case "gesetz_fassung"
               
            Case "gesetz_aenderung"
               
            'gesetz_hx |fffd|berschriften siehe oben bei Standard
           
            Case "gesetz_p"
               
            Case "paratitel"
               
            Case "paratext"
               
       '-------------------------------------
       'Anhang
            
            Case "anhang_titel"
       
       '-------------------------------------
       'Andere. Alle Absatzformate die mit "b_###" beginnen sind erlaubt
            
            Case "gesetz_abk"
            
            Case "Frage"
            
            Case "b_autor"
            
            Case "b_blickfangtitle"
            
            Case "b_bildunterschrift"
            
            Case "b_Abbildung"
             
            Case Else
                If Right(style, 6) = "_start" Or Right(style, 5) = "_stop" Or Left(style, 5) = "b_lit" Then
                    If Right(style, 6) = "_start" Or Right(style, 5) = "_stop" Then  'nur die Container auf Struktur pr|fffd|fen
                       set_tree (style)
                       get_tree (style)
                    End If
                    If error_count = 255 Then GoTo beck_paragraphs_error
                Else
                    beck_Fehlermeldung.ListBox1.AddItem style
                    Call Error_def
                    If error_count = 255 Then GoTo beck_paragraphs_error
                End If
        
        End Select
        
        last = style
    
beck_paragraphs_next:
    ActiveDocument.UndoClear  'verhindert Speicher|fffd|berlauf
    Next apara
    
    
    If ActiveDocument.Footnotes.Count > 0 Then
        ActiveWindow.View.SplitSpecial = wdPaneFootnotes
        foot_anzahl = ActiveDocument.Footnotes.Count
        For Each foot In ActiveDocument.Footnotes
            foot_zaehler = foot_zaehler + 1
            StatusBar = "Template-Check: Fu|fffd|note " & foot_zaehler & " von " & foot_anzahl
            
FNHinweis:
            If foot.Range.Information(wdWithInTable) = True Then
                GoTo beck_footnote_next
            End If
            If foot.Range.Paragraphs.Count > 1 Then 'Falls Note aus untersch. formatierten Abs|fffd|tzen besteht, wird sonst ein Fehler verursacht
               For f = 1 To foot.Range.Paragraphs.Count
                   If foot.Range.Paragraphs(f).Range.Tables.Count > 0 Then GoTo next_f  'Tabelle auslassen
                   style = foot.Range.Paragraphs(f).style
                   If style <> ActiveDocument.Styles(wdStyleFootnoteText) And f = 1 Then 'Erster Absatz darf nichts anderes als wdStyleFootnoteText sein
                      beck_Fehlermeldung.ListBox1.AddItem style
                      Call Error_def
                      If error_count = 255 Then GoTo beck_paragraphs_error
                   End If
                   If style <> ActiveDocument.Styles(wdStyleFootnoteText) And Left(style, 7) <> "b_litem" And f > 1 Then  'Format "Fu|fffd|notentext" und Aufz|fffd|hlungen zulassen
                      beck_Fehlermeldung.ListBox1.AddItem style
                      Call Error_def
                      If error_count = 255 Then GoTo beck_paragraphs_error
                   End If
next_f:
               Next f
               GoTo beck_footnote_next
            End If

Weiter_Pr|fffd|fen: 'Fn nur ein Absatz
            style = foot.Range.style
            para_inhalt = foot.Range.Text
            Select Case style
            Case Else
                If style = ActiveDocument.Styles(wdStyleFootnoteText) Then  'in Fu|fffd|notentext, der nur aus einem Absatz besteht, nur Format "Fu|fffd|notentext" zulassen
                    ' do nothing
                Else
                    beck_Fehlermeldung.ListBox1.AddItem style
                    Call Error_def
                    If error_count = 255 Then GoTo beck_paragraphs_error
                End If
        End Select
        
        last = style
    
beck_footnote_next:
            ActiveDocument.UndoClear  'verhindert Speicher|fffd|berlauf
        Next foot
    End If
    
    
beck_paragraphs_error:
    
    If ActiveWindow.View.SplitSpecial = 7 Then
        ActiveWindow.Panes(2).Close
    End If
    If beck_Fehlermeldung.ListBox1.ListCount > 0 Then
        error = 1
        Load beck_Fehlermeldung
        If beck_Fehlermeldung.ListBox1.ListCount = 255 Then   'Erg|fffd|nzt CB April 2010
           beck_Fehlermeldung.Height = 308
           beck_Fehlermeldung.Label2.caption = "Die Liste enth|fffd|lt 255 Eintr|fffd|ge. Weitere m|fffd|gliche Fehler werden erst angezeigt, wenn Sie die aufgelisteten Fehler bearbeiten und die Pr|fffd|fenfunktion neu ausf|fffd|hren."
           Else
           beck_Fehlermeldung.Height = 254
           beck_Fehlermeldung.Label2.caption = ""
           End If
        beck_Fehlermeldung.Show
    End If
   
beck_paragraphs_end:
Application.ScreenUpdating = True
ActiveDocument.Bookmarks("Pruefen_Pos").Select
ActiveDocument.Bookmarks("Pruefen_Pos").Delete
Ueberarbeitungsmodus_ein
StatusBar = error_count & " Fehler gefunden!"
ActiveDocument.UndoClear  'verhindert Speicher|fffd|berlauf
Absaetze_geprueft = True 'merken, dass gepr|fffd|ft wurde, f|fffd|r Hinweis bei Sitzungsende
    
End Sub

Private Sub get_tree(ByVal ziel_tag) 'CB komplett neu programmiert. Jan. 2012

Dim i
Dim aktuell, vergleichszahl, Differenz, Feldumfang As Integer
Dim Start_vorhanden, buch_h, gesetz_h As Boolean
Dim h_typ As String

If Loseblatt_Kommentar Then Exit Sub
Start_vorhanden = True
buch_h = False
gesetz_h = False

If Left(ziel_tag, 6) = "buch_h" Then
   Feldumfang = UBound(tree_buch_h)
   buch_h = True
   h_typ = Left(ziel_tag, 6)
End If

If Left(ziel_tag, 8) = "gesetz_h" Then
   Feldumfang = UBound(tree_gesetz_h)
   gesetz_h = True
   h_typ = Left(ziel_tag, 8)
End If

aktuell = Val(Right(ziel_tag, 1))  'nur wenn einstellig m|fffd|glich

If aktuell > 9 Then
   MsgBox ("Achtung Pr|fffd|fenfunktion kann nicht ausgef|fffd|hrt werden. |fffd|berschriftenhierarchie > 9")
   End
End If

If Not buch_h And Not gesetz_h Then   'die h1 |fffd|berschriften und die Container pr|fffd|fen
  For i = UBound(tree) - 1 To 0 Step -1
     If Right(ziel_tag, 5) <> "start" And Right(ziel_tag, 5) <> "_stop" Then 'Nur die |fffd|berschriften pr|fffd|fen
        If Right(tree(i), 5) <> "start" And Right(tree(i), 5) <> "_stop" Then
           vergleichszahl = Val(Right(tree(i), 1))                           'Hinweis: Val gibt 0 zur|fffd|ck wenn kein Eintrag oder Eintrag ohne Zahl
           Differenz = aktuell - vergleichszahl
           'MsgBox ("h" & aktuell & "h" & vergleichszahl) 'zum testen
           If Differenz > 1 Then  '= Fehlerfall
              beck_Fehlermeldung.ListBox1.AddItem "Strukturfehler " & ziel_tag & ": " & ziel_tag & " ohne " & "h" & aktuell - 1
              Call Error_def
              Exit Sub
           End If
           If Differenz = 0 Or Differenz = 1 Then Exit Sub '= kein Fehler
        End If
     Else   'Die Container pr|fffd|fen. CB Okt. 2012
        If ziel_tag = tree(i) Then   'Leider kann nicht der letzte "Start" vorausschauend auf "Stop" gepr|fffd|ft werden
           Call Error_def
           If Right(ziel_tag, 5) = "_stop" Then
              beck_Fehlermeldung.ListBox1.AddItem "Strukturfehler " & ziel_tag & ": Stop- ohne Startmarkierung" 'Stop des letzen Containers ohne neuen Start
              Else
              beck_Fehlermeldung.ListBox1.AddItem "Strukturfehler " & ziel_tag & ": Start- ohne Stopmarkierung"
           End If
           Exit Sub
        End If
        If Right(ziel_tag, 5) = "_stop" And Left(ziel_tag, Len(ziel_tag) - 5) & "_start" <> tree(i) Then
           Start_vorhanden = False 'kein Start vorhanden bis Dok.Anfang
        Else: Exit Sub
        End If
     End If
  Next
Else  'die buch_h1 und gesetz_h1 |fffd|berschriften pr|fffd|fen
  For i = Feldumfang - 1 To 0 Step -1
     If buch_h Then vergleichszahl = Val(Right(tree_buch_h(i), 1)) 'Hinweis: Val gibt 0 zur|fffd|ck wenn kein Eintrag oder Eintrag ohne Zahl
     If gesetz_h Then vergleichszahl = Val(Right(tree_gesetz_h(i), 1))
     Differenz = aktuell - vergleichszahl
     If Differenz > 1 Then  '= Fehlerfall
        beck_Fehlermeldung.ListBox1.AddItem "Strukturfehler " & ziel_tag & ": " & ziel_tag & " ohne " & h_typ & aktuell - 1
        Call Error_def
        Exit Sub
     End If
     If Differenz = 0 Or Differenz = 1 Then Exit Sub '= kein Fehler
  Next
End If

If Start_vorhanden = False Then
   Call Error_def
   beck_Fehlermeldung.ListBox1.AddItem "Strukturfehler " & ziel_tag & ": Stop- ohne Startmarkierung"
End If
End Sub

Private Sub set_tree(ByVal element)  'neuen Eintrag hinzuf|fffd|gen
   
    tree_index = tree_index + 1
    ReDim Preserve tree(tree_index)
    tree(tree_index) = element
   
End Sub

Private Sub set_tree_buch_h(ByVal element)  'buch_h1 |fffd|berschriften bekommen eigenen tree
   
    tree_index_buch = tree_index_buch + 1
    ReDim Preserve tree_buch_h(tree_index_buch)
    tree_buch_h(tree_index_buch) = element
   
End Sub

Private Sub set_tree_gesetz_h(ByVal element)  'gesetz_h1 |fffd|berschriften bekommen eigenen tree
   
    tree_index_gesetz = tree_index_gesetz + 1
    ReDim Preserve tree_gesetz_h(tree_index_gesetz)
    tree_gesetz_h(tree_index_gesetz) = element
   
End Sub

Sub Leerstellen_suchen() 'im Text. CB Mai 2010. Zuerst muss Del_Leerstellen ausgef|fffd|hrt werden
Dim Fn As Footnote
Dim L|fffd|nge

For Each Fn In ActiveDocument.Footnotes
        StatusBar = "Untersuche im Haupttext Fu|fffd|notenziffer " & Fn.Index
        Fn.Reference.Select
        Selection.style = wdStyleFootnoteReference  'Fu|fffd|notenzeichen
        
        L|fffd|nge = Len(Selection.Text)
        
        Selection.MoveLeft Unit:=wdCharacter, Count:=2, Extend:=False
        Selection.MoveRight Unit:=wdCharacter, Count:=1, Extend:=True
        If Selection.Text = " " Or Selection = Chr(160) Then  'Leerstelle davor l|fffd|schen
           Selection.Delete
           Leerstellen_korrigiert = True
           Selection.MoveRight Unit:=wdCharacter, Count:=L|fffd|nge, Extend:=False
           Selection.MoveRight Unit:=wdCharacter, Count:=1, Extend:=True
           If Selection.Text = " " Or Selection = Chr(160) Then
              Selection.style = wdStyleDefaultParagraphFont '"Absatz-Standardschriftart". Leerstelle danach Standard
           End If
           Else
           Selection.MoveRight Unit:=wdCharacter, Count:=L|fffd|nge + 1, Extend:=False
           Selection.MoveRight Unit:=wdCharacter, Count:=1, Extend:=True
           If Selection.Text = " " Or Selection = Chr(160) Then
              Selection.style = wdStyleDefaultParagraphFont 'Leerstelle danach Standard
              Leerstellen_korrigiert = True
           End If
        End If
        ActiveDocument.UndoClear 'verhindert Speicher|fffd|berlauf
Next Fn

End Sub

Sub Leerstellen_Fn_suchen() 'in den Noten. Hier mit Suche, da sich Fu|fffd|notenziffer nicht direkt ansprechen l|fffd|sst. CB Mai 2010. Zuerst muss Del_Leerstellen ausgef|fffd|hrt werden
Dim f, L|fffd|nge

Selection.GoTo What:=wdGoToFootnote, Which:=wdGoToAbsolute, Count:=1
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting

For f = 1 To ActiveDocument.Footnotes.Count
    StatusBar = "Untersuche Fu|fffd|note " & f
    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = "^f"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = True
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
    If Selection.Find.Found And Len(ActiveDocument.Footnotes(f).Range) <> 0 Then 'nur wenn Fn. auch Text enth|fffd|lt
       L|fffd|nge = Len(Selection.Text)
       Selection.style = wdStyleFootnoteReference
       'Leerzeichen vor Fn entfernen
       Selection.HomeKey Unit:=wdLine
       Selection.MoveRight Count:=1, Unit:=wdCharacter, Extend:=wdExtend
       If Left(Selection.Text, 1) = " " Or Selection = Chr(160) Then
          Leerstellen_korrigiert = True
          Selection.Delete
          Selection.MoveRight Count:=L|fffd|nge, Unit:=wdCharacter
          Selection.MoveRight Count:=1, Unit:=wdCharacter, Extend:=wdExtend
          If Selection = " " Or Selection = Chr(160) Then
              Selection.Delete Unit:=wdCharacter, Count:=1
              If Len(ActiveDocument.Footnotes(f).Range) > 0 Then Selection.TypeText Text:=Chr(160) 'Gesch. Leerzeichen, wenn Fn.-Text vorhanden
              Selection.style = wdStyleDefaultParagraphFont
              Leerstellen_korrigiert = True
              Else:
              Selection.MoveLeft Count:=1, Unit:=wdCharacter
              If Len(ActiveDocument.Footnotes(f).Range) > 0 Then Selection.TypeText Text:=Chr(160) 'Gesch. Leerzeichen
              Leerstellen_korrigiert = True
          End If
          Else
          Selection.HomeKey Unit:=wdLine
          Selection.MoveRight Count:=L|fffd|nge, Unit:=wdCharacter, Extend:=False
          Selection.MoveRight Count:=1, Unit:=wdCharacter, Extend:=wdExtend
          If Selection = " " Or Selection = Chr(160) Then
              Selection.Delete Unit:=wdCharacter, Count:=1
              If Len(ActiveDocument.Footnotes(f).Range) > 0 Then Selection.TypeText Text:=Chr(160) 'Gesch. Leerzeichen
              Selection.style = wdStyleDefaultParagraphFont
              Leerstellen_korrigiert = True
              Else:
              Selection.MoveLeft Count:=1, Unit:=wdCharacter
              If Len(ActiveDocument.Footnotes(f).Range) > 0 Then Selection.TypeText Text:=Chr(160) 'Gesch. Leerzeichen
              Leerstellen_korrigiert = True
          End If
       End If
    End If
    Selection.EndKey Unit:=wdLine
    ActiveDocument.UndoClear 'verhindert Speicher|fffd|berlauf
Next f

End Sub

Sub Del_Leerstellen()   'Leerstellen entfernen (|fffd|berz|fffd|hlige und vor und nach Fn-Ziffern falsch gesetzte. CB Mai 2010

On Error GoTo Fehler

Application.ScreenUpdating = False
Call SucheErsetze(" {2;}", " ", True)  '|fffd|berz|fffd|hlige Leerzeichen entfernen
Call SucheErsetze("^s{2;}", "^s", True)  '|fffd|berz|fffd|hlige gesch. Leerzeichen entfernen

Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""

If ActiveDocument.Footnotes.Count = 0 Then GoTo Ende

'Im Text:
ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
Call Leerstellen_suchen

'In den Noten:
'ActiveWindow.View.Type = wdPageView
'ActiveWindow.View.SeekView = wdSeekFootnotes
ActiveWindow.View.SplitSpecial = wdPaneFootnotes

Selection.GoTo What:=wdGoToFootnote, _
Which:=wdGoToAbsolute, Count:=1
Call Leerstellen_Fn_suchen

Ende:
ActiveWindow.View.Type = wdNormalView
Application.ScreenUpdating = True
Exit Sub

Fehler:
Call Fehler

End Sub

Sub Del_Links() 'CB Mai 2010
    
Dim Hyperlinks, Hyperlinks_temp, h

If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
FocusAnDocument
Selection.WholeStory

Hyperlinks = Selection.Hyperlinks.Count
For h = 1 To Hyperlinks
  Selection.Hyperlinks(1).Delete
  ActiveDocument.UndoClear 'verhindert Speicher|fffd|berlauf
Next h
Hyperlinks_temp = Hyperlinks
    
If ActiveDocument.Footnotes.Count > 0 Then
  ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  Selection.WholeStory
  Hyperlinks = Selection.Hyperlinks.Count
  For h = 1 To Hyperlinks
     Selection.Hyperlinks(1).Delete
     ActiveDocument.UndoClear 'verhindert Speicher|fffd|berlauf
  Next h
End If
Anzahl_Hyperlinks = Hyperlinks_temp + Hyperlinks

End Sub

Sub Del_Bookmarks()  'CB Mai 2010, Dez. 2010
Dim b As Integer, Anzahl_Bookmarks_temp

Anzahl_Bookmarks = ActiveDocument.Bookmarks.Count
Anzahl_Bookmarks_temp = Anzahl_Bookmarks

If Anzahl_Bookmarks = 0 Then Exit Sub
For b = 1 To Anzahl_Bookmarks_temp
   If b <= Anzahl_Bookmarks_temp Then
     If Left(ActiveDocument.Bookmarks(b).name, 7) = "Fehler_" Or beck_tool.Visible Then
        ActiveDocument.Bookmarks(b).Delete
        b = b - 1
        Anzahl_Bookmarks_temp = Anzahl_Bookmarks_temp - 1
     End If
   End If
   ActiveDocument.UndoClear  'verhindert Speicher|fffd|berlauf
Next

End Sub

Public Function beck_format_pruefung() 'Pr|fffd|fung auf unzul|fffd|ssige Zeichenformate. Korrekturen CB April 2012
    
    Dim pos
    Dim LZ
    Dim style_count
    Dim j, format_error
    
    With beck_tool
       .Width = 425.25
       .Label1 = "Verarbeitung l|fffd|uft ..."
       .Repaint
    End With
    
    Ueberarbeitungsmodus_aus
    ActiveWindow.View.Type = wdNormalView
    StatusBar = "Template-Check: Verarbeitung l|fffd|uft ..."
   
    beck_tool.Label1 = "Feldinhalte in Text umwandeln ..."
    beck_tool.Repaint
    'Felder werden bereits bei Aufruf dieser Function (Klick auf Button Formatpr|fffd|fung) gel|fffd|scht
   
    beck_tool.Label1 = "Textmarken l|fffd|schen ..."
    beck_tool.Repaint
    'Bookmarks werden bereits bei Unload der Fehlerliste (Klick auf Button Formatpr|fffd|fung) gel|fffd|scht
    
    beck_tool.Label1 = "Hyperlinks l|fffd|schen ..."
    beck_tool.Repaint
    Del_Links
    
    Leerstellen_korrigiert = False
    beck_tool.Label1 = "Leerstellen/Fu|fffd|noten korrigieren ..."
    beck_tool.Repaint
    Del_Leerstellen
        
    error_count = 0
    format_error = 0
    
    If Leerstellen_korrigiert = True Then LZ = "Leerstellen/Fn. korrigiert." Else LZ = "0 Leerstellen/Fn. korrigiert."
    style_count = ActiveDocument.Styles.Count
    Absatz_pruefen = False
    
    If ActiveWindow.View.SplitSpecial = 7 And ActiveDocument.Footnotes.Count > 0 Then
        ActiveWindow.Panes(2).Close
    End If
    Selection.HomeKey Unit:=wdStory
    
    beck_tool.Label1 = "Zeichenformate pr|fffd|fen ..."
    beck_tool.Repaint
    Application.ScreenUpdating = False
    
    For j = 1 To style_count
        StatusBar = "Template-Check: Formate " & j & " von " & style_count
        If ActiveDocument.Styles(j).Type = 2 And ActiveDocument.Styles(j) <> ActiveDocument.Styles(wdStyleDefaultParagraphFont) Then
            If Verkn_anzeigen = False Then
               If Right(ActiveDocument.Styles(j), 4) = "Zchn" Or Right(ActiveDocument.Styles(j), 4) = "Char" Then GoTo next_style
            End If
            
            If Left(ActiveDocument.Styles(j), 1) = " " Then
                GoTo next_style
            End If
            Selection.HomeKey Unit:=wdStory
            Selection.Find.ClearFormatting
            
            On Error GoTo next_style 'Manche zerschossene Formate k|fffd|nnen Fehler in der folgenden Zeile ausl|fffd|sen
            Selection.Find.style = ActiveDocument.Styles(j)
            On Error GoTo 0
            With Selection.Find
                .Text = ""
                .Replacement.Text = ""
                .Forward = True
                .Wrap = wdFindContinue
                .Format = True
                .MatchCase = False
                .MatchWholeWord = False
                .MatchWildcards = False
                .MatchSoundsLike = False
                .MatchAllWordForms = False
            End With
            While Selection.Find.Execute
            If Selection.Start = Selection.End Then GoTo next_style 'CB: Absicherung bei zerschossenem Zeichenformat, sonst Endlosschleife
            If Len(Selection.Text) > 0 Then
                
                If Selection.Text = ChrW(2) And Selection.style = ActiveDocument.Styles(wdStyleFootnoteReference) Then
                    Selection.Move Unit:=wdCharacter, Count:=1 'CB erg|fffd|nzt
                Else
                    beck_Fehlermeldung.ListBox1.AddItem (ActiveDocument.Styles(j))
                    Error_def
                    
                    If error_count = 255 Then GoTo beck_paragraphs_error
                End If
            End If
            If ActiveDocument.Range.End > Selection.Range.End Then Selection.Collapse Direction:=wdCollapseEnd 'so lange Dok.-Ende nicht erreicht
            Wend
        End If
next_style:
    If Err.Number <> 0 Then format_error = j
    ActiveDocument.UndoClear  'verhindert Speicher|fffd|berlauf
    Next j
da:
    'Fu|fffd|noten
    If ActiveDocument.Footnotes.Count > 0 Then
        If ActiveWindow.ActivePane.View.Type = wdPrintView Or ActiveWindow. _
            ActivePane.View.Type = wdWebView Or ActiveWindow.ActivePane.View.Type = _
            wdPrintPreview Then
            ActiveWindow.View.SeekView = wdSeekFootnotes
        Else
            ActiveWindow.View.SplitSpecial = wdPaneFootnotes
        End If
    
        For j = 1 To style_count
            StatusBar = "Template-Check: Formate " & j & " von " & style_count
            If j = format_error Then GoTo next_style2  'dieses Format auch in den Fn. nicht pr|fffd|fen
            If ActiveDocument.Styles(j).Type = 2 And ActiveDocument.Styles(j) <> ActiveDocument.Styles(wdStyleDefaultParagraphFont) Then
                
                If Verkn_anzeigen = False Then
                   If Right(ActiveDocument.Styles(j), 4) = "Zchn" Or Right(ActiveDocument.Styles(j), 4) = "Char" Then GoTo next_style2
                End If
                
                If Left(ActiveDocument.Styles(j), 1) = " " Then
                    GoTo next_style2
                End If
                Selection.HomeKey Unit:=wdStory
                Selection.Find.ClearFormatting
                Selection.Find.style = ActiveDocument.Styles(j)
                With Selection.Find
                    .Text = ""
                    .Replacement.Text = ""
                    .Forward = True
                    .Wrap = wdFindContinue
                    .Format = True
                    .MatchCase = False
                    .MatchWholeWord = False
                    .MatchWildcards = False
                    .MatchSoundsLike = False
                    .MatchAllWordForms = False
                End With
                While Selection.Find.Execute
                If Selection.Start = Selection.End Then GoTo next_style2 'CB: Absicherung bei zerschossenem Zeichformat, sonst Endlosschleife
                If Len(Selection.Text) > 0 Then ' And Selection.style = ActiveDocument.Styles(j) Then
                    If Selection.Text = ChrW(2) And Selection.style = ActiveDocument.Styles(wdStyleFootnoteReference) Then
                        Selection.Move Unit:=wdCharacter, Count:=1 'CB erg|fffd|nzt
                    Else
                        beck_Fehlermeldung.ListBox1.AddItem (ActiveDocument.Styles(j))
                        Error_def
                        pos = Selection.End
                        If error_count = 255 Then GoTo beck_paragraphs_error
                        If Selection.End < pos Then GoTo next_style2 'wenn Ende der Noten erreicht
                    End If
                End If
                Selection.Collapse Direction:=wdCollapseEnd
                Wend
            End If
next_style2:
        Selection.Collapse Direction:=wdCollapseEnd
        ActiveDocument.UndoClear  'verhindert Speicher|fffd|berlauf
        Next j
    End If
    
beck_paragraphs_error:
    If ActiveWindow.View.SplitSpecial = 7 Then
        ActiveWindow.Panes(2).Close
    End If
    If beck_Fehlermeldung.ListBox1.ListCount > 0 Then
        error = 1
        Load beck_Fehlermeldung
        If beck_Fehlermeldung.ListBox1.ListCount = 255 Then
           beck_Fehlermeldung.Height = 308
           beck_Fehlermeldung.Label2.caption = "Die Liste enth|fffd|lt 255 Eintr|fffd|ge. Weitere m|fffd|gliche Fehler werden erst angezeigt, wenn Sie die aufgelisteten Fehler bearbeiten und die Pr|fffd|fenfunktion neu ausf|fffd|hren."
           Else
           beck_Fehlermeldung.Height = 254
           beck_Fehlermeldung.Label2.caption = ""
           End If
        beck_Fehlermeldung.CommandButton2.Visible = True
        beck_Fehlermeldung.CommandButton3.Visible = True
        beck_Fehlermeldung.CommandButton4.Visible = True
        beck_Fehlermeldung.CommandButton5.Visible = True
        beck_Fehlermeldung.CommandButton6.Visible = True
        beck_Fehlermeldung.Show
    End If
    Application.ScreenUpdating = True
    Ueberarbeitungsmodus_ein
    StatusBar = error_count & " Formatfehler gefunden! " & Anzahl_Hyperlinks & " Hyperlinks entfernt." & Chr(13) & Anzahl_Bookmarks & " Lesezeichen entfernt. " & LZ
    beck_tool.Label1 = error_count & " Formatfehler gefunden! " & Anzahl_Hyperlinks & " Hyperlinks entfernt." & Chr(13) & Anzahl_Bookmarks & " Lesezeichen entfernt. " & LZ
    beck_tool.Repaint
End Function

Public Sub beck_pruefen()

    If ActiveDocument.Endnotes.Count > 0 Then
       MsgBox "ACHTUNG: Die Pr|fffd|fung des Dokumentes kann aus folgendem Grund nicht erfolgen:" & Chr(13) & "Ihr Dokument enth|fffd|lt Endnoten. Bitte wandeln Sie diese In Fu|fffd|noten um. Verwenden Sie dazu die Funktion |fffd|Endnoten konvertieren|fffd| im Bereich |fffd|Sonstiges|fffd| des Beck-Template.", vbOKOnly, "Hinweis"
       Exit Sub
    End If
    
   If UCase(ActiveDocument.BuiltInDocumentProperties(4)) = "LOSEBLATT-KOMMENTAR" Then
      Loseblatt_Kommentar = True  'Loseblatt ohne Strukturpr|fffd|fung
      Else
      Loseblatt_Kommentar = False
    End If

    error = 0
    
    With beck_form
       .Height = 320.25
       .Label1.caption = "Pr|fffd|fung l|fffd|uft. Bitte warten ..."
       .Repaint
    End With

    If ActiveWindow.View.SplitSpecial = wdPaneRevisions Then
        ActiveWindow.Panes(2).Close
    End If

    If ActiveWindow.View.SplitSpecial = 7 Then  'Fu|fffd|notenfenster
        ActiveWindow.Panes(2).Close
    End If
    
    Call beck_paragraphs
    
    With beck_form
       .Height = 300.75
       .Label1.caption = ""
       .Repaint
    End With
    
    If error <> 0 Then
       FocusAnDocument
       Call Hinweis
    End If
    If error = 0 Then
       If ActiveDocument.Paragraphs(1).Range.Text = "!!! Wichtiger Hinweis !!!" & Chr(13) Then ActiveDocument.Tables(1).Delete 'Hinweis l|fffd|schen
       MsgBox "Keine Fehler!", vbOKOnly, "Beck-Template-Check"
       If beck_tool.Visible = False Then beck_form.CommandButton3.Enabled = True
       FocusAnDocument
    End If
    
    'Workaround f|fffd|r Word 2007, da Ribbon evtl. nicht mehr ansprechbar
    Application.ScreenUpdating = False
    Application.ScreenUpdating = True

End Sub

Private Sub Hinweis()

On Error Resume Next
If Aenderungen_verfolgen Then ActiveDocument.TrackRevisions = False
ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Selection.HomeKey Unit:=wdStory
FocusAnDocument

If ActiveDocument.Paragraphs(1).Range.Text = "!!! Wichtiger Hinweis !!!" & Chr(13) Then ActiveDocument.Tables(1).Delete

If ActiveDocument.Paragraphs(1).Range.Information(wdWithInTable) = True Then Selection.SplitTable
ActiveDocument.Tables.Add Range:=Selection.Range, NumRows:=1, NumColumns:= _
        1, DefaultTableBehavior:=wdWord9TableBehavior, AutoFitBehavior:= _
        wdAutoFitFixed
Selection.Tables(1).Borders.OutsideColor = wdColorRed
Selection.TypeText Text:="!!! Wichtiger Hinweis !!!" & Chr(13)
Selection.TypeText Text:="Ihr Dokument enth|fffd|lt noch Strukturfehler oder ung|fffd|ltige Formatierungen. "
Selection.TypeText Text:="Um genauere Informationen zu erhalten, f|fffd|hren Sie die |fffd|Pr|fffd|fen-Funktion|fffd| aus, die Sie im Fenster |fffd|Beck-Template|fffd| |fffd| |fffd|Pr|fffd|fen|fffd| aufrufen k|fffd|nnen. " & Chr(13)
Selection.TypeText Text:="Enth|fffd|lt Ihr Dokument Strukturfehler (etwa Fehlen von Gliederungsebenen, Verwendung falscher Gliederungsebenen), k|fffd|nnte eventuell eine redaktionelle |fffd|berarbeitung sinnvoll sein. "
Selection.TypeText Text:="Durch eine fehlerfreie Gliederungsstruktur k|fffd|nnen Zeit und Kosten beim automatisierten Satz gespart werden. " & Chr(13)
Selection.TypeText Text:=Format(Date, "Long Date") & ", " & Format(Time, "Long time")
Selection.Tables(1).Range.Select
Selection.style = "p"
Selection.Font.name = "Times New Roman"
Selection.Font.Color = wdColorAutomatic
Selection.HomeKey Unit:=wdStory
If Aenderungen_verfolgen Then ActiveDocument.TrackRevisions = True
End Sub

Sub IniWrite(VerknFormat, Felder)
Dim fs, f
Dim strVerzeichnis As String

strVerzeichnis = Environ("HOMEDRIVE") & Environ("HOMEPATH")
On Error Resume Next
Set fs = CreateObject("Scripting.FileSystemObject")
'If Not fs.DriveExists("c:\") Then Exit Sub
If Not fs.FolderExists(strVerzeichnis & "\Beck Word Template\") Then fs.CreateFolder (strVerzeichnis & "\Beck Word Template\")
fs.FileExists (strVerzeichnis & "\Beck Word Template\config.ini")
Set f = fs.CreateTextFile(strVerzeichnis & "\Beck Word Template\config.ini", True)
f.WriteLine (VerknFormat)
f.WriteLine (Felder)
f.WriteLine ("Konfigurationsdatei f|fffd|r Beck'sche XML-Autosatz-Dokumentvorlage")
f.Close
End Sub

Sub IniRead()
Const ForReading = 1, ForWriting = 2, ForAppending = 3
Dim fs, f
Dim strVerzeichnis As String

strVerzeichnis = Environ("HOMEDRIVE") & Environ("HOMEPATH")
On Error Resume Next
Set fs = CreateObject("Scripting.FileSystemObject")
If fs.FileExists(strVerzeichnis & "\Beck Word Template\config.ini") Then
   Set f = fs.OpenTextFile(strVerzeichnis & "\Beck Word Template\config.ini", ForReading)
Else
   Verkn_anzeigen = True
   Fields_inText = True
   Exit Sub
End If

If f.readline = "True" Then Verkn_anzeigen = True Else Verkn_anzeigen = False
If f.readline = "True" Then Fields_inText = True Else Fields_inText = False

f.Close

End Sub

Sub Reihen_festlegen()
Dim Reihe, ArrayMaxIndex, Pfad, Dateiname, a, Antwort
Dim Dateiname_alt, iOffset, sExtension, sFilename

If Version = "" Then
   MsgBox ("Es ist keine Versionsinformation abrufbar. Bitte schlie|fffd|en Sie das Dokument und versuchen Sie es erneut.")
   Exit Sub
End If

On Error GoTo Fehler
Pfad = ActiveDocument.Path & "\"
Dateiname_alt = ActiveDocument.name

For iOffset = Len(Dateiname_alt) To 1 Step -1 'Dateinamen zerlegen
   If Mid(Dateiname_alt, iOffset, 1) = "." Then
   'Letzten Punkt gefunden
      sExtension = Mid(Dateiname_alt, iOffset + 1)
      sFilename = Left(Dateiname_alt, iOffset - 1)
      Exit For
   End If
Next

Antwort = MsgBox("Reihenbezogene Dokumentvorlagen werden aus dem aktuellen Dokument erzeugt und im Verzeichnis |fffd|" & Pfad & "|fffd| gespeichert.", vbOKCancel)
If Antwort = vbCancel Then Exit Sub

Reihe = Array("JUS", "KLB", "GDR", "DTV-RATGEBER", "KOMMENTAR", "LOSEBLATT-KOMMENTAR", "HANDBUCH", "FESTSCHRIFT", "VAHLEN-AI", "VAHLEN-RP", "BECK-RATGEBER", "PDW", "NJW-PRAXIS", "")
ArrayMaxIndex = UBound(Reihe)

For a = 0 To ArrayMaxIndex
   ActiveDocument.BuiltInDocumentProperties(4) = Reihe(a)
   If Reihe(a) <> "" Then
      Dateiname = "Beck_" & Version & "_" & Reihe(a) & "." & sExtension
   Else:
      Dateiname = "Beck_" & Version & "." & sExtension
   End If
   ActiveDocument.SaveAs FileName:=Pfad & Dateiname, FileFormat:=wdFormatDocument
Next

MsgBox ("Die Dateien wurden erfolgreich gespeichert.")
Exit Sub

Fehler:
MsgBox ("Beim Speichern ist ein Fehler aufgetreten. Bitte pr|fffd|fen Sie Pfad bzw. Netzwerkverbindung und sorgen Sie f|fffd|r gen|fffd|gend Speicherplatz.")
End Sub

Sub Men|fffd|anpassungen()
Dim Reihe
Dim i

If Men|fffd|_angepasst = True Then Exit Sub

'Eintrag aus Dateieigenschaften-Feld "Stichw|fffd|rter" lesen
Reihe = UCase(ActiveDocument.BuiltInDocumentProperties(4))

'L|fffd|schen von Eintr|fffd|gen, bei reihenbedingten Anpassungen. 0 = Erster Listeneintrag
If Reihe = "JUS" Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 2 'einzelnes Element in der Liste l|fffd|schen
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 10
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 12
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.RemoveItem 13
   Next i
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 7
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 11
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False 'ganze Schaltfl|fffd|che ausblenden
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   For i = 1 To 9
      beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 1
   Next i
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 49
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
End If

If Reihe = "KLB" Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 2
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 13
   Next i
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 7
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 11
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   For i = 1 To 9
      beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 1
   Next i
   For i = 1 To 5
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 44
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 46
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
End If

If Reihe = "GDR" Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 2
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 10
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 12
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.RemoveItem 13
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 4
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 6
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 10
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   For i = 1 To 9
      beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 1
   Next i
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 49
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
End If

If Reihe = "DTV-RATGEBER" Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 1
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 1
   For i = 1 To 13
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 6
   Next i
   For i = 1 To 8
      beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.RemoveItem 7
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.RemoveItem 4
   Next i
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.RemoveItem 6
   Next i
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 1
   Next i
   For i = 1 To 5
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 5
   Next i
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   beck_form.MultiPage1.Pages("Page_Anhang").Visible = False
   For i = 1 To 5
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 19
   Next i
   For i = 1 To 5
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 29
   Next i
   For i = 1 To 5
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 34
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
End If

If Reihe = "KOMMENTAR" Or Reihe = "LOSEBLATT-KOMMENTAR" Then
   For i = 1 To 5
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 1
   Next i
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 2
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 6
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 49
   Next i
End If

If Reihe = "HANDBUCH" Then
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 14
   Next i
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   For i = 1 To 3
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 2
   Next i
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 4
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 8
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 49
   Next i
End If

If Reihe = "FESTSCHRIFT" Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   beck_form.MultiPage1.Pages("Page_Anhang").Visible = False
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 1
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 1
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 12
   Next i
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.RemoveItem 10
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.RemoveItem 10
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 2
   Next i
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 3
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 7
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 49
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
End If

If Reihe = "VAHLEN-AI" Or Reihe = "VAHLEN-RP" Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 2
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 9
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 9
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 11
   Next i
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.RemoveItem 11
   Next i
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 9
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 14
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   For i = 1 To 9
      beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 1
   Next i
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 49
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
End If

If Reihe = "BECK-RATGEBER" Then
   beck_form.CommandButton1.Enabled = False
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 1
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 1
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 6
   Next i
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 8
   Next i
   For i = 1 To 8
      beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.RemoveItem 7
   Next i
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 1
   For i = 1 To 6
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 4
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 6
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 10
   beck_form.MultiPage1.Pages("Page_Anhang").Visible = False
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 49
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 4
   Next i
End If

If Reihe = "PDW" Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 1
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 1
   For i = 1 To 3
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 7
   Next i
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 9
   Next i
   For i = 1 To 6
      beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.RemoveItem 9
   Next i
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   For i = 1 To 3
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 3
   Next i
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 4
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 8
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   For i = 1 To 9
      beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 1
   Next i
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 49
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
End If

If Reihe = "NJW-PRAXIS" Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 2 'einzelnes Element in der Liste l|fffd|schen
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 10
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 12
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.RemoveItem 13
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 2
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 3
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 5
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 6
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 10
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False 'ganze Schaltfl|fffd|che ausblenden
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   For i = 1 To 9
      beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 1
   Next i
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 49
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
End If

Men|fffd|_angepasst = True 'verhindern, dass mehrfach Eintr|fffd|ge per Indexnummer gel|fffd|scht werden

End Sub
Sub Start()

Version = "1.44a"

If beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.ListCount <= 0 Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("schmutztitel_autor")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("schmutztitel_titel")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("titelei_titel")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("titelei_untertitel")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("titelei_buchtyp")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("titelei_autor")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("titelei_p")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("titelei_verlag")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("impressum_online")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("impressum_isbn")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("impressum_p")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("vorwort_titel")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("vorwort_p")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("vorwort_autor")
End If

If beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.ListCount <= 0 Then
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("p")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("randziffer")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("artikel_titel")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("h1")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("h2")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("h3")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("h4")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("h5")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("h6")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("h7")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("h8")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("h9")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("literatur_titel")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("literatur_p")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("--- Buchaufbau: ---")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("buch_h1")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("buch_h2")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("buch_h3")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("buch_h4")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("buch_h5")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("buch_h6")
End If

If beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.ListCount <= 0 Then
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("abbildungsverz_titel")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("abbildungsverz_p")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("abkverz_titel")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("abkverz_p")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("autorverz_titel")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("autorverz_p")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("litverz_titel")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("litverz_p")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("litabk_titel")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("litabk_p")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("tabverz_titel")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("tabverz_p")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("verz_untertitel")
End If

'Urspr. vorgesehen. Wird nicht mehr gebraucht:
If beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.ListCount <= 0 Then
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h1(Typo_h2)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h1(Typo_h3)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h2(Typo_h3)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h2(Typo_h4)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h3(Typo_h4)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h3(Typo_h5)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h4(Typo_h5)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h4(Typo_h6)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h5(Typo_h6)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h5(Typo_h7)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h6(Typo_h7)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h6(Typo_h8)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h7(Typo_h8)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h7(Typo_h9)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h8(Typo_h9)")
   If Tool_Login Then
      beck_form.MultiPage1.Pages("Page_Typografie").Visible = True  'Typoattributeliste f|fffd|r Hersteller einschalten
   Else
      beck_form.MultiPage1.Pages("Page_Typografie").Visible = False 'ganze Schaltfl|fffd|che ausblenden, da nicht f|fffd|r Autoren und Lektoren relevant
   End If
End If

If beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.ListCount <= 0 Then
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_titel")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_fassung")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_aenderung")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_h1")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_h2")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_h3")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_h4")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_h5")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_h6")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_p")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("paratitel")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("paratext")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("vorspann")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("-----------------------------")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("Blickfang-Titel")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("Normtext/Gesetz")
End If

If beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.ListCount <= 0 Then
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("buch_anhang")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("para_anhang")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("anhang_titel")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("h1")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("h2")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("h3")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("h4")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("h5")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("paratitel")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("paratext")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("p")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("randziffer")
End If

Load beck_form
Call Men|fffd|anpassungen  'Erg|fffd|nzung CB Nov. 2009
beck_form.Show

beck_form.Left = Application.Width - beck_form.Width + Application.Left - 30 'rechts ausrichten
'8 = Word 97. 9 = Word 2000. 10 = Word 2002. 11 = Word 2003. 12 = Word 2007. 14 = Word 2010
If Val(Application.Version) > 11 Then
   beck_form.Top = 0 + Application.Top + 140
Else
   beck_form.Top = 0 + Application.Top + 100
End If

FocusAnDocument

End Sub
Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Private Sub Document_Close() 'Sub Erg|fffd|nzung CB Nov. 2009. CB Sept. 2010
Dim addinLoop As AddIn
Dim Antwort As Integer

If Absaetze_geprueft = False And ActiveDocument.ComputeStatistics(wdStatisticCharactersWithSpaces, True) > 0 Then
   Antwort = MsgBox("Das Dokument wurde in dieser Sitzung noch nicht auf Strukturfehler oder" & Chr(13) & "ung|fffd|ltige Absatzformate gepr|fffd|ft (Pr|fffd|fen-Button im Fenster Beck-Template)." & Chr(13) & Chr(13) & "Wollen Sie das Dokument trotzdem schlie|fffd|en?", vbYesNo + vbExclamation, "Hinweis")
   If Antwort = vbNo Then
        ActiveDocument.Saved = False
        SendKeys "{ESC}"   'Abfrage auf Speicherung abbrechen
   End If
End If

On Error Resume Next

'Unload beck_form

For Each addinLoop In AddIns
    If addinLoop.name = "PDFMaker.dot" Then
       If AddIns("PDFMaker.dot").Installed = False Then AddIns("PDFMaker.dot").Installed = True
    End If
Next addinLoop

End Sub

Private Sub Document_Open() 'Sub Erg|fffd|nzung CB Nov. 2009, Mai 2010
Dim addinLoop As AddIn
Dim Datum

'Starteinstellungen
    
On Error Resume Next 'Falls eine der unten zugewiesenen Optionen in einer zuk|fffd|nftigen Word-Version
                     'nicht mehr zur Verf|fffd|gung steht, dann ohne Fehlermeldung weiter im Programm

If Mac Then
   MsgBox ("Die in diesem Dokument enthaltenen Makros funktionieren nur unter Windows!")
   Exit Sub
End If

'Stand Okt. 2010: Die Dokumentvorlage funktioniert ab Word 2003 und h|fffd|her, da diese Versionen umfangreich getestet ist.
'8 = Word 97. 9 = Word 2000. 10 = Word 2002. 11 = Word 2003. 12 = Word 2007. 14 = Word 2010
If Val(Application.Version) < 11 Then
   MsgBox ("Ihre Word-Version wird leider nicht unterst|fffd|tzt! Mindestanforderung ist Word 2003 oder h|fffd|her. Bitte wenden Sie sich an den Verlag.")
End If

Weiter:

For Each addinLoop In AddIns
    If addinLoop.name = "PDFMaker.dot" Then
       If AddIns("PDFMaker.dot").Installed = True Then
          AddIns("PDFMaker.dot").Installed = False
          MsgBox ("Sie verwenden Adobe PDFMaker. Dieser wird w|fffd|hrend der Bearbeitung dieser Datei deaktiviert. Erzeugen Sie PDF's bitte |fffd|ber die Drucken-Funktion!")
       End If
    End If
Next addinLoop

ActiveWindow.View.Type = wdNormalView
CommandBars("symbolleiste_beck").Visible = True
Application.DisplayStatusBar = True
ActiveDocument.FormattingShowClear = True
    
'Word 2003 Standardkompatibilit|fffd|t einstellen
With ActiveDocument
        .Compatibility(wdNoTabHangIndent) = False
        .Compatibility(wdNoSpaceRaiseLower) = False
        .Compatibility(wdPrintColBlack) = False
        .Compatibility(wdWrapTrailSpaces) = False
        .Compatibility(wdNoColumnBalance) = False
        .Compatibility(wdConvMailMergeEsc) = False
        .Compatibility(wdSuppressSpBfAfterPgBrk) = False
        .Compatibility(wdSuppressTopSpacing) = False
        .Compatibility(wdOrigWordTableRules) = False
        .Compatibility(wdTransparentMetafiles) = False
        .Compatibility(wdShowBreaksInFrames) = False
        .Compatibility(wdSwapBordersFacingPages) = False
        .Compatibility(wdLeaveBackslashAlone) = True
        .Compatibility(wdExpandShiftReturn) = True
        .Compatibility(wdDontULTrailSpace) = True
        .Compatibility(wdDontBalanceSingleByteDoubleByteWidth) = True
        .Compatibility(wdSuppressTopSpacingMac5) = False
        .Compatibility(wdSpacingInWholePoints) = False
        .Compatibility(wdPrintBodyTextBeforeHeader) = False
        .Compatibility(wdNoLeading) = False
        .Compatibility(wdNoSpaceForUL) = True
        .Compatibility(wdMWSmallCaps) = False
        .Compatibility(wdNoExtraLineSpacing) = False
        .Compatibility(wdTruncateFontHeight) = False
        .Compatibility(wdUsePrinterMetrics) = False
        .Compatibility(wdSubFontBySize) = False
        .Compatibility(wdWW6BorderRules) = False
        .Compatibility(wdExactOnTop) = False
        .Compatibility(wdSuppressBottomSpacing) = False
        .Compatibility(wdWPSpaceWidth) = False
        .Compatibility(wdWPJustification) = False
        .Compatibility(wdLineWrapLikeWord6) = False
        .Compatibility(wdShapeLayoutLikeWW8) = False
        .Compatibility(wdFootnoteLayoutLikeWW8) = False
        .Compatibility(wdDontUseHTMLParagraphAutoSpacing) = False
        .Compatibility(wdDontAdjustLineHeightInTable) = True
        .Compatibility(wdForgetLastTabAlignment) = False
        .Compatibility(wdAutospaceLikeWW7) = False
        .Compatibility(wdAlignTablesRowByRow) = False
        .Compatibility(wdLayoutRawTableWidth) = False
        .Compatibility(wdLayoutTableRowsApart) = False
        .Compatibility(wdUseWord97LineBreakingRules) = False
        .Compatibility(wdDontBreakWrappedTables) = False
        .Compatibility(wdDontSnapTextToGridInTableWithObjects) = False
        .Compatibility(wdSelectFieldWithFirstOrLastCharacter) = False
        .Compatibility(wdApplyBreakingRules) = False
        .Compatibility(wdDontWrapTextWithPunctuation) = False
        .Compatibility(wdDontUseAsianBreakRulesInGrid) = False
        .Compatibility(wdUseWord2002TableStyleRules) = False
        .Compatibility(wdGrowAutofit) = False
End With

With AutoCorrect
        .CorrectInitialCaps = True
        .CorrectSentenceCaps = False
        .CorrectDays = True
        .CorrectCapsLock = True
        .ReplaceText = True
        .ReplaceTextFromSpellingChecker = True
        .CorrectKeyboardSetting = False
        .DisplayAutoCorrectOptions = True
        .CorrectTableCells = True
End With

With Options
        .AutoFormatAsYouTypeApplyHeadings = False
        .AutoFormatAsYouTypeApplyBorders = False
        .AutoFormatAsYouTypeApplyBulletedLists = False
        .AutoFormatAsYouTypeApplyNumberedLists = False
        .AutoFormatAsYouTypeApplyTables = False
        .AutoFormatAsYouTypeReplaceQuotes = True
        .AutoFormatAsYouTypeReplaceSymbols = True
        .AutoFormatAsYouTypeReplaceOrdinals = True
        .AutoFormatAsYouTypeReplaceFractions = False
        .AutoFormatAsYouTypeReplacePlainTextEmphasis = False
        .AutoFormatAsYouTypeReplaceHyperlinks = False
        .AutoFormatAsYouTypeFormatListItemBeginning = False
        .AutoFormatAsYouTypeDefineStyles = False
        .TabIndentKey = False
End With
    
With Options
        .AutoFormatApplyHeadings = False
        .AutoFormatApplyLists = True
        .AutoFormatApplyBulletedLists = False
        .AutoFormatApplyOtherParas = False
        .AutoFormatReplaceQuotes = True
        .AutoFormatReplaceSymbols = True
        .AutoFormatReplaceOrdinals = True
        .AutoFormatReplaceFractions = False
        .AutoFormatReplacePlainTextEmphasis = False
        .AutoFormatReplaceHyperlinks = False
        .AutoFormatPreserveStyles = True
        .AutoFormatPlainTextWordMail = True
End With
    
Application.DisplayStatusBar = True

With ActiveWindow
        .StyleAreaWidth = CentimetersToPoints(2.75)
        With .View
            .ShowPicturePlaceHolders = False
            .ShowBookmarks = False
            .ShowTabs = False
            .ShowSpaces = False
            .ShowParagraphs = False
            .ShowHyphens = False
            .ShowHiddenText = False
            .ShowAll = True
            .ShowDrawings = True
            .ShowObjectAnchors = False
            .ShowHighlight = True
        End With
End With
    
With Options
        .ReplaceSelection = True
        .Overtype = False
        .PictureWrapType = wdWrapMergeInline
        .FormatScanning = True
        .SmartParaSelection = True
End With
    
With ActiveDocument.PageSetup
        .LineNumbering.Active = False
        .Orientation = wdOrientPortrait
        .TopMargin = CentimetersToPoints(2.5)
        .BottomMargin = CentimetersToPoints(2)
        .LeftMargin = CentimetersToPoints(2.5)
        .RightMargin = CentimetersToPoints(2.5)
        .Gutter = CentimetersToPoints(0)
        .HeaderDistance = CentimetersToPoints(1.25)
        .FooterDistance = CentimetersToPoints(1.25)
        .PageWidth = CentimetersToPoints(21)
        .PageHeight = CentimetersToPoints(29.7)
        .FirstPageTray = wdPrinterDefaultBin
        .OtherPagesTray = wdPrinterDefaultBin
        .SectionStart = wdSectionNewPage
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .VerticalAlignment = wdAlignVerticalTop
        .SuppressEndnotes = False
        .MirrorMargins = False
        .TwoPagesOnOne = False
        .BookFoldPrinting = False
        .BookFoldRevPrinting = False
        .BookFoldPrintingSheets = 1
        .GutterPos = wdGutterPosLeft
End With

ActiveDocument.UndoClear

If ProtectedViewWindows.Count > 0 Then
   If Val(Application.Version) > 13 Then Exit Sub  'Falls Word 2010 in gesch|fffd|tzer Ansicht |fffd|ffnet (z.B. Datei per Mail versandt), dann hier beenden. Customproperties sind nicht ansprechbar.
End If

On Error GoTo 0 'ausschalten und neu einschalten:
On Error GoTo add_Toolbox
If ActiveDocument.CustomDocumentProperties("Toolbox").Value = "Ein" Then Call Start

Save_ID:
On Error GoTo 0
On Error GoTo add_ID
Datum = CStr(Date)
ActiveDocument.CustomDocumentProperties("ID").Value = Datum  'Erg|fffd|nzung CB Juli 2010
Exit Sub

add_Toolbox:
    ActiveDocument.CustomDocumentProperties.Add name:="Toolbox", LinkToContent:=False, _
    Type:=msoPropertyTypeString, Value:="Ein"  'Standardwert
    Call Start
    GoTo Save_ID
add_ID:
    ActiveDocument.CustomDocumentProperties.Add name:="ID", LinkToContent:=False, _
    Type:=msoPropertyTypeString, Value:=Datum
End Sub
Attribute VB_Name = "Umdefinierte_Dialoge"
'CB Sept./Dez. 2010. Umdefinierte Makros
'Umdef. Makros d|fffd|rfen nicht private sein, sonst funktionierts nicht

Sub InsertEndnoteNow()
InsertFootnote
End Sub

Sub InsertFootnoteNow()
InsertFootnote
End Sub

Sub InsertFootnote()
MsgBox ("Diese Word-Funktion ist nicht verf|fffd|gbar. Bitte verwenden Sie stattdessen die Funktion |fffd|Fu|fffd|note einf|fffd|gen|fffd| des Beck-Template.")
End Sub

Sub FilePrint()  'Die Umleitung des Druckbefehles funktioniert in Word 2010 (neues Dateimen|fffd|) nicht mehr. Schnelldruck in Schnellzugriffleiste kann aber umdef. werden

Call Pagina_temp
With Dialogs(wdDialogFilePrint)
    If .Display = -1 Then .Execute    '-2 = Schlie|fffd|en. -1 = OK. 0 = Abbrechen. > 0 entsprechene Taste
End With
Call Pagina_del
End Sub

Sub FilePrintDefault()

Call Pagina_del
Call Pagina_temp
Dialogs(wdDialogFilePrint).Execute
Call Pagina_del
End Sub

Private Sub Pagina_temp()

ActiveWindow.View.ShowFieldCodes = False
Selection.Sections(1).Headers(1).Range.Select
Selection.Fields.Add Range:=Selection.Range, Type:=wdFieldEmpty, Text:= _
        "DATE  ", PreserveFormatting:=True
Selection.TypeText Text:=" | "
Selection.Fields.Add Range:=Selection.Range, Type:=wdFieldEmpty, Text:= _
        "STYLEREF  paratitel \l ", PreserveFormatting:=True
Selection.MoveRight Unit:=wdWord, Count:=1, Extend:=wdExtend
If Selection.Text = "Fehler! Kein Text mit angegebener Formatvorlage im Dokument." Then Selection.Text = ""

With Selection.Sections(1).Headers(1).PageNumbers
        .NumberStyle = wdPageNumberStyleArabic
        .HeadingLevelForChapter = 0
        .IncludeChapterNumber = False
        .ChapterPageSeparator = wdSeparatorHyphen
        .RestartNumberingAtSection = False
        .StartingNumber = 1
        .Add PageNumberAlignment:=wdAlignPageNumberRight, FirstPage:=True
End With
End Sub

Private Sub Pagina_del()
Dim Anzahl

Ueberarbeitungsmodus_aus
Anzahl = ActiveDocument.Sections.Count
For i = 1 To Anzahl
With ActiveDocument.Sections(i)
    .Headers(wdHeaderFooterFirstPage).Range.Delete 'wegen "erster Seite anders" diese separat l|fffd|schen
    .Headers(wdHeaderFooterPrimary).Range.Delete
    .Headers(wdHeaderFooterEvenPages).Range.Delete
End With
Next i

ActiveWindow.View.Type = wdNormalView   'Ansicht hin- und herschalten l|fffd|scht verbliebenes Absatzzeichen
ActiveWindow.View.Type = wdPrintView
ActiveWindow.View.Type = wdNormalView
Ueberarbeitungsmodus_ein

End Sub

Sub EditBookmark()
'Umdefinieren der Funktion "Textmarke einf|fffd|gen"
MsgBox ("Diese Word-Funktion ist nicht verf|fffd|gbar. Bitte verwenden Sie stattdessen die Lesezeichenfunktion des Beck-Template.")
End Sub

Sub ViewDocumentMap()
'Umdefinieren der Funktion "Dokumentstruktur anzeigen", so dass Selection erhalten bleibt
'und nicht zum Dokumentanfang springt

On Error Resume Next 'da ActiveWindow.DocumentMapPercentWidth = 20 in word 2010 nicht mehr g|fffd|ltig
If Val(Application.Version) < 14 Then 'Ab Word 2010 (Ver. 14) geht das Anzeigen auch mit Fu|fffd|noten
   If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close 'Fu|fffd|noten m|fffd|ssen geschlossen werden, da Anzeige gleichzeitig mit Struktur nicht m|fffd|glich
End If
Selection.Bookmarks.Add ("Strukt_Pos")
If ActiveWindow.DocumentMap = False Then
   ActiveWindow.DocumentMap = True
   ActiveWindow.DocumentMapPercentWidth = 20
Else: ActiveWindow.DocumentMap = False
End If
ActiveDocument.Bookmarks("Strukt_Pos").Select
ActiveDocument.Bookmarks("Strukt_Pos").Delete
End Sub

Sub FileSaveAs()

Dim f, Filterdoc, Filterdocm As Integer
Dim Endung, Standardendung As String
Dim dlgSaveAs As FileDialog
Dim Antwort

On Error GoTo Fehler
Set dlgSaveAs = Application.FileDialog(FileDialogType:=msoFileDialogSaveAs)
For f = 1 To dlgSaveAs.Filters.Count
    Endung = dlgSaveAs.Filters(f).Extensions
    If Endung = "*.doc" Then Filterdoc = f
    If Endung = "*.docm" Then Filterdocm = f
Next

If Val(Application.Version) > 11 Then Standardendung = Filterdocm Else Standardendung = Filterdoc

Restart:
With dlgSaveAs
    .Title = "Speichern unter"
    .FilterIndex = Standardendung
    .InitialFileName = ActiveDocument.name
    If .Show = -1 Then
       If .FilterIndex = Filterdocm Or .FilterIndex = Filterdoc Then
          .Execute
       Else
          Antwort = MsgBox("Um Makros der Dokumentvorlage nicht zu verlieren, w|fffd|hlen Sie bitte (*.doc) oder (*.docm) aus der Dateitypenliste." & Chr(13) & "Soll das Speichern als Dokument ohne Makros fortgesetzt werden?", vbYesNo)
          If Antwort = vbYes Then .Execute Else GoTo Restart
       End If
    End If
End With
Exit Sub

Fehler:
If Err.Number = "-2147467259" Then
   MsgBox ("Eine Datei kann nicht unter dem selben Namen wie eine bereits ge|fffd|ffnete Datei gespeichert werden. Geben Sie bitte einen anderen Dateinamen ein.")
   Else
   MsgBox ("Beim Speichern der Datei ist ein Fehler aufgetreten. Bitte stellen Sie sicher, dass der Datentr|fffd|ger weder voll noch schreibgesch|fffd|tzt ist und versuchen Sie es erneut.")
End If
GoTo Restart

End Sub
Attribute VB_Name = "Umfang"
Attribute VB_Base = "0{C83F710D-2E80-44A7-9F72-7A87DF44DBB2}{E352C832-0BB3-4F10-A905-04D7DAB6F55B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub OK_Click() 'CB Feb. 2010
Umfang.Hide
End Sub

Private Sub UserForm_Activate()  'CB Feb. 2010
Dim Reihe, Zeichen_Lz_Fn
Dim JUS_Zeichen, KLB_Zeichen, GDR_Zeichen, DTV_Ratgeber_Zeichen, Gelb_Kommentar_Zeichen, Grau_Kommentar_Zeichen As Integer
Dim PDW_Zeichen, BeckRatgeber_Zeichen, Vahlen_RP_Zeichen, Vahlen_AI_Zeichen, Festschrift_Zeichen As Integer

'Alle Zeichenzahlen inkl. Leerzeichen beziehen sich auf die Standardtypo, nicht die erweiterten Varianten
JUS_Zeichen = 3900
KLB_Zeichen = 3100
GDR_Zeichen = 2400
DTV_Ratgeber_Zeichen = 1900
Gelb_Kommentar_Zeichen = 2900
Grau_Kommentar_Zeichen = 3600
PDW_Zeichen = 3000
BeckRatgeber_Zeichen = 2400
Vahlen_RP_Zeichen = 3300
Vahlen_AI_Zeichen = 3100
Festschrift_Zeichen = 3500
NJW_Praxis_Zeichen = 3500

Label0.caption = ""
Label1.caption = "Bitte warten ..."
Umfang.Repaint

Reihe = UCase(ActiveDocument.BuiltInDocumentProperties(4))
Zeichen_Lz_Fn = (ActiveDocument.ComputeStatistics(wdStatisticCharactersWithSpaces, True))
If Zeichen_Lz_Fn = "" Then Zeichen_Lz_Fn = 0

Label0.caption = "Das Dokument enth|fffd|lt: " & Chr(13) & Format(Zeichen_Lz_Fn, "##,##0") & " Zeichen (inkl. Leerzeichen)"
Umfang.caption = "Umfang in Reihe " & Reihe

Select Case Reihe
Case "JUS"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / JUS_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & JUS_Zeichen & " Zeichen/Seite"
Case "KLB"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / KLB_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & KLB_Zeichen & " Zeichen/Seite"
Case "GDR"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / GDR_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & GDR_Zeichen & " Zeichen/Seite"
Case "DTV-RATGEBER"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / DTV_Ratgeber_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & DTV_Ratgeber_Zeichen & " Zeichen/Seite"
Case "KOMMENTAR"
   Umfang.Height = 180
   Label1.Height = 150
   OK.Top = 135
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / Gelb_Kommentar_Zeichen)) & " Buchseiten bei Format 12,8 x 19,4 cm" & _
      Chr(13) & "Basis: " & Gelb_Kommentar_Zeichen & " Zeichen/Seite" & Chr(13) & _
   Chr(13) & "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / Grau_Kommentar_Zeichen)) & " Buchseiten bei Format 16 x 24 cm" & _
      Chr(13) & "Basis: " & Grau_Kommentar_Zeichen & " Zeichen/Seite." & Chr(13) & Chr(13) & "Abweichende Buchformate bitte anfragen."
Case "PDW"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / PDW_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & PDW_Zeichen & " Zeichen/Seite"
Case "BECK-RATGEBER"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / BeckRatgeber_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & BeckRatgeber_Zeichen & " Zeichen/Seite"
Case "VAHLEN-AI"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / Vahlen_AI_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & Vahlen_AI_Zeichen & " Zeichen/Seite"
Case "VAHLEN-RP"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / Vahlen_RP_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & Vahlen_RP_Zeichen & " Zeichen/Seite"
Case "FESTSCHRIFT"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / Festschrift_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & Festschrift_Zeichen & " Zeichen/Seite"
Case "NJW-PRAXIS"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / NJW_Praxis_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & NJW_Praxis_Zeichen & " Zeichen/Seite"
Case Else
   Umfang.caption = "Umfangsberechnung nicht m|fffd|glich"
   Label1.caption = "F|fffd|r diese Buchreihe ist derzeit keine Umfangsberechung m|fffd|glich."
End Select
   
End Sub
Attribute VB_Name = "action"
Option Private Module

Sub cmdWrapper(cmd)   'Absatzformate f|fffd|r Container neu Sept. 2012

    Select Case cmd
        Case "mContBeispiel"
            insertSpecial "b_beispiel_start", "b_beispiel_stop", "Beispiel"
        Case "mContHervorhebung_Emphasis"
            insertSpecial "b_hervorhebung_emphasis_start", "b_hervorhebung_emphasis_stop", "Hervorhebung/Emphasis"
        Case "mContF|fffd|lle_Aufgabe"
            insertSpecial "b_faelle_aufgabe_start", "b_faelle_aufgabe_stop", "F|fffd|lle/Aufgabe"
        Case "mContL|fffd|sung"
            insertSpecial "b_loesung_start", "b_loesung_stop", "L|fffd|sung"
        Case "mContMerke"
            insertSpecial "b_merke_start", "b_merke_stop", "Merke"
        Case "mContSchema"
            insertSpecial "b_schema_start", "b_schema_stop", "Schema"
        Case "mContZitat"
            insertSpecial "b_zitat_start", "b_zitat_stop", "Zitat"
        Case "mContMaterial"
            insertSpecial "b_material_start", "b_material_stop", "Material"
        Case "mContWichtig"
            insertSpecial "b_wichtig_start", "b_wichtig_stop", "Wichtig"
        Case "mContMotto"
            insertSpecial "b_motto_leitgedanke_start", "b_motto_leitgedanke_stop", "Motto/Leitgedanke"
        Case "mContFormel"
            insertSpecial "b_formel_berechnung_start", "b_formel_berechnung_stop", "Formel/Berechnung"
        Case "mContMaterial_Muster"
            insertSpecial "b_material_muster_start", "b_material_muster_stop", "Material/Muster"
        Case "mContCheckliste"
            insertSpecial "b_checkliste_start", "b_checkliste_stop", "Checkliste"
        Case "mContDetail_Exkurs"
            insertSpecial "b_detail_exkurs_start", "b_detail_exkurs_stop", "Detail/Exkurs"
        Case "mContKleindruck"
            insertSpecial "b_kleindruck_start", "b_kleindruck_stop", "Kleindruck"
        Case "mContAnhang1"
            insertSpecial "buch_anhang_start", "buch_anhang_stop", "Buch Anhang"
        Case "mContAnhang2"
            insertSpecial "para_anhang_start", "para_anhang_stop", "Para Anhang"
        Case "mContVorspann"
            insertSpecial "vorspann_start", "vorspann_stop", "Vorspann"
        Case "mContNormtext"
            insertSpecial "b_normtext_gesetz_start", "b_normtext_gesetz_stop", "Normtext/Gesetz"
        Case "mShowVersionInfo"
            versionInfo.Show
        Case "mShowUmfang"
            Umfang.Show     'Erg|fffd|nzt CB Feb. 2010
        Case "mShowStruktur"
            ViewDocumentMap 'Erg|fffd|nzt CB Juni 2010
        Case "mShowFussnoten" 'CB Okt. 2010
            Zeige_Fussnoten
        Case "mKonvEndnoten" 'CB Dez. 2010
            Konvertiere_Endnoten
        Case "mShowPrint" 'CB Feb. 2011
            FilePrint
        Case "mInsPic"
            pics.addPic
        Case "mListnumReset"
            lists.ListNumReset
        Case "mListnumCont"
            lists.ListNumContinue
        Case "Fu|fffd|notentext"
            If Not Selection.Information(wdInFootnoteEndnotePane) Then Exit Sub
            Selection.Range.style = ActiveDocument.Styles(wdStyleFootnoteText) 'Erg|fffd|nzt CB Juni 2010
            Selection.MoveDown Unit:=wdParagraph, Count:=1
        Case "mShowDocInfo" 'CB Sept. 2012
            PaneRevision_close
            Selection.HomeKey Unit:=wdStory
            beck_docinfo.Show
            beck_docinfo.Label2.Visible = False
            beck_docinfo.CommandButton2.Visible = False
        Case "mNone"
            ' do nothing
        Case Else
            Selection.style = ActiveDocument.Styles(cmd)
            Selection.MoveDown Unit:=wdParagraph, Count:=1 'Erg|fffd|nzt CB April 2010
    End Select
    
End Sub

Sub insertSpecial(StartStyle, StopStyle, caption) 'CB. Feb. 2011
    Dim inTabelle, Leerzeile, Ende_erreicht As Boolean
    Dim t, p, TabAbsatz As Integer
    
    inTabelle = False
    Ende_erreicht = False
    
    On Error GoTo Fehler
    Del_Blickfang_Marken 'falls wegen Fehlers welche stehengeblieben
    If Selection.Range.Characters(1).Information(wdWithInTable) Then inTabelle = True  'Beginn oder Ende der Selection darf nicht in Tabelle sein
    If Selection.Range.Characters(Selection.Range.Characters.Count).Information(wdWithInTable) Then inTabelle = True
    If inTabelle = True Or Selection.Range.Information(wdInFootnote) = True Then
       MsgBox ("Blickfang an dieser Stelle nicht m|fffd|glich. Die Markierung muss au|fffd|erhalb einer Tabelle beginnen bzw. enden und darf sich nicht im Fu|fffd|notenbereich befinden.")
       Exit Sub
    End If
    
    'Es wird immer der ganze Absatz als Blickfang formatiert; auch Tabellen m|fffd|glich, wenn diese sich innerhalb eines Absatzes befinden
    TabAbsatz = 0
    If Selection.Characters.Count = 1 Then
       Selection.Collapse Direction:=wdCollapseStart
       Selection.MoveRight Unit:=wdCharacter, Count:=1, Extend:=wdExtend
    End If
    
    If Selection.Tables.Count > 0 Then
       For t = 1 To Selection.Tables.Count
          TabAbsatz = TabAbsatz + Selection.Tables(t).Rows.Count * (Selection.Tables(t).Columns.Count)
       Next
    End If
    For p = 1 To Selection.Paragraphs.Count - TabAbsatz
       If p = 1 Then Selection.Paragraphs(1).Range.Select
       If p > 1 Then Selection.MoveDown Unit:=wdParagraph, Count:=1, Extend:=wdExtend
    Next
    'Jetzt ist jeder Absatz komplett selektiert
    
    If Selection.Bookmarks.Exists("\EndOfDoc") And Len(Selection.Text) = 1 Then GoTo Fehler
    If Selection.Bookmarks.Exists("\EndOfDoc") Then Ende_erreicht = True
    
    ActiveDocument.Bookmarks.Add name:="Container_Marke", Range:=Selection.Range
    Selection.Collapse
    Selection.InsertBefore Chr(13)
    ActiveDocument.Bookmarks.Add name:="Container_Start", Range:=Selection.Range
    ActiveDocument.Bookmarks("Container_Marke").Select
    Selection.Collapse Direction:=wdCollapseEnd
    If Selection.Bookmarks.Exists("\EndOfDoc") Then
       Selection.InsertAfter Chr(13)
       GoTo Stop_setzen
    End If
    
    Selection.MoveUp Unit:=wdParagraph, Count:=1
    Selection.Move Unit:=wdParagraph, Count:=1
    Selection.MoveLeft Unit:=wdCharacter
    Selection.InsertAfter Chr(13)
    ActiveDocument.Bookmarks("Container_Marke").Select
 
Stop_setzen:
    Selection.Collapse Direction:=wdCollapseEnd
    If Selection.Bookmarks.Exists("\EndOfDoc") Then
      If Not Ende_erreicht Then Selection.MoveUp Unit:=wdParagraph, Count:=1
      Else
      Selection.MoveUp Unit:=wdParagraph, Count:=1
    End If
    ActiveDocument.Bookmarks.Add name:="Container_Stop", Range:=Selection.Range
    
    ActiveDocument.Bookmarks("Container_Marke").Delete
    
    ActiveDocument.Bookmarks("Container_Start").Select
    Selection.TypeText (caption & " Start")
    Selection.style = ActiveDocument.Styles(StartStyle)
    ActiveDocument.Bookmarks("Container_Stop").Select
    Selection.TypeText (caption & " Stop")
    Selection.style = ActiveDocument.Styles(StopStyle)
    
    ActiveDocument.Bookmarks("Container_Start").Delete
    ActiveDocument.Bookmarks("Container_Stop").Delete
    Selection.MoveUp Unit:=wdLine, Count:=1
    Selection.EndKey Unit:=wdLine, Extend:=wdMove

    Exit Sub

Fehler:
    MsgBox ("Zuweisung eines Blickfangs ist nicht m|fffd|glich. Bitte pr|fffd|fen Sie die Cursorposition. Diese darf sich nur im Text befinden.")
    Del_Blickfang_Marken
    On Error GoTo 0

End Sub

Sub Del_Blickfang_Marken()
    If ActiveDocument.Bookmarks.Exists("Container_Marke") = True Then ActiveDocument.Bookmarks("Container_Marke").Delete
    If ActiveDocument.Bookmarks.Exists("Container_Start") = True Then ActiveDocument.Bookmarks("Container_Start").Delete
    If ActiveDocument.Bookmarks.Exists("Container_Stop") = True Then ActiveDocument.Bookmarks("Container_Stop").Delete

End Sub

Sub Zeige_Fussnoten()  'CB Okt. 2010
If ActiveDocument.Footnotes.Count > 0 Then
  If ActiveWindow.ActivePane.View.Type = wdPrintView Or ActiveWindow. _
        ActivePane.View.Type = wdWebView Or ActiveWindow.ActivePane.View.Type = _
        wdPrintPreview Then
        ActiveWindow.View.SeekView = wdSeekFootnotes
  Else
        ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  End If
Else
  MsgBox ("Das Dokument hat keine Fu|fffd|noten.")
End If

End Sub

Sub Konvertiere_Endnoten() 'CB Dez. 2010
Dim Konv_Frage

Konv_Frage = MsgBox("Alle Endnoten werden nun in Fu|fffd|noten konvertiert.", vbOKCancel, "Fu|fffd|noten konvertieren")
If Konv_Frage = vbOK Then ActiveDocument.Endnotes.Convert
End Sub


Attribute VB_Name = "beck_Fehlermeldung"
Attribute VB_Base = "0{48C11894-2FCF-4914-8B29-69C6EFFF191A}{EA1BCD95-D3F5-4CF7-B8E5-D01ED6F7CF09}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CommandButton1_Click()
Unload Me
End Sub

Private Sub CommandButton2_Click() 'CB Mai 2010
If Selection.Start = Selection.End Then
   MsgBox ("Zuweisung nur m|fffd|glich, wenn Text oder Listeneintrag ausgew|fffd|hlt.")
   GoTo Ende
End If
If Selection.Start <> Selection.End Then Selection.style = wdStyleDefaultParagraphFont '"Absatz-Standardschriftart"
Ende:
FocusAnDocument
End Sub

Private Sub CommandButton3_Click() 'CB Mai 2010
If Selection.Start = Selection.End Then
   MsgBox ("Zuweisung nur m|fffd|glich, wenn Text oder Listeneintrag ausgew|fffd|hlt.")
   GoTo Ende
End If
If Selection.Start <> Selection.End Then
   Selection.Range.style = wdStyleDefaultParagraphFont
   Selection.Font.Bold = True
End If
Ende:
FocusAnDocument
End Sub

Private Sub CommandButton4_Click() 'CB Mai 2010
If Selection.Start = Selection.End Then
   MsgBox ("Zuweisung nur m|fffd|glich, wenn Text oder Listeneintrag ausgew|fffd|hlt.")
   GoTo Ende
End If
If Selection.Start <> Selection.End Then
   Selection.Range.style = wdStyleDefaultParagraphFont
   Selection.Font.Italic = True
End If
Ende:
FocusAnDocument
End Sub

Private Sub CommandButton5_Click() 'CB Mai 2010
If Selection.Start = Selection.End Then
   MsgBox ("Zuweisung nur m|fffd|glich, wenn Text oder Listeneintrag ausgew|fffd|hlt.")
   GoTo Ende
End If
If Selection.Start <> Selection.End Then
   Selection.Range.style = wdStyleDefaultParagraphFont
   Selection.Font.Italic = True
   Selection.Font.Bold = True
End If
Ende:
FocusAnDocument
End Sub

Private Sub CommandButton6_Click() 'CB Dez. 2010
Dim Verkn_Format, Verkn_Frage

On Error GoTo Fehler
If beck_Fehlermeldung.ListBox1.ListIndex = -1 Then Exit Sub

Verkn_Format = beck_Fehlermeldung.ListBox1.List(beck_Fehlermeldung.ListBox1.ListIndex)

If Right(Verkn_Format, 4) = "Zchn" Or Right(Verkn_Format, 4) = "Char" Then
   Verkn_Frage = MsgBox("ACHTUNG: Sie sollten das verkn|fffd|pfte Format |fffd|" & Verkn_Format & "|fffd| nur l|fffd|schen, wenn es die gleiche Formatierung aufweist, wie das der jeweiligen Textstelle zugeh|fffd|rige Absatzformat. Bitte pr|fffd|fen Sie daher alle Textstellen, die mit diesem Format formatiert wurden. Dieser Vorgang kann nicht r|fffd|ckg|fffd|ngig gemacht werden." & Chr(13) & Chr(13) & "Soll das verkn|fffd|pfte Format gel|fffd|scht und alle damit formatierten Textstellen wie das jeweils zugeh|fffd|rige Absatzformat formatiert werden?", vbYesNo, "Hinweis")
   If Verkn_Frage = vbNo Then Exit Sub
   ActiveDocument.Styles(Verkn_Format).LinkStyle = ActiveDocument.Styles(wdStyleNormal)
   ActiveDocument.Styles(Verkn_Format).Delete
   Else:
   MsgBox ("Dieses Format darf nicht automatisiert gel|fffd|scht werden. Sie sollten die Formatierung der einzelnen Textstellen pr|fffd|fen und evtl. manuell neu zuweisen.")
End If
Exit Sub

Fehler:
MsgBox ("Das Format kann nicht gel|fffd|scht werden. M|fffd|glicherweise haben Sie es bereits gel|fffd|scht.")
End Sub

'Komplett neu programmiert CB, Mai 2010. Alte Fassung in Ver. 1.23.09
Private Sub ListBox1_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Button = 2 Then Exit Sub  'rechte Maustaste
If beck_Fehlermeldung.ListBox1.ListIndex = -1 Then Exit Sub

On Error GoTo Ende
beck_Fehlermeldung.Height = 254.25
beck_Fehlermeldung.Label2.caption = ""
ActiveDocument.Bookmarks(style_error(beck_Fehlermeldung.ListBox1.ListIndex)).Select
FocusAnDocument
Exit Sub

Ende:
beck_Fehlermeldung.Height = 290
beck_Fehlermeldung.Label2.caption = "Fehler: Das Sprungziel ist m|fffd|glicherweise nicht mehr vorhanden. Das Dokument wurde zwischenzeitlich ge|fffd|ndert. Bitte die Pr|fffd|fenfunktion erneut ausf|fffd|hren."

End Sub

Private Sub UserForm_Activate()
beck_form.CommandButton3.Enabled = False
End Sub

Private Sub UserForm_Terminate()
Del_Bookmarks  'in Modul1. Alle Bookmarks l|fffd|schen.
If beck_tool.Visible = False Then beck_form.CommandButton3.Enabled = True 'Lesezeichen wieder zum Neu-Anlegen freigeben
End Sub
Attribute VB_Name = "beck_Indexeintrag"
Attribute VB_Base = "0{2D1C8043-94D7-4F2D-B827-D69F2D2C086C}{85FC8388-8F0E-4A1F-A3E2-CA2A70586065}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public Auswahltext As String
Public Indexeintrag, Querverweisstr As String

Private Sub CommandButton1_Click()

If IndexeintragCheck Then
   ActiveWindow.ActivePane.View.ShowAll = True
   ActiveDocument.Indexes.MarkEntry Range:=Selection.Range, Entry:=Indexeintrag _
        , EntryAutoText:=Indexeintrag, CrossReference:=Querverweisstr, CrossReferenceAutoText:= _
        "", BookmarkName:="", Bold:=False, Italic:=False
   Selection.Collapse Direction:=wdCollapseEnd
End If
Indexcollect
End Sub

Private Sub CommandButton2_Click()

If IndexeintragCheck Then
   ActiveWindow.ActivePane.View.ShowAll = True
   ActiveDocument.Indexes.MarkAllEntries Range:=Selection.Range, Entry:=Indexeintrag _
        , EntryAutoText:=Indexeintrag, CrossReference:=Querverweisstr, CrossReferenceAutoText:= _
        "", BookmarkName:="", Bold:=False, Italic:=False
   Selection.Collapse Direction:=wdCollapseEnd
End If
Indexcollect
End Sub

Private Function IndexeintragCheck() As Boolean

Indexeintrag = Haupteintragtext.Text
If Len(Indexeintrag) = 0 Then
   MsgBox ("Kein Eintrag festgelegt.")
   IndexeintragCheck = False
   Exit Function
End If
If InStr(Indexeintrag & Untereintragtext.Text, ":") Then
   MsgBox ("Der Indexeintrag darf keinen Doppelpunkt enthalten. Bitte korrigieren Sie den Eintrag.")
   IndexeintragCheck = False
   Exit Function
End If

If Len(Untereintragtext.Text) > 0 Then Indexeintrag = Indexeintrag & ":" & Untereintragtext.Text
If Len(Unteruntereintragtext.Text) > 0 Then
     If Len(Untereintragtext.Text) = 0 Then
     MsgBox ("Kein Eintrag festgelegt.")
     IndexeintragCheck = False
   Exit Function
   End If
   Indexeintrag = Indexeintrag & ":" & Unteruntereintragtext.Text
End If

If Querverweis.Value Then Querverweisstr = Querverweistext.Text
IndexeintragCheck = True
End Function
Private Sub CommandButton3_Click()
Unload Me
End Sub

Private Sub CommandButton4_Click()
Call Indexcollect
End Sub

Private Sub CommandButton5_Click()
Indexcollect
End Sub

Private Sub CommandButton6_Click()
If Me.Width = 513.75 Then
   Me.Width = 262
   CommandButton6.caption = ">>"
   Else
   Me.Width = 513.75
   CommandButton6.caption = "<<"
End If
End Sub

Private Sub Frame1_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Frame2_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Frame3_Click()
Aktualisieren
End Sub

Private Sub Haupteintragtext_Change()
Call Vorauswahl(ListBox1, Haupteintragtext.Text)
Aktualisieren
End Sub

Private Sub Haupteintragtext_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Label1_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Label2_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Label3__Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Label4_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Label5_Click()
Aktualisieren
End Sub

Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Dim Trenn1, Trenn2 As Long
Dim Listeneintrag As String

If Me.ListBox1.ListIndex = -1 Then Exit Sub
Listeneintrag = Me.ListBox1.List(Me.ListBox1.ListIndex)
If Len(Listeneintrag) - Len(Replace(Listeneintrag, ":", vbNullString)) > 2 Then
   MsgBox ("Es k|fffd|nnen maximal drei Stichwortebenen |fffd|bernommen werden")
   Exit Sub
End If
Trenn1 = InStr(Listeneintrag, ":")
If Trenn1 <> 0 Then Trenn2 = InStr(Trenn1 + 1, Listeneintrag, ":")

If Trenn1 = 0 Then
   Me.Haupteintragtext.Text = Listeneintrag
   Me.Untereintragtext.Text = ""
   Me.Unteruntereintragtext.Text = ""
End If

If Trenn1 > 0 And Trenn2 = 0 Then
   Me.Haupteintragtext.Text = Left(Listeneintrag, Trenn1 - 1)
   Me.Untereintragtext.Text = Right(Listeneintrag, Len(Listeneintrag) - Trenn1)
   Me.Unteruntereintragtext.Text = ""
End If
  
If Trenn1 > 0 And Trenn2 > 0 Then
   Me.Haupteintragtext.Text = Left(Listeneintrag, Trenn1 - 1)
   Me.Untereintragtext.Text = Mid(Listeneintrag, Trenn1 + 1, Len(Listeneintrag) - Trenn2)
   Me.Unteruntereintragtext.Text = Right(Listeneintrag, Len(Listeneintrag) - Trenn2)
End If

End Sub

Private Sub Querverweis_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Querverweistext_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
Querverweis.Value = True
End Sub

Private Sub Untereintragtext_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Unteruntereintragtext_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub UserForm_Initialize()
Indexcollect
Aktualisieren
End Sub

Private Sub UserForm_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Aktualisieren()
Dim pos, Pos_12, Pos_13, n As Integer
Dim strHaupteintrag As String
Dim Starttext As String
Dim UnsichtbareZeichen As Boolean
Dim Fu|fffd|notenansicht As Boolean

On Error Resume Next

Application.ScreenUpdating = False
UnsichtbareZeichen = ActiveWindow.ActivePane.View.ShowAll
ActiveDocument.Bookmarks.Add Range:=Selection.Range, name:="temp"

If ActiveWindow.View.SplitSpecial = 7 Then
   Fu|fffd|notenansicht = True
   If Selection.Information(wdInFootnoteEndnotePane) Then
   End If
End If

Selection.GoTo What:=wdGoToBookmark, name:="temp"

If Selection.Text <> Auswahltext Then
  
   Starttext = Haupteintragtext.Text
   If ActiveWindow.ActivePane.View.ShowAll Then ActiveWindow.ActivePane.View.ShowAll = False
   
   If Selection.Start <> Selection.End Then
      CommandButton2.Enabled = True
      
      If Right(Selection.Text, 1) = " " Then  'Leerzeichen am Ende nicht |fffd|bernehmen
         strHaupteintrag = Left(Selection, Len(Selection.Text) - 1)
         Else
         strHaupteintrag = Selection.Text
      End If

      'Diverses: Jeweils alle Vorkommen l|fffd|schen
      strHaupteintrag = Replace(strHaupteintrag, Chr(1), "")    'Chr(1) = Bild.
      strHaupteintrag = Replace(strHaupteintrag, Chr(2), "")    'Chr(2) = Fu|fffd|notenzeichen.
      strHaupteintrag = Replace(strHaupteintrag, Chr(21), "")   'Chr(21) = Word-Grafik.
      strHaupteintrag = Replace(strHaupteintrag, Chr(30), "")   'Chr(30) = Gesch. Trennung.
      strHaupteintrag = Replace(strHaupteintrag, Chr(31), "")   'Chr(31) = Manuelle Trennung.

      'MsgBox Asc(strHaupteintrag)
      'Return und Seitenwechel nicht nur einfach l|fffd|schen, sondern ab erstem Vorkommen Folgetext abschneiden, wie in Originalwordfunktion
      Pos_12 = InStr(strHaupteintrag, Chr(12))
      Pos_13 = InStr(strHaupteintrag, Chr(13))
      pos = Pos_13
      If Pos_12 <> 0 And Pos_12 < pos Then pos = Pos_12
      If Len(strHaupteintrag) > 0 Then
         If Asc(strHaupteintrag) = 12 Or Asc(strHaupteintrag) = 13 Then
             strHaupteintrag = ""   'falls nur ein einzelnes verbotenes Zeichen
         Else
            If pos = 0 Then pos = Len(strHaupteintrag) Else pos = pos - 1
            strHaupteintrag = Mid(strHaupteintrag, 1, pos)
         End If
      End If
      Haupteintragtext.Text = strHaupteintrag
   End If

   If Selection.Start = Selection.End Then
      Haupteintragtext.Text = ""
      CommandButton2.Enabled = False
   End If

   If Starttext <> Haupteintragtext.Text Then
      Untereintragtext.Text = ""
      Unteruntereintragtext.Text = ""
   End If

   For n = 1 To ActiveWindow.Panes.Count
       If UnsichtbareZeichen Then ActiveWindow.Panes(n).View.ShowAll = True
   Next
End If

ActiveDocument.Bookmarks("temp").Delete
Auswahltext = Selection.Text
Application.ScreenUpdating = True
End Sub

Sub Indexcollect()
Dim strIndex As String
Dim Pos1, Pos2 As Integer

On Error Resume Next
Me.ListBox1.Clear
Selection.Bookmarks.Add ("Index_Pos")
Ueberarbeitungsmodus_aus

If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
For Each Feld In ActiveDocument.Fields
    If Feld.Type = wdFieldIndexEntry Then
      Pos1 = InStr(Feld.Code, "\t")
      If Pos1 <> 0 Then strIndex = Mid(Feld.Code, 1, Pos1 - 1) Else strIndex = Feld.Code
      Pos1 = InStr(strIndex, Chr(34))
      Pos2 = InStrRev(strIndex, Chr(34))
      strIndex = Mid(Feld.Code, Pos1 + 1, Pos2 - Pos1 - 1)
      Pos1 = InStr(strIndex, Chr(34) & Chr(19))   'falls geschachtelt. Chr(19) = Klammer auf des Feldes
      If Pos1 <> 0 Then strIndex = Mid(strIndex, 1, Pos1 - 1)
      Pos1 = InStr(strIndex, Chr(19))   'falls geschachtelt. Chr(19) = Klammer auf des Feldes
      If Pos1 <> 0 Then strIndex = Mid(strIndex, 1, Pos1 - 1)
      strIndex = Replace(strIndex, "\", "")  'Backslash l|fffd|schen
      strIndex = Replace(strIndex, ": ", ":")
      strIndex = Replace(strIndex, " : ", ":")
      strIndex = Replace(strIndex, " :", ":")
      strIndex = LTrim(strIndex)    'f|fffd|hrendes Leerzeichen l|fffd|schen
      strIndex = RTrim(strIndex)
      If Not ListboxWertVorhanden(Me.ListBox1, strIndex) Then
         If Len(strIndex) > 0 Then
            Me.ListBox1.AddItem strIndex
            'MsgBox (Asc(strIndex))
         End If
      End If
    End If
Next

'Fu|fffd|noten
If ActiveDocument.Footnotes.Count > 0 Then
  ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  Selection.WholeStory
  For Each Feld In Selection.Range.Fields
    If Feld.Type = wdFieldIndexEntry Then
      Pos1 = InStr(Feld.Code, "\t")
      If Pos1 <> 0 Then strIndex = Mid(Feld.Code, 1, Pos1 - 1) Else strIndex = Feld.Code
      Pos1 = InStr(strIndex, Chr(34))
      Pos2 = InStrRev(strIndex, Chr(34))
      strIndex = Mid(Feld.Code, Pos1 + 1, Pos2 - Pos1 - 1)
      Pos1 = InStr(strIndex, Chr(34) & Chr(19))   'falls geschachtelt. Chr(19) = Klammer auf des Feldes
      If Pos1 <> 0 Then strIndex = Mid(strIndex, 1, Pos1 - 1)
      Pos1 = InStr(strIndex, Chr(19))   'falls geschachtelt. Chr(19) = Klammer auf des Feldes
      If Pos1 <> 0 Then strIndex = Mid(strIndex, 1, Pos1 - 1)
      strIndex = Replace(strIndex, "\", "")  'Backslash l|fffd|schen
      strIndex = Replace(strIndex, ": ", ":")
      strIndex = Replace(strIndex, " : ", ":")
      strIndex = Replace(strIndex, " :", ":")
      strIndex = LTrim(strIndex)    'f|fffd|hrendes Leerzeichen l|fffd|schen
      strIndex = RTrim(strIndex)
      If Not ListboxWertVorhanden(Me.ListBox1, strIndex) Then
         If Len(strIndex) > 0 Then
            Me.ListBox1.AddItem strIndex
            'MsgBox (Asc(strIndex))
         End If
      End If
    End If
  Next
End If

ActiveDocument.Bookmarks("Index_Pos").Select
ActiveDocument.Bookmarks("Index_Pos").Delete

'Sortieren:
If Me.ListBox1.ListCount > 0 Then
   ListboxSort
End If
Ueberarbeitungsmodus_ein
End Sub

Sub ListboxSort()
Dim i As Integer
Dim arr() As String

ReDim arr(Me.ListBox1.ListCount - 1)

For i = 0 To Me.ListBox1.ListCount - 1
  arr(i) = Me.ListBox1.List(i)
Next i
Call QuickSort(arr)
Me.ListBox1.Clear
For i = 0 To UBound(arr)
  Me.ListBox1.AddItem arr(i)
Next i
End Sub

Function ListboxWertVorhanden(Listbox As Listbox, Wert As String) As Boolean
Dim ctl As Control
Dim varElement As Variant
Set ctl = Listbox
    For varElement = 0 To ctl.ListCount - 1
       If ctl.Column(0, varElement) = Wert Then
          ListboxWertVorhanden = True
          Listbox.Selected(varElement) = True
          Exit For
       End If
Next varElement
End Function

Sub Vorauswahl(Listbox As Listbox, Wert As String)
Dim ctl As Control
Dim varElement As Variant
Dim LenWert As Integer
LenWert = Len(Wert)
If LenWert = 0 Then
   Listbox.ListIndex = -1
   Exit Sub
End If
   
Set ctl = Listbox
    For varElement = 0 To ctl.ListCount - 1
       If UCase(Left(ctl.Column(0, varElement), LenWert)) = UCase(Wert) Then
          Listbox.ListIndex = varElement
          Exit For
       Else
          Listbox.ListIndex = -1
       End If
Next varElement
End Sub
Attribute VB_Name = "beck_Umbruchabfrage"
Attribute VB_Base = "0{25318625-B36F-4A6C-9046-A7540204A558}{D5DA52DA-B940-4315-953A-DEBE655AECE1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Public umbruchtreffer
Public umbruchgefunden As Boolean
Private Sub CommandButton1_Click()   'Gesamte Form neu. CB Mai 2010

Dim treffer

On Error GoTo Fehler

If Asc(Selection.Text) = 11 Then
   treffer = True
   Else: treffer = False
End If

With Selection.Find
        .Text = "^l"
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchAllWordForms = False
        .MatchSoundsLike = False
        .MatchWildcards = False
        .Replacement.Text = ""
End With

If treffer Then
   beck_Umbruchabfrage.CommandButton1.Enabled = True
   Selection.Delete
   Selection.Find.Execute
   If Selection.Find.Found = False And ActiveWindow.View.SplitSpecial = 0 And ActiveDocument.Footnotes.Count > 0 Then
      ActiveWindow.View.SplitSpecial = wdPaneFootnotes
      Selection.GoTo What:=wdGoToFootnote, Which:=wdGoToAbsolute, Count:=1
      Selection.Find.Execute
      If Selection.Find.Found = False Then GoTo Kein_Treffer
   Else: If Selection.Find.Found = False Then GoTo Kein_Treffer
   End If
Else:
   MsgBox ("L|fffd|schen an dieser Stelle nicht m|fffd|glich")
   beck_Umbruchabfrage.CommandButton1.Enabled = False
End If

Exit Sub

Kein_Treffer:
MsgBox ("Keine weiteren Treffer")
Unload beck_Umbruchabfrage
Exit Sub

Fehler:
Call Fehler   'in Modul Beck_Tools

End Sub
Private Sub CommandButton2_Click()

With Selection.Find
        .Text = "^l"
        .Forward = True
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchAllWordForms = False
        .MatchSoundsLike = False
        .MatchWildcards = False
End With

Selection.Find.Execute
If Selection.Find.Found And umbruchgefunden = False Then
   umbruchgefunden = True
   umbruchtreffer = Selection.Start
End If
If Asc(Selection.Text) = 11 Then beck_Umbruchabfrage.CommandButton1.Enabled = True

If Selection.Start < umbruchtreffer And ActiveDocument.Footnotes.Count = 0 Then GoTo Kein_Treffer
If Selection.Start < umbruchtreffer And ActiveWindow.View.SplitSpecial = 0 And ActiveDocument.Footnotes.Count > 0 Then GoTo Fussnote
If Selection.Start < umbruchtreffer And ActiveWindow.View.SplitSpecial = 7 And ActiveDocument.Footnotes.Count > 0 Then GoTo Kein_Treffer
If Selection.Find.Found = False And ActiveWindow.View.SplitSpecial = 0 And ActiveDocument.Footnotes.Count > 0 Then
Fussnote:
      ActiveWindow.View.SplitSpecial = wdPaneFootnotes
      umbruchgefunden = False
      umbruchtreffer = -1
      Selection.GoTo What:=wdGoToFootnote, Which:=wdGoToAbsolute, Count:=1
      Selection.Find.Execute
      If Selection.Find.Found = False Then GoTo Kein_Treffer
      Else: If Selection.Find.Found = False Then GoTo Kein_Treffer
End If
Exit Sub

Kein_Treffer:
MsgBox ("Keine weiteren Treffer")
Unload beck_Umbruchabfrage

End Sub
Private Sub CommandButton3_Click()

On Error GoTo Fehler

ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close

With Selection.Find
        .Text = "^l"
        .Replacement.Text = TextBox1
        .Forward = True
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchAllWordForms = False
        .MatchSoundsLike = False
        .MatchWildcards = False
End With

Application.ScreenUpdating = False

'Im Text
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
Selection.Find.Execute Replace:=wdReplaceAll

'In den Fu|fffd|noten
If ActiveDocument.Footnotes.Count = 0 Then
   Application.ScreenUpdating = True
   Exit Sub
End If
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
ActiveWindow.View.SplitSpecial = wdPaneFootnotes
Selection.GoTo What:=wdGoToFootnote, _
Which:=wdGoToAbsolute, Count:=1
Selection.Find.Execute Replace:=wdReplaceAll

Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
Application.StatusBar = "Verarbeitung beendet"
Application.ScreenUpdating = True
Unload beck_Umbruchabfrage
Exit Sub

Fehler:
Application.ScreenUpdating = True
Call Fehler

End Sub
Private Sub CommandButton4_Click()
Unload beck_Umbruchabfrage
End Sub
Private Sub UserForm_Activate()

umbruchgefunden = False
umbruchtreffer = -1

With beck_tool
    .Width = 425.25
    .Label9 = "Verarbeitung l|fffd|uft ..."
    .Repaint
End With

ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
        .Text = "^l"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchAllWordForms = False
        .MatchSoundsLike = False
        .MatchWildcards = False
End With
Selection.Find.Execute
   If Selection.Find.Found = False And ActiveWindow.View.SplitSpecial = 0 And ActiveDocument.Footnotes.Count > 0 Then
      ActiveWindow.View.SplitSpecial = wdPaneFootnotes
      Selection.Find.Execute
      If Selection.Find.Found = False Then
         Unload beck_Umbruchabfrage
         MsgBox ("Keine Treffer")
      End If
      Else:
         If Selection.Find.Found = False Then
           Unload beck_Umbruchabfrage
           MsgBox ("Keine Treffer")
        End If
   End If
End Sub

Private Sub UserForm_Terminate()
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close   '7 = In den Noten
ActiveWindow.View.Type = wdNormalView
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
With beck_tool
    .Label9 = "Verarbeitung beendet"
    .Repaint
End With
'Suche zur|fffd|cksetzen f|fffd|r Benutzer
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
Selection.Find.Text = ""
End Sub
Attribute VB_Name = "beck_docinfo"
Attribute VB_Base = "0{A52CACD7-28A1-4E4C-A49D-3589AEE8DEA4}{B1350A87-20DE-45EE-821B-39E622007B65}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'CB Sept. 2010
Public Gesamtzahl_Felder, field_anz, field_i, Gesamtzahl_tab, tab_i, kast_i As Integer
Public Gesamtzahl_Bilder, bild_i, Gesamtzahl_Listen, list_i

Private Sub NormalansichtFn()  'Normalansicht inkl. Fu|fffd|noten anzeigen
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
ActiveWindow.View.Type = wdNormalView
If ActiveDocument.Footnotes.Count > 0 Then ActiveWindow.View.SplitSpecial = wdPaneFootnotes
End Sub

Private Sub CommandButton1_Click()
ActiveDocument.BuiltInDocumentProperties(5) = TextBox1.Text
NormalansichtFn
field_i = 0
tab_i = 0
kast_i = 0
bild_i = 0
list_i = 0
Me.CommandButton2.caption = "-> 1"
Me.CommandButton3.caption = "-> 1"
Me.CommandButton4.caption = "-> 1"
Me.CommandButton5.caption = "-> 1"
Me.CommandButton6.caption = "-> 1"
UserForm_Activate
End Sub

Private Sub CommandButton2_Click()
On Error GoTo Fehler
FocusAnDocument
ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
If field_i = 0 Then field_i = 1
If field_i <= ActiveDocument.Fields.Count Then
  ActiveDocument.Fields(field_i).Select
  field_i = field_i + 1
  If field_i = Gesamtzahl_Felder + 1 Then field_i = 1
  Else:
  ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  Selection.WholeStory
  If field_i <= Gesamtzahl_Felder Then
    Selection.Range.Fields(field_i - ActiveDocument.Fields.Count).Select
    field_i = field_i + 1
    If field_i = Gesamtzahl_Felder + 1 Then field_i = 1
  End If
End If
CommandButton2.caption = "-> " & field_i
Exit Sub
Fehler:
MsgBox ("Sprungziel nicht vorhanden!")
End Sub

Private Sub CommandButton3_Click()
On Error GoTo Fehler
FocusAnDocument
ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
If tab_i = 0 Then tab_i = 1
If tab_i <= ActiveDocument.Tables.Count Then
  ActiveDocument.Tables(tab_i).Select
  tab_i = tab_i + 1
  If tab_i = Gesamtzahl_tab + 1 Then tab_i = 1
  Else:
  ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  Selection.WholeStory
  If tab_i <= Gesamtzahl_tab Then
    Selection.Range.Tables(tab_i - ActiveDocument.Tables.Count).Select
    tab_i = tab_i + 1
    If tab_i = Gesamtzahl_tab + 1 Then tab_i = 1
  End If
End If
CommandButton3.caption = "-> " & tab_i
Exit Sub
Fehler:
MsgBox ("Sprungziel nicht vorhanden!")
End Sub

Private Sub CommandButton4_Click()
On Error GoTo Fehler
FocusAnDocument
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
If kast_i = 0 Then kast_i = 1
If kast_i <= ActiveDocument.Shapes.Count Then
  ActiveDocument.Shapes(kast_i).Select
  'Zum Sprung an die Auswahl folgender Trick:
  Selection.GoTo What:=wdGoToPage, Which:=wdGoToAbsolute, Count:=Selection.Information(wdActiveEndPageNumber), name:=""
  kast_i = kast_i + 1
  If kast_i = ActiveDocument.Shapes.Count + 1 Then kast_i = 1
End If
CommandButton4.caption = "-> " & kast_i
Exit Sub
Fehler:
MsgBox ("Sprungziel nicht vorhanden!")
End Sub

Private Sub CommandButton5_Click()
On Error GoTo Fehler
FocusAnDocument
ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
If bild_i = 0 Then bild_i = 1
If bild_i <= ActiveDocument.InlineShapes.Count Then
  ActiveDocument.InlineShapes(bild_i).Select
  bild_i = bild_i + 1
  If bild_i = Gesamtzahl_Bilder + 1 Then bild_i = 1
  Else:
  ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  Selection.WholeStory
  If bild_i <= Gesamtzahl_Bilder Then
    Selection.Range.InlineShapes(bild_i - ActiveDocument.InlineShapes.Count).Select
    bild_i = bild_i + 1
    If bild_i = Gesamtzahl_Bilder + 1 Then bild_i = 1
  End If
End If
CommandButton5.caption = "-> " & bild_i
Exit Sub
Fehler:
MsgBox ("Sprungziel nicht vorhanden!")
End Sub

Private Sub CommandButton6_Click()
On Error GoTo Fehler
FocusAnDocument
ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
If list_i = 0 Then list_i = 1
ActiveDocument.lists(list_i).Range.Select
list_i = list_i + 1
If list_i = Gesamtzahl_Listen + 1 Then list_i = 1
CommandButton6.caption = "-> " & list_i
Exit Sub
Fehler:
MsgBox ("Sprungziel nicht vorhanden!")
End Sub

Private Sub OK_Click()
field_i = 0
tab_i = 0
kast_i = 0
bild_i = 0
list_i = 0
Unload Me
End Sub

Private Sub UserForm_Activate()
Dim Zeichen_Lz_Fn, Woerter
Dim Feld As Field
Dim Tabellen As Tables

FocusAnDocument
Label8.caption = "Das Dokument enth|fffd|lt: "
Me.Repaint
Application.ScreenUpdating = False

'--------------Zeichenzahl
Zeichen_Lz_Fn = (ActiveDocument.ComputeStatistics(wdStatisticCharactersWithSpaces, True))
Woerter = (ActiveDocument.ComputeStatistics(wdStatisticWords, True))
If Zeichen_Lz_Fn = "" Then Zeichen_Lz_Fn = 0
If Woerter = "" Then Woerter = 0
Label1.caption = Format(Zeichen_Lz_Fn, "##,##0") & " Zeichen (inkl. Leerzeichen)." & " " & Format(Woerter, "##,##0") & " W|fffd|rter"

'--------------Indexeintr|fffd|ge
field_anz = 0
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Gesamtzahl_Felder = ActiveDocument.Fields.Count
For Each Feld In ActiveDocument.Fields
    If Feld.Type = wdFieldIndexEntry Then
      field_anz = field_anz + 1   'field_anz sind nur die Indexeintr|fffd|ge
      'Feld.Delete 'so ginge das l|fffd|schen
    End If
Next

  'Fu|fffd|noten
If ActiveDocument.Footnotes.Count > 0 Then
  ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  Selection.WholeStory
  Gesamtzahl_Felder = Gesamtzahl_Felder + Selection.Fields.Count
  For Each Feld In Selection.Range.Fields
    If Feld.Type = wdFieldIndexEntry Then
      field_anz = field_anz + 1
    End If
  Next
End If

If Gesamtzahl_Felder = 0 Then CommandButton2.Enabled = False Else CommandButton2.Enabled = True
Label2.caption = Format(Gesamtzahl_Felder, "##,##0") & " Feld(er) davon " & Format(field_anz, "##,##0")
If field_anz = 1 Then
   Label2.caption = Label2.caption & " Index-Eintrag"
   Else: Label2.caption = Label2.caption & " Index-Eintr|fffd|ge"
End If

'--------------Tabellen
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Gesamtzahl_tab = ActiveDocument.Tables.Count

  'Fu|fffd|noten
If ActiveDocument.Footnotes.Count > 0 Then
  ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  Selection.WholeStory
  Gesamtzahl_tab = Gesamtzahl_tab + Selection.Range.Tables.Count
End If
Label3.caption = Format(Gesamtzahl_tab, "##,##0") & " Tabelle(n)"
If Gesamtzahl_tab = 0 Then CommandButton3.Enabled = False Else CommandButton3.Enabled = True

'--------------K|fffd|sten. Hier braucht man Fu|fffd|noten nicht zu ber|fffd|cksichten, da dort K|fffd|sten nicht m|fffd|glich sind.
Label4.caption = Format(ActiveDocument.Shapes.Count, "##,##0") & " Word-Grafik(en) (z.B. Abdecker, Pfeile, etc.)"
If ActiveDocument.Shapes.Count = 0 Then CommandButton4.Enabled = False Else CommandButton4.Enabled = True

'--------------Bilder
bild_anz = 0
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Gesamtzahl_Bilder = ActiveDocument.InlineShapes.Count

  'Fu|fffd|noten
If ActiveDocument.Footnotes.Count > 0 Then
  ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  Selection.WholeStory
  Gesamtzahl_Bilder = Gesamtzahl_Bilder + Selection.InlineShapes.Count
End If

If Gesamtzahl_Bilder = 0 Then CommandButton5.Enabled = False Else CommandButton5.Enabled = True
Label9.caption = Format(Gesamtzahl_Bilder, "##,##0") & " Bild(er)"

'--------------Listen
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Gesamtzahl_Listen = ActiveDocument.lists.Count
'Bei Listen m|fffd|ssen Fu|fffd|noten nicht extra ber|fffd|cksichtigt werden
Label10.caption = Format(Gesamtzahl_Listen, "##,##0") & " Liste(n)"
If Gesamtzahl_Listen = 0 Then CommandButton6.Enabled = False Else CommandButton6.Enabled = True

'--------------Fu|fffd|notenanzahl
Label6.caption = Format(ActiveDocument.Footnotes.Count, "##,##0") & " Fu|fffd|note(n)"
Selection.HomeKey
Application.ScreenUpdating = True

'--------------Bemerkungen
TextBox1.Text = ActiveDocument.BuiltInDocumentProperties(5)

End Sub

Private Sub UserForm_Terminate()
ActiveDocument.BuiltInDocumentProperties(5) = TextBox1.Text
NormalansichtFn
End Sub
Attribute VB_Name = "beck_form"
Attribute VB_Base = "0{FCDFD5D2-663E-4E99-B5C1-91BB62067E81}{C554EA0E-384A-4B68-B5D7-21DBE6B7F0D9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Public beck_form_top, beck_form_left
Public ID_Fehler As Boolean
Option Explicit

Private Sub PaneRevision_close()
If ActiveWindow.View.SplitSpecial = wdPaneRevisions Then
   ActiveWindow.Panes(2).Close
End If
End Sub

Private Sub Command_Pruefen_Click()

If Not Dokumentschutz Then Exit Sub

ID_Fehler_test
If ID_Fehler Then Exit Sub

Del_Blickfang_Marken 'falls wegen Fehlers welche stehengeblieben
Unload beck_Fehlermeldung
beck_Fehlermeldung.ListBox1.Clear
beck_pruefen
   
'Zur Sicherheit nochmal auf urspr. Gr|fffd||fffd|e zur|fffd|cksezten
With beck_form
       .Height = 300.75
       .Repaint
End With

End Sub

Private Sub CommandButton1_Click()
Dim FN_Wert

If Not Dokumentschutz Then Exit Sub

If ActiveDocument.ProtectionType <> wdNoProtection Then
   MsgBox ("Das Dokument ist gesch|fffd|tzt und kann nicht gepr|fffd|ft werden.")
   Exit Sub
End If

On Error GoTo add_FNFunction

Weiter:
If ActiveDocument.CustomDocumentProperties("Fn").Value <> "Ein" Then
   MsgBox ("Die Fu|fffd|notenfunktion ist deaktiviert. Bitte wenden Sie sich an Ihren Lektor um n|fffd|here Informationen zu erhalten.")
   Exit Sub
End If
ID_Fehler_test
If ID_Fehler Then Exit Sub

On Error GoTo Ende
Call FnEinf|fffd|gen
FocusAnDocument
Exit Sub
Ende: MsgBox ("Fu|fffd|note kann hier nicht eingef|fffd|gt werden"), , "Fehler"
Exit Sub
add_FNFunction:
    ActiveDocument.CustomDocumentProperties.Add name:="Fn", LinkToContent:=False, _
    Type:=msoPropertyTypeString, Value:="Ein"  'Standardwert
    FN_Wert = "Ein"
    GoTo Weiter
End Sub

Private Sub CommandButton1_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Dim Antwort, FN_Wert

'Abfrage, ob Rechte Maustaste und STRG gedr|fffd|ckt
If Shift <> 2 And Button <> 2 Then Exit Sub
On Error GoTo add_FNFunction

Weiter:
If Shift = 2 And Button = 2 Then
   If ActiveDocument.CustomDocumentProperties("Fn").Value = "Ein" Then
       Antwort = MsgBox("M|fffd|chten Sie die Fu|fffd|notenfunktion deaktivieren? Bereits angelegte Fu|fffd|noten bleiben erhalten." & Chr(13) & "Das Dokument enth|fffd|lt aktuell " & ActiveDocument.Footnotes.Count & " Fu|fffd|note(n).", vbYesNo, "Fu|fffd|noten")
       If Antwort = vbYes Then ActiveDocument.CustomDocumentProperties("Fn").Value = "Aus"
       Exit Sub
   End If
   If ActiveDocument.CustomDocumentProperties("Fn").Value = "Aus" Then
       Antwort = MsgBox("M|fffd|chten Sie die Fu|fffd|notenfunktion aktivieren?", vbYesNo, "Fu|fffd|noten")
       If Antwort = vbYes Then ActiveDocument.CustomDocumentProperties("Fn").Value = "Ein"
       Exit Sub
   End If
End If
Exit Sub

add_FNFunction:
    ActiveDocument.CustomDocumentProperties.Add name:="Fn", LinkToContent:=False, _
    Type:=msoPropertyTypeString, Value:="Ein"  'Standardwert
    FN_Wert = "Ein"
    GoTo Weiter
End Sub

Private Sub CommandButton2_Click()

If Not Dokumentschutz Then Exit Sub

ID_Fehler_test
If ID_Fehler Then Exit Sub

CommandButton2.Enabled = False
FocusAnDocument
Load beck_Indexeintrag
beck_Indexeintrag.Show
CommandButton2.Enabled = True

End Sub

Private Sub CommandButton3_Click() 'CB Mai 2010

If Not Dokumentschutz Then Exit Sub

Del_Blickfang_Marken 'falls wegen Fehlers welche stehengeblieben
ID_Fehler_test
If ID_Fehler Then Exit Sub

beck_form.Command_Pruefen.Enabled = False
beck_form.CommandButton3.Enabled = False

Load beck_lesezeichen
beck_lesezeichen.Show
FocusAnDocument
End Sub

Private Sub ListBox_Anhang_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
   On Error GoTo Fehler
   If Button = 2 Then Exit Sub  'rechte Maustaste
   PaneRevision_close
   If ListBox_Anhang.ListIndex = -1 Then Exit Sub
   ID_Fehler_test
   If ID_Fehler Then Exit Sub

   Select Case ListBox_Anhang.List(ListBox_Anhang.ListIndex)
      Case "buch_anhang"
        action.cmdWrapper "mContAnhang1"
      Case "para_anhang"
        action.cmdWrapper "mContAnhang2"
      Case Else
        Selection.style = ActiveDocument.Styles(ListBox_Anhang.List(ListBox_Anhang.ListIndex))
        Selection.MoveDown Unit:=wdParagraph, Count:=1
   End Select
   FocusAnDocument
   Exit Sub
Fehler:
   Call Fehler
End Sub

Private Sub ListBox_Gesetz_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
   'On Error GoTo Fehler
   If Button = 2 Then Exit Sub  'rechte Maustaste
   PaneRevision_close
   If ListBox_Gesetz.ListIndex = -1 Then Exit Sub
   ID_Fehler_test
   If ID_Fehler Then Exit Sub

   Select Case ListBox_Gesetz.List(ListBox_Gesetz.ListIndex)
      Case "vorspann"
        action.cmdWrapper "mContVorspann"
      Case "Blickfang-Titel"
        action.cmdWrapper "b_blickfangtitle"
      Case "Normtext/Gesetz"
        action.cmdWrapper "mContNormtext"
      Case "-----------------------------"
        'do nothing
      Case Else
        Selection.style = ActiveDocument.Styles(ListBox_Gesetz.List(ListBox_Gesetz.ListIndex))
        Selection.MoveDown Unit:=wdParagraph, Count:=1
   End Select
   FocusAnDocument
   Exit Sub
Fehler:
   Call Fehler
End Sub

Private Sub ListBox_Inhalt_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
   On Error GoTo Fehler
   If Button = 2 Then Exit Sub  'rechte Maustaste
   PaneRevision_close
   If ListBox_Inhalt.ListIndex = -1 Then Exit Sub
   ID_Fehler_test
   If ID_Fehler Then Exit Sub

   Selection.style = ActiveDocument.Styles(ListBox_Inhalt.List(ListBox_Inhalt.ListIndex))
   Selection.MoveDown Unit:=wdParagraph, Count:=1
   FocusAnDocument
   Exit Sub
Fehler:
   Call Fehler
End Sub

Private Sub ListBox_Typografie_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
   On Error GoTo Fehler
   If Button = 2 Then Exit Sub  'rechte Maustaste
   PaneRevision_close
   If ListBox_Typografie.ListIndex = -1 Then Exit Sub
   ID_Fehler_test
   If ID_Fehler Then Exit Sub

   Selection.style = ActiveDocument.Styles(ListBox_Typografie.List(ListBox_Typografie.ListIndex))
   Selection.MoveDown Unit:=wdParagraph, Count:=1
   FocusAnDocument
   Exit Sub
Fehler:
   Call Fehler
End Sub

Private Sub ListBox_Standard_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
   On Error GoTo Fehler
   If Button = 2 Then Exit Sub  'rechte Maustaste
   If ListBox_Standard.List(ListBox_Standard.ListIndex) = "--- Buchaufbau: ---" Then Exit Sub
   PaneRevision_close
   If ListBox_Standard.ListIndex = -1 Then Exit Sub
   ID_Fehler_test
   If ID_Fehler Then Exit Sub

   Selection.style = ActiveDocument.Styles(ListBox_Standard.List(ListBox_Standard.ListIndex))
   Selection.MoveDown Unit:=wdParagraph, Count:=1
   FocusAnDocument
   Exit Sub
Fehler:
   Call Fehler
End Sub

Private Sub ListBox_Titelei_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
   On Error GoTo Fehler
   If Button = 2 Then Exit Sub  'rechte Maustaste
   PaneRevision_close
   If ListBox_Titelei.ListIndex = -1 Then Exit Sub
   ID_Fehler_test
   If ID_Fehler Then Exit Sub

   Selection.style = ActiveDocument.Styles(ListBox_Titelei.List(ListBox_Titelei.ListIndex))
   Selection.MoveDown Unit:=wdParagraph, Count:=1
   FocusAnDocument
   Exit Sub
Fehler:
   Call Fehler
End Sub

Private Sub ListBox_Verzeichnis_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
   On Error GoTo Fehler
   If Button = 2 Then Exit Sub  'rechte Maustaste
   PaneRevision_close
   If ListBox_Verzeichnis.ListIndex = -1 Then Exit Sub
   ID_Fehler_test
   If ID_Fehler Then Exit Sub

   Selection.style = ActiveDocument.Styles(ListBox_Verzeichnis.List(ListBox_Verzeichnis.ListIndex))
   Selection.MoveDown Unit:=wdParagraph, Count:=1
   FocusAnDocument
   Exit Sub
Fehler:
   Call Fehler
End Sub

Private Sub UserForm_Initialize()
    
    ' listbox Listen
    lb1.Clear
    lb1.AddItem "Z|fffd|hlung neu beginnen"
    lb1.List(lb1.ListCount - 1, 1) = "mListnumReset"
    lb1.AddItem "Z|fffd|hlung fortf|fffd|hren"
    lb1.List(lb1.ListCount - 1, 1) = "mListnumCont"
    lb1.AddItem "-----------------------------"
    lb1.List(lb1.ListCount - 1, 1) = "mNone"
    
    lb1.AddItem "A."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a1"
    lb1.AddItem "    A."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a2"
    lb1.AddItem "        A."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a3"
    
    lb1.AddItem "I."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_i1"
    lb1.AddItem "    I."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_i2"
    lb1.AddItem "        I."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_i3"
        
    lb1.AddItem "1."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_11"
    lb1.AddItem "    1."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_12"
    lb1.AddItem "        1."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_13"
    lb1.AddItem "            1."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_14"
    lb1.AddItem "                1."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_15"
    
    lb1.AddItem "a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a_1"
    lb1.AddItem "    a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a_2"
    lb1.AddItem "        a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a_3"
    lb1.AddItem "            a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a_4"
    lb1.AddItem "                a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a_5"
        
    lb1.AddItem "aa)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_aa_1"
    lb1.AddItem "    aa)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_aa_2"
    lb1.AddItem "        aa)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_aa_3"
    lb1.AddItem "            aa)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_aa_4"
    lb1.AddItem "                aa)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_aa_5"
        
    lb1.AddItem "(1)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_1_1"
    lb1.AddItem "    (1)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_1_2"
    lb1.AddItem "        (1)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_1_3"
    lb1.AddItem "            (1)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_1_4"
    lb1.AddItem "                (1)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_1_5"
    
    lb1.AddItem "(a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a__1"
    lb1.AddItem "    (a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a__2"
    lb1.AddItem "        (a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a__3"
    lb1.AddItem "            (a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a__4"
    lb1.AddItem "                (a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a__5"
    
    lb1.AddItem "i)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_i_1"
    lb1.AddItem "    i)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_i_2"
    lb1.AddItem "        i)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_i_3"
    lb1.AddItem "            i)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_i_4"
    lb1.AddItem "                i)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_i_5"
    
    lb1.AddItem "-"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dash1"
    lb1.AddItem "    -"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dash2"
    lb1.AddItem "        -"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dash3"
    lb1.AddItem "            -"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dash4"
    lb1.AddItem "                -"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dash5"
    
    lb1.AddItem ChrW(9679)
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dot1"
    lb1.AddItem "    " & ChrW(9679)
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dot2"
    lb1.AddItem "        " & ChrW(9679)
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dot3"
    lb1.AddItem "            " & ChrW(9679)
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dot4"
    lb1.AddItem "                " & ChrW(9679)
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dot5"
    
    lb1.AddItem ChrW(9632)
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_bsquare1"
    lb1.AddItem "    " & ChrW(9632)
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_bsquare2"
    'lb1.AddItem "        " & ChrW(9632)
    'lb1.List(lb1.ListCount - 1, 1) = "b_litem_bsquare3"
    'lb1.AddItem "            " & ChrW(9632)
    'lb1.List(lb1.ListCount - 1, 1) = "b_litem_bsquare4"
    'lb1.AddItem "                " & ChrW(9632)
    'lb1.List(lb1.ListCount - 1, 1) = "b_litem_bsquare5"
    
    lb1.AddItem ChrW(9633)
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_square1"
    lb1.AddItem "    " & ChrW(9633)
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_square2"
    'lb1.AddItem "        " & ChrW(9633)
    'lb1.List(lb1.ListCount - 1, 1) = "b_litem_square3"
    'lb1.AddItem "            " & ChrW(9633)
    'lb1.List(lb1.ListCount - 1, 1) = "b_litem_square4"
    'lb1.AddItem "                " & ChrW(9633)
    'lb1.List(lb1.ListCount - 1, 1) = "b_litem_square5"

    ' listbox Blickfang
    lbc.Clear
    lbc.AddItem "Beispiel"
    lbc.List(lbc.ListCount - 1, 1) = "mContBeispiel"
    lbc.AddItem "Hervorhebung/Emphasis"
    lbc.List(lbc.ListCount - 1, 1) = "mContHervorhebung_Emphasis"
    lbc.AddItem "F|fffd|lle/Aufgabe"
    lbc.List(lbc.ListCount - 1, 1) = "mContF|fffd|lle_Aufgabe"
    lbc.AddItem "L|fffd|sung"
    lbc.List(lbc.ListCount - 1, 1) = "mContL|fffd|sung"
    lbc.AddItem "Merke"
    lbc.List(lbc.ListCount - 1, 1) = "mContMerke"
    lbc.AddItem "Schema"
    lbc.List(lbc.ListCount - 1, 1) = "mContSchema"
    lbc.AddItem "Zitat"
    lbc.List(lbc.ListCount - 1, 1) = "mContZitat"
    lbc.AddItem "Material"
    lbc.List(lbc.ListCount - 1, 1) = "mContMaterial"
    lbc.AddItem "Wichtig"
    lbc.List(lbc.ListCount - 1, 1) = "mContWichtig"  'Erg|fffd|nzt CB Okt. 2010
    lbc.AddItem "Motto/Leitgedanke"
    lbc.List(lbc.ListCount - 1, 1) = "mContMotto"  'Erg|fffd|nzt CB Okt. 2010
    lbc.AddItem "Formel/Berechnung"
    lbc.List(lbc.ListCount - 1, 1) = "mContFormel"  'Erg|fffd|nzt CB Okt. 2010
    lbc.AddItem "Material/Muster"
    lbc.List(lbc.ListCount - 1, 1) = "mContMaterial_Muster"  'Erg|fffd|nzt CB Okt. 2010
    lbc.AddItem "Checkliste"
    lbc.List(lbc.ListCount - 1, 1) = "mContCheckliste"  'Erg|fffd|nzt CB M|fffd|rz 2011
    lbc.AddItem "Detail/Exkurs"
    lbc.List(lbc.ListCount - 1, 1) = "mContDetail_Exkurs"  'Erg|fffd|nzt CB Sept. 2012
    lbc.AddItem "-----------------------------"
    lbc.List(lbc.ListCount - 1, 1) = "mNone"
    lbc.AddItem "Kleindruck"
    lbc.List(lbc.ListCount - 1, 1) = "mContKleindruck"
    lbc.AddItem "-----------------------------"
    lbc.List(lbc.ListCount - 1, 1) = "mNone"
    lbc.AddItem "Blickfang-Titel"
    lbc.List(lbc.ListCount - 1, 1) = "b_blickfangtitle"
    lbc.AddItem "Frage"
    lbc.List(lbc.ListCount - 1, 1) = "Frage"
    

    ' listbox sonstiges
    lbs.Clear
    lbs.AddItem "Abbildung einf|fffd|gen"
    lbs.List(lbs.ListCount - 1, 1) = "mInsPic"
    lbs.AddItem "Bildunterschrift"
    lbs.List(lbs.ListCount - 1, 1) = "b_bildunterschrift"
    lbs.AddItem "Autorenname"   'Erg|fffd|nzt CB Mai 2012
    lbs.List(lbs.ListCount - 1, 1) = "b_autor"
    lbs.AddItem "Fu|fffd|notentext"
    lbs.List(lbs.ListCount - 1, 1) = "Fu|fffd|notentext"
    lbs.AddItem "-----------------------------"
    lbs.List(lbs.ListCount - 1, 1) = "mNone"
    lbs.AddItem "Dokumentstruktur anzeigen"  'Erg|fffd|nzt CB Juni 2010
    lbs.List(lbs.ListCount - 1, 1) = "mShowStruktur"
    lbs.AddItem "Fu|fffd|noten anzeigen"  'Erg|fffd|nzt CB Juni 2010
    lbs.List(lbs.ListCount - 1, 1) = "mShowFussnoten" 'CB Okt. 2010
    lbs.AddItem "Endnoten konvertieren"  'Erg|fffd|nzt CB Juni 2010
    lbs.List(lbs.ListCount - 1, 1) = "mKonvEndnoten" 'CB Okt. 2010
    lbs.AddItem "Umfangsberechnung"  'Erg|fffd|nzt CB Feb. 2010
    lbs.List(lbs.ListCount - 1, 1) = "mShowUmfang"
    lbs.AddItem "Drucken mit Seitenzahlen" 'Erg|fffd|nzt CB Feb. 2011
    lbs.List(lbs.ListCount - 1, 1) = "mShowPrint"
    lbs.AddItem "Dokumentinformationen" 'Erg|fffd|nzt CB Sept. 2012
    lbs.List(lbs.ListCount - 1, 1) = "mShowDocInfo"
    lbs.AddItem "Template Version"
    lbs.List(lbs.ListCount - 1, 1) = "mShowVersionInfo"

End Sub

Private Sub UserForm_Activate()
    If beck_form_left > 0 Then Me.Move beck_form_left, beck_form_top

    ID_Fehler_test
    If ID_Fehler Then Exit Sub

    ActiveDocument.CustomDocumentProperties("Toolbox").Value = "Ein"  'Erg|fffd|nzung CB Nov. 2009, Mai 2010
    
End Sub

Private Sub lb1_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    On Error GoTo Fehler
    If Button = 2 Then Exit Sub  'rechte Maustaste
    PaneRevision_close
    
    ID_Fehler_test
    If ID_Fehler Then Exit Sub

    If lb1.ListIndex <> -1 Then
        action.cmdWrapper lb1.List(lb1.ListIndex, 1)
    End If
    FocusAnDocument
   Exit Sub
Fehler:
   Call Fehler
End Sub

Private Sub lbc_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    On Error GoTo Fehler
    If Button = 2 Then Exit Sub  'rechte Maustaste
    PaneRevision_close
    
    ID_Fehler_test
    If ID_Fehler Then Exit Sub

    If lbc.ListIndex <> -1 Then
        action.cmdWrapper lbc.List(lbc.ListIndex, 1)
    End If
    FocusAnDocument
   Exit Sub
Fehler:
   Call Fehler
End Sub

Private Sub lbs_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    On Error GoTo Fehler
    If Button = 2 Then Exit Sub  'rechte Maustaste
    PaneRevision_close
    
    ID_Fehler_test
    If ID_Fehler Then Exit Sub

    If lbs.ListIndex <> -1 Then
        action.cmdWrapper lbs.List(lbs.ListIndex, 1)
    End If
    FocusAnDocument
   Exit Sub
Fehler:
   Call Fehler
End Sub

Private Sub UserForm_Deactivate()

beck_form_top = Me.Top   'CB Mai 2010
beck_form_left = Me.Left

End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
ID_Fehler_test
If ID_Fehler Then Exit Sub
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
beck_form_top = Me.Top  'CB Mai 2010
beck_form_left = Me.Left

beck_form.Hide  'verhindert entladen der Form, wenn auf das Kreuz geklickt wird. CB Mai 2010
Cancel = 1      'dto.
If CloseMode = 0 Then ActiveDocument.CustomDocumentProperties("Toolbox").Value = "Aus"
'CloseMode 0 (Klick auf Kreuz), CloseMode 1 (Beenden von Word)

End Sub

Sub ID_Fehler_test()
ID_Fehler = False
    On Error Resume Next
    If ActiveDocument.CustomDocumentProperties("ID").Value <> CStr(Date) Then
       ID_Fehler = True
    End If
End Sub

Sub Fehler()
MsgBox ("Zuweisung hier nicht m|fffd|glich.")
FocusAnDocument
End Sub

Attribute VB_Name = "beck_lesezeichen"
Attribute VB_Base = "0{6BAAB025-8186-465D-9433-F0054ED6044C}{D4BF9645-ECC1-4903-A332-6838F05198F8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CommandButton3_Click()        'Gesamte Form CB Mai 2010
Unload Me
End Sub

Private Sub CommandButton4_Click()
Dim Lesezeichen_name As String

If ActiveDocument.Bookmarks.Count > 0 Then
  If beck_lesezeichen.ListBox1.ListIndex > -1 Then
     Lesezeichen_name = ListBox1.List(ListBox1.ListIndex)
     ActiveDocument.Bookmarks(Lesezeichen_name).Delete
  Else
     MsgBox ("Bitte w|fffd|hlen Sie erst das zu l|fffd|schende Lesezeichen in der Liste.")
  End If
  Neu_laden
  FocusAnDocument
End If
End Sub

Private Sub CommandButton5_Click()
Dim Antwort

If ActiveDocument.Bookmarks.Count > 254 Then
   MsgBox ("Die Liste l|fffd|sst keine weiteren Eintr|fffd|ge mehr zu.")
   Exit Sub
End If

Antwort = InputBox("Bitte geben Sie einen Namen f|fffd|r Ihr Lesezeichen ein. Ist der Name bereits vorhanden, wird dieser |fffd|berschrieben.", "Lesezeichen an aktueller Textstelle anlegen")
Antwort = Replace(Antwort, "|fffd|", "Paragraf")
Antwort = Replace(Antwort, " ", "_") 'Leerzeichen durch Unterstrich ersetzen
Antwort = Replace(Antwort, ".", "_") 'Punkt durch Unterstrich ersetzen
Antwort = Left(Antwort, 40) 'nur 40 Zeichen

If Antwort = "" Then Exit Sub
On Error GoTo Fehler

With ActiveDocument.Bookmarks
        .Add Range:=Selection.Range, name:=Antwort
        .DefaultSorting = wdSortByName
        .ShowHidden = False
End With

Neu_laden
FocusAnDocument
Exit Sub

Fehler:
MsgBox ("Der Name enth|fffd|lt ung|fffd|ltige Zeichen. Bitte verwenden Sie als erstes Zeichen keine Ziffer und generell keine Sonderzeichen")
End Sub

Sub Neu_laden()  'L|fffd|dt neu damit Sortierung wieder stimmt
Dim Anzahl_LZ, l As Integer

Me.ListBox1.Clear
Anzahl_LZ = ActiveDocument.Bookmarks.Count
For l = 1 To Anzahl_LZ
  If l < 255 Then
     If Left(ActiveDocument.Bookmarks(l).name, 7) <> "Fehler_" Then beck_lesezeichen.ListBox1.AddItem ActiveDocument.Bookmarks(l)
  End If
Next
End Sub

Private Sub ListBox1_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Dim Lesezeichen_name As String

If Button = 2 Then Exit Sub  'rechte Maustaste
If ListBox1.ListIndex = -1 Then Exit Sub
On Error GoTo Fehler
Lesezeichen_name = ListBox1.List(ListBox1.ListIndex)
ActiveDocument.Bookmarks(Lesezeichen_name).Select
FocusAnDocument
Exit Sub

Fehler:
MsgBox ("Die urspr|fffd|nglich markierte Textstelle ist nicht mehr vorhanden. Das Lesezeichen wird gel|fffd|scht.")
Neu_laden
FocusAnDocument
End Sub

Private Sub UserForm_Activate()

'beck_form.Command_Pruefen.Enabled = False
'beck_form.CommandButton3.Enabled = False

If ActiveDocument.Bookmarks.Count > 254 Then
   MsgBox ("Die Liste l|fffd|sst keine weiteren Eintr|fffd|ge mehr zu. Es werden maximal 254 Eintr|fffd|ge angezeigt.")
   Exit Sub
End If

Neu_laden
End Sub

Private Sub UserForm_Terminate()
beck_form.Command_Pruefen.Enabled = True
If beck_tool.Visible = False Then beck_form.CommandButton3.Enabled = True
End Sub
Attribute VB_Name = "beck_tool"
Attribute VB_Base = "0{FD3A32C1-9C7F-43B6-825F-8C44AD511EA7}{647D16BE-4D1B-4060-8BC3-6021B680539D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Public beck_tool_top, beck_tool_left

Sub suche_del()
'Word-Suche leeren f|fffd|r Benutzereingabe
Selection.Find.ClearFormatting
Selection.Find.Text = ""
Selection.Find.Replacement.Text = ""
Selection.Find.Replacement.ClearFormatting
End Sub

Private Sub CommandButton1_Click()
PaneRevision_close
Call AlleListenNachTextUmwandeln
FocusAnDocument
End Sub

Private Sub CommandButton12_Click()
Dim Anz_P, Anz_Fn, Anz_Felder
Dim Antwort

Anz_P = ActiveDocument.Paragraphs.Count
Anz_Fn = ActiveDocument.Footnotes.Count
ActiveDocument.Select
Selection.Copy
Selection.MoveLeft Unit:=wdCharacter, Count:=1
error = 0

PaneRevision_close
'Felder in Text umwandeln
Anz_Felder = 0
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Anz_Felder = ActiveDocument.Fields.Count
'Fu|fffd|noten
If ActiveDocument.Footnotes.Count > 0 Then
  ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  Selection.WholeStory
  Anz_Felder = Anz_Felder + Selection.Fields.Count
End If

If Anz_Felder > 0 Then
   If Fields_inText = False Then
      Antwort = MsgBox("Das Dokument enth|fffd|lt Word-Felder (z.B. Querverweise) bzw. Indexeintr|fffd|ge. Genauere Informationen erhalten Sie, wenn Sie sich die Dokumentinformationen anzeigen lassen." & Chr(13) & Chr(13) & "M|fffd|chten Sie alle Felder in normalen Text umwandeln (Indexeintr|fffd|ge werden nicht umgewandelt)?", vbYesNoCancel)
      Else
      If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
      ActiveDocument.Fields.Unlink
      If ActiveDocument.Footnotes.Count > 0 Then
         ActiveWindow.View.SplitSpecial = wdPaneFootnotes
         Selection.WholeStory
         Selection.Fields.Unlink
      End If
      Antwort = ""
   End If
   Select Case Antwort
      Case vbYes
         If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
         ActiveDocument.Fields.Unlink
         If ActiveDocument.Footnotes.Count > 0 Then
            ActiveWindow.View.SplitSpecial = wdPaneFootnotes
            Selection.WholeStory
            Selection.Fields.Unlink
         End If
      Case vbCancel
         Zwischenablage_loeschen 'in Beck_Tools
         Exit Sub  'XE-(Index Entry-) und SEQ-(Sequence-)Felder werden nicht umgewandelt
      Case vbNo
         'do nothing
   End Select
End If
'Fehlermeldungen entladen und dabei Textmarken l|fffd|schen
Unload beck_Fehlermeldung
beck_Fehlermeldung.ListBox1.Clear
beck_format_pruefung
suche_del
'Zur Sicherheit:
If ActiveDocument.Paragraphs.Count <> Anz_P Or ActiveDocument.Footnotes.Count <> Anz_Fn Then
   Unload beck_Fehlermeldung
   MsgBox ("ACHTUNG: Bei der Pr|fffd|fung des Dokuments ist ein schwerwiegender Fehler aufgetreten. Das Dokument wird nun in den urspr|fffd|nglichen Zustand unmittelbar vor der Pr|fffd|fung zur|fffd|ckversetzt.")
   ActiveDocument.Content.Paste
   Selection.EndKey Unit:=wdStory
   If Selection.Text = Chr(13) And Selection.style = "Standard" Then Selection.TypeBackspace  'Leere Zeile am Ende l|fffd|schen
   Zwischenablage_loeschen 'in Beck_Tools
   Exit Sub
End If
Zwischenablage_loeschen 'in Beck_Tools
If error = 0 Then MsgBox "Keine Fehler!", vbOKOnly, "Beck-Template-Check"
FocusAnDocument
End Sub

Private Sub CommandButton2_Click()
PaneRevision_close
Call Fu|fffd|noten_Rot
Call WeissenTextEntfernen
suche_del
FocusAnDocument
End Sub

Private Sub CommandButton3_Click()
PaneRevision_close
Call WeisseKaestenEntfernen
FocusAnDocument
End Sub

Private Sub CommandButton4_Click()
PaneRevision_close
Call KopfzeilenEntfernen
FocusAnDocument
End Sub

Private Sub CommandButton5_Click()
PaneRevision_close
Call LeereFu|fffd|notenMitBlockadeVersehen
FocusAnDocument
End Sub

Private Sub CommandButton7_Click()
PaneRevision_close
Call MehrfachreturnsInFu|fffd|notenEntfernen
FocusAnDocument
End Sub

Private Sub CommandButton8_Click()
PaneRevision_close
Call ManuelleZeilenschaltungenbeiDivisEntfernen
suche_del
FocusAnDocument
End Sub

Private Sub CommandButton9_Click()
PaneRevision_close
Call ManuellenZeilenumbruchL|fffd|schen
End Sub

Private Sub CommandButton10_Click()
PaneRevision_close
Call Fu|fffd|notenReparieren
suche_del
FocusAnDocument
End Sub

Private Sub Image2_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
'UMSCHALT und STRG wurden gedr|fffd|ckt => Reihen_festlegen in Modul1, sonst Optionen anzeigen
If Shift = 3 Then Reihen_festlegen Else beck_tool_optionen.Show
End Sub

Private Sub Label12_Click()
With beck_tool
   If .Width = 215.25 Then .Width = 425.25 Else .Width = 215.25
    .Repaint
End With
FocusAnDocument
End Sub

Private Sub Image1_Click()
PaneRevision_close
Selection.HomeKey Unit:=wdStory
beck_docinfo.Show
End Sub

Private Sub UserForm_Activate()
IniRead
ActiveWindow.View.Type = wdNormalView
If beck_tool.Visible Then beck_form.CommandButton3.Enabled = False
If beck_lesezeichen.Visible Then Unload beck_lesezeichen
If beck_tool_left > 0 Then Me.Move beck_tool_left, beck_tool_top
End Sub

Private Sub UserForm_Deactivate()
beck_tool_top = Me.Top
beck_tool_left = Me.Left
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If beck_Fehlermeldung.Visible = False Then beck_form.CommandButton3.Enabled = True
beck_tool_top = Me.Top
beck_tool_left = Me.Left
beck_tool.Hide  'verhindert entladen der Form, wenn auf das Kreuz geklickt wird. CB Mai 2010
Cancel = 1      'dto.
End Sub
Attribute VB_Name = "beck_tool_optionen"
Attribute VB_Base = "0{C3F3004B-CD51-4FA7-92FB-7B46CA14DCE2}{69CCCC90-0A37-4797-AF16-21F2580219ED}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CommandButton1_Click()
If Me.CheckBox1.Value = True Then
  Verkn_anzeigen = True
  Else:
  Verkn_anzeigen = False
End If

If Me.CheckBox2.Value = True Then
  Fields_inText = True
  Else:
  Fields_inText = False
End If

Call IniWrite(Verkn_anzeigen, Fields_inText)

Unload Me
End Sub

Private Sub CommandButton2_Click()
Me.Hide
End Sub

Private Sub UserForm_Activate()
If Verkn_anzeigen Then CheckBox1.Value = True Else CheckBox1.Value = False
If Fields_inText Then CheckBox2.Value = True Else CheckBox2.Value = False
End Sub
Attribute VB_Name = "beck_tool_passwort"
Attribute VB_Base = "0{4B598182-C3AB-48F0-BACA-049E31CFA1BB}{34817F3E-6B46-410C-BB4C-8EDD828043F3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
If Me.TextBox1 = "" Then MsgBox ("Bitte Passwort eingeben") Else Me.Hide
End Sub

Private Sub CommandButton2_Click()
Me.TextBox1 = ""
Me.Hide
End Sub

Private Sub TextBox1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = 13 Then Me.Hide
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

Me.Hide  'verhindert entladen der Form, wenn auf das Kreuz geklickt wird. CB Mai 2010
If CloseMode = 0 Then Me.TextBox1 = ""
'CloseMode 0 (Klick auf Kreuz), CloseMode 1 (Beenden von Word)
End Sub
Attribute VB_Name = "helpers"
Option Private Module
Option Compare Text 'Wichtig, damit Umlaute richtig einsortiert werden (in Quicksort)

Function inTable(p As Paragraph)
    inTable = True
    If p.Range.Tables.Count = 0 Then
        inTable = False
    End If
End Function
'Selection.Information(wdWithInTable)

Function IsLineEmpty()
    If Selection.Paragraphs(1).Range.Characters.Count = 1 Then
        IsLineEmpty = True
    Else
        IsLineEmpty = False
    End If
End Function

Sub makeShortCuts()
    CustomizationContext = ThisDocument 'ActiveDocument
    KeyBindings.Add KeyCode:=BuildKeyCode(wdKeyControl, wdKey1), KeyCategory:=wdKeyCategoryMacro, Command:="thPublic.H1"
    KeyBindings.Add KeyCode:=BuildKeyCode(wdKeyAlt, wdKeyA), KeyCode2:=wdKeyB, KeyCategory:=wdKeyCategoryMacro, Command:="thPublic.insPic"
End Sub

Sub resetSearchAndReplace()
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
End Sub

Function styleExists(name)
    styleExists = False
    For Each f In ActiveDocument.Styles
        If f.NameLocal = name Then
            styleExists = True
            Exit For
        End If
    Next
End Function

Sub QuickSort(SortArray() As String, Optional ByVal varStart As Long, Optional ByVal varEnd As Long)
   'Option Compare Text s.o.
   Dim i As Long, j As Long, RandIndex As Long, Partition As String
   Dim Low As Long, High As Long

   Low = IIf(varStart = 0, LBound(SortArray), varStart)
   High = IIf(varEnd = 0, UBound(SortArray), varEnd)

   If Low < High Then
      If High - Low = 1 Then
         If UCase(SortArray(Low)) > UCase(SortArray(High)) Then
            Swap SortArray(Low), SortArray(High)
         End If
      Else
         RandIndex = Rnd() * (High - Low) + Low
         Swap SortArray(High), SortArray(RandIndex)
         Partition = UCase(SortArray(High))
         Do
            i = Low: j = High
            Do While (i < j) And (UCase(SortArray(i)) <= Partition)
               i = i + 1
            Loop
            Do While (j > i) And (UCase(SortArray(j)) >= Partition)
               j = j - 1
            Loop
            If i < j Then
               Swap SortArray(i), SortArray(j)
            End If
         Loop While i < j
         Swap SortArray(i), SortArray(High)
         If (i - Low) < (High - i) Then
            QuickSort SortArray, Low, i - 1
            QuickSort SortArray, i + 1, High
         Else
            QuickSort SortArray, i + 1, High
            QuickSort SortArray, Low, i - 1
         End If
      End If
   End If
End Sub

Sub Swap(First As String, Second As String)
   Dim varTemp As String

   varTemp = First
   First = Second
   Second = varTemp
End Sub

Function Dokumentschutz()
If ActiveDocument.ProtectionType <> wdNoProtection Then
   MsgBox ("Das Dokument ist gesch|fffd|tzt und kann nicht bearbeitet werden. Entfernen Sie den Dokumentschutz.")
   Dokumentschutz = False
Else
   Dokumentschutz = True
End If

End Function

Sub PaneRevision_close()
If ActiveWindow.View.SplitSpecial = wdPaneRevisions Then
   ActiveWindow.Panes(2).Close
End If
End Sub

Attribute VB_Name = "lists"
Option Private Module

Sub doIt()  'Hauptprogramm
    'makeListTemplate "b_lg_i_", "b_litem_i_"   ' r|fffd|misch klein
    'makeListTemplate "b_lg_i", "b_litem_i"     ' r|fffd|misch gro|fffd|
    'makeListTemplate "b_lg_a", "b_litem_a"     ' A
    'makeListTemplate "b_lg_1", "b_litem_1"     ' 1
    'makeListTemplate "b_lg_a_", "b_litem_a_"   ' a)
    makeListTemplate "b_lg_aa_", "b_litem_aa_"   ' aa)
    'makeListTemplate "b_lg_a__", "b_litem_a__" ' (a)
    'makeListTemplate "b_lg_1_", "b_litem_1_"   ' (1)
    'makeListTemplate "b_lg_dash", "b_litem_dash"
    'makeListTemplate "b_lg_dot", "b_litem_dot"
    'makeListTemplate "b_lg_square", "b_litem_square"
    'makeListTemplate "b_lg_bsquare", "b_litem_bsquare"
End Sub

Private Function ListTemplateIndex(ListTemplateName) As ListTemplate
    Dim lt As ListTemplate
    
    For Each lt In ActiveDocument.ListTemplates
        If lt.name = ListTemplateName Then
            Set ListTemplateIndex = lt
            Exit For
        End If
    Next
    
    If ListTemplateIndex Is Nothing Then
        Set ListTemplateIndex = ActiveDocument.ListTemplates.Add(True)
        ListTemplateIndex.name = ListTemplateName
    End If
    
    Set lt = Nothing
End Function

Private Sub makeListTemplate(lgName, pName)
  
    Dim ltTemp As ListTemplate
    Dim intLoop As Integer
    Dim NumStyle As WdListNumberStyle
               
    Set ltTemp = ListTemplateIndex(lgName)
    For intLoop = 1 To 5
        ' Reset
        With ltTemp.ListLevels(intLoop)
            .NumberStyle = wdListNumberStyleNone
            .NumberPosition = 0
            .TextPosition = 0
            .TabPosition = 0
            .NumberFormat = ""
        End With
        ' Set
        s = pName & Trim(Str(intLoop))
        If lgName = "b_lg_a" Then
            NumStyle = wdListNumberStyleUppercaseLetter
            NumFormat = "%" & Trim(Str(intLoop)) & "."
        ElseIf lgName = "b_lg_i" Then
            NumStyle = wdListNumberStyleUppercaseRoman
            NumFormat = "%" & Trim(Str(intLoop)) & "."
        ElseIf lgName = "b_lg_i_" Then
            NumStyle = wdListNumberStyleLowercaseRoman
            NumFormat = "%" & Trim(Str(intLoop)) & ")"
        ElseIf lgName = "b_lg_1" Then
            NumStyle = wdListNumberStyleArabic
            NumFormat = "%" & Trim(Str(intLoop)) & "."
        ElseIf lgName = "b_lg_a_" Then
            NumStyle = wdListNumberStyleLowercaseLetter
            NumFormat = "%" & Trim(Str(intLoop)) & ")"
        ElseIf lgName = "b_lg_aa_" Then
            NumStyle = wdListNumberStyleLowercaseLetter
            NumFormat = "%" & Trim(Str(intLoop)) & "%" & Trim(Str(intLoop)) & ")"
        ElseIf lgName = "b_lg_a__" Then
            NumStyle = wdListNumberStyleLowercaseLetter
            NumFormat = "(%" & Trim(Str(intLoop)) & ")"
        ElseIf lgName = "b_lg_1_" Then
            NumStyle = wdListNumberStyleArabic
            NumFormat = "(%" & Trim(Str(intLoop)) & ")"
        ElseIf lgName = "b_lg_dash" Then
            NumStyle = wdListNumberStyleNone
            NumFormat = "-"
        ElseIf lgName = "b_lg_dot" Then
            NumStyle = wdListNumberStyleNone
            NumFormat = ChrW(9679) ' 25CF
        ElseIf lgName = "b_lg_bsquare" Then
            NumStyle = wdListNumberStyleNone
            NumFormat = ChrW(9632) ' 25A0 TimesRoman
        ElseIf lgName = "b_lg_square" Then
            NumStyle = wdListNumberStyleNone
            NumFormat = ChrW(9633) ' 25A1 TimesRoman
        End If
        With ltTemp.ListLevels(intLoop)
            .NumberStyle = NumStyle
            .NumberPosition = CentimetersToPoints(0.7 * (intLoop - 1))
            .TextPosition = CentimetersToPoints(0.7 * intLoop)
            .TabPosition = CentimetersToPoints(0.7 * intLoop)
            .NumberFormat = NumFormat
            If lgName = "b_lg_dot" Or lgName = "b_lg_square" Or lgName = "b_lg_bsquare" Then
                .Font.name = "Arial Unicode MS"
            End If
            .LinkedStyle = s
        End With
    Next intLoop
End Sub

Sub ListNumReset()
    On Error GoTo Ignore
    Dim lfTmp As ListFormat
    Selection.Bookmarks.Add ("Num_Pos")
    Selection.HomeKey Unit:=wdLine
    Set lfTmp = Selection.Range.ListFormat
    lfTmp.ApplyListTemplate lfTmp.ListTemplate, False
    Cur_Zuruecksetzen
    Exit Sub
Ignore:
    Cur_Zuruecksetzen
    MsgBox "Funktioniert nur in Listen!"
End Sub

Sub ListNumContinue()
    On Error GoTo Ignore
    Dim lfTmp As ListFormat
    Selection.Bookmarks.Add ("Num_Pos")
    Selection.HomeKey Unit:=wdLine 'bringt zuverl|fffd|ssigere Ergebnise, wenn Cursor am Zeilenbeginn steht
    Set lfTmp = Selection.Range.ListFormat
    lfTmp.ApplyListTemplate lfTmp.ListTemplate, True
    Cur_Zuruecksetzen
    Exit Sub
Ignore:
    Cur_Zuruecksetzen
    MsgBox "Funktioniert nur in Listen!"
End Sub

Sub Cur_Zuruecksetzen()
    ActiveDocument.Bookmarks("Num_Pos").Select
    ActiveDocument.Bookmarks("Num_Pos").Delete
End Sub

Sub ListNumDel()
    Selection.Range.ListFormat.RemoveNumbers 'NumberType:=wdNumberParagraph
End Sub
Attribute VB_Name = "pics"
Option Private Module

Sub addPic()
    
    With Dialogs(wdDialogInsertPicture)
        res = .Display
        Select Case res
            Case -1:
                insertPicRef .name
            Case Else
                ' do nothing
        End Select
    End With

End Sub

Private Sub insertPicRef(name)
    
    ' Korrigiert CB April 2010
    
    If Selection.Information(wdFirstCharacterColumnNumber) - 1 = "0" Then
       Selection.TypeText Chr(13)
    Else
       Selection.TypeText Chr(13)
       Selection.TypeText Chr(13)
    End If
    Selection.InlineShapes.AddPicture FileName:=name, LinkToFile:=False, SaveWithDocument:=True
    Selection.style = "b_Abbildung"
    Selection.TypeText Chr(13)
    Selection.style = "p"
    If Not helpers.IsLineEmpty() Then
        Selection.TypeText Chr(13)
    End If
End Sub

Attribute VB_Name = "versionInfo"
Attribute VB_Base = "0{02E7616B-B55C-449B-92E6-F2347635D6F5}{C7FE3143-C019-4655-BB86-3C0D87173D73}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub OK_Click()
    versionInfo.Hide
End Sub

Private Sub UserForm_Activate()
Me.Label1.caption = "Version " & Version
End Sub

' InQuest injected base64 decoded content
' zY^e
' Y^.+-zsZr
' j{)j
' *Zr)
' ,yj+w
' "jpky
' ,yj+wm4
' 0>'-
' yJiz
' yJiz

INQUEST-PP=macro
