Attribute VB_Name = "LaunchAssocFiles"
' Balance sheet report for Exact Globe - Slovak legislation 2011


    Option Explicit

      Private Declare Function ShellExecute Lib "shell32.dll" Alias _
      "ShellExecuteA" (ByVal hwnd As Long, ByVal lpszOp As _
      String, ByVal lpszFile As String, ByVal lpszParams As String, _
      ByVal lpszDir As String, ByVal FsShowCmd As Long) As Long

      Private Declare Function GetDesktopWindow Lib "user32" () As Long

      Const SW_SHOWNORMAL = 1

      Const SE_ERR_FNF = 2&
      Const SE_ERR_PNF = 3&
      Const SE_ERR_ACCESSDENIED = 5&
      Const SE_ERR_OOM = 8&
      Const SE_ERR_DLLNOTFOUND = 32&
      Const SE_ERR_SHARE = 26&
      Const SE_ERR_ASSOCINCOMPLETE = 27&
      Const SE_ERR_DDETIMEOUT = 28&
      Const SE_ERR_DDEFAIL = 29&
      Const SE_ERR_DDEBUSY = 30&
      Const SE_ERR_NOASSOC = 31&
      Const ERROR_BAD_FORMAT = 11&

Function StartDoc(DocName As String) As Long
        Dim Scr_hDC As Long
        Scr_hDC = GetDesktopWindow()
        StartDoc = ShellExecute(Scr_hDC, "Open", DocName, _
        "", "C:\", SW_SHOWNORMAL)
End Function

Sub ReNamedRange() ' this function can be run manually to rename cell range after some change
    Dim B1 As Range
    Dim K1 As Range
    Dim N2 As Range
    Dim N3 As Range
    Dim BU4 As Range
    Dim PU5 As Range
    Dim StartLine As Integer
     
    For VarI = 1 To 65
        StartLine = VarI + 7
         
        Set B1 = Worksheets("Suvaha").Range("D" & StartLine)
        Set K1 = Worksheets("Suvaha").Range("F" & StartLine)
        Set N2 = Worksheets("Suvaha").Range("H" & StartLine)
        Set N3 = Worksheets("Suvaha").Range("J" & StartLine)
        
        ActiveWorkbook.Names.Add Name:="RD" & CStr(Format(VarI, "000")) & "_1_1", RefersTo:=B1
        ActiveWorkbook.Names.Add Name:="RD" & CStr(Format(VarI, "000")) & "_1_2", RefersTo:=K1
        ActiveWorkbook.Names.Add Name:="RD" & CStr(Format(VarI, "000")) & "_2", RefersTo:=N2
        ActiveWorkbook.Names.Add Name:="RD" & CStr(Format(VarI, "000")) & "_3", RefersTo:=N3
        
    Next VarI

    For VarI = 66 To 125
        StartLine = VarI + 10
                         
        Set BU4 = Worksheets("Suvaha").Range("D" & StartLine)
        Set PU5 = Worksheets("Suvaha").Range("F" & StartLine)
        ActiveWorkbook.Names.Add Name:="RD" & CStr(Format(VarI, "000")) & "_4", RefersTo:=BU4
        ActiveWorkbook.Names.Add Name:="RD" & CStr(Format(VarI, "000")) & "_5", RefersTo:=PU5
    
    Next VarI
           
End Sub

Attribute VB_Name = "Please_Wait_Form"
Attribute VB_Base = "0{855ED178-C3AA-42B9-9CAE-B71D20A32C54}{5FAF9703-B8BD-4191-BA1A-D2799BA7E0A4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "bt_select_file, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "SQLscript, 3, 1, MSForms, TextBox"

Private Sub bt_select_file_Click()
    Dim sFilename
    sFilename = Application.GetSaveAsFilename(InitialFileName:=Worksheets("Data").Range("FILE_PATH"), FileFilter:="Acrobat Portable Document Input Form (*.fdf), *.fdf", Title:="Pros|fffd|m vyberte existuj|fffd|ci fdf s|fffd|bor alebo vlo|fffd|te nov|fffd| s|fffd|bor", ButtonText:="Vyber")
      If sFilename = False Then
      ' They pressed Cancel
      ' MsgBox "S|fffd|bor nebol vybran|fffd|"
      Exit Sub
    Else
    'Workbooks.Open Filename:=NewFN
    Worksheets("Data").Range("FILE_PATH") = sFilename
    End If
End Sub




Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "rb_riadne, 1, 0, MSForms, OptionButton"
Attribute VB_Control = "rb_mimoriadne, 2, 1, MSForms, OptionButton"
Attribute VB_Control = "rb_zostavena, 11, 3, MSForms, OptionButton"
Attribute VB_Control = "rb_schvalena, 12, 4, MSForms, OptionButton"

Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btExport, 778, 0, MSForms, CommandButton"
Attribute VB_Control = "bt_delete, 779, 1, MSForms, CommandButton"
Private Sub bt_delete_Click()
    Worksheets("SDATA").Range("BS_FY, BS_PY") = ""
    Worksheets("Prva_strana").Range("Vstupne_polia_PS") = ""
    Worksheets("Prva_strana").rb_riadne = True ' Uctovna zavierka riadne
    Worksheets("Prva_strana").rb_zostavena = True ' ' Uctovna zavierka zostavena
End Sub

Private Sub btExport_Click()
'   ----------------------------------------------------------------------------------------
'   Check entered path
'   ----------------------------------------------------------------------------------------
    Dim fso
    Dim file As String ' all path + file name
    Dim folder As String
    Set fso = CreateObject("Scripting.FileSystemObject")
    file = Worksheets("Data").Range("FILE_PATH")
    
    ' when file path empty open popup to enter file
    If (file = "" Or file = "False") Then
         Worksheets("Data").Range("FILE_PATH") = Application.GetSaveAsFilename(InitialFileName:="Suvaha_" & Worksheets("Prva_strana").Range("ROK"), FileFilter:="Adobe Forms data format (*.fdf), *.fdf", Title:="Zvo|fffd|te meno a umiestnenie fdf s|fffd|boru", ButtonText:="Ulo|fffd|")
         file = Worksheets("Data").Range("FILE_PATH")
    End If
    
    folder = Left(file, Len(file) - InStr(1, StrReverse(file), "\"))
    If Not fso.folderExists(folder) Then
        Error_message = MsgBox("Export nemo|fffd|no realizova|fffd|!" & vbNewLine & "Nebola n|fffd|jden|fffd| cesta: " & folder _
        & vbNewLine & "Zmente cestu k exportn|fffd|mu s|fffd|boru v liste Data.", vbCritical, "Chyba")
        Exit Sub
    End If
    
'   ----------------------------------------------------------------------------------------
'   Step 1: initialize
'   ----------------------------------------------------------------------------------------
'   Write fdf header
    EXP_TEXT = ""
    EXP_TEXT = EXP_TEXT + "%FDF-1.2" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + "%|fffd|aD|fffd|" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + "1 0 obj" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + "<< /FDF" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + "  << /Fields" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + "    [" + String(1, 13) + String(1, 10)


'   ----------------------------------------------------------------------------------------
'   Write Profit & loss first page
'   ----------------------------------------------------------------------------------------

    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("DEN") & ")/T (den)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("MESIAC") & ")/T (mesiac)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Right(Worksheets("Prva_strana").Range("ROK"), 2) & ")/T (rok)>>" + String(1, 13) + String(1, 10)
    
    
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("ICO") & ")/T (ico)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("DIC") & ")/T (dic)>>" + String(1, 13) + String(1, 10)
    
    SKNACE = Left(Trim(Worksheets("Prva_strana").Range("SKNACE")), 5)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Left(SKNACE, 2) & ")/T (sknace1)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Right(Left(SKNACE, 4), 2) & ")/T (sknace2)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Right(SKNACE, 1) & ")/T (sknace3)>>" + String(1, 13) + String(1, 10)

    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V ("
    If (Worksheets("Prva_strana").rb_riadne = True) Then EXP_TEXT = EXP_TEXT + "x"
    EXP_TEXT = EXP_TEXT + ")/T (uzr)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V ("
    If (Worksheets("Prva_strana").rb_mimoriadne = True) Then EXP_TEXT = EXP_TEXT + "x"
    EXP_TEXT = EXP_TEXT + ")/T (uzm)>>" + String(1, 13) + String(1, 10)

    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V ("
    If (Worksheets("Prva_strana").rb_zostavena = True) Then EXP_TEXT = EXP_TEXT + "x"
    EXP_TEXT = EXP_TEXT + ")/T (uzz)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V ("
    If (Worksheets("Prva_strana").rb_schvalena = True) Then EXP_TEXT = EXP_TEXT + "x"
    EXP_TEXT = EXP_TEXT + ")/T (uzs)>>" + String(1, 13) + String(1, 10) + String(1, 13) + String(1, 10)

    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("ZA_OBD_OD") & ")/T (od_mes)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Right(Worksheets("Prva_strana").Range("ZA_OBD_OD_ROK"), 2) & ")/T (od_rok)>>" + String(1, 13) + String(1, 10) + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("ZA_OBD_DO") & ")/T (do_mes)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Right(Worksheets("Prva_strana").Range("ZA_OBD_DO_ROK"), 2) & ")/T (do_rok)>>" + String(1, 13) + String(1, 10) + String(1, 13) + String(1, 10)

    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("PR_OBD_OD") & ")/T (bpo_od_mes)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Right(Worksheets("Prva_strana").Range("PR_OBD_OD_ROK"), 2) & ")/T (bpo_od_rok)>>" + String(1, 13) + String(1, 10) + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("PR_OBD_DO") & ")/T (bpo_do_mes)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Right(Worksheets("Prva_strana").Range("PR_OBD_DO_ROK"), 2) & ")/T (bpo_do_rok)>>" + String(1, 13) + String(1, 10) + String(1, 13) + String(1, 10)

    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & SKStringConv(Worksheets("Prva_strana").Range("OBCH_MENO1")) & ")/T (ucto1)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & SKStringConv(Worksheets("Prva_strana").Range("OBCH_MENO2")) & ")/T (ucto2)>>" + String(1, 13) + String(1, 10) + String(1, 13) + String(1, 10)

    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & SKStringConv(Worksheets("Prva_strana").Range("ULICA")) & ")/T (s_ulica)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("ADR_CISLO") & ")/T (s_cislo)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("PSC") & ")/T (s_psc)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & SKStringConv(Worksheets("Prva_strana").Range("OBEC")) & ")/T (s_obec)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("P_TEL") & ")/T (s_tel_pre)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("TEL") & ")/T (s_tel)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("P_FAX") & ")/T (s_fax_pre)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("FAX") & ")/T (s_fax)>>" + String(1, 13) + String(1, 10) + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("EMAIL") & ")/T (email)>>" + String(1, 13) + String(1, 10) + String(1, 13) + String(1, 10)

    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("ZDEN") & ")/T (z_den)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("ZMESIAC") & ")/T (z_mesiac)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Right(Worksheets("Prva_strana").Range("ZROK"), 2) & ")/T (z_rok)>>" + String(1, 13) + String(1, 10) + String(1, 13) + String(1, 10)

    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("SDEN") & ")/T (s_den)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Worksheets("Prva_strana").Range("SMESIAC") & ")/T (s_mesiac)>>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & Right(Worksheets("Prva_strana").Range("SROK"), 2) & ")/T (s_rok)>>" + String(1, 13) + String(1, 10) + String(1, 13) + String(1, 10)

'   ----------------------------------------------------------------------------------------
'   Step 2: Write report lines
'   ----------------------------------------------------------------------------------------

    For VarI = 1 To 65
        B1 = Round(Worksheets("Suvaha").Range("RD" & CStr(Format(VarI, "000")) & "_1_1"))
        K1 = Round(Worksheets("Suvaha").Range("RD" & CStr(Format(VarI, "000")) & "_1_2"))
        N2 = Round(Worksheets("Suvaha").Range("RD" & CStr(Format(VarI, "000")) & "_2"))
        N3 = Round(Worksheets("Suvaha").Range("RD" & CStr(Format(VarI, "000")) & "_3"))
        
        If (B1 = 0) Then B1 = ""
        If (K1 = 0) Then K1 = ""
        If (N2 = 0) Then N2 = ""
        If (N3 = 0) Then N3 = ""
        
        EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & B1 & ")/T (" & CStr(Format(VarI, "000")) & "_1_1)>>" + String(1, 13) + String(1, 10)
        EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & K1 & ")/T (" & CStr(Format(VarI, "000")) & "_1_2)>>" + String(1, 13) + String(1, 10)
        EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & N2 & ")/T (" & CStr(Format(VarI, "000")) & "_2)>>" + String(1, 13) + String(1, 10)
        EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & N3 & ")/T (" & CStr(Format(VarI, "000")) & "_3)>>" + String(1, 13) + String(1, 10)
    Next VarI

    For VarI = 66 To 125
        
        BU4 = Round(Worksheets("Suvaha").Range("RD" & CStr(Format(VarI, "000")) & "_4"))
        PU5 = Round(Worksheets("Suvaha").Range("RD" & CStr(Format(VarI, "000")) & "_5"))
        
        If (BU4 = 0) Then BU4 = ""
        If (PU5 = 0) Then PU5 = ""
        
        EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & BU4 & ")/T (" & CStr(Format(VarI, "000")) & "_4)>>" + String(1, 13) + String(1, 10)
        EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (" & PU5 & ")/T (" & CStr(Format(VarI, "000")) & "_5)>>" + String(1, 13) + String(1, 10)
    
    Next VarI


'   ----------------------------------------------------------------------------------------
'   Step 3: End of fdf file
'   ----------------------------------------------------------------------------------------
    EXP_TEXT = EXP_TEXT + String(1, 9) + "<< /V (Tla\226ivo vytla\226en\351 z internetu)/T (print)>>" + String(1, 13) + String(1, 10) + String(1, 13) + String(1, 10)
   
    EXP_TEXT = EXP_TEXT + "    ]" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + "    /F (https://www.drsr.sk//priznania/uvpod1-2011.pdf)" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + "    /ID [ <44b17025f3b6a2e62cc72e523924e65d><6b0740370c3e7fa74a0941f180bc468b>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + "  ]" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + "  >>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + ">>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + "endobj" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + "trailer" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + "<<" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + "  /Root 1 0 R" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + ">>" + String(1, 13) + String(1, 10)
    EXP_TEXT = EXP_TEXT + "%%EOF" + String(1, 13) + String(1, 10)
    
'   Create output file as an object in the system with the file name & path from cell FILE_PATH
'   If this file exists, it will be overwritten without questions asked
    
    Export_path = Worksheets("Data").Range("FILE_PATH")
    Dim oStream
    Set oStream = CreateObject("Adodb.Stream")
    oStream.Type = 2 '  TYPE=2 Text data (1 - bINNARY) (0 asci)
    oStream.Charset = "ascii"
    oStream.Open
    oStream.WriteText (EXP_TEXT)
    oStream.SaveToFile Export_path, 2 ' adSaveCreateOverWrite
    oStream.Close

    MsgBox ("D|fffd|ta s|fffd|vahy boli exportovnan|fffd| do s|fffd|boru: " & Export_path & vbNewLine & "N|fffd|sledne bude v|fffd|kaz otvoren|fffd| v programe Adobe Acrobat Reader.")
    
    Dim r As Long, msg As String
          r = StartDoc(Worksheets("Data").Range("FILE_PATH"))
          If r <= 32 Then
              'Error Messages
              Select Case r
                  Case SE_ERR_FNF
                      msg = "File not found"
                  Case SE_ERR_PNF
                      msg = "Path not found"
                  Case SE_ERR_ACCESSDENIED
                      msg = "Access denied"
                  Case SE_ERR_OOM
                      msg = "Out of memory"
                  Case SE_ERR_DLLNOTFOUND
                      msg = "DLL not found"
                  Case SE_ERR_SHARE
                      msg = "A sharing violation occurred"
                  Case SE_ERR_ASSOCINCOMPLETE
                      msg = "Incomplete or invalid file association"
                  Case SE_ERR_DDETIMEOUT
                      msg = "DDE Time out"
                  Case SE_ERR_DDEFAIL
                      msg = "DDE transaction failed"
                  Case SE_ERR_DDEBUSY
                      msg = "DDE busy"
                  Case SE_ERR_NOASSOC
                      msg = "No association for file extension"
                  Case ERROR_BAD_FORMAT
                      msg = "Invalid EXE file or error in EXE image"
                  Case Else
                      msg = "Unknown error." & vbNewLine & "Skontrolujte |fffd|i je nai|fffd|talovan|fffd| Adobe Acrobat Reader a |fffd|i FDF pripona suborov je asociovana s Adobe Acrobat Readerom."
              End Select
              MsgBox msg
          End If
End Sub
'-------------Conversion function for SK diacritics --------------------
Public Function SKStringConv(BeforeConv As String) As String
    
    BeforeConv = Replace(BeforeConv, "|fffd|", "\301")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\341")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\304")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\344")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\225")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\226")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\230")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\232")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\311")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\351")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\315")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\355")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\241")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\242")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\245")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\251")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\252")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\254")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\323")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\363")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\324")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\364")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\203")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\261")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\227")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\235")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\222")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\243")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\332")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\372")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\335")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\375")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\231")
    BeforeConv = Replace(BeforeConv, "|fffd|", "\236")

    SKStringConv = BeforeConv
End Function

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
    pwd = ""
    Worksheets("Data").Protect Password:=pwd, UserInterFaceOnly:=True
    Worksheets("Suvaha").Protect Password:=pwd, UserInterFaceOnly:=True
End Sub

Public Sub OnRefreshBeforeReports()
    Worksheets("Prva_strana").Range("Vstupne_polia_PS") = ""
    Worksheets("SData").Range("BS_FY", "BS_PY") = ""
    Worksheets("Prva_strana").rb_riadne = True ' Uctovna zavierka riadne
    Worksheets("Prva_strana").rb_zostavena = True ' ' Uctovna zavierka zostavena
    Please_Wait_Form.Show
    Please_Wait_Form.Repaint
End Sub

Public Sub OnRefreshAfterReports()

Please_Wait_Form.Repaint
Please_Wait_Form.Hide

With Worksheets("Suvaha")
    .Columns("A:A").ColumnWidth = 10.25
    .Columns("B:B").ColumnWidth = 40
    .Columns("C:C").ColumnWidth = 6.25
    .Columns("D:D").ColumnWidth = 6.63
    .Columns("E:E").ColumnWidth = 7.75
    .Columns("F:F").ColumnWidth = 10.75
    .Columns("G:G").ColumnWidth = 3.63
    .Columns("H:H").ColumnWidth = 7.25
    .Columns("I:I").ColumnWidth = 7.13
    .Columns("J:J").ColumnWidth = 13.13
    .Columns("K:K").ColumnWidth = 1.25
End With

Columns("O:P").EntireColumn.Hidden = True

With Worksheets("Prva_strana").Range("ICO, TEL, P_TEL, P_FAX, DIC")
        .Borders.LineStyle = xlContinuous
        .Borders.Weight = xlThin
        .Borders(xlEdgeBottom).Color = vbBlack
        .Borders(xlEdgeRight).Color = vbBlack
        .Borders(xlEdgeTop).Color = vbBlack
        .Borders(xlEdgeLeft).Color = vbBlack
        .Interior.Color = RGB(255, 255, 192)
        .HorizontalAlignment = xlLeft
    End With
    
    With Worksheets("Data").Range("SERVER_NAME, FILE_PATH")
     .Font.Name = "Verdana"
     .Interior.Color = RGB(255, 255, 192)
     .Borders.LineStyle = xlContinuous
     .Borders(xlEdgeBottom).Color = vbBlack
    End With
   
    Worksheets("Prva_strana").Range("All_info").Font.Name = "Verdana"
    
    '--- Fill first page date range ---
    Worksheets("Prva_strana").Range("ZA_OBD_OD_ROK") = LTrim(Worksheets("Suvaha").Range("fy"))
    Worksheets("Prva_strana").Range("ZA_OBD_DO_ROK") = LTrim(Worksheets("Suvaha").Range("fy"))
    Worksheets("Prva_strana").Range("ZA_OBD_OD") = 1
    Worksheets("Prva_strana").Range("ZA_OBD_DO") = LTrim(Worksheets("Suvaha").Range("per"))
    
    Worksheets("Prva_strana").Range("PR_OBD_OD_ROK") = LTrim(Worksheets("Suvaha").Range("py"))
    Worksheets("Prva_strana").Range("PR_OBD_DO_ROK") = LTrim(Worksheets("Suvaha").Range("py"))
    Worksheets("Prva_strana").Range("PR_OBD_OD") = 1
    Worksheets("Prva_strana").Range("PR_OBD_DO") = LTrim(Worksheets("Suvaha").Range("pper"))
    
    Worksheets("Prva_strana").Range("DEN, ZDEN, SDEN") = Day(Now())
    Worksheets("Prva_strana").Range("MESIAC, ZMESIAC, SMESIAC") = Month(Now())
    Worksheets("Prva_strana").Range("ROK, ZROK, SROK") = Year(Now())
    Worksheets("Prva_strana").Range("ZA_OBD_OD_ROK, ZA_OBD_DO_ROK, ZA_OBD_OD, ZA_OBD_DO").HorizontalAlignment = xlLeft
    
    Please_Wait_Form.Repaint
    Please_Wait_Form.Hide
    
End Sub



' InQuest injected base64 decoded content
' :t^~

INQUEST-PP=macro
