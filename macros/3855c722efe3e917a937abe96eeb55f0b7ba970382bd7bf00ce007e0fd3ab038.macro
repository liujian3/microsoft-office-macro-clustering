Attribute VB_Name = "Main"
Option Explicit

Public Const ProductName As String = "XQCN Editor"
Public Const ProductVersion As String = "1.02"
Public Const CreatorName As String = "|fffd| Malysh S. V."
Public Const ProductDateEng As String = "October/2018"
Public Const ProductDateRus As String = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|/2018"

Public FullFileName As String
Public XqcnFile As String
Public NV_Items As String

Type NV_Type
    All As String
    Value As String
    Lenght As Long
End Type

Public NV_SIM(1) As NV_Type
Public NV_MobileProp As NV_Type
Public Const NullNV_Item = "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 "

Public Const FirstRow = 10      '- |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| NV Items
Public CountItemsSIM0 As Long   '- |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| SIM0
Public CountItemsSIM1 As Long   '- |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| SIM1

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|:
    '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|:
    Public arrNVItemsNumb()        'As String
    '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|:
    Public arrNVItemsObj()         'As MSForms.TextBox

Private isGoToWebsite As Boolean                        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|

Public objRegExp As RegExp, objMatches As MatchCollection, objMatch As Match, objSubmatches As SubMatches

Public Const pattern_MobileProp  As String = "<Stream[^>]*Name=[""']Mobile_Property_Info[""'][\s\S]+?>"
Public Const pattern_NV_Items As String = "<Storage Name=[""']NV_NUMBERED_ITEMS[\""']>[\s\S]+?</Storage>"
Public Const pattern_NV_SIM0  As String = "[ \t]*<Stream[^>]*Name=[""']NV_ITEM_ARRAY[""'].*>"
Public Const pattern_NV_SIM1  As String = "[ \t]*<Stream[^>]*Name=[""']NV_ITEM_ARRAY_SIM_1[""'].*>"
'
'====================================== |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| ============================================
'
'---------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'
'Public Sub ChangeLang()                                        - c|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Public Sub InfoShow()                                          - |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Public Sub FormShow()                                          - |fffd||fffd||fffd||fffd||fffd| |fffd| IMEI...
'Public Sub ChangeLangCaptions(Optional NullParam As Object)    - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
'Public Sub OpenFile()                                          - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| XQCN-|fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'Public Sub SaveFile()                                          - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd|
'Public Sub ClearCells(Optional NullParam As Object)            - |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'Private Sub FillCells()                                        - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| NV_MobileProp |fffd| NV_SIM()
'
'---------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'
'Public Sub ReChangeTBox(ByRef tBoxFrom As MSForms.TextBox, ByRef tBoxTo As MSForms.TextBox, _
                Optional TypeCoding As Byte)                    - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Public Sub SetMainTBox(Optional isNewValues As Boolean)        - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ESN/MEID/IMEI
'

'=================================== |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| =========================================

'|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|):
Public Sub ChangeLang()
    wshData.lBoxLang.Visible = Not wshData.lBoxLang.Visible '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ListBox
    If wshData.lBoxLang.Visible Then _
            wshData.lBoxLang.Activate                       '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
End Sub

'|fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|):
Public Sub InfoShow()
    Dim WshShell As Object
    
    formMain.multiPg.Value = wshData.lBoxLang.ListIndex + 1
    formMain.btOk.Enabled = False
    formMain.Show
    
    If Not isGoToWebsite Then
        Set WshShell = CreateObject("WScript.Shell")
        WshShell.Run "https://money.yandex.ru/to/410011073385318"  '|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|
        isGoToWebsite = True
    End If
End Sub

'|fffd||fffd||fffd||fffd||fffd| |fffd| IMEI...
'(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|):
Public Sub FormShow()
    formMain.multiPg.Value = 0
    formMain.Show
End Sub

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Public Sub ChangeLangCaptions(Optional NullParam As Object)
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    formMain.isEnableEvents = False
    
    If wshData.lBoxLang.ListIndex Then
        '|fffd||fffd||fffd||fffd| Excel:
        wshData.Shapes.Range(Array("Change_Lang")).TextFrame2.TextRange.Characters.Text = "|fffd||fffd||fffd||fffd|"
        wshData.Shapes.Range(Array("Programm_Info")).TextFrame2.TextRange.Characters.Text = "|fffd||fffd||fffd||fffd|"
        wshData.Shapes.Range(Array("Open_File")).TextFrame2.TextRange.Characters.Text = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| xqcn-|fffd||fffd||fffd||fffd|"
        wshData.Shapes.Range(Array("Save_File")).TextFrame2.TextRange.Characters.Text = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| xqcn-|fffd||fffd||fffd||fffd|"
        wshData.Shapes.Range(Array("Form_Show")).TextFrame2.TextRange.Characters.Text = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" _
                & vbCrLf & "ESN/MEID/IMEI"
        wshData.Range("FileFieldName") = "|fffd||fffd||fffd||fffd|:"
        '|fffd||fffd||fffd||fffd||fffd|:
        formMain.btOk.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        formMain.btClose.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        formMain.frmMain.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ESN/MEID/IMEI"
        formMain.lblSource.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        formMain.lblResult.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        formMain.lblAlgoritm.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        formMain.lblLuhna.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| IMEI |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|"
        formMain.btLuhna.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        formMain.lblSet.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        formMain.btSet1.Caption = "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
        formMain.btSet2.Caption = "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| ""NV Items"""
        formMain.frmManually.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| NV Items |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        formMain.lblManually.Caption = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|..."
        formMain.frmAux.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        formMain.lblAux.Caption = "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| EFS Explorer (|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| QPST)"
        formMain.btCreate550.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| ""550"" |fffd| IMEI1"
    Else
        '|fffd||fffd||fffd||fffd| Excel:
        wshData.Shapes.Range(Array("Change_Lang")).TextFrame2.TextRange.Characters.Text = "Language"
        wshData.Shapes.Range(Array("Programm_Info")).TextFrame2.TextRange.Characters.Text = "Info"
        wshData.Shapes.Range(Array("Open_File")).TextFrame2.TextRange.Characters.Text = "Open xqcn-file"
        wshData.Shapes.Range(Array("Save_File")).TextFrame2.TextRange.Characters.Text = "Save xqcn-file"
        wshData.Shapes.Range(Array("Form_Show")).TextFrame2.TextRange.Characters.Text = "Change" _
                & vbCrLf & "ESN/MEID/IMEI"
        wshData.Range("FileFieldName") = "File:"
        '|fffd||fffd||fffd||fffd||fffd|:
        formMain.btOk.Caption = "Apply"
        formMain.btClose.Caption = "Close"
        formMain.frmMain.Caption = "Edit/add the ESN/MEID/IMEI"
        formMain.lblSource.Caption = "Source"
        formMain.lblResult.Caption = "Result"
        formMain.lblAlgoritm.Caption = "Encoding algorithm"
        formMain.lblLuhna.Caption = "Calculation of the last digit of the IMEI by the Luhn algorithm"
        formMain.btLuhna.Caption = "Calculate"
        formMain.lblSet.Caption = "Fill in the fields with values"
        formMain.btSet1.Caption = "from the downloaded file"
        formMain.btSet2.Caption = "from the table ""NV Items"""
        formMain.frmManually.Caption = "Manual change the values of NV Items"
        formMain.lblManually.Caption = "It will be implemented in the following versions..."
        formMain.frmAux.Caption = "Additionally"
        formMain.lblAux.Caption = "For the EFS Explorer utility (from QPST)"
        formMain.btCreate550.Caption = "Create a file ""550"" with IMEI1"
    End If
    formMain.isEnableEvents = True
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    ThisWorkbook.Saved = True
End Sub

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| XQCN-|fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|:
Public Sub OpenFile()
    Dim objFD As FileDialog
    Dim objFSO As FileSystemObject, objFile As File, objTS As TextStream
    Dim str1 As String, str2 As String
    Dim ErrNumb As Long, ErrText As String, ErrProcName As String
    ErrProcName = "OpenFile"

    On Error GoTo ErrorHandler
    
    '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|:
    FullFileName = Application.GetOpenFilename( _
            "xqcn-files, *.xqcn, All files, *.*", 1, _
            IIf(wshData.lBoxLang.ListIndex, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| xqcn-|fffd||fffd||fffd||fffd||fffd|", "Enter the name of the xqcn-file"))
    If FullFileName = "False" Then FullFileName = "": Exit Sub      '- |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd|" - |fffd||fffd||fffd||fffd||fffd|
    
    Set objFSO = CreateObject("Scripting.FileSystemObject")
    Set objFile = objFSO.GetFile(FullFileName)
    Set objTS = objFile.OpenAsTextStream(1, 0)      '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ASCII
    XqcnFile = objTS.ReadAll()                      '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    
    ErrNumb = ClearCells()                          '- "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If ErrNumb <> 0 Then ErrProcName = "ClearCells": Err.Raise (ErrNumb)
    On Error GoTo 0
    
'    Set objRegExp = CreateObject("VBScript.RegExp")
    If objRegExp Is Nothing Then Set objRegExp = New RegExp

    '-------------------------- NV_MobileProp --------------------------
    'NV_MobileProp.All:
    objRegExp.MultiLine = False
    objRegExp.Pattern = pattern_MobileProp
    Set objMatch = Nothing
    On Error Resume Next
    Set objMatch = objRegExp.Execute(XqcnFile).Item(0)
    NV_MobileProp.All = objMatch.Value
    If NV_MobileProp.All = "" Then Err.Number = 10000: GoTo ErrorHandler
    On Error GoTo 0
    
    'NV_MobileProp.Value:
    objRegExp.Pattern = "Value=[""']([^""']*)[""']"
    Set objMatch = Nothing
    On Error Resume Next
    Set objMatch = objRegExp.Execute(NV_MobileProp.All).Item(0)
    NV_MobileProp.Value = Trim(objMatch.SubMatches(0)) & " "
    If NV_MobileProp.Value = "" Then Err.Number = 10000: GoTo ErrorHandler
    On Error GoTo 0
    
    'NV_MobileProp.Lenght:
    objRegExp.Pattern = "Length=[""']([^""']*)[""']"
    Set objMatch = Nothing
    On Error Resume Next
    Set objMatch = objRegExp.Execute(NV_MobileProp.All).Item(0)
    NV_MobileProp.Lenght = objMatch.SubMatches(0)
    If NV_MobileProp.Lenght = 0 Then Err.Number = 10000: GoTo ErrorHandler
    On Error GoTo 0

    '--------------------------- NV_Items ---------------------------
    objRegExp.MultiLine = True
'    objRegExp.Global = True
    
    objRegExp.Pattern = pattern_NV_Items
    Set objMatch = Nothing
    On Error Resume Next
    Set objMatch = objRegExp.Execute(XqcnFile).Item(0)
    NV_Items = objMatch
    If NV_Items = "" Then Err.Number = 10000: GoTo ErrorHandler
    On Error GoTo 0
    
    '--------------------------- SIM 0 ---------------------------
    'NV_SIM(0).All:
    objRegExp.Pattern = pattern_NV_SIM0
    Set objMatch = Nothing
    On Error Resume Next
    Set objMatch = objRegExp.Execute(NV_Items).Item(0)
    NV_SIM(0).All = objMatch
    If NV_SIM(0).All = "" Then Err.Number = 10000: GoTo ErrorHandler
    On Error GoTo 0
    
    'NV_SIM(0).Value:
    objRegExp.Pattern = "Value=[""']([^""']*)[""']"
    Set objMatch = Nothing
    On Error Resume Next
    Set objMatch = objRegExp.Execute(NV_SIM(0).All).Item(0)
    NV_SIM(0).Value = Trim(objMatch.SubMatches(0)) & " "
    If NV_SIM(0).Value = "" Then Err.Number = 10000: GoTo ErrorHandler
    On Error GoTo 0
    
    'NV_SIM(0).Lenght:
    objRegExp.Pattern = "Length=[""']([^""']*)[""']"
    Set objMatch = Nothing
    On Error Resume Next
    Set objMatch = objRegExp.Execute(NV_SIM(0).All).Item(0)
    NV_SIM(0).Lenght = objMatch.SubMatches(0)
    If NV_SIM(0).Lenght = 0 Then Err.Number = 10000: GoTo ErrorHandler
    On Error GoTo 0

    '--------------------------- SIM 1 ---------------------------
    'NV_SIM(1).All:
    objRegExp.Pattern = pattern_NV_SIM1
    Set objMatch = Nothing
    On Error Resume Next
    Set objMatch = objRegExp.Execute(NV_Items).Item(0)
    NV_SIM(1).All = objMatch
'    If NV_SIM(0).All = "" Then Err.Number = 10000: GoTo ErrorHandler
    On Error GoTo 0
    
    'NV_SIM(1).Value:
    objRegExp.Pattern = "Value=[""']([^""']*)[""']"
    Set objMatch = Nothing
    On Error Resume Next
    Set objMatch = objRegExp.Execute(NV_SIM(1).All).Item(0)
    NV_SIM(1).Value = Trim(objMatch.SubMatches(0)) & " "
'    If NV_SIM(1).Value = "" Then Err.Number = 10000: GoTo ErrorHandler
    On Error GoTo 0
    
    'NV_SIM(1).Lenght:
    objRegExp.Pattern = "Length=[""']([^""']*)[""']"
    Set objMatch = Nothing
    On Error Resume Next
    Set objMatch = objRegExp.Execute(NV_SIM(1).All).Item(0)
    NV_SIM(1).Lenght = objMatch.SubMatches(0)
'    If NV_SIM(1).Lenght = 0 Then Err.Number = 10000: GoTo ErrorHandler
    On Error GoTo 0
    '------------------------------------------------------------

    On Error GoTo ErrorHandler
    ErrNumb = FillCells()               '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| Excel'a
    If ErrNumb <> 0 Then ErrProcName = "FillCells": Err.Raise (ErrNumb)
    On Error GoTo 0
    
    Call SetMainTBox                    '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    
    objTS.Close
    Exit Sub

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|:
ErrorHandler:
    objTS.Close
    If Err.Number = 10000 Then
        ErrText = IIf(wshData.lBoxLang.ListIndex, _
                "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| xqcn-|fffd||fffd||fffd||fffd||fffd|!", "Incorrect xqcn-file format!")
    Else
        ErrText = "ERROR in procedure: " & ErrProcName & vbCrLf _
                    & "    Number: " & Err.Number & vbCrLf _
                    & "    Description: " & Err.Description
    End If
    Call ClearCells                             '- "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    MsgBox ErrText, vbCritical, ProductName
End Sub

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd|:
Public Sub SaveFile()
    Dim objFD As FileDialog
    Dim objFSO As FileSystemObject, objFile As File, objTS As TextStream
    Dim NVItemNumb As String, NVItemIndex As String, Data As String
    Dim FullFileNameNew As String, XqcnFile_New As String, NV_Items_New As String
    Dim NV_SIM_New(1) As NV_Type, NV_MobileProp_New As NV_Type
    Dim str As String, ErrText As String, ErrProcName As String
    Dim i As Long
    Dim isSaveFile As Boolean, isOk As Long, TMP
    ErrProcName = "SaveFile"
    
    On Error GoTo ErrorHandler
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    
    Set objFSO = CreateObject("Scripting.FileSystemObject")

    '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|:
    FullFileNameNew = Application.GetSaveAsFilename(objFSO.GetFileName(FullFileName), _
            "xqcn-files, *.xqcn, All files, *.*", 1, _
            IIf(wshData.lBoxLang.ListIndex, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| xqcn-|fffd||fffd||fffd||fffd||fffd|", "Enter the name of the xqcn-file"))
    isSaveFile = FullFileNameNew <> "False"
    If Not isSaveFile Then GoTo ErrorHandler
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|:
    If objFSO.FileExists(FullFileNameNew) Then
        isOk = MsgBox(IIf(wshData.lBoxLang.ListIndex, _
                        "|fffd||fffd||fffd||fffd| """ & objFSO.GetFileName(FullFileNameNew) & """ |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|." & vbCrLf & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|?", _
                        "File """ & objFSO.GetFileName(FullFileNameNew) & """ already exists." & vbCrLf & "Replace?"), _
                    vbExclamation + vbOKCancel, ProductName)
        isSaveFile = Not CBool(isOk - 1)
        If Not isSaveFile Then GoTo ErrorHandler
        Set objFile = objFSO.GetFile(FullFileNameNew)
        Set objTS = objFile.OpenAsTextStream(2, 0)      '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ASCII
    Else
        Set objTS = objFSO.CreateTextFile(FullFileNameNew, True)
    End If
    
    objRegExp.MultiLine = False
    
    '-------------------------- NV_MobileProp --------------------------
    'ESN, Phone model, NV major, NV minor:
    NV_MobileProp_New.Value = _
            FlipHex(AddZeros(wshData.Range("MobileProp").Cells(1, 1), 4), True) & _
            FlipHex(AddZeros(Dec2Hex(wshData.Range("MobileProp").Cells(2, 1)), 2), True) & _
            AddZeros(Dec2Hex(wshData.Range("MobileProp").Cells(3, 1)), 1, True) & _
            AddZeros(Dec2Hex(wshData.Range("MobileProp").Cells(3, 3)), 1, True)
    
    '|fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| SW version:
    str = wshData.Range("MobileProp").Cells(4, 1)
    NV_MobileProp_New.Value = NV_MobileProp_New.Value & FlipHex(AddZeros(Dec2Hex(Len(str)), 2), True)
    For i = 1 To Len(str)
        NV_MobileProp_New.Value = NV_MobileProp_New.Value & AddZeros(Hex(Asc(Mid(str, i, 1))), 1) & " "
    Next
    
    '|fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| Client name:
    str = wshData.Range("MobileProp").Cells(5, 1)
    NV_MobileProp_New.Value = NV_MobileProp_New.Value & FlipHex(AddZeros(Dec2Hex(Len(str)), 2), True)
    For i = 1 To Len(str)
        NV_MobileProp_New.Value = NV_MobileProp_New.Value & AddZeros(Hex(Asc(Mid(str, i, 1))), 1) & " "
    Next
    
    NV_MobileProp_New.Lenght = Len(NV_MobileProp_New.Value) / 3
    
    NV_MobileProp_New.Value = "Value='" & NV_MobileProp_New.Value & "'"
    objRegExp.Pattern = "Value=[""']([^""']*)[""']"
    NV_MobileProp_New.All = objRegExp.Replace(NV_MobileProp.All, NV_MobileProp_New.Value)
    
    objRegExp.Pattern = "Length=[""']([^""']*)[""']"
    NV_MobileProp_New.All = objRegExp.Replace(NV_MobileProp_New.All, "Length='" & NV_MobileProp_New.Lenght & "'")
    
    
    objRegExp.MultiLine = True
    objRegExp.Pattern = pattern_MobileProp
    XqcnFile_New = objRegExp.Replace(XqcnFile, NV_MobileProp_New.All)
    
    '--------------------------- SIM 0 ---------------------------
    objRegExp.MultiLine = False
    For i = 0 To CountItemsSIM0 - 1
        '|fffd||fffd||fffd||fffd||fffd|:
        TMP = Intersect(wshData.Range("NV_Items"), wshData.Range("NV_Items_|fffd|")).Rows(i + 1)
        If TMP = Empty Then
            CountItemsSIM0 = CountItemsSIM0 - 1
            GoTo NextSIM0
        End If
        NVItemNumb = Dec2Hex(Val(TMP))
        NVItemNumb = FlipHex(String(4 - Len(NVItemNumb), "0") & NVItemNumb, True)
        
        'Index:
        NVItemIndex = Dec2Hex(Mid(Intersect(wshData.Range("NV_Items"), wshData.Range("NV_Items_Index")).Rows(i + 1), 6))
        NVItemIndex = FlipHex(String(4 - Len(NVItemIndex), "0") & NVItemIndex, True)
        
        '|fffd||fffd||fffd||fffd||fffd||fffd|:
        Data = Intersect(wshData.Range("NV_Items"), wshData.Range("NV_Items_Data")).Rows(i + 1)
       
        NV_SIM_New(0).Value = NV_SIM_New(0).Value & "88 00 01 00 " & NVItemNumb & NVItemIndex & Data
NextSIM0:
    Next
    NV_SIM_New(0).Value = "Value='" & NV_SIM_New(0).Value & "'"
    objRegExp.Pattern = "Value=[""']([^""']*)[""']"
    NV_SIM_New(0).All = objRegExp.Replace(NV_SIM(0).All, NV_SIM_New(0).Value)
    
    NV_SIM_New(0).Lenght = CountItemsSIM0 * 136
    objRegExp.Pattern = "Length=[""']([^""']*)[""']"
    NV_SIM_New(0).All = objRegExp.Replace(NV_SIM_New(0).All, "Length='" & NV_SIM_New(0).Lenght & "'")
    
    objRegExp.Pattern = pattern_NV_SIM0
    NV_Items_New = objRegExp.Replace(NV_Items, NV_SIM_New(0).All)
    
    objRegExp.MultiLine = True
    objRegExp.Pattern = pattern_NV_Items
    XqcnFile_New = objRegExp.Replace(XqcnFile_New, NV_Items_New)
    
    '--------------------------- SIM 1 ---------------------------
    objRegExp.MultiLine = False
    For i = 0 To CountItemsSIM1 - 1
        '|fffd||fffd||fffd||fffd||fffd|:
        TMP = Intersect(wshData.Range("NV_Items"), wshData.Range("NV_Items_|fffd|")).Rows(i + CountItemsSIM0 + 1)
        If TMP = Empty Then
            CountItemsSIM1 = CountItemsSIM1 - 1
            GoTo NextSIM1
        End If
        NVItemNumb = Dec2Hex(Val(TMP))
        NVItemNumb = FlipHex(String(4 - Len(NVItemNumb), "0") & NVItemNumb, True)
        
        'Index:
        NVItemIndex = Dec2Hex(Val(Intersect(wshData.Range("NV_Items"), wshData.Range("NV_Items_Index")).Rows(i + CountItemsSIM0 + 1)))
        NVItemIndex = FlipHex(String(4 - Len(NVItemIndex), "0") & NVItemIndex, True)
        
        '|fffd||fffd||fffd||fffd||fffd||fffd|:
        Data = Intersect(wshData.Range("NV_Items"), wshData.Range("NV_Items_Data")).Rows(i + CountItemsSIM0 + 1)
       
        NV_SIM_New(1).Value = NV_SIM_New(1).Value & "88 00 01 00 " & NVItemNumb & NVItemIndex & Data
NextSIM1:
    Next
    NV_SIM_New(1).Value = "Value='" & NV_SIM_New(1).Value & "'"
    objRegExp.Pattern = "Value=[""']([^""']*)[""']"
    NV_SIM_New(1).All = objRegExp.Replace(NV_SIM(1).All, NV_SIM_New(1).Value)
    
    NV_SIM_New(1).Lenght = CountItemsSIM1 * 136
    objRegExp.Pattern = "Length=[""']([^""']*)[""']"
    NV_SIM_New(1).All = objRegExp.Replace(NV_SIM_New(1).All, "Length='" & NV_SIM_New(1).Lenght & "'")
    
    objRegExp.Pattern = pattern_NV_SIM1
    NV_Items_New = objRegExp.Replace(NV_Items_New, NV_SIM_New(1).All)
    
    objRegExp.MultiLine = True
    objRegExp.Pattern = pattern_NV_Items
    XqcnFile_New = objRegExp.Replace(XqcnFile_New, NV_Items_New)
    '-------------------------------------------------------------

    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|:
    objTS.Write (XqcnFile_New)
    objTS.Close
    
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|:
ErrorHandler:
    If Err.Number <> 0 Then
        ErrText = IIf(wshData.lBoxLang.ListIndex, _
                    "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| xqcn-|fffd||fffd||fffd||fffd|!", "Failed to save xqcn-file!") & vbCrLf & vbCrLf & _
                "ERROR in procedure: " & ErrProcName & vbCrLf & _
                "    Number: " & Err.Number & vbCrLf & _
                "    Description: " & Err.Description
        MsgBox ErrText, vbCritical, ProductName
    ElseIf isSaveFile Then
        NV_MobileProp = NV_MobileProp_New
        NV_SIM(0) = NV_SIM_New(0)
        NV_SIM(1) = NV_SIM_New(1)
        NV_Items = NV_Items_New
        XqcnFile = XqcnFile_New
        FullFileName = FullFileNameNew
        wshData.Range("FullFileName") = FullFileNameNew     '- |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        
        Call SortNVItemsTable                               '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        
    End If
    
    ThisWorkbook.Saved = True
    Application.ScreenUpdating = True
    Application.EnableEvents = True
End Sub

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|:
Public Function ClearCells() As Long
    Dim NV_Null As NV_Type
    
    On Error GoTo ErrorHandler
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    
    NV_Items = ""
    NV_SIM(0) = NV_Null
    NV_MobileProp = NV_Null
    CountItemsSIM0 = 0
    CountItemsSIM1 = 0
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
    If wshData.FilterMode Then wshData.ShowAllData
    
    wshData.Range("FullFileName") = Empty
    wshData.Range("MobileProp").ClearContents
    wshData.Range("NV_Items").ClearContents
    
    wshAux.Range("AUX_CountItemsSIM0") = 0
    wshAux.Range("AUX_CountItemsSIM1") = 0
    wshAux.Range("AUX_CountItemsMobileProp") = 0
    
    wshAux.Range("AUX_tBoxValues").ClearContents
    wshAux.Range("AUX_tBoxValuesNew").ClearContents
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
    With wshData.Range("NV_Items").Interior
        .Pattern = xlSolid
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    wshData.Range("NV_Items").Font.ColorIndex = xlAutomatic
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|:
'    ActiveWindow.ScrollRow = FirstRow

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|:
ErrorHandler:
    ClearCells = Err.Number
    ThisWorkbook.Saved = True
    Application.ScreenUpdating = True
    Application.EnableEvents = True
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| NV_MobileProp |fffd| NV_SIM():
Public Function FillCells() As Long
    Dim i As Long, Count As Long
    Dim str As String, Item As String, Data As String, TMP As String
    Dim rng As Range
    Dim NVItemNumb
    
    On Error GoTo ErrorHandler
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    
    If objRegExp Is Nothing Then Set objRegExp = New RegExp
    objRegExp.MultiLine = False
    
    wshData.Range("FullFileName") = FullFileName
    
    'NV_MobileProp:
    wshData.Range("MobileProp").Cells(1, 1) = _
            FlipHex(Mid(NV_MobileProp.Value, 1, 4 * 3))                   '- ESN (|fffd||fffd||fffd||fffd||fffd||fffd| 4 |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| 3 |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd| |fffd|.|fffd|.)
    wshData.Range("MobileProp").Cells(2, 1) = _
            Hex2Dec(FlipHex(Mid(NV_MobileProp.Value, 4 * 3 + 1, 2 * 3)))  '- Phone model
    wshData.Range("MobileProp").Cells(3, 1) = _
            Hex2Dec(FlipHex(Mid(NV_MobileProp.Value, 6 * 3 + 1, 2)))      '- NV major
    wshData.Range("MobileProp").Cells(3, 3) = _
            Hex2Dec(FlipHex(Mid(NV_MobileProp.Value, 7 * 3 + 1, 2)))      '- NV minor
    
    str = ""
    Count = Hex2Dec(Mid(NV_MobileProp.Value, 8 * 3 + 1, 2))
    For i = 0 To Count - 1
        str = str & Chr("&H" & Mid(NV_MobileProp.Value, (i + 10) * 3 + 1, 2))
    Next
    wshData.Range("MobileProp").Cells(4, 1) = str                         '- SW version
    
    str = ""
    For i = Count + 2 To NV_MobileProp.Lenght - 11
        str = str & Chr("&H" & Mid(NV_MobileProp.Value, (i + 10) * 3 + 1, 2))
    Next
    wshData.Range("MobileProp").Cells(5, 1) = Trim(str)                   '- Client name
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| AUX:
    wshAux.Range("AUX_CountItemsMobileProp") = NV_MobileProp.Lenght
    
    'NV_SIM 0:
    CountItemsSIM0 = NV_SIM(0).Lenght / 136
    wshAux.Range("AUX_CountItemsSIM0") = CountItemsSIM0             '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| AUX
    
    For i = 0 To CountItemsSIM0 - 1
        '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 136 |fffd||fffd||fffd||fffd||fffd||fffd|:
        Item = Mid(NV_SIM(0).Value, i * 3 * 136 + 1, 136 * 3)
        '|fffd||fffd||fffd||fffd||fffd| (|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|):
        NVItemNumb = Val("&H" & Mid(Item, 5 * 3 + 1, 2) & Mid(Item, 4 * 3 + 1, 2))
        
        NVItemNumb = Space(5 - Len(NVItemNumb)) & NVItemNumb
        Intersect(wshData.Range("NV_Items"), wshData.Range("NV_Items_|fffd|")).Rows(i + 1) = _
                NVItemNumb
        '|fffd||fffd||fffd|:
        Intersect(wshData.Range("NV_Items"), wshData.Range("NV_Items_Name")).Rows(i + 1) = _
                "=VLOOKUP(" & NVItemNumb & ", AUX_NV_Items, 2, FALSE)"
        'Index:
        Intersect(wshData.Range("NV_Items"), wshData.Range("NV_Items_Index")).Rows(i + 1) = _
                "Index" & Val("&H" & Mid(Item, 7 * 3 + 1, 2) & Mid(Item, 6 * 3 + 1, 2))
        '|fffd||fffd||fffd||fffd||fffd||fffd|:
        Data = Mid(Item, 8 * 3 + 1)
        Intersect(wshData.Range("NV_Items"), wshData.Range("NV_Items_Data")).Rows(i + 1) = Data
        
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| AUX:
        objRegExp.Pattern = "(00 )*$"
        If NVItemNumb = arrNVItemsNumb(1) Or NVItemNumb = arrNVItemsNumb(2) Then
        'ESN:
            str = objRegExp.Replace(Data, "")
            If str = "" Then str = "00 "
            wshAux.Range("AUX_tBoxValues").Rows(1) = str
            
        ElseIf NVItemNumb = arrNVItemsNumb(3) Or NVItemNumb = arrNVItemsNumb(4) Then
        'MEID:
            str = objRegExp.Replace(Data, "")
            If str = "" Then str = "00 "
            wshAux.Range("AUX_tBoxValues").Rows(2) = str
            
        ElseIf NVItemNumb = arrNVItemsNumb(5) Then
        'IMEI 0:
            str = objRegExp.Replace(Data, "")
            If str = "" Then
                str = "00 "
            ElseIf Len(str) < 9 * 3 Then
                str = Left(Data, 9 * 3)        '- |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 9 |fffd||fffd||fffd||fffd||fffd||fffd|
            End If
            wshAux.Range("AUX_tBoxValues").Rows(3) = str
        End If
        
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|:
        If InStr(Join(arrNVItemsNumb, ";") & ";", NVItemNumb & ";") Then
            Set rng = wshData.Range("NV_Items").Rows(i + 1)
            If Not rng Is Nothing Then
                rng.Font.Color = -4165632
            End If
        End If
    Next
    
    If CountItemsSIM0 > 0 Then
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| SIM 0:
        With wshData.Range("NV_Items").Resize(CountItemsSIM0).Interior
            .Pattern = xlSolid
            .PatternColorIndex = xlAutomatic
            .ThemeColor = xlThemeColorAccent3
            .TintAndShade = 0.799981688894314
            .PatternTintAndShade = 0
        End With
    End If
    
    'NV_SIM 1:
    CountItemsSIM1 = NV_SIM(1).Lenght / 136
    wshAux.Range("AUX_CountItemsSIM1") = CountItemsSIM1             '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| AUX
    
    For i = 0 To CountItemsSIM1 - 1
        '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 136 |fffd||fffd||fffd||fffd||fffd||fffd|:
        Item = Mid(NV_SIM(1).Value, i * 3 * 136 + 1, 136 * 3)
        '|fffd||fffd||fffd||fffd||fffd| (|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|):
        NVItemNumb = Val("&H" & Mid(Item, 5 * 3 + 1, 2) & Mid(Item, 4 * 3 + 1, 2))
        NVItemNumb = Space(5 - Len(NVItemNumb)) & NVItemNumb
        Intersect(wshData.Range("NV_Items"), wshData.Range("NV_Items_|fffd|")).Rows(i + CountItemsSIM0 + 1) = _
                NVItemNumb & vbCrLf & "(SIM 1)"
        '|fffd||fffd||fffd|:
        Intersect(wshData.Range("NV_Items"), wshData.Range("NV_Items_Name")).Rows(i + CountItemsSIM0 + 1) = _
                "=VLOOKUP(" & NVItemNumb & ", AUX_NV_Items, 2, FALSE)"
        'Index:
        wshData.Range("NV_Items").Cells(1 + i + CountItemsSIM0, 3) = _
                "Index" & Val("&H" & Mid(Item, 7 * 3 + 1, 2) & Mid(Item, 6 * 3 + 1, 2))
        '|fffd||fffd||fffd||fffd||fffd||fffd|:
        Data = Mid(Item, 8 * 3 + 1)
        wshData.Range("NV_Items").Cells(1 + i + CountItemsSIM0, 4) = Data
        
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| AUX:
        objRegExp.Pattern = "(00 )*$"
        If NVItemNumb = arrNVItemsNumb(5) Then
        'IMEI 1:
            str = objRegExp.Replace(Data, "")
            If str = "" Then
                str = "00 "
            ElseIf Len(str) < 9 * 3 Then
                str = Left(Data, 9 * 3)        '- |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 9 |fffd||fffd||fffd||fffd||fffd||fffd|
            End If
            wshAux.Range("AUX_tBoxValues").Rows(4) = str
        End If
        
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| SIM1:
        If NVItemNumb = arrNVItemsNumb(5) Then
            Set rng = Intersect(wshData.Range("NV_Items"), wshData.Range("NV_Items_|fffd|")).Rows(i + CountItemsSIM0 + 1).EntireRow
            If Not rng Is Nothing Then
                rng.Font.Color = -4165632
            End If
        End If
    Next
    
    If CountItemsSIM1 > 0 Then
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| SIM 1:
        With wshData.Range("NV_Items").Offset(CountItemsSIM0).Resize(CountItemsSIM1).Interior
            .Pattern = xlSolid
            .PatternColorIndex = xlAutomatic
            .ThemeColor = xlThemeColorAccent6
            .TintAndShade = 0.799981688894314
            .PatternTintAndShade = 0
        End With
    End If
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
    Call SortNVItemsTable
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|:
ErrorHandler:
    FillCells = Err.Number
    ThisWorkbook.Saved = True
    Application.ScreenUpdating = True
    Application.EnableEvents = True
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| NVItems:
Public Sub SortNVItemsTable()
    wshData.Sort.SortFields.Clear
    wshData.Sort.SortFields.Add Key:=wshData.Range("NV_Items_|fffd|"), _
            SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortTextAsNumbers
    wshData.Sort.SortFields.Add Key:=wshData.Range("NV_Items_Index"), _
            SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    
    With wshData.Sort
        .SetRange wshData.Range("NV_Items")
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With

End Sub

'=================================== |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| =========================================

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
Public Sub ReChangeTBox(ByRef tBoxFrom As MSForms.TextBox, ByRef tBoxTo As MSForms.TextBox, _
                Optional TypeCoding As Byte)
    Dim isOk As Boolean
    Dim strFrom As String, strTo As String, ch As String, strTmp As String
    Dim ErrNumber As Long, SelStart As Long
    Dim TMP
    
    If Not formMain.isEnableEvents Then Exit Sub
    formMain.isEnableEvents = False
    
    If objRegExp Is Nothing Then Set objRegExp = New RegExp

    If Len(tBoxFrom.Value) = 0 Then
    '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|:
        formMain.strTBoxLastValue = ""
        tBoxFrom.Value = ""
        tBoxTo.Value = ""
        GoTo EndOfSub
    ElseIf tBoxFrom.MaxLength - Len(tBoxFrom.Value) = 0 Then
    '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
        tBoxFrom.Value = formMain.strTBoxLastValue
    ElseIf (formMain.strTBoxLastValue & " ") = tBoxFrom.Value Then
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
        tBoxFrom.Value = formMain.strTBoxLastValue
    End If
    
    If (TypeCoding < 1) Or (TypeCoding = 2) Then
    '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| tBoxESN, tBoxESN_flip, tBoxMEID, tBoxMEID_flip, tBoxIMEI0_flip, tBoxIMEI1_flip:
        If (Len(formMain.strTBoxLastValue) - Len(tBoxFrom.Value) = 1) And formMain.KeyCodeTBox = 8 Then
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1 |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| <-:
            SelStart = tBoxFrom.SelStart
            strFrom = tBoxFrom.Text
            If ((SelStart + 1) Mod 3) = 0 And SelStart <> 0 Then
                strFrom = Mid(strFrom, 1, SelStart - 1) & Mid(strFrom, SelStart + 1)
                SelStart = SelStart - 1
            End If
            isOk = True
            formMain.KeyCodeTBox = 0
        ElseIf (Len(formMain.strTBoxLastValue) - Len(tBoxFrom.Value) = 1) And formMain.KeyCodeTBox = 46 Then
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1 |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| Delete:
            SelStart = tBoxFrom.SelStart
            strFrom = tBoxFrom.Text
            If ((SelStart + 1) Mod 3) = 0 And SelStart <> 0 Then
                strFrom = Mid(strFrom, 1, SelStart) & Mid(strFrom, SelStart + 2)
                SelStart = SelStart + 1
            End If
            isOk = True
            formMain.KeyCodeTBox = 0
        Else
        '|fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
            
'            For i = 1 To Len(tBoxFrom.Value)
'                ch = Mid(tBoxFrom.Value, i, 1)
'                isOk = ch Like "[A-F0-9 ]"
'                strFrom = strFrom & ch
'                If Not isOk Then Exit For
'            Next
            objRegExp.MultiLine = False
            objRegExp.Pattern = "^[0-9a-fA-F ]+?$"
            strFrom = tBoxFrom.Value
            isOk = objRegExp.Test(strFrom)
            If isOk _
                    Then SelStart = Len(FlipHex(Left(tBoxFrom, tBoxFrom.SelStart), True, True)) _
                    Else SelStart = tBoxFrom.SelStart - 1
            If SelStart < 0 Then SelStart = 0
        End If
        
        'Main:
        strTo = ""
        If isOk Then
            If TypeCoding < 1 Then
            '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| tBoxESN, tBoxESN_flip, tBoxMEID, tBoxMEID_flip:
                formMain.strTBoxLastValue = FlipHex(strFrom, True, True)
                tBoxFrom.Value = formMain.strTBoxLastValue
                tBoxFrom.SelStart = SelStart
                strTo = FlipHex(formMain.strTBoxLastValue, True)
                If strTo <> "" Then _
                        strTo = IIf(Len(strTo) Mod 3 = 0, strTo, "0" & strTo)
            Else
            '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| tBoxIMEI0_flip, tBoxIMEI1_flip:
                strFrom = FlipHex(strFrom, True, True)
'                strTo = Decoding(strFrom, formMain.cBoxAlgoritm.ListIndex)
                strTmp = FlipHex(strFrom, True)
                strTmp = IIf(Len(strTmp) Mod 3 = 0, strTmp, "0" & strTmp)
                strTo = Decoding(FlipHex(strTmp, True), formMain.cBoxAlgoritm.ListIndex)
                If strTo <> "-6" Then       '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    formMain.strTBoxLastValue = strFrom
                    tBoxFrom.Value = strFrom
                Else
                    tBoxFrom.Value = formMain.strTBoxLastValue
                    strTo = Decoding(formMain.strTBoxLastValue, formMain.cBoxAlgoritm.ListIndex)
                    tBoxFrom.SelStart = SelStart
                End If
            End If
            tBoxTo.Value = strTo
        Else
            tBoxFrom.Value = formMain.strTBoxLastValue
            tBoxFrom.SelStart = SelStart
        End If

    ElseIf TypeCoding = 1 Then
    '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| tBoxIMEI0, tBoxIMEI1:

'        For i = 1 To Len(tBoxFrom.Value)
'            ch = Mid(tBoxFrom.Value, i, 1)
'            isOk = ch Like "[0-9]"
'            strFrom = strFrom & ch
'            If Not isOk Then Exit For
'        Next
        objRegExp.MultiLine = False
        objRegExp.Pattern = "^\d+?$"
        strFrom = tBoxFrom.Value
        isOk = objRegExp.Test(strFrom)
        
        'Main:
        If isOk Then
            If Dec2Hex(strFrom) <> "-6" Then             '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                formMain.strTBoxLastValue = strFrom
                strTo = Encoding(strFrom, formMain.cBoxAlgoritm.ListIndex, True)
                If strTo <> "" Then _
                        strTo = IIf(Len(strTo) Mod 3 = 0, strTo, "0" & strTo)
                tBoxTo.Value = strTo
            End If
        End If
        tBoxFrom.Value = formMain.strTBoxLastValue
    End If
    
EndOfSub:
    formMain.isEnableEvents = True
End Sub

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
Public Sub CorrTBox(ByRef tBox As MSForms.TextBox)
    Dim str As String

    formMain.isEnableEvents = False
    '|fffd||fffd||fffd||fffd| tBox |fffd||fffd| IMEI0/IMEI1:
    If InStr(1, tBox.Name, "_flip", vbTextCompare) > 0 Or _
            InStr(1, tBox.Name, "imei", vbTextCompare) = 0 Then
        str = FlipHex(tBox.Text, True)
        If str <> "" Then str = IIf(Len(str) Mod 3 = 0, str, "0" & str)
        tBox.Value = FlipHex(str, True)
        formMain.strTBoxLastValue = tBox.Value
    End If
    formMain.isEnableEvents = True
End Sub

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ESN/MEID/IMEI:
Public Sub SetMainTBox(Optional isNewValues As Boolean)
    Dim rng As Range
    
    formMain.isEnableEvents = False
    
    If Not isNewValues Then
        Set rng = wshAux.Range("AUX_tBoxValues")
    Else
        Set rng = wshAux.Range("AUX_tBoxValuesNew")
    End If
    
    formMain.tBoxESN_flip.Value = rng.Rows(1)
    formMain.tBoxMEID_flip.Value = rng.Rows(2)
    formMain.tBoxIMEI0_flip.Value = rng.Rows(3)
    formMain.tBoxIMEI1_flip.Value = rng.Rows(4)
    formMain.tBoxESN.Value = FlipHex(formMain.tBoxESN_flip.Value, True)
    formMain.tBoxMEID.Value = FlipHex(formMain.tBoxMEID_flip.Value, True)
    formMain.tBoxIMEI0.Value = Decoding(formMain.tBoxIMEI0_flip.Value, formMain.cBoxAlgoritm.ListIndex)
    formMain.tBoxIMEI1.Value = Decoding(formMain.tBoxIMEI1_flip.Value, formMain.cBoxAlgoritm.ListIndex)
    
    formMain.isEnableEvents = True
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Excel:
    formMain.tBoxMEID.SetFocus
    formMain.tBoxESN.SetFocus
End Sub
Attribute VB_Name = "Other"
Option Explicit
Option Compare Text

Public Const IDC_APPSTARTING = 32650&       '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
Public Const IDC_HAND = 32649&              '- |fffd||fffd||fffd||fffd|
Public Const IDC_ARROW = 32512&             '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const IDC_CROSS = 32515&             '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const IDC_IBEAM = 32513&             '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|)
Public Const IDC_ICON = 32641&              '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 4.0 |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
Public Const IDC_NO = 32648&                '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
Public Const IDC_SIZE = 32640&              '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 4.0 |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| IDC_SIZEALL
Public Const IDC_SIZEALL = 32646&           '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|
Public Const IDC_SIZENESW = 32643&          '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd|
Public Const IDC_SIZENS = 32645&            '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd|
Public Const IDC_SIZENWSE = 32642&          '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|
Public Const IDC_SIZEWE = 32644&            '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Public Const IDC_UPARROW = 32516&           '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const IDC_WAIT = 32514&              '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|

'--------------------------------------------------------------------

Private Const Charset = "0123456789ABCDEF"      '- |fffd||fffd||fffd| 16-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

'--------------------------------------------------------------------

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (.EXE) |fffd||fffd||fffd||fffd||fffd|,
'|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|:
Declare PtrSafe Function LoadCursorBynum Lib "user32" Alias "LoadCursorA" _
        (ByVal hInstance As Long, ByVal lpCursorName As Long) As Long

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd|
'(|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| (.CUR), |fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" (.ANI)):
Declare PtrSafe Function LoadCursorFromFile Lib "user32" Alias _
        "LoadCursorFromFileA" (ByVal lpFileName As String) As Long

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'(|fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| CreateCursor |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| LoadCursor |fffd||fffd||fffd| LoadImage):
Declare PtrSafe Function SetCursor Lib "user32" _
        (ByVal hCursor As Long) As Long
'

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| HEX-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
Public Function FlipHex(arg As String, _
            Optional isInsSpacDelim As Boolean = False, _
            Optional isNoFlip As Boolean = False) As String
    Dim i As Long, Argument As String, Result As String
    
    If arg = "" Then Exit Function
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
    Argument = UCase(Replace(arg, " ", ""))

    'Main:
    If isNoFlip Then
        For i = 1 To Len(Argument) Step 2
            Result = Result & Mid(Argument, i, 2) & IIf(isInsSpacDelim, " ", "")
        Next
        If (Len(Result) Mod 3 <> 0) And isInsSpacDelim Then Result = Trim(Result)
    Else
        For i = 1 To Len(Argument) Step 2
            Result = Mid(Argument, i, 2) & IIf(isInsSpacDelim, " ", "") & Result
        Next
    End If
    
    FlipHex = Result
End Function

'|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
Public Function Dec2Hex(ByVal arg As String, Optional InsSpacDelim As Boolean = False) As String
    Dim Numb, NumbTmp
    Dim Result As String, i As Long
    
    On Error GoTo ErrorHandler
    
    If arg <> "" Then
        arg = Replace(LTrim(Replace(arg, "0", " ")), " ", "0")  '- |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
        If arg = "" Then arg = "0"
        Numb = CDec(arg)
        If CStr(Numb) <> arg Then Err.Raise 6                   '- |fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| CStr()
    Else
        Numb = CDec(0)
    End If
    NumbTmp = CDec(0)
    
    If arg = "0" Then
        Result = "0"
    Else
        Do While Numb <> 0
            i = i + 1
            NumbTmp = Fix(Numb / 16)
            Result = IIf((i Mod 2 = 0) And InsSpacDelim, " ", "") & Mid(Charset, Numb - NumbTmp * 16 + 1, 1) & Result
            Numb = NumbTmp
        Loop
    End If
    
    If Result <> "" And InsSpacDelim _
            Then Dec2Hex = Trim(Result) & " " _
            Else Dec2Hex = Result
    Exit Function
    
ErrorHandler:
    If Err.Number = 6 Then
        Dec2Hex = -6       '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Else
        Err.Raise (Err.Number)
    End If
End Function

'|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
Public Function Hex2Dec(arg As String) As String
    Dim Numb, NumbTmp
    Dim Argument As String, ch As String
    Dim i As Long
    Dim ErrNumber As Long
    
    On Error GoTo ErrorHandler
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
    Argument = Replace(arg, " ", "")
    
    Numb = CDec(0)
    For i = 1 To Len(Argument)
        ch = Mid(Argument, i, 1)
        Numb = Numb * 16 - 1 + InStr(1, Charset, ch, 1)
    Next
    Hex2Dec = Numb
    Exit Function

ErrorHandler:
    If Err.Number = 6 Then
        Hex2Dec = -6       '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Else
        Err.Raise (Err.Number)
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| IMEI:
Public Function Encoding(ByVal arg As String, Optional TypeOfAlg As Long, _
            Optional InsSpacDelim As Boolean = False) As String
    Dim Result As String, i As Long

    If TypeOfAlg = 0 Then               '- standart
        If (Len(arg) Mod 2) <> 0 Then arg = "A" & arg
        For i = 1 To Len(arg) Step 2
            Result = Result & Mid(arg, i + 1, 1) & Mid(arg, i, 1) & IIf(InsSpacDelim, " ", "")
        Next
        If Result <> "" Then Encoding = "08" & IIf(InsSpacDelim, " ", "") & Result
    ElseIf TypeOfAlg = 1 Then           '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Encoding = Dec2Hex(arg, InsSpacDelim)
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| IMEI:
Public Function Decoding(ByVal arg As String, Optional TypeOfAlg As Long) As String
    Dim Argument As String, Result As String, i As Long
    Dim ErrNumber As Long

    If arg = "" Then Exit Function
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
    Argument = Replace(arg, " ", "")
    
    If TypeOfAlg = 0 Then               '- standart
        If Len(Argument) < 3 Then Decoding = -1: Exit Function
        If Left(Argument, 2) <> "08" Then Decoding = -1: Exit Function
        Argument = Mid(Argument, 3)
        
        If (Len(Argument) Mod 2) <> 0 Then Decoding = -1: Exit Function
            For i = 1 To Len(Argument) Step 2
                Result = Result & Mid(Argument, i + 1, 1) & Mid(Argument, i, 1)
            Next
            If Left(Result, 1) = "a" Then Result = Mid(Result, 2)
            
        On Error Resume Next
        CDec (Result)
        ErrNumber = Err.Number
        On Error GoTo 0
        If ErrNumber = 6 Then
            Decoding = -6               '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Else
            Decoding = Result
        End If
    ElseIf TypeOfAlg = 1 Then           '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Decoding = Hex2Dec(Argument)
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|:
Public Function AddZeros(ByVal HexArg As String, NumberOfBytes As Long, Optional InsSpacDelim As Boolean = False) As String
        'NumberOfBytes - |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Dim LenStr As Long, i As Long
    Dim Result As String
    
    If HexArg = "" Then Exit Function
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
    HexArg = UCase(Replace(HexArg, " ", ""))

    LenStr = NumberOfBytes * 2 - Len(HexArg)
    If LenStr > 0 Then Result = String(LenStr, "0") & HexArg _
            Else: Result = HexArg
            
    If InsSpacDelim Then
        For i = 1 To Len(Result) Step 2
            AddZeros = AddZeros & Mid(Result, i, 2) & " "
        Next
    Else
        AddZeros = Result
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (IMEI) |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|:
Public Function CalculateLuhnAlg(arg As String) As Variant
    Dim Sum As Long, P As Long, i As Byte
    Dim Num() As Byte
    
    If arg = "" Then CalculateLuhnAlg = "": Exit Function
    
    For i = 1 To Len(arg) - 1
        P = Mid(arg, Len(arg) - i, 1)
        If (i Mod 2 <> 0) Then
            P = 2 * P
            If (P > 9) Then
              P = P - 9
            End If
        End If
        Sum = Sum + P
    Next
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 10
    Sum = 10 - (Sum Mod 10)
    If Sum = 10 Then Sum = 0
    
    CalculateLuhnAlg = Sum
End Function
Attribute VB_Name = "TMP"

''|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|;
''|fffd||fffd||fffd||fffd||fffd||fffd||fffd| 10000 |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| xqcn-|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''...<Storage Name='NV_NUMBERED_ITEMS'>...<Stream Length='117640' Name='NV_ITEM_ARRAY' Value...>
'Public Sub AllItems()
'    Dim objFSO As FileSystemObject, objFile As File, objTS As TextStream
'    Dim str As String
'
'    For i = 0 To 9999
'        str = str & "88 00 01 00 " & FlipHex(AddZeros(Dec2Hex(i), 2, True), True) & "00 00 " & NullNV_Item
'    Next
'
'    Set objFSO = CreateObject("Scripting.FileSystemObject")
'    Set objTS = objFSO.CreateTextFile("D:\All_Items.txt", True)
'    objTS.Write (str)
'    objTS.Close
'End Sub
Attribute VB_Name = "formMain"
Attribute VB_Base = "0{6EFA24FF-D76A-4FA9-9886-F7A998165BE4}{A5EADA81-93DE-4453-A3E5-E445FA6AF332}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Option Compare Text

Public isEnableEvents As Boolean
Public strTBoxLastValue As String
Public KeyCodeTBox As Integer

'------------------------ |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|: -------------------------

Private Sub UserForm_Initialize()
    Dim rng As Range
    
    Me.Caption = ProductName
    frmProductName1.Caption = ProductName & " " & ProductVersion
    frmProductName2.Caption = ProductName & " " & ProductVersion
    lblDateEng.Caption = ProductDateEng
    lblDateRus.Caption = ProductDateRus
    
    multiPg.Value = 0
    
    CountItemsSIM0 = wshAux.Range("AUX_CountItemsSIM0")
    CountItemsSIM1 = wshAux.Range("AUX_CountItemsSIM1")
   
    '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ComboBox'|fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
    formMain.cBoxAlgoritm.RowSource = "AUX_TypeOfCoding"
    formMain.cBoxAlgoritm.ControlSource = "AUX_TypeOfCoding_Value"
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd|, |fffd||fffd||fffd||fffd||fffd|., |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
    arrNVItemsNumb = Array(6, "    0", " 5597", " 1943", " 5598", "  550", "  550" & vbCrLf & "(SIM 1)")
     arrNVItemsObj = Array(6, Me.tBoxESN_flip, Me.tBoxESN_flip, _
            Me.tBoxMEID_flip, Me.tBoxMEID_flip, Me.tBoxIMEI0_flip, Me.tBoxIMEI1_flip)
    
    Call SetMainTBox
    
    If objRegExp Is Nothing Then Set objRegExp = New RegExp

    Call ChangeLangCaptions
    
    ThisWorkbook.Saved = True
    isEnableEvents = True
End Sub

'---------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:

'----- ESN:
Private Sub tBoxESN_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    If Not isEnableEvents Then Exit Sub
    If KeyCode = 27 Then KeyCode = 0: Call btClose_Click
    If KeyCode = 8 Or KeyCode = 46 Then KeyCodeTBox = KeyCode Else KeyCodeTBox = 0
End Sub

Private Sub tBoxESN_Change()
    If Not isEnableEvents Then Exit Sub
    Call ReChangeTBox(tBoxESN, tBoxESN_flip)
End Sub

Private Sub tBoxESN_Enter()
    If Not isEnableEvents Then Exit Sub
    strTBoxLastValue = tBoxESN.Text
End Sub

Private Sub tBoxESN_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If Not isEnableEvents Then Exit Sub
    Call CorrTBox(tBoxESN)        '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|)
End Sub

Private Sub tBoxESN_flip_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    If Not isEnableEvents Then Exit Sub
    If KeyCode = 27 Then KeyCode = 0: Call btClose_Click
    If KeyCode = 8 Or KeyCode = 46 Then KeyCodeTBox = KeyCode Else KeyCodeTBox = 0
End Sub

Private Sub tBoxESN_flip_Change()
    If Not isEnableEvents Then Exit Sub
    Call ReChangeTBox(tBoxESN_flip, tBoxESN)
End Sub

Private Sub tBoxESN_flip_Enter()
    If Not isEnableEvents Then Exit Sub
    strTBoxLastValue = tBoxESN_flip.Text
End Sub

Private Sub tBoxESN_flip_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If Not isEnableEvents Then Exit Sub
    Call CorrTBox(tBoxESN_flip)       '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|)
End Sub

'----- MEID:
Private Sub tBoxMEID_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    If Not isEnableEvents Then Exit Sub
    If KeyCode = 27 Then KeyCode = 0: Call btClose_Click
    If KeyCode = 8 Or KeyCode = 46 Then KeyCodeTBox = KeyCode Else KeyCodeTBox = 0
End Sub

Private Sub tBoxMEID_Change()
    If Not isEnableEvents Then Exit Sub
    Call ReChangeTBox(tBoxMEID, tBoxMEID_flip)
End Sub

Private Sub tBoxMEID_Enter()
    If Not isEnableEvents Then Exit Sub
    strTBoxLastValue = tBoxMEID.Text
End Sub

Private Sub tBoxMEID_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If Not isEnableEvents Then Exit Sub
    Call CorrTBox(tBoxMEID)        '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|)
End Sub

Private Sub tBoxMEID_flip_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    If Not isEnableEvents Then Exit Sub
    If KeyCode = 27 Then KeyCode = 0: Call btClose_Click
    If KeyCode = 8 Or KeyCode = 46 Then KeyCodeTBox = KeyCode Else KeyCodeTBox = 0
End Sub

Private Sub tBoxMEID_flip_Change()
    If Not isEnableEvents Then Exit Sub
    Call ReChangeTBox(tBoxMEID_flip, tBoxMEID)
End Sub

Private Sub tBoxMEID_flip_Enter()
    If Not isEnableEvents Then Exit Sub
    strTBoxLastValue = tBoxMEID.Text
End Sub

Private Sub tBoxMEID_flip_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If Not isEnableEvents Then Exit Sub
    Call CorrTBox(tBoxMEID_flip)       '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|)
End Sub

'----- IMEI0:
Private Sub tBoxIMEI0_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    If Not isEnableEvents Then Exit Sub
    If KeyCode = 27 Then KeyCode = 0: Call btClose_Click
    If KeyCode = 8 Or KeyCode = 46 Then KeyCodeTBox = KeyCode Else KeyCodeTBox = 0
End Sub

Private Sub tBoxIMEI0_Change()
    If Not isEnableEvents Then Exit Sub
    Call ReChangeTBox(tBoxIMEI0, tBoxIMEI0_flip, 1)
End Sub

Private Sub tBoxIMEI0_Enter()
    If Not isEnableEvents Then Exit Sub
    strTBoxLastValue = tBoxIMEI0.Text
End Sub

Private Sub tBoxIMEI0_flip_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    If KeyCode = 27 Then KeyCode = 0: Call btClose_Click
    If KeyCode = 8 Or KeyCode = 46 Then KeyCodeTBox = KeyCode Else KeyCodeTBox = 0
End Sub

Private Sub tBoxIMEI0_flip_Change()
    If Not isEnableEvents Then Exit Sub
    Call ReChangeTBox(tBoxIMEI0_flip, tBoxIMEI0, 2)
End Sub

Private Sub tBoxIMEI0_flip_Enter()
    If Not isEnableEvents Then Exit Sub
    strTBoxLastValue = tBoxIMEI0_flip.Text
End Sub

Private Sub tBoxIMEI0_flip_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If Not isEnableEvents Then Exit Sub
    Call CorrTBox(tBoxIMEI0_flip)
End Sub

'----- IMEI1:
Private Sub tBoxIMEI1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    If Not isEnableEvents Then Exit Sub
    If KeyCode = 27 Then KeyCode = 0: Call btClose_Click
    If KeyCode = 8 Or KeyCode = 46 Then KeyCodeTBox = KeyCode Else KeyCodeTBox = 0
End Sub

Private Sub tBoxIMEI1_Change()
    If Not isEnableEvents Then Exit Sub
    Call ReChangeTBox(tBoxIMEI1, tBoxIMEI1_flip, 1)
End Sub

Private Sub tBoxIMEI1_Enter()
    If Not isEnableEvents Then Exit Sub
    strTBoxLastValue = tBoxIMEI1.Text
End Sub

Private Sub tBoxIMEI1_flip_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    If Not isEnableEvents Then Exit Sub
    If KeyCode = 27 Then KeyCode = 0: Call btClose_Click
    If KeyCode = 8 Or KeyCode = 46 Then KeyCodeTBox = KeyCode Else KeyCodeTBox = 0
End Sub

Private Sub tBoxIMEI1_flip_Change()
    If Not isEnableEvents Then Exit Sub
    Call ReChangeTBox(tBoxIMEI1_flip, tBoxIMEI1, 2)
End Sub

Private Sub tBoxIMEI1_flip_Enter()
    If Not isEnableEvents Then Exit Sub
    strTBoxLastValue = tBoxIMEI1_flip.Text
End Sub

Private Sub tBoxIMEI1_flip_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If Not isEnableEvents Then Exit Sub
    Call CorrTBox(tBoxIMEI1_flip)
End Sub

'---------- |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

'---------- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:

Private Sub frmMain_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If Not isEnableEvents Then Exit Sub
    isEnableEvents = False
    
    If Me.frmMain.ActiveControl Is Nothing Then GoTo EndOfSub
    If Me.frmMain.ActiveControl.Tag = "Main" Then Call CorrTBox(Me.frmMain.ActiveControl)
    
EndOfSub:
    Me.frmLuhna.Visible = False
    isEnableEvents = True
End Sub

Private Sub frmManually_Enter()
    If Not isEnableEvents Then Exit Sub
    isEnableEvents = False
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Item'|fffd||fffd|):
    Me.btCreate550.SetFocus
    isEnableEvents = True
End Sub

Private Sub multiPg_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    Dim strName As String, strNameNew As String, str As String
    
    If Not isEnableEvents Then Exit Sub
    isEnableEvents = False
    
    '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
'    If tBoxIMEI0.Text = "-1" Then tBoxIMEI0 = "": tBoxIMEI0_flip = ""
'    If tBoxIMEI1.Text = "-1" Then tBoxIMEI1 = "": tBoxIMEI1_flip = ""

    If Me.frmMain.ActiveControl Is Nothing Then GoTo EndOfSub
    If Me.frmMain.ActiveControl.Tag = "Main" Then Call CorrTBox(Me.frmMain.ActiveControl)
    
EndOfSub:
    Me.frmLuhna.Visible = False
    isEnableEvents = True
End Sub

Private Sub cBoxAlgoritm_Change()
    If Not isEnableEvents Then Exit Sub
    If tBoxIMEI0.Text = "-1" Or tBoxIMEI1.Text = "-1" Then
        Call ReChangeTBox(tBoxIMEI0_flip, tBoxIMEI0, 2)
        Call ReChangeTBox(tBoxIMEI1_flip, tBoxIMEI1, 2)
    Else
        Call ReChangeTBox(tBoxIMEI0, tBoxIMEI0_flip, 1)
        Call ReChangeTBox(tBoxIMEI1, tBoxIMEI1_flip, 1)
    End If
End Sub

Private Sub btLuhna_Click()
    If Not isEnableEvents Then Exit Sub
    isEnableEvents = False
    Me.frmLuhna.Visible = Not Me.frmLuhna.Visible
    If Me.frmLuhna.Visible Then
        Me.lblLuhna0 = "IMEI0 (dec): " & CalculateLuhnAlg(Me.tBoxIMEI0)
        Me.lblLuhna1 = "IMEI1 (dec): " & CalculateLuhnAlg(Me.tBoxIMEI1)
        Me.frmLuhna.SetFocus
    End If
    isEnableEvents = True
End Sub

Private Sub frmLuhna_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If Not isEnableEvents Then Exit Sub
    isEnableEvents = False
    Me.frmLuhna.Visible = False
    isEnableEvents = True
End Sub

Private Sub btSet1_Click()
    Call SetMainTBox
End Sub

Private Sub btSet2_Click()
    Call SetMainTBox(True)
End Sub

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| 550:
Private Sub btCreate550_Click()
    Dim objFSO As FileSystemObject, objFile As File, objTS As TextStream
    Dim objShellApp As Object, objFolder As Object
    Dim objFD As FileDialog
    Dim Path As String, str As String, MsgText As String
    Dim i As Long, ok As Boolean
    
    Set objFSO = CreateObject("Scripting.FileSystemObject")
    Set objFile = objFSO.GetFile(ThisWorkbook.FullName)
    Path = objFile.ParentFolder
    
    '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|:
    Set objFD = Application.FileDialog(msoFileDialogFolderPicker)
    With objFD
        .AllowMultiSelect = False
        .Title = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"                      '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        .ButtonName = IIf(wshData.lBoxLang.ListIndex, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "Choose")
        .InitialFileName = IIf(Right(CurDir, 1) = "\", CurDir, CurDir & "\")
                                                    '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        .InitialView = msoFileDialogViewList        '- |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 9 |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
        If .Show = 0 Then Exit Sub                  '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd|" - |fffd||fffd||fffd||fffd||fffd|
        Path = .SelectedItems(1)                    '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Path |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    End With
    
    ChDir Path
    Path = IIf(Right(Path, 1) = "\", Path, Path & "\") & "550"
    On Error Resume Next
    Kill Path                                       '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
    
    On Error GoTo ErrorHandler
    str = FlipHex(Me.tBoxIMEI1_flip.Text, , True)   '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Open Path For Binary As #1
    '|fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd|:
    For i = 1 To Len(str) / 2 Step 1
        Put #1, i, CByte(Val("&H" & Mid(str, (i - 1) * 2 + 1, 2)))
    Next
    Close #1
    MsgText = IIf(wshData.lBoxLang.ListIndex, _
                "|fffd||fffd||fffd||fffd| """ & Path & """ |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "File successfully recorded")
    MsgBox MsgText, vbInformation, ProductName
    Exit Sub
    
ErrorHandler:
    MsgText = IIf(wshData.lBoxLang.ListIndex, _
                "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|!", "Failed to create file!")
    MsgBox MsgText, vbCritical, ProductName
End Sub

Private Sub tBoxMoney_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    Dim lngRet As Long
    
    lngRet = LoadCursorBynum(0&, IDC_HAND)
    lngRet = SetCursor(lngRet)
End Sub

Private Sub tBoxMoney_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    Dim lngRet As Long
    Dim WshShell As Object
    
    lngRet = LoadCursorBynum(0&, IDC_HAND)
    lngRet = SetCursor(lngRet)
    Set WshShell = CreateObject("WScript.Shell")
    WshShell.Run "https://money.yandex.ru/to/410011073385318"  '|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|

End Sub

Private Sub tBoxMoneyRus_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    Dim lngRet As Long
    
    lngRet = LoadCursorBynum(0&, IDC_HAND)
    lngRet = SetCursor(lngRet)
End Sub

Private Sub tBoxMoneyRus_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    Dim lngRet As Long
    Dim WshShell As Object
    
    lngRet = LoadCursorBynum(0&, IDC_HAND)
    lngRet = SetCursor(lngRet)
    Set WshShell = CreateObject("WScript.Shell")
    WshShell.Run "https://money.yandex.ru/to/410011073385318"  '|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|

End Sub

'|fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|":
Private Sub btClose_Click()
    If Not isEnableEvents Then Exit Sub
    isEnableEvents = False
    
    Me.Hide
    Me.frmLuhna.Visible = False
    Me.btOk.Enabled = True
    ThisWorkbook.Saved = True
    
    If Me.frmMain.ActiveControl Is Nothing Then GoTo EndOfSub
    If Me.frmMain.ActiveControl.Tag = "Main" Then Call CorrTBox(Me.frmMain.ActiveControl)
    
EndOfSub:
    isEnableEvents = True
End Sub

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
Private Sub UserForm_Terminate()
    ThisWorkbook.Saved = True
End Sub

'|fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|":
Private Sub btOk_Click()
    Dim rng As Range, rngTmp As Range
    Dim strSearch As String, NV_Item As String, str As String
    Dim LenNVItem As Long, i As Long, Index
    
    If Not isEnableEvents Then Exit Sub
    isEnableEvents = False
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    
    For i = 1 To 6
        Set rng = Intersect(wshData.Range("NV_Items"), wshData.Range("NV_Items_|fffd|"))
        strSearch = arrNVItemsNumb(i)
        Index = Application.Match(strSearch, rng, 0)
        
        If arrNVItemsObj(i) = "" Then
        '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|:
            If Not IsError(Index) Then
            '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| NV_Item |fffd||fffd||fffd||fffd||fffd||fffd|:
                wshData.Range("NV_Items").Rows(Index).ClearContents
                
                '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
                With wshData.Range("NV_Items").Rows(Index).Interior
                    .Pattern = xlSolid
                    .ThemeColor = xlThemeColorDark1
                    .TintAndShade = 0
                    .PatternTintAndShade = 0
                End With
                wshData.Range("NV_Items").Rows(Index).Font.ColorIndex = xlAutomatic
                
                If i < 6 Then CountItemsSIM0 = CountItemsSIM0 - 1 _
                        Else CountItemsSIM1 = CountItemsSIM1 - 1
            End If
        Else
        '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|:
            If IsError(Index) Then
            '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| NV_Item |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
                If i < 6 Then CountItemsSIM0 = CountItemsSIM0 + 1 _
                        Else CountItemsSIM1 = CountItemsSIM1 + 1
                Index = CountItemsSIM0 + CountItemsSIM1
                
                rng.Rows(Index) = strSearch
                Intersect(wshData.Range("NV_Items"), wshData.Range("NV_Items_Name")).Rows(Index) = _
                        "=VLOOKUP(" & Val(strSearch) & ", AUX_NV_Items, 2, FALSE)"
                Intersect(wshData.Range("NV_Items"), wshData.Range("NV_Items_Index")).Rows(Index) = "Index0"
            End If
            LenNVItem = Len(arrNVItemsObj(i))
            Intersect(wshData.Range("NV_Items"), wshData.Range("NV_Items_Data")).Rows(Index) = _
                    arrNVItemsObj(i) & Mid(NullNV_Item, LenNVItem + 1)
            
            '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
            With wshData.Range("NV_Items").Rows(Index).Interior
                .Pattern = xlSolid
                .PatternColorIndex = xlAutomatic
                If i < 6 Then .ThemeColor = xlThemeColorAccent3 _
                    Else .ThemeColor = xlThemeColorAccent6
                .TintAndShade = 0.799981688894314
                .PatternTintAndShade = 0
            End With

            '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|:
            wshData.Range("NV_Items").Rows(Index).Font.Color = -4165632
        
            '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
            If wshData.AutoFilterMode Then wshData.AutoFilter.ApplyFilter
        
            'ESN |fffd| Mobile Properties:
            If i = 1 Then _
                    wshData.Range("MobileProp").Cells(1, 1) = FlipHex(arrNVItemsObj(i).Text)
        End If
    Next
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "Client name":
    str = ProductName & " " & ProductVersion
    NV_MobileProp.Lenght = NV_MobileProp.Lenght + Len(str) - Len(wshData.Range("MobileProp").Cells(5, 1))
    wshData.Range("MobileProp").Cells(5, 1) = str
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| AUX:
    wshAux.Range("AUX_CountItemsSIM0") = CountItemsSIM0
    wshAux.Range("AUX_CountItemsSIM1") = CountItemsSIM1
    wshAux.Range("AUX_CountItemsMobileProp") = NV_MobileProp.Lenght
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
    wshData.Sort.SortFields.Clear
    wshData.Sort.SortFields.Add Key:=wshData.Range("NV_Items_|fffd|"), _
            SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortTextAsNumbers
    wshData.Sort.SortFields.Add Key:=wshData.Range("NV_Items_Index"), _
            SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    
    With wshData.Sort
        .SetRange wshData.Range("NV_Items")
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| AUX:
    wshAux.Range("AUX_tBoxValuesNew").Rows(1) = formMain.tBoxESN_flip.Value
    wshAux.Range("AUX_tBoxValuesNew").Rows(2) = formMain.tBoxMEID_flip.Value
    wshAux.Range("AUX_tBoxValuesNew").Rows(3) = formMain.tBoxIMEI0_flip.Value
    wshAux.Range("AUX_tBoxValuesNew").Rows(4) = formMain.tBoxIMEI1_flip.Value
    
    Me.Hide
    Me.frmLuhna.Visible = False
    
    Application.EnableEvents = True
    Application.ScreenUpdating = True
    isEnableEvents = True
End Sub
Attribute VB_Name = "wbkXQCN_Editor"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private isCloseForce As Boolean

Private Sub Workbook_Open()
    Dim rng As Range
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|:
    If Val(Application.Version) < 12 Then
        MsgBox "The program requires Microsoft Office 2007 or higher!" & vbCrLf & _
                "(|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & _
                " Microsoft Office 2007 |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|!)", vbCritical, ProductName
        isCloseForce = True
        ThisWorkbook.Close SaveChanges:=False
    End If
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|:
    wshData.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True, _
            AllowFiltering:=True, UserInterfaceOnly:=True, Password:="wsgktyjr26021997"
    
    wshData.Activate
    ActiveWindow.ScrollRow = FirstRow
    
    '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ListBox'|fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|:
    Set rng = wshAux.Range("AUX_Lang")
    wshData.lBoxLang.ListFillRange = "AUX_Lang"
    wshData.lBoxLang.LinkedCell = "AUX_Lang_Value"
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|.
    formMain.cBoxAlgoritm.Value = wshAux.Range("AUX_TypeOfCoding").Rows(1)
    
    ThisWorkbook.Saved = True
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
    
    If isCloseForce Then Exit Sub       '- |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Debug.Print "Workbook_BeforeClose"
    
    Application.ScreenUpdating = False
    Call ClearCells
    
    wshData.Range("A1") = ProductName & " " & ProductVersion
    wshData.Range("A2") = CreatorName
    
    ThisWorkbook.BuiltinDocumentProperties("Title") = ProductName & " " & ProductVersion
    ThisWorkbook.BuiltinDocumentProperties("Author") = CreatorName
    
    wshAux.Range("AUX_tBoxValues").ClearContents
    wshAux.Range("AUX_tBoxValuesNew").ClearContents
    
    wshData.Range("NV_Items").Cells(1, 1).Activate
    
    ThisWorkbook.Save
    Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "wshAux"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "wshData"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "lBoxLang, 8, 0, MSForms, ListBox"
Option Explicit

Private Sub lBoxLang_Change()
    Call ChangeLangCaptions
End Sub

Private Sub lBoxLang_LostFocus()
    wshData.lBoxLang.Visible = False                        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ListBox
    ThisWorkbook.Saved = True
End Sub

Private Sub lBoxLang_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    wshData.lBoxLang.Visible = False                        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ListBox
    ThisWorkbook.Saved = True
End Sub


INQUEST-PP=macro
