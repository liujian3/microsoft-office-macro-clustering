Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cmdreadD, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "cmdreadE, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "cmdreadZ, 3, 2, MSForms, CommandButton"
Attribute VB_Control = "CmDPrint, 4, 3, MSForms, CommandButton"
Dim titlePosX(13, 3) As String
Dim HUcount As Integer
Dim HU(2000) As String
Dim ColN(2000) As String
Dim country As String
Private Sub CmDPrint_Click()
  Dim Sheetarray(600) As String
  Dim wb As Excel.Workbook
  Dim i As Integer
  
  Set wb = Excel.ActiveWorkbook
  
  For i = 1 To wb.Worksheets.Count
   If wb.Worksheets(i).Visible And wb.Worksheets(i).Name <> "Main" Then
    wb.Worksheets(i).Select
    ActiveWindow.SelectedSheets.PrintOut Copies:=1, Collate:=True
   End If
  Next i
  
  wb.Worksheets("Main").Select
  
End Sub

Private Sub cmdreadD_Click()
 country = ActiveSheet.Cells(5, 4).Value
 Call lesenSchreiben("D")
 cmdreadD.Enabled = False
 cmdreadE.Enabled = False
 cmdreadZ.Enabled = False
End Sub

Private Sub cmdreadE_Click()
 Excel.Application.EnableCancelKey = xlDisabled
 country = ActiveSheet.Cells(5, 4).Value
 Call lesenSchreiben("E")
 cmdreadE.Enabled = False
 cmdreadD.Enabled = False
 cmdreadZ.Enabled = False
End Sub

Private Sub cmdreadZ_Click()
 Excel.Application.EnableCancelKey = xlDisabled
 country = ActiveSheet.Cells(5, 4).Value
 Call lesenSchreiben("Z")
 cmdreadE.Enabled = False
 cmdreadD.Enabled = False
 cmdreadZ.Enabled = False
End Sub

Public Sub lesenSchreiben(Language As String)
'Definition der Variablen
  Dim wbooksrc As Workbook
  Dim wbooktgt As Workbook
  Dim Sheet1 As Worksheet
  Dim wsout As Worksheet
  Dim datum As String
  Dim lngCount As Long
  Dim Filename As String
  Dim anz_seiten As Integer
'Informationen f|fffd|r erste Seite und Kopfdaten
  Dim headerVal(10, 10) As String
'Informationen zu den collis
  Dim colliInf(50, 8) As String
  Dim Worth As String
  Dim pos As Integer
  Dim ColNameCurrent As String
  Dim ColliCount As Integer
  Dim CurrencyValue As String
  Dim TotalValue As String
  Dim TotalValueHeader As String
  Dim TotLinecount As Double
  Dim co_Inf(50) As String
  

'Werte unter den collis
  Dim colliVal(50, 50, 9) As String
'suchwert in x-richtung f|fffd|r colliwerte
  Dim searchPosX(9) As String
'Reihennummer
  Dim rowN As Integer
'z|fffd|hler
  Dim i, i2, collic As Integer
'sprache
  Dim lang, x As String
  Dim px As Integer
  
'row, col
  Dim posY, posY2, posX, Counters, Start, Page As Integer
'total anzahl datens|fffd|tze(collival), anz datens|fffd|tze f|fffd|r Bauteil
  Dim tot_dataset, anz_dataset As Integer
'nettogewicht, bruttogewicht
  Dim totNetW, totGroW As Single
'total anzahl verf|fffd|gbare zellen, rest an verf|fffd|gbaren zellen
  Dim tot_cell, rest_cell As Integer
  
 ActiveWorkbook.Sheets("page 1").Select
 
'Reshape address if language = "D", "E"
 Select Case Language
  Case "D", "E": Call ReshapeAddress
 End Select
  
  
'Suchwerte des Header(angaben f|fffd|r die erste Seite)
  headerVal(0, 0) = "'Customer ref."
  headerVal(1, 0) = "'SULZER Project:"
  headerVal(2, 0) = "'Projectleader"
  headerVal(3, 0) = "'Delivery Address"
  headerVal(4, 0) = "'Total delivery"
  headerVal(5, 0) = "'Total"
  headerVal(6, 0) = "'Colli-no./Kisten Nr."
  headerVal(7, 0) = "'Delivery"
  headerVal(8, 0) = "'Lieferung"
  headerVal(9, 0) = "'Gesamtwert"
  headerVal(10, 0) = "'Total value"
  Set wbooktgt = Application.ActiveWorkbook
' Open the file dialog
  With Application.FileDialog(msoFileDialogOpen)
    .AllowMultiSelect = True
    .Show
' Display paths of each file selected
    For lngCount = 1 To .SelectedItems.Count
      Filename = .SelectedItems(lngCount)
    Next lngCount
  End With
  Workbooks.OpenText Filename:=Filename, _
  Origin:=-535, _
  StartRow:=1, _
  DataType:=xlDelimited, _
  TextQualifier:=xlDoubleQuote, _
  ConsecutiveDelimiter:=False, _
  Tab:=True, Semicolon:=False, _
  Comma:=False, _
  Space:=False, _
  Other:=False, FieldInfo:=Array(Array(1, 1), _
  Array(2, 1), _
  Array(3, 1), _
  Array(4, 1), _
  Array(5, 1), _
  Array(6, 1), _
  Array(7, 1), _
  Array(8, 1), _
  Array(9, 1), _
  Array(10, 1), _
  Array(11, 1)), _
  TrailingMinusNumbers:=True
  Set wbooksrc = Application.ActiveWorkbook
'Name des Files pr|fffd|fen
  Application.DisplayAlerts = False
'Define input sheet for read
 Set wsout = wbooksrc.Sheets(1)
'**Werte f|fffd|r die erste Seite werden Gesucht**
  rowN = 1
  i2 = 1
  For i = 0 To 10
    Do While wsout.Cells(rowN, 1).Value <> headerVal(i, 0)
      rowN = rowN + 1
      If rowN = 25000 Then
        Exit Do
      End If
    Loop
    
    Select Case headerVal(i, 0)
     Case "'Delivery", "'Lieferung":
        Worth = wsout.Cells(rowN, 2).Value
        If Len(Worth) > 0 Then
         DeliveryNo = Right(Worth, Len(Worth) - 1)
         headerVal(7, 1) = DeliveryNo
        End If
     Case "'Total value", "'Gesamtwert":
        Worth = wsout.Cells(rowN, 2).Value
        If Len(Worth) > 0 Then
         TotalValue = Right(Worth, Len(Worth) - 1)
        End If
        Worth = wsout.Cells(rowN, 3).Value
        If Len(Worth) > 0 Then
         CurrencyValue = Right(Worth, Len(Worth) - 1)
        End If
        Worth = wsout.Cells(rowN, 1).Value
        If Len(Worth) > 0 Then
         TotalValueHeader = Right(Worth, Len(Worth) - 1)
        End If
    End Select
    
    
    If headerVal(i, 0) = "'Colli-no./Kisten Nr." Then
      headerVal(i, 1) = rowN
      Collistart = rowN
    Else
      If headerVal(i, 0) = "'Delivery Address" Then
        rowN = rowN + 1
        Do While Trim(wsout.Cells(rowN, 2).Value) <> ""
          headerVal(i, i2) = wsout.Cells(rowN, 2)
          i2 = i2 + 1
          rowN = rowN + 1
        Loop
        i2 = 1
      Else
        If headerVal(i, 0) = "'Total" Then
          Worth = Mid(wsout.Cells(rowN, 6).Value, 2)
          pos = InStr(1, Worth, ",", vbTextCompare)
          Colliend = rowN
          If pos > 0 Then
            headerVal(i, 1) = Val(Left(Worth, pos - 1) & Right(Worth, Len(Worth) - pos))
          Else
            headerVal(i, 1) = Worth
          End If
          Worth = Mid(wsout.Cells(rowN, 7).Value, 2)
          pos = InStr(1, Worth, ",", vbTextCompare)
          If pos > 0 Then
            headerVal(i, 2) = Val(Left(Worth, pos - 1) & Right(Worth, Len(Worth) - pos))
          Else
            headerVal(i, 2) = Worth
          End If
        Else
          headerVal(i, 1) = wsout.Cells(rowN, 2)
          headerVal(i, 2) = rowN
        End If
      End If
    End If
    rowN = 1
  Next i
  
'**Das Workbook Packing_list.xls wird aktiviert**
  pfad = "C:\temp\"
  filetgt = "PL" & Mid(headerVal(1, 1), 2, 9) '& "_" & Right(headerVal(1, 1), 1)
  If Len(Dir(filetgt & ".xls")) > 0 Then
    Kill filetgt & ".xls"
  End If
  wbooktgt.SaveAs (pfad & filetgt)
  
'sheet1 wird als Tabelle page 1 definiert
 Select Case Language
   Case "D", "E": Set Sheet1 = wbooktgt.Sheets("page 1")
                  wbooktgt.Sheets("page 1_ZH").Visible = False
                  wbooktgt.Sheets("summary_ZH").Visible = False
   Case "Z": wbooktgt.Sheets("page 1_ZH").Visible = True
             Set Sheet1 = wbooktgt.Sheets("page 1_ZH")
             wbooktgt.Sheets("page 1").Visible = False
             wbooktgt.Sheets("page 1").Name = "page 1_EN"
             wbooktgt.Sheets("page 1_ZH").Name = "page 1"
             wbooktgt.Sheets("Summary").Visible = False
             wbooktgt.Sheets("summary_ZH").Visible = True
  End Select
  
  Dim sheetheader As Excel.Worksheet
  Set sheetheader = Sheet1
  
'**Auslesen Startseite**
  seite = Sheet1.Cells(2, 15).Value '?????
'Eintragen der Kopfdaten auf Seite 1
  Range("B23,C33,F23,J33,J34").Font.Bold = True
  Range("B16,B17,B18,B19,B23,C33,F23,J33,J34").Font.Size = 11
  Range("B16,B17,B18,B19,B23,F23").HorizontalAlignment = xlLeft
  Range("C33,J33,J34").HorizontalAlignment = xlRight
  Sheet1.Cells(23, 2).Value = Mid(headerVal(0, 1), 2)
  Sheet1.Cells(16, 2).Value = Mid(headerVal(3, 1), 2)
  Sheet1.Cells(17, 2).Value = Mid(headerVal(3, 2), 2)
  Sheet1.Cells(18, 2).Value = Mid(headerVal(3, 3), 2)
  Sheet1.Cells(19, 2).Value = Mid(headerVal(3, 4), 2)
  Sheet1.Cells(20, 2).Value = Mid(headerVal(3, 5), 2)
  Dim cc As String
  cc = Mid(headerVal(4, 1), 2)
  Select Case Len(cc)
   Case Is < 4: ColliCount = Val(cc)
   Case 5: ColliCount = Val(Left(cc, 1) & Right(cc, 3))
  End Select
  
  Sheet1.Cells(33, 3).Value = ColliCount
  Sheet1.Cells(33, 10).Value = headerVal(5, 1)
  Sheet1.Cells(34, 10).Value = headerVal(5, 2)
  Sheet1.Cells(7, 10).Value = Format(Now, "dd.mm.yyyy")
  Sheet1.Cells(23, 6).Value = Mid(headerVal(1, 1), 2)
  Sheet1.Cells(16, 9).Value = headerVal(7, 1)
  lang = headerVal(6, 1)
'**Einlesen der colli-values**
  titlePosX(0, 0) = "'Colli no."
  titlePosX(1, 0) = "'Packed"
  titlePosX(2, 0) = "'Descr."
  Select Case Language
   Case "D": titlePosX(3, 0) = "'Descr. DE"
   Case "E": titlePosX(3, 0) = "'Descr. EN"
   Case "Z": titlePosX(3, 0) = "'Descr. ZH"
  End Select
  
  titlePosX(4, 0) = "'Basic matl"
  'CR 1971 12.12.12
  'titlePosX(5, 0) = "'ColSecLinB"
  titlePosX(5, 0) = "'Material"
  titlePosX(6, 0) = "'Item Cat."
  titlePosX(7, 0) = "'Sec. no."
  titlePosX(8, 0) = "'Draw.no"
  titlePosX(9, 0) = "'HU"
  titlePosX(10, 0) = "'Col.name"
  titlePosX(11, 0) = "'Dwg-doc-no"
  titlePosX(12, 0) = "'ColSecLinB"
  '3031921 3.11.2015 remarks reactivated
  titlePosX(13, 0) = "'DRW Remarks"
  rowN = 1
  For i = 0 To 13
    Do While wsout.Cells(7, rowN).Value <> titlePosX(i, 0)
      rowN = rowN + 1
      If rowN = 250 Then
        Exit Do
      End If
    Loop
    titlePosX(i, 2) = rowN
    rowN = 1
  Next i
  posY = 3
  Page = 2
  colli = 0
  Counters = 0
  
  'Select page2 for output
  Set Sheet1 = wbooktgt.Sheets("page 2")
  Sheet1.Activate
  
  
  'set order description-value
  If Language = "Z" Then
   Sheet1.Cells(3, 2).Value = sheetheader.Cells(1, 15).Value
   Sheet1.Cells(4, 2).Value = "='" & sheetheader.Name & "'!B23"
   Sheet1.Cells(4, 6).Value = "='" & sheetheader.Name & "'!F23"
  End If

  cc = Mid(headerVal(4, 1), 2)
  Select Case Len(cc)
   Case Is < 4: TotColliCount = Val(cc)
   Case 5: TotColliCount = Val(Left(cc, 1) & Right(cc, 3))
  End Select
  
 
  TotLinecount = headerVal(4, 2)
  
  'Prepare HU wth Collilist
  HUcount = 0
  For i = 1 To TotColliCount
   ColliNo = wsout.Cells(headerVal(6, 1) + i, 1).Value
   Call HUtest(ColliNo, TotLinecount, wsout, Val(titlePosX(0, 2)))
  Next i
  
  
  'Read Colli-List
  For i = 1 To TotColliCount
    'check content of colli
    posY = posY + 3
    Start = posY
    Sheet1.Range("A" & posY & ":K" & posY + 1).Font.Bold = True
    Sheet1.Range("A" & posY & ":K" & posY + 2).Font.Size = 9
    Sheet1.Range("A" & posY & ":K" & posY + 2).NumberFormat = "General"
    Sheet1.Range("A" & posY & ":K" & posY + 2).HorizontalAlignment = xlLeft
    If Language = "Z" Then
     Sheet1.Cells(posY, 2).Value = sheetheader.Cells(9, 15).Value
     posY = posY + 1
     Sheet1.Cells(posY, 2).Value = sheetheader.Cells(11, 15).Value
     Sheet1.Cells(posY, 4).Value = sheetheader.Cells(11, 17).Value
     Sheet1.Cells(posY, 5).Value = sheetheader.Cells(11, 18).Value
     Sheet1.Cells(posY, 6).Value = sheetheader.Cells(11, 19).Value
     Sheet1.Cells(posY, 7).Value = sheetheader.Cells(11, 20).Value
     Sheet1.Cells(posY, 9).Value = sheetheader.Cells(11, 22).Value
    Else
     Sheet1.Cells(posY, 2).Value = "Colli-Description:"
     posY = posY + 1
     Sheet1.Cells(posY, 2).Value = "Colli-No."
     Sheet1.Cells(posY, 4).Value = "m3"
     Sheet1.Cells(posY, 5).Value = "type"
     Sheet1.Cells(posY, 6).Value = "Dimensions: LxWxH [cm]"
     Sheet1.Cells(posY, 7).Value = "gross weight [kg]"
     Sheet1.Cells(posY, 9).Value = "net weight [kg]"
    End If
    
    posY = posY + 1
    For J = 1 To 8
      co_Inf(J) = wsout.Cells(headerVal(6, 1) + i, J).Value
    Next J
    Sheet1.Cells(posY, 2).Value = Mid(co_Inf(1), 2)
    Sheet1.Cells(posY, 4).Value = Val(Mid(co_Inf(8), 2))
    Sheet1.Cells(posY, 5).Value = co_Inf(2)
    Sheet1.Cells(posY, 6).Value = Val(Mid(co_Inf(3), 2)) & "x" & Val(Mid(co_Inf(4), 2)) & "x" & Val(Mid(co_Inf(5), 2))
    
    '**1.12.08 ChB added code to eliminate ","
    If InStr(1, co_Inf(7), ",") > 1 Then
     A = InStr(1, co_Inf(7), ",")
     brutWeight = Val(Mid(co_Inf(7), 2, A - 2) & Mid(co_Inf(7), A + 1))
    Else
     brutWeight = Val(Mid(co_Inf(7), 2))
    End If
    
    If InStr(1, co_Inf(6), ",") > 1 Then
     A = InStr(1, co_Inf(6), ",")
     netweight = Val(Mid(co_Inf(6), 2, A - 2) & Mid(co_Inf(6), A + 1))
    Else
     netweight = Val(Mid(co_Inf(6), 2))
    End If
    '**
    
    Sheet1.Cells(posY, 7).Value = brutWeight
    Sheet1.Cells(posY, 9).Value = netweight
    
    posY = posY + 2
    With Sheet1.Range("A" & posY & ":K" & posY + 1)
      .Font.Bold = True
      .Font.Size = 9
      .NumberFormat = "General"
      .HorizontalAlignment = xlLeft
    End With
    
    If Language = "Z" Then
     Sheet1.Cells(posY, 2).Value = sheetheader.Cells(15, 15).Value
     posY = posY + 1
     Sheet1.Cells(posY, 2).Value = sheetheader.Cells(17, 15).Value
     Sheet1.Cells(posY, 3).Value = sheetheader.Cells(17, 16).Value
     Sheet1.Cells(posY, 5).Value = sheetheader.Cells(17, 17).Value
     Sheet1.Cells(posY, 6).Value = sheetheader.Cells(17, 19).Value
     Sheet1.Cells(posY, 7).Value = sheetheader.Cells(17, 20).Value
     Sheet1.Cells(posY, 8).Value = sheetheader.Cells(17, 21).Value
     Sheet1.Cells(posY, 9).Value = sheetheader.Cells(17, 22).Value
     Sheet1.Cells(posY, 10).Value = sheetheader.Cells(17, 23).Value
     Sheet1.Cells(posY, 11).Value = sheetheader.Cells(17, 24).Value
    Else
     Sheet1.Cells(posY, 2).Value = "content:"
     posY = posY + 1
     Sheet1.Cells(posY, 2).Value = "set"
     Sheet1.Cells(posY, 3).Value = "description"
     '3031921 3.11.2015 remarks reactivated
     Sheet1.Cells(posY, 5).Value = "remarks"
     Sheet1.Cells(posY, 6).Value = "material"
     Sheet1.Cells(posY, 7).Value = "dwg-doc-no"
     Sheet1.Cells(posY, 8).Value = "dwg-no"
     Sheet1.Cells(posY, 9).Value = "item"
     Sheet1.Cells(posY, 10).Value = "column"
     Sheet1.Cells(posY, 11).Value = "bed"
    End If
    
    posY = posY + 1
    Counters = 0
    
    For k = 9 To TotLinecount
      If wsout.Cells(k, Val(titlePosX(2, 2))).Value <> "" Then
        '**** Line Item Main ****
        '****
        titlePosX(0, 1) = wsout.Cells(k, Val(titlePosX(0, 2))).Value
        titlePosX(1, 1) = wsout.Cells(k, Val(titlePosX(1, 2))).Value
        
        
        '** 08.03.10 ChB modified
        Select Case Language
         Case "E", "Z": titlePosX(2, 1) = wsout.Cells(k, Val(titlePosX(3, 2))).Value
         Case "D": titlePosX(2, 1) = wsout.Cells(k, Val(titlePosX(2, 2))).Value
        End Select
        
'        '** 12.12.08 ChB added
'        If Len(wsout.Cells(k, Val(titlePosX(2, 2)))) > 0 And Language = "E" Then
'         titlePosX(2, 1) = wsout.Cells(k, Val(titlePosX(3, 2))).Value
'        Else
'         titlePosX(2, 1) = wsout.Cells(k, Val(titlePosX(2, 2))).Value
'        End If
'        '**
        
        titlePosX(4, 1) = wsout.Cells(k, Val(titlePosX(4, 2))).Value
        'CR1971 12.12.12 ChB
        'titlePosX(5, 1) = wsout.Cells(k, Val(titlePosX(5, 2))).Value
       
        titlePosX(5, 1) = Right(wsout.Cells(k, Val(titlePosX(5, 2))).Value, 8)
        titlePosX(7, 1) = wsout.Cells(k, Val(titlePosX(7, 2))).Value
        titlePosX(8, 1) = wsout.Cells(k, Val(titlePosX(8, 2))).Value
        titlePosX(11, 1) = wsout.Cells(k, Val(titlePosX(11, 2))).Value
        titlePosX(12, 1) = wsout.Cells(k, Val(titlePosX(12, 2))).Value
        titlePosX(13, 1) = wsout.Cells(k, Val(titlePosX(13, 2))).Value
        
        Counters = 0
        If co_Inf(1) = titlePosX(0, 1) Then
          With Sheet1.Range("A" & posY & ":K" & posY)
            .HorizontalAlignment = xlLeft
            .Font.Size = 9
            .NumberFormat = "General"
          End With
          Sheet1.Cells(posY, 2).Value = Mid(titlePosX(1, 1), 2) 'qty
          Sheet1.Cells(posY, 3).Value = Mid(titlePosX(2, 1), 2) 'description
          'Sheet1.Cells(posY, 5).Value = Mid(titlePosX(13, 1), 2) 'DRW Remarks
          Sheet1.Cells(posY, 6).Value = Mid(titlePosX(4, 1), 2) 'Basic Matl
          Sheet1.Cells(posY, 7).Value = Format(Mid(titlePosX(11, 1), 2), "00000") 'doc-dwg-no
          Sheet1.Cells(posY, 8).Value = Mid(titlePosX(8, 1), 2)  'dwg-no
          'CR1971 lineitemNo
          With Sheet1.Range("I" & posY) 'main item
           .NumberFormat = "00000000"
           .Font.Size = 8
          End With
          Sheet1.Cells(posY, 9).Value = titlePosX(5, 1) 'right(Material,8)
          
          Sheet1.Cells(posY, 10).Value = Left(wsout.Cells(k, Val(titlePosX(10, 2))).Value, 15) 'Column
          Sheet1.Cells(posY, 11).Value = titlePosX(7, 1) 'bed
          Counters = 1
          posY = posY + 1
        End If
      Else
        '**** Line item sub items ****
        '****
        If co_Inf(1) = wsout.Cells(k, Val(titlePosX(0, 2))).Value Then
          If wsout.Cells(k, Val(titlePosX(6, 2))).Value = "'Z" And Counters <> 2 Then
            With Sheet1.Range("A" & posY & ":K" & posY)
              .HorizontalAlignment = xlLeft
              .Font.Size = 9
              .NumberFormat = "General"
            End With
            Select Case Language
             Case "D": Sheet1.Cells(posY, 2).Value = "'MONTAGETEILE"
             Case "E": Sheet1.Cells(posY, 2).Value = "'INSTALLION PARTS"
             Case "Z": Sheet1.Cells(posY, 2).Value = sheetheader.Cells(21, 15).Value
            End Select
            
            posY = posY + 1
            Counters = 2
          End If
          If Counters = 0 Then
            With Sheet1.Range("A" & posY & ":K" & posY)
              .HorizontalAlignment = xlLeft
              .Font.Size = 9
              .NumberFormat = "General"
            End With
            Sheet1.Cells(posY, 2).Value = Mid(titlePosX(2, 1), 2)
            Sheet1.Cells(posY, 6).Value = Mid(titlePosX(4, 1), 2)
            Sheet1.Cells(posY, 7).Value = ""
            Sheet1.Cells(posY, 8).Value = Mid(titlePosX(8, 1), 2)
            'CR1971 lineitemNo
            'Sheet1.Cells(posY, 9).Value = CheckItemCont(titlePosX(5, 1), 3)
            Item$ = wsout.Cells(k, Val(titlePosX(12, 2))).Value
            With Sheet1.Range("I" & posY) 'subitem
             .NumberFormat = "0000"
             .Font.Size = 8
            End With
            Sheet1.Cells(posY, 9).Value = Right(Item$, 4) 'itemNo

            Sheet1.Cells(posY, 10).Value = Mid(titlePosX(5, 1), 1, 4)
            Sheet1.Cells(posY, 11).Value = titlePosX(7, 1)
            Counters = 1
            posY = posY + 1
          End If
          With Sheet1.Range("A" & posY & ":K" & posY)
            .HorizontalAlignment = xlLeft
            .Font.Size = 9
            .NumberFormat = "General"
          End With
          Sheet1.Range("B" & posY).HorizontalAlignment = xlCenter
          Sheet1.Cells(posY, 2).Value = Mid(wsout.Cells(k, Val(titlePosX(1, 2))).Value, 2) 'qty
          'remove basic-matl from description if exists 11.11.2015
          DescText = Mid(wsout.Cells(k, Val(titlePosX(3, 2))).Value, 2) 'description
          pos = InStr(1, DescText, ";")
          If pos > 0 Then
           DescText = Left(DescText, pos - 1)
          End If
          Sheet1.Cells(posY, 3).Value = DescText
          
          Sheet1.Cells(posY, 6).Value = Mid(wsout.Cells(k, Val(titlePosX(4, 2))).Value, 2) 'Basic Matl
          If Len(Trim((Mid(wsout.Cells(k, Val(titlePosX(13, 2))).Value, 2)))) > 0 Then
           Sheet1.Cells(posY, 5).Value = " " & Mid(wsout.Cells(k, Val(titlePosX(13, 2))).Value, 2)  'DRW Remarks
          End If
          Sheet1.Cells(posY, 7).Value = Format(Mid(wsout.Cells(k, Val(titlePosX(11, 2))).Value, 2), "00000") 'dwg-doc-no
          Sheet1.Cells(posY, 8).Value = Mid(wsout.Cells(k, Val(titlePosX(8, 2))).Value, 2)         'dwg-No
          'Item$ = wsout.Cells(k, Val(titlePosX(5, 2))).Value
          Item$ = wsout.Cells(k, Val(titlePosX(12, 2))).Value
          'CR1971
          'Sheet1.Cells(posY, 9).Value = CheckItemCont(titlePosX(5, 1), 3)         'lineitemNo
          With Sheet1.Range("I" & posY) 'subitem
            .NumberFormat = "0000"
            .Font.Size = 8
          End With
          Sheet1.Cells(posY, 9).Value = Right(Item$, 4)
          
          Sheet1.Cells(posY, 10).Value = Left(wsout.Cells(k, Val(titlePosX(10, 2))).Value, 15)       'column
          Sheet1.Cells(posY, 11).Value = wsout.Cells(k, Val(titlePosX(7, 2))).Value        'bed
          posY = posY + 1
        End If
      End If
    Next k
    'Neue Seite
    If posY > 42 Then colli = 1 Else colli = 0
    If Start < 39 Then colli = 1 Else colli = 0
    Do While posY > 44
      wbooktgt.Worksheets(Page + 4).Copy After:=wbooktgt.Sheets(wbooktgt.Sheets.Count)
      Page = Page + 1
      ActiveSheet.Name = "page " & Page
      'ChB modified
      'Set sheet1 = wbooktgt.sheets("page " & Page)
      Set Sheet1 = wbooktgt.ActiveSheet
      Worksheets(Page + 4).Range("A6:K" & posY).Clear
      If colli > 0 Then
        colli = colli + 1
        Worksheets("page 2").Range("A10:K11").Copy
        ActiveSheet.Paste Destination:=Worksheets(Page + 4).Range("A6:K7")
        Worksheets(Page + 4 - 1).Range("A45:K" & posY).Cut
        If colli = 1 Then
          posY = posY - 33
        Else
          posY = posY - 37
        End If
        ActiveSheet.Paste Destination:=Worksheets(Page + 4).Range("A8" & ":K" & posY)
      Else
        colli = 1
        Worksheets(Page + 4 - 1).Range("A" & Start & ":K" & posY).Cut
        posY = posY - Start + 6
        ActiveSheet.Paste Destination:=Worksheets(Page + 4).Range("A6" & ":K" & posY)
      End If
'      If posY < 45 Then
''       With Sheet1.Range("K46")
''         .HorizontalAlignment = xlRight
''         .Font.Size = 9
''         .NumberFormat = "General"
''         If Language = "Z" Then
''          .Value = sheetheader.Cells(3, 15).Value & Page & sheetheader.Cells(3, 16).Value
''         Else
''          .Value = "page " & Page
''         End If
''       End With
'      End If
      With Worksheets(Page + 4 - 1).Range("B45:L45").Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
      End With
      With Worksheets(Page + 4 - 1).Range("K46")
        .HorizontalAlignment = xlRight
        .Font.Size = 9
        .NumberFormat = "General"
        If Language = "Z" Then
         .Value = sheetheader.Cells(3, 15).Value & Page - 1 & sheetheader.Cells(3, 16).Value
        Else
         .Value = "page " & Page - 1
        End If
      End With
    Loop
  Next i
  
  '30.3.2010 modified ChB
  wbooktgt.Activate
  If Page > 1 Then
   With Worksheets(Page + 4).Range("B45:K45").Borders(xlEdgeBottom)
    .LineStyle = xlContinuous
    .Weight = xlThin
   End With
   With Worksheets(Page + 4).Range("K46")
    .HorizontalAlignment = xlRight
    .Font.Size = 9
    .NumberFormat = "General"
    If Language = "Z" Then
     .Value = sheetheader.Cells(3, 15).Value & Page & sheetheader.Cells(3, 16).Value
    Else
     .Value = "page " & Page
    End If
   End With
  End If
  
  'Last page with summary of Collis
  nP = Int(ColliCount / 37) + 1
  
  Select Case Language
   Case "D", "E"
    wbooktgt.Worksheets("Summary").Select
    wbooktgt.Worksheets("Summary").Move After:=Sheets(Page + 4)
    wbooktgt.Worksheets("Summary").Name = "Summary 1"
   Case "Z"
    wbooktgt.Worksheets("Summary_ZH").Select
    wbooktgt.Worksheets("Summary_ZH").Move After:=Sheets(Page + 4)
    wbooktgt.Worksheets("Summary_ZH").Name = "Summary 1"
  End Select
  
  For jj = 2 To nP
   wbooktgt.Worksheets("Summary 1").Select
   wbooktgt.Worksheets("Summary 1").Copy After:=Sheets(wbooktgt.Worksheets.Count)
   wbooktgt.ActiveSheet.Name = "Summary " & jj
  Next jj
  
  
  'activate first Summary sheet
  p = 1
  Set Sheet1 = wbooktgt.Worksheets("Summary " & p)
  
  posY = Collistart + 1
  Y1 = 8
  J = 0
  
  'content
  For posY = posY To Colliend
   For posX = 1 To 8
    If posX < 2 Then px = posX + 1 Else px = posX + 2
    Sheet1.Cells(Y1, px) = Mid(wsout.Cells(posY, posX), 2)
   Next posX
   If posY < Colliend Then
    Sheet1.Cells(Y1, 3) = HU(J)
    Sheet1.Cells(Y1, 11) = Left(ColN(J), 20)
   End If
   J = J + 1
   Y1 = Y1 + 1
   If Y1 > 36 + 8 Then
    'Format page
    With Sheet1.Range("B8:I44")
     .HorizontalAlignment = xlRight
     .Font.Size = 9
    End With
    With Sheet1.Range("K46")
     .HorizontalAlignment = xlRight
     .Font.Size = 9
     .NumberFormat = "General"
     If Language = "Z" Then
      .Value = sheetheader.Cells(3, 15).Value & Page + p & sheetheader.Cells(3, 16).Value
     Else
      .Value = "page " & Page + p
     End If
    End With
    With Sheet1.Range("B45:K45").Borders(xlEdgeBottom)
     .LineStyle = xlContinuous
     .Weight = xlThin
    End With
    'add new page
    p = p + 1
    Y1 = 8
    Set Sheet1 = wbooktgt.Worksheets("Summary " & p)
   End If
  Next posY
  
  'add Total Value / Currency
  Y1 = Y1 + 1
  
  
  If Val(TotalValue) > 0 And country = "WT" Then
   Sheet1.Cells(Y1, 8) = "Total Value:"
   Sheet1.Cells(Y1, 9) = TotalValue
   Sheet1.Cells(Y1, 10) = CurrencyValue
  End If
  
  Sheet1.Cells(Y1, 11).Select
  With Selection
   .HorizontalAlignment = xlLeft
  End With

  'format last page
   With Sheet1.Range("B8:I44")
     .HorizontalAlignment = xlRight
     .Font.Size = 9
    End With
    'insert page no
    With Sheet1.Range("K46")
     .HorizontalAlignment = xlRight
     .Font.Size = 9
     .NumberFormat = "General"
     If Language = "Z" Then
      .Value = sheetheader.Cells(3, 15).Value & Page + p & sheetheader.Cells(3, 16).Value
     Else
      .Value = "page " & Page + p
     End If
    End With
    With Sheet1.Range("B45:K45").Borders(xlEdgeBottom)
     .LineStyle = xlContinuous
     .Weight = xlThin
    End With
  
  'Last line = bold
  With Sheet1.Range(Sheet1.Cells(Y1 - 1, 2), Sheet1.Cells(Y1 - 1, 10))
     .Font.Bold = True
  End With
  Sheet1.Activate
  Sheet1.Range("B1").Select
  
  'cleanup header sheet (page 1)
  Dim YP As Integer, XP As Integer
  Select Case Language
   Case "Z"
    For YP = 1 To 21
     For XP = 15 To 24
      sheetheader.Cells(YP, XP).Value = " "
     Next XP
    Next YP
  End Select
  sheetheader.Activate
  sheetheader.Range("B11").Select
  
  'ChB modified
  'With Worksheets(Page).Range("B45:K45").Borders(xlEdgeBottom)
  wbooktgt.Worksheets("page 1").Range("K9") = Page + p
  
  
  'Enable hyperlinks in main page
  wbooktgt.Worksheets("Main").Select
  
  Range("B17").Select
  ActiveSheet.Hyperlinks.Add Anchor:=Selection, Address:="", SubAddress:= _
     "'page 1'!R1C1", TextToDisplay:="Page 1"
  Range("B18").Select
  ActiveSheet.Hyperlinks.Add Anchor:=Selection, Address:="", SubAddress:= _
     "'page 2'!R1C1", TextToDisplay:="Page 2-n"
  Range("B19").Select
  ActiveSheet.Hyperlinks.Add Anchor:=Selection, Address:="", SubAddress:= _
     "'Summary 1'!R1C1", TextToDisplay:="Summary-page"
        
  'save
  wbooktgt.SaveAs (pfad & filetgt)
  Application.DisplayAlerts = True
End Sub


Public Function HUCounter(ColliNo, TotColliCount, wsout, XPos)
 Dim i As Integer
 Dim HUCC As Integer
 
 collcount = 0
 For k = 9 To TotColliCount
  currCol = wsout.Cells(k, XPos).Value
  If currCol = ColliNo Then
   HUCC = HUCC + 1
  End If
 Next k
 
 HUCounter = HUCC
 
End Function

Public Sub HUtest(ColliNo, TotLinecount, wsout, XPos)
 Dim k As Integer
 
 
 For k = 9 To TotLinecount
  currCol = wsout.Cells(k, XPos).Value
  If currCol = ColliNo Then
   HUcurrent = wsout.Cells(k, Val(titlePosX(9, 2))).Value
   ColNameCurrent = wsout.Cells(k, Val(titlePosX(10, 2))).Value
   HU(HUcount) = HUcurrent
   ColN(HUcount) = ColNameCurrent
  End If
 Next k
 
 HUcount = HUcount + 1

 
End Sub

Private Sub ReshapeAddress()
 Dim shapeobj As Excel.Shape
 Dim shapeobjN As Excel.Shape
 
 Dim LeftPos As Single
 Dim TopPos As Single
 
 Dim Place As String
 

 On Error GoTo e1

 Set shapeobj = ActiveSheet.Shapes("Text Box 5")
 
 'Read position
 LeftPos = shapeobj.Left
 TopPos = shapeobj.Top
 
 
 shapeobj.Left = 5000
 shapeobj.Top = 5000



 Select Case country
  Case "1": Set shapeobjN = ActiveSheet.Shapes("Text Box 22")
             Place = ActiveSheet.Cells(1, 22).Value
  Case "2": Set shapeobjN = ActiveSheet.Shapes("Text Box 23")
             Place = ActiveSheet.Cells(9, 22).Value
  Case "3": Set shapeobjN = ActiveSheet.Shapes("Text Box 24")
             Place = ActiveSheet.Cells(18, 22).Value
  Case "4": Set shapeobjN = ActiveSheet.Shapes("Text Box 2")
             Place = ActiveSheet.Cells(26, 22).Value
  Case Else
   Set shapeobjN = ActiveSheet.Shapes("Text Box 5")
 End Select
 
 ActiveSheet.Cells(7, 9).Value = Place
 
 shapeobjN.Left = LeftPos
 shapeobjN.Top = TopPos
 
 Exit Sub
 
e1:
 msg = MsgBox("The country code:" & country & " is not known. Please check Address.", vbCritical, "Warning")
 
 
End Sub

Private Function defcountry() As String

  Dim wb As Workbook
  Dim str_ctry As String
  
  On Error GoTo e2:
  
  Set wb = Excel.ActiveWorkbook
  str_aktPath = wb.Path
  str_aktName = wb.Name
  str_share = ""
  str_aktDrive = UCase(Left(str_aktPath, 2))
' Server
 If str_aktDrive = "\\" Then
    str_share = UCase(Left(str_aktPath, 8))
    str_sharename = UCase(str_aktPath)
' Drive
  Else
' User country
    Set fs = CreateObject("Scripting.FileSystemObject")
'    Set d = fs.GetDrive("G:\")      'indirect access to "M:\" = subst("G:\trk\cad\") in CTWT
    Set d = fs.GetDrive(str_aktDrive)
    str_share = UCase(Left(d.sharename, 8))
    str_sharename = UCase(str_aktPath)
  End If
'
 Select Case Left(UCase(str_share), 6)
  Case "\\CTOX": str_ctry = "WT"
  Case "\\SCTS": str_ctry = "SG"
  Case "\\CTCN": str_ctry = "CN"
  Case "\\CTIN": str_ctry = "IN"
  Case "\\CTUS": str_ctry = "US"
  Case "\\CTRU": str_ctry = "RU"
  Case "\\CTMX": str_ctry = "MX"
 End Select

 defcountry = str_ctry

 Exit Function
 
e2:
 msg = MsgBox("It is not possible to read the country from the share-drive:" & str_share, vbCritical, "Warning")


End Function

Public Function CheckItemCont(content As String, ByVal L As Integer) As String

Dim i As Long
Dim cont As String

i = InStrRev(content, "/")
If i <> 0 Then
 Select Case L
  Case 3: cont = Left(content, 4) & Format(Right(content, L), "000")
  Case 4: cont = "'" & Format(Right(content, L), "0000")
 End Select
Else
 cont = content
End If

CheckItemCont = cont


End Function


Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle24"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle25"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle26"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle27"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle28"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle29"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle30"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle31"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle32"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle33"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle34"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle35"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle36"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle37"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle38"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle39"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle40"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle41"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle42"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Tabelle43"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True




INQUEST-PP=macro
