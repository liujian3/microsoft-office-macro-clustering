Attribute VB_Name = "EC_00"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "EC_01"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
    
    Application.EnableCancelKey = xlDisabled
    
    
    
    Call CHandler
    
    If Target.Row >= StartZeile And Target.Column >= StartSpalte And Target.Row <= StartZeile + EC_02.Cells(6, 22).Value And Target.Column <= StartSpalte + EC_02.Cells(6, 23).Value Then
        Call DblKlk(Target)
    End If
    
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    If EC_02.Cells(6, 26).Value = "x" And TimerAktiv = False And EC_02.Cells(9, 25).Value + (CDbl(EC_02.Cells(9, 22).Value) * 5) < Now Then Call CheatHandler("Unerlaubter Codeabbruch")

End Sub
Attribute VB_Name = "EC_02"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "EC_03"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "EC_04"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "EC_Code"
Option Explicit
Option Private Module

Dim TimerIntervall As Double
Dim TimerAktiv As Boolean
Dim TimerReset As Boolean
Dim CheatAktiv As Boolean

Public Sub CHandler()
    If EC_02.Cells(9, 23).Value > Now Then Call EC_Code.CheatHandler("Zeitmanipulation (H)")
    If EC_02.Cells(9, 25).Value > Now Then Call EC_Code.CheatHandler("Zeitmanipulation (M)")
    If EC_02.Cells(9, 25).Value + (CDbl(EC_02.Cells(9, 22).Value) * 6) < Now Then Call EC_Code.CheatHandler("Zeitmanipulation (L)") 'MsgBox (CDbl(EC_02.Cells(9, 25).Value) & " - " & (CDbl(EC_02.Cells(9, 22).Value) * 2))
End Sub

Public Sub DblKlk(ByVal Target As Range)
    Dim Anzahl As Integer
    
    If CheatAktiv = True Then Exit Sub
    Application.ScreenUpdating = False
    EC_01.Unprotect (Psswrt)
    Anzahl = EC_02.Cells(6, 24).Value
    EC_02.Cells(6, 26).Value = ""
    Call SelectCells(Anzahl, Target.Row, Target.Column)
    Call ClearBorders(EC_02.Cells(6, 22).Value, EC_02.Cells(6, 23).Value)
    Call MarkCells(Anzahl)
    Call CheckResult(Anzahl)
    Application.CutCopyMode = False
    EC_01.Cells(1, 1).Select
    EC_01.Protect (Psswrt)
    Application.ScreenUpdating = True
End Sub
Private Sub Start()
    
    Dim Level_Anz As Integer
    Dim Level_Font As Integer
    Dim Level_Back As Integer
    Dim Level_Zeile As Integer
    Dim Level_Text As Integer

    Application.EnableCancelKey = KeyStatus
    'On Error GoTo Fehlerbehandlung
    EC_02.Cells(6, 26).Value = ""
    Application.ScreenUpdating = False
    EC_02.Cells(6, 25).Value = 1
    EC_02.Cells(13, 22).Value = 0
    EC_02.Cells(13, 24).Value = 0
    EC_03.Range(EC_03.Cells(5, 14), EC_03.Cells(37, 14)).ClearContents
    EC_01.Visible = xlSheetVisible
    EC_01.Select
    EC_01.Cells(1, 1).Select
    EC_00.Visible = xlSheetVeryHidden
    
    Level_Zeile = 5
    While EC_03.Cells(Level_Zeile, 3).Value <> 1
        Level_Zeile = Level_Zeile + 1
    Wend
    
    Level_Anz = EC_03.Cells(Level_Zeile, 7).Value
    Level_Text = EC_03.Cells(Level_Zeile, 8).Value
    Level_Font = EC_03.Cells(Level_Zeile, 9).Value
    Level_Back = EC_03.Cells(Level_Zeile, 10).Value
   
    Application.ScreenUpdating = True
    
    Call FillSplash(EC_02.Cells(6, 25).Value, Level_Anz, Level_Text & " Begriffe " & vbCr & Level_Font & " Textfarben " & vbCr & Level_Back & " Hintergundfarben")
    Application.ScreenUpdating = True
    
    'newHour = Hour(Now())
    'newMinute = Minute(Now())
    'newSecond = Second(Now()) + 10
    'waitTime = TimeSerial(newHour, newMinute, newSecond)
    'Application.Wait waitTime
    'Application.Wait (2)
    'Call ClearSplash
    'Call Aufbau(1)
    
    Exit Sub
    
Fehlerbehandlung:
    Call ErrorHandler("Laufzeitfehler")
    
End Sub

Public Sub ClearSplash()
    
    EC_02.Cells(6, 26).Value = ""
    Application.EnableCancelKey = xlDisabled
    EC_01.Unprotect (Psswrt)
    EC_01.Shapes("Rechteck 7").Visible = msoFalse
    EC_01.Shapes("Rechteck 4").Visible = msoFalse
    EC_01.Shapes("Wolke 5").Visible = msoFalse
    
    EC_01.Shapes("Textfeld 9").Visible = msoFalse
    EC_01.Shapes("Textfeld 6").Visible = msoFalse
    EC_01.Shapes("Textfeld 8").Visible = msoFalse
    'EC_01.Range("A1").Value = Tabelle1.Range("A1").Value + 1
    EC_01.Shapes("Abgerundetes Rechteck 10").Visible = msoFalse
    EC_01.Protect (Psswrt)
    
    Call Aufbau(EC_02.Cells(6, 25).Value)
      
End Sub

Public Sub FillSplash(mLevel As Integer, Anzahl As Integer, Aufzaehlung As String)

    Application.EnableCancelKey = KeyStatus
    EC_01.Unprotect (Psswrt)
    EC_01.Shapes("Rechteck 7").TextFrame.Characters.Text = "Level " & CStr(mLevel)
    EC_01.Shapes("Rechteck 7").Visible = msoTrue
    EC_01.Shapes("Rechteck 4").Visible = msoTrue
    EC_01.Shapes("Wolke 5").Visible = msoTrue
    
    EC_01.Shapes("Textfeld 9").TextFrame.Characters.Text = "Suche " & Anzahl & " Passende"
    EC_01.Shapes("Textfeld 9").Visible = msoTrue
    EC_01.Shapes("Textfeld 6").TextFrame.Characters.Text = Aufzaehlung
    EC_01.Shapes("Textfeld 6").Visible = msoTrue
    EC_01.Shapes("Textfeld 8").Visible = msoTrue
    EC_01.Shapes("Abgerundetes Rechteck 10").Visible = msoTrue
    EC_01.Protect (Psswrt)
    EC_02.Cells(6, 26).Value = "x"
    
End Sub

Private Sub Beenden()
    
    'Call ClearSplash
    TimerAktiv = False
    EC_02.Cells(6, 26).Value = ""
    Call Spielende
    
End Sub

Private Sub Aufbau(Level As Integer)
    
    Dim Zeile As Integer
    Dim Spalte As Integer
    Dim Z|fffd|hler As Integer
    Dim Bug_Z|fffd|hler As Integer
    Dim Level_Zeile As Integer
    Dim Level_Nr As Integer
    Dim Level_Zeit As Double
    Dim Level_X As Integer
    Dim Level_Y As Integer
    Dim Level_Anz As Integer
    Dim Level_Font As Integer
    Dim Level_Back As Integer
    Dim Level_Zellen As Integer
    Dim Level_Text As Integer
    Dim newHour As Variant
    Dim newMinute As Variant
    Dim newSecond As Variant
    Dim waitTime As Variant
    
    On Error GoTo Fehlerbehandlung
    Application.EnableCancelKey = KeyStatus
    Application.Calculation = xlCalculationManual
    EC_02.Cells(6, 26).Value = ""
    EC_01.Unprotect (Psswrt)
    
    Level_Zeile = 5
    While EC_03.Cells(Level_Zeile, 3).Value <> Level
        Level_Zeile = Level_Zeile + 1
    Wend
    
    Level_Zeit = EC_03.Cells(Level_Zeile, 4).Value
    Level_X = EC_03.Cells(Level_Zeile, 5).Value
    Level_Y = EC_03.Cells(Level_Zeile, 6).Value
    Level_Anz = EC_03.Cells(Level_Zeile, 7).Value
    Level_Text = EC_03.Cells(Level_Zeile, 8).Value
    Level_Font = EC_03.Cells(Level_Zeile, 9).Value
    Level_Back = EC_03.Cells(Level_Zeile, 10).Value
    Level_Zellen = EC_03.Cells(Level_Zeile, 11).Value
    
    Application.ScreenUpdating = False
    EC_01.Range(EC_01.Cells(StartZeile, StartSpalte), EC_01.Cells(StartZeile + 14, StartSpalte + 23)).ClearContents
    EC_01.Range(EC_01.Cells(StartZeile, StartSpalte), EC_01.Cells(StartZeile + 14, StartSpalte + 23)).Interior.Pattern = xlNone
    EC_02.Cells(14, 22).Value = 0
    EC_02.Cells(14, 24).Value = 0
    
    EC_02.Cells(6, 22).Value = Level_Y
    EC_02.Cells(6, 23).Value = Level_X
    EC_02.Cells(6, 24).Value = Level_Anz
    EC_02.Cells(9, 24).Value = Level_Zeit
    EC_01.Cells(4, 3).Value = "Level " & Level & " - " & Level_X & "x" & Level_Y & " - Finde " & Level_Anz & " gleiche Kombinationen (" & Level_Text & "/" & Level_Font & "/" & Level_Back & ")"
    
    EC_02.Range(EC_02.Cells(6, 10), EC_02.Cells(455, 10)).ClearContents
    EC_02.Range(EC_02.Cells(6, 12), EC_02.Cells(455, 20)).ClearContents
    Z|fffd|hler = 6
    Bug_Z|fffd|hler = 0
    
    EC_01.Rows("10:20").Hidden = True
    EC_01.Columns("G:Z").Hidden = True
    For Zeile = StartZeile To StartZeile + Level_Y - 1
        EC_01.Rows(Zeile).Hidden = False
        EC_01.Rows(Zeile).RowHeight = 30 * (15 / Level_Y)
    Next Zeile
    For Spalte = StartSpalte To StartSpalte + Level_X - 1
        EC_01.Columns(Spalte).Hidden = False
        EC_01.Columns(Spalte).ColumnWidth = 8 * (24 / Level_X)
    Next Spalte
    EC_01.Range(EC_01.Cells(StartZeile, StartSpalte), EC_01.Cells(StartZeile + Level_Y - 1, StartSpalte + Level_X - 1)).Font.Size = Int(8 + (35 - Level) / 2)
    
    For Zeile = StartZeile To StartZeile + Level_Y - 1
        For Spalte = StartSpalte To StartSpalte + Level_X - 1
            Call Baustein(Z|fffd|hler, 10, Level_Text, Level_Font, Level_Back)
            If CheckBaustein(Level_Anz - 1, Z|fffd|hler, 10) = True Then
                Z|fffd|hler = Z|fffd|hler + 1
                EC_02.Cells(6, 8).Copy
                EC_01.Cells(Zeile, Spalte).PasteSpecial xlPasteAll
            Else
                Spalte = Spalte - 1
                Bug_Z|fffd|hler = Bug_Z|fffd|hler + 1
                If Bug_Z|fffd|hler > 10000 Then
                    'MsgBox (Tool & " findet keine Kombination mehr!")
                    Call ErrorHandler("Endlos-Schleife")
                End If
            End If
            'MsgBox (Z|fffd|hler & " - " & Zeile & " - " & Spalte)
        Next Spalte
    Next Zeile
    
    Bug_Z|fffd|hler = 0
    Call Baustein(Z|fffd|hler, 10, Level_Text, Level_Font, Level_Back)
    While CheckBaustein(1, Z|fffd|hler, 10) = False
        Call Baustein(Z|fffd|hler, 10, Level_Text, Level_Font, Level_Back)
        Bug_Z|fffd|hler = Bug_Z|fffd|hler + 1
        If Bug_Z|fffd|hler > 10000 Then
            MsgBox (Tool & " findet keine Kombination mehr!")
            Call ErrorHandler("Endlos-Schleife")
        End If
    Wend
    EC_02.Cells(13, 26).Value = Z|fffd|hler
    EC_02.Cells(14, 26).Value = Level_Zellen - Level_Anz
    Call CreateBaustein(Level_Anz, Level_Y, Level_X)
    Call PositionBaustein(Level_Anz)
    Call ClearBorders(Level_Y, Level_X)
    EC_01.Range(EC_01.Cells(StartZeile, StartSpalte), EC_01.Cells(StartZeile + Level_Y - 1, StartSpalte + Level_X - 1)).Font.Size = Int(10 + (35 - Level) / 2)
    Application.CutCopyMode = False
    EC_01.Cells(1, 1).Select
    
    EC_01.Protect (Psswrt)
    Application.Calculation = xlCalculationAutomatic
    Call ResetTimer(Level_Zeit)
    Application.ScreenUpdating = True
    
    Exit Sub
    
Fehlerbehandlung:
    Call ErrorHandler("Laufzeitfehler")
    
End Sub

Private Sub Baustein(Zeile As Integer, Spalte As Integer, Stufe_Text As Integer, Stufe_Font As Integer, Stufe_Back As Integer)
Attribute Baustein.VB_ProcData.VB_Invoke_Func = " \n14"

    Dim Text As Integer
    Dim Schrift As Integer
    Dim Hintergrund As Integer
    
    Application.EnableCancelKey = KeyStatus
    
    VBA.Randomize
    
    Text = Int((Stufe_Text - 1 + 1) * Rnd + 1)
    Schrift = Int((Stufe_Font - 1 + 1) * Rnd + 1)
    Hintergrund = Int((Stufe_Back - 1 + 1) * Rnd + 1)
    
    EC_02.Cells(6, 8).Value = EC_02.Cells(5 + Text, 2).Value
    EC_02.Cells(6, 8).Font.ThemeColor = EC_02.Cells(5 + Schrift, 4).Font.ThemeColor
    EC_02.Cells(6, 8).Interior.ThemeColor = EC_02.Cells(5 + Hintergrund, 6).Interior.ThemeColor
    EC_02.Cells(6, 8).Interior.TintAndShade = EC_02.Cells(5 + Hintergrund, 6).Interior.TintAndShade
    
    EC_02.Cells(Zeile, Spalte).Value = Text & " - " & Schrift & " - " & Hintergrund
    'MsgBox (Text & " - " & Schrift & " - " & Hintergrund)
    
End Sub

Private Sub CreateBaustein(Anzahl As Integer, MaxZeile As Integer, MaxSpalte As Integer)

    Dim Z|fffd|hler As Integer
    Dim Zeile As Integer
    Dim Spalte As Integer
    Dim Bug_Z|fffd|hler As Integer
    
    Application.EnableCancelKey = KeyStatus
    If Anzahl < 1 Then Anzahl = 1
    Bug_Z|fffd|hler = 1
    
    For Z|fffd|hler = 6 To 5 + Anzahl
        VBA.Randomize
        Zeile = Int((MaxZeile - 1 + 0) * Rnd + 0) + StartZeile
        Spalte = Int((MaxSpalte - 1 + 0) * Rnd + 0) + StartSpalte
        EC_02.Cells(Z|fffd|hler, 12).Value = Zeile
        EC_02.Cells(Z|fffd|hler, 13).Value = Spalte
        EC_02.Cells(Z|fffd|hler, 14).Value = Zeile & " - " & Spalte
        If CheckBaustein(1, Z|fffd|hler, 14) = False Then Z|fffd|hler = Z|fffd|hler - 1
        Bug_Z|fffd|hler = Bug_Z|fffd|hler + 1
        If Bug_Z|fffd|hler > 10000 Then
            Call ErrorHandler("Endlos-Schleife CreateBaustein")
        End If
    Next Z|fffd|hler
    
    'MsgBox (Zeile & " - " & Spalte)
    
End Sub

Private Sub PositionBaustein(Anzahl As Integer)

    Dim Zeile As Integer
    
    Application.EnableCancelKey = KeyStatus
    If Anzahl < 1 Then Anzahl = 1
    
    EC_02.Cells(6, 8).Copy
    
    For Zeile = 6 To 5 + Anzahl
        EC_01.Cells(EC_02.Cells(Zeile, 12).Value, EC_02.Cells(Zeile, 13).Value).PasteSpecial xlPasteAll
    Next Zeile
    
    'MsgBox (Zeile)
    
End Sub

Private Function CheckBaustein(Anzahl As Integer, StartZeile As Integer, Spalte As Integer) As Boolean

    Dim Z|fffd|hler As Integer
    Dim Zeile As Integer
    Dim Vergleichstext As String
    Dim Hintergrund As Integer
    
    Application.EnableCancelKey = KeyStatus
    
    Z|fffd|hler = 1
    Zeile = StartZeile
    Vergleichstext = EC_02.Cells(Zeile, Spalte).Value
    Zeile = Zeile - 1
    CheckBaustein = True
    
    While EC_02.Cells(Zeile, Spalte).Value <> ""
        If EC_02.Cells(Zeile, Spalte).Value = Vergleichstext Then Z|fffd|hler = Z|fffd|hler + 1
        If Z|fffd|hler > Anzahl Then
            CheckBaustein = False
            Exit Function
        End If
        Zeile = Zeile - 1
        If Zeile < 6 Then Exit Function
    Wend
    
End Function

Public Sub ClearBorders(Zeilen As Integer, Spalten As Integer)

    Application.EnableCancelKey = KeyStatus
    EC_01.Range(EC_01.Cells(StartZeile, StartSpalte), EC_01.Cells(StartZeile + Zeilen - 1, StartSpalte + Spalten - 1)).Select
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ThemeColor = 8
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ThemeColor = 8
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ThemeColor = 8
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ThemeColor = 8
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ThemeColor = 8
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ThemeColor = 8
        .TintAndShade = 0
        .Weight = xlThin
    End With
    
End Sub

Public Sub SelectCells(Anzahl As Integer, Zeile As Integer, Spalte As Integer)

    Dim Z|fffd|hler As Integer
    Dim Marker As Integer
    
    Application.EnableCancelKey = KeyStatus
    If Anzahl < 1 Then Anzahl = 1
    
    For Z|fffd|hler = 6 To 5 + Anzahl
        If EC_02.Cells(Z|fffd|hler, 19).Value = "" Then
            EC_02.Cells(Z|fffd|hler, 19).Value = 1
            Marker = Z|fffd|hler
            Exit For
        ElseIf EC_02.Cells(Z|fffd|hler, 19).Value = Anzahl Then
            EC_02.Cells(Z|fffd|hler, 19).Value = 1
            Marker = Z|fffd|hler
        Else
            EC_02.Cells(Z|fffd|hler, 19).Value = EC_02.Cells(Z|fffd|hler, 19).Value + 1
        End If
    Next Z|fffd|hler
    
    EC_02.Cells(Marker, 17).Value = Zeile
    EC_02.Cells(Marker, 18).Value = Spalte
    EC_02.Cells(Marker, 20).Value = Zeile & " - " & Spalte
    
End Sub

Public Sub MarkCells(Anzahl As Integer)

    Dim Z|fffd|hler As Integer
    Dim Zeile As Integer
    Dim Spalte As Integer
    
    Application.EnableCancelKey = KeyStatus
    If Anzahl < 1 Then Anzahl = 1
    
    For Z|fffd|hler = 6 To 5 + Anzahl
        If EC_02.Cells(Z|fffd|hler, 17).Value = "" Or EC_02.Cells(Z|fffd|hler, 18).Value = "" Then Exit For
        Zeile = EC_02.Cells(Z|fffd|hler, 17).Value
        Spalte = EC_02.Cells(Z|fffd|hler, 18).Value
        EC_01.Range(EC_01.Cells(Zeile, Spalte), EC_01.Cells(Zeile, Spalte)).Select
        With Selection.Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .ThemeColor = 5
            .TintAndShade = 0
            .Weight = xlThick
        End With
        With Selection.Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            .ThemeColor = 5
            .TintAndShade = 0
            .Weight = xlThick
        End With
        With Selection.Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .ThemeColor = 5
            .TintAndShade = 0
            .Weight = xlThick
        End With
        With Selection.Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .ThemeColor = 5
            .TintAndShade = 0
            .Weight = xlThick
        End With
    Next Z|fffd|hler
    
End Sub

Public Sub CheckResult(Anzahl As Integer)

    Dim Z|fffd|hler1 As Integer
    Dim Z|fffd|hler2 As Integer
    Dim Zeile As Integer
    Dim Spalte As Integer
    
    Application.EnableCancelKey = KeyStatus
    If Anzahl < 1 Then Anzahl = 1
    
    EC_02.Range(EC_02.Cells(6, 15), EC_02.Cells(6 + Anzahl - 1, 15)).ClearContents
    For Z|fffd|hler1 = 6 To 5 + Anzahl
        For Z|fffd|hler2 = 6 To 5 + Anzahl
            If EC_02.Cells(Z|fffd|hler1, 14).Value = EC_02.Cells(Z|fffd|hler2, 20).Value Then
                EC_02.Cells(Z|fffd|hler1, 15).Value = "x"
                Exit For
            End If
        Next Z|fffd|hler2
    Next Z|fffd|hler1
    
    For Z|fffd|hler1 = 6 To 5 + Anzahl
        If EC_02.Cells(Z|fffd|hler1, 15).Value <> "x" Then Exit Sub
    Next Z|fffd|hler1
    
    TimerAktiv = False
    Call N|fffd|chstesLevel

End Sub

Private Sub N|fffd|chstesLevel()
    
    Dim Level_Anz As Integer
    Dim Level_Font As Integer
    Dim Level_Back As Integer
    Dim Level_Zeile As Integer
    Dim Level_Text As Integer
    Dim Zeile As Integer
    
    Application.EnableCancelKey = KeyStatus
    On Error GoTo Fehlerbehandlung
    
    For Zeile = 5 To MaxLevel + 5 - 1
        If EC_03.Cells(Zeile, 14).Value = "" Then
            EC_03.Cells(Zeile, 14).Value = EC_01.Cells(7, 30).Value
            Exit For
        End If
    Next Zeile
    
    If EC_02.Cells(6, 25).Value = MaxLevel Then
        Call Spielende
        Call sndPlaySound32(1, 1)
        Exit Sub
    End If
    Application.ScreenUpdating = True
    EC_01.Cells(4, 3).Value = "Gut gemacht! Lade Level " & EC_02.Cells(6, 25).Value + 1 & "!"
    Application.ScreenUpdating = False
    Call sndPlaySound32(1, 1)
    EC_02.Cells(6, 25).Value = EC_02.Cells(6, 25).Value + 1
    
    Application.ScreenUpdating = True
    
    Level_Zeile = 5
    While EC_03.Cells(Level_Zeile, 3).Value <> EC_02.Cells(6, 25).Value
        Level_Zeile = Level_Zeile + 1
    Wend
    
    Level_Anz = EC_03.Cells(Level_Zeile, 7).Value
    Level_Text = EC_03.Cells(Level_Zeile, 8).Value
    Level_Font = EC_03.Cells(Level_Zeile, 9).Value
    Level_Back = EC_03.Cells(Level_Zeile, 10).Value
    
    Call FillSplash(EC_02.Cells(6, 25).Value, Level_Anz, Level_Text & " Begriffe " & vbCr & Level_Font & " Textfarben " & vbCr & Level_Back & " Hintergundfarben")
    Application.ScreenUpdating = True
    
    'Call Aufbau(EC_02.Cells(6, 25).Value)
    Exit Sub

Fehlerbehandlung:
    Call ErrorHandler("Laufzeitfehler")

End Sub

Private Sub Spielende()

    Dim Zeile As Integer
    Dim Score As Integer
    
    Application.EnableCancelKey = KeyStatus
    On Error GoTo Fehlerbehandlung
    Application.ScreenUpdating = False
    TimerAktiv = False
    
    If CheatAktiv = True Then
        Score = 0
    Else
        For Zeile = 5 To MaxLevel + 5 - 1
            If EC_03.Cells(Zeile, 14).Value > 0 Then Score = Score + EC_03.Cells(Zeile, 15).Value
        Next Zeile
        Score = Score - EC_02.Cells(13, 22).Value * EC_02.Cells(14, 23).Value - EC_02.Cells(13, 24).Value * EC_02.Cells(14, 25).Value
        If Score < 0 Then Score = 0
    End If
    CheatAktiv = False
    
    EC_02.Cells(15, 26).Value = Score
    EC_04.Cells(12, 3).Value = Score
    EC_00.Unprotect (Psswrt)
    EC_00.Cells(8, 7).Value = Score
    EC_00.Protect (Psswrt)
    EC_01.Activate
    Call L|fffd|sung
    
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True
    Call sndPlaySound32(1, 1)
    Application.Wait (Now + CDbl(EC_02.Cells(9, 22).Value) * 2)
    EC_00.Visible = xlSheetVisible
    EC_00.Activate
    EC_00.Select
    EC_00.Cells(1, 1).Select
    EC_01.Visible = xlSheetVeryHidden
    Call ShowHSSpalsh
    End
    Exit Sub
    
Fehlerbehandlung:
    Call ErrorHandler("Laufzeitfehler")

End Sub

Private Sub ZeitJoker()
    
    Application.EnableCancelKey = KeyStatus
    EC_02.Cells(6, 26).Value = ""
    
    If EC_02.Cells(14, 22).Value < 3 Then
        EC_01.Unprotect (Psswrt)
        EC_02.Cells(9, 24).Value = EC_02.Cells(9, 24).Value + EC_02.Cells(13, 23).Value
        EC_02.Calculate
        EC_01.Cells(7, 30).Value = EC_02.Cells(9, 26).Value
        EC_01.Protect (Psswrt)
        
        EC_02.Cells(13, 22).Value = EC_02.Cells(13, 22).Value + 1
        EC_02.Cells(14, 22).Value = EC_02.Cells(14, 22).Value + 1
    End If
    
End Sub

Private Sub HilfeJoker()
    
    Dim MaxHilfe As Integer
    Dim Z|fffd|hler As Integer
    Dim Zeile As Integer
    Dim Spalte As Integer
    Dim MaxZeilen As Integer
    Dim MaxSpalten As Integer
    
    Application.EnableCancelKey = KeyStatus
    EC_02.Cells(6, 26).Value = ""
    If EC_02.Cells(14, 24).Value < 2 Then
        MaxHilfe = CInt(EC_02.Cells(14, 26).Value * EC_02.Cells(13, 25).Value)
        EC_02.Cells(14, 26).Value = EC_02.Cells(14, 26).Value - MaxHilfe
        VBA.Randomize
        MaxZeilen = EC_02.Cells(6, 22).Value
        MaxSpalten = EC_02.Cells(6, 23).Value
        Z|fffd|hler = 0
        EC_01.Unprotect (Psswrt)
        While Z|fffd|hler < MaxHilfe
            Zeile = Int((MaxZeilen + 0) * Rnd + 0) + StartZeile
            Spalte = Int((MaxSpalten + 0) * Rnd + 0) + StartSpalte
            If EC_01.Cells(Zeile, Spalte).Value <> EC_02.Cells(7, 8).Value Or EC_01.Cells(Zeile, Spalte).Font.ThemeColor <> EC_02.Cells(7, 8).Font.ThemeColor Or EC_01.Cells(Zeile, Spalte).Interior.ThemeColor <> EC_02.Cells(7, 8).Interior.ThemeColor Then
                If EC_01.Cells(Zeile, Spalte).Value <> EC_02.Cells(6, 8).Value Or EC_01.Cells(Zeile, Spalte).Font.ThemeColor <> EC_02.Cells(6, 8).Font.ThemeColor Or EC_01.Cells(Zeile, Spalte).Interior.ThemeColor <> EC_02.Cells(6, 8).Interior.ThemeColor Then
                    EC_02.Cells(7, 8).Copy
                    EC_01.Cells(Zeile, Spalte).PasteSpecial xlPasteAll
                    Z|fffd|hler = Z|fffd|hler + 1
                End If
            End If
        Wend
        Call ClearBorders(MaxZeilen, MaxSpalten)
        EC_01.Protect (Psswrt)
        Application.CutCopyMode = False
        EC_01.Cells(1, 1).Select
    
        EC_02.Cells(13, 24).Value = EC_02.Cells(13, 24).Value + 1
        EC_02.Cells(14, 24).Value = EC_02.Cells(14, 24).Value + 1
    End If
    
End Sub

Private Sub L|fffd|sung()
    
    Dim Auswahl As Integer
    Dim Z|fffd|hler As Integer
    Dim Zeile As Integer
    Dim Spalte As Integer
    Dim MaxZeilen As Integer
    Dim MaxSpalten As Integer
    
    On Error GoTo Fehlerbehandlung
    Application.EnableCancelKey = KeyStatus
    EC_02.Cells(6, 26).Value = ""
    MaxZeilen = EC_02.Cells(6, 22).Value
    MaxSpalten = EC_02.Cells(6, 23).Value
    Auswahl = EC_02.Cells(6, 24).Value
    Z|fffd|hler = 0
    EC_01.Unprotect (Psswrt)
    Call ClearBorders(MaxZeilen, MaxSpalten)
    While Z|fffd|hler < Auswahl
        Zeile = EC_02.Cells(6 + Z|fffd|hler, 12).Value
        Spalte = EC_02.Cells(6 + Z|fffd|hler, 13).Value
        If Zeile = 0 Then Zeile = StartZeile
        If Spalte = 0 Then Spalte = StartSpalte
        EC_01.Range(EC_01.Cells(Zeile, Spalte), EC_01.Cells(Zeile, Spalte)).Select
        With Selection.Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .ThemeColor = 9
            .TintAndShade = 0
            .Weight = xlThick
        End With
        With Selection.Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            .ThemeColor = 9
            .TintAndShade = 0
            .Weight = xlThick
        End With
        With Selection.Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .ThemeColor = 9
            .TintAndShade = 0
            .Weight = xlThick
        End With
        With Selection.Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .ThemeColor = 9
            .TintAndShade = 0
            .Weight = xlThick
        End With
    Z|fffd|hler = Z|fffd|hler + 1
    Wend
    EC_01.Protect (Psswrt)
    Application.CutCopyMode = False
    EC_01.Cells(1, 1).Select
    Exit Sub
    
Fehlerbehandlung:
    Call ErrorHandler("Laufzeitfehler")
    
End Sub

Private Sub CloseHSSpalsh()

    Application.EnableCancelKey = KeyStatus
    EC_00.Unprotect (Psswrt)
    EC_00.Shapes("Rechteck 8").Visible = msoFalse
    EC_00.Shapes("Rechteck 5").Visible = msoFalse
    EC_00.Shapes("Wolke 6").Visible = msoFalse
    EC_00.Shapes("Textfeld 10").Visible = msoFalse

    'EC_00.Shapes("Abgerundetes Rechteck 11").Visible = msoFalse
    EC_00.Shapes("Abgerundetes Rechteck 12").Visible = msoFalse
    EC_00.Protect (Psswrt)
    
End Sub

Private Sub ShowHSSpalsh()
    
    Application.EnableCancelKey = KeyStatus
    EC_00.Unprotect (Psswrt)
    EC_00.Shapes("Rechteck 8").Visible = msoTrue
    EC_00.Shapes("Rechteck 5").Visible = msoTrue
    EC_00.Shapes("Wolke 6").Visible = msoTrue
    
    EC_00.Shapes("Textfeld 10").TextFrame.Characters.Text = "Score: " & EC_00.Range("G8").Value
    EC_00.Shapes("Textfeld 10").Visible = msoTrue

    'EC_00.Shapes("Abgerundetes Rechteck 11").Visible = msoTrue
    EC_00.Shapes("Abgerundetes Rechteck 12").Visible = msoTrue
    EC_00.Protect (Psswrt)
    
End Sub
Private Sub HighscoreTransmitter()

    Application.EnableCancelKey = KeyStatus
    Call CloseHSSpalsh
    ActiveWorkbook.FollowHyperlink "http://nextlevel.cloudapp.net/pmchallenge/submit?p=" & EC_04.Range("H17").Value
    EC_04.Cells(12, 3).Value = 0
End Sub

Private Sub ResetTimer(Zeit As Double)

    Application.EnableCancelKey = KeyStatus
    EC_02.Cells(9, 23).Value = Now
    EC_01.Unprotect (Psswrt)
    EC_01.Cells(7, 30).Value = Zeit
    EC_01.Protect (Psswrt)
    TimerAktiv = True
    EC_02.Cells(6, 26).Value = "x"
    TimerReset = True
    TimerIntervall = CDbl(EC_02.Cells(9, 22).Value)
    EC_02.Cells(9, 25).Value = Now
    
    Application.OnTime (Now + TimerIntervall), "Timer"

End Sub

Private Sub Timer()

    On Error GoTo Fehlerbehandlung
    Application.EnableCancelKey = KeyStatus
    
    Dim AktuelleZeit As Double
    
    If TimerAktiv = False Then Exit Sub
    If TimerReset = False And EC_02.Cells(9, 25).Value > Now Then Call CheatHandler("Zeitmanipulation")
    'Application.OnTime (EC_02.Cells(9, 25).Value - TimerIntervall), "CheatHandler", , False
    If EC_02.Cells(6, 26).Value <> "x" Then EC_02.Cells(6, 26).Value = "x"
    EC_01.Unprotect (Psswrt)
    EC_02.Cells(9, 25).Value = Now
    EC_02.Calculate
    EC_01.Cells(7, 30).Value = EC_02.Cells(9, 26).Value
    EC_01.Protect (Psswrt)
    
    If EC_02.Cells(9, 26).Value <= 0 Then
        TimerAktiv = False
        Call Spielende
    End If
    TimerIntervall = CDbl(EC_02.Cells(9, 22).Value)
    AktuelleZeit = Now
    EC_02.Cells(9, 25).Value = AktuelleZeit
    Application.OnTime (AktuelleZeit + TimerIntervall), "Timer", (AktuelleZeit + TimerIntervall * 5), True
    TimerReset = False
    'Application.OnTime (AktuelleZeit - TimerIntervall * 3), "CheatHandler", AktuelleZeit-1, True
    Exit Sub
    
Fehlerbehandlung:
    Call ErrorHandler("Laufzeitfehler")

End Sub

Public Function Quersumme(Zahl As String) As Double
    
    Dim I As Integer
    
    Application.EnableCancelKey = KeyStatus
    
    For I = 1 To Len(Zahl)
       Quersumme = Quersumme + CDbl(Mid(Zahl, I, 1))
    Next I
    
End Function

Public Sub CheatHandler(Ursache As String)
    
    TimerAktiv = False
    CheatAktiv = True
    EC_02.Cells(6, 26).Value = ""
    MsgBox (Ursache & " - Versuchen Sie nicht das Spiel zu manipulieren!")
    Call Spielende
    
End Sub

Public Sub ErrorHandler(Ursache As String)
    
    On Error Resume Next
    TimerAktiv = False
    EC_02.Cells(6, 26).Value = ""
    EC_01.Protect (Psswrt)
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True
    MsgBox (Ursache & " - " & Tool & " wird abgebrochen!")
    End

End Sub
Attribute VB_Name = "EC_Konstanten"
Public Const StartZeile = 6
Public Const StartSpalte = 3
Public Const MaxLevel = 33
'Public Const Psswrt = ""
Public Const Psswrt = "y4g7o0g4W5z7e1Q2h6"
Public Const Tool = "PM Excel Challenge"
Public Const KeyStatus = xlDisabled
Declare Function sndPlaySound32 Lib "winmm.dll" Alias "sndPlaySoundA" (ByVal lpszSoundName As String, ByVal uFlags As Long) As Long

Attribute VB_Name = "ExcelChallenge"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
    
    Cancel = True
    MsgBox ("Die " & Tool & " Vorlage braucht nicht gespeichert werden!")
    
End Sub
Private Sub Workbook_Open()
    
    Application.EnableCancelKey = KeyStatus
    
End Sub

' InQuest injected base64 decoded content
' g!jY^

INQUEST-PP=macro
