Attribute VB_Name = "Module1"
Option Explicit
Sub ShowUserForm()
    UserForm1.Show
End Sub

Sub ShowUserForm2()
    UserForm2.Show
End Sub
 Sub ShowUserForm3()
    UserForm3.Show
End Sub
Sub Loop_diagrams()

'
'
' Macro written 2010-07-08 by JPa / Metso Automation Polska Sp. z o.o.
' REV. 2018-05-17 JPa (settings added) / Valmet Automation Sp. z o.o.


    Dim x, y, z, i, j, c, v, w, templates_no, tags_no, signals_no, columns_no, new_columns_no, new_rows_no             As Long
    Dim LastRow, constant_col_front, constant_col_end, Template_col, LD_col                                                   As Long
    Dim Template, tag, wbook                                                                                        As String
    Dim Rng                                                                                                         As Range
    Dim header                                                                                                      As Integer
    Dim file_name As Variant
    Dim name_file As Variant
    Dim PctDone, TMPDone As Single
     
 file_name = Application.GetSaveAsFilename(InitialFileName:="Loop_diagrams", FileFilter:="Skoroszyt programu Excel,*.xlsx", Title:="Zapisywanie jako")
            If file_name = False Then
                file_name = "Loop_diagrams"
            End If
    
        
    ActiveWorkbook.Worksheets("BAZA_STD").Unprotect Password:="pw4db"
    Application.ScreenUpdating = False
    header = 2                                                                   'Number of header rows
    constant_col_end = Sheets("Legend").Cells(17, 31).Value                      'Number of constant columns at the end
    Template_col = Sheets("Legend").Cells(19, 31).Value + 4
    LD_col = Sheets("Legend").Cells(18, 31).Value + 4
    
     wbook = ThisWorkbook.Name
     ActiveWorkbook.Worksheets("BAZA_STD").AutoFilter.Sort.SortFields.Clear
    
    Sheets("BAZA_STD").Cells.Select
    Selection.Copy
    Sheets.Add After:=ActiveSheet
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    ActiveSheet.Name = "BAZA_TEMP"
    ActiveSheet.Rows("2:2").Select
    Selection.AutoFilter
    
     
     Sheets("BAZA_TEMP").Select
        Columns("P:P").Select                                                        ' Add KK_SIGNAL for signal part (with suffix)
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Columns("F:F").Select
    Selection.Copy
    Columns("P:P").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
     Sheets("BAZA_TEMP").Select
        Columns("Q:Q").Select                                                        ' Add NAME_SIGNAL for signal part (with suffix)
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Columns("H:H").Select
    Selection.Copy
    Columns("Q:Q").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
        Sheets("BAZA_TEMP").Select
    '    Columns("R:R").Select                                                        ' Add KKS_UNIT,SUFFIX for signal part (with suffix)
    'Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Columns("D:E").Select
    Selection.Copy
    Columns("R:R").Select
    Selection.Insert Shift:=xlToRight
    'Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
    
    Sheets.Add
    ActiveSheet.Name = "Temporary"
    columns_no = Worksheets("BAZA_TEMP").UsedRange.Columns.Count
    'columns_no = 55
    
    Sheets("BAZA_TEMP").Select
    
   
    
    ActiveWorkbook.Worksheets("BAZA_TEMP").AutoFilter.Sort.SortFields.Clear            'sorting tags by suffixes and kks
    ActiveWorkbook.Worksheets("BAZA_TEMP").AutoFilter.Sort.SortFields.Add Key:=Range( _
        "E3:E3"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("BAZA_TEMP").AutoFilter.Sort
        .header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
   ' ActiveWorkbook.Worksheets("BAZA_TEMP").AutoFilter.Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("BAZA_TEMP").AutoFilter.Sort.SortFields.Add Key:=Range( _
        "C3:C3"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("BAZA_TEMP").AutoFilter.Sort
        .header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
  ' JPa 12.01.2018
    'Sheets.Add
    'ActiveSheet.Name = "Templates"
    
    'Sheets("BAZA_TEMP").Select
    'Columns("HX:HX").Select                     'Column with loop diagram template +3
    'Selection.Copy
    'Sheets("Templates").Select
    'Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
    'ActiveSheet.Paste
        
    'LastRow = Range("A65536").End(xlUp).Row     'delete duplicates - Templates
    'For x = LastRow To 1 Step -1
    '   If Application.WorksheetFunction.CountIf(Range("A1:A" & x), Range("A" & x).Text) > 1 Then
    '      Range("A" & x).EntireRow.Delete
    '   End If
    'Next x
 
    'templates_no = 3
    Sheets("Templates").Select
    templates_no = Worksheets("Templates").Range("A1", Range("A1").End(xlDown)).Count - 2 'rows count - Templates
   
     
    Sheets.Add
    ActiveSheet.Name = "Tags"
    'te linie sa niepotrzebne bo nowy skoroszyt jest zawsze pusty
    'Sheets("Tags").Cells(1, 1).Select
    'tags_no = Worksheets("Tags").Range("A" & header, Range("A" & header).End(xlDown)).Count 'rows count - Tags
     
    For x = 1 To templates_no
        
                
        Workbooks(wbook).Activate
        ActiveWorkbook.Worksheets("BAZA_TEMP").AutoFilter.Sort.SortFields.Clear
        
        Template = Sheets("Templates").Cells(x + 2, 1).Value
        Sheets.Add                                                              'create sheet for every template separately
        ActiveSheet.Name = Template
        Sheets("BAZA_TEMP").Select
        Selection.AutoFilter Field:=Template_col, Criteria1:=Template                  'number of column with loop diagram template + 3 (3 columns added to header)
        Columns("C:C").Select
        Selection.Copy
        Sheets("Tags").Select
        ActiveSheet.Paste
        Sheets("BAZA_TEMP").Select
        Selection.AutoFilter Field:=Template_col                                       'number of column with loop diagram template + 3
        Sheets("Tags").Select
        LastRow = Range("A65536").End(xlUp).Row                                 'delete duplicates - Templates
        For y = LastRow To 1 Step -1
                If Application.WorksheetFunction.CountIf(Range("A1:A" & y), Range("A" & y).Text) > 1 Then
                Range("A" & y).EntireRow.Delete
        End If
        Next y
        tags_no = Worksheets("Tags").Range("A" & header, Range("A" & header).End(xlDown)).Count - 1 'rows count - Tags
        
        For z = 1 To tags_no Step 1
            
                tag = Sheets("Tags").Cells(z + header, 1).Value
            
                Sheets("BAZA_TEMP").Select
                Selection.AutoFilter Field:=3, Criteria1:=tag
                Selection.AutoFilter Field:=Template_col, Criteria1:=Template
                                
            If z = 1 Then                                                       'create header/title row
                Worksheets(Template).Cells(1, 1).Value = "FileName"  'Sheets("BAZA_TEMP").Cells(2, columns_no - 2).Value
                Worksheets(Template).Cells(1, 2).Value = "TEMPLATE"
                Worksheets(Template).Cells(1, 3).Value = Sheets("BAZA_TEMP").Cells(1, 3).Value
                Worksheets(Template).Cells(1, 4).Value = Sheets("BAZA_TEMP").Cells(1, 5).Value
                Worksheets(Template).Cells(1, 5).Value = Sheets("BAZA_TEMP").Cells(1, 7).Value
                'Worksheets(template).Cells(1, 5).Value = Sheets("BAZA_TEMP").Cells(2, columns_no - 7).Value
                'Worksheets(template).Cells(1, 5).Value = Sheets("BAZA_TEMP").Cells(2, columns_no - 6).Value
                For w = 0 To constant_col_end - 1
                     Worksheets(Template).Cells(1, 5 + constant_col_end - w).Value = Sheets("BAZA_TEMP").Cells(1, columns_no - w).Value
                Next w
                
                Sheets("BAZA_TEMP").Select
                Columns("E:E").Select                               'Column with suffix
                Selection.Copy
                Sheets("Temporary").Select
                ActiveSheet.Paste
                signals_no = Worksheets("Temporary").Range("A" & header, Range("A" & header).End(xlDown)).Count - 1
                
                If signals_no = 1048574 Then signals_no = 0       'If there is only 1 suffix, then it counts 65533
                
                Sheets(Template).Select
                
                For i = 1 To signals_no
                    For j = 1 To columns_no - 12 - constant_col_end                     'minus nuber of constatn columns
                        Worksheets(Template).Cells(1, constant_col_end + 5 + j + (i - 1) * (columns_no - 12 - constant_col_end)).Value = Sheets("Temporary").Cells(i + header, 1).Value & "_" & Sheets("BAZA_TEMP").Cells(1, 12 + j).Value
                        'Worksheets(template).Cells(2, 4 + j + (i - 1) * (columns_no - 5)).Value = Sheets("Temporary").Cells(i + 3, 1).Value & "_" & Sheets("BAZA_TEMP").Cells(3, 5 + j).Value
                    Next j
                Next i
             End If
                                                                                
                                                                              'Copy filtered data to separate tab
                Worksheets("Temporary").Cells.Clear
                Set Rng = Sheets("BAZA_TEMP").AutoFilter.Range
                Rng.Offset(1, 0).Resize(Rng.Rows.Count - 1).Copy _
                Destination:=Worksheets("Temporary").Range("A1")
            
            
            'If z = 1 Then                                                       'copy tag, description etc to final sheet
                Worksheets(Template).Cells(z + 1, 1).Value = Sheets("Temporary").Cells(1, LD_col).Value & "_" & Sheets("Temporary").Cells(1, 3).Value 'Creating Filename
                Worksheets(Template).Cells(z + 1, 2).Value = Sheets("Temporary").Cells(1, Template_col).Value & ".vsd"
                Worksheets(Template).Cells(z + 1, 3).Value = Sheets("Temporary").Cells(1, 3).Value
                Worksheets(Template).Cells(z + 1, 4).Value = Sheets("Temporary").Cells(1, 5).Value
                Worksheets(Template).Cells(z + 1, 5).Value = Sheets("Temporary").Cells(1, 7).Value
                'Worksheets(template).Cells(z + 1, 5).Value = Sheets("Temporary").Cells(1, columns_no - 7).Value
                'Worksheets(template).Cells(z + 1, 5).Value = Sheets("Temporary").Cells(1, columns_no - 6).Value
                 For w = 0 To constant_col_end - 1
                     Worksheets(Template).Cells(z + 1, 5 + constant_col_end - w).Value = Sheets("Temporary").Cells(1, columns_no - w).Value
                Next w

           'End If
            If signals_no > 0 Then
                For i = 1 To signals_no
                    Sheets("Temporary").Select
                    Sheets("Temporary").Range(Cells(i, 13), Cells(i, columns_no - constant_col_end)).Select    'minus number of constatn columns at the end of sheet
                    Selection.Copy
                    Sheets(Template).Select
                    ActiveSheet.Cells(z + 1, constant_col_end + 5 + 1 + (i - 1) * (columns_no - 12 - constant_col_end)).Select   'minus number of constatn columns
                    ActiveSheet.Paste
                    'Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
                Next i
            End If

            Sheets("BAZA_TEMP").Select
            Selection.AutoFilter Field:=3
            
            Worksheets("Temporary").Cells.Clear
            Sheets("Temporary").Select
            ActiveSheet.Cells(1, 1).Select
            
            PctDone = (z / tags_no)
            TMPDone = (x / templates_no)
            
          UpdateProgressBar PctDone, TMPDone, CStr(Template)
            
            
        Next z
        
        new_columns_no = Worksheets(Template).UsedRange.Columns.Count
        
        'For v = 1 To new_columns_no
            'new_rows_no = Worksheets(template).Range("A" & header, Range("A" & header).End(xlDown)).Count
          
        'Next v
        
      
        
            Sheets(Template).Select
            If x = 1 Then
            
            
            
                Sheets(Template).Move
                Sheets(Template).Name = Template & ".vsd"
                ActiveWorkbook.SaveAs Filename:= _
                file_name, FileFormat:= _
                xlOpenXMLWorkbook, Password:="", WriteResPassword:="", ReadOnlyRecommended:=False _
                , CreateBackup:=False
                
                 name_file = ActiveWorkbook.Name
            Else
                Sheets(Template).Move Before:=Workbooks(name_file).Sheets(1)
                Sheets(Template).Name = Template & ".vsd"
            End If
     
            
     Next x
    
     ActiveWorkbook.Close True
    
    Workbooks(wbook).Activate
  
     
    Application.DisplayAlerts = False
    Sheets("Tags").Delete
    Sheets("Temporary").Delete
    Sheets("BAZA_TEMP").Delete
    
  
    
    Application.ScreenUpdating = True
    
        ' The task is finished, so unload the UserForm.
    Unload UserForm1
        ' Protect sheet
   ' ActiveWorkbook.Worksheets("BAZA_STD").Protect Password:="pw4db", DrawingObjects:=True, Contents:=True, Scenarios:=True _
   '     , AllowFormattingCells:=True, AllowFormattingColumns:=True, _
   '     AllowFormattingRows:=True, AllowInsertingRows:=True, AllowDeletingRows:= _
   '     True, AllowSorting:=True, AllowFiltering:=True


End Sub


Sub Loop_diagrams_EPLAN()

'
'
' Macro written 2010-07-08 by JPa / Metso Automation Polska Sp. z o.o.
' REV. 2018-04-24 JPa


    Dim x, y, z, i, j, c, v, w, templates_no, tags_no, signals_no, columns_no, new_columns_no, new_rows_no             As Long
    Dim LastRow, constant_col_front, constant_col_end, Template_col, LD_col, max_ios, current_row                      As Long
    Dim Template, tag, wbook                                                                                        As String
    Dim Rng                                                                                                         As Range
    Dim header                                                                                                      As Integer
    Dim file_name As Variant
    Dim name_file As Variant
    Dim PctDone, TMPDone As Single
     
 file_name = Application.GetSaveAsFilename(InitialFileName:="Loop_diagrams", FileFilter:="Skoroszyt programu Excel,*.xlsx", Title:="Zapisywanie jako")
            If file_name = False Then
                file_name = "Loop_diagrams"
            End If
    
        
    ActiveWorkbook.Worksheets("BAZA_STD").Unprotect Password:="pw4db"
    Application.ScreenUpdating = False
    header = 2                                                                   'Number of header rows
    max_ios = 0
    current_row = 0
    constant_col_end = Sheets("Legend").Cells(17, 31).Value                      'Number of constant columns at the end
    Template_col = Sheets("Legend").Cells(19, 31).Value + 4
    LD_col = Sheets("Legend").Cells(18, 31).Value + 4
    
     wbook = ThisWorkbook.Name
     ActiveWorkbook.Worksheets("BAZA_STD").AutoFilter.Sort.SortFields.Clear
    
    Sheets("BAZA_STD").Cells.Select
    Selection.Copy
    Sheets.Add After:=ActiveSheet
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    ActiveSheet.Name = "BAZA_TEMP"
    ActiveSheet.Rows("2:2").Select
    Selection.AutoFilter
    
     
     Sheets("BAZA_TEMP").Select
        Columns("o:o").Select                                                        ' Add KK_SIGNAL for signal part (with suffix)
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Columns("F:F").Select
    Selection.Copy
    Columns("o:o").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
     Sheets("BAZA_TEMP").Select
        Columns("p:p").Select                                                        ' Add NAME_SIGNAL for signal part (with suffix)
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Columns("H:H").Select
    Selection.Copy
    Columns("p:p").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
    
    Sheets("BAZA_TEMP").Select
    '    Columns("R:R").Select                                                        ' Add KKS_UNIT,SUFFIX for signal part (with suffix)
    'Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Columns("D:E").Select
    Selection.Copy
    Columns("R:R").Select
    Selection.Insert Shift:=xlToRight
    'Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
    
    Sheets.Add
    ActiveSheet.Name = "Temporary"
    columns_no = Worksheets("BAZA_TEMP").UsedRange.Columns.Count
    'columns_no = 55
    
    Sheets("BAZA_TEMP").Select
    
   
    
    ActiveWorkbook.Worksheets("BAZA_TEMP").AutoFilter.Sort.SortFields.Clear            'sorting tags by IO_LIST_no and kks
    ActiveWorkbook.Worksheets("BAZA_TEMP").AutoFilter.Sort.SortFields.Add Key:=Range( _
        "a3:a3"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("BAZA_TEMP").AutoFilter.Sort
        .header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
   ' ActiveWorkbook.Worksheets("BAZA_TEMP").AutoFilter.Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("BAZA_TEMP").AutoFilter.Sort.SortFields.Add Key:=Range( _
        "C3:C3"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("BAZA_TEMP").AutoFilter.Sort
        .header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
  ' JPa 12.01.2018
    'Sheets.Add
    'ActiveSheet.Name = "Templates"
    
    'Sheets("BAZA_TEMP").Select
    'Columns("HX:HX").Select                     'Column with loop diagram template +3
    'Selection.Copy
    'Sheets("Templates").Select
    'Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
    'ActiveSheet.Paste
        
    'LastRow = Range("A65536").End(xlUp).Row     'delete duplicates - Templates
    'For x = LastRow To 1 Step -1
    '   If Application.WorksheetFunction.CountIf(Range("A1:A" & x), Range("A" & x).Text) > 1 Then
    '      Range("A" & x).EntireRow.Delete
    '   End If
    'Next x
 
    'templates_no = 3
    Sheets("Templates").Select
    templates_no = Worksheets("Templates").Range("A1", Range("A1").End(xlDown)).Count - 2 'rows count - Templates
   
     
    Sheets.Add
    ActiveSheet.Name = "Tags"
    'te linie sa niepotrzebne bo nowy skoroszyt jest zawsze pusty
    'Sheets("Tags").Cells(1, 1).Select
    'tags_no = Worksheets("Tags").Range("A" & header, Range("A" & header).End(xlDown)).Count 'rows count - Tags
     
    Sheets.Add                                                              'create sheet EPLAN
    ActiveSheet.Name = "EPLAN"
     
    For x = 1 To templates_no
        
                
        Workbooks(wbook).Activate
        ActiveWorkbook.Worksheets("BAZA_TEMP").AutoFilter.Sort.SortFields.Clear
        
        Template = Sheets("Templates").Cells(x + 2, 1).Value

        Sheets("BAZA_TEMP").Select
        Selection.AutoFilter Field:=Template_col, Criteria1:=Template                  'number of column with loop diagram template + 3 (3 columns added to header)
        Columns("C:C").Select
        Selection.Copy
        Sheets("Tags").Select
        ActiveSheet.Paste
        Sheets("BAZA_TEMP").Select
        Selection.AutoFilter Field:=Template_col                                       'number of column with loop diagram template + 3
        Sheets("Tags").Select
        LastRow = Range("A65536").End(xlUp).Row                                 'delete duplicates - Templates
        For y = LastRow To 1 Step -1
                If Application.WorksheetFunction.CountIf(Range("A1:A" & y), Range("A" & y).Text) > 1 Then
                Range("A" & y).EntireRow.Delete
        End If
        Next y
        tags_no = Worksheets("Tags").Range("A" & header, Range("A" & header).End(xlDown)).Count - 1 'rows count - Tags
               
        For z = 1 To tags_no Step 1
            
                tag = Sheets("Tags").Cells(z + header, 1).Value
            
                Sheets("BAZA_TEMP").Select
                Selection.AutoFilter Field:=3, Criteria1:=tag
                Selection.AutoFilter Field:=Template_col, Criteria1:=Template
                                
                Sheets("BAZA_TEMP").Select
                Columns("E:E").Select                               'Column with suffix
                Selection.Copy
                Sheets("Temporary").Select
                ActiveSheet.Paste
                signals_no = Worksheets("Temporary").Range("A" & header, Range("A" & header).End(xlDown)).Count - 1
                
                         
                
                
                                
            'If z = 1 Then                                                       'create header/title row
            If signals_no > max_ios Then
                max_ios = signals_no                                                'Max number of tags
                
                'Worksheets("EPLAN").Cells(1, 1).Value = "FileName"  'Sheets("BAZA_TEMP").Cells(2, columns_no - 2).Value
                'Worksheets("EPLAN").Cells(1, 2).Value = "TEMPLATE"
                Worksheets("EPLAN").Cells(1, 1).Value = Sheets("BAZA_TEMP").Cells(1, 3).Value
                'Worksheets("EPLAN").Cells(1, 2).Value = Sheets("BAZA_TEMP").Cells(1, 5).Value
                Worksheets("EPLAN").Cells(1, 2).Value = Sheets("BAZA_TEMP").Cells(1, 7).Value
                'Worksheets("EPLAN").Cells(1, 5).Value = Sheets("BAZA_TEMP").Cells(2, columns_no - 7).Value
                'Worksheets("EPLAN").Cells(1, 5).Value = Sheets("BAZA_TEMP").Cells(2, columns_no - 6).Value
                For w = 0 To constant_col_end - 1
                     Worksheets("EPLAN").Cells(1, 2 + constant_col_end - w).Value = Sheets("BAZA_TEMP").Cells(1, columns_no - w).Value
                Next w
                
                If signals_no = 1048574 Then signals_no = 0       'If there is only 1 suffix, then it counts 65533
                
                Sheets("EPLAN").Select
                

                    For i = 1 To signals_no
                        For j = 1 To columns_no - 14 - constant_col_end                     'minus nuber of constatn columns
                            Worksheets("EPLAN").Cells(1, constant_col_end + 2 + j + (i - 1) * (columns_no - 14 - constant_col_end)).Value = i & "_" & Sheets("BAZA_TEMP").Cells(1, 14 + j).Value
                            'Worksheets(template).Cells(2, 4 + j + (i - 1) * (columns_no - 5)).Value = Sheets("Temporary").Cells(i + 3, 1).Value & "_" & Sheets("BAZA_TEMP").Cells(3, 5 + j).Value
                        Next j
                    Next i

             End If
                                                                                
                                                                              'Copy filtered data to separate tab
                Worksheets("Temporary").Cells.Clear
                Set Rng = Sheets("BAZA_TEMP").AutoFilter.Range
                Rng.Offset(1, 0).Resize(Rng.Rows.Count - 1).Copy _
                Destination:=Worksheets("Temporary").Range("A1")
            
            
            'If z = 1 Then                                                       'copy tag, description etc to final sheet
                'Worksheets("EPLAN").Cells(z + current_row + 1, 1).Value = Sheets("Temporary").Cells(1, LD_col).Value & "_" & Sheets("Temporary").Cells(1, 3).Value 'Creating Filename
                'Worksheets("EPLAN").Cells(z + current_row + 1, 2).Value = Sheets("Temporary").Cells(1, Template_col).Value & ".vsd"
                Worksheets("EPLAN").Cells(z + current_row + 1, 1).Value = Sheets("Temporary").Cells(1, 3).Value
                'Worksheets("EPLAN").Cells(z + current_row + 1, 2).Value = Sheets("Temporary").Cells(1, 5).Value
                Worksheets("EPLAN").Cells(z + current_row + 1, 2).Value = Sheets("Temporary").Cells(1, 7).Value
                'Worksheets(template).Cells(z + 1, 5).Value = Sheets("Temporary").Cells(1, columns_no - 7).Value
                'Worksheets(template).Cells(z + 1, 5).Value = Sheets("Temporary").Cells(1, columns_no - 6).Value
                 For w = 0 To constant_col_end - 1
                     Worksheets("EPLAN").Cells(z + current_row + 1, 2 + constant_col_end - w).Value = Sheets("Temporary").Cells(1, columns_no - w).Value
                Next w

           'End If
            If signals_no > 0 Then
                For i = 1 To signals_no
                    Sheets("Temporary").Select
                    Sheets("Temporary").Range(Cells(i, 15), Cells(i, columns_no - constant_col_end)).Select    'minus number of constatn columns at the end of sheet
                    Selection.Copy
                    Sheets("EPLAN").Select
                    ActiveSheet.Cells(z + current_row + 1, constant_col_end + 2 + 1 + (i - 1) * (columns_no - 14 - constant_col_end)).Select  'minus number of constatn columns
                    ActiveSheet.Paste
                    'Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
                    :=False, Transpose:=False
                Next i
            End If
            
            Sheets("BAZA_TEMP").Select
            Selection.AutoFilter Field:=3
            
            Worksheets("Temporary").Cells.Clear
            Sheets("Temporary").Select
            ActiveSheet.Cells(1, 1).Select
            
            PctDone = (z / tags_no)
            TMPDone = (x / templates_no)
            
          UpdateProgressBar3 PctDone, TMPDone, CStr(Template)
            
            
        Next z
        
        new_columns_no = Worksheets("EPLAN").UsedRange.Columns.Count
        
        'For v = 1 To new_columns_no
            'new_rows_no = Worksheets(template).Range("A" & header, Range("A" & header).End(xlDown)).Count
          
        'Next v
        
      
        
      current_row = current_row + tags_no
     Next x
    
    Sheets("EPLAN").Select
    Sheets("EPLAN").Move
    Sheets("EPLAN").Name = "EPLAN"
                ActiveWorkbook.SaveAs Filename:= _
                file_name, FileFormat:= _
                xlOpenXMLWorkbook, Password:="", WriteResPassword:="", ReadOnlyRecommended:=False _
                , CreateBackup:=False
                
    name_file = ActiveWorkbook.Name
     
        
    
'     ActiveWorkbook.Close True
    
    Workbooks(wbook).Activate
  
     
    Application.DisplayAlerts = False
    
    Sheets("Tags").Delete
    Sheets("Temporary").Delete
    Sheets("BAZA_TEMP").Delete
    
  
    
    Application.ScreenUpdating = True
    
        ' The task is finished, so unload the UserForm.
    Unload UserForm3
        ' Protect sheet
   ' ActiveWorkbook.Worksheets("BAZA_STD").Protect Password:="pw4db", DrawingObjects:=True, Contents:=True, Scenarios:=True _
   '     , AllowFormattingCells:=True, AllowFormattingColumns:=True, _
   '     AllowFormattingRows:=True, AllowInsertingRows:=True, AllowDeletingRows:= _
   '     True, AllowSorting:=True, AllowFiltering:=True


End Sub









Attribute VB_Name = "Module11"
 'If x <> "" Then
  '                     Sheets(Cabinet).Activate                                                                                        'Mark duplicates
  '                     Set Rng = Cells.Find(What:=x, After:=ActiveCell, LookIn:=xlFormulas, LookAt:= _
  '                         xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False _
   '                        , SearchFormat:=False)
   '                    If Not Rng Is Nothing Then
   '                       Set Rng2 = Rng
   '                       Do
   '                           Set Rng = Cells.FindNext(After:=Rng)
   '
   '                           If Not Rng Is Nothing Then
   '                               If Rng.Address = Rng2.Address Then Exit Do
   '                               Application.GoTo Rng, True
   '                               ActiveCell.Interior.Color = 255
    '                          Else
    '                              Exit Do
    '                          End If
    '                      Loop
    '
    '                   End If
     '              End If

Attribute VB_Name = "Module2"
Sub UpdateProgressBar(PctDone, TMPDone As Single, Template As String)
    With UserForm1

        ' Update the Caption property of the Frame control.
        .PRGLabel.Caption = Format(PctDone, "0%")
        .TMPLabel.Caption = Format(TMPDone, "0%")
        .Label9.Caption = "Szablon: " + Template

        ' Widen the Label control.
        .TMPLabel.Width = TMPDone * _
            (.TMPFrame.Width - 10)
        .PRGLabel.Width = PctDone * _
            (.PRGFrame.Width - 10)
    End With

    ' The DoEvents allows the UserForm to update.
    DoEvents
End Sub

Sub UpdateProgressBar2(PctDone As Single)
    With UserForm2

        ' Update the Caption property of the Frame control.
        .PRGLabel.Caption = Format(PctDone, "0%")

        ' Widen the Label control.
        .PRGLabel.Width = PctDone * _
            (.PRGFrame.Width - 10)
    End With

    ' The DoEvents allows the UserForm to update.
    DoEvents
End Sub

Sub UpdateProgressBar3(PctDone, TMPDone As Single, Template As String)
    With UserForm3

        ' Update the Caption property of the Frame control.
        .PRGLabel.Caption = Format(PctDone, "0%")
        .TMPLabel.Caption = Format(TMPDone, "0%")
        .Label9.Caption = "Szablon: " + Template

        ' Widen the Label control.
        .TMPLabel.Width = TMPDone * _
            (.TMPFrame.Width - 10)
        .PRGLabel.Width = PctDone * _
            (.PRGFrame.Width - 10)
    End With

    ' The DoEvents allows the UserForm to update.
    DoEvents
End Sub

Attribute VB_Name = "Module3"
Sub Macro2222()
Attribute Macro2222.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro2222 Macro
'

'
    Columns("D:E").Select
    Selection.Copy
    Columns("Q:Q").Select
    Selection.Insert Shift:=xlToRight
    Range("N11").Select
    Application.CutCopyMode = False
End Sub
Attribute VB_Name = "Module4"
Sub IO_Type_check()

Dim z As Long
Dim x, y, ti, card, IO_type, suffix As String
Dim Cabinet As String
Dim Rng, Rng2 As Range

Application.ScreenUpdating = False
Cabinet = ActiveSheet.Name

ActiveWorkbook.Worksheets(Cabinet).Unprotect Password:="pw4db"

For j = 0 To 7
    For z = 0 To 15
            x = Sheets(Cabinet).Cells(8 + 15 * j, 3 + z).Value
            card = Sheets(Cabinet).Cells(6, 19 + x).Value
            IO_type = Left(card, 2)
        
        
            For i = 1 To 8
                     x = Sheets(Cabinet).Cells(8 + 15 * j + 1 + i, 3 + z).Value
                 If x = "" Then
                     y = ""
                 Else
                     y = Mid(x, Len(x) - 3, 2)
                     ti = Mid(x, 7, 2)
                 End If
                                  
                 
                 Sheets("Suffix").Activate
                Cells.Find(What:=y, After:=ActiveCell, LookIn:=xlFormulas, LookAt:= _
                     xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False _
                     , SearchFormat:=False).Activate
                     
                 suffix = ActiveCell.Offset(0, 1).Value
                 If (suffix = IO_type Or suffix = "") Or (ti = "CT" And IO_type = "TI") Then
                       Sheets(Cabinet).Cells(8 + 15 * j + 1 + i, 3 + z).Interior.ThemeColor = xlThemeColorAccent3
                 Else
                     Sheets(Cabinet).Cells(8 + 15 * j + 1 + i, 3 + z).Interior.Color = 255
                 End If
            
            Next i
    Next z
Next j

'ActiveWorkbook.Worksheets(Cabinet).Protect Password:="pw4db"
Sheets(Cabinet).Activate

End Sub

Sub IO_Location()
'Valmet automation Polska / 2014 - JPa - rev. 2018-03-05


Dim x, y, z, i, j, k, IO_count As Long
Dim Signal, channel, card, rack, pcs, fbc, pic, card_name, sis_dcs As String
Dim Cabinet As String
Dim Rng As Range
Dim PctDone As Single

IO_count = 5000                                      ' Nuber of IOs in Database
Application.ScreenUpdating = False
Sheets("BAZA_STD").Activate
Sheets("BAZA_STD").Range("Z3:AD" & IO_count).Select  ' Clear IO Location in Database
Selection.ClearContents


For i = 1 To Sheets("Legend").Cells(65, 27).Value   ' Clear formatting in IO location Tabs - mark on Red
     Sheets(Sheets("Legend").Cells(25 + i, 27).Value).Activate
        Range("10:17,25:32,40:47").Select
        Range("B40").Activate
        ActiveWindow.SmallScroll Down:=18
        Range("10:17,25:32,40:47,55:62").Select
        Range("B55").Activate
        ActiveWindow.SmallScroll Down:=15
        Range("10:17,25:32,40:47,55:62,70:77").Select
        Range("B70").Activate
        ActiveWindow.SmallScroll Down:=18
        Range("10:17,25:32,40:47,55:62,70:77,85:92").Select
        Range("B85").Activate
        ActiveWindow.SmallScroll Down:=15
        Range("10:17,25:32,40:47,55:62,70:77,85:92,100:107,115:122").Select
        Range("B115").Activate
        Selection.Font.Bold = True
        With Selection.Font
            .Color = 255
        End With
        
        Columns("B:B").Select
    With Selection.Font
        .Color = 0
    End With
        
Next i

For i = 0 To IO_count
    Signal = Sheets("BAZA_STD").Cells(3 + i, 6).Value
    Cabinet = Sheets("BAZA_STD").Cells(3 + i, 24).Value
    sis_dcs = Sheets("BAZA_STD").Cells(3 + i, 9).Value
    
    If Signal = "." Or Signal = "" Then GoTo Nxt
    
    Sheets(Cabinet).Activate
                
                
                Set Rng = Cells.Find(What:=Signal, After:=ActiveCell, LookIn:=xlFormulas, LookAt:= _
                     xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False _
                     , SearchFormat:=False)
                     
            If Not Rng Is Nothing Then
                Application.GoTo Rng, True
                ActiveCell.Font.Bold = False
                ActiveCell.Font.Color = 0
                If sis_dcs = "SIS" Then
                    channel = Cells(ActiveCell.Row, 2).Value
                    pic = Cells(ActiveCell.Row - 1 - channel, 2).Value
                    pcs = Cells(ActiveCell.Row - 3 - channel, 2).Value
                    fbc = Cells(ActiveCell.Row - 2 - channel, 2).Value
                    card = ActiveCell.Column - 2
                    card_name = Cells(ActiveCell.Row - Cells(ActiveCell.Row, 2).Value - 1, ActiveCell.Column)
                    rack = Cells(ActiveCell.Row + 1 - channel, 1).Value
                Else
                    card = ActiveCell.Column - 3
                    channel = Cells(ActiveCell.Row, 2).Value
                    pic = Cells(ActiveCell.Row - 2 - channel, 2).Value
                    pcs = Cells(ActiveCell.Row - 4 - channel, 2).Value
                    fbc = Cells(ActiveCell.Row - 3 - channel, 2).Value
                    card_name = Cells(ActiveCell.Row - Cells(ActiveCell.Row, 2).Value - 2, ActiveCell.Column)
                    rack = Cells(ActiveCell.Row - channel, 1).Value
                End If
                
                Sheets("BAZA_STD").Cells(3 + i, 25).Value = pcs
                Sheets("BAZA_STD").Cells(3 + i, 26).Value = fbc
                Sheets("BAZA_STD").Cells(3 + i, 27).Value = pic
                Sheets("BAZA_STD").Cells(3 + i, 28).Value = card
                Sheets("BAZA_STD").Cells(3 + i, 29).Value = channel
                Sheets("BAZA_STD").Cells(3 + i, 32).Value = rack
                If sis_dcs = "SIS" Then
                Sheets("BAZA_STD").Cells(3 + i, 30).Value = Sheets("Legend").Cells(25 + card_name, 26).Value
                Else
                Sheets("BAZA_STD").Cells(3 + i, 30).Value = Sheets("Legend").Cells(25 + card_name, 25).Value
                End If
                Sheets("BAZA_STD").Cells(3 + i, 6).Interior.ThemeColor = xlThemeColorAccent3
            Else
                Sheets("BAZA_STD").Cells(3 + i, 6).Interior.Color = 255
            End If
Nxt:

'2018.02.15 / EDo - add in
            If Sheets("BAZA_STD").Cells(2 + i, 2).Value = "TPS" Or Sheets("BAZA_STD").Cells(2 + i, 2).Value = "TCS" Or Sheets("BAZA_STD").Cells(2 + i, 2).Value = "VMS" Then
                Sheets("BAZA_STD").Cells(2 + i, 84).Font.Bold = True
                Sheets("BAZA_STD").Cells(2 + i, 84).Font.Color = 255
                Sheets("BAZA_STD").Cells(2 + i, 85).Font.Bold = True
                Sheets("BAZA_STD").Cells(2 + i, 85).Font.Color = 255
                Sheets("BAZA_STD").Cells(2 + i, 86).Font.Bold = True
                Sheets("BAZA_STD").Cells(2 + i, 86).Font.Color = 255
                Sheets("BAZA_STD").Cells(2 + i, 87).Font.Bold = True
                Sheets("BAZA_STD").Cells(2 + i, 87).Font.Color = 255
                Sheets("BAZA_STD").Cells(2 + i, 88).Font.Bold = True
                Sheets("BAZA_STD").Cells(2 + i, 88).Font.Color = 255
                Sheets("BAZA_STD").Cells(2 + i, 89).Font.Bold = True
                Sheets("BAZA_STD").Cells(2 + i, 89).Font.Color = 255
              
            Else
            If Sheets("BAZA_STD").Cells(2 + i, 2).Value = "AUX" Then
                Sheets("BAZA_STD").Cells(2 + i, 47).Font.Bold = True
                Sheets("BAZA_STD").Cells(2 + i, 47).Font.Color = 255
                Sheets("BAZA_STD").Cells(2 + i, 54).Font.Bold = True
                Sheets("BAZA_STD").Cells(2 + i, 54).Font.Color = 255
                Sheets("BAZA_STD").Cells(2 + i, 55).Font.Bold = True
                Sheets("BAZA_STD").Cells(2 + i, 55).Font.Color = 255
                Sheets("BAZA_STD").Cells(2 + i, 56).Font.Bold = True
                Sheets("BAZA_STD").Cells(2 + i, 56).Font.Color = 255
                Sheets("BAZA_STD").Cells(2 + i, 57).Font.Bold = True
                Sheets("BAZA_STD").Cells(2 + i, 57).Font.Color = 255
                Sheets("BAZA_STD").Cells(2 + i, 58).Font.Bold = True
                Sheets("BAZA_STD").Cells(2 + i, 58).Font.Color = 255
                Sheets("BAZA_STD").Cells(2 + i, 59).Font.Bold = True
                Sheets("BAZA_STD").Cells(2 + i, 59).Font.Color = 255
            End If
             
            End If
'2018.02.15 / EDo - add in - end
PctDone = (i / IO_count)
UpdateProgressBar2 PctDone

Next i

Sheets("BAZA_STD").Activate
Unload UserForm2

End Sub


Sub HIMA_CC()

Dim x, y, z, i, j, k, l, IO_count As Long
Dim pcs, Signal, channel, card, rack, base_card_name, cc_card_name, rack_card, cc_sheet As String
Dim Cabinet As String
Dim Rng As Range

IO_count = 5000                                      ' Nuber of IOs in Database
Application.ScreenUpdating = False
Sheets("BAZA_STD").Activate
'Sheets("BAZA_STD").Range("Z3:AC" & IO_count).Select  ' Clear IO Location in Database
'Selection.ClearContents


For i = 0 To IO_count
    Signal = Sheets("BAZA_STD").Cells(3 + i, 9).Value
    Cabinet = Sheets("BAZA_STD").Cells(3 + i, 27).Value
    pcs = Sheets("BAZA_STD").Cells(3 + i, 28).Value
    card = Sheets("BAZA_STD").Cells(3 + i, 31).Value
    channel = Sheets("BAZA_STD").Cells(3 + i, 32).Value
    rack = Sheets("BAZA_STD").Cells(3 + i, 30).Value
    base_card_name = Sheets("BAZA_STD").Cells(3 + i, 33).Value
    rack_card = "-R" & rack & "-C" & card
    cc_sheet = Cabinet & "_Krosowanie"
    If Signal = "." Or Signal = "" Then GoTo Nxt
    
    If pcs <> "SIS" Then GoTo Nxt
    If pcs = "SIS" Then l = l + 1
    
    If l = 1 Then
    Sheets(cc_sheet).Activate
                Sheets(cc_sheet).Range("Z3:AC" & IO_count).Select
                    With Selection.Interior
                        .Pattern = xlNone
                        .TintAndShade = 0
                        .PatternTintAndShade = 0
                    End With
    End If
                
                Sheets("BAZA_STD").Cells(3 + i, 45).Value = ""                                                             'deleting old values
                Sheets("BAZA_STD").Cells(3 + i, 46).Value = ""
                Sheets("BAZA_STD").Cells(3 + i, 68).Value = ""
                Sheets("BAZA_STD").Cells(3 + i, 69).Value = ""
                Sheets("BAZA_STD").Cells(3 + i, 70).Value = ""
                Sheets("BAZA_STD").Cells(3 + i, 71).Value = ""
                Sheets("BAZA_STD").Cells(3 + i, 130).Value = ""
                                
                Set Rng = Cells.Find(What:=rack_card, After:=ActiveCell, LookIn:=xlFormulas, LookAt:= _
                     xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=True _
                     , SearchFormat:=False)

                     
            If Not Rng Is Nothing Then
                Application.GoTo Rng, True
                'ActiveCell.Font.Bold = False
                'ActiveCell.Font.Color = 0
                cc_card_name = Sheets(cc_sheet).Cells(ActiveCell.Row, ActiveCell.Column - 1)
                
                If cc_card_name = "F 6217" Then
                    Sheets(cc_sheet).Cells(ActiveCell.Row + 1 + 3 * (channel - 1), 27).Value = Signal & " (IN)"
                    Sheets(cc_sheet).Cells(ActiveCell.Row + 1 + 3 * (channel - 1), 27).Interior.ThemeColor = xlThemeColorAccent3
                    Sheets("BAZA_STD").Cells(3 + i, 70).Value = Sheets(cc_sheet).Cells(ActiveCell.Row + 1 + 3 * (channel - 1), 18).Value
                                        
                    Sheets(cc_sheet).Cells(ActiveCell.Row + 2 + 3 * (channel - 1), 27).Value = Signal & " (VS)"
                    Sheets(cc_sheet).Cells(ActiveCell.Row + 2 + 3 * (channel - 1), 27).Interior.ThemeColor = xlThemeColorAccent3
                    Sheets("BAZA_STD").Cells(3 + i, 69).Value = Sheets(cc_sheet).Cells(ActiveCell.Row + 2 + 3 * (channel - 1), 18).Value
                    
                    Sheets("BAZA_STD").Cells(3 + i, 68).Value = Sheets(cc_sheet).Cells(ActiveCell.Row, 14).Value
                End If
                
                If cc_card_name = "F 3330" Then
                    Sheets(cc_sheet).Cells(ActiveCell.Row + 1 + 2 * (channel - 1), 27).Value = Signal & " (ON)"
                    Sheets(cc_sheet).Cells(ActiveCell.Row + 1 + 2 * (channel - 1), 27).Interior.ThemeColor = xlThemeColorAccent3
                    Sheets("BAZA_STD").Cells(3 + i, 70).Value = Sheets(cc_sheet).Cells(ActiveCell.Row + 1 + 2 * (channel - 1), 18).Value
                    
                    Sheets(cc_sheet).Cells(ActiveCell.Row + 2 + 2 * (channel - 1), 27).Value = Signal & " (COM)"
                    Sheets(cc_sheet).Cells(ActiveCell.Row + 2 + 2 * (channel - 1), 27).Interior.ThemeColor = xlThemeColorAccent3
                    Sheets("BAZA_STD").Cells(3 + i, 71).Value = Sheets(cc_sheet).Cells(ActiveCell.Row + 2 + 2 * (channel - 1), 18).Value
                    
                    Sheets("BAZA_STD").Cells(3 + i, 68).Value = Sheets(cc_sheet).Cells(ActiveCell.Row, 14).Value
                
                End If
                
                If cc_card_name = "F 3236" Then
                    Sheets(cc_sheet).Cells(ActiveCell.Row + channel, 27).Value = Signal & " (IN)"
                    Sheets(cc_sheet).Cells(ActiveCell.Row + channel, 27).Interior.ThemeColor = xlThemeColorAccent3
                    Sheets("BAZA_STD").Cells(3 + i, 70).Value = Sheets(cc_sheet).Cells(ActiveCell.Row + channel, 18).Value
                    Sheets("BAZA_STD").Cells(3 + i, 68).Value = Sheets(cc_sheet).Cells(ActiveCell.Row, 14).Value
                    
                    Sheets(cc_sheet).Cells(ActiveCell.Row + 18 + channel, 27).Value = Signal & " (VS)"
                    Sheets(cc_sheet).Cells(ActiveCell.Row + 18 + channel, 27).Interior.ThemeColor = xlThemeColorAccent3
                    Sheets("BAZA_STD").Cells(3 + i, 46).Value = Sheets(cc_sheet).Cells(ActiveCell.Row + 18 + channel, 18).Value
                    Sheets("BAZA_STD").Cells(3 + i, 45).Value = Sheets(cc_sheet).Cells(ActiveCell.Row + 18, 14).Value
                    Sheets("BAZA_STD").Cells(3 + i, 130).Value = Sheets(cc_sheet).Cells(ActiveCell.Row + 20, 13).Value
                
                End If
                
             End If
Nxt:
Next i

Sheets("BAZA_STD").Activate

End Sub




Attribute VB_Name = "Module5"
Function cardpin(Card_type As String, channel As Long, pin_type As Range) As String
'Valmet automation Polska / 2017 JPa rev. 2018-03-06
'Assign pins to each card type defined in CARDS type
    
    Dim pin As String
    Dim i, potential, card_type_0_1 As Long
    Dim Rng As Range
                             
 If Not Card_type = "" Then
                Set Rng = Sheets("CARDS").Cells.Find(What:=Card_type, After:=ActiveCell, LookIn:=xlFormulas, LookAt:= _
                     xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False _
                     , SearchFormat:=False)
                     


    If Not Rng Is Nothing Then
     Application.GoTo Rng, True
     
     card_type_0_1 = Sheets("CARDS").Cells(Rng.Row + 2, Rng.Column)
     
     For i = 1 To 11 'check the type VS, COM, MINUS ...
          If pin_type = Sheets("CARDS").Cells(Rng.Row + 1, Rng.Column + i) Then
             potential = i
            i = 11
          End If
     Next i
     
    pin = Sheets("CARDS").Cells(Rng.Row + 2 + channel - card_type_0_1, Rng.Column + potential)
Else
        pin = "not defined"
    End If
End If
cardpin = pin

End Function


Function cable_wire(Cable_type As Range, pin As Range) As String
'Valmet automation Polska / 2017 JPa rev. 2018-03-06
'Assign wires to each CC cable defined in CABLES tab
    
    Dim wire As String
    Dim Rng As Range
 
If Not Cable_type = "" Then
                Set Rng = Sheets("CABLES").Cells.Find(What:=Cable_type, After:=ActiveCell, LookIn:=xlFormulas, LookAt:= _
                     xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False _
                     , SearchFormat:=False)
                     
If Not pin = "" And Not pin = "not defined" Then
    If Not Rng Is Nothing Then
     Application.GoTo Rng, True
  
      wire = Sheets("CABLES").Cells(Rng.Row + pin, Rng.Column + 2)

    Else
        wire = "not defined"

    End If

End If
End If

cable_wire = wire

End Function


Function separator_pin(Card_type As Range, channel As Long, pin_type As Range) As String
'Valmet automation Polska / 2017 JPa rev. 2018-03-06
'Assign pins to each separator/board type defined in selected type
    
    Dim pin As String
    Dim i, potential, card_type_0_1 As Long
    Dim Rng As Range
                             
  If Not Card_type = "" Then
                
                Set Rng = Sheets("CC_SEPARATORS").Cells.Find(What:=Card_type, After:=ActiveCell, LookIn:=xlFormulas, LookAt:= _
                     xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False _
                     , SearchFormat:=False)
                     


    If Not Rng Is Nothing Then
     Application.GoTo Rng, True
     
     card_type_0_1 = Sheets("CC_SEPARATORS").Cells(Rng.Row + 2, Rng.Column)
     
     For i = 1 To 11 'check the type VS, COM, MINUS ...
          If pin_type = Sheets("CC_SEPARATORS").Cells(Rng.Row + 1, Rng.Column + i) Then
            potential = i
            i = 11
          End If
     Next i
     
    pin = Sheets("CC_SEPARATORS").Cells(Rng.Row + 2 + channel - card_type_0_1, Rng.Column + potential)
Else
        pin = "not defined"
    End If
End If

separator_pin = pin

End Function

Function board_pin(Card_type As String, channel As Long, pin_type As Range) As String
'Function board_pin(Card_type As Range, channel As Long, pin_type As Range) As String
'Valmet automation Polska / 2017 JPa rev. 2018-03-06
'Assign pins to each separator/board type defined in selected type
    
    Dim pin As String
    Dim i, potential, card_type_0_1 As Long
    Dim Rng As Range
                             
  If Not Card_type = "" Then
                
                Set Rng = Sheets("BOARDS").Cells.Find(What:=Card_type, After:=ActiveCell, LookIn:=xlFormulas, LookAt:= _
                     xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False _
                     , SearchFormat:=False)
                     


    If Not Rng Is Nothing Then
     Application.GoTo Rng, True
     
     card_type_0_1 = Sheets("BOARDS").Cells(Rng.Row + 2, Rng.Column)
     
     For i = 1 To 13 'check the type VS, COM, MINUS ...
          If pin_type = Sheets("BOARDS").Cells(Rng.Row + 1, Rng.Column + i) Then
            potential = i
            i = 13
          End If
     Next i
     
    pin = Sheets("BOARDS").Cells(Rng.Row + 2 + channel - card_type_0_1, Rng.Column + potential)
Else
        pin = "not defined"
    End If
End If

board_pin = pin

End Function


Function device_pin(Device_type As Range, channel As Long, pin_type As Range) As String
'Valmet automation Polska / 2018 JPa rev. 2018-03-06
'Assign pins to each Device/transmitter type defined in selected type
    
    Dim pin As String
    Dim i, potential, device_type_0_1 As Long
    Dim Rng As Range
                             
  If Not Device_type = "" Then
                
                Set Rng = Sheets("DEVICES").Cells.Find(What:=Device_type, After:=ActiveCell, LookIn:=xlFormulas, LookAt:= _
                     xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False _
                     , SearchFormat:=False)
                     


    If Not Rng Is Nothing Then
     Application.GoTo Rng, True
     
     device_type_0_1 = Sheets("DEVICES").Cells(Rng.Row + 2, Rng.Column)
     
     For i = 1 To 11 'check the type VS, COM, MINUS ...
          If pin_type = Sheets("DEVICES").Cells(Rng.Row + 1, Rng.Column + i) Then
            potential = i
            i = 11
          End If
     Next i
     
    pin = Sheets("DEVICES").Cells(Rng.Row + 2 + channel - card_type_0_1, Rng.Column + potential)
Else
        pin = "not defined"
    End If
End If

device_pin = pin

End Function

Function sensor_pin(sensor_type As Range, channel As Long, pin_type As Range) As String
'Valmet automation Polska / 2018 JPa rev. 2018-03-06
'Assign pins to each sensor/transmitter type defined in selected type
    
    Dim pin As String
    Dim i, potential, sensor_type_0_1 As Long
    Dim Rng As Range
                             
  If Not sensor_type = "" Then
                
                Set Rng = Sheets("SENSORS").Cells.Find(What:=sensor_type, After:=ActiveCell, LookIn:=xlFormulas, LookAt:= _
                     xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False _
                     , SearchFormat:=False)
                     


    If Not Rng Is Nothing Then
     Application.GoTo Rng, True
     
     sensor_type_0_1 = Sheets("SENSORS").Cells(Rng.Row + 2, Rng.Column)
     
     For i = 1 To 5 'check the type VS, COM, MINUS ...
          If pin_type = Sheets("SENSORS").Cells(Rng.Row + 1, Rng.Column + i) Then
            potential = i
            i = 5
          End If
     Next i
     
    pin = Sheets("SENSORS").Cells(Rng.Row + 2 + channel - card_type_0_1, Rng.Column + potential)
Else
        pin = "not defined"
    End If
End If

sensor_pin = pin

End Function

Attribute VB_Name = "Module6"
Attribute VB_Name = "Module8"
Function cardno(Card_type As Range) As String
    
'Assign no to card

Dim no As String

For i = 1 To 35
If Sheets("Legend").Cells(25 + i, 25) = Card_type Then
no = Sheets("Legend").Cells(25 + i, 24)
End If
Next i

cardno = no

End Function


Function cardnoSIS(Card_type As Range) As String
    
'Assign no to card

Dim no As String

For i = 1 To 35
If Sheets("Legend").Cells(25 + i, 26) = Card_type Then
no = Sheets("Legend").Cells(25 + i, 24)
End If
Next i

cardnoSIS = no

End Function

Function cardtype(Card_type As Range) As String
    
'Assign no to card

Dim no As String

For i = 1 To 35
If Sheets("Legend").Cells(25 + i, 24) = Card_type Then
no = Sheets("Legend").Cells(25 + i, 25)
End If
Next i

cardtype = no

End Function


Function cable_wireSIS(Cable_type As Range, pin As Range) As String

'Assign wires to each CC cable defined in CABLES tab
    
    Dim wire As String
    Dim Rng As Range

 
If Not Cable_type = "" Then
                Set Rng = Sheets("CABLES").Cells.Find(What:=Cable_type, After:=ActiveCell, LookIn:=xlFormulas, LookAt:= _
                     xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False _
                     , SearchFormat:=False)
                     
If Not pin = "" And Not pin = "not defined" Then
    If Not Rng Is Nothing Then
     Application.GoTo Rng, True
  
      'wire = Sheets("CABLES").Cells(Rng.Row + pin, Rng.Column + 2)
      
For i = 1 To 72
If Sheets("CABLES").Cells(Rng.Row + i, Rng.Column + 1) = pin Then
wire = Sheets("CABLES").Cells(Rng.Row + i, Rng.Column + 2)
End If
Next i
        Else
        wire = "not defined"

    End If

End If
End If

cable_wireSIS = wire

End Function


Function separator_pinTCS(Cable_type As String, pin As String, pin_type As Range) As String

'Assign wires to each CC cable defined in CABLES tab
    Dim wire As String
    Dim Rng As Range
    Dim i, j, potential As Long
 
If Not Cable_type = "" Then
                Set Rng = Sheets("CC_SEPARATORS").Cells.Find(What:=Cable_type, After:=ActiveCell, LookIn:=xlFormulas, LookAt:= _
                     xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False _
                     , SearchFormat:=False)
                     
If Not pin = "" And Not pin = "not defined" Then
    If Not Rng Is Nothing Then
     Application.GoTo Rng, True
  
      'wire = Sheets("CABLES").Cells(Rng.Row + pin, Rng.Column + 2)
      
     For j = 1 To 11 'check the type VS, COM, MINUS ...
          If pin_type = Sheets("CC_SEPARATORS").Cells(Rng.Row, Rng.Column + j) Then potential = j
     Next j
     
For i = 1 To 32

If Sheets("CC_SEPARATORS").Cells(Rng.Row + i, Rng.Column + 1) = pin Then
wire = Sheets("CC_SEPARATORS").Cells(Rng.Row + i, Rng.Column + potential)
'
i = 32
End If

Next i
        Else
        wire = "not defined"

    End If

End If
End If

separator_pinTCS = wire
' separator_pinTCS = Rng.Row
End Function
Function eta_no(data_type As String, kks As String, pin_type As String) As String

'Assign wires to each CC cable defined in CABLES tab
    Dim wire As String
    Dim Rng As Range
    Dim i, j, potential As Long
 
If Not data_type = "" Then
                Set Rng = Sheets("PROT").Cells.Find(What:=data_type, After:=ActiveCell, LookIn:=xlFormulas, LookAt:= _
                     xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False _
                     , SearchFormat:=False)
                     
If Not kks = "" And Not kks = "not defined" Then
    If Not Rng Is Nothing Then
     Application.GoTo Rng, True
  
      'wire = Sheets("CABLES").Cells(Rng.Row + pin, Rng.Column + 2)
      
     For j = 1 To 17 'check the type VS, COM, MINUS ...
          If pin_type = Sheets("PROT").Cells(Rng.Row, Rng.Column + j) Then potential = j
     Next j
     
For i = 1 To 60

If Sheets("PROT").Cells(Rng.Row + i, Rng.Column + 1) = kks Then
wire = Sheets("PROT").Cells(Rng.Row + i, Rng.Column + potential)
'
i = 60
End If

Next i
        Else
        wire = "not defined"

    End If

End If
End If

eta_no = wire
' separator_pinTCS = Rng.Row
End Function

'Function eta_no(kks As String) As String

'Assign wires to each CC cable defined in CABLES tab
    
'Dim temp As String
      
'For i = 1 To 40

'If Sheets("PROT").Cells(1 + i, 1 + 1) = kks Then
'temp = Sheets("PROT").Cells(1 + i, 1 + 2)
'i = 40
'End If

'Next i


'eta_no = temp

'End Function

Function VS(Cabinet As String, kks As String, pin_type As Range) As String

'Assign wires to each CC cable defined in CABLES tab
    Dim wire As String
    Dim Rng As Range
    Dim i, j, potential As Long
 
If Not Cabinet = "" Then
                Set Rng = Sheets("24VDC").Cells.Find(What:=Cabinet, After:=ActiveCell, LookIn:=xlFormulas, LookAt:= _
                     xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False _
                     , SearchFormat:=False)
                     
If Not kks = "" And Not kks = "not defined" Then
    If Not Rng Is Nothing Then
     Application.GoTo Rng, True
  
      'wire = Sheets("CABLES").Cells(Rng.Row + pin, Rng.Column + 2)
      
     For j = 1 To 11 'check the type VS, COM, MINUS ...
          If pin_type = Sheets("24VDC").Cells(Rng.Row, Rng.Column + j) Then potential = j
     Next j
     
For i = 1 To 40

If Sheets("24VDC").Cells(Rng.Row + i, Rng.Column + 1) = kks Then
wire = Sheets("24VDC").Cells(Rng.Row + i, Rng.Column + potential)
'
i = 40
End If

Next i
        Else
        wire = "not defined"

    End If

End If
End If

VS = wire
' separator_pinTCS = Rng.Row
End Function



Attribute VB_Name = "Module9"
Sub Macro1()
Attribute Macro1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro1 Macro
'

'
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Columns("F:F").Select
    Selection.Copy
    Columns("M:M").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Columns("M:M").Select
    Application.CutCopyMode = False
    Selection.Delete Shift:=xlToLeft
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 6, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    Application.CalculateFullRebuild
End Sub
Attribute VB_Name = "Sheet32"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet33"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet34"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet35"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet36"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet37"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet38"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet39"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet40"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet41"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet42"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet43"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet44"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet45"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet46"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet47"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet48"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet49"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet50"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet51"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet52"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
'14-10-2007
'S|fffd|awomir Madejczyk
'Wype|fffd|ninaie rak|fffd|w na podstawie danych w bazie danych ver. 1.0
'Sprawdzanie zgodno|fffd|ci szaf z nazwami skoroszyt|fffd|w ver. 1.1

Dim s2, activ_s  As Worksheet
Dim i_sheets As Variant


i_sheets = Array("", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "")


Dim i, w As Integer
Dim duplicate   As Boolean

    
Dim input_row As Integer
Dim insert_row As Integer
Dim insert_col As Integer
Dim insert_Card As Integer
    
Dim b_Cab As String
Dim b_AP As String
Dim b_FBC As Integer
Dim b_PIC As Integer
Dim b_Card As Integer
Dim b_Chanel As Integer

'Inicjacja zmiennych
Set s2 = Worksheets.Item(2)
s2.Range("B3:K5000").Font.Color = BLACK

input_row = 3
insert_col = 4

i = 0
duplicate = 0

'Pobiera informacje o nazwie wszystkich skoroszytow

w = Sheets.Count
For i = 1 To w

i_sheets(i) = Sheets(i).Name

Next i

'Sprawdza czy s|fffd| dane w bazie danych
While s2.Cells(input_row, 1) <> ""

'Pobranie danych |fffd|r|fffd|d|fffd|owych o sygnale
b_Cab = s2.Cells(input_row, 2)
b_AP = s2.Cells(input_row, 4)
b_FBC = s2.Cells(input_row, 5)
b_PIC = s2.Cells(input_row, 6)
b_Card = Val(s2.Cells(input_row, 7)) ' Kowersja string na int
b_Chanel = Val(s2.Cells(input_row, 8)) 'Konwersja string na int

'Sprawdzenie definicji kana|fffd|ow w raku
If duplicate = False Then
If s2.Cells(input_row, 8) = "" Then
    duplicate = True
End If
End If


'Na podstawie nazwy szafy generowany jest aktywny arkusz
Select Case b_Cab <> ""
        Case b_Cab = i_sheets(3)
        Set activ_s = Worksheets.Item(3)
        Case b_Cab = i_sheets(4)
        Set activ_s = Worksheets.Item(4)
        Case b_Cab = i_sheets(5)
        Set activ_s = Worksheets.Item(5)
        Case b_Cab = i_sheets(6)
        Set activ_s = Worksheets.Item(6)
        Case b_Cab = i_sheets(7)
        Set activ_s = Worksheets.Item(7)
        Case b_Cab = i_sheets(8)
        Set activ_s = Worksheets.Item(8)
        Case b_Cab = i_sheets(9)
        Set activ_s = Worksheets.Item(9)
        Case b_Cab = i_sheets(10)
        Set activ_s = Worksheets.Item(10)
        Case Else
        MsgBox " Zle zdefiniowana nazwa szafy !!! ", vbCritical
        s2.Cells(input_row, 2).Font.ColorIndex = 3
       ' End
        GoTo JUMP_LABEL
End Select

'Petla sprawdzajaca 8 rakow
insert_row = 10
For i = 0 To 8

If b_AP = activ_s.Cells(insert_row, 2) Then
    If b_FBC = activ_s.Cells(insert_row + 1, 2) Then
        If b_PIC = activ_s.Cells(insert_row + 2, 2) Then
        
            'If b_Card > 7 Then
            'insert_Card = b_Card + 3
            'Else
            insert_Card = b_Card
            'End If
            
            activ_s.Cells(insert_row + 2 + b_Chanel, insert_col + insert_Card) = s2.Cells(input_row, 14)
            
        End If
    End If
End If

insert_row = insert_row + 18

Next i

JUMP_LABEL:
input_row = input_row + 1

Wend

If duplicate = True Then
MsgBox "Brak numeru(ow) kana|fffd|u w bazie danych.    " & Chr(13) & "Raki moga zostac blednie wypelnione  !!!    ", vbCritical

End If



End Sub

Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{489B1F49-66F1-494B-93FD-1A364BD9534B}{7431135B-0880-4776-A44C-65F40E83C323}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub UserForm_Activate()
    ' Set the width of the progress bar to 0.
    UserForm1.PRGLabel.Width = 0
    UserForm1.TMPLabel.Width = 0
    ' Call the main subroutine.
    Call Loop_diagrams
End Sub
Attribute VB_Name = "UserForm2"
Attribute VB_Base = "0{C8C94416-6F0B-499E-AAB5-91AFDC31D520}{57BDBBC9-E049-4F41-BB9F-DF3A7547D5F8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub UserForm_Activate()
    ' Set the width of the progress bar to 0.
    UserForm2.PRGLabel.Width = 0
    ' Call the main subroutine.
    Call IO_Location
End Sub
Attribute VB_Name = "UserForm3"
Attribute VB_Base = "0{9C913E2D-BA7A-4217-BCB1-E98D96C4EDDD}{9DAE2907-1C8B-481F-A97D-47BAC7224E18}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Activate()
    ' Set the width of the progress bar to 0.
    UserForm1.PRGLabel.Width = 0
    UserForm1.TMPLabel.Width = 0
    ' Call the main subroutine.
    Call Loop_diagrams_EPLAN
End Sub



INQUEST-PP=macro
