Attribute VB_Name = "Accelerated"
Option Explicit

'=====================================================================
' The following code supports the "Send Email" macro
'=====================================================================

Sub CreateEmail()
' Macro assigned to "Send Email" buttons found on accelerated claim and LAE payment forms

Dim SOSTempFilePath As String
Dim VATTempFilePath As String
Dim RECTempFilePath As String
Dim MyType As String
Dim msg1 As String

Application.ScreenUpdating = False
Application.DisplayAlerts = False

Call ItemsHide

'Set string "MyType" to the worksheet name calling the email macro
MyType = ActiveSheet.Name
Sheets(MyType).Unprotect

'North America Accelerated Claim Payment
If MyType = "NA.ACLM.PMT" Then
    Sheets("NA.ACLM.SOS").Select
    Sheets("NA.ACLM.PMT").Select
    msg1 = MsgBox("Have you completed the SOS page?", vbYesNo, "Question")
    If msg1 = vbNo Then GoTo exit0
    Call Copy_NASOS(MyType, SOSTempFilePath, RECTempFilePath)
End If

'North America Accelerated LAE Payment
If MyType = "NA.ALAE.PMT" Then
    Call Copy_NASOS(MyType, SOSTempFilePath, RECTempFilePath)
End If

'International Accelerated Claim Payment
If MyType = "INT.ACLM.PMT" Then
    msg1 = MsgBox("Have you completed the SOS page?", vbYesNo, "Question")
    If msg1 = vbNo Then GoTo exit0
Call Copy_SOS(MyType, SOSTempFilePath, VATTempFilePath)
End If

'International Accelerated LAE Payment
If MyType = "INT.ALAE.PMT" Then
    msg1 = MsgBox("Have you completed the SOS and VAT pages?", vbYesNo, "Question")
    If msg1 = vbNo Then GoTo exit0
Call Copy_SOS(MyType, SOSTempFilePath, VATTempFilePath)
End If

Call TestOutlook 'Open Outlook if not already open
Call Mail_Range_Outlook_Body(MyType, SOSTempFilePath, VATTempFilePath, RECTempFilePath) 'Create email message form

exit0:
Sheets(MyType).Protect
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.DisplayAlerts = True

End Sub



Sub Copy_NASOS(MyType As String, TempFile As String, TempFile2 As String)
' Copy NASOS to separate file, which will later be attached to the email
' Called by CreateEmail
   
Dim ClaimID As String
 
ClaimID = Sheets("Cover").[ClaimID]

If Sheets("NA.ACLM.SOS").Visible Then
'Set full path of temporary excel file.  C:\Users\"user"\AppData\Local\Temp\"SOS-timestamp".xls
    TempFile = Environ$("temp") & "\" & "SOS-" & ClaimID & " (" & Format(Now, "dd-mmm-yyyy") & ").xlsm"

'Copy SOS
 Sheets("NA.ACLM.SOS").Unprotect
 Sheets("NA.ACLM.SOS").Copy

'Save SOS in temp folder
    ActiveWorkbook.SaveAs Filename:=TempFile, FileFormat:= _
        xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False

'Remove all formulas and controls (specific to NA SOS)
    Cells.Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Application.CutCopyMode = False
    ActiveSheet.Shapes.Range(Array("CheckBox1")).Delete
    [E3].Select
    ActiveWorkbook.Save
    ActiveWorkbook.Close
End If
   
If Sheets("NA.CLM.REC").Visible Then
    'Set full path of temporary excel file.  C:\Users\"user"\AppData\Local\Temp\"VAT-timestamp".xls
        TempFile2 = Environ$("temp") & "\" & "REC-" & ClaimID & " (" & Format(Now, "dd-mmm-yyyy") & ").xlsm"
    
    'Copy VAT Sheet
        Sheets("NA.CLM.REC").Copy
        
    'Save SOS in temp folder
        ActiveWorkbook.SaveAs Filename:=TempFile2, FileFormat:= _
            xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
    
    'Remove all formulas
        ActiveWorkbook.ActiveSheet.Unprotect
        Cells.Select
        Selection.Copy
        Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
        Application.CutCopyMode = False
        Range("A1").Select
        ActiveWorkbook.Save
        ActiveWorkbook.Close
End If
    ActiveWorkbook.Worksheets("NA.CLM.REC").Protect
    
End Sub

Sub Copy_SOS(MyType As String, TempFile As String, TempFile2 As String)
' Copy SOS and VAT sheets to separate files, which will later be attached to the email
' Called by CreateEmail
      
Dim ClaimID As String
 
ClaimID = Sheets("Cover").[ClaimID]
    
'Set full path of temporary Excel file.  C:\Users\"user"\AppData\Local\Temp\"SOS-timestamp".xls
    TempFile = Environ$("temp") & "\" & "SOS-" & ClaimID & " (" & Format(Now, "dd-mmm-yyyy") & ").xlsm"

'Copy SOS
    Select Case MyType
        Case "INT.ACLM.PMT"
            Sheets("INT.ACLM.SOS").Copy
        Case "INT.ALAE.PMT"
            Sheets("INT.ALAE.SOS").Copy
    End Select
    
'Save SOS in temp folder
    ActiveWorkbook.SaveAs Filename:=TempFile, FileFormat:= _
        xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False


'Remove all formulas and controls (specific to International SOS)
    Cells.Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Application.CutCopyMode = False
    ActiveSheet.Shapes.Range(Array("ComboBox3")).Delete
    ActiveSheet.Shapes.Range(Array("ComboBox1")).Delete
    ActiveSheet.Shapes.Range(Array("ComboBox2")).Delete
    ActiveSheet.Shapes.Range(Array("Rectangle 1")).Delete
    Range("A1").Select
    ActiveWorkbook.Save
    ActiveWorkbook.Close
       
'Also copy VAT form if processing an LAE
    If MyType = "INT.ALAE.PMT" Then
    
    'Set full path of temporary excel file.  C:\Users\"user"\AppData\Local\Temp\"VAT-timestamp".xls
        TempFile2 = Environ$("temp") & "\" & "VAT-" & ClaimID & " (" & Format(Now, "dd-mmm-yyyy") & ").xlsm"
    
    'Copy VAT Sheet
        Sheets("INT.LAE.VAT").Copy
        
    'Save SOS in temp folder
        ActiveWorkbook.SaveAs Filename:=TempFile2, FileFormat:= _
            xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
    
    'Remove all formulas
        ActiveWorkbook.ActiveSheet.Unprotect
        Cells.Select
        Selection.Copy
        Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
        Application.CutCopyMode = False
        Range("A1").Select
        ActiveWorkbook.Save
        ActiveWorkbook.Close

End If
   
End Sub

Sub TestOutlook()
' Check if Outlook is open. If not, open it.
' Called by CreateEmail

    Dim oOutlook As Object

    On Error Resume Next
    Set oOutlook = GetObject(, "Outlook.Application")
    If oOutlook Is Nothing Then
        Shell ("Outlook")
    End If

End Sub



Sub Mail_Range_Outlook_Body(MyType As String, SOSTempFilePath As String, VATTempFilePath As String, RECTempFilePath As String)
' Copies accelerated payment form into an Outlook email, and includes distribution and subject
' Called by CreateEmail


    Dim rng As Range
    Dim OutApp As Object
    Dim OutMail As Object
    Dim MySheetName As String
    Dim MyTo As String
    Dim Mycc As String
    Dim MyOps As String
    Dim MySubject As String
    Dim MySheetRange As String

    
    Select Case MyType
        Case "NA.ACLM.PMT"
            MySheetRange = "A5:LastCell_NAACLM"
        Case "NA.ALAE.PMT"
            MySheetRange = "A5:LastCell_NAALAE"
        Case "INT.ACLM.PMT"
            MySheetRange = "A5:LastCell_INTACLM"
        Case "INT.ALAE.PMT"
            MySheetRange = "A5:LastCell_INTALAE"
    End Select
   
       
    With Application
        .EnableEvents = False
        .ScreenUpdating = False
    End With
 
    Set rng = Nothing
    On Error Resume Next
    Set rng = Worksheets(MyType).Range(MySheetRange).SpecialCells(xlCellTypeVisible)
    On Error GoTo 0
 
    If rng Is Nothing Then
        MsgBox "The selection is not a range or the sheet is protected" & _
               vbNewLine & "please correct and try again.", vbOKOnly
        Exit Sub
    End If
 
    Set OutApp = CreateObject("Outlook.Application")
    Set OutMail = OutApp.CreateItem(0)
 
    On Error Resume Next
          
    With Worksheets("Data.1")
        
        If MyType = "NA.ACLM.PMT" Or MyType = "INT.ACLM.PMT" Then
                MyTo = .Range("ClaimTo")
                Mycc = .Range("ClaimCC")
                MySubject = .Range("ClaimSubject")
                
            ElseIf MyType = "NA.ALAE.PMT" Or MyType = "INT.ALAE.PMT" Then
                MyTo = .Range("LAETo")
                Mycc = .Range("LAECC")
                MySubject = .Range("LAESubject")
            End If
     End With
    
     With OutMail
        .To = MyTo
        .CC = Mycc
        .BCC = ""
        .Subject = MySubject
        .HTMLBody = RangetoHTML(rng)
        
        'Include SOS / VAT /REC forms as attachments for accelerated payments
        If MyType = "INT.ACLM.PMT" Then
            .Attachments.Add (SOSTempFilePath)
        ElseIf MyType = "INT.ALAE.PMT" Then
            .Attachments.Add (SOSTempFilePath)
            .Attachments.Add (VATTempFilePath)
        ElseIf MyType = "NA.ACLM.PMT" And Not Sheets("NA.CLM.REC").Visible Then
            .Attachments.Add (SOSTempFilePath)
        ElseIf MyType = "NA.ACLM.PMT" And Sheets("NA.CLM.REC").Visible Then
            .Attachments.Add (SOSTempFilePath)
            .Attachments.Add (RECTempFilePath)
        End If
        
        .Display
        
    End With
    
    'Delete temporary files
    Kill SOSTempFilePath
    Kill VATTempFilePath
    Kill RECTempFilePath
    On Error GoTo 0
 
    With Application
        .EnableEvents = True
        .ScreenUpdating = True
    End With
 
    Set OutMail = Nothing
    Set OutApp = Nothing
    
End Sub




Sub ItemsHide()

If ActiveSheet.Name = "NA.ACLM.PMT" Then

    If [Item7].EntireRow.Hidden = False Then
        If [Item7Amount] = vbNullString Then [Item7].EntireRow.Hidden = True
        [Item6Amount].Select
    End If
    If [Item6].EntireRow.Hidden = False Then
        If [Item6Amount] = vbNullString Then [Item6].EntireRow.Hidden = True
        [Item5Amount].Select
    End If
    If [Item5].EntireRow.Hidden = False Then
        If [Item5Amount] = vbNullString Then [Item5].EntireRow.Hidden = True
        [Item4Amount].Select
    End If
    If [Item4].EntireRow.Hidden = False Then
        If [Item4Amount] = vbNullString Then [Item4].EntireRow.Hidden = True
        [Item3Amount].Select
    End If
    If [Item3].EntireRow.Hidden = False Then
        If [Item3Amount] = vbNullString Then [Item3].EntireRow.Hidden = True
        [Item2Amount].Select
    End If
    If [Item2].EntireRow.Hidden = False Then
        If [Item2Amount] = vbNullString Then [Item2].EntireRow.Hidden = True
        [Item1Amount].Select
    End If

End If

End Sub


Attribute VB_Name = "AcceleratedFunctionModule"
Option Explicit

Function RangetoHTML(rng As Range)
'Called by Mail_Range_Outlook_Body

    Dim fso As Object
    Dim ts As Object
    Dim TempFile As String
    Dim TempWB As Workbook
    
    TempFile = Environ$("temp") & "\" & Format(Now, "dd-mm-yy h-mm-ss") & ".htm"

    'Copy the range and create a new workbook to past the data in
    rng.Copy
    Set TempWB = Workbooks.Add(1)
    With TempWB.Sheets(1)
        .Cells(1).PasteSpecial Paste:=8
        .Cells(1).PasteSpecial xlPasteValues, , False, False
        .Cells(1).PasteSpecial xlPasteFormats, , False, False
        .Cells(1).Select
        Application.CutCopyMode = False
        On Error Resume Next
        .DrawingObjects.Visible = True
        .DrawingObjects.Delete
        On Error GoTo 0
    End With
 
    'Publish the sheet to a htm file
    With TempWB.PublishObjects.Add( _
         SourceType:=xlSourceRange, _
         Filename:=TempFile, _
         Sheet:=TempWB.Sheets(1).Name, _
         Source:=TempWB.Sheets(1).UsedRange.Address, _
         HtmlType:=xlHtmlStatic)
        .Publish (True)
    End With
 
    'Read all data from the htm file into RangetoHTML
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set ts = fso.GetFile(TempFile).OpenAsTextStream(1, -2)
    RangetoHTML = ts.readall
    ts.Close
    RangetoHTML = Replace(RangetoHTML, "align=center x:publishsource=", _
                          "align=left x:publishsource=")
 
    'Close TempWB
    TempWB.Close savechanges:=False
 
    'Delete the htm file we used in this function
    Kill TempFile

    Set ts = Nothing
    Set fso = Nothing
    Set TempWB = Nothing
End Function



Attribute VB_Name = "Import_ILN"
'------------------------------------------------------
'  Subroutine to import data from a selected ILN
'------------------------------------------------------
  
Sub NewClaimFromILN(ILN_Imported As Boolean, ILN_Error As Boolean)

On Error Resume Next

'Prevent screen flicker and alerts
Application.ScreenUpdating = False
Application.DisplayAlerts = False

Dim ClaimID As String


Dim DateofLossDate As Date 'use for old ILNs
Dim DateReportedDate As Date 'use for old ILNs
Dim DateofLossString As String 'use for new ILNs
Dim DateReportedString As String 'use for new ILNs

Dim ClaimPeril As String
Dim OpsWritten As String
Dim ClientName As String
Dim LocationName As String
Dim StreetLocation As String
Dim City As String
Dim StateProvince As String
Dim Country As String
Dim PolicyNo As String

Dim FMGlobalPercent As Double 'Use Double rather than String
Dim ExchangeRate As Double 'Use Double rather than String


Dim PolicyCurrName As String
'Dim CurrCode As String
Dim LossID As String
Dim CAT_No As String
Dim FM_LossNo As String
Dim IIA_LossNo As String
Dim Company As String
Dim AccountNo As String
Dim IndexNo As String
Dim OpsOccurred As String
Dim OpsHandling As String
Dim ClaimsCoord As String
Dim LossAdjuster As String
Dim Supervisor As String
Dim LossCoord As String
Dim LossCaption As String

Dim FrenchCATNAT As String
Dim IIA_Code_PD As String
Dim IIA_Code_TE As String

Dim PaymentFormBook As String
Dim ILNWorkbookName As String

Dim LenStringPD As Integer
Dim LenStringTE As Integer
Dim HypPositionPD As Integer
Dim HypPositionTE As Integer
Dim CovPD As String
Dim CovTE As String
Dim Rating As String

Dim iReply As Byte, iType As Integer
Dim myMessage As String
Dim myTempVar As String
Dim DateTypeDOL As Boolean
Dim DateTypeReported As Boolean

'Initialize variables
    ILN_Imported = False
    ILN_Error = False
    PaymentFormBook = ActiveWorkbook.Name

'Show Open File dialog box and filter Excel files.
    ILNWorkbookPathname = Application.GetOpenFilename("Excel Files (*.xls;*.xlsx),*.xls;*.xlsx")

'End macro if no file is selected
If ILNWorkbookPathname = False Then
    'MsgBox "No File Selected."
    ILN_Imported = False
    GoTo endpoint_A
End If

'Open selected file
    Workbooks.Open Filename:=ILNWorkbookPathname
    ILNWorkbookName = ActiveWorkbook.Name

'Check that selected file is a standard ILN
If Workbooks(ILNWorkbookName).Sheets(1).Range("A6") <> "Initial Loss Notification" Then
    MsgBox "The file you selected does not appear to be a standard ILN. Nothing has been imported."
    Workbooks(ILNWorkbookName).Close
    ILN_Imported = False
    GoTo endpoint_A 'quit
End If

'Copy ILN data fields to varibles
With Workbooks(ILNWorkbookName).Sheets(1)
 
    'Import dates as both text and date for compatibility
    DateTypeDOL = WorksheetFunction.IsText(Range("c9"))
    DateTypeReported = WorksheetFunction.IsText(Range("c52"))
    DateReportedString = .[C52]
    DateofLossString = .[C9]
    DateReportedDate = .[C52]
    DateofLossDate = .[C9]
    
    ClaimID = .[H9]
    LossID = .[H10]
    ClaimPeril = .[C10]
    OpsWritten = .[C11]
    ClientName = .[C14]
    LocationName = .[C15]
    StreetLocation = .[C16]
    City = .[C17]
    StateProvince = .[C18]
    Country = .[C19]
    PolicyNo = .[C21]
    FMGlobalPercent = .[C22]
    PolicyCurrName = .[C23]
    ExchangeRate = .[C24]
    CAT_No = .[H11]
    Company = .[H14]
    AccountNo = .[H15]
    IndexNo = .[H16]
    OpsOccurred = .[H17]
    OpsHandling = .[H18]
    ProcSystem = .[H19]
    ClaimsCoord = .[H21]
    LossAdjuster = .[H22]
    Supervisor = .[H23]
    LossCoord = .[H24]
    LossCaption = .[C37]
    FrenchCATNAT = .[H54]
    FM_LossNo = .[H12]
    IIA_Code_PD = .[B31]
    IIA_Code_TE = .[B32]
    IIA_LossNo = .[E6]
    
    If IIA_Code_PD = "" And IIA_Code_TE = "" Then 'This a North American loss
        FM_LossNo = .[H12]
        IIA_LossNo = ""
    Else                                          'This is an International loss. Reassign "FM Loss No" to "IIA Loss No"
        If IIA_LossNo <> "" Then 'user added IIA loss no to cell E6
        'do nothing
        ElseIf Len(FM_LossNo) < 12 Then 'User has overwritten fm lossno with IIA lossno
            IIA_LossNo = FM_LossNo
        Else 'ILN does not contain IIA lossno
            IIA_LossNo = "?"
            ILN_Error = True
        End If
        
        FM_LossNo = ""

    End If
    
    
End With

'Close selected file
    Workbooks(ILNWorkbookName).Close

' Copy variables to Cover
    With Workbooks(PaymentFormBook).Sheets("Cover")
    
    'Clear form data
    .Unprotect
    .[ClaimID] = ""
    .[Issued] = ""
    .[DateOfLoss] = ""
    .[ClaimPeril] = ""
    .[OpsWritten] = ""
    .[ClientName] = ""
    .[LocationName] = ""
    .[Street] = ""
    .[City] = ""
    .[StateProvince] = ""
    .[Country] = ""
    .[PolicyNo] = ""
    .[FM_Percent] = ""
    .[PolicyCurrency] = ""
    .[ExchangeRate] = ""
    .[LossID] = ""
    .[CAT_No] = ""
    .[CatRefNo] = ""
    .[FM_LossNo] = ""
    .[Company] = ""
    .[AccountNo] = ""
    .[IndexNo] = ""
    .[OpsOccurred] = ""
    .[OpsHandling] = ""
    .[ClaimsCoordinator] = ""
    .[LossAdjuster] = ""
    .[Supervisor] = ""
    .[LossCoordinator] = ""
    .[LossCaption] = ""
    .[DateReported] = ""
    .[IIA_FrenchCatNat] = ""
    .[PolicyCurrCode] = "=IF(OR(PolicyCurrency="""",PolicyCurrency=""?""),"""",VLOOKUP(PolicyCurrency,CurrencyTable,2,0))"
    .[IIA_RatingCode] = ""
    .[IIA_CovCodePD] = ""
    .[IIA_CovCodeTE] = ""
    .[IIA_LossNo] = ""
    .[LossDescription] = ""

  
    'Copy ILN data to Cover
    .[Issued] = "=TODAY()"
    .[ClaimID] = ClaimID
    
    'Import Dates according to correct format
    If DateTypeDOL = True Then
    .[DateOfLoss] = DateofLossString
    Else
    .[DateOfLoss] = DateofLossDate
    End If
    
    If DateTypeReported = True Then
    .[DateReported] = DateReportedString
    Else
    .[DateReported] = DateReportedDate
    End If
    
    .[ClaimPeril] = ClaimPeril
    .[OpsWritten] = OpsWritten
    .[ClientName] = ClientName
    .[LocationName] = LocationName
    .[Street] = StreetLocation
    .[City] = City
    .[StateProvince] = StateProvince
    .[Country] = Country
    .[PolicyNo] = PolicyNo
    .[FM_Percent] = FMGlobalPercent
    .[PolicyCurrency] = PolicyCurrName
    .[ExchangeRate] = ExchangeRate
    .[LossID] = LossID
    .[CAT_No] = CAT_No
    .[FM_LossNo] = FM_LossNo
    If Left(Company, 1) = "A" Then Company = "Affiliated FM" 'Remove "a Division of FM Insurance Company Ltd." from string
    .[Company] = Company
    .[AccountNo] = AccountNo
    .[IndexNo] = IndexNo
    .[OpsOccurred] = OpsOccurred
    .[OpsHandling] = OpsHandling
    .[IIA_RatingCode] = ""
    .[IIA_CovCodePD] = ""
    .[IIA_CovCodeTE] = ""
    .[IIA_LossNo] = IIA_LossNo
    .[LossCaption] = LossCaption

    .[IIA_FrenchCatNat] = FrenchCATNAT
    .[ClaimsCoordinator] = ClaimsCoord
    .[LossAdjuster] = LossAdjuster
    .[Supervisor] = Supervisor
    .[LossCoordinator] = LossCoordinator
  
'Check for invalid currency name (normally found on prior version of ILN)
    On Error Resume Next
    Err.Clear
    myTempVar = WorksheetFunction.VLookup(PolicyCurrName, Worksheets("Data.1").Range("CurrencyTable"), 2, 0)
    If Err.Number <> 0 Then 'invalid currency name
        .[PolicyCurrency] = "?" 'Unknown currency
        ILN_Error = True
    End If
    

'Extract Rating and Coverages codes from Rating/Coverage Code strings

    If IIA_Code_PD <> "" Then 'If a PDrating/coverage code is present
        LenStringPD = Len(IIA_Code_PD)
        HypPositionPD = InStr(IIA_Code_PD, "/")
        If HypPositionPD = 0 Then
            .[IIA_RatingCode] = "?"
            .[IIA_CovCodePD] = "?"
            ILN_Error = True
        Else
            Rating = Left(IIA_Code_PD, HypPositionPD - 1)
            CovPD = Right(IIA_Code_PD, LenStringPD - HypPositionPD)
            .[IIA_RatingCode] = Format(Rating, "0000")
            .[IIA_CovCodePD] = Format(CovPD, "0000")
        End If
    End If
    
     If IIA_Code_TE <> "" Then 'If a TE rating/coverage code is present
        LenStringTE = Len(IIA_Code_TE)
        HypPositionTE = InStr(IIA_Code_TE, "/")
        If HypPositionTE = 0 Then
            .[IIA_RatingCode] = "?"
            .[IIA_CovCodeTE] = "?"
            ILN_Error = True
        Else
            Rating = Left(IIA_Code_TE, HypPositionTE - 1)
            CovTE = Right(IIA_Code_TE, LenStringTE - HypPositionTE)
            .[IIA_RatingCode] = Format(Rating, "0000")
            .[IIA_CovCodeTE] = Format(CovTE, "0000")
        End If
    End If
  
        .Protect
End With
   
   
ILN_Imported = True
endpoint_A: 'land here if no file selected or ILN is non-standard
If Err <> 0 Then ILN_Error = True
Err.Clear

Workbooks(PaymentFormBook).Worksheets("Start").Activate
Application.DisplayAlerts = True
Application.ScreenUpdating = True

End Sub




Attribute VB_Name = "Module0"
Public FileToDelete As String 'Needed to retain name of temporary file so it can be later deleted


Sub ImportILN()
'Command button to select ILN to import

    Dim ILN_Imported As Boolean
    Dim ILN_Error As Boolean

    ILN_Imported = False
    
    Call NewClaimFromILN(ILN_Imported, ILN_Error)
    
    Call SetLogo 'set logo based on company name
    
    If ILN_Imported = True Then
        Worksheets("Cover").Visible = True
        MsgBox "Please save this workbook using the suggested filename..."
    Else
        GoTo endhere
    End If
     
    Call SavePaymentWorkbook(ILN_Error)
    Call SetOperations 'set buttons based on ops handling

endhere:

End Sub


Sub SetOperations()

On Error GoTo exithere

If [blnIntOpsHandling] = 1 Then
    Call INT_Button
    Call Reg_Button
    Call INT_LAE
Else
    Call NA_Button
    Call Reg_Button
    Call NA_LAE
End If

exithere:

End Sub


Sub SavePaymentWorkbook(ILN_Error As Boolean)
'Command button to save workbook as a macro-enabled Excel workbook

Dim TempFilePath As String
Dim TempFileName As String
Dim PreferredWorkbookName As String
Dim ClaimID As String
Dim fName As String

Application.ScreenUpdating = False
Application.EnableEvents = False
Application.DisplayAlerts = False


'Set full path of temporary excel file.  C:\Users\"user"\AppData\Local\Temp\"SOS-timestamp".xls
    FileToDelete = Environ$("temp") & "\" & "Temp" & Format(Now, "yyyymmddhhmmss") & ".xlsm"

    'Save temporary copy
    ActiveWorkbook.SaveAs Filename:=FileToDelete, FileFormat:= _
        xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False

Application.DisplayAlerts = True

'Save again using suggested filename
ClaimID = Worksheets("Cover").Range("ClaimID")
PreferredWorkbookName = "Payments_" & ClaimID
        
On Error GoTo Errhandler1

    fName = Application.GetSaveAsFilename(InitialFileName:=PreferredWorkbookName, _
            fileFilter:="Excel Macro-Enabled Workbook (*.xlsm), *.xlsm")
    If fName <> "False" Then
           ThisWorkbook.SaveAs fName
        If ILN_Error = True Then
            'Worksheets("Cover").Visible
            Worksheets("Cover").Activate
            MsgBox "ILN data has been copied to Cover sheet." & vbCrLf & vbCrLf & _
                "Before you begin please review it for any incomplete data, highlighted in yellow."
        End If
                       
           Kill FileToDelete 'Delete Temp File
     Else
            MsgBox "Workbook not saved" 'Delete Temp File on workbook close
      
    End If
    
Errhandler1:

Application.EnableEvents = True
Application.DisplayAlerts = True
Application.ScreenUpdating = True

End Sub


Sub PrintVisible()
'Command button to print all visible worksheets except for Start

Dim ws As Worksheet
Dim objSheet As Object
Dim msg1 As String, Msg2 As String, Msg3 As String
Dim FormType As String
Dim ActivePrinter As String
Dim wsCount As Integer

'Check for a visible form
wsCount = 0

For Each ws In ActiveWorkbook.Sheets
If ws.Visible <> 0 Then wsCount = wsCount + 1
Next ws
If wsCount <= 1 Then
    MsgBox "Nothing to print"
    End
End If

MyActivePrinter = Application.ActivePrinter
FormType = Worksheets("Start").Range("PaymentForm")
msg1 = MsgBox("Print complete " & FormType & " form?", vbYesNo, "Print")

If msg1 = vbYes Then
    Msg2 = MsgBox("Use active printer, " & MyActivePrinter & " ?", vbYesNo, "Verify Active Printer")
    If Msg2 = vbYes Then
        'continue to print
    Else
        'Provide printer setup option dialogbox
        Application.Dialogs(xlDialogPrinterSetup).Show
        Call UpdateActivePrinter
        Msg3 = MsgBox("Continue to print on selected printer?", vbYesNo, "Print")
        If Msg3 = vbNo Then End
    End If
    
    ' Print form

        For Each ws In ActiveWorkbook.Sheets
            If ws.Visible <> 0 Then ws.Select False
        Next ws

        If Left(FormType, 3) = "Acc" Then
            ActiveWindow.SelectedSheets.PrintOut From:=3, To:=12, Copies:=1, _
            Collate:=True, IgnorePrintAreas:=False 'Omit Start and Cover
        Else
            ActiveWindow.SelectedSheets.PrintOut From:=2, To:=12, Copies:=1, _
            Collate:=True, IgnorePrintAreas:=False 'Omit Start only
        End If
        
        If Sheets("Start").Visible = True Then
            Sheets("Start").Select
        Else
            Sheets("Cover").Select
        End If
Else
    'do nothing
End If
 
End Sub

Sub UpdateActivePrinter()
'Updates cell beneath print button with name of active printer

Dim MyActivePrinter As String

Worksheets("Start").Activate

ActiveSheet.Unprotect
MyActivePrinter = Application.ActivePrinter
Worksheets("Start").Range("MyActivePrinter") = MyActivePrinter
ActiveSheet.Protect
End Sub


Sub SetLogo()
'Called by ImportILN() to set logo on selected sheets according to the Company

Dim Company As String
Dim CompanyLet As String

Company = Worksheets("Cover").Range("Company")
CompanyLet = Left(Company, 1)

Application.ScreenUpdating = False

If CompanyLet = "A" Then
Worksheets("Start").Activate
Call SetAFFlogo
Worksheets("Cover").Activate
Call SetAFFlogo
Worksheets("INT.LC.SOS").Activate
Call SetAFFlogo
Worksheets("INT.LAE.SOS").Activate
Call SetAFFlogo
'Worksheets("INT.LAE.SOS(FR)").Activate
'Call SetAFFlogo
Worksheets("INT.LC.LET").Activate
Call SetAFFlogo
Worksheets("INT.ALAE.SOS").Activate
Call SetAFFlogo
Worksheets("INT.ACLM.SOS").Activate
Call SetAFFlogo
'Worksheets("INT.ACLM.SOS(FR)").Activate
'Call SetAFFlogo
Worksheets("NA.CLM.SOS").Activate
Call SetAFFlogo
Worksheets("NA.ACLM.SOS").Activate
Call SetAFFlogo
Worksheets("NA.CLM.REC").Activate
Call SetAFFlogo

Worksheets("Start").Activate


Else
Worksheets("Start").Activate
Call SetFMGlogo
Worksheets("Cover").Activate
Call SetFMGlogo
Worksheets("INT.LC.SOS").Activate
Call SetFMGlogo
Worksheets("INT.LAE.SOS").Activate
Call SetFMGlogo
Worksheets("INT.LC.LET").Activate
Call SetFMGlogo
Worksheets("INT.ALAE.SOS").Activate
Call SetFMGlogo
Worksheets("INT.ACLM.SOS").Activate
Call SetFMGlogo
Worksheets("NA.CLM.SOS").Activate
Call SetFMGlogo
Worksheets("NA.ACLM.SOS").Activate
Call SetFMGlogo
Worksheets("Start").Activate

End If

Application.ScreenUpdating = True

End Sub



Sub RemoveGreen(ShapeValue As Integer)
'Changes button border from thick green to narrow black
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.ForeColor.RGB = RGB(0, 0, 0)
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.Weight = 0.25

End Sub



Sub RemoveGreenFormButtons()
'Changes button border from thick green to narrow black on all form buttons
    Call RemoveGreen(20)
    Call RemoveGreen(21)
    Call RemoveGreen(22)
    Call RemoveGreen(23)
    Call RemoveGreen(30)
    Call RemoveGreen(31)
    'Call RemoveGreen(32) remove Int Small Claim
    Call RemoveGreen(33)
    Call RemoveGreen(34)
    Call RemoveGreen(99)
    '[A1].Select

End Sub

Sub RemoveGreenFormButtons2()
'Changes button border from thick green to narrow black on all form buttons
    Call RemoveGreen(20)
    Call RemoveGreen(21)
    Call RemoveGreen(22)
    Call RemoveGreen(23)
    Call RemoveGreen(30)
    Call RemoveGreen(31)
    'Call RemoveGreen(32) remove Int Small Claim
    Call RemoveGreen(33)
    Call RemoveGreen(34)
    Call RemoveGreen(92)
    Call RemoveGreen(99)
    Call RemoveGreen(10)
    Call RemoveGreen(11)
    Call RemoveGreen(12)
    Call RemoveGreen(13)
    '[A1].Select

End Sub


Attribute VB_Name = "Module1"

Public Sub ShowCal()
' Called by all data hot cells
frmCalendar.Show
End Sub




Sub SetAFFlogo()
'Set the logo to Affiliated FM on active sheet. Called by SetLogo()

With ActiveSheet
    .Shapes("Picture 1").Visible = False
    .Shapes("Picture 2").Visible = True
    '.ComboBox1.Value = "Affliated FM"
End With
    
End Sub

Sub SetFMGlogo()
'Set the logo to FM Global on active sheet. Called by SetLogo()

With ActiveSheet
    .Shapes("Picture 1").Visible = True
    .Shapes("Picture 2").Visible = False
    '.ComboBox1.Value = "FM Global"
End With
End Sub


Sub Hide_Selected()
'Hide all worksheets except for Start
'Called by each of the form button subroutines

Dim ws As Worksheet

For Each ws In Worksheets
    If Not ws.Name = "Start" Then ws.Visible = False
Next

End Sub


Attribute VB_Name = "Module2"
Sub UnhideFormButton(ShapeValue As Integer)
   
'Unhides form button and sets narrow black border

    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Visible = True
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.ForeColor.RGB = RGB(0, 0, 0)
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.Weight = 0.25

End Sub


Sub HideFormButton(ShapeValue As Integer)

'Hides form button
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Visible = False

End Sub


'-------------------------------------------------------------------------------
'  The followng procedures make visible the sheets needed for the selected form
'-------------------------------------------------------------------------------


Sub NA_Reg_Forms()

    Call UnhideFormButton(20)
    Call UnhideFormButton(21)
    Call HideFormButton(22)
    Call HideFormButton(23)
    Call HideFormButton(30)
    Call HideFormButton(31)
    'Call HideFormButton(32)
    Call HideFormButton(33)
    Call HideFormButton(34)
        
    [A1].Select

End Sub

Sub NA_Acc_Forms()

    Call HideFormButton(20)
    Call HideFormButton(21)
    Call UnhideFormButton(22)
    Call UnhideFormButton(23)
    Call HideFormButton(30)
    Call HideFormButton(31)
    'Call HideFormButton(32)
    Call HideFormButton(33)
    Call HideFormButton(34)
        
    [A1].Select
End Sub

Sub INT_Reg_Forms()

    Call HideFormButton(20)
    Call HideFormButton(21)
    Call HideFormButton(22)
    Call HideFormButton(23)
    Call UnhideFormButton(30)
    Call UnhideFormButton(31)
    'Call UnhideFormButton(32)
    Call HideFormButton(33)
    Call HideFormButton(34)
        
    [A1].Select

End Sub

Sub INT_Acc_Forms()

    Call HideFormButton(20)
    Call HideFormButton(21)
    Call HideFormButton(22)
    Call HideFormButton(23)
    Call HideFormButton(30)
    Call HideFormButton(31)
    'Call HideFormButton(32)
    Call UnhideFormButton(33)
    Call UnhideFormButton(34)
        
    [A1].Select
End Sub



Sub FormMatrix()
'Decision matrix to determine which form button to hide or unide
'Called by NA_Button, INT_Button, Reg_Button, and Acc_Button

Application.ScreenUpdating = False

LineNA = ActiveSheet.Shapes.Range(Array("Rectangle 10")).Line.Weight
LineINT = ActiveSheet.Shapes.Range(Array("Rectangle 11")).Line.Weight
LineReg = ActiveSheet.Shapes.Range(Array("Rectangle 12")).Line.Weight
LineAcc = ActiveSheet.Shapes.Range(Array("Rectangle 13")).Line.Weight

If LineNA = 0.25 And LineINT = 0.25 Then
    Call Hide_All
ElseIf LineReg = 0.25 And LineAcc = 0.25 Then
    Call Hide_All
ElseIf LineNA = 2.5 And LineINT = 0.25 And LineReg = 2.5 And LineAcc = 0.25 Then
    Call NA_Reg_Forms
ElseIf LineNA = 2.5 And LineINT = 0.25 And LineReg = 0.25 And LineAcc = 2.5 Then
    Call NA_Acc_Forms
ElseIf LineNA = 0.25 And LineINT = 2.5 And LineReg = 2.5 And LineAcc = 0.25 Then
    Call INT_Reg_Forms
ElseIf LineNA = 0.25 And LineINT = 2.5 And LineReg = 0.25 And LineAcc = 2.5 Then
    Call INT_Acc_Forms
End If

Application.ScreenUpdating = False

End Sub


Sub NA_Button()
' Set the North America button active and the International button inactive

Dim ShapeValue As Integer

ShapeValue = 10
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Visible = True
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.ForeColor.RGB = RGB(0, 255, 0)
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.Weight = 2.5

ShapeValue = 11
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Visible = True
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.ForeColor.RGB = RGB(0, 0, 0)
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.Weight = 0.25
    
ActiveSheet.Unprotect
ActiveSheet.Range("PaymentForm") = ""
ActiveSheet.Protect

Call FormMatrix
Call RemoveGreenFormButtons
Call Hide_Selected

End Sub

Sub INT_Button()
' Set the International button active and the NA button inactive
Dim ShapeValue As Integer

ShapeValue = 11
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Visible = True
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.ForeColor.RGB = RGB(0, 255, 0)
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.Weight = 2.5

ShapeValue = 10
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Visible = True
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.ForeColor.RGB = RGB(0, 0, 0)
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.Weight = 0.25
    
ActiveSheet.Unprotect
ActiveSheet.Range("PaymentForm") = ""
ActiveSheet.Protect

Call FormMatrix
Call RemoveGreenFormButtons
Call Hide_Selected

End Sub

Sub Reg_Button()
' Sets the Regular button active and the Accelerated button inactive

Dim ShapeValue As Integer

ShapeValue = 12
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Visible = True
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.ForeColor.RGB = RGB(0, 255, 0)
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.Weight = 2.5

ShapeValue = 13
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Visible = True
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.ForeColor.RGB = RGB(0, 0, 0)
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.Weight = 0.25
    
ActiveSheet.Unprotect
ActiveSheet.Range("PaymentForm") = ""
ActiveSheet.Protect

Call FormMatrix
Call RemoveGreenFormButtons
Call Hide_Selected

End Sub


Sub Acc_Button()
' Sets the Accelerated button active and the Regular button inactive

ShapeValue = 13
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Visible = True
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.ForeColor.RGB = RGB(0, 255, 0)
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.Weight = 2.5

ShapeValue = 12
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Visible = True
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.ForeColor.RGB = RGB(0, 0, 0)
    ActiveSheet.Shapes.Range(Array("Rectangle " & ShapeValue)).Line.Weight = 0.25
    
ActiveSheet.Unprotect
ActiveSheet.Range("PaymentForm") = ""
ActiveSheet.Protect

Call FormMatrix
Call RemoveGreenFormButtons
Call Hide_Selected

End Sub


Sub Hide_All()
'
   
    Call HideFormButton(20)
    Call HideFormButton(21)
    Call HideFormButton(22)
    Call HideFormButton(23)

    Call HideFormButton(30)
    Call HideFormButton(31)
    'Call HideFormButton(32)
    Call HideFormButton(33)
    Call HideFormButton(34)
        
    [A1].Select
  
End Sub
Attribute VB_Name = "Module3"
'----------------------------------------------------------
' Macros assigned for form buttons
'----------------------------------------------------------


Sub NA_LAE_Acc()
'Select North American accelerated LAE form
    
Dim ws As Worksheet
    
Application.ScreenUpdating = False

'Hide all sheets except for start, and hide all rectangles surrounding form buttons
Call Hide_Selected

'Unhide sheets for selected form
Sheets("Cover").Visible = True
Sheets("NA.ALAE.PMT").Visible = True

Sheets("Start").Activate
Sheets("Start").Unprotect
Sheets("Start").Range("PaymentForm") = "North America Accelerated LAE"

Call RemoveGreenFormButtons
ActiveSheet.Shapes.Range(Array("Rectangle " & 22)).Line.ForeColor.RGB = RGB(0, 255, 0)
ActiveSheet.Shapes.Range(Array("Rectangle " & 22)).Line.Weight = 2.5

Sheets("Start").Protect
Application.ScreenUpdating = True

End Sub

Sub NA_Claim_Acc()
'Select  North American accelerated Claim form
    
Dim ws As Worksheet
    
'Application.ScreenUpdating = False

'Hide all sheets except for start, and hide all rectangles surrounding form buttons
Call Hide_Selected

'Unhide sheets for selected form
Sheets("Cover").Visible = True
Sheets("NA.ACLM.PMT").Visible = True
Sheets("NA.ACLM.SOS").Visible = True
If Left([NAACLM_Subrogation], 3) = "Yes" Then Sheets("NA.CLM.REC").Visible = True

Sheets("Start").Activate
Sheets("Start").Unprotect
Sheets("Start").Range("PaymentForm") = "North America Accelerated Claim"

Call RemoveGreenFormButtons
ActiveSheet.Shapes.Range(Array("Rectangle " & 23)).Line.ForeColor.RGB = RGB(0, 255, 0)
ActiveSheet.Shapes.Range(Array("Rectangle " & 23)).Line.Weight = 2.5

Sheets("Start").Protect
'Application.ScreenUpdating = True


End Sub


Sub INT_LAE_Acc()
'Select International accelerated LAE form
    
Dim ws As Worksheet
    
Application.ScreenUpdating = False

'Hide all sheets except for start, and hide all rectangles surrounding form buttons
Call Hide_Selected

'Unhide sheets for selected form
Sheets("Cover").Visible = True
Sheets("INT.ALAE.PMT").Visible = True
Sheets("INT.ALAE.SOS").Visible = True
Sheets("INT.LAE.VAT").Visible = True

Sheets("Start").Activate
Sheets("Start").Unprotect
Sheets("Start").Range("PaymentForm") = "International Accelerated LAE"

Call RemoveGreenFormButtons
ActiveSheet.Shapes.Range(Array("Rectangle " & 33)).Line.ForeColor.RGB = RGB(0, 255, 0)
ActiveSheet.Shapes.Range(Array("Rectangle " & 33)).Line.Weight = 2.5

Sheets("Start").Protect
Application.ScreenUpdating = True

End Sub

Sub INT_Claim_Acc()
'Select International accelerated Claim form
    
Dim ws As Worksheet
    
Application.ScreenUpdating = False

'Hide all sheets except for start, and hide all rectangles surrounding form buttons
Call Hide_Selected

'Unhide sheets for selected form
Sheets("Cover").Visible = True
Sheets("INT.ACLM.PMT").Visible = True
Sheets("INT.ACLM.SOS").Visible = True

Sheets("Start").Activate
Sheets("Start").Unprotect
Sheets("Start").Range("PaymentForm") = "International Accelerated Claim"

Call RemoveGreenFormButtons
ActiveSheet.Shapes.Range(Array("Rectangle " & 34)).Line.ForeColor.RGB = RGB(0, 255, 0)
ActiveSheet.Shapes.Range(Array("Rectangle " & 34)).Line.Weight = 2.5

Sheets("Start").Protect
Application.ScreenUpdating = True

End Sub


Public Sub INT_LAE()
'Select International LAE form
    
Dim ws As Worksheet
    
Application.ScreenUpdating = False

'Hide all sheets except for start, and hide all rectangles surrounding form buttons
Call Hide_Selected

'Unhide sheets for selected form
Sheets("Cover").Visible = True
Sheets("INT.LAE.PMT").Visible = True
Sheets("INT.LAE.VAT").Visible = True
Sheets("INT.LAE.SOS").Visible = True

Sheets("Start").Activate
Sheets("Start").Unprotect
Sheets("Start").Range("PaymentForm") = "International LAE"

Call RemoveGreenFormButtons
ActiveSheet.Shapes.Range(Array("Rectangle " & 30)).Line.ForeColor.RGB = RGB(0, 255, 0)
ActiveSheet.Shapes.Range(Array("Rectangle " & 30)).Line.Weight = 2.5

Sheets("Start").Protect
Application.ScreenUpdating = True

End Sub





Sub INT_LC()
'Select International Large Claim form
    
Dim ws As Worksheet
    
Application.ScreenUpdating = False

Call Hide_Selected

Sheets("Cover").Visible = True
Sheets("INT.LC.PMT").Visible = True
Sheets("INT.LC.SOS").Visible = True
Sheets("INT.LC.LET").Visible = True
Sheets("INT.LC.LOG").Visible = True

Sheets("Start").Activate
Sheets("Start").Unprotect
Sheets("Start").Range("PaymentForm") = "International Large Claim"

Call RemoveGreenFormButtons
ActiveSheet.Shapes.Range(Array("Rectangle " & 31)).Line.ForeColor.RGB = RGB(0, 255, 0)
ActiveSheet.Shapes.Range(Array("Rectangle " & 31)).Line.Weight = 2.5

Sheets("Start").Protect
Application.ScreenUpdating = True
End Sub

Sub NA_LAE()
'Select NA LAE forms
    
Dim ws As Worksheet
Dim wsSheet As Worksheet

Application.ScreenUpdating = False

'Hide all sheets except for start, and hide all rectangles surrounding form buttons
Call Hide_Selected

'Unhide sheets for selected form
Sheets("Cover").Visible = True
Sheets("NA.LAE.PMT").Visible = True
For Each wsSheet In ActiveWorkbook.Worksheets 'unhide multiple LAE payment forms, if any
    If Left(wsSheet.Name, 6) = "NA.LAE" Then wsSheet.Visible = xlSheetVisible
Next wsSheet

Sheets("Start").Activate
Sheets("Start").Unprotect
Sheets("Start").Range("PaymentForm") = "North America LAE"

Call RemoveGreenFormButtons
ActiveSheet.Shapes.Range(Array("Rectangle " & 20)).Line.ForeColor.RGB = RGB(0, 255, 0)
ActiveSheet.Shapes.Range(Array("Rectangle " & 20)).Line.Weight = 2.5
Sheets("Start").Protect
Application.ScreenUpdating = True

End Sub


Sub NA_Claim()
'Select North America Claim form
Dim ws As Worksheet
    
Application.ScreenUpdating = False

Call Hide_Selected

Sheets("Cover").Visible = True
Sheets("NA.CLM.PMT").Visible = True
Sheets("NA.CLM.SOS").Visible = True
Sheets("NA.CLM.CTA").Visible = True
If Sheets("NA.CLM.PMT").Rows("32:38").Hidden = True Then Sheets("NA.CLM.DET").Visible = True
If Left([NACLM_Subrogation], 3) = "Yes" Then Sheets("NA.CLM.REC").Visible = True
Sheets("Start").Activate

Sheets("Start").Unprotect
Sheets("Start").Range("PaymentForm") = "North America Claim Payment"

Call RemoveGreenFormButtons
ActiveSheet.Shapes.Range(Array("Rectangle " & 21)).Line.ForeColor.RGB = RGB(0, 255, 0)
ActiveSheet.Shapes.Range(Array("Rectangle " & 21)).Line.Weight = 2.5
Sheets("Start").Protect
Application.ScreenUpdating = True
End Sub


Sub UserGuide()
'Select the User Guid page
    
Dim ws As Worksheet
    
Application.ScreenUpdating = False

'Hide all sheets except for start, and hide all rectangles surrounding form buttons
Call Hide_Selected

'Unhide sheets for selected form
Sheets("UserGuide").Visible = True

Sheets("Start").Activate
Sheets("Start").Unprotect
Sheets("Start").Range("PaymentForm") = "UserGuide"

Call RemoveGreenFormButtons2
ActiveSheet.Shapes.Range(Array("Rectangle " & 99)).Line.ForeColor.RGB = RGB(0, 255, 0)
ActiveSheet.Shapes.Range(Array("Rectangle " & 99)).Line.Weight = 2.5

Sheets("Start").Protect
Sheets("UserGuide").Activate
Application.ScreenUpdating = True

End Sub


Sub EmailRegClaim()
     
Dim OutApp As Object
Dim OutMail As Object

Worksheets("Start").Visible = False
Worksheets("Cover").Activate
ThisWorkbook.Save

Set OutApp = CreateObject("Outlook.Application")
OutApp.Session.Logon
Set OutMail = OutApp.CreateItem(0)

On Error Resume Next
    
    
With Worksheets("Data.1")
    MyTo = .Range("ClaimTo")
    Mycc = .Range("ClaimCC")
    MySubject = .Range("ClaimSubject")
End With

With Worksheets("Cover")
    line1 = [ClientName]
    line2 = [City] & ", " & [StateProvince]
    line3 = "Date of Loss: " & Format([DateOfLoss], "d-mmm-yyyy")
    line4 = "ClaimID: " & [ClaimID]
End With
   
With OutMail
    .To = MyTo
    .CC = Mycc
    .Subject = MySubject
    .Body = "-- Claim For Payment form attached --" & vbNewLine & vbNewLine & line1 & vbNewLine & line2 & vbNewLine & line3 & vbNewLine & line4
    .Attachments.Add ActiveWorkbook.FullName
    .Display
End With

'AppActivate (OutMail)

Worksheets("Start").Visible = True
Worksheets("NA.CLM.PMT").Activate
ThisWorkbook.Save

Set OutMail = Nothing
Set OutApp = Nothing

End Sub


Sub EmailNARegLAE()
     
Dim OutApp As Object
Dim OutMail As Object
Dim ws As Worksheet
Dim v As Integer

'Check how many sheets are visible
    For Each s In ActiveWorkbook.Sheets
        If s.Visible Then v = v + 1
    Next s

If v > 3 Then 'More than one LAE sheet is visible

    comment1 = "You have multiple LAEs visible, but you can only send one for payment at a time." & _
    Chr(10) & Chr(10) & "Please manually hide the LAE sheets not intended for payment and try again." & _
    Chr(10) & Chr(10) & "(Tip: To hide a worksheet right-click on worksheet tab and select 'Hide.' " & _
    "To unhide all LAE worksheets you created click the 'Show all LAEs' macro button. Also, don't hide worksheets, " & _
    "'Start' or 'Cover.')"

    msg1 = MsgBox(comment1, vbOK + vbExclamation)
    Exit Sub
End If


'Hide all sheets except for Cover and selected LAE payment form
ThisSheet = ActiveSheet.Name
For Each ws In Worksheets
    If Not ws.Name = ThisSheet Then ws.Visible = False
Next

'Unhide sheets for selected form
Sheets("Cover").Visible = True
Sheets(ThisSheet).Visible = True
ThisWorkbook.Save

Set OutApp = CreateObject("Outlook.Application")
OutApp.Session.Logon
Set OutMail = OutApp.CreateItem(0)

On Error Resume Next
       
With Worksheets("Data.1")
    MyTo = .Range("LAETo")
    Mycc = .Range("LAECC")
    MySubject = .Range("LAESubject")
End With

With Worksheets("Cover")
    line0 = "Consultant/Pay To: " & Sheets(ThisSheet).Range("C9")
    line1 = [ClientName]
    line2 = [City] & ", " & [StateProvince]
    line3 = "Date of Loss: " & Format([DateOfLoss], "d-mmm-yyyy")
    line4 = "ClaimID: " & [ClaimID]
End With
   
With OutMail
    .To = MyTo
    .CC = Mycc
    .Subject = MySubject
    .Body = "-- LAE For Payment attached --" & vbNewLine & vbNewLine & line0 & vbNewLine _
        & vbNewLine & line1 & vbNewLine & line2 & vbNewLine & line3 & vbNewLine & line4
    .Attachments.Add ActiveWorkbook.FullName
    .Display
End With

Worksheets("Start").Visible = True
Worksheets("Cover").Activate

'AppActivate (OutMail)

Worksheets("Start").Visible = True
Worksheets("NA.LAE.PMT").Activate
ThisWorkbook.Save

Set OutMail = Nothing
Set OutApp = Nothing

End Sub

Sub Unhide_AllNALAEs()

Dim ws As Worksheet
Dim wsSheet As Worksheet

Application.ScreenUpdating = False

ThisSheet = ActiveSheet.Name

'Unhide all LAEs
Sheets("Cover").Visible = True
Sheets("NA.LAE.PMT").Visible = True
For Each wsSheet In ActiveWorkbook.Worksheets 'unhide multiple LAE payment forms, if any
    If Left(wsSheet.Name, 6) = "NA.LAE" Then wsSheet.Visible = xlSheetVisible
Next wsSheet

Sheets(ThisSheet).Activate

End Sub



Attribute VB_Name = "Module4"
Function CHARW(CharCode As Variant, Optional Exact_functionality As Boolean = False) As String

    CharCode = CLng(CharCode)
 
   If CharCode < 256 Then
       If Exact_functionality Then
          CHARW = ChrW(CharCode)
       Else
          CHARW = Chr(CharCode)
       End If
    Else
       CHARW = ChrW(CharCode)
    End If
 
 End Function

Function SPACES(CharCode As Variant) As String

    SPACES = SPACE(CharCode)

End Function
 
 
 
Sub Start()
'
' Start Macro - to unhide hidden Start tab
'
' Keyboard Shortcut: Ctrl+s
'
    Sheets("Start").Visible = True
End Sub


Sub UnhideAllSheets()
    Dim ws As Worksheet
 
    For Each ws In ActiveWorkbook.Worksheets
        ws.Visible = xlSheetVisible
    Next ws
 
End Sub
 
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ComboBox3, 12, 0, MSForms, ComboBox"
Attribute VB_Control = "TextBox1, 11, 1, MSForms, TextBox"
Attribute VB_Control = "ComboBox2, 10, 2, MSForms, ComboBox"
Attribute VB_Control = "ComboBox1, 9, 3, MSForms, ComboBox"
Attribute VB_Control = "Label1, 14, 4, MSForms, Label"
'=====================================================================
' On activation sets SOS wording and hides/unhides location name row
'=====================================================================

Private Sub Label1_Click()

End Sub

Private Sub Worksheet_Activate()

[IntLC_Amount] = Format([IntLC_Total], "#,##0")

'Hide blank row if there is no local name
If Worksheets("Cover").Range("LocationName") = "" Then
    Rows("20").EntireRow.Hidden = True
Else
    Rows("20").EntireRow.Hidden = False
End If
    
End Sub

'=====================================================================
' Sets SOS wording based on payment method and payee type
'=====================================================================
Sub SetWordingLC() 'Called by macro button

PaymentMethod = [bbPaymentMethod]
PayeeType = [bbPayeeType]

If PaymentMethod = "" Or PayeeType = "" Then
    MsgBox "Please complete Payment Method and Payee Type on INT.LC.PMT page."
    GoTo exit_here
End If

    If PaymentMethod = "Cheque" And PayeeType = "Insured" Then
        ComboBox3.Value = "Cheque to Insured"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "Broker" Then
        ComboBox3.Value = "Cheque to Broker or other"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Cheque to World-Reach Partner"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Insured" Then
        ComboBox3.Value = "Bank Transfer to Insured"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Broker" Then
        ComboBox3.Value = "Bank Transfer to Broker or other"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bank Transfer to World-Reach Partner"
    ElseIf PaymentMethod = "Bordereau" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bordereau to World-Reach Partner"
    ElseIf PaymentMethod = "Cheque" Then
        ComboBox3.Value = "Cheque to Broker or other"
    ElseIf PaymentMethod = "Bank Transfer" Then
        ComboBox3.Value = "Bank Transfer to Broker or other"
    Else
        ComboBox3.Value = "[Select sample text]"
        MsgBox "Please manually select appropriate wording."
End If

'Insert text into body of statement
Call ComboBox3_DropButtonClick

exit_here:
End Sub



'===============================================================
' Drop Down to toggle between FM Global / Affiliated FM logos
'=============================================================== done

Private Sub ComboBox1_DropButtonClick()

Select Case ComboBox1.Value
    
    Case "[Select logo]"
        'do nothing
    Case "none"
        Shapes("Picture 1").Visible = False
        Shapes("Picture 2").Visible = False
    Case "FM Global"
        Shapes("Picture 1").Visible = True
        Shapes("Picture 2").Visible = False
    Case "AFM"
        Shapes("Picture 1").Visible = False
        Shapes("Picture 2").Visible = True
    End Select

End Sub


'===============================================================
' ComboBox control to select Claims office
'=============================================================== done

Private Sub ComboBox2_Change()

Dim AddressBlock As String

If ComboBox2.Value = "[Select office]" Then
    GoTo exit01

ElseIf ComboBox2.Value = "none" Then
    AddressBlock = ""

Else
    AddressBlock = [AP2] & vbNewLine & [AP3] & vbNewLine & [AP4] & vbNewLine & [AP5] & _
        vbNewLine & [AP6] & vbNewLine & [AP7] & vbNewLine & [AP8] & vbNewLine & [AP9] & _
        vbNewLine & [AP10] & vbNewLine & [AP11]
End If
  
Worksheets("INT.LC.LET").TextBox1.Text = AddressBlock

exit01:

End Sub


'===============================================================
' ComboBox control to select sample text.
'=============================================================== wip
Private Sub ComboBox3_DropButtonClick()

Application.ScreenUpdating = False

If ComboBox3.Value = "[Select sample text]" Then
    [BodyText1] = ""
    [BodyText2] = ""
Else

    [BodyText1] = WorksheetFunction.VLookup([WordingLC], Worksheets("Data.1").Range("WordingTable2"), 2, False)

    'Default second paragraph wording
    [BodyText2] = [LCParagraph21]

    'Exceptions:
    If InStr([WordingLC], "World") <> 0 Then [BodyText2] = [LCParagraph22]
    If InStr([WordingLC], "Broker") <> 0 Then [BodyText2] = [LCParagraph23]
    If [bbPaymentType] = "Advance" And [bbPayeeType] = "World-Reach Partner" Then [BodyText2] = ""

End If

Application.ScreenUpdating = True
    
End Sub



'=====================================================================
' Makes office worksheet visible for editing
'=====================================================================

Sub EditOffices()

Sheets("Offices").Visible = True
Sheets("Offices").Activate
Sheets("Offices").Range("C3").Select
End Sub

'=====================================================================
' Returns user to previous form
'=====================================================================

Sub ReturnFromOffices()

Sheets("Offices").Visible = False
Sheets("Start").Activate
Sheets("Start").Range("A1").Select
End Sub







Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'=====================================================================
' Completes form when there is one check only
'=====================================================================

Sub OneCheckAutocomplete()
'Autocomplete Check 1 column on NA.CLM.CTA

Dim msg1 As String

    If WorksheetFunction.Sum(Range("E7:e54")) = 0 Then
        Application.ScreenUpdating = False
        Range("E7").Select
        Do
            If ActiveCell.Offset(0, -1) > 0 And ActiveCell.Offset(0, -2) <> "TOTALS:" Then
            ActiveCell.FormulaR1C1 = "=+RC[-1]"
            End If
            ActiveCell.Offset(1, 0).Select 'select next cell below
        Loop Until IsEmpty(ActiveCell.Offset(0, -1))
        Range("E7").Select
        Application.ScreenUpdating = True
    Else
        Range("E7").Select
    End If
    
End Sub

'=====================================================================
' Clear data from form
'=====================================================================
Sub ClearCheckAmounts()

Dim msg1 As String

Range("E7:G54").Select
        msg1 = MsgBox("Clear check amount columns? ", vbYesNo, "Clear data?")
        If msg1 = vbYes Then
            Range("E7:G54").ClearContents
            Range("E7").Select
         Else
            Range("E7").Select
            'do nothing
        End If

End Sub
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Label1, 11, 0, MSForms, Label"
Attribute VB_Control = "CheckBox1, 13, 1, MSForms, CheckBox"





'=====================================================================
' Create additional LAE payment forms
'=====================================================================
Sub InsertLAESheet()
'Insert new LAE sheet for multiple consultants

Dim NewLAE As String
Dim SheetCount As Integer
Dim Sheet1 As String

Sheet1 = ActiveSheet.Name

Application.ScreenUpdating = False
ActiveSheet.Unprotect

SheetCount = ActiveWorkbook.Sheets.Count

Sheets("NA.LAE.PMT").Select
Sheets("NA.LAE.PMT").Copy After:=Sheets(SheetCount)

NewLAE = ActiveSheet.Name

'Clear data
Call ClearLAEData
ActiveSheet.Protect

Worksheets("NA.LAE.PMT").Protect

Application.ScreenUpdating = True

End Sub

Private Sub CheckBox1_Click() 'Pay 100%

ActiveSheet.Unprotect

If CheckBox1.Value = True Then
    If Worksheets("Cover").Range("FM_Percent") = "1" Then
        MsgBox "FM's participation is already 100%"
        CheckBox1.Value = False
        CheckBox1.PrintObject = False
        End
    End If
    [A36] = "Total Payment (100%):"
    [$D$36:$E$36] = "=IF(C28="""","""",VLOOKUP(C28,H39:J50,3,0))"
    CheckBox1.PrintObject = True
Else
    [A36] = "=""Total Payment ("" & FM_Percent * 100 & ""%):"""
    [$D$36:$E$36] = "=IF(C28="""","""",VLOOKUP(C28,H39:J50,3,0)*FM_Percent)"
    CheckBox1.PrintObject = False
End If

ActiveSheet.Protect

End Sub

'=====================================================================
' Set date hot cells
'=====================================================================

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
' Show calendar when date cell is selected

    If Target.Address = "$F$39" Then
        [$D$39:$E$39] = [$D$36:$E$36].Value
        [$D$40:$E$40] = 0
    End If
    
    If Target.Address = "$F$40" Then
        [$D$40:$E$40] = [$D$36:$E$36].Value
        [$D$39:$E$39] = 0
    End If
    
    If Target.Address = "$F$28" Then [$C$28:$E$28] = "=IF(MAX(H39:H50)=0,"""",MAX(H39:H50))"
    If Target.Address = "$F$36" And CheckBox1.Value = False Then [$D$36:$E$36] = "=IF(C28="""","""",VLOOKUP(C28,H39:J50,3,0)*FM_Percent)"
    If Target.Address = "$F$36" And CheckBox1.Value = True Then [$D$36:$E$36] = "=IF(C28="""","""",VLOOKUP(C28,H39:J50,3,0))"
        
    If Target.Address = "$H$37" Then Call ShowCal
    If Target.Address = "$H$39" Then Call ShowCal
    If Target.Address = "$H$40" Then Call ShowCal
    If Target.Address = "$H$41" Then Call ShowCal
    If Target.Address = "$H$42" Then Call ShowCal
    If Target.Address = "$H$43" Then Call ShowCal
    If Target.Address = "$H$44" Then Call ShowCal
    If Target.Address = "$H$45" Then Call ShowCal
    If Target.Address = "$H$46" Then Call ShowCal
    If Target.Address = "$H$47" Then Call ShowCal
    If Target.Address = "$H$48" Then Call ShowCal
    If Target.Address = "$H$49" Then Call ShowCal
    If Target.Address = "$H$50" Then Call ShowCal

End Sub

'=====================================================================
' Clear cells of new LAE payment form
'=====================================================================

Sub ClearLAEData()

With ActiveSheet

.[C9:J9].ClearContents
.[C10:E10].ClearContents
.[C11:G11].ClearContents
.[C12:G12].ClearContents
.[C13:G13].ClearContents
.[C14:G14].ClearContents
.[C15:G15].ClearContents
.[C16:G16].ClearContents

.[C19:E19].ClearContents
.[C20:G20].ClearContents
.[C21:G21].ClearContents
.[C22:G22].ClearContents
.[C23:G23].ClearContents
.[C24:G24].ClearContents


.[C26:E26].ClearContents
.[C27:E27].ClearContents
.[C28:E28].ClearContents '
.[C29:E29].ClearContents
.[C30:E30].ClearContents

.[C32:E32] = "=LossAdjuster"

.[D36:E36].ClearContents '

.[D39:E39].ClearContents
.[D40:E40].ClearContents

.[H37] = ""
.[H39] = ""
.[H40] = ""
.[H41] = ""
.[H41] = ""
.[H42] = ""
.[H43] = ""
.[H44] = ""
.[H45] = ""
.[H46] = ""
.[H47] = ""
.[H48] = ""
.[H49] = ""
.[H50] = ""


.[J37] = ""

.[J39] = ""
.[J40] = ""
.[J41] = ""
.[J42] = ""
.[J43] = ""
.[J44] = ""
.[J45] = ""
.[J46] = ""
.[J47] = ""
.[J48] = ""
.[J49] = ""
.[J50] = ""

End With

End Sub

Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CheckBox1, 1, 0, MSForms, CheckBox"

Private Sub CheckBox1_Click()
'Pay 100% checkbox

Application.ScreenUpdating = False
ActiveSheet.Unprotect

If CheckBox1 = True Then 'User checked "Pay 100%"

    If Worksheets("Cover").Range("FM_Percent") = "1" Then
        MsgBox "Unnecessary, as FM's participation is already 100%"
        CheckBox1.Value = False
        End
    Else 'Pay 100%
        [C61] = "=IF($G$49=0,"""",PolicyCurrCode&TEXT(IF(ISNUMBER(C52),C52/FM_Percent,0)+IF(ISNUMBER(C56),C56/FM_Percent,0)+IF(ISNUMBER(C60),C60/FM_Percent,0),"" #,##0.00""))"
        [A61] = "=""Total Payment (100%)"""
        
        'Update SOS
        With Worksheets("NA.ACLM.SOS")
            .Unprotect
            .Range("L14") = "=+E23"
            .Range("P14") = "<|fffd| Paying 100%"
            .Protect
        End With
    End If
    
Else 'Pay regular FM percent participation
        [C61] = "=IF($G$49=0,"""",PolicyCurrCode&TEXT(IF(ISNUMBER(C52),C52,0)+IF(ISNUMBER(C56),C56,0)+IF(ISNUMBER(C60),C60,0),"" #,##0.00""))"
        [A61] = "=""Total Payment""&IF(FM_Percent<1,"" (""&FM_Percent*100&""%)"","""")"
        
        'Update SOS
        With Worksheets("NA.ACLM.SOS")
            .Unprotect
            .Range("L14") = "=+E23*FM_Percent"
            .Range("P14") = ""
            .Protect
    End With
End If

ActiveSheet.Protect
Application.ScreenUpdating = False

End Sub



Private Sub Worksheet_SelectionChange(ByVal Target As Range)  '!!!must update if new rows added

'If range C26:D26 is selected just move to next row
If Target.Address = "$C$26:$D$26" Then Range("$C$27:$D$27").Select

End Sub



Private Sub Worksheet_Change(ByVal Target As Range) 'Update PMT sheet and SOS

    Dim KeyCells As Range

    ' The variable KeyCells contains the cells that will
    ' cause an alert when they are changed.
    
    'Add Subro Receipt Form is Subrogation - Yes is selected
    Set KeyCells = [NAACLM_Subrogation]
    
    If Not Application.Intersect(KeyCells, Range(Target.Address)) _
           Is Nothing Then
        If [NAACLM_Subrogation] = "Yes - Obtain Subro Receipt" Then
           Sheets("NA.CLM.REC").Visible = True
           MsgBox "Subrogation Receipt added"
        ElseIf [NAACLM_Subrogation] = "Yes - Obtain Loan Receipt" Then
           Sheets("NA.CLM.REC").Visible = True
           MsgBox "Loan Receipt added"
        Else
           Sheets("NA.CLM.REC").Visible = False
        End If
    End If
    
     
    'Hide or Unhide Salvage Comments Row
    Set KeyCells = [NAACLM_Salvage]
        If Not Application.Intersect(KeyCells, Range(Target.Address)) _
           Is Nothing Then
        If Left([NAACLM_Salvage], 3) = "Yes" Then
           [NAACLM_SalvageComments].EntireRow.Hidden = False
           Call AutosizeSalvageComments
        Else
        [NAACLM_SalvageComments].EntireRow.Hidden = True
        End If
    End If
    
    'Autosize Salvage Comments after entering text
    Set KeyCells = [NAACLM_SalvageComments]
        If Not Application.Intersect(KeyCells, Range(Target.Address)) _
           Is Nothing Then Call AutosizeSalvageComments
    
     'Autosize Notes field after entering text
     Set KeyCells = [NACCLM_Notes]
    
     If Not Application.Intersect(KeyCells, Range(Target.Address)) _
           Is Nothing Then Call AutosizeNotes
           
 '!!!must update if new rows added
 
If Not Intersect(Range("$C$17:$D$17"), Target) Is Nothing Then ShowHideDeductible
If Not Intersect(Range("$C$22:$D$22"), Target) Is Nothing Then ShowHidePrevPayments

If Not Intersect(Range("$C$63:$D$63"), Target) Is Nothing Then AutosizePayee

If Not Intersect(Range("$C$27:$D$27"), Target) Is Nothing Then PaymentTotals_ItemsShow
If Not Intersect(Range("$C$28:$D$28"), Target) Is Nothing Then PaymentTotals_ItemsShow

If Not Intersect(Range("$C$30:$D$30"), Target) Is Nothing Then PaymentTotals_ItemsShow
If Not Intersect(Range("$C$31:$D$31"), Target) Is Nothing Then PaymentTotals_ItemsShow

If Not Intersect(Range("$C$33:$D$33"), Target) Is Nothing Then PaymentTotals_ItemsShow
If Not Intersect(Range("$C$34:$D$34"), Target) Is Nothing Then PaymentTotals_ItemsShow

If Not Intersect(Range("$C$36:$D$36"), Target) Is Nothing Then PaymentTotals_ItemsShow
If Not Intersect(Range("$C$37:$D$37"), Target) Is Nothing Then PaymentTotals_ItemsShow

If Not Intersect(Range("$C$39:$D$39"), Target) Is Nothing Then PaymentTotals_ItemsShow
If Not Intersect(Range("$C$40:$D$40"), Target) Is Nothing Then PaymentTotals_ItemsShow

If Not Intersect(Range("$C$42:$D$42"), Target) Is Nothing Then PaymentTotals_ItemsShow
If Not Intersect(Range("$C$43:$D$43"), Target) Is Nothing Then PaymentTotals_ItemsShow
    
    
End Sub

Sub PaymentTotals_ItemsShow()

'Consolodate two subroutines into one for more compact code
Call PaymentTotals
Call ItemsShow

End Sub

Sub ItemsClear()   '!!!must update if new rows added
 
msg1 = MsgBox("This will clear Previous Payments and Claim Detail." & vbNewLine & vbNewLine & _
    "Do you wish to continue?", vbYesNo, Question)
    If msg1 = vbNo Then GoTo exit0

On Error Resume Next
Application.ScreenUpdating = False

[NAACLM_PrevPD] = ""
[NAACLM_PrevTE] = ""
[NAACLM_PrevEE] = ""

Range("C27:D27").Select
Selection.ClearContents
Range("C28:D28").Select
Selection.ClearContents

Range("C30:D30").Select
Selection.ClearContents
Range("C31:D31").Select
Selection.ClearContents

Range("C33:D33").Select
Selection.ClearContents
Range("C34:D34").Select
Selection.ClearContents

Range("C36:D36").Select
Selection.ClearContents
Range("C37:D37").Select
Selection.ClearContents

Range("C39:D39").Select
Selection.ClearContents
Range("C40:D40").Select
Selection.ClearContents

Range("C42:D42").Select
Selection.ClearContents
Range("C43:D43").Select
Selection.ClearContents

Range("C45:D45").Select
Selection.ClearContents
Range("C46:D46").Select
Selection.ClearContents

Range("D52:D52") = "[Select Payment Type]"
Range("D56:D56") = "[Select Payment Type]"
Range("D60:D60") = "[Select Payment Type]"

Call ItemsHide
Range("C27:D27").Select

Application.ScreenUpdating = True

exit0:

End Sub

Sub ItemsHide()
If [Item7].EntireRow.Hidden = False Then
    If [Item7Amount] = vbNullString Then [Item7].EntireRow.Hidden = True
    [Item6Amount].Select
End If
If [Item6].EntireRow.Hidden = False Then
    If [Item6Amount] = vbNullString Then [Item6].EntireRow.Hidden = True
    [Item5Amount].Select
End If
If [Item5].EntireRow.Hidden = False Then
    If [Item5Amount] = vbNullString Then [Item5].EntireRow.Hidden = True
    [Item4Amount].Select
End If
If [Item4].EntireRow.Hidden = False Then
    If [Item4Amount] = vbNullString Then [Item4].EntireRow.Hidden = True
    [Item3Amount].Select
End If
If [Item3].EntireRow.Hidden = False Then
    If [Item3Amount] = vbNullString Then [Item3].EntireRow.Hidden = True
    [Item2Amount].Select
End If
If [Item2].EntireRow.Hidden = False Then
    If [Item2Amount] = vbNullString Then [Item2].EntireRow.Hidden = True
    [Item1Amount].Select
End If

End Sub
Sub ItemsShow()

If [Item2].EntireRow.Hidden = True And [Item1Amount] <> "" And [Item1CovCode] <> "" Then
    [Item2].EntireRow.Hidden = False
    [Item2Amount].Select
    Exit Sub
ElseIf [Item3].EntireRow.Hidden = True And [Item2Amount] <> "" And [Item2CovCode] <> "" Then
    [Item3].EntireRow.Hidden = False
    [Item3Amount].Select
    Exit Sub
ElseIf [Item4].EntireRow.Hidden = True And [Item3Amount] <> "" And [Item3CovCode] <> "" Then
    [Item4].EntireRow.Hidden = False
    [Item4Amount].Select
    Exit Sub
ElseIf [Item5].EntireRow.Hidden = True And [Item4Amount] <> "" And [Item4CovCode] <> "" Then
    [Item5].EntireRow.Hidden = False
    [Item5Amount].Select
    Exit Sub
ElseIf [Item6].EntireRow.Hidden = True And [Item5Amount] <> "" And [Item5CovCode] <> "" Then
    [Item6].EntireRow.Hidden = False
    [Item6Amount].Select
    Exit Sub
ElseIf [Item7].EntireRow.Hidden = True And [Item6Amount] <> "" And [Item6CovCode] <> "" Then
    [Item7].EntireRow.Hidden = False
    [Item7Amount].Select
    Exit Sub
End If

End Sub

Sub ShowHideDeductible()

ActiveSheet.Unprotect

If [NAACLM_DedType] = "Combined" Then
    [NAACLM_DedSepPD] = ""
    [NAACLM_DedSepTE] = ""
    [NAACLM_DedTaken] = ""
    [NAACLM_DedSepPD].EntireRow.Hidden = True
    [NAACLM_DedSepTE].EntireRow.Hidden = True
    [NAACLM_DedTaken].EntireRow.Hidden = True
    [NAACLM_DedCombined].EntireRow.Hidden = False
    [NAACLM_DedCombined].Select

ElseIf [NAACLM_DedType] = "Separate" Then
    [NAACLM_DedCombined] = ""
    [NAACLM_DedTaken] = ""
    [NAACLM_DedCombined].EntireRow.Hidden = True
    [NAACLM_DedTaken].EntireRow.Hidden = True
    [NAACLM_DedSepPD].EntireRow.Hidden = False
    [NAACLM_DedSepTE].EntireRow.Hidden = False
    [NAACLM_DedSepPD].Select
    
ElseIf [NAACLM_DedType] = "Occurance" Then
    [NAACLM_DedCombined] = ""
    [NAACLM_DedSepPD] = ""
    [NAACLM_DedSepTE] = ""
    [NAACLM_DedCombined].EntireRow.Hidden = True
    [NAACLM_DedSepPD].EntireRow.Hidden = True
    [NAACLM_DedSepTE].EntireRow.Hidden = True
    [NAACLM_DedTaken].EntireRow.Hidden = False
    [NAACLM_DedTaken].Select
Else
    [NAACLM_DedSepPD] = ""
    [NAACLM_DedSepTE] = ""
    [NAACLM_DedCombined] = ""
    [NAACLM_DedTaken] = ""
    [NAACLM_DedSepPD].EntireRow.Hidden = True
    [NAACLM_DedSepTE].EntireRow.Hidden = True
    [NAACLM_DedCombined].EntireRow.Hidden = True
    [NAACLM_DedTaken].EntireRow.Hidden = True
    [NAACLM_DedType].Select
End If

ActiveSheet.Protect

End Sub

Sub ShowHidePrevPayments() ' !!!must update if new rows added

ActiveSheet.Unprotect

If [NAACLM_PrevPayments] = "Yes" Then
    Rows("23:25").EntireRow.Hidden = False
    [NAACLM_PrevPD].Select
Else
    Rows("23:25").EntireRow.Hidden = True
    [NAACLM_PrevPD] = ""
    [NAACLM_PrevTE] = ""
    [NAACLM_PrevEE] = ""
    [Item1Amount].Select
End If

ActiveSheet.Protect

End Sub


Sub AutosizeSalvageComments()  ' !!!must update if new rows added
'Autosize salave comments. This is required due to a bug in Excel which prevents text in merged cell from auto wrapping
'Called by Worksheet_Change

Dim MyActiveCell As String

MyActiveCell = ActiveCell.Address

Application.ScreenUpdating = False
   
    ActiveSheet.Unprotect
    [NAACLM_SalvageComments].Select
    Selection.UnMerge
    [NAACLM_SalvageComments].EntireRow.AutoFit
    Selection.Merge
    [NAACLM_SalvageComments].RowHeight = WorksheetFunction.Max((Rows("68:68").RowHeight * 0.7), 15) 'Use an arbitrary factor of 0.5 to 0.7 to reduce the row height after merging
    ActiveSheet.Protect
    
Application.ScreenUpdating = True

Range(MyActiveCell).Select

End Sub


Sub AutosizeNotes()  ' !!!must update if new rows added
'Autosize notes. This is required due to a bug in Excel which prevents text in merged cell from auto wrapping
'Called by Worksheet_Change

Dim MyActiveCell As String

MyActiveCell = ActiveCell.Address

Application.ScreenUpdating = False

    ActiveSheet.Unprotect
    [NACCLM_Notes].Select
    Selection.UnMerge
    [NACCLM_Notes].EntireRow.AutoFit
    Selection.Merge
    [NACCLM_Notes].RowHeight = WorksheetFunction.Max((Rows("82:82").RowHeight * 0.7), 15) 'Use an arbitrary factor of 0.5 to 0.7 to reduce the row height after merging
    ActiveSheet.Protect
    
Application.ScreenUpdating = True

Range(MyActiveCell).Select

End Sub

Sub AutosizePayee()  ' !!!must update if new rows added

'Autosize notes. This is required due to a bug in Excel which prevents text in merged cell from auto wrapping
'Called by Worksheet_Change

Dim MyActiveCell As String

MyActiveCell = ActiveCell.Address

Application.ScreenUpdating = False

    ActiveSheet.Unprotect
    Range("C62:D62").Select
    Selection.UnMerge
    Rows("62:62").EntireRow.AutoFit
    Selection.Merge
    Rows("62:62").RowHeight = WorksheetFunction.Max((Rows("61:61").RowHeight * 0.7), 15) 'Use an arbitrary factor of 0.5 to 0.7 to reduce the row height after merging
    ActiveSheet.Protect
    
Application.ScreenUpdating = True

Range(MyActiveCell).Select

End Sub



Sub PaymentTotals()  ' !!!must update if new rows added


'Hide zero totals and unhide non-zero totals
'Update SOS
'Called by Worksheet_Change

If Worksheets("NA.ACLM.PMT").[H49] > 0 Then 'PD
    Rows("49:52").EntireRow.Hidden = False
    'Worksheets("NA.ACLM.SOS").Shapes.Range(Array("Image2")).Visible = False
Else
    Rows("49:52").EntireRow.Hidden = True
    'Worksheets("NA.ACLM.SOS").Shapes.Range(Array("Image2")).Visible = True
End If

If [I49] > 0 Then 'TE
    Rows("53:56").EntireRow.Hidden = False
    'Worksheets("NA.ACLM.SOS").Shapes.Range(Array("Image1")).Visible = False
Else
    Rows("53:56").EntireRow.Hidden = True
    'Worksheets("NA.ACLM.SOS").Shapes.Range(Array("Image1")).Visible = True
End If

If [J49] > 0 Then 'EE
    Rows("57:60").EntireRow.Hidden = False
    'Worksheets("NA.ACLM.SOS").Shapes.Range(Array("Image1")).Visible = False
Else
    Rows("57:60").EntireRow.Hidden = True
    'Worksheets("NA.ACLM.SOS").Shapes.Range(Array("Image1")).Visible = True
End If


End Sub




Attribute VB_Name = "Sheet14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CheckBox1, 2, 0, MSForms, CheckBox"

Private Sub CheckBox1_Click() 'Pay 100%

Dim FM_Percent As Double
Dim OneHundred As Boolean

FM_Percent = Worksheets("Cover").Range("FM_Percent")

If CheckBox1.Value = True Then
    If FM_Percent = 1 Then
        MsgBox "FM's participation is already 100%"
        CheckBox1.Value = False
        CheckBox1.PrintObject = False
        End
    End If
    [A22] = "=""Total Payment (100%)"" & SPACEs(27) & CHARW(9658)"
    CheckBox1.PrintObject = True
Else
    [A22] = "=""Total Payment ""&IF(FM_Percent=1,""""&SPACES(35)&CHARW(9658),""(""&FM_Percent*100&""%)""&SPACES(29)&CHARW(9658))"
    CheckBox1.PrintObject = False
End If

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
' Set date hot cells
If Target.Address = "$C$17" Then Call ShowCal
End Sub






Attribute VB_Name = "Sheet15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Deactivate()
'Initialize SOS

On Error GoTo endnow

    Application.ScreenUpdating = False
    
    Call Update_INT_ACLM
    Call InitializePaymentSummaryACLM
    
endnow:
    Application.ScreenUpdating = True

End Sub


Private Sub Worksheet_SelectionChange(ByVal Target As Range)

'Update Payment Total when any cell in column C is updated
If Target.Column = 3 Then Update_INT_ACLM

End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

If Not Intersect(Range("$C$18:$D$18"), Target) Is Nothing Then ShowHideDeductible
If Not Intersect(Range("$C$16:$D$16"), Target) Is Nothing Then ShowHidePmtCurrency
If Not Intersect(Range("$C$58:$D$58"), Target) Is Nothing Then AutosizeNotes
If Not Intersect(Range("$C$38:$D$38"), Target) Is Nothing Then AutosizePayee
If Not Intersect(Range("$C$23:$D$23"), Target) Is Nothing Then CheckFMPart

If Not Intersect(Range("$C$12:$D$12"), Target) Is Nothing Then Update_INT_ACLM
If Not Intersect(Range("$C$16:$D$16"), Target) Is Nothing Then Update_INT_ACLM
If Not Intersect(Range("$C$18:$D$18"), Target) Is Nothing Then Update_INT_ACLM
If Not Intersect(Range("$C$19:$D$19"), Target) Is Nothing Then Update_INT_ACLM
If Not Intersect(Range("$C$20:$D$20"), Target) Is Nothing Then Update_INT_ACLM
If Not Intersect(Range("$C$21:$D$21"), Target) Is Nothing Then Update_INT_ACLM

If Not Intersect(Range("$C$23:$D$23"), Target) Is Nothing Then Update_INT_ACLM
If Not Intersect(Range("$C$25:$D$25"), Target) Is Nothing Then Update_INT_ACLM
If Not Intersect(Range("$C$27:$D$27"), Target) Is Nothing Then Update_INT_ACLM
If Not Intersect(Range("$C$31:$D$31"), Target) Is Nothing Then Update_INT_ACLM
If Not Intersect(Range("$C$33:$D$33"), Target) Is Nothing Then Update_INT_ACLM

End Sub




'=====================================================================
' Update SOS - Display payment summary for either PD only, TE only, or both
'=====================================================================

Sub InitializePaymentSummaryACLM()

If [ACLM_Amt_PD] > 0 And [ACLM_Amt_TE] = 0 Then 'PD Only

With Worksheets("INT.ACLM.SOS")
    .Rows("39:40").EntireRow.Hidden = False
    .Rows("41:42").EntireRow.Hidden = True
End With

ElseIf [ACLM_Amt_PD] = 0 And [ACLM_Amt_TE] > 0 Then 'TE Only
With Worksheets("INT.ACLM.SOS")
    .Rows("39:40").EntireRow.Hidden = True
    .Rows("41:42").EntireRow.Hidden = False
End With

Else 'PD and TE
With Worksheets("INT.ACLM.SOS")
    .Rows("39:42").EntireRow.Hidden = False
    
End With
End If

'Display or hide Previous Payments line
If [C27] > 0 Or [C33] > 0 Then
    Worksheets("INT.ACLM.SOS").Rows("43:43").EntireRow.Hidden = False
Else
    Worksheets("INT.ACLM.SOS").Rows("43:43").EntireRow.Hidden = True
End If


If [ACLM_pay100percent] = "Yes" Then
    'User selected "Pay 100% regardless of FM Participation"
    With Worksheets("INT.ACLM.SOS")
        .Range("B47") = "=""Payment by "" & Company & "" (100%)"""
        .Range("AD47") = "=AD46"
        .Range("AF47") = "=AF44"
        .Rows(46).Font.Bold = False
        .Rows(47).Font.Bold = True
    End With

Else
    'Pay FM share only
    With Worksheets("INT.ACLM.SOS")
        .Range("B47:W47") = ""
        .Range("AD47") = ""
        .Range("AF47") = ""
        .Rows(46).Font.Bold = True
        .Rows(47).Font.Bold = False
    End With

End If


If Left([INTACLM_DedType], 9) = "Occurance" Then
    Worksheets("INT.ACLM.SOS").Range("B44") = "Less Deductible*"
    Worksheets("INT.ACLM.SOS").Range("B48") = "*Deductible taken on Claim ID: " & [INTACLM_DedTaken]
Else
    Worksheets("INT.ACLM.SOS").Range("B44") = "Less Deductible"
    Worksheets("INT.ACLM.SOS").Range("B48") = ""
End If



End Sub


Sub Update_INT_ACLM()
'Called by Private Sub Worksheet_SelectionChange(ByVal Target As Range)
'Formats Total Payment cell

Dim MyString1 As String
Dim MyString2 As String
Dim PDAmount As Double
Dim TEAmount As Double

On Error Resume Next

If [ACLM_PmtCurrency] = "" Then 'Prevent Invoice Currency field from being deleted
    [ACLM_PmtCurrency] = "(Same as policy currency)"
    Err.Clear
ElseIf [ACLM_PmtCurrency] = "(Same as policy currency)" Then
    MyString1 = [PolicyCurrCode]
Else
    MyString1 = WorksheetFunction.VLookup(Range("ACLM_PmtCurrency"), Worksheets("Data.1").Range("CurrencyTable"), 2, 0)
End If

PDAmount = [ACLM_Pmt_PD]
TEAmount = [ACLM_Pmt_TE]

If [ACLM_Pmt_PD] = "" Then PDAmount = 0
If [ACLM_Pmt_TE] = "" Then TEAmount = 0

MyString2 = Format(PDAmount + TEAmount, "#,##0")

[ACLM_Payment] = MyString1 & " " & MyString2

End Sub

Sub ShowHideDeductible()

ActiveSheet.Unprotect

If [INTACLM_DedType] = "Combined" Then
    [INTACLM_DedSepPD] = ""
    [INTACLM_DedSepTE] = ""
    '[INTACLM_DedTaken] = ""
    [INTACLM_DedCombined].EntireRow.Hidden = False
    [INTACLM_DedSepPD].EntireRow.Hidden = True
    [INTACLM_DedSepTE].EntireRow.Hidden = True
    [INTACLM_DedTaken].EntireRow.Hidden = True
    [INTACLM_DedCombined].Select

ElseIf [INTACLM_DedType] = "Separate" Then
    [INTACLM_DedCombined] = ""
    '[INTACLM_DedTaken] = ""
    [INTACLM_DedCombined].EntireRow.Hidden = True
    [INTACLM_DedTaken].EntireRow.Hidden = True
    [INTACLM_DedSepPD].EntireRow.Hidden = False
    [INTACLM_DedSepTE].EntireRow.Hidden = False
    [INTACLM_DedSepPD].Select
    
ElseIf [INTACLM_DedType] = "Occurance" Then
    [INTACLM_DedCombined] = ""
    [INTACLM_DedSepPD] = ""
    [INTACLM_DedSepTE] = ""
    [INTACLM_DedCombined].EntireRow.Hidden = True
    [INTACLM_DedSepPD].EntireRow.Hidden = True
    [INTACLM_DedSepTE].EntireRow.Hidden = True
    [INTACLM_DedTaken].EntireRow.Hidden = False
    [INTACLM_DedTaken].Select
       
ElseIf [INTACLM_DedType] = "" Then
    [INTACLM_DedCombined] = ""
    [INTACLM_DedSepPD] = ""
    [INTACLM_DedSepTE] = ""
    [INTACLM_DedTaken] = ""
    [INTACLM_DedCombined].EntireRow.Hidden = True
    [INTACLM_DedSepPD].EntireRow.Hidden = True
    [INTACLM_DedSepTE].EntireRow.Hidden = True
    [INTACLM_DedTaken].EntireRow.Hidden = True
    [INTACLM_DedType].Select
       
End If

ActiveSheet.Protect

End Sub


Sub ShowHidePmtCurrency()

ActiveSheet.Unprotect

If [ACLM_PmtCurrency] = "(Same as policy currency)" Then
    [ACLM_ExRate].EntireRow.Hidden = True
Else
    [ACLM_ExRate].EntireRow.Hidden = False
End If

ActiveSheet.Protect

End Sub

Sub AutosizePayee()
'Autosize notes. This is required due to a bug in Excel which prevents text in merged cell from auto wrapping
'Called by Worksheet_Change

Dim MyActiveCell As String

MyActiveCell = ActiveCell.Address

Application.ScreenUpdating = False

    ActiveSheet.Unprotect
    Range("C38:D38").Select
    Selection.UnMerge
    Rows("38:38").EntireRow.AutoFit
    Selection.Merge
    Rows("38:38").RowHeight = WorksheetFunction.Max((Rows("38:38").RowHeight * 0.7), 15)
    'Use an arbitrary factor of 0.5 to 0.7 to reduce the row height after merging
    ActiveSheet.Protect
    
Application.ScreenUpdating = True

Range(MyActiveCell).Select

End Sub


Sub AutosizeNotes()
'Autosize notes. This is required due to a bug in Excel which prevents text in merged cell from auto wrapping
'Called by Worksheet_Change

Dim MyActiveCell As String

MyActiveCell = ActiveCell.Address

Application.ScreenUpdating = False

    ActiveSheet.Unprotect
    Range("C58:D58").Select
    Selection.UnMerge
    Rows("58:58").EntireRow.AutoFit
    Selection.Merge
    Rows("58:58").RowHeight = WorksheetFunction.Max((Rows("58:58").RowHeight * 0.7), 15) 'Use an arbitrary factor of 0.5 to 0.7 to reduce the row height after merging
    ActiveSheet.Protect
    
Application.ScreenUpdating = True

Range(MyActiveCell).Select

End Sub

Sub CheckFMPart()

If [ACLM_pay100percent] = "Yes" Then
    If Worksheets("Cover").Range("FM_Percent") = "1" Then
        MsgBox "Unnecessary, as FM's participation is already 100%"
        [ACLM_pay100percent] = "No (default)"
    End If
End If

End Sub


Attribute VB_Name = "Sheet16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ComboBox1, 1, 0, MSForms, ComboBox"
Attribute VB_Control = "ComboBox2, 2, 1, MSForms, ComboBox"
Attribute VB_Control = "TextBox1, 3, 2, MSForms, TextBox"
Attribute VB_Control = "ComboBox3, 4, 3, MSForms, ComboBox"


'=====================================================================
' Show Quittance D'indemnit|fffd|
'=====================================================================
Sub ShowQuittance()

Application.ScreenUpdating = False

If Sheets("INT.ACLM.SOS(FR)").Visible Then
    Sheets("INT.ACLM.SOS(FR)").Visible = False
Else
    Sheets("INT.ACLM.SOS(FR)").Visible = True
End If

Application.ScreenUpdating = True

End Sub

'===============================================================
' Drop Down to toggle between FM Global / Affiliated FM logos
'===============================================================

Private Sub ComboBox1_DropButtonClick()

Select Case ComboBox1.Value
    
    Case "[Select logo]"
        'do nothing
    Case "none"
        Shapes("Picture 1").Visible = False
        Shapes("Picture 2").Visible = False
    Case "FM Global"
        Shapes("Picture 1").Visible = True
        Shapes("Picture 2").Visible = False
    Case "AFM"
        Shapes("Picture 1").Visible = False
        Shapes("Picture 2").Visible = True
    End Select

End Sub


'===============================================================
' ComboBox control to select Claims office
'===============================================================

Private Sub ComboBox2_Change()

Dim AddressBlock As String

If ComboBox2.Value = "[Select office]" Then
    GoTo exit01

ElseIf ComboBox2.Value = "none" Then
    AddressBlock = ""

Else
    AddressBlock = [AP2] & vbNewLine & [AP3] & vbNewLine & [AP4] & vbNewLine & [AP5] & _
        vbNewLine & [AP6] & vbNewLine & [AP7] & vbNewLine & [AP8] & vbNewLine & [AP9] & _
        vbNewLine & [AP10] & vbNewLine & [AP11]
End If
  
Worksheets("INT.ACLM.SOS").TextBox1.Text = AddressBlock

exit01:

End Sub


'===============================================================
' ComboBox control to select sample text.
'===============================================================
Private Sub ComboBox3_DropButtonClick()
    
On Error Resume Next

    [BodyTextACLM] = WorksheetFunction.VLookup([WordingACLM], Worksheets("Data.1").Range("WordingTableACLM"), 2, False)

End Sub



'=====================================================================
' Set SOS wording based on payment method and payee type
'=====================================================================
'Macro button to auto-select wording

Sub SetWordingACLM()

Dim PaymentMethod As String
Dim PayeeType As String
Dim PaymentType As String

PaymentMethod = [ACLMPaymentMethod]
PayeeType = [ACLMPayeeType]
PaymentType = [ACLM_Pmt_Type]

If PaymentMethod = "" Or PayeeType = "" Or PaymentType = "" Then
    MsgBox "Please complete Payment Type, Payment Method and/or Payee Type on INT.ACLM.PMT page."
    GoTo exit_here
End If

'If user selected "Pay 100% regardless of FM participation"
If Sheets("INT.ACLM.PMT").Range("ACLM_pay100percent") = "Yes" Then

    If PaymentMethod = "Cheque" And PayeeType = "Insured" Then
        ComboBox3.Value = "Cheque (100%) to Insured"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "Broker" Then
        ComboBox3.Value = "Cheque (100%) to Broker or other"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Cheque (100%) to World-Reach Partner"
        
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Insured" Then
        ComboBox3.Value = "Bank Transfer (100%) to Insured"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Broker" Then
        ComboBox3.Value = "Bank Transfer (100%) to Broker or other"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bank Transfer (100%) to World-Reach Partner"
        
    ElseIf PaymentMethod = "Bordereau" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bordereau (100%) to World-Reach Partner"
        
End If
End If

'If user does not select "Pay 100% regardless of FM participation"
If Sheets("INT.ACLM.PMT").Range("ACLM_pay100percent") <> "Yes" Then


    If PaymentMethod = "Cheque" And PayeeType = "Insured" Then
        ComboBox3.Value = "Cheque to Insured"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "Broker" Then
        ComboBox3.Value = "Cheque to Broker or other"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Cheque to World-Reach Partner"
        
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Insured" Then
        ComboBox3.Value = "Bank Transfer to Insured"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Broker" Then
        ComboBox3.Value = "Bank Transfer to Broker or other"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bank Transfer to World-Reach Partner"
        
    ElseIf PaymentMethod = "Bordereau" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bordereau to World-Reach Partner"
    Else
        ComboBox3.Value = "[Select sample text]"
        MsgBox "Please manually select appropriate wording."
End If
End If


'Insert text into body of statement
Call ComboBox3_DropButtonClick

exit_here:

End Sub




Attribute VB_Name = "Sheet18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "TextBox1, 10, 2, MSForms, TextBox"
Attribute VB_Control = "ComboBox1, 2, 3, MSForms, ComboBox"
Attribute VB_Control = "ComboBox2, 9, 4, MSForms, ComboBox"

'=====================================================================
' Set date hot cells
'=====================================================================
Private Sub Worksheet_SelectionChange(ByVal Target As Range)

If Target.Address = "$N$12:$P$12" Then Call ShowCal

End Sub


'===============================================================
' Drop Down to toggle between FM Global / Affiliated FM logos
'=============================================================== done

Private Sub ComboBox1_DropButtonClick()

Select Case ComboBox1.Value
    
    Case "[Select logo]"
        'do nothing
    Case "none"
        Shapes("Picture 1").Visible = False
        Shapes("Picture 2").Visible = False
    Case "FM Global"
        Shapes("Picture 1").Visible = True
        Shapes("Picture 2").Visible = False
    Case "AFM"
        Shapes("Picture 1").Visible = False
        Shapes("Picture 2").Visible = True
    End Select

End Sub

'=====================================================================
' Drop-down list box to control Void stamp
'=====================================================================

Private Sub ComboBox2_DropButtonClick()
' Control to toggle Void stamp

With ActiveSheet

    If ComboBox2.Value = "Void" Then
        TextBox1.Visible = True
    Else
        TextBox1.Visible = False
    End If

End With

End Sub

'=====================================================================
' On activation sets void stamp based on payment type and void stamp ddlb setting
'=====================================================================

Private Sub Worksheet_Activate()

Call UpdateLCSOS

If [bbPaymentType] = "Advance" And ComboBox2.Value = "[Select Void stamp]" Then
    TextBox1.Visible = True
ElseIf ComboBox2.Value = "Void" Then
    TextBox1.Visible = True
Else
    TextBox1.Visible = False
End If

End Sub


Sub UpdateLCSOS()
'Occurrence deductible ClaimID present
   
If [bbOccDedClaimID] <> "" Then
    
    With Worksheets("INT.LC.SOS")
        .Unprotect
        .Range("bbLPRDpd") = "Less pro rata deductible*"
        .Range("bbLPRDte") = "Less pro rata deductible*"
        .Range("B43") = "*Occurrence deductible taken on Claim ID: " & [bbOccDedClaimID]
        .Protect
    End With
Else
    With Worksheets("INT.LC.SOS")
        .Unprotect
        .Range("bbLPRDpd") = "Less pro rata deductible"
        .Range("bbLPRDte") = "Less pro rata deductible"
        .Range("B43") = ""
        .Protect
    End With
End If

End Sub

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CheckBox2, 44, 0, MSForms, CheckBox"
Attribute VB_Control = "CheckBox1, 41, 1, MSForms, CheckBox"




Private Sub Worksheet_SelectionChange(ByVal Target As Range)
'A subroutine is run when a user clicks on a specific cell

If Target.Address = "$I$11" Then Call ShowCal
If Target.Address = "$K$11" Then Call ShowCal
If Target.Address = "$F$43" Then Call RestoreFormulasNACS
If Target.Address = "$J$43" Then Call DeductibleTaken
If Target.Address = "$F$47" Then Call ClearCombinedDeductible
If Target.Address = "$H$47" Then Call ClearCombinedDeductible
If Target.Address = "$J$47" Then Call ClearCombinedDeductible

End Sub


Sub ClearCombinedDeductible()
' Called by Worksheet_SelectionChange
' Subroutine runs when a user selects a separate deductible cell
' Removes formulas for combined deductibles

Dim result As Variant

ActiveSheet.Unprotect

'Case 1: Reference to occurrence deductible exists
If [NADedTaken] <> "" Then
    result = MsgBox("Entering a separate deductible will clear your Claim ID reference " & _
    "to an occurrence deductible." & vbNewLine & vbNewLine & _
    "Do you wish to continue?", vbYesNo)
    If result = vbNo Then
        GoTo continue1
    Else
        [NADedTaken] = ""
        [NACombinedDed] = ""
        [F47] = ""
        [H47] = ""
        [J47] = ""
        [F47].Locked = False
        [H47].Locked = False
        [J47].Locked = False
        GoTo continue1
    End If
End If


'Case 2: Combined deductible exists
If [NACombinedDed] <> "" Then
    result = MsgBox("Do you wish to clear the Combined deductible and enter Separate deductibles?", vbYesNo)
    If result = vbNo Then
        GoTo continue1
    Else
        [NADedTaken] = ""
        [NACombinedDed] = ""
        [NACombinedDed].Locked = True
        [F47] = ""
        [H47] = ""
        [J47] = ""
        [F47].Locked = False
        [H47].Locked = False
        [J47].Locked = False
        GoTo continue1
    End If
End If


'Case3: Deductible formulas already present
If [NACombinedDed] = "" And [F47].HasFormula And [H47].HasFormula And [J47].HasFormula Then
        [NADedTaken] = ""
        [NACombinedDed] = ""
        [NACombinedDed].Locked = True
        [F47] = ""
        [H47] = ""
        [J47] = ""
        [F47].Locked = False
        [H47].Locked = False
        [J47].Locked = False
End If


continue1:
ActiveSheet.Protect

End Sub

Sub DeductibleTaken()

ActiveSheet.Unprotect


' If any Claim ID reference exists
If [NADedTaken] <> "" Then GoTo continue1


' If any deductible exists
If IsNumeric([NACombinedDed]) Or IsNumeric([F47]) Or IsNumeric([H47]) Or IsNumeric([J47]) Then
    result = MsgBox("Entering a Claim ID reference to an occurrence deductible will " & _
    "zero the deductible(s) in your Claim Summary." & vbNewLine & vbNewLine & _
    "Do you wish to continue?", vbYesNo)

    If result = vbNo Then
        [NADedTaken].Locked = True
        GoTo continue1
    Else
        [NADedTaken].Locked = False
        [NACombinedDed] = ""
        [NACombinedDed].Locked = True
        [F47] = 0
        [H47] = 0
        [J47] = 0
        [F47].Locked = True
        [H47].Locked = True
        [J47].Locked = True
    End If


End If
continue1:
ActiveSheet.Protect

End Sub


Sub RestoreFormulasNACS()
' Restore formulas in Claim Summary table

Application.ScreenUpdating = False
ActiveSheet.Unprotect

'Case: Additional rows have been added to worksheet
If Range("F45") <> "PD" Then
    MsgBox "Unable to restore formulas as number of rows or has have changed"
    GoTo continue1 'do nothing
End If

'Case: Claim ID referenceto occurrence ded exists
If [NADedTaken] <> "" Then
    result = MsgBox("Entering a combined deductible will clear your Claim ID reference " & _
    "to an occurrence deductible." & vbNewLine & vbNewLine & _
    "Do you wish to continue?", vbYesNo)
    If result = vbNo Then
        GoTo continue1
    Else
        [NADedTaken] = ""
    End If
End If

'Case: Deductible formulas already present
If [F47].HasFormula And [H47].HasFormula And [J47].HasFormula Then
GoTo continue1 'do nothing
End If

'Case: Separate deductible exist. Ask before clearing.
If [F47] <> 0 Or [H47] <> 0 Or [J47] <> 0 Then
    result = MsgBox("Do you wish to clear the Separate deductibles and enter a Combined deductible?", vbYesNo)
    If result = vbNo Then GoTo continue1
End If

 
    Range("F46") = "=G39"
    Range("H46") = "=H39"
    Range("J46") = "=I39"
    
    Range("F47") = "=IF(ISERROR(F46/(F46+H46+J46)),0,NACombinedDed-ROUND(H47,2)-ROUND(J47,2))"
    Range("H47") = "=IF(ISERROR(H46/(F46+H46+J46)),0,Round(H46/(F46+H46+J46)*ABS(F43),2))"
    Range("J47") = "=IF(ISERROR(J46/(F46+H46+J46)),0,Round(J46/(F46+H46+J46)*ABS(F43),2))"
    
    Range("F49") = "=F46-ABS(F47)-ABS(F48)"
    Range("H49") = "=H46-ABS(H47)-ABS(H48)"
    Range("J49") = "=J46-ABS(J47)-ABS(J48)"
    
    Range("F50") = "=IF(F46>0,FM_Percent,"""")"
    Range("H50") = "=IF(H46>0,FM_Percent,"""")"
    Range("J50") = "=IF(J46>0,FM_Percent,"""")"
    
    Range("F51") = "=IF(F46>0,F50*F49,0)"
    Range("H51") = "=IF(H46>0,H50*H49,0)"
    Range("J51") = "=IF(J46>0,J50*J49,0)"
    
    [F47].Locked = True
    [H47].Locked = True
    [J47].Locked = True
    [NACombinedDed].Locked = False
    

continue1:
ActiveSheet.Protect
Application.ScreenUpdating = True

End Sub


Private Sub Worksheet_Change(ByVal Target As Range)
    Dim KeyCells As Range

    ' The variable KeyCells contains the cells that will
    ' cause an alert when they are changed.
    Set KeyCells = [NACLM_Subrogation]
    
    If Not Application.Intersect(KeyCells, Range(Target.Address)) _
           Is Nothing Then
        If [NACLM_Subrogation] = "Yes - Obtain Subrogation Receipt" Then
           Sheets("NA.CLM.REC").Visible = True
           MsgBox "Subrogation Receipt added"
        ElseIf [NACLM_Subrogation] = "Yes - Obtain Loan Receipt" Then
           Sheets("NA.CLM.REC").Visible = True
           MsgBox "Loan Receipt added"
        Else
           Sheets("NA.CLM.REC").Visible = False
        End If
    End If

       
End Sub




Sub LimitPD()
' Limit Checkboxes - Toggle formula and protection
' Unprotects total and allows user to enter PD limit amount
' Unchecking restores formula and protects cell

ActiveSheet.Unprotect
ActiveSheet.Shapes("Check Box 10").Select

If Selection.Value = xlOn Then 'checkbox is checked
    [F49].Select
    With Selection
        .Value = ""
        .Locked = False
        Call FillClear
    End With
Else 'checkbox is unchecked
    [F49].Select
    With Selection
        .Value = "=IF(F48=""Taken"",F46-ABS(F48),F46-ABS(F47)-ABS(F48))"
        .Locked = True
        Call FillSolid
    End With
End If
ActiveSheet.Protect
End Sub

Sub LimitGEGP()
' Limit Checkboxes - Toggle formula and protection
' Unprotects total and allows user to enter GE/GP limit amount
' Unchecking restores formula and protects cell

ActiveSheet.Unprotect

ActiveSheet.Shapes("Check Box 12").Select
If Selection.Value = xlOn Then
    [H49].Select
    With Selection
        .Value = ""
        .Locked = False
        Call FillClear
    End With
Else
    [H49].Select
    With Selection
        .Value = "=IF(H48=""Taken"",H46-ABS(H48),H46-ABS(H47)-ABS(H48))"
        .Locked = True
        Call FillSolid
    End With
End If
ActiveSheet.Protect
End Sub


Sub LimitEE()
' Limit Checkboxes - Toggle formula and protection
' Unprotects total and allows user to enter EE limit amout
' Unchecking restores formula and protects cell

ActiveSheet.Unprotect

ActiveSheet.Shapes("Check Box 11").Select
If Selection.Value = xlOn Then
    [J49].Select
    With Selection
        .Value = ""
        .Locked = False
        Call FillClear
    End With
Else
    [J49].Select
    With Selection
        .Value = "=IF(J48=""Taken"",J46-ABS(J48),J46-ABS(J47)-ABS(J48))"
        .Locked = True
        Call FillSolid
    End With
End If
ActiveSheet.Protect
End Sub



Private Sub CheckBox1_Click()
'Pay 100% checkbox

Application.EnableEvents = False
Application.ScreenUpdating = False
ActiveSheet.Unprotect

If CheckBox1 = True Then 'User checked "Pay 100%"

    If Worksheets("Cover").Range("FM_Percent") = "1" Then
        MsgBox "Unnecessary, as FM's participation is already 100%"
        CheckBox1.Value = False
        End
    Else 'Pay 100%
        [C51] = "Paying 100% |fffd|>"
        [F51] = "=F49"
        [H51] = "=H49"
        [J51] = "=J49"
        [H55] = "=IF(ISERROR(F49+H49+J49),0,F49+H49+J49)"
        [J55] = "=IF(ISERROR(F47+H47+J47),0,F47+H47+J47)"
        
        'update SOS
        With Worksheets("NA.CLM.SOS")
            .Unprotect
            .Range("L14") = "=+E23"
            .Range("P14") = "<|fffd| Paying 100%"
            .Protect
        End With
    End If

Else 'Pay regular FM percent participation
    [C51] = ""
    [F51] = "=IF(F46>0,F50*F49,0)"
    [H51] = "=IF(H46>0,H50*H49,0)"
    [J51] = "=IF(J46>0,J50*J49,0)"
    [H55] = "=IF(ISERROR(F49+H49+J49),0,(F49+H49+J49)*FM_Percent)"
    [J55] = "=IF(ISERROR(F47+H47+J47),0,(F47+H47+J47)*FM_Percent)"
    
    'Update SOS
    With Worksheets("NA.CLM.SOS")
        .Unprotect
        .Range("L14") = "=+E23*FM_Percent"
        .Range("P14") = ""
        .Protect
    End With
End If

[L51].Select
ActiveSheet.Protect
Application.ScreenUpdating = True
Application.EnableEvents = True

End Sub


Private Sub CheckBox2_Click()
'Hide table, change formulas, and open Claim Summary worksheet

Application.ScreenUpdating = False
ActiveSheet.Unprotect

If CheckBox2 = True Then 'Use separate Summary Spreadsheet"

    If WorksheetFunction.CountA(ActiveSheet.Range("C32:K38")) < 2 Then GoTo continue0
    
    ActiveSheet.Range("C32:K38").Select
    msg1 = MsgBox("Contents of this table will be cleared by adding a separate Summary Spreadsheet." & vbNewLine & vbNewLine & _
        "Click OK to continue, or otherwise Cancel", vbOKCancel + vbQuestion, "Question")
    
    If msg1 = vbCancel Then
        Range("C32").Select
        ActiveSheet.Shapes("Check Box 19").Select
        Selection.Value = xlOff
        Range("C32").Select
        GoTo continue1
    Else
        ActiveSheet.Range("C32:K38").ClearContents
        Range("B42").Select
    End If
    
continue0:
    
    ActiveSheet.Unprotect
    Range("F39") = "=sprClaimed"
    Range("G39") = "=sprPD"
    Range("H39") = "=sprGEGP"
    Range("I39") = "=sprEE"
    Range("B39") = "Total from attached spreadsheet"
    
    Range("B32:K38").Select
    Selection.Locked = True
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -4.99893185216834E-02
        .PatternTintAndShade = 0
    End With
    Range("L30").Select
    
    [C32] = "See attached Spreadsheet Summary"
    Worksheets("NA.CLM.DET").Visible = True
Else
    Range("F39") = "=SUM(F32:F38)"
    Range("G39") = "=SUM(G32:G38)"
    Range("H39") = "=SUM(H32:H38)"
    Range("I39") = "=SUM(I32:I38)"
    Range("B39") = "Total"
    
    Range("B32:K38").Select
    Selection.Locked = False
    With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Range("C32").Select

    [C32] = ""
    Worksheets("NA.CLM.DET").Visible = False
End If

continue1:
Application.ScreenUpdating = True
ActiveSheet.Protect

End Sub



'---------------------------------------------------------------------
'---------------------------------------------------------------------


Sub SpellCheck_NACLMPMT()
'Spellcheck  button

ActiveSheet.Unprotect
Union(Range("NA_ClaimDescription"), Range("NA_ItemDescription")).CheckSpelling
ActiveSheet.Protect

End Sub


Sub FillClear()
' Called by LimitXX subroutines, above
    
    With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With

End Sub

Sub FillSolid()
' Called by LimitXX subroutines, above

    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -4.99893185216834E-02
        .PatternTintAndShade = 0
    End With

End Sub




Attribute VB_Name = "Sheet20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CheckBox2, 4, 0, MSForms, CheckBox"
Attribute VB_Control = "CheckBox1, 23, 1, MSForms, CheckBox"
Sub ILNCalCtrlToggle()

Application.ScreenUpdating = False
ActiveSheet.Unprotect

If ActiveSheet.Shapes.Range(Array("Rectangle 92")).Line.ForeColor.RGB = RGB(255, 0, 0) Then

    ActiveSheet.Shapes.Range(Array("Rectangle 92")).Line.ForeColor.RGB = RGB(0, 255, 0)
    ActiveSheet.Shapes.Range(Array("Rectangle 92")).Line.Weight = 2.5
Else
    ActiveSheet.Shapes.Range(Array("Rectangle 92")).Line.ForeColor.RGB = RGB(255, 0, 0)
    ActiveSheet.Shapes.Range(Array("Rectangle 92")).Line.Weight = 2.5
End If

Application.ScreenUpdating = True
ActiveSheet.Protect

End Sub


'=====================================================================
' Checkbox option to override calculated payment in order to pay 100%
'=====================================================================

Private Sub CheckBox1_Click()

If CheckBox1.Value = True Then
    [LAEPaymentPD] = "=+LAETotInvPD"
    [LAEPaymentTE] = "=+LAETotInvTE"
    CheckBox1.PrintObject = True
    With Worksheets("INT.LAE.SOS")
        .Range("B48") = "=""Payment by "" & Company & "" (100%)"""
        .Range("AF48") = "=AF46"
        .Range("AD48") = "=AD47"
        .Rows(47).Font.Bold = False
        .Rows(48).Font.Bold = True
    End With

Else
    [LAEPaymentPD] = "=+LAEFMSharePD"
    [LAEPaymentTE] = "=+LAEFMShareTE"
    CheckBox1.PrintObject = False
    With Worksheets("INT.LAE.SOS")
        .Range("B48") = ""
        .Range("AF48") = ""
        .Range("AD48") = ""
        .Rows(47).Font.Bold = True
        .Rows(48).Font.Bold = False
    End With
    
End If

End Sub

'=====================================================================
' Checkbox option to toggle VAT/GST
'=====================================================================

Private Sub CheckBox2_Click()

Application.ScreenUpdating = False
ActiveSheet.Unprotect

If CheckBox2.Value = True Then
    [LAETax] = "GST: "
Else
    [LAETax] = "VAT: "
End If

ActiveSheet.Protect
Application.ScreenUpdating = True

End Sub

'=====================================================================
' Set date hot cells
'=====================================================================

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

If ActiveSheet.Shapes.Range(Array("Rectangle 92")).Line.ForeColor.RGB = RGB(0, 255, 0) Then

    If Target.Address = "$U$10" Then Call ShowCal
    If Target.Address = "$U$11" Then Call ShowCal
    If Target.Address = "$U$12" Then Call ShowCal
    If Target.Address = "$U$13" Then Call ShowCal
    If Target.Address = "$U$14" Then Call ShowCal
    If Target.Address = "$U$15" Then Call ShowCal
    If Target.Address = "$U$16" Then Call ShowCal
    If Target.Address = "$U$17" Then Call ShowCal
    If Target.Address = "$U$18" Then Call ShowCal
    If Target.Address = "$U$19" Then Call ShowCal
    
    If Target.Address = "$U$25" Then Call ShowCal
    If Target.Address = "$U$26" Then Call ShowCal
    If Target.Address = "$U$27" Then Call ShowCal
    If Target.Address = "$U$28" Then Call ShowCal
    If Target.Address = "$U$29" Then Call ShowCal
    If Target.Address = "$U$30" Then Call ShowCal
    If Target.Address = "$U$31" Then Call ShowCal
    If Target.Address = "$U$32" Then Call ShowCal
    If Target.Address = "$U$33" Then Call ShowCal
    If Target.Address = "$U$34" Then Call ShowCal
    If Target.Address = "$U$35" Then Call ShowCal
    If Target.Address = "$U$36" Then Call ShowCal
    If Target.Address = "$U$37" Then Call ShowCal
    If Target.Address = "$U$38" Then Call ShowCal
    If Target.Address = "$U$39" Then Call ShowCal
    If Target.Address = "$U$40" Then Call ShowCal
    If Target.Address = "$U$41" Then Call ShowCal
    If Target.Address = "$U$42" Then Call ShowCal
    If Target.Address = "$U$43" Then Call ShowCal
    If Target.Address = "$U$44" Then Call ShowCal
Else
End If
End Sub




Attribute VB_Name = "Sheet21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ComboBox3, 4, 0, MSForms, ComboBox"
Attribute VB_Control = "TextBox1, 3, 1, MSForms, TextBox"
Attribute VB_Control = "ComboBox2, 2, 2, MSForms, ComboBox"
Attribute VB_Control = "ComboBox1, 1, 3, MSForms, ComboBox"
'=====================================================================
' When activated set wording and payment summary
'=====================================================================

Private Sub Worksheet_Activate()

[IntLAE_Amount] = Format([IntLAE_Total], " #,##0.00")

Call InitializePaymentSummaryLAE


End Sub

'=====================================================================
' Set date hot cells
'=====================================================================

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
' Show calendar when date cell is selected

    If Target.Address = "$AD$38:$AI$38" Then Call ShowCal

End Sub



'===============================================================
' Drop Down to toggle between FM Global / Affiliated FM logos
'=============================================================== done

Private Sub ComboBox1_DropButtonClick()

Select Case ComboBox1.Value
    
    Case "[Select logo]"
        'do nothing
    Case "none"
        Shapes("Picture 1").Visible = False
        Shapes("Picture 2").Visible = False
    Case "FM Global"
        Shapes("Picture 1").Visible = True
        Shapes("Picture 2").Visible = False
    Case "AFM"
        Shapes("Picture 1").Visible = False
        Shapes("Picture 2").Visible = True
    End Select

End Sub


'===============================================================
' ComboBox control to select Claims office
'=============================================================== done

Private Sub ComboBox2_Change()

Dim AddressBlock As String

If ComboBox2.Value = "[Select office]" Then
    GoTo exit01

ElseIf ComboBox2.Value = "none" Then
    AddressBlock = ""

Else
    AddressBlock = [AP2] & vbNewLine & [AP3] & vbNewLine & [AP4] & vbNewLine & [AP5] & _
        vbNewLine & [AP6] & vbNewLine & [AP7] & vbNewLine & [AP8] & vbNewLine & [AP9] & _
        vbNewLine & [AP10] & vbNewLine & [AP11]
End If
  
Worksheets("INT.LAE.SOS").TextBox1.Text = AddressBlock

exit01:

End Sub


'===============================================================
' ComboBox control to select sample text.
'=============================================================== done
Private Sub ComboBox3_DropButtonClick()
On Error Resume Next

    [TextBlockLAE] = WorksheetFunction.VLookup([WordingLAE], Worksheets("Data.1").Range("WordingLAETable"), 2, False)
    
End Sub

'===============================================================
' ComboBox control to select scope of small claim
'=============================================================== done

Private Sub ComboBox4_Change()

Application.ScreenUpdating = False
    
If ComboBox4.Value = "PD only" Then
    Rows("37:38").Select
    Selection.EntireRow.Hidden = False
    Rows("39:40").Select
    Selection.EntireRow.Hidden = True
    Range("B38").Select
End If

If ComboBox4.Value = "TE only" Then
    Rows("37:38").Select
    Selection.EntireRow.Hidden = True
    Rows("39:40").Select
    Selection.EntireRow.Hidden = False
    Range("B40").Select
End If

If ComboBox4.Value = "PD and TE" Then
    Rows("37:40").Select
    Selection.EntireRow.Hidden = False
    Range("B38").Select
End If

Application.ScreenUpdating = True

End Sub

'=====================================================================
' Set SOS wording based on payment method and payee type
'=====================================================================

Sub SetWordingLAE() 'Called by macro button

Dim PaymentMethod As String
Dim PayeeType As String

PaymentMethod = [LAEPaymentMethod]
PayeeType = [LAEPayeeType]

'Macro button to auto-select wording

If PaymentMethod = "" Or PayeeType = "" Then
    MsgBox "Please complete Payment Method and Payee Type on INT.LAE.PMT page."
    GoTo endhere
End If

    
'If user selected "Pay 100% regardless of FM participation"
If Sheets("INT.LAE.PMT").CheckBox1.Value = True Then
        If PaymentMethod = "Cheque" And PayeeType = "Consultant" Then
        ComboBox3.Value = "Cheque (100%) to Consultant"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "Broker" Then
        ComboBox3.Value = "Cheque (100%) to Broker or other"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Cheque (100%) to World-Reach Partner"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Consultant" Then
        ComboBox3.Value = "Bank Transfer (100%) to Consultant"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Broker" Then
        ComboBox3.Value = "Bank Transfer (100%) to Broker or other"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bank Transfer (100%) to World-Reach Partner"
    ElseIf PaymentMethod = "Bordereau" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bordereau (100%) to World-Reach Partner"

    Else
        ComboBox3.Value = "[Select sample text]"
        MsgBox "Please manually select appropriate wording."
        'Sheets("INT.LAE.SOS").Range("TextBlockLAE") = ""
'GoTo exit_here
End If
End If


'Pay FM % Participation
If Sheets("INT.LAE.PMT").CheckBox1.Value = False Then

If PaymentMethod = "Cheque" And PayeeType = "Consultant" Then
        ComboBox3.Value = "Cheque to Consultant"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "Broker" Then
        ComboBox3.Value = "Cheque to Broker or other"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Cheque to World-Reach Partner"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Consultant" Then
        ComboBox3.Value = "Bank Transfer to Consultant"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Broker" Then
        ComboBox3.Value = "Bank Transfer to Broker or other"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bank Transfer to World-Reach Partner"
    ElseIf PaymentMethod = "Bordereau" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bordereau to World-Reach Partner"
    Else
        ComboBox3.Value = "[Select sample text]"
        'Sheets("INT.LAE.SOS").Range("TextBlockLAE") = ""
        MsgBox "Please manually select appropriate wording."
End If
End If


'Insert text into body of statement

Call ComboBox3_DropButtonClick
endhere:

End Sub

'=====================================================================
' Hide or display rows depending on PD only, TE only or both
'=====================================================================

Sub InitializePaymentSummaryLAE()

Application.ScreenUpdating = False

If [LAEPaymentPD] > 0 And [LAEPaymentTE] = 0 Then 'PD Only
    Rows("42:43").Select
    Selection.EntireRow.Hidden = False
    Rows("44:45").Select
    Selection.EntireRow.Hidden = True
    Range("G39").Select

ElseIf [LAEPaymentPD] = 0 And [LAEPaymentTE] > 0 Then 'TE Only
    Rows("42:43").Select
    Selection.EntireRow.Hidden = True
    Rows("44:45").Select
    Selection.EntireRow.Hidden = False
    Range("G39").Select

ElseIf [LAEPaymentPD] > 0 And [LAEPaymentTE] > 0 Then 'PD and TE
    Rows("42:45").Select
    Selection.EntireRow.Hidden = False
    Range("G39").Select
Else
    Rows("42:45").Select 'default
    Selection.EntireRow.Hidden = False
    Range("G39").Select
End If

Application.ScreenUpdating = True

End Sub







Attribute VB_Name = "Sheet22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



Private Sub Worksheet_SelectionChange(ByVal Target As Range)

' Set date hot cells
If Target.Address = "$B$18:$C$18" Then Call ShowCal

'Update Payment Total when any cell in column C is updated
If Target.Column = 3 Then Update_INT_ALAE

End Sub


Private Sub Worksheet_Deactivate()

Call Update_INT_ALAE

End Sub


Sub Update_INT_ALAE()
'Called by Private Sub Worksheet_SelectionChange(ByVal Target As Range)
'Formats Total Payment cell
   
Dim MyString1 As String
Dim MyString2 As String

'On Error Resume Next

'Determine payment currency code
If [ALAE_InvCurrency] = "" Then 'Prevent Invoice Currency field from being deleted
    [ALAE_InvCurrency] = "(Same as policy currency)"
    Err.Clear
ElseIf [ALAE_InvCurrency] = "(Same as policy currency)" Then
    MyString1 = [PolicyCurrCode]
Else
    MyString1 = WorksheetFunction.VLookup(Range("ALAE_InvCurrency"), Worksheets("Data.1").Range("CurrencyTable"), 2, 0)
End If

If [ALAE_pay100percent] = "Yes" Then
    'User selected "Pay 100% regardless of FM Participation"
    MyString2 = Format([ALAE_InvAmount], "#,##0.00") 'Two decimals required for LAEs
    [ALAE_TotalPmt] = MyString1 & " " & MyString2
    With Worksheets("INT.ALAE.SOS")
        .Range("B48") = "=""Payment by "" & Company & "" (100%)"""
        .Range("AD48") = "=AD47"
        .Range("AF48") = "=ALAE_InvAmount"
        .Rows(47).Font.Bold = False
        .Rows(48).Font.Bold = True
    End With
Else
    'Pay FM share only
    MyString2 = Format([ALAE_InvAmount] * [FM_Percent], "#,##0.00") 'Two decimals required for LAEs
    [ALAE_TotalPmt] = MyString1 & " " & MyString2
    With Worksheets("INT.ALAE.SOS")
        .Range("B48") = ""
        .Range("AD48") = ""
        .Range("AF48") = ""
        .Rows(47).Font.Bold = True
        .Rows(48).Font.Bold = False
    End With
    
Call ShowHidePmtCurrency

[ALAE_Notes].Rows.EntireRow.AutoFit
   
End If

End Sub


Private Sub Worksheet_Change(ByVal Target As Range)

    If Not Intersect(Range("$B$20:$C$20"), Target) Is Nothing Then Update_INT_ALAE 'pmt currency
    If Not Intersect(Range("$B$22:$C$22"), Target) Is Nothing Then Update_INT_ALAE 'invoice amount
    If Not Intersect(Range("$B$23:$C$23"), Target) Is Nothing Then Update_INT_ALAE 'pay 100%
    If Not Intersect(Range("$B$23:$C$23"), Target) Is Nothing Then Update_INT_ALAE 'resize notes

End Sub

Sub ShowHidePmtCurrency()

    If [ALAE_InvCurrency] = "(Same as policy currency)" Then
        [ALAE_ExRate].EntireRow.Hidden = True
    Else
        [ALAE_ExRate].EntireRow.Hidden = False
    End If

End Sub



        
    






Attribute VB_Name = "Sheet23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ComboBox1, 1, 0, MSForms, ComboBox"
Attribute VB_Control = "ComboBox2, 2, 1, MSForms, ComboBox"
Attribute VB_Control = "TextBox1, 3, 2, MSForms, TextBox"
Attribute VB_Control = "ComboBox3, 4, 3, MSForms, ComboBox"
'===============================================================
' Drop Down to toggle between FM Global / Affiliated FM logos
'=============================================================== done

Private Sub ComboBox1_DropButtonClick()

Select Case ComboBox1.Value
    
    Case "[Select logo]"
        'do nothing
    Case "none"
        Shapes("Picture 1").Visible = False
        Shapes("Picture 2").Visible = False
    Case "FM Global"
        Shapes("Picture 1").Visible = True
        Shapes("Picture 2").Visible = False
    Case "AFM"
        Shapes("Picture 1").Visible = False
        Shapes("Picture 2").Visible = True
    End Select

End Sub


'===============================================================
' ComboBox control to select Claims office
'===============================================================

Private Sub ComboBox2_Change()

Dim AddressBlock As String

If ComboBox2.Value = "[Select office]" Then
    GoTo exit01

ElseIf ComboBox2.Value = "none" Then
    AddressBlock = ""

Else
    AddressBlock = [AP2] & vbNewLine & [AP3] & vbNewLine & [AP4] & vbNewLine & [AP5] & _
        vbNewLine & [AP6] & vbNewLine & [AP7] & vbNewLine & [AP8] & vbNewLine & [AP9] & _
        vbNewLine & [AP10] & vbNewLine & [AP11]
End If
  
Worksheets("INT.ALAE.SOS").TextBox1.Text = AddressBlock

exit01:

End Sub


'===============================================================
' ComboBox control to select sample text.
'===============================================================
Private Sub ComboBox3_DropButtonClick()
    
    On Error Resume Next
    [TextBlockALAE] = WorksheetFunction.VLookup([WordingALAE], Worksheets("Data.1").Range("WordingALAETable"), 2, False)

End Sub

'=====================================================================
' Set SOS wording based on payment method and payee type
'=====================================================================
Sub SetWordingALAE()
'Macro button to auto-select wording

Dim PaymentMethod As String
Dim PayeeType As String

PaymentMethod = [ALAEPaymentMethod]
PayeeType = [ALAEPayeeType]

'Macro button to auto-select wording
If PaymentMethod = "" Or PayeeType = "" Then
    MsgBox "Please complete Payment Method and Payee Type on INT.ALAE.PMT page."
    GoTo exit_here
End If

'If user selected "Pay 100% regardless of FM participation"
If Sheets("INT.ALAE.PMT").Range("ALAE_pay100percent") = "Yes" Then

        If PaymentMethod = "Cheque" And PayeeType = "Consultant" Then
        ComboBox3.Value = "Cheque (100%) to Consultant"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "Broker" Then
        ComboBox3.Value = "Cheque (100%) to Broker or other"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Cheque (100%) to World-Reach Partner"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Consultant" Then
        ComboBox3.Value = "Bank Transfer (100%) to Consultant"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Broker" Then
        ComboBox3.Value = "Bank Transfer (100%) to Broker or other"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bank Transfer (100%) to World-Reach Partner"
    ElseIf PaymentMethod = "Bordereau" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bordereau (100%) to World-Reach Partner"

End If
End If

'If user does not select "Pay 100% regardless of FM participation"
If Sheets("INT.ALAE.PMT").Range("ALAE_pay100percent") <> "Yes" Then

    If PaymentMethod = "" Or PayeeType = "" Then
       MsgBox "Please complete Payment Method, and/or Payee Type on INT.ALAE.PMT page."
       'GoTo exit_here
    End If

    If PaymentMethod = "Cheque" And PayeeType = "Consultant" Then
        ComboBox3.Value = "Cheque to Consultant"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "Broker" Then
        ComboBox3.Value = "Cheque to Broker or other"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Cheque to World-Reach Partner"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Consultant" Then
        ComboBox3.Value = "Bank Transfer to Consultant"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Broker" Then
        ComboBox3.Value = "Bank Transfer to Broker or other"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bank Transfer to World-Reach Partner"
    ElseIf PaymentMethod = "Bordereau" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bordereau to World-Reach Partner"
    Else
        ComboBox3.Value = "[Select sample text]"
        MsgBox "Please manually select appropriate wording."
End If
End If

'Insert text into body of statement
Call ComboBox3_DropButtonClick

exit_here:

End Sub










Attribute VB_Name = "Sheet24"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub ReturnToStart()


Application.ScreenUpdating = False

Sheets("UserGuide").Visible = False
Sheets("Start").Activate
Call RemoveGreenFormButtons2
Application.ScreenUpdating = True


End Sub
Attribute VB_Name = "Sheet25"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CheckBox1, 10, 1, MSForms, CheckBox"
Attribute VB_Control = "ComboBox1, 4, 2, MSForms, ComboBox"
Attribute VB_Control = "Image1, 7, 3, MSForms, Image"
Attribute VB_Control = "Image2, 8, 4, MSForms, Image"

Private Sub Worksheet_Activate()
'update SOS based on NA.ACLM.PMT

If ActiveWorkbook.Sheets.Count = 1 Then
    'don't update standalone SOS
Else
    Call UpdateSOS1
    Call UpdateSOS2
    Call UpdateSOS3
End If



End Sub

Private Sub CheckBox1_Click()
'update SOS based Candian French checkbox

    Call UpdateSOS1
    Call UpdateSOS2
    Call UpdateSOS3

End Sub


Sub UpdateSOS1()
'Reveals or hides opaque rectangles covering PD summary and GE/GP/EE summary

Application.ScreenUpdating = False

With ActiveSheet

    .Unprotect
    
    If .[L13] = "" And .[L14] > 0 Then .[L13] = Date 'add Date Issued if cell is blank
    
    If .[E18] > 0 Then 'PD
        .Shapes.Range(Array("Image2")).Visible = False
    Else
        .Shapes.Range(Array("Image2")).Visible = True
    End If
    
    If .[L18] > 0 Then 'TE
        .Shapes.Range(Array("Image1")).Visible = False
    Else
        .Shapes.Range(Array("Image1")).Visible = True
    End If

    If Worksheets("NA.ACLM.PMT").CheckBox1.Value = True Then 'Pay 100%
        .[L14] = "=+E23"
        .[P14] = "<|fffd| Paying 100%"
    Else
        .[L14] = "=+E23*FM_Percent"
        .[P14] = ""
    End If
    
    
    If [NAACLM_DedType] = "Taken" Then
        [I23] = "Deductible taken on Claim ID: " & [NAACLM_DedTaken]
    Else
        [I23] = ""
    End If
    
    .Protect

End With


   
Application.ScreenUpdating = True

End Sub


Sub UpdateSOS3()

'Occurrence deductible ClaimID present

   
If [NAACLM_DedTaken] <> "" Then
    
    With Worksheets("NA.ACLM.SOS")
        .Unprotect
        .Range("B19") = "Deductible:*"
        .Range("I19") = "Deductible:*"
        .Range("B25") = "*Occurrence deductible taken on Claim ID: " & [NAACLM_DedTaken]
        If CheckBox1 Then [B25] = "*Franchise affect|fffd|e au sinistre: " & [NAACLM_DedTaken]
        .Protect
    End With
Else
    With Worksheets("NA.ACLM.SOS")
        .Unprotect
        .Range("B19") = "Deductible:"
        .Range("I19") = "Deductible:"
        .Range("B25") = ""
        .Protect
    End With
End If


End Sub

Sub UpdateSOS2()

Dim TypePD As String
Dim TypeGEGP As String
Dim TypeEE As String
Dim TypePDf As String
Dim TypeGEGPf As String
Dim TypeEEf As String

Application.ScreenUpdating = False
ActiveSheet.Unprotect


    TypePD = Worksheets("NA.ACLM.PMT").Range("D52")
    TypeGEGP = Worksheets("NA.ACLM.PMT").Range("D56")
    TypeEE = Worksheets("NA.ACLM.PMT").Range("D60")
    
    'Translate payment types from English to French
    Select Case TypePD
        Case "[Select Payment Type]"
            TypePDf = ""
            TypePD = ""
        Case "Final"
            TypePDf = "Finale"
        Case "Partial"
            TypePDf = "Partiel"
        Case "Advance"
            TypePDf = "Anticip|fffd|"
        Case "Supplemental"
            TypePDf = "Suppl|fffd|mentaire"
        Case "ACV"
            TypePDf = "Valeur au jour des sinistres"
    End Select
    
    Select Case TypeGEGP
        Case "[Select Payment Type]"
            TypeGEGPf = ""
            TypeGEGP = ""
        Case "Final"
            TypeGEGPf = "Finale"
        Case "Partial"
            TypeGEGPf = "Partiel"
        Case "Advance"
            TypeGEGPf = "Anticip|fffd|"
        Case "Supplemental"
            TypeGEGPf = "Suppl|fffd|mentaire"
        Case "ACV"
            TypeGEGPf = "Valeur au jour des sinistres"
    End Select
    
    Select Case TypeEE
        Case "[Select Payment Type]"
            TypeEEf = ""
            TypeEE = ""
        Case "Final"
            TypeEEf = "Finale"
        Case "Partial"
            TypeEEf = "Partiel"
        Case "Advance"
            TypeEEf = "Anticip|fffd|"
        Case "Supplemental"
            TypeEEf = "Suppl|fffd|mentaire"
        Case "ACV"
            TypeEEf = "Valeur au jour des sinistres"
    End Select


If CheckBox1.Value = True Then
    'apply French labels to form
    
    [A6] = "D|fffd|CLARATION DE R|fffd|GLEMENT DE SINISTRE"
    [A7] = "=""Couverture par la police no. "" & PolicyNo"
    [B9] = "Assur|fffd|:"
    [B10] = "|fffd|tablissement:"
    [B11] = "No. du sinistre:"
    [B12] = "No. de r|fffd|clamation:"
    [B13] = "Rapport|fffd| le:"
    [B14] = "Date du sinistre:"
    [B18] = "Dommages mat|fffd|riels (PD):"
    [B19] = "Franchise:"
    [B20] = "Paiements ant|fffd|rieurs:"
    [B23] = "Total:"
    
    [B21] = "PD " & TypePDf & ":"
    
    If [B25] <> "" Then [B25] = "Franchise affect|fffd|e au sinistre: " & [NAACLM_DedTaken]
    
    If TypeGEGPf <> "" And TypeEEf <> "" Then
        [I21] = "TE " & TypeGEGPf & "/" & TypeEEf & ":"
    ElseIf TypeGEGPf <> "" And TypeEEf = "" Then
        [I21] = "TE " & TypeGEGPf & ":"
    ElseIf TypeGEGPf = "" And TypeEEf <> "" Then
        [I21] = "TE " & TypeEEf & ":"
    End If
    
    If Left(Worksheets("cover").Range("Company"), 1) = "A" Then
        [B24] = "= IF(FM_Percent<1,""Participation de "" & FM_Percent*100 & ""% d'"" & Company & "": "" & TEXT((E21 + L21)*FM_Percent,""$ #,###.00""),"""")"
    Else
        [B24] = "= IF(FM_Percent<1,""Participation de "" & FM_Percent*100 & ""% de "" & Company & "": "" & TEXT((E21 + L21)*FM_Percent,""$ #,###.00""),"""")"
    End If
    

    [B26] = "Payable |fffd|:"
    [B31] = [B60]
    [B38] = "La loi exige que la d|fffd|claration suivante tous les formulaires de r|fffd|clamation:"
    [I18] = "Dommages immat|fffd|riels (TE):"
    [I19] = "Franchise:"
    [I20] = "Paiements ant|fffd|rieurs:"
    [I28] = "Expertise par:"
    [J11] = "No. d'assur|fffd|:"
    [J12] = "No. de dossier:"
    [J13] = "Date d'|fffd|mission:"
    [J14] = "Montant:"

Else
    'apply English labels to form
    [A6] = "STATEMENT OF SETTLEMENT OF LOSS"
    [A7] = "=""Paid under Policy No. "" & PolicyNo"
    [B9] = "Insured:"
    [B10] = "Location:"
    [B11] = "Loss ID:"
    [B12] = "Claim ID:"
    [B13] = "Reported Date:"
    [B14] = "Date of Loss:"
    
    [B18] = "Property Damage (PD):"
    [B19] = "Deductible:"
    [B20] = "Previous Payment:"

    [B21] = TypePD & " PD:"
    
    If TypeGEGP <> "" And TypeEE <> "" Then
        [I21] = TypeGEGP & "/" & TypeEE & " TE:"
    ElseIf TypeGEGP <> "" And TypeEE = "" Then
        [I21] = TypeGEGP & " TE:"
    ElseIf TypeGEGP = "" And TypeEE <> "" Then
        [I21] = TypeEE & " TE:"
    End If
    
    [B24] = "= IF(FM_Percent<1,Company & ""'s "" & FM_Percent*100 & ""% participation: ""&TEXT((E21 + L21)*FM_Percent,""$ #,###.00""),"""")"
    [B23] = "Total:"
    [B26] = "Payable to:"
    [B31] = [B50]
    [B38] = "State/provinical law requires the following wording on all claim forms:"
    [I18] = "Time Element (TE):"
    [I19] = "Deductible:"
    [I20] = "Previous Payment:"
    [I28] = "Adjusted by:"
    [J11] = "Account No.:"
    [J12] = "Index No.:"
    [J13] = "Date Issued:"
    [J14] = "Amount Paid:"

End If

[E3].Select
ActiveSheet.Protect
Application.ScreenUpdating = True
End Sub


Private Sub ComboBox1_Click()
'Include/Omit Fraud Wording drop-down list box

Dim MyActiveCell As String
Const Hyper As String = "http://contentstreamer/GetContent.aspx?docbase=ECM_Prod&token=090f1aae8050e53d"
'Const Hyper As String = "http://www.google.ca/" 'for testing purposes

Application.ScreenUpdating = False
On Error Resume Next

With ActiveSheet

    .Unprotect
      
    If ComboBox1.Value = "Omit fraud wording" Then
        .Rows("37:39").Select
        Selection.EntireRow.Hidden = True
        .Range("E3").Select
    Else
        .Rows("37:39").Select
        Selection.EntireRow.Hidden = False
        
        ActiveWindow.SmallScroll Down:=30
        .Range("FraudWordingACLM").Select
        ThisWorkbook.FollowHyperlink Address:=Hyper, NewWindow:=True
    End If

    .Protect
End With

Application.ScreenUpdating = True

End Sub



Attribute VB_Name = "Sheet26"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CheckBox1, 4, 0, MSForms, CheckBox"
Attribute VB_Control = "Image2, 3, 1, MSForms, Image"
Attribute VB_Control = "Image1, 2, 2, MSForms, Image"
Attribute VB_Control = "ComboBox1, 1, 3, MSForms, ComboBox"
Private Sub Worksheet_Activate()
'update SOS based on NA.CLM.PMT

Call UpdateSOS1
Call UpdateSOS2
Call UpdateSOS3

End Sub


Private Sub CheckBox1_Click()
'update SOS based Candian French checkbox

Call UpdateSOS1
Call UpdateSOS2
Call UpdateSOS3

End Sub

Private Sub ComboBox1_Click()
'Include/Omit Fraud Wording drop-down list box

Dim MyActiveCell As String
Const Hyper As String = "http://contentstreamer/GetContent.aspx?docbase=ECM_Prod&token=090f1aae8050e53d"
'Const Hyper As String = "http://www.google.ca/" 'for testing purposes

Application.ScreenUpdating = False
On Error Resume Next

With ActiveSheet

    .Unprotect
      
    If ComboBox1.Value = "Omit fraud wording" Then
        .Rows("37:39").Select
        Selection.EntireRow.Hidden = True
        .Range("E3").Select
    Else
        .Rows("37:39").Select
        Selection.EntireRow.Hidden = False
        
        ActiveWindow.SmallScroll Down:=30
        .Range("FraudWordingCLM").Select
        ThisWorkbook.FollowHyperlink Address:=Hyper, NewWindow:=True
    End If

    .Protect
End With

Application.ScreenUpdating = True

End Sub

Sub UpdateSOS3()

'Occurrence deductible ClaimID present
If Worksheets("NA.CLM.PMT").Range("NADedTaken") = "" Then
    With Worksheets("NA.CLM.SOS")
        .Unprotect
        .Range("B19") = "Deductible:"
        .Range("I19") = "Deductible:"
        .Range("B25") = ""
        .Protect
    End With
Else
    With Worksheets("NA.CLM.SOS")
        .Unprotect
        .Range("B19") = "Deductible:*"
        .Range("I19") = "Deductible:*"
        .Range("B25") = "*Occurrence deductible taken on Claim ID: " & [NADedTaken]
        .Protect
    End With
End If

End Sub

Sub UpdateSOS1()
'Reveals or hides opaque rectangles covering PD summary and GE/GP/EE summary

Application.ScreenUpdating = False

With ActiveSheet

    .Unprotect
    
    If .[L13] = "" And .[L14] > 0 Then .[L13] = Date 'add Date Issued if cell is blank and Amount Paid is greater than zero

    If .[E18] > 0 Then 'PD
        .Shapes.Range(Array("Image2")).Visible = False
    Else
        .Shapes.Range(Array("Image2")).Visible = True
    End If
    
    If .[L18] > 0 Then 'TE
        .Shapes.Range(Array("Image1")).Visible = False
    Else
        .Shapes.Range(Array("Image1")).Visible = True
    End If
    
  
    .Protect

End With
   
Application.ScreenUpdating = True

End Sub


Sub UpdateSOS2()
'Updates labels to reflect English or Canadian French option

Dim TypePD As String
Dim TypeGEGP As String
Dim TypeEE As String
Dim TypePDf As String
Dim TypeGEGPf As String
Dim TypeEEf As String

Application.ScreenUpdating = False
ActiveSheet.Unprotect

TypePD = Worksheets("NA.CLM.PMT").Range("F53")
TypeGEGP = Worksheets("NA.CLM.PMT").Range("H53")
TypeEE = Worksheets("NA.CLM.PMT").Range("J53")

'Translate payment types from English to French
Select Case TypePD
    Case "Final"
        TypePDf = "Finale"
    Case "Partial"
        TypePDf = "Partiel"
    Case "Advance"
        TypePDf = "Anticip|fffd|"
    Case "Supplemental"
        TypePDf = "Suppl|fffd|mentaire"
    Case "ACV"
        TypePDf = "Valeur au jour des sinistres"
End Select

Select Case TypeGEGP
    Case "Final"
        TypeGEGPf = "Finale"
    Case "Partial"
        TypeGEGPf = "Partiel"
    Case "Advance"
        TypeGEGPf = "Anticip|fffd|"
    Case "Supplemental"
        TypeGEGPf = "Suppl|fffd|mentaire"
    Case "ACV"
        TypeGEGPf = "Valeur au jour des sinistres"
End Select

Select Case TypeEE
    Case "Final"
        TypeEEf = "Finale"
    Case "Partial"
        TypeEEf = "Partiel"
    Case "Advance"
        TypeEEf = "Anticip|fffd|"
    Case "Supplemental"
        TypeEEf = "Suppl|fffd|mentaire"
    Case "ACV"
        TypeEEf = "Valeur au jour des sinistres"
End Select


If CheckBox1.Value = True Then
'apply French labels to form

    [A6] = "D|fffd|CLARATION DE R|fffd|GLEMENT DE SINISTRE"
    [A7] = "=""Couverture par la police no. "" & PolicyNo"
    [B9] = "Assur|fffd|:"
    [B10] = "|fffd|tablissement:"
    [B11] = "No. du sinistre:"
    [B12] = "No. de r|fffd|clamation:"
    [B13] = "Rapport|fffd| le:"
    [B14] = "Date du sinistre:"
    '[B15] = "No. d'emplacement:" 'removed
    [B18] = "Dommages mat|fffd|riels (PD):"
    [B19] = "Franchise:"
    [B20] = "Paiements ant|fffd|rieurs:"
    [B21] = "PD " & TypePDf & ":"
    [B23] = "Total:"
    If Worksheets("NA.CLM.PMT").CheckBox1.Value = True Then 'Pay 100%
        If Left(Worksheets("cover").Range("Company"), 1) = "A" Then
            [B24] = "= IF(FM_Percent<1,""Participation de "" & FM_Percent*100 & ""% d'"" & Company & "": "" & TEXT((NA.CLM.PMT!F51+NA.CLM.PMT!H51+NA.CLM.PMT!J51)*FM_Percent,""$ #,###.00""),"""")"
        Else
            [B24] = "= IF(FM_Percent<1,""Participation de "" & FM_Percent*100 & ""% de "" & Company & "": "" & TEXT((NA.CLM.PMT!F51+NA.CLM.PMT!H51+NA.CLM.PMT!J51)*FM_Percent,""$ #,###.00""),"""")"
        End If
    Else
        If Left(Worksheets("cover").Range("Company"), 1) = "A" Then
            [B24] = "= IF(FM_Percent<1,""Participation de "" & FM_Percent*100 & ""% d'"" & Company & "": "" & TEXT(NA.CLM.PMT!F51+NA.CLM.PMT!H51+NA.CLM.PMT!J51,""$ #,###.00""),"""")"
        Else
            [B24] = "= IF(FM_Percent<1,""Participation de "" & FM_Percent*100 & ""% de "" & Company & "": "" & TEXT(NA.CLM.PMT!F51+NA.CLM.PMT!H51+NA.CLM.PMT!J51,""$ #,###.00""),"""")"
        End If
    End If
    [B26] = "Payable |fffd|:"
    [B31] = [B60]
    [B38] = "La loi exige que la d|fffd|claration suivante tous les formulaires de r|fffd|clamation:"
    [I18] = "Dommages immat|fffd|riels (TE):"
    [I19] = "Franchise:"
    [I20] = "Paiements ant|fffd|rieurs:"
    If TypeGEGPf <> "" And TypeEEf <> "" Then
        [I21] = "TE " & TypeGEGPf & "/" & TypeEEf & ":"
    ElseIf TypeGEGPf <> "" And TypeEEf = "" Then
        [I21] = "TE " & TypeGEGPf & ":"
    ElseIf TypeGEGPf = "" And TypeEEf <> "" Then
        [I21] = "TE " & TypeEEf & ":"
    End If
    [I28] = "Expertise par:"
    
    [J11] = "No. d'assur|fffd|:"
    [J12] = "No. de dossier:"
    [J13] = "Date d'|fffd|mission:"
    [J14] = "Montant:"

Else


'apply English labels to form
    [A6] = "STATEMENT OF SETTLEMENT OF LOSS"
    [A7] = "=""Paid under Policy No. "" & PolicyNo"
    [B9] = "Insured:"
    [B10] = "Location:"
    [B11] = "Loss ID:"
    [B12] = "Claim ID:"
    [B13] = "Reported Date:"
    [B14] = "Date of Loss:"
    [B15] = ""
    
    [B18] = "Property Damage (PD):"
    [B19] = "Deductible:"
    [B20] = "Previous Payment:"
    ''''''''''''''''''''''''''''''''
    [B21] = TypePD & " PD:"
    ''''''''''''''''''''''''''''''''
    [B23] = "Total:"
    
    If Worksheets("NA.CLM.PMT").CheckBox1.Value = True Then 'Pay 100%
        [B24] = "= IF(FM_Percent<1,Company & ""'s "" & FM_Percent*100 & ""% participation: ""&TEXT((NA.CLM.PMT!F51+NA.CLM.PMT!H51+NA.CLM.PMT!J51)*FM_Percent,""$ #,###.00""),"""")"
    Else
        [B24] = "= IF(FM_Percent<1,Company & ""'s "" & FM_Percent*100 & ""% participation: ""&TEXT(NA.CLM.PMT!F51+NA.CLM.PMT!H51+NA.CLM.PMT!J51,""$ #,###.00""),"""")"
    End If
    
    ''''''    [B26] = "Payable to:"
    [B31] = [B50]
    [B38] = "State/provincial law requires the following wording on all claim forms:"
    
    [D15] = ""
    
    [I18] = "Time Element (TE):"
    [I19] = "Deductible:"
    [I20] = "Previous Payment:"
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    If TypeGEGP <> "" And TypeEE <> "" Then
        [I21] = TypeGEGP & "/" & TypeEE & " TE:"
    ElseIf TypeGEGP <> "" And TypeEE = "" Then
        [I21] = TypeGEGP & " TE:"
    ElseIf TypeGEGP = "" And TypeEE <> "" Then
        [I21] = TypeEE & " TE:"
    End If
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    [I28] = "Adjusted by:"
    
    [J11] = "Account No.:"
    [J12] = "Index No.:"
    [J13] = "Date Issued:"
    [J14] = "Amount Paid:"

End If

[E3].Select
ActiveSheet.Protect
Application.ScreenUpdating = True

End Sub




Attribute VB_Name = "Sheet27"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'=====================================================================
' When activated set wording and payment summary
'=====================================================================

Private Sub Worksheet_Change(ByVal Target As Range)
'Runs when user manually changes the value of the Subrogation Amount

Dim Peril As String

'do not update if being attached to an email
If ActiveWorkbook.Sheets.Count = 1 Then GoTo exithere

If Not Intersect(Range("$B$11:$C$11"), Target) Is Nothing Then

If [B11] = "" Then 'user deleted value. Reset to default value

    If Sheets("NA.ACLM.PMT").Visible = True Then
        [B11] = "=NAACLM_AmtPaid"
        SubroAmount = [NAACLM_AmtPaid]
        
    ElseIf Sheets("NA.CLM.PMT").Visible = True Then
        [B11] = "=NACLM_AmtPaid"
        SubroAmount = [NACLM_AmtPaid]
    End If
Else 'user entered a new value. Retain that value
    
    SubroAmount = [NACLM_SubroValue]

End If

'Remove peril code number, if present, from ClaimPeril
Peril = [ClaimPeril]
If IsNumeric(Right(Peril, 1)) Then
    posOf_A = InStr(1, Peril, " - ", vbTextCompare)
    Peril = Left(Peril, posOf_A - 1)
End If


'update paragraph
    String1 = "Received from " & [Company] & " the sum of " & Format(SubroAmount, "$#,##0.00") & _
            " being in full payment of all claims and demands for loss and damage by " & _
            Peril & " on " & Format([DateOfLoss], "mmmm d, yyyy") & _
            " to the property at (SEE BELOW) described in Policy No. " & [PolicyNo] & " issued by said Company."
ActiveSheet.Unprotect
    [NACLM_SubroText1] = String1
ActiveSheet.Protect

End If

exithere:
End Sub


Private Sub Worksheet_Activate()

Dim String1 As String
Dim String2 As String

'do not update if being attached to an email
If ActiveWorkbook.Sheets.Count = 1 Then GoTo exithere

ActiveSheet.Unprotect

'Set the logo to Affiliated FM on active sheet.
If Left([Company], 1) = "A" Then

    With ActiveSheet 'set Affiliate FM logo
        .Shapes("Picture 1").Visible = False
        .Shapes("Picture 2").Visible = True
    End With

Else 'set FM Global logo
    With ActiveSheet
        .Shapes("Picture 1").Visible = True
       .Shapes("Picture 2").Visible = False
    End With
End If


'Set the title to either Subrogation Receipt or Loan Receipt
If Sheets("NA.CLM.PMT").Visible = True Then

    If [NACLM_Subrogation] = "Yes - Obtain Loan Receipt" Then
        [ReceiptTitle] = "LOAN RECEIPT"
    Else
        [ReceiptTitle] = "SUBROGATION RECEIPT"
    End If

ElseIf Sheets("NA.ACLM.PMT").Visible = True Then
    If [NAACLM_Subrogation] = "Yes - Obtain Loan Receipt" Then
        [ReceiptTitle] = "LOAN RECEIPT"
    Else
        [ReceiptTitle] = "SUBROGATION RECEIPT"
    End If
End If


'Refresh body of letter
CompleteParagraph

ActiveSheet.Protect
exithere:
End Sub



Sub CompleteParagraph()

Dim AmountPaid As Currency
Dim String1, Peril As String
Dim posOf_A As Integer

'Correct formulas if necessary
If Sheets("NA.CLM.PMT").Visible = True And [NACLM_SubroValue].HasFormula Then
    If [NACLM_SubroValue].Formula = "=NAACLM_AmtPaid" Then
       [NACLM_SubroValue].Formula = "=NACLM_AmtPaid"
    End If
ElseIf Sheets("NA.ACLM.PMT").Visible = True And [NACLM_SubroValue].HasFormula Then
    If [NACLM_SubroValue].Formula = "=NACLM_AmtPaid" Then
       [NACLM_SubroValue].Formula = "=NAACLM_AmtPaid"
    End If
End If

'Remove peril code number, if present, from ClaimPeril
Peril = [ClaimPeril]
If IsNumeric(Right(Peril, 1)) Then
    posOf_A = InStr(1, Peril, " - ", vbTextCompare)
    Peril = Left(Peril, posOf_A - 1)
End If

'Refresh paragraph wording
SubroAmount = [NACLM_SubroValue]
'update paragraph
    String1 = "Received from " & [Company] & " the sum of " & Format(SubroAmount, "$#,##0.00") & _
            " being in full payment of all claims and demands for loss and damage by " & _
            Peril & " on " & Format([DateOfLoss], "mmmm d, yyyy") & _
            " to the property at (SEE BELOW) described in Policy No. " & [PolicyNo] & " issued by said Company."
ActiveSheet.Unprotect
    [NACLM_SubroText1] = String1
ActiveSheet.Protect

End Sub



            

Attribute VB_Name = "Sheet28"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ComboBox3, 4, 0, MSForms, ComboBox"
Attribute VB_Control = "TextBox1, 3, 1, MSForms, TextBox"
Attribute VB_Control = "ComboBox2, 2, 2, MSForms, ComboBox"
Attribute VB_Control = "ComboBox1, 1, 3, MSForms, ComboBox"
Attribute VB_Control = "TextBox2, 7, 4, MSForms, TextBox"
Attribute VB_Control = "ComboBox4, 9, 5, MSForms, ComboBox"






'===============================================================
' ComboBox control to select sample text.
'===============================================================
Private Sub ComboBox3_DropButtonClick()
    
On Error Resume Next

    [BodyTextACLMfr] = WorksheetFunction.VLookup([WordingACLMfr], Worksheets("Data.1").Range("WordingTableACLMfr"), 3, False)

End Sub



'=====================================================================
' Set SOS wording based on payment method and payee type
'=====================================================================
'Macro button to auto-select wording

Sub SetWordingACLM()

Dim PaymentMethod As String
Dim PayeeType As String
Dim PaymentType As String

PaymentMethod = [ACLMPaymentMethod]
PayeeType = [ACLMPayeeType]
PaymentType = [ACLM_Pmt_Type]

If PaymentMethod = "" Or PayeeType = "" Or PaymentType = "" Then
    MsgBox "Please complete Payment Type, Payment Method and/or Payee Type on INT.ACLM.PMT page."
    GoTo exit_here
End If

'If user selected "Pay 100% regardless of FM participation"
If Sheets("INT.ACLM.PMT").Range("ACLM_pay100percent") = "Yes" Then

    If PaymentMethod = "Cheque" And PayeeType = "Insured" Then
        ComboBox3.Value = "Cheque (100%) to Insured"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "Broker" Then
        ComboBox3.Value = "Cheque (100%) to Broker or other"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Cheque (100%) to World-Reach Partner"
        
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Insured" Then
        ComboBox3.Value = "Bank Transfer (100%) to Insured"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Broker" Then
        ComboBox3.Value = "Bank Transfer (100%) to Broker or other"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bank Transfer (100%) to World-Reach Partner"
        
    ElseIf PaymentMethod = "Bordereau" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bordereau (100%) to World-Reach Partner"
        
End If
End If

'If user does not select "Pay 100% regardless of FM participation"
If Sheets("INT.ACLM.PMT").Range("ACLM_pay100percent") <> "Yes" Then


    If PaymentMethod = "Cheque" And PayeeType = "Insured" Then
        ComboBox3.Value = "Cheque to Insured"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "Broker" Then
        ComboBox3.Value = "Cheque to Broker or other"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Cheque to World-Reach Partner"
        
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Insured" Then
        ComboBox3.Value = "Bank Transfer to Insured"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Broker" Then
        ComboBox3.Value = "Bank Transfer to Broker or other"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bank Transfer to World-Reach Partner"
        
    ElseIf PaymentMethod = "Bordereau" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bordereau to World-Reach Partner"
    Else
        ComboBox3.Value = "[Select sample text]"
        MsgBox "Please manually select appropriate wording."
End If
End If


'Insert text into body of statement
Call ComboBox3_DropButtonClick

exit_here:

End Sub




'=====================================================================
' Drop-down list box to control Void stamp
'=====================================================================

Private Sub ComboBox4_DropButtonClick()
' Control to toggle Void stamp

With ActiveSheet

    If ComboBox4.Value = "Void" Then
        TextBox2.Visible = True
    Else
        TextBox2.Visible = False
    End If

End With

End Sub

'=====================================================================
' On activation sets void stamp based on payment type and void stamp ddlb setting
'=====================================================================

Private Sub Worksheet_Activate()

If [ACLM_Pmt_Type] = "Advance" And ComboBox4.Value = "[Select Void stamp]" Then
    TextBox2.Visible = True
ElseIf ComboBox4.Value = "Void" Then
    TextBox2.Visible = True
Else
    TextBox2.Visible = False
End If

End Sub


'===============================================================
' Drop Down to toggle between FM Global / Affiliated FM logos
'===============================================================

Private Sub ComboBox1_DropButtonClick()

Select Case ComboBox1.Value
    
    Case "[Select logo]"
        'do nothing
    Case "none"
        Shapes("Picture 1").Visible = False
        Shapes("Picture 2").Visible = False
    Case "FM Global"
        Shapes("Picture 1").Visible = True
        Shapes("Picture 2").Visible = False
    Case "AFM"
        Shapes("Picture 1").Visible = False
        Shapes("Picture 2").Visible = True
    End Select

End Sub


'===============================================================
' ComboBox control to select Claims office
'===============================================================

Private Sub ComboBox2_Change()

Dim AddressBlock As String

If ComboBox2.Value = "[Select office]" Then
    GoTo exit01

ElseIf ComboBox2.Value = "none" Then
    AddressBlock = ""

Else
    AddressBlock = [AP2] & vbNewLine & [AP3] & vbNewLine & [AP4] & vbNewLine & [AP5] & _
        vbNewLine & [AP6] & vbNewLine & [AP7] & vbNewLine & [AP8] & vbNewLine & [AP9] & _
        vbNewLine & [AP10] & vbNewLine & [AP11]
End If
  
TextBox1.Text = AddressBlock

exit01:

End Sub
Attribute VB_Name = "Sheet29"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "TextBox1, 3, 0, MSForms, TextBox"
Attribute VB_Control = "ComboBox2, 2, 1, MSForms, ComboBox"
Attribute VB_Control = "ComboBox1, 1, 2, MSForms, ComboBox"

'=====================================================================
' Set date hot cells
'=====================================================================
Private Sub Worksheet_SelectionChange(ByVal Target As Range)

If Target.Address = "$N$12:$P$12" Then Call ShowCal

End Sub


'===============================================================
' Drop Down to toggle between FM Global / Affiliated FM logos
'=============================================================== done

Private Sub ComboBox1_DropButtonClick()

Select Case ComboBox1.Value
    
    Case "[Select logo]"
        'do nothing
    Case "none"
        Shapes("Picture 1").Visible = False
        Shapes("Picture 2").Visible = False
    Case "FM Global"
        Shapes("Picture 1").Visible = True
        Shapes("Picture 2").Visible = False
    Case "AFM"
        Shapes("Picture 1").Visible = False
        Shapes("Picture 2").Visible = True
    End Select

End Sub

'=====================================================================
' Drop-down list box to control Void stamp
'=====================================================================

Private Sub ComboBox2_DropButtonClick()
' Control to toggle Void stamp

With ActiveSheet

    If ComboBox2.Value = "Void" Then
        TextBox1.Visible = True
    Else
        TextBox1.Visible = False
    End If

End With

End Sub

'=====================================================================
' On activation sets void stamp based on payment type and void stamp ddlb setting
'=====================================================================

Private Sub Worksheet_Activate()

If [bbPaymentType] = "Advance" And ComboBox2.Value = "[Select Void stamp]" Then
    TextBox1.Visible = True
ElseIf ComboBox2.Value = "Void" Then
    TextBox1.Visible = True
Else
    TextBox1.Visible = False
End If

End Sub


Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

'=====================================================================
' Set date hot cells
'=====================================================================

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

If Target.Address = "$H$5:$J$5" Then Call ShowCal

End Sub


Sub SpellCheckLossDescription()
' Spell Check Cover Description

ActiveSheet.Unprotect
Union(Range("LossDescription"), Range("LossCaption")).CheckSpelling
ActiveSheet.Protect
End Sub

Attribute VB_Name = "Sheet30"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Label1, 5, 0, MSForms, Label"
Attribute VB_Control = "ComboBox3, 4, 1, MSForms, ComboBox"
Attribute VB_Control = "TextBox1, 3, 2, MSForms, TextBox"
Attribute VB_Control = "ComboBox2, 2, 3, MSForms, ComboBox"
Attribute VB_Control = "ComboBox1, 1, 4, MSForms, ComboBox"
'=====================================================================
' On activation sets SOS wording and hides/unhides location name row
'=====================================================================

Private Sub Label1_Click()

End Sub

Private Sub Worksheet_Activate()

[IntLC_Amount] = Format([IntLC_Total], "#,##0")

'Hide blank row if there is no local name
If Worksheets("Cover").Range("LocationName") = "" Then
    Rows("20").EntireRow.Hidden = True
Else
    Rows("20").EntireRow.Hidden = False
End If
    
End Sub

'=====================================================================
' Sets SOS wording based on payment method and payee type
'=====================================================================
Sub SetWordingLC() 'Called by macro button

PaymentMethod = [bbPaymentMethod]
PayeeType = [bbPayeeType]

If PaymentMethod = "" Or PayeeType = "" Then
    MsgBox "Please complete Payment Method and Payee Type on INT.LC.PMT page."
    GoTo exit_here
End If

    If PaymentMethod = "Cheque" And PayeeType = "Insured" Then
        ComboBox3.Value = "Cheque to Insured"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "Broker" Then
        ComboBox3.Value = "Cheque to Broker or other"
    ElseIf PaymentMethod = "Cheque" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Cheque to World-Reach Partner"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Insured" Then
        ComboBox3.Value = "Bank Transfer to Insured"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "Broker" Then
        ComboBox3.Value = "Bank Transfer to Broker or other"
    ElseIf PaymentMethod = "Bank Transfer" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bank Transfer to World-Reach Partner"
    ElseIf PaymentMethod = "Bordereau" And PayeeType = "World-Reach Partner" Then
        ComboBox3.Value = "Bordereau to World-Reach Partner"
    ElseIf PaymentMethod = "Cheque" Then
        ComboBox3.Value = "Cheque to Broker or other"
    ElseIf PaymentMethod = "Bank Transfer" Then
        ComboBox3.Value = "Bank Transfer to Broker or other"
    Else
        ComboBox3.Value = "[Select sample text]"
        MsgBox "Please manually select appropriate wording."
End If

'Insert text into body of statement
Call ComboBox3_DropButtonClick

exit_here:
End Sub



'===============================================================
' Drop Down to toggle between FM Global / Affiliated FM logos
'=============================================================== done

Private Sub ComboBox1_DropButtonClick()

Select Case ComboBox1.Value
    
    Case "[Select logo]"
        'do nothing
    Case "none"
        Shapes("Picture 1").Visible = False
        Shapes("Picture 2").Visible = False
    Case "FM Global"
        Shapes("Picture 1").Visible = True
        Shapes("Picture 2").Visible = False
    Case "AFM"
        Shapes("Picture 1").Visible = False
        Shapes("Picture 2").Visible = True
    End Select

End Sub


'===============================================================
' ComboBox control to select Claims office
'=============================================================== done

Private Sub ComboBox2_Change()

Dim AddressBlock As String

If ComboBox2.Value = "[Select office]" Then
    GoTo exit01

ElseIf ComboBox2.Value = "none" Then
    AddressBlock = ""

Else
    AddressBlock = [AP2] & vbNewLine & [AP3] & vbNewLine & [AP4] & vbNewLine & [AP5] & _
        vbNewLine & [AP6] & vbNewLine & [AP7] & vbNewLine & [AP8] & vbNewLine & [AP9] & _
        vbNewLine & [AP10] & vbNewLine & [AP11]
End If
  
Worksheets("INT.LC.LET").TextBox1.Text = AddressBlock

exit01:

End Sub


'===============================================================
' ComboBox control to select sample text.
'=============================================================== wip
Private Sub ComboBox3_DropButtonClick()

Application.ScreenUpdating = False

If ComboBox3.Value = "[Select sample text]" Then
    [BodyText1] = ""
    [BodyText2] = ""
Else

    [BodyText1] = WorksheetFunction.VLookup([WordingLC], Worksheets("Data.1").Range("WordingTable2"), 2, False)

    'Default second paragraph wording
    [BodyText2] = [LCParagraph21]

    'Exceptions:
    If InStr([WordingLC], "World") <> 0 Then [BodyText2] = [LCParagraph22]
    If InStr([WordingLC], "Broker") <> 0 Then [BodyText2] = [LCParagraph23]
    If [bbPaymentType] = "Advance" And [bbPayeeType] = "World-Reach Partner" Then [BodyText2] = ""

End If

Application.ScreenUpdating = True
    
End Sub



'=====================================================================
' Makes office worksheet visible for editing
'=====================================================================

Sub EditOffices()

Sheets("Offices").Visible = True
Sheets("Offices").Activate
Sheets("Offices").Range("C3").Select
End Sub

'=====================================================================
' Returns user to previous form
'=====================================================================

Sub ReturnFromOffices()

Sheets("Offices").Visible = False
Sheets("Start").Activate
Sheets("Start").Range("A1").Select
End Sub







Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


'=====================================================================
' Set date hot cells
'=====================================================================

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

If Target.Column = 5 And Target.Row > 9 Then ShowCal
'If Target.Address = "$A$9" Then Call HideColumn
'If Target.Address = "$B$9" Then Call HideColumn
If Target.Address = "$C$9" Then Call HideColumn
If Target.Address = "$D$9" Then Call HideColumn
If Target.Address = "$E$9" Then Call HideColumn
If Target.Address = "$F$9" Then Call HideColumn
'If Target.Address = "$G$9" Then Call HideColumn
'If Target.Address = "$H$9" Then Call HideColumn
'If Target.Address = "$I$9" Then Call HideColumn
If Target.Address = "$J$9" Then Call HideColumn
If Target.Address = "$K$9" Then Call HideColumn
If Target.Address = "$L$9" Then Call HideColumn
  
End Sub

Sub HideColumn()

Dim Response As Variant
Response = MsgBox("Hide '" & ActiveCell.Value & "' column?", vbYesNo)
If Response = vbYes Then
    ActiveSheet.Unprotect
    ActiveCell.EntireColumn.Hidden = True
    ActiveSheet.Protect
    ActiveCell.Offset(1, -1).Select
Else
    ActiveCell.Offset(1, 0).Select
End If

End Sub


Sub InsertRow()
'Inserts row above active cell

On Error Resume Next
ActiveSheet.Unprotect

If ActiveCell.Row > [SS_Start].Row And ActiveCell.Row < [SS_End].Row - 1 Then
    ActiveCell.Offset(1, 0).EntireRow.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
    ActiveCell.Offset(1, 0).Select
Else
    [SS_End].Offset(-1, 0).Select
    ActiveCell.EntireRow.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
End If

ActiveSheet.Protect

End Sub

Sub DeleteRow()
'Deletes selected rows

Dim Response As Variant
Dim SAddress As String

ActiveSheet.Unprotect

'Move to last row in spreadsheet if selection is outside deletion area
If ActiveCell.Row <= [SS_Start].Row Or ActiveCell.Row >= [SS_End].Row - 1 Then [SS_End].Offset(-2, 0).Select
SAddress = Selection.Address

'Do nothing if only one row remaining
If ActiveCell.Row = [SS_Start].Row + 1 And ActiveCell.Row = [SS_End].Row - 2 Then GoTo exithere

'Ask for confirmation if selected rows contain data
If Application.WorksheetFunction.CountA(Selection.EntireRow) > 0 Then
    response0 = MsgBox("Warning: The selected rows contain data." & vbNewLine & vbNewLine & "Click ""OK"" to confirm deletion, or otherwise ""Cancel""", vbOKCancel)
    If response0 = vbCancel Then GoTo exithere
End If

'Delete rows of selected cells
Range(SAddress).Select
Selection.EntireRow.Delete
If ActiveCell.Row = [SS_End].Row - 1 Then
    ActiveCell.Offset(-1, 0).Select
Else
    ActiveCell.Offset(0, 0).Select
End If

exithere:

ActiveSheet.Protect
End Sub


Sub UnhideCols()
ActiveSheet.Unprotect
Columns("A:L").Hidden = False
ActiveSheet.Protect
End Sub


Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CheckBox1, 23, 0, MSForms, CheckBox"


Private Sub Worksheet_SelectionChange(ByVal Target As Range)

'=====================================================================
' Set date hot cells
'=====================================================================

If Target.Address = "$H$11:$I$11" Then Call ShowCal
If Target.Address = "$H$12:$I$12" Then Call ShowCal

If Target.Address = "$P$24:$Q$24" Then Call ClearAllDeductibles

If Target.Address = "$P$9:$Q$9" Then Call ShowCal
If Target.Address = "$P$10:$Q$10" Then Call ShowCal

If Target.Address = "$F$24:$G$24" Then Call RestoreFormulas

If Target.Address = "$I$29:$J$29" Then Call ClearCombinedDeductible
If Target.Address = "$M$29:$O$29" Then Call ClearCombinedDeductible

End Sub

'=====================================================================
' Restore formulas in payment summary if overwritten
'=====================================================================
Sub RestoreFormulas()
' Restore formulas in Claim Summary table

Application.ScreenUpdating = False
ActiveSheet.Unprotect

'Can't update formulas if the worksheet been modified
If [$F$27] <> "Total Claim: " Then
    MsgBox "Unable to restore formulas as number of rows or has have changed"
    GoTo continue1
       
'Does an occurrence deductible reference exist?
ElseIf [bbOccDedClaimID] <> "" Then
    result = MsgBox("Do you wish to clear the occurrence deductible Claim ID reference and enter " & _
    "a combined deductible?", vbYesNo)
    If result = vbNo Then
        [$F$24:$G$24].Locked = True
    Else
        GoTo continue2
    End If

'do formulas for combined deductible exist?
ElseIf [bbDeductiblePD].HasFormula And [bbDeductibleTE].HasFormula Then
        'do nothing
        GoTo continue1

'Do separate deductibles exist?
ElseIf [bbDeductiblePD] <> "" Or [bbDeductibleTE] <> "" Then
    result = MsgBox("Do you wish to clear the separate deductible(s) and enter " & _
    "a combined deductible?", vbYesNo)
    If result = vbNo Then
        [$F$24:$G$24].Locked = True 'protect combined ded
        GoTo continue1
    Else
        GoTo continue2
    End If

'Are sep deductibles and occurrence reference blank?
ElseIf [bbDeductiblePD] = "" And [bbDeductibleTE] = "" And [bbOccDedClaimID] = "" Then
    GoTo continue2

continue2:

'Go ahead and update formulas
    [bbDeductiblePD] = "=IF(bbTotalPD=0,"""",bbCombDed*(bbTotalPD/(bbTotalPD+bbTotalTE)))" '''
    [bbDeductibleTE] = "=IF(bbTotalTE=0,"""",bbCombDed*(bbTotalTE/(bbTotalPD+bbTotalTE)))" '''
    [bbOccDedClaimID] = ""
    [$P$24:$Q$24].Locked = True
    [$F$24:$G$24].Locked = False 'unprotect combined ded

End If

continue1:
ActiveSheet.Protect
Application.ScreenUpdating = True

End Sub

'=====================================================================
' Clear All Deductibles
'=====================================================================
Sub ClearAllDeductibles()

Dim result As Variant

ActiveSheet.Unprotect

If [bbCombDed] = 0 And [bbDeductiblePD] = 0 And [bbDeductibleTE] = 0 Then
    [$P$24:$Q$24].Locked = False

ElseIf [bbCombDed] = "" And [bbDeductiblePD] = "" And [bbDeductibleTE] = "" Then
    [$P$24:$Q$24].Locked = False

Else
    result = MsgBox("Do you wish to clear the deductible(s) and enter an occurrence deductible " & _
    "Claim ID reference?", vbYesNo)
    If result = vbYes Then
        [$P$24:$Q$24].Locked = False
        [bbCombDed] = ""
        [bbDeductiblePD] = ""
        [bbDeductibleTE] = ""

    Else
        [$P$24:$Q$24].Locked = True
    End If
End If

ActiveSheet.Protect

End Sub


'=====================================================================
' Clear Combined Deductible (User entered separate deductible)
'=====================================================================
Sub ClearCombinedDeductible()

Dim result As Variant

ActiveSheet.Unprotect

If [bbOccDedClaimID] <> "" Then
    result = MsgBox("Do you wish to clear the occurrence deductible Claim ID reference and enter " & _
    "a separate deductible?", vbYesNo)
    If result = vbYes Then
        [bbOccDedClaimID] = ""
        [$P$24:$Q$24].Locked = True
        [$I$29:$J$29].Locked = False
        [$M$29:$O$29].Locked = False
    Else
        [$P$24:$Q$24].Locked = False
        [$I$29:$J$29].Locked = True
        [$M$29:$O$29].Locked = True
    End If

ElseIf [bbCombDed] = "" Then
        If [bbDeductiblePD].HasFormula Then [bbDeductiblePD] = ""
        If [bbDeductibleTE].HasFormula Then [bbDeductibleTE] = ""
        [$I$29:$J$29].Locked = False
        [$M$29:$O$29].Locked = False
Else
    result = MsgBox("Do you wish to clear the Combined deductible and enter Separate deductibles?", vbYesNo)
    If result = vbYes Then
        [bbCombDed] = ""
        If [bbDeductiblePD].HasFormula Then [bbDeductiblePD] = ""
        If [bbDeductibleTE].HasFormula Then [bbDeductibleTE] = ""
        [$I$29:$J$29].Locked = False
        [$M$29:$O$29].Locked = False
    Else
        [$I$29:$J$29].Locked = True
        [$M$29:$O$29].Locked = True
    End If
End If

ActiveSheet.Protect

End Sub

Sub CheckBox1_Click()
'Pay 100% checkbox

Application.EnableEvents = False
Application.ScreenUpdating = False
ActiveSheet.Unprotect

If CheckBox1 = True Then 'User checked "Pay 100%"
        
'Pay 100%
    [E33] = "Paying 100% |fffd|>"
    [I33] = "=I30"
    [M33] = "=M30"
        
    'update SOS
    With Worksheets("INT.LC.SOS")
        .Range("IntLC_Total") = "=eeTotalNetOfAdvance"
        .Range("B42") = "Total Payment (100%)"
    End With
    
    Worksheets("INT.LC.LET").Shapes("Label1").Visible = True

Else 'User unchecked "Pay 100%"

    [E33] = ""
    [I33] = "=I32"
    [M33] = "=M32"
    
    'Update SOS
    With Worksheets("INT.LC.SOS")
        .Range("IntLC_Total") = "=O41"
        .Range("B42") = "Total Payment"
    End With
    
    Worksheets("INT.LC.LET").Shapes("Label1").Visible = False

End If

[Q33].Select
ActiveSheet.Protect
Application.ScreenUpdating = True
Application.EnableEvents = True

End Sub











Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

'=====================================================================
' Set date hot cells
'=====================================================================

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

If Target.Address = "$G$47:$H$47" Then Call ShowCal
If Target.Address = "$G$48:$H$48" Then Call ShowCal
If Target.Address = "$G$49:$H$49" Then Call ShowCal

If Target.Address = "$R$8:$S$8" Then Call ShowCal


If Target.Address = "$Q$46:$S$46" Then Call ShowCal
If Target.Address = "$Q$47:$S$47" Then Call ShowCal
If Target.Address = "$Q$48:$S$48" Then Call ShowCal
If Target.Address = "$Q$49:$S$49" Then Call ShowCal
If Target.Address = "$Q$50:$S$50" Then Call ShowCal

If Target.Address = "$Q$54:$S$54" Then Call ShowCal
If Target.Address = "$Q$55:$S$55" Then Call ShowCal
If Target.Address = "$Q$56:$S$56" Then Call ShowCal

End Sub

Sub test()

Shapes("Drop Down 18").Delete

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True





Private Sub Workbook_BeforeClose(Cancel As Boolean)

On Error Resume Next

If Left(ActiveWorkbook.Name, 4) = "Temp" Then
    msg1 = MsgBox("Workbook has not been saved. Are you sure you want to exit?", vbYesNo + vbCritical, "Question")
    If msg1 = vbNo Then
        Cancel = True
        Exit Sub
    Else
    'Continue
    End If
End If

Kill FileToDelete 'Delete temporary file if possible

End Sub

Private Sub Workbook_Open()

On Error Resume Next

    'Update Start sheet with name of active printer
    Call UpdateActivePrinter
    
    'Enable outlining with protected sheets
    With Worksheets("NA.ACLM.PMT")
      .Protect Password:="", UserInterfaceOnly:=True
      .EnableOutlining = True
    End With
    
    With Worksheets("NA.ALAE.PMT")
      .Protect Password:="", UserInterfaceOnly:=True
      .EnableOutlining = True
    End With
    
        With Worksheets("INT.ACLM.PMT")
      .Protect Password:="", UserInterfaceOnly:=True
      .EnableOutlining = True
    End With
    
        With Worksheets("INT.ALAE.PMT")
      .Protect Password:="", UserInterfaceOnly:=True
      .EnableOutlining = True
    End With
    
If ActiveWorkbook.Path = "" Then MsgBox "To begin using this workbook click on [Import ILN Data] under ""Tasks""."
    
End Sub

Private Sub Workbook_BeforeSave _
               (ByVal SaveAsUI As Boolean, Cancel As Boolean)

If SaveAsUI = True Then
    If ActiveWorkbook.Path = "" Then
        M1 = MsgBox("Please import ILN data before saving the workbook.", vbOK, "Warning!")
        Cancel = True
    Else
        Cancel = True
        PreferredWorkbookName = "Payments_" & Worksheets("Cover").Range("ClaimID")
        fName = Application.GetSaveAsFilename(InitialFileName:=PreferredWorkbookName, _
            fileFilter:="Excel Macro-Enabled Workbook (*.xlsm), *.xlsm")
        If fName <> "False" Then
           ThisWorkbook.SaveAs fName
        Else
            MsgBox "Workbook not saved" 'Delete Temp File on workbook close
        End If
    End If
End If

End Sub
















Attribute VB_Name = "clsCalendar"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'=====================================================================
' The following code supports the custom calendar control
'=====================================================================

Option Explicit

Private mDisplayMonth As Date
Private mStartDate As Date
Private mSelectedDate As Date
Public sngX As Single
Public sngY As Single
Dim mForm As Object
'VBA Bug: use "As Object" for late binding; "As MSForms.UserForm" won't work
Private mBoundControl As Object

Public Property Set Form(BoundControl As Object, myUserform As Object)   'tie the class to a specific form

'Check somehow to make sure the form has the required controls...
On Error GoTo Catch
    Dim mask As Integer
    Dim ctrl As Control
    For Each ctrl In myUserform.Controls
        If ctrl.Name = "FrameCalendar" Then
            mask = mask Or 1  '01
        ElseIf ctrl.Name = "LabelClickArea" Then
            mask = mask Or 2  '10 in binary
        End If
        If mask = 3 Then Exit For   'both bits set is 11, or 3 in non-binary
    Next
    If mask <> 3 Then Err.Raise vbObjectError, "clsCalendar > Property Set Form", _
        "'" & myUserform.Name & "' is missing required calendar controls."
'Form looks like it has the right controls, continue:
    Set mForm = myUserform
    Set mBoundControl = BoundControl
    With mForm
        With .LabelUpDown
            With .Font
                .Name = "Marlett"
                .Size = 11
                .Charset = 2
            End With
            .Caption = "v"
        End With
    End With
    
Finally:
    Exit Property
Catch:
    Stop
    Resume
    
End Property

Public Property Get SelectedDate() As Date

    SelectedDate = mSelectedDate
    
End Property

Sub CaptureClick()

Dim intRow As Integer, intCol As Integer

'Here we determine which area in the 9 x 7 grid was clicked:
intRow = sngY / 18 + 0.5
intCol = sngX / 18 + 0.5

'now determine what to do about it
Select Case intRow
    Case 1
        Select Case intCol
            Case 1   'go back one month
                mDisplayMonth = DateSerial(Year(mDisplayMonth), Month(mDisplayMonth) - 1, 1)
            Case 7
                'this is the tough one... was it up or down?
                Select Case sngY
                    Case Is <= 6 'go forward one year
                        mDisplayMonth = DateSerial(Year(mDisplayMonth) + 1, Month(mDisplayMonth), 1)
                    Case Else  'go back one year
                        mDisplayMonth = DateSerial(Year(mDisplayMonth) - 1, Month(mDisplayMonth), 1)
                End Select
            Case 4   'go forward one month
                mDisplayMonth = DateSerial(Year(mDisplayMonth), Month(mDisplayMonth) + 1, 1)
        End Select
    Case 3, 4, 5, 6, 7, 8
        'select days...
        mSelectedDate = mStartDate + (intRow - 3) * 7 + (intCol - 1)
        mBoundControl.Value = SelectedDate
    
    ActiveCell = mSelectedDate
        
        Exit Sub
    
    Case 9
        Select Case intCol 'Today button
            Case 1, 2, 3, 4
       
                mDisplayMonth = Date
                
            Case 5, 6, 7 'Cancel button
                mForm.FrameCalendar.Visible = False
                mForm.Close
                
                Exit Sub
        End Select
End Select

LoadView mDisplayMonth

End Sub


Sub LoadView(dtDate As Date)

Dim frmForm As UserForm
Dim dtToday As Date
Dim lngInactiveTextColor As Long
Dim lngRegularTextColor As Long
Dim lngHighlightBackColor As Long
Dim lngRegularBackColor As Long

mDisplayMonth = dtDate
dtToday = Date
lngInactiveTextColor = &H80000010  'button shadow
lngRegularTextColor = &H80000012  'button text
lngHighlightBackColor = &HFFFF&       'Tooltip
lngRegularBackColor = &H80000014  'button highlight

'To find out where to start our calendar, I want to find the first
'Sunday BEFORE the start of the month...
If Weekday(dtDate) = 1 Then
    mStartDate = dtDate
Else
    mStartDate = dtDate - Day(dtDate) - Weekday(dtDate - Day(dtDate)) + 1
End If

With mForm
    .LabelMonth = Format(dtDate, "mmm")
    .LabelYear = Format(dtDate, "yyyy")
    With .Label1
        .Caption = Format(mStartDate, "d")
        If Day(mStartDate) > 7 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label2
        .Caption = Format(mStartDate + 1, "d")
        If Day(mStartDate + 1) > 7 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 1 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label3
        .Caption = Format(mStartDate + 2, "d")
        If Day(mStartDate + 2) > 7 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 2 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label4
        .Caption = Format(mStartDate + 3, "d")
        If Day(mStartDate + 3) > 7 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 3 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label5
        .Caption = Format(mStartDate + 4, "d")
        If Day(mStartDate + 4) > 7 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 4 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label6
        .Caption = Format(mStartDate + 5, "d")
        If Day(mStartDate + 5) > 7 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 5 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label7
        .Caption = Format(mStartDate + 6, "d")
        If mStartDate + 6 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label8
        .Caption = Format(mStartDate + 7, "d")
        If mStartDate + 7 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label9
        .Caption = Format(mStartDate + 8, "d")
        If mStartDate + 8 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label10
        .Caption = Format(mStartDate + 9, "d")
        If mStartDate + 9 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label11
        .Caption = Format(mStartDate + 10, "d")
        If mStartDate + 10 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label12
        .Caption = Format(mStartDate + 11, "d")
        If mStartDate + 11 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label13
        .Caption = Format(mStartDate + 12, "d")
        If mStartDate + 12 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label14
        .Caption = Format(mStartDate + 13, "d")
        If mStartDate + 13 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label15
        .Caption = Format(mStartDate + 14, "d")
        If mStartDate + 14 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label16
        .Caption = Format(mStartDate + 15, "d")
        If mStartDate + 15 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label17
        .Caption = Format(mStartDate + 16, "d")
        If mStartDate + 16 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label18
        .Caption = Format(mStartDate + 17, "d")
        If mStartDate + 17 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label19
        .Caption = Format(mStartDate + 18, "d")
        If mStartDate + 18 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label20
        .Caption = Format(mStartDate + 19, "d")
        If mStartDate + 19 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label21
        .Caption = Format(mStartDate + 20, "d")
        If mStartDate + 20 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label22
        .Caption = Format(mStartDate + 21, "d")
        If mStartDate + 21 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label23
        .Caption = Format(mStartDate + 22, "d")
        If mStartDate + 22 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label24
        .Caption = Format(mStartDate + 23, "d")
        If mStartDate + 23 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label25
        .Caption = Format(mStartDate + 24, "d")
        If mStartDate + 24 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label26
        .Caption = Format(mStartDate + 25, "d")
        If mStartDate + 25 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label27
        .Caption = Format(mStartDate + 26, "d")
        If mStartDate + 26 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label28
        .Caption = Format(mStartDate + 27, "d")
        If mStartDate + 27 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label29
        .Caption = Format(mStartDate + 28, "d")
        If Day(mStartDate + 28) < 15 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 28 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label30
        .Caption = Format(mStartDate + 29, "d")
        If Day(mStartDate + 29) < 15 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 29 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label31
        .Caption = Format(mStartDate + 30, "d")
        If Day(mStartDate + 30) < 15 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 30 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label32
        .Caption = Format(mStartDate + 31, "d")
        If Day(mStartDate + 31) < 15 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 31 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label33
        .Caption = Format(mStartDate + 32, "d")
        If Day(mStartDate + 32) < 15 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 32 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label34
        .Caption = Format(mStartDate + 33, "d")
        If Day(mStartDate + 33) < 15 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 33 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label35
        .Caption = Format(mStartDate + 34, "d")
        If Day(mStartDate + 34) < 15 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 34 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label36
        .Caption = Format(mStartDate + 35, "d")
        If Day(mStartDate + 35) < 15 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 35 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label37
        .Caption = Format(mStartDate + 36, "d")
        If Day(mStartDate + 36) < 15 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 36 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label38
        .Caption = Format(mStartDate + 37, "d")
        If Day(mStartDate + 37) < 15 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 37 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label39
        .Caption = Format(mStartDate + 38, "d")
        If Day(mStartDate + 38) < 15 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 38 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label40
        .Caption = Format(mStartDate + 39, "d")
        If Day(mStartDate + 39) < 15 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 39 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label41
        .Caption = Format(mStartDate + 40, "d")
        If Day(mStartDate + 40) < 15 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 40 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
    With .Label42
        .Caption = Format(mStartDate + 41, "d")
        If Day(mStartDate + 41) < 15 Then .ForeColor = lngInactiveTextColor Else .ForeColor = lngRegularTextColor
        If mStartDate + 41 = dtToday Then .BackColor = lngHighlightBackColor Else .BackColor = lngRegularBackColor
    End With
End With

End Sub


 Sub CloseForm()
    Unload Me
End Sub




Attribute VB_Name = "frmCalendar"
Attribute VB_Base = "0{4E976536-8F97-4F6E-9874-C5F8B94FCAEC}{E96E7B37-FBC8-4143-8545-4CA2D7AEF29F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'=====================================================================
' The following code supports the custom calendar control
'=====================================================================

Option Explicit

Dim clsCal As clsCalendar

Public sngX As Single
Public sngY As Single





Private Sub UserForm_Initialize()
    Set clsCal = New clsCalendar
    Set clsCal.Form(Me.TextBoxDate) = Me

With Me.FrameCalendar
    clsCal.LoadView Date
    .Visible = True
End With
    
End Sub

'I used to use the MouseDown event, but I found that it wasn't responsive to double-clicks, so now I
'use a combination of the MouseMove event to get the coordinates, and both the Click and DblClick events.


Private Sub LabelClickArea_Click()

    clsCal.CaptureClick
    
    With clsCal
        If .sngX / 18 > 0 And .sngX / 18 < 7 And .sngY / 18 > 2 And .sngY / 18 < 8 Then Unload Me
    End With
           
End Sub

Private Sub LabelClickArea_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

Dim CloseCal As Boolean

    clsCal.CaptureClick
    Cancel = True

End Sub

Private Sub LabelClickArea_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    
    With clsCal
        .sngX = X
        .sngY = Y
    End With

End Sub



Private Sub UserForm_Terminate()

    'MsgBox "Closed by Terminate"
    Set clsCal = Nothing

End Sub




' InQuest injected base64 decoded content
' *&n)

INQUEST-PP=macro
