Attribute VB_Name = "MD5"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'@name      MD5|fffd|N|fffd||fffd||fffd|X|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd|
'
'@version   1.00 - Sun May 13, 2012
'           1.01 - Fri Jul  5, 2013
'           1.02 - Wed Feb  5, 2014
'
'@author    Syunzi Shimohata    <webmaster@taru-net.jp>   http://www.taru-net.jp/
'           Online Reference [http://www.taru-net.jp/excel/excelVBA/MD5/readme.html]
'
'@copyright (C) 2012, Syunzi Shimohata. Japan. All Rights Reserved.
'
'@memo      http://www.ipa.go.jp/security/rfc/RFC1321JA.html
'           md5c.c
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/

'Constants for MD5Transform routine.
Private Const S11 = 7
Private Const S12 = 12
Private Const S13 = 17
Private Const S14 = 22
Private Const S21 = 5
Private Const S22 = 9
Private Const S23 = 14
Private Const S24 = 20
Private Const S31 = 4
Private Const S32 = 11
Private Const S33 = 16
Private Const S34 = 23
Private Const S41 = 6
Private Const S42 = 10
Private Const S43 = 15
Private Const S44 = 21

'MD5 context.
Private Type Context
    state(3) As Long
    count(1) As Long
    buffer(63) As Long
End Type


Private mvarCharset As String
Private mvarText As String
Private mvarFilePath As String
Private mvarStrLen As Long
Private mvarStrByte() As Byte


Private Sub Class_Initialize()
    Me.Charset = "SHIFT-JIS"
End Sub
Private Sub Class_Terminate()
End Sub


'F, G, H and I are basic MD5 functions.
Private Function F(ByVal x As Long, ByVal y As Long, ByVal z As Long) As Long
    F = (x And y) Or ((Not x) And z)
End Function

Private Function G(ByVal x As Long, ByVal y As Long, ByVal z As Long) As Long
    G = (x And z) Or (y And (Not z))
End Function

Private Function h(ByVal x As Long, ByVal y As Long, ByVal z As Long) As Long
    h = x Xor y Xor z
End Function

Private Function i(ByVal x As Long, ByVal y As Long, ByVal z As Long) As Long
    i = y Xor (x Or (Not z))
End Function


'ROTATE_LEFT rotates x left n bits.
Private Function ROTATE_LEFT(ByVal x As Long, ByVal n As Byte) As Long
    ROTATE_LEFT = fncLeftShift(x, n) Or fncRightShift(x, 32 - n)
End Function


'FF, GG, HH, and II transformations for rounds 1, 2, 3, and 4.
'Rotation is separate from addition to prevent recomputation.
Private Sub FF(ByRef a As Long, ByVal b As Long, ByVal c As Long, ByVal d As Long, _
               ByVal x As Long, ByVal s As Long, ByVal ac As Long)
    a = fucAddBit(a, F(b, c, d))
    a = fucAddBit(a, x)
    a = fucAddBit(a, ac)
    a = ROTATE_LEFT(a, s)
    a = fucAddBit(a, b)
End Sub

Private Sub GG(ByRef a As Long, ByVal b As Long, ByVal c As Long, ByVal d As Long, _
               ByVal x As Long, ByVal s As Long, ByVal ac As Long)
    a = fucAddBit(a, G(b, c, d))
    a = fucAddBit(a, x)
    a = fucAddBit(a, ac)
    a = ROTATE_LEFT(a, s)
    a = fucAddBit(a, b)
End Sub

Private Sub HH(ByRef a As Long, ByVal b As Long, ByVal c As Long, ByVal d As Long, _
               ByVal x As Long, ByVal s As Long, ByVal ac As Long)
    a = fucAddBit(a, h(b, c, d))
    a = fucAddBit(a, x)
    a = fucAddBit(a, ac)
    a = ROTATE_LEFT(a, s)
    a = fucAddBit(a, b)
End Sub

Private Sub II(ByRef a As Long, ByVal b As Long, ByVal c As Long, ByVal d As Long, _
               ByVal x As Long, ByVal s As Long, ByVal ac As Long)
    a = fucAddBit(a, i(b, c, d))
    a = fucAddBit(a, x)
    a = fucAddBit(a, ac)
    a = ROTATE_LEFT(a, s)
    a = fucAddBit(a, b)
End Sub


'MD5 initialization. Begins an MD5 operation, writing a new context.
Private Sub MD5Init(ByRef Context As Context)
    Context.count(0) = 0
    Context.count(1) = 0
    
    'Load magic initialization constants.
    Context.state(0) = &H67452301
    Context.state(1) = &HEFCDAB89
    Context.state(2) = &H98BADCFE
    Context.state(3) = &H10325476
End Sub


'MD5 block update operation. Continues an MD5 message-digest
'operation, processing another message block, and updating the
'context.
Private Sub MD5Update(ByRef Context As Context, ByRef valInput As Variant, ByVal inputLen As Long)
    Dim i As Long
    Dim index As Byte
    Dim partLen As Byte


    'Compute number of bytes mod 64
    index = fncRightShift(Context.count(0), 3) And &H3F
    
    'Update number of bits
    Context.count(0) = fucAddBit(Context.count(0), fncLeftShift(inputLen, 3))
    If Context.count(0) < fncLeftShift(inputLen, 3) Then
        Context.count(1) = fucAddBit(Context.count(1), 1)
    End If

    Context.count(1) = fucAddBit(Context.count(1), fncRightShift(inputLen, 29))
    partLen = 64 - index
    
    'Transform as many times as possible.
    If inputLen >= partLen Then
        Call MD5_memcpy(Context.buffer, index, valInput, 0, partLen)
        Call MD5Transform(Context.state, Context.buffer, 0)

        For i = partLen To inputLen - 63 - 1 Step 64
            Call MD5Transform(Context.state, valInput, i)
        Next
        index = 0
    Else
        i = 0
    End If

    'Buffer remaining input
    'Context.buffer = valBuf()
    Call MD5_memcpy(Context.buffer, index, valInput, i, inputLen - i)
End Sub


'MD5 finalization. Ends an MD5 message-digest operation, writing the
'the message digest and zeroizing the context.
Private Sub MD5Final(ByRef digest As Variant, ByRef Context As Context)
    Dim bits(7) As Byte
    Dim index As Byte
    Dim padLen As Byte
    Dim i As Byte

    Call Encode(bits, Context.count, 8)
    index = fncRightShift(Context.count(0), 3) And &H3F
    If index < 56 Then
        padLen = 56 - index
    Else
        padLen = 120 - index
    End If
    

    Call MD5Update(Context, Me.PADDING, padLen)
    Call MD5Update(Context, bits, 8)
    Call Encode(digest, Context.state, 16)
End Sub


'MD5 basic transformation. Transforms state based on block.
Private Sub MD5Transform(ByRef state As Variant, ByRef block As Variant, ByVal offset As Long)
    Dim a As Long
    Dim b As Long
    Dim c As Long
    Dim d As Long

    
    a = state(0)
    b = state(1)
    c = state(2)
    d = state(3)
    
    
    Dim x(15)
    Call Decode(x, block, offset, 64)


    ' Round 1
    Call FF(a, b, c, d, x(0), S11, &HD76AA478)  '  1
    Call FF(d, a, b, c, x(1), S12, &HE8C7B756)  '  2
    Call FF(c, d, a, b, x(2), S13, &H242070DB)  '  3
    Call FF(b, c, d, a, x(3), S14, &HC1BDCEEE)  '  4
    Call FF(a, b, c, d, x(4), S11, &HF57C0FAF)  '  5
    Call FF(d, a, b, c, x(5), S12, &H4787C62A)  '  6
    Call FF(c, d, a, b, x(6), S13, &HA8304613)  '  7
    Call FF(b, c, d, a, x(7), S14, &HFD469501)  '  8
    Call FF(a, b, c, d, x(8), S11, &H698098D8)  '  9
    Call FF(d, a, b, c, x(9), S12, &H8B44F7AF)  ' 10
    Call FF(c, d, a, b, x(10), S13, &HFFFF5BB1) ' 11
    Call FF(b, c, d, a, x(11), S14, &H895CD7BE) ' 12
    Call FF(a, b, c, d, x(12), S11, &H6B901122) ' 13
    Call FF(d, a, b, c, x(13), S12, &HFD987193) ' 14
    Call FF(c, d, a, b, x(14), S13, &HA679438E) ' 15
    Call FF(b, c, d, a, x(15), S14, &H49B40821) ' 16

    ' Round 2
    Call GG(a, b, c, d, x(1), S21, &HF61E2562)  ' 17
    Call GG(d, a, b, c, x(6), S22, &HC040B340)  ' 18
    Call GG(c, d, a, b, x(11), S23, &H265E5A51) ' 19
    Call GG(b, c, d, a, x(0), S24, &HE9B6C7AA)  ' 20
    Call GG(a, b, c, d, x(5), S21, &HD62F105D)  ' 21
    Call GG(d, a, b, c, x(10), S22, &H2441453)  ' 22
    Call GG(c, d, a, b, x(15), S23, &HD8A1E681) ' 23
    Call GG(b, c, d, a, x(4), S24, &HE7D3FBC8)  ' 24
    Call GG(a, b, c, d, x(9), S21, &H21E1CDE6)  ' 25
    Call GG(d, a, b, c, x(14), S22, &HC33707D6) ' 26
    Call GG(c, d, a, b, x(3), S23, &HF4D50D87)  ' 27
    Call GG(b, c, d, a, x(8), S24, &H455A14ED)  ' 28
    Call GG(a, b, c, d, x(13), S21, &HA9E3E905) ' 29
    Call GG(d, a, b, c, x(2), S22, &HFCEFA3F8)  ' 30
    Call GG(c, d, a, b, x(7), S23, &H676F02D9)  ' 31
    Call GG(b, c, d, a, x(12), S24, &H8D2A4C8A) ' 32

    ' Round 3
    Call HH(a, b, c, d, x(5), S31, &HFFFA3942)  ' 33
    Call HH(d, a, b, c, x(8), S32, &H8771F681)  ' 34
    Call HH(c, d, a, b, x(11), S33, &H6D9D6122) ' 35
    Call HH(b, c, d, a, x(14), S34, &HFDE5380C) ' 36
    Call HH(a, b, c, d, x(1), S31, &HA4BEEA44)  ' 37
    Call HH(d, a, b, c, x(4), S32, &H4BDECFA9)  ' 38
    Call HH(c, d, a, b, x(7), S33, &HF6BB4B60)  ' 39
    Call HH(b, c, d, a, x(10), S34, &HBEBFBC70) ' 40
    Call HH(a, b, c, d, x(13), S31, &H289B7EC6) ' 41
    Call HH(d, a, b, c, x(0), S32, &HEAA127FA)  ' 42
    Call HH(c, d, a, b, x(3), S33, &HD4EF3085)  ' 43
    Call HH(b, c, d, a, x(6), S34, &H4881D05)   ' 44
    Call HH(a, b, c, d, x(9), S31, &HD9D4D039)  ' 45
    Call HH(d, a, b, c, x(12), S32, &HE6DB99E5) ' 46
    Call HH(c, d, a, b, x(15), S33, &H1FA27CF8) ' 47
    Call HH(b, c, d, a, x(2), S34, &HC4AC5665)  ' 48

    ' Round 4
    Call II(a, b, c, d, x(0), S41, &HF4292244)  ' 49
    Call II(d, a, b, c, x(7), S42, &H432AFF97)  ' 50
    Call II(c, d, a, b, x(14), S43, &HAB9423A7) ' 51
    Call II(b, c, d, a, x(5), S44, &HFC93A039)  ' 52
    Call II(a, b, c, d, x(12), S41, &H655B59C3) ' 53
    Call II(d, a, b, c, x(3), S42, &H8F0CCC92)  ' 54
    Call II(c, d, a, b, x(10), S43, &HFFEFF47D) ' 55
    Call II(b, c, d, a, x(1), S44, &H85845DD1)  ' 56
    Call II(a, b, c, d, x(8), S41, &H6FA87E4F)  ' 57
    Call II(d, a, b, c, x(15), S42, &HFE2CE6E0) ' 58
    Call II(c, d, a, b, x(6), S43, &HA3014314)  ' 59
    Call II(b, c, d, a, x(13), S44, &H4E0811A1) ' 60
    Call II(a, b, c, d, x(4), S41, &HF7537E82)  ' 61
    Call II(d, a, b, c, x(11), S42, &HBD3AF235) ' 62
    Call II(c, d, a, b, x(2), S43, &H2AD7D2BB)  ' 63
    Call II(b, c, d, a, x(9), S44, &HEB86D391)  ' 64

    state(0) = fucAddBit(state(0), a)
    state(1) = fucAddBit(state(1), b)
    state(2) = fucAddBit(state(2), c)
    state(3) = fucAddBit(state(3), d)
    
End Sub


'Encodes input (UINT4) into output (unsigned char). Assumes len is
'a multiple of 4.
Private Sub Encode(ByRef output As Variant, ByRef valInput As Variant, ByVal valLen As Long)
    Dim i As Long
    Dim j As Long
    
    i = 0
    j = 0
    
    Do While j < valLen
        output(j) = valInput(i) And &HFF
        output(j + 1) = fncRightShift(valInput(i), 8) And &HFF
        output(j + 2) = fncRightShift(valInput(i), 16) And &HFF
        output(j + 3) = fncRightShift(valInput(i), 24) And &HFF
        i = i + 1
        j = j + 4
    Loop
End Sub


'Decodes input (unsigned char) into output (UINT4). Assumes len is
'a multiple of 4.
Private Sub Decode(ByRef output As Variant, ByRef valInput As Variant, ByVal inputPoint As Long, _
                   ByVal valLen As Long)
    Dim i As Long
    Dim j As Long
    Dim Buf As Long
          
    i = 0
    j = 0
    Buf = 0
    
    Do While j < valLen
        Buf = j + inputPoint
        output(i) = valInput(Buf) Or fncLeftShift(valInput(Buf + 1), 8) Or _
                    fncLeftShift(valInput(Buf + 2), 16) Or fncLeftShift(valInput(Buf + 3), 24)
        i = i + 1
        j = j + 4
    Loop
End Sub


'Note: Replace "for loop" with standard memcpy if possible.
Private Sub MD5_memcpy(ByRef output As Variant, ByVal outputPoint As Long, ByRef valInput As Variant, _
                       ByVal inputPoint As Long, ByVal valLen As Long)
    Dim i As Long
    For i = 0 To valLen - 1
        output(i + outputPoint) = valInput(i + inputPoint)
    Next
End Sub


Private Function MDPrint(ByRef digest As Variant) As String
    Dim Str As String
    Dim i As Integer
    
    For i = 0 To 16 - 1
        Str = Str & Right("00" & LCase(Hex(digest(i))), 2)
    Next
    
    MDPrint = Str
End Function


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|PADDING();
'@title     : [PADDING]|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'
'@param     :
'
'@return    : [PADDING]|fffd||8414||fffd|z|fffd||fffd|/Variant
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Property Get PADDING() As Variant()
    Dim valArray() As Variant
    valArray = Array( _
        &H80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 _
    )

    PADDING = valArray
End Property


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|fncLeftShift();
'@title     : |fffd||fffd||fffd|V|fffd|t|fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|
'@summary   : C|fffd||fffd||fffd||fffd||fffd|[<<]|fffd||255||3c2||fffd||fffd|A|fffd||fffd||fffd|V|fffd|t|fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B
'
'@param     : |fffd|l/Long
'             |fffd|V|fffd|t|fffd|g|fffd||fffd|/Byte
'
'@return    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|/Long
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Private Function fncLeftShift(ByVal val As Long, ByVal nBit As Byte) As Long
    Dim msb As Long
    Dim lsb As Long
    Dim tmp As Long
    
    If nBit = 0 Then
        msb = val
    Else
        lsb = 2 ^ (31 - nBit)
        tmp = val And (lsb - 1)
        msb = tmp * (2 ^ nBit)
        
        If val And lsb Then
            msb = msb Or &H80000000
        End If
    End If
    
    fncLeftShift = msb
End Function


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|fncRightShift();
'@title     : |fffd|E|fffd|V|fffd|t|fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|
'@summary   : C|fffd||fffd||fffd||fffd||fffd|[>>]|fffd||255||3c2||fffd||fffd|A|fffd|E|fffd|V|fffd|t|fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B
'
'@param     : |fffd|l/Long
'             |fffd|V|fffd|t|fffd|g|fffd||fffd|/Byte
'
'@return    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|/Long
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Private Function fncRightShift(ByVal val As Long, ByVal nBit As Byte) As Long
    Dim msb As Long
    Dim lsb As Long

    If nBit = 0 Then
        msb = val
    Else
        lsb = val And &H7FFFFFFF

        If nBit = 31 Then
            msb = 0
        Else
            msb = lsb \ (2 ^ nBit)
        End If
        
        If lsb <> val Then
            msb = msb Or (2 ^ (31 - nBit))
        End If
    End If
        
    fncRightShift = msb
End Function


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|fucAddBit();
'@title     : |fffd|r|fffd|b|fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|
'@summary   : C|fffd||fffd||fffd||fffd||fffd|[+=]|fffd||255||3c2||fffd||fffd|A|fffd|r|fffd|b|fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B
'
'@param     : |fffd|l/Currency
'             |fffd|l/Currency
'
'@return    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|/Long
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Private Function fucAddBit(ByVal a As Currency, ByVal b As Currency) As Long
    Dim tmp As Currency
    
    tmp = a + b
    If tmp > &H7FFFFFFF Then
        tmp = tmp - (2 ^ 32)
    ElseIf tmp < &H80000000 Then
        tmp = tmp + (2 ^ 32)
    End If
    
    fucAddBit = CLng(tmp)
End Function


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|fncSpritStr();
'@title     : |fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||3ca||fffd||fffd||fffd||fffd||fffd|
'@summary   : |fffd|w|fffd||fffd||315||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||255||fffd||fffd||fffd||fffd||fffd||fffd||3c9||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd|z|fffd||fffd||58a|i|fffd|[|fffd||fffd||fffd||fffd|B
'
'@param     :
'
'@return    :
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Private Sub fncSpritStr()
    Dim valByte() As Byte
    Dim valArray() As Byte
    Dim num As Variant
    Dim count As Long
    Dim ADODB As Object
    Set ADODB = CreateObject("ADODB.Stream")

    If Me.Text = "" Then
        Me.StrByte = valArray
        Me.StrLen = 0
    Else
        ADODB.Open
        ADODB.Type = 2
        ADODB.Charset = Me.Charset
        ADODB.WriteText Me.Text
        ADODB.Position = 0
        ADODB.Type = 1
        
        If Me.Charset = "UNICODE" Then
            ADODB.Position = 2
            valByte = ADODB.Read
            
            count = 0
            For Each num In valByte
                If Not num = 0 Then
                    ReDim Preserve valArray(count)
                    valArray(count) = num
                    count = count + 1
                End If
            Next num

        ElseIf Me.Charset = "SHIFT-JIS" Then
            ADODB.Position = 0
            valArray = ADODB.Read
        
        ElseIf Me.Charset = "UTF-8" Then
            ADODB.Position = 3
            valArray = ADODB.Read
            
        End If

        ADODB.Close
        Me.StrByte = valArray
        Me.StrLen = UBound(valArray) + 1
    End If
End Sub


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|fncSpritFile();
'@title     : |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||3ca||fffd||fffd||fffd||fffd||fffd|
'@summary   : |fffd|w|fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd|z|fffd||fffd||58a|i|fffd|[|fffd||fffd||fffd||fffd|B
'             |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||a347||fffd||34b||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B
'
'@param     :
'
'@return    :
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Private Sub fncSpritFile()
    Dim valByte() As Byte
    Dim valArray() As Byte
    Dim inputFn As Long
    Dim num As Variant
    Dim count As Long


    If Dir(Me.FilePath) = "" Then
        Me.StrByte = valArray
        Me.StrLen = 0
    Else
        inputFn = FreeFile
        Open Me.FilePath For Binary As #inputFn
            ReDim valArray(LOF(inputFn))
            Get #inputFn, , valArray
        Close #inputFn

        If UBound(valArray) = 0 Then
            Me.StrLen = 0
        Else
            ReDim Preserve valArray(UBound(valArray) - 1)
            Me.StrLen = UBound(valArray) + 1
        End If
        Me.StrByte = valArray

    End If
End Sub


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|TextHash();
'@title     : |fffd||fffd||fffd||fffd||fffd||fffd||fffd|MD|fffd|n|fffd|b|fffd|V|fffd||fffd||fffd|l|fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
'@summary   : |fffd|w|fffd||8576||fffd||fffd||fffd||fffd||303|n|fffd|b|fffd|V|fffd||fffd||fffd|l|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|B
'
'@param     :
'
'@return    : |fffd|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/String
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Function TextHash() As String
    Dim Context As Context
    Dim digest(15) As Variant
    
    fncSpritStr

    Call MD5Init(Context)
    Call MD5Update(Context, Me.StrByte, Me.StrLen)
    Call MD5Final(digest, Context)

    TextHash = MDPrint(digest)
End Function


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|FileHash();
'@title     : |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|MD|fffd|n|fffd|b|fffd|V|fffd||fffd||fffd|l|fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
'@summary   : |fffd|w|fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||741|A|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|n|fffd|b|fffd|V|fffd||fffd||fffd|l|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|B
'             |fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||a347||fffd||341|A|fffd||fffd||303|n|fffd|b|fffd|V|fffd||fffd||fffd|l|fffd||fffd||502||fffd||fffd||702||fffd||fffd|B
'             [d41d8cd98f00b204e9800998ecf8427e]
'
'@param     :
'
'@return    : |fffd|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/String
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Function FileHash() As String
    Dim Context As Context
    Dim digest(15) As Variant
    
    fncSpritFile

    Call MD5Init(Context)
    Call MD5Update(Context, Me.StrByte, Me.StrLen)
    Call MD5Final(digest, Context)

    FileHash = MDPrint(digest)
End Function


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|Charset();
'@title     : [Charset]|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'
'@param     : [Charset]|fffd||fffd||fffd||fffd||fffd||fffd|/String
'
'@return    : [Charset]|fffd||fffd||fffd||fffd||fffd||fffd|/String
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Property Let Charset(ByVal value As String)
    mvarCharset = UCase(value)
End Property
Public Property Get Charset() As String
    Charset = mvarCharset
End Property


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|Text();
'@title     : [Text]|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'
'@param     : [Text]|fffd||fffd||fffd||fffd||fffd||fffd|/String
'
'@return    : [Text]|fffd||fffd||fffd||fffd||fffd||fffd|/String
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Property Let Text(ByVal value As String)
    mvarText = value
End Property
Public Property Get Text() As String
    Text = mvarText
End Property


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|FilePath();
'@title     : [FilePath]|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'
'@param     : [FilePath]|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X/String
'
'@return    : [FilePath]|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X/String
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Property Let FilePath(ByVal value As String)
    mvarFilePath = value
End Property
Public Property Get FilePath() As String
    FilePath = mvarFilePath
End Property


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|StrByte();
'@title     : [StrByte]|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'
'@param     : [StrByte]|fffd|o|fffd|C|fffd|g|fffd|z|fffd||fffd|/Byte
'
'@return    : [StrByte]|fffd|o|fffd|C|fffd|g|fffd|z|fffd||fffd|/Byte
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Property Let StrByte(ByRef value() As Byte)
    mvarStrByte = value
End Property
Public Property Get StrByte() As Byte()
    StrByte = mvarStrByte
End Property


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|StrLen();
'@title     : [StrLen]|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'
'@param     : [StrLen]|fffd||fffd||fffd||fffd||fffd|T|fffd|C|fffd|Y/Long
'
'@return    : [StrLen]|fffd||fffd||fffd||fffd||fffd|T|fffd|C|fffd|Y/Long
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Property Let StrLen(ByVal value As Long)
    mvarStrLen = value
End Property
Public Property Get StrLen() As Long
    StrLen = mvarStrLen
End Property



Attribute VB_Name = "Module1"
Public Declare Sub UrlSign Lib "Sign.dll" (ByVal Url As String, ByVal SignedUrl As String, ByVal Secretkey As String)
'advapi32.dll
'http://su-u.jp/juju/%B5%A4%A4%DE%A4%B0%A4%EC%C6%FC%B5%AD/2007-03-08.html
Private Declare Function CryptAcquireContext Lib "advapi32.dll" Alias "CryptAcquireContextA" _
                            (ByRef phProv As Long, ByVal pszContainer As String, ByVal pszProvider As String, _
                             ByVal dwProvType As Long, ByVal dwFlags As Long) As Long
Private Declare Function CryptReleaseContext Lib "advapi32.dll" _
                            (ByVal hProv As Long, ByVal dwFlags As Long) As Long
Private Declare Function CryptCreateHash Lib "advapi32.dll" _
                            (ByVal hProv As Long, ByVal Algid As Long, ByVal hKey As Long, ByVal dwFlags As Long, _
                             ByRef phHash As Long) As Long
Private Declare Function CryptDestroyHash Lib "advapi32.dll" _
                            (ByVal hHash As Long) As Long
Private Declare Function CryptHashData Lib "advapi32.dll" _
                            (ByVal hHash As Long, pbData As Any, ByVal cbData As Long, ByVal dwFlags As Long) As Long
Private Declare Function CryptGetHashParam Lib "advapi32.dll" _
                            (ByVal hHash As Long, ByVal dwParam As Long, pbData As Any, ByRef pcbData As Long, _
                             ByVal dwFlags As Long) As Long
Private Declare Sub Sleep Lib "kernel32" (ByVal dwMs As Long)

Private Const PROV_RSA_FULL   As Long = 1
Private Const PROV_RSA_AES    As Long = 24
Private Const CRYPT_VERIFYCONTEXT As Long = &HF0000000

Private Const HP_HASHVAL      As Long = 2
Private Const HP_HASHSIZE     As Long = 4

Private Const ALG_TYPE_ANY    As Long = 0
Private Const ALG_CLASS_HASH  As Long = 32768

Private Const ALG_SID_MD2     As Long = 1
Private Const ALG_SID_MD4     As Long = 2
Private Const ALG_SID_MD5     As Long = 3
Private Const ALG_SID_SHA     As Long = 4
Private Const ALG_SID_SHA_256 As Long = 12
Private Const ALG_SID_SHA_384 As Long = 13
Private Const ALG_SID_SHA_512 As Long = 14

Private Const CALG_MD2        As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_MD2)
Private Const CALG_MD4        As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_MD4)
Private Const CALG_MD5        As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_MD5)
Private Const CALG_SHA        As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SHA)
Private Const CALG_SHA_256    As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SHA_256)
Private Const CALG_SHA_384    As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SHA_384)
Private Const CALG_SHA_512    As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SHA_512)

' Create Hash
Private Function CreateHash(abytData() As Byte, ByVal lngAlgID As Long) As String
    Dim hProv As Long, hHash As Long
    Dim abytHash(0 To 63) As Byte
    Dim lngLength As Long
    Dim lngResult As Long
    Dim strHash As String
    Dim i As Long
    strHash = ""
    If CryptAcquireContext(hProv, vbNullString, vbNullString, _
                           IIf(lngAlgID >= CALG_SHA_256, PROV_RSA_AES, PROV_RSA_FULL), _
                           CRYPT_VERIFYCONTEXT) <> 0& Then
        If CryptCreateHash(hProv, lngAlgID, 0&, 0&, hHash) <> 0& Then
            lngLength = UBound(abytData()) - LBound(abytData()) + 1
            If lngLength > 0 Then lngResult = CryptHashData(hHash, abytData(LBound(abytData())), lngLength, 0&) _
                             Else lngResult = CryptHashData(hHash, ByVal 0&, 0&, 0&)
            If lngResult <> 0& Then
                lngLength = UBound(abytHash()) - LBound(abytHash()) + 1
                If CryptGetHashParam(hHash, HP_HASHVAL, abytHash(LBound(abytHash())), lngLength, 0&) <> 0& Then
                    For i = 0 To lngLength - 1
                        strHash = strHash & Right$("0" & Hex$(abytHash(LBound(abytHash()) + i)), 2)
                    Next
                End If
            End If
            CryptDestroyHash hHash
        End If
        CryptReleaseContext hProv, 0&
    End If
    CreateHash = LCase$(strHash)
End Function

' Create Hash From String(Shift_JIS)
Private Function CreateHashString(ByVal strData As String, ByVal lngAlgID As Long) As String
    CreateHashString = CreateHash(StrConv(strData, vbFromUnicode), lngAlgID)
End Function

' Create Hash From File
Private Function CreateHashFile(ByVal strFileName As String, ByVal lngAlgID As Long) As String
    Dim abytData() As Byte
    Dim intFile As Long
    Dim lngError As Long
    On Error Resume Next
        If Len(Dir(strFileName)) > 0 Then
            intFile = FreeFile
            Open strFileName For Binary Access Read Shared As #intFile
            abytData() = InputB(LOF(intFile), #intFile)
            Close #intFile
        End If
        lngError = Err.Number
    On Error GoTo 0
    If lngError = 0 Then CreateHashFile = CreateHash(abytData(), lngAlgID) _
                    Else CreateHashFile = ""
End Function

' MD5
Public Function CreateMD5Hash(abytData() As Byte) As String
    CreateMD5Hash = CreateHash(abytData(), CALG_MD5)
End Function
Public Function CreateMD5HashString(ByVal strData As String) As String
    CreateMD5HashString = CreateHashString(strData, CALG_MD5)
End Function
Public Function CreateMD5HashFile(ByVal strFileName As String) As String
    CreateMD5HashFile = CreateHashFile(strFileName, CALG_MD5)
End Function

' SHA-1
Public Function CreateSHA1Hash(abytData() As Byte) As String
    CreateSHA1Hash = CreateHash(abytData(), CALG_SHA)
End Function
Public Function CreateSHA1HashString(ByVal strData As String) As String
    CreateSHA1HashString = CreateHashString(strData, CALG_SHA)
End Function
Public Function CreateSHA1HashFile(ByVal strFileName As String) As String
    CreateSHA1HashFile = CreateHashFile(strFileName, CALG_SHA)
End Function

' SHA-256
Public Function CreateSHA256Hash(abytData() As Byte) As String
    CreateSHA256Hash = CreateHash(abytData(), CALG_SHA_256)
End Function
Public Function CreateSHA256HashString(ByVal strData As String) As String
    CreateSHA256HashString = CreateHashString(strData, CALG_SHA_256)
End Function
Public Function CreateSHA256HashFile(ByVal strFileName As String) As String
    CreateSHA256HashFile = CreateHashFile(strFileName, CALG_SHA_256)
End Function

' SHA-384
Public Function CreateSHA384Hash(abytData() As Byte) As String
    CreateSHA384Hash = CreateHash(abytData(), CALG_SHA_384)
End Function
Public Function CreateSHA384HashString(ByVal strData As String) As String
    CreateSHA384HashString = CreateHashString(strData, CALG_SHA_384)
End Function
Public Function CreateSHA384HashFile(ByVal strFileName As String) As String
    CreateSHA384HashFile = CreateHashFile(strFileName, CALG_SHA_384)
End Function

' SHA-512
Public Function CreateSHA512Hash(abytData() As Byte) As String
    CreateSHA512Hash = CreateHash(abytData(), CALG_SHA_512)
End Function
Public Function CreateSHA512HashString(ByVal strData As String) As String
    CreateSHA512HashString = CreateHashString(strData, CALG_SHA_512)
End Function
Public Function CreateSHA512HashFile(ByVal strFileName As String) As String
    CreateSHA512HashFile = CreateHashFile(strFileName, CALG_SHA_512)
End Function
Function URLhenkan(Str As String) As String
Set sc = CreateObject("ScriptControl")
sc.Language = "Jscript"
Set js = sc.CodeObject
URLhenkan = js.encodeURIComponent(Str)
End Function
'Hmac-SHA256
'http://plus-sys.jugem.jp/?eid=215
Public Function Hmac(sKey, rawTextToSign As String) As String

Dim arKey() As Byte
Dim ipad As String
Dim opad As String
Dim buff() As Byte, offset As Long

'|fffd||fffd||fffd||fffd||fffd||fffd|
    ipad = ""
    opad = ""
    hash = ""
    ReDim arKey(0 To 63)

'|fffd||95a7||fffd||fffd||fffd||fffd||fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||c2||93||1cd||fffd||fffd||741|A|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||595||3ca||fffd||fffd||fffd|z|fffd||fffd||58a|i|fffd|[
    For i = 0 To Len(sKey) - 1
        arKey(i) = Asc(Mid(sKey, i + 1, 1))
    Next

'64|fffd||fffd||fffd||fffd||fffd||256||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||341|A|fffd|[|fffd||fffd||fffd|Z|fffd|b|fffd|g
    For i = Len(sKey) To 63
        arKey(i) = 0
    Next

'innerpad|fffd|y|fffd||fffd|outerpad|fffd||c42c|
    For i = 0 To 63
        ipad = ipad & Chr(arKey(i) Xor &H36)
        opad = opad & Chr(arKey(i) Xor &H5C)
    Next

'|fffd|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd|1|fffd||fffd||fffd|
'(innerpad+|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd|)|fffd||fffd||fffd|n|fffd|b|fffd|V|fffd||fffd||fffd|E|fffd|E|fffd|E|fffd|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd|1
    hash = CreateSHA256HashString(ipad & rawTextToSign)

'|fffd|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd|2|fffd||fffd||fffd|
    buff = StrConv(opad, vbFromUnicode)
    offset = UBound(buff)
    ReDim Preserve buff(offset + Len(hash) \ 2)

    For i = 1 To (Len(hash) \ 2)
        buff(offset + i) = CByte("&H" & Mid(hash, (i - 1) * 2 + 1, 2))
    Next
    hash = CreateSHA256Hash(buff)
    Hmac = hash

End Function
Public Function HEX2BIN(ByVal hx As String) As String
    Dim num As Long
    Dim bin As String
    Dim i As Long
    num = CLng("&H" & hx)
        For i = Len(hx) * 4 - 1 To 0 Step -1
            bin = bin & -CInt((num And (2 ^ i)) <> 0)
        Next
    HEX2BIN = bin
End Function
'n|fffd|i|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|strNumber|fffd||fffd|10|fffd|i|fffd||fffd||fffd||310||fffd||fffd||fffd||fffd||255||3ca||fffd||fffd||fffd||fffd||115||502||fffd|
'http://www5d.biglobe.ne.jp/~tomoya03/shtml/algorithm/Convert.htm
Public Function ncdec(ByVal n As Long, ByVal strNumber As String) As Long

    Dim lngt As Long
    Dim c As Long
    Dim i As Long
    lngt = 0&
    c = 1&
    For i = 1& To Len(strNumber)
        lngt = lngt + subncdec(Left$(Right$(strNumber, i), 1)) * c
        c = c * n
    Next i
    ncdec = lngt

End Function
'URL |fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
'http://www.geocities.co.jp/SilkRoad/4511/vb/urlenc.htm
Public Function URLencode(ByRef strSource As String) As String

 Dim lngLength As Long                                          '|fffd||fffd||fffd||fffd||fffd||fffd||303|T|fffd|C|fffd|Y(S-JIS |fffd||3ca||fffd||fffd||fffd|)|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
 Dim bytSource() As Byte                                        'ANSI/S-JIS |fffd||255||3ca||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd|^|fffd|z|fffd||fffd|
 Dim strBuffer As String                                        'URL |fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a39e||fffd|i|fffd|[|fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@
 Dim bytSingle As Byte                                          '|fffd|z|fffd||42a42||7532||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd| 1 |fffd|o|fffd|C|fffd|g|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
 Dim strSingleHex As String                                     '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd| 16 |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
 Dim lngReadCount As Long                                       'bytSource |fffd||1c2||74d||fffd||fffd||748||292|u|fffd|J|fffd|E|fffd||fffd||fffd|^
 Dim lngWriteCount As Long                                      'strBuffer |fffd||fffd||fffd||fffd||fffd||fffd||fffd||748||292|u|fffd|J|fffd|E|fffd||fffd||fffd|^
 
    lngLength = LenB(StrConv(strSource, vbFromUnicode))         'ANSI/S-JIS |fffd||3ca||fffd||fffd||fffd||303|T|fffd|C|fffd|Y|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    If Not CBool(lngLength) Then Exit Function                  '0 |fffd|o|fffd|C|fffd|g|fffd||30f||a347||fffd||590||fffd||fffd||14c82||fffd||fffd||fffd|
    ReDim bytSource(lngLength - 1)                              'ANSI/S-JIS |fffd||3ca||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd||308||fffd||fffd||fffd|m|fffd||fffd|
    bytSource = StrConv(strSource, vbFromUnicode)               'ANSI/S-JIS |fffd||255||3ca||fffd||fffd||fffd| bytSource |fffd||24a|i|fffd|[
    
    strBuffer = String$(lngLength * 3, vbNullChar)              'URL |fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||a39e||fffd|i|fffd|[|fffd|o|fffd|b|fffd|t|fffd|@|fffd||fffd||fffd|m|fffd||fffd|
    strSingleHex = "%00"                                        '16 |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||fffd||fffd|m|fffd||fffd|
    lngWriteCount = 1                                           '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd| 1 |fffd||fffd||fffd||fffd|J|fffd|n
    
    Do                                                          '|fffd||fffd||fffd||fffd||fffd||fffd||30f|I|fffd|[|fffd||702||143||fffd||fffd|[|fffd|v
        bytSingle = bytSource(lngReadCount)                     '|fffd|z|fffd||42a42||fffd| 1 |fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|Q|fffd||182||fffd||fffd||fffd||fffd||846c||fffd||fffd||fffd|H)
        If ((bytSingle >= &H81) And (bytSingle <= &H9F)) Or _
           ((bytSingle >= &HE0) And (bytSingle <= &HEF)) Then   'Shift-JIS 2 |fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd||18a|m|fffd|F|fffd||fffd||fffd||a0bd||fffd||a347|
            Mid(strSingleHex, 2, 2) = Hex$(bytSingle)           '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd| 16 |fffd|i|fffd||fffd||fffd||255||3ca||fffd|(|fffd||fffd||283|o|fffd|C|fffd|g)
            Mid(strBuffer, lngWriteCount, 3) = strSingleHex     'URL |fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            lngReadCount = lngReadCount + 1                     '|fffd||1c2||74d||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
            lngWriteCount = lngWriteCount + 3                   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd| 3 |fffd||fffd||fffd||20b7|
            If lngReadCount = lngLength Then Exit Do            '|fffd||fffd||fffd||fffd||fffd||fffd||30f|I|fffd|[|fffd||252|B|fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd||fffd||fffd|[|fffd|v|fffd||14c82||fffd||fffd||fffd|
            bytSingle = bytSource(lngReadCount)                 '|fffd|z|fffd||42a42||fffd| 1 |fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd|
            Mid(strSingleHex, 2, 2) = Hex$(bytSingle)           '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd| 16 |fffd|i|fffd||fffd||fffd||255||3ca||fffd|(|fffd||fffd||fffd||283|o|fffd|C|fffd|g)
            Mid(strBuffer, lngWriteCount, 3) = strSingleHex     'URL |fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            lngReadCount = lngReadCount + 1                     '|fffd||1c2||74d||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
            lngWriteCount = lngWriteCount + 3                   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd| 3 |fffd||fffd||fffd||20b7|
        ElseIf bytSingle = &H20 Then                            '|fffd||fffd||fffd|p|fffd|X|fffd|y|fffd|[|fffd|X|fffd||fffd||fffd||fffd|(" ")|fffd||30f||a347|
            Mid(strBuffer, lngWriteCount, 1) = "+"              '"+" |fffd||fffd||fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            lngReadCount = lngReadCount + 1                     '|fffd||1c2||74d||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
            lngWriteCount = lngWriteCount + 1                   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd| 1 |fffd||fffd||fffd||20b7|
        ElseIf ((bytSingle >= &H40) And (bytSingle <= &H5A)) Or _
               ((bytSingle >= &H61) And (bytSingle <= &H7A)) Or _
               ((bytSingle >= &H30) And (bytSingle <= &H39)) Or _
               (bytSingle = &H2A) Or _
               (bytSingle = &H2D) Or _
               (bytSingle = &H2E) Or _
               (bytSingle = &H5F) Then                          '|fffd||fffd||fffd||3ca||fffd||fffd||fffd||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd||fffd||fffd||a347|
            Mid(strBuffer, lngWriteCount, 1) = Chr$(bytSingle)  '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||15d8e||fffd||fffd||fffd||256||7c2||fffd||fffd||10f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(^^;
            lngReadCount = lngReadCount + 1                     '|fffd||1c2||74d||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
            lngWriteCount = lngWriteCount + 1                   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd| 1 |fffd||fffd||fffd||20b7|
        Else                                                    '|fffd||fffd||fffd||311||fffd||fffd||315||fffd||fffd||fffd||fffd||30f||a347|
            If bytSingle <= &HF Then                            'Hex$() |fffd||30c||fffd||fffd||282||fffd| 1 |fffd||fffd||fffd||fffd||fffd||242||202||fffd||a347|
                Mid(strSingleHex, 2, 1) = "0"                   '0 |fffd||fffd||64ea||fffd||255|t|fffd||fffd|
                Mid(strSingleHex, 3, 1) = Hex$(bytSingle)       '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd| 16 |fffd|i|fffd||fffd||fffd||255||3ca||fffd|
            Else                                                '0 |fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||fffd|K|fffd|v|fffd||fffd||fffd||202||fffd||fffd||a347|
                Mid(strSingleHex, 2, 2) = Hex$(bytSingle)       '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd| 16 |fffd|i|fffd||fffd||fffd||255||3ca||fffd|
            End If
            Mid(strBuffer, lngWriteCount, 3) = strSingleHex     'URL |fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            lngReadCount = lngReadCount + 1                     '|fffd||1c2||74d||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
            lngWriteCount = lngWriteCount + 3                   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd| 3 |fffd||fffd||fffd||20b7|
        End If
    Loop Until lngReadCount = lngLength

    Erase bytSource                                             '|fffd|o|fffd|C|fffd|g|fffd|^|fffd|z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    If lngWriteCount > 1 Then                                   '|fffd|o|fffd|b|fffd|t|fffd|@|fffd||255||fffd||fffd||fffd||fffd||42a8f||fffd||fffd||fffd||fffd||fffd||fffd||702||a0bd||fffd||a347|
        URLencode = Left$(strBuffer, lngWriteCount - 1)         '|fffd|o|fffd|b|fffd|t|fffd|@|fffd||317|]|fffd||fffd||fffd||215||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd||7c2||fffd|l|fffd||182||fffd||fffd||fffd|
    End If

End Function
Public Function subncdec(ByVal b As String) As Long
    
    Dim R As Long
    R = Asc(UCase(b))
    If R > 64& Then
        subncdec = R - 55&
    Else
        subncdec = CLng(b)
    End If
    
End Function




Attribute VB_Name = "Module10"
'|fffd||752||fffd||1c2||74d||fffd||fffd||742||202||1d3||fffd||fffd||fffd|O|fffd||303|}|fffd|N|fffd||fffd|


Sub |fffd|o|fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd|I|fffd||fffd|()
    Dim fType, prompt As String
    Dim fPath As Variant
    Dim ws As Worksheet
    Set ws = Worksheets("Env")

    '|fffd|I|fffd||fffd||fffd||142||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30e||fffd||782||fffd|csv|fffd||24c||fffd||fffd||fffd|
    fType = "|f7||fffd||fffd||327||fffd||fffd| (*.txt),*.txt"

    '|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||303|^|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||fffd|
    prompt = "|fffd|Q|fffd||182||fffd||fffd||fffd|o|fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||109||fffd||fffd||fffd||fffd||fffd|"
    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|Q|fffd||183|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||315|\|fffd||fffd|
    fPath = Application.GetOpenFilename(fType, , prompt)

    If fPath = False Then
    '|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||143|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd|
        End
    End If

    'B2|fffd|Z|fffd||fffd||fffd||243|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g
    ws.Cells(4, 1).value = fPath
End Sub
Sub |fffd|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g|fffd|I|fffd||fffd|()
    Dim fType, prompt As String
    Dim fPath As Variant
    Dim ws As Worksheet
    Set ws = Worksheets("Env")

    '|fffd|I|fffd||fffd||fffd||142||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30e||fffd||782||fffd|csv|fffd||24c||fffd||fffd||fffd|
    fType = "|f7||fffd||fffd||327||fffd||fffd| (*.txt),*.txt"

    '|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||303|^|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||fffd|
    prompt = "|fffd|Q|fffd||182||fffd||fffd||fffd|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||109||fffd||fffd||fffd||fffd||fffd|"
    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|Q|fffd||183|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||315|\|fffd||fffd|
    fPath = Application.GetOpenFilename(fType, , prompt)

    If fPath = False Then
    '|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||143|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd|
        End
    End If

    'B2|fffd|Z|fffd||fffd||fffd||243|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g
    ws.Cells(7, 1).value = fPath
End Sub
Sub FBA|fffd||74c||243||fffd||fffd|||fffd|[|fffd|g|fffd|I|fffd||fffd|()
    Dim fType, prompt As String
    Dim fPath As Variant
    Dim ws As Worksheet
    Set ws = Worksheets("Env")

    '|fffd|I|fffd||fffd||fffd||142||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30e||fffd||782||fffd|csv|fffd||24c||fffd||fffd||fffd|
    fType = "|f7||fffd||fffd||327||fffd||fffd| (*.txt),*.txt"

    '|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||303|^|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||fffd|
    prompt = "|fffd|Q|fffd||182||fffd||fffd||fffd|FBA|fffd||74c||243||fffd||fffd|||fffd|[|fffd|g|fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||109||fffd||fffd||fffd||fffd||fffd|"
    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|Q|fffd||183|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||315|\|fffd||fffd|
    fPath = Application.GetOpenFilename(fType, , prompt)

    If fPath = False Then
    '|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||143|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd|
        End
    End If

    'B2|fffd|Z|fffd||fffd||fffd||243|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g
    ws.Cells(10, 1).value = fPath
End Sub
Sub |fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd|I|fffd||fffd|()
Dim a As String
With Application.FileDialog(msoFileDialogFolderPicker)
.Show
a = .SelectedItems(1)

End With
    
    Range("A13") = a
End Sub
Attribute VB_Name = "Module11"
Private Declare Sub Sleep Lib "kernel32" (ByVal dwMs As Long)
'|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|MWS|fffd|e|fffd|X|fffd|g|fffd||598|A

Sub |fffd||fffd||fffd||fffd||fffd|MWS|fffd|o|fffd|^()

Dim AWSkey As String
Dim Secretkey As String
Dim sellerID As String
Dim OrderID As String

AWSkey = Sheets("test").Cells(2, 2)
'Secretkey = Sheets("test").Cells(3, 2)
sellerID = Sheets("test").Cells(4, 2)
OrderID = Sheets("test").Cells(5, 2)

If AWSkey <> "" And sellerID <> "" And OrderID <> "" Then
    '|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||60a|J|fffd|n
    'Sheets("Name").Cells(17, 8) = AWSkey
    'Sheets("Name").Cells(20, 8) = OrderID
    MsgBox "|fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||303||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||602||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B" & vbNewLine _
            & "|fffd||fffd||fffd||fffd|ID|fffd||fffd|PayPal|fffd||30a||1d7||fffd||fffd|y|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd||fffd||34d|w|fffd||fffd||fffd||fffd||fffd||303||fffd||fffd|[|fffd||fffd||fffd||242||10a|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B" & vbNewLine _
            & "|fffd|E|fffd||a287||fffd|w|fffd||fffd||fffd||30f||a347| |fffd||fffd| |fffd||fffd||fffd|ID|fffd|F" & vbNewLine _
            & "|fffd|E|fffd||fffd||fffd|_|fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|x|fffd||fffd||fffd||30f||a347| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ID:" & vbNewLine _
            & "|fffd||182||fffd||fffd||fffd||fffd|\|fffd|L|fffd||242||202||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B"
    Application.Run "IE|fffd||fffd||fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd||43181|[|fffd|U|fffd|[|fffd|F|fffd||fffd|"
    
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd|MWS|fffd||310||691||fffd||fffd|e|fffd|X|fffd|g|fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B"
    
    Application.StatusBar = "MWS|fffd||310||691||fffd||fffd|e|fffd|X|fffd|g|fffd||fffd||fffd||fffd||fffd|{|fffd||fffd||fffd||702||fffd||fffd|B"
    
    Application.Run "MWS|fffd||143|f|fffd|[|fffd|^|fffd||64fe||fffd|e|fffd|X|fffd|g"
    Sleep 2000
    If Sheets("test").Cells(9, 2) = "MWS|fffd||691||fffd||fffd|e|fffd|X|fffd|g|fffd||fffd||fffd||fffd|" Then
    '==============
    If MsgBox("|fffd||691||fffd||fffd|e|fffd|X|fffd|gOK|fffd||142||fffd||fffd|B" & vbNewLine _
                & "|fffd|g|fffd|p|fffd||fffd||fffd||fffd|A|fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd|" & vbNewLine _
                & "MWS|fffd|F|fffd||603|L|fffd|[|fffd|F|fffd|@" & AWSkey & vbNewLine _
                & "|fffd|Z|fffd||fffd||fffd|[ID|fffd|F|fffd|@" & sellerID & vbNewLine & vbNewLine _
                & "|fffd||14a||508||10a2||fffd||202||fffd||fffd||fffd||381|uOK|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||fffd||110|i|fffd||fffd||149||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbNewLine _
                & "|fffd||fffd||fffd||282||303|A|fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||14e|g|fffd|p|fffd||fffd||fffd||fffd||202||fffd|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbOKCancel) = vbCancel Then
        End
    End If


    Application.StatusBar = ""
    
    'Name|fffd|V|fffd|[|fffd|g|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|---|fffd||fffd||fffd|e|fffd|X|fffd|g|fffd|V|fffd|[|fffd|g|fffd||24e|c|fffd||fffd||fffd||114||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|---------
    Application.ScreenUpdating = Fasle
    'Sheets("Name").Cells(17, 8) = AWSkey
    'Sheets("Name").Cells(18, 8) = sellerID
    'Sheets("Name").Cells(19, 8) = Secretkey
    
    'test|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||fffd|TOP|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|J|fffd||fffd|--------------------------------
    ActiveWorkbook.Unprotect Password:="nosuke7254"
      
    Worksheets("TOP").Visible = True
    Worksheets("test").Visible = False
    Sheets("TOP").Select
    ActiveWorkbook.Protect Password:="nosuke7254", Structure:=False, Windows:=True
    Application.ScreenUpdating = True
    '==============
    End If
    
Else
    MsgBox "MWS|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||352||fffd||fffd||fffd|ID|fffd||254||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B|fffd||fffd||fffd||34c||fffd||113|x|fffd||691||fffd||fffd|e|fffd|X|fffd|g|fffd||fffd||fffd|s|fffd||fffd||fffd||109||fffd||fffd||fffd||fffd||fffd||fffd|B|fffd||202||fffd|MWS|fffd||fffd||fffd||343|Z|fffd||fffd||fffd|[|fffd|Z|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||fffd|E|fffd||fffd||301|u|fffd||752||fffd|v|fffd||fffd||fffd|u|fffd||fffd||fffd|[|fffd|U|fffd|[|fffd||fffd||fffd||fffd||fffd|v|fffd||242||10a|m|fffd|F|fffd||142||fffd||fffd||702||fffd||fffd|B"
End If

End Sub

Sub IE|fffd||fffd||fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd||43181|[|fffd|U|fffd|[|fffd|F|fffd||fffd|()

Dim AWS As String
    AWS = Sheets("test").Cells(2, 2)
Dim OrderID As String
    OrderID = Sheets("test").Cells(5, 2)

Dim AuthAWS As String

'IE|fffd||fffd||fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|---------
Dim httpReq As XMLHTTP60
Set httpReq = New XMLHTTP60

httpReq.Open "GET", "http://kakakaka.info/auth/license/sedori-tool/" & OrderID & ".html", True, "kakakaka", "password"
httpReq.send

Do While httpReq.readyState < 4
    DoEvents
Loop

Dim htmlDoc As Variant
htmlDoc = httpReq.responseText

AuthAWS = Mid(htmlDoc, InStr(htmlDoc, "<div class=""AWS"">") + Len("<div class=""AWS"">"), InStr(htmlDoc, "<div class=""Mail"">") - InStr(htmlDoc, "<div class=""AWS"">") - Len("<div class=""AWS"">") - 7)


    If AuthAWS = "" Then
        MsgBox "|fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||948d||fffd||fffd||fffd||50d||fffd||fffd||303||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & vbCrLf _
                & "|fffd|c|fffd|[|fffd||fffd||fffd||303|}|fffd|j|fffd||fffd||fffd|A|fffd||fffd||fffd|T|fffd|C|fffd|g|fffd||fffd||fffd|MWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
        End
    End If

    If AuthAWS = "Undecided" Then
        Application.StatusBar = "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||610||fffd||fffd||fffd||142||fffd||fffd|B"
    Else
        If AWS = AuthAWS Then
            Application.StatusBar = "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||610||fffd||fffd||fffd||142||fffd||fffd|B"
        Else
            If Len(AuthAWS) = 20 Then
                MsgBox "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||fffd|NG|fffd||142||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd||fffd||fffd||342||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ID|fffd||303||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd||fffd|AWS|fffd|L|fffd|[|fffd||142||314|F|fffd||602||302||702||701|i|fffd||c2||fffd||fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd|j|fffd||302||60a4||fffd||202||302||141|A" & vbCrLf _
                        & "|fffd|}|fffd|j|fffd||fffd||fffd|A|fffd||fffd||fffd|T|fffd|C|fffd|g|fffd||fffd||fffd||113|x|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|o|fffd|^|fffd||fffd||fffd||fffd||fffd||80a2||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd|c|fffd|[|fffd||fffd||fffd|_|fffd||4e782||301|yPayPal|fffd||fffd||fffd||fffd|ID|fffd|z|fffd|yMWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd|z|fffd|y|fffd||fffd||fffd|[|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||80a2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||243|c|fffd|[|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||60a4||fffd||242||202||fffd||702||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||602||242||82||fffd||fffd||115|s|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd||fffd|A" & vbCrLf _
                        & "|fffd|E|fffd|y|fffd|y|fffd|C|fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|ID|fffd|z" & vbCrLf _
                        & "|fffd|E|fffd|yMWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd|z" & vbCrLf _
                        & "|fffd|E|fffd|y|fffd|y|fffd|C|fffd|p|fffd||fffd||fffd||253|o|fffd|^|fffd||fffd||fffd||fffd||102||90c1||fffd|[|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|z" & vbCrLf _
                        & "|fffd||fffd|Y|fffd||fffd||fffd||101|unosuke1@nosukenosusume.info|fffd|v|fffd||702||142||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
            Else
                MsgBox "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||fffd|NG|fffd||142||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd||fffd||fffd||342||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ID|fffd||fffd|MWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd||311|g|fffd||74d||fffd||fffd||d0b9||fffd||fffd||fffd||508||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd||fffd||fffd||508||10a2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||381|A" & vbCrLf _
                        & "|fffd|E|fffd|y|fffd|y|fffd|C|fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|ID|fffd|z" & vbCrLf _
                        & "|fffd|E|fffd|yMWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd|z" & vbCrLf _
                        & "|fffd|E|fffd|y|fffd|y|fffd|C|fffd|p|fffd||fffd||fffd||253|o|fffd|^|fffd||fffd||fffd||fffd||102||90c1||fffd|[|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|z" & vbCrLf _
                        & "|fffd||fffd|Y|fffd||fffd||fffd||101|unosuke1@nosukenosusume.info|fffd|v|fffd||702||142||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
            End If
            End
        End If
    End If

Set htmlDoc = Nothing
Set httpReq = Nothing
'-----------------------------

End Sub

Sub MWS|fffd||143|f|fffd|[|fffd|^|fffd||64fe||fffd|e|fffd|X|fffd|g()

'|fffd||3d0||fffd||fffd||933e|------------------------------------------
Dim Url As String

Dim xmldata As Object
Dim Result As Object
Dim timestamp As String

Dim rowIndex As Long

Dim SignedUrl As String
Dim sKey As String
Dim AWSkey As String
Dim MarketPlaceID As String
Dim sellerID As String
Dim Token As String
Dim SelfExclude As String
Dim ItemCondition As String

Dim Action As String
Dim APIVersion As String

Dim ASIN As String
Dim NODE As String
Dim Need As String
'-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim sign As String
Dim rawTextToSign As String
Dim ecsaddress As String
Dim i As Long, j As Long, k As Long
Dim tmpPrice As Double
Dim tmpObj As Object
'|fffd||fffd||28d|X|fffd|V----------------------------
Application.ScreenUpdating = True

'|fffd||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd|------------------------------------

    MWSsKey = Worksheets("Test").Range("B2")
    sKey = Worksheets("Debug2").Range("B4")
    AWSkey = Worksheets("Debug2").Range("B3")
    sellerID = Sheets("Test").Range("B4")


MarketPlaceID = "A1VC38T7YXB528"


SelfExclude = "false"
ItemCondition = "Used"


Action = "GetLowestOfferListingsForASIN"
APIVersion = "2011-10-01"
ecsaddress = "mws.amazonservices.jp"

ASIN = Worksheets("test").Range("B6")

NODE = "GetLowestOfferListingsForASINResult/Product"


Need = "Price"
'|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|E|fffd|C|fffd||fffd||fffd|h|fffd|E|fffd||315|W|fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|Amazon2excel|fffd||fffd||149|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||101|A
'|fffd|@|fffd||6cc||fffd|^|fffd|u|fffd|`|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||303|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd||342||fffd||fffd||90b1||fffd||181|B
'|fffd|@|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||315||fffd||fffd||fffd||fffd||312||fffd||fffd||fffd||fffd||fffd|13|fffd|P|fffd|^|fffd||20f||fffd|`|fffd||fffd||fffd||fffd||fffd||fffd||392||fffd||fffd||fffd||fffd||642||1c2||60a2||fffd|`|fffd||242||fffd||fffd||90b1||fffd||181|B
ChDrive ActiveWorkbook.Path
ChDir ActiveWorkbook.Path
'--------------------------------------

'|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd|J|fffd|n|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Sheets("test").Select

'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") > 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If
'URL|fffd||c42c|----------------------------------------------------------------
'|fffd||fffd||fffd|i|fffd||64fe||fffd|p|fffd||fffd|URL|fffd||c42c|----------------------------------------------------------------
rawText = ""
        rawText = rawText & "ASINList.ASIN.1=" & ASIN
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
        rawText = rawText _
                & "&AWSAccessKeyId=" & AWSkey _
                & "&Action=" & Action _
                & "&ExcludeMe=False" _
                & "&MWSAuthToken=" & MWSsKey _
                & "&MarketplaceId=" & MarketPlaceID _
                & "&SellerId=" & sellerID _
                & "&SignatureMethod=HmacSHA256" _
                & "&SignatureVersion=2" _
                & "&Timestamp=" & timestamp _
                & "&Version=" & APIVersion

        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/Products/2011-10-01" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
'|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------

        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        Url = "https://" & ecsaddress & "/Products/2011-10-01?" & rawText & "&Signature=" & sign

    
'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
    Set xmldata = CreateObject("Microsoft.XMLDOM")
    xmldata.async = False
    xmldata.Load Url
    '|fffd|@|fffd||3d0||fffd|SignedUrl|fffd|i|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|url|fffd|j|fffd||313||fffd||fffd|e|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd|B
    '|fffd|@|fffd||82||702||fffd|Aamazon.co.jp|fffd||fffd|WEB|fffd|T|fffd|[|fffd|r|fffd|X|fffd||243|A|fffd|N|fffd|Z|fffd|X|fffd||fffd||fffd|A|fffd|w|fffd||fffd||fffd||fffd||fffd||fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|B
    '|fffd|@|fffd||64fe||fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||341|AXMLDOM|fffd||312||8414||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd||fffd|B
    '|fffd|@|fffd||209||fffd||fffd||141|AXMLDOM-|fffd||64fe||fffd|f|fffd|[|fffd|^|fffd||12182||157|~|fffd||fffd||fffd||fffd||fffd||fffd||42a82||1c2||303|p|fffd|X|fffd||242||fffd||fffd||90a9||fffd||fffd||fffd|w|fffd||80b5||fffd||101|A|fffd|G|fffd|N|fffd|Z|fffd||fffd||fffd||255|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B

    Set Result = xmldata.SelectNodes("GetLowestOfferListingsForASINResponse/GetLowestOfferListingsForASINResult/Product")
    'Set Result = xmldata.SelectSingleNode("GetLowestOfferListingsForASINResponse/GetLowestOfferListingsForASINResult/Product")
    '|fffd|@|fffd|uxml.selectSingleNode|fffd|v|fffd||341|AXML|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd||4c2||302|P|fffd|m|fffd|[|fffd|h(IXMLDOMNode)|fffd||fffd||fffd||64fe||fffd||fffd||fffd||90c1||fffd|\|fffd|b|fffd|h|fffd|B
    '|fffd|@|fffd||fffd||fffd||fffd||fffd||242||fffd|XPath|fffd||14c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|w|fffd||80b7||fffd||9841|@XML|fffd||fffd||fffd||fffd||fffd||302||1c2||315||fffd||fffd||fffd||fffd||243|^|fffd|C|fffd|g|fffd||fffd||fffd||202||1c2||30f||fffd||42a82||fffd||fffd||90a9||fffd||303|p|fffd|X|fffd||fffd|
    '|fffd|@itemAttributes|fffd||3d0||fffd||fffd||251||fffd||fffd||fffd||fffd||fffd||fffd|B|fffd|@|fffd||fffd||fffd||303|p|fffd|X|fffd||fffd|amazon|fffd||157|L|fffd|B
    '|fffd|@|fffd|C|fffd||fffd||fffd|[|fffd|W|fffd||341|Ahttp://ajex2.web.fc2.com/BGExample01.htm#DOM|fffd|@|fffd||242||fffd||fffd||fffd||702||fffd||fffd|B


    If Not Result Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
        On Error GoTo myError
        Set tmpObj = Result(0).SelectNodes("LowestOfferListings/LowestOfferListing")
        tmpPrice = tmpObj(0).SelectSingleNode("Price/LandedPrice/Amount").Text
        If tmpPrice <> Empty Then
            ActiveSheet.Cells(9, 2) = "MWS|fffd||691||fffd||fffd|e|fffd|X|fffd|g|fffd||fffd||fffd||fffd|"
        End If
    Else
myError:
        ActiveSheet.Cells(9, 2) = "MWS|fffd||691||fffd||fffd||fffd||fffd|s"
        MsgBox "MWS|fffd||fffd||42a8a||508||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||fffd|B|fffd|@|fffd||508||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||a347||fffd||351||fffd||fffd||742||fffd||fffd||fffd|ASIN|fffd||fffd||fffd|w|fffd||80b5||fffd||109||fffd||fffd||fffd||fffd||fffd||fffd|B|fffd|@|fffd||fffd||fffd||fffd||142||fffd||fffd|q|fffd||fffd||fffd||fffd||202||fffd||fffd||a347||fffd||355||28e||fffd||fffd||303|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|I|fffd|v|fffd|V|fffd||fffd||fffd||fffd||fffd||310||752||fffd||fffd||24f|]|fffd||fffd||fffd||101|A|fffd|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd|p|fffd|l|fffd||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|l|fffd|b|fffd|g|fffd|I|fffd|v|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||fffd||3cd|X|fffd||fffd||fffd|s|fffd||fffd||fffd||109||fffd||fffd||fffd||fffd||fffd||fffd|B"
    End If
    
    

End Sub
Sub IE|fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd|[|fffd|v|fffd||fffd||fffd||303||fffd||fffd|[|fffd|U|fffd|[|fffd|F|fffd||fffd|()

Dim AWS As String
    AWS = Sheets("test").Cells(2, 2)
Dim OrderID As String
    OrderID = Sheets("test").Cells(5, 2)

Dim AuthAWS As String

'IE|fffd||fffd||fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|---------
Dim httpReq As XMLHTTP60
Set httpReq = New XMLHTTP60

httpReq.Open "GET", "http://kakakaka.info/auth/license/sedori-tool/" & OrderID & ".html", True, "kakakaka", "password"
httpReq.send

Do While httpReq.readyState < 4
    DoEvents
Loop

Dim htmlDoc As Variant
htmlDoc = httpReq.responseText

AuthAWS = Mid(htmlDoc, InStr(htmlDoc, "<div class=""AWS"">") + Len("<div class=""AWS"">"), InStr(htmlDoc, "<div class=""Mail"">") - InStr(htmlDoc, "<div class=""AWS"">") - Len("<div class=""AWS"">") - 7)


    If AuthAWS = "" Then
        MsgBox "|fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||948d||fffd||fffd||fffd||50d||fffd||fffd||303||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & vbCrLf _
                & "|fffd|c|fffd|[|fffd||fffd||fffd||303|}|fffd|j|fffd||fffd||fffd|A|fffd||fffd||fffd|T|fffd|C|fffd|g|fffd||fffd||fffd|MWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
        End
    End If

    If AuthAWS = "Undecided" Then
        Application.StatusBar = "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||610||fffd||fffd||fffd||142||fffd||fffd|B"
    Else
        If AWS = AuthAWS Then
            Application.StatusBar = "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||610||fffd||fffd||fffd||142||fffd||fffd|B"
        Else
            If Len(AuthAWS) = 20 Then
                MsgBox "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||fffd|NG|fffd||142||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd||fffd||fffd||342||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ID|fffd||303||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd||fffd|AWS|fffd|L|fffd|[|fffd||142||314|F|fffd||602||302||702||701|i|fffd||c2||fffd||fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd|j|fffd||302||60a4||fffd||202||302||141|A" & vbCrLf _
                        & "|fffd|}|fffd|j|fffd||fffd||fffd|A|fffd||fffd||fffd|T|fffd|C|fffd|g|fffd||fffd||fffd||113|x|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|o|fffd|^|fffd||fffd||fffd||fffd||fffd||80a2||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd|c|fffd|[|fffd||fffd||fffd|_|fffd||4e782||301|yPayPal|fffd||fffd||fffd||fffd|ID|fffd|z|fffd|yMWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd|z|fffd|y|fffd||fffd||fffd|[|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||80a2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||243|c|fffd|[|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||60a4||fffd||242||202||fffd||702||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||602||242||82||fffd||fffd||115|s|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd||fffd|A" & vbCrLf _
                        & "|fffd|E|fffd|y|fffd|y|fffd|C|fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|ID|fffd|z" & vbCrLf _
                        & "|fffd|E|fffd|yMWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd|z" & vbCrLf _
                        & "|fffd|E|fffd|y|fffd|y|fffd|C|fffd|p|fffd||fffd||fffd||253|o|fffd|^|fffd||fffd||fffd||fffd||102||90c1||fffd|[|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|z" & vbCrLf _
                        & "|fffd||fffd|Y|fffd||fffd||fffd||101|unosuke1@nosukenosusume.info|fffd|v|fffd||702||142||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
            Else
                MsgBox "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||fffd|NG|fffd||142||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd||fffd||fffd||342||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ID|fffd||fffd|MWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd||311|g|fffd||74d||fffd||fffd||d0b9||fffd||fffd||fffd||508||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd||fffd||fffd||508||10a2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||381|A" & vbCrLf _
                        & "|fffd|E|fffd|y|fffd|y|fffd|C|fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|ID|fffd|z" & vbCrLf _
                        & "|fffd|E|fffd|yMWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd|z" & vbCrLf _
                        & "|fffd|E|fffd|y|fffd|y|fffd|C|fffd|p|fffd||fffd||fffd||253|o|fffd|^|fffd||fffd||fffd||fffd||102||90c1||fffd|[|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|z" & vbCrLf _
                        & "|fffd||fffd|Y|fffd||fffd||fffd||101|unosuke1@nosukenosusume.info|fffd|v|fffd||702||142||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
            End If
            End
        End If
    End If

Set htmlDoc = Nothing
Set httpReq = Nothing
'-----------------------------

End Sub
Attribute VB_Name = "Module12"
'|fffd|O|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30e||fffd||835e||fffd||74a||598|A
Sub |fffd|e|fffd||d0cc||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||fffd|()

'|fffd|S|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd|
Call AllReportFromRequestToGet("", "", "")
    
'|fffd||fffd||28d|X|fffd|V|fffd||fffd|OFF|fffd||242||fffd||fffd||10d||fffd||fffd||fffd||fffd||fffd|--------
Application.ScreenUpdating = False
            '|fffd|o|fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||fffd|-------------------------
            Application.StatusBar = "|fffd|o|fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||742||30e||fffd||fffd|s"
                                ActiveWorkbook.Unprotect Password:="nosuke7254"
            Application.Run "|fffd||74c||242||fffd||fffd||fffd||302||74f|o|fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||fffd|"
                                ActiveWorkbook.Protect Password:="nosuke7254", Structure:=False, Windows:=True
                                
                                
            If Sheets("Config").Cells(34, 1) = "ON" Or Sheets("Config").Cells(14, 1) = "ON" Then
            'FBA|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||30e||fffd||835e||fffd||74f||fffd||fffd||fffd|--------
            Application.StatusBar = "FBA|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||742||30e||fffd||fffd|s"
                                ActiveWorkbook.Unprotect Password:="nosuke7254"
                Application.Run "|fffd||74c||242||fffd||fffd||fffd||302||fffd|FBA|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||fffd|"
                                ActiveWorkbook.Protect Password:="nosuke7254", Structure:=False, Windows:=True
            End If
            
            
            If Sheets("Env").Cells(7, 2) = "ON" Then
            '|fffd|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||30e||fffd||835e||fffd||74f||fffd||fffd||fffd|--------
            Application.StatusBar = "|fffd|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||742||30e||fffd||fffd|s"
                                ActiveWorkbook.Unprotect Password:="nosuke7254"
                Application.Run "|fffd||74c||242||fffd||fffd||fffd||302||74f|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||fffd|"
                                ActiveWorkbook.Protect Password:="nosuke7254", Structure:=False, Windows:=True
            '--------------------------------------
            End If
Application.StatusBar = "|fffd|e|fffd||d0cc||fffd|||fffd|[|fffd|g|fffd||30e||fffd||835e||fffd||742||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|"
'|fffd||fffd||28d|X|fffd|V|fffd||fffd||7c2||fffd|-------
Application.ScreenUpdating = True
Application.StatusBar = ""
'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set Config = Nothing
End Sub

Sub |fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||752|P|fffd||30e||fffd||fffd|s()
    Application.Run "|fffd|e|fffd||d0cc||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||fffd|"
    MsgBox "|fffd|e|fffd||d0cc||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||835e||fffd||749||fffd||fffd|i|fffd||fffd||fffd||fffd||38f||6c2||312||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"

End Sub

Sub |fffd||74c||242||fffd||fffd||fffd||302||74f|o|fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||fffd|()
'|fffd||fffd||28d|X|fffd|V|fffd||fffd|OFF|fffd||242||fffd||fffd||10d||fffd||fffd||fffd||fffd||fffd|--------
Application.ScreenUpdating = False
'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
Dim Env As Worksheet
    Set Env = Sheets("Env")
Dim SypnReport As Worksheet
    Set SypnReport = Sheets("SypnReport")
'|fffd||fffd|{|fffd||752||856a||fffd||315||3d0||fffd||fffd||312||fffd|`----------------------------------


Dim SypnRepoPass As String
Dim SypnRepoFullPass As String
Dim SypnRepoFile As String
Dim SypnRepoName As String
'|fffd||fffd||fffd|OSKU|fffd||313||1c2||74d||fffd||fffd||fffd|
Dim SKUIni() As String
Dim IniNum As Long
    IniNum = Application.WorksheetFunction.CountA(Env.Range("B34:B38"))
    If IniNum > 0 Then
        ReDim SKUIni(IniNum)
        For p = 0 To IniNum - 1
            SKUIni(p) = Env.Cells(p + 34, 2)
        DoEvents
        Next
    End If
'|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X|fffd||30e||64fe|----------------------------------

Dim Spell As String
Dim PassNumber As Long

SypnRepoFullPass = ActiveWorkbook.Path & "\report\sypn-report.txt"

    For n = 1 To Len(SypnRepoFullPass)
        Spell = Left(Right(SypnRepoFullPass, n), 1)
        If Spell = "\" Then
            PassNumber = n
            SypnRepoPass = Left(SypnRepoFullPass, Len(SypnRepoFullPass) - PassNumber)
            GoTo labelPass01
        End If
    Next
labelPass01:


SypnRepoFile = Right(SypnRepoFullPass, PassNumber - 1)
    For n = 1 To Len(SypnRepoFile)
        Spell = Left(Right(SypnRepoFile, n), 1)
        If Spell = "." Then
            PassNumber = n
            SypnRepoName = Left(SypnRepoFile, Len(SypnRepoFile) - PassNumber - 1)
            GoTo labelPass02
        End If
    Next
labelPass02:

'------------------------------------------------------


'|fffd||fffd||fffd|o|fffd||5c2||312||fffd||fffd||fffd||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|J|fffd||fffd||fffd||103|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||835e||fffd||fffd|--------------------------------
'|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
SypnReport.Columns("A:D").ClearContents



    Dim v As Variant
        v = SypnReport.Columns("A:D")


'|fffd|^|fffd|u|fffd||fffd||602||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|S|fffd||115||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||113||1c2||74d||fffd||fffd||fffd|

    Dim FileName As String
    Dim i As Long
    Dim Cnt As Long
    Dim Buf As Variant
    Dim FileNo As Integer
    Dim SplitString As Variant

Dim count As Long
Dim IgnoreCount As Long
    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd|\|fffd||fffd|
    FileName = SypnRepoFullPass


        '|fffd|S|fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||15d8e||fffd||fffd||fffd||243|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
        SypnReport.Cells.NumberFormatLocal = "@"
        'Sheets("SypnReport").Cells(1, 1).Select

        '|fffd||c2882||102||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd||64fe|
        FileNo = FreeFile()
        Buf = Space(FileLen(FileName))

        '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd|buf|fffd||fffd|1|fffd|s|fffd||1c2||74d||fffd||fffd||fffd|
        ' |fffd||fffd| |fffd|^|fffd|u|fffd||154|z|fffd||fffd||255||fffd||fffd||fffd|
        ' |fffd||fffd| |fffd|Z|fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Open FileName For Input As #FileNo
        Do Until EOF(FileNo)
            Line Input #FileNo, Buf
            If Buf <> "" Then
                SplitString = Split(Buf, vbTab)
                count = count + 1
                Application.StatusBar = "|fffd|o|fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||752||fffd||fffd|@" & count - 1 & "|fffd||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||38f||fffd|SKU|fffd|F" & Cnt - 1 & " |fffd||fffd||fffd|OSKU|fffd|F" & IgnoreCount
                '1|fffd|s|fffd||682||34c||fffd||fffd|o|fffd||fffd||fffd|s
                If count = 1 Then
                    Cnt = Cnt + 1
                    v(Cnt, 1) = SplitString(0)
                    v(Cnt, 2) = SplitString(1)
                    v(Cnt, 3) = SplitString(2)
                    v(Cnt, 3) = SplitString(3)
                    GoTo SKIPSKU
                End If
                
                '|fffd||fffd||fffd|OSKU|fffd||fffd||fffd||fffd|
                If IniNum > 0 Then
                    For u = 0 To IniNum - 1
                        If Left(SplitString(0), Len(SKUIni(u))) = SKUIni(u) Then
                            IgnoreCount = IgnoreCount + 1
                            GoTo SKIPSKU
                        End If
                    DoEvents
                    Next
                End If
                    
                '|fffd||fffd||fffd|O|fffd||142||202||fffd||fffd||fffd||fffd|
                '|fffd||74c||242||fffd||fffd||80a9|FBA|fffd||202||fffd||fffd|
                If Buf <> Empty Then
                    If SplitString(3) > 0 And SplitString(3) <> "" Then
                        Cnt = Cnt + 1
                        v(Cnt, 1) = SplitString(0)
                        v(Cnt, 2) = SplitString(1)
                        v(Cnt, 3) = SplitString(2)
                        v(Cnt, 3) = SplitString(3)
                    End If
                End If
            End If
SKIPSKU:
        DoEvents
        Loop
        Application.StatusBar = ""
        Close #FileNo
        

        SypnReport.Columns("A:D") = v
        Erase v
        '|fffd||38f||6cc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Sheets("TOP").Cells(8, 7) = Cnt - 1
        
Application.StatusBar = "|fffd|o|fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||74a||fffd||fffd||fffd|"
Application.StatusBar = ""
'|fffd||fffd||28d|X|fffd|V|fffd||fffd|OFF|fffd||242||fffd||fffd||10d||fffd||fffd||fffd||fffd||fffd|--------
Application.ScreenUpdating = True
'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set SypnReport = Nothing
    Set Env = Nothing
End Sub

Sub |fffd||74c||242||fffd||fffd||fffd||302||fffd|FBA|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||fffd|()
'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
Dim Env As Worksheet
    Set Env = Sheets("Env")
Dim FBAReport As Worksheet
    Set FBAReport = Sheets("FBAReport")
    
'|fffd||fffd||28d|X|fffd|V|fffd||fffd|OFF|fffd||242||fffd||fffd||10d||fffd||fffd||fffd||fffd||fffd|--------
Application.ScreenUpdating = False
'|fffd||fffd|{|fffd||752||856a||fffd||315||3d0||fffd||fffd||312||fffd|`----------------------------------


Dim FBARepoPass As String
Dim FBARepoFullPass As String
Dim FBARepoFile As String
Dim FBARepoName As String

'|fffd||fffd||fffd|OSKU|fffd||313||1c2||74d||fffd||fffd||fffd|
Dim SKUIni() As String
Dim IniNum As Long
    IniNum = Application.WorksheetFunction.CountA(Env.Range("B34:B38"))
    If IniNum > 0 Then
        ReDim SKUIni(IniNum)
        For p = 0 To IniNum - 1
            SKUIni(p) = Env.Cells(p + 34, 2)
        DoEvents
        Next
    End If
'|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X|fffd||30e||64fe|----------------------------------

Dim Spell As String
Dim PassNumber As Long

FBARepoFullPass = ActiveWorkbook.Path & "\report\FBA-report.txt"

    For n = 1 To Len(FBARepoFullPass)
        Spell = Left(Right(FBARepoFullPass, n), 1)
        If Spell = "\" Then
            PassNumber = n
            FBARepoPass = Left(FBARepoFullPass, Len(FBARepoFullPass) - PassNumber)
            GoTo labelPass01
        End If
    Next
labelPass01:


FBARepoFile = Right(FBARepoFullPass, PassNumber - 1)
    For n = 1 To Len(FBARepoFile)
        Spell = Left(Right(FBARepoFile, n), 1)
        If Spell = "." Then
            PassNumber = n
            FBARepoName = Left(FBARepoFile, Len(FBARepoFile) - PassNumber)
            GoTo labelPass02
        End If
    Next
labelPass02:

'------------------------------------------------------


'|fffd||fffd||fffd|o|fffd||5c2||312||fffd||fffd||fffd||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|J|fffd||fffd||fffd||103|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||835e||fffd||fffd|--------------------------------
'|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
FBAReport.Columns("A:F").ClearContents


    Dim v As Variant
        v = FBAReport.Columns("A:F")

'|fffd|^|fffd|u|fffd||fffd||602||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|S|fffd||115||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||113||1c2||74d||fffd||fffd||fffd|

    Dim FileName As String
    Dim i As Long
    Dim Cnt As Long
    Dim Buf As Variant
    Dim FileNo As Integer
    Dim SplitString As Variant
    Dim SplitString2 As Variant
    
    Dim count As Long

    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd|\|fffd||fffd|
    FileName = FBARepoFullPass


        '|fffd|S|fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||15d8e||fffd||fffd||fffd||243|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
        FBAReport.Cells.NumberFormatLocal = "@"
        'Sheets("FBAReport").Cells(1, 1).Select

        '|fffd||c2882||102||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd||64fe|
        FileNo = FreeFile()
        Buf = Space(FileLen(FileName))

        '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd|buf|fffd||fffd|1|fffd|s|fffd||1c2||74d||fffd||fffd||fffd|
        ' |fffd||fffd| |fffd|^|fffd|u|fffd||154|z|fffd||fffd||255||fffd||fffd||fffd|
        ' |fffd||fffd| |fffd|Z|fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Open FileName For Input As #FileNo
        Do Until EOF(FileNo)
            Line Input #FileNo, Buf
        If Buf <> "" Then
                SplitString = Split(Buf, vbTab)
                count = count + 1
                '1|fffd|s|fffd||682||34c||fffd||fffd|o|fffd||fffd||fffd|s
                If count = 1 Then
                    Cnt = Cnt + 1
                    v(Cnt, 1) = SplitString(0)
                    v(Cnt, 2) = SplitString(1)
                    v(Cnt, 3) = SplitString(2)
                    v(Cnt, 4) = SplitString(3)
                    v(Cnt, 5) = SplitString(4)
                    v(Cnt, 6) = SplitString(5)
                Else
                    '|fffd||fffd||fffd|OSKU|fffd||fffd||fffd||fffd|
                    If IniNum > 0 Then
                        For u = 0 To IniNum - 1
                            If Left(SplitString(0), Len(SKUIni(u))) = SKUIni(u) Then
                                IgnoreCount = IgnoreCount + 1
                                GoTo SKIPSKU
                            End If
                        DoEvents
                        Next
                    End If
                    '|fffd||fffd||fffd|OSKU|fffd||142||202||fffd||fffd||74c||250||fffd|1|fffd||20f||fffd||202||fffd|
                    If Buf <> Empty Then
                        If SplitString(5) > 0 Then
                            Cnt = Cnt + 1
                            v(Cnt, 1) = SplitString(0)
                            v(Cnt, 2) = SplitString(1)
                            v(Cnt, 3) = SplitString(2)
                            v(Cnt, 4) = SplitString(3)
                            v(Cnt, 5) = SplitString(4)
                            v(Cnt, 6) = SplitString(5)
                        End If
                    End If
                End If
            End If
SKIPSKU:
                Application.StatusBar = "FBA|fffd||74c||243||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||752||fffd||fffd|@" & count & "|fffd||fffd||fffd||fffd||fffd|A|fffd||38f||fffd|SKU|fffd|F" & Cnt


            
        DoEvents
        Loop
        Application.StatusBar = ""
        Close #FileNo
        Application.StatusBar = "|fffd|V|fffd|[|fffd|g|fffd||24f||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd|"
        FBAReport.Columns("A:F") = v
        Erase v
        
        '|fffd||38f||6cc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Sheets("TOP").Cells(8, 8) = Cnt - 1
'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set Env = Nothing
    Set FBAReport = Nothing
    
Application.StatusBar = "FBA|fffd||74c||243||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||74a||fffd||fffd||fffd|"
Application.StatusBar = ""
'|fffd||fffd||28d|X|fffd|V|fffd||fffd|OFF|fffd||242||fffd||fffd||10d||fffd||fffd||fffd||fffd||fffd|--------
Application.ScreenUpdating = True
End Sub
Sub |fffd||74c||242||fffd||fffd||fffd||302||74f|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||fffd|()

'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
Dim Env As Worksheet
    Set Env = Sheets("Env")
Dim SypnSyosaiReport As Worksheet
    Set SypnSyosaiReport = Sheets("SypnSyosaiReport")

'|fffd||fffd||28d|X|fffd|V|fffd||fffd|OFF|fffd||242||fffd||fffd||10d||fffd||fffd||fffd||fffd||fffd|--------
Application.ScreenUpdating = False
'|fffd||fffd|{|fffd||752||856a||fffd||315||3d0||fffd||fffd||312||fffd|`----------------------------------


Dim SypnSyosaiRepoPass As String
Dim SypnSyosaiRepoFullPass As String
Dim SypnSyosaiRepoFile As String
Dim SypnSyosaiRepoName As String


'|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X|fffd||30e||64fe|----------------------------------

Dim Spell As String
Dim PassNumber As Long

SypnSyosaiRepoFullPass = ActiveWorkbook.Path & "\report\sypn-syosai-report.txt"

    For n = 1 To Len(SypnSyosaiRepoFullPass)
        Spell = Left(Right(SypnSyosaiRepoFullPass, n), 1)
        If Spell = "\" Then
            PassNumber = n
            SypnSyosaiRepoPass = Left(SypnSyosaiRepoFullPass, Len(SypnSyosaiRepoFullPass) - PassNumber)
            GoTo labelPass01
        End If
    Next
labelPass01:


SypnSyosaiRepoFile = Right(SypnSyosaiRepoFullPass, PassNumber - 1)
    For n = 1 To Len(SypnSyosaiRepoFile)
        Spell = Left(Right(SypnSyosaiRepoFile, n), 1)
        If Spell = "." Then
            PassNumber = n
            SypnSyosaiRepoName = Left(SypnSyosaiRepoFile, Len(SypnSyosaiRepoFile) - PassNumber)
            GoTo labelPass02
        End If
    Next
labelPass02:

'------------------------------------------------------


'|fffd||fffd||fffd|o|fffd||5c2||312||fffd||fffd||fffd||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|J|fffd||fffd||fffd||103|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||835e||fffd||fffd|--------------------------------
'|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
SypnSyosaiReport.Columns("A:Z").ClearContents


    Dim v As Variant
        v = SypnSyosaiReport.Columns("A:C")

'|fffd|^|fffd|u|fffd||fffd||602||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|S|fffd||115||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||113||1c2||74d||fffd||fffd||fffd|

    Dim FileName As String
    Dim i As Long
    Dim Cnt As Long
    Dim Buf As Variant
    Dim FileNo As Integer
    Dim SplitString As Variant
    Dim SplitString2 As Variant
    
    Dim SyosaiNum As Long
        SyosaiNum = 0
    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||fffd|\|fffd||fffd|
    FileName = SypnSyosaiRepoFullPass


        '|fffd|S|fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||15d8e||fffd||fffd||fffd||243|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
        SypnSyosaiReport.Cells.NumberFormatLocal = "@"
        'Cells(1, 1).Select

        '|fffd||c2882||102||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd||64fe|
        FileNo = FreeFile()
        Buf = Space(FileLen(FileName))

        '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd|buf|fffd||fffd|1|fffd|s|fffd||1c2||74d||fffd||fffd||fffd|
        ' |fffd||fffd| |fffd|^|fffd|u|fffd||154|z|fffd||fffd||255||fffd||fffd||fffd|
        ' |fffd||fffd| |fffd|Z|fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Open FileName For Input As #FileNo
        Application.StatusBar = "|fffd|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|j|fffd|@"
        Do Until EOF(FileNo)
            Line Input #FileNo, Buf
            If Buf <> "" Then
                Cnt = 0
                SplitString = Split(Buf, vbLf)
                For i = 0 To UBound(SplitString) - 1
                    SplitString2 = Split(SplitString(i), vbTab)
                    Cnt = Cnt + 1
                    v(Cnt, 1) = SplitString2(2)
                    v(Cnt, 2) = SplitString2(5)
                    v(Cnt, 3) = SplitString2(8)
                    Application.StatusBar = "|fffd|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||752||fffd||fffd|@" & Cnt & "/" & UBound(SplitString)
                Next i
            End If
            
        DoEvents
        Loop
        Application.StatusBar = ""
        Close #FileNo
        

        SypnSyosaiReport.Columns("A:C") = v


    
    
'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set Env = Nothing
    Set SypnSyosaiReport = Nothing

Application.StatusBar = "|fffd|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||74a||fffd||fffd||fffd|"
Application.StatusBar = ""
'|fffd||fffd||28d|X|fffd|V|fffd||fffd|OFF|fffd||242||fffd||fffd||10d||fffd||fffd||fffd||fffd||fffd|--------
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Module13"
'|fffd||fffd||fffd|i|fffd||fffd||fffd||84ee||fffd||fffd|
Function GetSypnPrice(SKU As String, ASIN As String, SelfFullFill As String, PriceTest As String) As Variant
'|fffd||38f||6c3|V|fffd|[|fffd|g|fffd||312||fffd|`
Dim SypnReport As Worksheet
    Set SypnReport = Sheets("SypnReport")
Dim SypnSyosaiReport As Worksheet
    Set SypnSyosaiReport = Sheets("SypnSyosaiReport")
Dim FBAReport As Worksheet
    Set FBAReport = Sheets("FBAReport")
Dim Deb As Worksheet
    Set Deb = Sheets("Debug")
Dim Config As Worksheet
    Set Config = Sheets("Config")

Dim ConditionResolt As Variant '0:Condition,1:LandedPrice,2:ListingPrice,3:ShippingPrice
Dim RankResolt As Variant '0:|fffd|J|fffd|e|fffd|S|fffd||fffd|,1:|fffd||fffd||fffd||fffd||fffd|L|fffd||fffd||fffd|O,2:|fffd|V|fffd|i|fffd|J|fffd|[|fffd|g|fffd||fffd||fffd|i
Dim SypnPrice As Long
Dim DayPast As Long
Dim BuyPrice As Long


                                If PriceTest <> "" Then '*********************
                                    Deb.Range("B14:C28").ClearContents
                                    Deb.Range("C29").ClearContents
                                End If

    '|fffd||fffd||fffd|C|fffd|o|fffd||fffd||fffd||cbd42||fffd||fffd||64fe||fffd||fffd||fffd||fffd|========================
Dim RivalResolt As Variant '|fffd|c|fffd||fffd||fffd||341|A0|fffd|F|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd|A1|fffd|F|fffd|l|fffd||fffd||fffd|A2|fffd|F|fffd||fffd||fffd|i|fffd|A3|fffd|F|fffd|||fffd|C|fffd||fffd||fffd|g|fffd|A4|fffd|F|fffd|z|fffd||fffd||fffd|A5|fffd|F|fffd||fffd||fffd|v|fffd||fffd||fffd||fffd|
Dim SelfPrice As Long
Dim SelfCondition As Long
        '|fffd||fffd||fffd||fffd|SKU|fffd||30f|o|fffd|i|fffd||fffd||fffd||fffd||fffd||64fe|(|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd|A|fffd|o|fffd|i|fffd||fffd||fffd|i)
        '=====================================
        'ConditionResolt = GetCondition(SKU) 'MWS
        ConditionResolt = ASINtoCondition(SKU, ASIN) '|fffd||fffd||fffd|}|fffd||fffd||fffd|u
        '======================================
        SelfPrice = ConditionResolt(1)
        '|fffd||fffd||fffd||fffd|SKU|fffd||30c|o|fffd||7d3||fffd||fffd||fffd||fffd||12c82||5c2||fffd|
        DayPast = SypnDay(SKU)
Dim RuleCol As Long
    RuleCol = FindRuleCol(DayPast)
        '|fffd||fffd||fffd||fffd|SKU|fffd||30e|d|fffd||fffd||fffd||a27f||fffd|i|fffd||12c82||5c2||fffd|
        BuyPrice = FindBuyPrice(SKU)
        '|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd|E|fffd||fffd||fffd||fffd||fffd|L|fffd||fffd||fffd|O|fffd||12c82||5c2||fffd|
        RankResolt = GetRank(SKU) 'MWS
            '|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd||fffd||fffd|L|fffd||682||fffd||fffd||fffd||fffd||fffd|
            Select Case Left(RankResolt(0), 3)
                Case "boo"
                    RankResolt(0) = "book"
                Case "com"
                    RankResolt(0) = "comic"
                Case "mus"
                    RankResolt(0) = "music"
                Case "dvd"
                    RankResolt(0) = "dvd"
                Case Else
                    RankResolt(0) = "|fffd||fffd|"
            End Select
        '|fffd|o|fffd|i|fffd||a5d7||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|iASIN|fffd||18c|o|fffd||7d3||fffd||fffd||fffd||fffd||194|z|fffd||fffd||fffd||fffd||fffd|@|fffd||183|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||141|j
        RivalResolt = RivalPrice(ASIN, SelfPrice)
        SelfCondition = ConditionResolt(0)
        '|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||202||7532||fffd||fffd||fffd||103|X|fffd|L|fffd|b|fffd|v
        If SelfCondition = Empty Then
            GetSypnPrice = Empty
            Exit Function
        End If
Dim BasicPosition As Long
        '|fffd||e3c0||fffd||fffd||fffd|i|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
        If ConditionResolt(0) < 5 Then
            '|fffd||fffd||fffd||c2||30f||a347|
            BasicPosition = GetBasicPosition(DayPast, ConditionResolt(0), RivalResolt, SelfFullFill)
        Else
            '|fffd|V|fffd|i|fffd||30f||a347|
            If RuleForNew(DayPast, SelfFullFill) = "|fffd|J|fffd|[|fffd|g|fffd||fffd||fffd|i" Then
                If RankResolt(2) = Empty Then
                    '|fffd|V|fffd|i|fffd||74c||250||602||a3c8||fffd||fffd||fffd||fffd||fffd||702||fffd|
                    BasicPosition = GetBasicPosition(DayPast, ConditionResolt(0), RivalResolt, SelfFullFill)
                Else
                    '|fffd|J|fffd|[|fffd|g|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    If SelfFullFill = "FBA" Then
                        If RankResolt(2) <> SelfPrice Then
                            SypnPrice = RankResolt(2) + Config.Cells(36, RuleCol)
                        Else
                            SypnPrice = RankResolt(2)
                        End If
                    Else
                        If RankResolt(2) <> SelfPrice Then
                            SypnPrice = RankResolt(2) + Config.Cells(26, RuleCol)
                        Else
                            SypnPrice = RankResolt(2)
                        End If
                    End If
                        If PriceTest <> "" Then '*********************
                            Deb.Cells(14, 2) = "|fffd|J|fffd|[|fffd|g|fffd||fffd||fffd|i|fffd||fffd||fffd||d0b9||fffd|K|fffd|p"
                            Deb.Cells(14, 3) = Format(RankResolt(2), "0")
                            Deb.Cells(6, 2) = SelfCondition '''''''
                            Deb.Cells(7, 2) = SelfPrice
                        End If
                    GoTo OnlyOneSkip
                End If
            Else
                '|fffd|V|fffd|i|fffd||74c||250||602||a3c8||fffd||fffd||fffd||fffd||fffd||702||fffd|
                BasicPosition = GetBasicPosition(DayPast, ConditionResolt(0), RivalResolt, SelfFullFill)
            End If
        End If
                        If PriceTest <> "" Then '*********************
                            If RankResolt(2) <> Empty Then
                                Deb.Cells(14, 3) = Int(RankResolt(2))
                            End If
                        End If
    '|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p|fffd||30f||fffd||fffd||fffd||fffd|o|fffd||fffd|==========================================
        If PriceTest <> "" Then '*********************
            Deb.Cells(1, 2) = SKU
            Deb.Cells(2, 2) = ASIN
            Deb.Cells(3, 2) = BuyPrice
            Deb.Cells(4, 2) = DayPast
            Deb.Cells(6, 2) = ConditionResolt(0)
            Deb.Cells(7, 2) = ConditionResolt(1)
            Deb.Cells(8, 2) = ConditionResolt(2)
            Deb.Cells(9, 2) = ConditionResolt(3)
            Deb.Cells(11, 2) = RankResolt(0)
            Deb.Cells(12, 2) = RankResolt(1)
            'Deb.Cells(29, 3) = SypnPrice
            For d = 0 To 5
                For c = 0 To 19
                    Deb.Cells(d + 1, c + 6) = RivalResolt(d, c)
                DoEvents
                Next
            DoEvents
            Next
            '|fffd||38f||6c3|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||303|}|fffd|[|fffd|L|fffd||fffd||fffd|O
            Deb.Range("F7:Y8").ClearContents
            Deb.Cells(7, 6 + BasicPosition) = "|fffd||fffd|"
            'Deb.Cells(8, 6 + BasicPosition) = SypnPrice
        End If
    '|fffd|e|fffd||fffd||752||fffd||fffd||fffd||fffd||fffd||fffd||fffd||727f||fffd|i|fffd||fffd||2433||fffd||fffd||fffd||fffd|=================================
Dim BasicCondition As Long
Dim BasicConsider As Long
Dim BasicPrice As Long
Dim BasicPoint As Long
Dim BasicFullFill As String
Dim BasicShipping As Long

    BasicCondition = RivalResolt(0, BasicPosition)
    BasicConsider = RivalResolt(1, BasicPosition)
    BasicPrice = RivalResolt(2, BasicPosition)
    BasicPoint = RivalResolt(3, BasicPosition)
    BasicFullFill = RivalResolt(4, BasicPosition)
    If BasicFullFill = "Amazon" Then
        BasicFullFill = "FBA"
    Else
        BasicFullFill = "|fffd||fffd||fffd||214|z|fffd||fffd|"
    End If
    
    If RivalResolt(5, BasicPosition) <> Empty Then
        BasicShipping = Replace(Left(RivalResolt(5, BasicPosition), 2), "-", "")
    End If
    
Dim OnlyOnePrice As Long
    '|fffd|P|fffd||18f|o|fffd|i|fffd||30f||a347||fffd||30a||e3c0||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||7c2||fffd|===================================
    If SelfCondition < 5 Then
        '|fffd||fffd||fffd||c2||202||fffd|
        If SelfFullFill = "|fffd||fffd||fffd||214|z|fffd||fffd|" Then
            OnlyOnePrice = Application.WorksheetFunction.Max(Int(BuyPrice * Config.Cells(11, RuleCol)), Config.Cells(11, 8))
        Else
            OnlyOnePrice = Application.WorksheetFunction.Max(Int(BuyPrice * Config.Cells(21, RuleCol)), Config.Cells(21, 8))
        End If
    Else
        '|fffd|V|fffd|i|fffd||202||fffd|
        If SelfFullFill = "|fffd||fffd||fffd||214|z|fffd||fffd|" Then
            OnlyOnePrice = Application.WorksheetFunction.Max(Int(BuyPrice * Config.Cells(31, RuleCol)), Config.Cells(31, 8))
        Else
            OnlyOnePrice = Application.WorksheetFunction.Max(Int(BuyPrice * Config.Cells(41, RuleCol)), Config.Cells(41, 8))
        End If
    End If
    
    '|fffd|P|fffd||18f|o|fffd|i|fffd||202||fffd|P|fffd||189||fffd||fffd|i|fffd||fffd||fffd||317|p|fffd||fffd||fffd||114||fffd||fffd||fffd||fffd||fffd|
    If RivalResolt(1, 0) + RivalResolt(1, 1) = 0 Then
        SypnPrice = OnlyOnePrice
        If PriceTest <> "" Then '*********************
            Deb.Cells(15, 2) = "|fffd|P|fffd||189||fffd||fffd|i|fffd||fffd|K|fffd|p"
            Deb.Cells(15, 3) = OnlyOnePrice
        End If
        GoTo OnlyOneSkip
    End If
    
    '|fffd||fffd||fffd||fffd||fffd||191||38f||6c2||314|z|fffd||fffd||fffd||fffd||fffd|@|fffd||fffd||fffd||642||202||fffd||a347|==================================
    If SelfFullFill <> BasicFullFill Then
        If SelfFullFill = "|fffd||fffd||fffd||214|z|fffd||fffd|" Then
            If SelfCondition < 5 Then
                '|fffd||fffd||fffd||c2||14e||fffd||fffd||214|z|fffd||fffd|
                If Config.Cells(8, RuleCol) <= BasicPrice Then
                    SypnPrice = BasicPrice + Config.Cells(9, RuleCol)
                Else
                    SypnPrice = BasicPrice + Int(Config.Cells(10, RuleCol) / 100 * BasicPrice)
                End If
            Else
                '|fffd|V|fffd|i|fffd||14e||fffd||fffd||214|z|fffd||fffd|
                If Config.Cells(27, RuleCol) <= BasicPrice Then
                    SypnPrice = BasicPrice + Config.Cells(28, RuleCol)
                Else
                    SypnPrice = BasicPrice + Int(Config.Cells(29, RuleCol) / 100 * BasicPrice)
                End If
            End If
        Else
            If SelfCondition < 5 Then
                '|fffd||fffd||fffd||c2||fffd|FBA
                If Config.Cells(18, RuleCol) <= BasicPrice Then
                    SypnPrice = BasicPrice + Config.Cells(19, RuleCol)
                Else
                    SypnPrice = BasicPrice + Int(Config.Cells(20, RuleCol) / 100 * BasicPrice)
                End If
            Else
                '|fffd|V|fffd|i|fffd||fffd|FBA
                If Config.Cells(37, RuleCol) <= BasicPrice Then
                    SypnPrice = BasicPrice + Config.Cells(38, RuleCol)
                Else
                    SypnPrice = BasicPrice + Int(Config.Cells(39, RuleCol) / 100 * BasicPrice)
                End If
            End If
        End If
        If PriceTest <> "" Then '*********************
            Deb.Cells(16, 2) = "|fffd|z|fffd||fffd||fffd||fffd||fffd|@|fffd||308||10a2||fffd||242||fffd||9377||fffd|z|fffd|K|fffd|p"
            Deb.Cells(16, 3) = SypnPrice
        End If
    Else
    '|fffd|z|fffd||fffd||fffd||fffd||fffd|@|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd|{|fffd||fffd||fffd|z|fffd||152|l|fffd|t|fffd||fffd|
        If SelfFullFill = "|fffd||fffd||fffd||214|z|fffd||fffd|" Then
            If SelfCondition < 5 Then
                '|fffd||fffd||fffd||c2||14e||fffd||fffd||214|z|fffd||fffd|
                SypnPrice = BasicPrice + Config.Cells(6, RuleCol)
            Else
                '|fffd|V|fffd|i|fffd||14e||fffd||fffd||214|z|fffd||fffd|
                SypnPrice = BasicPrice + Config.Cells(26, RuleCol)
            End If
        Else
            If SelfCondition < 5 Then
                '|fffd||fffd||fffd||c2||fffd|FBA
                SypnPrice = BasicPrice + Config.Cells(15, RuleCol)
            Else
                '|fffd|V|fffd|i|fffd||fffd|FBA
                SypnPrice = BasicPrice + Config.Cells(36, RuleCol)
            End If
        End If
        If PriceTest <> "" Then '*********************
            Deb.Cells(17, 2) = "|fffd||fffd|{|fffd|l|fffd|t|fffd||fffd||fffd|K|fffd|p"
            Deb.Cells(17, 3) = SypnPrice
        End If
    End If
    '|fffd||10c9||fffd||fffd||fffd|N|fffd||314||fffd||fffd||fffd||282||fffd||fffd||752||fffd|====================================
    If SelfCondition < 5 Then
        '|fffd||fffd||fffd||c2||30f||a347||fffd||302||fffd|
        Dim LowRankRow As Long
        Select Case RankResolt(0)
            Case "book"
                LowRankRow = 72
            Case "comic"
                LowRankRow = 78
            Case "music"
                LowRankRow = 84
            Case "dvd"
                LowRankRow = 90
            Case Else
                LowRankRow = 96
        End Select
        '|fffd|@|fffd|\OFF|fffd||202||7532||fffd||fffd||fffd||fffd|
        If Config.Cells(LowRankRow, RuleCol) = "OFF" Then
            GoTo LowRankSkip
        Else
            Dim AbLow As Long
            If SelfCondition = 1 Then
                If RivalResolt(1, 0) > 0 Then
                    AbLow = RivalResolt(2, 0)
                Else
                    AbLow = RivalResolt(2, 1)
                End If
            Else
                For b = 0 To 19
                    '|fffd||96||fffd||fffd||fffd||fffd||148||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd|
                    If RivalResolt(0, b) = Empty Then
                        Exit For
                    Else
                        If RivalResolt(0, b) > 1 And RivalResolt(1, b) > 0 Then
                            AbLow = RivalResolt(2, b)
                            Exit For
                        End If
                    End If
                DoEvents
                Next
            End If
        End If
        If RankResolt(1) <> Empty Then
            If val(RankResolt(1)) > val(Config.Cells(LowRankRow + 1, RuleCol) * 10000) Then
                '|fffd||752||80c9||fffd||fffd||fffd|L|fffd||fffd||fffd|O|fffd||fffd||822b||fffd||fffd||fffd||fffd||fffd|
                SypnPrice = AbLow + Config.Cells(LowRankRow + 2, RuleCol)
                    If PriceTest <> "" Then '*********************
                        Deb.Cells(18, 2) = "|fffd||10c9||fffd||fffd||fffd|L|fffd||fffd||fffd|O|fffd||314||fffd||fffd||8532||fffd||fffd||fffd|K|fffd|p"
                        Deb.Cells(18, 3) = SypnPrice
                    End If
                GoTo OnlyOneSkip
            End If
        Else
            '|fffd||fffd||fffd||fffd||fffd|L|fffd||fffd||fffd|O|fffd||202||fffd||fffd||202||fffd|
            If Config.Cells(LowRankRow + 3, RuleCol) = "ON" Then
                If val(RankResolt(1)) > val(Config.Cells(LowRankRow + 1, RuleCol) * 10000) Then
                    '|fffd||752||80c9||fffd||fffd||fffd|L|fffd||fffd||fffd|O|fffd||fffd||822b||fffd||fffd||fffd||fffd||fffd|
                    SypnPrice = AbLow + Config.Cells(LowRankRow + 2, RuleCol)
                        If PriceTest <> "" Then '*********************
                            Deb.Cells(18, 2) = "|fffd||fffd||fffd||fffd||fffd|N|fffd||202||fffd||fffd||314||fffd||fffd||8532||fffd||fffd||fffd|K|fffd|p"
                            Deb.Cells(18, 3) = SypnPrice
                        End If
                    GoTo OnlyOneSkip
                End If
            End If
        End If
    End If
    
LowRankSkip:
    '|fffd|o|fffd|i|fffd||490||fffd||fffd||242||fffd||fffd||742||fffd||30b0||fffd||752||fffd|================================
Dim TotalConsider As Long
Dim AbHighPrice As Long
    For a = 0 To 19
        If RivalResolt(0, a) = Empty Then
            Exit For
        Else
            TotalConsider = TotalConsider + RivalResolt(1, a)
            AbHighPrice = RivalResolt(2, a)
        End If
    DoEvents
    Next
    If TotalConsider <= Config.Cells(67, RuleCol) Then
        If RivalResolt(2, a - 1) <= Config.Cells(68, RuleCol) Then
            SypnPrice = Application.WorksheetFunction.Max(SypnPrice, OnlyOnePrice)
                    If PriceTest <> "" Then '*********************
                        Deb.Cells(19, 2) = "|fffd||fffd||fffd|o|fffd|i|fffd||490||fffd||fffd||142||302||82||fffd||30b0||fffd|K|fffd|p"
                        Deb.Cells(19, 3) = SypnPrice
                    End If
            GoTo OnlyOneSkip
        End If
    End If
    
    '|fffd||642||202||fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||582||315||2433|================================
    If Config.Cells(106, RuleCol) = "OFF" Then
        '|fffd|@|fffd|\OFF|fffd||202||7532||fffd||fffd||fffd||fffd|
        GoTo DiffCondiSkip
    End If
    
    If SelfCondition <> BasicCondition Then
        Dim DiffCondiRow As Long
        DiffCondiRow = 110 + (SelfCondition - 1) * 12 + (5 - BasicCondition) * 2
        '|fffd||fffd||fffd|E|fffd||fffd||fffd|i|fffd||194||fffd||5c2||fffd|
        If Config.Cells(107, RuleCol) < SypnPrice Then
            '|fffd||fffd||fffd|E|fffd|z|fffd||fffd||fffd||141||fffd|
            DiffCondiRow = DiffCondiRow + 1
            SypnPrice = SypnPrice + Int(Config.Cells(DiffCondiRow, RuleCol) * SypnPrice / 100)
        Else
            SypnPrice = SypnPrice + Config.Cells(DiffCondiRow, RuleCol)
        End If
                    If PriceTest <> "" Then '*********************
                        Deb.Cells(20, 2) = "|fffd||642||202||fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||582||30d||fffd||fffd|z|fffd|K|fffd|p"
                        Deb.Cells(20, 3) = SypnPrice
                    End If
    End If
DiffCondiSkip:
'|fffd|P|fffd||18f|o|fffd|i|fffd||202||70b1||fffd||fffd||fffd||fffd||fffd||fffd|
OnlyOneSkip:

    '|fffd|V|fffd|i|fffd||251||382||fffd||fffd||fffd||fffd||fffd|=============================================
    If SelfCondition < 5 Then
        If Config.Cells(201, RuleCol) = "ON" Then
            Dim NewPrice As Long
                For c = 0 To 19
                    '|fffd|V|fffd|i|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd|
                    If RivalResolt(0, c) = Empty Then
                        Exit For
                    End If
                    If RivalResolt(0, c) = 5 Then
                        NewPrice = RivalResolt(2, c)
                        Exit For
                    End If
                DoEvents
                Next
            If NewPrice = Empty Then
                If RankResolt(2) <> Empty Then
                    NewPrice = RankResolt(2)
                End If
            Else
                If RankResolt(2) <> Empty Then
                    NewPrice = Application.WorksheetFunction.Min(NewPrice, RankResolt(2))
                End If
            End If
            If NewPrice <> Empty Then
                If SelfFullFill = "|fffd||fffd||fffd||214|z|fffd||fffd|" Then
                    SypnPrice = Application.WorksheetFunction.Min(SypnPrice, Int(NewPrice * Config.Cells(202, RuleCol) / 100))
                Else
                    SypnPrice = Application.WorksheetFunction.Min(SypnPrice, Int(NewPrice * Config.Cells(203, RuleCol) / 100))
                End If
                    If PriceTest <> "" Then '*********************
                        Deb.Cells(23, 2) = "|fffd|V|fffd|i|fffd||251||382||fffd||fffd||fffd||fffd||fffd||fffd||194||fffd|r"
                        If SelfFullFill = "|fffd||fffd||fffd||214|z|fffd||fffd|" Then
                            Deb.Cells(23, 3) = Int(NewPrice * Config.Cells(202, RuleCol) / 100)
                        Else
                            Deb.Cells(23, 3) = Int(NewPrice * Config.Cells(203, RuleCol) / 100)
                        End If
                    End If
            End If
        Else
                    If PriceTest <> "" Then '*********************
                        Deb.Cells(23, 2) = "|fffd||fffd|r|fffd||38f||6ca|O|fffd|i|fffd||752||fffd|OFF|fffd|j"
                    End If
        End If
    End If
    'FBA|fffd||30b||252|[|fffd||fffd||fffd|i|fffd|h|fffd|~============================================
    If SelfFullFill = "|fffd||fffd||fffd||214|z|fffd||fffd|" Then
        GoTo FBALimitSkip
    End If
    If Config.Cells(181, RuleCol) = "OFF" Then
        GoTo FBALimitSkip
    End If
    '|fffd||38f||6c2||30e||fffd||fffd||214|z|fffd||fffd||fffd||148||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd|
    For d = 0 To 19
        Dim ForFBALimitPrice As Long
        If SelfCondition <> 5 Then
            '|fffd||fffd||fffd||c2||30d||152|Z|fffd|o|fffd||5c2||fffd||fffd||fffd||fffd||fffd|
            If RivalResolt(0, d) >= SelfCondition And RivalResolt(1, d) > 0 And RivalResolt(4, d) = "Merchant" And Replace(Left(RivalResolt(5, d), 2), "-", "") < Config.Cells(63, RuleCol) Then
                ForFBALimitPrice = RivalResolt(2, d)
                Exit For
            End If
        Else
            '|fffd|V|fffd|i|fffd||30f|o|fffd||5d3||fffd||fffd||fffd||fffd||156||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            If RivalResolt(0, d) >= SelfCondition And RivalResolt(1, d) > 0 And RivalResolt(4, d) = "Merchant" And Replace(Left(RivalResolt(5, d), 2), "-", "") < Config.Cells(62, RuleCol) Then
                ForFBALimitPrice = RivalResolt(2, d)
                Exit For
            End If
        End If
    DoEvents
    Next
    If ForFBALimitPrice <> Empty Then
        If ForFBALimitPrice <= Config.Cells(182, RuleCol) Then
            '|fffd||fffd||fffd|E|fffd||fffd||fffd|i|fffd||213||fffd||fffd||301|{
            SypnPrice = Application.WorksheetFunction.Min(SypnPrice, ForFBALimitPrice + Config.Cells(183, RuleCol))
        Else
            '|fffd||fffd||fffd|E|fffd||fffd||fffd|i|fffd||213||fffd||fffd||301||fffd|
            SypnPrice = Application.WorksheetFunction.Min(SypnPrice, ForFBALimitPrice + Int(ForFBALimitPrice * Config.Cells(184, RuleCol) / 100))
        End If
                    If PriceTest <> "" Then '*********************
                        Deb.Cells(22, 2) = "|fffd||fffd||fffd||214|z|fffd||fffd||fffd||251||382||fffd||fffd||102||30f||fffd||fffd||fffd||194||fffd|r|fffd||fffd||fffd|{"
                        If ForFBALimitPrice <= Config.Cells(182, RuleCol) Then
                            Deb.Cells(22, 3) = ForFBALimitPrice + Config.Cells(183, RuleCol)
                        Else
                            Deb.Cells(22, 3) = ForFBALimitPrice + Int(ForFBALimitPrice * Config.Cells(184, RuleCol) / 100)
                        End If
                    End If
    End If
    
FBALimitSkip:

    '|fffd||96||fffd||fffd||fffd||fffd||148||fffd||fffd|l|fffd||251||382||fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|==================================
    If Config.Cells(212, RuleCol) = "ON" Then
        Dim UsedCondLimit As Long
        Select Case Config.Cells(213, RuleCol)
            Case "|fffd||1c2||fffd|"
                UsedCondLimit = 2
            Case "|fffd||fffd||fffd||257||1c2||fffd|"
                UsedCondLimit = 3
            Case "|fffd||642||690|V|fffd|i"
                UsedCondLimit = 4
        End Select
        If SelfCondition <= UsedCondLimit Then
            '|fffd||38f||6c2||30e||fffd||fffd||214|z|fffd||fffd||fffd||148||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd|
            For G = 0 To 19
                Dim UsedCondLimitPrice As Long
                If RivalResolt(0, G) >= 2 And RivalResolt(1, G) > 0 Then
                    If RivalResolt(2, G) <= Config.Cells(214, RuleCol) Then
                        UsedCondLimitPrice = RivalResolt(2, G) + Config.Cells(215, RuleCol)
                    Else
                        UsedCondLimitPrice = RivalResolt(2, G) + Int(RivalResolt(2, G) * Config.Cells(216, RuleCol) / 100)
                    End If
                    If SypnPrice > UsedCondLimitPrice Then
                        SypnPrice = UsedCondLimitPrice
                            If PriceTest <> "" Then '*********************
                                Deb.Cells(21, 2) = "|fffd||96||fffd||fffd||fffd||fffd||148||fffd||fffd|l|fffd||251||382||fffd||fffd||fffd||fffd||fffd||fffd|K|fffd|p"
                                Deb.Cells(21, 3) = UsedCondLimitPrice
                            End If
                    Else
                            If PriceTest <> "" Then '*********************
                                Deb.Cells(21, 2) = "|fffd||752||fffd||348||353||fffd|"
                                Deb.Cells(21, 3) = "(" & UsedCondLimitPrice & ")"
                            End If
                    End If
                    Exit For
                End If
            DoEvents
            Next
        End If
    Else
                            If PriceTest <> "" Then '*********************
                                Deb.Cells(21, 2) = "|fffd||fffd||fffd||fffd||fffd||38f||6ca|O|fffd|i|fffd||752||fffd|OFF|fffd|j"
                            End If
    End If
    
    '|fffd|d|fffd||fffd||fffd||fffd|l|fffd||251||382||fffd||fffd||927a||fffd||fffd||fffd||fffd||fffd|i=====================================
    If Config.Cells(187, RuleCol) = "ON" Then
        Dim LimitByBuyPrice As Long
            LimitByBuyPrice = LowLimit(ASIN, SelfFullFill, DayPast, BuyPrice)
        SypnPrice = Application.WorksheetFunction.Max(SypnPrice, LimitByBuyPrice)
                    If PriceTest <> "" Then '*********************
                        Deb.Cells(24, 2) = "|fffd|d|fffd||fffd||fffd||fffd|l|fffd||251||382||fffd||fffd||927a||fffd||fffd||fffd||194||fffd|r|fffd||fffd||fffd|{"
                        Deb.Cells(24, 3) = LimitByBuyPrice
                    End If
    Else
                    If PriceTest <> "" Then '*********************
                        Deb.Cells(24, 2) = "|fffd||fffd|r|fffd||38f||6ca|O|fffd|i|fffd||752||fffd|OFF|fffd|j"
                        Deb.Cells(24, 3) = "(" & LowLimit(ASIN, SelfFullFill, DayPast, BuyPrice) & ")"
                    End If
    End If
    '|fffd||fffd||389||fffd||fffd||fffd||fffd||194||fffd|r===============================================
    If SelfFullFill = "|fffd||fffd||fffd||214|z|fffd||fffd|" Then
        SypnPrice = Application.WorksheetFunction.Max(SypnPrice, Config.Cells(197, RuleCol))
        
    Else
        SypnPrice = Application.WorksheetFunction.Max(SypnPrice, Config.Cells(198, RuleCol))
        
    End If
                    If PriceTest <> "" Then '*********************
                        Deb.Cells(25, 2) = "|fffd||fffd||389||fffd||fffd||fffd||fffd||182||314||fffd|r|fffd||fffd||fffd|{"
                        If SelfFullFill = "|fffd||fffd||fffd||214|z|fffd||fffd|" Then
                            Deb.Cells(25, 3) = Config.Cells(197, RuleCol)
                        Else
                            Deb.Cells(25, 3) = Config.Cells(198, RuleCol)
                        End If
                    End If
    '1|fffd||42802||fffd||fffd||fffd||309||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|=========================================
    If Config.Cells(175, RuleCol) = "ON" Then
        If Config.Cells(176, RuleCol) <= SypnPrice Then
            '|fffd|{|fffd|[|fffd|_|fffd|[|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd|-
            If SelfPrice - SypnPrice > Config.Cells(177, RuleCol) Then
                SypnPrice = SelfPrice - Config.Cells(177, RuleCol)
                    If PriceTest <> "" Then '*********************
                        Deb.Cells(26, 2) = "1|fffd||fffd||309||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|K|fffd|p"
                        Deb.Cells(26, 3) = SypnPrice
                    End If
            Else
                    If PriceTest <> "" Then '*********************
                        Deb.Cells(26, 2) = "|fffd||fffd||fffd||fffd||fffd|K|fffd|p|fffd|O|fffd|i|fffd||752||fffd||348||353||fffd||fffd|j"
                        Deb.Cells(26, 3) = "(" & SelfPrice - Config.Cells(177, RuleCol) & ")"
                    End If
            End If
        Else
            '|fffd|{|fffd|[|fffd|_|fffd|[|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||301||fffd|
            If SelfPrice - SypnPrice > Int(SelfPrice * Config.Cells(178, RuleCol) / 100) Then
                SypnPrice = SelfPrice - Int(SelfPrice * Config.Cells(178, RuleCol) / 100)
                    If PriceTest <> "" Then '*********************
                        Deb.Cells(26, 2) = "1|fffd||fffd||309||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|K|fffd|p"
                        Deb.Cells(26, 3) = SypnPrice
                    End If
            Else
                    If PriceTest <> "" Then '*********************
                        Deb.Cells(26, 2) = "|fffd||fffd||fffd||fffd||fffd|K|fffd|p|fffd|O|fffd|i|fffd||752||fffd||348||353||fffd||fffd|j"
                        Deb.Cells(26, 3) = "(" & SelfPrice - Int(SelfPrice * Config.Cells(178, RuleCol) / 100) & ")"
                    End If
            End If
        End If
    Else
                    If PriceTest <> "" Then '*********************
                        Deb.Cells(26, 2) = "|fffd||fffd||fffd||fffd||fffd|K|fffd|p|fffd|O|fffd|i|fffd||752||fffd|OFF|fffd|j"
                    End If
    End If
    '|fffd||fffd||fffd||511||442||242||fffd||927f||fffd|i|fffd||3cd|X==========================================
If (Time >= TimeValue(Format(Config.Cells(171, 9), "hh:mm:ss")) And Time <= TimeValue(Format(Config.Cells(171, 11), "hh:mm:ss"))) Or (Time >= TimeValue(Format(Config.Cells(172, 9), "hh:mm:ss")) And Time <= TimeValue(Format(Config.Cells(172, 11), "hh:mm:ss"))) Then
                    If PriceTest <> "" Then '*********************
                        Deb.Cells(27, 2) = "|fffd||38f||6ce||fffd||fffd||50a|O"
                    End If
    GoTo TimeSkip
Else
    If Config.Cells(171, RuleCol) = "|fffd||fffd||fffd|i|fffd||82||fffd||30b0|" Then
        SypnPrice = SypnPrice + Config.Cells(172, RuleCol)
                    If PriceTest <> "" Then '*********************
                        Deb.Cells(27, 2) = "|fffd||fffd||fffd||511||442||242||fffd||fffd||82||fffd||30b0||fffd||fffd||fffd|{"
                        Deb.Cells(27, 3) = SypnPrice
                    End If
    Else
        SypnPrice = SelfPrice
                    If PriceTest <> "" Then '*********************
                        Deb.Cells(27, 2) = "|fffd||fffd||fffd||511||442||242||fffd||fffd||6d7||fffd|"
                        Deb.Cells(27, 3) = SelfPrice
                    End If
        GoTo OnlyOneSkip
    End If
End If
TimeSkip:
    'ASIN|fffd|J|fffd|u|fffd||fffd||303|`|fffd|F|fffd|b|fffd|N==========================================
Dim CheckRow As Long
Dim ExistRow As Long
Dim ExistNumber As Long
Dim CheckSKU As String
Dim TargetCondition As String
                                If PriceTest <> "" Then '*********************
                                    Deb.Cells(28, 2) = "|fffd|Y|fffd||fffd||fffd||202||fffd|"
                                End If
    If Config.Cells(207, RuleCol) <> "|fffd||fffd||fffd||fffd||fffd|u|fffd||fffd||fffd||102||fffd||fffd||fffd|" Then
        GoTo ASINskip
    End If
    
    If SelfFullFill = "|fffd||fffd||fffd||214|z|fffd||fffd|" Then
        ExistRow = SypnReport.Columns("A:A").Find(SKU).Row
        If CheckRow = 2 Then
            GoTo ASINskip
        End If
        If Application.WorksheetFunction.CountIf(SypnReport.Range("B2:B" & ExistRow - 1), ASIN) > 0 Then
            ExistNumber = Application.WorksheetFunction.CountIf(SypnReport.Range("B2:B" & ExistRow - 1), ASIN)
            For e = 1 To ExistNumber
                If e = 1 Then
                    CheckRow = SypnReport.Range("B2:B" & ExistRow).Find(ASIN).Row
                Else
                    CheckRow = SypnReport.Range("B" & CheckRow + 1 & ":B" & ExistRow).Find(ASIN).Row
                End If
                CheckSKU = SypnReport.Cells(CheckRow, 1)
                If Application.WorksheetFunction.CountIf(SypnSyosaiReport.Columns("A:A"), CheckSKU) > 0 Then
                    If SelfCondition = Application.WorksheetFunction.VLookup(CheckSKU, SypnSyosaiReport.Columns("A:C"), 3, False) _
                        And SypnReport.Cells(CheckRow, 3) > 0 Then
                        SypnPrice = SypnPrice + Config.Cells(208, RuleCol)
                                If PriceTest <> "" Then '*********************
                                    Deb.Cells(28, 2) = "ASIN|fffd|J|fffd|u|fffd||fffd||242||fffd||fffd||82||fffd||30b0||fffd||fffd||fffd|{"
                                    Deb.Cells(28, 3) = SypnPrice
                                End If
                        Exit For
                    End If
                End If
            DoEvents
            Next
        End If
    Else
        ExistRow = FBAReport.Columns("A:A").Find(SKU).Row
        If CheckRow = 2 Then
            GoTo ASINskip
        End If
        If Application.WorksheetFunction.CountIf(FBAReport.Range("C2:C" & ExistRow - 1), ASIN) > 0 Then
            ExistNumber = Application.WorksheetFunction.CountIf(FBAReport.Range("C2:C" & ExistRow - 1), ASIN)
            For F = 1 To ExistNumber
                If F = 1 Then
                    CheckRow = FBAReport.Range("C2:C" & ExistRow - 1).Find(ASIN).Row
                Else
                    CheckRow = FBAReport.Range("C" & CheckRow + 1 & ":C" & ExistRow - 1).Find(ASIN).Row
                End If
                TargetCondition = FBAReport.Cells(CheckRow, 4)
                Select Case TargetCondition
                    Case "UsedAcceptable"
                        TargetCondition = "1"
                    Case "UsedGood"
                        TargetCondition = "2"
                    Case "UsedVeryGood"
                        TargetCondition = "3"
                    Case "UsedMint"
                        TargetCondition = "4"
                    Case Else
                        TargetCondition = "5"
                End Select
                
                If SelfCondition = TargetCondition And FBAReport.Cells(CheckRow, 6) > 0 Then
                    SypnPrice = SypnPrice + Config.Cells(208, RuleCol)
                                If PriceTest <> "" Then '*********************
                                    Deb.Cells(28, 2) = "ASIN|fffd|J|fffd|u|fffd||fffd||242||fffd||fffd||82||fffd||30b0||fffd||fffd||fffd|{"
                                    Deb.Cells(28, 3) = SypnPrice
                                End If
                    Exit For
                End If
            DoEvents
            Next
        End If
    End If
ASINskip:


    '|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p|fffd||30f||fffd||fffd||fffd||fffd|o|fffd||fffd|==========================================
        If Sheets("test").Cells(2, 12) = "Debug" Then
            Deb.Cells(1, 2) = SKU
            Deb.Cells(2, 2) = ASIN
            Deb.Cells(3, 2) = BuyPrice
            Deb.Cells(4, 2) = DayPast
            Deb.Cells(6, 2) = ConditionResolt(0)
            Deb.Cells(7, 2) = ConditionResolt(1)
            Deb.Cells(8, 2) = ConditionResolt(2)
            Deb.Cells(9, 2) = ConditionResolt(3)
            Deb.Cells(11, 2) = RankResolt(0)
            Deb.Cells(12, 2) = RankResolt(1)
            Deb.Cells(29, 3) = SypnPrice
            For d = 0 To 5
                For c = 0 To 19
                    Deb.Cells(d + 1, c + 6) = RivalResolt(d, c)
                DoEvents
                Next
            DoEvents
            Next
            '|fffd||38f||6c3|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||303|}|fffd|[|fffd|L|fffd||fffd||fffd|O
            Deb.Range("F7:Y8").ClearContents
            Deb.Cells(7, 6 + BasicPosition) = "|fffd||fffd|"
            Deb.Cells(8, 6 + BasicPosition) = SypnPrice
        End If
        
'=========================
Dim SypnPriceVar(4) As Variant
    SypnPriceVar(0) = SypnPrice
    SypnPriceVar(1) = ConditionResolt(3)
    SypnPriceVar(2) = RankResolt(0)
    SypnPriceVar(3) = SelfPrice
    SypnPriceVar(4) = SelfCondition
GetSypnPrice = SypnPriceVar
'=========================

'|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||30f||fffd||fffd||fffd||fffd||fffd|
    Set SypnReport = Nothing
    Set SypnSyosaiReport = Nothing
    Set FBAReport = Nothing
    Set Deb = Nothing
    Set Config = Nothing
    Erase RivalResolt '|fffd|c|fffd||fffd||fffd||341|A0|fffd|F|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd|A1|fffd|F|fffd|l|fffd||fffd||fffd|A2|fffd|F|fffd||fffd||fffd|i|fffd|A3|fffd|F|fffd|||fffd|C|fffd||fffd||fffd|g|fffd|A4|fffd|F|fffd|z|fffd||fffd||fffd|A5|fffd|F|fffd||fffd||fffd|v|fffd||fffd||fffd||fffd|
    Erase ConditionResolt '0:Condition,1:LandedPrice,2:ListingPrice,3:ShippingPrice
    Erase RankResolt '0:|fffd|J|fffd|e|fffd|S|fffd||fffd|,1:|fffd||fffd||fffd||fffd||fffd|L|fffd||fffd||fffd|O,2:|fffd|V|fffd|i|fffd|J|fffd|[|fffd|g|fffd||fffd||fffd|i
    Erase SypnPriceVar
End Function

Function GetRank(SKU As String) As Variant

Dim ReturnVal(2) As Variant '0:Condition,1:LandedPrice,2:ListingPrice,3:ShippingPrice
'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
Dim test As Worksheet
    Set test = Sheets("test")
'----------------------------------

'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim xmldata As Object
Dim Result As Object
Dim tmpPrice As Double
Dim tmpObj As Object
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^
Dim MWSsKey As String
    MWSsKey = Worksheets("Test").Range("B2")
Dim sKey As String
    sKey = Worksheets("Debug2").Range("B4")
Dim AWSkey As String
    AWSkey = Worksheets("Debug2").Range("B3")

Dim sellerID As String
    sellerID = Sheets("Test").Range("B4")


Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"

Dim SelfExclude As String
    SelfExclude = "False"
Dim ItemCondition As String
    ItemCondition = "All"
Dim APIVersion As String
    APIVersion = "2011-10-01"
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
'SKU|fffd||315||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||d0b9||fffd||fffd|
Dim CheckSKU As String
   CheckSKU = URLencode(SKU)
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Long, j As Long, k As Long



'MWS|fffd|f|fffd|[|fffd|^|fffd||30a|i|fffd|[|fffd|J|fffd|n

ChDrive ActiveWorkbook.Path
ChDir ActiveWorkbook.Path
'--------------------------------------
'
'|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd|i3|fffd||fffd||702||14d||10e||64fe||fffd|j
ReGet:
Dim ErrCount As Long
If Err.Number <> 0 Then
    Err.Clear
    ErrCount = ErrCount + 1
    If ErrCount > 3 Then
        Exit Function
    End If
End If


'|fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe|================================================================================================================
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") > 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If
'|fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd|E|fffd|T|fffd|u|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||302||fffd||fffd||7c2||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd|iGetMyPriceForSKU|fffd|A10/sec)***********************
'If Sheets("PriceCheckList").Cells(x, 3) = "" And Sheets("PriceCheckList").Cells(x, 4) = "" Then
    Dim xmldata3 As Object
    Dim Result3 As Object
    
    rawText = ""
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
        rawText = rawText _
                & "AWSAccessKeyId=" & AWSkey _
                & "&Action=GetCompetitivePricingForSKU" _
                & "&MWSAuthToken=" & MWSsKey _
                & "&MarketplaceId=" & MarketPlaceID _
                & "&SellerId=" & sellerID _
                & "&SellerSKUList.SellerSKU.1=" & CheckSKU _
                & "&SignatureMethod=HmacSHA256" _
                & "&SignatureVersion=2" _
                & "&Timestamp=" & timestamp _
                & "&Version=" & APIVersion
       
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/Products/2011-10-01" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
'|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------

        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        Url = "https://" & ecsaddress & "/Products/2011-10-01?" & rawText & "&Signature=" & sign
'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
    Set xmldata3 = CreateObject("Microsoft.XMLDOM")
    xmldata3.async = False
    xmldata3.Load Url
'XML|fffd|f|fffd|[|fffd|^|fffd||30e||fffd||fffd|o|fffd||fffd|-------------------------------------
    '|fffd|J|fffd|[|fffd|g|fffd||fffd||fffd|i|fffd||64fe|

Dim Result2 As Object
Dim Cart As Object
Dim Cart2 As String
Dim CartJudge As String
    On Error GoTo ReGet
    Set Result2 = xmldata3.SelectNodes("GetCompetitivePricingForSKUResponse/GetCompetitivePricingForSKUResult/Product/SalesRankings/SalesRank")
    On Error GoTo ReGet
    Set Cart = xmldata3.SelectNodes("GetCompetitivePricingForSKUResponse/GetCompetitivePricingForSKUResult/Product/CompetitivePricing/CompetitivePrices/CompetitivePrice")
    If Not xmldata3.SelectSingleNode("GetCompetitivePricingForSKUResponse/GetCompetitivePricingForSKUResult/Product/CompetitivePricing/CompetitivePrices") Is Nothing Then
        Cart2 = xmldata3.SelectSingleNode("GetCompetitivePricingForSKUResponse/GetCompetitivePricingForSKUResult/Product/CompetitivePricing/CompetitivePrices").Text
    End If

    If Cart2 <> "" Then
            On Error GoTo ReGet
            CartJudge = Cart(0).SelectSingleNode("CompetitivePriceId").Text
        If CartJudge = "1" Then
            On Error GoTo ReGet
            ReturnVal(2) = Cart(0).SelectSingleNode("Price/LandedPrice/Amount").Text
        End If
    End If
    '|fffd||fffd||fffd||fffd||fffd|N|fffd||183|J|fffd|e|fffd|S|fffd||fffd||fffd||64fe|
    On Error GoTo ReGet
    Set Result3 = xmldata3.SelectNodes("GetCompetitivePricingForSKUResponse/GetCompetitivePricingForSKUResult/Product")
    If Not Result3 Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
            On Error GoTo ReGet
            If Not Result3(0) Is Nothing Then
                On Error GoTo ReGet
                If Not Result3(0).SelectSingleNode("SalesRankings/SalesRank/ProductCategoryId") Is Nothing Then
                    ReturnVal(0) = Result3(0).SelectSingleNode("SalesRankings/SalesRank/ProductCategoryId").Text
                    ReturnVal(1) = Result3(0).SelectSingleNode("SalesRankings/SalesRank/Rank").Text
                End If
             End If
    End If

GetRank = ReturnVal
'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set test = Nothing
    Set Result2 = Nothing
    Set Cart = Nothing
    Erase ReturnVal

End Function

Function ASINtoCondition(SKU As String, ASIN As String) As Variant

Dim ReturnVal(3) As Variant '0:Condition,1:LandedPrice,2:ListingPrice,3:ShippingPrice
'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
Dim test As Worksheet
    Set test = Sheets("test")
'----------------------------------

'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim xmldata As Object
Dim Result As Object
Dim tmpPrice As Double
Dim tmpObj As Object
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^
Dim MWSsKey As String
    MWSsKey = Worksheets("Test").Range("B2")
Dim sKey As String
    sKey = Worksheets("Debug2").Range("B4")
Dim AWSkey As String
    AWSkey = Worksheets("Debug2").Range("B3")

Dim sellerID As String
    sellerID = Sheets("Test").Range("B4")


Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"
Dim SelfExclude As String
    SelfExclude = "False"
Dim ItemCondition As String
    ItemCondition = "All"
Dim APIVersion As String
    APIVersion = "2011-10-01"
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
'SKU|fffd||315||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||d0b9||fffd||fffd|
Dim CheckSKU As String
   CheckSKU = URLencode(SKU)
   
Dim TargetSKU As String

'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Long, j As Long, k As Long

'MWS|fffd|f|fffd|[|fffd|^|fffd||30a|i|fffd|[|fffd|J|fffd|n

ChDrive ActiveWorkbook.Path
ChDir ActiveWorkbook.Path
'--------------------------------------
'
'|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd|i3|fffd||fffd||702||14d||10e||64fe||fffd|j
ReGet:
Dim ErrCount As Long
If Err.Number <> 0 Then
    Err.Clear
    ErrCount = ErrCount + 1
    If ErrCount > 3 Then
        Exit Function
    End If
End If
'|fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe|================================================================================================================
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") > 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If
'|fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd|E|fffd|T|fffd|u|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||302||fffd||fffd||7c2||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd|iGetMyPriceForSKU|fffd|A10/sec)***********************
'If Sheets("PriceCheckList").Cells(x, 3) = "" And Sheets("PriceCheckList").Cells(x, 4) = "" Then
    Dim xmldata3 As Object
    Dim Result3 As Object
    
    rawText = ""
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
        rawText = rawText _
                & "ASINList.ASIN.1=" & ASIN _
                & "&AWSAccessKeyId=" & AWSkey _
                & "&Action=GetMyPriceForASIN" _
                & "&MWSAuthToken=" & MWSsKey _
                & "&MarketplaceId=" & MarketPlaceID _
                & "&SellerId=" & sellerID _
                & "&SignatureMethod=HmacSHA256" _
                & "&SignatureVersion=2" _
                & "&Timestamp=" & timestamp _
                & "&Version=" & APIVersion
       
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/Products/2011-10-01" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
'|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------

        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        Url = "https://" & ecsaddress & "/Products/2011-10-01?" & rawText & "&Signature=" & sign
        'Sheets("TOP").Cells(1, 2) = Url ''''''''''
    
'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
    Set xmldata3 = CreateObject("Microsoft.XMLDOM")
    xmldata3.async = False
    xmldata3.Load Url
'XML|fffd|f|fffd|[|fffd|^|fffd||30e||fffd||fffd|o|fffd||fffd|-------------------------------------
    On Error GoTo ReGet
    Set Result3 = xmldata3.SelectNodes("GetMyPriceForASINResponse/GetMyPriceForASINResult/Product/Offers/Offer")
    On Error GoTo ReGet
    If Not Result3 Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
        For q = 0 To 100
            On Error GoTo ReGet
            If Not Result3(q) Is Nothing Then
                On Error GoTo ReGet
                If Result3(q).SelectSingleNode("SellerSKU").Text = CheckSKU Then
                    On Error GoTo ReGet
                    ReturnVal(0) = Result3(q).SelectSingleNode("ItemSubCondition").Text
                    Select Case ReturnVal(0)
                        Case "Acceptable"
                            ReturnVal(0) = "1"
                        Case "Good"
                            ReturnVal(0) = "2"
                        Case "VeryGood"
                            ReturnVal(0) = "3"
                        Case "Mint"
                            ReturnVal(0) = "4"
                        Case "New"
                            ReturnVal(0) = "5"
                    End Select
                    ReturnVal(1) = Result3(q).SelectSingleNode("BuyingPrice/LandedPrice/Amount").Text
                    ReturnVal(2) = Result3(q).SelectSingleNode("BuyingPrice/ListingPrice/Amount").Text
                    ReturnVal(3) = Result3(q).SelectSingleNode("BuyingPrice/Shipping/Amount").Text
                    Exit For
                End If
             End If
        DoEvents
        Next
    End If

ASINtoCondition = ReturnVal
'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set test = Nothing
    Erase ReturnVal

End Function



Function GetCondition(SKU As String) As Variant

Dim ReturnVal(3) As Variant '0:Condition,1:LandedPrice,2:ListingPrice,3:ShippingPrice
'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
Dim test As Worksheet
    Set test = Sheets("test")
'----------------------------------

'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim xmldata As Object
Dim Result As Object
Dim tmpPrice As Double
Dim tmpObj As Object
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^
Dim MWSsKey As String
    MWSsKey = Worksheets("Test").Range("B2")
Dim sKey As String
    sKey = Worksheets("Debug2").Range("B4")
Dim AWSkey As String
    AWSkey = Worksheets("Debug2").Range("B3")

Dim sellerID As String
    sellerID = Sheets("Test").Range("B4")


Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"
Dim SelfExclude As String
    SelfExclude = "False"
Dim ItemCondition As String
    ItemCondition = "All"
Dim APIVersion As String
    APIVersion = "2011-10-01"
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
'SKU|fffd||315||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||d0b9||fffd||fffd|
Dim CheckSKU As String
   CheckSKU = URLencode(SKU)
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Long, j As Long, k As Long

'MWS|fffd|f|fffd|[|fffd|^|fffd||30a|i|fffd|[|fffd|J|fffd|n

ChDrive ActiveWorkbook.Path
ChDir ActiveWorkbook.Path
'--------------------------------------
'
'|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd|i3|fffd||fffd||702||14d||10e||64fe||fffd|j
ReGet:
Dim ErrCount As Long
If Err.Number <> 0 Then
    Err.Clear
    ErrCount = ErrCount + 1
    If ErrCount > 3 Then
        Exit Function
    End If
End If
'|fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe|================================================================================================================
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") > 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If
'|fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd|E|fffd|T|fffd|u|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||64fe||fffd||302||fffd||fffd||7c2||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd|iGetMyPriceForSKU|fffd|A10/sec)***********************
'If Sheets("PriceCheckList").Cells(x, 3) = "" And Sheets("PriceCheckList").Cells(x, 4) = "" Then
    Dim xmldata3 As Object
    Dim Result3 As Object
    
    rawText = ""
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
        rawText = rawText _
                & "AWSAccessKeyId=" & AWSkey _
                & "&Action=GetMyPriceForSKU" _
                & "&MWSAuthToken=" & MWSsKey _
                & "&MarketplaceId=" & MarketPlaceID _
                & "&SellerId=" & sellerID _
                & "&SellerSKUList.SellerSKU.1=" & CheckSKU _
                & "&SignatureMethod=HmacSHA256" _
                & "&SignatureVersion=2" _
                & "&Timestamp=" & timestamp _
                & "&Version=" & APIVersion
       
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/Products/2011-10-01" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
'|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------

        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        Url = "https://" & ecsaddress & "/Products/2011-10-01?" & rawText & "&Signature=" & sign
    
'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
    Set xmldata3 = CreateObject("Microsoft.XMLDOM")
    xmldata3.async = False
    xmldata3.Load Url
'XML|fffd|f|fffd|[|fffd|^|fffd||30e||fffd||fffd|o|fffd||fffd|-------------------------------------
    On Error GoTo ReGet
    Set Result3 = xmldata3.SelectNodes("GetMyPriceForSKUResponse/GetMyPriceForSKUResult/Product/Offers/Offer")
    On Error GoTo ReGet
    If Not Result3 Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
        For q = 0 To 100
            On Error GoTo ReGet
            If Not Result3(q) Is Nothing Then
                On Error GoTo ReGet
                If Result3(q).SelectSingleNode("SellerSKU").Text = SKU Then
                    On Error GoTo ReGet
                    ReturnVal(0) = Result3(q).SelectSingleNode("ItemSubCondition").Text
                    Select Case ReturnVal(0)
                        Case "Acceptable"
                            ReturnVal(0) = "1"
                        Case "Good"
                            ReturnVal(0) = "2"
                        Case "VeryGood"
                            ReturnVal(0) = "3"
                        Case "Mint"
                            ReturnVal(0) = "4"
                        Case "New"
                            ReturnVal(0) = "5"
                    End Select
                    ReturnVal(1) = Result3(q).SelectSingleNode("BuyingPrice/LandedPrice/Amount").Text
                    ReturnVal(2) = Result3(q).SelectSingleNode("BuyingPrice/ListingPrice/Amount").Text
                    ReturnVal(3) = Result3(q).SelectSingleNode("BuyingPrice/Shipping/Amount").Text
                    Exit For
                End If
             End If
        DoEvents
        Next
    End If

GetCondition = ReturnVal
'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set test = Nothing
    Erase ReturnVal

End Function

Function SypnDay(SKU) As Long
'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
Dim SypnSyosaiReport As Worksheet
    Set SypnSyosaiReport = Sheets("SypnSyosaiReport")
'----------------------------------
'|fffd||3d0||fffd||fffd||312||fffd|`
Dim SKULen As Long
Dim SKUDate As String
        SKULen = Len(SKU) '|fffd|o|fffd||7d3||fffd||fffd||fffd||fffd||12c82||5c2||fffd|=================================================
        '4|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N--------------------------------------------------------------
        For k = 1 To SKULen - 7
            SKUDate = Mid(SKU, k, 4) & "/" & Mid(SKU, k + 4, 2) & "/" & Mid(SKU, k + 6, 2)
            If IsDate(SKUDate) = True Then
                SypnDay = DateDiff("d", SKUDate, Format(Now(), "YYYY/MM/DD"))
                GoTo labelDate
            End If
        DoEvents
        Next
        '2|fffd||fffd||fffd|N|fffd||fffd||fffd||143|`|fffd|F|fffd|b|fffd|N-----------------------------------------------------------------
        For k = 1 To SKULen - 5
            SKUDate = Mid(SKU, k, 2) & "/" & Mid(SKU, k + 2, 2) & "/" & Mid(SKU, k + 4, 2)
            If IsDate(SKUDate) = True Then
                SypnDay = DateDiff("d", SKUDate, Format(Now(), "YY/MM/DD"))
                GoTo labelDate
            End If
        DoEvents
        Next
        'SKU|fffd||fffd||fffd||253||fffd||fffd|t|fffd||fffd||fffd||202||fffd||fffd||fffd||38f|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|Q|fffd||182||fffd||fffd||fffd|-----------------------------------
        If Application.WorksheetFunction.CountIf(SypnSyosaiReport.Columns("A:A"), SKU) > 0 And Sheets("Env").Cells(7, 2) = "ON" Then
            SKUDate = Left(Application.WorksheetFunction.VLookup(SKU, SypnSyosaiReport.Columns("A:B"), 2, False), Len(Application.WorksheetFunction.VLookup(SKU, SypnSyosaiReport.Columns("A:B"), 2, False)) - 4)
            SypnDay = DateDiff("D", SKUDate, Now())
        Else
            '|fffd|o|fffd||7d3||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||30f||fffd||fffd||fffd|
            SypnDay = 999
        End If

labelDate:

End Function

Function FindBuyPrice(SKU)
'SKU|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||a27f||fffd|i|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
Dim Config As Worksheet
    Set Config = Sheets("Config")
    
Dim PriceLabel As Long
    PriceLabel = 0
Dim SaleRatio As Long
Dim BuyPrice As Long
    BuyPrice = 0
Dim FirstBarNumber As Long
    FirstBarNumber = 0
Dim SecondBarNumber As Long
    SecondBarNumber = 0
Dim BuyPriceLowLimit As Long
    BuyPriceLowLimit = Config.Cells(186, 9)
Dim BuyPriceHighLimit As Long
    BuyPriceHighLimit = Config.Cells(186, 11)
Dim FalseBuyPrice As Long
    FalseBuyPrice = Config.Cells(187, 9)
Dim SaleJudge As String
    SaleJudge = ""

    For n = 1 To Len(SKU)
        If Left(Right(SKU, n), 1) = "-" And FirstBarNumber <> 0 And SecondBarNumber = 0 Then
            SecondBarNumber = n
            If Left(Right(SKU, n), 2) = "-S" And IsNumeric(Left(Right(SKU, n - 2), 2)) = True Then
                SaleJudge = "|fffd|Z|fffd|[|fffd||fffd||fffd||fffd||fffd|i"
            End If
            GoTo labelSaleSKIP
        End If
                    
        If Left(Right(SKU, n), 1) = "-" And FirstBarNumber = 0 Then
            FirstBarNumber = n
            If IsNumeric(Right(SKU, FirstBarNumber - 1)) = True And Right(SKU, FirstBarNumber - 1) < 2147483647 Then
                PriceLabel = Int(Right(SKU, FirstBarNumber - 1))
            End If
        End If

    Next
labelSaleSKIP:
        
        If FirstBarNumber > SecondBarNumber Then
            FindBuyPrice = FalseBuyPrice
        Else
            If FirstBarNumber <> 0 And SaleJudge = "" Then
                If IsNumeric(Right(SKU, FirstBarNumber - 1)) = True And Right(SKU, FirstBarNumber - 1) < 2147483647 Then
                        PriceLabel = Int(Right(SKU, FirstBarNumber - 1))
                        FindBuyPrice = PriceLabel
                Else
                        FindBuyPrice = FalseBuyPrice
                End If
            End If
            
            If SecondBarNumber <> 0 And SaleJudge <> "" Then
                If IsNumeric(Right(SKU, FirstBarNumber - 2)) = True And IsNumeric(Left(Right(SKU, SecondBarNumber - 2), SecondBarNumber - FirstBarNumber - 2)) = True Then
                        If IsNumeric(Right(SKU, FirstBarNumber - 1)) = True And Right(SKU, FirstBarNumber - 1) < 2147483647 Then
                            PriceLabel = Int(Right(SKU, FirstBarNumber - 1))
                        Else
                            PriceLabel = FalseBuyPrice
                        End If

                        If IsNumeric(Left(Right(SKU, SecondBarNumber - 2), SecondBarNumber - FirstBarNumber - 2)) = True Then
                            SaleRatio = Int(Left(Right(SKU, SecondBarNumber - 2), SecondBarNumber - FirstBarNumber - 2))
                        Else
                            SaleRatio = 0
                        End If

                    FindBuyPrice = Int(PriceLabel * (100 - SaleRatio) / 100)
                Else
                    FindBuyPrice = FalseBuyPrice
                   
                End If
            End If
        End If


'|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||30f||fffd||fffd||fffd||fffd||fffd|
    Set Config = Nothing
End Function
Function RivalPrice(ASIN As String, SelfPrice As Long) As Variant

'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
Dim test As Worksheet
    Set test = Sheets("test")
'----------------------------------
Dim RivalResolt(5, 19) As Variant

'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^
Dim MWSsKey As String
    MWSsKey = Worksheets("Test").Range("B2")
Dim sKey As String
    sKey = Worksheets("Debug2").Range("B4")
Dim AWSkey As String
    AWSkey = Worksheets("Debug2").Range("B3")

Dim sellerID As String
    sellerID = Sheets("Test").Range("B4")

Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"
Dim SelfExclude As String
    SelfExclude = "False"
Dim ItemCondition As String
    ItemCondition = "All"
Dim APIVersion As String
    APIVersion = "2011-10-01"
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
ChDrive ActiveWorkbook.Path
ChDir ActiveWorkbook.Path
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim xmldata As Object
Dim Result As Object
Dim tmpPrice As Double
Dim tmpObj As Object
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Long, j As Long, k As Long

Dim ResaltError As Long

'|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd|i3|fffd||fffd||702||14d||10e||64fe||fffd|j
ReGet:
Dim ErrCount As Long
If Err.Number <> 0 Then
    Err.Clear
    ErrCount = ErrCount + 1
    If ErrCount > 3 Then
        Exit Function
    End If
End If
'|fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe|
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v------------
If Format(Now(), "hh") >= 9 Then
    timestamp = Format(Now(), "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Now() - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If

'|fffd||fffd||fffd|i|fffd||64fe||fffd|p|fffd||fffd|URL|fffd||c42c|----------------------
rawText = ""
        rawText = rawText & "ASINList.ASIN.1=" & ASIN
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
        rawText = rawText _
                & "&AWSAccessKeyId=" & AWSkey _
                & "&Action=GetLowestOfferListingsForASIN" _
                & "&ExcludeMe=False" _
                & "&MWSAuthToken=" & MWSsKey _
                & "&MarketplaceId=" & MarketPlaceID _
                & "&SellerId=" & sellerID _
                & "&SignatureMethod=HmacSHA256" _
                & "&SignatureVersion=2" _
                & "&Timestamp=" & timestamp _
                & "&Version=" & APIVersion
       
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/Products/2011-10-01" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
'|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-------------------------

        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        Url = "https://" & ecsaddress & "/Products/2011-10-01?" & rawText & "&Signature=" & sign
        
    
'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
    Set xmldata = CreateObject("Microsoft.XMLDOM")
    xmldata.async = False
    xmldata.Load Url
    
'MWS|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||109||fffd||fffd|i|fffd||fffd||fffd|v|fffd|Z|fffd||fffd||fffd||fffd|====================================================================================================================================
    On Error GoTo ReGet
    Set Result = xmldata.SelectNodes("GetLowestOfferListingsForASINResponse/GetLowestOfferListingsForASINResult/Product")

'-----------------------------------------------------

Dim Consider As Long
Dim Condition As String
Dim SubCondition As String
Dim RivalFullFill As String
Dim PersonsCount As Long
Dim RivalPoint As Long
Dim ShippingTime As String
Dim SelfJudge As Long
'----------------------------------------------------------------------
Dim SelNode As IXMLDOMNodeList

On Error GoTo ReGet
If Not Result(0) Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
        For i = 0 To 19
            '===============================
            If InStr(xmldata.DocumentElement.Text, "Error") > 0 Then
                GoTo ReGet
            End If
            '===============================
        On Error GoTo ReGet
        Set tmpObj = Result(0).SelectNodes("LowestOfferListings/LowestOfferListing")
            On Error GoTo ReGet
            If Not tmpObj(i) Is Nothing Then
                Condition = tmpObj(i).SelectSingleNode("Qualifiers/ItemCondition").Text
                SubCondition = tmpObj(i).SelectSingleNode("Qualifiers/ItemSubcondition").Text
                RivalFullFill = tmpObj(i).SelectSingleNode("Qualifiers/FulfillmentChannel").Text
                'Amazon|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||3c2||202||182||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||251||389||fffd||fffd|i|fffd||202||fffd||fffd||fffd|LandedPrice|fffd||fffd||fffd||202||fffd||fffd|j------------
                Set SelNode = tmpObj(i).SelectNodes("Price/LandedPrice/Amount")
                If SelNode.Length > 0 Then
                    tmpPrice = tmpObj(i).SelectSingleNode("Price/LandedPrice/Amount").Text
                Else
                    tmpPrice = tmpObj(i).SelectSingleNode("Price/ListingPrice/Amount").Text
                End If
                '-----------------------------------------------------------------------------
                Consider = tmpObj(i).SelectSingleNode("NumberOfOfferListingsConsidered").Text
                ShippingTime = tmpObj(i).SelectSingleNode("Qualifiers/ShippingTime/Max").Text
                '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|O|fffd||fffd||fffd||fffd|
                If SelfPrice = tmpPrice And SelfJudge <> 1 Then
                    Consider = Consider - 1
                    SelfJudge = 1
                End If
                
                PersonsCount = PersonsCount + Consider
                    
                   Select Case SubCondition '|fffd||fffd||fffd|C|fffd|o|fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-------
                        Case "Acceptable"
                            SubCondition = 1
                        Case "Good"
                            SubCondition = 2
                        Case "VeryGood"
                            SubCondition = 3
                        Case "Mint"
                            SubCondition = 4
                        Case "New"
                            SubCondition = 5
                    End Select

                '------------------------------------
                On Error GoTo ReGet
                If Not tmpObj(i).SelectSingleNode("Price/Points/PointsNumber") Is Nothing Then
                    RivalPoint = tmpObj(i).SelectSingleNode("Price/Points/PointsNumber").Text
                    'J|fffd||42a42||73c7||fffd||243||fffd||fffd|C|fffd|o|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
                End If

                '|fffd||fffd||fffd||282||fffd|z|fffd||fffd||24a|i|fffd|[|fffd||fffd||fffd||fffd|
                RivalResolt(0, i) = SubCondition
                RivalResolt(1, i) = Consider
                RivalResolt(2, i) = tmpPrice
                RivalResolt(3, i) = RivalPoint
                RivalResolt(4, i) = RivalFullFill
                RivalResolt(5, i) = ShippingTime
                
                Condition = Empty
                SubCondition = Empty
                RivalFullFill = Empty
                tmpPrice = Empty
                Consider = Empty
                
                Set SelNode = Nothing
            End If
        Next '|fffd||fffd||fffd||fffd||fffd||702||142||34f||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|--

Else
    ResaltError = ResaltError + 1
    If ResaltError <= 3 Then
        GoTo ReGet
    End If

End If
        RivalPrice = RivalResolt
End Function
Function GetBasicPosition(DayPast As Long, SelfCondition As Variant, RivalResolt As Variant, SelfFullFill As String) As Long

'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||310||933e|
Dim Config As Worksheet
    Set Config = Sheets("Config")

'|fffd||e3c0||fffd||38f||6c2||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
Dim PriceRule As String
Dim RuleRow As Long
    Select Case SelfCondition
        Case Is < 5
        '|fffd||fffd||fffd||c2||30f||a347|
            If SelfFullFill = "|fffd||fffd||fffd||214|z|fffd||fffd|" Then
                '|fffd||fffd||fffd||214|z|fffd||fffd||fffd||30f||a347|
                RuleRow = 7
            Else
                'FBA|fffd||30f||a347|
                RuleRow = 16
            End If
        Case Else
        '|fffd|V|fffd|i|fffd||30f||a347|
            If SelfFullFill = "|fffd||fffd||fffd||214|z|fffd||fffd|" Then
                '|fffd||fffd||fffd||214|z|fffd||fffd||fffd||30f||a347|
                RuleRow = 25
            Else
                'FBA|fffd||30f||a347|
                RuleRow = 35
            End If
    End Select
    
'|fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd||64fe|
Dim RuleCol As Long
    For a = 2 To 5
        If DayPast <= Config.Cells(2, a) Then
            RuleCol = a
            Exit For
        End If
    DoEvents
    Next
    If RuleCol = Empty Then
        RuleCol = 6
    End If
'|fffd||fffd||fffd|i|fffd||fffd||fffd||80cb||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    PriceRule = Config.Cells(RuleRow, RuleCol)
    
'|fffd||fffd||fffd||311||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||64fe|
    '|fffd|||fffd|C|fffd||fffd||fffd|g|fffd||fffd||fffd|l|fffd||fffd|
Dim PointEffect As String
    PointEffect = Config.Cells(45, RuleCol)
    
    '2|fffd||50e||fffd|Q|fffd||fffd|ON/OFF
Dim SecondEffect As String
Dim LimitCondition As Long
    
    If SelfCondition = 5 Then
    '|fffd|V|fffd|i|fffd||30f||a347|
        SecondEffect = Config.Cells(51, RuleCol)
    Else
    '|fffd||fffd||fffd||c2||30f||a347|
        SecondEffect = Config.Cells(50, RuleCol)
        Select Case Config.Cells(57, RuleCol)
            Case "|fffd||fffd||fffd||257||1c2||fffd|"
                LimitCondition = 3
            Case "|fffd||642||690|V|fffd|i"
                LimitCondition = 4
            Case "|fffd|V|fffd|i"
                LimitCondition = 5
        End Select
    End If
    '|fffd|w|fffd||fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd||24a|Y|fffd||fffd||fffd||fffd||fffd||fffd||fffd|2|fffd||50e||fffd|OFF
    If LimitCondition <= SelfCondition Then
        SecondEffect = "OFF"
    End If
    
    '2|fffd||50e||fffd|Q|fffd||18f||fffd||fffd||fffd|
Dim SecondNumber As Long
    SecondNumber = Config.Cells(52, RuleCol)
Dim SecondBorder As Long
    SecondBorder = Config.Cells(53, RuleCol)
Dim SecondPlus As Long
    SecondPlus = Config.Cells(54, RuleCol)
Dim SecondMulti As Long
    SecondMulti = Config.Cells(55, RuleCol)

'FBA|fffd|Q|fffd||182||242||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd|
Dim FBAEffect As String 'ON/OFF
    If SelfFullFill = "FBA" Then
        If SelfCondition < 5 Then
            '|fffd||fffd||fffd||c2||202||fffd|
            FBAEffect = Config.Cells(17, RuleCol)
        Else
            '|fffd|V|fffd|i|fffd||202||fffd|
            FBAEffect = Config.Cells(35, RuleCol)
            If FBAEffect = "|fffd||fffd||fffd|z|fffd||fffd||fffd||30d||148||fffd||fffd|l" Then
                FBAEffect = "ON"
            Else
                FBAEffect = "OFF"
            End If
        End If
    End If

'|fffd||fffd||fffd||fffd||fffd||249||fffd||fffd||fffd||fffd||fffd||fffd||e3c0|2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd|
Dim BasicPosition As String
Dim SecondPosition As String
Dim TargetCondition As Long

    If PriceRule = "|fffd||96||fffd||fffd||fffd||fffd||148||fffd||fffd|l" Then
        TargetCondition = 2
    Else
        TargetCondition = SelfCondition
    End If
ReCheck:
        For b = 0 To 19
            '|fffd||fffd||fffd||fffd||fffd||38f||6c2||314|z|fffd||fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||fffd||fffd||202||fffd|X|fffd|L|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
            If RivalResolt(0, b) = 5 Then
                If Config.Cells(62, RuleCol) <= Replace(Left(RivalResolt(5, b), 2), "-", "") Then
                    GoTo IgnoreShipSkip
                End If
            Else
                If Config.Cells(63, RuleCol) <= Replace(Left(RivalResolt(5, b), 2), "-", "") Then
                    GoTo IgnoreShipSkip
                End If
            End If
            '|fffd||fffd||fffd|C|fffd|o|fffd||fffd||fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||314|z|fffd||42a8b||fffd||242||202||fffd||fffd||fffd||fffd||7532||fffd||fffd||fffd||fffd|
            If RivalResolt(0, b) = Empty Then
                Exit For
            End If
            '|fffd||1c2||fffd||fffd||20f||fffd||14e||fffd||fffd||fffd||fffd||fffd||fffd||fffd|0|fffd||142||202||fffd||fffd||fffd||fffd|
            If SelfFullFill = "|fffd||fffd||fffd||214|z|fffd||fffd|" Or FBAEffect = "OFF" Then
                '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||214|z|fffd||fffd||fffd||30f||a347|
                If RivalResolt(0, b) >= TargetCondition And RivalResolt(1, b) > 0 Then
                    If BasicPosition = Empty Then
                        '|fffd||fffd|1|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||394||fffd||382||fffd|
                        BasicPosition = b
                    Else
                        SecondPosition = b
                        '2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||394||fffd||fffd||fffd||fffd||fffd|
                        Exit For
                    End If
                End If
            Else
                'FBA|fffd|Q|fffd||182||30f||a347|
                If RivalResolt(0, b) >= TargetCondition And RivalResolt(1, b) > 0 And RivalResolt(4, b) <> "Merchant" Then
                    If BasicPosition = Empty Then
                        '|fffd||fffd|1|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||394||fffd||382||fffd|
                        BasicPosition = b
                    Else
                        SecondPosition = b
                        '2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||394||fffd||fffd||fffd||fffd||fffd|
                        Exit For
                    End If
                End If
            End If
IgnoreShipSkip:
        DoEvents
        Next
    Dim SecondJudge As String
    Dim FullFillCange As String
        '|fffd||fffd||fffd||fffd||fffd||fffd|FBA|fffd||151||fffd||fffd||fffd|FBA|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||a347|
        If SelfFullFill = "FBA" And BasicPosition = Empty Then
            SelfFullFill = "|fffd||fffd||fffd||214|z|fffd||fffd|"
            FullFillCange = "ON"
            GoTo ReCheck
        End If
        If FullFillCange = "ON" Then
            SelfFullFill = "FBA"
        End If
        '|fffd||fffd|2|fffd|||fffd|W|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||38d||113|x|fffd|i|fffd||fffd||a0aa||fffd||fffd||fffd||702||fffd||fffd||102||fffd||302||151||fffd|2|fffd||253||fffd||fffd||fffd|j
        If SecondPosition = Empty And ReCheckJudge = Empty Then
            ReCheckJudge = "|fffd||103|`|fffd|F|fffd|b|fffd|N|fffd||3c2||fffd|"
            GoTo ReCheck
        End If
        '|fffd||38f||6c2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||38d||14d||fffd||fffd|l|fffd||fffd||fffd|g|fffd||fffd|
        If BasicPosition = Empty Then
            If b > 0 Then
                BasicPosition = b - 1
            Else
                BasicPosition = 0
            End If
        End If
        '|fffd||38f||6c2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||38d||14d||fffd||fffd|l|fffd||fffd||fffd|g|fffd||fffd|
        If SecondPosition = Empty Then
            If b > 0 Then
                SecondPosition = b - 1
            Else
                SecondPosition = 0
            End If
        End If

        
Dim BasicCondition As Long
Dim BasicConsider As Long
Dim BasicPrice As Long
Dim BasicPoint As Long
Dim BasicFullFill As String
    
    '1|fffd||50e||fffd||fffd||fffd|
    BasicCondition = RivalResolt(0, BasicPosition)
    BasicConsider = RivalResolt(1, BasicPosition)
    BasicPrice = RivalResolt(2, BasicPosition)
    BasicPoint = RivalResolt(3, BasicPosition)
    BasicFullFill = RivalResolt(4, BasicPosition)
    If PointEffect = "ON" Then
        BasicPrice = BasicPrice + BasicPoint
    End If
    
Dim SecondCondition As Long
Dim SecondConsider As Long
Dim SecondPrice As Long
Dim SecondPoint As Long
Dim SecondFullFill As String
    
    If SecondPosition = Empty Then
        GoTo SecondSkip
    End If
    '2|fffd||50e||fffd||fffd||fffd|
    SecondCondition = RivalResolt(0, SecondPosition)
    SecondConsider = RivalResolt(1, SecondPosition)
    SecondPrice = RivalResolt(2, SecondPosition)
    SecondPoint = RivalResolt(3, SecondPosition)
    SecondFullFill = RivalResolt(4, SecondPosition)
    If PointEffect = "ON" Then
        SecondPrice = SecondPrice + SecondPoint
    End If
    '2|fffd||50e||fffd||fffd||fffd|Q|fffd||182||fffd||fffd||90a9||fffd||fffd||fffd||80b7||fffd||fffd|
    If SecondEffect = "ON" Then
        If BasicConsider <= SecondNumber Then
        '|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||348||353||fffd||fffd||202||fffd|
            If BasicPrice <= SecondBorder Then
                If (SecondPrice - BasicPrice) >= SecondPlus Then
                    BasicPosition = SecondPosition
                End If
            Else
                If (SecondPrice - BasicPrice) / BasicPrice * 100 >= SecondMulti Then
                    BasicPosition = SecondPosition
                End If
            End If
        End If
    End If
SecondSkip:
GetBasicPosition = BasicPosition
    
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||30f||fffd||fffd||fffd||fffd||fffd|
    Set Config = Nothing
End Function

Function RuleForNew(DayPast As Long, SelfFullFill As String) As String
Dim Config As Worksheet
    Set Config = Sheets("Config")
'|fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd||64fe|
Dim RuleRow As Long
    If SelfFullFill = "|fffd||fffd||fffd||214|z|fffd||fffd|" Then
        RuleRow = 25
    Else
        RuleRow = 35
    End If
Dim RuleCol As Long
    For a = 2 To 5
        If DayPast <= Config.Cells(2, a) Then
            RuleCol = a
            Exit For
        End If
    DoEvents
    Next
    If RuleCol = Empty Then
        RuleCol = 6
    End If
    RuleForNew = Config.Cells(RuleRow, RuleCol)
    Set Config = Nothing
End Function

Function FindRuleCol(DayPast As Long) As Long
Dim Config As Worksheet
    Set Config = Sheets("Config")
    
Dim RuleCol As Long
    For a = 2 To 5
        If DayPast < Config.Cells(2, a) Then
            RuleCol = a
            Exit For
        End If
    DoEvents
    Next
    If RuleCol = Empty Then
        RuleCol = 6
    End If
    Set Config = Nothing
    FindRuleCol = RuleCol
End Function
Function LowLimit(ASIN As String, SelfFullFill As String, DayPast As Long, BuyPrice As Long)

Dim Config As Worksheet
    Set Config = Sheets("Config")
Dim test As Worksheet
    Set test = Sheets("test")
Dim SypnPrice As Long
    SypnPrice = 1000
Dim SendPrice As Long
    SendPrice = 0
Dim SendCost As Long
Dim FullFillment As String
Dim RatioRow As Long
    If SelfFullFill = "FBA" Then
        FullFillment = "true"
        SendCost = Config.Cells(192, 9)
        RatioRow = 192
    Else
        FullFillment = "false"
        SendCost = Config.Cells(189, 9)
        RatioRow = 189
    End If
Dim ProfitRatio As Long
Dim ProfitPlus As Long
'|fffd||202||7c2||70a9||fffd||255||2433||fffd||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd|
If Config.Cells(186, 15) = "OFF" Then
    '|fffd|J|fffd|N|fffd|J|fffd|N|fffd||155||3cd|X
    For d = 2 To 5
        If DayPast < Config.Cells(2, d) Then
            ProfitRatio = Config.Cells(RatioRow, d)
            ProfitPlus = Config.Cells(RatioRow + 1, d)
            Exit For
        End If
    DoEvents
    Next
    If ProfitRatio = Empty Then
        ProfitRatio = Config.Cells(RatioRow, 6)
        ProfitPlus = Config.Cells(RatioRow + 1, 6)
    End If
Else
Dim Day1 As Long
Dim Day2 As Long
Dim Per1 As Long
Dim Per2 As Long
Dim Yen1 As Long
Dim Yen2 As Long
Dim DayPosition As Double
  '|fffd||fffd||fffd|`|fffd||2433||fffd||fffd||fffd||fffd|
    If DayPast < Config.Cells(2, 2) Or DayPast > Config.Cells(2, 5) Then
        GoTo LineSkip
    End If
    
    For d = 3 To 5
        If DayPast < Config.Cells(2, d) Then
            Day1 = Config.Cells(2, d - 1)
            Day2 = Config.Cells(2, d)
            Per1 = Config.Cells(RatioRow, d - 1)
            Per2 = Config.Cells(RatioRow, d)
            Yen1 = Config.Cells(RatioRow + 1, d - 1)
            Yen2 = Config.Cells(RatioRow + 1, d)
                
            DayPosition = (DayPast - Day1) / (Day2 - Day1)
                            
            ProfitRatio = Int(Per1 + (Per2 - Per1) * DayPosition)
            ProfitPlus = Int(Yen1 + (Yen2 - Yen1) * DayPosition)
            Exit For
        End If
    DoEvents
    Next
End If
LineSkip:
Dim FeeRatio As Long
Dim AbsolutedFee As Long

'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim xmldata As Object
Dim Result As Object
Dim tmpPrice As Double
Dim tmpObj As Object
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

Dim MWSsKey As String
    MWSsKey = Worksheets("Test").Range("B2")
Dim sKey As String
    sKey = Worksheets("Debug2").Range("B4")
Dim AWSkey As String
    AWSkey = Worksheets("Debug2").Range("B3")

Dim sellerID As String
    sellerID = Sheets("Test").Range("B4")

    
Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"
    
Dim SelfExclude As String
    SelfExclude = "False"

Dim ItemCondition As String
    ItemCondition = "All"

Dim Action As String
    Action = "GetMyFeesEstimate"

Dim APIVersion As String
    APIVersion = "2011-10-01"
    
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Long, j As Long, k As Long

'-------------------------------------------------------
'|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|E|fffd|C|fffd||fffd||fffd|h|fffd|E|fffd||315|W|fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|Amazon2excel|fffd||fffd||149|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||101|A
'|fffd|@|fffd||6cc||fffd|^|fffd|u|fffd|`|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||303|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd||342||fffd||fffd||90b1||fffd||181|B
'|fffd|@|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||315||fffd||fffd||fffd||fffd||312||fffd||fffd||fffd||fffd||fffd|13|fffd|P|fffd|^|fffd||20f||fffd|`|fffd||fffd||fffd||fffd||fffd||fffd||392||fffd||fffd||fffd||fffd||642||1c2||60a2||fffd|`|fffd||242||fffd||fffd||90b1||fffd||181|B
ChDrive ActiveWorkbook.Path
ChDir ActiveWorkbook.Path
'--------------------------------------
'
'|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd|i3|fffd||fffd||702||14d||10e||64fe||fffd|j
ReGet:
Dim ErrCount As Long
If Err.Number <> 0 Then
    Err.Clear
    ErrCount = ErrCount + 1
    If ErrCount > 3 Then
        Exit Function
    End If
End If
'|fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe|================================================================================================================
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") >= 9 Then
    timestamp = Format(Now(), "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Now() - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If


'------------------------------------

'|fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd|E|fffd|T|fffd|u|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd|E|fffd||fffd||fffd|i|fffd||64fe||fffd||302||fffd||fffd||7c2||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd|iGetMyPriceForSKU|fffd|A10/sec)***********************

    Dim xmldata3 As Object
    Dim Result3 As Object
    
    rawText = ""
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
        rawText = rawText _
                & "AWSAccessKeyId=" & AWSkey _
                & "&Action=" & Action _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.IdType=ASIN" _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.IdValue=" & ASIN _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.Identifier=request1" _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.IsAmazonFulfilled=" & FullFillment _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.MarketplaceId=" & MarketPlaceID _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.PriceToEstimateFees.ListingPrice.Amount=" & SypnPrice _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.PriceToEstimateFees.ListingPrice.CurrencyCode=JPY" _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.PriceToEstimateFees.Points.PointsMonetaryValue.Amount=0" _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.PriceToEstimateFees.Points.PointsMonetaryValue.CurrencyCode=JPY" _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.PriceToEstimateFees.Points.PointsNumber=0" _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.PriceToEstimateFees.Shipping.Amount=" & SendPrice _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.PriceToEstimateFees.Shipping.CurrencyCode=JPY" _
                & "&MWSAuthToken=" & MWSsKey _
                & "&SellerId=" & sellerID _
                & "&SignatureMethod=HmacSHA256" _
                & "&SignatureVersion=2" _
                & "&Timestamp=" & timestamp _
                & "&Version=" & APIVersion
       
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/Products/2011-10-01" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
'|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------

        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        Url = "https://" & ecsaddress & "/Products/2011-10-01?" & rawText & "&Signature=" & sign
    
'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
    Set xmldata3 = CreateObject("Microsoft.XMLDOM")
    xmldata3.async = False
    xmldata3.Load Url
'XML|fffd|f|fffd|[|fffd|^|fffd||30e||fffd||fffd|o|fffd||fffd|-------------------------------------
    On Error GoTo ReGet
    Set Result3 = xmldata3.SelectNodes("GetMyFeesEstimateResponse/GetMyFeesEstimateResult/FeesEstimateResultList/FeesEstimateResult/FeesEstimate/FeeDetailList/FeeDetail")
'Dim AbsolutedFee As Long
'Dim BuyPrice As Long
'Dim FeeRatio As Long
'Dim ProfitRatio As Long
'Dim ProfitPlus As Long
        AbsolutedFee = Empty
    On Error GoTo ReGet
    If Not Result3 Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
            On Error GoTo ReGet
            If Not Result3(0) Is Nothing Then
                FeeRatio = Result3(0).SelectSingleNode("FinalFee/Amount").Text
                FeeRatio = Application.WorksheetFunction.RoundUp((FeeRatio / SypnPrice * 100), 0)
                AbsolutedFee = Result3(1).SelectSingleNode("FinalFee/Amount").Text * 1.08
                If FullFillment = "true" Then
                    AbsolutedFee = AbsolutedFee + Result3(3).SelectSingleNode("FinalFee/Amount").Text * 1.08
                End If
                '|fffd||fffd||fffd||214|z|fffd||fffd||fffd||30f||a347||fffd||fffd||fffd||fffd||fffd||317||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|K|fffd|v
            End If
    End If

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||30c|v|fffd|Z
    'LowLimit = Int(((ProfitRatio * BuyPrice / 100) + SendCost + BuyPrice + AbsolutedFee) * 100 / (100 - FeeRatio)) + ProfitPlus
    LowLimit = Int((AbsolutedFee + BuyPrice + SendCost + ProfitPlus + BuyPrice * ProfitRatio / 100) / (1 - FeeRatio / 100))
'|fffd||3d0||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|--------------------------
Set xmldata = Nothing
Set Result = Nothing
Set tmpObj = Nothing
Set xmldata3 = Nothing
Set Result3 = Nothing


FullFillment = Empty
SendCost = Empty
RatioRow = Empty
ProfitRatio = Empty
ProfitPlus = Empty
Day1 = Empty
Day2 = Empty
Per1 = Empty
Per2 = Empty
Yen1 = Empty
Yen2 = Empty
DayPosition = Empty
FeeRatio = Empty
AbsolutedFee = Empty
Url = Empty
tmpPrice = Empty
rawText = Empty
timestamp = Empty
SignedUrl = Empty
sKey = Empty
AWSkey = Empty
MarketPlaceID = Empty
sellerID = Empty
SelfExclude = Empty
ItemCondition = Empty
Action = Empty
APIVersion = Empty
ecsaddress = Empty
hash = Empty
hash_2 = Empty
hash_cut2 = Empty
hash_10 = Empty
hash_cut10 = Empty
base64Array = Empty
base64Array2 = Empty
sign = Empty
sign2 = Empty
rawTextToSign = Empty
rawTextToSign2 = Empty
i = Empty
j = Empty
k = Empty
Set Config = Nothing
Set test = Nothing
'--------------------------------------
End Function

Function GetSendPattern(TotalPrice As Long, SendPrice As Long) As Variant
Dim Env As Worksheet
    Set Env = Sheets("Env")
Dim LastRow As Long
    LastRow = Application.WorksheetFunction.CountA(Env.Range("A44:A52"))
Dim SypnPrice As Long
Dim SendPattern As String

    For i = 1 To LastRow
        If TotalPrice > Env.Cells(43 + i, 2) Then
            SypnPrice = TotalPrice - Env.Cells(43 + i, 2)
            If SypnPrice <= 0 Then
                SypnPrice = 1
            End If
            SendPrice = Env.Cells(43 + i, 2)
            SendPattern = Env.Cells(43 + i, 1)
        Else
            If SypnPrice = Empty Then
                SypnPrice = TotalPrice - SendPrice
                If SypnPrice <= 0 Then
                    SypnPrice = 1
                End If
                SendPattern = Empty
            End If
            Exit For
        End If
    DoEvents
    Next
    
Dim ResoltVar(1) As Variant
    ResoltVar(0) = SypnPrice
    ResoltVar(1) = SendPattern
    GetSendPattern = ResoltVar
End Function

Attribute VB_Name = "Module14"
Private Declare Sub Sleep Lib "kernel32" (ByVal dwMs As Long)
Sub |fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd|()

'|fffd||38f||6c3|V|fffd|[|fffd|g|fffd||312||fffd|`
Dim SypnReport As Worksheet
    Set SypnReport = Sheets("SypnReport")
Dim FBAReport As Worksheet
    Set FBAReport = Sheets("FBAReport")
Dim Env As Worksheet
    Set Env = Sheets("Env")
Dim Config As Worksheet
    Set Config = Sheets("Config")
'|fffd||3d0||fffd||fffd||312||fffd|`
Dim SKU As String
Dim ASIN As String
Dim SelfFullFill As String

Dim WaitTime As Long
    WaitTime = Env.Cells(20, 2)

Dim SKUvar As Variant
Dim PriceVar As Variant
Dim PatternVar As Variant
'|fffd|z|fffd||fffd||311||50ab||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
Dim ValSize As Long
    ValSize = Env.Cells(23, 2)
    ReDim SKUvar(ValSize - 1)
    ReDim PriceVar(ValSize - 1)
    ReDim PatternVar(ValSize - 1)
Dim count As Long
    count = 0
Dim SypnPriceVar As Variant '0|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||fffd||749||fffd||fffd|i|fffd|A1|fffd|F|fffd||fffd||fffd||fffd||fffd|A2|fffd|F|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd|A3|fffd|F|fffd||3cd|X|fffd|O|fffd||fffd||fffd|i|fffd|A4|fffd|F|fffd||fffd||fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd|
Dim TargetCateNum As Long
    TargetCateNum = Application.WorksheetFunction.CountA(Env.Range("D43:D47"))
'|fffd|o|fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||73a9||fffd||214|z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd|=======================================================
Application.StatusBar = "|fffd||fffd||fffd||214|z|fffd||fffd||fffd||fffd||fffd||309||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd|{"
Dim LastIndex As Long
    LastIndex = SypnReport.Cells(Rows.count, 1).End(xlUp).Row
    SelfFullFill = "|fffd||fffd||fffd||214|z|fffd||fffd|"
Dim SendVar As Variant '0:|fffd|o|fffd|i|fffd||fffd||fffd|i|fffd|A1|fffd|F|fffd|z|fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd|
Dim TotalPrice As Long
Dim SendPrice As Long

Dim ItemPrice As Long
Dim ShippingPrice As Long
Dim SendPatternName As String

'|fffd||fffd||fffd||3cd|X|fffd|f|fffd|[|fffd|^|fffd||308||5c2||315||3d0||fffd|
Dim SumBeforePrice As Long
Dim SumAfterPrice As Long
Dim SumChangeCount As Long

'AMTU|fffd||fffd|2|fffd||fffd||fffd||20f||fffd||c2bc2||90bd||fffd||7c2||303|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd|
Dim UpTime As Date
Dim DiffTime As Long

If Config.Cells(5, 1) = "OFF" And Config.Cells(24, 1) = "OFF" Then
    GoTo SelfSendSkip
End If

    For a = 2 To LastIndex
        Application.StatusBar = "|fffd||fffd||fffd||214|z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||8486||fffd|@" & a - 1 & "/" & LastIndex - 1 & "|fffd|A|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|o|fffd||342||702||fffd| " & ((a - 1) Mod ValSize) & "/" & ValSize & "|fffd|A|fffd||fffd||fffd|i|fffd||3cd|X|fffd||fffd||fffd||fffd| " & count
        '|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|MWS|fffd||fffd||fffd||64fe|*****************************
        SKU = SypnReport.Cells(a, 1)
        ASIN = SypnReport.Cells(a, 2)
        '|fffd||fffd||fffd|O|fffd||38f||6c2||202||fffd|X|fffd|L|fffd|b|fffd|v
        If Application.WorksheetFunction.CountIf(Sheets("NoCheckList").Columns("A:A"), ASIN) > 0 Then
            GoTo EmptySkip
        End If
        SypnPriceVar = GetSypnPrice(SKU, ASIN, SelfFullFill, "") '|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
        '**************************************************
        '|fffd||fffd||fffd||282||202||fffd||fffd|i|fffd||314||fffd||fffd||3c2||741|j|fffd||30f||a347||fffd|X|fffd|L|fffd|b|fffd|v|fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd|J|fffd||fffd||30b0||fffd||202||fffd|
        If IsEmpty(SypnPriceVar) = True Then
                        If Sheets("test").Cells(2, 12) = "Debug" Then '*********************
                            Sheets("Debug").Cells(29, 3) = "|fffd||74c||242||202||fffd|"
                        End If
            GoTo EmptySkip
        End If
        
        '|fffd||fffd||fffd||fffd||38f||6c2||142||202||fffd||fffd||fffd||383|X|fffd|L|fffd|b|fffd|v
        If SypnPriceVar(4) = 5 Then
            '|fffd||fffd||fffd||214|z|fffd||fffd|-|fffd|V|fffd|i
            If Config.Cells(24, 1) = "OFF" Then GoTo EmptySkip
        Else
            '|fffd||fffd||fffd||214|z|fffd||fffd|-|fffd||fffd||fffd||fffd|
            If Config.Cells(5, 1) = "OFF" Then GoTo EmptySkip
        End If
        '|fffd||fffd||fffd|i|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd|
        If SypnPriceVar(0) = SypnPriceVar(3) Then
            GoTo EmptySkip
        End If
        
        '|fffd||3ce|Z|fffd|f|fffd|[|fffd|^|fffd|i|fffd|[
        SumBeforePrice = SumBeforePrice + SypnPriceVar(3)
        SumAfterPrice = SumAfterPrice + SypnPriceVar(0)
        '-------------------------------------------------
        '|fffd|z|fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||3cd|X|fffd|K|fffd|p|fffd||fffd||fffd||90a9||fffd|H---------------------
        If Env.Cells(42, 2) = "ON" Then
            If Env.Cells(42, 5) = "|fffd|S|fffd||fffd|" Or Application.WorksheetFunction.CountIf(Env.Range("D43:D" & 42 + TargetCateNum), SypnPriceVar(2)) > 0 Then
                '|fffd|z|fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||fffd||a347|
                TotalPrice = SypnPriceVar(0)
                SendPrice = SypnPriceVar(1)
                SendVar = GetSendPattern(TotalPrice, SendPrice) '|fffd|z|fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
                ItemPrice = SendVar(0)
                SendPatternName = SendVar(1)
            Else
                GoTo NoPatternCange
            End If
        Else
NoPatternCange:
        '|fffd|z|fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||202||fffd||fffd||a347|---------------------
            ItemPrice = SypnPriceVar(0) - Int(SypnPriceVar(1))
            If ItemPrice <= 0 Then
                ItemPrice = 1
            End If
            SendPatternName = Empty
        End If '-------------------------------------------------
        '|fffd||fffd||fffd|i|fffd||fffd||fffd||830b||fffd||282||fffd|z|fffd||fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        SKUvar(count) = SKU
        PriceVar(count) = ItemPrice
        PatternVar(count) = SendPatternName
EmptySkip:
        '|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||830f||fffd||fffd||fffd||252|B|fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|[|fffd|h
        If ((a - 1) Mod ValSize) = 0 And count <> 0 Then
            '|fffd|O|fffd||4f442||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|2|fffd||fffd||fffd|o|fffd||fffd||fffd||102||90a9||fffd|H
            If UpTime <> Empty And DateDiff("s", UpTime, Now()) < 120 Then
                DiffTime = DateDiff("s", UpTime, Now())
                For t = 1 To 120 - DiffTime
                    Application.StatusBar = "AMTU|fffd|X|fffd||fffd||fffd|b|fffd|g|fffd||fffd||fffd||55702||702||fffd| " & t & "/" & 120 - DiffTime & "|fffd|b|fffd||48b|@"
                    Sleep 1000
                DoEvents
                Next
            End If
            '|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
            Call OutPutSypnFile(SKUvar, PriceVar, PatternVar, count)
            SKUvar = Empty
            PriceVar = Empty
            PatternVar = Empty
            ReDim SKUvar(ValSize - 1)
            ReDim PriceVar(ValSize - 1)
            ReDim PatternVar(ValSize - 1)
            '|fffd||3ce|Z|fffd|f|fffd|[|fffd|^|fffd|i|fffd|[
            SumChangeCount = SumChangeCount + count + 1
            count = 0
            '|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|[
            UpTime = Now()
        Else
            If ItemPrice <> Empty Then
                count = count + 1
            End If
        End If

        SypnPriceVar = Empty
        SKU = Empty
        ItemPrice = Empty
        SendPatternName = Empty
        Sleep WaitTime 'MWS|fffd||48b|@|fffd||fffd||fffd||502||342||fffd||fffd||fffd||fffd||154||fffd||fffd|f|fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||60a4||fffd||202||fffd|I|fffd|y|fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||255||3cd|X|fffd|j
    DoEvents
    Next
    
SelfSendSkip:
If (Config.Cells(14, 1) = "OFF" And Config.Cells(34, 1) = "OFF") Or Sheets("TOP").Cells(8, 8) = "0" Then
    '|fffd||fffd||fffd||214|z|fffd||fffd||fffd||fffd||fffd||312|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||143|A|fffd|b|fffd|v|fffd|i|fffd|O|fffd||42a42||fffd|2|fffd||fffd||fffd||20f||fffd||c2bc2||fffd|j
    If count <> 0 Then
        '|fffd|O|fffd||4f442||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|2|fffd||fffd||fffd|o|fffd||fffd||fffd||102||90a9||fffd|H
        If UpTime <> Empty And DateDiff("s", UpTime, Now()) < 120 Then
            DiffTime = DateDiff("s", UpTime, Now())
            For t2 = 1 To 120 - DiffTime
                Application.StatusBar = "AMTU|fffd|X|fffd||fffd||fffd|b|fffd|g|fffd||fffd||fffd||55702||702||fffd| " & t2 & "/" & 120 - DiffTime & "|fffd|b|fffd||48b|@"
                Sleep 1000
            DoEvents
            Next
        End If
        '|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Call OutPutSypnFile(SKUvar, PriceVar, PatternVar, count)
        SKUvar = Empty
        PriceVar = Empty
        PatternVar = Empty
        ReDim SKUvar(ValSize - 1)
        ReDim PriceVar(ValSize - 1)
        ReDim PatternVar(ValSize - 1)
        '|fffd||3ce|Z|fffd|f|fffd|[|fffd|^|fffd|i|fffd|[
        SumChangeCount = SumChangeCount + count + 1
        count = 0
        '|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|[
        UpTime = Now()
    Else
        If ItemPrice <> Empty Then
            count = count + 1
        End If
    End If
    GoTo FBASkip
End If
'|fffd||fffd||fffd||214|z|fffd||fffd||fffd||312|[|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd|z|fffd||fffd|
Dim SypnMod As Long
    SypnMod = (LastIndex - 1) Mod ValSize

'FBA|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|FBA|fffd||74c||242||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd|========================================================
Application.StatusBar = "FBA|fffd||fffd||fffd||309||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd|{"
    LastIndex = FBAReport.Cells(Rows.count, 1).End(xlUp).Row
    SelfFullFill = "FBA"
    For b = 2 To LastIndex
        Application.StatusBar = "FBA|fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||8486||fffd|@" & b - 1 & "/" & LastIndex - 1 & "|fffd|A|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|o|fffd||342||702||fffd| " & (((b - 1) + SypnMod) Mod ValSize) & "/" & ValSize & "|fffd|A|fffd||fffd||fffd|i|fffd||3cd|X|fffd||fffd||fffd||fffd| " & count
        '|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|MWS|fffd||fffd||fffd||64fe|*****************************
        SKU = FBAReport.Cells(b, 1)
        ASIN = FBAReport.Cells(b, 3)
        '|fffd||fffd||fffd|O|fffd||38f||6c2||202||fffd|X|fffd|L|fffd|b|fffd|v
        If Application.WorksheetFunction.CountIf(Sheets("NoCheckList").Columns("A:A"), ASIN) > 0 Then
            GoTo EmptySkip2
        End If
        SypnPriceVar = GetSypnPrice(SKU, ASIN, SelfFullFill, "") '|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
        '**************************************************
        '|fffd||fffd||fffd||282||202||fffd||fffd|i|fffd||314||fffd||fffd||3c2||741|j|fffd||30f||a347||fffd|X|fffd|L|fffd|b|fffd|v|fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd|J|fffd||fffd||30b0||fffd||202||fffd|
        If IsEmpty(SypnPriceVar) = True Then
                        If Sheets("test").Cells(2, 12) = "Debug" Then '*********************
                            Sheets("Debug").Cells(29, 3) = "|fffd||74c||242||202||fffd|"
                        End If
            GoTo EmptySkip2
        End If
        '|fffd||fffd||fffd||fffd||38f||6c2||142||202||fffd||fffd||fffd||383|X|fffd|L|fffd|b|fffd|v
        If SypnPriceVar(4) = 5 Then
            'FBA-|fffd|V|fffd|i
            If Config.Cells(34, 1) = "OFF" Then GoTo EmptySkip2
        Else
            'FBA-|fffd||fffd||fffd||fffd|
            If Config.Cells(14, 1) = "OFF" Then GoTo EmptySkip2
        End If
        '|fffd||fffd||fffd|i|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd|
        If SypnPriceVar(0) = SypnPriceVar(3) Then
            GoTo EmptySkip2
        End If
        '|fffd||3ce|Z|fffd|f|fffd|[|fffd|^|fffd|i|fffd|[
        SumBeforePrice = SumBeforePrice + SypnPriceVar(3)
        SumAfterPrice = SumAfterPrice + SypnPriceVar(0)

        '----------------------------------------------------------
        '|fffd||fffd||fffd|i|fffd||fffd||fffd||830b||fffd||282||fffd|z|fffd||fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        ItemPrice = SypnPriceVar(0) - Int(SypnPriceVar(1))
        SKUvar(count) = SKU
        PriceVar(count) = ItemPrice

EmptySkip2:
        '|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||830f||fffd||fffd||fffd||252|B|fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|[|fffd|h
        If ((((b - 1) + SypnMod) Mod ValSize) = 0 Or b = LastIndex) And count <> 0 Then
            '|fffd|O|fffd||4f442||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|2|fffd||fffd||fffd|o|fffd||fffd||fffd||102||90a9||fffd|H
            If UpTime <> Empty And DateDiff("s", UpTime, Now()) < 120 Then
                DiffTime = DateDiff("s", UpTime, Now())
                For t3 = 1 To 120 - DiffTime
                    Application.StatusBar = "AMTU|fffd|X|fffd||fffd||fffd|b|fffd|g|fffd||fffd||fffd||55702||702||fffd| " & t3 & "/" & 120 - DiffTime & "|fffd|b|fffd||48b|@"
                    Sleep 1000
                DoEvents
                Next
            End If
            '|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
            Call OutPutSypnFile(SKUvar, PriceVar, PatternVar, count)
            SKUvar = Empty
            PriceVar = Empty
            PatternVar = Empty
            ReDim SKUvar(ValSize - 1)
            ReDim PriceVar(ValSize - 1)
            ReDim PatternVar(ValSize - 1)
            '|fffd||3ce|Z|fffd|f|fffd|[|fffd|^|fffd|i|fffd|[
            SumChangeCount = SumChangeCount + count + 1
            count = 0
            '|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|[
            UpTime = Now()
        Else
            If ItemPrice <> Empty Then
                count = count + 1
            End If
        End If

        SypnPriceVar = Empty
        SKU = Empty
        ItemPrice = Empty
        SendPatternName = Empty
        Sleep WaitTime 'MWS|fffd||48b|@|fffd||fffd||fffd||502||342||fffd||fffd||fffd||fffd||154||fffd||fffd|f|fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||60a4||fffd||202||fffd|I|fffd|y|fffd||fffd||fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||255||3cd|X
    DoEvents
    Next
    
FBASkip:
    

'|fffd||3ce|Z|fffd|f|fffd|[|fffd|^|fffd||30f||fffd||fffd||fffd||fffd|o|fffd||fffd|
Dim TOP As Worksheet
    Set TOP = Sheets("TOP")
    '|fffd|O|fffd|X|fffd||fffd|f|fffd|[|fffd|^|fffd||593|]|fffd|L
    TOP.Cells(5, 6) = TOP.Cells(4, 6)
    TOP.Cells(5, 7) = TOP.Cells(4, 7)
    TOP.Cells(5, 8) = TOP.Cells(4, 8)
    TOP.Cells(5, 9) = TOP.Cells(4, 9)
    '|fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
    TOP.Cells(4, 6) = Now()
    TOP.Cells(4, 7) = SumChangeCount
    TOP.Cells(4, 8) = SumAfterPrice - SumBeforePrice
    If SumChangeCount = 0 Then
        TOP.Cells(4, 9) = "0"
    Else
        TOP.Cells(4, 9) = Int((SumAfterPrice - SumBeforePrice) / SumChangeCount)
    End If

'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||30f||fffd||fffd||fffd||fffd||fffd|
    Set SypnReport = Nothing
    Set FBAReport = Nothing
    Set SypnFile = Nothing
    Set Config = Nothing
    Set Env = Nothing
End Sub


Attribute VB_Name = "Module15"
Function WriteSypnFile(SKU As Variant, SypnPrice As Variant, SendPattern As Variant, count As Long)

Dim SypnFile As Worksheet
    Set SypnFile = Sheets("SypnFile")
    
Dim LastIndex As Long
    LastIndex = SypnFile.Cells(Rows.count, 1).End(xlUp).Row
    If LastIndex > 3 Then
        SypnFile.Rows("4:" & LastIndex).ClearContents
    End If
    
    For i = 0 To count
        Application.StatusBar = i & "/" & count
        SypnFile.Cells(i + 4, 1) = SKU(i)
        SypnFile.Cells(i + 4, 6) = SypnPrice(i)
        SypnFile.Cells(i + 4, 5) = SendPattern(i)
    
    DoEvents
    Next
End Function

Function OutPutSypnFile(SKU As Variant, SypnPrice As Variant, SendPattern As Variant, count As Long)
'==============================================
Dim OutPutPass As String
    OutPutPass = ActiveWorkbook.Path & "\uploadedfiles"
Dim SypnFileName As String
    SypnFileName = "price-" & Format(Now(), "YYYYMMDD-hhmmss")
Dim datFile As String
    datFile = OutPutPass & "\" & SypnFileName & ".txt"
 
Open datFile For Output As #1
 
Dim i As Long
i = 1
'|fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|
    Application.StatusBar = "|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30c||fffd||fffd|o|fffd||fffd||fffd|s1|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd|"
    Print #1, "TemplateType=InventoryLoader" & vbTab _
            & "Version=2016.0609" & vbTab _
            & "|fffd||fffd||fffd||30d|s|fffd||fffd|Amazon|fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||702||fffd||fffd||302||155||3cd|X|fffd||fffd||d3dc||fffd||fffd||fffd||202||fffd||fffd||142||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
            
    Application.StatusBar = "|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30c||fffd||fffd|o|fffd||fffd||fffd|s2|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd|"
    Print #1, "|fffd||fffd||fffd|i|fffd||1d7||fffd||fffd||50d||fffd|" & vbTab _
            & " |fffd|z|fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd|" & vbTab _
            & "|fffd||314||fffd||fffd||fffd||fffd|i"
            
    Application.StatusBar = "|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30c||fffd||fffd|o|fffd||fffd||fffd|s2|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd|"
    Print #1, "sku" & vbTab _
            & " merchant_shipping_group_name" & vbTab _
            & "price"

For i = 0 To count
    Application.StatusBar = "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd|@" & i & "/" & LastIndex
    Print #1, SKU(i) & vbTab _
            & SendPattern(i) & vbTab _
            & SypnPrice(i)
DoEvents
Next

 
Close #1
 
Application.StatusBar = SypnFileName & ".txt|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||702||fffd||fffd||fffd|"

'Amazon|fffd||243|A|fffd|b|fffd|v|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd|
Call TsvSend(SypnFileName)

'==============================================

End Function
Attribute VB_Name = "Module16"
Private Declare Sub Sleep Lib "kernel32" (ByVal dwMs As Long)
Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||80cb||fffd|[|fffd|v()

'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
Dim TOP As Worksheet
    Set TOP = Sheets("TOP")
Dim Config As Worksheet
    Set Config = Sheets("Config")
Dim Env As Worksheet
    Set Env = Sheets("Env")
    
'|fffd||fffd||fffd||fffd||702||142||311||48b|@|fffd||fffd||fffd||fffd|
Dim StandbyCount As Long
    StandbyCount = Env.Cells(27, 2) * 60 '|fffd|b|fffd||255||3ca||fffd|
    
Dim RepoTime1Start As Date
    RepoTime1Start = Env.Cells(17, 2)
Dim RepoTime1Fin As Date
    RepoTime1Fin = Env.Cells(17, 4)
Dim RepoTime2Start As Date
    RepoTime2Start = Env.Cells(18, 2)
Dim RepoTime2Fin As Date
    RepoTime2Fin = Env.Cells(18, 4)
Dim FirstJudge As Long
    FirstJudge = 0

Dim ReportRequestId() As Variant
    ReDim ReportRequestId(3)
    
Dim ReportRequestId1 As String
Dim ReportRequestId2 As String
Dim ReportRequestId3 As String
    

Dim StartTime As Date
Dim FinTime As Date
Dim RemaindedTime As Long

    Do '|fffd|J|fffd||fffd||502||fffd|/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        '|fffd||fffd||28d|X|fffd|V----------------------
        Application.ScreenUpdating = False
        '------------------------------
        '|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||fffd|===========================
        Application.Run "IE|fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd|[|fffd|v|fffd||fffd||fffd||303||fffd||fffd|[|fffd|U|fffd|[|fffd|F|fffd||fffd|"
        '===================================
        '|fffd||fffd||fffd||fffd||343||fffd||fffd|||fffd|[|fffd|g|fffd||303||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||fffd|n|fffd||7c2||fffd|
        If FirstJudge = 0 Then
            GoTo FirstReport
        End If
        '|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||38f||6ce||fffd||fffd||513||fffd||fffd||202||70cc||fffd|||fffd|[|fffd|g|fffd||303||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||250|i|fffd||fffd|
        If (Sheets("TOP").Range("F8") = "") Or ((Time >= TimeValue(RepoTime1Start) And Time <= TimeValue(RepoTime1Fin)) Or (Time >= TimeValue(RepoTime2Start) And Time <= TimeValue(RepoTime2Fin))) Then
FirstReport:
            StartTime = Now()
            ReportRequestId = AllReportFromRequestToGet(ReportRequestId1, ReportRequestId2, ReportRequestId3)
            ReportRequestId1 = ReportRequestId(0)
            ReportRequestId2 = ReportRequestId(1)
            ReportRequestId3 = ReportRequestId(2)
            RemaindedTime = DateDiff("s", StartTime, Now)
        Else
            RemaindedTime = 0
        End If
        
        If FirstJudge = 1 And RemaindedTime < StandbyCount Then
            '|fffd||fffd||fffd||fffd||702||142||311||48b|@======================
            For k = 1 + RemaindedTime To StandbyCount
            Application.StatusBar = "|fffd||fffd||fffd||49fca|i|fffd|`|fffd|F|fffd|b|fffd|N|fffd||702||151||48b|@|fffd|@" & k & "/" & StandbyCount & "|fffd|b"
                '|fffd||fffd|~|fffd||fffd||fffd||342||fffd||fffd||fffd||fffd||fffd||38f|I|fffd||fffd||fffd||fffd||fffd||fffd|
                If TOP.Cells(25, 1) = "|fffd||fffd|~" Then
                    TOP.Cells(25, 1) = "|fffd||493||fffd|"
                    Application.ScreenUpdating = True
                    MsgBox "|fffd||fffd||fffd|i|fffd||fffd||fffd||80cb||fffd|[|fffd|v|fffd||fffd||fffd|~|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
                    End
                End If
                DoEvents
                Sleep 1000
                FirstJudge = 1
            Next
            '====================================
        End If
        FirstJudge = 1
        '===================================
        Application.Run "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||24d|X|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||38e||fffd||835e||fffd||fffd|"
        Application.DisplayAlerts = True
        Application.ScreenUpdating = False
        '====================================
        Application.Run "|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd|"
        Application.DisplayAlerts = True
        Application.ScreenUpdating = False
        '====================================
        If Env.Cells(29, 2) = "ON" Then
            Application.StatusBar = "|fffd|s|fffd|v|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd|"
            Application.Run "|fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||315|s|fffd|v|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||d3dc|"
        End If
        '====================================
        '|fffd||33d1||fffd||fffd||fffd||6d1||fffd|--------------------
        Application.DisplayAlerts = False
        Sleep 100
        'ActiveWorkbook.Save
        Application.DisplayAlerts = True
        Sleep 100
        '------------------------------

    DoEvents
    Loop '///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
End Sub

Attribute VB_Name = "Module17"
Private Declare Sub Sleep Lib "kernel32" (ByVal dwMs As Long)
Sub |fffd||113|x|fffd||fffd||fffd||fffd|SKU|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N()
Application.StatusBar = "|fffd||fffd||fffd|i|fffd||fffd||fffd||830b||fffd||282||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd|"
Dim Deb As Worksheet
    Set Deb = Sheets("Debug")
Dim SKU As String
    SKU = Deb.Cells(1, 2)
Dim ASIN As String
    ASIN = Deb.Cells(2, 2)
Dim SelfSend As String
    SelfSend = Deb.Cells(5, 2)
Dim TargetSheet As Worksheet

    Deb.Cells(1, 2) = SKU
    Deb.Cells(2, 2) = ASIN
    Deb.Cells(5, 2) = SelfSend
    Application.Run "|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|1|fffd||42f82||fffd||fffd|e|fffd|X|fffd|g"
    'ActiveSheet.Hyperlinks.Add Anchor:=Deb.Range("F29"), Address:="https://www.amazon.co.jp/gp/offer-listing/" & ASIN & "/ref=olp_f_used?&f_new=true&f_usedAcceptable=true&f_usedGood=true&f_used=true&f_usedLikeNew=true&f_usedVeryGood=true" _
    , TextToDisplay:=ASIN & "|fffd||30f|o|fffd|i|fffd||a5d7||fffd||fffd|"
    
    '|fffd||74c||242||202||fffd||fffd||202||fffd|X|fffd|L|fffd|b|fffd|v
    If Deb.Cells(29, 3) = "|fffd||74c||242||202||fffd|" Then
        Exit Sub
    End If
    
    Deb.Cells(1, 2) = SKU
    Deb.Cells(2, 2) = ASIN
    Deb.Cells(5, 2) = SelfSend
    
    
    '|fffd||fffd||fffd||fffd||fffd|z|fffd|v|fffd|Z
    Dim ItemPrice As Long
    Dim SendPrice As Long
    If Deb.Cells(29, 3) = "|fffd||fffd||fffd|i|fffd||3cd|X|fffd||202||fffd|" Then
        ItemPrice = Deb.Cells(8, 2)
        SendPrice = Deb.Cells(9, 2)
    Else
        If SelfSend = "FBA" Then
            ItemPrice = Deb.Cells(29, 3)
            SendPrice = Deb.Cells(9, 2)
        Else
            ItemPrice = Deb.Cells(30, 3)
            SendPrice = Deb.Cells(31, 3)
        End If
    End If
    
    Deb.Cells(33, 3) = GetDepsit(ASIN, SelfSend, ItemPrice, SendPrice)

    '|fffd|e|fffd||fffd||fffd|v|fffd|Z
    Dim Cost As Long
        If SelfSend = "FBA" Then
            Cost = Sheets("Config").Range("I192")
        Else
            Cost = Sheets("Config").Range("I189")
        End If
        Deb.Cells(34, 3) = Deb.Cells(33, 3) - Deb.Cells(3, 2) - Cost
    '|fffd||3cd|X|fffd||fffd||fffd|z|fffd||fffd||fffd|v|fffd|Z
    Deb.Cells(29, 1) = ItemPrice + SendPrice - Deb.Cells(7, 2)
    Application.StatusBar = ""
End Sub
Sub |fffd||fffd||fffd||fffd|SKU|fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N()
Application.StatusBar = "|fffd||fffd||fffd|i|fffd||fffd||fffd||830b||fffd||282||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd|"
Dim Deb As Worksheet
    Set Deb = Sheets("Debug")
Dim SKU As String
    SKU = Deb.Cells(1, 2)
Dim ASIN As String
Dim SelfSend As String
    SelfSend = Deb.Cells(16, 5)
Dim TargetSheet As Worksheet
Dim RowNum As Long
    If SelfSend = "FBA" Then
        Set TargetSheet = Sheets("FBAReport")
        RowNum = TargetSheet.Columns("A:A").Find(SKU).Row
        SKU = TargetSheet.Cells(RowNum + 1, 1)
        ASIN = TargetSheet.Cells(RowNum + 1, 3)
        If SKU = Empty Then
            RowNum = 2
            SKU = TargetSheet.Cells(RowNum, 1)
            ASIN = TargetSheet.Cells(RowNum, 3)
        End If
    Else
        Set TargetSheet = Sheets("SypnReport")
        RowNum = TargetSheet.Columns("A:A").Find(SKU).Row
        SKU = TargetSheet.Cells(RowNum + 1, 1)
        ASIN = TargetSheet.Cells(RowNum + 1, 2)
        If SKU = Empty Then
            RowNum = 2
            SKU = TargetSheet.Cells(RowNum, 1)
            ASIN = TargetSheet.Cells(RowNum, 2)
        End If
    End If
    Deb.Cells(1, 2) = SKU
    Deb.Cells(2, 2) = ASIN
    Deb.Cells(5, 2) = SelfSend
    Application.Run "|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|1|fffd||42f82||fffd||fffd|e|fffd|X|fffd|g"
    'ActiveSheet.Hyperlinks.Add Anchor:=Deb.Range("F29"), Address:="https://www.amazon.co.jp/gp/offer-listing/" & ASIN & "/ref=olp_f_used?&f_new=true&f_usedAcceptable=true&f_usedGood=true&f_used=true&f_usedLikeNew=true&f_usedVeryGood=true" _
    , TextToDisplay:=ASIN & "|fffd||30f|o|fffd|i|fffd||a5d7||fffd||fffd|"
    
    '|fffd||74c||242||202||fffd||fffd||202||fffd|X|fffd|L|fffd|b|fffd|v
    If Deb.Cells(29, 3) = "|fffd||74c||242||202||fffd|" Then
        Exit Sub
    End If
    
    Deb.Cells(1, 2) = SKU
    Deb.Cells(2, 2) = ASIN
    Deb.Cells(5, 2) = SelfSend
    '|fffd||fffd||fffd||fffd||fffd|z|fffd|v|fffd|Z
    Dim ItemPrice As Long
    Dim SendPrice As Long
    If Deb.Cells(29, 3) = "|fffd||fffd||fffd|i|fffd||3cd|X|fffd||202||fffd|" Then
        ItemPrice = Deb.Cells(8, 2)
        SendPrice = Deb.Cells(9, 2)
    Else
        If SelfSend = "FBA" Then
            ItemPrice = Deb.Cells(29, 3)
            SendPrice = Deb.Cells(9, 2)
        Else
            ItemPrice = Deb.Cells(30, 3)
            SendPrice = Deb.Cells(31, 3)
        End If
    End If
    
    Deb.Cells(33, 3) = GetDepsit(ASIN, SelfSend, ItemPrice, SendPrice)

    '|fffd|e|fffd||fffd||fffd|v|fffd|Z
    Dim Cost As Long
        If SelfSend = "FBA" Then
            Cost = Sheets("Config").Range("I192")
        Else
            Cost = Sheets("Config").Range("I189")
        End If
        Deb.Cells(34, 3) = Deb.Cells(33, 3) - Deb.Cells(3, 2) - Cost
    '|fffd||3cd|X|fffd||fffd||fffd|z|fffd||fffd||fffd|v|fffd|Z
    Deb.Cells(29, 1) = ItemPrice + SendPrice - Deb.Cells(7, 2)
    Application.StatusBar = ""
End Sub

Sub |fffd|w|fffd||fffd|SKU|fffd||149||fffd||fffd|i|fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N()
Application.StatusBar = "|fffd||fffd||fffd|i|fffd||fffd||fffd||830b||fffd||282||fffd||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd|"
Dim Deb As Worksheet
    Set Deb = Sheets("Debug")
Dim SKU As String
    SKU = Deb.Cells(18, 5)
Dim ASIN As String
Dim SelfSend As String
    SelfSend = Deb.Cells(16, 5)
Dim TargetSheet As Worksheet
    If SelfSend = "FBA" Then
        Set TargetSheet = Sheets("FBAReport")
        ASIN = Application.WorksheetFunction.VLookup(SKU, TargetSheet.Columns("A:C"), 3, False)
    Else
        Set TargetSheet = Sheets("SypnReport")
        ASIN = Application.WorksheetFunction.VLookup(SKU, TargetSheet.Columns("A:B"), 2, False)
    End If
    
    Deb.Cells(1, 2) = SKU
    Deb.Cells(2, 2) = ASIN
    Deb.Cells(5, 2) = SelfSend

    Application.Run "|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|1|fffd||42f82||fffd||fffd|e|fffd|X|fffd|g"
    'ActiveSheet.Hyperlinks.Add Anchor:=Deb.Range("F29"), Address:="https://www.amazon.co.jp/gp/offer-listing/" & ASIN & " /ref=olp_f_used?f_new=true&f_usedAcceptable=true&f_usedGood=true&f_used=true&f_usedLikeNew=true&f_usedVeryGood=true" _
    , TextToDisplay:=ASIN & "|fffd||30f|o|fffd|i|fffd||a5d7||fffd||fffd|"
    
    
    '|fffd||74c||242||202||fffd||fffd||202||fffd|X|fffd|L|fffd|b|fffd|v
    If Deb.Cells(29, 3) = "|fffd||74c||242||202||fffd|" Then
        Exit Sub
    End If
    
    Deb.Cells(1, 2) = SKU
    Deb.Cells(2, 2) = ASIN
    Deb.Cells(5, 2) = SelfSend
    '|fffd||fffd||fffd||fffd||fffd|z|fffd|v|fffd|Z
    Dim ItemPrice As Long
    Dim SendPrice As Long
    If Deb.Cells(29, 3) = "|fffd||fffd||fffd|i|fffd||3cd|X|fffd||202||fffd|" Then
        ItemPrice = Deb.Cells(8, 2)
        SendPrice = Deb.Cells(9, 2)
    Else
        If SelfSend = "FBA" Then
            ItemPrice = Deb.Cells(29, 3)
            SendPrice = Deb.Cells(9, 2)
        Else
            ItemPrice = Deb.Cells(30, 3)
            SendPrice = Deb.Cells(31, 3)
        End If
    End If
    
    Deb.Cells(33, 3) = GetDepsit(ASIN, SelfSend, ItemPrice, SendPrice)

    '|fffd|e|fffd||fffd||fffd|v|fffd|Z
    Dim Cost As Long
        If SelfSend = "FBA" Then
            Cost = Sheets("Config").Range("I192")
        Else
            Cost = Sheets("Config").Range("I189")
        End If
        Deb.Cells(34, 3) = Deb.Cells(33, 3) - Deb.Cells(3, 2) - Cost
    
    '|fffd||3cd|X|fffd||fffd||fffd|z|fffd||fffd||fffd|v|fffd|Z
    Deb.Cells(29, 1) = ItemPrice + SendPrice - Deb.Cells(7, 2)
    Application.StatusBar = ""
End Sub

Sub |fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd|1|fffd||42f82||fffd||fffd|e|fffd|X|fffd|g()

'|fffd||38f||6c3|V|fffd|[|fffd|g|fffd||312||fffd|`
Dim SypnReport As Worksheet
    Set SypnReport = Sheets("SypnReport")
Dim FBAReport As Worksheet
    Set FBAReport = Sheets("FBAReport")
Dim Env As Worksheet
    Set Env = Sheets("Env")
Dim Config As Worksheet
    Set Config = Sheets("Config")
Dim Deb As Worksheet
    Set Deb = Sheets("Debug")
'|fffd||3d0||fffd||fffd||312||fffd|`
Dim SKU As String
Dim ASIN As String
Dim SelfFullFill As String

Dim WaitTime As Long
    WaitTime = Env.Cells(20, 2)

Dim SKUvar As Variant
Dim PriceVar As Variant
Dim PatternVar As Variant
'|fffd|z|fffd||fffd||311||50ab||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|

Dim count As Long
    count = 0
Dim SypnPriceVar As Variant '0|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||fffd||749||fffd||fffd|i|fffd|A1|fffd|F|fffd||fffd||fffd||fffd||fffd|A2|fffd|F|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd|A3|fffd|F|fffd||3cd|X|fffd|O|fffd||fffd||fffd|i|fffd|A4|fffd|F|fffd||fffd||fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd|

'|fffd|o|fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||73a9||fffd||214|z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd|=======================================================

    
        '|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|MWS|fffd||fffd||fffd||64fe|*****************************
        SKU = Deb.Cells(1, 2)
        ASIN = Deb.Cells(2, 2)
        SelfFullFill = Deb.Cells(5, 2)
        '**************************************************
        
    
Dim SendVar As Variant '0:|fffd|o|fffd|i|fffd||fffd||fffd|i|fffd|A1|fffd|F|fffd|z|fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd|
Dim TotalPrice As Long
Dim SendPrice As Long

Dim ItemPrice As Long
Dim ShippingPrice As Long
Dim SendPatternName As String

'|fffd||fffd||fffd||3cd|X|fffd|f|fffd|[|fffd|^|fffd||308||5c2||315||3d0||fffd|
Dim SumBeforePrice As Long
Dim SumAfterPrice As Long
Dim SumCangeCount As Long

'|fffd||fffd||fffd||357||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Deb.Range("B2:B9").ClearContents
    Deb.Range("B11:B12").ClearContents
    Deb.Range("B14:C28").ClearContents
    Deb.Range("F1:Y8").ClearContents
    Deb.Cells(29, 3) = ""
    Deb.Cells(30, 3) = ""
    Deb.Cells(31, 3) = ""
    Deb.Cells(32, 3) = ""
    Deb.Cells(29, 1) = ""
    Deb.Cells(33, 3) = ""
    Deb.Cells(34, 3) = ""
If SelfFullFill = "FBA" Then
    GoTo SelfSendSkip
End If
   

        '|fffd||fffd||fffd|O|fffd||38f||6c2||202||fffd|X|fffd|L|fffd|b|fffd|v
        If Application.WorksheetFunction.CountIf(Sheets("NoCheckList").Columns("A:A"), ASIN) > 0 Then
            Sheets("Debug").Cells(29, 3) = "|fffd||fffd||fffd|i|fffd||fffd||fffd||83dc||fffd|OASIN"
            Exit Sub
        End If
        SypnPriceVar = GetSypnPrice(SKU, ASIN, SelfFullFill, "|fffd|e|fffd|X|fffd|g") '|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
        '**************************************************
        '|fffd||fffd||fffd||282||202||fffd||fffd|i|fffd||314||fffd||fffd||3c2||741|j|fffd||30f||a347||fffd|X|fffd|L|fffd|b|fffd|v|fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd|J|fffd||fffd||30b0||fffd||202||fffd|
        If IsEmpty(SypnPriceVar) = True Then
            'If Sheets("test").Cells(2, 12) = "Debug" Then '*********************
                Sheets("Debug").Cells(29, 3) = "|fffd||74c||242||202||fffd|"
            'End If
            Exit Sub
        End If
        
        '|fffd||fffd||fffd||fffd||38f||6c2||142||202||fffd||fffd||fffd||383|X|fffd|L|fffd|b|fffd|v
        If SypnPriceVar(4) = 5 Then
            '|fffd||fffd||fffd||214|z|fffd||fffd|-|fffd|V|fffd|i
            If Config.Cells(24, 1) = "OFF" Then
                Sheets("Debug").Cells(29, 3) = "|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||38f||6ca|O"
                Exit Sub
            End If
        Else
            '|fffd||fffd||fffd||214|z|fffd||fffd|-|fffd||fffd||fffd||fffd|
            If Config.Cells(5, 1) = "OFF" Then
                Sheets("Debug").Cells(29, 3) = "|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||38f||6ca|O"
                Exit Sub
            End If
        End If
        '|fffd||fffd||fffd|i|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd|
        If SypnPriceVar(0) = SypnPriceVar(3) Then
            Sheets("Debug").Cells(29, 3) = "|fffd||fffd||fffd|i|fffd||3cd|X|fffd||202||fffd|"
            Exit Sub
        End If
        
        '|fffd||3ce|Z|fffd|f|fffd|[|fffd|^|fffd|i|fffd|[
        'SumBeforePrice = SypnPriceVar(3)
        'SumAfterPrice = SypnPriceVar(0)
        '-------------------------------------------------
        '|fffd|z|fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||3cd|X|fffd|K|fffd|p|fffd||fffd||fffd||90a9||fffd|H---------------------
        If Env.Cells(42, 2) = "ON" Then
            If Application.WorksheetFunction.CountIf(Env.Range("D43:D" & 42 + TargetCateNum), SypnPriceVar(2)) > 0 Then
                '|fffd|z|fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||fffd||a347|
                TotalPrice = SypnPriceVar(0)
                SendPrice = SypnPriceVar(1)
                SendVar = GetSendPattern(TotalPrice, SendPrice) '|fffd|z|fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
                ItemPrice = SendVar(0)
                SendPatternName = SendVar(1)
                
                '|fffd|m|fffd|F|fffd|p
                Deb.Cells(29, 3) = TotalPrice
                Deb.Cells(30, 3) = ItemPrice
                Deb.Cells(31, 3) = Application.WorksheetFunction.VLookup(SendPatternName, Env.Range("A44:B52"), 2, False)
                Deb.Cells(32, 3) = SendPatternName
                Exit Sub
            Else
                GoTo NoPatternCange
            End If
        Else
NoPatternCange:
        '|fffd|z|fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||202||fffd||fffd||a347|---------------------
            ItemPrice = SypnPriceVar(0) - Int(SypnPriceVar(1))
            If ItemPrice <= 0 Then
                ItemPrice = 1
            End If
            SendPatternName = Empty
                '|fffd|m|fffd|F|fffd|p
                Deb.Cells(29, 3) = ItemPrice + SypnPriceVar(1)
                Deb.Cells(30, 3) = ItemPrice
                Deb.Cells(31, 3) = SypnPriceVar(1)
                Deb.Cells(32, 3) = "|fffd|z|fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd||3cd|X|fffd||202||fffd|"
                Deb.Cells(29, 1) = ItemPrice + SypnPriceVar(1) - SypnPriceVar(3)
                Exit Sub
        End If '-------------------------------------------------
    
SelfSendSkip:

'FBA|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|FBA|fffd||74c||242||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd|========================================================

        '|fffd||fffd||fffd|O|fffd||38f||6c2||202||fffd|X|fffd|L|fffd|b|fffd|v
        If Application.WorksheetFunction.CountIf(Sheets("NoCheckList").Columns("A:A"), ASIN) > 0 Then
            Sheets("Debug").Cells(29, 3) = "|fffd||fffd||fffd|i|fffd||fffd||fffd||83dc||fffd|OASIN"
            Exit Sub
        End If
        SypnPriceVar = GetSypnPrice(SKU, ASIN, SelfFullFill, "|fffd|e|fffd|X|fffd|g") '|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
        '**************************************************
        '|fffd||fffd||fffd||282||202||fffd||fffd|i|fffd||314||fffd||fffd||3c2||741|j|fffd||30f||a347||fffd|X|fffd|L|fffd|b|fffd|v|fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g|fffd||fffd||fffd|J|fffd||fffd||30b0||fffd||202||fffd|
        If IsEmpty(SypnPriceVar) = True Then
            Sheets("Debug").Cells(29, 3) = "|fffd||74c||242||202||fffd|"
            Exit Sub
        End If
        '|fffd||fffd||fffd||fffd||38f||6c2||142||202||fffd||fffd||fffd||383|X|fffd|L|fffd|b|fffd|v
        If SypnPriceVar(4) = 5 Then
            'FBA-|fffd|V|fffd|i
            If Config.Cells(34, 1) = "OFF" Then
                Sheets("Debug").Cells(29, 3) = "|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||38f||6ca|O"
                Exit Sub
            End If
        Else
            'FBA-|fffd||fffd||fffd||fffd|
            If Config.Cells(14, 1) = "OFF" Then
                Sheets("Debug").Cells(29, 3) = "|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||38f||6ca|O"
                Exit Sub
            End If
        End If
        '|fffd||fffd||fffd|i|fffd||3cd|X|fffd||fffd||fffd||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd|
        If SypnPriceVar(0) = SypnPriceVar(3) Then
            Sheets("Debug").Cells(29, 3) = "|fffd||fffd||fffd|i|fffd||3cd|X|fffd||202||fffd|"
            Exit Sub
        End If

        '----------------------------------------------------------
        '|fffd||fffd||fffd|i|fffd||fffd||fffd||830b||fffd||282||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Sheets("Debug").Cells(29, 3) = SypnPriceVar(0)

End Sub

Function GetDepsit(ASIN As String, SelfFullFill As String, ItemPrice As Long, SendPrice As Long) As Long

Dim Config As Worksheet
    Set Config = Sheets("Config")
Dim test As Worksheet
    Set test = Sheets("test")

Dim SendCost As Long
Dim FullFillment As String
    Select Case SelfFullFill
        Case "FBA"
            FullFillment = "true"
        Case "|fffd||fffd||fffd||214|z|fffd||fffd|"
            FullFillment = "false"
    End Select

'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim xmldata As Object
Dim Result As Object
Dim tmpPrice As Double
Dim tmpObj As Object
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

Dim MWSsKey As String
    MWSsKey = Worksheets("Test").Range("B2")
Dim sKey As String
    sKey = Worksheets("Debug2").Range("B4")
Dim AWSkey As String
    AWSkey = Worksheets("Debug2").Range("B3")

Dim sellerID As String
    sellerID = Sheets("Test").Range("B4")

    
Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"
    
Dim SelfExclude As String
    SelfExclude = "False"

Dim ItemCondition As String
    ItemCondition = "All"

Dim Action As String
    Action = "GetMyFeesEstimate"

Dim APIVersion As String
    APIVersion = "2011-10-01"
    
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Long, j As Long, k As Long

'-------------------------------------------------------
'|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd|A|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|E|fffd|C|fffd||fffd||fffd|h|fffd|E|fffd||315|W|fffd||fffd||fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|Amazon2excel|fffd||fffd||149|E|fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||101|A
'|fffd|@|fffd||6cc||fffd|^|fffd|u|fffd|`|fffd|v|fffd||fffd||fffd|W|fffd|F|fffd|N|fffd|g|fffd|\|fffd||fffd||fffd|p|fffd||303|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||fffd||342||fffd||fffd||90b1||fffd||181|B
'|fffd|@|fffd|p|fffd|X|fffd||fffd||fffd|[|fffd|h|fffd||315||fffd||fffd||fffd||fffd||312||fffd||fffd||fffd||fffd||fffd|13|fffd|P|fffd|^|fffd||20f||fffd|`|fffd||fffd||fffd||fffd||fffd||fffd||392||fffd||fffd||fffd||fffd||642||1c2||60a2||fffd|`|fffd||242||fffd||fffd||90b1||fffd||181|B
ChDrive ActiveWorkbook.Path
ChDir ActiveWorkbook.Path
'--------------------------------------
'

'|fffd||fffd||fffd||fffd||fffd||fffd|t|fffd||fffd||fffd||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe|================================================================================================================
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") >= 9 Then
    timestamp = Format(Now(), "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Now() - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If


'------------------------------------

'|fffd||fffd||fffd||fffd||fffd||303|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd|E|fffd|T|fffd|u|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd||fffd|E|fffd||fffd||fffd|i|fffd||64fe||fffd||302||fffd||fffd||7c2||fffd|MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd|iGetMyPriceForSKU|fffd|A10/sec)***********************

    Dim xmldata3 As Object
    Dim Result3 As Object
    
    rawText = ""
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
        rawText = rawText _
                & "AWSAccessKeyId=" & AWSkey _
                & "&Action=" & Action _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.IdType=ASIN" _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.IdValue=" & ASIN _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.Identifier=request1" _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.IsAmazonFulfilled=" & FullFillment _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.MarketplaceId=" & MarketPlaceID _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.PriceToEstimateFees.ListingPrice.Amount=" & ItemPrice _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.PriceToEstimateFees.ListingPrice.CurrencyCode=JPY" _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.PriceToEstimateFees.Points.PointsMonetaryValue.Amount=0" _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.PriceToEstimateFees.Points.PointsMonetaryValue.CurrencyCode=JPY" _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.PriceToEstimateFees.Points.PointsNumber=0" _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.PriceToEstimateFees.Shipping.Amount=" & SendPrice _
                & "&FeesEstimateRequestList.FeesEstimateRequest.1.PriceToEstimateFees.Shipping.CurrencyCode=JPY" _
                & "&MWSAuthToken=" & MWSsKey _
                & "&SellerId=" & sellerID _
                & "&SignatureMethod=HmacSHA256" _
                & "&SignatureVersion=2" _
                & "&Timestamp=" & timestamp _
                & "&Version=" & APIVersion
       
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/Products/2011-10-01" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
'|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------

        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        Url = "https://" & ecsaddress & "/Products/2011-10-01?" & rawText & "&Signature=" & sign
    
'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
    Set xmldata3 = CreateObject("Microsoft.XMLDOM")
    xmldata3.async = False
    xmldata3.Load Url
'XML|fffd|f|fffd|[|fffd|^|fffd||30e||fffd||fffd|o|fffd||fffd|-------------------------------------
    Set Result3 = xmldata3.SelectNodes("GetMyFeesEstimateResponse/GetMyFeesEstimateResult/FeesEstimateResultList/FeesEstimateResult/FeesEstimate/FeeDetailList/FeeDetail")
'Dim AbsolutedFee As Long
'Dim BuyPrice As Long
'Dim FeeRatio As Long
'Dim ProfitRatio As Long
'Dim ProfitPlus As Long
        AbsolutedFee = Empty
    If Not Result3 Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
            If Not Result3(0) Is Nothing Then
                FeeRatio = Result3(0).SelectSingleNode("FinalFee/Amount").Text
                'FeeRatio = Application.WorksheetFunction.RoundUp((FeeRatio / SypnPrice * 100), 0)
                AbsolutedFee = Result3(1).SelectSingleNode("FinalFee/Amount").Text * 1.08
                If FullFillment = "true" Then
                    AbsolutedFee = AbsolutedFee + Result3(3).SelectSingleNode("FinalFee/Amount").Text * 1.08
                End If
                '|fffd||fffd||fffd||214|z|fffd||fffd||fffd||30f||a347||fffd||fffd||fffd||fffd||fffd||317||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|K|fffd|v
            Else
                Exit Function
            End If
    Else
        Exit Function
    End If

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||30c|v|fffd|Z
    GetDepsit = ItemPrice + SendPrice - Int(AbsolutedFee) - Int(FeeRatio)

End Function
Attribute VB_Name = "Module18"

'// |fffd|w|fffd||fffd|URL|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h
Private Declare Function URLDownloadToFile _
    Lib "urlmon" Alias "URLDownloadToFileA" _
    (ByVal pCaller As Long, _
    ByVal szURL As String, _
    ByVal szFileName As String, _
    ByVal dwReserved As Long, _
    ByVal lpfnCB As Long) As Long
 
'// |fffd|L|fffd||fffd||fffd|b|fffd|V|fffd||fffd||fffd|N|fffd||fffd||fffd|A
Private Declare Function DeleteUrlCacheEntry _
    Lib "wininet" Alias "DeleteUrlCacheEntryA" _
    (ByVal lpszUrlName As String) As Long
 
'// |fffd|X|fffd||fffd||fffd|[|fffd|v
Private Declare Sub Sleep _
    Lib "kernel32" (ByVal dwMilliseconds As Long)


Option Explicit
Const FileNameSheet = "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|"
Const FileNameCell = "A1"
Const HashStoreSheet = "|fffd|T|fffd||fffd||fffd|l"
Const HashStoreColumn = "B"

Dim Crc32Table&(255)


Function TsvSend(strFileName As String)
'|fffd|N|fffd||fffd||fffd|X|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|MD5|fffd||fffd||fffd|K|fffd|{|fffd|B|fffd|@|fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|u|fffd|b|fffd|N|fffd||248||682||fffd||fffd||a347||fffd||34e|Q|fffd||190||752||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd|B
'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'******************************
Dim MWSsKey As String
    MWSsKey = Worksheets("Test").Range("B2")
Dim sKey As String
    sKey = Worksheets("Debug2").Range("B4")
Dim AWSkey As String
    AWSkey = Worksheets("Debug2").Range("B3")

Dim sellerID As String
    sellerID = Sheets("Test").Range("B4")
    
'******************************
    
Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"

Dim APIVersion As String
    APIVersion = "2011-10-01"
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Integer, j As Integer, k As Integer

'********************************************************************************************************



'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") >= 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If


'************************
'|fffd||fffd||fffd|M|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|MD5|fffd||64fe|

    ChDrive ActiveWorkbook.Path
    ChDir ActiveWorkbook.Path

    
Dim objMD5 As New MD5 'Class|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|MD5|fffd|Q|fffd||fffd|
    objMD5.FilePath = ActiveWorkbook.Path & "\uploadedfiles\" & strFileName & ".txt" 'Class|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|MD5|fffd|Q|fffd||fffd|
Dim myMD5 As String
    myMD5 = objMD5.FileHash  'Class|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|MD5|fffd|Q|fffd||fffd|

'Base64|fffd||583|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|iMD5|fffd|w|fffd|b|fffd|_|fffd||30f||a347||fffd||fffd|URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|s|fffd|v|fffd|j
Dim myMD5_base64 As String
    myMD5_base64 = HexToBase64(myMD5)
    'myMD5_base64 = URLencode(myMD5_base64)|fffd|w|fffd|b|fffd|_|fffd||242||343|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|s|fffd|v
        
'************************
'|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd|j|fffd||c42c|
                
    rawText = ""
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
    rawText = rawText _
  & "AWSAccessKeyId=" & AWSkey _
  & "&Action=SubmitFeed" _
  & "&FeedType=_POST_FLAT_FILE_LISTINGS_DATA_" _
  & "&MWSAuthToken=" & MWSsKey _
  & "&MarketplaceIdList.Id.1=A1VC38T7YXB528" _
  & "&SellerId=" & sellerID _
  & "&SignatureMethod=HmacSHA256" _
  & "&SignatureVersion=2" _
  & "&Timestamp=" & timestamp _
  & "&Version=2009-01-01" _

  '|fffd||202||fffd||fffd||102||fffd||fffd||fffd||fffd|C|fffd||203|N|fffd|G|fffd||fffd|
  '& "&ContentMD5Value=" & myMD5_base64 _
  '  & "&PurgeAndReplace=false" _

        '|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------
        '|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||103|V|fffd|[|fffd|N|fffd||fffd||fffd|b|fffd|g|fffd|L|fffd|[|fffd||143|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd|
        rawTextToSign = "POST" & vbLf & ecsaddress & vbLf & "/" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gURL|fffd||fffd||fffd||fffd|
        Url = "https://" & ecsaddress & "/?" & rawText & "&Signature=" & sign
        '----------------------------------------------------------------------------------
        
    '|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p
    If Sheets("Debug").Cells(1, 3) = "ON" Then
        Sheets("Debug").Cells(1, 2) = Url
    End If

'*******************************************


    '-------------------------------------------
    '|fffd||fffd||fffd|M|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||253||fffd||fffd||fffd||fffd|
    Dim objHTTP
    Dim Stream

    ' XMLHTTP|fffd||fffd||fffd||c42c|
    Set objHTTP = CreateObject("MSXML2.XMLHTTP")
    ' Stream |fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||30d||c42c|
    Set Stream = CreateObject("ADODB.Stream")
    
    ' Stream|fffd||303|I|fffd|[|fffd|v|fffd||fffd|
    Stream.Open
    Stream.Type = 1 ' adTypeBinary
    
    ' |fffd||fffd||fffd|M|fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||fffd|
    Stream.LoadFromFile = ActiveWorkbook.Path & "\uploadedfiles\" & strFileName & ".txt"
    
    '-------------------------------------------
    '|fffd|t|fffd|B|fffd|[|fffd|h|fffd||115c2||fffd|
    Dim msg1 As String
    
    '|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||702||fffd|URL|fffd||fffd|OK
    Call objHTTP.Open("POST", Url, False)
    '|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Call objHTTP.setRequestHeader("user-agent", "KTN-TOOL (VBA)")  '|fffd||302||fffd||fffd||24f||18d||fffd||fffd||142||fffd||fffd||9576||fffd||fffd||fffd||fffd||fffd|
    Call objHTTP.setRequestHeader("Content-MD5", myMD5_base64) '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||343|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|K|fffd|v|fffd||202||fffd|
    Call objHTTP.setRequestHeader("Content-Type", "text/tab-separated-values; charset=Shift_JIS")
    '|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd|(I)|fffd||115d0|M
    Call objHTTP.send(Stream.Read(Stream.Size))
    ' Stream|fffd||fffd||82||fffd||fffd||fffd|
    Stream.Close
    
    '|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p
    If Sheets("Debug").Cells(1, 3) = "ON" Then
        Sheets("Debug").Cells(2, 2) = objHTTP.responseText
    End If
    
    '|fffd||fffd||fffd|X|fffd|||fffd||fffd||fffd|X|fffd||fffd||fffd||c2bce||fffd||fffd|iXML|fffd||14e||c2bce||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||fffd||fffd||20b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||642||fffd||fffd||fffd||fffd||60b3||fffd||fffd||fffd||fffd||fffd|j
    Dim xmldata As Object
    Dim Result As Object
    Dim SubmitId As String
'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
    Set xmldata = CreateObject("Microsoft.XMLDOM")
    xmldata.async = False
    xmldata.LoadXML (objHTTP.responseText)
    
'XML|fffd|f|fffd|[|fffd|^|fffd||30e||fffd||fffd|o|fffd||fffd|-------------------------------------
    Set Result = xmldata.SelectNodes("SubmitFeedResponse/SubmitFeedResult/FeedSubmissionInfo")
    Dim ReportRequestId As String

    If Not Result Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
        If Result(0).SelectSingleNode("FeedProcessingStatus").Text = "_SUBMITTED_" Then
            TsvSend = Result(0).SelectSingleNode("FeedSubmissionId").Text
        Else
            TsvSend = Result(0).SelectSingleNode("FeedProcessingStatus").Text
        End If
    End If

    '|fffd||fffd||fffd|MOK|fffd||202||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||243|o|fffd|b|fffd|`ID|fffd||fffd||fffd||82||fffd||fffd||fffd|
    If IsNumeric(TsvSend) = True Then
        Name ActiveWorkbook.Path & "\uploadedfiles\" & strFileName & ".txt" As ActiveWorkbook.Path & "\uploadedfiles\" & strFileName & "_" & TsvSend & ".txt"
    Else
        Name ActiveWorkbook.Path & "\uploadedfiles\" & strFileName & ".txt" As ActiveWorkbook.Path & "\uploadedfiles\" & strFileName & "_|fffd||fffd||fffd|M|fffd||fffd||fffd|s" & TsvSend & ".txt"
    End If
    '|fffd|G|fffd||fffd||fffd|[|fffd||30f||a347||fffd|G|fffd||fffd||fffd|[|fffd|\|fffd|L|fffd||183|o|fffd|b|fffd|`ID
    '|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||143||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|o|fffd||fffd|


'*******************************************


End Function


Function AllReportFromRequestToGet(ReportRequestId0 As String, ReportRequestId1 As String, ReportRequestId2 As String) As Variant
'|fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|(|fffd|z|fffd||fffd|^)|fffd||255||3cd|X|fffd||fffd||fffd||fffd|SubmitId()|fffd||fffd|f|fffd||fffd||fffd|o|fffd||fffd|
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||fffd|Empty|fffd||fffd|
'|fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||303||fffd||fffd|[|fffd|v|fffd||fffd||fffd||34a|J|fffd|n|fffd||fffd||fffd||fffd|w|fffd||839e||fffd||50c|o|fffd||fffd||fffd||fffd||fffd||a347||fffd||242||343||fffd||fffd|[|fffd|v|fffd||14c82||fffd||fffd||93c8||fffd||fffd||fffd||fffd||fffd|L|fffd|q

'|fffd|N|fffd||fffd||fffd|X|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|MD5|fffd||fffd||fffd|K|fffd|{|fffd|B|fffd|@|fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|u|fffd|b|fffd|N|fffd||248||682||fffd||fffd||a347||fffd||34e|Q|fffd||190||752||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd|B
'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
Dim ReportRequestId(3) As String
    ReportRequestId(0) = ReportRequestId0
    ReportRequestId(1) = ReportRequestId1
    ReportRequestId(2) = ReportRequestId2
    
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'******************************
Dim MWSsKey As String
    MWSsKey = Worksheets("Test").Range("B2")
Dim sKey As String
    sKey = Worksheets("Debug2").Range("B4")
Dim AWSkey As String
    AWSkey = Worksheets("Debug2").Range("B3")
Dim sellerID As String
    sellerID = Sheets("Test").Range("B4")
'******************************

Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"


Dim APIVersion As String
    APIVersion = "2011-10-01"
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim ReportVal(3) As String
    ReportVal(0) = "_GET_FLAT_FILE_OPEN_LISTINGS_DATA_" '|fffd|o|fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g
    ReportVal(1) = "_GET_MERCHANT_LISTINGS_DATA_"  '|fffd|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g
    ReportVal(2) = "_GET_AFN_INVENTORY_DATA_"  'FBA|fffd||74c||243||fffd||fffd|||fffd|[|fffd|g
    
Dim FileName As String
    FileName = ActiveWorkbook.Path & "\report" '|fffd|f|fffd|B|fffd||fffd||fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||fffd|i|fffd||14c||fffd||301||fffd||fffd||202||fffd||fffd|j

Dim i As Integer, j As Integer, k As Integer

'|fffd|K|fffd|v|fffd||203||fffd||fffd|||fffd|[|fffd|g|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd||fffd||24c|J|fffd||fffd||502||fffd||fffd||143||fffd||fffd|N|fffd|G|fffd|X|fffd|g********************************************************************************************************
Dim StartTime As Date '|fffd||fffd||fffd|[|fffd|v|fffd|X|fffd|^|fffd|[|fffd|g|fffd||fffd||fffd||30e||fffd||fffd||fffd||fffd||fffd||fffd|L|fffd|^|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||48b|@|fffd||fffd||fffd||50c|o|fffd||7cc||fffd||34e||fffd||fffd||fffd||fffd|SubmitId()|fffd||fffd||fffd||fffd||fffd||fffd||fffd|z|fffd||fffd|
    StartTime = Now()

Dim m As Long

For m = 0 To 2 '/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
RequestTake2: '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gID|fffd||fffd||fffd||502||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||fffd||84bc||fffd||fffd|

    '|fffd||fffd||835e||fffd||751||38f||6ca|O|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||202||fffd||fffd||382||fffd|
    If Sheets("Env").Cells(7, 2) = "OFF" And m = 1 Then
        GoTo NextId
    End If
    If Sheets("Config").Cells(34, 1) = "OFF" And Sheets("Config").Cells(14, 1) = "OFF" And m = 2 Then
        GoTo NextId
    End If
    
    '|fffd|O|fffd||42a42||739d||fffd||fffd||fffd|z|fffd||fffd||fffd||102||fffd||fffd||fffd||a347||fffd||242||343||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||354||fffd||382||fffd||fffd|B
    If ReportRequestId(m) <> Empty Then
        GoTo NextId
    End If

    '|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
    If Format(Now(), "hh") >= 9 Then
        timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
    Else
        timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
    End If
    
    
    '|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd|j|fffd||c42c|
                    
        rawText = ""
            ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
        rawText = rawText _
      & "AWSAccessKeyId=" & AWSkey _
      & "&Action=RequestReport" _
      & "&MWSAuthToken=" & MWSsKey _
      & "&MarketplaceIdList.Id.1=A1VC38T7YXB528" _
      & "&ReportType=" & ReportVal(m) _
      & "&SellerId=" & sellerID _
      & "&SignatureMethod=HmacSHA256" _
      & "&SignatureVersion=2" _
      & "&Timestamp=" & timestamp _
      & "&Version=2009-01-01" _
    
      '|fffd||202||fffd||fffd||102||fffd||fffd||fffd||fffd|C|fffd||203|N|fffd|G|fffd||fffd|
      '& "&ContentMD5Value=" & myMD5_base64 _
      '  & "&PurgeAndReplace=false" _

            '|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------
            '|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||103|V|fffd|[|fffd|N|fffd||fffd||fffd|b|fffd|g|fffd|L|fffd|[|fffd||143|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd|
            rawTextToSign = "POST" & vbLf & ecsaddress & vbLf & "/" & vbLf & rawText
            hash = Hmac(sKey, rawTextToSign)
            
            '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
            hash_2 = ""
            For k = 1 To 64 Step 2
                hash_cut2 = Mid(hash, k, 2)
                hash_2 = hash_2 & HEX2BIN(hash_cut2)
            Next
            '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
            hash_2 = hash_2 & "00"
              
            'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
            sign = ""
            For k = 1 To 256 Step 6
                hash_cut10 = Mid(hash_2, k, 6)
                hash_10 = ncdec(2, hash_cut10)
                base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
                sign = sign & base64Array(hash_10)
            Next
            '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
            sign = sign & "="
            'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
            sign = URLencode(sign)
            '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gURL|fffd||fffd||fffd||fffd|
            Url = "https://" & ecsaddress & "/?" & rawText & "&Signature=" & sign
            '----------------------------------------------------------------------------------
            
    '|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p
    If Worksheets("Debug2").Cells(1, 3) = "ON" Then
        Sheets("Debug2").Cells(1, 2) = Url
    End If
    
    '*******************************************
    
        ChDrive ActiveWorkbook.Path
        ChDir ActiveWorkbook.Path
        '|fffd|t|fffd|B|fffd|[|fffd|h|fffd||115c2||fffd|
        Dim msg1 As String
        Dim objHTTP
    
        Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||303||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||115d0|M|fffd||fffd||fffd||702||fffd|"
        
        ' XMLHTTP|fffd||fffd||fffd||c42c|
        Set objHTTP = CreateObject("MSXML2.XMLHTTP")
        '|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||702||fffd|URL|fffd||fffd|OK
        Call objHTTP.Open("POST", Url, False)
        '|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Call objHTTP.setRequestHeader("user-agent", "KTN-TOOL (VBA)")  '|fffd||302||fffd||fffd||24f||18d||fffd||fffd||142||fffd||fffd||9576||fffd||fffd||fffd||fffd||fffd|
        Call objHTTP.send
        
        Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||303||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||115d0|M|fffd||fffd||fffd||702||fffd||fffd||fffd|"
        
        '|fffd||fffd||fffd|X|fffd|||fffd||fffd||fffd|X|fffd||fffd||fffd||c2bce||fffd||fffd|iXML|fffd||14e||c2bce||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||fffd||fffd||20b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||642||fffd||fffd||fffd||fffd||60b3||fffd||fffd||fffd||fffd||fffd|j
        msg1 = objHTTP.responseText
    '|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p
    If Worksheets("Debug2").Cells(1, 3) = "ON" Then
        Sheets("Debug2").Cells(1, 3) = objHTTP.responseText
    End If
    
    
    '************************
    
        Dim xmldata As Object
        Dim Result As Object
    'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
        Set xmldata = CreateObject("Microsoft.XMLDOM")
        xmldata.async = False
        xmldata.LoadXML (objHTTP.responseText)
        
    'XML|fffd|f|fffd|[|fffd|^|fffd||30e||fffd||fffd|o|fffd||fffd|-------------------------------------
        Set Result = xmldata.SelectNodes("RequestReportResponse/RequestReportResult/ReportRequestInfo")
        Dim q As Long
        If Not Result Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
            If Result(0).SelectSingleNode("ReportProcessingStatus").Text = "_SUBMITTED_" Then
                ReportRequestId(m) = Result(0).SelectSingleNode("ReportRequestId").Text
                Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||303||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||d7742||fffd||fffd||fffd||702||fffd||fffd||fffd|"
            Else
                '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd|
                For q = 1 To 120
                    ReportRequestId(m) = Empty
                    Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||111||fffd||fffd|M|fffd||702||151||48b|@ |fffd|c|fffd||fffd|" & 121 - q & "|fffd|b"
                    DoEvents
                    Sleep 1000
                Next
                    GoTo RequestTake2 ''''''''''''''''''''''
                
            End If
        End If
NextId:
    DoEvents
Next
'|fffd||fffd||fffd||fffd||fffd||702||150||fffd||243||fffd||fffd|||fffd|[|fffd|g|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||502||fffd||fffd||102||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gID|fffd||fffd|z|fffd||fffd||241|j'//////////////////////////////////////////////////////////////


'|fffd||fffd||fffd||42c42||fffd||fffd||fffd||fffd||fffd||fffd||18d||10a|J|fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gID|fffd|i|fffd|j|fffd||16102||7c2||fffd||182||fffd||fffd||702||14a||fffd||fffd||fffd||fffd|j
    
'|fffd||fffd||fffd|||fffd|[|fffd|gID|fffd|w|fffd||fffd||150||fffd||fffd||fffd||fffd|m|fffd|F|fffd|i|fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd|j***********************************************************************
Dim n As Long
'|fffd|K|fffd|v|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||502||fffd||fffd|B
For n = 0 To 2
    '|fffd||fffd||835e||fffd||751||38f||6ca|O|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||202||fffd||fffd||382||fffd|
    If Sheets("Env").Cells(7, 2) = "OFF" And n = 1 Then
        GoTo NextReportId
    End If
    If Sheets("Config").Cells(34, 1) = "OFF" And Sheets("Config").Cells(14, 1) = "OFF" And n = 2 Then
        GoTo NextReportId
    End If

    Dim ReportProcessingStatus As String
    '|fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s========================================
ReCheck:
    Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||310||fffd||fffd||fffd||fffd||fffd||502||fffd|Amazon|fffd||256||20a2||fffd||fffd||fffd||d0b9||fffd||702||fffd|"
    ReportProcessingStatus = GetReportStatus(ReportRequestId(n))
    '==========================================================
    Dim tm As Long
        FileName = ActiveWorkbook.Path & "\report"
        Select Case ReportVal(n)
            Case "_GET_MERCHANT_LISTINGS_DATA_"
                FileName = FileName & "\sypn-syosai-report.txt"
            Case "_GET_FLAT_FILE_OPEN_LISTINGS_DATA_"
                FileName = FileName & "\sypn-report.txt"
            Case "_GET_AFN_INVENTORY_DATA_"
                FileName = FileName & "\FBA-report.txt"
        End Select
    
    If IsNumeric(ReportProcessingStatus) = True Then
        '|fffd||fffd||fffd|||fffd|[|fffd|gID|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||38e||c2bce||fffd||fffd||fffd|
        Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||14e||fffd||835e||fffd||742||702||fffd|"
        Dim GeneratedReportId As String
            GeneratedReportId = ReportProcessingStatus
            
            '|fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s========================================
            Call GetReport(GeneratedReportId, ReportVal(n), FileName)
            '==========================================================
            ReportRequestId(n) = Empty
    Else
        '|fffd|w|fffd||839e||fffd||511||48b|@|fffd||fffd||fffd||113|x|fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd|
        For tm = 1 To 60
            DoEvents
            Sleep 1000
            Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||702||151||48b|@|fffd|@|fffd||103|`|fffd|F|fffd|b|fffd|N|fffd||702||14e|c|fffd||fffd|" & 60 - tm & "|fffd|b"
        Next
        If DateDiff("n", Now(), StartTime) > Sheets("Env").Cells(27, 2) Then
            GoTo EscFunc
        End If
        GoTo ReCheck
    End If
NextReportId:
DoEvents
Next '//////////////////////////////////////////////////////////////////////////////////////////////////////////////////

EscFunc:
Dim SubmitResolt(3) As Variant
    SubmitResolt(0) = ReportRequestId(0)
    SubmitResolt(1) = ReportRequestId(1)
    SubmitResolt(2) = ReportRequestId(2)

    AllReportFromRequestToGet = SubmitResolt
    
End Function

Function GetReportStatus(ReportRequestId As String)
'|fffd||fffd||fffd|||fffd|[|fffd|gID|fffd||fffd||fffd||7436||fffd||fffd||fffd||fffd||502||fffd||502||fffd||fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'******************************
Dim MWSsKey As String
    MWSsKey = Worksheets("Test").Range("B2")
Dim sKey As String
    sKey = Worksheets("Debug2").Range("B4")
Dim AWSkey As String
    AWSkey = Worksheets("Debug2").Range("B3")
Dim strFileName As String
    
'******************************
    
Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"
Dim sellerID As String
    sellerID = Worksheets("Test").Range("B4")

Dim APIVersion As String
    APIVersion = "2011-10-01"
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Integer, j As Integer, k As Integer

'********************************************************************************************************
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") >= 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If


'|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd|j|fffd||c42c|
                
    rawText = ""
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
    rawText = rawText _
  & "AWSAccessKeyId=" & AWSkey _
  & "&Action=GetReportRequestList" _
  & "&MWSAuthToken=" & MWSsKey _
  & "&MarketplaceIdList.Id.1=A1VC38T7YXB528" _
  & "&ReportRequestIdList.Id.1=" & ReportRequestId _
  & "&SellerId=" & sellerID _
  & "&SignatureMethod=HmacSHA256" _
  & "&SignatureVersion=2" _
  & "&Timestamp=" & timestamp _
  & "&Version=2009-01-01" _

  '|fffd||202||fffd||fffd||102||fffd||fffd||fffd||fffd|C|fffd||203|N|fffd|G|fffd||fffd|
  '& "&ContentMD5Value=" & myMD5_base64 _
  '  & "&PurgeAndReplace=false" _

        '|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------
        '|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||103|V|fffd|[|fffd|N|fffd||fffd||fffd|b|fffd|g|fffd|L|fffd|[|fffd||143|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd|
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gURL|fffd||fffd||fffd||fffd|
        Url = "https://" & ecsaddress & "/?" & rawText & "&Signature=" & sign
        '----------------------------------------------------------------------------------
        



'*******************************************
'|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p
If Sheets("Debug2").Cells(1, 3) = "ON" Then
    Sheets("Debug2").Cells(1, 2) = Url
End If

    Dim xmldata As Object
    Dim Result As Object
    
    ChDrive ActiveWorkbook.Path
    ChDir ActiveWorkbook.Path
    
    Set xmldata = CreateObject("Microsoft.XMLDOM")
    xmldata.async = False
    xmldata.Load Url

'XML|fffd|f|fffd|[|fffd|^|fffd||30e||fffd||fffd|o|fffd||fffd|-------------------------------------
    Set Result = xmldata.SelectNodes("GetReportRequestListResponse/GetReportRequestListResult/ReportRequestInfo")
    Dim ReportProcessingStatus As String

    If Not Result Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
        If Result(0).SelectSingleNode("ReportProcessingStatus").Text = "_DONE_" Then
            ReportProcessingStatus = Result(0).SelectSingleNode("GeneratedReportId").Text
        Else
            ReportProcessingStatus = Result(0).SelectSingleNode("ReportProcessingStatus").Text
        End If
    End If
    
    GetReportStatus = ReportProcessingStatus
    
End Function

Function GetReport(GeneratedReportId As String, ReprotVal As String, FileName As String)
'|fffd||fffd||fffd|||fffd|[|fffd|gID|fffd||fffd||fffd||fffd|e|fffd|L|fffd|X|fffd|g|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||6d1||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'******************************
Dim MWSsKey As String
    MWSsKey = Worksheets("Test").Range("B2")
Dim sKey As String
    sKey = Worksheets("Debug2").Range("B4")
Dim AWSkey As String
    AWSkey = Worksheets("Debug2").Range("B3")
    
'******************************
    
Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"
Dim sellerID As String
    sellerID = Worksheets("Test").Range("B4")

Dim APIVersion As String
    APIVersion = "2011-10-01"
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Integer, j As Integer, k As Integer

'********************************************************************************************************
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") >= 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If


'|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd|j|fffd||c42c|
                
    rawText = ""
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
    rawText = rawText _
  & "AWSAccessKeyId=" & AWSkey _
  & "&Action=GetReport" _
  & "&MWSAuthToken=" & MWSsKey _
  & "&MarketplaceIdList.Id.1=A1VC38T7YXB528" _
  & "&ReportId=" & GeneratedReportId _
  & "&SellerId=" & sellerID _
  & "&SignatureMethod=HmacSHA256" _
  & "&SignatureVersion=2" _
  & "&Timestamp=" & timestamp _
  & "&Version=2009-01-01" _

  '|fffd||202||fffd||fffd||102||fffd||fffd||fffd||fffd|C|fffd||203|N|fffd|G|fffd||fffd|
  '& "&ContentMD5Value=" & myMD5_base64 _
  '  & "&PurgeAndReplace=false" _

        '|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------
        '|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||103|V|fffd|[|fffd|N|fffd||fffd||fffd|b|fffd|g|fffd|L|fffd|[|fffd||143|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd|
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gURL|fffd||fffd||fffd||fffd|
        Url = "https://" & ecsaddress & "/?" & rawText & "&Signature=" & sign
        '----------------------------------------------------------------------------------
        



'*******************************************
'|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p
If Sheets("Debug2").Cells(1, 3) = "ON" Then
    Sheets("Debug2").Cells(1, 2) = Url
End If

  Call TextFileDownload(Url, FileName)
    
End Function
Function TextFileDownload(Url As String, SaveName As String)

'Dim xmlHttp
    'Set xmlHttp = CreateObject("Msxml2.XMLHTTP")
    
Dim xmlHttp As XMLHTTP60
    Set xmlHttp = New XMLHTTP60

    xmlHttp.Open "GET", Url, False
    
    Select Case Left(Right(SaveName, 12), 1)
        Case "i"
            Application.StatusBar = "|fffd|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||312||fffd||fffd|g|fffd||fffd||1c2||74e||fffd||fffd||702||fffd||fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||303|T|fffd|C|fffd|Y|fffd||fffd||fffd||50ab||fffd||fffd||fffd||a347||fffd||34e||fffd||fffd||502||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|j"
        Case "n"
            Application.StatusBar = "|fffd|o|fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||312||fffd||fffd|g|fffd||fffd||1c2||74e||fffd||fffd||702||fffd||fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||303|T|fffd|C|fffd|Y|fffd||fffd||fffd||50ab||fffd||fffd||fffd||a347||fffd||34e||fffd||fffd||502||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|j"
        Case "A"
            Application.StatusBar = "FBA|fffd||74c||243||fffd||fffd|||fffd|[|fffd|g|fffd||312||fffd||fffd|g|fffd||fffd||1c2||74e||fffd||fffd||702||fffd||fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||303|T|fffd|C|fffd|Y|fffd||fffd||fffd||50ab||fffd||fffd||fffd||a347||fffd||34e||fffd||fffd||502||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|j"
    End Select
    
   xmlHttp.send

    Do While xmlHttp.readyState < 4
        DoEvents
        Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||312||fffd||fffd|g|fffd||313||1c2||74d||fffd||fffd||751||482||fffd||fffd||142||fffd|"
        Sleep 100
        Application.StatusBar = ""
    Loop
    
    Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||313||1c2||74d||fffd||fffd||74a||fffd||fffd||fffd|"
    'xmlHttp.send
    
    
    Dim html As String

    html = StrConv(xmlHttp.responseBody, vbUnicode)
    Set xmlHttp = Nothing

    Dim intFF As Integer

    intFF = FreeFile

    Open SaveName For Output As #1

    Print #1, html

    Close #1
    Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||30f||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|"
    
End Function




Public Function HexToBase64(ByVal strHex As String) As String
     
    ' Function to convert a hex string into a base64 encoded string.
    Dim lngValue    As Long
    Dim lngTemp     As Long
    Dim lngChar     As Long
    Dim intLen      As Integer
    Dim k           As Integer
    Dim j           As Integer
    Dim strWord     As String
    Dim str64       As String
    Dim intTerm     As Integer
    
    Const B64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
     
    intLen = Len(strHex)
     
    ' Pad with zeros to multiple of 3 bytes.
    intTerm = intLen Mod 6
    If (intTerm = 4) Then
        strHex = strHex & "00"
        intLen = intLen + 2
    End If
    If (intTerm = 2) Then
        strHex = strHex & "0000"
        intLen = intLen + 4
    End If
     
    ' Parse into groups of 3 hex bytes.
    For k = 1 To intLen Step 2
        j = j + 1
        strWord = strWord & Mid(strHex, k, 2)
        If (j = 3) Then
            ' Convert 3 8-bit bytes into 4 6-bit characters.
            lngValue = CCur("&H" & strWord)
             
            lngTemp = Fix(lngValue / 64)
            lngChar = lngValue - (64 * lngTemp)
            str64 = Mid(B64, lngChar + 1, 1)
            lngValue = lngTemp
             
            lngTemp = Fix(lngValue / 64)
            lngChar = lngValue - (64 * lngTemp)
            str64 = Mid(B64, lngChar + 1, 1) & str64
            lngValue = lngTemp
             
            lngTemp = Fix(lngValue / 64)
            lngChar = lngValue - (64 * lngTemp)
            str64 = Mid(B64, lngChar + 1, 1) & str64
             
            str64 = Mid(B64, lngTemp + 1, 1) & str64
             
            HexToBase64 = HexToBase64 & str64
            j = 0
            strWord = ""
        End If
    Next
    
    ' Account for padding.
    If (intTerm = 4) Then HexToBase64 = Left(HexToBase64, Len(HexToBase64) - 1) & "="
    If (intTerm = 2) Then HexToBase64 = Left(HexToBase64, Len(HexToBase64) - 2) & "=="

End Function

' |fffd|w|fffd||80b5||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd| MD5 |fffd|n|fffd|b|fffd|V|fffd||fffd||fffd|l|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
Function GetFileHashMD5(strFileName)
    Dim MD5
    Set MD5 = CreateObject("System.Security.Cryptography.MD5CryptoServiceProvider")
    MD5.ComputeHash_2 (ReadBinaryFile(strFileName))
    Dim msxml
    Set msxml = CreateObject("MSXML2.DOMDocument")
    Dim el
    Set el = msxml.createElement("tmp")
    el.dataType = "bin.hex"
    el.nodeTypedValue = MD5.hash
    GetFileHashMD5 = el.Text
End Function
' |fffd|w|fffd||80b5||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|o|fffd|C|fffd|g|fffd|z|fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
Function ReadBinaryFile(strFileName)
    Const adTypeBinary = 1
    Dim stm
    Set stm = CreateObject("ADODB.Stream")
    stm.Type = adTypeBinary
    stm.Open
    stm.LoadFromFile strFileName
    ReadBinaryFile = stm.Read
End Function


'|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd|16|fffd|i|fffd||fffd||fffd|`|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||243|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|B
Function encodeToHex(bytes() As Byte)
    encodeToHex = Encode("bin.Hex", bytes)
End Function
 
'|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd|BASE64|fffd|`|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||243|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|B
Function encodeToBase64(bytes() As Byte)
    encodeToBase64 = Encode("bin.base64", bytes)
End Function
 
'16|fffd|i|fffd||fffd||fffd|`|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd||243|f|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|B
Function decodeFromHex(Text As String)
    decodeFromHex = Decode("bin.Hex", Text)
End Function
 
'BASE64|fffd|`|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd||243|f|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|B
Function decodeFromBase64(Text As String)
    decodeFromBase64 = Decode("bin.base64", Text)
End Function
 
'|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd|w|fffd||fffd|^|fffd|C|fffd|v|fffd||315||fffd||fffd||fffd||fffd||fffd||243|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|B
Function Encode(dataType As String, bytes() As Byte)
    Dim oXmlDoc As New DOMDocument60 'Microsoft XML, v6.0|fffd||fffd||fffd|K|fffd|v
    With oXmlDoc
        .LoadXML ("<root />")
        .DocumentElement.dataType = dataType
        .DocumentElement.nodeTypedValue = bytes
    End With
    Encode = Replace(oXmlDoc.DocumentElement.Text, vbLf, "")
End Function
 
'|fffd|w|fffd||fffd|^|fffd|C|fffd|v|fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd||243|f|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|B
Function Decode(dataType As String, Text As String)
    Dim oXmlDoc As New DOMDocument60 'Microsoft XML, v6.0|fffd||fffd||fffd|K|fffd|v
    With oXmlDoc
        .LoadXML ("<root />")
        .DocumentElement.dataType = dataType
        .DocumentElement.Text = Text
    End With
    Decode = oXmlDoc.DocumentElement.nodeTypedValue
End Function

Function EncodeBase64(Text As String) As String
  Dim arrData() As Byte
  arrData = StrConv(Text, vbFromUnicode)

  Dim objXML As MSXML2.DOMDocument60
  Dim objNode As MSXML2.IXMLDOMElement

  Set objXML = New MSXML2.DOMDocument60
  Set objNode = objXML.createElement("b64")

  objNode.dataType = "bin.base64"
  objNode.nodeTypedValue = arrData
  EncodeBase64 = objNode.Text

  Set objNode = Nothing
  Set objXML = Nothing
End Function



' |fffd||209||fffd||fffd|R|fffd|s|fffd|y
' http://d.hatena.ne.jp/n7shi/20100910/1284112553
' https://code.msdn.microsoft.com/office/VBACRC-32-dad7d087
' Dim I%, J%, R&, R1&|fffd||fffd||fffd|Q|fffd|l
' http://www.atmarkit.co.jp/fdotnet/vb6tonet/vb6tonet30/vb6tonet30_01.html

Private Sub InitCrc32Table()
    Dim i%, j%, R&, R1&
    For i = 0 To 255
        R = i
        For j = 0 To 7
            R1 = R And 1
            R = (R - R1) / 2
            If R < 0 Then R = R - &H80000000
            If R1 Then R = R Xor &HEDB88320
        Next j
        Crc32Table(i) = R
    Next i
End Sub

Public Function GetCrc32FromFile&(Path$)
    Dim R&, i&, b As Byte, FL&
    If Crc32Table(255) = 0 Then InitCrc32Table
    FL = FileLen(Path)
    Open Path For Binary Lock Read As #2
    R = Not 0
    For i = 1 To FL
        Get #2, , b
        R = (Int(R / 256) And &HFFFFFF) Xor Crc32Table((R Xor b) And &HFF)
    Next i
    Close #2
    GetCrc32FromFile = Not R
End Function




Attribute VB_Name = "Module2"


Sub TOP|fffd||596||7c2||fffd|()
'
' TOP|fffd||596||7c2||fffd| Macro
'
    ActiveWorkbook.Unprotect Password:="nosuke7254"
    
    Worksheets("TOP").Visible = True
    ActiveSheet.Visible = False
    ActiveWorkbook.Protect Password:="nosuke7254", Structure:=False, Windows:=True
    Sheets("TOP").Select
End Sub
Sub |fffd|l|fffd|t|fffd||fffd||fffd|m|fffd|F|fffd||fffd||282||fffd|()
'
' |fffd||752||fffd||fffd||282||fffd| Macro
'
    
    ActiveWorkbook.Unprotect Password:="nosuke7254"
    Worksheets("Debug").Visible = True
    ActiveSheet.Visible = False
    ActiveWorkbook.Protect Password:="nosuke7254", Structure:=False, Windows:=True
    Sheets("Debug").Select
End Sub
Sub |fffd||8b||fffd||fffd||752||fffd||fffd||282||fffd|()
'
' |fffd||752||fffd||fffd||282||fffd| Macro
'
    
    ActiveWorkbook.Unprotect Password:="nosuke7254"
    Worksheets("Env").Visible = True
    ActiveSheet.Visible = False
    ActiveWorkbook.Protect Password:="nosuke7254", Structure:=False, Windows:=True
    Sheets("Env").Select
End Sub

Sub |fffd||752||fffd||fffd||282||fffd|()
'
' |fffd||752||fffd||fffd||282||fffd| Macro
'
    
    ActiveWorkbook.Unprotect Password:="nosuke7254"
    Worksheets("Config").Visible = True
    ActiveSheet.Visible = False
    ActiveWorkbook.Protect Password:="nosuke7254", Structure:=False, Windows:=True
    Sheets("Config").Select
End Sub
Sub |fffd||fffd||fffd|i|fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|()
'
' |fffd||fffd||fffd|i|fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd| Macro
'
    
    ActiveWorkbook.Unprotect Password:="nosuke7254"
    Worksheets("PriceCheckList").Visible = True
    Worksheets("TOP").Visible = False
    ActiveWorkbook.Protect Password:="nosuke7254", Structure:=False, Windows:=True
    Sheets("PriceCheckList").Select
End Sub
Sub |fffd|f|fffd|[|fffd|^|fffd|Z|fffd|[|fffd|u()

'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
Dim Config As Worksheet
    Set Config = Sheets("Config")
Dim Save As Worksheet
    Set Save = Sheets("Save")
'----------------------------------

If MsgBox("|fffd||6d1||fffd||fffd||fffd||fffd||fffd||a347||fffd||342|n|fffd|j|fffd|A|fffd||508||fffd||fffd||fffd||102||fffd||fffd||303|{|fffd|^|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||a347||fffd||343|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKCancel) = vbCancel Then
    End
End If
    ActiveWorkbook.Unprotect Password:="nosuke7254"
   
 '|fffd||fffd||fffd||30c||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||fffd|}|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
If IsError(Save.Range("C1:L1").Find(Config.Cells(1, 13)).Column) <> True Then
    Dim Position As String
    Dim Col As Long
        Col = Save.Range("C1:L1").Find(Config.Cells(1, 13)).Column
    Dim SaveName As String
        SaveName = Config.Cells(1, 16)
    Dim LastIndex As Long
        LastIndex = Save.Cells(Rows.count, 1).End(xlUp).Row
        Save.Cells(1, Col) = SaveName

    For i = 3 To LastIndex
        Application.StatusBar = "|fffd||752||fffd||6d1||fffd||fffd||fffd||fffd|@" & i & "/" & LastIndex
        If Save.Cells(i, 1) <> "" Then
            Save.Cells(i, Col) = Config.Range(Save.Cells(i, 1))
        End If

    DoEvents
    Next
    MsgBox "|fffd||6d1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|"
Else
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||85bc||fffd||fffd||fffd|w|fffd||80b5||fffd||109||fffd||fffd||fffd||fffd||fffd|"
End If
    
    
ActiveWorkbook.Protect Password:="nosuke7254", Structure:=False, Windows:=True
Application.StatusBar = ""
'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set Config = Nothing
    Set Save = Nothing
'----------------------------------
End Sub

Sub |fffd||752||fffd|f|fffd|[|fffd|^|fffd||1c2||74d||fffd||fffd||fffd|()

'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
Dim Config As Worksheet
    Set Config = Sheets("Config")
Dim Save As Worksheet
    Set Save = Sheets("Save")
'----------------------------------

If MsgBox("|fffd||752||fffd||fffd||1c2||74d||fffd||fffd||78f||a347||fffd||342|n|fffd|j|fffd|A|fffd||508||fffd||fffd||fffd||102||fffd||fffd||303|{|fffd|^|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd||fffd||a347||fffd||343|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbOKCancel) = vbCancel Then
    End
End If
    ActiveWorkbook.Unprotect Password:="nosuke7254"

 '|fffd||fffd||fffd||30c||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||fffd|}|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|


If IsError(Save.Range("B1:L1").Find(Config.Cells(2, 12)).Column) <> True Then
    Dim Position As String
    Dim Col As Long
        Col = Save.Range("B1:L1").Find(Config.Cells(2, 12)).Column

    Dim LastIndex As Long
        LastIndex = Save.Cells(Rows.count, 1).End(xlUp).Row

    For i = 3 To LastIndex
        Application.StatusBar = "|fffd||752||80cd||fffd|[|fffd|h|fffd||fffd||fffd|@" & i & "/" & LastIndex
        If Save.Cells(i, 1) <> "" Then
            Config.Range(Save.Cells(i, 1)) = Save.Cells(i, Col)
        End If

    DoEvents
    Next
    MsgBox "|fffd||1c2||74d||fffd||fffd||74a||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|"
Else
    MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||85bc||fffd||fffd||fffd|w|fffd||80b5||fffd||109||fffd||fffd||fffd||fffd||fffd|"
End If
'----------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd||fffd|
    Set Config = Nothing
    Set Save = Nothing
'----------------------------------
ActiveWorkbook.Protect Password:="nosuke7254", Structure:=False, Windows:=True
Application.StatusBar = ""
End Sub




Attribute VB_Name = "Module3"
Sub |fffd||fffd||fffd|||fffd|[|fffd|g|fffd||24d|X|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||38e||fffd||835e||fffd||fffd|()

'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||250||752||80b7||fffd||fffd|
Dim TOP As Worksheet
    Set TOP = Sheets("TOP")
Dim Config As Worksheet
    Set Config = Sheets("Config")
Dim Env As Worksheet
    Set Env = Sheets("Env")

'|fffd||fffd||28d|X|fffd|V-----------
Application.ScreenUpdating = False
'------------------------------

Dim SypnRepoPath As String
    SypnRepoPath = ActiveWorkbook.Path & "\report\sypn-report.txt"
    
Dim RepoTime1Start As Date
    RepoTime1Start = Env.Cells(17, 2)
Dim RepoTime1Fin As Date
    RepoTime1Fin = Env.Cells(17, 4)
Dim RepoTime2Start As Date
    RepoTime2Start = Env.Cells(18, 2)
Dim RepoTime2Fin As Date
    RepoTime2Fin = Env.Cells(18, 4)

    '|fffd||fffd||fffd||8e||fffd||fffd||513||fffd||fffd||202||70cc||fffd|||fffd|[|fffd|g|fffd||30e||fffd||835e||fffd||74e||fffd||fffd|{
    If (Sheets("TOP").Range("F8") = "") Or ((Time >= TimeValue(RepoTime1Start) And Time <= TimeValue(RepoTime1Fin)) Or (Time >= TimeValue(RepoTime2Start) And Time <= TimeValue(RepoTime2Fin))) Then
    
    '|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30d|X|fffd|V=============================================================================
        fil_path2 = SypnRepoPath
        Set fso2 = CreateObject("Scripting.FileSystemObject")
        Set FSO = CreateObject("Scripting.FileSystemObject")
        ' (|fffd||3cd|X|fffd|O)|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30d|X|fffd|V|fffd||fffd||fffd||fffd||fffd||30e||64fe|
        File_dtm2_1 = TOP.Range("F8")
        Application.StatusBar = "|fffd||150|V|fffd||30f|o|fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||30d|X|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe|"
        ' (|fffd||3cd|X|fffd||fffd|)|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30d|X|fffd|V|fffd||fffd||fffd||fffd||fffd||30e||64fe|
        File_dtm2_2 = ""
        If fso2.FileExists(fil_path2) Then
            File_dtm2_2 = fso2.getfile(fil_path2).DateLastModified
            '|fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
            Set fso2 = Nothing
            Set FSO = Nothing
        End If
        ' |fffd||3cd|X|fffd|O|fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd|X|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd|r
        If File_dtm2_1 <> File_dtm2_2 Then
            If File_dtm2_2 <> "" Then
                '|fffd|o|fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||fffd|-------------------------
                Application.StatusBar = "|fffd|e|fffd||d0cc||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||74a|J|fffd|n"
                Application.Run "|fffd|e|fffd||d0cc||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||fffd|"
                '--------------------------------------
                TOP.Range("F8") = File_dtm2_2
            Else
                Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||30d|X|fffd|V|fffd||342||fffd||fffd||fffd||702||fffd||fffd||fffd|"
            End If
        End If
    Else
        Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||74e||fffd||fffd||50a|O|fffd||302||fffd||fffd||7c3|X|fffd|L|fffd|b|fffd|v"
    End If
    '----------------------------------------------------------------------------------
'|fffd|V|fffd|[|fffd|g|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd|J|fffd||fffd|
    Set TOP = Nothing
    Set Config = Nothing
    Set Env = Nothing
'|fffd||fffd||28d|X|fffd|V-----------
Application.ScreenUpdating = True
'------------------------------
End Sub
Attribute VB_Name = "Module4"
Sub Button7_Click()
ActiveWorkbook.Unprotect Password:="nosuke7254"
    Worksheets("NoCheckList").Visible = True
    Worksheets("TOP").Visible = False
    
    
ActiveWorkbook.Protect Password:="nosuke7254", Structure:=False, Windows:=True
Sheets("NoCheckList").Select
End Sub


Attribute VB_Name = "Module5"
Sub |fffd||fffd||fffd||43343|b|fffd|N|fffd||fffd||fffd||fffd|()
'
    Application.ScreenUpdating = True
    ActiveWorkbook.Unprotect Password:="nosuke7254"
End Sub

Sub Button2_Click()
    Dim fType, prompt As String
    Dim fPath As Variant
    Dim ws As Worksheet
    Set ws = Worksheets("test")

    '|fffd|I|fffd||fffd||fffd||142||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30e||fffd||782||fffd|csv|fffd||24c||fffd||fffd||fffd|
    fType = "Excel |327||fffd||fffd| (*.xlsm),*.xlsm"

    '|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||303|^|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||fffd|
    prompt = "|fffd||fffd||fffd||fffd||702||14e|g|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd||fffd|c|fffd|[|fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||109||fffd||fffd||fffd||fffd||fffd|"
    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|Q|fffd||183|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||315|\|fffd||fffd|
    fPath = Application.GetOpenFilename(fType, , prompt)

    If fPath = False Then
    '|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||143|L|fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd|
        End
    End If

    'B2|fffd|Z|fffd||fffd||fffd||243|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g
    ws.Cells(8, 5).value = fPath
End Sub


Sub |fffd||fffd||fffd|c|fffd|[|fffd||fffd||fffd||310||752||fffd||fffd||1c2||74e||fffd||fffd||fffd||102||fffd||fffd||fffd|N|fffd||fffd|()
'|fffd||fffd||fffd||fffd||d3dc||fffd||38f||6ce||fffd||fffd||502||fffd||1c9||fffd|

Dim OldFileFullPass As String
Dim OldFilePass As String
Dim OldFile As String
Dim OldFileName As String

OldFileFullPass = Sheets("test").Cells(8, 5)

For a = 6 To Len(OldFileFullPass)
    If Left(Right(OldFileFullPass, a), 1) = "\" Then
        OldFilePass = Left(OldFileFullPass, Len(OldFileFullPass) - a)
        OldFile = Right(OldFileFullPass, a - 1)
        OldFileName = Replace(OldFile, ".xlsm", "")
        Exit For
    End If
DoEvents
Next

Dim MyFileFullPass As String
Dim MyFilePass As String
Dim MyFile As String
Dim MyFileName As String

MyFilePass = ActiveWorkbook.Path
MyFile = ActiveWorkbook.Name
MyFileName = Left(MyFile, Len(MyFile) - 5)
MyFileFullPass = MyFilePass & "\" & MyFile

'*******************************************************
'|fffd||fffd||fffd||fffd|C|fffd||fffd||fffd||fffd||fffd||254|z|fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd||fffd|X|fffd|C|fffd|b|fffd|`|fffd||fffd||fffd|O|fffd|@|fffd|\|fffd||308||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd||1c9||fffd|
'*******************************************************
Application.ScreenUpdating = False
'|fffd||fffd||fffd|c|fffd|[|fffd||fffd||fffd|J|fffd||fffd||fffd|i|fffd||6cc||fffd||fffd||fffd||fffd||fffd||102||90bd||fffd||7c3|I|fffd|[|fffd|v|fffd||fffd||fffd|u|fffd|b|fffd|N|fffd||14f||fffd||fffd||fffd||fffd|j----------------------------------

Workbooks(MyFile).Unprotect Password:="nosuke7254"
Worksheets("Config").Visible = True
Sheets("Config").Select
Sheets("Config").Unprotect Password:="nosuke7254"


Workbooks.Open OldFileFullPass
Workbooks(OldFile).Unprotect Password:="nosuke7254"

Workbooks(OldFile).Activate
Worksheets("Config").Visible = True
Sheets("Config").Select

Worksheets("Config").Unprotect Password:="nosuke7254"

'MWS|fffd||fffd||fffd|z|fffd||fffd||fffd|o|fffd||fffd|***********************************************************************************
'Workbooks(MyFile).Sheets("test").Cells(2, 2) = Workbooks(OldFile).Sheets("test").Cells(2, 2)
'Workbooks(MyFile).Sheets("test").Cells(3, 2) = Workbooks(OldFile).Sheets("test").Cells(3, 2)
Workbooks(MyFile).Sheets("test").Cells(4, 2) = Workbooks(OldFile).Sheets("test").Cells(4, 2)

'OrderId
Workbooks(MyFile).Sheets("test").Cells(5, 2) = Workbooks(OldFile).Sheets("test").Cells(5, 2)


'|fffd||8b||fffd||fffd||752||8340||fffd||68b|z|fffd||fffd||fffd|o|fffd||fffd|******************************************************************************
'|fffd|p|fffd|X
'Workbooks(MyFile).Sheets("Env").Cells(4, 1) = Workbooks(OldFile).Sheets("Env").Cells(4, 1)
'Workbooks(MyFile).Sheets("Env").Cells(7, 1) = Workbooks(OldFile).Sheets("Env").Cells(7, 1)
Workbooks(MyFile).Sheets("Env").Cells(7, 2) = Workbooks(OldFile).Sheets("Env").Cells(7, 2)
'Workbooks(MyFile).Sheets("Env").Cells(10, 1) = Workbooks(OldFile).Sheets("Env").Cells(10, 1)
'Workbooks(MyFile).Sheets("Env").Cells(13, 1) = Workbooks(OldFile).Sheets("Env").Cells(13, 1)

'|fffd||fffd||fffd||fffd||752||fffd|
Workbooks(MyFile).Sheets("Env").Cells(17, 2) = Workbooks(OldFile).Sheets("Env").Cells(17, 2)
Workbooks(MyFile).Sheets("Env").Cells(17, 4) = Workbooks(OldFile).Sheets("Env").Cells(17, 4)

Workbooks(MyFile).Sheets("Env").Cells(18, 2) = Workbooks(OldFile).Sheets("Env").Cells(18, 2)
Workbooks(MyFile).Sheets("Env").Cells(18, 4) = Workbooks(OldFile).Sheets("Env").Cells(18, 4)

Workbooks(MyFile).Sheets("Env").Cells(20, 2) = Workbooks(OldFile).Sheets("Env").Cells(20, 2)

Workbooks(MyFile).Sheets("Env").Cells(23, 2) = Workbooks(OldFile).Sheets("Env").Cells(23, 2)

Workbooks(MyFile).Sheets("Env").Cells(27, 2) = Workbooks(OldFile).Sheets("Env").Cells(27, 2)

Workbooks(MyFile).Sheets("Env").Cells(29, 2) = Workbooks(OldFile).Sheets("Env").Cells(29, 2)

'|fffd||fffd||fffd|OSKU
Workbooks(MyFile).Sheets("Env").Range("B34:B38") = Workbooks(OldFile).Sheets("Env").Range("B34:B38")

'|fffd|z|fffd||fffd||fffd|p|fffd|^|fffd|[|fffd||fffd|
Workbooks(MyFile).Sheets("Env").Cells(42, 2) = Workbooks(OldFile).Sheets("Env").Cells(42, 2)
Workbooks(MyFile).Sheets("Env").Range("A44:B52") = Workbooks(OldFile).Sheets("Env").Range("A44:B52")

Workbooks(MyFile).Sheets("Env").Cells(42, 5) = Workbooks(OldFile).Sheets("Env").Cells(42, 5)
Workbooks(MyFile).Sheets("Env").Range("D43:D47") = Workbooks(OldFile).Sheets("Env").Range("D43:D47")
'**************************************************************************************************************
'|fffd|Z|fffd|[|fffd|u|fffd|f|fffd|[|fffd|^|fffd||308||fffd||fffd||fffd||fffd|p|fffd||fffd|
Application.StatusBar = "|fffd||fffd||fffd|i|fffd||fffd||fffd||83dc||fffd|OSKU|fffd||fffd||fffd||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd||702||fffd||fffd|B"
Workbooks(OldFile).Sheets("Save").Columns("A:L").Copy Destination:=Workbooks(MyFile).Sheets("Save").Columns("A:L")
Workbooks(MyFile).Sheets("Config").Cells(1, 13).ClearContents
Application.StatusBar = "|fffd||fffd||fffd|i|fffd||fffd||fffd||83dc||fffd|OSKU|fffd||308||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"

'|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||310||752||8340||fffd||682||fffd|V|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||308||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||24e||fffd||835e||fffd||fffd|

    Dim Position As String
    Dim Col As Long
        Col = 13
    Dim LastIndex As Long
        LastIndex = Workbooks(OldFile).Sheets("Save").Cells(Rows.count, 1).End(xlUp).Row

    For i = 3 To LastIndex
        Application.StatusBar = "|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||310||752||fffd||1c2||74d||fffd||fffd||752||fffd||fffd|@" & i & "/" & LastIndex
        If Workbooks(MyFile).Sheets("Save").Cells(i, 1) <> "" Then
            Workbooks(MyFile).Sheets("Save").Cells(i, Col) = Workbooks(OldFile).Sheets("Config").Range(Workbooks(MyFile).Sheets("Save").Cells(i, 1))
        End If
    DoEvents
    Next

Application.StatusBar = "|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|Config|fffd|f|fffd|[|fffd|^|fffd|i|fffd|[|fffd||fffd||fffd||fffd|"

'---------------------------------------------------------------

'|fffd||fffd||835e||fffd||42f83|Z|fffd|[|fffd|u|fffd|f|fffd|[|fffd|^|fffd||fffd|V|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        LastIndex = Workbooks(MyFile).Sheets("Save").Cells(Rows.count, 1).End(xlUp).Row

    For x = 3 To LastIndex
        Application.StatusBar = "|fffd||752||80cd||fffd|[|fffd|h|fffd||fffd||fffd|@" & x & "/" & LastIndex
        If Workbooks(MyFile).Sheets("Save").Cells(x, 1) <> "" Then
            Workbooks(MyFile).Sheets("Config").Range(Workbooks(MyFile).Sheets("Save").Cells(x, 1)) = Workbooks(MyFile).Sheets("Save").Cells(x, Col)
        End If
    DoEvents
    Next

Application.StatusBar = "|fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|Config|fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||74a||fffd||fffd||fffd|"


'***************************************************************************************************************

Application.StatusBar = "|fffd||fffd||fffd|i|fffd||fffd||fffd||83dc||fffd|OSKU|fffd||fffd||fffd||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd||702||fffd||fffd|B"
Workbooks(OldFile).Sheets("NoCheckList").Columns("A:A").Copy Destination:=Workbooks(MyFile).Sheets("NoCheckList").Columns("A:A")
Application.StatusBar = "|fffd||fffd||fffd|i|fffd||fffd||fffd||83dc||fffd|OSKU|fffd||308||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"

'***************************************************************************************************************
Application.StatusBar = "|fffd||fffd||fffd|c|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||303|f|fffd|[|fffd|^|fffd||68d|s|fffd||fffd||fffd||fffd||fffd|B|fffd|@|fffd||fffd||fffd|c|fffd|[|fffd||fffd||fffd||fffd||82||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B"

'|fffd||fffd||fffd|c|fffd|[|fffd||fffd||fffd||fffd||6d1||fffd||fffd||fffd||fffd||fffd||fffd||155||82||fffd||fffd||fffd|--------------------------------------------------------------
Workbooks(OldFile).Activate
Workbooks(OldFile).Sheets("Config").Select
ActiveWorkbook.Protect Password:="nosuke7254", Structure:=False, Windows:=True

Workbooks(OldFile).Close SaveChanges:=False
Workbooks(MyFile).Activate
ActiveWorkbook.Protect Password:="nosuke7254", Structure:=False, Windows:=True
ActiveSheet.Visible = False
'|fffd||33d1||fffd||fffd||fffd||6d1||fffd|--------------------------------------------------------------------------------------
Application.StatusBar = "|fffd||fffd||fffd|c|fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||303|f|fffd|[|fffd|^|fffd||68d|s|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||502||155||6d1||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B"
Application.DisplayAlerts = False
Workbooks(MyFile).Save
'|fffd||fffd||fffd|[|fffd|U|fffd|[|fffd|F|fffd||fffd|--------------------------------------------------------------------------------------
Application.ScreenUpdating = True
Application.StatusBar = "|fffd||fffd||fffd||fffd||fffd||103||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||602||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B"
    '|fffd||fffd||fffd|[|fffd|U|fffd|[|fffd|F|fffd||603|}|fffd|N|fffd||fffd||fffd||fffd||fffd|s
    Application.Run "IE|fffd||fffd||fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd||43181|[|fffd|U|fffd|[|fffd|F|fffd||fffd|"
'TOP|fffd|V|fffd|[|fffd|g|fffd||248||682||fffd||fffd||103|e|fffd|X|fffd|g|fffd|V|fffd|[|fffd|g|fffd||fffd|\|fffd||fffd| -----------------------------------------------------
Workbooks(MyFile).Worksheets("TOP").Visible = True
Workbooks(MyFile).Worksheets("test").Visible = False
Workbooks(MyFile).Protect Password:="nosuke7254", Structure:=False, Windows:=True
'|fffd||33d1||fffd||fffd||fffd||6d1||fffd|--------------------------------------------------------------------------------------
Application.DisplayAlerts = False
Workbooks(MyFile).Save

MsgBox "|fffd||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|I" & vbLf & vbLf & "|fffd||fffd||fffd|O|fffd||308||5d0||752||fffd|l|fffd||256||fffd||80aa||fffd||202||fffd||fffd||fffd||fffd|m|fffd|F|fffd||30f||fffd||493||fffd||fffd|J|fffd|n|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"

End Sub
Attribute VB_Name = "Module6"
Private Declare Sub Sleep Lib "kernel32" (ByVal dwMs As Long)

Attribute VB_Name = "Module7"
Declare Sub Sleep Lib "kernel32" (ByVal dwMs As Long)
Sub |fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||315|s|fffd|v|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||d3dc|()

Dim TotalNumber As Long
Dim Path As String
    Path = ActiveWorkbook.Path & "\" & "uploadedfiles"
Dim Buf As String, Cnt As Long

    
Set FSO = CreateObject("Scripting.FileSystemObject")
Dim count As Long

    count = 1

    TotalNumber = FSO.GetFolder(Path).Files.count
    Buf = Dir(Path & "\" & "*.txt.*")
    While Buf <> ""
        
        Application.StatusBar = "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||10e||fffd||fffd||fffd||fffd|@" & i & "/" & TotalNumber & "|fffd||96||682||303|t|fffd|@|fffd|C|fffd||fffd| " & Buf
        
        fil_path2 = ActiveWorkbook.Path & "\uploadedfiles\" & Buf
        Set fso2 = CreateObject("Scripting.FileSystemObject")
        Set FSO = CreateObject("Scripting.FileSystemObject")
        ' |fffd||fffd||fffd||753||fffd||fffd||fffd||fffd||30e||64fe|
        File_dtm2_1 = Now()
        ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30d||c42c||fffd||fffd||fffd||fffd||fffd||30e||64fe|
        File_dtm2_2 = ""
        File_dtm2_2 = fso2.getfile(fil_path2).DateLastModified
        '|fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1c9||fffd|
        Set fso2 = Nothing
        Set FSO = Nothing
        ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|o|fffd||7ce||fffd||fffd||502||fffd||fffd|r
        If DateDiff("h", File_dtm2_2, File_dtm2_1) < Sheets("Env").Cells(30, 2) Then
            GoTo Skip
        End If
            
        If Buf <> "" Then
            Kill Path & "\" & Buf
        End If
        
Skip:
        Buf = Dir()
        DoEvents
        Sleep 1
        count = count + 1
    Wend

    Application.StatusBar = "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||d3dc||fffd|I|fffd||fffd|"
    
    
    
    
    
    
        

        
        
        

        

End Sub
Attribute VB_Name = "Module8"
Attribute VB_Name = "Module9"
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' \zUA
' 4om8{
' K*gK*,j$^
' jy?E
' m.+-

INQUEST-PP=macro
