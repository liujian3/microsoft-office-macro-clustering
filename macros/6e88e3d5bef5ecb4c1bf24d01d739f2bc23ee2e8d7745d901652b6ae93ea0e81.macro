Attribute VB_Name = "Archivio_Sezioni"
Option Explicit

Sub SalvaInArchivio()

Dim Riga As Integer
Dim Colonna As Integer
Dim Scelta As Integer

Scelta = MsgBox("Vuoi salvare il profilo in archivio?", vbInformation + vbYesNo, "Archivio profili")

        
If Scelta = 6 Then
        
        
        'Acquisisci riga libera
        Riga = 8 'Inizializza la riga
        
        While Cells(Riga, 1) <> ""
        
          Riga = Riga + 1
          
        Wend


    'Controlla se c'|fffd| spazio in archivio
    If Riga <= 16 Then
    
            'Salva i dati del profilo
            For Colonna = 1 To 19
             
            
             Cells(Riga, Colonna).Value = Cells(6, Colonna).Value
            
            Next Colonna
            
          MsgBox "Sezione aggiunta all'archivio. La troverai alla fine dell'elenco a discesa dei profili nei moduli di verifica.", vbInformation, "Archivio Sezioni"
            
    Else
    
      MsgBox "L'archivio |fffd| pieno. Eliminare prima una sezione.", vbCritical, "Archivio profili"
    
    End If

Else: End If

End Sub


Sub MostraFormArchivio()
'Chiama il form Elimina/Modifica

   Modifica_Elimina_Sez.Show
  

End Sub
Attribute VB_Name = "Bottone_OnOff"
Option Explicit

Sub BottoneOnOff01()


  
  If Range("I4").Value = 1 Then
  
  Range("I4").Value = -1
  
  Else
  
  Range("I4").Value = 1
  
  End If
  
  

End Sub

Sub BottoneOnOff02()

  
  If Range("I5").Value = 1 Then
  
  Range("I5").Value = -1
  
  Else
  
  Range("I5").Value = 1
  
  End If

End Sub

Sub BottoneOnOff03()

  
  If Range("I6").Value = 1 Then
  
  Range("I6").Value = -1
  
  Else
  
  Range("I6").Value = 1
  
  End If

End Sub


Sub BottoneOnOff04()

  
  If Range("I7").Value = 1 Then
  
  Range("I7").Value = -1
  
  Else
  
  Range("I7").Value = 1
  
  End If

End Sub
Attribute VB_Name = "Comandi_Menu"
Option Explicit

Sub Tasto01()
Dim IdTasto As Integer
Dim NomeFoglio As String
  On Error GoTo VersioneFree
      '----------------------
      'ASSEGNA QUI L'ID TASTO
      '----------------------
      IdTasto = 1
      Range("C4").Value = IdTasto: NomeFoglio = Range("C5").Value: Sheets(NomeFoglio).Select
  Exit Sub
  
  'Nella versione free visualizza la pagina promo
  'quando clicchi su un modulo che non esiste
VersioneFree:

  MsgBox "Questa funzionalit|fffd| |fffd| disponibile solo nella versione PREMIUM" & _
Chr(13) & "Scaricala adesso (si aprir|fffd| una pagina web)", vbInformation, "Ver.Steel."
    
         'Apri la pagina di vendita
         Sheets("Novit|fffd|").Range("B8").Hyperlinks(1).Follow NewWindow:=False, AddHistory:=True
    
   
End Sub

Sub Tasto02()
Dim IdTasto As Integer
Dim NomeFoglio As String
  On Error GoTo VersioneFree
      '----------------------
      'ASSEGNA QUI L'ID TASTO
      '----------------------
      IdTasto = 2
      Range("C4").Value = IdTasto: NomeFoglio = Range("C5").Value: Sheets(NomeFoglio).Select
  Exit Sub
  
  'Nella versione free visualizza la pagina promo
  'quando clicchi su un modulo che non esiste
VersioneFree:

  MsgBox "Questa funzionalit|fffd| |fffd| disponibile solo nella versione PREMIUM" & _
Chr(13) & "Scaricala adesso (si aprir|fffd| una pagina web)", vbInformation, "Ver.Steel."
    
         'Apri la pagina di vendita
         Sheets("Novit|fffd|").Range("B8").Hyperlinks(1).Follow NewWindow:=False, AddHistory:=True
    
   
End Sub

Sub Tasto03()
Dim IdTasto As Integer
Dim NomeFoglio As String
  On Error GoTo VersioneFree
      '----------------------
      'ASSEGNA QUI L'ID TASTO
      '----------------------
      IdTasto = 3
      Range("C4").Value = IdTasto: NomeFoglio = Range("C5").Value: Sheets(NomeFoglio).Select
  Exit Sub
  
  'Nella versione free visualizza la pagina promo
  'quando clicchi su un modulo che non esiste
VersioneFree:

  MsgBox "Questa funzionalit|fffd| |fffd| disponibile solo nella versione PREMIUM" & _
Chr(13) & "Scaricala adesso (si aprir|fffd| una pagina web)", vbInformation, "Ver.Steel."
    
         'Apri la pagina di vendita
         Sheets("Novit|fffd|").Range("B8").Hyperlinks(1).Follow NewWindow:=False, AddHistory:=True
    
   
End Sub

Sub Tasto04()
Dim IdTasto As Integer
Dim NomeFoglio As String
  On Error GoTo VersioneFree
      '----------------------
      'ASSEGNA QUI L'ID TASTO
      '----------------------
      IdTasto = 4
      Range("C4").Value = IdTasto: NomeFoglio = Range("C5").Value: Sheets(NomeFoglio).Select
  Exit Sub
  
  'Nella versione free visualizza la pagina promo
  'quando clicchi su un modulo che non esiste
VersioneFree:

  MsgBox "Questa funzionalit|fffd| |fffd| disponibile solo nella versione PREMIUM" & _
Chr(13) & "Scaricala adesso (si aprir|fffd| una pagina web)", vbInformation, "Ver.Steel."
    
         'Apri la pagina di vendita
         Sheets("Novit|fffd|").Range("B8").Hyperlinks(1).Follow NewWindow:=False, AddHistory:=True
    
   
End Sub

Sub Tasto05()
Dim IdTasto As Integer
Dim NomeFoglio As String
  On Error GoTo VersioneFree
      '----------------------
      'ASSEGNA QUI L'ID TASTO
      '----------------------
      IdTasto = 5
      Range("C4").Value = IdTasto: NomeFoglio = Range("C5").Value: Sheets(NomeFoglio).Select
  Exit Sub
  
  'Nella versione free visualizza la pagina promo
  'quando clicchi su un modulo che non esiste
VersioneFree:

  MsgBox "Questa funzionalit|fffd| |fffd| disponibile solo nella versione PREMIUM" & _
Chr(13) & "Scaricala adesso (si aprir|fffd| una pagina web)", vbInformation, "Ver.Steel."
    
         'Apri la pagina di vendita
         Sheets("Novit|fffd|").Range("B8").Hyperlinks(1).Follow NewWindow:=False, AddHistory:=True
    
   
End Sub

Sub Tasto06()
Dim IdTasto As Integer
Dim NomeFoglio As String
  On Error GoTo VersioneFree
      '----------------------
      'ASSEGNA QUI L'ID TASTO
      '----------------------
      IdTasto = 6
      Range("C4").Value = IdTasto: NomeFoglio = Range("C5").Value: Sheets(NomeFoglio).Select
  Exit Sub
  
  'Nella versione free visualizza la pagina promo
  'quando clicchi su un modulo che non esiste
VersioneFree:

  MsgBox "Questa funzionalit|fffd| |fffd| disponibile solo nella versione PREMIUM" & _
Chr(13) & "Scaricala adesso (si aprir|fffd| una pagina web)", vbInformation, "Ver.Steel."
    
         'Apri la pagina di vendita
         Sheets("Novit|fffd|").Range("B8").Hyperlinks(1).Follow NewWindow:=False, AddHistory:=True
    
   
End Sub

Sub Tasto07()
Dim IdTasto As Integer
Dim NomeFoglio As String
  On Error GoTo VersioneFree
      '----------------------
      'ASSEGNA QUI L'ID TASTO
      '----------------------
      IdTasto = 7
      Range("C4").Value = IdTasto: NomeFoglio = Range("C5").Value: Sheets(NomeFoglio).Select
  Exit Sub
  
  'Nella versione free visualizza la pagina promo
  'quando clicchi su un modulo che non esiste
VersioneFree:

  MsgBox "Questa funzionalit|fffd| |fffd| disponibile solo nella versione PREMIUM" & _
Chr(13) & "Scaricala adesso (si aprir|fffd| una pagina web)", vbInformation, "Ver.Steel."
    
         'Apri la pagina di vendita
         Sheets("Novit|fffd|").Range("B8").Hyperlinks(1).Follow NewWindow:=False, AddHistory:=True
    
   
End Sub

Sub Tasto08()
Dim IdTasto As Integer
Dim NomeFoglio As String
  On Error GoTo VersioneFree
      '----------------------
      'ASSEGNA QUI L'ID TASTO
      '----------------------
      IdTasto = 8
      Range("C4").Value = IdTasto: NomeFoglio = Range("C5").Value: Sheets(NomeFoglio).Select
  Exit Sub
  
  'Nella versione free visualizza la pagina promo
  'quando clicchi su un modulo che non esiste
VersioneFree:

  MsgBox "Questa funzionalit|fffd| |fffd| disponibile solo nella versione PREMIUM" & _
Chr(13) & "Scaricala adesso (si aprir|fffd| una pagina web)", vbInformation, "Ver.Steel."
    
         'Apri la pagina di vendita
         Sheets("Novit|fffd|").Range("B8").Hyperlinks(1).Follow NewWindow:=False, AddHistory:=True
    
   
End Sub

Sub Tasto09()
Dim IdTasto As Integer
Dim NomeFoglio As String
  On Error GoTo VersioneFree
      '----------------------
      'ASSEGNA QUI L'ID TASTO
      '----------------------
      IdTasto = 9
      Range("C4").Value = IdTasto: NomeFoglio = Range("C5").Value: Sheets(NomeFoglio).Select
  Exit Sub
  
  'Nella versione free visualizza la pagina promo
  'quando clicchi su un modulo che non esiste
VersioneFree:

  MsgBox "Questa funzionalit|fffd| |fffd| disponibile solo nella versione PREMIUM" & _
Chr(13) & "Scaricala adesso (si aprir|fffd| una pagina web)", vbInformation, "Ver.Steel."
    
         'Apri la pagina di vendita
         Sheets("Novit|fffd|").Range("B8").Hyperlinks(1).Follow NewWindow:=False, AddHistory:=True
    
   
End Sub

Sub Tasto10()
Dim IdTasto As Integer
Dim NomeFoglio As String
  On Error GoTo VersioneFree
      '----------------------
      'ASSEGNA QUI L'ID TASTO
      '----------------------
      IdTasto = 10
      Range("C4").Value = IdTasto: NomeFoglio = Range("C5").Value: Sheets(NomeFoglio).Select
  Exit Sub
  
  'Nella versione free visualizza la pagina promo
  'quando clicchi su un modulo che non esiste
VersioneFree:

  MsgBox "Questa funzionalit|fffd| |fffd| disponibile solo nella versione PREMIUM" & _
Chr(13) & "Scaricala adesso (si aprir|fffd| una pagina web)", vbInformation, "Ver.Steel."
    
         'Apri la pagina di vendita
         Sheets("Novit|fffd|").Range("B8").Hyperlinks(1).Follow NewWindow:=False, AddHistory:=True
    
   
End Sub

Sub Tasto11()
Dim IdTasto As Integer
Dim NomeFoglio As String
  On Error GoTo VersioneFree
      '----------------------
      'ASSEGNA QUI L'ID TASTO
      '----------------------
      IdTasto = 11
      Range("C4").Value = IdTasto: NomeFoglio = Range("C5").Value: Sheets(NomeFoglio).Select
  Exit Sub
  
  'Nella versione free visualizza la pagina promo
  'quando clicchi su un modulo che non esiste
VersioneFree:

  MsgBox "Questa funzionalit|fffd| |fffd| disponibile solo nella versione PREMIUM" & _
Chr(13) & "Scaricala adesso (si aprir|fffd| una pagina web)", vbInformation, "Ver.Steel."
    
         'Apri la pagina di vendita
         Sheets("Novit|fffd|").Range("B8").Hyperlinks(1).Follow NewWindow:=False, AddHistory:=True
    
   
End Sub

Attribute VB_Name = "Controllo_Aggiornam"
Option Explicit

Sub SbloccaPremium()
Attribute SbloccaPremium.VB_ProcData.VB_Invoke_Func = " \n14"
'
'Rimanda alla pagina di vendita
'

Dim Premium As Boolean 'Controlla se |fffd| vero o falso

Premium = Sheets("Novit|fffd|").Range("B4").Value


        If Premium Then
        
           MsgBox "Stai gi|fffd| utilizzando la versione Premium.", vbInformation, "Sblocca Premium"
           
           
        Else:
        
            MsgBox "Si aprir|fffd| una pagina web", vbInformation, "Sblocca Premium"
            Sheets("Novit|fffd|").Range("B8").Hyperlinks(1).Follow NewWindow:=False, AddHistory:=True
        
        End If

End Sub


Sub ControlloAggiornamenti()

Dim Versione As String
Dim Premium As Boolean 'Controlla se |fffd| vero o falso


    Premium = Sheets("Novit|fffd|").Range("B4").Value
    Versione = Sheets("Novit|fffd|").Range("B5").Value
    
    MsgBox "Stai utilizzando la versione: " & Versione _
    & Chr(13) & "Controllare l'ultima versione disponibile" _
    & Chr(13) & "(Si aprir|fffd| una pagina web)", vbInformation, "Controllo aggiornamenti"
    
    
        'Apri la pagina di aggiornamento
        If Premium Then
          
          'Aggiorna versione Premium
          Sheets("Novit|fffd|").Range("B6").Hyperlinks(1).Follow NewWindow:=False, AddHistory:=True
        
        Else:
        
          'Aggiornamento versione base
          Sheets("Novit|fffd|").Range("B7").Hyperlinks(1).Follow NewWindow:=False, AddHistory:=True
        
        End If

End Sub


Attribute VB_Name = "Foglio1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Foglio12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Foglio13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Foglio17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Foglio2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Foglio31"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Foglio32"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Foglio38"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Foglio4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Foglio5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Foglio6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Foglio7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Foglio8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Foglio9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Materiali"
Option Explicit

'Routine che permettono di tornare al foglio di origine quando si aggiungono materiali

Sub VaiAiMateriali()

Dim Nome As String

 Nome = ActiveSheet.Name
 
 Worksheets("Materiali").Range("B3").Value = Nome
 
 Worksheets("Materiali").Select

End Sub

Sub TornaIndietro()
'Ritorna al modulo di origine

Dim Nome As String

 Nome = Range("B3").Value

 Sheets(Nome).Select

End Sub
Attribute VB_Name = "Modifica_Elimina_Sez"
Attribute VB_Base = "0{A218CDF3-0520-400D-BB3B-D17184C4DF83}{412FB4A7-7DAC-455F-A477-20BB7D7257D7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit



Private Sub UserForm_Activate()
'Carica l'elenco sezioni all'avvio

Dim NomeSezione As String
Dim Riga As Integer

'Inizializza riga
Riga = 8

While Cells(Riga, 1).Value <> "" And Riga <= 16

 Elenco_sezioni.AddItem Cells(Riga, 1).Value
 
 Riga = Riga + 1
 
 Wend
 


End Sub

Private Sub Comando_Modifica_Click()
'Carica le propriet|fffd| della sezione per la modifica


End Sub

Private Sub Comando_Elimina_Click()
'Elimina la sezione

Dim RigaDaCancellare As Integer
Dim Riga As Integer
Dim Colonna As Integer
Dim Scelta As Integer

'Disattiva il calcolo automatico per velocizzare le operazioni
Application.Calculation = xlManual
Application.ScreenUpdating = False


'Controlla se |fffd| stata selezionata una sezione
If Elenco_sezioni.ListIndex > -1 Then
   
   'Chiedi conferma
   Scelta = MsgBox("Vuoi eliminare il profilo?", vbCritical + vbYesNo, "Archivio profili")

        If Scelta = 6 And Elenco_sezioni.ListIndex > -1 Then
        
                'Acquisisci la riga da cancellare
                RigaDaCancellare = Elenco_sezioni.ListIndex + 1 + 7
                
                For Colonna = 1 To 19
                
                  Cells(RigaDaCancellare, Colonna).ClearContents
                  
                Next
                
                'Rimuove l'elemento selezionato
                Elenco_sezioni.RemoveItem Elenco_sezioni.ListIndex
        
                
               For Riga = RigaDaCancellare To 15
                
                'Copia di una posizione in su
                For Colonna = 1 To 19
                
                  Cells(Riga, Colonna).Value = Cells(Riga + 1, Colonna).Value
                  
                Next
                
                 'Elimina la riga successiva
                 For Colonna = 1 To 19
                
                  Cells(Riga + 1, Colonna).ClearContents
                  
                Next
                
                Next Riga
        
        
        Else: End If
Else
   MsgBox "Selezionare un profilo.", vbExclamation, "Archivio sezioni"
End If


'Riattiva il calcolo automatico per velocizzare le operazioni
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True


End Sub


Private Sub CommandButton_Chiudi_Click()

Unload Me


End Sub





Attribute VB_Name = "NuovoProfilo"
Option Explicit

'Routine che permettono di tornare al foglio di origine quando si aggiungono profili

Sub VaiAiNuoviProfili()

Dim Nome As String

 Nome = ActiveSheet.Name
 
 Worksheets("NuovoProfilo").Range("B3").Value = Nome
 
 Worksheets("NuovoProfilo").Select

End Sub

Sub TornaIndietro_NP()
'Ritorna al modulo di origine

Dim Nome As String

 Nome = Range("B3").Value

 Sheets(Nome).Select

End Sub
Attribute VB_Name = "Questa_cartella_di_lavoro"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Private Sub Workbook_Open()
    
    
    Dim NomePrimoFoglio As String
    
    
    '*******************************************
    'Inserisci il nome del primo foglio di input
    
     NomePrimoFoglio = "Start"
     
     '****************************************
     
      'Passa a schermo intero
      Application.DisplayFullScreen = True
                 
      'L'applicazione |fffd| attiva, mostra l'input
       Sheets(NomePrimoFoglio).Select

    
End Sub


Private Sub ControllaVersioneExcel()
    'Controlla la versione del file e la versione di Excel
    'Se il file |fffd| xls, ma Excel non |fffd| 2007, chiude tutto.
    'Se il file non |fffd| xls, ma Excel |fffd| 2007, chiude tutto e avvisa di utilizzare il file specifico


Dim FormatoFile As String
Dim VersioneExcel As String

FormatoFile = Application.ActiveWorkbook.FileFormat 'Versione del file
VersioneExcel = Application.Version  'Versione Excel, Excel 2007 -> codice 12

'Controlla il formato del file [xls o xlsm]
'il formato .xls ha codice 56

    'controlla se il formato |fffd| xls e se Excel |fffd| 2007, in caso contrario chiude tutto
    If FormatoFile = 56 And VersioneExcel <> "12.0" Then
    
        MsgBox "Questa versione dell'applicazione pu|fffd| essere utilizzata solo su Microsoft Excel 2007." _
        & Chr(13) & "Versione Excel in uso: " & VersioneExcel _
        , vbExclamation, "Attenzione"
     
        'Chiudi l'applicazione senza salvare
        Application.DisplayAlerts = False
        ThisWorkbook.Close SaveChanges:=False
        Application.DisplayAlerts = True
    
    
       Exit Sub
    
    Else: End If

  'controlla se il formato |fffd| xlsm e se Excel |fffd| diverso da 2007, in caso contrario chiude tutto
    If FormatoFile <> 56 And VersioneExcel = "12.0" Then
    
        MsgBox "Stai utilizzando Microsoft Excel 2007. Utilizzare il file dell'applicazione specifico per questa versione." _
        & Chr(13) & "Versione Excel in uso: " & VersioneExcel _
        , vbExclamation, "Attenzione"
     
        'Chiudi l'applicazione senza salvare
        Application.DisplayAlerts = False
        ThisWorkbook.Close SaveChanges:=False
        Application.DisplayAlerts = True
    
    
       Exit Sub
    
    Else: End If


End Sub


Private Sub Workbook_BeforeClose(Cancel As Boolean)

    'Passa a schermo intero
     Application.DisplayFullScreen = False
    'Application.DisplayFormulaBar = True


End Sub

Attribute VB_Name = "Recupera_CPU_HD_Seriale"
Option Explicit

'Funzioni per recuperare i seriali di Scheda Madre e CPU

Function SystemSerialNumber() As String


Dim mother_boards As Variant
Dim board As Variant
Dim wmi As Variant
Dim serial_numbers As String

'Se la lettura del seriale va in errore, restituisci la stringa "Errore01"
On Error GoTo EsciConErrore


    ' Get the Windows Management Instrumentation object.
    Set wmi = GetObject("WinMgmts:")

    ' Get the "base boards" (mother boards).
    Set mother_boards = wmi.InstancesOf("Win32_BaseBoard")
    For Each board In mother_boards
        serial_numbers = serial_numbers & ", " & _
            board.SerialNumber
    Next board
    If Len(serial_numbers) > 0 Then serial_numbers = _
        Mid$(serial_numbers, 3)

    SystemSerialNumber = serial_numbers
    
    Exit Function
    
EsciConErrore:
SystemSerialNumber = "ErroreSchedaMadre_"

    
End Function


Function CpuId() As String


Dim computer As String
Dim wmi As Variant
Dim processors As Variant
Dim cpu As Variant
Dim cpu_ids As String

'Se la lettura del seriale va in errore, restituisci la stringa "Errore01"
On Error GoTo EsciConErrore

    computer = "."
    Set wmi = GetObject("winmgmts:" & _
        "{impersonationLevel=impersonate}!\\" & _
        computer & "\root\cimv2")
    Set processors = wmi.ExecQuery("Select * from " & _
        "Win32_Processor")

    For Each cpu In processors
        cpu_ids = cpu_ids & ", " & cpu.ProcessorId
    Next cpu
    If Len(cpu_ids) > 0 Then cpu_ids = Mid$(cpu_ids, 3)

    CpuId = cpu_ids

  Exit Function

EsciConErrore:
CpuId = "ErroreCPU"
    
    
End Function

Attribute VB_Name = "Stampa"
Option Explicit

Sub VaiAllaStampa()
'
' Vai alla pagina di stampa per la versione PREMIUM
' altrimenti vai alla pagina Promo


Dim NomeFoglioStampa As String
Dim Scelta As Integer

           NomeFoglioStampa = Range("B3").Value
         
           On Error GoTo VersioneFree
        
           Sheets(NomeFoglioStampa).Select
           Range("A1").Select
          
          'esci dallo schermo intero
           Application.DisplayFullScreen = False
         
          Exit Sub
  
'Nella veriosne free visualizza la pagina promo
'quando clicchi sul pulsante stampa
VersioneFree:

MsgBox "Questa funzionalit|fffd| |fffd| disponibile solo nella versione PREMIUM" & _
Chr(13) & "Scaricala adesso (si aprir|fffd| una pagina web)", vbInformation, "Ver.Steel."
    
         'Apri la pagina di vendita
         Sheets("Novit|fffd|").Range("B8").Hyperlinks(1).Follow NewWindow:=False, AddHistory:=True
    
   
End Sub


Sub IndietroStampa()
'
' Dalla pagina di stampa, torna al foglio sorgente
'

   'Torna a schermo intero
   Application.DisplayFullScreen = True
   
   Dim NomeFoglioStampa As String

   NomeFoglioStampa = Range("B1").Value
   
   Sheets(NomeFoglioStampa).Select
   
   
End Sub

Sub CopiaInAppunti()
'Copia le celle della relazione nella clipboard
'per poterle incollare in Word
'Individua in automatico le righe utilizzate nella relazione

    Dim Lunghezza As Integer
    
    'Acquisisci righe utilizzate
    Lunghezza = ActiveSheet.UsedRange.Rows.Count
    
    'Copia negli appunti
    ActiveSheet.Range(Cells(51, 1), Cells(Lunghezza - 1, 9)).Copy
    
    
    MsgBox "I dati sono stati copiati negli appunti." & Chr(13) & "Apri il tuo editor di testo e incolla i dati in una pagina vuota." & Chr(13) & "Tasto destro -> Incolla oppure Ctrl+V da tastiera.", vbInformation, "Esporta in Word"

End Sub



Attribute VB_Name = "UserForm_Help01"
Attribute VB_Base = "0{FCD51D53-636A-44E3-9889-838EFAEC22B0}{4DFE3659-43D7-40A0-90EB-5745643F6987}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub CommandButton1_OK_Click()

 
UserForm_Help01.Hide

End Sub

Attribute VB_Name = "Wally"
Option Explicit

Sub VaiAMuratura()

   Dim NomeFoglio As String
   
   NomeFoglio = ActiveSheet.Name
   
   Sheets("Muratura").Select
   
     Application.ScreenUpdating = False
   
   Sheets("Muratura").Range("B4").Value = NomeFoglio
   
     Application.ScreenUpdating = True


End Sub



Sub CopiaDatiMuratura()

  Dim NomeFoglio As String
  Dim Valori(9)
  Dim i As Integer
  
  Application.ScreenUpdating = False
  
  NomeFoglio = Range("B4").Value
  
  'Acquisisci dati
  For i = 0 To 8
  
     Valori(i) = Cells(5 + i, 2).Value
     
  Next i

 Sheets(NomeFoglio).Select
 
   'Copia dati
   For i = 0 To 8
  
     Cells(4 + i, 2).Value = Valori(i)
     
  Next i
  
   Application.ScreenUpdating = True

MsgBox "Dati della muratura aggiornati", vbInformation, "Wally"

End Sub



Sub Mostra_Help01()


 UserForm_Help01.Show
 
End Sub










' InQuest injected base64 decoded content
' *'xL\z

INQUEST-PP=macro
