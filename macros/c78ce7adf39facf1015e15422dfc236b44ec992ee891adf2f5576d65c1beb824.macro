Attribute VB_Name = "Iteration"




Sub IterateEquity()

Dim i As Integer
Dim j As Integer, l As Integer
Dim myMRP As Range
Dim SaveMRP As Variant, SaveBasiszins As Variant, SaveWachstum As Variant
Dim Abbruch As Boolean

Abbruch = False


'Application.Calculation = xlCalculationSemiautomatic
Application.ScreenUpdating = False

Tabelle1.Unprotect "bilanzwert"
Tabelle4.Unprotect "bilanzwert"
Tabelle5.Unprotect "bilanzwert"
Tabelle6.Unprotect "bilanzwert"
Tabelle7.Unprotect "bilanzwert"

'---------------------------------------------------------------
'Aufl|fffd|sung der Iteration in der Planungsrechnung
'---------------------------------------------------------------

i = 1

Do

Tabelle5.Range("PasteGewSt").Value = Tabelle5.Range("CopyGewSt").Value
Tabelle6.Range("PasteKSt").Value = Tabelle6.Range("CopyKSt").Value
Tabelle7.Range("PasteKapital").Value = Tabelle7.Range("CopyKapital").Value

Application.StatusBar = "Iteration Planungsrechnung: Runde " & i & " von maximal 100 abgeschlossen!"
i = i + 1

If i > 100 Then
MsgBox "Die Eingabewerte in der Planungsrechnung f|fffd|hren zu keiner eindeutigen L|fffd|sung in der Steuerberechnung!"
Application.ScreenUpdating = True
Application.StatusBar = ""

Exit Do
End If

Loop Until Tabelle5.Range("CheckGewSt").Value + Tabelle6.Range("CheckKSt").Value + Tabelle7.Range("CheckKapital").Value = 0


'-----------------------------------------
'Aufl|fffd|sung der Iteration in der Bewertung
'-----------------------------------------

'Setze Sensitivit|fffd|tstabellen auf "n/a" als Ausgangswert

For l = 1 To 8
For j = 1 To 5

    Tabelle1.Range("Sensitivities_Wachstum").Cells(l, j).Value = "n/a"
    Tabelle1.Range("Sensitivities_MRP").Cells(l, j).Value = "n/a"
Next j
Next l


'L|fffd|se Iteration im Base Case
i = 1
Do

Tabelle4.Range("Paste").Value = Tabelle4.Range("Copy").Value
Application.StatusBar = "Iteration Bewertung: Runde " & i & " von maximal 100 abgeschlossen!"
i = i + 1

If i > 100 Then
MsgBox "Eingabewerte f|fffd|hren in mindestens einem Planjahr zu keinem positiven Marktwert des Eigenkapitals. Die Berechnung wird abgebrochen. Bitte |fffd|berpr|fffd|fen Sie die Eingabedaten."
Application.ScreenUpdating = True
Application.StatusBar = ""
Abbruch = True
Exit Do
End If


Loop Until Tabelle4.Range("CheckIteration").Value = 0

'--------------------------------------
'L|fffd|se Iteration bei den Sensitivit|fffd|ten

If Abbruch = False Then


Set myMRP = Tabelle1.Range("MRP")


SaveMRP = myMRP.Value
SaveWachstum = Tabelle1.Range("Wachstumsabschlag").Value
SaveBasiszins = Tabelle1.Range("rng_basiszinssatz").Value



'Erste Runde
For l = 1 To 8
For j = 1 To 5

Tabelle1.Range("Wachstumsabschlag").Value = Tabelle1.Range("Sens_Wachstum_RowInput").Cells(1, j)
Tabelle1.Range("rng_basiszinssatz").Value = Tabelle1.Range("Sens_Wachstum_ColumnInput").Cells(l, 1)

    i = 1
    Do

    Tabelle4.Range("Paste").Value = Tabelle4.Range("Copy").Value
    Application.StatusBar = "Sensitiv|fffd|ten werden berechnet!"
    i = i + 1

    If i > 100 Then Exit Do

Tabelle1.Range("Sensitivities_Wachstum").Cells(l, j).Value = Tabelle4.Range("Wert").Value

Loop Until Tabelle4.Range("CheckIteration").Value = 0

Next j
Next l

'Zweite Runde



myMRP.Value = SaveMRP
Tabelle1.Range("Wachstumsabschlag").Value = SaveWachstum
Tabelle1.Range("rng_basiszinssatz").Value = SaveBasiszins


For l = 1 To 8
For j = 1 To 5


myMRP.Value = Tabelle1.Range("Sens_MRP_RowInput").Cells(1, j)
Tabelle1.Range("rng_basiszinssatz").Value = Tabelle1.Range("Sens_MRP_ColumnInput").Cells(l, 1)

    i = 1
    Do

    Tabelle4.Range("Paste").Value = Tabelle4.Range("Copy").Value
    Application.StatusBar = "Sensitiv|fffd|ten werden berechnet!"
    i = i + 1

    If i > 50 Then Exit Do

Tabelle1.Range("Sensitivities_MRP").Cells(l, j).Value = Tabelle4.Range("Wert").Value

Loop Until Tabelle4.Range("CheckIteration").Value = 0

Next j
Next l

'Base Case wiederherstellen

myMRP.Value = SaveMRP
Tabelle1.Range("Wachstumsabschlag").Value = SaveWachstum
Tabelle1.Range("rng_basiszinssatz").Value = SaveBasiszins

i = 1
Do

Tabelle4.Range("Paste").Value = Tabelle4.Range("Copy").Value
Application.StatusBar = "Iteration Bewertung: Runde " & i & " von maximal 100 abgeschlossen!"
i = i + 1

If i > 100 Then
Application.StatusBar = ""
Exit Do
End If


Loop Until Tabelle4.Range("CheckIteration").Value = 0

End If

'----------------------------------------------------------

Application.StatusBar = ""

Application.Calculation = xlCalculationAutomatic

Tabelle4.Protect "bilanzwert"
Tabelle5.Protect "bilanzwert"
Tabelle6.Protect "bilanzwert"
Tabelle7.Protect "bilanzwert"

Application.ScreenUpdating = True


End Sub


Attribute VB_Name = "Module1"
Option Explicit

Sub Macro6()
Attribute Macro6.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro6 Macro
'

'
End Sub
Attribute VB_Name = "Module2"
Sub Macro3()
Attribute Macro3.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro3 Macro
'

'
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    Selection.Borders(xlEdgeRight).LineStyle = xlNone
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
End Sub
Attribute VB_Name = "Module21"
Sub addValidation()

    Dim rngCell As Range
    For Each rngCell In ActiveSheet.UsedRange.Cells
        If rngCell.Style = "Table Input" Or rngCell.Style = "Table Input Italic" Then
            If IsNumeric(rngCell.Value) Then
                With rngCell.Validation
                    .Delete
                    .Add Type:=xlValidateDecimal, AlertStyle:=xlValidAlertStop, Operator _
                    :=xlBetween, Formula1:="-999999999999", Formula2:="999999999999"
                    .IgnoreBlank = True
                    .InCellDropdown = True
                    .InputTitle = ""
                    .ErrorTitle = "Ung|fffd|ltige Zahl"
                    .InputMessage = ""
                    .ErrorMessage = "Bitte geben Sie in dieser Zelle eine Zahl ein!"
                    .ShowInput = True
                    .ShowError = True
                End With
            End If
        End If
    Next
End Sub

Attribute VB_Name = "Module4"
Sub Macro4()
Attribute Macro4.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro4 Macro
'

'
    ActiveWindow.View = xlNormalView
End Sub
Attribute VB_Name = "Module5"
Sub Macro5()
Attribute Macro5.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro5 Macro
'

'
    ActiveSheet.Shapes.Range(Array("Straight Connector 103")).Select
    Selection.ShapeRange.IncrementLeft 27
    Range("H1").Select
    ActiveSheet.Shapes.Range(Array("grpCalc")).Select
    ActiveSheet.Shapes.Range(Array("Straight Connector 103")).Select
    Selection.ShapeRange.IncrementLeft -3.75
    ActiveSheet.Shapes.Range(Array("grpCalc")).Select
    Selection.ShapeRange.IncrementLeft 0.75
    Selection.ShapeRange.IncrementLeft 0.75
    Selection.ShapeRange.IncrementLeft 0.75
    Range("J30").Select
    ActiveWindow.SmallScroll Down:=3
    Range("F36").Select
    ActiveWindow.SmallScroll Down:=18
    ActiveSheet.Shapes.Range(Array("grpCalc")).Select
    ActiveSheet.Shapes.Range(Array("Straight Connector 103")).Select
    Selection.ShapeRange.IncrementLeft 0.75
    Range("S1").Select
    Sheets("GuV").Select
    ActiveWindow.LargeScroll ToRight:=-1
    Sheets("Annahmen").Select
End Sub
Attribute VB_Name = "Module6"
Option Explicit

Sub Macro1()
Attribute Macro1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro1 Macro
'

'
    Selection.Rows.Ungroup
    Selection.Columns.Ungroup
End Sub
Sub extendThisRange()
Attribute extendThisRange.VB_ProcData.VB_Invoke_Func = "q\n14"

    Dim intStart As Integer
    Dim intEnd As Integer
    Dim strStartCol As String
    Dim strEndCol As String
    
    intStart = Selection.Row
    intEnd = Selection.Rows(Selection.Rows.Count).Row
    strStartCol = Replace(Left(Selection.Cells(1, 1).Address, 2), "$", "")
    strEndCol = Replace(Left(Selection.Cells(1, 19).Address, 3), "$", "")
    
    Selection.AutoFill Destination:=Range(strStartCol & intStart & ":" & strEndCol & intEnd), Type:=xlFillCopy

End Sub

Sub addCF()
    Dim intStart As Integer
    Dim intEnd As Integer
    Dim strStartCol As String
    Dim strEndCol As String
    Dim rng As Range
    
    intStart = Selection.Row
    intEnd = Selection.Rows(Selection.Rows.Count).Row
    strStartCol = Replace(Left(Selection.Cells(1, 1).Address, 2), "$", "")
    strEndCol = Replace(Left(Selection.Cells(1, 19).Address, 3), "$", "")
    
    Set rng = Range(strStartCol & intStart & ":" & strEndCol & intEnd)
    rng.FormatConditions.Delete
    rng.FormatConditions.Add xlExpression, , "=" & Right(rng.Cells(1, 1).Address, Len(rng.Cells(1, 1).Address) - 1) & "="""""

    With rng.FormatConditions(rng.FormatConditions.Count)
        .SetFirstPriority
        With .Font
            .ThemeColor = xlThemeColorDark1
            .TintAndShade = 0
        End With
        With .Interior
            .Pattern = xlNone
            .TintAndShade = 0
            .PatternTintAndShade = 0
        End With
        .Borders(1).LineStyle = xlNone
        .Borders(2).LineStyle = xlNone
        .Borders(3).LineStyle = xlNone
        .Borders(4).LineStyle = xlNone

        
    End With
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()

    Dim wksDS As Worksheet
    Set wksDS = ThisWorkbook.Worksheets("Datasheet")
    If wksDS.Range("a1") = "Eingabe" Then
        Call modNavigation.navigateToInput
        Call modNavigation.showRespectiveLevelActions(wksDS.Range("A2"))
        Call modNavigation.navigateActions(wksDS.Range("a3"))
    Else
        Call modNavigation.navigateToOutput
        Call modNavigation.navigateOutputActions(wksDS.Range("a3"))
    End If
Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()

    Dim wksDS As Worksheet
    Set wksDS = ThisWorkbook.Worksheets("Datasheet")
    If wksDS.Range("a1") = "Eingabe" Then
        Call modNavigation.navigateToInput
        Call modNavigation.showRespectiveLevelActions(wksDS.Range("A2"))
        Call modNavigation.navigateActions(wksDS.Range("a3"))
    Else
        Call modNavigation.navigateToOutput
        Call modNavigation.navigateOutputActions(wksDS.Range("a3"))
    End If
Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Private Sub Worksheet_Activate()

    Dim wksDS As Worksheet
    Set wksDS = ThisWorkbook.Worksheets("Datasheet")
    If wksDS.Range("a1") = "Eingabe" Then
        Call modNavigation.navigateToInput
        Call modNavigation.showRespectiveLevelActions(wksDS.Range("A2"))
        Call modNavigation.navigateActions(wksDS.Range("a3"))
    Else
        Call modNavigation.navigateToOutput
        Call modNavigation.navigateOutputActions(wksDS.Range("a3"))
    End If
Application.ScreenUpdating = True
End Sub


Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()

    Dim wksDS As Worksheet
    Set wksDS = ThisWorkbook.Worksheets("Datasheet")
    If wksDS.Range("a1") = "Eingabe" Then
        Call modNavigation.navigateToInput
        Call modNavigation.showRespectiveLevelActions(wksDS.Range("A2"))
        Call modNavigation.navigateActions(wksDS.Range("a3"))
    Else
        Call modNavigation.navigateToOutput
        Call modNavigation.navigateOutputActions(wksDS.Range("a3"))
    End If
Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "Tabelle11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()

    Dim wksDS As Worksheet
    Set wksDS = ThisWorkbook.Worksheets("Datasheet")
    If wksDS.Range("a1") = "Eingabe" Then
        Call modNavigation.navigateToInput
        Call modNavigation.showRespectiveLevelActions(wksDS.Range("A2"))
        Call modNavigation.navigateActions(wksDS.Range("a3"))
    Else
        Call modNavigation.navigateToOutput
        Call modNavigation.navigateOutputActions(wksDS.Range("a3"))
    End If
Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()

    Dim wksDS As Worksheet
    Set wksDS = ThisWorkbook.Worksheets("Datasheet")
    If wksDS.Range("a1") = "Eingabe" Then
        Call modNavigation.navigateToInput
        Call modNavigation.showRespectiveLevelActions(wksDS.Range("A2"))
        Call modNavigation.navigateActions(wksDS.Range("a3"))
    Else
        Call modNavigation.navigateToOutput
        Call modNavigation.navigateOutputActions(wksDS.Range("a3"))
    End If
Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()

    Dim wksDS As Worksheet
    Set wksDS = ThisWorkbook.Worksheets("Datasheet")
    If wksDS.Range("a1") = "Eingabe" Then
        Call modNavigation.navigateToInput
        Call modNavigation.showRespectiveLevelActions(wksDS.Range("A2"))
        Call modNavigation.navigateActions(wksDS.Range("a3"))
    Else
        Call modNavigation.navigateToOutput
        Call modNavigation.navigateOutputActions(wksDS.Range("a3"))
    End If
Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()

    Dim wksDS As Worksheet
    Set wksDS = ThisWorkbook.Worksheets("Datasheet")
    If wksDS.Range("a1") = "Eingabe" Then
        Call modNavigation.navigateToInput
        Call modNavigation.showRespectiveLevelActions(wksDS.Range("A2"))
        Call modNavigation.navigateActions(wksDS.Range("a3"))
    Else
        Call modNavigation.navigateToOutput
        Call modNavigation.navigateOutputActions(wksDS.Range("a3"))
    End If
Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()

    Dim wksDS As Worksheet
    Set wksDS = ThisWorkbook.Worksheets("Datasheet")
    If wksDS.Range("a1") = "Eingabe" Then
        Call modNavigation.navigateToInput
        Call modNavigation.showRespectiveLevelActions(wksDS.Range("A2"))
        Call modNavigation.navigateActions(wksDS.Range("a3"))
    Else
        Call modNavigation.navigateToOutput
        Call modNavigation.navigateOutputActions(wksDS.Range("a3"))
    End If
Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()

    Dim wksDS As Worksheet
    Set wksDS = ThisWorkbook.Worksheets("Datasheet")
    If wksDS.Range("a1") = "Eingabe" Then
        Call modNavigation.navigateToInput
        Call modNavigation.showRespectiveLevelActions(wksDS.Range("A2"))
        Call modNavigation.navigateActions(wksDS.Range("a3"))
    Else
        Call modNavigation.navigateToOutput
        Call modNavigation.navigateOutputActions(wksDS.Range("a3"))
    End If
Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()

    Dim wksDS As Worksheet
    Set wksDS = ThisWorkbook.Worksheets("Datasheet")
    If wksDS.Range("a1") = "Eingabe" Then
        Call modNavigation.navigateToInput
        Call modNavigation.showRespectiveLevelActions(wksDS.Range("A2"))
        Call modNavigation.navigateActions(wksDS.Range("a3"))
    Else
        Call modNavigation.navigateToOutput
        Call modNavigation.navigateOutputActions(wksDS.Range("a3"))
    End If
Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()

    Dim wksDS As Worksheet
    Set wksDS = ThisWorkbook.Worksheets("Datasheet")
    If wksDS.Range("a1") = "Eingabe" Then
        Call modNavigation.navigateToInput
        Call modNavigation.showRespectiveLevelActions(wksDS.Range("A2"))
        Call modNavigation.navigateActions(wksDS.Range("a3"))
    Else
        Call modNavigation.navigateToOutput
        Call modNavigation.navigateOutputActions(wksDS.Range("a3"))
    End If
Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()

    Dim wksDS As Worksheet
    Set wksDS = ThisWorkbook.Worksheets("Datasheet")
    If wksDS.Range("a1") = "Eingabe" Then
        Call modNavigation.navigateToInput
        Call modNavigation.showRespectiveLevelActions(wksDS.Range("A2"))
        Call modNavigation.navigateActions(wksDS.Range("a3"))
    Else
        Call modNavigation.navigateToOutput
        Call modNavigation.navigateOutputActions(wksDS.Range("a3"))
    End If
Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'Private Sub Workbook_Activate()

 '   Call Enable_Disable_Options(False)
'End Sub

'Private Sub Workbook_Deactivate()

 '  Call Enable_Disable_Options(True)
'End Sub


Attribute VB_Name = "Work_mode"
Sub work_mode_on()

Dim Shit As Object


Application.EnableEvents = False
ActiveWindow.DisplayWorkbookTabs = True
ActiveWindow.DisplayHeadings = True

For Each Shit In ActiveWorkbook.Worksheets
Shit.Unprotect "bilanzwert"
Next

End Sub

Sub work_mode_off()

Dim Shit As Object


Application.EnableEvents = True
ActiveWindow.DisplayWorkbookTabs = False
ActiveWindow.DisplayHeadings = True

For Each Shit In ActiveWorkbook.Worksheets
Debug.Print Shit.Name

If Not Shit.Name = "Annahmen Listen" Then
If Not Shit.Name = "DataSheet" Then

Shit.Protect "bilanzwert"

End If
End If


Next

End Sub



Attribute VB_Name = "modCalcIcon"
Sub Macro2()
Attribute Macro2.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro2 Macro
'

'

End Sub

Sub spreadCalc()
    Dim wks As Worksheet
    Dim shpSRC As Shape
    
    Set shpSRC = Tabelle3.Shapes("grpCalc")
    
    For Each wks In ThisWorkbook.Worksheets
        If wks.Name <> "Annahmen Listen" And wks.Name <> "Bilanz" Then
            shpSRC.Copy
            wks.Activate
            wks.Paste
            wks.Shapes("grpCalc").Left = shpSRC.Left
            wks.Shapes("grpCalc").Top = shpSRC.Top
            wks.Shapes("grpCalc").Height = shpSRC.Height
            wks.Shapes("grpCalc").Width = shpSRC.Width
        End If
    Next
End Sub
Sub editCalc()
    Dim wks As Worksheet
    Dim shpSRC As Shape
    
    Set shpSRC = Tabelle3.Shapes("grpCalc")
    
    For Each wks In ThisWorkbook.Worksheets
        If wks.Name <> "Annahmen Listen" Then
            wks.Activate
            wks.Shapes("grpCalc").Left = 217.5
            wks.Shapes("grpCalc").GroupItems(2).Left = 241.5
        End If
    Next
End Sub
Attribute VB_Name = "modGadgets"


Public Sub repairConnectors()
    'ThisWorkbook.ActiveSheet.Shapes.SelectAll
    Dim sr() As Variant
    Dim sh As Shape
    Dim i As Integer
    i = 34
    
    For Each sh In ThisWorkbook.ActiveSheet.Shapes

        If Left(sh.Name, 8) = "Straight" Then
        Debug.Print sh.Name
        sh.Name = "Line" & i
        i = i + 1
        End If
    Next sh

End Sub

Private Sub menuSelect2()
    'ThisWorkbook.ActiveSheet.Shapes.SelectAll
    Dim sr() As Variant
    Dim sh As Shape
    Dim i As Integer
    i = 1
    
    ReDim sr(1 To 1000)
    
    ThisWorkbook.ActiveSheet.Rows("1:8").Hidden = False
    
    For Each sh In ThisWorkbook.ActiveSheet.Shapes
        'sh.Pacement = xlFreeFloating
        sh.Placement = xlMoveAndSize
        If sh.Top < 200 Then
        
        'If sh.Type = 1 Then
                Debug.Print sh.Name
        sr(i) = sh.Name
        i = i + 1
        End If
    Next sh
    ActiveSheet.Shapes.Range(sr).Select
End Sub

Private Sub unprotall()
    Dim ws As Worksheet
    For Each ws In ThisWorkbook.Worksheets
        ws.Activate
        ActiveWindow.View = xlNormalView
        ActiveWindow.DisplayHeadings = True
        ws.Unprotect "bilanzwert"
    Next
End Sub
Private Sub protall()
    Dim ws As Worksheet
    For Each ws In ThisWorkbook.Worksheets
        ws.Activate
        ActiveWindow.View = xlNormalView
        ActiveWindow.DisplayHeadings = False
        ActiveWindow.DisplayGridlines = False
        ws.Protect "bilanzwert"
    Next
    ThisWorkbook.Worksheets("DataSheet").Unprotect "bilanzwert"
End Sub
Sub menuChange()
    Dim sh As Shape
    Dim wks As Worksheet
    Dim vars As Variant
    
    For Each wks In ThisWorkbook.Worksheets
        If wks.Name <> "Men|fffd|" And wks.Name <> "DataSheet" Then
            wks.Activate
'            wks.Shapes("199_ff_bewg__rng_etragsWverf").Height = 17.0078735351563
'            wks.Shapes("199_ff_bewg__rng_etragsWverf").Top = 72.75
'            wks.Shapes("199_ff_bewg__rng_etragsWverf").Left = 751.5
'            wks.Shapes("shp_6_link").Hyperlink.Address = "http://www2.nwb.de/portal/content/ir/beitraege/beitrag_962775.aspx"
            wks.Shapes("shp_Ausgabebereich").TextFrame2.AutoSize = msoAutoSizeShapeToFitText
        End If
'    wks.Columns(1).Insert
'    wks.Columns(1).ColumnWidth = 2.57
'    wks.Rows("8").Delete
'
'    Windows("Kapitalgesellschaft UKV 1.0.4.xlsm").Activate
'    ActiveSheet.Rows("1:8").Copy
'    Windows("Kapitalgesellschaft GKV.xlsm").Activate
'    wks.Rows(1).Insert Shift:=xlDown
'
   ' wks.Rows(8).RowHeight = 30.75
    'Selection.Top = Selection.Top + 2
'        wks.Activate
'        ActiveWindow.Zoom = 100
'        ActiveWindow.DisplayHeadings = False
'        ActiveWindow.DisplayGridlines = False

    Next
End Sub

Private Sub topMenu()
Dim wks As Worksheet
    For Each wks In ThisWorkbook.Worksheets
        wks.Unprotect "bilanzwert"
        wks.Paste
        wks.Shapes("pdf_Group").Top = 1.5
        wks.Shapes("pdf_Group").Left = 912.75
    Next
End Sub
Attribute VB_Name = "modNavigation"
Option Explicit
Public goToOut As Boolean
Public gwksCurrentSheet As Worksheet
Private mwksLastInput As Worksheet
Private mwksLastOutput As Worksheet
Private marrNavigationLevel As Variant
Private mstrCurrentSheetName As String
Private mlngI As Long

Sub hideRowHeadings()
    Dim wksWorksheet As Worksheet
    For Each wksWorksheet In ThisWorkbook.Worksheets
        ActiveWindow.DisplayHeadings = False
    Next wksWorksheet
End Sub

Public Sub showRespectiveLevel()
    ThisWorkbook.Worksheets("DataSheet").Range("A2") = Application.Caller
    Call showRespectiveLevelActions(Application.Caller)
End Sub

Public Sub showRespectiveLevelActions(trgt As String)

    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    ActiveSheet.Unprotect "bilanzwert"
    For mlngI = 4 To 7
        ActiveSheet.Rows(mlngI).EntireRow.Hidden = True
    Next

    ThisWorkbook.Worksheets("DataSheet").Shapes("shp_template_deactivated").PickUp
    ActiveSheet.Shapes.Range(Array("lvl_bilanz_und_guv", "lvl_planungsannahmen", _
        "lvl_allgemeine_annahmen", "lvl_vergangenheitsdaten")).Apply

    ThisWorkbook.Worksheets("DataSheet").Shapes("shp_template_activated").PickUp
    Select Case trgt

        Case "lvl_vergangenheitsdaten"
            ActiveSheet.Shapes("lvl_vergangenheitsdaten").Apply
            ActiveSheet.Rows(4).EntireRow.Hidden = False
        Case "lvl_bilanz_und_guv"
            ActiveSheet.Shapes("lvl_bilanz_und_guv").Apply
            ActiveSheet.Rows(5).EntireRow.Hidden = False
        Case "lvl_planungsannahmen"
            ActiveSheet.Shapes("lvl_planungsannahmen").Apply
            ActiveSheet.Rows(6).EntireRow.Hidden = False
        Case Else
            ActiveSheet.Shapes("lvl_allgemeine_annahmen").Apply
            ActiveSheet.Rows(7).EntireRow.Hidden = False
    End Select

    On Error GoTo endit

    Dim a As String
    a = Application.Caller
    ActiveSheet.Protect "bilanzwert"
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
endit:
    ActiveSheet.Protect "bilanzwert"
    Application.Calculation = xlCalculationAutomatic

End Sub

Public Sub navigateOutput()
    ThisWorkbook.Worksheets("DataSheet").Range("A3") = Application.Caller
    Call navigateOutputActions(Application.Caller)
End Sub

Public Sub navigateOutputActions(trgt As String)
    If goToOut <> True Or trgt = "output__rng_ergebnisueberblick" Then
    Application.ScreenUpdating = False
    ThisWorkbook.Worksheets("DataSheet").Shapes("shp_template_deactivatedO").PickUp
     ActiveSheet.Shapes.Range(Array("output__rng_ergebnisueberblick", _
        "wertableitung__rng_ertragswert", "dcf_equity__rng_dcfwert", _
        "199_ff_bewg__rng_WertGem199", "bilanz__rng_Bilanzanalyse", _
        "guv__rng_GuVAnalyse", "kfr_endgueltig__rng_KFR", _
        "finanzierung_anlageergebnis__|fffd|", "gewst__rng_GewSt", "kst__rng_Kst")).Apply
    ThisWorkbook.Worksheets("DataSheet").Shapes("shp_template_activatedO").PickUp
    ActiveSheet.Shapes(trgt).Apply

    marrNavigationLevel = Split(trgt, "__", , vbTextCompare)
    If marrNavigationLevel(0) = mstrCurrentSheetName Then
    End If
    mstrCurrentSheetName = marrNavigationLevel(0)
    Set gwksCurrentSheet = ThisWorkbook.Worksheets(mstrCurrentSheetName)
    gwksCurrentSheet.Activate
    Application.GoTo gwksCurrentSheet.Range("A" & (gwksCurrentSheet.Range(marrNavigationLevel(1)).Row - 3)), True
    gwksCurrentSheet.Range(marrNavigationLevel(1)).Select
    Else
    goToOut = False
    End If

End Sub

Sub x()
    Dim wks As Worksheet
    For Each wks In ThisWorkbook.Worksheets
        wks.Unprotect "bilanzwert"
        wks.Protect "bilanzwert"
    Next wks
End Sub

Public Sub navigate()

    ThisWorkbook.Worksheets("DataSheet").Range("rng_Selected") = Application.Caller
    Call navigateActions(Application.Caller)
End Sub

Public Sub navigateActions(trgt As String)
    Application.ScreenUpdating = False
    ThisWorkbook.Worksheets("DataSheet").Shapes("shp_template_deactivatedU").PickUp
        ActiveSheet.Shapes.Range(Array("guv__B12", _
        "bilanz__rng_anlagevermoegen", "bilanz__rng_umlaufvermoegen", _
        "bilanz__rng_eigenkapital", "bilanz__rng_rueckstellungen", _
        "bilanz__rng_verbindlichkeiten", "bilanz__rng_abschreibungen", _
        "bilanz__rng_investitionsmodell", _
        "bilanz__rng_veraenderungen", _
        "annahmen__rng_ausschuettung", "annahmen__rng_risiko", _
        "annahmen__rng_verlustvortraege", "annahmen__rng_bewertungsstichtag", _
        "annahmen__rng_basiszinssatz", "annahmen__rng_bewertmethod", _
        "annahmen__rng_planjahre", "annahmen__rng_steuertarif", _
        "annahmen__rng_bewertungsobjekt", _
        "guv__rng_aufwandsplanung", "guv__rng_beteiligungsertraege", _
        "guv__rng_ertragsprognose", _
        "wertableitung__rng_abgrenzung", _
        "kfr_vorlaeufig__rng_zinsprogn", "199_ff_bewg__rng_etragsWverf")).Apply
    ThisWorkbook.Worksheets("DataSheet").Shapes("shp_template_activatedU").PickUp
    If trgt = "annahmen__rng_bewertungssticht" Then
        ActiveSheet.Shapes("annahmen__rng_bewertungsstichtag").Apply
    Else
        ActiveSheet.Shapes(trgt).Apply
    End If
    marrNavigationLevel = Split(trgt, "__", , vbTextCompare)
    
   ' Debug.Print marrNavigationLevel(1)
    
    
    If marrNavigationLevel(0) = mstrCurrentSheetName Then
    End If
    mstrCurrentSheetName = marrNavigationLevel(0)
    Set gwksCurrentSheet = ThisWorkbook.Worksheets(mstrCurrentSheetName)
    gwksCurrentSheet.Activate
'  gwksCurrentSheet.Range(marrNavigationLevel(1)).Select
    gwksCurrentSheet.Range(marrNavigationLevel(1)).Activate
    Application.GoTo gwksCurrentSheet.Range("A" & (gwksCurrentSheet.Range(marrNavigationLevel(1)).Row - 3)), True
    gwksCurrentSheet.Range(marrNavigationLevel(1)).Select
End Sub

Public Sub navigateToInput()
    Dim blnShowLevel As Boolean
    If ThisWorkbook.Worksheets("DataSheet").Range("A1") <> "Eingabe" Then blnShowLevel = True

    ThisWorkbook.Worksheets("DataSheet").Range("A1") = "Eingabe"
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    ActiveSheet.Unprotect "bilanzwert"
    For mlngI = 3 To 3
        ActiveSheet.Rows(mlngI).EntireRow.Hidden = False
    Next
    ActiveSheet.Rows(2).EntireRow.Hidden = True
    ActiveSheet.Shapes("shp_Ausgabebereich").TextFrame2.TextRange.Font.Size = 14
    ActiveSheet.Shapes("shp_Ausgabebereich").TextFrame2.TextRange.Font.UnderlineStyle = msoNoUnderline
    ActiveSheet.Shapes("shp_Ausgabebereich").Top = 30
    ActiveSheet.Shapes("shp_Ausgabebereich").Height = 24.33
    ActiveSheet.Shapes("shp_Eingabebereich").TextFrame2.TextRange.Font.Size = 20
    ActiveSheet.Shapes("shp_Eingabebereich").TextFrame2.TextRange.Font.UnderlineStyle = msoUnderlineSingleLine
    ActiveSheet.Shapes("shp_Eingabebereich").Top = 24.6
    ActiveSheet.Shapes("shp_Eingabebereich").Height = 31.64
    
    
    If blnShowLevel = True Then
        Call deselectInput
        Call modNavigation.showRespectiveLevelActions(ThisWorkbook.Worksheets("DataSheet").Range("A2"))
        blnShowLevel = False
    End If
    Application.Calculation = xlCalculationAutomatic
    ActiveSheet.Protect "bilanzwert"
    Application.ScreenUpdating = True
End Sub

Public Sub navigateToOutput()

    If ThisWorkbook.Worksheets("DataSheet").Range("A1") = "Eingabe" Then goToOut = True
    ThisWorkbook.Worksheets("DataSheet").Range("A1") = "Ausgabe"

    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    ActiveSheet.Unprotect "bilanzwert"
    For mlngI = 3 To 7
        ActiveSheet.Rows(mlngI).EntireRow.Hidden = True
    Next
    ActiveSheet.Rows(2).EntireRow.Hidden = False
    ActiveSheet.Shapes("shp_Ausgabebereich").TextFrame2.TextRange.Font.Size = 20
    ActiveSheet.Shapes("shp_Ausgabebereich").TextFrame2.TextRange.Font.UnderlineStyle = msoUnderlineSingleLine
    ActiveSheet.Shapes("shp_Ausgabebereich").Top = 24.6
    ActiveSheet.Shapes("shp_Ausgabebereich").Height = 31.64
    ActiveSheet.Shapes("shp_Eingabebereich").TextFrame2.TextRange.Font.Size = 14
    ActiveSheet.Shapes("shp_Eingabebereich").TextFrame2.TextRange.Font.UnderlineStyle = msoNoUnderline
    ActiveSheet.Shapes("shp_Eingabebereich").Top = 30
    ActiveSheet.Shapes("shp_Eingabebereich").Height = 24.33
    Application.Calculation = xlCalculationAutomatic
    ActiveSheet.Protect "bilanzwert"

    If goToOut = True Then Call navigateOutputActions("output__rng_ergebnisueberblick")

End Sub

'---------------------------------------------------------------------------------------
' Procedure : openExternal
' Author    : Svetoslav
' Date      : 23.03.2012
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Sub openExternal()

    Dim strName As String
    Dim strExt As String
    Dim strPathname As String
    Dim wkbOpened As Workbook
    
   On Error GoTo openExternal_Error

    strExt = VBA.Right(Application.Caller, Len(Application.Caller) - 6)
    strName = ActiveSheet.Shapes(Application.Caller).TextFrame2.TextRange

'    If strExt = ".xlsm" Then
'        strName = strName & GetVersion
'    End If
    
    strPathname = ThisWorkbook.Path & "\" & strName & strExt

    If Dir(strPathname) <> "" Then
        Select Case strExt
            Case ".xlsm"
                Set wkbOpened = IsWorkbookOpened(strPathname)
                
                If Not wkbOpened Is Nothing Then
                    wkbOpened.Activate
                Else
                    Workbooks.Open Filename:=strPathname
                End If
            
            Case ".docx"
                Dim wdApp As Object
                Set wdApp = CreateObject("Word.Application")
                If Not wdApp Is Nothing Then
                    wdApp.Visible = True
                    wdApp.Documents.Open Filename:=strPathname
                    wdApp.Activate
                    wdApp.Windows(1).Activate
                    
                    Set wdApp = Nothing
                End If
            
            Case ".txt"
                Shell "notepad.exe " & strPathname, vbNormalNoFocus
            
            Case ".pdf"
                strName = "PDF-Handbuch"
                ActiveWorkbook.FollowHyperlink strPathname
        End Select
    Else
        MsgBox "Die Datei " & strPathname & " wurde nicht gefunden!", , "Datei nicht gefunden!"
    End If

   On Error GoTo 0
   Exit Sub

openExternal_Error:
    ActiveSheet.Protect "bilanzwert"
   If Err.Number <> 1004 Then MsgBox "Error " & Err.Number & " (" & Err.Description & ") in procedure openExternal of Modul modNavigation"
End Sub

Private Function GetVersion() As String
    Dim intPos1 As Integer
    Dim intPos2 As Integer
    
    intPos1 = InStr(ThisWorkbook.Name, "_")
    intPos2 = InStrRev(ThisWorkbook.Name, ".")
    
    GetVersion = Mid(ThisWorkbook.Name, intPos1, intPos2 - intPos1)
End Function

Private Function IsWorkbookOpened(strPathname As String) As Workbook
    Dim wkbWB As Workbook
    Dim wkbOpened As Workbook
    
    For Each wkbWB In Application.Workbooks
        If LCase(strPathname) = LCase(wkbWB.FullName) Then
            Set wkbOpened = wkbWB
            Exit For
        End If
    Next
        
    Set IsWorkbookOpened = wkbOpened
End Function


Private Sub deselectInput()
    Application.ScreenUpdating = False
    ThisWorkbook.Worksheets("DataSheet").Shapes("shp_template_deactivatedU").PickUp
    ActiveSheet.Shapes.Range(Array("guv__B12", _
                                   "bilanz__rng_anlagevermoegen", "bilanz__rng_umlaufvermoegen", _
                                   "bilanz__rng_eigenkapital", "bilanz__rng_rueckstellungen", _
                                   "bilanz__rng_verbindlichkeiten", "bilanz__rng_abschreibungen", _
                                   "bilanz__rng_investitionsmodell", _
                                   "bilanz__rng_veraenderungen", _
                                   "annahmen__rng_ausschuettung", "annahmen__rng_risiko", _
                                   "annahmen__rng_verlustvortraege", "annahmen__rng_bewertungsstichtag", _
                                   "annahmen__rng_basiszinssatz", "annahmen__rng_bewertmethod", _
                                   "annahmen__rng_planjahre", "annahmen__rng_steuertarif", _
                                   "annahmen__rng_bewertungsobjekt", _
                                   "guv__rng_aufwandsplanung", "guv__rng_beteiligungsertraege", _
                                   "guv__rng_ertragsprognose", _
                                   "wertableitung__rng_abgrenzung", _
                                   "kfr_vorlaeufig__rng_zinsprogn", "199_ff_bewg__rng_etragsWverf")).Apply

End Sub


' InQuest injected base64 decoded content
' z+kj

INQUEST-PP=macro
