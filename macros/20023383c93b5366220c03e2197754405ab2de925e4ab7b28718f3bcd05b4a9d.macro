Attribute VB_Name = "HandsCode"
Public HandGameInProgress As Boolean
Public HandClick As Integer

Sub DealHands()
Attribute DealHands.VB_ProcData.VB_Invoke_Func = " \n14"
    ActiveSheet.Unprotect
    Dim HandRow As Integer
    Dim HandCol As Integer
    Range("e3:f10").Value = "D"
    Range("d4:g9").Value = "D"
    Range("c5:h8").Value = "D"
    Range("b6:i7").Value = "D"
    Range("e3:f10").Interior.ColorIndex = xlNone
    Range("d4:g9").Interior.ColorIndex = xlNone
    Range("c5:h8").Interior.ColorIndex = xlNone
    Range("b6:i7").Interior.ColorIndex = xlNone
    Range("HandSequence").Sort Key1:=Range("J3"), Order1:=xlAscending, Header:=xlNo
    For n = 1 To 3
        Do
            HandRow = Int(Rnd() * 8) + 2
            HandCol = Int(Rnd() * 8) + 2
            If Cells(HandRow, HandCol).Value = "D" Then
                Cells(HandRow, HandCol).Value = Range("Hand" & n).Value
                Exit Do
            End If
        Loop
    Next n
    [a1].Select
    ActiveSheet.Protect
    HandGameInProgress = True
    HandClick = 1
End Sub

Sub EndHands()
Attribute EndHands.VB_ProcData.VB_Invoke_Func = " \n14"
    Application.ScreenUpdating = False
    Score1 = Range("GoodHands").Value
    Score2 = Range("BadHands").Value
    Sheets("Results").Select
    [a1].Select
    Range("GameResults").Offset(8, 1).Value = Score1
    Range("GameResults").Offset(8, 2).Value = Score2
    FinalResult
End Sub
Attribute VB_Name = "LinesCode"
Dim LineRow As Integer
Dim LineColumn As Integer
Dim GameWon As Boolean

Sub RestartLineGame()
Attribute RestartLineGame.VB_ProcData.VB_Invoke_Func = " \n14"
    [h16].Value = [h16].Value + 1
    If FullGameInProgress Then
        TimeNow = Now()
        If (TimeNow - GameTimer) * 24 * 3600 >= 60 Then
            EndLines
            Exit Sub
        End If
    End If
    StartLineGame
End Sub

Sub StartLineGame()
Attribute StartLineGame.VB_ProcData.VB_Invoke_Func = " \n14"
    Randomize
    Application.ScreenUpdating = False
    [c2:n15].Select
    With Selection
        .ClearContents
        .Borders(xlEdgeLeft).LineStyle = xlNone
        .Borders(xlEdgeRight).LineStyle = xlNone
        .Borders(xlEdgeTop).LineStyle = xlNone
        .Borders(xlEdgeBottom).LineStyle = xlNone
        .Borders(xlInsideVertical).LineStyle = xlNone
        .Borders(xlInsideHorizontal).LineStyle = xlNone
    End With
    LineRow = 8
    LineColumn = 8
    Cells(LineRow, LineColumn).Value = "|fffd|"
    Range("Shape" & Int(Rnd() * 8) + 1).Copy
    [r3].Select
    ActiveSheet.Paste
    Application.CutCopyMode = False
    [a1].Select
End Sub


Sub LineUp()
Attribute LineUp.VB_ProcData.VB_Invoke_Func = " \n14"
    Application.ScreenUpdating = False
    If LineRow < 3 Then Exit Sub
    If Cells(LineRow, LineColumn).Borders(xlEdgeRight).LineStyle = xlContinuous Then Exit Sub
    With Cells(LineRow, LineColumn).Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThick
        .ColorIndex = 11
    End With
    LineRow = LineRow - 1
    [c2:n15].ClearContents
    Cells(LineRow, LineColumn).Value = "|fffd|"
    CheckLinesGame
    [a1].Select
End Sub

Sub LineDown()
Attribute LineDown.VB_ProcData.VB_Invoke_Func = " \n14"
    Application.ScreenUpdating = False
    If LineRow > 13 Then Exit Sub
    If Cells(LineRow + 1, LineColumn).Borders(xlEdgeRight).LineStyle = xlContinuous Then Exit Sub
    LineRow = LineRow + 1
    With Cells(LineRow, LineColumn).Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThick
        .ColorIndex = 11
    End With
    [c2:n15].ClearContents
    Cells(LineRow, LineColumn).Value = "|fffd|"
    CheckLinesGame
    [a1].Select
End Sub

Sub LineLeft()
Attribute LineLeft.VB_ProcData.VB_Invoke_Func = " \n14"
    Application.ScreenUpdating = False
    If LineColumn < 4 Then Exit Sub
    If Cells(LineRow, LineColumn).Borders(xlEdgeBottom).LineStyle = xlContinuous Then Exit Sub
    With Cells(LineRow, LineColumn).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThick
        .ColorIndex = 11
    End With
    LineColumn = LineColumn - 1
    [c2:n15].ClearContents
    Cells(LineRow, LineColumn).Value = "|fffd|"
    CheckLinesGame
    [a1].Select
End Sub

Sub LineRight()
Attribute LineRight.VB_ProcData.VB_Invoke_Func = " \n14"
    Application.ScreenUpdating = False
    If LineColumn > 12 Then Exit Sub
    If Cells(LineRow, LineColumn + 1).Borders(xlEdgeBottom).LineStyle = xlContinuous Then Exit Sub
    LineColumn = LineColumn + 1
    With Cells(LineRow, LineColumn).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThick
        .ColorIndex = 11
    End With
    [c2:n15].ClearContents
    Cells(LineRow, LineColumn).Value = "|fffd|"
    CheckLinesGame
    [a1].Select
End Sub

Sub CheckLinesGame()
Attribute CheckLinesGame.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim n As Integer
    Dim x As Integer
    Dim p As Integer
    Dim u As Integer
    For n = 1 To 6
        For x = 1 To 6
            GameWon = True
            For p = 3 To 8
                For u = 3 To 8
                    If CountLines(n + p, x + u) <> CountLines(p, u + 14) Then GameWon = False
                Next u
            Next p
            If GameWon Then Exit For
        Next x
        If GameWon Then Exit For
    Next n
    If GameWon Then
        [c16].Value = [c16].Value + 1
        If FullGameInProgress Then
            TimeNow = Now()
            If (TimeNow - GameTimer) * 24 * 3600 >= 60 Then
                EndLines
                Exit Sub
            End If
        End If
        StartLineGame
    End If
End Sub

Sub EndLines()
Attribute EndLines.VB_ProcData.VB_Invoke_Func = " \n14"
    Application.ScreenUpdating = False
    Score1 = [c16].Value
    Score2 = [h16].Value
    Sheets("Results").Select
    [a1].Select
    Range("GameResults").Offset(5, 1).Value = Score1
    Range("GameResults").Offset(5, 2).Value = Score2
    GameTimer = Now()
    Sheets("Number Game").Select
End Sub

Function CountLines(xRow As Integer, xCol As Integer)
Attribute CountLines.VB_ProcData.VB_Invoke_Func = " \n14"
    CountLines = 0
    If Cells(xRow, xCol).Borders(xlEdgeBottom).LineStyle = xlContinuous Then CountLines = CountLines + 1
    If Cells(xRow, xCol).Borders(xlEdgeRight).LineStyle = xlContinuous Then CountLines = CountLines + 10
    Exit Function
End Function


Attribute VB_Name = "MainMenu1"
Public FullGameInProgress As Boolean
Public GameTimer As Double
Public TimeNow As Double
Public TotalGameTime As Double
Public Score1 As Integer
Public Score2 As Integer

Sub StartFullGame()
Attribute StartFullGame.VB_ProcData.VB_Invoke_Func = " \n14"
    FullGameInProgress = True
    GameTimer = Now()
    TotalGameTime = Now()
    Sheets("Number Count").Select
End Sub

Sub Practice1Game()
Attribute Practice1Game.VB_ProcData.VB_Invoke_Func = " \n14"
    FullGameInProgress = False
    Sheets(Range("Gamelist").Offset(Range("SelectedGame").Value, 0).Value).Select
End Sub

Sub ReturnToMenu()
Attribute ReturnToMenu.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim ReturnYN As Integer
    If FullGameInProgress Then
        ReturnYN = MsgBox("You have a game in progress, are you sure?", vbQuestion + vbYesNo, "www.glynnconsulting.co.uk")
        If ReturnYN = 6 Then
            Sheets("MainMenu").Select
            Exit Sub
        Else
            Exit Sub
        End If
    End If
    Sheets("MainMenu").Select
End Sub
Attribute VB_Name = "NumberCount"
Sub MoreNumbers()
Attribute MoreNumbers.VB_ProcData.VB_Invoke_Func = " \n14"
    If ActiveSheet.Name = "Number Count" Then
        Do
            Calculate
            If [q20].Value = 1 Then
                Exit Sub
            End If
        Loop
    End If
End Sub

Sub RedClick()
Attribute RedClick.VB_ProcData.VB_Invoke_Func = " \n14"
    If [p20].Value = [p15].Value Then
        [k6].Value = [k6].Value + 1
    Else
        [k7].Value = [k7].Value + 1
    End If
    MoreNumbers
End Sub

Sub BlueClick()
Attribute BlueClick.VB_ProcData.VB_Invoke_Func = " \n14"
    If [p20].Value = [p17].Value Then
        [k6].Value = [k6].Value + 1
    Else
        [k7].Value = [k7].Value + 1
    End If
    MoreNumbers
End Sub

Sub BlackClick()
Attribute BlackClick.VB_ProcData.VB_Invoke_Func = " \n14"
    If [p20].Value = [p18].Value Then
        [k6].Value = [k6].Value + 1
    Else
        [k7].Value = [k7].Value + 1
    End If
    MoreNumbers
End Sub

Sub GreenClick()
Attribute GreenClick.VB_ProcData.VB_Invoke_Func = " \n14"
    If [p20].Value = [p16].Value Then
        [k6].Value = [k6].Value + 1
    Else
        [k7].Value = [k7].Value + 1
    End If
    MoreNumbers
End Sub

Sub EndNumberCount()
Attribute EndNumberCount.VB_ProcData.VB_Invoke_Func = " \n14"
    Application.ScreenUpdating = False
    Score1 = [k6].Value
    Score2 = [k7].Value
    Sheets("Results").Select
    [a1].Select
    Range("GameResults").Offset(1, 1).Value = Score1
    Range("GameResults").Offset(1, 2).Value = Score2
    GameTimer = Now()
    Sheets("Slider").Select
End Sub
Attribute VB_Name = "NumberGameCode"
Dim TempNumber As Long
Dim CellValue As String

Sub GiveUpNumberGame()
Attribute GiveUpNumberGame.VB_ProcData.VB_Invoke_Func = " \n14"
    ActiveSheet.Unprotect
    [f12].Value = [f12].Value + 1
    If FullGameInProgress Then
        TimeNow = Now()
        If (TimeNow - GameTimer) * 24 * 3600 >= 90 Then
            EndNumberGame
            Exit Sub
        End If
    End If
    Deal
End Sub

Sub Deal()
Attribute Deal.VB_ProcData.VB_Invoke_Func = " \n14"
    'Make sure random numbers are not always the same
    Application.Calculation = xlManual
    ActiveSheet.Unprotect
    Randomize
    Calculate
    'Select numbers
    Range("NumberOne").Value = Range("B18").Value
    Range("NumberTwo").Value = Range("C18").Value
    Range("NumberThree").Value = Range("D18").Value
    Range("NumberFour").Value = Range("E18").Value
    Range("NumberFive").Value = Range("F18").Value
    Range("NumberSix").Value = Range("G18").Value
    Do
        n = Int(Rnd() * 44)
        If Range("a20").Offset(n, 0).Value > 100 And Range("a20").Offset(n, 0).Value < 1000 Then
            Range("TargetNumber").Value = Range("a20").Offset(n, 0).Value
            Exit Do
        End If
    Loop
    'Reset game screen
    Range("FormulaBuilder").Value = ""
    Range("SelectedNumbers").Interior.ColorIndex = 48
    Range("Preview").Value = ""
    Application.Calculation = xlAutomatic
    [b2].Select
    ActiveSheet.Protect
End Sub

Sub Retry()
Attribute Retry.VB_ProcData.VB_Invoke_Func = " \n14"
    'Reset game screen
    ActiveSheet.Unprotect
    Range("FormulaBuilder").Value = ""
    Range("SelectedNumbers").Interior.ColorIndex = 48
    Range("Preview").Value = ""
    ActiveSheet.Protect
    [b2].Select
End Sub

Sub ResetAll()
Attribute ResetAll.VB_ProcData.VB_Invoke_Func = " \n14"
    'Reset game screen and deal
    ActiveSheet.Unprotect
    Range("FormulaBuilder").Value = ""
    Range("SelectedNumbers").Interior.ColorIndex = 48
    Range("Preview").Value = ""
    Deal
End Sub

Sub Pick1()
Attribute Pick1.VB_ProcData.VB_Invoke_Func = " \n14"
    Pick ("NumberOne")
End Sub

Sub Pick2()
Attribute Pick2.VB_ProcData.VB_Invoke_Func = " \n14"
    Pick ("NumberTwo")
End Sub

Sub Pick3()
Attribute Pick3.VB_ProcData.VB_Invoke_Func = " \n14"
    Pick ("NumberThree")
End Sub

Sub Pick4()
Attribute Pick4.VB_ProcData.VB_Invoke_Func = " \n14"
    Pick ("NumberFour")
End Sub

Sub Pick5()
Attribute Pick5.VB_ProcData.VB_Invoke_Func = " \n14"
    Pick ("NumberFive")
End Sub

Sub Pick6()
Attribute Pick6.VB_ProcData.VB_Invoke_Func = " \n14"
    Pick ("NumberSix")
End Sub

Sub Pick(ChosenNumber As String)
Attribute Pick.VB_ProcData.VB_Invoke_Func = " \n14"
    'Stop number being chosen twice
    If Range(ChosenNumber).Offset(1, 0).Interior.ColorIndex = 6 Then Exit Sub
    'Stop consecutive numbers
    If Len(Range("FormulaBuilder").Value) > 0 Then
        CellValue = Right(Range("FormulaBuilder").Value, 1)
        Select Case CellValue
        Case 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, ")"
            Exit Sub
        End Select
    End If
    'Update screen
    ActiveSheet.Unprotect
    Range(ChosenNumber).Offset(1, 0).Interior.ColorIndex = 6
    Range("FormulaBuilder").Value = Range("FormulaBuilder") & Range(ChosenNumber).Value
    'Check to see if game is won
    CheckSum
    [b2].Select
End Sub

Sub AppendPlus()
Attribute AppendPlus.VB_ProcData.VB_Invoke_Func = " \n14"
    'Make sure sign is used in the right place
    If Len(Range("FormulaBuilder").Value) > 0 Then
        CellValue = Right(Range("FormulaBuilder").Value, 1)
        Select Case CellValue
        Case "+", "-", "*", "/", "("
            Exit Sub
        End Select
    End If
    ActiveSheet.Unprotect
    Range("FormulaBuilder").Value = Range("FormulaBuilder") & "+"
    ActiveSheet.Protect
    [b2].Select
End Sub

Sub AppendMinus()
Attribute AppendMinus.VB_ProcData.VB_Invoke_Func = " \n14"
    'Make sure sign is used in the right place
    If Len(Range("FormulaBuilder").Value) > 0 Then
        CellValue = Right(Range("FormulaBuilder").Value, 1)
        Select Case CellValue
        Case "+", "-", "*", "/", "("
            Exit Sub
        End Select
    End If
    ActiveSheet.Unprotect
    Range("FormulaBuilder").Value = Range("FormulaBuilder") & "-"
    ActiveSheet.Protect
    [b2].Select
End Sub

Sub AppendMultiply()
Attribute AppendMultiply.VB_ProcData.VB_Invoke_Func = " \n14"
    'Make sure sign is used in the right place
    If Len(Range("FormulaBuilder").Value) > 0 Then
        CellValue = Right(Range("FormulaBuilder").Value, 1)
        Select Case CellValue
        Case "+", "-", "*", "/", "("
            Exit Sub
        End Select
    End If
    ActiveSheet.Unprotect
    Range("FormulaBuilder").Value = Range("FormulaBuilder") & "*"
    ActiveSheet.Protect
    [b2].Select
End Sub

Sub AppendDivide()
Attribute AppendDivide.VB_ProcData.VB_Invoke_Func = " \n14"
    'Make sure sign is used in the right place
    If Len(Range("FormulaBuilder").Value) > 0 Then
        CellValue = Right(Range("FormulaBuilder").Value, 1)
        Select Case CellValue
        Case "+", "-", "*", "/", "("
            Exit Sub
        End Select
    End If
    ActiveSheet.Unprotect
    Range("FormulaBuilder").Value = Range("FormulaBuilder") & "/"
    ActiveSheet.Protect
    [b2].Select
End Sub

Sub AppendLeftBracket()
Attribute AppendLeftBracket.VB_ProcData.VB_Invoke_Func = " \n14"
    'Make sure sign is used in the right place
    If Len(Range("FormulaBuilder").Value) > 0 Then
        CellValue = Right(Range("FormulaBuilder").Value, 1)
        Select Case CellValue
        Case 1, 2, 3, 4, 5, 6, 7, 8, 9, 0
            Exit Sub
        End Select
    End If
    ActiveSheet.Unprotect
    Range("FormulaBuilder").Value = Range("FormulaBuilder") & "("
    ActiveSheet.Protect
    [b2].Select
End Sub

Sub AppendRightBracket()
Attribute AppendRightBracket.VB_ProcData.VB_Invoke_Func = " \n14"
    'Make sure sign is used in the right place
    If Len(Range("FormulaBuilder").Value) > 0 Then
        CellValue = Right(Range("FormulaBuilder").Value, 1)
        Select Case CellValue
        Case "+", "-", "*", "/", "("
            Exit Sub
        End Select
    End If
    ActiveSheet.Unprotect
    Range("FormulaBuilder").Value = Range("FormulaBuilder") & ")"
    ActiveSheet.Protect
    CheckSum
    [b2].Select
End Sub

Sub CheckSum()
Attribute CheckSum.VB_ProcData.VB_Invoke_Func = " \n14"
    'Error trap invalid formula
    On Error GoTo BadCheckSum
    ActiveSheet.Unprotect
    Range("Preview").Formula = "=round(" & Range("FormulaBuilder").Value & ",0)"
    'Switch off error trap
    On Error GoTo 0
    'Check answer
    If Range("Preview").Value = Range("TargetNumber").Value Then
        [b12].Value = [b12].Value + 1
        If FullGameInProgress Then
            TimeNow = Now()
            If (TimeNow - GameTimer) * 24 * 3600 >= 90 Then
                ActiveSheet.Protect
                EndNumberGame
                Exit Sub
            End If
        End If
        Deal
    End If
    Exit Sub
    
BadCheckSum:
    Range("Preview").Value = ""
    ActiveSheet.Protect
End Sub

Sub EndNumberGame()
Attribute EndNumberGame.VB_ProcData.VB_Invoke_Func = " \n14"
    Application.ScreenUpdating = False
    Score1 = [b12].Value
    Score2 = [f12].Value
    Sheets("Results").Select
    [a1].Select
    Range("GameResults").Offset(6, 1).Value = Score1
    Range("GameResults").Offset(6, 2).Value = Score2
    GameTimer = Now()
    Sheets("Sequence").Select
End Sub
Attribute VB_Name = "PairsCode"
Public PairsGameInProgress As Boolean
Public PairSquareCurrent As Integer
Public PairSelection1 As String
Public PairSelection2 As String
Public PairSelection1Address As String
Public PairSelection2Address As String
Public PairSelection3Address As String
Public PairSquareCount As Integer

Sub DealPairs()
Attribute DealPairs.VB_ProcData.VB_Invoke_Func = " \n14"
    Application.ScreenUpdating = False
    ActiveSheet.Unprotect
'    Rows("20:45").Select
'    Selection.EntireRow.Hidden = False
    PairsGameInProgress = False
    Calculate
    Range("PairList").Sort Key1:=Range("B29"), Order1:=xlAscending, Header:=xlNo
    Range("BlankSquare").Copy
    'Clear board
    For n = 1 To 16
        Range("Pair" & n).Select
        ActiveSheet.Paste
    Next n
    'Set tiles
    For n = 1 To 16
        Range("Pair" & n).Offset(9, 0).Select
        Select Case ActiveCell.Value
            Case "M"
                Selection.Font.ColorIndex = 1
                Selection.Interior.ColorIndex = 36
            Case "("
                Selection.Font.ColorIndex = 3
                Selection.Interior.ColorIndex = 37
            Case "N"
                Selection.Font.ColorIndex = 1
                Selection.Interior.ColorIndex = 27
            Case "Q"
                Selection.Font.ColorIndex = 15
                Selection.Interior.ColorIndex = 34
            Case "|fffd|"
                Selection.Font.ColorIndex = 27
                Selection.Interior.ColorIndex = 33
            Case "["
                Selection.Font.ColorIndex = 1
                Selection.Interior.ColorIndex = 2
            Case "|fffd|"
                Selection.Font.ColorIndex = 27
                Selection.Interior.ColorIndex = 1
            Case "|fffd|"
                Selection.Font.ColorIndex = 3
                Selection.Interior.ColorIndex = 15
        End Select
    Next n
    ActiveSheet.Protect
'    Rows("12:44").Select
'    Selection.EntireRow.Hidden = True
    [a1].Select
    PairsGameInProgress = True
    PairSelection1 = ""
    PairSelection2 = ""
    PairSquareCount = 0
End Sub

Sub CheckPairs()
Attribute CheckPairs.VB_ProcData.VB_Invoke_Func = " \n14"
    For n = 1 To 16
        If Range("Pair" & n).Value = "" Then Exit Sub
    Next n
    Application.ScreenUpdating = True
    [c11].Value = [c11].Value + 1
    If FullGameInProgress Then
        TimeNow = Now()
        If (TimeNow - GameTimer) * 24 * 3600 >= 60 Then
            EndPairs
            Exit Sub
        End If
    End If
    DealPairs
End Sub

Sub EndPairs()
Attribute EndPairs.VB_ProcData.VB_Invoke_Func = " \n14"
    Application.ScreenUpdating = False
    Score1 = [c11].Value
    Sheets("Results").Select
    [a1].Select
    Range("GameResults").Offset(4, 1).Value = Score1
    GameTimer = Now()
    Sheets("Lines").Select
End Sub

Attribute VB_Name = "ResultsCode"
Sub FinalResult()
Attribute FinalResult.VB_ProcData.VB_Invoke_Func = " \n14"
    Application.ScreenUpdating = True
    FullGameInProgress = False
    TotalGameTime = (Now() - TotalGameTime) * 24 * 3600
    'MsgBox "Well done you scored " & [f11].Value & Chr(10) & "In " & Int(TotalGameTime / 60) & " minutes and " & Int(TotalGameTime - (Int(TotalGameTime / 60) * 60)) & " seconds."
End Sub
Attribute VB_Name = "RhymesCode"
Public RhymeWins As Integer, RhymeLosses As Integer

Sub DealRhymes()
Attribute DealRhymes.VB_Description = "Macro recorded 21/06/2006 by Glynn"
Attribute DealRhymes.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim x As Integer, n As Integer, m As Integer
    Dim RowCounter As Integer
    RhymeWins = 0
    RhymeLosses = 0
    'Clear area
    Range("WordSearchArea").ClearContents
    Range("WordSearchArea").Interior.ColorIndex = 36
    'Shuffle words
    ActiveSheet.Calculate
    Range("WordBlock").Sort Key1:=Range("A14"), Order1:=xlAscending, Header:=xlYes
    Range("WordBlock2").Sort Key1:=Range("A27"), Order1:=xlAscending, Header:=xlYes
    'Place rhyming words
    For x = 1 To 3
        Do
            n = Int(Rnd() * 4)
            m = Int(Rnd() * 4)
        Loop Until Cells(5 + n, 2 + m).Value = ""
        Cells(5 + n, 2 + m).Value = Range("RhymingWords").Offset(x, 0).Value
    Next x
    'Place the other words
    RowCounter = 28
    For n = 1 To 4
        For m = 1 To 4
            If Cells(4 + n, 1 + m).Value = "" Then
                Do
                    If Cells(RowCounter, 3).Value = [b24].Value Then
                        RowCounter = RowCounter + 1
                    Else
                        Exit Do
                    End If
                Loop
                Cells(4 + n, 1 + m).Value = Cells(RowCounter, 2).Value
                RowCounter = RowCounter + 1
            End If
        Next m
    Next n
    [a1].Select
End Sub

Sub RhymeFinish()
Attribute RhymeFinish.VB_ProcData.VB_Invoke_Func = " \n14"
    If RhymeLosses > 0 Then
        [c11].Value = [c11].Value + 1
    Else
        [c10].Value = [c10].Value + 1
    End If
    If FullGameInProgress Then
        TimeNow = Now()
        If (TimeNow - GameTimer) * 24 * 3600 >= 30 Then
            EndRhymeCount
            Exit Sub
        End If
    End If
    DealRhymes
End Sub

Sub EndRhymeCount()
Attribute EndRhymeCount.VB_ProcData.VB_Invoke_Func = " \n14"
    Application.ScreenUpdating = False
    Score1 = [c10].Value
    Score2 = [c11].Value
    Sheets("Results").Select
    [a1].Select
    Range("GameResults").Offset(3, 1).Value = Score1
    Range("GameResults").Offset(3, 2).Value = Score2
    GameTimer = Now()
    Sheets("Pairs").Select
End Sub

Attribute VB_Name = "Sequence1"
Sub GiveUpSequence()
Attribute GiveUpSequence.VB_ProcData.VB_Invoke_Func = " \n14"
    ActiveSheet.Unprotect
    [b11].Value = [b11].Value + 1
    ActiveSheet.Protect
    NewSequence
End Sub

Sub NewSequence()
Attribute NewSequence.VB_ProcData.VB_Invoke_Func = " \n14"
    ActiveSheet.Unprotect
    [f4].Value = 0
    [f8].Value = 0
    [e13] = Int(Rnd() * 5) + 2
    [e16] = Int(Rnd() * 19) - 9
    ActiveSheet.Protect
End Sub

Sub CheckSequence()
Attribute CheckSequence.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim SequenceGood As Boolean
    SequenceGood = False
    If [f4].Value = [e13].Value Then
        If ([f8].Value = [e19].Value And [e22].Value = True) Then
            SequenceGood = True
        End If
        If ([f8].Value = -[e19].Value And [e22].Value = False) Then
            SequenceGood = True
        End If
    End If
    ActiveSheet.Unprotect
    If SequenceGood Then
        [b10].Value = [b10].Value + 1
    Else
        [b11].Value = [b11].Value + 1
    End If
    ActiveSheet.Protect
    If FullGameInProgress Then
        TimeNow = Now()
        If (TimeNow - GameTimer) * 24 * 3600 >= 30 Then
            EndSequence
            Exit Sub
        End If
    End If
    If SequenceGood Then NewSequence
End Sub

Sub EndSequence()
Attribute EndSequence.VB_ProcData.VB_Invoke_Func = " \n14"
    Application.ScreenUpdating = False
    Score1 = [b10].Value
    Score2 = [b11].Value
    Sheets("Results").Select
    [a1].Select
    Range("GameResults").Offset(7, 1).Value = Score1
    Range("GameResults").Offset(7, 2).Value = Score2
    GameTimer = Now()
    Sheets("Hands").Select
End Sub

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
    Application.Calculation = xlManual
    ActiveSheet.ScrollArea = ""
    Range("A1:AC15").Select
    ActiveWindow.Zoom = True
    ActiveSheet.ScrollArea = "a1:ac15"
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    [k6].Value = 0
    [k7].Value = 0
    [a1].Select
    MoreNumbers
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    If FullGameInProgress Then
        TimeNow = Now()
        If (TimeNow - GameTimer) * 24 * 3600 >= 30 Then
            EndNumberCount
        End If
    Else
        Exit Sub
    End If
End Sub

Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
    Application.Calculation = xlAutomatic
    ActiveSheet.ScrollArea = ""
    Range("A1:D21").Select
    ActiveWindow.Zoom = True
    ActiveSheet.ScrollArea = "a1:d21"
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    [a4].Select
End Sub

Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
    Application.Calculation = xlAutomatic
    ActiveSheet.ScrollArea = ""
    Range("A1:H22").Select
    ActiveWindow.Zoom = True
    [a1].Select
    ActiveSheet.ScrollArea = "a1:h22"
End Sub


Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = ""
    Range("A1:F168").Select
    ActiveWindow.Zoom = True
    ActiveSheet.ScrollArea = "a1:f168"
    Application.Calculation = xlCalculationManual
    [c10].Value = 0
    [c11].Value = 0
    Application.ScreenUpdating = True
    DealRhymes
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    Dim TempVal As String
    If ActiveCell.Value = "" Then Exit Sub
    If ActiveCell.Row < 5 Then Exit Sub
    If ActiveCell.Row > 8 Then Exit Sub
    If ActiveCell.Column = 1 Then Exit Sub
    If ActiveCell.Column > 5 Then Exit Sub
    TempVal = ActiveCell.Value
    If TempVal = [g25].Value Or TempVal = [g26].Value Or TempVal = [g27].Value Then
        ActiveCell.Interior.ColorIndex = 35
        RhymeWins = RhymeWins + 1
    Else
        ActiveCell.Interior.ColorIndex = 44
        RhymeLosses = RhymeLosses + 1
    End If
    [a1].Select
    If RhymeWins = 3 Or RhymeLosses > 0 Then
        RhymeFinish
    End If
End Sub
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = ""
    Range("A1:Q12").Select
    ActiveWindow.Zoom = True
    ActiveSheet.ScrollArea = "a1:q12"
    Shuffle
End Sub

Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
    Application.Calculation = xlManual
    ActiveSheet.ScrollArea = ""
    Range("A1:L19").Select
    ActiveWindow.Zoom = True
    ActiveSheet.ScrollArea = "a1:l19"
    [c11].Value = 0
    DealPairs
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    If PairsGameInProgress = False Then Exit Sub
    If ActiveCell.Value <> "" Then Exit Sub
    TempRow = ActiveCell.Row
    TempColumn = ActiveCell.Column
    If TempRow <> 3 And TempRow <> 5 And TempRow <> 7 And TempRow <> 9 Then Exit Sub
    If TempColumn <> 3 And TempColumn <> 5 And TempColumn <> 7 And TempColumn <> 9 Then Exit Sub
    Application.ScreenUpdating = False
    PairsGameInProgress = False
    Select Case PairSquareCount
        Case 0
            ActiveCell.Offset(9, 0).Copy
            ActiveSheet.Paste
            PairSelection1 = ActiveCell.Value
            PairSelection1Address = ActiveCell.Address
            PairSquareCount = 1
        Case 1
            ActiveCell.Offset(9, 0).Copy
            ActiveSheet.Paste
            PairSelection2 = ActiveCell.Value
            PairSelection2Address = ActiveCell.Address
            If PairSelection1 = PairSelection2 Then
                PairSquareCount = 0
            Else
                PairSquareCount = 2
            End If
        Case 2
            PairSelection3Address = ActiveCell.Address
            Range("BlankSquare").Copy
            Range(PairSelection1Address).Select
            ActiveSheet.Paste
            Range(PairSelection2Address).Select
            ActiveSheet.Paste
            Range(PairSelection3Address).Select
            ActiveCell.Offset(9, 0).Copy
            ActiveSheet.Paste
            PairSelection1 = ActiveCell.Value
            PairSelection1Address = ActiveCell.Address
            PairSquareCount = 1
        End Select
        Application.CutCopyMode = False
        CheckPairs
        PairsGameInProgress = True
End Sub
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = ""
    Range("A1:M18").Select
    ActiveWindow.Zoom = True
    ActiveSheet.ScrollArea = "a1:m18"
    [c16].Value = 0
    [h16].Value = 0
    [a1].Select
    StartLineGame
End Sub

Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = ""
    Range("A1:I15").Select
    ActiveWindow.Zoom = True
    ActiveSheet.ScrollArea = "a1:i15"
    ActiveSheet.Unprotect
    [b12].Value = 0
    [f12].Value = 0
    ActiveSheet.Protect
    Deal
End Sub

Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Plus, 7, 0, MSForms, OptionButton"
Attribute VB_Control = "Minus, 8, 1, MSForms, OptionButton"

Private Sub Worksheet_Activate()
    ActiveSheet.ScrollArea = ""
    Range("A1:G27").Select
    ActiveWindow.Zoom = True
    ActiveSheet.ScrollArea = "a1:g11"
    Application.Calculation = xlAutomatic
    Calculate
    ActiveSheet.Unprotect
    [b10].Value = 0
    [b11].Value = 0
    ActiveSheet.Protect
    [a1].Select
    NewSequence
End Sub


Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
    ActiveSheet.Unprotect
    HandGameInProgress = False
    ActiveSheet.ScrollArea = ""
    Range("A1:O13").Select
    ActiveWindow.Zoom = True
    ActiveSheet.ScrollArea = "a1:o13"
    Application.Calculation = xlCalculationAutomatic
    Range("BadHands").Value = 0
    Range("GoodHands").Value = 0
    ActiveSheet.Protect
    DealHands
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    If HandGameInProgress = False Then Exit Sub
    If ActiveCell.Value = "" Then [a1].Select: Exit Sub
    If ActiveCell.Row < 3 Then [a1].Select: Exit Sub
    If ActiveCell.Row > 10 Then [a1].Select: Exit Sub
    If ActiveCell.Column < 2 Then [a1].Select: Exit Sub
    If ActiveCell.Column > 9 Then [a1].Select: Exit Sub
    If FullGameInProgress Then
        TimeNow = Now()
        If (TimeNow - GameTimer) * 24 * 3600 >= 30 Then
            EndHands
            Exit Sub
        End If
    End If
    ActiveSheet.Unprotect
    Select Case HandClick
    Case 1
        If ActiveCell.Value = Range("Hand1").Value Then
            ActiveCell.Interior.ColorIndex = 35
            HandClick = 2
        Else
            Range("BadHands").Value = Range("BadHands").Value + 1
            HandGameInProgress = False
            ActiveSheet.Protect
            DealHands
        End If
    Case 2
        If ActiveCell.Value = Range("Hand2").Value Then
            ActiveCell.Interior.ColorIndex = 35
            HandClick = 3
        Else
            Range("BadHands").Value = Range("BadHands").Value + 1
            HandGameInProgress = False
            ActiveSheet.Protect
            DealHands
        End If
    Case 3
        If ActiveCell.Value = Range("Hand3").Value Then
            ActiveCell.Interior.ColorIndex = 35
            Range("GoodHands").Value = Range("GoodHands").Value + 1
            ActiveSheet.Protect
            DealHands
        Else
            Range("BadHands").Value = Range("BadHands").Value + 1
            HandGameInProgress = False
            ActiveSheet.Protect
            DealHands
        End If
    End Select
    ActiveSheet.Protect
End Sub


Attribute VB_Name = "SliderCode"
'|fffd| Mar 2005 Glynn Consulting Ltd
'Do not distribute without prior permission
'Email enquiries@glynnconsulting.co.uk
'Web site - www.glynnconsulting.co.uk

Dim MoveRow As Integer, CellColour As Integer, MoveColumn As String
Dim Mixer As Integer, BoardCell(25) As Integer, CheckFlag As Boolean
Dim ChosenCell(25) As String

Sub MoveRowLeft1()
Attribute MoveRowLeft1.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveRow = 4
    MoveLeft
End Sub

Sub MoveRowLeft2()
Attribute MoveRowLeft2.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveRow = 5
    MoveLeft
End Sub

Sub MoveRowLeft3()
Attribute MoveRowLeft3.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveRow = 6
    MoveLeft
End Sub

Sub MoveRowLeft4()
Attribute MoveRowLeft4.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveRow = 7
    MoveLeft
End Sub

Sub MoveRowLeft5()
Attribute MoveRowLeft5.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveRow = 8
    MoveLeft
End Sub

Sub MoveLeft()
Attribute MoveLeft.VB_ProcData.VB_Invoke_Func = " \n14"
    ActiveSheet.Unprotect
    [a1].Select
    If Range("c" & MoveRow).Interior.ColorIndex <> -4142 Then Exit Sub
    For CellColour = 0 To 3
        Range("c" & MoveRow).Offset(0, CellColour).Interior.ColorIndex = Range("c" & MoveRow).Offset(0, CellColour + 1).Interior.ColorIndex
        Range("c" & MoveRow).Offset(0, CellColour).Value = Range("c" & MoveRow).Offset(0, CellColour + 1).Value
    Next CellColour
    Range("g" & MoveRow).Interior.ColorIndex = -4142
    Range("g" & MoveRow).Value = ""
    ActiveSheet.Protect DrawingObjects:=True
    CheckFinish1
End Sub

Sub MoveRowRight1()
Attribute MoveRowRight1.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveRow = 4
    MoveRowRight
End Sub

Sub MoveRowRight2()
Attribute MoveRowRight2.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveRow = 5
    MoveRowRight
End Sub

Sub MoveRowRight3()
Attribute MoveRowRight3.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveRow = 6
    MoveRowRight
End Sub

Sub MoveRowRight4()
Attribute MoveRowRight4.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveRow = 7
    MoveRowRight
End Sub

Sub MoveRowRight5()
Attribute MoveRowRight5.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveRow = 8
    MoveRowRight
End Sub

Sub MoveRowRight()
Attribute MoveRowRight.VB_ProcData.VB_Invoke_Func = " \n14"
    ActiveSheet.Unprotect
    [a1].Select
    If Range("g" & MoveRow).Interior.ColorIndex <> -4142 Then Exit Sub
    For CellColour = 4 To 0 Step -1
        Range("c" & MoveRow).Offset(0, CellColour).Interior.ColorIndex = Range("c" & MoveRow).Offset(0, CellColour - 1).Interior.ColorIndex
        Range("c" & MoveRow).Offset(0, CellColour).Value = Range("c" & MoveRow).Offset(0, CellColour - 1).Value
    Next CellColour
    Range("c" & MoveRow).Interior.ColorIndex = -4142
    Range("c" & MoveRow).Value = ""
    ActiveSheet.Protect DrawingObjects:=True
    CheckFinish1
End Sub

Sub MoveColDown1()
Attribute MoveColDown1.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveColumn = "C"
    MoveDown
End Sub

Sub MoveColDown2()
Attribute MoveColDown2.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveColumn = "D"
    MoveDown
End Sub

Sub MoveColDown3()
Attribute MoveColDown3.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveColumn = "E"
    MoveDown
End Sub

Sub MoveColDown4()
Attribute MoveColDown4.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveColumn = "F"
    MoveDown
End Sub

Sub MoveColDown5()
Attribute MoveColDown5.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveColumn = "G"
    MoveDown
End Sub

Sub MoveDown()
Attribute MoveDown.VB_ProcData.VB_Invoke_Func = " \n14"
    ActiveSheet.Unprotect
    [a1].Select
    If Range(MoveColumn & "8").Interior.ColorIndex <> -4142 Then Exit Sub
    For CellColour = 4 To 0 Step -1
        Range(MoveColumn & "4").Offset(CellColour, 0).Interior.ColorIndex = Range(MoveColumn & "4").Offset(CellColour - 1, 0).Interior.ColorIndex
        Range(MoveColumn & "4").Offset(CellColour, 0).Value = Range(MoveColumn & "4").Offset(CellColour - 1, 0).Value
    Next CellColour
    Range(MoveColumn & "4").Interior.ColorIndex = -4142
    Range(MoveColumn & "4").Value = ""
    ActiveSheet.Protect DrawingObjects:=True
    CheckFinish1
End Sub

Sub MoveColUp1()
Attribute MoveColUp1.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveColumn = "C"
    MoveUp
End Sub

Sub MoveColUp2()
Attribute MoveColUp2.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveColumn = "D"
    MoveUp
End Sub

Sub MoveColUp3()
Attribute MoveColUp3.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveColumn = "E"
    MoveUp
End Sub

Sub MoveColUp4()
Attribute MoveColUp4.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveColumn = "F"
    MoveUp
End Sub

Sub MoveColUp5()
Attribute MoveColUp5.VB_ProcData.VB_Invoke_Func = " \n14"
    MoveColumn = "G"
    MoveUp
End Sub

Sub MoveUp()
Attribute MoveUp.VB_ProcData.VB_Invoke_Func = " \n14"
    ActiveSheet.Unprotect
    [a1].Select
    If Range(MoveColumn & "4").Interior.ColorIndex <> -4142 Then Exit Sub
    For CellColour = 0 To 3
        Range(MoveColumn & "4").Offset(CellColour, 0).Interior.ColorIndex = Range(MoveColumn & "4").Offset(CellColour + 1, 0).Interior.ColorIndex
        Range(MoveColumn & "4").Offset(CellColour, 0).Value = Range(MoveColumn & "4").Offset(CellColour + 1, 0).Value
    Next CellColour
    Range(MoveColumn & "8").Interior.ColorIndex = -4142
    Range(MoveColumn & "8").Value = ""
    ActiveSheet.Protect DrawingObjects:=True
    CheckFinish1
End Sub



Sub CheckFinish1()
Attribute CheckFinish1.VB_ProcData.VB_Invoke_Func = " \n14"
    For n = 0 To 4
        For m = 0 To 4
            If [c4].Offset(m, n).Value <> [j4].Offset(m, n).Value Then Exit Sub
            If [c4].Offset(m, n).Interior.ColorIndex <> [j4].Offset(m, n).Interior.ColorIndex Then Exit Sub
        Next m
    Next n
    If FullGameInProgress Then
        TimeNow = Now()
        Application.ScreenUpdating = False
        Score1 = (TimeNow - GameTimer) * 24 * 3600
        Sheets("Results").Select
        Range("GameResults").Offset(2, 3).Value = Score1
        GameTimer = Now()
        Sheets("Rhymes").Select
    Else
        MsgBox "Well done you solved it", vbExclamation, "Puzzle solved"
        Shuffle
        Exit Sub
    End If
    
End Sub

Sub GiveUpSlider()
Attribute GiveUpSlider.VB_ProcData.VB_Invoke_Func = " \n14"
    If FullGameInProgress Then
        TimeNow = Now()
        Application.ScreenUpdating = False
        Score1 = 0
        Sheets("Results").Select
        Range("GameResults").Offset(2, 3).Value = Score1
        GameTimer = Now()
        Sheets("Rhymes").Select
    Else
        Shuffle
        Exit Sub
    End If
End Sub
Sub Shuffle()
Attribute Shuffle.VB_ProcData.VB_Invoke_Func = " \n14"
    Randomize
    ActiveSheet.Unprotect
    BoardCell(1) = 1
    For n = 2 To 25
TryAgain:
        BoardCell(n) = Int((25) * Rnd + 1)
        CheckFlag = False
        For m = 1 To n - 1
            If BoardCell(n) = BoardCell(m) Then CheckFlag = True: Exit For
        Next m
        If CheckFlag = True Then GoTo TryAgain
    Next n
    ChosenCell(BoardCell(1)) = "c4"
    ChosenCell(BoardCell(2)) = "d4"
    ChosenCell(BoardCell(3)) = "e4"
    ChosenCell(BoardCell(4)) = "f4"
    ChosenCell(BoardCell(5)) = "g4"
    ChosenCell(BoardCell(6)) = "c5"
    ChosenCell(BoardCell(7)) = "d5"
    ChosenCell(BoardCell(8)) = "e5"
    ChosenCell(BoardCell(9)) = "f5"
    ChosenCell(BoardCell(10)) = "g5"
    ChosenCell(BoardCell(11)) = "c6"
    ChosenCell(BoardCell(12)) = "d6"
    ChosenCell(BoardCell(13)) = "e6"
    ChosenCell(BoardCell(14)) = "f6"
    ChosenCell(BoardCell(15)) = "g6"
    ChosenCell(BoardCell(16)) = "c7"
    ChosenCell(BoardCell(17)) = "d7"
    ChosenCell(BoardCell(18)) = "e7"
    ChosenCell(BoardCell(19)) = "f7"
    ChosenCell(BoardCell(20)) = "g7"
    ChosenCell(BoardCell(21)) = "c8"
    ChosenCell(BoardCell(22)) = "d8"
    ChosenCell(BoardCell(23)) = "e8"
    ChosenCell(BoardCell(24)) = "f8"
    ChosenCell(BoardCell(25)) = "g8"
    Range(ChosenCell(1)).Value = [j4].Value
    Range(ChosenCell(1)).Interior.ColorIndex = [j4].Interior.ColorIndex
    Range(ChosenCell(2)).Value = [k4].Value
    Range(ChosenCell(2)).Interior.ColorIndex = [k4].Interior.ColorIndex
    Range(ChosenCell(3)).Value = [l4].Value
    Range(ChosenCell(3)).Interior.ColorIndex = [l4].Interior.ColorIndex
    Range(ChosenCell(4)).Value = [m4].Value
    Range(ChosenCell(4)).Interior.ColorIndex = [m4].Interior.ColorIndex
    Range(ChosenCell(5)).Value = [n4].Value
    Range(ChosenCell(5)).Interior.ColorIndex = [n4].Interior.ColorIndex
    Range(ChosenCell(6)).Value = [j5].Value
    Range(ChosenCell(6)).Interior.ColorIndex = [j5].Interior.ColorIndex
    Range(ChosenCell(7)).Value = [k5].Value
    Range(ChosenCell(7)).Interior.ColorIndex = [k5].Interior.ColorIndex
    Range(ChosenCell(8)).Value = [l5].Value
    Range(ChosenCell(8)).Interior.ColorIndex = [l5].Interior.ColorIndex
    Range(ChosenCell(9)).Value = [m5].Value
    Range(ChosenCell(9)).Interior.ColorIndex = [m5].Interior.ColorIndex
    Range(ChosenCell(10)).Value = [n5].Value
    Range(ChosenCell(10)).Interior.ColorIndex = [n5].Interior.ColorIndex
    Range(ChosenCell(11)).Value = [j6].Value
    Range(ChosenCell(11)).Interior.ColorIndex = [j6].Interior.ColorIndex
    Range(ChosenCell(12)).Value = [k6].Value
    Range(ChosenCell(12)).Interior.ColorIndex = [k6].Interior.ColorIndex
    Range(ChosenCell(13)).Value = [l6].Value
    Range(ChosenCell(13)).Interior.ColorIndex = [l6].Interior.ColorIndex
    Range(ChosenCell(14)).Value = [m6].Value
    Range(ChosenCell(14)).Interior.ColorIndex = [m6].Interior.ColorIndex
    Range(ChosenCell(15)).Value = [n6].Value
    Range(ChosenCell(15)).Interior.ColorIndex = [n6].Interior.ColorIndex
    Range(ChosenCell(16)).Value = [j7].Value
    Range(ChosenCell(16)).Interior.ColorIndex = [j7].Interior.ColorIndex
    Range(ChosenCell(17)).Value = [k7].Value
    Range(ChosenCell(17)).Interior.ColorIndex = [k7].Interior.ColorIndex
    Range(ChosenCell(18)).Value = [l7].Value
    Range(ChosenCell(18)).Interior.ColorIndex = [l7].Interior.ColorIndex
    Range(ChosenCell(19)).Value = [m7].Value
    Range(ChosenCell(19)).Interior.ColorIndex = [m7].Interior.ColorIndex
    Range(ChosenCell(20)).Value = [n7].Value
    Range(ChosenCell(20)).Interior.ColorIndex = [n7].Interior.ColorIndex
    Range(ChosenCell(21)).Value = [j8].Value
    Range(ChosenCell(21)).Interior.ColorIndex = [j8].Interior.ColorIndex
    Range(ChosenCell(22)).Value = [k8].Value
    Range(ChosenCell(22)).Interior.ColorIndex = [k8].Interior.ColorIndex
    Range(ChosenCell(23)).Value = [l8].Value
    Range(ChosenCell(23)).Interior.ColorIndex = [l8].Interior.ColorIndex
    Range(ChosenCell(24)).Value = [m8].Value
    Range(ChosenCell(24)).Interior.ColorIndex = [m8].Interior.ColorIndex
    Range(ChosenCell(25)).Value = [n8].Value
    Range(ChosenCell(25)).Interior.ColorIndex = [n8].Interior.ColorIndex
    ActiveSheet.Protect DrawingObjects:=True
    [a1].Select
End Sub
Attribute VB_Name = "Temp"
Sub CanScroll()
Attribute CanScroll.VB_ProcData.VB_Invoke_Func = "q\n14"
ActiveSheet.ScrollArea = "a1:g22"
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Workbook_Open()
    Sheets("MainMenu").Select
    Application.Calculation = xlAutomatic
    ActiveSheet.ScrollArea = ""
    Range("A1:D21").Select
    ActiveWindow.Zoom = True
    ActiveSheet.ScrollArea = "a1:d21"
    ActiveWindow.ScrollRow = 1
    ActiveWindow.ScrollColumn = 1
    [a4].Select
End Sub


INQUEST-PP=macro
