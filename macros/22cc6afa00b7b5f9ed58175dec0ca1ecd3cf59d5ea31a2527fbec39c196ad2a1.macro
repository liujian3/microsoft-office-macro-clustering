Attribute VB_Name = "Module1"
Sub Button1_Click()

Dim myFile As String, rng As Range, cellValue As Variant, i As Integer, j As Integer, k As Integer
Dim String2Write As String

Dim folder As Range
Set folder = Worksheets("Overview - Settings").Range("Folder")
Debug.Print folder.Value
myFile = folder & "\yard_topology-routes.xml"

Set rng = Selection

Open myFile For Output As #1

For i = 1 To rng.Rows.Count
    For j = 1 To rng.Columns.Count
        cellValue = rng.Cells(i, j).Value
        Rem -=-=-=-=-=-=-=-
        ' IF this is line 1, first 5 columns....
        ' write this:  <route start="NODE_GIEL3" end="NODE_GEL3" valid-types="TS" reversible="1" priority="1">
        If j = 1 Then
            k = 1
            String2Write = "<route start=" & Chr(34) & "NODE_" & cellValue & Chr(34) & " end=" & Chr(34) & "NODE_"
        End If
        If j = 2 Then
            String2Write = String2Write & cellValue & Chr(34) & " valid-types=" & Chr(34)
        End If
        If j = 3 Then
            String2Write = String2Write & cellValue & Chr(34) & " reversible=" & Chr(34)
        End If
        If j = 4 Then
            String2Write = String2Write & cellValue & Chr(34) & " priority=" & Chr(34)
        End If
        If j = 5 Then
            String2Write = String2Write & cellValue & Chr(34) & ">"
            Print #1, String2Write
            Print #1, vbTab & "<container-node-list>"
        End If
        Rem  -=-=-=-=-=-=-=-
        ' IF this is after the 5th column, then chop into 3 sets and write a line for each of the sets of 3
        ' <container-node ordinal="1" name="NODE_TS_GIEL3SW77" position="N/A" />
        If j > 5 Then
            If k = 1 Then
                String2Write = "<container-node ordinal =" & Chr(34) & cellValue
            End If
            If k = 2 Then
                String2Write = String2Write & Chr(34) & " name=" & Chr(34) & "NODE_" & cellValue & Chr(34) & " position="
            End If
            If k = 3 Then
                String2Write = String2Write & Chr(34) & cellValue & Chr(34) & " />"
                If Len(cellValue) > 0 Then
                    Print #1, vbTab & vbTab & String2Write
                End If
            End If
            k = k + 1
            If k > 3 Then
                
                k = 1
            End If
        End If
        If j = rng.Columns.Count Then
            Print #1, vbTab & "</container-node-list>"
            Print #1, "</route>"
        End If
    Next j
Next i

Close #1

MsgBox ("wrote the xml code snippet for yard_topology, routes to the file" & myFile)

End Sub


Sub WriteTopoTSegSwitch()
    
Dim folder As Range
Set folder = Worksheets("Overview - Settings").Range("Folder")
Debug.Print folder.Value

Dim myFile As String, rng As Range, cellValue As Variant, i As Integer, j As Integer, k As Integer
Dim String2Write As String

myFile = folder & "\yard_topology-tsegs-Switches.xml"

Set rng = Selection

Open myFile For Output As #1

For i = 1 To rng.Rows.Count
    For j = 1 To rng.Columns.Count
        cellValue = rng.Cells(i, j).Value
        Rem -=-=-=-=-=-=-=-
        ' IF this is line 1, first 3 columns....
        ' write this:  <container-node name="<<SwitchNode>>" type="SWITCH_NODE" displayID="SOUTH">
        
Rem Write top line
        If j = 1 Then
            k = 1
            String2Write = "<container-node name=" & Chr(34) & cellValue & Chr(34) & " type=" & Chr(34)
        End If
        If j = 2 Then
            String2Write = String2Write & cellValue & Chr(34) & " displayID=" & Chr(34)
        End If
        If j = 3 Then
            String2Write = String2Write & cellValue & Chr(34) & ">"
            Print #1, String2Write
        End If
Rem write port-entrance subsection
        If j > 3 Then
            If k = 1 Then
                Print #1, vbTab & "<port-entrance>"
                String2Write = vbTab & vbTab & "<container-node port=" & Chr(34) & cellValue
            End If
            If k = 2 Then
                String2Write = String2Write & Chr(34) & ">" & cellValue & "</container-node>"
                Print #1, String2Write
                Print #1, vbTab & "</port-entrance>"
             End If
Rem write port-exit-left subsection
            If k = 3 Then
                Print #1, vbTab & "<port-exit-left>"
                String2Write = vbTab & vbTab & "<container-node port=" & Chr(34) & cellValue
            End If
            If k = 4 Then
                String2Write = String2Write & Chr(34) & ">" & cellValue & "</container-node>"
                Print #1, String2Write
                Print #1, vbTab & "</port-exit-left>"
             End If
Rem write port-exit-right subsection and close it up!
            If k = 5 Then
                Print #1, vbTab & "<port-exit-right>"
                String2Write = vbTab & vbTab & "<container-node port=" & Chr(34) & cellValue
            End If
            If k = 6 Then
                String2Write = String2Write & Chr(34) & ">" & cellValue & "</container-node>"
                Print #1, String2Write
                Print #1, vbTab & "</port-exit-right>"
                Print #1, "</container-node>"
             End If
            k = k + 1
            If k > 6 Then
                k = 1
            End If
        End If
    Next j
Next i

Close #1

MsgBox ("wrote the xml code snippet for yard_topology, tsegs / switches to the file" & myFile)

End Sub

Sub WriteTopoTSegNonSwitches()
    
Dim folder As Range
Set folder = Worksheets("Overview - Settings").Range("Folder")
Debug.Print folder.Value

Dim myFile As String, rng As Range, cellValue As Variant, i As Integer, j As Integer, k As Integer
Dim String2Write As String

myFile = folder & "\yard_topology-tsegs-Other.xml"

Set rng = Selection

Open myFile For Output As #1

For i = 1 To rng.Rows.Count
    For j = 1 To rng.Columns.Count
        cellValue = rng.Cells(i, j).Value
        Rem -=-=-=-=-=-=-=-
        ' IF this is line 1, first 3 columns....
        ' write this:  <container-node name="NODE_tsegname" type="TSEG_NODE" displayID="SOUTH">
        If j = 1 Then
            k = 1
            String2Write = "<container-node name=" & Chr(34) & cellValue & Chr(34) & " type=" & Chr(34)
        End If
        If j = 2 Then
            String2Write = String2Write & cellValue & Chr(34) & " displayID=" & Chr(34)
        End If
        If j = 3 Then
            String2Write = String2Write & cellValue & Chr(34) & ">"
            Print #1, String2Write
        End If
        Rem  -=-=-=-=-=-=-=-
        ' IF this is after the 3th column, then chop into sets and write a line for each of the sets of 2
        ' write this:  <container-node Port="<<port-entrance>>"><<Node>></container-node>
        If j > 3 Then
            If k = 1 Then
                String2Write = "<container-node port=" & Chr(34) & cellValue
            End If
            If k = 2 Then
                String2Write = String2Write & Chr(34) & ">" & cellValue & "</container-node>"
                If cellValue = "N/A" Then
                    Print #1, vbTab & "<port-entrance/>"
                Else
                    Print #1, vbTab & "<port-entrance>"
                    Print #1, vbTab & vbTab & String2Write
                    Print #1, vbTab & "</port-entrance>"
                End If
             End If
            If k = 3 Then
                String2Write = "<container-node port=" & Chr(34) & cellValue
            End If
            If k = 4 Then
                String2Write = String2Write & Chr(34) & ">" & cellValue & "</container-node>"
                If cellValue = "N/A" Then
                    Print #1, vbTab & "<port-exit/>"
                Else
                    Print #1, vbTab & "<port-exit>"
                    Print #1, vbTab & vbTab & String2Write
                    Print #1, vbTab & "</port-exit>"
                End If
             End If
            k = k + 1
            If k > 4 Then
                k = 1
            End If
        End If
        If j = rng.Columns.Count Then
            Print #1, "</container-node>"
        End If
    Next j
Next i

Close #1

MsgBox ("wrote the xml code snippet for yard_topology, tsegs / switches to the file " & myFile)

End Sub


Sub WriteInputsSnippet()

Dim folder As Range
Set folder = Worksheets("Overview - Settings").Range("Folder")
Debug.Print folder.Value

Dim myFile As String, rng As Range, cellValue As Variant, i As Integer, j As Integer, k As Integer
Dim String2Write As String

myFile = folder & "\yard_asset_config-inputs.xml"

Set rng = Selection

Open myFile For Output As #1

For i = 1 To rng.Rows.Count
    For j = 1 To rng.Columns.Count
        cellValue = rng.Cells(i, j).Value
        Rem -=-=-=-=-=-=-=-
        ' IF this is line 1, first 3 columns....
        ' write this:
        If j = 1 Then
            k = 1
            String2Write = "<input-point id=" & Chr(34) & cellValue & Chr(34) & " type=" & Chr(34)
        End If
        If j = 2 Then
            String2Write = String2Write & cellValue & Chr(34) & " name=" & Chr(34)
        End If
        If j = 3 Then
            String2Write = String2Write & cellValue & Chr(34) & ">"
            Print #1, String2Write
        End If
        Rem  -=-=-=-=-=-=-=-
        ' IF this is after the 3th column, then chop into sets and write a line for each of the sets of 2
        ' write this:  <input-point id="I_T2NWK" type="SWCTKN" name="I_ST02NWK">
        If j > 3 Then
            If k = 1 Then
                String2Write = "<switch>" & cellValue & "</switch>"
                Print #1, vbTab & String2Write
            End If
            If k = 2 Then
                String2Write = "<tseg>" & cellValue & "</tseg>"
                Print #1, vbTab & String2Write
            End If
            If k = 3 Then
                String2Write = "<device>" & cellValue & "</device>"
                Print #1, vbTab & String2Write
            End If
            If k = 4 Then
                String2Write = "<iopt>" & cellValue & "</iopt>"
                Print #1, vbTab & String2Write
            End If
            If k = 5 Then
                String2Write = "<invert>" & cellValue & "</invert>"
                Print #1, vbTab & String2Write
            End If
            k = k + 1
            If k > 5 Then
                k = 1
            End If
        End If
        If j = rng.Columns.Count Then
            Print #1, "</input-point>"
        End If
    Next j
Next i

Close #1

MsgBox ("wrote the xml code snippet for yard_topology, tsegs / switches to the file " & myFile)

End Sub

Sub WriteOutputsSnippet()

Dim folder As Range
Set folder = Worksheets("Overview - Settings").Range("Folder")
Debug.Print folder.Value

Dim myFile As String, rng As Range, cellValue As Variant, i As Integer, j As Integer, k As Integer
Dim String2Write As String

myFile = folder & "\yard_asset_config-outputs.xml"

Set rng = Selection

Open myFile For Output As #1

For i = 1 To rng.Rows.Count
    For j = 1 To rng.Columns.Count
        cellValue = rng.Cells(i, j).Value
        Rem -=-=-=-=-=-=-=-
        ' IF this is line 1, first 3 columns....
        ' write this:
        If j = 1 Then
            k = 1
            String2Write = "<output-point id=" & Chr(34) & cellValue & Chr(34) & " type=" & Chr(34)
        End If
        If j = 2 Then
            String2Write = String2Write & cellValue & Chr(34) & " name=" & Chr(34)
        End If
        If j = 3 Then
            String2Write = String2Write & cellValue & Chr(34) & ">"
            Print #1, String2Write
        End If
        Rem  -=-=-=-=-=-=-=-
        ' IF this is after the 3th column, then chop into sets and write a line for each of the sets of 2
        ' write this:  <input-point id="I_T2NWK" type="SWCTKN" name="I_ST02NWK">
        If j > 3 Then
            If k = 1 Then
                String2Write = "<switch>" & cellValue & "</switch>"
                Print #1, vbTab & String2Write
            End If
            If k = 2 Then
                String2Write = "<tseg>" & cellValue & "</tseg>"
                Print #1, vbTab & String2Write
            End If
            If k = 3 Then
                String2Write = "<device>" & cellValue & "</device>"
                Print #1, vbTab & String2Write
            End If
            If k = 4 Then
                String2Write = "<iopt>" & cellValue & "</iopt>"
                Print #1, vbTab & String2Write
            End If
            If k = 5 Then
                String2Write = "<invert>" & cellValue & "</invert>"
                Print #1, vbTab & String2Write
            End If
            k = k + 1
            If k > 5 Then
                k = 1
            End If
        End If
        If j = rng.Columns.Count Then
            Print #1, "</output-point>"
        End If
    Next j
Next i

Close #1

MsgBox ("wrote the xml code snippet for yard_topology, tsegs / switches to the file" & myFile)

End Sub


Sub WriteSwitchesSnippet()
    
Dim folder As Range
Set folder = Worksheets("Overview - Settings").Range("Folder")
Debug.Print folder.Value

Dim myFile As String, rng As Range, cellValue As Variant, i As Integer, j As Integer, k As Integer
Dim String2Write As String

myFile = folder & "\yard_asset_config-switches.xml"

Set rng = Selection

Open myFile For Output As #1

For i = 1 To rng.Rows.Count
    For j = 1 To rng.Columns.Count
        cellValue = rng.Cells(i, j).Value
        Rem -=-=-=-=-=-=-=-
        ' IF this is line 1, first 2 columns....
        ' write this:     <switch name="|fffd|name|fffd|" type="|fffd|type|fffd|">
        If j = 1 Then
            k = 1
            String2Write = "<switch name=" & Chr(34) & cellValue & Chr(34) & " type=" & Chr(34)
        End If
        If j = 2 Then
            String2Write = String2Write & cellValue & Chr(34) & ">"
            Print #1, String2Write
        End If
        Rem  -=-=-=-=-=-=-=-
        ' IF this is after the 3th column, then chop into sets and write a line for each of the sets of 2
        ' write this:  <input-point id="I_T2NWK" type="SWCTKN" name="I_ST02NWK">
        If j > 2 Then
            If k = 1 Then
                String2Write = "<is-valid>" & cellValue & "</is-valid>"
                Print #1, vbTab & String2Write
            End If
            If k = 2 Then
                String2Write = "<is-left-normal>" & cellValue & "</is-left-normal>"
                Print #1, vbTab & String2Write
            End If
            If k = 3 Then
                String2Write = "<in-pd>" & cellValue & "</in-pd>"
                Print #1, vbTab & String2Write
            End If
            If k = 4 Then
                String2Write = "<in-left>" & cellValue & "</in-left>"
                Print #1, vbTab & String2Write
            End If
            If k = 5 Then
                String2Write = "<in-right>" & cellValue & "</in-right>"
                Print #1, vbTab & String2Write
            End If
            If k = 6 Then
                String2Write = "<out-left>" & cellValue & "</out-left>"
                Print #1, vbTab & String2Write
            End If
            If k = 7 Then
                String2Write = "<out-right>" & cellValue & "</out-right>"
                Print #1, vbTab & String2Write
            End If
            If k = 8 Then
                String2Write = "<out-lock>" & cellValue & "</out-lock>"
                Print #1, vbTab & String2Write
            End If
            If k = 9 Then
                String2Write = "<in-field-lock>" & cellValue & "</in-field-lock>"
                Print #1, vbTab & String2Write
            End If
            If k = 10 Then
                String2Write = "<in-pushbutton-latch>" & cellValue & "</in-pushbutton-latch>"
                Print #1, vbTab & String2Write
            End If
            If k = 11 Then
                String2Write = "<in-ctcl>" & cellValue & "</in-ctcl>"
                Print #1, vbTab & String2Write
            End If
            If k = 12 Then
                String2Write = "<in-ctcr>" & cellValue & "</in-ctcr>"
                Print #1, vbTab & String2Write
            End If
            If k = 13 Then
                String2Write = "<crossover-partner>" & cellValue & "</crossover-partner>"
                Print #1, vbTab & String2Write
            End If
            If k = 14 Then
                String2Write = "<lap-partner>" & cellValue & "</lap-partner>"
                Print #1, vbTab & String2Write
            End If
            If k = 15 Then
                String2Write = "<container-node name=" & Chr(34) & cellValue & Chr(34) & " offset=" & Chr(34)
            End If
            If k = 16 Then
                String2Write = String2Write & cellValue & Chr(34) & "/> "
                Print #1, vbTab & String2Write
                Print #1, "</switch>"
            End If
            k = k + 1
            If k > 16 Then
                k = 1
            End If
        End If
    Next j
Next i

Close #1

MsgBox ("wrote the xml code snippet for yard_topology, tsegs / switches to the file" & myFile)

End Sub


Sub WriteGatesSnippet()

Dim folder As Range
Set folder = Worksheets("Overview - Settings").Range("Folder")
Debug.Print folder.Value

Dim myFile As String, rng As Range, cellValue As Variant, i As Integer, j As Integer, k As Integer

Dim String2Write As String

myFile = folder & "\yard_asset_config-gates.xml"

Set rng = Selection

Open myFile For Output As #1

For i = 1 To rng.Rows.Count
    For j = 1 To rng.Columns.Count
        cellValue = rng.Cells(i, j).Value
        Rem -=-=-=-=-=-=-=-
        ' IF this is line 1, first 3 columns....
        ' write this:   <gate name="<<name>>" type="ENTRANCE_EXIT">
        '                   <container-node name="NODE_DSLD" offset=""/>
        '               </gate>
        If j = 1 Then
            k = 1
            String2Write = "<gate name=" & Chr(34) & cellValue & Chr(34) & " type=" & Chr(34)
        End If
        If j = 2 Then
            String2Write = String2Write & cellValue & Chr(34) & ">" & vbCrLf
        End If
        If j = 3 Then
            String2Write = String2Write & vbTab & "<container-node name=" & Chr(34) & cellValue & Chr(34) & " offset=" & Chr(34)
        End If
        If j = 4 Then
            String2Write = String2Write & cellValue & Chr(34) & "/>" & vbCrLf & "</gate>"
            Print #1, String2Write
        End If
    Next j
Next i

Close #1

MsgBox ("wrote the xml code snippet for yard_topology, gates to the file" & myFile)

End Sub

Sub WritetracksegmentsSnippet()

Dim folder As Range
Set folder = Worksheets("Overview - Settings").Range("Folder")
Debug.Print folder.Value

Dim myFile As String, rng As Range, cellValue As Variant, i As Integer, j As Integer, k As Integer
Dim String2Write As String

myFile = folder & "\yard_asset_config-track-segments.xml"

Set rng = Selection

Open myFile For Output As #1

For i = 1 To rng.Rows.Count
    For j = 1 To rng.Columns.Count
        cellValue = rng.Cells(i, j).Value
        Rem -=-=-=-=-=-=-=-
        ' IF this is line 1, first 3 columns....
        ' write this:   <track-segment name="<<name>>">
        '                   <container-node>NODE_DSLD</container-node>
        '               </track-segment>
        If j = 1 Then
            k = 1
            String2Write = "<track-segment name=" & Chr(34) & cellValue & Chr(34) & ">" & vbCrLf
        End If
        If j = 2 Then
            String2Write = String2Write & vbTab & "<container-node>" & cellValue & "</container-node>"
            Print #1, String2Write
        End If
        If j = 3 Then
            If cellValue = "N/A" Then
                String2Write = "</track-segment>"
                Print #1, String2Write
            Else
                String2Write = vbTab & "<in-pd>" & cellValue & "</in-pd>" & vbCrLf & "</track-segment>"
                Print #1, String2Write
            End If
        End If
    Next j
Next i

Close #1

MsgBox ("wrote the xml code snippet for yard_topology, track-segments to the file" & myFile)

End Sub


Sub WriteModbusDevicesSnippet()
    
Dim folder As Range
Set folder = Worksheets("Overview - Settings").Range("Folder")
Debug.Print folder.Value

Dim myFile As String, rng As Range, cellValue As Variant, i As Integer, j As Integer, k As Integer
Dim String2Write As String

myFile = folder & "\yard_asset_config-Modbus-devices.xml"

Set rng = Selection

Open myFile For Output As #1

For i = 1 To rng.Rows.Count
    For j = 1 To rng.Columns.Count
        cellValue = rng.Cells(i, j).Value
        Rem -=-=-=-=-=-=-=-
        ' IF this is line 1, first 3 columns....
        ' write this: <device id="2" iochannel="2" name="string">
'                         <description>Modbus</description>
'                         <parameter name="ModbusNum">2</parameter>
'                         <parameter name="InputAddressBase">0</parameter>
'                         <parameter name="OutputAddressBase">0</parameter>
'                         <parameter name="MessageType">DISCRETE</parameter>
'                         <parameter name="MessageFrequencyMs">500</parameter>
'                     </device>
        If j = 1 Then
            k = 1
            String2Write = "<device id=" & Chr(34) & cellValue & Chr(34) & " iochannel=" & Chr(34)
        End If
        If j = 2 Then
            String2Write = String2Write & cellValue & Chr(34) & " name=" & Chr(34)
        End If
        If j = 3 Then
            String2Write = String2Write & cellValue & Chr(34) & ">"
            Print #1, String2Write
        End If
'  line 2 and more!
        If j = 5 Then
            String2Write = vbTab & "<parameter name=" & Chr(34) & "ModbusNum" & Chr(34) & ">" & cellValue & "</parameter>"
            Print #1, String2Write
        End If
        If j = 6 Then
            String2Write = vbTab & "<parameter name=" & Chr(34) & "InputAddressBase" & Chr(34) & ">" & cellValue & "</parameter>"
            Print #1, String2Write
        End If
        If j = 7 Then
            String2Write = vbTab & "<parameter name=" & Chr(34) & "OutputAddressBase" & Chr(34) & ">" & cellValue & "</parameter>"
            Print #1, String2Write
        End If
        If j = 8 Then
            String2Write = vbTab & "<parameter name=" & Chr(34) & "MessageType" & Chr(34) & ">" & cellValue & "</parameter>"
            Print #1, String2Write
        End If
        If j = 9 Then
            String2Write = vbTab & "<parameter name=" & Chr(34) & "MessageFrequencyMS" & Chr(34) & ">" & cellValue & "</parameter>" & vbCrLf & "</device>"
            Print #1, String2Write
        End If

    Next j
Next i

Close #1

MsgBox ("wrote the xml code snippet for yard_topology, track-segments to the file" & myFile)

End Sub

Sub WriteModbusIOChannelsSnippet()
    
Dim folder As Range
Set folder = Worksheets("Overview - Settings").Range("Folder")
Debug.Print folder.Value

Dim myFile As String, rng As Range, cellValue As Variant, i As Integer, j As Integer, k As Integer
Dim String2Write As String

Rem myFile = Application.DefaultFilePath & "\yard_asset_config-Modbus-io_channels.xml"
myFile = folder & "\yard_asset_config-Modbus-io_channels.xml"

Set rng = Selection

Open myFile For Output As #1

For i = 1 To rng.Rows.Count
    For j = 1 To rng.Columns.Count
        cellValue = rng.Cells(i, j).Value
        Rem -=-=-=-=-=-=-=-
        If j = 1 Then
            k = 1
            String2Write = "<io-channel id=" & Chr(34) & cellValue & Chr(34) & ">" & vbCrLf
        End If
        If j = 2 Then
            String2Write = String2Write & vbTab & "<transport type=" & Chr(34) & cellValue & Chr(34) & ">" & vbCrLf
        End If
        If j = 3 Then
            String2Write = String2Write & vbTab & vbTab & "<target-address>" & cellValue & "</target-address>" & vbCrLf
        End If
        If j = 4 Then
            String2Write = String2Write & vbTab & vbTab & "<target-port>" & cellValue & "</target-port>" & vbCrLf & vbTab & "</transport>" & vbCrLf
        End If
        If j = 5 Then
            String2Write = String2Write & vbTab & "<protocol-stack type=" & Chr(34) & cellValue & Chr(34) & ">" & vbCrLf
        End If
        If j = 6 Then
            String2Write = String2Write & vbTab & vbTab & "<protocol name=" & Chr(34) & cellValue & Chr(34) & "></protocol>" & vbCrLf
            String2Write = String2Write & vbTab & "</protocol-stack>" & vbCrLf & "</io-channel>"
            Print #1, String2Write
        End If
    Next j
Next i

Close #1

MsgBox ("wrote the xml code snippet for yard_topology, track-segments to the file" & myFile)

End Sub


Attribute VB_Name = "Module2"
Sub topo_gates_Button1_Click()

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
