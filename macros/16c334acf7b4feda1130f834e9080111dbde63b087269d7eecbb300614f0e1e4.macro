Attribute VB_Name = "CLinePosStack"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit
'##########################################################################################################
'# Description  :   Klasse CLinePosStack
'# Version      :   xy.net 0.7
'# History      :   #th24
'##########################################################################################################



'##########################################################################################################
'# Member-Variablen
Private Const NamePrefix As String = "LPS_" 'Pr|fffd|fix f|fffd|r neue Zeilennamen, jeweiliger Stack-Index wird angeh|fffd|ngt
Private m_Stack() As String                 'Feld mit Stackelementen
Private m_TOS As Long                       'Index des obersten Stackelementes in m_Stack, -1=Stack leer
Private m_ResizeNum As Long                 'Anzahl von Feldelementen, um die das Feld bei Bedarf vergr|fffd||fffd|ert wird

'##########################################################################################################
'# Description  :   Initialisiert ein Objekt der Klasse nach dessen erzeugung
'# Parameter    :   -
'# Return       :   -
'# History      :   #th24
'##########################################################################################################
Public Sub Class_Initialize()
    m_ResizeNum = 10
    ReDim m_Stack(m_ResizeNum)
    m_TOS = -1
    
    Repair  'evtl. LinePosStack-Reste im Excel-Blatt entfernen
End Sub


'##########################################################################################################
'# Description  :   Erledigt Aufr|fffd|umarbeiten bevor ein Objekt der Klasse zerst|fffd|rt wird
'# Parameter    :   -
'# Return       :   -
'# History      :   #th24
'##########################################################################################################
Public Sub Class_Terminate()
    Clear
End Sub

'##########################################################################################################
'# Description  :   Benennt die Zeile, in der sich die aktive Zelle befindet, mit einem eindeutigen tempor|fffd|ren
'#                  Namen und legt diesen auf einem internen Stack ab. Mit PopLinePos kann sp|fffd|ter die gleiche
'#                  Zeile wieder selektiert werden, auch wenn sie z. B. durch Einf|fffd|ge- oder L|fffd|schoperationen
'#                  verschoben wurde.
'# Parameter    :   -
'# Return       :   -
'# History      :   #th24
'##########################################################################################################
Public Sub PushLinePos()
    Dim lineName As String  'neuer Name der Zeile
    Dim line As String      'Nummer der ersten Zeile der aktuellen Auswahl
    Dim sheetName As String 'Name des aktiven Excel-Sheets
    
    sheetName = ActiveSheet.Name
    line = Trim(Str(Selection.Row))
    lineName = NamePrefix & Trim(Str(m_TOS + 1))
    ActiveWorkbook.Names.Add Name:=lineName, RefersToR1C1:="=" & sheetName & "!R" & line
    Push (lineName) 'Push
    
End Sub

'##########################################################################################################
'# Description  :   Entfernt das oberste Stack-Element (Bereichsnamen),selektiert den Zellbereich,
'#                  der diesen Namen tr|fffd|gt, und entfernt den Bereichsnamen wieder.
'# Parameter    :   -
'# Return       :   -
'# History      :   #th24
'##########################################################################################################
Public Sub PopLinePos()
    Dim lineName As String  'neuer Name der Zeile
    
    lineName = Pop()
    If lineName <> "" Then
        Application.GoTo Reference:=lineName    'Zeile markieren
        ActiveWorkbook.Names(lineName).Delete   'Bereichsnamen entfernen
    End If
    
End Sub

'##########################################################################################################
'# Description  :   Legt den Zeilennamen auf den Stack. Stack-Feld wird bei Bedarf vergr|fffd||fffd|ert.
'# Parameter    :   lineName    - beliebiger Name
'# Return       :   -
'# History      :   #th24
'##########################################################################################################
Private Sub Push(lineName As String)
    m_TOS = m_TOS + 1
    If m_TOS > UBound(m_Stack) Then     'Stack vergr|fffd||fffd|ern
        ReDim Preserve m_Stack(UBound(m_Stack) + m_ResizeNum)
    End If
    m_Stack(m_TOS) = lineName
End Sub

'##########################################################################################################
'# Description  :   Entfernt Zeilennamen an der Spitze des Stacks und gibt ihn zur|fffd|ck.
'#                  Stack-Feld wird nicht verkleinert.
'# Parameter    :   -
'# Return       :   Name an der Spitze des Stacks
'# History      :   #th24
'##########################################################################################################
Private Function Pop() As String
    Pop = ""
    If m_TOS >= 0 Then
        Pop = m_Stack(m_TOS)
        m_TOS = m_TOS - 1
    End If
End Function

'##########################################################################################################
'# Description  :   L|fffd|scht Stackinhalt und entfernt die Namen in Excel
'# Parameter    :   -
'# Return       :   -
'# History      :   #th24
'##########################################################################################################
Private Sub Clear()
    Dim i As Long
    
    For i = 0 To m_TOS
        ActiveWorkbook.Names(m_Stack(i)).Delete   'Bereichsnamen entfernen
    Next
    
    m_TOS = 0
End Sub

'##########################################################################################################
'# Description  :   Wandelt Stack in String um f|fffd|r Debug-Zwecke
'# Parameter    :   -
'# Return       :   String <Index> <Name>\n...
'# History      :   #th24
'##########################################################################################################
Public Function ToString() As String
    Dim i As Long
    
    For i = m_TOS To 0 Step -1
        ToString = ToString & Str(i) & "   " & m_Stack(i) & vbCrLf
    Next
End Function

'##########################################################################################################
'# Description  :   Entfernt eventuell bei einem Absturz |fffd|briggebliebene LinePos-Bereichsnamen
'#                  im Bereich von LPS_0 ... LPS_20
'#                  Kann zum Wiederherstellen des Anfangszustandes beim Debuggen benutzt werden.
'# Parameter    :   -
'# Return       :   -
'# History      :   #th24
'##########################################################################################################
Private Sub Repair()
    On Error Resume Next
    Dim i As Long
    Dim lineName As String
    
    For i = 0 To 20
        lineName = NamePrefix & Trim(Str(i))
        ActiveWorkbook.Names(lineName).Delete   'Bereichsnamen entfernen
    Next

End Sub


Attribute VB_Name = "Code"
'##########################################################################################################
'# Description  :   ExKalk97
'#                  Excel Makros zum Konfex-gesteuerten Aufbau der Excel-Kalkulation, Berechnung und
'#                  R|fffd|ckgabe der Ergebnisse an Konfex.
'#
'#                  (Da bei Aufruf von Excel-Makros per DDE keine Paramter
'#                  mitgegeben werden k|fffd|nnen, werden diese von Konfex vorher
'#                  in die erste Zeile des Konfex-Blattes geschrieben und von dort
'#                  abgeholt.)
'#
'#                  Neue Version f|fffd|r |fffd|bergabetechnik mit Zwischendatei.
'#                  Die Makroaufrufe befinden sich in einem VBA- Modul "kfxExcel.bas".
'#                  Damit die Datei "KfxExcel.bas" gefunden wird, muss sie sich im "Standardarbeitsordner"
'#                  befinden. (Der Standardarbeitsordner kann eingestellt werden in (Excel-Sheet - nicht VB)
'#                  Extras-Optionen-Allgemein
'#
'#                  Gestartet wird das ganze |fffd|ber den Event "Workbook_Open" in "Diese Arbeitsmappe".
'#                  Vor dort wird das Laden des VBModuls und DoCalc gestartet.
'#                  Zum |fffd|ffnen der Vorlage ohne Ausf|fffd|hren von "Workbook_Open" SHIFT-Taste dr|fffd|cken.
'# History      :   #xy.net51 #xy20 #xy21
'##########################################################################################################
Option Explicit

'##########################################################################################################
'# Globale Konstanten
'##########################################################################################################
Public Const cUnsetDouble As Double = -99999999999999.9 '#xy.net51 Wird als Unset-Wert f|fffd|r Gleitkommazahlen verwendet
Public Const cUnsetLong As Long = -2147483648#          '#xy.net51 Wird als Unset-Wert f|fffd|r ganze Zahlen verwendet
Public Const cSheetKonfex As String = "KONFEX"          'Name des Konfex-Blattes in das eingef|fffd|gt wird
Public Const cSheetTemplates As String = "Templates"    'Name des Gruppen-Blattes mit den Templates
Public Const cSheetLabelText As String = "LabelText"    ' #sc0007 - Name des Blattes das die statischen Texte des Kalkulationssheets in den gew|fffd|nschten Sprachen enth|fffd|lt
Public Const cSheetParameter As String = "Parameter"    'Name des Parameter-Blattes f|fffd|r die Parameter|fffd|bergabe
Public Const IndentNum As Long = 4                      'Anzahl der Leerzeichen zum Einr|fffd|cken des n|fffd|chsten IndentLevels

'##########################################################################################################
'# Globale Variablen
'##########################################################################################################

'# Indizes wichtiger benannter Spalten
Dim gSpalteIndentLevel As Long      'Spalte mit Einr|fffd|ckungsebene            SP_IndentLevel  #th32
Dim gSpalteSumLevel As Long         'Spalte mit Summierungsebene            SP_SumLevel
Dim gSpaltePos As Long              'Spalte mit Positionsnummer der Komp.   SP_Pos
Dim gSpalteBezeichnung As Long      'Spalte mit Komponentenbezeichnung      SP_Bezeichnung
Dim gSpalteAnzahl As Long           'Spalte mit Komponentenanzahl           SP_Anzahl
Dim gSpalteEinzelpreis As Long      'Spalte mit Einzelpreis der Komponente  SP_Einzelpreis
Dim gSpalteRabatt As Long           'Spalte mit Rabatt                      SP_Rabatt
Dim gSpalteSonderpreis As Long      'Spalte mit Sonderpreis                 SP_Sonderpreis
Dim gSpalteProvision As Long        'Spalte mit Provisions-Prozentsatz      SP_Provision
Dim gSpalteObjekt As Long           'Spalte mit Objektnamen                 SP_Objekt
Dim gSortierspalte As Long          'Spalte mit Sortiernummern              SP_Sortierspalte
Dim gSpalteDeckungsbeitrag As Long  'Spalte mit Deckungsbetr|fffd|gen            SP_Deckungsbeitrag
Dim gSpalteHerstellkosten As Long   'Spalte mit Herstellkosten je Komp.     SP_Herstellkosten
Dim gSpalteBezugsobjekt As Long     'Spalte mit Namen der Bezugsobjekte (<Cnf>.<ObjName>)   SP_Bezugsobjekt #th67
Dim gSpaltePosBezugsobjekt As Long  'Spalte mit Positionsnummer des Bezugsobjektes  SP_Pos_Bezugsobjekt #th67
Dim gSpalteAPBezugsobjekt As Long   'Spalte mit Angebotspreis des Bezugsobjektes    SP_AP_Bezugsobjekt #th67
Dim gSpalteAP                       'Spalte mit Angebotspreis d. Komp.       SP_AP  #th67
Dim gSpalteGesamtpreisEffektiv      'Spalte mit effektivem Gesamtpreis       SP_GP_effektiv
Dim gBereichObjektdaten As Long     'Bereich, der alle Spalten und Zeilen aller Objekte abdeckt
                                                                        'In seiner ersten Spalte stehen die Objektnamen aus Spalte SP_Objekt
                                                                        'Ist Suchspalte f|fffd|r SVERWEIS()-Funktionen B_Objektdaten  #th67

Dim gSpalteGZ                       'Spalte mit Kennzeichen f|fffd|r Anwendung globaler Zu- und Abschl|fffd|ge auf die jeweilige Komponente   #sc0110


' zus|fffd|tzlicher Men|fffd|punkt f|fffd|r die R|fffd|ckgabe an Konfex
Dim sMenuTag                        ' Tag des Men|fffd|punktes
Dim sMenuItemTag                    ' Tag des Men|fffd|Items
Dim miToKfx As CommandBarButton     ' Men|fffd|Item

Dim nBreak As Long                  ' #xy.net4 zum provozieren eines Laufzeitfehlers: nBreak = "Error"

Private gLinePosStack As CLinePosStack  'Stack f|fffd|r Zeilenpositionen #th24
Private g_JSessionID As String      ' #xy.net4 JB WEBanpassung SessionID f|fffd|r Datenr|fffd|ckgabe
Private g_KonfexPath As String      ' #xy.net4 JB Webanpassung Konfex Url f|fffd|r Datenr|fffd|ckgabe
Public IsClient As Boolean          ' #xy.net4 JB true, wenn Excel auf dem Client aufgerufen wurde.
Public gSaveName As String          ' #xy.net33 Verzeichnis und Dateiname, unter dem das Dokument gespeichert werden soll

Public gKfxNetReadyAckData As String    ' #xy.net603 Daten f|fffd|r Fertigmeldung an KONFEX net
Public gKfxNetReturnTarget  As String       '#xy.net948 Zielobjekt f|fffd|r Fertig-Meldung


'##########################################################################################################
'#  TEST
'##########################################################################################################
Sub Test()
        ActiveWorkbook.SaveAs "c:\konfex\then\work\ex.xls"

        Set gLinePosStack = New CLinePosStack
        InitColumnNums

        Application.GoTo "StartPos"
        LoadVbModule "c:\konfex\then\work\KfxExcel.bas", "KfxCalc"
        InsertGroup "T_Maschine", "Gruppe_1", 2, "1", "Maschine", 1

                InsertGroup "T_Gruppe", "", 3, "1.1", "Gruppe Standard"
                        InsertItem "T_Komponente", "", 4, "1.1.1", "Komponente", 1, 1000#
                        InsertGroup "T_Untergruppe", "", 4, "1.1.2", "Untergruppe"
                                InsertItem "T_Komponente", "Komp_X", 5, "1.1.2.1", "Unterkomponente", 1, 2000#
                                InsertItem "T_Komponente", "", 5, "1.1.2.2", "Unterkomponente", 1, 3000#
                        EndGroup    'Untergruppe
                EndGroup    'Gruppe
                InsertItem "T_Separator"

                InsertGroup "T_Gruppe", "", 3, "1.2", "Gruppe Optionen"
                        InsertItem "T_Komponente", "", 4, "1.2.1", "Komponente", 1, 4000, 0
                        InsertGroup "T_Untergruppe", "", 4, "1.2.2", "Untergruppe"
                                InsertItem "T_Komponente", "", 5, "1.2.2.1", "Unterkomponente", 1, 5000#
                                InsertItem "T_Komponente", "", 5, "1.2.2.2", "Unterkomponente", 1, 6000#
                        EndGroup    'Untergruppe
                        InsertGroup "T_Untergruppe", "", 4, "1.2.3", "Untergruppe"
                                InsertItem "T_Komponente", "Komp_Y", 5, "1.2.3.1", "Unterkomponente", 1, 7000#, Bezugsobjekt:="Komp_X"
                                        InsertGroup "T_Untergruppe", "", "5", "1.2.3.1.1", "Untergruppe"
                                                InsertItem "T_Komponente", "", 6, "1.2.3.1.2", "Unterkomponente", 1, 9000#
                                                InsertItem "T_Komponente", "", 6, "1.2.3.2.3", "Unterkomponente", 1, 10000#
                                        EndGroup    'Untergruppe
                                InsertItem "T_Komponente", "", 5, "1.2.3.2", "Unterkomponente", 1, 8000#
                        EndGroup    'Untergruppe
                EndGroup    'Gruppe
                InsertItem "T_Separator"

        EndGroup    'Maschine
End Sub


'##########################################################################################################
'#  AUTO - MAKROS
'##########################################################################################################

'##########################################################################################################
'# Description  :   Einstellungen um den Endanwender vor Fehlern zu sch|fffd|tzen
'# Parameter    :   -
'# Return       :   -
'# History      :   #xy.net22
'##########################################################################################################
Sub StartKalkulation()
    On Error Resume Next    ' #xy.net110
    
    Const ModNameKfxCalc As String = "KonfexCalc"
    

    ' Starten der Kalkulation wenn nicht schon erledigt!
    'Jb Webanpassung 12.7.02
    '#xy.net221 CreateMenuItemKonfex                                ' anlegen des Men|fffd|punktes 'Konfex'
    Sheets("Konfex").Select
  
    If ActiveSheet.Cells(1, 1).Text = "" Then
        ' Kalkulationsschema erzeugen
        IsClient = False
        Set gLinePosStack = New CLinePosStack           '#th24

        gKfxNetReadyAckData = "%23ANLAGE_1.KalkExcelNet_1.funcOnDocGenerated=yes"   ' #xy.net603

        'Einstellungen Arbeitsblatt
        Sheets(cSheetKonfex).Select
        InitColumnNums
        Application.GoTo Reference:="Land"
        ActiveWindow.DisplayWorkbookTabs = False
        ActiveWindow.DisplayHorizontalScrollBar = True
        ActiveWindow.DisplayVerticalScrollBar = True
        Ruecksetzen_3

        ' Jb 19.2.2002  keine DDE mehr zur |fffd|bergabe von Modul und aufzurufender Prozedur
        ' zum Starten ohne autmatisches Laden die Shift-Taste dr|fffd|cken
        
        gSaveName = Application.ActiveWorkbook.FullName                         ' #xy.net33
        Dim vbModuleFilePath As String                                          ' #xy.net101
        vbModuleFilePath = Application.ActiveWorkbook.Path & "\tmp\KfxExcel.bas" ' #xy.net258 #xy.net101
        
        If LoadVbModule(vbModuleFilePath, ModNameKfxCalc) Then                     ' #xy.net101
            Run "DoCalc"
        End If
        
        ' #xy.net101 Remove vb file to indicate that the document creation is finished.
        Kill vbModuleFilePath                                                   ' #xy.net101
        
        UnloadVbModule ModNameKfxCalc
    Else
        ' Kalkulationsschema ist bereits erzeugen
         IsClient = True
         ActiveWorkbook.Saved = False                                           ' #xy.net71
         gKfxNetReturnTarget = ActiveSheet.Cells(2, 1).Text
    End If

End Sub




'##########################################################################################################
'#  MAKROS - KONFEX
'#
'#                  Werden von Konfex per DDE aufgerufen.
'#                  Da bei Aufruf von Excel-Makros per DDE keine Paramter
'#                  mitgegeben werden k|fffd|nnen, werden diese von Konfex vorher
'#                  in die erste Zeile des Konfex-Blattes geschrieben und von dort
'#                  abgeholt.
'##########################################################################################################

'##########################################################################################################
'# Description  :   L|fffd|dt eine Datei als VB-Modul. Existiert bereits ein Modul mit diesem
'#                  Namen, wird er vorher entfernt.
'#                  Makro-Variante f|fffd|r LoadVbModule.
'# Parameter    :
'# Return       :   -
'# History      :   #th24
'##########################################################################################################
Sub DoLoadVbModule()
        Dim vbFileName As String
        Dim moduleName As String

        Sheets(cSheetParameter).Select
        vbFileName = Range("A1").value
        moduleName = Range("B1").value

        Rows("1:1").Select
        Selection.ClearContents

        LoadVbModule vbFileName, moduleName

        Run "DoCalc"

End Sub


'##########################################################################################################
'# Description  :   Start der Kalkulation (z.B. maximize)
'# Parameter    :   -
'# Return       :   -
'# History      :
'##########################################################################################################
Sub DoStartkalk()
        Application.Cursor = xlWait
        Application.GoTo "StartPos"
        Application.WindowState = xlMaximized
        Application.Calculation = xlManual
        Application.ScreenUpdating = False
End Sub


'##########################################################################################################
'# Description  :   Makro. Excel-Mappe sichern unter
'# Parameter    :   -
'# Return       :   -
'# History      :
'##########################################################################################################
Sub DoSave_As()
        Dim fileName As String

        Application.ScreenUpdating = False
        Sheets(cSheetParameter).Select
        fileName = Range("A1").value
        Sheets(cSheetKonfex).Select

        ' Bei EXCEL.5 gibt es eine DDE-|fffd|bertragungsproblem f|fffd|r den Dateiname.
        ' Bei EXCEL 95 kann Kalkul.XLT nicht gesichert werden.
        If fileName <> "" Then
                Application.displayAlerts = False
                ActiveWorkbook.SaveAs fileName:=fileName
                Application.displayAlerts = True
        End If
End Sub


'##########################################################################################################

'##########################################################################################################
'# Description  :   Sortieren, Blatt sperren, Template- und Eingabezeile l|fffd|schen
'# Parameter    :   -
'# Return       :   -
'# History      :   JB 17.7.02  Webanpassung: Excel beenden am Server mit Speichern,
'#                              sich bei Konfex zur|fffd|ckmelden
'#                  #xy.net4
'##########################################################################################################
Sub DoFertig()

        'Jb Webanpassung 12.7.02
        'Fertig Marke setzen, sodass beim erneuten |fffd|ffnen am Client der Autostart Makro nicht mehr ausgef|fffd|hrt wird.
        ' siehe Funktion "Workbook_Open" im Modul "Diese Arbeitsmappe"
        If g_JSessionID <> "" Then
                Sheets("Konfex").Select
                'ActiveSheet.Cells(1, 1).Value = g_KonfexPath & ";jsessionid=" & g_JSessionID & "?"
                ' Fragezeichen weglassen bei Post-Befehl
                ActiveSheet.Cells(1, 1).value = g_KonfexPath & ";jsessionid=" & g_JSessionID
                ActiveSheet.Cells(2, 1).value = gKfxNetReturnTarget
        End If

        ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
        Application.GoTo Reference:="Land"

        Application.WindowState = xlMaximized
        Application.Calculate
        Application.Calculation = xlAutomatic
        Application.ScreenUpdating = True

        Application.Cursor = xlDefault

        If g_JSessionID <> "" Then
            'running under KONFEX net
            '#xy.net258 #xy.net231 #xy.net216 #xy.net33
            'Speichern der gef|fffd|llten Arbeitsmappe unter dem geg. Namen ohne R|fffd|ckfragen.
            'Setzt voraus dass in Konfex bereits eine lokale Kopie erstellt wurde und
            'diese jetzt l|fffd|uft, damit nicht die Vorlage |fffd|berschrieben wird.
            Dim displayAlerts As Boolean
            displayAlerts = Application.displayAlerts
            Application.displayAlerts = False
            ActiveWorkbook.SaveAs gSaveName
            Application.displayAlerts = displayAlerts
            
            'Jb Webanpassung 12.7.02
            'R|fffd|ckmeldung an Konfex, das Excel-Dokument fertig ist
            Rueckmelden
            ActiveWorkbook.Saved = True
            Application.Quit
        End If

End Sub

'##########################################################################################################
'# Description  :   Meldet sich an Konfex zur|fffd|ck dass Makrobearbeitung zuende ist
'# Parameter    :   -
'# Return       :   -
'# History      :   JB 17.7.02 neu
'#                  #xy.net4 xy.net725
'##########################################################################################################
Private Sub Rueckmelden()
'Dim IE As New SHDocVw.InternetExplorer
    Dim KonfexAdresse As String
    Dim result As Long
    Dim i As Long                           ' #xy.net4

    Dim KfxResponseURL As String
    KfxResponseURL = "http://localhost:80/konfex"
    

    ' replaced: KonfexAdresse = ToLocalhostURL(g_KonfexPath) + ";jsessionid=" + g_JSessionID    ' #xy.net34
    KonfexAdresse = ToLocalhostURL(KfxResponseURL) + ";jsessionid=" + g_JSessionID
    
    KonfexAdresse = KonfexAdresse + "?:cmd=event&:event=KfxAttrWriteEvent&:target=" & gKfxNetReturnTarget
    'KonfexAdresse = KonfexAdresse + "?:cmd=event&:event=KfxAttrWriteEvent&:target=cnf_map"
    KonfexAdresse = KonfexAdresse + "&" + gKfxNetReadyAckData    ' #xy.net9 #xy.net64 #xy.net603
    
    ' xy.net725
    ' #xy.net829 Dim Req As New MSXML.XMLHTTPRequest
    Dim Req As New MSXML2.ServerXMLHTTP     ' #xy.net829
    Req.Open "GET", KonfexAdresse, False
    Req.setRequestHeader "User-Agent", "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)"
    Req.send

End Sub

'##########################################################################################################
'# Description  :   Adresse und SessionID des Konfex Servers  in globalen Variablen speichern
'#                      - muss in kfxexcel.bas gerufen werden.
'# Parameter    :   KonfexAdresse
'#                  SessionID
'# Return       :   -
'# History      :   JB 17.7.02  Webanpassung: neu
'#                  #xy.net4
'##########################################################################################################
Sub SetServer(KonfexAdresse As String, SessionID As String)

        ' #xy.net42 g_KonfexPath = KonfexAdresse + "/konfex"
        g_KonfexPath = KonfexAdresse + "/konfex"            ' #xy.net42
        g_JSessionID = SessionID

End Sub


'##########################################################################################################
'# Description  :
'# Parameter    :   callbackRef     konfex reference to trigger, e.g. "#ANLAGE_2.KfxNet_1.funcOnDocGenerated"
'#                  callbackVaue    value to trigger with
'#                  UrlReturnTarget konfex target object for WriteEvent
'# Return       :   -
'# History      :   #xy.net603,#xy.net948
'##########################################################################################################
Sub SetDocGeneratedCallback(callbackRef As String, callbackValue As String, UrlReturnTarget As String)
    gKfxNetReadyAckData = EncodeURIComponent(callbackRef) + "=" + EncodeURIComponent(callbackValue)
    gKfxNetReturnTarget = UrlReturnTarget               '#xy.net948
End Sub



'##########################################################################################################
'#  MAKROS - MEN|fffd|
'##########################################################################################################


'##########################################################################################################
'# Description  :   Seitenansicht
'# Parameter    :
'# Return       :
'# History      :
'##########################################################################################################
Sub xxSeitenansicht()
        ActiveSheet.PrintPreview
End Sub

'##########################################################################################################
'# Description  :   Druck des Arbeitsblattes
'# Parameter    :
'# Return       :
'# History      :
'##########################################################################################################
Sub xxDrucken()
        ActiveSheet.PrintOut
End Sub

'##########################################################################################################
'# Description  :   Durchlaufen aller R|fffd|ckgabewerte und Vorbereitung des R|fffd|ckgabestrings
'# Parameter    :   -
'# Return       :   -
'# History      :   GM, 30.01.98: Umstellung auf Excel97: R|fffd|ckgabe-Formate explizit
'#                                in eigener Spalte angeben
'#                  JB, 17.7.02: Webanpassung: R|fffd|ckgabe |fffd|ber Klasse WebComm
'#                  #xy.net4
'##########################################################################################################
Sub zu_Konfex()

        Dim WebComm As clswebComm
        Dim endeZeile As Long
        Dim Konfex_Objekt As String
        Dim ObjektSlot As String
        Dim ObjektSlot_Exits As String
        Dim Konfex_Slot As String
        Dim Format_Info As String
        Dim type_info As String
        Dim Wertsenden As String
        Dim aktZeile As Long
        Dim KanalNr As Long
        Dim url As String

        Dim oldCursor As Integer
        Dim nTmp_MAX_Count As Long
        Dim sTriggerExitStart As String
        Dim sTriggerExitEnd As String
        
        sTriggerExitStart = Range("FirstCell2Konfex").value
        ' range("FirstCell2Konfex").value = ""
        sTriggerExitEnd = Range("LastCell2Konfex").value
        ' range("LastCell2Konfex").value = ""

        '#xy.net4 Sanduhr anzeigen, da |fffd|bertragung lange dauern kann
        oldCursor = Application.Cursor
        Application.Cursor = xlWait

        'JB Webanpassung: globale Variable m|fffd|ssen neu gesetzt werden
        If IsClient Then
                url = Sheets(cSheetKonfex).Cells(1, 1).value
                InitColumnNums
                Set WebComm = New clswebComm
                WebComm.KonfexUrl = url
                WebComm.ReturnTarget = gKfxNetReturnTarget
                WebComm.InitSetBefehl
                WebComm.UpdateUifOnRequest = False
    
                ' ge|fffd|nderte Excel-Datei auf Server hochladen #xy.net900
                UploadExcelFile url
        End If

        Sheets(cSheetKonfex).Select

        'JB 15.7.02 Webanpassung:    geht nicht f|fffd|r eingebettestes Excel
        If Not IsClient Then
                'Vorbereitung fuer Ruecksetzen
                '#xy.net221 Ruecksetzen_1
                'DDE zur|fffd|ck zu Konfex
                KanalNr = Application.DDEInitiate("Konfex", "System")
        End If

        Application.ScreenUpdating = False
        Application.StatusBar = "|fffd|bertragung zu Konfex ..."

        'zellen anspringen
        'Letzte Zeile ermitteln
        Application.GoTo Reference:=Range("Ende")
        endeZeile = Selection.Row
        'Auf ersten Objektnamen positionieren
        'Range("Erster_Objektname").Select
        ActiveSheet.Cells(1, gSpalteObjekt).Select

        Do While Selection.Row < endeZeile
                Select Case ActiveCell.value
                        Case Is = ""
                                'N|fffd|chste Zeile
                                ActiveCell.Offset(1, 0).Range("A1").Select
                        Case Else
                                'Name des Empf|fffd|ngerobjektes
                                Konfex_Objekt = ActiveCell.value
                                Application.StatusBar = "|fffd|bertragung zu Konfex, " + Konfex_Objekt
                                ActiveCell.Offset(0, 1).Range("A1").Select

                                If Selection.Row = 1 Then           ' vor R|fffd|ckgabe der Werte ein Trigger an Konfex
                                    ObjektSlot_Exits = Konfex_Objekt & ".funcCalcReturnStart[1]"
                                    If sTriggerExitStart <> "" Then
                                        WebComm.SetWebBefehl ObjektSlot_Exits, sTriggerExitStart, ""
                                        WebComm.ExecWebBefehl False
                                    End If
                                    ObjektSlot_Exits = Konfex_Objekt & ".funcCalcReturnEnd[1]"
                                End If

                                Do While ActiveCell.value <> ""
                                        'Empf|fffd|ngerslotname
                                        Konfex_Slot = ActiveCell.value
                                        ObjektSlot = Konfex_Objekt & "." & Konfex_Slot

                                        'GM, 30.01.98: Umbau auf Excel 97
                                        ActiveCell.Offset(0, 1).Range("A1").Select
                                        'Art der Werteformatierung vor dem Zur|fffd|cksenden
                                        Format_Info = ActiveCell.value
                                        'Wert selektieren
                                        ActiveCell.Offset(0, 1).Range("A1").Select

                                        'GM, 30.01.98: Format und NumberFormatLocal passen in Excel97 leider nicht mehr zusammen
                                        'WertSenden = Format(Application.Selection, Application.Selection.NumberFormatLocal)
                                        ' DVO 27.2.1998 Werte in Abh|fffd|ngigkeit von Formatierungsanweisung als
                                        ' Text oder als Zahl an Konfex senden
                                         Select Case Format_Info
                                         Case Is = "Float"
                                                ' Wert als Float senden
                                                Wertsenden = KfxStr(Application.Selection)                          '#xy.net4 #xy.net922
                                                If Not IsClient Then                                                '#xy.net4
                                                        'F|fffd|r KONFEX classic negativen Zahlen eine 0 voranstellen    '#xy.net4
                                                        Wertsenden = "0" + Wertsenden                               '#xy.net4
                                                End If                                                              '#xy.net4
                                                type_info = "float"
                                         Case Else
                                                ' Wert als String setzen
                                                Wertsenden = Format(Application.Selection, Format_Info)
                                                ' GM, 24.06.98: Eventuelle Hochkommas verdoppeln:
                                                If Not IsClient Then
                                                        Wertsenden = StringReplace(Wertsenden, "'", "''")
                                                        Wertsenden = "'" & Wertsenden & "'"
                                                End If
                                                type_info = ""
                                         End Select
                                         If IsClient Then
                                                ' JB 17.7.02 Webanpassung: Kommando f|fffd|r |fffd|bertragung aufbauen
                                                WebComm.SetWebBefehl ObjektSlot, Wertsenden, type_info
                                        Else
                                                ExecSetBefehl KanalNr, ObjektSlot, Wertsenden
                                         End If
                                        ActiveCell.Offset(0, 1).Range("A1").Select
                                Loop
                                'N|fffd|chstes Objekt
                                ActiveCell.Offset(1, 0).Range("A1").Select
                                aktZeile = Selection.Row
                                ActiveSheet.Cells(aktZeile, gSpalteObjekt).Select
                        End Select
        Loop

        If IsClient Then
                ' JB 17.7.02 Webanpassung: Rest senden und KONFEX net-Oberfl|fffd|che aktualisieren
                WebComm.ExecWebBefehl False
                
                If sTriggerExitEnd <> "" Then               ' nach R|fffd|ckgabe der Werte ein Trigger an Konfex
                    WebComm.SetWebBefehl ObjektSlot_Exits, sTriggerExitEnd, ""
                    WebComm.ExecWebBefehl True
                End If
                
                Set WebComm = Nothing
        Else
                Application.StatusBar = "|fffd|bertragung zu Konfex ..."
                Application.DDEExecute KanalNr, "[refresh]"
                Application.DDETerminate (KanalNr)
        End If

        'Bildschirmaktualisierung wieder einschalten
        Application.ScreenUpdating = True
        Application.StatusBar = "Die |fffd|bertragung zu Konfex ist abgeschlossen."
        MsgBox "Die |fffd|bertragung zu Konfex ist abgeschlossen."

        If Not IsClient Then
                ' JB 15.7.02 Webanpassung: Geht nicht bei eingebettetem Excel
                Ruecksetzen_3
                Application.ScreenUpdating = True
                Application.Quit
        Else
                ' #xy.net413 Close container if document is embedded.
                On Error Resume Next
                ActiveWorkbook.Container.Quit
                
                ' JB 15.7.02 Webanpassung: Sichern bei Bedarf
                Application.Quit    ' #xy.net71
        End If

        '#xy.net4 Sanduhr wieder abschalten
        Application.Cursor = oldCursor

End Sub


'##########################################################################################################
'# Description  :   Abbruch und Bereitstellung eines neuen, leeren Arbeitsblattes,
'#                  ohne DDE |fffd|bertragung zu Konfex
'# Parameter    :   -
'# Return       :   -
'# History      :
'##########################################################################################################
Sub Abbruch()
        Sheets(cSheetKonfex).Select
        'Vorbereitung fuer Ruecksetzen
        '#xy.net221 Ruecksetzen_1

        'Blatt l|fffd|schen und neues, leeres Blatt erzeugen, Einstellungen
        Ruecksetzen_2

        'Einstellungen Arbeitsblatt
        Ruecksetzen_3
End Sub


'##########################################################################################################
'# Description  :   Beenden EXCEL, ohne zu sichern
'# Parameter    :   -
'# Return       :   -
'# History      :
'##########################################################################################################
Sub xxBeenden()
        ActiveWindow.Close SaveChanges:=False
        Application.Quit
End Sub

'##########################################################################################################
'# FUNKTIONEN
'##########################################################################################################

'##########################################################################################################
'# Description  :   Initialisiert die globalen Variablen f|fffd|r die
'#                  Spaltenindizes mit Hilfe der Spaltennamen.
'# Parameter    :   -
'# Return       :   -
'# History      :   '#th67 2000-12-14  dvo neu
'##########################################################################################################
Sub InitColumnNums()
        gSpalteIndentLevel = FirstColNum("SP_IndentLevel")            '#th32
        gSpalteSumLevel = FirstColNum("SP_SumLevel")
        gSpaltePos = FirstColNum("SP_Pos")
        gSpalteBezeichnung = FirstColNum("SP_Bezeichnung")
        gSpalteAnzahl = FirstColNum("SP_Anzahl")
        gSpalteEinzelpreis = FirstColNum("SP_Einzelpreis")
        gSpalteRabatt = FirstColNum("SP_Rabatt")
        gSpalteSonderpreis = FirstColNum("SP_Sonderpreis")
        gSpalteProvision = FirstColNum("SP_Provision")
        gSpalteObjekt = FirstColNum("SP_Objekt")
        gSortierspalte = FirstColNum("SP_Sortierspalte")
        gSpalteDeckungsbeitrag = FirstColNum("SP_Deckungsbeitrag")
        gSpalteHerstellkosten = FirstColNum("SP_Herstellkosten")
        gSpalteBezugsobjekt = FirstColNum("SP_Bezugsobjekt")          '#th67
        gSpaltePosBezugsobjekt = FirstColNum("SP_Pos_Bezugsobjekt")   '#th67
        gSpalteAPBezugsobjekt = FirstColNum("SP_AP_Bezugsobjekt")     '#th67
        gSpalteGesamtpreisEffektiv = FirstColNum("SP_GP_effektiv")    '#th67
        gSpalteAP = FirstColNum("SP_AP")                              '#th67
        gBereichObjektdaten = FirstColNum("B_Objektdaten")            '#th67


        gSpalteGZ = FirstColNum("SP_GZ")                              '#sc0110
End Sub

'##########################################################################################################
'# Description  :   Ermittelt Nummer der ersten Spalte des Bereichs mit dem geg. Namen
'# Parameter    :   colName - Name des Bereichs
'# Return       :   Spaltennummer oder 0, wenn nicht gefunden
'# History      :   2000-12-14  dvo neu
'#                  #th67 von GetColNum in FirstColNum umbenannt
'##########################################################################################################
Function FirstColNum(colName As String)
        FirstColNum = 0
        On Error Resume Next
        FirstColNum = Range(colName).Column
End Function

'##########################################################################################################
'# Description  :   Sortieren
'# Parameter    :
'# Return       :
'# History      :
'##########################################################################################################
Sub Sort(Abschnitt)
        Application.GoTo Reference:=Range(Abschnitt)
        Selection.Sort Key1:=Cells(Selection.Row, gSortierspalte), Order1:= _
          xlAscending, Header:=xlYes, OrderCustom:=1, _
          MatchCase:=False, Orientation:=xlTopToBottom
End Sub

'##########################################################################################################
'# Description  :   Tr|fffd|gt String-Wert in Arbeitsblatt ein. Danach ist die Ausgangszeile markiert.
'# Parameter    :   Zellenname  - Name der Zelle, in die Wert geschrieben wird
'#                  Objektname  - Objektname f|fffd|r die R|fffd|cksendung an Konfex
'#                  EingabeWert - neuer Zellinhalt
'# Return       :   -
'# History      :   #th24
'##########################################################################################################
Sub SetValue(Zellenname As String, Objektname As String, EingabeWert As String)
        Dim aktZeile As Long

        gLinePosStack.PushLinePos
        Application.GoTo Reference:=Range(Zellenname) '; Bildlauf:=Wahr
        ActiveCell.value = EingabeWert
        aktZeile = ActiveCell.Row
        ' #xy.net40 ActiveCell.FormulaR1C1Local = EingabeWert
        ActiveSheet.Cells(aktZeile, gSpalteObjekt).value = Objektname
        gLinePosStack.PopLinePos
End Sub

'##########################################################################################################
'# Description  :   Tr|fffd|gt Double-Wert in eine benannte Zelle des Arbeitsblattes ein.
'#                  Danach ist wieder die gleiche Zeile wie vor dem Funktionsaufruf markiert.
'#                  Die Zelle wird mit "" gef|fffd|llt, wenn Wert=cUnsetDouble ist.
'# Parameter    :   Zellenname  - Name der Zelle, in die Wert geschrieben wird
'#                  Objektname  - Objektreferenz f|fffd|r die R|fffd|cksendung an Konfex (z. B. "#ANLAGE_1.root_1" )
'#                  Wert        - neuer Zellinhalt oder cUnsetDouble
'# Return       :   -
'# History      :   #xy.net35
'##########################################################################################################
Sub SetDoubleValue(Zellenname As String, Objektreferenz As String, Wert As Double)
    Dim aktZeile As Long
    
    gLinePosStack.PushLinePos
    Application.GoTo Reference:=Range(Zellenname)
    SetRangeDoubleValue ActiveCell, Wert   ' #xy.net49
    aktZeile = ActiveCell.Row
    ActiveSheet.Cells(aktZeile, gSpalteObjekt).value = Objektreferenz
    gLinePosStack.PopLinePos
End Sub

'##########################################################################################################
'# Description  :   Sets the value of all cells in the given range to value if value
'#                  is not cUnsetDouble. If value is cUnsetDouble the cells stays unchanged.
'# Parameter    :   range   cell range
'#                  value   double value or cUnsetDouble
'# Return       :   -
'# History      :   #xy.net49 neu
'##########################################################################################################
Sub SetRangeDoubleValue(Range As Range, value As Double)
    If Not Range Is Nothing And value <> cUnsetDouble Then
        Range.value = value
    End If
End Sub

'##########################################################################################################
'# Description  :   Sets the value of all cells in the given range to value if value
'#                  is not cUnsetLong. If value is cUnsetLong the cells stays unchanged.
'# Parameter    :   range   cell range
'#                  value   integer value or cUnsetLong
'# Return       :   -
'# History      :   #xy.net49 neu
'##########################################################################################################
Sub SetRangeLongValue(Range As Range, value As Long)
    If Not Range Is Nothing And value <> cUnsetLong Then
        Range.value = value
    End If
End Sub

'##########################################################################################################
'# Description  :   Sets the value of all cells in the given range to value if value
'#                  is not "". If value is "" the cells stays unchanged.
'# Parameter    :   range   cell range
'#                  value   String value or ""
'# Return       :   -
'# History      :   #xy.net49 neu
'##########################################################################################################
Sub SetRangeStringValue(Range As Range, value As String)
    If Not Range Is Nothing And value <> "" Then
        Range.value = value
    End If
End Sub

'##########################################################################################################
'# Description  :   F|fffd|gt Kopie des Templates an der aktuellen Stelle im Excel-Blatt ein
'#                  und f|fffd|llt sie mit den Parameterwerten.
'#
'# Parameter    :   TemplateBereich     - Name des benannten Zellbereiches der
'#                                        nach der aktuellen Zeile angef|fffd|gt wird
'#                  Objektname          - Name des Konfex-Objektes, an das Werte zur|fffd|ckgeschickt werden (<Cnf-Name>.<ObjName>)
'#                  IndentLevel         - Einr|fffd|ckungsstufe f|fffd|r den Bezeichungstext
'#                  SumLevel            - Gliederungstiefe f|fffd|r die Bildung von Zwischensummen
'#                  PosNr               - Positionsnummer der Komponente, i.d.R. Strukturtiefe (2.3.1,...)
'#                  Bezeichnung         - Komponententenbezeichnung f|fffd|r die Kalkulation
'#                                        Ab SumLevel>cIndentStartLevel wird der Bezeichnungstext je SumLevel
'#                                        um IndenNum Leerzeichen einger|fffd|ckt.
'#                  Anzahl              - Komponentenanzal
'#                  Einzelpreis         - bisheriger Einzelpreis der Komponentengruppe
'#                  Rabatt              - bisheriger Rabatt-Prozentsatz als Faktor [0..1] oder ""
'#                  Sonderpreis         - bisheriger Sonderpreis oder ""
'#                  Herstellkosten      - Herstellkosten der Komponente, f|fffd|r Deckungsbeitragsberechnung
'#                  Provision           - Provisionssatz als Faktor ([0..1] oder ""
'#                  SortNr              - Sortiernummer oder leer
'#                  Bezugsobjekt        - Name des Objektes zu dem Objektname eine Alternative ist (<Cnf-Name>.<ObjName>) #th67
'#                  GZ                  - Kennzeichen, das Anwendung globler Zu- und Abschl|fffd|ge auf Komponente steuert
'#                                        Wert "n" bedeutet "nein", alle anderen Werte "ja"
'# Return       :   -
'# History      :   #th32 #th24 neu
'#                  #th67 neuer Parameter Bezugsobjekt
'#                  #xy.net52 #xy.net49
'##########################################################################################################
Sub InsertTemplate(TemplateBereich As String _
                          , Optional Objektname As String = "" _
                          , Optional IndentLevel As Long = 0 _
                          , Optional SumLevel As Long = 0 _
                          , Optional PosNr As String = "" _
                          , Optional Bezeichnung As String = "" _
                          , Optional Anzahl As Long = cUnsetLong _
                          , Optional Einzelpreis As Double = cUnsetDouble _
                          , Optional Rabatt As Double = cUnsetDouble _
                          , Optional Sonderpreis As Double = cUnsetDouble _
                          , Optional Herstellkosten As Double = cUnsetDouble _
                          , Optional Provision As Double = cUnsetDouble _
                          , Optional SortNr As Long = 0 _
                          , Optional Bezugsobjekt As String = "" _
                          , Optional GZ As String = "" _
                          )
    Dim aktZeile As Long
    Dim TypeOfComponent As String

    'Template-Kopie einf|fffd|gen
    ' Sheets(cSheetTemplates).Select
    ' Application.GoTo Reference:=Range(TemplateBereich)
    ' Selection.Copy
    ' Sheets(cSheetKonfex).Select
    ' Selection.Insert Shift:=xlDown
    ' aktZeile = Selection.Row
    
    ' #xy.net983: Template-Kopie einf|fffd|gen - copy um den Parameter Destination erweitert, damit das Clipboard nicht erforderlich ist
    Sheets(cSheetKonfex).Select
    Dim vRow As Range                                               ' die ben|fffd|tigte(n) Zeile(n) zuerst einf|fffd|gen
    For Each vRow In Range(TemplateBereich).Rows
        Selection.Insert Shift:=xlDown
    Next
    aktZeile = Selection.Row
    Worksheets(cSheetTemplates).Range(TemplateBereich).Copy Destination:=Worksheets(cSheetKonfex).Rows(aktZeile)
    
    'Bezeichnungtext je nach IndentLevel einr|fffd|cken
    Bezeichnung = String(Max(0, IndentLevel) * IndentNum, " ") & Bezeichnung

    ' #sc0007 - interne Bezeichnung des Komponententyps f|fffd|r die Summen im Deckungsbeitrag
    Select Case Bezugsobjekt
        Case "Eigen"
            TypeOfComponent = "own part"
        Case "Zukauf"
            TypeOfComponent = "purchased part"
        Case "Dienstleistung Eigen"
            TypeOfComponent = "own service"
        Case "Dienstleistung Zukauf"
            TypeOfComponent = "purchased service"
        Case Else
            TypeOfComponent = ""
    End Select
    
    SetRangeLongValue ActiveSheet.Cells(aktZeile, gSpalteIndentLevel), IndentLevel
    SetRangeLongValue ActiveSheet.Cells(aktZeile, gSpalteSumLevel), SumLevel
    SetRangeStringValue ActiveSheet.Cells(aktZeile, gSpaltePos), PosNr
    SetRangeStringValue ActiveSheet.Cells(aktZeile, gSpalteBezeichnung), Bezeichnung
    SetRangeLongValue ActiveSheet.Cells(aktZeile, gSpalteAnzahl), Anzahl
    SetRangeDoubleValue ActiveSheet.Cells(aktZeile, gSpalteEinzelpreis), Einzelpreis
    SetRangeStringValue ActiveSheet.Cells(aktZeile, gSpalteBezugsobjekt), Bezugsobjekt
    SetRangeStringValue ActiveSheet.Cells(aktZeile, gSpaltePosBezugsobjekt), TypeOfComponent
    SetRangeDoubleValue ActiveSheet.Cells(aktZeile, gSpalteRabatt), Rabatt
    SetRangeDoubleValue ActiveSheet.Cells(aktZeile, gSpalteSonderpreis), Sonderpreis
    SetRangeDoubleValue ActiveSheet.Cells(aktZeile, gSpalteHerstellkosten), Herstellkosten
    SetRangeLongValue ActiveSheet.Cells(aktZeile, gSortierspalte), SortNr
    SetRangeStringValue ActiveSheet.Cells(aktZeile, gSpalteObjekt), Objektname

    SetRangeStringValue ActiveSheet.Cells(aktZeile, gSpalteGZ), GZ      ' #sc0110
End Sub

'##########################################################################################################
'# Description  :   F|fffd|gt Kopie eines Gruppen-Templates ein analog zu InsertTemplate und
'#                  merkt sich die Einf|fffd|geposition, um an diese zur|fffd|ckzukehren, wenn die Gruppe
'#                  vollst|fffd|ndig aufgebaut ist. Zu jedem InsertGroup mu|fffd| ein EndGroup aufgerufen
'#                  werden.
'# Parameter    :   s. InsertTemplate
'# Return       :   -
'# History      :   #th24 neu
'##########################################################################################################
Sub InsertGroup(TemplateBereich As String _
                          , Optional Objektname As String = "" _
                          , Optional IndentLevel As Long = 0 _
                          , Optional SumLevel As Long = 0 _
                          , Optional PosNr As String = "" _
                          , Optional Bezeichnung As String = "" _
                          , Optional Anzahl As Long = cUnsetLong _
                          , Optional Einzelpreis As Double = cUnsetDouble _
                          , Optional Rabatt As Double = cUnsetDouble _
                          , Optional Sonderpreis As Double = cUnsetDouble _
                          , Optional Herstellkosten As Double = cUnsetDouble _
                          , Optional Provision As Double = cUnsetDouble _
                          , Optional SortNr As Long = 0 _
                          )
    
    gLinePosStack.PushLinePos
    InsertTemplate TemplateBereich, Objektname, IndentLevel, SumLevel, PosNr, Bezeichnung, Anzahl, Einzelpreis _
                                , Rabatt, Sonderpreis, Herstellkosten, Provision, SortNr
    
End Sub

'##########################################################################################################
'# Description  : F|fffd|gt eine Optionsgruppe unterhalb von 'StartPositionOptionen' ein
'#                  Zu dieser Gruppe geh|fffd|ren Titel und Summenzeile und eine Abstandszeile zum vorhergehenden Bereich
'#                  Dient der separaten Behandlung der Optionen im Kalkulationssheet - sie werden nicht in den Angebotspreis aufgenommen
'#                  F|fffd|gt Kopie eines Gruppen-Templates ein analog zu InsertTemplate und
'#                  merkt sich die Einf|fffd|geposition, um an diese zur|fffd|ckzukehren, wenn die Gruppe
'#                  vollst|fffd|ndig aufgebaut ist. Zu jedem InsertGroup mu|fffd| ein EndGroup aufgerufen
'#                  werden.
'# Parameter    :   s. InsertTemplate - abweichend von InsertTemplate
'#                  TemplateBereich     - Name des benannten Zellbereiches der - wird nur f|fffd|r die Summenzeile verwendet
'#                  Objektname          - Name des Konfex-Objektes, an das Werte zur|fffd|ckgeschickt werden (<Cnf-Name>.<ObjName>)
'#                                          bleibt hier |fffd|blicherweise leer, da es f|fffd|r die Optionssumme keine Gruppe gibt (eingestreute Optionen)
'#                  SumLevel            - Gliederungstiefe f|fffd|r die Bildung von Zwischensummen - die einzelnen Komponenten bekommen SumLevel 1, daher hier |fffd|blicherweise 0
'#                  PosNr               - statt der Positionsnummer wird hier die Bezeichnung der Summenzeile |fffd|bergeben
'#                  Bezeichnung         - |fffd|berschrift der Gruppe
'# Return       :   -
'# History      :   #sc0005
'##########################################################################################################
Sub InsertGroup_Option(TemplateBereich As String _
                          , Optional Objektname As String = "" _
                          , Optional IndentLevel As Long = 0 _
                          , Optional SumLevel As Long = 0 _
                          , Optional PosNr As String = "" _
                          , Optional Bezeichnung As String = "" _
                          , Optional Anzahl As Long = cUnsetLong _
                          , Optional Einzelpreis As Double = cUnsetDouble _
                          , Optional Rabatt As Double = cUnsetDouble _
                          , Optional Sonderpreis As Double = cUnsetDouble _
                          , Optional Herstellkosten As Double = cUnsetDouble _
                          , Optional Provision As Double = cUnsetDouble _
                          , Optional SortNr As Long = 0 _
                          )
    
    'gLinePosStack.PushLinePos
    
    Application.GoTo Reference:="StartPositionOptionen"
    InsertItem "T_Separator"
    InsertItem "T_|fffd|berschrift", "", IndentLevel, SumLevel, "", Bezeichnung
    InsertGroup TemplateBereich, Objektname, IndentLevel, SumLevel, "", PosNr
    
    'EndGroup
    
    '' ggf. die Felder f|fffd|r Sonderpreis und Rabatt deaktivieren
    'If TemplateBereich = "T_Gruppe" Then
    '    ActiveCell.Offset(-1, 13).Range("A1:B1").Select
    '    Selection.Locked = True
    '    Selection.FormulaHidden = False
    '    With Selection.Interior
    '        .Pattern = xlSolid
    '        .PatternColorIndex = 2
    '        .ThemeColor = xlThemeColorDark1
    '        .TintAndShade = 0
    '        .PatternTintAndShade = 0
    '    End With
    'End If
    
    'gLinePosStack.PopLinePos
    
End Sub

'##########################################################################################################
'# Description  :   F|fffd|gt Kopie eines Gruppen-Templates ein analog zu InsertTemplate und
'#                  merkt sich die Einf|fffd|geposition, um an diese zur|fffd|ckzukehren, wenn die Gruppe
'#                  vollst|fffd|ndig aufgebaut ist. Zu jedem InsertGroup mu|fffd| ein EndGroup aufgerufen
'#                  werden.
'# Parameter    :
'# Return       :   -
'# History      :   #th24 neu
'##########################################################################################################
Sub EndGroup()
        gLinePosStack.PopLinePos
End Sub

'##########################################################################################################
'# Description  :   F|fffd|gt Kopie eines einfachen Templates ein analog zu InsertTemplate und
'#                  kehrt an die Einf|fffd|geposition zur|fffd|ck.
'# Parameter    :   s. InsertTemplate
'# Return       :   -
'# History      :   #th24 neu
'#                  #th67 neuer Parameter Bezugsobjekt
'##########################################################################################################
Sub InsertItem(TemplateBereich As String _
              , Optional Objektname As String = "" _
              , Optional IndentLevel As Long = 0 _
              , Optional SumLevel As Long = 0 _
              , Optional PosNr As String = "" _
              , Optional Bezeichnung As String = "" _
              , Optional Anzahl As Long = cUnsetLong _
              , Optional Einzelpreis As Double = cUnsetDouble _
              , Optional Rabatt As Double = cUnsetDouble _
              , Optional Sonderpreis As Double = cUnsetDouble _
              , Optional Herstellkosten As Double = cUnsetDouble _
              , Optional Provision As Double = cUnsetDouble _
              , Optional SortNr As Long = 0 _
              , Optional Komponententyp As String = "" _
              , Optional POS_TYPE As String = "INCLUDED" _
              , Optional GZ As String = "" _
              )

    gLinePosStack.PushLinePos
    
    ' #sc0127 nicht mehr ben|fffd|tigt
    'If POS_TYPE = "OPTION" Then                         ' #sc0005: die Komponente an der richtigen Stelle eintragen
    '    Application.GoTo Reference:="StartPositionOptionen"
    '    SumLevel = 1
    '    ActiveCell.Offset(-1, 0).Select
    '    ActiveCell.EntireRow.Select
    'End If
    
    InsertTemplate TemplateBereich, Objektname, IndentLevel, SumLevel, PosNr, Bezeichnung, Anzahl, Einzelpreis _
                , Rabatt, Sonderpreis, Herstellkosten, Provision, SortNr, Komponententyp, GZ
    gLinePosStack.PopLinePos
End Sub


'##########################################################################################################
'# Description  :
'# Parameter    :
'# Return       :
'# History      :
'##########################################################################################################
Sub XTemplateZeilen_l|fffd|schen(Abschnitt)
'dvo, 17.2.1999: Notsl|fffd|sung
On Error GoTo Fehler
        Application.GoTo Reference:=Abschnitt
        Selection.Delete Shift:=xlUp
Fehler:
End Sub

'##########################################################################################################
'# Description  :
'# Parameter    :
'# Return       :
'# History      :
'##########################################################################################################
Sub TemplateZeilen_l|fffd|schen_Rest()
        Application.GoTo Reference:="ZusatzOhne"
        Selection.Delete Shift:=xlUp
        Application.GoTo Reference:="ZusatzMit"
        Selection.Delete Shift:=xlUp
End Sub


'##########################################################################################################
'# Description  :   DDE SET-Befehl nach KONFEX schicken
'# Parameter    :   KanalNr     -
'#                  ObjektSlot  -
'#                  WertSenden  -
'# Return       :   -
'# History      :   GM, 15.10.97: Umstellung von POKE auf SET
'##########################################################################################################
Sub ExecSetBefehl(KanalNr, ObjektSlot, Wertsenden)
        Dim SetBefehl As String

        SetBefehl = "[SET (" & ObjektSlot & ", " & Wertsenden & ")]"
        ' EXCEL 95 kann mit DDE-Befehlen, deren L|fffd|nge um 1 geringer ist als ein
        ' Vielfaches von 32 nicht umgehen; darum wird in diesem Fall an passender
        ' Stelle ein zus|fffd|tzlicher Blank eingef|fffd|gt (nicht am Ende - wird getrimmt!)
        If (Len(SetBefehl) + 1) Mod 32 = 0 Then
           SetBefehl = "[SET (" & ObjektSlot & ",  " & Wertsenden & ")]"
        End If

        Application.DDEExecute KanalNr, SetBefehl
End Sub


' ##################    Hilfsroutinen     #################

'Vorbereitung fuer Ruecksetzen
Sub Ruecksetzen_1()
        Application.DisplayStatusBar = True
        Application.Calculation = xlManual
        Application.WindowState = xlNormal
        ActiveSheet.Unprotect
End Sub

'##########################################################################################################
'# Description  :   Blatt l|fffd|schen und neues, leeres Blatt erzeugen, Einstellungen
'# Parameter    :   -
'# Return       :   -
'# History      :
'##########################################################################################################
Sub Ruecksetzen_2()
        Application.StatusBar = "Kalkulationsblatt zur|fffd|cksetzen ..."
        Application.displayAlerts = False
        ActiveWindow.SelectedSheets.Delete
        Sheets("template").Select
        Sheets("template").Copy Workbooks("TMPL1.XLS"). _
        Sheets(1)
        Sheets("template (2)").Select
        Sheets("template (2)").Name = "Konfex"
        Application.displayAlerts = False

        Application.StatusBar = ""
End Sub

'##########################################################################################################
'# Description  :   Einstellungen Arbeitsblatt
'# Parameter    :   -
'# Return       :   -
'# History      :   #xy.net220
'##########################################################################################################
Sub Ruecksetzen_3()
        ' Range("A2").Select                GM, 30.1.98 (auf "Land" setzten)
        Application.GoTo Reference:="Land"
        With ActiveWindow
                .DisplayGridlines = False
                .DisplayHeadings = False
                .DisplayOutline = True
        End With
        With Application
                .DisplayFormulaBar = False
                .DisplayStatusBar = True
                .ShowToolTips = True
                .LargeButtons = False
                .ColorButtons = True
        End With
        Toolbars(1).Visible = True
        Toolbars(8).Visible = False
End Sub

'##########################################################################################################
'# Description  :   UnsetFloat() gibt Wert der Konstante UnsetFloat zur|fffd|ck
'#                  Deren Wert wird benutzt, um Konfex mitzuteilen, da|fffd| ein Feld keine
'#                  Anwendereingaben enth|fffd|lt ( z. B. Sonderpreis )
'#                  Damit kann dieser Wert auch in Excel-Formeln benutzt werden.
'# Parameter    :   -
'# Return       :   spez. Float-Wert, der als "Nicht gesetzt" interpretiert wird
'# History      :
'##########################################################################################################
Function UnsetFloat()
        UnsetFloat = cUnsetDouble
End Function

'##########################################################################################################
'# Description  :   Funktion zur String-Ersetzung
'#                  Jedes Vorkommen wird ersetzt!
'# Parameter    :   InString        - Input String
'#                  SearchString    - zu ersetzende Zeichenfolge
'#                  ReplaceString   - statt SearchString eingf|fffd|gte Zeichenfolge
'# Return       :   String mit Ersetzungen
'# History      :   GM, 24.06.98
'##########################################################################################################
Function StringReplace(ByVal InString As String, _
                                           ByVal SearchString As String, _
                                           ByVal ReplaceString As String) As String
        Dim pos As Long    ' #xy.net4

        pos = 1
        pos = InStr(pos, InString, SearchString, 1)
        Do While pos > 0
                InString = Left$(InString, pos - 1) & ReplaceString & Right$(InString, Len(InString) - (pos - 1) - Len(SearchString))
                pos = InStr(pos + Len(ReplaceString), InString, SearchString)
        Loop
        StringReplace = InString
End Function

'##########################################################################################################
'# Description  :   Maximum-Funktion
'# Parameter    :   a   -
'#                  b   -
'# Return       :   Maximum von a und b
'# History      :   #th24
'##########################################################################################################
Function Max(a, b)
        Max = IIf(a > b, a, b)
End Function

'##########################################################################################################
'# Description  :   Minimum-Funktion
'# Parameter    :   a   -
'#                  b   -
'# Return       :   Minimum von a und b
'# History      :   #th24
'##########################################################################################################
Function Min(a, b)
        Min = IIf(a < b, a, b)
End Function

'##########################################################################################################
'# Description  :   L|fffd|dt eine Datei als VB-Modul in das VBA-Projekt "KonfexKalk",
'#                  falls ein solches existiert. Sonst wird false zur|fffd|ckgegeben.
'#                  Existiert im Projekt bereits ein Modul mit dem gegebenen Namen
'#                  moduleName, wird er vorher entfernt.
'#                  Konnte die VB-Datei erfolgreich als VBA-Modul geladen werden, wird
'#                  das VBA-Projekt in "KonfexKalk_Loaded" umbeannt. Dadurch wird
'#                  das erneute Laden und Ausf|fffd|hren der VB-Datei verhindert,
'#                  wenn die Excel-Datei erneut ge|fffd|ffnet wird.
'#
'# Parameter    :   vbFile      Pfadname der Datei
'#                  moduleName  zuk|fffd|nftiger Name des neuen Modules
'# Return       :   true        VBA-Projekt "KonfexKalk" vorhanden und Code erfolgreich geladen.
'#                  false       sonst
'# History      :   #th24 #xy.net22 #xy.net23
'##########################################################################################################
Function LoadVbModule(vbFile As String, moduleName As String) As Boolean
    On Error Resume Next                '#xy.net23
    Dim vbEditor As Object              '#xy.net23 VBIDE.VBE
    Dim module As Object                '#xy.net23 VBIDE.VBComponent
    Dim project As Object               '#xy.net23 VBIDE.VBProject
    Dim vbComps As Object               '#xy.net23 VBIDE.VBComponents
    Dim nVBProj As Long, ii As Long
    Dim result As Boolean

    'nBreak = "Error"
    result = False
    Set project = GetVbProject("KonfexKalk")
    
    If Not project Is Nothing Then
        'Module entfernen, wenn bereits geladen
        Set vbComps = project.VBComponents
        Set module = GetVbModule(vbComps, moduleName)
        If Not module Is Nothing Then
                vbComps.Remove module
        End If

        Set module = vbComps.Import(vbFile)
        If Not module Is Nothing Then
            module.Name = moduleName
            result = True
            ' #xy.net50 Name des Projekts |fffd|ndern, damit nicht zweimal drauf zugegriffen wird
            project.Name = "KonfexKalk" + "_Loaded"
        End If
        
    End If
    
    LoadVbModule = result
End Function

'##########################################################################################################
'# Description  :   Entfernt ein VB-Modul aus dm VBA-Projekt "KonfexKalk",
'#                  falls ein solches existiert. Sonst wird false zur|fffd|ckgegeben.
'#
'# Parameter    :   moduleName  Name des VBA-Moduls
'# Return       :   true        VBA-Module erfolgreich entfernt
'#                  false       sonst
'# History      :
'##########################################################################################################
Function UnloadVbModule(moduleName As String) As Boolean
    On Error Resume Next
    Dim module As Object                ' VBIDE.VBComponent
    Dim project As Object               ' VBIDE.VBProject
    Dim vbComps As Object               ' VBIDE.VBComponents
    Dim result As Boolean

    result = False
    Set project = GetVbProject("KonfexKalk")
    If project Is Nothing Then
        Set project = GetVbProject("KonfexKalk_Loaded")
    End If
    
    If Not project Is Nothing Then
        'Module entfernen, wenn bereits geladen
        Set vbComps = project.VBComponents
        Set module = GetVbModule(vbComps, moduleName)
        If Not module Is Nothing Then
            vbComps.Remove module
            result = True
        End If
    End If
    
    UnloadVbModule = result
End Function
'##########################################################################################################
'# Description  :   Ermittelt VB-Komponente mit geg. Index aus einer VBComponents-Auflistung.
'#                  Exisiert keine Komponente  mit diesem Index in der Collection,
'#                  wird Nothing zur|fffd|ckgegeben.
'#                  Die Item-Methode der VBComponents-Auflistung liefert in diesem Fall
'#                  einen Laufzeitfehler.
'# Parameter    :   vbComps - Collection-Objekt (VBE.VBComponents)
'#                  index   - Index der gesuchten VB-Komponente in der Collection
'# Return       :   Referenz auf die gefundene VBComponent oder Nothing (VBE.VBComponent)
'# History      :   #xy.net23
'##########################################################################################################
Function GetVbModule(vbComps As Object, index As Variant) As Object  '#xy.net23
    On Error GoTo Error
     
    Set GetVbModule = vbComps.Item(index)
    Exit Function
    
Error:
    Set GetVbModule = Nothing
End Function

'##########################################################################################################
'# Description  :   Sucht das geladene VBA-Projekt mit dem geg. Index im VB-Editor.
'#                  Exisiert kein Projekt  mit diesem Index, wird Nothing zur|fffd|ckgegeben.
'#
'# Parameter    :   index   - Index des gesuchten VB-Projekts (Name oder Nummer)
'#
'# Return       :   Referenz auf das gefundene VBProject oder Nothing (VBE.VBProject)
'# History      :   #xy.net23
'##########################################################################################################
Function GetVbProject(index As Variant) As Object
    On Error Resume Next
    
    Set GetVbProject = Application.VBE.VBProjects(index)
End Function

'##########################################################################################################
'# Description  :   Erzeugt den Men|fffd|punkt 'Konfex' mit dem Untermen|fffd| 'Zu Konfex'
'#                  Wird beim |fffd|ffnen des Worksheets ausgef|fffd|hrt
'#                  Die Funktion pr|fffd|ft erst, ob es schon weitere Men|fffd|punkte 'Konfex' gibt und
'#                  setzt seinen dann mit einer laufenden Nummer danach
'#                  Der Tag des Items bleibt zum abschlie|fffd|enden l|fffd|schen gemerkt
'# Parameter    :   -
'# Return       :   Erfolg der Funktion
'# History      :   $ah, 29. 4. 2002
'##########################################################################################################
Function CreateMenuItemKonfex() As Boolean

    Dim cb As CommandBar
    Dim mKfx As CommandBarPopup, miToKfx As CommandBarButton
    Dim ii As Long       ' #xy.net4
    Dim sTemp As String

    CreateMenuItemKonfex = False

    Set cb = Application.CommandBars.ActiveMenuBar
    If cb Is Nothing Then Exit Function

    On Error Resume Next        ' Check, wieviele derartige Men|fffd|punkte da sind
    ii = 0
    Do
            ii = ii + 1
            sTemp = "Konfex" + Trim(Str(ii))
    Loop Until Application.CommandBars.FindControl(, , sTemp, False) Is Nothing
    On Error GoTo 0

    ' Men|fffd| anlegen
    Set mKfx = cb.Controls.Add(msoControlPopup, , , ii + 1, True)
    With mKfx
            .BeginGroup = False
            If ii = 1 Then
                    .Caption = "&Konfex"
            Else
                    .Caption = "&Konfex " + Trim(Str(ii))
            End If
            sMenuTag = "Konfex" + Trim(Str(ii))
            .Tag = sMenuTag
            .TooltipText = "&Konfex"
    End With

    ' Men|fffd|punkt hinzuf|fffd|gen
    Set miToKfx = mKfx.Controls.Add(msoControlButton, , , , True)
    With miToKfx
            sMenuItemTag = "zu_Konfex" + Trim(Str(ii))
            .Tag = sMenuItemTag
            .Caption = "zu &Konfex"
            .OnAction = "'" & ThisWorkbook.Name & "'!zu_Konfex"
            .Style = msoButtonCaption
    End With

    CreateMenuItemKonfex = True

    Set miToKfx = Nothing
    Set mKfx = Nothing
    Set cb = Nothing

End Function

'##########################################################################################################
'# Description  :   l|fffd|scht den Men|fffd|punkt 'zu Konfex'
'# Parameter    :   -
'# Return       :   Erfolg der Funktion
'# History      :   $ah, 29. 4. 2002
'##########################################################################################################
' l|fffd|scht den Men|fffd|punkt 'zu Konfex'
Function DeleteMenuItemKonfex() As Boolean
        If Left(sMenuTag, 6) = "Konfex" Then
                On Error Resume Next
                Application.CommandBars.FindControl(, , sMenuTag, False).Delete
        End If
End Function

'##########################################################################################################
'# Description  :   Versteckt Spalten des Sheets
'# Parameter    :   Name des Bereichs, der versteckt werden soll
'# Return       :   Erfolg der Funktion
'# History      :   $ah, 2. 6. 2002
'##########################################################################################################

Function Hide_Column(sArea As String, bHide As Boolean) As Boolean

Dim sActiveCellArea As String

        sActiveCellArea = ActiveCell.Address
        Application.GoTo Reference:=sArea
        Selection.EntireColumn.Hidden = bHide
        Range(sActiveCellArea).Select

End Function

'##########################################################################################################
'# Description  :   Versteckt Zeilen des Sheets
'# Parameter    :   Name des Bereichs, der versteckt werden soll
'# Return       :   Erfolg der Funktion
'# History      :   $ah, 2. 6. 2002
'##########################################################################################################

Function Hide_Row(sArea As String, bHide As Boolean) As Boolean

Dim sActiveCellArea As String

        sActiveCellArea = ActiveCell.Address
        Application.GoTo Reference:=sArea
        Selection.EntireRow.Hidden = bHide
        Range(sActiveCellArea).Select

End Function

'##########################################################################################################
'# Description  :   Stellt Sichten f|fffd|r bestimmte Usergruppen ein
'#                  Hier: Alle Spalten mit Herstellkosten & Deckungsbeitr|fffd|gen werden aus- oder eingeblendet
'#
'# Parameter    :   Rechte ID des Benutzers
'#
'# Return       :   Erfolg der Funktion
'# History      :   #sc0118 #sc0154
'##########################################################################################################

Function SetRights(UserRightID As Integer) As Boolean

    Dim bHide As Boolean
    On Error GoTo Err_SetRights
    SetRights = True
    
    If UserRightID < 30 Then
        bHide = True
    Else
        bHide = False
    End If
    
    ' Spalten Herstellkosten und Deckungsbeitrag aus- oder einblenden
    Hide_Column "SP_Dist_01", bHide
    Hide_Column "SP_Deckungsbeitrag", bHide
    Hide_Column "SP_DeckungsbeitragProz", bHide                 ' #sc0154
    Hide_Column "SP_HerstellkostenGesamt", bHide
    
    ' Zeilen mit Deckungsbeitr|fffd|gen aus- oder einblenden
    Hide_Row "Footer_Margin_CostOfProd", bHide
    Hide_Row "Footer_Margin_MarginAmount", bHide
    Hide_Row "Footer_Margin_MarginPercent", bHide
    
    Hide_Row "Footer_Margin_CostOfProd_Own_Part", bHide
    Hide_Row "Footer_Margin_MarginAmount_Own_Part", bHide
    Hide_Row "Footer_Margin_MarginPercent_Own_Part", bHide
    
    Hide_Row "Footer_Margin_CostOfProd_Purchased_Part", bHide
    Hide_Row "Footer_Margin_MarginAmount_Purchased_Part", bHide
    Hide_Row "Footer_Margin_MarginPercent_Purchased_Part", bHide
    
    Hide_Row "Footer_Margin_CostOfProd_Own_Service", bHide
    Hide_Row "Footer_Margin_MarginAmount_Own_Service", bHide
    Hide_Row "Footer_Margin_MarginPercent_Own_Service", bHide
    
    Hide_Row "Footer_Margin_CostOfProd_Purchased_Service", bHide
    Hide_Row "Footer_Margin_MarginAmount_Purchased_Service", bHide
    Hide_Row "Footer_Margin_MarginPercent_Purchased_Service", bHide
        
Exit Function

Err_SetRights:
    SetRights = False
    Resume Next
    
End Function

'##########################################################################################################
'# Description  :   Stellt den Dateinamen ein, unter dem das
'#                  das Excel-Dokument nach dem Erzeugen des Kalkulationsschemas
'#                  gespeichert werden soll.
'# Parameter    :   fileName    relative od. absoluter Dateiname
'# Return       :
'# History      :   #xy.net33
'##########################################################################################################

Sub SetSaveName(fileName As String)
    gSaveName = fileName
End Sub

'##########################################################################################################
'# Description  :   Tauscht in einer geg. URL den Server-Namen bzw. die
'#                  Server-IP-Nummer gegen "localhost" aus.
'#                  In manchen Server-Umgebungen kommt die Fertigmeldung
'#                  nicht beim KONFEX net-Server an, wenn eine Server-IP-Nummer
'#                  gegeben ist.
'#                  Die URL muss folgenden Aufbau haben:
'#                      <protocoll>://<server>:<port>[/<path>[?query]]
'#                  Bsp:
'#                      http://192.168.0.2:80/konfex
'#                      https://my-server:8080
'# Parameter    :   url     zu konvertierende URL
'# Return       :
'# History      :   #xy.net34
'##########################################################################################################

Function ToLocalhostURL(url As String) As String
    Dim i As Long
    Dim k As Long
    
    'suchen Anfang des Servernamens
    i = InStr(1, url, "://") + 3
    k = InStr(i, url, ":")
    
    ToLocalhostURL = Left(url, i - 1) + "localhost" + Mid(url, k)
End Function

'##########################################################################################################
'# Description  :   Konvertiert einen String, der Teil des Parameter-Strings einer URI ist
'#                  entsprechend der URI-Kodierungsregeln f|fffd|r URI-Parameter.
'#                  D.h., alle Zeichen werden durch ihren Hex-Zeichenkode ersetzt in der Form
'#                  %<Hex-Kode>, au|fffd|er
'#                      a-z
'#                      A-Z
'#                      0-9
'#                      - _ . ! ~ * ' ( )
'#
'#
'# Parameter    :   c     URL component
'# Return       :
'# History      :   #xy.net603
'##########################################################################################################

Function EncodeURIComponent(cs As String) As String
    Dim i As Integer
    Dim s As String
    Dim c As String
    
    For i = 1 To Len(cs)
        c = Mid(cs, i, 1)
        Select Case c
            Case "a" To "z", "A" To "Z", 0 To 9, "-", "_", ".", "!", "~", "*", "'", "(", ")"
                s = s + c
            Case Else
                s = s + "%" + Hex(Asc(c))
        End Select
    Next
    
    EncodeURIComponent = s
    
End Function


'##########################################################################################################
'# Description  :   Konvertiert einen Excel-Wert in einen String f|fffd|r die |fffd|bergabe an KONFEX.
'#                  Alle Werte werden mit Str() in einen String konvertiert. Bei Gleitkommazahlen
'#                  zwischen -1 und +1 wird dem Dezimaltrenner eine 0 vorangestellt.
'# Parameter    :   v   Wert
'# Return       :
'# History      :   #xy.net922
'##########################################################################################################

Function KfxStr(v As Variant) As String
    Dim s As String
    Const MINUS As String = "-"
    Const DECIMAL_SEPARATOR As String = "."
    Dim prefix As String
    
    s = Str(v)
    
    If VarType(v) = vbDouble Or VarType(v) = vbSingle Or VarType(v) = vbLong Or VarType(v) = vbInteger Then
        s = Trim(s)
        If v < 1 And v > -1 Then
            prefix = IIf(Left(s, Len(MINUS)) = MINUS, MINUS, "")
            s = Mid(s, Len(prefix) + 1)
            s = IIf(Left(s, Len(DECIMAL_SEPARATOR)) = DECIMAL_SEPARATOR, "0", "") + s
            s = prefix + s
        End If
    End If
    
    KfxStr = s
    
End Function

'##########################################################################################################
'# Description  :   Setzt alle voreingestellten Texte entsprechend der vorgegebenen Sprache und ggf. des Benutzers
'#                      Alle Zellen mit voreingestellten Texten haben einen Namen - in der Tabelle 'LabelText' sind im Bereich 'Label_NameOfCell' alle Zellnamen hinterlegt, deren Text
'#                      von der Routine ge|fffd|ndert werden soll
'#                      In den Spalten 'Label_Language_DE' und 'Label_Language_EN' sind die Texte f|fffd|r ein deutschsprachiges und ein englischsprachiges Kalkulationssheet hinterlegt
'#                      Der Routine wird die Sprachkennung |fffd|ber geben - die Texte werden dann aus der Spalte 'Label_Language_'[Parameter] ermittelt
'#                      Wenn die Texte auch gruppenabh|fffd|ngig defniert werden sollen, k|fffd|nnen analog f|fffd|r diese Gruppen Textspalten definiert werden
'# Parameter    :   Language - definition der Spalte, aus der die Texte ermittelt werden
'# Return       :
'# History      :   #sc0007
'##########################################################################################################

Sub Label_SetText(Language As String)

    Dim Label_Name As Range
    Dim Label_Text As String
    Dim ColNumLanguage As Long

    ColNumLanguage = Sheets(cSheetLabelText).Range("Label_Language_" & Language).Column

    For Each Label_Name In Range("Label_NameOfCell")

        'MsgBox Label_Name.value
        'MsgBox Sheets(cSheetLabelText).Cells(Label_Name.Row, ColNumLanguage).value

        Label_Text = Sheets(cSheetLabelText).Cells(Label_Name.Row, ColNumLanguage).value
        
        Select Case Label_Name.value
            Case "Button Back2Konfex"
                Sheets(cSheetKonfex).Buttons("Button Back2Konfex").Text = Label_Text
            Case "Label UserInstruction"
                Sheets(cSheetKonfex).Shapes("Label UserInstruction").TextFrame.Characters.Text = Label_Text
            Case Else
                Sheets(cSheetKonfex).Range(Label_Name.value).value = Label_Text
        End Select

    Next Label_Name

End Sub

'##########################################################################################################
'# Description  :   Debug - Funktion, um |fffd|ber Konfex Code einen Break in der Abarbeitung zu erzeugen
'#
'# Parameter    :
'# Return       :
'# History      :   #sc0118
'##########################################################################################################

Sub DoStop()
    Stop
End Sub


Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Option Explicit

Private Sub Workbook_Open()
    On Error Resume Next    ' #xy.net109
    StartKalkulation        ' Kalkulation starten
End Sub


Private Sub Workbook_BeforeClose(Cancel As Boolean)
    On Error Resume Next    ' #xy.net109
    DeleteMenuItemKonfex    ' L|fffd|schen des zus|fffd|tzlichen Men|fffd|punktes
End Sub


Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



Attribute VB_Name = "Upload"
'##########################################################################################################
'# Modul        :   Upload
'# Description  :   Das Kalkulationssheet soll nach der Kalkulation an den Server zur|fffd|ck geschickt werden - Dateiupload
'#                          dieses Modul enth|fffd|lt die Funktionen, die daf|fffd|r ben|fffd|tigt werden
'# History      :   #xy.net977
'##########################################################################################################

Option Explicit

#If VBA7 Then
    Public Declare PtrSafe Function WinGetTempPath Lib "kernel32" Alias "GetTempPathA" (ByVal buffSize As Long, ByVal buff As String) As Long
    Public Declare PtrSafe Function WinGetTempFileName Lib "kernel32" Alias "GetTempFileNameA" (ByVal pathName As String, ByVal prefix As String, ByVal unique As Integer, ByVal tempFileName As String) As Integer
#Else
    Public Declare Function WinGetTempPath Lib "kernel32" Alias "GetTempPathA" (ByVal buffSize As Long, ByVal buff As String) As Long
    Public Declare Function WinGetTempFileName Lib "kernel32" Alias "GetTempFileNameA" (ByVal pathName As String, ByVal prefix As String, ByVal unique As Integer, ByVal tempFileName As String) As Integer
#End If

Public Const cMaxPath As Integer = 260                  'max. L|fffd|nge eines Windows-Dateipfades #xy.net977

'##########################################################################################################
'# Description  :   L|fffd|dt das aktuelle Excel-Workbook auf den KONFEXnet-Server hoch.
'#                  Ist dem Workbook noch keine Datei zugeordnet, z. B. wenn sie von einem
'#                  Web Server heruntergeladen wurde, wird sie zuvor per SaveAs() in eine tempor|fffd|re Datei
'#                  im Temp-Ordner des Benutzers gespeichert (s. GetTempFolderPath()).
'# Parameter    :   ServerUrl       URL des Servers
'# Return       :   True, wenn Datei erfolgreich hochgeladen wurde
'# History      :   #xy.net977
'##########################################################################################################

Public Function UploadExcelFile(ServerUrl As String) As Boolean
    
    Const EXCEL_TMP_FILE_NAME As String = "{5ABBA764-5BC4-4e7b-B8ED-6CA250C36C2C}.xls"
    
    Dim sExcelFileName As String
    Dim sErrMsg As String
    Dim wb As Workbook
        
    UploadExcelFile = True
    
    ' Excel-Datei bin|fffd|r laden
    Set wb = ActiveWorkbook
    sExcelFileName = wb.FullName
        
    ' Excel-Dokument tempor|fffd|r in Datei speichern und Namen pr|fffd|fen
    ' Hinweis: SaveCopyAs() w|fffd|re optimal, liefert unter Ecxel 2003 aber leider einen Fehler, verwenden deshalb SaveAs().
    '          Dadurch erscheint jedoch tempor|fffd|rer Dateiname im Excel-Titel und die tempor|fffd|re Datei kann nicht gel|fffd|scht werden.
    '          SaveCopyAs() funktioniert ab MS Excel 2007.
    Dim sExcelTmpFileName As String
    Dim bPrevDisplayAlerts As Boolean
    
    On Error Resume Next    ' evtl. Fehlermeldungen von Kill() und DisplayAlerts unterdr|fffd|cken
    
    sExcelTmpFileName = GetTempFolderPath() + EXCEL_TMP_FILE_NAME
    Kill sExcelTmpFileName
    bPrevDisplayAlerts = Application.displayAlerts
    Application.displayAlerts = False
    wb.SaveAs fileName:=sExcelTmpFileName, ConflictResolution:=xlLocalSessionChanges
    Application.displayAlerts = bPrevDisplayAlerts
    
    On Error GoTo 0
    
    ' Dateiname neu erzeugen, da beim Download machmal [1] erg|fffd|nzt wird
    If InStr(sExcelFileName, "[") <> 0 Then
        sExcelFileName = Sheets("Konfex").Range("Projektnummer").value + ".xls"
    End If

    sErrMsg = UploadFile(sExcelTmpFileName, sExcelFileName, ServerUrl)
       
    If sErrMsg <> "" Then
        MsgBox "Datei """ + sExcelFileName + """ konnte nicht auf KONFEXnet-Server hochgeladen werden!" + vbCrLf + "Ursache: " + sErrMsg
        UploadExcelFile = False
    End If
    
End Function

'##########################################################################################################
'# Description  :   L|fffd|dt eine Datei in das User-Verzeichnis auf den KONFEXnet-Server hoch.
'# Parameter    :   clientFileName  Name bzw. Pfadname der hochzuladenden Datei auf dem Client-PC
'#                  serverFileName  Name, die die hochgeladene Datei auf dem Server erhalten soll (ohne Pfad)
'#                  ServerUrl       URL des Servers
'# Return       :   "" wenn Upload erfolgreich, sonst Fehlermeldung
'# History      :   #xy.net977
'##########################################################################################################

Public Function UploadFile(clientFileName As String, ByVal serverFileName As String, ServerUrl As String) As String
    
    ' Begrenzung f|fffd|r Multipart-Abschnitt in HTTP Body. Darf im codierten File nicht vorkommen
    Const sMultipartBoundary As String = "--------------hQ1398_fIx3su8A-----------------"
    
    ReDim aByte(0) As Byte ' Array of bytes to hold data to post
    Dim vPostData As Variant
    Dim vHttpHeaders As Variant
    Dim sPostData As String
    Dim i As Long               '#xy.net4
    Dim bFileData As Variant
    Dim sFileData As String
    Dim sErrMsg As String
    Dim SetBefehl As String
        
    UploadFile = ""
    
    ' Datei bin|fffd|r laden
    bFileData = LoadBinaryFile(clientFileName)
        
    If Not IsNull(bFileData) Then
        sFileData = StrConv(bFileData, vbUnicode)
        
        sPostData = ""
        sPostData = sPostData + "--" + sMultipartBoundary + vbCrLf
        sPostData = sPostData + "Content-Disposition: form-data; name=""#CNFADMIN_1.root_1.funcDestCalcUpload""; filename=""" + serverFileName + """ " + vbCrLf
        sPostData = sPostData + "Content-Type: application/upload" + vbCrLf
        sPostData = sPostData + vbCrLf
        sPostData = sPostData + sFileData + vbCrLf
        
        sPostData = sPostData & AddPostData(":cmd", "event", sMultipartBoundary)
        sPostData = sPostData & AddPostData(":event", "KfxAttrWriteEvent", sMultipartBoundary)
        sPostData = sPostData & AddPostData(":target", gKfxNetReturnTarget, sMultipartBoundary)
        
        sPostData = sPostData + "--" + sMultipartBoundary + "--" + vbCrLf
        
        aByte = StrConv(sPostData, vbFromUnicode)
        vPostData = aByte
        
        Dim Req As New MSXML2.ServerXMLHTTP     ' Mit MSXML2.XMLHTTP schl|fffd|gt Upload fehl, wenn umgebendes MS Office-Dokument per HTTP geladen wurde.
        Req.Open "POST", ServerUrl, False
        Req.setRequestHeader "User-Agent", "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)"
        Req.setRequestHeader "Content-Type", "multipart/form-data; charset=iso-8859-1; boundary=" + sMultipartBoundary
        Req.send vPostData
        
        If Req.Status <> 200 Then
            sErrMsg = "HTTP-Fehler " + Str(Req.Status) + ": " + Req.responseText
        End If
    Else
        sErrMsg = "Dateifehler " + Str(Err.Number) + ": " + Err.Description
    End If
        
    UploadFile = sErrMsg
    
End Function

'##########################################################################################################
'# Description  :   Ermittelt den Pfad des benutzerspezifischen Ordners f|fffd|r tempor|fffd|re Dateien.
'# Parameter    :   -
'# Return       :   Ordnerpfad inklusive abschlie|fffd|endem  "\"
'# History      :   #xy.net977
'##########################################################################################################

Public Function GetTempFolderPath() As String
    Dim tempFolder As String
    Dim pathLen As Long
    
    tempFolder = String(cMaxPath, " ")
    pathLen = WinGetTempPath(cMaxPath, tempFolder)
    
    GetTempFolderPath = Left(tempFolder, pathLen)
End Function

'##########################################################################################################
'# Description  :   Ermittelt einen eindeutigen tempor|fffd|ren Dateinamen im benutzerspezifischen Ordner f|fffd|r tempor|fffd|re Dateien.
'#                  S. a. GetTempFolderPath().
'# Parameter    :   -
'# Return       :   Ordnerpfad inklusive abschlie|fffd|endem  "\"
'# History      :   #xy.net977
'##########################################################################################################

Public Function GetTempFileName() As String
    Const cTmpFileExt As String = ".tmp"
    Const cTmpFilePrefix As String = "Kfx"
    Dim tempFolderPath As String
    Dim tempFileName As String
    Dim pos As Integer
    
    tempFolderPath = GetTempFolderPath()
    
    tempFileName = String(cMaxPath, " ")
    WinGetTempFileName tempFolderPath, cTmpFilePrefix, 0, tempFileName
    
    ' |fffd|berfl|fffd|ssigen Pufferinhalt abschneiden
    pos = InStr(Len(tempFolderPath), tempFileName, cTmpFileExt)
    
    GetTempFileName = Left(tempFileName, pos + Len(cTmpFileExt) - 1)
End Function

'##########################################################################################################
'# Description  :   L|fffd|dt Inhalt der geg. Datei in Bin|fffd|rform.
'# Parameter    :   fileName    Name der zu ladenden Datei
'# Return       :   Dateiinhalt als Byte Array oder Null, wenn Datei nicht gefunden bzw. nicht geladen werden konnte.
'# History      :   #xy.net977
'##########################################################################################################

Public Function LoadBinaryFile(fileName As String) As Variant
    On Error Resume Next
    
    Dim fileId As Integer
    Dim fileContent() As Byte
    Dim fileSize As Long
    
    fileId = FreeFile()
    Open fileName For Binary As fileId
    
    If Err.Number = 0 Then
        fileSize = FileLen(fileName)
        ReDim fileContent(Max(0, fileSize - 1))
        
        Get fileId, , fileContent
        LoadBinaryFile = fileContent
    Else
        LoadBinaryFile = Null
    End If
    
    Close fileId
    
End Function

'##########################################################################################################
'# Description  :   Erg|fffd|nzung des Post - Strings in einem definiertem Format
'# Parameter    :
'# Return       :   formatierter String
'# History      :   #xy.net977
'##########################################################################################################

Public Function AddPostData(sFeld As String, sWert As String, sBoundary As String) As String

Dim sPostData As String

    sPostData = ""

    sPostData = sPostData + "--" + sBoundary + vbCrLf
    sPostData = sPostData + "Content-Disposition: form-data; name=""" & sFeld & """ " + vbCrLf
    sPostData = sPostData + vbCrLf
    sPostData = sPostData + sWert + vbCrLf
        
    AddPostData = sPostData

End Function


'# END ####################################################################################################

Attribute VB_Name = "clswebComm"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'##########################################################################################################
'# Description  :   Klasse zum Aufbau und Senden der R|fffd|ckgabewerte an Konfex
'# Parameter    :
'# Return       :   -
'# Version      :   xy.net 0.7
'# History      :   #xy.net4  Webanpassung: neu
'##########################################################################################################
Option Explicit

Private MAX_Count As Long   '#xy.net4 Maximale Anzahl von Attributwerten, die mit einem Befehl gesendet werden k|fffd|nnen
'Global reference to an instance of the browser
'Private IE As SHDocVw.InternetExplorer
Private SetBefehl As String
Private mKonfexUrl As String
Private Header As String
Private Count As Long
Private update As Boolean   '#xy.net4 Wenn true, wird die KONFEX net-Oberfl|fffd|che nach dem URL-Request aktualisiert.
Private mReturnTarget As String  '#xy.net948



'##########################################################################################################
'# Description  :   Web-befehl an KONFEX schicken
'#                  wenn kein Attribut enthalten nicht senden
'# Parameter    :   update  - Wert des udpate-Parameters in der URL
'#                            Wenn true, wird die KONFEX net-Oberfl|fffd|che
'#                            nach dem URL-Request aktualisiert.
'# Return       :   -
'# History      :   Jb Webanpassung : neu
'##########################################################################################################
Public Sub ExecWebBefehl(update As Boolean)
    
    ReDim aByte(0) As Byte ' Array of bytes to hold data to post
    Dim vPost As Variant
    Dim vHeaders As Variant
    Dim sPostData As String
    Dim i As Long               '#xy.net4
    
    '#xy.net4 update-Parameter anh|fffd|ngen
    SetBefehl = SetBefehl + "&:update=" + IIf(update, "true", "false")
    
    '#xy.net40
    'PackBytes aByte(), SetBefehl
    aByte = StrConv(SetBefehl, vbFromUnicode)
    
    vPost = aByte ' Assign the byte array to a VARIANT
    vHeaders = "Content-Type: application/x-www-form-urlencoded;charset=iso-8859-1" & vbCrLf    '#xy.net302
        
    'nur, wenn wirklich noch was angeh|fffd|ngt wurde
    If Count <> 0 Then
            ' #xy.net829
        Dim Req As New MSXML2.ServerXMLHTTP     ' #xy.net829
        Req.Open "POST", mKonfexUrl, False
        Req.setRequestHeader "User-Agent", "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)"
        'Req.setRequestHeader "User-Agent", "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)"
        Req.setRequestHeader "Content-Type", "application/x-www-form-urlencoded;charset=iso-8859-1"
        Req.send vPost
 
'        IE.Navigate mKonfexUrl, , , vPost, vHeaders
'
'        '#xy.net4 Warten bis Request von KONFEX net bearbeitet ist
'        Do While IE.Busy = True
'            DoEvents
'        Loop
    End If
    
    InitSetBefehl
    

End Sub

'##########################################################################################################
'# Description  :   H|fffd|ngt neues Attribut an die R|fffd|ckgabeliste an, wenn Maximalanzahl erreicht senden
'# Parameter    :   ObjektSlot  Objekt-Attributname
'#                  Wertsenden  neuer Wert des Attributes
'#                  typ_info    Typ des Attributwertes
'# Return       :   -
'# History      :   Jb Webanpassung : neu
'##########################################################################################################
Public Sub SetWebBefehl(ObjektSlot As String, Wertsenden As String, typ_info As String)
        
    ObjektSlot = ReplaceSpecialChars(ObjektSlot)
    Wertsenden = ReplaceSpecialChars(Wertsenden)
    
    SetBefehl = SetBefehl & "&" & ObjektSlot & "=" & Wertsenden
    If typ_info <> "" Then
        SetBefehl = SetBefehl & "&" & ObjektSlot & "!type=" & typ_info
    End If
    
    ' Parameterz|fffd|hler hochz|fffd|hlen
    Count = Count + 1
    
    ' wenn MAX_Count erreicht ist wird gesendet
    If Count >= MAX_Count Then
        ExecWebBefehl update    '#xy.net4
    End If


End Sub
'##########################################################################################################
'# Description  :   Initialisierung, Adresse holen, R|fffd|ckgabestring vorbereiten
'# Parameter    :   -
'# Return       :   -
'# History      :   Jb Webanpassung : neu
'##########################################################################################################
Private Sub Class_Initialize()

    
    Header = ""
    MAX_Count = 10000   'schicken alle Attribute mit einem Mal,
                        'Sonst zuf|fffd|llige Request-Reihenfolge und Update
                        'der KONFEX net-Oberfl|fffd|che u. U. zu fr|fffd|h, da
                        'Request asynchron abgeschickt werden.
    update = False      '#xy.net4
    
    'Internet Explorer-Objekt erstellen
    'Set IE = New SHDocVw.InternetExplorer
    
    
End Sub
'##########################################################################################################
'# Description  :   URL und festlegen
'# Parameter    :   -
'# Return       :   -
'# History      :   Jb Webanpassung : neu
'##########################################################################################################
Public Property Let KonfexUrl(url As String)
    mKonfexUrl = url
End Property
'##########################################################################################################
'# Description  :   ReturnTarget und festlegen
'# Parameter    :   -
'# Return       :   -
'# History      :   Jb Webanpassung : neu
'##########################################################################################################
Public Property Let ReturnTarget(Target As String)
    mReturnTarget = Target
End Property

'##########################################################################################################
'# Description  :   Setzt das Update-Flag.
'#                  Wenn true, wird die KONFEX net-Oberfl|fffd|che
'#                  nach dem URL-Request aktualisiert.
'# Parameter    :   update  - Wert des udpate-Parameters in der URL
'# Return       :   -
'# History      :   #xy.net4
'##########################################################################################################
Public Property Let UpdateUifOnRequest(upd As Boolean)
    update = upd
End Property

'##########################################################################################################
'# Description  :   Gibt den Wert dss Update-Flags zur|fffd|ck.
'#                  Wenn true, wird die KONFEX net-Oberfl|fffd|che
'#                  nach dem URL-Request aktualisiert.
'# Parameter    :   -
'# Return       :   -
'# History      :   #xy.net4
'##########################################################################################################
Public Property Get UpdateUifOnRequest() As Boolean
    UpdateUifOnRequest = update
End Property

'##########################################################################################################
'# Description  :   Befehlszeile neu belegen
'# Parameter    :   -
'# Return       :   -
'# History      :   Jb Webanpassung : neu
'##########################################################################################################
Public Sub InitSetBefehl()
    'Befehlskommando vorbereiten
    SetBefehl = ":cmd=event&:event=KfxAttrWriteEvent&:target=" & mReturnTarget
    Count = 0
    
End Sub

Private Sub Class_Terminate()
     'IE.Quit
     'Set IE = Nothing
End Sub

' Utility function to pack the data to post into an array of bytes
' #xy.net40 Besser durch StrConv() ersetzen. Leerzeichen werden jetzt
' bereits in ReplaceSpecialChars() durch "+" ersetzt.
Private Sub PackBytes(ByteArray() As Byte, ByVal PostData As String)

Dim iNewBytes As Long           ' #xy.net4
Dim i As Long                   ' #xy.net4
Dim ch As String * 1

iNewBytes = Len(PostData) - 1   ' Get rid of the null termination
If iNewBytes < 0 Then
 Exit Sub
End If

ReDim ByteArray(iNewBytes)

For i = 0 To iNewBytes
 ch = Mid(PostData, i + 1, 1)
 If ch = Space(1) Then
    ch = "+"
 End If
 ByteArray(i) = Asc(ch)
Next

End Sub

 ' Ersetzt Zeichen  mit code >127 durch Unicode  Escape-Sequenzen,
 ' "%" durch "%25", "#" durch "%23" und Leerzeichen durch "+".
 ' Diese Ersetzungen sind notwendig f|fffd|r Daten, die per HTTP POST- bzw. GET-
 ' Request |fffd|bertragen werden sollen.
 Private Function ReplaceSpecialChars(ByVal TestStr As String) As String
 
 Dim i As Long               '#xy.net4
 Dim ch As String
 Dim NewString As String
 
    For i = 0 To Len(TestStr) - 1
        ch = Mid(TestStr, i + 1, 1)
        Select Case Asc(ch)
             Case Is > 127
                ch = "%" & Hex(AscW(ch))
             Case 35    ' # Hash Symbol
                ch = "%23"
             Case 37    ' % Prozentzeichen
                ch = "%25"
             Case 32    ' #xy.net40 Leerzeichen
                ch = "+"
             Case Else
        End Select
        NewString = NewString & ch
    Next
    
    ReplaceSpecialChars = NewString

 End Function

' InQuest injected base64 decoded content
' z+kj
' BjY[i

INQUEST-PP=macro
