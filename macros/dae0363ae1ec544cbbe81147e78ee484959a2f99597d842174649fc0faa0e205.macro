Attribute VB_Name = "Module1"
Option Explicit

Sub Macro2()
Attribute Macro2.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro2 Macro
'

'
    ActiveChart.Shapes.Range(Array("chart")).Select
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ExportButton, 26, 3, MSForms, CommandButton"
Attribute VB_Control = "HomeButton, 24, 4, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 3, 5, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 5, 6, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 22, 7, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 27, 8, MSForms, CommandButton"
Private Sub CommandButton1_Click()
   
   Call CommandButton6_Click
      
End Sub

Private Sub ComboBox21_Change()
    If ComboBox21.Value = "GVA" Then
        Worksheets("SNAPSHOT").Shapes("GVAFlow").Visible = True
        Worksheets("SNAPSHOT").Shapes("JobFlow").Visible = False
    ElseIf ComboBox21.Value = "Jobs" Then
        Worksheets("SNAPSHOT").Shapes("GVAFlow").Visible = False
        Worksheets("SNAPSHOT").Shapes("JobFlow").Visible = True
    End If
End Sub

Private Sub CommandButton2_Click()
    
    HideDesc
End Sub

Private Sub CommandButton3_Click()
    
    HideAllElse ("DETAILED_BASIC_SNAPSHOT")
End Sub

Private Sub CommandButton4_Click()
    HideAllElse ("SNAPSHOT")
End Sub

Private Sub CommandButton5_Click()
    HideAllElse ("ADDITIONAL_IMPACT_RESULTS")
End Sub

Private Sub CommandButton6_Click()
    HideAllElse ("GRAPHICS_DEFAULT")
    ActiveSheet.Rows("5:78").Hidden = True
    ActiveSheet.Rows("5:42").Hidden = False
End Sub

Private Sub CommandButton7_Click()
    HideAllElse ("GRAPHICS_DEFAULT")
    ActiveSheet.Rows("5:78").Hidden = True
    ActiveSheet.Rows("43:78").Hidden = False
End Sub

Private Sub CommandButton8_Click()
'Local Area comparison
    HideAllElse ("COMPARISON")
End Sub

Private Sub ExportButton_Click()
    Call ExportData("Results for Export", "DefaultDataExportArea")
End Sub

Private Sub HomeButton_Click()
    HideAllElse ("HOME")
End Sub
Attribute VB_Name = "Sheet20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet25"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet27"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet28"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet29"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton6, 8, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 3, 2, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 4, 3, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 5, 4, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 6, 5, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 7, 6, MSForms, CommandButton"
Option Explicit

Private Sub CommandButton1_Click()
    AdditionalImpactEntry ("10:25")
End Sub

Private Sub CommandButton2_Click()
    AdditionalImpactEntry ("27:28")
End Sub
Private Sub CommandButton3_Click()
    AdditionalImpactEntry ("30:42")
End Sub

Private Sub CommandButton4_Click()
    HideAllElse ("ADDITIONAL_IMPACT_RESULTS")
End Sub

Private Sub CommandButton5_Click()
    HideAllElse ("ADDEVENTS")
End Sub

Private Sub CommandButton6_Click()
    'Model Construction impact
    HideAllElse ("ADDITIONAL_IMPACT_INPUTS")
    AdditionalImpactEntry ("47:49")
End Sub
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet30"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet31"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet32"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton12, 14, 3, MSForms, CommandButton"
Attribute VB_Control = "CommandButton10, 11, 4, MSForms, CommandButton"
Attribute VB_Control = "CommandButton9, 10, 5, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 9, 6, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 8, 7, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 7, 8, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 6, 9, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 1, 10, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 3, 11, MSForms, CommandButton"
Attribute VB_Control = "HomeButton, 15, 12, MSForms, CommandButton"
Attribute VB_Control = "ExportButton, 16, 13, MSForms, CommandButton"
Option Explicit

Private Sub CommandButton1_Click()
    
    Call HideDesc
End Sub

Private Sub CommandButton10_Click()
    
    HideAllElse ("ADDITIONAL_IMPACT_INPUTS")
    AdditionalImpactEntry ("30:42")
End Sub

Private Sub CommandButton11_Click()
    HideAllElse ("SNAPSHOT")
End Sub

Private Sub CommandButton12_Click()
    'Model Construction Impact
    HideAllElse ("ADDITIONAL_IMPACT_INPUTS")
    AdditionalImpactEntry ("47:49")
End Sub

Private Sub ExportButton_Click()
    Call ExportData("Results for Export", "ImpactDataExportArea")
End Sub

Private Sub CommandButton2_Click()
    
    HideAllElse ("REFINED_SNAPSHOT")
End Sub


Private Sub CommandButton3_Click()
    
    HideAllElse ("ADDITIONAL_IMPACT_INPUTS")
End Sub

Private Sub CommandButton4_Click()
    HideAllElse ("ADDITIONAL_IMPACT_RESULTS")
End Sub

Private Sub CommandButton5_Click()
    
    HideAllElse ("ADDITIONAL_IMPACT_INPUTS")
    AdditionalImpactEntry ("10:25")
End Sub

Private Sub CommandButton6_Click()
    
    HideAllElse ("ADDITIONAL_IMPACT_INPUTS")
    AdditionalImpactEntry ("10:25")
End Sub

Private Sub CommandButton7_Click()
    HideAllElse ("ADDEVENTS")
End Sub

Private Sub CommandButton8_Click()
    
    HideAllElse ("ADDITIONAL_IMPACT_INPUTS")
    AdditionalImpactEntry ("7:25")
End Sub

Private Sub CommandButton9_Click()
    
    HideAllElse ("ADDITIONAL_IMPACT_INPUTS")
    AdditionalImpactEntry ("27:28")
End Sub

Private Sub HomeButton_Click()
    HideAllElse ("HOME")
End Sub
Attribute VB_Name = "Sheet35"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton2, 21, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton14, 14, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButton13, 13, 2, MSForms, CommandButton"
Attribute VB_Control = "CommandButton10, 10, 3, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 9, 4, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 8, 5, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 7, 6, MSForms, CommandButton"
Attribute VB_Control = "CommandButton9, 5, 7, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 1, 8, MSForms, CommandButton"
Attribute VB_Control = "HomeButton, 18, 9, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 19, 10, MSForms, CommandButton"
Attribute VB_Control = "CommandButton11, 20, 11, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    'Show/Hide Method
    Call HideDesc
End Sub

Private Sub CommandButton11_Click()
    HideAllElse ("GRAPHICS_REFINED")
End Sub

Private Sub CommandButton2_Click()
    'Export to csv
    Call ExportData("Results for Export", "DetailedRefinedDataExportArea")
End Sub

Private Sub CommandButton3_Click()
    'Default baseline
    HideAllElse ("SNAPSHOT")
End Sub

Private Sub CommandButton4_Click()
    'Refined baseline
    HideAllElse ("REFINED_SNAPSHOT")
End Sub

Private Sub CommandButton8_Click()
    HideAllElse ("REFINED_SNAPSHOT")
End Sub

Private Sub CommandButton6_Click()
    'Refine Sports Services
    Call AdjustEntry("25:26")
End Sub

Private Sub CommandButton9_Click()
    'Refine Sports Education
    Call AdjustEntry("42:45")
End Sub

Private Sub CommandButton5_Click()
    'Refine Sports equipment
    Call AdjustEntry("18:19")
End Sub
Private Sub CommandButton7_Click()
    'Refine Spectator sports
    HideAllElse ("EVENTS")
End Sub

Private Sub CommandButton10_Click()
    'Refine Sports equipment
    Call AdjustEntry("18:19")
End Sub

Private Sub CommandButton12_Click()
    'Refine Sports gambling
    Call AdjustEntry("11:16")
End Sub
Private Sub CommandButton13_Click()
   'Refine TV/satelite subscriptions
    Call AdjustEntry("11:16")
End Sub

Private Sub CommandButton14_Click()
    'Refine Tourism
    Call AdjustEntry("28:40")
End Sub
Private Sub HomeButton_Click()
    HideAllElse ("HOME")
End Sub
Attribute VB_Name = "Sheet36"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet38"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton2, 12, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 1, 1, MSForms, CommandButton"
Attribute VB_Control = "HomeButton, 8, 2, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 9, 3, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 10, 4, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 11, 5, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    Call HideDesc
End Sub
Private Sub CommandButton2_Click()
    Call ExportData("Results for Export", "DetailedDefaultDataExportArea")
End Sub

Private Sub CommandButton3_Click()
    HideAllElse ("ADDITIONAL_IMPACT_RESULTS")
End Sub

Private Sub CommandButton4_Click()
    HideAllElse ("REFINED_SNAPSHOT")
End Sub

Private Sub CommandButton5_Click()
    HideAllElse ("COMPARISON")
End Sub

Private Sub CommandButton6_Click()
    HideAllElse ("SNAPSHOT")
End Sub

Private Sub CommandButton7_Click()
    HideAllElse ("GRAPHICS_DEFAULT")
End Sub

Private Sub HomeButton_Click()
    HideAllElse ("HOME")
End Sub
Attribute VB_Name = "Sheet39"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 1, MSForms, CommandButton"
Attribute VB_Control = "ExportButton, 4, 2, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 5, 3, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    
    HideAllElse ("SNAPSHOT")
End Sub

Private Sub CommandButton2_Click()
    
    Call ExportData(ActiveSheet.Name, "Print_Area", "Shapes", "Print_Area2")

End Sub

Private Sub CommandButton3_Click()
    
    HideAllElse (ActiveSheet.Name)
    ActiveSheet.Rows("6:76").Hidden = True
    ActiveSheet.Rows("43:76").Hidden = False
End Sub

Private Sub CommandButton4_Click()
    HideAllElse ("ADDITIONAL_IMPACT_RESULTS")
End Sub

Private Sub CommandButton5_Click()
    HideAllElse ("SNAPSHOT")
End Sub

Private Sub ExportButton_Click()
        Call ExportPDF(ActiveSheet.Name, 1, 1)
End Sub
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "HomeButton, 24, 4, MSForms, CommandButton"
Attribute VB_Control = "CommandButton11, 22, 5, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 1, 6, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 2, 7, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 3, 8, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 4, 9, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 5, 10, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 6, 11, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 7, 12, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 8, 13, MSForms, CommandButton"
Attribute VB_Control = "CommandButton9, 10, 14, MSForms, CommandButton"
Attribute VB_Control = "ExportButton, 25, 15, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    'Show/Hide Method
    Call HideDesc
End Sub

Private Sub CommandButton10_Click()
    'Impact Assessment
    
    HideAllElse ("ADDITIONAL_IMPACT_RESULTS")
End Sub

Private Sub CommandButton11_Click()
    'Show Flowchart
    
    HideAllElse ("GRAPHICS_REFINED")
    ActiveSheet.Rows("6:76").Hidden = True
    ActiveSheet.Rows("6:42").Hidden = False
End Sub

Private Sub CommandButton12_Click()
    'Default Baseline
    HideAllElse ("SNAPSHOT")
End Sub

Private Sub CommandButton13_Click()
    'Refined Baseline
    HideAllElse ("REFINED_SNAPSHOT")
End Sub

Private Sub CommandButton14_Click()
    'Show England Comparison
    
    HideAllElse ("GRAPHICS_REFINED")
    ActiveSheet.Rows("6:76").Hidden = True
    ActiveSheet.Rows("43:76").Hidden = False
End Sub

Private Sub ExportButton_Click()
    Call ExportData("Results for Export", "RefinedDataExportArea", "", "RefinedAssumExportArea")
End Sub

Private Sub CommandButton2_Click()
    'Refine Sports Services
    
    Call AdjustEntry("25:26")
End Sub

Private Sub CommandButton3_Click()
    'Refine Sports Education
    Call AdjustEntry("42:45")
End Sub

Private Sub CommandButton4_Click()
    'Refine Sportswear and equipment
    Call AdjustEntry("18:19")
End Sub

Private Sub CommandButton5_Click()
    'Spectator Sports
    HideAllElse ("EVENTS")
End Sub

Private Sub CommandButton6_Click()
    'Refine Sportswear and equipment
    Call AdjustEntry("18:19")
End Sub

Private Sub CommandButton7_Click()
    'Refine Sports broadcasting and gambling
    Call AdjustEntry("11:16")
End Sub

Private Sub CommandButton8_Click()
    'Refine Tourism
    Call AdjustEntry("28:40")
End Sub

Private Sub CommandButton9_Click()
    'Detailed Results
    HideAllElse ("DETAILED_REFINED_SNAPSHOT")
End Sub
Private Sub HomeButton_Click()
    HideAllElse ("HOME")
End Sub





Attribute VB_Name = "Sheet40"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Private Sub CommandButton1_Click()
    
    HideAllElse ("REFINED_SNAPSHOT")
  
End Sub

Private Sub CommandButton2_Click()
    Call AdjustEntry("13:18")
    
    ActiveWorkbook.Names("AdjustmentShortList").RefersTo = Worksheets("CLASSIF").Range("AdjustmentList").Resize(3, 1)
    Worksheets("ADJUST").AdjustChartSelect.ListFillRange = "AdjustmentShortList"

End Sub

Private Sub CommandButton3_Click()
    Call AdjustEntry("27:28")
    
    
    Worksheets("ADJUST").AdjustChartSelect.ListFillRange = "AdjustmentShortList"

End Sub

Private Sub CommandButton4_Click()
    
    
    Call AdjustEntry("30:32")
    
    Worksheets("ADJUST").AdjustChartSelect.ListFillRange = "AdjustmentShortList"

End Sub

Private Sub CommandButton5_Click()
    
    Call HideAllElse("EVENTS")
End Sub

Private Sub CommandButton6_Click()
    
    Call AdjustEntry("34:36")
    
    Worksheets("ADJUST").AdjustChartSelect.ListFillRange = "AdjustmentShortList"
    
End Sub

Private Sub CommandButton7_Click()
    
    Call AdjustEntry("20:21")
    
    Worksheets("ADJUST").AdjustChartSelect.ListFillRange = "AdjustmentShortList"
   
End Sub
Attribute VB_Name = "Sheet41"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 3, 2, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 4, 3, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 5, 4, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 6, 5, MSForms, CommandButton"
Option Explicit


Private Sub CommandButton1_Click()
    AdditionalImpactEntry ("7:25")
End Sub

Private Sub CommandButton2_Click()
    AdditionalImpactEntry ("27:28")
End Sub
Private Sub CommandButton3_Click()
    AdditionalImpactEntry ("30:42")
End Sub

Private Sub CommandButton4_Click()
    HideAllElse ("ADDITIONAL_IMPACT_RESULTS")
End Sub

Private Sub CommandButton5_Click()
    HideAllElse ("ADDEVENTS")
End Sub

Private Sub CommandButton6_Click()
    'Model Construction impact
    HideAllElse ("ADDITIONAL_IMPACT_INPUTS")
    AdditionalImpactEntry ("47:49")
End Sub
Attribute VB_Name = "Sheet42"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet43"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 29, 28, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 30, 29, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 31, 30, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 32, 31, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 33, 32, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 34, 33, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 35, 34, MSForms, CommandButton"
Option Explicit

Private Sub CommandButton1_Click()
    HideAllElse ("REFINED_SNAPSHOT")
End Sub

Private Sub CommandButton2_Click()
    Call AdjustEntry("6:16")
End Sub

Private Sub CommandButton3_Click()
    Call AdjustEntry("25:26")
End Sub

Private Sub CommandButton4_Click()
    
    Call AdjustEntry("28:40")
End Sub

Private Sub CommandButton5_Click()
    Call HideAllElse("EVENTS")
End Sub

Private Sub CommandButton6_Click()
    Call AdjustEntry("42:45")
End Sub

Private Sub CommandButton7_Click()
    Call AdjustEntry("18:19")

End Sub

Attribute VB_Name = "Sheet44"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet45"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 4, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 5, 2, MSForms, CommandButton"
Attribute VB_Control = "LocalAuthoritySelect, 10, 3, MSForms, ComboBox"
Attribute VB_Control = "LocaAreaTypeSelector, 11, 4, MSForms, ComboBox"
Private Sub CommandButton1_Click()
   
   HideAllElse ("REFINED_SNAPSHOT")
      
End Sub

Private Sub CommandButton2_Click()
    
    HideDesc
End Sub

Private Sub CommandButton3_Click()
    
    HideAllElse ("DETAILED_BASIC_SNAPSHOT")
End Sub

Private Sub CommandButton4_Click()
    HideAllElse ("SNAPSHOT")
End Sub

Private Sub CommandButton5_Click()
    HideAllElse ("ADDITIONAL_IMPACT_RESULTS")
End Sub

Private Sub CommandButton6_Click()
    HideAllElse ("GRAPHICS_DEFAULT")
    ActiveSheet.Rows("8:78").Hidden = True
    ActiveSheet.Rows("8:45").Hidden = False
End Sub

Private Sub CommandButton7_Click()
    HideAllElse ("GRAPHICS_DEFAULT")
    ActiveSheet.Rows("8:78").Hidden = True
    ActiveSheet.Rows("46:78").Hidden = False
End Sub

Private Sub LocaAreaTypeSelector_Change()
    Call AreaTypeChange(Range("LocalAreaTypeSelect").Value, "LocalAuthority", "HOME")
    
    'Hide options for Impact assessment if england is selected
    If LocaAreaTypeSelector.Value = "England" Then
        Worksheets("Home").Shapes("ImpactAssessButtonGroup").Visible = False
        Worksheets("Home").Rows("14:15").Hidden = xlVeryHidden
    Else
        Worksheets("Home").Shapes("ImpactAssessButtonGroup").Visible = True
        Worksheets("Home").Rows("14:15").Hidden = False
    End If
    
End Sub

Private Sub LocalAuthoritySelect_Change()
    If ActiveSheet.Name = "HOME" Then
        Call Worksheet_Change(Range("LocalAuthority"))
    End If
End Sub


Private Sub Worksheet_Change(ByVal Target As Range)
    'Remove fixes when the local authority selected is changed
    Dim i As Byte
    Dim sNamedRange As String
    'Trigger only when the Local authority cell is changed
    If Target.Address = Range("LocalAuthority").Address Then
        Application.ScreenUpdating = False
        Call ResetUserInputs
        Call ChangeChartTitles("Participation", "COMPARISON", "LocalAuthority")
        Call ChangeChartTitles("Consumption", "COMPARISON", "LocalAuthority")
        Call EventReset
        Worksheets("HOME").Activate
        Application.ScreenUpdating = True
    End If

 
    
End Sub
Attribute VB_Name = "Sheet46"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet47"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "LocalCompSelector, 9, 0, MSForms, ComboBox"
Attribute VB_Control = "CommandButton1, 4, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 6, 2, MSForms, CommandButton"
Attribute VB_Control = "LocalAreaCompSelector, 13, 3, MSForms, ComboBox"
Option Explicit

Private Sub CommandButton1_Click()
    HideAllElse ("SNAPSHOT")
End Sub


Private Sub CommandButton3_Click()
'Export to PDF
    Call ExportPDF(ActiveSheet.Name, 1, 2)
End Sub

Private Sub LocalAreaCompSelector_Change()
    Call AreaTypeChange(Range("CompLocalAreaTypeSelect").Value, "LocalAreaComparison", "COMPARISON")
End Sub

Private Sub LocalCompSelector_Change()
    Call Worksheet_SheetChange(Range("LocalAreaComparison"))
End Sub

Private Sub Worksheet_SheetChange(ByVal Target As Range)

    If Target.Application.ActiveSheet.Name = "COMPARISON" Then
        If Target.Address = Range("LocalAreaComparison").Address Then
            Application.ScreenUpdating = False
            Application.EnableEvents = False
            Call PrepareComaparatorData(Worksheets("HOME").Range("LocalAuthority").Value, Worksheets("HOME").Range("LocalAreaTypeSelect").Value)
            Call ChangeChartTitles("Participation", "COMPARISON", "LocalAuthority")
            Call ChangeChartTitles("Consumption", "COMPARISON", "LocalAuthority")
            Call ChangeChartTitles("Participation", "COMPARISON", "LocalAreaComparison", "Comp")
            Call ChangeChartTitles("Consumption", "COMPARISON", "LocalAreaComparison", "Comp")
            Worksheets("COMPARISON").Activate
            Range("LocalAreaComparison").Select
            Application.EnableEvents = True
            Application.ScreenUpdating = True
        End If
    End If
End Sub
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 6, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 7, 2, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 8, 3, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 9, 4, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 10, 5, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 11, 6, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 12, 7, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    'Back to Results
    HideAllElse ("REFINED_SNAPSHOT")
  
End Sub

Private Sub CommandButton2_Click()
    'Refine Sports broadcasting and gambling
   Call AdjustEntry("11:16")
End Sub

Private Sub CommandButton3_Click()
    'Refine Sports Services
    Call AdjustEntry("25:26")
End Sub

Private Sub CommandButton4_Click()
    'Refine Tourism
    Call AdjustEntry("28:40")
End Sub

Private Sub CommandButton5_Click()
    'Refine Spectator Sport
    
    Call HideAllElse("EVENTS")
End Sub

Private Sub CommandButton6_Click()
    'Refine Sports Education
    Call AdjustEntry("42:45")
End Sub

Private Sub CommandButton7_Click()
    'Refine Sportswear and Equipment
   Call AdjustEntry("18:19")
End Sub

Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 2, MSForms, CommandButton"
Attribute VB_Control = "ExportButton, 6, 3, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 7, 4, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    
    HideAllElse ("REFINED_SNAPSHOT")
End Sub

Private Sub CommandButton2_Click()
    
    Call ExportData(ActiveSheet.Name, "Print_Area", "Shapes")

End Sub

Private Sub CommandButton3_Click()
    
    HideAllElse (ActiveSheet.Name)
    ActiveSheet.Rows("6:76").Hidden = True
    ActiveSheet.Rows("43:76").Hidden = False
End Sub

Private Sub CommandButton4_Click()
    HideAllElse ("ADDITIONAL_IMPACT_RESULTS")
End Sub

Private Sub CommandButton5_Click()
    HideAllElse ("SNAPSHOT")
End Sub

Private Sub ExportButton_Click()
    Call ExportPDF(ActiveSheet.Name, 1, 1)
End Sub
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Workbook_Open()
    Dim i As Byte
    'Application.EnableEvents = False
    For i = 1 To ActiveWorkbook.Sheets.Count
        If Worksheets(i).Name <> "DETAILED_EMP" Then
            Worksheets(i).Protect "cam.econ", UserInterfaceOnly:=True
        End If
    Next i
    HideAllElse ("HOME")
    'Application.EnableEvents = True
End Sub

Private Sub Workbook_SheetChange(ByVal Sh As Object, ByVal Target As Range)

'Remove fixes when the local authority selected is changed
    Dim i As Byte
    'Trigger only when Total additional participants cell is changed
    If Target.Application.ActiveSheet.Name = ActiveWorkbook.Sheets("ADDITIONAL_IMPACT_INPUTS").Name Then
        If Target.Address = Range("TotalParticipantAdd").Address Then
            Call AddParticipantsChange
            Call AddPartFirstCellChange
        End If
        If Target.Address = Range("AddPartEst").Cells(1, 1).Address Then
            Call AddPartFirstCellChange
        End If
    End If

    If Target.Application.ActiveSheet.Name = ActiveWorkbook.Sheets("ADJUST").Name Then
        If Target.Offset(1).Address = ActiveCell.Address Then
    
            If Target.Address = Range("OnlineGambleEmpFix").Cells(1, 1).Address Then
                Call ShopGamblingAdjust
            End If
        End If
    End If
    
    
    If Target.Application.ActiveSheet.Name = "EVENTS" Then
        If (Target.Row > Range("EventFields").Row) Then
            Application.EnableEvents = False
            Call EventCalculate("EventFields", "RecurrEventExp", "RecurrEventVisit")
            Call EventCalculate("OneEventFields", "OneEventExp", "OneEventVisit")
            Application.EnableEvents = True
        End If
        If Target.Address = Range("RecurrEventDay").Address Or Target.Address = Range("RecurrEventNight").Address Or Target.Address = Range("OneEventNight").Address Or Target.Address = Range("OneEventDay").Address Then
            Application.EnableEvents = False
            Range("SpectateTourVisitFix").Value = Range("RecurrEventNight").Value + Range("OneEventNight").Value
            Range("SpectateDayTourVisitFix").Value = Range("RecurrEventDay").Value + Range("OneEventDay").Value
            Application.EnableEvents = True
        End If
    
    End If
    If Target.Application.ActiveSheet.Name = "ADDEVENTS" Then
        If (Target.Row > Range("AddEventFields").Row) Then
            Application.EnableEvents = False
            Call EventCalculate("AddEventFields", "AddRecurrEventExp", "AddRecurrEventVisit")
            Call EventCalculate("AddOneEventFields", "AddOneEventExp", "AddOneEventVisit")
            Application.EnableEvents = True
        End If
        If Target.Address = Range("AddRecurrEventDay").Address Or Target.Address = Range("AddRecurrEventNight").Address Or Target.Address = Range("AddOneEventNight").Address Or Target.Address = Range("AddOneEventDay").Address Then
            Application.EnableEvents = False
            Range("SpecSportVisitAdd").Value = Range("AddRecurrEventNight").Value + Range("AddOneEventNight").Value
            Range("SpecSportDayVisitAdd").Value = Range("AddRecurrEventDay").Value + Range("AddOneEventDay").Value
            Application.EnableEvents = True
        End If
    End If
    
    
    
    If Target.Application.ActiveSheet.Name = "HOME" And Target.Address = Range("LocalAreaTypeSelect").Address Then
        Call AreaTypeChange(Range("LocalAreaTypeSelect").Value, "LocalAuthority", "HOME")
    End If
    
    If Target.Application.ActiveSheet.Name = "COMPARISON" And Target.Address = Range("CompLocalAreaTypeSelect").Address Then
        Call AreaTypeChange(Range("CompLocalAreaTypeSelect").Value, "LocalAreaComparison", "COMPARISON")
    End If

End Sub

Attribute VB_Name = "modAdditionalImpact"
Option Explicit
Option Private Module

Sub AddParticipantsChange()

        'Calculate additional particpation by sport and ageband estimates
        Dim i, j As Byte
        Dim iRoundedSum As Double
        Dim iPartTotal As Double
        iPartTotal = Range("TotalParticipantAdd").Value
        'Calculate first estimate of participants distribution then set as values to allow editing
            ActiveWorkbook.Sheets("ADDITIONAL_IMPACT_INPUTS").Range("AddPartEst").FormulaArray = "=Round(PartShareAssum*TotalParticipantAdd,0)" 'Used Round() to ensure whole people estimate
            ActiveWorkbook.Sheets("ADDITIONAL_IMPACT_INPUTS").Range("AddPartEst").Value = ActiveWorkbook.Sheets("ADDITIONAL_IMPACT_INPUTS").Range("AddPartEst").Value
        For i = 1 To ActiveWorkbook.Sheets("ADDITIONAL_IMPACT_INPUTS").Range("AddPartEst").Rows.Count
            For j = 1 To ActiveWorkbook.Sheets("ADDITIONAL_IMPACT_INPUTS").Range("AddPartEst").Columns.Count
                iRoundedSum = iRoundedSum + WorksheetFunction.Round(Range("PartShareAssum").Cells(i, j).Value * Range("TotalParticipantAdd").Value, 0)
            Next j
        Next i
        
        If iPartTotal <> iRoundedSum Then
            Range("AddPartEst").Cells(1, 1).Value = Range("AddPartEst").Cells(1, 1).Value + iPartTotal - iRoundedSum
        End If
        
End Sub

Sub AddPartFirstCellChange()
    Dim iRoundedSum As Double
    Dim iRemainder As Integer
    Dim i As Byte
    Dim j As Byte
    Dim iPartTotal As Double
    Dim iExpectedFirstCellValue As Double
    'Calculate the remainder value again
    iRoundedSum = 0
    iPartTotal = Range("TotalParticipantAdd").Value
    For i = 1 To ActiveWorkbook.Sheets("ADDITIONAL_IMPACT_INPUTS").Range("AddPartEst").Rows.Count
        For j = 1 To ActiveWorkbook.Sheets("ADDITIONAL_IMPACT_INPUTS").Range("AddPartEst").Columns.Count
            iRoundedSum = iRoundedSum + WorksheetFunction.Round(Range("PartShareAssum").Cells(i, j).Value * Range("TotalParticipantAdd").Value, 0)
        Next j
    Next i
    iRemainder = iPartTotal - iRoundedSum
    
    iExpectedFirstCellValue = WorksheetFunction.Round(Range("PartShareAssum").Cells(1, 1).Value * iPartTotal, 0) + iRemainder

    If Range("AddPartEst").Cells(1, 1).Value <> iExpectedFirstCellValue Then
        Range("AddPartEst").Cells(1, 1).Font.Color = vbRed
    Else
        Range("AddPartEst").Cells(1, 1).Font.Color = RGB(0, 63, 105)
    End If

End Sub
Sub AddChartSelection(sAdjustSelect As String)
    
    Dim i, iAdjustRow, iTitleRow, iFirstCol, iLastCol As Byte
    Dim TitleRange, DataRange, ChartRange As Range
    
    'Find row of required adjustment
    Range("AdditionalDescs").Select
    For i = 1 To Range("AdditionalDescs").Rows.Count
        If Range("AdditionalDescs").Cells(i, 1).Value = sAdjustSelect Then
            iAdjustRow = i
        End If
    Next i
    'Define Key row and column positions for chart data selection
    iTitleRow = Range("AdditionalDescs").Cells(1, 1).Row
    iFirstCol = Range("AdditionalDescs").Cells(i, 1).Column
    iLastCol = iFirstCol + Range("AdjustDescs").Columns.Count - 1
    
    Worksheets("ADDITIONAL_IMPACT_INPUTS").ChartObjects("AddImpactChart").Activate
    
    Set TitleRange = Sheets("ADDITIONAL_IMPACT_INPUTS").Range(Cells(iTitleRow, iFirstCol), Cells(iTitleRow, iLastCol))
    Set DataRange = Sheets("ADDITIONAL_IMPACT_INPUTS").Range(Cells(iTitleRow + iAdjustRow - 1, iFirstCol), Cells(iTitleRow + iAdjustRow - 1, iLastCol))
    Set ChartRange = Union(TitleRange, DataRange)
    
    ActiveChart.SetSourceData Source:=ChartRange
    Sheets("ADDITIONAL_IMPACT_INPUTS").Cells(iTitleRow + iAdjustRow - 1, iFirstCol + 1).Select
    
End Sub
Sub TourismTotalAdd(Optional sDay As String = "")
    If IsEmpty(Range(sDay & "TourVisitFix")) Then

        Range("SpecSport" & sDay & "VisitAdd").Value = Range("Sport" & sDay & "VisitAdd").Value * Range("Spectate" & sDay & "TourVisitEst").Value / Range(sDay & "TourVisitEst").Value
        Range("PartSport" & sDay & "VisitAdd").Value = Range("Sport" & sDay & "VisitAdd").Value * Range("Part" & sDay & "TourVisitEst").Value / Range(sDay & "TourVisitEst").Value
    ElseIf (Range(sDay & "TourVisitFix").Value = 0) Then
        Range("SpecSport" & sDay & "VisitAdd").Value = Range("Sport" & sDay & "VisitAdd").Value * Range("Spectate" & sDay & "TourVisitEst").Value / Range(sDay & "TourVisitEst").Value
        Range("PartSport" & sDay & "VisitAdd").Value = Range("Sport" & sDay & "VisitAdd").Value * Range("Part" & sDay & "TourVisitEst").Value / Range(sDay & "TourVisitEst").Value
    Else
        Range("SpecSport" & sDay & "VisitAdd").Value = Range("Sport" & sDay & "VisitAdd").Value * Range("Spectate" & sDay & "TourVisitFix").Value / Range(sDay & "TourVisitFix").Value
        Range("PartSport" & sDay & "VisitAdd").Value = Range("Sport" & sDay & "VisitAdd").Value * Range("Part" & sDay & "TourVisitFix").Value / Range(sDay & "TourVisitFix").Value
    End If
End Sub
Sub TourismAdd(Optional sDay As String = "")
    Range("Sport" & sDay & "VisitAdd").Value = Range("SpecSport" & sDay & "VisitAdd").Value + Range("PartSport" & sDay & "VisitAdd").Value
End Sub
Attribute VB_Name = "modAdjust"
Option Explicit
Option Private Module

Sub ShopGamblingAdjust()
    Range("ShopBettingAdjust").Value = Range("GambleEmpEst").Value - Range("OnlineGambleEmpFix").Value
End Sub

Sub TourismTotalAdjust(Optional sDay As String = "")
    Range("Spectate" & sDay & "TourVisitFix").Value = Range(sDay & "TourVisitFix").Value * Range("Spectate" & sDay & "TourVisitEst").Value / Range(sDay & "TourVisitEst").Value
    Range("Part" & sDay & "TourVisitFix").Value = Range(sDay & "TourVisitFix").Value * Range("Part" & sDay & "TourVisitEst").Value / Range(sDay & "TourVisitEst").Value
End Sub
Sub TourismAdjust(Optional sDay As String = "")
    Range(sDay & "TourVisitFix").Value = Range("Spectate" & sDay & "TourVisitFix").Value + Range("Part" & sDay & "TourVisitFix").Value
End Sub

Sub ChartSelection(sAdjustSelect As String)
    
    Dim i, iAdjustRow, iTitleRow, iFirstCol, iLastCol As Byte
    Dim TitleRange, DataRange, ChartRange As Range
    
    'Find row of required adjustment
    Range("AdjustDescs").Select
    For i = 1 To Range("AdjustDescs").Rows.Count
        If Range("AdjustDescs").Cells(i, 1).Value = sAdjustSelect Then
            iAdjustRow = i
        End If
    Next i
    'Define Key row and column positions for chart data selection
    iTitleRow = Range("AdjustDescs").Cells(1, 1).Row
    iFirstCol = Range("AdjustDescs").Cells(i, 1).Column
    iLastCol = iFirstCol + Range("AdjustDescs").Columns.Count - 1
    
    Worksheets("ADJUST").ChartObjects("AdjustCompChart").Activate
    
    Set DataRange = Sheets("ADJUST").Range(Cells(iTitleRow + iAdjustRow - 1, iFirstCol), Cells(iTitleRow + iAdjustRow - 1, iLastCol))
    Set ChartRange = DataRange
    ActiveChart.SetSourceData Source:=ChartRange
    Sheets("ADJUST").Cells(iTitleRow + iAdjustRow - 1, iFirstCol + 1).Select
End Sub

Sub EventCalculate(sTableTitlesRange As String, sValueField As String, sVisitField As String)
    'Function to allow unrestricted no of entries for events
    Dim iStartRow As Integer
    Dim iEndRow As Integer
    Dim iEventCount As Integer
    Dim iEventNo As Integer
    Dim iEventValue As Double
    Dim iEventVisit As Double

    iStartRow = Range(sTableTitlesRange).Row
    iEventCount = 1
    iEventValue = 0
    iEventVisit = 0
    iEventNo = 1
    'Loop down all events entered
    Do While (IsEmpty(Range(sTableTitlesRange).Offset(iEventCount).Cells(1, 1)) = False)
        'Set number of events to default
        iEventNo = 1
        If sTableTitlesRange = "EventFields" Or sTableTitlesRange = "AddEventFields" Then
            
            'Set newly defined events values to default of zero
            If IsEmpty(Range(sTableTitlesRange).Offset(iEventCount).Cells(1, 3)) Then
                Range(sTableTitlesRange).Offset(iEventCount).Cells(1, 3).Value = 0
            End If
            If IsEmpty(Range(sTableTitlesRange).Offset(iEventCount).Cells(1, 4)) Then
                    Range(sTableTitlesRange).Offset(iEventCount).Cells(1, 4).Value = 0
            End If
            iEventNo = Range(sTableTitlesRange).Offset(iEventCount).Cells(1, 4).Value
            'Set colour for field for number of events
            Range(sTableTitlesRange).Offset(iEventCount).Cells(1, 4).Interior.Color = 13434879
        End If
        'Add event value & visits to total events value & visits
        iEventValue = iEventValue + Range(sTableTitlesRange).Offset(iEventCount).Cells(1, 2).Value * Range(sTableTitlesRange).Offset(iEventCount).Cells(1, 3).Value * iEventNo
        iEventVisit = iEventVisit + Range(sTableTitlesRange).Offset(iEventCount).Cells(1, 2).Value * iEventNo
            
        'Set default for empty cells
        If IsEmpty(Range(sTableTitlesRange).Offset(iEventCount).Cells(1, 2)) Then
            Range(sTableTitlesRange).Offset(iEventCount).Cells(1, 2).Value = 0
        End If
        If IsEmpty(Range(sTableTitlesRange).Offset(iEventCount).Cells(1, 3)) Then
            Range(sTableTitlesRange).Offset(iEventCount).Cells(1, 3).Value = 0
        End If
        'Maintain distinct colour for entered events
        Range(sTableTitlesRange).Offset(iEventCount).Cells(1, 1).Interior.Color = 13434879
        Range(sTableTitlesRange).Offset(iEventCount).Cells(1, 2).Interior.Color = 13434879
        Range(sTableTitlesRange).Offset(iEventCount).Cells(1, 3).Interior.Color = 13434879
        If (sTableTitlesRange = "EventFields" Or sTableTitlesRange = "AddEventFields") Then

        End If

        iEventCount = iEventCount + 1
    Loop
    'Calculate split of day and overnight visits and directly enter estimates to the wider spending calcualtions
    Range(sValueField).Value = iEventValue
    If (Left(sTableTitlesRange, 3) <> "Add") Then
        Range(Left(sVisitField, Len(sVisitField) - 5) & "Day").Value = iEventVisit * Range("SpectateDayTourVisitEst").Value / (Range("SpectateDayTourVisitEst") + Range("SpectateTourVisitEst").Value)
        Range(Left(sVisitField, Len(sVisitField) - 5) & "Night").Value = iEventVisit * Range("SpectateTourVisitEst").Value / (Range("SpectateDayTourVisitEst") + Range("SpectateTourVisitEst").Value)
        Range("SpectateDayTourVisitFix").Value = Range("RecurrEventDay").Value + Range("OneEventDay").Value
        Range("SpectateTourVisitFix").Value = Range("RecurrEventNight").Value + Range("OneEventNight").Value
    Else
        If ((IsEmpty(Range("SpectateDayTourVisitFix").Value) = False Or IsEmpty(Range("SpectateTourVisitFix").Value) = False) And (Range("SpectateDayTourVisitFix").Value <> 0 Or Range("SpectateDayTourVisitFix").Value <> 0)) Then
            Range(Left(sVisitField, Len(sVisitField) - 5) & "Day").Value = iEventVisit * Range("SpectateDayTourVisitFix").Value / (Range("SpectateDayTourVisitFix") + Range("SpectateTourVisitFix").Value)
            Range(Left(sVisitField, Len(sVisitField) - 5) & "Night").Value = iEventVisit * Range("SpectateTourVisitFix").Value / (Range("SpectateDayTourVisitFix") + Range("SpectateTourVisitFix").Value)
        Else
            Range(Left(sVisitField, Len(sVisitField) - 5) & "Day").Value = iEventVisit * Range("SpectateDayTourVisitEst").Value / (Range("SpectateDayTourVisitEst") + Range("SpectateTourVisitEst").Value)
            Range(Left(sVisitField, Len(sVisitField) - 5) & "Night").Value = iEventVisit * Range("SpectateTourVisitEst").Value / (Range("SpectateDayTourVisitEst") + Range("SpectateTourVisitEst").Value)
        End If
        Range("SpecSportDayVisitAdd").Value = Range("AddRecurrEventDay").Value + Range("AddOneEventDay").Value
        Range("SpecSportVisitAdd").Value = Range("AddRecurrEventNight").Value + Range("AddOneEventNight").Value
    End If

End Sub

Sub EventReset()
    Worksheets("EVENTS").Range("EventResetArea").ClearContents
    Worksheets("EVENTS").Range("EventVisitReset").ClearContents
    Worksheets("EVENTS").Range("EventFields").Offset(1).Cells(1, 1).Value = "Event 1"
    Worksheets("EVENTS").Range("EventFields").Offset(1).Cells(1, 2).Value = 0
    Worksheets("EVENTS").Range("EventFields").Offset(1).Cells(1, 3).Value = 0
    Worksheets("EVENTS").Range("EventFields").Offset(1).Cells(1, 4).Value = 0
    Worksheets("EVENTS").Range("OneEventFields").Offset(1).Cells(1, 1).Value = "Event 1"
    Worksheets("EVENTS").Range("OneEventFields").Offset(1).Cells(1, 2).Value = 0
    Worksheets("EVENTS").Range("OneEventFields").Offset(1).Cells(1, 3).Value = 0
    
    Worksheets("ADDEVENTS").Range("AddEventResetArea").ClearContents
    Worksheets("ADDEVENTS").Range("AddEventVisitReset").ClearContents
    Worksheets("ADDEVENTS").Range("AddEventFields").Offset(1).Cells(1, 1).Value = "Event 1"
    Worksheets("ADDEVENTS").Range("AddEventFields").Offset(1).Cells(1, 2).Value = 0
    Worksheets("ADDEVENTS").Range("AddEventFields").Offset(1).Cells(1, 3).Value = 0
    Worksheets("ADDEVENTS").Range("AddEventFields").Offset(1).Cells(1, 4).Value = 0
    Worksheets("ADDEVENTS").Range("AddOneEventFields").Offset(1).Cells(1, 1).Value = "Event 1"
    Worksheets("ADDEVENTS").Range("AddOneEventFields").Offset(1).Cells(1, 2).Value = 0
    Worksheets("ADDEVENTS").Range("AddOneEventFields").Offset(1).Cells(1, 3).Value = 0
    
End Sub

Attribute VB_Name = "modDebugandEdit"
'modDebugandEdit
Option Explicit
'JP: Set of macros for quick debug and editing
'Allows quick changing of names of buttons across all sheets

Sub NameEditor()
    Dim i As Byte
    Dim j As Byte
    For i = 1 To ActiveWorkbook.Worksheets.Count
        For j = 1 To Worksheets(i).OLEObjects.Count
            If Worksheets(i).Name = "ADDITIONAL_IMPACT_RESULTS" Then
                If TypeName(Worksheets(i).OLEObjects(j).Object) = "CommandButton" Then
                    If (Worksheets(i).OLEObjects(j).Object.Caption = "Refine this result") Then
                        Worksheets(i).OLEObjects(j).Object.Caption = "Refine this input"
                    End If
                End If
            End If
        Next j
    Next i
    For i = 1 To ActiveWorkbook.Worksheets.Count
        For j = 1 To Worksheets(i).OLEObjects.Count
                If TypeName(Worksheets(i).OLEObjects(j).Object) = "TextBox" Then
                    If (Left(Worksheets(i).OLEObjects(j).Object.Text, Len("=DETAILED_REFINED_SNAPSHOT")) = "=DETAILED_REFINED_SNAPSHOT") Then
                        Left(Worksheets(i).OLEObjects(j).Object.Text, Len("=DETAILED_REFINED_SNAPSHOT")) = "=DETAILED_BASIC_SNAPSHOT"
                    End If
            End If
        Next j
    Next i

End Sub

Private Sub ColourButton()
Dim sObjectName As String
sObjectName = "CommandButton5"

Worksheets(ActiveSheet.Name).OLEObjects(sObjectName).Object.BackColor = RGB(98, 26, 85)
Worksheets(ActiveSheet.Name).OLEObjects(sObjectName).Object.ForeColor = RGB(255, 255, 255)

End Sub

Private Sub AllowEditing()
    Dim i As Byte
    Application.ScreenUpdating = False
    For i = 1 To ActiveWorkbook.Sheets.Count
        If Worksheets(i).Name <> "DETAILED_EMP" Then
            'Worksheets(i).Protect "cam.econ", UserInterfaceOnly:=True
            Worksheets(i).Unprotect "cam.econ"

        End If
        If i <> ActiveSheet.Index And Worksheets(i).Name <> "FAQ" Then
            Worksheets(i).Visible = True
            'Worksheets(i).Visible = True
        End If
    Next i
    Application.ScreenUpdating = True
End Sub
Private Sub ZeroValueCheck()
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    On Error GoTo ErrorHandler
    Dim i, j, iCount, iCheckCount As Integer
    iCount = 1
    iCheckCount = 0
    For i = 1 To Range("LocalAreaTypePrefix").Rows.Count
        Range("CompLocalAreaTypeSelect").Value = Range("LocalAreaType").Cells(i).Value
        For j = 1 To Range(Range("LocalAreaTypePrefix").Cells(i).Value & "Names").Rows.Count
            Range("LocalAreaComparison").Value = Range(Range("LocalAreaTypePrefix").Cells(i).Value & "Names").Cells(j)
            If Range("DebugCheckValue").Value = 1 Then
                Range("DebugZeroValues").Offset(iCount).Value = Range("LocalAuthority").Value
                iCount = iCount + 1
            End If
            iCheckCount = iCheckCount + 1
        Next j
    Next i
    Range("DebugChecksCount").Value = iCheckCount
    Worksheets("CLASSIF").Activate
    Application.ScreenUpdating = True
    Application.EnableEvents = True
CleanExit:
    Exit Sub
ErrorHandler:
  Application.ScreenUpdating = True
  Application.EnableEvents = True
  MsgBox (Err.Number & ": " & Err.Description)
  Resume CleanExit
End Sub

Private Sub SheetNames()
    Dim sMainWorkbookName As String
    Dim i As Byte
    Dim ExpSht As Workbook
    sMainWorkbookName = ActiveWorkbook.Name
    Set ExpSht = Workbooks.Add
    For i = 1 To Workbooks(sMainWorkbookName).Worksheets.Count
    Workbooks(ExpSht.Name).Worksheets(1).Cells(i, 1) = Workbooks(sMainWorkbookName).Worksheets(i).Name
    Next i
End Sub


Private Sub MultiAreaCheck()
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    On Error GoTo ErrorHandler
    Dim i As Integer, j As Integer
    Dim rngStartDataCell As Range
    Set rngStartDataCell = Range("DetailedDefaultDataExportArea").Cells(2, 1)
    With Range("DebugTableGVA")
        For j = 3 To .Columns.Count
            Worksheets("Home").LocaAreaTypeSelector.Value = .Cells(1, j)
            Worksheets("Home").LocalAuthoritySelect.Value = .Cells(2, j)
            For i = 3 To .Rows.Count
                If .Cells(i, 1) < 19 Then
                    .Cells(i, j).Value = rngStartDataCell.Offset(.Cells(i, 1), 1).Value2
                    Range("DebugTableJobs").Cells(i, j) = rngStartDataCell.Offset(.Cells(i, 1), 2).Value
                Else
                    .Cells(i, j) = rngStartDataCell.Offset(.Cells(i, 1), 3).Value2
                End If
            Next i
        Next j
    End With
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
CleanExit:
    Exit Sub
ErrorHandler:
  Application.ScreenUpdating = True
  Application.EnableEvents = True
  MsgBox (Err.Number & ": " & Err.Description)
  Resume CleanExit
    
End Sub

Private Sub FlowChartJpgExport(sLA As String)

    Dim oShape As Shape
    Dim sht As Worksheet
    Dim oExport As ChartObject
    Set sht = Worksheets("GRAPHICS_DEFAULT")
    Set oShape = sht.Shapes("FlowExport")
    oShape.CopyPicture
    Set oExport = sht.ChartObjects.Add(50, 50, oShape.Width, oShape.Height)
    With oExport.Chart
        .ChartArea.Select
        .Paste
        .Shapes(1).Placement = 2
        oExport.Width = oShape.Width + 50
        oExport.Height = oShape.Height + 50
        .Shapes(1).Left = .Shapes(1).Left + 25
        oExport.Chart.Shapes(1).Top = .Shapes(1).Top + 25
        .Export ("C:\Sport England\Model\" & sLA & ".png")
    End With
    oExport.Delete
End Sub
Private Sub AllLAJpgExport()
    Dim i As Integer
    Worksheets("Home").LocaAreaTypeSelector.Value = "Local Authority"
    
    For i = 1 To 2 'Range("LANames").Rows.Count
        Worksheets("Home").LocalAuthoritySelect.Value = Range("LANames").Cells(i)
        Call FlowChartJpgExport(Range("LANames").Cells(i))
    Next i

End Sub
Private Sub ViewReset()
    Dim i As Byte
    For i = 1 To Worksheets.Count
        Application.Goto Worksheets(i).Range("A1"), True
    Next i
End Sub
Attribute VB_Name = "modExport"
'modExport
Option Explicit
Option Private Module
'Created by JP
'ExportData: Exports specified data to either a xls or xlsx file for results
'ExportPDF: Exports the specified charts or object in the printarea to PDF

Sub ExportData(sSheetName As String, sSheetArea As String, Optional sDataType As String = "", Optional sSheetArea2 As String = "")
Attribute ExportData.VB_ProcData.VB_Invoke_Func = " \n14"

    Application.ScreenUpdating = False
    Dim FileType As Variant
    Dim ExpSht As Workbook
    Dim MainWorkbookName As String
    Dim i As Byte
    Dim j As Byte
    Dim ColumnWidth As Integer
    Dim RowWidth As Integer
    'Get Model Filename to allow switching back after creating the csv
    MainWorkbookName = ActiveWorkbook.Name
    Dim FileName, FileFormatstr  As String
    
    'Get user to browse for file path
    
    FileFormatstr = "Excel 97-2003 Workbook (*.xls), *.xls," & "Excel Workbook (*.xlsx), *.xlsx"
    '," & "CSV (Comma delimited) (*.csv), *.csv"
    FileName = Application.GetSaveAsFilename("", filefilter:=FileFormatstr, Title:="Export Results")
    
    If Right(FileName, 3) = "csv" Then
        FileType = xlCSV
    ElseIf Right(FileName, 3) = "xls" Then
        FileType = xlNormal
    ElseIf Right(FileName, 4) = "xlsx" Then
        FileType = xlOpenXMLWorkbook
    ElseIf FileName = False Then
        Exit Sub
    Else
        MsgBox ("File Type not supported. Export cancelled")
        Exit Sub
    End If
          
    'Copy Results then paste to new workbook
    Worksheets(sSheetName).Range(sSheetArea).Copy
    Set ExpSht = Workbooks.Add
    If (sDataType = "") Then
        Range("A1").PasteSpecial (xlPasteValuesAndNumberFormats)
        Range("A1").PasteSpecial (xlPasteFormats)
    Else
        ActiveSheet.Paste
    End If
    If (sSheetArea2 <> "") Then
        Application.Workbooks(MainWorkbookName).Worksheets(sSheetName).Range(sSheetArea2).Copy
        If (sDataType = "") Then
            
            Range("A1").Offset(Application.Workbooks(MainWorkbookName).Worksheets(sSheetName).Range(sSheetArea).Rows.Count).PasteSpecial (xlPasteValuesAndNumberFormats)
            Range("A1").Offset(Application.Workbooks(MainWorkbookName).Worksheets(sSheetName).Range(sSheetArea).Rows.Count).PasteSpecial (xlPasteFormats)
        Else
            Range("A1").Offset(Application.Workbooks(MainWorkbookName).Worksheets(sSheetName).Range(sSheetArea).Rows.Count).Select
            ActiveSheet.Paste
        End If
    End If
    
    
    'Add logos
    Application.Workbooks(MainWorkbookName).Worksheets("Results for Export").Shapes("Group 1").Copy
    If (sSheetArea2 <> "") Then
        Range("A1").Offset(Application.Workbooks(MainWorkbookName).Worksheets(sSheetName).Range(sSheetArea).Rows.Count + Application.Workbooks(MainWorkbookName).Worksheets(sSheetName).Range(sSheetArea2).Rows.Count + 1, 0).PasteSpecial
    Else
        Range("A1").Offset(Application.Workbooks(MainWorkbookName).Worksheets(sSheetName).Range(sSheetArea).Rows.Count + 1, 0).PasteSpecial
    End If
    'Adjust Column widths to match source data
    For i = 1 To Application.Workbooks(MainWorkbookName).Worksheets(sSheetName).Range(sSheetArea).Rows.Count
        ActiveSheet.Rows(i).RowHeight = Application.Workbooks(MainWorkbookName).Worksheets(sSheetName).Rows(i - 1 + Application.Workbooks(MainWorkbookName).Worksheets(sSheetName).Range(sSheetArea).Cells(1, 1).Row).RowHeight
    Next i
    For j = 1 To Application.Workbooks(MainWorkbookName).Worksheets(sSheetName).Range(sSheetArea).Columns.Count
        ActiveSheet.Columns(j).ColumnWidth = Application.Workbooks(MainWorkbookName).Worksheets(sSheetName).Columns(j - 1 + Application.Workbooks(MainWorkbookName).Worksheets(sSheetName).Range(sSheetArea).Cells(1, 1).Column).ColumnWidth
    Next j

    'If you cancel this dialog Exit the function
    If FileName = False Then
        Application.DisplayAlerts = False
        ExpSht.Close
        Application.DisplayAlerts = True
        Exit Sub
    End If
    'Check that file to save to is open
    For i = 1 To Application.Workbooks.Count
        If Application.Workbooks(i).FullName = FileName Then
            Application.DisplayAlerts = False
            ExpSht.Close
            Application.DisplayAlerts = True
            MsgBox ("Cannot export to file that is currently open")
            Exit Sub
        End If
    Next i
    'Save new workbook as csv, close the csv and return to the model
    Application.DisplayAlerts = False
    If Not (IsEmpty(ExpSht.LinkSources(xlExcelLinks))) Then
        ExpSht.BreakLink Name:=Application.Workbooks(MainWorkbookName).FullName, Type:=xlExcelLinks
    End If
    ExpSht.SaveAs FileName, FileType

    
    ExpSht.Close
    Application.DisplayAlerts = True
    Application.Workbooks(MainWorkbookName).Activate
    
    Application.ScreenUpdating = True
    
End Sub

Sub ExportPDF(sSheetName, iPageStart As Byte, iPageEnd As Byte)
    
    Dim MainWorkbookName As String
    Dim i As Byte
    'Get Model Filename to allow switching back after creating the csv
    MainWorkbookName = ActiveWorkbook.Name
    Dim FileName, FileFormatstr  As String
    
    'Get user to browse for file path
    FileFormatstr = "PDF Files (*.pdf), *.pdf"
    FileName = Application.GetSaveAsFilename("", filefilter:=FileFormatstr, Title:="Export to PDF")
    
    Dim ExportSht As Object
    
    
    ActiveSheet.ExportAsFixedFormat _
                Type:=xlTypePDF, _
                FileName:=FileName, _
                Quality:=xlQualityStandard, _
                IncludeDocProperties:=True, _
                IgnorePrintAreas:=False, _
                From:=iPageStart, _
                To:=iPageEnd, _
                OpenAfterPublish:=False
                
End Sub
Attribute VB_Name = "modLocalAreaChange"
Option Explicit
Option Private Module

Sub ResetUserInputs()
    'Loop through Named ranges to find fixes
    Dim i As Byte
    Dim sNamedRange As String
    For i = 1 To Application.Names.Count
        sNamedRange = Right(Application.Names(i).Name, 3)
        If (sNamedRange = "Add" Or sNamedRange = "Fix") Then
            If IsEmpty(Range(Application.Names(i).Name)) = False Then
                'Set Additional Impacts to blank
                Range(Application.Names(i).Name).Value = ""
            End If
        End If
        If (sNamedRange = "Exp") Then
            If Range(Application.Names(i).Name).Value <> 0 Then
                'Set Additional Impacts to blank
                Range(Application.Names(i).Name).Value = 0
            End If
        End If
    Next i
End Sub

Sub ChangeChartTitles(sChartPrefix As String, sSheetName As String, sLocalArea As String, Optional sType As String = "")
    Worksheets(sSheetName).Unprotect "cam.econ"
    Dim sTitlePrefix As String
    sTitlePrefix = sChartPrefix
    'Activate chart
    Worksheets(sSheetName).ChartObjects(sChartPrefix & sType & "LocalArea").Activate
    'Set new chart title
    If (sChartPrefix = "Consumption") Then
        sTitlePrefix = "Non-Participation"
    End If
    ActiveChart.ChartTitle.Text = sTitlePrefix & " GVA - " & Range(sLocalArea).Value
    Worksheets(sSheetName).Protect "cam.econ", UserInterfaceOnly:=True
End Sub

Sub AreaTypeChange(sAreaType As String, sAreatoChange As String, sWorksheetToChange As String)
    'Adjust validation to use new area list
    Dim sAreaTypePrefix As String
    Dim i As Byte
    For i = 1 To Range("LocalAreaTypePrefix").Rows.Count
        If Range("LocalAreaType").Cells(i, 1).Value = sAreaType Then
            sAreaTypePrefix = Range("LocalAreaTypePrefix").Cells(i, 1).Value
            Exit For
        End If
    Next i
    With Range(sAreatoChange)
        .Validation.Delete
        Worksheets(sWorksheetToChange).Unprotect "cam.econ"
        .Validation.Add xlValidateList, xlValidAlertStop, xlBetween, "= " & sAreaTypePrefix & "Names"
        Worksheets(sWorksheetToChange).Protect "cam.econ", UserInterfaceOnly:=True
        'Set value to first local area in list
        .Value = Range(sAreaTypePrefix & "Names").Cells(1, 1).Value
    End With
    If sWorksheetToChange = "HOME" Then
        With Worksheets(sWorksheetToChange).LocalAuthoritySelect
            .ListFillRange = sAreaTypePrefix & "Names"
            .Value = Range("LocalAuthority").Value
        End With
    End If
    If sWorksheetToChange = "COMPARISON" Then
        With Worksheets(sWorksheetToChange).LocalCompSelector
            .ListFillRange = sAreaTypePrefix & "Names"
            .Value = Range("LocalAreaComparison").Value
        End With
    End If
End Sub

Sub PrepareComaparatorData(sCurrentLocalArea As String, sCurrentLocalAreaType As String)
    
    'Run model for comparison local area without reseting user inputs
    Call AreaTypeChange(Range("CompLocalAreaTypeSelect").Value, "LocalAuthority", "Home")
    Range("LocalAuthority").Value = Range("LocalAreaComparison").Value
    'Copy default results to region comparison
    Range("DefaultDataArea").Copy
    Range("DefaultComparisonArea").PasteSpecial (xlPasteValuesAndNumberFormats)
    Range("DetailedDefaultDataArea").Copy
    Range("DetailedDefaultComparisonArea").PasteSpecial (xlPasteValuesAndNumberFormats)
    Application.CutCopyMode = False
    Application.CutCopyMode = True
    'Revert the model back to the main local area chosen
    Call AreaTypeChange(sCurrentLocalAreaType, "LocalAuthority", "Home")
    
    Range("LocalAuthority").Value = sCurrentLocalArea
    
End Sub

Attribute VB_Name = "modNavigation"
'modNavigation
Option Explicit
Option Private Module
'Created by: JP
'Set of functions for moving between sheets and hiding and unhiding relevant sections
'to the user to aid navigation and declutter the available view

Sub HideDesc()
Attribute HideDesc.VB_ProcData.VB_Invoke_Func = " \n14"

    Range("C1").Activate
    If (Selection.EntireColumn.Hidden = False) Then
        Selection.EntireColumn.Hidden = True
    Else
    ActiveSheet.Unprotect "cam.econ"
        Selection.EntireColumn.Hidden = False
    ActiveSheet.Protect "cam.econ", UserInterfaceOnly:=True
    
    End If
End Sub
Sub AdjustEntry(sCellsToReveal)
    Application.ScreenUpdating = False
    HideAllElse ("ADJUST")
    Worksheets("ADJUST").Unprotect "cam.econ"
    Worksheets("ADJUST").Rows("11:46").Hidden = True
    Worksheets("ADJUST").Rows(sCellsToReveal).Hidden = False
    Worksheets("ADJUST").Range(sCellsToReveal).Cells(2, 3).Select
    If sCellsToReveal = "28:40" Then
        Worksheets("ADJUST").Range(sCellsToReveal).Cells(3, 3).Select
    End If
    Worksheets("ADJUST").Protect "cam.econ", UserInterfaceOnly:=True
    Application.ScreenUpdating = True
End Sub

Sub AdditionalImpactEntry(sCellsToReveal)
    Application.ScreenUpdating = False
    Worksheets("ADDITIONAL_IMPACT_INPUTS").Unprotect "cam.econ"
    HideAllElse ("ADDITIONAL_IMPACT_INPUTS")
    Worksheets("ADDITIONAL_IMPACT_INPUTS").Rows("10:49").Hidden = True
    Worksheets("ADDITIONAL_IMPACT_INPUTS").Rows(sCellsToReveal).Hidden = False
    Worksheets("ADDITIONAL_IMPACT_INPUTS").Range(sCellsToReveal).Cells(2, 3).Select
    If sCellsToReveal = "30:42" Then
        Worksheets("ADDITIONAL_IMPACT_INPUTS").Range(sCellsToReveal).Cells(3, 3).Select
    End If
    Worksheets("ADDITIONAL_IMPACT_INPUTS").Protect "cam.econ", UserInterfaceOnly:=True
    Application.ScreenUpdating = True
End Sub

Sub HideAllElse(sSheetName)
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Dim i As Byte
    Worksheets(sSheetName).Visible = True
    For i = 1 To ActiveWorkbook.Sheets.Count
        If (Worksheets(i).Name <> sSheetName And Worksheets(i).Name <> "FAQ") Then
            Worksheets(i).Visible = xlVeryHidden
        End If
    Next i
    Worksheets(sSheetName).Visible = True
    Worksheets(sSheetName).Activate
    ActiveWindow.Zoom = 90
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End Sub


' InQuest injected base64 decoded content
' "jZr

INQUEST-PP=macro
