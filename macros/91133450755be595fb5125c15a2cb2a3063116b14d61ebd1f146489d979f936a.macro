Attribute VB_Name = "Module1"
Function JoinAWB(mag As String, arr As Variant) As String
    
    result = ""
    
    For Each Item In arr

    If Item.Offset(0, 0) > 0 And Item.Offset(0, 3) = mag Then _
        If Item.Offset(0, -2) > "" Then result = result & " " & Item & "-" & Item.Offset(0, 7) & " (" & Item.Offset(0, -2) & ")" Else _
            result = result & " " & Item & "-" & Item.Offset(0, 7)
            
    Next
          
    JoinAWB = result

End Function

Sub pa()
Application.ScreenUpdating = False
'Application.EnableEvents = False
'Application.DisplayAlerts = False

Sheets("PA").Select

Cells(3, 3) = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(7, 2)
Cells(2, 3) = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(9, 2)
Cells(1, 3) = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(3, 2)
Cells(4, 3) = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(13, 2)
Cells(1, 9) = Sheets("|fffd||fffd||fffd|").Cells(19, 11)
Cells(2, 9) = Sheets("|fffd||fffd||fffd|").Cells(20, 11)
Cells(3, 9) = Sheets("|fffd||fffd||fffd|").Cells(1, 3)
Cells(3, 10) = Sheets("|fffd||fffd||fffd|").Cells(2, 3)
WEEK = Fix((Now - DateSerial(Year(Now), 1, 0) + 6) / 7)

Dim AKTN As String
Rows(7).ClearContents
Rows("8:100").Delete

pos = 1
ppos = 1

Do While Sheets("|fffd||fffd||fffd|").Cells(pos + 24, 1) > 0

If Sheets("|fffd||fffd||fffd|").Cells(pos + 24, 4) > 0 Then
Rows(ppos + 6).Copy
Rows(ppos + 7).Select
ActiveSheet.Paste
Application.CutCopyMode = False

Cells(ppos + 6, 1) = WEEK '|fffd||fffd||fffd||fffd||fffd||fffd|
Cells(ppos + 6, 2) = "D" '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Cells(ppos + 6, 3) = Sheets("|fffd||fffd||fffd|").Cells(14, 4) '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
Cells(ppos + 6, 4) = Sheets("|fffd||fffd||fffd|").Cells(15, 4) '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
Cells(ppos + 6, 5) = Sheets("|fffd||fffd||fffd|").Cells(pos + 24, 7) '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
Cells(ppos + 6, 6) = Sheets("|fffd||fffd||fffd|").Cells(pos + 24, 10) '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Cells(ppos + 6, 7) = Sheets("|fffd||fffd||fffd|").Cells(pos + 24, 5) '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'If Sheets("MFT").Cells(pos + 24, 12) > "" Then AKTN = Sheets("MFT").Cells(pos + 24, 12)
'Cells(ppos + 6, 7) = Extract_Number_from_Text(AKTN) '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Cells(ppos + 6, 8) = Sheets("|fffd||fffd||fffd|").Cells(pos + 24, 6) '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'If Sheets("MFT").Cells(pos + 11, 5) > "" Then Cells(ppos + 6, 9) = Replace(Sheets("MFT").Cells(pos + 11, 5), " ", "") _
    Else Cells(ppos + 6, 9) = Replace(Cells(ppos + 5, 9), " ", "") '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| data

If InStr(UCase(Sheets("|fffd||fffd||fffd|").Cells(pos + 24, 2)), "DL") > 0 Then Cells(ppos + 6, 9) = Sheets("|fffd||fffd||fffd|").Cells(pos + 24, 2) _
Else Cells(ppos + 6, 9) = Extract_Number_from_Text(Sheets("|fffd||fffd||fffd|").Cells(pos + 24, 12))

Cells(ppos + 6, 10) = Sheets("|fffd||fffd||fffd|").Cells(pos + 24, 4) '|fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd|
Cells(ppos + 6, 11) = Sheets("|fffd||fffd||fffd|").Cells(pos + 24, 9) '|fffd||fffd||fffd|
Cells(ppos + 6, 12) = Sheets("|fffd||fffd||fffd|").Cells(pos + 24, 8) '|fffd||fffd||fffd||fffd||fffd|
Cells(ppos + 6, 13) = Sheets("|fffd||fffd||fffd|").Cells(pos + 24, 11) '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
ppos = ppos + 1
End If

pos = pos + 1
Loop

If Not Weekday(Now, vbMonday) = 6 And Cells(5, 1) = "" Then GoTo NaHren
pos = 1
AW = ThisWorkbook.Name

Do While Workbooks(AW).Worksheets("PA").Cells(pos + 6, 1) > 0
DPM = Workbooks(AW).Worksheets("PA").Cells(pos + 6, 9)
SHP = Workbooks(AW).Worksheets("PA").Cells(pos + 6, 5)
Path = "K:\ROPSMFT NEW\CrossDocks\|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| 2013\" + Format(Cells(3, 10), "MMMM YYYY") + "\"
Path2 = "K:\ROPSMFT NEW\CrossDocks\|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| 2013\" + Format(DateSerial(Year(Cells(3, 10)), Month(Cells(3, 10)), 0), "MMMM YYYY") + "\"
Path3 = "K:\ROPSMFT NEW\CrossDocks\|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 2013\DESC-MFT\"

If InStr(UCase(DPM), "DL") = 0 Then

If Not LASTAKT = Workbooks(AW).Worksheets("PA").Cells(pos + 6, 9) Then
Set coll = FilenamesCollection(Path, "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|*" & DPM & "*.xls", 1)
If coll.Count = 0 Then Set coll = FilenamesCollection(Path2, "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|*" & DPM & "*.xls", 1)
If coll.Count = 0 Then Set coll = FilenamesCollection(Path3, "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|*" & DPM & "*.xls", 1)
End If

LASTAKT = DPM

If coll.Count > 0 Then

FN = coll(1)

If Not Dir(FN) = ActiveWorkbook.Name Then
Workbooks.Open FN, False, True
Application.ScreenUpdating = False
End If

List = ""
If WorksheetIsExist("|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|") Then List = "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|" Else If WorksheetIsExist("|fffd||fffd||fffd|") Then List = "|fffd||fffd||fffd|"

apos = 1

If Sheets(List).Cells(9, 3) = "Freight AWB" Then awb = 5 Else awb = 4

With Sheets(List).Columns(awb)
    Set ff = .Find(SHP, LookIn:=xlValues)
    If Not ff Is Nothing Then If awb = 4 Then NDP = Sheets(List).Cells(ff.Row, 2) Else NDP = Sheets(List).Cells(ff.Row, 3)
End With

If Not LASTAKT = Workbooks(AW).Worksheets("PA").Cells(pos + 7, 9) Then
Application.DisplayAlerts = False
ActiveWorkbook.Close
Application.DisplayAlerts = True
End If

If Not NDP = "" Then Workbooks(AW).Worksheets("PA").Cells(pos + 6, 9) = NDP

Else
Workbooks(AW).Worksheets("PA").Cells(pos + 6, 9) = "|fffd||fffd||fffd| |fffd||fffd|"
End If

End If

pos = pos + 1
Loop

NaHren:
Application.EnableEvents = True
Application.DisplayAlerts = True
Application.ScreenUpdating = True

End Sub

Function Extract_Number_from_Text(sWord As String, Optional Metod As Integer)

    Dim sSymbol As String, sInsertWord As String
    Dim i As Integer
    Dim digis As Boolean
    
    digis = False
    
    If sWord = "" Then Extract_Number_from_Text = "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|!": Exit Function
    sInsertWord = ""
    sSymbol = ""
    For i = 1 To Len(sWord)
        sSymbol = Mid(sWord, i, 1)
        
        If Metod = 1 Then
            If Not LCase(sSymbol) Like "*[0-9]*" Then
                If sSymbol = "," Or sSymbol = "." Or sSymbol = " " Then
                    If Mid(sWord, i - 1, 1) Like "*[0-9]*" And Mid(sWord, i + 1, 1) Like "*[0-9]*" Then
                        sSymbol = ""
                    End If
                End If
                sInsertWord = sInsertWord & sSymbol
            End If
        Else
            If LCase(sSymbol) Like "*[0-9]*" Then
'                If LCase(sSymbol) Like "*[.,]*" Then
'                    If Not Mid(sWord, i - 1, 1) Like "*[0-9]*" Or Not Mid(sWord, i + 1, 1) Like "*[0-9]*" Then
'                        sSymbol = ""
'                    End If
'                End If
                digis = True
                sInsertWord = sInsertWord & sSymbol
            Else
            If digis = True Then Exit For
            
            End If
        End If
    Next i
    If sInsertWord = "" Then sInsertWord = sWord
    Extract_Number_from_Text = sInsertWord
End Function

Function FileExist(filename As String) As Boolean
    On Error Resume Next
    FileExist = Dir$(filename) <> ""
    If Err.Number <> 0 Then FileExist = False
    On Error GoTo 0
End Function

Function SheetExist(filename As String) As Boolean
    On Error Resume Next
    FileExist = Dir$(filename) <> ""
    If Err.Number <> 0 Then FileExist = False
    On Error GoTo 0
End Function

Function FilenamesCollection(ByVal FolderPath As String, Optional ByVal Mask As String = "", _
                             Optional ByVal SearchDeep As Long = 999) As Collection
   Set FilenamesCollection = New Collection
   Set FSO = CreateObject("Scripting.FileSystemObject")
   GetAllFileNamesUsingFSO FolderPath, Mask, FSO, FilenamesCollection, SearchDeep
   Set FSO = Nothing: Application.StatusBar = False
End Function

Function GetAllFileNamesUsingFSO(ByVal FolderPath As String, ByVal Mask As String, ByRef FSO, _
                                 ByRef FileNamesColl As Collection, ByVal SearchDeep As Long)
    On Error Resume Next: Set curfold = FSO.GetFolder(FolderPath)
    If Not curfold Is Nothing Then

        For Each fil In curfold.Files
           If fil.Name Like "*" & Mask Then FileNamesColl.Add fil.Path
        Next
        SearchDeep = SearchDeep - 1
       If SearchDeep Then
           For Each sfol In curfold.SubFolders
               GetAllFileNamesUsingFSO sfol.Path, Mask, FSO, FileNamesColl, SearchDeep
            Next
        End If
        Set fil = Nothing: Set curfold = Nothing
   End If
End Function

Private Function WorksheetIsExist(iName$) As Boolean
    Dim iList As Worksheet
    For Each iList In Worksheets
        If iList.Name = iName$ Then
           WorksheetIsExist = True
           Exit Function
        End If
    Next
    WorksheetIsExist = False
End Function

Attribute VB_Name = "|fffd||fffd||fffd||fffd|1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()

[c7].Validation.Delete

Dim x As Range: Set x = Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Range("b15")

On Error Resume Next: Dim coll As New Collection, txt$
    While Not (x.Value = "" And x.Offset(1, 0).Value = "")
        txt$ = x: coll.Add txt$, txt$
        Set x = x.Offset(1, 0)
    Wend
    newarr = ""
    For i = 1 To coll.Count: newarr = newarr + coll(i) + ",": Next
    
[c7].Validation.Add Type:=xlValidateList, Formula1:=newarr

End Sub

Sub akt()

If Range("C1") = 0 Then
MsgBox "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|/|fffd||fffd||fffd|!"
GoTo ends
End If

If Not Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Range("H15") > 0 Then
MsgBox "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
GoTo ends
End If

Application.ScreenUpdating = False

pp = 0

While Not Range("A25").Offset(pp, 0) = ""
pp = pp + 1
Wend

If pp > 1 Then Rows("26:" & (pp + 24)).Delete

p = 0
While Sheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Range("H15").Offset(p, 0) <> ""
p = p + 1
Wend

If p > 1 Then
p = p - 1
Rows(25).Select
Selection.Copy
Rows("26:" & (p + 25)).Select
Selection.Insert Shift:=xlDown
Rows("25:" & (p + 25)).EntireRow.AutoFit
End If

Application.CutCopyMode = False
Range("C7").Select


    Sheets("|fffd||fffd||fffd|").Activate
    FNa = "K:\ROPSMFT NEW\CrossDocks\|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| " & Year(Date) & "\" _
        & Format(Date, "MMMM ") & Year(Date)

     If Len(Dir(FNa, vbDirectory)) = 0 Then MkDir FNa
 
     FNa = FNa & "\" & "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| L " & Sheets("|fffd||fffd||fffd|").Range("C1") & ".xlsm"

     'ActiveWorkbook.SaveAs filename:=FNa, FileFormat:=xlNormal, Password:="", WriteResPassword:="", _
        ReadOnlyRecommended:=False, CreateBackup:=False
        
    ActiveWorkbook.SaveAs filename:=FNa, FileFormat:=xlOpenXMLWorkbookMacroEnabled, Password:="", WriteResPassword:="", _
        ReadOnlyRecommended:=False, CreateBackup:=False

Application.ScreenUpdating = True

ends:

End Sub

Attribute VB_Name = "|fffd||fffd||fffd||fffd|4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True







Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
If Not Environ("USERDOMAIN") = "PRG-DC" Then ThisWorkbook.Saved = True: ThisWorkbook.Close
Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic
End Sub

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)

On Error Resume Next
pth$ = "\\2.196.27.242\CSG_Backup\"
For Each x In [awb]: If Not Trim(x) = "" And Len(Trim(x)) = 14 Then If Dir(pth$ & x & ".out") = "" And Not Trim([truck]) = "" Then _
    Open pth$ & UCase(Trim(x)) & ".out" For Append As #1: Print #1, [pd] & ";" & [ttr] & ";" & [truck] & ";" & [fio]: Close #1
Next x
On Error GoTo 0

End Sub



INQUEST-PP=macro
