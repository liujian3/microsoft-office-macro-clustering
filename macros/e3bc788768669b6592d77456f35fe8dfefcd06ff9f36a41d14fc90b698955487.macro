Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "WebForm_Submit"

Option Explicit

' If you remove the comment markers from the following code, only the cells
' that you specified as input cells in the Web Form Wizard will be selectable
' when the user opens the form.  This protects the form from users attempting
' to delete or change objects or cells on the form.  See the help topic on
' EnableSelection for additional information.
'Sub Auto_Open()
'    With ThisWorkbook.ActiveSheet
'        .EnableSelection = xlUnlockedCells
'        .Protect DrawingObjects:=True, Contents:=True, UserInterfaceOnly:=True
'    End With
'End Sub

Sub SubmitInfo()
    Dim aControl As Variant
    Dim MyArray()
    Dim i, j, UBoundaControl, UBoundTestaControl As Integer
    Dim sInfoToSubmit, sURL As String
    Dim sThisField As String
    Dim fDoneFirst As Boolean
    Dim iListIndex As Integer
    Dim Wks As Worksheet
    
    ' Check if there is some hidden name if not quit it
    On Error Resume Next
        Set Wks = ThisWorkbook.ActiveSheet
        sURL = Evaluate(Wks.Names("WebForm_URLOfIDC").Value)
    On Error GoTo 0
    
    If IsEmpty(sURL) Then GoTo SheetDamaged

    On Error GoTo SheetDamaged
    aControl = Evaluate(Wks.Name & "!WebForm_Control")
    
    On Error Resume Next
        UBoundTestaControl = UBound(aControl, 2)
    On Error GoTo 0
    
    If UBoundTestaControl = 0 Then
        UBoundaControl = 1
    Else
        UBoundaControl = UBound(aControl, 1)
    End If
    
    On Error GoTo SheetDamaged
    ReDim MyArray(UBoundaControl, 3)
    For j = LBound(aControl, 1) To UBoundaControl
        If UBoundTestaControl = 0 Then
            MyArray(j, 1) = aControl(1)
            MyArray(j, 2) = aControl(2)
        Else
            MyArray(j, 1) = aControl(j, 1)
            MyArray(j, 2) = aControl(j, 2)
        End If
        
        Select Case TypeName(Evaluate(MyArray(j, 1)))
            Case "Range"
                MyArray(j, 3) = Wks.Range(MyArray(j, 1)).Value
                If Len(MyArray(j, 3)) > 249 Then GoTo StringTooLong
            Case "ListBox"
                iListIndex = Wks.DrawingObjects(MyArray(j, 1)).ListIndex
                If iListIndex <> 0 Then
                    MyArray(j, 3) = Wks.DrawingObjects(MyArray(j, 1)) _
                    .List(Wks.DrawingObjects(MyArray(j, 1)).ListIndex)
                Else
                    MyArray(j, 3) = ""
                End If
            Case "DropDown"
                iListIndex = Wks.DrawingObjects(MyArray(j, 1)).ListIndex
                If iListIndex <> 0 Then
                    MyArray(j, 3) = Wks.DrawingObjects(MyArray(j, 1)) _
                    .List(Wks.DrawingObjects(MyArray(j, 1)).ListIndex)
                Else
                    MyArray(j, 3) = ""
                End If
            Case "CheckBox"
                If Wks.DrawingObjects(MyArray(j, 1)).Value = 1 Then
                    MyArray(j, 3) = "on"
                Else
                    MyArray(j, 3) = "off"
                End If
            Case "OptionButton"
                If Wks.DrawingObjects(MyArray(j, 1)).Value = 1 Then MyArray(j, 3) = MyArray(j, 1)
            Case Else
                MyArray(j, 3) = Wks.DrawingObjects(MyArray(j, 1)).Value
        End Select
        Next j

    
    fDoneFirst = False
    sInfoToSubmit = ""
    For j = LBound(aControl, 1) To UBoundaControl
        If Len(CStr(MyArray(j, 3))) > 0 Then
            sThisField = URLEncodeString(CStr(MyArray(j, 2))) & "=" & URLEncodeString(CStr(MyArray(j, 3)))
            
            If fDoneFirst Then
                sInfoToSubmit = sInfoToSubmit & "&" & sThisField
            Else
                sInfoToSubmit = sThisField
                fDoneFirst = True
            End If
        End If
    Next j
    
    sInfoToSubmit = sURL & "?" & sInfoToSubmit
    
    On Error GoTo BadURLOrSheetDamaged
        With ThisWorkbook
            .Saved = True
            .FollowHyperlink Address:=sInfoToSubmit
        End With
    On Error GoTo 0
    
    
    Exit Sub
    
StringTooLong:
    MsgBox "One or more responses are too long. To continue, shorten any response than is more than 249 characters. No information has been submitted."
    Exit Sub
    
SheetDamaged:
    MsgBox "This form has been modified or damaged. No information has been submitted. Please report this problem to the administrator of the form."
    Exit Sub
    
BadURLOrSheetDamaged:
    MsgBox "No information has been submitted. The reason might be one of the following:" & _
        Chr(13) & "* One or more files used in this process seems to have been damaged." & _
        Chr(13) & "* The URL address which is saved in a defined name in this worksheet might be wrong." & _
        Chr(13) & Chr(13) & "Please contact the administrator of this file."
    Exit Sub
End Sub

Function URLEncodeString(ByVal Sin As String) As String
    Dim sOut As String
    Dim iLen As Integer
    Dim i As Integer
    Dim c As Integer
    
    iLen = Len(Sin)
    For i = 1 To iLen
        c = Asc(Mid(Sin, i, 1))
        Select Case c
        Case 97 To 122, 65 To 90, 48 To 57, 46, 95, 45       ' a to z, A to Z, 0 to 9, <period>, <underscore>, <minus>
            sOut = sOut & Chr(c)
            
        Case 32             ' space
            sOut = sOut & "+"
            
        Case Else
            sOut = sOut & MakeHexSubstitution(c)
        End Select
    Next
    URLEncodeString = sOut
End Function

Function MakeHexSubstitution(c As Integer) As String
    Dim sResult As String
    
    sResult = Hex(c)
    If Len(sResult) < 2 Then
        sResult = "0" & sResult
    End If
    MakeHexSubstitution = "%" & sResult
End Function




INQUEST-PP=macro
