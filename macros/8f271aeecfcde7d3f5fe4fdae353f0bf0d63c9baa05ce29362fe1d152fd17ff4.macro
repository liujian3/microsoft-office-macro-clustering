Attribute VB_Name = "Module1"
' Macro1 Macro
' Macro recorded 3.8.1997 by Johnny Sundell
'
'
Sub Auto_Open()
Attribute Auto_Open.VB_ProcData.VB_Invoke_Func = " \n14"
'Application.Cells(6, 8).Value = ActiveWorkbook.Name
'Application.ScreenUpdating = False
'Application.DisplayAlerts = False
End Sub
'
Function FSheet(Arg1 As String)
    On Error GoTo ErrHandler1
    Found = False   ' Initialize variable.
    'On Error Resume Next
    For Each Worksheet In Worksheets   ' Iterate through each element.
        If Worksheet.Name = Arg1 Then ' If Text equals "Hello".
            Found = True    ' Set Found to True.
            Exit For    ' Exit loop.
        End If
    Next
    FSheet = Found
Exit Function
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Function
'
Sub GetNextVisible(Arg1 As String, Arg2 As String, NewName1 As String, NewName2 As String)
    On Error GoTo ErrHandler1
    NewName1 = ""
    NewName2 = ""
    For Each Worksheet In Worksheets   ' Iterate through each element.
        If Worksheet.Visible = True Then
            If InStr(Worksheet.Name, ".") > 0 Then
                If Trim(Arg2) = "1" Then 'tech data sheet
                    If Val(Left(Worksheet.Name, InStr(Worksheet.Name, "."))) >= Val(Arg1) And Val(Right(Worksheet.Name, InStrB(Worksheet.Name, "."))) > 0 Then
                        NewName1 = Left(Worksheet.Name, InStr(Worksheet.Name, ".") - 1)
                        NewName2 = "1"
                        Exit For
                    ElseIf Val(Left(Worksheet.Name, InStr(Worksheet.Name, "."))) >= Val(Arg1) And Right(Worksheet.Name, InStrB(Worksheet.Name, ".")) = "Cou" Then
                        NewName1 = Left(Worksheet.Name, InStr(Worksheet.Name, ".") - 1)
                        NewName2 = "Cou"
                        Exit For
                    ElseIf Val(Left(Worksheet.Name, InStr(Worksheet.Name, "."))) >= Val(Arg1) And Right(Worksheet.Name, InStrB(Worksheet.Name, ".")) = "Eq" Then
                        NewName1 = Left(Worksheet.Name, InStr(Worksheet.Name, ".") - 1)
                        NewName2 = "Eq"
                        Exit For
                    End If
                ElseIf Trim(Arg2) = "2" Or Trim(Arg2) = "2Hi" Or Trim(Arg2) = "2Lo" Then  'LoadCurve
                    If Worksheet.Name = Trim(Arg1) & ".1" Then
                        NewName1 = Trim(Arg1)
                        NewName2 = "1"
                        Exit For
                    End If
                ElseIf Trim(Arg2) = "3" Then 'StartingCurve
                    If Worksheet.Name = Trim(Arg1) & ".1" Then
                        NewName1 = Trim(Arg1)
                        NewName2 = "1"
                    ElseIf Worksheet.Name = Trim(Arg1) & ".2" Or Worksheet.Name = Trim(Arg1) & ".2Hi" Then 'Or Worksheet.Name = Trim(Arg1) & ".2Lo"
                        NewName1 = Trim(Arg1)
                        NewName2 = Right(Worksheet.Name, Len(Worksheet.Name) - InStr(Worksheet.Name, "."))
                        Exit For
                    End If
                ElseIf Trim(Arg2) = "4" Then 'StartingCurve
                    If Worksheet.Name = Trim(Arg1) & ".1" Then
                        NewName1 = Trim(Arg1)
                        NewName2 = "1"
                    ElseIf Worksheet.Name = Trim(Arg1) & ".2" Or Worksheet.Name = Trim(Arg1) & ".2Hi" Then 'Or Worksheet.Name = Trim(Arg1) & ".2Lo"
                        NewName1 = Trim(Arg1)
                        NewName2 = Right(Worksheet.Name, Len(Worksheet.Name) - InStr(Worksheet.Name, "."))
                        Exit For
                    End If
                ElseIf Trim(Arg2) = "5" Then 'StartingCurve
                    If Worksheet.Name = Trim(Arg1) & ".1" Then
                        NewName1 = Trim(Arg1)
                        NewName2 = "1"
                    ElseIf Worksheet.Name = Trim(Arg1) & ".2" Or Worksheet.Name = Trim(Arg1) & ".2Hi" Then 'Or Worksheet.Name = Trim(Arg1) & ".2Lo"
                        NewName1 = Trim(Arg1)
                        NewName2 = Right(Worksheet.Name, Len(Worksheet.Name) - InStr(Worksheet.Name, "."))
                        Exit For
                    End If
                ElseIf Trim(Arg2) = "Eq" Then 'Eq
                    If Worksheet.Name = Trim(Arg1) & ".1" Then
                        NewName1 = Trim(Arg1)
                        NewName2 = "1"
                    ElseIf Worksheet.Name = Trim(Arg1) & ".2" Or Worksheet.Name = Trim(Arg1) = ".2Hi" Or Worksheet.Name = Trim(Arg1) = ".2Lo" Then
                        NewName1 = Trim(Arg1)
                        NewName2 = "2"
                    ElseIf Worksheet.Name = Trim(Arg1) & ".3" Then
                        NewName1 = Trim(Arg1)
                        NewName2 = "3"
                        Exit For
                    End If
                ElseIf Trim(Arg2) = "Cou" Then 'Cou
                    If Worksheet.Name = Trim(Arg1) & ".1" Then
                        NewName1 = Trim(Arg1)
                        NewName2 = "1"
                    ElseIf Worksheet.Name = Trim(Arg1) & ".2" Or Worksheet.Name = Trim(Arg1) = ".2Hi" Or Worksheet.Name = Trim(Arg1) = ".2Lo" Then
                        NewName1 = Trim(Arg1)
                        NewName2 = "2"
                    ElseIf Worksheet.Name = Trim(Arg1) & ".3" Then
                        NewName1 = Trim(Arg1)
                        NewName2 = "3"
                        Exit For
                    End If
                End If
            End If
        End If
    Next
    
    NewName1 = "12312312"
    NewName2 = "343534"
Exit Sub
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Sub

Function ReturnIndex(Arg1 As String)
Attribute ReturnIndex.VB_ProcData.VB_Invoke_Func = " \n14"
    On Error GoTo ErrHandler1
    Found = False   ' Initialize variable.
    'On Error Resume Next
    For Each Worksheet In Worksheets   ' Iterate through each element.
        If Worksheet.Name = Arg1 Then ' If Text equals "Hello".
            Found = True    ' Set Found to True.
            Exit For    ' Exit loop.
        End If
    Next
    ReturnIndex = Worksheet.Index
Exit Function
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Function

Function ReturnHidden(Arg1 As String)
Attribute ReturnHidden.VB_ProcData.VB_Invoke_Func = " \n14"
    On Error GoTo ErrHandler1
    Found = False   ' Initialize variable.
    'On Error Resume Next
    Count = 0
    For Each Worksheet In Worksheets   ' Iterate through each element.
        If Worksheet.Visible = False Then
            Count = Count + 1
        End If
        If Worksheet.Name = Arg1 Then ' If Text equals "Hello".
            Found = True    ' Set Found to True.
            Exit For    ' Exit loop.
        End If
    Next
    ReturnHidden = Count
Exit Function
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Function

Function ReturnCatNbr()
Attribute ReturnCatNbr.VB_ProcData.VB_Invoke_Func = " \n14"
    On Error GoTo ErrHandler1
    Count = 0
    'On Error Resume Next
    For Each Worksheet In Worksheets   ' Iterate through each element.
        If InStr(Worksheet.Name, "Cat") > 0 Then
            Count = Count + 1
        End If
    Next
    ReturnCatNbr = Count
Exit Function
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Function
'---------------------
Sub StartingCurveFormat(RSSelectedOldPos As Integer, nsteps As Integer, STARTINGTIME As Boolean, NotAllZero2 As Boolean, NotAllZero3 As Boolean, NotAllZero4 As Boolean, NotAllZero5 As Boolean, NotAllZero6 As Boolean, MaxCurrent As Single, Speed1or2 As Integer, Standard As String)
'---------------------
    On Error GoTo ErrHandler1
    'On Error Resume Next
    Dim MaximumScaleY As Single
    Dim Count As Integer
    Dim SeriesCounter As Integer
    Dim Version8 As Integer
        On Error Resume Next
        Application.Sheets(RSSelectedOldPos & ".3").ChartObjects(1).Activate
        Application.Sheets(RSSelectedOldPos & ".3").ChartObjects(1).Select
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(1).Delete
        Next Count
        SeriesCounter = 0
        If NotAllZero2 And STARTINGTIME Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".3").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("U1:U" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 30
                .Weight = xlMedium
                .LineStyle = 1
            End With
        End If
        If NotAllZero3 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".3").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("V1:V" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 5
                .Weight = xlMedium
                .LineStyle = 1
            End With
            On Error Resume Next
            Application.Sheets(RSSelectedOldPos & ".3").ChartObjects(1).Chart.ChartTitle.Delete
            On Error GoTo 0
        End If
    
        If NotAllZero4 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".3").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("W1:W" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("Z2:Z" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 3
                .Weight = 2
                .LineStyle = 1
            End With
        End If
        If NotAllZero5 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".3").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("X1:X" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 2
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 13
                .Weight = xlMedium
                .LineStyle = -4118
            End With
        End If
        If NotAllZero6 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".3").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("Y1:Y" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("Z2:Z" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 2
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 10
                .Weight = 2
                .LineStyle = -4118 '5
            End With
        End If
        
        If Application.ActiveChart.Axes(1).HasTitle = False Then
            Application.ActiveChart.Axes(1).HasTitle = True
        End If
'        If Standard = "NEMA" Then
'            Application.ActiveChart.Axes(1).AxisTitle.Characters.Text = "Speed [rpm]"
'        Else
'            Application.ActiveChart.Axes(1).AxisTitle.Characters.Text = "Speed [r/min]"
'        End If
        '
        Application.ActiveChart.Axes(1).MajorUnit = 250
        Application.ActiveChart.Axes(1).MinorUnit = 50
        Application.ActiveChart.Axes(1).MinorTickMark = xlTickMarkInside
        '
        If Application.ActiveChart.Axes(2).HasTitle = False Then
            Application.ActiveChart.Axes(2).HasTitle = True
        End If
'        If Standard = "NEMA" Then
'            Application.ActiveChart.Axes(2).AxisTitle.Characters.Text = "Torque/Tn"
'        Else
'            Application.ActiveChart.Axes(2).AxisTitle.Characters.Text = "Ts/Tn"
'        End If

        Application.ActiveChart.Axes(2).MaximumScaleIsAuto = True
        MaximumScaleY = Int(Application.ActiveChart.Axes(xlValue).MaximumScale) + 1
        If MaxCurrent > MaximumScaleY Then
            'MaximumScaleY = Int((MaxCurrent * 0.5)) + 1
            MaximumScaleY = Int(MaxCurrent + 2) * 0.5
        End If
        Application.ActiveChart.Axes(2).MinimumScale = 0
        Application.ActiveChart.Axes(2, 2).MinimumScale = 0
        Application.ActiveChart.Axes(2).MinorTickMark = xlTickMarkInside
        Application.ActiveChart.Axes(2).MaximumScale = MaximumScaleY
        Application.ActiveChart.Axes(2, 2).MaximumScale = Application.ActiveChart.Axes(2).MaximumScale * 2
     
        If Application.ActiveChart.Axes(2, 2).HasTitle = False Then
            Application.ActiveChart.Axes(2, 2).HasTitle = True
        End If
'        If Standard = "NEMA" Then
'            Application.ActiveChart.Axes(2, 2).AxisTitle.Characters.Text = "Amps/In"
'        Else
'            Application.ActiveChart.Axes(2, 2).AxisTitle.Characters.Text = "Is/In"
'        End If
        Application.ActiveChart.Axes(2, 2).MinorTickMark = xlTickMarkInside
        
        Application.ActiveChart.PlotArea.Interior.ColorIndex = 2
       
        Application.Sheets(RSSelectedOldPos & ".3").ChartObjects(1).Activate
        'Application.Sheets(RSSelectedOldPos & ".3").ChartObjects("Chart 4").Chart.PlotArea.Height = 302
        'Application.ActiveChart.PlotArea.Height = 304
        'Application.Sheets(RSSelectedOldPos & ".3").ChartObjects(1).PlotArea.Height = 300

        If Application.ActiveChart.Axes.Count >= 2 Then
            If Val(Application.Version) >= 15 Then ' Excel 365
                Application.ActiveChart.Axes(2).TickLabels.NumberFormat = "General" 'JS2014-06
            Else
                Application.ActiveChart.Axes(2).TickLabels.NumberFormat = "0.0"
            End If
        End If
        'Application.ActiveChart.Axes(2).TickLabels.NumberFormat = "General"
        'Application.ActiveChart.Axes(2).MajorUnit = 0.25
        
        'ActiveChart.Axes(xlValue).MajorGridlines.Select
        'ActiveChart.PlotArea.Select
        If Val(Application.Version) >= 8 Then
            Version8 = 0
        Else
            Version8 = 15
        End If
        ActiveChart.Legend.Height = 32
        ActiveChart.Legend.Top = 370
        ActiveChart.Legend.Left = 24 + Version8
        ActiveChart.Legend.Width = 390 - Version8
        ActiveChart.Legend.Font.Size = 9 '2004
       
        ActiveChart.PlotArea.Left = 15
        ActiveChart.PlotArea.Width = 400 + Version8
        ActiveChart.PlotArea.Top = 3
        ActiveChart.PlotArea.Height = (ActiveChart.Legend.Top - (50 - (Version8)))
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(Count).Smooth = True
        Next Count
Exit Sub
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Sub
'---------------------
Sub StartingCurveFormatCS(RSSelectedOldPos As Integer, nsteps As Integer, STARTINGTIME As Boolean, NotAllZero2 As Boolean, NotAllZero3 As Boolean, NotAllZero4 As Boolean, NotAllZero5 As Boolean, NotAllZero6 As Boolean, MaxCurrent As Single, Speed1or2 As Integer, Standard As String)
'---------------------
    On Error GoTo ErrHandler1
    'On Error Resume Next
    Dim MaximumScaleY As Single
    Dim Count As Integer
    Dim SeriesCounter As Integer
    Dim Version8 As Integer
    On Error Resume Next
    Application.Sheets(RSSelectedOldPos & ".4").ChartObjects(1).Activate
    Application.Sheets(RSSelectedOldPos & ".4").ChartObjects(1).Select
    For Count = 1 To Application.ActiveChart.SeriesCollection.Count
        Application.ActiveChart.SeriesCollection(1).Delete
    Next Count
    SeriesCounter = 0
    If NotAllZero2 And STARTINGTIME Then
        SeriesCounter = SeriesCounter + 1
        Application.Sheets(RSSelectedOldPos & ".4").Activate
        Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("U1:U" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
        Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
        Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
        Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
        Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False
        With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
            .ColorIndex = 3
            .Weight = xlMedium
            .LineStyle = 1
        End With
    'End If
    'If NotAllZero3 Then
        SeriesCounter = SeriesCounter + 1
        Application.Sheets(RSSelectedOldPos & ".4").Activate
        Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("V1:V" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
        Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
        Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
        Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 2
        Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False
        With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
            .ColorIndex = 5
            .Weight = xlMedium
            .LineStyle = 1
        End With
        
        
        If Speed1or2 = 2 Then
        
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".4").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("X1:X" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("W2:W" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 10
                .Weight = xlMedium
                .LineStyle = 1
            End With
            'End If
            'If NotAllZero3 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".4").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("Y1:Y" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("W2:W" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 2
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 13
                .Weight = xlMedium
                .LineStyle = 1
            End With
        
        End If
        
        On Error Resume Next
        Application.Sheets(RSSelectedOldPos & ".4").ChartObjects(1).Chart.ChartTitle.Delete
        On Error GoTo 0
        'End If
    
        If Application.ActiveChart.Axes.Count >= 1 Then
            If Application.ActiveChart.Axes(1).HasTitle = False Then
                Application.ActiveChart.Axes(1).HasTitle = True
            End If
            '
            Application.ActiveChart.Axes(1).MajorUnit = 10
            Application.ActiveChart.Axes(1).MinorUnit = 1
            
            Application.ActiveChart.Axes(1).MajorUnitIsAuto = True
            Application.ActiveChart.Axes(1).MinorUnitIsAuto = True
        
            Application.ActiveChart.Axes(1).MinorTickMark = xlTickMarkInside
        End If
        If Application.ActiveChart.Axes.Count >= 2 Then
            Application.ActiveChart.Axes(2, 2).MinimumScale = 0
            Application.ActiveChart.Axes(2, 2).MaximumScaleIsAuto = True
            
            Application.ActiveChart.Axes(2, 2).MajorUnitIsAuto = True
            Application.ActiveChart.Axes(2, 2).MinorUnitIsAuto = True
       
            If Application.ActiveChart.Axes(2, 2).HasTitle = False Then
                Application.ActiveChart.Axes(2, 2).HasTitle = True
            End If
            Application.ActiveChart.Axes(2, 2).MinorTickMark = xlTickMarkInside
            
            Application.ActiveChart.PlotArea.Interior.ColorIndex = 2
        
            Application.Sheets(RSSelectedOldPos & ".4").ChartObjects(1).Activate
        End If
    '        If Application.ActiveChart.Axes.Count >= 2 Then
    '            If Val(Application.Version) >= 15 Then ' Excel 365
    '                Application.ActiveChart.Axes(2).TickLabels.NumberFormat = "General" 'JS2014-06
    '            Else
    '                Application.ActiveChart.Axes(2).TickLabels.NumberFormat = "0.0"
    '            End If
    '        End If
        If Val(Application.Version) >= 8 Then
            Version8 = 0
        Else
            Version8 = 15
        End If
        ActiveChart.Legend.Height = 32
        ActiveChart.Legend.Top = 370
        ActiveChart.Legend.Left = 24 + Version8
        ActiveChart.Legend.Width = 390 - Version8
        ActiveChart.Legend.Font.Size = 9 '2004
       
        ActiveChart.PlotArea.Left = 15
        ActiveChart.PlotArea.Width = 400 + Version8
        ActiveChart.PlotArea.Top = 3
        ActiveChart.PlotArea.Height = (ActiveChart.Legend.Top - (50 - (Version8)))
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(Count).Smooth = True
        Next Count
    End If
Exit Sub
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Sub
'---------------------
Sub StartingCurveFormatTW(RSSelectedOldPos As Integer, nsteps As Integer, STARTINGTIME As Boolean, NotAllZero2 As Boolean, NotAllZero3 As Boolean, AdeptIsUsed As Boolean, nsteps2 As Integer, nsteps3 As Integer, MaxCurrent As Single, Speed1or2 As Integer, Standard As String)
'---------------------
    On Error GoTo ErrHandler1
    'On Error Resume Next
    Dim MaximumScaleY As Single
    Dim Count As Integer
    Dim SeriesCounter As Integer
    Dim Version8 As Integer
    On Error Resume Next
    Application.Sheets(RSSelectedOldPos & ".5").ChartObjects(1).Activate
    Application.Sheets(RSSelectedOldPos & ".5").ChartObjects(1).Select
    For Count = 1 To Application.ActiveChart.SeriesCollection.Count
        Application.ActiveChart.SeriesCollection(1).Delete
    Next Count
    SeriesCounter = 0
    If NotAllZero2 Then
        Application.Sheets(RSSelectedOldPos & ".5").Activate
        If Application.Range("V2").Value > 0 Or Application.Range("V5").Value > 0 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".5").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("V1:V" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 30
                .Weight = xlMedium
                .LineStyle = 1
            End With
        End If
        '
        If Application.Range("W2").Value > 0 Or Application.Range("W5").Value > 0 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".5").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("W1:W" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("U2:U" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 5
                .Weight = xlMedium
                .LineStyle = 1
            End With
        End If
        'If Speed1or2 = 2 Then
        If Application.Range("X2").Value > 0 Or Application.Range("X5").Value > 0 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".5").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("Z1:Z" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("X2:X" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 10
                .Weight = xlMedium
                .LineStyle = 1
            End With
        End If
            'If NotAllZero3 Then
        If Application.Range("Y2").Value > 0 Or Application.Range("Y5").Value > 0 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".5").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("AA1:AA" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("Y2:Y" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 8
                .Weight = xlMedium
                .LineStyle = 1
            End With
        End If
        '
        If Application.Range("AB2").Value > 0 Or Application.Range("AB5").Value > 0 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".5").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("AC1:AC" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("AB2:AB" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 7
                .Weight = xlMedium
                .LineStyle = 1
            End With
        End If
            '
        If Application.Range("AD2").Value > 0 Or Application.Range("AD5").Value > 0 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".5").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("AE1:AE" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("AD2:AD" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 21
                .Weight = xlMedium
                .LineStyle = 1
            End With
        End If
        If SeriesCounter > 0 Then
            On Error Resume Next
            Application.Sheets(RSSelectedOldPos & ".5").ChartObjects(1).Chart.ChartTitle.Delete
            On Error GoTo 0
            'End If
        
            If Application.ActiveChart.Axes.Count >= 1 Then
                If Application.ActiveChart.Axes(1).HasTitle = False Then
                    Application.ActiveChart.Axes(1).HasTitle = True
                End If
                '
                
                With Application.ActiveChart.Axes(2)
                    .HasMinorGridlines = True
                    .MinorGridlines.Border.LineStyle = xlDash
                End With
                
                
                Application.ActiveChart.Axes(1).MajorUnit = 10
                Application.ActiveChart.Axes(1).MinorUnit = 1
                Application.ActiveChart.Axes(1).MaximumScaleIsAuto = True
                Application.ActiveChart.Axes(1).TickLabelPosition = xlLow
                
                Application.ActiveChart.Axes(1).MajorUnitIsAuto = True
                Application.ActiveChart.Axes(1).MinorUnitIsAuto = True
                
                Application.ActiveChart.Axes(1).MinorTickMark = xlTickMarkInside
            End If
            If Application.ActiveChart.Axes.Count >= 2 Then
                '
                If Application.ActiveChart.Axes(2).HasTitle = False Then
                    Application.ActiveChart.Axes(2).HasTitle = True
                End If
                'Application.ActiveChart.Axes(2).MaximumScaleIsAuto = True
                Application.ActiveChart.Axes(2).MinimumScale = 0.1
                Application.ActiveChart.Axes(2).MinorTickMark = xlTickMarkInside
                Application.ActiveChart.Axes(2).MajorUnitIsAuto = True
                Application.ActiveChart.Axes(2).MinorUnitIsAuto = True
                
                Application.ActiveChart.Axes(xlValue).ScaleType = xlScaleLogarithmic
                
            End If
            Application.ActiveChart.PlotArea.Interior.ColorIndex = 2
           
            Application.Sheets(RSSelectedOldPos & ".5").ChartObjects(1).Activate
    
            If Application.ActiveChart.Axes.Count >= 2 Then
                If Val(Application.Version) >= 15 Then ' Excel 365
                    Application.ActiveChart.Axes(2).TickLabels.NumberFormat = "General" 'JS2014-06
                Else
                    Application.ActiveChart.Axes(2).TickLabels.NumberFormat = "0.0"
                End If
            End If
    
            If Val(Application.Version) >= 8 Then
                Version8 = 0
            Else
                Version8 = 15
            End If
            ActiveChart.Legend.Height = 32
            ActiveChart.Legend.Top = 370
            ActiveChart.Legend.Left = 24 + Version8
            ActiveChart.Legend.Width = 390 - Version8
            ActiveChart.Legend.Font.Size = 9 '2004
           
            ActiveChart.PlotArea.Left = 15
            ActiveChart.PlotArea.Width = 400 + Version8
            ActiveChart.PlotArea.Top = 3
            ActiveChart.PlotArea.Height = (ActiveChart.Legend.Top - (50 - (Version8)))
            For Count = 1 To Application.ActiveChart.SeriesCollection.Count
                Application.ActiveChart.SeriesCollection(Count).Smooth = True
            Next Count
        End If
    End If
Exit Sub
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Sub

'---------------------
Sub StartingCurveFormatSingleSheet(RSSelectedOldPos As Integer, nsteps As Integer, STARTINGTIME As Boolean, NotAllZero2 As Boolean, NotAllZero3 As Boolean, NotAllZero4 As Boolean, NotAllZero5 As Boolean, NotAllZero6 As Boolean, MaxCurrent As Single, Speed1or2 As Integer, Standard As String, CountM As Integer, CountMax As Integer)
'---------------------
    On Error GoTo ErrHandler1
    'On Error Resume Next
    Dim MaximumScaleY As Single
    Dim Count As Integer
    Dim SeriesCounter As Integer
    Dim Version8 As Integer
        On Error Resume Next
        Application.Sheets("MainReport").ChartObjects(CountM + CountMax).Activate
        Application.Sheets("MainReport").ChartObjects(CountM + CountMax).Select
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(1).Delete
        Next Count
        SeriesCounter = 0
        If NotAllZero2 And STARTINGTIME Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets("MainReport").Activate
'            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("U1:U" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1, 91), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 91)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
'            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 90), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 90))
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 30
                .Weight = xlMedium
                .LineStyle = 1
            End With
        End If
        If NotAllZero3 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets("MainReport").Activate
'            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("V1:V" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1, 92), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 92)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
'            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 90), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 90))
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 5
                .Weight = xlMedium
                .LineStyle = 1
            End With
            On Error Resume Next
            Application.Sheets("MainReport").ChartObjects(CountM + CountMax).Chart.ChartTitle.Delete
            On Error GoTo 0
        End If
    
        If NotAllZero4 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets("MainReport").Activate
'            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("W1:W" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1, 93), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 93)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
'            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("Z2:Z" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 96), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 96))
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 3
                .Weight = 2
                .LineStyle = 1
            End With
        End If
        If NotAllZero5 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets("MainReport").Activate
'            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("X1:X" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1, 94), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 94)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
'            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 90), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 90))
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 2
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 13
                .Weight = xlMedium
                .LineStyle = -4118
            End With
        End If
        If NotAllZero6 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets("MainReport").Activate
'            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("Y1:Y" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1, 95), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 95)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
'            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("Z2:Z" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 96), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 96))
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 2
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 10
                .Weight = 2
                .LineStyle = -4118 '5
            End With
        End If
        
        If Application.ActiveChart.Axes(1).HasTitle = False Then
            Application.ActiveChart.Axes(1).HasTitle = True
        End If
        '
        Application.ActiveChart.Axes(1).MajorUnit = 250
        Application.ActiveChart.Axes(1).MinorUnit = 50
        Application.ActiveChart.Axes(1).MinorTickMark = xlTickMarkInside
        '
        If Application.ActiveChart.Axes(2).HasTitle = False Then
            Application.ActiveChart.Axes(2).HasTitle = True
        End If

        Application.ActiveChart.Axes(2).MaximumScaleIsAuto = True
        MaximumScaleY = Int(Application.ActiveChart.Axes(xlValue).MaximumScale) + 1
        If MaxCurrent > MaximumScaleY Then
            MaximumScaleY = Int(MaxCurrent + 2) * 0.5
        End If
        Application.ActiveChart.Axes(2).MinimumScale = 0
        Application.ActiveChart.Axes(2, 2).MinimumScale = 0
        Application.ActiveChart.Axes(2).MinorTickMark = xlTickMarkInside
        Application.ActiveChart.Axes(2).MaximumScale = MaximumScaleY
        Application.ActiveChart.Axes(2, 2).MaximumScale = Application.ActiveChart.Axes(2).MaximumScale * 2
     
        If Application.ActiveChart.Axes(2, 2).HasTitle = False Then
            Application.ActiveChart.Axes(2, 2).HasTitle = True
        End If
        Application.ActiveChart.Axes(2, 2).MinorTickMark = xlTickMarkInside
        
        Application.ActiveChart.PlotArea.Interior.ColorIndex = 2
       
        Application.Sheets("MainReport").ChartObjects(CountM + CountMax).Activate

        Application.ActiveChart.Axes(2).TickLabels.NumberFormat = "General"
        If Val(Application.Version) >= 8 Then
            Version8 = 0
        Else
            Version8 = 15
        End If
        ActiveChart.Legend.Height = 32
        ActiveChart.Legend.Top = 370
        ActiveChart.Legend.Left = 24 + Version8
        ActiveChart.Legend.Width = 390 - Version8
        ActiveChart.Legend.Font.Size = 9 '2004
       
        ActiveChart.PlotArea.Left = 15
        ActiveChart.PlotArea.Width = 400 + Version8
        ActiveChart.PlotArea.Top = 3
        ActiveChart.PlotArea.Height = (ActiveChart.Legend.Top - (50 - (Version8)))
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(Count).Smooth = True
        Next Count
Exit Sub
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Sub
'---------------------
Sub StartingCurveFormatSingleSheetCS(RSSelectedOldPos As Integer, nsteps As Integer, STARTINGTIME As Boolean, NotAllZero2 As Boolean, NotAllZero3 As Boolean, NotAllZero4 As Boolean, NotAllZero5 As Boolean, NotAllZero6 As Boolean, MaxCurrent As Single, Speed1or2 As Integer, Standard As String, CountM As Integer, CountMax As Integer)
'---------------------
    On Error GoTo ErrHandler1
    'On Error Resume Next
    Dim MaximumScaleY As Single
    Dim Count As Integer
    Dim SeriesCounter As Integer
    Dim Version8 As Integer
        On Error Resume Next
        Application.Sheets("MainReport").ChartObjects(CountM + CountMax).Activate
        Application.Sheets("MainReport").ChartObjects(CountM + CountMax).Select
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(1).Delete
        Next Count
        SeriesCounter = 0
        If NotAllZero2 And STARTINGTIME Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets("MainReport").Activate
            'Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("U1:U" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            'Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            '
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1, 121), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 121)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 120), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 120))
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 30
                .Weight = xlMedium
                .LineStyle = 1
            End With
        'End If
        'If NotAllZero3 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets("MainReport").Activate
            'Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("V1:V" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            'Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1, 122), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 122)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 120), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 120))
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 2
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 5
                .Weight = xlMedium
                .LineStyle = 1
            End With
            On Error Resume Next
            Application.Sheets("MainReport").ChartObjects(CountM + CountMax).Chart.ChartTitle.Delete
            On Error GoTo 0
'        'End If
'        'If NotAllZero4 Then
'            SeriesCounter = SeriesCounter + 1
'            Application.Sheets("MainReport").Activate
'            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1, 123), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 123)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
'            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 126), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 126))
'            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
'            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
'            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
'            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
'                .ColorIndex = 3
'                .Weight = 2
'                .LineStyle = 1
'            End With
'        'End If
'        'If NotAllZero5 Then
'            SeriesCounter = SeriesCounter + 1
'            Application.Sheets("MainReport").Activate
'            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1, 124), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 124)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
'            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 120), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 120))
'            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
'            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 2
'            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
'            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
'                .ColorIndex = 13
'                .Weight = xlMedium
'                .LineStyle = -4118
'            End With
'        'End If
'        'If NotAllZero6 Then
'            SeriesCounter = SeriesCounter + 1
'            Application.Sheets("MainReport").Activate
'            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1, 125), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 125)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
'            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 126), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 126))
'            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
'            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 2
'            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
'            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
'                .ColorIndex = 10
'                .Weight = 2
'                .LineStyle = -4118 '5
'            End With
        End If
        
        If Application.ActiveChart.Axes.Count >= 1 Then
            If Application.ActiveChart.Axes(1).HasTitle = False Then
                Application.ActiveChart.Axes(1).HasTitle = True
            End If
            '
            Application.ActiveChart.Axes(1).MajorUnit = 10
            Application.ActiveChart.Axes(1).MinorUnit = 1
            
            Application.ActiveChart.Axes(1).MajorUnitIsAuto = True
            Application.ActiveChart.Axes(1).MinorUnitIsAuto = True
        
            Application.ActiveChart.Axes(1).MinorTickMark = xlTickMarkInside
        End If
        If Application.ActiveChart.Axes.Count >= 2 Then
            Application.ActiveChart.Axes(2, 2).MinimumScale = 0
            Application.ActiveChart.Axes(2, 2).MaximumScaleIsAuto = True
            
            Application.ActiveChart.Axes(2, 2).MajorUnitIsAuto = True
            Application.ActiveChart.Axes(2, 2).MinorUnitIsAuto = True
       
            If Application.ActiveChart.Axes(2, 2).HasTitle = False Then
                Application.ActiveChart.Axes(2, 2).HasTitle = True
            End If
            Application.ActiveChart.Axes(2, 2).MinorTickMark = xlTickMarkInside
            
            Application.ActiveChart.PlotArea.Interior.ColorIndex = 2
        
            Application.Sheets("MainReport").ChartObjects(CountM + CountMax).Activate
        End If
        
'        If Application.ActiveChart.Axes(1).HasTitle = False Then
'            Application.ActiveChart.Axes(1).HasTitle = True
'        End If
'        '
'        Application.ActiveChart.Axes(1).MajorUnit = 250
'        Application.ActiveChart.Axes(1).MinorUnit = 50
'        Application.ActiveChart.Axes(1).MinorTickMark = xlTickMarkInside
'        '
'        If Application.ActiveChart.Axes(2).HasTitle = False Then
'            Application.ActiveChart.Axes(2).HasTitle = True
'        End If
'
'        Application.ActiveChart.Axes(2).MaximumScaleIsAuto = True
'        MaximumScaleY = Int(Application.ActiveChart.Axes(xlValue).MaximumScale) + 1
'        If MaxCurrent > MaximumScaleY Then
'            MaximumScaleY = Int(MaxCurrent + 2) * 0.5
'        End If
'        Application.ActiveChart.Axes(2).MinimumScale = 0
'        Application.ActiveChart.Axes(2, 2).MinimumScale = 0
'        Application.ActiveChart.Axes(2).MinorTickMark = xlTickMarkInside
'        Application.ActiveChart.Axes(2).MaximumScale = MaximumScaleY
'        Application.ActiveChart.Axes(2, 2).MaximumScale = Application.ActiveChart.Axes(2).MaximumScale * 2
'
'        If Application.ActiveChart.Axes(2, 2).HasTitle = False Then
'            Application.ActiveChart.Axes(2, 2).HasTitle = True
'        End If
'        Application.ActiveChart.Axes(2, 2).MinorTickMark = xlTickMarkInside
'
'        Application.ActiveChart.PlotArea.Interior.ColorIndex = 2
'
'        Application.Sheets("MainReport").ChartObjects(CountM + CountMax).Activate
'
'        Application.ActiveChart.Axes(2).TickLabels.NumberFormat = "General"

        If Val(Application.Version) >= 8 Then
            Version8 = 0
        Else
            Version8 = 15
        End If
        ActiveChart.Legend.Height = 32
        ActiveChart.Legend.Top = 370
        ActiveChart.Legend.Left = 24 + Version8
        ActiveChart.Legend.Width = 390 - Version8
        ActiveChart.Legend.Font.Size = 9 '2004
       
        ActiveChart.PlotArea.Left = 15
        ActiveChart.PlotArea.Width = 400 + Version8
        ActiveChart.PlotArea.Top = 3
        ActiveChart.PlotArea.Height = (ActiveChart.Legend.Top - (50 - (Version8)))
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(Count).Smooth = True
        Next Count


'        If Val(Application.Version) >= 8 Then
'            Version8 = 0
'        Else
'            Version8 = 15
'        End If
'        ActiveChart.Legend.Height = 32
'        ActiveChart.Legend.Top = 370
'        ActiveChart.Legend.Left = 24 + Version8
'        ActiveChart.Legend.Width = 390 - Version8
'        ActiveChart.Legend.Font.Size = 9 '2004
'
'        ActiveChart.PlotArea.Left = 15
'        ActiveChart.PlotArea.Width = 400 + Version8
'        ActiveChart.PlotArea.Top = 3
'        ActiveChart.PlotArea.Height = (ActiveChart.Legend.Top - (50 - (Version8)))
'        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
'            Application.ActiveChart.SeriesCollection(Count).Smooth = True
'        Next Count
Exit Sub
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Sub
'---------------------
Sub StartingCurveFormatSingleSheetTW(RSSelectedOldPos As Integer, nsteps As Integer, STARTINGTIME As Boolean, NotAllZero2 As Boolean, NotAllZero3 As Boolean, AdeptIsUsed As Boolean, nsteps2 As Integer, nsteps3 As Integer, MaxCurrent As Single, Speed1or2 As Integer, Standard As String, CountM As Integer, CountMax As Integer)
'---------------------
    On Error GoTo ErrHandler1
    'On Error Resume Next
    Dim MaximumScaleY As Single
    Dim Count As Integer
    Dim SeriesCounter As Integer
    Dim Version8 As Integer
        On Error Resume Next
        Application.Sheets("MainReport").ChartObjects(CountM + CountMax).Activate
        Application.Sheets("MainReport").ChartObjects(CountM + CountMax).Select
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(1).Delete
        Next Count
        SeriesCounter = 0
        If NotAllZero2 Then
        Application.Sheets("MainReport").Activate
            If Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2 + 5, 140).Value > 0 Then
                SeriesCounter = SeriesCounter + 1
                Application.Sheets("MainReport").Activate
                Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1, 142), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 142)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
                Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 140), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 140))
                Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
                Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
                Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False
                With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                    .ColorIndex = 30
                    .Weight = xlMedium
                    .LineStyle = 1
                End With
            End If
            '
            If Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2 + 5, 141).Value > 0 Then
                SeriesCounter = SeriesCounter + 1
                Application.Sheets("MainReport").Activate
                Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1, 143), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 143)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
                Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 141), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 141))
                Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
                Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
                Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False
                With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                    .ColorIndex = 5
                    .Weight = xlMedium
                    .LineStyle = 1
                End With
            End If
            '
            If Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 144).Value > 0 Or Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2 + 3, 144).Value > 0 Then
                SeriesCounter = SeriesCounter + 1
                Application.Sheets("MainReport").Activate
                Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1, 146), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps2 + 2, 146)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
                Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 144), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps2 + 2, 144))
                Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
                Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
                Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False
                With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                    .ColorIndex = 10
                    .Weight = xlMedium
                    .LineStyle = 1
                End With
            End If
            '
            If Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 145).Value > 0 Or Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2 + 3, 145).Value > 0 Then
                SeriesCounter = SeriesCounter + 1
                Application.Sheets("MainReport").Activate
                Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1, 147), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps3 + 2, 147)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
                Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 145), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps3 + 2, 145))
                Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
                Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
                Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False
                With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                    .ColorIndex = 8
                    .Weight = xlMedium
                    .LineStyle = 1
                End With
            End If
            '
            If Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2 + 3, 148).Value > 0 Then
                SeriesCounter = SeriesCounter + 1
                Application.Sheets("MainReport").Activate
                Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1, 149), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps3 + 2, 149)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
                Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 148), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps3 + 2, 148))
                Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
                Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
                Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False
                With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                    .ColorIndex = 7
                    .Weight = xlMedium
                    .LineStyle = 1
                End With
            End If
            '
            If Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2 + 3, 150).Value > 0 Then
                SeriesCounter = SeriesCounter + 1
                Application.Sheets("MainReport").Activate
                Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1, 151), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps3 + 2, 151)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
                Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 150), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps3 + 2, 150))
                Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
                Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
                Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False
                With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                    .ColorIndex = 21
                    .Weight = xlMedium
                    .LineStyle = 1
                End With
            End If
            
            If SeriesCounter > 0 Then
                On Error Resume Next
                Application.Sheets("MainReport").ChartObjects(CountM + CountMax).Chart.ChartTitle.Delete
                On Error GoTo 0
        
           
               If Application.ActiveChart.Axes.Count >= 1 Then
                If Application.ActiveChart.Axes(1).HasTitle = False Then
                    Application.ActiveChart.Axes(1).HasTitle = True
                End If
                '
                
                With Application.ActiveChart.Axes(2)
                    .HasMinorGridlines = True
                    .MinorGridlines.Border.LineStyle = xlDash
                End With
                
                
                Application.ActiveChart.Axes(1).MajorUnit = 10
                Application.ActiveChart.Axes(1).MinorUnit = 1
                Application.ActiveChart.Axes(1).MaximumScaleIsAuto = True
                
                Application.ActiveChart.Axes(1).MajorUnitIsAuto = True
                Application.ActiveChart.Axes(1).MinorUnitIsAuto = True
                Application.ActiveChart.Axes(1).TickLabelPosition = xlLow
                
                Application.ActiveChart.Axes(1).MinorTickMark = xlTickMarkInside
            End If
            If Application.ActiveChart.Axes.Count >= 2 Then
                '
                If Application.ActiveChart.Axes(2).HasTitle = False Then
                    Application.ActiveChart.Axes(2).HasTitle = True
                End If
                'Application.ActiveChart.Axes(2).MaximumScaleIsAuto = True
                Application.ActiveChart.Axes(2).MinimumScale = 0.1
                Application.ActiveChart.Axes(2).MinorTickMark = xlTickMarkInside
                Application.ActiveChart.Axes(2).MajorUnitIsAuto = True
                Application.ActiveChart.Axes(2).MinorUnitIsAuto = True
                
                Application.ActiveChart.Axes(xlValue).ScaleType = xlScaleLogarithmic
                
            End If
           
    
    '
    '        Application.ActiveChart.Axes(2).TickLabels.NumberFormat = "General"
    '        If Val(Application.Version) >= 8 Then
    '            Version8 = 0
    '        Else
    '            Version8 = 15
    '        End If
    '        ActiveChart.Legend.Height = 32
    '        ActiveChart.Legend.Top = 370
    '        ActiveChart.Legend.Left = 24 + Version8
    '        ActiveChart.Legend.Width = 390 - Version8
    '        ActiveChart.Legend.Font.Size = 9 '2004
    '
    '        ActiveChart.PlotArea.Left = 15
    '        ActiveChart.PlotArea.Width = 400 + Version8
    '        ActiveChart.PlotArea.Top = 3
    '        ActiveChart.PlotArea.Height = (ActiveChart.Legend.Top - (50 - (Version8)))
    '        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
    '            Application.ActiveChart.SeriesCollection(Count).Smooth = True
    '        Next Count
            Application.Sheets("MainReport").ChartObjects(CountM + CountMax).Activate
            Application.ActiveChart.PlotArea.Interior.ColorIndex = 2
            If Application.ActiveChart.Axes.Count >= 2 Then
                If Val(Application.Version) >= 15 Then ' Excel 365
                    Application.ActiveChart.Axes(2).TickLabels.NumberFormat = "General" 'JS2014-06
                Else
                    Application.ActiveChart.Axes(2).TickLabels.NumberFormat = "0.0"
                End If
            End If
    
            If Val(Application.Version) >= 8 Then
                Version8 = 0
            Else
                Version8 = 15
            End If
            ActiveChart.Legend.Height = 32
            ActiveChart.Legend.Top = 370
            ActiveChart.Legend.Left = 24 + Version8
            ActiveChart.Legend.Width = 390 - Version8
            ActiveChart.Legend.Font.Size = 9 '2004
           
            ActiveChart.PlotArea.Left = 15
            ActiveChart.PlotArea.Width = 400 + Version8
            ActiveChart.PlotArea.Top = 3
            ActiveChart.PlotArea.Height = (ActiveChart.Legend.Top - (50 - (Version8)))
            For Count = 1 To Application.ActiveChart.SeriesCollection.Count
                Application.ActiveChart.SeriesCollection(Count).Smooth = True
            Next Count
        End If
    End If
Exit Sub
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Sub
'------------------
Sub LoadCurveFormat(RSSelectedOldPos As Integer, nsteps As Integer, NotAllZero2 As Boolean, NotAllZero3 As Boolean, NotAllZero4 As Boolean)
Attribute LoadCurveFormat.VB_ProcData.VB_Invoke_Func = " \n14"
'------------------
    On Error GoTo ErrHandler1
    'On Error Resume Next
    Dim SeriesCounter As Integer
    Dim Version8 As Integer
        Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Activate
        Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Select
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(1).Delete
        Next Count
        SeriesCounter = 0
        If NotAllZero2 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".2").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("U1:U" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 30
                .Weight = xlMedium
                .LineStyle = 1
            End With
        End If
        If NotAllZero3 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".2").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("V6:V" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T7:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 5
                .Weight = xlThick
                .LineStyle = -4118
            End With
        End If
    
        If NotAllZero4 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".2").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("W1:W" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 3
                .Weight = xlThin
                .LineStyle = -4118
            End With
        End If
        
        If Application.ActiveChart.Axes(1).HasTitle = False Then
            Application.ActiveChart.Axes(1).HasTitle = True
            Application.ActiveChart.Axes(1).AxisTitle.Characters.Text = "P2/Pn"
        End If
        Application.ActiveChart.Axes(1).MajorUnit = 0.1
        Application.ActiveChart.Axes(1).MinorUnit = 0.02
        Application.ActiveChart.Axes(1).MinorTickMark = xlTickMarkInside
        
        Application.ActiveChart.PlotArea.Interior.ColorIndex = 2
        
        Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Activate
        
        'Application.ActiveChart.Axes(2).TickLabels.NumberFormat = "General"
       
        Application.ActiveChart.Axes(2).MajorUnit = 0.1
        Application.ActiveChart.Axes(2).MinorUnit = 0.02
        Application.ActiveChart.Axes(2).MinorTickMark = xlTickMarkInside
        If Application.ActiveChart.Axes(2).HasTitle = False Then
            Application.ActiveChart.Axes(2).HasTitle = True
            Application.ActiveChart.Axes(2).AxisTitle.Characters.Text = "PF / Efficiency,Current%(*100)"
        End If
        
        'ActiveChart.Axes(xlValue).MajorGridlines.Select
        'ActiveChart.PlotArea.Select
        If Val(Application.Version) >= 8 Then
            Version8 = 0
        Else
            Version8 = 15
        End If
        ActiveChart.Legend.Height = 18
        ActiveChart.Legend.Top = 370
        ActiveChart.Legend.Left = 21 + Version8
        ActiveChart.Legend.Width = 392 - Version8
        ActiveChart.Legend.Font.Size = 9 '2004
        
        ActiveChart.PlotArea.Left = 15
        ActiveChart.PlotArea.Width = 400 + Version8
        ActiveChart.PlotArea.Top = 3
        ActiveChart.PlotArea.Height = (ActiveChart.Legend.Top - (50 - (Version8)))
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(Count).Smooth = True
        Next Count
         
        'Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Chart.PlotArea.Left = 15
        'Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Chart.PlotArea.Width = 415
        'Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Chart.PlotArea.Top = 3
        'Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Chart.PlotArea.Height = 280
        
        'Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Chart.Legend.Height = 18
        'Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Chart.Legend.Top = 315
        'Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Chart.Legend.Left = 21
        'Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Chart.Legend.Width = 415
Exit Sub
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Sub
'------------------
Sub LoadCurveFormatSingleSheet(RSSelectedOldPos As Integer, nsteps As Integer, NotAllZero2 As Boolean, NotAllZero3 As Boolean, NotAllZero4 As Boolean, CountM As Integer)
'------------------
    On Error GoTo ErrHandler1
    'On Error Resume Next
    Dim SeriesCounter As Integer
    Dim Version8 As Integer
        Application.Sheets("MainReport").ChartObjects(CountM).Activate
        Application.Sheets("MainReport").ChartObjects(CountM).Select
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(1).Delete
        Next Count
        SeriesCounter = 0
        If NotAllZero2 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets("MainReport").Activate
            'Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("U1:U" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1, 81), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 81)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            'Application.Range(Application.Cells((CountM - 1) * 77 + 1, 80), Application.Cells((CountM - 1) * 77 + 1 + nsteps + 2, 80))
            'Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 80), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 80))
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 30
                .Weight = xlMedium
                .LineStyle = 1
            End With
        End If
        If NotAllZero3 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets("MainReport").Activate
            'Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("V6:V" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 6, 82), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 82)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            'Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T7:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 7, 80), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 80))
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 5
                .Weight = xlThick
                .LineStyle = -4118
            End With
        End If
    
        If NotAllZero4 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets("MainReport").Activate
            'Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("W1:W" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1, 83), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 83)), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            'Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range(Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 2, 80), Application.Sheets("MainReport").Cells((CountM - 1) * 77 + 1 + nsteps + 2, 80))
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 3
                .Weight = xlThin
                .LineStyle = -4118
            End With
        End If
        
        If Application.ActiveChart.Axes(1).HasTitle = False Then
            Application.ActiveChart.Axes(1).HasTitle = True
            Application.ActiveChart.Axes(1).AxisTitle.Characters.Text = "P2/Pn"
        End If
        Application.ActiveChart.Axes(1).MajorUnit = 0.1
        Application.ActiveChart.Axes(1).MinorUnit = 0.02
        Application.ActiveChart.Axes(1).MinorTickMark = xlTickMarkInside
        
        Application.ActiveChart.PlotArea.Interior.ColorIndex = 2
        
        Application.Sheets("MainReport").ChartObjects(CountM).Activate
        
        Application.ActiveChart.Axes(2).TickLabels.NumberFormat = "General"
       
        Application.ActiveChart.Axes(2).MajorUnit = 0.1
        Application.ActiveChart.Axes(2).MinorUnit = 0.02
        Application.ActiveChart.Axes(2).MinorTickMark = xlTickMarkInside
        If Application.ActiveChart.Axes(2).HasTitle = False Then
            Application.ActiveChart.Axes(2).HasTitle = True
            Application.ActiveChart.Axes(2).AxisTitle.Characters.Text = "PF / Efficiency,Current%(*100)"
        End If
        
        If Val(Application.Version) >= 8 Then
            Version8 = 0
        Else
            Version8 = 15
        End If
        ActiveChart.Legend.Height = 18
        ActiveChart.Legend.Top = 370
        ActiveChart.Legend.Left = 21 + Version8
        ActiveChart.Legend.Width = 392 - Version8
        ActiveChart.Legend.Font.Size = 9 '2004
        
        ActiveChart.PlotArea.Left = 15
        ActiveChart.PlotArea.Width = 400 + Version8
        ActiveChart.PlotArea.Top = 3
        ActiveChart.PlotArea.Height = (ActiveChart.Legend.Top - (50 - (Version8)))
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(Count).Smooth = True
        Next Count

Exit Sub
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Sub

'------------------
Sub LoadCurveFormat2sp(RSSelectedOldPos As Integer, nsteps As Integer, NotAllZero2 As Boolean, NotAllZero3 As Boolean, NotAllZero4 As Boolean, SpeedChar As String)
Attribute LoadCurveFormat2sp.VB_ProcData.VB_Invoke_Func = " \n14"
'------------------
    On Error GoTo ErrHandler1
    'On Error Resume Next
    Dim SeriesCounter As Integer
    Dim Version8 As Integer
        Application.Sheets(RSSelectedOldPos & ".2" & SpeedChar).ChartObjects(1).Activate
        Application.Sheets(RSSelectedOldPos & ".2" & SpeedChar).ChartObjects(1).Select
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(1).Delete
        Next Count
        SeriesCounter = 0
        If NotAllZero2 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".2" & SpeedChar).Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("U1:U" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 30
                .Weight = xlMedium
                .LineStyle = 1
            End With
        End If
        If NotAllZero3 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".2" & SpeedChar).Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("V6:V" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T7:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 5
                .Weight = xlMedium
                .LineStyle = 4
            End With
        End If
    
        If NotAllZero4 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".2" & SpeedChar).Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("W1:W" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 3
                .Weight = xlMedium
                .LineStyle = -4118
            End With
        End If
        
        If Application.ActiveChart.Axes(1).HasTitle = False Then
            Application.ActiveChart.Axes(1).HasTitle = True
            Application.ActiveChart.Axes(1).AxisTitle.Characters.Text = "P2/Pn"
        End If
        
        Application.ActiveChart.Axes(1).MajorUnit = 0.1
        Application.ActiveChart.Axes(1).MinorUnit = 0.01
        Application.ActiveChart.Axes(1).MinorTickMark = xlTickMarkInside
        
        Application.ActiveChart.PlotArea.Interior.ColorIndex = 2
        
        Application.Sheets(RSSelectedOldPos & ".2" & SpeedChar).ChartObjects(1).Activate
        
        Application.ActiveChart.Axes(2).TickLabels.NumberFormat = "General"
        
        Application.ActiveChart.Axes(2).MajorUnit = 0.1
        Application.ActiveChart.Axes(2).MinorUnit = 0.01
        Application.ActiveChart.Axes(2).MinorTickMark = xlTickMarkInside
       
        'ActiveChart.Axes(xlValue).MajorGridlines.Select
        'ActiveChart.PlotArea.Select
        If Val(Application.Version) >= 8 Then
            Version8 = 0
        Else
            Version8 = 15
        End If
        ActiveChart.Legend.Height = 18
        ActiveChart.Legend.Top = 370
        ActiveChart.Legend.Left = 21 + Version8
        ActiveChart.Legend.Width = 392 - Version8
        ActiveChart.Legend.Font.Size = 9 '2004
        
        ActiveChart.PlotArea.Left = 15
        ActiveChart.PlotArea.Width = 400 + Version8
        ActiveChart.PlotArea.Top = 3
        ActiveChart.PlotArea.Height = (ActiveChart.Legend.Top - (50 - (Version8)))
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(Count).Smooth = True
        Next Count
Exit Sub
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Sub
'------------------
Sub CopyStaringData(Msg1 As String, Msg2 As String, Msg3 As String, CountRow As Integer, CountCol As Integer)
Attribute CopyStaringData.VB_ProcData.VB_Invoke_Func = " \n14"
'------------------
    On Error GoTo ErrHandler1
    'On Error Resume Next
    i = 1
    Dim Msg As String
    Msg = Msg1 + Msg2 + Msg3
    startvalue = 1
    Do Until Mid(Msg, i, 1) = ""
        If Asc(Mid(Msg, i, 1)) = 13 Then
            If Len(Mid(Msg, startvalue, i - startvalue)) > 0 Then
                Application.ActiveWorkbook.ActiveSheet.Cells(CountRow, CountCol).Value = CSng(Mid(Msg, startvalue, i - startvalue))
            Else
                Application.ActiveWorkbook.ActiveSheet.Cells(CountRow, CountCol).Value = ""
            End If
            startvalue = i + 1
            CountRow = CountRow + 1
        End If
        i = i + 1
    Loop
    If startvalue < i Then
        Application.ActiveWorkbook.ActiveSheet.Cells(CountRow, CountCol).Value = CSng(Mid(Msg, startvalue, i))
    End If
Exit Sub
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Sub
Sub PrintVisible()
Attribute PrintVisible.VB_ProcData.VB_Invoke_Func = " \n14"
    On Error GoTo ErrHandler1
    Dim oldworksheetname As String
    On Error Resume Next
    oldworksheetname = ActiveSheet.Name
    For Each Worksheet In Worksheets   ' Iterate through each element.
        If Worksheet.Visible = True Then
            Worksheet.Select False
        End If
    Next
    ActiveWindow.SelectedSheets.PrintOut
    Application.Sheets(oldworksheetname).Select
Exit Sub
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Sub
'
Sub DOLPrintToPrinter(Index As Integer, RSSelectedOldPos As Integer, READCOMPLEMENT As Boolean, MotorWinding As String)
Attribute DOLPrintToPrinter.VB_ProcData.VB_Invoke_Func = " \n14"
    On Error GoTo ErrHandler1
    'On Error Resume Next
    Select Case Index
    Case 0 ' technical data sheet (all)
        Application.Sheets(RSSelectedOldPos & ".1").Select False
        'ActiveSheet.PrintOut Copies:=1
        'Application.Sheets(RSSelectedOldPos & ".1").PrintOut Copies:=1
        If READCOMPLEMENT = True Then
            If MotorWinding = "2-speed" Then
                Application.Sheets(RSSelectedOldPos & ".2Hi").Select False
                Application.Sheets(RSSelectedOldPos & ".2Lo").Select False
            Else
                Application.Sheets(RSSelectedOldPos & ".2").Select False
            End If
            'ActiveSheet.PrintOut Copies:=1
            'Application.Sheets(RSSelectedOldPos & ".2").PrintOut Copies:=1
            Application.Sheets(RSSelectedOldPos & ".3").Select False
            'ActiveSheet.PrintOut Copies:=1
            'Application.Sheets(RSSelectedOldPos & ".3").PrintOut Copies:=1
        End If
        ActiveWindow.SelectedSheets.PrintOut
    Case 1
        'Application.Sheets(RSSelectedOldPos & ".1").PrintOut Copies:=1
        Application.Sheets(RSSelectedOldPos & ".1").Activate
        ActiveSheet.PrintOut Copies:=1
    Case 2
        'Application.Sheets(RSSelectedOldPos & ".2").PrintOut Copies:=1 'LoadCurve
        If MotorWinding = "2-speed" Then
            Application.Sheets(RSSelectedOldPos & ".2Hi").Activate
            ActiveSheet.PrintOut Copies:=1
            Application.Sheets(RSSelectedOldPos & ".2Lo").Activate
            ActiveSheet.PrintOut Copies:=1
        Else
            Application.Sheets(RSSelectedOldPos & ".2").Activate
            ActiveSheet.PrintOut Copies:=1
        End If
    Case 3
        'Application.Sheets(RSSelectedOldPos & ".3").PrintOut Copies:=1 'starting conditions
        Application.Sheets(RSSelectedOldPos & ".3").Activate
        ActiveSheet.PrintOut Copies:=1
    Case 4
        'Application.Sheets("Motorlist").PrintOut Copies:=1
        Application.Sheets("Motorlist").Activate
        ActiveSheet.PrintOut Copies:=1
    Case 5
        'Application.Sheets("EqDiag").PrintOut Copies:=1
        Application.Sheets(RSSelectedOldPos & ".Eq").Activate
        ActiveSheet.PrintOut Copies:=1
    Case 6
        Application.Sheets("Cat." & RSSelectedOldPos).Activate
        ActiveSheet.PrintOut Copies:=1
    Case 7
        Application.Sheets("Motorlist1").Activate
        ActiveSheet.PrintOut Copies:=1
    Case 8
        Application.Sheets("Motorlist2").Activate
        ActiveSheet.PrintOut Copies:=1
    Case 9
        'Application.Sheets("EqDiag").PrintOut Copies:=1
        Application.Sheets(RSSelectedOldPos & ".Cou").Activate
        ActiveSheet.PrintOut Copies:=1
    End Select
Exit Sub
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Sub
Sub FormatDatasheet(Standard As String)
Attribute FormatDatasheet.VB_ProcData.VB_Invoke_Func = " \n14"

End Sub
Sub FormatStartingsheet(Standard As String)
Attribute FormatStartingsheet.VB_ProcData.VB_Invoke_Func = " \n14"
    On Error GoTo ErrHandler1
    Dim CountRow As Integer
    Dim CountCol As Integer
    Dim Obj As Object
    On Error Resume Next
    Set Obj = Application.ActiveWorkbook.ActiveSheet
    If Standard = "NEMA" And Obj.Cells(20, 3).Value = "LRA (%)" Then
        'allready formated for NEMA
        Exit Sub
    ElseIf Not Standard = "NEMA" And Obj.Cells(18, 5).Value = "IS/IN" Then
        'allready formated for IEC - ABB catalogue
        Exit Sub
    End If
    If Standard = "NEMA" Then
        'Line 13
        Obj.Cells(13, 6).Value = "Amps"
        'Line 16
        Obj.Cells(16, 1).Value = "WK2motor (lb-ft2)"
        Obj.Cells(16, 1).Characters(start:=3, Length:=1).Font.Superscript = True
        Obj.Cells(16, 1).Characters(start:=4, Length:=5).Font.Subscript = True
        Obj.Cells(16, 1).Characters(start:=16, Length:=1).Font.Superscript = True
        'Line 17
        Obj.Cells(17, 1).Value = "WK2load (lb-ft2)"
        Obj.Cells(17, 1).Characters(start:=3, Length:=1).Font.Superscript = True
        Obj.Cells(17, 1).Characters(start:=4, Length:=4).Font.Subscript = True
        Obj.Cells(17, 1).Characters(start:=15, Length:=1).Font.Superscript = True
        'Line 18
        Obj.Cells(18, 1).Value = "Load speed (rpm)"
        'Line 19
        Obj.Cells(19, 1).Value = "TN (lb-ft)"
        Obj.Cells(19, 3).Value = "Speed (rpm)"
        Obj.Cells(19, 5).Value = "Speed (rpm)"
        'Line 20
        Obj.Cells(20, 1).Value = "Tload (lb-ft)"
        Obj.Cells(20, 1).Characters(start:=2, Length:=4).Font.Subscript = True
        Obj.Cells(20, 3).Value = "LRA (%)"
        Obj.Cells(20, 5).Value = "LRA (%)"
    Else  'IEC
        'Line 13
        Obj.Cells(13, 6).Value = "A"
        'Line 16
        Obj.Cells(16, 1).Value = "Jmotor (kgm2)"
        Obj.Cells(16, 1).Characters(start:=2, Length:=5).Font.Subscript = True
        Obj.Cells(16, 1).Characters(start:=12, Length:=1).Font.Superscript = True
        'Line 17
        Obj.Cells(17, 1).Value = "Jload (kgm2)"
        Obj.Cells(17, 1).Characters(start:=2, Length:=5).Font.Subscript = True
        Obj.Cells(17, 1).Characters(start:=11, Length:=1).Font.Superscript = True
        'Line 18
        Obj.Cells(18, 1).Value = "Load speed (r/min)"
        'Line 19
        Obj.Cells(19, 1).Value = "TN (Nm)"
        Obj.Cells(16, 1).Characters(start:=2, Length:=1).Font.Subscript = True
        Obj.Cells(19, 3).Value = "Speed (r/min)"
        Obj.Cells(19, 5).Value = "Speed (r/min)"
        'Line 20
        Obj.Cells(20, 1).Value = "Tload (Nm)"
        Obj.Cells(20, 1).Characters(start:=2, Length:=4).Font.Subscript = True
        Obj.Cells(20, 3).Value = "IS/IN"
        Obj.Cells(20, 3).Characters(start:=2, Length:=1).Font.Subscript = True
        Obj.Cells(20, 3).Characters(start:=5, Length:=1).Font.Subscript = True
        Obj.Cells(20, 5).Value = "IS/IN"
        Obj.Cells(20, 5).Characters(start:=2, Length:=1).Font.Subscript = True
        Obj.Cells(20, 5).Characters(start:=5, Length:=1).Font.Subscript = True
    End If
Exit Sub
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Sub

Sub FormatLoadsheet(Standard As String)
Attribute FormatLoadsheet.VB_ProcData.VB_Invoke_Func = " \n14"
    On Error GoTo ErrHandler1
    Dim CountRow As Integer
    Dim CountCol As Integer
    Dim Obj As Object
    Set Obj = Application.ActiveWorkbook.ActiveSheet
    If Standard = "NEMA" And Obj.Cells(16, 3).Value = "Current IN (Amps)" Then
        'allready formated for NEMA
        Exit Sub
    ElseIf Not Standard = "NEMA" And Obj.Cells(16, 3).Value = "Current IN (A)" Then
        'allready formated for IEC - ABB catalogue
        Exit Sub
    End If
    If Standard = "NEMA" Then
        'Line 16
        Obj.Cells(16, 3).Value = "Current IN (Amps)"
        Obj.Cells(16, 3).Characters(start:=10, Length:=1).Font.Subscript = True
        'Line 17
        Obj.Cells(17, 3).Value = "Speed (rpm)"
    Else  'IEC
        'Line 16
        Obj.Cells(16, 3).Value = "Current IN (A)"
        Obj.Cells(16, 3).Characters(start:=10, Length:=1).Font.Subscript = True
        'Line 17
        Obj.Cells(17, 3).Value = "Speed (r/min)"
    End If
Exit Sub
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Sub
Sub FormatDiagramsheet(Standard As String)
Attribute FormatDiagramsheet.VB_ProcData.VB_Invoke_Func = " \n14"
    On Error GoTo ErrHandler1
    Dim CountRow As Integer
    Dim CountCol As Integer
    Dim Obj As Object
    On Error Resume Next
    Set Obj = Application.ActiveWorkbook.ActiveSheet
    If Standard = "NEMA" And Obj.Cells(16, 3).Value = "Current IN (Amps)" Then
        'allready formated for NEMA
        Exit Sub
    ElseIf Not Standard = "NEMA" And Obj.Cells(16, 3).Value = "Current IN (A)" Then
        'allready formated for IEC - ABB catalogue
        Exit Sub
    End If
    If Standard = "NEMA" Then
        'Line 16
        Obj.Cells(16, 3).Value = "Current IN (Amps)"
        Obj.Cells(16, 3).Characters(start:=10, Length:=1).Font.Subscript = True
        'Line 17
        Obj.Cells(17, 3).Value = "Speed (rpm)"
    Else  'IEC
        'Line 16
        Obj.Cells(16, 3).Value = "Current IN (A)"
        Obj.Cells(16, 3).Characters(start:=10, Length:=1).Font.Subscript = True
        'Line 17
        Obj.Cells(17, 3).Value = "Speed (r/min)"
    End If
Exit Sub
ErrHandler1:
    If Err.Number = 1004 Then
        Dim sMsg As String
        sMsg = "The following error occurred: " & vbCrLf & Err.Description & vbCrLf & vbCrLf & "Error Location is: "
        sMsg = sMsg + Err.Source & vbCrLf & sProcname
        ' Display message
        MsgBox sMsg, Title:="Error"
    End If
    Resume Next
End Sub

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


' InQuest injected base64 decoded content
' x%y(^z
' x%y(^z
' x%y(^z
' x%y(^z

INQUEST-PP=macro
