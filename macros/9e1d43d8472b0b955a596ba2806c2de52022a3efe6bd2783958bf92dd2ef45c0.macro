Attribute VB_Name = "AutoPropsPropMgr"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Implements PropertyManagerPage2Handler2

'Variable that provides access to the PropertyManagerPage
Dim m_pageObj As AutoPropsPropMgr 'This class defines the PropertyManagerPage and its controls.
Dim myfiles As Variant

'The PropertyManagerPage
Private m_Page As PropertyManagerPage2




'Create the page and place all of the controls on it.
Private Sub Layout()
    Dim swapp As SldWorks.SldWorks

    'Objects needed to create the PropertyManagerPage
    Dim pageHdlr        As New PropertyManagerPage2Handler
'not used 11/22/2004 MJS
'    Dim swPage          As PropertyManagerPage2
    Dim swcontrol       As PropertyManagerPageControl
    Dim swControl1       As PropertyManagerPageControl
    Dim title           As String
    Dim message         As String
    Dim caption         As String
    Dim tip             As String
    Dim listItems(3)    As String
    
    Dim buttonTypes     As Long
    Dim ID              As Long
    Dim Options         As Long
    Dim filterArray(1)  As Long
    Dim errors          As Long
    
    Dim controlType     As Integer
    Dim alignment       As Integer

    
    'Access SolidWorks
    Set swapp = GetObject(, "SldWorks.Application")
    
    'Initialize the Page Handler
    'Pass it a reference to this PropertyManagerPage
    
    'Set some variables for the Page
    buttonTypes = swPropertyManager_OkayButton + swPropertyManager_CancelButton + swPropertyManagerOptions_LockedPage
   
   'Create the PropertyManagerPage
    Set m_Page = swapp.CreatePropertyManagerPage(Header, buttonTypes, Me, errors)
    
    'Make sure that it was created properly
    If errors = swPropertyManagerPage_Okay Then
        
        'Initial set up of the dialog.
        'remove licensing limitations 11/19/2004  MJS
'        lic = licensereturn
'        If lic(2) = False Then
'            message = "Demo Mode" & Chr(10) & "Only First Two Properties will be Saved"
'            m_Page.SetMessage message, swImportantMessageBox
'        End If
        

        'Begin adding the required controls to the dialog.
        'configuration box
        If config <> "" Then
            Options = swGroupBoxOptions_Visible + swGroupBoxOptions_Expanded
            Set m_group_config = m_Page.AddGroupBox(2001, "Configuration", Options)
            'CONTROL List box  --------------------------------------------------------------------
            Options = swControlOptions_Visible + swControlOptions_Enabled
            Set swcontrol = m_group_config.AddControl(2002, swControlType_Combobox, "", swControlAlign_LeftEdge, Options, "Configurations")
            If Not swcontrol Is Nothing Then
                Set m_config_combobox1 = swcontrol
                    temp = swapp.activedoc.GetConfigurationNames
                    m_config_combobox1.AddItems "<NONE>"
                    For c = 0 To UBound(temp)
                        m_config_combobox1.AddItems temp(c)
                    Next c
            End If
        End If
        Set ComboBox = Nothing
        Set TextBox = Nothing
        'GROUP BOX ------------------------------------------------------------------
        Dim firstvis As Boolean
        For i = 1 To groupcol.Count
            ID = i
            caption = Mid(groupcol.Item(i), 1)
            Options = swGroupBoxOptions_Visible + swGroupBoxOptions_Expanded  'expand all groups by default
'''            If i = 1 Then
'''                Options = Options + swGroupBoxOptions_Expanded
'''            End If
            Select Case i
                Case 1
                    Set m_Group1 = m_Page.AddGroupBox(ID, caption, Options)
                Case 2
                    Set m_Group2 = m_Page.AddGroupBox(ID, caption, Options)
                Case 3
                    Set m_Group3 = m_Page.AddGroupBox(ID, caption, Options)
                Case 4
                    Set m_Group4 = m_Page.AddGroupBox(ID, caption, Options)
                Case 5
                    Set m_Group5 = m_Page.AddGroupBox(ID, caption, Options)
                Case 6
                    Set m_Group6 = m_Page.AddGroupBox(ID, caption, Options)
                Case 7
                    Set m_Group7 = m_Page.AddGroupBox(ID, caption, Options)
                Case 8
                    Set m_Group8 = m_Page.AddGroupBox(ID, caption, Options)
            End Select
        Next i
        
        propindex = 1
        For i = 1 To propcol.Count
            Set swcontrol = Nothing
            Set swControl1 = Nothing
            
            
            
            
            caption = propcol.Item(i).Description
            On Error GoTo 0
            prop = swapp.activedoc.CustomInfo2(config, propcol.Item(i).Name)
            tip = propcol.Item(i).Description
            If propcol.Item(i).control = 1 Then
                    Options = swControlType_Combobox
                Else
                    Options = swControlType_Textbox
            End If
            Select Case Left(propcol.Item(i).Group, 1)
                Case 1
                        Set swcontrol = m_Group1.AddControl(i + 200, swControlType_Label, caption, swControlAlign_LeftEdge, 3, tip)
                        Set swControl1 = m_Group1.AddControl(i + 100, Options, prop, swControlAlign_Indent, 3, tip)
                Case 2
                        Set swcontrol = m_Group2.AddControl(i + 200, swControlType_Label, caption, swControlAlign_LeftEdge, 3, tip)
                        Set swControl1 = m_Group2.AddControl(i + 100, Options, prop, swControlAlign_Indent, 3, tip)
                Case 3
                        Set swcontrol = m_Group3.AddControl(i + 200, swControlType_Label, caption, swControlAlign_LeftEdge, 3, tip)
                        Set swControl1 = m_Group3.AddControl(i + 100, Options, prop, swControlAlign_Indent, 3, tip)
                Case 4
                        Set swcontrol = m_Group4.AddControl(i + 200, swControlType_Label, caption, swControlAlign_LeftEdge, 3, tip)
                        Set swControl1 = m_Group4.AddControl(i + 100, Options, prop, swControlAlign_Indent, 3, tip)
                Case 5
                        Set swcontrol = m_Group5.AddControl(i + 200, swControlType_Label, caption, swControlAlign_LeftEdge, 3, tip)
                        Set swControl1 = m_Group5.AddControl(i + 100, Options, prop, swControlAlign_Indent, 3, tip)
                Case 6
                        Set swcontrol = m_Group6.AddControl(i + 200, swControlType_Label, caption, swControlAlign_LeftEdge, 3, tip)
                        Set swControl1 = m_Group6.AddControl(i + 100, Options, prop, swControlAlign_Indent, 3, tip)
                Case 7
                        Set swcontrol = m_Group7.AddControl(i + 200, swControlType_Label, caption, swControlAlign_LeftEdge, 3, tip)
                        Set swControl1 = m_Group7.AddControl(i + 100, Options, prop, swControlAlign_Indent, 3, tip)
                Case 8
                        Set swcontrol = m_Group8.AddControl(i + 200, swControlType_Label, caption, swControlAlign_LeftEdge, 3, tip)
                        Set swControl1 = m_Group8.AddControl(i + 100, Options, prop, swControlAlign_Indent, 3, tip)
                        
            End Select
            Select Case propindex
                Case 1
                    Set m_Label1 = swcontrol
                Case 2
                    Set m_Label2 = swcontrol
                Case 3
                    Set m_Label3 = swcontrol
                Case 4
                    Set m_Label4 = swcontrol
                Case 5
                    Set m_Label5 = swcontrol
                Case 6
                    Set m_Label6 = swcontrol
                Case 7
                    Set m_Label7 = swcontrol
                Case 8
                    Set m_Label8 = swcontrol
                Case 9
                    Set m_Label9 = swcontrol
                Case 10
                    Set m_Label10 = swcontrol
                Case 11
                    Set m_Label11 = swcontrol
                Case 12
                    Set m_Label12 = swcontrol
                Case 13
                    Set m_Label13 = swcontrol
                Case 14
                    Set m_Label14 = swcontrol
                Case 15
                    Set m_Label15 = swcontrol
                Case 16
                    Set m_Label16 = swcontrol
                Case 17
                    Set m_Label17 = swcontrol
                Case 18
                    Set m_Label18 = swcontrol
                Case 19
                    Set m_Label19 = swcontrol
                Case 20
                    Set m_Label20 = swcontrol
                Case 21
                    Set m_Label21 = swcontrol
                Case 22
                    Set m_Label22 = swcontrol
                Case 23
                    Set m_Label23 = swcontrol
                Case 24
                    Set m_Label24 = swcontrol
                Case 25
                    Set m_Label25 = swcontrol
                Case 26
                    Set m_Label26 = swcontrol
                Case 27
                    Set m_Label27 = swcontrol
                Case 28
                    Set m_Label28 = swcontrol
                Case 29
                    Set m_Label29 = swcontrol
                Case 30
                    Set m_Label30 = swcontrol
                Case 31
                    Set m_Label31 = swcontrol
                Case 32
                    Set m_Label32 = swcontrol
                Case 33
                    Set m_Label33 = swcontrol
                Case 34
                    Set m_Label34 = swcontrol
                Case 35
                    Set m_Label35 = swcontrol
                Case 36
                    Set m_Label36 = swcontrol
                Case 37
                    Set m_Label37 = swcontrol
                Case 38
                    Set m_Label38 = swcontrol
                Case 39
                    Set m_Label39 = swcontrol
                Case 40
                    Set m_Label40 = swcontrol
                Case 41
                    Set m_label41 = swcontrol
                Case 42
                    Set m_label42 = swcontrol
                Case 43
                    Set m_label43 = swcontrol
                Case 44
                    Set m_Label44 = swcontrol
                Case 45
                    Set m_Label45 = swcontrol
                Case 46
                    Set m_Label46 = swcontrol
                Case 47
                    Set m_Label47 = swcontrol
                Case 48
                    Set m_Label48 = swcontrol
                Case 49
                    Set m_Label49 = swcontrol
                Case 50
                    Set m_Label50 = swcontrol
                Case 51
                    Set m_label51 = swcontrol
                Case 52
                    Set m_label52 = swcontrol
                Case 53
                    Set m_label53 = swcontrol
                Case 54
                    Set m_Label54 = swcontrol
                Case 55
                    Set m_Label55 = swcontrol
                Case 56
                    Set m_Label56 = swcontrol
                Case 57
                    Set m_Label57 = swcontrol
                Case 58
                    Set m_Label58 = swcontrol
                Case 59
                    Set m_Label59 = swcontrol
                Case 60
                    Set m_Label60 = swcontrol
                Case 61
                    Set m_label61 = swcontrol
                Case 62
                    Set m_label62 = swcontrol
                Case 63
                    Set m_label63 = swcontrol
                Case 64
                    Set m_Label64 = swcontrol
                Case 65
                    Set m_Label65 = swcontrol
                Case 66
                    Set m_Label66 = swcontrol
                Case 67
                    Set m_Label67 = swcontrol
                Case 68
                    Set m_Label68 = swcontrol
                Case 69
                    Set m_Label69 = swcontrol
                Case 70
                    Set m_Label70 = swcontrol
                Case 71
                    Set m_label71 = swcontrol
                Case 72
                    Set m_label72 = swcontrol
                Case 73
                    Set m_label73 = swcontrol
                Case 74
                    Set m_Label74 = swcontrol
                Case 75
                    Set m_Label75 = swcontrol
                Case 76
                    Set m_Label76 = swcontrol
                Case 77
                    Set m_Label77 = swcontrol
                Case 78
                    Set m_Label78 = swcontrol
                Case 79
                    Set m_Label79 = swcontrol
                Case 80
                    Set m_Label80 = swcontrol
                Case 81
                    Set m_label81 = swcontrol
                Case 82
                    Set m_label82 = swcontrol
                Case 83
                    Set m_label83 = swcontrol
                Case 84
                    Set m_Label84 = swcontrol
                Case 85
                    Set m_Label85 = swcontrol
                Case 86
                    Set m_Label86 = swcontrol
                Case 87
                    Set m_Label87 = swcontrol
                Case 88
                    Set m_Label88 = swcontrol
                Case 89
                    Set m_Label89 = swcontrol
                Case 90
                    Set m_Label90 = swcontrol
                Case 91
                    Set m_label91 = swcontrol
                Case 92
                    Set m_label92 = swcontrol
                Case 93
                    Set m_label93 = swcontrol
                Case 94
                    Set m_Label94 = swcontrol
                Case 95
                    Set m_Label95 = swcontrol
                Case 96
                    Set m_Label96 = swcontrol
                Case 97
                    Set m_Label97 = swcontrol
                Case 98
                    Set m_Label98 = swcontrol
                Case 99
                    Set m_Label99 = swcontrol
                Case 100
                    Set m_Label100 = swcontrol
            End Select
            Set propcol.Item(i).swcontrol = swControl1
            If propcol.Item(i).control = 1 Then
                    Dim fs As Object
                    Dim f As Object
                    Dim tempcol As New Collection
                    Set tempcol = Nothing
                    
                    Set fs = CreateObject("Scripting.FileSystemObject")
                    fname1 = stripname(fname)
                
                    If fs.FileExists(fname1 & "\" & propcol.Item(i).listname) = True Then
                        Set f = fs.opentextfile(fname1 & "\" & propcol.Item(i).listname)
                        If Not f Is Nothing Then
                            While Not f.atendofstream
                                tempcol.Add f.readline
                            Wend
                        End If
                    End If
                    
                    Select Case propindex
                        Case 1
                            Set m_Combobox1 = swControl1
                            addtolists m_Combobox1, tempcol, i
                        Case 2
                            Set m_Combobox2 = swControl1
                            addtolists m_Combobox2, tempcol, i
                        Case 3
                            Set m_Combobox3 = swControl1
                            addtolists m_Combobox3, tempcol, i
                        Case 4
                            Set m_Combobox4 = swControl1
                            addtolists m_Combobox4, tempcol, i
                        Case 5
                            Set m_Combobox5 = swControl1
                            addtolists m_Combobox5, tempcol, i
                        Case 6
                            Set m_Combobox6 = swControl1
                            addtolists m_Combobox6, tempcol, i
                        Case 7
                            Set m_Combobox7 = swControl1
                            addtolists m_Combobox7, tempcol, i
                        Case 8
                            Set m_Combobox8 = swControl1
                            addtolists m_Combobox8, tempcol, i
                        Case 9
                            Set m_Combobox9 = swControl1
                            addtolists m_Combobox9, tempcol, i
                        Case 10
                            Set m_Combobox10 = swControl1
                            addtolists m_Combobox10, tempcol, i
                        Case 11
                            Set m_Combobox11 = swControl1
                            addtolists m_Combobox11, tempcol, i
                        Case 12
                            Set m_Combobox12 = swControl1
                            addtolists m_Combobox12, tempcol, i
                        Case 13
                            Set m_Combobox13 = swControl1
                            addtolists m_Combobox13, tempcol, i
                        Case 14
                            Set m_Combobox14 = swControl1
                            addtolists m_Combobox14, tempcol, i
                        Case 15
                            Set m_Combobox15 = swControl1
                            addtolists m_Combobox15, tempcol, i
                        Case 16
                            Set m_Combobox16 = swControl1
                            addtolists m_Combobox16, tempcol, i
                        Case 17
                            Set m_Combobox17 = swControl1
                            addtolists m_Combobox17, tempcol, i
                        Case 18
                            Set m_Combobox18 = swControl1
                            addtolists m_Combobox18, tempcol, i
                        Case 19
                            Set m_Combobox19 = swControl1
                            addtolists m_Combobox19, tempcol, i
                        Case 20
                            Set m_Combobox20 = swControl1
                            addtolists m_Combobox20, tempcol, i
                        Case 21
                            Set m_Combobox21 = swControl1
                            addtolists m_Combobox21, tempcol, i
                        Case 22
                            Set m_Combobox22 = swControl1
                            addtolists m_Combobox22, tempcol, i
                        Case 23
                            Set m_Combobox23 = swControl1
                            addtolists m_Combobox23, tempcol, i
                        Case 24
                            Set m_Combobox24 = swControl1
                            addtolists m_Combobox24, tempcol, i
                        Case 25
                            Set m_Combobox25 = swControl1
                            addtolists m_Combobox25, tempcol, i
                        Case 26
                            Set m_Combobox26 = swControl1
                            addtolists m_Combobox26, tempcol, i
                        Case 27
                            Set m_Combobox27 = swControl1
                            addtolists m_Combobox27, tempcol, i
                        Case 28
                            Set m_Combobox28 = swControl1
                            addtolists m_Combobox28, tempcol, i
                        Case 29
                            Set m_Combobox29 = swControl1
                            addtolists m_Combobox29, tempcol, i
                        Case 30
                            Set m_Combobox30 = swControl1
                            addtolists m_Combobox30, tempcol, i
                        Case 41
                            Set m_Combobox41 = swControl1
                            addtolists m_Combobox41, tempcol, i
                        Case 42
                            Set m_Combobox42 = swControl1
                            addtolists m_Combobox42, tempcol, i
                        Case 43
                            Set m_Combobox43 = swControl1
                            addtolists m_Combobox43, tempcol, i
                        Case 44
                            Set m_Combobox44 = swControl1
                            addtolists m_Combobox44, tempcol, i
                        Case 45
                            Set m_Combobox45 = swControl1
                            addtolists m_Combobox45, tempcol, i
                        Case 46
                            Set m_Combobox46 = swControl1
                            addtolists m_Combobox46, tempcol, i
                        Case 47
                            Set m_Combobox47 = swControl1
                            addtolists m_Combobox47, tempcol, i
                        Case 48
                            Set m_Combobox48 = swControl1
                            addtolists m_Combobox48, tempcol, i
                        Case 49
                            Set m_Combobox49 = swControl1
                            addtolists m_Combobox49, tempcol, i
                        Case 50
                            Set m_Combobox50 = swControl1
                            addtolists m_Combobox50, tempcol, i
                        Case 51
                            Set m_Combobox51 = swControl1
                            addtolists m_Combobox51, tempcol, i
                        Case 52
                            Set m_Combobox52 = swControl1
                            addtolists m_Combobox52, tempcol, i
                        Case 53
                            Set m_Combobox53 = swControl1
                            addtolists m_Combobox53, tempcol, i
                        Case 54
                            Set m_Combobox54 = swControl1
                            addtolists m_Combobox54, tempcol, i
                        Case 55
                            Set m_Combobox55 = swControl1
                            addtolists m_Combobox55, tempcol, i
                        Case 56
                            Set m_Combobox56 = swControl1
                            addtolists m_Combobox56, tempcol, i
                        Case 57
                            Set m_Combobox57 = swControl1
                            addtolists m_Combobox57, tempcol, i
                        Case 58
                            Set m_Combobox58 = swControl1
                            addtolists m_Combobox58, tempcol, i
                        Case 59
                            Set m_Combobox59 = swControl1
                            addtolists m_Combobox59, tempcol, i
                        Case 60
                            Set m_Combobox60 = swControl1
                            addtolists m_Combobox60, tempcol, i
                        Case 61
                            Set m_Combobox61 = swControl1
                            addtolists m_Combobox61, tempcol, i
                        Case 62
                            Set m_Combobox62 = swControl1
                            addtolists m_Combobox62, tempcol, i
                        Case 63
                            Set m_Combobox63 = swControl1
                            addtolists m_Combobox63, tempcol, i
                        Case 64
                            Set m_Combobox64 = swControl1
                            addtolists m_Combobox64, tempcol, i
                        Case 65
                            Set m_Combobox65 = swControl1
                            addtolists m_Combobox65, tempcol, i
                        Case 66
                            Set m_Combobox66 = swControl1
                            addtolists m_Combobox66, tempcol, i
                        Case 67
                            Set m_Combobox67 = swControl1
                            addtolists m_Combobox67, tempcol, i
                        Case 68
                            Set m_Combobox68 = swControl1
                            addtolists m_Combobox68, tempcol, i
                        Case 69
                            Set m_Combobox69 = swControl1
                            addtolists m_Combobox69, tempcol, i
                        Case 70
                            Set m_Combobox70 = swControl1
                            addtolists m_Combobox70, tempcol, i
                        Case 71
                            Set m_Combobox71 = swControl1
                            addtolists m_Combobox71, tempcol, i
                        Case 72
                            Set m_Combobox72 = swControl1
                            addtolists m_Combobox72, tempcol, i
                        Case 73
                            Set m_Combobox73 = swControl1
                            addtolists m_Combobox73, tempcol, i
                        Case 74
                            Set m_Combobox74 = swControl1
                            addtolists m_Combobox74, tempcol, i
                        Case 75
                            Set m_Combobox75 = swControl1
                            addtolists m_Combobox75, tempcol, i
                        Case 76
                            Set m_Combobox76 = swControl1
                            addtolists m_Combobox76, tempcol, i
                        Case 77
                            Set m_Combobox77 = swControl1
                            addtolists m_Combobox77, tempcol, i
                        Case 78
                            Set m_Combobox78 = swControl1
                            addtolists m_Combobox78, tempcol, i
                        Case 79
                            Set m_Combobox79 = swControl1
                            addtolists m_Combobox79, tempcol, i
                        Case 80
                            Set m_Combobox80 = swControl1
                            addtolists m_Combobox80, tempcol, i
                        Case 81
                            Set m_Combobox81 = swControl1
                            addtolists m_Combobox81, tempcol, i
                        Case 82
                            Set m_Combobox82 = swControl1
                            addtolists m_Combobox82, tempcol, i
                        Case 83
                            Set m_Combobox83 = swControl1
                            addtolists m_Combobox83, tempcol, i
                        Case 84
                            Set m_Combobox84 = swControl1
                            addtolists m_Combobox84, tempcol, i
                        Case 85
                            Set m_Combobox85 = swControl1
                            addtolists m_Combobox85, tempcol, i
                        Case 86
                            Set m_Combobox86 = swControl1
                            addtolists m_Combobox86, tempcol, i
                        Case 87
                            Set m_Combobox87 = swControl1
                            addtolists m_Combobox87, tempcol, i
                        Case 88
                            Set m_Combobox88 = swControl1
                            addtolists m_Combobox88, tempcol, i
                        Case 89
                            Set m_Combobox89 = swControl1
                            addtolists m_Combobox89, tempcol, i
                        Case 90
                            Set m_Combobox90 = swControl1
                            addtolists m_Combobox90, tempcol, i
                        Case 91
                            Set m_Combobox91 = swControl1
                            addtolists m_Combobox91, tempcol, i
                        Case 92
                            Set m_Combobox92 = swControl1
                            addtolists m_Combobox92, tempcol, i
                        Case 93
                            Set m_Combobox93 = swControl1
                            addtolists m_Combobox93, tempcol, i
                        Case 94
                            Set m_Combobox94 = swControl1
                            addtolists m_Combobox94, tempcol, i
                        Case 95
                            Set m_Combobox95 = swControl1
                            addtolists m_Combobox95, tempcol, i
                        Case 96
                            Set m_Combobox96 = swControl1
                            addtolists m_Combobox96, tempcol, i
                        Case 97
                            Set m_Combobox97 = swControl1
                            addtolists m_Combobox97, tempcol, i
                        Case 98
                            Set m_Combobox98 = swControl1
                            addtolists m_Combobox98, tempcol, i
                        Case 99
                            Set m_Combobox99 = swControl1
                            addtolists m_Combobox99, tempcol, i
                        Case 100
                            Set m_Combobox100 = swControl1
                            addtolists m_Combobox100, tempcol, i
                    End Select

                Else
                    
                    Select Case propindex
                        Case 1
                            Set m_Text1 = swControl1
                        Case 2
                            Set m_Text2 = swControl1
                        Case 3
                            Set m_Text3 = swControl1
                        Case 4
                            Set m_Text4 = swControl1
                        Case 5
                            Set m_Text5 = swControl1
                        Case 6
                            Set m_Text6 = swControl1
                        Case 7
                            Set m_Text7 = swControl1
                        Case 8
                            Set m_Text8 = swControl1
                        Case 9
                            Set m_Text9 = swControl1
                        Case 10
                            Set m_Text10 = swControl1
                        Case 11
                            Set m_Text11 = swControl1
                        Case 12
                            Set m_Text12 = swControl1
                        Case 13
                            Set m_Text13 = swControl1
                        Case 14
                            Set m_Text14 = swControl1
                        Case 15
                            Set m_Text15 = swControl1
                        Case 16
                            Set m_Text16 = swControl1
                        Case 17
                            Set m_Text17 = swControl1
                        Case 18
                            Set m_Text18 = swControl1
                        Case 19
                            Set m_Text19 = swControl1
                        Case 20
                            Set m_Text20 = swControl1
                        Case 21
                            Set m_Text21 = swControl1
                        Case 22
                            Set m_Text22 = swControl1
                        Case 23
                            Set m_Text23 = swControl1
                        Case 24
                            Set m_Text24 = swControl1
                        Case 25
                            Set m_Text25 = swControl1
                        Case 26
                            Set m_Text26 = swControl1
                        Case 27
                            Set m_Text27 = swControl1
                        Case 28
                            Set m_Text28 = swControl1
                        Case 29
                            Set m_Text29 = swControl1
                        Case 30
                            Set m_Text30 = swControl1
                        Case 31
                            Set m_Text31 = swControl1
                        Case 32
                            Set m_Text32 = swControl1
                        Case 33
                            Set m_Text33 = swControl1
                        Case 34
                            Set m_Text34 = swControl1
                        Case 35
                            Set m_Text35 = swControl1
                        Case 36
                            Set m_Text36 = swControl1
                        Case 37
                            Set m_Text37 = swControl1
                        Case 38
                            Set m_Text38 = swControl1
                        Case 39
                            Set m_Text39 = swControl1
                        Case 40
                            Set m_Text40 = swControl1
                        Case 41
                            Set m_Text41 = swControl1
                        Case 42
                            Set m_Text42 = swControl1
                        Case 43
                            Set m_Text43 = swControl1
                        Case 44
                            Set m_Text44 = swControl1
                        Case 45
                            Set m_Text45 = swControl1
                        Case 46
                            Set m_Text46 = swControl1
                        Case 47
                            Set m_Text47 = swControl1
                        Case 48
                            Set m_Text48 = swControl1
                        Case 49
                            Set m_Text49 = swControl1
                        Case 50
                            Set m_Text50 = swControl1
                        Case 51
                            Set m_Text51 = swControl1
                        Case 52
                            Set m_Text52 = swControl1
                        Case 53
                            Set m_Text53 = swControl1
                        Case 54
                            Set m_Text54 = swControl1
                        Case 55
                            Set m_Text55 = swControl1
                        Case 56
                            Set m_Text56 = swControl1
                        Case 57
                            Set m_Text57 = swControl1
                        Case 58
                            Set m_Text58 = swControl1
                        Case 59
                            Set m_Text59 = swControl1
                        Case 60
                            Set m_Text60 = swControl1
                        Case 61
                            Set m_Text61 = swControl1
                        Case 62
                            Set m_Text62 = swControl1
                        Case 63
                            Set m_Text63 = swControl1
                        Case 64
                            Set m_Text64 = swControl1
                        Case 65
                            Set m_Text65 = swControl1
                        Case 66
                            Set m_Text66 = swControl1
                        Case 67
                            Set m_Text67 = swControl1
                        Case 68
                            Set m_Text68 = swControl1
                        Case 69
                            Set m_Text69 = swControl1
                        Case 70
                            Set m_Text70 = swControl1
                        Case 71
                            Set m_Text71 = swControl1
                        Case 72
                            Set m_Text72 = swControl1
                        Case 73
                            Set m_Text73 = swControl1
                        Case 74
                            Set m_Text74 = swControl1
                        Case 75
                            Set m_Text75 = swControl1
                        Case 76
                            Set m_Text76 = swControl1
                        Case 77
                            Set m_Text77 = swControl1
                        Case 78
                            Set m_Text78 = swControl1
                        Case 79
                            Set m_Text79 = swControl1
                        Case 80
                            Set m_Text80 = swControl1
                        Case 81
                            Set m_Text81 = swControl1
                        Case 82
                            Set m_Text82 = swControl1
                        Case 83
                            Set m_Text83 = swControl1
                        Case 84
                            Set m_Text84 = swControl1
                        Case 85
                            Set m_Text85 = swControl1
                        Case 86
                            Set m_Text86 = swControl1
                        Case 87
                            Set m_Text87 = swControl1
                        Case 88
                            Set m_Text88 = swControl1
                        Case 89
                            Set m_Text89 = swControl1
                        Case 90
                            Set m_Text90 = swControl1
                        Case 91
                            Set m_Text91 = swControl1
                        Case 92
                            Set m_Text92 = swControl1
                        Case 93
                            Set m_Text93 = swControl1
                        Case 94
                            Set m_Text94 = swControl1
                        Case 95
                            Set m_Text95 = swControl1
                        Case 96
                            Set m_Text96 = swControl1
                        Case 97
                            Set m_Text97 = swControl1
                        Case 98
                            Set m_Text98 = swControl1
                        Case 99
                            Set m_Text99 = swControl1
                        Case 100
                            Set m_Text100 = swControl1
                    End Select
            End If
            propindex = propindex + 1
        Next i
        
'''   Removed MaterialWorks functions 1/10/2005  MJS
'''        'materialworks area
'''        If MW Then
'''            lic = licensereturn
'''            If lic(0) = True Then
'''                    Options = swGroupBoxOptions_Visible
'''                    Set m_Group_MW = m_Page.AddGroupBox(3001, "MaterialWorks", Options)
'''                    'label
'''                    Options = swControlOptions_Visible + swControlOptions_Enabled
'''                    Set m_MW_label1 = m_Group_MW.AddControl(3021, swControlType_Label, "Library", swControlAlign_LeftEdge, Options, "Library")
'''                    'combobox
'''
'''                    Set swcontrol = m_Group_MW.AddControl(3002, swControlType_Combobox, "Libraries", swControlAlign_LeftEdge, Options, "Library Files")
'''                    If Not swcontrol Is Nothing Then
'''                        Set m_MW_Library = swcontrol
'''                    End If
'''                    'label
'''                    Set m_mw_label2 = m_Group_MW.AddControl(3022, swControlType_Label, "Material", swControlAlign_LeftEdge, Options, "Material")
'''                    'combobox
'''                    Set swcontrol = m_Group_MW.AddControl(3003, swControlType_Combobox, "Material", swControlAlign_LeftEdge, Options, "Material")
'''                    If Not swcontrol Is Nothing Then
'''                        Set m_MW_Material = swcontrol
'''                    End If
'''                Else
'''                    MW = False
'''            End If
'''        End If
        
        'other properties area
        retval = swapp.activedoc.GetCustomInfoNames2("")
        findoldprops (retval)
        If othercol.Count <> 0 Then
            Options = swGroupBoxOptions_Visible
            Set m_Group_Other = m_Page.AddGroupBox(1001, "Other Properties", Options)
            'CONTROL List box  --------------------------------------------------------------------
            Options = swControlOptions_Visible + swControlOptions_Enabled
            Set swcontrol = m_Group_Other.AddControl(1002, swControlType_Listbox, "Properties", swControlAlign_LeftEdge, Options, "Other Propeties")
            If Not swcontrol Is Nothing Then
                Set m_other_list1 = swcontrol
    
                m_other_list1.Height = 10 + ((othercol.Count + 1) * 9)
                'listItems(0) = "One Fish": listItems(1) = "Two Fish": listItems(2) = "Red Fish": listItems(3) = "Blue Fish"
                For i = 1 To othercol.Count
                    m_other_list1.AddItems othercol.Item(i)
                Next i
            End If
            Options = swControlOptions_Visible + swControlOptions_Enabled
            Set swcontrol = m_Group_Other.AddControl(1003, swControlType_Textbox, "", swControlAlign_LeftEdge, Options, "Selected Custom Property")
            If Not swcontrol Is Nothing Then
                Set m_Other_text1 = swcontrol
                m_Other_text1.text = swapp.activedoc.CustomInfo2("", m_other_list1.ItemText(m_other_list1.CurrentSelection))
            End If
            'CONTROL Button --------------------------------------------------------------------
            Options = swControlOptions_Visible + swControlOptions_Enabled
            Set swcontrol = m_Group_Other.AddControl(1004, swControlType_Button, "Modify", swControlAlign_LeftEdge, Options, "Modify Selected Property")
            If Not swcontrol Is Nothing Then
                Set m_other_button1 = swcontrol
            End If
        End If

    Else
        swapp.SendMsgToUser2 "There was an error creating the Property Manager Page", swMbInformation, swMbOk
    End If
End Sub
Function addtolists(swcontrol As PropertyManagerPageCombobox, coll As Collection, num)
    'swcontrol.AddItems ""
    oldprop = swapp.activedoc.CustomInfo2(config, propcol.Item(num).Name)
    swcontrol.AddItems oldprop
    For i = 1 To coll.Count
        swcontrol.AddItems coll.Item(i)
        If oldprop = coll.Item(i) Then
            swcontrol.CurrentSelection = i
        End If
    Next i
End Function

'Display the Property Manager Page
Public Sub Show()
    m_Page.Show
    If config <> "" Then
        temp = swapp.activedoc.GetConfigurationNames
        For i = 0 To UBound(temp)
            If config = temp(i) Then
                m_config_combobox1.CurrentSelection = i + 1
            End If
        Next i
    End If
    resetvalues

    'GetSettings
    'index = 1
    'For i = 1 To propcol.Count
    '    If propcol.Item(i).control = 1 Then
    '        oldprop = swApp.ActiveDoc.CustomInfo2("", propcol.Item(i).Name)
    '        Set tempcol = combocol.Item(index + 1)
    '        Set swcontrol = combocol.Item(index)
    '        For d = 1 To tempcol.Count
    '            If oldprop = tempcol.Item(d) Then
    '                swcontrol.CurrentSelection = d
    '                d = tempcol.Count
    '            End If
    '        Next d
    '        index = index + 2
    '    End If
    'Next i
End Sub

'Generate the PropertyManagrePage and it's controls
Private Sub Class_Initialize()
    Layout
End Sub

'Callback that is called by PropertyManagerPage2Handler2_OnButtonPress
'in the PropertyManagerPage2Handler class.
'This implementation just clears the selections.
Public Sub OnButtonPressed(ByVal ID As Long)
    Dim swapp As SldWorks.SldWorks
    Dim swModel As ModelDoc2

    If ID = ID_BUTTON Then
        Set swapp = GetObject(, "SldWorks.Application")
        Set swModel = swapp.activedoc
        swModel.ClearSelection
    End If
End Sub




'This method is called to initialize the Handler
Public Sub Init(pageObj As AutoPropsPropMgr)
    Set m_pageObj = pageObj
End Sub


Private Function PropertyManagerPage2Handler2_OnActiveXControlCreated(ByVal ID As Long, ByVal Status As Boolean) As Long

End Function

'******************************************************************************'
'These methods are the implementations of the SolidWorks notifications
Private Sub PropertyManagerPage2Handler2_OnButtonPress(ByVal ID As Long)
    Select Case ID
        Case 1004 'modify button for other properties group
            swapp.activedoc.DeleteCustomInfo2 "", othercol.Item(m_other_list1.CurrentSelection + 1)
            swapp.activedoc.AddCustomInfo3 "", othercol.Item(m_other_list1.CurrentSelection + 1), 30, m_Other_text1.text
    End Select
End Sub

Private Sub PropertyManagerPage2Handler2_OnCancel()

End Sub
Private Sub PropertyManagerPage2Handler2_OnClose(ByVal lval As Long)
Dim temp As Variant
Dim propval As Variant
Dim i As Variant

    If lval = swPropertyManagerPageClose_Okay Then
        'do something here to save settings and tell the afterclose event
        'that everything was OK
        ChoseOK = True
        'removed material works reference 1/10/2005 MJS
        'matSel = m_MW_Material.CurrentSelection
        '***********************************************************************
        Dim many As Integer  'internal counter for number of properties
            'removed license info 11/19/2004 MJS
        '        lic = licensereturn
        '        If lic(2) = True Then
                        many = propcol.Count
        '            Else
        '                many = 2
        '        End If
        
        For i = 1 To many
            If propcol.Item(i).control = 1 Then
                    Dim swcontrol As PropertyManagerPageCombobox
                    Set swcontrol = propcol.Item(i).swcontrol
                    propval = swcontrol.ItemText(swcontrol.CurrentSelection)
                    swapp.activedoc.DeleteCustomInfo2 config, propcol.Item(i).Name
                    swapp.activedoc.AddCustomInfo3 config, propcol.Item(i).Name, 30, propval
                Else
                    'textcol.Item(i).Text = "WOW!!"
                    propval = propcol.Item(i).swcontrol.text
                    swapp.activedoc.DeleteCustomInfo2 config, propcol.Item(i).Name
                    swapp.activedoc.AddCustomInfo3 config, propcol.Item(i).Name, 30, propval
                    
            End If
            
        Next i
'''  Disabled materialworks functions 1/4/2005 MJS
'''        i = matSel
'''        Dim inifile As New inisettings
'''        Set inifile = inicol.Item(i)
'''        SetDensity inifile.MatlDens, inifile.MatlName
'''        temp = swapp.activedoc.MaterialPropertyValues
'''        If inifile.MatlR <> 255 And inifile.MatlG <> 255 And inifile.MatlB <> 255 Then
'''            temp(0) = inifile.MatlR / 255
'''            temp(1) = inifile.MatlG / 255
'''            temp(2) = inifile.MatlB / 255
'''        End If
'''        temp(3) = inifile.MatlAmbient
'''        temp(4) = inifile.MatlDiffuse
'''        temp(5) = inifile.MatlSpecularity
'''        temp(6) = inifile.MatlShininess
'''        temp(7) = inifile.MatlTransparency
'''        temp(8) = inifile.MatlEmission
'''        swapp.activedoc.MaterialPropertyValues = temp
'''        swapp.activedoc.EditRebuild3
'''        '***********************************************************************
    Else
        ChoseOK = False
    End If
End Sub
Private Sub PropertyManagerPage2Handler2_AfterClose()
'destroy objects
'added 11/22/2004  MJS
Set m_pageObj = Nothing

End Sub

Private Sub PropertyManagerPage2Handler2_OnCheckboxCheck(ByVal ID As Long, ByVal Checked As Boolean)

End Sub

Private Sub PropertyManagerPage2Handler2_OnComboboxEditChanged(ByVal ID As Long, ByVal text As String)

End Sub

Private Sub PropertyManagerPage2Handler2_OnComboboxSelectionChanged(ByVal ID As Long, ByVal Item As Long)
    Select Case ID
        Case 2002 'configuration combobox change
            If Item = 0 Then
                    config = ""
                Else
                    temp = swapp.activedoc.GetConfigurationNames
                    config = temp(Item - 1)
            End If
            resetvalues
        Case 3002
            GetSettings
    End Select
End Sub
Private Sub PropertyManagerPage2Handler2_OnGroupCheck(ByVal ID As Long, ByVal Checked As Boolean)

End Sub

Private Sub PropertyManagerPage2Handler2_OnGroupExpand(ByVal ID As Long, ByVal Expanded As Boolean)

End Sub

Private Function PropertyManagerPage2Handler2_OnHelp() As Boolean
    Dim HelpFile As String
    HelpFile = MyPath & "\goutils.chm"
    HtmlHelp hwnd, HelpFile, HH_DISPLAY_TOPIC, ByVal "AutoProps.htm"
End Function

Private Sub PropertyManagerPage2Handler2_OnListboxSelectionChanged(ByVal ID As Long, ByVal Item As Long)
    Select Case ID
        Case 1002 'other properties list box
            m_Other_text1.text = swapp.activedoc.CustomInfo2("", othercol.Item(Item + 1))
    End Select
End Sub

Private Function PropertyManagerPage2Handler2_OnNextPage() As Boolean

End Function

Private Function PropertyManagerPage2Handler2_OnPreviousPage() As Boolean

End Function

Private Sub PropertyManagerPage2Handler2_OnSelectionboxCalloutCreated(ByVal ID As Long)

End Sub

Private Sub PropertyManagerPage2Handler2_OnSelectionboxCalloutDestroyed(ByVal ID As Long)

End Sub

Private Sub PropertyManagerPage2Handler2_OnSelectionboxListChanged(ByVal ID As Long, ByVal Item As Long)

End Sub


Private Sub PropertyManagerPage2Handler2_OnNumberboxChanged(ByVal ID As Long, ByVal Value As Double)

End Sub

Private Sub PropertyManagerPage2Handler2_OnOK()

End Sub

Private Sub PropertyManagerPage2Handler2_OnOptionCheck(ByVal ID As Long)

End Sub

Private Sub PropertyManagerPage2Handler2_OnSelectionboxFocusChanged(ByVal ID As Long)

End Sub

Private Sub PropertyManagerPage2Handler2_OnTextboxChanged(ByVal ID As Long, ByVal text As String)

End Sub


Private Sub GetLibraries()
Dim cnt  As Integer
Dim swx As SldWorks.SldWorks
ReDim myfiles(0)
cnt = 0

Set swx = GetObject(, "sldworks.application")
' Display the names in C:\ that represent directories.
'MyPath = "c:\"    ' Set the path.

'MyPath = Left(swx.GetCurrentMacroPathName, Len(swx.GetCurrentMacroPathName) - 13)
MyPath = MyPath & "\"
'MsgBox MyPath
Dim fs As Object
Dim f As Object
Set fs = CreateObject("Scripting.FileSystemObject")
Set f = fs.GetFolder(MyPath)
If Not f Is Nothing Then
    Set fc = f.Files
    For Each f1 In fc
        If UCase(Right(f1.Name, 3)) = "LIB" Then
            myfiles(UBound(myfiles)) = f1.Name
            ReDim Preserve myfiles(UBound(myfiles) + 1)
        End If
        's = s & f1.Name
        's = s & vbCrLf
    Next
End If
ReDim Preserve myfiles(UBound(myfiles) - 1)

m_MW_Library.Clear
For i = 0 To UBound(myfiles)
    m_MW_Library.AddItems myfiles(i)
Next i
End Sub

Private Sub GetSettings()
Dim i As Integer
Dim temparr(0 To 10) As Variant
On Error Resume Next
Set inicol = Nothing
MyPath = fname & "\" & myfiles(m_MW_Library.CurrentSelection)
If MyPath = "" Then
    Exit Sub
End If
Set fs = CreateObject("Scripting.FileSystemObject")
If fs.FileExists(MyPath) = True Then
        Open MyPath For Input As #1 'Random As #1 '
    Else
        Exit Sub
End If

If Err <> 0 Then
    MsgBox "Settings file not found.", vbExclamation
    Exit Sub
End If
i = 1
On Error Resume Next
Dim inifile As New inisettings
Do While Not EOF(1)
    Input #1, temparr(0), temparr(1), temparr(2), temparr(3), temparr(4), _
              temparr(5), temparr(6), temparr(7), temparr(8), _
              temparr(9), temparr(10)
    inifile.MatlName = temparr(0)
    inifile.MatlDens = temparr(1)
    inifile.MatlR = temparr(2)
    inifile.MatlG = temparr(3)
    inifile.MatlB = temparr(4)
    inifile.MatlAmbient = temparr(5)
    inifile.MatlDiffuse = temparr(6)
    inifile.MatlShininess = temparr(7)
    inifile.MatlSpecularity = temparr(8)
    inifile.MatlTransparency = temparr(9)
    inifile.MatlEmission = temparr(10)
    inicol.Add inifile
    Set inifile = Nothing
    i = i + 1
Loop
On Error GoTo 0
Close #1

m_MW_Material.Clear
temp = swapp.activedoc.CustomInfo2(config, "Material")
m_MW_Material.AddItems temp
For i = 1 To inicol.Count
    m_MW_Material.AddItems inicol.Item(i).MatlName
Next i
m_MW_Material.CurrentSelection = 0
''''For I = 1 To UBound(iniFile.MatlDens)
''''
''''    'Form1.Combo1.AddItem iniFile.MatlName(I), (I - 1)
''''    'Form1.Text1.AddItem iniFile.MatlDens(i), (i - 1)
''''    MyDens(I - 1) = iniFile.MatlDens(I)
''''Next I

End Sub
Public Sub SetDensity(MyDensity As Double, strMaterial As String)
Dim swapp As SldWorks.SldWorks
Dim Part As Object

Set swapp = GetObject(, "SldWorks.Application")
Set Part = swapp.activedoc

    retval = Part.SetUserPreferenceDoubleValue(swMaterialPropertyDensity, MyDensity * 2769.9)
    Part.DeleteCustomInfo2 "", "Material"
    retval2 = Part.AddCustomInfo3("", "Material", swCustomInfoText, strMaterial)
    If retval = False Then MsgBox "Failed to set value for " & strMaterial
    If retval2 = False Then MsgBox "Failed to set Material type for " & strMaterial
Part.EditRebuild
End Sub


Attribute VB_Name = "AutoPropsUserProp"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public Description As String
Public Name As String
Public Group As String
Public control As Integer
Public listname As String
Public swcontrol As Object

Attribute VB_Name = "Macro11"
'********************************************************************'
'  ExamplePropertyManagerPage.swp                                    '
'  This Macro shows how to create a simple PropertyManagerPage for   '
'  SolidWorks.  It includes an example of every control that can     '
'  be placed on a PropertyManagerPage.                               '
'********************************************************************'
Public swapp As SldWorks.SldWorks
Public propcol As New Collection
Public groupcol As New Collection
Public othercol As New Collection
Public combocol As New Collection
Public textcol As New Collection
Public config As String
Dim Part As PartDoc
Public Header As String
Public MyPath As String

'The application's PropertyManagerPage
Dim swPage As AutoPropsPropMgr
Public fname As String
Public MW As Boolean

'help API calls for HTML help
Public Declare Function HtmlHelp Lib "HHCtrl.ocx" Alias "HtmlHelpA" _
    (ByVal hWndCaller As Long, _
     ByVal pszFile As String, _
     ByVal uCommand As Long, _
     dwData As Any) As Long

Public Const HH_DISPLAY_TOPIC As Long = 0
Public Const HH_HELP_CONTEXT As Long = &HF

'other properties box
Public m_Group_Other As PropertyManagerPageGroup
Public m_Other_text1 As PropertyManagerPageTextbox
Public m_other_list1 As PropertyManagerPageListbox
Public m_other_button1 As PropertyManagerPageButton

Public m_group_config As PropertyManagerPageGroup
Public m_config_combobox1 As PropertyManagerPageCombobox

'The two groups that will contain the controls

Public m_Group1 As PropertyManagerPageGroup
Public m_Group2 As PropertyManagerPageGroup
Public m_Group3 As PropertyManagerPageGroup
Public m_Group4 As PropertyManagerPageGroup
Public m_Group5 As PropertyManagerPageGroup
Public m_Group6 As PropertyManagerPageGroup
Public m_Group7 As PropertyManagerPageGroup
Public m_Group8 As PropertyManagerPageGroup



'The controls on the page
Public m_Text1 As PropertyManagerPageTextbox
Public m_Text2 As PropertyManagerPageTextbox
Public m_Text3 As PropertyManagerPageTextbox
Public m_Text4 As PropertyManagerPageTextbox
Public m_Text5 As PropertyManagerPageTextbox
Public m_Text6 As PropertyManagerPageTextbox
Public m_Text7 As PropertyManagerPageTextbox
Public m_Text8 As PropertyManagerPageTextbox
Public m_Text9 As PropertyManagerPageTextbox
Public m_Text10 As PropertyManagerPageTextbox
Public m_Text11 As PropertyManagerPageTextbox
Public m_Text12 As PropertyManagerPageTextbox
Public m_Text13 As PropertyManagerPageTextbox
Public m_Text14 As PropertyManagerPageTextbox
Public m_Text15 As PropertyManagerPageTextbox
Public m_Text16 As PropertyManagerPageTextbox
Public m_Text17 As PropertyManagerPageTextbox
Public m_Text18 As PropertyManagerPageTextbox
Public m_Text19 As PropertyManagerPageTextbox
Public m_Text20 As PropertyManagerPageTextbox
Public m_Text21 As PropertyManagerPageTextbox
Public m_Text22 As PropertyManagerPageTextbox
Public m_Text23 As PropertyManagerPageTextbox
Public m_Text24 As PropertyManagerPageTextbox
Public m_Text25 As PropertyManagerPageTextbox
Public m_Text26 As PropertyManagerPageTextbox
Public m_Text27 As PropertyManagerPageTextbox
Public m_Text28 As PropertyManagerPageTextbox
Public m_Text29 As PropertyManagerPageTextbox
Public m_Text30 As PropertyManagerPageTextbox
Public m_Text31 As PropertyManagerPageTextbox
Public m_Text32 As PropertyManagerPageTextbox
Public m_Text33 As PropertyManagerPageTextbox
Public m_Text34 As PropertyManagerPageTextbox
Public m_Text35 As PropertyManagerPageTextbox
Public m_Text36 As PropertyManagerPageTextbox
Public m_Text37 As PropertyManagerPageTextbox
Public m_Text38 As PropertyManagerPageTextbox
Public m_Text39 As PropertyManagerPageTextbox
Public m_Text40 As PropertyManagerPageTextbox
Public m_Text41 As PropertyManagerPageTextbox
Public m_Text42 As PropertyManagerPageTextbox
Public m_Text43 As PropertyManagerPageTextbox
Public m_Text44 As PropertyManagerPageTextbox
Public m_Text45 As PropertyManagerPageTextbox
Public m_Text46 As PropertyManagerPageTextbox
Public m_Text47 As PropertyManagerPageTextbox
Public m_Text48 As PropertyManagerPageTextbox
Public m_Text49 As PropertyManagerPageTextbox
Public m_Text50 As PropertyManagerPageTextbox
Public m_Text51 As PropertyManagerPageTextbox
Public m_Text52 As PropertyManagerPageTextbox
Public m_Text53 As PropertyManagerPageTextbox
Public m_Text54 As PropertyManagerPageTextbox
Public m_Text55 As PropertyManagerPageTextbox
Public m_Text56 As PropertyManagerPageTextbox
Public m_Text57 As PropertyManagerPageTextbox
Public m_Text58 As PropertyManagerPageTextbox
Public m_Text59 As PropertyManagerPageTextbox
Public m_Text60 As PropertyManagerPageTextbox
Public m_Text61 As PropertyManagerPageTextbox
Public m_Text62 As PropertyManagerPageTextbox
Public m_Text63 As PropertyManagerPageTextbox
Public m_Text64 As PropertyManagerPageTextbox
Public m_Text65 As PropertyManagerPageTextbox
Public m_Text66 As PropertyManagerPageTextbox
Public m_Text67 As PropertyManagerPageTextbox
Public m_Text68 As PropertyManagerPageTextbox
Public m_Text69 As PropertyManagerPageTextbox
Public m_Text70 As PropertyManagerPageTextbox
Public m_Text71 As PropertyManagerPageTextbox
Public m_Text72 As PropertyManagerPageTextbox
Public m_Text73 As PropertyManagerPageTextbox
Public m_Text74 As PropertyManagerPageTextbox
Public m_Text75 As PropertyManagerPageTextbox
Public m_Text76 As PropertyManagerPageTextbox
Public m_Text77 As PropertyManagerPageTextbox
Public m_Text78 As PropertyManagerPageTextbox
Public m_Text79 As PropertyManagerPageTextbox
Public m_Text80 As PropertyManagerPageTextbox
Public m_Text81 As PropertyManagerPageTextbox
Public m_Text82 As PropertyManagerPageTextbox
Public m_Text83 As PropertyManagerPageTextbox
Public m_Text84 As PropertyManagerPageTextbox
Public m_Text85 As PropertyManagerPageTextbox
Public m_Text86 As PropertyManagerPageTextbox
Public m_Text87 As PropertyManagerPageTextbox
Public m_Text88 As PropertyManagerPageTextbox
Public m_Text89 As PropertyManagerPageTextbox
Public m_Text90 As PropertyManagerPageTextbox
Public m_Text91 As PropertyManagerPageTextbox
Public m_Text92 As PropertyManagerPageTextbox
Public m_Text93 As PropertyManagerPageTextbox
Public m_Text94 As PropertyManagerPageTextbox
Public m_Text95 As PropertyManagerPageTextbox
Public m_Text96 As PropertyManagerPageTextbox
Public m_Text97 As PropertyManagerPageTextbox
Public m_Text98 As PropertyManagerPageTextbox
Public m_Text99 As PropertyManagerPageTextbox
Public m_Text100 As PropertyManagerPageTextbox


Public m_Label1 As PropertyManagerPageLabel
Public m_Label2 As PropertyManagerPageLabel
Public m_Label3 As PropertyManagerPageLabel
Public m_Label4 As PropertyManagerPageLabel
Public m_Label5 As PropertyManagerPageLabel
Public m_Label6 As PropertyManagerPageLabel
Public m_Label7 As PropertyManagerPageLabel
Public m_Label8 As PropertyManagerPageLabel
Public m_Label9 As PropertyManagerPageLabel
Public m_Label10 As PropertyManagerPageLabel
Public m_Label11 As PropertyManagerPageLabel
Public m_Label12 As PropertyManagerPageLabel
Public m_Label13 As PropertyManagerPageLabel
Public m_Label14 As PropertyManagerPageLabel
Public m_Label15 As PropertyManagerPageLabel
Public m_Label16 As PropertyManagerPageLabel
Public m_Label17 As PropertyManagerPageLabel
Public m_Label18 As PropertyManagerPageLabel
Public m_Label19 As PropertyManagerPageLabel
Public m_Label20 As PropertyManagerPageLabel
Public m_Label21 As PropertyManagerPageLabel
Public m_Label22 As PropertyManagerPageLabel
Public m_Label23 As PropertyManagerPageLabel
Public m_Label24 As PropertyManagerPageLabel
Public m_Label25 As PropertyManagerPageLabel
Public m_Label26 As PropertyManagerPageLabel
Public m_Label27 As PropertyManagerPageLabel
Public m_Label28 As PropertyManagerPageLabel
Public m_Label29 As PropertyManagerPageLabel
Public m_Label30 As PropertyManagerPageLabel
Public m_Label31 As PropertyManagerPageLabel
Public m_Label32 As PropertyManagerPageLabel
Public m_Label33 As PropertyManagerPageLabel
Public m_Label34 As PropertyManagerPageLabel
Public m_Label35 As PropertyManagerPageLabel
Public m_Label36 As PropertyManagerPageLabel
Public m_Label37 As PropertyManagerPageLabel
Public m_Label38 As PropertyManagerPageLabel
Public m_Label39 As PropertyManagerPageLabel
Public m_Label40 As PropertyManagerPageLabel
Public m_label41 As PropertyManagerPageLabel
Public m_label42 As PropertyManagerPageLabel
Public m_label43 As PropertyManagerPageLabel
Public m_Label44 As PropertyManagerPageLabel
Public m_Label45 As PropertyManagerPageLabel
Public m_Label46 As PropertyManagerPageLabel
Public m_Label47 As PropertyManagerPageLabel
Public m_Label48 As PropertyManagerPageLabel
Public m_Label49 As PropertyManagerPageLabel
Public m_Label50 As PropertyManagerPageLabel
Public m_label51 As PropertyManagerPageLabel
Public m_label52 As PropertyManagerPageLabel
Public m_label53 As PropertyManagerPageLabel
Public m_Label54 As PropertyManagerPageLabel
Public m_Label55 As PropertyManagerPageLabel
Public m_Label56 As PropertyManagerPageLabel
Public m_Label57 As PropertyManagerPageLabel
Public m_Label58 As PropertyManagerPageLabel
Public m_Label59 As PropertyManagerPageLabel
Public m_Label60 As PropertyManagerPageLabel
Public m_label61 As PropertyManagerPageLabel
Public m_label62 As PropertyManagerPageLabel
Public m_label63 As PropertyManagerPageLabel
Public m_Label64 As PropertyManagerPageLabel
Public m_Label65 As PropertyManagerPageLabel
Public m_Label66 As PropertyManagerPageLabel
Public m_Label67 As PropertyManagerPageLabel
Public m_Label68 As PropertyManagerPageLabel
Public m_Label69 As PropertyManagerPageLabel
Public m_Label70 As PropertyManagerPageLabel
Public m_label71 As PropertyManagerPageLabel
Public m_label72 As PropertyManagerPageLabel
Public m_label73 As PropertyManagerPageLabel
Public m_Label74 As PropertyManagerPageLabel
Public m_Label75 As PropertyManagerPageLabel
Public m_Label76 As PropertyManagerPageLabel
Public m_Label77 As PropertyManagerPageLabel
Public m_Label78 As PropertyManagerPageLabel
Public m_Label79 As PropertyManagerPageLabel
Public m_Label80 As PropertyManagerPageLabel
Public m_label81 As PropertyManagerPageLabel
Public m_label82 As PropertyManagerPageLabel
Public m_label83 As PropertyManagerPageLabel
Public m_Label84 As PropertyManagerPageLabel
Public m_Label85 As PropertyManagerPageLabel
Public m_Label86 As PropertyManagerPageLabel
Public m_Label87 As PropertyManagerPageLabel
Public m_Label88 As PropertyManagerPageLabel
Public m_Label89 As PropertyManagerPageLabel
Public m_Label90 As PropertyManagerPageLabel
Public m_label91 As PropertyManagerPageLabel
Public m_label92 As PropertyManagerPageLabel
Public m_label93 As PropertyManagerPageLabel
Public m_Label94 As PropertyManagerPageLabel
Public m_Label95 As PropertyManagerPageLabel
Public m_Label96 As PropertyManagerPageLabel
Public m_Label97 As PropertyManagerPageLabel
Public m_Label98 As PropertyManagerPageLabel
Public m_Label99 As PropertyManagerPageLabel
Public m_Label100 As PropertyManagerPageLabel


Public m_Combobox1 As PropertyManagerPageCombobox
Public m_Combobox2 As PropertyManagerPageCombobox
Public m_Combobox3 As PropertyManagerPageCombobox
Public m_Combobox4 As PropertyManagerPageCombobox
Public m_Combobox5 As PropertyManagerPageCombobox
Public m_Combobox6 As PropertyManagerPageCombobox
Public m_Combobox7 As PropertyManagerPageCombobox
Public m_Combobox8 As PropertyManagerPageCombobox
Public m_Combobox9 As PropertyManagerPageCombobox
Public m_Combobox10 As PropertyManagerPageCombobox
Public m_Combobox11 As PropertyManagerPageCombobox
Public m_Combobox12 As PropertyManagerPageCombobox
Public m_Combobox13 As PropertyManagerPageCombobox
Public m_Combobox14 As PropertyManagerPageCombobox
Public m_Combobox15 As PropertyManagerPageCombobox
Public m_Combobox16 As PropertyManagerPageCombobox
Public m_Combobox17 As PropertyManagerPageCombobox
Public m_Combobox18 As PropertyManagerPageCombobox
Public m_Combobox19 As PropertyManagerPageCombobox
Public m_Combobox20 As PropertyManagerPageCombobox
Public m_Combobox21 As PropertyManagerPageCombobox
Public m_Combobox22 As PropertyManagerPageCombobox
Public m_Combobox23 As PropertyManagerPageCombobox
Public m_Combobox24 As PropertyManagerPageCombobox
Public m_Combobox25 As PropertyManagerPageCombobox
Public m_Combobox26 As PropertyManagerPageCombobox
Public m_Combobox27 As PropertyManagerPageCombobox
Public m_Combobox28 As PropertyManagerPageCombobox
Public m_Combobox29 As PropertyManagerPageCombobox
Public m_Combobox30 As PropertyManagerPageCombobox
Public m_Combobox31 As PropertyManagerPageCombobox
Public m_Combobox32 As PropertyManagerPageCombobox
Public m_Combobox33 As PropertyManagerPageCombobox
Public m_Combobox34 As PropertyManagerPageCombobox
Public m_Combobox35 As PropertyManagerPageCombobox
Public m_Combobox36 As PropertyManagerPageCombobox
Public m_Combobox37 As PropertyManagerPageCombobox
Public m_Combobox38 As PropertyManagerPageCombobox
Public m_Combobox39 As PropertyManagerPageCombobox
Public m_Combobox40 As PropertyManagerPageCombobox
Public m_Combobox41 As PropertyManagerPageCombobox
Public m_Combobox42 As PropertyManagerPageCombobox
Public m_Combobox43 As PropertyManagerPageCombobox
Public m_Combobox44 As PropertyManagerPageCombobox
Public m_Combobox45 As PropertyManagerPageCombobox
Public m_Combobox46 As PropertyManagerPageCombobox
Public m_Combobox47 As PropertyManagerPageCombobox
Public m_Combobox48 As PropertyManagerPageCombobox
Public m_Combobox49 As PropertyManagerPageCombobox
Public m_Combobox50 As PropertyManagerPageCombobox
Public m_Combobox51 As PropertyManagerPageCombobox
Public m_Combobox52 As PropertyManagerPageCombobox
Public m_Combobox53 As PropertyManagerPageCombobox
Public m_Combobox54 As PropertyManagerPageCombobox
Public m_Combobox55 As PropertyManagerPageCombobox
Public m_Combobox56 As PropertyManagerPageCombobox
Public m_Combobox57 As PropertyManagerPageCombobox
Public m_Combobox58 As PropertyManagerPageCombobox
Public m_Combobox59 As PropertyManagerPageCombobox
Public m_Combobox60 As PropertyManagerPageCombobox
Public m_Combobox61 As PropertyManagerPageCombobox
Public m_Combobox62 As PropertyManagerPageCombobox
Public m_Combobox63 As PropertyManagerPageCombobox
Public m_Combobox64 As PropertyManagerPageCombobox
Public m_Combobox65 As PropertyManagerPageCombobox
Public m_Combobox66 As PropertyManagerPageCombobox
Public m_Combobox67 As PropertyManagerPageCombobox
Public m_Combobox68 As PropertyManagerPageCombobox
Public m_Combobox69 As PropertyManagerPageCombobox
Public m_Combobox70 As PropertyManagerPageCombobox
Public m_Combobox71 As PropertyManagerPageCombobox
Public m_Combobox72 As PropertyManagerPageCombobox
Public m_Combobox73 As PropertyManagerPageCombobox
Public m_Combobox74 As PropertyManagerPageCombobox
Public m_Combobox75 As PropertyManagerPageCombobox
Public m_Combobox76 As PropertyManagerPageCombobox
Public m_Combobox77 As PropertyManagerPageCombobox
Public m_Combobox78 As PropertyManagerPageCombobox
Public m_Combobox79 As PropertyManagerPageCombobox
Public m_Combobox80 As PropertyManagerPageCombobox
Public m_Combobox81 As PropertyManagerPageCombobox
Public m_Combobox82 As PropertyManagerPageCombobox
Public m_Combobox83 As PropertyManagerPageCombobox
Public m_Combobox84 As PropertyManagerPageCombobox
Public m_Combobox85 As PropertyManagerPageCombobox
Public m_Combobox86 As PropertyManagerPageCombobox
Public m_Combobox87 As PropertyManagerPageCombobox
Public m_Combobox88 As PropertyManagerPageCombobox
Public m_Combobox89 As PropertyManagerPageCombobox
Public m_Combobox90 As PropertyManagerPageCombobox
Public m_Combobox91 As PropertyManagerPageCombobox
Public m_Combobox92 As PropertyManagerPageCombobox
Public m_Combobox93 As PropertyManagerPageCombobox
Public m_Combobox94 As PropertyManagerPageCombobox
Public m_Combobox95 As PropertyManagerPageCombobox
Public m_Combobox96 As PropertyManagerPageCombobox
Public m_Combobox97 As PropertyManagerPageCombobox
Public m_Combobox98 As PropertyManagerPageCombobox
Public m_Combobox99 As PropertyManagerPageCombobox
Public m_Combobox100 As PropertyManagerPageCombobox

'removed materialworks libraries for 2006 macro version MJS 6/28/2005
'Public m_Group_MW As PropertyManagerPageGroup
'Public m_MW_label1 As PropertyManagerPageLabel
'Public m_MW_Library As PropertyManagerPageCombobox
'Public m_mw_label2 As PropertyManagerPageLabel
'Public m_MW_Material As PropertyManagerPageCombobox
Public licensereturn As Variant
Public inicol As New Collection









Sub findoldprops(retval As Variant)
    Dim temp() As Variant
    Set othercol = Nothing
    For i = 0 To UBound(retval)
        For n = 1 To propcol.Count
            Unique = True
            If UCase(retval(i)) = UCase(propcol.Item(n).Name) Then
                Unique = False
                n = propcol.Count
            End If
            If MW = True And UCase(retval(i)) = "MATERIAL" Then
                Unique = False
                n = propcol.Count
            End If
        Next n
        If Unique = True Then
            othercol.Add retval(i)
        End If
    Next i
End Sub

Sub resetvalues()
    For i = 1 To propcol.Count
        If propcol.Item(i).control = 1 Then 'if combobox
                Dim tempcol As New Collection
                Set tempcol = Nothing
                Index = 1
                Dim swcontrol As PropertyManagerPageCombobox
                Set swcontrol = propcol.Item(i).swcontrol
                While swcontrol.ItemText(Index) <> ""
                    tempcol.Add swcontrol.ItemText(Index)
                    Index = Index + 1
                Wend
                swcontrol.Clear
                swcontrol.AddItems swapp.activedoc.CustomInfo2(config, propcol.Item(i).Name)
                For c = 1 To tempcol.Count
                    swcontrol.AddItems tempcol.Item(c)
                Next c
                swcontrol.CurrentSelection = 0
            Else
                propcol.Item(i).swcontrol.text = swapp.activedoc.CustomInfo2(config, propcol.Item(i).Name)
        End If
    Next i
End Sub
Sub Main()
    Dim f As Scripting.TextStream
    Dim fs As Scripting.FileSystemObject
    Dim oldgroupcol As New Collection
    Set swapp = CreateObject("SldWorks.Application")
    Set groupcol = Nothing
    Set propcol = Nothing
    Set combocol = Nothing
    Set textcol = Nothing
    
    'Make sure that there is a model to add the
    'page to.  If there is no model get rid
    'of references to any previoud pages.
    If swapp.activedoc Is Nothing Then
        'Set Part = swApp.NewPart
        Exit Sub
        Set swPage = Nothing
    End If
    
    Set fs = CreateObject("Scripting.FileSystemObject")
    'fname = stripname(swapp.GetCurrentMacroPathName)
    p = swapp.activedoc.CustomInfo2("", "autoprops")
    
    MyPath = VBA.Left(swapp.GetCurrentMacroPathName, VBA.Len(swapp.GetCurrentMacroPathName) - 25)
    If p <> "" Then
            fname = MyPath & "\" & p
        Else
            fname = MyPath & "\autoprops.ini"
    End If
    
    If fs.FileExists(fname) = False Then
        MsgBox "INI file cannot be found!" & Chr(10) & fname
        Exit Sub
    End If
    Set f = fs.opentextfile(fname)
    If f Is Nothing Then
        MsgBox "Error opening INI File" & Chr(10) & fname
        Exit Sub
    End If
    currentgroup = ""
    groupindex = 0
    Dim newprop As New AutoPropsUserProp
    While f.atendofstream = False
        linein = f.readline
continue:
        Select Case UCase(Left(linein, 5))
'''            Case "MATER"
'''                If InStr(1, UCase(linein), "YES", vbTextCompare) > 0 Then
'''                        MW = True
'''                    Else
'''                        MW = False
'''                End If
            Case "CONFI"
                If swapp.activedoc.GetType <> 3 Then
                        If UCase(Right(linein, 3)) = "YES" Then
                                config = swapp.activedoc.GetActiveConfiguration.Name
                            Else
                                config = ""
                        End If
                    Else
                        config = ""
                End If
            Case "HEADE"
                Header = Mid(linein, 8)
            Case "GROUP"
                currentgroup = Mid(linein, 7)
                linein = f.readline
                If InStr(1, linein, "TYPE", vbTextCompare) > 0 Then
                        If InStr(1, UCase(linein), "DRAWING", vbTextCompare) > 0 Then
                                If swapp.activedoc.GetType <> 3 Then
                                    currentgroup = ""
                                End If
                            'currentgroup = "1" & currentgroup
                            Else
                            
                        End If
                    Else
                        If swapp.activedoc.GetType = 3 Then
                                currentgroup = ""
                            Else
                                groupcol.Add currentgroup
                                groupindex = groupindex + 1
                        End If
                        GoTo continue
                End If
                If currentgroup <> "" Then
                    groupcol.Add currentgroup
                    groupindex = groupindex + 1
                End If
            Case "PROPT"
                temp = Mid(linein, 10)
                GoTo propcontinue
            Case "PROP="
                temp = Mid(linein, 6)
propcontinue:
                If currentgroup <> "" Then
                    newprop.Group = groupindex & currentgroup
                    
                    n = InStr(1, temp, ",", vbTextCompare)
                    If n = 0 Then
                            newprop.Name = temp
                            newprop.Description = temp
                        Else
                            newprop.Name = Mid(temp, n + 1)
                            newprop.Description = Mid(temp, 1, n - 1)
                    End If
                    propcol.Add newprop
                    Set newprop = Nothing
                End If
            Case "PROPL"
                If currentgroup <> "" Then
                    newprop.Group = groupindex & currentgroup
                    temp = Mid(linein, 10)
                    n = InStr(1, temp, ",", vbTextCompare)
                    If n = 0 Then
                            newprop.Name = temp
                            newprop.Description = temp
                        Else
                            newprop.Description = Mid(temp, 1, n - 1)
                            temp = Mid(temp, n + 1)
                            n = InStr(1, temp, ",", vbTextCompare)
                            If n = 0 Then
                                    newprop.Name = temp
                                Else
                                    newprop.Name = Mid(temp, 1, n - 1)
                                    newprop.listname = Mid(temp, n + 1)
                            End If
                    End If
                    newprop.control = 1
                    propcol.Add newprop
                    Set newprop = Nothing
                End If
        End Select
    Wend
    f.Close
    'If there is no page create a new one and show it.
    'If there is a page, then show it.
    'If swPage Is Nothing Then
        'Set Part = swApp.NewPart
        Set swPage = New AutoPropsPropMgr
        swPage.Show 'display it
    'Else
    ''   swPage.Show
    'End If

End Sub

Function stripname(filename As String)
Dim onechars, onelines As String
Dim stripindex As Integer
For i = 0 To Len(filename)
    onechars = Left(Right(filename, i), 1)
    If "\" = onechars Then
        stripindex = i
        i = Len(filename) + 1
    End If
Next i
stripname = Left(filename, Len(filename) - stripindex)
End Function
Attribute VB_Name = "ThisLibrary"
Attribute VB_Base = "0{801A2004-A66C-11D3-A8BD-0000861EBBD6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "inisettings"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
   Public MatlName As String
   Public MatlDens As Double
   Public MatlR As Integer
   Public MatlG As Integer
   Public MatlB As Integer
   Public MatlAmbient As Double
   Public MatlDiffuse As Double
   Public MatlSpecularity As Double
   Public MatlShininess As Double
   Public MatlTransparency As Double
   Public MatlEmission As Double

' InQuest injected base64 decoded content
' x:.nW
' x*'~(.

INQUEST-PP=macro
