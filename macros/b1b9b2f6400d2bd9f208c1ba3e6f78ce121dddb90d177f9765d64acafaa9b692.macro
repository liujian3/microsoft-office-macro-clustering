Attribute VB_Name = "Module1"
Option Explicit
Public Const gLMax As Long = 2050 '|fffd||5b4||beaf||22f| |fffd||fffd||fffd||fffd|
 '****************************************************************************************
' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||22f| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||53c||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd| : |232||fffd||2f3a|
' |fffd||fffd||fffd||fffd| |fffd||fffd||a5| : 2008-9-17
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||a5| : 2010-2-21(2|fffd||fffd| 29|fffd||333||fffd| 30|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||a5||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |1e5||fffd||f5||fffd||fffd||fffd| |fffd||2b4||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||3b4||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bc||17c||fffd| |fffd||fffd||fffd||fffd||fffd||7fd||fffd||fffd||3f4||fffd|)
' |fffd||fffd||fffd||fffd||fffd||5b1||67f||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||a5|: 2018-08-21 |fffd||fffd||fffd||fffd||fffd||fffd| 2|fffd||fffd| 29|fffd||333||fffd| 30|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||a5||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |1e5||fffd||f5||fffd||fffd||fffd| |fffd||2b4||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
' |fffd||fffd||22f| |fffd||fffd||fffd||fffd| 1391|fffd||fffd||fffd||fffd||fffd| 2050|fffd||fffd||fffd||fffd||fffd|
'***************************************************************************************
' |fffd||fffd| |fffd||53c||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||6b7||fffd||fffd| |fffd||471||fffd||f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(http://www.kasi.re.kr/)|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||3f4||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||334||fffd|
' 1582|fffd||fffd| 10|fffd||fffd| 4|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||cf7a||fffd||bf||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||a5||fffd||fffd| |fffd||5f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||474||fffd|
'***************************************************************************************
 '|fffd||fffd||fffd||fffd| 1391|fffd||fffd| 1|fffd||fffd| 1|fffd||fffd||fffd||fffd| |fffd||fffd||fffd| 1391|fffd||fffd| 2|fffd||fffd| 5|fffd||3ff||fffd| |fffd||634||fffd||fffd||474||fffd|
Const cBaseDay As Long = -185872 '|fffd||fffd||fffd| 1391|fffd||fffd| 2|fffd||fffd| 4|fffd||fffd||fffd||fffd| |fffd||fffd||a5| |fffd||3f7||f9||fffd||223|(|fffd||f8||fffd||fffd||fffd|)
Const cBlankDays As Date = #10/5/1582# '|fffd||fffd||fffd| 1582|fffd||fffd|10|fffd||fffd|5|fffd||3fa||fffd||fffd||fffd| 14|fffd||3f1||fffd||fffd||fffd||fffd||fffd| |fffd||7b7||bf||fffd| |fffd||fffd||fffd||fffd|
Const cXLDay As Date = #1/1/1900# '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1900|fffd||fffd| 1|fffd||fffd| 1|fffd||3fa||fffd||fffd||fffd| |fffd||fffd||a5| |fffd||fffd||fffd||fffd||fffd||377||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|**
Const cBaseYear As Long = 1391 '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
'|fffd||fffd||fffd||b3||fffd||a5||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||1b3||fffd||fffd||fffd| |fffd||fffd||fffd|
Const cStrLun As String
                    "22212121121522212121121212212212112121212221232121212212121212121212122121212412121221212112121222211211212122521211211221222121121122122212115122212122112121212122121212121215221212121121221221212112121221224112121212221211211221222121121152221221121121221221212121122121252121211221212212121121212212212321212122212112112212221211211212612211211212212221121121221221215211212212212121211212212122121152122122121121122122212112112122212512112122122211211212122212121152122122121121212122122121121212" & _
                    "16122121121212122122112112122212232112122122211211212122212121121522122121121212122212112121212212152121212121221221121211222122112321221222112112121222121211212122521211212122122121121212122121215212121221212121212121221212121152212212121121212221212112121222124112112221221211212121221221121241212212121212121212212121211212522121211212122212121121212221212321122122212112112212221211211212612121212121212212121212121212215212112122122121211212122122121151221222121121121222212112112122212512112122" & _
                    "12212121211221212212121512122122121211212122122121121215222121121121222212112112122212232112122122121211212122212121121522121221211212121221221211212122161211211221222112121121222122112321221222112112121222121211212125221211212121221212211212121221221512121212212211211212221221121152212221121121212221212112121221224112121212212211212121212212121241212122122112112122212211211212522211211212122212121121212221212321212122212112121212212121212121522121212121212122121212112122125212112121222121211212" & _
                    "12221212115122122212112112212212211212121212521212121212122121212112122122121512121222121211212122212121121125222121121122122212112112122212152121122122121212121122121221212321212221212112121221221211211221261211211212222121121121222122112321221221212112121221221212112124212212121121212212212112112212221512112122221211211212221221121152212212121121212221212112121221242121121212122122121121212212212141121222212112112122212211211212522121211212122212121121212212212321212122121122121212122121221123" & _
                    "22122122112112122212211211212212251211221122212121121212212212115212122121212121212122121212121215221212121121222122112112122122124112121222121211212122212121121241222121121212122121212121212122152121211221221212121121221221212321212221212112112222121211211221261211211221221212121212121221212412121212212121211212212212121124122212121121122221212112112212221512112212221211211212221212121152212212121211212212122121211212162121211212122122121121122122212321121222212112112122212121211212522121211212" & _
                    "12212212121121212212215211212122122121121122122212112321222212112112122212211211212212521211212122122121121212212122123212121221221211212122212121121152222121121121222122112112122122124112121222121211212122122121121212421212121212121221212121211252212121211212221221121121221221212321212221212112121221221211212121252121212121212212121212121212212124112122212121211212212212121152122212121121212212212112112212224112121212212121212121212212211212322122121212112122122121211215222121211211222122121121" & _
                    "12212221232112212212121211212212212121211224122121211212122122121211212122212151211222122121121122122212115121222122112112122212121211212212421212112122121221211212121222121232121221221211211222121221123212222121121121222121212112122122152112121221221211212121221221211215212212212112112212221211211212221251211212222121121122121221215121212212212112121212212121212121522122112121212122212112112122212232112122212211211212212212121412122212121121212212121212121212241212121212122121212121122122121215" & _
                    "12122212121211212212212121121212225121121212212212112121212212412121211222121212121212122121212141222121212112122122121211212122212411121222122121121122122121215122122121212121212121221212121125221212121121221221212112121222121511212221221211121221222121121122125212121121221221212121121221612121121212212212121121212221212141122122212111212212221211121212221521211212212212121121221212215121212122122121121212122212112124122122121112122122212111212122212231212122212121121212212212121121242121221121" & _
                    "21212212122112121242122112121122122212111212122212213212122212121121212212212112121212522112121212122121212121212122152121211221221212112121222121121521222121211212122122121121212122215121212122121212121212122121212121521221212121211221221212112152221212112121212221212111221222123212121221221121212121221212121212152212121212112212212121121212221215121212122212112112212221212312122212211211212212212121211221252121212112212122121211212122212123212122122121121122122212121321222122121112122122211211" & _
                    "21221221521211212212212121121212212212121152122122121121212122212121112122212521112122122211211212122212151212122122121211212122122121121215221221211212121222121121121222122151121221222121112121222121214121222121211212122122121121212122412121212121221212121212121221221123212212221121121212221212112152221212112121221221211212121221251212121212212121212121212212121215122122121211212122212121121212221241121212212212112121212221214121212212121212121212212121212121521221212112121222121211212122212123" & _
                    "21212122212112112212221211232122212211212112212212121212121212521212112122122121211212122212121152121222121121122122212112112122216112112122122121212112212122152112122121221212112121221221211241221221211211221222121121121222122321121221222112112121222121211521221221212112121221212212112124212212112121212221211211212221221151212212221121121212221212112121224212112121212212212112121212522121121212122122112112122212211232122122211211212122212121121212221521121212212212112121212212121212152122121212" & _
                    "12121212212211211522122211211212122212121121212221215121212122212112121212212121212121522121212121212122121212112125221212112121222121211212122212123211221222121121122122122112121212241212121212121221212121122121221215121212221212112121222121211512212221211211221222121121121222125121211221221212121212121221212123212212212121121212221212112152212212112112212221211211212221223211212212212121211221212212121121252122121211212122122121121212212215121122122212112112122212211512122122211211212122212121" & _
                    "12121221612121121212212212121121212212212141212122212112112122212211214122122211211212122212121121212212241121212122122121121212122122121124121221221121121222122112112122122512112121222121211212122212123212122122121121212122121212121212421212121211221221221121121221222141121212221212112121222121211521221221211212121221212121212121252121212121212212121211212212212123212122212121121212221212112112221252112112212212211212121221215212121212122121212112212122121211521222121211212122212121121122212215" & _
                    "12112212221211211212221212152112212212121211221212212121211216122121211212122122121121122122212321122122212112112122212211211522122121211212122122121211212215221212112121221221211212122122121151221222121121121222122112112122125212112121222121211212122122152112121221212212112121221221211232212221211211212221221121121221222321121212221212112121221221211212152212121212121212212211212121522122112112122212211211212212221151212122212121121212212212112121216212112121212212121212121212125212121121222121" & _
                    "212112122122121232121222121211212122212121121212212521121212122121212121212122121212152121221212121121221221212115212221212112121222121211211222122151211221221221121122121221212121215212212121211212212212121121212252121121212221212112112212221214112212221211211212221212121121221252121211212212212121211212212212151212122122121121122122212112321222212112112122212211211212212241211212122122121211212122122121214121221221"
 '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||b3||fffd||a5||fffd||fffd| |fffd||3fc||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
Const cStrLunDay As String = "00035400073800109200144700183100218500254000292300327700363200401500437000475400510900546300584700620100655500693900729300767700803200838700877100912500947900986301021701057101095501131001169401204901240301278701314101349501387901423301461701497201532601571001606401641801680201715701751101789501825001863401898801934201972602008002043502081902117302152802191202226602265002300402335802374202409702445102483502519002557302592702628202666502702002737502775902811302846702885102920502958902994303029803" & _
                    "06820310370313910317750321290325130328670332210336050339600343150346990350530354070357910361450365290368830372380376220379760383310387140390680394520398070401610405450409000412540416380419920423460427300430850434690438230441780445620449160452700456540460080463920467470471010474850478400481940485770489310493150496700500250504090507630511170515010518550522090525930529480533320536870540410544250547790551330555170558710562260566100569650573490577030580570584400587950591490595330598880602720606260609" & _
                    "81061364061718062073062457062811063166063550063904064288064642064996065380065735066089066473066828067212067566067920068304068658069012069397069751070106070490070844071227071581071936072320072675073029073413073767074151074505074859075243075598075953076337076691077045077429077783078167078521078876079260079615079969080353080707081090081445081799082183082538082892083276083631083984084368084723085107085461085816086200086554086908087292087646088030088384088739089123089478089832090216090570090924091308" & _
                    "09166209204709240109275609314009349409384809423109458609497009532509567909606309641709677109715509750909786409824809860209898609934109969510007910043310078710117110152610188010226410261910300310335710371110409510444910480410518810554210592610628010663410701810737210772710811110846610882010920410955810994211029611065011103411138911174411212811248211286611322011357411395811431211466711505111540611576011614411649811688111723611759011797411832911868311906711942111980512015912051412089812125212160712" & _
                    "19911223451226991230831234371238211241761245301249141252691256231260071263611267451270991274541278381281921285471289301292841296391300221303771307611311161314701318541322081325621329461333001336841340391343941347781351321354861358701362241365781369621373171377011380561384101387941391481395021398861402401406241409791413331417171420711424251428091431641435181439021442571446411449951453491457331460871464421468261471801475351479191482731486571490111493651497491501041504581508421511971515801519341522" & _
                    "89152672153027153382153766154120154474154858155212155596155950156305156689157044157398157782158136158520158874159228159612159967160322160706161060161444161798162152162536162890163245163629163983164338164721165075165459165814166168166552166907167261167645167999168383168737169092169476169830170185170569170923171277171661172015172399172754173108173492173847174201174584174938175322175677176032176416176770177124177508177862178216178600178955179339179694180048180432180786181140181524181878182233182617" & _
                    "18297218335618371018406418444718480218515618554018589518627918663318698818737118772518808018846418881818917318955718991119029519064919100319138719174219209619248019283519321919357319392719431119466519501919540419575819611319649719685119723419758819794319832719868219903619942019977420015820051220086620125020160520196020234420269820305220343620379020417420452820488320526720562220597620636020671420709820745220780620819020854520889920928320963820999221037521073021111421146821182321220721256121291521" & _
                    "3299213653214037214391214746215130215485215839216223216577216961217315217669218054218408218763219147219501219855220238220593220977221332221686222070222424222778223162223516223871224255224609224994225348225702226086226440226794227178227533227917228271228626229010229364229718230102230456230811231195231549231933232288232642233025233380233734234118234473234857235211235565235949236303236657237041237396237751238135238489238873239227239581239965240319240674241058"
 Function Lun2Sun(intYear As Integer, intMonth As Integer, intDay As Integer, Optional bytKind As Byte = 3)
'****************
'|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'****************
Dim i As Integer
Dim j As Integer
Dim lngDays As Long
Dim r As Integer
Dim strDays As String
Dim intPos(1 To 2) As Integer
Dim datTemp As Date
Dim intAdd As Integer
    intPos(1) = (((intYear - 1) - cBaseYear) * 6) + 1 '|fffd||fffd||fffd||fffd||fffd||3fc||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    intPos(2) = ((intYear - cBaseYear) * 12) + 1 ''|fffd||634||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||a5| |fffd||fffd||fffd||fffd|
    If intPos(1) <= 0 Then
        lngDays = 0
    Else
        lngDays = CLng(Mid$(cStrLunDay, intPos(1), 6)) '|fffd||fffd||fffd||2d75| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||a5|
    End If
    strDays = Mid(cStrLun, intPos(2), 12)  '|fffd||fffd||fffd||2d75||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    j = intMonth - 1
    For i = 1 To j '|fffd||634||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||7b1||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||a5| |fffd||fffd||fffd||fffd|
        lngDays = lngDays + Choose(CInt(Mid$(strDays, i, 1)), 29, 30, 58, 59, 59, 60)
    Next i
    r = CInt(Mid$(strDays, intMonth, 1))
    lngDays = lngDays + intDay
    If bytKind = 1 Then
    ElseIf bytKind = 2 Then '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
        Select Case r
            Case 3, 4
                lngDays = lngDays + 29
            Case 5, 6
                lngDays = lngDays + 30
            Case Else
                Lun2Sun = intYear & "|fffd||fffd|" & intMonth & "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||1b4||fffd|"
                Exit Function
        End Select
    ElseIf bytKind = 3 Then '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||1b4||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
        intAdd = 0
        Select Case r
            Case 3, 4
                intAdd = 29
                lngDays = lngDays + intAdd '29
            Case 5, 6
                intAdd = 30
                lngDays = lngDays + intAdd '30
            Case Else
        End Select
    Else
    End If
    datTemp = CDate(lngDays + cBaseDay) '|fffd||fffd||fffd| 1391|fffd||fffd| 2|fffd||fffd| 4|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||1f9||1f7||fffd| |fffd||634||fffd| |fffd||fffd||a5| |fffd||3f7||f9||fffd||223||fffd||fffd| |fffd||fffd||fffd||634||fffd|
    '|fffd||fffd||fffd||fffd||fffd||cf7a||fffd||b0||fffd| |fffd||5f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||338||fffd| |fffd||fffd||fffd||fffd||fffd||474||fffd|.
    Select Case CLng(datTemp)
        Case Is < -182560
            Lun2Sun = CStr(datTemp)
        Case -182560
            Lun2Sun = "1400-02-29" '|fffd||fffd||fffd||fffd||fffd||cf7a||fffd||bf||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
        Case Is < -146036
            datTemp = datTemp - 1
            Lun2Sun = CStr(datTemp)
            
        Case -146036
            Lun2Sun = "1500-02-29" '|fffd||fffd||fffd||fffd||fffd||cf7a||fffd||bf||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
        Case Is < cBlankDays
            datTemp = datTemp - 2
            Lun2Sun = CStr(datTemp)
        Case Else
            datTemp = datTemp + 8 '10 '1582.10.5~14(10|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||cf7a||fffd||bf||fffd||fffd||fffd| |fffd||5f7||fffd||fffd||fffd||fffd||fffd||fffd||23f||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|)
            If datTemp >= cXLDay Then '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| 1900|fffd||fffd| 1|fffd||fffd| 1|fffd||3fa||fffd||fffd||fffd| |fffd||fffd||a5||fffd||fffd| |fffd||fffd||23f||fffd||3f4||fffd|
                Lun2Sun = datTemp
            Else
                Lun2Sun = CStr(datTemp)
            End If
    End Select
    If intAdd = 0 Then
    Else
        Lun2Sun = CStr(datTemp - intAdd) & " (|fffd||fffd|)" & Lun2Sun
    End If
End Function
Function Sun2Lun(intYear As Integer, _
                 intMonth As Integer, _
                 intDay As Integer, _
                 Optional strFormat As String = "YYYY-MM-DD") As String
'**********************
'|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||672||671||fffd|
'**********************
Dim i As Integer
Dim j As Integer
Dim lngDays As Long
Dim lngLook As Long
Dim r As Integer
Dim strDays As String
Dim intPos As Integer
Dim datTemp As Date
Dim iLYear As Integer
Dim iLMonth As Integer
Dim iLDay As Integer
Dim blnYun As Boolean
    datTemp = DateSerial(intYear, intMonth, intDay)
    
     Select Case CLng(datTemp)
        Case Is < -182560
        Case -182560 '|fffd||fffd||fffd||fffd||fffd||cf7a||fffd||bf||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
            If intDay = 29 Then
            Else
                datTemp = datTemp + 1
            End If
        Case Is < -146036
            datTemp = datTemp + 1
        Case -146036 '|fffd||fffd||fffd||fffd||fffd||cf7a||fffd||bf||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
            If intDay = 29 Then
                datTemp = datTemp + 1
            Else
                datTemp = datTemp + 2
            End If
        Case Is < cBlankDays
            datTemp = datTemp + 2
        Case Else
            datTemp = datTemp - 8
    End Select
    
    lngDays = CLng(datTemp) - cBaseDay '|fffd||fffd||a5| |fffd||3f7||f9||fffd||223||fffd||fffd| |fffd||fffd||fffd||474||fffd|
    intPos = (((intYear - 1) - cBaseYear) * 6) + 1 '|fffd||fffd||fffd||fffd||fffd||3fc||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||121|
    '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||3f1||fffd|
    If datTemp <= #1/25/1392# Then '1392|fffd||fffd| 01|fffd||fffd| 26|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| 1392|fffd||fffd| 1|fffd||fffd| 1|fffd||fffd||fffd||fffd|
        iLYear = cBaseYear
        lngLook = 0
    Else
        iLYear = intYear - 1
        Do While lngDays >= CLng(Mid$(cStrLunDay, intPos, 6))
            intPos = intPos + 6
            iLYear = iLYear + 1
        Loop
        intPos = ((iLYear - cBaseYear - 1) * 6) + 1
        lngLook = CLng(Mid$(cStrLunDay, intPos, 6))
    End If
    '|fffd||fffd||fffd||fffd||fffd||3f1||fffd|
    intPos = ((iLYear - cBaseYear) * 12) + 1
    strDays = Mid$(cStrLun, intPos, 12)
    iLMonth = 1
    For i = 1 To 12
        r = Choose(CInt(Mid$(strDays, i, 1)), 29, 30, 58, 59, 59, 60)
        lngLook = lngLook + r
        If lngLook > lngDays Then
            lngLook = lngLook - r
            iLMonth = i
            Exit For
        Else
        End If
    Next i
    '|fffd||fffd| |fffd||fffd||fffd||3f1||fffd|
    iLDay = (lngDays - lngLook)
    If iLDay = 0 Then '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||a5||fffd||fffd| |fffd||fffd||fffd|
        iLMonth = iLMonth - 1
        If iLMonth = 0 Then '12|fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
            iLMonth = 12
            iLYear = iLYear - 1
            intPos = ((iLYear - cBaseYear) * 12) + 1
            If intPos <= 0 Then intPos = 1
            strDays = Mid$(cStrLun, intPos, 12)
        Else
        End If
        iLDay = Choose(CInt(Mid$(strDays, iLMonth, 1)), 29, 30, 58, 59, 59, 60)
    Else
    End If
    Select Case CInt(Mid$(strDays, iLMonth, 1)) '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||3b8||fffd| |22e||fffd||fffd||fffd||474||fffd|
        Case 3, 4
            If iLDay > 29 Then
                iLDay = iLDay - 29
                blnYun = True
            Else
            End If
        Case 5, 6
            If iLDay > 30 Then
                iLDay = iLDay - 30
                blnYun = True
            Else
            End If
    End Select
'2018|fffd||fffd| 8|fffd||fffd| 2|fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'    If blnYun Then '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
'        strDays = Format(DateSerial(iLYear, iLMonth, iLDay), strFormat)
'        i = InStr(UCase(strFormat), "M")
'        If i = 0 Then
'            Sun2Lun = strDays & "(|fffd||fffd|)"
'        Else
'            Sun2Lun = Left(strDays, i - 1) & "(|fffd||fffd|)" & Right(strDays, Len(strDays) - i + 1)
'        End If
'    Else '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||6b0||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
'        '|fffd||fffd||fffd||fffd|
'        If iLMonth = 2 Then
'            If iLMonth <> Month(DateSerial(iLYear, iLMonth, iLDay)) Then '|fffd||fffd||fffd||fffd||3b4||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 2|fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||b5||fffd||fffd||fffd| |fffd||2b4||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
'                Sun2Lun = iLYear & "-" & iLMonth & "-" & iLDay
'            Else
'                Sun2Lun = Format(CDate(DateSerial(iLYear, iLMonth, iLDay)), strFormat)
'            End If
'        Else
'            Sun2Lun = Format(CDate(DateSerial(iLYear, iLMonth, iLDay)), strFormat)
'        End If
'    End If
'2018|fffd||fffd| 8|fffd||fffd| 2|fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|****
    strDays = Format(DateSerial(iLYear, iLMonth, iLDay), strFormat)
    i = InStr(UCase(strFormat), "M")
    If iLMonth = 2 And iLMonth <> Month(DateSerial(iLYear, iLMonth, iLDay)) Then '2|fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||b5||fffd||fffd||fffd| |fffd||2b4||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
        If blnYun Then
                Sun2Lun = iLYear & "-" & iLMonth & "-" & iLDay & "(|fffd||fffd|)"
        Else
            Sun2Lun = iLYear & "-" & iLMonth & "-" & iLDay
        End If
    Else
        If blnYun Then
            If i = 0 Then
                Sun2Lun = strDays & "(|fffd||fffd|)"
            Else
                Sun2Lun = Left(strDays, i - 1) & "(|fffd||fffd|)" & Right(strDays, Len(strDays) - i + 1)
            End If
        Else
            Sun2Lun = strDays
        End If
    End If
    
End Function


Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
