Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "MeinCode1"
Option Explicit

Public letzteZelle As Range
Sub SchreibeWert()
If letzteZelle Is Nothing Then Exit Sub
If Intersect(letzteZelle, Range("D14:D500")) Is Nothing Then Exit Sub

On Error GoTo Fehler
Application.EnableEvents = False

  If IsNumeric(letzteZelle) Then
    
    If letzteZelle <= 6 Then
        letzteZelle.Offset(0, 1) = 0.1
        letzteZelle.Offset(0, 2) = -0.1
    ElseIf letzteZelle > 6 And letzteZelle <= 30 Then
        letzteZelle.Offset(0, 1) = 0.2
        letzteZelle.Offset(0, 2) = -0.2
    ElseIf letzteZelle > 30 And letzteZelle <= 120 Then
        letzteZelle.Offset(0, 1) = 0.3
        letzteZelle.Offset(0, 2) = -0.3
    ElseIf letzteZelle > 120 And letzteZelle <= 400 Then
        letzteZelle.Offset(0, 1) = 0.5
        letzteZelle.Offset(0, 2) = -0.5
    ElseIf letzteZelle > 400 And letzteZelle <= 1000 Then
        letzteZelle.Offset(0, 1) = 0.8
        letzteZelle.Offset(0, 2) = -0.8
    ElseIf letzteZelle > 1000 And letzteZelle <= 2000 Then
        letzteZelle.Offset(0, 1) = 1.2
        letzteZelle.Offset(0, 2) = -1.2
    ElseIf letzteZelle > 2000 And letzteZelle <= 4000 Then
        letzteZelle.Offset(0, 1) = 2
        letzteZelle.Offset(0, 2) = -2
        
        
    End If
   
   End If
   
Fehler:
Application.EnableEvents = True
If Err.Number <> 0 Then MsgBox Err.Description, "!!! F E H L E R !!!"
End Sub

Attribute VB_Name = "Modul1"
Sub ZeileEinf|fffd|gen()
Dim Zelle As Range
Dim str As String

'Cells.Select
str = "Best|fffd|tigung Lieferant"
Columns("A:A").Select
'ActiveSheet.UsedRange.Select
For Each Zelle In Selection
    If Zelle = str Then
        Tabelle1.Unprotect
        Zelle.Select
        ActiveCell.Offset(-3, 0).Select
        Selection.EntireRow.Copy
        Selection.Insert Shift:=xlUp
        Application.CutCopyMode = False
        Tabelle1.Protect
        Exit Sub
    End If
Next Zelle



End Sub
Attribute VB_Name = "Modul10"
Sub Makro1()
Attribute Makro1.VB_Description = "Makro am 23.05.2007 von Vogel Michael aufgezeichnet"
Attribute Makro1.VB_ProcData.VB_Invoke_Func = "d\n14"
'
' Makro1 Makro
' Makro am 23.05.2007 von Vogel Michael aufgezeichnet
'
' Tastenkombination: Strg+d
'
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=True
End Sub
Attribute VB_Name = "Modul11"

Sub Zeile_kopieren()
Attribute Zeile_kopieren.VB_ProcData.VB_Invoke_Func = "r\n14"
'
' Zeile_kopieren Makro
'
' Tastenkombination: Strg+r
'
    Rows(ActiveCell.Row).Select
    Selection.Copy
    ActiveCell.Offset(1, 0).Select
    Rows(ActiveCell.Row).Select
    Selection.Insert Shift:=xlDown
    ActiveCell.Offset(-1, 7).Select

End Sub

Attribute VB_Name = "Modul2"
Option Explicit

Sub Makro3()
Attribute Makro3.VB_Description = "Makro am 31.08.2004 von freudenb aufgezeichnet"
Attribute Makro3.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Makro3 Makro
' Makro am 31.08.2004 von freudenb aufgezeichnet
'

'
    Columns("A:A").Select
    Range("A4").Activate
End Sub
Sub Makro4()
Attribute Makro4.VB_Description = "Makro am 31.08.2004 von freudenb aufgezeichnet"
Attribute Makro4.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Makro4 Makro
' Makro am 31.08.2004 von freudenb aufgezeichnet
'

'
    Columns("B:B").Select
    Range("B13").Activate
End Sub
Attribute VB_Name = "Modul3"
Sub SpalteEinf|fffd|gen()
Dim Zelle As Range
Dim str As String

'Cells.Select
str = "X quer"
Rows("11:12").Select
'ActiveSheet.UsedRange.Select
For Each Zelle In Selection
    If Zelle = str Then
        Tabelle1.Unprotect
        Zelle.Select
        ActiveCell.Offset(0, -1).Select
        Selection.EntireColumn.Copy
        Selection.EntireColumn.Insert Shift:=xlToRight
        Application.CutCopyMode = False
        Tabelle1.Protect
        Exit Sub
    End If
Next Zelle



End Sub

Attribute VB_Name = "Modul4"
Sub ZeileL|fffd|schen()
Dim Zeile As String

Zeile = InputBox("Bitte geben Sie die Zeilennummer ein die gel|fffd|scht werden soll.")

If Zeile = "" Or Val(Zeile) <= 13 Then
    MsgBox "Sie haben einen falschen Wert eingegeben!"
    Exit Sub
End If

Tabelle1.Unprotect
On Error GoTo ende
Rows(Zeile).Select
Selection.Delete Shift:=xlUp
Tabelle1.Protect

ende:

End Sub
Attribute VB_Name = "Modul5"
Sub SpalteL|fffd|schen()

Dim spalte As String
Dim Zelle As Range

spalte = InputBox("Bitte geben Sie die Spalte ein die gel|fffd|scht werden soll.")
If spalte = "" Or IsNumeric(spalte) Or StrComp(spalte, "g") <= 0 Then
    MsgBox "Sie haben einen falschen Wert eingegeben!"
    Exit Sub
End If

Tabelle1.Unprotect
On Error GoTo ende
Columns(spalte).Select

For Each Zelle In Selection
    If Zelle.HasFormula Then
        MsgBox "Diese Spalte kann nicht gel|fffd|scht werden"
        Exit Sub
    End If
Next Zelle

Selection.Delete Shift:=xlToLeft
Tabelle1.Protect

ende:


End Sub
Attribute VB_Name = "Modul6"
Sub VieleZeilenEinf|fffd|gen()

Dim Zelle As Range
Dim str As String
Dim Zeilen As String
Dim i As Integer


str = "Best|fffd|tigung Lieferant"

Zeilen = InputBox("Wieviele Zeilen m|fffd|chten Sie einf|fffd|gen?")

If Zeilen = "" Or Val(Zeilen) <= 0 Then
    MsgBox "Sie haben einen falschen Wert eingegeben!"
    Exit Sub
End If


Columns("A:A").Select

For Each Zelle In Selection
    If Zelle = str Then
        Tabelle1.Unprotect
        Zelle.Select
        ActiveCell.Offset(-3, 0).Select
        
        For i = 1 To Val(Zeilen) Step 1
            Selection.EntireRow.Copy
            Selection.Insert Shift:=xlUp
        Next i
        
        Application.CutCopyMode = False
        Tabelle1.Protect
        Exit Sub
    End If
Next Zelle



End Sub
Attribute VB_Name = "Modul7"
Sub VieleSpaltenEinf|fffd|gen()

Dim Zelle As Range
Dim str As String
Dim Spalten As String
Dim i As Integer

Spalten = InputBox("Wieviele Spalten m|fffd|chten Sie einf|fffd|gen?")

If Spalten = "" Or Val(Spalten) <= 0 Then
    MsgBox "Sie haben einen falschen Wert eingegeben!"
    Exit Sub
End If

str = "X quer"
Rows("11:12").Select
For Each Zelle In Selection
    If Zelle = str Then
        Tabelle1.Unprotect
        Zelle.Select
        ActiveCell.Offset(0, -1).Select
        
        For i = 1 To Val(Spalten) Step 1
            Selection.EntireColumn.Copy
            Selection.EntireColumn.Insert Shift:=xlToRight
        Next i
        
        Application.CutCopyMode = False
        Tabelle1.Protect
        Exit Sub
    End If
Next Zelle

End Sub

Attribute VB_Name = "Modul8"
Option Explicit

Sub SpaltenbreiteAendern()

Dim breite_alt As Integer
Dim breite_neu As String
Dim spalte As String

spalte = InputBox(prompt:="Welche Spalte m|fffd|chte Sie |fffd|ndern?")

If spalte = "" Or IsNumeric(spalte) Then
    MsgBox "Sie haben einen falschen Wert eingegeben!"
    Exit Sub
End If

'Range(spalte).Select
'Columns(spalte).Select
'breite_alt = Selection.ColumnWidth
breite_alt = Columns(spalte).ColumnWidth

breite_neu = InputBox("Die aktuelle Breite betr|fffd|gt: " & breite_alt & Chr(13) & "Bitte geben Sie die neue Breite ein.")

If breite_neu = "" Or StrComp(breite_neu, "a") >= 0 Then
    MsgBox "Sie haben einen falschen Wert eingegeben!"
    Exit Sub
End If

Tabelle1.Unprotect
'Selection.EntireColumn.ColumnWidth = Val(breite_neu)
Columns(spalte).EntireColumn.ColumnWidth = Val(breite_neu)
Tabelle1.Protect

End Sub
Attribute VB_Name = "Modul9"
Option Explicit

Sub ZelleFormatieren()

Tabelle1.Unprotect
Application.Dialogs(xlDialogActiveCellFont).Show
Application.Dialogs(xlDialogPatterns).Show
Application.Dialogs(xlDialogBorder).Show
'Application.Dialogs(xlDialogPageSetup).Show
Application.Dialogs(xlDialogAlignment).Show
Application.Dialogs(xlDialogColumnWidth).Show
Tabelle1.Protect

End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Change(ByVal Target As Range)
If Intersect(Target, Range("D15:D500")) Is Nothing Then Exit Sub
Set letzteZelle = Target
End Sub


INQUEST-PP=macro
