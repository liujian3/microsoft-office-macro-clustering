Attribute VB_Name = "DataSorted"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Fixel"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Position"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Product"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "SPACEMAN_Reports"
'GARDENA EXCELREPORT
Global iNumberOfFixels As Integer
Global iNumberOfProducts As Integer
Global iNumberOfPositions As Integer

Sub RUN_SPACEMAN_MACRO()
        Application.ScreenUpdating = False
        Call Format_Values("Position", 66, 1)
        Call InitGlobalCounters
        Call ClearOldData
        Call UpdateDataSorted
        Call Format_FPS             'Fixels & Positions (Stock)
        Call HideSheets
        Call Add_Header_Footer
        Call PreparePrint
        Application.ScreenUpdating = True
        Sheets("Warenplatzierung").Select
    ActiveWindow.SelectedSheets.Visible = False
End Sub

Sub InitGlobalCounters()
    
'This macro calculates the number of fixels, products & positions

   'Calculate # products
    Sheets("Product").Select
    Range("A1").Select
    iCounter = 1
    While Cells(iCounter, 1) <> ""
        iCounter = iCounter + 1
    Wend
    iNumberOfProducts = iCounter - 2
    Sheets("Data Sorted").Cells(6, 44) = iNumberOfProducts
    'Calculate # positions
    Sheets("Position").Select
    Range("A1").Select
    iCounter = 1
    While Cells(iCounter, 1) <> ""
        iCounter = iCounter + 1
    Wend
    iNumberOfPositions = iCounter - 2
    Sheets("Data Sorted").Cells(7, 44) = iNumberOfPositions

End Sub

Sub ClearOldData()
    
'This macro clears the old data in data sorted

    Dim iRows As Integer
    'Clean up fixels
    Sheets("Data Sorted").Select
    iRows = Cells(7, 44)
    Range("B3:L" & Trim$(Str$(iRows + 2))).Clear
    'Insert new first row
    Cells(3, 2) = "=Position!CQ2"   'Fixel>Pos
    Cells(3, 3) = "=Position!CP2"   'Prod>Pos
    Cells(3, 4) = "=Position!B2"    'X
    Cells(3, 5) = "=Position!O2"    'Horizontal
    Cells(3, 6) = "=Position!P2"    'Total_Facings
    Cells(3, 7) = "=Position!BN2"   'Location ID
    Cells(3, 8) = "=Position!M2"    'Total_Facings
    Cells(3, 9) = "=Position!L2"    'PEG_ID
    
    Sheets("Data Sorted").Select
    iRows = Cells(7, 44)
    Range("N3:AK" & Trim$(Str$(iRows + 2))).Clear
    'Insert new first row
    Cells(3, 14) = "=Product!A2"   'ID
    Cells(3, 15) = "=Product!B2"   'EAN
    Cells(3, 16) = "=Product!N2"   'Desc_g
    Cells(3, 17) = "=Product!C2"  'Name
    Cells(3, 18) = "=Product!BM2"  'Units_Case
    Cells(3, 19) = "=Product!FD2"  'Cost
    
    'Select A1
    Range("A1").Select
End Sub

Sub UpdateDataSorted()

' This Macro updates & sorts the sheet "Data Sorted"
    
    'Select sheet
    Sheets("Data Sorted").Select
    'Create links for Position data
    Range("B3:L3").Copy
    Range("B3:L" & Trim$(Str$(iNumberOfPositions + 2))).Select
    ActiveSheet.Paste
    'Create links for Product data
    Range("N3:AK3").Copy
    Range("N3:AK" & Trim$(Str$(iNumberOfProducts + 2))).Select
    ActiveSheet.Paste
    
    'Sort Position data
    Range("C2").Select
     Selection.Sort Key1:=Range("C3"), Order1:=xlAscending, Header:=xlGuess, OrderCustom:=1, MatchCase:= _
        False, Orientation:=xlTopToBottom
    'Sort Product data
    Range("N2").Select
    Selection.Sort Key1:=Range("N3"), Order1:=xlAscending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
   
        
End Sub

Sub Format_FPS()

'This macro creates & formats the Warenplatzierung report
    
    Dim iColumnCounter As Integer
    Dim iLineCounter As Integer
    Dim iOrderCounter As Variant
    Dim iPegDHCounter As Integer
    Dim iPegEHCounter As Integer
    Dim iCol As Integer
    Dim iCounter As Integer
    Dim sCurrentFixel As String
    Dim iNumberOfPositionsneu As Integer
    
    'Update VLookup formula's
    Sheets("Warenplatzierung").Select
    
    Cells(11, 3) = "=VLOOKUP(A11,'Data Sorted'!$N$3:$AN$" & Trim$(Str$(iNumberOfProducts + 2)) & ",1,FALSE)" 'Produkt-ID
    Cells(11, 4) = "=VLOOKUP(A11,'Data Sorted'!$N$3:$AN$" & Trim$(Str$(iNumberOfProducts + 2)) & ",2,FALSE)" 'EAN
    Cells(11, 5) = "=VLOOKUP(A11,'Data Sorted'!$N$3:$AN$" & Trim$(Str$(iNumberOfProducts + 2)) & ",3,FALSE)" 'Desc G
    Cells(11, 6) = "=VLOOKUP(A11,'Data Sorted'!$N$3:$AN$" & Trim$(Str$(iNumberOfProducts + 2)) & ",4,FALSE)" 'Name
    Cells(11, 7) = "=VLOOKUP(A11,'Data Sorted'!$N$3:$AN$" & Trim$(Str$(iNumberOfProducts + 2)) & ",5,FALSE)" 'Unit_case
    Cells(11, 8) = "=VLOOKUP(A11,'Data Sorted'!$N$3:$AN$" & Trim$(Str$(iNumberOfProducts + 2)) & ",6,FALSE)" 'Price
    
   
    'Copy cells for all positions
    iNumberOfPositionsneu = iNumberOfPositions + 10

    Range("A11:L11").Select
    Selection.Copy
    Range("A11:L" & Trim$(Str$(iNumberOfPositionsneu))).Select
    ActiveSheet.Paste
    
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    If iNumberOfPositions > 1 Then
        With Selection.Borders(xlInsideHorizontal)
            .LineStyle = xlContinuous
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
    End If
    Range("B9").Select
    
    
    'Calculates the EK Bestellmenge, Anzahl EH and Anzahl DH
    For iLineCounter = 11 To iNumberOfPositionsneu   ' = Zeilen
                iOrderCounter = iOrderCounter + Cells(iLineCounter, 10)
                iPegEHCounter = iPegEHCounter + Cells(iLineCounter, 11)
                iPegDHCounter = iPegDHCounter + Cells(iLineCounter, 12)
    Next iLineCounter

   'Prints the calculated Fields
        Cells(iLineCounter + 1, 10) = iOrderCounter
        Cells(iLineCounter + 1, 11) = iPegEHCounter
        Cells(iLineCounter + 1, 12) = iPegDHCounter
        
    ' Formats calculated fields
        ' Formats EK Bestellwert
        Range("J" & (iLineCounter + 1)).Select
        Selection.NumberFormat = "#,##0.00[$|fffd|-1]"
        With Selection.Font
            .Name = "Arial"
            .FontStyle = "Fett"
            .Size = 12
        End With
        'Formats Anzahl EH
        Range("K" & (iLineCounter + 1)).Select
        With Selection.Font
            .Name = "Arial"
            .FontStyle = "Fett"
            .Size = 12
        End With
        'Formats Anzahl DH
        Range("L" & (iLineCounter + 1)).Select
        With Selection.Font
            .Name = "Arial"
            .FontStyle = "Fett"
            .Size = 12
        End With


End Sub

Sub SingleBorders(sRange As String)
    Range(sRange).Select
    Selection.Clear
    With Selection
        .Interior.ColorIndex = 15
        .Interior.Pattern = xlSolid
        .Borders(xlDiagonalDown).LineStyle = xlNone
        .Borders(xlDiagonalUp).LineStyle = xlNone
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeLeft).Weight = xlMedium
        .Borders(xlEdgeLeft).ColorIndex = xlAutomatic
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeTop).Weight = xlMedium
        .Borders(xlEdgeTop).ColorIndex = xlAutomatic
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).Weight = xlMedium
        .Borders(xlEdgeBottom).ColorIndex = xlAutomatic
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlEdgeRight).Weight = xlMedium
        .Borders(xlEdgeRight).ColorIndex = xlAutomatic
        .Borders(xlInsideVertical).LineStyle = xlNone
    End With
End Sub
Sub HideSheets()

'This macro hides the sheets that are not needed after the reports are run

    Sheets("Store").Select
    ActiveWindow.SelectedSheets.Visible = False
    Sheets("Section").Select
    ActiveWindow.SelectedSheets.Visible = False
    Sheets("Fixel").Select
    ActiveWindow.SelectedSheets.Visible = False
    Sheets("Product").Select
    ActiveWindow.SelectedSheets.Visible = False
    Sheets("Position").Select
    ActiveWindow.SelectedSheets.Visible = False
    Sheets("Data Sorted").Select
    ActiveWindow.SelectedSheets.Visible = False
End Sub
Public Sub Format_Values(sSheet As String, startcol As Integer, cols As Integer)
'This macro formats the numeric values of the table products into valus with decimal comma separator

   
    Dim iCounter As Integer
    Dim n, i As Integer
    
    Sheets(sSheet).Select
    Range("A1").Select
    iCounter = 1
    While Cells(iCounter, 1) <> ""
        iCounter = iCounter + 1
    Wend

For i = 0 To (cols - 1)
    n = 0
    For n = 2 To iCounter - 1
    Cells(n, startcol + i) = Val(Cells(n, startcol + i))
    Next n
    Worksheets(sSheet).Columns(startcol + i).NumberFormat = "0"
Next i
End Sub

'This macro create a copy of the sheet "Regale & Positionen" and define the format for print output
Sub PreparePrint()
    Sheets("Warenplatzierung").Select
    Sheets("Warenplatzierung").Copy Before:=Sheets(1)
    Sheets("Warenplatzierung (2)").Select
    Sheets("Warenplatzierung (2)").Name = "Warenplatzierung Print"
    
     Dim vPageBreak As Variant
     Dim vPageBreak_2 As Variant
     Dim iPage As Integer
     Dim iRow As Integer
     Dim iCounter As Integer
     Dim vNumberOfPages As Variant
     Dim iLines As Integer
     'Added by C. Wilke at 01.02.05 for update of Office xp
     Columns("A:A").ColumnWidth = 1
     'End
     iRow = Cells(Rows.Count, 10).End(xlUp).Row
     iPage = 1
     iLines = 1
     vNumberOfPages = ExecuteExcel4Macro("INDEX(GET.DOCUMENT(50)," & iPage & ")")
start:
     While IsError(vPageBreak) = False
         vPageBreak = ExecuteExcel4Macro("INDEX(GET.DOCUMENT(64)," & iPage & ")")
         vPageBreak_2 = vPageBreak
         If IsError(vPageBreak) Then
            iRow = Cells(Rows.Count, 10).End(xlUp).Row
            
            If vNumberOfPages > 0 Then
              While IsError(vPageBreak_2) = True
                    Range("A4:M4").Select
                    Selection.Copy
                    ActiveSheet.Range("A" & iRow + iLines & ":M" & iRow + iLines).Select
                    ActiveSheet.Paste
                    Selection.RowHeight = 15
                    vPageBreak_2 = ExecuteExcel4Macro("INDEX(GET.DOCUMENT(64)," & iPage & ")")
                    iLines = iLines + 1
              Wend
            
              If vPageBreak_2 - iRow > 3 Then
                 Rows(vPageBreak_2).Delete
                 Range("A1:M3").Select
                 Selection.Copy
                 ActiveSheet.Range("A" & vPageBreak_2 - 1 & ":M" & vPageBreak_2 - 3).Select
                 ActiveSheet.Paste
                 
               Else
                    vPageBreak = ""
                   GoTo start
                End If
            End If
             'Added by C. Wilke at 01.02.05 for update of Office xp
             Columns("A:A").ColumnWidth = 0
             Range("A1:A1").Select
             'End
             Exit Sub
         Else
           For iCounter = 3 To 1 Step -1
              Rows(vPageBreak - iCounter).Insert
              Range("A1:M3").Select
           Next
                 Selection.Copy
                 ActiveSheet.Range("A" & vPageBreak - 1 & ":M" & vPageBreak - 3).Select
                 ActiveSheet.Paste
                 Selection.RowHeight = 15
                 Selection.Borders(xlEdgeBottom).LineStyle = xlNone
                 
         End If
         iPage = iPage + 1
     Wend
    'Added by C. Wilke at 01.02.05 for update of Office xp
     Columns("A:A").ColumnWidth = 0
     Range("A1:A1").Select
    'End
End Sub

Sub Add_Header_Footer()
    Sheets("Warenplatzierung").Select
    
    Cells(3, 2) = Worksheets("STORE").Range("DS2").Value   '"=STORE!DS2" 'Title
    Cells(3, 6) = Worksheets("SECTION").Range("C2").Value  '"=SECTION!C2"  ' Path and Filename
    Cells(3, 13) = Format(Date, "dd. mmmm. yyyy")
End Sub

Attribute VB_Name = "Section"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



INQUEST-PP=macro
