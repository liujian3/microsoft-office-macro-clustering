Attribute VB_Name = "Form_NASTR"
Attribute VB_Base = "0{0471DDF7-137A-4375-9F55-F6314C903F2E}{5CEB411E-0CDF-43D2-A7D0-0A02ED2B4175}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdGetNastrProxyFromIE_Click()
  On Error Resume Next
  'access Windows scripting
  Set myWS = CreateObject("WScript.Shell")
  'read key from registry
  Dim RegKeyRead As String
  RegKeyRead = myWS.RegRead("HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ProxyServer")
  Form_NASTR.TxtProxy.Text = GetWordNum(RegKeyRead, 1, ":")
  Form_NASTR.TxtProxyPort.Text = GetWordNum(RegKeyRead, 2, ":")
End Sub

Private Sub CommandButton1_Click()
    Form_SEND.Save_Nastr (1)
    Form_NASTR.Hide
End Sub

Private Sub CommandButton3_Click()
    Form_NASTR.Hide
End Sub
Attribute VB_Name = "Form_SEND"
Attribute VB_Base = "0{E1F71F1A-24D6-4160-A270-DA8EB7B8B1EE}{C1942ED1-2D26-4566-9D0C-BF05C0D60E41}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdGetNastrProxyFromIE_Click()
  On Error Resume Next
  'access Windows scripting
  Set myWS = CreateObject("WScript.Shell")
  'read key from registry
  Dim RegKeyRead As String
  RegKeyRead = myWS.RegRead("HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ProxyServer")
  TxtProxy.Text = GetWordNum(RegKeyRead, 1, ":")
  TxtProxyPort.Text = GetWordNum(RegKeyRead, 2, ":")
End Sub

Private Sub Frame1_Click()

End Sub

Private Sub cmd_cancel_Click()
    Save_Nastr (0)
    Form_SEND.Hide
End Sub

Private Sub cmd_exit_Click()
    Save_Nastr (0)
    Form_SEND.Hide
End Sub

Private Sub cmd_ok_Click()
    Dim i As Integer, j As Long, ctext As String, tmpstr As String, li As Integer
    Dim hInternet As Long, hSession As Long, hINetSession As Long, req As String, hFile As Long, iRes As Long
    Dim bDoLoop As Boolean
    Dim sReadBuffer As String * 2048
    Dim lNumberOfBytesRead As Long
    Dim sBuffer As String, postData As String, oServerXMLHTTP As Variant, cWeb As String, str_text As String, str_progress As String
    Dim flag As Boolean, tmr As Integer, len_post As Long, cProxy As String
    Dim iTimeout As Long, lAsync As Boolean, cJSON As String
    Dim newWeb As Boolean, addValue As Boolean
    
    iTimeout = 900 'Val(Form_SEND.txtTimeOut.Value)
    
    Worksheets("System").Range("B17").Value = Form_SEND.txtAdress.Value
    Worksheets("System").Range("B16").Value = Form_SEND.TxtUser.Value
    Form_SEND.TxtProtokol.Text = ""
    iNewVers = 0
    If ChkSaveNewVers1.Value = True Then
        iNewVers = 1
    End If
    
    If ChkAddValue1.Value = True Then
        addValue = 1
    End If
        
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    cWeb = RTrim(CStr(Form_SEND.txtAdress.Value))
    If cWeb = "" Then
        MsgBox ("|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| WEB |fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
        End
    End If
    'FORM_SEND.Enabled = False
    Form_SEND.TxtProtokol.Text = Form_SEND.TxtProtokol.Text + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|."
    Form_SEND.Repaint
    ctext = Get_Report(0, ChkSaveNewVers1.Value, Form_NASTR.ChkCRC.Value, addValue)
    If ctext = "-1" Then
        End
    End If
   
   'If FORM_SEND.ChkCRC.Value = True Then
   '     ctext = ctext + "CRC=" + Str(crc16(ctext, 0)) + Chr(13) + Chr(10)
   'End If
    
    Form_SEND.Repaint
    Form_SEND.TxtProtokol.Text = Form_SEND.TxtProtokol.Text + Chr(13) + Chr(10) + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|."
    Form_SEND.Repaint
    user = CStr(Form_SEND.TxtUser)
    pass = CStr(Form_SEND.TxtPass)
    
    cProxy = CStr(Form_NASTR.TxtProxy)
    If Trim(Form_NASTR.TxtProxyPort) <> "" Then
        cProxy = cProxy + ":" + Form_NASTR.TxtProxyPort
    End If
    
    If Right(cWeb, 1) <> "/" Then
        cWeb = cWeb + "/"
    End If
    'cWeb = cWeb + "Services/excelClient.ashx2"
    newWeb = False
    If Worksheets("System").Cells(22, 3).Value <> "" And Worksheets("System").Cells(23, 3).Value <> "" Then
        newWeb = True
    End If
    
    If newWeb = True Then
       cWeb = cWeb + "Services/excelClient2.ashx"
    Else
       cWeb = cWeb + "Services/excelClient.ashx"
    End If
    
    Form_SEND.TxtProtokol.ForeColor = RGB(0, 0, 0)
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    postData = ctext
    Form_SEND.TxtProtokol.Text = Form_SEND.TxtProtokol.Text + Chr(13) + Chr(10) + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|."
    On Error Resume Next
    str_progress = ""
    len_post = Len(postData)
    Form_SEND.TxtProtokol.Text = Form_SEND.TxtProtokol.Text + " |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| " + CStr(Round(len_post / 1024, 0)) + " |fffd||fffd|."
    str_text = Form_SEND.TxtProtokol.Text
    Form_SEND.Repaint
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
   'Set oServerXMLHTTP_TEST = GetHTTPObject()
'On Error Resume Next
 '   Form_SEND.TxtProtokol.Text = Form_SEND.TxtProtokol.Text + "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|..." + Chr(13) + Chr(10)
 '   Form_SEND.Repaint
 '   DoEvents
 '   With oServerXMLHTTP_TEST
 '       If UCase(Left(cWeb, 5)) = "HTTPS" Then
 '           .setOption 2, 13056
 '       End If
 '       'If Form_SEND.ChkProxy = True Then
 '       '    .setProxy 2, cProxy
 '       'End If
 '       If Form_NASTR.CheckBoxUseProxy = True Then
 '           .setProxy 2, cProxy
 '       End If
 '
 '       .Open "POST", cWeb, False
 '
 '       If Form_NASTR.CheckBoxUseProxy = True And Form_NASTR.TxtUserProxy.Value <> "" Then
 '           .setProxyCredentials CStr(Form_NASTR.TxtUserProxy.Value), CStr(Form_NASTR.TxtPassProxy.Value)
 '       End If
 '       .setRequestHeader "Content-Type", "application/x-www-form-urlencoded; charset=windows-1251"
 '    .send "{""receivedData"" : """", ""user"" : """", ""password"" : """"}"
 '   If .Status <> 200 Then
 '       cWeb = Replace(cWeb, "ashx2", "ashx")
 '       .Open "POST", cWeb, False
 '       If Form_NASTR.CheckBoxUseProxy = True And Form_NASTR.TxtUserProxy.Value <> "" Then
 '           .setProxyCredentials CStr(Form_NASTR.TxtUserProxy.Value), CStr(Form_NASTR.TxtPassProxy.Value)
 '       End If
 '       .setRequestHeader "Content-Type", "application/x-www-form-urlencoded; charset=windows-1251"
 '       .send "{""receivedData"" : """", ""user"" : """", ""password"" : """", ""dbServer"" : """", ""dbName"" : """"}"
 '     ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
 '     If .Status <> 200 Then
 '       Form_SEND.TxtProtokol.Text = Form_SEND.TxtProtokol.Text + Chr(13) + Chr(10) + "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
 '       If Len(CStr(.Status)) > 0 Then
 '           Form_SEND.TxtProtokol.Text = Form_SEND.TxtProtokol.Text + Chr(13) + Chr(10) + "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:" + CStr(.Status) + " " + CStr(.StatusText)
 '       Else
 '           Form_SEND.TxtProtokol.Text = Form_SEND.TxtProtokol.Text + Chr(13) + Chr(10) + "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:" + CStr(Err.Description)
 '       End If
 '       Exit Sub
 '       Else
 '           Form_SEND.TxtProtokol.Text = Form_SEND.TxtProtokol.Text + "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|..." + Chr(13) + Chr(10)
 '           newWeb = False
 '       End If
 '   Else
 '       Form_SEND.TxtProtokol.Text = Form_SEND.TxtProtokol.Text + "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|..." + Chr(13) + Chr(10)
 '       newWeb = True
 '   End If
 '   End With
    
'**************************

    
    Set oServerXMLHTTP = GetHTTPObject()
    
    Dim tmp As Variant, iTimeoutSec As Long
    tmp = oServerXMLHTTP.setTimeouts(iTimeout * 1000, iTimeout * 1000, iTimeout * 1000, iTimeout * 1000)
    
    If Form_NASTR.optAsync.Value = True Then
      lAsync = True
    Else
      lSync = False
    End If
    With oServerXMLHTTP
        If UCase(Left(cWeb, 5)) = "HTTPS" Then
            .setOption 2, 13056
        End If
       
        If Form_NASTR.ChkProxy = True Then
            .setProxy 2, cProxy
        End If
        .Open "POST", cWeb, lAsync
        If Form_NASTR.ChkProxy.Value = True And Form_NASTR.TxtUserProxy.Value <> "" Then
            .setProxyCredentials CStr(Form_NASTR.TxtUserProxy.Value), CStr(Form_NASTR.TxtPassProxy.Value)
        End If
        .setRequestHeader "Content-Type", "application/x-www-form-urlencoded; charset=windows-1251"
'        If FORM_SEND.ChkProxy = True Then
'            tmpstr = " Basic " + EncodeStr64(CStr(FORM_SEND.TxtUserProxy.Value) + ":" + CStr(FORM_SEND.TxtPassProxy.Value))
'            .setRequestHeader "Proxy-Authorization", tmpstr
'        End If
        If newWeb = True Then
            'cJSON = "{""receivedData"" : """ + Replace(Replace(Replace(Replace(postData, Chr(13), "CHR(13)"), Chr(10), "CHR(10)"), """", "CHR(34)"), "'", "CHR(39)") + """, ""user"": """ + user + """, ""password"": """ + pass + """, ""dbServer"": """ + Worksheets("System").Cells(22, 3).Value + """ , ""dbName"": """ + Worksheets("System").Cells(23, 3).Value + """  }"
            cJSON = "{""receivedData"" : """ + Replace(Replace(Replace(Replace(postData, Chr(13), "CHR(13)"), Chr(10), "CHR(10)"), """", "CHR(34)"), "'", "CHR(39)") + """, ""user"": """ + user + """, ""password"": """ + pass + """, ""dbServer"": """ + Replace(Replace(Replace(Worksheets("System").Cells(22, 3).Value, Chr(34), "CHR(34)"), Chr(39), "CHR(39)"), Chr(92), "CHR(92)") + """ , ""dbName"": """ + Worksheets("System").Cells(23, 3).Value + """  }"

        Else
            cJSON = "{""receivedData"" : """ + Replace(Replace(Replace(Replace(postData, Chr(13), "CHR(13)"), Chr(10), "CHR(10)"), """", "CHR(34)"), "'", "CHR(39)") + """, ""user"": """ + user + """, ""password"": """ + pass + """ }"
        End If
        Sleep (2000)
        .send cJSON + ""
        
    flag = False
    
    If Err.Number = 0 Then
    If lAsync = True Then
       tmr = 1
       Do
           'Sleep (1000)
           .waitForResponse (1)
           str_progress = " |fffd||fffd||fffd||fffd||fffd||fffd| " + CStr(tmr) + " |fffd||fffd||fffd|."
           If Form_SEND.Visible = False Then
            '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
              End
           End If
           
           Form_SEND.TxtProtokol.Text = str_text + " " + str_progress
           
           Form_SEND.Repaint
           tmr = tmr + 1
           If tmr > iTimeout Then
              Form_SEND.TxtProtokol.ForeColor = RGB(255, 0, 0)
              Form_SEND.TxtProtokol.Text = Form_SEND.TxtProtokol.Text + Chr(13) + Chr(10) + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
              Exit Sub
           End If
           
           DoEvents
           If .ReadyState = 4 Or Err.Number <> 0 Then
               flag = True
           End If
           Loop While flag = False
       If Err.Number = 0 Then
        If .Status = 200 Then
            body = .responseBody
        Else
        End If
       End If
    Else
    End If
    End If
        
    End With
    Form_SEND.Repaint
    
    If Err.Number <> 0 Then
        Form_SEND.TxtProtokol.ForeColor = RGB(255, 0, 0)
        Form_SEND.TxtProtokol.Text = Form_SEND.TxtProtokol.Text + Chr(13) + Chr(10) + Err.Description
        Exit Sub
    End If
    

    If oServerXMLHTTP.Status <> "200" Then
        Form_SEND.TxtProtokol.ForeColor = RGB(255, 0, 0)
        Form_SEND.TxtProtokol.Text = Form_SEND.TxtProtokol.Text + Chr(13) + Chr(10) + "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd| " + CStr(oServerXMLHTTP.Status) + " " + CStr(oServerXMLHTTP.StatusText)
    Else
        'FORM_SEND.TxtProtokol.Text = FORM_SEND.TxtProtokol.Text + Chr(13) + Chr(10) + "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:" + CStr(oServerXMLHTTP.Status)
    End If
    'MsgBox (InStr(1, oServerXMLHTTP.ResponseText, "ENDMESSAGEEXCELCLIENT", 1))
    li = InStr(1, oServerXMLHTTP.ResponseText, "ENDMESSAGEEXCELCLIENT", 1)
    If li = 0 Then
        tmpostr = oServerXMLHTTP.ResponseText
    Else
        tmpostr = Left(oServerXMLHTTP.ResponseText, li - 1)
    End If
    If tmpostr <> "" Then
        tmpostr = Replace(tmpostr, "\r\n", Chr(13) + Chr(10))
        tmpostr = Mid(tmpostr, 2, Len(tmpostr) - 2)
        Form_SEND.TxtProtokol.Text = Form_SEND.TxtProtokol.Text + Chr(13) + Chr(10) + "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:" + CStr(tmpostr)
    End If
    '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    li = InStr(1, tmpostr, "|fffd||fffd||fffd||fffd||fffd||fffd|:", vbTextCompare)
    If li > 0 Then
        ctext = Mid(tmpostr, li + 8, 3)
        Worksheets("System").Range("B19").Value = ctext
    End If
    
    Form_SEND.Enabled = True
    Exit Sub
errCreate:
        Form_SEND.Enabled = True
        Form_SEND.TxtProtokol.Text = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|: ServerXMLHTTP.4.0"
        Exit Sub
End Sub

Private Sub Cmd_sql_send_Click()
Dim sQuery As String
  'Dim Rs As ADODB.Recordset
  Dim con, cmd, param, recs As Variant
  Dim base As Variant
  'Dim Base As ADODB.Connection
  Dim i, j As Long
  Dim ii As Long
  Dim sServer As String
  Dim sPort As String
  Dim sBase, ctexts, crow As String
  Dim ctext As String
  Dim cResult As String
  Dim addValue As Boolean
  Dim isPostgre As Boolean
  Dim sTable As String
  Set con = CreateObject("ADODB.connection")
  Set cmd = CreateObject("ADODB.Command")
  Set param = CreateObject("ADODB.Parameter")
  Set recs = CreateObject("ADODB.Recordset")
   sServer = Form_SEND.txtServer.Value   '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
   sBase = Form_SEND.TxtBase.Value   '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
   sTable = "#tmp_data_excel" '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|'
On Error GoTo errCreate
    
  Save_Nastr (0)
  
  If Form_SEND.CmbBD.Value = "PostgreSQL" Then
    isPostgre = True
  Else
    isPostgre = False
  End If

  If isPostgre Then
    Dim serv
    serv = Split(sServer, ":")
    sServer = serv(0)
    If UBound(serv) = 1 Then
        sPort = serv(1)
    Else
        sPort = "5432"
    End If

    con.Open "Driver={PostgreSQL Unicode};SERVER=" + sServer + ";" & _
             "DATABASE=" + sBase + ";UID=" + Form_SEND.TxtLogin.Value + ";PWD=" + Form_SEND.TxtPWD.Value & _
             ";PORT=" + sPort
    sTable = "tmp_data_excel"
    con.Execute ("create temp table " + sTable + " (orders serial,data text)")
  Else
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If Form_SEND.ChkWinNT.Value = True Then
    con.Open "Provider=SQLOLEDB;Integrated Security=SSPI;Persist Security Info=False;Data Source=" + sServer + ";" & _
      "Initial Catalog=" + sBase
    Else
    con.Open "Provider=SQLOLEDB;Data Source=" + sServer + ";" & _
      "Initial Catalog=" + sBase + ";User ID=" + Form_SEND.TxtLogin.Value + ";Password=" + Form_SEND.TxtPWD.Value
    End If
    cmd.ActiveConnection = con
      con.Execute ("create table #tmp_data_excel ([orders] int identity (1,1),data varchar(6000))")
  End If
  
    Form_SEND.TextProtokolSQL.Text = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    Form_SEND.Repaint
    
    ctext = Get_Report(0, ChkSaveNewVers2.Value, False, ChkAddValue2.Value)
    j = GetWordCount(ctext, Chr(13) + Chr(10))
    
    Form_SEND.TextProtokolSQL.Text = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    Form_SEND.Repaint
    
    For ii = 1 To j
        crow = GetWordNum(ctext, ii, Chr(13) + Chr(10))
        con.Execute ("insert into " + sTable + " (data) select '" + crow + "'")
        
        If ii Mod 50 = 0 Then
            Form_SEND.TextProtokolSQL.Text = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| " + Trim(Str(ii)) + " |fffd||fffd| " + Trim(Str(j))
            Form_SEND.Repaint
        End If
    Next
        
    cmd.CommandType = 4
    con.CommandTimeout = 900
    'Set prm = cmd.CreateParameter("tmp_table", 200, 1, 100, "#tmp_data_excel")
    'cmd.Parameters.Append prm
    'Set prm = cmd.CreateParameter("over", 3, 1, 0, 1)
    'cmd.Parameters.Append prm
    'Set prm = cmd.CreateParameter("result", 200, 2, 8000, "")
    'cmd.Parameters.Append prm
    'cmd.CommandText = "rn_save_data_from_excel_client"
    'cmd.CommandTimeout (10000)
    
    Form_SEND.TextProtokolSQL.Text = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    Form_SEND.Repaint
    
    If isPostgre Then
        Set dts = con.Execute(" select * from dbo.rn_save_data_from_excel_client_pg(v_ctmptable := '" + sTable + "')")
    Else
        Set dts = con.Execute("exec dbo.rn_save_data_from_excel_client '#tmp_data_excel'")
    End If
    'dts = cmd.Execute
    
    '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    cResult = ""
     If dts.EOF <> dts.BOF Then dts.MoveFirst
       While Not dts.EOF
           cResult = cResult + dts.Fields(0).Value + Chr(13) + Chr(10)
           dts.MoveNext
       Wend
    
   ' cmd.Execute
   '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
   'Rs.Close
   'base.Close
    Form_SEND.TextProtokolSQL.Text = cResult
       '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    'li = InStr(1, prm.Value, "|fffd||fffd||fffd||fffd||fffd||fffd|:", vbTextCompare)
    'If li > 0 Then
    '    ctext = Mid(prm.Value, li + 8, 3)
    '    Worksheets("System").Range("B19").Value = ctext
    'End If
Exit Sub

errCreate:
        Form_SEND.Enabled = True
        Form_SEND.TextProtokolSQL.Text = CStr(Err.Description)
        If isPostgre And con.State = 0 And InStr(1, CStr(Err.Description), "fe_sendauth") = 0 Then
                Form_SEND.TextProtokolSQL.Text = Form_SEND.TextProtokolSQL.Text + vbCr + vbLf & _
                "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| PostgreSQL ODBC. " & _
                "https://ftp.postgresql.org/pub/odbc/versions/msi/psqlodbc_09_06_0400-x86.zip"
        End If
        Exit Sub
End Sub

Private Sub CmdNastr_Click()
   Form_NASTR.Show (1)
End Sub


Public Sub Save_Nastr(mode As Integer)
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    If mode = 1 Or mode = 0 Then
    
        If Form_NASTR.TxtProxy.Value <> "" Then
            Worksheets("System").Range("B20").Value = Form_Save.TxtProxy.Value
        End If
    
        If Form_NASTR.TxtProxyPort.Value <> "" Then
            Worksheets("System").Range("B21").Value = Form_Save.TxtProxyPort.Value
        End If
    
        If Form_NASTR.TxtUserProxy.Value <> "" Then
            Worksheets("System").Range("B18").Value = Form_Save.TxtUserProxy.Value
        End If
    
        If Form_NASTR.CheckBoxUseProxy.Value = True Then
            Worksheets("System").Range("C18").Value = "1"
        Else
            Worksheets("System").Range("C18").Value = ""
        End If

        Worksheets("System").Range("B24").Value = Form_NASTR.CheckBoxUseProxy.Value
        'Worksheets("System").Range("B25").Value = Form_NASTR.ChkSaveNewVers.Value
    End If

    If mode = 0 Then
        Worksheets("System").Range("B17").Value = Form_SEND.txtAdress.Value
        Worksheets("System").Range("B16").Value = Form_SEND.TxtUser.Value

        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| SQL
    
        Worksheets("System").Range("B16").Value = Form_SEND.TxtLogin.Value
        Worksheets("System").Range("B22").Value = Form_SEND.txtServer.Value
        Worksheets("System").Range("B23").Value = Form_SEND.TxtBase.Value
        Worksheets("System").Range("B25").Value = Form_SEND.ChkWinNT.Value
    End If

End Sub


Attribute VB_Name = "Form_Save"
Attribute VB_Base = "0{87D17D9D-7212-4D86-B250-BE4029C5A262}{B726F90F-79D8-4BB8-B525-8589F0A74AC9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmd_cancel_Click()
 Form_Save.Hide
End Sub

Private Sub cmd_ok_Click()
    Dim i As Integer, j As Long, ctext As String, tmpstr As String, li As Integer
    Dim hInternet As Long, hSession As Long, hINetSession As Long, req As String, hFile As Long, iRes As Long
    Dim bDoLoop As Boolean
    Dim sReadBuffer As String * 2048
    Dim lNumberOfBytesRead As Long
    Dim sBuffer As String, postData As String, oServerXMLHTTP As Variant, cWeb As String, str_text As String, str_progress As String
    Dim flag As Boolean, tmr As Integer, len_post As Long, cProxy As String
    Dim iTimeout As Long, lAsync As Boolean
    
    iTimeout = Val(Form_Save.txtTimeOut.Value)
    
    If Form_Save.TxtProxy.Value <> "" Then
        Worksheets("System").Range("B20").Value = Form_Save.TxtProxy.Value
    End If
    
    If Form_Save.TxtProxyPort.Value <> "" Then
        Worksheets("System").Range("B21").Value = Form_Save.TxtProxyPort.Value
    End If
    
    If Form_Save.TxtUserProxy.Value <> "" Then
        Worksheets("System").Range("B18").Value = Form_Save.TxtUserProxy.Value
    End If
    
    If Form_Save.ChkProxy.Value = True Then
        Worksheets("System").Range("C18").Value = "1"
    Else
        Worksheets("System").Range("C18").Value = ""
    End If

    
    Worksheets("System").Range("B17").Value = Form_Save.txtAdress.Value
    Worksheets("System").Range("B16").Value = Form_Save.TxtUser.Value
    Form_Save.TxtProtokol.Text = ""
    iNewVers = 0
    If ChkSaveNewVers.Value = True Then
        iNewVers = 1
    End If
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    cWeb = RTrim(CStr(Form_Save.txtAdress.Value))
    If cWeb = "" Then
        MsgBox ("|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| WEB |fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
        End
    Else
    'Form_Save.Enabled = False
    Form_Save.TxtProtokol.Text = Form_Save.TxtProtokol.Text + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|."
    Form_Save.Repaint
    ctext = Get_Report(Not Form_Save.ChkSaveNull.Value, ChkSaveNewVers.Value, ChkCRC.Value)
    If ctext = "-1" Then
        End
    End If
   
   'If Form_Save.ChkCRC.Value = True Then
   '     ctext = ctext + "CRC=" + Str(crc16(ctext, 0)) + Chr(13) + Chr(10)
   'End If
    
    Form_Save.Repaint
    Form_Save.TxtProtokol.Text = Form_Save.TxtProtokol.Text + Chr(13) + Chr(10) + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|."
    Form_Save.Repaint
    user = CStr(Form_Save.TxtUser)
    pass = CStr(Form_Save.TxtPass)
    cProxy = CStr(Form_Save.TxtProxy)
    If Trim(Form_Save.TxtProxyPort) <> "" Then
        cProxy = cProxy + ":" + Form_Save.TxtProxyPort
    End If
    
    If Right(cWeb, 1) <> "/" Then
        cWeb = cWeb + "/"
    End If
    cWeb = cWeb + "FormExcelClientRecive.aspx"
    End If
    Form_Save.TxtProtokol.ForeColor = RGB(0, 0, 0)
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    postData = user + Chr(13) + pass + Chr(13) + "1" + Chr(13) + ctext
    Form_Save.TxtProtokol.Text = Form_Save.TxtProtokol.Text + Chr(13) + Chr(10) + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|."
    On Error Resume Next
    str_progress = ""
    len_post = Len(postData)
    Form_Save.TxtProtokol.Text = Form_Save.TxtProtokol.Text + " |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| " + CStr(Round(len_post / 1024, 0)) + " |fffd||fffd|."
    str_text = Form_Save.TxtProtokol.Text
    Form_Save.Repaint
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
   Set oServerXMLHTTP_TEST = GetHTTPObject()
On Error Resume Next
    
    Form_Save.TxtProtokol.Text = Form_Save.TxtProtokol.Text + "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|..." + Chr(13) + Chr(10)
    Form_Save.Repaint
    DoEvents
    With oServerXMLHTTP_TEST
        If UCase(Left(cWeb, 5)) = "HTTPS" Then
            .setOption 2, 13056
        End If
        If Form_Save.ChkProxy = True Then
            .setProxy 2, cProxy
        End If
        .Open "POST", cWeb, False
        If Form_Save.ChkProxy = True And Form_Save.TxtUserProxy.Value <> "" Then
            .setProxyCredentials CStr(Form_Save.TxtUserProxy.Value), CStr(Form_Save.TxtPassProxy.Value)
        End If
        .setRequestHeader "Content-Type", "application/x-www-form-urlencoded; charset=windows-1251"
     .send ""
    If .Status <> 200 Then
        Form_Save.TxtProtokol.Text = Form_Save.TxtProtokol.Text + Chr(13) + Chr(10) + "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!"
        If Len(CStr(.Status)) > 0 Then
            Form_Save.TxtProtokol.Text = Form_Save.TxtProtokol.Text + Chr(13) + Chr(10) + "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:" + CStr(.Status) + " " + CStr(.StatusText)
        Else
            Form_Save.TxtProtokol.Text = Form_Save.TxtProtokol.Text + Chr(13) + Chr(10) + "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:" + CStr(Err.Description)
        End If
        Exit Sub
    Else
        Form_Save.TxtProtokol.Text = Form_Save.TxtProtokol.Text + "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|..." + Chr(13) + Chr(10)
    End If
    End With
    
'**************************
    
    Set oServerXMLHTTP = GetHTTPObject()
    
    Dim tmp As Variant, iTimeoutSec As Long
    tmp = oServerXMLHTTP.setTimeouts(iTimeout * 1000, iTimeout * 1000, iTimeout * 1000, iTimeout * 1000)
    
    If Form_Save.optAsync.Value = True Then
      lAsync = True
    Else
      lSync = False
    End If
    With oServerXMLHTTP
        If UCase(Left(cWeb, 5)) = "HTTPS" Then
            .setOption 2, 13056
        End If
       
        If Form_Save.ChkProxy = True Then
            .setProxy 2, cProxy
        End If
        .Open "POST", cWeb, lAsync
        If Form_Save.ChkProxy = True And Form_Save.TxtUserProxy.Value <> "" Then
            .setProxyCredentials CStr(Form_Save.TxtUserProxy.Value), CStr(Form_Save.TxtPassProxy.Value)
        End If
        .setRequestHeader "Content-Type", "application/x-www-form-urlencoded; charset=windows-1251"
'        If Form_Save.ChkProxy = True Then
'            tmpstr = " Basic " + EncodeStr64(CStr(Form_Save.TxtUserProxy.Value) + ":" + CStr(Form_Save.TxtPassProxy.Value))
'            .setRequestHeader "Proxy-Authorization", tmpstr
'        End If
        .send postData + ""
        
    flag = False
    
    If Err.Number = 0 Then
    If lAsync = True Then
       tmr = 1
       Do
           'Sleep (1000)
           .waitForResponse (1)
           str_progress = " |fffd||fffd||fffd||fffd||fffd||fffd| " + CStr(tmr) + " |fffd||fffd||fffd|."
           If Form_Save.Visible = False Then
            '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
              End
           End If
           
           Form_Save.TxtProtokol.Text = str_text + " " + str_progress
           
           Form_Save.Repaint
           tmr = tmr + 1
           If tmr > iTimeout Then
              Form_Save.TxtProtokol.ForeColor = RGB(255, 0, 0)
              Form_Save.TxtProtokol.Text = Form_Save.TxtProtokol.Text + Chr(13) + Chr(10) + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
              Exit Sub
           End If
           
           DoEvents
           If .ReadyState = 4 Or Err.Number <> 0 Then
               flag = True
           End If
           Loop While flag = False
       If Err.Number = 0 Then
        If .Status = 200 Then
            body = .responseBody
        Else
        End If
       End If
    Else
    End If
    End If
        
    End With
    Form_Save.Repaint
    
    If Err.Number <> 0 Then
        Form_Save.TxtProtokol.ForeColor = RGB(255, 0, 0)
        Form_Save.TxtProtokol.Text = Form_Save.TxtProtokol.Text + Chr(13) + Chr(10) + Err.Description
        Exit Sub
    End If
    

    If oServerXMLHTTP.Status <> "200" Then
        Form_Save.TxtProtokol.ForeColor = RGB(255, 0, 0)
        Form_Save.TxtProtokol.Text = Form_Save.TxtProtokol.Text + Chr(13) + Chr(10) + "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|: |fffd||fffd||fffd||fffd||fffd||fffd| " + CStr(oServerXMLHTTP.Status) + " " + CStr(oServerXMLHTTP.StatusText)
    Else
        'Form_Save.TxtProtokol.Text = Form_Save.TxtProtokol.Text + Chr(13) + Chr(10) + "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:" + CStr(oServerXMLHTTP.Status)
    End If
    'MsgBox (InStr(1, oServerXMLHTTP.ResponseText, "ENDMESSAGEEXCELCLIENT", 1))
    li = InStr(1, oServerXMLHTTP.ResponseText, "ENDMESSAGEEXCELCLIENT", 1)
    If li = 0 Then
        tmpostr = oServerXMLHTTP.ResponseText
    Else
        tmpostr = Left(oServerXMLHTTP.ResponseText, li - 1)
    End If
    If tmpostr <> "" Then
        Form_Save.TxtProtokol.Text = Form_Save.TxtProtokol.Text + Chr(13) + Chr(10) + "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|:" + CStr(tmpostr)
    End If
    '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    li = InStr(1, tmpostr, "|fffd||fffd||fffd||fffd||fffd||fffd|:", vbTextCompare)
    If li > 0 Then
        ctext = Mid(tmpostr, li + 8, 3)
        Worksheets("System").Range("B19").Value = ctext
    End If
    
    Form_Save.Enabled = True
    Exit Sub
errCreate:
        Form_Save.Enabled = True
        Form_Save.TxtProtokol.Text = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|: ServerXMLHTTP.4.0"
        Exit Sub


End Sub

Private Sub cmdGetNastrProxyFromIE_Click()

  On Error Resume Next
  'access Windows scripting
  Set myWS = CreateObject("WScript.Shell")
  'read key from registry
  Dim RegKeyRead As String
  RegKeyRead = myWS.RegRead("HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ProxyServer")
  TxtProxy.Text = GetWordNum(RegKeyRead, 1, ":")
  TxtProxyPort.Text = GetWordNum(RegKeyRead, 2, ":")
  
End Sub

Attribute VB_Name = "Form_Save_SQL"
Attribute VB_Base = "0{F404A867-0129-488B-9EB4-90D8FAF0AA6D}{A5B18B39-0015-47C8-BD9E-BEFCFE420E0E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmd_cancel_Click()
 Form_Save_SQL.Hide
End Sub

Private Sub cmd_ok_Click()
Dim sQuery As String
  'Dim Rs As ADODB.Recordset
  Dim con, cmd, param, recs As Variant
  Dim base As Variant
  'Dim Base As ADODB.Connection
  Dim i, j As Integer
  Dim ii As Integer
  Dim sServer As String
  Dim sBase, ctexts, crow As String
  Dim ctext As String
  Set con = CreateObject("ADODB.connection")
  Set cmd = CreateObject("ADODB.Command")
  Set param = CreateObject("ADODB.Parameter")
  Set recs = CreateObject("ADODB.Recordset")
   sServer = Form_Save_SQL.txtServer.Value   '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
   sBase = Form_Save_SQL.TxtBase.Value   '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
On Error GoTo errCreate

    
Worksheets("System").Range("B16").Value = Form_Save_SQL.TxtUser.Value
Worksheets("System").Range("B22").Value = Form_Save_SQL.txtServer.Value
Worksheets("System").Range("B23").Value = Form_Save_SQL.TxtBase.Value
  
  
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  If Form_Save_SQL.ChkWinNT.Value = True Then
  con.Open "Provider=SQLOLEDB;Integrated Security=SSPI;Persist Security Info=False;Data Source=" + sServer + ";" & _
    "Initial Catalog=" + sBase
  Else
  con.Open "Provider=SQLOLEDB;Data Source=" + sServer + ";" & _
    "Initial Catalog=" + sBase + ";User ID=" + Form_Save_SQL.TxtUser.Value + ";Password=" + Form_Save_SQL.TxtPass.Value
  End If
  cmd.ActiveConnection = con
    con.Execute ("create table #tmp_data_excel (orders int identity (1,1),data varchar(6000))")
    ctext = Get_Report(Not Form_Save_SQL.ChkSaveNull.Value, ChkSaveNewVers.Value, False)
    j = GetWordCount(ctext, Chr(13) + Chr(10))
    Form_Save_SQL.TxtProtokol.Text = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    Form_Save_SQL.Repaint
    For ii = 1 To j
        crow = GetWordNum(ctext, ii, Chr(13) + Chr(10))
        con.Execute ("insert #tmp_data_excel (data) select '" + crow + "'")
    Next

    cmd.CommandType = 4
    
    Set prm = cmd.CreateParameter("tmp_table", 200, 1, 100, "#tmp_data_excel")
    cmd.Parameters.Append prm
    Set prm = cmd.CreateParameter("over", 3, 1, 0, 1)
    cmd.Parameters.Append prm
    Set prm = cmd.CreateParameter("result", 200, 2, 8000, "")
    cmd.Parameters.Append prm
    cmd.CommandText = "rn_save_data_from_excel_client"
'    Set c = con.Execute("exec dbo.rn_save_data_from_excel_client '#tmp_data_excel',0,@p1 output select @p1")
    Form_Save_SQL.TxtProtokol.Text = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    Form_Save_SQL.Repaint
    
    cmd.Execute
   '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
   'Rs.Close
   'base.Close
    Form_Save_SQL.TxtProtokol.Text = prm.Value
       '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    li = InStr(1, prm.Value, "|fffd||fffd||fffd||fffd||fffd||fffd|:", vbTextCompare)
    If li > 0 Then
        ctext = Mid(prm.Value, li + 8, 3)
        Worksheets("System").Range("B19").Value = ctext
    End If
Exit Sub

errCreate:
        Form_Save_SQL.Enabled = True
        Form_Save_SQL.TxtProtokol.Text = CStr(Err.Description)
        Exit Sub
End Sub
   


Attribute VB_Name = "Module1"
Option Explicit
Public gpaNastrForm As Variant, gpRowNastr As Integer, gpColNastr As Integer
Const cVer = "2.0", colKodForm = "A", colLeftF = "C", colRightF = "D", colResultF = "E", colFormulaHum = "B", _
        xFORMA = 1, yFORMA = 1, xAtr = 4, xTable = 7, yTable = 1, xCol = 15, yCol = 1, xyFormatHead = "B29", xyFormatCell = "AM1", xForeColor = 38, xBackColor = 39
        
        
#If VBA7 And Win64 Then
    Declare PtrSafe Function InternetConnect Lib "wininet.dll" Alias "InternetConnectA" ( _
    ByVal hInternetSession As Long, ByVal sServerName As String, _
    ByVal nServerPort As Integer, ByVal sUsername As String, _
    ByVal sPassword As String, ByVal lService As Long, _
    ByVal lFlags As Long, ByVal lContext As Long) As Long
    
    Declare PtrSafe Function InternetOpen Lib "wininet.dll" Alias "InternetOpenA" ( _
    ByVal sAgent As String, ByVal lAccessType As Long, _
    ByVal sProxyName As String, _
    ByVal sProxyBypass As String, ByVal lFlags As Long) As Long
    
    Public Declare PtrSafe Function HttpOpenRequest Lib "wininet.dll" Alias _
          "HttpOpenRequestA" (ByVal hHttpSession As Long, ByVal sVerb As _
          String, ByVal sObjectName As String, ByVal sVersion As String, _
          ByVal sReferer As String, ByVal something As Long, ByVal lFlags _
          As Long, ByVal lContext As Long) As Long
    Public Const INTERNET_FLAG_RELOAD = &H80000000
    
    Public Declare PtrSafe Function HttpAddRequestHeaders Lib "wininet.dll" Alias _
          "HttpAddRequestHeadersA" (ByVal hHttpRequest As Long, _
          ByVal sHeaders As String, ByVal lHeadersLength As Long, ByVal _
          lModifiers As Long) As Integer
    Public Const HTTP_ADDREQ_FLAG_ADD_IF_NEW = &H10000000
    Public Const HTTP_ADDREQ_FLAG_ADD = &H20000000
    Public Const HTTP_ADDREQ_FLAG_REPLACE = &H80000000
    
    Public Declare PtrSafe Function HttpSendRequest Lib "wininet.dll" Alias _
          "HttpSendRequestA" (ByVal hHttpRequest As Long, ByVal sHeaders _
          As String, ByVal lHeadersLength As Long, sOptional As String, _
          ByVal lOptionalLength As Long) As Integer
          
    Public Declare PtrSafe Function HttpQueryInfo Lib "wininet.dll" _
       Alias "HttpQueryInfoA" (ByVal hHttpRequest As Long, _
       ByVal lInfoLevel As Long, ByRef sBuffer As Any, _
       ByRef lBufferLength As Long, ByRef lIndex As Long) As Integer
    Public Const HTTP_QUERY_FLAG_REQUEST_HEADERS = &H80000000
    
    Public Declare PtrSafe Function InternetReadFile Lib "wininet.dll" _
          (ByVal hFile As Long, ByVal sBuffer As String, _
          ByVal lNumberOfBytesToRead As Long, lNumberOfBytesRead As Long) _
          As Integer
    
    Public Declare PtrSafe Function InternetCloseHandle Lib "wininet.dll" _
       (ByVal hInet As Long) As Integer
       
    Public Declare PtrSafe Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)
#Else
    Declare Function InternetConnect Lib "wininet.dll" Alias "InternetConnectA" ( _
    ByVal hInternetSession As Long, ByVal sServerName As String, _
    ByVal nServerPort As Integer, ByVal sUsername As String, _
    ByVal sPassword As String, ByVal lService As Long, _
    ByVal lFlags As Long, ByVal lContext As Long) As Long
    
    Declare Function InternetOpen Lib "wininet.dll" Alias "InternetOpenA" ( _
    ByVal sAgent As String, ByVal lAccessType As Long, _
    ByVal sProxyName As String, _
    ByVal sProxyBypass As String, ByVal lFlags As Long) As Long
    
    Public Declare Function HttpOpenRequest Lib "wininet.dll" Alias _
          "HttpOpenRequestA" (ByVal hHttpSession As Long, ByVal sVerb As _
          String, ByVal sObjectName As String, ByVal sVersion As String, _
          ByVal sReferer As String, ByVal something As Long, ByVal lFlags _
          As Long, ByVal lContext As Long) As Long
    Public Const INTERNET_FLAG_RELOAD = &H80000000
    
    Public Declare Function HttpAddRequestHeaders Lib "wininet.dll" Alias _
          "HttpAddRequestHeadersA" (ByVal hHttpRequest As Long, _
          ByVal sHeaders As String, ByVal lHeadersLength As Long, ByVal _
          lModifiers As Long) As Integer
    Public Const HTTP_ADDREQ_FLAG_ADD_IF_NEW = &H10000000
    Public Const HTTP_ADDREQ_FLAG_ADD = &H20000000
    Public Const HTTP_ADDREQ_FLAG_REPLACE = &H80000000
    
    Public Declare Function HttpSendRequest Lib "wininet.dll" Alias _
          "HttpSendRequestA" (ByVal hHttpRequest As Long, ByVal sHeaders _
          As String, ByVal lHeadersLength As Long, sOptional As String, _
          ByVal lOptionalLength As Long) As Integer
          
    Public Declare Function HttpQueryInfo Lib "wininet.dll" _
       Alias "HttpQueryInfoA" (ByVal hHttpRequest As Long, _
       ByVal lInfoLevel As Long, ByRef sBuffer As Any, _
       ByRef lBufferLength As Long, ByRef lIndex As Long) As Integer
    Public Const HTTP_QUERY_FLAG_REQUEST_HEADERS = &H80000000
    
    Public Declare Function InternetReadFile Lib "wininet.dll" _
          (ByVal hFile As Long, ByVal sBuffer As String, _
          ByVal lNumberOfBytesToRead As Long, lNumberOfBytesRead As Long) _
          As Integer
    
    Public Declare Function InternetCloseHandle Lib "wininet.dll" _
       (ByVal hInet As Long) As Integer
       
    Public Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)
#End If


Private m_intDecTab(255) As Integer
Private Const m_strEncTabConst As String = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"

Public Function EncodeStr64(ByRef strInput As String) As String
  Dim i As Long
  Dim j As Integer
  Dim lngLen As Long
  Dim lngQuants As Long
  Dim intIndex As Long
  Dim strOutput As String
  Dim strLast As String
  Dim b(2) As Byte
  
  lngLen = Len(strInput)
  lngQuants = lngLen \ 3
  strOutput = String(lngQuants * 4, " ")

  For i = 0 To lngQuants - vbNull
    For j = 0 To 2
        b(j) = VBA.Asc(VBA.Mid$(strInput, (i * 3) + j + vbNull, vbNull))
    Next

    Mid(strOutput, intIndex + vbNull, 4) = EncodeQuantum(b)
    intIndex = intIndex + 4
  Next

  Select Case lngLen Mod 3
    Case 0
      strLast = vbNullString

    Case 1
      b(0) = VBA.Asc(VBA.Mid$(strInput, lngLen, vbNull))
      b(1) = 0&
      b(2) = 0&
      strLast = EncodeQuantum(b)
      strLast = VBA.Left$(strLast, 2) & "=="

    Case 2
      b(0) = VBA.Asc(VBA.Mid$(strInput, lngLen - vbNull, vbNull))
      b(1) = VBA.Asc(VBA.Mid$(strInput, lngLen, vbNull))
      b(2) = 0&
      strLast = EncodeQuantum(b)
      strLast = VBA.Left(strLast, 3) & "="
      
  End Select

  EncodeStr64 = strOutput & strLast
  
End Function




Public Function DecodeStr64(ByRef strEncoded As String) As String
  Dim d(3)        As Byte
  Dim c           As Byte
  Dim di          As Integer
  Dim i           As Long
  Dim lngLen        As Long
  Dim intIndex      As Long
  
  lngLen = Len(strEncoded)
  DecodeStr64 = String((lngLen \ 4) * 3, " ")
  Call MakeDecTab
  
  For i = vbNull To Len(strEncoded)
    c = VBA.CByte(VBA.Asc(VBA.Mid$(strEncoded, i, vbNull)))
    c = m_intDecTab(c)
  
    If c >= 0& Then
      d(di) = c
      di = di + vbNull

      If di = 4 Then
        Mid$(DecodeStr64, intIndex + vbNull, 3) = DecodeQuantum(d)
        intIndex = intIndex + 3

        If d(3) = 64 Then
          DecodeStr64 = VBA.Left(DecodeStr64, VBA.Len(DecodeStr64) - vbNull)
          intIndex = intIndex - vbNull
            
        End If

        If d(2) = 64 Then
          DecodeStr64 = VBA.Left(DecodeStr64, VBA.Len(DecodeStr64) - vbNull)
          intIndex = intIndex - vbNull
            
        End If
        
        di = 0&
          
      End If
      
    End If
    
  Next
  
End Function




Private Function EncodeQuantum(ByRef b() As Byte) As String
  Dim c As Integer

  c = SHR2(b(0)) And &H3F
  EncodeQuantum = EncodeQuantum & VBA.Mid$(m_strEncTabConst, c + vbNull, vbNull)

  c = SHL4(b(0) And &H3) Or (SHR4(b(1)) And &HF)
  EncodeQuantum = EncodeQuantum & VBA.Mid$(m_strEncTabConst, c + vbNull, vbNull)

  c = SHL2(b(1) And &HF) Or (SHR6(b(2)) And &H3)
  EncodeQuantum = EncodeQuantum & VBA.Mid$(m_strEncTabConst, c + vbNull, vbNull)

  c = b(2) And &H3F
  EncodeQuantum = EncodeQuantum & VBA.Mid$(m_strEncTabConst, c + vbNull, vbNull)
  
End Function




Private Function DecodeQuantum(ByRef d() As Byte) As String
  Dim c As Long

  c = SHL2(d(0)) Or (SHR4(d(1)) And &H3)
  DecodeQuantum = DecodeQuantum & VBA.Chr$(c)

  c = SHL4(d(1) And &HF) Or (SHR2(d(2)) And &HF)
  DecodeQuantum = DecodeQuantum & VBA.Chr$(c)

  c = SHL6(d(2) And &H3) Or d(3)
  DecodeQuantum = DecodeQuantum & VBA.Chr$(c)
    
End Function




Private Function MakeDecTab()
  Dim t As Integer
  Dim c As Integer

  For c = 0 To 255
    m_intDecTab(c) = &HFFF
  Next
  
  For c = VBA.Asc("A") To VBA.Asc("Z")
    m_intDecTab(c) = t
    t = t + vbNull
  Next
  
  For c = VBA.Asc("a") To VBA.Asc("z")
    m_intDecTab(c) = t
    t = t + vbNull
  Next
  
  For c = VBA.Asc("0") To VBA.Asc("9")
    m_intDecTab(c) = t
    t = t + vbNull
  Next


  c = Asc("+")
  m_intDecTab(c) = t
  t = t + vbNull

  c = Asc("/")
  m_intDecTab(c) = t
  t = t + vbNull
  
  c = Asc("=")
  m_intDecTab(c) = t
  
End Function




Private Function SHL2(ByVal bytValue As Byte) As Byte
    SHL2 = (bytValue * &H4) And &HFF
End Function

Private Function SHL4(ByVal bytValue As Byte) As Byte
    SHL4 = (bytValue * &H10) And &HFF
End Function

Private Function SHL6(ByVal bytValue As Byte) As Byte
    SHL6 = (bytValue * &H40) And &HFF
End Function

Private Function SHR2(ByVal bytValue As Byte) As Byte
    SHR2 = bytValue \ &H4
End Function

Private Function SHR4(ByVal bytValue As Byte) As Byte
    SHR4 = bytValue \ &H10
End Function

Private Function SHR6(ByVal bytValue As Byte) As Byte
    SHR6 = bytValue \ &H40

End Function
   
   Function URLEncode(strData)
 Dim i, c, ln: ln = Len(strData)
 For i = 1 To ln
   c = Asc(Mid(strData, i, 1))
   If c = 32 Then
      URLEncode = URLEncode & "+"
   ElseIf (c >= 48 And c <= 57) Or (c >= 65 And c <= 90) Or (c >= 97 And c <= 122) Or c = 61 Or c = 38 Then
      URLEncode = URLEncode & Chr(c)
   Else
      c = Hex(c): If Len(c) < 2 Then c = "0" & c
      URLEncode = URLEncode & "%" & c
   End If
 Next
End Function

Private Sub Send_Report()
Dim hInternet As Long, hSession As Long, hINetSession As Long, req As String, hFile As Long, iRes As Long
Dim bDoLoop As Boolean
Dim sReadBuffer As String * 2048
Dim lNumberOfBytesRead As Long
Dim sBuffer As String, postData As String, oServerXMLHTTP As Variant

    postData = "nii" + Chr(13) + "" + Chr(13) + "0" + Chr(13) + "|fffd||fffd||fffd||fffd||fffd||fffd|1" + Chr(13) + "|fffd||fffd||fffd||fffd||fffd||fffd|2"
    Set oServerXMLHTTP = CreateObject("Msxml2.ServerXMLHTTP")
    With oServerXMLHTTP
        '.Open "POST", "http://belov/sw/FormReciveData.aspx", False
        '.setRequestHeader "Content-Type", "application/x-www-form-urlencoded"
        '.send URLEncode(postData)
        'send "" + (postData)
        .Open "POST", "http://belov/sw/FormReciveData.aspx", False
        .setRequestHeader "Content-Type", "application/x-www-form-urlencoded; charset=windows-1251"
        .send postData + ""
    End With
    
'    hINetSession = InternetOpen("Excel - Client", 0, vbNullString, vbNullString, 0)
'    hSession = InternetConnect(hINetSession, "belov", 80, "", "", 3, 0, 0)
'    hFile = HttpOpenRequest(hSession, "POST", "/sw/FormReciveData.aspx", vbNullString, vbNullString, 0, INTERNET_FLAG_RELOAD, 0)
'    iRes = HttpAddRequestHeaders(hFile, req, Len(req), HTTP_ADDREQ_FLAG_ADD)
'    req = "Connection: Keep-Alive"
'    iRes = HttpAddRequestHeaders(hFile, req, Len(req), HTTP_ADDREQ_FLAG_ADD)

'    postData = "name=nii" + Chr(13) + "pass=" + Chr(13) + "DATA=|fffd||fffd||fffd||fffd||fffd||fffd|1" + Chr(13) + "|fffd||fffd||fffd||fffd||fffd||fffd|2"
'    iRes = HttpSendRequest(hFile, vbNullString, 0, (postData), Len(postData))
    
'    bDoLoop = True
'    While bDoLoop
'    sReadBuffer = vbNullString
'    bDoLoop = InternetReadFile(hFile, sReadBuffer, Len(sReadBuffer), lNumberOfBytesRead)
'    sBuffer = sBuffer & Left$(sReadBuffer, lNumberOfBytesRead)
    
'    If Not CBool(lNumberOfBytesRead) Then bDoLoop = False
'    Wend
    
'    InternetCloseHandle (hFile)
'    InternetCloseHandle (hSession)
'    InternetCloseHandle (hINetSession)
    MsgBox (oServerXMLHTTP.Status)
    iRes = MsgBox(oServerXMLHTTP.ResponseText)
End Sub

        
Function LastCell(r As Range) As Range
Dim rLast As Range
    Set rLast = r.Cells.SpecialCells(xlLastCell)
    If rLast.Cells(1, 1).Value = "" Then
        On Error Resume Next
        Set LastCell = r.Parent.Cells(r.Parent.Cells.Find("*", rLast, , , xlByRows, xlPrevious).Row, r.Parent.Cells.Find("*", rLast, , , xlByColumns, xlPrevious).Column)
        If Err.Number <> 0 Then Set LastCell = r.Parent.Cells(1, 1)
        On Error GoTo 0
    Else
        Set LastCell = rLast
    End If
    Set rLast = Nothing
End Function


Function getLastRow(cSheet As String, cCol As Integer) As Integer
    Dim iRow As Integer
    Const iMaxRow = 65536
    'getLastRow = Columns(ccol).Rows(65536).End(xlUp).Row
      With Worksheets(cSheet).Cells(iMaxRow, cCol)
     If IsEmpty(.Value) = True Then
        iRow = .End(xlUp).Row
     Else
        iRow = iMaxRow
     End If
     getLastRow = iRow
End With
End Function

Function GetWordNum(st As String, index As Long, cdecim As String) As String
    Dim i As Long, cnt As Long, ipos As Long, ibegin As Long, iend As Long
    i = 1
    cnt = 0
    ibegin = 0
    iend = 0
    ipos = InStr(i, st, cdecim)
    While ipos > 0 And cnt <= index + 1
        ipos = InStr(i, st, cdecim)
        If ipos > 0 Then
        If ipos > 0 Then cnt = cnt + 1
        If cnt = index - 1 Then ibegin = ipos + Len(cdecim)
        If (index = 1 And cnt = 1) Then ibegin = 1
        If cnt = index Then iend = ipos
        End If
        i = ipos + 1
    Wend
    GetWordNum = ""
    If ipos = 0 And cnt = 0 And index = 1 Then GetWordNum = st
    If ibegin > 0 Then
       If iend = 0 Then iend = Len(st) + 1
       GetWordNum = Mid(st, ibegin, iend - ibegin)
    End If
End Function

Function GetWordCount(st As String, cdecim As String) As Long
    Dim i As Long, cnt As Long, ipos As Long, ibegin As Long, iend As Long
    i = 1
    cnt = 0
    ibegin = 0
    iend = 0
    ipos = InStr(i, st, cdecim)
    While ipos > 0
        ipos = InStr(i, st, cdecim)
        If ipos > 0 Then
        If ipos > 0 Then cnt = cnt + 1
        End If
        i = ipos + 1
     Wend
     GetWordCount = cnt + 1
End Function
Private Sub Make_Report_run(cPath As String, cWeb As String, cUser As String)
                
        Make_Report (cPath)
        
        Worksheets("System").Cells(22, 3).Value = GetWordNum(cUser, 2, "#")
        Worksheets("System").Cells(23, 3).Value = GetWordNum(cUser, 3, "#")
        Worksheets("System").Cells(16, 2).Value = GetWordNum(cUser, 1, "#")
        Worksheets("System").Cells(17, 2).Value = cWeb
        
        Form_SEND.MultiPage1.Value = 0
        
End Sub

Private Sub Make_Report_Svod_ks(cPath As String, cServer As String, cBase As String, cUser As String)
        Worksheets("System").Cells(16, 2).Value = cUser
        Worksheets("System").Cells(22, 2).Value = cServer
        Worksheets("System").Cells(23, 2).Value = cBase
        Make_Report (cPath)
        Form_SEND.MultiPage1.Value = 1
End Sub

Private Sub Make_Report_run1()
        Make_Report ("C:\Excel\test.txt")
End Sub


Private Sub get_weeks(iYear As Integer)
        Dim iMaxWeek As Integer, i As Integer
        iMaxWeek = Format(CDate("31.12." + Str(iYear)), "ww")
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| system
        For i = 1 To iMaxWeek
          Worksheets("System").Cells(49 + i, 1).Value = Trim(Str(i)) + " (" + Left(CStr(DateSerial(iYear, 1, 1) + (i - 1) * 7), 5) + "-" + Left(CStr(DateSerial(iYear, 1, 1) + i * 7 - 1), 5) + ")"
          Worksheets("System").Cells(49 + i, 2).Value = i
        Next
        Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cmb_W.ListFillRange = "System!A50:B" + Trim(Str(50 + iMaxWeek - 1))
        
End Sub



Private Sub Make_Report(FileName As String)

    Dim hFile As Long, cFileName As String, TextLine As String, _
     lHeader As Integer, cVersion As String, lcError As String, Response As Integer, _
     aHeader As Variant, cCode_Form As String, lcBegin As String, lcEnd As String, cDate_Form As String, _
     cDep_Code As String, cOrg_Name As String, cBUDG As String, cBUDG_NAME As String, _
     liCountTable As Integer, cCount_Table As String, liCountCol As Integer, i As Integer, liCol As Integer, _
     lcVal_Len As String, lcRow As String, iRow As Integer, li As Long, aCols As Variant, iCols As Integer, _
     lcExport_order As String, cNAME_Form As String, max_row As Integer, rgb_value As String, code_col As Integer, _
     code As String, find_range As Range, Property_col As String, liCountAtr As Integer, iSetting As Integer, _
     iForeColor As Double, iBackColor As Double, iTypeCol As Integer, iCodeCol As Integer, iISEdit As Integer
   
     
    Close #1
    On Error Resume Next
        Application.DisplayAlerts = False
    cFileName = FileName
        If Dir(cFileName) <> "" Then
            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
        Open cFileName For Input Access Read As #1
        lHeader = 0
        lcError = ""
        liCountTable = 0
        liCountCol = 0
        liCol = 1
        liCountAtr = 0
        Property_col = "0"
        Worksheets("System").Range("C2:Z1000").Value = ""
        Worksheets("System").Range("B2:B15").Value = ""
        Worksheets("System").Range("D2:D15").Value = ""
        Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Unprotect
        For i = 3 To Sheets.Count
            Sheets(3).Delete
        Next
        
        'Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").cell(24, 1).EntireRow.Delete
        'Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").cell(24, 1).EntireRow.Delete
        
        
        Do While Not EOF(1)    ' Loop until end of file.
          Line Input #1, TextLine    ' Read line into variable.
          '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
          '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
          If Trim(TextLine) = "PROGRAM=Excel_Client" Then
             lHeader = lHeader + 1
          End If
          If GetWordNum(TextLine, 1, "=") = "VERSION" Then
             cVersion = GetWordNum(TextLine, 2, "=")
             If cVersion = cVer Then
                lHeader = lHeader + 1
             Else
                lcError = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|: " + cVersion + ". |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|: " + cVer
             End If
          End If
                      
          '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
          If lHeader = 2 Then
              
            '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
              If Left(Trim(TextLine), 1) = "[" Then
                lcBegin = Trim(TextLine)
                lcEnd = ""
              End If
              
            '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
              If Trim(TextLine) = "##" Then
                lcEnd = "END"
              End If
                                    
            Select Case lcBegin
              '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
                Case "[FORM]"
                    Select Case GetWordNum(TextLine, 1, "=")
                        Case "CODE_FORM"
                          cCode_Form = Trim(GetWordNum(TextLine, 2, "="))
                          Worksheets("System").Cells(2, 2).Value = Trim(GetWordNum(TextLine, 2, "="))
                        Case "NAME_FORM"
                          cNAME_Form = Trim(GetWordNum(TextLine, 2, "="))
                          Worksheets("System").Cells(3, 2).Value = Trim(GetWordNum(TextLine, 2, "="))
                        Case "DATE_FORM"
                          cDate_Form = Trim(GetWordNum(TextLine, 2, "="))
                          Worksheets("System").Cells(4, 2).Value = Trim(GetWordNum(TextLine, 2, "="))
                        Case "DEP_CODE"
                          cDep_Code = Trim(GetWordNum(TextLine, 2, "="))
                          Worksheets("System").Cells(5, 2).Value = Trim(GetWordNum(TextLine, 2, "="))
                        Case "ORG_NAME"
                          cOrg_Name = Trim(GetWordNum(TextLine, 2, "="))
                          Worksheets("System").Cells(6, 2).Value = Trim(GetWordNum(TextLine, 2, "="))
                        Case "BUDG"
                          cBUDG = Trim(GetWordNum(TextLine, 2, "="))
                          Worksheets("System").Cells(7, 2).Value = Trim(GetWordNum(TextLine, 2, "="))
                        Case "BUDG_NAME"
                          cBUDG_NAME = Trim(GetWordNum(TextLine, 2, "="))
                          Worksheets("System").Cells(8, 2).Value = Trim(GetWordNum(TextLine, 2, "="))
                        Case "BEGIN_DATE"
                          Worksheets("System").Cells(12, 2).Value = Trim(GetWordNum(TextLine, 2, "="))
                        Case "PERIOD_TYPE"
                          Worksheets("System").Cells(13, 2).Value = Trim(GetWordNum(TextLine, 2, "="))
                        Case "VERSION_FORM"
                          Worksheets("System").Cells(19, 2).Value = Trim(GetWordNum(TextLine, 2, "="))
                        Case "PERIOD_NUMBER"
                          Worksheets("System").Cells(14, 2).Value = Trim(GetWordNum(TextLine, 2, "="))
                    
                    End Select
               '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
                Case "[TABLE]"
                    Select Case GetWordNum(TextLine, 1, "=")
                        Case "#@"
                          liCountTable = liCountTable + 1
                          Sheets.Add After:=Worksheets(Sheets.Count)
                          Worksheets(Sheets.Count).name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| " + Str(liCountTable)
                        Case "COUNT_TABLE"
                          cCount_Table = Trim(GetWordNum(TextLine, 2, "="))
                          Worksheets("System").Cells(yTable + 1, xTable).Value = "COUNT_TABLE"
                          Worksheets("System").Cells(yTable + 1, xTable + 1).Value = cCount_Table
                        Case "ORDER"
                          Worksheets("System").Cells(yTable + liCountTable, xTable + 2).Value = Trim(GetWordNum(TextLine, 2, "="))
                        Case "NAME"
                          Worksheets("System").Cells(yTable + liCountTable, xTable + 3).Value = Trim(GetWordNum(TextLine, 2, "="))
                          Worksheets(liCountTable + 2).Cells(1, 1).Value = Trim(GetWordNum(TextLine, 2, "="))
                        Case "COUNT_COL"
                          Worksheets("System").Cells(yTable + liCountTable, xTable + 4).Value = Trim(GetWordNum(TextLine, 2, "="))
                        'Case "VAL_TYPE"
                        '  Worksheets("System").Cells(yTable + liCountTable, xTable + 6).Value = Trim(GetWordNum(TextLine, 2, "="))
                        'Case "CODE_COL"
                        '  Worksheets("System").Cells(yTable + liCountTable, xTable + 5).Value = Trim(GetWordNum(TextLine, 2, "="))
                          
                          With Worksheets(Worksheets("System").Cells(yTable + liCountTable, xTable + 2).Value + 2)
                            .Range(Cells(5, 1), Cells(5, 1)).Select
                            .Activate
                            ActiveWindow.FreezePanes = True
                          End With
                    End Select
               '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Case "[COLS]"
                    Select Case GetWordNum(TextLine, 1, "=")
                        Case "##"
                          liCountCol = liCountCol + 1
                        Case "#@"
                          liCountCol = liCountCol + 1
                        Case "TABLE"
                          Worksheets("System").Cells(yCol + liCountCol, xCol + 2).Value = Trim(GetWordNum(TextLine, 2, "="))
                          liCountTable = Val(Trim(GetWordNum(TextLine, 2, "=")))
                        Case "ORDER"
                          Worksheets("System").Cells(yCol + liCountCol, xCol + 3).Value = Trim(GetWordNum(TextLine, 2, "="))
                          liCol = Trim(GetWordNum(TextLine, 2, "="))
                        Case "NAME"
                          'Worksheets("System").Range(xyFormatHead).Copy Worksheets(liCountTable + 2).Cells(3, liCol)
                          'Worksheets("System").Range(xyFormatHead).Copy Worksheets(liCountTable + 2).Cells(4, liCol)
                          Worksheets("System").Cells(yCol + liCountCol, xCol + 4).Value = Trim(GetWordNum(TextLine, 2, "="))
                          Worksheets(liCountTable + 2).Cells(3, liCol).Value = Trim(GetWordNum(TextLine, 2, "="))
                          '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                        Case "INPUT_MASK"
                          Worksheets("System").Cells(yCol + liCountCol, xCol + 5).Value = Trim(GetWordNum(TextLine, 2, "="))
                        Case "EDIT"
                          Worksheets("System").Cells(yCol + liCountCol, xCol + 6).Value = Trim(GetWordNum(TextLine, 2, "="))
                        Case "LENGTH"
                          Worksheets("System").Cells(yCol + liCountCol, xCol + 7).Value = Trim(GetWordNum(TextLine, 2, "="))
                          lcVal_Len = Trim(GetWordNum(TextLine, 2, "="))
                        Case "TYPE_DATA"
                          Worksheets("System").Cells(yCol + liCountCol, xCol + 8).Value = Trim(GetWordNum(TextLine, 2, "="))
                          If Trim(GetWordNum(TextLine, 2, "=")) = "0" Then
                            Worksheets(liCountTable + 2).Columns(liCol).ColumnWidth = 20
                            Worksheets(liCountTable + 2).Columns(liCol).NumberFormat = "0.00"
                            If Val(lcVal_Len) > 0 Then
                                Worksheets(liCountTable + 2).Columns(liCol).NumberFormat = "0." + Application.WorksheetFunction.Rept("0", Val(lcVal_Len))
                            Else
                                Worksheets(liCountTable + 2).Columns(liCol).NumberFormat = "0"
                            End If
                          End If
                          'If Trim(GetWordNum(TextLine, 2, "=")) = "1" Then
                          '  Worksheets(liCountTable + 2).Columns(liCol).HorizontalAlignment = xlGeneral
                          'End If
                           '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                          If Trim(GetWordNum(TextLine, 2, "=")) = "1" Then
                            If Val(lcVal_Len) > 250 Then
                                    Worksheets(liCountTable + 2).Columns(liCol).NumberFormat = "General"
                            Else
                                    Worksheets(liCountTable + 2).Columns(liCol).NumberFormat = "@"
                            End If
                            If lcVal_Len <> "0" And lcVal_Len <> "" Then
                                If Val(lcVal_Len) > 50 Then
                                    lcVal_Len = "50"
                                End If
                                If Val(lcVal_Len) < 6 Then
                                    lcVal_Len = "6"
                                End If
                                Worksheets(liCountTable + 2).Columns(liCol).ColumnWidth = Val(lcVal_Len)
                            Else
                                Worksheets(liCountTable + 2).Columns(liCol).ColumnWidth = 20
                            End If
                          End If
                                Worksheets(liCountTable + 2).Rows(3).AutoFit
                          Worksheets(liCountTable + 2).Rows(4).NumberFormat = "@"
                             
                        Case "ORDER_VISIBLE"
                          lcExport_order = Trim(GetWordNum(TextLine, 2, "="))
                          Worksheets("System").Cells(yCol + liCountCol, xCol + 9).Value = lcExport_order
                          If lcExport_order <> "0" Then
                            Worksheets(liCountTable + 2).Cells(4, liCol).Value = lcExport_order
                            Worksheets(liCountTable + 2).Cells(4, liCol).HorizontalAlignment = xlCenter
                          End If
                        Case "HIDDEN"
                          Worksheets("System").Cells(yCol + liCountCol, xCol + 10).Value = Trim(GetWordNum(TextLine, 2, "="))
                          Property_col = Trim(GetWordNum(TextLine, 2, "="))
                          If Property_col = "1" Then
                                Worksheets(liCountTable + 2).Columns(liCol).ColumnWidth = 0
                                Worksheets(liCountTable + 2).Columns(liCol).HorizontalAlignment = xlGeneral
                                Worksheets(liCountTable + 2).Columns(liCol).ShrinkToFit = True
                          End If
                        Case "IS_CODE_COL"
                          Worksheets("System").Cells(yCol + liCountCol, xCol + 11).Value = Trim(GetWordNum(TextLine, 2, "="))
                        Case "TYPE_COL"
                          Worksheets("System").Cells(yCol + liCountCol, xCol + 12).Value = Trim(GetWordNum(TextLine, 2, "="))
                        Case "IS_EDIT"
                          Worksheets("System").Cells(yCol + liCountCol, xCol + 13).Value = Trim(GetWordNum(TextLine, 2, "="))
                    
                    End Select
                '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Case "[ATRIBUT]"
                    Select Case GetWordNum(TextLine, 1, "=")
                    Case "[ATRIBUT]"
                          liCountAtr = 0
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(24, 1).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
                    Case "#@"
                          liCountAtr = liCountAtr + 1
                          '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd|
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(24, 2 + liCountAtr).Borders(xlEdgeLeft).LineStyle = xlContinuous
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(24, 2 + liCountAtr).Borders(xlEdgeLeft).Weight = xlMedium
                          
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(24, 2 + liCountAtr).Borders(xlEdgeTop).LineStyle = xlContinuous
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(24, 2 + liCountAtr).Borders(xlEdgeTop).Weight = xlMedium
                
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(24, 2 + liCountAtr).Borders(xlEdgeBottom).LineStyle = xlContinuous
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(24, 2 + liCountAtr).Borders(xlEdgeBottom).Weight = xlMedium
                
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(24, 2 + liCountAtr).Borders(xlEdgeRight).LineStyle = xlContinuous
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(24, 2 + liCountAtr).Borders(xlEdgeRight).Weight = xlMedium
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(24, 2 + liCountAtr).Interior.ColorIndex = 15
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(24, 2 + liCountAtr).Interior.Pattern = xlSolid
                          
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(25, 2 + liCountAtr).Borders(xlEdgeLeft).LineStyle = xlContinuous
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(25, 2 + liCountAtr).Borders(xlEdgeLeft).Weight = xlMedium
                          
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(25, 2 + liCountAtr).Borders(xlEdgeTop).LineStyle = xlContinuous
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(25, 2 + liCountAtr).Borders(xlEdgeTop).Weight = xlMedium
                
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(25, 2 + liCountAtr).Borders(xlEdgeBottom).LineStyle = xlContinuous
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(25, 2 + liCountAtr).Borders(xlEdgeBottom).Weight = xlMedium
                
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(25, 2 + liCountAtr).Borders(xlEdgeRight).LineStyle = xlContinuous
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(25, 2 + liCountAtr).Borders(xlEdgeRight).Weight = xlMedium
                    Case "CODE_ATR"
                          Worksheets("System").Cells(1 + liCountAtr, 4).Value = Trim(GetWordNum(TextLine, 2, "="))
                          Worksheets("System").Cells(1 + liCountAtr, 5).Value = liCountAtr
                    Case "NAME_ATR"
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(24, 2 + liCountAtr).Value = Trim(GetWordNum(TextLine, 2, "="))
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(24, 2 + liCountAtr + 1).Value = " "
                    Case "STR_VAL"
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(25, 2 + liCountAtr).NumberFormat = "@"
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(25, 2 + liCountAtr).Value = Trim(GetWordNum(TextLine, 2, "="))
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(25, 2 + liCountAtr + 1).Value = " "
                          Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(25, 2 + liCountAtr).Locked = False
                          'Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Rows(2 + liCountAtr).AutoFit
                End Select
                Case "[SETTING]"
                          If TextLine <> "[SETTING]" Then
                            iSetting = Val(GetWordNum(TextLine, 1, "="))
                            lcRow = GetWordNum(TextLine, 2, "=")
                            Worksheets("System").Cells(1 + iSetting, xForeColor).Value = Trim(GetWordNum(lcRow, 1, "#"))
                            Worksheets("System").Cells(1 + iSetting, xBackColor).Value = Trim(GetWordNum(lcRow, 2, "#"))
                          End If
                '|fffd||fffd||fffd||fffd||fffd||fffd|
                Case "[DATA]"
                    Select Case GetWordNum(TextLine, 1, "=")
                        Case "[DATA]"
                          liCountTable = 0
                          iRow = 0
                        Case "#@"
                          liCountCol = Worksheets("System").Cells(yTable + liCountTable, xTable + 4).Value
                          If iRow <> 0 And liCountTable <> 0 Then
                           li = SetFormatCells(iRow + 5, liCountCol, liCountTable + 2)
                          End If
                          If liCountTable <> 0 Then
                           '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                           '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                           '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                            If liCountTable > 1 Then
                                    iCols = iCols + Worksheets("System").Cells(yTable + liCountTable - 1, xTable + 4).Value
                            Else
                                    iCols = 0
                            End If
                           
                           For li = 1 To liCountCol
                                iCodeCol = Worksheets("System").Cells(yCol + li + iCols, xCol + 11).Value
                                iTypeCol = Worksheets("System").Cells(yCol + li + iCols, xCol + 12).Value
                                iISEdit = Worksheets("System").Cells(yCol + li + iCols, xCol + 13).Value
                                Worksheets(liCountTable + 2).Activate
                                If iCodeCol = 1 Then
                                    Worksheets(liCountTable + 2).Range(Cells(4, li), Cells(4 + iRow, li)).Interior.Color = 7980795
                                End If
                                If iISEdit = 0 Then
                                    Worksheets(liCountTable + 2).Range(Cells(5, li), Cells(5 + iRow, li)).Interior.Color = 12632256
                                End If
                           Next
                           End If
                          
                          liCountTable = liCountTable + 1
                          iRow = 0
                        Case "ROW"
                           Line Input #1, TextLine    ' Read line into variable.
                           
                           Do While Left(TextLine, 7) <> "ROW_END" And Not EOF(1)
                               '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
                               If Left(TextLine, 7) = "SETTING" Then
                                   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
                                   liCol = Val(GetWordNum(GetWordNum(TextLine, 2, "="), 1, "#"))
                                   iSetting = Val(GetWordNum(GetWordNum(TextLine, 2, "="), 2, "#"))
                                   iForeColor = Val(Worksheets("System").Cells(1 + iSetting, xForeColor).Value)
                                   iBackColor = Val(Worksheets("System").Cells(1 + iSetting, xBackColor).Value)
                                   
                                   '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                                   If liCol = 0 Then
                                      liCountCol = Worksheets("System").Cells(yTable + liCountTable, xTable + 4).Value
                                      For li = 1 To liCountCol
                                        Worksheets(liCountTable + 2).Cells(iRow + 5, li).Interior.Color = iBackColor
                                      Next
                                   Else
                                        Worksheets(liCountTable + 2).Cells(iRow + 5, liCol).Interior.Color = iBackColor
                                   End If
                                   
                               Else
                                   li = Val(Left(TextLine, 3))
                                   lcRow = Right(TextLine, Len(TextLine) - 4)
                                   If lcRow = "#|fffd||fffd||fffd||fffd||fffd||fffd|" Then
                                    Worksheets(liCountTable + 2).Cells(iRow + 5, li).HorizontalAlignment = xlCenter
                                    Worksheets(liCountTable + 2).Cells(iRow + 5, li).Interior.Color = 12632256
                                    Worksheets(liCountTable + 2).Cells(iRow + 5, li).Value = "X"
                                   Else
                                    Worksheets(liCountTable + 2).Cells(iRow + 5, li).Value = lcRow
                                   End If
                                   Worksheets(liCountTable + 2).Cells(iRow + 5, li + 1).Value = " "
                               End If
                               Line Input #1, TextLine    ' Read line into variable.
                           
                           Loop
                           Application.StatusBar = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ...  |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ... |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd|" + Str(liCountTable) + ". |fffd||fffd||fffd||fffd||fffd||fffd| |fffd|" + Str(iRow)
                           iRow = iRow + 1
                        Case "SETTING_COL"
                                   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
                                   liCol = Val(GetWordNum(GetWordNum(TextLine, 2, "="), 1, "#"))
                                   iSetting = Val(GetWordNum(GetWordNum(TextLine, 2, "="), 2, "#"))
                                   iForeColor = Val(Worksheets("System").Cells(1 + iSetting, xForeColor).Value)
                                   iBackColor = Val(Worksheets("System").Cells(1 + iSetting, xBackColor).Value)
                                   
                                   '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
                                   For li = 0 To iRow - 1
                                     Worksheets(liCountTable + 2).Cells(li + 5, liCol).Interior.Color = iBackColor
                                   Next
                        Case "RGB"
                           If Len(TextLine) > 4 Then
                            lcRow = Right(TextLine, Len(TextLine) - 4)
                           Else
                            lcRow = ""
                           End If
                           code_col = Worksheets("System").Cells(liCountTable + 1, 12).Value
                           code = GetWordNum(lcRow, 1, "|")
                           Worksheets(liCountTable + 2).Activate
                           max_row = getLastRow("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| " + Str(liCountTable), code_col)
                           With Range(Cells(5, code_col), Cells(max_row, code_col))
                            Set find_range = .Find(code, LookIn:=xlValues, LookAt:=xlWhole)
                            If Not find_range Is Nothing Then
                                For li = 2 To GetWordCount(lcRow, "|")
                                    rgb_value = GetWordNum(lcRow, li, "|")
                                    Worksheets(liCountTable + 2).Cells(find_range.Row, li - 1).Interior.Color = Val(rgb_value)
                                Next
                            End If
                           End With
                    End Select
            
            End Select
          End If
          If lcError <> "" Then
            Response = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd|:" + lcError, vbInformation)
            Exit Do
          End If
        Loop
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|.
    Close #1
    
        Else
            Response = MsgBox("|fffd||fffd||fffd||fffd| " + cFileName + " |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|!", vbInformation)
        End If
    If iRow <> 0 And iCols <> 0 And liCountTable <> 0 Then
        li = SetFormatCells(iRow + 5, iCols, liCountTable + 2)
    End If
    'Worksheets(2).Cells(1, 1).Value = "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|: " + Worksheets("System").Cells(2, 2).Value + " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|: " + Worksheets("System").Cells(3, 2).Value
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Worksheets("System").Cells(9, 2).Value = GetWordNum(Worksheets("System").Cells(12, 2).Value, 3, ".")
      Worksheets("System").Cells(10, 2).Value = 1
      Worksheets("System").Cells(11, 2).Value = 1
     Select Case Worksheets("System").Cells(13, 2).Value
         Case 1 '|fffd||fffd||fffd|
            Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Opt_Y.Value = True
         Case 2 '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            Worksheets("System").Cells(10, 2).Value = Worksheets("System").Cells(14, 2).Value
            Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Opt_Q.Value = True
         Case 4 '|fffd||fffd||fffd||fffd||fffd|
            Worksheets("System").Cells(11, 2).Value = Worksheets("System").Cells(14, 2).Value
            Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Opt_M.Value = True
         Case 8 '|fffd||fffd||fffd||fffd||fffd||fffd|
            Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Opt_W.Value = True
     End Select
    get_weeks (Val(GetWordNum(Worksheets("System").Cells(12, 2).Value, 3, ".")))
     
    Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Activate
    Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Unprotect
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If liCountAtr = 0 Then
       Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Range("C24:C25").EntireRow.Delete
    End If
    Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(2, 2).Formula = "|fffd||fffd||fffd||fffd||fffd|:" + Worksheets("System").Cells(2, 2).Value + " " + Worksheets("System").Cells(3, 2).Value
    Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
    Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").EnableSelection = xlUnlockedCells
    Application.StatusBar = ""
    'Response = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!", vbInformation)
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    Dim CountTable As Integer, ColCount As Integer
    CountTable = Val(Worksheets("System").Range("H2").Value)
    For li = 1 To CountTable
        ColCount = Val(Worksheets("System").Range("K" + CStr(li + 1)).Value)
        Worksheets("System").Range(xyFormatHead).Copy
        
        Worksheets(li + 2).Activate
        Worksheets(li + 2).Range(Cells(3, 1), Cells(4, ColCount)).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    Next
    
    
    Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Activate
    Application.DisplayAlerts = True


End Sub


Function SetFormatCells(iRow As Integer, iCols As Integer, iSheet As Integer) As Integer
    Dim x As Integer, y As Integer
    x = 5
    y = 1
    Worksheets(iSheet).Activate
'    With Range(Cells(x, y), Cells(iRow, iCols))
'        .HorizontalAlignment = xlRight
'        .VerticalAlignment = xlBottom
'        .WrapText = True
'    End With
    With Range(Cells(x, y), Cells(iRow, iCols)).Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Range(Cells(x, y), Cells(iRow, iCols)).Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlMedium
        .ColorIndex = xlAutomatic
    End With
    With Range(Cells(x, y), Cells(iRow, iCols)).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Range(Cells(x, y), Cells(iRow, iCols)).Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Range(Cells(x, y), Cells(iRow, iCols)).Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With Range(Cells(x, y), Cells(iRow, iCols)).Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With

End Function

Function listexists(name As String) As Boolean
Dim obj As Object
On Error Resume Next
Set obj = Sheets(name)
listexists = (Err.Number = 0)
End Function

Function Get_Report(saveNull As Boolean, pNewVers As Boolean, sendCRC As Boolean, addValue As Boolean) As String
Dim max_tmp As Integer, limax As Integer, cCol As String, ctext As String, MaxRow As Integer, CountTable As Integer, ColCount As Integer, ColTable As Integer, li As Integer, lj As Integer, ColCode As Integer, lij As Integer, crow As String, a As DataObject, liAtr As Integer, yColTable As Integer, cRows As String, isNull As Boolean, cValue As String, crc As Long, onlytext As Integer, needSave As Integer
    crc = 0
    ctext = ""
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    cCol = "B"
    ctext = ctext + "PROGRAM = Excel_Client" + Chr(13) + Chr(10)
    ctext = ctext + "VERSION=2.0" + Chr(13) + Chr(10)
    ctext = ctext + "DATE=" + CStr(Date) + " " + CStr(Time) + Chr(13) + Chr(10)
    ctext = ctext + "USER=" + Worksheets("System").Range(cCol + "16").Value + Chr(13) + Chr(10)
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    ctext = ctext + "##" + Chr(13) + Chr(10)
    ctext = ctext + "[FORM]" + Chr(13) + Chr(10)
    ctext = ctext + "CODE_FORM=" + CStr(Worksheets("System").Range(cCol + "2").Value) + Chr(13) + Chr(10)
    ctext = ctext + "DATE_FORM=" + CStr(Worksheets("System").Range(cCol + "4").Value) + Chr(13) + Chr(10)
    ctext = ctext + "DEP_CODE=" + CStr(Worksheets("System").Range(cCol + "5").Value) + Chr(13) + Chr(10)
    ctext = ctext + "BUDG=" + CStr(Worksheets("System").Range(cCol + "7").Value) + Chr(13) + Chr(10)
    ctext = ctext + "YEAR=" + CStr(Worksheets("System").Range(cCol + "9").Value) + Chr(13) + Chr(10)
    ctext = ctext + "PERIOD=" + CStr(Worksheets("System").Range(cCol + "13").Value) + Chr(13) + Chr(10)
    If Worksheets("System").Range(cCol + "13").Value = 2 Then
        ctext = ctext + "PERIOD_NUM=" + CStr(Worksheets("System").Range(cCol + "10").Value) + Chr(13) + Chr(10)
    Else
        If Worksheets("System").Range(cCol + "13").Value = 8 Then
            ctext = ctext + "PERIOD_NUM=" + CStr(Worksheets("System").Range(cCol + "14").Value) + Chr(13) + Chr(10)
        Else
            ctext = ctext + "PERIOD_NUM=" + CStr(Worksheets("System").Range(cCol + "11").Value) + Chr(13) + Chr(10)
        End If
    End If
    
    ctext = ctext + "VERSION_FORM=" + CStr(Worksheets("System").Range(cCol + "19").Value) + Chr(13) + Chr(10)
    If pNewVers = True Then
        ctext = ctext + "NEW_VERSION=1" + Chr(13) + Chr(10)
    End If
    If addValue = True Then
        ctext = ctext + "ADD_VALUE=1" + Chr(13) + Chr(10)
    End If
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    liAtr = 2
    ctext = ctext + "[ATRIBUTS]" + Chr(13) + Chr(10)
    While CStr(Worksheets("System").Cells(liAtr, 4).Value) <> ""
        ctext = ctext + CStr(Worksheets("System").Cells(liAtr, 4).Value) + "=" + Trim(CStr(Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|").Cells(25, 1 + liAtr).Value)) + Chr(13) + Chr(10)
        liAtr = liAtr + 1
    Wend
    ctext = ctext + "##" + Chr(13) + Chr(10)
    '|fffd||fffd||fffd||fffd||fffd||fffd|
    CountTable = Val(Worksheets("System").Range("H2").Value)
    
    If Worksheets.Count - 2 < CountTable Then
            MsgBox ("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|: " + Str(CountTable) + " |fffd||fffd|.")
            Get_Report = "-1"
            Exit Function
    End If
    
    For li = 1 To CountTable
        yColTable = 2
        While Val(Worksheets("System").Cells(yColTable, 17).Value) <> li
            yColTable = yColTable + 1
        Wend
                    
        ColCode = Val(Worksheets("System").Range("K" + CStr(li + 1)).Value)
        
        max_tmp = 0
        
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd|
        'If listexists("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| " + Str(li)) = False Then
        '    MsgBox ("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|. |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|: " + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| " + Str(li))
        '    Get_Report = "-1"
        '    Exit Function
        'End If
        
        For limax = 1 To ColCode
            MaxRow = getLastRow("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| " + Str(li), limax)
            If max_tmp < MaxRow Then
                max_tmp = MaxRow
            End If
        Next
        
        MaxRow = max_tmp
        
        ctext = ctext + "|fffd||fffd|=" + CStr(li) + Chr(13) + Chr(10)
        
        ColCount = Val(Worksheets("System").Range("K" + CStr(li + 1)).Value)
        
        onlytext = 1
        For lij = 1 To ColCount
                If Val(Worksheets("System").Cells(yColTable + lij - 1, 23).Value) = 0 Then
                    onlytext = 0
                End If
            Next
        
        For lj = 5 To MaxRow
            '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            needSave = 0
            
            For lij = 1 To ColCount
                If Worksheets("System").Cells(yColTable + lij - 1, xCol + 12).Value = "0" _
                And RTrim(CStr(Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| " + Str(li)).Cells(lj, lij).Value)) <> "" Then
                needSave = 1
                End If
            Next
                                        
            If needSave = 1 Then
            crow = "ROW" + CStr(li) + Chr(13) + Chr(10)
            For lij = 1 To ColCount
                If Val(Worksheets("System").Cells(yColTable + lij - 1, 23).Value) = 0 Then
                    cValue = CStr(Val(Replace(Replace(CStr(Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| " + Str(li)).Cells(lj, lij).Value), ",", "."), Chr(160), "")))
                    If cValue <> "0" Then
                        crow = crow + Left(CStr(lij) + "   ", 3) + "=" + Replace(Replace(cValue, Chr(10), ""), Chr(13), "") + Chr(13) + Chr(10)
                    End If
                Else
                    cValue = RTrim(Replace(Replace(CStr(Worksheets("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| " + Str(li)).Cells(lj, lij).Value), "'", """"), Chr(160), ""))
                    If cValue <> "" Then
                        crow = crow + Left(CStr(lij) + "   ", 3) + "=" + RTrim(Replace(Replace(cValue, Chr(10), ""), Chr(13), "")) + Chr(13) + Chr(10)
                    End If
                End If
            Next
            ctext = ctext + crow '+ Chr(13) + Chr(10)
            End If
            'crow = (Replace(crow, "+", "#plus#"))
            'crow = (Replace(crow, Chr(10), ""))
            'crow = (Replace(crow, Chr(13), ""))
            
            'If saveNull = False And isNull = False Then
            '    crc = crc16(crow, crc)
            '    ctext = ctext + crow + Chr(13) + Chr(10)
            'End If
            'If saveNull = True Then
            'crc = crc16(crow, crc)
            'End If
        Next
    Next
    'If sendCRC = True Then
    '    ctext = ctext + "CRC=" + Str(crc)
    'End If
   
    'Open "C:\EXCEL\out.txt" For Output As #1
    'Print #1, ctext
    'Close #1
    Get_Report = ctext
End Function


Public Function uiShiftRightBy8(x As Integer) As Integer
    ' Shift 16-bit integer value to right by 8 bits
    ' Avoiding problem with sign bit
    Dim iNew As Integer
    iNew = (x And &H7FFF) \ 256
    If (x And &H8000) <> 0 Then
        iNew = iNew Or &H80
    End If
    uiShiftRightBy8 = iNew
End Function

Public Function crc16(pcstr As String, piCrc As Long) As Long
Dim aCRC(256) As Long
aCRC(0) = 0
aCRC(1) = 4129
aCRC(2) = 8258
aCRC(3) = 12387
aCRC(4) = 16516
aCRC(5) = 20645
aCRC(6) = 24774
aCRC(7) = 28903
aCRC(8) = 33032
aCRC(9) = 37161
aCRC(10) = 41290
aCRC(11) = 45419
aCRC(12) = 49548
aCRC(13) = 53677
aCRC(14) = 57806
aCRC(15) = 61935
aCRC(16) = 4657
aCRC(17) = 528
aCRC(18) = 12915
aCRC(19) = 8786
aCRC(20) = 21173
aCRC(21) = 17044
aCRC(22) = 29431
aCRC(23) = 25302
aCRC(24) = 37689
aCRC(25) = 33560
aCRC(26) = 45947
aCRC(27) = 41818
aCRC(28) = 54205
aCRC(29) = 50076
aCRC(30) = 62463
aCRC(31) = 58334
aCRC(32) = 9314
aCRC(33) = 13379
aCRC(34) = 1056
aCRC(35) = 5121
aCRC(36) = 25830
aCRC(37) = 29895
aCRC(38) = 17572
aCRC(39) = 21637
aCRC(40) = 42346
aCRC(41) = 46411
aCRC(42) = 34088
aCRC(43) = 38153
aCRC(44) = 58862
aCRC(45) = 62927
aCRC(46) = 50604
aCRC(47) = 54669
aCRC(48) = 13907
aCRC(49) = 9842
aCRC(50) = 5649
aCRC(51) = 1584
aCRC(52) = 30423
aCRC(53) = 26358
aCRC(54) = 22165
aCRC(55) = 18100
aCRC(56) = 46939
aCRC(57) = 42874
aCRC(58) = 38681
aCRC(59) = 34616
aCRC(60) = 63455
aCRC(61) = 59390
aCRC(62) = 55197
aCRC(63) = 51132
aCRC(64) = 18628
aCRC(65) = 22757
aCRC(66) = 26758
aCRC(67) = 30887
aCRC(68) = 2112
aCRC(69) = 6241
aCRC(70) = 10242
aCRC(71) = 14371
aCRC(72) = 51660
aCRC(73) = 55789
aCRC(74) = 59790
aCRC(75) = 63919
aCRC(76) = 35144
aCRC(77) = 39273
aCRC(78) = 43274
aCRC(79) = 47403
aCRC(80) = 23285
aCRC(81) = 19156
aCRC(82) = 31415
aCRC(83) = 27286
aCRC(84) = 6769
aCRC(85) = 2640
aCRC(86) = 14899
aCRC(87) = 10770
aCRC(88) = 56317
aCRC(89) = 52188
aCRC(90) = 64447
aCRC(91) = 60318
aCRC(92) = 39801
aCRC(93) = 35672
aCRC(94) = 47931
aCRC(95) = 43802
aCRC(96) = 27814
aCRC(97) = 31879
aCRC(98) = 19684
aCRC(99) = 23749
aCRC(100) = 11298
aCRC(101) = 15363
aCRC(102) = 3168
aCRC(103) = 7233
aCRC(104) = 60846
aCRC(105) = 64911
aCRC(106) = 52716
aCRC(107) = 56781
aCRC(108) = 44330
aCRC(109) = 48395
aCRC(110) = 36200
aCRC(111) = 40265
aCRC(112) = 32407
aCRC(113) = 28342
aCRC(114) = 24277
aCRC(115) = 20212
aCRC(116) = 15891
aCRC(117) = 11826
aCRC(118) = 7761
aCRC(119) = 3696
aCRC(120) = 65439
aCRC(121) = 61374
aCRC(122) = 57309
aCRC(123) = 53244
aCRC(124) = 48923
aCRC(125) = 44858
aCRC(126) = 40793
aCRC(127) = 36728
aCRC(128) = 37256
aCRC(129) = 33193
aCRC(130) = 45514
aCRC(131) = 41451
aCRC(132) = 53516
aCRC(133) = 49453
aCRC(134) = 61774
aCRC(135) = 57711
aCRC(136) = 4224
aCRC(137) = 161
aCRC(138) = 12482
aCRC(139) = 8419
aCRC(140) = 20484
aCRC(141) = 16421
aCRC(142) = 28742
aCRC(143) = 24679
aCRC(144) = 33721
aCRC(145) = 37784
aCRC(146) = 41979
aCRC(147) = 46042
aCRC(148) = 49981
aCRC(149) = 54044
aCRC(150) = 58239
aCRC(151) = 62302
aCRC(152) = 689
aCRC(153) = 4752
aCRC(154) = 8947
aCRC(155) = 13010
aCRC(156) = 16949
aCRC(157) = 21012
aCRC(158) = 25207
aCRC(159) = 29270
aCRC(160) = 46570
aCRC(161) = 42443
aCRC(162) = 38312
aCRC(163) = 34185
aCRC(164) = 62830
aCRC(165) = 58703
aCRC(166) = 54572
aCRC(167) = 50445
aCRC(168) = 13538
aCRC(169) = 9411
aCRC(170) = 5280
aCRC(171) = 1153
aCRC(172) = 29798
aCRC(173) = 25671
aCRC(174) = 21540
aCRC(175) = 17413
aCRC(176) = 42971
aCRC(177) = 47098
aCRC(178) = 34713
aCRC(179) = 38840
aCRC(180) = 59231
aCRC(181) = 63358
aCRC(182) = 50973
aCRC(183) = 55100
aCRC(184) = 9939
aCRC(185) = 14066
aCRC(186) = 1681
aCRC(187) = 5808
aCRC(188) = 26199
aCRC(189) = 30326
aCRC(190) = 17941
aCRC(191) = 22068
aCRC(192) = 55628
aCRC(193) = 51565
aCRC(194) = 63758
aCRC(195) = 59695
aCRC(196) = 39368
aCRC(197) = 35305
aCRC(198) = 47498
aCRC(199) = 43435
aCRC(200) = 22596
aCRC(201) = 18533
aCRC(202) = 30726
aCRC(203) = 26663
aCRC(204) = 6336
aCRC(205) = 2273
aCRC(206) = 14466
aCRC(207) = 10403
aCRC(208) = 52093
aCRC(209) = 56156
aCRC(210) = 60223
aCRC(211) = 64286
aCRC(212) = 35833
aCRC(213) = 39896
aCRC(214) = 43963
aCRC(215) = 48026
aCRC(216) = 19061
aCRC(217) = 23124
aCRC(218) = 27191
aCRC(219) = 31254
aCRC(220) = 2801
aCRC(221) = 6864
aCRC(222) = 10931
aCRC(223) = 14994
aCRC(224) = 64814
aCRC(225) = 60687
aCRC(226) = 56684
aCRC(227) = 52557
aCRC(228) = 48554
aCRC(229) = 44427
aCRC(230) = 40424
aCRC(231) = 36297
aCRC(232) = 31782
aCRC(233) = 27655
aCRC(234) = 23652
aCRC(235) = 19525
aCRC(236) = 15522
aCRC(237) = 11395
aCRC(238) = 7392
aCRC(239) = 3265
aCRC(240) = 61215
aCRC(241) = 65342
aCRC(242) = 53085
aCRC(243) = 57212
aCRC(244) = 44955
aCRC(245) = 49082
aCRC(246) = 36825
aCRC(247) = 40952
aCRC(248) = 28183
aCRC(249) = 32310
aCRC(250) = 20053
aCRC(251) = 24180
aCRC(252) = 11923
aCRC(253) = 16050
aCRC(254) = 3793
aCRC(255) = 7920

Dim i As Long, iLen As Long, csymbol As String, icrc As Long, index As Integer
Dim bytT As Byte
Dim bytC As Byte
Dim ia As Integer
icrc = piCrc
iLen = Len(pcstr)
For i = 1 To iLen
    csymbol = Mid(pcstr, i, 1)
    index = ((icrc \ 256) And 255)
    icrc = (aCRC(index) Xor (icrc * 256) Xor Asc(csymbol)) And 65535
Next

crc16 = icrc
End Function


Function GetHTTPObject() As Object

        On Error Resume Next
        Set GetHTTPObject = CreateObject("Msxml2.ServerXMLHTTP.6.0")
        If GetHTTPObject Is Nothing Then
            Set GetHTTPObject = CreateObject("Msxml2.ServerXMLHTTP.5.0")
        End If
        If GetHTTPObject Is Nothing Then
            Set GetHTTPObject = CreateObject("Msxml2.ServerXMLHTTP.4.0")
        End If
        If GetHTTPObject Is Nothing Then
            CreateObject ("Msxml2.ServerXMLHTTP")
        End If
        Err.Clear
End Function
Attribute VB_Name = "Module2"
Sub SendSavedForm()
    Form_SEND.MultiPage1.Page1.txtAdress = CStr(Worksheets("System").Range("B17").Value)
    Form_SEND.MultiPage1.Page1.TxtUser = CStr(Worksheets("System").Range("B16").Value)
    Form_SEND.MultiPage1.Page1.TxtProtokol = ""
    
    Form_SEND.MultiPage1.Page2.CmbBD.Clear
    Form_SEND.MultiPage1.Page2.CmbBD.AddItem "Microsoft SQL Server"
    Form_SEND.MultiPage1.Page2.CmbBD.AddItem "PostgreSQL"
    Form_SEND.MultiPage1.Page2.CmbBD.Value = "Microsoft SQL Server"
    
    If Worksheets("System").Range("B20").Value <> "" Then
        Form_NASTR.TxtPassProxy.Value = Worksheets("System").Range("B20").Value
    End If
    
    If Worksheets("System").Range("B21").Value <> "" Then
        Form_NASTR.TxtProxyPort.Value = Worksheets("System").Range("B21").Value
    End If
    
    If Worksheets("System").Range("C18").Value <> "" Then
        Form_NASTR.ChkProxy.Value = True
    End If
    
    If Worksheets("System").Range("B18").Value <> "" Then
        Form_NASTR.TxtUserProxy.Value = Worksheets("System").Range("B18").Value
    End If
    
    
    Form_NASTR.CheckBoxUseProxy.Value = Worksheets("System").Range("B24").Value
    'Form_NASTR.ChkSaveNewVers.Value = Worksheets("System").Range("B25").Value

    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| SQL
    
    Form_SEND.TxtLogin.Value = Worksheets("System").Range("B16").Value
    Form_SEND.txtServer.Value = Worksheets("System").Range("B22").Value
    Form_SEND.TxtBase.Value = Worksheets("System").Range("B23").Value
    Form_SEND.ChkWinNT.Value = Worksheets("System").Range("B25").Value
    
    Form_SEND.Show (1)
End Sub
Attribute VB_Name = "Module3"
Attribute VB_Name = "|fffd||fffd||fffd||fffd|1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Opt_Y, 2, 1, MSForms, OptionButton"
Attribute VB_Control = "Opt_Q, 3, 2, MSForms, OptionButton"
Attribute VB_Control = "Opt_M, 5, 3, MSForms, OptionButton"
Attribute VB_Control = "cmb_m, 11, 5, MSForms, ComboBox"
Attribute VB_Control = "Txt_Year, 8, 6, MSForms, TextBox"
Attribute VB_Control = "Cmb_Q, 9, 7, MSForms, ComboBox"
Attribute VB_Control = "Label1, 20, 10, MSForms, Label"
Attribute VB_Control = "Txt_Org_Name, 21, 11, MSForms, TextBox"
Attribute VB_Control = "Label2, 22, 12, MSForms, Label"
Attribute VB_Control = "Txt_Org_code, 23, 13, MSForms, TextBox"
Attribute VB_Control = "Label3, 26, 14, MSForms, Label"
Attribute VB_Control = "Txt_Budg_name, 27, 15, MSForms, TextBox"
Attribute VB_Control = "Label4, 28, 16, MSForms, Label"
Attribute VB_Control = "txt_budg, 29, 17, MSForms, TextBox"
Attribute VB_Control = "Cmb_W, 1029, 19, MSForms, ComboBox"
Attribute VB_Control = "Opt_W, 1028, 20, MSForms, OptionButton"
Attribute VB_Control = "TextBox1, 47, 21, MSForms, TextBox"


Private Sub Cmb_Q_Change()
 
End Sub

Private Sub CommandButton1_Click()

End Sub

Private Sub cmdSendServer_Click()
    Form_Save.txtAdress = CStr(Worksheets("System").Range("B17").Value)
    Form_Save.TxtUser = CStr(Worksheets("System").Range("B16").Value)
    Form_Save.TxtProtokol = ""
    
    If Worksheets("System").Range("B20").Value <> "" Then
        Form_Save.TxtProxy.Value = Worksheets("System").Range("B20").Value
    End If
    
    If Worksheets("System").Range("B21").Value <> "" Then
        Form_Save.TxtProxyPort.Value = Worksheets("System").Range("B21").Value
    End If
    
    If Worksheets("System").Range("C18").Value <> "" Then
        Form_Save.ChkProxy.Value = True
    End If
    
    If Worksheets("System").Range("B18").Value <> "" Then
        Form_Save.TxtUserProxy.Value = Worksheets("System").Range("B18").Value
    End If
    
    
    Form_Save.Show (1)
End Sub

Private Sub cmdSendSql_Click()
    Form_Save_SQL.TxtUser = CStr(Worksheets("System").Range("B16").Value)
    Form_Save_SQL.txtServer = CStr(Worksheets("System").Range("B22").Value)
    Form_Save_SQL.TxtBase = CStr(Worksheets("System").Range("B23").Value)
    'Form_Save.TxtUserProxy = CStr(Worksheets("System").Range("B18").Value)
    Form_Save_SQL.TxtProtokol = ""
    Form_Save_SQL.Show (1)
End Sub

Private Sub Opt_M_Click()
    Worksheets("System").Cells(13, 2).Value = 4
End Sub

Private Sub Opt_Q_Click()
    Worksheets("System").Cells(13, 2).Value = 2
End Sub

Private Sub Opt_Y_Click()
    Worksheets("System").Cells(13, 2).Value = 1
End Sub
Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()

End Sub

' InQuest injected base64 decoded content
' rgFz

INQUEST-PP=macro
