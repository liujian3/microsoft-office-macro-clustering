Attribute VB_Name = "Feuil1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True




Attribute VB_Name = "Feuil3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ListBox1, 70, 0, MSForms, ListBox"
'Author: GFI Informatique
'Date: 201811
'
Option Explicit

Dim bTest As Boolean

Sub DataValidation()

'On d|fffd|termine la plage de donn|fffd|es sur laquelle travailler
Dim ll As Integer: ll = 9
Do Until Me.Cells(ll, 1).Value = ""
    ll = ll + 1
Loop
If ll < 2000 Then ll = 2000

'Validation de donn|fffd|es de la colonne G
With Me.Range(Cells(9, 7), Cells(ll, 7)).Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertWarning, Operator _
        :=xlBetween, Formula1:="=INDIRECT(""TabECCN"")"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = "Erreur"
        .InputMessage = ""
        .ErrorMessage = GetMsg("G")
        .ShowInput = False
        .ShowError = True
End With


'Validation de donn|fffd|es de la colonne I
With Me.Range(Cells(9, 9), Cells(ll, 9)).Validation
        .Delete
        .Add Type:=xlValidateDecimal, AlertStyle:=xlValidAlertWarning, _
        Operator:=xlBetween, Formula1:="0", Formula2:="100"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = "Erreur"
        .InputMessage = ""
        .ErrorMessage = GetMsg("I")
        .ShowInput = False
        .ShowError = True
End With

'Validation de donn|fffd|es pour la colonne K
With Me.Range(Cells(9, 11), Cells(ll, 11)).Validation
        .Delete
        .Add Type:=xlValidateDecimal, AlertStyle:=xlValidAlertWarning, _
        Operator:=xlBetween, Formula1:="0", Formula2:="100"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = "Erreur"
        .InputMessage = ""
        .ErrorMessage = GetMsg("K")
        .ShowInput = False
        .ShowError = True
End With

'Validation de donn|fffd|es de la colonne H
With Me.Range(Cells(9, 8), Cells(ll, 8)).Validation
        .Delete
        .Add Type:=xlValidateCustom, AlertStyle:=xlValidAlertWarning, _
         Formula1:="=AND(ISNUMBER($H9),$H9>=0,$H9+$J9=100)"
         '"=IF(ISNUMBER($H9)=TRUE,IF($H9+$J9=100,TRUE,FALSE),FALSE)"
        .IgnoreBlank = False
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = "Erreur"
        .InputMessage = ""
        .ErrorMessage = GetMsg("H")
        .ShowInput = False
        .ShowError = True
End With



'Validation de donn|fffd|es de la colonne J
With Me.Range(Cells(9, 10), Cells(ll, 10)).Validation
        .Delete
        .Add Type:=xlValidateCustom, AlertStyle:=xlValidAlertWarning, _
         Formula1:="=AND(ISNUMBER($J9),$J9>=0,$H9+$J9=100)"
        .IgnoreBlank = False
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = "Erreur"
        .InputMessage = ""
        .ErrorMessage = GetMsg("J")
        .ShowInput = False
        .ShowError = True
End With

End Sub

Sub DataFormat()
'Author: GFI Informatique
'Date 201811
'Mise en forme du fichier pour respect du standard

Dim myrange As String
Dim MyDataRange As Range
Dim ll As Integer: ll = 9
Dim lc As Integer: lc = 1

'On d|fffd|termine la plage de donn|fffd|es |fffd| mettre en forme
Do Until Sheets("Export Control").Cells(ll, 1).Value = ""
    ll = ll + 1
Loop
ll = ll - 1
If ll < 2000 Then ll = 2000

Do Until Sheets("Export Control").Cells(7, lc).Value = ""
    lc = lc + 1
Loop
lc = lc - 1

'Format centr|fffd|, Arial, contour pour toutes les lignes
With Sheets("Export control")
    Set MyDataRange = .Range(.Cells(9, 1), .Cells(ll, lc))
    With MyDataRange
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .Font.FontStyle = "Arial"
        .Font.Size = 10
        .Font.ColorIndex = xlAutomatic
        With .Borders
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
    End With
    
    'Format sp|fffd|cifique pour les colonnes A et B
    .Range("A:A").HorizontalAlignment = xlCenter
    With .Range(.Cells(9, 1), .Cells(ll, 1))
        .Font.Bold = True
        .Interior.Color = RGB(226, 107, 10)
    End With
    With .Range(.Cells(9, 2), .Cells(ll, 2))
        .HorizontalAlignment = xlLeft
        .Interior.Color = RGB(226, 107, 10)
    End With
    
    Columns("B:B").ColumnWidth = 53.29
    Me.Rows.EntireRow.AutoFit
    
    
    'Format texte pour les colonne A |fffd| G
    Set MyDataRange = .Range(.Cells(9, 1), .Cells(ll, 7))
    MyDataRange.NumberFormat = "@"
        
    'Par pr|fffd|caution on supprime toutes les mise en forme conditionnelle pour les reconstruire
    Set MyDataRange = .Range(.Cells(9, 3), .Cells(ll, lc))
    On Error Resume Next
    MyDataRange.FormatConditions.Delete
    
    
    'Format Nombre 0.00 pour les colonnes H |fffd| K
    Set MyDataRange = .Range(.Cells(9, 8), .Cells(ll, 11))
    With MyDataRange
        .NumberFormat = "0.00"
        .FormatConditions.Add xlExpression, xlBetween, "=ET(OU(NON(ESTVIDE($A9));NON(ESTVIDE($B9)));NON(ESTNUM(H9)))"
    End With
    
'    'Mise en forme conditionelle de la colonne H
    myrange = "$H9:$H" & ll
    Set MyDataRange = .Range(myrange)
    With MyDataRange
        .FormatConditions.Add xlExpression, xlBetween, "=ET(OU(NON(ESTVIDE($A9));NON(ESTVIDE($B9)));OU($H9<0;$H9>100;$H9+$J9<>100))"
    End With
    
'    'Mise en forme conditionnelle de la colonne J
    myrange = "$J9:$J" & ll
    Set MyDataRange = .Range(myrange)
    With MyDataRange
        .FormatConditions.Add xlExpression, xlBetween, "=ET(OU(NON(ESTVIDE($A9));NON(ESTVIDE($B9)));OU($J9<0;$J9>100;$H9+$J9<>100))"
    End With
    
'    'Mise en forme conditionnelle de la colonne I
    myrange = "$I9:$I" & ll
    Set MyDataRange = .Range(myrange)
    With MyDataRange
        .FormatConditions.Add xlExpression, xlNotBetween, "=ET(OU(NON(ESTVIDE($A9));NON(ESTVIDE($B9)));OU($I9<0;$I9>100))"
    End With
    
'    'Mise en forme conditionnelle de la colonne K
    myrange = "$K9:$K" & ll
    Set MyDataRange = .Range(myrange)
    With MyDataRange
        .FormatConditions.Add xlExpression, xlNotBetween, "=ET(OU(NON(ESTVIDE($A9));NON(ESTVIDE($B9)));OU($K9<0;$K9>100))"
    End With

    'Mise en forme conditionnelle de la colonne G
    myrange = "$G9:$G" & ll
    Set MyDataRange = .Range(myrange)
    With MyDataRange
        .FormatConditions.Add xlExpression, xlBetween, "=ET(OU(NON(ESTVIDE($A9));NON(ESTVIDE($B9)));ESTNA(RECHERCHEV($G9;ECCN!$A:$A;1;FAUX)))"
    End With
    
    'Mise en forme conditionnelle de la colonne L
    myrange = "$L9:$L" & ll
    Set MyDataRange = .Range(myrange)
    With MyDataRange
        .FormatConditions.Add xlExpression, xlBetween, "=ET(OU(NON(ESTVIDE($A9));NON(ESTVIDE($B9)));ESTVIDE($L9))"
    End With
    
    Set MyDataRange = .Range(.Cells(9, 7), .Cells(ll, lc))
    Dim item As Variant
    For Each item In MyDataRange.FormatConditions
        item.Font.ColorIndex = 3
        item.Interior.ColorIndex = 6
    Next

End With


End Sub

Sub CommentFormat()
'Author: GFI Informatique
'Date: 201811
' Ajuste les boites de commentaires |fffd| la m|fffd|me taille pour toutes

Dim i As Integer
Dim j As Integer
    
    For i = 1 To 7
        For j = 1 To 12
            With Cells(i, j)
                If Not (.Comment Is Nothing) Then
                    If Len(.Comment.Text) > 75 Then
                        .Comment.Shape.Height = 90
                        .Comment.Shape.Width = 250
                    Else
                        .Comment.Shape.Height = 50
                        .Comment.Shape.Width = 180
                    End If
                End If
            End With
        Next j
    Next i


End Sub



Private Sub ListBox1_Change()
'Author: GFI Informatique
'Date: 201811
'Mise |fffd| jour de la cellule avec les pays s|fffd|lectionn|fffd|s
Dim i As Integer
Dim sTemp As String

If bTest Then
    Exit Sub
End If


    sTemp = ""
    For i = 0 To Me.ListBox1.ListCount - 1
      If Me.ListBox1.Selected(i) Then
          If sTemp = "" Then
              sTemp = Me.ListBox1.List(i)
          Else
              sTemp = sTemp & Chr(10) & Me.ListBox1.List(i)
          End If
      End If
    Next
  
    On Error Resume Next
    Err.Clear
    sTemp = Left(sTemp, Len(sTemp))
    If Err.Number <> 0 Then
      sTemp = ""
    End If
  
    ActiveCell = sTemp

End Sub

Private Sub ControlL()
'Author: GFI Informatique
'Date: 201811
'Chargement de la liste box pour permettre la s|fffd|lection des pays

Dim pays As Variant
Dim i As Integer
Dim item As Variant

'Parametrage de la listbox1
    With Me.ListBox1
      .MultiSelect = fmMultiSelectMulti
      .ListStyle = fmListStyleOption
      .Height = 300
      .Width = 200
      .Top = ActiveCell.Top
      .Left = ActiveCell.Offset(0, 1).Left
      .Visible = True
    End With

 'Chargement des valeurs de lai liste
    On Error Resume Next
    Me.ListBox1.List = Worksheets("CountriesList").Range(Worksheets("CountriesList").Range("A1").Offset(1, 0), _
      Worksheets("CountriesList").Range("A1").End(xlDown)).Value
    On Error GoTo 0

'Recuperation des valeurs existantes dans la cellule vers la selection de liste
    pays = Split(ActiveCell, Chr(10))
    If UBound(pays) >= 0 Then
      For i = 0 To Me.ListBox1.ListCount - 1
        If Not IsError(Application.Match(Me.ListBox1.List(i), pays, 0)) Then
            bTest = True
            Me.ListBox1.Selected(i) = True
            bTest = False
        End If
      Next
    End If

End Sub

Private Function GetMsg(ByVal Colonne As String)

Dim i As Integer: i = 1
Dim icon As Integer
Dim msg As String

With Sheets("Errors")
    Do
        i = i + 1
    Loop Until .Cells(i, 1).Value = Colonne Or IsEmpty(.Cells(i, 1)) = True
    GetMsg = Sheets("Errors").Cells(i, 2).Value

End With


End Function

Private Sub Worksheet_Change(ByVal target As Range)

Dim myCell As Variant
Dim tmpstr As String

For Each myCell In target
    If myCell.Column = 1 Or myCell.Column = 2 Then
        myCell.Interior.Color = RGB(226, 107, 10)
    Else
        myCell.Interior.ColorIndex = 2
    End If
Next

If target.Column = 12 And target.Row > 8 Then
'    For Each myCell In target
'        tmpstr = Replace(myCell.Value, "; ", Chr(10), 1, , vbBinaryCompare)
'        If tmpstr <> "" Then
'            tmpstr = RTrim(tmpstr)
'            myCell.Value = LTrim(tmpstr)
'        End If
'    Next
Else
    Me.ListBox1.Visible = False
End If

End Sub

Private Sub Worksheet_SelectionChange(ByVal target As Range)

If target.Column = 12 And target.Row > 8 Then
    Call ControlL
Else
    Me.ListBox1.Visible = False
End If

End Sub
Attribute VB_Name = "Feuil4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Feuil5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Module1"
Option Explicit

Public Declare Function OpenClipboard Lib "user32" (ByVal hwnd As Long) As Long
Public Declare Function EmptyClipboard Lib "user32" () As Long
Public Declare Function CloseClipboard Lib "user32" () As Long

Public Function ClearClipboard()
    OpenClipboard (0&)
    EmptyClipboard
    CloseClipboard
End Function

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit



Private Sub Workbook_Open()
'Author: GFI Informatique
'Date: 201811


'On ajoute les validation de donn|fffd|es et la mise en forme conditionnelle |fffd| la feuille Export Control
With Sheets("Export Control")
    .Unprotect ("Sidel")
    Call .DataValidation
    Call .DataFormat
    Call .CommentFormat
    .Protect Password:="Sidel", userinterfaceonly:=True
    .Activate
End With


End Sub

Private Sub Workbook_SheetSelectionChange(ByVal Sh As Object, ByVal target As Range)
'On n'autorise que le copier-coller des valeurs uniquement

'Dim objdata As New MSForms.DataObject

    On Error Resume Next
    'objdata.GetFromClipboard
    'Target.Value = objdata.GetText
'    target.PasteSpecial xlPasteValues
'    Application.CutCopyMode = False
'    Call ClearClipboard
    
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
'Author: GFI Informatique
'Date: 201811

'On s'assure que les feuilles ECCN, countireslist et Errors sont invisibles
Sheets("ECCN").Visible = xlSheetVeryHidden
Sheets("CountriesList").Visible = xlSheetVeryHidden
Sheets("Errors").Visible = xlSheetVeryHidden

'On instaure la protection des donn|fffd|es de la feuille en autorisant les modifications via VB
Sheets("Export Control").Protect Password:="Sidel", userinterfaceonly:=True

End Sub





INQUEST-PP=macro
