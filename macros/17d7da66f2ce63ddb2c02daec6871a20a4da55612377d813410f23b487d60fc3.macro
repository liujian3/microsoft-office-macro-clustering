Attribute VB_Name = "EditorialMacros"
Option Explicit

Public Sub InitForEditorial()
  '
  ' Code for editorial special setups that need to be called
  '  after saving or on worksheet initialization.
  '
End Sub

Public Sub Workbook_BeforeClose_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  before close.
  '
End Sub

Attribute VB_Name = "EditorialMacros_Deactivate"
Option Explicit

Public Sub Workbook_Deactivate_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  when leaving the workbook without closing it. This, will
  '  also run when closing workbook.
  '
End Sub

Attribute VB_Name = "PPC_CodeModule"
Public Sub MacroCheck()
'Do nothing. This sub will be called from .NET code to check macro is enabled or not
End Sub


Public Function PPC_GetClientName()
  PPC_GetClientName = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name")
End Function

Public Function PPC_GetBalanceSheetDate()
  PPC_GetBalanceSheetDate = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date")
End Function

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "HideButton, 46, 8, MSForms, CommandButton"
Attribute VB_Control = "Q3Yes, 38, 9, MSForms, OptionButton"
Attribute VB_Control = "Q3No, 39, 10, MSForms, OptionButton"
Attribute VB_Control = "ClearButton, 44, 11, MSForms, CommandButton"
Attribute VB_Control = "ShowButton, 45, 12, MSForms, CommandButton"
Attribute VB_Control = "Q5Yes, 49, 13, MSForms, OptionButton"
Attribute VB_Control = "Q2A, 50, 14, MSForms, OptionButton"
Attribute VB_Control = "Q6Yes, 51, 15, MSForms, OptionButton"
Attribute VB_Control = "Q7Yes, 52, 16, MSForms, OptionButton"
Attribute VB_Control = "Q7bSA, 53, 17, MSForms, OptionButton"
Attribute VB_Control = "Q2B, 55, 18, MSForms, OptionButton"
Attribute VB_Control = "Q5No, 56, 19, MSForms, OptionButton"
Attribute VB_Control = "Q6No, 57, 20, MSForms, OptionButton"
Attribute VB_Control = "Q7No, 58, 21, MSForms, OptionButton"
Attribute VB_Control = "Q7bRange, 59, 22, MSForms, OptionButton"
Attribute VB_Control = "TB5, 64, 23, MSForms, TextBox"
Attribute VB_Control = "TB7, 65, 24, MSForms, TextBox"
Attribute VB_Control = "TBWorkDoc, 66, 25, MSForms, TextBox"
Private Sub ClearButton_Click()

    Dim ans As String
    Dim WPEENAME As String
    WPEENAME = "PPC's Workpapers"
    
    Beep
    ans = MsgBox("Are you sure you want to clear all inputs?", vbYesNo, WPEENAME)
        If ans = vbNo Then
        Exit Sub
        End If
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Range("InputClear").Value = ""
    If TBWorkDoc.Value <> "" Then
        TBWorkDoc.Activate
        TBWorkDoc.Value = ""
        Range("TBWorkDocBegin").Select
'
'For some reason the WorkDoc textbox must be entered a second time
'for the box to shrink back to the default size.
        TBWorkDoc.Activate
        Range("TBWorkDocBegin").Select
    End If
    Range("Conclude1").Value = ""
    With HideButton
        .Visible = True
        .Top = 92.25
        .Left = 252.75
    End With
    With ShowButton
        .Visible = False
        .Top = 92.25
        .Left = 252.75
    End With
    
    Q2Hide
    Q3Hide
    Q4Hide
    Q5Hide
    Q6Hide
    Q7Hide
    Q7bHide
    
    Range("Year_end").Value = "=PPC_GetBalanceSheetDate()"
    Range("Company").Value = "=PPC_GetClientName()"
    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name") = "[Client Name]"
    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True
    
    Range("a1").Select
    
    Application.ScreenUpdating = True
    Application.EnableEvents = True

End Sub

Private Sub HideButton_Click()

    Application.ScreenUpdating = False
    
    Range("TBWorkDocRows").EntireRow.Hidden = True
    TBWorkDoc.Visible = False
    HideButton.Visible = False
    With ShowButton
        .Visible = True
        .Top = 92.25
        .Left = 252.75
    End With
    
    Application.ScreenUpdating = True
    
End Sub

Private Sub ShowButton_click()
    
    Application.ScreenUpdating = False
    
    Range("TBWorkDocRows").EntireRow.Hidden = False
    With TBWorkDoc
        .Visible = True
        .Top = Range("TBWorkDocBegin").Top
        .Activate
    End With
    ShowButton.Visible = False
    With HideButton
        .Visible = True
        .Top = 92.25
        .Left = 252.75
    End With
    
    Dim QuestionNumber As Integer
    
    For QuestionNumber = 2 To 7 'this loop scrolls the window down to view the general comment box
        If Range("Question" & QuestionNumber).EntireRow.Hidden = False Then
            Application.ActiveWindow.ScrollRow = Range("Question" & QuestionNumber).Row
        End If
    Next QuestionNumber
    
    Application.ScreenUpdating = True

End Sub

Private Static Sub TB5_GotFocus()

    Dim BegText As String

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    If TB5.Activate = False Then
        Exit Sub
    End If
    TB5.BorderColor = &H8000& ''green border to show textbox has focus
    
    BegText = TB5.Text           'the next 3 lines used to force the green border to appear
    TB5.Text = TB5.Text & vbCrLf
    TB5.Text = BegText

    Application.ScreenUpdating = True

End Sub

Private Sub TB5_Change()

    Application.EnableEvents = False
    Application.EnableEvents = True

End Sub

Private Sub TB5_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
    Dim MoveBack As Boolean
        
    Select Case KeyCode
            ''' This is the only key necessary.
        Case vbKeyTab
            Application.ScreenUpdating = False
                ''' Determine if need to move backwards.
            MoveBack = CBool(Shift And 1)
                ''' Activate appropriate control based on key(s) pressed.
            If MoveBack Then
                Call TB5_LostFocus
            Else
                Call TB5_LostFocus
            End If
                
            Application.ScreenUpdating = True
    End Select

End Sub

Private Sub TB5_LostFocus()

    Dim TargetCellTB5 As Range
    Dim AnchorSheet As Worksheet
    Set TargetCellTB5 = ActiveCell
    Set AnchorSheet = ActiveSheet
    Application.EnableEvents = False
   
    If AnchorSheet.Name = "Disclosure" Then
        Sheet1.Activate
    Else
        TB5.Activate
    End If
    TB5.BorderColor = &HC0C0C0 'grey border to show no focus
    TB5.Width = 474
    If TB5.Height < 408 Then
        TB5.ScrollBars = fmScrollBarsNone
    End If
    If TB5.LineCount <= 4 Then
        TB5.Height = 52.5
        Range("TB5Begin").RowHeight = 51
    ElseIf TB5.LineCount > 4 And TB5.LineCount <= 9 Then
        TB5.Height = ((TB5.LineCount) * 1.02) * 12.75
        Range("TB5Begin").RowHeight = ((TB5.LineCount) * 1.02) * 12.75
    ElseIf TB5.LineCount > 9 And TB5.LineCount <= 20 Then
        TB5.Height = ((TB5.LineCount) * 0.99) * 12.75
        Range("TB5Begin").RowHeight = ((TB5.LineCount) * 0.99) * 12.75
    ElseIf TB5.LineCount > 20 And TB5.LineCount <= 30 Then
        TB5.Height = ((TB5.LineCount) * 0.98) * 12.75
        Range("TB5Begin").RowHeight = ((TB5.LineCount) * 0.98) * 12.75
    ElseIf TB5.LineCount > 30 And TB5.LineCount <= 33 Then
        TB5.Height = ((TB5.LineCount) * 0.97) * 12.75
        Range("TB5Begin").RowHeight = ((TB5.LineCount) * 0.97) * 12.75
    ElseIf TB5.LineCount > 33 Then
        With TB5
            .Height = 408
            .ScrollBars = fmScrollBarsVertical
        End With
        Range("TB5Begin").RowHeight = 408
    End If
    If AnchorSheet.Name = "Disclosure" Then
        Range("Conclude5").Select
        Application.EnableEvents = True
        Sheet2.Activate
        Exit Sub
    Else
        TargetCellTB5.Select
    End If
    
    Application.EnableEvents = True
    Application.ScreenUpdating = True


End Sub

Private Static Sub TB7_GotFocus()

    Dim BegText As String

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    If TB7.Activate = False Then
        Exit Sub
    End If
    TB7.BorderColor = &H8000& ''green border to show textbox has focus
    
    BegText = TB7.Text           'the next 3 lines used to force the green border to appear
    TB7.Text = TB7.Text & vbCrLf
    TB7.Text = BegText

    Application.ScreenUpdating = True

End Sub

Private Sub TB7_Change()

    Application.EnableEvents = False
    Application.EnableEvents = True

End Sub

Private Sub TB7_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
    Dim MoveBack As Boolean
    Dim TargetCell As Range
    Set TargetCell = ActiveCell
    
    Select Case KeyCode
            ''' This is the only key necessary.
        Case vbKeyTab
            Application.ScreenUpdating = False
                ''' Determine if need to move backwards.
            MoveBack = CBool(Shift And 1)
                ''' Activate appropriate control based on key(s) pressed.
            If MoveBack Then
                Call TB7_LostFocus
'                Application.PreviousSelections(1).Select
            Else
                Call TB7_LostFocus
'                Application.PreviousSelections(1).Select
            End If
                
            Application.ScreenUpdating = True
    End Select

End Sub

Private Sub TB7_LostFocus()

    Dim TargetCellTB7 As Range
    Dim AnchorSheet As Worksheet
    Set TargetCellTB7 = ActiveCell
    Set AnchorSheet = ActiveSheet
    Application.EnableEvents = False
   
    If AnchorSheet.Name = "Disclosure" Then
        Sheet1.Activate
    Else
        TB7.Activate
    End If
    TB7.BorderColor = &HC0C0C0 'grey border to show no focus
    TB7.Width = 474
    If TB7.Height < 408 Then
        TB7.ScrollBars = fmScrollBarsNone
    End If
    If TB7.LineCount <= 4 Then
        TB7.Height = 52.5
        Range("TB7Begin").RowHeight = 51
    ElseIf TB7.LineCount > 4 And TB7.LineCount <= 9 Then
        TB7.Height = ((TB7.LineCount) * 1.02) * 12.75
        Range("TB7Begin").RowHeight = ((TB7.LineCount) * 1.02) * 12.75
    ElseIf TB7.LineCount > 9 And TB7.LineCount <= 20 Then
        TB7.Height = ((TB7.LineCount) * 0.99) * 12.75
        Range("TB7Begin").RowHeight = ((TB7.LineCount) * 0.99) * 12.75
    ElseIf TB7.LineCount > 20 And TB7.LineCount <= 30 Then
        TB7.Height = ((TB7.LineCount) * 0.98) * 12.75
        Range("TB7Begin").RowHeight = ((TB7.LineCount) * 0.98) * 12.75
    ElseIf TB7.LineCount > 30 And TB7.LineCount <= 33 Then
        TB7.Height = ((TB7.LineCount) * 0.97) * 12.75
        Range("TB7Begin").RowHeight = ((TB7.LineCount) * 0.97) * 12.75
    ElseIf TB7.LineCount > 33 Then
        With TB7
            .Height = 408
            .ScrollBars = fmScrollBarsVertical
        End With
        Range("TB7Begin").RowHeight = 408
    End If
    If AnchorSheet.Name = "Disclosure" Then
        Range("Conclude7").Select
        Application.EnableEvents = True
        Sheet2.Activate
        Exit Sub
    Else
        TargetCellTB7.Select
    End If
    
    Application.EnableEvents = True
    Application.ScreenUpdating = True

End Sub

Private Static Sub TBWorkDoc_GotFocus()

Dim BegText As String

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    If TBWorkDoc.Activate = False Then
        Exit Sub
    End If
    TBWorkDoc.BorderColor = &H8000& ''green border to show textbox has focus
    
    BegText = TBWorkDoc.Text           'the next 3 lines used to force the green border to appear
    TBWorkDoc.Text = TBWorkDoc.Text & vbCrLf
    TBWorkDoc.Text = BegText

    Application.ScreenUpdating = True

End Sub

Private Sub TBWorkDoc_Change()

    Application.EnableEvents = False
    Application.EnableEvents = True

End Sub

Private Sub TBWorkDoc_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
    Dim MoveBack As Boolean
        
    Select Case KeyCode
            ''' This is the only key necessary.
        Case vbKeyTab
            Application.ScreenUpdating = False
                ''' Determine if need to move backwards.
            MoveBack = CBool(Shift And 1)
                ''' Activate appropriate control based on key(s) pressed.
            If MoveBack Then
                Call TBWorkDoc_LostFocus
            Else
                Call TBWorkDoc_LostFocus
            End If
                
            Application.ScreenUpdating = True
        End Select

End Sub

Private Sub TBWorkDoc_LostFocus()

    Dim TargetCellTBWorkDoc As Range
    Dim AnchorSheet As Worksheet
    Set TargetCellTBWorkDoc = ActiveCell
    Set AnchorSheet = ActiveSheet
    Application.EnableEvents = False
   
    If AnchorSheet.Name = "Disclosure" Then
        Sheet1.Activate
    Else
        TBWorkDoc.Activate
    End If
    TBWorkDoc.BorderColor = &HC0C0C0 'grey border to show no focus
    TBWorkDoc.Width = 474
    If TBWorkDoc.Height < 408 Then
        TBWorkDoc.ScrollBars = fmScrollBarsNone
    End If
    If TBWorkDoc.LineCount <= 4 Then
        TBWorkDoc.Height = 52.5
        Range("TBWorkDocBegin").RowHeight = 51
    ElseIf TBWorkDoc.LineCount > 4 And TBWorkDoc.LineCount <= 9 Then
        TBWorkDoc.Height = ((TBWorkDoc.LineCount) * 1.02) * 12.75
        Range("TBWorkDocBegin").RowHeight = ((TBWorkDoc.LineCount) * 1.02) * 12.75
    ElseIf TBWorkDoc.LineCount > 9 And TBWorkDoc.LineCount <= 20 Then
        TBWorkDoc.Height = ((TBWorkDoc.LineCount) * 0.99) * 12.75
        Range("TBWorkDocBegin").RowHeight = ((TBWorkDoc.LineCount) * 0.99) * 12.75
    ElseIf TBWorkDoc.LineCount > 20 And TBWorkDoc.LineCount <= 30 Then
        TBWorkDoc.Height = ((TBWorkDoc.LineCount) * 0.98) * 12.75
        Range("TBWorkDocBegin").RowHeight = ((TBWorkDoc.LineCount) * 0.98) * 12.75
    ElseIf TBWorkDoc.LineCount > 30 And TBWorkDoc.LineCount <= 33 Then
        TBWorkDoc.Height = ((TBWorkDoc.LineCount) * 0.97) * 12.75
        Range("TBWorkDocBegin").RowHeight = ((TBWorkDoc.LineCount) * 0.97) * 12.75
    ElseIf TBWorkDoc.LineCount > 33 Then
        With TBWorkDoc
            .Height = 408
            .ScrollBars = fmScrollBarsVertical
        End With
        Range("TBWorkDocBegin").RowHeight = 408
    End If
    If AnchorSheet.Name = "Disclosure" Then
        Range("TBWorkDocBegin").Offset(-1, 0).Select
        Application.EnableEvents = True
        Sheet2.Activate
        Exit Sub
    Else
        TargetCellTBWorkDoc.Select
    End If
    
    Application.EnableEvents = True
    Application.ScreenUpdating = True

End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
'This routine launches whenever a change is made to the spreadsheet. If the
'change is made to either the Answer1, Answer4, SingleAmount, or
'RangeAmount ranges (currently cells $H$11, $H$36, $D74, and $D75 and $F$75
'respectively) this routine launches a related routine Question1Answer,
'Question4Answer, Question7bAmtAnswer, or Question7bRngANswer). Otherwise,
'the routine ends without any action.

    If Not Application.Intersect(Range("Answer1"), Range(Target.Address)) _
    Is Nothing Then
        Call Question1Answer
    End If
    
    If Not Application.Intersect(Range("Answer4"), Range(Target.Address)) _
    Is Nothing Then
        Call Question4Answer
    End If
    
    If Not Application.Intersect(Range("SingleAmount"), Range(Target.Address)) _
    Is Nothing Then
        Call Question7bAmtAnswer
    End If
    
    If Not Application.Intersect(Range("RangeAmount"), Range(Target.Address)) _
    Is Nothing Then
        Call Question7bRngAnswer
    End If

End Sub

Private Sub Question1Answer()

'When changes are made to Answer1 (currently cell $H$11, this this routine
'is called [by the Private Sub Worksheet_Change(ByVal Target As Range)] to
'determine whether the statement of financial position date (in the header) was previously
'entered and if the statement of financial position date precedes the Answer1 date input by the
'user. If the conditions are not satified, the conclusion instructs the user
'to correct the error and moves the cursor to the problem cell. When all dates
'are valid, Question 2 becomes visible.

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Range("Conclude1").RowHeight = 12.75
    Range("Conclude1").WrapText = False
    If Range("Answer1").Value = "" And Range("Question2").EntireRow.Hidden = True Then
        Range("Conclude1").Value = "A date must be entered to continue."
        Range("Answer1").Select
        GoTo Quit
    End If
    
    If Range("Answer1").Value = "" And Range("Question2").EntireRow.Hidden = False Then
        Range("Conclude1").Value = ""
        Range("Answer1").Select
        Q2Hide
        Q3Hide
        Q4Hide
        Q5Hide
        Q6Hide
        Q7Hide
        Q7bHide
        GoTo Quit
    End If
    If Range("Answer1").Value <> "" And Range("Year_end").Value = "" Then
        With Range("Conclude1")
            .RowHeight = 25.5
            .WrapText = True
        End With
        Range("Conclude1").Value = "Enter the statement of financial position date in the " & _
            "header above before answering this question."
        Range("Answer1").Value = ""
        Range("Year_end").Select
        Q2Hide
        Q3Hide
        Q4Hide
        Q5Hide
        Q6Hide
        Q7Hide
        Q7bHide
        GoTo Quit
    End If
    If Range("Answer1").Value <> "" And Range("Answer1").Value <= Range("Year_end").Value Then
        Range("Conclude1").Value = "The evaluation date must occur after the statement of financial position date."
        Range("Answer1").Select
        Q2Hide
        Q3Hide
        Q4Hide
        Q5Hide
        Q6Hide
        Q7Hide
        Q7bHide
        GoTo Quit
    End If
    If Range("Answer1").Value <> "" And Range("Answer1").Value > Range("Year_end").Value Then
        Range("Conclude1").Value = "Go to question 2."
        Range("Question2").EntireRow.Hidden = False
        Range("Conclude2").Value = ""
        With Q2A
            .Visible = True
            .Left = 237
            .Top = Range("Question2").Top
            .Value = False
        End With
        With Q2B
            .Visible = True
            .Left = 237
            .Top = Range("Question2").Top + 18
            .Value = False
        End With
        Q3Hide
        Q4Hide
        Q5Hide
        Q6Hide
        Q7Hide
        Q7bHide
        Range("Conclude1").Select
    End If
    
Quit:
    Application.ScreenUpdating = True
    Application.EnableEvents = True
End Sub

Private Sub Q2A_Click()

    Dim AnswerQ2A As String
    
    Beep
    ans = MsgBox("Only SEC filers and certain conduit bond obligors " & vbCrLf & _
          "are to review subsequent events through the issue date. " & vbCrLf & _
          "Is the client either an SEC filer or a conduit bond " & _
          "obligor?", vbYesNo + vbQuestion + vbDefaultButton2, "PPC's Workpapers")
    
    If ans = vbNo Then
        Q2A.Value = False
        Q2B.Value = True
    End If
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Range("Conclude2").Value = "Go to question 3."
    Range("Question3").EntireRow.Hidden = False
    Range("Conclude3").Value = ""
    With Q3Yes
        .Visible = True
        .Left = 415
        .Top = Range("Question3").Top
        .Value = False
    End With
    With Q3No
        .Visible = True
        .Left = 455
        .Top = Range("Question3").Top
        .Value = False
    End With
    
    Q4Hide
    Q5Hide
    Q6Hide
    Q7Hide
    Q7bHide
    Range("Conclude2").Select
    
    Application.ScreenUpdating = True
    Application.EnableEvents = True
End Sub

Private Sub Q2B_Click()
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Range("Conclude2").Value = "Go to question 3."
    Range("Question3").EntireRow.Hidden = False
    Range("Conclude3").Value = ""
    With Q3Yes
        .Visible = True
        .Left = 415
        .Top = Range("Question3").Top
        .Value = False
    End With
    With Q3No
        .Visible = True
        .Left = 455
        .Top = Range("Question3").Top
        .Value = False
    End With
    
    Q4Hide
    Q5Hide
    Q6Hide
    Q7Hide
    Q7bHide
    Range("Conclude2").Select
    
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    
End Sub

Private Sub Q3Yes_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
'    If Q2B.Value = True Then
'        With Range("Conclude3")
'            .WrapText = True
'            .Value = "For revised financial statements, the subsequent " & _
'                "events must be evaluated through the issue date of the " & _
'                "revised statements. Go back to question 2, select the " & _
'                "first option, and answer question 3 again."
'            .RowHeight = 38.25
'        End With
'        Q4Hide
'    End If
    Range("Conclude3").Value = "Go to question 4."
    Range("Question4").EntireRow.Hidden = False
    Range("Conclude4").Value = ""
    
    Q5Hide
    Q6Hide
    Q7Hide
    Q7bHide
    
    Range("Conclude3").Select

    Application.ScreenUpdating = True
    Application.EnableEvents = True

End Sub

Private Sub Q3No_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Range("Conclude3").Value = "Question 4 is not applicable. " & _
    "Go to question 5."
    Range("Conclude3").RowHeight = 12.75
    Range("Question5").EntireRow.Hidden = False
    Range("Conclude5").Value = ""
    Range("TB5Rows").EntireRow.Hidden = True
    TB5.Visible = False
    With Q5Yes
        .Visible = True
        .Left = 415
        .Top = Range("Question5").Top
        .Value = False
    End With
    With Q5No
        .Visible = True
        .Left = 455
        .Top = Range("Question5").Top
        .Value = False
    End With
    
    Q4Hide
    Q6Hide
    Q7Hide
    Q7bHide
    
    Range("Conclude3").Select
    Application.ScreenUpdating = True
    Application.EnableEvents = True

End Sub

Private Sub Question4Answer()
'When changes are made to Answer4 (currently cell $H$36, this this routine
'is called [by the Private Sub Worksheet_Change(ByVal Target As Range)] to
'determine whether the Answer4 date precedes the SE evaluation date entered
'in Answer1 but comes after the statement of financial position date. If the date is not correct,
'Conclusion4 will warn the user to check the dates. When the date is valid,
'Question 5 becomes visible and Conclusion4 instructs the user to proceed to
'Question 5.

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Range("Conclude4").RowHeight = 12.75
    If Range("Answer4").Value = "" And Range("Question5").EntireRow.Hidden = True Then
        GoTo Quit
    End If
    
    If Range("Answer4").Value = "" And Range("Question5").EntireRow.Hidden = False Then
        Range("Conclude4").Value = ""
        Range("Answer4").Select
        Q5Hide
        Q6Hide
        Q7Hide
        Q7bHide
        GoTo Quit
    End If
    If Range("Answer4").Value <> "" And Range("Answer1").Value = "" Then
        Range("Conclude4").Value = "Answer Question 1 above before answering this question."
        Range("Answer4").Value = ""
        Range("Answer1").Select
        Q5Hide
        Q6Hide
        Q7Hide
        Q7bHide
        GoTo Quit
    End If
    If Range("Answer4").Value <> "" And Range("Year_End").Value = "" Then
'        Range("Conclude4").Value = "Enter the statement of financial position date in the header " & _
'            "before answering this question."
        With Range("Conclude4")
            .WrapText = True
            .Value = "Enter the statement of financial position date " & _
            "in the header before answering this question."
            .RowHeight = 25.5
        End With
        Range("Answer4").Value = ""
        Range("Conclude4").Select
        Q5Hide
        Q6Hide
        Q7Hide
        Q7bHide
        GoTo Quit
    End If
    If Range("Answer4").Value <> "" And Range("Answer4").Value <= Range("Year_end").Value Then
'        Range("Conclude4").Value = "The original evaluation date must occur after " & _
'            "the statement of financial position date."
        With Range("Conclude4")
            .WrapText = True
            .Value = "The original evaluation date must occur after " & _
            "the statement of financial position date."
            .RowHeight = 25.5
        End With
        Range("Answer4").Value = ""
        Range("Answer4").Select
        Q5Hide
        Q6Hide
        Q7Hide
        Q7bHide
        GoTo Quit
    End If
    If Range("Answer4").Value <> "" And Range("Answer4").Value > Range("Year_end").Value _
    And Range("Answer4").Value >= Range("Answer1").Value Then
        With Range("Conclude4")
            .WrapText = True
            .Value = "The original evaluation date must occur before " & _
            "the revised evaluation date from question 1."
            .RowHeight = 25.5
        End With
        Range("Answer4").Value = ""
        Range("Answer4").Select
        Q5Hide
        Q6Hide
        Q7Hide
        Q7bHide
        GoTo Quit
    End If
    If Range("Answer4").Value <> "" And Range("Answer4").Value > Range("Year_end").Value _
    And Range("Answer4").Value < Range("Answer1").Value Then
        Range("Conclude4").Value = "Go to question 5."
        Range("Question5").EntireRow.Hidden = False
        Range("TB5Rows").EntireRow.Hidden = True
        TB5.Visible = False
        Range("Conclude5").Value = ""
        With Q5Yes
            .Visible = True
            .Left = 415
            .Top = Range("Question5").Top
            .Value = False
        End With
        With Q5No
            .Visible = True
            .Left = 455
            .Top = Range("Question5").Top
            .Value = False
        End With
        Q6Hide
        Q7Hide
        Q7bHide
        Range("Conclude4").Select
    End If
    
Quit:
    Application.ScreenUpdating = True
    Application.EnableEvents = True
End Sub

Private Sub Q5Yes_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Range("Conclude5").Value = "Describe the nature of the subsequent event below. " & _
        "Then go to question 6."
    Range("TB5Rows").EntireRow.Hidden = False
    With TB5
        .Visible = True
        .Left = 14.25
        .Top = Range("TB5Begin").Top
        .Width = 474
    End With
    Range("Question6").EntireRow.Hidden = False
    Range("Conclude6").Value = ""
    With Q6Yes
        .Visible = True
        .Left = 415
        .Top = Range("Question6").Top
        .Value = False
    End With
    With Q6No
        .Visible = True
        .Left = 455
        .Top = Range("Question6").Top
        .Value = False
    End With
    
    Q7Hide
    Q7bHide
    
    Range("Conclude5").Select
    
    Application.ScreenUpdating = True
    Application.EnableEvents = True

End Sub

Private Sub Q5No_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Range("Conclude5").Value = "No other questions are necessary. Go to the " & _
        "Disclosure Worksheet."
    If TB5.Value <> "" Then
        TB5.Activate
        TB5.Value = ""
        Range("TB5Begin").Select
        TB5.Activate
        Range("TB5Begin").Select
    End If
    TB5.Visible = False
    Range("TB5Rows").EntireRow.Hidden = True
    
    Q6Hide
    Q7Hide
    Q7bHide
    
    Range("Conclude5").Select
    
    Application.ScreenUpdating = True
    Application.EnableEvents = True

End Sub

Private Sub Q6Yes_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    With Range("Conclude6")
        .RowHeight = 63.75
        .WrapText = True
    End With
    Range("Conclude6").Value = "No other questions are necessary. " & _
        "Accumulate the pro forma information necessary for proper " & _
        "disclosure. Go to the Disclosure worksheet. If desired, " & _
        "you can input that information directly after the phrase " & _
        "'The following pro forma financial data presents the " & _
        "effects of this event as if it had occurred on the " & _
        "statement of financial position date'."
    Q7Yes.Value = False
    Q7No.Value = False
    
    Q7Hide
    Q7bHide
    
    Range("Conclude6").Select
    
    Application.ScreenUpdating = True
    Application.EnableEvents = True

'


End Sub

Private Sub Q6No_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    With Range("Conclude6")
        .RowHeight = 12.75
        .WrapText = False
    End With
    Range("Conclude6").Value = "Go to question 7."
    Range("Question7").EntireRow.Hidden = False
    Range("Conclude7").Value = ""
    With Q7Yes
        .Visible = True
        .Left = 415
        .Top = Range("Question7").Top
        .Value = False
    End With
    With Q7No
        .Visible = True
        .Left = 455
        .Top = Range("Question7").Top
        .Value = False
    End With
    Range("Question7bPart4").EntireRow.Hidden = True
    
    Q7bHide
    
    Range("Conclude6").Select
    Application.ScreenUpdating = True
    Application.EnableEvents = True

End Sub

Private Sub Q7Yes_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    With Range("Conclude7")
        .RowHeight = 12.75
        .WrapText = False
    End With
    Range("Conclude7").Value = "Select whether the estimate is to " & _
        "be presented as a single amount or a range."
    Range("Question7bPart1").EntireRow.Hidden = False
    With Q7bSA
        .Visible = True
        .Left = 111
        .Top = Range("Question7b").Top
        .Value = False
    End With
    With Q7bRange
        .Visible = True
        .Left = 255
        .Top = Range("Question7b").Top
        .Value = False
    End With
    Range("Question7bPart2Amt").EntireRow.Hidden = True
    Range("Question7bPart2Rng").EntireRow.Hidden = True
        If TB7.Value <> "" Then
        TB7.Activate
        TB7.Value = ""
        Range("TB7Begin").Select
        TB7.Activate
        Range("TB7Begin").Select
    End If
    TB7.Visible = False
    Range("TB7Begin").EntireRow.Hidden = True
    
    Range("Conclude7").Select
    
    Application.ScreenUpdating = True
    Application.EnableEvents = True

End Sub

Private Sub Q7No_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
        
    Range("Conclude7").RowHeight = 12.75
    With Range("Conclude7")
        .WrapText = True
        .Value = "If desired, explain why an estimate can " & _
        "not be made. Then go to the Disclosure worksheet."
        .RowHeight = 25.5
    End With
        
    Range("Question7bPart4").EntireRow.Hidden = False
    With TB7
        .Visible = True
        .Left = 14.25
        .Top = Range("TB7Begin").Top
    End With
    
    Q7bHide
    
    Range("Conclude7").Select
        
    Application.ScreenUpdating = True
    Application.EnableEvents = True

End Sub

Private Sub Q7bSA_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Range("Question7bPart2Rng").EntireRow.Hidden = True
    Range("Question7bPart2Amt").EntireRow.Hidden = False
    Range("Question7bPart3").EntireRow.Hidden = False
    Range("Conclude7b").Value = ""
    Range("RangeAmount").Value = ""
    Range("SingleAmount").Select
      
    Application.ScreenUpdating = True
    Application.EnableEvents = True

End Sub

Private Sub Q7bRange_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Range("Question7bPart2Amt").EntireRow.Hidden = True
    Range("Question7bPart2Rng").EntireRow.Hidden = False
    Range("Question7bPart3").EntireRow.Hidden = False
    Range("Conclude7b").Value = ""
    Range("SingleAmount").Value = ""
    Range("RangeBegin").Select
    
    Application.ScreenUpdating = True
    Application.EnableEvents = True

End Sub

Private Sub Question7bAmtAnswer()
'When changes are made to SingleAmount (currently cell $D$74, this this routine
'is called [by the Private Sub Worksheet_Change(ByVal Target As Range)] to have
'Conclusion 7b instruct the user to either (1) proceed to the Disclosure
'worksheet if a valid amount is entered or (2) enter an amount in the
'SingleAmount range if the amount was deleted from the SingleAmount range.

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    If Range("SingleAmount").Value = "" Then
        Range("Conclude7b").Value = "Enter the estimated amount of of the subsequent event."
        Range("SingleAmount").Select
        GoTo Quit
    End If
    
    If Range("SingleAmount").Value <= 0 Then
        Range("Conclude7b").Value = "Enter an amount greater than zero."
        Range("SingleAmount").Value = ""
        Range("SingleAmount").Select
        GoTo Quit
    End If
    If Range("SingleAmount").Value > 0 Then
        Range("Conclude7b").Value = "Go to the Disclosure worksheet."
        Range("Conclude7b").Select
        GoTo Quit
    End If
    
Quit:
    Application.ScreenUpdating = True
    Application.EnableEvents = True
End Sub

Private Sub Question7bRngAnswer()
'When changes are made to SingleAmount (currently cell $D$74, this this routine
'is called [by the Private Sub Worksheet_Change(ByVal Target As Range)] to have
'Conclusion 7b instruct the user to either (1) proceed to the Disclosure
'worksheet if a valid amount is entered or (2) enter an amount in the
'SingleAmount range if the amount was deleted from the SingleAmount range.

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    If Range("RangeBegin").Value = "" And Range("RangeEnd").Value = "" Then
        Range("Conclude7b").Value = "Enter the beginning and ending range amounts."
        Range("RangeBegin").Select
        GoTo Quit
    End If
    If Range("RangeBegin").Value = "" And Range("RangeEnd").Value > 0 Then
        Range("Conclude7b").Value = "Enter the beginning range amount."
        Range("RangeBegin").Select
    GoTo Quit
    End If
    If Range("RangeBegin").Value > 0 And Range("RangeEnd").Value = "" Then
        Range("Conclude7b").Value = "Enter the ending range amount."
        Range("RangeEnd").Select
    GoTo Quit
    End If
    If Range("RangeBegin").Value <= 0 And Range("RangeEnd").Value = "" Or _
    Range("RangeBegin").Value <= 0 And Range("RangeEnd").Value > 0 Then
        Range("Conclude7b").Value = "Enter a beginning range amount greater than zero."
        Range("RangeBegin").Value = ""
        Range("RangeBegin").Select
        GoTo Quit
    End If
    If Range("RangeBegin").Value = "" And Range("RangeEnd").Value <= 0 Or _
    Range("RangeBegin").Value > 0 And Range("RangeEnd").Value <= 0 Then
        Range("Conclude7b").Value = "Enter an ending range amount greater than zero."
        Range("RangeEnd").Value = ""
        Range("RangeEnd").Select
        GoTo Quit
    End If
    If Range("RangeBegin").Value > 0 And Range("RangeEnd").Value > 0 And _
    Range("RangeBegin").Value >= Range("RangeEnd").Value Then
        Range("Conclude7b").Value = "The beginning range amount must be smaller than the ending range amount."
        Range("RangeBegin").Select
    GoTo Quit
    End If
    If Range("RangeBegin").Value > 0 And Range("RangeEnd").Value > 0 And _
    Range("RangeBegin").Value < Range("RangeEnd").Value Then
        Range("Conclude7b").Value = "Go to the Disclosure worksheet."
        Range("Conclude7b").Select
        GoTo Quit
    End If
    
Quit:
    Application.ScreenUpdating = True
    Application.EnableEvents = True

End Sub

Private Sub Q1Hide()
    
    Range("Question1").EntireRow.Hidden = True
    Range("Answer1").Value = ""

End Sub
    
Private Sub Q2Hide()
    
    Range("Question2").EntireRow.Hidden = True
    Q2A.Visible = False
    Q2A.Value = False
    Q2B.Visible = False
    Q2B.Value = False
    
End Sub
    
Private Sub Q3Hide()
    
    Range("Question3").EntireRow.Hidden = True
    Q3Yes.Visible = False
    Q3Yes.Value = False
    Q3No.Visible = False
    Q3No.Value = False

End Sub
    
Private Sub Q4Hide()
    
    Range("Question4").EntireRow.Hidden = True
    Range("Answer4").Value = ""
    Range("Conclude4").EntireRow.Hidden = True
   

End Sub
    
Private Sub Q5Hide()
    
    Range("Question5").EntireRow.Hidden = True
    Q5Yes.Visible = False
    Q5Yes.Value = False
    Q5No.Visible = False
    Q5No.Value = False
    TB5.Visible = False
    If TB5.Value <> "" Then
        TB5.Activate
        TB5.Value = ""
        Range("TB5Begin").Select
        TB5.Activate
        Range("TB5Begin").Select
    End If
    Range("TB5Begin").EntireRow.Hidden = True

End Sub
    
Private Sub Q6Hide()
    
    Range("Question6").EntireRow.Hidden = True
    Q6Yes.Visible = False
    Q6Yes.Value = False
    Q6No.Visible = False
    Q6No.Value = False

End Sub
       
Private Sub Q7Hide()
    
    Range("Conclude7").RowHeight = 12.75
    Range("Question7").EntireRow.Hidden = True
    Q7Yes.Visible = False
    Q7Yes.Value = False
    Q7No.Visible = False
    Q7No.Value = False
    TB7.Visible = False
    If TB7.Value <> "" Then
        TB7.Activate
        TB7.Value = ""
        Range("TB7Begin").Select
        TB7.Activate
        Range("TB7Begin").Select
    End If
    Range("TB7Begin").EntireRow.Hidden = True

End Sub

Private Sub Q7bHide()
    
    Range("Question7b").EntireRow.Hidden = True
    Range("SingleAmount").Value = ""
    Range("RangeAmount").Value = ""
    Q7bSA.Visible = False
    Q7bSA.Value = False
    Q7bRange.Visible = False
    Q7bRange.Value = False

End Sub

Private Sub Worksheet_Deactivate()

End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
 
Private Sub Worksheet_Activate()
    
    Application.ScreenUpdating = False

'    Sheet2.Select
    Range("DiscRange").Font.ColorIndex = xlAutomatic
    Range("DiscDetailCaption").Value = "NOTE X|fffd|SUBSEQUENT EVENTS"
    
'   The first "If" Statement covers the disclosure variables for the _
    period through which subsequent events were analyzed.
    
    If Sheet1.Range("Answer1") = "" Or Sheet1.Range("Answer1") <> "" And _
    Sheet1.Q2A = False And Sheet1.Q2B = False Or Sheet1.Range("Answer1") <> "" And _
    Sheet1.Q3Yes = False And Sheet1.Q3No = False Then
        Range("DiscDetailCaption").Value = ""
        With Range("DiscDetail1")
            .Value = "All of the necessary questions have not been " & _
             "answered completely. Please return to the Input worksheet " & _
             "for completion."
            .Font.Color = 255
        End With
    ElseIf Sheet1.Range("Answer1") <> "" And Sheet1.Q2A = True And Sheet1.Q3No = True Then
        With Range("DiscDetail1")
            .Value = "Management has evaluated subsequent events through " & _
                Format(Sheet1.Range("Answer1").Value, "mmmm d, yyyy") & _
                ", the date the financial statements were issued."
        End With
    ElseIf Sheet1.Range("Answer1") <> "" And Sheet1.Q2B = True And Sheet1.Q3No = True Then
        With Range("DiscDetail1")
            .Value = "Management has evaluated subsequent events through " & _
              "" & Format(Sheet1.Range("Answer1").Value, "mmmm d, yyyy") & _
              ", the date the financial statements were available to be issued."
        End With
    ElseIf Sheet1.Range("Answer1") <> "" And Sheet1.Q3Yes = True And _
        Sheet1.Range("Answer4") = "" Then
        With Range("DiscDetail1")
            .Value = "All of the necessary questions have not been " & _
             "answered completely. Please return to the Input worksheet " & _
             "for completion."
            .Font.Color = 255
        End With
    ElseIf Sheet1.Range("Answer1") <> "" And Sheet1.Q2A = True And _
        Sheet1.Q3Yes = True And Sheet1.Range("Answer4") <> "" Then
        Range("DiscDetail1").Value = "Management has evaluated subsequent " & _
            "events through " & _
            Format(Sheet1.Range("Answer1").Value, "mmmm d, yyyy") & ", " & _
            "the date the revised financial statements were issued. " & _
            "For the originally issued financial statements, subsequent " & _
            "events were evaluated through " & _
            Format(Sheet1.Range("Answer4").Value, "mmmm d, yyyy") & "."
    ElseIf Sheet1.Range("Answer1") <> "" And Sheet1.Q2B = True And _
        Sheet1.Q3Yes = True And Sheet1.Range("Answer4") <> "" Then
        Range("DiscDetail1").Value = "Management has evaluated subsequent " & _
            "events through " & _
            Format(Sheet1.Range("Answer1").Value, "mmmm d, yyyy") & ", " & _
            "the date the revised financial statements were available " & _
            "to be issued. For the originally issued financial " & _
            "statements, subsequent events were evaluated through " & _
            Format(Sheet1.Range("Answer4").Value, "mmmm d, yyyy") & "."
    End If

'   The second "If" Statement covers the disclosure variables if the user _
    has or has not answered question 5 concerning whether a subsequnt _
    event is to be disclosed.
    
    If Range("DiscDetail1").Font.Color = 255 Then
        Range("DiscDetail2").Value = ""
    ElseIf Range("DiscDetail1").Font.Color <> 255 And Sheet1.Q5Yes = False And _
    Sheet1.Q5No = False Then
        With Range("DiscDetail2")
            .Value = "All of the necessary questions have not been " & _
             "answered completely. Please return to the Input worksheet " & _
             "for completion."
            .Font.Color = 255
        End With
    ElseIf Sheet1.Q5No = True Or Range("DiscDetailCaption").Value = "" Then
           Range("DiscDetail2").Value = ""
    ElseIf Sheet1.Q5Yes = True And Sheet1.TB5.Value <> "" Then
        With Range("DiscDetail2")
            .Value = Replace(Sheet1.TB5.Value, Chr(13), "")
        End With
        With Range("DiscDetail3")
            .Value = "All of the necessary questions have not been " & _
             "answered completely. Please return to the Input worksheet " & _
             "for completion."
            .Font.Color = 255
        End With
    Else
        With Range("DiscDetail2")
            .Value = "All of the necessary questions have not been " & _
             "answered completely. Please return to the Input worksheet " & _
             "for completion."
            .Font.Color = 255
        End With
    End If

'   The third "If" Statement covers the disclosure variables concerning _
    if the user has or has not answered questions 5 and 6 regarding _
    pro forma disclosures and whether the subsequent event can be estimated.
    
    If Sheet1.Q6Yes = True Then
        With Range("DiscDetail3")
            .Value = "The following pro forma financial " & _
            "data presents the effects of this event as if it had " & _
            "occurred on the statement of financial position date: "
            .Font.ColorIndex = xlAutomatic
        End With
    ElseIf Sheet1.Q7Yes = True And Sheet1.Q7bSA = True _
    And Sheet1.Range("SingleAmount").Value <> "" Then
        With Range("DiscDetail3")
            .Value = "The financial effect is estimated to be " & _
            Format(Sheet1.Range("SingleAmount").Value, "$#,###") & "."
            .Font.ColorIndex = xlAutomatic
        End With
    ElseIf Sheet1.Q7Yes = True And Sheet1.Q7bRange = True _
    And Sheet1.Range("RangeBegin").Value <> "" _
    And Sheet1.Range("RangeEnd").Value <> "" Then
        With Range("DiscDetail3")
            .Value = "The financial effect is estimated to be " & _
            "between " & Format(Sheet1.Range("RangeBegin").Value, "$#,###") & _
            " and " & Format(Sheet1.Range("RangeEnd").Value, "$#,###") & "."
            .Font.ColorIndex = xlAutomatic
        End With
    ElseIf Sheet1.Q7No = True And Sheet1.TB7.Value = "" Then
        With Range("DiscDetail3")
            .Value = "An estimate of the financial effect is " & _
            "not presently determinable."
            .Font.ColorIndex = xlAutomatic
        End With
    ElseIf Sheet1.Q7No = True And Sheet1.TB7.Value <> "" Then
        With Range("DiscDetail3")
            .Value = "An estimate of the financial effect is " & _
            "not presently determinable. " & Replace(Sheet1.TB7.Value, Chr(13), "")
            .Font.ColorIndex = xlAutomatic
        End With
    Else
        With Range("DiscDetail3")
            .Value = "All of the necessary questions have not " & _
             "been answered completely. Please return to the Input worksheet " & _
             "for completion."
            .Font.Color = 255
        End With
    End If
    If Range("DiscDetail2").Value = "" Or Range("DiscDetail2").Font.Color = 255 Then
        Range("DiscDetail3").Value = ""
    End If
    
'   See the description of the MergeUnmerge routine below.
    
    Call MergeUnmerge
    Range("a1").Select

    Application.ScreenUpdating = True

    End Sub
Private Sub MergeUnmerge()

'   To enable the rows on the disclosure worksheet to automatically _
    adjust height depending on the amount of text to be held, the _
    cells in each of the 3 disclosure rows need to be unmerged before _
    the "AutoFit" is performed. After the AutoFit, the cells of each _
    of the 3 rows are remerged.

    Range("DiscDetail1").Select
    Selection.UnMerge
    Range("DiscDetail1").Select
    Selection.ColumnWidth = 76
    Selection.Rows.AutoFit
    Selection.ColumnWidth = 34.43
    Range(Range("DiscDetail1"), Range("DiscDetail1").Offset(0, 2)).Select
    Selection.Merge
    With Selection
        .VerticalAlignment = xlTop
        .WrapText = True
        .Orientation = 0
        .MergeCells = True
    End With
    Range("DiscDetail2").Select
    Selection.UnMerge
    Range("DiscDetail2").Select
    Selection.ColumnWidth = 76
    Selection.Rows.AutoFit
    Selection.ColumnWidth = 34.43
    Range(Range("DiscDetail2"), Range("DiscDetail2").Offset(0, 2)).Select
    Selection.Merge
    With Selection
        .VerticalAlignment = xlTop
        .WrapText = True
        .Orientation = 0
        .MergeCells = True
    End With
    Range("DiscDetail3").Select
    Selection.UnMerge
    Range("DiscDetail3").Select
    Selection.ColumnWidth = 76
    Selection.Rows.AutoFit
    Selection.ColumnWidth = 34.43
    Range(Range("DiscDetail3"), Range("DiscDetail3").Offset(0, 2)).Select
    Selection.Merge
    With Selection
        .VerticalAlignment = xlTop
        .WrapText = True
        .Orientation = 0
        .MergeCells = True
    End With
    Range("a1").Select

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'
' This code is protected and passworded when complete.
'

Private Const XL4MACRO As String = "PPCSecurityMacro"
Private Const INFORMATION As String = "INFORMATION"

Private Const bIsIDxR As Boolean = False        ' Set True if Interactive Disclosure Library
#Const IDxR = 0                                 ' Set 1 if Interactive Disclosure Library

      ' Declare security class

Private Sub Workbook_Activate()

  
  InitForEditorial
  
  On Error GoTo 0
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
  Workbook_BeforeClose_Editorial
End Sub



Public Function bIsSaving() As Boolean
  bIsSaving = False
End Function



INQUEST-PP=macro
