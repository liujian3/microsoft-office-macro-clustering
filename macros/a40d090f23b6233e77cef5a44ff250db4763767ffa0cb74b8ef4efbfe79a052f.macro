Attribute VB_Name = "Module1"
Sub DatabaseCheck()

' Create a connection object.
Dim cnPubs As ADODB.Connection
Set cnPubs = New ADODB.Connection

' Provide the connection string.
Dim strConn As String

'Use the SQL Server OLE DB Provider.
Dim DtSource As String
Dim Usr As String
Dim Pss As String
Dim Db As String

Rv = InputBox("Enter QC Revision Number", "Revision Number")
DtSource = InputBox("Enter Server Name", "Server Name")
Usr = InputBox("Enter User Name", "User Name")
Pss = InputBox("Enter Password", "Password")
Db = InputBox("Enter Processing Database Name", "DB Name")

'Connect to the Pubs database on the local server.
strConn = "PROVIDER=SQLOLEDB; Persist Security Info=True;User ID=" & Usr & ";password=" & Pss & ";Data Source=" & DtSource & ";Initial Catalog=" & Db

'Now open the connection.
cnPubs.Open strConn

'***************ROV Setting***************'
Dim rsPubs As ADODB.Recordset
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT DISTINCT ROVID FROM AuditTable ORDER BY ROVID"
    Sheets("Results").Range("AuditTable_ROVID").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT DISTINCT ROVID FROM VideoLog ORDER BY ROVID"
    Sheets("Results").Range("VideoLog_ROVID").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT DISTINCT ROVID FROM EventLog ORDER BY ROVID"
    Sheets("Results").Range("EventLog_ROVID").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT DISTINCT ROVID FROM EventProc ORDER BY ROVID"
    Sheets("Results").Range("EventProc_ROVID").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT DISTINCT ROVID FROM PosLog ORDER BY ROVID"
    Sheets("Results").Range("PosLog_ROVID").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT DISTINCT ROVID FROM PosProc ORDER BY ROVID"
    Sheets("Results").Range("PosProc_ROVID").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT DISTINCT ROVID FROM Scanlog ORDER BY ROVID"
    Sheets("Results").Range("ScanLog_ROVID").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT DISTINCT ROVID FROM ScanProc ORDER BY ROVID"
    Sheets("Results").Range("ScanProc_ROVID").CopyFromRecordset rsPubs
    .Close
End With

'*************Data Importing**********'
Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM AuditTable"
    Sheets("Results").Range("AuditTable").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM DepthLog"
    Sheets("Results").Range("DepthLog").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM EventLog"
    Sheets("Results").Range("EventLog").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM HeadingLog"
    Sheets("Results").Range("HeadingLog").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM PitchRoleLog"
    Sheets("Results").Range("PitchRoleLog").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM PosLog"
    Sheets("Results").Range("PosLog").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM ScanLog"
    Sheets("Results").Range("ScanLog").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM VideoLog"
    Sheets("Results").Range("VideoLog").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM PosLog"
    Sheets("Results").Range("PosLogCount").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM RAWSurvey"
    Sheets("Results").Range("RawSurveyCount").CopyFromRecordset rsPubs
    .Close
End With

'**************Applying Correction***************'
Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*) FROM Headinglog WHERE CorrHeading <> Heading"
    Sheets("Processing QC Checklist").Range("CorrHeading").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*)FROM PitchRoleLog WHERE CorrPitch <> Pitch"
    Sheets("Processing QC Checklist").Range("CorrPitch").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*)FROM PitchRoleLog WHERE CorrRole <> Role"
    Sheets("Processing QC Checklist").Range("CorrRoll").CopyFromRecordset rsPubs
    .Close
End With

'*************Track Processing***********'
Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM PosLog"
    Sheets("Results").Range("PosLogCount").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM PosLog"
    Sheets("Results").Range("PosLogCount").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM PosProc"
    Sheets("Results").Range("PosProcCount").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ID, East, North, KP FROM DigitizedPipe ORDER BY KP"
    Sheets("Results").Range("Digitized_Track").CopyFromRecordset rsPubs
    .Close
End With

'***************PosProc Calculation**************'
Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*) FROM PosProc WHERE KP IS NULL AND (Discard = 0 or discard is NULL)"
    Sheets("Processing QC Checklist").Range("PosProcKP").CopyFromRecordset rsPubs
    .Close
End With

'*****************Depth Calculation**************'
Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*) FROM Depthlog WHERE DepthAltKP IS NULL"
    Sheets("Processing QC Checklist").Range("DepthNulls").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT DepthLog.ID, DepthLog.DTime, PosProc.ID, PosProc.DTime, DepthLog.DepthAltKP, PosProc.Kp, DepthLog.DepthAltKP - PosProc.Kp AS KP_Difference FROM DepthLog INNER JOIN PosProc ON DepthLog.DTime = PosProc.DTime WHERE PosProc.KP IS NOT NULL ORDER BY KP_Difference DESC"
    Sheets("SQL Quary").Range("Depth_KP_Calc").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT     ID, TideTableID, FromKP, ToKP FROM TideTableDetails"
    Sheets("Results").Range("PipeTide").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*) AS DepthTide_CorrDepthTide FROM Depthlog WHERE Corrdepthtide <> Depthtide"
    Sheets("Processing QC Checklist").Range("CorrDepthTide").CopyFromRecordset rsPubs
    .Close
End With

'************Scans Processing***********'
Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM ScanLog"
    Sheets("Results").Range("ScanLog_Count").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM ScanProc"
    Sheets("Results").Range("ScanProc_Count").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*) FROM ScanProc WHERE  (FProc = 1) AND (KP IS NULL) OR (FProc = 1) AND (East IS NULL) OR (FProc = 1) AND (North IS NULL)"
    Sheets("Processing QC Checklist").Range("ScanNulls").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ScanProc.ID, ScanProc.DTime, PosProc.DTime, ScanProc.KP, PosProc.Kp, PosProc.KP - ScanProc.KP AS KP_Difference, ScanProc.FProc FROM ScanProc INNER JOIN PosProc ON ScanProc.DTime = PosProc.Dtime WHERE PosProc.KP IS NOT NULL ORDER BY KP_Difference DESC"
    Sheets("SQL Quary").Range("ScanKP").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*) FROM ScanProc WHERE DesignKP IS NULL"
    Sheets("Processing QC Checklist").Range("DesignKPNulls").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*) FROM ScanProc WHERE Depth IS NULL"
    Sheets("Processing QC Checklist").Range("ScanDepthNulls").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ScanProc.KP, Depthlog.DepthAltKP, ScanProc.Depth, Depthlog.DepthTide, ScanProc.Depth - Depthlog.DepthTide AS Depth_Difference FROM ScanProc INNER JOIN DepthLog ON ScanProc.dtime = Depthlog.dtime ORDER BY Depth_Difference DESC"
    Sheets("SQL Quary").Range("ScanDepth_Calc").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT     ScanProc.Heading AS ScanProc_Heading, HeadingLog.Heading, ScanProc.Heading - HeadingLog.Heading AS Heading_Diff FROM ScanProc INNER JOIN HeadingLog ON ScanProc.DTime = HeadingLog.Dtime ORDER BY Heading_Diff DESC"
    Sheets("SQL Quary").Range("Scans_H").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ScanProc.ID, ScanProc.Pitch, PitchRoleLog.Pitch, ScanProc.Pitch - PitchRoleLog.Pitch AS Pitch_Diff, ScanProc.Role, PitchRoleLog.Role, ScanProc.Role - PitchRoleLog.Role AS Role_Diff FROM ScanProc INNER JOIN PitchRoleLog ON ScanProc.DTime = PitchRoleLog.Dtime ORDER BY Role_Diff DESC"
    Sheets("SQL Quary").Range("Scans_PR").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ID, Dtime, KP, DesignKP FROM ScanProc WHERE FProc = 1 ORDER BY DTime"
    Sheets("Results").Range("Scan_Time_Sequence_Check").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT DISTINCT PipeDiameter FROM ScanProc WHERE FProc = 1"
    Sheets("Results").Range("Pipe_Diameters").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*) FROM ScanProc WHERE PipeDiameter is NULL"
    Sheets("Processing QC Checklist").Range("NullDim").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*) FROM ScanProc WHERE FProc = 1"
    Sheets("Results").Range("FProc").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*) FROM ScanProc WHERE FFProc = 1"
    Sheets("Results").Range("FFProc").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ID, KP, DesignKP, DesignDCC FROM ScanProc WHERE FProc = 1 ORDER BY KP"
    Sheets("Scan Gaps").Range("Scan_Gaps_Calc").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ID, KP, DesignKP, SCode FROM EventProc WHERE PCode = 'FS' AND SCode = 'FS-SS'OR SCode = 'FS-SE' ORDER BY KP"
    Sheets("Scan Gaps").Range("Scan_Gaps_Calc_DKP").CopyFromRecordset rsPubs
    .Close
End With

'*************Pipe Tracker  Processing**************'
Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM PTrackerLog"
    Sheets("Results").Range("PTrackerLog_Count").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM PTrackerProc"
    Sheets("Results").Range("PTrackerProc_Count").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*) FROM PTrackerProc WHERE KP IS NULL OR East IS NULL OR North IS NULL"
    Sheets("Processing QC Checklist").Range("PTrackerProcNulls").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT PTrackerProc.ID, PTrackerProc.DTime, PosProc.DTime, PTrackerProc.KP, PosProc.Kp, PosProc.KP - PTrackerProc.KP AS KP_Difference, PTrackerProc.FProc FROM PTrackerProc INNER JOIN PosProc ON PTrackerProc.DTime = PosProc.Dtime WHERE PosProc.KP IS NOT NULL ORDER BY KP_Difference DESC"
    Sheets("SQL Quary").Range("PTrackerProc_Calc").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*) FROM PTrackerProc WHERE DesignKP IS NULL OR DesignDCC IS NULL"
    Sheets("Processing QC Checklist").Range("PTrackerProcNulls_DKP").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*) FROM PTrackerProc WHERE Depth IS NULL"
    Sheets("Processing QC Checklist").Range("PTrackerProcNulls_Depth").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT PTrackerProc.KP, Depthlog.DepthAltKP, PTrackerProc.Depth, Depthlog.DepthTide, PTrackerProc.Depth - Depthlog.DepthTide AS Depth_Difference FROM PTrackerProc INNER JOIN DepthLog ON PTrackerProc.DTime = Depthlog.Dtime ORDER BY Depth_Difference DESC"
    Sheets("SQL Quary").Range("PTrackerProc_Depth_Calc").CopyFromRecordset rsPubs
    .Close
End With

'*************Pipe Profile Smoothing************'
Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT     COUNT(*) FROM ScanProc WHERE (PTProc = 1) AND (PipeDepth > SeaBedDep)"
    Sheets("Processing QC Checklist").Range("PipeAbove").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT        COUNT(*) AS Expr1" & _
    " FROM ScanProc" & _
    " WHERE        (FProc = 1) AND ((CASE WHEN SeaBedLHS1Dep < SeaBedRHS1Dep THEN SeaBedLHS1Dep ELSE SeaBedRHS1Dep END) <> SeaBedDep)"
    Sheets("Processing QC Checklist").Range("SeabedDep").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*) FROM ScanProc WHERE DoNotShowPipe = 1 AND PipeDeltaY <> 0 OR PipeDeltaY <> NULL"
    Sheets("Processing QC Checklist").Range("PipeDeltaY").CopyFromRecordset rsPubs
    .Close
End With

'*****************Event Processing****************'
Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*) FROM EventProc WHERE KP IS NULL OR East IS NULL OR North IS NULL"
    Sheets("Processing QC Checklist").Range("EventNulls").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT EventProc.ID,EventProc.DTime, PosProc.DTime, EventProc.KP, PosProc.Kp, EventProc.KP - PosProc.Kp AS KP_Difference FROM EventProc INNER JOIN PosProc ON EventProc.DTime = PosProc.DTime WHERE PosProc.KP IS NOT NULL AND EventProc.KP_Fixed IS NULL ORDER BY KP_Difference DESC"
    Sheets("SQL Quary").Range("EventKP_Calc").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*) FROM EventProc WHERE DesignKP IS NULL OR DesignDCC IS NULL"
    Sheets("Processing QC Checklist").Range("EventNulls_DKP").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*) FROM EventProc WHERE Discard = 1"
    Sheets("Processing QC Checklist").Range("Event_Discard").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ID, PCode, SCode, KP, Comment FROM EventProc WHERE Pcode = 'FJ' ORDER BY KP"
    Sheets("Results").Range("FJ_Calc").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ID, DTime, PCode, SCode, KP, DesignKP, Comment, Anomaly FROM EventProc ORDER BY DTime"
    Sheets("Events Check").Range("Event_Check_Calc").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ID, PCode, SCode, KP, Comment FROM EventProc WHERE Pcode = 'AN' ORDER BY KP"
    Sheets("Results").Range("AN_Check_Calc").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT DISTINCT KP-KP_Fixed FROM EventProc WHERE KP_FIXED IS NOT NULL"
    Sheets("Processing QC Checklist").Range("EventNulls_KPFixed").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT EventProc.ID,EventProc.DTime, PosProc.DTime, EventProc.KP_Fixed, PosProc.Kp, EventProc.KP_Fixed - PosProc.Kp AS KP_Difference FROM EventProc INNER JOIN PosProc ON EventProc.DTime = PosProc.DTime WHERE PosProc.KP IS NOT NULL AND EventProc.KP_Fixed IS not NULL ORDER BY KP_Difference DESC"
    Sheets("Results").Range("EventKP_Fixed_Calc").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*) FROM EventProc WHERE Customcomment IS NULL OR Comment IS NULL OR Customcomment NOT LIKE Comment"
    Sheets("Processing QC Checklist").Range("Comment").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ID, Scode, KP, Comment, Length, Height FROM EventProc WHERE Pcode = 'FS' ORDER BY KP"
    Sheets("Results").Range("FS_Check_Calc").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ID, Scode, KP, Comment, Length FROM EventProc WHERE Pcode = 'BU' ORDER BY KP"
    Sheets("Results").Range("BU_Check_Calc").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*) FROM EventProc WHERE EventNum IS NULL"
    Sheets("Processing QC Checklist").Range("EventNumNulls").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT (*) FROM EventProc WHERE PCode = 'AN' AND Depletion IS NULL"
    Sheets("Processing QC Checklist").Range("AN_DeplationNulls").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT Comment FROM EventProc WHERE SCode = 'U-S'"
    Sheets("Processing QC Checklist").Range("PT_Start").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT Comment FROM EventProc WHERE SCode = 'U-E'"
    Sheets("Processing QC Checklist").Range("PT_End").CopyFromRecordset rsPubs
    .Close
End With

Application.ActiveWorkbook.SaveAs (Db & "- Project Processing QC Checklist R05_R" & Rv & ".xls")

End Sub

Attribute VB_Name = "Module2"
Sub ROVSettingCheck()

' Create a connection object.
Dim cnPubs As ADODB.Connection
Set cnPubs = New ADODB.Connection

' Provide the connection string.
Dim strConn As String

'Use the SQL Server OLE DB Provider.
Dim DtSource As String
Dim Usr As String
Dim Pss As String
Dim Db As String
Dim ID As Integer

DtSource = InputBox("Enter Server Name", "Server Name")
Usr = InputBox("Enter User Name", "User Name")
Pss = InputBox("Enter Password", "Password")
Db = InputBox("Enter MCS Prjects Database Name", "DB Name")
ID = InputBox("Enter ROVID", "PK_ROVID")

'Connect to the Pubs database on the local server.
strConn = "PROVIDER=SQLOLEDB; Persist Security Info=True;User ID=" & Usr & ";password=" & Pss & ";Data Source=" & DtSource & ";Initial Catalog=" & Db

'Now open the connection.
cnPubs.Open strConn

Dim rsPubs As ADODB.Recordset
Set rsPubs = New ADODB.Recordset

'***************ROV Setting***************'
With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ROUND(MScanOffsetX,2), ROUND(MScanOffsetY,2), ROUND(MScanOffsetZ,2) FROM tblROVSettings WHERE PK_ROVID =" & ID & " "
    Sheets("ROV Offsets").Range("G5").CopyFromRecordset rsPubs
    .Close
End With

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ROUND(SScanOffsetX,2), ROUND(SScanOffsetY,2), ROUND(SScanOffsetZ,2) FROM tblROVSettings WHERE PK_ROVID =" & ID & " "
    Sheets("ROV Offsets").Range("G6").CopyFromRecordset rsPubs
    .Close
End With

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ROUND(MRX,2), ROUND(MRY,2), ROUND(MRZ,2) FROM tblROVSettings WHERE PK_ROVID =" & ID & " "
    Sheets("ROV Offsets").Range("G9").CopyFromRecordset rsPubs
    .Close
End With

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ROUND(SRX,2), ROUND(SRY,2), ROUND(SRZ,2) FROM tblROVSettings WHERE PK_ROVID =" & ID & " "
    Sheets("ROV Offsets").Range("G10").CopyFromRecordset rsPubs
    .Close
End With

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ROUND(PosX,2), ROUND(PosY,2), ROUND(PosZ,2) FROM tblROVSettings WHERE PK_ROVID =" & ID & " "
    Sheets("ROV Offsets").Range("G13").CopyFromRecordset rsPubs
    .Close
End With

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ROUND(ScanX,2), ROUND(ScanY,2), ROUND(ScanZ,2) FROM tblROVSettings WHERE PK_ROVID =" & ID & " "
    Sheets("ROV Offsets").Range("G14").CopyFromRecordset rsPubs
    .Close
End With

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ROUND(EventX,2), ROUND(EventY,2), ROUND(EventZ,2) FROM tblROVSettings WHERE PK_ROVID =" & ID & " "
    Sheets("ROV Offsets").Range("G15").CopyFromRecordset rsPubs
    .Close
End With

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ROUND(DepthX,2), ROUND(DepthY,2), ROUND(DepthZ,2) FROM tblROVSettings WHERE PK_ROVID =" & ID & " "
    Sheets("ROV Offsets").Range("G16").CopyFromRecordset rsPubs
    .Close
End With

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ROUND(AltX,2), ROUND(AltY,2), ROUND(AltZ,2) FROM tblROVSettings WHERE PK_ROVID =" & ID & " "
    Sheets("ROV Offsets").Range("G17").CopyFromRecordset rsPubs
    .Close
End With

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ROUND(PTrackerX,2), ROUND(PTrackerY,2), ROUND(PTrackerZ,2) FROM tblROVSettings WHERE PK_ROVID =" & ID & " "
    Sheets("ROV Offsets").Range("G18").CopyFromRecordset rsPubs
    .Close
End With

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ROUND(DopplerX,2), ROUND(DopplerY,2), ROUND(DopplerZ,2) FROM tblROVSettings WHERE PK_ROVID =" & ID & " "
    Sheets("ROV Offsets").Range("G19").CopyFromRecordset rsPubs
    .Close
End With

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT ROUND(PTrackerAltX,2), ROUND(PTrackerAltY,2), ROUND(PTrackerAltZ,2) FROM tblROVSettings WHERE PK_ROVID =" & ID & " "
    Sheets("ROV Offsets").Range("G20").CopyFromRecordset rsPubs
    .Close
End With

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT PK_TideID, Name FROM tblTide"
    Sheets("Results").Range("A52").CopyFromRecordset rsPubs
    .Close
End With

End Sub
Attribute VB_Name = "Module3"
Sub AllQCChecks()
    
    Application.Run "DatabaseCheck"
    
    Application.Run "ROVSettingCheck"
   
    Application.Run "LoggingDatabaseCheck"
   
End Sub

Attribute VB_Name = "Module4"
Sub LoggingDatabaseCheck()

' Create a connection object.
Dim cnPubs As ADODB.Connection
Set cnPubs = New ADODB.Connection

' Provide the connection string.
Dim strConn As String

'Use the SQL Server OLE DB Provider.
Dim DtSource As String
Dim Usr As String
Dim Pss As String
Dim Db As String

DtSource = InputBox("Enter Server Name", "Server Name")
Usr = InputBox("Enter User Name", "User Name")
Pss = InputBox("Enter Password", "Password")
Db = InputBox("Enter Logging Database Name", "DB Name")

'Connect to the Pubs database on the local server.
strConn = "PROVIDER=SQLOLEDB; Persist Security Info=True;User ID=" & Usr & ";password=" & Pss & ";Data Source=" & DtSource & ";Initial Catalog=" & Db

'Now open the connection.
cnPubs.Open strConn

'*************Data Importing**********'
Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM AuditTable"
    Sheets("Results").Range("AuditTable_Log").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM DepthLog"
    Sheets("Results").Range("DepthLog_Log").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM EventLog"
    Sheets("Results").Range("EventLog_Log").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM HeadingLog"
    Sheets("Results").Range("HeadingLog_Log").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM PitchRoleLog"
    Sheets("Results").Range("PitchRoleLog_Log").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM PosLog"
    Sheets("Results").Range("PosLog_Log").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM ScanLog"
    Sheets("Results").Range("ScanLog_Log").CopyFromRecordset rsPubs
    .Close
End With

Set rsPubs = Nothing
Set rsPubs = New ADODB.Recordset

With rsPubs
    .ActiveConnection = cnPubs
    .Open "SELECT COUNT(*)FROM VideoLog"
    Sheets("Results").Range("VideoLog_Log").CopyFromRecordset rsPubs
    .Close
End With

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
