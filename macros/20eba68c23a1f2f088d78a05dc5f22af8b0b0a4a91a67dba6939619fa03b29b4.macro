Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Workbook_SheetSelectionChange(ByVal Sh As Object, ByVal Target As Range)

' dient dazu, die automatische Berechnung des Monatszeit|fffd|bertrags
' zu ver|fffd|ndern, falls dies notwendig oder gew|fffd|nscht ist

Dim akt_blatt As Integer
Dim kein_doppelpunkt As Boolean

akt_blatt = 13

If Not (IsEmpty(ActiveSheet.Range("E1"))) Then
  akt_blatt = Month(ActiveSheet.Range("E1"))
  
  If 1 <= akt_blatt <= 12 Then
    
    Select Case Target.AddressLocal
    Case "$I$53"
    If (Worksheets(akt_blatt).Range("F54")) = "" Then
      Antwort = MsgBox("Achtung, Sie sind im Begriff die automatische Berechnung des" + Chr(13) + _
                       "Monats|fffd|bertrages zu |fffd|ndern! Sind Sie sicher, dass Sie" + Chr(13) + _
                       "dies wollen?", vbYesNo + vbQuestion, "Monats|fffd|bernahme |fffd|berstunden")
      If Antwort = vbYes Then
        Antwort2 = InputBox("Bitte geben Sie hier Ihren neuen Wert ein:", _
                            "|fffd|bertrag ab|fffd|ndern")
        If Antwort2 <> "" Then
          Call blattschutz(akt_blatt, False)
          Call Sperren(akt_blatt, False, "I53")
          negativ = Left(Antwort2, 1)
          If negativ = "-" Then
            l|fffd|nge = Len(Antwort2)
            betrag = Split(Right(Antwort2, l|fffd|nge - 1), ":")
            Worksheets(akt_blatt).Range("I53") = -1 * (betrag(0) + betrag(1) / 60) / 24
          Else
            Worksheets(akt_blatt).Range("I53") = Antwort2
          End If
          Call Sperren(akt_blatt, True, "I53")
          Call blattschutz(akt_blatt, True)
          Anhang = ", von Hand ge|fffd|ndert:"
          Call blattschutz(akt_blatt, False)
          Call Sperren(akt_blatt, False, "F54:I54")
          Worksheets(akt_blatt).Range("F54") = "Zeit|fffd|bertrag wurde von Hand ge|fffd|ndert," + _
                                               " bitte |fffd|berpr|fffd|fen!"
          Worksheets(akt_blatt).Range("F54").Font.Bold = True
          Worksheets(akt_blatt).Range("F54").Interior.ColorIndex = 1
          Call Sperren(akt_blatt, True, "F54:I54")
          Call blattschutz(akt_blatt, True)
        End If
        
      End If
    Else
    Antwort = MsgBox("Wollen Sie die automatische Berechnung des" + Chr(13) + _
                     "Monats|fffd|bertrages wieder herstellen?", _
                     vbYesNo + vbQuestion, "Monats|fffd|bernahme |fffd|berstunden")
      If Antwort = vbYes Then
        Call blattschutz(akt_blatt, False)
        Call Sperren(akt_blatt, False, "F53:I54")
        Worksheets(akt_blatt).Range("I53").FormulaLocal = "=WENN(I49=0;0;I51-I52)"
        Worksheets(akt_blatt).Range("F54") = ""
        Worksheets(akt_blatt).Range("F54").Interior.ColorIndex = 3
        Call Sperren(akt_blatt, True, "F53:I54")
        Call blattschutz(akt_blatt, True)
      End If
    End If
      
    'ggf |fffd|bertrag aus Vorjahr |fffd|ndern
      
    Case "$I$50"
    If akt_blatt = 1 Then
      Call blattschutz(akt_blatt, False)
      Call Sperren(akt_blatt, False, "I50")
      Antwort = InputBox("Achtung, hier k|fffd|nnen Sie den |fffd|bertrag aus dem Vorjahr ab|fffd|ndern" + Chr(13) + _
                         "Sind Sie sicher, dass Sie die wollen?" + Chr(13) + _
                         "Dann tragen Sie bitte hier den aktuellen Wert ein!", _
                         "|fffd|bertrag Januar aus Vorjahr |fffd|ndern")
      If Antwort <> "" Then
        negativ = Left(Antwort, 1)
        If negativ = "-" Then
          l|fffd|nge = Len(Antwort)
          betrag = Split(Right(Antwort, l|fffd|nge - 1), ":")
          Worksheets(akt_blatt).Range("I50") = -1 * (betrag(0) + betrag(1) / 60) / 24
        Else
          Worksheets(akt_blatt).Range("I50") = Antwort
        End If
      End If
      Call Sperren(akt_blatt, True, "I50")
      Call blattschutz(akt_blatt, True)
    Else
      Antwort = MsgBox("Den |fffd|bertrag aus dem Vormonat |fffd|ndern Sie bitte in Zelle" + _
                       " 'I53' des Vormonats", vbOKOnly + vbInformation, _
                       "|fffd|bertrag |fffd|ndern hier nicht m|fffd|glich")
    End If
    End Select
    
    adresse = Split(Target.AddressLocal, "$")
    Select Case adresse(1)
    Case "G"
      Select Case adresse(2)
      Case 6, 7, 8, 9, 10, 11, 12, _
          14, 15, 16, 17, 18, 19, 20, _
          22, 23, 24, 25, 26, 27, 28, _
          30, 31, 32, 33, 34, 35, 36, _
          38, 39, 40, 41, 42, 43, 44, _
          46, 47
          aktive_zelle = "G" & adresse(2)
          kein_doppelpunkt = True
          While kein_doppelpunkt
            Antwort = InputBox("Aus (Excel)technischen Gr|fffd|nden m|fffd|ssen Sie ein g|fffd|ltige Stundenzahl im " + _
                         "Format" + Chr(13) + Chr(13) + "[-][h]h:mm (Inhalte der eckigen Klammern" + _
                         " sind optional)" + Chr(13) + Chr(13) + _
                         "an dieser Stelle eingeben!" + Chr(13) + Chr(13) + _
                         "Bitte achten Sie auf den Doppelpunkt!", "zus|fffd|tzliche Stunden oder Fehlstunden eingeben")
            negativ = False
            l|fffd|nge = Len(Antwort)
            If l|fffd|nge = 0 Then
              kein_doppelpunkt = False
            Else
              For i = 1 To l|fffd|nge
                If Mid(Antwort, i, 1) = ":" Then
                  If i < l|fffd|nge Then
                    kein_doppelpunkt = False
                  End If
                Else
                  If Mid(Antwort, i, 1) = "-" Then
                    negativ = True
                  End If
                End If
              Next i
            End If
          Wend
          
          If l|fffd|nge <> 0 Then
            If negativ Then
              betrag = Split(Right(Antwort, l|fffd|nge - 1), ":")
              Worksheets(akt_blatt).Range(aktive_zelle) = -1 * (betrag(0) + betrag(1) / 60) / 24
            Else
              Worksheets(akt_blatt).Range(aktive_zelle) = Antwort
            End If
          End If
          ' n|fffd|chste zu erfassende Zeile anspringen
          zelle = "K" & adresse(2)
          Select Case Range(zelle)
            Case "6"
              zelle = "C" & (adresse(2) + 4)
            Case "7"
              zelle = "C" & (adresse(2) + 3)
            Case Else
              zelle = "C" & (adresse(2) + 1)
            End Select
          Range(zelle).Activate
      End Select
    End Select
 
 ' hier wird die Formel f|fffd|r die |fffd|berstundenberechnung angepa|fffd|t und ggf.
 ' bei R|fffd|ckg|fffd|ngigmachen eines Streiktages die Sollstundenzahl in Spalte "J" wieder
 ' korrigiert.
 ' Achtung: wenn in den pers|fffd|nlichen Einstellungen |fffd|nderungen ab einem bestimmten
 ' Datum erfolgt sind, erkennbar, falls in Zelle B11 auf Blatt 13 nicht der 01.01.
 ' steht, so muss bei den Eintragungen der Soll-Arbeitszeit in der Spalte J beachtet
 ' werden, dass die Eintr|fffd|ge nur am bzw. nach diesem Tag in den Bl|fffd|ttern 1-12
 ' durchgef|fffd|hrt werden d|fffd|rfen.
    
 ' Datum in Zelle B11 auf Blatt 13 ge|fffd|ndert?
 
 ' zun|fffd|chst erste und letzte Zeile mit einem Eintrag in Spalte "C" oder "H" finden
    
    erste_Zeile = 47
    letzte_zeile = 6
    letzte_zelle = "J6"
    For i = 6 To 47
      zelle_c = "C" & i
      zelle_h = "H" & i
      If i <> 13 And i <> 21 And i <> 29 And i <> 37 And i <> 45 Then
        If ((Sh.Range(zelle_c) <> "") And (Sh.Range(zelle_c) <> 0)) Or Sh.Range(zelle_h) <> "" Then
          If erste_Zeile = 47 Then
            erste_Zeile = i
          End If
          letzte_zeile = i
          letzte_zelle = "J" & i
        End If
      End If
    Next i
        
  ' |fffd|berstunden ausrechnen
          
    Call blattschutz(akt_blatt, False)
    Call Sperren(akt_blatt, False, "J53")
    If letzte_zeile = 6 Then
      Sh.Range("J53") = 0
    Else
      Sh.Range("J53").FormulaLocal = "=SUMME(I6:I47)+I50-I13-I21-I29-I37-I45-SUMME(J6:" & letzte_zelle & ")"
    End If
    Call Sperren(akt_blatt, True, "J53")
    Call blattschutz(akt_blatt, True)
    
    
  ' eventuell Sollarbeitszeiten in Spalte J anpassen, dabei erst ab dem Tag, der gr|fffd||fffd|er oder gleich
  ' dem Eintrag in Zelle B11 auf Blatt 13 ist. Dabei Streiktage oder Tage unbezahlten Urlaubs beachten.
    
  ' Idee: Solange in der Spalte "C" oder "H" gar nichts drin steht, wird davon ausgegangen, dass an diesem
  ' Tag und zuvor noch nicht gearbeitet wurde
  ' => Wert in Spalte "J" auf "" setzen, dann wird die Sollarbeitszeit auch dann korrekt berechnet,
  ' wenn ein Neuanf|fffd|nger erst mitten im Monat oder eben nicht am ersten beginnt, abgedeckt
  
  ' Wenn es nur eine |fffd|nderung, z.B. zur Teilzeit gibt, so bleiben die schon vorhandenen Eintr|fffd|ge in der
  ' Spalte "J" unber|fffd|hrt, da ja in "C" oder "H" ein Wert ungleich "" oder 0 steht.
    
    Vergleichsdatum = Worksheets(13).Range("B11")
    Monat_aktuell = Month(Worksheets(akt_blatt).Range("E1"))
    If Month(Worksheets(akt_blatt).Range("E1")) >= Month(Vergleichsdatum) Then
      If Worksheets(13).CheckBox1.Value = False Then ' Erfassung Stunden pro Tag
        Call blattschutz(akt_blatt, False)
        Call Sperren(akt_blatt, False, "J6:J47")
        For j = 6 To 47
          If j <> 13 And j <> 21 And j <> 29 And j <> 37 And j <> 45 Then
            zelle_a = "A" & j
            zelle_h = "H" & j
            zelle_c = "C" & j
            zelle_k = "K" & j
            
            ' Anpassungen in der Sollarbeitszeit nur durchf|fffd|hren, wenn sie nach dem Datum in
            ' Zelle B13 auf Blatt 13 liegen
            
            If Range(zelle_a) <> "" Then
              If Day(Range(zelle_a)) >= Day(Vergleichsdatum) And Selection.Row <= 47 Then
            
            ' Sollarbeitszeit vor aktueller Zeile entfernen, wenn dort noch kein Eintrag steht
            ' Blatt ganz leer
                If erste_Zeile = 47 Then
                  If j >= Selection.Row Then
                    zelle_k = "K" & j
                    zelle_j = "J" & j
                    Select Case Range(zelle_k)
                      Case 2:
                        Range(zelle_j) = Worksheets(13).Range("B8")
                      Case 3:
                        Range(zelle_j) = Worksheets(13).Range("C8")
                      Case 4:
                        Range(zelle_j) = Worksheets(13).Range("D8")
                      Case 5:
                        Range(zelle_j) = Worksheets(13).Range("E8")
                      Case 6:
                        Range(zelle_j) = Worksheets(13).Range("F8")
                    End Select
                  Else
                    zelle_j = "J" & j
                    Range(zelle_j) = ""
                  End If
                Else  ' Blatt nicht leer, (erste Zeile <> 47) daher weitere Randbedingungen beachten
                  If j < Selection.Row And j < erste_Zeile Then
                    zelle_j = "J" & j
                    Range(zelle_j) = ""
                  Else
                    If Not Sh.Range(zelle_h) Like "*Streik*" And Sh.Range(zelle_k) <> 0 Then
                      zelle_k = "K" & j
                      zelle_j = "J" & j
                      Select Case Range(zelle_k)
                        Case 2:
                          Range(zelle_j) = Worksheets(13).Range("B8")
                        Case 3:
                          Range(zelle_j) = Worksheets(13).Range("C8")
                        Case 4:
                          Range(zelle_j) = Worksheets(13).Range("D8")
                        Case 5:
                          Range(zelle_j) = Worksheets(13).Range("E8")
                        Case 6:
                          Range(zelle_j) = Worksheets(13).Range("F8")
                      End Select
                    End If
                  End If
                End If
              End If
            End If
          End If
        Next j
        Call Sperren(akt_blatt, True, "J6:J47")
        Call blattschutz(akt_blatt, True)
      
      Else ' Erfassung Stunden pro Monat
        Call blattschutz(akt_blatt, False)
        Call Sperren(akt_blatt, False, "J53")
        Sh.Range("J53").FormulaLocal = "=SUMME(I6:I47)+I50-I13-I21-I29-I37-I45-I52"
        Call Sperren(akt_blatt, True, "J53")
        Call blattschutz(akt_blatt, True)
      End If
    End If
  End If
End If

End Sub




Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton13, 130, 6, MSForms, CommandButton"
Attribute VB_Control = "CommandButton12, 129, 7, MSForms, CommandButton"
Attribute VB_Control = "CommandButton11, 128, 8, MSForms, CommandButton"
Attribute VB_Control = "CommandButton10, 127, 9, MSForms, CommandButton"
Attribute VB_Control = "CommandButton9, 126, 10, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 125, 11, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 124, 12, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 123, 13, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 122, 14, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 121, 15, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 120, 16, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 119, 17, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 118, 18, MSForms, CommandButton"
Attribute VB_Control = "CommandButton14, 131, 19, MSForms, CommandButton"
Private Sub CommandButton1_Click()
  Standardtag
End Sub

Private Sub CommandButton10_Click()
  Call drucken
End Sub

Private Sub CommandButton11_Click()
  Call speichern
End Sub

Private Sub CommandButton12_Click()
  Call pers_einstell
End Sub

Private Sub CommandButton13_Click()
  Call altdatenuebernahme
End Sub
Private Sub CommandButton14_Click()
  Call uebernahme_2013_2014
End Sub

Private Sub CommandButton2_Click()
  Spezialtag ("Flexibilisierung")
End Sub

Private Sub CommandButton3_Click()
  Spezialtag ("Urlaub")
End Sub

Private Sub CommandButton4_Click()
  Spezialtag ("Dienstreise")
End Sub

Private Sub CommandButton5_Click()
  Spezialtag ("Krank")
End Sub

Private Sub CommandButton6_Click()
  Spezialtag ("Feiertag")
End Sub

Private Sub CommandButton7_Click()
  Spezialtag ("Dienstfrei")
End Sub

Private Sub CommandButton8_Click()
  Spezialtag ("Arbeitsfrei")
End Sub

Private Sub CommandButton9_Click()
  Spezialtag ("Streik")
End Sub
Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton13, 158, 10, MSForms, CommandButton"
Attribute VB_Control = "CommandButton12, 157, 11, MSForms, CommandButton"
Attribute VB_Control = "CommandButton11, 156, 12, MSForms, CommandButton"
Attribute VB_Control = "CommandButton10, 155, 13, MSForms, CommandButton"
Attribute VB_Control = "CommandButton9, 154, 14, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 153, 15, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 152, 16, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 151, 17, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 150, 18, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 149, 19, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 148, 20, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 147, 21, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 146, 22, MSForms, CommandButton"
Private Sub CommandButton1_Click()
  Standardtag
End Sub

Private Sub CommandButton10_Click()
  Call drucken
End Sub

Private Sub CommandButton11_Click()
  Call speichern
End Sub

Private Sub CommandButton12_Click()
  Call pers_einstell
End Sub

Private Sub CommandButton13_Click()
  Call altdatenuebernahme
End Sub

Private Sub CommandButton2_Click()
  Spezialtag ("Flexibilisierung")
End Sub

Private Sub CommandButton3_Click()
  Spezialtag ("Urlaub")
End Sub

Private Sub CommandButton4_Click()
  Spezialtag ("Dienstreise")
End Sub

Private Sub CommandButton5_Click()
  Spezialtag ("Krank")
End Sub

Private Sub CommandButton6_Click()
  Spezialtag ("Feiertag")
End Sub

Private Sub CommandButton7_Click()
  Spezialtag ("Dienstfrei")
End Sub

Private Sub CommandButton8_Click()
  Spezialtag ("Arbeitsfrei")
End Sub

Private Sub CommandButton9_Click()
  Spezialtag ("Streik")
End Sub




Attribute VB_Name = "Tabelle11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton13, 150, 10, MSForms, CommandButton"
Attribute VB_Control = "CommandButton12, 149, 11, MSForms, CommandButton"
Attribute VB_Control = "CommandButton11, 148, 12, MSForms, CommandButton"
Attribute VB_Control = "CommandButton10, 147, 13, MSForms, CommandButton"
Attribute VB_Control = "CommandButton9, 146, 14, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 145, 15, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 144, 16, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 143, 17, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 142, 18, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 141, 19, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 140, 20, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 139, 21, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 138, 22, MSForms, CommandButton"
Private Sub CommandButton1_Click()
  Standardtag
End Sub

Private Sub CommandButton10_Click()
  Call drucken
End Sub

Private Sub CommandButton11_Click()
  Call speichern
End Sub

Private Sub CommandButton12_Click()
  Call pers_einstell
End Sub

Private Sub CommandButton13_Click()
  Call altdatenuebernahme
End Sub

Private Sub CommandButton2_Click()
  Spezialtag ("Flexibilisierung")
End Sub

Private Sub CommandButton3_Click()
  Spezialtag ("Urlaub")
End Sub

Private Sub CommandButton4_Click()
  Spezialtag ("Dienstreise")
End Sub

Private Sub CommandButton5_Click()
  Spezialtag ("Krank")
End Sub

Private Sub CommandButton6_Click()
  Spezialtag ("Feiertag")
End Sub

Private Sub CommandButton7_Click()
  Spezialtag ("Dienstfrei")
End Sub

Private Sub CommandButton8_Click()
  Spezialtag ("Arbeitsfrei")
End Sub

Private Sub CommandButton9_Click()
  Spezialtag ("Streik")
End Sub




Attribute VB_Name = "Tabelle12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton14, 494, 20, MSForms, CommandButton"
Attribute VB_Control = "CommandButton13, 493, 21, MSForms, CommandButton"
Attribute VB_Control = "CommandButton12, 492, 22, MSForms, CommandButton"
Attribute VB_Control = "CommandButton11, 491, 23, MSForms, CommandButton"
Attribute VB_Control = "CommandButton10, 490, 24, MSForms, CommandButton"
Attribute VB_Control = "CommandButton9, 489, 25, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 488, 26, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 487, 27, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 486, 28, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 485, 29, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 484, 30, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 483, 31, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 482, 32, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 481, 33, MSForms, CommandButton"
Private Sub CommandButton1_Click()
  Standardtag
End Sub

Private Sub CommandButton10_Click()
  Call drucken
End Sub

Private Sub CommandButton11_Click()
  Call speichern
End Sub

Private Sub CommandButton12_Click()
  Call pers_einstell
End Sub

Private Sub CommandButton13_Click()
  Call altdatenuebernahme
End Sub

Private Sub CommandButton14_Click()
  Call Jahres|fffd|bernahme
End Sub

Private Sub CommandButton2_Click()
  Spezialtag ("Flexibilisierung")
End Sub

Private Sub CommandButton3_Click()
  Spezialtag ("Urlaub")
End Sub

Private Sub CommandButton4_Click()
  Spezialtag ("Dienstreise")
End Sub

Private Sub CommandButton5_Click()
  Spezialtag ("Krank")
End Sub

Private Sub CommandButton6_Click()
  Spezialtag ("Feiertag")
End Sub

Private Sub CommandButton7_Click()
  Spezialtag ("Dienstfrei")
End Sub

Private Sub CommandButton8_Click()
  Spezialtag ("Arbeitsfrei")
End Sub

Private Sub CommandButton9_Click()
  Spezialtag ("Streik")
End Sub


Attribute VB_Name = "Tabelle13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CheckBox1, 21, 4, MSForms, CheckBox"
Attribute VB_Control = "CommandButton1, 5, 5, MSForms, CommandButton"

Sub Schaltfl|fffd|chen_einf|fffd|gen()

Dim daten|fffd|bernahme As CommandButton
  ' Daten|fffd|bernahme
  Set daten|fffd|bernahme = Worksheets(13).OLEObjects.Add(classtype:="Forms.commandbutton.1", _
  Left:=330, Top:=250, Width:=140, Height:=40).Object
  daten|fffd|bernahme.Caption = "|fffd|nderungen |fffd|bernehmen"
  daten|fffd|bernahme.BackColor = RGB(255, 200, 200)
  daten|fffd|bernahme.ForeColor = RGB(0, 0, 0)
  daten|fffd|bernahme.TakeFocusOnClick = False
  daten|fffd|bernahme.Font = "arial fett"
  daten|fffd|bernahme.MousePointer = fmMousePointerCustom
  Set daten|fffd|bernahme = Nothing
End Sub

Sub schaltfl|fffd|chen_zur|fffd|cksetzen()
Dim obj As Object
  
 For Each obj In Worksheets(13).OLEObjects
  Worksheets(13).OLEObjects.Delete
  Next obj
End Sub

Sub check_box_click(aktiv As Boolean)

    Call blattschutz(13, False)
    Call Sperren(13, False, "A6:H9")

    Worksheets(13).Range("A6:H9").Interior.Color = RGB(255, 255, 255)
    Worksheets(13).Range("A6:H9").Value = ""
    Worksheets(13).Range("A6:H9").Borders(xlTop).LineStyle = xlLineStyleNone
    Worksheets(13).Range("A6:H9").Borders(xlBottom).LineStyle = xlLineStyleNone
    Worksheets(13).Range("A6:H9").Borders(xlLeft).LineStyle = xlLineStyleNone
    Worksheets(13).Range("A6:H9").Borders(xlRight).LineStyle = xlLineStyleNone

  If aktiv = True Then
    
    CheckBox1.Value = True
    
    With Worksheets(13).Range("B6:G7")
      .Borders(xlTop).LineStyle = xlDashDot
      .Borders(xlTop).Weight = xlHairline
      .Borders(xlBottom).LineStyle = xlDashDot
      .Borders(xlBottom).Weight = xlHairline
      .Borders(xlLeft).LineStyle = xlDashDot
      .Borders(xlLeft).Weight = xlHairline
      .Borders(xlRight).LineStyle = xlDashDot
      .Borders(xlRight).Weight = xlHairline
    End With
    
    Worksheets(13).Range("B6").Value = "Januar"
    Worksheets(13).Range("C6").Value = "Februar"
    Worksheets(13).Range("D6").Value = "M|fffd|rz"
    Worksheets(13).Range("E6").Value = "April"
    Worksheets(13).Range("F6").Value = "Mai"
    Worksheets(13).Range("G6").Value = "Juni"
    
    Worksheets(13).Range("A7").Value = "Anzahl Stunden pro Monat: "
    Worksheets(13).Range("H7").Value = "Eintrag obligatorisch"
    
    With Worksheets(13).Range("B7:G7")
      .Borders(xlTop).LineStyle = xlDashDot
      .Borders(xlTop).Weight = xlHairline
      .Borders(xlBottom).LineStyle = xlDot
      .Borders(xlBottom).Weight = xlHairline
      .Borders(xlLeft).LineStyle = xlDashDot
      .Borders(xlLeft).Weight = xlHairline
      .Borders(xlRight).LineStyle = xlDashDot
      .Borders(xlRight).Weight = xlHairline
      .Interior.Color = RGB(200, 200, 255)
      .Value = "40:00"
    End With
    
    With Worksheets(13).Range("B8:G9")
      .Borders(xlTop).LineStyle = xlDashDot
      .Borders(xlTop).Weight = xlHairline
      .Borders(xlBottom).LineStyle = xlDashDot
      .Borders(xlBottom).Weight = xlHairline
      .Borders(xlLeft).LineStyle = xlDashDot
      .Borders(xlLeft).Weight = xlHairline
      .Borders(xlRight).LineStyle = xlDashDot
      .Borders(xlRight).Weight = xlHairline
    End With
    
    Worksheets(13).Range("B8").Value = "Juli"
    Worksheets(13).Range("C8").Value = "August"
    Worksheets(13).Range("D8").Value = "September"
    Worksheets(13).Range("E8").Value = "Oktober"
    Worksheets(13).Range("F8").Value = "November"
    Worksheets(13).Range("G8").Value = "Dezember"
    Worksheets(13).Range("G8").HorizontalAlignment = xlCenter

    Worksheets(13).Range("A9").Value = "Anzahl Stunden pro Monat: "
    Worksheets(13).Range("H9").Value = "Eintrag obligatorisch"
    
    With Worksheets(13).Range("B9:G9")
      .Borders(xlTop).LineStyle = xlDashDot
      .Borders(xlTop).Weight = xlHairline
      .Borders(xlBottom).LineStyle = xlDot
      .Borders(xlBottom).Weight = xlHairline
      .Borders(xlLeft).LineStyle = xlDashDot
      .Borders(xlLeft).Weight = xlHairline
      .Borders(xlRight).LineStyle = xlDashDot
      .Borders(xlRight).Weight = xlHairline
      .Interior.Color = RGB(200, 200, 255)
      .Value = "40:00"
    End With
    
    Worksheets(13).Range("B7").Activate
    
    CheckBox1.Top = 94
    
    Call Sperren(13, True, "A6:H6")
    Call Sperren(13, True, "A7")
    Call Sperren(13, True, "H7")
    Call Sperren(13, True, "A8:H8")
    Call Sperren(13, True, "A9")
    Call Sperren(13, True, "H9")
  
  Else
    CheckBox1.Value = False
    With Worksheets(13).Range("B7:F8")
      .Borders(xlTop).LineStyle = xlDashDot
      .Borders(xlTop).Weight = xlHairline
      .Borders(xlBottom).LineStyle = xlDashDot
      .Borders(xlBottom).Weight = xlHairline
      .Borders(xlLeft).LineStyle = xlDashDot
      .Borders(xlLeft).Weight = xlHairline
      .Borders(xlRight).LineStyle = xlDashDot
      .Borders(xlRight).Weight = xlHairline
    End With
    
    Worksheets(13).Range("B7").Value = "Montag"
    Worksheets(13).Range("C7").Value = "Dienstag"
    Worksheets(13).Range("D7").Value = "Mittwoch"
    Worksheets(13).Range("E7").Value = "Donnerstag"
    Worksheets(13).Range("F7").Value = "Freitag"
    
    With Worksheets(13).Range("B8:F8")
      .Interior.Color = RGB(200, 200, 255)
    End With
    
    Worksheets(13).Range("B8").Value = "8:15"
    Worksheets(13).Range("C8").Value = "8:15"
    Worksheets(13).Range("D8").Value = "8:15"
    Worksheets(13).Range("E8").Value = "8:15"
    Worksheets(13).Range("F8").Value = "6:30"

    Worksheets(13).Range("G8").Value = "Eintrag obligatorisch"
    Worksheets(13).Range("G8").HorizontalAlignment = xlGeneral
    Worksheets(13).Range("A8").Value = "Standardarbeitszeit in Stunden: "
    Worksheets(13).Range("B8").Activate
    
    CheckBox1.Top = 110
    
    Call Sperren(13, True, "A6:H6")
    Call Sperren(13, True, "A7:H7")
    Call Sperren(13, True, "A8")
    Call Sperren(13, True, "G8:H8")
    Call Sperren(13, True, "A9:H9")
 
  End If
  
  Call blattschutz(13, True)
  

End Sub

Sub CheckBox1_Click()
  If CheckBox1.Value = True Then
    Call check_box_click(True)
  Else
    Call check_box_click(False)
  End If
End Sub

Private Sub CommandButton1_Click()
  '|fffd|nderungen |fffd|bernehmen

  Application.ScreenUpdating = False
  
  neuer_monat = Month(Worksheets(13).Range("B11"))
  For i = neuer_monat To 12
    Call blattschutz(i, False)
    Call Sperren(i, False, "E2:H3")
    Worksheets(i).Range("E2") = Worksheets(13).Range("B2")
    Worksheets(i).Range("E3") = Worksheets(13).Range("B3")
    Call Sperren(i, True, "E2:H3")
    Call blattschutz(i, True)
  Next i
  Call Sollarbeitszeit_berechnen("alt")
  Application.ScreenUpdating = True

End Sub


Private Sub Worksheet_Change(ByVal Target As Range)

  If Target.AddressLocal = "$B$11" Then
    While Year(Worksheets(13).Range("B11")) <> Year(Worksheets(13).Range("B4"))
      Worksheets(13).Range("B11") = InputBox("Die Jahreszahl im Datum, ab dem die |fffd|nderungen gelten sollen" + Chr(13) + _
      "stimmt nicht mit dem Erfassungsjahr in Zelle 'B4' |fffd|berein!" + Chr(13) + _
      "Bitte geben Sie ein g|fffd|ltiges Datum ein!", "Falsches Eingabedatum")
    Wend
  End If

End Sub
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton13, 128, 10, MSForms, CommandButton"
Attribute VB_Control = "CommandButton12, 127, 11, MSForms, CommandButton"
Attribute VB_Control = "CommandButton11, 126, 12, MSForms, CommandButton"
Attribute VB_Control = "CommandButton10, 125, 13, MSForms, CommandButton"
Attribute VB_Control = "CommandButton9, 124, 14, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 123, 15, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 122, 16, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 121, 17, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 120, 18, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 119, 19, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 118, 20, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 117, 21, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 116, 22, MSForms, CommandButton"
Private Sub CommandButton1_Click()
  Standardtag
End Sub

Private Sub CommandButton10_Click()
  Call drucken
End Sub

Private Sub CommandButton11_Click()
  Call speichern
End Sub

Private Sub CommandButton12_Click()
  Call pers_einstell
End Sub

Private Sub CommandButton13_Click()
  Call altdatenuebernahme
End Sub

Private Sub CommandButton2_Click()
  Spezialtag ("Flexibilisierung")
End Sub

Private Sub CommandButton3_Click()
  Spezialtag ("Urlaub")
End Sub

Private Sub CommandButton4_Click()
  Spezialtag ("Dienstreise")
End Sub

Private Sub CommandButton5_Click()
  Spezialtag ("Krank")
End Sub

Private Sub CommandButton6_Click()
  Spezialtag ("Feiertag")
End Sub

Private Sub CommandButton7_Click()
  Spezialtag ("Dienstfrei")
End Sub

Private Sub CommandButton8_Click()
  Spezialtag ("Arbeitsfrei")
End Sub

Private Sub CommandButton9_Click()
  Spezialtag ("Streik")
End Sub




Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton13, 313, 10, MSForms, CommandButton"
Attribute VB_Control = "CommandButton12, 312, 11, MSForms, CommandButton"
Attribute VB_Control = "CommandButton11, 311, 12, MSForms, CommandButton"
Attribute VB_Control = "CommandButton10, 310, 13, MSForms, CommandButton"
Attribute VB_Control = "CommandButton9, 309, 14, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 308, 15, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 307, 16, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 306, 17, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 305, 18, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 304, 19, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 303, 20, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 302, 21, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 301, 22, MSForms, CommandButton"
Private Sub CommandButton1_Click()
  Standardtag
End Sub

Private Sub CommandButton10_Click()
  Call drucken
End Sub

Private Sub CommandButton11_Click()
  Call speichern
End Sub

Private Sub CommandButton12_Click()
  Call pers_einstell
End Sub

Private Sub CommandButton13_Click()
  Call altdatenuebernahme
End Sub

Private Sub CommandButton2_Click()
  Spezialtag ("Flexibilisierung")
End Sub

Private Sub CommandButton3_Click()
  Spezialtag ("Urlaub")
End Sub

Private Sub CommandButton4_Click()
  Spezialtag ("Dienstreise")
End Sub

Private Sub CommandButton5_Click()
  Spezialtag ("Krank")
End Sub

Private Sub CommandButton6_Click()
  Spezialtag ("Feiertag")
End Sub

Private Sub CommandButton7_Click()
  Spezialtag ("Dienstfrei")
End Sub

Private Sub CommandButton8_Click()
  Spezialtag ("Arbeitsfrei")
End Sub

Private Sub CommandButton9_Click()
  Spezialtag ("Streik")
End Sub




Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton13, 137, 10, MSForms, CommandButton"
Attribute VB_Control = "CommandButton12, 136, 11, MSForms, CommandButton"
Attribute VB_Control = "CommandButton11, 135, 12, MSForms, CommandButton"
Attribute VB_Control = "CommandButton10, 134, 13, MSForms, CommandButton"
Attribute VB_Control = "CommandButton9, 133, 14, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 132, 15, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 131, 16, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 130, 17, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 129, 18, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 128, 19, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 127, 20, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 126, 21, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 125, 22, MSForms, CommandButton"
Private Sub CommandButton1_Click()
  Standardtag
End Sub

Private Sub CommandButton10_Click()
  Call drucken
End Sub

Private Sub CommandButton11_Click()
  Call speichern
End Sub

Private Sub CommandButton12_Click()
  Call pers_einstell
End Sub

Private Sub CommandButton13_Click()
  Call altdatenuebernahme
End Sub

Private Sub CommandButton2_Click()
  Spezialtag ("Flexibilisierung")
End Sub

Private Sub CommandButton3_Click()
  Spezialtag ("Urlaub")
End Sub

Private Sub CommandButton4_Click()
  Spezialtag ("Dienstreise")
End Sub

Private Sub CommandButton5_Click()
  Spezialtag ("Krank")
End Sub

Private Sub CommandButton6_Click()
  Spezialtag ("Feiertag")
End Sub

Private Sub CommandButton7_Click()
  Spezialtag ("Dienstfrei")
End Sub

Private Sub CommandButton8_Click()
  Spezialtag ("Arbeitsfrei")
End Sub

Private Sub CommandButton9_Click()
  Spezialtag ("Streik")
End Sub




Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton13, 153, 10, MSForms, CommandButton"
Attribute VB_Control = "CommandButton12, 152, 11, MSForms, CommandButton"
Attribute VB_Control = "CommandButton11, 151, 12, MSForms, CommandButton"
Attribute VB_Control = "CommandButton10, 150, 13, MSForms, CommandButton"
Attribute VB_Control = "CommandButton9, 149, 14, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 148, 15, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 147, 16, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 146, 17, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 145, 18, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 144, 19, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 143, 20, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 142, 21, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 141, 22, MSForms, CommandButton"
Private Sub CommandButton1_Click()
  Standardtag
End Sub

Private Sub CommandButton10_Click()
  Call drucken
End Sub

Private Sub CommandButton11_Click()
  Call speichern
End Sub

Private Sub CommandButton12_Click()
  Call pers_einstell
End Sub

Private Sub CommandButton13_Click()
  Call altdatenuebernahme
End Sub

Private Sub CommandButton2_Click()
  Spezialtag ("Flexibilisierung")
End Sub

Private Sub CommandButton3_Click()
  Spezialtag ("Urlaub")
End Sub

Private Sub CommandButton4_Click()
  Spezialtag ("Dienstreise")
End Sub

Private Sub CommandButton5_Click()
  Spezialtag ("Krank")
End Sub

Private Sub CommandButton6_Click()
  Spezialtag ("Feiertag")
End Sub

Private Sub CommandButton7_Click()
  Spezialtag ("Dienstfrei")
End Sub

Private Sub CommandButton8_Click()
  Spezialtag ("Arbeitsfrei")
End Sub

Private Sub CommandButton9_Click()
  Spezialtag ("Streik")
End Sub

Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton13, 152, 10, MSForms, CommandButton"
Attribute VB_Control = "CommandButton12, 151, 11, MSForms, CommandButton"
Attribute VB_Control = "CommandButton11, 150, 12, MSForms, CommandButton"
Attribute VB_Control = "CommandButton10, 149, 13, MSForms, CommandButton"
Attribute VB_Control = "CommandButton9, 148, 14, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 147, 15, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 146, 16, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 145, 17, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 144, 18, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 143, 19, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 142, 20, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 141, 21, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 140, 22, MSForms, CommandButton"

Private Sub CommandButton1_Click()
  Standardtag
End Sub

Private Sub CommandButton10_Click()
  Call drucken
End Sub

Private Sub CommandButton11_Click()
  Call speichern
End Sub

Private Sub CommandButton12_Click()
  Call pers_einstell
End Sub

Private Sub CommandButton13_Click()
  Call altdatenuebernahme
End Sub

Private Sub CommandButton2_Click()
  Spezialtag ("Flexibilisierung")
End Sub

Private Sub CommandButton3_Click()
  Spezialtag ("Urlaub")
End Sub

Private Sub CommandButton4_Click()
  Spezialtag ("Dienstreise")
End Sub

Private Sub CommandButton5_Click()
  Spezialtag ("Krank")
End Sub

Private Sub CommandButton6_Click()
  Spezialtag ("Feiertag")
End Sub

Private Sub CommandButton7_Click()
  Spezialtag ("Dienstfrei")
End Sub

Private Sub CommandButton8_Click()
  Spezialtag ("Arbeitsfrei")
End Sub

Private Sub CommandButton9_Click()
  Spezialtag ("Streik")
End Sub

Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton13, 157, 10, MSForms, CommandButton"
Attribute VB_Control = "CommandButton12, 156, 11, MSForms, CommandButton"
Attribute VB_Control = "CommandButton11, 155, 12, MSForms, CommandButton"
Attribute VB_Control = "CommandButton10, 154, 13, MSForms, CommandButton"
Attribute VB_Control = "CommandButton9, 153, 14, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 152, 15, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 151, 16, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 150, 17, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 149, 18, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 148, 19, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 147, 20, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 146, 21, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 145, 22, MSForms, CommandButton"
Private Sub CommandButton1_Click()
  Standardtag
End Sub

Private Sub CommandButton10_Click()
  Call drucken
End Sub

Private Sub CommandButton11_Click()
  Call speichern
End Sub

Private Sub CommandButton12_Click()
  Call pers_einstell
End Sub

Private Sub CommandButton13_Click()
  Call altdatenuebernahme
End Sub

Private Sub CommandButton2_Click()
  Spezialtag ("Flexibilisierung")
End Sub

Private Sub CommandButton3_Click()
  Spezialtag ("Urlaub")
End Sub

Private Sub CommandButton4_Click()
  Spezialtag ("Dienstreise")
End Sub

Private Sub CommandButton5_Click()
  Spezialtag ("Krank")
End Sub

Private Sub CommandButton6_Click()
  Spezialtag ("Feiertag")
End Sub

Private Sub CommandButton7_Click()
  Spezialtag ("Dienstfrei")
End Sub

Private Sub CommandButton8_Click()
  Spezialtag ("Arbeitsfrei")
End Sub

Private Sub CommandButton9_Click()
  Spezialtag ("Streik")
End Sub




Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton13, 162, 10, MSForms, CommandButton"
Attribute VB_Control = "CommandButton12, 161, 11, MSForms, CommandButton"
Attribute VB_Control = "CommandButton11, 160, 12, MSForms, CommandButton"
Attribute VB_Control = "CommandButton10, 159, 13, MSForms, CommandButton"
Attribute VB_Control = "CommandButton9, 158, 14, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 157, 15, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 156, 16, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 155, 17, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 154, 18, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 153, 19, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 152, 20, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 151, 21, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 150, 22, MSForms, CommandButton"
Private Sub CommandButton1_Click()
  Standardtag
End Sub

Private Sub CommandButton10_Click()
  Call drucken
End Sub

Private Sub CommandButton11_Click()
  Call speichern
End Sub

Private Sub CommandButton12_Click()
  Call pers_einstell
End Sub

Private Sub CommandButton13_Click()
  Call altdatenuebernahme
End Sub

Private Sub CommandButton2_Click()
  Spezialtag ("Flexibilisierung")
End Sub

Private Sub CommandButton3_Click()
  Spezialtag ("Urlaub")
End Sub

Private Sub CommandButton4_Click()
  Spezialtag ("Dienstreise")
End Sub

Private Sub CommandButton5_Click()
  Spezialtag ("Krank")
End Sub

Private Sub CommandButton6_Click()
  Spezialtag ("Feiertag")
End Sub

Private Sub CommandButton7_Click()
  Spezialtag ("Dienstfrei")
End Sub

Private Sub CommandButton8_Click()
  Spezialtag ("Arbeitsfrei")
End Sub

Private Sub CommandButton9_Click()
  Spezialtag ("Streik")
End Sub




Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton13, 154, 10, MSForms, CommandButton"
Attribute VB_Control = "CommandButton12, 153, 11, MSForms, CommandButton"
Attribute VB_Control = "CommandButton11, 152, 12, MSForms, CommandButton"
Attribute VB_Control = "CommandButton10, 151, 13, MSForms, CommandButton"
Attribute VB_Control = "CommandButton9, 150, 14, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 149, 15, MSForms, CommandButton"
Attribute VB_Control = "CommandButton7, 148, 16, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 147, 17, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 146, 18, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 145, 19, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 144, 20, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 143, 21, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 142, 22, MSForms, CommandButton"
Private Sub CommandButton1_Click()
  Standardtag
End Sub

Private Sub CommandButton10_Click()
  Call drucken
End Sub

Private Sub CommandButton11_Click()
  Call speichern
End Sub

Private Sub CommandButton12_Click()
  Call pers_einstell
End Sub

Private Sub CommandButton13_Click()
  Call altdatenuebernahme
End Sub

Private Sub CommandButton2_Click()
  Spezialtag ("Flexibilisierung")
End Sub

Private Sub CommandButton3_Click()
  Spezialtag ("Urlaub")
End Sub

Private Sub CommandButton4_Click()
  Spezialtag ("Dienstreise")
End Sub

Private Sub CommandButton5_Click()
  Spezialtag ("Krank")
End Sub

Private Sub CommandButton6_Click()
  Spezialtag ("Feiertag")
End Sub

Private Sub CommandButton7_Click()
  Spezialtag ("Dienstfrei")
End Sub

Private Sub CommandButton8_Click()
  Spezialtag ("Arbeitsfrei")
End Sub

Private Sub CommandButton9_Click()
  Spezialtag ("Streik")
End Sub




Attribute VB_Name = "fuer_alle_Blaetter"
' Information: die Versionsnummer setzt sich immer aus dem aktuellen Jahr und
' dem Monat, in dem die |fffd|nderungen vorgenommen wurden, zusammen.
' Sind in einem Monat mehrere |fffd|nderungen zu unterschiedlichen Zeitpunkten f|fffd|llig,
' so wird dies mit einem weiteren angeh|fffd|ngten .1, .2, etc. vermerkt, Beispiel: V2007.02.1

' Fehlerbehebungen in der Version V2007.06:
' im Juniblatt war in der Kommentarspalte eine G|fffd|ltigkeitspr|fffd|fung auf Uhrzeit hinterlegt,
' was unsinnig ist -> wurde entfernt (zu finden unter Daten -> G|fffd|ltigkeit)

' wenn jemand an Feiertagen oder arbeitsfreien Tagen arbeiten muss und dort tats|fffd|chlich gearbeitete Zeiten
' eintr|fffd|gt, so werden diese Zeiten nicht als |fffd|berstunden zur Sollarbeitszeit f|fffd|r diesen Tag addiert,
' sondern nur die gearbeiteten Stunden gerechnet -> falsch -> wurde korrigiert

' Fehlerbehebungen in der Version V2007.04:
' |fffd|berstundenanzeige in Feld J53 fehlerhaft, wenn Tage erfasst werden, an denen in den Spalten C, D, E, F
' keine Werte drinstehen, sondern nur beispielsweise in H (Flexibilisierung oder Feiertag)
' -> korrigiert

' Fehlerbehebungen in der Version V2009.06:
' Streiktage und Tage unbezahlter Urlaub werden korrekt abgehandelt: Sollarbeitszeit bei Streik oder
' unbezahltem Urlaub verringern und bei r|fffd|ckg|fffd|ngig machen wieder erh|fffd|hen
' Die |fffd|nderung des Datums in Zelle B11 auf Blatt 13 ordentlich ber|fffd|cksichtigen, z.B. die Sollarbeitszeit
' nur NACH diesem Termin neu berechnen, den Rest unber|fffd|hrt lassen. Historie ist nicht m|fffd|glich
' Druckdatum in Zelle A49 bei Altdaten|fffd|bernahme und Jahres|fffd|bernahme korrekt |fffd|bernehmen bzw. l|fffd|schen
' Sollzeitberechnung optimiert: bei allen leeren Zeilen vor dem ersten Eintrag eines Monats bzw. vor der
' aktuellen Zeile werden diese auf 0 gesetzt.

' endlich das Problem mit dem Zertifikat gel|fffd|st: es wurde ein neues mit dem Programm makecert erzeugt:
' es gibt nun einen |fffd|ffentlichen Schl|fffd|ssel, der auch automatisch durch Kopieren der Datei verteilt wird
' und einen privaten, welcher notwendig ist, wenn z.B. die neueste Originalentwicklungsdatei auf
' einem anderen Rechner weiterentwickelt werden soll und die Makros abge|fffd|ndert werden m|fffd|ssen.

' die manuelle Installation des Zertifikates ist nicht mehr notwendig, nur die Best|fffd|tigung beim ersten
' Aufruf. Da dieses jedoch im Benutzerkontext importiert wird, ist diese bei Anmeldung durch einen anderen
' Benutzer erneut notwendig.

' Fingerabdruck des neuen Zertifikats lautet: 4d d9 07 e7 da 49 d6 a0 c2 05 ba 74 d3 98 03 2a 97 5c 09 6f

' zum Verwalten der Zertifikate kann das Programm certmgr.msc benutzt werden

' Korrektur in Version 2010.10:
' 30. November korrigiert, Formel f|fffd|r die Berechnung hatte gefehlt

' Ein Zertifikat ist unter W7 O2010 nicht mehr notwendig, da das Verzeichnis N:\excel\Arbeitszeiterfassung
' f|fffd|r jeden Nutzer |fffd|ber eine grouppolicy als vertrauensw|fffd|rdiger Ort deklariert ist.

' Korrektur in Version 2013.01:
' September stimmt nicht, manuell korrigiert

' Korrektur in Version 2013.02:
' Die Sollarbeitszeitneuberechung f|fffd|r Streiktage funktioniert nicht, es werden zu viele Sollstunden
' ausgerechnet, Korrekturidee: nach der Neuberechnung das Bemerkungsfeld nochmal |fffd|berpr|fffd|fen und
' ggf den Solleintrag in Spalte J wieder streichen.

' Anpassung in Version 2013.02:
' Umstellung auch auf die Version Office 2010 (.xlsm)

' Version 2014.01
' Jahres|fffd|bernahme funktioniert nicht richtig, in Spalte A wird in der Formel "E1" durch "Tag(E1)" ersetzt
' was zu einem falschen Ergebnis f|fffd|hrt, sehr merkw|fffd|rdig.
' Version 2014 wurde daher von Hand korrigiert und die |fffd|bernahme aus 2013 durch einen neuen
' |fffd|bernahmeknopf realisiert, also nicht |fffd|bertrag in das neue Jahr, sondern |fffd|bernahme aus dem alten Jahr

Sub Auto_open()

' Dieses Makro wird immer beim |fffd|ffnen dieser
' Arbeitsmappe ausgef|fffd|hrt'
' Andreas Ehlert, 19.12.2005

Konfig_konsistent

End Sub

Sub neue_version_freigeben()

For i = 1 To 12
  Call blattschutz(i, False)
  Call Sperren(i, False, "J1")
  
  With Worksheets(i).Range("J1")
    .Font.Color = RGB(0, 0, 255)
    .Value = "V2013.02"
  End With
  Call Sperren(i, True, "J1")
  Call blattschutz(i, True)

Next i

End Sub

Function Schaltjahr(ByVal Jahr As Integer) As String

' |fffd|berpr|fffd|ft, ob das |fffd|bergebene Jahr ein Schaltjahr ist

Dim Ergebnis%  'Integer

Ergebnis = Jahr Mod 400
If Ergebnis = 0 Then
  Schaltjahr = "Ja"
Else
  Ergebnis = Jahr Mod 100
  If Ergebnis = 0 Then
    Schaltjahr = "Nein"
  Else
    Ergebnis = Jahr Mod 4
   If Ergebnis = 0 Then
      Schaltjahr = "Ja"
    Else
      Schaltjahr = "Nein"
    End If
  End If
End If

End Function
Function Ostersonntag_berechnen(ByVal Jahr As Integer) As Date

' wird abgeschaltet, da es Probleme bei Personen, die
' mitten im Jahr anfangen, bereitet

Dim a&, b&, c&, d$, e$
Dim tag, monat As Integer

' f|fffd|r die Jahre 1900-2099 gilt:
Const M = 24
Const N = 5

a = Jahr Mod 19
b = Jahr Mod 4
c = Jahr Mod 7
d = (M + 19 * a) Mod 30
e = (2 * b + 4 * c + 6 * d + N) Mod 7

tag = (22 + CInt(d) + CInt(e))
If tag > 31 Then
  monat = 4
  tag = (CInt(d) + CInt(e) - 9)
  Select Case tag
  Case 26
    tag = 19
  Case 25
    If (d = 28 And a > 10) Then
      tag = 18
    End If
  End Select
Else
  monat = 3
End If

Ostersonntag_berechnen = tag & "." & monat & "." & Jahr

End Function

Sub Feiertage_berechnen(ByVal Jahr As Integer)

' ist abgeschaltet, da es Probleme bei Personen, die
' mitten im Jahr anfangen, bereitet

Dim Ostersonntag, Ostermontag, Karfreitag, Weihnachten1, Weihnachten2, _
    Allerheiligen, Christi_Himmelfahrt, Neujahr, Heilige_Drei_K|fffd|nige, _
    Erster_Mai, Deutsche_Einheit As Date
  
  Neujahr = "01.01." & Jahr
  Heilige_Drei_K|fffd|nige = "06.01." & Jahr
  Ostersonntag = Ostersonntag_berechnen(Jahr)
  Ostermontag = Ostersonntag + 1
  Karfreitag = Ostersonntag - 2
  Erster_Mai = "01.05." & Jahr
  Christi_Himmelfahrt = Ostersonntag + 39
  Pfingstmontag = Ostersonntag + 50
  Fronleichnam = Ostersonntag + 60
  Deutsche_Einheit = "03.10." & Jahr
  Allerheiligen = "01.11." & Jahr
  Weihnachten1 = "25.12." & Jahr
  Weihnachten2 = "26.12." & Jahr
  
  For i = 1 To 12
    For a = 6 To 47
      If Month(Neujahr) = i Then
        zelle_a = "A" & a
        If Worksheets(i).Range(zelle_a) <> "" Then
          If Day(Worksheets(i).Range(zelle_a)) = Day(Neujahr) Then
            zelle_h = "H" & a
            Worksheets(i).Range(zelle_h) = "Feiertag"
          End If
        End If
      End If
      If Month(Heilige_Drei_K|fffd|nige) = i Then
        zelle_a = "A" & a
        If Worksheets(i).Range(zelle_a) <> "" Then
          If Day(Worksheets(i).Range(zelle_a)) = Day(Heilige_Drei_K|fffd|nige) Then
            zelle_h = "H" & a
            Worksheets(i).Range(zelle_h) = "Feiertag"
          End If
        End If
      End If
      If Month(Ostersonntag) = i Then
        zelle_a = "A" & a
        If Worksheets(i).Range(zelle_a) <> "" Then
          If Day(Worksheets(i).Range(zelle_a)) = Day(Ostersonntag) Then
            zelle_h = "H" & a
            Worksheets(i).Range(zelle_h) = "Feiertag"
          End If
        End If
      End If
      If Month(Ostermontag) = i Then
        zelle_a = "A" & a
        If Worksheets(i).Range(zelle_a) <> "" Then
          If Day(Worksheets(i).Range(zelle_a)) = Day(Ostermontag) Then
            zelle_h = "H" & a
            Worksheets(i).Range(zelle_h) = "Feiertag"
          End If
        End If
      End If
      If Month(Karfreitag) = i Then
        zelle_a = "A" & a
        If Worksheets(i).Range(zelle_a) <> "" Then
          If Day(Worksheets(i).Range(zelle_a)) = Day(Karfreitag) Then
            zelle_h = "H" & a
            Worksheets(i).Range(zelle_h) = "Feiertag"
          End If
        End If
      End If
      If Month(Erster_Mai) = i Then
        zelle_a = "A" & a
        If Worksheets(i).Range(zelle_a) <> "" Then
          If Day(Worksheets(i).Range(zelle_a)) = Day(Erster_Mai) Then
            zelle_h = "H" & a
            Worksheets(i).Range(zelle_h) = "Feiertag"
          End If
        End If
      End If
      If Month(Christi_Himmelfahrt) = i Then
        zelle_a = "A" & a
        If Worksheets(i).Range(zelle_a) <> "" Then
          If Day(Worksheets(i).Range(zelle_a)) = Day(Christi_Himmelfahrt) Then
            zelle_h = "H" & a
            Worksheets(i).Range(zelle_h) = "Feiertag"
          End If
        End If
      End If
      If Month(Pfingstmontag) = i Then
        zelle_a = "A" & a
        If Worksheets(i).Range(zelle_a) <> "" Then
          If Day(Worksheets(i).Range(zelle_a)) = Day(Pfingstmontag) Then
            zelle_h = "H" & a
            Worksheets(i).Range(zelle_h) = "Feiertag"
          End If
        End If
      End If
      If Month(Fronleichnam) = i Then
        zelle_a = "A" & a
        If Worksheets(i).Range(zelle_a) <> "" Then
          If Day(Worksheets(i).Range(zelle_a)) = Day(Fronleichnam) Then
            zelle_h = "H" & a
            Worksheets(i).Range(zelle_h) = "Feiertag"
          End If
        End If
      End If
      If Month(Deutsche_Einheit) = i Then
        zelle_a = "A" & a
        If Worksheets(i).Range(zelle_a) <> "" Then
          If Day(Worksheets(i).Range(zelle_a)) = Day(Deutsche_Einheit) Then
            zelle_h = "H" & a
            Worksheets(i).Range(zelle_h) = "Feiertag"
          End If
        End If
      End If
      If Month(Allerheiligen) = i Then
        zelle_a = "A" & a
        If Worksheets(i).Range(zelle_a) <> "" Then
          If Day(Worksheets(i).Range(zelle_a)) = Day(Allerheiligen) Then
            zelle_h = "H" & a
            Worksheets(i).Range(zelle_h) = "Feiertag"
          End If
        End If
      End If
      If Month(Weihnachten1) = i Then
        zelle_a = "A" & a
        If Worksheets(i).Range(zelle_a) <> "" Then
          If Day(Worksheets(i).Range(zelle_a)) = Day(Weihnachten1) Then
            zelle_h = "H" & a
            Worksheets(i).Range(zelle_h) = "Feiertag"
          End If
        End If
      End If
      If Month(Weihnachten2) = i Then
        zelle_a = "A" & a
        If Worksheets(i).Range(zelle_a) <> "" Then
          If Day(Worksheets(i).Range(zelle_a)) = Day(Weihnachten2) Then
            zelle_h = "H" & a
            Worksheets(i).Range(zelle_h) = "Feiertag"
          End If
        End If
      End If
    Next a
  Next i
 
End Sub


Sub Konfig_konsistent()

' hier finden Konsistenzpr|fffd|fungen der Pflichtfelder in den pers|fffd|nlichen
' Einstellungen statt, gegebenenfalls findet eine Nacherfassung
' oder Korrektur statt
' AE, 16.12.2005
  
Dim Antwort As Integer
Dim erfassungsdatum As Date

complete = False
While Not (complete) 'gef|fffd|hrlich, kann ohne Eingabem|fffd|glichkeit zur Endlosschleife werden
  complete = True
  If IsEmpty(Worksheets(13).Range("B2")) Then
    complete = False
    Worksheets(13).Activate
    Range("B2").Activate
    Worksheets(13).Range("B2") = _
    InputBox("Bitte geben Sie hier Ihren Namen ein!", "kein Name eingetragen!")
  End If
  
  If IsEmpty(Worksheets(13).Range("B3")) Then
    complete = False
    Worksheets(13).Activate
    Range("B3").Activate
    Worksheets(13).Range("B3") = _
    InputBox("Bitte geben Sie hier Ihr Dezernat/Abteilung ein!", "kein Dezernat erfa|fffd|t!")
  End If
    
  If IsEmpty(Worksheets(13).Range("B11")) Then
    complete = False
    Worksheets(13).Activate
    Range("B11").Activate
    Worksheets(13).Range("B11") = InputBox("Bitte geben Sie hier das Datum ein," + Chr(13) + _
      "ab welchem Ihre |fffd|nderungen in den Pflichtfeldern wirksam sein sollen!" _
      , "kein |fffd|nderungsdatum erfasst")
  End If
Wend

End Sub

Sub standard(Optional tag_art)

' |fffd|bernimmt aus der Konfigurationsdatei die Daten
' f|fffd|r einen Standardarbeitstag, falls vorhanden
  
  Dim akt_zeile%  'Integer
   
  akt_blatt = Month(ActiveSheet.Range("E1"))
  akt_zeile = ActiveCell.Row
  zelle = "A" & akt_zeile
  
  Select Case tag_art
  Case "Montag"
    zelle = "C" & akt_zeile
    Range(zelle) = Worksheets(13).Range("b15")
    zelle = "D" & akt_zeile
    Range(zelle) = Worksheets(13).Range("c15")
    zelle = "E" & akt_zeile
    Range(zelle) = Worksheets(13).Range("d15")
    zelle = "F" & akt_zeile
    Range(zelle) = Worksheets(13).Range("e15")
    zelle = "H" & akt_zeile
    Range(zelle) = ""
  Case "Dienstag"
    zelle = "C" & akt_zeile
    Range(zelle) = Worksheets(13).Range("b16")
    zelle = "D" & akt_zeile
    Range(zelle) = Worksheets(13).Range("c16")
    zelle = "E" & akt_zeile
    Range(zelle) = Worksheets(13).Range("d16")
    zelle = "F" & akt_zeile
    Range(zelle) = Worksheets(13).Range("e16")
    zelle = "H" & akt_zeile
    Range(zelle) = ""
  Case "Mittwoch"
    zelle = "C" & akt_zeile
    Range(zelle) = Worksheets(13).Range("b17")
    zelle = "D" & akt_zeile
    Range(zelle) = Worksheets(13).Range("c17")
    zelle = "E" & akt_zeile
    Range(zelle) = Worksheets(13).Range("d17")
    zelle = "F" & akt_zeile
    Range(zelle) = Worksheets(13).Range("e17")
    zelle = "H" & akt_zeile
    Range(zelle) = ""
  Case "Donnerstag"
    zelle = "C" & akt_zeile
    Range(zelle) = Worksheets(13).Range("b18")
    zelle = "D" & akt_zeile
    Range(zelle) = Worksheets(13).Range("c18")
    zelle = "E" & akt_zeile
    Range(zelle) = Worksheets(13).Range("d18")
    zelle = "F" & akt_zeile
    Range(zelle) = Worksheets(13).Range("e18")
    zelle = "H" & akt_zeile
    Range(zelle) = ""
 Case "Freitag"
    zelle = "C" & akt_zeile
    Range(zelle) = Worksheets(13).Range("b19")
    zelle = "D" & akt_zeile
    Range(zelle) = Worksheets(13).Range("c19")
    zelle = "E" & akt_zeile
    Range(zelle) = Worksheets(13).Range("d19")
    zelle = "F" & akt_zeile
    Range(zelle) = Worksheets(13).Range("e19")
    zelle = "H" & akt_zeile
    Range(zelle) = ""
  End Select
 
  ' n|fffd|chste zu erfassende Zeile anspringen
  zelle = "K" & akt_zeile
  Select Case Range(zelle)
    Case "6"
      zelle = "C" & (akt_zeile + 4)
    Case "7"
      zelle = "C" & (akt_zeile + 3)
    Case Else
      zelle = "C" & (akt_zeile + 1)
  End Select
  Range(zelle).Activate
End Sub

Sub Standardtag()
  Dim akt_zeile%  'Integer
' welcher Wochentag?
  akt_zeile = ActiveCell.Row
  zelle = "K" & akt_zeile
  Select Case Range(zelle)
  Case "2"
    standard "Montag"
  Case "3"
    standard "Dienstag"
  Case "4"
    standard "Mittwoch"
  Case "5"
    standard "Donnerstag"
  Case "6"
    standard "Freitag"
  End Select
End Sub

Sub Spezialtag(Optional tag)

' Spezialtage sind:
' Flexibilisierung
' Urlaub
' Feiertag
' Krank
' Dienstreise
' Dienstfrei (z.B. Silvester und Heiligabend)
' Arbeitsfreier Tag (nur Beamte)
' Streik oder unbezahlter Urlaub

  Dim akt_zeile%   'Integer
 ' welcher Wochentag?
  akt_zeile = ActiveCell.Row
  akt_blatt = Month(ActiveSheet.Range("E1"))
  zelle = "K" & akt_zeile
  
  Select Case Range(zelle)
    Case 1, 7
      Antwort = MsgBox("F|fffd|r Samstag und Sonntag nicht notwendig !", vbOKOnly + vbInformation)
    Case 2, 3, 4, 5, 6
      zelle = "C" & akt_zeile
      Range(zelle) = ""
      zelle = "D" & akt_zeile
      Range(zelle) = ""
      zelle = "E" & akt_zeile
      Range(zelle) = ""
      zelle = "F" & akt_zeile
      Range(zelle) = ""
  End Select
  
  zelle = "K" & akt_zeile
  zelle_j = "J" & akt_zeile
  
 ' wieder Standardarbeitszeit in Spalte J eintragen, falls Streik oder
 ' unbezahlter Urlaub r|fffd|ckg|fffd|ngig gemacht wird.
 ' nur wenn die Arbeitszeit pro Tag und nicht pro Monat
 ' erfasst wird, Blatt 13 CheckBox1.Value = False
  
  If Worksheets(13).CheckBox1.Value = False Then
  
  Call blattschutz(akt_blatt, False)
  Call Sperren(akt_blatt, False, "J6:J47")
 
  Select Case Range(zelle)
    Case 2:
      Range(zelle_j) = Worksheets(13).Range("B8")
    Case 3:
      Range(zelle_j) = Worksheets(13).Range("C8")
    Case 4:
      Range(zelle_j) = Worksheets(13).Range("D8")
    Case 5:
      Range(zelle_j) = Worksheets(13).Range("E8")
    Case 6:
      Range(zelle_j) = Worksheets(13).Range("F8")
    End Select
  
  Call Sperren(akt_blatt, True, "J6:J47")
  Call blattschutz(akt_blatt, True)
  
  End If
  
  zelle = "K" & akt_zeile

  Select Case Range(zelle)
    Case 2, 3, 4, 5, 6
    
    zelle = "H" & akt_zeile
      Select Case tag
      Case "Flexibilisierung"
        Range(zelle) = "Flexibilisierung"
      Case "Urlaub"
        Range(zelle) = "Urlaub"
      Case "Krank"
        Range(zelle) = "Krank"
      Case "Feiertag"
        Range(zelle) = "Feiertag"
      Case "Dienstreise"
        Range(zelle) = "Dienstreise"
      Case "Dienstfrei"
        Range(zelle) = "Dienstfrei"
      Case "Arbeitsfrei"
        Range(zelle) = "Arbeitsfreier Tag"
      Case "Streik"
        Range(zelle) = "Unbezahlter Urlaub oder Streik"
        Call blattschutz(akt_blatt, False)
        Call Sperren(akt_blatt, False, "J6:J47")
        zelle = "J" & akt_zeile
        Range(zelle) = ""
        Call Sperren(akt_blatt, True, "J6:J47")
        Call blattschutz(akt_blatt, True)
   End Select
  End Select
  
  ' n|fffd|chste zu erfassende Zeile anspringen
  zelle = "K" & akt_zeile
  Select Case Range(zelle)
    Case 6
      zelle = "C" & (akt_zeile + 4)
    Case 7
      zelle = "C" & (akt_zeile + 3)
    Case Else
      zelle = "C" & (akt_zeile + 1)
  End Select
  Range(zelle).Activate
End Sub

Sub speichern()

' speichert und schlie|fffd|t das Arbeitszeitblatt
' Excel bleibt ge|fffd|ffnet

ActiveWorkbook.Save
ActiveWorkbook.Close
'Application.Quit schlie|fffd|t Excel gleich mit

End Sub

Public Sub Sperren(ByVal blattnummer As Integer, ByVal ein As Boolean, ByVal bereich As String)

' l|fffd||fffd|t die Eingabe/|fffd|nderung von Zellen zu oder nicht

  If ein Then
'    Worksheets(blattnummer).Range(bereich).Locked = True
'    Worksheets(blattnummer).Range(bereich).FormulaHidden = True
    With Worksheets(blattnummer).Range(bereich)
     .Locked = True
     .FormulaHidden = True
    End With
  Else
    With Worksheets(blattnummer).Range(bereich)
    .Locked = False
    .FormulaHidden = False
    End With
'    Worksheets(blattnummer).Range(bereich).Locked = False
'    Worksheets(blattnummer).Range(bereich).FormulaHidden = False
  End If
End Sub

Sub schutz_ein_aus()

' nur zum Testen

For i = 1 To 13
  Call blattschutz(i, True)
Next i
End Sub

Public Sub blattschutz(ByVal blattnummer As Integer, ByVal ein As Boolean)

' aktiviert oder deaktiviert den Blattschutz
' |fffd|nderung 21.01.2014 AE, AllowFormattingColumns erg|fffd|nzt, damit die
' Spalte G auch in blattgesch|fffd|tztem Zustand ein- und ausgeblendet werden kann

If ein Then
  
  Worksheets(blattnummer).Protect _
  DrawingObjects:=True, _
  Scenarios:=True, _
  AllowFormattingColumns:=True, _
  Password:=""
  
  ' alt: Worksheets(blattnummer).Protect DrawingObjects:=True, _
  ' Scenarios:=True, Password:=""
  ' contents:=True, _
  ' Scenarios:=True, Password:=""
Else
  Worksheets(blattnummer).Unprotect ("")
End If
End Sub

Sub farbwertetest()
  Farbwerte (1)
End Sub

Sub Farbwerte(ByVal blattnummer As Integer)

' Hintergrundfarben definieren f|fffd|r die Eingabefelder
' und einf|fffd|rben sowie die Gesperrt-Eigenschaft f|fffd|r die Eingabefelder im Bereich
' der Zellen "C6:H47" definieren

ActiveWorkbook.Colors(1) = RGB(200, 255, 200)
ActiveWorkbook.Colors(2) = RGB(230, 255, 230)
ActiveWorkbook.Colors(3) = RGB(255, 255, 255)

For i = 6 To 47
  zelle_k = "K" & i
  bereich = "C" & i & ":H" & i
  If (Worksheets(blattnummer).Range(zelle_k).Value > 1) And _
     (Worksheets(blattnummer).Range(zelle_k).Value < 7) Then
    Worksheets(blattnummer).Range(bereich).Interior.ColorIndex = 2
    Call Sperren(blattnummer, False, "C" & i & ":H" & i)
  ElseIf Worksheets(blattnummer).Range(zelle_k).Value = 1 Or _
         Worksheets(blattnummer).Range(zelle_k).Value = 7 Then
    Worksheets(blattnummer).Range(bereich).Interior.ColorIndex = 1
    Call Sperren(blattnummer, False, "C" & i & ":H" & i)
  Else
    Worksheets(blattnummer).Range(bereich).Interior.ColorIndex = 3
    Call Sperren(blattnummer, True, "C" & i & ":H" & i)
  End If
Next i

End Sub


' Sub Pa|fffd|wort(Optional blatt_ein_aus)

' wurde dauerhaft abgeschaltet
' nur bei Korrekturen |fffd|ber mehrere Arbeitsbl|fffd|tter hinweg
' f|fffd|r den Administrator n|fffd|tig
' Dim blattnr%  'Integer
' Dim ein_aus$  'String

' aktiviert oder deaktiviert den Pa|fffd|wortschutz eines Arbeitszeitblattes

'blattnr = Mid(blatt_ein_aus, 5, 2)
' ein_aus = Mid(blatt_ein_aus, 1, 3)
'If ein_aus = "Ein" Then
'  Worksheets(blattnr).Protect DrawingObjects:=True, contents:=True, _
'   Scenarios:=True, password:="azblatt"
'ElseIf ein_aus = "Aus" Then
' Worksheets(blattnr).Unprotect ("azblatt")
'End If
'End Sub

Sub Eingabe_Zellen_entsperren()

' ist normalerweise abgeschaltet
' nur bei Korrekturen |fffd|ber mehrere Arbeitsbl|fffd|tter hinweg
' f|fffd|r den Administrator n|fffd|tig

For i = 1 To 12
  Call blattschutz(i, False)
  Farbwerte (i)
  Call blattschutz(i, True)
Next i

End Sub

Sub drucken()

Dim Antwort As Integer

' Ausdrucken des aktuellen Arbeitszeitblattes
' Nachfragen, falls schon mal ausgedruckt

akt_blatt = Month(ActiveSheet.Range("E1"))

Antwort = 0

If ActiveSheet.Range("K3") = "Nein" Then
  Call blattschutz(akt_blatt, False)
  Call Sperren(akt_blatt, False, "K3")
  Call Sperren(akt_blatt, False, "A49:C49")
 ActiveSheet.Range("A49") = Date
  ActiveSheet.PageSetup.PrintArea = "A1:I53"
  ActiveSheet.PrintOut
  ActiveSheet.Range("K3") = "Ja"
  Call Sperren(akt_blatt, True, "K3")
  Call Sperren(akt_blatt, True, "A49:C49")
  Call blattschutz(akt_blatt, True)
Else
  Antwort = MsgBox("Ihr Arbeitszeitblatt wurde schon ausgedruckt!" + Chr(13) + Chr(13) + _
  "Wollen Sie es nochmal drucken?", vbYesNo, "Nochmal drucken?")
   If Antwort = 6 Then
    Call blattschutz(akt_blatt, False)
  Call Sperren(akt_blatt, False, "A49:C49")
    ActiveSheet.Range("A49") = Date
    ActiveSheet.PageSetup.PrintArea = "A1:I53"
    ActiveSheet.PrintOut
  Call Sperren(akt_blatt, True, "A49:C49")
    Call blattschutz(akt_blatt, True)
  End If
End If

End Sub

Sub Druckbereiche_festlegen()

' legt pro Arbeitszeitblatt den Druckbereich fest,
' so dass kein Fehldruck entsteht

For i = 1 To 12
  Worksheets(i).PageSetup.PrintArea = "A1:I53"
Next i

End Sub

Sub Sollarbeitszeit_berechnen(alt_neu As String)

' wird f|fffd|r die Jahres|fffd|bernahme genutzt (Parameter neu)
' oder zur Neuberechnung. Falls jemand erst mitten im Monat
' eingestellt wird oder ein neues Arbeitszeitmodell w|fffd|hlt,
' so darf er nicht die Sollarbeitszeit des ganzen Monats erhalten,
' sondern nur die ab diesem Tag (Erfassungsdatum Beginn steht auf
' Blatt 13, B11)

Dim a As Integer
Dim zelle_gefunden As Boolean
Dim gefundene_zelle As Integer

Application.ScreenUpdating = False

a = 0
gefundene_zelle = 0
zelle_gefunden = False

If alt_neu = "neu" Then                   ' Jahres|fffd|bernahme
  For i = 1 To 12
    If Worksheets(13).CheckBox1.Value = False Then
      Call Sperren(i, False, "I52")
      Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)"
      Call Sperren(i, False, "J6:J47")
      For j = 6 To 47
        zelle_k = "K" & j
        zelle_j = "J" & j
        If Worksheets(i).Range(zelle_k) >= 2 _
        And Worksheets(i).Range(zelle_k) <= 6 Then
          Select Case Worksheets(i).Range(zelle_k)
          Case 2:
            Worksheets(i).Range(zelle_j) = Worksheets(13).Range("B8")
          Case 3:
            Worksheets(i).Range(zelle_j) = Worksheets(13).Range("C8")
          Case 4:
            Worksheets(i).Range(zelle_j) = Worksheets(13).Range("D8")
          Case 5:
            Worksheets(i).Range(zelle_j) = Worksheets(13).Range("E8")
          Case 6:
            Worksheets(i).Range(zelle_j) = Worksheets(13).Range("F8")
          End Select
        Else
          Worksheets(i).Range(zelle_j) = ""
        End If
      Next j
      Call Sperren(i, True, "J6:J47")
      Call Sperren(i, True, "I52")
    Else
      Call Sperren(i, False, "J6:J47")
      Worksheets(i).Range("J6:J47") = ""
      Call Sperren(i, False, "I52")
      Select Case i
      Case 1:
        Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!B7"
      Case 2:
        Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!C7"
      Case 3:
        Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!D7"
      Case 4:
        Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!E7"
      Case 5:
        Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!F7"
      Case 6:
        Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!G7"
      Case 7:
        Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!B9"
      Case 8:
        Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!C9"
      Case 9:
        Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!D9"
      Case 10:
        Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!E9"
      Case 11:
        Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!F9"
      Case 12:
        Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!G9"
      End Select
      Call Sperren(i, True, "I52")
      Call Sperren(i, True, "J6:J47")
    End If
  Next i
End If

If alt_neu = "alt" Then
  zelle_gefunden = False
  neuer_tag = Day(Worksheets(13).Range("B11"))
  neuer_monat = Month(Worksheets(13).Range("B11"))
  For i = neuer_monat To 12
    Call blattschutz(i, False)
    If Worksheets(13).CheckBox1.Value = False Then  ' Stunden pro Tag werden erfasst
      Call Sperren(i, False, "I52")
      Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)"
      a = 6
      If i = neuer_monat Then
        While Not (zelle_gefunden) And a <= 47
          zelle_a = "A" & a
          If Worksheets(i).Range(zelle_a) <> "" Then
            If Day(Worksheets(i).Range(zelle_a)) = neuer_tag Then
              zelle_gefunden = True
              gefundene_zelle = a
            End If
          End If
          a = a + 1
        Wend
        Call Sperren(i, False, "J6:J47")
        For j = gefundene_zelle To 47
          zelle_k = "K" & j
          zelle_j = "J" & j
          If Worksheets(i).Range(zelle_k) >= 2 _
          And Worksheets(i).Range(zelle_k) <= 6 Then
            Select Case Worksheets(i).Range(zelle_k)
            Case 2:
              Worksheets(i).Range(zelle_j) = Worksheets(13).Range("B8")
            Case 3:
              Worksheets(i).Range(zelle_j) = Worksheets(13).Range("C8")
            Case 4:
              Worksheets(i).Range(zelle_j) = Worksheets(13).Range("D8")
            Case 5:
              Worksheets(i).Range(zelle_j) = Worksheets(13).Range("E8")
            Case 6:
              Worksheets(i).Range(zelle_j) = Worksheets(13).Range("F8")
            End Select
          Else
            Worksheets(i).Range(zelle_j) = ""
          End If
        Next j
      Else
        Call Sperren(i, False, "J6:J47")
        For j = 6 To 47
          zelle_k = "K" & j
          zelle_j = "J" & j
          If Worksheets(i).Range(zelle_k) >= 2 _
          And Worksheets(i).Range(zelle_k) <= 6 Then
            Select Case Worksheets(i).Range(zelle_k)
            Case 2:
              Worksheets(i).Range(zelle_j) = Worksheets(13).Range("B8")
            Case 3:
              Worksheets(i).Range(zelle_j) = Worksheets(13).Range("C8")
            Case 4:
              Worksheets(i).Range(zelle_j) = Worksheets(13).Range("D8")
            Case 5:
              Worksheets(i).Range(zelle_j) = Worksheets(13).Range("E8")
            Case 6:
              Worksheets(i).Range(zelle_j) = Worksheets(13).Range("F8")
            End Select
          Else
            Worksheets(i).Range(zelle_j) = ""
          End If
        Next j
        Call Sperren(i, True, "J6:J47")
      End If
      Call Sperren(i, True, "I52")
    Else  ' Stunden pro Monat werden erfasst
      Call Sperren(i, False, "I52")
      a = 6
      If i = neuer_monat Then
        While Not (zelle_gefunden) And a <= 47
          zelle_a = "A" & a
          If Worksheets(i).Range(zelle_a) <> "" Then
            If Day(Worksheets(i).Range(zelle_a)) = neuer_tag Then
              zelle_gefunden = True
              gefundene_zelle = a
            End If
          End If
          a = a + 1
        Wend
        range_gefunden = "J" & gefundene_zelle & ":J47"
        Call Sperren(i, False, "J6:J47")
        Worksheets(i).Range(range_gefunden) = ""
        Call Sperren(i, False, "I52")
        Select Case i
        Case 1:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!B7"
        Case 2:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!C7"
        Case 3:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!D7"
        Case 4:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!E7"
        Case 5:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!F7"
        Case 6:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!G7"
        Case 7:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!B9"
        Case 8:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!C9"
        Case 9:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!D9"
        Case 10:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!E9"
        Case 11:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!F9"
        Case 12:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!G9"
        End Select
        Call Sperren(i, True, "I52")
        Call Sperren(i, True, "J6:J47")
      Else
        Call Sperren(i, False, "J6:J47")
        Worksheets(i).Range("J6:J47") = ""
        Call Sperren(i, False, "I52")
        Select Case i
        Case 1:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!B7"
        Case 2:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!C7"
        Case 3:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!D7"
        Case 4:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!E7"
        Case 5:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!F7"
        Case 6:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!G7"
        Case 7:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!B9"
        Case 8:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!C9"
        Case 9:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!D9"
        Case 10:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!E9"
        Case 11:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!F9"
        Case 12:
          Worksheets(i).Range("I52").FormulaLocal = "=SUMME(J6:J47)+'pers|fffd|nliche Einstellungen'!G9"
        End Select
        Call Sperren(i, True, "I52")
        Call Sperren(i, True, "J6:J47")
      End If
    End If
  Call blattschutz(i, True)
  Next i
End If

Application.ScreenUpdating = True

End Sub

Sub pers_einstell()
  ActiveWorkbook.Worksheets(13).Activate
  Worksheets(13).Range("B2").Activate
End Sub

Sub uebernahme_2013_2014()

Dim aktuelles_jahr As String
Dim vorjahr As String
Dim Pfad As String
Dim dateiname_alt As String
Dim dateiname_alt_voller_Pfad As String
Dim Altdatei As New FileSystemObject
Dim gefunden As Boolean

Antwort = MsgBox("Bitte beachten Sie:" + Chr(13) + _
                              "Diese Funktion ist nur zur Daten|fffd|bernahme Ihrer pers|fffd|nlichen Daten und" + Chr(13) + _
                              "des Jahres|fffd|bertrages von 2013 nach 2014 gedacht." + Chr(13) + Chr(13) + _
                              "Dieser Proze|fffd| kann mehrere Minuten in Anspruch nehmen." + Chr(13) + Chr(13) + _
                              "Wollen Sie fortfahren?", vbYesNo, "Jahreswechsel 2013 -> 2014")
                            
If Antwort = 6 Then
  gefunden = False

  Application.ScreenUpdating = False
  Application.DisplayStatusBar = True
  Application.StatusBar = "Bitte warten - die Daten|fffd|bertragung l|fffd|uft..."

  aktuelles_jahr = Year(Worksheets(13).Range("B4"))
  vorjahr = aktuelles_jahr - 1

  Pfad = "N:\excel\Arbeitszeiterfassung"
  dateiname_alt = "arbeitszeit" & vorjahr & ".xls"
  dateiname_alt_voller_Pfad = Pfad & "\" & dateiname_alt
   
  gefunden = Altdatei.FileExists(dateiname_alt_voller_Pfad)
  
  ' Anpassung f|fffd|r Office 2010
  
  If Not gefunden Then
    dateiname_alt = "arbeitszeit" & vorjahr & ".xlsm"
    dateiname_alt_voller_Pfad = Pfad & "\" & dateiname_alt
  End If
  
  gefunden = Altdatei.FileExists(dateiname_alt_voller_Pfad)
  
  If gefunden Then
  
  ' pers|fffd|nliche Einstellungen |fffd|bernehmen
    
    Call blattschutz(13, False)
   
    Set alte_mappe = Workbooks.Open(dateiname_alt_voller_Pfad)
    If alte_mappe.Worksheets(13).CheckBox1.Value = True Then
     
  ' werden Stunden pro Monat erfasst oder ganz regul|fffd|r pro Woche?
  ' neue Mappe anpassen auf Erfassung pro Monat, wenn notwendig
  
      Workbooks(1).Worksheets(13).Activate
      Call Workbooks(1).Worksheets(13).check_box_click(True)
      Workbooks(1).Worksheets(13).Range("$B$7:$G$7").Value = alte_mappe.Worksheets(13).Range("$B$7:$G$7").Value
      Workbooks(1).Worksheets(13).Range("$B$9:$G$9").Value = alte_mappe.Worksheets(13).Range("$B$9:$G$9").Value
      
    Else
      Workbooks(1).Worksheets(13).Range("$B$8:$F$8").Value = alte_mappe.Worksheets(13).Range("$B$8:$F$8").Value
     
    End If
      Workbooks(1).Worksheets(13).Range("$B$2:$B$3").Value = alte_mappe.Worksheets(13).Range("$B$2:$B$3").Value
      Workbooks(1).Worksheets(13).Range("$B$11").Value = alte_mappe.Worksheets(13).Range("$B$11").Value
      Workbooks(1).Worksheets(13).Range("$B$15:$E$19").Value = alte_mappe.Worksheets(13).Range("$B$15:$E$19").Value

    Call blattschutz(13, True)
 
  Else
    MsgBox "Die Datei '" & dateiname_alt_voller_Pfad & "' aus dem Vorjahr wurde nicht gefunden." + Chr(13) + Chr(13) + _
    "Eine Daten|fffd|bernahme ist daher nicht m|fffd|glich!"
    Exit Sub
  End If
  
  ' einzelne Bl|fffd|tter erste beide Zeilen anpassen
  ' Jahres|fffd|bertrag aus Dezember 2013 |fffd|bernehmen
  
  uebertrag = alte_mappe.Worksheets(12).Range("I53")
  
  For j = 1 To 12
    Workbooks(1).Worksheets(j).Activate
    Call blattschutz(j, False)
    If j = 1 Then
      ' alten Jahres|fffd|bertrag merken
      bereich = "I50"
      Call Sperren(j, False, bereich)
      Workbooks(1).Worksheets(j).Range("I50") = uebertrag
      Call Sperren(j, True, bereich)
    End If
    
    bereich = "E2:H3"
    Call Sperren(j, False, bereich)
    Workbooks(1).Worksheets(j).Range("E2") = alte_mappe.Worksheets(j).Range("E2")
    Workbooks(1).Worksheets(j).Range("E3") = alte_mappe.Worksheets(j).Range("E3")
    Call Sperren(j, True, bereich)
    Call blattschutz(j, True)
  Next j

  Call Sollarbeitszeit_berechnen("alt")

  ' ersten Arbeitstag im Januar anspringen
  
  Worksheets(1).Activate
  For i = 6 To 47
    zelle_a = "A" & i
    If Left(Worksheets(1).Range(zelle_a), 2) = 1 Then
      zelle_c = "C" & i
      Worksheets(1).Range(zelle_c).Select
    End If
  Next i
    
  ' |fffd|bernahmeknopf l|fffd|schen

  Call blattschutz(1, False)
  ActiveSheet.Shapes("CommandButton14").Delete
  Call blattschutz(1, True)

  Workbooks(1).Save
  Workbooks(2).Save
  
  alte_mappe.Close

End If

End Sub

Sub altdatenuebernahme()

Dim aktuelles_jahr As String
Dim Pfad As String
Dim dateiname_alt As String
Dim dateiname_alt_voller_Pfad As String
Dim Altdatei As New FileSystemObject
Dim gefunden As Boolean
Dim neue_mappe As Workbook
Dim alte_mappe As Workbook

Antwort = MsgBox("Bitte beachten Sie:" + Chr(13) + _
                              "Diese Funktion ist zur (Alt)Daten|fffd|bernahme Ihrer bereits erfassten Daten in die neueste Version " + Chr(13) + _
                              "der Arbeitszeiterfassung gedacht und NICHT zum Jahres|fffd|bertrag am Jahresende!!!" + Chr(13) + Chr(13) + _
                              "Vor der Daten|fffd|bernahme m|fffd|ssen Sie sicherstellen, dass Sie die bisherige Datei nach" + Chr(13) + _
                              "'arbeitszeitxxxx-alt.xls' umbenannt haben! Ansonsten wird die |fffd|bernahme nicht funktionieren!" + Chr(13) + Chr(13) + _
                              "Nach erfolgreicher Daten|fffd|bernahme kann und sollte die alte Datei gel|fffd|scht werden. " + Chr(13) + Chr(13) + _
                              "Dieser Proze|fffd| kann mehrere Minuten in Anspruch nehmen." + Chr(13) + Chr(13) + _
                              "Wollen Sie fortfahren?", vbYesNo, "Daten|fffd|bernahme neue Programmversion")
                            
If Antwort = 6 Then
  gefunden = False
  
  Application.ScreenUpdating = False
  Application.DisplayStatusBar = True
  Application.StatusBar = "Bitte warten - die Daten|fffd|bertragung l|fffd|uft..."

  aktuelles_jahr = Year(Worksheets(13).Range("B4"))

  Pfad = "N:\excel\Arbeitszeiterfassung"
  dateiname_alt = "arbeitszeit" & aktuelles_jahr & "-alt.xls"
  dateiname_alt_voller_Pfad = Pfad & "\" & dateiname_alt
   
  gefunden = Altdatei.FileExists(dateiname_alt_voller_Pfad)
  
  ' Anpassung f|fffd|r Office 2010
  
  If Not gefunden Then
    dateiname_alt = "arbeitszeit" & aktuelles_jahr & "-alt.xlsm"
    dateiname_alt_voller_Pfad = Pfad & "\" & dateiname_alt
  End If
  
  gefunden = Altdatei.FileExists(dateiname_alt_voller_Pfad)
  
  If gefunden Then
  
  ' pers|fffd|nliche Einstellungen |fffd|bernehmen
  
    Call blattschutz(13, False)
   
    Set alte_mappe = Workbooks.Open(dateiname_alt_voller_Pfad)
    If alte_mappe.Worksheets(13).CheckBox1.Value = True Then
     
  ' werden Stunden pro Monat erfasst oder ganz regul|fffd|r pro Woche?
  ' neue Mappe anpassen auf Erfassung pro Monat, wenn notwendig
  
      Workbooks(1).Worksheets(13).Activate
      Call Workbooks(1).Worksheets(13).check_box_click(True)
      Workbooks(1).Worksheets(13).Range("$B$7:$G$7").Value = alte_mappe.Worksheets(13).Range("$B$7:$G$7").Value
      Workbooks(1).Worksheets(13).Range("$B$9:$G$9").Value = alte_mappe.Worksheets(13).Range("$B$9:$G$9").Value
      
    Else
      Workbooks(1).Worksheets(13).Range("$B$8:$F$8").Value = alte_mappe.Worksheets(13).Range("$B$8:$F$8").Value
     
    End If
      Workbooks(1).Worksheets(13).Range("$B$2:$B$3").Value = alte_mappe.Worksheets(13).Range("$B$2:$B$3").Value
      Workbooks(1).Worksheets(13).Range("$B$11").Value = alte_mappe.Worksheets(13).Range("$B$11").Value
      Workbooks(1).Worksheets(13).Range("$B$15:$E$19").Value = alte_mappe.Worksheets(13).Range("$B$15:$E$19").Value

    Call blattschutz(13, True)
 
  Else
    MsgBox "Die Altdatei '" & dateiname_alt_voller_Pfad & "' wurde nicht gefunden." + Chr(13) + Chr(13) + _
    "Eine Altdaten|fffd|bernahme ist daher nicht m|fffd|glich!"
    Exit Sub
  End If

' einzelne Bl|fffd|tter updaten

  aktueller_monat = Month(Date)

  For j = 1 To 12
    Workbooks(1).Worksheets(j).Activate
    Call blattschutz(j, False)
    If j = 1 Then
      ' alten Jahres|fffd|bertrag merken
      bereich = "I50"
      Call Sperren(j, False, bereich)
      Workbooks(1).Worksheets(j).Range("I50") = alte_mappe.Worksheets(j).Range("I50")
      Call Sperren(j, True, bereich)
    End If
    
    bereich = "E2:H3"
    Call Sperren(j, False, bereich)
    Workbooks(1).Worksheets(j).Range("E2") = alte_mappe.Worksheets(j).Range("E2")
    Workbooks(1).Worksheets(j).Range("E3") = alte_mappe.Worksheets(j).Range("E3")
    Call Sperren(j, True, bereich)
    
    bereich = "$C$6:$H$47"
    ' diesen Bereicht nicht sperren oder entsperren!
    Workbooks(1).Worksheets(j).Range(bereich).Value = alte_mappe.Worksheets(j).Range(bereich).Value
    
    bereich = "$J$6:$J$47"
    Call Sperren(j, False, bereich)
    Workbooks(1).Worksheets(j).Range(bereich).Value = alte_mappe.Worksheets(j).Range(bereich).Value
    Call Sperren(j, True, bereich)
    
    bereich = "A49:C49"
    Call Sperren(j, False, bereich)
    If j <= aktueller_monat And alte_mappe.Worksheets(j).Range("K3").Value = "Ja" Then
      Workbooks(1).Worksheets(j).Range("A49").Value = alte_mappe.Worksheets(j).Range("A49").Value
    Else
      Workbooks(1).Worksheets(j).Range("A49") = ""
    End If
    Call Sperren(j, True, bereich)
    
    bereich = "K3"
    Call Sperren(j, False, bereich)
    Workbooks(1).Worksheets(j).Range("K3") = alte_mappe.Worksheets(j).Range("K3")
    Call Sperren(j, True, bereich)
    
    'eventuell manuell angepasste |fffd|bertr|fffd|ge |fffd|bernehmen
    
    bereich = "I53"
    Call Sperren(j, False, bereich)
    If alte_mappe.Worksheets(j).Range("I53").HasFormula = False Then
      Call Sperren(j, False, "F54:I54")
      Worksheets(j).Range("F54") = "Zeit|fffd|bertrag wurde von Hand ge|fffd|ndert," + _
                                               " bitte |fffd|berpr|fffd|fen!"
      Worksheets(j).Range("F54").Font.Bold = True
      Worksheets(j).Range("F54").Interior.ColorIndex = 1
      Call Sperren(j, True, "F54:I54")
      Workbooks(1).Worksheets(j).Range("I53").Value = alte_mappe.Worksheets(j).Range("I53").Value
    End If
    Call Sperren(j, True, bereich)
     
    bereich = "J53"
    Call Sperren(j, False, bereich)
    Workbooks(1).Worksheets(j).Range("J53") = alte_mappe.Worksheets(j).Range("J53")
    Call Sperren(j, True, bereich)
     
    Call blattschutz(j, True)
  Next j

  Call Sollarbeitszeit_berechnen("alt")
  
  'Korrektur Streiktage:
  
  For i = 1 To 12
    Workbooks(1).Worksheets(i).Activate
    Call blattschutz(i, False)
    For k = 6 To 44
      zelle_h = "H" & k
      If Range(zelle_h) = "Unbezahlter Urlaub oder Streik" Then
        zelle_j = "J" & k
        Call Sperren(i, False, zelle_j)
        Range(zelle_j) = ""
        Call Sperren(i, True, zelle_j)
      End If
    Next k
    Call blattschutz(i, True)
  Next i
    
  Application.DisplayStatusBar = False
  Application.ScreenUpdating = True
 
 ' aktuellen Erfassungsmonat + aktuelles Datum anspringen
 
  Worksheets(aktueller_monat).Activate
  For i = 6 To 47
    zelle_a = "A" & i
    If Left(Worksheets(aktueller_monat).Range(zelle_a), 2) = CStr(Day(Date)) Then
      zelle_c = "C" & i
      Worksheets(aktueller_monat).Range(zelle_c).Select
    End If
  Next i

  
  Workbooks(1).Save
  Workbooks(2).Save
  
  alte_mappe.Close
  
  End If

End Sub

Sub Jahres|fffd|bernahme()

Application.ScreenUpdating = False

Dim neues_datum As Date
Dim neues_datum_merken As Date
Dim gefunden As Boolean
Dim Ordner As New FileSystemObject

aktuelles_jahr = Year(Worksheets(13).Range("B4"))
jahr_neu = Year(Worksheets(13).Range("B4")) + 1
neue_version = "V" & jahr_neu & ".01"
uebertrag = Worksheets(12).Range("I53")

Antwort = MsgBox("Bitte f|fffd|hren Sie diese Funktion erst am oder nach dem 31.12." & aktuelles_jahr & " durch. " + Chr(13) + _
                              "Erst dann ist der Jahres|fffd|bertrag abschlie|fffd|end berechnet!" + Chr(13) + Chr(13) + _
                              "Es wird nun eine neue, LEERE Excel-Mappe f|fffd|r das Jahr " & jahr_neu & " mit Ihrem" + Chr(13) + _
                              "Jahres|fffd|bertrag und Ihren pers|fffd|nlichen Daten erzeugt." + Chr(13) + Chr(13) + _
                              "Dieser Proze|fffd| kann mehrere Minuten in Anspruch nehmen." + Chr(13) + Chr(13) + _
                              "Sind Sie damit einverstanden?", vbYesNo, "Jahres|fffd|bernahme")
                            
If Antwort = 6 Then

gefunden = Ordner.FolderExists("N:\excel\")
If Not gefunden Then
  Ordner.CreateFolder ("N:\excel\")
End If

gefunden = Ordner.FolderExists("N:\excel\Arbeitszeiterfassung\")
If Not gefunden Then
  Ordner.CreateFolder ("N:\excel\Arbeitszeiterfassung\")
End If

neues_laufwerk = "N:"
neuer_pfad = "\excel\Arbeitszeiterfassung"
ChDrive neues_laufwerk
ChDir neuer_pfad

neuer_datei_name = "arbeitszeit" & jahr_neu & ".xlsm"
'dateiname_voller_pfad = Application.GetSaveAsFilename(neuer_datei_name, , , "Datei speichern unter:", OK)
dateiname_voller_pfad = Application.GetSaveAsFilename(InitialFileName:=neuer_datei_name, _
FileFilter:="Excel-Arbeitsmappe mit Makros (*.xlsm),*.xlsm", Title:="Datei Speichern unter:")

'AE 18.12.2013: musste angepasst werden, da unter office 2010 der Typ angegeben werden muss

If dateiname_voller_pfad <> falsch Then

Application.DisplayStatusBar = True
Application.StatusBar = "Bitte warten - Neue Excel-Mappe mit Jahres|fffd|bertrag wird erzeugt..."

ActiveWorkbook.SaveCopyAs (dateiname_voller_pfad)
Set neue_mappe = Workbooks.Open(dateiname_voller_pfad)
neue_mappe.Activate
Worksheets(1).Activate

For i = 1 To 12
  Call blattschutz(i, False)
  Call Sperren(i, False, "E1:G1")
  Call Sperren(i, False, "J1")
  Call Sperren(i, False, "E2:H3")
  Call Sperren(i, False, "K3")
  Call Sperren(i, False, "C6:H47")
  Call Sperren(i, False, "A49:C49")
  Call Sperren(i, False, "I50")
  Call Sperren(i, False, "I53")
  Call Sperren(i, False, "F54:I54")
  
Next i

neues_datum = "01.01." & jahr_neu
neues_datum_merken = neues_datum

' AE 06.12.2011: es gab hier Schwierigkeiten wegen des Schreibschutzes auf Blatt 13
' wird hier nochmal explizit aufgehoben

Call blattschutz(13, False)
Call Sperren(13, False, "B4")
Call Sperren(13, False, "B11:B12")

Worksheets(1).Range("E1").Value = neues_datum
Worksheets(13).Range("B4").Value = neues_datum
Worksheets(13).Range("B11:B12").Value = neues_datum

'alte Inhalte l|fffd|schen und neue erzeugen
'auch die Formeln, es gab hier im |fffd|bergang 2013 -> 2014 Probleme, ausf|fffd|hrlich ganz oben beschrieben

For i = 1 To 12
  neue_mappe.Activate
  Worksheets(i).Activate
  
  With Worksheets(i).Range("J1")
    .Font.Color = RGB(0, 0, 255)
    .Value = neue_version
  End With
  
  Worksheets(i).Range("E2") = Worksheets(13).Range("B2")
  Worksheets(i).Range("E3") = Worksheets(13).Range("B3")
  Worksheets(i).Range("C6:H47").ClearContents
  Worksheets(i).Range("F54") = ""
  Worksheets(i).Range("F54").Interior.ColorIndex = 3
  Worksheets(i).Range("I53").FormulaLocal = "=WENN(I49=0;0;I51-I52)"
  Worksheets(i).Range("J53").FormulaLocal = "=SUMME(I6:I47)+I50-I13-I21-I29-I37-I45-SUMME(J6:J6)"
  Worksheets(i).Range("A49") = ""
  monat = Month(Worksheets(i).Range("E1"))
  
  Select Case monat
      Case 1:
        Worksheets(i).Range("I50") = uebertrag
        neues_datum = "01.02." & jahr_neu
        Worksheets(i + 1).Range("E1").Value = neues_datum
        Monat_Jahr = "Januar " & jahr_neu
        Farbwerte (1)
      Case 2:
        sj = Schaltjahr(jahr_neu)
        l|fffd|nge = Len(Worksheets(i).Range("A36").FormulaLocal)
        If sj = "Ja" Then
          testformel = Mid(Worksheets(i).Range("a36").FormulaLocal, 1, 46) & "9" & _
                       Mid(Worksheets(i).Range("a36").FormulaLocal, 48, l|fffd|nge)
          Worksheets(i).Range("A36").FormulaLocal = testformel
          For j = 38 To 44
            zelle = "A" & j
            testformel = Mid(Worksheets(i).Range(zelle).FormulaLocal, 1, 46) & "9" & _
                         Mid(Worksheets(i).Range(zelle).FormulaLocal, 48, l|fffd|nge)
            Worksheets(i).Range(zelle).FormulaLocal = testformel
          Next j
          For j = 46 To 47
            zelle = "A" & j
            testformel = Mid(Worksheets(i).Range(zelle).FormulaLocal, 1, 46) & "9" & _
                         Mid(Worksheets(i).Range(zelle).FormulaLocal, 48, l|fffd|nge)
            Worksheets(i).Range(zelle).FormulaLocal = testformel
          Next j
            neues_datum = "01.03." & jahr_neu
            Worksheets(i + 1).Range("E1").Value = neues_datum
        Else
          testformel = Mid(Worksheets(i).Range("a36").FormulaLocal, 1, 46) & "8" & _
                       Mid(Worksheets(i).Range("a36").FormulaLocal, 48, l|fffd|nge)
          Worksheets(i).Range("A36").FormulaLocal = testformel
          For j = 38 To 44
            zelle = "A" & j
            testformel = Mid(Worksheets(i).Range(zelle).FormulaLocal, 1, 46) & "8" & _
                         Mid(Worksheets(i).Range(zelle).FormulaLocal, 48, l|fffd|nge)
            Worksheets(i).Range(zelle).FormulaLocal = testformel
          Next j
            For j = 46 To 47
            zelle = "A" & j
            testformel = Mid(Worksheets(i).Range(zelle).FormulaLocal, 1, 46) & "8" & _
                         Mid(Worksheets(i).Range(zelle).FormulaLocal, 48, l|fffd|nge)
            Worksheets(i).Range(zelle).FormulaLocal = testformel
          Next j
            neues_datum = "01.03." & jahr_neu
            Worksheets(i + 1).Range("E1").Value = neues_datum
        End If
            ' Anpassung der Formel zum |fffd|bertrag der |fffd|berstunden vom letzten Monat
            ' Worksheets(i).Range("I50").FormulaLocal = "='" & Monat_Jahr & "'!I53"
            Monat_Jahr = "Februar " & jahr_neu
            Farbwerte (2)
      Case 3:
        neues_datum = "01.04." & jahr_neu
        Worksheets(i + 1).Range("E1").Value = neues_datum
        Monat_Jahr = "M|fffd|rz " & jahr_neu
        Farbwerte (3)
      Case 4:
        neues_datum = "01.05." & jahr_neu
        Worksheets(i + 1).Range("E1").Value = neues_datum
        Monat_Jahr = "April " & jahr_neu
        Farbwerte (4)
      Case 5:
        neues_datum = "01.06." & jahr_neu
        Worksheets(i + 1).Range("E1").Value = neues_datum
        Monat_Jahr = "Mai " & jahr_neu
        Farbwerte (5)
      Case 6:
        neues_datum = "01.07." & jahr_neu
        Worksheets(i + 1).Range("E1").Value = neues_datum
        Monat_Jahr = "Juni " & jahr_neu
        Farbwerte (6)
      Case 7:
        neues_datum = "01.08." & jahr_neu
        Worksheets(i + 1).Range("E1").Value = neues_datum
        Monat_Jahr = "Juli " & jahr_neu
        Farbwerte (7)
      Case 8:
        neues_datum = "01.09." & jahr_neu
        Worksheets(i + 1).Range("E1").Value = neues_datum
        Monat_Jahr = "August " & jahr_neu
        Farbwerte (8)
      Case 9:
        neues_datum = "01.10." & jahr_neu
        Worksheets(i + 1).Range("E1").Value = neues_datum
        Monat_Jahr = "September " & jahr_neu
        Farbwerte (9)
      Case 10:
        neues_datum = "01.11." & jahr_neu
        Worksheets(i + 1).Range("E1").Value = neues_datum
        Monat_Jahr = "Oktober " & jahr_neu
        Farbwerte (10)
      Case 11:
        neues_datum = "01.12." & jahr_neu
        Worksheets(i + 1).Range("E1").Value = neues_datum
        Monat_Jahr = "November " & jahr_neu
        Farbwerte (11)
      Case 12:
        Monat_Jahr = "Dezember " & jahr_neu
        Farbwerte (12)
    End Select
    Worksheets(i).Range("K3") = "Nein"

    Call Sperren(i, True, "E1:G1")
    Call Sperren(i, True, "J1")
    Call Sperren(i, True, "E2:H3")
    Call Sperren(i, True, "K3")
    Call Sperren(i, True, "A49:C49")
    Call Sperren(i, True, "I50")
    Call Sperren(i, True, "I53")
    Call Sperren(i, True, "F54:I54")
    
  Next i
  
  Call Sperren(13, True, "B4")
  Sollarbeitszeit_berechnen ("neu")
  ' Feiertage_berechnen (jahr_neu)
  
  For i = 1 To 12
   ' erste Eingabezelle aktivieren
    gefunden = False
    k = 6
    Worksheets(i).Activate
    While Not (gefunden)
      zelle_k = "K" & k
      Select Case Worksheets(i).Range(zelle_k).Value
      Case 2, 3, 4, 5, 6
        gefunden = True
        zelle_c = "C" & k
        Worksheets(i).Range(zelle_c).Select
      End Select
    k = k + 1
    Wend
    Call blattschutz(i, True)
  Next i
  
  Call blattschutz(13, True)
  
  Workbooks(2).Worksheets(1).Activate
  Workbooks(2).Save
    
  Application.DisplayStatusBar = False
  Application.ScreenUpdating = True
  
  Workbooks(1).Save
  Workbooks(1).Close
  
  Application.DisplayStatusBar = False
  Application.ScreenUpdating = True
  
  End If  'dateiname_voller_pfad
  
  End If   'Antwort
  
End Sub
Sub Schaltfl|fffd|chen_einf|fffd|gen()

' nur einmalig zum Erzeugen der Schaltfl|fffd|chen
' wird im Alltag nicht ben|fffd|tigt

Dim jahreswechsel As CommandButton
Dim standard As CommandButton
Dim flexi As CommandButton
Dim dienstreise As CommandButton
Dim urlaub As CommandButton
Dim krank As CommandButton
Dim feiertag As CommandButton
Dim dienstfrei As CommandButton
Dim drucken As CommandButton
Dim speichern_schlie|fffd|en As CommandButton
Dim arbeitsfrei As CommandButton
Dim pers_einstell As CommandButton
Dim streik As CommandButton
Dim neue_programmversion As CommandButton

For i = 1 To 12
  Call blattschutz(i, False)
 
  ' Standardtag
  Set standard = Worksheets(i).OLEObjects.Add(classtype:="Forms.commandbutton.1", _
  Left:=623, Top:=85, Width:=140, Height:=40).Object
  standard.Caption = " Standardarbeitstag "
  standard.BackColor = RGB(200, 200, 255)
  standard.ForeColor = RGB(0, 0, 0)
  standard.TakeFocusOnClick = False
  standard.Font = "arial fett"
  standard.MousePointer = fmMousePointerCustom
  Set standard = Nothing

  ' Flexibilisierung
  Set flexi = Worksheets(i).OLEObjects.Add(classtype:="Forms.commandbutton.1", _
  Left:=623, Top:=130, Width:=140, Height:=40).Object
  flexi.Caption = "Flexibilisierung"
  flexi.BackColor = RGB(200, 200, 255)
  flexi.ForeColor = RGB(0, 0, 0)
  flexi.TakeFocusOnClick = False
  flexi.Font = "arial fett"
  flexi.MousePointer = fmMousePointerCustom
  Set flexi = Nothing
  
  ' Urlaub
  Set urlaub = Worksheets(i).OLEObjects.Add(classtype:="Forms.commandbutton.1", _
  Left:=623, Top:=175, Width:=140, Height:=40).Object
  urlaub.Caption = "Urlaub"
  urlaub.BackColor = RGB(200, 200, 255)
  urlaub.ForeColor = RGB(0, 0, 0)
  urlaub.TakeFocusOnClick = False
  urlaub.Font = "arial fett"
  urlaub.MousePointer = fmMousePointerCustom
  Set urlaub = Nothing
  
  ' Dienstreise
  Set dienstreise = Worksheets(i).OLEObjects.Add(classtype:="Forms.commandbutton.1", _
  Left:=623, Top:=220, Width:=140, Height:=40).Object
  dienstreise.Caption = "Dienstreise"
  dienstreise.BackColor = RGB(200, 200, 255)
  dienstreise.ForeColor = RGB(0, 0, 0)
  dienstreise.TakeFocusOnClick = False
  dienstreise.Font = "arial fett"
  dienstreise.MousePointer = fmMousePointerCustom
  Set dienstreise = Nothing
    
  ' Krank
  Set krank = Worksheets(i).OLEObjects.Add(classtype:="Forms.commandbutton.1", _
  Left:=623, Top:=265, Width:=140, Height:=40).Object
  krank.Caption = "Krank"
  krank.BackColor = RGB(200, 200, 255)
  krank.ForeColor = RGB(0, 0, 0)
  krank.TakeFocusOnClick = False
  krank.Font = "arial fett"
  krank.MousePointer = fmMousePointerCustom
  Set krank = Nothing
  
  ' Feiertag
  Set feiertag = Worksheets(i).OLEObjects.Add(classtype:="Forms.commandbutton.1", _
  Left:=623, Top:=310, Width:=140, Height:=40).Object
  feiertag.Caption = "Feiertag"
  feiertag.BackColor = RGB(200, 200, 255)
  feiertag.ForeColor = RGB(0, 0, 0)
  feiertag.TakeFocusOnClick = False
  feiertag.Font = "arial fett"
  feiertag.MousePointer = fmMousePointerCustom
  Set feiertag = Nothing
  
  ' Dienstfrei
  Set dienstfrei = Worksheets(i).OLEObjects.Add(classtype:="Forms.commandbutton.1", _
  Left:=623, Top:=355, Width:=140, Height:=40).Object
  dienstfrei.Caption = "Dienstfrei"
  dienstfrei.BackColor = RGB(200, 200, 255)
  dienstfrei.ForeColor = RGB(0, 0, 0)
  dienstfrei.TakeFocusOnClick = False
  dienstfrei.Font = "arial fett"
  dienstfrei.MousePointer = fmMousePointerCustom
  Set dienstfrei = Nothing

  ' Arbeitsfrei (nur Beamte)
  Set arbeitsfrei = Worksheets(i).OLEObjects.Add(classtype:="Forms.commandbutton.1", _
  Left:=623, Top:=400, Width:=140, Height:=40).Object
  arbeitsfrei.Caption = "Arbeitsfreier Tag"
  arbeitsfrei.BackColor = RGB(200, 200, 255)
  arbeitsfrei.ForeColor = RGB(0, 0, 0)
  arbeitsfrei.TakeFocusOnClick = False
  arbeitsfrei.Font = "arial fett"
  arbeitsfrei.MousePointer = fmMousePointerCustom
  Set arbeitsfrei = Nothing

  ' Streik
  Set drucken = Worksheets(i).OLEObjects.Add(classtype:="Forms.commandbutton.1", _
  Left:=623, Top:=445, Width:=140, Height:=40).Object
  drucken.Caption = "unbezahlter Urlaub" + Chr(13) + "oder Streik"
  drucken.BackColor = RGB(200, 200, 255)
  drucken.ForeColor = RGB(0, 0, 0)
  drucken.TakeFocusOnClick = False
  drucken.Font = "arial fett"
  drucken.MousePointer = fmMousePointerCustom
  Set streik = Nothing
  
  ' Drucken
  Set drucken = Worksheets(i).OLEObjects.Add(classtype:="Forms.commandbutton.1", _
  Left:=623, Top:=490, Width:=140, Height:=40).Object
  drucken.Caption = "Arbeitszeitblatt drucken"
  drucken.BackColor = RGB(200, 200, 255)
  drucken.ForeColor = RGB(0, 0, 0)
  drucken.TakeFocusOnClick = False
  drucken.Font = "arial fett"
  drucken.MousePointer = fmMousePointerCustom
  Set drucken = Nothing

  ' Speichern und Schlie|fffd|en
  Set speichern_schlie|fffd|en = Worksheets(i).OLEObjects.Add(classtype:="Forms.commandbutton.1", _
  Left:=623, Top:=535, Width:=140, Height:=40).Object
  speichern_schlie|fffd|en.Caption = "Speichern+Schlie|fffd|en"
  speichern_schlie|fffd|en.BackColor = RGB(200, 200, 255)
  speichern_schlie|fffd|en.ForeColor = RGB(0, 0, 0)
  speichern_schlie|fffd|en.TakeFocusOnClick = False
  speichern_schlie|fffd|en.Font = "arial fett"
  speichern_schlie|fffd|en.MousePointer = fmMousePointerCustom
  Set speichern_schlie|fffd|en = Nothing
   
  ' pers|fffd|nliche Einstellungen
  Set pers_einstell = Worksheets(i).OLEObjects.Add(classtype:="Forms.commandbutton.1", _
  Left:=623, Top:=580, Width:=140, Height:=40).Object
  pers_einstell.Caption = "pers|fffd|nliche" + Chr(13) + "Einstellungen |fffd|ndern"
  pers_einstell.BackColor = RGB(200, 255, 200)
  pers_einstell.ForeColor = RGB(0, 0, 0)
  pers_einstell.TakeFocusOnClick = False
  pers_einstell.Font = "arial fett"
  pers_einstell.MousePointer = fmMousePointerCustom
  Set pers_einstell = Nothing
  
    ' neue Programmversion
  Set neue_programmversion = Worksheets(i).OLEObjects.Add(classtype:="Forms.commandbutton.1", _
  Left:=623, Top:=625, Width:=140, Height:=40).Object
  neue_programmversion.Caption = "Daten|fffd|bernahme in" + Chr(13) + "neue Programmversion"
  neue_programmversion.BackColor = RGB(255, 200, 200)
  neue_programmversion.ForeColor = RGB(0, 0, 0)
  neue_programmversion.TakeFocusOnClick = False
  neue_programmversion.Font = "arial fett"
  neue_programmversion.MousePointer = fmMousePointerCustom
  Set neue_programmversion = Nothing

   
If i = 12 Then
  
  ' Jahres|fffd|bernahme
  Set jahreswechsel = Worksheets(12).OLEObjects.Add(classtype:="Forms.commandbutton.1", _
  Left:=623, Top:=670, Width:=140, Height:=40).Object
  jahreswechsel.Caption = "Jahres|fffd|bernahme"
  jahreswechsel.BackColor = RGB(255, 200, 200)
  jahreswechsel.ForeColor = RGB(0, 0, 0)
  jahreswechsel.TakeFocusOnClick = False
  jahreswechsel.Font = "arial fett"
  jahreswechsel.MousePointer = fmMousePointerCustom
  Set jahreswechsel = Nothing
End If
   
Next i

End Sub

Sub jahreswechsel_2013_2014()
  ' Einmalknopf f|fffd|r den Jahreswechsel 2013->2014
  
  Dim jahreswechsel_2013_2014 As CommandButton
  
  Call blattschutz(1, False)
  Set jahreswechsel_2013_2014 = Worksheets(1).OLEObjects.Add(classtype:="Forms.commandbutton.1", _
  Left:=623, Top:=670, Width:=140, Height:=40).Object
  jahreswechsel_2013_2014.Caption = "Daten|fffd|bernahme von" + Chr(13) + "2013 nach 2014"
  jahreswechsel_2013_2014.BackColor = RGB(255, 200, 200)
  jahreswechsel_2013_2014.ForeColor = RGB(0, 0, 0)
  jahreswechsel_2013_2014.TakeFocusOnClick = False
  jahreswechsel_2013_2014.Font = "arial fett"
  jahreswechsel_2013_2014.MousePointer = fmMousePointerCustom
  Set jahreswechsel_2013_2014 = Nothing
  Call blattschutz(1, True)
End Sub


Sub schaltfl|fffd|chen_zur|fffd|cksetzen()
Dim obj As Object

' war nur zum Testen notwendig

For i = 1 To 12
  Call blattschutz(i, False)
  For Each obj In Worksheets(i).OLEObjects
  Worksheets(i).OLEObjects.Delete
  Next obj
Next i
End Sub





' InQuest injected base64 decoded content
' 3z+gz

INQUEST-PP=macro
