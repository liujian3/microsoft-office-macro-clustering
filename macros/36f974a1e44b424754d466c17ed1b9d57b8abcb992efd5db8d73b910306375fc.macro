Attribute VB_Name = "Carrier"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim cSCAC As String
Dim cTender As String
Dim cTendersup As String
Dim CName As String
Dim cDBA As String
Dim cDotNo As String
Dim cMCNo As String
Dim cPhone As String
Dim cInvName As String
Dim cInvPhone As String
Dim cInvExt As String
Dim cTenderName As String
Dim cTenderPhone As String
Dim cAddr As String
Dim cTenderExt As String
Dim cPhmsaNo As String
Dim cPhmsaExpDt As Date
Dim cEPANo As String
Dim cEPAExp As Date  'new
Dim cfmcsaNo As String
Dim cFmscaExpDt As Date
Dim cMCEP As String
Dim cTeam As String
Public GenFactor As Double
Dim cHazFactor As String
Dim cRCRAFactor As String
Dim cLLWFactor As String
Dim cMllWFactor As String
Dim cSNFFactor As String
Public DetWPuRate As Double
Public DetWPu1NonClearMax As Double
Public detWPu2NonClearMax As Double
Public detWPu1ClearMax As Double
Public detwPU2ClearMax As Double
Public LO1NonClearRate As String
Public LO2NonClearRate As String
Public LO1ClearRate As String
Public LO2ClearRate As String
Public detWOPowerRate As Double
Public trlstgRATE As String
Public eonu1RATE As Double
Public eonu2RATE  As Double
Public Drvr1nonclrFAC As String
Public dvr1nonclrMIN As String
Public drvr2nonclrFAC As String
Public drvr2nonclrMIN As String
Public drvr1clrFAC As String
Public drvr1clrMIN As String
Public drvr2clrFAC As String
Public drvr2clrMIN As String
Public stopRate As Double
Public maxstops As Double
Public tarpRate As Double
Public sigsvcRATE As Double
Public holRATE As Double
Public holMIN As Double
Public satTrakRate As String
Public hazRATE As Double
Public hrcqFAC As String
Public hrcqMIN As Double
Public hrcqMAX As Double
Public exUseRate As Double
Public permtRATE As Double
Public ow85FAC As String
Public ow85MIN As String
Public ow10FAC As String
Public ow10MIN As String
Public ow12FAC As String
Public ow12MIN As String
Public ow13FAC As String
Public ow13MIN As String
Public ow14FAC As String
Public ow14MIN As String
Public ow15FAC As String
Public ow15MIN As String
Public ow16FAC As String
Public ow16MIN As String
Public ow17FAC As String
Public ow17MIN As String
Public oh14FAC As String
Public oh14MIN As String
Public oh145FAC As String
Public oh145MIN As String
Public oh15FAC As String
Public oh15MIN As String
Public oh16FAC As String
Public oh16MIN As String
Public oh17FAC As String
Public oh17MIN As String
Public ol53FAC As String
Public ol53MIN As String
Public ol55FAC As String
Public ol55MIN As String
Public ol60FAC As Double
Public ol60MIN As Double
Public ol65FAC As Double
Public ol65MIN As Double
Public nyliRATE As Double
Public TexasNo As String
Public TexasPermitDt As Date




Public Property Let SNFFactor(pIn As String)
    If Len(pIn) = 0 Then
        cSNFFactor = -1
    Else
        cSNFFactor = pIn
    End If
End Property

Public Property Let MllWFactor(pIn As String)
    If Len(pIn) = 0 Then
        cMllWFactor = -1
    Else
        cMllWFactor = pIn
    End If
End Property



Public Property Let LLWFactor(pIn As String)
    If Len(pIn) = 0 Then
        cLLWFactor = -1
    Else
        cLLWFactor = pIn
    End If
End Property

Public Property Let RCRAFactor(pIn As String)
    If Len(pIn) = 0 Then
        cRCRAFactor = -1
    Else
        cRCRAFactor = pIn
    End If
End Property


Public Property Let HazFactor(pIn As String)
    If Len(pIn) = 0 Then
        cHazFactor = -1
    Else
        cHazFactor = pIn
    End If
End Property

Public Property Get RCRAFactor() As String
    RCRAFactor = cRCRAFactor
End Property
Public Property Get RCRAFactorInt() As Double
    RCRAFactorInt = Val(cRCRAFactor)
    
    
End Property
Public Property Get LLWFactor() As String
    LLWFactor = cLLWFactor
End Property
Public Property Get llWFactorInt() As Double
    llWFactorInt = Val(cLLWFactor)
    
    
End Property
Public Property Get MllWFactor() As String
    MllWFactor = cMllWFactor
End Property
Public Property Get MllWFactorInt() As Double
    MllWFactorInt = Val(cMllWFactor)
    
    
End Property
Public Property Get SNFFactor() As String
    SNFFactor = cSNFFactor
End Property
Public Property Get SNFFactorInt() As Double
    SNFFactorInt = Val(cSNFFactor)
    
    
    
End Property

Public Property Get HazFactor() As String
    HazFactor = cHazFactor
End Property
Public Property Get HazFactorInt() As Double
    HazFactorInt = Val(cHazFactor)
    
    
End Property


Public Property Get PhmsaNo() As String
    PhmsaNo = cPhmsaNo
End Property


Public Property Get PhmsaExpDt() As Date
    PhmsaExpDt = cPhmsaExpDt
End Property
Public Property Get EPAExpDt() As Date
    EPAExpDt = cEPAExp
End Property

Public Property Let EPAExpDt(pIn As Date)
    cEPAExp = pIn
End Property
Public Property Get EPANo() As String
    EPANo = cEPANo
End Property



Public Property Get FMCSANo() As String
    FMCSANo = cfmcsaNo
End Property


Public Property Get FMSCAExpDt() As Date
    FMSCAExpDt = cFmscaExpDt
End Property



Public Property Get MCEP() As String
    MCEP = cMCEP
End Property


Public Property Get Team() As String
    Team = cTeam
End Property




Public Property Let FMSCAExpDt(pIn As Date)
    cFmscaExpDt = pIn
End Property

Public Property Let MCEP(pIn As String)
    cMCEP = pIn
End Property

Public Property Let Team(pIn As String)
    cTeam = pIn
End Property


Public Property Let FMCSANo(pIn As String)
    cfmcsaNo = pIn
End Property


Public Property Let PhmsaNo(pIn As String)
    cPhmsaNo = pIn
End Property

Public Property Let PhmsaExpDt(pIn As Date)
    cPhmsaExpDt = pIn
End Property
Public Property Let EPANo(pIn As String)
    cEPANo = pIn
End Property

Public Property Let TenderExt(pIn As String)
    cTenderExt = pIn
End Property

Public Property Let TenderAddress(pIn As String)
    cAddr = pIn
End Property

Public Property Let TenderPhone(pIn As String)
    cTenderPhone = pIn
End Property


Public Property Let TenderName(pIn As String)
    cTenderName = pIn
End Property

Public Property Let InvExt(pIn As String)
    cInvExt = pIn
End Property

Public Property Let InvPhone(pIn As String)
    cInvPhone = pIn
End Property


Public Property Let InvName(pIn As String)
    cInvName = pIn
End Property


Public Property Let Phone(pIn As String)
    cPhone = pIn
End Property

Public Property Let MCNo(pIn As String)
    cMCNo = pIn
End Property
Public Property Let DotNo(pIn As String)
    cDotNo = pIn
End Property


Public Property Let DBA(pIn As String)
    cDBA = pIn
End Property

Public Property Let Name(pIn As String)
    CName = pIn
End Property


Public Property Let TendersUp(pIn As String)
    cTendersup = pIn
End Property

Public Property Let Tender(pIn As String)
    cTender = pIn
End Property

Public Property Let scac(pIn As String)
    cSCAC = pIn
End Property
Public Property Get TenderAddress() As String
    TenderAddress = cAddr
End Property

Public Property Get TenderPhone() As String
    TenderPhone = cTenderPhone
End Property

Public Property Get TenderName() As String
    TenderName = cTenderName
End Property

Public Property Get InvExt() As String
    InvExt = cInvExt
End Property

Public Property Get InvPhone() As String
    InvPhone = cInvPhone
End Property


Public Property Get InvName() As String
    InvName = cInvName
End Property

Public Property Get Phone() As String
    Phone = cPhone
End Property

Public Property Get MCNo() As String
    MCNo = cMCNo
End Property


Public Property Get DotNo() As String
    DotNo = cDotNo
End Property


Public Property Get DBA() As String
    DBA = cDBA
End Property

Public Property Get Name() As String
    Name = CName
End Property
Public Property Get TendersUp() As String
    TendersUp = cTendersup
End Property
Public Property Get Tender() As String
    Tender = cTender
End Property
Public Property Get scac() As String
    scac = cSCAC
End Property

Attribute VB_Name = "Company"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private cAcronym As String
Private CName As String

Public Property Get Acroymn() As String
    Acroymn = cAcronym
    
End Property

Public Property Get Name() As String
    Name = CName
    
End Property

Public Property Let Name(pIn As String)
    CName = pIn
End Property

Public Property Let Acroymn(pIn As String)
    cAcronym = pIn
End Property
Attribute VB_Name = "DHRT"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private cDrvCnt As Integer
Private cDescription As String

Public Property Let DriverCnt(pIn As Integer)
    cDrvCnt = pIn
End Property

Public Property Let Description(pIn As String)
    cDescription = pIn
    
End Property

Public Property Get DriverCnt() As Integer
    DriverCnt = cDrvCnt
End Property

Public Property Get Description() As String
    Description = cDescription
End Property

Attribute VB_Name = "Equipt"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private cID As Integer
Private cDesc As String
Private cTarp As String

Public Property Get Tarp() As String

    Tarp = cTarp

End Property


Public Property Get ID() As Integer
    ID = cID
End Property
    
Public Property Get Description() As String
    Description = cDesc
End Property

Public Property Let ID(pID As Integer)
    cID = pID
End Property

Public Property Let Description(pDesc As String)
    cDesc = pDesc
End Property

Public Property Let Tarp(pTarp As String)
    cTarp = pTarp
End Property
Attribute VB_Name = "FixedRates"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public scac As String
Public Equipment As Integer
Public tempFactor As String
Public tempMinCharge As Double
Public baseCPM As Double
Public genMC As Double
Public HAZMC As Double
Public rcraMC As Double
Public llwMC As Double
Public mLLwMC As Double
Public snfMC As Double
Public dhCPM As Double
Public Min1dh As Double
Public min2sh As Double
Public MTdhCPM As Double
Public MT1dhMin As Double
Public MT2dhMin As Double






Attribute VB_Name = "LocEquipt"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private cID As Integer
Private cDesc As String
Private cTarp As String

Public Property Get Tarp() As String

    Tarp = cTarp

End Property


Public Property Get ID() As Integer
    ID = cID
End Property
    
Public Property Get Description() As String
    Description = cDesc
End Property

Public Property Let ID(pID As Integer)
    cID = pID
End Property

Public Property Let Description(pDesc As String)
    cDesc = pDesc
End Property

Public Property Let Tarp(pTarp As String)
    cTarp = pTarp
End Property

Attribute VB_Name = "LocalRates"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public Location As String
Public scac As String
Public EqID As Integer
Public Equipment As String
Public localPhone As String
Public Portal As String
Public RadiusMax As String
Public MinHours As String
Public maxHours As String

Public GFDrv1PerHr As String
Public GFDrv2PerHr As String

Public NRDrv1PerHr As String
Public NRDrv2PerHr As String

Public RCRADrv1PerHr As String
Public RCRADrv2PerHr As String

Public HMDrv1PerHr As String
Public HMDrv2PerHr As String

Public LLWDrv1PerHr As String
Public LLWDrv2PerHr As String

Public MLLWDrv1PerHr As String
Public MLLWDrv2PerHr As String

Public SNFDrv1PerHr As String
Public SNFDrv2PerHr As String
Public singleClear As String
Public doubleClear As String

Attribute VB_Name = "Material"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private cID As Integer
Private cDesc As String

Public Property Let ID(pIn As Integer)
    cID = pIn
End Property

Public Property Let Description(pIn As String)
    cDesc = pIn
End Property

Public Property Get Description() As String
    Description = cDesc
End Property

Public Property Get ID() As Integer
    ID = cID
    
End Property

Attribute VB_Name = "Module1"
Public Sub loadMaterial(ByRef MaterialCol As Collection)
 Dim found As Boolean
 found = False
 Dim CoL As String
 Dim ColPos As Integer
 Dim foundRow As Boolean
 foundRow = False
 
 
Dim mat As New Material
 
    For x = 1 To 5
        If UCase(Sheets("Materials").Range("B" & x)) = "MATERIALS" Then
            For y = 2 To 500
                Set mat = Nothing
                z = x + y
                mat.ID = Val(Sheets("Materials").Range("B" & z))
                If mat.ID > 0 Then
                    mat.Description = Sheets("Materials").Range("C" & z)
                    MaterialCol.Add mat, mat.Description

                End If
            Next y
            x = 4
        End If
    
    Next x
    


End Sub

Public Sub loadSCAC(ByRef ScacCol As Collection)
 Dim car As New carrier
 
 For x = 3 To 500
    
    Set car = Nothing
    
    If Len(Sheets("Carrier Rates").Range("B" & x)) > 0 And UCase(Sheets("Carrier Rates").Range("B" & x)) <> "Carrier Rates" And Sheets("Carrier Rates").Range("B" & x) <> "SCAC" Then
        car.scac = Sheets("Carrier Rates").Range("B" & x)
        car.Tender = Sheets("Carrier Rates").Range("E" & x)
        car.TendersUp = Sheets("Carrier Rates").Range("F" & x)
        car.Name = Sheets("Carrier Rates").Range("C" & x)
        car.DBA = Sheets("Carrier Rates").Range("D" & x)
        car.DotNo = Sheets("Carrier Rates").Range("G" & x)
        car.MCNo = Sheets("Carrier Rates").Range("H" & x)
        car.Phone = Sheets("Carrier Rates").Range("I" & x)
        car.InvName = Sheets("Carrier Rates").Range("J" & x)
        car.InvPhone = Sheets("Carrier Rates").Range("K" & x)
        car.InvExt = Sheets("Carrier Rates").Range("L" & x)
        car.TenderName = Sheets("Carrier Rates").Range("M" & x)
        car.TenderPhone = Sheets("Carrier Rates").Range("N" & x)
        car.TenderExt = Sheets("Carrier Rates").Range("O" & x)
        car.TenderAddress = Sheets("Carrier Rates").Range("P" & x)
        'q is a calc column
        car.PhmsaNo = Sheets("Carrier Rates").Range("R" & x)
        car.PhmsaExpDt = Sheets("Carrier Rates").Range("S" & x)
        't is calc column
        car.EPANo = Sheets("Carrier Rates").Range("U" & x)
        car.EPAExpDt = Sheets("Carrier Rates").Range("V" & x)
        'w is calc column
        car.FMCSANo = Sheets("Carrier Rates").Range("X" & x)
        car.FMSCAExpDt = Sheets("Carrier Rates").Range("Y" & x)
        car.MCEP = Sheets("Carrier Rates").Range("Z" & x)
        car.Team = Sheets("Carrier Rates").Range("AA" & x)
        car.GenFactor = Sheets("Carrier Rates").Range("AC" & x)
        
        
        car.HazFactor = Sheets("Carrier Rates").Range("AD" & x)
        
        car.RCRAFactor = Sheets("Carrier Rates").Range("AE" & x)
        
        
        car.LLWFactor = Sheets("Carrier Rates").Range("AF" & x)
        car.MllWFactor = Sheets("Carrier Rates").Range("AG" & x)
        car.SNFFactor = Sheets("Carrier Rates").Range("AH" & x)
        car.DetWPuRate = Sheets("Carrier Rates").Range("AI" & x)
        car.DetWPu1NonClearMax = Sheets("Carrier Rates").Range("AJ" & x)
        car.detWPu2NonClearMax = Sheets("Carrier Rates").Range("AK" & x)
        car.detWPu1ClearMax = Sheets("Carrier Rates").Range("AL" & x)
        car.detwPU2ClearMax = Sheets("Carrier Rates").Range("AM" & x)
        car.LO1NonClearRate = Sheets("Carrier Rates").Range("AN" & x)
        car.LO2NonClearRate = Sheets("Carrier Rates").Range("AO" & x)
        car.LO1ClearRate = Sheets("Carrier Rates").Range("AP" & x)
        car.LO2ClearRate = Sheets("Carrier Rates").Range("AQ" & x)
        car.detWOPowerRate = Sheets("Carrier Rates").Range("AR" & x)
        car.trlstgRATE = Sheets("Carrier Rates").Range("AS" & x)
        car.eonu1RATE = Sheets("Carrier Rates").Range("AT" & x)
        car.eonu2RATE = Sheets("Carrier Rates").Range("AU" & x)
        car.Drvr1nonclrFAC = Sheets("Carrier Rates").Range("AV" & x)
        car.dvr1nonclrMIN = Sheets("Carrier Rates").Range("AW" & x)
        car.drvr2nonclrFAC = Sheets("Carrier Rates").Range("AX" & x)
        car.drvr2nonclrMIN = Sheets("Carrier Rates").Range("AY" & x)
        car.drvr1clrFAC = Sheets("Carrier Rates").Range("AZ" & x)
        car.drvr1clrMIN = Sheets("Carrier Rates").Range("BA" & x)
        car.drvr2clrFAC = Sheets("Carrier Rates").Range("BB" & x)
        car.drvr2clrMIN = Sheets("Carrier Rates").Range("BC" & x)
        car.stopRate = Sheets("Carrier Rates").Range("BD" & x)
        car.maxstops = Sheets("Carrier Rates").Range("BE" & x)
        car.tarpRate = Sheets("Carrier Rates").Range("BF" & x)
        car.sigsvcRATE = Sheets("Carrier Rates").Range("BG" & x)
        car.holRATE = Sheets("Carrier Rates").Range("BH" & x)
        car.holMIN = Sheets("Carrier Rates").Range("BI" & x)
        car.satTrakRate = Sheets("Carrier Rates").Range("BJ" & x)
        car.hazRATE = Sheets("Carrier Rates").Range("BK" & x)
        car.hrcqFAC = Sheets("Carrier Rates").Range("BL" & x)
        car.hrcqMIN = Sheets("Carrier Rates").Range("BM" & x)
        car.hrcqMAX = Sheets("Carrier Rates").Range("BN" & x)
        car.exUseRate = Sheets("Carrier Rates").Range("BO" & x)
        car.permtRATE = Sheets("Carrier Rates").Range("BP" & x)
        car.ow85FAC = Sheets("Carrier Rates").Range("BQ" & x)
        car.ow85MIN = Sheets("Carrier Rates").Range("BR" & x)
        car.ow10FAC = Sheets("Carrier Rates").Range("BS" & x)
        car.ow10MIN = Sheets("Carrier Rates").Range("BT" & x)
        car.ow12FAC = Sheets("Carrier Rates").Range("BU" & x)
        car.ow12MIN = Sheets("Carrier Rates").Range("BV" & x)
        car.ow13FAC = Sheets("Carrier Rates").Range("BW" & x)
        car.ow13MIN = Sheets("Carrier Rates").Range("BX" & x)
        car.ow14FAC = Sheets("Carrier Rates").Range("BY" & x)
        car.ow14MIN = Sheets("Carrier Rates").Range("BZ" & x)
        car.ow15FAC = Sheets("Carrier Rates").Range("CA" & x)
        car.ow15MIN = Sheets("Carrier Rates").Range("CB" & x)
        car.ow16FAC = Sheets("Carrier Rates").Range("CC" & x)
        car.ow16MIN = Sheets("Carrier Rates").Range("CD" & x)
        car.ow17FAC = Sheets("Carrier Rates").Range("CE" & x)
        car.ow17MIN = Sheets("Carrier Rates").Range("CF" & x)
        car.oh14FAC = Sheets("Carrier Rates").Range("CG" & x)
        car.oh14MIN = Sheets("Carrier Rates").Range("CH" & x)
        car.oh145FAC = Sheets("Carrier Rates").Range("CI" & x)
        car.oh145MIN = Sheets("Carrier Rates").Range("CJ" & x)
        car.oh15FAC = Sheets("Carrier Rates").Range("CK" & x)
        car.oh15MIN = Sheets("Carrier Rates").Range("CL" & x)
        car.oh16FAC = Sheets("Carrier Rates").Range("CM" & x)
        car.oh16MIN = Sheets("Carrier Rates").Range("CN" & x)
        car.oh17FAC = Sheets("Carrier Rates").Range("CO" & x)
        car.oh17MIN = Sheets("Carrier Rates").Range("CP" & x)
        car.ol53FAC = Sheets("Carrier Rates").Range("CQ" & x)
        car.ol53MIN = Sheets("Carrier Rates").Range("CR" & x)
        car.ol55FAC = Sheets("Carrier Rates").Range("CS" & x)
        car.ol55MIN = Sheets("Carrier Rates").Range("CT" & x)
        car.ol60FAC = Sheets("Carrier Rates").Range("CU" & x)
        car.ol60MIN = Sheets("Carrier Rates").Range("CV" & x)
        car.ol65FAC = Sheets("Carrier Rates").Range("CW" & x)
        car.ol65MIN = Sheets("Carrier Rates").Range("CX" & x)
        car.nyliRATE = Sheets("Carrier Rates").Range("CY" & x)

        car.TexasNo = Sheets("Carrier Rates").Range("CZ" & x)
        car.TexasPermitDt = Sheets("Carrier Rates").Range("DA" & x)

        
        ScacCol.Add car, car.scac
        
        
    End If
Next x
End Sub



Public Sub loadEquiptment(equiptmentCol As Collection)
 
 Set equiptmentCol = New Collection
 Dim eq As New Equipt
 
  For x = 3 To 500
        Dim Loc As String
        Set eq = Nothing
        Loc = "E" & x
        If Len(Sheets("EquipmentType").Range(Loc)) > 0 Then
            'need to remove the header row
            If IsNumeric(Sheets("EquipmentType").Range(Loc)) Then
                eq.ID = Sheets("EquipmentType").Range(Loc)
                eq.Description = Sheets("EquipmentType").Range("F" & x)
                eq.Tarp = Sheets("EquipmentType").Range("H" & x)
                equiptmentCol.Add eq, eq.Description
            End If
        End If
             
    Next x
End Sub

Public Sub loadLocation(LocationCol As Collection)
 Dim found As Boolean
 found = False
 Dim CoL As String
 Dim ColPos As Integer
 Dim foundRow As Boolean
 foundRow = False
 
     Dim Loc As New Origin
           
 
            For y = 4 To 700  'support up to 700 locations
                 Set Loc = Nothing
                 
                 Loc.ID = Val(Sheets("OriginDestination").Range("C" & y))
                If Loc.ID > 0 Then
                    Loc.Location = Sheets("OriginDestination").Range("B" & y)
                    Loc.NYLIAllowed = Sheets("OriginDestination").Range("E" & y)
                    Loc.TexasPermit = Val(Sheets("OriginDestination").Range("F" & y))
                    LocationCol.Add Loc, Loc.Location
                End If
            Next y

End Sub


Public Sub LoadCompany(ByRef CompanyCol As Collection)
 
 
 
 
    For y = 4 To 700  'support up to 700 companies
        Dim Loc As New Company
        Loc.Acroymn = Sheets("Company").Range("C" & y)
                If Len(Loc.Acroymn) > 0 Then
                    Loc.Name = Sheets("Company").Range("B" & y)
                    CompanyCol.Add Loc, Loc.Name

                End If
            Next y

End Sub

Public Sub loadDriverRate(ByRef DHRTCol As Collection)
    
    For y = 3 To 100  'support up to 100 of theses
        Dim DR As New DHRT
        DR.Description = Sheets("DHRT").Range("B" & y)
        If Len(DR.Description) > 0 Then
            DR.DriverCnt = Sheets("DHRT").Range("C" & y)
            DHRTCol.Add DR, DR.Description

        End If
    Next y

End Sub


Public Sub loadFixedRates(ByRef FixedRateCol As Collection)
    
    Dim tLstSCAC As String
    Dim tLstEq As String
    tLstSCAC = ""
    tLstEq = ""
    Dim FR As New FixedRates
    For y = 5 To 10000  'support up to 100 of theses
        If (Sheets("Equipment Rates").Range("C" & y) <> tLstSCAC Or Sheets("Equipment Rates").Range("D" & y) <> tLstEq) And Len(Sheets("Equipment Rates").Range("C" & y)) > 0 Then
          
            Set FR = Nothing
            
            FR.scac = Sheets("Equipment Rates").Range("C" & y)
            'set last seen scac
            tLstSCAC = FR.scac
            
            FR.Equipment = Sheets("Equipment Rates").Range("D" & y)
            tLstEq = FR.Equipment
            
            FR.tempFactor = Sheets("Equipment Rates").Range("AG" & y)
            FR.tempMinCharge = Sheets("Equipment Rates").Range("AH" & y)
            
            FR.baseCPM = Sheets("Equipment Rates").Range("BI" & y)
            FR.genMC = Sheets("Equipment Rates").Range("BJ" & y)
            FR.HAZMC = Sheets("Equipment Rates").Range("BK" & y)
            FR.rcraMC = Sheets("Equipment Rates").Range("BL" & y)
            FR.llwMC = Sheets("Equipment Rates").Range("BM" & y)
            FR.mLLwMC = Sheets("Equipment Rates").Range("BN" & y)
            FR.snfMC = Sheets("Equipment Rates").Range("BO" & y)
            
            FR.dhCPM = Sheets("Equipment Rates").Range("BY" & y)
            
            FR.Min1dh = Sheets("Equipment Rates").Range("BZ" & y)
            FR.min2sh = Sheets("Equipment Rates").Range("CA" & y)
            
            FR.MTdhCPM = Sheets("Equipment Rates").Range("DF" & y)
            FR.MT1dhMin = Sheets("Equipment Rates").Range("DG" & y)
            FR.MT2dhMin = Sheets("Equipment Rates").Range("DH" & y)
            
            Debug.Print "KEY " & y & ":" & FR.scac & "-" & FR.Equipment
            FixedRateCol.Add FR, FR.scac & "-" & FR.Equipment
            
            
            
        End If
    Next y

End Sub

Public Sub loadState2State(ByRef St2St1 As Collection)

    Dim org As Integer
    Dim dest As Integer
    Dim x As Long
    Dim LocCnt As Integer
    
    
    Dim destLoc(500, 2) As String
    LocCnt = 1
    For x = 65 To 90
        If Len(Sheets("S2S Rates").Range(Chr(x) & "2")) > 0 Then
            If Sheets("S2S Rates").Range(Chr(x) & "2") <> "SCAC" And Sheets("S2S Rates").Range(Chr(x) & "2") <> "Equipment Number" And Sheets("S2S Rates").Range(Chr(x) & "2") <> "Location Number" Then
                destLoc(LocCnt, 1) = Sheets("S2S Rates").Range(Chr(x) & "2")
                destLoc(LocCnt, 2) = Chr(x)
                ThisWorkbook.LocationCol(Sheets("S2S Rates").Range(Chr(x) & "2")).RateColumn = Chr(x)
                ThisWorkbook.LocationCol(Sheets("S2S Rates").Range(Chr(x) & "2")).Offset = LocCnt - 1
                LocCnt = LocCnt + 1
            End If
        End If
        
        
    Next x
    For y = 65 To 72
    
        For x = 65 To 90
            Debug.Print x, y
            If Len(Sheets("S2S Rates").Range(Chr(y) & Chr(x) & "2")) > 0 Then
                If Sheets("S2S Rates").Range(Chr(y) & Chr(x) & "2") <> "SCAC" And Sheets("S2S Rates").Range(Chr(y) & Chr(x) & "2") <> "equipNO" Then
                    destLoc(LocCnt, 1) = Sheets("S2S Rates").Range(Chr(y) & Chr(x) & "2")
                    destLoc(LocCnt, 2) = Chr(y) & Chr(x)
                    ThisWorkbook.LocationCol(Sheets("S2S Rates").Range(Chr(y) & Chr(x) & "2")).RateColumn = Chr(y) & Chr(x)
                    ThisWorkbook.LocationCol(Sheets("S2S Rates").Range(Chr(y) & Chr(x) & "2")).Offset = LocCnt - 1
                    LocCnt = LocCnt + 1
                    
                End If
            End If
        
        Next x
    Next y
    Dim rate As New State2State
            
    Dim tSCAC As String
    Dim tEqpt As String
    tSCAC = ""
    tEqpt = ""
    For x = 5 To 60000
    
            If Sheets("S2S Rates").Range("B" & x) <> tSCAC Or Sheets("S2S Rates").Range("C" & x) <> tEqpt And Len(Sheets("S2S Rates").Range("B" & x)) > 0 Then
                Set rate = Nothing
                rate.scac = Sheets("S2S Rates").Range("B" & x)
                tSCAC = Sheets("S2S Rates").Range("B" & x)
                rate.Equiptment = Sheets("S2S Rates").Range("C" & x)
                tEqpt = rate.Equiptment
                rate.FirstRow = x
                St2St1.Add rate, rate.scac & "-" & rate.Equiptment
         
            End If
            
    
       
    Next x
    
    
End Sub

Public Sub loadLocalEquiptment(LocEquiptmentCol As Collection)
 
 Set LocEquiptmentCol = New Collection
 Dim eq As New LocEquipt
 
  For x = 4 To 500
        Dim Loc As String
        Set eq = Nothing
        Loc = "C" & x
        If Len(Sheets("Local Lists").Range(Loc)) > 0 Then
            'need to remove the header row
            'If IsNumeric(Sheets("EquipmentType").Range(Loc)) Then
                'eq.ID = Sheets("EquipmentType").Range(Loc)
                eq.Description = Sheets("EquipmentType").Range("F" & x)
                'eq.Tarp = Sheets("EquipmentType").Range("H" & x)
                equiptmentCol.Add eq, eq.Description
            'End If
        End If
             
    Next x
End Sub

Public Sub LoadLocalRates(locRateCol As Collection)
Set locRateCol = New Collection
Dim newLR As New LocalRates

For x = 4 To 5000
    Set newLR = Nothing
    If Len(Sheets("Local Rates").Range("H" & x)) > 0 Then
    
        newLR.Location = Sheets("Local Rates").Range("C" & x)
        newLR.scac = Sheets("Local Rates").Range("D" & x)
        newLR.EqID = Sheets("Local Rates").Range("E" & x)
        newLR.Equipment = Sheets("Local Rates").Range("F" & x)
        newLR.localPhone = Sheets("Local Rates").Range("G" & x)
        newLR.Portal = Sheets("Local Rates").Range("H" & x)
        newLR.RadiusMax = Sheets("Local Rates").Range("I" & x)
        newLR.MinHours = Sheets("Local Rates").Range("J" & x)
        newLR.maxHours = Sheets("Local Rates").Range("K" & x)
        newLR.GFDrv1PerHr = Sheets("Local Rates").Range("L" & x)
        newLR.GFDrv2PerHr = Sheets("Local Rates").Range("M" & x)
        newLR.NRDrv1PerHr = Sheets("Local Rates").Range("N" & x)
        newLR.NRDrv2PerHr = Sheets("Local Rates").Range("O" & x)
        newLR.RCRADrv1PerHr = Sheets("Local Rates").Range("P" & x)
        newLR.RCRADrv2PerHr = Sheets("Local Rates").Range("Q" & x)
        newLR.HMDrv1PerHr = Sheets("Local Rates").Range("R" & x)
        newLR.HMDrv2PerHr = Sheets("Local Rates").Range("S" & x)
        newLR.LLWDrv1PerHr = Sheets("Local Rates").Range("T" & x)
        newLR.LLWDrv2PerHr = Sheets("Local Rates").Range("U" & x)
        newLR.MLLWDrv1PerHr = Sheets("Local Rates").Range("V" & x)
        newLR.MLLWDrv2PerHr = Sheets("Local Rates").Range("W" & x)
        newLR.SNFDrv1PerHr = Sheets("Local Rates").Range("X" & x)
        newLR.SNFDrv2PerHr = Sheets("Local Rates").Range("Y" & x)
        newLR.singleClear = Sheets("Local Rates").Range("Z" & x)
        newLR.doubleClear = Sheets("Local Rates").Range("AA" & x)
        
        Debug.Print newLR.Location & "/" & newLR.scac & "/" & newLR.Equipment & "/" & newLR.Portal
        
        locRateCol.Add newLR, newLR.Location & "/" & newLR.scac & "/" & newLR.Equipment & "/" & newLR.Portal
        
        
    End If
Next x

End Sub
Attribute VB_Name = "Module2"
Sub LocalCalc_Click()
    Dim Location As String
    Dim Equipt As String
    Dim DriverType As String
    Dim MatType As String
    Dim Hours As Double
    Dim FuelSurCharge As String
    
    ThisWorkbook.Workbook_Open
    
    
  Sheets("Local Verification").Unprotect Password:="doeLEE"
    resetLocalInv
    
    Dim x As Integer
    
    For x = 1 To 10
    Sheets("Local Entry").Range("E" & 15 + x) = ""
    Sheets("Local Entry").Range("F" & 15 + x) = ""
    Sheets("Local Entry").Range("G" & 15 + x) = ""
    Sheets("Local Entry").Range("H" & 15 + x) = ""
    Sheets("Local Entry").Range("I" & 15 + x) = ""
    Sheets("Local Entry").Range("J" & 15 + x) = ""
    Sheets("Local Entry").Range("K" & 15 + x) = ""
    Sheets("Local Entry").Range("L" & 15 + x) = ""
    Sheets("Local Entry").Range("M" & 15 + x) = ""
    Sheets("Local Entry").Range("N" & 15 + x) = ""
    Sheets("Local Entry").Range("O" & 15 + x) = ""
    Sheets("Local Entry").Range("P" & 15 + x) = ""
    Sheets("Local Entry").Shapes(1).Visible = True
    Sheets("Local Entry").Shapes(2).Visible = True
    Sheets("Local Entry").Shapes(3).Visible = False
    Sheets("Local Entry").Shapes(4).Visible = False
    Sheets("Local Entry").Shapes(5).Visible = False
    Sheets("Local Entry").Shapes(6).Visible = False
    Sheets("Local Entry").Shapes(7).Visible = False
    Sheets("Local Entry").Shapes(8).Visible = False
    Sheets("Local Entry").Shapes(9).Visible = False
    Sheets("Local Entry").Shapes(10).Visible = False
    Sheets("Local Entry").Shapes(11).Visible = False
    Sheets("Local Entry").Shapes(12).Visible = False
    
   Next
   Set ThisWorkbook.localResults = Nothing
   Set ThisWorkbook.localResults = New Collection
   
   
   Location = Sheets("Local Entry").Range("F8")
   Equipt = Sheets("Local Entry").Range("F9")
   DriverType = Sheets("Local Entry").Range("F10")
   MatType = Sheets("Local Entry").Range("F11")
   FuelSurCharge = Sheets("Local Entry").Range("F13")
   
   Dim attempt As Integer
   Dim LocRate As New LocalRates
   Dim tSkipCarrier As Boolean
   tSkipCarrier = False
   Dim locTotal As New RateCompareLocal
   
   For attempt = 1 To ThisWorkbook.locRateCol.Count
        Hours = Sheets("Local Entry").Range("F12")
   
        Set LocRate = ThisWorkbook.locRateCol(attempt)
        Set locTotal = Nothing
        tSkipCarrier = False
        If LocRate.Location = Location Then
            If LocRate.Equipment = Equipt Then
                locTotal.carrier = ThisWorkbook.ScacCol(LocRate.scac).Name
                locTotal.scac = LocRate.scac
                locTotal.localPhone = LocRate.localPhone
                locTotal.ratetender = ThisWorkbook.ScacCol(LocRate.scac).Tender & "-" & ThisWorkbook.ScacCol(LocRate.scac).TendersUp
                locTotal.portalLocation = LocRate.Portal
                locTotal.maxHours = LocRate.maxHours
                locTotal.MinHours = LocRate.MinHours
                locTotal.MaxRadiusMiles = LocRate.RadiusMax
                
                
                If Hours < Val(LocRate.MinHours) Then
                    Hours = Val(LocRate.MinHours)
                End If
                If Hours > Val(LocRate.maxHours) And Len(LocRate.maxHours) > 0 Then
                    tSkipCarrier = True
                End If
                
                If Not tSkipCarrier Then
                    Select Case MatType
                    
                    Case "General Freight"
                        Select Case DriverType
                        Case "Single, Uncleared"
                            If Len(LocRate.GFDrv1PerHr) = 0 Then tSkipCarrier = True
                            
                            locTotal.costPerHour = Val(LocRate.GFDrv1PerHr)
                        Case "Single, Cleared"
                            If Len(LocRate.GFDrv1PerHr) = 0 Then tSkipCarrier = True
                            
                            locTotal.costPerHour = Val(LocRate.GFDrv1PerHr)
                            locTotal.costPerHour = locTotal.costPerHour + Val(LocRate.singleClear)
                            If Len(LocRate.singleClear) = 0 Then
                                tSkipCarrier = True
                           End If
                        Case "Team, Uncleared"
                            If Len(LocRate.GFDrv2PerHr) = 0 Then tSkipCarrier = True
                             
                             locTotal.costPerHour = Val(LocRate.GFDrv2PerHr)
                        
                        Case "Team, Cleared"
                            If Len(LocRate.GFDrv1PerHr) = 0 Then tSkipCarrier = True
                           
                           locTotal.costPerHour = Val(LocRate.GFDrv2PerHr)
                            locTotal.costPerHour = locTotal.costPerHour + Val(LocRate.doubleClear)
                            If Len(LocRate.doubleClear) = 0 Then
                                tSkipCarrier = True
                           End If
                        End Select
                        
                     Case "Hazardous, Non-Radioactive"
                        Select Case DriverType
                        Case "Single, Uncleared"
                             If Len(LocRate.NRDrv1PerHr) = 0 Then tSkipCarrier = True
                           
                            locTotal.costPerHour = Val(LocRate.NRDrv1PerHr)
                        Case "Single, Cleared"
                            If Len(LocRate.NRDrv1PerHr) = 0 Then tSkipCarrier = True
                            
                            locTotal.costPerHour = Val(LocRate.NRDrv1PerHr)
                            locTotal.costPerHour = locTotal.costPerHour + Val(LocRate.singleClear)
                            If Len(LocRate.singleClear) = 0 Then
                                tSkipCarrier = True
                           End If
                        Case "Team, Uncleared"
                            If Len(LocRate.NRDrv2PerHr) = 0 Then tSkipCarrier = True
                             
                             locTotal.costPerHour = Val(LocRate.NRDrv2PerHr)
                        
                        Case "Team, Cleared"
                            If Len(LocRate.NRDrv2PerHr) = 0 Then tSkipCarrier = True
                           
                           locTotal.costPerHour = Val(LocRate.NRDrv2PerHr)
                            locTotal.costPerHour = locTotal.costPerHour + Val(LocRate.doubleClear)
                            If Len(LocRate.doubleClear) = 0 Then
                                tSkipCarrier = True
                           End If
                        End Select
                     Case "RCRA Waste"
                            Select Case DriverType
                        Case "Single, Uncleared"
                            If Len(LocRate.RCRADrv1PerHr) = 0 Then tSkipCarrier = True
                            
                            locTotal.costPerHour = Val(LocRate.RCRADrv1PerHr)
                        Case "Single, Cleared"
                            If Len(LocRate.RCRADrv1PerHr) = 0 Then tSkipCarrier = True
                            
                            locTotal.costPerHour = Val(LocRate.RCRADrv1PerHr)
                            locTotal.costPerHour = locTotal.costPerHour + Val(LocRate.singleClear)
                            If Len(LocRate.singleClear) = 0 Then
                                tSkipCarrier = True
                           End If
                        Case "Team, Uncleared"
                            If Len(LocRate.RCRADrv2PerHr) = 0 Then tSkipCarrier = True
                             
                             locTotal.costPerHour = Val(LocRate.RCRADrv2PerHr)
                        
                        Case "Team, Cleared"
                            If Len(LocRate.RCRADrv2PerHr) = 0 Then tSkipCarrier = True
                           
                           locTotal.costPerHour = Val(LocRate.RCRADrv2PerHr)
                            locTotal.costPerHour = locTotal.costPerHour + Val(LocRate.doubleClear)
                            If Len(LocRate.doubleClear) = 0 Then
                                tSkipCarrier = True
                           End If
                        End Select
                       
                     Case "Hazardous, Radioactive"
                          Select Case DriverType
                        Case "Single, Uncleared"
                            If Len(LocRate.HMDrv1PerHr) = 0 Then tSkipCarrier = True
                            
                            locTotal.costPerHour = Val(LocRate.HMDrv1PerHr)
                        Case "Single, Cleared"
                            If Len(LocRate.HMDrv1PerHr) = 0 Then tSkipCarrier = True
                            
                            locTotal.costPerHour = Val(LocRate.HMDrv1PerHr)
                            locTotal.costPerHour = locTotal.costPerHour + Val(LocRate.singleClear)
                            If Len(LocRate.singleClear) = 0 Then
                                tSkipCarrier = True
                           End If
                        Case "Team, Uncleared"
                            If Len(LocRate.HMDrv2PerHr) = 0 Then tSkipCarrier = True
                             
                             locTotal.costPerHour = Val(LocRate.HMDrv2PerHr)
                        
                        Case "Team, Cleared"
                            If Len(LocRate.HMDrv2PerHr) = 0 Then tSkipCarrier = True
                           
                           locTotal.costPerHour = Val(LocRate.HMDrv2PerHr)
                            locTotal.costPerHour = locTotal.costPerHour + Val(LocRate.doubleClear)
                            If Len(LocRate.doubleClear) = 0 Then
                                tSkipCarrier = True
                           End If
                        End Select
                         
                     Case "Low Level Waste"
                            Select Case DriverType
                        Case "Single, Uncleared"
                            If Len(LocRate.LLWDrv1PerHr) = 0 Then tSkipCarrier = True
                            
                            locTotal.costPerHour = Val(LocRate.LLWDrv1PerHr)
                        Case "Single, Cleared"
                            If Len(LocRate.LLWDrv1PerHr) = 0 Then tSkipCarrier = True
                            
                            locTotal.costPerHour = Val(LocRate.LLWDrv1PerHr)
                            locTotal.costPerHour = locTotal.costPerHour + Val(LocRate.singleClear)
                            If Len(LocRate.singleClear) = 0 Then
                                tSkipCarrier = True
                           End If
                        Case "Team, Uncleared"
                            If Len(LocRate.LLWDrv2PerHr) = 0 Then tSkipCarrier = True
                             
                             locTotal.costPerHour = Val(LocRate.LLWDrv2PerHr)
                        
                        Case "Team, Cleared"
                            If Len(LocRate.LLWDrv2PerHr) = 0 Then tSkipCarrier = True
                           
                           locTotal.costPerHour = Val(LocRate.LLWDrv2PerHr)
                            locTotal.costPerHour = locTotal.costPerHour + Val(LocRate.doubleClear)
                            If Len(LocRate.doubleClear) = 0 Then
                                tSkipCarrier = True
                           End If
                        End Select
                       
                     Case "Mixed Low Level Waste"
                            Select Case DriverType
                        Case "Single, Uncleared"
                            If Len(LocRate.MLLWDrv1PerHr) = 0 Then tSkipCarrier = True
                            
                            locTotal.costPerHour = Val(LocRate.MLLWDrv1PerHr)
                        Case "Single, Cleared"
                            If Len(LocRate.MLLWDrv1PerHr) = 0 Then tSkipCarrier = True
                            
                            locTotal.costPerHour = Val(LocRate.MLLWDrv1PerHr)
                            locTotal.costPerHour = locTotal.costPerHour + Val(LocRate.singleClear)
                            If Len(LocRate.singleClear) = 0 Then
                                tSkipCarrier = True
                           End If
                        Case "Team, Uncleared"
                            If Len(LocRate.MLLWDrv2PerHr) = 0 Then tSkipCarrier = True
                             
                             locTotal.costPerHour = Val(LocRate.MLLWDrv2PerHr)
                        
                        Case "Team, Cleared"
                            If Len(LocRate.MLLWDrv2PerHr) = 0 Then tSkipCarrier = True
                           
                           locTotal.costPerHour = Val(LocRate.MLLWDrv2PerHr)
                            locTotal.costPerHour = locTotal.costPerHour + Val(LocRate.doubleClear)
                            If Len(LocRate.doubleClear) = 0 Then
                                tSkipCarrier = True
                           End If
                        End Select
                          
                     Case "Spent Nuclear Fuel"
                            
                            Select Case DriverType
                                Case "Single, Uncleared"
                                      If Len(LocRate.SNFDrv1PerHr) = 0 Then tSkipCarrier = True
                          
                                    locTotal.costPerHour = Val(LocRate.SNFDrv1PerHr)
                                Case "Single, Cleared"
                                      If Len(LocRate.SNFDrv1PerHr) = 0 Then tSkipCarrier = True
                                    
                                    locTotal.costPerHour = Val(LocRate.SNFDrv1PerHr)
                                    locTotal.costPerHour = locTotal.costPerHour + Val(LocRate.singleClear)
                                    If Len(LocRate.singleClear) = 0 Then
                                        tSkipCarrier = True
                                   End If
                                Case "Team, Uncleared"
                                      If Len(LocRate.SNFDrv2PerHr) = 0 Then tSkipCarrier = True
                           
                                     locTotal.costPerHour = Val(LocRate.SNFDrv2PerHr)
                                
                                Case "Team, Cleared"
                            If Len(LocRate.SNFDrv2PerHr) = 0 Then tSkipCarrier = True
                                   
                                   locTotal.costPerHour = Val(LocRate.SNFDrv2PerHr)
                                    locTotal.costPerHour = locTotal.costPerHour + Val(LocRate.doubleClear)
                                    If Len(LocRate.doubleClear) = 0 Then
                                        tSkipCarrier = True
                                   End If
                        End Select
                       
                        
                    End Select
                    
                    If locTotal.costPerHour > 0 And Not tSkipCarrier Then
                        locTotal.HourlySubTotal = locTotal.costPerHour * Hours
                        locTotal.hoursUsed = Hours
                        locTotal.FuelSurchagePerc = FuelSurCharge
                        locTotal.FuelSurChargeCost = locTotal.HourlySubTotal * locTotal.FuelSurchagePerc
                        locTotal.totalCost = locTotal.HourlySubTotal + locTotal.FuelSurChargeCost
                                         
                        ThisWorkbook.localResults.Add locTotal, locTotal.scac
                    End If
                    
                End If
                
                
                
            
            Else 'wrong equipt
                tSkipCarrier = True
            End If
        Else 'not the right location
            tSkipCarrier = True
        End If
        
        
   
   Next attempt
   resetLocalInv
   'need to sort
    For i = 1 To ThisWorkbook.localResults.Count - 1
        For j = i + 1 To ThisWorkbook.localResults.Count
            If Val(ThisWorkbook.localResults(i).totalCost) > Val(ThisWorkbook.localResults(j).totalCost) Then
                'store the lesser item
               Set vTemp = ThisWorkbook.localResults(j)
                'remove the lesser item
               ThisWorkbook.localResults.Remove j
                're-add the lesser item before the
               'greater Item
               ThisWorkbook.localResults.Add vTemp, vTemp.scac, i
            End If
        Next j
    Next i
    
    'now populate the first 10
    If ThisWorkbook.localResults.Count < 10 Then
        tTop = ThisWorkbook.localResults.Count
    Else
        tTop = 10
    End If
    
    For x = 1 To tTop
        Sheets("Local Entry").Range("E" & 15 + x) = ThisWorkbook.localResults(x).scac
        Sheets("Local Entry").Range("F" & 15 + x) = ThisWorkbook.localResults(x).carrier
        Sheets("Local Entry").Range("G" & 15 + x) = ThisWorkbook.localResults(x).ratetender
        Sheets("Local Entry").Range("H" & 15 + x) = ThisWorkbook.localResults(x).localPhone
        Sheets("Local Entry").Range("I" & 15 + x) = ThisWorkbook.localResults(x).portalLocation
        Sheets("Local Entry").Range("J" & 15 + x) = ThisWorkbook.localResults(x).MaxRadiusMiles
        Sheets("Local Entry").Range("K" & 15 + x) = ThisWorkbook.localResults(x).costPerHour
        Sheets("Local Entry").Range("L" & 15 + x) = ThisWorkbook.localResults(x).MinHours
        Sheets("Local Entry").Range("M" & 15 + x) = ThisWorkbook.localResults(x).maxHours
        Sheets("Local Entry").Range("N" & 15 + x) = ThisWorkbook.localResults(x).HourlySubTotal
         Sheets("Local Entry").Range("O" & 15 + x) = ThisWorkbook.localResults(x).FuelSurChargeCost
        Sheets("Local Entry").Range("P" & 15 + x) = ThisWorkbook.localResults(x).totalCost
        Sheets("Local Entry").Shapes(x + 2).Visible = True
    Next x
    
     Sheets("Local Verification").Protect Password:="doeLEE"
 
    
   
End Sub
Sub Calc_Click()
  
  Dim eqptID As Integer
        Dim OrgID As Integer
        Dim DestID As Integer
        Dim tMatID As Integer
        
        Dim baseCost As Double
        Dim tmiles As Integer
        Dim tFMCSA As Boolean
        Dim tDrivers As String
        Dim tFuelSurCharge As Double
        Dim tFuelCharge As Double
        
        Dim CarrierSkip As Boolean
        Dim tHwyRteCtrl As Boolean
        
        Dim DoLineHaul As Boolean
        Dim NYLIOrg As Boolean
        Dim NYLIDest As Boolean
                
        Dim fmsca As Boolean
        Dim rteCtrl As Boolean
        Dim tTotalFuel As Double
        
        ThisWorkbook.Workbook_Open
        
        cleanInvoice
        
        Sheets("Cost Comparison").Unprotect Password:="doeLEE"
        
        'clear rates
        For x = 1 To 15
            Sheets("Cost Comparison").Range("N" & 20 + x) = ""
            Sheets("Cost Comparison").Range("Q" & 20 + x) = ""
            Sheets("Cost Comparison").Range("T" & 20 + x) = ""
            Sheets("Cost Comparison").Range("U" & 20 + x) = ""
           ' Sheets("Cost Comparison").Range("V" & 20 + x) = ""
            Sheets("Cost Comparison").Range("W" & 20 + x) = ""
            
        Next x
        Sheet25.Shapes("Button 1").Visible = False
        Sheet25.Shapes("Button 2").Visible = False
        Sheet25.Shapes("Button 3").Visible = False
        Sheet25.Shapes("Button 4").Visible = False
        Sheet25.Shapes("Button 5").Visible = False
        Sheet25.Shapes("Button 6").Visible = False
        Sheet25.Shapes("Button 7").Visible = False
        Sheet25.Shapes("Button 8").Visible = False
        Sheet25.Shapes("Button 9").Visible = False
        Sheet25.Shapes("Button 10").Visible = False
        Sheet25.Shapes("Button 11").Visible = False
        Sheet25.Shapes("Button 12").Visible = False
        Sheet25.Shapes("Button 13").Visible = False
        Sheet25.Shapes("Button 14").Visible = False
        Sheet25.Shapes("Button 15").Visible = False
        
       ' Sheet25.Shapes("Button 1").Visible = True
       ' Sheet25.Shapes("Button 2").Visible = True
       ' Sheet25.Shapes("Button 3").Visible = True
       ' Sheet25.Shapes("Button 4").Visible = True
       ' Sheet25.Shapes("Button 5").Visible = True
       ' Sheet25.Shapes("Button 6").Visible = True
       ' Sheet25.Shapes("Button 7").Visible = True
       ' Sheet25.Shapes("Button 8").Visible = True
       ' Sheet25.Shapes("Button 9").Visible = True
       ' Sheet25.Shapes("Button 10").Visible = True
       ' Sheet25.Shapes("Button 11").Visible = True
       ' Sheet25.Shapes("Button 12").Visible = True
       ' Sheet25.Shapes("Button 13").Visible = True
       ' Sheet25.Shapes("Button 14").Visible = True
       ' Sheet25.Shapes("Button 15").Visible = True
        
        
        Sheet25.Shapes("Button 1").Left = 755.9167
        
        Sheet25.Shapes("Button 2").Left = 755.9167
        Sheet25.Shapes("Button 3").Left = 755.9167
        Sheet25.Shapes("Button 4").Left = 755.9167
        Sheet25.Shapes("Button 5").Left = 755.9167
        Sheet25.Shapes("Button 6").Left = 755.9167
        Sheet25.Shapes("Button 7").Left = 755.9167
        Sheet25.Shapes("Button 8").Left = 755.9167
        Sheet25.Shapes("Button 9").Left = 755.9167
        Sheet25.Shapes("Button 10").Left = 755.9167
        Sheet25.Shapes("Button 11").Left = 755.9167
        Sheet25.Shapes("Button 12").Left = 755.9167
        Sheet25.Shapes("Button 13").Left = 755.9167
        Sheet25.Shapes("Button 14").Left = 755.9167
        Sheet25.Shapes("Button 15").Left = 755.9167
        
        Sheet25.Shapes("Button 1").Top = 258.5834
        Sheet25.Shapes("Button 2").Top = Sheet25.Shapes("Button 1").Top + 25.2
        Sheet25.Shapes("Button 3").Top = Sheet25.Shapes("Button 2").Top + 25.2
        Sheet25.Shapes("Button 4").Top = Sheet25.Shapes("Button 3").Top + 25.2
        Sheet25.Shapes("Button 5").Top = Sheet25.Shapes("Button 4").Top + 25.2
        Sheet25.Shapes("Button 6").Top = Sheet25.Shapes("Button 5").Top + 25.2
        Sheet25.Shapes("Button 7").Top = Sheet25.Shapes("Button 6").Top + 25.2
        Sheet25.Shapes("Button 8").Top = Sheet25.Shapes("Button 7").Top + 25.2
        Sheet25.Shapes("Button 9").Top = Sheet25.Shapes("Button 8").Top + 25.2
        Sheet25.Shapes("Button 10").Top = Sheet25.Shapes("Button 9").Top + 25.2
        Sheet25.Shapes("Button 11").Top = Sheet25.Shapes("Button 10").Top + 25.2
        Sheet25.Shapes("Button 12").Top = Sheet25.Shapes("Button 11").Top + 25.2
        Sheet25.Shapes("Button 13").Top = Sheet25.Shapes("Button 12").Top + 25.2
        Sheet25.Shapes("Button 14").Top = Sheet25.Shapes("Button 13").Top + 25.2
        Sheet25.Shapes("Button 15").Top = Sheet25.Shapes("Button 14").Top + 25.2
        
        
        tFMCSA = False
        
        If UCase(Sheets("Entry Screen").Range("S20")) <> "NO" Then
            tFMCSA = True
        End If
        
        If UCase(Sheets("Entry Screen").Range("S17")) <> "NO" Then
            DoLineHaul = True
        End If
        
        
        tDrivers = ""
        tDrivers = Sheets("Entry Screen").Range("S26")
        
        Dim equptID As Integer
        eqptID = 0
        If Sheets("Entry Screen").Range("S18") <> "None Selected" Then
            equptID = ThisWorkbook.equiptmentCol(Sheets("Entry Screen").Range("S18")).ID
        End If

        If Sheets("Entry Screen").Range("S19") <> "None Selected" Then
            tMatID = ThisWorkbook.MaterialCol(Sheets("Entry Screen").Range("S19")).ID
        End If

        If UCase(Sheets("Entry Screen").Range("S20")) <> "NO" Then
            fmsca = True
        Else
            fmsca = False
        End If


        If UCase(Sheets("Entry Screen").Range("S21")) <> "NO" Then
            rteCtrl = True
        Else
            rteCtrl = False
        End If

        If Sheets("Entry Screen").Range("S22") <> "None Selected" Then
            OrgID = ThisWorkbook.LocationCol(Sheets("Entry Screen").Range("S22")).ID
        End If

        NYLIOrg = False
        NYLIDest = False
        
        If UCase(Sheets("Entry Screen").Range("S23")) <> "NO" Then
            NYLIOrg = True
        End If

        
        If Sheets("Entry Screen").Range("S24") <> "None Selected" Then
            DestID = ThisWorkbook.LocationCol(Sheets("Entry Screen").Range("S24")).ID
        End If
        
        If UCase(Sheets("Entry Screen").Range("S25")) <> "NO" Then
            NYLIDest = True
        End If

        
        If Sheets("Entry Screen").Range("S27") > 0 Then
            tmiles = Sheets("Entry Screen").Range("S27")
        End If
        
        tFuelCharge = Sheets("Entry Screen").Range("S28")
        
        Dim tThruIllinois As Boolean
        Dim tThruIndiana As Boolean
        Dim tThruIowa As Boolean
        Dim tThruMinn As Boolean
        Dim tThruMissouri As Boolean
        Dim tThruNeb As Boolean
        Dim tThruOhio As Boolean
        
        tThruIllinois = False
        tThruIndiana = False
        tThruIowa = False
        tThruMinn = False
        tThruMissouri = False
        tThruNeb = False
        tThruOhio = False
        tThruGeorgia = False
        
        If UCase(Sheets("Entry Screen").Range("S30")) <> "NO" Then
            tThruGeorgia = True
        End If
        
        
        If UCase(Sheets("Entry Screen").Range("S31")) <> "NO" Then
            tThruIllinois = True
        End If
        
        If UCase(Sheets("Entry Screen").Range("S32")) <> "NO" Then
            tThruIndiana = True
        End If
        
        If UCase(Sheets("Entry Screen").Range("S33")) <> "NO" Then
            tThruIowa = True
        End If
        
        If UCase(Sheets("Entry Screen").Range("S34")) <> "NO" Then
            tThruMinn = True
        End If
        
        If UCase(Sheets("Entry Screen").Range("S35")) <> "NO" Then
            tThruMissouri = True
        End If
        
        If UCase(Sheets("Entry Screen").Range("S36")) <> "NO" Then
            tThruNeb = True
        End If
        
        
        If UCase(Sheets("Entry Screen").Range("S37")) <> "NO" Then
            tThruOhio = True
        End If
        
        Dim tStopOff As String
        tStopOff = Sheets("Entry Screen").Range("S39")
        
        Dim tTarp As Boolean
        tTarp = False
        If UCase(Sheets("Entry Screen").Range("S40")) <> "NO" Then
            tTarp = True
            
        End If
        
        Dim tSatTrak As Boolean
        tSatTrak = False
        If UCase(Sheets("Entry Screen").Range("S41")) <> "NO" Then
            tSatTrak = True
        End If
        
        Dim tSigReq As Boolean
        tSigReq = False
        If UCase(Sheets("Entry Screen").Range("S42")) <> "NO" Then
            tSigReq = True
        End If
        
        Dim tTempCtrl As Boolean
        tTempCtrl = False
        If UCase(Sheets("Entry Screen").Range("S43")) <> "NO" Then
            tTempCtrl = True
        End If
        
        Dim tPUWEHrs As Double
        tPUWEHrs = Val(Sheets("Entry Screen").Range("S44"))
        
        Dim tEqtOrderNUDriverType As String
        tEqtOrderNUDriverType = Sheets("Entry Screen").Range("S45")
        
        Dim tinDeadHeadType As String
        Dim tInDeadHeadMiles As String
        
        If UCase(Sheets("Entry Screen").Range("S47")) <> "NO" Then
            tinDeadHeadType = Sheets("Entry Screen").Range("S48")
            tInDeadHeadMiles = Sheets("Entry Screen").Range("S50")
        End If
        
        Dim tOutDeadHeadType As String
        Dim tOutDeadHeadMiles As String
        
        If UCase(Sheets("Entry Screen").Range("S54")) <> "NO" Then
            tOutDeadHeadType = Sheets("Entry Screen").Range("S55")
            tOutDeadHeadMiles = Sheets("Entry Screen").Range("S56")
        End If
        
        
        Dim tRTDriverType As String
        Dim tRTEquipt As String
        Dim tRTMiles As String
        Dim tRTOrigin As String
        Dim tRTDest As String
        Dim tRTFuelSurchage As String
        Dim tRTNYOArb As Boolean
        Dim tRTNYDArb As Boolean
        
        tRTDriverType = ""
        tRTEquipt = ""
        tRTMiles = ""
        tRTOrigin = ""
        tRTDest = ""
        tRTFuelSurchage = ""
        tRTNYOArb = False
        tRTNYDArb = False
        
        If UCase(Sheets("Entry Screen").Range("S61")) <> "NO" Then
            tRTDriverType = Sheets("Entry Screen").Range("S67")
            tRTEquipt = Sheets("Entry Screen").Range("S62")
            tRTMiles = Sheets("Entry Screen").Range("S71")
            tRTOrigin = Sheets("Entry Screen").Range("S63")
            tRTDest = Sheets("Entry Screen").Range("S65")
            tRTFuelSurchage = Sheets("Entry Screen").Range("S73")
            If UCase(Sheets("Entry Screen").Range("S64")) <> "NO" Then
                tRTNYOArb = True
            End If
            If UCase(Sheets("Entry Screen").Range("S66")) <> "NO" Then
                tRTNYDArb = True
            End If
      
      
        End If
        
        Dim tRTDDriverType As String
        Dim tRTDEquipt As String
        Dim tRTDMiles As String
        Dim tRTDMat As String
        Dim tRTDOrigin As String
        Dim tRTDDest As String
        Dim tRTDFuelSurcharge As String
        Dim tRTDNYOArb As Boolean
        Dim tRTDNYDArb As Boolean
        
        tRTDDriverType = ""
        tRTDEquipt = ""
        tRTDMat = ""
        tRTDMiles = ""
        tRTDOrigin = ""
        tRTDDest = ""
        tRTDFuelSurchage = ""
        
        If UCase(Sheets("Entry Screen").Range("S74")) <> "NO" Then
            tRTDDriverType = Sheets("Entry Screen").Range("S84")
            tRTDEquipt = Sheets("Entry Screen").Range("S75")
            tRTDMiles = Sheets("Entry Screen").Range("S90")
            tRTDMat = Sheets("Entry Screen").Range("S76")
            tRTDOrigin = Sheets("Entry Screen").Range("S80")
            tRTDDest = Sheets("Entry Screen").Range("S82")
            tRTDFuelSurchage = Sheets("Entry Screen").Range("S91")
            If UCase(Sheets("Entry Screen").Range("S81")) <> "NO" Then
                 tRTDNYOArb = True
            End If
            If UCase(Sheets("Entry Screen").Range("S83")) <> "NO" Then
                tRTDNYDArb = True
            End If
      
        End If
        
        
        Dim tEMDriverType As String
        Dim tEMEquipt As String
        Dim tEMMiles As String
        Dim tEMMat As String
        Dim tEMOrigin As String
        Dim tEMDest As String
        Dim tEMFuelSurcharge As String
        Dim tEMNYOArb As Boolean
        Dim tEMNYDArb As Boolean
        Dim tHwyRteCtrlCost As Double
        Dim emSatTrak As Boolean
        
        
        tEMDriverType = ""
        tEMEquipt = ""
        tEMMat = ""
        tEMMiles = ""
        tEMOrigin = ""
        tEMDest = ""
        tEMFuelSurchage = ""
        tEMNYOArb = False
        tEMNYDArb = False
        
        
        
        If UCase(Sheets("Entry Screen").Range("S92")) <> "NO" Then
            tEMDriverType = Sheets("Entry Screen").Range("S99")
            tEMEquipt = Sheets("Entry Screen").Range("S93")
            tEMMiles = Sheets("Entry Screen").Range("S100")
            tEMMat = Sheets("Entry Screen").Range("S94")
            tEMOrigin = Sheets("Entry Screen").Range("S95")
            tEMDest = Sheets("Entry Screen").Range("S97")
            tEMFuelSurchage = Sheets("Entry Screen").Range("S101")
            If UCase(Sheets("Entry Screen").Range("S96")) <> "NO" Then
                 tEMNYOArb = True
            End If
            If UCase(Sheets("Entry Screen").Range("S88")) <> "NO" Then
                tEMNYDArb = True
            End If
      
        End If
        
        Dim tDTOWPDriverType As String
        Dim tDTOWPHours As String
        Dim tDTOWOPHours As String
        Dim tDTDWPDriverType As String
        Dim tDTDWPHours As String
        Dim tDTDWOPHours As String


        tDTOWPDriverType = ""
        tDTOWPHours = ""
        tDTOWOPHours = ""

        tDTDWPDriverType = ""
        tDTDWPHours = ""
        tDTDWOPHours = ""

    
        If UCase(Sheets("Entry Screen").Range("S103")) <> "NO" Then
            tDTOWPDriverType = Sheets("Entry Screen").Range("S104")
            tDTOWPHours = Sheets("Entry Screen").Range("S105")
            tDTOWOPHours = Sheets("Entry Screen").Range("S106")
            tDTDWPDriverType = Sheets("Entry Screen").Range("S107")
            tDTDWPHours = Sheets("Entry Screen").Range("S108")
            tDTDWOPHours = Sheets("Entry Screen").Range("S109")
            
        End If
        
        
     Dim tLOODriverType As String
     Dim tLOO24s As String
     Dim tLODDriverType As String
     Dim tLOD24s As String
     
     tLOODriverType = ""
     tLOO24s = ""
     tLODDriverType = ""
     tLOD24s = ""
     If UCase(Sheets("Entry Screen").Range("S110")) <> "NO" Then
          
        tLOODriverType = Sheets("Entry Screen").Range("S111")
        tLOO24s = Sheets("Entry Screen").Range("S112")
        tLODDriverType = Sheets("Entry Screen").Range("S113")
        tLOD24s = Sheets("Entry Screen").Range("S114")
     End If
        
     Dim tTSOrgDays As String
     Dim tTSDestDays As String
     
     tTSOrgDays = "0"
     tTSDestDays = "0"
     
     If UCase(Sheets("Entry Screen").Range("S115")) <> "NO" Then
        tTSOrgDays = Sheets("Entry Screen").Range("S116")
        tTSDestDays = Sheets("Entry Screen").Range("S117")
     
     End If
     
     Dim tOverWidth As String
     Dim tOverHeight As String
     Dim tOverLength As String
     Dim tAddOverLength As String
     
     tOverWidth = Sheets("Entry Screen").Range("S119")
     tOverHeight = Sheets("Entry Screen").Range("S120")
     tOverLength = Sheets("Entry Screen").Range("S121")
     tAddOverLength = Sheets("Entry Screen").Range("S122")
     
     Dim tCarrierSP1 As String
     Dim tCarrierSP2 As String
     Dim tCarrierSP3 As String
     Dim tCarrierSP4 As String
     
     Dim tCarrierSP1txt As String
     Dim tCarrierSP2txt As String
     Dim tCarrierSP3txt As String
     Dim tCarrierSP4txt As String
     
     
     tCarrierSP1txt = Sheets("Entry Screen").Range("N124")
     tCarrierSP2txt = Sheets("Entry Screen").Range("n125")
     tCarrierSP3txt = Sheets("Entry Screen").Range("n126")
     tCarrierSP4txt = Sheets("Entry Screen").Range("n127")
     
     
     tCarrierSP1 = Sheets("Entry Screen").Range("S124")
     tCarrierSP2 = Sheets("Entry Screen").Range("S125")
     tCarrierSP3 = Sheets("Entry Screen").Range("S126")
     tCarrierSP4 = Sheets("Entry Screen").Range("S127")
     
     
     
     Dim MiscChg1 As String
     Dim MiscChg2 As String
     Dim MiscChg3 As String
     
     Dim MiscChg1txt As String
     Dim MiscChg2txt As String
     Dim MiscChg3txt As String
     
     MiscChg1 = Sheets("Entry Screen").Range("S129")
     MiscChg2 = Sheets("Entry Screen").Range("S130")
     MiscChg3 = Sheets("Entry Screen").Range("S131")
     
     
     MiscChg1txt = Sheets("Entry Screen").Range("N129")
     MiscChg2txt = Sheets("Entry Screen").Range("N130")
     MiscChg3txt = Sheets("Entry Screen").Range("N131")
     
     
     
     
     
     
      Dim tResults As New Collection
            
            Set tResults = Nothing
            
            Dim tCalcRate As New RateCompare
          
     'lets calculate rates
     For x = 1 To ThisWorkbook.ScacCol.Count
            CarrierSkip = False
            Debug.Print ThisWorkbook.ScacCol.Item(x).scac
            Dim tRate As New State2State
            Dim tFixRate As New FixedRates
            Set tCalcRate = Nothing
            
                Set tFixRate = Nothing
                On Error Resume Next
                Set tFixRate = ThisWorkbook.FixedRateCol("" & ThisWorkbook.ScacCol.Item(x).scac & "-" & equptID)
                
                Set tRate = Nothing
                Set tRate = ThisWorkbook.St2St1("" & ThisWorkbook.ScacCol.Item(x).scac & "-" & equptID)
                On Error GoTo 0
                
                 Dim tHazFactor As Double
                            
                    If tFixRate.baseCPM > 0 Or Not DoLineHaul Then
                    
                        Set tCalcRate = Nothing
                        tCalcRate.EquiptmentType = Sheets("Entry Screen").Range("S18")
                        tCalcRate.MaterialType = Sheets("Entry Screen").Range("S19")
                    
                    
                     'get base cost
                        Dim Origin As String
                        Dim Destination As String
                        Dim scac As String
                        Dim tRateSur As Double
                          Dim tDrvCost As Double
                         Dim tBaseCost As Double
                         Dim ttotal As Double
                         Dim tFuelcost As Double
                         Dim tNYFee As Double
                         Dim tExUse As Double
                         Dim tHazMatFee As Double
                         Dim tPermitCost As Double
                         
                         tPermitCost = 0
                        
                        ttotal = 0
                        tRateSur = 0
                        tBaseCost = 0
                        tHwyRteCtrlCost = 0
                        tDrvCost = 0
                        tFuelcost = 0
                        tNYFee = 0
                        scac = ThisWorkbook.ScacCol.Item(x).scac
                        Origin = Sheets("Entry Screen").Range("S22")
                        Destination = Sheets("Entry Screen").Range("S24")
                        
                        If DoLineHaul Then
                            CalcLineHaul tFixRate, tmiles, Origin, Destination, scac, equptID, CarrierSkip, tRateSur, tBaseCost, ttotal, tFuelCharge, tHwyRteCtrlCost, tDrvCost, tDrivers, tMatID, tFuelcost, NYLIOrg, NYLIDest, tNYFee, fmsca, rteCtrl, tCalcRate, "GEN"
                            tExUse = ThisWorkbook.ScacCol.Item(x).exUseRate
                            If tExUse > 0 Then
                                tCalcRate.exUseCharge = tExUse
                                tCalcRate.exUseQty = 1
                                tCalcRate.exUseRate = tExUse
                            End If
                            If tMatID > 1 Then
                                tHazMatFee = ThisWorkbook.ScacCol.Item(x).hazRATE
                                tCalcRate.HazMatCharge = tHazMatFee
                                tCalcRate.HazMatQty = 1
                                tCalcRate.HazMatRate = tHazMatFee
                            End If
                            
                        End If
                        
                        Dim tRTDRateSur As Double
                        Dim tRTDBaseCost As Double
                        Dim tRTDTotal As Double
                        Dim tRTDRouteCtrl As Boolean
                        Dim tRTDDrvCost As Double
                        Dim tRTFuelCost As Double
                        Dim tRTNYFee As Double
                        Dim tRTDFMSCA As Boolean
                        Dim tdrtctrlcost As Double
                        
                        
                        tRTDRateSur = 0
                        tRTDBaseCost = 0
                        tRTDRouteCtrl = False
                        tRTDFMSCA = False
                        
                        tRTDDrvCost = 0
                        tRTFuelCost = 0
                        tRTNYFee = 0
                        tRTDTotal = 0
                    Else
                        If DoLineHaul Then
                            CarrierSkip = True
                        End If
                    End If
                    
                    If UCase(Sheets("Entry Screen").Range("S77")) = "YES" Then
                        tRTDFMSCA = True
                    End If
                    
                    
                    If UCase(Sheets("Entry Screen").Range("S77")) = "YES" Then
                        tRTDRouteCtrl = True
                    End If
                    'return dunnage
                    If UCase(Sheets("Entry Screen").Range("S74")) = "YES" Then
                        Dim RTDeqptID As Integer
                        RTDeqptID = 0
                        RTDeqptID = ThisWorkbook.equiptmentCol(tRTDEquipt).ID
                        tCalcRate.DEquiptmentType = tRTDEquipt
                        tCalcRate.DMaterialType = tRTDMat
                        Dim tRTDRate As New State2State
                        Dim tRTDFixRate As New FixedRates
            
                        Set tRTDFixRate = Nothing
                        On Error Resume Next
                        Set tRTDFixRate = ThisWorkbook.FixedRateCol("" & ThisWorkbook.ScacCol.Item(x).scac & "-" & RTDeqptID)
            
                        Set tRTDRate = Nothing
                        Set tRTDRate = ThisWorkbook.St2St1("" & ThisWorkbook.ScacCol.Item(x).scac & "-" & RTDeqptID)
                        On Error GoTo 0
            
                        
                         CalcLineHaul tFixRate, Int(Val(tRTDMiles)), tRTDOrigin, tRTDDest, ThisWorkbook.ScacCol.Item(x).scac, RTDeqptID, CarrierSkip, tRTDRateSur, tRTDBaseCost, tRTDTotal, Val(tRTDFuelSurchage), tdrtctrlcost, tRTDDrvCost, tRTDDriverType, ThisWorkbook.MaterialCol(tRTDMat).ID, tRTFuelCost, tRTDNYOArb, tRTDNYDArb, tRTNYFee, tRTDFMSCA, tRTDRouteCtrl, tCalcRate, "RET"
                            Dim trtdHazMatFee As Double
                            
                            If ThisWorkbook.MaterialCol(tRTDMat).ID > 1 Then
                                trtdHazMatFee = ThisWorkbook.ScacCol.Item(x).hazRATE
                                tCalcRate.dHazMatCharge = trtdHazMatFee
                                tCalcRate.dHazMatQty = 1
                                tCalcRate.dHazMatRate = trtdHazMatFee
                            End If
                            
                            Dim tDExUse As Double
                            
                            tDExUse = ThisWorkbook.ScacCol.Item(x).exUseRate
                            If tDExUse > 0 Then
                                tCalcRate.DExUseCharge = tDExUse
                                tCalcRate.DexUseQty = 1
                                tCalcRate.DexUseRate = tDExUse
                            End If
                            
                            'dunnage temp control
                            Dim tDTempContCost As Double
                            Dim tDTempCtrl As Boolean
        
                            tDTempCtrl = False
                            If UCase(Sheets("Entry Screen").Range("S90")) <> "NO" Then
                                tDTempCtrl = True
                            End If
                            
                            
                            tDTempContCost = TempControlCost(ThisWorkbook.ScacCol.Item(x).scac, tDTempCtrl, Int(Val(tRTDMiles)), tFixRate, tCalcRate, "RET")
                            If Not CarrierSkip Then
                                CarrierSkip = Not TempControlAllowed(tFixRate, tDTempCtrl)
                            End If
                            
                            'dunnage sig service
                            Dim tDSigCost As Double
                            Dim tDSigReq As Boolean
                            
                            tDSigCtrl = False
                            If UCase(Sheets("Entry Screen").Range("S88")) <> "NO" Then
                                tDSigReq = True
                            End If
                            
                            
                            tDSigCost = SigSrvCost(ThisWorkbook.ScacCol.Item(x).scac, tDSigReq, tCalcRate, "RET")
                    
                            If Not CarrierSkip Then
                                CarrierSkip = Not SigSrvAllowed(ThisWorkbook.ScacCol.Item(x).scac, tDSigReq)
                            End If
                     
                            Dim tDSatTrackCost As Double
                            Dim tDSatTrak As Boolean
                            tDSatTrak = False
                            If UCase(Sheets("Entry Screen").Range("S87")) <> "NO" Then
                                tDSatTrak = True
                            End If
                            
                            
                            tDSatTrackCost = SatTrackCost(ThisWorkbook.ScacCol.Item(x).scac, tDSatTrak, tCalcRate, "RET")
                            If Not CarrierSkip Then
                                CarrierSkip = Not SatTrackAllowed(ThisWorkbook.ScacCol.Item(x).scac, tDSatTrak)
                            End If
                    
                            Dim tDTarpCost As Double
                            tDTarpCost = tarping(ThisWorkbook.ScacCol.Item(x).scac, Sheets("Entry Screen").Range("S75"), UCase(Sheets("Entry Screen").Range("S86")))
                            
                            If tDTarpCost > 0 Then
                                tCalcRate.DtarpCharge = tDTarpCost
                                tCalcRate.DTarpQty = 1
                                tCalcRate.DtarpMC = 0
                                tCalcRate.DtarpRate = tDTarpCost
                            End If
                            
                            'stop offs
                            Dim tDStopOffCost As Double
                            
                            tDStopOffCost = stopRate(ThisWorkbook.ScacCol.Item(x).scac, Sheets("Entry Screen").Range("S85"), tCalcRate, "RET")
                            
                            If Not CarrierSkip Then
                                CarrierSkip = Not stopsAllowed(ThisWorkbook.ScacCol.Item(x).scac, Sheets("Entry Screen").Range("S85"))
                            End If
                                    
                            
                            
                    
                    End If
                    
                    'equiptment Mobilization
                    Dim tEMRateSur As Double
                    Dim tEMBaseCost As Double
                    Dim tEMTotal As Double
                    Dim tEMRouteCtrl As Double
                    Dim tEMDrvCost As Double
                    Dim tEMFuelCost As Double
                    Dim tEMNYFee As Double
                    
                    
                    tEMRateSur = 0
                    tEMBaseCost = 0
                    tEMRouteCtrl = 0
                    tEMDrvCost = 0
                    tEMFuelCost = 0
                    tEMNYFee = 0
                    tEMTotal = 0
                    
                    
                    If UCase(Sheets("Entry Screen").Range("S92")) <> "NO" Then
                        Dim EMeqptID As Integer
                        EMeqptID = 0
                        EMeqptID = ThisWorkbook.equiptmentCol(tEMEquipt).ID
                        tCalcRate.EEquiptmentType = tEMEquipt
                        tCalcRate.EMaterialType = tEMMat
                        Dim tEMRate As New State2State
                        Dim tEMFixRate As New FixedRates
                            
                        Set tEMFixRate = Nothing
                        On Error Resume Next
                        Set tEMFixRate = ThisWorkbook.FixedRateCol("" & ThisWorkbook.ScacCol.Item(x).scac & "-" & EMeqptID)
            
                        Set tEMRate = Nothing
                        Set tEMRate = ThisWorkbook.St2St1("" & ThisWorkbook.ScacCol.Item(x).scac & "-" & EMeqptID)
                        On Error GoTo 0
            
                        
                         CalcLineHaul tEMFixRate, Int(Val(tEMMiles)), tEMOrigin, tEMDest, scac, EMeqptID, CarrierSkip, tEMRateSur, tEMBaseCost, tEMTotal, Val(tEMFuelSurchage), tEMRouteCtrl, tEMDrvCost, tEMDriverType, ThisWorkbook.MaterialCol(tEMMat).ID, tEMFuelCost, tEMNYOArb, tEMNYDArb, tEMNYFee, False, False, tCalcRate, "EM"
                       
                       
                        Dim tEExUse As Double
                        
                      
                        
                       
                       
                    
                    End If
                    'stop offs
                    Dim tStopOffCost As Double
                    tStopOffCost = stopRate(ThisWorkbook.ScacCol.Item(x).scac, tStopOff, tCalcRate, "LH")
                    
                    If DoLineHaul Then
                        If (Len(ThisWorkbook.ScacCol.Item(x).TexasNo) = 0 Or ThisWorkbook.ScacCol.Item(x).TexasPermitDt < Now()) And ThisWorkbook.LocationCol.Item(DestID).TexasPermit = 1 Then
                            CarrierSkip = True
                        End If
                    End If
                    If Not CarrierSkip Then
                        CarrierSkip = Not stopsAllowed(ThisWorkbook.ScacCol.Item(x).scac, tStopOff)
                    End If
                    'tarping
                    Dim tTarpCost As Double
                    If DoLineHaul Then
                        tTarpCost = tarping(ThisWorkbook.ScacCol.Item(x).scac, Sheets("Entry Screen").Range("S18"), UCase(Sheets("Entry Screen").Range("S40")))
                        If tTarpCost > 0 Then
                            tCalcRate.tarpCharge = tTarpCost
                            tCalcRate.TarpQty = 1
                            tCalcRate.tarpMC = 0
                            tCalcRate.tarpRate = tTarpCost
                        End If
                    End If
                    'sat tracking
                    Dim tSatTrackCost As Double
                    tSatTrackCost = SatTrackCost(ThisWorkbook.ScacCol.Item(x).scac, tSatTrak, tCalcRate, "LH")
                    If Not CarrierSkip Then
                        CarrierSkip = Not SatTrackAllowed(ThisWorkbook.ScacCol.Item(x).scac, tSatTrak)
                    End If
                    
                    
                    
                   
                    
                                
                    
                    'signature service
                    Dim tSigCost As Double
                    tSigCost = SigSrvCost(ThisWorkbook.ScacCol.Item(x).scac, tSigReq, tCalcRate, "LH")
                    
                    If Not CarrierSkip Then
                        CarrierSkip = Not SigSrvAllowed(ThisWorkbook.ScacCol.Item(x).scac, tSigReq)
                    End If
                    'tempControl Service
                    Dim tTempContCost As Double
                    tTempContCost = TempControlCost(ThisWorkbook.ScacCol.Item(x).scac, tTempCtrl, tmiles, tFixRate, tCalcRate, "LH")
                    
                    If Not CarrierSkip Then
                        CarrierSkip = Not TempControlAllowed(tFixRate, tTempCtrl)
                    End If
                    
                    'holiday pickup
                    Dim tHolCost As Double
                    tHolCost = HolidayCost(ThisWorkbook.ScacCol.Item(x).scac, tPUWEHrs, tCalcRate)
                    
                                    
                    'Equiptment not used drivers
                    Dim tENUCost As Double
                    tENUCost = EquiptmentNotUsed(ThisWorkbook.ScacCol.Item(x).scac, tEqtOrderNUDriverType, tCalcRate)
                                        
                    'deadHead Origin
                    Dim tDHOrgCost As Double
                    tDHOrgCost = DHCost(tinDeadHeadType, tInDeadHeadMiles, tFixRate, tCalcRate, "IN")
                    
                    'deadHead Dest
                    Dim tDHDestCost As Double
                    tDHDestCost = DHCost(tOutDeadHeadType, tOutDeadHeadMiles, tFixRate, tCalcRate, "OUT")
                       
                    If Len(tFixRate.scac) = 0 And DoLineHaul Then
                        CarrierSkip = True
                    End If
                    'return empty
                    Dim tRtnEmptyCost As Double
                    
                    If UCase(Sheets("Entry Screen").Range("S61")) <> "NO" Then
                        tRtnEmptyCost = RoundTripEmptyCost(tFixRate, tRTMiles, tRTDriverType, tRTFuelSurchage, tRTNYOArb, tRTNYDArb, tRTOrigin, tRTDest, ThisWorkbook.ScacCol.Item(x).scac, tCalcRate, tRTEquipt)
                        If tRtnEmptyCost = -1 Then
                            CarrierSkip = True
                        End If
                        If tRtnEmptyCost > 0 Then
                    
                             Dim eSatTrackCost As Double
                         
                            Dim teSatTrak As Boolean
                            teSatTrak = False
                            If UCase(Sheets("Entry Screen").Range("S70")) <> "NO" Then
                                teSatTrak = True
                            End If
                    
                            eSatTrackCost = SatTrackCost(ThisWorkbook.ScacCol.Item(x).scac, teSatTrak, tCalcRate, "EMP")
                            If Not CarrierSkip Then
                                 CarrierSkip = Not SatTrackAllowed(ThisWorkbook.ScacCol.Item(x).scac, teSatTrak)
                            End If
                        
                    
                            Dim teTarpCost As Double
                        
                            teTarpCost = tarping(ThisWorkbook.ScacCol.Item(x).scac, Sheets("Entry Screen").Range("S62"), UCase(Sheets("Entry Screen").Range("S69")))
                            If teTarpCost > 0 Then
                                tCalcRate.EtarpCharge = teTarpCost
                                tCalcRate.ETarpQty = 1
                                tCalcRate.EtarpMC = 0
                                tCalcRate.EtarpRate = teTarpCost
                            End If
                        
                            'stop offs
                            Dim tEStopOffCost As Double
                            
                            tEStopOffCost = stopRate(ThisWorkbook.ScacCol.Item(x).scac, Sheets("Entry Screen").Range("S68"), tCalcRate, "EMP")
                            
                            If Not CarrierSkip Then
                                CarrierSkip = Not stopsAllowed(ThisWorkbook.ScacCol.Item(x).scac, Sheets("Entry Screen").Range("S68"))
                            End If
                        End If
                        
                    End If
                    
                                                        
                                                        
                    'detain costs
                    Dim tDetainOrg As Double
                    Dim tDetainDest As Double
                                    
                                    
                    tDetainOrg = detainCost(ThisWorkbook.ScacCol.Item(x).scac, tDTOWPDriverType, tDTOWPHours, tDTOWOPHours, tCalcRate, "ORIGIN")
                    tDetainDest = detainCost(ThisWorkbook.ScacCol.Item(x).scac, tDTDWPDriverType, tDTDWPHours, tDTDWOPHours, tCalcRate, "DEST")
        
                    'layover
                    Dim tLayOverOrg As Double
                    Dim tLayOverDest As Double
                    
                    
                    tLayOverOrg = LayoverCost(ThisWorkbook.ScacCol.Item(x).scac, tLOODriverType, tLOO24s, tCalcRate, "ORIGIN")
                    If tLayOverOrg = -1 Then
                        CarrierSkip = True
                        tLayOverOrg = 0
                    End If
                    'since same carrier only need to verify 1 time the carrier is good
                    
                    tLayOverDest = LayoverCost(ThisWorkbook.ScacCol.Item(x).scac, tLODDriverType, tLOD24s, tCalcRate, "DEST")
                    
                                            
                    'trailer charge
                    Dim tTrailerCostOrg As Double
                    Dim tTrailerCostDest As Double
                    
                    
                    tTrailerCostOrg = TrailerStorage(ThisWorkbook.ScacCol.Item(x).scac, tTSOrgDays, tCalcRate, "ORIGIN")
                    If tTrailerCostOrg = -1 Then
                        CarrierSkip = True
                        tTrailerCostOrg = 0
                    End If
                    
                    'since it is the same carrier you cannot get nailed 2x
                    tTrailerCostDest = TrailerStorage(ThisWorkbook.ScacCol.Item(x).scac, tTSDestDays, tCalcRate, "DEST")
                    
                    
                    'oversided cost
                    Dim tOHCost As Double
                    Dim tOWCost As Double
                    Dim tOLCost As Double
                    
                    tOWCost = OverHeightCost(ThisWorkbook.ScacCol.Item(x).scac, tOverHeight, tmiles, tCalcRate)
                    If tOWCost = -1 Then
                        CarrierSkip = True
                        tOWCost = 0
                    End If
                    tOHCost = OverWidthCost(ThisWorkbook.ScacCol.Item(x).scac, tOverWidth, tmiles, tCalcRate)
                    If tOHCost = -1 Then
                        CarrierSkip = True
                        tOHCost = 0
                    End If
                    tOLCost = OverLengthCost(ThisWorkbook.ScacCol.Item(x).scac, tOverLength, tmiles, tAddOverLength, tCalcRate)
                    If tOLCost = -1 Then
                        CarrierSkip = True
                        tOLCost = 0
                    End If
                    
                    'add special considerations
                    Dim tSPCost As Double
                    tSPCost = 0
                    If IsNumeric(tCarrierSP1) Then
                        tSPCost = tSPCost + Val(tCarrierSP1)
                        If Val(tCarrierSP1) > 0 Then
                            tPermitCost = tPermitCost + ThisWorkbook.ScacCol.Item(x).permtRATE
                            tCalcRate.Permit1type = tCarrierSP1txt
                            tCalcRate.permit1Rate = ThisWorkbook.ScacCol.Item(x).permtRATE
                            tCalcRate.permit1Cost = Val(tCarrierSP1)
                            tCalcRate.permit1Charge = tCalcRate.permit1Rate + tCalcRate.permit1Cost
                            tCalcRate.permit1Qty = 1
                        End If
                    End If
                    
                    If IsNumeric(tCarrierSP2) Then
                        tSPCost = tSPCost + Val(tCarrierSP2)
                        If Val(tCarrierSP2) > 0 Then
                        
                            tPermitCost = tPermitCost + ThisWorkbook.ScacCol.Item(x).permtRATE
                            tCalcRate.Permit2type = tCarrierSP2txt
                            tCalcRate.permit2Rate = ThisWorkbook.ScacCol.Item(x).permtRATE
                            tCalcRate.permit2Cost = Val(tCarrierSP2)
                            tCalcRate.permit2Charge = tCalcRate.permit2Rate + tCalcRate.permit2Cost
                            tCalcRate.permit2Qty = 2
                        End If
                    End If
                    
                    If IsNumeric(tCarrierSP3) Then
                        tSPCost = tSPCost + Val(tCarrierSP3)
                        If Val(tCarrierSP3) > 0 Then
                        
                            tPermitCost = tPermitCost + ThisWorkbook.ScacCol.Item(x).permtRATE
                            tCalcRate.Permit3type = tCarrierSP3txt
                            tCalcRate.permit3Rate = ThisWorkbook.ScacCol.Item(x).permtRATE
                            tCalcRate.permit3Cost = Val(tCarrierSP3)
                            tCalcRate.permit3Charge = tCalcRate.permit3Rate + tCalcRate.permit3Cost
                            tCalcRate.permit3Qty = 1
                        End If
                    End If
                    
                    If IsNumeric(tCarrierSP4) Then
                        tSPCost = tSPCost + Val(tCarrierSP4)
                        If Val(tCarrierSP4) > 0 Then
                             tPermitCost = tPermitCost + ThisWorkbook.ScacCol.Item(x).permtRATE
                             tCalcRate.Permit4type = tCarrierSP4txt
                             tCalcRate.permit4Rate = ThisWorkbook.ScacCol.Item(x).permtRATE
                             tCalcRate.permit4Cost = Val(tCarrierSP4)
                             tCalcRate.permit4Charge = tCalcRate.permit4Rate + tCalcRate.permit4Cost
                             tCalcRate.permit4Qty = 1
                        End If
                    End If
                    
                    
                    
                    
                    If IsNumeric(MiscChg1) Then
                        If Val(MiscChg1) > 0 Then
                             tCalcRate.Misc11Charge = Val(MiscChg1)
                             tCalcRate.Misc1type = MiscChg1txt
                        End If
                    End If
                    
                    
                    If IsNumeric(MiscChg2) Then
                        If Val(MiscChg2) > 0 Then
                             tCalcRate.Misc21Charge = Val(MiscChg2)
                             tCalcRate.Misc2type = MiscChg2txt
                        End If
                    End If
                    
                    
                    If IsNumeric(MiscChg3) Then
                        If Val(MiscChg3) > 0 Then
                             tCalcRate.Misc31Charge = Val(MiscChg3)
                             tCalcRate.Misc3type = MiscChg3txt
                        End If
                    End If
                    
                    
                                            
                    'add total costs
                    ttotal = ttotal + tStopOffCost + tSatTrackCost + tTarpCost + tSigCost + tHolCost + tDrvCost + tENUCost
                    ttotal = ttotal + tRtnEmptyCost + tDetainOrg + tDetainDest + tLayOverOrg + tLayOverDest + tTrailerCostOrg
                    ttotal = ttotal + tTrailerCostDest + tOWCost + tOHCost + tOLCost + tSPCost + tDHOrgCost + tDHDestCost + tNYFee + tExUse
                    ttotal = ttotal + tHazMatFee + tRTDTotal + tEMTotal
                    
                    
                    tTotalFuel = tFuelcost + tRTFuelCost + tEMFuelCost
                    'tRTDRateSur = 0
                    'tRTDBaseCost = 0
                    'tRTDRouteCtrl = 0
                    'tRTDDrvCost = 0
                    'tRTFuelCost = 0
                    'tRTNYFee = 0
                    
                    'other things
                    'do the state charge crud
                    Dim tRemarks As String
                    Dim tColRM As String
                    tColRM = ""
                    If tMatID = 5 Then tColRM = "C"
                    If tMatID = 6 Then tColRM = "D"
                    If tMatID = 7 Then tColRM = "E"
                    
                    Dim tRem1 As String
                    Dim tRem2 As String
                    
                    tRemarks = ""
                    
                 
                    
                    
                    If tThruGeorgia Then
                        If Len(tColRM) > 0 Then
                            tRem1 = Sheets("States").Range(tColRM & "5")
                        End If
                        If rteCtrl Then
                            tRem2 = Sheets("States").Range("G5")
                        End If
                    End If
                    If Len(tRem1) > 0 And Len(tRem2) > 0 Then
                        tRemarks = tRemarks & tRem1 & " / " & tRem2 & vbLf
                    Else
                        If Len(tRem1) & Len(tRem2) > 0 Then
                            tRemarks = tRemarks & tRem1 & tRem2 & vbLf
                        End If
                    End If
                    tRem1 = ""
                    tRem2 = ""
                    If tThruIllinois Then
                        If Len(tColRM) > 0 Then
                            tRem1 = Sheets("States").Range(tColRM & "6")
                        End If
                        If rteCtrl Then
                            tRem2 = Sheets("States").Range("G6")
                        End If
                        
                    End If
                    
                    If tThruIndiana Then
                        If Len(tColRM) > 0 Then
                            tRem1 = Sheets("States").Range(tColRM & "7")
                        End If
                        If rteCtrl Then
                            tRem2 = Sheets("States").Range("G7")
                        End If
                        
                    End If
                    If Len(tRem1) > 0 And Len(tRem2) > 0 Then
                        tRemarks = tRemarks & tRem1 & " / " & tRem2 & vbLf
                    Else
                        If Len(tRem1) & Len(tRem2) > 0 Then
                            tRemarks = tRemarks & tRem1 & tRem2 & vbLf
                        End If
                    End If
                    tRem1 = ""
                    tRem2 = ""
                    
                    If tThruIowa Then
                        If Len(tColRM) > 0 Then
                            tRem1 = Sheets("States").Range(tColRM & "8")
                        End If
                        If rteCtrl Then
                            tRem2 = Sheets("States").Range("G8")
                        End If
                    End If
                    If Len(tRem1) > 0 And Len(tRem2) > 0 Then
                        tRemarks = tRemarks & tRem1 & " / " & tRem2 & vbLf
                    Else
                        If Len(tRem1) & Len(tRem2) > 0 Then
                            tRemarks = tRemarks & tRem1 & tRem2 & vbLf
                        End If
                    End If
                    tRem1 = ""
                    tRem2 = ""
                    
                    If tThruMinn Then
                        If Len(tColRM) > 0 Then
                            tRem1 = Sheets("States").Range(tColRM & "9")
                        End If
                        If rteCtrl Then
                            tRem2 = Sheets("States").Range("G9")
                        End If
                    End If
                    If Len(tRem1) > 0 And Len(tRem2) > 0 Then
                        tRemarks = tRemarks & tRem1 & " / " & tRem2 & vbLf
                    Else
                        If Len(tRem1) & Len(tRem2) > 0 Then
                            tRemarks = tRemarks & tRem1 & tRem2 & vbLf
                        End If
                    End If
                    tRem1 = ""
                    tRem2 = ""
                    
                    If tThruMissouri Then
                        If Len(tColRM) > 0 Then
                            tRem1 = Sheets("States").Range(tColRM & "10")
                        End If
                        If rteCtrl Then
                            tRem2 = Sheets("States").Range("G10")
                        End If
                    End If
                    If Len(tRem1) > 0 And Len(tRem2) > 0 Then
                        tRemarks = tRemarks & tRem1 & " / " & tRem2 & vbLf
                    Else
                        If Len(tRem1) & Len(tRem2) > 0 Then
                            tRemarks = tRemarks & tRem1 & tRem2 & vbLf
                        End If
                    End If
                    tRem1 = ""
                    tRem2 = ""
                    
                    If tThruNeb Then
                        If Len(tColRM) > 0 Then
                            tRem1 = Sheets("States").Range(tColRM & "11")
                        End If
                        If rteCtrl Then
                            tRem2 = Sheets("States").Range("G11")
                        End If
                    End If
                    If Len(tRem1) > 0 And Len(tRem2) > 0 Then
                        tRemarks = tRemarks & tRem1 & " / " & tRem2 & vbLf
                    Else
                        If Len(tRem1) & Len(tRem2) > 0 Then
                            tRemarks = tRemarks & tRem1 & tRem2 & vbLf
                        End If
                    End If
                    tRem1 = ""
                    tRem2 = ""
                    
                    If tThruOhio Then
                        If Len(tColRM) > 0 Then
                            tRem1 = Sheets("States").Range(tColRM & "12")
                        End If
                        If rteCtrl Then
                            tRem2 = Sheets("States").Range("G12")
                        End If
                    End If
                    
                    If Len(tRem1) > 0 And Len(tRem2) > 0 Then
                        tRemarks = tRemarks & tRem1 & " / " & tRem2 & vbLf
                    Else
                        If Len(tRem1) & Len(tRem2) > 0 Then
                            tRemarks = tRemarks & tRem1 & tRem2 & vbLf
                        End If
                    End If
                    tRem1 = ""
                    tRem2 = ""
                    
                    '------
                    
                    
                    Sheets("Cost Comparison").Range("m37") = tRemarks
                                 
                    tCalcRate.Remarks = tRemarks
                    
                    'need to check team drivers
                    tCalcRate.Comment = ""
                    If UCase(ThisWorkbook.ScacCol.Item(x).Team) = "YES" Then
                        tCalcRate.Comment = "Team Driver Only Carrier" & vbLf
                    End If
                    
                    tCalcRate.Comment = tCalcRate.Comment & ThisWorkbook.ScacCol.Item(x).TenderAddress & vbLf
                    Debug.Print ThisWorkbook.ScacCol.Item(x).TenderAddress & "/" & ThisWorkbook.ScacCol.Item(x).scac
                    If Len(ThisWorkbook.ScacCol.Item(x).DotNo) > 0 Then
                        tCalcRate.Comment = tCalcRate.Comment & "USDOT No: " & ThisWorkbook.ScacCol.Item(x).DotNo & vbLf
                    End If
                    If Len(ThisWorkbook.ScacCol.Item(x).MCNo) > 0 Then
                        tCalcRate.Comment = tCalcRate.Comment & "Motor Carrier No.: " & ThisWorkbook.ScacCol.Item(x).MCNo & vbLf
                    End If
                    If Len(ThisWorkbook.ScacCol.Item(x).PhmsaNo) > 0 Then
                        tCalcRate.Comment = tCalcRate.Comment & "PHMSA Registration No.: " & ThisWorkbook.ScacCol.Item(x).PhmsaNo
                        tCalcRate.Comment = tCalcRate.Comment & ",     expires: " & ThisWorkbook.ScacCol.Item(x).PhmsaExpDt & vbLf
                    End If
                    If Len(ThisWorkbook.ScacCol.Item(x).EPANo) > 0 Then
                        tCalcRate.Comment = tCalcRate.Comment & "EPA Transporter No.: " & ThisWorkbook.ScacCol.Item(x).EPANo
                        tCalcRate.Comment = tCalcRate.Comment & ",     expires: " & ThisWorkbook.ScacCol.Item(x).EPAExpDt & vbLf
                    End If
                    If Len(ThisWorkbook.ScacCol.Item(x).FMCSANo) > 0 Then
                        tCalcRate.Comment = tCalcRate.Comment & "FMCSA Safety Permit No.: " & ThisWorkbook.ScacCol.Item(x).FMCSANo
                        tCalcRate.Comment = tCalcRate.Comment & ",      expires: " & ThisWorkbook.ScacCol.Item(x).FMSCAExpDt & vbLf
                    End If
                    'load the results collection
                    
                    If Len(ThisWorkbook.ScacCol.Item(x).TexasNo) > 0 Then
                        tCalcRate.Comment = tCalcRate.Comment & "Texas Permit No.: " & ThisWorkbook.ScacCol.Item(x).TexasNo
                        tCalcRate.Comment = tCalcRate.Comment & ",      expires: " & ThisWorkbook.ScacCol.Item(x).TexasPermitDt & vbLf
                    End If
                    
                    
                    
                    
                    
                    If Not CarrierSkip Then
                        tCalcRate.scac = ThisWorkbook.ScacCol.Item(x).scac
                        tCalcRate.totalCost = tCalcRate.MaterialCharge + tCalcRate.HWRCCharge + tCalcRate.NYLHoCharge + tCalcRate.NYLHdCharge + tCalcRate.LHDrvCharge
                        tCalcRate.totalCost = tCalcRate.totalCost + tCalcRate.exUseCharge + tCalcRate.HazMatCharge + tCalcRate.StopOffCharge
                        tCalcRate.totalCost = tCalcRate.totalCost + tCalcRate.tarpCharge + tCalcRate.satTrakCharge + tCalcRate.SigCharge
                        tCalcRate.totalCost = tCalcRate.totalCost + tCalcRate.tempCharge + tCalcRate.PHUOLCharge + tCalcRate.EONUCharge
                        tCalcRate.totalCost = tCalcRate.totalCost + tCalcRate.IDHCharge + tCalcRate.ODHCharge
                        tCalcRate.totalCost = tCalcRate.totalCost + tCalcRate.EERDCharge + tCalcRate.EERCharge + tCalcRate.EENYOCharge + tCalcRate.EENYDCharge
                        tCalcRate.totalCost = tCalcRate.totalCost + tCalcRate.dDrvCharge + tCalcRate.DMaterialCharge + tCalcRate.NYdoCharge + tCalcRate.NYddCharge
                        tCalcRate.totalCost = tCalcRate.totalCost + tCalcRate.eDrvCharge + tCalcRate.EMaterialCharge + tCalcRate.NYeoCharge + tCalcRate.NYedCharge
                        tCalcRate.totalCost = tCalcRate.totalCost + tCalcRate.DOWPCharge + tCalcRate.DOWoPCharge + tCalcRate.DDWPCharge + tCalcRate.DDWoPCharge
                        tCalcRate.totalCost = tCalcRate.totalCost + tCalcRate.LOoCharge + tCalcRate.LOdCharge + tCalcRate.TSoCharge + tCalcRate.TSdCharge
                        tCalcRate.totalCost = tCalcRate.totalCost + tCalcRate.OwCharge + tCalcRate.OLCharge + tCalcRate.OHCharge
                        tCalcRate.totalCost = tCalcRate.totalCost + tCalcRate.permit1Charge + tCalcRate.permit2Charge + tCalcRate.permit3Charge + tCalcRate.permit4Charge
                        tCalcRate.totalCost = tCalcRate.totalCost + tCalcRate.DExUseCharge + tCalcRate.dHazMatCharge + tCalcRate.DTempCharge
                        tCalcRate.totalCost = tCalcRate.totalCost + tCalcRate.DSigCharge + tCalcRate.DsatTrakCharge + tCalcRate.DtarpCharge + tCalcRate.DStopOffCharge
                        tCalcRate.totalCost = tCalcRate.totalCost + tCalcRate.DHWRCCharge + tCalcRate.EExUseCharge + tCalcRate.EsatTrakCharge
                        tCalcRate.totalCost = tCalcRate.totalCost + tCalcRate.EtarpCharge + tCalcRate.eStopOffCharge '+ tCalcRate.s2sECharge
                        tCalcRate.totalCost = tCalcRate.totalCost + tCalcRate.Misc11Charge + tCalcRate.Misc21Charge + tCalcRate.Misc31Charge
                        
                        
                        
                        
                        tCalcRate.FuelCharge = tCalcRate.LHFSCharge + tCalcRate.EEFCCharge + tCalcRate.dFSCharge + tCalcRate.EFSCharge
                        
                        
                        
                        'tCalcRate.TotalCost = ttotal
                        'tCalcRate.FuelCharge = tTotalFuel
                    
                        tResults.Add tCalcRate, tCalcRate.TotalCostStr & "-" & ThisWorkbook.ScacCol.Item(x).scac
                        Debug.Print tCalcRate.Comment
                        Debug.Print tCalcRate.TotalCostStr & "-" & ThisWorkbook.ScacCol.Item(x).scac
                        
                    End If
                
            
            
            
            
        Next x
        
        'we need to sort results
        For i = 1 To tResults.Count - 1
        For j = i + 1 To tResults.Count
            If Val(tResults(i).totalCost) > Val(tResults(j).totalCost) Then
                'store the lesser item
               Set vTemp = tResults(j)
                'remove the lesser item
               tResults.Remove j
                're-add the lesser item before the
               'greater Item
               tResults.Add vTemp, vTemp.TotalCostStr & "-" & vTemp.scac, i
            End If
        Next j
    Next i
        
        Sheets("Cost Comparison").Range("R12") = Sheets("Entry Screen").Range("o10")
        Sheets("Cost Comparison").Range("R13") = Sheets("Entry Screen").Range("o11")
        Sheets("Cost Comparison").Range("R14") = Sheets("Entry Screen").Range("o12")
     
        Dim tHighPoint As Integer
        
        tHighPoint = tResults.Count
        If tHighPoint > 15 Then tHighPoint = 15
        For x = 1 To tHighPoint
            Sheets("Cost Comparison").Range("N" & 20 + x) = ThisWorkbook.ScacCol(tResults.Item(x).scac).Name
            Sheets("Cost Comparison").Range("Q" & 20 + x) = ThisWorkbook.ScacCol(tResults.Item(x).scac).Tender & "/" & ThisWorkbook.ScacCol(tResults.Item(x).scac).TendersUp
            
            
            Sheets("Cost Comparison").Range("T" & 20 + x) = tResults.Item(x).totalCost
            Sheets("Cost Comparison").Range("U" & 20 + x) = tResults.Item(x).FuelCharge
            Sheets("Cost Comparison").Range("W" & 20 + x) = ThisWorkbook.ScacCol(tResults.Item(x).scac).Team
            Sheet25.Shapes("Button " & x).Visible = True
            Next x
        
       
        Set ThisWorkbook.Results = New Collection
        
        If tResults.Count > 0 Then
            Set ThisWorkbook.Results = tResults
        End If

        Sheets("Cost Comparison").Protect Password:="doeLEE"
        
        
        Sheets("Cost Comparison").Activate

End Sub

Public Function stopRate(pSCAC As String, pStopOff As String, RateCalc As RateCompare, pType As String) As Double
    Dim fTotal As Double
    
    fTotal = 0
    'stop offs
    If IsNumeric(pStopOff) Then
        If Val(pStopOff) > 0 Then
            fTotal = Val(pStopOff) * ThisWorkbook.ScacCol(pSCAC).stopRate
            Select Case pType
            Case "LH"
                RateCalc.StopOffCharge = fTotal
                RateCalc.StopOffMC = 0
                RateCalc.StopOffQty = Val(pStopOff)
                RateCalc.StopOffRate = ThisWorkbook.ScacCol(pSCAC).stopRate
            Case "RET"
                RateCalc.DStopOffCharge = fTotal
                RateCalc.DStopOffMC = 0
                RateCalc.DStopOffQty = Val(pStopOff)
                RateCalc.DStopOffRate = ThisWorkbook.ScacCol(pSCAC).stopRate
            Case "EMP"
                RateCalc.eStopOffCharge = fTotal
                RateCalc.eStopOffMC = 0
                RateCalc.eStopOffQty = Val(pStopOff)
                RateCalc.eStopOffRate = ThisWorkbook.ScacCol(pSCAC).stopRate
                
            End Select
        End If 'has stop offs
    End If  ' non-numeric response
                    
    
    stopRate = fTotal
End Function

Public Function stopsAllowed(pSCAC As String, pStopOff As String) As Boolean
    Dim tResult As Boolean
    
    tResult = True
    'stop offs
    If IsNumeric(pStopOff) Then
        If Val(pStopOff) > ThisWorkbook.ScacCol(pSCAC).maxstops Then
            tResult = False
        End If 'has stop offs
    End If  ' non-numeric response
                    
    
    stopsAllowed = tResult
End Function



Public Function tarping(pSCAC As String, pEqt As String, pTarp As String) As Double
    Dim fTotal As Double
    fTotal = 0
    
    If UCase(ThisWorkbook.equiptmentCol(pEqt).Tarp) = "YES" Then
     If pTarp = "YES" Then
            fTotal = ThisWorkbook.ScacCol(pSCAC).tarpRate
     End If
    End If
    tarping = fTotal
End Function

Public Function SatTrackCost(pSCAC As String, pSatTrack As Boolean, calcRate As RateCompare, pType As String) As Double
    Dim fCost As Double
    fCost = 0
    
    If pSatTrack Then
        If IsNumeric(ThisWorkbook.ScacCol(pSCAC).satTrakRate) Then
            fCost = Val(ThisWorkbook.ScacCol(pSCAC).satTrakRate)
            Select Case pType
            Case "LH"
                calcRate.satTrakQty = 1
                calcRate.satTrakMC = 0
                calcRate.satTrakRate = fCost
                calcRate.satTrakCharge = fCost
            Case "EM"
                calcRate.EMSatQty = 1
                calcRate.EMSatMC = 0
                calcRate.EMSatRate = fCost
                calcRate.EMSatCharge = fCost
            Case "RET"
                calcRate.DsatTrakQty = 1
                calcRate.DsatTrakMC = 0
                calcRate.DsatTrakRate = fCost
                calcRate.DsatTrakCharge = fCost
            Case "EMP"
                calcRate.EsatTrakQty = 1
                calcRate.EsatTrakMC = 0
                calcRate.EsatTrakRate = fCost
                calcRate.EsatTrakCharge = fCost
            
            End Select
        End If
    End If
    SatTrackCost = fCost
End Function
Public Function SatTrackAllowed(pSCAC As String, pTrack As Boolean) As Boolean
    Dim tResult As Boolean
    
    tResult = True

    If pTrack Then
        If Len(Trim(ThisWorkbook.ScacCol(pSCAC).satTrakRate)) = 0 Then
            tResult = False
        End If 'has stop offs
    End If  ' non-numeric response
                    
    
    SatTrackAllowed = tResult
End Function



Public Function SigSrvCost(pSCAC As String, pSig As Boolean, calcRate As RateCompare, pType As String) As Double
    Dim fCost As Double
    fCost = 0
    
    If pSig Then
        If IsNumeric(ThisWorkbook.ScacCol(pSCAC).sigsvcRATE) Then
            fCost = Val(ThisWorkbook.ScacCol(pSCAC).sigsvcRATE)
            Select Case pType
            Case "LH"
                calcRate.SigCharge = fCost
                calcRate.SigMC = 0
                calcRate.SigQty = 1
                calcRate.SigRate = fCost
            Case "RET"
                calcRate.DSigCharge = fCost
                calcRate.DSigMC = 0
                calcRate.DSigQty = 1
                calcRate.DSigRate = fCost
            
            End Select
            
        End If
    End If
    SigSrvCost = fCost
End Function
Public Function SigSrvAllowed(pSCAC As String, pTrack As Boolean) As Boolean
    Dim tResult As Boolean
    
    tResult = True

    If pTrack Then
        If Len(Trim(ThisWorkbook.ScacCol(pSCAC).sigsvcRATE)) = 0 Then
            tResult = False
        End If 'has stop offs
    End If  ' non-numeric response
                    
    
    SigSrvAllowed = tResult
End Function

Public Function TempControlCost(pSCAC As String, pSig As Boolean, miles As Integer, fixedrate As FixedRates, calcRate As RateCompare, pType As String) As Double
    Dim fCost As Double
    fCost = 0
    
    If pSig And Len(fixedrate.scac) > 0 Then
        If IsNumeric(fixedrate.tempFactor) Then
            fCost = Val(fixedrate.tempFactor) * miles
            If fCost < Val(fixedrate.tempMinCharge) Then
                fCost = Val(fixedrate.tempMinCharge)
            End If
            Select Case pType
            Case "LH"
                calcRate.tempCharge = fCost
                calcRate.tempMC = fixedrate.tempMinCharge
                calcRate.TempQty = miles
                calcRate.tempRate = fixedrate.tempFactor
            Case "RET"
                calcRate.DTempCharge = fCost
                calcRate.DTempMC = fixedrate.tempMinCharge
                calcRate.DTempQty = miles
                calcRate.DTempRate = fixedrate.tempFactor
            End Select
        End If
    End If
    TempControlCost = fCost
End Function
Public Function TempControlAllowed(fixedrate As FixedRates, pTrack As Boolean) As Boolean
    Dim tResult As Boolean
    
    tResult = True

    If pTrack And Len(fixedrate.scac) > 0 Then
        If Len(Trim(fixedrate.tempFactor)) = 0 Then
            tResult = False
        End If 'has stop offs
    End If  ' non-numeric response
                    
    
    TempControlAllowed = tResult
End Function


Public Function HolidayCost(pSCAC As String, pHours As Double, calcRate As RateCompare) As Double
    Dim fCost As Double
    
    fCost = 0
    
    If pHours > 0 Then
        fCost = pHours * ThisWorkbook.ScacCol(pSCAC).holRATE
    'check minimum
        If fCost < ThisWorkbook.ScacCol(pSCAC).holMIN Then
            fCost = ThisWorkbook.ScacCol(pSCAC).holMIN
        End If
        calcRate.PHUOLCharge = fCost
        calcRate.PUHOLMC = ThisWorkbook.ScacCol(pSCAC).holMIN
        calcRate.PUHOLQty = pHours
        calcRate.PUHOLRate = ThisWorkbook.ScacCol(pSCAC).holRATE
    
    End If
    
    HolidayCost = fCost
    
End Function

Public Function BestDriverCost(pSCAC As String, tmiles As Integer, tDrivers As String, tType As String, calcRate As RateCompare) As Double
    Dim fCost As Double
    fCost = 0
    Select Case UCase(tDrivers)
    
    Case "SINGLE, UNCLEARED", UCase("Single Driver, w/FSC (RT1)")
        If Len(ThisWorkbook.ScacCol(pSCAC).Drvr1nonclrFAC) = 0 Then
            fCost = -1
        Else
            fCost = Val(ThisWorkbook.ScacCol(pSCAC).Drvr1nonclrFAC) * tmiles
            If fCost < Val(ThisWorkbook.ScacCol(pSCAC).dvr1nonclrMIN) Then
                fCost = Val(ThisWorkbook.ScacCol(pSCAC).dvr1nonclrMIN)
            End If
            If tType = "GEN" Then
                calcRate.LHDrvQty = tmiles
                calcRate.LHDrvType = "Single, Uncleared"
                calcRate.LHDrvRate = Val(ThisWorkbook.ScacCol(pSCAC).Drvr1nonclrFAC)
                calcRate.LHDrvMC = Val(ThisWorkbook.ScacCol(pSCAC).dvr1nonclrMIN)
                calcRate.LHDrvCharge = fCost
            End If
                
            If tType = "RET" Then
                calcRate.dDrvQty = tmiles
                calcRate.dDrvType = "Single, Uncleared"
                calcRate.dDrvRate = Val(ThisWorkbook.ScacCol(pSCAC).Drvr1nonclrFAC)
                calcRate.dDrvMC = Val(ThisWorkbook.ScacCol(pSCAC).dvr1nonclrMIN)
                calcRate.dDrvCharge = fCost
            End If
            If tType = "EM" Then
                calcRate.eDrvQty = tmiles
                calcRate.eDrvType = "Single, Uncleared"
                calcRate.eDrvRate = Val(ThisWorkbook.ScacCol(pSCAC).Drvr1nonclrFAC)
                calcRate.eDrvMC = Val(ThisWorkbook.ScacCol(pSCAC).dvr1nonclrMIN)
                calcRate.eDrvCharge = fCost
            End If
                
                
            If tType = "RTE" Then
                calcRate.EERDQty = tmiles
                calcRate.EERDType = tDrivers
                calcRate.EERDRate = Val(ThisWorkbook.ScacCol(pSCAC).Drvr1nonclrFAC)
                calcRate.EERDMC = Val(ThisWorkbook.ScacCol(pSCAC).dvr1nonclrMIN)
                calcRate.EERDCharge = fCost
            End If
        End If
    Case "TEAM, UNCLEARED", UCase("Driver Team, w/FSC (RT2)")
        If Len(ThisWorkbook.ScacCol(pSCAC).drvr2nonclrFAC) = 0 Then
            fCost = -1
        Else
            fCost = Val(ThisWorkbook.ScacCol(pSCAC).drvr2nonclrFAC) * tmiles
            If fCost < Val(ThisWorkbook.ScacCol(pSCAC).drvr2nonclrMIN) Then
                fCost = Val(ThisWorkbook.ScacCol(pSCAC).drvr2nonclrMIN)
            End If
            If tType = "GEN" Then
                calcRate.LHDrvQty = tmiles
                calcRate.LHDrvType = "Team, Uncleared"
                calcRate.LHDrvRate = Val(ThisWorkbook.ScacCol(pSCAC).drvr2nonclrFAC)
                calcRate.LHDrvMC = Val(ThisWorkbook.ScacCol(pSCAC).drvr2nonclrMIN)
                calcRate.LHDrvCharge = fCost
            End If
            If tType = "RET" Then
                calcRate.dDrvQty = tmiles
                calcRate.dDrvType = "Team, Uncleared"
                calcRate.dDrvRate = Val(ThisWorkbook.ScacCol(pSCAC).drvr2nonclrFAC)
                calcRate.dDrvMC = Val(ThisWorkbook.ScacCol(pSCAC).drvr2nonclrMIN)
                calcRate.dDrvCharge = fCost
            End If

            If tType = "EM" Then
                calcRate.eDrvQty = tmiles
                calcRate.eDrvType = "Team, Uncleared"
                calcRate.eDrvRate = Val(ThisWorkbook.ScacCol(pSCAC).drvr2nonclrFAC)
                calcRate.eDrvMC = Val(ThisWorkbook.ScacCol(pSCAC).drvr2nonclrMIN)
                calcRate.eDrvCharge = fCost
            End If
            If tType = "RTE" Then
                calcRate.EERDQty = tmiles
                calcRate.EERDType = tDrivers
                calcRate.EERDRate = Val(ThisWorkbook.ScacCol(pSCAC).drvr2nonclrFAC)
                calcRate.EERDMC = Val(ThisWorkbook.ScacCol(pSCAC).drvr2nonclrMIN)
                calcRate.EERDCharge = fCost
            End If

        End If
    Case "SINGLE, CLEARED", UCase("Single Driver, Security Function, w/FSC (RT1)")
        If Len(ThisWorkbook.ScacCol(pSCAC).drvr1clrFAC) = 0 Then
            fCost = -1
        Else
            fCost = Val(ThisWorkbook.ScacCol(pSCAC).drvr1clrFAC) * tmiles
            If fCost < Val(ThisWorkbook.ScacCol(pSCAC).drvr1clrMIN) Then
                fCost = Val(ThisWorkbook.ScacCol(pSCAC).drvr1clrMIN)
            End If
            If tType = "GEN" Then
                calcRate.LHDrvQty = tmiles
                calcRate.LHDrvType = "Single, Cleared"
                calcRate.LHDrvRate = Val(ThisWorkbook.ScacCol(pSCAC).drvr1clrFAC)
                calcRate.LHDrvMC = Val(ThisWorkbook.ScacCol(pSCAC).drvr1clrMIN)
                calcRate.LHDrvCharge = fCost
            End If
            If tType = "RET" Then
                calcRate.dDrvQty = tmiles
                calcRate.dDrvType = "Single, Cleared"
                calcRate.dDrvRate = Val(ThisWorkbook.ScacCol(pSCAC).drvr1clrFAC)
                calcRate.dDrvMC = Val(ThisWorkbook.ScacCol(pSCAC).drvr1clrMIN)
                calcRate.dDrvCharge = fCost
            End If
            If tType = "EM" Then
                calcRate.eDrvQty = tmiles
                calcRate.eDrvType = "Single, Cleared"
                calcRate.eDrvRate = Val(ThisWorkbook.ScacCol(pSCAC).drvr1clrFAC)
                calcRate.eDrvMC = Val(ThisWorkbook.ScacCol(pSCAC).drvr1clrMIN)
                calcRate.eDrvCharge = fCost
            End If
            
            If tType = "RTE" Then
                calcRate.EERDQty = tmiles
                calcRate.EERDType = tDrivers
                calcRate.EERDRate = Val(ThisWorkbook.ScacCol(pSCAC).drvr1clrFAC)
                calcRate.EERDMC = Val(ThisWorkbook.ScacCol(pSCAC).drvr1clrMIN)
                calcRate.EERDCharge = fCost
            End If

        End If
    Case "TEAM, CLEARED", UCase("Driver Team, Security Function, w/FSC (RT2)")
        If Len(ThisWorkbook.ScacCol(pSCAC).drvr2clrFAC) = 0 Then
            fCost = -1
        Else
            fCost = Val(ThisWorkbook.ScacCol(pSCAC).drvr2clrFAC) * tmiles
            If fCost < Val(ThisWorkbook.ScacCol(pSCAC).drvr2clrMIN) Then
                fCost = Val(ThisWorkbook.ScacCol(pSCAC).drvr2clrMIN)
            End If
            If tType = "GEN" Then
                calcRate.LHDrvQty = tmiles
                calcRate.LHDrvType = "Team, Cleared"
                calcRate.LHDrvRate = Val(ThisWorkbook.ScacCol(pSCAC).drvr2clrFAC)
                calcRate.LHDrvMC = Val(ThisWorkbook.ScacCol(pSCAC).drvr2clrMIN)
                calcRate.LHDrvCharge = fCost
            End If
            If tType = "RET" Then
                calcRate.dDrvQty = tmiles
                calcRate.dDrvType = "Team, Cleared"
                calcRate.dDrvRate = Val(ThisWorkbook.ScacCol(pSCAC).drvr2clrFAC)
                calcRate.dDrvMC = Val(ThisWorkbook.ScacCol(pSCAC).drvr2clrMIN)
                calcRate.dDrvCharge = fCost
            End If
            
            If tType = "EM" Then
                calcRate.eDrvQty = tmiles
                calcRate.eDrvType = "Team, Cleared"
                calcRate.eDrvRate = Val(ThisWorkbook.ScacCol(pSCAC).drvr2clrFAC)
                calcRate.eDrvMC = Val(ThisWorkbook.ScacCol(pSCAC).drvr2clrMIN)
                calcRate.eDrvCharge = fCost
            End If
            If tType = "RTE" Then
                calcRate.EERDQty = tmiles
                calcRate.EERDType = tDrivers
                calcRate.EERDRate = Val(ThisWorkbook.ScacCol(pSCAC).drvr2clrFAC)
                calcRate.EERDMC = Val(ThisWorkbook.ScacCol(pSCAC).drvr2clrMIN)
                calcRate.EERDCharge = fCost
            End If

        End If
    
    End Select

    BestDriverCost = fCost
End Function

Public Function EquiptmentNotUsed(pSCAC As String, pDrvType As String, calcRate As RateCompare) As Double
    Dim fCost As Double
    fCost = 0
    Select Case UCase(pDrvType)
    Case "NONE SELECTED"
        fCost = 0
    Case "SINGLE DRIVER"
        fCost = ThisWorkbook.ScacCol(pSCAC).eonu1RATE
        calcRate.EONUType = "Single Driver"
        calcRate.EONUQty = 1
        calcRate.EONUMC = 0
        calcRate.EONURate = ThisWorkbook.ScacCol(pSCAC).eonu1RATE
        calcRate.EONUCharge = fCost
    Case "TEAM DRIVERS"
        fCost = ThisWorkbook.ScacCol(pSCAC).eonu2RATE
        calcRate.EONUType = "Team Drivers"
        calcRate.EONUMC = 0
        calcRate.EONURate = ThisWorkbook.ScacCol(pSCAC).eonu2RATE
        calcRate.EONUCharge = fCost
        calcRate.EONUQty = 1
    End Select
    
    
    EquiptmentNotUsed = fCost
End Function

Public Function DHCost(pDrvType As String, pMiles As String, pFixRate As FixedRates, RateCalc As RateCompare, direction As String) As Double
    Dim fCost As Double
    
    fCost = 0
    If Len(pDrvType) > 0 And Len(pFixRate.scac) > 0 Then
        Select Case pDrvType
        Case "None Selected"
            fCost = 0
        Case "Single Driver, no FSC"
            fCost = pFixRate.dhCPM * Val(pMiles)
            If fCost < pFixRate.Min1dh Then
                fCost = pFixRate.Min1dh
            End If
            If direction = "IN" Then
                RateCalc.IDHType = pDrvType
                RateCalc.IDHQty = Val(pMiles)
                RateCalc.IDHMC = pFixRate.Min1dh
                RateCalc.IDHRate = pFixRate.dhCPM
                RateCalc.IDHCharge = fCost
            Else
                RateCalc.ODHType = pDrvType
                RateCalc.ODHQty = Val(pMiles)
                RateCalc.ODHMC = pFixRate.Min1dh
                RateCalc.ODHRate = pFixRate.dhCPM
                RateCalc.ODHCharge = fCost
            End If
        Case "Driver Team, no FSC"
            fCost = pFixRate.dhCPM * Val(pMiles)
            If fCost < pFixRate.min2sh Then
                fCost = pFixRate.min2sh
            End If
            If direction = "IN" Then
                RateCalc.IDHType = pDrvType
                RateCalc.IDHQty = Val(pMiles)
                RateCalc.IDHMC = pFixRate.min2sh
                RateCalc.IDHRate = pFixRate.dhCPM
                RateCalc.IDHCharge = fCost
            Else
                RateCalc.ODHType = pDrvType
                RateCalc.ODHQty = Val(pMiles)
                RateCalc.ODHMC = pFixRate.min2sh
                RateCalc.ODHRate = pFixRate.dhCPM
                RateCalc.ODHCharge = fCost
            End If
        End Select
        
    End If
    DHCost = fCost
End Function

Public Function RoundTripEmptyCost(pFixedRate As FixedRates, pMiles As String, pDrvType As String, pFuelCost As String, pNYO As Boolean, pNYD As Boolean, pOrg As String, pDestID As String, pSCAC As String, calcRate As RateCompare, pEq As String) As Double
'tFixRate, tRTMiles, tRTDriverType, tRTFuelSurchage, tRTNYOArb, tRTNYDArb
Dim fCost As Double
    
    fCost = 0
    
    'we should verify they deliver there
     Dim tRateCol As String
     Dim tRateRow As Long
     Dim tSurRate As Double
     Dim tSurRateStr As String
     Dim tEqtID As Integer
     
     
     tEqtID = ThisWorkbook.equiptmentCol(pEq).ID
     On Error Resume Next
     tRateCol = ThisWorkbook.LocationCol(pDestID).RateColumn
     tRateRow = ThisWorkbook.St2St1("" & pSCAC & "-" & tEqtID).FirstRow + ThisWorkbook.LocationCol(pOrg).Offset
     tSurRateStr = Sheets("S2S Rates").Range(tRateCol & tRateRow)
     On Error GoTo 0
     calcRate.s2sREtype = pOrg & " to " & pDestID
        
     
     
     
     If Len(tSurRateStr) > 0 Then
         
         Debug.Print scac & "/" & tRateCol & tRateRow
         tRateSur = Val(tSurRateStr) * pMiles
            calcRate.s2sREQty = pMiles
            calcRate.s2sRERate = Val(tSurRateStr)
            calcRate.s2sRECharge = tRateSur
    
        If Len(pDrvType) > 0 And Len(pFixedRate.scac) > 0 Then
            Select Case pDrvType
            Case "None Selected"
            fCost = 0
            Case "Single Driver, w/FSC (RT1)", "Single Driver, Security Function, w/FSC (RT1)"
                fCost = (pFixedRate.MTdhCPM + calcRate.s2sRERate) * Val(pMiles)
                If fCost < pFixedRate.MT1dhMin Then
                    fCost = pFixedRate.MT1dhMin
                End If
               calcRate.EERCharge = fCost
               calcRate.EERType = pEq
               calcRate.EERMC = pFixedRate.MT1dhMin
               calcRate.EERQty = Val(pMiles)
               calcRate.EERRate = pFixedRate.MTdhCPM
            
         
            
            
            
            Case "Driver Team, w/FSC (RT2)", "Driver Team, Security Function, w/FSC (RT2)"
                fCost = (pFixedRate.dhCPM + calcRate.s2sRERate) * Val(pMiles)
                If fCost < pFixedRate.MT2dhMin Then
                    fCost = pFixedRate.MT2dhMin
                End If
                
                calcRate.EERCharge = fCost
                calcRate.EERType = pEq
                calcRate.EERMC = pFixedRate.MT2dhMin
                calcRate.EERQty = Val(pMiles)
                calcRate.EERRate = pFixedRate.dhCPM
                
                
                
            End Select
                         
            fCost = fCost + (Val(pMiles) * Val(pFuelCost))
            calcRate.EEFCCharge = (Val(pMiles) * Val(pFuelCost))
            calcRate.EEFCMC = 0
            calcRate.EEFCQty = Val(pMiles)
            calcRate.EEFCRate = Val(pFuelCost)
                         
            Dim tRTDrvCost As Double
            tRTDrvCost = BestDriverCost(pSCAC, Val(pMiles), pDrvType, "RTE", calcRate)
            If tRTDrvCost = -1 Then
              CarrierSkip = True
              fCost = -1
            End If
                             
        Else
            
              CarrierSkip = True
              fCost = -1
        End If
                        
        'Long Island Charge
        If ThisWorkbook.LocationCol(pOrg).NYLIAllowed = 1 And pNYO And fCost > -1 Then
            fCost = fCost + ThisWorkbook.ScacCol(pSCAC).nyliRATE
            calcRate.EENYOCharge = ThisWorkbook.ScacCol(pSCAC).nyliRATE
            calcRate.EENYOMC = 0
            calcRate.EENYOQty = 1
            calcRate.EENYORate = ThisWorkbook.ScacCol(pSCAC).nyliRATE
            
        End If
        
        If ThisWorkbook.LocationCol(pDestID).NYLIAllowed = 1 And pNYD And fCost > -1 Then
            If pNYO = False Then
                fCost = fCost + ThisWorkbook.ScacCol(pSCAC).nyliRATE
                fCost = fCost + ThisWorkbook.ScacCol(pSCAC).nyliRATE
                calcRate.EENYDCharge = ThisWorkbook.ScacCol(pSCAC).nyliRATE
                calcRate.EENYDMC = 0
                calcRate.EENYDQty = 1
                calcRate.EENYDRate = ThisWorkbook.ScacCol(pSCAC).nyliRATE
            End If
        End If
        Dim tEExUse As Double
        
        tEExUse = ThisWorkbook.ScacCol(pSCAC).exUseRate
          If tEExUse > 0 Then
              calcRate.EExUseCharge = tEExUse
              calcRate.EexUseQty = 1
              calcRate.EexUseRate = tEExUse
          End If
        
    Else
        fCost = -1
        CarrierSkip = True
    End If
    RoundTripEmptyCost = fCost
End Function

Public Function detainCost(pSCAC As String, pDrvType As String, pPUHrs As String, pWOPUHrs As String, calcRate As RateCompare, pLoc As String) As Double
    
    Dim fCost As Double
    fCost = 0
    If pLoc = "ORIGIN" Then
        calcRate.DOWPType = pDrvType
    End If
    If pLoc = "DEST" Then
        calcRate.DDWPType = pDrvType
    End If
    
    Select Case pDrvType
    Case "Single, Uncleared"
        
        fCost = ThisWorkbook.ScacCol(pSCAC).DetWPuRate * Val(pPUHrs)
        If fCost > ThisWorkbook.ScacCol(pSCAC).DetWPu1NonClearMax Then
            fCost = ThisWorkbook.ScacCol(pSCAC).DetWPu1NonClearMax
        End If
        
        If pLoc = "ORIGIN" And Val(pPUHrs) > 0 Then
            calcRate.DOWPRate = ThisWorkbook.ScacCol(pSCAC).DetWPuRate
            calcRate.DOWPQty = Val(pPUHrs)
            calcRate.DOWPMC = ThisWorkbook.ScacCol(pSCAC).DetWPu1NonClearMax
            calcRate.DOWPCharge = fCost
            
        End If
        If pLoc = "DEST" And Val(pPUHrs) > 0 Then
            calcRate.DDWPRate = ThisWorkbook.ScacCol(pSCAC).DetWPuRate
            calcRate.DDWPQty = Val(pPUHrs)
            calcRate.DDWPMC = ThisWorkbook.ScacCol(pSCAC).DetWPu1NonClearMax
            calcRate.DDWPCharge = fCost
        End If
        
    Case "Team, Uncleared"
        fCost = ThisWorkbook.ScacCol(pSCAC).DetWPuRate * Val(pPUHrs)
        If fCost > ThisWorkbook.ScacCol(pSCAC).detWPu2NonClearMax Then
            fCost = ThisWorkbook.ScacCol(pSCAC).detWPu2NonClearMax
        End If
        
        If pLoc = "ORIGIN" And Val(pPUHrs) > 0 Then
            calcRate.DOWPRate = ThisWorkbook.ScacCol(pSCAC).DetWPuRate
            calcRate.DOWPQty = Val(pPUHrs)
            calcRate.DOWPMC = ThisWorkbook.ScacCol(pSCAC).detWPu2NonClearMax
            calcRate.DOWPCharge = fCost
            
        End If
        If pLoc = "DEST" And Val(pPUHrs) > 0 Then
            calcRate.DDWPRate = ThisWorkbook.ScacCol(pSCAC).DetWPuRate
            calcRate.DDWPQty = Val(pPUHrs)
            calcRate.DDWPMC = ThisWorkbook.ScacCol(pSCAC).detWPu2NonClearMax
            calcRate.DDWPCharge = fCost
        End If
        
    Case "Single, Cleared"
        fCost = ThisWorkbook.ScacCol(pSCAC).DetWPuRate * Val(pPUHrs)
        If fCost > ThisWorkbook.ScacCol(pSCAC).detWPu1ClearMax Then
            fCost = ThisWorkbook.ScacCol(pSCAC).detWPu1ClearMax
        End If
        If pLoc = "ORIGIN" And Val(pPUHrs) > 0 Then
            calcRate.DOWPRate = ThisWorkbook.ScacCol(pSCAC).DetWPuRate
            calcRate.DOWPQty = Val(pPUHrs)
            calcRate.DOWPMC = ThisWorkbook.ScacCol(pSCAC).detWPu1ClearMax
            calcRate.DOWPCharge = fCost
            
        End If
        If pLoc = "DEST" And Val(pPUHrs) > 0 Then
            calcRate.DDWPRate = ThisWorkbook.ScacCol(pSCAC).DetWPuRate
            calcRate.DDWPQty = Val(pPUHrs)
            calcRate.DDWPMC = ThisWorkbook.ScacCol(pSCAC).detWPu1ClearMax
            calcRate.DDWPCharge = fCost
        End If
        
    
    Case "Team, Cleared"
        fCost = ThisWorkbook.ScacCol(pSCAC).DetWPuRate * Val(pPUHrs)
        If fCost > ThisWorkbook.ScacCol(pSCAC).detwPU2ClearMax Then
            fCost = ThisWorkbook.ScacCol(pSCAC).detwPU2ClearMax
        End If
        If pLoc = "ORIGIN" And Val(pPUHrs) > 0 Then
            calcRate.DOWPRate = ThisWorkbook.ScacCol(pSCAC).DetWPuRate
            calcRate.DOWPQty = Val(pPUHrs)
            calcRate.DOWPMC = ThisWorkbook.ScacCol(pSCAC).detwPU2ClearMax
            calcRate.DOWPCharge = fCost
            
        End If
        If pLoc = "DEST" And Val(pPUHrs) > 0 Then
            calcRate.DDWPRate = ThisWorkbook.ScacCol(pSCAC).DetWPuRate
            calcRate.DDWPQty = Val(pPUHrs)
            calcRate.DDWPMC = ThisWorkbook.ScacCol(pSCAC).detwPU2ClearMax
            calcRate.DDWPCharge = fCost
        End If
        
    End Select
    
    fCost = fCost + Val(pWOPUHrs) * ThisWorkbook.ScacCol(pSCAC).detWOPowerRate
    If pLoc = "ORIGIN" And Val(pWOPUHrs) > 0 Then
            calcRate.DOWoPRate = ThisWorkbook.ScacCol(pSCAC).detWOPowerRate
            calcRate.DOWoPQty = Val(pWOPUHrs)
            calcRate.DOWoPMC = 0
            calcRate.DOWoPCharge = Val(pWOPUHrs) * ThisWorkbook.ScacCol(pSCAC).detWOPowerRate
            
        End If
        If pLoc = "DEST" And Val(pWOPUHrs) > 0 Then
            calcRate.DDWoPRate = ThisWorkbook.ScacCol(pSCAC).detWOPowerRate
            calcRate.DDWoPQty = Val(pWOPUHrs)
            calcRate.DDWoPMC = 0
            calcRate.DDWoPCharge = Val(pWOPUHrs) * ThisWorkbook.ScacCol(pSCAC).detWOPowerRate
        End If
        
    detainCost = fCost
End Function

Public Function LayoverCost(pSCAC As String, pDrvType As String, pDays As String, calcRate As RateCompare, Loc As String) As Double
    Dim fCost As Double
    fCost = 0
    
    If Loc = "ORIGIN" Then
        calcRate.LOoType = pDrvType
    End If
    
    If Loc = "DEST" Then
        calcRate.LOdType = pDrvType
    End If
    
    
    Select Case pDrvType
    Case "Single, Uncleared"
        If Len(ThisWorkbook.ScacCol(pSCAC).LO1NonClearRate) = 0 Then
            fCost = -1
        Else
            fCost = Val(pDays) * Val(ThisWorkbook.ScacCol(pSCAC).LO1NonClearRate)
            If Loc = "ORIGIN" Then
                calcRate.LOoQty = Val(pDays)
                calcRate.LOoMC = 0
                calcRate.LOoRate = Val(ThisWorkbook.ScacCol(pSCAC).LO1NonClearRate)
                calcRate.LOoCharge = fCost
            End If
    
            If Loc = "DEST" Then
                calcRate.LOdQty = Val(pDays)
                calcRate.LOdMC = 0
                calcRate.LOdRate = Val(ThisWorkbook.ScacCol(pSCAC).LO1NonClearRate)
                calcRate.LOdCharge = fCost
            End If
        End If
    Case "Team, Uncleared"
        If Len(ThisWorkbook.ScacCol(pSCAC).LO2NonClearRate) = 0 Then
            fCost = -1
        Else
            fCost = Val(pDays) * Val(ThisWorkbook.ScacCol(pSCAC).LO2NonClearRate)
            If Loc = "ORIGIN" Then
                calcRate.LOoQty = Val(pDays)
                calcRate.LOoMC = 0
                calcRate.LOoRate = Val(ThisWorkbook.ScacCol(pSCAC).LO2NonClearRate)
                calcRate.LOoCharge = fCost
            End If
    
            If Loc = "DEST" Then
                calcRate.LOdQty = Val(pDays)
                calcRate.LOdMC = 0
                calcRate.LOdRate = Val(ThisWorkbook.ScacCol(pSCAC).LO2NonClearRate)
                calcRate.LOdCharge = fCost
            End If

        End If
    Case "Single, Cleared"
        If Len(ThisWorkbook.ScacCol(pSCAC).LO1ClearRate) = 0 Then
            fCost = 1
        Else
            fCost = Val(pDays) * Val(ThisWorkbook.ScacCol(pSCAC).LO1ClearRate)
             If Loc = "ORIGIN" Then
                calcRate.LOoQty = Val(pDays)
                calcRate.LOoMC = 0
                calcRate.LOoRate = Val(ThisWorkbook.ScacCol(pSCAC).LO1ClearRate)
                calcRate.LOoCharge = fCost
            End If
    
            If Loc = "DEST" Then
                calcRate.LOdQty = Val(pDays)
                calcRate.LOdMC = 0
                calcRate.LOdRate = Val(ThisWorkbook.ScacCol(pSCAC).LO1ClearRate)
                calcRate.LOdCharge = fCost
            End If

        End If
    Case "Team, Cleared"
        If Len(ThisWorkbook.ScacCol(pSCAC).LO2ClearRate) = 0 Then
            fCost = -1
        Else
            fCost = Val(pDays) * Val(ThisWorkbook.ScacCol(pSCAC).LO2ClearRate)
            If Loc = "ORIGIN" Then
                calcRate.LOoQty = Val(pDays)
                calcRate.LOoMC = 0
                calcRate.LOoRate = Val(ThisWorkbook.ScacCol(pSCAC).LO2ClearRate)
                calcRate.LOoCharge = fCost
            End If
    
            If Loc = "DEST" Then
                calcRate.LOdQty = Val(pDays)
                calcRate.LOdMC = 0
                calcRate.LOdRate = Val(ThisWorkbook.ScacCol(pSCAC).LO2ClearRate)
                calcRate.LOdCharge = fCost
            End If

        End If
    End Select
    
    LayoverCost = fCost
    
End Function
Public Function TrailerStorage(pSCAC As String, pDays As String, calcRate As RateCompare, Loc As String) As Double
    Dim fCost As Double
    
    fCost = 0
    If Len(ThisWorkbook.ScacCol(pSCAC).trlstgRATE) = 0 Then
        fCost = -1
    Else
        fCost = Val(pDays) * Val(ThisWorkbook.ScacCol(pSCAC).trlstgRATE)
        If Loc = "ORIGIN" And Val(pDays) > 0 Then
            calcRate.TSoQty = Val(pDays)
            calcRate.TSoMC = 0
            calcRate.TSoRate = Val(ThisWorkbook.ScacCol(pSCAC).trlstgRATE)
            calcRate.TSoCharge = fCost
        End If
        If Loc = "DEST" And Val(pDays) > 0 Then
            calcRate.TSdQty = Val(pDays)
            calcRate.TSdMC = 0
            calcRate.TSdRate = Val(ThisWorkbook.ScacCol(pSCAC).trlstgRATE)
            calcRate.TSdCharge = fCost
        End If
        
    End If
    
    
    TrailerStorage = fCost
End Function

Public Function OverWidthCost(pSCAC As String, pWidth As String, pMiles As Integer, calcRate As RateCompare) As Double
    Dim fCost As Double
    Dim fTempCost As Double
    Dim frate As Double
    Dim fmin As Double
    
    calcRate.OwType = pWidth
    fCost = 0
    Select Case pWidth
    Case "8.5' - 10'"
         If Len(ThisWorkbook.ScacCol(pSCAC).ow85FAC) = 0 Then
            fCost = -1
        Else
 
            fTempCost = pMiles * Val(ThisWorkbook.ScacCol(pSCAC).ow85FAC)
            If fTempCost < Val(ThisWorkbook.ScacCol(pSCAC).ow85MIN) Then
                fTempCost = Val(ThisWorkbook.ScacCol(pSCAC).ow85MIN)
            End If
            fCost = fCost + fTempCost
            calcRate.OwQty = pMiles
            calcRate.OwMC = Val(ThisWorkbook.ScacCol(pSCAC).ow85MIN)
            calcRate.OwRate = Val(ThisWorkbook.ScacCol(pSCAC).ow85FAC)
            calcRate.OwCharge = fTempCost
            
        End If
    Case "10' - 12'"
       If Len(ThisWorkbook.ScacCol(pSCAC).ow10FAC) = 0 Then
            fCost = -1
        Else
            fTempCost = pMiles * Val(ThisWorkbook.ScacCol(pSCAC).ow10FAC)
            If fTempCost < Val(ThisWorkbook.ScacCol(pSCAC).ow10MIN) Then
                fTempCost = Val(ThisWorkbook.ScacCol(pSCAC).ow10MIN)
            End If
            fCost = fCost + fTempCost
            calcRate.OwQty = pMiles
            calcRate.OwMC = Val(ThisWorkbook.ScacCol(pSCAC).ow10MIN)
            calcRate.OwRate = Val(ThisWorkbook.ScacCol(pSCAC).ow10FAC)
            calcRate.OwCharge = fTempCost
            
        End If
    Case "12' - 13'"
        If Len(ThisWorkbook.ScacCol(pSCAC).ow12FAC) = 0 Then
            fCost = -1
        Else
            fTempCost = pMiles * Val(ThisWorkbook.ScacCol(pSCAC).ow12FAC)
            If fTempCost < Val(ThisWorkbook.ScacCol(pSCAC).ow12MIN) Then
                fTempCost = Val(ThisWorkbook.ScacCol(pSCAC).ow12MIN)
            End If
            fCost = fCost + fTempCost
            calcRate.OwQty = pMiles
            calcRate.OwMC = Val(ThisWorkbook.ScacCol(pSCAC).ow12MIN)
            calcRate.OwRate = Val(ThisWorkbook.ScacCol(pSCAC).ow12FAC)
            calcRate.OwCharge = fTempCost
            
        End If
    Case "13' - 14'"
        If Len(ThisWorkbook.ScacCol(pSCAC).ow13FAC) = 0 Then
            fCost = -1
        Else
            fTempCost = pMiles * Val(ThisWorkbook.ScacCol(pSCAC).ow13FAC)
            If fTempCost < Val(ThisWorkbook.ScacCol(pSCAC).ow13MIN) Then
                fTempCost = Val(ThisWorkbook.ScacCol(pSCAC).ow13MIN)
            End If
            fCost = fCost + fTempCost
            calcRate.OwQty = pMiles
            calcRate.OwMC = Val(ThisWorkbook.ScacCol(pSCAC).ow13MIN)
            calcRate.OwRate = Val(ThisWorkbook.ScacCol(pSCAC).ow13FAC)
            calcRate.OwCharge = fTempCost
            
        End If
    Case "14' - 15'"
        If Len(ThisWorkbook.ScacCol(pSCAC).ow14FAC) = 0 Then
            fCost = -1
        Else
            fTempCost = pMiles * Val(ThisWorkbook.ScacCol(pSCAC).ow14FAC)
            If fTempCost < Val(ThisWorkbook.ScacCol(pSCAC).ow14MIN) Then
                fTempCost = Val(ThisWorkbook.ScacCol(pSCAC).ow14MIN)
            End If
            fCost = fCost + fTempCost
            calcRate.OwQty = pMiles
            calcRate.OwMC = Val(ThisWorkbook.ScacCol(pSCAC).ow14MIN)
            calcRate.OwRate = Val(ThisWorkbook.ScacCol(pSCAC).ow14FAC)
            calcRate.OwCharge = fTempCost
            
        End If
    Case "15' - 16'"
  If Len(ThisWorkbook.ScacCol(pSCAC).ow15FAC) = 0 Then
            fCost = -1
        Else
            fTempCost = pMiles * Val(ThisWorkbook.ScacCol(pSCAC).ow15FAC)
            If fTempCost < Val(ThisWorkbook.ScacCol(pSCAC).ow15MIN) Then
                fTempCost = Val(ThisWorkbook.ScacCol(pSCAC).ow15MIN)
                
            End If
            fCost = fCost + fTempCost
            calcRate.OwQty = pMiles
            calcRate.OwMC = Val(ThisWorkbook.ScacCol(pSCAC).ow15MIN)
            calcRate.OwRate = Val(ThisWorkbook.ScacCol(pSCAC).ow15FAC)
            calcRate.OwCharge = fTempCost
            
        End If
    
    Case "16' - 17'"
        If Len(ThisWorkbook.ScacCol(pSCAC).ow16FAC) = 0 Then
            fCost = -1
        Else
            fTempCost = pMiles * Val(ThisWorkbook.ScacCol(pSCAC).ow16FAC)
            If fTempCost < Val(ThisWorkbook.ScacCol(pSCAC).ow16MIN) Then
                fTempCost = Val(ThisWorkbook.ScacCol(pSCAC).ow16MIN)
            End If
            fCost = fCost + fTempCost
            calcRate.OwQty = pMiles
            calcRate.OwMC = Val(ThisWorkbook.ScacCol(pSCAC).ow16MIN)
            calcRate.OwRate = Val(ThisWorkbook.ScacCol(pSCAC).ow16FAC)
            calcRate.OwCharge = fTempCost
            
        End If
    Case "17' -"
        If Len(ThisWorkbook.ScacCol(pSCAC).ow17FAC) = 0 Then
            fCost = -1
        Else
            fTempCost = pMiles * Val(ThisWorkbook.ScacCol(pSCAC).ow17FAC)
            If fTempCost < Val(ThisWorkbook.ScacCol(pSCAC).ow17MIN) Then
                fTempCost = Val(ThisWorkbook.ScacCol(pSCAC).ow17MIN)
            End If
            fCost = fCost + fTempCost
            calcRate.OwQty = pMiles
            calcRate.OwMC = Val(ThisWorkbook.ScacCol(pSCAC).ow17MIN)
            calcRate.OwRate = Val(ThisWorkbook.ScacCol(pSCAC).ow17FAC)
            calcRate.OwCharge = fTempCost
            
        End If
    End Select
    
    OverWidthCost = fCost
End Function

Public Function OverHeightCost(pSCAC As String, pHeight As String, pMiles As Integer, calcRate As RateCompare) As Double
    Dim fCost As Double
    Dim fTempCost As Double
    
    calcRate.OHTYpe = pHeight
    fCost = 0
    Select Case pHeight
    Case "14' - 14.5'"
        If Len(ThisWorkbook.ScacCol(pSCAC).oh14FAC) = 0 Then
            fCost = -1
        Else
 
            fTempCost = pMiles * Val(ThisWorkbook.ScacCol(pSCAC).oh14FAC)
            If fTempCost < Val(ThisWorkbook.ScacCol(pSCAC).oh14MIN) Then
                fTempCost = Val(ThisWorkbook.ScacCol(pSCAC).oh14MIN)
            End If
            fCost = fCost + fTempCost
            calcRate.OHQty = pMiles
            calcRate.OHMC = Val(ThisWorkbook.ScacCol(pSCAC).oh14MIN)
            calcRate.OHRate = Val(ThisWorkbook.ScacCol(pSCAC).oh14FAC)
            calcRate.OHCharge = fTempCost
            
        End If
    Case "14.5' - 15'"
        If Len(ThisWorkbook.ScacCol(pSCAC).oh145FAC) = 0 Then
            fCost = -1
        Else
 
            fTempCost = pMiles * Val(ThisWorkbook.ScacCol(pSCAC).oh145FAC)
            If fTempCost < Val(ThisWorkbook.ScacCol(pSCAC).oh145MIN) Then
                fTempCost = Val(ThisWorkbook.ScacCol(pSCAC).oh145MIN)
            End If
            fCost = fCost + fTempCost
            calcRate.OHQty = pMiles
            calcRate.OHMC = Val(ThisWorkbook.ScacCol(pSCAC).oh145MIN)
            calcRate.OHRate = Val(ThisWorkbook.ScacCol(pSCAC).oh145FAC)
            calcRate.OHCharge = fTempCost
            
        End If
    Case "15' - 16'"
        If Len(ThisWorkbook.ScacCol(pSCAC).oh15FAC) = 0 Then
            fCost = -1
        Else
        
            fTempCost = pMiles * Val(ThisWorkbook.ScacCol(pSCAC).oh15FAC)
            If fTempCost < Val(ThisWorkbook.ScacCol(pSCAC).oh15MIN) Then
                fTempCost = Val(ThisWorkbook.ScacCol(pSCAC).oh15MIN)
            End If
            fCost = fCost + fTempCost
            calcRate.OHQty = pMiles
            calcRate.OHMC = Val(ThisWorkbook.ScacCol(pSCAC).oh15MIN)
            calcRate.OHRate = Val(ThisWorkbook.ScacCol(pSCAC).oh15FAC)
            calcRate.OHCharge = fTempCost
            
        End If
    Case "16' - 17'"
            If Len(ThisWorkbook.ScacCol(pSCAC).oh16FAC) = 0 Then
                fCost = -1
            Else
        
            fTempCost = pMiles * Val(ThisWorkbook.ScacCol(pSCAC).oh16FAC)
            If fTempCost < Val(ThisWorkbook.ScacCol(pSCAC).oh16MIN) Then
                fTempCost = Val(ThisWorkbook.ScacCol(pSCAC).oh16MIN)
            End If
            fCost = fCost + fTempCost
            calcRate.OHQty = pMiles
            calcRate.OHMC = Val(ThisWorkbook.ScacCol(pSCAC).oh16MIN)
            calcRate.OHRate = Val(ThisWorkbook.ScacCol(pSCAC).oh16FAC)
            calcRate.OHCharge = fTempCost
            
        End If
    Case "17' - 18'"
    If Len(ThisWorkbook.ScacCol(pSCAC).oh17FAC) = 0 Then
            fCost = -1
        Else
        
            fTempCost = pMiles * Val(ThisWorkbook.ScacCol(pSCAC).oh17FAC)
            If fTempCost < Val(ThisWorkbook.ScacCol(pSCAC).oh17MIN) Then
                fTempCost = Val(ThisWorkbook.ScacCol(pSCAC).oh17MIN)
            End If
            fCost = fCost + fTempCost
            calcRate.OHQty = pMiles
            calcRate.OHMC = Val(ThisWorkbook.ScacCol(pSCAC).oh17MIN)
            calcRate.OHRate = Val(ThisWorkbook.ScacCol(pSCAC).oh17FAC)
            calcRate.OHCharge = fTempCost
            
        End If
    End Select
    OverHeightCost = fCost
End Function

Public Function OverLengthCost(pSCAC As String, pLength As String, pMiles As Integer, pOverage As String, calcRate As RateCompare) As Double
    Dim fCost As Double
    Dim fTempCost As Double
    
    calcRate.OLTYpe = pLength
    fCost = 0
    Select Case pLength
    Case "53' - 55'"
        If Len(ThisWorkbook.ScacCol(pSCAC).ol53FAC) = 0 Then
            fCost = -1
        Else
            fTempCost = pMiles * Val(ThisWorkbook.ScacCol(pSCAC).ol53FAC)
            If fTempCost < Val(ThisWorkbook.ScacCol(pSCAC).ol53MIN) Then
                fTempCost = Val(ThisWorkbook.ScacCol(pSCAC).ol53MIN)
            End If
            fCost = fCost + fTempCost
            calcRate.OLQty = pMiles
            calcRate.OLMC = Val(ThisWorkbook.ScacCol(pSCAC).ol53MIN)
            calcRate.OLRate = Val(ThisWorkbook.ScacCol(pSCAC).ol53FAC)
            calcRate.OLCharge = fTempCost
            
        End If
    Case "55' -  60'"
        If Len(ThisWorkbook.ScacCol(pSCAC).ol55FAC) = 0 Then
            fCost = -1
        Else
        
            fTempCost = pMiles * Val(ThisWorkbook.ScacCol(pSCAC).ol55FAC)
            If fTempCost < Val(ThisWorkbook.ScacCol(pSCAC).ol55MIN) Then
                fTempCost = Val(ThisWorkbook.ScacCol(pSCAC).ol55MIN)
            End If
            fCost = fCost + fTempCost
            calcRate.OLQty = pMiles
            calcRate.OLMC = Val(ThisWorkbook.ScacCol(pSCAC).ol55MIN)
            calcRate.OLRate = Val(ThisWorkbook.ScacCol(pSCAC).ol55FAC)
            calcRate.OLCharge = fTempCost
            
        End If
    Case "60' - 65'"
        If Len(ThisWorkbook.ScacCol(pSCAC).ol60FAC) = 0 Then
            fCost = -1
        Else
        
            fTempCost = pMiles * Val(ThisWorkbook.ScacCol(pSCAC).ol60FAC)
            If fTempCost < Val(ThisWorkbook.ScacCol(pSCAC).ol60MIN) Then
                fTempCost = Val(ThisWorkbook.ScacCol(pSCAC).ol60MIN)
            End If
            fCost = fCost + fTempCost
            calcRate.OLQty = pMiles
            calcRate.OLMC = Val(ThisWorkbook.ScacCol(pSCAC).ol60MIN)
            calcRate.OLRate = Val(ThisWorkbook.ScacCol(pSCAC).ol60FAC)
            calcRate.OLCharge = fTempCost
            
        End If
    End Select
    
    If Val(pOverage) > 0 Then
        Dim tOvr As Integer
         If Len(ThisWorkbook.ScacCol(pSCAC).ol65FAC) = 0 Then
            fCost = -1
        Else
        
            tOvr = Val(pOverage) - 65
            fTempCost = pMiles * (Val(ThisWorkbook.ScacCol(pSCAC).ol65FAC) + (0.05 * tOvr))
            If fTempCost < Val(ThisWorkbook.ScacCol(pSCAC).ol65MIN) Then
                fTempCost = Val(ThisWorkbook.ScacCol(pSCAC).ol65MIN)
            End If
            fCost = fCost + fTempCost
            calcRate.OLQty = pMiles
            calcRate.OLMC = Val(ThisWorkbook.ScacCol(pSCAC).ol65MIN)
            calcRate.OLRate = Val(ThisWorkbook.ScacCol(pSCAC).ol65FAC)
            calcRate.OLCharge = fTempCost
            If tOvr > 0 Then
                calcRate.OLbTYpe = pOverage
                calcRate.OLbQty = pMiles
                calcRate.OLbMC = 0
                calcRate.OLbRate = 0.05 * tOvr
            End If
            
        End If
    End If
    OverLengthCost = fCost
End Function

Public Sub CalcLineHaul(ByRef tFixRate As FixedRates, ByRef tmiles As Integer, ByRef Origin As String, ByRef Destination As String, scac As String, equptID As Integer, CarrierSkip As Boolean, tRateSur As Double, tBaseCost As Double, ttotal As Double, tFuelSurCharge As Double, tHwyRteCtrlCost As Double, tDrvCost As Double, tDrivers As String, tMatID As Integer, tFuelcost As Double, tNYLIOrg As Boolean, tNYLIDest As Boolean, tNYFee As Double, pFMCSA As Boolean, pRteCTRl As Boolean, calcRate As RateCompare, tType As String)
 
    Debug.Print scac
    
    If tType = "GEN" Then
        calcRate.HWRCQTY = 0
        calcRate.HWRCRate = 0
        calcRate.HWRCMC = 0
        calcRate.HWRCCharge = 0
        calcRate.s2sQty = 0
        calcRate.s2sRate = 0
        calcRate.s2sMC = 0
        calcRate.s2sCharge = 0
        calcRate.NYLHdCharge = 0
        calcRate.NYLHdMC = 0
        calcRate.NYLHdQty = 0
        calcRate.NYLHdRate = 0
        calcRate.NYLHoCharge = 0
        calcRate.NYLHoMC = 0
        calcRate.NYLHoQty = 0
        calcRate.NYLHoRate = 0
        calcRate.LHDrvQty = 0
        calcRate.LHDrvRate = 0
        calcRate.LHDrvMC = 0
        calcRate.LHDrvCharge = 0
        calcRate.LHDrvType = ""
        calcRate.LHFSCharge = 0
        calcRate.LHFSMC = 0
        calcRate.LHFSQty = 0
        calcRate.LHFSRate = 0
        
    End If
    If tType = "RET" Then
        calcRate.DHWRCQTY = 0
        calcRate.DHWRCRate = 0
        calcRate.DHWRCMC = 0
        calcRate.DHWRCCharge = 0
    End If

     
     tBaseCost = tFixRate.baseCPM * tmiles
      
         
     'we should verify they deliver there
     Dim tRateCol As String
     Dim tRateRow As Long
     Dim tSurRate As Double
     Dim tSurRateStr As String
     
     
     On Error Resume Next
     tRateCol = ThisWorkbook.LocationCol(Destination).RateColumn
     tRateRow = ThisWorkbook.St2St1("" & scac & "-" & equptID).FirstRow + ThisWorkbook.LocationCol(Origin).Offset
     tSurRateStr = Sheets("S2S Rates").Range(tRateCol & tRateRow)
     On Error GoTo 0
     If tType = "GEN" Then
         calcRate.s2sType = Origin & " to " & Destination
        
     End If
     
     If tType = "RET" Then
        calcRate.s2sDtype = Origin & " to " & Destination
        
     End If
     
     
     If tType = "EM" Then
        calcRate.s2sEtype = Origin & " to " & Destination
        
     End If
     
     If Len(tSurRateStr) > 0 Then
         
         Debug.Print scac & "/" & tRateCol & tRateRow
         tRateSur = Val(tSurRateStr) * tmiles
          If tType = "GEN" Then
            calcRate.EquiptmentRate = tFixRate.baseCPM
            calcRate.EquiptmentQTY = tmiles
            calcRate.s2sQty = tmiles
        '    calcRate.s2sType = Origin & " to " & Destination
            calcRate.s2sRate = Val(tSurRateStr)
            calcRate.s2sCharge = tRateSur
          End If
          If tType = "RET" Then
            calcRate.DEquiptmentRate = tFixRate.baseCPM
            calcRate.DEquiptmentQty = tmiles
            calcRate.s2sDQty = tmiles
            calcRate.s2sDRate = Val(tSurRateStr)
            calcRate.s2sDCharge = tRateSur
          End If
          If tType = "EM" Then
            calcRate.EEquiptmentRate = tFixRate.baseCPM
            calcRate.EEquiptmentQty = tmiles
            calcRate.s2sEQty = tmiles
            calcRate.s2sERate = Val(tSurRateStr)
            calcRate.s2sECharge = tRateSur
          End If

         Select Case tMatID
         
         Case 1  'general freight
         
             ttotal = tBaseCost + tRateSur
             If tType = "GEN" Then
                calcRate.EquiptmentCharge = 0
             End If
             If tType = "RET" Then
                calcRate.DEquiptmentCharge = 0
             End If
             If tType = "EM" Then
                calcRate.EEquiptmentCharge = 0
             End If
             
             
             'check if below the minimum
         
             If tType = "GEN" Then
                 calcRate.EquiptmentMC = 0 'tFixRate.genMC
                 calcRate.MaterialMC = tFixRate.genMC
                 calcRate.MaterialRate = ThisWorkbook.ScacCol(scac).GenFactor
             End If
              
              If tType = "RET" Then
                 calcRate.DEquiptmentMC = 0 'tFixRate.genMC
                 calcRate.DMaterialMC = tFixRate.genMC
                 calcRate.DMaterialRate = ThisWorkbook.ScacCol(scac).GenFactor
             End If
              If tType = "EM" Then
                 calcRate.EEquiptmentMC = 0 'tFixRate.genMC
                 calcRate.EMaterialMC = tFixRate.genMC
                 calcRate.EMaterialRate = ThisWorkbook.ScacCol(scac).GenFactor
             End If
             
             If ThisWorkbook.ScacCol(scac).GenFactor <> 0 Then
            
                 tHazFactor = ThisWorkbook.ScacCol(scac).GenFactor * tmiles
                 ttotal = ttotal + tHazFactor
                 If ttotal < tFixRate.genMC Then
                    ttotal = tFixRate.genMC
                 End If

                 If tType = "GEN" Then
                    calcRate.MaterialQty = tmiles
                    calcRate.MaterialMC = tFixRate.genMC
                    calcRate.MaterialCharge = ttotal
                 End If
                 If tType = "RET" Then
                    calcRate.DMaterialQty = tmiles
                    calcRate.DMaterialMC = tFixRate.genMC
                    calcRate.DMaterialCharge = ttotal
                 End If
                 If tType = "EM" Then
                    calcRate.EMaterialQty = tmiles
                    calcRate.EMaterialMC = tFixRate.genMC
                    calcRate.EMaterialCharge = ttotal
                 End If
             Else
                 If ttotal < tFixRate.genMC Then
                    ttotal = tFixRate.genMC
                 End If

                 If tType = "GEN" Then
                    calcRate.MaterialQty = tmiles
                    calcRate.MaterialCharge = ttotal
                 End If
                 
                 If tType = "RET" Then
                    calcRate.DMaterialQty = tmiles
                    calcRate.DMaterialCharge = ttotal
                 End If
                 
                 If tType = "EM" Then
                    calcRate.EMaterialQty = tmiles
                    calcRate.EMaterialCharge = ttotal
                 End If
             End If
     
        
         Case 2 'hazardous non-radioactive
             ttotal = tBaseCost + tRateSur
             If tType = "GEN" Then
                calcRate.EquiptmentCharge = ttotal
             End If
             
             If tType = "RET" Then
                calcRate.DEquiptmentCharge = ttotal
             End If
             If tType = "EM" Then
                calcRate.EEquiptmentCharge = ttotal
             End If
             
             'check the phisma
             If Len(ThisWorkbook.ScacCol(scac).PhmsaNo) = 0 Or ThisWorkbook.ScacCol(scac).PhmsaExpDt < Now() Then
                 CarrierSkip = True
             End If
            
             'do we need fmcsa
             If pFMCSA Then
                 If Len(ThisWorkbook.ScacCol(scac).FMCSANo) = 0 Or ThisWorkbook.ScacCol(scac).FMSCAExpDt < Now() Then
                     CarrierSkip = True
                 End If
              End If
             
             
             If ThisWorkbook.ScacCol(scac).HazFactorInt <> -1 Then
            
                 tHazFactor = ThisWorkbook.ScacCol(scac).HazFactorInt * tmiles
                 ttotal = ttotal + tHazFactor
                 
                 If ttotal < tFixRate.HAZMC Then
                     ttotal = tFixRate.HAZMC
                 End If
                 
                 If tType = "GEN" Then
                    calcRate.MaterialQty = tmiles
                    calcRate.MaterialMC = tFixRate.HAZMC
                    calcRate.MaterialRate = ThisWorkbook.ScacCol(scac).HazFactorInt
                    calcRate.MaterialCharge = ttotal
                 End If
                 If tType = "RET" Then
                    calcRate.DMaterialQty = tmiles
                    calcRate.DMaterialMC = tFixRate.HAZMC
                    calcRate.DMaterialRate = ThisWorkbook.ScacCol(scac).HazFactorInt
                    calcRate.DMaterialCharge = ttotal
                 End If
                 If tType = "EM" Then
                    calcRate.EMaterialQty = tmiles
                    calcRate.EMaterialMC = tFixRate.HAZMC
                    calcRate.EMaterialRate = ThisWorkbook.ScacCol(scac).HazFactorInt
                    calcRate.EMaterialCharge = ttotal
                 End If
               
               
             Else
                 CarrierSkip = True
                 
             End If
                               
         Case 3 'Ricra
             
             ttotal = tBaseCost + tRateSur
             If tType = "GEN" Then
                calcRate.EquiptmentCharge = ttotal
             End If
             
             If tType = "RET" Then
                calcRate.DEquiptmentCharge = ttotal
             End If
             
             If tType = "EM" Then
                calcRate.EEquiptmentCharge = ttotal
             End If
             'need to have valid EPA Number
             Dim tRcraFactor As Double
             If Len(ThisWorkbook.ScacCol(scac).EPANo) = 0 Or ThisWorkbook.ScacCol(scac).EPAExpDt < Now() Then
                 CarrierSkip = True
             End If
             
             'need MCEP
             If UCase(ThisWorkbook.ScacCol(scac).MCEP) <> "YES" Then
                 CarrierSkip = True
             End If
             
            'check the phisma
             If Len(ThisWorkbook.ScacCol(scac).PhmsaNo) = 0 Or ThisWorkbook.ScacCol(scac).PhmsaExpDt < Now() Then
                 CarrierSkip = True
             End If
            
             
             'do we need fmcsa
             If pFMCSA Then
                 If Len(ThisWorkbook.ScacCol(scac).FMCSANo) = 0 Or ThisWorkbook.ScacCol(scac).FMSCAExpDt < Now() Then
                     CarrierSkip = True
                 End If
            
             End If
             
                 
             
             
             If ThisWorkbook.ScacCol(scac).RCRAFactorInt <> -1 Then
                 tRcraFactor = ThisWorkbook.ScacCol(scac).RCRAFactorInt * tmiles
                 ttotal = ttotal + tRcraFactor
                 
                     
               
                 If ttotal < tFixRate.rcraMC Then
                     ttotal = tFixRate.rcraMC
                 End If
                 
                 If tType = "GEN" Then
                    calcRate.MaterialQty = tmiles
                    calcRate.MaterialMC = tFixRate.rcraMC
                    calcRate.MaterialRate = ThisWorkbook.ScacCol(scac).RCRAFactorInt
                    calcRate.MaterialCharge = ttotal
                 End If
                 
                 If tType = "RET" Then
                    calcRate.DMaterialQty = tmiles
                    calcRate.DMaterialMC = tFixRate.rcraMC
                    calcRate.DMaterialRate = ThisWorkbook.ScacCol(scac).RCRAFactorInt
                    calcRate.DMaterialCharge = ttotal
                 End If
                 If tType = "EM" Then
                    calcRate.EMaterialQty = tmiles
                    calcRate.EMaterialMC = tFixRate.rcraMC
                    calcRate.EMaterialRate = ThisWorkbook.ScacCol(scac).RCRAFactorInt
                    calcRate.EMaterialCharge = ttotal
                 End If
                 
                 ttotal = ttotal + tFuelCharge * tmiles
             Else
                 CarrierSkip = True
             End If
          Case 4 'hazourdous material radio Active
             ttotal = tBaseCost + tRateSur
             If tType = "GEN" Then
                calcRate.EquiptmentCharge = ttotal
             End If
             If tType = "RET" Then
                calcRate.DEquiptmentCharge = ttotal
             End If
             
             If tType = "EM" Then
                calcRate.EEquiptmentCharge = ttotal
             End If
             
             
             
             'check the phisma
             If Len(ThisWorkbook.ScacCol(scac).PhmsaNo) = 0 Or ThisWorkbook.ScacCol(scac).PhmsaExpDt < Now() Then
                 CarrierSkip = True
             End If
            
             'do we need fmcsa
             If pFMCSA Or pRteCTRl Then
                 If Len(ThisWorkbook.ScacCol(scac).FMCSANo) = 0 Or ThisWorkbook.ScacCol(scac).FMSCAExpDt < Now() Then
                     CarrierSkip = True
                 End If
              End If
             
             tHwyRteCtrlCost = 0
             'need to check for highway route control
             If pRteCTRl Then
                 'mcp carier
                 If UCase(ThisWorkbook.ScacCol(scac).MCEP) <> "YES" Then
                     CarrierSkip = True
                 End If
                 
                  
                 
                 If Len(Trim(ThisWorkbook.ScacCol(scac).hrcqFAC)) > 0 Then
                         tHwyRteCtrlCost = Val(ThisWorkbook.ScacCol(scac).hrcqFAC) * tmiles
                         If tHwyRteCtrlCost < ThisWorkbook.ScacCol(scac).hrcqMIN Then
                             tHwyRteCtrlCost = ThisWorkbook.ScacCol(scac).hrcqMIN
                         End If
                         
                         'if min is > than max, you will get max
                         If tHwyRteCtrlCost > ThisWorkbook.ScacCol(scac).hrcqMAX And ThisWorkbook.ScacCol(scac).hrcqMAX > 0 Then
                             tHwyRteCtrlCost = ThisWorkbook.ScacCol(scac).hrcqMAX
                         End If
                         
                         If tType = "GEN" Then
                             calcRate.HWRCQTY = tmiles
                             calcRate.HWRCRate = Val(ThisWorkbook.ScacCol(scac).hrcqFAC)
                             calcRate.HWRCMC = ThisWorkbook.ScacCol(scac).hrcqMIN
                             calcRate.HWRCCharge = tHwyRteCtrlCost
    
                         End If
                         
                         If tType = "RET" Then
                             calcRate.DHWRCQTY = tmiles
                             calcRate.DHWRCRate = Val(ThisWorkbook.ScacCol(scac).hrcqFAC)
                             calcRate.DHWRCMC = ThisWorkbook.ScacCol(scac).hrcqMIN
                             calcRate.DHWRCCharge = tHwyRteCtrlCost
    
                         End If
                         
                         
                    
                 Else
                     CarrierSkip = True
                 End If
             End If
             If ThisWorkbook.ScacCol(scac).HazFactorInt <> -1 Then
                    
                 tHazFactor = ThisWorkbook.ScacCol(scac).HazFactorInt * tmiles
                 ttotal = ttotal + tHazFactor
                 If ttotal < tFixRate.HAZMC Then
                     ttotal = tFixRate.HAZMC
                 End If
                 If tType = "GEN" Then
                    calcRate.MaterialQty = tmiles
                    calcRate.MaterialMC = tFixRate.HAZMC
                    calcRate.MaterialRate = ThisWorkbook.ScacCol(scac).HazFactorInt
                    calcRate.MaterialCharge = ttotal
                 End If
                 
                 If tType = "RET" Then
                    calcRate.DMaterialQty = tmiles
                    calcRate.DMaterialMC = tFixRate.HAZMC
                    calcRate.DMaterialRate = ThisWorkbook.ScacCol(scac).HazFactorInt
                    calcRate.DMaterialCharge = ttotal
                 End If
                 If tType = "EM" Then
                    calcRate.EMaterialQty = tmiles
                    calcRate.EMaterialMC = tFixRate.HAZMC
                    calcRate.EMaterialRate = ThisWorkbook.ScacCol(scac).HazFactorInt
                    calcRate.EMaterialCharge = ttotal
                 End If
                 
             
             Else
                 CarrierSkip = True
                 
             End If
             ttotal = ttotal + tHwyRteCtrlCost
                 
                 
          Case 5 'low level RadioActiveWaste
          
             ttotal = tBaseCost + tRateSur
             If tType = "GEN" Then
                calcRate.EquiptmentCharge = ttotal
             End If
             
             If tType = "RET" Then
                calcRate.DEquiptmentCharge = ttotal
             End If
             
             
             If tType = "EM" Then
                calcRate.EEquiptmentCharge = ttotal
             End If
             
             
             If (Len(ThisWorkbook.ScacCol(scac).TexasNo) = 0 Or ThisWorkbook.ScacCol(scac).TexasPermitDt < Now()) And ThisWorkbook.LocationCol(Destination).TexasPermit = 1 Then
                CarrierSkip = True
             End If
            
             
             
             'check the phisma
             If Len(ThisWorkbook.ScacCol(scac).PhmsaNo) = 0 Or ThisWorkbook.ScacCol(scac).PhmsaExpDt < Now() Then
                 CarrierSkip = True
             End If
            
             'do we need fmcsa
             If pFMCSA Or pRteCTRl Then
                 If Len(ThisWorkbook.ScacCol(scac).FMCSANo) = 0 Or ThisWorkbook.ScacCol(scac).FMSCAExpDt < Now() Then
                     CarrierSkip = True
                 End If
              End If
             
             tHwyRteCtrlCost = 0
             'need to check for highway route control
             If pRteCTRl Then
                 'mcp carier
                 If UCase(ThisWorkbook.ScacCol(scac).MCEP) <> "YES" Then
                     CarrierSkip = True
                 End If
                 
                 If Len(Trim(ThisWorkbook.ScacCol(scac).hrcqFAC)) > 0 Then
                         tHwyRteCtrlCost = Val(ThisWorkbook.ScacCol(scac).hrcqFAC) * tmiles
                         If tHwyRteCtrlCost < ThisWorkbook.ScacCol(scac).hrcqMIN Then
                             tHwyRteCtrlCost = ThisWorkbook.ScacCol(scac).hrcqMIN
                         End If
                         
                         'if min is > than max, you will get max
                         If tHwyRteCtrlCost > ThisWorkbook.ScacCol(scac).hrcqMAX And ThisWorkbook.ScacCol(scac).hrcqMAX > 0 Then
                             tHwyRteCtrlCost = ThisWorkbook.ScacCol(scac).hrcqMAX
                         End If
                        
                          If tType = "GEN" Then
                             calcRate.HWRCQTY = tmiles
                             calcRate.HWRCRate = Val(ThisWorkbook.ScacCol(scac).hrcqFAC)
                             calcRate.HWRCMC = ThisWorkbook.ScacCol(scac).hrcqMIN
                             calcRate.HWRCCharge = tHwyRteCtrlCost
    
                         End If
                           If tType = "RET" Then
                             calcRate.DHWRCQTY = tmiles
                             calcRate.DHWRCRate = Val(ThisWorkbook.ScacCol(scac).hrcqFAC)
                             calcRate.DHWRCMC = ThisWorkbook.ScacCol(scac).hrcqMIN
                             calcRate.DHWRCCharge = tHwyRteCtrlCost
    
                         End If
                       
                   
                 Else
                     CarrierSkip = True
                 End If
             End If
             
             If ThisWorkbook.ScacCol(scac).LLWFactor <> -1 Then
            
                 tHazFactor = ThisWorkbook.ScacCol(scac).llWFactorInt * tmiles
                 ttotal = ttotal + tHazFactor
             
                 If ttotal < tFixRate.llwMC Then
                     ttotal = tFixRate.llwMC
                 End If
                 
                  If tType = "GEN" Then
                    calcRate.MaterialQty = tmiles
                    calcRate.MaterialMC = tFixRate.llwMC
                    calcRate.MaterialRate = ThisWorkbook.ScacCol(scac).llWFactorInt
                    calcRate.MaterialCharge = ttotal
                 End If
                
                If tType = "RET" Then
                    calcRate.DMaterialQty = tmiles
                    calcRate.DMaterialMC = tFixRate.llwMC
                    calcRate.DMaterialRate = ThisWorkbook.ScacCol(scac).llWFactorInt
                    calcRate.DMaterialCharge = ttotal
                 End If
                
                If tType = "EM" Then
                    calcRate.DMaterialQty = tmiles
                    calcRate.DMaterialMC = tFixRate.llwMC
                    calcRate.DMaterialRate = ThisWorkbook.ScacCol(scac).llWFactorInt
                    calcRate.DMaterialCharge = ttotal
                 End If
                
             Else
                 CarrierSkip = True
                 
             End If
             ttotal = ttotal + tHwyRteCtrlCost
          
          Case 6 'Mixed Low Level Radioactive Waste
             ttotal = tBaseCost + tRateSur
             If tType = "GEN" Then
                calcRate.EquiptmentCharge = ttotal
             End If
             If tType = "RET" Then
                calcRate.DEquiptmentCharge = ttotal
             End If
             If tType = "EM" Then
                calcRate.EEquiptmentCharge = ttotal
             End If
             
             
             
             
             'check the phisma
             If Len(ThisWorkbook.ScacCol(scac).PhmsaNo) = 0 Or ThisWorkbook.ScacCol(scac).PhmsaExpDt < Now() Then
                 CarrierSkip = True
             End If
            
             'do we need fmcsa
             If pFMCSA Or pRteCTRl Then
                 If Len(ThisWorkbook.ScacCol(scac).FMCSANo) = 0 Or ThisWorkbook.ScacCol(scac).FMSCAExpDt < Now() Then
                     CarrierSkip = True
                 End If
              End If
             
             tHwyRteCtrlCost = 0
             'need to check for highway route control
             If pRteCTRl Then
                 'mcp carier
                 If UCase(ThisWorkbook.ScacCol(scac).MCEP) <> "YES" Then
                     CarrierSkip = True
                 End If
                 
                 If Len(Trim(ThisWorkbook.ScacCol(scac).hrcqFAC)) > 0 Then
                         tHwyRteCtrlCost = Val(ThisWorkbook.ScacCol(scac).hrcqFAC) * tmiles
                         If tHwyRteCtrlCost < ThisWorkbook.ScacCol(scac).hrcqMIN Then
                             tHwyRteCtrlCost = ThisWorkbook.ScacCol(scac).hrcqMIN
                         End If
                         
                         
                         
                         'if min is > than max, you will get max
                         If tHwyRteCtrlCost > ThisWorkbook.ScacCol(scac).hrcqMAX And ThisWorkbook.ScacCol(scac).hrcqMAX > 0 Then
                             tHwyRteCtrlCost = ThisWorkbook.ScacCol(scac).hrcqMAX
                         End If
                         
                          If tType = "GEN" Then
                             calcRate.HWRCQTY = tmiles
                             calcRate.HWRCRate = Val(ThisWorkbook.ScacCol(scac).hrcqFAC)
                             calcRate.HWRCMC = ThisWorkbook.ScacCol(scac).hrcqMIN
                             calcRate.HWRCCharge = tHwyRteCtrlCost
    
                         End If
                         
                           If tType = "RET" Then
                             calcRate.DHWRCQTY = tmiles
                             calcRate.DHWRCRate = Val(ThisWorkbook.ScacCol(scac).hrcqFAC)
                             calcRate.DHWRCMC = ThisWorkbook.ScacCol(scac).hrcqMIN
                             calcRate.DHWRCCharge = tHwyRteCtrlCost
    
                         End If
                       
                    
                 Else
                     CarrierSkip = True
                 End If
             End If
             
             If ThisWorkbook.ScacCol(scac).MllWFactor <> -1 Then
            
                 tHazFactor = ThisWorkbook.ScacCol(scac).MllWFactorInt * tmiles
                 ttotal = ttotal + tHazFactor
             
                 If ttotal < tFixRate.mLLwMC Then
                     ttotal = tFixRate.mLLwMC
                     
                 End If
                 
                 If tType = "GEN" Then
                    calcRate.MaterialQty = tmiles
                    calcRate.MaterialMC = tFixRate.mLLwMC
                    calcRate.MaterialRate = ThisWorkbook.ScacCol(scac).MllWFactorInt
                    calcRate.MaterialCharge = ttotal
                 End If
                
                If tType = "RET" Then
                    calcRate.DMaterialQty = tmiles
                    calcRate.DMaterialMC = tFixRate.mLLwMC
                    calcRate.DMaterialRate = ThisWorkbook.ScacCol(scac).MllWFactorInt
                    calcRate.DMaterialCharge = ttotal
                 End If
                If tType = "EM" Then
                    calcRate.EMaterialQty = tmiles
                    calcRate.EMaterialMC = tFixRate.mLLwMC
                    calcRate.EMaterialRate = ThisWorkbook.ScacCol(scac).MllWFactorInt
                    calcRate.EMaterialCharge = ttotal
                 End If
                 
             Else
                 CarrierSkip = True
                 
             End If
             ttotal = ttotal + tHwyRteCtrlCost
          Case 7 'Spent nuclear fuel
          
             ttotal = tBaseCost + tRateSur
             If tType = "GEN" Then
                calcRate.EquiptmentCharge = ttotal
             End If
             
             If tType = "RET" Then
                calcRate.DEquiptmentCharge = ttotal
             End If
             
             If tType = "RET" Then
                calcRate.EEquiptmentCharge = ttotal
             End If
             
             
             
             'check the phisma
             If Len(ThisWorkbook.ScacCol(scac).PhmsaNo) = 0 Or ThisWorkbook.ScacCol(scac).PhmsaExpDt < Now() Then
                 CarrierSkip = True
             End If
            
             'do we need fmcsa
             If pFMCSA Or pRteCTRl Then
                 If Len(ThisWorkbook.ScacCol(scac).FMCSANo) = 0 Or ThisWorkbook.ScacCol(scac).FMSCAExpDt < Now() Then
                     CarrierSkip = True
                 End If
              End If
             
             tHwyRteCtrlCost = 0
             'need to check for highway route control
             If pRteCTRl Then
                 'mcp carier
                 If UCase(ThisWorkbook.ScacCol(scac).MCEP) <> "YES" Then
                     CarrierSkip = True
                 End If
                 
                 If Len(Trim(ThisWorkbook.ScacCol(scac).hrcqFAC)) > 0 Then
                         tHwyRteCtrlCost = Val(ThisWorkbook.ScacCol(scac).hrcqFAC) * tmiles
                         If tHwyRteCtrlCost < ThisWorkbook.ScacCol(scac).hrcqMIN Then
                             tHwyRteCtrlCost = ThisWorkbook.ScacCol(scac).hrcqMIN
                         End If
                         
                         'if min is > than max, you will get max
                         If tHwyRteCtrlCost > ThisWorkbook.ScacCol(scac).hrcqMAX And ThisWorkbook.ScacCol(scac).hrcqMAX > 0 Then
                             tHwyRteCtrlCost = ThisWorkbook.ScacCol(scac).hrcqMAX
                         End If
                         
                          If tType = "GEN" Then
                             calcRate.HWRCQTY = tmiles
                             calcRate.HWRCRate = Val(ThisWorkbook.ScacCol(scac).hrcqFAC)
                             calcRate.HWRCMC = ThisWorkbook.ScacCol(scac).hrcqMIN
                             calcRate.HWRCCharge = tHwyRteCtrlCost
    
                         End If
                         
                           If tType = "RET" Then
                             calcRate.DHWRCQTY = tmiles
                             calcRate.DHWRCRate = Val(ThisWorkbook.ScacCol(scac).hrcqFAC)
                             calcRate.DHWRCMC = ThisWorkbook.ScacCol(scac).hrcqMIN
                             calcRate.DHWRCCharge = tHwyRteCtrlCost
    
                         End If
                       
                    
                 Else
                     CarrierSkip = True
                 End If
             End If
             ttotal = ttotal + tHwyRteCtrlCost
             If ThisWorkbook.ScacCol(scac).SNFFactorInt <> -1 Then
            
                 tHazFactor = ThisWorkbook.ScacCol(scac).SNFFactorInt * tmiles
                 ttotal = ttotal + tHazFactor
             
                 If ttotal < tFixRate.snfMC Then
                     ttotal = tFixRate.snfMC
                     tHazFactor = ttotal
                 End If
                 
                  If tType = "GEN" Then
                    calcRate.MaterialQty = tmiles
                    calcRate.MaterialMC = tFixRate.snfMC
                    calcRate.MaterialRate = ThisWorkbook.ScacCol(scac).SNFFactorInt
                    calcRate.MaterialCharge = ttotal
                 End If
                 
                 If tType = "RET" Then
                    calcRate.DMaterialQty = tmiles
                    calcRate.DMaterialMC = tFixRate.snfMC
                    calcRate.DMaterialRate = ThisWorkbook.ScacCol(scac).SNFFactorInt
                    calcRate.DMaterialCharge = ttotal
                 End If
                 If tType = "EM" Then
                    calcRate.EMaterialQty = tmiles
                    calcRate.EMaterialMC = tFixRate.snfMC
                    calcRate.EMaterialRate = ThisWorkbook.ScacCol(scac).SNFFactorInt
                    calcRate.EMaterialCharge = ttotal
                 End If
             Else
                 CarrierSkip = True
                 
             End If
          
'             ttotal = ttotal + tHwyRteCtrlCost
          
          
          
                                   
         End Select
         'bestDriverCost
          tDrvCost = 0
         tDrvCost = BestDriverCost(ThisWorkbook.ScacCol(scac).scac, tmiles, tDrivers, tType, calcRate)
         If tDrvCost = -1 Then
             CarrierSkip = True
             tDrvCost = 0
         End If
         
         
         'fuel charge
         
         tFuelcost = tFuelSurCharge * tmiles
         If tType = "GEN" Then
            calcRate.LHFSQty = tmiles
            calcRate.LHFSRate = tFuelSurCharge
            calcRate.LHFSCharge = tFuelcost
         End If
         
         If tType = "RET" Then
            calcRate.dFSQty = tmiles
            calcRate.dFSRate = tFuelSurCharge
            calcRate.dFSCharge = tFuelcost
         End If
         
         If tType = "EM" Then
            calcRate.EFSQty = tmiles
            calcRate.EFSRate = tFuelSurCharge
            calcRate.EFSCharge = tFuelcost
         End If
         
         
         'long island
         If tNYLIOrg And ThisWorkbook.LocationCol(Origin).NYLIAllowed = 1 Then
            tNYFee = tNYFee + ThisWorkbook.ScacCol(scac).nyliRATE
            If tType = "GEN" Then
                calcRate.NYLHoQty = 1
                calcRate.NYLHoMC = 0
                calcRate.NYLHoRate = ThisWorkbook.ScacCol(scac).nyliRATE
                calcRate.NYLHoCharge = ThisWorkbook.ScacCol(scac).nyliRATE
            End If
            
            If tType = "RET" Then
                calcRate.NYdoQty = 1
                calcRate.NYdoMC = 0
                calcRate.NYdoRate = ThisWorkbook.ScacCol(scac).nyliRATE
                calcRate.NYdoCharge = ThisWorkbook.ScacCol(scac).nyliRATE
            
            End If
            If tType = "EM" Then
                calcRate.NYeoQty = 1
                calcRate.NYeoMC = 0
                calcRate.NYeoRate = ThisWorkbook.ScacCol(scac).nyliRATE
                calcRate.NYeoCharge = ThisWorkbook.ScacCol(scac).nyliRATE
            
            End If
         End If
         
         If tNYLIDest And ThisWorkbook.LocationCol(Destination).NYLIAllowed = 1 Then
            If tNYFee = 0 Then
                tNYFee = tNYFee + ThisWorkbook.ScacCol(scac).nyliRATE
                If tType = "GEN" Then
                    calcRate.NYLHdQty = 1
                    calcRate.NYLHdMC = 0
                    calcRate.NYLHdRate = ThisWorkbook.ScacCol(scac).nyliRATE
                    calcRate.NYLHdCharge = ThisWorkbook.ScacCol(scac).nyliRATE
                End If
                If tType = "RET" Then
                    calcRate.NYddQty = 1
                    calcRate.NYddMC = 0
                    calcRate.NYddRate = ThisWorkbook.ScacCol(scac).nyliRATE
                    calcRate.NYddCharge = ThisWorkbook.ScacCol(scac).nyliRATE
                End If
                If tType = "EM" Then
                    calcRate.NYedQty = 1
                    calcRate.NYedMC = 0
                    calcRate.NYedRate = ThisWorkbook.ScacCol(scac).nyliRATE
                    calcRate.NYedCharge = ThisWorkbook.ScacCol(scac).nyliRATE
                End If
            End If
         End If
 Else
  CarrierSkip = True
 End If


End Sub
Attribute VB_Name = "Module3"

Sub Show1()
    
    Display 1
    Sheets("Invoice Verification").Activate
        
End Sub

Sub show2()
    Display 2
     Sheets("Invoice Verification").Activate
   
End Sub

Sub show3()
    Display 3
     Sheets("Invoice Verification").Activate
   
End Sub
Sub show4()
    Display 4
     Sheets("Invoice Verification").Activate
   
End Sub
Sub show5()
    Display 5
     Sheets("Invoice Verification").Activate
   
End Sub
Sub show6()
    Display 6
     Sheets("Invoice Verification").Activate
   
End Sub
Sub show7()
    Display 7
     Sheets("Invoice Verification").Activate
   
End Sub
Sub show8()
    Display 8
     Sheets("Invoice Verification").Activate
   
End Sub
Sub show9()
    Display 9
     Sheets("Invoice Verification").Activate
   
End Sub
Sub show10()
    Display 10
     Sheets("Invoice Verification").Activate
   
End Sub
Sub show11()
    Display 11
     Sheets("Invoice Verification").Activate
   
End Sub
Sub show12()
    Display 12
     Sheets("Invoice Verification").Activate
   
End Sub
Sub show13()
    Display 13
     Sheets("Invoice Verification").Activate
   
End Sub
Sub show14()
    Display 14
     Sheets("Invoice Verification").Activate
   
End Sub
Sub show15()
    Display 15
     Sheets("Invoice Verification").Activate
   
End Sub


Sub Display(pRow As Integer)

 Sheets("Invoice Verification").Unprotect Password:="doeLEE"

Sheets("Invoice Verification").Range("N115") = ""
    Sheets("Invoice Verification").Range("N116") = ""
    Sheets("Invoice Verification").Range("N117") = ""
    Sheets("Invoice Verification").Range("N118") = ""
    
    Sheets("Invoice Verification").Range("Y115") = 0
    Sheets("Invoice Verification").Range("Y116") = 0
    Sheets("Invoice Verification").Range("y117") = 0
    Sheets("Invoice Verification").Range("y118") = 0
    
    
Sheets("Invoice Verification").Range("n12") = ThisWorkbook.ScacCol(ThisWorkbook.Results.Item(pRow).scac).Name
Sheets("Invoice Verification").Range("s12") = ThisWorkbook.ScacCol(ThisWorkbook.Results.Item(pRow).scac).Tender
Sheets("Invoice Verification").Range("x12") = ThisWorkbook.ScacCol(ThisWorkbook.Results.Item(pRow).scac).TendersUp



 Sheets("Invoice Verification").Range("o13") = Sheets("Entry Screen").Range("o10")
        Sheets("Invoice Verification").Range("o14") = Sheets("Entry Screen").Range("o11")
        Sheets("Invoice Verification").Range("o15") = Sheets("Entry Screen").Range("o12")
     
Sheets("Invoice Verification").Range("S21") = ThisWorkbook.Results.Item(pRow).EquiptmentType
    Sheets("Invoice Verification").Range("t21") = ThisWorkbook.Results.Item(pRow).EquiptmentQTY
    Sheets("Invoice Verification").Range("w21") = ThisWorkbook.Results.Item(pRow).EquiptmentRate
    Sheets("Invoice Verification").Range("X21") = ThisWorkbook.Results.Item(pRow).EquiptmentMC
    Sheets("Invoice Verification").Range("y21") = 0 'ThisWorkbook.Results.Item(pRow).EquiptmentCharge
    
    Sheets("Invoice Verification").Range("S23") = ThisWorkbook.Results.Item(pRow).MaterialType
    Sheets("Invoice Verification").Range("t23") = ThisWorkbook.Results.Item(pRow).MaterialQty
    Sheets("Invoice Verification").Range("w23") = ThisWorkbook.Results.Item(pRow).MaterialRate
    Sheets("Invoice Verification").Range("X23") = ThisWorkbook.Results.Item(pRow).MaterialMC
    Sheets("Invoice Verification").Range("y23") = ThisWorkbook.Results.Item(pRow).MaterialCharge
    
    Sheets("Invoice Verification").Range("t24") = ThisWorkbook.Results.Item(pRow).HWRCQTY
    Sheets("Invoice Verification").Range("w24") = ThisWorkbook.Results.Item(pRow).HWRCRate
    Sheets("Invoice Verification").Range("X24") = ThisWorkbook.Results.Item(pRow).HWRCMC
    Sheets("Invoice Verification").Range("y24") = ThisWorkbook.Results.Item(pRow).HWRCCharge
    
    Sheets("Invoice Verification").Range("s22") = ThisWorkbook.Results.Item(pRow).s2sType
    Sheets("Invoice Verification").Range("t22") = ThisWorkbook.Results.Item(pRow).s2sQty
    Sheets("Invoice Verification").Range("w22") = ThisWorkbook.Results.Item(pRow).s2sRate
    Sheets("Invoice Verification").Range("X22") = ThisWorkbook.Results.Item(pRow).s2sMC
    Sheets("Invoice Verification").Range("y22") = 0 'ThisWorkbook.Results.Item(pRow).s2sCharge
    
    Sheets("Invoice Verification").Range("t25") = ThisWorkbook.Results.Item(pRow).NYLHoQty
    Sheets("Invoice Verification").Range("w25") = ThisWorkbook.Results.Item(pRow).NYLHoRate
    Sheets("Invoice Verification").Range("X25") = ThisWorkbook.Results.Item(pRow).NYLHoMC
    Sheets("Invoice Verification").Range("y25") = ThisWorkbook.Results.Item(pRow).NYLHoCharge
    
    Sheets("Invoice Verification").Range("t26") = ThisWorkbook.Results.Item(pRow).NYLHdQty
    Sheets("Invoice Verification").Range("w26") = ThisWorkbook.Results.Item(pRow).NYLHdRate
    Sheets("Invoice Verification").Range("X26") = ThisWorkbook.Results.Item(pRow).NYLHdMC
    Sheets("Invoice Verification").Range("y26") = ThisWorkbook.Results.Item(pRow).NYLHdCharge
    
    Sheets("Invoice Verification").Range("s27") = ThisWorkbook.Results.Item(pRow).LHDrvType
    Sheets("Invoice Verification").Range("t27") = ThisWorkbook.Results.Item(pRow).LHDrvQty
    Sheets("Invoice Verification").Range("w27") = ThisWorkbook.Results.Item(pRow).LHDrvRate
    Sheets("Invoice Verification").Range("X27") = ThisWorkbook.Results.Item(pRow).LHDrvMC
    Sheets("Invoice Verification").Range("y27") = ThisWorkbook.Results.Item(pRow).LHDrvCharge
    
    Sheets("Invoice Verification").Range("t28") = ThisWorkbook.Results.Item(pRow).LHFSQty
    Sheets("Invoice Verification").Range("w28") = ThisWorkbook.Results.Item(pRow).LHFSRate
    Sheets("Invoice Verification").Range("X28") = ThisWorkbook.Results.Item(pRow).LHFSMC
    Sheets("Invoice Verification").Range("y28") = ThisWorkbook.Results.Item(pRow).LHFSCharge
    
    Sheets("Invoice Verification").Range("m30") = ThisWorkbook.Results.Item(pRow).Remarks
    
    Sheets("Invoice Verification").Range("t38") = ThisWorkbook.Results.Item(pRow).exUseQty
    Sheets("Invoice Verification").Range("w38") = ThisWorkbook.Results.Item(pRow).exUseRate
    Sheets("Invoice Verification").Range("X38") = ThisWorkbook.Results.Item(pRow).exUseMC
    Sheets("Invoice Verification").Range("y38") = ThisWorkbook.Results.Item(pRow).exUseCharge
    
    Sheets("Invoice Verification").Range("t39") = ThisWorkbook.Results.Item(pRow).HazMatQty
    Sheets("Invoice Verification").Range("w39") = ThisWorkbook.Results.Item(pRow).HazMatRate
    Sheets("Invoice Verification").Range("X39") = ThisWorkbook.Results.Item(pRow).hazMatMC
    Sheets("Invoice Verification").Range("y39") = ThisWorkbook.Results.Item(pRow).HazMatCharge
    
    Sheets("Invoice Verification").Range("t40") = ThisWorkbook.Results.Item(pRow).StopOffQty
    Sheets("Invoice Verification").Range("w40") = ThisWorkbook.Results.Item(pRow).StopOffRate
    Sheets("Invoice Verification").Range("X40") = ThisWorkbook.Results.Item(pRow).StopOffMC
    Sheets("Invoice Verification").Range("y40") = ThisWorkbook.Results.Item(pRow).StopOffCharge
    
    Sheets("Invoice Verification").Range("t41") = ThisWorkbook.Results.Item(pRow).TarpQty
    Sheets("Invoice Verification").Range("w41") = ThisWorkbook.Results.Item(pRow).tarpRate
    Sheets("Invoice Verification").Range("X41") = ThisWorkbook.Results.Item(pRow).tarpMC
    Sheets("Invoice Verification").Range("y41") = ThisWorkbook.Results.Item(pRow).tarpCharge
    
    
    Sheets("Invoice Verification").Range("t42") = ThisWorkbook.Results.Item(pRow).satTrakQty
    Sheets("Invoice Verification").Range("w42") = ThisWorkbook.Results.Item(pRow).satTrakRate
    Sheets("Invoice Verification").Range("X42") = ThisWorkbook.Results.Item(pRow).satTrakMC
    Sheets("Invoice Verification").Range("y42") = ThisWorkbook.Results.Item(pRow).satTrakCharge
    
    Sheets("Invoice Verification").Range("t43") = ThisWorkbook.Results.Item(pRow).SigQty
    Sheets("Invoice Verification").Range("w43") = ThisWorkbook.Results.Item(pRow).SigRate
    Sheets("Invoice Verification").Range("X43") = ThisWorkbook.Results.Item(pRow).SigMC
    Sheets("Invoice Verification").Range("y43") = ThisWorkbook.Results.Item(pRow).SigCharge
    
    Sheets("Invoice Verification").Range("t44") = ThisWorkbook.Results.Item(pRow).TempQty
    Sheets("Invoice Verification").Range("w44") = ThisWorkbook.Results.Item(pRow).tempRate
    Sheets("Invoice Verification").Range("X44") = ThisWorkbook.Results.Item(pRow).tempMC
    Sheets("Invoice Verification").Range("y44") = ThisWorkbook.Results.Item(pRow).tempCharge
    
    
    Sheets("Invoice Verification").Range("t45") = ThisWorkbook.Results.Item(pRow).PUHOLQty
    Sheets("Invoice Verification").Range("w45") = ThisWorkbook.Results.Item(pRow).PUHOLRate
    Sheets("Invoice Verification").Range("X45") = ThisWorkbook.Results.Item(pRow).PUHOLMC
    Sheets("Invoice Verification").Range("y45") = ThisWorkbook.Results.Item(pRow).PHUOLCharge
    
    Sheets("Invoice Verification").Range("S46") = ThisWorkbook.Results.Item(pRow).EONUType
    Sheets("Invoice Verification").Range("t46") = ThisWorkbook.Results.Item(pRow).EONUQty
    Sheets("Invoice Verification").Range("w46") = ThisWorkbook.Results.Item(pRow).EONURate
    Sheets("Invoice Verification").Range("X46") = ThisWorkbook.Results.Item(pRow).EONUMC
    Sheets("Invoice Verification").Range("y46") = ThisWorkbook.Results.Item(pRow).EONUCharge
    
    
    Sheets("Invoice Verification").Range("S48") = ThisWorkbook.Results.Item(pRow).IDHType
    Sheets("Invoice Verification").Range("t48") = ThisWorkbook.Results.Item(pRow).IDHQty
    Sheets("Invoice Verification").Range("w48") = ThisWorkbook.Results.Item(pRow).IDHRate
    Sheets("Invoice Verification").Range("X48") = ThisWorkbook.Results.Item(pRow).IDHMC
    Sheets("Invoice Verification").Range("y48") = ThisWorkbook.Results.Item(pRow).IDHCharge
    
    Sheets("Invoice Verification").Range("S53") = ThisWorkbook.Results.Item(pRow).ODHType
    Sheets("Invoice Verification").Range("t53") = ThisWorkbook.Results.Item(pRow).ODHQty
    Sheets("Invoice Verification").Range("w53") = ThisWorkbook.Results.Item(pRow).ODHRate
    Sheets("Invoice Verification").Range("X53") = ThisWorkbook.Results.Item(pRow).ODHMC
    Sheets("Invoice Verification").Range("y53") = ThisWorkbook.Results.Item(pRow).ODHCharge
    '--------------Return empty
    
    Sheets("Invoice Verification").Range("s58") = ThisWorkbook.Results.Item(pRow).EERType
    Sheets("Invoice Verification").Range("t58") = ThisWorkbook.Results.Item(pRow).EERQty
    Sheets("Invoice Verification").Range("w58") = ThisWorkbook.Results.Item(pRow).EERRate
    Sheets("Invoice Verification").Range("X58") = ThisWorkbook.Results.Item(pRow).EERMC
    Sheets("Invoice Verification").Range("y58") = ThisWorkbook.Results.Item(pRow).EERCharge
    
    
    
    '61   s2s charge?
    Sheets("Invoice Verification").Range("s61") = ThisWorkbook.Results.Item(pRow).s2sREtype
    Sheets("Invoice Verification").Range("t61") = ThisWorkbook.Results.Item(pRow).s2sREQty
    Sheets("Invoice Verification").Range("w61") = ThisWorkbook.Results.Item(pRow).s2sRERate
    Sheets("Invoice Verification").Range("X61") = ThisWorkbook.Results.Item(pRow).s2sREMC
    Sheets("Invoice Verification").Range("y61") = 0 'ThisWorkbook.Results.Item(pRow).s2sDCharge
    
    
    
    Sheets("Invoice Verification").Range("t62") = ThisWorkbook.Results.Item(pRow).EENYOQty
    Sheets("Invoice Verification").Range("w62") = ThisWorkbook.Results.Item(pRow).EENYORate
    Sheets("Invoice Verification").Range("X62") = ThisWorkbook.Results.Item(pRow).EENYOMC
    Sheets("Invoice Verification").Range("y62") = ThisWorkbook.Results.Item(pRow).EENYOCharge
    
    Sheets("Invoice Verification").Range("t63") = ThisWorkbook.Results.Item(pRow).EENYDQty
    Sheets("Invoice Verification").Range("w63") = ThisWorkbook.Results.Item(pRow).EENYDRate
    Sheets("Invoice Verification").Range("X63") = ThisWorkbook.Results.Item(pRow).EENYDMC
    Sheets("Invoice Verification").Range("y63") = ThisWorkbook.Results.Item(pRow).EENYDCharge
    
    
    Sheets("Invoice Verification").Range("S64") = ThisWorkbook.Results.Item(pRow).EERDType
    Sheets("Invoice Verification").Range("t64") = ThisWorkbook.Results.Item(pRow).EERDQty
    Sheets("Invoice Verification").Range("w64") = ThisWorkbook.Results.Item(pRow).EERDRate
    Sheets("Invoice Verification").Range("X64") = ThisWorkbook.Results.Item(pRow).EERDMC
    Sheets("Invoice Verification").Range("y64") = ThisWorkbook.Results.Item(pRow).EERDCharge
    
    '65
    
    Sheets("Invoice Verification").Range("t65") = ThisWorkbook.Results.Item(pRow).eStopOffQty
    Sheets("Invoice Verification").Range("w65") = ThisWorkbook.Results.Item(pRow).eStopOffRate
    Sheets("Invoice Verification").Range("X65") = ThisWorkbook.Results.Item(pRow).eStopOffMC
    Sheets("Invoice Verification").Range("y65") = ThisWorkbook.Results.Item(pRow).eStopOffCharge
    
    
    
    Sheets("Invoice Verification").Range("t66") = ThisWorkbook.Results.Item(pRow).ETarpQty
    Sheets("Invoice Verification").Range("w66") = ThisWorkbook.Results.Item(pRow).EtarpRate
    Sheets("Invoice Verification").Range("X66") = ThisWorkbook.Results.Item(pRow).EtarpMC
    Sheets("Invoice Verification").Range("y66") = ThisWorkbook.Results.Item(pRow).EtarpCharge
    
    
    

    Sheets("Invoice Verification").Range("t67") = ThisWorkbook.Results.Item(pRow).EsatTrakQty
    Sheets("Invoice Verification").Range("w67") = ThisWorkbook.Results.Item(pRow).EsatTrakRate
    Sheets("Invoice Verification").Range("X67") = ThisWorkbook.Results.Item(pRow).EsatTrakMC
    Sheets("Invoice Verification").Range("y67") = ThisWorkbook.Results.Item(pRow).EsatTrakCharge
    

    Sheets("Invoice Verification").Range("t68") = ThisWorkbook.Results.Item(pRow).EexUseQty
    Sheets("Invoice Verification").Range("w68") = ThisWorkbook.Results.Item(pRow).EexUseRate
    Sheets("Invoice Verification").Range("X68") = ThisWorkbook.Results.Item(pRow).EExUseMC
    Sheets("Invoice Verification").Range("y68") = ThisWorkbook.Results.Item(pRow).EExUseCharge
    
    
    
    Sheets("Invoice Verification").Range("S58") = ThisWorkbook.Results.Item(pRow).EERType
    Sheets("Invoice Verification").Range("t58") = ThisWorkbook.Results.Item(pRow).EERQty
    Sheets("Invoice Verification").Range("w58") = ThisWorkbook.Results.Item(pRow).EERRate
    Sheets("Invoice Verification").Range("X58") = ThisWorkbook.Results.Item(pRow).EERMC
    Sheets("Invoice Verification").Range("y58") = ThisWorkbook.Results.Item(pRow).EERCharge
    
    
    Sheets("Invoice Verification").Range("t69") = ThisWorkbook.Results.Item(pRow).EEFCQty
    Sheets("Invoice Verification").Range("w69") = ThisWorkbook.Results.Item(pRow).EEFCRate
    Sheets("Invoice Verification").Range("X69") = ThisWorkbook.Results.Item(pRow).EEFCMC
    Sheets("Invoice Verification").Range("y69") = ThisWorkbook.Results.Item(pRow).EEFCCharge
    
     '-----dunnage ---------------------------------------
    
    
    Sheets("Invoice Verification").Range("s71") = ThisWorkbook.Results.Item(pRow).s2sDtype
    Sheets("Invoice Verification").Range("t71") = ThisWorkbook.Results.Item(pRow).s2sDQty
    Sheets("Invoice Verification").Range("w71") = ThisWorkbook.Results.Item(pRow).s2sDRate
    Sheets("Invoice Verification").Range("X71") = ThisWorkbook.Results.Item(pRow).s2sDMC
    Sheets("Invoice Verification").Range("y71") = 0 'ThisWorkbook.Results.Item(pRow).s2sDCharge
    
    '72 is hidden ???
    Sheets("Invoice Verification").Range("s70") = ThisWorkbook.Results.Item(pRow).DEquiptmentType
    Sheets("Invoice Verification").Range("t70") = ThisWorkbook.Results.Item(pRow).DEquiptmentQty
    Sheets("Invoice Verification").Range("w70") = ThisWorkbook.Results.Item(pRow).DEquiptmentRate
    Sheets("Invoice Verification").Range("X70") = ThisWorkbook.Results.Item(pRow).DEquiptmentMC
    Sheets("Invoice Verification").Range("y70") = 0 'ThisWorkbook.Results.Item(pRow).DEquiptmentCharge
    
    Sheets("Invoice Verification").Range("s73") = ThisWorkbook.Results.Item(pRow).DMaterialType
    Sheets("Invoice Verification").Range("t73") = ThisWorkbook.Results.Item(pRow).DMaterialQty
    Sheets("Invoice Verification").Range("w73") = ThisWorkbook.Results.Item(pRow).DMaterialRate
    Sheets("Invoice Verification").Range("X73") = ThisWorkbook.Results.Item(pRow).DMaterialMC
    Sheets("Invoice Verification").Range("y73") = ThisWorkbook.Results.Item(pRow).DMaterialCharge
        

    'Sheets("Invoice Verification").Range("s73") = ThisWorkbook.Results.Item(pRow).DHWRCQTY
    Sheets("Invoice Verification").Range("t74") = ThisWorkbook.Results.Item(pRow).DHWRCQTY
    Sheets("Invoice Verification").Range("w74") = ThisWorkbook.Results.Item(pRow).DHWRCRate
    Sheets("Invoice Verification").Range("X74") = ThisWorkbook.Results.Item(pRow).DHWRCMC
    Sheets("Invoice Verification").Range("y74") = ThisWorkbook.Results.Item(pRow).DHWRCCharge
        
        
    Sheets("Invoice Verification").Range("t75") = ThisWorkbook.Results.Item(pRow).NYdoQty
    Sheets("Invoice Verification").Range("w75") = ThisWorkbook.Results.Item(pRow).NYdoRate
    Sheets("Invoice Verification").Range("X75") = ThisWorkbook.Results.Item(pRow).NYdoMC
    Sheets("Invoice Verification").Range("y75") = ThisWorkbook.Results.Item(pRow).NYdoCharge
    
    Sheets("Invoice Verification").Range("t76") = ThisWorkbook.Results.Item(pRow).NYddQty
    Sheets("Invoice Verification").Range("w76") = ThisWorkbook.Results.Item(pRow).NYddRate
    Sheets("Invoice Verification").Range("X76") = ThisWorkbook.Results.Item(pRow).NYddMC
    Sheets("Invoice Verification").Range("y76") = ThisWorkbook.Results.Item(pRow).NYddCharge
    
    Sheets("Invoice Verification").Range("s77") = ThisWorkbook.Results.Item(pRow).dDrvType
    Sheets("Invoice Verification").Range("t77") = ThisWorkbook.Results.Item(pRow).dDrvQty
    Sheets("Invoice Verification").Range("w77") = ThisWorkbook.Results.Item(pRow).dDrvRate
    Sheets("Invoice Verification").Range("X77") = ThisWorkbook.Results.Item(pRow).dDrvMC
    Sheets("Invoice Verification").Range("y77") = ThisWorkbook.Results.Item(pRow).dDrvCharge
    
    '78
    Sheets("Invoice Verification").Range("t78") = ThisWorkbook.Results.Item(pRow).DStopOffQty
    Sheets("Invoice Verification").Range("w78") = ThisWorkbook.Results.Item(pRow).DStopOffRate
    Sheets("Invoice Verification").Range("X78") = ThisWorkbook.Results.Item(pRow).DStopOffMC
    Sheets("Invoice Verification").Range("y78") = ThisWorkbook.Results.Item(pRow).DStopOffCharge
    
    
    
    Sheets("Invoice Verification").Range("t79") = ThisWorkbook.Results.Item(pRow).DTarpQty
    Sheets("Invoice Verification").Range("w79") = ThisWorkbook.Results.Item(pRow).DtarpRate
    Sheets("Invoice Verification").Range("X79") = ThisWorkbook.Results.Item(pRow).DtarpMC
    Sheets("Invoice Verification").Range("y79") = ThisWorkbook.Results.Item(pRow).DtarpCharge
    
    
    Sheets("Invoice Verification").Range("t80") = ThisWorkbook.Results.Item(pRow).DsatTrakQty
    Sheets("Invoice Verification").Range("w80") = ThisWorkbook.Results.Item(pRow).DsatTrakRate
    Sheets("Invoice Verification").Range("X80") = ThisWorkbook.Results.Item(pRow).DsatTrakMC
    Sheets("Invoice Verification").Range("y80") = ThisWorkbook.Results.Item(pRow).DsatTrakCharge
    
    
    
    Sheets("Invoice Verification").Range("t81") = ThisWorkbook.Results.Item(pRow).DSigQty
    Sheets("Invoice Verification").Range("w81") = ThisWorkbook.Results.Item(pRow).DSigRate
    Sheets("Invoice Verification").Range("X81") = ThisWorkbook.Results.Item(pRow).DSigMC
    Sheets("Invoice Verification").Range("y81") = ThisWorkbook.Results.Item(pRow).DSigCharge
    
    Sheets("Invoice Verification").Range("t82") = ThisWorkbook.Results.Item(pRow).DTempQty
    Sheets("Invoice Verification").Range("w82") = ThisWorkbook.Results.Item(pRow).DTempRate
    Sheets("Invoice Verification").Range("X82") = ThisWorkbook.Results.Item(pRow).DTempMC
    Sheets("Invoice Verification").Range("y82") = ThisWorkbook.Results.Item(pRow).DTempCharge
    
    
    'Sheets("Invoice Verification").Range("s83") = ThisWorkbook.Results.Item(pRow).dHazMatType
    Sheets("Invoice Verification").Range("t83") = ThisWorkbook.Results.Item(pRow).DexUseQty
    Sheets("Invoice Verification").Range("w83") = ThisWorkbook.Results.Item(pRow).DexUseRate
    Sheets("Invoice Verification").Range("X83") = ThisWorkbook.Results.Item(pRow).DExUseMC
    Sheets("Invoice Verification").Range("y83") = ThisWorkbook.Results.Item(pRow).DExUseCharge
    
    
    
    Sheets("Invoice Verification").Range("s84") = ThisWorkbook.Results.Item(pRow).dHazMatType
    Sheets("Invoice Verification").Range("t84") = ThisWorkbook.Results.Item(pRow).dHazMatQty
    Sheets("Invoice Verification").Range("w84") = ThisWorkbook.Results.Item(pRow).dHazMatRate
    Sheets("Invoice Verification").Range("X84") = ThisWorkbook.Results.Item(pRow).dHazMatMC
    Sheets("Invoice Verification").Range("y84") = ThisWorkbook.Results.Item(pRow).dHazMatCharge
    
    
    
    
    Sheets("Invoice Verification").Range("t85") = ThisWorkbook.Results.Item(pRow).dFSQty
    Sheets("Invoice Verification").Range("w85") = ThisWorkbook.Results.Item(pRow).dFSRate
    Sheets("Invoice Verification").Range("X85") = ThisWorkbook.Results.Item(pRow).dFSMC
    Sheets("Invoice Verification").Range("y85") = ThisWorkbook.Results.Item(pRow).dFSCharge
    
    '------------------------------
    Sheets("Invoice Verification").Range("s91") = ThisWorkbook.Results.Item(pRow).eDrvType
    Sheets("Invoice Verification").Range("t91") = ThisWorkbook.Results.Item(pRow).eDrvQty
    Sheets("Invoice Verification").Range("w91") = ThisWorkbook.Results.Item(pRow).eDrvRate
    Sheets("Invoice Verification").Range("X91") = ThisWorkbook.Results.Item(pRow).eDrvMC
    Sheets("Invoice Verification").Range("y91") = ThisWorkbook.Results.Item(pRow).eDrvCharge
    
    Sheets("Invoice Verification").Range("s86") = ThisWorkbook.Results.Item(pRow).EEquiptmentType
    Sheets("Invoice Verification").Range("t86") = ThisWorkbook.Results.Item(pRow).EEquiptmentQty
    Sheets("Invoice Verification").Range("w86") = ThisWorkbook.Results.Item(pRow).EEquiptmentRate
    Sheets("Invoice Verification").Range("X86") = ThisWorkbook.Results.Item(pRow).EEquiptmentMC
    Sheets("Invoice Verification").Range("y86") = 0 'ThisWorkbook.Results.Item(pRow).DEquiptmentCharge
    
    Sheets("Invoice Verification").Range("s88") = ThisWorkbook.Results.Item(pRow).EMaterialType
    Sheets("Invoice Verification").Range("t88") = ThisWorkbook.Results.Item(pRow).EMaterialQty
    Sheets("Invoice Verification").Range("w88") = ThisWorkbook.Results.Item(pRow).EMaterialRate
    Sheets("Invoice Verification").Range("X88") = ThisWorkbook.Results.Item(pRow).EMaterialMC
    Sheets("Invoice Verification").Range("y88") = ThisWorkbook.Results.Item(pRow).EMaterialCharge
    
    Sheets("Invoice Verification").Range("s87") = ThisWorkbook.Results.Item(pRow).s2sEtype
    Sheets("Invoice Verification").Range("t87") = ThisWorkbook.Results.Item(pRow).s2sEQty
    Sheets("Invoice Verification").Range("w87") = ThisWorkbook.Results.Item(pRow).s2sERate
    Sheets("Invoice Verification").Range("X87") = ThisWorkbook.Results.Item(pRow).s2sEMC
    Sheets("Invoice Verification").Range("y87") = 0 'ThisWorkbook.Results.Item(pRow).s2sECharge
    
    Sheets("Invoice Verification").Range("t89") = ThisWorkbook.Results.Item(pRow).NYeoQty
    Sheets("Invoice Verification").Range("w89") = ThisWorkbook.Results.Item(pRow).NYeoRate
    Sheets("Invoice Verification").Range("X89") = ThisWorkbook.Results.Item(pRow).NYeoMC
    Sheets("Invoice Verification").Range("y89") = ThisWorkbook.Results.Item(pRow).NYeoCharge

    Sheets("Invoice Verification").Range("t90") = ThisWorkbook.Results.Item(pRow).NYedQty
    Sheets("Invoice Verification").Range("w90") = ThisWorkbook.Results.Item(pRow).NYedRate
    Sheets("Invoice Verification").Range("X90") = ThisWorkbook.Results.Item(pRow).NYedMC
    Sheets("Invoice Verification").Range("y90") = ThisWorkbook.Results.Item(pRow).NYedCharge
    
    
    'EM tarping not allowed
    Sheets("Invoice Verification").Range("t92") = 0
    Sheets("Invoice Verification").Range("w92") = 0
    Sheets("Invoice Verification").Range("X92") = 0
    Sheets("Invoice Verification").Range("y92") = 0
    
    
    'EM sat tracking not allowed
    Sheets("Invoice Verification").Range("t93") = 0
    Sheets("Invoice Verification").Range("w93") = 0
    Sheets("Invoice Verification").Range("X93") = 0
    Sheets("Invoice Verification").Range("y93") = 0
    
    
    
    Sheets("Invoice Verification").Range("t94") = ThisWorkbook.Results.Item(pRow).EFSQty
    Sheets("Invoice Verification").Range("w94") = ThisWorkbook.Results.Item(pRow).EFSRate
    Sheets("Invoice Verification").Range("X94") = ThisWorkbook.Results.Item(pRow).EFSMC
    Sheets("Invoice Verification").Range("y94") = ThisWorkbook.Results.Item(pRow).EFSCharge
    
    Sheets("Invoice Verification").Range("s96") = ThisWorkbook.Results.Item(pRow).DOWPType
    Sheets("Invoice Verification").Range("t96") = ThisWorkbook.Results.Item(pRow).DOWPQty
    Sheets("Invoice Verification").Range("w96") = ThisWorkbook.Results.Item(pRow).DOWPRate
    Sheets("Invoice Verification").Range("X96") = ThisWorkbook.Results.Item(pRow).DOWPMC
    Sheets("Invoice Verification").Range("y96") = ThisWorkbook.Results.Item(pRow).DOWPCharge
    
    Sheets("Invoice Verification").Range("t97") = ThisWorkbook.Results.Item(pRow).DOWoPQty
    Sheets("Invoice Verification").Range("w97") = ThisWorkbook.Results.Item(pRow).DOWoPRate
    Sheets("Invoice Verification").Range("X97") = ThisWorkbook.Results.Item(pRow).DOWoPMC
    Sheets("Invoice Verification").Range("y97") = ThisWorkbook.Results.Item(pRow).DOWoPCharge
    
    
    Sheets("Invoice Verification").Range("s98") = ThisWorkbook.Results.Item(pRow).DDWPType
    Sheets("Invoice Verification").Range("t98") = ThisWorkbook.Results.Item(pRow).DDWPQty
    Sheets("Invoice Verification").Range("w98") = ThisWorkbook.Results.Item(pRow).DDWPRate
    Sheets("Invoice Verification").Range("X98") = ThisWorkbook.Results.Item(pRow).DDWPMC
    Sheets("Invoice Verification").Range("y98") = ThisWorkbook.Results.Item(pRow).DDWPCharge
    
    Sheets("Invoice Verification").Range("t99") = ThisWorkbook.Results.Item(pRow).DDWoPQty
    Sheets("Invoice Verification").Range("w99") = ThisWorkbook.Results.Item(pRow).DDWoPRate
    Sheets("Invoice Verification").Range("X99") = ThisWorkbook.Results.Item(pRow).DDWoPMC
    Sheets("Invoice Verification").Range("y99") = ThisWorkbook.Results.Item(pRow).DDWoPCharge
    
    Sheets("Invoice Verification").Range("s100") = ThisWorkbook.Results.Item(pRow).LOoType
    Sheets("Invoice Verification").Range("t100") = ThisWorkbook.Results.Item(pRow).LOoQty
    Sheets("Invoice Verification").Range("w100") = ThisWorkbook.Results.Item(pRow).LOoRate
    Sheets("Invoice Verification").Range("X100") = ThisWorkbook.Results.Item(pRow).LOoMC
    Sheets("Invoice Verification").Range("y100") = ThisWorkbook.Results.Item(pRow).LOoCharge
    
    Sheets("Invoice Verification").Range("s101") = ThisWorkbook.Results.Item(pRow).LOdType
    Sheets("Invoice Verification").Range("t101") = ThisWorkbook.Results.Item(pRow).LOdQty
    Sheets("Invoice Verification").Range("w101") = ThisWorkbook.Results.Item(pRow).LOdRate
    Sheets("Invoice Verification").Range("X101") = ThisWorkbook.Results.Item(pRow).LOdMC
    Sheets("Invoice Verification").Range("y101") = ThisWorkbook.Results.Item(pRow).LOdCharge
    
    Sheets("Invoice Verification").Range("t102") = ThisWorkbook.Results.Item(pRow).TSoQty
    Sheets("Invoice Verification").Range("w102") = ThisWorkbook.Results.Item(pRow).TSoRate
    Sheets("Invoice Verification").Range("X102") = ThisWorkbook.Results.Item(pRow).TSoMC
    Sheets("Invoice Verification").Range("y102") = ThisWorkbook.Results.Item(pRow).TSoCharge
    
    Sheets("Invoice Verification").Range("t103") = ThisWorkbook.Results.Item(pRow).TSdQty
    Sheets("Invoice Verification").Range("w103") = ThisWorkbook.Results.Item(pRow).TSdRate
    Sheets("Invoice Verification").Range("X103") = ThisWorkbook.Results.Item(pRow).TSdMC
    Sheets("Invoice Verification").Range("y103") = ThisWorkbook.Results.Item(pRow).TSdCharge
    
    Sheets("Invoice Verification").Range("s105") = ThisWorkbook.Results.Item(pRow).OwType
    Sheets("Invoice Verification").Range("t105") = ThisWorkbook.Results.Item(pRow).OwQty
    Sheets("Invoice Verification").Range("w105") = ThisWorkbook.Results.Item(pRow).OwRate
    Sheets("Invoice Verification").Range("X105") = ThisWorkbook.Results.Item(pRow).OwMC
    Sheets("Invoice Verification").Range("y105") = ThisWorkbook.Results.Item(pRow).OwCharge
    
    Sheets("Invoice Verification").Range("s106") = ThisWorkbook.Results.Item(pRow).OHTYpe
    Sheets("Invoice Verification").Range("t106") = ThisWorkbook.Results.Item(pRow).OHQty
    Sheets("Invoice Verification").Range("w106") = ThisWorkbook.Results.Item(pRow).OHRate
    Sheets("Invoice Verification").Range("X106") = ThisWorkbook.Results.Item(pRow).OHMC
    Sheets("Invoice Verification").Range("y106") = ThisWorkbook.Results.Item(pRow).OHCharge
    
    
    Sheets("Invoice Verification").Range("s107") = ThisWorkbook.Results.Item(pRow).OLbTYpe
    Sheets("Invoice Verification").Range("t107") = ThisWorkbook.Results.Item(pRow).OLQty
    Sheets("Invoice Verification").Range("w107") = ThisWorkbook.Results.Item(pRow).OLRate + ThisWorkbook.Results.Item(pRow).OLbRate
    Sheets("Invoice Verification").Range("X107") = ThisWorkbook.Results.Item(pRow).OLMC
    Sheets("Invoice Verification").Range("y107") = ThisWorkbook.Results.Item(pRow).OLCharge
    
    'Sheets("Invoice Verification").Range("s108") = ThisWorkbook.Results.Item(pRow).OLbTYpe
    'Sheets("Invoice Verification").Range("t108") = ThisWorkbook.Results.Item(pRow).OLbQty
    'Sheets("Invoice Verification").Range("w108") = ThisWorkbook.Results.Item(pRow).OLbRate
    'Sheets("Invoice Verification").Range("X108") = ThisWorkbook.Results.Item(pRow).OLbMC
    Sheets("Invoice Verification").Range("y108") = 0 'ThisWorkbook.Results.Item(pRow).OLbCharge
    
    Sheets("Invoice Verification").Range("n110") = ThisWorkbook.Results.Item(pRow).Permit1type
    Sheets("Invoice Verification").Range("t110") = ThisWorkbook.Results.Item(pRow).permit1Qty
    Sheets("Invoice Verification").Range("w110") = ThisWorkbook.Results.Item(pRow).permit1Rate
    Sheets("Invoice Verification").Range("X110") = ThisWorkbook.Results.Item(pRow).permit1Cost
    Sheets("Invoice Verification").Range("y110") = ThisWorkbook.Results.Item(pRow).permit1Charge
    
    Sheets("Invoice Verification").Range("n111") = ThisWorkbook.Results.Item(pRow).Permit2type
    Sheets("Invoice Verification").Range("t111") = ThisWorkbook.Results.Item(pRow).permit2Qty
    Sheets("Invoice Verification").Range("w111") = ThisWorkbook.Results.Item(pRow).permit2Rate
    Sheets("Invoice Verification").Range("X111") = ThisWorkbook.Results.Item(pRow).permit2Cost
    Sheets("Invoice Verification").Range("y111") = ThisWorkbook.Results.Item(pRow).permit2Charge
    
    Sheets("Invoice Verification").Range("n112") = ThisWorkbook.Results.Item(pRow).Permit3type
    Sheets("Invoice Verification").Range("t112") = ThisWorkbook.Results.Item(pRow).permit3Qty
    Sheets("Invoice Verification").Range("w112") = ThisWorkbook.Results.Item(pRow).permit3Rate
    Sheets("Invoice Verification").Range("X112") = ThisWorkbook.Results.Item(pRow).permit3Cost
    Sheets("Invoice Verification").Range("y112") = ThisWorkbook.Results.Item(pRow).permit3Charge
    
    Sheets("Invoice Verification").Range("n113") = ThisWorkbook.Results.Item(pRow).Permit4type
    Sheets("Invoice Verification").Range("t113") = ThisWorkbook.Results.Item(pRow).permit4Qty
    Sheets("Invoice Verification").Range("w113") = ThisWorkbook.Results.Item(pRow).permit4Rate
    Sheets("Invoice Verification").Range("X113") = ThisWorkbook.Results.Item(pRow).permit4Cost
    Sheets("Invoice Verification").Range("y113") = ThisWorkbook.Results.Item(pRow).permit4Charge
    
    
    Sheets("Invoice Verification").Range("n115") = ThisWorkbook.Results.Item(pRow).Misc1type
    Sheets("Invoice Verification").Range("y115") = ThisWorkbook.Results.Item(pRow).Misc11Charge
    
    Sheets("Invoice Verification").Range("n116") = ThisWorkbook.Results.Item(pRow).Misc2type
    Sheets("Invoice Verification").Range("y116") = ThisWorkbook.Results.Item(pRow).Misc21Charge
    
    Sheets("Invoice Verification").Range("n117") = ThisWorkbook.Results.Item(pRow).Misc3type
    Sheets("Invoice Verification").Range("y117") = ThisWorkbook.Results.Item(pRow).Misc31Charge
    
    
    
    Sheets("Invoice Verification").Range("M122") = ThisWorkbook.Results.Item(pRow).Comment
    
    Sheets("Invoice Verification").Protect Password:="doeLEE"
    
    
    
End Sub

Attribute VB_Name = "Module4"
Sub ResetEntry()
Attribute ResetEntry.VB_ProcData.VB_Invoke_Func = "X\n14"
'
' ResetEntry Macro
'
' Keyboard Shortcut: Ctrl+Shift+X

'
 Sheets("Cost Comparison").Unprotect Password:="doeLEE"
                 
    Range("S11") = ""
    Range("S12") = ""
    Range("O11") = ""
    
    
    Range("S18") = "None Selected"
    Range("S19") = "General Freight"
    Range("S20") = "No"
    Range("S21") = "No"
    
    
    
    Range("S22") = "None Selected"
    
    Range("S24") = "None Selected"
     
    Range("S18") = "None Selected"

   Range("S19") = "General Freight"
   Range("S23") = "No"
   Range("S25") = "No"
   
   Range("s27") = 0
   Range("s28") = 0

   
   Range("S30") = "No"
   Range("S31") = "No"
   Range("S32") = "No"
   Range("S33") = "No"
   Range("S34") = "No"
   Range("S35") = "No"
   Range("S36") = "No"
   Range("S37") = "No"
   
   Range("s39") = 0
   Range("S40") = "No"
   Range("S41") = "No"
   Range("S42") = "No"
   Range("S43") = "No"
   Range("s44") = 0
   Range("S45") = "None Selected"
    Range("S47") = "No"
    Range("S48") = "None Selected"
    Range("s49") = 0
   
    Range("S54") = "No"
    Range("S55") = "None Selected"
    Range("s55") = 0
   
   Range("S61") = "No"
   '62 is formula do not blank Range("S62") = "None Selected"
   Range("s64") = "No"
  ' Range("s65") = "No"
   Range("s66") = "No"
   
   Range("S67") = "None Selected"
   Range("S68") = 0
   
   Range("S69") = "No"
    Range("s70") = "No"

    Range("S71") = 0
    'Range("s71") = "None Selected"
    Range("S73") = 0
    
    Range("s74") = "No"

    Range("S76") = "General Freight"
   
     Range("S77") = "No"
     Range("S78") = "No"
   
     Range("S81") = "No"
     Range("S83") = "No"
   
     
    Range("s84") = "None Selected"
    Range("s85") = 0
   Range("s86") = "No"
    Range("s87") = "No"
    Range("s89") = "No"
    Range("S88") = "No"
     Range("S90") = 0
   Range("s91") = 0
    
   Range("S92") = "No"
   Range("S93") = "None Selected"
   Range("S95") = "None Selected"
   Range("S96") = "No"
   Range("S97") = "None Selected"
   Range("s98") = "No"
   Range("s99") = "None Selected"
   
   Range("S100") = 0
   Range("S101") = 0
   
   Range("S103") = "No"
   Range("S104") = ""
   
   Range("S105") = 0
   Range("S106") = 0
   Range("S107") = ""
   Range("S108") = 0
   Range("S109") = 0
   
   Range("S110") = "No"
   Range("S111") = ""
   Range("S112") = 0
   
   Range("S113") = ""
   Range("S114") = 0
   
   Range("S115") = "No"
   Range("S116") = 0
   Range("S117") = 0
   
   
   
   Range("s119") = "None Selected"
   Range("s120") = "None Selected"
   Range("s121") = "None Selected"
   Range("s122") = "None Selected"
   
   Range("S124") = "0"
   Range("S125") = "0"
   Range("S126") = "0"
   Range("S127") = "0"
   
   Range("N124") = ""
   Range("N125") = ""
   Range("N126") = ""
   Range("N127") = ""
   
   
   Range("N129") = ""
   Range("N130") = ""
   Range("N131") = ""
   
   Range("S129") = 0
   Range("S130") = 0
   Range("S131") = 0
   
   
   
    Range("S17") = "No"
    
     Sheets("Cost Comparison").Range("R12") = ""
     Sheets("Cost Comparison").Range("R13") = ""
     Sheets("Cost Comparison").Range("R14") = ""
     
      For x = 1 To 15
            Sheets("Cost Comparison").Range("N" & 20 + x) = ""
            Sheets("Cost Comparison").Range("Q" & 20 + x) = ""
            Sheets("Cost Comparison").Range("T" & 20 + x) = ""
            Sheets("Cost Comparison").Range("U" & 20 + x) = ""
           ' Sheets("Cost Comparison").Range("V" & 20 + x) = ""
            Sheets("Cost Comparison").Range("W" & 20 + x) = ""
            
        Next x
        Sheet25.Shapes("Button 1").Visible = False
        Sheet25.Shapes("Button 2").Visible = False
        Sheet25.Shapes("Button 3").Visible = False
        Sheet25.Shapes("Button 4").Visible = False
        Sheet25.Shapes("Button 5").Visible = False
        Sheet25.Shapes("Button 6").Visible = False
        Sheet25.Shapes("Button 7").Visible = False
        Sheet25.Shapes("Button 8").Visible = False
        Sheet25.Shapes("Button 9").Visible = False
        Sheet25.Shapes("Button 10").Visible = False
        Sheet25.Shapes("Button 11").Visible = False
        Sheet25.Shapes("Button 12").Visible = False
        Sheet25.Shapes("Button 13").Visible = False
        Sheet25.Shapes("Button 14").Visible = False
        Sheet25.Shapes("Button 15").Visible = False
        cleanInvoice
        
      
        Range("S25").Activate
        
 Sheets("Cost Comparison").Protect Password:="doeLEE"
          
       
 End Sub
Public Sub cleanInvoice()

     Sheets("Invoice Verification").Unprotect Password:="doeLEE"


        Sheets("Invoice Verification").Range("S21:S28") = ""
        Sheets("Invoice Verification").Range("T21:T28") = ""
        Sheets("Invoice Verification").Range("W21:W28") = 0
        Sheets("Invoice Verification").Range("X21:X28") = 0
        Sheets("Invoice Verification").Range("Y21:Y28") = 0
        
        Sheets("Invoice Verification").Range("S38:S46") = ""
        Sheets("Invoice Verification").Range("T38:T46") = ""
        Sheets("Invoice Verification").Range("W38:W46") = 0
        Sheets("Invoice Verification").Range("X38:X46") = 0
        Sheets("Invoice Verification").Range("Y38:Y46") = 0
        
        Sheets("Invoice Verification").Range("S61:S71") = ""
        Sheets("Invoice Verification").Range("T61:T71") = ""
        Sheets("Invoice Verification").Range("W61:W71") = 0
        Sheets("Invoice Verification").Range("X61:X71") = 0
        Sheets("Invoice Verification").Range("Y61:Y71") = 0
        
        
        Sheets("Invoice Verification").Range("S73:S94") = ""
        Sheets("Invoice Verification").Range("T73:T94") = ""
        Sheets("Invoice Verification").Range("W73:W94") = 0
        Sheets("Invoice Verification").Range("X73:X94") = 0
        Sheets("Invoice Verification").Range("Y73:Y94") = 0
        
        
        Sheets("Invoice Verification").Range("S96:S103") = ""
        Sheets("Invoice Verification").Range("T96:T103") = ""
        Sheets("Invoice Verification").Range("W96:W103") = 0
        Sheets("Invoice Verification").Range("X96:X103") = 0
        Sheets("Invoice Verification").Range("Y96:Y103") = 0
        
        
        Sheets("Invoice Verification").Range("S105:S108") = ""
        Sheets("Invoice Verification").Range("T105:T108") = ""
        Sheets("Invoice Verification").Range("W105:W108") = 0
        Sheets("Invoice Verification").Range("X105:X108") = 0
        Sheets("Invoice Verification").Range("Y105:Y108") = 0
        
        
        Sheets("Invoice Verification").Range("N110:N113") = ""
        Sheets("Invoice Verification").Range("T110:T113") = ""
        Sheets("Invoice Verification").Range("W110:W113") = 0
        Sheets("Invoice Verification").Range("X110:X113") = 0
        Sheets("Invoice Verification").Range("Y110:Y113") = 0
        
        
        Sheets("Invoice Verification").Range("N115:N118") = ""
        Sheets("Invoice Verification").Range("Y115:Y118") = 0
        
        
        
        Sheets("Invoice Verification").Range("S48:S48") = ""
        Sheets("Invoice Verification").Range("T48:T48") = ""
        Sheets("Invoice Verification").Range("W48:W48") = 0
        Sheets("Invoice Verification").Range("X48:X48") = 0
        Sheets("Invoice Verification").Range("Y48:Y48") = 0
        
        Sheets("Invoice Verification").Range("S53:S53") = ""
        Sheets("Invoice Verification").Range("T53:T53") = ""
        Sheets("Invoice Verification").Range("W53:W53") = 0
        Sheets("Invoice Verification").Range("X53:X53") = 0
        Sheets("Invoice Verification").Range("Y53:Y53") = 0
        
        Sheets("Invoice Verification").Range("S58:S58") = ""
        Sheets("Invoice Verification").Range("T58:T58") = ""
        Sheets("Invoice Verification").Range("W58:W58") = 0
        Sheets("Invoice Verification").Range("X58:X58") = 0
        Sheets("Invoice Verification").Range("Y58:Y58") = 0
                
        Sheets("Invoice Verification").Range("M122") = ""
        Sheets("Invoice Verification").Range("N12") = ""
        Sheets("Invoice Verification").Range("M124") = ""
        
        Sheets("Invoice Verification").Range("S12") = ""
        Sheets("Invoice Verification").Range("X12") = ""
        Sheets("Invoice Verification").Range("O13") = ""
        Sheets("Invoice Verification").Range("O14") = ""
        Sheets("Invoice Verification").Range("O15") = ""

     Sheets("Invoice Verification").Protect Password:="doeLEE"


End Sub

Public Sub resetLocalEntry()

  Sheets("Local Entry").Unprotect Password:="doeLEE"
  'Sheets("Local Entry").Range("j4") = ""
  Sheets("Local Entry").Range("j5") = ""
  'Sheets("Local Entry").Range("j6") = ""
  'Sheets("Local Entry").Range("j7") = ""
  Sheets("Local Entry").Range("f8") = ""
  Sheets("Local Entry").Range("f9") = ""
  Sheets("Local Entry").Range("f10") = ""
  Sheets("Local Entry").Range("f11") = ""
  Sheets("Local Entry").Range("f12") = ""
  Sheets("Local Entry").Range("f13") = ""
  
      Dim x As Integer
    
    For x = 1 To 10
    Sheets("Local Entry").Range("E" & 15 + x) = ""
    Sheets("Local Entry").Range("F" & 15 + x) = ""
    Sheets("Local Entry").Range("G" & 15 + x) = ""
    Sheets("Local Entry").Range("H" & 15 + x) = ""
    Sheets("Local Entry").Range("I" & 15 + x) = ""
    Sheets("Local Entry").Range("J" & 15 + x) = ""
    Sheets("Local Entry").Range("K" & 15 + x) = ""
    Sheets("Local Entry").Range("L" & 15 + x) = ""
    Sheets("Local Entry").Range("M" & 15 + x) = ""
    Sheets("Local Entry").Range("N" & 15 + x) = ""
    Sheets("Local Entry").Range("O" & 15 + x) = ""
    Sheets("Local Entry").Range("P" & 15 + x) = ""
   Next
   
    Sheets("Local Entry").Shapes(1).Visible = True
    Sheets("Local Entry").Shapes(2).Visible = True
    Sheets("Local Entry").Shapes(3).Visible = False
    Sheets("Local Entry").Shapes(4).Visible = False
    Sheets("Local Entry").Shapes(5).Visible = False
    Sheets("Local Entry").Shapes(6).Visible = False
    Sheets("Local Entry").Shapes(7).Visible = False
    Sheets("Local Entry").Shapes(8).Visible = False
    Sheets("Local Entry").Shapes(9).Visible = False
    Sheets("Local Entry").Shapes(10).Visible = False
    Sheets("Local Entry").Shapes(11).Visible = False
  resetLocalInv
  'Sheets("Local Entry").Protect Password:="doeLEE"

End Sub

Public Sub resetLocalInv()
  Sheets("Local Verification").Unprotect Password:="doeLEE"

  Sheets("Local Verification").Range("o5").Value = ""
  Sheets("Local Verification").Range("s5").Value = ""
  Sheets("Local Verification").Range("x5").Value = ""
  Sheets("Local Verification").Range("v5").Value = ""
  
'  Sheets("Local Verification").Range("o6").Value = ""
  Sheets("Local Verification").Range("o7").Value = ""
 ' Sheets("Local Verification").Range("o8").Value = ""
  Sheets("Local Verification").Range("x10").Value = ""
 Sheets("Local Verification").Range("x11").Value = ""
 Sheets("Local Verification").Range("x12").Value = ""
 Sheets("Local Verification").Range("x13").Value = ""
 Sheets("Local Verification").Range("x14").Value = ""
 Sheets("Local Verification").Range("x15").Value = ""
 
 Sheets("Local Verification").Range("m17").Value = ""
 Sheets("Local Verification").Range("m18").Value = ""
 Sheets("Local Verification").Range("m19").Value = ""
 Sheets("Local Verification").Range("m20").Value = ""
 Sheets("Local Verification").Range("m21").Value = ""
 Sheets("Local Verification").Range("m22").Value = ""
 Sheets("Local Verification").Range("m23").Value = ""
 Sheets("Local Verification").Range("m24").Value = ""
 Sheets("Local Verification").Range("m25").Value = ""
 Sheets("Local Verification").Range("m26").Value = ""
 Sheets("Local Verification").Range("m27").Value = ""
 Sheets("Local Verification").Range("m27").Value = ""
 

  Sheets("Local Verification").Protect Password:="doeLEE"

End Sub
Attribute VB_Name = "Module5"
Sub verifyLoc1()
displayLocInvoice 1
  Sheets("Local Verification").Activate
End Sub

Sub verifyLoc2()
displayLocInvoice 2
  Sheets("Local Verification").Activate

End Sub

Sub verifyLoc3()
displayLocInvoice 3
  Sheets("Local Verification").Activate

End Sub

Sub verifyLoc4()
displayLocInvoice 4
  Sheets("Local Verification").Activate

End Sub

Sub verifyLoc5()
displayLocInvoice 5
  Sheets("Local Verification").Activate

End Sub

Sub verifyLoc6()
displayLocInvoice 6
  Sheets("Local Verification").Activate

End Sub

Sub verifyLoc7()
displayLocInvoice 7
  Sheets("Local Verification").Activate

End Sub

Sub verifyLoc8()
displayLocInvoice 8
  Sheets("Local Verification").Activate

End Sub

Sub verifyLoc9()
displayLocInvoice 9
  Sheets("Local Verification").Activate

End Sub

Sub verifyLoc10()
displayLocInvoice 10
  Sheets("Local Verification").Activate

End Sub

Private Sub displayLocInvoice(num As Integer)
  Sheets("Local Verification").Unprotect Password:="doeLEE"

 Sheets("Local Verification").Range("o5").Value = ThisWorkbook.localResults(num).carrier
  Sheets("Local Verification").Range("s5").Value = ThisWorkbook.localResults(num).ratetender
  Sheets("Local Verification").Range("v5").Value = ThisWorkbook.localResults(num).ratetender
  Sheets("Local Verification").Range("o6").Value = Sheets("Local Entry").Range("j4")
  Sheets("Local Verification").Range("o7").Value = Sheets("Local Entry").Range("j5")
  Sheets("Local Verification").Range("o8").Value = Sheets("Local Entry").Range("j6")
  Sheets("Local Verification").Range("o9").Value = Sheets("Local Entry").Range("j7")
  
  Sheets("Local Verification").Range("x10").Value = ThisWorkbook.localResults(num).costPerHour

 Sheets("Local Verification").Range("x11").Value = ThisWorkbook.localResults(num).hoursUsed
 Sheets("Local Verification").Range("x12").Value = ThisWorkbook.localResults(num).HourlySubTotal

 Sheets("Local Verification").Range("x13").Value = ThisWorkbook.localResults(num).FuelSurchagePerc
 Sheets("Local Verification").Range("x14").Value = ThisWorkbook.localResults(num).FuelSurChargeCost
 Sheets("Local Verification").Range("x15").Value = ThisWorkbook.localResults(num).totalCost
 
 Sheets("Local Verification").Range("m17").Value = ""
 Sheets("Local Verification").Range("m18").Value = ""
 Sheets("Local Verification").Range("m19").Value = ""
 Sheets("Local Verification").Range("m20").Value = ""
 Sheets("Local Verification").Range("m21").Value = ""
 Sheets("Local Verification").Range("m22").Value = ""
 Sheets("Local Verification").Range("m23").Value = ""
 Sheets("Local Verification").Range("m24").Value = ""
 Sheets("Local Verification").Range("m25").Value = ""
 Sheets("Local Verification").Range("m26").Value = ""
 Sheets("Local Verification").Range("m27").Value = ""
 Sheets("Local Verification").Range("m27").Value = ""
 
 Sheets("Local Verification").Protect Password:="doeLEE"

End Sub
Attribute VB_Name = "Origin"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private cID As Integer
Private cPlace As String
Private cRateCol As String
Private cOffset As Integer
Private cNYli As Integer
Private cTXPermit As Integer



Public Property Let Offset(pIn As Integer)
    cOffset = pIn
End Property
Public Property Get Offset() As Integer
    Offset = cOffset
End Property
Public Property Let RateColumn(pIn As String)
    cRateCol = pIn
End Property
Public Property Get RateColumn() As String
    RateColumn = cRateCol
End Property
Public Property Let ID(pIn As Integer)
    cID = pIn
End Property

Public Property Let Location(pIn As String)
    cPlace = pIn
End Property

Public Property Get ID() As Integer
    ID = cID
End Property

Public Property Get Location() As String
    Location = cPlace
End Property

Public Property Let NYLIAllowed(pIn As Integer)
    cNYli = pIn
  
End Property

Public Property Get NYLIAllowed() As Integer
    NYLIAllowed = cNYli
End Property

Public Property Get TexasPermit() As Integer
    TexasPermit = cTXPermit
End Property
Public Property Let TexasPermit(pIn As Integer)
    cTXPermit = pIn
End Property
Attribute VB_Name = "RateCompare"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim cSCAC As String
Dim cTotalCost As Double
Dim cTotalCostStr As String
Dim tFuelCharge As Double
Dim cEquiptmentType As String
Dim cEquiptmentQty As Integer
Dim cEquiptmentMC As Double
Dim cEquiptmentCharge As Double
Dim cEquiptmentRate As Double
Public MaterialType As String
Public MaterialQty As String
Public MaterialRate As Double
Public MaterialMC As Double
Public MaterialCharge As Double
Public HWRCQTY As Integer
Public HWRCRate As Double
Public HWRCMC As Double
Public HWRCCharge As Double
Public s2sQty As Integer
Public s2sRate As Double
Public s2sMC As Integer
Public s2sCharge As Double
Public s2sType As String
Public NYLHoQty As Integer
Public NYLHoRate As Double
Public NYLHoMC As Double
Public NYLHoCharge As Double
Public NYLHdQty As Integer
Public NYLHdRate As Double
Public NYLHdMC As Double
Public NYLHdCharge As Double
Public LHDrvQty As Integer
Public LHDrvRate As Double
Public LHDrvMC As Double
Public LHDrvCharge As Double
Public LHDrvType As String
Public LHFSQty As Integer
Public LHFSRate As Double
Public LHFSMC As Double
Public LHFSCharge As Double
Public Remarks As String
Public exUseQty As Integer
Public exUseRate As Double
Public exUseCharge As Double
Public exUseMC As Double
Public HazMatQty As Integer
Public HazMatRate As Double
Public HazMatCharge As Double
Public hazMatMC As Double
Public StopOffQty As Integer
Public StopOffRate As Double
Public StopOffMC As Double
Public StopOffCharge As Double
Public TarpQty As Integer
Public tarpRate As Double
Public tarpMC As Double
Public tarpCharge As Double
Public satTrakQty As Integer
Public satTrakRate As Double
Public satTrakMC As Double
Public satTrakCharge As Double
Public SigQty As Integer
Public SigRate As Double
Public SigMC As Double
Public SigCharge As Double
Public TempQty As Integer
Public tempMC As Double
Public tempRate As Double
Public tempCharge As Double
Public PUHOLQty As Integer
Public PUHOLRate As Double
Public PUHOLMC As Double
Public PHUOLCharge As Double
Public EONUType As String
Public EONUQty As Integer
Public EONURate As Double
Public EONUMC As Double
Public EONUCharge As Double
Public IDHType As String
Public IDHQty As Integer
Public IDHRate As Double
Public IDHMC As Double
Public IDHCharge As Double
Public ODHType As String
Public ODHQty As Integer
Public ODHRate As Double
Public ODHMC As Double
Public ODHCharge As Double
Public EERType As String
Public EERQty As Integer
Public EERMC As Double
Public EERRate As Double
Public EERCharge As Double
Public EERDType As String
Public EERDQty As Integer
Public EERDMC As Double
Public EERDRate As Double
Public EERDCharge As Double
Public EENYOQty As Integer
Public EENYORate As Double
Public EENYOMC As Double
Public EENYOCharge As Double
Public EENYDQty As Integer
Public EENYDRate As Double
Public EENYDMC As Double
Public EENYDCharge As Double
Public EEFCQty As Integer
Public EEFCRate As Double
Public EEFCMC As Double
Public EEFCCharge As Double
Public DEquiptmentType As String
Public DEquiptmentQty As Integer
Public DEquiptmentRate As Double
Public DEquiptmentMC As Double
Public DEquiptmentCharge As Double
Public s2sDQty As Integer
Public s2sDRate As Double
Public s2sDMC As Double
Public s2sDtype As String
Public s2sDCharge As Double
Public DMaterialType As String
Public DMaterialQty As Double
Public DMaterialRate As Double
Public DMaterialMC As Double
Public DMaterialCharge As Double
Public dFSQty As Integer
Public dFSRate As Double
Public dFSMC As Double
Public dFSCharge As Double
Public NYdoQty As Integer
Public NYdoRate As Double
Public NYdoMC As Double
Public NYdoCharge As Double
Public NYddQty As Integer
Public NYddRate As Double
Public NYddMC As Double
Public NYddCharge As Double
Public dDrvQty As Integer
Public dDrvRate As Double
Public dDrvMC As Double
Public dDrvCharge As Double
Public dDrvType As String

Public EEquiptmentType As String
Public EEquiptmentQty As Integer
Public EEquiptmentRate As Double
Public EEquiptmentMC As Double
Public EEquiptmentCharge As Double
Public s2sEQty As Integer
Public s2sERate As Double
Public s2sEMC As Double
Public s2sECharge As Double
Public s2sEtype As String

Public EMaterialType As String
Public EMaterialQty As Double
Public EMaterialRate As Double
Public EMaterialMC As Double
Public EMaterialCharge As Double
Public EFSQty As Integer
Public EFSRate As Double
Public EFSMC As Double
Public EFSCharge As Double
Public NYeoQty As Integer
Public NYeoRate As Double
Public NYeoMC As Double
Public NYeoCharge As Double
Public NYedQty As Integer
Public NYedRate As Double
Public NYedMC As Double
Public NYedCharge As Double
Public eDrvQty As Integer
Public eDrvRate As Double
Public eDrvMC As Double
Public eDrvCharge As Double
Public eDrvType As String

Public DOWPType As String
Public DOWPQty As Double
Public DOWPRate As Double
Public DOWPMC As Double
Public DOWPCharge As Double

Public DOWoPType As String
Public DOWoPQty As Double
Public DOWoPRate As Double
Public DOWoPMC As Double
Public DOWoPCharge As Double

Public DDWPType As String
Public DDWPQty As Double
Public DDWPRate As Double
Public DDWPMC As Double
Public DDWPCharge As Double

Public DDWoPType As String
Public DDWoPQty As Double
Public DDWoPRate As Double
Public DDWoPMC As Double
Public DDWoPCharge As Double

Public LOoType As String
Public LOoQty As Double
Public LOoRate As Double
Public LOoMC As Double
Public LOoCharge As Double

Public LOdType As String
Public LOdQty As Double
Public LOdRate As Double
Public LOdMC As Double
Public LOdCharge As Double

Public TSoQty As Double
Public TSoRate As Double
Public TSoMC As Double
Public TSoCharge As Double

Public TSdQty As Double
Public TSdRate As Double
Public TSdMC As Double
Public TSdCharge As Double

Public OHTYpe As String
Public OHQty As Integer
Public OHRate As Double
Public OHMC As Double
Public OHCharge As Double

Public OwType As String
Public OwQty As Integer
Public OwRate As Double
Public OwMC As Double
Public OwCharge As Double

Public OLTYpe As String
Public OLQty As Integer
Public OLRate As Double
Public OLMC As Double
Public OLCharge As Double

Public OLbTYpe As String
Public OLbQty As Integer
Public OLbRate As Double
Public OLbMC As Double
Public OLbCharge As Double

Public Permit1type As String
Public permit1Amt As String
Public permit1Rate As Double
Public permit1Charge As Double
Public permit1Cost As Double
Public permit1Qty As Integer


Public Permit2type As String
Public permit2Amt As String
Public permit2Rate As Double
Public permit2Charge As Double
Public permit2Cost As Double
Public permit2Qty As Integer

Public Permit3type As String
Public permit3Amt As String
Public permit3Rate As Double
Public permit3Charge As Double
Public permit3Cost As Double
Public permit3Qty As Integer

Public Permit4type As String
Public permit4Amt As String
Public permit4Rate As Double
Public permit4Charge As Double
Public permit4Cost As Double
Public permit4Qty As Integer

Public CarrierName As String
Public CarrierTender As String
Public carrierSup As String
Public companyName As String
Public invoiceName As String
Public pepName As String
Public Comment As String

Public EMSatQty As Integer
Public EMSatRate As Double
Public EMSatMC As Double
Public EMSatCharge As Double

Public dHazMatType As String
Public dHazMatQty As Integer
Public dHazMatRate As Double
Public dHazMatMC As Double
Public dHazMatCharge As Double

Public DexUseQty As Integer
Public DexUseRate As Double
Public DExUseMC As Double
Public DExUseCharge As Double

Public DTempQty As Integer
Public DTempMC As Double
Public DTempRate As Double
Public DTempCharge As Double

Public DSigQty As Integer
Public DSigRate As Double
Public DSigMC As Double
Public DSigCharge As Double

Public DsatTrakQty As Integer
Public DsatTrakRate As Double
Public DsatTrakMC As Double
Public DsatTrakCharge As Double

Public DTarpQty As Integer
Public DtarpRate As Double
Public DtarpMC As Double
Public DtarpCharge As Double

Public DStopOffQty As Integer
Public DStopOffRate As Double
Public DStopOffMC As Double
Public DStopOffCharge As Double

Public DHWRCQTY As Integer
Public DHWRCRate As Double
Public DHWRCMC As Double
Public DHWRCCharge As Double

Public EexUseQty As Integer
Public EexUseRate As Double
Public EExUseMC As Double
Public EExUseCharge As Double

Public EsatTrakQty As Integer
Public EsatTrakRate As Double
Public EsatTrakMC As Double
Public EsatTrakCharge As Double

Public ETarpQty As Integer
Public EtarpRate As Double
Public EtarpMC As Double
Public EtarpCharge As Double

Public eStopOffQty As Integer
Public eStopOffRate As Double
Public eStopOffMC As Double
Public eStopOffCharge As Double

Public s2sREQty As Integer
Public s2sRERate As Double
Public s2sREMC As Double
Public s2sREtype As String
Public s2sRECharge As Double


Public Misc1type As String
Public Misc11Charge As Double
Public Misc2type As String
Public Misc21Charge As Double
Public Misc3type As String
Public Misc31Charge As Double


































Public Property Get EquiptmentRate() As Double
    EquiptmentRate = cEquiptmentRate
End Property
Public Property Let EquiptmentRate(pIn As Double)
    cEquiptmentRate = pIn
End Property

Public Property Get EquiptmentCharge() As Double
    EquiptmentCharge = cEquiptmentCharge
End Property

Public Property Let EquiptmentCharge(pIn As Double)
    cEquiptmentCharge = pIn
End Property
Public Property Let EquiptmentMC(pIn As Double)
    cEquiptmentMC = pIn
End Property

Public Property Get EquiptmentMC() As Double
    EquiptmentMC = cEquiptmentMC
End Property

Public Property Get EquiptmentQTY() As Integer
   EquiptmentQTY = cEquiptmentQty
End Property
Public Property Let EquiptmentQTY(pIn As Integer)
    cEquiptmentQty = pIn
End Property

Public Property Get EquiptmentType() As String
    EquiptmentType = cEquiptmentType
End Property
Public Property Let EquiptmentType(pIn As String)
    cEquiptmentType = pIn
End Property

Public Property Let FuelCharge(pIn As Double)
    tFuelCharge = pIn
End Property
Public Property Get FuelCharge() As Double
    FuelCharge = tFuelCharge
End Property

Public Property Let scac(pIn As String)
    cSCAC = pIn
End Property

Public Property Let totalCost(pIn As Double)
    cTotalCost = pIn
    cTotalCostStr = Right("0000000000" & cTotalCost, 10)
    
End Property

Public Property Get scac() As String
    scac = cSCAC
End Property

Public Property Get totalCost() As Double
    totalCost = cTotalCost
End Property

Public Property Get TotalCostStr() As String
    TotalCostStr = cTotalCostStr
End Property


Attribute VB_Name = "RateCompareLocal"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public carrier As String
Public costPerHour As Double
Public hoursUsed As Double
Public HourlySubTotal As Double
Public FuelSurchagePerc As Double
Public FuelSurChargeCost As Double
Public totalCost As Double
Public scac As String
Public ratetender As String
Public localPhone As String
Public portalLocation As String
Public MaxRadiusMiles As String
Public MinHours As String
Public maxHours As String


Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "Sheet20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet24"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet25"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet26"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet27"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "State2State"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim cSCAC As String
Dim cEqpt As Integer
Dim cOrigin As Integer
Dim cOrgDesc As String
Dim cDestination As Integer
Dim dDestDesc As String
Dim cRate As Double
Dim cRow As Long

Public Property Get FirstRow() As Long
    FirstRow = cRow
End Property
'Dim clocations As Collection
Public Property Let FirstRow(pIn As Long)
    cRow = pIn
End Property
Public Property Get rate() As Double
    rate = cRate
End Property

Public Property Get Destination() As String
    Destination = cDestination
    
End Property

Public Property Get Origin() As String
    Origin = cOrigin
    
End Property

Public Property Get scac() As String
    scac = cSCAC
    
End Property

Public Property Get Equiptment() As Integer
    Equiptment = cEqpt
    
End Property




Public Property Let rate(pIn As Double)
    
    cRate = pIn
    
End Property


Public Property Let Destination(pIn As String)
    
    Dim tOrg As New Origin
    
    Set tOrg = ThisWorkbook.LocationCol(pIn)
    cDestDesc = pIn
    cDestination = tOrg.ID
    
    
End Property

Public Property Let Origin(pIn As String)
    
    Dim tOrg As New Origin
    
    Set tOrg = ThisWorkbook.LocationCol(pIn)
    cOrgDesc = pIn
    cOrigin = tOrg.ID
    
    
End Property


Public Property Let Equiptment(pIn As Integer)
    cEqpt = pIn
    
End Property

Public Property Let scac(pIn As String)
    cSCAC = pIn
    
End Property

Attribute VB_Name = "SurCharge"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Public equiptmentCol As Collection
Public ScacCol As Collection
Public MaterialCol As Collection
Public LocationCol As Collection
Public CompanyCol As Collection
Public DHRTCol As Collection
Public FixedRateCol As Collection
Public St2St1 As Collection
Public st2st2 As Collection
Public Results As Collection
Public locRateCol As Collection
Public LocEquiptmentCol As Collection
Public localResults As Collection
















Public Sub Workbook_Open()
     
    
    Set DHRTCol = New Collection
    Set equiptmentCol = New Collection
    Set ScacCol = New Collection
    Set MaterialCol = New Collection
    Set LocationCol = New Collection
    Set CompanyCol = New Collection
    Set FixedRateCol = New Collection
    Set St2St1 = New Collection
    Set st2st2 = New Collection
    Set LocEquiptmentCol = New Collection
    Set locRateCol = New Collection
    
    Set localResults = New Collection
    
    
    loadEquiptment equiptmentCol
    loadSCAC ScacCol
    loadMaterial MaterialCol
    loadLocation LocationCol
    LoadCompany CompanyCol
    'loadDriverRate DHRTCol
    loadFixedRates FixedRateCol
    loadState2State St2St1
    LoadLocalRates locRateCol
    
End Sub


INQUEST-PP=macro
