Attribute VB_Name = "AA_VARIABLES_GLOBALES"
Public prefixControlFile As String
Public sh1, sh2, sh3, sh4, sh5, sh6, sh7, sh8, sh9, sh10, sh11, sh12, sh13, sh14, sh15, sh16, sh17, sh18, sh19, sh20, sh21, sh22, sh23, sh24, sh25, sh26, sh27 As String
Public UnidadAsignada, RutaInsumos, RutaPlaneaciones, RutaSaldos, RutaSaldoInicial, CarpetaCompartidaCajas, NombreRepositorio, UsuarioWindows, UsuarioWin, Catalogos, CarpetaConsolidados As String
Public RutaLocal, puntero, rutaRepositorioPersonal As String
Public RutaCashInHistorico, RutaHistoricoPronosticoCO As String
Public RutaDesembolsos, RutaRemesas, RutaArqueosEtv, RutaTxtPlaneaciones, RutaTxtTraspasos, RutaTxtCompras, RutaDem, RutaPronosticoHistorico, CarpetaPronosticoHistoricoAM, CarpetaPronosticoHistoricoPM, RutaPronosticoModelo, RutaPronosticoRepositorioBD As String
Public NombreRepositorioCatalogos, MiLibro, PswSaldos, CarpetaArchivosProcesadosTxt, ArchivosProcesadosTxt As String
Public NombrePlaneador, LimitesOperativos, CatOdpTdd, PronosticoActualizacion, ModeloActualizacion, CashInActualizacion  As String
Public fechaOperacion As Date
Public CTLG1, CTLG2, CTLG3, CTLG4, CTLG5, CTLG6, CTLG7 As String
Public CTLG1s, CTLG2s, CTLG3s, CTLG4s, CTLG5s, CTLG6s, CTLG7s As String
Public TMPL1, TMPL2, TMPL3, TMPL4, TMPL5, TMPL6, TMPL7 As String
Public moneda1, moneda2 As String
Public Etv1, Etv2, Etv3, Etv4, Etv5, Etv6, Etv7, Etv8, Etv9, Etv10 As String
Public Meses1, Meses2, Meses3, Meses4, Meses5, Meses6, Meses7, Meses8, Meses9, Meses10, Meses11, Meses12 As String
Public Mes1, Mes2, Mes3, Mes4, Mes5, Mes6, Mes7, Mes8, Mes9, Mes10, Mes11, Mes12 As String
Public MESE1, MESE2, MESE3, MESE4, MESE5, MESE6, MESE7, MESE8, MESE9, MESE10, MESE11, MESE12 As String
Public dia1, Dia2, Dia3, Dia4, Dia5, Dia6, Dia7 As String
Public SBX20, SBX10, SBX5, SBX2, SBX1, SBX05, SBX02, SBX01, SBX005, SBX002 As Long
Public posicion As Integer
Public MiLibroSinExt, CatDesembolsos As String
Public imaTemporalSaldos1, firmaImagen As String
Public DiasInventarioMinimo, DiasInventarioMaximoMulticajas, DiasInventarioMaximoUnicajas As Double
Public FechaValorGeneral As Date
Public CamArq0, CamArq1, CamArq2, CamArq3, CamArq4, CamArq5, CamArq6, CamArq7, CamArq8, CamArq9, CamArq10 As String
Public CamArq11, CamArq12, CamArq13, CamArq14, CamArq15, CamArq16, CamArq17, CamArq18, CamArq19, CamArq20 As String
Public shMov1, shMov2, shMov3, shMov4, shMov5, shMov6, shMov7, shMov8, shMov9, shMov10, shMov11, shMov12, shMov13, shMov14, shMov15 As String
Public shMov16, shMov17, shMov18, shMov19, shMov20, shMov21, shMov22, shMov23, shMov24, shMov25, shMov26, shMov27, shMov28, shMov29, shMov30, shMov31, shMov32, shMov33, shMov34, shMov35, shMov36, shMov37 As String
Public shCom1, shCom2, shCom3, shCom4, shCom5, shCom6, shCom7, shCom8, shCom9, shCom10, shCom11, shCom12, shCom13, shCom14, shCom15 As String
Public shCom16, shCom17, shCom18, shCom19, shCom20, shCom21, shCom22, shCom23, shCom24, shCom25, shCom26 As String
Public shCom27, shCom28, shCom29, shCom30, shCom31, shCom32, shCom33, shCom34, shCom35, shCom36 As String
Public Sociedad, AnioDefault, NombreCarpetaCompartida As String


Sub VariablesGlobales()

'prefijo que ubicar|fffd| al archivo

prefixControlFile = "PTC01"

AnioDefault = Year(Date)
NombreCarpetaCompartida = "Logistica Monetaria"

'Fecha valor general
FechaValorGeneral = Date

'Usuario que ejecuta
UsuarioWindows = Environ("UserName")

''Nombre del archivo
MiLibro = ActiveWorkbook.Name

'Nombre del Archivo sin extensi|fffd|n
posicion = InStr(1, MiLibro, ".", vbTextCompare)
MiLibroSinExt = Left(MiLibro, posicion - 1)

'Nombres de las hojas
sh1 = "pm_PLANEACION_CAJAS"
sh2 = "Correos OS"
sh3 = "pm_PLANEACION_SERVICIOS"
sh4 = "Info. Gral."
sh5 = "Correos SUC"
sh6 = "Procesar"
sh7 = "OdpTdd"
sh8 = "SaldoCorte"
sh9 = "Salidas"
sh10 = "Arqueos"
sh11 = "TABLAS"
sh12 = "Confirma_DOTACION"
sh13 = "MovimientosSalida"
sh14 = "Cajas T-1"
sh15 = "am_CONCILIAR_ARQUEOS"
sh16 = "MovimientosEntrada"
sh17 = "Registro COMPRAS"
sh18 = "ProgramacionDotaciones"
sh19 = "PARAMETROS"
sh20 = "Correos ETV"
sh21 = "ConfirmacionServicios"
sh22 = "ProgramacionServicios"
sh23 = "PARTICIPANTE(formato)"
sh24 = "pm_PLANEACION_COMPRAS"
sh25 = "DEM"
sh26 = "OrdenDotacion"
sh27 = "SALDO INICIAL"

'Alias de usuario
UsuarioWin = Sheets(sh19).Range("B4").value

'DiasInventarioMinimo
DiasInventarioMinimo = Sheets(sh19).Range("B13").value
DiasInventarioMaximoMulticajas = Sheets(sh19).Range("B14").value
DiasInventarioMaximoUnicajas = Sheets(sh19).Range("B15").value

'Puntero
puntero = Sheets(sh19).Range("B8").value

'Nombre del planeador
NombrePlaneador = Sheets(sh19).Range("B2").value

'Fecha de operaci|fffd|n
fechaOperacion = Sheets(sh19).Range("B5").value


        If Sheets(sh19).Range("B8").value = "CARPETA COMPARTIDA" Then
        
        'Unidad asignada a la carpeta compartida
        UnidadAsignada = (Left(ActiveWorkbook.Path, 2)) & "\"
        puntero = "COMPARTIDA"
        
        ElseIf Sheets(sh19).Range("B8").value = "LOCAL" Then
        'Ruta local
        
            Select Case UsuarioWindows
            
            Case "maxrugerio"
                UnidadAsignada = "E:\Users\" & UsuarioWindows & "\Work Folders\" & NombreCarpetaCompartida & "\"
            
            Case "crmartinez"
                UnidadAsignada = "D:\Users\" & UsuarioWindows & "\Documents\" & NombreCarpetaCompartida & "\"
            Case "viblanco"
                UnidadAsignada = "D:\Users\" & UsuarioWindows & "\Documents\" & NombreCarpetaCompartida & "\"
            Case "ehidalgo"
                UnidadAsignada = "D:\Users\" & UsuarioWindows & "\Documents\" & NombreCarpetaCompartida & "\"
            
            Case Else
                UnidadAsignada = "D:\Users\" & UsuarioWindows & "\Documents\" & NombreCarpetaCompartida & "\"
            
            End Select
        
        puntero = "LOCAL"
        
        End If

'Local
RutaLocal = "D:\Users\" & UsuarioWindows & "\Documents\"

If UsuarioWindows = "maxrugerio" Then
    RutaLocal = "E:\Users\" & UsuarioWindows & "\Work Folders\"
Else
    RutaLocal = "D:\Users\" & UsuarioWindows & "\Documents\"
End If

'Ruta Saldos Monitoreo
RutaSaldos = "Saldos\2018\"

'Ruta Planeaciones
RutaPlaneaciones = "Planeaciones\Cajas\2018\"

'RutaInsumos = Sheets(sh1).Range("B4")
RutaInsumos = "Planeaciones\Cajas\Repositorio Archivos Diarios\"

'Ruta DEM
RutaDem = "DEM\"

'Ruta Demanda ODP y TDD t+1
RutaDesembolsos = "Reporte_Desembolsos\"

'Ruta Remesas Avansoft
RutaRemesas = "Reporte_Remesas\"

'Ruta Consolidados diarios anual
RutaConsolidados = "Planeaciones\Cajas\2018\00 2018 Saldos Diarios Consolidados\"

'Ruta TXT Planeaciones
RutaTxtPlaneaciones = "Planeaciones\Cajas\Planeaciones TXT\"

RutaTxtTraspasos = "Planeaciones\Cajas\Traspasos TXT\"

RutaTxtCompras = "Planeaciones\Cajas\Compras TXT\"

'Ruta de archivo con saldo inicial
RutaSaldoInicial = "Saldos\Diarios\"


'Ruta Arqueos ETV
RutaArqueosEtv = "Planeaciones\Cajas\Saldos Cajas TXT\"

'cash out

RutaHistoricoPronosticoCO = "Pronostico\Historico Cash Out Pronostico\"

'Ruta Pronostico
RutaPronosticoHistorico = "Pronostico\Historico Modelo Dotaciones\"
CarpetaPronosticoHistoricoAM = "ActualizacionDia t am"
CarpetaPronosticoHistoricoPM = "ActualizacionDia t-1 pm"

RutaPronosticoModelo = "Pronostico\Modelos Semanales\"

RutaCashInHistorico = "Pronostico\Historico Cash In Pronostico\"

RutaPronosticoRepositorioBD = "Pronostico\Base de Datos\bd_SQL\"

'repositorio Personal
rutaRepositorioPersonal = "Planeaciones\Cajas\Repositorio Archivos Diarios\" & UsuarioWindows & "\"

'Monedas
moneda1 = "MXP"
moneda2 = "USD"

'Cat|fffd|logo 1 Claves denominaciones homologado
Catalogos = "Directorios y Cat|fffd|logos\"

'Imagen temporal para env|fffd|o de detalle a ETV
imaTemporalSaldos1 = "DetalleEtvServicios.png"


'FIRMA
firmaImagen = "FirmaInternaCompartamos.jpg"



'Cat|fffd|logo L|fffd|mites Operativos
LimitesOperativos = "LimiteOperativoMonitoreoSaldos"

'Archivos DIRECTORIOS Y CAT|fffd|LOGOS PronosticoActualizacion
PronosticoActualizacion = "PronosticoActualizacion"
ModeloActualizacion = "ModeloSemanalPronosticoDiario"
CashInActualizacion = "CashInMonitoreoSaldos"

    'Archivo con % Demanda OS / Sucursal y Variabilidad por corte de planeaci|fffd|n vs saldo final
    CatDesembolsos = "Variabilidad 2018"
    CatOdpTdd = "DistribuicionDispersionOdpTdd"
    
'Campos arqueos txt
'Nombres de las columnas del layout homologado
CamArq0 = "REPORTE DE EXISTENCIAS FISICAS"
CamArq1 = "FechaHoraRegistro"
CamArq2 = "Usuario"
CamArq3 = "FechaOrigen"
CamArq4 = "SeccionHomologada"
CamArq5 = "CategoriaOrigen" 'ej Compra 15-11-2017
CamArq6 = "CategoriaHomologada" 'ej COMPRA
CamArq7 = "TituloReporteOrigen" ' fila 5 PANAMERICANO PUEBLA COMPARTAMOS BANCO
CamArq8 = "PlazaOrigen"
CamArq9 = "NombreEtvHomologado"
CamArq10 = "Denominacion"
CamArq11 = "Importe"
CamArq12 = "SubtotalOrigen"
CamArq13 = "Moneda"
CamArq14 = "FolioRecoleccion"
CamArq15 = "Plomo"
CamArq16 = "NumNombreSucursal"
CamArq17 = "Comentarios"
CamArq18 = ""
CamArq19 = ""
CamArq20 = ""

'Nombres de ETV
Etv1 = "COMETRA"
Etv2 = "PANAMERICANO"
Etv3 = "SEGURITEC"
Etv4 = "SEPSA"
Etv5 = ""
Etv6 = ""
Etv7 = ""
Etv8 = ""

'Nombres Meses Largo
'Meses1 = "Enero"
'Meses2 = "Febrero"
'Meses3 = "Marzo"
'Meses4 = "Abril"
'Meses5 = "Mayo"
'Meses6 = "Junio"
'Meses7 = "Julio"
'Meses8 = "Agosto"
'Meses9 = "Septiembre"
'Meses10 = "Octubre"
'Meses11 = "Noviembre"
'Meses12 = "Diciembre"

Meses1 = "ENERO"
Meses2 = "FEBRERO"
Meses3 = "MARZO"
Meses4 = "ABRIL"
Meses5 = "MAYO"
Meses6 = "JUNIO"
Meses7 = "JULIO"
Meses8 = "AGOSTO"
Meses9 = "SEPTIEMBRE"
Meses10 = "OCTUBRE"
Meses11 = "NOVIEMBRE"
Meses12 = "DICIEMBRE"


'Nombres Meses Corto
Mes1 = "Ene"
Mes2 = "Feb"
Mes3 = "Mar"
Mes4 = "Abr"
Mes5 = "May"
Mes6 = "Jun"
Mes7 = "Jul"
Mes8 = "Ago"
Mes9 = "Sep"
Mes10 = "Oct"
Mes11 = "Nov"
Mes12 = "Dic"


'Nombres Meses Corto
MESE1 = "ENE"
MESE2 = "FEB"
MESE3 = "MAR"
MESE4 = "ABR"
MESE5 = "MAY"
MESE6 = "JUN"
MESE7 = "JUL"
MESE8 = "AGO"
MESE9 = "SEP"
MESE10 = "OCT"
MESE11 = "NOV"
MESE12 = "DIC"

'Dias
dia1 = "LUNES"
Dia2 = "MARTES"
Dia3 = "MI|fffd|RCOLES"
Dia4 = "JUEVES"
Dia5 = "VIERNES"
Dia6 = "S|fffd|BADO"
Dia7 = "DOMINGO"

'Estandar Banxico para dotaciones de moneda
SBX20 = 500
SBX10 = 750
SBX5 = 1200
SBX2 = 2000
SBX1 = 2000
SBX05 = 3000
SBX02 = 3750
SBX01 = 5000
SBX005 = 5000

'layout hoja 13 Movimientos

shMov1 = "TipoTraspado"
shMov2 = "IdPlazaOrigen"
shMov3 = "EtvOrigen"
shMov4 = "PlazaOrigen"
shMov5 = "IdSucursalOrigen"
shMov6 = "SucursalOrigen"
shMov7 = "TipoMovimiento"
shMov8 = "DestinoSalida"
shMov9 = "IdPlazaDestino"
shMov10 = "PlazaDestino"
shMov11 = "EtvDestino"
shMov12 = "IdSucursalDestino"
shMov13 = "SucursalDestino"
shMov14 = "OtroDestino"
shMov15 = "EtvTraslado"
shMov16 = "Importe"
shMov17 = "TotalBilletes"
shMov18 = "Billetes 1000"
shMov19 = "Billetes 500"
shMov20 = "Billetes 200"
shMov21 = "Billetes 100"
shMov22 = "Billetes 50"
shMov23 = "Billetes 20"
shMov24 = "TotalMonedas"
shMov25 = "Monedas 100"
shMov26 = "Monedas 20"
shMov27 = "Monedas 10"
shMov28 = "Monedas 5"
shMov29 = "Monedas 2"
shMov30 = "Monedas 1"
shMov31 = "Monedas 0.50"
shMov32 = "Monedas 0.20"
shMov33 = "Monedas 0.10"
shMov34 = "Monedas 0.05"
shMov35 = "FechaTraslado"
shMov36 = "USUARIO CAPTURA"
shMov37 = "FECHA CAPTURA"

'layout hoja 17 Compras

shCom1 = "Estatus Compra"
shCom2 = "Medio Abastecimiento"
shCom3 = "Plaza"
shCom4 = "ETV Destino (Compra)"
shCom5 = "IdPlaza"
shCom6 = "Fecha Compra"
shCom7 = "Monto Inicial Requerido"
shCom8 = "Monto Comprado"
shCom9 = "Vendedor"
shCom10 = "Caja ETV Origen (Vendedor)"
shCom11 = "Contacto (Vendedor)"
shCom12 = "Respuesta (Vendedor)"
shCom13 = "ETV Traslado"
shCom14 = "Fecha Traslado"
shCom15 = "TOTAL BILLETE"
shCom16 = "BILLETE $1,000.00"
shCom17 = "BILLETE $500.00"
shCom18 = "BILLETE $200.00"
shCom19 = "BILLETE $100.00"
shCom20 = "BILLETE $50.00"
shCom21 = "BILLETE $20.00"
shCom22 = "TOTAL MORRALLA"
shCom23 = "MONEDA $100.00"
shCom24 = "MONEDA $20.00"
shCom25 = "MONEDA $10.00"
shCom26 = "MONEDA $5.00"
shCom27 = "MONEDA $2.00"
shCom28 = "MONEDA $1.00"
shCom29 = "MONEDA $0.50"
shCom30 = "MONEDA $0.20"
shCom31 = "MONEDA $0.10"
shCom32 = "MONEDA $0.05"
shCom33 = "Folio Solicitud SAP LOGON"
shCom34 = "Clave Rastreo (PDF Tesorer|fffd|a)"
shCom35 = "USUARIO CAPTURA"
shCom36 = "HORA CAPTURA"


'''CONSTANTES DE BANCO COMPARTAMOS
Sociedad = "1012"

End Sub



Function DATOS_USUARIO_WINDOWS(Usuario As String, columna As Integer)

''''''''''''''''''''''''NOMBRE DE LOS USUARIOS REGISTRADOS'''''''''''''''''''''''''''''''''''
Call VariablesGlobales
Dim ArraySize As String


'sh4 = "Info. Gral."
Sheets(sh4).Select
If Range("AC2") = "" And Range("AC3") = "" Then
ArraySize = 1
ElseIf Range(("AC2"), Range("AC2").End(xlDown)).Count > 1000 Then
ArraySize = 1
Else
ArraySize = Range(("AC2"), Range("AC2").End(xlDown)).Count
End If


Dim X, Y, i, j, k, l As Integer
'fila de inicio
X = 2
'columna de inicio
Y = 29


Dim USUARIOS() As String
ReDim USUARIOS(ArraySize, 5)

For i = 1 To ArraySize
    
    For j = 1 To 2
        
         
         
        If j = 1 Then
        USUARIOS(i, j) = Cells(X, Y).value
        
        ElseIf j = 2 Then
        USUARIOS(i, j) = Cells(X, Y + 1).value
        
        End If
        
                For k = 1 To 3
            
                    If k = 3 Then
                    USUARIOS(i, k) = Cells(X, Y + 2).value
                    
                    End If
                
                            For l = 1 To 4
                        
                                If l = 4 Then
                                USUARIOS(i, l) = Cells(X, Y + 3).value
                                
                                End If
                            
                                        For m = 1 To 5
                                
                                            If m = 5 Then
                                                USUARIOS(i, m) = Cells(X, Y + 4).value
                                            
                                            End If
                                    
                                        Next m
                            
                                Next l
                            
                Next k
                
                
    Next j
    
    X = X + 1
Next i

Dim myFound As Variant

With Application
    For i = 1 To UBound(USUARIOS, 2)
        myFound = .Match(Usuario, .Index(USUARIOS, 0, i), 0)
        If IsNumeric(myFound) Then Exit For
    Next
End With


    
    myFound = myFound - 1
    DATOS_USUARIO_WINDOWS = USUARIOS(myFound, columna)


End Function

Sub LayoutPlaneacionServicios()
'sh3 = "pm_PLANEACION_SERVICIOS"
C001sh3 = 1
C002sh3 = 2
C003sh3 = 3
C004sh3 = 4
C005sh3 = 5
C006sh3 = 6
C007sh3 = 7
C008sh3 = 8
C009sh3 = 9
C010sh3 = 10
C011sh3 = 11
C012sh3 = 12
C013sh3 = 13
C014sh3 = 14
C015sh3 = 15
C016sh3 = 16
C017sh3 = 17
C018sh3 = 18
C019sh3 = 19
C020sh3 = 20
C021sh3 = 21
C022sh3 = 22


End Sub
Attribute VB_Name = "AB_PROCESOS_GENERICOS"
'''''''''''''''CONTAR PALABRAS''''''''''''''''''''''''''
Function CONTARPALABRAS(Texto As String)
 
Dim Espacios As String
Espacios = Application.WorksheetFunction.Trim(Texto)
 
CONTARPALABRAS = UBound(Split(Espacios)) + 1
 
End Function

''''''''''''''''''BUSCAR HOJA''''''''''''''''''''''''''''''''''''''''''''
Function BUSCAR_HOJA(nombreHoja As String) As Boolean
 
    For i = 1 To Worksheets.Count
        If Worksheets(i).Name = nombreHoja Then
            BUSCAR_HOJA = True
            Exit Function
        End If
    Next
     
    BUSCAR_HOJA = False
 
End Function


''''''''''''''''''CONVERTIR A NUMERO''''''''''''''''''''''''''''''''''''''''''''
Sub TexToNumberRange()
Dim rango, celda As Range

fila = ActiveCell.Row
columna = ActiveCell.Column

'rango del objetivo
ult = Range(Cells(fila, columna), Cells(fila, columna).End(xlDown)).Count + 1


    Set rango = Range(Cells(fila, columna), Cells(fila, columna).End(xlDown))
    
            For Each celda In rango
            celda.value = CStr(celda)
            Next celda

End Sub



Function BuscarInfoMedioCompra(TipoMedio As String, Id1Proveedor2 As Integer)
cuSh = ActiveSheet.Name

Call VariablesGlobales

Dim MedioCompraCat As Range
Dim colCat, RowCat As Long

RowCat = 2
colCat = 38


'sh4 = "Info. Gral."
'rango de los cat|fffd|logos de plazas
Sheets(sh4).Select

Set MedioCompraCat = Range(Cells(RowCat, colCat), Cells(RowCat, colCat).End(xlDown))

For Each cell In MedioCompraCat
    
    If cell.value = TipoMedio And Id1Proveedor2 = 1 Then
        
        BuscarInfoMedioCompra = cell.Offset(0, 4).value
        Exit For
    ElseIf cell.value = TipoMedio And Id1Proveedor2 = 2 Then
        
        BuscarInfoMedioCompra = cell.Offset(0, 2).value
        Exit For
    Else

        BuscarInfoMedioCompra = "0"
        
    End If

Next cell


Sheets(cuSh).Select

End Function


Function BuscarInfoPlaza(NombrePlaza As String, Id1Etv2Planeador3 As Integer)
cuSh = ActiveSheet.Name

Call VariablesGlobales

Dim PlazasCat As Range
Dim colCat, RowCat As Long

RowCat = 2
colCat = 27


'sh4 = "Info. Gral."
'rango de los cat|fffd|logos de plazas
Sheets(sh4).Select

Set PlazasCat = Range(Cells(RowCat, colCat), Cells(RowCat, colCat).End(xlDown))

For Each cell In PlazasCat
    
    If cell.value = NombrePlaza And Id1Etv2Planeador3 = 1 Then
        
        BuscarInfoPlaza = cell.Offset(0, -3).value
        Exit For
    ElseIf cell.value = NombrePlaza And Id1Etv2Planeador3 = 2 Then
        
        BuscarInfoPlaza = cell.Offset(0, -1).value
        Exit For
    ElseIf cell.value = NombrePlaza And Id1Etv2Planeador3 = 3 Then
        
        BuscarInfoPlaza = cell.Offset(0, -2).value
        Exit For
    Else

        BuscarInfoPlaza = "0"
        
    End If

Next cell


Sheets(cuSh).Select

End Function



Function BuscarInfoPlazaEtv(NombrePlazaEtv As String, Id0Id1Caja2Etv3Planeador4 As Integer)
cuSh = ActiveSheet.Name

Call VariablesGlobales

Dim PlazasCat As Range
Dim colCat, RowCat As Long

RowCat = 2
colCat = 28


'sh4 = "Info. Gral."
'rango de los cat|fffd|logos de plazas
Sheets(sh4).Select

Set PlazasCat = Range(Cells(RowCat, colCat), Cells(RowCat, colCat).End(xlDown))

For Each cell In PlazasCat
    
    If cell.value = NombrePlazaEtv And Id0Id1Caja2Etv3Planeador4 = 0 Then
        
        BuscarInfoPlazaEtv = cell.Offset(0, -4).value
        Exit For
    
    ElseIf cell.value = NombrePlazaEtv And Id0Id1Caja2Etv3Planeador4 = 1 Then
        
        BuscarInfoPlazaEtv = BuscarInfoMedioCompra(cell.Offset(0, -2).value, 1) & cell.Offset(0, -4).value
        
        Exit For
        
    ElseIf cell.value = NombrePlazaEtv And Id0Id1Caja2Etv3Planeador4 = 2 Then
        
        BuscarInfoPlazaEtv = cell.Offset(0, -1).value
        Exit For
    ElseIf cell.value = NombrePlazaEtv And Id0Id1Caja2Etv3Planeador4 = 3 Then
        
        BuscarInfoPlazaEtv = cell.Offset(0, -2).value
        Exit For
    ElseIf cell.value = NombrePlazaEtv And Id0Id1Caja2Etv3Planeador4 = 4 Then
        
        BuscarInfoPlazaEtv = cell.Offset(0, -3).value
        Exit For
    Else

        BuscarInfoPlazaEtv = "0"
        
    End If

Next cell


Sheets(cuSh).Select

End Function


Function BuscarInfoSucursal(IdSucursal As Variant, Nombre1Plaza2Etv3Planeador4IdPlaza5 As Integer)
Call VariablesGlobales

Dim IdNum As Variant
Dim NomSuc As String
Dim SucursalesCat As Range
Dim colCat, RowCat As Long
Dim tipo As Integer
cuSh = ActiveSheet.Name

RowCat = 2
colCat = 21

If TypeName(IdSucursal) = "String" Then

NomSuc = IdSucursal
tipo = 1

Else

IdNum = IdSucursal
tipo = 2

End If

'sh4 = "Info. Gral."
'rango de los cat|fffd|logos de plazas
If tipo = 2 Then
    
            Sheets(sh4).Select
            
            Set SucursalesCat = Range(Cells(RowCat, colCat), Cells(RowCat, colCat).End(xlDown))
            
            For Each cell In SucursalesCat
                
                If cell.value = IdNum And Nombre1Plaza2Etv3Planeador4IdPlaza5 = 1 Then
                    
                    BuscarInfoSucursal = cell.Offset(0, 1).value
                    Exit For
                ElseIf cell.value = IdNum And Nombre1Plaza2Etv3Planeador4IdPlaza5 = 2 Then
                    
                    BuscarInfoSucursal = cell.Offset(0, -2).value
                    Exit For
                ElseIf cell.value = IdNum And Nombre1Plaza2Etv3Planeador4IdPlaza5 = 3 Then
                    
                    BuscarInfoSucursal = cell.Offset(0, -3).value
                    Exit For
                
                ElseIf cell.value = IdNum And Nombre1Plaza2Etv3Planeador4IdPlaza5 = 4 Then
                    
                    BuscarInfoSucursal = cell.Offset(0, -1).value
                    Exit For
                
                ElseIf cell.value = IdNum And Nombre1Plaza2Etv3Planeador4IdPlaza5 = 5 Then
                    
                    BuscarInfoSucursal = cell.Offset(0, -4).value
                    Exit For
                
                Else
            
                    BuscarInfoSucursal = "0"
                    
                End If
            
            Next cell



ElseIf tipo = 1 Then
    
            Sheets(sh4).Select
            
            Set SucursalesCat = Range(Cells(RowCat, colCat + 1), Cells(RowCat, colCat + 1).End(xlDown))
            
            For Each cell In SucursalesCat
                
                If cell.value = NomSuc And Nombre1Plaza2Etv3Planeador4IdPlaza5 = 1 Then
                    
                    BuscarInfoSucursal = cell.Offset(0, -1).value
                    Exit For
                ElseIf cell.value = NomSuc And Nombre1Plaza2Etv3Planeador4IdPlaza5 = 2 Then
                    
                    BuscarInfoSucursal = cell.Offset(0, -3).value
                    Exit For
                ElseIf cell.value = NomSuc And Nombre1Plaza2Etv3Planeador4IdPlaza5 = 3 Then
                    
                    BuscarInfoSucursal = cell.Offset(0, -4).value
                    Exit For
                
                ElseIf cell.value = NomSuc And Nombre1Plaza2Etv3Planeador4IdPlaza5 = 4 Then
                    
                    BuscarInfoSucursal = cell.Offset(0, -2).value
                    Exit For
                
                ElseIf cell.value = NomSuc And Nombre1Plaza2Etv3Planeador4IdPlaza5 = 5 Then
                    
                    BuscarInfoSucursal = cell.Offset(0, -5).value
                    Exit For
                
                Else
            
                    BuscarInfoSucursal = "0"
                    
                End If
            
            Next cell

End If

Sheets(cuSh).Select

End Function



Function BuscarIdSucursal(sucursal As String)
Call VariablesGlobales

Dim NomSuc As String
Dim ColSuc, RowCat, totReg, X As Long
Dim Suc() As Variant
cuSh = ActiveSheet.Name

On Error Resume Next

RowCat = 2
ColSuc = 22

'MsgBox "TotReg " & TotReg



'sh4 = "Info. Gral."
Sheets(sh4).Select

totReg = Range(Cells(RowCat, ColSuc), Cells(RowCat, ColSuc).End(xlDown)).Count

ReDim Suc(totReg, 2)

For i = 1 To totReg + 1
    Suc(i, 1) = Cells(RowCat, ColSuc - 1)
    Suc(i, 2) = Cells(RowCat, ColSuc)

RowCat = RowCat + 1

Next i

'MsgBox Suc(UBound(Suc), 2)

For i = 1 To UBound(Suc)
    
    If sucursal = Suc(i, 2) Then
    BuscarIdSucursal = Suc(i, 1)
    Exit For
    
    Else
    BuscarIdSucursal = ""
    
    End If
    
Next i

On Error GoTo 0


Sheets(cuSh).Select

End Function



Function BuscarPlaneador(Planeador As String, nombre1ext2correo3 As Integer)
Call VariablesGlobales

Dim NomSuc As String
Dim ColSuc, RowCat, totReg, X As Long
Dim Planer() As Variant
cuSh = ActiveSheet.Name

On Error Resume Next

RowCat = 2
ColSuc = 30

'MsgBox "TotReg " & TotReg



'sh4 = "Info. Gral."
Sheets(sh4).Select

totReg = Range(Cells(RowCat, ColSuc), Cells(RowCat, ColSuc).End(xlDown)).Count

ReDim Planer(totReg, 4)

For i = 1 To totReg + 1
    'user
    Planer(i, 1) = Cells(RowCat, ColSuc)
    'nombre
    Planer(i, 2) = Cells(RowCat, ColSuc + 1)
    'extensi|fffd|n
    Planer(i, 3) = Cells(RowCat, ColSuc + 2)
    'correo
    Planer(i, 4) = Cells(RowCat, ColSuc + 3)

RowCat = RowCat + 1

Next i

'MsgBox Suc(UBound(Suc), 2)

For i = 1 To UBound(Planer)
    
    If Planeador = Planer(i, 1) And nombre1ext2correo3 = 1 Then
    BuscarPlaneador = Planer(i, 2)
    Exit For
    
    ElseIf Planeador = Planer(i, 1) And nombre1ext2correo3 = 2 Then
    BuscarPlaneador = Planer(i, 3)
    Exit For
    
    ElseIf Planeador = Planer(i, 1) And nombre1ext2correo3 = 3 Then
    BuscarPlaneador = Planer(i, 4)
    Exit For
    
    Else
    BuscarPlaneador = ""
    
    End If
    
Next i

On Error GoTo 0


Sheets(cuSh).Select

End Function


Function BuscarClaveMedioPago(MedioPago As Variant)

Call VariablesGlobales

Dim NomSuc As String
Dim ColSuc, RowCat, totReg, X As Long
Dim ClavesMedios() As Variant
cuSh = ActiveSheet.Name

On Error Resume Next

RowCat = 2
ColSuc = 38
totReg = Range(Cells(RowCat, ColSuc), Cells(RowCat, ColSuc).End(xlDown)).Count



ReDim ClavesMedios(totReg, 2)

'sh4 = "Info. Gral."
Sheets(sh4).Select

For i = 1 To totReg + 1
    ClavesMedios(i, 1) = Cells(RowCat, ColSuc)
    ClavesMedios(i, 2) = Cells(RowCat, ColSuc + 4)

RowCat = RowCat + 1

Next i
'
'For i = 1 To UBound(ClavesMedios)
'
'MsgBox ClavesMedios(i, 1) & " " & ClavesMedios(i, 2)
'
'Next i



For i = 1 To UBound(ClavesMedios)
   
    If MedioPago = ClavesMedios(i, 1) Then
    BuscarClaveMedioPago = ClavesMedios(i, 2)

    Exit For
    
    ElseIf MedioPago = "DEM" Then
    BuscarClaveMedioPago = ClavesMedios(1, 2)

    Exit For
    
    Else
    BuscarClaveMedioPago = ""

    End If
    
Next i

On Error GoTo 0



Sheets(cuSh).Select

End Function
Sub TexToNumberSingle()
    Dim celda As Range
    Set celda = ActiveCell
    
    For Each celda In Selection
        celda.value = CStr(celda)
    Next
    
End Sub

''''''''''''''''''''''''NOMBRES DE MESES'''''''''''''''''''''''''''''''''''''''
Function NombresMesesLargo(Ms As Integer)
Call VariablesGlobales

If Ms = 1 Then
NombresMesesLargo = Meses1

ElseIf Ms = 2 Then
NombresMesesLargo = Meses2

ElseIf Ms = 3 Then
NombresMesesLargo = Meses3

ElseIf Ms = 4 Then
NombresMesesLargo = Meses4

ElseIf Ms = 5 Then
NombresMesesLargo = Meses5

ElseIf Ms = 6 Then
NombresMesesLargo = Meses6

ElseIf Ms = 7 Then
NombresMesesLargo = Meses7

ElseIf Ms = 8 Then
NombresMesesLargo = Meses8

ElseIf Ms = 9 Then
NombresMesesLargo = Meses9

ElseIf Ms = 10 Then
NombresMesesLargo = Meses10

ElseIf Ms = 11 Then
NombresMesesLargo = Meses11

ElseIf Ms = 12 Then
NombresMesesLargo = Meses12
End If

End Function

Function NombresMesesCorto(Ms As Integer)
Call VariablesGlobales

If Ms = 1 Then
NombresMesesCorto = Mes1

ElseIf Ms = 2 Then
NombresMesesCorto = Mes2

ElseIf Ms = 3 Then
NombresMesesCorto = Mes3

ElseIf Ms = 4 Then
NombresMesesCorto = Mes4

ElseIf Ms = 5 Then
NombresMesesCorto = Mes5

ElseIf Ms = 6 Then
NombresMesesCorto = Mes6

ElseIf Ms = 7 Then
NombresMesesCorto = Mes7

ElseIf Ms = 8 Then
NombresMesesCorto = Mes8

ElseIf Ms = 9 Then
NombresMesesCorto = Mes9

ElseIf Ms = 10 Then
NombresMesesCorto = Mes10

ElseIf Ms = 11 Then
NombresMesesCorto = Mes11

ElseIf Ms = 12 Then
NombresMesesCorto = Mes12
End If

End Function


Function NombresDiasMayus(Dy As Integer)
Call VariablesGlobales

If Dy = 1 Then
NombresDiasMayus = dia1

ElseIf Dy = 2 Then
NombresDiasMayus = Dia2

ElseIf Dy = 3 Then
NombresDiasMayus = Dia3

ElseIf Dy = 4 Then
NombresDiasMayus = Dia4

ElseIf Dy = 5 Then
NombresDiasMayus = Dia5

ElseIf Dy = 6 Then
NombresDiasMayus = Dia6

ElseIf Dy = 7 Then
NombresDiasMayus = Dia7

End If

End Function


'''''''''''''''''''''''''OBETNER FECHA DE MODIFICACI|fffd|N DE ARCHIVOS''''''''''''''''''''''''''''
Function ObtenerFechaModificacionArchivo(strFullFileName As String)
    Dim fs As Object, f As Object, s As Date
   
    Set fs = CreateObject("Scripting.FileSystemObject")
    Set f = fs.GetFile(strFullFileName)
   
    's = UCase(strFullFileName) & vbCrLf
    s = Format(f.DateLastModified, "dd/mm/yyyy hh:mm")
    
    ObtenerFechaModificacionArchivo = s
    
    Set fs = Nothing: Set f = Nothing
    
End Function



''''''''''''''''''''''''LIMPIAR''''''''''''''''''''''''''''''''''''''
Sub Limpiar()

fila = ActiveCell.Row
columna = ActiveCell.Column


Cells(fila, columna).Select
Call QuitarEspacios


Cells(fila, columna).Select
Call EliminarCaracteresDiferentes


'Cells(Fila, columna).Select
'Call ExcepcionesSucursales

End Sub



Public Sub QuitarEspacios()

Dim rango, celda As Range

fila = ActiveCell.Row
columna = ActiveCell.Column

'rango del objetivo

ult = Cells(Rows.Count, columna).End(xlUp).Row
'ult = Range(Cells(Fila, columna), Cells(Fila, columna).End(xlDown)).Count


    Set rango = Range(Cells(fila, columna), Cells(ult, columna))

'an|fffd|lisis de celdas

    For Each celda In rango
    
    If Not IsEmpty(celda) Then
    celda = Trim(celda)
    celda = UCase(celda)
    End If
    
    Next celda
    
End Sub

Sub SIN_ESPACIOS_MAYUSCULAS(txt As Variant)

ActiveCell.value = Trim(txt)
ActiveCell.value = UCase(txt)
    
End Sub
Public Sub EliminarCaracteresDiferentes()

columna = ActiveCell.Column

ActiveCell.Select

Range(Selection, Selection.End(xlDown)).Select

On Error Resume Next
Selection.Replace What:="  ", Replacement:=" ", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
        
Selection.Replace What:="Suc ", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
        
Selection.Replace What:="Suc. ", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
        
Selection.Replace What:="Sucursal ", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
        
Selection.Replace What:=" REMESADORA", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
        
        
Selection.Replace What:=Chr(192), Replacement:="A", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(193), Replacement:="A", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(194), Replacement:="A", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(195), Replacement:="A", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(196), Replacement:="A", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(197), Replacement:="A", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(200), Replacement:="E", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(201), Replacement:="E", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(202), Replacement:="E", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(203), Replacement:="E", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(204), Replacement:="I", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(205), Replacement:="I", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(206), Replacement:="I", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(207), Replacement:="I", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(210), Replacement:="O", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(211), Replacement:="O", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(212), Replacement:="O", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(213), Replacement:="O", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(214), Replacement:="O", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(217), Replacement:="U", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(218), Replacement:="U", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(219), Replacement:="U", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(220), Replacement:="U", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(224), Replacement:="a", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(225), Replacement:="a", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(226), Replacement:="a", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(227), Replacement:="a", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(228), Replacement:="a", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(229), Replacement:="a", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(232), Replacement:="e", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(233), Replacement:="e", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(234), Replacement:="e", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(235), Replacement:="e", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(236), Replacement:="i", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(237), Replacement:="i", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(238), Replacement:="i", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(239), Replacement:="i", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(242), Replacement:="o", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(243), Replacement:="o", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(244), Replacement:="o", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(245), Replacement:="o", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(246), Replacement:="o", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(249), Replacement:="u", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(250), Replacement:="u", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(251), Replacement:="u", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(252), Replacement:="u", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
        
        
        
        
Selection.Replace What:=Chr(2), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(3), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(4), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(5), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(6), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(7), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(8), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(9), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(10), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(11), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(12), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(13), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(14), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(15), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(16), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(17), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(18), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(19), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(20), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(21), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(22), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(23), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(24), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(25), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(26), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(27), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(28), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(29), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(30), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(31), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
'Selection.Replace What:=Chr(32), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
Selection.Replace What:=Chr(33), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(34), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(35), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(36), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(37), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(38), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(39), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(40), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(41), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
'* What:=Chr(42)
Selection.Replace What:="~*", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(43), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(44), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(45), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(46), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(47), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
'Selection.Replace What:=Chr(48), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(49), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(50), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(51), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(52), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(53), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(54), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(55), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(56), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(57), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
Selection.Replace What:=Chr(58), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(59), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(60), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(61), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(62), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
'? What:=Chr(63)
Selection.Replace What:="~?", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(64), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
'Selection.Replace What:=Chr(65), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(66), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(67), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(68), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(69), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(70), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(71), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(72), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(73), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(74), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(75), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(76), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(77), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(78), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(79), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(80), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(81), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(82), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(83), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(84), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(85), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(86), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(87), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(88), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(89), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(90), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
Selection.Replace What:=Chr(91), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(92), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(93), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(94), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(95), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(96), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
'Selection.Replace What:=Chr(97), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(98), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(99), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(100), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(101), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(102), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(103), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(104), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(105), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(106), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(107), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(108), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(109), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(110), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(111), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(112), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(113), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(114), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(115), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(116), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(117), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(118), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(119), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(120), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(121), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(122), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
Selection.Replace What:=Chr(123), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(124), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(125), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
'~ What:=Chr(126)
Selection.Replace What:="~~", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(127), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(128), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(129), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(130), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(131), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(132), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(133), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(134), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(135), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(136), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(137), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(138), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(139), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(140), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(141), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(142), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(143), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(144), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(145), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(146), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(147), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(148), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(149), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(150), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(151), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(152), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(153), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(154), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(155), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(156), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(157), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(158), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(159), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(160), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(161), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(162), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(163), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(164), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(165), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(166), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(167), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(168), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(169), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(170), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(171), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(172), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(173), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(174), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(175), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(176), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(177), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(178), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(179), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(180), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(181), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(182), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(183), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(184), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(185), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(186), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(187), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(188), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(189), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(190), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(191), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(198), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(199), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(208), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
'|fffd|
'Selection.Replace What:=Chr(209), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
Selection.Replace What:=Chr(215), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(216), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(221), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(222), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(223), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(230), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(231), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(240), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
'|fffd|
'Selection.Replace What:=Chr(241), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
Selection.Replace What:=Chr(247), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(248), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(253), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(254), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(255), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False



End Sub

''''''''''''''''''''''''''''''''''''EXTRAER NUMEROS'''''''''''''''''''''''''''''''''''''''''''
Public Function EXTRAENUM(cadena As String)

'Variable numeros contendr|fffd| solo n|fffd|meros de la cadena
Dim numeros As String, i As Long
numeros = ""
 
'Recorrer la cadena
For i = 1 To Len(cadena)
     
    'Evaluar SI el car|fffd|cter actual es un n|fffd|mero
    If IsNumeric(Mid(cadena, i, 1)) Then
         
        'Concatenar valor num|fffd|rico a la variable numeros
        numeros = numeros & Mid(cadena, i, 1)
     
    End If
Next
 
'Devolver los n|fffd|meros encontrados
EXTRAENUM = numeros
 
End Function


''''''''''''''''''''''''''''''''HOMOLOGAR NOMBRE DE ETV''''''''''''''''''''''''''''''''''''''''''''''
Sub HomologarNombreEtv()
Call VariablesGlobales

Dim rango, celda As Range
Range("L2").Select

fila = ActiveCell.Row
columna = ActiveCell.Column

'rango del objetivo

ult = Cells(Rows.Count, columna).End(xlUp).Row
    Set rango = Range(Cells(fila, columna), Cells(ult, columna))

    
'an|fffd|lisis de celdas

    For Each celda In rango
    
            If InStr(1, celda, "COMET", vbTextCompare) > 0 Then
                    celda = Etv1
        
            ElseIf InStr(1, celda, "PANA", vbTextCompare) > 0 Then
                    celda = Etv2
                    
            ElseIf InStr(1, celda, "SEGUR", vbTextCompare) > 0 Then
                    celda = Etv3
                
            ElseIf InStr(1, celda, "SEP", vbTextCompare) > 0 Then
                    celda = Etv4
            Else


            End If
    
    Next celda
    
End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub EliminarCaracteresDiferentesUno()

'columna = ActiveCell.Column
'
'ActiveCell.Select
'
'Range(SELECTION, SELECTION.End(xlDown)).Select

On Error Resume Next

Selection.Replace What:="Suc ", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
        
Selection.Replace What:="Suc. ", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
        
Selection.Replace What:="Sucursal ", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False

Selection.Replace What:="  ", Replacement:=" ", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
        
Selection.Replace What:=" REMESADORA", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
        
        
Selection.Replace What:=Chr(192), Replacement:="A", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(193), Replacement:="A", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(194), Replacement:="A", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(195), Replacement:="A", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(196), Replacement:="A", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(197), Replacement:="A", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(200), Replacement:="E", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(201), Replacement:="E", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(202), Replacement:="E", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(203), Replacement:="E", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(204), Replacement:="I", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(205), Replacement:="I", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(206), Replacement:="I", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(207), Replacement:="I", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(210), Replacement:="O", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(211), Replacement:="O", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(212), Replacement:="O", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(213), Replacement:="O", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(214), Replacement:="O", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(217), Replacement:="U", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(218), Replacement:="U", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(219), Replacement:="U", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(220), Replacement:="U", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(224), Replacement:="a", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(225), Replacement:="a", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(226), Replacement:="a", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(227), Replacement:="a", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(228), Replacement:="a", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(229), Replacement:="a", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(232), Replacement:="e", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(233), Replacement:="e", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(234), Replacement:="e", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(235), Replacement:="e", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(236), Replacement:="i", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(237), Replacement:="i", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(238), Replacement:="i", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(239), Replacement:="i", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(242), Replacement:="o", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(243), Replacement:="o", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(244), Replacement:="o", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(245), Replacement:="o", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(246), Replacement:="o", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(249), Replacement:="u", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(250), Replacement:="u", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(251), Replacement:="u", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(252), Replacement:="u", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
        
        
        
        
Selection.Replace What:=Chr(2), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(3), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(4), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(5), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(6), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(7), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(8), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(9), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(10), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(11), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(12), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(13), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(14), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(15), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(16), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(17), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(18), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(19), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(20), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(21), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(22), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(23), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(24), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(25), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(26), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(27), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(28), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(29), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(30), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(31), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
'Selection.Replace What:=Chr(32), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
Selection.Replace What:=Chr(33), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(34), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(35), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(36), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(37), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(38), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(39), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(40), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(41), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
'* What:=Chr(42)
Selection.Replace What:="~*", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(43), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(44), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(45), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(46), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(47), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
'Selection.Replace What:=Chr(48), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(49), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(50), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(51), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(52), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(53), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(54), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(55), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(56), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(57), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
Selection.Replace What:=Chr(58), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(59), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(60), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(61), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(62), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
'? What:=Chr(63)
Selection.Replace What:="~?", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(64), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
'Selection.Replace What:=Chr(65), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(66), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(67), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(68), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(69), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(70), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(71), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(72), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(73), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(74), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(75), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(76), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(77), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(78), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(79), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(80), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(81), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(82), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(83), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(84), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(85), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(86), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(87), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(88), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(89), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(90), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
Selection.Replace What:=Chr(91), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(92), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(93), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(94), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(95), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(96), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
'Selection.Replace What:=Chr(97), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(98), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(99), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(100), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(101), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(102), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(103), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(104), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(105), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(106), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(107), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(108), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(109), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(110), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(111), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(112), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(113), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(114), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(115), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(116), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(117), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(118), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(119), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(120), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(121), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
'Selection.Replace What:=Chr(122), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
Selection.Replace What:=Chr(123), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(124), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(125), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
'~ What:=Chr(126)
Selection.Replace What:="~~", Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(127), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(128), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(129), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(130), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(131), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(132), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(133), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(134), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(135), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(136), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(137), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(138), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(139), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(140), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(141), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(142), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(143), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(144), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(145), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(146), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(147), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(148), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(149), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(150), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(151), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(152), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(153), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(154), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(155), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(156), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(157), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(158), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(159), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(160), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(161), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(162), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(163), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(164), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(165), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(166), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(167), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(168), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(169), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(170), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(171), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(172), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(173), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(174), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(175), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(176), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(177), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(178), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(179), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(180), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(181), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(182), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(183), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(184), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(185), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(186), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(187), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(188), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(189), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(190), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(191), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(198), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(199), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(208), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
'|fffd|
'Selection.Replace What:=Chr(209), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
Selection.Replace What:=Chr(215), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(216), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(221), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(222), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(223), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(230), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(231), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(240), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
'|fffd|
'Selection.Replace What:=Chr(241), Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
Selection.Replace What:=Chr(247), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(248), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(253), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(254), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
Selection.Replace What:=Chr(255), Replacement:="", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False




End Sub


Sub ExcepcionesSucursales()

Call VariablesGlobales
Dim celda, rango As Range
Dim fila, columna As Long

fila = ActiveCell.Row
columna = ActiveCell.Column
ult = Cells(Rows.Count, columna).End(xlUp).Row


    Set rango = Range(Cells(fila, columna), Cells(ult, columna))


'NumeroFilas = Range(ActiveCell, ActiveCell.End(xlDown)).Cells.Count

'Set celda = Cells(Fila, columna)


regla1 = Worksheets(sh5).Range("C2").value
regla2 = Worksheets(sh5).Range("C3").value
regla3 = Worksheets(sh5).Range("C4").value
regla4 = Worksheets(sh5).Range("C5").value
regla5 = Worksheets(sh5).Range("C6").value
regla6 = Worksheets(sh5).Range("C7").value
regla7 = Worksheets(sh5).Range("C8").value
regla8 = Worksheets(sh5).Range("C9").value
regla9 = Worksheets(sh5).Range("C10").value
regla10 = Worksheets(sh5).Range("C11").value
regla11 = Worksheets(sh5).Range("C12").value
regla12 = Worksheets(sh5).Range("C13").value
regla13 = Worksheets(sh5).Range("C14").value
regla14 = Worksheets(sh5).Range("C15").value
regla15 = Worksheets(sh5).Range("C16").value
regla16 = Worksheets(sh5).Range("C17").value
regla17 = Worksheets(sh5).Range("C18").value
regla18 = Worksheets(sh5).Range("C19").value
regla19 = Worksheets(sh5).Range("C20").value
regla20 = Worksheets(sh5).Range("C21").value
regla21 = Worksheets(sh5).Range("C22").value
regla22 = Worksheets(sh5).Range("C23").value
regla23 = Worksheets(sh5).Range("C24").value
regla24 = Worksheets(sh5).Range("C25").value
regla25 = Worksheets(sh5).Range("C26").value
regla26 = Worksheets(sh5).Range("C27").value
regla27 = Worksheets(sh5).Range("C28").value
regla28 = Worksheets(sh5).Range("C29").value
regla29 = Worksheets(sh5).Range("C30").value
regla30 = Worksheets(sh5).Range("C31").value
regla31 = Worksheets(sh5).Range("C32").value
regla32 = Worksheets(sh5).Range("C33").value
regla33 = Worksheets(sh5).Range("C34").value
regla34 = Worksheets(sh5).Range("C35").value
regla35 = Worksheets(sh5).Range("C36").value
regla36 = Worksheets(sh5).Range("C37").value
regla37 = Worksheets(sh5).Range("C38").value
regla38 = Worksheets(sh5).Range("C39").value
regla39 = Worksheets(sh5).Range("C40").value
regla40 = Worksheets(sh5).Range("C41").value
regla41 = Worksheets(sh5).Range("C42").value
regla42 = Worksheets(sh5).Range("C43").value
regla43 = Worksheets(sh5).Range("C44").value
regla44 = Worksheets(sh5).Range("C45").value
regla45 = Worksheets(sh5).Range("C46").value
regla46 = Worksheets(sh5).Range("C47").value
regla47 = Worksheets(sh5).Range("C48").value
regla48 = Worksheets(sh5).Range("C49").value
regla49 = Worksheets(sh5).Range("C50").value
regla50 = Worksheets(sh5).Range("C51").value
regla51 = Worksheets(sh5).Range("C52").value
regla52 = Worksheets(sh5).Range("C53").value
regla53 = Worksheets(sh5).Range("C54").value
regla54 = Worksheets(sh5).Range("C55").value
regla55 = Worksheets(sh5).Range("C56").value
regla56 = Worksheets(sh5).Range("C57").value
regla57 = Worksheets(sh5).Range("C58").value
regla58 = Worksheets(sh5).Range("C59").value
regla59 = Worksheets(sh5).Range("C60").value
regla60 = Worksheets(sh5).Range("C61").value
regla61 = Worksheets(sh5).Range("C62").value
regla62 = Worksheets(sh5).Range("C63").value
regla63 = Worksheets(sh5).Range("C64").value
regla64 = Worksheets(sh5).Range("C65").value
regla65 = Worksheets(sh5).Range("C66").value
regla66 = Worksheets(sh5).Range("C67").value
regla67 = Worksheets(sh5).Range("C68").value
regla68 = Worksheets(sh5).Range("C69").value
regla69 = Worksheets(sh5).Range("C70").value
regla70 = Worksheets(sh5).Range("C71").value
regla71 = Worksheets(sh5).Range("C72").value
regla72 = Worksheets(sh5).Range("C73").value
regla73 = Worksheets(sh5).Range("C74").value
regla74 = Worksheets(sh5).Range("C75").value
regla75 = Worksheets(sh5).Range("C76").value
regla76 = Worksheets(sh5).Range("C77").value
regla77 = Worksheets(sh5).Range("C78").value
regla78 = Worksheets(sh5).Range("C79").value
regla79 = Worksheets(sh5).Range("C80").value
regla80 = Worksheets(sh5).Range("C81").value
regla81 = Worksheets(sh5).Range("C82").value
regla82 = Worksheets(sh5).Range("C83").value
regla83 = Worksheets(sh5).Range("C84").value
regla84 = Worksheets(sh5).Range("C85").value
regla85 = Worksheets(sh5).Range("C86").value
regla86 = Worksheets(sh5).Range("C87").value
regla87 = Worksheets(sh5).Range("C88").value
regla88 = Worksheets(sh5).Range("C89").value
regla89 = Worksheets(sh5).Range("C90").value
regla90 = Worksheets(sh5).Range("C91").value
regla91 = Worksheets(sh5).Range("C92").value
regla92 = Worksheets(sh5).Range("C93").value
regla93 = Worksheets(sh5).Range("C94").value
regla94 = Worksheets(sh5).Range("C95").value
regla95 = Worksheets(sh5).Range("C96").value
regla96 = Worksheets(sh5).Range("C97").value
regla97 = Worksheets(sh5).Range("C98").value
regla98 = Worksheets(sh5).Range("C99").value
regla99 = Worksheets(sh5).Range("C100").value
regla100 = Worksheets(sh5).Range("C101").value
regla101 = Worksheets(sh5).Range("C102").value
regla102 = Worksheets(sh5).Range("C103").value
regla103 = Worksheets(sh5).Range("C104").value
regla104 = Worksheets(sh5).Range("C105").value
regla105 = Worksheets(sh5).Range("C106").value
regla106 = Worksheets(sh5).Range("C107").value
regla107 = Worksheets(sh5).Range("C108").value
regla108 = Worksheets(sh5).Range("C109").value
regla109 = Worksheets(sh5).Range("C110").value
regla110 = Worksheets(sh5).Range("C111").value
regla111 = Worksheets(sh5).Range("C112").value
regla112 = Worksheets(sh5).Range("C113").value
regla113 = Worksheets(sh5).Range("C114").value
regla114 = Worksheets(sh5).Range("C115").value
regla115 = Worksheets(sh5).Range("C116").value
regla116 = Worksheets(sh5).Range("C117").value
regla117 = Worksheets(sh5).Range("C118").value
regla118 = Worksheets(sh5).Range("C119").value
regla119 = Worksheets(sh5).Range("C120").value
regla120 = Worksheets(sh5).Range("C121").value
regla121 = Worksheets(sh5).Range("C122").value
regla122 = Worksheets(sh5).Range("C123").value
regla123 = Worksheets(sh5).Range("C124").value
regla124 = Worksheets(sh5).Range("C125").value
regla125 = Worksheets(sh5).Range("C126").value
regla126 = Worksheets(sh5).Range("C127").value
regla127 = Worksheets(sh5).Range("C128").value
regla128 = Worksheets(sh5).Range("C129").value
regla129 = Worksheets(sh5).Range("C130").value
regla130 = Worksheets(sh5).Range("C131").value
regla131 = Worksheets(sh5).Range("C132").value
regla132 = Worksheets(sh5).Range("C133").value
regla133 = Worksheets(sh5).Range("C134").value
regla134 = Worksheets(sh5).Range("C135").value
regla135 = Worksheets(sh5).Range("C136").value
regla136 = Worksheets(sh5).Range("C137").value
regla137 = Worksheets(sh5).Range("C138").value
regla138 = Worksheets(sh5).Range("C139").value
regla139 = Worksheets(sh5).Range("C140").value
regla140 = Worksheets(sh5).Range("C141").value
regla141 = Worksheets(sh5).Range("C142").value
regla142 = Worksheets(sh5).Range("C143").value
regla143 = Worksheets(sh5).Range("C144").value
regla144 = Worksheets(sh5).Range("C145").value
regla145 = Worksheets(sh5).Range("C146").value
regla146 = Worksheets(sh5).Range("C147").value
regla147 = Worksheets(sh5).Range("C148").value
regla148 = Worksheets(sh5).Range("C149").value
regla149 = Worksheets(sh5).Range("C150").value
regla150 = Worksheets(sh5).Range("C151").value
regla151 = Worksheets(sh5).Range("C152").value
regla152 = Worksheets(sh5).Range("C153").value
regla153 = Worksheets(sh5).Range("C154").value
regla154 = Worksheets(sh5).Range("C155").value
regla155 = Worksheets(sh5).Range("C156").value
regla156 = Worksheets(sh5).Range("C157").value
regla157 = Worksheets(sh5).Range("C158").value
regla158 = Worksheets(sh5).Range("C159").value
regla159 = Worksheets(sh5).Range("C160").value
regla160 = Worksheets(sh5).Range("C161").value
regla161 = Worksheets(sh5).Range("C162").value
regla162 = Worksheets(sh5).Range("C163").value
regla163 = Worksheets(sh5).Range("C164").value
regla164 = Worksheets(sh5).Range("C165").value
regla165 = Worksheets(sh5).Range("C166").value
regla166 = Worksheets(sh5).Range("C167").value
regla167 = Worksheets(sh5).Range("C168").value
regla168 = Worksheets(sh5).Range("C169").value
regla169 = Worksheets(sh5).Range("C170").value
regla170 = Worksheets(sh5).Range("C171").value
regla171 = Worksheets(sh5).Range("C172").value
regla172 = Worksheets(sh5).Range("C173").value
regla173 = Worksheets(sh5).Range("C174").value
regla174 = Worksheets(sh5).Range("C175").value
regla175 = Worksheets(sh5).Range("C176").value
regla176 = Worksheets(sh5).Range("C177").value
regla177 = Worksheets(sh5).Range("C178").value
regla178 = Worksheets(sh5).Range("C179").value
regla179 = Worksheets(sh5).Range("C180").value
regla180 = Worksheets(sh5).Range("C181").value
regla181 = Worksheets(sh5).Range("C182").value
regla182 = Worksheets(sh5).Range("C183").value
regla183 = Worksheets(sh5).Range("C184").value
regla184 = Worksheets(sh5).Range("C185").value
regla185 = Worksheets(sh5).Range("C186").value
regla186 = Worksheets(sh5).Range("C187").value
regla187 = Worksheets(sh5).Range("C188").value
regla188 = Worksheets(sh5).Range("C189").value
regla189 = Worksheets(sh5).Range("C190").value
regla190 = Worksheets(sh5).Range("C191").value
regla191 = Worksheets(sh5).Range("C192").value
regla192 = Worksheets(sh5).Range("C193").value
regla193 = Worksheets(sh5).Range("C194").value
regla194 = Worksheets(sh5).Range("C195").value
regla195 = Worksheets(sh5).Range("C196").value
regla196 = Worksheets(sh5).Range("C197").value
regla197 = Worksheets(sh5).Range("C198").value
regla198 = Worksheets(sh5).Range("C199").value
regla199 = Worksheets(sh5).Range("C200").value
regla200 = Worksheets(sh5).Range("C201").value


valor1 = Worksheets(sh5).Range("B2").value
valor2 = Worksheets(sh5).Range("B3").value
valor3 = Worksheets(sh5).Range("B4").value
valor4 = Worksheets(sh5).Range("B5").value
valor5 = Worksheets(sh5).Range("B6").value
valor6 = Worksheets(sh5).Range("B7").value
valor7 = Worksheets(sh5).Range("B8").value
valor8 = Worksheets(sh5).Range("B9").value
valor9 = Worksheets(sh5).Range("B10").value
valor10 = Worksheets(sh5).Range("B11").value
valor11 = Worksheets(sh5).Range("B12").value
valor12 = Worksheets(sh5).Range("B13").value
valor13 = Worksheets(sh5).Range("B14").value
valor14 = Worksheets(sh5).Range("B15").value
valor15 = Worksheets(sh5).Range("B16").value
valor16 = Worksheets(sh5).Range("B17").value
valor17 = Worksheets(sh5).Range("B18").value
valor18 = Worksheets(sh5).Range("B19").value
valor19 = Worksheets(sh5).Range("B20").value
valor20 = Worksheets(sh5).Range("B21").value
valor21 = Worksheets(sh5).Range("B22").value
valor22 = Worksheets(sh5).Range("B23").value
valor23 = Worksheets(sh5).Range("B24").value
valor24 = Worksheets(sh5).Range("B25").value
valor25 = Worksheets(sh5).Range("B26").value
valor26 = Worksheets(sh5).Range("B27").value
valor27 = Worksheets(sh5).Range("B28").value
valor28 = Worksheets(sh5).Range("B29").value
valor29 = Worksheets(sh5).Range("B30").value
valor30 = Worksheets(sh5).Range("B31").value
valor31 = Worksheets(sh5).Range("B32").value
valor32 = Worksheets(sh5).Range("B33").value
valor33 = Worksheets(sh5).Range("B34").value
valor34 = Worksheets(sh5).Range("B35").value
valor35 = Worksheets(sh5).Range("B36").value
valor36 = Worksheets(sh5).Range("B37").value
valor37 = Worksheets(sh5).Range("B38").value
valor38 = Worksheets(sh5).Range("B39").value
valor39 = Worksheets(sh5).Range("B40").value
valor40 = Worksheets(sh5).Range("B41").value
valor41 = Worksheets(sh5).Range("B42").value
valor42 = Worksheets(sh5).Range("B43").value
valor43 = Worksheets(sh5).Range("B44").value
valor44 = Worksheets(sh5).Range("B45").value
valor45 = Worksheets(sh5).Range("B46").value
valor46 = Worksheets(sh5).Range("B47").value
valor47 = Worksheets(sh5).Range("B48").value
valor48 = Worksheets(sh5).Range("B49").value
valor49 = Worksheets(sh5).Range("B50").value
valor50 = Worksheets(sh5).Range("B51").value
valor51 = Worksheets(sh5).Range("B52").value
valor52 = Worksheets(sh5).Range("B53").value
valor53 = Worksheets(sh5).Range("B54").value
valor54 = Worksheets(sh5).Range("B55").value
valor55 = Worksheets(sh5).Range("B56").value
valor56 = Worksheets(sh5).Range("B57").value
valor57 = Worksheets(sh5).Range("B58").value
valor58 = Worksheets(sh5).Range("B59").value
valor59 = Worksheets(sh5).Range("B60").value
valor60 = Worksheets(sh5).Range("B61").value
valor61 = Worksheets(sh5).Range("B62").value
valor62 = Worksheets(sh5).Range("B63").value
valor63 = Worksheets(sh5).Range("B64").value
valor64 = Worksheets(sh5).Range("B65").value
valor65 = Worksheets(sh5).Range("B66").value
valor66 = Worksheets(sh5).Range("B67").value
valor67 = Worksheets(sh5).Range("B68").value
valor68 = Worksheets(sh5).Range("B69").value
valor69 = Worksheets(sh5).Range("B70").value
valor70 = Worksheets(sh5).Range("B71").value
valor71 = Worksheets(sh5).Range("B72").value
valor72 = Worksheets(sh5).Range("B73").value
valor73 = Worksheets(sh5).Range("B74").value
valor74 = Worksheets(sh5).Range("B75").value
valor75 = Worksheets(sh5).Range("B76").value
valor76 = Worksheets(sh5).Range("B77").value
valor77 = Worksheets(sh5).Range("B78").value
valor78 = Worksheets(sh5).Range("B79").value
valor79 = Worksheets(sh5).Range("B80").value
valor80 = Worksheets(sh5).Range("B81").value
valor81 = Worksheets(sh5).Range("B82").value
valor82 = Worksheets(sh5).Range("B83").value
valor83 = Worksheets(sh5).Range("B84").value
valor84 = Worksheets(sh5).Range("B85").value
valor85 = Worksheets(sh5).Range("B86").value
valor86 = Worksheets(sh5).Range("B87").value
valor87 = Worksheets(sh5).Range("B88").value
valor88 = Worksheets(sh5).Range("B89").value
valor89 = Worksheets(sh5).Range("B90").value
valor90 = Worksheets(sh5).Range("B91").value
valor91 = Worksheets(sh5).Range("B92").value
valor92 = Worksheets(sh5).Range("B93").value
valor93 = Worksheets(sh5).Range("B94").value
valor94 = Worksheets(sh5).Range("B95").value
valor95 = Worksheets(sh5).Range("B96").value
valor96 = Worksheets(sh5).Range("B97").value
valor97 = Worksheets(sh5).Range("B98").value
valor98 = Worksheets(sh5).Range("B99").value
valor99 = Worksheets(sh5).Range("B100").value
valor100 = Worksheets(sh5).Range("B101").value
valor101 = Worksheets(sh5).Range("B102").value
valor102 = Worksheets(sh5).Range("B103").value
valor103 = Worksheets(sh5).Range("B104").value
valor104 = Worksheets(sh5).Range("B105").value
valor105 = Worksheets(sh5).Range("B106").value
valor106 = Worksheets(sh5).Range("B107").value
valor107 = Worksheets(sh5).Range("B108").value
valor108 = Worksheets(sh5).Range("B109").value
valor109 = Worksheets(sh5).Range("B110").value
valor110 = Worksheets(sh5).Range("B111").value
valor111 = Worksheets(sh5).Range("B112").value
valor112 = Worksheets(sh5).Range("B113").value
valor113 = Worksheets(sh5).Range("B114").value
valor114 = Worksheets(sh5).Range("B115").value
valor115 = Worksheets(sh5).Range("B116").value
valor116 = Worksheets(sh5).Range("B117").value
valor117 = Worksheets(sh5).Range("B118").value
valor118 = Worksheets(sh5).Range("B119").value
valor119 = Worksheets(sh5).Range("B120").value
valor120 = Worksheets(sh5).Range("B121").value
valor121 = Worksheets(sh5).Range("B122").value
valor122 = Worksheets(sh5).Range("B123").value
valor123 = Worksheets(sh5).Range("B124").value
valor124 = Worksheets(sh5).Range("B125").value
valor125 = Worksheets(sh5).Range("B126").value
valor126 = Worksheets(sh5).Range("B127").value
valor127 = Worksheets(sh5).Range("B128").value
valor128 = Worksheets(sh5).Range("B129").value
valor129 = Worksheets(sh5).Range("B130").value
valor130 = Worksheets(sh5).Range("B131").value
valor131 = Worksheets(sh5).Range("B132").value
valor132 = Worksheets(sh5).Range("B133").value
valor133 = Worksheets(sh5).Range("B134").value
valor134 = Worksheets(sh5).Range("B135").value
valor135 = Worksheets(sh5).Range("B136").value
valor136 = Worksheets(sh5).Range("B137").value
valor137 = Worksheets(sh5).Range("B138").value
valor138 = Worksheets(sh5).Range("B139").value
valor139 = Worksheets(sh5).Range("B140").value
valor140 = Worksheets(sh5).Range("B141").value
valor141 = Worksheets(sh5).Range("B142").value
valor142 = Worksheets(sh5).Range("B143").value
valor143 = Worksheets(sh5).Range("B144").value
valor144 = Worksheets(sh5).Range("B145").value
valor145 = Worksheets(sh5).Range("B146").value
valor146 = Worksheets(sh5).Range("B147").value
valor147 = Worksheets(sh5).Range("B148").value
valor148 = Worksheets(sh5).Range("B149").value
valor149 = Worksheets(sh5).Range("B150").value
valor150 = Worksheets(sh5).Range("B151").value
valor151 = Worksheets(sh5).Range("B152").value
valor152 = Worksheets(sh5).Range("B153").value
valor153 = Worksheets(sh5).Range("B154").value
valor154 = Worksheets(sh5).Range("B155").value
valor155 = Worksheets(sh5).Range("B156").value
valor156 = Worksheets(sh5).Range("B157").value
valor157 = Worksheets(sh5).Range("B158").value
valor158 = Worksheets(sh5).Range("B159").value
valor159 = Worksheets(sh5).Range("B160").value
valor160 = Worksheets(sh5).Range("B161").value
valor161 = Worksheets(sh5).Range("B162").value
valor162 = Worksheets(sh5).Range("B163").value
valor163 = Worksheets(sh5).Range("B164").value
valor164 = Worksheets(sh5).Range("B165").value
valor165 = Worksheets(sh5).Range("B166").value
valor166 = Worksheets(sh5).Range("B167").value
valor167 = Worksheets(sh5).Range("B168").value
valor168 = Worksheets(sh5).Range("B169").value
valor169 = Worksheets(sh5).Range("B170").value
valor170 = Worksheets(sh5).Range("B171").value
valor171 = Worksheets(sh5).Range("B172").value
valor172 = Worksheets(sh5).Range("B173").value
valor173 = Worksheets(sh5).Range("B174").value
valor174 = Worksheets(sh5).Range("B175").value
valor175 = Worksheets(sh5).Range("B176").value
valor176 = Worksheets(sh5).Range("B177").value
valor177 = Worksheets(sh5).Range("B178").value
valor178 = Worksheets(sh5).Range("B179").value
valor179 = Worksheets(sh5).Range("B180").value
valor180 = Worksheets(sh5).Range("B181").value
valor181 = Worksheets(sh5).Range("B182").value
valor182 = Worksheets(sh5).Range("B183").value
valor183 = Worksheets(sh5).Range("B184").value
valor184 = Worksheets(sh5).Range("B185").value
valor185 = Worksheets(sh5).Range("B186").value
valor186 = Worksheets(sh5).Range("B187").value
valor187 = Worksheets(sh5).Range("B188").value
valor188 = Worksheets(sh5).Range("B189").value
valor189 = Worksheets(sh5).Range("B190").value
valor190 = Worksheets(sh5).Range("B191").value
valor191 = Worksheets(sh5).Range("B192").value
valor192 = Worksheets(sh5).Range("B193").value
valor193 = Worksheets(sh5).Range("B194").value
valor194 = Worksheets(sh5).Range("B195").value
valor195 = Worksheets(sh5).Range("B196").value
valor196 = Worksheets(sh5).Range("B197").value
valor197 = Worksheets(sh5).Range("B198").value
valor198 = Worksheets(sh5).Range("B199").value
valor199 = Worksheets(sh5).Range("B200").value
valor200 = Worksheets(sh5).Range("B201").value


'an|fffd|lisis de celdas

For Each celda In rango

''If Not IsEmpty(celda) Then

                If celda.value = regla1 Then
                    celda.value = valor1
                ElseIf celda.value = regla2 Then
                    celda.value = valor2
                ElseIf celda.value = regla3 Then
                    celda.value = valor3
                ElseIf celda.value = regla4 Then
                    celda.value = valor4
                ElseIf celda.value = regla5 Then
                    celda.value = valor5
                ElseIf celda.value = regla6 Then
                    celda.value = valor6
                ElseIf celda.value = regla7 Then
                    celda.value = valor7
                ElseIf celda.value = regla8 Then
                    celda.value = valor8
                ElseIf celda.value = regla9 Then
                    celda.value = valor9
                ElseIf celda.value = regla10 Then
                    celda.value = valor10
                ElseIf celda.value = regla11 Then
                    celda.value = valor11
                ElseIf celda.value = regla12 Then
                    celda.value = valor12
                ElseIf celda.value = regla13 Then
                    celda.value = valor13
                ElseIf celda.value = regla14 Then
                    celda.value = valor14
                ElseIf celda.value = regla15 Then
                    celda.value = valor15
                ElseIf celda.value = regla16 Then
                    celda.value = valor16
                ElseIf celda.value = regla17 Then
                    celda.value = valor17
                ElseIf celda.value = regla18 Then
                    celda.value = valor18
                ElseIf celda.value = regla19 Then
                    celda.value = valor19
                ElseIf celda.value = regla20 Then
                    celda.value = valor20
                ElseIf celda.value = regla21 Then
                    celda.value = valor21
                ElseIf celda.value = regla22 Then
                    celda.value = valor22
                ElseIf celda.value = regla23 Then
                    celda.value = valor23
                ElseIf celda.value = regla24 Then
                    celda.value = valor24
                ElseIf celda.value = regla25 Then
                    celda.value = valor25
                ElseIf celda.value = regla26 Then
                    celda.value = valor26
                ElseIf celda.value = regla27 Then
                    celda.value = valor27
                ElseIf celda.value = regla28 Then
                    celda.value = valor28
                ElseIf celda.value = regla29 Then
                    celda.value = valor29
                ElseIf celda.value = regla30 Then
                    celda.value = valor30
                ElseIf celda.value = regla31 Then
                    celda.value = valor31
                ElseIf celda.value = regla32 Then
                    celda.value = valor32
                ElseIf celda.value = regla33 Then
                    celda.value = valor33
                ElseIf celda.value = regla34 Then
                    celda.value = valor34
                ElseIf celda.value = regla35 Then
                    celda.value = valor35
                ElseIf celda.value = regla36 Then
                    celda.value = valor36
                ElseIf celda.value = regla37 Then
                    celda.value = valor37
                ElseIf celda.value = regla38 Then
                    celda.value = valor38
                ElseIf celda.value = regla39 Then
                    celda.value = valor39
                ElseIf celda.value = regla40 Then
                    celda.value = valor40
                ElseIf celda.value = regla41 Then
                    celda.value = valor41
                ElseIf celda.value = regla42 Then
                    celda.value = valor42
                ElseIf celda.value = regla43 Then
                    celda.value = valor43
                ElseIf celda.value = regla44 Then
                    celda.value = valor44
                ElseIf celda.value = regla45 Then
                    celda.value = valor45
                ElseIf celda.value = regla46 Then
                    celda.value = valor46
                ElseIf celda.value = regla47 Then
                    celda.value = valor47
                ElseIf celda.value = regla48 Then
                    celda.value = valor48
                ElseIf celda.value = regla49 Then
                    celda.value = valor49
                ElseIf celda.value = regla50 Then
                    celda.value = valor50
                ElseIf celda.value = regla51 Then
                    celda.value = valor51
                ElseIf celda.value = regla52 Then
                    celda.value = valor52
                ElseIf celda.value = regla53 Then
                    celda.value = valor53
                ElseIf celda.value = regla54 Then
                    celda.value = valor54
                ElseIf celda.value = regla55 Then
                    celda.value = valor55
                ElseIf celda.value = regla56 Then
                    celda.value = valor56
                ElseIf celda.value = regla57 Then
                    celda.value = valor57
                ElseIf celda.value = regla58 Then
                    celda.value = valor58
                ElseIf celda.value = regla59 Then
                    celda.value = valor59
                ElseIf celda.value = regla60 Then
                    celda.value = valor60
                ElseIf celda.value = regla61 Then
                    celda.value = valor61
                ElseIf celda.value = regla62 Then
                    celda.value = valor62
                ElseIf celda.value = regla63 Then
                    celda.value = valor63
                ElseIf celda.value = regla64 Then
                    celda.value = valor64
                ElseIf celda.value = regla65 Then
                    celda.value = valor65
                ElseIf celda.value = regla66 Then
                    celda.value = valor66
                ElseIf celda.value = regla67 Then
                    celda.value = valor67
                ElseIf celda.value = regla68 Then
                    celda.value = valor68
                ElseIf celda.value = regla69 Then
                    celda.value = valor69
                ElseIf celda.value = regla70 Then
                    celda.value = valor70
                ElseIf celda.value = regla71 Then
                    celda.value = valor71
                ElseIf celda.value = regla72 Then
                    celda.value = valor72
                ElseIf celda.value = regla73 Then
                    celda.value = valor73
                ElseIf celda.value = regla74 Then
                    celda.value = valor74
                ElseIf celda.value = regla75 Then
                    celda.value = valor75
                ElseIf celda.value = regla76 Then
                    celda.value = valor76
                ElseIf celda.value = regla77 Then
                    celda.value = valor77
                ElseIf celda.value = regla78 Then
                    celda.value = valor78
                ElseIf celda.value = regla79 Then
                    celda.value = valor79
                ElseIf celda.value = regla80 Then
                    celda.value = valor80
                ElseIf celda.value = regla81 Then
                    celda.value = valor81
                ElseIf celda.value = regla82 Then
                    celda.value = valor82
                ElseIf celda.value = regla83 Then
                    celda.value = valor83
                ElseIf celda.value = regla84 Then
                    celda.value = valor84
                ElseIf celda.value = regla85 Then
                    celda.value = valor85
                ElseIf celda.value = regla86 Then
                    celda.value = valor86
                ElseIf celda.value = regla87 Then
                    celda.value = valor87
                ElseIf celda.value = regla88 Then
                    celda.value = valor88
                ElseIf celda.value = regla89 Then
                    celda.value = valor89
                ElseIf celda.value = regla90 Then
                    celda.value = valor90
                ElseIf celda.value = regla91 Then
                    celda.value = valor91
                ElseIf celda.value = regla92 Then
                    celda.value = valor92
                ElseIf celda.value = regla93 Then
                    celda.value = valor93
                ElseIf celda.value = regla94 Then
                    celda.value = valor94
                ElseIf celda.value = regla95 Then
                    celda.value = valor95
                ElseIf celda.value = regla96 Then
                    celda.value = valor96
                ElseIf celda.value = regla97 Then
                    celda.value = valor97
                ElseIf celda.value = regla98 Then
                    celda.value = valor98
                ElseIf celda.value = regla99 Then
                    celda.value = valor99
                ElseIf celda.value = regla100 Then
                    celda.value = valor100
                ElseIf celda.value = regla101 Then
                    celda.value = valor101
                ElseIf celda.value = regla102 Then
                    celda.value = valor102
                ElseIf celda.value = regla103 Then
                    celda.value = valor103
                ElseIf celda.value = regla104 Then
                    celda.value = valor104
                ElseIf celda.value = regla105 Then
                    celda.value = valor105
                ElseIf celda.value = regla106 Then
                    celda.value = valor106
                ElseIf celda.value = regla107 Then
                    celda.value = valor107
                ElseIf celda.value = regla108 Then
                    celda.value = valor108
                ElseIf celda.value = regla109 Then
                    celda.value = valor109
                ElseIf celda.value = regla110 Then
                    celda.value = valor110
                ElseIf celda.value = regla111 Then
                    celda.value = valor111
                ElseIf celda.value = regla112 Then
                    celda.value = valor112
                ElseIf celda.value = regla113 Then
                    celda.value = valor113
                ElseIf celda.value = regla114 Then
                    celda.value = valor114
                ElseIf celda.value = regla115 Then
                    celda.value = valor115
                ElseIf celda.value = regla116 Then
                    celda.value = valor116
                ElseIf celda.value = regla117 Then
                    celda.value = valor117
                ElseIf celda.value = regla118 Then
                    celda.value = valor118
                ElseIf celda.value = regla119 Then
                    celda.value = valor119
                ElseIf celda.value = regla120 Then
                    celda.value = valor120
                ElseIf celda.value = regla121 Then
                    celda.value = valor121
                ElseIf celda.value = regla122 Then
                    celda.value = valor122
                ElseIf celda.value = regla123 Then
                    celda.value = valor123
                ElseIf celda.value = regla124 Then
                    celda.value = valor124
                ElseIf celda.value = regla125 Then
                    celda.value = valor125
                ElseIf celda.value = regla126 Then
                    celda.value = valor126
                ElseIf celda.value = regla127 Then
                    celda.value = valor127
                ElseIf celda.value = regla128 Then
                    celda.value = valor128
                ElseIf celda.value = regla129 Then
                    celda.value = valor129
                ElseIf celda.value = regla130 Then
                    celda.value = valor130
                ElseIf celda.value = regla131 Then
                    celda.value = valor131
                ElseIf celda.value = regla132 Then
                    celda.value = valor132
                ElseIf celda.value = regla133 Then
                    celda.value = valor133
                ElseIf celda.value = regla134 Then
                    celda.value = valor134
                ElseIf celda.value = regla135 Then
                    celda.value = valor135
                ElseIf celda.value = regla136 Then
                    celda.value = valor136
                ElseIf celda.value = regla137 Then
                    celda.value = valor137
                ElseIf celda.value = regla138 Then
                    celda.value = valor138
                ElseIf celda.value = regla139 Then
                    celda.value = valor139
                ElseIf celda.value = regla140 Then
                    celda.value = valor140
                ElseIf celda.value = regla141 Then
                    celda.value = valor141
                ElseIf celda.value = regla142 Then
                    celda.value = valor142
                ElseIf celda.value = regla143 Then
                    celda.value = valor143
                ElseIf celda.value = regla144 Then
                    celda.value = valor144
                ElseIf celda.value = regla145 Then
                    celda.value = valor145
                ElseIf celda.value = regla146 Then
                    celda.value = valor146
                ElseIf celda.value = regla147 Then
                    celda.value = valor147
                ElseIf celda.value = regla148 Then
                    celda.value = valor148
                ElseIf celda.value = regla149 Then
                    celda.value = valor149
                ElseIf celda.value = regla150 Then
                    celda.value = valor150
                ElseIf celda.value = regla151 Then
                    celda.value = valor151
                ElseIf celda.value = regla152 Then
                    celda.value = valor152
                ElseIf celda.value = regla153 Then
                    celda.value = valor153
                ElseIf celda.value = regla154 Then
                    celda.value = valor154
                ElseIf celda.value = regla155 Then
                    celda.value = valor155
                ElseIf celda.value = regla156 Then
                    celda.value = valor156
                ElseIf celda.value = regla157 Then
                    celda.value = valor157
                ElseIf celda.value = regla158 Then
                    celda.value = valor158
                ElseIf celda.value = regla159 Then
                    celda.value = valor159
                ElseIf celda.value = regla160 Then
                    celda.value = valor160
                ElseIf celda.value = regla161 Then
                    celda.value = valor161
                ElseIf celda.value = regla162 Then
                    celda.value = valor162
                ElseIf celda.value = regla163 Then
                    celda.value = valor163
                ElseIf celda.value = regla164 Then
                    celda.value = valor164
                ElseIf celda.value = regla165 Then
                    celda.value = valor165
                ElseIf celda.value = regla166 Then
                    celda.value = valor166
                ElseIf celda.value = regla167 Then
                    celda.value = valor167
                ElseIf celda.value = regla168 Then
                    celda.value = valor168
                ElseIf celda.value = regla169 Then
                    celda.value = valor169
                ElseIf celda.value = regla170 Then
                    celda.value = valor170
                ElseIf celda.value = regla171 Then
                    celda.value = valor171
                ElseIf celda.value = regla172 Then
                    celda.value = valor172
                ElseIf celda.value = regla173 Then
                    celda.value = valor173
                ElseIf celda.value = regla174 Then
                    celda.value = valor174
                ElseIf celda.value = regla175 Then
                    celda.value = valor175
                ElseIf celda.value = regla176 Then
                    celda.value = valor176
                ElseIf celda.value = regla177 Then
                    celda.value = valor177
                ElseIf celda.value = regla178 Then
                    celda.value = valor178
                ElseIf celda.value = regla179 Then
                    celda.value = valor179
                ElseIf celda.value = regla180 Then
                    celda.value = valor180
                ElseIf celda.value = regla181 Then
                    celda.value = valor181
                ElseIf celda.value = regla182 Then
                    celda.value = valor182
                ElseIf celda.value = regla183 Then
                    celda.value = valor183
                ElseIf celda.value = regla184 Then
                    celda.value = valor184
                ElseIf celda.value = regla185 Then
                    celda.value = valor185
                ElseIf celda.value = regla186 Then
                    celda.value = valor186
                ElseIf celda.value = regla187 Then
                    celda.value = valor187
                ElseIf celda.value = regla188 Then
                    celda.value = valor188
                ElseIf celda.value = regla189 Then
                    celda.value = valor189
                ElseIf celda.value = regla190 Then
                    celda.value = valor190
                ElseIf celda.value = regla191 Then
                    celda.value = valor191
                ElseIf celda.value = regla192 Then
                    celda.value = valor192
                ElseIf celda.value = regla193 Then
                    celda.value = valor193
                ElseIf celda.value = regla194 Then
                    celda.value = valor194
                ElseIf celda.value = regla195 Then
                    celda.value = valor195
                ElseIf celda.value = regla196 Then
                    celda.value = valor196
                ElseIf celda.value = regla197 Then
                    celda.value = valor197
                ElseIf celda.value = regla198 Then
                    celda.value = valor198
                ElseIf celda.value = regla199 Then
                    celda.value = valor199
                ElseIf celda.value = regla200 Then
                    celda.value = valor200
                
                End If


'End If

Next celda



End Sub



''''''''''''''''''''''''''''DESPROTEGER''''''''''''''''''''''''''''''''''''''''''''''
Sub Desproteger_hojas()

        Dim i As Integer, j As Integer, k As Integer, sht As Integer
        Dim l As Integer, m As Integer, n As Integer
        Dim i1 As Integer, i2 As Integer, i3 As Integer
        Dim i4 As Integer, i5 As Integer, i6 As Integer
            
'    For sht = 1 To Sheets.Count
        'Sheets(sht).Visible = True
        sht = 1
        Sheets(sht).Activate
    
        For i = 65 To 66: For j = 65 To 66: For k = 65 To 66
        For l = 65 To 66: For m = 65 To 66: For i1 = 65 To 66
        For i2 = 65 To 66: For i3 = 65 To 66: For i4 = 65 To 66
        For i5 = 65 To 66: For i6 = 65 To 66: For n = 32 To 126
            ActiveSheet.Unprotect Chr(i) & Chr(j) & Chr(k) & _
                Chr(l) & Chr(m) & Chr(i1) & Chr(i2) & Chr(i3) & _
                Chr(i4) & Chr(i5) & Chr(i6) & Chr(n)
'            If ActiveSheet.ProtectContents = False Then
'                 GoTo siguiente
'            End If
        Next: Next: Next: Next: Next: Next
        Next: Next: Next: Next: Next: Next
        
'siguiente:
'    Next
End Sub

Sub SacaClaves()
    Dim Contrase|fffd|a As String
    Dim i01 As Integer, i02 As Integer, i03 As Integer
    Dim i04 As Integer, i05 As Integer, i06 As Integer
    Dim i07 As Integer, i08 As Integer, i09 As Integer
    Dim i10 As Integer, i11 As Integer, i12 As Integer
    On Error Resume Next
    For i01 = 65 To 66: For i02 = 65 To 66: For i03 = 65 To 66
    For i04 = 65 To 66: For i05 = 65 To 66: For i06 = 65 To 66
    For i07 = 65 To 66: For i08 = 65 To 66: For i09 = 65 To 66
    For i10 = 65 To 66: For i11 = 65 To 66: For i12 = 32 To 126
        Contrase|fffd|a = Chr(i01) & Chr(i02) & Chr(i03) & Chr(i04) & Chr(i05) & Chr(i06) & Chr(i07) & Chr(i08) & Chr(i09) & Chr(i10) & Chr(i11) & Chr(i12)
        ActiveSheet.Unprotect Contrase|fffd|a
        If ActiveSheet.ProtectContents = False Then
            Debug.Print Contrase|fffd|a
'            MsgBox "La contrase|fffd|a encontrada es " & Contrase|fffd|a
            Exit Sub
        End If
    Next: Next: Next
    Next: Next: Next
    Next: Next: Next
    Next: Next: Next
End Sub



Sub DesprotegerHoja1U()
Call VariablesGlobales


Dim oHojaActiva As String
oHojaActiva = ActiveSheet.Name 'ThisComponent.getCurrentController().getActiveSheet()

'On Error GoTo Mensaje
Sheets(oHojaActiva).Unprotect (PswSaldos)

If ActiveWorkbook.ActiveSheet.ProtectContents = True Then
Sheets(oHojaActiva).Unprotect
End If

Exit Sub
'Mensaje:
'MsgBox "Clave Incorrecta en el archivo"

End Sub



'''''''''''''''''''''''''LIMPIAR QUERY DE HOJAS'''''''''''''''''''''''''''
Sub DeleteQueryImportaciones()
Dim sh, NumHojas As Integer
Dim nombreHoja, cuSh As String

cuSh = ActiveSheet.Name
NumHojas = ActiveWorkbook.Sheets.Count


For i = 1 To NumHojas
    Sheets(i).Activate
    nombreHoja = Sheets(i).Name
    LimpiarImportaciones (nombreHoja)
Next

Sheets(cuSh).Select

End Sub


Function LimpiarImportaciones(mihoja As String)
'Macro que borra todas las tablas (deshabilita actualizar datos) mas no los datos importados
Dim i, a, NumHojas As Integer
NumHojas = ActiveWorkbook.Sheets.Count

mihoja = ActiveSheet.Name

On Error GoTo fin:
Sheets(mihoja).Activate
ini:
i = 1
a = ThisWorkbook.Sheets(mihoja).QueryTables.Count



If a > 0 Then
    For i = 1 To a
        On Error Resume Next
        ThisWorkbook.Sheets(mihoja).QueryTables(i).Delete
        a = a - 1
    Next i
GoTo ini
End If
fin:


End Function





'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Function ExtraeIniciales(sel As String)

Dim acum, X, largo, contador As Long
Dim iniciales, inicial As Variant
Dim ValCel As String

'quitar espacios
ValCel = Trim(sel)

largo = Len(ValCel)
acum = 1
contador = 0
iniciales = Left(ValCel, 4)

Do While acum <= largo
    
    acum = InStr(acum, ValCel, Chr(32))
    
    If acum > 0 Then
        acum = acum + 1
        contador = contador + 1
        inicial = Mid(ValCel, acum, 1)
        iniciales = iniciales & inicial
        
    Else
    
        acum = largo + 1
        iniciales = iniciales
        
    End If
Loop


'quitar acentos

Const conAcento As String = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Const sinAcento As String = "aeiouAEIOUaeiouAEIOU"

    For i = 1 To Len(conAcento)
        iniciales = Replace(iniciales, Mid(conAcento, i, 1), Mid(sinAcento, i, 1))
    Next i
  
ExtraeIniciales = iniciales


End Function

Sub RangoImagen(rango As Excel.Range, Archivo As String)
    Dim Imagen As Chart
    Dim result As Boolean
    
    
    
    On Error Resume Next
    
    With rango
        .CopyPicture Appearance:=xlScreen, Format:=xlPicture
        Set Imagen = rango.Parent.ChartObjects.Add(10, 10, .Width, .Height).Chart
    End With
    
    'Imagen.Parent.Activate
    
    On Error GoTo 0
    Imagen.Parent.Activate
    Imagen.Parent.Activate
    
    Imagen.Paste
    Imagen.ChartArea.Border.LineStyle = 0
    Imagen.ChartArea.Width = Imagen.ChartArea.Width '*.8
    Imagen.ChartArea.Height = Imagen.ChartArea.Height '*.8
    
    On Error Resume Next
    Kill Archivo
    result = Imagen.Export(Archivo)
    Imagen.Parent.Delete
    Set Imagen = Nothing
    On Error GoTo 0
    
'    If Result Then
'        'MsgBox "Correcto. Se ha creado la imagen del rango"
'    Else
'        MsgBox "Error. " & Err.Description
'    End If
End Sub




''''''''''''''''''''''''UNIR CON | '''''''''''''''''''''''
Sub ConcatenarRangoPipes()
Call VariablesGlobales

Dim X, z, fin As Long
Dim puntero As Range
Dim cocat As String

Set puntero = Range(ActiveCell.Address)

X = ActiveCell.Row
Y = ActiveCell.Column
z = ActiveCell.Row

fin = puntero.End(xlToRight).Column

If puntero.End(xlDown).Row < 10000 Then
    NRows = puntero.End(xlDown).Row
ElseIf puntero.Offset(0, 1).End(xlDown).Row < 10000 Then
    NRows = puntero.End(xlDown).Row

ElseIf puntero.Offset(0, 2).End(xlDown).Row < 10000 Then
    NRows = puntero.End(xlDown).Row
    
ElseIf puntero.Offset(0, 3).End(xlDown).Row < 10000 Then
    NRows = puntero.End(xlDown).Row

Else
    NRows = z + 1
    
End If

'concat = Now() & "|" & UsuarioWin & "|"
cocat = ""



For j = X To NRows

        For i = Y To fin
            
            
            
            If i = fin And j = z Then
            
            cocat = cocat & Cells(X, i) & "|" & "NombrePlaneador" & "|" & "FechaOperacion" & "|" & "TiempoRegistro" & "|" & "UsuarioRegistro"
            cocat = Replace(cocat, Chr(10), "")
            cocat = Replace(cocat, Chr(34), "")
            Cells(X, fin + 1) = cocat
            'MsgBox " es primera linea y final de linea cocat: " & cocat
            
            ElseIf i < fin And j = z Then
            
            cocat = cocat & Cells(X, i) & "|"
            cocat = Replace(cocat, Chr(10), "")
            cocat = Replace(cocat, Chr(34), "")
            'MsgBox " es primera linea y dentro de cadena cocat: " & cocat
            
            ElseIf i < fin And j > z Then
            
            cocat = cocat & Cells(X, i) & "|"
            cocat = Replace(cocat, Chr(10), "")
            cocat = Replace(cocat, Chr(34), "")
            'MsgBox "columna " & i & " fila " & j & "2 concat " & concat
            
            ElseIf i = fin And j > z Then
            
            cocat = cocat & Cells(X, i)
            cocat = Replace(cocat, Chr(10), "")
            cocat = Replace(cocat, Chr(34), "")
            cocat = cocat & "|" & NombrePlaneador & "|" & fechaOperacion & "|" & Now() & "|" & UsuarioWindows
            Cells(X, fin + 1) = Replace(cocat, Chr(34), "")
            'MsgBox "columna " & i & " fila " & j & "3 concat " & concat
            
            
            End If
            
            
            'MsgBox cocat
        Next i
        
    cocat = ""

    X = X + 1
Next j


End Sub


Sub QuitarFiltrosTodasHojas()
Dim AcSh As String
Dim totSh, X, Y As Long

totSh = ActiveWorkbook.Sheets.Count

AcSh = ActiveSheet.Name

For i = 1 To totSh
    
        If Sheets(i).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        
        Sheets(i).AutoFilterMode = False
        Else
            'MsgBox "no hay filtro"
        End If

Next i

Sheets(AcSh).Select

End Sub


Sub FileTxtString_UnRegistroTraspasosTxt(fecha As Date, cadena As Variant, sucursal As Variant, etv As Variant, dota_1_comp_2 As Integer)

Call CA00_MacroCrearCarpetas
Call VariablesGlobales

'agregar id a caja de recepci|fffd|n

Dim NombreArchivo, RutaArchivo As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String
Dim etiquetaArchivo As String


Select Case dota_1_comp_2
Case 1
etiquetaArchivo = "Monitoreo Dotaciones"

Case 2
etiquetaArchivo = "Monitoreo Compras"

End Select


'Ubicar fecha del reporte
fechaValor = fecha


DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"

RutaArchivo = UnidadRuta & "\" & fechaCarpeta & "\" & sucursal & " " & etv & " " & DayLabel & " " & NombreMes & " " & YearLabel & " " & etiquetaArchivo & ".txt"


'MsgBox RutaArchivo


Set Ht = ActiveSheet
Set obj = New FileSystemObject
Set tx = obj.CreateTextFile(RutaArchivo)

    tx.Write cadena
    tx.WriteLine
    tx.Close


Set obj = Nothing

End Sub


Sub ImportarArchivosTxt(ruta As String, prefixArchi As String, sufixArchi As String, hojaImprimir As String)

'Importar totos lod archivos de la ruta con el prefijo y sufijo especificados e imprimir en la hoja seleccionada

Dim COLECCION As Collection
Dim COLECCION_FINAL As Collection
Set COLECCION = New Collection
Set COLECCION_FINAL = New Collection

On Error GoTo final:

ChDrive (Left(ruta, 3))
ChDir (ruta)
archi = Dir(prefixArchi & sufixArchi)

If archi = "" Then

    Exit Sub

End If

Do While archi <> ""

Set COLECCION = coleccionLibros(CStr(ruta & "\" & archi))

For i = 1 To COLECCION.Count

COLECCION_FINAL.Add COLECCION(i)

Next i

Set COLECCION = Nothing

archi = Dir()

Loop

row0 = 1


Sheets(hojaImprimir).Select
    
For i = 1 To COLECCION_FINAL.Count

    Cells(row0, 1) = COLECCION_FINAL(i)

    row0 = row0 + 1

Next i

final:

End Sub


Public Function ColeccionImportarArchivosTxt(ruta As String, prefixArchi As String, sufixArchi As String, hojaImprimir As String) As Collection

'Importar totos lod archivos de la ruta con el prefijo y sufijo especificados y guarda como coleccion

Dim COLECCION As Collection
Dim COLECCION_FINAL As Collection
Set COLECCION = New Collection
Set COLECCION_FINAL = New Collection

On Error GoTo final:

ChDrive (Left(ruta, 3))
ChDir (ruta)
archi = Dir(prefixArchi & sufixArchi)

If archi = "" Then

    Exit Function

End If

Do While archi <> ""

Set COLECCION = coleccionLibros(CStr(ruta & "\" & archi))

For i = 1 To COLECCION.Count

COLECCION_FINAL.Add COLECCION(i)

Next i

Set COLECCION = Nothing

archi = Dir()

Loop

row0 = 1


Set ColeccionImportarArchivosTxt = COLECCION_FINAL

'Sheets(hojaImprimir).Select
'
'For i = 1 To COLECCION_FINAL.Count
'
'    Cells(row0, 1) = COLECCION_FINAL(i)
'
'    row0 = row0 + 1
'
'Next i

final:

End Function



Public Function coleccionLibros(ruta As String) As Collection

'Dim strFilename As String: strFilename = "C:\Users\Berna\Documents\prueba.txt"
Dim strFilename As String: strFilename = ruta
Dim strFileContent As String
Dim NUEVOS As Collection
Set NUEVOS = New Collection

Dim iFile As Integer: iFile = FreeFile
Open strFilename For Input As #iFile
'strFileContent = Input(LOF(iFile), iFile)
Do While Not EOF(iFile)
    Line Input #iFile, strFileContent
    NUEVOS.Add strFileContent

Loop

Close #iFile

Set coleccionLibros = NUEVOS


End Function

Attribute VB_Name = "BA_VALIDAR_CAPTURA"
Private Sub CeldaAnterior()
'Validar captura en hoja Planeacion SUCURSALES

Call VariablesGlobales
Dim CB1000, CB500, CB200, CB100, CB50, CB20, CM10, CM5, CM2, CM1, CCM5, CCM2 As Integer
Dim ColDot, CV1000, CV500, CV200, CV100, CV50, CV20, CVM10, CVM5, CVM2, CVM1, CVCM5, CVCM2, CVRESTANTE As Integer
Dim row0, col0 As Long
CB1000 = 48
CB500 = 49
CB200 = 50
CB100 = 51
CB50 = 52
CB20 = 53
CM10 = 55
CM5 = 56
CM2 = 57
CM1 = 58
CCM5 = 59
CCM2 = 60

CV1000 = 33
CV500 = 34
CV200 = 35
CV100 = 36
CV50 = 37
CV20 = 38
CVM10 = 40
CVM5 = 41
CVM2 = 42
CVM1 = 43
CVCM5 = 44
CVCM2 = 45

CVRESTANTE = 46

ColDot = 8

row0 = ActiveCell.Row
col0 = ActiveCell.Column

On Error Resume Next

'COLUMNA TOTAL DOTACI|fffd|N
If col0 = ColDot Then
    If Cells(row0, CVRESTANTE).value < 0 Then
       ActiveCell = 0
       MsgBox "ERROR: Importe insuficiente en stock"
    Else
    End If
Else
End If


'COLUMNA 1,000 CAPTURA
If col0 = CB1000 Then
    If (ActiveCell.value Mod 1000) > 0 And Cells(row0, CV1000).value < 0 Then
       ActiveCell = 0
       MsgBox "ERROR: Importe insuficiente en stock y M|fffd|ltiplo no v|fffd|lido"
    ElseIf Cells(row0, CV1000).value < 0 Then
       ActiveCell = 0
       MsgBox "ERROR: Importe insuficiente en stock"
    ElseIf (ActiveCell.value Mod 1000) > 0 Then
       ActiveCell = 0
       MsgBox "ERROR: M|fffd|ltiplo no v|fffd|lido"
    Else
    End If
Else
End If


'COLUMNA 500 CAPTURA
If col0 = CB500 Then
    If (ActiveCell.value Mod 500) > 0 And Cells(row0, CV500).value < 0 Then
       ActiveCell = 0
       MsgBox "ERROR: Importe insuficiente en stock y M|fffd|ltiplo no v|fffd|lido"
    ElseIf Cells(row0, CV500).value < 0 Then
       ActiveCell = 0
       MsgBox "ERROR: Importe insuficiente en stock"
    ElseIf (ActiveCell.value Mod 500) > 0 Then
       ActiveCell = 0
       MsgBox "ERROR: M|fffd|ltiplo no v|fffd|lido"
    Else
    End If
Else
End If


'COLUMNA 200 CAPTURA
If col0 = CB200 Then
    If (ActiveCell.value Mod 200) > 0 And Cells(row0, CV200).value < 0 Then
       ActiveCell = 0
       MsgBox "ERROR: Importe insuficiente en stock y M|fffd|ltiplo no v|fffd|lido"
    ElseIf Cells(row0, CV200).value < 0 Then
       ActiveCell = 0
       MsgBox "ERROR: Importe insuficiente en stock"
    ElseIf (ActiveCell.value Mod 200) > 0 Then
       ActiveCell = 0
       MsgBox "ERROR: M|fffd|ltiplo no v|fffd|lido"
    Else
    End If
Else
End If


'COLUMNA 100 CAPTURA
If col0 = CB100 Then
    If (ActiveCell.value Mod 100) > 0 And Cells(row0, CV100).value < 0 Then
       ActiveCell = 0
       MsgBox "ERROR: Importe insuficiente en stock y M|fffd|ltiplo no v|fffd|lido"
    ElseIf Cells(row0, CV100).value < 0 Then
       ActiveCell = 0
       MsgBox "ERROR: Importe insuficiente en stock"
    ElseIf (ActiveCell.value Mod 100) > 0 Then
       ActiveCell = 0
       MsgBox "ERROR: M|fffd|ltiplo no v|fffd|lido"
    Else
    End If
Else
End If


'COLUMNA 50 CAPTURA
If col0 = CB50 Then
    If (ActiveCell.value Mod 50) > 0 And Cells(row0, CV50).value < 0 Then
       ActiveCell = 0
       MsgBox "ERROR: Importe insuficiente en stock y M|fffd|ltiplo no v|fffd|lido"
    ElseIf Cells(row0, CV50).value < 0 Then
       ActiveCell = 0
       MsgBox "ERROR: Importe insuficiente en stock"
    ElseIf (ActiveCell.value Mod 50) > 0 Then
       ActiveCell = 0
       MsgBox "ERROR: M|fffd|ltiplo no v|fffd|lido"
    Else
    End If
Else
End If


'COLUMNA 20 CAPTURA
If col0 = CB20 Then
    If (ActiveCell.value Mod 20) > 0 And Cells(row0, CV20).value < 0 Then
       ActiveCell = 0
       MsgBox "ERROR: Importe insuficiente en stock y M|fffd|ltiplo no v|fffd|lido"
    ElseIf Cells(row0, CV20).value < 0 Then
       ActiveCell = 0
       MsgBox "ERROR: Importe insuficiente en stock"
    ElseIf (ActiveCell.value Mod 20) > 0 Then
       ActiveCell = 0
       MsgBox "ERROR: M|fffd|ltiplo no v|fffd|lido"
    Else
    End If
Else
End If

'ESTANDAR BANXICO PARA PAQUETES DE MONEDAS
If col0 > CB20 And col0 <= CCM2 Then
    If ActiveCell.value = "estandar" Or ActiveCell.value = "ESTANDAR" Or ActiveCell.value = "e" Or ActiveCell.value = "E" Then
        Cells(row0, CM10) = (SBX10 * 10)
        Cells(row0, CM5) = (SBX5 * 5)
        Cells(row0, CM2) = (SBX2 * 2)
        Cells(row0, CM1) = SBX1
        Cells(row0, CCM5) = (SBX05 * 0.5)
    End If

'COLUMNA 10 AUTOLLENADO
    If Cells(row0, CVM10) < 0 Then
        Cells(row0, CM10) = Cells(row0, CM10) + Cells(row0, CVM10)
    ElseIf (Cells(row0, CM10) Mod 10) > 0 Then
       Cells(row0, CM10) = 0
       MsgBox "ERROR: M|fffd|ltiplo no v|fffd|lido"
    End If
'COLUMNA 5 AUTOLLENADO
    If Cells(row0, CVM5) < 0 Then
        Cells(row0, CM5) = Cells(row0, CM5) + Cells(row0, CVM5)
    ElseIf (Cells(row0, CM5) Mod 5) > 0 Then
       Cells(row0, CM5) = 0
       MsgBox "ERROR: M|fffd|ltiplo no v|fffd|lido"
    End If
'COLUMNA 2 AUTOLLENADO
    If Cells(row0, CVM2) < 0 Then
        Cells(row0, CM2) = Cells(row0, CM2) + Cells(row0, CVM2)
    ElseIf (Cells(row0, CM2) Mod 2) > 0 Then
       Cells(row0, CM2) = 0
       MsgBox "ERROR: M|fffd|ltiplo no v|fffd|lido"
    End If
'COLUMNA 1 AUTOLLENADO
    If Cells(row0, CVM1) < 0 Then
        Cells(row0, CM1) = Cells(row0, CM1) + Cells(row0, CVM1)
    ElseIf Cells(row0, CM1) - (Round(Cells(row0, CM1).value)) <> 0 Then
       Cells(row0, CM1) = 0
       MsgBox "ERROR: M|fffd|ltiplo no v|fffd|lido"
    End If
'COLUMNA 05 AUTOLLENADO
    If Cells(row0, CVCM5) < 0 Then
        Cells(row0, CCM5) = Cells(row0, CCM5) + Cells(row0, CVCM5)
    ElseIf Cells(row0, CCM5) - ((Round(Cells(row0, CCM5) / 0.5)) * 0.5) < 0 Then
       Cells(row0, CCM5) = 0
       MsgBox "ERROR: M|fffd|ltiplo no v|fffd|lido"
    End If
End If


'COLUMNA .20 CAPTURA
If col0 = CCM2 Then
'    If (Cells(Row0, CCM2) / 0.2) - ((Round(Cells(Row0, CCM2) / 0.2)) * 0.2) <> 0 And Cells(Row0, CVCM2).value < 0 Then
'       ActiveCell = 0
'       MsgBox "ERROR: Importe insuficiente en stock y M|fffd|ltiplo no v|fffd|lido"
     If Cells(row0, CVCM2).value < 0 Then
       ActiveCell = 0
       MsgBox "ERROR: Importe insuficiente en stock"
'    ElseIf Cells(Row0, CCM2) - ((Round(Cells(Row0, CCM2) / 0.2)) * 0.2) < 0 Then
'       ActiveCell = 0
'       MsgBox "ERROR: M|fffd|ltiplo no v|fffd|lido"
    Else
    End If
Else
End If

On Error GoTo 0

End Sub


Sub Bot_Conciliacion()

resultado = MsgBox("Desea ejecutar conciliaci|fffd|n ARRASTRE SALDOS vs ARQUEO ETV", vbOKCancel, "CONCILIAR ARQUEOS ETV")

If resultado = vbOK Then
Call CA0_MacroConciliacionArqueos

Else

Exit Sub

End If


End Sub


Sub Bot_Correo_Saldos_Cajas()

REPORTE_SALDOS_CAJAS.Show


End Sub


Sub Bot_Publicar_Conciliacion()

resultado = MsgBox("Desea resguardar ARRASTRE SALDOS vs ARQUEO ETV", vbOKCancel, "RESGUARDAR EN HISTORICO")

If resultado = vbOK Then

Call CH0_2TxtConciliacionArqueosCajasHoy

Else

Exit Sub

End If

MsgBox "RESGUARDO DE INFORMACI|fffd|N FINALIZADO"

End Sub


Sub Bot_Publicar_Planeacion_Cajas()

resultado = MsgBox("Desea resguardar PLANEACION DE CAJAS", vbOKCancel, "RESGUARDAR EN HISTORICO")

If resultado = vbOK Then

Call CH0_1TxtPlaneacionesCajasSaldosHoy

Else

Exit Sub

End If

MsgBox "RESGUARDO DE INFORMACI|fffd|N FINALIZADO"

End Sub

Sub Bot_Publicar_Planeacion_Servicios()

resultado = MsgBox("Desea resguardar PLANEACION DE SERVICIOS ETV", vbOKCancel, "RESGUARDAR EN HISTORICO")

If resultado = vbOK Then

Call CH0_TxtPlaneacionesSaldosHoy

Else

Exit Sub

End If

MsgBox "RESGUARDO DE INFORMACI|fffd|N FINALIZADO"

End Sub

Sub Bot_Actualizar_Saldos_Servicios_Etv()

resultado = MsgBox("Desea actualizar saldos para PLANEACION DE SERVICIOS ETV", vbOKCancel, "SALDOS PARA PLANEACI|fffd|N")

If resultado = vbOK Then

Call CA1_MacroPrincipalPlaneacion

Else

Exit Sub

End If

MsgBox "SALDOS ACTUALIZADOS"

End Sub


Sub Bot_Actualizar_Saldos_Traspasos()

resultado = MsgBox("Desea actualizar saldos para TRASPASOS DE CAJAS", vbOKCancel, "TRASPASOS SALIDAS/ENTRADAS")

If resultado = vbOK Then

'generar txt de movimientos propios
'Call CH0_3TxtTraspasosCajasHoy
'inhabilitado 6 diciembre 2018
'Call CJ3_ArchivosTxtDifFechasTraslado
Call CH0_8TxtTraspasosCajasHoyDinamico
Call CJ0_MovimientosDiaActual

Else

Exit Sub

End If

Sheets(sh1).Select

    
MsgBox "TRASPASOS ACTUALIZADOS"

End Sub

Sub Bot_Captura_Traspasos()

 TRASPASOS_SALIDA_CAJA_GENERAL.Show
 
End Sub


Sub Bot_Captura_Compras()
COMPRAS_REGISTRO.Show
 
End Sub


Sub Bot_Navegar_Hojas()

'validar si el archivo est|fffd| en la ubicaci|fffd|n de la macro y tiene el prefijo asignado a la plan
If CStr((Left(ActiveWorkbook.Path, 2)) & "\" & "Planeaciones") = Left(ActiveWorkbook.Path, 15) And _
Left(ActiveWorkbook.Name, 5) = "PTC01" Then

    'mostrar men|fffd| de hojas del archivo
    NAVEGAR_HOJAS.Show

Else

    MsgBox "Funci|fffd|n del archivo de Planeaci|fffd|n de Log|fffd|stica Monetaria" & vbNewLine & vbNewLine & _
            "Ruta archivo: Proyecto Logistica Monetaria (\\bcdelta062) \ Planeaciones \ Cajas \ (A|fffd|o)"
End If



End Sub


Sub Bot_Saldos_Cajas()

'validar si el archivo est|fffd| en la ubicaci|fffd|n de la macro y tiene el prefijo asignado a la plan
If CStr((Left(ActiveWorkbook.Path, 2)) & "\" & "Planeaciones") = Left(ActiveWorkbook.Path, 15) And _
Left(ActiveWorkbook.Name, 5) = "PTC01" Then

    'proceso SUCURSALES
    Call VariablesGlobales
    'sh1 = "pm_PLANEACION_CAJAS"
    Sheets(sh1).Select
    
    FUNCIONES_CAJAS.Show

Else

    MsgBox "Funci|fffd|n del archivo de Planeaci|fffd|n de Log|fffd|stica Monetaria" & vbNewLine & vbNewLine & _
            "Ruta archivo: Proyecto Logistica Monetaria (\\bcdelta062) \ Planeaciones \ Cajas \ (A|fffd|o)"
End If



End Sub


Sub Bot_Menu_Servicios()

'validar si el archivo est|fffd| en la ubicaci|fffd|n de la macro y tiene el prefijo asignado a la plan
If CStr((Left(ActiveWorkbook.Path, 2)) & "\" & "Planeaciones") = Left(ActiveWorkbook.Path, 15) And _
Left(ActiveWorkbook.Name, 5) = "PTC01" Then

    'proceso SUCURSALES
    Call VariablesGlobales
    'sh3 = "pm_PLANEACION_SERVICIOS"
    Sheets(sh3).Select
    
    FUNCIONES_SERVICIOS.Show

Else

    MsgBox "Funci|fffd|n del archivo de Planeaci|fffd|n de Log|fffd|stica Monetaria" & vbNewLine & vbNewLine & _
            "Ruta archivo: Proyecto Logistica Monetaria (\\bcdelta062) \ Planeaciones \ Cajas \ (A|fffd|o)"
End If



 
End Sub


Sub Bot_Ordenes_Dotacion_Sucursales()

CASH_IN_CASH_OUT.Show
 
End Sub

Sub Bot_Actualizar_SInicial_SActual_LOperativo()

resultado = MsgBox("Desea actualizar SALDOS INICIALES, SALDO ACTUAL y L|fffd|MITE OPERATIVO", vbOKCancel, "SALDOS Y L|fffd|MITE OPERATIVO")

If resultado = vbOK Then

'generar txt de movimientos propios
Call CA6_MacroActualizarTodoPlaneacionServicios

Range("f4").Select

Else

Exit Sub

End If


    
MsgBox "SALDOS Y L|fffd|MITE OPERATIVO ACTUALIZADOS"

 
End Sub



Sub Bot_Limpiar_DEM()

resultado = MsgBox("Desea limpiar captura DEM", vbOKCancel, "DEM")

If resultado = vbOK Then

'generar txt de movimientos propios
Call CU_6DemLimpiar

Range("f4").Select

Else

Exit Sub

End If


    
MsgBox "Realizado"

 
End Sub


Sub Bot_Actualizar_SInicial()

resultado = MsgBox("Desea actualizar SALDOS INICIALES", vbOKCancel, "SALDOS INICIALES")

If resultado = vbOK Then

'generar txt de movimientos propios
Call CA4_MacroSaldosIniciales
Call CA5_MacroLimitesOperativos
Call CB0_2FormatoAlertas

Range("f4").Select

Else

Exit Sub


End If

MsgBox "SALDOS INICIALES ACTUALIZADOS"
End Sub




Sub Bot_Actualizar_LimiteOperativo()

resultado = MsgBox("Desea actualizar L|fffd|MITES OPERATIVOS", vbOKCancel, "L|fffd|MITE OPERATIVO")

If resultado = vbOK Then

'generar txt de movimientos propios
Call CA5_MacroLimitesOperativos

Range("J4").Select

Else

Exit Sub


End If

MsgBox "L|fffd|MITES OPERATIVOS ACTUALIZADOS"
End Sub





Sub Bot_Actualizar_SaldoUltimoMonitoreo()

resultado = MsgBox("Desea actualizar |fffd|LTIMO SALDO DE MONITOREO", vbOKCancel, "SALDO MONITOREO")

If resultado = vbOK Then


Call CA3_MacroSaldosCortesSinVariabilidad
Call CQ3_1ImportarModeloSemanalPronosticoDiario
Call CQ6_CiCoDiaActualSucursales
'Call CQ7_EstatusDinamicoMonitoreoSucursales

Range("H4").Select

Else

Exit Sub


End If

MsgBox "MONITOREO DE SALDOS ACTUALIZADOS"
End Sub


' 3 diciembre 2018 se deshabilita y se reemplaza por el detale de CAS IN- CASH OUT / Bot_Actualizar_RemesasAvansoft
Sub Bot_Actualizar_RemesasAvansoft()

resultado = MsgBox("Desea actualizar REMESAS AVANSOFT", vbOKCancel, "REMESAS AVANSOFT")

If resultado = vbOK Then

'generar txt de movimientos propios sh3 = "pm_PLANEACION_SERVICIOS"
Call CF0_RemesasAvansoft

Else

Exit Sub

End If

Dim row0, col0, sumaRango As Long
'columna de inicio captura de los desembolsos en la Hoja OdpTddRemesas
col0 = 13
row0 = 4

'limpiar columna de remesas en hoja de planeaci|fffd|n
sumaRango = Application.WorksheetFunction.Sum(Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)))


If sumaRango > 0 Then
MsgBox "INFORMACI|fffd|N DE AVANSOFT ACUALIZADA"
Else
Sheets(sh3).Select
End If
 
 
End Sub




'3 Diciembre 2018 se deshabilita y se reemplaza por el detalle de Cash In Cash Out / Bot_Actualizar_RemesasAvansoft
Sub Bot_Actualizar_ODP_TDD()

resultado = MsgBox("Desea actualizar Desembolsos ODP-TDD", vbOKCancel, "ODP - TDD")

If resultado = vbOK Then

'generar txt de movimientos propios
Call CA1_MacroProcesarDesembolsos


Else

Exit Sub

End If

Dim row0, col0, sumaRango As Long
'columna de inicio captura de los desembolsos en la Hoja OdpTddRemesas
col0 = 14
row0 = 4

'limpiar columna de remesas en hoja de planeaci|fffd|n
sumaRango = Application.WorksheetFunction.Sum(Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)))


If sumaRango > 0 Then
Else
Sheets(sh3).Select
End If
 
End Sub



Sub Bot_Actualizar_PronosticoActualizado()

resultado = MsgBox("Desea actualizar C|fffd|lculo de dotaciones", vbOKCancel, "C|fffd|LCULO DOTACIONES")

If resultado = vbOK Then

'generar txt de movimientos propios
Call CQ_PronosticoActualizado


Else

Exit Sub

End If

Dim row0, col0, sumaRango As Long
'columna de inicio captura de los desembolsos en la Hoja OdpTddRemesas
col0 = 16
row0 = 4

'limpiar columna de remesas en hoja de planeaci|fffd|n
sumaRango = Application.WorksheetFunction.Sum(Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)))


If sumaRango > 0 Then
Else
Sheets(sh3).Select
End If


 
End Sub


Sub Bot_Pagos_Tesoreria()

SOLICITUD_PAGOS_TESORERIA.Show

End Sub


Sub Bot_Dem_Dinamico()

DEM_DINAMICO.Show

End Sub


Sub Bot_Fecha_Dotaciones()

FECHA_DOTACIONES_PLANEACION.Show

End Sub


Sub Bot_Confirmar_Dotaciones()

CONFIRMACION_DOTACIONES.Show

End Sub



Sub Bot_Saldos_Iniciales()

Call VariablesGlobales

'sh27 = "SALDO INICIAL"
Sheets(sh27).Select

SALDO_INICIAL.Show

End Sub



Sub Bot_Confirmacion_Servicios()

CONFIRMACION_SERVICIOS.Show

End Sub


Sub Bot_Saldos_Iniciales_Parametros()

Call VariablesGlobales

Sheets(sh27).Select

End Sub


Sub Bot_Ordenes_Dotacion()

'3 diciembre 2018 se reemplaza por Bot_Ordenes_Dotacion_Sucursales
'REQUERIMIENTO_EFECTIVO.Show

End Sub


Sub Bot_Limpiar_Compras()

resultado = MsgBox("Desea borrar todas las Compras", vbOKCancel, "LIMPIAR CAPTURA")

If resultado = vbOK Then

'generar txt de movimientos propios
Call CK3_LimpiarCapturaCompras

Else

Exit Sub

End If


    
MsgBox "CAPTURA DE COMPRAS LIMPIA"

 
End Sub



Sub Bot_Limpiar_Servicios_Dotacion()

resultado = MsgBox("Desea borrar todas las Dotaciones", vbOKCancel, "LIMPIAR CAPTURA")

If resultado = vbOK Then

'generar txt de movimientos propios
Call DA3_LimpiarCapturaServicios

Else

Exit Sub

End If


    
MsgBox "CAPTURA DE COMPRAS LIMPIA"

 
End Sub



Sub Bot_Limpiar_Servicios_Traspasos()

resultado = MsgBox("Desea borrar todas los Traspasos", vbOKCancel, "LIMPIAR CAPTURA")

If resultado = vbOK Then

'generar txt de movimientos propios
Call DA4_LimpiarCapturaTraspasos

Else

Exit Sub

End If

Sheets(sh1).Select

    
MsgBox "CAPTURA DE TRASPASOS LIMPIA"

 
End Sub



Sub Bot_Limpiar_Todo()

resultado = MsgBox("Desea limpiar todo", vbOKCancel, "LIMPIAR CAPTURA")

If resultado = vbOK Then

Application.ScreenUpdating = False
Application.EnableEvents = False

Call DA6_LimpiarCapturaTodos
Call CL0_AsignacionPorPlaneador

Application.ScreenUpdating = True
Application.EnableEvents = True

Else

Exit Sub

End If


    
MsgBox "FINALIZADO"

 
End Sub


Sub Bot_Limpiar_Conciliacion()

'sh15 = "am_CONCILIAR_ARQUEOS"
resultado = MsgBox("Desea borrar todas los ajustes de Conciliaci|fffd|n", vbOKCancel, "LIMPIAR CAPTURA")

If resultado = vbOK Then

'generar txt de movimientos propios
Call DA2_LimpiarCaptura

Else

Exit Sub

End If

Sheets(sh15).Select

    
MsgBox "CAPTURA DE TRASPASOS LIMPIA"

 
End Sub


Sub Bot_Replicar_Arqueos_Todos()

'sh15 = "am_CONCILIAR_ARQUEOS"
resultado = MsgBox("Desea replicar el SALDO DE ARQUEOS ETV en SALDO INICIAL", vbOKCancel, "REPLICAR ARQUEOS")

If resultado = vbOK Then

'generar txt de movimientos propios
Call CG3_ReplicarArqueosEtiquetas
Call CG2_AutoajustarConciliacion

Else

Exit Sub

End If

Sheets(sh15).Select

    
MsgBox "AJUSTE REALIZADO"

 
End Sub


Sub Bot_Autoajustar_Todos()

'sh15 = "am_CONCILIAR_ARQUEOS"
resultado = MsgBox("Desea autoajustar diferencias", vbOKCancel, "AUTOAJUSTAR DIFERENCIAS")

If resultado = vbOK Then

'generar txt de movimientos propios
Call CG4_AutoajustarDiferenciaEtiquetas
Call CG2_AutoajustarConciliacion

Else

Exit Sub

End If

Sheets(sh15).Select

    
MsgBox "AJUSTE REALIZADO"

 
End Sub




Sub Bot_Validar_Registro_Masivo()

'sh3 = "pm_PLANEACION_SERVICIOS"
resultado = MsgBox("Desea validar registros para dotaci|fffd|n", vbOKCancel, "VALIDAR DOTACIONES")

If resultado = vbOK Then

'generar txt de movimientos propios
Application.ScreenUpdating = False
Application.EnableEvents = False


Call CO2_ValidarRegistroMasivo


Application.ScreenUpdating = True
Application.EnableEvents = True



Else

Exit Sub

End If

Sheets(sh3).Select
Range("AH4").Select

 
End Sub


Sub Bot_Registrar_Servicios()


SERVICIOS_ETV_REGISTRO.Show


End Sub


Sub Bot_Crear_CopiasTxt()

Dim horaIni, horaFin As Date

'horaIni = Now()

resultado = MsgBox("Desea realizar copia de todos los controles", vbOKCancel, "CREAR COPIAS EN TXT")

If resultado = vbOK Then

'generar txt de movimientos propios
Call CA7_ConsolidadosTxtTodosControles

Else

Exit Sub

End If
'
'horaFin = Now()
'
'MsgBox "COPIAS EN TXT REALIZADAS " & Chr(10) & "Tiempo: " & Format(horaFin - horaIni, "hh:mm:ss")


End Sub



Sub Bot_Actualizar_Papel_Planeador()

Dim horaIni, horaFin As Date

'horaIni = Now()

resultado = MsgBox("Desea realizar copia de todos los controles", vbOKCancel, "CREAR COPIAS EN TXT")

If resultado = vbOK Then

'actualiza lista de plazas y sucursales del planeador elegido
Call CL0_AsignacionPorPlaneador

Else

Exit Sub

End If

End Sub

Sub Bot_Correo_Dotaciones_Interno()

Dim horaIni, horaFin As Date

'horaIni = Now()

resultado = MsgBox("Desea generar el correo y detalle de Dotaciones", vbOKCancel, "CORREO DOTACIONES INTERNO")

If resultado = vbOK Then

Application.ScreenUpdating = False
Application.EnableEvents = False

'generar txt de movimientos propios
Call CA00_MacroCrearCarpetas
Call CS_CorreoDotacionesInterno

Application.ScreenUpdating = True
Application.EnableEvents = True

Else

Exit Sub

End If
'
'horaFin = Now()
'
'MsgBox "COPIAS EN TXT REALIZADAS " & Chr(10) & "Tiempo: " & Format(horaFin - horaIni, "hh:mm:ss")


End Sub



Sub Bot_RegistroMasivo()

REGISTRO_MASIVO.Show

End Sub
Sub Bot_LimpiarDotaciones()

LIMPIAR_HOJAS_DOTACIONES.Show

End Sub

Sub Bot_ConsultaHistorico()

CONSULTA_HISTORICO.Show

End Sub

Sub Bot_PlaneacionCajas()

PLANEACION_CAJAS.Show

End Sub


Sub Bot_ConsultaDiarioDotComp()

CONSULTA_DATOS_DEL_DIA.Show

End Sub


Sub Bot_MonitoreoSaldosSucursalesCajas()

MONITOREO_SALDOS.Show

End Sub



Attribute VB_Name = "BB_TABLAS"
Sub BB0_ActualizarTablasArqueos()

Sheets(sh11).Select
    
    ActiveSheet.PivotTables("TablaHistoricoSaldosCajas").PivotCache.Refresh
    ActiveSheet.PivotTables("TablaDenominacionesArqueos").PivotCache.Refresh

End Sub
Attribute VB_Name = "BC_MONITOREO_SALDOS"

Sub BC_1ReporteMonitoreoSaldos()

'Reporte de monitoreo de saldos de sucursales y cajas diario por evento de actualizaci|fffd|n de saldos

Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlManual

hora1 = Now()

Call VariablesGlobales

Dim NombreArchi, UltimoArchi As String
Dim archi, rango As Variant
Dim FechaModArchi, FechaModificacionArchivo, FechaArchi1 As Date
Dim NumArchi As Integer
Dim fila As Long
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes, NombreMes2 As String
Dim UnidadRutaSalIni, FechaCarpetaSalIni, carpetaSalIni As String
Dim UnidadRutaConfirmaDot, FechaCarpetaConfirmaDot, carpetaConfirmaDot As String
Dim UnidadRutaProgramDot, FechaCarpetaProgramDot, carpetaProgramDot As String
Dim nombreHojas As String
Dim row0, col0, totRows, totCols As Long
Dim MONITOREOS() As Variant
Dim HORAS As Collection: Set HORAS = New Collection
Dim HORASarray() As Variant
Dim horaMin, horaMax As Date
Dim cuSh, cuWo As String
Dim diaActualModeloCiCo, diaActualCashIn, diaActualModeloDot As Integer

cuWo = ActiveWorkbook.Name
cuSh = ActiveSheet.Name

''''''''''''''''''''''''IMPORTAR SALDOS DE MONITOREOS DEL D|fffd|A'''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'limpiar hoja de acumulado sh6 = "Procesar"
nombreHojas = sh6
Sheets(sh6).Select
Cells.Clear

'Ubicar fecha del reporte
'FechaValor = FechaValorGeneral
fechaValor = CDate(MONITOREO_SALDOS.ComboDiaMonitoreo.value & "/" & MONITOREO_SALDOS.ComboMesesMonitoreo.value & "/" & MONITOREO_SALDOS.ComboAnioMonitoreo)


Select Case Weekday(fechaValor, vbMonday)
    Case 1
        diaActualModeloCiCo = 3
        diaActualModeloDot = 11
        diaActualCashIn = 3
    Case 2
        diaActualModeloCiCo = 4
        diaActualModeloDot = 12
        diaActualCashIn = 4
    Case 3
        diaActualModeloCiCo = 5
        diaActualModeloDot = 13
        diaActualCashIn = 5
    Case 4
        diaActualModeloCiCo = 6
        diaActualModeloDot = 14
        diaActualCashIn = 6
    Case 5
        diaActualModeloCiCo = 7
        diaActualModeloDot = 15
        diaActualCashIn = 7
    Case 6
        diaActualModeloCiCo = 8
        diaActualModeloDot = 16
        diaActualCashIn = 8
    Case 7
        diaActualModeloCiCo = 9
        diaActualModeloDot = 17
        diaActualCashIn = 9
        
End Select



'PUNTERO DE ARREGLO


DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = "Enero"
NombreMes2 = "ENERO"
ElseIf MonthValor = 2 Then
NombreMes = "Febrero"
NombreMes2 = "FEBRERO"
ElseIf MonthValor = 3 Then
NombreMes = "Marzo"
NombreMes2 = "MARZO"
ElseIf MonthValor = 4 Then
NombreMes = "Abril"
NombreMes2 = "ARBIL"
ElseIf MonthValor = 5 Then
NombreMes = "Mayo"
NombreMes2 = "MAYO"
ElseIf MonthValor = 6 Then
NombreMes = "Junio"
NombreMes2 = "JUNIO"
ElseIf MonthValor = 7 Then
NombreMes = "Julio"
NombreMes2 = "JULIO"
ElseIf MonthValor = 8 Then
NombreMes = "Agosto"
NombreMes2 = "AGOSTO"
ElseIf MonthValor = 9 Then
NombreMes = "Septiembre"
NombreMes2 = "SEPTIEMBRE"
ElseIf MonthValor = 10 Then
NombreMes = "Octubre"
NombreMes2 = "OCTUBRE"
ElseIf MonthValor = 11 Then
NombreMes = "Noviembre"
NombreMes2 = "NOVIEMBRE"
ElseIf MonthValor = 12 Then
NombreMes = "Diciembre"
NombreMes2 = "DICIEMBRE"
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If

'Carpetas Saldos Iniciales
UnidadRutaSalIni = UnidadAsignada & RutaSaldos & MonthLabel & " " & NombreMes & " " & YearLabel & " Monitoreo Saldos Sucursales"
FechaCarpetaSalIni = DayLabel & MonthLabel & YearLabel & " Monitoreo"
carpetaSalIni = UnidadRutaSalIni & "\" & FechaCarpetaSalIni

'Carpetas Confirmaci|fffd|n de Dotaciones
UnidadRutaConfirmaDot = UnidadAsignada & RutaTxtTraspasos & MonthLabel & " " & NombreMes2 & " " & YearLabel & " Traspasos Diarios Txt"
FechaCarpetaConfirmaDot = DayLabel & " " & NombreMes2 & " " & YearLabel & " Traspasos Diarios Txt"

carpetaConfirmaDot = UnidadRutaConfirmaDot & "\" & FechaCarpetaConfirmaDot



'On Error Resume Next

Call ImportarArchivosTxt(CStr(carpetaSalIni), "*", "mm.txt", nombreHojas)

Sheets(sh6).Select

row0 = 1
col0 = 1
totRows = Range("A1000000").End(xlUp).Row
'totCols

'Monitoreo saldos sucursales
If totRows > 2 Then

    Range(Cells(row0, col0), Cells(totRows, col0)).Select
    Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
        :="|", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, _
        1), Array(6, 4)), TrailingMinusNumbers:=True

End If

'si no hay registros de monitoreo
If totRows <= 5 Then
    ReDim MONITOREOS(2, 4)
        'ID SUCURSAL
        MONITOREOS(1, 1) = 0
        'IMPORTE
        MONITOREOS(1, 2) = 0
        'HORA
        MONITOREOS(1, 3) = 0
        'FECHA
        MONITOREOS(1, 4) = 0

        'ID SUCURSAL
        MONITOREOS(2, 1) = 0
        'IMPORTE
        MONITOREOS(2, 2) = 0
        'HORA
        MONITOREOS(2, 3) = 0
        'FECHA
        MONITOREOS(2, 4) = 0

Else

    ReDim MONITOREOS(totRows, 4)
    For i = 1 To UBound(MONITOREOS)
        
        If Cells(i, 1) > 0 Then
        
        'ID SUCURSAL
        MONITOREOS(i, 1) = Cells(i, 1)
        'IMPORTE
        MONITOREOS(i, 2) = Cells(i, 3)
        'HORA
        MONITOREOS(i, 3) = Cells(i, 5)
        'FECHA
        MONITOREOS(i, 4) = Cells(i, 6)
        
        End If
        
    Next i

End If



'COLECCI|fffd|N DE HORAS

For i = 1 To UBound(MONITOREOS)
    
On Error Resume Next

    HORAS.Add MONITOREOS(i, 3), CStr(MONITOREOS(i, 3))

On Error GoTo 0

Next i

ReDim HORASarray(HORAS.Count)

'colecci|fffd|n de horas como arreglo para m|fffd|ximo valor

For i = 1 To UBound(HORASarray)

    HORASarray(i) = HORAS(i)
    
Next i

horaMin = WorksheetFunction.Min(HORASarray)
horaMax = WorksheetFunction.Max(HORASarray)

'MsgBox "horaMin " & Format(horaMin, "hh:mm") & vbNewLine & "horaMax " & Format(horaMax, "hh:mm")




''''''''''''''''''''''''''''''''''CAT|fffd|LOGO SUCURSALES'''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Dim row0CatSuc, col0CatSuc, totRowsCatSuc, totColsCatSuc As Long
Dim punteroIdSuc As Integer
Dim CATALOGO_SUCURSALES() As Variant

'sh4 = "Info. Gral."
Sheets(sh4).Select

row0CatSuc = 2
col0CatSuc = 18
punteroIdSuc = 21
totRowsCatSuc = Cells(row0CatSuc, col0CatSuc).End(xlDown).Row




If totRowsCatSuc <= 3 Then

ReDim CATALOGO_SUCURSALES(2, 5)
        'id sucursal
        CATALOGO_SUCURSALES(1, 1) = 0
        'sucursal
        CATALOGO_SUCURSALES(1, 2) = 0
        'ETV
        CATALOGO_SUCURSALES(1, 3) = 0
        'Plaza
        CATALOGO_SUCURSALES(1, 4) = 0
        'Planeador
        CATALOGO_SUCURSALES(1, 5) = 0

        'id sucursal
        CATALOGO_SUCURSALES(2, 1) = 0
        'sucursal
        CATALOGO_SUCURSALES(2, 2) = 0
        'ETV
        CATALOGO_SUCURSALES(2, 3) = 0
        'Plaza
        CATALOGO_SUCURSALES(2, 4) = 0
        'Planeador
        CATALOGO_SUCURSALES(2, 5) = 0
        
Else

ReDim CATALOGO_SUCURSALES(totRowsCatSuc, 5)
    For i = 1 To UBound(CATALOGO_SUCURSALES)
        'id sucursal
        CATALOGO_SUCURSALES(i, 1) = Cells(row0CatSuc, punteroIdSuc)
        'sucursal
        CATALOGO_SUCURSALES(i, 2) = Cells(row0CatSuc, punteroIdSuc + 1)
        'ETV
        CATALOGO_SUCURSALES(i, 3) = Cells(row0CatSuc, punteroIdSuc - 3)
        'Plaza
        CATALOGO_SUCURSALES(i, 4) = Cells(row0CatSuc, punteroIdSuc - 2)
        'Planeador
        CATALOGO_SUCURSALES(i, 5) = Cells(row0CatSuc, punteroIdSuc - 1)
        
        row0CatSuc = row0CatSuc + 1
        
    Next i

End If



''''''''''''''''''''''''''''''''''CONFIRMACI|fffd|N DE DOTACIONES'''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Dim row0ConfirmaDot, col0ConfirmaDot As Long
', totRowsConfirmaDot, totColsConfirmaDot
Dim CONFIRMA_DOTACIONES() As Variant

Sheets(sh6).Select
Cells.Clear

Call ImportarArchivosTxt(CStr(carpetaConfirmaDot), "*", "Monitoreo Dotaciones.txt", nombreHojas)


row0ConfirmaDot = 1
col0ConfirmaDot = 1
totRowsConfirmaDot = Range("A1000000").End(xlUp).Row
'totCols

If totRowsConfirmaDot = 1 And Len(Cells(row0ConfirmaDot, col0ConfirmaDot).value) > 2 Then
'Monitoreo saldos sucursales
    Range(Cells(row0ConfirmaDot, col0ConfirmaDot), Cells(totRowsConfirmaDot + 1, col0ConfirmaDot)).Select
    Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
        :="|", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 4), Array(4, 1), Array(5, _
        1), Array(6, 1), Array(7, 1), Array(8, 4)), TrailingMinusNumbers:=True

ElseIf totRowsConfirmaDot >= 2 Then
'Monitoreo saldos sucursales
    Range(Cells(row0ConfirmaDot, col0ConfirmaDot), Cells(totRowsConfirmaDot, col0ConfirmaDot)).Select
    Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
        :="|", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 4), Array(4, 1), Array(5, _
        1), Array(6, 1), Array(7, 1), Array(8, 4)), TrailingMinusNumbers:=True

End If


If totRowsConfirmaDot < 1 Then
    ReDim CONFIRMA_DOTACIONES(2, 5)

        'ID SUCURSAL
        CONFIRMA_DOTACIONES(1, 1) = 0
        'FECHA
        CONFIRMA_DOTACIONES(1, 2) = 0
        'IMPORTE
        CONFIRMA_DOTACIONES(1, 3) = 0
        'ETV SERVICIO
        CONFIRMA_DOTACIONES(1, 4) = 0
        'HORA
        CONFIRMA_DOTACIONES(1, 5) = 0
        
        'ID SUCURSAL
        CONFIRMA_DOTACIONES(2, 1) = 0
        'FECHA
        CONFIRMA_DOTACIONES(2, 2) = 0
        'IMPORTE
        CONFIRMA_DOTACIONES(2, 3) = 0
        'ETV SERVICIO
        CONFIRMA_DOTACIONES(2, 4) = 0
        'HORA
        CONFIRMA_DOTACIONES(2, 5) = 0
        
Else

    ReDim CONFIRMA_DOTACIONES(totRowsConfirmaDot, 5)
    For i = 1 To UBound(CONFIRMA_DOTACIONES)
        
        'ID SUCURSAL
        CONFIRMA_DOTACIONES(i, 1) = Cells(i, 1)
        'FECHA
        CONFIRMA_DOTACIONES(i, 2) = Cells(i, 3)
        'IMPORTE
        CONFIRMA_DOTACIONES(i, 3) = Cells(i, 5)
        'ETV SERVICIO
        CONFIRMA_DOTACIONES(i, 4) = Cells(i, 6)
        'HORA
        CONFIRMA_DOTACIONES(i, 5) = Cells(i, 4)
    
    Next i

End If



''''''''''''''''''''''''''''''''''DOTACIONES PROGRAMADAS'''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Dim row0Dot, col0Dot, totRowsDot, totColsDot As Long
Dim DOTACIONES() As Variant
Dim carpetaDotacionesProgramadas, fechaCarpeta As String
Dim diaProgDot, mesProgDot, anioProgDot As Long
Dim diaProgDotLab, mesProgDotLab, anioProgDotLab, nombreMesProgDot As String
Dim fechaProgDot As Date
Dim punteroIdDot, punteroFechaDot, punteroImporteDot, punteroEtvDot As Integer
Dim totalImporteDotaciones, totalPiezasDotaciones, totalImporteDotacionesPend, totalPiezasDotacionesPend, _
    totalImporteDotacionesRecib, totalPiezasDotacionesRecib As Long

punteroIdDot = 5
punteroFechaDot = 9
punteroImporteDot = 17
punteroEtvDot = 7

Sheets(sh6).Select
Cells.Clear

'Fecha de programaci|fffd|n de dotaci|fffd|n{
fechaProgDot = CDate(MONITOREO_SALDOS.diaProgramDotacion.value & "/" & MONITOREO_SALDOS.mesProgramDotacion.value & "/" & MONITOREO_SALDOS.AnioProgramDotacion)

diaProgDot = Day(fechaProgDot)
mesProgDot = Month(fechaProgDot)
anioProgDot = Year(fechaProgDot)

'DIA
If diaProgDot < 10 Then

    diaProgDotLab = "0" & diaProgDot

Else

    diaProgDotLab = diaProgDot

End If

'MES
If mesProgDot < 10 Then

    mesProgDotLab = "0" & mesProgDot

Else

    mesProgDotLab = mesProgDot

End If

Select Case mesProgDot
Case 1
nombreMesProgDot = "ENERO"
Case 2
nombreMesProgDot = "FEBRERO"
Case 3
nombreMesProgDot = "MARZO"
Case 4
nombreMesProgDot = "ABRIL"
Case 5
nombreMesProgDot = "MAYO"
Case 6
nombreMesProgDot = "JUNIO"
Case 7
nombreMesProgDot = "JULIO"
Case 8
nombreMesProgDot = "AGOSTO"
Case 9
nombreMesProgDot = "SEPTIEMBRE"
Case 10
nombreMesProgDot = "OCTUBRE"
Case 11
nombreMesProgDot = "NOVIEMBRE"
Case 12
nombreMesProgDot = "DICIEMBRE"
End Select

'Z:\Planeaciones\Cajas\Planeaciones TXT\05 MAYO 2019 Planeaciones Diarias Txt\17 MAYO 2019 Planeaciones Diarias Txt

fechaCarpeta = mesProgDotLab & " " & nombreMesProgDot & " " & anioProgDot & " Planeaciones Diarias Txt\" & _
                diaProgDotLab & " " & nombreMesProgDot & " " & anioProgDot & " Planeaciones Diarias Txt\"

carpetaDotacionesProgramadas = UnidadAsignada & RutaTxtPlaneaciones & fechaCarpeta


Call ImportarArchivosTxt(CStr(carpetaDotacionesProgramadas), "*", "Programacion Servicios Dotaciones.txt", nombreHojas)

row0Dot = 1
col0Dot = 1
totRowsDot = Range("A1000000").End(xlUp).Row
'totCols

If totRowsDot > 3 Then

'Monitoreo saldos sucursales
    Range(Cells(row0Dot, col0Dot), Cells(totRowsDot, col0Dot)).Select
    Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
        :="|", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), Array(6, 1), Array(7, 1), Array(8, 4), Array(9, 4), Array(10, 1), _
        Array(11, 1), Array(12, 1), Array(13, 1), Array(14, 1), Array(15, 1), Array(16, 1), Array(17, 1), Array(18, 1), Array(19, 1), Array(20, 1), _
        Array(21, 1), Array(22, 1), Array(23, 1), Array(24, 1), Array(25, 1), Array(26, 1), Array(27, 1), Array(28, 1), Array(29, 1), Array(30, 1), _
        Array(31, 1), Array(32, 1), Array(33, 1), Array(34, 1), Array(35, 1), Array(36, 1), Array(37, 1), Array(38, 4), Array(39, 4), Array(40, 4), Array(41, 1)), TrailingMinusNumbers:=True
End If


If totRowsDot <= 5 Then

    ReDim DOTACIONES(UBound(CATALOGO_SUCURSALES), 5)
    
    For i = 1 To UBound(CATALOGO_SUCURSALES)
        'ID SUCURSAL
        DOTACIONES(i, 1) = CATALOGO_SUCURSALES(i, 1)
        'FECHA
        DOTACIONES(i, 2) = 0
        'IMPORTE
        DOTACIONES(i, 3) = 0
        'ETV SERVICIO
        DOTACIONES(i, 4) = 0
        'ESTATUS
        DOTACIONES(i, 5) = ""
        
    
    Next i
    
Else

    'ReDim DOTACIONES(totRowsDot, 5)
    ReDim DOTACIONES(UBound(CATALOGO_SUCURSALES), 5)
    
    
    For i = 1 To UBound(CATALOGO_SUCURSALES)
        'ID SUCURSAL
        DOTACIONES(i, 1) = CATALOGO_SUCURSALES(i, 1)
        
    Next i
    
    Do While Cells(row0Dot, col0Dot) <> ""
    
        For i = 1 To UBound(DOTACIONES)
            'MsgBox "CATALOGO_SUCURSALES(i, 1) = " & TypeName(CATALOGO_SUCURSALES(i, 1)) & vbNewLine & "Cells(i, punteroIdDot) = " & TypeName(Cells(i, punteroIdDot).value)
    
            If DOTACIONES(i, 1) = Cells(row0Dot, punteroIdDot).value Then
'                'ID SUCURSAL
'                DOTACIONES(i, 1) = Cells(i, punteroIdDot)
                'FECHA
                DOTACIONES(i, 2) = Cells(row0Dot, punteroFechaDot)
                'IMPORTE
                DOTACIONES(i, 3) = Cells(row0Dot, punteroImporteDot)
                'ETV SERVICIO
                DOTACIONES(i, 4) = Cells(row0Dot, punteroEtvDot)
                'ESTATUS DOTACI|fffd|N
                For j = 1 To UBound(CONFIRMA_DOTACIONES)
                    
                    If DOTACIONES(i, 1) = CONFIRMA_DOTACIONES(j, 1) Then
                    
                        DOTACIONES(i, 5) = "RECIBIDO"
                        
                        totalImporteDotacionesRecib = totalImporteDotacionesRecib + Cells(row0Dot, punteroImporteDot)
                        totalPiezasDotacionesRecib = totalPiezasDotacionesRecib + 1
                        
                        Exit For

                        
                    ElseIf j = UBound(CONFIRMA_DOTACIONES) And DOTACIONES(i, 3) <> "" Then
                    
                        DOTACIONES(i, 5) = "PENDIENTE"
                        
                        totalImporteDotacionesPend = totalImporteDotacionesPend + Cells(row0Dot, punteroImporteDot)
                        totalPiezasDotacionesPend = totalPiezasDotacionesPend + 1
                        Exit For
                        
'                    ElseIf j = UBound(CONFIRMA_DOTACIONES) Then
'
'                        DOTACIONES(i, 5) = "SIN DOTACI|fffd|N"
'
'                        totalImporteDotacionesPend = 0
'                        totalPiezasDotacionesPend = 0
'                        Exit For
                    End If
                   
                totalImporteDotaciones = totalImporteDotaciones + Cells(row0Dot, punteroImporteDot)
                totalPiezasDotaciones = totalPiezasDotaciones + 1
                
                Next j
                
                
                For k = 1 To UBound(DOTACIONES)
                    
                    If DOTACIONES(k, 5) = "" Then
                        DOTACIONES(k, 5) = "SIN DOTACI|fffd|N"
                    End If
                    
                Next k
                
            End If
            
        Next i
    
    row0Dot = row0Dot + 1
    
    Loop


End If


'Workbooks.Add
'Sheets(1).Select
'For i = 1 To UBound(DOTACIONES)
'
'    Cells(i, 1) = DOTACIONES(i, 1)
'    Cells(i, 2) = DOTACIONES(i, 2)
'    Cells(i, 3) = DOTACIONES(i, 3)
'    Cells(i, 4) = DOTACIONES(i, 4)
'    Cells(i, 5) = DOTACIONES(i, 5)
'Next i
'
'
'
'For i = 1 To UBound(CONFIRMA_DOTACIONES)
'
'    Cells(i, 7) = CONFIRMA_DOTACIONES(i, 1)
'    Cells(i, 8) = CONFIRMA_DOTACIONES(i, 2)
'    Cells(i, 9) = CONFIRMA_DOTACIONES(i, 3)
'    Cells(i, 10) = CONFIRMA_DOTACIONES(i, 4)
'    Cells(i, 11) = CONFIRMA_DOTACIONES(i, 5)
'Next i
'
'Exit Sub
''''''''''''''''''''''''''''''''''CASH OUT OPD-TDD-REMESAS CAPTURADAS''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Dim row0CashOut, col0CashOut, totRowsCashOut As Long
Dim CASH_OUT() As Variant
Dim punteroIdCashOut, punteroOdpCashOut, punteroTddCashOut, punteroRemesasCashOut As Integer
Dim carpetaCashOut, fechaCashOut, am1_pm2RutaCashOut, amCashOut, pmCashOut As String
Dim fechaRegistroCashOut, fechaRegistroPlaneacion As Date
Dim diaCashOut, mesCashOut, AnioCashOut As Long
Dim labelDiaCashOut, labelMesCashOut As String
Dim indicadorHorario As Integer
Dim fechaDefinitiva As Date

amCashOut = "Cash Out AM"
pmCashOut = "Cash Out PM"

punteroIdCashOut = 1
punteroOdpCashOut = 3
punteroRemesasCashOut = 6
punteroTotCashOut = 7

If MONITOREO_SALDOS.amCashOut.value = True Then

    am1_pm2RutaCashOut = "" & amCashOut
    indicadorHorario = 1
    
ElseIf MONITOREO_SALDOS.pmCashOut.value = "" Then

    am1_pm2RutaCashOut = "" & pmCashOut
    indicadorHorario = 2
    
End If


'Fecha registrada en formulario
fechaRegistroCashOut = CDate(MONITOREO_SALDOS.diaCashOut.value & "-" & MONITOREO_SALDOS.mesCashOut.value & "-" & MONITOREO_SALDOS.AnioCashOut.value)
fechaDefinitiva = fechaRegistroCashOut

diaCashOut = Day(fechaRegistroCashOut)
mesCashOut = Month(fechaRegistroCashOut)
AnioCashOut = Year(fechaRegistroCashOut)

'd|fffd|a etiqueta
If diaCashOut < 10 Then

    labelDiaCashOut = "0" & diaCashOut

Else

    labelDiaCashOut = diaCashOut
    
End If

'mes etiqueta
If mesCashOut < 10 Then

    labelMesCashOut = "0" & mesCashOut

Else

    labelMesCashOut = mesCashOut
    
End If

        ''''''''''''dia planeaci|fffd|n en caso de que no haya CASH OUT actualizado'''''''''
        '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
fechaRegistroPlaneacion = CDate(MONITOREO_SALDOS.diaProgramDotacion.value & "-" & MONITOREO_SALDOS.mesProgramDotacion.value & "-" & MONITOREO_SALDOS.AnioProgramDotacion.value)
diaPlaneacion = Day(fechaRegistroPlaneacion)
mesPlaneacion = Month(fechaRegistroPlaneacion)
anioPlaneacion = Year(fechaRegistroPlaneacion)

'd|fffd|a etiqueta
If diaPlaneacion < 10 Then

    labelDiaPlaneacion = "0" & diaPlaneacion

Else

    labelDiaPlaneacion = diaPlaneacion
    
End If

'mes etiqueta
If mesPlaneacion < 10 Then

    labelMesPlaneacion = "0" & mesPlaneacion

Else

    labelMesPlaneacion = mesPlaneacion
    
End If


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Sheets(sh6).Select
Cells.Clear



carpetaCashOut = CStr(UnidadAsignada) & RutaHistoricoPronosticoCO & AnioCashOut & "\" & am1_pm2RutaCashOut & "\"
fechaCashOut = labelDiaCashOut & " " & labelMesCashOut & " " & AnioCashOut

'MsgBox "1" & vbNewLine & carpetaCashOut & vbNewLine & fechaCashOut

ChDrive (UnidadAsignada)
ChDir (carpetaCashOut)
archi = Dir(fechaCashOut & "*" & am1_pm2RutaCashOut & "*")

If archi = "" And am1_pm2RutaCashOut = amCashOut Then

    'fecha pm del d|fffd|a h|fffd|bil anterior
    carpetaCashOut = CStr(UnidadAsignada) & RutaHistoricoPronosticoCO & anioPlaneacion & "\" & pmCashOut & "\"
    fechaCashOut = labelDiaPlaneacion & " " & labelMesPlaneacion & " " & anioPlaneacion
    am1_pm2RutaCashOut = pmCashOut
    indicadorHorario = 2
    fechaDefinitiva = fechaRegistroPlaneacion
    
    ChDrive (UnidadAsignada)
    ChDir (carpetaCashOut)
    archi = Dir(fechaCashOut & "*" & am1_pm2RutaCashOut & "*")

    'SALIR SI NO HAY INFORMACI|fffd|N CON SEGUNDO INTENTO
        If archi = "" Then
            
            MsgBox "NO HAY INFORMACI|fffd|N DE CASH OUT, ACTUALICE INFORMACI|fffd|N O ELIJA OTRA FECHA"
            Exit Sub
        
        End If

End If

'MsgBox "indicadorHorario " & indicadorHorario & vbNewLine & "fechaDefinitiva " & fechaDefinitiva
'Importar archivo de Cash Out
    Call CQ16_ImportarCashOutActualizado(indicadorHorario, fechaDefinitiva)


'
'
'TOTAL DE REGISTROS
totRowsCashOut = Range("A65000").End(xlUp).Row


If totRowsCashOut <= 5 Then

    ReDim CASH_OUT(2, 7)
        'ID SUCURSAL
        CASH_OUT(1, 1) = 0
        'FECHA
        CASH_OUT(1, 2) = 0
        'ODP
        CASH_OUT(1, 3) = 0
        'TDD
        CASH_OUT(1, 4) = 0
        'ODP - TDD
        CASH_OUT(1, 5) = 0
        'REMESAS
        CASH_OUT(1, 6) = 0
        'TOTAL
        CASH_OUT(1, 7) = 0
        
        'ID SUCURSAL
        CASH_OUT(2, 1) = 0
        'FECHA
        CASH_OUT(2, 2) = 0
        'ODP
        CASH_OUT(2, 3) = 0
        'TDD
        CASH_OUT(2, 4) = 0
        'ODP - TDD
        CASH_OUT(2, 5) = 0
        'REMESAS
        CASH_OUT(2, 6) = 0
        'TOTAL
        CASH_OUT(2, 7) = 0


Else
    ReDim CASH_OUT(totRowsCashOut, 7)
    For i = 1 To UBound(CASH_OUT)

        'ID SUCURSAL
        CASH_OUT(i, 1) = Cells(i, punteroIdCashOut)
        'FECHA
        CASH_OUT(i, 2) = Cells(i, punteroIdCashOut + 1)
        'ODP
        CASH_OUT(i, 3) = Cells(i, punteroOdpCashOut)
        'TDD
        CASH_OUT(i, 4) = Cells(i, punteroOdpCashOut + 1)
        'ODP - TDD
        CASH_OUT(i, 5) = Cells(i, punteroOdpCashOut + 2)
        'REMESAS
        CASH_OUT(i, 6) = Cells(i, punteroRemesasCashOut)
        'TOTAL
        CASH_OUT(i, 7) = Cells(i, punteroTotCashOut)

    Next i

End If


''probar resultado en una hoja
'Workbooks.Add
'Sheets(1).Select
'For i = 1 To UBound(CASH_OUT)
'
'Cells(i, 1) = CASH_OUT(i, 1)
'Cells(i, 2) = CASH_OUT(i, 2)
'Cells(i, 3) = CASH_OUT(i, 3)
'Cells(i, 4) = CASH_OUT(i, 4)
'Cells(i, 5) = CASH_OUT(i, 5)
'Cells(i, 6) = CASH_OUT(i, 6)
'Cells(i, 7) = CASH_OUT(i, 7)
'
'Next i


''''''''''''''''''''''''''''''''''     CASH IN  ''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


Dim row0CashIn, col0CashIn, totRowsCashIn As Long
Dim CASH_IN() As Variant
Dim punteroIdCashIn As Integer
Dim carpetaCashIn, fechaCashIn As String
Dim fechaRegistroCashIn, fechaRegistroPlaneacionCashIn As Date
Dim diaCashIn, mesCashIn, AnioCashIn As Long
Dim labelDiaCashIn, labelMesCashIn As String
Dim indicadorHorarioCashIn As Integer
Dim fechaDefinitivaCashIn As Date

'fecha homologada con la fecha establecida para cash out
fechaDefinitivaCashIn = fechaDefinitiva

punteroIdCashIn = 1

diaCashIn = Day(fechaDefinitivaCashIn)
mesCashIn = Month(fechaDefinitivaCashIn)
AnioCashIn = Year(fechaDefinitivaCashIn)

'd|fffd|a etiqueta
If diaCashIn < 10 Then

    labelDiaCashIn = "0" & diaCashIn

Else

    labelDiaCashIn = diaCashIn
    
End If

'mes etiqueta
If mesCashIn < 10 Then

    labelMesCashIn = "0" & mesCashIn

Else

    labelMesCashIn = mesCashIn
    
End If

'limpiar hoja PROCESAR
Sheets(sh6).Select
Cells.Clear



carpetaCashIn = CStr(UnidadAsignada) & RutaCashInHistorico & AnioCashIn & "\"
fechaCashIn = labelDiaCashIn & " " & labelMesCashIn & " " & AnioCashIn


ChDrive (UnidadAsignada)
ChDir (carpetaCashIn)
archi = Dir(fechaCashIn & "*")

If archi = "" Then

    MsgBox "NO HAY ARCHIVO DE CASH IN DE " & fechaCashIn
    Exit Sub
End If

Call ImportarArchivosTxt(CStr(carpetaCashIn), CStr(fechaCashIn), "*", nombreHojas)

Sheets(sh6).Select

row0CashIn = 1
col0CashIn = 1
totRowsCashIn = Range("A1000000").End(xlUp).Row
'totCols

'Monitoreo saldos sucursales
If totRowsCashIn > 2 Then

    Range(Cells(row0CashIn, col0CashIn), Cells(totRowsCashIn, col0CashIn)).Select
    Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
        :="|", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, _
        1), Array(6, 1), Array(7, 1), Array(8, 1), Array(9, 1), Array(10, 1), Array(11, 1) _
        , Array(12, 1), Array(13, 4), Array(14, 4), Array(15, 1)), TrailingMinusNumbers:=True

End If

'si no hay registros de monitoreo
If totRowsCashIn <= 5 Then
    ReDim CASH_IN(2, 12)
        'ID SUCURSAL
        CASH_IN(1, 1) = 0
        'FECHA
        CASH_IN(1, 2) = 0
        'LUNES
        CASH_IN(1, 3) = 0
        'MARTES
        CASH_IN(1, 4) = 0
        'MIERCOLES
        CASH_IN(1, 5) = 0
        'JUEVES
        CASH_IN(1, 6) = 0
        'VIERNES
        CASH_IN(1, 7) = 0
        'SABADO
        CASH_IN(1, 8) = 0
        'DOMINGO
        CASH_IN(1, 9) = 0
        'SIG LUNES
        CASH_IN(1, 10) = 0
        'SIG MARTER
        CASH_IN(1, 11) = 0
        'SIG MIERCOLES
        CASH_IN(1, 12) = 0
        
        'ID SUCURSAL
        CASH_IN(2, 1) = 0
        'FECHA
        CASH_IN(2, 2) = 0
        'LUNES
        CASH_IN(2, 3) = 0
        'MARTES
        CASH_IN(2, 4) = 0
        'MIERCOLES
        CASH_IN(2, 5) = 0
        'JUEVES
        CASH_IN(2, 6) = 0
        'VIERNES
        CASH_IN(2, 7) = 0
        'SABADO
        CASH_IN(2, 8) = 0
        'DOMINGO
        CASH_IN(2, 9) = 0
        'SIG LUNES
        CASH_IN(2, 10) = 0
        'SIG MARTER
        CASH_IN(2, 11) = 0
        'SIG MIERCOLES
        CASH_IN(2, 12) = 0

Else

    ReDim CASH_IN(totRowsCashIn, 12)
    For i = 1 To UBound(CASH_IN)
        
        'If IsNumeric(Cells(i, 1)) Then
        
        'ID SUCURSAL
        CASH_IN(i, 1) = Cells(i, 1)
        'FECHA
        CASH_IN(i, 2) = Cells(i, 13)
        'LUNES
        CASH_IN(i, 3) = Cells(i, 2)
        'MARTES
        CASH_IN(i, 4) = Cells(i, 3)
        'MIERCOLES
        CASH_IN(i, 5) = Cells(i, 4)
        'JUEVES
        CASH_IN(i, 6) = Cells(i, 5)
        'VIERNES
        CASH_IN(i, 7) = Cells(i, 6)
        'SABADO
        CASH_IN(i, 8) = Cells(i, 7)
        'DOMINGO
        CASH_IN(i, 9) = Cells(i, 8)
        'SIG LUNES
        CASH_IN(i, 10) = Cells(i, 9)
        'SIG MARTES
        CASH_IN(i, 11) = Cells(i, 10)
        'SIG MIERCOLES
        CASH_IN(i, 12) = Cells(i, 11)
        
        'End If
        
    Next i

End If


''''''''''''''''''''''''''''''''''MODELO PRON|fffd|STICO DE EFECTIVO'''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Dim row0Modelo, col0Modelo As Long
Dim MODELO() As Variant
Dim punteroLimOpModelo, punterocIcOmodelo, punterodotModelo As Integer
Dim carpetaModelo, fechaModelo As String
Dim diaCashOutModelo, diaDotacionModelo As Integer

punteroIdModelo = 1
punteroLimOpModelo = 9
punterocIcOmodelo = 24
punterodotModelo = 41

Sheets(sh6).Select
Cells.Clear

carpetaModelo = UnidadAsignada & RutaPronosticoHistorico & YearLabel & "\" & CarpetaPronosticoHistoricoAM & "\"
'fecha del d|fffd|a de monitoreo
fechaModelo = CStr(DayLabel & " " & MonthLabel & " " & YearLabel)

'elegir el n|fffd|mero de campo del arreglo MODELO
Select Case Weekday(fechaValor, vbMonday)

    Case 1
        diaCashOutModelo = 3
        diaDotacionModelo = 11
    Case 2
        diaCashOutModelo = 4
        diaDotacionModelo = 12
    Case 3
        diaCashOutModelo = 5
        diaDotacionModelo = 13
    Case 4
        diaCashOutModelo = 6
        diaDotacionModelo = 14
    Case 5
        diaCashOutModelo = 7
        diaDotacionModelo = 15
    
End Select


ChDrive (UnidadAsignada)
ChDir (carpetaModelo)
archi = Dir(carpetaModelo & fechaModelo & "*")

'si no hay modelo del d|fffd|a ir un d|fffd|a antes
If archi = "" Then

    fechaModelo = CStr(diaProgDotLab & " " & mesProgDotLab & " " & anioProgDot)

End If


Call ImportarArchivosTxt(CStr(carpetaModelo), fechaModelo, "*Modelo Pronostico am.txt*", nombreHojas)


row0Modelo = 1
col0Modelo = 1
totRowsModelo = Range("A1000000").End(xlUp).Row
'totCols

If totRowsModelo > 3 Then
'Monitoreo saldos sucursales
    Range(Cells(row0Modelo, col0Modelo), Cells(totRowsModelo, col0Modelo)).Select
    Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
        :="|", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 4), Array(4, 1), Array(5, 1), Array(6, 1), Array(7, 1), Array(8, 1), Array(9, 1), Array(10, 1), _
        Array(11, 1), Array(12, 1), Array(13, 4), Array(14, 1), Array(15, 1), Array(16, 1), Array(17, 1), Array(18, 1), Array(19, 1), Array(20, 1), _
        Array(21, 1), Array(22, 1), Array(23, 4), Array(24, 1), Array(25, 1), Array(26, 1), Array(27, 1), Array(28, 1), Array(29, 1), Array(30, 1), _
        Array(31, 1), Array(32, 1), Array(33, 4), Array(34, 1), Array(35, 1), Array(36, 1), Array(37, 1), Array(38, 1), Array(39, 1), Array(40, 1), _
        Array(41, 1), Array(42, 1), Array(43, 4), Array(44, 1), Array(45, 1), Array(46, 1), Array(47, 1), Array(48, 1), Array(49, 1), Array(50, 1), _
        Array(51, 1), Array(52, 1), Array(53, 4), Array(54, 1), Array(55, 1), Array(56, 1), Array(57, 1), Array(58, 1), Array(59, 1), Array(60, 1), _
        Array(61, 1), Array(62, 1), Array(63, 4), Array(64, 1), Array(65, 1), Array(66, 1), Array(67, 1), Array(68, 1), Array(69, 1), Array(70, 1), _
        Array(71, 1), Array(72, 1), Array(73, 4), Array(74, 1), Array(75, 1), Array(76, 1), Array(77, 1), Array(78, 1), Array(79, 1), Array(80, 1), _
        Array(81, 1), Array(82, 1), Array(83, 4), Array(84, 1), Array(85, 1), Array(86, 1), Array(87, 1), Array(88, 1), Array(89, 1), Array(90, 1)), TrailingMinusNumbers:=True

End If

If totRowsModelo <= 5 Then

    ReDim MODELO(2, 18)
        'ID SUCURSAL
        MODELO(1, 1) = 0
        'L|fffd|MITE OPERATIVO
        MODELO(1, 2) = 0
        'CICO LUNES
        MODELO(1, 3) = 0
        'CICO MARTES
        MODELO(1, 4) = 0
        'CICO MIERCOLES
        MODELO(1, 5) = 0
        'CICO JUEVES
        MODELO(1, 6) = 0
        'CICO VIERNES
        MODELO(1, 7) = 0
        'CICO SABADO
        MODELO(1, 8) = 0
        'CICO DOMINGO
        MODELO(1, 9) = 0
        'CICO SIG LUNES
        MODELO(1, 10) = 0
        
        'DOTACION LUNES
        MODELO(1, 11) = 0
        'DOTACION MARTES
        MODELO(1, 12) = 0
        'DOTACION MI|fffd|RCOLES
        MODELO(1, 13) = 0
        'DOTACION JUEVES
        MODELO(1, 14) = 0
        'DOTACION VIERNES
        MODELO(1, 15) = 0
        'DOTACION SABADO
        MODELO(1, 16) = 0
        'DOTACION DOMINGO
        MODELO(1, 17) = 0
        'DOTACION SIG LUNES
        MODELO(1, 18) = 0
       
        MODELO(2, 1) = 0
        'L|fffd|MITE OPERATIVO
        MODELO(2, 2) = 0
        'CICO LUNES
        MODELO(2, 3) = 0
        'CICO MARTES
        MODELO(2, 4) = 0
        'CICO MI|fffd|RCOLES
        MODELO(2, 5) = 0
        'CICO JUEVES
        MODELO(2, 6) = 0
        'CICO VIERNES
        MODELO(2, 7) = 0
        'CICO SABADO
        MODELO(2, 8) = 0
        'CICO DOMINGO
        MODELO(2, 9) = 0
        'CICO SIG LUNES
        MODELO(2, 10) = 0
        
        'DOTACION LUNES
        MODELO(2, 11) = 0
        'DOTACION MARTES
        MODELO(2, 12) = 0
        'DOTACION MI|fffd|RCOLES
        MODELO(2, 13) = 0
        'DOTACION JUEVES
        MODELO(2, 14) = 0
        'DOTACION VIENES
        MODELO(2, 15) = 0
        'DOTACION S|fffd|BADO
        MODELO(2, 16) = 0
        'DOTACION DOMINGO
        MODELO(2, 17) = 0
        'DOTACION SIG LUNES
        MODELO(2, 18) = 0
        
Else
    ReDim MODELO(totRowsModelo, 18)
    For i = 1 To UBound(MODELO)
        
        'ID SUCURSAL
        MODELO(i, 1) = Cells(i, punteroIdModelo)
        'L|fffd|MITE OPERATIVO
        MODELO(i, 2) = Cells(i, punteroLimOpModelo)
        'CICO LUNES
        MODELO(i, 3) = Cells(i, punterocIcOmodelo)
        'CICO MARTES
        MODELO(i, 4) = Cells(i, punterocIcOmodelo + 1)
        'CICO MI|fffd|RCOLES
        MODELO(i, 5) = Cells(i, punterocIcOmodelo + 2)
        'CICO JUEVES
        MODELO(i, 6) = Cells(i, punterocIcOmodelo + 3)
        'CICO VIERNES
        MODELO(i, 7) = Cells(i, punterocIcOmodelo + 4)
        'CICO S|fffd|BADO
        MODELO(i, 8) = Cells(i, punterocIcOmodelo + 5)
        'CICO DOMINGO
        MODELO(i, 9) = Cells(i, punterocIcOmodelo + 6)
        'CICO SIG LUNES
        MODELO(i, 10) = Cells(i, punterocIcOmodelo + 7)
        
        'DOTACION LUNES
        MODELO(i, 11) = Cells(i, punterodotModelo)
        'DOTACION MARTES
        MODELO(i, 12) = Cells(i, punterodotModelo + 1)
        'DOTACION MI|fffd|RCOLES
        MODELO(i, 13) = Cells(i, punterodotModelo + 2)
        'DOTACION JUEVES
        MODELO(i, 14) = Cells(i, punterodotModelo + 3)
        'DOTACION VIERNES
        MODELO(i, 15) = Cells(i, punterodotModelo + 4)
        'DOTACION S|fffd|BADO
        MODELO(i, 16) = Cells(i, punterodotModelo + 5)
        'DOTACION DOMINGO
        MODELO(i, 17) = Cells(i, punterodotModelo + 6)
        'DOTACION SIG LUNES
        MODELO(i, 18) = Cells(i, punterodotModelo + 7)
    Next i

End If

''''''''''''''''''''''''''''''''''CICO CAPTURADO vs CICO MODELO'''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Dim CICO_ACTUAL() As Variant
Dim maxIdSuc As Long

ReDim CICO_ACTUAL(UBound(MODELO), 6)

    For i = 1 To UBound(MODELO)
    
    'Idsuc
    CICO_ACTUAL(i, 1) = MODELO(i, 1)
    
    'Cash In
    For j = 1 To UBound(CASH_IN)
    
        If MODELO(i, 1) = CASH_IN(j, 1) Then
        
            CICO_ACTUAL(i, 2) = CASH_IN(j, diaActualCashIn)
            'MsgBox "diaActualCashIn " & diaActualCashIn & vbNewLine & CASH_IN(j, diaActualCashIn)
            Exit For
        End If
    
    Next j
    
    'Cash Out Capturado
    For k = 1 To UBound(CASH_OUT)
    
        If MODELO(i, 1) = CASH_OUT(k, 1) Then
        
            CICO_ACTUAL(i, 3) = Val(CASH_OUT(k, 7)) * -1
            Exit For
        End If
    
    Next k

    
    'CICO Capturado
    CICO_ACTUAL(i, 4) = CICO_ACTUAL(i, 2) + CICO_ACTUAL(i, 3)
    
    'CICO Modelo
    CICO_ACTUAL(i, 5) = MODELO(i, diaActualModeloCiCo)
   
    'CICO MAYOR
    If CICO_ACTUAL(i, 4) < CICO_ACTUAL(i, 5) Then
        
        CICO_ACTUAL(i, 6) = CICO_ACTUAL(i, 4)
    
    ElseIf CICO_ACTUAL(i, 5) < CICO_ACTUAL(i, 4) Then
        
        CICO_ACTUAL(i, 6) = CICO_ACTUAL(i, 5)
    
    End If
    
    Next i
    
''''''''''''''''''''''''''''''''''SALDO INICIAL'''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Dim row0SaldoIni, col0SaldoIni, totRowsSaldoIni, totColsSaldoIni As Long
Dim SALDO_INICIAL() As Variant
Dim fechaInicial As Date
Dim NombreMesIni, NombreMesIni2 As String
Dim DayValorIni, MonthValorIni, YearValorIni As String
Dim DayLabelIni, MonthLabelIni, YearLabelIni As String
Dim sucRojo, sucAmarillo, sucVerde As Long
Dim suma_SALDO_INICIAL As Currency
Dim cuenta_SALDO_INICIAL As Long

fechaInicial = fechaValor - 1

DayValorIni = Day(fechaInicial)
MonthValorIni = Month(fechaInicial)
YearValorIni = Year(fechaInicial)

'A|fffd|o etiqueta
YearLabelIni = YearValorIni

'D|fffd|a etiqueta
If DayValorIni < 10 Then
    DayLabelIni = "0" & DayValorIni
Else
    DayLabelIni = DayValorIni
End If

'nombre mes
If MonthValorIni = 1 Then
NombreMesIni = "Enero"
NombreMesIni2 = "ENERO"
ElseIf MonthValor = 2 Then
NombreMesIni = "Febrero"
NombreMesIni2 = "FEBRERO"
ElseIf MonthValor = 3 Then
NombreMesIni = "Marzo"
NombreMesIni2 = "MARZO"
ElseIf MonthValor = 4 Then
NombreMesIni = "Abril"
NombreMesIni2 = "ARBIL"
ElseIf MonthValor = 5 Then
NombreMesIni = "Mayo"
NombreMesIni2 = "MAYO"
ElseIf MonthValor = 6 Then
NombreMesIni = "Junio"
NombreMesIni2 = "JUNIO"
ElseIf MonthValor = 7 Then
NombreMesIni = "Julio"
NombreMesIni2 = "JULIO"
ElseIf MonthValor = 8 Then
NombreMesIni = "Agosto"
NombreMesIni2 = "AGOSTO"
ElseIf MonthValor = 9 Then
NombreMesIni = "Septiembre"
NombreMesIni2 = "SEPTIEMBRE"
ElseIf MonthValor = 10 Then
NombreMesIni = "Octubre"
NombreMesIni2 = "OCTUBRE"
ElseIf MonthValor = 11 Then
NombreMesIni = "Noviembre"
NombreMesIni2 = "NOVIEMBRE"
ElseIf MonthValor = 12 Then
NombreMesIni = "Diciembre"
NombreMesIni2 = "DICIEMBRE"
End If

'Mes etiqueta
If MonthValorIni < 10 Then
    MonthLabelIni = "0" & MonthValorIni
Else
    MonthLabelIni = MonthValorIni
End If

'Carpetas Confirmaci|fffd|n de Dotaciones
UnidadRutaIni = UnidadAsignada & RutaSaldoInicial & MonthLabelIni & " " & NombreMesIni & " " & YearLabelIni & " Saldos Sucursales"
FechaCarpetaIni = DayLabelIni & " " & MonthLabelIni & " " & YearLabelIni & " SALDOS_SUCURSALES"

carpetaIni = UnidadRutaIni

'MsgBox carpetaIni
'MsgBox FechaCarpetaIni

Sheets(sh6).Select
Cells.Clear


Call ImportarArchivosTxt(CStr(carpetaIni), CStr(FechaCarpetaIni), ".txt", nombreHojas)


row0SaldoIni = 1
col0SaldoIni = 1
totRowsSaldoIni = Range("A1000000").End(xlUp).Row
'totCols

If totRowsSaldoIni > 3 Then
'Monitoreo saldos sucursales
    Range(Cells(row0SaldoIni, col0SaldoIni), Cells(totRowsSaldoIni, col0SaldoIni)).Select
    Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
        :="|", FieldInfo:=Array(Array(1, 4), Array(2, 1), Array(3, 4), Array(4, 1), Array(5, _
        1), Array(6, 4)), TrailingMinusNumbers:=True

End If

        suma_SALDO_INICIAL = 0
        cuenta_SALDO_INICIAL = 0
        
If totRowsSaldoIni <= 5 Then

    ReDim SALDO_INICIAL(2, 4)

        'ID SUCURSAL
        SALDO_INICIAL(1, 1) = 0
        'FECHA
        SALDO_INICIAL(1, 2) = 0
        'IMPORTE
        SALDO_INICIAL(1, 3) = 0
        'DIAS INVENTARIO
        SALDO_INICIAL(1, 4) = 0

        'ID SUCURSAL
        SALDO_INICIAL(2, 1) = 0
        'FECHA
        SALDO_INICIAL(2, 2) = 0
        'IMPORTE
        SALDO_INICIAL(2, 3) = 0
        'DIAS INVENTARIO
        SALDO_INICIAL(2, 4) = 0
        
        suma_SALDO_INICIAL = 0
        cuenta_SALDO_INICIAL = 0
Else
    
    ReDim SALDO_INICIAL(totRowsSaldoIni, 4)
    For i = 1 To UBound(SALDO_INICIAL)
        
        'ID SUCURSAL
        SALDO_INICIAL(i, 1) = Cells(i, 2)
        'FECHA
        SALDO_INICIAL(i, 2) = Cells(i, 1)
        'IMPORTE
        SALDO_INICIAL(i, 3) = Cells(i, 4)

        'DIAS INVENTARIO
            For j = 1 To UBound(MODELO)
            
                If MODELO(j, 1) = SALDO_INICIAL(i, 1) Then
                    
                    'IMPORTE / L|fffd|MITE OPERATIVO
                    SALDO_INICIAL(i, 4) = SALDO_INICIAL(i, 3) / Abs(MODELO(j, 2))
                    Exit For
                End If
            
            Next j
        
        'cifras control SALDO INICIAL
        If IsNumeric(SALDO_INICIAL(i, 3)) Then
            
            suma_SALDO_INICIAL = suma_SALDO_INICIAL + SALDO_INICIAL(i, 3)
            cuenta_SALDO_INICIAL = cuenta_SALDO_INICIAL + 1
            
        End If
        
    Next i

End If


''''''''''''''''''''''''''''''''''ACTUALIZACI|fffd|N MONITOREO - |fffd|LTIMO MONITOREO''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Dim ULTIMO_MONITOREO() As Variant
Dim suma_ULTIMO_MONITOREO As Double
Dim cuenta_ULTIMO_MONITOREO As Long
Dim contadorUltMon As Long

contadorUltMon = 1

If UBound(MONITOREOS) < 5 Then

        ReDim ULTIMO_MONITOREO(UBound(SALDO_INICIAL), 4)
        
        For j = 1 To UBound(SALDO_INICIAL)
                'ID SUCURSAL
                ULTIMO_MONITOREO(j, 1) = SALDO_INICIAL(j, 1)
                'IMPORTE
                ULTIMO_MONITOREO(j, 2) = SALDO_INICIAL(j, 3)
                'HORA
                ULTIMO_MONITOREO(j, 3) = 0.375
                'DIAS INVENTARIO
                ULTIMO_MONITOREO(j, 4) = SALDO_INICIAL(j, 4)
        
        Next j
    '9:00 am
    horaMax = 0.375
    
Else

    ReDim ULTIMO_MONITOREO(UBound(MONITOREOS), 4)
    
    For i = 1 To UBound(MONITOREOS)
    
        If MONITOREOS(i, 3) = horaMax Then
        
            'MONITOREO(i, 1) MONITOREO(i, 3)
                'ID SUCURSAL
                ULTIMO_MONITOREO(contadorUltMon, 1) = MONITOREOS(i, 1)
                'IMPORTE
                ULTIMO_MONITOREO(contadorUltMon, 2) = MONITOREOS(i, 2)
                'HORA
                ULTIMO_MONITOREO(contadorUltMon, 3) = MONITOREOS(i, 3)
                'DIAS INVENTARIO
                For j = 1 To UBound(MODELO)
                
                    If MODELO(j, 1) = MONITOREOS(i, 1) Then
                        
                        'IMPORTE / L|fffd|MITE OPERATIVO
                        ULTIMO_MONITOREO(contadorUltMon, 4) = MONITOREOS(i, 2) / Abs(MODELO(j, 2))
                        Exit For
                    End If
                
                Next j
                
                contadorUltMon = contadorUltMon + 1
                
                suma_ULTIMO_MONITOREO = suma_ULTIMO_MONITOREO + MONITOREOS(i, 2)
                cuenta_ULTIMO_MONITOREO = cuenta_ULTIMO_MONITOREO + 1
          
          End If
          
    Next i
    

    
End If

''''''''''''''''''''''''''''''''''REPORTE SALDOS''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'HOJA 1
Dim row0ReporteA, row0ReporteAFormato, col0ReporteA, totRowsReporteA, totColsReporteA, _
    punteroFormulaIni, punteroFormulaFin, row0Totales As Long
'HOJA2
Dim row0ReporteB, row0ReporteBFormato, col0ReporteB, totRowsReporteB, totColsReporteB, _
    punteroFormulaIniB, punteroFormulaFinB, row0TotalesB As Long
Dim punteroLimOp, punteroSaldoIni, punteroDotacion, punteroSaldoActual, punteroConfirmaDot As Integer
Dim hojaReporte01, hojaReporte02, hojaReporte03 As String

'nombre de las hojas del reporte
hojaReporte01 = "Saldos"
hojaReporte02 = "CI-CO"
hojaReporte03 = ""

'HOJA 1 SALDOS
row0ReporteA = 13
row0ReporteAFormato = 13
col0ReporteA = 1

punteroLimOp = 4
punteroSaldoIni = 5
punteroSaldoActual = 7
punteroDotacion = 9
punteroConfirmaDot = 10

'HOJA 2 CI-CO
row0ReporteB = 13
row0ReporteBFormato = 13
col0ReporteB = 1

'hoja 1''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'hoja 1''''''''''''''''''''''''''''HOJA SALDOS'''''''''''''''''''''''''''''''''
'hoja 1''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'Agregar libro nuevo
Workbooks.Add
ActiveSheet.Name = hojaReporte01


For i = 1 To UBound(CATALOGO_SUCURSALES)
    'id suc
    Cells(row0ReporteA, 1) = CATALOGO_SUCURSALES(i, 1)
    'sucursal
    Cells(row0ReporteA, 2) = CATALOGO_SUCURSALES(i, 2)
    'planeador
    Cells(row0ReporteA, 3) = CATALOGO_SUCURSALES(i, 5)
    
    'SALDO INICIAL
    For m = 1 To UBound(SALDO_INICIAL)
        
        If SALDO_INICIAL(m, 1) = CATALOGO_SUCURSALES(i, 1) Then
        
            'saldo inicial
            Cells(row0ReporteA, punteroSaldoIni) = SALDO_INICIAL(m, 3)
            'd|fffd|as de inventario saldo inicial
            Cells(row0ReporteA, punteroSaldoIni + 1) = SALDO_INICIAL(m, 4)
            
            Exit For
        
        End If
        
    Next m
    
'    'SALDO MONITOREO
'    For j = 1 To UBound(MONITOREOS)
'
'        If MONITOREOS(j, 1) = CATALOGO_SUCURSALES(i, 1) And MONITOREOS(j, 3) = horaMax Then
'
'            'saldo monitoreo
'            Cells(row0ReporteA, punteroSaldoActual) = MONITOREOS(j, 2)
'
'        Exit For
'
'        End If
'
'    Next j
    
'    'ULTIMO_MONITOREO
    For j = 1 To UBound(ULTIMO_MONITOREO)

        If ULTIMO_MONITOREO(j, 1) = CATALOGO_SUCURSALES(i, 1) Then

            'saldo monitoreo
            Cells(row0ReporteA, punteroSaldoActual) = ULTIMO_MONITOREO(j, 2)
            'd|fffd|as de inventario saldo monitoreo
            Cells(row0ReporteA, punteroSaldoActual + 1) = ULTIMO_MONITOREO(j, 4)
        Exit For
    
        End If

    Next j

    'CONFIRMACI|fffd|N DOTACIONES
    For k = 1 To UBound(CONFIRMA_DOTACIONES)
        
        If CONFIRMA_DOTACIONES(k, 1) = CATALOGO_SUCURSALES(i, 1) Then
        
        'saldo monitoreo
        Cells(row0ReporteA, punteroConfirmaDot) = CONFIRMA_DOTACIONES(k, 3)
        'hora saldo monitoreo
        Cells(row0ReporteA, punteroConfirmaDot + 1) = CONFIRMA_DOTACIONES(k, 5)
        
        Exit For
        
        End If
        
    Next k
   
    'DOTACIONES PROGRAMADAS
    For n = 1 To UBound(DOTACIONES)
        
        If DOTACIONES(n, 1) = CATALOGO_SUCURSALES(i, 1) Then
        
        'importe dotaciones
        Cells(row0ReporteA, punteroDotacion) = DOTACIONES(n, 3)
        
        Exit For
        
        End If
        
    Next n
  
    'L|fffd|MITE OPERATIVO
    For o = 1 To UBound(MODELO)
        
        If MODELO(o, 1) = CATALOGO_SUCURSALES(i, 1) Then
        
        'importe dotaciones
        Cells(row0ReporteA, punteroLimOp) = Abs(MODELO(o, 2))
        
        Exit For
        
        End If
        
    Next o
    
'    'DIAS L|fffd|MITE OPERATIVO
'    If Cells(row0ReporteA, 1) <> "" Then
'
'        Cells(row0ReporteA, punteroSaldoIni + 1).FormulaR1C1 = "=IFERROR(RC[-1]/RC[-2],0)"
'        Cells(row0ReporteA, punteroSaldoActual + 1).FormulaR1C1 = "=IFERROR(RC[-1]/RC[-4],0)"
'
'    End If
    
    row0ReporteA = row0ReporteA + 1
    
Next i


''''''''''''''''''''''''''ENCABEZADOS'''''''''''''''''''''''''''''''''''''
totRowsReporteA = Range("A65000").End(xlUp).Row

row0Totales = 5
'inicio de rango de detalle para f|fffd|rmulas de cifras control
punteroFormulaIni = row0ReporteAFormato - punteroSaldoIni
'fin del rango de detalle para f|fffd|rmulas de cifras control
punteroFormulaFin = totRowsReporteA - punteroSaldoIni


'T|fffd|tulo
Cells(1, 2) = "M O N I T O R E O    S A L D O S    S U C U R S A L E S     " & _
    Format(fechaValor, "dddd dd mmmm yyyy") & "     " & _
    Format(horaMax, "hh:mm AM/PM")

'totales D|fffd|AS DE INVENTARIO
Cells(row0Totales - 2, 2) = "D |fffd| A S   D E   I N V E N T A R I O"


'totales encabezado MENOR A 1 D|fffd|AS
Cells(row0Totales - 1, 2) = "Estatus"
Cells(row0Totales - 1, 3) = "Num Suc"
Cells(row0Totales - 1, 4) = "Saldo"
Cells(row0Totales - 1, 5) = "%"

'totales encabezado MENOR A 1 D|fffd|AS
Cells(row0Totales, 2) = "MENOR A 1 D|fffd|AS"
'totales encabezado MENOR A 2 D|fffd|AS
Cells(row0Totales + 1, 2) = "MENOR A 2 D|fffd|AS"
'totales encabezado SUFICIENTE
Cells(row0Totales + 2, 2) = "SUFICIENTE"
'totales encabezado M|fffd|S DE 7 D|fffd|AS
Cells(row0Totales + 3, 2) = "M|fffd|S DE 7 D|fffd|AS"
'totales encabezado M|fffd|S DE 10 D|fffd|AS
Cells(row0Totales + 4, 2) = "M|fffd|S DE 10 D|fffd|AS"
'totales encabezado TOTAL
Cells(row0Totales + 5, 2) = "TOTAL"


'F|fffd|RMULAS INVENTARIO DIAS
'totales encabezado MENOR A 1 D|fffd|AS
Cells(row0Totales, 3).FormulaR1C1 = "=COUNTIFS(R[" & punteroFormulaIni & "]C[5]:R[" & punteroFormulaFin & "]C[5],""<=""&1)"
Cells(row0Totales, 4).FormulaR1C1 = _
        "=SUMIFS(R[" & punteroFormulaIni & "]C[3]:R[" & punteroFormulaFin & "]C[3],R[" & punteroFormulaIni & "]C[4]:R[" & punteroFormulaFin & "]C[4],""<=""&1)"
Cells(row0Totales, 5).FormulaR1C1 = "=RC[-2]/R10C3"

'totales encabezado MENOR A 2 D|fffd|AS
Cells(row0Totales + 1, 3).FormulaR1C1 = _
        "=COUNTIFS(R[" & punteroFormulaIni - 1 & "]C[5]:R[" & punteroFormulaFin - 1 & "]C[5],""<""&2,R[" & punteroFormulaIni - 1 & "]C[5]:R[" & punteroFormulaFin - 1 & "]C[5],"">""&1)"
Cells(row0Totales + 1, 4).FormulaR1C1 = _
        "=SUMIFS(R[" & punteroFormulaIni - 1 & "]C[3]:R[" & punteroFormulaFin - 1 & "]C[3],R[" & punteroFormulaIni - 1 & "]C[4]:R[" & punteroFormulaFin - 1 & "]C[4],""<""&2,R[" & punteroFormulaIni - 1 & "]C[4]:R[" & punteroFormulaFin - 1 & "]C[4],"">""&1)"
Cells(row0Totales + 1, 5).FormulaR1C1 = "=RC[-2]/R10C3"

'totales encabezado SUFICIENTE
Cells(row0Totales + 2, 3).FormulaR1C1 = _
        "=COUNTIFS(R[" & punteroFormulaIni - 2 & "]C[5]:R[" & punteroFormulaFin - 2 & "]C[5],""<=""&7,R[" & punteroFormulaIni - 2 & "]C[5]:R[" & punteroFormulaFin - 2 & "]C[5],"">=""&2)"
Cells(row0Totales + 2, 4).FormulaR1C1 = _
        "=SUMIFS(R[" & punteroFormulaIni - 2 & "]C[3]:R[" & punteroFormulaFin - 2 & "]C[3],R[" & punteroFormulaIni - 2 & "]C[4]:R[" & punteroFormulaFin - 2 & "]C[4],""<=""&7,R[" & punteroFormulaIni - 2 & "]C[4]:R[" & punteroFormulaFin - 2 & "]C[4],"">=""&2)"
Cells(row0Totales + 2, 5).FormulaR1C1 = "=RC[-2]/R10C3"

'totales encabezado M|fffd|S DE 7 D|fffd|AS
Cells(row0Totales + 3, 3).FormulaR1C1 = _
        "=COUNTIFS(R[" & punteroFormulaIni - 3 & "]C[5]:R[" & punteroFormulaFin - 3 & "]C[5],"">""&7,R[" & punteroFormulaIni - 3 & "]C[5]:R[" & punteroFormulaFin - 3 & "]C[5],""<=""&10)"
Cells(row0Totales + 3, 4).FormulaR1C1 = _
        "=SUMIFS(R[" & punteroFormulaIni - 3 & "]C[3]:R[" & punteroFormulaFin - 3 & "]C[3],R[" & punteroFormulaIni - 3 & "]C[4]:R[" & punteroFormulaFin - 3 & "]C[4],"">""&7,R[" & punteroFormulaIni - 3 & "]C[4]:R[" & punteroFormulaFin - 3 & "]C[4],""<=""&10)"
Cells(row0Totales + 3, 5).FormulaR1C1 = "=RC[-2]/R10C3"

'totales encabezado M|fffd|S DE 10 D|fffd|AS
Cells(row0Totales + 4, 3).FormulaR1C1 = "=COUNTIFS(R[" & punteroFormulaIni - 4 & "]C[5]:R[" & punteroFormulaFin - 4 & "]C[5],"">""&10)"
Cells(row0Totales + 4, 4).FormulaR1C1 = _
        "=SUMIFS(R[" & punteroFormulaIni - 4 & "]C[3]:R[" & punteroFormulaFin - 4 & "]C[3],R[" & punteroFormulaIni - 4 & "]C[4]:R[" & punteroFormulaFin - 4 & "]C[4],"">""&10)"
Cells(row0Totales + 4, 5).FormulaR1C1 = "=RC[-2]/R10C3"

'totales encabezado TOTAL
Cells(row0Totales + 5, 3).FormulaR1C1 = "=SUM(R[-5]C:R[-1]C)"
Cells(row0Totales + 5, 4).FormulaR1C1 = "=SUM(R[-5]C:R[-1]C)"
Cells(row0Totales + 5, 5).FormulaR1C1 = "=RC[-2]/R10C3"

    
    
'totales DOTACIONES
Cells(row0Totales - 2, 7) = "D O T A C I O N E S"
'totales encabezado PROGRAMADAS
Cells(row0Totales, 7) = "PROGRAMADAS"
'totales encabezado RECIBIDAS
Cells(row0Totales + 1, 7) = "RECIBIDAS"
'totales encabezado PENDIENTES
Cells(row0Totales + 2, 7) = "PENDIENTES"
''totales encabezado TOTAL
'Cells(row0Totales + 3, 7) = "TOTAL"

'totales DOTACIONES
Cells(row0Totales - 1, 7) = "Concepto"
Cells(row0Totales - 1, 8) = "Num"
Cells(row0Totales - 1, 9) = "Importe"
Cells(row0Totales - 1, 10) = "%"

'FORMULAS DOTACIONES
'totales encabezado PROGRAMADAS
Cells(row0Totales, 8).FormulaR1C1 = "=COUNTIF(R[" & punteroFormulaIni & "]C[1]:R[" & punteroFormulaFin & "]C[1],""<>""&"""")"
Cells(row0Totales, 9).FormulaR1C1 = "=SUMIF(R[" & punteroFormulaIni & "]C:R[" & punteroFormulaFin & "]C,""<>""&"""",R[" & punteroFormulaIni & "]C:R[" & punteroFormulaFin & "]C)"
Cells(row0Totales, 10).FormulaR1C1 = "=RC[-2]/R5C8"

'totales encabezado RECIBIDAS
Cells(row0Totales + 1, 8).FormulaR1C1 = "=COUNTIF(R[" & punteroFormulaIni - 1 & "]C[2]:R[" & punteroFormulaFin - 1 & "]C[2],""<>""&"""")"
Cells(row0Totales + 1, 9).FormulaR1C1 = _
        "=SUMIF(R[" & punteroFormulaIni - 1 & "]C[1]:R[" & punteroFormulaFin - 1 & "]C[1],""<>""&"""",R[" & punteroFormulaIni - 1 & "]C[1]:R[" & punteroFormulaFin - 1 & "]C[1])"
Cells(row0Totales + 1, 10).FormulaR1C1 = "=RC[-2]/R5C8"

'totales encabezado PENDIENTES
Cells(row0Totales + 2, 8).FormulaR1C1 = "=R[-2]C-R[-1]C"
Cells(row0Totales + 2, 9).FormulaR1C1 = "=R[-2]C-R[-1]C"
Cells(row0Totales + 2, 10).FormulaR1C1 = "=RC[-2]/R5C8"

''totales encabezado TOTAL
'Cells(row0Totales + 3, 8).FormulaR1C1 = "=SUM(R[-3]C:R[-1]C)"
'Cells(row0Totales + 3, 9).FormulaR1C1 = "=SUM(R[-3]C:R[-1]C)"
'Cells(row0Totales + 3, 10).FormulaR1C1 = "=RC[-2]/R8C8"

    
'encabezados ID SUCURSAL
Cells(row0ReporteAFormato - 1, 1) = "IdSuc"
'encabezados SUCURSAL
Cells(row0ReporteAFormato - 1, 2) = "Sucursal"
'encabezados PLANEADOR
Cells(row0ReporteAFormato - 1, 3) = "Planeador"
'encabezados L|fffd|MITE OPERATIVO
Cells(row0ReporteAFormato - 1, punteroLimOp) = "L|fffd|mite Operativo"
'encabezados SALDO INICIAL
Cells(row0ReporteAFormato - 1, punteroSaldoIni) = "Saldo ayer" & vbNewLine & Format(fechaInicial, "dd mmm yyyy")
'encabezados INVENTARIO SALDO INICIAL
Cells(row0ReporteAFormato - 1, punteroSaldoIni + 1) = "D|fffd|as Saldo Inicial"
'encabezados SALDO ACTUALIZADO
Cells(row0ReporteAFormato - 1, punteroSaldoActual) = "Saldo Actual" & vbNewLine & Format(horaMax, "hh:mm")
'encabezados INVENTARIO SALDO ACTUALIZADO
Cells(row0ReporteAFormato - 1, punteroSaldoActual + 1) = "D|fffd|as Saldo Actual"
'encabezados DOTACIONES PROGRAMADAS
Cells(row0ReporteAFormato - 1, punteroDotacion) = "Dotaciones Programadas"
'encabezados DOTACIONES CONFIRMADAS
Cells(row0ReporteAFormato - 1, punteroConfirmaDot) = "Dotaciones Confirmadas"
'encabezados HORA DOTACIONES CONFIRMADAS
Cells(row0ReporteAFormato - 1, punteroConfirmaDot + 1) = "Hora Dotaciones Confirmadas"


''''''''''''''''''''''''''''FORMATO''''''''''''''''''''''''''''''''''''''

'identificar alertas sucRojo, sucAmarillo, sucVerde
sucRojo = 0
sucAmarillo = 0
sucVerde = 0

'SALDO MONITOREO
For i = 1 To UBound(ULTIMO_MONITOREO)
    
'    If MONITOREOS(i, 3) = horaMax Then
    
        For o = 1 To UBound(MODELO)
            
            If MODELO(o, 1) = ULTIMO_MONITOREO(i, 1) And Len(MODELO(o, 1)) >= 4 Then
            
                'SALDO MONITOREO / L|fffd|MITE OPERATIVO
                valorEstatus = ULTIMO_MONITOREO(i, 2) / Abs(MODELO(o, 2))
                
                If valorEstatus <= 1 Then 'Or valorEstatus > 10 Then
                    
                    sucRojo = sucRojo + 1
                
                ElseIf valorEstatus > 1 And valorEstatus <= 2 Then
                    
                    sucAmarillo = sucAmarillo + 1
                
'                ElseIf valorEstatus > 7 And valorEstatus <= 10 Then
'
'                    sucAmarillo = sucAmarillo + 1
                    
                    
                Else
                    
                    sucVerde = sucVerde + 1
                
                End If
                
            
            Exit For
            
            End If
            
        Next o
        

'    End If
    
Next i
    
'tipo de alerta 1 rojo, 2 amarillo, 3 verde

If sucRojo > 0 Then
    
    alerta = 1

ElseIf sucAmarillo > 0 Then
    
    alerta = 2

Else
    alerta = 3

End If




'identificar alerta de dotaciones
alertaColorDot = 0
dotacionesConfirmadas = 0
dotacionesProgramadas = 0

'DOTACIONES PROGRAMADAS
For n = 1 To UBound(DOTACIONES)
    
    dotacionesProgramadas = dotacionesProgramadas + 1
    
    'CONFIRMACI|fffd|N DOTACIONES
    For k = 1 To UBound(CONFIRMA_DOTACIONES)
        
        If CONFIRMA_DOTACIONES(k, 1) = DOTACIONES(n, 1) Then
        
            dotacionesConfirmadas = dotacionesConfirmadas + 1
            

        Exit For
        
        End If
        
    Next k
    
    
Next n


If dotacionesProgramadas > 0 And dotacionesConfirmadas = 0 Then
    'rojo
    alertaColorDot = 1

ElseIf dotacionesProgramadas > dotacionesConfirmadas Then
    'amarillo
    alertaColorDot = 2
    
ElseIf dotacionesProgramadas = dotacionesConfirmadas Then
    'verde
    alertaColorDot = 3

Else
    'verde
    alertaColorDot = 3
    
End If



'hoja 2''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'hoja 2''''''''''''''''''''''''''''HOJA CASH IN CASH OUT'''''''''''''''''''''''''''''''''
'hoja 2''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Dim saldoInicialHoja2, saldoActualHoja2, cicoHoja2, limiteOperativoHoja2 As Long
Dim momento1, momento2, momento3, momento4 As Integer
Dim horaReporte As Integer

horaReporte = Hour(horaMax)
momento1 = 11
momento2 = 13
momento3 = 15
momento4 = 17

'Agregar libro nuevo
Sheets.Add After:=ActiveSheet
ActiveSheet.Name = hojaReporte02



For i = 1 To UBound(CATALOGO_SUCURSALES)
    'id suc
    Cells(row0ReporteB, 1) = CATALOGO_SUCURSALES(i, 1)
    'sucursal
    Cells(row0ReporteB, 2) = CATALOGO_SUCURSALES(i, 2)
    'planeador
    Cells(row0ReporteB, 3) = CATALOGO_SUCURSALES(i, 5)
    
        'L|fffd|MITE OPERATIVO
    For o = 1 To UBound(MODELO)
        
        If MODELO(o, 1) = CATALOGO_SUCURSALES(i, 1) Then
        
        'importe dotaciones
        Cells(row0ReporteB, punteroLimOp) = Abs(MODELO(o, 2))
        limiteOperativoHoja2 = Abs(MODELO(o, 2))
        'Exit For
        
        End If
        
    Next o
    
'    'SALDO INICIAL
    For m = 1 To UBound(SALDO_INICIAL)

        If SALDO_INICIAL(m, 1) = CATALOGO_SUCURSALES(i, 1) Then

            'saldo inicial
            Cells(row0ReporteB, punteroSaldoIni) = SALDO_INICIAL(m, 3)
            saldoInicialHoja2 = SALDO_INICIAL(m, 3)

            'Exit For

        End If

    Next m

    
'    'ULTIMO_MONITOREO
    For j = 1 To UBound(ULTIMO_MONITOREO)

        If ULTIMO_MONITOREO(j, 1) = CATALOGO_SUCURSALES(i, 1) Then

            'saldo monitoreo
            Cells(row0ReporteB, punteroSaldoActual - 1) = ULTIMO_MONITOREO(j, 2)
            saldoActualHoja2 = ULTIMO_MONITOREO(j, 2)
        'Exit For
    
        End If

    Next j

    'CICO_ACTUAL CICO CAPTURADO, MODELO Y MAYOR DEMANDA
    For p = 1 To UBound(CICO_ACTUAL)

        If CICO_ACTUAL(p, 1) = CATALOGO_SUCURSALES(i, 1) Then

            'CICO CAPTURADO
            Cells(row0ReporteB, punteroSaldoActual) = CICO_ACTUAL(p, 4)
            'CICO MODELO
            Cells(row0ReporteB, punteroSaldoActual + 1) = CICO_ACTUAL(p, 5)
            'MAYOR DEMANDA
            Cells(row0ReporteB, punteroSaldoActual + 2) = CICO_ACTUAL(p, 6)
            cicoHoja2 = CICO_ACTUAL(p, 6)
            
            'Exit For

        End If

    Next p

   
    'DOTACIONES PROGRAMADAS
    For n = 1 To UBound(DOTACIONES)
        


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''DOTACIONES Y ESTATUS'''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


       '''''''''''''''''''''''''''''''''''''''''''''''
        'DOTACI|fffd|N PENDIENTE con SALDO DIFERENTE AL INICIAL
       '''''''''''''''''''''''''''''''''''''''''''''''

        If Len(DOTACIONES(n, 1)) > 1 And _
                DOTACIONES(n, 1) = CATALOGO_SUCURSALES(i, 1) And _
                DOTACIONES(n, 5) = "PENDIENTE" And _
                saldoActualHoja2 <> saldoInicialHoja2 Then

            'ESTATUS
            'A1
            'Dotaci|fffd|n no ingresada si el saldo consumido es mayor al 30% de la dotaci|fffd|n programada
            If horaReporte <= momento1 And _
                saldoActualHoja2 > saldoInicialHoja2 And _
                (saldoActualHoja2 - saldoInicialHoja2) > (DOTACIONES(n, 3) * 0.3) And _
                ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2) <= 1 Then

                'importe dotaciones
                Cells(row0ReporteB, punteroSaldoActual + 4) = DOTACIONES(n, 3)
                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)
                'cash out pendiente
                Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3))
                'saldo estimado
                Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))
                'd|fffd|as de inventario
                Cells(row0ReporteB, punteroSaldoActual + 8) = ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2)



                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO INSUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N URGENTE"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "ALERTA"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "A1"
                
         Exit For
            'A2
            ElseIf horaReporte <= momento1 And _
                saldoActualHoja2 > saldoInicialHoja2 And _
                (saldoActualHoja2 - saldoInicialHoja2) > (DOTACIONES(n, 3) * 0.3) And _
                ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2) < 2 Then

                'importe dotaciones
                Cells(row0ReporteB, punteroSaldoActual + 4) = DOTACIONES(n, 3)
                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)
                'cash out pendiente
                Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3))
                'saldo estimado
                Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))
                'd|fffd|as de inventario
                Cells(row0ReporteB, punteroSaldoActual + 8) = ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2)

                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO INSUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N RECIBIDA NO CONFIRMADA"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "PRECAUCI|fffd|N"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "A2"
                
         Exit For
            
            'A3
            ElseIf horaReporte <= momento1 And _
                saldoActualHoja2 > saldoInicialHoja2 And _
                (saldoActualHoja2 - saldoInicialHoja2) > (DOTACIONES(n, 3) * 0.3) And _
                ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2) >= 2 And _
                ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2) <= 8 Then

                'importe dotaciones
                Cells(row0ReporteB, punteroSaldoActual + 4) = DOTACIONES(n, 3)
                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)
                'cash out pendiente
                Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3))
                'saldo estimado
                Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))
                'd|fffd|as de inventario
                Cells(row0ReporteB, punteroSaldoActual + 8) = ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2)


                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N RECIBIDA NO CONFIRMADA"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "ESTABLE"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "A3"
                
         Exit For
            
'            'A4
'            ElseIf horaReporte <= momento1 And _
'                saldoActualHoja2 > saldoInicialHoja2 And _
'                (saldoActualHoja2 - saldoInicialHoja2) > (DOTACIONES(n, 3) * 0.3) And _
'                ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2) > 8 Then
'
'                'importe dotaciones
'                Cells(row0ReporteB, punteroSaldoActual + 4) = DOTACIONES(n, 3)
'                'saldo consumido
'                Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)
'                'cash out pendiente
'                Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3))
'                'saldo estimado
'                Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))
'                'd|fffd|as de inventario
'                Cells(row0ReporteB, punteroSaldoActual + 8) = ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2)
'
'
'                'saldo consumido
'                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
'                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N RECIBIDA NO CONFIRMADA"
'                Cells(row0ReporteB, punteroSaldoActual + 11) = "SOBREINVENTARIO"
'
'                'NUMERO ESCENARIO
'                Cells(row0ReporteB, punteroSaldoActual + 12) = "A4"
'
'         Exit For
            

         
'            'A4
'            'Dotaci|fffd|n no ingresada si el saldo consumido es mayor al 30% de la dotaci|fffd|n programada
'            ElseIf horaReporte > momento1 And _
'                horaReporte <= momento2 And _
'                saldoActualHoja2 > saldoInicialHoja2 And _
'                (saldoActualHoja2 - saldoInicialHoja2) > (DOTACIONES(n, 3) * 0.3) And _
'                ((saldoActualHoja2 + ((cicoHoja2 * 0.6) - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2) <= 1 Then
'
'                'importe dotaciones
'                Cells(row0ReporteB, punteroSaldoActual + 4) = DOTACIONES(n, 3)
'                'saldo consumido
'                Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)
'                'cash out pendiente
'                Cells(row0ReporteB, punteroSaldoActual + 6) = (cicoHoja2 * 0.6) - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3))
'                'saldo estimado
'                Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + ((cicoHoja2 * 0.6) - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))
'                'd|fffd|as de inventario
'                Cells(row0ReporteB, punteroSaldoActual + 8) = ((saldoActualHoja2 + ((cicoHoja2 * 0.6) - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2)
'
'
'
'                'saldo consumido
'                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO INSUFICIENTE"
'                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N URGENTE"
'                Cells(row0ReporteB, punteroSaldoActual + 11) = "ALERTA"
'
'                'NUMERO ESCENARIO
'                Cells(row0ReporteB, punteroSaldoActual + 12) = "A4"
'
'         Exit For
'            'A5
'            ElseIf horaReporte > momento1 And _
'                horaReporte <= momento2 And _
'                saldoActualHoja2 > saldoInicialHoja2 And _
'                (saldoActualHoja2 - saldoInicialHoja2) > (DOTACIONES(n, 3) * 0.3) And _
'                ((saldoActualHoja2 + ((cicoHoja2 * 0.6) - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2) < 2 Then
'
'                'importe dotaciones
'                Cells(row0ReporteB, punteroSaldoActual + 4) = DOTACIONES(n, 3)
'                'saldo consumido
'                Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)
'                'cash out pendiente
'                Cells(row0ReporteB, punteroSaldoActual + 6) = (cicoHoja2 * 0.6) - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3))
'                'saldo estimado
'                Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + ((cicoHoja2 * 0.6) - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))
'                'd|fffd|as de inventario
'                Cells(row0ReporteB, punteroSaldoActual + 8) = ((saldoActualHoja2 + ((cicoHoja2 * 0.6) - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2)
'
'                'saldo consumido
'                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO INSUFICIENTE"
'                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N RECIBIDA NO CONFIRMADA"
'                Cells(row0ReporteB, punteroSaldoActual + 11) = "PRECAUCI|fffd|N"
'
'                'NUMERO ESCENARIO
'                Cells(row0ReporteB, punteroSaldoActual + 12) = "A5"
'
'         Exit For
'
'            'A6
'            ElseIf horaReporte > momento1 And _
'                horaReporte <= momento2 And _
'                saldoActualHoja2 > saldoInicialHoja2 And _
'                (saldoActualHoja2 - saldoInicialHoja2) > (DOTACIONES(n, 3) * 0.3) And _
'                ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2) >= 2 And _
'                ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2) <= 8 Then
'
'                'importe dotaciones
'                Cells(row0ReporteB, punteroSaldoActual + 4) = DOTACIONES(n, 3)
'                'saldo consumido
'                Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)
'                'cash out pendiente
'                Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3))
'                'saldo estimado
'                Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))
'                'd|fffd|as de inventario
'                Cells(row0ReporteB, punteroSaldoActual + 8) = ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2)
'
'
'                'saldo consumido
'                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
'                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N RECIBIDA NO CONFIRMADA"
'                Cells(row0ReporteB, punteroSaldoActual + 11) = "ESTABLE"
'
'                'NUMERO ESCENARIO
'                Cells(row0ReporteB, punteroSaldoActual + 12) = "A6"
'
'         Exit For
'
'            'A7
'            ElseIf horaReporte > momento1 And _
'                horaReporte <= momento2 And _
'                saldoActualHoja2 > saldoInicialHoja2 And _
'                (saldoActualHoja2 - saldoInicialHoja2) > (DOTACIONES(n, 3) * 0.3) And _
'                ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2) > 8 Then
'
'                'importe dotaciones
'                Cells(row0ReporteB, punteroSaldoActual + 4) = DOTACIONES(n, 3)
'                'saldo consumido
'                Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)
'                'cash out pendiente
'                Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3))
'                'saldo estimado
'                Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))
'                'd|fffd|as de inventario
'                Cells(row0ReporteB, punteroSaldoActual + 8) = ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2)
'
'
'                'saldo consumido
'                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
'                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N RECIBIDA NO CONFIRMADA"
'                Cells(row0ReporteB, punteroSaldoActual + 11) = "SOBREINVENTARIO"
'
'                'NUMERO ESCENARIO
'                Cells(row0ReporteB, punteroSaldoActual + 12) = "A7"
'
'         Exit For
         
            'A4
            ElseIf saldoActualHoja2 < saldoInicialHoja2 And _
                ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2) <= 1 Then

                'importe dotaciones
                Cells(row0ReporteB, punteroSaldoActual + 4) = DOTACIONES(n, 3)
                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                'cash out pendiente
                Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2)
                'saldo estimado
                Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))
                'd|fffd|as de inventario
                Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2


                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 9) = "DOTACI|fffd|N URGENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "SALDO INSUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "ALERTA"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "A4"
                
         Exit For
            
            'A5
            ElseIf saldoActualHoja2 < saldoInicialHoja2 And _
                ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2) > 1 And _
                ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2) <= 2 Then

                'importe dotaciones
                Cells(row0ReporteB, punteroSaldoActual + 4) = DOTACIONES(n, 3)
                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                'cash out pendiente
                Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2)
                'saldo estimado
                Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))
                'd|fffd|as de inventario
                Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2


                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO INSUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N NECESARIA"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "PRECAUCI|fffd|N"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "A5"
                
         Exit For
            'A6
            ElseIf saldoActualHoja2 < saldoInicialHoja2 And _
                ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2) > 2 And _
                ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2) <= 8 Then

                'importe dotaciones
                Cells(row0ReporteB, punteroSaldoActual + 4) = DOTACIONES(n, 3)
                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                'cash out pendiente
                Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2)
                'saldo estimado
                Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))
                'd|fffd|as de inventario
                Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2



                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N X INVENTARIO"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "ESTABLE"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "A6"
                
         Exit For
         
            'A7
            ElseIf saldoActualHoja2 < saldoInicialHoja2 And _
                ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2) > 8 Then

                'importe dotaciones
                Cells(row0ReporteB, punteroSaldoActual + 4) = DOTACIONES(n, 3)
                    'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                'cash out pendiente
                Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2)
                'saldo estimado
                Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))
                'd|fffd|as de inventario
                Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2



                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N ANTICIPADA"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "SOBREINVENTARIO"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "A7"
                
         Exit For
         
            End If

        Exit For
        
        End If
        
    '''''''''''''''''''''''''''''''''''''''''''''''
    'DOTACI|fffd|N PENDIENTE con SALDO ACTUAL = SALDO INICIAL
    'primer ejecuci|fffd|n si no hay saldos de monitoreo
    '''''''''''''''''''''''''''''''''''''''''''''''
        
        If Len(DOTACIONES(n, 1)) > 1 And _
            DOTACIONES(n, 1) = CATALOGO_SUCURSALES(i, 1) And _
            DOTACIONES(n, 5) = "PENDIENTE" And _
            saldoActualHoja2 = saldoInicialHoja2 Then

            'importe dotaciones
            Cells(row0ReporteB, punteroSaldoActual + 4) = DOTACIONES(n, 3)
            'saldo consumido
            Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
            'cash out pendiente
            Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2
            'saldo estimado
            Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + cicoHoja2 + DOTACIONES(n, 3)
            'd|fffd|as de inventario
            Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + cicoHoja2 + DOTACIONES(n, 3)) / limiteOperativoHoja2

            'ESTATUS
            'B1
            'Dotaci|fffd|n no ingresada
            If ((saldoActualHoja2 + cicoHoja2 + DOTACIONES(n, 3)) / limiteOperativoHoja2) < 1 Then
                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO INSUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N URGENTE"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "ALERTA"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "B1"
                
         Exit For
         
            'B2
            ElseIf ((saldoActualHoja2 + cicoHoja2 + DOTACIONES(n, 3)) / limiteOperativoHoja2) <= 2 And _
                    ((saldoActualHoja2 + cicoHoja2 + DOTACIONES(n, 3)) / limiteOperativoHoja2) > 1 Then
                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO INSUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N NECESARIA"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "PRECAUCI|fffd|N"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "B2"
                
         Exit For
         
            'B3
            ElseIf ((saldoActualHoja2 + cicoHoja2 + DOTACIONES(n, 3)) / limiteOperativoHoja2) <= 8 And _
                    ((saldoActualHoja2 + cicoHoja2 + DOTACIONES(n, 3)) / limiteOperativoHoja2) > 2 Then
                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N X INVENTARIO"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "ESTABLE"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "B3"
                
         Exit For
         
            'B4
            ElseIf ((saldoActualHoja2 + cicoHoja2 + DOTACIONES(n, 3)) / limiteOperativoHoja2) > 8 Then
                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N ANTICIPADA"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "SOBREINVENTARIO"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "B4"
                
         Exit For
         
            End If


    Exit For

        End If
        
        
        '''''''''''''''''''''''''''''''''''''''''''''''
       '''''''''''''''''''''''''''''''''''''''''''''''
        'DOTACI|fffd|N RECIBIDA
       '''''''''''''''''''''''''''''''''''''''''''''''
        '''''''''''''''''''''''''''''''''''''''''''''''
        
        If Len(CATALOGO_SUCURSALES(i, 1)) > 2 And _
           DOTACIONES(n, 1) = CATALOGO_SUCURSALES(i, 1) And _
           DOTACIONES(n, 5) = "RECIBIDO" Then

            'ESTATUS
            
            'C1
            'Dotaci|fffd|n no ingresada
            If (saldoActualHoja2 - saldoInicialHoja2) < 0 And _
                (saldoActualHoja2 + (cicoHoja2 + (saldoActualHoja2 - saldoInicialHoja2 + DOTACIONES(n, 3)))) / limiteOperativoHoja2 < 2 Then
                'saldo consumido

            'importe dotaciones
            Cells(row0ReporteB, punteroSaldoActual + 3) = DOTACIONES(n, 3)
            'saldo consumido
            Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
            'cash out pendiente
            Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2)
            'saldo estimado
            Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 + DOTACIONES(n, 3)))
            'd|fffd|as de inventario
            Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 + DOTACIONES(n, 3)))) / limiteOperativoHoja2

                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO INSUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N NO INGRESADA"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "PRECAUCI|fffd|N"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "C1"
                
         Exit For
            
            'C2
            ElseIf (saldoActualHoja2 - (DOTACIONES(n, 3) * 0.75)) < saldoInicialHoja2 And _
                (saldoActualHoja2 + (cicoHoja2 + (saldoActualHoja2 - saldoInicialHoja2 + DOTACIONES(n, 3)))) / limiteOperativoHoja2 >= 2 Then
                'saldo consumido

            'importe dotaciones
            Cells(row0ReporteB, punteroSaldoActual + 3) = DOTACIONES(n, 3)
            'saldo consumido
            Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
            'cash out pendiente
            Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2)
            'saldo estimado
            Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2)) + DOTACIONES(n, 3)
            'd|fffd|as de inventario
            Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2)) + DOTACIONES(n, 3)) / limiteOperativoHoja2

                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N NO INGRESADA"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "ESTABLE"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "C2"
                
         Exit For
            
            'C3
            ElseIf (saldoActualHoja2 - saldoInicialHoja2) > 0 And _
                (saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2 < 2 Then
                'saldo consumido

            'importe dotaciones
            Cells(row0ReporteB, punteroSaldoActual + 3) = DOTACIONES(n, 3)
            'saldo consumido
            Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)
            'cash out pendiente
            Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3))
            'saldo estimado
            Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))
            'd|fffd|as de inventario
            Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2

                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO INSUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N INGRESADA"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "PRECAUCI|fffd|N"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "C3"
                
        Exit For
             
            'C4
            ElseIf (saldoActualHoja2 - saldoInicialHoja2) > 0 And _
                (saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2 >= 2 And _
               (saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2 <= 8 Then
                'saldo consumido

            'importe dotaciones
            Cells(row0ReporteB, punteroSaldoActual + 3) = DOTACIONES(n, 3)
            'saldo consumido
            Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)
            'cash out pendiente
            Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3))
            'saldo estimado
            Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))
            'd|fffd|as de inventario
            Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2

                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "DOTACI|fffd|N INGRESADA"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "ESTABLE"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "C4"
                
         Exit For
            
            'C5
            ElseIf (saldoActualHoja2 - saldoInicialHoja2) > 0 And _
                (saldoActualHoja2 + (cicoHoja2 + (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2 > 8 Then
                'saldo consumido

            'importe dotaciones
            Cells(row0ReporteB, punteroSaldoActual + 3) = DOTACIONES(n, 3)
            'saldo consumido
            Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)
            'cash out pendiente
            Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3))
            'saldo estimado
            Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))
            'd|fffd|as de inventario
            Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2 - DOTACIONES(n, 3)))) / limiteOperativoHoja2

                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "CONSUMO NORMAL"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "SOBREINVENTARIO"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "C5"
                
         Exit For
         
            End If


    Exit For
        
          
        End If


    '''''''''''''''''''''''''''''''''''''''''''''''
    'SUCURSAL SIN DOTACI|fffd|N - PRIMER EJECUCI|fffd|N -
    'SALDO SIN CAMBIO
    '''''''''''''''''''''''''''''''''''''''''''''''

        If Len(DOTACIONES(n, 1)) > 1 And _
            DOTACIONES(n, 1) = CATALOGO_SUCURSALES(i, 1) And _
            DOTACIONES(n, 5) = "SIN DOTACI|fffd|N" And _
            saldoActualHoja2 = saldoInicialHoja2 Then

            'importe dotaciones
            Cells(row0ReporteB, punteroSaldoActual + 4) = DOTACIONES(n, 3)
            'saldo consumido
            Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
            'cash out pendiente
            Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2
            'saldo estimado
            Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + cicoHoja2
            'd|fffd|as de inventario
            Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + cicoHoja2) / limiteOperativoHoja2

            'ESTATUS
            
            'D1
            'Dotaci|fffd|n no ingresada
            If ((saldoActualHoja2 + cicoHoja2) / limiteOperativoHoja2) <= 1 Then
                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO INSUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "REQUIERE DOTACI|fffd|N EXTRAORDINARIA"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "PELIGRO"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "D1"
                
         Exit For
            
            'D2
            ElseIf ((saldoActualHoja2 + cicoHoja2) / limiteOperativoHoja2) > 1 And _
                    ((saldoActualHoja2 + cicoHoja2) / limiteOperativoHoja2) <= 2 Then
                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "REQUERIR|fffd| DOTACI|fffd|N MA|fffd|ANA"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "ESTABLE"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "D2"
                
         Exit For
            
            'D3
            ElseIf ((saldoActualHoja2 + cicoHoja2) / limiteOperativoHoja2) > 2 And _
                    ((saldoActualHoja2 + cicoHoja2) / limiteOperativoHoja2) <= 8 Then
                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "CONSUMO NORMAL"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "ESTABLE"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "D3"
                
         Exit For
            
            'D4
            ElseIf ((saldoActualHoja2 + cicoHoja2) / limiteOperativoHoja2) > 8 Then
                'saldo consumido
                Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                Cells(row0ReporteB, punteroSaldoActual + 10) = "CONSUMO NORMAL"
                Cells(row0ReporteB, punteroSaldoActual + 11) = "SOBREINVENTARIO"
                
                'NUMERO ESCENARIO
                Cells(row0ReporteB, punteroSaldoActual + 12) = "D4"
                
        Exit For
         
            End If


    Exit For
        End If
        
    '''''''''''''''''''''''''''''''''''''''''''''''
    'SIN DOTACI|fffd|N con SALDO ACTUAL = SALDO INICIAL
    'con saldo de monitoreo diferente al inicial
    '''''''''''''''''''''''''''''''''''''''''''''''

        If Len(CATALOGO_SUCURSALES(i, 1)) > 2 And _
                DOTACIONES(n, 1) = CATALOGO_SUCURSALES(i, 1) And _
                DOTACIONES(n, 5) = "SIN DOTACI|fffd|N" And _
                saldoActualHoja2 <> saldoInicialHoja2 Then

                'ESTATUS

                'E1
                'Cash Out at|fffd|pico, mas salidas de las esperadas
                'si el consumo es mayor al esperado
                If saldoActualHoja2 < saldoInicialHoja2 And _
                    (saldoInicialHoja2 - saldoActualHoja2) < cicoHoja2 And _
                    ((saldoActualHoja2 + cicoHoja2) / limiteOperativoHoja2) <= 1 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + cicoHoja2
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + cicoHoja2) / limiteOperativoHoja2
    
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO INSUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CO AT|fffd|PICO REQUIERE DOTACI|fffd|N EXTRAORDINARIA"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "PELIGRO"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E1"

                Exit For
             
                'E2
                'Cash Out at|fffd|pico, mas salidas de las esperadas
                
                
                    ElseIf saldoActualHoja2 < saldoInicialHoja2 And _
                    cicoHoja2 > 0 And _
                    (saldoActualHoja2 - (saldoActualHoja2 - saldoInicialHoja2)) / limiteOperativoHoja2 >= 2 And _
                    (saldoActualHoja2 - (saldoActualHoja2 - saldoInicialHoja2)) / limiteOperativoHoja2 <= 8 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = saldoActualHoja2 - saldoInicialHoja2
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = (saldoActualHoja2 - (saldoActualHoja2 - saldoInicialHoja2))
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 - (saldoActualHoja2 - saldoInicialHoja2)) / limiteOperativoHoja2
    
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CO AT|fffd|PICO"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "ESTABLE"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E2"

                Exit For
                
                
                'E3
                'Cash Out at|fffd|pico, mas salidas de las esperadas
                
                ElseIf saldoActualHoja2 < saldoInicialHoja2 And _
                    cicoHoja2 > 0 And _
                    (saldoActualHoja2 / limiteOperativoHoja2) > 8 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = 0
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = saldoActualHoja2 / limiteOperativoHoja2
    
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CONSUMO NORMAL"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "SOBREINVENTARIO"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E3"

                Exit For
                
                
                'E4
                'Cash Out at|fffd|pico, mas salidas de las esperadas
                
                ElseIf saldoActualHoja2 < saldoInicialHoja2 And _
                    cicoHoja2 < 0 And _
                    (saldoActualHoja2 - saldoInicialHoja2) < cicoHoja2 And _
                    ((saldoActualHoja2 + (cicoHoja2 * 0.25)) / limiteOperativoHoja2) > 8 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 * 0.25
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 * 0.25)
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 * 0.25)) / limiteOperativoHoja2
    
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CO AT|fffd|PICO"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "SOBREINVENTARIO"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E4"

                Exit For
               
                'E5
                'Cash Out at|fffd|pico, mas salidas de las esperadas
                
                ElseIf saldoActualHoja2 < saldoInicialHoja2 And _
                    cicoHoja2 < 0 And _
                    (saldoActualHoja2 - saldoInicialHoja2) < cicoHoja2 And _
                    ((saldoActualHoja2 + (cicoHoja2 * 0.25)) / limiteOperativoHoja2) <= 1 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 * 0.25
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 * 0.25)
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 * 0.25)) / limiteOperativoHoja2
    
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO INSUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CO AT|fffd|PICO"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "ALERTA"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E5"

                Exit For
                
                'E6
                'Cash Out at|fffd|pico, mas salidas de las esperadas
                
                ElseIf saldoActualHoja2 < saldoInicialHoja2 And _
                    cicoHoja2 < 0 And _
                    (saldoActualHoja2 - saldoInicialHoja2) < cicoHoja2 And _
                    ((saldoActualHoja2 + (cicoHoja2 * 0.25)) / limiteOperativoHoja2) > 1 And _
                    ((saldoActualHoja2 + (cicoHoja2 * 0.25)) / limiteOperativoHoja2) <= 8 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 * 0.25
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 * 0.25)
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 * 0.25)) / limiteOperativoHoja2
    
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CO AT|fffd|PICO"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "ESTABLE"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E6"

                Exit For
                
                
                 'E7
                'Cash Out at|fffd|pico, mas salidas de las esperadas
                
                ElseIf saldoActualHoja2 < saldoInicialHoja2 And _
                    cicoHoja2 < 0 And _
                    (saldoActualHoja2 - saldoInicialHoja2) > cicoHoja2 And _
                    ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2) > 8 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2)
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = (saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2)))
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2)
    
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CONSUMO NORMAL"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "SOBREINVENTARIO"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E7"

                Exit For
                
                
                 'E8
                'Cash in at|fffd|pico, mas salidas de las esperadas
                
                ElseIf saldoActualHoja2 > saldoInicialHoja2 And _
                    cicoHoja2 < 0 And _
                    ((saldoActualHoja2 + (cicoHoja2 * 0.5)) / limiteOperativoHoja2) >= 1 And _
                    ((saldoActualHoja2 + (cicoHoja2 * 0.5)) / limiteOperativoHoja2) <= 8 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = (cicoHoja2 * 0.5)
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = (saldoActualHoja2 + (cicoHoja2 * 0.5))
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 * 0.5)) / limiteOperativoHoja2
    
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CONSUMO NORMAL"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "SOBREINVENTARIO"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E8"

                Exit For
                
                 'E8.1
                'Cash in at|fffd|pico, mas salidas de las esperadas
                
                ElseIf saldoActualHoja2 > saldoInicialHoja2 And _
                    cicoHoja2 < 0 And _
                    ((saldoActualHoja2 + (cicoHoja2 * 0.5)) / limiteOperativoHoja2) < 1 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = (cicoHoja2 * 0.5)
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = (saldoActualHoja2 + (cicoHoja2 * 0.5))
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 * 0.5)) / limiteOperativoHoja2
    
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO INSUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CI AT|fffd|PICO"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "ALERTA"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E8.1"

                Exit For
                
                'E9
                'Cash In at|fffd|pico con CO Negativo, si lo recaudado es mayor al 25% CICO contemplado
                'se contempla el 25% del cico como salida pendiente
                ElseIf saldoActualHoja2 > saldoInicialHoja2 And _
                    cicoHoja2 < 0 And _
                    (saldoInicialHoja2 - saldoActualHoja2) < cicoHoja2 And _
                    ((saldoActualHoja2 + (cicoHoja2 * 0.25)) / limiteOperativoHoja2) > 1 And _
                    ((saldoActualHoja2 + (cicoHoja2 * 0.25)) / limiteOperativoHoja2) <= 8 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 * 0.25
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 * 0.25)
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 * 0.25)) / limiteOperativoHoja2
                        
                        
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CI AT|fffd|PICO"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "ESTABLE"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E9"

                Exit For
                
                
                'E10
                'Cash In at|fffd|pico con CO Negativo, si lo recaudado es mayor al 25% CICO contemplado
                'se contempla el 25% del cico como salida pendiente
                ElseIf saldoActualHoja2 > saldoInicialHoja2 And _
                    cicoHoja2 < 0 And _
                    ((saldoActualHoja2 + cicoHoja2) / limiteOperativoHoja2) > 8 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + cicoHoja2
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + cicoHoja2) / limiteOperativoHoja2
                        
                        
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CI AT|fffd|PICO"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "SOBREINVENTARIO"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E10"

                Exit For
                
                'E11
                'Cash In at|fffd|pico con CO Negativo, si lo recaudado es mayor al 25% CICO contemplado
                'se contempla el 25% del cico como salida pendiente
                ElseIf saldoActualHoja2 > saldoInicialHoja2 And _
                    cicoHoja2 < 0 And _
                    ((saldoActualHoja2 + cicoHoja2) / limiteOperativoHoja2) >= 2 And _
                    ((saldoActualHoja2 + cicoHoja2) / limiteOperativoHoja2) <= 8 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + cicoHoja2
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + cicoHoja2) / limiteOperativoHoja2
                        
                        
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CI AT|fffd|PICO"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "ESTABLE"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E11"

                Exit For
                
                'E12
                'Cash In at|fffd|pico con CO Negativo, si lo recaudado es mayor al 25% CICO contemplado
                'se contempla el 25% del cico como salida pendiente
                ElseIf saldoActualHoja2 > saldoInicialHoja2 And _
                    cicoHoja2 > 0 And _
                (saldoActualHoja2 / limiteOperativoHoja2) >= 2 And _
                (saldoActualHoja2 / limiteOperativoHoja2) <= 8 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = 0
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = saldoActualHoja2 / limiteOperativoHoja2
                        
                        
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CI NORMAL"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "ESTABLE"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E12"

                Exit For
                
                
                 'E13
                'Cash In at|fffd|pico
                ElseIf saldoActualHoja2 > saldoInicialHoja2 And _
                    cicoHoja2 > 0 And _
                    ((saldoActualHoja2 + cicoHoja2) / limiteOperativoHoja2) > 8 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = 0
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = saldoActualHoja2 / limiteOperativoHoja2
                        
                        
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CI NORMAL"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "SOBREINVENTARIO"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E13"

                Exit For
                

                'E14
                'Cash In at|fffd|pico
                ElseIf saldoActualHoja2 > saldoInicialHoja2 And _
                    cicoHoja2 < 0 And _
                    ((saldoActualHoja2 + (cicoHoja2 - (saldoInicialHoja2 - saldoActualHoja2))) / limiteOperativoHoja2) >= 1 And _
                    ((saldoActualHoja2 + (cicoHoja2 - (saldoInicialHoja2 - saldoActualHoja2))) / limiteOperativoHoja2) < 2 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 + (saldoActualHoja2 - saldoInicialHoja2)
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoInicialHoja2 - saldoActualHoja2))
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 - (saldoInicialHoja2 - saldoActualHoja2))) / limiteOperativoHoja2
                        
                        
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CI AT|fffd|PICO RECAUDANDO REQUERIR|fffd| DOTACI|fffd|N MA|fffd|ANA"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "PRECAUCI|fffd|N"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E14"

                Exit For
                
                'E15
                'Cash In at|fffd|pico
                ElseIf saldoActualHoja2 > saldoInicialHoja2 And _
                    cicoHoja2 > 0 And _
                    (saldoActualHoja2 / limiteOperativoHoja2) >= 1 And _
                    (saldoActualHoja2 / limiteOperativoHoja2) < 2 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = 0
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = saldoActualHoja2 / limiteOperativoHoja2
                        
                        
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CI NORMAL RECAUDANDO REQUERIR|fffd| DOTACI|fffd|N MA|fffd|ANA"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "PRECAUCI|fffd|N"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E15"

                Exit For
               
                'E16
                'Cash In at|fffd|pico
                ElseIf saldoActualHoja2 > saldoInicialHoja2 And _
                    cicoHoja2 > 0 And _
                    (saldoActualHoja2 / limiteOperativoHoja2) >= 2 And _
                    (saldoActualHoja2 / limiteOperativoHoja2) < 8 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = 0
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = saldoActualHoja2 / limiteOperativoHoja2
                        
                        
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CI NORMAL"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "ESTABLE"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E16"

                Exit For
                
                'E17
                'saldo menor o igual a 1
                ElseIf saldoActualHoja2 < saldoInicialHoja2 And _
                    ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2) <= 1 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2)
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2
                        
                        
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO INSUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "REQUIERE DOTACI|fffd|N EXTRAORDINARIA"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "ALERTA"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E17"

             Exit For

                'E18
                ElseIf saldoActualHoja2 < saldoInicialHoja2 And _
                        ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2) > 1 And _
                        ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2) <= 2 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2)
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2
                        
                        
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "REQUERIR|fffd| DOTACI|fffd|N MA|fffd|ANA"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "PRECAUCI|fffd|N"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E18"

             Exit For

                'E19
                ElseIf saldoActualHoja2 < saldoInicialHoja2 And _
                        cicoHoja2 < 0 And _
                        ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2) > 2 And _
                        ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2) <= 8 Then
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2)
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2
                        
                        
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CONSUMO NORMAL"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "ESTABLE"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E19"

             Exit For

            'E20
            ElseIf saldoActualHoja2 < saldoInicialHoja2 And _
                    cicoHoja2 < 0 And _
                    ((saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2) > 8 Then
                                
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 5) = saldoActualHoja2 - saldoInicialHoja2
                    'cash out pendiente
                    Cells(row0ReporteB, punteroSaldoActual + 6) = (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))
                    'saldo estimado
                    Cells(row0ReporteB, punteroSaldoActual + 7) = saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))
                    'd|fffd|as de inventario
                    Cells(row0ReporteB, punteroSaldoActual + 8) = (saldoActualHoja2 + (cicoHoja2 - (saldoActualHoja2 - saldoInicialHoja2))) / limiteOperativoHoja2
                    
                    
                    'saldo consumido
                    Cells(row0ReporteB, punteroSaldoActual + 9) = "SALDO SUFICIENTE"
                    Cells(row0ReporteB, punteroSaldoActual + 10) = "CONSUMO NORMAL"
                    Cells(row0ReporteB, punteroSaldoActual + 11) = "SOBREINVENTARIO"
                    
                    'NUMERO ESCENARIO
                    Cells(row0ReporteB, punteroSaldoActual + 12) = "E20"

             Exit For



                End If
            Exit For

        End If


        
        
    Next n

        saldoActualHoja2 = 0
        limiteOperativoHoja2 = 0
        cicoHoja2 = 0
        saldoInicialHoja2 = 0
        
    
    row0ReporteB = row0ReporteB + 1
    
Next i



''''''''''''''''''''''''''ENCABEZADOS'''''''''''''''''''''''''''''''''''''
totRowsReporteA = Range("A65000").End(xlUp).Row

row0Totales = 5
'inicio de rango de detalle para f|fffd|rmulas de cifras control
punteroFormulaIni = row0ReporteAFormato - punteroSaldoIni
'fin del rango de detalle para f|fffd|rmulas de cifras control
punteroFormulaFin = totRowsReporteA - punteroSaldoIni


'T|fffd|tulo
Cells(1, 2) = "     M O N I T O R E O    C O N S U M O    V S    D E M A N D A     " & _
    Format(fechaValor, "dddd dd mmmm yyyy") & "     " & _
    Format(horaMax, "hh:mm AM/PM")

'totales D|fffd|AS DE INVENTARIO
Cells(row0Totales - 2, 2) = "E S T A T U S    S A L D O    S U C U R S A L E S"


'totales encabezado MENOR A 1 D|fffd|AS
Cells(row0Totales - 1, 2) = "Estatus Saldo / Advertencia"
Cells(row0Totales - 1, 3) = "PELIGRO"
Cells(row0Totales - 1, 4) = "ALERTA"
Cells(row0Totales - 1, 5) = "PRECAUCI|fffd|N"
Cells(row0Totales - 1, 6) = "ESTABLE"
Cells(row0Totales - 1, 7) = "SOBREINVENTARIO"
Cells(row0Totales - 1, 8) = "TOTAL"
Cells(row0Totales - 1, 9) = "% ESTATUS SALDO"

'totales encabezado MENOR A 1 D|fffd|AS
Cells(row0Totales, 2) = "SALDO SUFICIENTE"
'totales encabezado MENOR A 2 D|fffd|AS
Cells(row0Totales + 1, 2) = "SALDO INSUFICIENTE"
'totales encabezado SUFICIENTE
Cells(row0Totales + 2, 2) = "TOTAL"
'totales encabezado M|fffd|S DE 7 D|fffd|AS
Cells(row0Totales + 3, 2) = "% TIPO ADVERTENCIA"



'encabezados ID SUCURSAL
Cells(row0ReporteAFormato - 1, 1) = "IdSuc"
'encabezados SUCURSAL
Cells(row0ReporteAFormato - 1, 2) = "Sucursal"
'encabezados PLANEADOR
Cells(row0ReporteAFormato - 1, 3) = "Planeador"
'encabezados L|fffd|MITE OPERATIVO
Cells(row0ReporteAFormato - 1, punteroLimOp) = "L|fffd|mite Operativo"
'encabezados SALDO INICIAL
Cells(row0ReporteAFormato - 1, punteroSaldoIni) = "Saldo ayer" & vbNewLine & Format(fechaInicial, "dd mmm yyyy")
'encabezados SALDO ACTUALIZADO
Cells(row0ReporteAFormato - 1, punteroSaldoIni + 1) = "Saldo Actual" & vbNewLine & Format(horaMax, "hh:mm")
'encabezados CICO CAPTURADAS
Cells(row0ReporteAFormato - 1, punteroSaldoActual) = "Cash In - Cash Out" & Chr(10) & "Capturado"
'encabezados CICO MODELO
Cells(row0ReporteAFormato - 1, punteroSaldoActual + 1) = "Cash In - Cash Out" & Chr(10) & "Modelo"
'encabezados CICO MAYOR DEMANDA
Cells(row0ReporteAFormato - 1, punteroDotacion) = "Cash In - Cash Out" & Chr(10) & "Mayor Demanda"
'encabezados DOTACIONES CONFIRMADA
Cells(row0ReporteAFormato - 1, punteroConfirmaDot) = "Dotaciones Confirmadas"
'encabezados HORA DOTACIONES CONFIRMADAS
Cells(row0ReporteAFormato - 1, punteroConfirmaDot + 1) = "Dotaciones Pendientes"
'encabezados HORA DOTACIONES CONFIRMADAS
Cells(row0ReporteAFormato - 1, punteroConfirmaDot + 2) = "Saldo Consumido"
'encabezados HORA DOTACIONES CONFIRMADAS
Cells(row0ReporteAFormato - 1, punteroConfirmaDot + 3) = "Cash Out Pendiente"
'encabezados HORA Saldo - Pendiente
Cells(row0ReporteAFormato - 1, punteroConfirmaDot + 4) = "Saldo Estimado"
'encabezados HORA Saldo - Pendiente d|fffd|as
Cells(row0ReporteAFormato - 1, punteroConfirmaDot + 5) = "D|fffd|as Inventario Estimados"
'encabezados HORA Saldo - ESTATUS
Cells(row0ReporteAFormato - 1, punteroConfirmaDot + 6) = "Estatus Saldo"
'encabezados HORA Saldo - ESTATUS
Cells(row0ReporteAFormato - 1, punteroConfirmaDot + 7) = "Estatus Dotaci|fffd|n"
'encabezados HORA Saldo - ESTATUS
Cells(row0ReporteAFormato - 1, punteroConfirmaDot + 8) = "Nivel Inventario"
'encabezados HORA Saldo - ESTATUS
Cells(row0ReporteAFormato - 1, punteroConfirmaDot + 9) = "ClaveRegla"


'f|fffd|rmulas
    Range("C5").Select
    ActiveCell.FormulaR1C1 = "=COUNTIFS(R13C16:R213C16,RC2,R13C18:R213C18,R4C)"
    Range("D5").Select
    ActiveCell.FormulaR1C1 = "=COUNTIFS(R13C16:R213C16,RC2,R13C18:R213C18,R4C)"
    Range("E5").Select
    ActiveCell.FormulaR1C1 = "=COUNTIFS(R13C16:R213C16,RC2,R13C18:R213C18,R4C)"
    Range("F5").Select
    ActiveCell.FormulaR1C1 = "=COUNTIFS(R13C16:R213C16,RC2,R13C18:R213C18,R4C)"
    Range("G5").Select
    ActiveCell.FormulaR1C1 = "=COUNTIFS(R13C16:R213C16,RC2,R13C18:R213C18,R4C)"
    Range("H5").Select
    ActiveCell.FormulaR1C1 = "=SUM(RC[-5]:RC[-1])"
    Range("I5").Select
    ActiveCell.FormulaR1C1 = "=RC[-1]/R7C8"
    Range("C6").Select
    ActiveCell.FormulaR1C1 = "=COUNTIFS(R13C16:R213C16,RC2,R13C18:R213C18,R4C)"
    Range("D6").Select
    ActiveCell.FormulaR1C1 = "=COUNTIFS(R13C16:R213C16,RC2,R13C18:R213C18,R4C)"
    Range("E6").Select
    ActiveCell.FormulaR1C1 = "=COUNTIFS(R13C16:R213C16,RC2,R13C18:R213C18,R4C)"
    Range("F6").Select
    ActiveCell.FormulaR1C1 = "=COUNTIFS(R13C16:R213C16,RC2,R13C18:R213C18,R4C)"
    Range("G6").Select
    ActiveCell.FormulaR1C1 = "=COUNTIFS(R13C16:R213C16,RC2,R13C18:R213C18,R4C)"
    Range("H6").Select
    ActiveCell.FormulaR1C1 = "=SUM(RC[-5]:RC[-1])"
    Range("I6").Select
    ActiveCell.FormulaR1C1 = "=RC[-1]/R7C8"
    Range("C7").Select
    ActiveCell.FormulaR1C1 = "=SUM(R[-2]C:R[-1]C)"
    Range("D7").Select
    ActiveCell.FormulaR1C1 = "=SUM(R[-2]C:R[-1]C)"
    Range("E7").Select
    ActiveCell.FormulaR1C1 = "=SUM(R[-2]C:R[-1]C)"
    Range("F7").Select
    ActiveCell.FormulaR1C1 = "=SUM(R[-2]C:R[-1]C)"
    Range("G7").Select
    ActiveCell.FormulaR1C1 = "=SUM(R[-2]C:R[-1]C)"
    Range("H7").Select
    ActiveCell.FormulaR1C1 = "=SUM(R[-2]C:R[-1]C)"
    Range("C8").Select
    ActiveCell.FormulaR1C1 = "=R[-1]C/R7C8"
    Range("D8").Select
    ActiveCell.FormulaR1C1 = "=R[-1]C/R7C8"
    Range("E8").Select
    ActiveCell.FormulaR1C1 = "=R[-1]C/R7C8"
    Range("F8").Select
    ActiveCell.FormulaR1C1 = "=R[-1]C/R7C8"
    Range("G8").Select
    ActiveCell.FormulaR1C1 = "=R[-1]C/R7C8"
    Range("H8").Select
    ActiveCell.FormulaR1C1 = "=R[-1]C/R7C8"
    
    
    
'Hoja 1'''''''''''''''''''''formato HOJA 1''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sheets(hojaReporte01).Select
Call BC_2FormatoReporteMonitoreoSaldos(1, 3, Int(row0ReporteAFormato - 1), Int(alerta), Int(alertaColorDot))


'Hoja 2'''''''''''''''''''''formato HOJA 2''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sheets(hojaReporte02).Select
Call BC_3FormatoReporteMonitoreoSaldosHoja2



'Call BC_2FormatoReporteMonitoreoSaldos(1, 3, Int(row0ReporteAFormato - 1), Int(alerta), Int(alertaColorDot))

'regresar a archivo
Windows(cuWo).Activate
Sheets(cuSh).Select
Unload MONITOREO_SALDOS




hora2 = Now()

Application.Calculation = xlAutomatic
Application.ScreenUpdating = False
Application.EnableEvents = False

MsgBox "Finalizado" & vbNewLine & vbNewLine & Format(hora2 - hora1, "hh:mm:ss")

End Sub

Sub BC_2FormatoReporteMonitoreoSaldos(row01, row02, row03, alertaColor, alertaColorDotacion As Integer)

Dim row1, row2, row3, col0, totRows, totCols As Long
Dim col01sec01, colfinsec01, col01sec02, colfinsec02, col01sec03, colfinsec03, _
    col01sec04, colfinsec04, col01sec05, colfinsec05 As Integer
Dim rowFinSec01, rowFinSec02, rowFinSec03, rowhighlight, rowhighlightDot As Integer
Dim colorEstatus, colorEstatusDot As Long
Dim rojo, amarillo, verde, gris, rojoLetra, verdeLetra, amarilloLetra As Long

'colores de fondo
rojo = 204
amarillo = 49407
verde = 39168

'colores de letra
rojoLetra = -16777024
verdeLetra = -16742400
amarilloLetra = -16739073
''gris
'    With Selection.Interior
'        .Pattern = xlSolid
'        .PatternColorIndex = xlAutomatic
'        .ThemeColor = xlThemeColorDark1
'        .TintAndShade = -0.499984740745262
'        .PatternTintAndShade = 0
'    End With


    'color de letra rojo
'    With Selection.Font
'        .Color = -16777024
'        .TintAndShade = 0
'    End With

    
't|fffd|tulo
row1 = row01
'secci|fffd|n de totales
row2 = row02
'secci|fffd|n de detalle
row3 = row03
col0 = 1
totRows = Range("A65000").End(xlUp).Row
totCols = Cells(row3, col0).End(xlToRight).Column

col01sec02 = 2
colfinsec02 = 5

col01sec03 = 7
colfinsec03 = 10


rowFinSec02 = 10
rowFinSec03 = 7
'rowFinSec03 = 1

col01sec04 = 1
colfinsec04 = totCols

'colorEstatus D|fffd|AS DE INVENTARIO
Select Case alertaColor
Case 1
    colorEstatus = rojo
    'fila concepto de la alerta
    rowhighlight = 5
Case 2
    colorEstatus = amarillo
    'fila concepto de la alerta
    rowhighlight = 6
Case 3
    colorEstatus = verde
    'fila concepto de la alerta
    rowhighlight = 7
End Select

'Color estatus DOTACIONES CONFIRMADAS
Select Case alertaColorDotacion
Case 1
    colorEstatusDot = rojo
    rowhighlightDot = 7
Case 2
    colorEstatusDot = amarillo
    rowhighlightDot = 7
Case 3
    colorEstatusDot = verde
    rowhighlightDot = 7

End Select



'Tama|fffd|o de columnas
    Columns("A:A").ColumnWidth = 7.57
    Columns("B:B").ColumnWidth = 27
    Columns("C:C").ColumnWidth = 10.14
    Range("D:D,E:E,G:G,I:I,J:J").ColumnWidth = 17.43
    Range("F:F,H:H").ColumnWidth = 9.57
    Columns("K:K").ColumnWidth = 12.14
    Rows("12:12").RowHeight = 48.75
    
'fondo trama
    Range("A1:A11,K1:K11,H1:J1,B2:J2,F3:F11,B11:E11,G8:J11").Select
    With Selection.Interior
        .Pattern = xlGray16
        .PatternColor = colorEstatus
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    

'''''''''''''''''''1 T|fffd|TULO''''''''''''''''''''''''''''''''''

    Range(Cells(row1, col0 + 1), Cells(row1, totCols - 1)).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    With Selection.Interior
'        .Pattern = xlSolid
'        .PatternColorIndex = xlAutomatic
'        .Color = colorEstatus
'        .TintAndShade = 0
'        .PatternTintAndShade = 0
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.499984740745262
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .Bold = True
    End With
    Selection.Font.size = 14
    
    'ANCHO FILA T|fffd|TULO
    Rows("1:1").RowHeight = 24
    Range("B1").Activate
    

''''''''''''''''''''''''2 TOTALES '''''''''''''''''''''''''''''''''''

'TOTALES D|fffd|AS DE INVENTARIO
    Range(Cells(row2, col01sec02), Cells(row2, colfinsec02)).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = colorEstatus
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .Bold = True
    End With
    Selection.Font.size = 12
    
    'Encabezados TOTALES GRIS OSCURO
    Range(Cells(row2 + 1, col01sec02), Cells(row2 + 1, colfinsec02)).Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.499984740745262
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .Bold = True
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    

    
    'DETALLE GRIS OSCURO
    Range(Cells(row2 + 2, col01sec02), Cells(rowFinSec02, colfinsec02)).Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    
    'marco y color interior
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    Selection.Borders(xlEdgeRight).LineStyle = xlNone
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlDouble
        .ThemeColor = 1
        .TintAndShade = -0.349986266670736
        .Weight = xlThick
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
    'fila de totales
    Range(Cells(rowFinSec02, col01sec02), Cells(rowFinSec02, colfinsec02)).Select
    Selection.Font.Bold = True
    
    
    'Formato detalle
    'Segunda columna detalle NUMERO CENTRADO
    Range(Cells(row2 + 2, col01sec02 + 1), Cells(rowFinSec02, col01sec02 + 1)).Select
    Selection.NumberFormat = "0"
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    'Tercera columna detalle IMPORTE MONEDA
    Range(Cells(row2 + 2, col01sec02 + 2), Cells(rowFinSec02, col01sec02 + 2)).Select
    Selection.Style = "Currency"
    
    'Cuarta columna detalle PORCENTAJE CENTRADO
    Range(Cells(row2 + 2, colfinsec02), Cells(rowFinSec02, colfinsec02)).Select
    Selection.Style = "Percent"
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    'resaltar CONCEPTO DE LA ALERTA
    Range(Cells(rowhighlight, col01sec02), Cells(rowhighlight, colfinsec02)).Select
    'relleno de alarma
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    Selection.Font.Bold = True
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = colorEstatus 'color alerta
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
'TOTALES DOTACIONES
    Range(Cells(row2, col01sec03), Cells(row2, colfinsec03)).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = colorEstatusDot
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .Bold = True
    End With
    Selection.Font.size = 12
    
    'Encabezados TOTALES
    Range(Cells(row2 + 1, col01sec03), Cells(row2 + 1, colfinsec03)).Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.499984740745262
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .Bold = True
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    'DETALLE DE TOTALES
    Range(Cells(row2 + 2, col01sec03), Cells(rowFinSec03, colfinsec03)).Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With

    'marco y color interior
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    Selection.Borders(xlEdgeRight).LineStyle = xlNone
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlDouble
        .ThemeColor = 1
        .TintAndShade = -0.349986266670736
        .Weight = xlThick
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
    'fila de totales
    Range(Cells(row2 + 2, col01sec03), Cells(row2 + 2, colfinsec03)).Select
    Selection.Font.Bold = True



    'Formato detalle
    'Segunda columna detalle NUMERO CENTRADO
    Range(Cells(row2 + 2, col01sec03 + 1), Cells(rowFinSec03, col01sec03 + 1)).Select
    Selection.NumberFormat = "0"
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    'Tercera columna detalle IMPORTE MONEDA
    Range(Cells(row2 + 2, col01sec03 + 2), Cells(rowFinSec03, col01sec03 + 2)).Select
    Selection.Style = "Currency"
    
    'Cuarta columna detalle PORCENTAJE CENTRADO
    Range(Cells(row2 + 2, colfinsec03), Cells(rowFinSec03, colfinsec03)).Select
    Selection.Style = "Percent"
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    

    'resaltar CONCEPTO DE LA ALERTA DOTACI|fffd|N
    Range(Cells(rowhighlightDot, col01sec03), Cells(rowhighlightDot, colfinsec03)).Select
    'relleno de alarma
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    Selection.Font.Bold = True
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = colorEstatusDot 'color alerta
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With

   
''''''''''''''''''''''''''''3 detalle''''''''''''''''''''''''''''''''''''''
    'Encabezados TOTALES GRIS OSCURO
    Range(Cells(row3, col01sec04), Cells(row3, colfinsec04)).Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.499984740745262
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .Bold = True
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With

    'DETALLE
    Range(Cells(row3 + 1, col01sec04), Cells(totRows, colfinsec04)).Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    
    'COLIMNA ID GENERAL
    Range(Cells(row3 + 1, 1), Cells(totRows, 1)).Select
    Selection.NumberFormat = "General"
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
     'COLUMNAS MONEDA 4, 5, 7, 9, 10
    Range(Cells(row3 + 1, 4), Cells(totRows, 5)).Select
    Selection.NumberFormat = "_($* #,##0_);_($* (#,##0);_($* ""-""_);_(@_)"
  
    Range(Cells(row3 + 1, 7), Cells(totRows, 7)).Select
    Selection.NumberFormat = "_($* #,##0_);_($* (#,##0);_($* ""-""_);_(@_)"
    
    Range(Cells(row3 + 1, 9), Cells(totRows, 10)).Select
    Selection.NumberFormat = "_($* #,##0_);_($* (#,##0);_($* ""-""_);_(@_)"
    
     'COLUMNAS ENTERO CON 2 DECIMALES 6, 8
    Range(Cells(row3 + 1, 6), Cells(totRows, 6)).Select
    Selection.NumberFormat = "0.0"
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    Range(Cells(row3 + 1, 8), Cells(totRows, 8)).Select
    Selection.NumberFormat = "0.0"
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    'COLUMNAS HORA
    Range(Cells(row3 + 1, 11), Cells(totRows, 11)).Select
    Selection.NumberFormat = "h:mm AM/PM"
    
    'COLOR ALERTA POR REGISTRO
    For i = 1 To totRows
        
        'rojo
        If Val(Cells(row3 + i, 8)) < 1 Then
        
            'rango sucursal rojoLetra = -16777024
            Range(Cells(row3 + i, 1), Cells(row3 + i, 8)).Select
            With Selection.Font
                .Color = -16777024
                .TintAndShade = 0
            End With
        
        'rojo
        ElseIf Val(Cells(row3 + i, 8)) >= 10 Then
        
            'rango sucursal rojoLetra = -16777024
            Range(Cells(row3 + i, 1), Cells(row3 + i, 8)).Select
            With Selection.Font
                .Color = -16777024
                .TintAndShade = 0
            End With
            
        'amarillo
        ElseIf Val(Cells(row3 + i, 8)) <= 2 And Val(Cells(row3 + i, 8)) >= 1 Then
            'rango sucursal amarilloLetra = -16739073
            Range(Cells(row3 + i, 1), Cells(row3 + i, 8)).Select
            With Selection.Font
                .Color = -16739073
                .TintAndShade = 0
            End With
       
        'amarillo
        ElseIf Val(Cells(row3 + i, 8)) < 10 And Val(Cells(row3 + i, 8)) >= 7 Then
            'rango sucursal amarilloLetra = -16739073
            Range(Cells(row3 + i, 1), Cells(row3 + i, 8)).Select
            With Selection.Font
                .Color = -16739073
                .TintAndShade = 0
            End With
        
        
        'verde
        ElseIf Cells(row3 + i, 8) < 10 And Cells(row3 + i, 8) > 2 Then
            'rango sucursal verdeLetra = -16742400
            Range(Cells(row3 + i, 1), Cells(row3 + i, 8)).Select
            With Selection.Font
                .Color = -16742400
                .TintAndShade = 0
            End With
        
        End If

    
    Next i
    
    
    'COLOR DOTACIONES PENDIENTES
    For i = 1 To totRows
        
        'rojo
        If Val(Cells(row3 + i, 9)) > 0 And Cells(row3 + i, 10) = "" Then
        
            'rango sucursal rojoLetra = -16777024
            Range(Cells(row3 + i, 10), Cells(row3 + i, 11)).Select
'            With Selection.Interior
'                .Pattern = xlSolid
'                .PatternColorIndex = xlAutomatic
'                .Color = colorEstatusDot 'color alerta
'                .TintAndShade = 0
'                .PatternTintAndShade = 0
'            End With
            With Selection.Interior
                .Pattern = xlLightUp
                .PatternColor = colorEstatusDot
                .ThemeColor = xlThemeColorDark1
                .TintAndShade = 0
                .PatternTintAndShade = 0
            End With
            
        Else
            'VERDE LETRA
            Range(Cells(row3 + i, 9), Cells(row3 + i, 11)).Select
            With Selection.Font
                .Color = -16742400
                .TintAndShade = 0
            End With
        
        End If

    
    Next i
    
 'ORDENAR POR D|fffd|A DE INVENTARIO ACTUAL
    ActiveWorkbook.ActiveSheet.Sort.SortFields.Clear
    '"H13:H214"
    ActiveWorkbook.ActiveSheet.Sort.SortFields.Add Key:=Range(Cells(row3 + 1, 8), Cells(totRows, 8) _
        ), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    With ActiveWorkbook.ActiveSheet.Sort
        .SetRange Range(Cells(row3, col01sec04), Cells(totRows, colfinsec04)) '"A12:K214"
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    'FORMATO DE NUMERO
'    Range("H5:H8").Select
'    Selection.NumberFormat = "0"
'    With Selection
'        .HorizontalAlignment = xlCenter
'        .VerticalAlignment = xlBottom
'        .WrapText = False
'        .Orientation = 0
'        .AddIndent = False
'        .IndentLevel = 0
'        .ShrinkToFit = False
'        .ReadingOrder = xlContext
'        .MergeCells = False
'    End With
'    Range("I5:I8").Select
'    Selection.NumberFormat = "_($* #,##0.00_);_($* (#,##0.00);_($* ""-""??_);_(@_)"
'    Range("J5:J8").Select
'    Selection.NumberFormat = "0.0%"
'    With Selection
'        .HorizontalAlignment = xlCenter
'        .VerticalAlignment = xlBottom
'        .WrapText = False
'        .Orientation = 0
'        .AddIndent = False
'        .IndentLevel = 0
'        .ShrinkToFit = False
'        .ReadingOrder = xlContext
'        .MergeCells = False
'    End With

End Sub

Sub BC_3FormatoReporteMonitoreoSaldosHoja2()
'
    Columns("D:N").Select
    Selection.NumberFormat = "$#,##0_);[Red]($#,##0)"
    Columns("O:O").Select
    Selection.NumberFormat = "0.0_ ;[Red]-0.0 "
    Range("B:B,P:P,Q:Q").Select
    Selection.ColumnWidth = 19.71
    
    Range("A12").Select
    Selection.AutoFilter
    Range("A12:Q213").Select

    With Selection
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    Range("A12:S12").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    'Range("D12").Select
    Range("A12:S213").Select
    Selection.AutoFilter



''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''CIFRAS CONTROL'''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'T|fffd|TULO
    Range("B1:R1").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    Selection.Font.Bold = True
    With Selection.Font
        .Name = "Calibri"
        .size = 14
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.349986266670736
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With

'CIFRAS CONTROL
    Range("B4:I4").Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.499984740745262
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Font.Bold = True
    
    
    
    Range("B5:G6").Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.349986266670736
    End With
    With Selection.Font
        .Name = "Calibri Light"
        .size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.349986266670736
        .ThemeFont = xlThemeFontMajor
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.NumberFormat = "0"
    
    
    
    Range("H5:H7,B7:G7").Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 49407
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Selection.Font.Bold = False
    Selection.Font.Bold = True
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.NumberFormat = "0"
    
    Range("I5:I7,C8:H8").Select
    Range("C8").Activate
    Selection.NumberFormat = "0.0%"
    With Selection
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Font.Bold = True
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.349986266670736
    End With
    

End Sub

Attribute VB_Name = "CASH_IN_CASH_OUT"
Attribute VB_Base = "0{5459203A-B7C6-4320-B29A-35B3770006EF}{23AB3E15-EA5C-4D7F-A1DE-0DDDCDFDF3ED}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ComboBoxDiaActual_Change()

Dim numeroArreglo As Integer
Dim FechaPronostico, etiquetaDia As String
Dim DiasArray(10, 2) As Variant
DiasArray(1, 2) = "Lunes"
DiasArray(2, 2) = "Martes"
DiasArray(3, 2) = "Miercoles"
DiasArray(4, 2) = "Jueves"
DiasArray(5, 2) = "Viernes"
DiasArray(6, 2) = "Sabado"
DiasArray(7, 2) = "Domingo"
DiasArray(8, 2) = "Siguiente Lunes"
DiasArray(9, 2) = "Siguiente Martes"
DiasArray(10, 2) = "Siguiente Mi|fffd|rcoles"

DiasArray(1, 1) = 1
DiasArray(2, 1) = 2
DiasArray(3, 1) = 3
DiasArray(4, 1) = 4
DiasArray(5, 1) = 5
DiasArray(6, 1) = 6
DiasArray(7, 1) = 7
DiasArray(8, 1) = 8
DiasArray(9, 1) = 9
DiasArray(10, 1) = 10

For i = 1 To UBound(DiasArray)

    If Me.ComboBoxDiaActual.value = DiasArray(i, 2) Then
    
    numeroArreglo = Int(DiasArray(i, 1))
    constanteArreglo = i
    Exit For
    End If

Next i

If Me.ComboBoxDias.value = "" Then
    dias = 1
Else
    dias = Int(Me.ComboBoxDias.value)
End If

'MsgBox "numeroArreglo " & numeroArreglo & Chr(10) & "Me.ComboBoxDias.value " & dias
'MsgBox "numeroArreglo + Int(Me.ComboBoxDias.value) " & numeroArreglo + dias
numeroArreglo = numeroArreglo + dias

FechaPronostico = DiasArray(numeroArreglo, 2)

If Me.ComboBoxDias.value = 1 Then

Me.TextRangoFechas.value = "C|fffd|lculo para el d|fffd|a " & FechaPronostico

Else

Me.TextRangoFechas.value = "Del " & DiasArray(constanteArreglo + 1, 2) & " al " & FechaPronostico

End If

End Sub




Private Sub ComboBoxDias_Change()

Dim numeroArreglo As Integer
Dim FechaPronostico, etiquetaDia As String
Dim DiasArray(10, 2) As Variant
DiasArray(1, 2) = "Lunes"
DiasArray(2, 2) = "Martes"
DiasArray(3, 2) = "Miercoles"
DiasArray(4, 2) = "Jueves"
DiasArray(5, 2) = "Viernes"
DiasArray(6, 2) = "Sabado"
DiasArray(7, 2) = "Domingo"
DiasArray(8, 2) = "Siguiente Lunes"
DiasArray(9, 2) = "Siguiente Lunes"
DiasArray(10, 2) = "Siguiente Lunes"

DiasArray(1, 1) = 1
DiasArray(2, 1) = 2
DiasArray(3, 1) = 3
DiasArray(4, 1) = 4
DiasArray(5, 1) = 5
DiasArray(6, 1) = 6
DiasArray(7, 1) = 7
DiasArray(8, 1) = 8
DiasArray(9, 1) = 9
DiasArray(10, 1) = 10

For i = 1 To UBound(DiasArray)

    If Me.ComboBoxDiaActual.value = DiasArray(i, 2) Then
    
    numeroArreglo = Int(DiasArray(i, 1))
    constanteArreglo = i
    Exit For
    End If

Next i

If Me.ComboBoxDias.value = "" Then
    dias = 1
Else
    dias = Int(Me.ComboBoxDias.value)
End If

'MsgBox "numeroArreglo " & numeroArreglo & Chr(10) & "Me.ComboBoxDias.value " & dias
'MsgBox "numeroArreglo + Int(Me.ComboBoxDias.value) " & numeroArreglo + dias
numeroArreglo = numeroArreglo + dias

FechaPronostico = DiasArray(numeroArreglo, 2)

If Me.ComboBoxDias.value = 1 Then

Me.TextRangoFechas.value = "C|fffd|lculo para el d|fffd|a " & FechaPronostico

Else

Me.TextRangoFechas.value = "Del " & DiasArray(constanteArreglo + 1, 2) & " al " & FechaPronostico

End If
End Sub

Private Sub CommandButton2_Click()
    
    Application.ScreenUpdating = False
    Application.ScreenUpdating = False
        
        Call CQ3_1ImportarModeloSemanalPronosticoDiario
    
    Application.ScreenUpdating = True
    Application.ScreenUpdating = True

        Call CQ5_OrdenDotacionSucursales
        
Unload CASH_IN_CASH_OUT
        MsgBox "CIFRAS DE MODELO DE PRON|fffd|STICO AGREGADAS"
        
End Sub


Private Sub CommandButton4_Click()

End Sub

Private Sub CommandButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
NAVEGAR_HOJAS.Show
End Sub

Private Sub UserForm_initialize()

Dim dia, dias As Integer
Dim nombreDia As String
dia = Weekday(Date, vbMonday)
dias = 1

Select Case dia
Case 1
nombreDia = "Lunes"
Case 2
nombreDia = "Martes"
Case 3
nombreDia = "Miercoles"
Case 4
nombreDia = "Jueves"
Case 5
nombreDia = "Viernes"
Case Else
nombreDia = "Viernes"
End Select

Me.ComboBoxDiaActual.List = Array("Lunes", "Martes", "Miercoles", "Jueves", "Viernes")
Me.ComboBoxDias.List = Array(1, 2, 3, 4, 5)


Me.ComboBoxDiaActual.value = nombreDia
Me.ComboBoxDias.value = dias

End Sub

Attribute VB_Name = "CA_MACRO_PRINCIPAL"
'''''''''''''''''''''CONCILIACI|fffd|N ARQUEOS ETV VS SALDO OPERATIVO''''''''''''''''''''''''''

Sub CA00_MacroCrearCarpetas()


'validar existencia y/o crear carpeta de papeles de trabajo Mes y d|fffd|a actual
Call VariablesGlobales
'DA0_CreaCarpeta "D:\Users\brincon\Documents\", "Proyecto Logistica Monetaria"


If puntero = "LOCAL" Then

    Call DA0_9CrearCarpetaDialocal
    'carpetas del d|fffd|a
    Call DA0_2CrearCarpetaMesValidacion
    Call DA0_1CrearCarpetaDiaValidacion
    Call DA0_3CrearCarpetaMesTxtPlaneaciones
    Call DA0_4CrearCarpetaDiaTxtPlaneaciones
    Call DA0_5CrearCarpetaMesTxtTraspasos
    Call DA0_6CrearCarpetaDiaTxtTraspasos
    Call DA0_7CrearCarpetaMesTxtCompras
    Call DA0_8CrearCarpetaDiaTxtCompras
    
ElseIf puntero = "COMPARTIDA" Then
    Call DA0_9CrearCarpetaDiaGeneral
    
    Call DA0_2CrearCarpetaMesValidacion
    Call DA0_1CrearCarpetaDiaValidacion
    Call DA0_3CrearCarpetaMesTxtPlaneaciones
    Call DA0_4CrearCarpetaDiaTxtPlaneaciones
    Call DA0_5CrearCarpetaMesTxtTraspasos
    Call DA0_6CrearCarpetaDiaTxtTraspasos
    Call DA0_7CrearCarpetaMesTxtCompras
    Call DA0_8CrearCarpetaDiaTxtCompras
    
    Call DA0_10CrearCarpetasSemanasPronostico
    Call DA0_11CrearCarpetasReportesSap
    
   'Proyecto Logistica Monetaria
   
    Call DA0_9CrearCarpetaDialocal

    Call DA0_2CrearCarpetaMesValidacion_LOCAL
    Call DA0_1CrearCarpetaDiaValidacion_LOCAL
    Call DA0_3CrearCarpetaMesTxtPlaneaciones_LOCAL
    Call DA0_4CrearCarpetaDiaTxtPlaneaciones_LOCAL
    Call DA0_5CrearCarpetaMesTxtTraspasos_LOCAL
    Call DA0_6CrearCarpetaDiaTxtTraspasos_LOCAL
    Call DA0_7CrearCarpetaMesTxtCompras_LOCAL
    Call DA0_8CrearCarpetaDiaTxtCompras_LOCAL
    Call DA0_10CrearCarpetaRepositorioUsuario_LOCAL

End If

End Sub
Sub CA0_MacroConciliacionArqueos()
Application.ScreenUpdating = False
Application.EnableEvents = False
hora1 = Now
    
    On Error Resume Next
     'limpiar conexiones de importaciones anteriores
    Call DeleteQueryImportaciones
    
     'validar existencia y/o crear carpeta de papeles de trabajo Mes y d|fffd|a actual
    Call CA00_MacroCrearCarpetas
    
    'Importar saldos del d|fffd|a anterior
    Call CI0_SaldosCajasDiaAnterior
    'Actualizar tablas
    Call BB0_ActualizarTablasArqueos
    
    'Importar todos los txt de arqueos procesados
    Call CG0_ImportarTodosConsolidadosTxt
    
    On Error GoTo 0
    
    'Limpiar rangos de captura
    'Call DA2_LimpiarCaptura
    
     'limpiar conexiones de importaciones anteriores
    Call DeleteQueryImportaciones
    
    Sheets(sh15).Select
    
hora2 = Now

MsgBox "PROCESO CONCILIACI|fffd|N DE ARQUEOS ETV FINALIZADO" & vbNewLine & "tiempo " & Format((hora1 - hora2), "hh:mm:ss")

Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub

'''''''''''''''''''''PREPARACI|fffd|N DE SALDOS PARA REALIZAR PLANEACI|fffd|N DEL D|fffd|A'''''''''''''''''''''
Sub CA1_MacroProcesarDesembolsos()

Application.ScreenUpdating = False
Application.EnableEvents = False
Dim hora1, hora2 As Date

hora1 = Now
    
    'guardar archivo
    ActiveWorkbook.Save
    
'''''''''''''''''''Preparaci|fffd|n''''''''''''''''''''''''''''''''

    'limpiar conexiones de importaciones anteriores
    Call DeleteQueryImportaciones

    'validar existencia y/o crear carpeta de papeles de trabajo Mes y d|fffd|a actual
    Call CA00_MacroCrearCarpetas
    
    'validar existencia de hojas de trabajo de Procesamiento de informaci|fffd|n
    Call DA1_ValidarExisteHojasProcesar
    
'''''''''''''''''''|fffd|ltimo monitoreo de saldos''''''''''''''''''''''''''''''''
    'Call CB0_SaldoUltimoMonitoreo

'''''''''''''''''''|fffd|ltima actualizaci|fffd|n % Demanda de OS por Sucursal'''''''''''''
    Call CD0_CatalogoDesembolso

'''''''''''''''''''Actualizar factor de variabilidad por horario de corte'''''
    'Call CE0_AgregarVariabilidadHorario
    

'''''''''''''''''''Desembolosos ODP/TDD''''''''''''''''''''''''''''''''''''''''''
    Call CC0_DesembolsosTddOdp

'''''''''''''''''''Remesas Avansoft'''''''''''''''''''''''''''''''''''''''''''''
    'Call CF0_RemesasAvansoft
    
    'limpiar conexiones de importaciones anteriores
    Call DeleteQueryImportaciones
        
    Sheets(sh3).Select
    
Application.ScreenUpdating = True
Application.EnableEvents = True

hora2 = Now

MsgBox "INFORMACI|fffd|N ODP Y TDD PROCESADA" & vbNewLine & "hora fin " & hora2 & vbNewLine & "tiempo " & Format((hora1 - hora2), "hh:mm:ss")

'On Error Resume Next
'Call CA3_MacroSaldosCortesSinVariabilidad
'On Error GoTo 0

End Sub


'''''''''''''''''''''RESGUARDAR EN TXT LA PLANEACI|fffd|N Y SALDOS'''''''''''''''''''''

Sub CA2_MacroSaldosPlaneacionDiaria()

Application.ScreenUpdating = False
Application.EnableEvents = False


''''''''''''''''''''''''''''CARPETAS DEL MES Y D|fffd|A PLANEACI|fffd|N DEL D|fffd|A'''''''''''''''''''''''''
        Call CA00_MacroCrearCarpetas
        
''''''''''''''''''''''''''''CREAR TXT DE PLANEACI|fffd|N Y SALDOS'''''''''''''''''''''''''''''''''''
         'limpiar conexiones de importaciones anteriores
        Call DeleteQueryImportaciones
        
        'crear txt de planeaci|fffd|n y saldos de caja general
        Call CH0_TxtPlaneacionesSaldosHoy
        
        Call CH0_1TxtPlaneacionesCajasSaldosHoy
        
        'limpiar conexiones de importaciones anteriores
        Call DeleteQueryImportaciones
        
Application.ScreenUpdating = True
Application.EnableEvents = True

End Sub

Sub CA3_MacroSaldosCortesSinVariabilidad()
Application.ScreenUpdating = False
Application.EnableEvents = False
Dim hora1, hora2 As Date

hora1 = Now

'''''''''''''''''''|fffd|ltimo monitoreo de saldos''''''''''''''''''''''''''''''''
    Call CA00_MacroCrearCarpetas
    Call CB0_SaldoUltimoMonitoreo
    'Call CE1_ComplementoSaldosCorte
'    Call CE0_4AgregarSaldosCortePlaneacionSinVariacion
    Call CB0_2FormatoAlertas
    
hora2 = Now

Application.ScreenUpdating = True
Application.EnableEvents = True

'MsgBox "SALDOS EN SUCURSALES ACTUALIZADOS" & vbNewLine & "hora fin " & Hora2 & vbNewLine & "tiempo " & Format((Hora1 - Hora2), "hh:mm:ss")

End Sub


Sub CA4_MacroSaldosIniciales()
Application.ScreenUpdating = False
Application.EnableEvents = False

Call CA00_MacroCrearCarpetas
Call CM_SaldosInicialesSucursales

Application.ScreenUpdating = True
Application.EnableEvents = True

End Sub

Sub CA5_MacroLimitesOperativos()

Application.ScreenUpdating = False
Application.EnableEvents = False

Call CA00_MacroCrearCarpetas
Call CN_LimitesOperativos

Application.ScreenUpdating = True
Application.EnableEvents = True

End Sub

Sub CA6_MacroActualizarTodoPlaneacionServicios()

On Error Resume Next

Call CA4_MacroSaldosIniciales

''''''MONITOREO SALDO ACTUAL'''''''''''''''''''
    Application.ScreenUpdating = False
    Application.EnableEvents = False


    Call CA00_MacroCrearCarpetas
    Call CB0_SaldoUltimoMonitoreo
    'Call CE1_ComplementoSaldosCorte
    Call CE0_4AgregarSaldosCortePlaneacionSinVariacion
    
    Application.ScreenUpdating = True
    Application.EnableEvents = True

'''''''''''''''''''''''''''''''''''''''''''''

Call CA5_MacroLimitesOperativos

'''''''''''PARTE DE MONITOREO'''''''''''''''''
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Call CB0_2FormatoAlertas
    '
    Call CQ6_CiCoDiaActualSucursales
    'formato comportamiento saldos
    
    'Call CQ7_EstatusDinamicoMonitoreoSucursales
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    
    
    
On Error GoTo 0

End Sub


Sub CA7_ConsolidadosTxtTodosControles()
    
    ActiveWorkbook.Save
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Dim shAct As String
    shAct = ActiveSheet.Name
    
    Call VariablesGlobales
    Call QuitarFiltrosTodasHojas
    'CARPETAS
    Call CA00_MacroCrearCarpetas
    
    If Sheets(sh19).Range("B8").value = "CARPETA COMPARTIDA" Then
        
        MsgBox "RESPALDO EN CARPETA COMPARTIDA Y EN MIS DOCUMENTOS"
        
    ElseIf Sheets(sh19).Range("B8").value = "LOCAL" Then
    
        MsgBox "RESPALDO SOLO EN MIS DOCUMENTOS"
        
    End If
        
        
    'sh17 = "Registro COMPRAS"
    Call CH0_4TxtComprasHoy
    
    'sh3 = "pm_PLANEACION_SERVICIOS"
    Call CH0_TxtPlaneacionesSaldosHoy
    
    'sh18 = "ProgramacionDotaciones"
    Call CH0_5TxtProgramacionDotaciones
    
    'sh22 = "ProgramacionServicios"
    Call CH1_5TxtProgramacionServicios
    
    'sh1 = "pm_PLANEACION_CAJAS"
    Call CH0_1TxtPlaneacionesCajasSaldosHoy
    
    'sh15 = "am_CONCILIAR_ARQUEOS"
    Call CH0_2TxtConciliacionArqueosCajasHoy
    
    'sh13 = "MovimientosSalida"
    Call CH0_3TxtTraspasosCajasHoy
    
    'sh16 = "MovimientosEntrada"
    Call CH0_6TxtTraspasosEntradaCajasHoy
'
'    'sh24 = "pm_PLANEACION_COMPRAS"
'    Call CH0_7TxtPlaneacionCompras
    
    'COPIAR DE ARCHIVO EN LOCAL
    Call CR0_1_CopiaLocal
    
    Sheets(shAct).Select
    
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    
    ActiveWorkbook.Close False
    
End Sub


Attribute VB_Name = "CB_SALDO_CORTE_MONITOREO"
'''''''''''''''''''''''IMPORTAR TODOS LOS ARCHIVOS DE SALDOS DISPONIBLES'''''''''''''''''''''''
'Extraer la informaci|fffd|n del |fffd|ltimo monitoreo ejecutado

Sub CB0_SaldoUltimoMonitoreo()

Call VariablesGlobales

Dim NombreArchi, UltimoArchi As String
Dim archi, rango As Variant
Dim FechaModArchi, FechaModificacionArchivo, FechaArchi1 As Date
Dim NumArchi As Integer
Dim fila As Long
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String

'limpiar hoja de acumulado
Sheets(sh6).Select
Cells.Clear

Sheets(sh8).Select
Cells.ClearContents

'Ubicar fecha del reporte
'FechaValor = FechaValorGeneral
fechaValor = fechaOperacion

DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = "Enero"
ElseIf MonthValor = 2 Then
NombreMes = "Febrero"
ElseIf MonthValor = 3 Then
NombreMes = "Marzo"
ElseIf MonthValor = 4 Then
NombreMes = "Abril"
ElseIf MonthValor = 5 Then
NombreMes = "Mayo"
ElseIf MonthValor = 6 Then
NombreMes = "Junio"
ElseIf MonthValor = 7 Then
NombreMes = "Julio"
ElseIf MonthValor = 8 Then
NombreMes = "Agosto"
ElseIf MonthValor = 9 Then
NombreMes = "Septiembre"
ElseIf MonthValor = 10 Then
NombreMes = "Octubre"
ElseIf MonthValor = 11 Then
NombreMes = "Noviembre"
ElseIf MonthValor = 12 Then
NombreMes = "Diciembre"
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If

UnidadRuta = UnidadAsignada & RutaSaldos & MonthLabel & " " & NombreMes & " " & YearLabel & " Monitoreo Saldos Sucursales"
fechaCarpeta = DayLabel & MonthLabel & YearLabel & " Monitoreo"


On Error Resume Next
carpeta = UnidadRuta & "\" & fechaCarpeta & "\"


'abrir archivos de carpeta indicada
ChDrive (UnidadAsignada)
ChDir (carpeta)
archi = Dir("*mm.txt")

If archi = "" Then
MsgBox "NO HAY INFORMACI|fffd|N DE MONITOREO DE SALDOS"
    GoTo fin:
    
End If


Sheets(sh6).Select
rango = "A2"

'numero de txt en carpeta de monitoreo de saldos del d|fffd|a
NumArchi = 0
Do While archi <> ""
NumArchi = NumArchi + 1
archi = Dir()
Loop

'abrir archivos de carpeta indicada
ChDrive (UnidadAsignada)
ChDir (carpeta)
archi = Dir("*mm.txt")


If NumArchi = 1 Then
Archi1 = archi



ElseIf NumArchi > 1 Then
        
        ChDrive (UnidadAsignada)
        ChDir (carpeta)
        archi = Dir("*mm.txt")
        FechaArchi1 = Format(DateValue(Now), "dd/mm/yyyy hh:mm")
        
        Do While archi <> ""
        NombreArchi = archi
            
            FechaModArchi = ObtenerFechaModificacionArchivo(carpeta & NombreArchi)
            
        
                If FechaModArchi > FechaArchi1 Then
                Archi1 = NombreArchi
                Else
                FechaArchi1 = FechaModArchi
                
                End If

        
        archi = Dir()
        Loop
    

End If


  
        'TEXTO DE ARCHIVO SIN SEPARACIONES
        
    With ActiveSheet.QueryTables.Add(Connection:= _
        "TEXT;" & carpeta & Archi1, Destination:=Range("$A$2"))
        .Name = Archi1
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlFixedWidth
        .TextFileTextQualifier = xlTextQualifierDoubleQuote
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileOtherDelimiter = "|"
        .TextFileColumnDataTypes = Array(2)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    End With
        
     'CONTAR FILAS
     NFilas = (Range("A2", Range("A2").End(xlDown)).Count) + 1
'     'REGISTRAR NOMBRE DE ARCHIVO
     'COPIAR
     Range("A2:A" & NFilas).Copy

'     'PEGAR
     Sheets(sh8).Select
     Range("A2").Select
     ActiveSheet.Paste
     Application.CutCopyMode = False
    
    'encabezados
    Cells(1, 1) = "IdSucursal"
    Cells(1, 2) = "NombreSucursal"
    Cells(1, 3) = "Saldo"
    Cells(1, 4) = "UsuarioRegistro"
    Cells(1, 5) = "HoraMonitoreo"
    Cells(1, 6) = "FechaMonitoreo"
    Cells(1, 7) = "FactorTiempoRestante"
    Cells(1, 8) = "SaldoAjustado"
    
'     If Range("A2", Range("A2").End(xlDown)).Count > 10000 Then
'        Range("A2").Select
'        ActiveSheet.Paste
'        Application.CutCopyMode = False
'     Else
'        Range("A2").End(xlDown).Offset(1, 0).Select
'        ActiveSheet.Paste
'        Application.CutCopyMode = False
'     End If

'sh6 = "Procesar"
     Sheets(sh6).Select
     Cells.Clear
     
  
'sh8 = "SaldoCorte"
    Sheets(sh8).Select
    
    'MACRO CON LAYOUT
    Call CB0_1LayoutArchivoTxt
            
    Call CE0_4AgregarSaldosCortePlaneacionSinVariacion
    'Call CB0_2FormatoAlertas

fin:

End Sub

Sub CB0_1LayoutArchivoTxt()
'
' layout Macro
'

'
    Range("A2").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.TextToColumns Destination:=Range("A2"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
        :="|", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, _
        1), Array(6, 4)), TrailingMinusNumbers:=True
    Columns("E:E").Select
    Selection.NumberFormat = "h:mm AM/PM"
    Columns("F:F").Select
    Selection.NumberFormat = "m/d/yyyy"
    Columns("C:C").Select
    Selection.NumberFormat = "$#,##0.00"
    Range("A1").Select
    ActiveCell.FormulaR1C1 = "IdSucursal"
    Range("B1").Select
    ActiveCell.FormulaR1C1 = "NombreSucursal"
    Range("C1").Select
    ActiveCell.FormulaR1C1 = "Saldo"
    Range("D1").Select
    ActiveCell.FormulaR1C1 = "UsuarioRegistro"
    Range("E1").Select
    ActiveCell.FormulaR1C1 = "HoraMonitoreo"
    Range("F1").Select
    ActiveCell.FormulaR1C1 = "FechaMonitoreo"
    

End Sub




Sub CB0_2FormatoAlertas()
Call VariablesGlobales
Dim ColorAlerta, FuenteAlerta, TamanoAlerta As Double
Dim ColorAlerta2, FuenteAlerta2, TamanoAlerta2 As Double
Dim ColorEstable, FuenteEstable, TamanoEstable As Double
Dim PisoAlerta, PisoAlerta2, PisoAlerta3 As Double
Dim numCol, NumRow, ColDias As Integer
Dim punteroFiltro As String
Dim celda, rango As Range

'sh19 = "PARAMETROS"

    ColorEstable = Sheets(sh19).Range("B16").Interior.Color
    FuenteEstable = Sheets(sh19).Range("B16").Font.ColorIndex
    TamanoEstable = Sheets(sh19).Range("B16").Font.size
    
    ColorAlerta = Sheets(sh19).Range("B13").Interior.Color
    FuenteAlerta = Sheets(sh19).Range("B13").Font.ColorIndex
    TamanoAlerta = Sheets(sh19).Range("B13").Font.size
    
    ColorAlerta2 = Sheets(sh19).Range("B14").Interior.Color
    FuenteAlerta2 = Sheets(sh19).Range("B14").Font.ColorIndex
    TamanoAlerta2 = Sheets(sh19).Range("B14").Font.size
    
    ColorAlerta3 = Sheets(sh19).Range("B15").Interior.Color
    FuenteAlerta3 = Sheets(sh19).Range("B15").Font.ColorIndex
    TamanoAlerta3 = Sheets(sh19).Range("B15").Font.size
    
    PisoAlerta = Sheets(sh19).Range("B13")
    PisoAlerta2 = Sheets(sh19).Range("B14")
    PisoAlerta3 = Sheets(sh19).Range("B15")
    
'sh3 = "pm_PLANEACION_SERVICIOS"

'If Application.WorksheetFunction.Sum(Range("H4", Range("H4").End(xlDown))) = 0 Then
'Exit Sub
'End If

'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select

numCol = (Range("A3", Range("A3").End(xlToRight)).Count)
NumRow = (Range("A3", Range("A3").End(xlDown)).Count) + 2

'MsgBox WorksheetFunction.Sum(Range(Cells(3, 8), Cells(NumRow, 8)))
'dentificar si hay informaci|fffd|n en monitoreo de saldo actual
If WorksheetFunction.Sum(Range(Cells(3, 8), Cells(NumRow, 8))) > 0 Then
ColDias = 9
punteroFiltro = "I3"
ElseIf WorksheetFunction.Sum(Range(Cells(3, 8), Cells(NumRow, 8))) <= 0 Then
ColDias = 7
punteroFiltro = "G3"
End If


Set rango = Range(Cells(4, ColDias), Cells(NumRow, ColDias))


'Rango.Select

For Each celda In rango

        If celda <= PisoAlerta Then
        
            Range(Cells(celda.Row, 1), Cells(celda.Row, numCol)).Interior.Color = ColorAlerta
            Range(Cells(celda.Row, 1), Cells(celda.Row, numCol)).Font.ColorIndex = FuenteAlerta
            Range(Cells(celda.Row, 1), Cells(celda.Row, numCol)).Font.size = TamanoAlerta
        
        
        ElseIf celda <= PisoAlerta2 Then
        
            Range(Cells(celda.Row, 1), Cells(celda.Row, numCol)).Interior.Color = ColorAlerta2
            Range(Cells(celda.Row, 1), Cells(celda.Row, numCol)).Font.ColorIndex = FuenteAlerta2
            Range(Cells(celda.Row, 1), Cells(celda.Row, numCol)).Font.size = TamanoAlerta2
        
        ElseIf celda >= PisoAlerta3 Then
        
            Range(Cells(celda.Row, 1), Cells(celda.Row, numCol)).Interior.Color = ColorAlerta3
            Range(Cells(celda.Row, 1), Cells(celda.Row, numCol)).Font.ColorIndex = FuenteAlerta3
            Range(Cells(celda.Row, 1), Cells(celda.Row, numCol)).Font.size = TamanoAlerta3
            
        
        Else
        
            Range(Cells(celda.Row, 1), Cells(celda.Row, numCol)).Interior.Color = ColorEstable
            Range(Cells(celda.Row, 1), Cells(celda.Row, numCol)).Font.ColorIndex = FuenteEstable
            Range(Cells(celda.Row, 1), Cells(celda.Row, numCol)).Font.size = TamanoEstable
        
        End If

Next celda


Sheets(sh3).Select
    If Worksheets(sh3).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        Worksheets(sh3).AutoFilterMode = False
    Else
        'MsgBox "no hay filtro"
    End If

Range(Cells(3, 1), Cells(NumRow, numCol)).Select

Selection.AutoFilter

    ActiveWorkbook.Worksheets(sh3).AutoFilter.Sort.SortFields _
        .Clear
    ActiveWorkbook.Worksheets(sh3).AutoFilter.Sort.SortFields _
        .Add Key:=Range(punteroFiltro), SortOn:=xlSortOnValues, Order:=xlAscending, _
        DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets(sh3).AutoFilter.Sort
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With

Range("E4").Select

End Sub


Sub CB1_MonitoreoDotacionesDiarias(fecha As Date)
Call CA00_MacroCrearCarpetas
Call VariablesGlobales

'agregar id a caja de recepci|fffd|n

Dim NombreArchivo, RutaArchivo As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim row0, col0 As Integer
Dim totRows, totCols As Long
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String
Dim etiquetaArchivo As String
Dim DOTACIONES As Collection

Set DOTACIONES = New Collection

etiquetaArchivo = "Monitoreo Dotaciones"
'Ubicar fecha del reporte
fechaValor = fecha


DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If

'limpiar hoja proceso sh6 = "Procesar"
Sheets(sh6).Select
Cells.Clear
Call DeleteQueryImportaciones

UnidadRuta = UnidadAsignada & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"

RutaArchivo = UnidadRuta & "\" & fechaCarpeta


ChDrive (UnidadAsignada)
ChDir (RutaArchivo)
archi = Dir("*" & etiquetaArchivo & ".txt")
rango = "A1"

Do While archi <> ""

    'importar dotaciones registradas sin separaciones
     With ActiveSheet.QueryTables.Add(Connection:="TEXT;" & _
         RutaArchivo & "\" & archi, Destination:=Range(rango)) '<===========
        .Name = archi
        .FieldNames = False
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = False
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = False
        .AdjustColumnWidth = False
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlFixedWidth
        .TextFileTextQualifier = xlTextQualifierDoubleQuote
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = True
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileColumnDataTypes = Array(2)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False

    End With
    
    DOTACIONES.Add Range(rango).value
    Cells.Clear

archi = Dir()


Loop

row0 = 1

For i = 1 To DOTACIONES.Count
    
    Cells(row0, 1) = DOTACIONES(i)
    
    row0 = row0 + 1
    
Next i

'separar por columnas
row0 = 1
col0 = 1
totRows = Range("A65000").End(xlUp).Row

If totRows = 1 Then
    Range(Cells(row0, col0), Cells(totRows + 1, col0)).Select
    Selection.TextToColumns Destination:=Range(Cells(row0, col0), Cells(totRows, col0)), DataType:=xlDelimited, _
            TextQualifier:=xlNone, ConsecutiveDelimiter:=False, Tab:=False, _
            Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
            :="|", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 4), Array(4, 1), Array(5, _
            1), Array(2, 1), Array(6, 1), Array(7, 1)), TrailingMinusNumbers:=True
        Columns("A:A").EntireColumn.AutoFit
    
    
    
    Call CB1_1AgregarDotacionesConfirmadas

ElseIf totRows >= 2 Then
    Range(Cells(row0, col0), Cells(totRows, col0)).Select
    Selection.TextToColumns Destination:=Range(Cells(row0, col0), Cells(totRows, col0)), DataType:=xlDelimited, _
            TextQualifier:=xlNone, ConsecutiveDelimiter:=False, Tab:=False, _
            Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
            :="|", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 4), Array(4, 1), Array(5, _
            1), Array(2, 1), Array(6, 1), Array(7, 1)), TrailingMinusNumbers:=True
        Columns("A:A").EntireColumn.AutoFit
    
    
    
    Call CB1_1AgregarDotacionesConfirmadas

End If

'rango para imprimir sh12 = "Confirma_DOTACION"
'totCols

Sheets(sh12).Select

Call DeleteQueryImportaciones

End Sub

Sub CB1_1AgregarDotacionesConfirmadas()

Application.ScreenUpdating = False
Application.EnableEvents = False

Call VariablesGlobales
Dim row0, col0 As Integer
Dim totRows, totColsm, totRows1, totCols1 As Long
Dim rangoOrigen, rangoMatriz As Range
Dim CONFIRMACIONES() As Variant
Dim punteroHora, punteroDotRec As Integer

row0 = 1
col0 = 1


'rango matriz sh6 = "Procesar"
Sheets(sh6).Select
totRows = Range("A65000").End(xlUp).Row
totCol = Range("A2").End(xlToRight).Column

ReDim CONFIRMACIONES(totRows, 7)

For i = 1 To UBound(CONFIRMACIONES)
    'id sucursal
    CONFIRMACIONES(i, 1) = Cells(row0, 1)
    'sucursal
    CONFIRMACIONES(i, 2) = Cells(row0, 2)
    'fecha
    CONFIRMACIONES(i, 3) = Cells(row0, 3)
    'hora
    CONFIRMACIONES(i, 4) = Cells(row0, 4)
    'importe
    CONFIRMACIONES(i, 5) = Cells(row0, 5)
    'etv
    CONFIRMACIONES(i, 6) = Cells(row0, 6)
    'usuario
    CONFIRMACIONES(i, 7) = Cells(row0, 7)
    
    row0 = row0 + 1
    
Next i

'rango para imprimir sh12 = "Confirma_DOTACION"
'totCols
Sheets(sh12).Select
row1 = 3
col1 = 1
totRows1 = Range("A65000").End(xlUp).Row
totCol1 = Range("A2").End(xlToRight).Column

Do While Cells(row1, 1) <> ""

    If Cells(row1, 7) = "" Then
    
        For i = 1 To UBound(CONFIRMACIONES)
        
            If Cells(row1, 1) = CONFIRMACIONES(i, 1) And Cells(row1, 4) = CONFIRMACIONES(i, 6) Then
                
'                'etv
'                Cells(row1, 4) = CONFIRMACIONES(i, 6)
                'importe
                Cells(row1, 7) = CONFIRMACIONES(i, 5)
                'fecha recepci|fffd|n
                Cells(row1, 8) = CONFIRMACIONES(i, 3)
                'hora
                Cells(row1, 9) = CONFIRMACIONES(i, 4)
                'fecha registro
                Cells(row1, 10) = CONFIRMACIONES(i, 3)
                'diferencia
                Cells(row1, 12).FormulaR1C1 = "=RC[-5]-RC[-7]"
                'usuario
                Cells(row1, 13) = CONFIRMACIONES(i, 7)
                
                Exit For
                
            End If
        
        Next i
        
        
    End If
    
    row1 = row1 + 1
    
Loop


'ordenar
col1 = 1
row1 = 3
punteroHora = 9
punteroDotRec = 7

    ActiveWorkbook.Worksheets(sh12).Sort.SortFields.Clear
        'columna de hora
    ActiveWorkbook.Worksheets(sh12).Sort.SortFields.Add Key:= _
        Range(Cells(row1, punteroHora), Cells(totRows1, punteroHora)), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
        'columna de dotaci|fffd|n recibida
    ActiveWorkbook.Worksheets(sh12).Sort.SortFields.Add Key:= _
        Range(Cells(row1, punteroDotRec), Cells(totRows1, punteroDotRec)), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption _
        :=xlSortNormal
        'rango completo
    With ActiveWorkbook.Worksheets(sh12).Sort
        .SetRange Range(Cells(row1 - 1, col1), Cells(totRows1, totCol1))
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    
Application.ScreenUpdating = True
Application.EnableEvents = True


End Sub


Sub CB2_MonitoreoDotacionesComprasDiarias(fecha As Date, Dotacion_1_Compras2 As Integer)
'Consulta de registros de confirmaci|fffd|n de dotaciones diarias o registros de compras
Call CA00_MacroCrearCarpetas
Call VariablesGlobales

'agregar id a caja de recepci|fffd|n

Dim NombreArchivo, RutaArchivo As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim row0, col0 As Integer
Dim totRows, totCols As Long
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String
Dim etiquetaArchivo As String
Dim CONSULTA As Collection
Dim cuSh, cuWo As String

cuSh = ActiveSheet.Name
cuWo = ActiveWorkbook.Name

Set CONSULTA = New Collection

Select Case Dotacion_1_Compras2
    
    Case 1
        etiquetaArchivo = "Monitoreo Dotaciones"
    Case 2
        etiquetaArchivo = "Monitoreo Compras"

End Select

'Ubicar fecha del reporte
fechaValor = fecha


DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If

'limpiar hoja proceso sh6 = "Procesar"
Sheets(sh6).Select
Cells.Clear
Call DeleteQueryImportaciones

UnidadRuta = UnidadAsignada & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"

RutaArchivo = UnidadRuta & "\" & fechaCarpeta


ChDrive (UnidadAsignada)
ChDir (RutaArchivo)
archi = Dir("*" & etiquetaArchivo & ".txt")
rango = "A1"

Do While archi <> ""

    'importar dotaciones registradas sin separaciones
     With ActiveSheet.QueryTables.Add(Connection:="TEXT;" & _
         RutaArchivo & "\" & archi, Destination:=Range(rango)) '<===========
        .Name = archi
        .FieldNames = False
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = False
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = False
        .AdjustColumnWidth = False
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlFixedWidth
        .TextFileTextQualifier = xlTextQualifierDoubleQuote
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = True
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileColumnDataTypes = Array(2)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False

    End With
    
    CONSULTA.Add Range(rango).value
    Cells.Clear

archi = Dir()


Loop


'''''''''''''''''''''''IMPRIMIR INFORMACI|fffd|N DE COMPRAS''''''''''''''''''''''''''''
Workbooks.Add
Sheets(1).Select

row0 = 2

For i = 1 To CONSULTA.Count
    
    Cells(row0, 1) = CONSULTA(i)
    
    row0 = row0 + 1
    
Next i

'separar por columnas
row0 = 2
col0 = 1
totRows = Range("A65000").End(xlUp).Row
'MsgBox totRows

If totRows = 1 Then
    GoTo final:
    
ElseIf totRows <= 2 Then
    Range(Cells(row0, col0), Cells(totRows + 1, col0)).Select
    Selection.TextToColumns Destination:=Range(Cells(row0, col0), Cells(totRows, col0)), DataType:=xlDelimited, _
            TextQualifier:=xlNone, ConsecutiveDelimiter:=False, Tab:=False, _
            Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
            :="|", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 4), Array(4, 1), Array(5, _
            1), Array(2, 1), Array(6, 1), Array(7, 1)), TrailingMinusNumbers:=True
        Columns("A:A").EntireColumn.AutoFit
    
    
    
    'Call CB1_1AgregarDotacionesConfirmadas

ElseIf totRows >= 2 Then
    Range(Cells(row0, col0), Cells(totRows, col0)).Select
    Selection.TextToColumns Destination:=Range(Cells(row0, col0), Cells(totRows, col0)), DataType:=xlDelimited, _
            TextQualifier:=xlNone, ConsecutiveDelimiter:=False, Tab:=False, _
            Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
            :="|", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 4), Array(4, 1), Array(5, _
            1), Array(2, 1), Array(6, 1), Array(7, 1)), TrailingMinusNumbers:=True
        Columns("A:A").EntireColumn.AutoFit
        
    'Call CB1_1AgregarDotacionesConfirmadas

End If

final:
'rango para imprimir
'totCols

If Dotacion_1_Compras2 = 1 Then
    'layout COMPRAS
    Cells(1, 1) = "IdSucursal"
    Cells(1, 2) = "Sucursal"
    Cells(1, 3) = "Fecha"
    Cells(1, 4) = "Hora"
    Cells(1, 5) = "Dotacion"
    Cells(1, 6) = "EtvTraslado"
    Cells(1, 7) = "UsuarioConfirmacion"
    Cells(1, 8) = "FechaHoraRegistro"
'    Cells(1, 8) = "MontoComprado"
'    Cells(1, 9) = "VendedorCompra"
'    Cells(1, 10) = "EtvVendedorCompra"
'    Cells(1, 11) = "PlazaCompraOrigen"
'    Cells(1, 12) = "ComboRespuestaVendedor"
'    Cells(1, 13) = "EtvTrasladoCompra"
'    Cells(1, 14) = "FechaTrasladoCompra"
'    Cells(1, 15) = "BilletesCompra"
'    Cells(1, 16) = "MetalicaCompra"
'    Cells(1, 17) = "FolioSolicitudCompra"
'    Cells(1, 18) = "ClaveRastreoCompra"
'    Cells(1, 19) = "UsuarioWindows"
'    Cells(1, 20) = "FolioControl"
'    Cells(1, 21) = "FechaRegistro"
'AUTOFIT
Columns("A:H").AutoFit

End If

If Dotacion_1_Compras2 = 2 Then
    'layout COMPRAS
    Cells(1, 1) = "EstatusCompra"
    Cells(1, 2) = "MedioAbastecimiento"
    Cells(1, 3) = "PlazaCompra"
    Cells(1, 4) = "EtvCompra"
    Cells(1, 5) = "IdPlazaCompra"
    Cells(1, 6) = "FechaCompra"
    Cells(1, 7) = "MontoInicialRequerido"
    Cells(1, 8) = "MontoComprado"
    Cells(1, 9) = "VendedorCompra"
    Cells(1, 10) = "EtvVendedorCompra"
    Cells(1, 11) = "PlazaCompraOrigen"
    Cells(1, 12) = "ComboRespuestaVendedor"
    Cells(1, 13) = "EtvTrasladoCompra"
    Cells(1, 14) = "FechaTrasladoCompra"
    Cells(1, 15) = "BilletesCompra"
    Cells(1, 16) = "MetalicaCompra"
    Cells(1, 17) = "FolioSolicitudCompra"
    Cells(1, 18) = "ClaveRastreoCompra"
    Cells(1, 19) = "UsuarioWindows"
    Cells(1, 20) = "FolioControl"
    Cells(1, 21) = "FechaRegistro"
'AUTOFIT
Columns("A:U").AutoFit

End If

'autofit



Windows(cuWo).Activate
Sheets(cuSh).Select

Call DeleteQueryImportaciones

End Sub


Sub CB3_ConsultaDiariosDotacionCompra()
Call VariablesGlobales

Dim fecha As Date

fecha = fechaOperacion

If CONSULTA_DATOS_DEL_DIA.OptionButtonCompras.value = True Then

Call CB2_MonitoreoDotacionesComprasDiarias(fecha, 2)

ElseIf CONSULTA_DATOS_DEL_DIA.OptionButtonDotaciones.value = True Then

Call CB2_MonitoreoDotacionesComprasDiarias(fecha, 1)

End If


Unload CONSULTA_DATOS_DEL_DIA

End Sub
Attribute VB_Name = "CC_DESEMBOLSOS_TDD_ODP"
'''''''''''''''''''''''IMPORTAR TODOS LOS ARCHIVOS DE SALDOS DISPONIBLES'''''''''''''''''''''''
'Extraer la informaci|fffd|n del |fffd|ltimo monitoreo ejecutado

Sub CC0_DesembolsosTddOdp()

Call VariablesGlobales
Dim MiLibroMacro As String
Dim NombreArchi, UltimoArchi As String
Dim archi, rango As Variant
Dim FechaModArchi, FechaModificacionArchivo, FechaArchi1 As Date
Dim NumArchi As Integer
Dim fila As Long
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String
Dim col0, row0, ColS8, RowS8 As Integer
Dim RangoValores As Range


'limpiar conexiones de importaciones anteriores
    Call DeleteQueryImportaciones

'fijar nombre de ventana
MiLibroMacro = ActiveWorkbook.Name
'columna de inicio captura de los desembolsos en la Hoja OdpTddRemesas
ColS8 = 1
RowS8 = 5

col0 = 14
row0 = 4

'LIMPIAR RANGO DE CAPTURA
'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select
Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)).ClearContents


'limpiar hoja de Procesar sh6 = "Procesar"
Sheets(sh6).Select
Cells.Clear

'limpiar rango captura en OdpTddRemesas
Sheets(sh7).Select
Range(Cells(RowS8, ColS8), Cells(RowS8, ColS8 + 7).End(xlDown)).Select
Selection.ClearContents

Columns(ColS8).Select
Selection.NumberFormat = "General"
Columns(ColS8 + 1).Select
Selection.NumberFormat = "General"


'Ubicar fecha del reporte
'FechaValor = FechaValorGeneral
fechaValor = fechaOperacion

DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If

UnidadRuta = UnidadAsignada & RutaDesembolsos & MonthLabel & ". " & NombreMes




''''''''''''''ubicar el |fffd|ltimo archivo creado en el d|fffd|a de operaci|fffd|n'''''''''''''''''''''''''''''''''
'abrir archivos de carpeta indicada
ChDrive (UnidadAsignada)
ChDir (UnidadRuta)
archi = Dir(UnidadRuta & "\" & "DES*.xls*")



Sheets(sh6).Select
rango = "A2"

'numero de txt en carpeta de monitoreo de saldos del d|fffd|a
NumArchi = 0
Do While archi <> ""
NumArchi = NumArchi + 1
archi = Dir()
Loop



'abrir archivos de carpeta indicada
ChDrive (UnidadAsignada)
ChDir (UnidadRuta)
archi = Dir(UnidadRuta & "\" & "DES*.xls*")





If NumArchi = 1 Then
NombreArchi = archi
FechaModArchi = ObtenerFechaModificacionArchivo(UnidadRuta & "\" & NombreArchi)
FechaArchi1 = FechaModArchi

ElseIf NumArchi > 1 Then
        
        ChDrive (UnidadAsignada)
        ChDir (UnidadRuta)
        archi = Dir(UnidadRuta & "\" & "DES*.xls*")
        FechaArchi1 = Format(DateValue(Now), "dd/mm/yyyy hh:mm")
        
        Do While archi <> ""
        NombreArchi = archi
            
            FechaModArchi = ObtenerFechaModificacionArchivo(UnidadRuta & "\" & NombreArchi)
            'MsgBox FechaModArchi < FechaArchi1 & " nombre archivo " & NombreArchi
            
        
                If FechaModArchi > FechaArchi1 Then
                Archi1 = NombreArchi
                Else
                FechaArchi1 = FechaModArchi
                
                End If

        
        archi = Dir()
        Loop
    

End If

fechaCarpeta = NombreArchi

'si no hay archivo salir
If fechaCarpeta = "" Then
MsgBox "No hay archivo"
Exit Sub
End If
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

On Error Resume Next
carpeta = UnidadRuta & "\" & fechaCarpeta

Sheets(sh6).Select
Range("a1").Select

        'Abrir libro y copiar informaci|fffd|n
        
         Workbooks.Open Filename:=carpeta
    Range("F1").Select
    Range(Selection, Selection.End(xlDown)).Select
    Range(Selection, Selection.End(xlToLeft)).Select
    Selection.Copy
    
    Windows(MiLibroMacro).Activate
    Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
        
     Windows(NombreArchi).Activate
    Range("A1").Select
    Application.DisplayAlerts = False
    ActiveWorkbook.Close
    Application.DisplayAlerts = True
     Windows(MiLibroMacro).Activate
    Sheets(sh6).Select
    Range("A1").Select
    
'dar formato a informaci|fffd|n
        
     'CONTAR FILAS
     NFilas = Range("F1", Range("F1").End(xlDown)).Count

    Set RangoValores = Range(Cells(2, 2), Cells(NFilas, 3))
    
    RangoValores.Select
    
    'convertir a valor columna num|fffd|ricas
    For Each cell In RangoValores
        cell.value = Trim(cell)
        cell.value = Val(cell)
    Next
    
     'COPIAR
     Range("A2:F" & NFilas).Copy

'     'PEGAR
     Sheets(sh7).Select
     Range(Cells(RowS8, ColS8 + 2), Cells(RowS8, ColS8 + 7)).Select
     ActiveSheet.Paste
     Application.CutCopyMode = False
    
    'LIMPIAR NOMBRE DE SUCURSAL
    Columns(ColS8 + 2).Select
    Selection.Replace What:="CD ", Replacement:="Ciudad ", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="Xelha", Replacement:="Xel ha", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="3", Replacement:="Tres", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
     Selection.Replace What:="TEOLUYACAN", Replacement:="TEOLOYUCAN", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="MERIDA KUKULKAN", Replacement:="MERIDA KUKULCAN", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="XALAPA COLONIA", Replacement:="XALAPA COLONIAL", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="XALAPA COLONIALL", Replacement:="XALAPA COLONIAL", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="XALAPA XALILTIC", Replacement:="XALAPA XALLITIC", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="SAN QUINTIN", Replacement:="ENSENADA ORIENTE", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="SAN LUCAS", Replacement:="SAN LUCAS PONIENTE", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="SAN LUCAS PONIENTE PONIENTE", Replacement:="SAN LUCAS PONIENTE", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="AEROPUERTO", Replacement:="AEROPUERTO DF", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="AEROPUERTO DF DF", Replacement:="AEROPUERTO DF", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
     Selection.Replace What:="MERIDA AEROPUERTO DF", Replacement:="MERIDA AEROPUERTO", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
     Selection.Replace What:="PIEDRAS NEGRAS VERACRUZ", Replacement:="VERACRUZ PIEDRAS NEGRAS", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="SANTIAGO TIANGUISTENGO", Replacement:="SANTIAGO TIANGUISTENCO", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
        
    Range(Cells(RowS8, ColS8 + 2)).Select
    
    
    Call Limpiar
    
    'sh6 = "Procesar"
     Sheets(sh6).Select
     Cells.Clear
     
     'sh7 = "OdpTdd"
    Sheets(sh7).Select
    
    'FORMULAS PARA OBTENER CC DE OS XLS
    Range(Cells(RowS8, ColS8 + 1), Cells(NFilas + 4, ColS8 + 1)).Select
    Selection.FormulaR1C1 = "=RC[6]&RC[1]"

    Range(Cells(RowS8, ColS8), Cells(NFilas + 4, ColS8)).Select
    Selection.FormulaR1C1 = _
        "=RC[7]&IFERROR(VLOOKUP(RC[2],CHOOSE({2,1},Salidas!C1,Salidas!C6),2,0),"""")"
    
    
    'CC DE SALIDAS
    'Call CC1_CentroCostosTddOdp
    
    Call CD0_2FormulasDesembolsos
    
    Call CC2_AgregarOdpTddPlan
    

    
    
End Sub



Sub CC1_CentroCostosTddOdp()

Call VariablesGlobales

Dim i As Double
Dim j As Double
Dim marca, Carburante, Comunidad As String


'sh7 = "OdpTdd"
'sh9 = "Salidas"

With Worksheets(sh7)

total = Application.CountA(.Range("A:A")) + 3


End With



'Definimos rango de tablabase sh4 = "CatalogoPlazas"
fin = Application.CountA(Worksheets(sh9).Range("f:f"))


'Definimos rango de datos
final = Application.CountA(Worksheets(sh7).Range("C:C")) + 2


With Worksheets(sh7)

    'Iniciamos el bucle principal en tabla Datos
    For i = 5 To final
    'Definimos cada uno de los Items por los que vamos a buscar
    PlazaEtv = Sheets(sh7).Cells(i, 3)
    
        For j = 2 To fin
            'Buscamos con un condicional en tablabase cada una de las variables definidas
            If PlazaEtv = Sheets(sh9).Cells(j, 6) Then
            'Si encontramos coincidencia, igualamos celdas con el valor de la columna 4
            Sheets(sh7).Cells(i, 1) = Sheets(sh7).Cells(i, 8) & Sheets(sh9).Cells(j, 1)
            Exit For
            Else
            Sheets(sh7).Cells(i, 1) = Sheets(sh7).Cells(i, 8)
            End If
        Next j
    Next i

End With

End Sub


Sub CC2_AgregarOdpTddPlan()


Call VariablesGlobales
'sh7 = "OdpTdd"
'sh9 = "Salidas"
'sh3 = "pm_PLANEACION_SERVICIOS"}

Dim numReg, X, Y, z As Long
Dim NumReg9, x9, y9 As Long
Dim total As Double
Dim rango As Range
Dim fechaOdpTdd As Date
Dim diaOdpTdd, mesOdpTdd As Integer

'fila inicio en hoja 3
X = 4
'columna donde registrar en hoja 3
Y = 14
'columna de id sucursal
z = 4

'fila inicio en hoja 9
x9 = 2
'columna donde registrar en hoja 9
y9 = 10




'base de valores
Sheets(sh9).Select

If Cells(x9, 1) = "" And Cells(x9 + 1, 1) = "" Then
NumReg9 = 2

ElseIf (Range(Cells(x9, 1), Cells(x9, 1).End(xlDown)).Count + 1) > 100000 Then
NumReg9 = 2

Else
NumReg9 = Range(Cells(x9, 1), Cells(x9, 1).End(xlDown)).Count + 1

End If


'numero de registros para buscar
Sheets(sh3).Select

If Cells(X, 1) = "" And Cells(X + 1, 1) = "" Then
numReg = 4

ElseIf (Range(Cells(X, 1), Cells(X, 1).End(xlDown)).Count + 3) > 1000 Then
numReg = 4

Else
numReg = Range(Cells(X, 1), Cells(X, 1).End(xlDown)).Count + 3

End If

Sheets(sh3).Select
Set rango = Range(Cells(X, z), Cells(numReg, z))

On Error Resume Next


For Each cell In rango

    total = 0
    x9 = 2
    
    For i = 1 To NumReg9
        
        If Sheets(sh9).Cells(x9, 2) = cell.value Then
        total = total + Sheets(sh9).Cells(x9, y9).value
        
        Else
        total = total
        End If
        
        x9 = x9 + 1
    
    Next i
        
        Sheets(sh3).Cells(cell.Row, Y) = total

Next cell

On Error GoTo 0


    'registrar fecha de reporte de ODP Y TDD
    'sh7 = "OdpTdd"
    Sheets(sh7).Select
    fechaOdpTdd = Range("G5")
    diaOdpTdd = Day(fechaOdpTdd)
    mesOdpTdd = Month(fechaOdpTdd)
    
    'sh3 = "pm_PLANEACION_SERVICIOS"
    Sheets(sh3).Select
    Range("N3") = "Desembolsos ODP/TDD" & Chr(10) & diaOdpTdd & " " & NombresMesesCorto(mesOdpTdd)
End Sub


Attribute VB_Name = "CD_DESEMBOLOSOS_CATALOGO"
'''''''''''''''''''''''IMPORTAR EL CAT|fffd|LOGO DE DESMBOLSOS % (DEMANDA OS/SUCURSAL)'''''''''''''''''''''''
'Extraer la informaci|fffd|n del |fffd|ltimo monitoreo ejecutado

Sub CD0_CatalogoDesembolso()

Call VariablesGlobales

Dim MiLibroMacro As String
Dim UnidadRuta, fechaCarpeta As String
Dim FechaModArchi As Date
Dim FechaUltimaAct As Date
'fijar nombre de ventana
MiLibroMacro = ActiveWorkbook.Name


''''''''''''''ubicar el |fffd|ltimo archivo creado en el d|fffd|a de operaci|fffd|n'''''''''''''''''''''''''''''''''
'abrir archivos de carpeta indicada
UnidadRuta = UnidadAsignada & Catalogos


Sheets(sh9).Select

If Range("AA1") = "" Then
    FechaUltimaAct = Date - 1
Else
    FechaUltimaAct = Range("AA1")
End If

ChDrive (UnidadAsignada)
ChDir (UnidadRuta)
archi = Dir(CatOdpTdd & ".csv*")

'con CatDesembolsos - archivo de excel xls

'validar si el archivo se modific|fffd| hoy
    FechaModArchi = Format(ObtenerFechaModificacionArchivo(UnidadRuta & archi), "DD/MM/YYYY")
    
        If FechaModArchi > FechaUltimaAct Then
        
        'Macro de formato a la hoja Salidas sh9
        
        Call CD0_1ActualizarCatalogoDesembolso
            
            'Abrir el libro XLS
'            Workbooks.Open Filename:=UnidadRuta & "\" & archi
'            'Salidas
'            Sheets("Salidas").Select
'            Range("A2").Select
'            Range(Selection, Selection.End(xlToRight)).Select
'            Range(Selection, Selection.End(xlDown)).Select
'            Selection.Copy
'
'            'sh9 = "Salidas" XLS
'            Windows(MiLibroMacro).Activate
'            Sheets(sh9).Select
'            Range("A2").Select
'            ActiveSheet.Paste
'            Application.CutCopyMode = False
'
            
            'CSV
            With ActiveSheet.QueryTables.Add(Connection:= _
        "TEXT;" & UnidadRuta & CatOdpTdd & ".csv", _
        Destination:=Range("$A$1"))
        .Name = CatOdpTdd
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 932
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierNone
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = True
        .TextFileSpaceDelimiter = False
        .TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    End With
    
            
            'Registrar fecha de actualizaci|fffd|n
            Range("AA1") = Date
            
'            'cerrar archivo de cat|fffd|logos
'            Windows(archi).Activate
'            ActiveWindow.Close False
'
            '
'            Range("F1").Select
'            Call Limpiar
        'formulas
        'Call CD0_2FormulasDesembolsos
        
        Else
        
        End If




End Sub



Sub CD0_1ActualizarCatalogoDesembolso()

Call VariablesGlobales
Dim ColS9, RowS9 As Integer

'columna de inicio captura de los desembolsos en la Hoja OdpTddRemesas
ColS9 = 1
RowS9 = 2


'limpiar rango captura en OdpTddRemesas
Sheets(sh9).Select
Cells.ClearContents

Columns(ColS9 + 6).Select
Selection.NumberFormat = "General"
Columns(ColS9 + 7).Select
Selection.NumberFormat = "General"
Columns(ColS9 + 8).Select
Selection.NumberFormat = "General"
Columns(ColS9 + 9).Select
Selection.NumberFormat = "General"

'Encabezados
Cells(1, ColS9) = "CC"
Cells(1, ColS9 + 1) = "ID_SUC"
Cells(1, ColS9 + 2) = "LLAVE"
Cells(1, ColS9 + 3) = "%_FINAL ODP"
Cells(1, ColS9 + 4) = "%_FINAL TDD"
Cells(1, ColS9 + 5) = "OS_DES_EMERGENTE"
Cells(1, ColS9 + 6) = "SALIDA_TDD"
Cells(1, ColS9 + 7) = "SALIDA_ODP"
Cells(1, ColS9 + 8) = "REMESAS"
Cells(1, ColS9 + 9) = "TOTAL SALIDAS"



End Sub


Sub CD0_2FormulasDesembolsos()
Call VariablesGlobales
Dim numReg As Long
Dim col0, row0 As Integer

Sheets(sh9).Select
numReg = Range("a1", Range("a1").End(xlDown)).Count

col0 = 7
row0 = 2
    
    Application.Calculation = xlManual
    
    'SALIDA_TDD
    Range(Cells(row0, col0), Cells(numReg, col0)).Select
    Selection.FormulaR1C1 = _
        "=IFERROR((VLOOKUP(""TDD""&RC[-6],OdpTdd!C[-6]:C[1],5,0)*RC[-2]),"""")"

        
    'SALIDA_ODP
    Range(Cells(row0, col0 + 1), Cells(numReg, col0 + 1)).Select
    Selection.FormulaR1C1 = _
        "=IFERROR((VLOOKUP(""ODP""&RC[-7],OdpTdd!C[-7]:C,5,0)*RC[-4]),"""")"

    
    'TOTAL SALIDAS
     Range(Cells(row0, col0 + 3), Cells(numReg, col0 + 3)).Select
    Selection.FormulaR1C1 = "=SUM(RC[-3]:RC[-1])"

    Application.Calculation = xlAutomatic

End Sub

Attribute VB_Name = "CE_VARIABILIDAD_CORTE_SALDOS"
'''''''''''''''''''''''IMPORTAR EL CAT|fffd|LOGO DE DESMBOLSOS % (DEMANDA OS/SUCURSAL)'''''''''''''''''''''''
'Extraer la informaci|fffd|n del |fffd|ltimo monitoreo ejecutado

Sub CE0_AgregarVariabilidadHorario()

Call VariablesGlobales

Dim MiLibroMacro As String
Dim UnidadRuta, fechaCarpeta As String
Dim FechaModArchi As Date
Dim FechaUltimaAct As Date
'fijar nombre de ventana
MiLibroMacro = ActiveWorkbook.Name


''''''''''''''ubicar el |fffd|ltimo archivo creado en el d|fffd|a de operaci|fffd|n'''''''''''''''''''''''''''''''''
'abrir archivos de carpeta indicada
UnidadRuta = UnidadAsignada & Catalogos

Sheets(sh8).Select

If Range("AA1") = "" Then
    FechaUltimaAct = Date - 1
Else
    FechaUltimaAct = Range("AA1")
End If


ChDrive (UnidadAsignada)
ChDir (UnidadRuta)
archi = Dir(CatDesembolsos & ".xls*")

'validar si el archivo se modific|fffd| hoy
    FechaModArchi = Format(ObtenerFechaModificacionArchivo(UnidadRuta & archi), "DD/MM/YYYY")
    
        'If FechaModArchi > FechaUltimaAct Then
            
            'Abrir el libro
            Workbooks.Open Filename:=UnidadRuta & "\" & archi
            
            'Variabilidad
            Sheets("Variabilidad").Select
            Range("A1:C1").Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            
            Windows(MiLibroMacro).Activate
            Sheets(sh6).Select
            Range("A1").Select
            ActiveSheet.Paste
            Application.CutCopyMode = False
            
'        'Agregar valores a Saldos Corte
'        Call CE0_1VariabilidadSucursalesCorte
        
            'cerrar archivo de cat|fffd|logos
            Windows(archi).Activate
            ActiveWindow.Close False
            
            Call CE0_1VariabilidadSucursalesCorte
            Call CE0_2FormulasFactorVariabilidad
            Call CE0_3AgregarSaldosCortePlaneacion
'        Else
'
'        'Agregar valores a Saldos Corte
'        Call CE0_1VariabilidadSucursalesCorte
'
'        End If
'


End Sub



Sub CE0_1VariabilidadSucursalesCorte()

Call VariablesGlobales

Dim ColS9, RowS9 As Integer
Dim lookupRange, rango As Range

'columna de inicio captura de los desembolsos en la Hoja OdpTddRemesas
ColS9 = 7
RowS9 = 2

Sheets(sh6).Select
Set lookupRange = Range("A1", Range("C1").End(xlDown))

Sheets(sh8).Select
Set rango = Range("A2", Range("A2").End(xlDown))

For Each cell In rango
''Queremos la columna 3

lookupvalue = Application.VLookup(cell, lookupRange, 3, False)

'Si no encuentra valor finaliza
    If IsError(lookupvalue) Then
        Sheets(sh8).Select
        cell.Offset(0, 6) = 0
    Else
        Sheets(sh8).Select
        cell.Offset(0, 6) = lookupvalue
    End If

Next cell

End Sub

Sub CE0_2FormulasFactorVariabilidad()
Call VariablesGlobales
Dim numReg As Long
Dim col0, row0 As Integer

Sheets(sh8).Select
numReg = Range("a1", Range("a1").End(xlDown)).Count

col0 = 8
row0 = 2

    'Saldo ajustado
    Range(Cells(row0, col0), Cells(numReg, col0)).Select
    Selection.FormulaR1C1 = "=IF(RC[-1]>1,RC[-5]/RC[-1],RC[-5])"
    
End Sub



Sub CE0_3AgregarSaldosCortePlaneacion()
Call VariablesGlobales

Sheets(sh6).Select

Dim lookupvalue, value As Variant
Dim NombreRango As String
Dim celda, lookupRange, rango As Range
Dim col0, col1, TotalSuc As Integer
Dim row0 As Long

'N|fffd|mero de columna D PLANEACION
col0 = 4
'Numero de columna plazas
col1 = 26

row0 = 4

'MsgBox Row0

'numero de plazas registradas previamente
Sheets(sh3).Select
If Cells(row0, col0) = "" And Cells(row0 + 1, col0) = "" Then
TotalPlazas = 0
Else
TotalPlazas = Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)).Count
End If

'NuevaColumnaCajas = Col0 + TotalPlazas

'celda = Sheets(sh3).Range(Cells(Row0, Col0), Cells(2, Col0 - 8)).value 'celda con el valor que buscamos
Sheets(sh8).Select
Set lookupRange = Range(Cells(1, 1), Cells(1, 8).End(xlDown)) 'rango donde buscar

Sheets(sh3).Select
Set rango = Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)) 'rango donde buscar
rango.Select

'SALDOS AL CORTE
For Each cell In rango
''Queremos la columna 3

lookupvalue = Application.VLookup(cell, lookupRange, 8, False)

'Si no encuentra valor finaliza
    If IsError(lookupvalue) Then
        Sheets(sh3).Select
        cell.Offset(0, 4) = 0
    Else
        Sheets(sh3).Select
        cell.Offset(0, 4) = lookupvalue
        cell.Offset(0, 5).FormulaR1C1 = "=IFERROR(RC[-1]/RC[1],0)"
    End If

Next cell

'registrar hora en campo de t|fffd|tulo de columna
'sh8 = "SaldoCorte"
Sheets(sh8).Select
fechaMonitoreo = Day(Range("f2")) & " " & NombresMesesCorto(Month(Range("f2")))
horaMonitoreo = Format(Range("E2"), "hh:mm")

Sheets(sh3).Select


Range("h3") = "Saldo corte " & Chr(10) & fechaMonitoreo & " " & horaMonitoreo

Range("h3").Select

End Sub





Sub CE0_4AgregarSaldosCortePlaneacionSinVariacion()
Call VariablesGlobales

Sheets(sh6).Select

Dim lookupvalue, value As Variant
Dim NombreRango As String
Dim celda, lookupRange, rango As Range
Dim col0, col1, TotalSuc As Integer
Dim row0 As Long

'N|fffd|mero de columna D PLANEACION
col0 = 4
'Numero de columna plazas
col1 = 26

row0 = 4

'MsgBox Row0

'numero de plazas registradas previamente
Sheets(sh3).Select
If Cells(row0, col0) = "" And Cells(row0 + 1, col0) = "" Then
TotalPlazas = 0
Else
TotalPlazas = Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)).Count
End If

'NuevaColumnaCajas = Col0 + TotalPlazas

'celda = Sheets(sh3).Range(Cells(Row0, Col0), Cells(2, Col0 - 8)).value 'celda con el valor que buscamos
Sheets(sh8).Select
Set lookupRange = Range(Cells(1, 1), Cells(1, 3).End(xlDown)) 'rango donde buscar

Sheets(sh3).Select
Set rango = Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)) 'rango donde buscar
rango.Select

Application.Calculation = xlManual

'SALDOS AL CORTE
For Each cell In rango
''Queremos la columna 3

lookupvalue = Application.VLookup(cell, lookupRange, 3, False)

'Si no encuentra valor finaliza
    If IsError(lookupvalue) Then
        Sheets(sh3).Select
        cell.Offset(0, 4) = 0
    Else
        Sheets(sh3).Select
        cell.Offset(0, 4) = lookupvalue
        cell.Offset(0, 5).FormulaR1C1 = "=IFERROR(RC[-1]/RC[1],0)"
    End If

Next cell

Application.Calculation = xlAutomatic

'registrar hora en campo de t|fffd|tulo de columna
'sh8 = "SaldoCorte"
Sheets(sh8).Select
fechaMonitoreo = Day(Range("f2")) & " " & NombresMesesCorto(Month(Range("f2")))
horaMonitoreo = Format(Range("E2"), "hh:mm")

Sheets(sh3).Select


Range("h3") = "Saldo corte " & Chr(10) & fechaMonitoreo & " " & horaMonitoreo

Range("h3").Select

End Sub



''''''''''''''''''''''''''''''''SALDOS INTER D|fffd|A

Sub CE1_ComplementoSaldosCorte()

Call VariablesGlobales

Dim MiLibroMacro As String
Dim UnidadRuta, fechaCarpeta As String
Dim FechaModArchi As Date
Dim FechaUltimaAct As Date
'fijar nombre de ventana
MiLibroMacro = ActiveWorkbook.Name


''''''''''''''ubicar el |fffd|ltimo archivo creado en el d|fffd|a de operaci|fffd|n'''''''''''''''''''''''''''''''''
'abrir archivos de carpeta indicada
UnidadRuta = UnidadAsignada & Catalogos

Sheets(sh8).Select

If Range("AA1") = "" Then
    FechaUltimaAct = Date - 1
Else
    FechaUltimaAct = Range("AA1")
End If


ChDrive (UnidadAsignada)
ChDir (UnidadRuta)
archi = Dir(CatDesembolsos & ".xls*")

'validar si el archivo se modific|fffd| hoy
    FechaModArchi = Format(ObtenerFechaModificacionArchivo(UnidadRuta & archi), "DD/MM/YYYY")
    
        'If FechaModArchi > FechaUltimaAct Then
            
            'Abrir el libro
            Workbooks.Open Filename:=UnidadRuta & "\" & archi
            
            'Variabilidad
            Sheets("Variabilidad").Select
            Range("A1:C1").Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            
            Windows(MiLibroMacro).Activate
            Sheets(sh6).Select
            Range("A1").Select
            ActiveSheet.Paste
            Application.CutCopyMode = False
            

        
            'cerrar archivo de cat|fffd|logos
            Windows(archi).Activate
            ActiveWindow.Close False
            
            'Call CE0_1VariabilidadSucursalesCorte
            Call CE0_2FormulasFactorVariabilidad
            Call CE0_3AgregarSaldosCortePlaneacion



End Sub
Attribute VB_Name = "CF_REMESAS_AVANSOFT"
'''''''''''''''''''''''IMPORTAR TODOS LOS ARCHIVOS DE SALDOS DISPONIBLES'''''''''''''''''''''''
'Extraer la informaci|fffd|n del |fffd|ltimo monitoreo ejecutado

Sub CF0_RemesasAvansoft()

Application.ScreenUpdating = False
Application.EnableEvents = False

Call VariablesGlobales

Dim MiLibroMacro As String
Dim NombreArchi, NombreArchi1, UltimoArchi, Archi1 As String
Dim archi, rango As Variant
Dim FechaModArchi, FechaModificacionArchivo, FechaArchi1 As Date
Dim NumArchi As Integer
Dim fila As Long
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String
Dim ColS0, RowS0, ColS12, RowS12, TotCampos As Integer
Dim TotRegistros As Long
Dim RangoValores As Range
Dim FechaValorArchi As Date
Dim HoraValorArchi As String
Dim tope, marcadorArchivo As Boolean

'guardar archivo
ActiveWorkbook.Save

'fijar nombre de ventana
MiLibroMacro = ActiveWorkbook.Name
'columna de inicio captura de los desembolsos en la Hoja OdpTddRemesas
ColS7 = 13
RowS7 = 4

'limpiar columna de remesas en hoja de planeaci|fffd|n
Range(Cells(RowS7, ColS7), Cells(RowS7, ColS7).End(xlDown)).ClearContents

'limpiar hoja de Remesas
Sheets(sh12).Select
Cells.Clear

'Columns(ColS7 + 2).Select
'Selection.NumberFormat = "General"

'Ubicar fecha del reporte
'FechaValor = FechaValorGeneral
fechaValor = fechaOperacion

DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If


UnidadRuta = UnidadAsignada & RutaRemesas & MonthLabel & ". " & NombreMes



''''''''''''''ubicar el |fffd|ltimo archivo creado en el d|fffd|a de operaci|fffd|n'''''''''''''''''''''''''''''''''
'abrir archivos de carpeta indicada
ChDrive (UnidadAsignada)
ChDir (UnidadRuta)
archi = Dir(UnidadRuta & "\" & "Remesas_*.xls*")


Sheets(sh12).Select
rango = "A2"

'numero de txt en carpeta de monitoreo de saldos del d|fffd|a
NumArchi = 0
Do While archi <> ""
NumArchi = NumArchi + 1
archi = Dir()
Loop


'abrir archivos de carpeta indicada
ChDrive (UnidadAsignada)
ChDir (UnidadRuta)
archi = Dir("Remesas*.xls*")
NombreArchi = archi

'si no hay archivo salir

If archi = "" Or NumArchi = 0 Then
MsgBox "1. NO HAY ARCHIVO DE REMESAS"

Exit Sub

End If



On Error Resume Next

If NumArchi = 1 Then

NombreArchi1 = NombreArchi


ElseIf NumArchi > 1 Then
        ChDrive (UnidadAsignada)
        ChDir (UnidadRuta)
        archi = Dir(UnidadRuta & "\" & "Remesas_*.xls*")
        NombreArchi = archi
        NombreArchi1 = archi
        FechaArchi1 = ObtenerFechaModificacionArchivo(UnidadRuta & "\" & NombreArchi)
        
        Do While archi <> ""

        NombreArchi = archi

            
            FechaModArchi = ObtenerFechaModificacionArchivo(UnidadRuta & "\" & NombreArchi)
                
'                MsgBox "0 NombreArchi " & NombreArchi & Chr(10) & " FechaModArchi " & FechaModArchi
            
                If FechaModArchi > FechaArchi1 Then
'
                NombreArchi1 = NombreArchi
                FechaModArchi1 = FechaModArchi
                
                'MsgBox "FechaModArchi " & FechaModArchi & " " & "FechaArchi1 " & FechaArchi1 & Chr(10) & _
                "1 Archi1 " & Archi1 & Chr(10) & " FechaModArchi " & FechaModArchi
                
                Else
                NombreArchi1 = NombreArchi1
                FechaArchi1 = FechaArchi1
                'MsgBox "2 Archi1 " & Archi1 & Chr(10) & " FechaModArchi " & FechaModArchi
                
                End If

        
        archi = Dir()
        Loop
    


End If


If NombreArchi1 = "" Then
MsgBox "2. NO HAY ARCHIVO DE REMESAS"
Exit Sub

End If


fechaCarpeta = NombreArchi1



On Error GoTo 0

carpeta = UnidadRuta & "\" & fechaCarpeta

'MsgBox Carpeta


'    MsgBox fechaCarpeta
    
    'Abrir libro y copiar informaci|fffd|n
    Workbooks.Open Filename:=carpeta
    Range("A1").Select
    FechaValorArchi = Range("A2")
    HoraValorArchi = Range("A3")
    
    'Quitar columnas sin informaci|fffd|n
    Range("B:D").Select
    Selection.UnMerge
    Range("B:B").Select
    Selection.Delete Shift:=xlToLeft
    
    'registrar fecha
    ColS0 = 1
    RowS0 = 5
    Cells(RowS0, ColS0 + 1) = "Fecha"
    Cells(RowS0, ColS0 + 2) = "Hora"
    TotRegistros = (Range(Cells(RowS0, ColS0), Cells(RowS0, ColS0).End(xlDown)).Count) + 4
    TotCampos = (Range(Cells(RowS0, ColS0), Cells(RowS0, ColS0).End(xlToRight)).Count)
    
    
    'Fecha valor en registros
    Range(Cells(RowS0 + 1, ColS0 + 1), Cells(TotRegistros, ColS0 + 1)) = FechaValorArchi
    'hora valor en registros
    Range(Cells(RowS0 + 1, ColS0 + 2), Cells(TotRegistros, ColS0 + 2)) = HoraValorArchi
    
    
    'copiar
    Range(Cells(RowS0, ColS0), Cells(TotRegistros, TotCampos)).Copy
    
    Windows(MiLibroMacro).Activate
    Sheets(sh12).Select
    Range("B1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
    Application.CutCopyMode = False
    
    Windows(fechaCarpeta).Activate
    Range("A1").Select
    Application.DisplayAlerts = False
    ActiveWorkbook.Close False
    Application.DisplayAlerts = True
    
    Windows(MiLibroMacro).Activate
    Sheets(sh12).Select
    Columns(2).Select
    Selection.Replace What:="CD ", Replacement:="Ciudad ", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="PUEBLA ANGELES", Replacement:="PUEBLA DE LOS ANGELES", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="SAN MARTIN", Replacement:="SAN MARTIN LAS FLORES", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="SAN MARTIN LAS FLORES TEXMELUCAN", Replacement:="SAN MARTIN TEXMELUCAN", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
     Selection.Replace What:="MARTINEZ DE LA TORRES", Replacement:="MARTINEZ DE LA TORRE", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
      
    Range("B1").Select
    Call Limpiar
    
    Call CF1_AgregarIdSucursal
    Call CF2_AgregarRemesasPlan
   

 Application.ScreenUpdating = True
Application.EnableEvents = True


End Sub




Sub CF1_AgregarIdSucursal()

Call VariablesGlobales

Dim i As Double
Dim j As Double
Dim marca, Carburante, Comunidad As String

'sh12 = "Remesas"

With Worksheets(sh12)

total = Application.CountA(.Range("B:B"))


End With

'sh4 = "Info. Gral."
'Definimos rango de tablabase sh4 = "CatalogoPlazas"
fin = Application.CountA(Worksheets(sh4).Range("U:U"))


'Definimos rango de datos
final = Application.CountA(Worksheets(sh12).Range("B:B"))


With Worksheets(sh12)

    'Iniciamos el bucle principal en tabla Datos
    For i = 2 To final
    'Definimos cada uno de los Items por los que vamos a buscar
    SucursalDestino = Sheets(sh12).Cells(i, 2)
    
        For j = 2 To fin
            'Buscamos con un condicional en tablabase cada una de las variables definidas
            If SucursalDestino = Sheets(sh4).Cells(j, 22) Then
            'Si encontramos coincidencia, igualamos celdas con el valor de la columna 4
            Sheets(sh12).Cells(i, 1) = Sheets(sh4).Cells(j, 21)
            Exit For
            End If
        Next j
    Next i

End With




End Sub



Sub CF2_AgregarRemesasPlan()

Call VariablesGlobales
'sh12 = "Remesas"
'sh3 = "pm_PLANEACION_SERVICIOS"

Dim numReg, X, Y, z As Long
Dim NumReg9, x9, y9 As Long
Dim total As Double
Dim rango As Range
Dim fechaOdpTdd As Date
Dim diaOdpTdd, mesOdpTdd As Integer

'fila inicio en hoja 3
X = 4
'columna donde registrar en hoja 3
Y = 13
'columna de id sucursal
z = 4

'fila inicio en hoja 12
x9 = 2
'columna donde registrar en hoja 12
y9 = 6




'base de valores
Sheets(sh12).Select

If Cells(x9, 2) = "" And Cells(x9 + 1, 2) = "" Then
NumReg9 = 2

ElseIf (Range(Cells(x9, 2), Cells(x9, 2).End(xlDown)).Count + 1) > 100000 Then
NumReg9 = 2

Else
NumReg9 = Range(Cells(x9, 2), Cells(x9, 2).End(xlDown)).Count + 1

End If


'numero de registros para buscar
Sheets(sh3).Select

If Cells(X, 1) = "" And Cells(X + 1, 1) = "" Then
numReg = 4

ElseIf (Range(Cells(X, 1), Cells(X, 1).End(xlDown)).Count + 3) > 1000 Then
numReg = 4

Else
numReg = Range(Cells(X, 1), Cells(X, 1).End(xlDown)).Count + 3

End If

Sheets(sh3).Select
Set rango = Range(Cells(X, z), Cells(numReg, z))

On Error Resume Next


For Each cell In rango

    total = 0
    x9 = 2
    
    For i = 1 To NumReg9
        
        
        If Sheets(sh12).Cells(x9, 1) = cell.value Then
        'MsgBox "hoja remesas " & Sheets(sh12).Cells(x9, 1) & Chr(10) & "cell value " & cell.value
        total = total + Sheets(sh12).Cells(x9, y9).value
        
        Else
        total = total
        End If
        
        x9 = x9 + 1
    
    Next i
        
        Sheets(sh3).Cells(cell.Row, Y) = total

Next cell

On Error GoTo 0


    'registrar fecha de reporte de ODP Y TDD
    'sh7 = "OdpTdd"
    Sheets(sh12).Select
    fechaOdpTdd = Range("C2")
    diaOdpTdd = Day(fechaOdpTdd)
    mesOdpTdd = Month(fechaOdpTdd)
    
    'sh3 = "pm_PLANEACION_SERVICIOS"
    Sheets(sh3).Select
    Range("M3") = "Remesas" & Chr(10) & diaOdpTdd & " " & NombresMesesCorto(mesOdpTdd)

End Sub



Attribute VB_Name = "CG_ARQUEOS"
Sub CG0_ImportarTodosConsolidadosTxt()

'Llamar las variables generales
Call VariablesGlobales

Dim archi, rango As Variant
Dim fila As Long
Dim fechaCarpeta, carpeta As String
Dim DiaHoy, MesHoy As String
UnidadRuta = UnidadAsignada & RutaArqueosEtv



If Month(fechaOperacion) < 10 Then
MesHoy = "0" & Month(fechaOperacion)
Else
MesHoy = Month(fechaOperacion)
End If

UnidadRuta = UnidadAsignada & RutaArqueosEtv & MesHoy & " " & NombresMesesLargo(Month(fechaOperacion)) & " " & Year(fechaOperacion) & " PLANEACIONES" & "\"



If Day(fechaOperacion) < 10 Then
DiaHoy = "0" & Day(fechaOperacion)
Else
DiaHoy = Day(fechaOperacion)
End If

'nombre de la carpeta
fechaCarpeta = DiaHoy & " " & NombresMesesLargo(Month(fechaOperacion)) & " " & Year(fechaOperacion) & " Planeaciones txt"

carpeta = UnidadRuta & fechaCarpeta


Sheets(sh10).Select
Cells.Clear

On Error Resume Next

'abrir archivos de carpeta indicada
ChDrive (UnidadAsignada)
ChDir (carpeta)
archi = Dir("*.txt")
        
        'si no hay archivos finalizar
        If archi = "" Then
        MsgBox "NO HAY INFORMACI|fffd|N DE ARQUEOS PROCESADA"
        Exit Sub
        End If

rango = "A2"

  Do While archi <> ""

    
     With ActiveSheet.QueryTables.Add(Connection:="TEXT;" & _
         carpeta & "\" & archi, Destination:=Range(rango)) '<===========
        .Name = archi
        
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierNone
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileOtherDelimiter = "|"
        .TextFileColumnDataTypes = Array(1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False

    End With
    
     fila = Range("A" & Rows.Count).End(xlUp).Row + 1 '<====================
     rango = Range("A" & fila).Address '<======================
    
    'Otras Opciones
    'milibro = ActiveWorkbook.Name
     archi = Dir()
  Loop '<========================================

On Error GoTo 0

'Encabezados
Sheets(sh10).Select
Cells(1, 1) = CamArq1
Cells(1, 2) = CamArq2
Cells(1, 3) = CamArq3
Cells(1, 4) = CamArq4
Cells(1, 5) = CamArq5
Cells(1, 6) = CamArq6
Cells(1, 7) = CamArq7
Cells(1, 8) = CamArq8
Cells(1, 9) = CamArq9
Cells(1, 10) = CamArq10
Cells(1, 11) = CamArq11
Cells(1, 12) = CamArq12
Cells(1, 13) = CamArq13
Cells(1, 14) = CamArq14
Cells(1, 15) = CamArq15
Cells(1, 16) = CamArq16
Cells(1, 17) = CamArq17


'ACTUALIZAR TABLAS

'sh11 = "TABLAS"
'Sheets(sh11).Select
'
'ActiveSheet.PivotTables("TablaDenominacionesArqueos").PivotCache.Refresh

Dim cuWo As String
cuWo = ActiveWorkbook.Path & "\[" & ActiveWorkbook.Name & "]" & sh10 & "!C1:C17"
'sh10 = "Arqueos"
    
    Sheets(sh11).Select
    Range("B311").Select
    ActiveSheet.PivotTables("TablaDenominacionesArqueos").ChangePivotCache _
        ActiveWorkbook.PivotCaches.Create(SourceType:=xlDatabase, SourceData:= _
        cuWo, Version:=6)
    ActiveSheet.PivotTables("TablaDenominacionesArqueos").PivotCache.Refresh
    ActiveSheet.PivotTables("TablaDenominacionesArqueos").PivotFields( _
        "SeccionHomologada").ClearAllFilters
    ActiveSheet.PivotTables("TablaDenominacionesArqueos").PivotFields( _
        "SeccionHomologada").CurrentPage = "DETALLE EXISTENCIAS"



Application.CutCopyMode = False

End Sub

Sub CG5_ActualizarTablaArqueos()
Application.ScreenUpdating = False
Application.EnableEvents = False

'Llamar las variables generales
Call VariablesGlobales
Dim cuWo As String
cuWo = ActiveWorkbook.Path & "\[" & ActiveWorkbook.Name & "]" & sh10 & "!C1:C17"
'sh10 = "Arqueos"
    
    Sheets(sh11).Select
    Range("B311").Select
    ActiveSheet.PivotTables("TablaDenominacionesArqueos").ChangePivotCache _
        ActiveWorkbook.PivotCaches.Create(SourceType:=xlDatabase, SourceData:= _
        cuWo, Version:=6)
    ActiveSheet.PivotTables("TablaDenominacionesArqueos").PivotCache.Refresh
    ActiveSheet.PivotTables("TablaDenominacionesArqueos").PivotFields( _
        "SeccionHomologada").ClearAllFilters
    ActiveSheet.PivotTables("TablaDenominacionesArqueos").PivotFields( _
        "SeccionHomologada").CurrentPage = "DETALLE EXISTENCIAS"

Sheets(sh10).Select

Application.ScreenUpdating = True
Application.EnableEvents = True

End Sub
Sub CG1_LimpiarAjustesConciliacion()

Application.ScreenUpdating = False
Application.EnableEvents = False

'Llamar las variables generales
Call VariablesGlobales

Dim rowIni, rowFin, ColIni1, ColFin1, ColIni2, ColFin2 As Long

'sh15 = "am_CONCILIAR_ARQUEOS"

Sheets(sh15).Select
rowIni = 4

If Cells(rowIni, 1) = "" And Cells(rowIni + 1, 1) = "" Then
rowFin = 4

ElseIf Range(Cells(rowIni, 1), Cells(rowIni, 1).End(xlDown)).Count > 1000 Then
rowFin = 4

Else
rowFin = Range(Cells(rowIni, 1), Cells(rowIni, 1).End(xlDown)).Count + 3
End If

ColIni1 = 24
ColFin1 = 29
ColIni2 = 31
ColFin2 = 40

    Application.Calculation = xlManual
    
    Range(Cells(rowIni, ColIni1), Cells(rowFin, ColFin1)).ClearContents
    Range(Cells(rowIni, ColIni2), Cells(rowFin, ColFin2)).ClearContents

    Application.Calculation = xlAutomatic
    
Application.EnableEvents = True
Application.ScreenUpdating = True

MsgBox "RANGO DE CAPTURA EN AJUSTES DE CONCILIACI|fffd|N LIMPIO"

End Sub


Sub CG2_AutoajustarConciliacion()

Application.ScreenUpdating = False
Application.EnableEvents = False

'Llamar las variables generales
Call VariablesGlobales
'sh15 = "am_CONCILIAR_ARQUEOS"

Sheets(sh15).Select

Dim X, row0, ColAju0, ColAju1, ColArq0, ColArq1, ColDif0, ColDif1, ColAjuste As Long
Dim caso1, caso2, Caso3 As String
X = 8
row0 = 8
ColAju0 = 24
ColAju1 = 31
ColArq0 = 42
ColArq1 = 49
ColDif0 = 60
ColDif1 = 67
ColAjuste = 80

caso1 = "Replicar Arqueo en Saldo Inicial"
caso2 = "Autoajustar diferencia"
Caso3 = "Limpiar ajuste"

Do While Cells(row0, 1) <> ""

    If Cells(row0, ColAjuste) = caso1 Then
    
            For i = 0 To 5
                Cells(row0 - 4, ColAju0 + i) = Cells(row0 - 4, ColArq0 + i).value
                Cells(row0 - 3, ColAju0 + i) = Cells(row0 - 3, ColArq0 + i).value
                Cells(row0 - 2, ColAju0 + i) = Cells(row0 - 2, ColArq0 + i).value
                Cells(row0 - 1, ColAju0 + i) = Cells(row0 - 1, ColArq0 + i).value
            Next i
            
            For j = 0 To 9
                Cells(row0 - 4, ColAju1 + j) = Cells(row0 - 4, ColArq1 + j).value
                Cells(row0 - 3, ColAju1 + j) = Cells(row0 - 3, ColArq1 + j).value
                Cells(row0 - 2, ColAju1 + j) = Cells(row0 - 2, ColArq1 + j).value
                Cells(row0 - 1, ColAju1 + j) = Cells(row0 - 1, ColArq1 + j).value
            
            Next j
        
    ElseIf Cells(row0, ColAjuste) = caso2 Then
            
            For i = 0 To 5
                Cells(row0 - 4, ColAju0 + i) = (Cells(row0 - 4, ColDif0 + i).value) * -1
                Cells(row0 - 3, ColAju0 + i) = (Cells(row0 - 3, ColDif0 + i).value) * -1
                Cells(row0 - 2, ColAju0 + i) = (Cells(row0 - 2, ColDif0 + i).value) * -1
                Cells(row0 - 1, ColAju0 + i) = (Cells(row0 - 1, ColDif0 + i).value) * -1
            
            Next i
            
            For j = 0 To 9
                Cells(row0 - 4, ColAju1 + j) = (Cells(row0 - 4, ColDif1 + j).value) * -1
                Cells(row0 - 3, ColAju1 + j) = (Cells(row0 - 3, ColDif1 + j).value) * -1
                Cells(row0 - 2, ColAju1 + j) = (Cells(row0 - 2, ColDif1 + j).value) * -1
                Cells(row0 - 1, ColAju1 + j) = (Cells(row0 - 1, ColDif1 + j).value) * -1
            
            Next j
          
    ElseIf Cells(row0, ColAjuste) = Caso3 Then
            
            For i = 0 To 5
                Cells(row0 - 4, ColAju0 + i) = 0
                Cells(row0 - 3, ColAju0 + i) = 0
                Cells(row0 - 2, ColAju0 + i) = 0
                Cells(row0 - 1, ColAju0 + i) = 0
            
            Next i
            
            For j = 0 To 9
                Cells(row0 - 4, ColAju1 + j) = 0
                Cells(row0 - 3, ColAju1 + j) = 0
                Cells(row0 - 2, ColAju1 + j) = 0
                Cells(row0 - 1, ColAju1 + j) = 0
            
            Next j
            
    End If

row0 = row0 + 5

Loop
Application.EnableEvents = True
Application.ScreenUpdating = True

MsgBox "AJUSTES REALIZADOS"

End Sub

Sub CG3_ReplicarArqueosEtiquetas()

Application.ScreenUpdating = False
Application.EnableEvents = False

'Llamar las variables generales
Call VariablesGlobales
'sh15 = "am_CONCILIAR_ARQUEOS"

Sheets(sh15).Select

Dim row0, ColAjuste As Long
Dim caso1, caso2, Caso3 As String
row0 = 8
ColAjuste = 80


Do While Cells(row0, 1) <> ""

        Cells(row0, ColAjuste) = "Replicar Arqueo en Saldo Inicial"
        
row0 = row0 + 5

Loop

Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub


Sub CG4_AutoajustarDiferenciaEtiquetas()

Application.ScreenUpdating = False
Application.EnableEvents = False

'Llamar las variables generales
Call VariablesGlobales
'sh15 = "am_CONCILIAR_ARQUEOS"

Sheets(sh15).Select

Dim row0, ColAjuste As Long
Dim caso1, caso2, Caso3 As String
row0 = 8
ColAjuste = 80


Do While Cells(row0, 1) <> ""

        Cells(row0, ColAjuste) = "Autoajustar diferencia"
        
row0 = row0 + 5

Loop

Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "CH_PLANEACIONES_CONSOLIDADAS"
'''''''''''''''''''''''''''''RESGUARDAR LA PLANEACI|fffd|N EN TXT''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''CREAR HOJA PLANEACION'''''''''''''''''''''''''''''''''
Sub CH0_TxtPlaneacionesSaldosHoy()
Call CA00_MacroCrearCarpetas

Call VariablesGlobales

Dim NombreArchivo, RutaArchivo As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"

RutaArchivo = UnidadRuta & "\" & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Planeacion" & ".txt"


'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select


'''''''''''''''''OPTIMIZACI|fffd|N ''''''''''''''''''''''''''


'CREAR ARCHIVO CON RANGO DE EXCEL
Dim Rng As Range
Dim WorkRng As Range
Dim xFile As Variant
Dim xFileString As String
On Error Resume Next

'Concatenar contenido
    'inicio de rango
    MiLibroMacro = ActiveWorkbook.Name

    Range("A3").Select
    
    'quitar filtro
    If Worksheets(sh3).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        Worksheets(sh3).AutoFilterMode = False
    Else
        'MsgBox "no hay filtro"
    End If
    
    Call ConcatenarRangoPipes
    
    Windows(MiLibroMacro).Activate
    Sheets(sh3).Select
    
        
    
    'rango para copiar en txt
    nColumnas = Range("A3").End(xlToRight).Column
    NFilas = (Range("A3", Range("A3").End(xlDown)).Cells.Count) + 3
    
    Range(Cells(3, nColumnas), Cells(NFilas, nColumnas)).Select


'guardar en txt
Set WorkRng = Application.Selection
Application.ActiveSheet.Copy
Application.ActiveSheet.Cells.Clear
WorkRng.Copy Application.ActiveSheet.Range("A1")
Set xFile = CreateObject("Scripting.FileSystemObject")
'xFileString = Application.GetSaveAsFilename("", filefilter:="Comma Separated Text (*.CSV), *.CSV")
'xFileString = Application.GetSaveAsFilename(NombreArchivo, filefilter:="Text (*.TXT), *.TXT")
'Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.Close True



'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then
    RutaArchivoLocal = RutaLocal & NombreCarpetaCompartida & "\" & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt\" _
    & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Planeacion" & ".txt"


End If

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

FileCopy RutaArchivo, RutaArchivoLocal

End If



Windows(MiLibroMacro).Activate
    Sheets(sh3).Select
    Columns(nColumnas).ClearContents
    Range("A3").Select

Application.CutCopyMode = False




'Set Ht = ActiveSheet
'Set obj = New FileSystemObject
'Set tx = obj.CreateTextFile(RutaArchivo)
'
'nColumnas = Ht.Range("A3", Ht.Range("A3").End(xlToRight)).Cells.Count
'NFilas = (Ht.Range("A3", Ht.Range("A3").End(xlDown)).Cells.Count) + 2
'
'For i = 3 To NFilas
'
'    'If Ht.Cells(i, 1).value <> "" Then
'
'    For j = 1 To nColumnas
'        tx.Write Ht.Cells(i, j).value
'        If j < nColumnas Then tx.Write "|"
'        If j = nColumnas And i = 3 Then tx.Write "|FechaOperacion|FechaRegistro|UsuarioRegistro|PlaneadorAsignado"
'        If j = nColumnas And i > 3 Then tx.Write "|" & FechaOperacion & "|" & Now() & "|" & UsuarioWindows & "|" & NombrePlaneador
'
'    Next j
'
'    tx.WriteLine
'
'    'End If
'
'    Next i
'
'tx.Close
'
'Set obj = Nothing

End Sub



'''''''''''''''''''''''''''''RESGUARDAR LA RPOGRAMASCI|fffd|N DE SERVICIOS EN TXT''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''CREAR HOJA PLANEACION'''''''''''''''''''''''''''''''''
''sh18 = "ProgramacionServicios"

Sub CH0_5TxtProgramacionDotaciones()
Call CA00_MacroCrearCarpetas

Call VariablesGlobales

Dim NombreArchivo, RutaArchivo As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"

RutaArchivo = UnidadRuta & "\" & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Programacion Servicios Dotaciones.txt"


'MsgBox RutaArchivo

'sh18 = "ProgramacionDotaciones"
Sheets(sh18).Select


'''''''''''''''''OPTIMIZACI|fffd|N ''''''''''''''''''''''''''


'CREAR ARCHIVO CON RANGO DE EXCEL
Dim Rng As Range
Dim WorkRng As Range
Dim xFile As Variant
Dim xFileString As String
On Error Resume Next

'Concatenar contenido
    'inicio de rango
    MiLibroMacro = ActiveWorkbook.Name

    Range("A2").Select
     'quitar filtro
    If Worksheets(sh18).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        Worksheets(sh18).AutoFilterMode = False
    Else
        'MsgBox "no hay filtro"
    End If
    
    Call ConcatenarRangoPipes
    
    Windows(MiLibroMacro).Activate
    Sheets(sh18).Select
    
    
    'rango para copiar en txt
    nColumnas = Range("A2").End(xlToRight).Column
    
    
    If Range("A3") = "" And Range("A4") = "" Then
    NFilas = 3
    
    ElseIf (Range("A2", Range("A2").End(xlDown)).Cells.Count) > 10000 Then
    NFilas = 3
    
    Else
    NFilas = (Range("A2", Range("A2").End(xlDown)).Cells.Count) + 1
    
    End If
    
    Range(Cells(2, nColumnas), Cells(NFilas, nColumnas)).Select


'guardar en txt
Set WorkRng = Application.Selection
Application.ActiveSheet.Copy
Application.ActiveSheet.Cells.Clear
WorkRng.Copy Application.ActiveSheet.Range("A1")
Set xFile = CreateObject("Scripting.FileSystemObject")
'xFileString = Application.GetSaveAsFilename("", filefilter:="Comma Separated Text (*.CSV), *.CSV")
'xFileString = Application.GetSaveAsFilename(NombreArchivo, filefilter:="Text (*.TXT), *.TXT")
'Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
'MsgBox RutaArchivo

ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.Close True




'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then
    RutaArchivoLocal = RutaLocal & NombreCarpetaCompartida & "\" & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt\" _
    & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Programacion Servicios Dotaciones" & ".txt"


End If

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

FileCopy RutaArchivo, RutaArchivoLocal

End If


Windows(MiLibroMacro).Activate
    Sheets(sh18).Select
    Columns(nColumnas).ClearContents
    Range("A3").Select

Application.CutCopyMode = False




'Set Ht = ActiveSheet
'Set obj = New FileSystemObject
'Set tx = obj.CreateTextFile(RutaArchivo)
'
'nColumnas = Ht.Range("A3", Ht.Range("A3").End(xlToRight)).Cells.Count
'NFilas = (Ht.Range("A3", Ht.Range("A3").End(xlDown)).Cells.Count) + 2
'
'For i = 3 To NFilas
'
'    'If Ht.Cells(i, 1).value <> "" Then
'
'    For j = 1 To nColumnas
'        tx.Write Ht.Cells(i, j).value
'        If j < nColumnas Then tx.Write "|"
'        If j = nColumnas And i = 3 Then tx.Write "|FechaOperacion|FechaRegistro|UsuarioRegistro|PlaneadorAsignado"
'        If j = nColumnas And i > 3 Then tx.Write "|" & FechaOperacion & "|" & Now() & "|" & UsuarioWindows & "|" & NombrePlaneador
'
'    Next j
'
'    tx.WriteLine
'
'    'End If
'
'    Next i
'
'tx.Close
'
'Set obj = Nothing

End Sub









''sh22 = "ProgramacionServicios"

Sub CH1_5TxtProgramacionServicios()
Call CA00_MacroCrearCarpetas

Call VariablesGlobales

Dim NombreArchivo, RutaArchivo As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"

RutaArchivo = UnidadRuta & "\" & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Programacion Servicios" & ".txt"




'sh22 = "ProgramacionServicios"
Sheets(sh22).Select


'''''''''''''''''OPTIMIZACI|fffd|N ''''''''''''''''''''''''''


'CREAR ARCHIVO CON RANGO DE EXCEL
Dim Rng As Range
Dim WorkRng As Range
Dim xFile As Variant
Dim xFileString As String
On Error Resume Next

'Concatenar contenido
    'inicio de rango
    MiLibroMacro = ActiveWorkbook.Name

    Range("A2").Select
     'quitar filtro
    If Worksheets(sh22).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        Worksheets(sh22).AutoFilterMode = False
    Else
        'MsgBox "no hay filtro"
    End If
    
    Call ConcatenarRangoPipes
    
    Windows(MiLibroMacro).Activate
    Sheets(sh22).Select
    
    
    'rango para copiar en txt
    nColumnas = Range("A2").End(xlToRight).Column
    
    
    If Range("A3") = "" And Range("A4") = "" Then
    NFilas = 3
    
    ElseIf (Range("A2", Range("A2").End(xlDown)).Cells.Count) > 10000 Then
    NFilas = 3
    
    Else
    NFilas = (Range("A2", Range("A2").End(xlDown)).Cells.Count) + 1
    
    End If
    
    Range(Cells(2, nColumnas), Cells(NFilas, nColumnas)).Select


'guardar en txt
Set WorkRng = Application.Selection
Application.ActiveSheet.Copy
Application.ActiveSheet.Cells.Clear
WorkRng.Copy Application.ActiveSheet.Range("A1")
Set xFile = CreateObject("Scripting.FileSystemObject")
'xFileString = Application.GetSaveAsFilename("", filefilter:="Comma Separated Text (*.CSV), *.CSV")
'xFileString = Application.GetSaveAsFilename(NombreArchivo, filefilter:="Text (*.TXT), *.TXT")
'Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.Close True




'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then
    RutaArchivoLocal = RutaLocal & NombreCarpetaCompartida & "\" & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt\" _
    & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Programacion Servicios" & ".txt"


End If

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

FileCopy RutaArchivo, RutaArchivoLocal

End If


Windows(MiLibroMacro).Activate
    Sheets(sh22).Select
    Columns(nColumnas).ClearContents
    Range("A3").Select

Application.CutCopyMode = False




'Set Ht = ActiveSheet
'Set obj = New FileSystemObject
'Set tx = obj.CreateTextFile(RutaArchivo)
'
'nColumnas = Ht.Range("A3", Ht.Range("A3").End(xlToRight)).Cells.Count
'NFilas = (Ht.Range("A3", Ht.Range("A3").End(xlDown)).Cells.Count) + 2
'
'For i = 3 To NFilas
'
'    'If Ht.Cells(i, 1).value <> "" Then
'
'    For j = 1 To nColumnas
'        tx.Write Ht.Cells(i, j).value
'        If j < nColumnas Then tx.Write "|"
'        If j = nColumnas And i = 3 Then tx.Write "|FechaOperacion|FechaRegistro|UsuarioRegistro|PlaneadorAsignado"
'        If j = nColumnas And i > 3 Then tx.Write "|" & FechaOperacion & "|" & Now() & "|" & UsuarioWindows & "|" & NombrePlaneador
'
'    Next j
'
'    tx.WriteLine
'
'    'End If
'
'    Next i
'
'tx.Close
'
'Set obj = Nothing

End Sub





'''''''''''''''''''''''''''''RESGUARDAR LA CONFIRMACI|fffd|N DE SERVICIOS EN TXT''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''CREAR HOJA PLANEACION'''''''''''''''''''''''''''''''''
Sub CH0_6TxtConfirmacionServicios()
Call CA00_MacroCrearCarpetas

Call VariablesGlobales

Dim NombreArchivo, RutaArchivo As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"

RutaArchivo = UnidadRuta & "\" & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Confirmacion Servicios" & ".txt"



'sh21 = "ConfirmacionServicios"
Sheets(sh21).Select


'''''''''''''''''OPTIMIZACI|fffd|N ''''''''''''''''''''''''''


'CREAR ARCHIVO CON RANGO DE EXCEL
Dim Rng As Range
Dim WorkRng As Range
Dim xFile As Variant
Dim xFileString As String
On Error Resume Next

'Concatenar contenido
    'inicio de rango
    MiLibroMacro = ActiveWorkbook.Name

    Range("A2").Select
    
    'quitar filtro
    If Worksheets(sh21).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        Worksheets(sh21).AutoFilterMode = False
    Else
        'MsgBox "no hay filtro"
    End If
    
    
    Call ConcatenarRangoPipes
    
    Windows(MiLibroMacro).Activate
    Sheets(sh21).Select
    
    
    'rango para copiar en txt
    nColumnas = Range("A2").End(xlToRight).Column
    
    
    If Range("A3") = "" And Range("A4") = "" Then
    NFilas = 3
    
    ElseIf (Range("A2", Range("A2").End(xlDown)).Cells.Count) > 10000 Then
    NFilas = 3
    
    Else
    NFilas = (Range("A2", Range("A2").End(xlDown)).Cells.Count) + 1
    
    End If
    
    Range(Cells(2, nColumnas), Cells(NFilas, nColumnas)).Select


'guardar en txt
Set WorkRng = Application.Selection
Application.ActiveSheet.Copy
Application.ActiveSheet.Cells.Clear
WorkRng.Copy Application.ActiveSheet.Range("A1")
Set xFile = CreateObject("Scripting.FileSystemObject")
'xFileString = Application.GetSaveAsFilename("", filefilter:="Comma Separated Text (*.CSV), *.CSV")
'xFileString = Application.GetSaveAsFilename(NombreArchivo, filefilter:="Text (*.TXT), *.TXT")
'Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.Close True


'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then
    RutaArchivoLocal = RutaLocal & NombreCarpetaCompartida & "\" & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt\" _
    & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Confirmacion Servicios" & ".txt"


End If

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

FileCopy RutaArchivo, RutaArchivoLocal

End If


Windows(MiLibroMacro).Activate
    Sheets(sh21).Select
    Columns(nColumnas).ClearContents
    Range("A3").Select



'''''''''''''''''''''''''CORREO'''''''''''''''''''''''''''''''''''''

            ''''''''''''''''''PARA CC CCO''''''''''''''''''''''''''''''''''''''
            'sh19 = "PARAMETROS"
            Sheets(sh19).Select
            Dim PARA, CC, CCO As String
            Dim MailDestRow As Long
            Dim MailDestCol As Integer
            
            MailDestRow = 55
            MailDestCol = 1
            PARA = ""
            CC = ""
            CCO = ""
            
            Do While Cells(MailDestRow, MailDestCol) <> ""
                
                If Cells(MailDestRow, MailDestCol) = "Para" Then
                PARA = PARA & ";" & Cells(MailDestRow, MailDestCol + 1).value
                
                ElseIf Cells(MailDestRow, MailDestCol) = "CC" Then
                CC = CC & ";" & Cells(MailDestRow, MailDestCol + 1).value
                
                ElseIf Cells(MailDestRow, MailDestCol) = "CCO" Then
                CCO = CCO & ";" & Cells(MailDestRow, MailDestCol + 1).value
                End If
            
            
            MailDestRow = MailDestRow + 1
            
            Loop
            
                            Dim OutApp, OutMail As Object
                            'Dim MiAdjunto As Outlook.Attachments
                            Dim Asunto, Mensaje1, Mensaje2, FirmaCompartamos As String
                            Dim ArchivoAdjunto As String
                            Dim Saludo As String
                            
                            'Saludo dependiendo la hora de ejecuci|fffd|n
                            If Hour(Now()) >= 12 Then
                            Saludo = "Buenas tardes,"
                            Else
                            Saludo = "Buenos d|fffd|as,"
                            End If
                            
                            'Asunto del correo
                            Asunto = "CONFIRMACI|fffd|N SERVICIOS TRASLADO ETV **  " & NombresDiasMayus(Weekday(Date, vbMonday)) & " " _
                                    & Day(Date) & " DE " & NombresMesesLargo(Month(Date))
                            
                            'Mensaje
                            'sh19 = "PARAMETROS"
                            'valTotInicial
                            'valTotCompras
                            'valTotDotaciones
                            'valTotTraspasosIn
                            'valTotTraspasosOut
                            'valTotFisico
                            'valTotEstimado
                            Mensaje = "Informo la disponibilidad de la lista de los servicios de traslado confirmados el d|fffd|a de hoy."
'                            Mensaje1 = "N|fffd|mero de cajas = " & Format(UBound(Dotaciones), "#,##0")
'                            Mensaje3 = "DEM Cajas = " & Format(valDemCaja, "$#,##0.00")
'                            Mensaje4 = "DEM Sucursal = " & Format(valDemSucursal, "$#,##0.00")
'                            Mensaje5 = "Total DEM = " & Format(valTotDem, "$#,##0.00")
'                            Mensaje6 = "Acreditaci|fffd|n = " & Format(valAcreditacion, "$#,##0.00")
'                            Mensaje7 = "Saldo DEM = " & Format(ValSaldoDem, "$#,##0.00")


                            Mensaje2 = "Saludos,"
                            
                            
                            'Comprobar si Outlook esta abierto y en caso de no estarlo abrirlo
            
                            On Error Resume Next
                            Set OutApp = GetObject("", "Outlook.Application")
                            Err.Clear
                            
                            If OutApp Is Nothing Then
                            Set OutApp = CreateObject("Outlook.Application")
                            End If
            
                            
                            OutApp.Visible = True
                            
                            OutApp.session.logon
                            
                            'se crea m|fffd|todo de env|fffd|o de correo
                            Set OutMail = OutApp.CreateItem(0)
                            
                            
                            
                            'adjunto
                            'Set MiAdjunto = OutMail.Attachments
                            
                            
                            ''''''''''''''''''''''''''''''''''''''''''CORREO'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                            'el cuerpo del correo y los archivos a djuntos
                            On Error Resume Next
                            
                            With OutMail
                            '.MiAdjunto.Add ArchivoAdjunto
                            .To = PARA
                            .CC = CC
                            .BCC = CCO
                            .Subject = Asunto
                            '.Attachments.Add Carpeta & ".xlsx"
                            '.BodyFormat = 2 'olFormatRichText
                            '.Attachments.Add ArchivoAdjunto
                            .HTMLBody = "<html>" & _
                                "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6C6969"">" & Saludo & "<br>" & "<br>" & Mensaje & "</span style=""color:#6C6969"">" & "<p/>" _
                                & "<br>" & _
                                "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6C6969"">" & Mensaje2 & "<br>" _
                                & "<br>" & DATOS_USUARIO_WINDOWS(Environ("UserName"), 1) & "<br>" & _
                                "Tel. 5276-7250     Ext:    " & DATOS_USUARIO_WINDOWS(Environ("UserName"), 4) & "<br>" & _
                                DATOS_USUARIO_WINDOWS(Environ("UserName"), 5) & "</span style=""color:#6C6969"">" & "<p/>" & "<br>" & _
                                "<img src= " & Chr(34) & RutaLocal & NombreCarpetaCompartida & "\" & Catalogos & firmaImagen & Chr(34) _
                                & "</html>"
                                
                                
                                '' "<body>" "</body>"
                                
                            '.Attachments.Add firmaImagen, False
                            .display
                            
                            'Application.SendKeys "^{END}", True
                            'Application.SendKeys "{ENTER}", True
                            'Application.SendKeys "^v", True
                            'DoEvents
                            End With
                            
                            On Error GoTo 0
                            
                            Set OutMail = Nothing
                            Set OutApp = Nothing
                

    Sheets(sh21).Select


Application.CutCopyMode = False


End Sub





Sub CH0_1TxtPlaneacionesCajasSaldosHoy()

Call CA00_MacroCrearCarpetas

Call VariablesGlobales

Dim NombreArchivo, RutaArchivo As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"

RutaArchivo = UnidadRuta & "\" & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Saldos Cajas" & ".txt"


'sh1 = "pm_PLANEACION_CAJAS"
Sheets(sh1).Select


'''''''''''''''''OPTIMIZACI|fffd|N ''''''''''''''''''''''''''


'CREAR ARCHIVO CON RANGO DE EXCEL
Dim Rng As Range
Dim WorkRng As Range
Dim xFile As Variant
Dim xFileString As String
On Error Resume Next

'Concatenar contenido
    'inicio de rango
    MiLibroMacro = ActiveWorkbook.Name

    Range("A3").Select
    
    'quitar filtro
    If Worksheets(sh1).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        Worksheets(sh1).AutoFilterMode = False
    Else
        'MsgBox "no hay filtro"
    End If
    
    Range("A3").Select
    Call ConcatenarRangoPipes
    
    
    
    
    'rango para copiar en txt
    nColumnas = Range("A3").End(xlToRight).Column
    
    NFilas = (Range("A3", Range("A3").End(xlDown)).Cells.Count) + 2
    
    Range(Cells(3, nColumnas), Cells(NFilas, nColumnas)).Select
    
    
    'sh1 = "pm_PLANEACION_CAJAS"
    Windows(MiLibroMacro).Activate
    Sheets(sh1).Select

'guardar en txt
Set WorkRng = Application.Selection
Application.ActiveSheet.Copy
Application.ActiveSheet.Cells.Clear
WorkRng.Copy Application.ActiveSheet.Range("A1")
Set xFile = CreateObject("Scripting.FileSystemObject")
'xFileString = Application.GetSaveAsFilename("", filefilter:="Comma Separated Text (*.CSV), *.CSV")
'xFileString = Application.GetSaveAsFilename(NombreArchivo, filefilter:="Text (*.TXT), *.TXT")
'Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.Close True


'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then
    RutaArchivoLocal = RutaLocal & NombreCarpetaCompartida & "\" & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt\" _
    & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Saldos Cajas" & ".txt"


End If

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

FileCopy RutaArchivo, RutaArchivoLocal

End If



Windows(MiLibroMacro).Activate
    Sheets(sh1).Select
    Columns(nColumnas).ClearContents
    Range("A3").Select

Application.CutCopyMode = False


'
'Set Ht = ActiveSheet
'Set obj = New FileSystemObject
'Set tx = obj.CreateTextFile(RutaArchivo)
'
'nColumnas = Ht.Range("A3", Ht.Range("A3").End(xlToRight)).Cells.Count
'NFilas = (Ht.Range("A3", Ht.Range("A3").End(xlDown)).Cells.Count) + 2
'
'For i = 3 To NFilas
'
'    'If Ht.Cells(i, 1).value <> "" Then
'
'    For j = 1 To nColumnas
'        tx.Write Ht.Cells(i, j).value
'        If j < nColumnas Then tx.Write "|"
'        If j = nColumnas And i = 3 Then tx.Write "|FechaOperacion|FechaRegistro|UsuarioRegistro|PlaneadorAsignado"
'        If j = nColumnas And i > 3 Then tx.Write "|" & FechaOperacion & "|" & Now() & "|" & UsuarioWindows & "|" & NombrePlaneador
'    Next j
'
'    tx.WriteLine
'
'    'End If
'
'    Next i
'
'tx.Close
'
'Set obj = Nothing

End Sub


Sub CH0_2TxtConciliacionArqueosCajasHoy()
Call CA00_MacroCrearCarpetas
Call VariablesGlobales

Dim NombreArchivo, RutaArchivo As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date


DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"

RutaArchivo = UnidadRuta & "\" & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Conciliacion Arqueos" & ".txt"




'sh15 = "am_CONCILIAR_ARQUEOS"
Sheets(sh15).Select



'''''''''''''''''OPTIMIZACI|fffd|N ''''''''''''''''''''''''''


'CREAR ARCHIVO CON RANGO DE EXCEL
Dim Rng As Range
Dim WorkRng As Range
Dim xFile As Variant
Dim xFileString As String
On Error Resume Next

'Concatenar contenido
    'inicio de rango
    MiLibroMacro = ActiveWorkbook.Name

    Range("A3").Select
    'quitar filtro
    If Worksheets(sh15).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        Worksheets(sh15).AutoFilterMode = False
    Else
        'MsgBox "no hay filtro"
    End If
    
    Call ConcatenarRangoPipes
    
    Windows(MiLibroMacro).Activate
    Sheets(sh15).Select
    
    
    'rango para copiar en txt
    nColumnas = Range("A3").End(xlToRight).Column
    NFilas = (Range("A3", Range("A3").End(xlDown)).Cells.Count) + 3
    
    Range(Cells(3, nColumnas), Cells(NFilas, nColumnas)).Select


'guardar en txt
Set WorkRng = Application.Selection
Application.ActiveSheet.Copy
Application.ActiveSheet.Cells.Clear
WorkRng.Copy Application.ActiveSheet.Range("A1")
Set xFile = CreateObject("Scripting.FileSystemObject")
'xFileString = Application.GetSaveAsFilename("", filefilter:="Comma Separated Text (*.CSV), *.CSV")
'xFileString = Application.GetSaveAsFilename(NombreArchivo, filefilter:="Text (*.TXT), *.TXT")
'Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.Close True



'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then
    RutaArchivoLocal = RutaLocal & NombreCarpetaCompartida & "\" & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt\" _
    & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Conciliacion Arqueos" & ".txt"


End If

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

FileCopy RutaArchivo, RutaArchivoLocal

End If




'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then
    RutaArchivoLocal = RutaLocal & NombreCarpetaCompartida & "\" & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt\" _
    & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Conciliacion Arqueos" & ".txt"


End If

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

FileCopy RutaArchivo, RutaArchivoLocal

End If


Windows(MiLibroMacro).Activate
    Sheets(sh15).Select
    Columns(nColumnas).ClearContents
    Range("A3").Select

Application.CutCopyMode = False


'
'Set Ht = ActiveSheet
'Set obj = New FileSystemObject
'Set tx = obj.CreateTextFile(RutaArchivo)
'
'nColumnas = Ht.Range("A3", Ht.Range("A3").End(xlToRight)).Cells.Count
'NFilas = (Ht.Range("A3", Ht.Range("A3").End(xlDown)).Cells.Count) + 2
'
'For i = 3 To NFilas
'
'    'If Ht.Cells(i, 1).value <> "" Then
'
'    For j = 1 To nColumnas
'        tx.Write Ht.Cells(i, j).value
'        If j < nColumnas Then tx.Write "|"
'        If j = nColumnas And i = 3 Then tx.Write "|FechaOperacion|FechaRegistro|UsuarioRegistro|PlaneadorAsignado"
'        If j = nColumnas And i > 3 Then tx.Write "|" & FechaOperacion & "|" & Now() & "|" & UsuarioWindows & "|" & NombrePlaneador
'    Next j
'
'    tx.WriteLine
'
'    'End If
'
'    Next i
'
'tx.Close
'
'Set obj = Nothing

End Sub

Sub FechasDiferentes()
Dim arr() As Date
Dim X, Y, Nreg As Integer
X = 1
Y = 0
Nreg = Range("A1").End(xlDown).Count

Do While Cells(X, 1) <> ""
    
        If IsDate(Cells(X, 24)) Then
            For i = 1 To Nreg
                If arr(i) = Cells(X, 24) Then
                Y = Y + 1
                Else
                Y = Y
                End If
            Next
        End If
    
X = X + 1
Loop

End Sub

''''''''''''''''''''''MOVIMIENTOS DE TRANSEFERENCIA SALIDAS Y ENTRADAS'''''''''''''''''''''''''''''''''''
Sub CH0_3TxtTraspasosCajasHoy()
Call CA00_MacroCrearCarpetas
Call VariablesGlobales

'agregar id a caja de recepci|fffd|n
Call CJ2_AgregarIdDestinoTraspasosSalida

Dim NombreArchivo, RutaArchivo As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date


DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"

RutaArchivo = UnidadRuta & "\" & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Salida" & ".txt"



'sh13 = "MovimientosSalida"
Sheets(sh13).Select


'''''''''''''''''OPTIMIZACI|fffd|N ''''''''''''''''''''''''''


'CREAR ARCHIVO CON RANGO DE EXCEL
Dim Rng As Range
Dim WorkRng As Range
Dim xFile As Variant
Dim xFileString As String
On Error Resume Next

'Concatenar contenido
    'inicio de rango
    MiLibroMacro = ActiveWorkbook.Name

    Range("A1").Select
    'quitar filtro
    If Worksheets(sh13).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        Worksheets(sh13).AutoFilterMode = False
    Else
        'MsgBox "no hay filtro"
    End If
    
    Call ConcatenarRangoPipes
    
    Windows(MiLibroMacro).Activate
    Sheets(sh13).Select
    
    
    'rango para copiar en txt
    nColumnas = Range("A1").End(xlToRight).Column
    
    If Range("B4") = "" And Range("B5") = "" Then
    NFilas = 3
    
    ElseIf (Range("B1", Range("B1").End(xlDown)).Cells.Count) > 10000 Then
    NFilas = 3
    
    Else
    NFilas = (Range("B1", Range("B1").End(xlDown)).Cells.Count)
    
    End If
    
    Range(Cells(1, nColumnas), Cells(NFilas, nColumnas)).Select


'guardar en txt
Set WorkRng = Application.Selection
Application.ActiveSheet.Copy
Application.ActiveSheet.Cells.Clear
WorkRng.Copy Application.ActiveSheet.Range("A1")
Set xFile = CreateObject("Scripting.FileSystemObject")
'xFileString = Application.GetSaveAsFilename("", filefilter:="Comma Separated Text (*.CSV), *.CSV")
'xFileString = Application.GetSaveAsFilename(NombreArchivo, filefilter:="Text (*.TXT), *.TXT")
'Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.Close True




'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then
    RutaArchivoLocal = RutaLocal & NombreCarpetaCompartida & "\" & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt\" _
    & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Salida" & ".txt"


End If

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

FileCopy RutaArchivo, RutaArchivoLocal

End If


Windows(MiLibroMacro).Activate
    Sheets(sh13).Select
    Columns(nColumnas).ClearContents
    Range("A3").Select

Application.CutCopyMode = False



'Set Ht = ActiveSheet
'Set obj = New FileSystemObject
'Set tx = obj.CreateTextFile(RutaArchivo)
'
'nColumnas = Ht.Range("A1", Ht.Range("A1").End(xlToRight)).Cells.Count
'
'If (Ht.Range("A1", Ht.Range("A1").End(xlDown)).Cells.Count) > 1000 Then
'NFilas = 1
'Else
'NFilas = (Ht.Range("A1", Ht.Range("A1").End(xlDown)).Cells.Count)
'End If
'
'For i = 1 To NFilas
'
'    'If Ht.Cells(i, 1).value <> "" Then
'
'    For j = 1 To nColumnas
'        tx.Write Ht.Cells(i, j).value
'        If j < nColumnas Then tx.Write "|"
'        If j = nColumnas And i = 1 Then tx.Write "|FechaOperacion|FechaRegistro|UsuarioRegistro|PlaneadorAsignado"
'        If j = nColumnas And i > 1 Then tx.Write "|" & FechaOperacion & "|" & Now() & "|" & UsuarioWindows & "|" & NombrePlaneador
'    Next j
'
'    tx.WriteLine
'
'    'End If
'
'    Next i
'
'tx.Close
'
'Set obj = Nothing

End Sub




Sub CH0_8TxtTraspasosCajasHoyDinamico()
Call CA00_MacroCrearCarpetas
Call VariablesGlobales

'agregar id a caja de recepci|fffd|n
Call CJ2_AgregarIdDestinoTraspasosSalida

Dim NombreArchivo, RutaArchivo As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date


DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"

RutaArchivo = UnidadRuta & "\" & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Salida" & ".txt"



'sh13 = "MovimientosSalida"
Sheets(sh13).Select


'''''''''''''''''OPTIMIZACI|fffd|N ''''''''''''''''''''''''''


'CREAR ARCHIVO CON RANGO DE EXCEL
Dim Rng As Range
Dim WorkRng As Range
Dim xFile As Variant
Dim xFileString As String
On Error Resume Next

'Concatenar contenido
    'inicio de rango
    MiLibroMacro = ActiveWorkbook.Name

    Range("A1").Select
    'quitar filtro
    If Worksheets(sh13).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        Worksheets(sh13).AutoFilterMode = False
    Else
        'MsgBox "no hay filtro"
    End If
    
    Call ConcatenarRangoPipes
    
    Windows(MiLibroMacro).Activate
    Sheets(sh13).Select
    
    
    'rango para copiar en txt
    nColumnas = Range("A1").End(xlToRight).Column
    
    If Range("B4") = "" And Range("B5") = "" Then
    NFilas = 3
    
    ElseIf (Range("B1", Range("B1").End(xlDown)).Cells.Count) > 10000 Then
    NFilas = 3
    
    Else
    NFilas = (Range("B1", Range("B1").End(xlDown)).Cells.Count)
    
    End If
    
    Range(Cells(1, nColumnas), Cells(NFilas, nColumnas)).Select


'guardar en txt
Set WorkRng = Application.Selection
Application.ActiveSheet.Copy
Application.ActiveSheet.Cells.Clear
WorkRng.Copy Application.ActiveSheet.Range("A1")
Set xFile = CreateObject("Scripting.FileSystemObject")
'xFileString = Application.GetSaveAsFilename("", filefilter:="Comma Separated Text (*.CSV), *.CSV")
'xFileString = Application.GetSaveAsFilename(NombreArchivo, filefilter:="Text (*.TXT), *.TXT")
'Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.Close True




'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then
    RutaArchivoLocal = RutaLocal & NombreCarpetaCompartida & "\" & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt\" _
    & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Salida" & ".txt"


End If

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

FileCopy RutaArchivo, RutaArchivoLocal

End If


Windows(MiLibroMacro).Activate
    Sheets(sh13).Select
    Columns(nColumnas).ClearContents
    Range("A3").Select

Application.CutCopyMode = False



'Set Ht = ActiveSheet
'Set obj = New FileSystemObject
'Set tx = obj.CreateTextFile(RutaArchivo)
'
'nColumnas = Ht.Range("A1", Ht.Range("A1").End(xlToRight)).Cells.Count
'
'If (Ht.Range("A1", Ht.Range("A1").End(xlDown)).Cells.Count) > 1000 Then
'NFilas = 1
'Else
'NFilas = (Ht.Range("A1", Ht.Range("A1").End(xlDown)).Cells.Count)
'End If
'
'For i = 1 To NFilas
'
'    'If Ht.Cells(i, 1).value <> "" Then
'
'    For j = 1 To nColumnas
'        tx.Write Ht.Cells(i, j).value
'        If j < nColumnas Then tx.Write "|"
'        If j = nColumnas And i = 1 Then tx.Write "|FechaOperacion|FechaRegistro|UsuarioRegistro|PlaneadorAsignado"
'        If j = nColumnas And i > 1 Then tx.Write "|" & FechaOperacion & "|" & Now() & "|" & UsuarioWindows & "|" & NombrePlaneador
'    Next j
'
'    tx.WriteLine
'
'    'End If
'
'    Next i
'
'tx.Close
'
'Set obj = Nothing

End Sub



Sub CH0_10TxtDemDinamico()
Call CA00_MacroCrearCarpetas
Call VariablesGlobales

'agregar id a caja de recepci|fffd|n
Call CJ2_AgregarIdDestinoTraspasosSalida

Dim NombreArchivo, RutaArchivo As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String
Dim punteroImporte, sumaDem As Long

punteroImporte = 12

'Ubicar fecha del reporte
fechaValor = Date


DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"

RutaArchivo = UnidadRuta & "\" & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " DEM" & ".txt"



'MsgBox RutaArchivo

'sh25 = "DEM"
Sheets(sh25).Select


'''''''''''''''''OPTIMIZACI|fffd|N ''''''''''''''''''''''''''


'CREAR ARCHIVO CON RANGO DE EXCEL
Dim Rng As Range
Dim WorkRng As Range
Dim xFile As Variant
Dim xFileString As String
On Error Resume Next

'Concatenar contenido
    'inicio de rango
    MiLibroMacro = ActiveWorkbook.Name

    Range("A2").Select
    'quitar filtro
    If Worksheets(sh25).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        Worksheets(sh25).AutoFilterMode = False
    Else
        'MsgBox "no hay filtro"
    End If
    
    Call ConcatenarRangoPipes
    
    Windows(MiLibroMacro).Activate
    Sheets(sh25).Select
    
    
    'rango para copiar en txt
    nColumnas = Range("A2").End(xlToRight).Column
    
    If Range("B3") = "" And Range("B4") = "" Then
    NFilas = 2
    
    ElseIf (Range("B2", Range("B2").End(xlDown)).Cells.Count) > 10000 Then
    NFilas = 2
    
    Else
    NFilas = (Range("B2", Range("B2").End(xlDown)).Cells.Count) + 1
    
    End If
    
    Range(Cells(1, nColumnas), Cells(NFilas, nColumnas)).Select


'SUMA DEM

sumaDem = Application.WorksheetFunction.Sum(Range(Cells(3, punteroImporte), Cells(NFilas, punteroImporte)))



'guardar en txt
Set WorkRng = Application.Selection
Application.ActiveSheet.Copy
Application.ActiveSheet.Cells.Clear
WorkRng.Copy Application.ActiveSheet.Range("A1")
Set xFile = CreateObject("Scripting.FileSystemObject")
'xFileString = Application.GetSaveAsFilename("", filefilter:="Comma Separated Text (*.CSV), *.CSV")
'xFileString = Application.GetSaveAsFilename(NombreArchivo, filefilter:="Text (*.TXT), *.TXT")
'Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.Close True




'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then
    RutaArchivoLocal = RutaLocal & NombreCarpetaCompartida & "\" & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt\" _
    & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " DEM" & ".txt"


End If

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

FileCopy RutaArchivo, RutaArchivoLocal

End If


Windows(MiLibroMacro).Activate
    Sheets(sh25).Select
    Columns(nColumnas).ClearContents
    Range("A3").Select
    
    
''''''''''''''''''PARA CC CCO''''''''''''''''''''''''''''''''''''''
'sh19 = "PARAMETROS"
Sheets(sh19).Select
Dim PARA, CC, CCO As String
Dim MailDestRow As Long
Dim MailDestCol As Integer

MailDestRow = 55
MailDestCol = 1
PARA = ""
CC = ""
CCO = ""

Do While Cells(MailDestRow, MailDestCol) <> ""
    
    If Cells(MailDestRow, MailDestCol) = "Para" Then
    PARA = PARA & ";" & Cells(MailDestRow, MailDestCol + 1).value
    
    ElseIf Cells(MailDestRow, MailDestCol) = "CC" Then
    CC = CC & ";" & Cells(MailDestRow, MailDestCol + 1).value
    
    ElseIf Cells(MailDestRow, MailDestCol) = "CCO" Then
    CCO = CCO & ";" & Cells(MailDestRow, MailDestCol + 1).value
    End If


MailDestRow = MailDestRow + 1

Loop
    

''''''''''''''''''''''''''''''''CORREO'''''''''''''''''''''''''''''
Sheets(sh25).Select
'                    Call CO3_1FormatoServicios
                Dim OutApp, OutMail As Object
                'Dim MiAdjunto As Outlook.Attachments
                Dim Asunto, Mensaje1, Mensaje2, FirmaCompartamos As String
                Dim ArchivoAdjunto As String
                Dim Saludo As String
                
                'Saludo dependiendo la hora de ejecuci|fffd|n
                If Hour(Now()) >= 12 Then
                Saludo = "Buenas tardes,"
                Else
                Saludo = "Buenos d|fffd|as,"
                End If
                
                'Asunto del correo
                Asunto = "DEM REGISTRADO **  " & Day(Date) & " DE " & NombresMesesLargo(Month(Date))
                
                'Mensaje
                'sh19 = "PARAMETROS"
                
                Mensaje = "Aviso de nuevos registros DEM disponibles."
                Mensaje1 = "N|fffd|mero = " & Format(NFilas - 2, "#,##0")
                Mensaje3 = "Importe = " & Format(sumaDem, "$#,##0.00")
              
                Mensaje2 = "Saludos,"
                
                
                'Comprobar si Outlook esta abierto y en caso de no estarlo abrirlo

                On Error Resume Next
                Set OutApp = GetObject("", "Outlook.Application")
                Err.Clear
                
                If OutApp Is Nothing Then Set OutApp = CreateObject("Outlook.Application")

                
                OutApp.Visible = True
                
                OutApp.session.logon
                
                'se crea m|fffd|todo de env|fffd|o de correo
                Set OutMail = OutApp.CreateItem(0)
                
                
                
                'adjunto
                'Set MiAdjunto = OutMail.Attachments
                
                
                ''''''''''''''''''''''''''''''''''''''''''CORREO'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                'el cuerpo del correo y los archivos adjuntos
                On Error Resume Next
                
                With OutMail
                '.MiAdjunto.Add ArchivoAdjunto
                .To = PARA
                .CC = CC
                .BCC = CCO
                .Subject = Asunto
                .Attachments.Add RutaArchivo
                '.BodyFormat = 2 'olFormatRichText
                '.Attachments.Add ArchivoAdjunto
                .HTMLBody = "<html>" & _
                    "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6C6969"">" & Saludo & "<br>" & "<br>" & Mensaje & "</span style=""color:#6C6969"">" & "<p/>" _
                    & "<p style='font-family:verdana;font-size:18'>" & "<span style=""color:#E71743"">" & Mensaje1 & "<br>" & Mensaje3 & "<br>" & "<br>" & "</span style=""color:#E71743"">" _
                    & "<br>" & _
                    "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6C6969"">" & Mensaje2 & "<br>" _
                    & "<br>" & DATOS_USUARIO_WINDOWS(Environ("UserName"), 1) & "<br>" & _
                    "Tel. 5276-7250     Ext:    " & DATOS_USUARIO_WINDOWS(Environ("UserName"), 4) & "<br>" & _
                    DATOS_USUARIO_WINDOWS(Environ("UserName"), 5) & "</span style=""color:#6C6969"">" & "<p/>" & "<br>" & _
                    "<img src= " & Chr(34) & RutaLocal & NombreCarpetaCompartida & "\" & Catalogos & firmaImagen & Chr(34) _
                    & "</html>"
                    
                    '' "<body>" "</body>"
                    
                '.Attachments.Add firmaImagen, False
                .display
                
                'Application.SendKeys "^{END}", True
                'Application.SendKeys "{ENTER}", True
                'Application.SendKeys "^v", True
                'DoEvents
                End With
                
                On Error GoTo 0
                
                Set OutMail = Nothing
                Set OutApp = Nothing

Sheets(sh25).Select

Application.CutCopyMode = False



End Sub



Sub CH0_11TxtDemArrastre()
Call CA00_MacroCrearCarpetas
Call VariablesGlobales

'agregar id a caja de recepci|fffd|n
Call CJ2_AgregarIdDestinoTraspasosSalida

Dim NombreArchivo, RutaArchivo As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date


DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"

RutaArchivo = UnidadRuta & "\" & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " DEM Arrastre" & ".txt"


'MsgBox RutaArchivo
'sh25 = "DEM"
Sheets(sh25).Select


'''''''''''''''''OPTIMIZACI|fffd|N ''''''''''''''''''''''''''


'CREAR ARCHIVO CON RANGO DE EXCEL
Dim Rng As Range
Dim WorkRng As Range
Dim xFile As Variant
Dim xFileString As String
On Error Resume Next

'Concatenar contenido
    'inicio de rango
    MiLibroMacro = ActiveWorkbook.Name

    Range("A2").Select
    'quitar filtro
    If Worksheets(sh25).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        Worksheets(sh25).AutoFilterMode = False
    Else
        'MsgBox "no hay filtro"
    End If
    
    Call ConcatenarRangoPipes
    
    Windows(MiLibroMacro).Activate
    Sheets(sh25).Select
    
    
    'rango para copiar en txt
    nColumnas = Range("A2").End(xlToRight).Column
    
    If Range("B3") = "" And Range("B4") = "" Then
    NFilas = 2
    
    ElseIf (Range("B2", Range("B2").End(xlDown)).Cells.Count) > 10000 Then
    NFilas = 2
    
    Else
    NFilas = (Range("B2", Range("B2").End(xlDown)).Cells.Count) + 1
    
    End If
    
    Range(Cells(1, nColumnas), Cells(NFilas, nColumnas)).Select


'guardar en txt
Set WorkRng = Application.Selection
Application.ActiveSheet.Copy
Application.ActiveSheet.Cells.Clear
WorkRng.Copy Application.ActiveSheet.Range("A1")
Set xFile = CreateObject("Scripting.FileSystemObject")
'xFileString = Application.GetSaveAsFilename("", filefilter:="Comma Separated Text (*.CSV), *.CSV")
'xFileString = Application.GetSaveAsFilename(NombreArchivo, filefilter:="Text (*.TXT), *.TXT")
'Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.Close True




'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then
    RutaArchivoLocal = RutaLocal & NombreCarpetaCompartida & "\" & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt\" _
    & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " DEM Arrastre" & ".txt"


End If

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

FileCopy RutaArchivo, RutaArchivoLocal

End If


Windows(MiLibroMacro).Activate
    Sheets(sh25).Select
    Columns(nColumnas).ClearContents
    Range("A3").Select

Application.CutCopyMode = False



End Sub


Sub CH0_12TxtDemConsolidarMes()
Call CA00_MacroCrearCarpetas
Call VariablesGlobales

'agregar id a caja de recepci|fffd|n
Call CJ2_AgregarIdDestinoTraspasosSalida

Dim NombreArchivo, RutaArchivo As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date


DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaDem
'fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"

RutaArchivo = UnidadRuta & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " DEM Consolidado" & ".txt"
RutaArchivo2 = UnidadRuta & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " DEM Consolidado" & ".xlsm"


'MsgBox RutaArchivo
'sh25 = "DEM"
Sheets(sh25).Select


'''''''''''''''''OPTIMIZACI|fffd|N ''''''''''''''''''''''''''


'CREAR ARCHIVO CON RANGO DE EXCEL
Dim Rng As Range
Dim WorkRng As Range
Dim xFile As Variant
Dim xFileString As String
On Error Resume Next

'Concatenar contenido
    'inicio de rango
    MiLibroMacro = ActiveWorkbook.Name

    Range("A2").Select
    'quitar filtro
    If Worksheets(sh25).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        Worksheets(sh25).AutoFilterMode = False
    Else
        'MsgBox "no hay filtro"
    End If
    
    Call ConcatenarRangoPipes
    
    Windows(MiLibroMacro).Activate
    Sheets(sh25).Select
    
    
    'rango para copiar en txt
    nColumnas = Range("A2").End(xlToRight).Column
    
    If Range("B3") = "" And Range("B4") = "" Then
    NFilas = 2
    
    ElseIf (Range("B2", Range("B2").End(xlDown)).Cells.Count) > 10000 Then
    NFilas = 2
    
    Else
    NFilas = (Range("B2", Range("B2").End(xlDown)).Cells.Count) + 1
    
    End If
    
    Range(Cells(1, nColumnas), Cells(NFilas, nColumnas)).Select


'guardar en txt
Set WorkRng = Application.Selection
Application.ActiveSheet.Copy
Application.ActiveSheet.Cells.Clear
WorkRng.Copy Application.ActiveSheet.Range("A1")
Set xFile = CreateObject("Scripting.FileSystemObject")
'xFileString = Application.GetSaveAsFilename("", filefilter:="Comma Separated Text (*.CSV), *.CSV")
'xFileString = Application.GetSaveAsFilename(NombreArchivo, filefilter:="Text (*.TXT), *.TXT")
'Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.Close True




'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then
    RutaArchivoLocal = RutaLocal & NombreCarpetaCompartida & "\" & RutaDem & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " DEM Consolidado" & ".txt"
    RutaArchivoLocal2 = RutaLocal & NombreCarpetaCompartida & "\" & RutaDem & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " DEM Consolidado" & ".xlsm"
End If




Windows(MiLibroMacro).Activate
    Sheets(sh25).Select
    Columns(nColumnas).ClearContents
    Range("A3").Select



''''''''''''''''GUARDAR EN EXCEL''''''''''''''''''''''''''
    Sheets(sh25).Select
    Sheets(sh25).Copy
    ActiveSheet.Shapes.Range(Array("Button 1")).Select
    Selection.Delete
    ActiveSheet.Shapes.Range(Array("Button 2")).Select
    Selection.Delete
    ActiveSheet.Shapes.Range(Array("Button 3")).Select
    Selection.Delete
'    ChDir "J:\DEM"
    ActiveWorkbook.SaveAs Filename:=RutaArchivo2, FileFormat:= _
        xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
        
    ActiveWorkbook.Close False
    
    Windows(MiLibroMacro).Activate
    Sheets(sh25).Select


'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

FileCopy RutaArchivo, RutaArchivoLocal
FileCopy RutaArchivo2, RutaArchivoLocal2

End If


Application.CutCopyMode = False



End Sub


Sub CH0_6TxtTraspasosEntradaCajasHoy()
Call CA00_MacroCrearCarpetas
Call VariablesGlobales

'agregar id a caja de recepci|fffd|n
Call CJ2_AgregarIdDestinoTraspasosSalida

Dim NombreArchivo, RutaArchivo As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date


DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"

RutaArchivo = UnidadRuta & "\" & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Entrada" & ".txt"



'sh16 = "MovimientosEntrada"
Sheets(sh16).Select


'''''''''''''''''OPTIMIZACI|fffd|N ''''''''''''''''''''''''''


'CREAR ARCHIVO CON RANGO DE EXCEL
Dim Rng As Range
Dim WorkRng As Range
Dim xFile As Variant
Dim xFileString As String
On Error Resume Next

'Concatenar contenido
    'inicio de rango
    MiLibroMacro = ActiveWorkbook.Name

    Range("A1").Select
    'quitar filtro
    If Worksheets(sh16).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        Worksheets(sh16).AutoFilterMode = False
    Else
        'MsgBox "no hay filtro"
    End If
    
    Call ConcatenarRangoPipes
    
    Windows(MiLibroMacro).Activate
    Sheets(sh16).Select
    
    
    'rango para copiar en txt
    nColumnas = Range("A1").End(xlToRight).Column
    
    If Range("B4") = "" And Range("B5") = "" Then
    NFilas = 3
    
    ElseIf (Range("B1", Range("B1").End(xlDown)).Cells.Count) > 10000 Then
    NFilas = 3
    
    Else
    NFilas = (Range("B1", Range("B1").End(xlDown)).Cells.Count)
    
    End If
    
    Range(Cells(1, nColumnas), Cells(NFilas, nColumnas)).Select


'guardar en txt
Set WorkRng = Application.Selection
Application.ActiveSheet.Copy
Application.ActiveSheet.Cells.Clear
WorkRng.Copy Application.ActiveSheet.Range("A1")
Set xFile = CreateObject("Scripting.FileSystemObject")
'xFileString = Application.GetSaveAsFilename("", filefilter:="Comma Separated Text (*.CSV), *.CSV")
'xFileString = Application.GetSaveAsFilename(NombreArchivo, filefilter:="Text (*.TXT), *.TXT")
'Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.Close True

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then
    RutaArchivoLocal = RutaLocal & NombreCarpetaCompartida & "\" & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt\" _
    & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Entrada" & ".txt"


End If

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

FileCopy RutaArchivo, RutaArchivoLocal

End If

Windows(MiLibroMacro).Activate
    Sheets(sh16).Select
    Columns(nColumnas).ClearContents
    Range("A3").Select

Application.CutCopyMode = False



'Set Ht = ActiveSheet
'Set obj = New FileSystemObject
'Set tx = obj.CreateTextFile(RutaArchivo)
'
'nColumnas = Ht.Range("A1", Ht.Range("A1").End(xlToRight)).Cells.Count
'
'If (Ht.Range("A1", Ht.Range("A1").End(xlDown)).Cells.Count) > 1000 Then
'NFilas = 1
'Else
'NFilas = (Ht.Range("A1", Ht.Range("A1").End(xlDown)).Cells.Count)
'End If
'
'For i = 1 To NFilas
'
'    'If Ht.Cells(i, 1).value <> "" Then
'
'    For j = 1 To nColumnas
'        tx.Write Ht.Cells(i, j).value
'        If j < nColumnas Then tx.Write "|"
'        If j = nColumnas And i = 1 Then tx.Write "|FechaOperacion|FechaRegistro|UsuarioRegistro|PlaneadorAsignado"
'        If j = nColumnas And i > 1 Then tx.Write "|" & FechaOperacion & "|" & Now() & "|" & UsuarioWindows & "|" & NombrePlaneador
'    Next j
'
'    tx.WriteLine
'
'    'End If
'
'    Next i
'
'tx.Close
'
'Set obj = Nothing

End Sub




Sub CH0_9TxtTraspasosEntradaCajasHoyDinamico()
Call CA00_MacroCrearCarpetas
Call VariablesGlobales

'agregar id a caja de recepci|fffd|n
Call CJ2_AgregarIdDestinoTraspasosSalida

Dim NombreArchivo, RutaArchivo As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date


DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"

RutaArchivo = UnidadRuta & "\" & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Entrada" & ".txt"



'sh16 = "MovimientosEntrada"
Sheets(sh16).Select


'''''''''''''''''OPTIMIZACI|fffd|N ''''''''''''''''''''''''''


'CREAR ARCHIVO CON RANGO DE EXCEL
Dim Rng As Range
Dim WorkRng As Range
Dim xFile As Variant
Dim xFileString As String
On Error Resume Next

'Concatenar contenido
    'inicio de rango
    MiLibroMacro = ActiveWorkbook.Name

    Range("A1").Select
    'quitar filtro
    If Worksheets(sh16).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        Worksheets(sh16).AutoFilterMode = False
    Else
        'MsgBox "no hay filtro"
    End If
    
    Call ConcatenarRangoPipes
    
    Windows(MiLibroMacro).Activate
    Sheets(sh16).Select
    
    
    'rango para copiar en txt
    nColumnas = Range("A1").End(xlToRight).Column
    
    If Range("B4") = "" And Range("B5") = "" Then
    NFilas = 3
    
    ElseIf (Range("B1", Range("B1").End(xlDown)).Cells.Count) > 10000 Then
    NFilas = 3
    
    Else
    NFilas = (Range("B1", Range("B1").End(xlDown)).Cells.Count)
    
    End If
    
    Range(Cells(1, nColumnas), Cells(NFilas, nColumnas)).Select


'guardar en txt
Set WorkRng = Application.Selection
Application.ActiveSheet.Copy
Application.ActiveSheet.Cells.Clear
WorkRng.Copy Application.ActiveSheet.Range("A1")
Set xFile = CreateObject("Scripting.FileSystemObject")
'xFileString = Application.GetSaveAsFilename("", filefilter:="Comma Separated Text (*.CSV), *.CSV")
'xFileString = Application.GetSaveAsFilename(NombreArchivo, filefilter:="Text (*.TXT), *.TXT")
'Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.Close True

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then
    RutaArchivoLocal = RutaLocal & NombreCarpetaCompartida & "\" & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt\" _
    & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Entrada" & ".txt"


End If

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

FileCopy RutaArchivo, RutaArchivoLocal

End If

Windows(MiLibroMacro).Activate
    Sheets(sh16).Select
    Columns(nColumnas).ClearContents
    Range("A3").Select

Application.CutCopyMode = False



'Set Ht = ActiveSheet
'Set obj = New FileSystemObject
'Set tx = obj.CreateTextFile(RutaArchivo)
'
'nColumnas = Ht.Range("A1", Ht.Range("A1").End(xlToRight)).Cells.Count
'
'If (Ht.Range("A1", Ht.Range("A1").End(xlDown)).Cells.Count) > 1000 Then
'NFilas = 1
'Else
'NFilas = (Ht.Range("A1", Ht.Range("A1").End(xlDown)).Cells.Count)
'End If
'
'For i = 1 To NFilas
'
'    'If Ht.Cells(i, 1).value <> "" Then
'
'    For j = 1 To nColumnas
'        tx.Write Ht.Cells(i, j).value
'        If j < nColumnas Then tx.Write "|"
'        If j = nColumnas And i = 1 Then tx.Write "|FechaOperacion|FechaRegistro|UsuarioRegistro|PlaneadorAsignado"
'        If j = nColumnas And i > 1 Then tx.Write "|" & FechaOperacion & "|" & Now() & "|" & UsuarioWindows & "|" & NombrePlaneador
'    Next j
'
'    tx.WriteLine
'
'    'End If
'
'    Next i
'
'tx.Close
'
'Set obj = Nothing

End Sub

'''''''''''''''''''''''''''''''''''EXTRAER INFORMACI|fffd|N PARA CONCILIACI|fffd|N DE ARQUEOS ETV'''''''''''''''''''''''''
Sub CH1_ImportarTodosPlaneacionesTxt()

'Llamar las variables generales
Call VariablesGlobales

Dim archi, rango As Variant
Dim fila As Long
Dim fechaCarpeta, carpeta As String
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor



'D|fffd|a etiqueta
If Weekday(fechaValor, vbMonday) = 1 Then
    DayValor = Day(fechaValor - 3)
Else
    DayValor = Day(fechaValor - 1)
End If


If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If



'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"

carpeta = UnidadRuta & "\" & fechaCarpeta


Sheets(sh6).Select
Cells.Clear

On Error Resume Next

'abrir archivos de carpeta indicada
ChDrive (UnidadAsignada)
ChDir (carpeta)
archi = Dir("*Planeacion.txt")
        
        'si no hay archivos finalizar
        If archi = "" Then
        MsgBox "NO HAY INFORMACI|fffd|N DE PLANEACIONES DEL D|fffd|A ANTERIOR"
        Exit Sub
        End If

rango = "A1"

  Do While archi <> ""
    
    
     With ActiveSheet.QueryTables.Add(Connection:="TEXT;" & _
         carpeta & "\" & archi, Destination:=Range(rango)) '<===========
        
        .Name = archi
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 850
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierNone
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileOtherDelimiter = "|"
        .TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 _
        , 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    End With
    
     fila = Range("A" & Rows.Count).End(xlUp).Row + 1 '<====================
     rango = Range("A" & fila).Address '<======================
    
    'Otras Opciones
    'milibro = ActiveWorkbook.Name
     archi = Dir()
  Loop '<========================================

On Error GoTo 0

''Encabezados
'Cells(1, 1) = CamArq1
'Cells(1, 2) = CamArq2
'Cells(1, 3) = CamArq3
'Cells(1, 4) = CamArq4
'Cells(1, 5) = CamArq5
'Cells(1, 6) = CamArq6
'Cells(1, 7) = CamArq7
'Cells(1, 8) = CamArq8
'Cells(1, 9) = CamArq9
'Cells(1, 10) = CamArq10
'Cells(1, 11) = CamArq11
'Cells(1, 12) = CamArq12
'Cells(1, 13) = CamArq13
'Cells(1, 14) = CamArq14
'Cells(1, 15) = CamArq15
'Cells(1, 16) = CamArq16
'Cells(1, 17) = CamArq17



End Sub



Sub CH0_4TxtComprasHoy()
Call CA00_MacroCrearCarpetas
Call VariablesGlobales


Dim NombreArchivo, RutaArchivo, RutaArchivoLocal As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtCompras & MonthLabel & " " & NombreMes & " " & YearLabel & " Compras Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Compras Diarias Txt"

RutaArchivo = UnidadRuta & "\" & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Compras" & ".txt"

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then
    RutaArchivoLocal = RutaLocal & NombreCarpetaCompartida & "\" & RutaTxtCompras & MonthLabel & " " & NombreMes & " " & YearLabel & " Compras Diarias Txt\" _
    & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Compras" & ".txt"
End If


'sh17 = "Registro COMPRAS"
Sheets(sh17).Select



'''''''''''''''''OPTIMIZACI|fffd|N ''''''''''''''''''''''''''


'CREAR ARCHIVO CON RANGO DE EXCEL
Dim Rng As Range
Dim WorkRng As Range
Dim xFile As Variant
Dim xFileString As String
On Error Resume Next

'Concatenar contenido
    'inicio de rango
    MiLibroMacro = ActiveWorkbook.Name

    Range("A5").Select
    
    'quitar filtro
    If Worksheets(sh17).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        Worksheets(sh17).AutoFilterMode = False
    Else
        'MsgBox "no hay filtro"
    End If
    
    Call ConcatenarRangoPipes
    
    Windows(MiLibroMacro).Activate
    Sheets(sh17).Select
    
    
    'rango para copiar en txt
    'columna
    nColumnas = Range("A5").End(xlToRight).Column
    
    NFilas = Range("a1000000").End(xlUp).Row
    
'    'fila
'    If Range("A7") = "" And Range("A8") = "" Then
'    NFilas = 6
'
'    ElseIf (Range("A5", Range("A5").End(xlDown)).Cells.Count) > 10000 Then
'    NFilas = 6
'
'    Else
'    NFilas = (Range("A5", Range("A5").End(xlDown)).Cells.Count)
'
'    End If
    
    
    
    Range(Cells(5, nColumnas), Cells(NFilas, nColumnas)).Select



'guardar en txt
Set WorkRng = Application.Selection
Application.ActiveSheet.Copy
Application.ActiveSheet.Cells.Clear
WorkRng.Copy Application.ActiveSheet.Range("A1")
Set xFile = CreateObject("Scripting.FileSystemObject")
'xFileString = Application.GetSaveAsFilename("", filefilter:="Comma Separated Text (*.CSV), *.CSV")
'xFileString = Application.GetSaveAsFilename(NombreArchivo, filefilter:="Text (*.TXT), *.TXT")
'Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False

ActiveWorkbook.Close True


'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

FileCopy RutaArchivo, RutaArchivoLocal

End If


Windows(MiLibroMacro).Activate
    Sheets(sh17).Select
    Columns(nColumnas).ClearContents
    Range("A3").Select

Application.CutCopyMode = False




'Set Ht = ActiveSheet
'Set obj = New FileSystemObject
'Set tx = obj.CreateTextFile(RutaArchivo)
'
'nColumnas = Ht.Range("A5", Ht.Range("A5").End(xlToRight)).Cells.Count
'
'If (Ht.Range("A5", Ht.Range("A5").End(xlDown)).Cells.Count) > 1000 Then
'MsgBox "NO HAY INFORMACI|fffd|N DE COMPRAS"
'Exit Sub
'
'ElseIf Range("A7") = "" And Range("A8") = "" Then
'NFilas = 6
'
'Else
'NFilas = (Ht.Range("A5", Ht.Range("A5").End(xlDown)).Cells.Count) + 4
'
'End If
'
'For i = 5 To NFilas
'
'    'If Ht.Cells(i, 1).value <> "" Then
'
'    For j = 1 To nColumnas
'        tx.Write Ht.Cells(i, j).value
'        If j < nColumnas Then tx.Write "|"
'        If j = nColumnas And i = 5 Then tx.Write "|FechaOperacion|FechaRegistro|UsuarioRegistro|PlaneadorAsignado"
'        If j = nColumnas And i > 5 Then tx.Write "|" & FechaOperacion & "|" & Now() & "|" & UsuarioWindows & "|" & NombrePlaneador
'    Next j
'
'    tx.WriteLine
'
'    'End If
'
'    Next i
'
'tx.Close
'
'Set obj = Nothing

End Sub




Sub CH0_7TxtPlaneacionCompras()
Call CA00_MacroCrearCarpetas
Call VariablesGlobales


Dim NombreArchivo, RutaArchivo, RutaArchivoLocal As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtCompras & MonthLabel & " " & NombreMes & " " & YearLabel & " Compras Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Compras Diarias Txt"

RutaArchivo = UnidadRuta & "\" & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Planeacion Compras" & ".txt"

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then
    RutaArchivoLocal = RutaLocal & NombreCarpetaCompartida & "\" & RutaTxtCompras & MonthLabel & " " & NombreMes & " " & YearLabel & " Compras Diarias Txt\" _
    & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Planeacion Compras" & ".txt"
End If


'sh24 = "pm_PLANEACION_COMPRAS"
Sheets(sh24).Select



'''''''''''''''''OPTIMIZACI|fffd|N ''''''''''''''''''''''''''


'CREAR ARCHIVO CON RANGO DE EXCEL
Dim Rng As Range
Dim WorkRng As Range
Dim xFile As Variant
Dim xFileString As String
On Error Resume Next

'Concatenar contenido
    'inicio de rango
    MiLibroMacro = ActiveWorkbook.Name

    Range("A5").Select
    'quitar filtro
    If Worksheets(sh24).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        Worksheets(sh24).AutoFilterMode = False
    Else
        'MsgBox "no hay filtro"
    End If
    
    Call ConcatenarRangoPipes
    
    Windows(MiLibroMacro).Activate
    Sheets(sh24).Select
    
    
    'rango para copiar en txt
    nColumnas = Range("A5").End(xlToRight).Column
    
    If Range("A7") = "" And Range("A8") = "" Then
    NFilas = 6
    
    ElseIf (Range("A5", Range("A5").End(xlDown)).Cells.Count) > 10000 Then
    NFilas = 6
    
    Else
    NFilas = (Range("A5", Range("A5").End(xlDown)).Cells.Count)
    
    End If
    
    Range(Cells(5, nColumnas), Cells(NFilas, nColumnas)).Select



'guardar en txt
Set WorkRng = Application.Selection
Application.ActiveSheet.Copy
Application.ActiveSheet.Cells.Clear
WorkRng.Copy Application.ActiveSheet.Range("A1")
Set xFile = CreateObject("Scripting.FileSystemObject")
'xFileString = Application.GetSaveAsFilename("", filefilter:="Comma Separated Text (*.CSV), *.CSV")
'xFileString = Application.GetSaveAsFilename(NombreArchivo, filefilter:="Text (*.TXT), *.TXT")
'Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False

ActiveWorkbook.Close True


'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

FileCopy RutaArchivo, RutaArchivoLocal

End If


Windows(MiLibroMacro).Activate
    Sheets(sh24).Select
    Columns(nColumnas).ClearContents
    Range("A3").Select

Application.CutCopyMode = False




'Set Ht = ActiveSheet
'Set obj = New FileSystemObject
'Set tx = obj.CreateTextFile(RutaArchivo)
'
'nColumnas = Ht.Range("A5", Ht.Range("A5").End(xlToRight)).Cells.Count
'
'If (Ht.Range("A5", Ht.Range("A5").End(xlDown)).Cells.Count) > 1000 Then
'MsgBox "NO HAY INFORMACI|fffd|N DE COMPRAS"
'Exit Sub
'
'ElseIf Range("A7") = "" And Range("A8") = "" Then
'NFilas = 6
'
'Else
'NFilas = (Ht.Range("A5", Ht.Range("A5").End(xlDown)).Cells.Count) + 4
'
'End If
'
'For i = 5 To NFilas
'
'    'If Ht.Cells(i, 1).value <> "" Then
'
'    For j = 1 To nColumnas
'        tx.Write Ht.Cells(i, j).value
'        If j < nColumnas Then tx.Write "|"
'        If j = nColumnas And i = 5 Then tx.Write "|FechaOperacion|FechaRegistro|UsuarioRegistro|PlaneadorAsignado"
'        If j = nColumnas And i > 5 Then tx.Write "|" & FechaOperacion & "|" & Now() & "|" & UsuarioWindows & "|" & NombrePlaneador
'    Next j
'
'    tx.WriteLine
'
'    'End If
'
'    Next i
'
'tx.Close
'
'Set obj = Nothing

End Sub


Sub CH2_PlaneacionDiaAnterior()

Call VariablesGlobales

Dim ColS2, RowS2 As Integer
Dim lookupRange, rango As Range

'columna de inicio captura de los desembolsos en la Hoja OdpTddRemesas
ColS9 = 7
RowS9 = 2

Sheets(sh2).Select
Set lookupRange = Range("A1", Range("C1").End(xlDown))

Sheets(sh8).Select
Set rango = Range("A2", Range("A2").End(xlDown))

For Each cell In rango
''Queremos la columna 3

lookupvalue = Application.VLookup(cell, lookupRange, 3, False)

'Si no encuentra valor finaliza
    If IsError(lookupvalue) Then
        Sheets(sh8).Select
        cell.Offset(0, 6) = 0
    Else
        Sheets(sh8).Select
        cell.Offset(0, 6) = lookupvalue
    End If

Next cell

End Sub


Attribute VB_Name = "CI_SALDOS_CAJAS_DIA_ANTERIOR"

''''''''''''''''''''''''CONFIRMAR SERVICIOS'''''''''''''''''''''''''''''''''
Sub CI_ImportarServiciosEtv()

Application.ScreenUpdating = True
Application.EnableEvents = True

'importar todos los servicios registrados en la fecha seleccionada
Call CI1_ServiciosEtvDiaAnterior


Application.ScreenUpdating = False
Application.EnableEvents = False

End Sub
Sub CI0_SaldosCajasDiaAnterior()
Call VariablesGlobales

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta, carpeta As String

'limpiar hoja
Sheets(sh14).Select
Cells.ClearContents


'Ubicar fecha del reporte
If Weekday(fechaOperacion, vbMonday) > 1 And Weekday(fechaOperacion, vbMonday) < 6 Then
fechaValor = fechaOperacion - 1
ElseIf Weekday(fechaOperacion, vbMonday) = 1 Then
fechaValor = fechaOperacion - 3
End If

DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"

carpeta = UnidadRuta & "\" & fechaCarpeta & "\"


ChDrive (carpeta)
ChDir (carpeta)
archi = Dir(carpeta & "\" & "*Saldos Cajas.txt")




'limpiar hoja
Sheets(sh14).Select

rango = "A1"

Do While archi <> ""
  
    With ActiveSheet.QueryTables.Add(Connection:= _
            "TEXT;" & carpeta & "\" & archi _
            , Destination:=Range(rango))
            .Name = archi
            .FieldNames = True
            .RowNumbers = False
            .FillAdjacentFormulas = False
            .PreserveFormatting = True
            .RefreshOnFileOpen = False
            .RefreshStyle = xlInsertDeleteCells
            .SavePassword = False
            .SaveData = True
            .AdjustColumnWidth = True
            .RefreshPeriod = 0
            .TextFilePromptOnRefresh = False
            .TextFilePlatform = 1252
            .TextFileStartRow = 1
            .TextFileParseType = xlDelimited
            .TextFileTextQualifier = xlTextQualifierNone
            .TextFileConsecutiveDelimiter = False
            .TextFileTabDelimiter = False
            .TextFileSemicolonDelimiter = False
            .TextFileCommaDelimiter = False
            .TextFileSpaceDelimiter = False
            .TextFileOtherDelimiter = "|"
            .TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 _
            , 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 _
            , 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
            .TextFileTrailingMinusNumbers = True
            .Refresh BackgroundQuery:=False
        End With
    
    
    fila = Range("A" & Rows.Count).End(xlUp).Row + 1 '<====================
    
     rango = Range("A" & fila).Address '<======================
    
    'Otras Opciones
    'milibro = ActiveWorkbook.Name
     archi = Dir()
Loop '<========================================


End Sub




Sub CI1_ServiciosEtvDiaAnterior()
Call VariablesGlobales

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta, carpeta As String
Dim rowFin, colFin As Long
Dim tipoArchivo, archivoEstatus As String
'Dim RowInicio As Range
Dim rango, RowInicio As String

'tipo de Estatus de los servicios

If CONFIRMACION_SERVICIOS.ComboBoxTipoArchivo.value = "PROGRAMADO" Then

tipoArchivo = "*Programacion Servicios*.txt"

ElseIf CONFIRMACION_SERVICIOS.ComboBoxTipoArchivo.value = "CONFIRMADO" Then

tipoArchivo = "*Confirmacion Servicios*.txt"

Else


End If


'sh21 = "ConfirmacionServicios"
'quitar filtro
Sheets(sh21).Select
Range("A2").Select
If Worksheets(sh21).AutoFilterMode = True Then
    'MsgBox "si hay filtro"
    Worksheets(sh21).AutoFilterMode = False
Else
    'MsgBox "no hay filtro"
End If





'Ubicar fecha del reporte
'If weekday(FechaOperacion, vbMonday) > 1 And weekday(FechaOperacion, vbMonday) < 6 Then
'FechaValor = FechaOperacion - 1
'ElseIf weekday(FechaOperacion, vbMonday) = 1 Then
'FechaValor = FechaOperacion - 3
'End If

DayValor = Int(CONFIRMACION_SERVICIOS.ComboBoxDiaConfirmacion.value)
NombreMes = CONFIRMACION_SERVICIOS.ComboBoxMesConfirmacion.value
YearValor = Int(CONFIRMACION_SERVICIOS.ComboBoxAnioConfirmacion.value)

'A|fffd|o etiqueta
YearLabel = CONFIRMACION_SERVICIOS.ComboBoxAnioConfirmacion.value

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If NombreMes = Meses1 Then
MonthValor = 1
ElseIf NombreMes = Meses2 Then
MonthValor = 2
ElseIf NombreMes = Meses3 Then
MonthValor = 3
ElseIf NombreMes = Meses4 Then
MonthValor = 4
ElseIf NombreMes = Meses5 Then
MonthValor = 5
ElseIf NombreMes = Meses6 Then
MonthValor = 6
ElseIf NombreMes = Meses7 Then
MonthValor = 7
ElseIf NombreMes = Meses8 Then
MonthValor = 8
ElseIf NombreMes = Meses9 Then
MonthValor = 9
ElseIf NombreMes = Meses10 Then
MonthValor = 10
ElseIf NombreMes = Meses11 Then
MonthValor = 11
ElseIf NombreMes = Meses12 Then
MonthValor = 12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If


'On Error GoTo sinCarpeta:
On Error Resume Next
UnidadRuta = UnidadAsignada & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"

carpeta = UnidadRuta & "\" & fechaCarpeta & "\"
archivoEstatus = tipoArchivo


ChDrive (carpeta)
ChDir (carpeta)
'archi = Dir(Carpeta & "\" & "*Programacion Servicios*.txt")
archi = Dir(carpeta & "\" & tipoArchivo)

If archi = "" Then
MsgBox "No hay informaci|fffd|n en el d|fffd|a seleccionado"
Exit Sub

End If


'''''''''''''''''''''LIMPIAR RANGO DE REGISTRO''''''''''''''''''''''''''''

If CONFIRMACION_SERVICIOS.CheckBoxAgregar.value = True Then

    Sheets(sh21).Select
    
    'SI HAY 1 REGISTRO
    If Range("A1000000").End(xlUp).Row = 3 Then
    
    RowInicio = "A3"
    rango = "A3"
    
    Else

    RowInicio = Range("A1000000").End(xlUp).Offset(1, 0).Address
    rango = Range("A1000000").End(xlUp).Offset(1, 0).Address

    End If
    
    
ElseIf CONFIRMACION_SERVICIOS.CheckBoxLimpiarAgregar.value = True Then

    Sheets(sh21).Select
'    Rows("3:100000").Select
'        Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
'        Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
'        Range(Selection, Selection.End(xlDown)).Select
        Cells.Clear
    RowInicio = "A3"
    rango = "A3"
    

End If


'sh6 = "Procesar"
'Sheets(sh6).Select
'Cells.Clear



Do While archi <> ""
    With ActiveSheet.QueryTables.Add(Connection:= _
            "TEXT;" & carpeta & "\" & archi _
            , Destination:=Range(rango))
            .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlFixedWidth
        .TextFileTextQualifier = xlTextQualifierDoubleQuote
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = True
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileColumnDataTypes = Array(2)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
        End With
    
    
    fila = Range("A" & Rows.Count).End(xlUp).Row + 1 '<====================
    rango = Range("A" & fila).Address '<======================
'    Call DeleteQueryImportaciones
    'Otras Opciones
    'milibro = ActiveWorkbook.Name
     archi = Dir()
Loop '<========================================



'Separar por columnas
'Sheets(sh21).Select
rowFin = Range("a100000").End(xlUp).Row
colFin = 40 'Range("A2").End(xlToRight).Column

Range(RowInicio & ":A" & rowFin).Select

'Range(Selection, Selection.End(xlDown)).Select
    Selection.TextToColumns Destination:=Range(RowInicio), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
        :="|", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, _
        1), Array(6, 1), Array(7, 1), Array(8, 4), Array(9, 4), Array(10, 1), Array(11, 1), Array(12 _
        , 1), Array(13, 1), Array(14, 1), Array(15, 1), Array(16, 1), Array(17, 1), Array(18, 1), _
        Array(19, 1), Array(20, 1), Array(21, 1), Array(22, 1), Array(23, 1), Array(24, 1), Array( _
        25, 1), Array(26, 1), Array(27, 1), Array(28, 1), Array(29, 1), Array(30, 1), Array(31, 1), _
        Array(32, 1), Array(33, 1), Array(34, 1), Array(35, 1), Array(36, 1), Array(37, 1), Array( _
        38, 4), Array(39, 4), Array(40, 1)), TrailingMinusNumbers:=True
    
    Columns("A:AH").EntireColumn.AutoFit


'ORDENAR
    ActiveWorkbook.Worksheets(sh21).Sort.SortFields.Clear
    ActiveWorkbook.Worksheets(sh21).Sort.SortFields.Add Key:= _
        Range(Cells(3, 1), Cells(rowFin, 1)), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets(sh21).Sort
        .SetRange Range(Cells(2, 1), Cells(rowFin, colFin))
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    
'mostrar solo los registros de las plazas asignadas
Call CI1_1FilasPlazasAsignadas

'limpiar rastro
Call DeleteQueryImportaciones

MsgBox "Registrar cada servicio a facturar como CONFIRMADO o CANCELADO en la columa A"

'Exit Sub
'
'sinCarpeta:
'MsgBox "No hay informaci|fffd|n en el d|fffd|a seleccionado"
'Exit Sub

On Error GoTo 0

End Sub


Sub CI1_1FilasPlazasAsignadas()
Call VariablesGlobales

Dim Plazas As Collection
Dim colPlazas0, rowPlazas0, col0, row0, contador, numCol As Long
Dim punteroEtv, punteroplaza, punteroIdSuc, punteroFechaServ As Integer
Dim rowPlan, colPlan As Integer
Dim Planeador As String
Dim sinPlaneador As Boolean

rowPlazas0 = 2
colPlazas0 = 19
rowPlan = 2
colPlan = 29
col0 = 4
row0 = 3
contador = 2
sinPlaneador = False


Planeador = CONFIRMACION_SERVICIOS.ComboBoxPlaneadores.value


'sh4 = "Info. Gral."
Sheets(sh4).Select
'usuario del planeador
Do While Cells(rowPlan, colPlan) <> ""
    
    If Cells(rowPlan, colPlan).value = Planeador Then
    
        Planeador = Cells(rowPlan, colPlan + 1).value
    
    ElseIf Planeador = "" Then
        Planeador = "Todos"
    End If
    
    rowPlan = rowPlan + 1

Loop


Set Plazas = New Collection


'Agregar plazas asignadas

Do While Cells(rowPlazas0, colPlazas0) <> ""
    
    On Error Resume Next
    
    If Cells(rowPlazas0, colPlazas0 + 1) = Planeador And Planeador <> "Todos" Then
'        MsgBox "1. planeador " & planeador & Chr(10) & "Cells(rowPlazas0, colPlazas0 + 1) " & Cells(rowPlazas0, colPlazas0 + 1)
        Plazas.Add Cells(rowPlazas0, colPlazas0).value, CStr(Cells(rowPlazas0, colPlazas0).value)
    
    ElseIf Planeador = "Todos" Then
'    MsgBox "2. planeador " & planeador & Chr(10) & "Cells(rowPlazas0, colPlazas0 + 1) " & Cells(rowPlazas0, colPlazas0 + 1)
        Plazas.Add Cells(rowPlazas0, colPlazas0).value, CStr(Cells(rowPlazas0, colPlazas0).value)
        
    End If
    
    On Error GoTo 0
    rowPlazas0 = rowPlazas0 + 1

Loop

'sh21 = "ConfirmacionServicios"

Sheets(sh21).Select
numCol = 40 'Cells(row0 - 1, 1).End(xlToRight).Column
punteroEtv = 3
punteroplaza = 4
punteroIdSuc = 5
punteroFechaServ = 9

If Plazas.Count = 0 Then
'layout y finalizar
Sheets(sh21).Select
'    Rows("3:100").Select
'    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
'    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
'    Range(Selection, Selection.End(xlDown)).Select
'    Selection.ClearContents
    Cells.Clear
    Call CI2_ServiciosEtvLayout
    Exit Sub
    
Else

        Do While Cells(row0, 1) <> ""
        
            For i = 1 To Plazas.Count
                
                
                If Cells(row0, col0) = Plazas(i) Then
                Exit For
                
                ElseIf i = Plazas.Count And Cells(row0, col0) <> Plazas(i) Then
                
                    Cells(row0, col0).EntireRow.ClearContents
                    Exit For
                    
                End If
            
            
            Next i
            
            contador = contador + 1
            row0 = row0 + 1
        
        Loop


End If
'regresar valor de fila
row0 = 3

'ORDENAR
    ActiveWorkbook.Worksheets(sh21).Sort.SortFields.Clear
    ActiveWorkbook.Worksheets(sh21).Sort.SortFields.Add Key:= _
        Range(Cells(row0, punteroEtv), Cells(contador, punteroEtv)), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets(sh21).Sort.SortFields.Add Key:= _
        Range(Cells(row0, punteroplaza), Cells(contador, punteroplaza)), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets(sh21).Sort.SortFields.Add Key:= _
        Range(Cells(row0, punteroIdSuc), Cells(contador, punteroIdSuc)), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets(sh21).Sort.SortFields.Add Key:= _
        Range(Cells(row0, punteroFechaServ), Cells(contador, punteroFechaServ)), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets(sh21).Sort
        .SetRange Range(Cells(row0 - 1, 1), Cells(contador, numCol))
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    

contador = Cells(row0, 1).End(xlDown).Row
'Validaci|fffd|n de datos

    Range(Cells(row0, 1), Cells(contador, 1)).Select
'    Selection = "CONFIRMADO"
    'Range(Selection, Selection.End(xlDown)).Select
    With Selection.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="CONFIRMADO, CANCELADO, PROGRAMADO"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = ""
        .ShowInput = True
        .ShowError = True
    End With
    
'LAYOUT
Call CI2_ServiciosEtvLayout

 If sinPlaneador = True Then
 
 
 End If
 
End Sub

Sub CI2_ServiciosEtvLayout()

Call VariablesGlobales
'sh21 = "ConfirmacionServicios"
Sheets(sh21).Select
Dim colx, rowx As Integer
colx = 1
rowx = 2

Cells(rowx, colx) = "Estatus Servicio"
Cells(rowx, colx + 1) = "IdPlaza"
Cells(rowx, colx + 2) = "Etv Origen"
Cells(rowx, colx + 3) = "Plaza Origen"
Cells(rowx, colx + 4) = "IdSucursal"
Cells(rowx, colx + 5) = "Sucursal"
Cells(rowx, colx + 6) = "ETV Servicio"
Cells(rowx, colx + 7) = "Fecha Planeacion"
Cells(rowx, colx + 8) = "Fecha Servicio"
Cells(rowx, colx + 9) = "Tipo Servicio"
Cells(rowx, colx + 10) = "Destino Concentracion"
Cells(rowx, colx + 11) = "IdSucursal Destino"
Cells(rowx, colx + 12) = "Sucursal Destino"
Cells(rowx, colx + 13) = "IdPlaza Destino"
Cells(rowx, colx + 14) = "Caja Destino"
Cells(rowx, colx + 15) = "Etv Destino"
Cells(rowx, colx + 16) = "Importe Servicio"
Cells(rowx, colx + 17) = "1000"
Cells(rowx, colx + 18) = "500"
Cells(rowx, colx + 19) = "200"
Cells(rowx, colx + 20) = "100"
Cells(rowx, colx + 21) = "50"
Cells(rowx, colx + 22) = "20"
Cells(rowx, colx + 23) = "Metalica"
Cells(rowx, colx + 24) = "100"
Cells(rowx, colx + 25) = "20"
Cells(rowx, colx + 26) = "10"
Cells(rowx, colx + 27) = "M5"
Cells(rowx, colx + 28) = "M2"
Cells(rowx, colx + 29) = "M1"
Cells(rowx, colx + 30) = "M0.5"
Cells(rowx, colx + 31) = "M0.2"
Cells(rowx, colx + 32) = "M0.1"
Cells(rowx, colx + 33) = "M0.05"
Cells(rowx, colx + 34) = "Envio Correo ETV"
Cells(rowx, colx + 35) = "Envio CorreoOS"
Cells(rowx, colx + 36) = "Nombre Planeador"
Cells(rowx, colx + 37) = "Fecha Operacion"
Cells(rowx, colx + 38) = "Tiempo Registro"
Cells(rowx, colx + 39) = "Usuario Registro"

Range(Cells(2, 1), Cells(2, 40)).Select
With Selection
    .HorizontalAlignment = xlCenter
    .VerticalAlignment = xlCenter
End With

With Selection.Interior
    .Pattern = xlSolid
    .PatternColorIndex = xlAutomatic
    .Color = 6095050
    .TintAndShade = 0
    .PatternTintAndShade = 0
End With
With Selection.Font
    .Name = "Verdana"
    .size = 10
    .ThemeColor = xlThemeColorDark1
    .TintAndShade = 0
    .Bold = True
End With

Range(Cells(1, 1), Cells(1, 40)).Select
With Selection.Interior
    .Pattern = xlSolid
    .PatternColorIndex = xlAutomatic
    .ThemeColor = xlThemeColorDark1
    .TintAndShade = -0.499984740745262
    .PatternTintAndShade = 0
End With

Range(Cells(1, 1), Cells(1, 40)).EntireColumn.AutoFit

End Sub



Sub CI3_DotacionesDiaAnterior()

Call VariablesGlobales

Dim fila As Long
Dim fechaValor As Date
Dim mesCombo As Integer
Dim DOTACIONES() As Variant
Dim row0Monitor As Long
Dim punteroCatSuc, row0CatSuc, totRowsCatSuc, contarCatSuc  As Integer
Dim Planeadores() As Variant
Dim numRows, row0, contador, row1, numRowsInsert As Long
Dim punteroIdSuc, punteroFechaDot, punteroImporte, punteroMarcaDot, punteroIdSucInsert, punteroInsertarDot As Integer
Dim marca As String
Dim sumaDot As Currency
Dim caso1, caso2 As Boolean
'limpiar hoja de acumulado

If ActiveSheet.Name = sh3 Then
'sh3 = "pm_PLANEACION_SERVICIOS"
caso1 = True
caso2 = False

ElseIf ActiveSheet.Name = sh12 Then
'sh12 = "Confirma_DOTACION"
caso1 = False
caso2 = True

Else
Exit Sub

End If


'columnas
punteroIdSuc = 5
punteroImporte = 17
punteroFechaDot = 9
punteroMarcaDot = 10

punteroCatSuc = 20

row0CatSuc = 2
contarCatSuc = 1

'hoja de inserci|fffd|n
punteroInsertarDot = 18
punteroIdSucInsert = 4
'servicio
marca = "DOTACION"

'fecha del d|fffd|a de operaci|fffd|n FechaOperacion

Select Case FECHA_DOTACIONES_PLANEACION.ComboMesesDot.value
Case "ENERO"
mesCombo = 1
Case "FEBRERO"
mesCombo = 2
Case "MARZO"
mesCombo = 3
Case "ABRIL"
mesCombo = 4
Case "MAYO"
mesCombo = 5
Case "JUNIO"
mesCombo = 6
Case "JULIO"
mesCombo = 7
Case "AGOSTO"
mesCombo = 8
Case "SEPTIEMBRE"
mesCombo = 9
Case "OCTUBRE"
mesCombo = 10
Case "NOVIEMBRE"
mesCombo = 11
Case "DICIEMBRE"
mesCombo = 12
End Select

Select Case FECHA_DOTACIONES_PLANEACION.mesDotacion.value
Case "ENERO"
mesCombo2 = 1
Case "FEBRERO"
mesCombo2 = 2
Case "MARZO"
mesCombo2 = 3
Case "ABRIL"
mesCombo2 = 4
Case "MAYO"
mesCombo2 = 5
Case "JUNIO"
mesCombo2 = 6
Case "JULIO"
mesCombo2 = 7
Case "AGOSTO"
mesCombo2 = 8
Case "SEPTIEMBRE"
mesCombo2 = 9
Case "OCTUBRE"
mesCombo2 = 10
Case "NOVIEMBRE"
mesCombo2 = 11
Case "DICIEMBRE"
mesCombo2 = 12
End Select




'''''''''''''''''''''''''''ARREGLO PLANEADORES'''''''''''''''''''''''''''''''
'PLANEADORES() sh4 = "Info. Gral."
Sheets(sh4).Select
totRowsCatSuc = Range(Cells(1, punteroCatSuc + 1), Cells(1, punteroCatSuc + 1).End(xlDown)).Count

ReDim Planeadores(totRowsCatSuc, 3)

For i = 1 To totRowsCatSuc
    
    'id suc
    Planeadores(i, 1) = Cells(row0CatSuc, punteroCatSuc + 1)
    'suc
    Planeadores(i, 2) = Cells(row0CatSuc, punteroCatSuc + 2)
    'planeador
    Planeadores(i, 3) = BuscarPlaneador(Cells(row0CatSuc, punteroCatSuc), 1)
    
row0CatSuc = row0CatSuc + 1

Next i

'''''''''''''''''''''''''''ARREGLO DOTACIONES'''''''''''''''''''''''''''''''

Sheets(sh6).Select
Cells.Clear

'Ubicar fecha del reporte
'FechaValor = FechaValorGeneral
'fechaValor = FechaOperacion
fechaValor = CDate(FECHA_DOTACIONES_PLANEACION.ComboDiaDot.value & "/" & mesCombo & "/" & FECHA_DOTACIONES_PLANEACION.ComboAnioDot.value)


Call CM1_c_ImportarDotaciones(fechaValor)


numRows = Range("A1000000").End(xlUp).Row
row0 = 1
contador = 1

'AJUSTAR FECHA DE OPERACI|fffd|N

fechaOperacion = CDate(FECHA_DOTACIONES_PLANEACION.diaDotacion.value & "/" & mesCombo2 & "/" & FECHA_DOTACIONES_PLANEACION.AnioDotacion.value)


ReDim DOTACIONES(numRows, 6)



Do While Cells(row0, punteroIdSuc) <> ""
       
        If Cells(row0, punteroMarcaDot) = marca And Cells(row0, punteroFechaDot) = fechaOperacion Then
            'MsgBox "id = " & Cells(row0, punteroIdSuc) & Chr(10) & "importe = " & Cells(row0, punteroImporte)
            'id suc
            DOTACIONES(contador, 1) = Cells(row0, punteroIdSuc)
            'importe
            DOTACIONES(contador, 2) = Cells(row0, punteroImporte)
            'fecha programacion
            DOTACIONES(contador, 3) = Cells(row0, punteroIdSuc + 4)
            'ETV servicio
            DOTACIONES(contador, 6) = Cells(row0, punteroIdSuc + 2)
            
            For j = 1 To UBound(Planeadores)
            
                If Cells(row0, punteroIdSuc) = Planeadores(j, 1) Then
                    'nombre sucursal
                    DOTACIONES(contador, 4) = Planeadores(j, 2)
                    'nombre planeador
                    DOTACIONES(contador, 5) = Planeadores(j, 3)
                    Exit For
                
                End If
            Next j
            
            contador = contador + 1
        End If
    
    
    row0 = row0 + 1
Loop



'''''''''''''''''''''MONITOREO SALDOS SUCURSALES'''''''''''''''''''''''''''''''''''''

'agregar informaci|fffd|n sh3 = "pm_PLANEACION_SERVICIOS"
Application.Calculation = xlManual
If caso1 = True Then

        'fila inicial
        row1 = 4
        Sheets(sh3).Select
        numRowsInsert = Range("a1000000").End(xlUp).Row
        sumaDot = 0
        
        'limpiar rango de captura
        Range(Cells(row1, punteroInsertarDot), Cells(numRowsInsert, punteroInsertarDot)).ClearContents
        
        Do While Cells(row1, punteroIdSucInsert) <> ""
        
            For i = 1 To UBound(DOTACIONES)
                
                If Cells(row1, punteroIdSucInsert) = DOTACIONES(i, 1) Then
                    'DOTACI|fffd|N PROGRAMADA
                    Cells(row1, punteroInsertarDot) = Cells(row1, punteroInsertarDot) + DOTACIONES(i, 2)
                    sumaDot = sumaDot + Cells(row1, punteroInsertarDot)
                    
                    'DOTACI|fffd|N RECIBIDA
                    Cells(row1, punteroInsertarDot + 1).FormulaR1C1 = _
                        "=IFERROR(SUMIFS(Confirma_DOTACION!C[-12],Confirma_DOTACION!C[-18],RC[-15]),0)"
'
'                    'HORA
'                    Range("T4").Select
'                    Cells(row1, punteroInsertarDot + 2).FormulaR1C1 = _
'                        "=IF(ISERROR(VLOOKUP(RC[-16],Confirma_DOTACION!C[-19]:C[-11],9,0)),"""",IF((VLOOKUP(RC[-16],Confirma_DOTACION!C[-19]:C[-11],9,0))=0,"""",VLOOKUP(RC[-16],Confirma_DOTACION!C[-19]:C[-11],9,0)))"


                End If
                
            Next i
            
            row1 = row1 + 1
            
        Loop
        
        Range("R3") = "DOTACI|fffd|N PROGRAMADA" & Chr(10) & Format(fechaOperacion, "dd mmm yy") & " " & Format(sumaDot, "$###,##0.00")


End If

Application.Calculation = xlAutomatic
'''''''''''''''''''''CONFIRMACI|fffd|N DE DOTACIONES'''''''''''''''''''''''''''''''''''''
row0Monitor = 3


        

If caso2 = True Then
'sh12 = "Confirma_DOTACION"
Sheets(sh12).Select
Cells.Clear
            
        If FECHA_DOTACIONES_PLANEACION.Planeadores.value = "Todos" Then
            
            For i = 1 To UBound(DOTACIONES)
                    'ID SUC
                    Cells(row0Monitor, 1) = DOTACIONES(i, 1)
                    'SUCURSALES
                    Cells(row0Monitor, 2) = DOTACIONES(i, 4)
                    'PLANEADOR
                    Cells(row0Monitor, 3) = DOTACIONES(i, 5)
                    'ETV SERVICIO
                    Cells(row0Monitor, 4) = DOTACIONES(i, 6)
                    'IMPORTE
                    Cells(row0Monitor, 5) = DOTACIONES(i, 2)
                    'FECHA
                    Cells(row0Monitor, 6) = DOTACIONES(i, 3)
                    
                    
                    
                    row0Monitor = row0Monitor + 1
            Next i
        
        Else
            
            
            For i = 1 To UBound(DOTACIONES)
                
                If DOTACIONES(i, 5) = FECHA_DOTACIONES_PLANEACION.Planeadores.value Then
                    'ID SUC
                    Cells(row0Monitor, 1) = DOTACIONES(i, 1)
                    'SUCURSALES
                    Cells(row0Monitor, 2) = DOTACIONES(i, 4)
                    'PLANEADOR
                    Cells(row0Monitor, 3) = DOTACIONES(i, 5)
                    'ETV SERVICIO
                    Cells(row0Monitor, 4) = DOTACIONES(i, 6)
                    'IMPORTE
                    Cells(row0Monitor, 5) = DOTACIONES(i, 2)
                    'FECHA
                    Cells(row0Monitor, 6) = DOTACIONES(i, 3)
                    
                    
                    row0Monitor = row0Monitor + 1
                
                End If
                
            Next i
            
        End If
            
            

        
        'layout
        Cells(2, 1) = "Id Sucursal"
        Cells(2, 2) = "Sucursal"
        Cells(2, 3) = "Planeador"
        Cells(2, 4) = "ETV Servicio"
        Cells(2, 5) = "Dotaci|fffd|n Programada"
        Cells(2, 6) = "Fecha Programada"
        Cells(2, 7) = "Dotaci|fffd|n Recibida"
        Cells(2, 8) = "Fecha Recepci|fffd|n"
        Cells(2, 9) = "Hora Recepci|fffd|n"
        Cells(2, 10) = "Fecha Registro Sistema"
        Cells(2, 11) = "Hora Registro Sistema"
        Cells(2, 12) = "Diferencia Dotaci|fffd|n"
        Cells(2, 13) = "Usuario Registro"
        Cells(2, 14) = "Recordatorio Sucursal 1"
        Cells(2, 15) = "Hora Recordatorio 1"
        Cells(2, 16) = "Comentario Recordatorio 1"
        Cells(2, 17) = "Recordatorio Sucursal 2"
        Cells(2, 18) = "Hora Recordatorio 2"
        Cells(2, 19) = "Comentario Recordatorio 2"
        Cells(2, 20) = "Recordatorio Sucursal 3"
        Cells(2, 21) = "Hora Recordatorio 3"
        Cells(2, 22) = "Comentario Recordatorio 3"
        Cells(2, 23) = "Recordatorio Sucursal 4"
        Cells(2, 24) = "Hora Recordatorio 4"
        Cells(2, 25) = "Comentario Recordatorio 4"
        
'FORMATO
    Call CI3_1FormatoDotacionesDiaAnterior
End If


    Call DeleteQueryImportaciones


End Sub


Sub CI3_1FormatoDotacionesDiaAnterior()

Dim row0, col0 As Integer
Dim totRows, totCols As Long
Dim punteroSec1, punteroSec2, punteroSec3, punteroSec4, punteroSec5 As Integer
row0 = 2
col0 = 1

punteroSec1 = 3
punteroSec2 = 7
punteroSec3 = 14

totRows = Range("A65000").End(xlUp).Row
totCols = Cells(row0, 1).End(xlToRight).Column

If totRows = row0 Then
totRows = row0 + 1

End If


Cells.ClearFormats

'Encabezados
Range(Cells(row0, col0), Cells(row0, punteroSec1 - 1)).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.349986266670736
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    Selection.Font.Bold = True

    
'Encabezados tabla SECCI|fffd|N 1
Range(Cells(row0, punteroSec1), Cells(row0, punteroSec2 - 1)).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 6299648
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    Selection.Font.Bold = True



    
'Encabezados tabla SECCI|fffd|N 2
Range(Cells(row0, punteroSec2), Cells(row0, punteroSec3 - 1)).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 192
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Selection.Font.Bold = True
    
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    
'Encabezados tabla SECCI|fffd|N 3
Range(Cells(row0, punteroSec3), Cells(row0, totCols)).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 49407
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    Selection.Font.Bold = True
    


''''''''''''''''''''FORMATO COLUMNAS'''''''''''''''''''''''''''''''''
'id centrado
    Range(Cells(row0 + 1, col0), Cells(totRows, col0)).Select
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With

'general a la izquierda
    Range(Cells(row0 + 1, col0 + 1), Cells(totRows, col0 + 1)).Select
    
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    
    Range(Cells(row0 + 1, col0 + 11), Cells(totRows, col0 + 22)).Select
    
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    
'moneda
    Range(Cells(row0 + 1, col0 + 2), Cells(totRows, col0 + 11)).Select
    
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    Selection.Style = "Currency"
    
    
'fecha
    Range(Cells(row0 + 1, col0 + 5), Cells(totRows, col0 + 5)).Select
    
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    Selection.NumberFormat = "m/d/yyyy"

    Range(Cells(row0 + 1, col0 + 7), Cells(totRows, col0 + 7)).Select
    
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    Selection.NumberFormat = "m/d/yyyy"
    
    Range(Cells(row0 + 1, col0 + 9), Cells(totRows, col0 + 9)).Select
    
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    Selection.NumberFormat = "m/d/yyyy"
    
'hora
    Range(Cells(row0 + 1, col0 + 8), Cells(totRows, col0 + 8)).Select
    Selection.NumberFormat = "[$-x-systime]h:mm:ss AM/PM"
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    
    Range(Cells(row0 + 1, col0 + 10), Cells(totRows, col0 + 10)).Select
    Selection.NumberFormat = "[$-x-systime]h:mm:ss AM/PM"
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    
    Range(Cells(row0 + 1, col0 + 14), Cells(totRows, col0 + 14)).Select
    Selection.NumberFormat = "[$-x-systime]h:mm:ss AM/PM"
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    
    Range(Cells(row0 + 1, col0 + 17), Cells(totRows, col0 + 17)).Select
    Selection.NumberFormat = "[$-x-systime]h:mm:ss AM/PM"
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    
    Range(Cells(row0 + 1, col0 + 20), Cells(totRows, col0 + 20)).Select
    Selection.NumberFormat = "[$-x-systime]h:mm:ss AM/PM"
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    
    Range(Cells(row0 + 1, col0 + 23), Cells(totRows, col0 + 23)).Select
    Selection.NumberFormat = "[$-x-systime]h:mm:ss AM/PM"
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    
    
    'Tama|fffd|o columnas
    Columns("A:A").Select
    Selection.ColumnWidth = 7.1
    Columns("B:B").ColumnWidth = 20
    Range("C:C,D:D").Select
    Selection.ColumnWidth = 10.3
    Range("E:E,G:G,L:L, H:H").Select
    Selection.ColumnWidth = 15.3
    Range("F:F,J:J").Select
    Selection.ColumnWidth = 10.7

    Range("N:N,Q:Q,T:T,W:W").Select
    Selection.ColumnWidth = 10.6

    Range("O:O,R:R,U:U,X:X").Select
    Selection.ColumnWidth = 10.7

    Range("P:P,S:S,V:V,Y:Y").Select
    Selection.ColumnWidth = 20.1
    
    'FORMULAS DE SUMAS
       Range("E1").Select
    ActiveCell.FormulaR1C1 = _
        "=""TOTAL DOTACIONES"" & CHAR(10) & ""Num = "" & TEXT(COUNTA(R[" & row0 & "]C:R[" & totRows - 1 & "]C),""#"") & CHAR(10) & ""Importe = "" & TEXT(SUM(R[" & row0 & "]C:R[" & totRows - 1 & "]C),""$###,##0.00"")"
    Range("G1").Select
    ActiveCell.FormulaR1C1 = _
        "=""RECIBIDAS"" & CHAR(10) &""Num = "" & TEXT(COUNTA(R[" & row0 & "]C:R[" & totRows - 1 & "]C),""#"") & CHAR(10) & ""Importe = "" & TEXT(SUM(R[" & row0 & "]C:R[" & totRows - 1 & "]C),""$###,##0.00"")"
    Range("H1").Select
    ActiveCell.FormulaR1C1 = _
        "=""PENDIENTES"" & CHAR(10) &""Num = "" & TEXT(COUNTA(R[" & row0 & "]C[-3]:R[" & totRows - 1 & "]C[-3])-COUNTA(R[" & row0 & "]C[-1]:R[" & totRows - 1 & "]C[-1]),""#"") & CHAR(10) & ""Importe = "" & TEXT(SUM(R[" & row0 & "]C[-3]:R[" & totRows - 1 & "]C[-3])-SUM(R[" & row0 & "]C[-1]:R[" & totRows - 1 & "]C[-1]),""$###,##0.00"")"

    Range("E1,G1,H1").Select
       With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    
End Sub


Attribute VB_Name = "CJ_TRASPASOS_CAJAS"
''''''''''''''''''''''''''''SALIDAS DE CAJA GENERAL'''''''''''''''''''''''''''''''''''
Sub CJ0_MovimientosDiaActual()
'importar en la hoja de entradas de traspasos todos los txt que haya registrados en el d|fffd|a
Call VariablesGlobales

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta, carpeta As String

'limpiar hoja
Sheets(sh16).Select
Cells.ClearContents


'Ubicar fecha del reporte
fechaValor = Date

DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"

carpeta = UnidadRuta & "\" & fechaCarpeta

'MsgBox Carpeta & "\" & "*Traspasos.txt"

'
'MsgBox sh16
'MsgBox "Carpeta " & Carpeta

'limpiar hoja
Sheets(sh16).Select
Cells.ClearContents


On Error Resume Next

'abrir archivos de carpeta indicada
ChDrive (UnidadRuta)
ChDir (carpeta)
archi = Dir(carpeta & "\" & "*Traspasos Salida.txt")
        

'si no hay archivos finalizar
        If archi = "" Then
        MsgBox "NO HAY INFORMACI|fffd|N DE MOVIMIENTOS DE TRASPASO"
        Exit Sub
        End If

rango = "A2"

  Do While archi <> ""

    
    
     With ActiveSheet.QueryTables.Add(Connection:="TEXT;" & _
         carpeta & "\" & archi, Destination:=Range(rango)) '<===========
        .Name = archi
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierNone
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileOtherDelimiter = "|"
        .TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    End With
    
    
    fila = Range("A" & Rows.Count).End(xlUp).Row + 1 '<====================
     rango = Range("A" & fila).Address '<======================
    
    'Otras Opciones
    'milibro = ActiveWorkbook.Name
     archi = Dir()
  Loop '<========================================

On Error GoTo 0

'encabezados
Cells(1, 1) = shMov1
Cells(1, 2) = shMov2
Cells(1, 3) = shMov3
Cells(1, 4) = shMov4
Cells(1, 5) = shMov5
Cells(1, 6) = shMov6
Cells(1, 7) = shMov7
Cells(1, 8) = shMov8
Cells(1, 9) = shMov9
Cells(1, 10) = shMov10
Cells(1, 11) = shMov11
Cells(1, 12) = shMov12
Cells(1, 13) = shMov13
Cells(1, 14) = shMov14
Cells(1, 15) = shMov15
Cells(1, 16) = shMov16
Cells(1, 17) = shMov17
Cells(1, 18) = shMov18
Cells(1, 19) = shMov19
Cells(1, 20) = shMov20
Cells(1, 21) = shMov21
Cells(1, 22) = shMov22
Cells(1, 23) = shMov23
Cells(1, 24) = shMov24
Cells(1, 25) = shMov25
Cells(1, 26) = shMov26
Cells(1, 27) = shMov27
Cells(1, 28) = shMov28
Cells(1, 29) = shMov29
Cells(1, 30) = shMov30
Cells(1, 31) = shMov31
Cells(1, 32) = shMov32
Cells(1, 33) = shMov33
Cells(1, 34) = shMov34
Cells(1, 35) = shMov35
Cells(1, 36) = shMov36
Cells(1, 37) = shMov37

Call CJ1_AgregarIdDestinoTraspasos

'limpiar conexiones de importaciones anteriores
    Call DeleteQueryImportaciones
    
'regresar a hoja de planeaci|fffd|n de cajas
Sheets(sh1).Select

End Sub


Sub CJ1_AgregarIdDestinoTraspasos()
Call VariablesGlobales

Dim i As Double
Dim j As Double
Dim marca, Carburante, Comunidad As String
'Descativamos actualizacion de pantalla
Application.ScreenUpdating = False
'Refrescamos la columna de total por cada b|fffd|squeda que hagamos
With Worksheets(sh16)

total = Application.CountA(.Range("D:D"))

'If Total > 1 Then .Range("D2:D" & Total).ClearContents

End With
'Definimos rango de tablabase
fin = Application.CountA(Worksheets(sh4).Range("R:R"))
'Definimos rango de datos
final = Application.CountA(Worksheets(sh16).Range("A:A"))
With Worksheets(sh16)
'Iniciamos el bucle principal en tabla Datos
For i = 2 To final
'Definimos cada uno de los Items por los que vamos a buscar
etv = Sheets(sh16).Cells(i, 8)
plaza = Sheets(sh16).Cells(i, 7)
'Segundo bucle en tablabase por cada item del primer bucle
'MsgBox "Final " & Final
'MsgBox "fin " & fin
'MsgBox Etv
'MsgBox Plaza

For j = 2 To fin
'Buscamos con un condicional en tablabase cada una de las variables definidas
If etv = Sheets(sh4).Cells(j, 18) And _
plaza = Sheets(sh4).Cells(j, 19) Then
'Si encontramos coincidencia, igualamos celdas con el valor de la columna 4
Sheets(sh16).Cells(i, 6) = Sheets(sh4).Cells(j, 17)
Exit For
End If
Next
Next
End With
Application.ScreenUpdating = True

End Sub



Sub CJ2_AgregarIdDestinoTraspasosSalida()
Call VariablesGlobales

Dim i As Double
Dim j As Double
Dim marca, Carburante, Comunidad As String
'Descativamos actualizacion de pantalla
Application.ScreenUpdating = False
'Refrescamos la columna de total por cada b|fffd|squeda que hagamos
With Worksheets(sh13)

total = Application.CountA(.Range("D:D"))

'If Total > 1 Then .Range("D2:D" & Total).ClearContents

End With
'Definimos rango de tablabase
fin = Application.CountA(Worksheets(sh4).Range("R:R"))
'Definimos rango de datos
final = Application.CountA(Worksheets(sh13).Range("A:A"))
With Worksheets(sh13)
'Iniciamos el bucle principal en tabla Datos
For i = 2 To final
'Definimos cada uno de los Items por los que vamos a buscar
etv = Sheets(sh13).Cells(i, 8)
plaza = Sheets(sh13).Cells(i, 7)
'Segundo bucle en tablabase por cada item del primer bucle
'MsgBox "Final " & Final
'MsgBox "fin " & fin
'MsgBox Etv
'MsgBox Plaza

For j = 2 To fin
'Buscamos con un condicional en tablabase cada una de las variables definidas
If etv = Sheets(sh4).Cells(j, 18) And _
plaza = Sheets(sh4).Cells(j, 19) Then
'Si encontramos coincidencia, igualamos celdas con el valor de la columna 4
Sheets(sh13).Cells(i, 6) = Sheets(sh4).Cells(j, 17)
Exit For
End If
Next
Next
End With
Application.ScreenUpdating = True

End Sub







''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Sub CJ3_ArchivosTxtDifFechasTraslado()

Call VariablesGlobales
'sh13 = "MovimientosSalida"
Sheets(sh13).Select

''''''''''''''''''''''''''FECHAS DE TRASLADO Y CARPETAS PARA TXT''''''''''''''''''''''''''''''''''''''''''
Dim rango As Range
'Dim MyArray() As Date
Dim size As Long
Dim celdas As Object
Dim TotDat, RowDat, ColDat As Long

'columna de la fecha de traspaso
ColDat = 1
RowDat = 1
TotDat = Range(Cells(RowDat, ColDat), Cells(RowDat, ColDat).End(xlDown)).Count

''''''''''''''''''''''''''''''''''TXT DE TRASLADOS''''''''''''''''''''''''''''''''''''''''''''



'agregar id a caja de recepci|fffd|n
Call CJ2_AgregarIdDestinoTraspasosSalida

Dim NombreArchivo, RutaArchivo As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String
Dim X, Y As Long


For c = 1 To size

'MsgBox "fecha inicio for: " & fechaValor

            'fechaValor = Date
            X = 1
            'ciclo por fecha de registro
            Do While Cells(X, 1) <> ""
                
                            'Ubicar fecha del reporte
                            fechaValor = MyArray(c)
                            
                            
                            DayValor = Day(fechaValor)
                            MonthValor = Month(fechaValor)
                            YearValor = Year(fechaValor)
                            
                            'A|fffd|o etiqueta
                            YearLabel = YearValor
                            
                            'D|fffd|a etiqueta
                            If DayValor < 10 Then
                                DayLabel = "0" & DayValor
                            Else
                                DayLabel = DayValor
                            End If
                            
                            'nombre mes
                            If MonthValor = 1 Then
                            NombreMes = Meses1
                            ElseIf MonthValor = 2 Then
                            NombreMes = Meses2
                            ElseIf MonthValor = 3 Then
                            NombreMes = Meses3
                            ElseIf MonthValor = 4 Then
                            NombreMes = Meses4
                            ElseIf MonthValor = 5 Then
                            NombreMes = Meses5
                            ElseIf MonthValor = 6 Then
                            NombreMes = Meses6
                            ElseIf MonthValor = 7 Then
                            NombreMes = Meses7
                            ElseIf MonthValor = 8 Then
                            NombreMes = Meses8
                            ElseIf MonthValor = 9 Then
                            NombreMes = Meses9
                            ElseIf MonthValor = 10 Then
                            NombreMes = Meses10
                            ElseIf MonthValor = 11 Then
                            NombreMes = Meses11
                            ElseIf MonthValor = 12 Then
                            NombreMes = Meses12
                            End If
                            
                            'Mes etiqueta
                            If MonthValor < 10 Then
                                MonthLabel = "0" & MonthValor
                            Else
                                MonthLabel = MonthValor
                            End If
                            
                            
                            
                            UnidadRuta = UnidadAsignada & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"
                            fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"
                            
                            RutaArchivo = UnidadRuta & "\" & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos" & ".txt"
                            
                            
                            
                            
                            Sheets(sh13).Select
                            

'''''''''''''''''OPTIMIZACI|fffd|N ''''''''''''''''''''''''''


'CREAR ARCHIVO CON RANGO DE EXCEL
Dim Rng As Range
Dim WorkRng As Range
Dim xFile As Variant
Dim xFileString As String
On Error Resume Next

'Concatenar contenido
    'inicio de rango
    MiLibroMacro = ActiveWorkbook.Name

    Range("A1").Select
    'quitar filtro
    If Worksheets(sh13).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        Worksheets(sh13).AutoFilterMode = False
    Else
        'MsgBox "no hay filtro"
    End If
    
    Call ConcatenarRangoPipes
    
    Windows(MiLibroMacro).Activate
    Sheets(sh13).Select
    
    
    'rango para copiar en txt
    nColumnas = Range("A1").End(xlToRight).Column
    
    If Range("B4") = "" And Range("B5") = "" Then
    NFilas = 3
    
    ElseIf (Range("B1", Range("B1").End(xlDown)).Cells.Count) > 10000 Then
    NFilas = 3
    
    Else
    NFilas = (Range("B1", Range("B1").End(xlDown)).Cells.Count)
    
    End If
    
    Range(Cells(1, nColumnas), Cells(NFilas, nColumnas)).Select


'guardar en txt
Set WorkRng = Application.Selection
Application.ActiveSheet.Copy
Application.ActiveSheet.Cells.Clear
WorkRng.Copy Application.ActiveSheet.Range("A1")
Set xFile = CreateObject("Scripting.FileSystemObject")
'xFileString = Application.GetSaveAsFilename("", filefilter:="Comma Separated Text (*.CSV), *.CSV")
'xFileString = Application.GetSaveAsFilename(NombreArchivo, filefilter:="Text (*.TXT), *.TXT")
'Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.Close True




'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then
    RutaArchivoLocal = RutaLocal & NombreCarpetaCompartida & "\" & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt\" _
    & fechaCarpeta & "\" & UsuarioWin & " " & DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Salida" & ".txt"


End If

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

FileCopy RutaArchivo, RutaArchivoLocal

End If


Windows(MiLibroMacro).Activate
    Sheets(sh13).Select
    Columns(nColumnas).ClearContents
    Range("A3").Select



'                            Set Ht = ActiveSheet
'                            Set obj = New FileSystemObject
'                            Set tx = obj.CreateTextFile(RutaArchivo)
'
'                            nColumnas = Ht.Range("A1", Ht.Range("A1").End(xlToRight)).Cells.Count
'
'                            If (Ht.Range("A1", Ht.Range("A1").End(xlDown)).Cells.Count) > 1000 Then
'                            NFilas = 1
'                            Else
'                            NFilas = (Ht.Range("A1", Ht.Range("A1").End(xlDown)).Cells.Count)
'                            End If
'
'                            For d = 1 To NFilas
'
'                                'evaluar la fecha
'                                If Ht.Cells(d, 29).value = FechaValor Then
'
'                                        For j = 1 To nColumnas
'                                            tx.Write Ht.Cells(d, j).value
'                                            If j < nColumnas Then tx.Write "|"
'                                            If j = nColumnas And i = 1 Then tx.Write "|FechaOperacion|FechaRegistro|UsuarioRegistro|PlaneadorAsignado"
'                                            If j = nColumnas And i > 1 Then tx.Write "|" & FechaOperacion & "|" & Now() & "|" & UsuarioWindows & "|" & NombrePlaneador
'                                        Next j
'
'                                        tx.WriteLine
'
'                                End If
                                
'                                Next d
'
'                            tx.Close
'
'                            Set obj = Nothing
'
'            x = x + 1
'
'            Loop
'
'Next c

End Sub

Attribute VB_Name = "CK_COMPRAS"

Sub CK1_AgregarIdCompra()
Call VariablesGlobales

Dim i As Double
Dim j As Double
Dim marca, Carburante, Comunidad As String
'Descativamos actualizacion de pantalla
Application.ScreenUpdating = False
'Refrescamos la columna de total por cada b|fffd|squeda que hagamos sh17 = "Registro COMPRAS"

'''''''arreglo medios de compra''''
'sh4 = "Info. Gral."

Medio = Sheets(sh4).Select
Dim X, Y As Integer
'fila de inicio
X = 2
'columna de inicio
Y = 38

Dim ArraySize As String
'Hoja Info. Gral. sh4 = "Info. Gral."
Sheets(sh4).Select
If Range("AL2") = "" And Range("AL3") = "" Then
ArraySize = 1
ElseIf Range(("AL2"), Range("AL2").End(xlDown)).Count > 1000 Then
ArraySize = 1
Else
ArraySize = Range(("AL2"), Range("AL2").End(xlDown)).Count
End If

Dim mediosCompra() As String
ReDim mediosCompra(ArraySize, 5)

For i = 1 To ArraySize
    
    For j = 1 To 5
        
         
        Select Case j
        Case 1
        mediosCompra(i, j) = Cells(X, Y).value
        
        Case 2
        mediosCompra(i, j) = Cells(X, Y + 1).value
        
        Case 3
        mediosCompra(i, j) = Cells(X, Y + 2).value
                
        Case 4
        mediosCompra(i, j) = Cells(X, Y + 3).value
       
        Case 5
        mediosCompra(i, j) = Cells(X, Y + 4).value
        
        End Select
    
       
    Next j
     
     
     X = X + 1

    
Next i


'sh17 = "Registro COMPRAS"
With Worksheets(sh17)

total = Application.CountA(.Range("D:D"))


'If Total > 1 Then .Range("D2:D" & Total).ClearContents

End With
'Definimos rango de tablabase sh4 = "CatalogoPlazas"
fin = Application.CountA(Worksheets(sh4).Range("R:R"))


'Definimos rango de datos
final = Application.CountA(Worksheets(sh17).Range("A:A")) + 5


'End If


With Worksheets(sh17)
'Iniciamos el bucle principal en tabla Datos
For i = 6 To final
'Definimos cada uno de los Items por los que vamos a buscar
'Etv = Sheets(sh17).Cells(i, 4)
plaza = Sheets(sh17).Cells(i, 3)

    For j = 1 To ArraySize
        If Sheets(sh17).Cells(i, 2) = mediosCompra(j, 1) Then
          prefijo = mediosCompra(j, 5)
        End If
    Next j
'Segundo bucle en tablabase por cada item del primer bucle
'MsgBox "Final " & Final
'MsgBox "fin " & fin
'MsgBox Etv
'MsgBox Plaza

For j = 2 To fin
'Buscamos con un condicional en tablabase cada una de las variables definidas
If plaza = Sheets(sh4).Cells(j, 19) Then  'Etv = Sheets(sh4).Cells(j, 18) And _ 'And Medio = Sheets(sh4).Cells(j, 20)
'Si encontramos coincidencia, igualamos celdas con el valor de la columna 4
Sheets(sh17).Cells(i, 5) = prefijo & Sheets(sh4).Cells(j, 17)
Exit For
End If
Next
Next
End With
Application.ScreenUpdating = True

End Sub



Public Sub CK2_AgregarColoresEstatusCompras()

Call VariablesGlobales

Dim celda1, celda2, celda3, celda4, celda5, celda6, celda7 As Range
Dim C1, C2, C3, C4, C5, C6, C7 As Long
Dim RC1, RC2, RC3, RC4, RC5, RC6, RC7 As Long
Dim GC1, GC2, GC3, GC4, GC5, GC6, GC7 As Long
Dim BC1, BC2, BC3, BC4, BC5, BC6, BC7 As Long
Dim AcSh, ShPr As String
Dim NoColumnas, NFilas1, ColuAct, Y As Long

'Hoja con cat|fffd|logo de colores

Set celda1 = Sheets(sh17).Range("F2")
C1 = celda1.Interior.Color
RC1 = C1 Mod 256
GC1 = C1 \ 256 Mod 256
BC1 = C1 \ 65536 Mod 256

Set celda2 = Sheets(sh17).Range("H2")
C2 = celda2.Interior.Color
RC2 = C2 Mod 256
GC2 = C2 \ 256 Mod 256
BC2 = C2 \ 65536 Mod 256

Set celda3 = Sheets(sh17).Range("J2")
C3 = celda3.Interior.Color
RC3 = C3 Mod 256
GC3 = C3 \ 256 Mod 256
BC3 = C3 \ 65536 Mod 256

Set celda4 = Sheets(sh17).Range("E2")
C4 = celda4.Interior.Color
RC4 = C4 Mod 256
GC4 = C4 \ 256 Mod 256
BC4 = C4 \ 65536 Mod 256

Estatus1 = Sheets(sh17).Range("F2").value
Estatus2 = Sheets(sh17).Range("H2").value
Estatus3 = Sheets(sh17).Range("J2").value


'contar las columnas con informaci|fffd|n
Sheets(sh17).Select
NoColumnas = Range("A5", Range("A5").End(xlToRight)).Count
'NFilas1 = Columns(2).SpecialCells(xlCellTypeConstants, xlTextValues).Count


'buscar columna con tipo riesgo
Cells.Find(What:="Estatus Compra", After:=ActiveCell, LookIn:=xlFormulas, _
        LookAt:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
        MatchCase:=False, SearchFormat:=False).Activate

ColuAct = ActiveCell.Column
Y = 6

Do While Cells(Y, 1) <> ""

If Cells(Y, ColuAct) = Estatus1 Then
Range(Cells(Y, 1), Cells(Y, NoColumnas)).Interior.Color = RGB(RC1, GC1, BC1)

ElseIf Cells(Y, ColuAct) = Estatus2 Then
Range(Cells(Y, 1), Cells(Y, NoColumnas)).Interior.Color = RGB(RC2, GC2, BC2)

ElseIf Cells(Y, ColuAct) = Estatus3 Then
Range(Cells(Y, 1), Cells(Y, NoColumnas)).Interior.Color = RGB(RC3, GC3, BC3)


Else
Range(Cells(Y, 1), Cells(Y, NoColumnas)).Interior.Color = RGB(RC4, GC4, BC4)

End If

Y = Y + 1
Loop


End Sub



Public Sub CK3_LimpiarCapturaCompras()
Call VariablesGlobales
'LIMPIAR CAPTURA DE COMPRAS
'sh17 = "Registro COMPRAS"
Sheets(sh17).Select

Range("A6:AK10000").Clear

'ELIMINAR REGISTROS DE COMPRAS EN SERVICIOS
'sh22 = "ProgramacionServicios"
Sheets(sh22).Select
Dim marcaCol, iniRow, iniCol As Long
marcaCol = 10
iniRow = 2
iniCol = 1

Do While Cells(iniRow, iniCol) <> ""
    If Cells(iniRow, marcaCol) = "TRASLADO COMPRA" Then
        Cells(iniRow, marcaCol).Activate
        ActiveCell.EntireRow.Select
       Selection.Delete Shift:=xlUp
       iniRow = iniRow
    
    
    Else
    iniRow = iniRow + 1

    End If

Loop

'regresar a hoja de compras

Sheets(sh17).Select
End Sub


Attribute VB_Name = "CL_PLAZAS_X_PLANEADOR"
Sub CL0_AsignacionPorPlaneador()

Application.ScreenUpdating = False
Application.EnableEvents = False

'quitar los filtros de todas las hojas sh19 = "PARAMETROS"
Call QuitarFiltrosTodasHojas

Call VariablesGlobales


'CATALOGO ASIGNADO POR PLANEADOR
Call CL1_PlazasPorPlaneador

Call CP_1FormulasConciliacionArqueos
Call CP_2FormulasPlaneacionCajas
Call CP_3FormulasServicios

'Call DA5_FormatosPapeles

Sheets(sh19).Select

MsgBox "Lista de Plazas y Sucursales actualizada"

Application.ScreenUpdating = True
Application.EnableEvents = True

End Sub

Sub CL1_PlazasPorPlaneador()

''''''''''''''''''''''''ARREGLO DE LAS PLAZAS'''''''''''''''''''''''''''''''''''
Call VariablesGlobales
Dim ArraySize As String
Dim Usuario As String


''''''''''''''''Limpiar hojas de registro de lista ''''''''''''''''''''
'sh15 = "am_CONCILIAR_ARQUEOS"
Sheets(sh15).Select

LstRw = Range("a1").SpecialCells(xlCellTypeLastCell).Row
            '& LstRw                '& LstRw
Range("a4:cc10000", Range("a4:cc10000")).ClearContents

'sh1 = "pm_PLANEACION_CAJAS"
Sheets(sh1).Select

LstRw = Range("a1").SpecialCells(xlCellTypeLastCell).Row


Range("a4:ef10000", Range("a4:ef10000")).ClearContents
'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select

LstRw = Range("a1").SpecialCells(xlCellTypeLastCell).Row

Range("A4:BK10000").ClearContents


'Hoja Info. Gral. sh4 = "Info. Gral."
Sheets(sh4).Select
If Range("AA2") = "" And Range("AA3") = "" Then
ArraySize = 1
ElseIf Range(("AA2"), Range("AA2").End(xlDown)).Count > 1000 Then
ArraySize = 1
Else
ArraySize = Range(("AA2"), Range("AA2").End(xlDown)).Count
End If


Dim X, Y, i, j As Integer
'fila de inicio
X = 2
'columna de inicio
Y = 24


Dim Plazas() As String
ReDim Plazas(ArraySize, 4)

For i = 1 To ArraySize
    
    For j = 1 To 4
        
         
        Select Case j
        Case 1
        Plazas(i, j) = Cells(X, Y).value
        
        Case 2
        Plazas(i, j) = Cells(X, Y + 1).value
        
        Case 3
        Plazas(i, j) = Cells(X, Y + 2).value
                
        Case 4
        Plazas(i, j) = Cells(X, Y + 3).value
       
        End Select
    
       
    Next j
     
     
     X = X + 1

    
Next i


''''''''''''''''''''''''ARREGLO DE LOS MEDIOS DE PAGO'''''''''''''''''''''''''''''''''''
Call VariablesGlobales
Dim ArraySize2 As String


'Hoja Info. Gral. sh4 = "Info. Gral."
Sheets(sh4).Select
If Range("AL2") = "" And Range("AL3") = "" Then
ArraySize2 = 1
ElseIf Range(("AL2"), Range("AL2").End(xlDown)).Count > 1000 Then
ArraySize2 = 1
Else
ArraySize2 = Range(("AL2"), Range("AL2").End(xlDown)).Count
End If


Dim p, q, r, s As Integer
'fila de inicio
r = 2
'columna de inicio
s = 38


Dim medios() As String
ReDim medios(ArraySize2, 5)

For p = 1 To ArraySize2
    
    For q = 1 To 5
        
         
        Select Case q
        Case 1
        medios(p, q) = Cells(r, s).value
        
        Case 2
        medios(p, q) = Cells(r, s + 1).value
        
        Case 3
        medios(p, q) = Cells(r, s + 2).value
                   
        Case 4
        medios(p, q) = Cells(r, s + 3).value
        
        Case 5
        medios(p, q) = Cells(r, s + 4).value
        
        End Select
    
       
    Next q
     
     
     r = r + 1

    
Next p



''''''''''''''''''''''''ARREGLO DE LAS SUCURSALES'''''''''''''''''''''''''''''''''''
Call VariablesGlobales
Dim ArraySize3 As String


'Hoja Info. Gral. sh4 = "Info. Gral."
Sheets(sh4).Select
If Range("V2") = "" And Range("V3") = "" Then
ArraySize3 = 1
ElseIf Range(("V2"), Range("V2").End(xlDown)).Count > 1000 Then
ArraySize3 = 1
Else
ArraySize3 = Range(("V2"), Range("V2").End(xlDown)).Count
End If


Dim e, f, g, h As Integer
'fila de inicio
g = 2
'columna de inicio
h = 17


Dim SUCURSALES() As String
ReDim SUCURSALES(ArraySize3, 6)

For e = 1 To ArraySize3
    
    For f = 1 To 6
        
         
        Select Case f
        Case 1
        SUCURSALES(e, f) = Cells(g, h).value
        
        Case 2
        SUCURSALES(e, f) = Cells(g, h + 1).value
        
        Case 3
        SUCURSALES(e, f) = Cells(g, h + 2).value
                   
        Case 4
        SUCURSALES(e, f) = Cells(g, h + 3).value
        
        Case 5
        SUCURSALES(e, f) = Cells(g, h + 4).value
        
        Case 6
        SUCURSALES(e, f) = Cells(g, h + 5).value
        
        End Select
    
       
    Next f
     
     
     g = g + 1

    
Next e




'''''''''''''''''Agregar plazas por usuario''''''''''''''''''''''''
'Usuario
'sh19 = "PARAMETROS"
Sheets(sh19).Select
NombreUsuario = Range("B2").value
Usuario = DATOS_USUARIO_WINDOWS(Range("B2").value, 2)







'''''''''''''''''Registrar plazas en hoja de conciliaci|fffd|n y planeaci|fffd|n cajas''''''''''''''''
'sh15 = "am_CONCILIAR_ARQUEOS"


Dim k, a, b As Long
'a= fila de inicio de la hoja para registrar
a = 4
b = 3

If NombreUsuario <> "Todos" Then

            For k = 1 To ArraySize
                
                If Plazas(k, 2) = Usuario Then
                
                    
                    For T = 1 To ArraySize2
                    'Hoja de conciliaci|fffd|n
                    Sheets(sh15).Select
                    
                        Cells(a, b - 2) = medios(T, 1)
                        Cells(a, b - 1) = medios(T, 5) & Plazas(k, 1)
                        Cells(a, b) = Plazas(k, 3)
                        Cells(a, b + 1) = Plazas(k, 4)
                      
                    Sheets(sh1).Select
                    
                        Cells(a, b - 2) = medios(T, 1)
                        Cells(a, b - 1) = medios(T, 5) & Plazas(k, 1)
                        Cells(a, b) = Plazas(k, 3)
                        Cells(a, b + 1) = Plazas(k, 4)
                        
                        'INCREMENTO Y REGISTRO DE TOTALES
                        If T < ArraySize2 Then
                        a = a + 1
                        
                        ElseIf T = ArraySize2 Then
                        
                        Sheets(sh15).Select
                    
                        Cells(a + 1, b - 2) = "TOTALES"
                        Cells(a + 1, b - 1) = Plazas(k, 1)
                        Cells(a + 1, b) = Plazas(k, 3)
                        Cells(a + 1, b + 1) = Plazas(k, 4)
                      
                        Sheets(sh1).Select
                    
                        Cells(a + 1, b - 2) = "TOTALES"
                        Cells(a + 1, b - 1) = Plazas(k, 1)
                        Cells(a + 1, b) = Plazas(k, 3)
                        Cells(a + 1, b + 1) = Plazas(k, 4)
                        
                        a = a + 2
                        
                        End If
                        
                        
                    Next T
                
                End If
                
            Next k

Else

            For k = 1 To ArraySize
                
                
                    
                    For T = 1 To ArraySize2
                    'Hoja de conciliaci|fffd|n
                    Sheets(sh15).Select
                        Cells(a, b - 2) = medios(T, 1)
                        Cells(a, b - 1) = medios(T, 5) & Plazas(k, 1)
                        Cells(a, b) = Plazas(k, 3)
                        Cells(a, b + 1) = Plazas(k, 4)
                    
                    Sheets(sh1).Select
                        Cells(a, b - 2) = medios(T, 1)
                        Cells(a, b - 1) = medios(T, 5) & Plazas(k, 1)
                        Cells(a, b) = Plazas(k, 3)
                        Cells(a, b + 1) = Plazas(k, 4)
                        Cells(a, b + 2) = Plazas(k, 1)
                        
                        'INCREMENTO Y REGISTRO DE TOTALES
                        If T < ArraySize2 Then
                        a = a + 1
                        
                        ElseIf T = ArraySize2 Then
                        
                        Sheets(sh15).Select
                    
                        Cells(a + 1, b - 2) = "TOTALES"
                        Cells(a + 1, b - 1) = Plazas(k, 1)
                        Cells(a + 1, b) = Plazas(k, 3)
                        Cells(a + 1, b + 1) = Plazas(k, 4)
                      
                        Sheets(sh1).Select
                    
                        Cells(a + 1, b - 2) = "TOTALES"
                        Cells(a + 1, b - 1) = Plazas(k, 1)
                        Cells(a + 1, b) = Plazas(k, 3)
                        Cells(a + 1, b + 1) = Plazas(k, 4)
                        
                        a = a + 2
                        
                        End If
                        
                    Next T
    
            Next k
End If



''''''''''''Hoja de sucursales planeaci|fffd|n servicios

c = 4
d = 1

If NombreUsuario <> "Todos" Then

        
        
                For u = 1 To ArraySize3
                
                    If SUCURSALES(u, 4) = Usuario Then
                
                    'Hoja de conciliaci|fffd|n
                    Sheets(sh3).Select
                        'Cells(c, d) = c - 3
                        Cells(c, d) = SUCURSALES(u, 1)
                        Cells(c, d + 1) = SUCURSALES(u, 2)
                        Cells(c, d + 2) = SUCURSALES(u, 3)
                        Cells(c, d + 3) = SUCURSALES(u, 5)
                        Cells(c, d + 4) = SUCURSALES(u, 6)
                        
                        c = c + 1
                    End If
                
                Next u
                    
Else

                For u = 1 To ArraySize3
                
                
                    'Hoja de conciliaci|fffd|n
                    Sheets(sh3).Select
                    
                        Cells(c, d) = SUCURSALES(u, 1)
                        Cells(c, d + 1) = SUCURSALES(u, 2)
                        Cells(c, d + 2) = SUCURSALES(u, 3)
                        Cells(c, d + 3) = SUCURSALES(u, 5)
                        Cells(c, d + 4) = SUCURSALES(u, 6)
                        
                        c = c + 1

                Next u
                                    
End If

'F|fffd|rmulas de lal hoja de Conciliaci|fffd|n
Call CP_1FormulasConciliacionArqueos

Sheets(sh19).Select


End Sub



Attribute VB_Name = "CM_SALDOS_INCIALES_SUCURSALES"
'Saldos iniciales sucursales

Sub CM_SaldosInicialesSucursales()
Call VariablesGlobales

'limpiar
'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select
Range("F4", Range("F4").End(xlDown)).ClearContents

Call CM1_ImportarSaldosInicialesSucursales
Call CM2_AgregarSaldosInicialesPlaneacion
Call DeleteQueryImportaciones

Sheets(sh3).Select


End Sub
Sub CM1_ImportarSaldosInicialesSucursales()
Call VariablesGlobales

'sh3 = "pm_PLANEACION_SERVICIOS"
'sh6 = "Procesar"
'sh19 = "PARAMETROS"
Dim FechaCierreAyer As Date
Dim DayLabel, MonthLabel, YearLabel, mesCarpeta, fechaCarpeta, fechaArchivo As String
Dim diaNum, mesNum As Integer

FechaCierreAyer = fechaOperacion - 1

diaNum = Day(FechaCierreAyer)
mesNum = Month(FechaCierreAyer)

If diaNum < 10 Then
DayLabel = "0" & diaNum
Else
DayLabel = diaNum
End If

If mesNum < 10 Then
MonthLabel = "0" & mesNum
Else
MonthLabel = mesNum
End If

YearLabel = Year(FechaCierreAyer)
mesCarpeta = NombresMesesLargo(mesNum)

fechaCarpeta = MonthLabel & " " & mesCarpeta & " " & YearLabel & " Saldos Sucursales"
fechaArchivo = DayLabel & " " & MonthLabel & " " & YearLabel & " SALDOS_SUCURSALES"

'importar archivo cierre ayer
Sheets(sh6).Select
Cells.Clear

'MsgBox UnidadAsignada & RutaSaldoInicial & fechaCarpeta & "\" & fechaArchivo & ".txt"


    Range("A1").Select
    With ActiveSheet.QueryTables.Add(Connection:= _
        "TEXT;" & UnidadAsignada & RutaSaldoInicial & fechaCarpeta & "\" & fechaArchivo & ".txt" _
        , Destination:=Range("$A$1"))
        .Name = fechaArchivo
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierDoubleQuote
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileOtherDelimiter = "|"
        .TextFileColumnDataTypes = Array(4, 1, 1, 1, 1, 4)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    End With
    
    

End Sub


Sub CM1_a_ImportarSaldosInicialesSucursalesValor(fechaValor As Date)

Call VariablesGlobales

'sh3 = "pm_PLANEACION_SERVICIOS"
'sh6 = "Procesar"
'sh19 = "PARAMETROS"
Dim FechaCierreAyer As Date
Dim DayLabel, MonthLabel, YearLabel, mesCarpeta, fechaCarpeta, fechaArchivo As String
Dim diaNum, mesNum As Integer

FechaCierreAyer = CDate(fechaValor)

diaNum = Day(FechaCierreAyer)
mesNum = Month(FechaCierreAyer)

If diaNum < 10 Then
DayLabel = "0" & diaNum
Else
DayLabel = diaNum
End If

If mesNum < 10 Then
MonthLabel = "0" & mesNum
Else
MonthLabel = mesNum
End If

YearLabel = Year(FechaCierreAyer)
mesCarpeta = NombresMesesLargo(mesNum)

fechaCarpeta = MonthLabel & " " & mesCarpeta & " " & YearLabel & " Saldos Sucursales"
fechaArchivo = DayLabel & " " & MonthLabel & " " & YearLabel & " SALDOS_SUCURSALES"

'importar archivo cierre ayer
Sheets(sh6).Select
Cells.Clear

'MsgBox UnidadAsignada & RutaSaldoInicial & fechaCarpeta & "\" & fechaArchivo & ".txt"


    Range("A1").Select
    With ActiveSheet.QueryTables.Add(Connection:= _
        "TEXT;" & UnidadAsignada & RutaSaldoInicial & fechaCarpeta & "\" & fechaArchivo & ".txt" _
        , Destination:=Range("$A$1"))
        .Name = fechaArchivo
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierDoubleQuote
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileOtherDelimiter = "|"
        .TextFileColumnDataTypes = Array(4, 1, 1, 1, 1, 4)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    End With
    
    

End Sub


Sub CM1_b_ImportarDem(fechaValor As Date)

'Sub CM1_b_ImportarDem()

Call VariablesGlobales

'sh3 = "pm_PLANEACION_SERVICIOS"
'sh6 = "Procesar"
'sh19 = "PARAMETROS"
Dim FechaCierreAyer As Date
Dim DayLabel, MonthLabel, YearLabel, mesCarpeta, fechaCarpeta, fechaArchivo, tipoArchivo, carpeta As String
Dim diaNum, mesNum As Integer
Dim rango As Range
Dim finCol As Long

'columna final del layout
finCol = 43

'FechaCierreAyer = CDate(fechaValor)
FechaCierreAyer = fechaValor

diaNum = Day(FechaCierreAyer)
mesNum = Month(FechaCierreAyer)

If diaNum < 10 Then
DayLabel = "0" & diaNum
Else
DayLabel = diaNum
End If

If mesNum < 10 Then
MonthLabel = "0" & mesNum
Else
MonthLabel = mesNum
End If

YearLabel = Year(FechaCierreAyer)
mesCarpeta = NombresMesesLargo(mesNum)

fechaArchivo = DayLabel & " " & mesCarpeta & " " & YearLabel & " Planeaciones Diarias Txt"
carpeta = UnidadAsignada & RutaTxtPlaneaciones & MonthLabel & " " & mesCarpeta & " " & YearLabel & " Planeaciones Diarias Txt" & "\" & fechaArchivo

tipoArchivo = "*DEM Arrastre*"

'importar archivo cierre ayer
Sheets(sh6).Select

Set rango = Range("A1")



ChDrive (UnidadAsignada)
ChDir (carpeta)
archi = Dir(tipoArchivo)


Do While archi <> ""

    With ActiveSheet.QueryTables.Add(Connection:= _
        "TEXT;" & carpeta & "\" & archi _
        , Destination:=rango)
        .Name = Left(archi, Len(archi) - 4)
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierDoubleQuote
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileOtherDelimiter = "|"
        .TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 1)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    End With
    
    Set rango = Range(Cells(Range("A1000000").End(xlUp).Row + 1, 1), Cells(Range("A1000000").End(xlUp).Row + 1, 1))
    
archi = Dir()

Loop

Call DeleteQueryImportaciones


'ordenar
ActiveWorkbook.Worksheets(sh6).Sort.SortFields.Clear
    ActiveWorkbook.Worksheets(sh6).Sort.SortFields.Add Key:=Range(Cells(1, 2), Cells(Range("A1000000").End(xlUp).Row, 2) _
        ), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets(sh6).Sort
        .SetRange Range(Cells(1, 1), Cells(Range("A1000000").End(xlUp).Row, finCol))
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    
    
    
End Sub

Sub CM1_c_ImportarDotaciones(fechaValor As Date)
'Sub CM1_c_ImportarServiciosETV()

Call VariablesGlobales

'sh3 = "pm_PLANEACION_SERVICIOS"
'sh6 = "Procesar"
'sh19 = "PARAMETROS"
Dim FechaCierreAyer As Date
Dim DayLabel, MonthLabel, YearLabel, mesCarpeta, fechaCarpeta, fechaArchivo As String
Dim diaNum, mesNum As Integer

FechaCierreAyer = CDate(fechaValor)
'FechaCierreAyer = Date - 1

diaNum = Day(FechaCierreAyer)
mesNum = Month(FechaCierreAyer)

If diaNum < 10 Then
DayLabel = "0" & diaNum
Else
DayLabel = diaNum
End If

If mesNum < 10 Then
MonthLabel = "0" & mesNum
Else
MonthLabel = mesNum
End If

YearLabel = Year(FechaCierreAyer)
mesCarpeta = NombresMesesLargo(mesNum)

fechaArchivo = DayLabel & " " & mesCarpeta & " " & YearLabel & " Planeaciones Diarias Txt"
carpeta = UnidadAsignada & RutaTxtPlaneaciones & MonthLabel & " " & mesCarpeta & " " & YearLabel & " Planeaciones Diarias Txt" & "\" & fechaArchivo

tipoArchivo = "*Programacion Servicios Dotaciones*"

'importar archivo cierre ayer
Sheets(sh6).Select
Cells.Clear

'MsgBox UnidadAsignada & RutaSaldoInicial & fechaCarpeta & "\" & fechaArchivo & ".txt"

'importar archivo cierre ayer
Sheets(sh6).Select

Set rango = Range("A1")

 Range("A1").Select

ChDrive (UnidadAsignada)
ChDir (carpeta)
archi = Dir(tipoArchivo)

'MsgBox Carpeta & "\" & archi


Do While archi <> ""


   
    With ActiveSheet.QueryTables.Add(Connection:= _
        "TEXT;" & carpeta & "\" & archi _
        , Destination:=rango)
        .Name = fechaArchivo
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierDoubleQuote
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileOtherDelimiter = "|"
        .TextFileColumnDataTypes = Array(4, 1, 1, 1, 1, 4)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    End With
    
Set rango = Range(Cells(Range("A1000000").End(xlUp).Row + 1, 1), Cells(Range("A1000000").End(xlUp).Row + 1, 1))
    
archi = Dir()

Loop

End Sub

Sub CM2_AgregarSaldosInicialesPlaneacion()
Call VariablesGlobales

Sheets(sh6).Select

Dim lookupvalue, value As Variant
Dim NombreRango As String
Dim celda, lookupRange, rango As Range
Dim col0, col1, TotalSuc As Integer
Dim row0 As Long

'N|fffd|mero de columna D PLANEACION
col0 = 4
'Numero de columna plazas
col1 = 26

row0 = 4

'MsgBox Row0

'numero de plazas registradas previamente
Sheets(sh3).Select
If Cells(row0, col0) = "" And Cells(row0 + 1, col0) = "" Then
TotalPlazas = 0
Else
TotalPlazas = Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)).Count
End If

'NuevaColumnaCajas = Col0 + TotalPlazas

'celda = Sheets(sh3).Range(Cells(Row0, Col0), Cells(2, Col0 - 8)).value 'celda con el valor que buscamos
Sheets(sh6).Select
Set lookupRange = Range(Cells(2, 2), Cells(2, 4).End(xlDown)) 'rango donde buscar

Sheets(sh3).Select
Set rango = Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)) 'rango donde buscar
rango.Select



Application.Calculation = xlManual

'SALDOS AL CORTE
For Each cell In rango
''Queremos la columna 3

lookupvalue = Application.VLookup(cell, lookupRange, 3, False)

'Si no encuentra valor finaliza
    If IsError(lookupvalue) Then
        Sheets(sh3).Select
        cell.Offset(0, 2) = 0
    Else
        Sheets(sh3).Select
        cell.Offset(0, 2) = lookupvalue
        cell.Offset(0, 3).FormulaR1C1 = "=IFERROR(RC[-1]/RC[3],0)"
        
    End If

Next cell


Application.Calculation = xlAutomatic

'registrar hora en campo de t|fffd|tulo de columna

Sheets(sh6).Select
fechaInicial = Day(Range("a2")) & " " & NombresMesesCorto(Month(Range("a2")))

Sheets(sh3).Select


Range("f3") = "Saldo Inicial " & Chr(10) & "(Corte " & fechaInicial & ")"

Range("f3").Select

End Sub



Sub CM3_IngresarSaldosIniciales()

Call VariablesGlobales
Dim row0, col0, rowFin, colFin, rowFinTemp As Long
Dim rangoIdSuc As Range
Dim IdSucursales() As Variant
Dim rowSuc0, colSuc0, rowSucFin, contadorSuc, contadorErrores As Long
Dim fechaOperacion As Date

'''''''''''FECHA ARCHIVO''''''''''''''''''
Sheets(sh27).Select

If Range("C2") = "" Then
MsgBox "FALTA FECHA DE SALDOS"
Exit Sub

ElseIf IsDate(Range("C2").value) = False Then
MsgBox "FECHA INCORRECTA"
Exit Sub

Else
fechaOperacion = Sheets(sh27).Range("C2")
Call CM4_CrearCarpetaMesSaldos

End If


'Fecha Operaci|fffd|n

'dia homologado a dos caracteres
    
    If Day(fechaOperacion) < 10 Then
        DiaHoy = "0" & Day(fechaOperacion)
    Else
        DiaHoy = Day(fechaOperacion)
    End If

'nombre mes
If Month(fechaOperacion) = 1 Then
MonthLabel = Meses1
ElseIf Month(fechaOperacion) = 2 Then
MonthLabel = Meses2
ElseIf Month(fechaOperacion) = 3 Then
MonthLabel = Meses3
ElseIf Month(fechaOperacion) = 4 Then
MonthLabel = Meses4
ElseIf Month(fechaOperacion) = 5 Then
MonthLabel = Meses5
ElseIf Month(fechaOperacion) = 6 Then
MonthLabel = Meses6
ElseIf Month(fechaOperacion) = 7 Then
MonthLabel = Meses7
ElseIf Month(fechaOperacion) = 8 Then
MonthLabel = Meses8
ElseIf Month(fechaOperacion) = 9 Then
MonthLabel = Meses9
ElseIf Month(fechaOperacion) = 10 Then
MonthLabel = Meses10
ElseIf Month(fechaOperacion) = 11 Then
MonthLabel = Meses11
ElseIf Month(fechaOperacion) = 12 Then
MonthLabel = Meses12
End If

'nombre mes
If Month(fechaOperacion) < 10 Then
    NombreMes = "0" & Month(fechaOperacion)
Else
    NombreMes = Month(fechaOperacion)
End If


'nombre a|fffd|o
NombreAno = Year(fechaOperacion)

NombreArchivo = DiaHoy & " " & NombreMes & " " & NombreAno & " " & "SALDOS_SUCURSALES"
RutaArchivo = UnidadAsignada & RutaSaldoInicial & NombreMes & " " & MonthLabel & " " & NombreAno & " Saldos Sucursales\" & NombreArchivo & ".txt"

'MsgBox RutaArchivo

'''''''''''''''''''''''''''''''''''''''''''


'''''''''''ARREGLO SUCURSALES''''''''''''''
'sh4 = "Info. Gral."
rowSuc0 = 2
colSuc0 = 21
rowSucFin = Cells(rowSuc0, colSuc0).End(xlDown).Row - 1
contadorSuc = 1
contadorErrores = 0

ReDim IdSucursales(rowSucFin, 2)

Sheets(sh4).Select

For i = 1 To UBound(IdSucursales)

IdSucursales(i, 1) = Cells(rowSuc0, colSuc0)
IdSucursales(i, 2) = Cells(rowSuc0, colSuc0 + 1)

contadorSuc = contadorSuc + 1

rowSuc0 = rowSuc0 + 1

Next i

'''''''''''''''''''''''''''''''''''''''''

'limpiar hoja de saldo inicial
Sheets(sh27).Select

'Cells.ClearContents

Range("A1") = "Registrar informaci|fffd|n de Saldos"
Range("A2") = "Fecha Operaci|fffd|n:"
Range("A4") = "Id Sucursal"
Range("B4") = "Nombre Sucursal"
Range("C4") = "Saldo"
'Range("D4") = "Validaci|fffd|n"

''''''''''''''VALIDAR INFORMACI|fffd|N''''''''''''''''''''''''''''''
row0 = 5
col0 = 1
colFin = 3

rowFinTemp = Range("a:a").SpecialCells(xlCellTypeLastCell).Row

'ordenar
    Range(Cells(row0 - 1, col0), Cells(rowFinTemp, colFin)).Select
    ActiveWorkbook.Worksheets(sh27).Sort.SortFields.Clear
    ActiveWorkbook.Worksheets(sh27).Sort.SortFields.Add Key:=Range( _
        Cells(row0 - 1, col0), Cells(rowFinTemp, col0)), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets(sh27).Sort
        .SetRange Range(Cells(row0 - 1, col0), Cells(rowFinTemp, colFin))
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
'|fffd|ltima celda
rowFin = Cells(row0, col0).End(xlDown).Row


Do While Cells(row0, col0) <> ""
On Error Resume Next
    Cells(row0, col0) = Cells(row0, col0) * 1
    
    For i = 1 To UBound(IdSucursales)
        
        If IsNumeric(Cells(row0, col0)) = False Then
        
            'Cells(row0, col0 + 3) = "NO EXISTE ID"
            contadorErrores = contadorErrores + 1
            Exit For
        
        ElseIf Int(Cells(row0, col0)) = IdSucursales(i, 1) Then
        
            Cells(row0, col0 + 1) = IdSucursales(i, 2)
            Exit For
        
        ElseIf i = UBound(IdSucursales) And Cells(row0, col0) <> IdSucursales(i, 1) Then
        
            'Cells(row0, col0 + 3) = "NO EXISTE ID"
            contadorErrores = contadorErrores + 1
            Exit For
        End If
    
    Next i

row0 = row0 + 1

Loop

On Error GoTo 0

'REGRESAR VALOR DE row0
row0 = 4


'''''''''''''''''''GENERAR ARCHIVO'''''''''''''''''''''''''''

'CREAR ARCHIVO CON RANGO DE EXCEL
Dim Rng As Range
Dim WorkRng As Range
Dim xFile As Variant
Dim xFileString As String
On Error Resume Next

'Concatenar contenido
    'inicio de rango
    MiLibroMacro = ActiveWorkbook.Name

    Range("A4").Select
    
    'quitar filtro
    If Worksheets(sh27).AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        Worksheets(sh27).AutoFilterMode = False
    Else
        'MsgBox "no hay filtro"
    End If

''''''''''''''concatenar''''''''''''''''''''
Do While Cells(row0, col0) <> ""

    Cells(row0, col0 + 3) = fechaOperacion & "|" & Cells(row0, col0) & "|" & Cells(row0, col0 + 1) & "|" & _
    Cells(row0, col0 + 2) & "|" & UsuarioWindows & "|" & Now()

row0 = row0 + 1

Loop

'    Call ConcatenarRangoPipes
''''''''''''''''''''''''''''''''''''''''''''



    Windows(MiLibroMacro).Activate
    Sheets(sh27).Select
    
        
    
    'rango para copiar en txt
    nColumnas = Range("A4").End(xlToRight).Column
    'NFilas = rowFin
    
    Range(Cells(4, nColumnas), Cells(rowFin, nColumnas)).Select


'guardar en txt
Set WorkRng = Application.Selection
Application.ActiveSheet.Copy
Application.ActiveSheet.Cells.Clear
WorkRng.Copy Application.ActiveSheet.Range("A1")
Set xFile = CreateObject("Scripting.FileSystemObject")
'xFileString = Application.GetSaveAsFilename("", filefilter:="Comma Separated Text (*.CSV), *.CSV")
'xFileString = Application.GetSaveAsFilename(NombreArchivo, filefilter:="Text (*.TXT), *.TXT")
'Application.ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.SaveAs Filename:=RutaArchivo, FileFormat:=xlTextWindows, CreateBackup:=False
ActiveWorkbook.Close True



'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then
    RutaArchivoLocal = RutaLocal & NombreCarpetaCompartida & "\" & RutaSaldoInicial & NombreMes & " " & MonthLabel & " " & NombreAno & " Saldos Sucursales\" & NombreArchivo & ".txt"


End If

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

FileCopy RutaArchivo, RutaArchivoLocal

End If



Windows(MiLibroMacro).Activate
    Sheets(sh27).Select
    Columns(nColumnas).ClearContents
    Range("A3").Select

Application.CutCopyMode = False


'MENSAJE DE REGISTROS SIN ID DE SUCURSAL
If contadorErrores >= 1 Then
    MsgBox "hay " & contadorErrores & " registros sin ID SUCURSAL"

Else
    MsgBox "PROCESO FINALIZADO"
    
End If


End Sub

Sub CM4_CrearCarpetaMesSaldos()
'carpeta papeles de trabajo
Call CA00_MacroCrearCarpetas


Call VariablesGlobales

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String

'Ubicar fecha del reporte
Sheets(sh27).Select
fechaValor = Range("C2").value

DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If


UnidadRuta = UnidadAsignada & RutaSaldos
fechaCarpeta = MonthLabel & " " & NombreMes & " " & YearLabel & " Saldos Sucursales"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta

'COPIAR EN LOCAL
If puntero = "COMPARTIDA" Then

DA0_CreaCarpeta RutaLocal & NombreCarpetaCompartida & "\" & RutaSaldoInicial & "\", fechaCarpeta

End If


End Sub


Sub CM5_SaldoInicialLimpiar()


Call VariablesGlobales
Dim row0, col0, colFin, rowFin As Long

row0 = 5
col0 = 1
colFin = Cells(row0 - 1, 230).End(xlToLeft).Column
rowFin = Cells(row0, col0).End(xlDown).Row


''sh27
Sheets(sh27).Select
Range(Cells(row0, col0), Cells(rowFin, colFin)).ClearContents

Range("C2").ClearContents
'Cells.Clear

End Sub

Sub CM6_ListaSucursales()


Call VariablesGlobales
Dim row0, col0, colFin, rowFin As Long

row0 = 5
col0 = 1
colFin = Cells(row0 - 1, 230).End(xlToLeft).Column
rowFin = Cells(row0, col0).End(xlDown).Row

'sh4
Sheets(sh4).Select
'sh4 = "Info. Gral."
rowSuc0 = 2
colSuc0 = 21

Range(Cells(rowSuc0, colSuc0), Cells(rowSuc0, colSuc0 + 1).End(xlDown)).Copy

''sh27
Sheets(sh27).Select
Range("a5").Select
ActiveSheet.Paste
Application.CutCopyMode = False

End Sub


Sub CM7_ReportesJkassaSaldosFinales()

Call VariablesGlobales

Dim cuSh, nwSh, tmSh, carpeta, AmPm, carpetaHora, fechaArchivo, fechaSaldo, diaLabel, mesLabel As String
Dim repJkassa1, repJkassa2, repJkassa3, repJkassa4 As String
Dim repAvansoft1 As String
Dim repJkassa1Range, repJkassa2Range, repJkassa3Range, repJkassa4Range  As Range
Dim repJkassa1Fecha, repJkassa2Fecha, repJkassa3Fecha, repJkassa4Fecha  As String
Dim repAvansoft1Fecha, repAvansoft1Hora As String
Dim repJkassa1Hora, repJkassa2Hora, repJkassa3Hora, repJkassa4Hora  As String
Dim punteroJK1, punteroJK2, punteroJK3, punteroJK4 As Integer
Dim punteroAS1 As Integer
Dim row0JK1, row0JK2, row0JK3, row0JK4 As Integer
Dim row0AS1 As Integer
Dim totRowsJK1, totRowsJK2, totRowsJK3, totRowsJK4 As Long
Dim contadorJK1, contadorJK2, contadorJK3, contadorJK4 As Long
Dim totRowsAS1M, contadorAS1 As Long
Dim hora1, hora2 As Date
Dim punteroCatSuc, punteroCatSucExcep, contadorCatSuc As Integer
Dim numCatSuc As Long
Dim row0SaldoHom, totRowsSaldoHom As Integer
Dim rowFechaPublicar, row0Publicar As Integer
Dim fechaSaldoPublicar As Date
Dim minFechAvan, minFechJka, maxFechAvan, maxFechJka As Date
Dim fechasProcesAvansoft, fechasProcesJkassa As String
hora1 = Now()

Dim JKASSA1() As Variant
Dim JKASSA2() As Variant
Dim JKASSA3() As Variant
Dim JKASSA4() As Variant
Dim AVANSOFT1() As Variant
Dim SUCURSALES() As Variant
Dim SALDOS_SUCURSALES() As Variant
Dim SUCURSALES_EXCEP_AVANSOFT() As Variant
Dim sucursalesUnicas As Collection
Dim fechasJkassa As Collection
Dim fechasAvansoft As Collection
Dim FECHAS_JKASSA() As Variant
Dim FECHAS_AVANSOFT() As Variant

Dim sumaJKASSA1, sumaJKASSA2, sumaJKASSA3, sumaJKASSA4 As Currency
Dim contarJKASSA1, contarJKASSA2, contarJKASSA3, contarJKASSA4 As Integer

'sh27 = "SALDO INICIAL"
'libro principal
cuSh = ActiveWorkbook.Name
'sh27 = "SALDO INICIAL"
Sheets(sh27).Select
fechaSaldo = Range("C2").value
'rutaRepositorioPersonal = Range("C3").value


'Reporte JKASSA APLICACI|fffd|N DESKTOP - 10901: Monitoreo de Caja
'Etiqueta en B2
repJkassa1 = "Monitoreo de Caja"

'Reporte JKASSA APLICACI|fffd|N DESKTOP 10907: Arqueo de Caja
'Etiqueta en B8
repJkassa2 = "Fecha reporte:"

'Reporte JKASSA ONLINE SALDO FINAL
'Etiqueta en A1
repJkassa3 = "NOMBRE: SALDO FINAL"


'Reporte JKASSA Resumen de Operaciones en Sucursal
'Etiqueta en B2
repJkassa4 = "Resumen de operaciones en sucursal"

'Avansoft
repAvansoft1 = "Resumen de operaciones"

Set repJkassa1Range = Range("B2")
Set repJkassa2Range = Range("B8")
Set repJkassa3Range = Range("A1")
Set repJkassa4Range = Range("B2")
Set repAvansoft1Range = Range("A4")


'primera l|fffd|nea de registros
row0JK1 = 13
row0JK2 = 13
row0JK3 = 5
row0JK4 = 17
row0AS1 = 23

' columna para medir longitud
punteroJK1 = 9
punteroJK2 = 5
punteroJK3 = 1
punteroJK4 = 7
punteroAS1 = 19

'contador arreglo
contadorJK1 = 1
contadorJK2 = 1
contadorJK3 = 1
contadorJK4 = 1
contadorAS1 = 1

'Inicializar suma de arreglos
sumaJKASSA1 = 0
sumaJKASSA2 = 0
sumaJKASSA3 = 0
sumaJKASSA4 = 0
sumaAvansoft1 = 0

'''''''''''''''''''''''''''''SUCURSALES CAT|fffd|LOGO'''''''''''''''''''''''''''''
'sh4 = "Info. Gral."
punteroCatSuc = 21

contadorCatSuc = 2
Sheets(sh4).Select

numCatSuc = Cells(2, punteroCatSuc).End(xlDown).Row - 1

ReDim SUCURSALES(numCatSuc, 2)

For i = 1 To UBound(SUCURSALES)
    SUCURSALES(i, 1) = Cells(contadorCatSuc, punteroCatSuc)
    SUCURSALES(i, 2) = Cells(contadorCatSuc, punteroCatSuc + 1)
    
    contadorCatSuc = contadorCatSuc + 1
    
Next i

'Excepciones de nombre en Avansoft
punteroCatSucExcep = 75
contadorCatSuc = 2
numCatSuc = Cells(2, punteroCatSucExcep).End(xlDown).Row - 1

ReDim Preserve SUCURSALES_EXCEP_AVANSOFT(numCatSuc, 3)

For i = 1 To UBound(SUCURSALES_EXCEP_AVANSOFT)

    SUCURSALES_EXCEP_AVANSOFT(i, 1) = Cells(contadorCatSuc, punteroCatSucExcep)
    SUCURSALES_EXCEP_AVANSOFT(i, 2) = Cells(contadorCatSuc, punteroCatSucExcep + 1)
    SUCURSALES_EXCEP_AVANSOFT(i, 3) = Cells(contadorCatSuc, punteroCatSucExcep + 2)
    
    contadorCatSuc = contadorCatSuc + 1
Next i



'Agregar libro
    Workbooks.Add
    Range("a1").Select
    nwSh = ActiveWorkbook.Name
    
ChDrive (UnidadAsignada)
ChDir (UnidadAsignada & "\" & rutaRepositorioPersonal)
archi = Dir(UnidadAsignada & "\" & rutaRepositorioPersonal & "\" & "*")



 
Do While archi <> ""
     'abrir
     Workbooks.Open Filename:=UnidadAsignada & "\" & rutaRepositorioPersonal & "\" & archi
     
    tmSh = ActiveWorkbook.Name
            'IDENTIFICAR TIPO DE REPORTE
            
            ''''''''''''''''''''Monitoreo de Caja''''''''''''''''''''''''''''''''''
            
            If Range("B2").value = repJkassa1 Then
                
                'FECHA VALOR
                repJkassa1Fecha = Range("O2").value
                repJkassa1Hora = Range("O3").value
                ''''''''''''''''''''''''ARREGLO JKASSA 1''''''''''''''''''''''''''''''''
                'NUMERO DE REGISTROS
                totRowsJK1 = Cells(65000, punteroJK1).End(xlUp).Row - row0JK1 + 1
                'rowsArray1 = totRowsJK1 + UBound(JKASSA1)
                

                ReDim Preserve JKASSA1(totRowsJK1, 4)
                
                'ID SUC 4 IZQUIERDA COLUMNA 5, IMPORTE COLUMNA 45, HORA "AV4"
                
                For i = 1 To totRowsJK1
                    'id sucursal
                    JKASSA1(contadorJK1, 1) = Val(Cells(row0JK1, 9))
                    'fecha
                    JKASSA1(contadorJK1, 2) = CDate(repJkassa1Fecha)
                    'hora
                    JKASSA1(contadorJK1, 3) = repJkassa1Hora
                    'importe
                    JKASSA1(contadorJK1, 4) = Cells(row0JK1, 13)
                    
'                    'suma del arreglo
                    If Val(Cells(row0JK1, 9)) > 0 Then

                        sumaJKASSA1 = sumaJKASSA1 + CCur(Cells(row0JK1, 13))
                        contarJKASSA1 = contarJKASSA1 + 1

                    End If
                    
                    contadorJK1 = contadorJK1 + 1
                    row0JK1 = row0JK1 + 1
                    
                Next i
                

                'copiar hoja
                Sheets(1).Select
                ActiveSheet.Name = "Monitoreo Caja"
                Sheets(1).Copy After:=Workbooks(nwSh).Sheets(Sheets.Count)
                
                
                'cerrar
                Windows(tmSh).Activate
                ActiveWorkbook.Close False
                
                Windows(nwSh).Activate
                Sheets(Sheets.Count).Select
    
            
            ''''''''''''''''''''Fecha reporte:''''''''''''''''''''''''''''''''''
            
            ElseIf Range("B8").value = repJkassa2 Then
                'FECHA VALOR
                repJkassa2Fecha = Range("C8").value
                repJkassa2Hora = Range("AV4").value
                ''''''''''''''''''''''''ARREGLO JKASSA 2''''''''''''''''''''''''''''''''
                'NUMERO DE REGISTROS
                totRowsJK2 = Cells(65000, punteroJK2).End(xlUp).Row - row0JK2 + 1
                'rowsArray2 = totRowsJK2 + UBound(JKASSA2)
                ReDim Preserve JKASSA2(totRowsJK2, 4)
                
                'ID SUC COLUMNA 2, IMPORTE COLUMNA 5, HORA "A3"
                
                For i = 1 To totRowsJK2
                    'id sucursal
                    JKASSA2(contadorJK2, 1) = Val(Left(Cells(row0JK2, 5), 4))
                    'fecha
                    JKASSA2(contadorJK2, 2) = CDate(repJkassa2Fecha)
                    'hora
                    JKASSA2(contadorJK2, 3) = repJkassa2Hora
                    'importe
                    JKASSA2(contadorJK2, 4) = Cells(row0JK2, 45)
                    
'                    'suma del arreglo
                    If Val(Left(Cells(row0JK2, 5), 4)) > 0 Then

                        sumaJKASSA2 = sumaJKASSA2 + CCur(Cells(row0JK2, 45))
                        contarJKASSA2 = contarJKASSA2 + 1

                    End If
'
                    contadorJK2 = contadorJK2 + 1
                    row0JK2 = row0JK2 + 1
                Next i
                
                
            
                'copiar hoja
                Sheets(1).Select
                ActiveSheet.Name = "Arqueo"
                Sheets(1).Copy After:=Workbooks(nwSh).Sheets(Sheets.Count)
                
                
                
                'cerrar
                Windows(tmSh).Activate
                ActiveWorkbook.Close False
                
                Windows(nwSh).Activate
                Sheets(Sheets.Count).Select

            
            ''''''''''''''''''''NOMBRE: SALDO FINAL''''''''''''''''''''''''''''''''''
            
            ElseIf Range("A1").value = repJkassa3 Then
                'FECHA VALOR
                repJkassa3Fecha = Right(Range("A2").value, 10)
                repJkassa3Hora = Right(Range("A3").value, 5)
                ''''''''''''''''''''''''ARREGLO JKASSA 3''''''''''''''''''''''''''''''''
                'NUMERO DE REGISTROS
                totRowsJK3 = Cells(65000, punteroJK3).End(xlUp).Row - row0JK3 + 1
                'rowsArray3 = totRowsJK3 + UBound(JKASSA3)
                ReDim Preserve JKASSA3(totRowsJK3, 4)
                
                'ID SUC COLUMNA 9, IMPORTE COLUMNA 13, HORA "O3"
                
                For i = 1 To totRowsJK3
                    'id sucursal
                    JKASSA3(contadorJK3, 1) = Val(Cells(row0JK3, 2))
                    'fecha
                    JKASSA3(contadorJK3, 2) = CDate(repJkassa3Fecha)
                    'hora
                    JKASSA3(contadorJK3, 3) = repJkassa3Hora
                    'importe
                    JKASSA3(contadorJK3, 4) = Cells(row0JK3, 5)
                    
'                    'suma del arreglo
                    If Val(Cells(row0JK3, 2)) > 0 Then

                        sumaJKASSA3 = sumaJKASSA3 + CCur(Cells(row0JK3, 5))
                        contarJKASSA3 = contarJKASSA3 + 1

                    End If
                    
                    contadorJK3 = contadorJK3 + 1
                    row0JK3 = row0JK3 + 1
                Next i
                

                'copiar hoja
                Sheets(1).Select
                ActiveSheet.Name = "Reporte Saldos"
                'Sheets(1).Copy After:=Workbooks(nwSh).Sheets(Sheets.Count)
                Sheets(1).Copy After:=Workbooks(nwSh).Sheets(2)
                
                
                
                'cerrar
                Windows(tmSh).Activate
                ActiveWorkbook.Close False
                
                Windows(nwSh).Activate
                Sheets(Sheets.Count).Select
                
            ''''''''''''''''''''REPORTE DE TRANSACCIONES JKASSA''''''''''''''''''''''''''''''''''
            
            ElseIf Range("B2").value = repJkassa4 Then
                'FECHA VALOR
                repJkassa4Fecha = Range("D10").value
                repJkassa4Hora = Trim(Left(Range("AM4").value, 8))
                
                'dia etiqueta
                If Day(CDate(repJkassa4Fecha)) < 10 Then
                    diaJkassa4 = "0" & Day(CDate(repJkassa4Fecha))
                    
                Else
                    
                    diaJkassa4 = Day(CDate(repJkassa4Fecha))
                    
                End If
                
                'mes valor etiqueta
                If Month(CDate(repJkassa4Fecha)) < 10 Then
                    mesValJkassa4 = "0" & Month(CDate(repJkassa4Fecha))
                    
                Else
                    
                    mesValJkassa4 = Month(CDate(repJkassa4Fecha))
                    
                End If
                
                'a|fffd|o etiqueta
                anioJkassa4 = Right(Year(CDate(repJkassa4Fecha)), 2)
                
                'mes nombre etiqueta
                Select Case Month(CDate(repJkassa4Fecha))
                Case 1
                mesJkassa4 = "Enero"
                Case 2
                mesJkassa4 = "Febrero"
                Case 3
                mesJkassa4 = "Marzo"
                Case 4
                mesJkassa4 = "Abril"
                Case 5
                mesJkassa4 = "Mayo"
                Case 6
                mesJkassa4 = "Junio"
                Case 7
                mesJkassa4 = "Julio"
                Case 8
                mesJkassa4 = "Agosto"
                Case 9
                mesJkassa4 = "Septiembre"
                Case 10
                mesJkassa4 = "Octubre"
                Case 11
                mesJkassa4 = "Noviembre"
                Case 12
                mesJkassa4 = "Diciembre"
                End Select
                
                nombreCarpetaJkassa = mesValJkassa4 & ". " & mesJkassa4 & " " & Year(CDate(repJkassa4Fecha))
                nombreArchivoJkassa = "JKASSA_" & anioJkassa4 & mesValJkassa4 & diaJkassa4
                
                
                ''''''''''''''''''''''''ARREGLO JKASSA 4''''''''''''''''''''''''''''''''
                'NUMERO DE REGISTROS
                totRowsJK4 = Cells(65000, punteroJK4).End(xlUp).Row - row0JK4 + 1
                'rowsArray3 = totRowsJK3 + UBound(JKASSA3)
                ReDim Preserve JKASSA4(totRowsJK4, 33)
                
                'ID SUC COLUMNA 7
                
                For i = 1 To totRowsJK4
                    
                    If Cells(row0JK4, 9) = "MXN" Then
                        JKASSA4(contadorJK4, 1) = Cells(row0JK4, 6)
                        JKASSA4(contadorJK4, 2) = Val(Cells(row0JK4, 7))
                        JKASSA4(contadorJK4, 3) = Val(Cells(row0JK4, 8))
                        JKASSA4(contadorJK4, 4) = Val(Cells(row0JK4, 9))
                        JKASSA4(contadorJK4, 5) = Val(Cells(row0JK4, 10))
                        JKASSA4(contadorJK4, 6) = Val(Cells(row0JK4, 11))
                        JKASSA4(contadorJK4, 7) = Val(Cells(row0JK4, 12))
                        JKASSA4(contadorJK4, 8) = Val(Cells(row0JK4, 13))
                        JKASSA4(contadorJK4, 9) = Val(Cells(row0JK4, 14))
                        JKASSA4(contadorJK4, 10) = Val(Cells(row0JK4, 15))
                        JKASSA4(contadorJK4, 11) = Val(Cells(row0JK4, 16))
                        JKASSA4(contadorJK4, 12) = Val(Cells(row0JK4, 17))
                        JKASSA4(contadorJK4, 13) = Val(Cells(row0JK4, 18))
                        JKASSA4(contadorJK4, 14) = Val(Cells(row0JK4, 19))
                        JKASSA4(contadorJK4, 15) = Val(Cells(row0JK4, 20))
                        JKASSA4(contadorJK4, 16) = Val(Cells(row0JK4, 21))
                        JKASSA4(contadorJK4, 17) = Val(Cells(row0JK4, 22))
                        JKASSA4(contadorJK4, 18) = Val(Cells(row0JK4, 23))
                        JKASSA4(contadorJK4, 19) = Val(Cells(row0JK4, 24))
                        JKASSA4(contadorJK4, 20) = Val(Cells(row0JK4, 25))
                        JKASSA4(contadorJK4, 21) = Val(Cells(row0JK4, 26))
                        JKASSA4(contadorJK4, 22) = Val(Cells(row0JK4, 27))
                        JKASSA4(contadorJK4, 23) = Val(Cells(row0JK4, 28))
                        JKASSA4(contadorJK4, 24) = Val(Cells(row0JK4, 29))
                        JKASSA4(contadorJK4, 25) = Val(Cells(row0JK4, 30))
                        JKASSA4(contadorJK4, 26) = Val(Cells(row0JK4, 31))
                        JKASSA4(contadorJK4, 27) = Val(Cells(row0JK4, 32))
                        JKASSA4(contadorJK4, 28) = Val(Cells(row0JK4, 33))
                        JKASSA4(contadorJK4, 29) = Val(Cells(row0JK4, 34))
                        JKASSA4(contadorJK4, 30) = Val(Cells(row0JK4, 35))
                        JKASSA4(contadorJK4, 31) = Val(Cells(row0JK4, 36))
                        JKASSA4(contadorJK4, 32) = Val(Cells(row0JK4, 37))
                        'LLAVE

                
                    
                    contadorJK4 = contadorJK4 + 1
                    
                    End If
                    
                    row0JK4 = row0JK4 + 1
                Next i

                'cerrar
                Windows(tmSh).Activate
                ActiveWorkbook.Close False
                
                Windows(nwSh).Activate
                Sheets(Sheets.Count).Select

                'COPIAR ARCHIVO EN RUTA DE REPORTES
                FileCopy UnidadAsignada & rutaRepositorioPersonal & "\" & archi, UnidadAsignada & "Reportes_SAP" & "\" & "JKASSA" & "\" & nombreCarpetaJkassa & "\" & nombreArchivoJkassa & ".xls"


            ''''''''''''''''''''AVANSOFT TRANSACCIONES''''''''''''''''''''''''''''''''''
            
            ElseIf Range("A4").value = repAvansoft1 Then
                'FECHA VALOR
                repAvansoft1Fecha = Range("A1").value
                repAvansoft1Hora = Range("A13").value
                
                'dia etiqueta
                If Day(CDate(repAvansoft1Fecha)) < 10 Then
                    diaAvansoft1 = "0" & Day(CDate(repAvansoft1Fecha))
                    
                Else
                    
                    diaAvansoft1 = Day(CDate(repAvansoft1Fecha))
                    
                End If
                
                'mes valor etiqueta
                If Month(CDate(repAvansoft1Fecha)) < 10 Then
                    mesValAvansoft1 = "0" & Month(CDate(repAvansoft1Fecha))
                    
                Else
                    
                    mesValAvansoft1 = Month(CDate(repAvansoft1Fecha))
                    
                End If
                
                'a|fffd|o etiqueta
                anioAvansoft1 = Right(Year(CDate(repAvansoft1Fecha)), 2)
                
                'mes nombre etiqueta
                Select Case Month(CDate(repAvansoft1Fecha))
                Case 1
                mesAvansoft1 = "Enero"
                Case 2
                mesAvansoft1 = "Febrero"
                Case 3
                mesAvansoft1 = "Marzo"
                Case 4
                mesAvansoft1 = "Abril"
                Case 5
                mesAvansoft1 = "Mayo"
                Case 6
                mesAvansoft1 = "Junio"
                Case 7
                mesAvansoft1 = "Julio"
                Case 8
                mesAvansoft1 = "Agosto"
                Case 9
                mesAvansoft1 = "Septiembre"
                Case 10
                mesAvansoft1 = "Octubre"
                Case 11
                mesAvansoft1 = "Noviembre"
                Case 12
                mesAvansoft1 = "Diciembre"
                End Select
                
                nombreCarpetaAvansoft = mesValAvansoft1 & ". " & mesAvansoft1 & " " & Year(CDate(repAvansoft1Fecha))
                nombreArchivoAvansoft = anioAvansoft1 & mesValAvansoft1 & diaAvansoft1
                
                
                ''''''''''''''''''''''''ARREGLO AVANSOFT 1''''''''''''''''''''''''''''''''
                'NUMERO DE REGISTROS
                totRowsAS1 = Cells(65000, punteroAS1).End(xlUp).Row - row0AS1 + 1
                
                'SUMA REGISTRADA EN ARCHIVO
                sumaAvansoftImporte = Cells(65000, punteroAS1).End(xlUp).value
                
                'rowsArray3 = totRowsJK3 + UBound(Avansoft1)
                ReDim Preserve AVANSOFT1(totRowsAS1, 6)
                
                'ID SUC COLUMNA 9, IMPORTE COLUMNA 13, HORA "O3"
                
                For i = 1 To totRowsAS1
                    'FECHA
                    AVANSOFT1(contadorAS1, 1) = repAvansoft1Fecha
                    'ID
                    
                    For j = 1 To UBound(SUCURSALES)
                        If SUCURSALES(j, 2) = Cells(row0AS1, 1) Then
                        
                        AVANSOFT1(contadorAS1, 2) = SUCURSALES(j, 1)
                        
                        ElseIf j = UBound(SUCURSALES) Then
                        
                            For k = 1 To UBound(SUCURSALES_EXCEP_AVANSOFT)
                            If SUCURSALES_EXCEP_AVANSOFT(k, 1) = Cells(row0AS1, 1) Then

                            AVANSOFT1(contadorAS1, 2) = SUCURSALES_EXCEP_AVANSOFT(k, 2)
                            Exit For
                            
                            End If
                            
                            Next k
                        
                        End If
                        
                    Next j
                    
                    'LLAVE FECHA - ID
                    AVANSOFT1(contadorAS1, 3) = repAvansoft1Fecha & AVANSOFT1(contadorAS1, 2)
                    'SUCURSAL
                    AVANSOFT1(contadorAS1, 4) = Cells(row0AS1, 1)
                    'NO TX
                    AVANSOFT1(contadorAS1, 5) = Cells(row0AS1, 18)
                    'IMPORTE
                    AVANSOFT1(contadorAS1, 6) = Cells(row0AS1, 19)
                    
'                    'suma del arreglo
                    If Val(Cells(row0AS1, 18)) > 0 Then

                        sumaAvansoft1 = sumaAvansoft1 + CCur(Cells(row0AS1, 19))
                        contarAvansoft1 = contarAvansoft1 + 1

                    End If
                    
                    contadorAS1 = contadorAS1 + 1
                    row0AS1 = row0AS1 + 1
                Next i
                

                'copiar hoja
'                Sheets(1).Select
'                ActiveSheet.Name = "Reporte Saldos"
'                'Sheets(1).Copy After:=Workbooks(nwSh).Sheets(Sheets.Count)
'                Sheets(1).Copy After:=Workbooks(nwSh).Sheets(2)
                

                
                'cerrar
                Windows(tmSh).Activate
                ActiveWorkbook.Close False
                
                Windows(nwSh).Activate
                Sheets(Sheets.Count).Select
                
                 'COPIAR ARCHIVO EN RUTA DE REPORTES
'                MsgBox UnidadAsignada & rutaRepositorioPersonal & "\" & archi
'                MsgBox UnidadAsignada & "Reportes_SAP" & "\" & "Avansoft" & "\" & nombreCarpetaAvansoft & "\" & nombreArchivoAvansoft & ".xlsx"
'
                FileCopy UnidadAsignada & rutaRepositorioPersonal & "\" & archi, UnidadAsignada & "Reportes_SAP" & "\" & "Avansoft" & "\" & nombreCarpetaAvansoft & "\" & nombreArchivoAvansoft & ".xlsx"
'
               
                
            Else

'                'copiar hoja
'                Sheets(1).Select
'
'                Sheets(1).Copy After:=Workbooks(nwSh).Sheets(Sheets.Count)
                'cerrar
                Windows(tmSh).Activate
                ActiveWorkbook.Close False
                
                Windows(nwSh).Activate
                Sheets(Sheets.Count).Select
            End If

    
    archi = Dir()
    
Loop




                '

'''''''''''agregar informaci|fffd|n a arreglos vacios''''''''''''''''

If (Not JKASSA1) = -1 Then
ReDim Preserve JKASSA1(2, 4)
JKASSA1(1, 1) = 0
JKASSA1(1, 2) = 0
JKASSA1(1, 3) = 0
JKASSA1(1, 4) = 0
JKASSA1(2, 1) = 0
JKASSA1(2, 2) = 0
JKASSA1(2, 3) = 0
JKASSA1(2, 4) = 0
End If

If (Not JKASSA2) = -1 Then
ReDim Preserve JKASSA2(2, 4)
JKASSA2(1, 1) = 0
JKASSA2(1, 2) = 0
JKASSA2(1, 3) = 0
JKASSA2(1, 4) = 0
JKASSA2(2, 1) = 0
JKASSA2(2, 2) = 0
JKASSA2(2, 3) = 0
JKASSA2(2, 4) = 0
End If

If (Not JKASSA3) = -1 Then
ReDim Preserve JKASSA3(2, 4)
JKASSA3(1, 1) = 0
JKASSA3(1, 2) = 0
JKASSA3(1, 3) = 0
JKASSA3(1, 4) = 0
JKASSA3(2, 1) = 0
JKASSA3(2, 2) = 0
JKASSA3(2, 3) = 0
JKASSA3(2, 4) = 0
End If

If (Not JKASSA4) = -1 Then
ReDim Preserve JKASSA4(1, 4)
JKASSA4(1, 1) = 0
JKASSA4(1, 2) = 0
JKASSA4(1, 3) = 0
JKASSA4(1, 4) = 0
JKASSA4(1, 5) = 0
JKASSA4(1, 6) = 0
JKASSA4(1, 7) = 0
JKASSA4(1, 8) = 0
JKASSA4(1, 9) = 0
JKASSA4(1, 10) = 0
JKASSA4(1, 11) = 0
JKASSA4(1, 12) = 0
JKASSA4(1, 13) = 0
JKASSA4(1, 14) = 0
JKASSA4(1, 15) = 0
JKASSA4(1, 16) = 0
JKASSA4(1, 17) = 0
JKASSA4(1, 18) = 0
JKASSA4(1, 19) = 0
JKASSA4(1, 20) = 0
JKASSA4(1, 21) = 0
JKASSA4(1, 22) = 0
JKASSA4(1, 23) = 0
JKASSA4(1, 24) = 0
JKASSA4(1, 25) = 0
JKASSA4(1, 26) = 0
JKASSA4(1, 27) = 0
JKASSA4(1, 28) = 0
JKASSA4(1, 29) = 0
JKASSA4(1, 30) = 0
JKASSA4(1, 31) = 0
JKASSA4(1, 32) = 0
JKASSA4(1, 33) = 0
End If

If (Not AVANSOFT1) = -1 Then
ReDim Preserve AVANSOFT1(2, 6)
AVANSOFT1(1, 1) = 0
AVANSOFT1(1, 2) = 0
AVANSOFT1(1, 3) = 0
AVANSOFT1(1, 4) = 0
AVANSOFT1(1, 5) = 0
AVANSOFT1(1, 6) = 0
AVANSOFT1(2, 1) = 0
AVANSOFT1(2, 2) = 0
AVANSOFT1(2, 3) = 0
AVANSOFT1(2, 4) = 0
AVANSOFT1(2, 5) = 0
AVANSOFT1(2, 6) = 0
End If


'''''''''''''''''''''ID SUCURSALES DE ARREGLOS'''''''''''''''''''''''
Set sucursalesUnicas = New Collection

For i = 1 To UBound(JKASSA1)
    On Error Resume Next
    
    sucursalesUnicas.Add JKASSA1(i, 1), CStr(JKASSA1(i, 1))
    
    On Error GoTo 0

Next i

For i = 1 To UBound(JKASSA2)
    On Error Resume Next
    
    sucursalesUnicas.Add JKASSA2(i, 1), CStr(JKASSA2(i, 1))
    
    On Error GoTo 0

Next i

For i = 1 To UBound(JKASSA3)
    On Error Resume Next
    
    sucursalesUnicas.Add JKASSA3(i, 1), CStr(JKASSA3(i, 1))
    
    On Error GoTo 0

Next i



'Regresar a libro
    Windows(nwSh).Activate
'copiar hoja
    Sheets(1).Select


'''''''''''''''''''''Fechas reportes AVANSOFT'''''''''''''''''''''''
Set fechasAvansoft = New Collection

For i = 1 To UBound(AVANSOFT1)

    If AVANSOFT1(i, 1) > 0 Then
    
        On Error Resume Next
        
        fechasAvansoft.Add AVANSOFT1(i, 1), CStr(AVANSOFT1(i, 1))
        
        On Error GoTo 0
    
    End If
    
Next i

        'convert collection into array
        ReDim FECHAS_AVANSOFT(1 To fechasAvansoft.Count)
        
        For i = 1 To fechasAvansoft.Count
            
            FECHAS_AVANSOFT(i) = fechasAvansoft(i)
        
        Next i
        
        'Etiquetas de rangos de fechas de archivos procesados
        If UBound(FECHAS_AVANSOFT) = 1 Then
        minFechAvan = FECHAS_AVANSOFT(1)
        maxFechAvan = FECHAS_AVANSOFT(1)
        
        Else
        
        minFechAvan = WorksheetFunction.Min(FECHAS_AVANSOFT)
        maxFechAvan = WorksheetFunction.Max(FECHAS_AVANSOFT)
        
        End If
        
        If maxFechAvan = 0 And minFechAvan = 0 Then
        
            fechasProcesAvansoft = "sin fecha "
            
        ElseIf maxFechAvan = minFechAvan Then
        
            fechasProcesAvansoft = Format(WorksheetFunction.Max(minFechAvan, maxFechAvan), "yyyymmdd") & " "
         
        ElseIf maxFechAvan > minFechAvan Then
        
            fechasProcesAvansoft = Format(minFechAvan, "yyyymmdd") & " - " & Format(maxFechAvan, "yyyymmdd") & " "
            
        End If
        
'''''''''''''''''''''Fechas reportes JKASSA'''''''''''''''''''''''
Set fechasJkassa = New Collection

For i = 1 To UBound(JKASSA4)

    If JKASSA4(i, 1) > 0 Then
    
        On Error Resume Next
        
        fechasJkassa.Add JKASSA4(i, 1), CStr(JKASSA4(i, 1))
        
        On Error GoTo 0
    
    End If
    
Next i

        'convert collection into array
        ReDim FECHAS_JKASSA(1 To fechasJkassa.Count)
        
        For i = 1 To fechasJkassa.Count
            
            FECHAS_JKASSA(i) = fechasJkassa(i)
        
        Next i

        'Etiquetas de rangos de fechas de archivos procesados
        If UBound(FECHAS_JKASSA) = 1 Then
        minFechJka = FECHAS_JKASSA(1)
        maxFechJka = FECHAS_JKASSA(1)
        
        Else

        minFechJka = WorksheetFunction.Min(FECHAS_JKASSA)
        maxFechJka = WorksheetFunction.Max(FECHAS_JKASSA)
        End If
        
        If maxFechJka = 0 And minFechJka = 0 Then
        
            fechasProcesJkassa = "sin fecha "
            
        ElseIf maxFechJka = minFechJka Then
        
            fechasProcesJkassa = Format(maxFechJka, "yyyymmdd") & " "
         
        ElseIf maxFechJka > minFechJka Then
        
            fechasProcesJkassa = Format(minFechJka, "yyyymmdd") & " - " & Format(maxFechJka, "yyyymmdd") & " "
            
        End If

''''''''''''''''''''''''''''AGREGAR INFORMACI|fffd|N'''''''''''''''''''''''''''''''''''
Application.Calculation = xlManual


rowRepSecc1 = 12
colRepSecc1 = 2
For i = 1 To sucursalesUnicas.Count
    
    Cells(rowRepSecc1, colRepSecc1) = sucursalesUnicas(i)
        'NOMBRE DE SUCURSAL
        For j = 1 To UBound(SUCURSALES)
        
            If Val(sucursalesUnicas(i)) = Val(SUCURSALES(j, 1)) Then
            
                Cells(rowRepSecc1, colRepSecc1 + 1) = SUCURSALES(j, 2)
                Cells(rowRepSecc1, colRepSecc1 - 1) = "ACTIVA"
                'FORMULAS
                Cells(rowRepSecc1, colRepSecc1 + 5).FormulaR1C1 = "=IF(AND(RC[-3]=RC[-2],RC[-3]=RC[-1],RC[-2]=RC[-1]),""CORRECTO"",""DIFERENCIA"")"
                
                Cells(rowRepSecc1, colRepSecc1 + 6).FormulaR1C1 = _
                "=IF(AND(RC[-4]=0,RC[-3]=0,RC[-2]=0),""Sin informaci|fffd|n"",IF(AND(RC[-4]="""",RC[-3]="""",RC[-2]=""""),""Sin informaci|fffd|n"",IF(AND(RC[-2]="""",RC[-3]="""",RC[-4]>0),""Sin comparaci|fffd|n"",IF(AND(RC[-4]="""",RC[-2]="""",RC[-3]>0),""Sin comparaci|fffd|n"",IF(AND(RC[-4]="""",RC[-3]="""",RC[-2]>0),""Sin comparaci|fffd|n"",IF(AND(RC[-4]="""",RC[-3]>0,RC[-2]>0,RC[-3]<>RC[-2]),""Arqueo"",I" & _
                "F(AND(RC[-4]=RC[-3],RC[-4]<>RC[-2]),""Reporte Saldos"",IF(AND(RC[-4]=RC[-2],RC[-4]<>RC[-3]),""Arqueo"",IF(AND(RC[-3]=RC[-2],RC[-4]<>RC[-3]),""Monitoreo Caja"","""")))))))))" & _
                ""
                
                Cells(rowRepSecc1, colRepSecc1 + 7).FormulaR1C1 = _
                "=IF(AND(RC[-5]=RC[-4],RC[-5]=RC[-3],RC[-4]=RC[-3]),RC[-5],IF(AND(RC[-4]=RC[-3],RC[-5]<>RC[-4],RC[-5]<>RC[-3]),RC[-4],IF(AND(RC[-5]="""",RC[-4]="""",RC[-3]>0),RC[-3],IF(AND(RC[-5]="""",RC[-3]="""",RC[-4]>0),RC[-4],IF(AND(RC[-4]="""",RC[-3]="""",RC[-5]>0),RC[-5],IF(AND(RC[-5]=0,RC[-4]=0,RC[-3]>0),RC[-3],IF(AND(RC[-5]=0,RC[-3]=0,RC[-4]>0),RC[-4],IF(AND(RC[-4]=0,RC[-3]=" & _
                "0,RC[-5]>0),RC[-5],IF(AND(RC[-5]>0,RC[-4]>0,RC[-5]=RC[-4],RC[-5]<>RC[-3],RC[-3]=0),RC[-5],IF(AND(RC[-5]>0,RC[-3]>0,RC[-5]=RC[-3],RC[-4]<>RC[-5],RC[-4]<>RC[-3]),RC[-5],IF(AND(RC[-4]="""",RC[-3]="""",RC[-5]>0),RC[-5],0)))))))))))" & _
                ""
                Exit For
            
            Else
                Cells(rowRepSecc1, colRepSecc1 - 1) = "CERRADA"
                
            End If
        
        Next j
        
        'ARREGLO 1
        For k = 1 To UBound(JKASSA1)
        
            If Val(sucursalesUnicas(i)) = Val(JKASSA1(k, 1)) Then
            
                Cells(rowRepSecc1, colRepSecc1 + 2) = JKASSA1(k, 4)
                
                Exit For
            
            End If
        
        Next k
        
        'ARREGLO 1
        For l = 1 To UBound(JKASSA2)
        
            If Val(sucursalesUnicas(i)) = Val(JKASSA2(l, 1)) Then
            
                Cells(rowRepSecc1, colRepSecc1 + 3) = JKASSA2(l, 4)
                
                Exit For
            
            End If
        
        Next l
        
        'ARREGLO 1
        For m = 1 To UBound(JKASSA3)
        
            If Val(sucursalesUnicas(i)) = Val(JKASSA3(m, 1)) Then
            
                Cells(rowRepSecc1, colRepSecc1 + 4) = JKASSA3(m, 4)
                
                Exit For
            
            End If
        
        Next m
        
        
    rowRepSecc1 = rowRepSecc1 + 1
    

Next i

Application.Calculation = xlAutomatic
'''''''''''''''''''ARREGLO CIFRAS HOMOLOGADAS'''''''''''''''''''''''''''''
row0SaldoHom = 12
totRowsSaldoHom = Range("A65000").End(xlUp).Row - row0SaldoHom + 1
contadorSaldosPublicar = 1

ReDim Preserve SALDOS_SUCURSALES(totRowsSaldoHom, 3)

For i = 1 To UBound(SALDOS_SUCURSALES)

    If Cells(row0SaldoHom, 1) = "ACTIVA" Then

        SALDOS_SUCURSALES(contadorSaldosPublicar, 1) = Cells(row0SaldoHom, 2)
        SALDOS_SUCURSALES(contadorSaldosPublicar, 2) = Cells(row0SaldoHom, 3)
        SALDOS_SUCURSALES(contadorSaldosPublicar, 3) = Cells(row0SaldoHom, 9)
        
        contadorSaldosPublicar = contadorSaldosPublicar + 1
        
    End If

    row0SaldoHom = row0SaldoHom + 1

Next i



'''NOMBRES DE CAMPOS LAYOUT
rowRepSecc1 = 11
Cells(rowRepSecc1, 1) = "Estatus"
Cells(rowRepSecc1, 2) = "Id sucursal"
Cells(rowRepSecc1, 3) = "Sucursal"
Cells(rowRepSecc1, 4) = "Monitoreo Caja"
Cells(rowRepSecc1, 5) = "Arqueo"
Cells(rowRepSecc1, 6) = "Reporte Saldos"
Cells(rowRepSecc1, 7) = "Consistencia"
Cells(rowRepSecc1, 8) = "Identificar Diferente"
Cells(rowRepSecc1, 9) = "Importe Homologado"

Cells(3, 1) = "CIFRAS CONTROL"

Cells(4, 1) = "Nombre Reporte"
Cells(4, 2) = "Fecha Reporte"
Cells(4, 3) = "Hora Reporte"
Cells(4, 4) = "Total Registros"
Cells(4, 5) = "Importe"
Cells(4, 6) = "N|fffd|mero Sucursales Activas"
Cells(4, 7) = "Importe Sucursales Activas"

Cells(5, 1) = "Monitoreo Caja"
Cells(6, 1) = "Arqueo"
Cells(7, 1) = "Reporte Saldos"
Cells(8, 1) = "TOTAL"

'fecha reportes
Cells(5, 2) = JKASSA1(2, 2)
Cells(6, 2) = JKASSA2(2, 2)
Cells(7, 2) = JKASSA3(2, 2)

'hora reportes
Cells(5, 3) = JKASSA1(2, 3)
Cells(6, 3) = JKASSA2(2, 3)
Cells(7, 3) = JKASSA3(2, 3)

''total registros reportes
Cells(5, 4) = contarJKASSA1
Cells(6, 4) = contarJKASSA2
Cells(7, 4) = contarJKASSA3

''total registros reportes
Cells(5, 5) = sumaJKASSA1
Cells(6, 5) = sumaJKASSA2
Cells(7, 5) = sumaJKASSA3


'total registros activas
Cells(5, 6).FormulaR1C1 = "=COUNTIFS(C[-5],""ACTIVA"")"
Cells(6, 6).FormulaR1C1 = "=COUNTIFS(C[-5],""ACTIVA"")"
Cells(7, 6).FormulaR1C1 = "=COUNTIFS(C[-5],""ACTIVA"")"
Cells(8, 6).FormulaR1C1 = "=COUNTIFS(C[-5],""ACTIVA"")"

'suma registros activas
Cells(5, 7).FormulaR1C1 = "=SUMIFS(R[6]C[-3]:R[995]C[-3],R11C1:R1000C1,""ACTIVA"")"
Cells(6, 7).FormulaR1C1 = "=SUMIFS(R[5]C[-2]:R[994]C[-2],R11C1:R1000C1,""ACTIVA"")"
Cells(7, 7).FormulaR1C1 = "=SUMIFS(R[4]C[-1]:R[993]C[-1],R11C1:R1000C1,""ACTIVA"")"
Cells(8, 7).FormulaR1C1 = "=SUMIFS(R[3]C[2]:R[992]C[2],R11C1:R1000C1,""ACTIVA"")"

    
'''''''''''''VALIDACI|fffd|N DE FECHAS DE REPORTES'''''''''''''''''''''''''''''''
fechaSaldoPublicar = CDate(JKASSA3(2, 2))
mesValCadena = Month(fechaSaldoPublicar)
diaValCadena = Day(fechaSaldoPublicar)

If mesValCadena < 10 Then
mesCadena = "0" & mesValCadena
Else
mesCadena = mesValCadena
End If

If diaValCadena < 10 Then
diaCadena = "0" & diaValCadena
Else
diaCadena = diaValCadena
End If

fechaCadena = Year(fechaSaldoPublicar) & mesCadena & diaCadena

'T|fffd|TULO DE REPORTE
Cells(1, 1) = "SALDOS FINALES SUCURSALES " & Chr(10) & Format(fechaSaldoPublicar, "DD MMMM YYYY")

'formato
Call CM7_1_FormatoReportesJkassaSaldosFinales

'guardar
    ChDir UnidadAsignada & "Pronostico\Base de Datos\Control cifras\Saldos Sucursales"
    ActiveWorkbook.SaveAs Filename:= _
        UnidadAsignada & "Pronostico\Base de Datos\Control cifras\Saldos Sucursales\" & fechaCadena & " Saldos Sucursales.xlsx" _
        , FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False
        
'''''''''''''''''''''''''''''''''''REGISTRO SALDOS INICIALES''''''''''''''''''''''''''''''''
'regresar a libro original
    Windows(cuSh).Activate
    'sh27 = "SALDO INICIAL"
    Sheets(sh27).Select



''''''''''''REGISTRAR PARA PUBLICAR'''''''''''''''''''''''''''''''
rowFechaPublicar = 2
row0Publicar = 5

'Limpiar rango
Call CM5_SaldoInicialLimpiar

'Fecha del reporte
Cells(rowFechaPublicar, 3) = fechaSaldoPublicar



'imprimir saldos
For i = 1 To UBound(SALDOS_SUCURSALES)

    Cells(row0Publicar, 1) = SALDOS_SUCURSALES(i, 1)
    Cells(row0Publicar, 2) = SALDOS_SUCURSALES(i, 2)
    Cells(row0Publicar, 3) = SALDOS_SUCURSALES(i, 3)

    row0Publicar = row0Publicar + 1

Next i

If SALDO_INICIAL.CheckBoxSaldosTxt.value = True Then
'registrar saldos iniciales
Call CM3_IngresarSaldosIniciales

End If


''''''''''''''''''''''''''''REPORTE TRANSACCIONES JKASSA''''''''''''''''''''''''''''
'sh6 = "Procesar"
Sheets(sh6).Select
Cells.Clear
rowJkassa4 = 2

For i = 1 To UBound(JKASSA4)
    
    If JKASSA4(i, 4) = "MXN" Then
    
        Cells(rowJkassa4, 1) = Day(JKASSA4(i, 1)) & "-" & Month(JKASSA4(i, 1)) & "-" & Year(JKASSA4(i, 1))
        Cells(rowJkassa4, 2) = JKASSA4(i, 2)
        Cells(rowJkassa4, 3) = Replace(JKASSA4(i, 3), Chr(34), "", 1)
        Cells(rowJkassa4, 4) = JKASSA4(i, 4)
        Cells(rowJkassa4, 5) = Replace(JKASSA4(i, 5), Chr(34), "", 1)
        Cells(rowJkassa4, 6) = Replace(JKASSA4(i, 6), Chr(34), "", 1)
        Cells(rowJkassa4, 7) = Replace(JKASSA4(i, 7), Chr(34), "", 1)
        Cells(rowJkassa4, 8) = Replace(JKASSA4(i, 8), Chr(34), "", 1)
        Cells(rowJkassa4, 9) = Replace(JKASSA4(i, 9), Chr(34), "", 1)
        Cells(rowJkassa4, 10) = Replace(JKASSA4(i, 10), Chr(34), "", 1)
        Cells(rowJkassa4, 11) = Replace(JKASSA4(i, 11), Chr(34), "", 1)
        Cells(rowJkassa4, 12) = Replace(JKASSA4(i, 12), Chr(34), "", 1)
        Cells(rowJkassa4, 13) = Replace(JKASSA4(i, 13), Chr(34), "", 1)
        Cells(rowJkassa4, 14) = Replace(JKASSA4(i, 14), Chr(34), "", 1)
        Cells(rowJkassa4, 15) = Replace(JKASSA4(i, 15), Chr(34), "", 1)
        Cells(rowJkassa4, 16) = Replace(JKASSA4(i, 16), Chr(34), "", 1)
        Cells(rowJkassa4, 17) = Replace(JKASSA4(i, 17), Chr(34), "", 1)
        Cells(rowJkassa4, 18) = Replace(JKASSA4(i, 18), Chr(34), "", 1)
        Cells(rowJkassa4, 19) = Replace(JKASSA4(i, 19), Chr(34), "", 1)
        Cells(rowJkassa4, 20) = Replace(JKASSA4(i, 20), Chr(34), "", 1)
        Cells(rowJkassa4, 21) = Replace(JKASSA4(i, 21), Chr(34), "", 1)
        Cells(rowJkassa4, 22) = Replace(JKASSA4(i, 22), Chr(34), "", 1)
        Cells(rowJkassa4, 23) = Replace(JKASSA4(i, 23), Chr(34), "", 1)
        Cells(rowJkassa4, 24) = Replace(JKASSA4(i, 24), Chr(34), "", 1)
        Cells(rowJkassa4, 25) = Replace(JKASSA4(i, 25), Chr(34), "", 1)
        Cells(rowJkassa4, 26) = Replace(JKASSA4(i, 26), Chr(34), "", 1)
        Cells(rowJkassa4, 27) = Replace(JKASSA4(i, 27), Chr(34), "", 1)
        Cells(rowJkassa4, 28) = Replace(JKASSA4(i, 28), Chr(34), "", 1)
        Cells(rowJkassa4, 29) = Replace(JKASSA4(i, 29), Chr(34), "", 1)
        Cells(rowJkassa4, 30) = Replace(JKASSA4(i, 30), Chr(34), "", 1)
        Cells(rowJkassa4, 31) = Replace(JKASSA4(i, 31), Chr(34), "", 1)
        Cells(rowJkassa4, 32) = Replace(JKASSA4(i, 32), Chr(34), "", 1)
        Cells(rowJkassa4, 33) = Format(JKASSA4(i, 1), "#") & JKASSA4(i, 3)
        
        rowJkassa4 = rowJkassa4 + 1
        
    End If
    
Next i


'layout
Cells(1, 1) = "fecha"
Cells(1, 2) = "sucursal"
Cells(1, 3) = "IdSucursal"
Cells(1, 4) = "moneda"
Cells(1, 5) = "saldoInicial"
Cells(1, 6) = "NroTrnPagos"
Cells(1, 7) = "ImportePagos"
Cells(1, 8) = "NroTrnRetiros"
Cells(1, 9) = "ImporteRetiros"
Cells(1, 10) = "NroTrnPagosODP"
Cells(1, 11) = "ImportePagosODP"
Cells(1, 12) = "NroTrnDepositos"
Cells(1, 13) = "ImporteDepositos"
Cells(1, 14) = "NroTrnPagoServicios"
Cells(1, 15) = "ImportePagoServicios"
Cells(1, 16) = "NroTrnPagoSeguros"
Cells(1, 17) = "ImportePagoSeguros"
Cells(1, 18) = "SubtotalNroTrn"
Cells(1, 19) = "SubtotalImporte"
Cells(1, 20) = "NroTrnEntradasSucursal"
Cells(1, 21) = "ImporteEntradasSucursal"
Cells(1, 22) = "NroTrnSalidasSucursal"
Cells(1, 23) = "ImporteSalidasSucursal"
Cells(1, 24) = "NroTrnFaltantes"
Cells(1, 25) = "ImporteFaltantes"
Cells(1, 26) = "NroTrnRecuperaFaltantes"
Cells(1, 27) = "ImporteRecuperaFaltantes"
Cells(1, 28) = "NroTrnSobrantes"
Cells(1, 29) = "ImporteSobrantes"
Cells(1, 30) = "NroTrnEntregaSobrantes"
Cells(1, 31) = "ImporteEntregaSobrantes"
Cells(1, 32) = "NroTrnTotal"
Cells(1, 33) = "ImportellaveFechaIdSuc"

''quitar "
'Range(Cells(1, 1), Cells(30, UBound(JKASSA4) + 1)).Select
'    Selection.Replace What:="""", Replacement:="", LookAt:=xlPart, _
'        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
'        ReplaceFormat:=False
        
'armar reporte de totales JKASSA Y AVANSOFT
Call EA1_AgruparPorColumnas(sumaAvansoftImporte)

'guardar archivo de CONTROL DE CIFRAS AVANSOFT - JKASSA
'guardar
    ChDir UnidadAsignada & "Pronostico\Base de Datos\Control cifras\Reportes Operaciones"
    ActiveWorkbook.SaveAs Filename:= _
        UnidadAsignada & "Pronostico\Base de Datos\Control cifras\Reportes Operaciones\" & fechaCadena & " Cifras Control Reportes.xlsx" _
        , FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False
        

'REGRESAR A LIBRO MACRO
Windows(cuSh).Activate
'sh6 = "Procesar"
Sheets(sh6).Select


'ARCHIVO ADICIONAL
ActiveSheet.Copy
ActiveSheet.Select
ActiveSheet.Name = "Operaciones JKASSA"

'Guardar como txt con tab
'    ChDir UnidadAsignada & Mid(RutaPronosticoRepositorioBD, 1, Len(RutaPronosticoRepositorioBD) - 1)
'    ActiveWorkbook.SaveAs Filename:= _
'        UnidadAsignada & RutaPronosticoRepositorioBD & "JkassaDiaDiario.txt", FileFormat:= _
'        xlText, CreateBackup:=False
'
    ChDir UnidadAsignada & "Reportes_SAP" & "\" & "JKASSA" & "\" & nombreCarpetaJkassa & "\"
    ActiveWorkbook.SaveAs Filename:= _
        UnidadAsignada & "Reportes_SAP" & "\" & "JKASSA" & "\" & nombreCarpetaJkassa & "\" & fechasProcesJkassa & " Jkassa Reporte Transacciones.txt", FileFormat:= _
        xlText, CreateBackup:=False

ActiveWorkbook.Close False

'REGRESAR A LIBRO MACRO
Windows(cuSh).Activate
'sh6 = "Procesar"
Sheets(sh6).Select


Cells.Clear
rowAvansoft1 = 2

For i = 1 To UBound(AVANSOFT1)

    Cells(rowAvansoft1, 1) = Day(AVANSOFT1(i, 1)) & "-" & Month(AVANSOFT1(i, 1)) & "-" & Year(AVANSOFT1(i, 1))
    Cells(rowAvansoft1, 2) = AVANSOFT1(i, 2)
    Cells(rowAvansoft1, 3) = Format(AVANSOFT1(i, 1), "#") & AVANSOFT1(i, 2)
    Cells(rowAvansoft1, 4) = AVANSOFT1(i, 4)
    Cells(rowAvansoft1, 5) = AVANSOFT1(i, 5)
    Cells(rowAvansoft1, 6) = AVANSOFT1(i, 6)
    
    rowAvansoft1 = rowAvansoft1 + 1
    
Next i


'layout
Cells(1, 1) = "fecha"
Cells(1, 2) = "IdSucursal"
Cells(1, 3) = "ImportellaveFechaIdSuc"
Cells(1, 4) = "sucursal"
Cells(1, 5) = "NroTrnRemesas"
Cells(1, 6) = "ImporteRemesas"

'ordenar
rowTotAvansoft = Range("A65000").End(xlUp).Row

    ActiveWorkbook.ActiveSheet.Sort.SortFields.Clear
    ActiveWorkbook.ActiveSheet.Sort.SortFields.Add2 Key:= _
        Range(Cells(2, 2), Cells(rowTotAvansoft, 2)), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption _
        :=xlSortNormal
    ActiveWorkbook.ActiveSheet.Sort.SortFields.Add2 Key:= _
        Range(Cells(2, 6), Cells(rowTotAvansoft, 6)), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption _
        :=xlSortNormal
    With ActiveWorkbook.ActiveSheet.Sort
        .SetRange Range(Cells(1, 1), Cells(rowTotAvansoft, 6))
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    
'ARCHIVO ADICIONAL
ActiveSheet.Copy
ActiveSheet.Select
ActiveSheet.Name = "Operaciones AVANSOFT"


'Guardar como txt con tab
'    ChDir UnidadAsignada & Mid(RutaPronosticoRepositorioBD, 1, Len(RutaPronosticoRepositorioBD) - 1)
'    ActiveWorkbook.SaveAs Filename:= _
'        UnidadAsignada & RutaPronosticoRepositorioBD & "AvansoftDiaDiario.txt", FileFormat:= _
'        xlText, CreateBackup:=False
        
    ChDir UnidadAsignada & "Reportes_SAP" & "\" & "Avansoft" & "\" & nombreCarpetaAvansoft & "\"
    ActiveWorkbook.SaveAs Filename:= _
        UnidadAsignada & "Reportes_SAP" & "\" & "Avansoft" & "\" & nombreCarpetaAvansoft & "\" & fechasProcesAvansoft & " Avansoft Reporte Transacciones.txt", FileFormat:= _
        xlText, CreateBackup:=False
        
        
ActiveWorkbook.Close False

'REGRESAR A LIBRO MACRO
Windows(cuSh).Activate
'sh27 = "SALDO INICIAL"
Sheets(sh27).Select





hora2 = Now()

MsgBox "Proceso finalizado" & Chr(10) & Format(hora2 - hora1, "hh:mm:ss")



End Sub

Sub CM7_1_FormatoReportesJkassaSaldosFinales()
'
Dim row0, col0, totCol As Integer
Dim totRows As Long

row0 = 12
col0 = 1
totCol = 9

totRows = Range("A65000").End(xlUp).Row

    Columns("A:A").ColumnWidth = 16
    Columns("C:C").Select
    Selection.ColumnWidth = 25.71
    Range("D:D,E:E,F:F,I:I").Select
    Selection.ColumnWidth = 17.86
    Columns("G:G").Select
    Selection.ColumnWidth = 17.86
    Columns("H:H").Select
    Selection.ColumnWidth = 21.29
    
    Range("A1:I2").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    Selection.Font.Bold = True
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 7733477
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    Range("A3").Select
    Selection.Font.Bold = True
    Range("A4:G4,A11:I11").Select
    Range("A11").Activate
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249977111117893
        .PatternTintAndShade = 0
    End With
    Selection.Font.Bold = True
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    Range("A8:G8").Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 49407
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Selection.Font.Bold = True
    With Selection.Font
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
    End With
    
    
    Range("A5:A8").Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    Range("B5:B8").Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.NumberFormat = "m/d/yyyy"
    Range("C5:C8").Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    Selection.NumberFormat = "[$-x-systime]h:mm:ss AM/PM"
    Range("D5:D8").Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    Selection.NumberFormat = "#,##0"
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Range("E5:E8").Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    Selection.Style = "Currency"
    Range("F5:F8").Select
    Selection.NumberFormat = "#,##0"
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Range("G5:G8").Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    Selection.Style = "Currency"
    
'ESTATUS
    Range(Cells(row0, col0), Cells(totRows, col0)).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With


'ID SUCURSAL
    Range(Cells(row0, col0 + 1), Cells(totRows, col0 + 2)).Select
    
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.NumberFormat = "General"


'ID SUCURSAL
    Range(Cells(row0, col0 + 3), Cells(totRows, col0 + 5)).Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    Selection.Style = "Currency"

'ID SUCURSAL
    Range(Cells(row0, col0 + 6), Cells(totRows, col0 + 7)).Select
    
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With

'ID SUCURSAL
    Range(Cells(row0, col0 + 8), Cells(totRows, col0 + 8)).Select
    Selection.Style = "Currency"
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With

    Range("A1:I2").Select
    Range("1:1").Select
    Selection.RowHeight = 23.25
    
    Selection.Font.size = 14
    
''ORDENAR
ActiveWorkbook.ActiveSheet.Sort.SortFields.Clear
    ActiveWorkbook.ActiveSheet.Sort.SortFields.Add Key:=Range(Cells(row0, col0), Cells(totRows, col0) _
        ), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ActiveWorkbook.ActiveSheet.Sort.SortFields.Add Key:=Range(Cells(row0, 7), Cells(totRows, 7) _
        ), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:=xlSortNormal
    ActiveWorkbook.ActiveSheet.Sort.SortFields.Add Key:=Range(Cells(row0, totCol), Cells(totRows, totCol) _
        ), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:=xlSortNormal
    With ActiveWorkbook.ActiveSheet.Sort
        .SetRange Range(Cells(row0 - 1, col0), Cells(totRows, totCol))
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    
End Sub




Sub CM7_B_ReportesJkassaSaldosFinales()

Call VariablesGlobales

'Call CA00_MacroCrearCarpetas


Dim cuSh, nwSh, tmSh, carpeta, AmPm, carpetaHora, fechaArchivo, fechaSaldo, diaLabel, mesLabel As String
Dim repJkassa1, repJkassa2, repJkassa3, repJkassa4 As String
Dim repAvansoft1 As String
Dim repJkassa1Range, repJkassa2Range, repJkassa3Range, repJkassa4Range  As Range
Dim repJkassa1Fecha, repJkassa2Fecha, repJkassa3Fecha, repJkassa4Fecha  As String
Dim repAvansoft1Fecha, repAvansoft1Hora As String
Dim repJkassa1Hora, repJkassa2Hora, repJkassa3Hora, repJkassa4Hora  As String
Dim punteroJK1, punteroJK2, punteroJK3, punteroJK4 As Integer
Dim punteroAS1 As Integer
Dim row0JK1, row0JK2, row0JK3, row0JK4 As Integer
Dim row0AS1 As Integer
Dim totRowsJK1, totRowsJK2, totRowsJK3, totRowsJK4 As Long
Dim contadorJK1, contadorJK2, contadorJK3, contadorJK4 As Long
Dim totRowsAS1M, contadorAS1 As Long
Dim hora1, hora2 As Date
Dim punteroCatSuc, punteroCatSucExcep, contadorCatSuc As Integer
Dim numCatSuc As Long
Dim row0SaldoHom, totRowsSaldoHom As Integer
Dim rowFechaPublicar, row0Publicar As Integer
Dim fechaSaldoPublicar As Date

hora1 = Now()


Dim JKASSA4() As Variant
Dim AVANSOFT1() As Variant
Dim SUCURSALES() As Variant
Dim SALDOS_SUCURSALES() As Variant
Dim SUCURSALES_EXCEP_AVANSOFT() As Variant
Dim sucursalesUnicas As Collection
Dim sumaJKASSA1, sumaJKASSA2, sumaJKASSA3, sumaJKASSA4 As Currency
Dim contarJKASSA1, contarJKASSA2, contarJKASSA3, contarJKASSA4 As Integer


'sh27 = "SALDO INICIAL"
'libro principal
cuSh = ActiveWorkbook.Name
'sh27 = "SALDO INICIAL"
Sheets(sh27).Select
fechaSaldo = Range("C2").value
'rutaRepositorioPersonal = Range("C3").value


'Reporte JKASSA Resumen de Operaciones en Sucursal
'Etiqueta en B2
repJkassa4 = "Resumen de operaciones en sucursal"

'Avansoft
repAvansoft1 = "Resumen de operaciones"


Set repJkassa4Range = Range("B2")
Set repAvansoft1Range = Range("A4")


'primera l|fffd|nea de registros
row0JK4 = 17
row0AS1 = 23

' columna para medir longitud
punteroJK4 = 7
punteroAS1 = 19

'contador arreglo
contadorJK4 = 1
contadorAS1 = 1

'Inicializar suma de arreglos
sumaJKASSA4 = 0
sumaAvansoft1 = 0

'''''''''''''''''''''''''''''SUCURSALES CAT|fffd|LOGO'''''''''''''''''''''''''''''
'sh4 = "Info. Gral."
punteroCatSuc = 21

contadorCatSuc = 2
Sheets(sh4).Select

numCatSuc = Cells(2, punteroCatSuc).End(xlDown).Row - 1

ReDim SUCURSALES(numCatSuc, 2)

For i = 1 To UBound(SUCURSALES)
    SUCURSALES(i, 1) = Cells(contadorCatSuc, punteroCatSuc)
    SUCURSALES(i, 2) = Cells(contadorCatSuc, punteroCatSuc + 1)
    
    contadorCatSuc = contadorCatSuc + 1
    
Next i

'Excepciones de nombre en Avansoft
punteroCatSucExcep = 75
contadorCatSuc = 2
numCatSuc = Cells(2, punteroCatSucExcep).End(xlDown).Row - 1

ReDim Preserve SUCURSALES_EXCEP_AVANSOFT(numCatSuc, 3)

For i = 1 To UBound(SUCURSALES_EXCEP_AVANSOFT)

    SUCURSALES_EXCEP_AVANSOFT(i, 1) = Cells(contadorCatSuc, punteroCatSucExcep)
    SUCURSALES_EXCEP_AVANSOFT(i, 2) = Cells(contadorCatSuc, punteroCatSucExcep + 1)
    SUCURSALES_EXCEP_AVANSOFT(i, 3) = Cells(contadorCatSuc, punteroCatSucExcep + 2)
    
    contadorCatSuc = contadorCatSuc + 1
Next i



''Agregar libro
'    Workbooks.Add
'    Range("a1").Select
'    nwSh = ActiveWorkbook.Name
'
ChDrive (UnidadAsignada)
ChDir (UnidadAsignada & "\" & rutaRepositorioPersonal)
archi = Dir(UnidadAsignada & "\" & rutaRepositorioPersonal & "\" & "*")



 
Do While archi <> ""
     'abrir
     Workbooks.Open Filename:=UnidadAsignada & "\" & rutaRepositorioPersonal & "\" & archi
     
    tmSh = ActiveWorkbook.Name
    
            'IDENTIFICAR TIPO DE REPORTE
            ''''''''''''''''''''REPORTE DE TRANSACCIONES JKASSA''''''''''''''''''''''''''''''''''
            
            If Range("B2").value = repJkassa4 Then
                'FECHA VALOR
                repJkassa4Fecha = Range("D10").value
                repJkassa4Hora = Trim(Left(Range("AM4").value, 8))
                
                'dia etiqueta
                If Day(CDate(repJkassa4Fecha)) < 10 Then
                    diaJkassa4 = "0" & Day(CDate(repJkassa4Fecha))
                    
                Else
                    
                    diaJkassa4 = Day(CDate(repJkassa4Fecha))
                    
                End If
                
                'mes valor etiqueta
                If Month(CDate(repJkassa4Fecha)) < 10 Then
                    mesValJkassa4 = "0" & Month(CDate(repJkassa4Fecha))
                    
                Else
                    
                    mesValJkassa4 = Month(CDate(repJkassa4Fecha))
                    
                End If
                
                'a|fffd|o etiqueta
                anioJkassa4 = Right(Year(CDate(repJkassa4Fecha)), 2)
                
                'mes nombre etiqueta
                Select Case Month(CDate(repJkassa4Fecha))
                Case 1
                mesJkassa4 = "Enero"
                Case 2
                mesJkassa4 = "Febrero"
                Case 3
                mesJkassa4 = "Marzo"
                Case 4
                mesJkassa4 = "Abril"
                Case 5
                mesJkassa4 = "Mayo"
                Case 6
                mesJkassa4 = "Junio"
                Case 7
                mesJkassa4 = "Julio"
                Case 8
                mesJkassa4 = "Agosto"
                Case 9
                mesJkassa4 = "Septiembre"
                Case 10
                mesJkassa4 = "Octubre"
                Case 11
                mesJkassa4 = "Noviembre"
                Case 12
                mesJkassa4 = "Diciembre"
                End Select
                
                nombreCarpetaJkassa = mesValJkassa4 & ". " & mesJkassa4 & " " & Year(CDate(repJkassa4Fecha))
                nombreArchivoJkassa = "JKASSA_" & anioJkassa4 & mesValJkassa4 & diaJkassa4
                
                
                ''''''''''''''''''''''''ARREGLO JKASSA 4''''''''''''''''''''''''''''''''
                'NUMERO DE REGISTROS
                totRowsJK4 = Cells(65000, punteroJK4).End(xlUp).Row - row0JK4 + 1
                'rowsArray3 = totRowsJK3 + UBound(JKASSA3)
                ReDim Preserve JKASSA4(totRowsJK4, 33)
                
                'ID SUC COLUMNA 7
                
                For i = 1 To totRowsJK4
                    
                    If Cells(row0JK4, 9) = "MXN" Then
                        JKASSA4(contadorJK4, 1) = Cells(row0JK4, 6)
                        JKASSA4(contadorJK4, 2) = Cells(row0JK4, 7)
                        JKASSA4(contadorJK4, 3) = Cells(row0JK4, 8)
                        JKASSA4(contadorJK4, 4) = Cells(row0JK4, 9)
                        JKASSA4(contadorJK4, 5) = Cells(row0JK4, 10)
                        JKASSA4(contadorJK4, 6) = Cells(row0JK4, 11)
                        JKASSA4(contadorJK4, 7) = Cells(row0JK4, 12)
                        JKASSA4(contadorJK4, 8) = Cells(row0JK4, 13)
                        JKASSA4(contadorJK4, 9) = Cells(row0JK4, 14)
                        JKASSA4(contadorJK4, 10) = Cells(row0JK4, 15)
                        JKASSA4(contadorJK4, 11) = Cells(row0JK4, 16)
                        JKASSA4(contadorJK4, 12) = Cells(row0JK4, 17)
                        JKASSA4(contadorJK4, 13) = Cells(row0JK4, 18)
                        JKASSA4(contadorJK4, 14) = Cells(row0JK4, 19)
                        JKASSA4(contadorJK4, 15) = Cells(row0JK4, 20)
                        JKASSA4(contadorJK4, 16) = Cells(row0JK4, 21)
                        JKASSA4(contadorJK4, 17) = Cells(row0JK4, 22)
                        JKASSA4(contadorJK4, 18) = Cells(row0JK4, 23)
                        JKASSA4(contadorJK4, 19) = Cells(row0JK4, 24)
                        JKASSA4(contadorJK4, 20) = Cells(row0JK4, 25)
                        JKASSA4(contadorJK4, 21) = Cells(row0JK4, 26)
                        JKASSA4(contadorJK4, 22) = Cells(row0JK4, 27)
                        JKASSA4(contadorJK4, 23) = Cells(row0JK4, 28)
                        JKASSA4(contadorJK4, 24) = Cells(row0JK4, 29)
                        JKASSA4(contadorJK4, 25) = Cells(row0JK4, 30)
                        JKASSA4(contadorJK4, 26) = Cells(row0JK4, 31)
                        JKASSA4(contadorJK4, 27) = Cells(row0JK4, 32)
                        JKASSA4(contadorJK4, 28) = Cells(row0JK4, 33)
                        JKASSA4(contadorJK4, 29) = Cells(row0JK4, 34)
                        JKASSA4(contadorJK4, 30) = Cells(row0JK4, 35)
                        JKASSA4(contadorJK4, 31) = Cells(row0JK4, 36)
                        JKASSA4(contadorJK4, 32) = Cells(row0JK4, 37)
                        'LLAVE

                
                    
                    contadorJK4 = contadorJK4 + 1
                    
                    End If
                    
                    row0JK4 = row0JK4 + 1
                Next i

                'cerrar
                Windows(tmSh).Activate
                ActiveWorkbook.Close False
                
'                Windows(nwSh).Activate
'                Sheets(Sheets.Count).Select

                'COPIAR ARCHIVO EN RUTA DE REPORTES
                FileCopy UnidadAsignada & rutaRepositorioPersonal & "\" & archi, UnidadAsignada & "Reportes_SAP" & "\" & "JKASSA" & "\" & nombreCarpetaJkassa & "\" & nombreArchivoJkassa & ".xls"


            ''''''''''''''''''''AVANSOFT TRANSACCIONES''''''''''''''''''''''''''''''''''
            
            ElseIf Range("A4").value = repAvansoft1 Then
                'FECHA VALOR
                repAvansoft1Fecha = Range("A1").value
                repAvansoft1Hora = Range("A13").value
                
                'dia etiqueta
                If Day(CDate(repAvansoft1Fecha)) < 10 Then
                    diaAvansoft1 = "0" & Day(CDate(repAvansoft1Fecha))
                    
                Else
                    
                    diaAvansoft1 = Day(CDate(repAvansoft1Fecha))
                    
                End If
                
                'mes valor etiqueta
                If Month(CDate(repAvansoft1Fecha)) < 10 Then
                    mesValAvansoft1 = "0" & Month(CDate(repAvansoft1Fecha))
                    
                Else
                    
                    mesValAvansoft1 = Month(CDate(repAvansoft1Fecha))
                    
                End If
                
                'a|fffd|o etiqueta
                anioAvansoft1 = Right(Year(CDate(repAvansoft1Fecha)), 2)
                
                'mes nombre etiqueta
                Select Case Month(CDate(repAvansoft1Fecha))
                Case 1
                mesAvansoft1 = "Enero"
                Case 2
                mesAvansoft1 = "Febrero"
                Case 3
                mesAvansoft1 = "Marzo"
                Case 4
                mesAvansoft1 = "Abril"
                Case 5
                mesAvansoft1 = "Mayo"
                Case 6
                mesAvansoft1 = "Junio"
                Case 7
                mesAvansoft1 = "Julio"
                Case 8
                mesAvansoft1 = "Agosto"
                Case 9
                mesAvansoft1 = "Septiembre"
                Case 10
                mesAvansoft1 = "Octubre"
                Case 11
                mesAvansoft1 = "Noviembre"
                Case 12
                mesAvansoft1 = "Diciembre"
                End Select
                
                nombreCarpetaAvansoft = mesValAvansoft1 & ". " & mesAvansoft1 & " " & Year(CDate(repAvansoft1Fecha))
                nombreArchivoAvansoft = anioAvansoft1 & mesValAvansoft1 & diaAvansoft1
                
                
                ''''''''''''''''''''''''ARREGLO AVANSOFT 1''''''''''''''''''''''''''''''''
                'NUMERO DE REGISTROS
                totRowsAS1 = Cells(65000, punteroAS1).End(xlUp).Row - row0AS1 + 1
                
                'SUMA REGISTRADA EN ARCHIVO
                sumaAvansoftImporte = Cells(65000, punteroAS1).End(xlUp).value
                
                'rowsArray3 = totRowsJK3 + UBound(Avansoft1)
                ReDim Preserve AVANSOFT1(totRowsAS1, 6)
                
                'ID SUC COLUMNA 9, IMPORTE COLUMNA 13, HORA "O3"
                
                For i = 1 To totRowsAS1
                    'FECHA
                    AVANSOFT1(contadorAS1, 1) = repAvansoft1Fecha
                    'ID
                    
                    For j = 1 To UBound(SUCURSALES)
                        If SUCURSALES(j, 2) = Cells(row0AS1, 1) Then
                        
                        AVANSOFT1(contadorAS1, 2) = SUCURSALES(j, 1)
                        
                        ElseIf j = UBound(SUCURSALES) Then
                        
                            For k = 1 To UBound(SUCURSALES_EXCEP_AVANSOFT)
                            If SUCURSALES_EXCEP_AVANSOFT(k, 1) = Cells(row0AS1, 1) Then

                            AVANSOFT1(contadorAS1, 2) = SUCURSALES_EXCEP_AVANSOFT(k, 2)
                            Exit For
                            
                            End If
                            
                            Next k
                        
                        End If
                        
                    Next j
                    
                    'LLAVE FECHA - ID
                    AVANSOFT1(contadorAS1, 3) = repAvansoft1Fecha & AVANSOFT1(contadorAS1, 2)
                    'SUCURSAL
                    AVANSOFT1(contadorAS1, 4) = Cells(row0AS1, 1)
                    'NO TX
                    AVANSOFT1(contadorAS1, 5) = Cells(row0AS1, 18)
                    'IMPORTE
                    AVANSOFT1(contadorAS1, 6) = Cells(row0AS1, 19)
                    
'                    'suma del arreglo
                    If Val(Cells(row0AS1, 18)) > 0 Then

                        sumaAvansoft1 = sumaAvansoft1 + CCur(Cells(row0AS1, 19))
                        contarAvansoft1 = contarAvansoft1 + 1

                    End If
                    
                    contadorAS1 = contadorAS1 + 1
                    row0AS1 = row0AS1 + 1
                Next i
                

                'copiar hoja
'                Sheets(1).Select
'                ActiveSheet.Name = "Reporte Saldos"
'                'Sheets(1).Copy After:=Workbooks(nwSh).Sheets(Sheets.Count)
'                Sheets(1).Copy After:=Workbooks(nwSh).Sheets(2)
                

                
                'cerrar
                Windows(tmSh).Activate
                ActiveWorkbook.Close False
                
'                Windows(nwSh).Activate
'                Sheets(Sheets.Count).Select
                
                 'COPIAR ARCHIVO EN RUTA DE REPORTES
''                MsgBox UnidadAsignada & rutaRepositorioPersonal & "\" & archi
'                MsgBox UnidadAsignada & "Reportes_SAP" & "\" & "Avansoft" & "\" & nombreCarpetaAvansoft & "\" & nombreArchivoAvansoft & ".xlsx"

                FileCopy UnidadAsignada & rutaRepositorioPersonal & "\" & archi, UnidadAsignada & "Reportes_SAP" & "\" & "Avansoft" & "\" & nombreCarpetaAvansoft & "\" & nombreArchivoAvansoft & ".xlsx"
'
               
                
            Else

'                'copiar hoja
'                Sheets(1).Select
'
'                Sheets(1).Copy After:=Workbooks(nwSh).Sheets(Sheets.Count)
                'cerrar
                Windows(tmSh).Activate
                ActiveWorkbook.Close False
                
'                Windows(nwSh).Activate
'                Sheets(Sheets.Count).Select
            End If

    
    archi = Dir()
    
Loop




                '

'''''''''''agregar informaci|fffd|n a arreglos vacios''''''''''''''''

If (Not JKASSA4) = -1 Then
ReDim Preserve JKASSA4(1, 33)
JKASSA4(1, 1) = 0
JKASSA4(1, 2) = 0
JKASSA4(1, 3) = 0
JKASSA4(1, 4) = 0
JKASSA4(1, 5) = 0
JKASSA4(1, 6) = 0
JKASSA4(1, 7) = 0
JKASSA4(1, 8) = 0
JKASSA4(1, 9) = 0
JKASSA4(1, 10) = 0
JKASSA4(1, 11) = 0
JKASSA4(1, 12) = 0
JKASSA4(1, 13) = 0
JKASSA4(1, 14) = 0
JKASSA4(1, 15) = 0
JKASSA4(1, 16) = 0
JKASSA4(1, 17) = 0
JKASSA4(1, 18) = 0
JKASSA4(1, 19) = 0
JKASSA4(1, 20) = 0
JKASSA4(1, 21) = 0
JKASSA4(1, 22) = 0
JKASSA4(1, 23) = 0
JKASSA4(1, 24) = 0
JKASSA4(1, 25) = 0
JKASSA4(1, 26) = 0
JKASSA4(1, 27) = 0
JKASSA4(1, 28) = 0
JKASSA4(1, 29) = 0
JKASSA4(1, 30) = 0
JKASSA4(1, 31) = 0
JKASSA4(1, 32) = 0
JKASSA4(1, 33) = 0
End If

If (Not AVANSOFT1) = -1 Then
ReDim Preserve AVANSOFT1(2, 6)
AVANSOFT1(1, 1) = 0
AVANSOFT1(1, 2) = 0
AVANSOFT1(1, 3) = 0
AVANSOFT1(1, 4) = 0
AVANSOFT1(1, 5) = 0
AVANSOFT1(1, 6) = 0
AVANSOFT1(2, 1) = 0
AVANSOFT1(2, 2) = 0
AVANSOFT1(2, 3) = 0
AVANSOFT1(2, 4) = 0
AVANSOFT1(2, 5) = 0
AVANSOFT1(2, 6) = 0
End If





'''''''''''''''''''''Fechas reportes AVANSOFT'''''''''''''''''''''''
Set fechasAvansoft = New Collection

For i = 1 To UBound(AVANSOFT1)

    If AVANSOFT1(i, 1) > 0 Then
    
        On Error Resume Next
        
        fechasAvansoft.Add AVANSOFT1(i, 1), CStr(AVANSOFT1(i, 1))
        
        On Error GoTo 0
    
    End If
    
Next i

        'convert collection into array
        ReDim FECHAS_AVANSOFT(1 To fechasAvansoft.Count)
        
        For i = 1 To fechasAvansoft.Count
            
            FECHAS_AVANSOFT(i) = fechasAvansoft(i)
        
        Next i
        
        'Etiquetas de rangos de fechas de archivos procesados
        If UBound(FECHAS_AVANSOFT) = 1 Then
        minFechAvan = FECHAS_AVANSOFT(1)
        maxFechAvan = FECHAS_AVANSOFT(1)
        
        Else
        
        minFechAvan = WorksheetFunction.Min(FECHAS_AVANSOFT)
        maxFechAvan = WorksheetFunction.Max(FECHAS_AVANSOFT)
        
        End If

        
        
        
        If maxFechAvan = 0 And minFechAvan = 0 Then
        
            fechasProcesAvansoft = "sin fecha "
            
        ElseIf maxFechAvan = minFechAvan Then
        
            fechasProcesAvansoft = Format(WorksheetFunction.Max(minFechAvan, maxFechAvan), "yyyymmdd") & " "
         
        ElseIf maxFechAvan > minFechAvan Then
        
            fechasProcesAvansoft = Format(minFechAvan, "yyyymmdd") & " - " & Format(maxFechAvan, "yyyymmdd") & " "
            
        End If

        
'''''''''''''''''''''Fechas reportes JKASSA'''''''''''''''''''''''
Set fechasJkassa = New Collection

For i = 1 To UBound(JKASSA4)

    If JKASSA4(i, 1) > 0 Or JKASSA4(i, 1) <> "" Then
    
        On Error Resume Next
        
        fechasJkassa.Add JKASSA4(i, 1), CStr(JKASSA4(i, 1))
        
        On Error GoTo 0
    
    End If
    
Next i

        'convert collection into array
        ReDim FECHAS_JKASSA(1 To fechasJkassa.Count)
        
        For i = 1 To fechasJkassa.Count
            
            FECHAS_JKASSA(i) = fechasJkassa(i)
        
        Next i

        'Etiquetas de rangos de fechas de archivos procesados
        If UBound(FECHAS_JKASSA) = 1 Then

        minFechJka = FECHAS_JKASSA(1)
        maxFechJka = FECHAS_JKASSA(1)
        
        Else

        minFechJka = WorksheetFunction.Min(FECHAS_JKASSA)
        maxFechJka = WorksheetFunction.Max(FECHAS_JKASSA)
        End If
        

        
        If maxFechJka = 0 And minFechJka = 0 Then
        
            fechasProcesJkassa = "sin fecha "
            
        ElseIf maxFechJka = minFechJka Then
        
            fechasProcesJkassa = Format(maxFechJka, "yyyymmdd") & " "
         
        ElseIf maxFechJka > minFechJka Then
        
            fechasProcesJkassa = Format(minFechJka, "yyyymmdd") & " - " & Format(maxFechJka, "yyyymmdd") & " "
            
        End If




''''''''''''''''''''''''''''REPORTE TRANSACCIONES JKASSA''''''''''''''''''''''''''''
'regresar a libro original
    Windows(cuSh).Activate

'sh6 = "Procesar"
Sheets(sh6).Select
Cells.Clear
rowJkassa4 = 2

For i = 1 To UBound(JKASSA4)
    
    If JKASSA4(i, 4) = "MXN" Then
    
        Cells(rowJkassa4, 1) = Day(JKASSA4(i, 1)) & "-" & Month(JKASSA4(i, 1)) & "-" & Year(JKASSA4(i, 1))
        Cells(rowJkassa4, 2) = JKASSA4(i, 2)
        Cells(rowJkassa4, 3) = Replace(JKASSA4(i, 3), Chr(34), "", 1)
        Cells(rowJkassa4, 4) = JKASSA4(i, 4)
        Cells(rowJkassa4, 5) = Replace(JKASSA4(i, 5), Chr(34), "", 1)
        Cells(rowJkassa4, 6) = Replace(JKASSA4(i, 6), Chr(34), "", 1)
        Cells(rowJkassa4, 7) = Replace(JKASSA4(i, 7), Chr(34), "", 1)
        Cells(rowJkassa4, 8) = Replace(JKASSA4(i, 8), Chr(34), "", 1)
        Cells(rowJkassa4, 9) = Replace(JKASSA4(i, 9), Chr(34), "", 1)
        Cells(rowJkassa4, 10) = Replace(JKASSA4(i, 10), Chr(34), "", 1)
        Cells(rowJkassa4, 11) = Replace(JKASSA4(i, 11), Chr(34), "", 1)
        Cells(rowJkassa4, 12) = Replace(JKASSA4(i, 12), Chr(34), "", 1)
        Cells(rowJkassa4, 13) = Replace(JKASSA4(i, 13), Chr(34), "", 1)
        Cells(rowJkassa4, 14) = Replace(JKASSA4(i, 14), Chr(34), "", 1)
        Cells(rowJkassa4, 15) = Replace(JKASSA4(i, 15), Chr(34), "", 1)
        Cells(rowJkassa4, 16) = Replace(JKASSA4(i, 16), Chr(34), "", 1)
        Cells(rowJkassa4, 17) = Replace(JKASSA4(i, 17), Chr(34), "", 1)
        Cells(rowJkassa4, 18) = Replace(JKASSA4(i, 18), Chr(34), "", 1)
        Cells(rowJkassa4, 19) = Replace(JKASSA4(i, 19), Chr(34), "", 1)
        Cells(rowJkassa4, 20) = Replace(JKASSA4(i, 20), Chr(34), "", 1)
        Cells(rowJkassa4, 21) = Replace(JKASSA4(i, 21), Chr(34), "", 1)
        Cells(rowJkassa4, 22) = Replace(JKASSA4(i, 22), Chr(34), "", 1)
        Cells(rowJkassa4, 23) = Replace(JKASSA4(i, 23), Chr(34), "", 1)
        Cells(rowJkassa4, 24) = Replace(JKASSA4(i, 24), Chr(34), "", 1)
        Cells(rowJkassa4, 25) = Replace(JKASSA4(i, 25), Chr(34), "", 1)
        Cells(rowJkassa4, 26) = Replace(JKASSA4(i, 26), Chr(34), "", 1)
        Cells(rowJkassa4, 27) = Replace(JKASSA4(i, 27), Chr(34), "", 1)
        Cells(rowJkassa4, 28) = Replace(JKASSA4(i, 28), Chr(34), "", 1)
        Cells(rowJkassa4, 29) = Replace(JKASSA4(i, 29), Chr(34), "", 1)
        Cells(rowJkassa4, 30) = Replace(JKASSA4(i, 30), Chr(34), "", 1)
        Cells(rowJkassa4, 31) = Replace(JKASSA4(i, 31), Chr(34), "", 1)
        Cells(rowJkassa4, 32) = Replace(JKASSA4(i, 32), Chr(34), "", 1)
        Cells(rowJkassa4, 33) = Format(JKASSA4(i, 1), "#") & JKASSA4(i, 3)
        
        rowJkassa4 = rowJkassa4 + 1
        
    End If
    
Next i


'layout
Cells(1, 1) = "fecha"
Cells(1, 2) = "sucursal"
Cells(1, 3) = "IdSucursal"
Cells(1, 4) = "moneda"
Cells(1, 5) = "saldoInicial"
Cells(1, 6) = "NroTrnPagos"
Cells(1, 7) = "ImportePagos"
Cells(1, 8) = "NroTrnRetiros"
Cells(1, 9) = "ImporteRetiros"
Cells(1, 10) = "NroTrnPagosODP"
Cells(1, 11) = "ImportePagosODP"
Cells(1, 12) = "NroTrnDepositos"
Cells(1, 13) = "ImporteDepositos"
Cells(1, 14) = "NroTrnPagoServicios"
Cells(1, 15) = "ImportePagoServicios"
Cells(1, 16) = "NroTrnPagoSeguros"
Cells(1, 17) = "ImportePagoSeguros"
Cells(1, 18) = "SubtotalNroTrn"
Cells(1, 19) = "SubtotalImporte"
Cells(1, 20) = "NroTrnEntradasSucursal"
Cells(1, 21) = "ImporteEntradasSucursal"
Cells(1, 22) = "NroTrnSalidasSucursal"
Cells(1, 23) = "ImporteSalidasSucursal"
Cells(1, 24) = "NroTrnFaltantes"
Cells(1, 25) = "ImporteFaltantes"
Cells(1, 26) = "NroTrnRecuperaFaltantes"
Cells(1, 27) = "ImporteRecuperaFaltantes"
Cells(1, 28) = "NroTrnSobrantes"
Cells(1, 29) = "ImporteSobrantes"
Cells(1, 30) = "NroTrnEntregaSobrantes"
Cells(1, 31) = "ImporteEntregaSobrantes"
Cells(1, 32) = "NroTrnTotal"
Cells(1, 33) = "ImportellaveFechaIdSuc"



    
'''''''''''''VALIDACI|fffd|N DE FECHAS DE REPORTES'''''''''''''''''''''''''''''''
fechaSaldoPublicar = CDate(JKASSA4(2, 1))
mesValCadena = Month(fechaSaldoPublicar)
diaValCadena = Day(fechaSaldoPublicar)

If mesValCadena < 10 Then
mesCadena = "0" & mesValCadena
Else
mesCadena = mesValCadena
End If

If diaValCadena < 10 Then
diaCadena = "0" & diaValCadena
Else
diaCadena = diaValCadena
End If

fechaCadena = Year(fechaSaldoPublicar) & mesCadena & diaCadena




'armar reporte de totales JKASSA Y AVANSOFT
Call EA1_AgruparPorColumnas(sumaAvansoftImporte)

'guardar archivo de CONTROL DE CIFRAS AVANSOFT - JKASSA
'guardar
    ChDir UnidadAsignada & "Pronostico\Base de Datos\Control cifras\Reportes Operaciones"
    ActiveWorkbook.SaveAs Filename:= _
        UnidadAsignada & "Pronostico\Base de Datos\Control cifras\Reportes Operaciones\" & fechaCadena & " Cifras Control Reportes.xlsx" _
        , FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False
        

'REGRESAR A LIBRO MACRO
Windows(cuSh).Activate
'sh6 = "Procesar"
Sheets(sh6).Select


'ARCHIVO ADICIONAL
ActiveSheet.Copy
ActiveSheet.Select
ActiveSheet.Name = "Operaciones JKASSA"

'Guardar como txt con tab
'    ChDir UnidadAsignada & Mid(RutaPronosticoRepositorioBD, 1, Len(RutaPronosticoRepositorioBD) - 1)
'    ActiveWorkbook.SaveAs Filename:= _
'        UnidadAsignada & RutaPronosticoRepositorioBD & "JkassaDiaDiario.txt", FileFormat:= _
'        xlText, CreateBackup:=False
     
    ChDir UnidadAsignada & "Reportes_SAP" & "\" & "JKASSA" & "\" & nombreCarpetaJkassa & "\"
    ActiveWorkbook.SaveAs Filename:= _
        UnidadAsignada & "Reportes_SAP" & "\" & "JKASSA" & "\" & nombreCarpetaJkassa & "\" & fechasProcesJkassa & " Jkassa Reporte Transacciones.txt", FileFormat:= _
        xlText, CreateBackup:=False
        
ActiveWorkbook.Close False

'REGRESAR A LIBRO MACRO
Windows(cuSh).Activate
'sh6 = "Procesar"
Sheets(sh6).Select


Cells.Clear
rowAvansoft1 = 2

For i = 1 To UBound(AVANSOFT1)

    Cells(rowAvansoft1, 1) = Day(AVANSOFT1(i, 1)) & "-" & Month(AVANSOFT1(i, 1)) & "-" & Year(AVANSOFT1(i, 1))
    Cells(rowAvansoft1, 2) = AVANSOFT1(i, 2)
    Cells(rowAvansoft1, 3) = Format(AVANSOFT1(i, 1), "#") & AVANSOFT1(i, 2)
    Cells(rowAvansoft1, 4) = AVANSOFT1(i, 4)
    Cells(rowAvansoft1, 5) = AVANSOFT1(i, 5)
    Cells(rowAvansoft1, 6) = AVANSOFT1(i, 6)
    
    rowAvansoft1 = rowAvansoft1 + 1
    
Next i


'layout
Cells(1, 1) = "fecha"
Cells(1, 2) = "IdSucursal"
Cells(1, 3) = "ImportellaveFechaIdSuc"
Cells(1, 4) = "sucursal"
Cells(1, 5) = "NroTrnRemesas"
Cells(1, 6) = "ImporteRemesas"

'ordenar
rowTotAvansoft = Range("A65000").End(xlUp).Row

    ActiveWorkbook.ActiveSheet.Sort.SortFields.Clear
    ActiveWorkbook.ActiveSheet.Sort.SortFields.Add Key:= _
        Range(Cells(2, 2), Cells(rowTotAvansoft, 2)), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption _
        :=xlSortNormal
    ActiveWorkbook.ActiveSheet.Sort.SortFields.Add Key:= _
        Range(Cells(2, 6), Cells(rowTotAvansoft, 6)), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption _
        :=xlSortNormal
    With ActiveWorkbook.ActiveSheet.Sort
        .SetRange Range(Cells(1, 1), Cells(rowTotAvansoft, 6))
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    
'ARCHIVO ADICIONAL
ActiveSheet.Copy
ActiveSheet.Select
ActiveSheet.Name = "Operaciones AVANSOFT"


'Guardar como txt con tab
'    ChDir UnidadAsignada & Mid(RutaPronosticoRepositorioBD, 1, Len(RutaPronosticoRepositorioBD) - 1)
'    ActiveWorkbook.SaveAs Filename:= _
'        UnidadAsignada & RutaPronosticoRepositorioBD & "AvansoftDiaDiario.txt", FileFormat:= _
'        xlText, CreateBackup:=False


    ChDir UnidadAsignada & "Reportes_SAP" & "\" & "Avansoft" & "\" & nombreCarpetaAvansoft & "\"
    ActiveWorkbook.SaveAs Filename:= _
        UnidadAsignada & "Reportes_SAP" & "\" & "Avansoft" & "\" & nombreCarpetaAvansoft & "\" & fechasProcesAvansoft & " Avansoft Reporte Transacciones.txt", FileFormat:= _
        xlText, CreateBackup:=False
        
        
ActiveWorkbook.Close False

'REGRESAR A LIBRO MACRO
Windows(cuSh).Activate
'sh27 = "SALDO INICIAL"
Sheets(sh27).Select





hora2 = Now()

MsgBox "Proceso finalizado" & Chr(10) & Format(hora2 - hora1, "hh:mm:ss")



End Sub





Sub CM7_A_ReportesJkassaSaldosFinales()

Call VariablesGlobales

Dim cuSh, nwSh, tmSh, carpeta, AmPm, carpetaHora, fechaArchivo, fechaSaldo, diaLabel, mesLabel As String
Dim repJkassa1, repJkassa2, repJkassa3, repJkassa4 As String
Dim repAvansoft1 As String
Dim repJkassa1Range, repJkassa2Range, repJkassa3Range, repJkassa4Range  As Range
Dim repJkassa1Fecha, repJkassa2Fecha, repJkassa3Fecha, repJkassa4Fecha  As String
Dim repAvansoft1Fecha, repAvansoft1Hora As String
Dim repJkassa1Hora, repJkassa2Hora, repJkassa3Hora, repJkassa4Hora  As String
Dim punteroJK1, punteroJK2, punteroJK3, punteroJK4 As Integer
Dim punteroAS1 As Integer
Dim row0JK1, row0JK2, row0JK3, row0JK4 As Integer
Dim row0AS1 As Integer
Dim totRowsJK1, totRowsJK2, totRowsJK3, totRowsJK4 As Long
Dim contadorJK1, contadorJK2, contadorJK3, contadorJK4 As Long
Dim totRowsAS1M, contadorAS1 As Long
Dim hora1, hora2 As Date
Dim punteroCatSuc, punteroCatSucExcep, contadorCatSuc As Integer
Dim numCatSuc As Long
Dim row0SaldoHom, totRowsSaldoHom As Integer
Dim rowFechaPublicar, row0Publicar As Integer
Dim fechaSaldoPublicar As Date

hora1 = Now()

Dim JKASSA1() As Variant
Dim JKASSA2() As Variant
Dim JKASSA3() As Variant

Dim SUCURSALES() As Variant
Dim SALDOS_SUCURSALES() As Variant
Dim SUCURSALES_EXCEP_AVANSOFT() As Variant
Dim sucursalesUnicas As Collection
Dim sumaJKASSA1, sumaJKASSA2, sumaJKASSA3, sumaJKASSA4 As Currency
Dim contarJKASSA1, contarJKASSA2, contarJKASSA3, contarJKASSA4 As Integer

'sh27 = "SALDO INICIAL"
'libro principal
cuSh = ActiveWorkbook.Name
'sh27 = "SALDO INICIAL"
Sheets(sh27).Select
fechaSaldo = Range("C2").value
'rutaRepositorioPersonal = Range("C3").value


'Reporte JKASSA APLICACI|fffd|N DESKTOP - 10901: Monitoreo de Caja
'Etiqueta en B2
repJkassa1 = "Monitoreo de Caja"

'Reporte JKASSA APLICACI|fffd|N DESKTOP 10907: Arqueo de Caja
'Etiqueta en B8
repJkassa2 = "Fecha reporte:"

'Reporte JKASSA ONLINE SALDO FINAL
'Etiqueta en A1
repJkassa3 = "NOMBRE: SALDO FINAL"



Set repJkassa1Range = Range("B2")
Set repJkassa2Range = Range("B8")
Set repJkassa3Range = Range("A1")

'primera l|fffd|nea de registros
row0JK1 = 13
row0JK2 = 13
row0JK3 = 5


' columna para medir longitud
punteroJK1 = 9
punteroJK2 = 5
punteroJK3 = 1


'contador arreglo
contadorJK1 = 1
contadorJK2 = 1
contadorJK3 = 1

'Inicializar suma de arreglos
sumaJKASSA1 = 0
sumaJKASSA2 = 0
sumaJKASSA3 = 0


'''''''''''''''''''''''''''''SUCURSALES CAT|fffd|LOGO'''''''''''''''''''''''''''''
'sh4 = "Info. Gral."
punteroCatSuc = 21

contadorCatSuc = 2
Sheets(sh4).Select

numCatSuc = Cells(2, punteroCatSuc).End(xlDown).Row - 1

ReDim SUCURSALES(numCatSuc, 2)

For i = 1 To UBound(SUCURSALES)
    SUCURSALES(i, 1) = Cells(contadorCatSuc, punteroCatSuc)
    SUCURSALES(i, 2) = Cells(contadorCatSuc, punteroCatSuc + 1)
    
    contadorCatSuc = contadorCatSuc + 1
    
Next i

'Excepciones de nombre en Avansoft
punteroCatSucExcep = 75
contadorCatSuc = 2
numCatSuc = Cells(2, punteroCatSucExcep).End(xlDown).Row - 1

ReDim Preserve SUCURSALES_EXCEP_AVANSOFT(numCatSuc, 3)

For i = 1 To UBound(SUCURSALES_EXCEP_AVANSOFT)

    SUCURSALES_EXCEP_AVANSOFT(i, 1) = Cells(contadorCatSuc, punteroCatSucExcep)
    SUCURSALES_EXCEP_AVANSOFT(i, 2) = Cells(contadorCatSuc, punteroCatSucExcep + 1)
    SUCURSALES_EXCEP_AVANSOFT(i, 3) = Cells(contadorCatSuc, punteroCatSucExcep + 2)
    
    contadorCatSuc = contadorCatSuc + 1
Next i



'Agregar libro
    Workbooks.Add
    Range("a1").Select
    nwSh = ActiveWorkbook.Name
    
ChDrive (UnidadAsignada)
ChDir (UnidadAsignada & "\" & rutaRepositorioPersonal)
archi = Dir(UnidadAsignada & "\" & rutaRepositorioPersonal & "\" & "*")



 
Do While archi <> ""
     'abrir
     Workbooks.Open Filename:=UnidadAsignada & "\" & rutaRepositorioPersonal & "\" & archi
     
    tmSh = ActiveWorkbook.Name
            'IDENTIFICAR TIPO DE REPORTE
            
            ''''''''''''''''''''Monitoreo de Caja''''''''''''''''''''''''''''''''''
            
            If Range("B2").value = repJkassa1 Then
                
                'FECHA VALOR
                repJkassa1Fecha = Range("O2").value
                repJkassa1Hora = Range("O3").value
                ''''''''''''''''''''''''ARREGLO JKASSA 1''''''''''''''''''''''''''''''''
                'NUMERO DE REGISTROS
                totRowsJK1 = Cells(65000, punteroJK1).End(xlUp).Row - row0JK1 + 1
                'rowsArray1 = totRowsJK1 + UBound(JKASSA1)
                

                ReDim Preserve JKASSA1(totRowsJK1, 4)
                
                'ID SUC 4 IZQUIERDA COLUMNA 5, IMPORTE COLUMNA 45, HORA "AV4"
                
                For i = 1 To totRowsJK1
                    'id sucursal
                    JKASSA1(contadorJK1, 1) = Val(Cells(row0JK1, 9))
                    'fecha
                    JKASSA1(contadorJK1, 2) = CDate(repJkassa1Fecha)
                    'hora
                    JKASSA1(contadorJK1, 3) = repJkassa1Hora
                    'importe
                    JKASSA1(contadorJK1, 4) = Cells(row0JK1, 13)
                    
'                    'suma del arreglo
                    If Val(Cells(row0JK1, 9)) > 0 Then

                        sumaJKASSA1 = sumaJKASSA1 + CCur(Cells(row0JK1, 13))
                        contarJKASSA1 = contarJKASSA1 + 1

                    End If
                    
                    contadorJK1 = contadorJK1 + 1
                    row0JK1 = row0JK1 + 1
                    
                Next i
                

                'copiar hoja
                Sheets(1).Select
                ActiveSheet.Name = "Monitoreo Caja"
                Sheets(1).Copy After:=Workbooks(nwSh).Sheets(Sheets.Count)
                
                
                'cerrar
                Windows(tmSh).Activate
                ActiveWorkbook.Close False
                
                Windows(nwSh).Activate
                Sheets(Sheets.Count).Select
    
            
            ''''''''''''''''''''Fecha reporte:''''''''''''''''''''''''''''''''''
            
            ElseIf Range("B8").value = repJkassa2 Then
                'FECHA VALOR
                repJkassa2Fecha = Range("C8").value
                repJkassa2Hora = Range("AV4").value
                ''''''''''''''''''''''''ARREGLO JKASSA 2''''''''''''''''''''''''''''''''
                'NUMERO DE REGISTROS
                totRowsJK2 = Cells(65000, punteroJK2).End(xlUp).Row - row0JK2 + 1
                'rowsArray2 = totRowsJK2 + UBound(JKASSA2)
                ReDim Preserve JKASSA2(totRowsJK2, 4)
                
                'ID SUC COLUMNA 2, IMPORTE COLUMNA 5, HORA "A3"
                
                For i = 1 To totRowsJK2
                    'id sucursal
                    JKASSA2(contadorJK2, 1) = Val(Left(Cells(row0JK2, 5), 4))
                    'fecha
                    JKASSA2(contadorJK2, 2) = CDate(repJkassa2Fecha)
                    'hora
                    JKASSA2(contadorJK2, 3) = repJkassa2Hora
                    'importe
                    JKASSA2(contadorJK2, 4) = Cells(row0JK2, 45)
                    
'                    'suma del arreglo
                    If Val(Left(Cells(row0JK2, 5), 4)) > 0 Then

                        sumaJKASSA2 = sumaJKASSA2 + CCur(Cells(row0JK2, 45))
                        contarJKASSA2 = contarJKASSA2 + 1

                    End If
'
                    contadorJK2 = contadorJK2 + 1
                    row0JK2 = row0JK2 + 1
                Next i
                
                
            
                'copiar hoja
                Sheets(1).Select
                ActiveSheet.Name = "Arqueo"
                Sheets(1).Copy After:=Workbooks(nwSh).Sheets(Sheets.Count)
                
                
                
                'cerrar
                Windows(tmSh).Activate
                ActiveWorkbook.Close False
                
                Windows(nwSh).Activate
                Sheets(Sheets.Count).Select

            
            ''''''''''''''''''''NOMBRE: SALDO FINAL''''''''''''''''''''''''''''''''''
            
            ElseIf Range("A1").value = repJkassa3 Then
                'FECHA VALOR
                repJkassa3Fecha = Right(Range("A2").value, 10)
                repJkassa3Hora = Right(Range("A3").value, 5)
                ''''''''''''''''''''''''ARREGLO JKASSA 3''''''''''''''''''''''''''''''''
                'NUMERO DE REGISTROS
                totRowsJK3 = Cells(65000, punteroJK3).End(xlUp).Row - row0JK3 + 1
                'rowsArray3 = totRowsJK3 + UBound(JKASSA3)
                ReDim Preserve JKASSA3(totRowsJK3, 4)
                
                'ID SUC COLUMNA 9, IMPORTE COLUMNA 13, HORA "O3"
                
                For i = 1 To totRowsJK3
                    'id sucursal
                    JKASSA3(contadorJK3, 1) = Val(Cells(row0JK3, 2))
                    'fecha
                    JKASSA3(contadorJK3, 2) = CDate(repJkassa3Fecha)
                    'hora
                    JKASSA3(contadorJK3, 3) = repJkassa3Hora
                    'importe
                    JKASSA3(contadorJK3, 4) = Cells(row0JK3, 5)
                    
'                    'suma del arreglo
                    If Val(Cells(row0JK3, 2)) > 0 Then

                        sumaJKASSA3 = sumaJKASSA3 + CCur(Cells(row0JK3, 5))
                        contarJKASSA3 = contarJKASSA3 + 1

                    End If
                    
                    contadorJK3 = contadorJK3 + 1
                    row0JK3 = row0JK3 + 1
                Next i
                

                'copiar hoja
                Sheets(1).Select
                ActiveSheet.Name = "Reporte Saldos"
                'Sheets(1).Copy After:=Workbooks(nwSh).Sheets(Sheets.Count)
                Sheets(1).Copy After:=Workbooks(nwSh).Sheets(2)
                
                
                
                'cerrar
                Windows(tmSh).Activate
                ActiveWorkbook.Close False
                
                Windows(nwSh).Activate
                Sheets(Sheets.Count).Select

            Else

'                'copiar hoja
'                Sheets(1).Select
'
'                Sheets(1).Copy After:=Workbooks(nwSh).Sheets(Sheets.Count)
                'cerrar
                Windows(tmSh).Activate
                ActiveWorkbook.Close False
                
                Windows(nwSh).Activate
                Sheets(Sheets.Count).Select
            End If

    
    archi = Dir()
    
Loop




                '

'''''''''''agregar informaci|fffd|n a arreglos vacios''''''''''''''''

If (Not JKASSA1) = -1 Then
ReDim Preserve JKASSA1(2, 4)
JKASSA1(1, 1) = 0
JKASSA1(1, 2) = 0
JKASSA1(1, 3) = 0
JKASSA1(1, 4) = 0
JKASSA1(2, 1) = 0
JKASSA1(2, 2) = 0
JKASSA1(2, 3) = 0
JKASSA1(2, 4) = 0
End If

If (Not JKASSA2) = -1 Then
ReDim Preserve JKASSA2(2, 4)
JKASSA2(1, 1) = 0
JKASSA2(1, 2) = 0
JKASSA2(1, 3) = 0
JKASSA2(1, 4) = 0
JKASSA2(2, 1) = 0
JKASSA2(2, 2) = 0
JKASSA2(2, 3) = 0
JKASSA2(2, 4) = 0
End If

If (Not JKASSA3) = -1 Then
ReDim Preserve JKASSA3(2, 4)
JKASSA3(1, 1) = 0
JKASSA3(1, 2) = 0
JKASSA3(1, 3) = 0
JKASSA3(1, 4) = 0
JKASSA3(2, 1) = 0
JKASSA3(2, 2) = 0
JKASSA3(2, 3) = 0
JKASSA3(2, 4) = 0
End If


'''''''''''''''''''''ID SUCURSALES DE ARREGLOS'''''''''''''''''''''''
Set sucursalesUnicas = New Collection

For i = 1 To UBound(JKASSA1)
    On Error Resume Next
    
    sucursalesUnicas.Add JKASSA1(i, 1), CStr(JKASSA1(i, 1))
    
    On Error GoTo 0

Next i

For i = 1 To UBound(JKASSA2)
    On Error Resume Next
    
    sucursalesUnicas.Add JKASSA2(i, 1), CStr(JKASSA2(i, 1))
    
    On Error GoTo 0

Next i

For i = 1 To UBound(JKASSA3)
    On Error Resume Next
    
    sucursalesUnicas.Add JKASSA3(i, 1), CStr(JKASSA3(i, 1))
    
    On Error GoTo 0

Next i



'Regresar a libro
    Windows(nwSh).Activate
'copiar hoja
    Sheets(1).Select


''''''''''''''''''''''''''''AGREGAR INFORMACI|fffd|N'''''''''''''''''''''''''''''''''''
Application.Calculation = xlManual


rowRepSecc1 = 12
colRepSecc1 = 2
For i = 1 To sucursalesUnicas.Count
    
    Cells(rowRepSecc1, colRepSecc1) = sucursalesUnicas(i)
        'NOMBRE DE SUCURSAL
        For j = 1 To UBound(SUCURSALES)
        
            If Val(sucursalesUnicas(i)) = Val(SUCURSALES(j, 1)) Then
            
                Cells(rowRepSecc1, colRepSecc1 + 1) = SUCURSALES(j, 2)
                Cells(rowRepSecc1, colRepSecc1 - 1) = "ACTIVA"
                'FORMULAS
                Cells(rowRepSecc1, colRepSecc1 + 5).FormulaR1C1 = "=IF(AND(RC[-3]=RC[-2],RC[-3]=RC[-1],RC[-2]=RC[-1]),""CORRECTO"",""DIFERENCIA"")"
                
                Cells(rowRepSecc1, colRepSecc1 + 6).FormulaR1C1 = _
                "=IF(AND(RC[-4]=0,RC[-3]=0,RC[-2]=0),""Sin informaci|fffd|n"",IF(AND(RC[-4]="""",RC[-3]="""",RC[-2]=""""),""Sin informaci|fffd|n"",IF(AND(RC[-2]="""",RC[-3]="""",RC[-4]>0),""Sin comparaci|fffd|n"",IF(AND(RC[-4]="""",RC[-2]="""",RC[-3]>0),""Sin comparaci|fffd|n"",IF(AND(RC[-4]="""",RC[-3]="""",RC[-2]>0),""Sin comparaci|fffd|n"",IF(AND(RC[-4]="""",RC[-3]>0,RC[-2]>0,RC[-3]<>RC[-2]),""Arqueo"",I" & _
                "F(AND(RC[-4]=RC[-3],RC[-4]<>RC[-2]),""Reporte Saldos"",IF(AND(RC[-4]=RC[-2],RC[-4]<>RC[-3]),""Arqueo"",IF(AND(RC[-3]=RC[-2],RC[-4]<>RC[-3]),""Monitoreo Caja"","""")))))))))" & _
                ""
                
                Cells(rowRepSecc1, colRepSecc1 + 7).FormulaR1C1 = _
                "=IF(AND(RC[-5]=RC[-4],RC[-5]=RC[-3],RC[-4]=RC[-3]),RC[-5],IF(AND(RC[-4]=RC[-3],RC[-5]<>RC[-4],RC[-5]<>RC[-3]),RC[-4],IF(AND(RC[-5]="""",RC[-4]="""",RC[-3]>0),RC[-3],IF(AND(RC[-5]="""",RC[-3]="""",RC[-4]>0),RC[-4],IF(AND(RC[-4]="""",RC[-3]="""",RC[-5]>0),RC[-5],IF(AND(RC[-5]=0,RC[-4]=0,RC[-3]>0),RC[-3],IF(AND(RC[-5]=0,RC[-3]=0,RC[-4]>0),RC[-4],IF(AND(RC[-4]=0,RC[-3]=" & _
                "0,RC[-5]>0),RC[-5],IF(AND(RC[-5]>0,RC[-4]>0,RC[-5]=RC[-4],RC[-5]<>RC[-3],RC[-3]=0),RC[-5],IF(AND(RC[-5]>0,RC[-3]>0,RC[-5]=RC[-3],RC[-4]<>RC[-5],RC[-4]<>RC[-3]),RC[-5],IF(AND(RC[-4]="""",RC[-3]="""",RC[-5]>0),RC[-5],0)))))))))))" & _
                ""
                Exit For
            
            Else
                Cells(rowRepSecc1, colRepSecc1 - 1) = "CERRADA"
                
            End If
        
        Next j
        
        'ARREGLO 1
        For k = 1 To UBound(JKASSA1)
        
            If Val(sucursalesUnicas(i)) = Val(JKASSA1(k, 1)) Then
            
                Cells(rowRepSecc1, colRepSecc1 + 2) = JKASSA1(k, 4)
                
                Exit For
            
            End If
        
        Next k
        
        'ARREGLO 1
        For l = 1 To UBound(JKASSA2)
        
            If Val(sucursalesUnicas(i)) = Val(JKASSA2(l, 1)) Then
            
                Cells(rowRepSecc1, colRepSecc1 + 3) = JKASSA2(l, 4)
                
                Exit For
            
            End If
        
        Next l
        
        'ARREGLO 1
        For m = 1 To UBound(JKASSA3)
        
            If Val(sucursalesUnicas(i)) = Val(JKASSA3(m, 1)) Then
            
                Cells(rowRepSecc1, colRepSecc1 + 4) = JKASSA3(m, 4)
                
                Exit For
            
            End If
        
        Next m
        
        
    rowRepSecc1 = rowRepSecc1 + 1
    

Next i

Application.Calculation = xlAutomatic
'''''''''''''''''''ARREGLO CIFRAS HOMOLOGADAS'''''''''''''''''''''''''''''
row0SaldoHom = 12
totRowsSaldoHom = Range("A65000").End(xlUp).Row - row0SaldoHom + 1
contadorSaldosPublicar = 1

ReDim Preserve SALDOS_SUCURSALES(totRowsSaldoHom, 3)

For i = 1 To UBound(SALDOS_SUCURSALES)

    If Cells(row0SaldoHom, 1) = "ACTIVA" Then

        SALDOS_SUCURSALES(contadorSaldosPublicar, 1) = Cells(row0SaldoHom, 2)
        SALDOS_SUCURSALES(contadorSaldosPublicar, 2) = Cells(row0SaldoHom, 3)
        SALDOS_SUCURSALES(contadorSaldosPublicar, 3) = Cells(row0SaldoHom, 9)
        
        contadorSaldosPublicar = contadorSaldosPublicar + 1
        
    End If

    row0SaldoHom = row0SaldoHom + 1

Next i



'''NOMBRES DE CAMPOS LAYOUT
rowRepSecc1 = 11
Cells(rowRepSecc1, 1) = "Estatus"
Cells(rowRepSecc1, 2) = "Id sucursal"
Cells(rowRepSecc1, 3) = "Sucursal"
Cells(rowRepSecc1, 4) = "Monitoreo Caja"
Cells(rowRepSecc1, 5) = "Arqueo"
Cells(rowRepSecc1, 6) = "Reporte Saldos"
Cells(rowRepSecc1, 7) = "Consistencia"
Cells(rowRepSecc1, 8) = "Identificar Diferente"
Cells(rowRepSecc1, 9) = "Importe Homologado"

Cells(3, 1) = "CIFRAS CONTROL"

Cells(4, 1) = "Nombre Reporte"
Cells(4, 2) = "Fecha Reporte"
Cells(4, 3) = "Hora Reporte"
Cells(4, 4) = "Total Registros"
Cells(4, 5) = "Importe"
Cells(4, 6) = "N|fffd|mero Sucursales Activas"
Cells(4, 7) = "Importe Sucursales Activas"

Cells(5, 1) = "Monitoreo Caja"
Cells(6, 1) = "Arqueo"
Cells(7, 1) = "Reporte Saldos"
Cells(8, 1) = "TOTAL"

'fecha reportes
Cells(5, 2) = JKASSA1(2, 2)
Cells(6, 2) = JKASSA2(2, 2)
Cells(7, 2) = JKASSA3(2, 2)

'hora reportes
Cells(5, 3) = JKASSA1(2, 3)
Cells(6, 3) = JKASSA2(2, 3)
Cells(7, 3) = JKASSA3(2, 3)

''total registros reportes
Cells(5, 4) = contarJKASSA1
Cells(6, 4) = contarJKASSA2
Cells(7, 4) = contarJKASSA3

''total registros reportes
Cells(5, 5) = sumaJKASSA1
Cells(6, 5) = sumaJKASSA2
Cells(7, 5) = sumaJKASSA3


'total registros activas
Cells(5, 6).FormulaR1C1 = "=COUNTIFS(C[-5],""ACTIVA"")"
Cells(6, 6).FormulaR1C1 = "=COUNTIFS(C[-5],""ACTIVA"")"
Cells(7, 6).FormulaR1C1 = "=COUNTIFS(C[-5],""ACTIVA"")"
Cells(8, 6).FormulaR1C1 = "=COUNTIFS(C[-5],""ACTIVA"")"

'suma registros activas
Cells(5, 7).FormulaR1C1 = "=SUMIFS(R[6]C[-3]:R[995]C[-3],R11C1:R1000C1,""ACTIVA"")"
Cells(6, 7).FormulaR1C1 = "=SUMIFS(R[5]C[-2]:R[994]C[-2],R11C1:R1000C1,""ACTIVA"")"
Cells(7, 7).FormulaR1C1 = "=SUMIFS(R[4]C[-1]:R[993]C[-1],R11C1:R1000C1,""ACTIVA"")"
Cells(8, 7).FormulaR1C1 = "=SUMIFS(R[3]C[2]:R[992]C[2],R11C1:R1000C1,""ACTIVA"")"

    
'''''''''''''VALIDACI|fffd|N DE FECHAS DE REPORTES'''''''''''''''''''''''''''''''
fechaSaldoPublicar = CDate(JKASSA3(2, 2))
mesValCadena = Month(fechaSaldoPublicar)
diaValCadena = Day(fechaSaldoPublicar)

If mesValCadena < 10 Then
mesCadena = "0" & mesValCadena
Else
mesCadena = mesValCadena
End If

If diaValCadena < 10 Then
diaCadena = "0" & diaValCadena
Else
diaCadena = diaValCadena
End If

fechaCadena = Year(fechaSaldoPublicar) & mesCadena & diaCadena

'T|fffd|TULO DE REPORTE
Cells(1, 1) = "SALDOS FINALES SUCURSALES " & Chr(10) & Format(fechaSaldoPublicar, "DD MMMM YYYY")

'formato
Call CM7_1_FormatoReportesJkassaSaldosFinales

'guardar
    ChDir UnidadAsignada & "Pronostico\Base de Datos\Control cifras\Saldos Sucursales"
    ActiveWorkbook.SaveAs Filename:= _
        UnidadAsignada & "Pronostico\Base de Datos\Control cifras\Saldos Sucursales\" & fechaCadena & " Saldos Sucursales.xlsx" _
        , FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False
        
'''''''''''''''''''''''''''''''''''REGISTRO SALDOS INICIALES''''''''''''''''''''''''''''''''
'regresar a libro original
    Windows(cuSh).Activate
    'sh27 = "SALDO INICIAL"
    Sheets(sh27).Select



''''''''''''REGISTRAR PARA PUBLICAR'''''''''''''''''''''''''''''''
rowFechaPublicar = 2
row0Publicar = 5

'Limpiar rango
Call CM5_SaldoInicialLimpiar

'Fecha del reporte
Cells(rowFechaPublicar, 3) = fechaSaldoPublicar



'imprimir saldos
For i = 1 To UBound(SALDOS_SUCURSALES)

    Cells(row0Publicar, 1) = SALDOS_SUCURSALES(i, 1)
    Cells(row0Publicar, 2) = SALDOS_SUCURSALES(i, 2)
    Cells(row0Publicar, 3) = SALDOS_SUCURSALES(i, 3)

    row0Publicar = row0Publicar + 1

Next i

If SALDO_INICIAL.CheckBoxSaldosTxt1.value = True Then
'registrar saldos iniciales
Call CM3_IngresarSaldosIniciales

End If

hora2 = Now()

MsgBox "Proceso finalizado" & Chr(10) & Format(hora2 - hora1, "hh:mm:ss")



End Sub



Attribute VB_Name = "CN_LIMITE_OPERATIVO"
Sub CN_LimitesOperativos()
Call VariablesGlobales

'limpiar
'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select
Range("J4", Range("J4").End(xlDown)).ClearContents

'deshabilitado 5 diciembre 2018
'Call CN1_ImportarLimiteOperativo
Call CQ1_ImportarPronosticoActualizado

'deshabilitado 5 diciembre 2018
'Call CN2_AgregarLimitesOperativos
Call CN3_AgregarLimitesOperativosModelo

Call DeleteQueryImportaciones

Sheets(sh3).Select


End Sub
Sub CN1_ImportarLimiteOperativo()
Call VariablesGlobales

'sh3 = "pm_PLANEACION_SERVICIOS"
'sh6 = "Procesar"
'sh19 = "PARAMETROS"

'importar archivo cierre ayer
Sheets(sh6).Select
Cells.Clear

With ActiveSheet.QueryTables.Add(Connection:= _
        "TEXT;" & UnidadAsignada & Catalogos & LimitesOperativos & ".txt", _
        Destination:=Range("$A$1"))
        .Name = LimitesOperativos
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierDoubleQuote
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileOtherDelimiter = "|"
        .TextFileColumnDataTypes = Array(1, 1, 1)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    End With
    
End Sub


Sub CN2_AgregarLimitesOperativos()
Call VariablesGlobales

Sheets(sh6).Select

Dim lookupvalue, value As Variant
Dim NombreRango As String
Dim celda, lookupRange, rango As Range
Dim col0, col1, TotalSuc As Integer
Dim row0 As Long

'N|fffd|mero de columna D PLANEACION
col0 = 4
row0 = 4

'MsgBox Row0

'numero de plazas registradas previamente
Sheets(sh3).Select
If Cells(row0, col0) = "" And Cells(row0 + 1, col0) = "" Then
TotalPlazas = 0
Else
TotalPlazas = Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)).Count
End If

'NuevaColumnaCajas = Col0 + TotalPlazas

'celda = Sheets(sh3).Range(Cells(Row0, Col0), Cells(2, Col0 - 8)).value 'celda con el valor que buscamos
Sheets(sh6).Select
Set lookupRange = Range(Cells(2, 1), Cells(2, 3).End(xlDown)) 'rango donde buscar

Sheets(sh3).Select
Set rango = Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)) 'rango donde buscar
rango.Select

'SALDOS AL CORTE
For Each cell In rango
''Queremos la columna 3

lookupvalue = Application.VLookup(cell, lookupRange, 3, False)

'Si no encuentra valor finaliza
    If IsError(lookupvalue) Then
        Sheets(sh3).Select
        cell.Offset(0, 6) = 0
    Else
        Sheets(sh3).Select
        cell.Offset(0, 6) = lookupvalue
        
    End If

Next cell



Range("j3").Select

End Sub

Sub CN3_AgregarLimitesOperativosModelo()
Call VariablesGlobales

Dim lookupvalue, value As Variant
Dim NombreRango As String
Dim celda, lookupRange, rango As Range
Dim col0, col1, TotalSuc As Integer
Dim row0 As Long
Dim LIMITEOPERATIVO() As Variant
Dim numRowLO, rowOLO As Long
'N|fffd|mero de columna D PLANEACION
col0 = 4
row0 = 4

rowOLO = 2

'numero de plazas registradas previamente
'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select
If Cells(row0, col0) = "" And Cells(row0 + 1, col0) = "" Then
TotalPlazas = 0
Else
TotalPlazas = Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)).Count
End If

'sh26 = "OrdenDotacion"
'COLUMNA 1 DEL IDSUCURSAL Y COLUMNA 6 DE L|fffd|MITE OPERATIVO
Sheets(sh6).Select

'numero de registros
numRowLO = Range("a1000000").End(xlUp).Row - 1


''''''''''''''''''''ARREGLO LO''''''''''''''''''''''''''''

'ReDim LIMITEOPERATIVO(numRowLO, 2)
'
'For i = 1 To UBound(LIMITEOPERATIVO)
'
'LIMITEOPERATIVO(i, 1) = Cells(rowOLO, 1)
'LIMITEOPERATIVO(i, 2) = Abs(Cells(rowOLO, 6))
'
'rowOLO = rowOLO + 1
'
'Next i
'
'
'Sheets(sh3).Select
'
'' Id sucursal hoja de SERVICIOS col0 (+6 EL L|fffd|MITE OPERATIVO)
'
'Do While Cells(row0, col0) <> ""
'
'    For i = 1 To UBound(LIMITEOPERATIVO)
'
'        If Cells(row0, col0) = LIMITEOPERATIVO(i, 1) Then
'            Cells(row0, col0 + 6) = LIMITEOPERATIVO(i, 2)
'        Exit For
'        End If
'
'    Next i
'
'row0 = row0 + 1
'
'Loop

Set lookupRange = Sheets(sh6).Range(Cells(2, 1), Cells(2, 6).End(xlDown)) 'rango donde buscar

Sheets(sh3).Select
Set rango = Sheets(sh3).Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)) 'rango donde buscar
rango.Select

Application.Calculation = xlManual

'SALDOS AL CORTE
For Each cell In rango
''Queremos la columna 3

lookupvalue = Application.VLookup(cell, lookupRange, 6, False)

'Si no encuentra valor finaliza
    If IsError(lookupvalue) Then
        Sheets(sh3).Select
        cell.Offset(0, 6) = 0
    Else
        Sheets(sh3).Select
        cell.Offset(0, 6) = Abs(lookupvalue)

    End If

Next cell


Application.Calculation = xlAutomatic


Range("j3").Select

End Sub
Attribute VB_Name = "COMPRAS_REGISTRO"
Attribute VB_Base = "0{646F3025-E804-4686-B351-551E4028B88F}{99AB4044-BEEF-405C-838C-FF8ABA524281}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub ComboDiaCompra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)


If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


''''''''''''''NAVEGACI|fffd|N FORMULARIO''''''''''''''''
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.FolioSolicitudCompra.SetFocus
       Me.SelStart = 0
    Else
        'ir a siguiente textbox
        Me.ComboMesesCompra.SetFocus
        Me.SelStart = 0
    End If

End If
    
End Sub


Private Sub ComboMesesCompra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then

''''''''''''''NAVEGACI|fffd|N FORMULARIO''''''''''''''''
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.ComboDiaCompra.SetFocus
        Me.SelStart = 0
    Else
        'ir a siguiente textbox
        Me.ComboAnioCompra.SetFocus
        Me.SelStart = 0
    End If
    
End If

End Sub



Private Sub ComboAnioCompra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then

''''''''''''''NAVEGACI|fffd|N FORMULARIO''''''''''''''''
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.ComboMesesCompra.SetFocus
        Me.SelStart = 0
    Else
        'ir a siguiente textbox
        Me.PlazaCompra.SetFocus
        Me.SelStart = 0
    End If
    
End If

End Sub



Private Sub CommandButton3_Click()

COMPRAS_REGISTRO.Hide

End Sub

Private Sub CommandButton4_Click()

End Sub

Private Sub CommandButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
NAVEGAR_HOJAS.Show
End Sub

Private Sub EstatusCompra_Change()

End Sub

Private Sub PlazaCompra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then

''''''''''''''NAVEGACI|fffd|N FORMULARIO''''''''''''''''
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.ComboAnioCompra.SetFocus
    Else
        'ir a siguiente textbox
        Me.EtvCompra.SetFocus
        
    End If
    
End If

End Sub

Private Sub EtvCompra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then

''''''''''''''NAVEGACI|fffd|N FORMULARIO''''''''''''''''
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.PlazaCompra.SetFocus
        
    Else
        'ir a siguiente textbox
        Me.ComboMedioAbastecimiento.SetFocus
        
    End If
    
End If

End Sub

Private Sub ComboMedioAbastecimiento_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then

    Select Case Trim(ComboMedioAbastecimiento.value)
    
    Case "ETV"
    ComboVendedorCompra = EtvCompra.value
    EtvVendedorCompra = EtvCompra.value
    EtvTrasladoCompra = EtvCompra.value
    EtvVendedorCompra = EtvCompra.value
    PlazaCompraOrigen = PlazaCompra.value

    Case "INTERBANCARIO"
    PlazaCompraOrigen = PlazaCompra.value
    
    Case "NET-CASH"
    ComboVendedorCompra = "BBVA BANCOMER"
    
    Case "CEPAE"
    ComboVendedorCompra = "BANAMEX"
    
    End Select


''''''''''''''NAVEGACI|fffd|N FORMULARIO''''''''''''''''
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.EtvCompra.SetFocus
        
    Else
        'ir a siguiente textbox
        Me.MontoInicialRequerido.SetFocus
       
    End If
    
    
End If
    
End Sub


Private Sub MontoInicialRequerido_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    
If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then
    
    If IsNumeric(Me.MontoInicialRequerido.value) = False Then
    Me.MontoInicialRequerido = 0
    ElseIf Me.MontoInicialRequerido <> "" Then
    Me.MontoInicialRequerido = FormatCurrency(MontoInicialRequerido)
    End If

''''''''''''''NAVEGACI|fffd|N FORMULARIO''''''''''''''''
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.ComboMedioAbastecimiento.SetFocus
       
    Else
        'ir a siguiente textbox
        Me.ComboVendedorCompra.SetFocus
       
    End If
    

End If
    
End Sub



Private Sub ComboVendedorCompra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then

''''''''''''''NAVEGACI|fffd|N FORMULARIO''''''''''''''''
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.MontoInicialRequerido.SetFocus
       
    Else
        'ir a siguiente textbox
        Me.ComboRespuestaVendedor.SetFocus
        
    End If
    
End If

End Sub


Private Sub ComboRespuestaVendedor_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then

''''''''''''''NAVEGACI|fffd|N FORMULARIO''''''''''''''''
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.ComboVendedorCompra.SetFocus
        
    Else
        'ir a siguiente textbox
        Me.ComboDiaTrasladoCompra.SetFocus
        
    End If
    
End If

End Sub





Private Sub ComboDiaTrasladoCompra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then

''''''''''''''NAVEGACI|fffd|N FORMULARIO''''''''''''''''
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.ComboRespuestaVendedor.SetFocus
        
    Else
        'ir a siguiente textbox
        Me.ComboMesesTrasladoCompra.SetFocus
        
    End If
    
End If

End Sub



Private Sub ComboMesesTrasladoCompra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then

''''''''''''''NAVEGACI|fffd|N FORMULARIO''''''''''''''''
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.ComboDiaTrasladoCompra.SetFocus
        
    Else
        'ir a siguiente textbox
        Me.ComboAnioTrasladoCompra.SetFocus
        
    End If
    
End If

End Sub


Private Sub ComboAnioTrasladoCompra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then

''''''''''''''NAVEGACI|fffd|N FORMULARIO''''''''''''''''
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.ComboMesesTrasladoCompra.SetFocus
        
    Else
        'ir a siguiente textbox
        Me.PlazaCompraOrigen.SetFocus
        
    End If
    
End If

End Sub


Private Sub PlazaCompraOrigen_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then

''''''''''''''NAVEGACI|fffd|N FORMULARIO''''''''''''''''
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.ComboAnioTrasladoCompra.SetFocus
        
    Else
        'ir a siguiente textbox
        Me.EtvVendedorCompra.SetFocus
       
    End If
    
End If

End Sub


Private Sub EtvVendedorCompra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then

''''''''''''''NAVEGACI|fffd|N FORMULARIO''''''''''''''''
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.PlazaCompraOrigen.SetFocus
        
    Else
        'ir a siguiente textbox
        Me.EtvTrasladoCompra.SetFocus
        
    End If
    
End If

End Sub

Private Sub EtvTrasladoCompra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then

''''''''''''''NAVEGACI|fffd|N FORMULARIO''''''''''''''''
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.EtvVendedorCompra.SetFocus
        
    Else
        'ir a siguiente textbox
        Me.ClaveRastreoCompra.SetFocus
        
    End If
    
End If

End Sub




Private Sub ClaveRastreoCompra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then

''''''''''''''NAVEGACI|fffd|N FORMULARIO''''''''''''''''
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.EtvTrasladoCompra.SetFocus
        
    Else
        'ir a siguiente textbox
        Me.FolioSolicitudCompra.SetFocus
        
    End If
    
End If

End Sub

Private Sub FolioSolicitudCompra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then

''''''''''''''NAVEGACI|fffd|N FORMULARIO''''''''''''''''
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.ClaveRastreoCompra.SetFocus
        
    Else
        'ir a siguiente textbox
        Me.BillMilCompra.SetFocus
        
    End If
    
End If

End Sub


'Private Sub ComboMedioAbastecimiento_Change()
'
'If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then
'
'    Select Case ComboMedioAbastecimiento.value
'
'    Case "ETV"
'    ComboVendedorCompra = EtvCompra.value
'    EtvVendedorCompra = EtvCompra.value
'    EtvTrasladoCompra = EtvCompra.value
'
'    End Select
'
'
'''''''''''''''NAVEGACI|fffd|N FORMULARIO''''''''''''''''
'    '37 = LEFT
'    '38 = UP
'    If KeyCode = 38 Or KeyCode = 37 Then
'
'       Me.EtvCompra.SetFocus
'
'    Else
'        'ir a siguiente textbox
'        Me.MontoInicialRequerido.SetFocus
'
'    End If
'
'
'End If
'
'End Sub





Private Sub UserForm_initialize()
    'inicializar campos

Application.ScreenUpdating = False
Call VariablesGlobales

'valores de combos

ComboMesesCompra.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")

ComboDiaCompra.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)

ComboAnioCompra.List = Array(2019, 2020)

ComboMesesTrasladoCompra.List = Array("Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre")

ComboDiaTrasladoCompra.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)

ComboAnioTrasladoCompra.List = Array(2019, 2020)

ComboRespuestaVendedor.List = Array("EN GESTION", "ACEPTADA", "RECHAZADA")


Dim X, Y, z, NRegistros As Long


Dim HojaActual As String

If ActiveSheet.Name = sh17 Or ActiveSheet.Name = sh24 Then
'sh17 = "Registro COMPRAS"
'sh24 = "pm_PLANEACION_COMPRAS"
HojaActual = ActiveSheet.Name
Else
HojaActual = sh17

End If


Y = 1
'fila de encabezados de la hoja de Registro Compras
z = 5
NRegistros = Range("a5", Range("a5").End(xlDown)).Count


'evaluar si hay informaci|fffd|n en registro
If NRegistros > 100 Then
X = 6

ElseIf NRegistros < 100 And ActiveCell.Row > 5 And Cells(ActiveCell.Row, 1).value <> "" Then
X = ActiveCell.Row

ElseIf NRegistros < 100 And ActiveCell.Row <= 5 Then
X = NRegistros + 5

Else
X = NRegistros + 5


End If


'Fecha del d|fffd|a
Dim DiaCompra, MesCompra, AnioCompra As Integer
Dim fechaValor As Date
Dim MesCompraLabel As String

fechaValor = Date
DiaCompra = Day(fechaValor)
MesCompra = Month(fechaValor)
AnioCompra = Year(fechaValor)

On Error Resume Next

'nombre del mes

MesCompraLabel = NombresMesesLargo(Int(MesCompra))

'fecha de registro de la compra
With Me.ComboDiaCompra
    .value = DiaCompra
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.ComboMesesCompra
    .value = MesCompraLabel
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.ComboAnioCompra
    .value = AnioCompra
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

'fecha de registro de la compra
With Me.ComboDiaTrasladoCompra
    .value = DiaCompra
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.ComboMesesTrasladoCompra
    .value = MesCompraLabel
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.ComboAnioTrasladoCompra
    .value = AnioCompra
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

            With Me.PlazaCompra
                .value = Cells(X, 3).value
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.EtvCompra
                .value = Cells(X, 4).value
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.FolioSolicitudCompra
                .value = Cells(X, 33).value
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.ClaveRastreoCompra
                .value = Cells(X, 34).value
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.ComboMedioAbastecimiento
                .value = Cells(X, 2).value
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.MontoInicialRequerido
                .value = FormatCurrency(Cells(X, 7).value)
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.ComboVendedorCompra
                .value = Cells(X, 9).value
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.EtvVendedorCompra
                .value = Cells(X, 10).value
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.PlazaCompraOrigen
                .value = Cells(X, 11).value
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.ComboRespuestaVendedor
                .value = Cells(X, 12).value
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.EtvTrasladoCompra
                .value = Cells(X, 13).value
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
           
            
            'BILLETES
            With Me.BillMilCompra
                .value = CCur(Cells(X, 16))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.Bill500Compra
                .value = CCur(Cells(X, 17))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.Bill200Compra
                .value = CCur(Cells(X, 18))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.Bill100Compra
                .value = CCur(Cells(X, 19))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.Bill50Compra
                .value = CCur(Cells(X, 20))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.Bill20Compra
                .value = CCur(Cells(X, 21))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.Coin100Compra
                .value = CCur(Cells(X, 23))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.Coin20Compra
                .value = CCur(Cells(X, 24))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.Coin10Compra
                .value = CCur(Cells(X, 25))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.Coin5Compra
                .value = CCur(Cells(X, 26))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.Coin2Compra
                .value = CCur(Cells(X, 27))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.Coin1Compra
                .value = CCur(Cells(X, 28))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.Coin050Compra
                .value = CCur(Cells(X, 29))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.Coin020Compra
                .value = CCur(Cells(X, 30))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.Coin010Compra
                .value = CCur(Cells(X, 31))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            With Me.Coin005Compra
                .value = CCur(Cells(X, 32))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            
            'importe
            With Me.TotalBilletesCompra
                .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            
            With Me.TotalMonedasCompra
                .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With
            
            
            With Me.TotalCompra
                .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                .SetFocus
                .SelStart = 0
                .SelLength = Len(.Text)
            End With

On Error GoTo 0

''''''combobox''''''''''''''''''

Sheets(HojaActual).Select
'encabezados hoja Movimientos
Sheets(HojaActual).Select
Cells(z, Y) = shCom1
Cells(z, Y + 1) = shCom2
Cells(z, Y + 2) = shCom3
Cells(z, Y + 3) = shCom4
Cells(z, Y + 4) = shCom5
Cells(z, Y + 5) = shCom6
Cells(z, Y + 6) = shCom7
Cells(z, Y + 7) = shCom8
Cells(z, Y + 8) = shCom9
Cells(z, Y + 9) = shCom10
Cells(z, Y + 10) = shCom11
Cells(z, Y + 11) = shCom12
Cells(z, Y + 12) = shCom13
Cells(z, Y + 13) = shCom14
Cells(z, Y + 14) = shCom15
Cells(z, Y + 15) = shCom16
Cells(z, Y + 16) = shCom17
Cells(z, Y + 17) = shCom18
Cells(z, Y + 18) = shCom19
Cells(z, Y + 19) = shCom20
Cells(z, Y + 20) = shCom21
Cells(z, Y + 21) = shCom22
Cells(z, Y + 22) = shCom23
Cells(z, Y + 23) = shCom24
Cells(z, Y + 24) = shCom25
Cells(z, Y + 25) = shCom26
Cells(z, Y + 26) = shCom27
Cells(z, Y + 27) = shCom28
Cells(z, Y + 28) = shCom29
Cells(z, Y + 29) = shCom30
Cells(z, Y + 30) = shCom31
Cells(z, Y + 31) = shCom32
Cells(z, Y + 32) = shCom33
Cells(z, Y + 33) = shCom34
Cells(z, Y + 34) = shCom35
Cells(z, Y + 35) = shCom36

Sheets(HojaActual).Select

Application.ScreenUpdating = True

End Sub


''Private Sub CommandButton2_Click()
''
''EtvTrasladoCompra.Enabled = True
''
''End Sub
'
'



Private Sub BillMilCompra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113

'9 = TAB, 13 = ENTER, 37 = LEFT, 38 = UP, 39 = RIGHT, 40 = DOWN

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.BillMilCompra.value > 0 And IsNumeric(Me.BillMilCompra.value) Then
                'validar si es divisible el registro capturado
                If (Int(Me.BillMilCompra.value) \ 1000) * 1000 <> Val(Me.BillMilCompra.value) Then
                    Me.BillMilCompra = 0
                    With Me.BillMilCompra
                            .value = CCur(BillMilCompra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                        .value = FormatCurrency((Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.BillMilCompra
                            .value = CCur(BillMilCompra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.BillMilCompra.value = 0 Or Me.BillMilCompra.value = "" Or WorksheetFunction.IsText(Me.BillMilCompra.value) = True Then
                With Me.BillMilCompra
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.FolioSolicitudCompra.SetFocus
    
    Else
        'ir a siguiente textbox
        Me.Bill500Compra.SetFocus
    End If


End If



End Sub

Private Sub Bill500Compra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Bill500Compra.value > 0 And IsNumeric(Me.Bill500Compra.value) Then
               'validar si es divisible el registro capturado
                If (Int(Me.Bill500Compra.value) \ 500) * 500 <> Val(Me.Bill500Compra.value) Then
                    Me.Bill500Compra = 0
                    With Me.Bill500Compra
                            .value = CCur(Bill500Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                        .value = FormatCurrency((Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Bill500Compra
                            .value = CCur(Bill500Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Bill500Compra.value = 0 Or Me.Bill500Compra.value = "" Or WorksheetFunction.IsText(Me.Bill500Compra.value) = True Then
                With Me.Bill500Compra
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

    
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.BillMilCompra.SetFocus
    
    Else
        'ir a siguiente textbox
        Me.Bill200Compra.SetFocus
    End If

End If


End Sub

Private Sub Bill200Compra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Bill200Compra.value > 0 And IsNumeric(Me.Bill200Compra.value) Then
                'validar si es divisible el registro capturado
                If (Int(Me.Bill200Compra.value) \ 200) * 200 <> Val(Me.Bill200Compra.value) Then
                    Me.Bill200Compra = 0
                    With Me.Bill200Compra
                            .value = CCur(Bill200Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                        .value = FormatCurrency((Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Bill200Compra
                            .value = CCur(Bill200Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Bill200Compra.value = 0 Or Me.Bill200Compra.value = "" Or WorksheetFunction.IsText(Me.Bill200Compra.value) = True Then
                With Me.Bill200Compra
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.Bill500Compra.SetFocus
    
    Else
        'ir a siguiente textbox
        Me.Bill100Compra.SetFocus
        
    End If

End If



End Sub

Private Sub Bill100Compra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Bill100Compra.value > 0 And IsNumeric(Me.Bill100Compra.value) Then
                'validar si es divisible el registro capturado
                If (Int(Me.Bill100Compra.value) \ 100) * 100 <> Val(Me.Bill100Compra.value) Then
                    Me.Bill100Compra = 0
                    With Me.Bill100Compra
                            .value = CCur(Bill100Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                        .value = FormatCurrency((Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Bill100Compra
                            .value = CCur(Bill100Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Bill100Compra.value = 0 Or Me.Bill100Compra.value = "" Or WorksheetFunction.IsText(Me.Bill100Compra.value) = True Then
                With Me.Bill100Compra
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If
    
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.Bill200Compra.SetFocus
    
    Else
        'ir a siguiente textbox
        Me.Bill50Compra.SetFocus
        
    End If

End If




End Sub


Private Sub Bill50Compra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Bill50Compra.value > 0 And IsNumeric(Me.Bill50Compra.value) Then
               'validar si es divisible el registro capturado
                If (Int(Me.Bill50Compra.value) \ 50) * 50 <> Val(Me.Bill50Compra.value) Then
                    Me.Bill50Compra = 0
                    With Me.Bill50Compra
                            .value = CCur(Bill50Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                        .value = FormatCurrency((Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Bill50Compra
                            .value = CCur(Bill50Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Bill50Compra.value = 0 Or Me.Bill50Compra.value = "" Or WorksheetFunction.IsText(Me.Bill50Compra.value) = True Then
                With Me.Bill50Compra
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.Bill100Compra.SetFocus
    
    Else
        'ir a siguiente textbox
        Me.Bill20Compra.SetFocus
        
    End If


End If


End Sub
Private Sub Bill20Compra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Bill20Compra.value > 0 And IsNumeric(Me.Bill20Compra.value) Then
                'validar si es divisible el registro capturado
                If (Int(Me.Bill20Compra.value) \ 20) * 20 <> Val(Me.Bill20Compra.value) Then
                    Me.Bill20Compra = 0
                    With Me.Bill20Compra
                            .value = CCur(Bill20Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                        .value = FormatCurrency((Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Bill20Compra
                            .value = CCur(Bill20Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Bill20Compra.value = 0 Or Me.Bill20Compra.value = "" Or WorksheetFunction.IsText(Me.Bill20Compra.value) = True Then
                With Me.Bill20Compra
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If
    
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.Bill50Compra.SetFocus
    
    Else
        'ir a siguiente textbox
        Me.Coin100Compra.SetFocus
        
    End If


End If


End Sub



Private Sub Coin100Compra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin100Compra.value > 0 And IsNumeric(Me.Coin100Compra.value) Then
                'validar si es divisible el registro capturado
                If (Int(Me.Coin100Compra.value) \ 100) * 100 <> Val(Me.Coin100Compra.value) Then
                    Me.Coin100Compra = 0
                    With Me.Coin100Compra
                            .value = CCur(Coin100Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                        .value = FormatCurrency((Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin100Compra
                            .value = CCur(Coin100Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin100Compra.value = 0 Or Me.Coin100Compra.value = "" Or WorksheetFunction.IsText(Me.Coin100Compra.value) = True Then
                With Me.Coin100Compra
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.Bill20Compra.SetFocus
    
    Else
        'ir a siguiente textbox
        Me.Coin20Compra.SetFocus
        
    End If


End If



End Sub

Private Sub Coin20Compra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin20Compra.value > 0 And IsNumeric(Me.Coin20Compra.value) Then
                'validar si es divisible el registro capturado
                If (Int(Me.Coin20Compra.value) \ 20) * 20 <> Val(Me.Coin20Compra.value) Then
                    Me.Coin20Compra = 0
                    With Me.Coin20Compra
                            .value = CCur(Coin20Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                        .value = FormatCurrency((Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin20Compra
                            .value = CCur(Coin20Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin20Compra.value = 0 Or Me.Coin20Compra.value = "" Or WorksheetFunction.IsText(Me.Coin20Compra.value) = True Then
                With Me.Coin20Compra
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.Coin100Compra.SetFocus
    
    Else
        'ir a siguiente textbox
        Me.Coin10Compra.SetFocus
        
    End If

End If



End Sub

Private Sub Coin10Compra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin10Compra.value > 0 And IsNumeric(Me.Coin10Compra.value) Then
                    'validar si es divisible el registro capturado
                    If (Int(Me.Coin10Compra.value) \ 10) * 10 <> Val(Me.Coin10Compra.value) Then
                        Me.Coin10Compra = 0
                    With Me.Coin10Compra
                            .value = CCur(Coin10Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                        .value = FormatCurrency((Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin10Compra
                            .value = CCur(Coin10Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin10Compra.value = 0 Or Me.Coin10Compra.value = "" Or WorksheetFunction.IsText(Me.Coin10Compra.value) = True Then
                With Me.Coin10Compra
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.Coin20Compra.SetFocus
    
    Else
        'ir a siguiente textbox
        Me.Coin5Compra.SetFocus
        
    End If

End If




End Sub

Private Sub Coin5Compra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin5Compra.value > 0 And IsNumeric(Me.Coin5Compra.value) Then
                    'validar si es divisible el registro capturado
                    If (Int(Me.Coin5Compra.value) \ 5) * 5 <> Val(Me.Coin5Compra.value) Then
                        Me.Coin5Compra = 0
                    With Me.Coin5Compra
                            .value = CCur(Coin5Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                        .value = FormatCurrency((Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin5Compra
                            .value = CCur(Coin5Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin5Compra.value = 0 Or Me.Coin5Compra.value = "" Or WorksheetFunction.IsText(Me.Coin5Compra.value) = True Then
                With Me.Coin5Compra
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If
    
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.Coin10Compra.SetFocus
    
    Else
        'ir a siguiente textbox
        Me.Coin2Compra.SetFocus
        
    End If
    

End If


'Me.Coin5Compra.SetFocus

End Sub

Private Sub Coin2Compra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin2Compra.value > 0 And IsNumeric(Me.Coin2Compra.value) Then
                    'validar si es divisible el registro capturado
                    If (Int(Me.Coin2Compra.value) \ 2) * 2 <> Val(Me.Coin2Compra.value) Then
                        Me.Coin2Compra = 0
                    With Me.Coin2Compra
                            .value = CCur(Coin2Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                        .value = FormatCurrency((Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin2Compra
                            .value = CCur(Coin2Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin2Compra.value = 0 Or Me.Coin2Compra.value = "" Or WorksheetFunction.IsText(Me.Coin2Compra.value) = True Then
                With Me.Coin2Compra
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If
    
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.Coin5Compra.SetFocus
    
    Else
        'ir a siguiente textbox
        Me.Coin1Compra.SetFocus
        
    End If
    

End If

'Me.Coin2Compra.SetFocus

End Sub


Private Sub Coin1Compra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin1Compra.value > 0 And IsNumeric(Me.Coin1Compra.value) Then
                'validar si es divisible el registro capturado
                    If (Int(Me.Coin1Compra.value) \ 1) * 1 <> Val(Me.Coin1Compra.value) Then
                        Me.Coin1Compra = 0
                    With Me.Coin1Compra
                            .value = CCur(Coin1Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                        .value = FormatCurrency((Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin1Compra
                            .value = CCur(Coin1Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin1Compra.value = 0 Or Me.Coin1Compra.value = "" Or WorksheetFunction.IsText(Me.Coin1Compra.value) = True Then
                With Me.Coin1Compra
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If
    
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.Coin2Compra.SetFocus
    
    Else
        'ir a siguiente textbox
        Me.Coin050Compra.SetFocus
        
    End If
    

End If

'Me.Coin1Compra.SetFocus

End Sub


Private Sub Coin050Compra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin050Compra.value > 0 And IsNumeric(Me.Coin050Compra.value) Then
                'validar si es divisible el registro capturado
                    If Int((Me.Coin050Compra.value) / 0.5) * 0.5 <> Val(Me.Coin050Compra.value) Then
                        Me.Coin050Compra = 0
                    With Me.Coin050Compra
                            .value = CCur(Coin050Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                        .value = FormatCurrency((Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin050Compra
                            .value = CCur(Coin050Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin050Compra.value = 0 Or Me.Coin050Compra.value = "" Or WorksheetFunction.IsText(Me.Coin050Compra.value) = True Then
                With Me.Coin050Compra
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If
    
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.Coin1Compra.SetFocus
    
    Else
        'ir a siguiente textbox
        Me.Coin020Compra.SetFocus
        
    End If
    

End If


'Me.Coin050Compra.SetFocus

End Sub


Private Sub Coin020Compra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer
Dim Orig, Temp As String

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin020Compra.value > 0 And IsNumeric(Me.Coin020Compra.value) Then
                'validar si es divisible el registro capturado
                'Valores de la divisi|fffd|n
                    Orig = (Me.Coin020Compra.value) / 0.2
                    
                    
                    If ((((Me.Coin020Compra.value) / 0.2) * 0.2) - Val(Me.Coin020Compra.value)) > 0.01 Then
                        Me.Coin020Compra = 0
                    With Me.Coin020Compra
                            .value = CCur(Coin020Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                        .value = FormatCurrency((Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin020Compra
                            .value = CCur(Coin020Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin020Compra.value = 0 Or Me.Coin020Compra.value = "" Or WorksheetFunction.IsText(Me.Coin020Compra.value) = True Then
                With Me.Coin020Compra
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If
    
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.Coin050Compra.SetFocus
    
    Else
        'ir a siguiente textbox
        Me.Coin010Compra.SetFocus
        
    End If
    

End If


'Me.Coin020Compra.SetFocus

End Sub


Private Sub Coin010Compra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin010Compra.value > 0 And IsNumeric(Me.Coin010Compra.value) Then
                'validar si es divisible el registro capturado
                    If ((Me.Coin010Compra.value) / 0.1) * 0.1 <> Val(Me.Coin010Compra.value) Then
                        Me.Coin010Compra = 0
                    With Me.Coin010Compra
                            .value = CCur(Coin010Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                        .value = FormatCurrency((Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin010Compra
                            .value = CCur(Coin010Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin010Compra.value = 0 Or Me.Coin010Compra.value = "" Or WorksheetFunction.IsText(Me.Coin010Compra.value) = True Then
                With Me.Coin010Compra
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If
    
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.Coin020Compra.SetFocus
    
    Else
        'ir a siguiente textbox
        Me.Coin005Compra.SetFocus
        
    End If
    

End If


'Me.Coin010Compra.SetFocus

End Sub



Private Sub Coin005Compra_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin005Compra.value > 0 And IsNumeric(Me.Coin005Compra.value) Then
                'validar si es divisible el registro capturado
                    If ((Me.Coin005Compra.value) / 0.05) * 0.05 <> Val(Me.Coin005Compra.value) Then
                        Me.Coin005Compra = 0
                    With Me.Coin005Compra
                            .value = CCur(Coin005Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                        .value = FormatCurrency((Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin005Compra
                            .value = CCur(Coin005Compra)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin005Compra.value = 0 Or Me.Coin005Compra.value = "" Or WorksheetFunction.IsText(Me.Coin005Compra.value) = True Then
                With Me.Coin005Compra
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalCompra
                            .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesCompra
                        .value = FormatCurrency(Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasCompra
                        .value = FormatCurrency(Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If
    
    '37 = LEFT
    '38 = UP
    If KeyCode = 38 Or KeyCode = 37 Then
    
       Me.Coin010Compra.SetFocus
    
    Else
        'ir a siguiente textbox
        Me.BillMilCompra.SetFocus
        
    End If
    


End If




End Sub




''''''ESTATUS COMPRA

Private Sub FolioSolicitudCompra_change()

'                And Len(FolioSolicitudCompra) > 4 _
'        And Len(ClaveRastreoCompra) > 4 _

        If ComboRespuestaVendedor = "ACEPTADA" _
        And EtvTrasladoCompra <> "" _
        And ComboVendedorCompra <> "" _
        And PlazaCompra <> "" _
        And EtvCompra <> "" Then
        Me.EstatusCompra = "COMPRA REALIZADA"
        
        'Or Len(FolioSolicitudCompra) < 4 Or Len(ClaveRastreoCompra) < 4
        
        ElseIf ComboRespuestaVendedor = "ACEPTADA" And EtvTrasladoCompra = "" Then
        Me.EstatusCompra = "COMPRA PENDIENTE"
        
        End If

Me.FolioSolicitudCompra.SetFocus

End Sub


Private Sub ClaveRastreoCompra_change()

If ComboRespuestaVendedor = "ACEPTADA" _
And EtvTrasladoCompra <> "" _
And ComboVendedorCompra <> "" _
And PlazaCompra <> "" _
And EtvCompra <> "" Then

Me.EstatusCompra = "COMPRA REALIZADA"

ElseIf ComboRespuestaVendedor = "ACEPTADA" And EtvTrasladoCompra = "" Then
Me.EstatusCompra = "COMPRA PENDIENTE"


End If

Me.ClaveRastreoCompra.SetFocus

End Sub


Private Sub EtvTrasladoCompra_change()

If ComboRespuestaVendedor = "ACEPTADA" _
And EtvTrasladoCompra <> "" _
And ComboVendedorCompra <> "" _
And PlazaCompra <> "" _
And EtvCompra <> "" Then

Me.EstatusCompra = "COMPRA REALIZADA"

ElseIf ComboRespuestaVendedor = "ACEPTADA" And EtvTrasladoCompra = "" Then
Me.EstatusCompra = "COMPRA PENDIENTE"

End If

Me.EtvTrasladoCompra.SetFocus

End Sub



Private Sub ComboRespuestaVendedor_Change()

Select Case ComboRespuestaVendedor.value

Case "RECHAZADA"
FolioSolicitudCompra = ""
FolioSolicitudCompra.Locked = True
ClaveRastreoCompra = ""
ClaveRastreoCompra.Locked = True
EtvTrasladoCompra = ""
EtvTrasladoCompra.Locked = True
EtvTrasladoCompra = ""
EtvTrasladoCompra.Locked = True
Me.EstatusCompra = "SOLICITUD RECHAZADA"

Case "EN GESTION"
FolioSolicitudCompra.Locked = False
ClaveRastreoCompra.Locked = False
EtvTrasladoCompra.Locked = False
EtvTrasladoCompra.Locked = False
Me.EstatusCompra = "SOLICITUD PENDIENTE"
'
Case "ACEPTADA"
FolioSolicitudCompra.Locked = False
ClaveRastreoCompra.Locked = False
EtvTrasladoCompra.Locked = False
EtvTrasladoCompra.Locked = False


If ComboRespuestaVendedor = "ACEPTADA" And EtvTrasladoCompra = "" Then
Me.EstatusCompra = "COMPRA PENDIENTE"

ElseIf ComboRespuestaVendedor = "ACEPTADA" _
And EtvTrasladoCompra <> "" _
And ComboVendedorCompra <> "" _
And PlazaCompra <> "" _
And EtvCompra <> "" _
Then

Me.EstatusCompra = "COMPRA REALIZADA"

End If

End Select

Me.ComboRespuestaVendedor.SetFocus
End Sub
''
''
''
''
''
''
''
''
''
''
'''''''''''''''''''''''''''''''''''BOTON DE ACEPTAR''''''''''''''''''''''''''''''''''''''''
Private Sub CommandButton2_Click()
'bot|fffd|n de aceptar


        Application.ScreenUpdating = True
 
        
        Call VariablesGlobales
        
        Dim HojaActual As String
        Dim registroCadena As Variant
        
        If ActiveSheet.Name = sh17 Or ActiveSheet.Name = sh24 Then
        'sh17 = "Registro COMPRAS"
        'sh24 = "pm_PLANEACION_COMPRAS"
        HojaActual = ActiveSheet.Name
        Else
        HojaActual = sh17
        
        End If

        'ARREGLO DE MESES
                    Dim ArrMes(2, 12)

                    ArrMes(1, 1) = 1
                    ArrMes(1, 2) = 2
                    ArrMes(1, 3) = 3
                    ArrMes(1, 4) = 4
                    ArrMes(1, 5) = 5
                    ArrMes(1, 6) = 6
                    ArrMes(1, 7) = 7
                    ArrMes(1, 8) = 8
                    ArrMes(1, 9) = 9
                    ArrMes(1, 10) = 10
                    ArrMes(1, 11) = 11
                    ArrMes(1, 12) = 12

                    ArrMes(2, 1) = Meses1
                    ArrMes(2, 2) = Meses2
                    ArrMes(2, 3) = Meses3
                    ArrMes(2, 4) = Meses4
                    ArrMes(2, 5) = Meses5
                    ArrMes(2, 6) = Meses6
                    ArrMes(2, 7) = Meses7
                    ArrMes(2, 8) = Meses8
                    ArrMes(2, 9) = Meses9
                    ArrMes(2, 10) = Meses10
                    ArrMes(2, 11) = Meses11
                    ArrMes(2, 12) = Meses12



        Dim FilaInicio, row0 As Long
        row0 = 1

            Dim X, Y, z, NRegistros As Long
            Dim FolioControl As String
            'sh17 = "Registro COMPRAS"
            Sheets(HojaActual).Select
            Y = 1
            'fila de encabezados de la hoja de Registro Compras
            z = 5
            NRegistros = Range("a5", Range("a5").End(xlDown)).Count
            
            
            'evaluar si hay informaci|fffd|n en registro
            If NRegistros > 10000 Then
            X = 6
            FolioControl = "FC" & Format(Day(Date), "00") & Format(Month(Date), "00") & Year(Date) & Format(Hour(Now()), "00") & Format(Minute(Now()), "00") & Format(Str(Int(Rnd * 100)), "000")
            
            ElseIf NRegistros < 10000 And ActiveCell.Row > 5 And Cells(ActiveCell.Row, 1).value <> "" Then
            X = ActiveCell.Row
                
                'si no tiene folio asignar
                If Cells(X, 37) <> "" Then
                FolioControl = Cells(X, 37).value
                Else
                FolioControl = "FC" & Format(Day(Date), "00") & Format(Month(Date), "00") & Year(Date) & Format(Hour(Now()), "00") & Format(Minute(Now()), "00") & Format(Str(Int(Rnd * 100)), "000")
                End If
                
            ElseIf NRegistros < 10000 And ActiveCell.Row <= 5 Then
            X = NRegistros + 5
            FolioControl = "FC" & Format(Day(Date), "00") & Format(Month(Date), "00") & Year(Date) & Format(Hour(Now()), "00") & Format(Minute(Now()), "00") & Format(Str(Int(Rnd * 100)), "000")

            Else
            X = NRegistros + 5
            FolioControl = "FC" & Format(Day(Date), "00") & Format(Month(Date), "00") & Year(Date) & Format(Hour(Now()), "00") & Format(Minute(Now()), "00") & Format(Str(Int(Rnd * 100)), "000")

            
            End If

        'fecha de recepci|fffd|n. Obtener los valores registrados

        DiaTraslado = Val(Me.ComboDiaTrasladoCompra.Text)
        MesTraslado = Me.ComboMesesTrasladoCompra.Text
        AnioTraslado = Val(Me.ComboAnioTrasladoCompra.Text)

        'convertir el nombre del mes a n|fffd|mero
        For i = 1 To 12
            If MesTraslado = ArrMes(2, i) Then
            mesNumero = Val(ArrMes(1, i))
            End If
        Next

        'establecer la fecha de los 3 combobox
        FechaTraslado = Format((ComboDiaTrasladoCompra & "/" & ComboMesesTrasladoCompra & "/" & ComboAnioTrasladoCompra), "d/m/yyyy")

'        'evaluar la fecha de traslado
'        If FechaTraslado < FechaValorGeneral Or IsDate(FechaTraslado) = False Then
'        MsgBox "Fecha de traslado incorrecta"
'        Exit Sub
'        Else
        
        
        
        'crear carpetas de la fecha
        CARPETA_MES_COMPRAS (FechaTraslado)
        CARPETA_DIA_COMPRAS (FechaTraslado)
'        End If

        'registrar en Movimientos
        Sheets(HojaActual).Select
'
'        If Cells(2, 1) = "" And Cells(3, 1) = "" Then
'        FilaInicio = 2
'        Else
'        FilaInicio = (Range(Cells(Row0, 1), Cells(Row0, 1).End(xlDown)).Count) + 1
'
'        End If


Application.Calculation = xlManual



        'VALOR CAPTURADO
        Cells(X, 1) = Trim(EstatusCompra)
        Cells(X, 2) = Trim(ComboMedioAbastecimiento)
        Cells(X, 3) = Trim(PlazaCompra)
        Cells(X, 4) = Trim(EtvCompra)
        Cells(X, 5) = BuscarInfoMedioCompra(Trim(ComboMedioAbastecimiento), 1) & BuscarInfoPlaza(Trim(PlazaCompra), 1)
        
        Cells(X, 6) = Format((ComboDiaCompra & "/" & ComboMesesCompra & "/" & ComboAnioCompra), "m/d/yyyy")
        Cells(X, 7) = MontoInicialRequerido
        'Cells(x, 8) = TotalCompra
        Cells(X, 8) = Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + _
        Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)
        Cells(X, 9) = Trim(ComboVendedorCompra)
        Cells(X, 10) = Trim(EtvVendedorCompra)
        Cells(X, 11) = Trim(PlazaCompraOrigen)
        Cells(X, 12) = Trim(ComboRespuestaVendedor)
        Cells(X, 13) = Trim(EtvTrasladoCompra)
        Cells(X, 14) = Format((ComboDiaTrasladoCompra & "/" & ComboMesesTrasladoCompra & "/" & ComboAnioTrasladoCompra), "m/d/yyyy")
        Cells(X, 15) = Str(TotalBilletesCompra)
        Cells(X, 16) = Val(BillMilCompra)
        Cells(X, 17) = Val(Bill500Compra)
        Cells(X, 18) = Val(Bill200Compra)
        Cells(X, 19) = Val(Bill100Compra)
        Cells(X, 20) = Val(Bill50Compra)
        Cells(X, 21) = Val(Bill20Compra)
        Cells(X, 22) = Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) _
                        + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)
        Cells(X, 23) = Val(Coin100Compra)
        Cells(X, 24) = Val(Coin20Compra)
        Cells(X, 25) = Val(Coin10Compra)
        Cells(X, 26) = Val(Coin5Compra)
        Cells(X, 27) = Val(Coin2Compra)
        Cells(X, 28) = Val(Coin1Compra)
        Cells(X, 29) = Val(Coin050Compra)
        Cells(X, 30) = Val(Coin020Compra)
        Cells(X, 31) = Val(Coin010Compra)
        Cells(X, 32) = Val(Coin005Compra)
        Cells(X, 33) = FolioSolicitudCompra
        Cells(X, 34) = ClaveRastreoCompra
        Cells(X, 35) = UsuarioWindows
        Cells(X, 36) = Now
        Cells(X, 37) = FolioControl
        
    'Agregar ID de caja
        'Call CK1_AgregarIdCompra
        
    'Agregar color por estatus
'        Call CK2_AgregarColoresEstatusCompras
        
'        'Agregar id de caja destino de traslado
'        Call CJ2_AgregarIdDestinoTraspasosSalida

''''''''''''''''''''REGISTRAR EN CARPETA COMPARTIDA

registroCadena = CStr(Trim(EstatusCompra) & "|" & _
                Trim(ComboMedioAbastecimiento) & "|" & _
                Trim(PlazaCompra) & "|" & _
                Trim(EtvCompra) & "|" & _
                BuscarInfoMedioCompra(Trim(ComboMedioAbastecimiento), 1) & BuscarInfoPlaza(Trim(PlazaCompra), 1) & "|" & _
                Format((ComboDiaCompra & "/" & ComboMesesCompra & "/" & ComboAnioCompra), "m/d/yyyy") & "|" & _
                MontoInicialRequerido & "|" & _
                Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra) & "|" & _
                Trim(ComboVendedorCompra) & "|" & _
                Trim(EtvVendedorCompra) & "|" & _
                Trim(PlazaCompraOrigen) & "|" & _
                Trim(ComboRespuestaVendedor) & "|" & _
                Trim(EtvTrasladoCompra) & "|" & _
                Format((ComboDiaTrasladoCompra & "/" & ComboMesesTrasladoCompra & "/" & ComboAnioTrasladoCompra), "m/d/yyyy") & "|" & _
                TotalBilletesCompra & "|" & _
                Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra) & "|" & _
                FolioSolicitudCompra & "|" & _
                ClaveRastreoCompra & "|" & _
                UsuarioWindows & "|" & _
                FolioControl & _
                Environ("UserName") & "|" & _
                Now())


    'registrar en carpeta compartida
        Call FileTxtString_UnRegistroTraspasosTxt(fechaOperacion, registroCadena, CStr(FolioControl & " " & Trim(PlazaCompra)), Trim(EtvCompra), 2)

'''''''''''''''''''''Agregar a hoja de servicios programados SERVICIOS TRASLADO''''''''''''''''''''

If Trim(EtvCompra) <> Trim(EtvVendedorCompra) Or Trim(PlazaCompra) <> (PlazaCompraOrigen) Then


            'sh22 = "ProgramacionServicios"
            Sheets(sh22).Select
            
            Y = 1
            'fila de encabezados de la hoja de Registro Compras
            z = 5
            NRegistros = Sheets(sh22).Range("a3", Range("a3").End(xlDown)).Count
            'fila inicio b|fffd|squeda
            rowSer = 2
            
            'marca de busqueda de folio
            Dim encontrado As Boolean
            encontrado = False
            
'columna folios de control
colFol = 37

'identificar si el folio de cotrol existe

Do While Cells(rowSer, 1) <> ""
    If Cells(rowSer, colFol) = FolioControl Then
    X = rowSer
    encontrado = True
    End If
    rowSer = rowSer + 1
Loop

'Si no encuentra valor finaliza
    If encontrado = False Then
                
                'evaluar si hay informaci|fffd|n en registro
                If NRegistros > 10000 And Range("a3") = "" Then
                X = 3
                
                ElseIf Range("a3") <> "" And Range("a4") = "" And Range("a5") = "" Then
                        
                X = 4
                
                ElseIf NRegistros < 10000 Then
                        
                X = NRegistros + 3
                
                End If

    End If
         
            
            
            
            
            
            Sheets(sh22).Select
            Cells(X, 1) = "PROGRAMADO"
            'idplaza
            Cells(X, 2) = BuscarInfoMedioCompra(Trim(ComboMedioAbastecimiento), 1) & BuscarInfoPlaza(Trim(PlazaCompraOrigen), 1)
            'etv
            Cells(X, 3) = Trim(EtvVendedorCompra)
            'plaza
            Cells(X, 4) = Trim(PlazaCompraOrigen)
            'id sucursal
            Cells(X, 5) = 0
            'sucursal
            Cells(X, 6) = 0
            'etv servicio
            Cells(X, 7) = Trim(EtvTrasladoCompra)
            'fecha planeacion
            Cells(X, 8) = Format((ComboDiaCompra & "/" & ComboMesesCompra & "/" & ComboAnioCompra), "m/d/yyyy")
            'fecha servicio
            Cells(X, 9) = Format((ComboDiaTrasladoCompra & "/" & ComboMesesTrasladoCompra & "/" & ComboAnioTrasladoCompra), "m/d/yyyy")
            'tipo servicio
            Cells(X, 10) = "TRASLADO COMPRA"
            
            '''''''''''''CONCENTRACION''''''''''''''''
            'destino concentracion
            Cells(X, 11) = "CAJA"
            'ID SUCURSAL DESTINO
            Cells(X, 12) = ""
            'SUCURSAL DESTINO
            Cells(X, 13) = ""
            'ID CAJA DESTINO
            Cells(X, 14) = BuscarInfoMedioCompra(Trim(ComboMedioAbastecimiento), 1) & BuscarInfoPlaza(PlazaCompra, 1)
            'CAJA DESTINO
            Cells(X, 15) = Trim(PlazaCompra)
            
            'ETV DESTINO
            Cells(X, 16) = Trim(EtvCompra)
            
            ''''''''''''''DENOMINACIONES'''''''''''''''''''
            'IMPORTE SERVICIO
            Cells(X, 17) = Val(BillMilCompra) + Val(Bill500Compra) + Val(Bill200Compra) + Val(Bill100Compra) + Val(Bill50Compra) + Val(Bill20Compra) + _
        Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)
            'BILL 1000
            Cells(X, 18) = Val(BillMilCompra)
            'BILL 500
            Cells(X, 19) = Val(Bill500Compra)
            'BILL 200
            Cells(X, 20) = Val(Bill200Compra)
            'BILL 100
            Cells(X, 21) = Val(Bill100Compra)
            'BILL 50
            Cells(X, 22) = Val(Bill50Compra)
            'BILL 20
            Cells(X, 23) = Val(Bill20Compra)
            'COIN TOTAL
            Cells(X, 24) = Val(Coin100Compra) + Val(Coin20Compra) + Val(Coin10Compra) + Val(Coin5Compra) + Val(Coin2Compra) + Val(Coin1Compra) _
                        + Val(Coin050Compra) + Val(Coin020Compra) + Val(Coin010Compra) + Val(Coin005Compra)
            'COIN 100
            Cells(X, 25) = Val(Coin100Compra)
            'COIN 20
            Cells(X, 26) = Val(Coin20Compra)
            'COIN 10
            Cells(X, 27) = Val(Coin10Compra)
            'COIN 5
            Cells(X, 28) = Val(Coin5Compra)
            'COIN 2
            Cells(X, 29) = Val(Coin2Compra)
            'COIN 1
            Cells(X, 30) = Val(Coin1Compra)
            'COIN .5
            Cells(X, 31) = Val(Coin050Compra)
            'COIN .2
            Cells(X, 32) = Val(Coin020Compra)
            'COIN .1
            Cells(X, 33) = Val(Coin010Compra)
            'COIN .05
            Cells(X, 34) = Val(Coin005Compra)
            Cells(X, 37) = FolioControl
            
Else

End If

        
        
 Application.Calculation = xlAutomatic
 
 
        'limpiar campos de captura
        PlazaCompra = ""
        EtvCompra = ""
        FolioSolicitudCompra = ""
        ClaveRastreoCompra = ""
        ComboVendedorCompra = ""
        ComboRespuestaVendedor = ""
        EtvVendedorCompra = ""
        PlazaCompraOrigen = ""
        EtvTrasladoCompra = ""
        
        Sheets(HojaActual).Select

        
        Unload COMPRAS_REGISTRO

        Application.ScreenUpdating = False

        ActiveCell.Select

        MsgBox "Registro capturado"


End Sub


Attribute VB_Name = "CONFIRMACION_DOTACIONES"
Attribute VB_Base = "0{B7434C1F-7488-4315-8716-30B3533E867B}{8291E87A-5A6A-4CCA-B63A-231B45DFDD70}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton4_Click()

End Sub

Private Sub CommandButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
NAVEGAR_HOJAS.Show
End Sub

Private Sub CommandButton6_Click()

'''CONSULTAR DOTACIONES PROGRAMADAS

Call Bot_Fecha_Dotaciones

End Sub

Private Sub CommandButton7_Click()

Application.ScreenUpdating = False
Application.EnableEvents = False


''REGISTRAR DOTACI|fffd|N RECIBIDA
Dim fecha As Date
Dim fechaLab As Variant
Dim REGISTRO, idsuc, sucDot, fechaDot, horaDot, importeDot, etvDot As String
Dim AmPm As String
fechaLab = Me.ComboDiaDotacion.value & "-" & Me.ComboMesesDotacion.value & "-" & Me.ComboAnioDotacion.value

If Me.OptionButtonAM.value = True Then
    AmPm = "am"
Else
    AmPm = "pm"
End If

'Validar sucursal

If Me.SucursalDotacion.value = "" Then

    MsgBox "FALTA SUCURSAL"
    Exit Sub
End If

If Me.ImporteDotacion.value = "" Then
    MsgBox "FALTA IMPORTE"
    Exit Sub
End If


'validar fecha
If IsDate(fechaLab) = False Then
    'FECHA INCORRECTA
    MsgBox "FECHA INCORRECTA"
    Exit Sub
    
Else
    fecha = CDate(fechaLab)
    idsuc = BuscarIdSucursal(Me.SucursalDotacion.value)
    sucDot = Me.SucursalDotacion.value
    horaDot = CStr(Me.horaDotacion.value & ":" & Me.minutoDotacion.value & " " & AmPm)
    importeDot = Me.ImporteDotacion.value
    etvDot = Me.EtvTextDotacion.value
    
    REGISTRO = idsuc & "|" & _
                sucDot & "|" & _
                fecha & "|" & _
                horaDot & "|" & _
                importeDot & "|" & _
                etvDot & "|" & _
                Environ("UserName") & "|" & _
                Now()
    
    'registrar en hoja actual
    Call RegistrarDotacionHojaActual(idsuc, fecha, horaDot, importeDot, etvDot)
                
    'registrar en carpeta compartida
    Call FileTxtString_UnRegistroTraspasosTxt(fecha, REGISTRO, sucDot, etvDot, 1)
    
    
End If

    Unload CONFIRMACION_DOTACIONES
    
Application.ScreenUpdating = True
Application.EnableEvents = True


    MsgBox "Confirmaci|fffd|n registrada en hoja y en carpeta compartida"
    
End Sub

Sub RegistrarDotacionHojaActual(idsuc As Variant, fecha As Date, hora As Variant, importe As Variant, etv As Variant)

Call VariablesGlobales
Dim rango, rangoLookUp As Range
Dim row0, col0, row1 As Integer
Dim totRows As Long

Sheets(sh12).Select
row0 = 3
col0 = 1
totRows = Range("A65000").End(xlUp).Row

Set rangoLookUp = Range(Cells(row0, col0), Cells(totRows, col0 + 1))

For i = 1 To totRows

    With ActiveSheet.Range(Cells(row0, col0), Cells(totRows, col0))
        Set c = .Find(idsuc, LookIn:=xlValues)
        'MsgBox c.value & Chr(10) & Range(c.Address).Offset(0, 3).value
        If Not c Is Nothing And Range(c.Address).Offset(0, 3).value = etv Then
    '        Do
            Range(c.Address).Offset(0, 6).value = importe
            Range(c.Address).Offset(0, 7).value = fecha
            Range(c.Address).Offset(0, 8).value = hora
            Range(c.Address).Offset(0, 9).value = fecha
            Range(c.Address).Offset(0, 11).FormulaR1C1 = "=RC[-5]-RC[-7]"
            Range(c.Address).Offset(0, 12).value = Environ("UserName")
            Range(c.Address).Offset(0, 6).Select
            
            Exit For
    '        Do
    '            c.value = 5
    '
    '            Set c = .FindNext(c)
    '        Loop While Not c Is Nothing
        End If
    End With

row0 = row0 + 1

Next i


'lookupvalue = Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 2, False)
'
''Si no encuentra valor finaliza
'    If IsError(lookupvalue) Then
'        Me.ImporteDotacion.value = ""
'    Else
'        Me.ImporteDotacion.value = lookupvalue
'    End If
'
    
End Sub


Private Sub CommandButton8_Click()

Call VariablesGlobales

Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlManual

Dim fecha As Date
Dim fechaLab As Variant

fechaLab = Me.ComboDiaDotacion2.value & "-" & Me.ComboMesesDotacion2.value & "-" & Me.ComboAnioDotacion2.value

'validar fecha
If IsDate(fechaLab) = False Then
    'FECHA INCORRECTA
    MsgBox "FECHA INCORRECTA"
    Exit Sub
    
Else
    fecha = CDate(fechaLab)



Call CB1_MonitoreoDotacionesDiarias(fecha)


End If

Unload CONFIRMACION_DOTACIONES

Application.Calculation = xlAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True

MsgBox "Confirmaci|fffd|n de dotaciones finalizado"

End Sub

Private Sub EtvTextDotacion_Change()

Call VariablesGlobales
Dim rango, rangoLookUp As Range
Dim row0, col0, row1 As Integer
Dim totRows As Long
Dim DOTACIONES() As Variant

Sheets(sh12).Select
row0 = 3
col0 = 2
totRows = Range("A65000").End(xlUp).Row

ReDim DOTACIONES(totRows, 5)

For i = 1 To UBound(DOTACIONES)
'    'id sucursal
'    DOTACIONES(i, 1) = Cells(row0, 1)
    'SUCURSAL
    DOTACIONES(i, 2) = Cells(row0, 2)
'    'PLANEADOR
'    DOTACIONES(i, 3) = Cells(row0, 3)
    'ETV SERVICIO
    DOTACIONES(i, 4) = Cells(row0, 4)
    'DOTACI|fffd|N PROGRAMADA
    DOTACIONES(i, 5) = Cells(row0, 5)
    
    row0 = row0 + 1
    
Next i

For i = 1 To UBound(DOTACIONES)

    If CONFIRMACION_DOTACIONES.SucursalDotacion.value = DOTACIONES(i, 2) And _
        CONFIRMACION_DOTACIONES.EtvTextDotacion.value = DOTACIONES(i, 4) Then
    
        CONFIRMACION_DOTACIONES.ImporteDotacion.value = Format(DOTACIONES(i, 5), "$###,##0.00")
    
        Exit For
    
    Else
    
        CONFIRMACION_DOTACIONES.ImporteDotacion.value = ""
        
    End If
    

Next i


End Sub


Private Sub SucursalDotacion_Enter()
Call VariablesGlobales
Dim rango, rangoLookUp As Range
Dim row0, col0, row1 As Integer
Dim totRows As Long

Sheets(sh12).Select
row0 = 3
col0 = 2
totRows = Range("A65000").End(xlUp).Row

Set rangoLookUp = Range(Cells(row0, col0), Cells(totRows, col0 + 3))

lookupvalue = Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 4, False)

'Si no encuentra valor finaliza
    If IsError(lookupvalue) Then
        Me.ImporteDotacion.value = ""
        
    'MsgBox "NO ENCONTRADO" & vbNewLine & "Me.SucursalDotacion.value: " & Me.SucursalDotacion.value & vbNewLine & _
    "col0 = " & col0 & vbNewLine & _
    "-4- Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 4, False) = " & Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 4, False) & vbNewLine & _
    "-3- Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 3, False) = " & Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 3, False) & vbNewLine & _
    "-2- Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 2, False) = " & Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 2, False) & vbNewLine & _
    "-1- Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 1, False) = " & Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 1, False)
    
    
    ElseIf lookupvalue <> "" Then
        Me.ImporteDotacion.value = Format(Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 4, False), "$###,##0.00")
        Me.EtvTextDotacion.value = Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 3, False)
    
    End If

End Sub

Private Sub SucursalDotacion_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)

    
End Sub


Private Sub SucursalDotacion_Change()
Call VariablesGlobales
Dim rango, rangoLookUp As Range
Dim row0, col0, row1 As Integer
Dim totRows As Long

Sheets(sh12).Select
row0 = 3
col0 = 2
totRows = Range("A65000").End(xlUp).Row

Set rangoLookUp = Range(Cells(row0, col0), Cells(totRows, col0 + 3))

lookupvalue = Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 4, False)

'Si no encuentra valor finaliza
    If IsError(lookupvalue) Then
        Me.ImporteDotacion.value = ""

    'MsgBox "NO ENCONTRADO" & vbNewLine & "Me.SucursalDotacion.value: " & Me.SucursalDotacion.value & vbNewLine & _
    "col0 = " & col0 & vbNewLine & _
    "-4- Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 4, False) = " & Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 4, False) & vbNewLine & _
    "-3- Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 3, False) = " & Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 3, False) & vbNewLine & _
    "-2- Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 2, False) = " & Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 2, False) & vbNewLine & _
    "-1- Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 1, False) = " & Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 1, False)


    ElseIf lookupvalue <> "" Then
        Me.ImporteDotacion.value = Format(Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 4, False), "$###,##0.00")
        Me.EtvTextDotacion.value = Application.VLookup(Me.SucursalDotacion.value, rangoLookUp, 3, False)

    End If


    
'lookupvalue = ""


End Sub



Private Sub SucursalDotacion_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

Call VariablesGlobales
Dim row0, punteroIdSuc, punteroFechas As Integer
Dim totRows As Long
Dim DOTACIONES() As Variant

'sh12 = "Confirma_DOTACION"
Sheets(sh12).Select

row0 = 3
punteroIdSuc = 1
punteroFechas = 4
totRows = Range("A65000").End(xlUp).Row

ReDim DOTACIONES(totRows, 5)

For i = 1 To UBound(DOTACIONES)
    'id suc
    DOTACIONES(i, 1) = Cells(row0, punteroIdSuc)
    'sucursal
    DOTACIONES(i, 2) = Cells(row0, punteroIdSuc + 1)
    'planeador
    DOTACIONES(i, 3) = Cells(row0, punteroIdSuc + 2)
    'etv servicio
    DOTACIONES(i, 4) = Cells(row0, punteroIdSuc + 3)
    'importe
    DOTACIONES(i, 5) = Cells(row0, punteroIdSuc + 4)

Next i

For i = 1 To UBound(DOTACIONES)

        If Me.SucursalDotacion.value = DOTACIONES(i, 2) Then

            Me.ImporteDotacion.value = Format(DOTACIONES(i, 5), "$###,##0.00")

        End If

Next i
End Sub



Private Sub UserForm_initialize()

Dim fechaHoy, horaHoy As Date
Dim diaVal, mesVal, anioVal, horaVal, minutVal As Integer
Dim diaLab, mesLab, anioLab, NombreMes As String
Dim AmPm As String


fechaHoy = Date
horaHoy = Now()

diaVal = Day(fechaHoy)
mesVal = Month(fechaHoy)
anioVal = Year(fechaHoy)

horaVal = Hour(horaHoy)
minutVal = Minute(horaHoy)

If horaVal = 12 Then

    horaVal = 12
    AmPm = "PM"
    Me.OptionButtonPM = True
    Me.OptionButtonAM = False
    
ElseIf horaVal > 12 Then

    horaVal = horaVal - 12
    AmPm = "PM"
    Me.OptionButtonPM = True
    Me.OptionButtonAM = False
    
Else

    horaVal = horaVal
    AmPm = "AM"
    Me.OptionButtonAM = True
    Me.OptionButtonPM = False
End If


Me.ComboDiaDotacion.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)
Me.ComboMesesDotacion.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")
Me.ComboAnioDotacion.List = Array(2019, 2020)

Me.ComboDiaDotacion2.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)
Me.ComboMesesDotacion2.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")
Me.ComboAnioDotacion2.List = Array(2019, 2020)

Me.horaDotacion.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)


Select Case mesVal
Case 1
NombreMes = "ENERO"
Case 2
NombreMes = "FEBRERO"
Case 3
NombreMes = "MARZO"
Case 4
NombreMes = "ABRIL"
Case 5
NombreMes = "MAYO"
Case 6
NombreMes = "JUNIO"
Case 7
NombreMes = "JULIO"
Case 8
NombreMes = "AGOSTO"
Case 9
NombreMes = "SEPTIEMBRE"
Case 10
NombreMes = "OCTUBRE"
Case 11
NombreMes = "NOVIEMBRE"
Case 12
NombreMes = "DICIEMBRE"
End Select

Me.ComboDiaDotacion.value = diaVal
Me.ComboMesesDotacion.value = NombreMes
Me.ComboAnioDotacion.value = anioVal

Me.ComboDiaDotacion2.value = diaVal
Me.ComboMesesDotacion2.value = NombreMes
Me.ComboAnioDotacion2.value = anioVal


Me.horaDotacion.value = horaVal
Me.minutoDotacion.value = minutVal

End Sub
Attribute VB_Name = "CONFIRMACION_SERVICIOS"
Attribute VB_Base = "0{171E1DD4-7140-4A28-8354-C05A92B02E2F}{4119F080-81EF-4DC2-B194-18483EED1B39}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False





Private Sub CheckBoxAgregar_Click()
If Me.CheckBoxAgregar.value = True Then
    Me.CheckBoxLimpiarAgregar.value = False
End If

End Sub

Private Sub CheckBoxCorreo_Click()

If Me.CheckBoxCorreo.value = True And Me.CheckBox1.value = False And _
Me.CheckBox2.value = False And _
Me.CheckBox3.value = False And _
Me.CheckBox4.value = False And _
Me.CheckBox5.value = False And _
Me.CheckBox6.value = False And _
Me.CheckBox7.value = False And _
Me.CheckBox8.value = False And _
Me.CheckBox9.value = False And _
Me.CheckBox10.value = False And _
Me.CheckBox11.value = False And _
Me.CheckBox12.value = False And _
Me.CheckBox13.value = False And _
Me.CheckBox14.value = False And _
Me.CheckBox15.value = False And _
Me.CheckBox16.value = False And _
Me.CheckBox17.value = False And _
Me.CheckBox18.value = False And _
Me.CheckBox19.value = False And _
Me.CheckBox20.value = False Then _

MsgBox "Seleccione al menos una opci|fffd|n"
Me.CheckBoxCorreo.value = False

End If

End Sub

Private Sub CheckBoxLimpiarAgregar_Click()
If Me.CheckBoxLimpiarAgregar.value = True Then
    Me.CheckBoxAgregar.value = False
End If
End Sub

Private Sub CheckBoxNinguno_Click()
If Me.CheckBoxNinguno = True Then

Me.CheckBox1.value = False
Me.CheckBox2.value = False
Me.CheckBox3.value = False
Me.CheckBox4.value = False
Me.CheckBox5.value = False
Me.CheckBox6.value = False
Me.CheckBox7.value = False
Me.CheckBox8.value = False
Me.CheckBox9.value = False
Me.CheckBox10.value = False
Me.CheckBox11.value = False
Me.CheckBox12.value = False
Me.CheckBox13.value = False
Me.CheckBox14.value = False
Me.CheckBox15.value = False
Me.CheckBox16.value = False
Me.CheckBox17.value = False
Me.CheckBox18.value = False
Me.CheckBox19.value = False
Me.CheckBox20.value = False
Me.CheckBoxTodos.value = False
Me.CheckBoxCorreo.value = False

End If
End Sub

Private Sub CheckBoxTodos_Click()

If Me.CheckBoxTodos = True Then
    If Me.CheckBox1.Visible = True Then
        Me.CheckBox1.value = True
    End If
    If Me.CheckBox2.Visible = True Then
        Me.CheckBox2.value = True
    End If
    If Me.CheckBox3.Visible = True Then
        Me.CheckBox3.value = True
    End If
    If Me.CheckBox4.Visible = True Then
        Me.CheckBox4.value = True
    End If
    If Me.CheckBox5.Visible = True Then
        Me.CheckBox5.value = True
    End If
    If Me.CheckBox6.Visible = True Then
        Me.CheckBox6.value = True
    End If
    If Me.CheckBox7.Visible = True Then
        Me.CheckBox7.value = True
    End If
    If Me.CheckBox8.Visible = True Then
        Me.CheckBox8.value = True
    End If
    If Me.CheckBox9.Visible = True Then
        Me.CheckBox9.value = True
    End If
    If Me.CheckBox10.Visible = True Then
        Me.CheckBox10.value = True
    End If
    If Me.CheckBox11.Visible = True Then
        Me.CheckBox11.value = True
    End If
    If Me.CheckBox12.Visible = True Then
        Me.CheckBox12.value = True
    End If
    If Me.CheckBox13.Visible = True Then
        Me.CheckBox13.value = True
    End If
    If Me.CheckBox14.Visible = True Then
        Me.CheckBox14.value = True
    End If
    If Me.CheckBox15.Visible = True Then
        Me.CheckBox15.value = True
    End If
    If Me.CheckBox16.Visible = True Then
        Me.CheckBox16.value = True
    End If
    If Me.CheckBox17.Visible = True Then
        Me.CheckBox17.value = True
    End If
    If Me.CheckBox18.Visible = True Then
        Me.CheckBox18.value = True
    End If
    If Me.CheckBox19.Visible = True Then
        Me.CheckBox19.value = True
    End If
    If Me.CheckBox20.Visible = True Then
        Me.CheckBox20.value = True
    End If
    
Me.CheckBoxNinguno.value = False

End If

End Sub



Private Sub ComboBoxTipoArchivo_Change()

End Sub

Private Sub CommandButton1_Click()
Dim fechaConsulta As Boolean

'''''''''''''''''''''''CONSULTAR INFORMACI|fffd|N''''''''''''''''''''''''''''''''

If Me.OptionButtonConsultaServicios.value = True Then
    'fecha
    fechaConsulta = IsDate(Me.ComboBoxDiaConfirmacion.value & "/" & Me.ComboBoxMesConfirmacion.value & " /" & _
                            Me.ComboBoxAnioConfirmacion.value)
    
    If Me.ComboBoxPlaneadores.value = "" Then
    MsgBox "Seleccione un Planeador"
    Exit Sub
    
    ElseIf Me.ComboBoxTipoArchivo.value = "" Then
    MsgBox "Seleccione un tipo de estatus de servicio PROGRAMADO / CONFIRMADO"
    Exit Sub

    ElseIf fechaConsulta = False Then
    MsgBox "Fecha incorrecta"
    Exit Sub
    
    ElseIf CDate(Me.ComboBoxDiaConfirmacion.value & "/" & Me.ComboBoxMesConfirmacion.value & " /" & _
                            Me.ComboBoxAnioConfirmacion.value) > Date Then
                            
    MsgBox "Fecha mayor al d|fffd|a actual"
    Exit Sub
    
    Else
    
    Call CI_ImportarServiciosEtv
    
    Unload CONFIRMACION_SERVICIOS
    
    End If
    
    
'''''''''''''''''''''''CONSOLIDAR INFO EN TXT''''''''''''''''''''''''''''''''

ElseIf Me.OptionButtonConsolidar.value = True Then
    
    'sh21 = "ConfirmacionServicios"
    Call CH0_6TxtConfirmacionServicios
    
    
'''''''''''''''''''''''LIMPIAR RANGO CAPTURA''''''''''''''''''''''''''''''''
        
ElseIf Me.OptionButtonLimpiar.value = True Then

    'sh21 = "ConfirmacionServicios"
    Sheets(sh21).Select
    Cells.Clear
    Call CI2_ServiciosEtvLayout
    
    MsgBox "|fffd|rea de captura limpia"
'    Rows("3:100000").Select
'    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
'    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
'    Range(Selection, Selection.End(xlDown)).Select
'    Selection.Clear
    

Else

MsgBox "Seleccione una opci|fffd|n"
Exit Sub
End If

End Sub


Private Sub CommandButton2_Click()
'si falta campo manadatorio
If Me.OptionButtonReporte.value = False Then

MsgBox "Seleccione la casilla"
Exit Sub

ElseIf Me.CheckBox1.value = False And Me.CheckBox2.value = False And _
    Me.CheckBox3.value = False And Me.CheckBox4.value = False And Me.CheckBox5.value = False And _
    Me.CheckBox6.value = False And Me.CheckBox7.value = False And Me.CheckBox8.value = False And _
    Me.CheckBox9.value = False And Me.CheckBox10.value = False And Me.CheckBox11.value = False And _
    Me.CheckBox12.value = False And Me.CheckBox13.value = False And Me.CheckBox14.value = False And _
    Me.CheckBox15.value = False And Me.CheckBox16.value = False And Me.CheckBox17.value = False And _
    Me.CheckBox18.value = False And Me.CheckBox19.value = False And Me.CheckBox20.value = False Then
    
MsgBox "Seleccione al menos una opci|fffd|n de servicio"
Exit Sub

ElseIf Me.OptionButtonReporte.value = True Then

Call CV0_ReporteConfirmacionServiciosRegistros

End If

End Sub




Private Sub CONSULTA_Change()

End Sub

Private Sub OptionButtonReporte_Click()
'cargar las opciones en el reporte
'sh21 = "ConfirmacionServicios"
Sheets(sh21).Select
Call VariablesGlobales
Dim Servicios As Collection
Set Servicios = New Collection
Dim row0, col0, colFin, rowFin, numReg, punteroServicios As Long
Dim rango As Range
row0 = 3
col0 = 1
rowFin = Cells(row0 - 1, col0).End(xlDown).Row
colFin = Cells(row0 - 1, col0).End(xlToRight).Column
punteroServicios = 10

If rowFin > 100000 Then
numReg = 1
Else
numReg = rowFin
End If

Set rango = Range(Cells(row0, punteroServicios), Cells(numReg, punteroServicios))

For Each cell In rango
    On Error Resume Next
    
    Servicios.Add cell.value, CStr(cell.value)
    
    On Error GoTo 0

Next cell


With Me.CheckBoxTodos
    .value = False
    .Caption = "TODOS"
    .Visible = True
    .Enabled = True
    .Locked = False
End With

With Me.CheckBoxNinguno
    .value = False
    .Caption = "NINGUNO"
    .Visible = True
    .Enabled = True
    .Locked = False
End With

With Me.CheckBoxCorreo
    .value = False
    .Caption = "GENERAR CORREO"
    .Visible = True
    .Enabled = True
    .Locked = False
End With


With Me.Label4
.Visible = True
End With

With Me.ComboBoxTipoArchivo
.Visible = True
End With


'AGREGAR VALORES DE COLECCI|fffd|N A TEXT


If Servicios.Count >= 1 Then

    With Me.CheckBox1
    .value = False
    .Caption = Servicios(1)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox1
    .value = False
    .Visible = False
    End With
    
End If


If Servicios.Count >= 2 Then

    With Me.CheckBox2
    .value = False
    .Caption = Servicios(2)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox2
    .value = False
    .Visible = False
    End With
    
End If

If Servicios.Count >= 3 Then

    With Me.CheckBox3
    .value = False
    .Caption = Servicios(3)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox3
    .value = False
    .Visible = False
    End With
    
End If

If Servicios.Count >= 4 Then

    With Me.CheckBox4
    .value = False
    .Caption = Servicios(4)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox4
    .value = False
    .Visible = False
    End With
    
End If

If Servicios.Count >= 5 Then

    With Me.CheckBox5
    .value = False
    .Caption = Servicios(5)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox5
    .value = False
    .Visible = False
    End With
    
End If

If Servicios.Count >= 6 Then

    With Me.CheckBox6
    .value = False
    .Caption = Servicios(6)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox6
    .value = False
    .Visible = False
    End With
    
End If

If Servicios.Count >= 7 Then

    With Me.CheckBox7
    .value = False
    .Caption = Servicios(7)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox7
    .value = False
    .Visible = False
    End With
    
End If

If Servicios.Count >= 8 Then

    With Me.CheckBox8
    .value = False
    .Caption = Servicios(8)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox8
    .value = False
    .Visible = False
    End With
    
End If

If Servicios.Count >= 9 Then

    With Me.CheckBox9
    .value = False
    .Caption = Servicios(9)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox9
    .value = False
    .Visible = False
    End With
    
End If

If Servicios.Count >= 10 Then

    With Me.CheckBox10
    .value = False
    .Caption = Servicios(10)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox10
    .value = False
    .Visible = False
    End With
    
End If


If Servicios.Count >= 11 Then

    With Me.CheckBox11
    .value = False
    .Caption = Servicios(11)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox11
    .value = False
    .Visible = False
    End With
    
End If

If Servicios.Count >= 12 Then

    With Me.CheckBox12
    .value = False
    .Caption = Servicios(12)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox12
    .value = False
    .Visible = False
    End With
    
End If

If Servicios.Count >= 13 Then

    With Me.CheckBox13
    .value = False
    .Caption = Servicios(13)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox13
    .value = False
    .Visible = False
    End With
    
End If

If Servicios.Count >= 14 Then

    With Me.CheckBox14
    .value = False
    .Caption = Servicios(14)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox14
    .value = False
    .Visible = False
    End With
    
End If

If Servicios.Count >= 15 Then

    With Me.CheckBox15
    .value = False
    .Caption = Servicios(15)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox15
    .value = False
    .Visible = False
    End With
    
End If

If Servicios.Count >= 16 Then

    With Me.CheckBox16
    .value = False
    .Caption = Servicios(16)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox16
    .value = False
    .Visible = False
    End With
    
End If

If Servicios.Count >= 17 Then

    With Me.CheckBox17
    .value = False
    .Caption = Servicios(17)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox17
    .value = False
    .Visible = False
    End With
    
End If

If Servicios.Count >= 18 Then

    With Me.CheckBox18
    .value = False
    .Caption = Servicios(18)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox18
    .value = False
    .Visible = False
    End With
    
End If

If Servicios.Count >= 19 Then

    With Me.CheckBox19
    .value = False
    .Caption = Servicios(19)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox19
    .value = False
    .Visible = False
    End With
    
End If

If Servicios.Count >= 20 Then

    With Me.CheckBox20
    .value = False
    .Caption = Servicios(20)
    .Visible = True
    .Enabled = True
    .Locked = False
    End With

Else
    
    With Me.CheckBox20
    .value = False
    .Visible = False
    End With
    
End If

End Sub

Private Sub UserForm_initialize()

Call VariablesGlobales
Dim dia, mes, anio As Integer
Dim diaLabel, mesLabel As String
Dim fechaConsulta As Date

If Weekday(fechaOperacion, vbMonday) = 1 Then
fechaConsulta = fechaOperacion - 3

Else
fechaConsulta = fechaOperacion - 1

End If

dia = Day(fechaConsulta)
mes = Month(fechaConsulta)
anio = Year(fechaConsulta)


Select Case mes
Case 1
mesLabel = "ENERO"
Case 2
mesLabel = "FEBRERO"
Case 3
mesLabel = "MARZO"
Case 4
mesLabel = "ABRIL"
Case 5
mesLabel = "MAYO"
Case 6
mesLabel = "JUNIO"
Case 7
mesLabel = "JULIO"
Case 8
mesLabel = "AGOSTO"
Case 9
mesLabel = "SEPTIEMBRE"
Case 10
mesLabel = "OCTUBRE"
Case 11
mesLabel = "NOVIEMBRE"
Case 12
mesLabel = "DICIEMBRE"

End Select

Me.ComboBoxMesConfirmacion.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")

Me.ComboBoxDiaConfirmacion.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)

Me.ComboBoxAnioConfirmacion.List = Array(2018, 2019)

Me.ComboBoxTipoArchivo.List = Array("CONFIRMADO", "PROGRAMADO")

'FECHA ACTUAL
Me.ComboBoxMesConfirmacion.value = mesLabel
Me.ComboBoxDiaConfirmacion.value = dia
Me.ComboBoxAnioConfirmacion.value = anio

Me.OptionButtonConsolidar.value = False
Me.OptionButtonConsultaServicios.value = False
Me.OptionButtonLimpiar.value = False

Me.CheckBoxAgregar.value = True
Me.CheckBoxLimpiarAgregar.value = False

'planeador
Me.ComboBoxPlaneadores.value = NombrePlaneador

With Me.Label4
.Visible = False
End With

With Me.ComboBoxTipoArchivo
.value = "PROGRAMADO"
End With

'''secci|fffd|n reportes
With Me.CheckBoxCorreo
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBoxNinguno
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBoxTodos
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox1
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox2
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox3
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox4
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox5
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox6
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox7
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox8
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox9
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox10
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox11
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox12
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox13
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox14
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox15
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox16
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox17
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox18
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox19
.value = False
.Caption = ""
.Visible = False
End With

With Me.CheckBox20
.value = False
.Caption = ""
.Visible = False
End With

Me.CONSULTA.SetFocus

End Sub
Attribute VB_Name = "CONSULTA_DATOS_DEL_DIA"
Attribute VB_Base = "0{325FAF21-4205-4100-8886-40B97EECB941}{8E6A7D7E-6C0C-48CA-8C30-177CB60FE72E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False

Call CB3_ConsultaDiariosDotacionCompra
MsgBox "SE GENER|fffd| LA CONSULTA EN UN ARCHIVO ADICIONAL"

Application.ScreenUpdating = True
Application.EnableEvents = True

End Sub

Private Sub OptionButtonDotaciones_Click()

End Sub
Attribute VB_Name = "CONSULTA_HISTORICO"
Attribute VB_Base = "0{E8813BC1-A25C-4C5D-A623-FCF0A20EAEEB}{BBD5001D-52F7-4E65-B5ED-F93079CCCE1D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CheckBoxAm_Click()
If Me.CheckBoxPm.value = True Then

    Me.CheckBoxAm = False

End If

End Sub

Private Sub CheckBoxPm_Click()
If Me.CheckBoxAm.value = True Then

    Me.CheckBoxPm = False
    
    
End If
End Sub


Private Sub CommandButton1_Click()

Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual

If Me.CheckBoxAm.value = False And Me.CheckBoxPm = False Then
MsgBox "Seleccione AM - PM . Horario de actualizaci|fffd|n del modelo de Pron|fffd|stico"
Exit Sub
End If


Call CV0_2ConsultaHistoricoVarios

Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True

End Sub

Private Sub CommandButton4_Click()

End Sub

Private Sub CommandButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
NAVEGAR_HOJAS.Show
End Sub

Private Sub OptionButtonTipo1_Click()

End Sub

Private Sub UserForm_initialize()

Me.ComboMesesIni.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")

Me.ComboDiaIni.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)

Me.ComboAnioIni.List = Array(2019, 2020)

Me.ComboMesesFin.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")

Me.ComboDiaFin.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)

Me.ComboAnioFin.List = Array(2019, 2020)

Me.ComboBoxTipoConsulta.List = Array("ARQUEOS", "CAJAS", "COMPRAS", "SERVICIOS ETV")


Me.ComboDiaPronostico.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)

Me.ComboBoxMesesPronostico.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")

Me.ComboBoxAnioPronostico.List = Array(2019, 2020)


Me.ComboDiaSuc.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)

Me.ComboMesesSuc.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")

Me.ComboAnioSuc.List = Array(2019, 2020)


Me.ComboBoxTipoConsulta.List = Array("ARQUEOS", "CAJAS", "COMPRAS", "SERVICIOS ETV")


Me.ComboBoxPlaneadores.value = "Todos"

Me.OptionButtonTipo1.value = False
Me.OptionButtonTipo2.value = True

Dim fechaIni, fechaValor, fechaHoy, fechaSuc As Date
Dim diaLabel, mesLabel, anioLabel As String
Dim diaVal, mesVal, anioVal As String

Dim diaLabelSuc, mesLabelSuc, anioLabelSuc As String
Dim diaValSuc, mesValSuc, anioValSuc As String

Dim diaHoyLabel, mesHoyLabel, anioHoyLabel As String
Dim diaHoyVal, mesHoyVal, anioHoyVal As String

fechaHoy = Date
fechaIni = Date
fechaSuc = Date - 1

'FECHA FECHA INI CAJAS PRIMER SECCI|fffd|N
If Weekday(fechaIni, vbMonday) = 1 Then
fechaIni = fechaIni - 3

ElseIf Weekday(fechaIni, vbMonday) = 7 Then
fechaIni = fechaIni - 2

Else
fechaIni = fechaIni - 1

End If

diaVal = Day(fechaIni)
mesVal = Month(fechaIni)
anioVal = Year(fechaIni)

diaLabel = diaVal
anioLabel = anioVal

Select Case mesVal
Case 1
mesLabel = "ENERO"
Case 2
mesLabel = "FEBRERO"
Case 3
mesLabel = "MARZO"
Case 4
mesLabel = "ABRIL"
Case 5
mesLabel = "MAYO"
Case 6
mesLabel = "JUNIO"
Case 7
mesLabel = "JULIO"
Case 8
mesLabel = "AGOSTO"
Case 9
mesLabel = "SEPTIEMBRE"
Case 10
mesLabel = "OCTUBRE"
Case 11
mesLabel = "NOVIEMBRE"
Case 12
mesLabel = "DICIEMBRE"
End Select


Me.ComboMesesIni.value = mesLabel
Me.ComboDiaIni.value = diaLabel
Me.ComboAnioIni.value = anioLabel

Me.ComboMesesFin.value = mesLabel
Me.ComboDiaFin.value = diaLabel
Me.ComboAnioFin.value = anioLabel

Me.ComboBoxTipoConsulta.value = "CAJAS"
Me.ComboBoxPlaneadores.value = "Todos"


diaHoyVal = Day(fechaHoy)
mesHoyVal = Month(fechaHoy)
anioHoyVal = Year(fechaHoy)

diaHoyLabel = diaHoyVal
anioHoyLabel = anioHoyVal

Select Case mesHoyVal
Case 1
mesHoyLabel = "ENERO"
Case 2
mesHoyLabel = "FEBRERO"
Case 3
mesHoyLabel = "MARZO"
Case 4
mesHoyLabel = "ABRIL"
Case 5
mesHoyLabel = "MAYO"
Case 6
mesHoyLabel = "JUNIO"
Case 7
mesHoyLabel = "JULIO"
Case 8
mesHoyLabel = "AGOSTO"
Case 9
mesHoyLabel = "SEPTIEMBRE"
Case 10
mesHoyLabel = "OCTUBRE"
Case 11
mesHoyLabel = "NOVIEMBRE"
Case 12
mesHoyLabel = "DICIEMBRE"
End Select

Me.ComboBoxMesesPronostico.value = mesHoyLabel
Me.ComboDiaPronostico.value = diaHoyLabel
Me.ComboBoxAnioPronostico.value = anioHoyLabel

'FECHA SUCURSALES
diaValSuc = Day(fechaSuc)
mesValSuc = Month(fechaSuc)
anioValSuc = Year(fechaSuc)

diaLabelSuc = diaValSuc
anioLabelSuc = anioValSuc

Select Case mesValSuc
Case 1
mesLabelSuc = "ENERO"
Case 2
mesLabelSuc = "FEBRERO"
Case 3
mesLabelSuc = "MARZO"
Case 4
mesLabelSuc = "ABRIL"
Case 5
mesLabelSuc = "MAYO"
Case 6
mesLabelSuc = "JUNIO"
Case 7
mesLabelSuc = "JULIO"
Case 8
mesLabelSuc = "AGOSTO"
Case 9
mesLabelSuc = "SEPTIEMBRE"
Case 10
mesLabelSuc = "OCTUBRE"
Case 11
mesLabelSuc = "NOVIEMBRE"
Case 12
mesLabelSuc = "DICIEMBRE"
End Select



Me.ComboMesesSuc.value = mesLabelSuc
Me.ComboDiaSuc.value = diaLabelSuc
Me.ComboAnioSuc.value = anioLabelSuc

'AM  - PM
If Hour(Now()) > 12 Then
    Me.CheckBoxAm.value = False
    Me.CheckBoxPm.value = True
Else
    Me.CheckBoxAm.value = True
    Me.CheckBoxPm.value = False
End If

End Sub
Attribute VB_Name = "CO_SERVICIOS_ETV"
Sub CO_RegistroMasivo()

''''''REGISTRAR TODO EN PROGRAMACI|fffd|N'''''''''

Call VariablesGlobales


'sh4 = "Info. Gral."
'sh5 = "DIRECTORIOS"

'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select

Dim iniRow, colIni, UltCell As Long
Dim PunteroMil, punteroFecha, PunteroMetal, PunteroConcentracion, PunteroRegistroMasivo As Integer
'fila de inicio
iniRow = 4
UltCell = Range("A3").SpecialCells(xlLastCell).Row
colIni = Cells(UltCell, 1).End(xlUp).Row

'numero de columna en hoja 3

PunteroMil = 38
punteroFecha = 37
PunteroMetal = 44
PunteroConcentracion = 56
PunteroRegistroMasivo = 78
'contar numero de registros en DetalleServicios
'sh18 = "DetalleServicios"
Sheets(sh18).Select
Dim row0, col0, LRow As Long
'fila de inicio
row0 = 3
LRow = Range("A2").SpecialCells(xlLastCell).Row
row1 = Cells(UltCell, 1).End(xlUp).Row

If row1 = 2 Then
row1 = 3
Else
row1 = row1 + 1
End If


Sheets(sh3).Select
Do While Cells(iniRow, 1) <> ""

If Sheets(sh3).Cells(iniRow, 34) = "Validaci|fffd|n Correcta" And Cells(iniRow, PunteroRegistroMasivo) = "" Then
        
        'estatus servicio
        Sheets(sh18).Cells(row1, 1) = "PROGRAMADO"
        
        'sh3 idplaza 1 - sh18 2
        Sheets(sh18).Cells(row1, 2) = Sheets(sh3).Cells(iniRow, 1)
        'sh3 etv 2 - sh18 3
        Sheets(sh18).Cells(row1, 3) = Sheets(sh3).Cells(iniRow, 2)
        
        'sh3 plaza 3 - sh18 4
        Sheets(sh18).Cells(row1, 4) = Sheets(sh3).Cells(iniRow, 3)
        
        'sh3 IdSucursal 4 - sh18 5
        Sheets(sh18).Cells(row1, 5) = Sheets(sh3).Cells(iniRow, 4)
        
        'sh3 Sucursal 5 - sh18 6
        Sheets(sh18).Cells(row1, 6) = Sheets(sh3).Cells(iniRow, 5)
        
        'sh3 ETV SERVICIO  - sh18 7
        Sheets(sh18).Cells(row1, 7) = Sheets(sh3).Cells(iniRow, punteroFecha - 2)
        'sh3 saldo afectaci|fffd|n - sh18 11
        Sheets(sh18).Cells(row1, 11) = Sheets(sh3).Cells(iniRow, punteroFecha - 1)
        
        'Fecha de servicio
        Sheets(sh18).Cells(row1, 9) = Sheets(sh3).Cells(iniRow, punteroFecha)
        
        'Fecha de Planeaci|fffd|n
        Sheets(sh18).Cells(row1, 8) = FechaValorGeneral
        
        'sh3 servicio programado col 15 - sh18 10
        Sheets(sh18).Cells(row1, 10) = Sheets(sh3).Cells(iniRow, punteroFecha - 7)
        
        'sh3 BilMil 20 - sh18 17
        Sheets(sh18).Cells(row1, 18) = Sheets(sh3).Cells(iniRow, PunteroMil)
        '500
        Sheets(sh18).Cells(row1, 19) = Sheets(sh3).Cells(iniRow, PunteroMil + 1)
        '200
        Sheets(sh18).Cells(row1, 20) = Sheets(sh3).Cells(iniRow, PunteroMil + 2)
        '100
        Sheets(sh18).Cells(row1, 21) = Sheets(sh3).Cells(iniRow, PunteroMil + 3)
        '50
        Sheets(sh18).Cells(row1, 22) = Sheets(sh3).Cells(iniRow, PunteroMil + 4)
        
        '20
        Sheets(sh18).Cells(row1, 23) = Sheets(sh3).Cells(iniRow, PunteroMil + 5)
        
'        'metalica
'        Sheets(sh18).Cells(Row1, 23) = Sheets(sh3).Cells(IniRow, 26)
'
        'sh3 100M 27 - sh18 24
        Sheets(sh18).Cells(row1, 25) = Sheets(sh3).Cells(iniRow, PunteroMetal + 1)
        
        '20
        Sheets(sh18).Cells(row1, 26) = Sheets(sh3).Cells(iniRow, PunteroMetal + 2)
        
        '10
        Sheets(sh18).Cells(row1, 27) = Sheets(sh3).Cells(iniRow, PunteroMetal + 3)
        
        '5
        Sheets(sh18).Cells(row1, 28) = Sheets(sh3).Cells(iniRow, PunteroMetal + 4)
        
        '2
        Sheets(sh18).Cells(row1, 29) = Sheets(sh3).Cells(iniRow, PunteroMetal + 5)
        
        '1
        Sheets(sh18).Cells(row1, 30) = Sheets(sh3).Cells(iniRow, PunteroMetal + 6)
        
        '.5
        Sheets(sh18).Cells(row1, 31) = Sheets(sh3).Cells(iniRow, PunteroMetal + 7)
        
        '.2
        Sheets(sh18).Cells(row1, 32) = Sheets(sh3).Cells(iniRow, PunteroMetal + 8)
        
        '.1
        Sheets(sh18).Cells(row1, 33) = Sheets(sh3).Cells(iniRow, PunteroMetal + 9)
        
        '.05
        Sheets(sh18).Cells(row1, 34) = Sheets(sh3).Cells(iniRow, PunteroMetal + 10)
        
        
        'sh3 destino concentraci|fffd|n col 38 - sh11
        'Sheets(sh18).Cells(Row1, 11) = Sheets(sh3).Cells(IniRow, PunteroConcentracion)
        
        'sh3 sucursal destino col 39 - sh13
        Sheets(sh18).Cells(row1, 13) = Sheets(sh3).Cells(iniRow, PunteroConcentracion + 1)
    
        'sh3 sucursal destino col 39 - sh13
        Sheets(sh18).Cells(row1, 15) = Sheets(sh3).Cells(iniRow, PunteroConcentracion + 2)

        'total
        Sheets(sh18).Cells(row1, 17).FormulaR1C1 = "=SUM(RC[1]:RC[6],RC[8]:RC[17])"
        
        'met|fffd|lica
        Sheets(sh18).Cells(row1, 24).FormulaR1C1 = "=SUM(RC[1]:RC[10])"
        
        'marca de registro
        Sheets(sh3).Cells(iniRow, PunteroRegistroMasivo) = "OK"
        
        
        row1 = row1 + 1

End If


iniRow = iniRow + 1


Loop
'
Sheets(sh18).Select
'        Call CO1_AgregarIdCajaPrincipal
'        Call CO1_AgregarIdSucursal
        Call CO1_AgregarIdCajaPrincipal_General
        Call CO1_AgregarIdSucursal_General

End Sub


Sub CO_RegistroMasivoUnitario()

''''''REGISTRAR TODO EN PROGRAMACI|fffd|N'''''''''

Call VariablesGlobales


'sh4 = "Info. Gral."
'sh5 = "DIRECTORIOS"

'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select

Dim iniRow, colIni, UltCell As Long
Dim PunteroMil, punteroFecha, PunteroMetal, PunteroConcentracion, PunteroRegistroMasivo As Integer

UltCell = Range("A3").SpecialCells(xlLastCell).Row
colIni = Cells(UltCell, 1).End(xlUp).Row


'fila de inicio
If ActiveCell.Row < 4 Then
MsgBox "Fila incorrecta, seleccione nuevamente"
Exit Sub
ElseIf ActiveCell.Row > 3 Then

iniRow = ActiveCell.Row

End If


'numero de columna en hoja 3

PunteroMil = 25
punteroFecha = 24
PunteroMetal = 31
PunteroConcentracion = 43
PunteroRegistroMasivo = 65
'contar numero de registros en DetalleServicios
'sh18 = "DetalleServicios"
Sheets(sh18).Select
Dim row0, col0, LRow As Long
'fila de inicio
row0 = 3
LRow = Range("A2").SpecialCells(xlLastCell).Row
row1 = Cells(UltCell, 1).End(xlUp).Row

If row1 = 2 Then
row1 = 3
Else
row1 = row1 + 1
End If


Sheets(sh3).Select


If Sheets(sh3).Cells(iniRow, 21) = "Validaci|fffd|n Correcta" Then
        
        'estatus servicio
        Sheets(sh18).Cells(row1, 1) = "PROGRAMADO"
        
        'sh3 idplaza 1 - sh18 2
        Sheets(sh18).Cells(row1, 2) = Sheets(sh3).Cells(iniRow, 1)
        'sh3 etv 2 - sh18 3
        Sheets(sh18).Cells(row1, 3) = Sheets(sh3).Cells(iniRow, 2)
        
        'sh3 plaza 3 - sh18 4
        Sheets(sh18).Cells(row1, 4) = Sheets(sh3).Cells(iniRow, 3)
        
        'sh3 IdSucursal 4 - sh18 5
        Sheets(sh18).Cells(row1, 5) = Sheets(sh3).Cells(iniRow, 4)
        
        'sh3 Sucursal 5 - sh18 6
        Sheets(sh18).Cells(row1, 6) = Sheets(sh3).Cells(iniRow, 5)
        
        'sh3 ETV SERVICIO  - sh18 7
        Sheets(sh18).Cells(row1, 7) = Sheets(sh3).Cells(iniRow, punteroFecha - 2)
        'sh3 saldo afectaci|fffd|n - sh18 11
        Sheets(sh18).Cells(row1, 11) = Sheets(sh3).Cells(iniRow, punteroFecha - 1)
        
        'Fecha de servicio
        Sheets(sh18).Cells(row1, 9) = Sheets(sh3).Cells(iniRow, punteroFecha)
        
        'Fecha de Planeaci|fffd|n
        Sheets(sh18).Cells(row1, 8) = FechaValorGeneral
        
        'sh3 servicio programado col 15 - sh18 10
        Sheets(sh18).Cells(row1, 10) = Sheets(sh3).Cells(iniRow, punteroFecha - 7)
        
        'sh3 BilMil 20 - sh18 17
        Sheets(sh18).Cells(row1, 18) = Sheets(sh3).Cells(iniRow, PunteroMil)
        '500
        Sheets(sh18).Cells(row1, 19) = Sheets(sh3).Cells(iniRow, PunteroMil + 1)
        '200
        Sheets(sh18).Cells(row1, 20) = Sheets(sh3).Cells(iniRow, PunteroMil + 2)
        '100
        Sheets(sh18).Cells(row1, 21) = Sheets(sh3).Cells(iniRow, PunteroMil + 3)
        '50
        Sheets(sh18).Cells(row1, 22) = Sheets(sh3).Cells(iniRow, PunteroMil + 4)
        
        '20
        Sheets(sh18).Cells(row1, 23) = Sheets(sh3).Cells(iniRow, PunteroMil + 5)
        
'        'metalica
'        Sheets(sh18).Cells(Row1, 23) = Sheets(sh3).Cells(IniRow, 26)
'
        'sh3 100M 27 - sh18 24
        Sheets(sh18).Cells(row1, 25) = Sheets(sh3).Cells(iniRow, PunteroMetal + 1)
        
        '20
        Sheets(sh18).Cells(row1, 26) = Sheets(sh3).Cells(iniRow, PunteroMetal + 2)
        
        '10
        Sheets(sh18).Cells(row1, 27) = Sheets(sh3).Cells(iniRow, PunteroMetal + 3)
        
        '5
        Sheets(sh18).Cells(row1, 28) = Sheets(sh3).Cells(iniRow, PunteroMetal + 4)
        
        '2
        Sheets(sh18).Cells(row1, 29) = Sheets(sh3).Cells(iniRow, PunteroMetal + 5)
        
        '1
        Sheets(sh18).Cells(row1, 30) = Sheets(sh3).Cells(iniRow, PunteroMetal + 6)
        
        '.5
        Sheets(sh18).Cells(row1, 31) = Sheets(sh3).Cells(iniRow, PunteroMetal + 7)
        
        '.2
        Sheets(sh18).Cells(row1, 32) = Sheets(sh3).Cells(iniRow, PunteroMetal + 8)
        
        '.1
        Sheets(sh18).Cells(row1, 33) = Sheets(sh3).Cells(iniRow, PunteroMetal + 9)
        
        '.05
        Sheets(sh18).Cells(row1, 34) = Sheets(sh3).Cells(iniRow, PunteroMetal + 10)
        
        
        'sh3 destino concentraci|fffd|n col 38 - sh11
        'Sheets(sh18).Cells(Row1, 11) = Sheets(sh3).Cells(IniRow, PunteroConcentracion)
        
        'sh3 sucursal destino col 39 - sh13
        Sheets(sh18).Cells(row1, 13) = Sheets(sh3).Cells(iniRow, PunteroConcentracion + 1)
    
        'sh3 sucursal destino col 39 - sh13
        Sheets(sh18).Cells(row1, 15) = Sheets(sh3).Cells(iniRow, PunteroConcentracion + 2)

        'total
        Sheets(sh18).Cells(row1, 17).FormulaR1C1 = "=SUM(RC[1]:RC[6],RC[8]:RC[17])"
        
        'met|fffd|lica
        Sheets(sh18).Cells(row1, 24).FormulaR1C1 = "=SUM(RC[1]:RC[10])"
        
        'marca de registro
        Sheets(sh3).Cells(iniRow, PunteroRegistroMasivo) = "OK"
        
        
        row1 = row1 + 1

End If



'
'        Call CO1_AgregarIdCajaPrincipal
'        Call CO1_AgregarIdSucursal
        Call CO1_AgregarIdCajaPrincipal_General
        Call CO1_AgregarIdSucursal_General

MsgBox "REGISTRO MASIVO REALIZADO"

End Sub


Sub CO1_AgregarIdCajaPrincipal()

Call VariablesGlobales

Dim i As Double
Dim j As Double
Dim marca, Carburante, Comunidad As String


'sh18 = "ProgramacionServicios"

With Worksheets(sh18)

total = Application.CountA(.Range("A:A"))


End With

'Definimos rango de tablabase sh4 = "CatalogoPlazas"
fin = Application.CountA(Worksheets(sh4).Range("X:X"))


'Definimos rango de datos
final = Application.CountA(Worksheets(sh18).Range("A:A")) + 2


With Worksheets(sh18)

    'Iniciamos el bucle principal en tabla Datos
    For i = 3 To final
    'Definimos cada uno de los Items por los que vamos a buscar
    PlazaEtv = Sheets(sh18).Cells(i, 15)
    
        For j = 2 To fin
            'Buscamos con un condicional en tablabase cada una de las variables definidas
            If PlazaEtv = Sheets(sh4).Cells(j, 28) Then
            'Si encontramos coincidencia, igualamos celdas con el valor de la columna 4
            Sheets(sh18).Cells(i, 14) = Sheets(sh4).Cells(j, 24)
            Exit For
            End If
        Next j
    Next i

End With

End Sub



Sub CO1_AgregarIdSucursal()

Call VariablesGlobales

Dim i As Double
Dim j As Double
Dim marca, Carburante, Comunidad As String

'sh18 = "DetalleServicios"

With Worksheets(sh18)

total = Application.CountA(.Range("A:A"))


End With

'Definimos rango de tablabase sh4 = "CatalogoPlazas"
fin = Application.CountA(Worksheets(sh4).Range("U:U"))


'Definimos rango de datos
final = Application.CountA(Worksheets(sh18).Range("A:A")) + 2


With Worksheets(sh18)

    'Iniciamos el bucle principal en tabla Datos
    For i = 3 To final
    'Definimos cada uno de los Items por los que vamos a buscar
    SucursalDestino = Sheets(sh18).Cells(i, 13)
    
        For j = 2 To fin
            'Buscamos con un condicional en tablabase cada una de las variables definidas
            If SucursalDestino = Sheets(sh4).Cells(j, 22) Then
            'Si encontramos coincidencia, igualamos celdas con el valor de la columna 4
            Sheets(sh18).Cells(i, 12) = Sheets(sh4).Cells(j, 21)
            Exit For
            End If
        Next j
    Next i

End With



End Sub


Sub CO1_AgregarIdCajaPrincipal_General()

Call VariablesGlobales

Dim i As Double
Dim j As Double
Dim marca, Carburante, Comunidad As String
Dim HojaRegistro As String



''''''''''''''''''''''''ARREGLO DE LOS MEDIOS DE PAGO'''''''''''''''''''''''''''''''''''
Call VariablesGlobales
Dim ArraySize2 As String

'EMERGENTE O PROGRAMADA
    
    If ActiveSheet.Name = sh22 Or ActiveSheet.Name = sh18 Then
    'sh18 = "ProgramacionDotaciones"
    'sh22 = "ProgramacionServicios"
    HojaRegistro = ActiveSheet.Name
    
    Else
    Exit Sub
    
    End If
    
'Hoja Info. Gral. sh4 = "Info. Gral."
Sheets(sh4).Select
If Range("AL2") = "" And Range("AL3") = "" Then
ArraySize2 = 1
ElseIf Range(("AL2"), Range("AL2").End(xlDown)).Count > 1000 Then
ArraySize2 = 1
Else
ArraySize2 = Range(("AL2"), Range("AL2").End(xlDown)).Count
End If


    Sheets(sh4).Select
    
    
Dim p, q, r, s As Integer
'fila de inicio
r = 2
'columna de inicio
s = 38


Dim medios() As String
ReDim medios(ArraySize2, 5)

For p = 1 To ArraySize2
    
    For q = 1 To 5
        
         
        Select Case q
        Case 1
        medios(p, q) = Cells(r, s).value
        
        Case 2
        medios(p, q) = Cells(r, s + 1).value
        
        Case 3
        medios(p, q) = Cells(r, s + 2).value
                   
        Case 4
        medios(p, q) = Cells(r, s + 3).value
        
        Case 5
        medios(p, q) = Cells(r, s + 4).value
        
        End Select
    
       
    Next q
     
     
     r = r + 1

    
Next p


'MsgBox medios(1, 1) & vbNewLine & medios(1, 2) & vbmnewline & medios(1, 3) & vbNewLine & medios(1, 4) & vbNewLine & medios(1, 5)
Sheets(HojaRegistro).Select


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

With Worksheets(HojaRegistro)

total = Application.CountA(.Range("A:A"))


End With

'Definimos rango de tablabase sh4 = "CatalogoPlazas"
fin = Application.CountA(Worksheets(sh4).Range("X:X"))


'Definimos rango de datos
final = Application.CountA(Worksheets(HojaRegistro).Range("A:A")) + 2


With Worksheets(HojaRegistro)

    'Iniciamos el bucle principal en tabla Datos
    For i = 3 To final
    'Definimos cada uno de los Items por los que vamos a buscar
    PlazaEtv = Sheets(HojaRegistro).Cells(i, 4)
    MedioAfectacion = Sheets(HojaRegistro).Cells(i, 11)
    
        For j = 2 To fin
            'Buscamos con un condicional en tablabase cada una de las variables definidas
            If PlazaEtv = Sheets(sh4).Cells(j, 27) Then
            'Si encontramos coincidencia, igualamos celdas con el valor de la columna 4
            
                For k = 1 To ArraySize2
                    If MedioAfectacion = medios(k, 1) Then
                        MedioAfectacion = medios(k, 5)
              
                        Exit For
                    Else
                    End If
                    
                Next k
              
            Sheets(HojaRegistro).Cells(i, 2) = MedioAfectacion & Sheets(sh4).Cells(j, 24)
            Exit For
            End If
        Next j
    Next i

End With

End Sub



Sub CO1_AgregarIdSucursal_General()

Call VariablesGlobales

Dim i As Double
Dim j As Double
Dim marca, Carburante, Comunidad As String

'sh18 = "DetalleServicios"

With Worksheets(sh18)

total = Application.CountA(.Range("A:A"))


End With

'Definimos rango de tablabase sh4 = "CatalogoPlazas"
fin = Application.CountA(Worksheets(sh4).Range("U:U"))


'Definimos rango de datos
final = Application.CountA(Worksheets(sh18).Range("A:A")) + 2


With Worksheets(sh18)

    'Iniciamos el bucle principal en tabla Datos
    For i = 3 To final
    'Definimos cada uno de los Items por los que vamos a buscar
    SucursalDestino = Sheets(sh18).Cells(i, 6)
    
        For j = 2 To fin
            'Buscamos con un condicional en tablabase cada una de las variables definidas
            If SucursalDestino = Sheets(sh4).Cells(j, 22) Then
            'Si encontramos coincidencia, igualamos celdas con el valor de la columna 4
            Sheets(sh18).Cells(i, 5) = Sheets(sh4).Cells(j, 21)
            Exit For
            End If
        Next j
    Next i

End With



End Sub

Sub CO2_ValidarRegistroMasivo()

Call VariablesGlobales

'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select

Dim X, row0, ColVal As Long
Dim SumDen, TotImp As Double
Dim Val1, Val2, Val3, Val4, Val5, Val6, Val7, Val8 As Boolean
Dim mensajeError As String
Dim PunteroMil, PunteroMetal, punteroFecha, punteroImporte As Integer
row0 = 4
'columna validaci|fffd|n
ColVal = 34
X = 4
PunteroMil = 38
PunteroMetal = 44
punteroFecha = 37
PunteroConcentraciones = 56
PunteroMilRevolv = 60
PunteroMetalRevolv = 66
punteroImporte = 31

Do While Cells(X, 1) <> ""
    
    ''''''''''''VALIDAR IMPORTE A DOTAR Y TOTAL POR DENOMINACI|fffd|N ''''''''''''''''''''''''''''
    'importe total en columna 18
    TotImp = Cells(X, punteroImporte)
    
    If Cells(X, punteroImporte) = "" Or Cells(X, punteroImporte) = 0 Then
'    'LIMPIAR A LOS QUE NO TIENEN DOTACI|fffd|N
'    'DOTACION
'    Cells(x, PunteroFecha - 7) = ""
'    'FECHA
'    Cells(x, PunteroFecha) = ""
'    '
'    Cells(x, PunteroFecha - 1) = ""
'    '
'    Cells(x, PunteroFecha - 2) = ""
    
    
    GoTo final:
    
    
'    ElseIf Cells(x, punteroImporte) = 0 Then
'    GoTo final:
'
    End If
    
    'denominaciones en columnas 20 a 25 - 27 a 36
    SumDen = Application.WorksheetFunction.Sum(Cells(X, PunteroMil), Cells(X, PunteroMil + 1), Cells(X, PunteroMil + 2), Cells(X, PunteroMil + 3), Cells(X, PunteroMil + 4), Cells(X, PunteroMil + 5), _
                                               Cells(X, PunteroMetal + 1), Cells(X, PunteroMetal + 2), Cells(X, PunteroMetal + 3), Cells(X, PunteroMetal + 4), Cells(X, PunteroMetal + 5), Cells(X, PunteroMetal + 6), Cells(X, PunteroMetal + 7), Cells(X, PunteroMetal + 8), Cells(X, PunteroMetal + 9), Cells(X, PunteroMetal + 10))
    mensajeError = ""
    
    If TotImp = SumDen Then
        Val1 = True
    Else
        Val1 = False
        
        If TotImp > 0 And TotImp < SumDen Then
        
        mensajeError = "Diferencia en denominaciones, sobra " & Format(SumDen - TotImp, "$ ###,###.00")
        
         ElseIf TotImp > 0 And TotImp > SumDen Then
        
        mensajeError = "Diferencia en denominaciones, falta " & Format(TotImp - SumDen, "$ ###,###.00")
        
        End If
        
        
    End If
    
    ''''''''''''VALIDAR FECHA DE SERVICIO ''''''''''''''''''''''''''''
    'importe total en columna 16
    FechaServicio = Cells(X, punteroFecha)
    'denominaciones en columnas 20 a 25 - 27 a 36
    If TotImp > 0 And FechaServicio > Date Then
        Val3 = True
    ElseIf TotImp > 0 And FechaServicio < Date Then
        Val3 = False
        mensajeError = mensajeError & Chr(10) & "Fecha no v|fffd|lida"
    End If
    
    
     ''''''''''''CAMPOS PARA DOTACI|fffd|N ''''''''''''''''''''''''''''
     'COLUMNA DOTACI|fffd|N 15, ETV SERVICIO COLUMNA 18,FECHA SERVICIO 19
     If TotImp > 0 And Cells(X, punteroFecha - 1) <> "" And Cells(X, punteroFecha - 2) <> "" And IsDate(Cells(X, punteroFecha)) Then
        Val2 = True
     
     ElseIf TotImp > 0 Or Cells(X, punteroFecha - 1) = "" Or Cells(X, punteroFecha - 2) = "" Or Cells(X, punteroFecha) = "" Or mensajeError = "" Then
        Val2 = False
        mensajeError = mensajeError & "Faltan campos de registro para DOTACI|fffd|N"
       
     ElseIf TotImp > 0 Or Cells(X, punteroFecha - 1) = "" Or Cells(X, punteroFecha - 2) = "" Or Cells(X, punteroFecha) = "" Or Len(mensajeError) > 0 Then
        Val2 = False
        mensajeError = mensajeError & Chr(10) & "Faltan campos de registro para DOTACI|fffd|N"
        
     End If
     
     
     
     ''''''''''''CAMPOS PARA CONCENTRACI|fffd|N ''''''''''''''''''''''''''''
     'COLUMNA DOTACI|fffd|N 15, ETV SERVICIO COLUMNA 18,FECHA SERVICIO 19
     If Cells(X, punteroFecha - 7) = "CONCENTRACION" And Cells(X, punteroFecha - 1) <> "" And IsDate(Cells(X, punteroFecha)) And Cells(X, PunteroConcentraciones) = "DEM" Then
        Val2 = True
     
     ElseIf Cells(X, punteroFecha - 7) = "CONCENTRACION" And Cells(X, punteroFecha - 1) <> "" And IsDate(Cells(X, punteroFecha)) And Cells(X, PunteroConcentraciones) = "CAJA GENERAL" And Cells(X, PunteroConcentraciones + 2) <> "" Then
        Val2 = True
       
     ElseIf Cells(X, punteroFecha - 7) = "CONCENTRACION" And Cells(X, punteroFecha - 1) <> "" And IsDate(Cells(X, punteroFecha)) And Cells(X, PunteroConcentraciones) = "SUCURSAL" And Cells(X, PunteroConcentraciones + 1) <> "" Then
        Val2 = True
     
     ElseIf Cells(X, punteroFecha - 7) = "CONCENTRACION" And mensajeError = "" Then
        Val2 = False
        mensajeError = mensajeError & "Faltan campos de registro para CONCENTRACION"
       
     ElseIf Cells(X, punteroFecha - 7) = "CONCENTRACION" And Len(mensajeError) > 0 Then
        Val2 = False
        mensajeError = mensajeError & Chr(10) & "Faltan campos de registro para CONCENTRACION"
        
     End If
     
     
    ''''''''''''VALIDAR STOCK''''''''''''''''''''''''''''
'     If Cells(x, PunteroMilRevolv) >= 0 And Cells(x, PunteroMilRevolv + 1) >= 0 And Cells(x, PunteroMilRevolv + 2) >= 0 And Cells(x, PunteroMilRevolv + 3) >= 0 _
'     And Cells(x, PunteroMilRevolv + 4) >= 0 And Cells(x, PunteroMilRevolv + 5) >= 0 And Cells(x, PunteroMetalRevolv + 1) >= 0 And Cells(x, PunteroMetalRevolv + 2) >= 0 _
'     And Cells(x, PunteroMetalRevolv + 3) >= 0 And Cells(x, PunteroMetalRevolv + 4) >= 0 And Cells(x, PunteroMetalRevolv + 5) >= 0 And Cells(x, PunteroMetalRevolv + 6) >= 0 _
'     And Cells(x, PunteroMetalRevolv + 7) >= 0 And Cells(x, PunteroMetalRevolv + 8) >= 0 And Cells(x, PunteroMetalRevolv + 9) >= 0 And Cells(x, PunteroMetalRevolv + 10) >= 0 Then
'     Val3 = True
'
'     ElseIf MensajeError = "" Then
'        Val3 = False
'        MensajeError = MensajeError & "Stock insuficiente"
'
'     ElseIf Len(MensajeError) > 0 Then
'        Val3 = False
'        MensajeError = MensajeError & Chr(10) & "Stock insuficiente"
'
'     End If
     
     
    '''''''''''''''MENSAJE FINAL''''''''''''''''''''''''''''''
    If mensajeError = "" Then
        mensajeError = "Validaci|fffd|n Correcta"
    Else
        mensajeError = mensajeError
    End If
    
    
    'MsgBox TotImp & Chr(10) & SumDen & Chr(10) & Val1 & Chr(10) & MensajeError
    
    Cells(X, ColVal) = mensajeError
    
final:

    X = X + 1
Loop
    
    Range("AH4").Select
    

MsgBox "VALIDACI|fffd|N FINALIZADA"

End Sub



Public Sub ConvertirRangoMayusculas()

Call VariablesGlobales

            Sheets(sh18).Select
            ''''''''''''''''''''''''''''
            Dim RangoSucursales As Range

            Set RangoSucursales = Range("F3", Range("F3").End(xlDown))
            
            
            For Each cell In RangoSucursales
            Range(cell, cell) = Trim(cell.value)
            Range(cell, cell) = UCase(cell.value)
            Next cell


            ''''''''''''''''''''''''''''
            
End Sub




Sub CO4_LimpiarCapturaServicios()

''''LIMPIAR TODA LOS RANGOS DE REGISTRO EN PLANEACI|fffd|N Y PROGRAMACI|fffd|N


Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual

Call VariablesGlobales
'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select
Dim rowIni, colIni, colFin, numReg As Long
rowIni = 4

colIni = 30
colFin = 58

If Cells(rowIni, 1) = "" And Cells(rowIni + 1, 1) = "" Then
numReg = 4

ElseIf Range(Cells(rowIni, 1), Cells(rowIni + 1, 1).End(xlDown)).Count + 3 > 10000 Then
numReg = 4

Else
numReg = Range(Cells(rowIni, 1), Cells(rowIni + 1, 1).End(xlDown)).Count + 3

End If
''''''''limpiar rango'''''''''''''''

Range(Cells(rowIni, colIni), Cells(numReg, colIni + 1)).ClearContents
Range(Cells(rowIni, colIni + 4), Cells(numReg, colIni + 4)).ClearContents
Range(Cells(rowIni, colIni + 8), Cells(numReg, colIni + 8)).ClearContents
Range(Cells(rowIni, colIni + 10), Cells(numReg, colIni + 13)).ClearContents
Range(Cells(rowIni, colIni + 15), Cells(numReg, colIni + 24)).ClearContents
'marca registro masivo
Range(Cells(rowIni, 78), Cells(numReg, 78)).ClearContents
''''''''CAMPOS RELLENADOS'''''''''''''''''''


For i = rowIni To numReg

'    If Cells(RowIni, ColIni - 8) < DiasInventarioMinimo Then

    Cells(rowIni, colIni) = "DOTACION"
    
    'RANGO DONDE TENGA SALDO, PR DEFAULT "ETV"
    Cells(rowIni, colIni + 6) = "ETV"
        
        If Weekday(Date, vbMonday) = 5 Then
        
        Cells(rowIni, colIni + 7) = Date + 3
        
        ElseIf Weekday(Date, vbMonday) < 5 Then
        
        Cells(rowIni, colIni + 7) = Date + 1
        
        ElseIf Weekday(Date, vbMonday) = 6 Then
        
        Cells(rowIni, colIni + 7) = Date + 2
        
        ElseIf Weekday(Date, vbMonday) = 7 Then
        
        Cells(rowIni, colIni + 7) = Date + 1
        
        
        End If
'
'    Else
'        Cells(RowIni, ColIni) = ""
'        Cells(RowIni, ColIni + 7) = ""
'
'    End If
'
    rowIni = rowIni + 1
    
Next i

'limpiar hoja se programaci|fffd|n sh18 = "ProgramacionServicios"
Sheets(sh18).Select
Dim RowIni18, ColIni18, ColFin18 As Long
RowIni18 = 3
ColIni18 = 1
ColFin18 = 37

Range(Cells(RowIni18, ColIni18), Cells(RowIni18, ColFin18).End(xlDown)).ClearContents

Sheets(sh3).Select

Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True



End Sub




Sub CO5_LimpiarCapturaServiciosPlaneacion()

''''LIMPIAR LOS RANGOS DE REGISTRO EN PLANEACI|fffd|N


Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual

Call VariablesGlobales
'sh3 = "pm_PLANEACION_SERVICIOS"
Dim cuSh As String

cuSh = ActiveSheet.Name

Sheets(sh3).Select
Dim rowIni, colIni, colFin, numReg As Long
rowIni = 4
colIni = 30
colFin = 58

If Cells(rowIni, 1) = "" And Cells(rowIni + 1, 1) = "" Then
numReg = 4

ElseIf Range(Cells(rowIni, 1), Cells(rowIni + 1, 1).End(xlDown)).Count + 3 > 10000 Then
numReg = 4

Else
numReg = Range(Cells(rowIni, 1), Cells(rowIni + 1, 1).End(xlDown)).Count + 3

End If
''''''''limpiar rango'''''''''''''''

Range(Cells(rowIni, colIni), Cells(numReg, colIni + 1)).ClearContents
Range(Cells(rowIni, colIni + 4), Cells(numReg, colIni + 4)).ClearContents
Range(Cells(rowIni, colIni + 8), Cells(numReg, colIni + 8)).ClearContents
Range(Cells(rowIni, colIni + 10), Cells(numReg, colIni + 13)).ClearContents
Range(Cells(rowIni, colIni + 15), Cells(numReg, colIni + 24)).ClearContents
'marca registro masivo
Range(Cells(rowIni, 78), Cells(numReg, 78)).ClearContents
''''''''CAMPOS RELLENADOS'''''''''''''''''''


For i = rowIni To numReg

'    If Cells(RowIni, ColIni - 8) < DiasInventarioMinimo Then

    Cells(rowIni, colIni) = "DOTACION"
    
    'RANGO DONDE TENGA SALDO, PR DEFAULT "ETV"
    Cells(rowIni, colIni + 6) = "ETV"
        
        If Weekday(Date, vbMonday) = 5 Then
        
        Cells(rowIni, colIni + 7) = Date + 3
        
        ElseIf Weekday(Date, vbMonday) < 5 Then
        
        Cells(rowIni, colIni + 7) = Date + 1
        
        ElseIf Weekday(Date, vbMonday) = 6 Then
        
        Cells(rowIni, colIni + 7) = Date + 2
        
        ElseIf Weekday(Date, vbMonday) = 7 Then
        
        Cells(rowIni, colIni + 7) = Date + 1
        
        
        End If
'
'    Else
'        Cells(RowIni, ColIni) = ""
'        Cells(RowIni, ColIni + 7) = ""
'
'    End If
'
    rowIni = rowIni + 1
    
Next i

Sheets(cuSh).Select

Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True



End Sub



Sub CO6_LimpiarCapturaServiciosProgramacion()

''''LIMPIAR LOS RANGOS DE REGISTRO EN PROGRAMACI|fffd|N


Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual

Call VariablesGlobales
Dim cuSh As String

cuSh = ActiveSheet.Name
'sh18 = "ProgramacionDotaciones"

'limpiar hoja se programaci|fffd|n sh18 = "ProgramacionServicios"
Sheets(sh18).Select
Dim RowIni18, ColIni18, ColFin18 As Long
RowIni18 = 3
ColIni18 = 1
ColFin18 = 37

Sheets(sh18).Range(Cells(RowIni18, ColIni18), Cells(RowIni18, ColFin18).End(xlDown)).ClearContents

Sheets(cuSh).Select

Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True



End Sub




Sub CO7_LimpiarCapturaServiciosSeleccion()

''''LIMPIAR LOS RANGOS DE REGISTRO EN PLANEACI|fffd|N


Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual

Call VariablesGlobales


Dim rowIni, colIni, colFin, numReg As Long
Dim AcSh As String
Dim Row

'nombre de la hoja actual
AcSh = ActiveSheet.Name

Select Case AcSh
'si es sh3 = "pm_PLANEACION_SERVICIOS"
Case sh3

            'Identificar la fila a borrar
            Sheets(sh3).Select
            If ActiveCell.Row < 4 Then
                MsgBox "FILA NO V|fffd|LIDA"
                Exit Sub
            ElseIf ActiveCell.Row > 3 And Cells(ActiveCell.Row, 1) <> "" Then
            
                rowIni = ActiveCell.Row
            
            End If
            
            colIni = 30
            colFin = 58
            
            numReg = rowIni
            
            ''''''''limpiar rango'''''''''''''''
            
            Range(Cells(rowIni, colIni), Cells(numReg, colIni + 1)).ClearContents
            Range(Cells(rowIni, colIni + 4), Cells(numReg, colIni + 4)).ClearContents
            Range(Cells(rowIni, colIni + 8), Cells(numReg, colIni + 8)).ClearContents
            Range(Cells(rowIni, colIni + 10), Cells(numReg, colIni + 13)).ClearContents
            Range(Cells(rowIni, colIni + 15), Cells(numReg, colIni + 24)).ClearContents
            'marca registro masivo
            Range(Cells(rowIni, 78), Cells(numReg, 78)).ClearContents
            ''''''''CAMPOS RELLENADOS'''''''''''''''''''
            
            
            For i = rowIni To numReg
            
            '    If Cells(RowIni, ColIni - 8) < DiasInventarioMinimo Then
            
                Cells(rowIni, colIni) = "DOTACION"
                
                'RANGO DONDE TENGA SALDO, PR DEFAULT "ETV"
                Cells(rowIni, colIni + 6) = "ETV"
                    
                    If Weekday(Date, vbMonday) = 5 Then
                    
                    Cells(rowIni, colIni + 7) = Date + 3
                    
                    ElseIf Weekday(Date, vbMonday) < 5 Then
                    
                    Cells(rowIni, colIni + 7) = Date + 1
                    
                    ElseIf Weekday(Date, vbMonday) = 6 Then
                    
                    Cells(rowIni, colIni + 7) = Date + 2
                    
                    ElseIf Weekday(Date, vbMonday) = 7 Then
                    
                    Cells(rowIni, colIni + 7) = Date + 1
                    
                    
                    End If
            '
            '    Else
            '        Cells(RowIni, ColIni) = ""
            '        Cells(RowIni, ColIni + 7) = ""
            '
            '    End If
            '
                rowIni = rowIni + 1
                
            Next i


Case sh18

            'limpiar hoja se programaci|fffd|n sh18 = "ProgramacionServicios"
            Sheets(sh18).Select
            If ActiveCell.Row < 3 Then
                MsgBox "FILA NO V|fffd|LIDA"
                Exit Sub
            Else
                ActiveCell.EntireRow.Select
                Selection.Delete Shift:=xlUp
            End If
            
      MsgBox "CAMPOS LIMPIOS EN FILA SELECCIONADA"
      
End Select

Sheets(AcSh).Select

Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True


End Sub




Sub CO8_LimpiarMarcaRegistroMasivo()

''''LIMPIAR LOS RANGOS DE REGISTRO EN PLANEACI|fffd|N


Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual

Call VariablesGlobales

'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select
Dim rowIni, colIni, colFin, numReg As Long
rowIni = 4
colIni = 30
colFin = 58

If Cells(rowIni, 1) = "" And Cells(rowIni + 1, 1) = "" Then
numReg = 4

ElseIf Range(Cells(rowIni, 1), Cells(rowIni + 1, 1).End(xlDown)).Count + 3 > 10000 Then
numReg = 4

Else
numReg = Range(Cells(rowIni, 1), Cells(rowIni + 1, 1).End(xlDown)).Count + 3

End If
''''''''limpiar rango'''''''''''''''
'marca registro masivo
Range(Cells(rowIni, 78), Cells(numReg, 78)).ClearContents


Sheets(sh3).Select

Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True



End Sub


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''




Sub CO3_0GruposPlazaEtvFechaServicioUnitario()

''confirmar env|fffd|o de correos
'answer = MsgBox("|fffd|Est|fffd| seguro de hacer los env|fffd|os a ETV?", vbYesNo + vbQuestion, "Env|fffd|o de Correos ETV")
'
'If answer = vbNo Then
'Exit Sub
'Else
'End If


hora1 = Now

'Application.ScreenUpdating = False

Call VariablesGlobales

Dim fechasEnvio As New Collection
Dim EtvServicio As New Collection
Dim plazasServicio As New Collection
Dim row0, col0, col1, Col2, numReg, X As Long
Dim ColSuc, ColTotImp, ColMil, ColMet As Integer
Dim rangoFechas, rangoEtvServicio, rangoPlazasServicio As Range
Dim Servicio, Servicios As String
Dim VentanaActual As String

VentanaActual = ActiveWorkbook.Name

'sh18 = "DetalleServicios"
Sheets(sh18).Select

'SERVICIOS
Servicio = Range("E1")

If Servicio = "DOTACION" Then
    Servicios = "DOTACIONES"
ElseIf Servicio = "CONCENTRACION" Then
    Servicios = "CONCENTRACIONES"
End If


'Limpiar hoja de procesar
'sh6 = "Procesar"
Sheets(sh6).Select
Cells.Clear



Sheets(sh18).Select

'fila de inicio detalle servicios
row0 = 3
'columna de fechas de servicio
col0 = 9

'columna de ETV Servicio
col1 = 7

'columna de Plaza
Col2 = 4

' ColSuc
ColSuc = 6

'ColTotImp
ColTotImp = 17

'ColMil
ColMil = 18

'ColMet
ColMet = 24


'cantidad de registros
numReg = Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)).Count + 2


'VALIDAR QUE HAYA AL MENOS 1 REGISTRO PARA ENVIAR
If Cells(row0, col0) = "" Or Cells(row0, col1) = "" Or Cells(row0, Col2) = "" Then

MsgBox "NO HAY REGISTROS POR ENVIAR - sin informaci|fffd|n en fila 3"

Exit Sub

End If



'''''''''''''''''''''''ETV DE SERVICIO''''''''''''''''''''''''''''''''

'RANGO FECHAS DE SERVICIO
Set rangoEtvServicio = Range(Cells(row0, col1), Cells(row0, col1).End(xlDown))

'Agregar primer registro de fechas de servicio
EtvServicio.Add Cells(row0, col1).value

For Each cell In rangoEtvServicio

    For j = 1 To EtvServicio.Count
    
        If cell = EtvServicio(j) Then
        
            Exit For
        
        ElseIf j = EtvServicio.Count And cell <> EtvServicio(j) Then
        
            EtvServicio.Add cell.value
        
        End If
    
    Next j
    
Next cell


'For i = 1 To etvServicio.Count
'
'MsgBox "etvServicio " & etvServicio(i)
'
'Next i





'''''''''''''''''''''''FECHAS ENVIO SERVICIO''''''''''''''''''''''''''''''''

'RANGO FECHAS DE SERVICIO
Set rangoFechas = Range(Cells(row0, col0), Cells(row0, col0).End(xlDown))

'Agregar primer registro de fechas de servicio
fechasEnvio.Add Cells(row0, col0).value

For Each cell In rangoFechas

    For j = 1 To fechasEnvio.Count
    
        If cell = fechasEnvio(j) Then
        
            Exit For
        
        ElseIf j = fechasEnvio.Count And cell <> fechasEnvio(j) Then
        
            fechasEnvio.Add cell.value
        
        End If
    
    Next j
    
Next cell


'For i = 1 To fechasEnvio.Count
'
'MsgBox "fechasEnvio " & fechasEnvio(i)
'
'Next i




'''''''''''''''''''''''PLAZAS SERVICIO''''''''''''''''''''''''''''''''

'RANGO FECHAS DE SERVICIO
Set rangoPlazasServicio = Range(Cells(row0, Col2), Cells(row0, Col2).End(xlDown))

'Agregar primer registro de fechas de servicio
plazasServicio.Add Cells(row0, Col2).value

For Each cell In rangoPlazasServicio

    For j = 1 To plazasServicio.Count
    
        If cell = plazasServicio(j) Then
        
            Exit For
        
        ElseIf j = plazasServicio.Count And cell <> plazasServicio(j) Then
        
            plazasServicio.Add cell.value
        
        End If
    
    Next j
    
Next cell


'For i = 1 To plazasServicio.Count
'
'MsgBox "plazasServicio " & plazasServicio(i)
'
'Next i



'''''''''''''''''''''''COMBINACIONES SERVICIO''''''''''''''''''''''''''''''''
'LONGITUD DE ARRAY
Dim LargoArray As Long
Dim numCol As Integer

numCol = 4
LargoArray = EtvServicio.Count * fechasEnvio.Count * plazasServicio.Count



'ARRAY
Dim Combinaciones() As String
ReDim Combinaciones(numCol, LargoArray)

'MsgBox "EtvServicio = " & EtvServicio.Count & Chr(10) & _
'        "fechasEnvio = " & fechasEnvio.Count & Chr(10) & _
'        "plazasServicio = " & plazasServicio.Count & _
'        "LargoArray = " & LargoArray


'columna de fechas de servicio Col0 = 9
'columna de ETV Servicio Col1 = 7
'columna de Plaza Col2 = 4
' ColSuc ColSuc = 6
'ColTotImp ColTotImp = 16
'ColMil ColMil = 17
'ColMet ColMet = 23

'Primer registro en arreglo PLAZA / ETV SERVICIO / FECHA SERVICIO / SERVICIO
'Combinaciones(1, 1) = Cells(Row0, Col2).value
'Combinaciones(2, 1) = Cells(Row0, Col1).value
'Combinaciones(3, 1) = Cells(Row0, Col0).value
'Combinaciones(4, 1) = (Cells(Row0, Col2).value & Cells(Row0, Col1).value & Cells(Row0, Col0).value & Cells(Row0, 10).value)

X = 1

Do While Cells(row0, 1) <> ""

    For j = 1 To UBound(Combinaciones, 2)
    
        If (Cells(row0, Col2).value & Cells(row0, col1).value & Cells(row0, col0).value & Cells(row0, 10).value) = Combinaciones(4, j) Then
        
            Exit For
        
        ElseIf j = UBound(Combinaciones, 2) And (Cells(row0, Col2).value & Cells(row0, col1).value & Cells(row0, col0).value & Cells(row0, 10).value) <> Combinaciones(4, j) _
        And Cells(row0, 10) = Servicio Then

            Combinaciones(1, X) = Cells(row0, Col2).value
            Combinaciones(2, X) = Cells(row0, col1).value
            Combinaciones(3, X) = Cells(row0, col0).value
            Combinaciones(4, X) = (Cells(row0, Col2).value & Cells(row0, col1).value & Cells(row0, col0).value & Cells(row0, 10).value)
            
            X = X + 1
            
        End If
    
    Next j
    
    row0 = row0 + 1
    

Loop

'For i = 1 To UBound(Combinaciones)
'MsgBox Combinaciones(1, i) & Chr(10) & _
'        Combinaciones(2, i) & Chr(10) & _
'        Combinaciones(3, i) & Chr(10) & _
'        Combinaciones(4, i) & Chr(10)
'
'Next i


'''''''''''''''''''''''COMBINACIONES POR PLAZA - ETV - FECHA SERVICIO '''''''''''''''''''''''''''''
'inicio hoja de procesar
Dim Y, w As Long
    Y = 4
    row0 = 3
    col0 = 9

For j = 1 To UBound(Combinaciones, 2)

'Validar si el arreglo tiene informaci|fffd|n
If Combinaciones(4, j) = "" Then
    
    Exit For
Else

        
        
        Sheets(sh18).Select
        REP = 1
        row0 = 3
        col0 = 9
        Y = 4
        
        Do While Cells(row0, col0) <> ""
        
        Sheets(sh18).Select
        
    
''''''''''''''''''''''''''''''''REGISTRAR DETALLE DE DOTACI|fffd|N'''''''''''''''''''''''''''''''''''''''''''''''''''

                If CStr(Cells(row0, Col2).value & Cells(row0, col1).value & Cells(row0, col0).value & Cells(row0, 10).value) _
                = Combinaciones(4, j) And REP = 1 Then

                
                        ' encabezado
                        Sheets(sh6).Cells(Y - 3, 1) = Servicios & " " & Combinaciones(1, j) & "     -     " & _
                        NombresDiasMayus(Weekday(Combinaciones(3, j), vbMonday)) & " " _
                        & Day(Combinaciones(3, j)) & " DE " & _
                        NombresMesesLargo(Month(Combinaciones(3, j)))
                        
                        Sheets(sh6).Cells(Y - 2, 1) = "SUCURSAL"
                        Sheets(sh6).Cells(Y - 2, 2) = "B   I   L   L   E   T   E   S"
                        Sheets(sh6).Cells(Y - 2, 10) = "M   E   T   A   L   I   C   A"
                        Sheets(sh6).Cells(Y - 1, 2) = "$1,000.00"
                        Sheets(sh6).Cells(Y - 1, 3) = "$500.00"
                        Sheets(sh6).Cells(Y - 1, 4) = "$200.00"
                        Sheets(sh6).Cells(Y - 1, 5) = "$100.00"
                        Sheets(sh6).Cells(Y - 1, 6) = "$50.00"
                        Sheets(sh6).Cells(Y - 1, 7) = "$20.00"
                        Sheets(sh6).Cells(Y - 2, 8) = "TOTAL MET|fffd|LICA"
                        Sheets(sh6).Cells(Y - 2, 9) = "TOTAL DOTACI|fffd|N"
'                        Sheets(sh6).Cells(y - 1, 10) = "$100.00"
'                        Sheets(sh6).Cells(y - 1, 11) = "$20.00"
                        Sheets(sh6).Cells(Y - 1, 10) = "$10.00"
                        Sheets(sh6).Cells(Y - 1, 11) = "$5.00"
                        Sheets(sh6).Cells(Y - 1, 12) = "$2.00"
                        Sheets(sh6).Cells(Y - 1, 13) = "$1.00"
                        Sheets(sh6).Cells(Y - 1, 14) = "$0.50"
                        Sheets(sh6).Cells(Y - 1, 15) = "$0.20"
                        Sheets(sh6).Cells(Y - 1, 16) = "$0.10"
'                        Sheets(sh6).Cells(y - 1, 19) = "$0.05"
                        'sucursal
                        Sheets(sh6).Cells(Y, 1) = Sheets(sh18).Cells(row0, ColSuc)
                        
                        'MIL
                        Sheets(sh6).Cells(Y, 2) = Sheets(sh18).Cells(row0, ColMil)
                        '500
                        Sheets(sh6).Cells(Y, 3) = Sheets(sh18).Cells(row0, ColMil + 1)
                        '200
                        Sheets(sh6).Cells(Y, 4) = Sheets(sh18).Cells(row0, ColMil + 2)
                        '100
                        Sheets(sh6).Cells(Y, 5) = Sheets(sh18).Cells(row0, ColMil + 3)
                        '50
                        Sheets(sh6).Cells(Y, 6) = Sheets(sh18).Cells(row0, ColMil + 4)
                        '20
                        Sheets(sh6).Cells(Y, 7) = Sheets(sh18).Cells(row0, ColMil + 5)
                        
                        'METALICA
                        Sheets(sh6).Cells(Y, 8) = Sheets(sh18).Cells(row0, ColMet)
                        'TOTAL DOTACI|fffd|N
                        Sheets(sh6).Cells(Y, 9) = Sheets(sh18).Cells(row0, ColTotImp)
                        
                        'METALICA 100
'                        Sheets(sh6).Cells(y, 10) = Sheets(sh18).Cells(Row0, ColMet + 1)
'                        'METALICA 20
'                        Sheets(sh6).Cells(y, 11) = Sheets(sh18).Cells(Row0, ColMet + 2)
                        'METALICA 10
                        Sheets(sh6).Cells(Y, 10) = Sheets(sh18).Cells(row0, ColMet + 3)
                        'METALICA 5
                        Sheets(sh6).Cells(Y, 11) = Sheets(sh18).Cells(row0, ColMet + 4)
                        'METALICA 2
                        Sheets(sh6).Cells(Y, 12) = Sheets(sh18).Cells(row0, ColMet + 5)
                        'METALICA 1
                        Sheets(sh6).Cells(Y, 13) = Sheets(sh18).Cells(row0, ColMet + 6)
                        'METALICA .5
                        Sheets(sh6).Cells(Y, 14) = Sheets(sh18).Cells(row0, ColMet + 7)
                        'METALICA .2
                        Sheets(sh6).Cells(Y, 15) = Sheets(sh18).Cells(row0, ColMet + 8)
                        'METALICA .1
                        Sheets(sh6).Cells(Y, 16) = Sheets(sh18).Cells(row0, ColMet + 9)
                        'confirma etv
                        Sheets(sh18).Cells(row0, 35) = "OK CORREO ETV"
                        
'                        'METALICA .05
'                        Sheets(sh6).Cells(y, 19) = Sheets(sh18).Cells(Row0, ColMet + 10)
                        
                        Y = Y + 1
                        REP = REP + 1
                        
                ElseIf CStr(Cells(row0, Col2).value & Cells(row0, col1).value & Cells(row0, col0).value & Cells(row0, 10).value) _
                = Combinaciones(4, j) Then

                        'sucursal
                        Sheets(sh6).Cells(Y, 1) = Sheets(sh18).Cells(row0, ColSuc)
                        
                        'MIL
                        Sheets(sh6).Cells(Y, 2) = Sheets(sh18).Cells(row0, ColMil)
                        '500
                        Sheets(sh6).Cells(Y, 3) = Sheets(sh18).Cells(row0, ColMil + 1)
                        '200
                        Sheets(sh6).Cells(Y, 4) = Sheets(sh18).Cells(row0, ColMil + 2)
                        '100
                        Sheets(sh6).Cells(Y, 5) = Sheets(sh18).Cells(row0, ColMil + 3)
                        '50
                        Sheets(sh6).Cells(Y, 6) = Sheets(sh18).Cells(row0, ColMil + 4)
                        '20
                        Sheets(sh6).Cells(Y, 7) = Sheets(sh18).Cells(row0, ColMil + 5)
                        
                        'METALICA
                        Sheets(sh6).Cells(Y, 8) = Sheets(sh18).Cells(row0, ColMet)
                        'TOTAL DOTACI|fffd|N
                        Sheets(sh6).Cells(Y, 9) = Sheets(sh18).Cells(row0, ColTotImp)
                        
'                        'METALICA 100
'                        Sheets(sh6).Cells(y, 10) = Sheets(sh18).Cells(Row0, ColMet + 1)
'                        'METALICA 20
'                        Sheets(sh6).Cells(y, 11) = Sheets(sh18).Cells(Row0, ColMet + 2)
                        'METALICA 10
                        Sheets(sh6).Cells(Y, 10) = Sheets(sh18).Cells(row0, ColMet + 3)
                        'METALICA 5
                        Sheets(sh6).Cells(Y, 11) = Sheets(sh18).Cells(row0, ColMet + 4)
                        'METALICA 2
                        Sheets(sh6).Cells(Y, 12) = Sheets(sh18).Cells(row0, ColMet + 5)
                        'METALICA 1
                        Sheets(sh6).Cells(Y, 13) = Sheets(sh18).Cells(row0, ColMet + 6)
                        'METALICA .5
                        Sheets(sh6).Cells(Y, 14) = Sheets(sh18).Cells(row0, ColMet + 7)
                        'METALICA .2
                        Sheets(sh6).Cells(Y, 15) = Sheets(sh18).Cells(row0, ColMet + 8)
                        'METALICA .1
                        Sheets(sh6).Cells(Y, 16) = Sheets(sh18).Cells(row0, ColMet + 9)
'                        'METALICA .05
'                        Sheets(sh6).Cells(y, 19) = Sheets(sh18).Cells(Row0, ColMet + 10)
                        'confirma etv
                        Sheets(sh18).Cells(row0, 35) = "OK CORREO ETV"
                        
                        Y = Y + 1
                        REP = REP + 1

                End If


            row0 = row0 + 1
            
        Loop

                ''''''''''''''''''''''''''''''''LISTA DE ENV|fffd|O'''''''''''''''''''''''''''''
                    
                    Dim PARA, CC, CCO, GenericoInterno, GenericoPlaza As String
                    Dim RowDirEtv0, ColDorEtv0 As Long
                    
                    PARA = ""
                    CC = ""
                    CCO = ""
                    'sh20 = "Correos ETV"
                    Sheets(sh20).Select
                    
                    RowDirEtv0 = 2
                    ColDorEtv0 = 5
                    
                    Do While Cells(RowDirEtv0, ColDorEtv0) <> ""
                        'PLAZA (1) ETV (2) - TIPO ENVIO
                        If Cells(RowDirEtv0, ColDorEtv0 - 3) = Combinaciones(1, j) And _
                            Cells(RowDirEtv0, ColDorEtv0 - 2) = Combinaciones(2, j) And _
                            Cells(RowDirEtv0, ColDorEtv0 - 4) = "Para" Then
                
                            PARA = PARA & Cells(RowDirEtv0, ColDorEtv0) & ";"
                          
                        ElseIf Cells(RowDirEtv0, ColDorEtv0 - 3) = Combinaciones(1, j) And _
                            Cells(RowDirEtv0, ColDorEtv0 - 2) = Combinaciones(2, j) And _
                            Cells(RowDirEtv0, ColDorEtv0 - 4) = "CC" Then
                
                            CC = CC & Cells(RowDirEtv0, ColDorEtv0) & ";"
                           
                        ElseIf Cells(RowDirEtv0, ColDorEtv0 - 3) = "TODOS" And _
                            Cells(RowDirEtv0, ColDorEtv0 - 2) = Combinaciones(2, j) And _
                            Cells(RowDirEtv0, ColDorEtv0 - 4) = "CC" Then
                
                            CC = CC & Cells(RowDirEtv0, ColDorEtv0) & ";"
                         
                        ElseIf Cells(RowDirEtv0, ColDorEtv0 - 3) = "TODOS" And _
                            Cells(RowDirEtv0, ColDorEtv0 - 2) = "TODOS" And _
                            Cells(RowDirEtv0, ColDorEtv0 - 4) = "CC" Then
                
                            CC = CC & Cells(RowDirEtv0, ColDorEtv0) & ";"
                            
                        ElseIf Cells(RowDirEtv0, ColDorEtv0 - 3) = Combinaciones(1, j) And _
                            Cells(RowDirEtv0, ColDorEtv0 - 2) = Combinaciones(2, j) And _
                            Cells(RowDirEtv0, ColDorEtv0 - 4) = "CCO" Then
                
                            CCO = CCO & Cells(RowDirEtv0, ColDorEtv0) & ";"
                        
                        ElseIf Cells(RowDirEtv0, ColDorEtv0 - 3) = "TODOS" And _
                            Cells(RowDirEtv0, ColDorEtv0 - 2) = Combinaciones(2, j) And _
                            Cells(RowDirEtv0, ColDorEtv0 - 4) = "CCO" Then
                
                            CCO = CCO & Cells(RowDirEtv0, ColDorEtv0) & ";"
                           
                         ElseIf Cells(RowDirEtv0, ColDorEtv0 - 3) = "TODOS" And _
                            Cells(RowDirEtv0, ColDorEtv0 - 2) = "TODOS" And _
                            Cells(RowDirEtv0, ColDorEtv0 - 4) = "CCO" Then
                
                            CCO = CCO & Cells(RowDirEtv0, ColDorEtv0) & ";"
                            
                        End If
                        
                        RowDirEtv0 = RowDirEtv0 + 1
                        
                    Loop
                    

                ''''''''''''''''''''''''''''''''FORMATOS'''''''''''''''''''''''''''''
                    
                    Call CO3_1FormatoServicios
                 
                    
                ''''''''''''''''''''''''''''''''CORREO'''''''''''''''''''''''''''''
'                    Call CO3_1FormatoServicios
                Dim OutApp, OutMail As Object
                'Dim MiAdjunto As Outlook.Attachments
                Dim Asunto, Mensaje1, Mensaje2, FirmaCompartamos As String
                Dim ArchivoAdjunto As String
                Dim Saludo As String
                
                'Saludo dependiendo la hora de ejecuci|fffd|n
                If Hour(Now()) >= 12 Then
                Saludo = "Buenas tardes " & Combinaciones(2, j) & ","
                Else
                Saludo = "Buenos d|fffd|as " & Combinaciones(2, j) & ","
                End If
                
                'Asunto del correo
                Asunto = Servicios & " COMPARTAMOS BANCO **  " & Combinaciones(1, j) & "  **  " & _
                        NombresDiasMayus(Weekday(Date, vbMonday)) & " " _
                        & Day(Date) & " DE " & _
                        NombresMesesLargo(Month(Date))
                
                'Mensaje
                'sh19 = "PARAMETROS"
                
                Mensaje = "Se env|fffd|an servicios de " & Servicio & " para realizarse el "
                Mensaje1 = NombresDiasMayus(Weekday(Combinaciones(3, j), vbMonday)) & " " _
                        & Day(Combinaciones(3, j)) & " DE " & _
                        NombresMesesLargo(Month(Combinaciones(3, j))) & " "
                  
                Mensaje2 = "Quedo en espera de su confirmaci|fffd|n."
                
                Sheets(sh6).Select
                
                'Comprobar si Outlook esta abierto y en caso de no estarlo abrirlo

                On Error Resume Next
                Set OutApp = GetObject("", "Outlook.Application")
                Err.Clear
                
                If OutApp Is Nothing Then Set OutApp = CreateObject("Outlook.Application")

                
                OutApp.Visible = True
                
                OutApp.session.logon
                
                'se crea m|fffd|todo de env|fffd|o de correo
                Set OutMail = OutApp.CreateItem(0)
                
                
                
                'adjunto
                'Set MiAdjunto = OutMail.Attachments
                
                
                ''''''''''''''''''''''''''''''''''''''''''CORREO'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                'el cuerpo del correo y los archivos adjuntos
                On Error Resume Next
                
                With OutMail
                '.MiAdjunto.Add ArchivoAdjunto
                .To = PARA
                .CC = CC
                .BCC = CCO
                .Subject = Asunto
                '.BodyFormat = 2 'olFormatRichText
                '.Attachments.Add ArchivoAdjunto
                .HTMLBody = "<html>" & _
                    "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6C6969"">" & Saludo & "</span style=""color:#6C6969"">" & "<p/>" _
                    & "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6C6969"">" & Mensaje & "</span style=""color:#6C6969"">" _
                    & "<u>" & "<b style='font-family:verdana;font-size:19'>" & "<span style=""color:#F51907"">" & Mensaje1 & "</span style=""color:#F51907"">" & "</b>" & "<p/>" & "</u>" _
                    & "<br>" & _
                    "<img src= " & Chr(34) & UnidadAsignada & Catalogos & imaTemporalSaldos1 & Chr(34) & "<br>" & "<br>" _
                    & "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6C6969"">" & Mensaje2 & "<br>" _
                    & "<br>" & DATOS_USUARIO_WINDOWS(Environ("UserName"), 1) & "<br>" & _
                    "Tel. 5276-7250     Ext:    " & DATOS_USUARIO_WINDOWS(Environ("UserName"), 4) & "<br>" & _
                    DATOS_USUARIO_WINDOWS(Environ("UserName"), 5) & "</span style=""color:#6C6969"">" & "<p/>" & "<br>" & _
                    "<img src= " & Chr(34) & UnidadAsignada & Catalogos & firmaImagen & Chr(34) _
                    & "</html>"
                    
                    '' "<body>" "</body>"
                    
                '.Attachments.Add firmaImagen, False
                .display
                
                'Application.SendKeys "^{END}", True
                'Application.SendKeys "{ENTER}", True
                'Application.SendKeys "^v", True
                'DoEvents
                End With
                
                On Error GoTo 0
                
                Set OutMail = Nothing
                Set OutApp = Nothing
                

                
       
        Sheets(sh6).Select
        Cells.Clear
        
       
End If


Next j

ActiveWorkbook.Activate
 Sheets(sh18).Select

'Application.ScreenUpdating = True
hora2 = Now
hora3 = Format(hora2 - hora1, "h:mm:ss")

MsgBox "CORREOS GENERADOS" & Chr(10) & "tiempo proceso: " & hora3


End Sub







Sub CO3_1FormatoServicios()
Call VariablesGlobales

Sheets(sh6).Select

' Fila Inicio Registros
Dim rowIni As Long
rowIni = 4

'Fila T|fffd|tulo
Dim RowTit As Long
RowTit = 1

'Fila Encabezados
Dim RowHea  As Long
RowHea = 2

'Columna Inicio
Dim colIni As Integer
colIni = 1

'Columna T|fffd|tulo
Dim ColSucIni, ColSucFin As Integer
ColSucIni = 1
ColSucFin = 9

'Columna Encabezado Total Dotaciones
Dim ColTot As Integer
ColTot = 9

'Columna Encabezado Billetes
Dim ColBilIni, ColBilFin As Integer
ColBilIni = 2
ColBilFin = 7

'Columna Encabezado Total Met|fffd|lica
Dim ColTotMet As Integer
ColTotMet = 8

'Columna Encabezado Met|fffd|lica
Dim ColMetIni, ColMetFin As Integer
ColMetIni = 10
'totas las denominaciones 100 a 0.05
'ColMetFin = 19
'de 10 a 0.10
ColMetFin = 16

'Numero de registros
Dim Nreg As Long
If Cells(rowIni, colIni) = "" Then
    Nreg = 4
ElseIf Cells(rowIni, colIni) <> "" And Cells(rowIni + 1, colIni) = "" Then
    Nreg = 4

ElseIf Range(Cells(rowIni, colIni), Cells(rowIni, colIni).End(xlDown)).Count > 10000 Then
    Nreg = 4

Else
    Nreg = Range(Cells(rowIni, colIni), Cells(rowIni, colIni).End(xlDown)).Count + 3
    
End If

''''''''''''''''T|fffd|TULO'''''''''''''''''
    'COLUMNA
'    Columns("A:A").Select
'    Selection.ColumnWidth = 27.4
    
    Range(Cells(colIni, ColSucIni), Cells(colIni, ColSucFin)).Select
    Selection.Font.Bold = True
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True

    End With
    
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 10092543
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
    Selection.Font.Bold = True
    Selection.Font.size = 14
    Rows(colIni).RowHeight = 33
    
    
    
''''''''''''''''ENCABEZADOS'''''''''''''''''
'SUCURSAL
     Range(Cells(RowHea, ColSucIni), Cells(RowHea + 1, ColSucIni)).Select
     
     Selection.Font.Bold = True
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True

    End With

'TOTAL
     Range(Cells(RowHea, ColTot), Cells(RowHea + 1, ColTot)).Select
     
     Selection.Font.Bold = True
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True

    End With

'BILLETES
     Range(Cells(RowHea, ColBilIni), Cells(RowHea, ColBilFin)).Select
     
     Selection.Font.Bold = True
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True

    End With
    
     Range(Cells(RowHea + 1, ColBilIni), Cells(RowHea + 1, ColBilFin)).Select
     
     Selection.Font.Bold = True
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False

    End With
    
'TOTAL MET|fffd|LICA
     Range(Cells(RowHea, ColTotMet), Cells(RowHea + 1, ColTotMet)).Select
     
     Selection.Font.Bold = True
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True

    End With
    
'MET|fffd|LICA
     Range(Cells(RowHea, ColMetIni), Cells(RowHea, ColMetFin)).Select
     
     Selection.Font.Bold = True
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True

    End With

    Range(Cells(RowHea + 1, ColMetIni), Cells(RowHea + 1, ColMetFin)).Select
     
     Selection.Font.Bold = True
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False

    End With
    

     
    'magenta encabezados de tabla
    
    Range(Cells(RowHea, ColSucIni), Cells(RowHea + 1, ColMetFin)).Select
     
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 7733477
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    
    
    
    'Registros de dotaciones
    Range(Cells(rowIni, ColSucIni), Cells(Nreg, ColMetFin)).Select
    Selection.Font.Bold = False
    Selection.Font.size = 10
    
    
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    'Gris texto
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    

    'Registros suma de dotaciones
    Range(Cells(Nreg + 1, ColSucIni), Cells(Nreg + 1, ColMetFin)).Select
    Selection.Font.size = 9.5
    
    'gris totales
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
    
    'combinar celda intermedia BILLETES / MET|fffd|LICA
    Range(Cells(Nreg + 2, ColSucIni), Cells(Nreg + 2, ColTot)).Select
    Selection.Merge
    
    Range(Cells(RowHea, ColMetFin + 1), Cells(Nreg + 1, ColMetFin + 1)).Select
    Selection.Merge
    
    'todos los registros
    Range(Cells(rowIni - 1, ColSucIni), Cells(Nreg + 1, ColMetFin + 1)).Select
    Selection.Style = "Currency"
    Range("B:I").Activate
    Selection.ColumnWidth = 12.6
'    Range("A:A").Activate
'    Selection.ColumnWidth = 27.4
    
    'COLOR A LA CELDA DE TOTALES
    Range(Cells(RowHea, ColTot), Cells(RowHea + 1, ColTot)).Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 6029429
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
    
    
    'FORMULAS TOTALES
    Cells(Nreg + 1, ColSucIni) = "TOTALES"
    
    For i = 1 To ColMetFin - 1
        
         Cells(Nreg + 1, ColSucIni + i) = Application.WorksheetFunction.Sum(Range(Cells(rowIni, ColSucIni + i), Cells(Nreg, ColSucIni + i)))
        
    Next i
    
    
    'Mover met|fffd|lica
    Range(Cells(RowHea, ColMetIni), Cells(Nreg + 1, ColMetFin + 1)).Cut
    
    'rango destino met|fffd|lica
    Range(Cells(Nreg + 3, ColBilIni), Cells(Nreg + 3, ColBilIni)).Select
    
    ActiveSheet.Paste
    Application.CutCopyMode = False
    
    'copiar sucursales
    Range(Cells(RowHea, ColSucIni), Cells(Nreg + 1, ColSucIni)).Copy
    
    'rango destino met|fffd|lica
    Range(Cells(Nreg + 3, ColSucIni), Cells(Nreg + 3, ColSucIni)).Select
    
    ActiveSheet.Paste
    Application.CutCopyMode = False
    
    
    
    'Nueva fila final
    'Numero de registros

    Nreg = Range("a10000").End(xlUp).Row
        

    
    'rango a copiar
    Range(Cells(RowTit, colIni), Cells(Nreg, ColTot)).Select
    
    ''''''''''''''''''''''''''''''''''''''''RANGO COMO IMAGEN'''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                Sheets(sh6).Select
                
                ancho = ColTot
                largo = Nreg
                'Range(Cells(1, 1), Cells(Largo, Ancho)).Sel    ect
                
                'esperas
                If Application.Wait(Now + TimeValue("00:00:02")) Then
                End If
                
                'rango como imagen
                Call RangoImagen(Sheets(sh6).Range(Cells(1, 1), Cells(largo, ancho)), UnidadAsignada & Catalogos & imaTemporalSaldos1)
                
                'esperar
                If Application.Wait(Now + TimeValue("00:00:02")) Then
                End If
                  
             
End Sub








Sub CO3_00GruposPlazaEtvFechaServicioLista()

Call VariablesGlobales

Dim fechasEnvio As New Collection
Dim EtvServicio As New Collection
Dim plazasServicio As New Collection
Dim row0, col0, col1, Col2, numReg, X As Long
Dim ColSuc, ColTotImp, ColMil, ColMet As Integer
Dim rangoFechas, rangoEtvServicio, rangoPlazasServicio As Range

'Limpiar hoja de procesar
'sh6 = "Procesar"
Sheets(sh6).Select
Cells.Clear

'sh18 = "DetalleServicios"
Sheets(sh18).Select

'fila de inicio detalle servicios
row0 = 3
'columna de fechas de servicio
col0 = 9

'columna de ETV Servicio
col1 = 7

'columna de Plaza
Col2 = 4

' ColSuc
ColSuc = 6

'ColTotImp
ColTotImp = 16

'ColMil
ColMil = 17

'ColMet
ColMet = 23


'cantidad de registros
numReg = Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)).Count + 2


'VALIDAR QUE HAYA AL MENOS 1 REGISTRO PARA ENVIAR
If Cells(row0, col0) = "" Or Cells(row0, col1) = "" Or Cells(row0, Col2) = "" Then

MsgBox "NO HAY REGISTROS POR ENVIAR"

Exit Sub

End If



'''''''''''''''''''''''ETV DE SERVICIO''''''''''''''''''''''''''''''''

'RANGO FECHAS DE SERVICIO
Set rangoEtvServicio = Range(Cells(row0, col1), Cells(row0, col1).End(xlDown))

'Agregar primer registro de fechas de servicio
EtvServicio.Add Cells(row0, col1).value

For Each cell In rangoEtvServicio

    For j = 1 To EtvServicio.Count
    
        If cell = EtvServicio(j) Then
        
            Exit For
        
        ElseIf j = EtvServicio.Count And cell <> EtvServicio(j) Then
        
            EtvServicio.Add cell.value
        
        End If
    
    Next j
    
Next cell


'For i = 1 To etvServicio.Count
'
'MsgBox "etvServicio " & etvServicio(i)
'
'Next i





'''''''''''''''''''''''FECHAS ENVIO SERVICIO''''''''''''''''''''''''''''''''

'RANGO FECHAS DE SERVICIO
Set rangoFechas = Range(Cells(row0, col0), Cells(row0, col0).End(xlDown))

'Agregar primer registro de fechas de servicio
fechasEnvio.Add Cells(row0, col0).value

For Each cell In rangoFechas

    For j = 1 To fechasEnvio.Count
    
        If cell = fechasEnvio(j) Then
        
            Exit For
        
        ElseIf j = fechasEnvio.Count And cell <> fechasEnvio(j) Then
        
            fechasEnvio.Add cell.value
        
        End If
    
    Next j
    
Next cell


'For i = 1 To fechasEnvio.Count
'
'MsgBox "fechasEnvio " & fechasEnvio(i)
'
'Next i




'''''''''''''''''''''''PLAZAS SERVICIO''''''''''''''''''''''''''''''''

'RANGO FECHAS DE SERVICIO
Set rangoPlazasServicio = Range(Cells(row0, Col2), Cells(row0, Col2).End(xlDown))

'Agregar primer registro de fechas de servicio
plazasServicio.Add Cells(row0, Col2).value

For Each cell In rangoPlazasServicio

    For j = 1 To plazasServicio.Count
    
        If cell = plazasServicio(j) Then
        
            Exit For
        
        ElseIf j = plazasServicio.Count And cell <> plazasServicio(j) Then
        
            plazasServicio.Add cell.value
        
        End If
    
    Next j
    
Next cell


'For i = 1 To plazasServicio.Count
'
'MsgBox "plazasServicio " & plazasServicio(i)
'
'Next i



'''''''''''''''''''''''COMBINACIONES SERVICIO''''''''''''''''''''''''''''''''
'LONGITUD DE ARRAY
Dim LargoArray As Long

LargoArray = Application.WorksheetFunction.Max(EtvServicio.Count, fechasEnvio.Count, plazasServicio.Count)


'ARRAY
Dim Combinaciones() As String
ReDim Combinaciones(4, LargoArray)

'columna de fechas de servicio Col0 = 9
'columna de ETV Servicio Col1 = 7
'columna de Plaza Col2 = 4
' ColSuc ColSuc = 6
'ColTotImp ColTotImp = 16
'ColMil ColMil = 17
'ColMet ColMet = 23

'Primer registro en arreglo PLAZA / ETV SERVICIO / FECHA SERVICIO
Combinaciones(1, 1) = Cells(row0, Col2).value
Combinaciones(2, 1) = Cells(row0, col1).value
Combinaciones(3, 1) = Cells(row0, col0).value
Combinaciones(4, 1) = (Cells(row0, Col2).value & Cells(row0, col1).value & Cells(row0, col0).value)

X = 2

Do While Cells(row0, 1) <> ""

    For j = 0 To UBound(Combinaciones)
    
           
        If (Cells(row0, Col2).value & Cells(row0, col1).value & Cells(row0, col0).value) = Combinaciones(4, j) Then
        
            Exit For
        
        ElseIf j = UBound(Combinaciones) And (Cells(row0, Col2).value & Cells(row0, col1).value & Cells(row0, col0).value) <> Combinaciones(4, j) Then
'         MsgBox "intento: " & j & Chr(10) & "evaluar " & (Cells(Row0, Col2).value & Cells(Row0, Col1).value & Cells(Row0, Col0).value) & Chr(10) & "arreglo " & Combinaciones(4, j) _
'            & Chr(10) & ((Cells(Row0, Col2).value & Cells(Row0, Col1).value & Cells(Row0, Col0).value) <> Combinaciones(4, j))
        
            Combinaciones(1, X) = Cells(row0, Col2).value
            Combinaciones(2, X) = Cells(row0, col1).value
            Combinaciones(3, X) = Cells(row0, col0).value
            Combinaciones(4, X) = (Cells(row0, Col2).value & Cells(row0, col1).value & Cells(row0, col0).value)
            
            X = X + 1
            
        End If
    
    Next j
    
    row0 = row0 + 1
    

Loop


'''''''''''''''''''''''COMBINACIONES POR PLAZA - ETV - FECHA SERVICIO '''''''''''''''''''''''''''''
'inicio hoja de procesar
Dim Y, w As Long
    Y = 4

row0 = 3
col0 = 9

For j = 1 To UBound(Combinaciones)

        Sheets(sh18).Select
        REP = 1
        
        Do While Cells(row0, col0) <> ""
        
        Sheets(sh18).Select
        
    
     
     

                If CStr(Cells(row0, Col2).value & Cells(row0, col1).value & Cells(row0, col0).value) _
                = Combinaciones(4, j) And REP = 1 Then

                        ' encabezado
                        Sheets(sh6).Cells(Y - 3, 1) = "DOTACIONES " & Combinaciones(1, j) & " " & _
                        NombresDiasMayus(Weekday(Combinaciones(3, j), vbMonday)) & " DE " & Day(Combinaciones(3, j)) & " " & _
                        NombresMesesLargo(Month(Combinaciones(3, j)))
                        
                        Sheets(sh6).Cells(Y - 2, 1) = "SUCURSAL"
                        Sheets(sh6).Cells(Y - 2, 3) = "BILLETES"
                        Sheets(sh6).Cells(Y - 2, 10) = "MONEDA MET|fffd|LICA"
                        Sheets(sh6).Cells(Y - 2, 2) = "TOTAL DOTACI|fffd|N"
                        Sheets(sh6).Cells(Y - 1, 3) = "$1,000.00"
                        Sheets(sh6).Cells(Y - 1, 4) = "$500.00"
                        Sheets(sh6).Cells(Y - 1, 5) = "$200.00"
                        Sheets(sh6).Cells(Y - 1, 6) = "$100.00"
                        Sheets(sh6).Cells(Y - 1, 7) = "$50.00"
                        Sheets(sh6).Cells(Y - 1, 8) = "$20.00"
                        Sheets(sh6).Cells(Y - 2, 9) = "TOTAL MET|fffd|LICA"
                        Sheets(sh6).Cells(Y - 1, 10) = "$100.00"
                        Sheets(sh6).Cells(Y - 1, 11) = "$20.00"
                        Sheets(sh6).Cells(Y - 1, 12) = "$10.00"
                        Sheets(sh6).Cells(Y - 1, 13) = "$5.00"
                        Sheets(sh6).Cells(Y - 1, 14) = "$2.00"
                        Sheets(sh6).Cells(Y - 1, 15) = "$1.00"
                        Sheets(sh6).Cells(Y - 1, 16) = "$0.50"
                        Sheets(sh6).Cells(Y - 1, 17) = "$0.20"
                        Sheets(sh6).Cells(Y - 1, 18) = "$0.10"
                        Sheets(sh6).Cells(Y - 1, 19) = "$0.05"
                        'sucursal
                        Sheets(sh6).Cells(Y, 1) = Sheets(sh18).Cells(row0, ColSuc)
                        'TOTAL DOTACI|fffd|N
                        Sheets(sh6).Cells(Y, 2) = Sheets(sh18).Cells(row0, ColTotImp)
                        'MIL
                        Sheets(sh6).Cells(Y, 3) = Sheets(sh18).Cells(row0, ColMil)
                        '500
                        Sheets(sh6).Cells(Y, 4) = Sheets(sh18).Cells(row0, ColMil + 1)
                        '200
                        Sheets(sh6).Cells(Y, 5) = Sheets(sh18).Cells(row0, ColMil + 2)
                        '100
                        Sheets(sh6).Cells(Y, 6) = Sheets(sh18).Cells(row0, ColMil + 3)
                        '50
                        Sheets(sh6).Cells(Y, 7) = Sheets(sh18).Cells(row0, ColMil + 4)
                        '20
                        Sheets(sh6).Cells(Y, 8) = Sheets(sh18).Cells(row0, ColMil + 5)
                        
                        'METALICA
                        Sheets(sh6).Cells(Y, 9) = Sheets(sh18).Cells(row0, ColMet)
                        'METALICA 100
                        Sheets(sh6).Cells(Y, 10) = Sheets(sh18).Cells(row0, ColMet + 1)
                        'METALICA 20
                        Sheets(sh6).Cells(Y, 11) = Sheets(sh18).Cells(row0, ColMet + 2)
                        'METALICA 10
                        Sheets(sh6).Cells(Y, 12) = Sheets(sh18).Cells(row0, ColMet + 3)
                        'METALICA 5
                        Sheets(sh6).Cells(Y, 13) = Sheets(sh18).Cells(row0, ColMet + 4)
                        'METALICA 2
                        Sheets(sh6).Cells(Y, 14) = Sheets(sh18).Cells(row0, ColMet + 5)
                        'METALICA 1
                        Sheets(sh6).Cells(Y, 15) = Sheets(sh18).Cells(row0, ColMet + 6)
                        'METALICA .5
                        Sheets(sh6).Cells(Y, 16) = Sheets(sh18).Cells(row0, ColMet + 7)
                        'METALICA .2
                        Sheets(sh6).Cells(Y, 17) = Sheets(sh18).Cells(row0, ColMet + 8)
                        'METALICA .1
                        Sheets(sh6).Cells(Y, 18) = Sheets(sh18).Cells(row0, ColMet + 9)
                        'METALICA .05
                        Sheets(sh6).Cells(Y, 19) = Sheets(sh18).Cells(row0, ColMet + 10)
                        
                        Y = Y + 1
                        REP = REP + 1
                        
                ElseIf CStr(Cells(row0, Col2).value & Cells(row0, col1).value & Cells(row0, col0).value) _
                = Combinaciones(4, j) And REP > 1 Then

                        'sucursal
                        Sheets(sh6).Cells(Y, 1) = Sheets(sh18).Cells(row0, ColSuc)
                        'TOTAL DOTACI|fffd|N
                        Sheets(sh6).Cells(Y, 2) = Sheets(sh18).Cells(row0, ColTotImp)
                        'MIL
                        Sheets(sh6).Cells(Y, 3) = Sheets(sh18).Cells(row0, ColMil)
                        '500
                        Sheets(sh6).Cells(Y, 4) = Sheets(sh18).Cells(row0, ColMil + 1)
                        '200
                        Sheets(sh6).Cells(Y, 5) = Sheets(sh18).Cells(row0, ColMil + 2)
                        '100
                        Sheets(sh6).Cells(Y, 6) = Sheets(sh18).Cells(row0, ColMil + 3)
                        '50
                        Sheets(sh6).Cells(Y, 7) = Sheets(sh18).Cells(row0, ColMil + 4)
                        '20
                        Sheets(sh6).Cells(Y, 8) = Sheets(sh18).Cells(row0, ColMil + 5)
                        
                        'METALICA
                        Sheets(sh6).Cells(Y, 9) = Sheets(sh18).Cells(row0, ColMet)
                        'METALICA 100
                        Sheets(sh6).Cells(Y, 10) = Sheets(sh18).Cells(row0, ColMet + 1)
                        'METALICA 20
                        Sheets(sh6).Cells(Y, 11) = Sheets(sh18).Cells(row0, ColMet + 2)
                        'METALICA 10
                        Sheets(sh6).Cells(Y, 12) = Sheets(sh18).Cells(row0, ColMet + 3)
                        'METALICA 5
                        Sheets(sh6).Cells(Y, 13) = Sheets(sh18).Cells(row0, ColMet + 4)
                        'METALICA 2
                        Sheets(sh6).Cells(Y, 14) = Sheets(sh18).Cells(row0, ColMet + 5)
                        'METALICA 1
                        Sheets(sh6).Cells(Y, 15) = Sheets(sh18).Cells(row0, ColMet + 6)
                        'METALICA .5
                        Sheets(sh6).Cells(Y, 16) = Sheets(sh18).Cells(row0, ColMet + 7)
                        'METALICA .2
                        Sheets(sh6).Cells(Y, 17) = Sheets(sh18).Cells(row0, ColMet + 8)
                        'METALICA .1
                        Sheets(sh6).Cells(Y, 18) = Sheets(sh18).Cells(row0, ColMet + 9)
                        'METALICA .05
                        Sheets(sh6).Cells(Y, 19) = Sheets(sh18).Cells(row0, ColMet + 10)

                        Y = Y + 1
                        REP = REP + 1
                        
                End If


            row0 = row0 + 1
            
        Loop

    'solo para lista de  grupos
        Sheets(sh6).Select
        Y = Range("A100000").End(xlUp).Row + 6
        
        Sheets(sh8).Select
        row0 = 3
        col0 = 9
        
        
Next j



End Sub


Attribute VB_Name = "CP_FORMULAS_FORMATOS_CAPTURA"
Sub CP_1FormulasConciliacionArqueos()
Attribute CP_1FormulasConciliacionArqueos.VB_ProcData.VB_Invoke_Func = " \n14"

'
Call VariablesGlobales
'sh15 = "am_CONCILIAR_ARQUEOS"


Sheets(sh15).Select
Dim numReg, iniReg, iniCol, finCol As Long

If Range("A4") = "" And Range("A5") = "" Then
numReg = 4
ElseIf (Range("A3", Range("A3").End(xlDown)).Count) > 10000 Then
numReg = 4
Else
numReg = (Range("A3", Range("A3").End(xlDown)).Count) + 2
End If

'fila inici de formulas
iniReg = 4

'columna inicio de formulas
iniCol = 5
finCol = 78

    Application.Calculation = xlManual


'Registrar formulas en primera fila
'SALDO INICIAL

    Range("E4").Select
    ActiveCell.FormulaR1C1 = "=RC[-3]&RC[-2]&RC[-1]"
    Range("F4").Select
    ActiveCell.FormulaR1C1 = _
        "=IFERROR(VLOOKUP(RC5,'Cajas T-1'!C5:C149,128,0),0)+RC[18]"
    Range("G4").Select
    ActiveCell.FormulaR1C1 = _
        "=IFERROR(VLOOKUP(RC5,'Cajas T-1'!C5:C149,129,0),0)+RC[18]"
    Range("H4").Select
    ActiveCell.FormulaR1C1 = _
        "=IFERROR(VLOOKUP(RC5,'Cajas T-1'!C5:C149,130,0),0)+RC[18]"
    Range("I4").Select
    ActiveCell.FormulaR1C1 = _
        "=IFERROR(VLOOKUP(RC5,'Cajas T-1'!C5:C149,131,0),0)+RC[18]"
    Range("J4").Select
    ActiveCell.FormulaR1C1 = _
        "=IFERROR(VLOOKUP(RC5,'Cajas T-1'!C5:C149,132,0),0)+RC[18]"
    Range("K4").Select
    ActiveCell.FormulaR1C1 = _
        "=IFERROR(VLOOKUP(RC5,'Cajas T-1'!C5:C149,133,0),0)+RC[18]"
    Range("L4").Select
    ActiveCell.FormulaR1C1 = "=SUM(RC[1]:RC[10])"
    Range("M4").Select
    ActiveCell.FormulaR1C1 = _
        "=IFERROR(VLOOKUP(RC5,'Cajas T-1'!C5:C149,135,0),0)+RC[18]"
    Range("N4").Select
    ActiveCell.FormulaR1C1 = _
        "=IFERROR(VLOOKUP(RC5,'Cajas T-1'!C5:C149,136,0),0)+RC[18]"
    Range("O4").Select
    ActiveCell.FormulaR1C1 = _
        "=IFERROR(VLOOKUP(RC5,'Cajas T-1'!C5:C149,137,0),0)+RC[18]"
    Range("P4").Select
    ActiveCell.FormulaR1C1 = _
        "=IFERROR(VLOOKUP(RC5,'Cajas T-1'!C5:C149,138,0),0)+RC[18]"
    Range("Q4").Select
    ActiveCell.FormulaR1C1 = _
        "=IFERROR(VLOOKUP(RC5,'Cajas T-1'!C5:C149,139,0),0)+RC[18]"
    Range("R4").Select
    ActiveCell.FormulaR1C1 = _
        "=IFERROR(VLOOKUP(RC5,'Cajas T-1'!C5:C149,140,0),0)+RC[18]"
    Range("S4").Select
    ActiveCell.FormulaR1C1 = _
        "=IFERROR(VLOOKUP(RC5,'Cajas T-1'!C5:C149,141,0),0)+RC[18]"
    Range("T4").Select
    ActiveCell.FormulaR1C1 = _
        "=IFERROR(VLOOKUP(RC5,'Cajas T-1'!C5:C149,142,0),0)+RC[18]"
    Range("U4").Select
    ActiveCell.FormulaR1C1 = _
        "=IFERROR(VLOOKUP(RC5,'Cajas T-1'!C5:C149,143,0),0)+RC[18]"
    Range("V4").Select
    ActiveCell.FormulaR1C1 = _
        "=IFERROR(VLOOKUP(RC5,'Cajas T-1'!C5:C149,144,0),0)+RC[18]"
    Range("W4").Select
    ActiveCell.FormulaR1C1 = "=SUM(RC6:RC12)"
    
'AJUSTES
    Range("AD4").Select
    ActiveCell.FormulaR1C1 = "=SUM(RC31:RC40)"

    Range("AO4").Select
    ActiveCell.FormulaR1C1 = "=SUM(RC24:RC30)"
    
'ARQUEOS
    Range("AP4").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC1=""INTERBANCARIO"",IFERROR((GETPIVOTDATA(""Importe"",TABLAS!R307C1,""CategoriaOrigen"",""BILLETES 1,000"",""PlazaOrigen"",RC4,""NombreEtvHomologado"",RC3)),0),0)"
    Range("AQ4").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC1=""INTERBANCARIO"",IFERROR((GETPIVOTDATA(""Importe"",TABLAS!R307C1,""CategoriaOrigen"",""BILLETES 500"",""PlazaOrigen"",RC4,""NombreEtvHomologado"",RC3)),0),0)"
    Range("AR4").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC1=""INTERBANCARIO"",IFERROR((GETPIVOTDATA(""Importe"",TABLAS!R307C1,""CategoriaOrigen"",""BILLETES 200"",""PlazaOrigen"",RC4,""NombreEtvHomologado"",RC3)),0),0)"
    Range("AS4").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC1=""INTERBANCARIO"",IFERROR((GETPIVOTDATA(""Importe"",TABLAS!R307C1,""CategoriaOrigen"",""BILLETES 100"",""PlazaOrigen"",RC4,""NombreEtvHomologado"",RC3)),0),0)"
    Range("AT4").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC1=""INTERBANCARIO"",IFERROR((GETPIVOTDATA(""Importe"",TABLAS!R307C1,""CategoriaOrigen"",""BILLETES 50"",""PlazaOrigen"",RC4,""NombreEtvHomologado"",RC3)),0),0)"
    Range("AU4").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC1=""INTERBANCARIO"",IFERROR((GETPIVOTDATA(""Importe"",TABLAS!R307C1,""CategoriaOrigen"",""BILLETES 20"",""PlazaOrigen"",RC4,""NombreEtvHomologado"",RC3)),0),0)"
    Range("AV4").Select
    ActiveCell.FormulaR1C1 = "=SUM(RC49:RC58)"
    Range("AW4").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC1=""INTERBANCARIO"",IFERROR((GETPIVOTDATA(""Importe"",TABLAS!R307C1,""CategoriaOrigen"",""MONEDAS    100.00"",""PlazaOrigen"",RC4,""NombreEtvHomologado"",RC3)),0),0)"
    Range("AX4").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC1=""INTERBANCARIO"",IFERROR((GETPIVOTDATA(""Importe"",TABLAS!R307C1,""CategoriaOrigen"",""MONEDAS 20"",""PlazaOrigen"",RC4,""NombreEtvHomologado"",RC3)),0),0)"
    Range("AY4").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC1=""INTERBANCARIO"",IFERROR((GETPIVOTDATA(""Importe"",TABLAS!R307C1,""CategoriaOrigen"",""MONEDAS 10"",""PlazaOrigen"",RC4,""NombreEtvHomologado"",RC3)),0),0)"
    Range("AZ4").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC1=""INTERBANCARIO"",IFERROR((GETPIVOTDATA(""Importe"",TABLAS!R307C1,""CategoriaOrigen"",""MONEDAS 5"",""PlazaOrigen"",RC4,""NombreEtvHomologado"",RC3)),0),0)"
    Range("BA4").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC1=""INTERBANCARIO"",IFERROR((GETPIVOTDATA(""Importe"",TABLAS!R307C1,""CategoriaOrigen"",""MONEDAS 2"",""PlazaOrigen"",RC4,""NombreEtvHomologado"",RC3)),0),0)"
    Range("BB4").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC1=""INTERBANCARIO"",IFERROR((GETPIVOTDATA(""Importe"",TABLAS!R307C1,""CategoriaOrigen"",""MONEDAS 1"",""PlazaOrigen"",RC4,""NombreEtvHomologado"",RC3)),0),0)"
    Range("BC4").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC1=""INTERBANCARIO"",IFERROR((GETPIVOTDATA(""Importe"",TABLAS!R307C1,""CategoriaOrigen"",""MONEDAS 0.5"",""PlazaOrigen"",RC4,""NombreEtvHomologado"",RC3)),0),0)"
    Range("BD4").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC1=""INTERBANCARIO"",IFERROR((GETPIVOTDATA(""Importe"",TABLAS!R307C1,""CategoriaOrigen"",""MONEDAS 0.2"",""PlazaOrigen"",RC4,""NombreEtvHomologado"",RC3)),0),0)"
    Range("BE4").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC1=""INTERBANCARIO"",IFERROR((GETPIVOTDATA(""Importe"",TABLAS!R307C1,""CategoriaOrigen"",""MONEDAS 0.1"",""PlazaOrigen"",RC4,""NombreEtvHomologado"",RC3)),0),0)"
    Range("BF4").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(RC1=""INTERBANCARIO"",IFERROR((GETPIVOTDATA(""Importe"",TABLAS!R307C1,""CategoriaOrigen"",""MONEDAS 0.05"",""PlazaOrigen"",RC4,""NombreEtvHomologado"",RC3)),0),0)"
    Range("BG4").Select
    ActiveCell.FormulaR1C1 = "=SUM(RC42:RC48)"

    
'DIFERENCIAS
    Range("BH4").Select
    ActiveCell.FormulaR1C1 = "=RC[-54]-RC[-18]"
    Range("BI4").Select
    ActiveCell.FormulaR1C1 = "=RC[-54]-RC[-18]"
    Range("BJ4").Select
    ActiveCell.FormulaR1C1 = "=RC[-54]-RC[-18]"
    Range("BK4").Select
    ActiveCell.FormulaR1C1 = "=RC[-54]-RC[-18]"
    Range("BL4").Select
    ActiveCell.FormulaR1C1 = "=RC[-54]-RC[-18]"
    Range("BM4").Select
    ActiveCell.FormulaR1C1 = "=RC[-54]-RC[-18]"
    Range("BN4").Select
    ActiveCell.FormulaR1C1 = "=RC[-54]-RC[-18]"
    Range("BO4").Select
    ActiveCell.FormulaR1C1 = "=RC[-54]-RC[-18]"
    Range("BP4").Select
    ActiveCell.FormulaR1C1 = "=RC[-54]-RC[-18]"
    Range("BQ4").Select
    ActiveCell.FormulaR1C1 = "=RC[-54]-RC[-18]"
    Range("BR4").Select
    ActiveCell.FormulaR1C1 = "=RC[-54]-RC[-18]"
    Range("BS4").Select
    ActiveCell.FormulaR1C1 = "=RC[-54]-RC[-18]"
    Range("BT4").Select
    ActiveCell.FormulaR1C1 = "=RC[-54]-RC[-18]"
    Range("BU4").Select
    ActiveCell.FormulaR1C1 = "=RC[-54]-RC[-18]"
    Range("BV4").Select
    ActiveCell.FormulaR1C1 = "=RC[-54]-RC[-18]"
    Range("BW4").Select
    ActiveCell.FormulaR1C1 = "=RC[-54]-RC[-18]"
    Range("BX4").Select
    ActiveCell.FormulaR1C1 = "=RC[-54]-RC[-18]"
    Range("BY4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUM(ABS(RC[-17]),ABS(RC[-16]),ABS(RC[-15]),ABS(RC[-14]),ABS(RC[-13]),ABS(RC[-12]),ABS(RC[-8]),ABS(RC[-7]),ABS(RC[-6]),ABS(RC[-5]),ABS(RC[-4]),ABS(RC[-3]),ABS(RC[-2]),ABS(RC[-1]))"
    Range("BZ4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUM(RC[-18],RC[-17],RC[-16],RC[-15],RC[-14],RC[-13],RC[-9],RC[-8],RC[-7],RC[-6],RC[-5],RC[-4],RC[-3],RC[-2])"

    
'replicar formulas en todos los registros

Range(Cells(iniReg, iniCol), Cells(iniReg, finCol)).Copy
Range(Cells(iniReg + 1, iniCol), Cells(numReg, finCol)).Select
ActiveSheet.Paste
Application.CutCopyMode = False
Cells(iniReg, iniCol).Select


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'fila inici de formulas
iniReg = 4

'columna inicio de formulas
iniCol = 6
finCol = 78
    
'''''''''''''''''TOTALES Y FORMATO DE TOTALES ''''''''''''''''''''''''''''''



Do While Cells(iniReg, 1) <> ""

    If Cells(iniReg, 1) = "TOTALES" Then
        
        Cells(iniReg, iniCol).FormulaR1C1 = "=SUM(R[-4]C:R[-1]C)"
        
        For i = 1 To (finCol - iniCol)
        
        Cells(iniReg, iniCol + i).FormulaR1C1 = "=SUM(R[-4]C:R[-1]C)"
        '= Application.WorksheetFunction.Sum(Range(Cells(iniReg - 1, iniCol), Cells(iniReg - 4, iniCol)))
        
        Next i
        
        'formato a fila de totales
        Range(Cells(iniReg, 1), Cells(iniReg, finCol + 2)).Select
        Selection.Font.Bold = True
        With Selection.Interior
            .Pattern = xlSolid
            .PatternColorIndex = xlAutomatic
            .Color = 6750207
            .TintAndShade = 0
            .PatternTintAndShade = 0
        End With
    
    End If
    
    iniReg = iniReg + 1

Loop

    Application.Calculation = xlAutomatic


'fila inici de formulas
iniReg = 4

'columna inicio de formulas
finCol = 80

'''''''''''''''''VALIDACI|fffd|N LISTA DE AJUSTES'''''''''''''''''''''''''''''''

Range(Cells(iniReg, finCol), Cells(numReg, finCol)).Select
    With Selection.Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
        xlBetween, Formula1:="=CatAjustesConciliacion"
        .IgnoreBlank = True
        .InCellDropdown = True
        .InputTitle = ""
        .ErrorTitle = ""
        .InputMessage = ""
        .ErrorMessage = ""
        .ShowInput = True
        .ShowError = True
    End With
        
    
    
End Sub



Sub CP_2FormulasPlaneacionCajas()
'
Call VariablesGlobales
'sh1 = "pm_PLANEACION_CAJAS"


Sheets(sh1).Select
Dim numReg, iniReg, iniCol, finCol As Long

If Range("A4") = "" And Range("A5") = "" Then
numReg = 4
ElseIf (Range("A3", Range("A3").End(xlDown)).Count) > 10000 Then
numReg = 4
Else
numReg = (Range("A3", Range("A3").End(xlDown)).Count) + 2
End If

'fila inici de formulas
iniReg = 4

'columna inicio de formulas
iniCol = 5
finCol = 162

    Application.Calculation = xlManual


'Registrar formulas en primera fila
    Range("E4").Select
    ActiveCell.FormulaR1C1 = "=RC[-3]&RC[-2]&RC[-1]"

'SALDO INICIAL
    Range("F4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(am_CONCILIAR_ARQUEOS!C,am_CONCILIAR_ARQUEOS!C2,RC2,am_CONCILIAR_ARQUEOS!C3,RC3)"
    Range("G4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(am_CONCILIAR_ARQUEOS!C,am_CONCILIAR_ARQUEOS!C2,RC2,am_CONCILIAR_ARQUEOS!C3,RC3)"
    Range("H4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(am_CONCILIAR_ARQUEOS!C,am_CONCILIAR_ARQUEOS!C2,RC2,am_CONCILIAR_ARQUEOS!C3,RC3)"
    Range("I4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(am_CONCILIAR_ARQUEOS!C,am_CONCILIAR_ARQUEOS!C2,RC2,am_CONCILIAR_ARQUEOS!C3,RC3)"
    Range("J4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(am_CONCILIAR_ARQUEOS!C,am_CONCILIAR_ARQUEOS!C2,RC2,am_CONCILIAR_ARQUEOS!C3,RC3)"
    Range("K4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(am_CONCILIAR_ARQUEOS!C,am_CONCILIAR_ARQUEOS!C2,RC2,am_CONCILIAR_ARQUEOS!C3,RC3)"
    Range("L4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(am_CONCILIAR_ARQUEOS!C,am_CONCILIAR_ARQUEOS!C2,RC2,am_CONCILIAR_ARQUEOS!C3,RC3)"
    Range("M4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(am_CONCILIAR_ARQUEOS!C,am_CONCILIAR_ARQUEOS!C2,RC2,am_CONCILIAR_ARQUEOS!C3,RC3)"
    Range("N4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(am_CONCILIAR_ARQUEOS!C,am_CONCILIAR_ARQUEOS!C2,RC2,am_CONCILIAR_ARQUEOS!C3,RC3)"
    Range("O4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(am_CONCILIAR_ARQUEOS!C,am_CONCILIAR_ARQUEOS!C2,RC2,am_CONCILIAR_ARQUEOS!C3,RC3)"
    Range("P4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(am_CONCILIAR_ARQUEOS!C,am_CONCILIAR_ARQUEOS!C2,RC2,am_CONCILIAR_ARQUEOS!C3,RC3)"
    Range("Q4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(am_CONCILIAR_ARQUEOS!C,am_CONCILIAR_ARQUEOS!C2,RC2,am_CONCILIAR_ARQUEOS!C3,RC3)"
    Range("R4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(am_CONCILIAR_ARQUEOS!C,am_CONCILIAR_ARQUEOS!C2,RC2,am_CONCILIAR_ARQUEOS!C3,RC3)"
    Range("S4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(am_CONCILIAR_ARQUEOS!C,am_CONCILIAR_ARQUEOS!C2,RC2,am_CONCILIAR_ARQUEOS!C3,RC3)"
    Range("T4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(am_CONCILIAR_ARQUEOS!C,am_CONCILIAR_ARQUEOS!C2,RC2,am_CONCILIAR_ARQUEOS!C3,RC3)"
    Range("U4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(am_CONCILIAR_ARQUEOS!C,am_CONCILIAR_ARQUEOS!C2,RC2,am_CONCILIAR_ARQUEOS!C3,RC3)"
    Range("V4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(am_CONCILIAR_ARQUEOS!C,am_CONCILIAR_ARQUEOS!C2,RC2,am_CONCILIAR_ARQUEOS!C3,RC3)"
    Range("W4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(am_CONCILIAR_ARQUEOS!C,am_CONCILIAR_ARQUEOS!C2,pm_PLANEACION_CAJAS!RC2,am_CONCILIAR_ARQUEOS!C3,pm_PLANEACION_CAJAS!RC3)"

'DOTACIONES
    Range("X4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionDotaciones!C[-6],ProgramacionDotaciones!C2,RC2,ProgramacionDotaciones!C3,RC3)"
    Range("Y4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionDotaciones!C[-6],ProgramacionDotaciones!C2,RC2,ProgramacionDotaciones!C3,RC3)"
    Range("Z4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionDotaciones!C[-6],ProgramacionDotaciones!C2,RC2,ProgramacionDotaciones!C3,RC3)"
    Range("AA4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionDotaciones!C[-6],ProgramacionDotaciones!C2,RC2,ProgramacionDotaciones!C3,RC3)"
    Range("AA5").Select
    ActiveWindow.SmallScroll ToRight:=5
    Range("AB4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionDotaciones!C[-6],ProgramacionDotaciones!C2,RC2,ProgramacionDotaciones!C3,RC3)"
    Range("AC4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionDotaciones!C[-6],ProgramacionDotaciones!C2,RC2,ProgramacionDotaciones!C3,RC3)"
    Range("AD4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionDotaciones!C[-6],ProgramacionDotaciones!C2,RC2,ProgramacionDotaciones!C3,RC3)"
    Range("AE4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionDotaciones!C[-6],ProgramacionDotaciones!C2,RC2,ProgramacionDotaciones!C3,RC3)"
    Range("AF4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionDotaciones!C[-6],ProgramacionDotaciones!C2,RC2,ProgramacionDotaciones!C3,RC3)"
    Range("AG4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionDotaciones!C[-6],ProgramacionDotaciones!C2,RC2,ProgramacionDotaciones!C3,RC3)"
    Range("AH4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionDotaciones!C[-6],ProgramacionDotaciones!C2,RC2,ProgramacionDotaciones!C3,RC3)"
    Range("AI4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionDotaciones!C[-6],ProgramacionDotaciones!C2,RC2,ProgramacionDotaciones!C3,RC3)"
    Range("AJ4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionDotaciones!C[-6],ProgramacionDotaciones!C2,RC2,ProgramacionDotaciones!C3,RC3)"
    Range("AK4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionDotaciones!C[-6],ProgramacionDotaciones!C2,RC2,ProgramacionDotaciones!C3,RC3)"
    Range("AL4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionDotaciones!C[-6],ProgramacionDotaciones!C2,RC2,ProgramacionDotaciones!C3,RC3)"
    Range("AM4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionDotaciones!C[-6],ProgramacionDotaciones!C2,RC2,ProgramacionDotaciones!C3,RC3)"
    Range("AN4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionDotaciones!C[-6],ProgramacionDotaciones!C2,RC2,ProgramacionDotaciones!C3,RC3)"
    Range("AO4").Select
    ActiveCell.FormulaR1C1 = "=SUM(RC[-17]:RC[-12],RC[-10]:RC[-1])"
      
 'DOTACIONES EMERGENTES
 
    Range("AP4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionServicios!C[-24],ProgramacionServicios!C2,RC2,ProgramacionServicios!C3,RC3,ProgramacionServicios!C10,""DOTACION"")"
    Range("AQ4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionServicios!C[-24],ProgramacionServicios!C2,RC2,ProgramacionServicios!C3,RC3,ProgramacionServicios!C10,""DOTACION"")"
    Range("AR4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionServicios!C[-24],ProgramacionServicios!C2,RC2,ProgramacionServicios!C3,RC3,ProgramacionServicios!C10,""DOTACION"")"
    Range("AS4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionServicios!C[-24],ProgramacionServicios!C2,RC2,ProgramacionServicios!C3,RC3,ProgramacionServicios!C10,""DOTACION"")"
    Range("AT4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionServicios!C[-24],ProgramacionServicios!C2,RC2,ProgramacionServicios!C3,RC3,ProgramacionServicios!C10,""DOTACION"")"
    Range("AU4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionServicios!C[-24],ProgramacionServicios!C2,RC2,ProgramacionServicios!C3,RC3,ProgramacionServicios!C10,""DOTACION"")"
    Range("AV4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionServicios!C[-24],ProgramacionServicios!C2,RC2,ProgramacionServicios!C3,RC3,ProgramacionServicios!C10,""DOTACION"")"
    Range("AW4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionServicios!C[-24],ProgramacionServicios!C2,RC2,ProgramacionServicios!C3,RC3,ProgramacionServicios!C10,""DOTACION"")"
    Range("AX4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionServicios!C[-24],ProgramacionServicios!C2,RC2,ProgramacionServicios!C3,RC3,ProgramacionServicios!C10,""DOTACION"")"
    Range("AY4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionServicios!C[-24],ProgramacionServicios!C2,RC2,ProgramacionServicios!C3,RC3,ProgramacionServicios!C10,""DOTACION"")"
    Range("AZ4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionServicios!C[-24],ProgramacionServicios!C2,RC2,ProgramacionServicios!C3,RC3,ProgramacionServicios!C10,""DOTACION"")"
    Range("BA4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionServicios!C[-24],ProgramacionServicios!C2,RC2,ProgramacionServicios!C3,RC3,ProgramacionServicios!C10,""DOTACION"")"
    Range("BB4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionServicios!C[-24],ProgramacionServicios!C2,RC2,ProgramacionServicios!C3,RC3,ProgramacionServicios!C10,""DOTACION"")"
    Range("BC4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionServicios!C[-24],ProgramacionServicios!C2,RC2,ProgramacionServicios!C3,RC3,ProgramacionServicios!C10,""DOTACION"")"
    Range("BD4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionServicios!C[-24],ProgramacionServicios!C2,RC2,ProgramacionServicios!C3,RC3,ProgramacionServicios!C10,""DOTACION"")"
    Range("BE4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionServicios!C[-24],ProgramacionServicios!C2,RC2,ProgramacionServicios!C3,RC3,ProgramacionServicios!C10,""DOTACION"")"
    Range("BF4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(ProgramacionServicios!C[-24],ProgramacionServicios!C2,RC2,ProgramacionServicios!C3,RC3,ProgramacionServicios!C10,""DOTACION"")"
    Range("BG4").Select
    ActiveCell.FormulaR1C1 = "=SUM(RC[-17]:RC[-12],RC[-10]:RC[-1])"
    
'Compra
    Range("BH4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS('Registro COMPRAS'!C[-44],'Registro COMPRAS'!C1,""COMPRA REALIZADA"",'Registro COMPRAS'!C5,RC2,'Registro COMPRAS'!C4,RC3)"
    Range("BI4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS('Registro COMPRAS'!C[-44],'Registro COMPRAS'!C1,""COMPRA REALIZADA"",'Registro COMPRAS'!C5,RC2,'Registro COMPRAS'!C4,RC3)"
    Range("BJ4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS('Registro COMPRAS'!C[-44],'Registro COMPRAS'!C1,""COMPRA REALIZADA"",'Registro COMPRAS'!C5,RC2,'Registro COMPRAS'!C4,RC3)"
    Range("BK4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS('Registro COMPRAS'!C[-44],'Registro COMPRAS'!C1,""COMPRA REALIZADA"",'Registro COMPRAS'!C5,RC2,'Registro COMPRAS'!C4,RC3)"
    Range("BK5").Select
    ActiveWindow.SmallScroll ToRight:=5
    Range("BL4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS('Registro COMPRAS'!C[-44],'Registro COMPRAS'!C1,""COMPRA REALIZADA"",'Registro COMPRAS'!C5,RC2,'Registro COMPRAS'!C4,RC3)"
    Range("BM4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS('Registro COMPRAS'!C[-44],'Registro COMPRAS'!C1,""COMPRA REALIZADA"",'Registro COMPRAS'!C5,RC2,'Registro COMPRAS'!C4,RC3)"
    Range("BN4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS('Registro COMPRAS'!C[-44],'Registro COMPRAS'!C1,""COMPRA REALIZADA"",'Registro COMPRAS'!C5,RC2,'Registro COMPRAS'!C4,RC3)"
    Range("BO4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS('Registro COMPRAS'!C[-44],'Registro COMPRAS'!C1,""COMPRA REALIZADA"",'Registro COMPRAS'!C5,RC2,'Registro COMPRAS'!C4,RC3)"
    Range("BP4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS('Registro COMPRAS'!C[-44],'Registro COMPRAS'!C1,""COMPRA REALIZADA"",'Registro COMPRAS'!C5,RC2,'Registro COMPRAS'!C4,RC3)"
    Range("BQ4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS('Registro COMPRAS'!C[-44],'Registro COMPRAS'!C1,""COMPRA REALIZADA"",'Registro COMPRAS'!C5,RC2,'Registro COMPRAS'!C4,RC3)"
    Range("BR4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS('Registro COMPRAS'!C[-44],'Registro COMPRAS'!C1,""COMPRA REALIZADA"",'Registro COMPRAS'!C5,RC2,'Registro COMPRAS'!C4,RC3)"
    Range("BS4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS('Registro COMPRAS'!C[-44],'Registro COMPRAS'!C1,""COMPRA REALIZADA"",'Registro COMPRAS'!C5,RC2,'Registro COMPRAS'!C4,RC3)"
    Range("BT4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS('Registro COMPRAS'!C[-44],'Registro COMPRAS'!C1,""COMPRA REALIZADA"",'Registro COMPRAS'!C5,RC2,'Registro COMPRAS'!C4,RC3)"
    Range("BU4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS('Registro COMPRAS'!C[-44],'Registro COMPRAS'!C1,""COMPRA REALIZADA"",'Registro COMPRAS'!C5,RC2,'Registro COMPRAS'!C4,RC3)"
    Range("BV4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS('Registro COMPRAS'!C[-44],'Registro COMPRAS'!C1,""COMPRA REALIZADA"",'Registro COMPRAS'!C5,RC2,'Registro COMPRAS'!C4,RC3)"
    Range("BW4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS('Registro COMPRAS'!C[-44],'Registro COMPRAS'!C1,""COMPRA REALIZADA"",'Registro COMPRAS'!C5,RC2,'Registro COMPRAS'!C4,RC3)"
    Range("BX4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS('Registro COMPRAS'!C[-44],'Registro COMPRAS'!C1,""COMPRA REALIZADA"",'Registro COMPRAS'!C5,RC2,'Registro COMPRAS'!C4,RC3)"
    Range("BY4").Select
    ActiveCell.FormulaR1C1 = "=SUM(RC[-17]:RC[-12],RC[-10]:RC[-1])"
    
'Traslado In
    Range("BZ4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO SUCURSAL-CAJA"")"
    Range("CA4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO SUCURSAL-CAJA"")"
    Range("CB4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO SUCURSAL-CAJA"")"
    Range("CC4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO SUCURSAL-CAJA"")"
    Range("CC5").Select
    ActiveWindow.SmallScroll ToRight:=5
    Range("CD4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO SUCURSAL-CAJA"")"
    Range("CE4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO SUCURSAL-CAJA"")"
    Range("CF4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO SUCURSAL-CAJA"")"
    Range("CG4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO SUCURSAL-CAJA"")"
    Range("CH4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO SUCURSAL-CAJA"")"
    Range("CI4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO SUCURSAL-CAJA"")"
    Range("CJ4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO SUCURSAL-CAJA"")"

    Range("CK4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO SUCURSAL-CAJA"")"
    Range("CL4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO SUCURSAL-CAJA"")"
    Range("CM4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO SUCURSAL-CAJA"")"
    Range("CN4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO SUCURSAL-CAJA"")"
    Range("CO4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO SUCURSAL-CAJA"")"
    Range("CP4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosEntrada!C[-60],MovimientosEntrada!C9,RC2,MovimientosEntrada!C7,""Entrada"",MovimientosEntrada!C11,RC3,MovimientosEntrada!C1,""TRASPASO SUCURSAL-CAJA"")"
    Range("CQ4").Select
    ActiveCell.FormulaR1C1 = "=SUM(RC[-17]:RC[-12],RC[-10]:RC[-1])"
    
'Traslado Out
    Range("CR4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-DEM"")"
    Range("CS4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-DEM"")"

    Range("CT4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-DEM"")"
    Range("CU4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-DEM"")"
    Range("CV4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-DEM"")"
    Range("CW4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-DEM"")"
    Range("CX4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-DEM"")"
    Range("CY4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-DEM"")"
    Range("CZ4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-DEM"")"
    Range("DA4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-DEM"")"
    Range("DB4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-DEM"")"
    Range("DC4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-DEM"")"
    Range("DD4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-DEM"")"
    Range("DE4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-DEM"")"
    Range("DF4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-DEM"")"
    Range("DG4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-DEM"")"
    Range("DH4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-CAJA"")+SUMIFS(MovimientosSalida!C[-78],MovimientosSalida!C2,RC2,MovimientosSalida!C7,""Salida"",MovimientosSalida!C3,RC3,MovimientosSalida!C1,""TRASPASO CAJA-DEM"")"
    Range("DI4").Select
    ActiveCell.FormulaR1C1 = "=SUM(RC[-17]:RC[-12],RC[-10]:RC[-1])"

'SALDO FISICO
    Range("DJ4").Select
    ActiveCell.FormulaR1C1 = "=RC[-108]-RC[-72]+RC[-54]+RC[-36]-RC[-18]"
    Range("DK4").Select
    ActiveCell.FormulaR1C1 = "=RC[-108]-RC[-72]+RC[-54]+RC[-36]-RC[-18]"
    Range("DL4").Select
    ActiveCell.FormulaR1C1 = "=RC[-108]-RC[-72]+RC[-54]+RC[-36]-RC[-18]"
    Range("DM4").Select
    ActiveCell.FormulaR1C1 = "=RC[-108]-RC[-72]+RC[-54]+RC[-36]-RC[-18]"
    Range("DN4").Select
    ActiveCell.FormulaR1C1 = "=RC[-108]-RC[-72]+RC[-54]+RC[-36]-RC[-18]"
    Range("DO4").Select
    ActiveCell.FormulaR1C1 = "=RC[-108]-RC[-72]+RC[-54]+RC[-36]-RC[-18]"
    Range("DP4").Select
    ActiveCell.FormulaR1C1 = "=RC[-108]-RC[-72]+RC[-54]+RC[-36]-RC[-18]"
    Range("DQ4").Select
    ActiveCell.FormulaR1C1 = "=RC[-108]-RC[-72]+RC[-54]+RC[-36]-RC[-18]"
    Range("DR4").Select
    ActiveCell.FormulaR1C1 = "=RC[-108]-RC[-72]+RC[-54]+RC[-36]-RC[-18]"
    Range("DS4").Select
    ActiveCell.FormulaR1C1 = "=RC[-108]-RC[-72]+RC[-54]+RC[-36]-RC[-18]"
    Range("DT4").Select
    ActiveCell.FormulaR1C1 = "=RC[-108]-RC[-72]+RC[-54]+RC[-36]-RC[-18]"
    Range("DU4").Select
    ActiveCell.FormulaR1C1 = "=RC[-108]-RC[-72]+RC[-54]+RC[-36]-RC[-18]"
    Range("DV4").Select
    ActiveCell.FormulaR1C1 = "=RC[-108]-RC[-72]+RC[-54]+RC[-36]-RC[-18]"
    Range("DW4").Select
    ActiveCell.FormulaR1C1 = "=RC[-108]-RC[-72]+RC[-54]+RC[-36]-RC[-18]"
    Range("DX4").Select
    ActiveCell.FormulaR1C1 = "=RC[-108]-RC[-72]+RC[-54]+RC[-36]-RC[-18]"
    Range("DY4").Select
    ActiveCell.FormulaR1C1 = "=RC[-108]-RC[-72]+RC[-54]+RC[-36]-RC[-18]"
    Range("DZ4").Select
    ActiveCell.FormulaR1C1 = "=RC[-108]-RC[-72]+RC[-54]+RC[-36]-RC[-18]"
    Range("EA4").Select
    ActiveCell.FormulaR1C1 = "=RC[-108]-RC[-72]+RC[-54]+RC[-36]-RC[-18]"
    
'SALDO ESTIMADO
    Range("EB4").Select
    ActiveCell.FormulaR1C1 = "=RC[-18]-RC[-108]"
    Range("EC4").Select
    ActiveCell.FormulaR1C1 = "=RC[-18]-RC[-108]"
    Range("ED4").Select
    ActiveCell.FormulaR1C1 = "=RC[-18]-RC[-108]"
    Range("EE4").Select
    ActiveCell.FormulaR1C1 = "=RC[-18]-RC[-108]"
    Range("EF4").Select
    ActiveCell.FormulaR1C1 = "=RC[-18]-RC[-108]"
    Range("EG4").Select
    ActiveCell.FormulaR1C1 = "=RC[-18]-RC[-108]"
    Range("EH4").Select
    ActiveCell.FormulaR1C1 = "=RC[-18]-RC[-108]"
    Range("EI4").Select
    ActiveCell.FormulaR1C1 = "=RC[-18]-RC[-108]"
    Range("EJ4").Select
    ActiveCell.FormulaR1C1 = "=RC[-18]-RC[-108]"
    Range("EK4").Select
    ActiveCell.FormulaR1C1 = "=RC[-18]-RC[-108]"
    Range("EL4").Select
    ActiveCell.FormulaR1C1 = "=RC[-18]-RC[-108]"
    Range("EM4").Select
    ActiveCell.FormulaR1C1 = "=RC[-18]-RC[-108]"
    Range("EN4").Select
    ActiveCell.FormulaR1C1 = "=RC[-18]-RC[-108]"
    Range("EO4").Select
    ActiveCell.FormulaR1C1 = "=RC[-18]-RC[-108]"
    Range("EP4").Select
    ActiveCell.FormulaR1C1 = "=RC[-18]-RC[-108]"
    Range("EQ4").Select
    ActiveCell.FormulaR1C1 = "=RC[-18]-RC[-108]"

    Range("ER4").Select
    ActiveCell.FormulaR1C1 = "=RC[-18]-RC[-108]"
    Range("ES4").Select
    ActiveCell.FormulaR1C1 = "=RC[-18]-RC[-108]"

    'Saldos
    Range("ET4").Select
    ActiveCell.FormulaR1C1 = "=IF(RC[-149]=""INTERBANCARIO"",0,RC[-73])"
    Range("EV4").Select
    ActiveCell.FormulaR1C1 = "=RC[-3]-RC[-2]-RC[-1]"
    
'    Range("EX4").Select
    
    
'DEM CAJA
    Range("FB4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(DEM!C[-143],DEM!C2,RC2,DEM!C3,RC3,DEM!C10,""TRASPASO CAJA-DEM"")"
    
'DEM SUCURSALES
    Range("FC4").Select
    ActiveCell.FormulaR1C1 = _
        "=SUMIFS(DEM!C[-144],DEM!C2,RC2,DEM!C3,RC3,DEM!C10,""TRASPASO SUCURSAL-DEM"")"

'DEM TOTAL
    Range("FD4").Select
    ActiveCell.FormulaR1C1 = "=RC[-2]+RC[-1]"

'ACREDITACI|fffd|N
    Range("FE4").Select
    ActiveCell.FormulaR1C1 = "=SUMIFS(DEM!C[-128],DEM!C2,RC2,DEM!C3,RC3)"
    
'SALDO DEM
    Range("FF4").Select
    ActiveCell.FormulaR1C1 = "=RC[-2]-RC[-1]"



'replicar formulas en todos los registros

Range(Cells(iniReg, iniCol), Cells(iniReg, finCol)).Copy
Range(Cells(iniReg + 1, iniCol), Cells(numReg, finCol)).Select
ActiveSheet.Paste
Application.CutCopyMode = False
Cells(iniReg, iniCol).Select


'''''''''''''''''TOTALES Y FORMATO DE TOTALES ''''''''''''''''''''''''''''''
'fila inici de formulas
iniReg = 4

'columna inicio de formulas
iniCol = 6
finCol = 162


Do While Cells(iniReg, 1) <> ""

    If Cells(iniReg, 1) = "TOTALES" Then
        
        Cells(iniReg, iniCol).FormulaR1C1 = "=SUM(R[-4]C:R[-1]C)"
        
        For i = 1 To (finCol - iniCol)
        
        Cells(iniReg, iniCol + i).FormulaR1C1 = "=SUM(R[-4]C:R[-1]C)"
        '= Application.WorksheetFunction.Sum(Range(Cells(iniReg - 1, iniCol), Cells(iniReg - 4, iniCol)))
        
        Next i
        
'        For i = 1 To (23 - iniCol)
'
'        Cells(iniReg, iniCol + i).FormulaR1C1 = "=SUM(R[-4]C:R[-1]C)"
'        '= Application.WorksheetFunction.Sum(Range(Cells(iniReg - 1, iniCol), Cells(iniReg - 4, iniCol)))
'
'        Next i
'
'        For i = 36 To (finCol - iniCol)
'
'        Cells(iniReg, iniCol + i).FormulaR1C1 = "=SUM(R[-4]C:R[-1]C)"
'        '= Application.WorksheetFunction.Sum(Range(Cells(iniReg - 1, iniCol), Cells(iniReg - 4, iniCol)))
'
'        Next i
        
        'formato a fila de totales
        Range(Cells(iniReg, 1), Cells(iniReg, finCol)).Select
        Selection.Font.Bold = True
        With Selection.Interior
            .Pattern = xlSolid
            .PatternColorIndex = xlAutomatic
            .Color = 6750207
            .TintAndShade = 0
            .PatternTintAndShade = 0
        End With
    
    End If
    
    iniReg = iniReg + 1

Loop

    Application.Calculation = xlAutomatic
    
    
End Sub




Sub CP_3FormulasServicios()

'
Call VariablesGlobales
'sh3 = "pm_PLANEACION_SERVICIOS"

Sheets(sh3).Select
Dim numReg, iniReg, iniCol, finCol As Long

If Range("A4") = "" And Range("A5") = "" Then
numReg = 4
ElseIf (Range("A3", Range("A3").End(xlDown)).Count) > 10000 Then
numReg = 4
Else
numReg = (Range("A3", Range("A3").End(xlDown)).Count) + 2
End If

'fila inici de formulas
iniReg = 4

'columna inicio de formulas
'columna k
iniCol = 11
finCol = 63

    Application.Calculation = xlManual


'Registrar formulas en primera fila
    
'    'ACTUALIZACI|fffd|N CI-CO D|fffd|A T
'    Range("K4:K" & numReg).Select
'    Selection.FormulaR1C1 = _
'        "=COUNTIFS(ProgramacionServicios!C5,RC[-7],ProgramacionServicios!C10,""DOTACION"")"
'    'ESTATUS COMPORTAMIENTO
'    Range("V4:V" & numReg).Select
'    Selection.FormulaR1C1 = _
'        "=SUMIFS(ProgramacionServicios!C17,ProgramacionServicios!C5,RC[-8],ProgramacionServicios!C10,""DOTACION"")"
'    'CASH IN - CASH OUT PRON|fffd|STICO D|fffd|A T+1
'    Range("AB4:AB" & numReg).Select
'    Selection.FormulaR1C1 = "=RC[-2]+RC[-1]"
'
'    'SERVICIO PROGRAMADO ("DOTACI|fffd|N")
'    Range("AD4:AD" & numReg).Select
'    Selection.FormulaR1C1 = "DOTACION"
'
'    'SALDO ESTIMADO
'    Range("AF4:AF" & numReg).Select
'    Selection.FormulaR1C1 = "=RC[-1]+RC[-11]"
'    'D|fffd|AS INVENTARIO ESTIMADOS
'    Range("AG4:AG" & numReg).Select
'    Selection.FormulaR1C1 = "=RC19/RC10"
'    'ETV SERVICIO
'    Range("AI4:AI" & numReg).Select
'    Selection.FormulaR1C1 = "=RC[-20]"
'
'    'MEDIO AFECTACI|fffd|N("ETV")
'    Range("AJ4:AJ" & numReg).Select
'    Selection.FormulaR1C1 = "ETV"
'
'    'BILLETES $500.00
'    Range("AM4:AM" & numReg).Select
'    Selection.FormulaR1C1 = "=RC[-8]-RC[-1]-SUM(RC[1]:RC[4],RC[6]:RC[15])"
'    'SUBTOTAL MET|fffd|LICA
'    Range("AR4:AR" & numReg).Select
'    Selection.FormulaR1C1 = "=SUM(RC[1]:RC[10])"
    
    
    
    'SERVICIO DOTACI|fffd|N
    Range("AD4:AD" & numReg).Select
    Selection.FormulaR1C1 = "DOTACION"
    'SALDO ESTIMADO
    Range("AF4:AF" & numReg).Select
    Selection.FormulaR1C1 = "=RC[-1]+RC[-24]+RC[-4]"
    'DIAS INVENTARIO
    Range("AG4:AG" & numReg).Select
    Selection.FormulaR1C1 = "=RC[-1]/RC[-23]"
    'ETV SERVICIO
    Range("AI4:AI" & numReg).Select
    Selection.FormulaR1C1 = "=RC[-33]"
    'MEDIO AFECTACI|fffd|N
    Range("AJ4:AJ" & numReg).Select
    Selection.FormulaR1C1 = "ETV"
    'BILLETES $500.00
    Range("AM4:AM" & numReg).Select
    Selection.FormulaR1C1 = "=RC[-8]-RC[-1]-SUM(RC[1]:RC[4],RC[6]:RC[15])"
    'MET|fffd|LICA
    Range("AR4:AR" & numReg).Select
    Selection.FormulaR1C1 = "=SUM(RC[1]:RC[10])"



    'REVOLVENTE
'    Range("AT4:AT" & NumReg).Select
'    Selection.FormulaR1C1 = _
'        "=(SUMIFS(pm_PLANEACION_CAJAS!C[-28],pm_PLANEACION_CAJAS!C2,RC1,pm_PLANEACION_CAJAS!C3,RC2))-(SUMIFS(R4C[-22]:R1048576C[-22],R4C1:R1048576C1,RC1,R4C2:R1048576C2,RC2))"
'    Range("AU4:AU" & NumReg).Select
'    Selection.FormulaR1C1 = _
'        "=(SUMIFS(pm_PLANEACION_CAJAS!C[-28],pm_PLANEACION_CAJAS!C2,RC1,pm_PLANEACION_CAJAS!C3,RC2))-(SUMIFS(R4C[-22]:R1048576C[-22],R4C1:R1048576C1,RC1,R4C2:R1048576C2,RC2))"
'    Range("AV4:AV" & NumReg).Select
'    Selection.FormulaR1C1 = _
'        "=(SUMIFS(pm_PLANEACION_CAJAS!C[-28],pm_PLANEACION_CAJAS!C2,RC1,pm_PLANEACION_CAJAS!C3,RC2))-(SUMIFS(R4C[-22]:R1048576C[-22],R4C1:R1048576C1,RC1,R4C2:R1048576C2,RC2))"
'    Range("AW4:AW" & NumReg).Select
'    Selection.FormulaR1C1 = _
'        "=(SUMIFS(pm_PLANEACION_CAJAS!C[-28],pm_PLANEACION_CAJAS!C2,RC1,pm_PLANEACION_CAJAS!C3,RC2))-(SUMIFS(R4C[-22]:R1048576C[-22],R4C1:R1048576C1,RC1,R4C2:R1048576C2,RC2))"
'    Range("AX4:AX" & NumReg).Select
'    Selection.FormulaR1C1 = _
'        "=(SUMIFS(pm_PLANEACION_CAJAS!C[-28],pm_PLANEACION_CAJAS!C2,RC1,pm_PLANEACION_CAJAS!C3,RC2))-(SUMIFS(R4C[-22]:R1048576C[-22],R4C1:R1048576C1,RC1,R4C2:R1048576C2,RC2))"
'    Range("AY4:AY" & NumReg).Select
'    Selection.FormulaR1C1 = _
'        "=(SUMIFS(pm_PLANEACION_CAJAS!C[-28],pm_PLANEACION_CAJAS!C2,RC1,pm_PLANEACION_CAJAS!C3,RC2))-(SUMIFS(R4C[-22]:R1048576C[-22],R4C1:R1048576C1,RC1,R4C2:R1048576C2,RC2))"
'    Range("AZ4:AZ" & NumReg).Select
'    Selection.FormulaR1C1 = _
'        "=(SUMIFS(pm_PLANEACION_CAJAS!C[-28],pm_PLANEACION_CAJAS!C2,RC1,pm_PLANEACION_CAJAS!C3,RC2))-(SUMIFS(R4C[-22]:R1048576C[-22],R4C1:R1048576C1,RC1,R4C2:R1048576C2,RC2))"
'    Range("BA4:BA" & NumReg).Select
'    Selection.FormulaR1C1 = _
'        "=(SUMIFS(pm_PLANEACION_CAJAS!C[-28],pm_PLANEACION_CAJAS!C2,RC1,pm_PLANEACION_CAJAS!C3,RC2))-(SUMIFS(R4C[-22]:R1048576C[-22],R4C1:R1048576C1,RC1,R4C2:R1048576C2,RC2))"
'    Range("BB4:BB" & NumReg).Select
'    Selection.FormulaR1C1 = _
'        "=(SUMIFS(pm_PLANEACION_CAJAS!C[-28],pm_PLANEACION_CAJAS!C2,RC1,pm_PLANEACION_CAJAS!C3,RC2))-(SUMIFS(R4C[-22]:R1048576C[-22],R4C1:R1048576C1,RC1,R4C2:R1048576C2,RC2))"
'    Range("BC4:BC" & NumReg).Select
'    Selection.FormulaR1C1 = _
'        "=(SUMIFS(pm_PLANEACION_CAJAS!C[-28],pm_PLANEACION_CAJAS!C2,RC1,pm_PLANEACION_CAJAS!C3,RC2))-(SUMIFS(R4C[-22]:R1048576C[-22],R4C1:R1048576C1,RC1,R4C2:R1048576C2,RC2))"
'    Range("BD4:BD" & NumReg).Select
'    Selection.FormulaR1C1 = _
'        "=(SUMIFS(pm_PLANEACION_CAJAS!C[-28],pm_PLANEACION_CAJAS!C2,RC1,pm_PLANEACION_CAJAS!C3,RC2))-(SUMIFS(R4C[-22]:R1048576C[-22],R4C1:R1048576C1,RC1,R4C2:R1048576C2,RC2))"
'    Range("BE4:BE" & NumReg).Select
'    Selection.FormulaR1C1 = _
'        "=(SUMIFS(pm_PLANEACION_CAJAS!C[-28],pm_PLANEACION_CAJAS!C2,RC1,pm_PLANEACION_CAJAS!C3,RC2))-(SUMIFS(R4C[-22]:R1048576C[-22],R4C1:R1048576C1,RC1,R4C2:R1048576C2,RC2))"
'    Range("BF4:BF" & NumReg).Select
'    Selection.FormulaR1C1 = _
'        "=(SUMIFS(pm_PLANEACION_CAJAS!C[-28],pm_PLANEACION_CAJAS!C2,RC1,pm_PLANEACION_CAJAS!C3,RC2))-(SUMIFS(R4C[-22]:R1048576C[-22],R4C1:R1048576C1,RC1,R4C2:R1048576C2,RC2))"
'    Range("BG4:BG" & NumReg).Select
'    Selection.FormulaR1C1 = _
'        "=(SUMIFS(pm_PLANEACION_CAJAS!C[-28],pm_PLANEACION_CAJAS!C2,RC1,pm_PLANEACION_CAJAS!C3,RC2))-(SUMIFS(R4C[-22]:R1048576C[-22],R4C1:R1048576C1,RC1,R4C2:R1048576C2,RC2))"
'    Range("BH4:BH" & NumReg).Select
'    Selection.FormulaR1C1 = _
'        "=(SUMIFS(pm_PLANEACION_CAJAS!C[-28],pm_PLANEACION_CAJAS!C2,RC1,pm_PLANEACION_CAJAS!C3,RC2))-(SUMIFS(R4C[-22]:R1048576C[-22],R4C1:R1048576C1,RC1,R4C2:R1048576C2,RC2))"
'    Range("BI4:BI" & NumReg).Select
'    Selection.FormulaR1C1 = _
'        "=(SUMIFS(pm_PLANEACION_CAJAS!C[-28],pm_PLANEACION_CAJAS!C2,RC1,pm_PLANEACION_CAJAS!C3,RC2))-(SUMIFS(R4C[-22]:R1048576C[-22],R4C1:R1048576C1,RC1,R4C2:R1048576C2,RC2))"
'    Range("BJ4:BJ" & NumReg).Select
'    Selection.FormulaR1C1 = _
'        "=(SUMIFS(pm_PLANEACION_CAJAS!C[-28],pm_PLANEACION_CAJAS!C2,RC1,pm_PLANEACION_CAJAS!C3,RC2))-(SUMIFS(R4C[-22]:R1048576C[-22],R4C1:R1048576C1,RC1,R4C2:R1048576C2,RC2))"
'    Range("BK4:BK" & NumReg).Select
'    Selection.FormulaR1C1 = _
'        "=(SUMIFS(pm_PLANEACION_CAJAS!C[-46],pm_PLANEACION_CAJAS!C2,RC1,pm_PLANEACION_CAJAS!C3,RC2))-(SUMIFS(R4C[-22]:R1048576C[-22],R4C1:R1048576C1,RC1,R4C2:R1048576C2,RC2))"
'



    Application.Calculation = xlAutomatic
    
    
End Sub



Sub CP_4FormulasDem()

'
Call VariablesGlobales
'sh25 = "DEM"

Sheets(sh25).Select
Dim numReg, iniReg, colEstatus, colAcreditacion, colSaldo As Long

If Range("L3") = "" And Range("L5") = "" Then
numReg = 3
ElseIf (Range("L2", Range("L2").End(xlDown)).Count) > 10000 Then
numReg = 3
Else
numReg = (Range("L2", Range("L2").End(xlDown)).Count) + 2
End If

'fila inici de formulas
iniReg = 3

'columna inicio de formulas
'columna k
colEstatus = 1
colAcreditacion = 30
colSaldo = 39

    Application.Calculation = xlManual


'Registrar formulas en primera fila
Do While Cells(iniReg, 12) <> ""

Cells(iniReg, colEstatus).FormulaR1C1 = _
        "=IF(RC[29]>RC[11],""ACREDITACI|fffd|N EXCEDENTE"",IF(AND(RC[29]>0,RC[11]>RC[29]),""ACREDITACI|fffd|N PARCIAL"",IF(AND(RC[29]=0,RC[11]>RC[29]),""NO ACREDITADO"",IF(AND(RC[11]>0,RC[29]>0,RC[11]=RC[29]),""ACREDITADO"",""NO ACREDITADO""))))"

Cells(iniReg, colAcreditacion).FormulaR1C1 = "=RC[2]+RC[4]+RC[6]+RC[8]"

Cells(iniReg, colSaldo).FormulaR1C1 = "=RC[-27]-RC[-9]"

iniReg = iniReg + 1

Loop



    Application.Calculation = xlAutomatic
    
    
End Sub


Attribute VB_Name = "CQ_PRONOSTICO"
Sub CQ_PronosticoActualizado()
Application.ScreenUpdating = False
Application.EnableEvents = False

Call VariablesGlobales

'limpiar
'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select
Range("P4", Range("P4").End(xlDown)).ClearContents
'
Call CQ1_ImportarPronosticoActualizado
Call CQ2_AgregarPronosticoActualizado
Call DeleteQueryImportaciones

Sheets(sh3).Select

Application.ScreenUpdating = True
Application.EnableEvents = True

MsgBox "Pron|fffd|stico actualizados"

End Sub
Sub CQ1_ImportarPronosticoActualizado()
Call VariablesGlobales

'sh3 = "pm_PLANEACION_SERVICIOS"
'sh6 = "Procesar"
'sh19 = "PARAMETROS"
Dim row0, col0 As Long
row0 = 4
col0 = 16

Sheets(sh3).Select
Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)).ClearContents

'importar archivo cierre ayer
Sheets(sh6).Select
Cells.Clear

With ActiveSheet.QueryTables.Add(Connection:= _
        "TEXT;" & UnidadAsignada & Catalogos & ModeloActualizacion & ".csv", _
        Destination:=Range("$A$1"))
        .Name = PronosticoActualizacion
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierNone
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = True
        .TextFileSpaceDelimiter = False
        .TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    
End With
 
End Sub


Sub CQ9_ImportarCashInActualizado(am1_pm2 As Integer)
Call VariablesGlobales

'sh3 = "pm_PLANEACION_SERVICIOS"
'sh6 = "Procesar"
'sh19 = "PARAMETROS"
Dim row0, col0, numRows0, numRows1 As Long
Dim tipoArchivo, carpeta As String
Dim fechaActualizacion As Date
Dim mes, dia, anio, fecha As String
Dim am1_pm2Puntero, am1_pm2Ruta As String


row0 = 4
    
Select Case am1_pm2
Case 1
    am1_pm2Puntero = "AM"
    'columna de cash in del d|fffd|a
    col0 = 12
Case 2
    am1_pm2Puntero = "PM"
    'columna de cash in del d|fffd|a
    col0 = 26
End Select


'Identificar fecha del lunes
Select Case Weekday(fechaOperacion, vbMonday)
Case 1
fechaPuntero = "Lunes"
fechaLunes = fechaOperacion

Case 2
fechaPuntero = "Martes"
fechaLunes = fechaOperacion - 1

Case 3
fechaPuntero = "Miercoles"
fechaLunes = fechaOperacion - 2

Case 4
fechaPuntero = "Jueves"
fechaLunes = fechaOperacion - 3

Case 5
fechaPuntero = "Viernes"
fechaLunes = fechaOperacion - 4

End Select

If am1_pm2Puntero = "PM" Then

    Select Case CASH_IN_CASH_OUT.ComboBoxDiaActual.value
    
        Case "Lunes"
        fechaActualizacion = fechaLunes
        
        Case "Martes"
        fechaActualizacion = fechaLunes + 1
        
        Case "Miercoles"
        fechaActualizacion = fechaLunes + 2
        
        Case "Jueves"
        fechaActualizacion = fechaLunes + 3
        
        Case "Viernes"
        fechaActualizacion = fechaLunes + 4
        
    End Select

    If fechaActualizacion > Date Then
    fechaActualizacion = Date
    End If
    
    If Day(fechaActualizacion) < 10 Then
        dia = "0" & Day(fechaActualizacion)
    Else
        dia = Day(fechaActualizacion)
    End If
    
    If Month(fechaActualizacion) < 10 Then
        mes = "0" & Month(fechaActualizacion)
    Else
        mes = Month(fechaActualizacion)
    End If
    
End If


'''''''''''''''''''''''''''''''''''''''AM''''''''''''''''''''''''''''''''''''''''''''''
If am1_pm2Puntero = "AM" Then

    Select Case FECHA_CASH_IN.mesCashIn.value
    Case "ENERO"
    mes = "01"
    Case "FEBRERO"
    mes = "02"
    Case "MARZO"
    mes = "03"
    Case "ABRIL"
    mes = "04"
    Case "MAYO"
    mes = "05"
    Case "JUNIO"
    mes = "06"
    Case "JULIO"
    mes = "07"
    Case "AGOSTO"
    mes = "08"
    Case "SEPTIEMBRE"
    mes = "09"
    Case "OCTUBRE"
    mes = 10
    Case "NOVIEMBRE"
    mes = 11
    Case "DICIEMBRE"
    mes = 12
    
    
    End Select
    
    'Cash in fecha seleccionada en secci|fffd|n de MONITOREO
    fechaActualizacion = CDate(FECHA_CASH_IN.diaCashIn.value & "/" & mes & "/" & FECHA_CASH_IN.AnioCashIn.value)
    
    'SI LA FECHA SELECCIONADA ES MAYOR AL D|fffd|A ACTUAL
    If fechaActualizacion > Date Then
        fechaActualizacion = Date
    End If
    
    If Day(fechaActualizacion) < 10 Then
        dia = "0" & Day(fechaActualizacion)
    Else
        dia = Day(fechaActualizacion)
    End If
    
End If


'Importar archivo actualizado

    fecha = dia & " " & mes & " " & Year(fechaActualizacion)
        
    carpeta = UnidadAsignada & RutaCashInHistorico & Year(fechaActualizacion)
    
    tipoArchivo = fecha & "*Cash In.txt"
    
    'Limpiar rango de captura
    Sheets(sh3).Select
    numRows0 = Range("A1000000").End(xlUp).Row
    
    Range(Cells(row0, col0), Cells(numRows0, col0)).ClearContents
    
    
    'importar archivo cierre ayer
    Sheets(sh6).Select
    Cells.Clear
    
    ChDrive (UnidadAsignada)
    ChDir (carpeta)
    archi = Dir(fecha & "*" & "Cash In*")
    
    If archi = "" Then
        MsgBox "NO HAY ARCHIVO ARCHIVO ACTUALIZADO DE CASH IN"
        Exit Sub
        
    End If
    
'    MsgBox "fecha = " & fecha & Chr(10) & "archi = " & archi & Chr(10) & "carpeta " & carpeta
'    MsgBox Mid(archi, 1, Len(archi) - 4)
    
    Range("A1").Select
    
        With ActiveSheet.QueryTables.Add(Connection:= _
            "TEXT;" & carpeta & "/" & archi _
            , Destination:=Range("A1"))
            .Name = Mid(archi, 1, Len(archi) - 4)
            .FieldNames = True
            .RowNumbers = False
            .FillAdjacentFormulas = False
            .PreserveFormatting = True
            .RefreshOnFileOpen = False
            .RefreshStyle = xlInsertDeleteCells
            .SavePassword = False
            .SaveData = True
            .AdjustColumnWidth = True
            .RefreshPeriod = 0
            .TextFilePromptOnRefresh = False
            .TextFilePlatform = 1252
            .TextFileStartRow = 1
            .TextFileParseType = xlDelimited
            .TextFileTextQualifier = xlTextQualifierDoubleQuote
            .TextFileConsecutiveDelimiter = False
            .TextFileTabDelimiter = False
            .TextFileSemicolonDelimiter = False
            .TextFileCommaDelimiter = False
            .TextFileSpaceDelimiter = False
            .TextFileOtherDelimiter = "|"
            .TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 1)
            .TextFileTrailingMinusNumbers = True
            .Refresh BackgroundQuery:=False
        End With



    
End Sub


Sub CQ12_ImportarCashOutActualizado(am1_pm2 As Integer, fechaVariable As Date)
'proceso para m|fffd|dulo de PRONOSTICO hoja pm_PLANEACI|fffd|N_SERVICIOS

Call VariablesGlobales

'sh3 = "pm_PLANEACION_SERVICIOS"
'sh6 = "Procesar"
'sh19 = "PARAMETROS"
Dim row0, col0, col1, numRows0, numRows1 As Long
Dim tipoArchivo, carpeta As String
Dim fechaActualizacion As Date
Dim mes, dia, anio, fecha As String
Dim fechaPuntero As String
Dim fechaArchivoCO, fechaLunes As Date
Dim am1_pm2Puntero, am1_pm2Ruta As String

Select Case am1_pm2
Case 1
    am1_pm2Puntero = "Cash Out AM.txt"
    am1_pm2Ruta = "Cash Out AM"
    'columna de cash in del d|fffd|a
    col0 = 13
    col1 = 14
Case 2
    am1_pm2Puntero = "Cash Out PM.txt"
    am1_pm2Ruta = "Cash Out PM"
    'columna de cash in del d|fffd|a
    col0 = 25
    col1 = 25
    
End Select


Select Case Weekday(fechaVariable, vbMonday)
Case 1
fechaPuntero = "Lunes"
fechaLunes = fechaOperacion

Case 2
fechaPuntero = "Martes"
fechaLunes = fechaOperacion - 1

Case 3
fechaPuntero = "Miercoles"
fechaLunes = fechaOperacion - 2

Case 4
fechaPuntero = "Jueves"
fechaLunes = fechaOperacion - 3

Case 5
fechaPuntero = "Viernes"
fechaLunes = fechaOperacion - 4

End Select



'''''''''''''''''''''''''''''''''PM'''''''''''''''''''''''''''''''''''''''''''''
If am1_pm2 = 2 Then

    Select Case CASH_IN_CASH_OUT.ComboBoxDiaActual.value
    
        Case "Lunes"
        fechaArchivoCO = fechaLunes
        
        Case "Martes"
        fechaArchivoCO = fechaLunes + 1
        
        Case "Miercoles"
        fechaArchivoCO = fechaLunes + 2
        
        Case "Jueves"
        fechaArchivoCO = fechaLunes + 3
        
        Case "Viernes"
        fechaArchivoCO = fechaLunes + 4
    
    End Select
    
    fechaActualizacion = fechaArchivoCO
    
    If Day(fechaActualizacion) < 10 Then
        dia = "0" & Day(fechaActualizacion)
    Else
        dia = Day(fechaActualizacion)
    End If
    
    
    If Month(fechaActualizacion) < 10 Then
        mes = "0" & Month(fechaActualizacion)
    Else
        mes = Month(fechaActualizacion)
    End If

End If



'''''''''''''''''''''''''''''''''AM'''''''''''''''''''''''''''''''''''''''''''''
If am1_pm2 = 1 Then

    Select Case FECHA_CASH_OUT.mesCashOut.value
    Case "ENERO"
    mes = "01"
    Case "FEBRERO"
    mes = "02"
    Case "MARZO"
    mes = "03"
    Case "ABRIL"
    mes = "04"
    Case "MAYO"
    mes = "05"
    Case "JUNIO"
    mes = "06"
    Case "JULIO"
    mes = "07"
    Case "AGOSTO"
    mes = "08"
    Case "SEPTIEMBRE"
    mes = "09"
    Case "OCTUBRE"
    mes = 10
    Case "NOVIEMBRE"
    mes = 11
    Case "DICIEMBRE"
    mes = 12
    
    
    End Select
    
    'Cash in fecha seleccionada en secci|fffd|n de MONITOREO
    fechaActualizacion = CDate(FECHA_CASH_OUT.diaCashOut.value & "/" & mes & "/" & FECHA_CASH_OUT.AnioCashOut.value)
    
    'SI LA FECHA SELECCIONADA ES MAYOR AL D|fffd|A ACTUAL
    If fechaActualizacion > Date Then
        fechaActualizacion = Date
    End If
    
    If Day(fechaActualizacion) < 10 Then
        dia = "0" & Day(fechaActualizacion)
    Else
        dia = Day(fechaActualizacion)
    End If
    
End If

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

fecha = dia & " " & mes & " " & Year(fechaActualizacion)

row0 = 4


carpeta = CStr(UnidadAsignada) & RutaHistoricoPronosticoCO & Year(fechaActualizacion) & "\" & am1_pm2Ruta & "\"



'Limpiar rango de captura
Sheets(sh3).Select
numRows0 = Range("A1000000").End(xlUp).Row

Range(Cells(row0, col0), Cells(numRows0, col1)).ClearContents


'importar archivo cierre ayer
Sheets(sh6).Select
Cells.Clear

ChDrive (UnidadAsignada)
ChDir (carpeta)
archi = Dir(fecha & "*" & am1_pm2Puntero)

If archi = "" Then
MsgBox "NO HAY INFORMACI|fffd|N DE ODP-TDD-REMESAS CAPTURADAS"
Exit Sub
End If

'MsgBox "fecha = " & fecha & Chr(10) & "archi = " & archi & Chr(10) & "carpeta " & carpeta
'MsgBox Mid(archi, 1, Len(archi) - 4)

Range("A1").Select

    With ActiveSheet.QueryTables.Add(Connection:= _
        "TEXT;" & carpeta & "/" & archi _
        , Destination:=Range("A1"))
        .Name = Mid(archi, 1, Len(archi) - 4)
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierDoubleQuote
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileOtherDelimiter = "|"
        .TextFileColumnDataTypes = Array(1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 1)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    End With
    
    
End Sub


Sub CQ16_ImportarCashOutActualizado(am1_pm2 As Integer, fechaVariable As Date)
Call VariablesGlobales

'sh3 = "pm_PLANEACION_SERVICIOS"
'sh6 = "Procesar"
'sh19 = "PARAMETROS"
Dim row0, col0, col1, numRows0, numRows1 As Long
Dim tipoArchivo, carpeta As String
Dim fechaActualizacion As Date
Dim mes, dia, anio, fecha As String
Dim fechaPuntero As String
Dim fechaArchivoCO, fechaLunes As Date
Dim am1_pm2Puntero, am1_pm2Ruta As String

Select Case am1_pm2
Case 1
    am1_pm2Puntero = "Cash Out AM.txt"
    am1_pm2Ruta = "Cash Out AM"
    'columna de cash in del d|fffd|a
    col0 = 13
    col1 = 14
Case 2
    am1_pm2Puntero = "Cash Out PM.txt"
    am1_pm2Ruta = "Cash Out PM"
    'columna de cash in del d|fffd|a
    col0 = 25
    col1 = 25
    
End Select


'Select Case Weekday(fechaVariable, vbMonday)
'Case 1
'fechaPuntero = "Lunes"
'fechaLunes = fechaOperacion
'
'Case 2
'fechaPuntero = "Martes"
'fechaLunes = fechaOperacion - 1
'
'Case 3
'fechaPuntero = "Miercoles"
'fechaLunes = fechaOperacion - 2
'
'Case 4
'fechaPuntero = "Jueves"
'fechaLunes = fechaOperacion - 3
'
'Case 5
'fechaPuntero = "Viernes"
'fechaLunes = fechaOperacion - 4
'
'End Select



'''''''''''''''''''''''''''''''''PM'''''''''''''''''''''''''''''''''''''''''''''
'If am1_pm2 = 2 Then
'
'    Select Case CASH_IN_CASH_OUT.ComboBoxDiaActual.value
'
'        Case "Lunes"
'        fechaArchivoCO = fechaLunes
'
'        Case "Martes"
'        fechaArchivoCO = fechaLunes + 1
'
'        Case "Miercoles"
'        fechaArchivoCO = fechaLunes + 2
'
'        Case "Jueves"
'        fechaArchivoCO = fechaLunes + 3
'
'        Case "Viernes"
'        fechaArchivoCO = fechaLunes + 4
'
'    End Select
    
    fechaActualizacion = fechaVariable
    
    If Day(fechaActualizacion) < 10 Then
        dia = "0" & Day(fechaActualizacion)
    Else
        dia = Day(fechaActualizacion)
    End If
    
    
    If Month(fechaActualizacion) < 10 Then
        mes = "0" & Month(fechaActualizacion)
    Else
        mes = Month(fechaActualizacion)
    End If

'End If



'''''''''''''''''''''''''''''''''AM'''''''''''''''''''''''''''''''''''''''''''''
'If am1_pm2 = 1 Then
'
'    Select Case Month(fechaActualizacion)
'    Case "ENERO"
'    mes = "01"
'    Case "FEBRERO"
'    mes = "02"
'    Case "MARZO"
'    mes = "03"
'    Case "ABRIL"
'    mes = "04"
'    Case "MAYO"
'    mes = "05"
'    Case "JUNIO"
'    mes = "06"
'    Case "JULIO"
'    mes = "07"
'    Case "AGOSTO"
'    mes = "08"
'    Case "SEPTIEMBRE"
'    mes = "09"
'    Case "OCTUBRE"
'    mes = 10
'    Case "NOVIEMBRE"
'    mes = 11
'    Case "DICIEMBRE"
'    mes = 12
'
'
'    End Select
    
    'Cash in fecha seleccionada en secci|fffd|n de MONITOREO
    fechaActualizacion = CDate(fechaVariable)
    
    'SI LA FECHA SELECCIONADA ES MAYOR AL D|fffd|A ACTUAL
    If fechaActualizacion > Date Then
        fechaActualizacion = Date
    End If
    
    If Day(fechaActualizacion) < 10 Then
        dia = "0" & Day(fechaActualizacion)
    Else
        dia = Day(fechaActualizacion)
    End If
    
    If Month(fechaActualizacion) < 10 Then
        mes = "0" & Month(fechaActualizacion)
    Else
        mes = Month(fechaActualizacion)
    End If
    
'
'End If

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

fecha = dia & " " & mes & " " & Year(fechaActualizacion)

row0 = 4


carpeta = CStr(UnidadAsignada) & RutaHistoricoPronosticoCO & Year(fechaActualizacion) & "\" & am1_pm2Ruta & "\"



'Limpiar rango de captura
Sheets(sh3).Select
numRows0 = Range("A1000000").End(xlUp).Row

Range(Cells(row0, col0), Cells(numRows0, col1)).ClearContents


'importar archivo cierre ayer
Sheets(sh6).Select
Cells.Clear

ChDrive (UnidadAsignada)
ChDir (carpeta)
archi = Dir(fecha & "*" & am1_pm2Puntero)

If archi = "" Then
MsgBox "NO HAY INFORMACI|fffd|N DE ODP-TDD-REMESAS CAPTURADAS"
Exit Sub
End If

'MsgBox "fecha = " & fecha & Chr(10) & "archi = " & archi & Chr(10) & "carpeta " & carpeta
'MsgBox Mid(archi, 1, Len(archi) - 4)

Range("A1").Select

    With ActiveSheet.QueryTables.Add(Connection:= _
        "TEXT;" & carpeta & "/" & archi _
        , Destination:=Range("A1"))
        .Name = Mid(archi, 1, Len(archi) - 4)
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierDoubleQuote
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileOtherDelimiter = "|"
        .TextFileColumnDataTypes = Array(1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 1)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    End With
    
    
End Sub

Sub AA_LANZADOR()

Call CQ14_ImportarModeloActualizadoDiario(1)

End Sub


Sub CQ14_ImportarModeloActualizadoDiario(am1_pm2 As Integer)
Call VariablesGlobales

'sh3 = "pm_PLANEACION_SERVICIOS"
'sh6 = "Procesar"
'sh19 = "PARAMETROS"
Dim row0, col0, col1, numRows0, numRows1 As Long
Dim tipoArchivo, carpeta As String
Dim fechaActualizacion As Date
Dim mes, dia, anio, fecha As String
Dim fechaPuntero As String
Dim fechaArchivoCO, fechaLunes As Date
Dim am1_pm2Puntero, am1_pm2Ruta As String

Select Case am1_pm2
Case 1
    am1_pm2Puntero = "Modelo Pronostico am.txt"
    am1_pm2Ruta = "ActualizacionDia t am"
    'columna de cash in del d|fffd|a
    col0 = 16
    col1 = 16
Case 2
    am1_pm2Puntero = "Modelo Pronostico pm.txt"
    am1_pm2Ruta = "ActualizacionDia t-1 pm"
    'columna de cash in del d|fffd|a
'    col0 = 25
'    col1 = 25
    
End Select


Select Case Weekday(fechaOperacion, vbMonday)
Case 1
fechaPuntero = "Lunes"
fechaLunes = fechaOperacion

Case 2
fechaPuntero = "Martes"
fechaLunes = fechaOperacion - 1

Case 3
fechaPuntero = "Miercoles"
fechaLunes = fechaOperacion - 2

Case 4
fechaPuntero = "Jueves"
fechaLunes = fechaOperacion - 3

Case 5
fechaPuntero = "Viernes"
fechaLunes = fechaOperacion - 4

End Select



'''''''''''''''''''''''''''''''''PM'''''''''''''''''''''''''''''''''''''''''''''
If am1_pm2 = 2 Then

MsgBox "NO HAY INTSRUCCI|fffd|N PARA MODELO PRON|fffd|STICO ACTUALIZADO PM"
'    Select Case CASH_IN_CASH_OUT.ComboBoxDiaActual.value
'
'        Case "Lunes"
'        fechaArchivoCO = fechaLunes
'
'        Case "Martes"
'        fechaArchivoCO = fechaLunes + 1
'
'        Case "Miercoles"
'        fechaArchivoCO = fechaLunes + 2
'
'        Case "Jueves"
'        fechaArchivoCO = fechaLunes + 3
'
'        Case "Viernes"
'        fechaArchivoCO = fechaLunes + 4
'
'    End Select
'
'    fechaActualizacion = fechaArchivoCO
'
'    If Day(fechaActualizacion) < 10 Then
'        dia = "0" & Day(fechaActualizacion)
'    Else
'        dia = Day(fechaActualizacion)
'    End If
'
'
'    If Month(fechaActualizacion) < 10 Then
'        mes = "0" & Month(fechaActualizacion)
'    Else
'        mes = Month(fechaActualizacion)
'    End If

End If



'''''''''''''''''''''''''''''''''AM'''''''''''''''''''''''''''''''''''''''''''''
If am1_pm2 = 1 Then

    Select Case FECHA_CASH_OUT.mesCashOut.value
    Case "ENERO"
    mes = "01"
    Case "FEBRERO"
    mes = "02"
    Case "MARZO"
    mes = "03"
    Case "ABRIL"
    mes = "04"
    Case "MAYO"
    mes = "05"
    Case "JUNIO"
    mes = "06"
    Case "JULIO"
    mes = "07"
    Case "AGOSTO"
    mes = "08"
    Case "SEPTIEMBRE"
    mes = "09"
    Case "OCTUBRE"
    mes = 10
    Case "NOVIEMBRE"
    mes = 11
    Case "DICIEMBRE"
    mes = 12
    
    
    End Select
    
    'Cash in fecha seleccionada en secci|fffd|n de MONITOREO
    fechaActualizacion = CDate(FECHA_CASH_OUT.diaCashOut.value & "/" & mes & "/" & FECHA_CASH_OUT.AnioCashOut.value)
    
    'SI LA FECHA SELECCIONADA ES MAYOR AL D|fffd|A ACTUAL
    If fechaActualizacion > Date Then
        fechaActualizacion = Date
    End If
    
    If Day(fechaActualizacion) < 10 Then
        dia = "0" & Day(fechaActualizacion)
    Else
        dia = Day(fechaActualizacion)
    End If
    
End If

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

fecha = dia & " " & mes & " " & Year(fechaActualizacion)

'fila de inicio de captura en hoja sh3 = "pm_PLANEACION_SERVICIOS"
row0 = 4


carpeta = CStr(UnidadAsignada) & RutaPronosticoHistorico & Year(fechaActualizacion) & "\" & am1_pm2Ruta & "\"


'MsgBox carpeta & fecha

'Limpiar rango de captura sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select
numRows0 = Range("A1000000").End(xlUp).Row

Range(Cells(row0, col0), Cells(numRows0, col1)).ClearContents


'importar archivo cierre ayer
Sheets(sh6).Select
Cells.Clear

ChDrive (UnidadAsignada)
ChDir (carpeta)
archi = Dir(fecha & "*" & am1_pm2Puntero)

If archi = "" Then
MsgBox "NO HAY INFORMACI|fffd|N DEL MODELO DE PRON|fffd|STICO ACTUALIZADO EN ESA FECHA"
Exit Sub
End If

'MsgBox "fecha = " & fecha & Chr(10) & "archi = " & archi & Chr(10) & "carpeta " & carpeta
'MsgBox Mid(archi, 1, Len(archi) - 4)

Range("A1").Select

    With ActiveSheet.QueryTables.Add(Connection:= _
        "TEXT;" & carpeta & "/" & archi _
        , Destination:=Range("A1"))
        .Name = Mid(archi, 1, Len(archi) - 4)
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierDoubleQuote
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileOtherDelimiter = "|"
        .TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
                                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
                                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
                                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
                                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
                                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
                                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
                                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
                                        1, 1, 1, 1, 1, 1, 1, 4, 4, 1)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    End With
    
    
End Sub


Sub CQ15_AgregarCOModeloDiarioMonitoreoAm(fecha As Variant)
'fecha As Variant
'agregar las cifras de cash in a las sucursales del d|fffd|a especificado

Call VariablesGlobales

Dim punteroIdSuc, punteroDia1, punteroCO, punteroIdSucHoja, punteroCIHoja, _
    row0, col0, row0Hoja, rowCIHoja0 _
    , colMovil, colMovil01 As Integer
Dim numRows, numRowsHoja As Long
Dim fechaConsulta As Date
Dim CASHOUT() As Variant
Dim numDias As Integer
Dim rangoMatriz, rangoAgregar As Range
Dim valorBusqueda As Variant

'fecha = Date
'imprimir en col 16

row0 = 0
col0 = 1
punteroCO = 31
punteroIdSuc = 1

punteroCOHoja = 16
rowCOHoja0 = 4
punteroIdSucHoja = 4


colMovil = 16


Select Case Weekday(CDate(fecha), vbMonday)
Case 1
colMovil = 24
Case 2
colMovil = 25
Case 3
colMovil = 26
Case 4
colMovil = 27
Case 5
colMovil = 28

End Select


'sh6 = "Procesar"
Sheets(sh6).Select
numRows = Range("a1000000").End(xlUp).Row

Set rangoMatriz = Range(Cells(1, 1), Cells(numRows, punteroCO))

'MsgBox fecha
'rangoMatriz.Select

'''''''''''''''''''''''''''''''AGREGAR INFORMACI|fffd|N''''''''''''''''''''''''''''''''''''''''''

'insertar en sh3 = "pm_PLANEACION_SERVICIOS" - TOTAL

Sheets(sh3).Select

numRowsHoja = Range("A1000000").End(xlUp).Row

Set rangoAgregar = Range(Cells(rowCOHoja0, punteroIdSucHoja), Cells(numRowsHoja, punteroIdSucHoja))

'limpiar rango de captura
Range(Cells(rowCOHoja0, punteroCOHoja), Cells(numRowsHoja, punteroCOHoja)).ClearContents

Application.Calculation = xlManual

For Each cell In rangoAgregar

    valorBusqueda = Application.VLookup(cell, rangoMatriz, colMovil, False)
    'MsgBox cell.value & vbNewLine & valorBusqueda
        If IsError(valorBusqueda) Then
            'CI-CO MODELO PRON|fffd|STICO
            cell.Offset(0, 12) = 0
            'FORMULA CI-ODP-TDD-REMESAS
            cell.Offset(0, 11) = 0
            'F|fffd|RMULA DIFERENCIA ENTRE CICOs
            cell.Offset(0, 13) = 0
        Else
            cell.Offset(0, 12) = valorBusqueda
        End If
    
    
Next cell

Application.Calculation = xlAutomatic

Cells(4, punteroCOHoja).Select

End Sub



Sub CQ10_AgregarCashIn(fechaOperacion As Date)
'agregar las cifras de cash in a las sucursales del d|fffd|a especificado

Call VariablesGlobales

Dim punteroIdSuc, punteroDia1, punteroLunes, punteroIdSucHoja, punteroCIHoja, row0, col0, row0Hoja, rowCIHoja0 As Integer
Dim numRows, numRowsHoja As Long
Dim fechaConsulta As Date
Dim CASHIN() As Variant
row0 = 0
col0 = 1
punteroLunes = 2
punteroIdSuc = 1

punteroCIHoja = 12
rowCIHoja0 = 4
punteroIdSucHoja = 4


fechaConsulta = fechaOperacion

'''''''''''''''''''''''Arreglo cash in''''''''''''''''''''''''
'sh6 = "Procesar"
Sheets(sh6).Select
numRows = Range("a1000000").End(xlUp).Row

ReDim CASHIN(numRows, 8)

For i = 1 To UBound(CASHIN)
    'id sucursal
    CASHIN(i, 1) = Cells(row0 + i, punteroIdSuc)
    'cash in lunes
    CASHIN(i, 2) = Cells(row0 + i, punteroLunes)
    'cash in lunes
    CASHIN(i, 3) = Cells(row0 + i, punteroLunes + 1)
    'cash in lunes
    CASHIN(i, 4) = Cells(row0 + i, punteroLunes + 2)
    'cash in lunes
    CASHIN(i, 5) = Cells(row0 + i, punteroLunes + 3)
    'cash in lunes
    CASHIN(i, 6) = Cells(row0 + i, punteroLunes + 4)
    'cash in lunes
    CASHIN(i, 7) = Cells(row0 + i, punteroLunes + 5)
    'cash in lunes
    CASHIN(i, 8) = Cells(row0 + i, punteroLunes + 6)
      
Next i


'''''''''''''''''''''''''''''''AGREGAR INFORMACI|fffd|N''''''''''''''''''''''''''''''''''''''''''

'insertar en sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select

numRowsHoja = Range("A1000000").End(xlUp).Row

'limpiar rango de captura
Range(Cells(rowCIHoja0, punteroCIHoja), Cells(numRowsHoja, punteroCIHoja)).ClearContents


'columna del arreglo con el primer d|fffd|a
Select Case Weekday(fechaConsulta, vbMonday)
Case 1
punteroDia1 = 2
Case 2
punteroDia1 = 3
Case 3
punteroDia1 = 4
Case 4
punteroDia1 = 5
Case 5
punteroDia1 = 6
Case 6
punteroDia1 = 7
Case 7
punteroDia1 = 8
End Select

row0Hoja = 4
Application.Calculation = xlManual

Do While Cells(rowCIHoja0, 1) <> ""

    For i = 1 To UBound(CASHIN)
        
        If Cells(rowCIHoja0, punteroIdSucHoja) = CASHIN(i, 1) Then
            'CASH IN columna L
            Cells(rowCIHoja0, punteroCIHoja) = CASHIN(i, punteroDia1)
            'CASH IN - CASH OUT ESPERADO - columna O
            Cells(rowCIHoja0, punteroCIHoja + 3).FormulaR1C1 = "=RC[-3]-RC[-2]-RC[-1]"
            'Variaci|fffd|n CI CO Pron|fffd|stico vs CICO Esperado - columna Q
            Cells(rowCIHoja0, punteroCIHoja + 5).FormulaR1C1 = _
                "=IF(RC[-1]<RC[-2],(ABS(RC[-2])-ABS(RC[-1]))*-1,IF(RC[-2]>RC[-1],(ABS(RC[-2])-ABS(RC[-1])),0))"
        
            Exit For
        End If
        
    Next i

rowCIHoja0 = rowCIHoja0 + 1

Loop

Application.Calculation = xlAutomatic
Cells(4, punteroCIHoja).Select

End Sub



Sub CQ11_AgregarCashInModeloPronostico()

'agregar las cifras de cash in a las sucursales del d|fffd|a especificado

Call VariablesGlobales

Dim punteroIdSuc, punteroDia1, punteroLunes, punteroIdSucHoja, punteroColCons, punteroCIHoja, _
    row0, col0, row0Hoja, rowCIHoja0 As Integer
Dim numRows, numRowsHoja As Long
Dim fechaConsulta, fechaActualizar As Date
Dim CASHIN() As Variant
Dim numDias As Integer
Dim finSem As Boolean

row0 = 0
col0 = 1
punteroLunes = 2
punteroIdSuc = 1

punteroCIHoja = 26
rowCIHoja0 = 4
punteroIdSucHoja = 4

'Identificar fecha posterior al d|fffd|a de planeaci|fffd|n
Select Case Weekday(fechaOperacion, vbMonday)
Case 1
fechaPuntero = "Lunes"
fechaLunes = fechaOperacion

Case 2
fechaPuntero = "Martes"
fechaLunes = fechaOperacion - 1

Case 3
fechaPuntero = "Miercoles"
fechaLunes = fechaOperacion - 2

Case 4
fechaPuntero = "Jueves"
fechaLunes = fechaOperacion - 3

Case 5
fechaPuntero = "Viernes"
fechaLunes = fechaOperacion - 4

End Select


Select Case CASH_IN_CASH_OUT.ComboBoxDiaActual.value

    Case "Lunes"
    fechaActualizacion = fechaLunes
    punteroColCons = punteroLunes + 1
    finSem = False
    
    Case "Martes"
    fechaActualizacion = fechaLunes + 1
    punteroColCons = punteroLunes + 2
    finSem = False
    
    Case "Miercoles"
    fechaActualizacion = fechaLunes + 2
    punteroColCons = punteroLunes + 3
    finSem = False
    
    Case "Jueves"
    fechaActualizacion = fechaLunes + 3
    punteroColCons = punteroLunes + 4
    finSem = False
    
    Case "Viernes"
    fechaActualizacion = fechaLunes + 4
    punteroColCons = punteroLunes + 5
    finSem = True
    
End Select



'''''''''''''''''''''''Arreglo cash in''''''''''''''''''''''''
'sh6 = "Procesar"
Sheets(sh6).Select
numRows = Range("a1000000").End(xlUp).Row

ReDim CASHIN(numRows, 12)

For i = 1 To UBound(CASHIN)
    'id sucursal
    CASHIN(i, 1) = Cells(row0 + i, punteroIdSuc)
    'cash in lunes
    CASHIN(i, 2) = Cells(row0 + i, punteroLunes)
    'cash in martes
    CASHIN(i, 3) = Cells(row0 + i, punteroLunes + 1)
    'cash in miercoles
    CASHIN(i, 4) = Cells(row0 + i, punteroLunes + 2)
    'cash in jueves
    CASHIN(i, 5) = Cells(row0 + i, punteroLunes + 3)
    'cash in viernes
    CASHIN(i, 6) = Cells(row0 + i, punteroLunes + 4)
    'cash in sabado
    CASHIN(i, 7) = Cells(row0 + i, punteroLunes + 5)
    'cash in domingo
    CASHIN(i, 8) = Cells(row0 + i, punteroLunes + 6)
    'cash in pr|fffd|ximo lunes
    CASHIN(i, 9) = Cells(row0 + i, punteroLunes + 7)
    'cash in pr|fffd|ximo martes
    CASHIN(i, 10) = Cells(row0 + i, punteroLunes + 8)
    'cash in pr|fffd|ximo mi|fffd|rcoles
    CASHIN(i, 11) = Cells(row0 + i, punteroLunes + 9)
      
Next i


'''''''''''''''''''''''''''''''AGREGAR INFORMACI|fffd|N''''''''''''''''''''''''''''''''''''''''''

'insertar en sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select

numRowsHoja = Range("A1000000").End(xlUp).Row

'limpiar rango de captura

Range(Cells(rowCIHoja0, punteroCIHoja), Cells(numRowsHoja, punteroCIHoja)).ClearContents

'punteroDia1 = Int(diaActual)
'numDias = Int(dias)

row0Hoja = 4

Application.Calculation = xlManual

Do While Cells(rowCIHoja0, 1) <> ""

    For i = 1 To UBound(CASHIN)
        
        If Cells(rowCIHoja0, punteroIdSucHoja) = CASHIN(i, 1) Then
            
            If finSem = False Then
            
                Cells(rowCIHoja0, punteroCIHoja) = CASHIN(i, punteroColCons)
                'CI - CO
                Cells(rowCIHoja0, punteroCIHoja + 1).FormulaR1C1 = "=RC[-1]-RC[-2]"
            
            ElseIf finSem = True Then
            
                Cells(rowCIHoja0, punteroCIHoja) = CASHIN(i, punteroColCons) + CASHIN(i, punteroColCons + 1) + CASHIN(i, 2)
                'CI - CO
                Cells(rowCIHoja0, punteroCIHoja + 1).FormulaR1C1 = "=RC[-1]-RC[-2]"
                
            End If
            
            
'            'numero de d|fffd|as para sumar - dias
'            If numDias = 1 Then
'            Cells(rowCIHoja0, punteroCIHoja) = CASHIN(i, punteroDia1 + 1)
'            'FORMULA CI - ODP & TDD CAPTURADA
'            Cells(rowCIHoja0, punteroCIHoja + 1).FormulaR1C1 = "=RC[-1]-RC[-2]"
'
'            ElseIf numDias = 2 Then
'            Cells(rowCIHoja0, punteroCIHoja) = CASHIN(i, punteroDia1 + 1) + CASHIN(i, punteroDia1 + 2)
'            'FORMULA CI - ODP & TDD CAPTURADA
'            Cells(rowCIHoja0, punteroCIHoja + 1).FormulaR1C1 = "=RC[-1]-RC[-2]"
'
'            ElseIf numDias = 3 Then
'            Cells(rowCIHoja0, punteroCIHoja) = CASHIN(i, punteroDia1 + 1) + CASHIN(i, punteroDia1 + 2) + CASHIN(i, punteroDia1 + 3)
'            'FORMULA CI - ODP & TDD CAPTURADA
'            Cells(rowCIHoja0, punteroCIHoja + 1).FormulaR1C1 = "=RC[-1]-RC[-2]"
'
'            ElseIf numDias = 4 Then
'            Cells(rowCIHoja0, punteroCIHoja) = CASHIN(i, punteroDia1 + 1) + CASHIN(i, punteroDia1 + 2) + CASHIN(i, punteroDia1 + 3) + CASHIN(i, punteroDia1 + 4)
'            'FORMULA CI - ODP & TDD CAPTURADA
'            Cells(rowCIHoja0, punteroCIHoja + 1).FormulaR1C1 = "=RC[-1]-RC[-2]"
'
'            ElseIf numDias = 5 Then
'            Cells(rowCIHoja0, punteroCIHoja) = CASHIN(i, punteroDia1 + 1) + CASHIN(i, punteroDia1 + 2) + CASHIN(i, punteroDia1 + 3) + CASHIN(i, punteroDia1 + 4) + CASHIN(i, punteroDia1 + 5)
'            'FORMULA CI - ODP & TDD CAPTURADA
'            Cells(rowCIHoja0, punteroCIHoja + 1).FormulaR1C1 = "=RC[-1]-RC[-2]"
'
'            End If
            
            Exit For
        
        
        
        
        End If
        
    Next i

rowCIHoja0 = rowCIHoja0 + 1

Loop

Application.Calculation = xlAutomatic

Cells(4, punteroCIHoja).Select

End Sub



Sub CQ13_AgregarCashOutModeloPronostico(am_1_pm_2 As Integer)

'agregar las cifras de cash in a las sucursales del d|fffd|a especificado

Call VariablesGlobales

Dim punteroIdSuc, punteroDia1, punteroOdp, punteroIdSucHoja, punteroCIHoja, _
    row0, col0, row0Hoja, rowCIHoja0 _
    , colMovil As Integer
Dim numRows, numRowsHoja As Long
Dim fechaConsulta As Date
Dim CASHOUT() As Variant
Dim numDias As Integer
Dim rangoMatriz, rangoAgregar As Range
Dim valorBusqueda As Variant

row0 = 0
col0 = 1
punteroOdp = 3
punteroIdSuc = 1

punteroCOHoja = 25
rowCOHoja0 = 4
punteroIdSucHoja = 4

Select Case am_1_pm_2
Case 1
colMovil = 9

Case 2
colMovil = 21

End Select


'''''''''''''''''''''''Arreglo CASH OUT''''''''''''''''''''''''
'sh6 = "Procesar"
Sheets(sh6).Select
numRows = Range("a1000000").End(xlUp).Row

Set rangoMatriz = Range(Cells(1, 1), Cells(numRows, punteroOdp + 4))

''arreglo de CASH OUT
'ReDim CASHOUT(numRows, 6)
'
'For i = 1 To UBound(CASHOUT)
'    'id sucursal
'    CASHOUT(i, 1) = Cells(row0 + i, punteroIdSuc)
'    'ODP
'    CASHOUT(i, 2) = Cells(row0 + i, punteroOdp)
'    'TDD
'    CASHOUT(i, 3) = Cells(row0 + i, punteroOdp + 1)
'    'ODP + TDD
'    CASHOUT(i, 4) = Cells(row0 + i, punteroOdp + 2)
'    'REMESAS
'    CASHOUT(i, 5) = Cells(row0 + i, punteroOdp + 3)
'    'TOTAL
'    CASHOUT(i, 6) = Cells(row0 + i, punteroOdp + 4)
'
'
'Next i


'''''''''''''''''''''''''''''''AGREGAR INFORMACI|fffd|N''''''''''''''''''''''''''''''''''''''''''

'insertar en sh3 = "pm_PLANEACION_SERVICIOS" - TOTAL

Sheets(sh3).Select

numRowsHoja = Range("A1000000").End(xlUp).Row

Set rangoAgregar = Range(Cells(rowCOHoja0, punteroIdSucHoja), Cells(numRowsHoja, punteroIdSucHoja))

'limpiar rango de captura
Range(Cells(rowCOHoja0, punteroCOHoja), Cells(numRowsHoja, punteroCOHoja)).ClearContents

'punteroDia1 = Int(diaActual)
'numDias = Int(dias)
'
'row0Hoja = 4
'
Application.Calculation = xlManual
For Each cell In rangoAgregar

    valorBusqueda = Application.VLookup(cell, rangoMatriz, 7, False)
    
    If am_1_pm_2 = 1 Then
    
        If IsError(valorBusqueda) Then
            cell.Offset(0, colMovil) = 0
        Else
            'ODP-TDD
            cell.Offset(0, colMovil) = Application.VLookup(cell, rangoMatriz, 5, False)
            'REMESAS
            cell.Offset(0, colMovil + 1) = Application.VLookup(cell, rangoMatriz, 6, False)
            'SALDO CONSUMIDO
            cell.Offset(0, colMovil + 7).FormulaR1C1 = _
        "=IF(AND(RC[-12]="""",OR(RC[-1]>0,RC[-1]<>"""")),0,IF(AND(RC[-12]="""",OR(RC[-1]=0,RC[-1]="""")),RC[-12],IF(AND(RC[-12]<RC[-14],OR(RC[-1]>0,RC[-1]<>"""")),RC[-12]-RC[-14]-RC[-1],IF(AND(RC[-12]<RC[-14],OR(RC[-1]=0,RC[-1]="""")),RC[-12]-RC[-14],IF(AND(RC[-12]>RC[-14],OR(RC[-1]=0,RC[-1]="""")),0,IF(AND(RC[-12]>RC[-14],OR(RC[-1]>0,RC[-1]<>"""")),RC[-12]-RC[-14]-RC[-1],RC" & _
        "[-12]-RC[-14]))))))" & _
        ""
            'PENDIENTE POR DISPERSAR
            cell.Offset(0, colMovil + 8).FormulaR1C1 = _
        "=IF(AND(RC[-6]<RC[-5],RC[-6]<0,RC[-1]>RC[-6]),RC[-6]-RC[-1],IF(AND(RC[-5]<RC[-6],RC[-5]<0,RC[-1]>RC[-5]),RC[-5]-RC[-1],0))"

            'Estatus Comportamiento
            cell.Offset(0, colMovil + 9).FormulaR1C1 = _
        "=IF(AND(RC[-1]=0,RC[-4]=0,RC[-14]>RC[-16]),""RECAUDANDO ""&TEXT(RC[-14]-RC[-16],""$ ###,##0.00""),IF(RC[-1]=0,"""",IF(AND(RC[-1]<RC[-14],(RC[-1]+RC[-14])<0),""FALTA EL  "" &TEXT((RC[-14]+RC[-1])/RC[-1],""% ##0.00"") & ""  POR DISPERSAR"",IF(AND(RC[-14]>RC[-16],RC[-4]>0,RC[-3]=0),""DOTACI|fffd|N NO CONFIRMADA"",""""))))"

        End If
    
    ElseIf am_1_pm_2 = 2 Then
    
        If IsError(valorBusqueda) Then
            cell.Offset(0, colMovil) = 0
        Else
            cell.Offset(0, colMovil) = valorBusqueda
        End If
    
    End If
    
Next cell


Application.Calculation = xlAutomatic

Cells(4, punteroCOHoja).Select

End Sub



Sub CQ2_AgregarPronosticoActualizado()
Call VariablesGlobales

Sheets(sh6).Select

Dim lookupvalue, value As Variant
Dim NombreRango As String
Dim celda, lookupRange, rango As Range
Dim col0, col1, TotalSuc As Integer
Dim row0, lRowsh6 As Long
Dim FechaPronostico As Date
Dim fechaPronosticoLabel As String
'N|fffd|mero de columna D PLANEACION
col0 = 4
row0 = 4
FechaPronostico = Range("k3")
fechaPronosticoLabel = Day(FechaPronostico) & " " & NombresMesesCorto(Month(FechaPronostico)) & _
                    " " & Format(FechaPronostico, "hh:mm am/pm")

'MsgBox Row0

'numero de plazas registradas previamente
Sheets(sh3).Select
If Cells(row0, col0) = "" And Cells(row0 + 1, col0) = "" Then
TotalPlazas = 0
Else
TotalPlazas = Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)).Count
End If

'NuevaColumnaCajas = Col0 + TotalPlazas

'celda = Sheets(sh3).Range(Cells(Row0, Col0), Cells(2, Col0 - 8)).value 'celda con el valor que buscamos
Sheets(sh6).Select

If Cells(2, 1) = "" And Cells(3, 1) = "" Then
lRowsh6 = 2
Else
lRowsh6 = Range(Cells(2, 1), Cells(2, 1).End(xlDown)).Count + 1
End If

Set lookupRange = Range(Cells(2, 1), Cells(lRowsh6, 11)) 'rango donde buscar



Sheets(sh3).Select


Set rango = Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)) 'rango donde buscar

rango.Select

'SALDOS AL CORTE
For Each cell In rango
''Queremos la columna 3

lookupvalue = Application.VLookup(cell, lookupRange, 9, False)

'Si no encuentra valor finaliza
    If IsError(lookupvalue) Then
        Sheets(sh3).Select
        cell.Offset(0, 12) = 0
    Else
        Sheets(sh3).Select
        cell.Offset(0, 12) = lookupvalue
        
    End If

Next cell



Range("P3") = "Requerimiento Dotaci|fffd|n (Pron|fffd|stico)" & Chr(10) & fechaPronosticoLabel

End Sub

Sub CQ3_1ImportarModeloSemanalPronosticoDiario()
Call VariablesGlobales

'sh3 = "pm_PLANEACION_SERVICIOS"
'sh26 = "OrdenDotacion"
'ModeloActualizacion
Dim row0, col0 As Long
row0 = 4
col0 = 16
'limpiar hojas
Sheets(sh26).Select
Cells.ClearContents

'importar archivo cierre ayer

With ActiveSheet.QueryTables.Add(Connection:= _
        "TEXT;" & UnidadAsignada & Catalogos & ModeloActualizacion & ".csv", _
        Destination:=Range("$A$1"))
        .Name = ModeloActualizacion
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierNone
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = True
        .TextFileSpaceDelimiter = False
        .TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
                                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
                                         1, 1, 1, 1, 1, 1, 4, 1, 1, 1)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    
End With
 
End Sub
Sub CQ3_OrdenDotacionDia()

Application.ScreenUpdating = False
Application.ScreenUpdating = False

'importar cifras de modelo actualizado
Call CQ3_1ImportarModeloSemanalPronosticoDiario

Call VariablesGlobales
'sh1 = "pm_PLANEACION_CAJAS"
'sh26 = "OrdenDotacion"
'dia seleccionado
Dim diaSel, diasSumar, dia1 As Integer
Dim CiCo() As Variant
Dim OrdenDotacion() As Variant
Dim ColOrdenesDot As Long

ColOrdenesDot = 153

'parametros del d|fffd|a y numero de d|fffd|as a calcular
Sheets(sh1).Select
'diasSumar = Val(Range("EU1").value)
'diaSel = Val(Range("EU2").value)
diasSumar = Val(PLANEACION_CAJAS.ComboBoxDias.value)

Select Case PLANEACION_CAJAS.ComboBoxDiaActual.value
Case "LUNES"
diaSel = 1
Case "MARTES"
diaSel = 2
Case "MIERCOLES"
diaSel = 3
Case "JUEVES"
diaSel = 4
Case "VIERNES"
diaSel = 5
Case Else
diaSel = 5
End Select

Select Case diaSel
    Case 1
        dia1 = 3
    Case 2
        dia1 = 4
    Case 3
        dia1 = 5
    Case 4
        dia1 = 6
    Case 5
        dia1 = 7

End Select

'MsgBox "PLANEACION_CAJAS.ComboBoxDiaActual.value " & PLANEACION_CAJAS.ComboBoxDiaActual.value & Chr(10) & "diaSel " & diaSel & Chr(10) & "dia1 " & dia1

Dim row0, col0, ColCashInOut0, ColOrdenDot0 As Integer
Dim totReg, largo, ancho As Long
Dim punteroIdPlaza, punteroEtv As Integer
Dim rango As Range
Dim Plazas As Collection
Set Plazas = New Collection
Dim etv As Collection
Set etv = New Collection
Dim NombrePlazas As Collection
Set NombrePlazas = New Collection

row0 = 2
col0 = 1
ColCashInOut0 = 7
'columna donde insertar
'ColOrdenDot0 = 28
ColOrdenDot0 = 17
punteroIdPlaza = 2
punteroEtv = 3


'sh26 = "OrdenDotacion"

Sheets(sh26).Select
totReg = Range(Cells(row0 - 1, col0), Cells(row0 - 1, col0).End(xlDown)).Count

If totReg > 1000000 Then
totReg = 1
Else
totReg = Range(Cells(row0 - 1, col0), Cells(row0 - 1, col0).End(xlDown)).Count
End If

'''''''''''PLAZAS''''''''''''''''
Set rango = Range(Cells(row0, col0 + 2), Cells(totReg, col0 + 2))
For Each cell In rango
On Error Resume Next
Plazas.Add cell.value, CStr(cell.value)
On Error GoTo 0
Next cell


'''''''''''ETV''''''''''''''''
Set rango = Range(Cells(row0, col0 + 3), Cells(totReg, col0 + 3))
For Each cell In rango
On Error Resume Next
etv.Add cell.value, CStr(cell.value)
On Error GoTo 0
Next cell

'For i = 1 To Plazas.Count
'MsgBox "PLAZAS " & Plazas(i)
'
'Next i
'
'For i = 1 To Etv.Count
'MsgBox "ETV " & Etv(i)
'
'Next i


'''''''''''CASH IN - CASH OUT / ORDENES DE DOTACI|fffd|N '''''''''''''''''''''''
largo = Plazas.Count * etv.Count
ancho = etv.Count
contador = 1

ReDim CiCo(largo, 12)
ReDim OrdenDotacion(largo, 12)

    For i = 1 To etv.Count

            For j = 1 To Plazas.Count
                '1 ID PLAZA
                CiCo(contador, 1) = Plazas(j)
                OrdenDotacion(contador, 1) = Plazas(j)
            
                '2 ETV
                CiCo(contador, 2) = etv(i)
                OrdenDotacion(contador, 2) = etv(i)
                
                contador = contador + 1
            Next j
    Next i




'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
row0 = 2

Do While Cells(row0, col0) <> ""

    For i = 1 To UBound(CiCo)
    
        If Cells(row0, col0 + 2) = CiCo(i, 1) And Cells(row0, col0 + 3) = CiCo(i, 2) Then
            '3 DEMANDA LUNES
            CiCo(i, 3) = CiCo(i, 3) + Cells(row0, ColCashInOut0)
            OrdenDotacion(i, 3) = OrdenDotacion(i, 3) + Cells(row0, ColOrdenDot0)
            '4  DEMANDA MARTES
            CiCo(i, 4) = CiCo(i, 4) + Cells(row0, ColCashInOut0 + 1)
            OrdenDotacion(i, 4) = OrdenDotacion(i, 4) + Cells(row0, ColOrdenDot0 + 1)
            '5 DEMANDA MIERCOLES
            CiCo(i, 5) = CiCo(i, 5) + Cells(row0, ColCashInOut0 + 2)
            OrdenDotacion(i, 5) = OrdenDotacion(i, 5) + Cells(row0, ColOrdenDot0 + 2)
            '6 DEMANDA JUEVES
            CiCo(i, 6) = CiCo(i, 6) + Cells(row0, ColCashInOut0 + 3)
            OrdenDotacion(i, 6) = OrdenDotacion(i, 6) + Cells(row0, ColOrdenDot0 + 3)
            '7 DEMANDA VIERNES
            CiCo(i, 7) = CiCo(i, 7) + Cells(row0, ColCashInOut0 + 4)
            OrdenDotacion(i, 7) = OrdenDotacion(i, 7) + Cells(row0, ColOrdenDot0 + 4)
            '8 DEMANDA SABADO
            CiCo(i, 8) = CiCo(i, 8) + Cells(row0, ColCashInOut0 + 5)
            OrdenDotacion(i, 8) = OrdenDotacion(i, 8) + Cells(row0, ColOrdenDot0 + 5)
            '9 DEMANDA DOMINGO
            CiCo(i, 9) = CiCo(i, 9) + Cells(row0, ColCashInOut0 + 6)
            OrdenDotacion(i, 9) = OrdenDotacion(i, 9) + Cells(row0, ColOrdenDot0 + 6)
            '10 DEMANDA SIGUIENTE LUNES
            CiCo(i, 10) = CiCo(i, 10) + Cells(row0, ColCashInOut0 + 7)
            OrdenDotacion(i, 10) = OrdenDotacion(i, 10) + Cells(row0, ColOrdenDot0 + 7)
            '11 DEMANDA SIGUIENTE MARTES
            CiCo(i, 11) = CiCo(i, 11) + Cells(row0, ColCashInOut0 + 8)
            OrdenDotacion(i, 11) = OrdenDotacion(i, 11) + Cells(row0, ColOrdenDot0 + 8)
            '12 DEMANDA SIGUIENTE MIERCOLES
            CiCo(i, 12) = CiCo(i, 12) + Cells(row0, ColCashInOut0 + 9)
            OrdenDotacion(i, 12) = OrdenDotacion(i, 12) + Cells(row0, ColOrdenDot0 + 9)
    
        End If
    
    Next i
    
row0 = row0 + 1

Loop


'''''''''''''''''''''''''''''''''AGREGAR INFORMACI|fffd|N A PLANEACI|fffd|N'''''''''''''''''''''''''''''''''''''''''''
'sh1 = "pm_PLANEACION_CAJAS"
Sheets(sh1).Select
row0 = 4
'diasSumar = Val(Range("EU1").value)
'dia1 = 3
        
Do While Cells(row0, col0) <> ""

    For i = 1 To UBound(OrdenDotacion)
        
        If Cells(row0, col0 + 1) = OrdenDotacion(i, 1) And Cells(row0, col0 + 2) = OrdenDotacion(i, 2) Then
            
            Select Case diasSumar
                Case 5
                    Cells(row0, ColOrdenesDot) = OrdenDotacion(i, dia1 + 1) + OrdenDotacion(i, dia1 + 2) + OrdenDotacion(i, dia1 + 3) + OrdenDotacion(i, dia1 + 4) + OrdenDotacion(i, dia1 + 5)
                    Cells(row0, ColOrdenesDot + 3) = CiCo(i, dia1 + 1) + CiCo(i, dia1 + 2) + CiCo(i, dia1 + 3) + CiCo(i, dia1 + 4) + CiCo(i, dia1 + 5)
                Case 4
                    Cells(row0, ColOrdenesDot) = OrdenDotacion(i, dia1 + 1) + OrdenDotacion(i, dia1 + 2) + OrdenDotacion(i, dia1 + 3) + OrdenDotacion(i, dia1 + 4)
                    Cells(row0, ColOrdenesDot + 3) = CiCo(i, dia1 + 1) + CiCo(i, dia1 + 2) + CiCo(i, dia1 + 3) + CiCo(i, dia1 + 4)
                Case 3
                    Cells(row0, ColOrdenesDot) = OrdenDotacion(i, dia1 + 1) + OrdenDotacion(i, dia1 + 2) + OrdenDotacion(i, dia1 + 3)
                    Cells(row0, ColOrdenesDot + 3) = CiCo(i, dia1 + 1) + CiCo(i, dia1 + 2) + CiCo(i, dia1 + 3)
                Case 2
                    Cells(row0, ColOrdenesDot) = OrdenDotacion(i, dia1 + 1) + OrdenDotacion(i, dia1 + 2)
                    Cells(row0, ColOrdenesDot + 3) = CiCo(i, dia1 + 1) + CiCo(i, dia1 + 2)
                Case 1
                    Cells(row0, ColOrdenesDot) = OrdenDotacion(i, dia1 + 1)
                    Cells(row0, ColOrdenesDot + 3) = CiCo(i, dia1 + 1)
            End Select
        
        End If
    
    Next i
    
    row0 = row0 + 1
    
Loop

Call CQ4_ActualizarEstatusCajas


Application.ScreenUpdating = True
Application.ScreenUpdating = True

End Sub


Sub CQ4_ActualizarEstatusCajas()


Dim ColOrdenesDot, row0, col0 As Long
col0 = 1
ColOrdenesDot = 153
row0 = 4

Do While Cells(row0, col0) <> ""
    
        On Error Resume Next
        'si la orden de dotaci|fffd|n es mayor
        If Cells(row0, ColOrdenesDot) = 0 And Cells(row0, ColOrdenesDot - 1) = 0 And Cells(row0, col0) = "TOTALES" Then
            Cells(row0, ColOrdenesDot + 1) = 0
            Cells(row0, ColOrdenesDot + 2) = "CAJA VACIA"
            Cells(row0, ColOrdenesDot + 2).Select
            With Selection.Interior
                .Pattern = xlSolid
                .PatternColorIndex = xlAutomatic
                .ThemeColor = xlThemeColorDark1
                .TintAndShade = 0
                .PatternTintAndShade = 0
            End With
            With Selection.Font
                .ColorIndex = xlAutomatic
                .TintAndShade = 0
            End With
           
        ElseIf Cells(row0, ColOrdenesDot) > 0 And Cells(row0, ColOrdenesDot - 1) = 0 And Cells(row0, col0) = "TOTALES" Then
            Cells(row0, ColOrdenesDot + 1) = Cells(row0, ColOrdenesDot) - Cells(row0, ColOrdenesDot - 1)
            Cells(row0, ColOrdenesDot + 2) = "CAJA AL " & Format((Cells(row0, ColOrdenesDot - 1) / Cells(row0, ColOrdenesDot)), "#0.00%")
            Cells(row0, ColOrdenesDot + 2).Select
            With Selection.Interior
                    .Pattern = xlSolid
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                    .PatternTintAndShade = 0
                End With
                With Selection.Font
                    .ThemeColor = xlThemeColorDark1
                    .TintAndShade = 0
                End With
                
        ElseIf Cells(row0, ColOrdenesDot) > Cells(row0, ColOrdenesDot - 1) And Cells(row0, col0) = "TOTALES" Then
            Cells(row0, ColOrdenesDot + 1) = Cells(row0, ColOrdenesDot) - Cells(row0, ColOrdenesDot - 1)
            Cells(row0, ColOrdenesDot + 2) = "CAJA AL " & Format((Cells(row0, ColOrdenesDot - 1) / Cells(row0, ColOrdenesDot)), "#0.00%")
            Cells(row0, ColOrdenesDot + 2).Select
            With Selection.Interior
                    .Pattern = xlSolid
                    .PatternColorIndex = xlAutomatic
                    .Color = 65535
                    .TintAndShade = 0
                    .PatternTintAndShade = 0
                End With
                With Selection.Font
                    .ColorIndex = xlAutomatic
                    .TintAndShade = 0
                End With
            
        ElseIf Cells(row0, ColOrdenesDot) = 0 And Cells(row0, ColOrdenesDot - 1) > 0 And Cells(row0, col0) = "TOTALES" Then
            Cells(row0, ColOrdenesDot + 1) = 0
            Cells(row0, ColOrdenesDot + 2) = "CAJA EXCEDIDA " & Format((Cells(row0, ColOrdenesDot - 1) / (Cells(row0, ColOrdenesDot + 3) * -1)), "#0.00%")
            Cells(row0, ColOrdenesDot + 2).Select
            With Selection.Interior
                    .Pattern = xlSolid
                    .PatternColorIndex = xlAutomatic
                    .Color = 15773696
                    .TintAndShade = 0
                    .PatternTintAndShade = 0
                End With
                With Selection.Font
                    .ThemeColor = xlThemeColorDark1
                    .TintAndShade = 0
                    .Bold = True
                End With
            
        ElseIf Cells(row0, ColOrdenesDot - 1) > Cells(row0, ColOrdenesDot) And Cells(row0, col0) = "TOTALES" Then
            Cells(row0, ColOrdenesDot + 1) = 0
            Cells(row0, ColOrdenesDot + 2) = "CAJA EXCEDIDA " & Format(((Cells(row0, ColOrdenesDot - 1) - Cells(row0, ColOrdenesDot)) / Cells(row0, ColOrdenesDot)), "#0.00%")
            Cells(row0, ColOrdenesDot + 2).Select
            With Selection.Interior
                    .Pattern = xlSolid
                    .PatternColorIndex = xlAutomatic
                    .Color = 15773696
                    .TintAndShade = 0
                    .PatternTintAndShade = 0
                End With
                With Selection.Font
                    .ThemeColor = xlThemeColorDark1
                    .TintAndShade = 0
                    .Bold = True
                End With
            
        ElseIf Cells(row0, ColOrdenesDot) = Cells(row0, ColOrdenesDot - 1) And Cells(row0, col0) = "TOTALES" Then
            Cells(row0, ColOrdenesDot + 1) = 0
            Cells(row0, ColOrdenesDot + 2) = "CAJA LLENA 100%"
            Cells(row0, ColOrdenesDot + 2).Select
            With Selection.Interior
                .Pattern = xlSolid
                .PatternColorIndex = xlAutomatic
                .Color = 5287936
                .TintAndShade = 0
                .PatternTintAndShade = 0
            End With
            With Selection.Font
                .ThemeColor = xlThemeColorDark1
                .TintAndShade = 0
                .Bold = True
            End With
            
        Else
            Cells(row0, ColOrdenesDot + 1) = 0
            Cells(row0, ColOrdenesDot + 2).Select
            
            
        End If

        On Error GoTo 0
        
    row0 = row0 + 1
    
Loop


End Sub

Sub CQ5_OrdenDotacionSucursales()
Application.ScreenUpdating = False
Application.ScreenUpdating = False

Call VariablesGlobales
'sh3 = "pm_PLANEACION_SERVICIOS"
'sh26 = "OrdenDotacion"
'dia seleccionado
Dim diaSel, diasSumar, dia1, dia1CashIn As Integer
Dim CiCo() As Variant
Dim Pronostico() As Variant
Dim Parametros() As Variant
Dim row0, col0, ColCashInOut0, ColOrdenesDot, totReg, contador As Long
Dim ColLimOp, MinDot, MaxDot As Integer
Dim diaPronostico As String

row0 = 2
col0 = 1
ColCashInOut0 = 7
ColOrdenDot0 = 17

'CI-CO MODELO
ColCashInCashOut = 28
'ORDEN DOTACI|fffd|N MODELO
ColOrdenesDot = 29

'L|fffd|MITE OPERATIVO
ColLimOp = 10
'SALDOS M|fffd|NIMO Y M|fffd|XIMO DE SUCURSAL
MinDot = 23
MaxDot = 24

contador = 1

'sh26 = "OrdenDotacion"
Sheets(sh26).Select

diaPronostico = "Actualizaci|fffd|n: " & Chr(10) & Format(Range("aa2").value, "dddd dd mmm hh:mm AM/PM") & _
                Chr(10) & "Periodo " & Chr(10) & CASH_IN_CASH_OUT.TextRangoFechas.value

totReg = Range(Cells(row0 - 1, col0), Cells(row0 - 1, col0).End(xlDown)).Count

If totReg > 1000000 Then
totReg = 1
Else
totReg = Range(Cells(row0 - 1, col0), Cells(row0 - 1, col0).End(xlDown)).Count
End If

'Select Case diaSel
'    Case 1
'        dia1 = 3
'    Case 2
'        dia1 = 4
'    Case 3
'        dia1 = 5
'    Case 4
'        dia1 = 6
'    Case 5
'        dia1 = 7
'
'End Select

ReDim CiCo(totReg - 1, 12)
ReDim Pronostico(totReg - 1, 12)
ReDim Parametros(totReg - 1, 6)

Do While Cells(row0, col0) <> ""
    
            '1 ID SUCURSAL
            Pronostico(contador, 1) = Cells(row0, col0)
            CiCo(contador, 1) = Cells(row0, col0)
            Parametros(contador, 1) = Cells(row0, col0)
            '2 ETV
            Pronostico(contador, 2) = Cells(row0, col0 + 3)
            CiCo(contador, 2) = Cells(row0, col0 + 3)
            Parametros(contador, 2) = Cells(row0, col0 + 3)
            
            '3 DEMANDA LUNES
            Pronostico(contador, 3) = Cells(row0, ColOrdenDot0)
            CiCo(contador, 3) = Cells(row0, ColCashInOut0)
            Parametros(contador, 3) = Abs(Cells(row0, ColCashInOut0 - 1))
            
            '4  DEMANDA MARTES
            Pronostico(contador, 4) = Cells(row0, ColOrdenDot0 + 1)
            CiCo(contador, 4) = Cells(row0, ColCashInOut0 + 1)
            
            'dias de inventario m|fffd|nimo * limite operativo
            Parametros(contador, 4) = Abs(WorksheetFunction.RoundUp((Cells(row0, ColOrdenDot0 + 11) * Cells(row0, ColCashInOut0 - 1) / 100000), 0)) * 100000
            
            '5 DEMANDA MIERCOLES
            Pronostico(contador, 5) = Cells(row0, ColOrdenDot0 + 2)
            CiCo(contador, 5) = Cells(row0, ColCashInOut0 + 2)
            
            'dias de inventario m|fffd|ximo * limite operativo - CAPACIDAD CAJA $10,000,000.00
            If Abs(WorksheetFunction.RoundUp((Cells(row0, ColOrdenDot0 + 12) * Cells(row0, ColCashInOut0 - 1) / (Cells(row0, ColOrdenDot0 + 13))), 0)) * (Cells(row0, ColOrdenDot0 + 13)) > (Cells(row0, ColOrdenDot0 + 13)) Then
            Parametros(contador, 5) = (Cells(row0, ColOrdenDot0 + 13))
            Else
            Parametros(contador, 5) = Abs(WorksheetFunction.RoundUp((Cells(row0, ColOrdenDot0 + 12) * Cells(row0, ColCashInOut0 - 1) / 100000), 0)) * 100000
            End If
            
            '6 DEMANDA JUEVES
            Pronostico(contador, 6) = Cells(row0, ColOrdenDot0 + 3)
            CiCo(contador, 6) = Cells(row0, ColCashInOut0 + 3)
            'TOPE INVENTARIO
            Parametros(contador, 6) = Abs(Cells(row0, ColOrdenDot0 + 13))
            
            '7 DEMANDA VIERNES
            Pronostico(contador, 7) = Cells(row0, ColOrdenDot0 + 4)
            CiCo(contador, 7) = Cells(row0, ColCashInOut0 + 4)
            '8 DEMANDA SABADO
            Pronostico(contador, 8) = Cells(row0, ColOrdenDot0 + 5)
            CiCo(contador, 8) = Cells(row0, ColCashInOut0 + 5)
            '9 DEMANDA DOMINGO
            Pronostico(contador, 9) = Cells(row0, ColOrdenDot0 + 6)
            CiCo(contador, 9) = Cells(row0, ColCashInOut0 + 6)
            '10 DEMANDA SIGUIENTE LUNES
            Pronostico(contador, 10) = Cells(row0, ColOrdenDot0 + 7)
            CiCo(contador, 10) = Cells(row0, ColCashInOut0 + 7)
            '11 DEMANDA SIGUIENTE MARTES
            Pronostico(contador, 11) = Cells(row0, ColOrdenDot0 + 8)
            CiCo(contador, 11) = Cells(row0, ColCashInOut0 + 8)
            '12 DEMANDA SIGUIENTE MIERCOLES
            Pronostico(contador, 12) = Cells(row0, ColOrdenDot0 + 9)
            CiCo(contador, 12) = Cells(row0, ColCashInOut0 + 9)
    
contador = contador + 1
    
row0 = row0 + 1

Loop

'For i = 1 To 10
'
'MsgBox Pronostico(i, 1)
'
'Next i

'''''''''''''''''''''''''''''''''AGREGAR INFORMACI|fffd|N A PLANEACI|fffd|N'''''''''''''''''''''''''''''''''''''''''''
'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select
row0 = 4
diasSumar = Int(CASH_IN_CASH_OUT.ComboBoxDias.value)
Nombredia1 = CASH_IN_CASH_OUT.ComboBoxDiaActual.value
'diasSumar = 1
'Nombredia1 = "Lunes"

Select Case Nombredia1
    Case "Lunes"
        dia1 = 3
        'numero de la columna de lunes en arreglo de cash in
        dia1CashIn = 2
    Case "Martes"
        dia1 = 4
        dia1CashIn = 3
    Case "Miercoles"
        dia1 = 5
        dia1CashIn = 4
    Case "Jueves"
        dia1 = 6
        dia1CashIn = 5
    Case "Viernes"
        dia1 = 7
        dia1CashIn = 6
    Case Else
        dia1 = 7
        dia1CashIn = 6
End Select

Do While Cells(row0, col0) <> ""

    For i = 1 To UBound(Pronostico)

        If Cells(row0, col0 + 3) = Pronostico(i, 1) Then

            Select Case diasSumar
                Case 5
                    Cells(row0, ColLimOp) = Parametros(i, 3)
                    Cells(row0, MinDot) = Parametros(i, 4)
                    Cells(row0, MaxDot) = Parametros(i, 5)
                    
                    Cells(row0, ColOrdenesDot) = Pronostico(i, dia1 + 1) + Pronostico(i, dia1 + 2) + Pronostico(i, dia1 + 3) + Pronostico(i, dia1 + 4) + Pronostico(i, dia1 + 5)
                    Cells(row0, ColCashInCashOut) = CiCo(i, dia1 + 1) + CiCo(i, dia1 + 2) + CiCo(i, dia1 + 3) + CiCo(i, dia1 + 4) + CiCo(i, dia1 + 5)
'                    sumaPronostico = sumaPronostico
'                    sumaCiCo = sumaCiCo
                Case 4
                    Cells(row0, ColLimOp) = Parametros(i, 3)
                    Cells(row0, MinDot) = Parametros(i, 4)
                    Cells(row0, MaxDot) = Parametros(i, 5)
                    
                    Cells(row0, ColOrdenesDot) = Pronostico(i, dia1 + 1) + Pronostico(i, dia1 + 2) + Pronostico(i, dia1 + 3) + Pronostico(i, dia1 + 4)
                    Cells(row0, ColCashInCashOut) = CiCo(i, dia1 + 1) + CiCo(i, dia1 + 2) + CiCo(i, dia1 + 3) + CiCo(i, dia1 + 4)
                Case 3
                    Cells(row0, ColLimOp) = Parametros(i, 3)
                    Cells(row0, MinDot) = Parametros(i, 4)
                    Cells(row0, MaxDot) = Parametros(i, 5)
                    
                    Cells(row0, ColOrdenesDot) = Pronostico(i, dia1 + 1) + Pronostico(i, dia1 + 2) + Pronostico(i, dia1 + 3)
                    Cells(row0, ColCashInCashOut) = CiCo(i, dia1 + 1) + CiCo(i, dia1 + 2) + CiCo(i, dia1 + 3)
                Case 2
                    Cells(row0, ColLimOp) = Parametros(i, 3)
                    Cells(row0, MinDot) = Parametros(i, 4)
                    Cells(row0, MaxDot) = Parametros(i, 5)
                    
                    Cells(row0, ColOrdenesDot) = Pronostico(i, dia1 + 1) + Pronostico(i, dia1 + 2)
                    Cells(row0, ColCashInCashOut) = CiCo(i, dia1 + 1) + CiCo(i, dia1 + 2)
                Case 1
                    Cells(row0, ColLimOp) = Parametros(i, 3)
                    Cells(row0, MinDot) = Parametros(i, 4)
                    Cells(row0, MaxDot) = Parametros(i, 5)
                    
                    Cells(row0, ColOrdenesDot) = Pronostico(i, dia1 + 1)
                    Cells(row0, ColCashInCashOut) = CiCo(i, dia1 + 1)
            End Select
        
        End If
    
    Next i
    
    row0 = row0 + 1
    
Loop


'ENCABEZADO COLUMNA CASH IN CASH OUT
Cells(3, ColCashInCashOut) = "Cash In - Cash Out" & Chr(10) & diaPronostico
'ENCABEZADO COLUMNA ORDEN DE DOTACI|fffd|N
Cells(3, ColOrdenesDot) = "Orden Dotaci|fffd|n" & Chr(10) & diaPronostico

'CASH IN PRON|fffd|STICO
Call CQ9_ImportarCashInActualizado(2)
Call CQ11_AgregarCashInModeloPronostico

'CASH OUT
Call CQ12_ImportarCashOutActualizado(2, fechaOperacion)
Call CQ13_AgregarCashOutModeloPronostico(2)

Application.ScreenUpdating = True
Application.ScreenUpdating = True
End Sub


Sub CQ6_CiCoDiaActualSucursales()
Application.ScreenUpdating = False
Application.ScreenUpdating = False

Call VariablesGlobales
'sh3 = "pm_PLANEACION_SERVICIOS"
'sh26 = "OrdenDotacion"
'dia seleccionado
Dim diaSel, diasSumar, dia1 As Integer
Dim CiCo() As Variant
Dim Pronostico() As Variant
Dim row0, col0, ColCashInOut0, ColOrdenesDot, totReg, contador As Long
Dim diaPronostico As String

row0 = 2
col0 = 1
ColCashInOut0 = 7
ColOrdenDot0 = 17

ColCashInCashOut = 16
ColOrdenesDot = 16

contador = 1

Sheets(sh6).Select
diaPronostico = "Actualizaci|fffd|n: " & Chr(10) & Format(Range("aa2").value, "dd mmm hh:mm AM/PM") & _
                Chr(10) & "D|fffd|a actual " & Chr(10) & Format(fechaOperacion, "dddd")


totReg = Range(Cells(row0 - 1, col0), Cells(row0 - 1, col0).End(xlDown)).Count

If totReg > 1000000 Then
totReg = 1
Else
totReg = Range(Cells(row0 - 1, col0), Cells(row0 - 1, col0).End(xlDown)).Count
End If

'Select Case diaSel
'    Case 1
'        dia1 = 3
'    Case 2
'        dia1 = 4
'    Case 3
'        dia1 = 5
'    Case 4
'        dia1 = 6
'    Case 5
'        dia1 = 7
'
'End Select

ReDim CiCo(totReg - 1, 12)
ReDim Pronostico(totReg - 1, 12)


Do While Cells(row0, col0) <> ""
    
            '1 ID SUCURSAL
            Pronostico(contador, 1) = Cells(row0, col0)
            CiCo(contador, 1) = Cells(row0, col0)
            '2 ETV
            Pronostico(contador, 2) = Cells(row0, col0 + 3)
            CiCo(contador, 2) = Cells(row0, col0 + 3)
            '3 DEMANDA LUNES
            Pronostico(contador, 3) = Cells(row0, ColOrdenDot0)
            CiCo(contador, 3) = Cells(row0, ColCashInOut0)
            '4  DEMANDA MARTES
            Pronostico(contador, 4) = Cells(row0, ColOrdenDot0 + 1)
            CiCo(contador, 4) = Cells(row0, ColCashInOut0 + 1)
            '5 DEMANDA MIERCOLES
            Pronostico(contador, 5) = Cells(row0, ColOrdenDot0 + 2)
            CiCo(contador, 5) = Cells(row0, ColCashInOut0 + 2)
            '6 DEMANDA JUEVES
            Pronostico(contador, 6) = Cells(row0, ColOrdenDot0 + 3)
            CiCo(contador, 6) = Cells(row0, ColCashInOut0 + 3)
            '7 DEMANDA VIERNES
            Pronostico(contador, 7) = Cells(row0, ColOrdenDot0 + 4)
            CiCo(contador, 7) = Cells(row0, ColCashInOut0 + 4)
            '8 DEMANDA SABADO
            Pronostico(contador, 8) = Cells(row0, ColOrdenDot0 + 5)
            CiCo(contador, 8) = Cells(row0, ColCashInOut0 + 5)
            '9 DEMANDA DOMINGO
            Pronostico(contador, 9) = Cells(row0, ColOrdenDot0 + 6)
            CiCo(contador, 9) = Cells(row0, ColCashInOut0 + 6)
            '10 DEMANDA SIGUIENTE LUNES
            Pronostico(contador, 10) = Cells(row0, ColOrdenDot0 + 7)
            CiCo(contador, 10) = Cells(row0, ColCashInOut0 + 7)
            '11 DEMANDA SIGUIENTE MARTES
            Pronostico(contador, 11) = Cells(row0, ColOrdenDot0 + 8)
            CiCo(contador, 11) = Cells(row0, ColCashInOut0 + 8)
            '12 DEMANDA SIGUIENTE MIERCOLES
            Pronostico(contador, 12) = Cells(row0, ColOrdenDot0 + 9)
            CiCo(contador, 12) = Cells(row0, ColCashInOut0 + 9)
    
contador = contador + 1
    
row0 = row0 + 1

Loop

'For i = 1 To 10
'
'MsgBox Pronostico(i, 1)
'
'Next i

'''''''''''''''''''''''''''''''''AGREGAR INFORMACI|fffd|N A PLANEACI|fffd|N'''''''''''''''''''''''''''''''''''''''''''
'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select
row0 = 4
diasSumar = 1

'Nombredia1 = CASH_IN_CASH_OUT.ComboBoxDiaActual.value
'diasSumar = 1
'Nombredia1 = "Lunes"
dia1 = Weekday(fechaOperacion, vbMonday)
Select Case dia1
    Case 1
        dia1 = 3
    Case 2
        dia1 = 4
    Case 3
        dia1 = 5
    Case 4
        dia1 = 6
    Case 5
        dia1 = 7
    Case Else
        dia1 = 7
End Select

Do While Cells(row0, col0) <> ""

    For i = 1 To UBound(Pronostico)

        If Cells(row0, col0 + 3) = CiCo(i, 1) Then

            Cells(row0, ColCashInCashOut) = CiCo(i, dia1)
            
        End If
    
    Next i
    
    row0 = row0 + 1
    
Loop


'ENCABEZADO COLUMNA CASH IN CASH OUT
Cells(3, ColCashInCashOut) = "CASH IN - CASH OUT PRON|fffd|STICO" & Chr(10) & diaPronostico


Application.ScreenUpdating = True
Application.ScreenUpdating = True
End Sub



Sub CQ7_EstatusDinamicoMonitoreoSucursales()

Call VariablesGlobales
'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select
Dim ColCiCo, ColInicial, ColMonitoreo, ColLimOp, colEstatus, row0, col0 As Integer
Dim resultado As Long
col0 = 1
ColCiCo = 16
ColInicial = 6
ColMonitoreo = 8
ColLimOp = 10
row0 = 4
colEstatus = 22


Do While Cells(row0, col0) <> ""
        'Cells (Row0,Col0)
        
        On Error Resume Next
        resultado = Cells(row0, ColMonitoreo) - Cells(row0, ColInicial)
        LIMITEOPERATIVO = Cells(row0, ColLimOp) * -1
        CiCo = Cells(row0, ColCiCo)
        
        'CICO <0 & = > 0
        If CiCo > 0 And resultado >= 0 Then
            Cells(row0, colEstatus) = "DISMINUCI|fffd|N NORMAL  " & Chr(10) & Format(resultado, "$###,##0.00")
                Cells(row0, colEstatus).Select
                With Selection.Interior
                    .Pattern = xlSolid
                    .PatternColorIndex = xlAutomatic
                    .Color = 5287936
                    .TintAndShade = 0
                    .PatternTintAndShade = 0
                End With
                With Selection.Font
                    .ThemeColor = xlThemeColorDark1
                    .TintAndShade = 0
                    .Bold = True
                End With

        'CICO >0 & = > 0
        ElseIf CiCo < 0 And resultado > 0 Then
            Cells(row0, colEstatus) = "SALDO POSITIVO  " & Chr(10) & Format(resultado, "$###,##0.00")
                Cells(row0, colEstatus).Select
                With Selection.Interior
                    .Pattern = xlSolid
                    .PatternColorIndex = xlAutomatic
                    .Color = 15773696
                    .TintAndShade = 0
                    .PatternTintAndShade = 0
                End With
                With Selection.Font
                    .ThemeColor = xlThemeColorDark1
                    .TintAndShade = 0
                    .Bold = True
                End With
                
        'CICO > LO & = < CICO
        ElseIf CiCo > LIMITEOPERATIVO And resultado > CiCo Then
            Cells(row0, colEstatus) = "DISMINUCI|fffd|N NORMAL  " & Chr(10) & Format(resultado, "$###,##0.00")
                Cells(row0, colEstatus).Select
                With Selection.Interior
                    .Pattern = xlSolid
                    .PatternColorIndex = xlAutomatic
                    .Color = 5287936
                    .TintAndShade = 0
                    .PatternTintAndShade = 0
                End With
                With Selection.Font
                    .ThemeColor = xlThemeColorDark1
                    .TintAndShade = 0
                    .Bold = True
                End With

        'CICO > LO & = > CICO
        ElseIf CiCo > LIMITEOPERATIVO And resultado < LIMITEOPERATIVO Then
            Cells(row0, colEstatus) = "DISMINUCI|fffd|N AT|fffd|PICA  " & Chr(10) & Format(resultado, "$###,##0.00")
            Cells(row0, colEstatus).Select
                With Selection.Interior
                    .Pattern = xlSolid
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                    .PatternTintAndShade = 0
                End With
                With Selection.Font
                    .ThemeColor = xlThemeColorDark1
                    .TintAndShade = 0
                End With
            
        'CICO < LO & = > CICO
        ElseIf CiCo < LIMITEOPERATIVO And resultado > CiCo Then
            Cells(row0, colEstatus) = "DISMINUCI|fffd|N NORMAL  " & Chr(10) & Format(resultado, "$###,##0.00")
            Cells(row0, colEstatus).Select
            With Selection.Interior
                .Pattern = xlSolid
                .PatternColorIndex = xlAutomatic
                .Color = 5287936
                .TintAndShade = 0
                .PatternTintAndShade = 0
            End With
            With Selection.Font
                .ThemeColor = xlThemeColorDark1
                .TintAndShade = 0
                .Bold = True
            End With
            
        'CICO < LO & = > CICO
        ElseIf CiCo < LIMITEOPERATIVO And resultado < CiCo Then
            Cells(row0, colEstatus) = "DISMINUCI|fffd|N AT|fffd|PICA  " & Chr(10) & Format(resultado, "$###,##0.00")
            Cells(row0, colEstatus).Select
            With Selection.Interior
                    .Pattern = xlSolid
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                    .PatternTintAndShade = 0
                End With
                With Selection.Font
                    .ThemeColor = xlThemeColorDark1
                    .TintAndShade = 0
                End With
            
        'CICO < LO & = > CICO
        ElseIf resultado > LIMITEOPERATIVO And resultado < CiCo Then
            Cells(row0, colEstatus) = "DISMINUCI|fffd|N ACELERADA  " & Chr(10) & Format(resultado, "$###,##0.00")
            Cells(row0, colEstatus).Select
                With Selection.Interior
                    .Pattern = xlSolid
                    .PatternColorIndex = xlAutomatic
                    .Color = 65535
                    .TintAndShade = 0
                    .PatternTintAndShade = 0
                End With
                With Selection.Font
                    .ColorIndex = xlAutomatic
                    .TintAndShade = 0
                End With
                        
            
        Else
            Cells(row0, colEstatus) = "SIN ESTATUS  " & Chr(10) & Format(resultado, "$###,##0.00")
            Cells(row0, colEstatus).Select
            With Selection.Interior
                .Pattern = xlSolid
                .PatternColorIndex = xlAutomatic
                .ThemeColor = xlThemeColorDark1
                .TintAndShade = 0
                .PatternTintAndShade = 0
            End With
            With Selection.Font
                .ColorIndex = xlAutomatic
                .TintAndShade = 0
            End With
    
        End If

        On Error GoTo 0
        
    row0 = row0 + 1
    
Loop


''ROJO
'    With Selection.Interior
'        .Pattern = xlSolid
'        .PatternColorIndex = xlAutomatic
'        .Color = 255
'        .TintAndShade = 0
'        .PatternTintAndShade = 0
'    End With
'    With Selection.Font
'        .ThemeColor = xlThemeColorDark1
'        .TintAndShade = 0
'    End With
''VERDE
'    With Selection.Interior
'        .Pattern = xlSolid
'        .PatternColorIndex = xlAutomatic
'        .Color = 5287936
'        .TintAndShade = 0
'        .PatternTintAndShade = 0
'    End With
'    With Selection.Font
'        .ThemeColor = xlThemeColorDark1
'        .TintAndShade = 0
'        .Bold = True
'    End With
''AMARILLO
'    With Selection.Interior
'        .Pattern = xlSolid
'        .PatternColorIndex = xlAutomatic
'        .Color = 65535
'        .TintAndShade = 0
'        .PatternTintAndShade = 0
'    End With
'    With Selection.Font
'        .ThemeColor = xlThemeColorDark1
'        .TintAndShade = 0
'        .Bold = True
'    End With
'
End Sub


Sub CQ8_ImportarPronosticoAmFm()
'fechaValor As Date

Call VariablesGlobales

'sh3 = "pm_PLANEACION_SERVICIOS"
'sh6 = "Procesar"
'sh19 = "PARAMETROS"
Dim FechaPronostico As Date
Dim DayLabel, MonthLabel, YearLabel, mesCarpeta, fechaCarpeta, fechaArchivo, AmPm, AmPmCarpeta  As String
Dim diaNum, mesNum As Integer

If CONSULTA_HISTORICO.CheckBoxAm = True Then
    AmPm = "am"
    AmPmCarpeta = CarpetaPronosticoHistoricoAM

Else
    AmPm = "pm"
    AmPmCarpeta = CarpetaPronosticoHistoricoPM
End If

Select Case CONSULTA_HISTORICO.ComboBoxMesesPronostico.value
Case "ENERO"
mesNum = 1
Case "FEBRERO"
mesNum = 2
Case "MARZO"
mesNum = 3
Case "ABRIL"
mesNum = 4
Case "MAYO"
mesNum = 5
Case "JUNIO"
mesNum = 6
Case "JULIO"
mesNum = 7
Case "AGOSTO"
mesNum = 8
Case "SEPTIEMBRE"
mesNum = 9
Case "OCTUBRE"
mesNum = 10
Case "NOVIEMBRE"
mesNum = 11
Case "DICIEMBRE"
mesNum = 12
End Select

FechaPronostico = CDate(CONSULTA_HISTORICO.ComboDiaPronostico.value & "/" & mesNum & "/" & CONSULTA_HISTORICO.ComboBoxAnioPronostico.value)



diaNum = Day(FechaPronostico)
mesNum = Month(FechaPronostico)

If diaNum < 10 Then
DayLabel = "0" & diaNum
Else
DayLabel = diaNum
End If

If mesNum < 10 Then
MonthLabel = "0" & mesNum
Else
MonthLabel = mesNum
End If

YearLabel = Year(FechaPronostico)
mesCarpeta = NombresMesesLargo(mesNum)

fechaCarpeta = UnidadAsignada & RutaPronosticoHistorico & YearLabel & "\" & AmPmCarpeta
fechaArchivo = DayLabel & " " & MonthLabel & " " & YearLabel


'importar archivo cierre ayer
Sheets(sh6).Select
Cells.Clear

'MsgBox UnidadAsignada & RutaSaldoInicial & fechaCarpeta & "\" & fechaArchivo & ".txt"

ChDrive (UnidadAsignada)
ChDir (fechaCarpeta)
archi = Dir(fechaArchivo & "*.txt")



If archi = "" Then
MsgBox "NO HAY ARCHIVO DE PRON|fffd|STICO CON ESA FECHA"
Exit Sub
End If


    Range("A1").Select
    With ActiveSheet.QueryTables.Add(Connection:= _
        "TEXT;" & fechaCarpeta & "\" & archi _
        , Destination:=Range("$A$1"))
        .Name = Mid(archi, 1, Len(archi) - 4)
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierDoubleQuote
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileOtherDelimiter = "|"
        .TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
                                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    End With
    
    

End Sub

Attribute VB_Name = "CR_COPIA_LOCAL"


Sub CR0_1_CopiaLocal()

Call VariablesGlobales

Dim NombreArchivo, RutaArchivo As String
Dim obj As FileSystemObject
Dim tx As Scripting.TextStream
Dim Ht As Worksheet
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date


DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = RutaLocal & NombreCarpetaCompartida & "\" & RutaPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaci|fffd|n Log|fffd|stica Monetaria"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaci|fffd|n"

RutaArchivo = UnidadRuta & "\" & fechaCarpeta & "\" & " PTC01_CONTROL PLANEACI|fffd|N LOG|fffd|STICA " & UsuarioWin & " " & Format(Date, "ddmmyy") & " " & Format(Now(), "hhmmss") & ".xlsm"


'MsgBox "UnidadRuta: " & UnidadRuta & Chr(10) & "fechaCarpeta: " & fechaCarpeta
'MsgBox RutaArchivo
'guardar como macro xlOpenXMLWorkbookMacroEnabled
'guardar como xls xlOpenXMLWorkbook

    
'    ActiveWorkbook.SaveAs Filename:="D:\Users\brincon\Documents\Libro22.xlsm", _
'        FileFormat:=xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
'        MsgBox Left(RutaLocal, Len(RutaLocal) - 1)
'        MsgBox Chr(34) & RutaArchivo & Chr(34)
        'MsgBox RutaArchivo
    ChDrive (Left(RutaLocal, 3))
    ChDir (Left(RutaLocal, Len(RutaLocal) - 1))
    ActiveWorkbook.SaveAs Filename:=RutaArchivo, _
    FileFormat:=xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
    
End Sub







Attribute VB_Name = "CS_CORREO_DOTACIONES"
Sub CS_CorreoDotacionesInterno()
Attribute CS_CorreoDotacionesInterno.VB_ProcData.VB_Invoke_Func = " \n14"

Call VariablesGlobales
Dim NombreArchivo As String
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta, carpeta, nomCarpeta As String
Dim CuWs As String

'nombre del archivo
CuWs = ActiveWorkbook.Name


'limpiar hoja
'sh3 = "pm_PLANEACION_SERVICIOS"

'Ubicar fecha del reporte
fechaValor = Date

DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = RutaLocal & NombreCarpetaCompartida & "\" & RutaPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaci|fffd|n Log|fffd|stica Monetaria\" & _
DayLabel & " " & NombreMes & " " & YearLabel & " Planeaci|fffd|n"
nomCarpeta = DayLabel & MonthValor & YearLabel
NombreArchivo = nomCarpeta & " Dotaciones Programadas " & UsuarioWin


carpeta = UnidadRuta & "\" & NombreArchivo

'MsgBox Carpeta

'MsgBox "UnidadRuta " & UnidadRuta & Chr(10) & "NombreArchivo " & NombreArchivo


''''''''''''''''''''''''''ARREGLOS'''''''''''''''''''''''''''''
'sh18 = "ProgramacionDotaciones"
Sheets(sh18).Select

Dim DOTACIONES() As Variant
Dim Emergentes() As Variant
Dim contadorEmergentes As Long
Dim row0, col0, rowFin, colFin, RowRep0, ColRep0, ColRepFin As Long
Dim punteroplaza, punteroEtv, punteroEtvServicio, punteroIdSucursal, punteroImporte, punteroFechaServicio, punteroServicio As Integer
Dim totDot, rowFinEmerg As Long

punteroplaza = 4
punteroEtv = 3
punteroEtvServicio = 7
punteroIdSucursal = 5
punteroSucursal = 6
punteroImporte = 17
punteroFechaServicio = 9
punteroServicio = 10

row0 = 2
col0 = 1
'columnas del reporte
RowRep0 = 7
ColRep0 = 2
ColRepFin = 9

'medir filas
If Cells(row0 + 1, col0) = "" And Cells(row0 + 1, col0) = "" Then
MsgBox "NO HAY INFORMACI|fffd|N"
Exit Sub


ElseIf Cells(row0 + 2, col0) = "" And Cells(row0 + 3, col0) = "" Then
rowFin = 1

ElseIf (Range(Cells(row0 + 1, col0), Cells(row0 + 1, col0).End(xlDown)).Count) > 10000 Then
rowFin = 1

ElseIf (Range(Cells(row0 + 1, col0), Cells(row0 + 1, col0).End(xlDown)).Count) < 10000 Then
rowFin = (Range(Cells(row0 + 1, col0), Cells(row0 + 1, col0).End(xlDown)).Count)

End If


'Dimensionar arreglo
ReDim DOTACIONES(rowFin, 8)

For i = 1 To rowFin

    
    'Plaza
    DOTACIONES(i, 1) = Cells(row0 + 1, punteroplaza)
    'Etv
    DOTACIONES(i, 2) = Cells(row0 + 1, punteroEtv)
    'Id
    DOTACIONES(i, 3) = Cells(row0 + 1, punteroIdSucursal)
    'Sucursal
    DOTACIONES(i, 4) = Cells(row0 + 1, punteroSucursal)
    'Dotaci|fffd|n
    DOTACIONES(i, 5) = Cells(row0 + 1, punteroImporte)
    'Plaza Etv
    DOTACIONES(i, 6) = Cells(row0 + 1, punteroplaza) & " " & Cells(row0 + 1, punteroEtv)
    'Dotaci|fffd|n
    DOTACIONES(i, 7) = Cells(row0 + 1, punteroFechaServicio)
    'ETV servicio
    DOTACIONES(i, 8) = Cells(row0 + 1, punteroEtvServicio)
    
    
    
    row0 = row0 + 1
Next i

'''''''''''''''EMERGENTES''''''''''''''''''''''''
'reestablecer Row0
Dim emergentesOn As Boolean
row0 = 2
rowFinEmerg = Range("A65000").End(xlUp).Row
'sh22 = "ProgramacionServicios"
Sheets(sh22).Select

'medir filas
If rowFinEmerg = row0 Then
rowFinEmerg = 1
emergentesOn = False

ElseIf rowFinEmerg > row0 And rowFinEmerg < 10000 Then
rowFinEmerg = rowFinEmerg - 2
emergentesOn = True

End If


'If Cells(row0 + 1, col0) = "" And Cells(row0 + 1, col0) = "" Then
'rowFinEmerg = 1
'Exit Sub
'
'ElseIf Cells(row0 + 2, col0) = "" And Cells(row0 + 3, col0) = "" Then
'rowFinEmerg = 1
'
'ElseIf (Range(Cells(row0 + 1, col0), Cells(row0 + 1, col0).End(xlDown)).Count) > 10000 Then
'rowFinEmerg = 1
'
'ElseIf (Range(Cells(row0 + 1, col0), Cells(row0 + 1, col0).End(xlDown)).Count) < 10000 Then
'rowFinEmerg = (Range(Cells(row0 + 1, col0), Cells(row0 + 1, col0).End(xlDown)).Count)
'
'End If

'Dimensionar arreglo
ReDim Emergentes(rowFinEmerg, 8)
contadorEmergentes = 1
numEmerg = 0

If emergentesOn = True Then

        For i = 1 To rowFinEmerg
            
            If Cells(row0 + 1, punteroServicio) = "DOTACION" Then
        
            'Plaza
            Emergentes(contadorEmergentes, 1) = Cells(row0 + 1, punteroplaza)
            'Etv
            Emergentes(contadorEmergentes, 2) = Cells(row0 + 1, punteroEtv)
            'Id
            Emergentes(contadorEmergentes, 3) = Cells(row0 + 1, punteroIdSucursal)
            'Sucursal
            Emergentes(contadorEmergentes, 4) = Cells(row0 + 1, punteroSucursal)
            'Dotaci|fffd|n
            Emergentes(contadorEmergentes, 5) = Cells(row0 + 1, punteroImporte)
            'Plaza Etv
            Emergentes(contadorEmergentes, 6) = Cells(row0 + 1, punteroplaza) & " " & Cells(row0 + 1, punteroEtv)
            'Dotaci|fffd|n
            Emergentes(contadorEmergentes, 7) = Cells(row0 + 1, punteroFechaServicio)
            'ETV servicio
            Emergentes(contadorEmergentes, 8) = Cells(row0 + 1, punteroEtvServicio)
            
            contadorEmergentes = contadorEmergentes + 1
            numEmerg = numEmerg + 1
        
            End If
            
            row0 = row0 + 1
        Next i

Else
            'Plaza
            Emergentes(1, 1) = Cells(row0 + 1, punteroplaza)
            'Etv
            Emergentes(1, 2) = Cells(row0 + 1, punteroEtv)
            'Id
            Emergentes(1, 3) = Cells(row0 + 1, punteroIdSucursal)
            'Sucursal
            Emergentes(1, 4) = Cells(row0 + 1, punteroSucursal)
            'Dotaci|fffd|n
            Emergentes(1, 5) = Cells(row0 + 1, punteroImporte)
            'Plaza Etv
            Emergentes(1, 6) = Cells(row0 + 1, punteroplaza) & " " & Cells(row0 + 1, punteroEtv)
            'Dotaci|fffd|n
            Emergentes(1, 7) = Cells(row0 + 1, punteroFechaServicio)
            'ETV servicio
            Emergentes(1, 8) = Cells(row0 + 1, punteroEtvServicio)

End If

'sh18 = "ProgramacionDotaciones"
Sheets(sh18).Select



'reestablecer Row0
row0 = 2
'
'MsgBox Dotaciones(5, 1) & Chr(10) & Dotaciones(5, 2) & _
'        Chr(10) & Dotaciones(5, 3) & Chr(10) & Dotaciones(5, 4) & _
'        Chr(10) & Dotaciones(5, 5) & Chr(10) & Dotaciones(5, 6)
'
'Agregar hoja
    Sheets.Add After:=ActiveSheet
    ActiveSheet.Select
    ActiveSheet.Name = nomCarpeta
    
''''''''''''''''''''''INSERTAR INFORMACI|fffd|N''''''''''''''''''''''''''''''''

'encabezados
Cells(RowRep0 + 2, ColRep0 - 1) = "No."
Cells(RowRep0 + 2, ColRep0) = "PLAZA"
Cells(RowRep0 + 2, ColRep0 + 1) = "ETV DEUDOR"
Cells(RowRep0 + 2, ColRep0 + 2) = "ETV SERVICIO"
Cells(RowRep0 + 2, ColRep0 + 3) = "ID SUCURSAL"
Cells(RowRep0 + 2, ColRep0 + 4) = "SUCURSAL"
Cells(RowRep0 + 2, ColRep0 + 5) = "IMPORTE"
Cells(RowRep0 + 2, ColRep0 + 6) = "FECHA DOTACI|fffd|N"
Cells(RowRep0 + 2, ColRep0 + 7) = "DIA DOTACI|fffd|N"

totDot = 0

'dotaciones
For i = 1 To UBound(DOTACIONES)
    'No
    Cells(RowRep0 + 3, ColRep0 - 1) = i
    'PLAZA
    Cells(RowRep0 + 3, ColRep0) = DOTACIONES(i, 1)
    'ETV DEUDOR
    Cells(RowRep0 + 3, ColRep0 + 1) = DOTACIONES(i, 2)
    'ETV SERVICIO
    Cells(RowRep0 + 3, ColRep0 + 2) = DOTACIONES(i, 8)
    'ID SUCURSAL
    Cells(RowRep0 + 3, ColRep0 + 3) = DOTACIONES(i, 3)
    'SUCURSAL
    Cells(RowRep0 + 3, ColRep0 + 4) = DOTACIONES(i, 4)
    'IMPORTE
    Cells(RowRep0 + 3, ColRep0 + 5) = DOTACIONES(i, 5)
    'FECHA DOTACI|fffd|N
    Cells(RowRep0 + 3, ColRep0 + 6) = DOTACIONES(i, 7)
    'DIA DOTACI|fffd|N
    Cells(RowRep0 + 3, ColRep0 + 7) = NombresDiasMayus(Weekday(DOTACIONES(i, 7), vbMonday))
    
    'importe acumulado de dotaciones
    totDotProg = totDotProg + Val(DOTACIONES(i, 5))
      
RowRep0 = RowRep0 + 1

Next i



''''''''''EMERGENTES'''''''''''''''''''''
For i = 1 To UBound(Emergentes)

    If Len(Emergentes(i, 1)) > 2 Then
        'No
        Cells(RowRep0 + 3, ColRep0 - 1) = UBound(DOTACIONES) + i
        'PLAZA
        Cells(RowRep0 + 3, ColRep0) = Emergentes(i, 1)
        'ETV DEUDOR
        Cells(RowRep0 + 3, ColRep0 + 1) = Emergentes(i, 2)
        'ETV SERVICIO
        Cells(RowRep0 + 3, ColRep0 + 2) = Emergentes(i, 8)
        'ID SUCURSAL
        Cells(RowRep0 + 3, ColRep0 + 3) = Emergentes(i, 3)
        'SUCURSAL
        Cells(RowRep0 + 3, ColRep0 + 4) = Emergentes(i, 4)
        'IMPORTE
        Cells(RowRep0 + 3, ColRep0 + 5) = Emergentes(i, 5)
        'FECHA DOTACI|fffd|N
        Cells(RowRep0 + 3, ColRep0 + 6) = Emergentes(i, 7)
        'DIA DOTACI|fffd|N
        Cells(RowRep0 + 3, ColRep0 + 7) = NombresDiasMayus(Weekday(Emergentes(i, 7), vbMonday))
        
        'importe acumulado de Emergentes
        totDotEmerg = totDotEmerg + Val(Emergentes(i, 5))
        RowRep0 = RowRep0 + 1
    End If
    
Next i


totDot = totDotProg + totDotEmerg

'Regresar valor
RowRep0 = 7

Columns("A:J").AutoFit

'Datos generales
Cells(RowRep0 - 5, ColRep0) = "D  O  T  A  C  I  O  N  E  S"
Cells(RowRep0 - 4, ColRep0) = "Fecha programaci|fffd|n"
Cells(RowRep0 - 3, ColRep0) = "Responsable"
Cells(RowRep0 - 2, ColRep0) = "Total Dotaciones"
Cells(RowRep0 - 1, ColRep0) = "Dotaciones Programadas"
Cells(RowRep0, ColRep0) = "Dotaciones Emergentes"

Cells(RowRep0 - 4, ColRep0 + 1) = Format(Now, "DD MMMM YYYY hh:mm am/pm")
Cells(RowRep0 - 3, ColRep0 + 1) = NombrePlaneador
'numero de dotaciones
Cells(RowRep0 - 2, ColRep0 + 1) = Format(UBound(DOTACIONES) + numEmerg, "#,##0")
'suma de dotaciones
Cells(RowRep0 - 2, ColRep0 + 2) = Format(totDot, "$#,##0.00")

'numero de dotaciones programadas
Cells(RowRep0 - 1, ColRep0 + 1) = Format(UBound(DOTACIONES), "#,##0")
'suma de dotaciones programadas
Cells(RowRep0 - 1, ColRep0 + 2) = Format(totDotProg, "$#,##0.00")


'numero de dotaciones emergentes
Cells(RowRep0, ColRep0 + 1) = Format(numEmerg, "#,##0")
'suma de dotaciones
Cells(RowRep0, ColRep0 + 2) = Format(totDotEmerg, "$#,##0.00")


'''''''''''''''''''''''''''''FORMATO'''''''''''''''''''''''''''''''''''
'TITULO: DOTACIONES
Range(Cells(RowRep0 - 5, ColRep0), Cells(RowRep0 - 5, ColRepFin)).Select
With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    
With Selection.Font
        .Name = "Verdana"
        .size = 14
        .Color = -9043739
        .TintAndShade = 0
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .Bold = True
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 7733477
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
Rows("1:1").RowHeight = 23.25

'TITULO: DATOS GENERALES
Range(Cells(RowRep0 - 4, ColRep0), Cells(RowRep0, ColRep0)).Select
    
With Selection
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With


With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10.5
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
        .Bold = False
    End With
    
'Detalle Datos generales
Range(Cells(RowRep0 - 4, ColRep0 + 1), Cells(RowRep0 - 3, ColRepFin)).Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
        .Bold = True
    End With
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With

'Detalle total de dotaciones
Range(Cells(RowRep0 - 2, ColRep0 + 1), Cells(RowRep0, ColRep0 + 2)).Select
 With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 49407
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Selection.Font.Bold = True

    With Selection.Font
        .Color = -16777024
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .Bold = True
    End With



'encabezados tabla
Range(Cells(RowRep0 + 2, ColRep0), Cells(RowRep0 + 2, ColRepFin)).Select
With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With

With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
With Selection.Font
    .Name = "Verdana"
    .size = 10.5
    .ThemeColor = xlThemeColorLight1
    .TintAndShade = 0.249977111117893
    .Bold = True
End With

'detalle tabla
Range(Cells(RowRep0 + 2, ColRep0 - 1), Cells(UBound(DOTACIONES) + RowRep0 + numEmerg + 2, ColRepFin)).Select

With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
End With

Columns("B:B").AutoFit
Columns("F:G").AutoFit
Range("H9:I9", Range("H9:I9").End(xlDown)).Select
 With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
End With

'
Range("C9:E9", Range("C9:E9").End(xlDown)).Select
 With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
End With


'ORDENAR
Range(Cells(RowRep0 + 2, ColRep0), Cells(RowRep0 + 2, ColRepFin)).Select

Selection.AutoFilter
    ActiveSheet.AutoFilter.Sort.SortFields.Clear
    ActiveSheet.AutoFilter.Sort.SortFields.Add Key:= _
        Range(Cells(RowRep0 + 2, ColRepFin - 1), Cells(RowRep0 + 2, ColRepFin - 1)), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveSheet.AutoFilter.Sort
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
'QUITAR FILTRO
    If ActiveSheet.AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        ActiveSheet.AutoFilterMode = False
        Else
            'MsgBox "no hay filtro"
        End If
    
'mover a nuevo libro
    Sheets(nomCarpeta).Select
    Sheets(nomCarpeta).Move

'guardar

ActiveWorkbook.SaveAs Filename:=carpeta, FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False
ActiveWorkbook.Close True

''''''''''''''''''PARA CC CCO''''''''''''''''''''''''''''''''''''''
'sh19 = "PARAMETROS"
Sheets(sh19).Select
Dim PARA, CC, CCO As String
Dim MailDestRow As Long
Dim MailDestCol As Integer

MailDestRow = 21
MailDestCol = 1
PARA = ""
CC = ""
CCO = ""

Do While Cells(MailDestRow, MailDestCol) <> ""
    
    If Cells(MailDestRow, MailDestCol) = "Para" Then
    PARA = PARA & ";" & Cells(MailDestRow, MailDestCol + 1).value
    
    ElseIf Cells(MailDestRow, MailDestCol) = "CC" Then
    CC = CC & ";" & Cells(MailDestRow, MailDestCol + 1).value
    
    ElseIf Cells(MailDestRow, MailDestCol) = "CCO" Then
    CCO = CCO & ";" & Cells(MailDestRow, MailDestCol + 1).value
    End If


MailDestRow = MailDestRow + 1

Loop

'MsgBox PARA & Chr(10) & CC & Chr(10) & CCO

'correo
 ''''''''''''''''''''''''''''''''CORREO'''''''''''''''''''''''''''''
'                    Call CO3_1FormatoServicios
                Dim OutApp, OutMail As Object
                'Dim MiAdjunto As Outlook.Attachments
                Dim Asunto, Mensaje1, Mensaje2, FirmaCompartamos As String
                Dim ArchivoAdjunto As String
                Dim Saludo As String
                
                'Saludo dependiendo la hora de ejecuci|fffd|n
                If Hour(Now()) >= 12 Then
                Saludo = "Buenas tardes,"
                Else
                Saludo = "Buenos d|fffd|as,"
                End If
                
                'Asunto del correo
                Asunto = "DOTACIONES PROGRAMADAS**  " & NombresDiasMayus(Weekday(Date, vbMonday)) & " " _
                        & Day(Date) & " DE " & NombresMesesLargo(Month(Date))
                
                'Mensaje
                'sh19 = "PARAMETROS"
                
                Mensaje = "Se env|fffd|an las dotaciones programadas y emergentes del d|fffd|a de hoy."
                Mensaje1 = "N|fffd|mero = " & Format(UBound(DOTACIONES) + numEmerg, "#,##0")
                Mensaje3 = "Importe = " & Format(totDot, "$#,##0.00")
              
                Mensaje2 = "Saludos,"
                
                
                'Comprobar si Outlook esta abierto y en caso de no estarlo abrirlo

                On Error Resume Next
                Set OutApp = GetObject("", "Outlook.Application")
                Err.Clear
                
                If OutApp Is Nothing Then Set OutApp = CreateObject("Outlook.Application")

                
                OutApp.Visible = True
                
                OutApp.session.logon
                
                'se crea m|fffd|todo de env|fffd|o de correo
                Set OutMail = OutApp.CreateItem(0)
                
                
                
                'adjunto
                'Set MiAdjunto = OutMail.Attachments
                
                
                ''''''''''''''''''''''''''''''''''''''''''CORREO'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                'el cuerpo del correo y los archivos adjuntos
                On Error Resume Next
                
                With OutMail
                '.MiAdjunto.Add ArchivoAdjunto
                .To = PARA
                .CC = CC
                .BCC = CCO
                .Subject = Asunto
                .Attachments.Add carpeta & ".xlsx"
                '.BodyFormat = 2 'olFormatRichText
                '.Attachments.Add ArchivoAdjunto
                .HTMLBody = "<html>" & _
                    "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6C6969"">" & Saludo & "<br>" & "<br>" & Mensaje & "</span style=""color:#6C6969"">" & "<p/>" _
                    & "<p style='font-family:verdana;font-size:18'>" & "<span style=""color:#E71743"">" & Mensaje1 & "<br>" & Mensaje3 & "<br>" & "<br>" & "</span style=""color:#E71743"">" _
                    & "<br>" & _
                    "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6C6969"">" & Mensaje2 & "<br>" _
                    & "<br>" & DATOS_USUARIO_WINDOWS(Environ("UserName"), 1) & "<br>" & _
                    "Tel. 5276-7250     Ext:    " & DATOS_USUARIO_WINDOWS(Environ("UserName"), 4) & "<br>" & _
                    DATOS_USUARIO_WINDOWS(Environ("UserName"), 5) & "</span style=""color:#6C6969"">" & "<p/>" & "<br>" & _
                    "<img src= " & Chr(34) & RutaLocal & NombreCarpetaCompartida & "\" & Catalogos & firmaImagen & Chr(34) _
                    & "</html>"
                    
                    '' "<body>" "</body>"
                    
                '.Attachments.Add firmaImagen, False
                .display
                
                'Application.SendKeys "^{END}", True
                'Application.SendKeys "{ENTER}", True
                'Application.SendKeys "^v", True
                'DoEvents
                End With
                
                On Error GoTo 0
                
                Set OutMail = Nothing
                Set OutApp = Nothing
                
                

'regresar a archivo
Windows(CuWs).Activate
Sheets(sh18).Select


End Sub
Attribute VB_Name = "CT_CORREO_SALDOS_CAJAS"
Sub CT_CorreoSaldosCajas()

Call VariablesGlobales
Dim NombreArchivo As String
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta, carpeta, nomCarpeta As String
Dim CuWs, cuSh As String

'nombre del archivo
CuWs = ActiveWorkbook.Name
cuSh = ActiveSheet.Name

'limpiar hoja
'sh1 = "pm_PLANEACION_CAJAS"

'Ubicar fecha del reporte
fechaValor = Date

DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = RutaLocal & NombreCarpetaCompartida & "\" & RutaPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaci|fffd|n Log|fffd|stica Monetaria\" & _
DayLabel & " " & NombreMes & " " & YearLabel & " Planeaci|fffd|n"
nomCarpeta = DayLabel & MonthValor & YearLabel
NombreArchivo = nomCarpeta & " Saldos Cajas " & UsuarioWin


carpeta = UnidadRuta & "\" & NombreArchivo

'MsgBox Carpeta

'MsgBox "UnidadRuta " & UnidadRuta & Chr(10) & "NombreArchivo " & NombreArchivo


''''''''''''''''''''''''''ARREGLO'''''''''''''''''''''''''''''
'sh18 = "ProgramacionDotaciones"
Sheets(sh1).Select


Dim Saldos() As Variant
Dim row0, col0, rowFin, colFin, RowRep0, ColRep0, ColRepFin As Long
Dim punteroTotInicial, punteroTotCompras, punteroTotDotaciones, punteroTotTraspasosOut, punteroTotTraspasosIn, punteroTotFisico, punteroTotEstimado As Integer
Dim posicionTotInicial, posicionTotCompras, posicionTotDotaciones, posicionTotDotacionesEmergentes, posicionTotTraspasosOut, posicionTotTraspasosIn, posicionTotFisico, posicionTotEstimado As Integer
Dim valTotInicial, valTotCompras, valTotDotaciones, valTotTraspasosOut, valTotTraspasosIn, valTotFisico, valTotEstimado As Double
Dim totDot As Long
Dim marcaConstante1 As String
Dim numMarca1, contadorSaldos As Integer

marcaConstante1 = "TOTALES"
contadorSaldos = 1

'''''''''''''''''''''''''''''VALORES DE FORMULARIO''''''''''''''''''''''''''''''''
Dim ordenCol As Integer
'incremental
ordenCol = 4
    
'est|fffd|tico
constanteInicio = 4
'total de columnas con informaci|fffd|n
totCol = 4

If REPORTE_SALDOS_CAJAS.CheckBoxSaldosIniciales.value = True Then
posicionTotInicial = ordenCol
ordenCol = posicionTotInicial + 1
totCol = posicionTotInicial

Else

ordenCol = 4
totCol = posicionTotInicial

End If

If REPORTE_SALDOS_CAJAS.CheckBoxCompras.value = True And ordenCol > constanteInicio Then
posicionTotCompras = ordenCol
ordenCol = posicionTotCompras + 1
totCol = posicionTotCompras

ElseIf REPORTE_SALDOS_CAJAS.CheckBoxCompras.value = True And ordenCol = constanteInicio Then
posicionTotCompras = ordenCol
ordenCol = posicionTotCompras + 1
totCol = posicionTotCompras

End If

If REPORTE_SALDOS_CAJAS.CheckBoxDotacionesEmergentes.value = True And ordenCol > constanteInicio Then
posicionTotDotacionesEmergentes = ordenCol
ordenCol = posicionTotDotacionesEmergentes + 1
totCol = posicionTotDotacionesEmergentes

ElseIf REPORTE_SALDOS_CAJAS.CheckBoxDotacionesEmergentes.value = True And ordenCol = constanteInicio Then
posicionTotDotacionesEmergentes = ordenCol
ordenCol = posicionTotDotacionesEmergentes + 1
totCol = posicionTotDotacionesEmergentes

End If
        
If REPORTE_SALDOS_CAJAS.CheckBoxDotaciones.value = True And ordenCol > constanteInicio Then
posicionTotDotaciones = ordenCol
ordenCol = posicionTotDotaciones + 1
totCol = posicionTotDotaciones


ElseIf REPORTE_SALDOS_CAJAS.CheckBoxDotaciones.value = True And ordenCol = constanteInicio Then
posicionTotDotaciones = ordenCol
ordenCol = posicionTotDotaciones + 1
totCol = posicionTotDotaciones

End If



If REPORTE_SALDOS_CAJAS.CheckBoxTraspasoIn.value = True And ordenCol > constanteInicio Then
posicionTotTraspasosIn = ordenCol
ordenCol = posicionTotTraspasosIn + 1
totCol = posicionTotTraspasosIn

ElseIf REPORTE_SALDOS_CAJAS.CheckBoxTraspasoIn.value = True And ordenCol = constanteInicio Then
posicionTotTraspasosIn = ordenCol
ordenCol = posicionTotTraspasosIn + 1
totCol = posicionTotTraspasosIn

End If

If REPORTE_SALDOS_CAJAS.CheckBoxTraspasoOut.value = True And ordenCol > constanteInicio Then
posicionTotTraspasosOut = ordenCol
ordenCol = posicionTotTraspasosOut + 1
totCol = posicionTotTraspasosOut

ElseIf REPORTE_SALDOS_CAJAS.CheckBoxTraspasoOut.value = True And ordenCol = constanteInicio Then
posicionTotTraspasosOut = ordenCol
ordenCol = posicionTotTraspasosOut + 1
totCol = posicionTotTraspasosOut

End If

If REPORTE_SALDOS_CAJAS.CheckBoxSaldoFisico.value = True And ordenCol > constanteInicio Then
posicionTotFisico = ordenCol
ordenCol = posicionTotFisico + 1
totCol = posicionTotFisico

ElseIf REPORTE_SALDOS_CAJAS.CheckBoxSaldoFisico.value = True And ordenCol = constanteInicio Then
posicionTotFisico = ordenCol
ordenCol = posicionTotFisico + 1
totCol = posicionTotFisico

End If

If REPORTE_SALDOS_CAJAS.CheckBoxSaldoEstimado.value = True And ordenCol > constanteInicio Then
posicionTotEstimado = ordenCol
ordenCol = posicionTotEstimado
totCol = posicionTotEstimado

ElseIf REPORTE_SALDOS_CAJAS.CheckBoxSaldoEstimado.value = True And ordenCol = constanteInicio Then
posicionTotEstimado = ordenCol
ordenCol = posicionTotEstimado
totCol = posicionTotEstimado

End If
    
'MsgBox posicionTotInicial & Chr(10) & _
'posicionTotCompras & Chr(10) & _
'posicionTotDotaciones & Chr(10) & _
'posicionTotTraspasosIn & Chr(10) & _
'posicionTotTraspasosOut & Chr(10) & _
'posicionTotFisico & Chr(10) & _
'posicionTotEstimado

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


'columna en hoja de datos
punteroTotInicial = 23
punteroTotCompras = 77
punteroTotDotaciones = 41
punteroTotDotacionesEmergentes = 59
punteroTotTraspasosOut = 113
punteroTotTraspasosIn = 95
punteroTotFisico = 131
punteroTotEstimado = 149
row0 = 3
col0 = 1
'columnas del reporte
RowRep0 = 15
ColRep0 = 2
ColRepFin = totCol

'medir filas
If Cells(row0 + 1, col0) = "" And Cells(row0 + 1, col0) = "" Then
MsgBox "NO HAY INFORMACI|fffd|N"
Exit Sub


ElseIf Cells(row0 + 2, col0) = "" And Cells(row0 + 3, col0) = "" Then
rowFin = 1

ElseIf (Range(Cells(row0 + 1, col0), Cells(row0 + 1, col0).End(xlDown)).Count) > 10000 Then
rowFin = 1

ElseIf (Range(Cells(row0 + 1, col0), Cells(row0 + 1, col0).End(xlDown)).Count) < 10000 Then
rowFin = (Range(Cells(row0 + 1, col0), Cells(row0 + 1, col0).End(xlDown)).Count)

End If

'numero de marca 1 TOTALES

numMarca1 = Application.WorksheetFunction.CountIf(Range(Cells(row0 + 1, col0), Cells(rowFin + 3, col0)), marcaConstante1)


'Dimensionar arreglo
ReDim Saldos(numMarca1, 12)

For i = 1 To rowFin + 3

    If Cells(row0 + 1, 1) = marcaConstante1 Then
    
        'ID PLAZA
        Saldos(contadorSaldos, 1) = Cells(row0 + 1, 2)
        'ETV DEUDOR
        Saldos(contadorSaldos, 2) = Cells(row0 + 1, 3)
        'PLAZA
        Saldos(contadorSaldos, 3) = Cells(row0 + 1, 4)
        'SALDO INICIAL
        Saldos(contadorSaldos, 4) = Cells(row0 + 1, punteroTotInicial)
        'DOTACIONES EMERGENTES
        Saldos(contadorSaldos, 6) = Cells(row0 + 1, punteroTotDotacionesEmergentes)
        'DOTACIONES
        Saldos(contadorSaldos, 5) = Cells(row0 + 1, punteroTotDotaciones)
        'COMPRA EFECTIVO
        Saldos(contadorSaldos, 7) = Cells(row0 + 1, punteroTotCompras)
        'RECEPCI|fffd|N TRASLADO
        Saldos(contadorSaldos, 8) = Cells(row0 + 1, punteroTotTraspasosIn)
        'ENV|fffd|O TRASLADO
        Saldos(contadorSaldos, 9) = Cells(row0 + 1, punteroTotTraspasosOut)
        'SALDO F|fffd|SICO
        Saldos(contadorSaldos, 10) = Cells(row0 + 1, punteroTotFisico)
        'SALDO ESTIMADO
        Saldos(contadorSaldos, 11) = Cells(row0 + 1, punteroTotEstimado)
        'ETV DEUDOR & PLAZA
        Saldos(contadorSaldos, 12) = Cells(row0 + 1, 3) & " " & Cells(row0 + 1, 4)
        
        contadorSaldos = contadorSaldos + 1
        
    End If
    
    row0 = row0 + 1

Next i

'reestablecer Row0
row0 = 2
''
'MsgBox Saldos(19, 1) & Chr(10) & Saldos(19, 2) & _
'        Chr(10) & Saldos(19, 3) & Chr(10) & Saldos(19, 4) & _
'        Chr(10) & Saldos(19, 5) & Chr(10) & Saldos(19, 6) & _
'        Chr(10) & Saldos(19, 7) & Chr(10) & Saldos(19, 8) & _
'        Chr(10) & Saldos(19, 9) & Chr(10) & Saldos(19, 10) & _
'        Chr(10) & Saldos(19, 11) & Chr(10) & "UBOUND = " & UBound(Saldos)

'Agregar hoja
    Sheets.Add After:=ActiveSheet
    ActiveSheet.Select
    ActiveSheet.Name = nomCarpeta
    
''''''''''''''''''''''INSERTAR INFORMACI|fffd|N''''''''''''''''''''''''''''''''
On Error Resume Next
'encabezados
Cells(RowRep0, ColRep0 - 1) = "No."
'Cells(RowRep0, ColRep0) = "ID PLAZA"
Cells(RowRep0, ColRep0) = "ETV DEUDOR"
Cells(RowRep0, ColRep0 + 1) = "PLAZA"
Cells(RowRep0, posicionTotInicial) = "SALDO INICIAL"

Cells(RowRep0, posicionTotDotaciones) = "DOTACIONES"
Cells(RowRep0, posicionTotDotacionesEmergentes) = "DOTACIONES EMERGENTES"
Cells(RowRep0, posicionTotCompras) = "COMPRAS"
Cells(RowRep0, posicionTotTraspasosIn) = "RECEPCI|fffd|N TRASPASO"
Cells(RowRep0, posicionTotTraspasosOut) = "ENV|fffd|O TRASPASO"
Cells(RowRep0, posicionTotFisico) = "SALDO F|fffd|SICO"
Cells(RowRep0, posicionTotEstimado) = "SALDO ESTIMADO"


valTotInicial = 0
valTotDotaciones = 0
valTotDotacionesEmergentes = 0
valTotCompras = 0
valTotTraspasosIn = 0
valTotTraspasosOut = 0
valTotFisico = 0
valTotEstimado = 0
    
'dotaciones
For i = 1 To UBound(Saldos)
    'No
    Cells(RowRep0 + 1, ColRep0 - 1) = i
'    'ID CAJA
'    Cells(RowRep0 + 1, ColRep0) = Saldos(i, 1)
    'PLAZA
    Cells(RowRep0 + 1, ColRep0) = Saldos(i, 2)
    'ETV DEUDOR
    Cells(RowRep0 + 1, ColRep0 + 1) = Saldos(i, 3)
    'SALDO INICIAL
    Cells(RowRep0 + 1, posicionTotInicial) = Saldos(i, 4)
    'DOTACIONES
    Cells(RowRep0 + 1, posicionTotDotaciones) = Saldos(i, 5)
    'DOTACIONES EMERGENTES
    Cells(RowRep0 + 1, posicionTotDotacionesEmergentes) = Saldos(i, 6)
    'COMPRAS
    Cells(RowRep0 + 1, posicionTotCompras) = Saldos(i, 7)
    'RECEPCI|fffd|N TRASPASO
    Cells(RowRep0 + 1, posicionTotTraspasosIn) = Saldos(i, 8)
    'ENV|fffd|O TRASPASO
    Cells(RowRep0 + 1, posicionTotTraspasosOut) = Saldos(i, 9)
     'SALDO F|fffd|SICO
    Cells(RowRep0 + 1, posicionTotFisico) = Saldos(i, 10)
    'SALDO ESTIMADO
    Cells(RowRep0 + 1, posicionTotEstimado) = Saldos(i, 11)
    
    'totales
    valTotInicial = valTotInicial + Saldos(i, 4)
    valTotDotaciones = valTotDotaciones + Saldos(i, 5)
    valTotDotacionesEmergentes = valTotDotacionesEmergentes + Saldos(i, 6)
    valTotCompras = valTotCompras + Saldos(i, 7)
    valTotTraspasosIn = valTotTraspasosIn + Saldos(i, 8)
    valTotTraspasosOut = valTotTraspasosOut + Saldos(i, 9)
    valTotFisico = valTotFisico + Saldos(i, 10)
    valTotEstimado = valTotEstimado + Saldos(i, 11)
    
RowRep0 = RowRep0 + 1

Next i

RowRep0 = 14

Columns("A:M").AutoFit

'numero de dotaciones
Cells(posicionTotInicial + 2, ColRep0) = "Saldo Inicial"
Cells(posicionTotCompras + 2, ColRep0) = "Compras"
Cells(posicionTotDotaciones + 2, ColRep0) = "Dotaciones"
Cells(posicionTotDotacionesEmergentes + 2, ColRep0) = "Dotaciones Emergentes"
Cells(posicionTotTraspasosIn + 2, ColRep0) = "Recepci|fffd|n Traspaso"
Cells(posicionTotTraspasosOut + 2, ColRep0) = "Env|fffd|o Traspaso"
Cells(posicionTotFisico + 2, ColRep0) = "Saldo F|fffd|sico"
Cells(posicionTotEstimado + 2, ColRep0) = "Saldo Estimado"
''suma de dotaciones
Cells(posicionTotInicial + 2, ColRep0 + 1) = Format(valTotInicial, "$#,##0.00")
Cells(posicionTotCompras + 2, ColRep0 + 1) = Format(valTotCompras, "$#,##0.00")
Cells(posicionTotDotaciones + 2, ColRep0 + 1) = Format(valTotDotaciones, "$#,##0.00")
Cells(posicionTotDotacionesEmergentes + 2, ColRep0 + 1) = Format(valTotDotacionesEmergentes, "$#,##0.00")
Cells(posicionTotTraspasosIn + 2, ColRep0 + 1) = Format(valTotTraspasosIn, "$#,##0.00")
Cells(posicionTotTraspasosOut + 2, ColRep0 + 1) = Format(valTotTraspasosOut, "$#,##0.00")
Cells(posicionTotFisico + 2, ColRep0 + 1) = Format(valTotFisico, "$#,##0.00")
Cells(posicionTotEstimado + 2, ColRep0 + 1) = Format(valTotEstimado, "$#,##0.00")

'Datos generales
Cells(RowRep0 - 13, ColRep0) = "R E P O R T E    D E    S A L D O S"
Cells(RowRep0 - 12, ColRep0) = "Fecha operaci|fffd|n"
Cells(RowRep0 - 11, ColRep0) = "Responsable"
Cells(RowRep0 - 9, ColRep0) = "Total de Cajas Asignadas"

Cells(RowRep0 - 12, ColRep0 + 1) = Format(Now, "DD MMMM YYYY")
Cells(RowRep0 - 11, ColRep0 + 1) = NombrePlaneador


'''''''''''''''''''''''''''''FORMATO'''''''''''''''''''''''''''''''''''
'TITULO: DOTACIONES
Range(Cells(RowRep0 - 13, ColRep0), Cells(RowRep0 - 13, ColRepFin)).Select
With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    
With Selection.Font
        .Name = "Verdana"
        .size = 14
        .Color = -9043739
        .TintAndShade = 0
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .Bold = True
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 7733477
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
Rows("1:1").RowHeight = 23.25

'TITULO: DATOS GENERALES
Range(Cells(RowRep0 - 12, ColRep0), Cells(RowRep0 - 11, ColRep0)).Select
    
With Selection
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With


With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10.5
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
        .Bold = False
    End With
    
'Detalle Datos generales
Range(Cells(RowRep0 - 12, ColRep0 + 1), Cells(RowRep0 - 11, ColRepFin)).Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
        .Bold = True
    End With
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With

'Detalle total de dotaciones
Range(Cells(RowRep0 - 9, ColRep0), Cells(RowRep0 - 9, ColRep0 + 1)).Select
 With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 49407
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Selection.Font.Bold = True

    With Selection.Font
        .Color = -16777024
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .Bold = True
    End With



'encabezados tabla
Range(Cells(RowRep0 + 1, ColRep0), Cells(RowRep0 + 1, ColRepFin)).Select
With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With

With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
With Selection.Font
    .Name = "Verdana"
    .size = 10
    .ThemeColor = xlThemeColorLight1
    .TintAndShade = 0.249977111117893
    .Bold = True
End With

'detalle tabla
Range(Cells(RowRep0 + 1, ColRep0 - 1), Cells(UBound(DOTACIONES) + RowRep0 + 1, ColRepFin)).Select

With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
End With

Columns("B:B").AutoFit

Range("A15:C15", Range("A15:C15").End(xlDown)).Select
 With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
End With


'ORDENAR
Range(Cells(RowRep0 + 1, ColRep0), Cells(RowRep0 + 1, ColRepFin)).Select

Selection.AutoFilter
    ActiveSheet.AutoFilter.Sort.SortFields.Clear
    ActiveSheet.AutoFilter.Sort.SortFields.Add Key:= _
        Range(Cells(RowRep0 + 1, ColRepFin), Cells(RowRep0 + 1, ColRepFin)), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
        xlSortNormal
    With ActiveSheet.AutoFilter.Sort
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlBottomToTop
        .SortMethod = xlPinYin
        .Apply
    End With
    
'QUITAR FILTRO
    If ActiveSheet.AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        ActiveSheet.AutoFilterMode = False
        Else
            'MsgBox "no hay filtro"
        End If

'Quitar filas sin informaci|fffd|n

Cells(RowRep0 - 9, ColRep0).End(xlDown).Offset(2, 0).Select
depurarRow = ActiveCell.Row


Do While Cells(depurarRow, 2) = ""
ActiveCell.EntireRow.Select
Selection.Delete Shift:=xlUp

Loop

'mover a nuevo libro
    Sheets(nomCarpeta).Select
    Sheets(nomCarpeta).Move

'guardar

ActiveWorkbook.SaveAs Filename:=carpeta, FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False
ActiveWorkbook.Close True

REPORTE_SALDOS_CAJAS.Hide


If REPORTE_SALDOS_CAJAS.OptionButtonCorreo.value = True Then

            ''''''''''''''''''PARA CC CCO''''''''''''''''''''''''''''''''''''''
            'sh19 = "PARAMETROS"
            Sheets(sh19).Select
            Dim PARA, CC, CCO As String
            Dim MailDestRow As Long
            Dim MailDestCol As Integer
            
            MailDestRow = 38
            MailDestCol = 1
            PARA = ""
            CC = ""
            CCO = ""
            
            Do While Cells(MailDestRow, MailDestCol) <> ""
                
                If Cells(MailDestRow, MailDestCol) = "Para" Then
                PARA = PARA & ";" & Cells(MailDestRow, MailDestCol + 1).value
                
                ElseIf Cells(MailDestRow, MailDestCol) = "CC" Then
                CC = CC & ";" & Cells(MailDestRow, MailDestCol + 1).value
                
                ElseIf Cells(MailDestRow, MailDestCol) = "CCO" Then
                CCO = CCO & ";" & Cells(MailDestRow, MailDestCol + 1).value
                End If
            
            
            MailDestRow = MailDestRow + 1
            
            Loop
            
            'MsgBox PARA & Chr(10) & CC & Chr(10) & CCO
            
            'correo
             ''''''''''''''''''''''''''''''''CORREO'''''''''''''''''''''''''''''
            '                    Call CO3_1FormatoServicios
                            Dim OutApp, OutMail As Object
                            'Dim MiAdjunto As Outlook.Attachments
                            Dim Asunto, Mensaje1, Mensaje2, FirmaCompartamos As String
                            Dim ArchivoAdjunto As String
                            Dim Saludo As String
                            
                            'Saludo dependiendo la hora de ejecuci|fffd|n
                            If Hour(Now()) >= 12 Then
                            Saludo = "Buenas tardes,"
                            Else
                            Saludo = "Buenos d|fffd|as,"
                            End If
                            
                            'Asunto del correo
                            Asunto = "SALDOS CAJAS**  " & NombresDiasMayus(Weekday(Date, vbMonday)) & " " _
                                    & Day(Date) & " DE " & NombresMesesLargo(Month(Date))
                            
                            'Mensaje
                            'sh19 = "PARAMETROS"
                            'valTotInicial
                            'valTotCompras
                            'valTotDotaciones
                            'valTotTraspasosIn
                            'valTotTraspasosOut
                            'valTotFisico
                            'valTotEstimado
                            Mensaje = "Se env|fffd|an los saldos de cajas al d|fffd|a de hoy."
                            Mensaje1 = "N|fffd|mero de cajas = " & Format(UBound(DOTACIONES), "#,##0")
                            Mensaje3 = "Saldo Inicial = " & Format(valTotInicial, "$#,##0.00")
                            Mensaje4 = "Compras = " & Format(valTotCompras, "$#,##0.00")
                            Mensaje5 = "Dotaciones = " & Format(valTotDotaciones, "$#,##0.00")
                            Mensaje6 = "Dotaciones Emergentes = " & Format(valTotDotacionesEmergentes, "$#,##0.00")
                            Mensaje7 = "Recepci|fffd|n Traspasos = " & Format(valTotTraspasosIn, "$#,##0.00")
                            Mensaje8 = "Env|fffd|o Traspasos = " & Format(valTotTraspasosOut, "$#,##0.00")
                            Mensaje9 = "Saldo F|fffd|sico dia t = " & Format(valTotFisico, "$#,##0.00")
                            Mensaje10 = "Saldo Estimado dia t +1 = " & Format(valTotEstimado, "$#,##0.00")
                            
                            Mensaje2 = "Saludos,"
                            
                            
                            'Comprobar si Outlook esta abierto y en caso de no estarlo abrirlo
            
                            On Error Resume Next
                            Set OutApp = GetObject("", "Outlook.Application")
                            Err.Clear
                            
                            If OutApp Is Nothing Then
                            Set OutApp = CreateObject("Outlook.Application")
                            End If
            
                            
                            OutApp.Visible = True
                            
                            OutApp.session.logon
                            
                            'se crea m|fffd|todo de env|fffd|o de correo
                            Set OutMail = OutApp.CreateItem(0)
                            
                            
                            
                            'adjunto
                            'Set MiAdjunto = OutMail.Attachments
                            
                            
                            ''''''''''''''''''''''''''''''''''''''''''CORREO'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                            'el cuerpo del correo y los archivos a djuntos
                            On Error Resume Next
                            
                            With OutMail
                            '.MiAdjunto.Add ArchivoAdjunto
                            .To = PARA
                            .CC = CC
                            .BCC = CCO
                            .Subject = Asunto
                            .Attachments.Add carpeta & ".xlsx"
                            '.BodyFormat = 2 'olFormatRichText
                            '.Attachments.Add ArchivoAdjunto
                            .HTMLBody = "<html>" & _
                                "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6C6969"">" & Saludo & "<br>" & "<br>" & Mensaje & "</span style=""color:#6C6969"">" & "<p/>" _
                                & "<p style='font-family:verdana;font-size:18'>" & "<span style=""color:#E71743"">" & Mensaje1 & "<br>" & Mensaje3 & "<br>" & Mensaje4 & "<br>" & Mensaje5 & "<br>" & Mensaje6 & "<br>" & Mensaje7 & "<br>" & Mensaje8 & "<br>" & Mensaje9 & "<br>" & Mensaje10 & "<br>" & "<br>" & "</span style=""color:#E71743"">" _
                                & "<br>" & _
                                "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6C6969"">" & Mensaje2 & "<br>" _
                                & "<br>" & DATOS_USUARIO_WINDOWS(Environ("UserName"), 1) & "<br>" & _
                                "Tel. 5276-7250     Ext:    " & DATOS_USUARIO_WINDOWS(Environ("UserName"), 4) & "<br>" & _
                                DATOS_USUARIO_WINDOWS(Environ("UserName"), 5) & "</span style=""color:#6C6969"">" & "<p/>" & "<br>" & _
                                "<img src= " & Chr(34) & RutaLocal & NombreCarpetaCompartida & "\" & Catalogos & firmaImagen & Chr(34) _
                                & "</html>"
                                
                                
                                '' "<body>" "</body>"
                                
                            '.Attachments.Add firmaImagen, False
                            .display
                            
                            'Application.SendKeys "^{END}", True
                            'Application.SendKeys "{ENTER}", True
                            'Application.SendKeys "^v", True
                            'DoEvents
                            End With
                            
                            On Error GoTo 0
                            
                            Set OutMail = Nothing
                            Set OutApp = Nothing
                
End If

'regresar a archivo
Windows(CuWs).Activate
Sheets(cuSh).Select

  
End Sub



Attribute VB_Name = "CU_DEM"
Sub CU_1FormulasDemAcreditacion()
Call VariablesGlobales

'sh25 = "DEM"
Sheets(sh25).Select

Dim row0, col0, punteroEstatus, punteroSaldo, totReg As Long

'fila inicio de captura
row0 = 3
'columna para conteo de registros
col0 = 10

punteroEstatus = 1
punteroSaldo = 30

totReg = Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)).Count + 2
    
    Range(Cells(row0, punteroEstatus), Cells(totReg, punteroEstatus)).Select
    Selection.FormulaR1C1 = _
        "=IF(RC[11]=RC[29],""ACREDITADO"",IF(AND(RC[29]>0,RC[29]<RC[11]),""ACREDITADO PARCIAL"",""NO ACREDITADO""))"
    
    
    Range(Cells(row0, punteroSaldo), Cells(totReg, punteroSaldo)).Select
    Selection.FormulaR1C1 = "=RC[2]+RC[4]+RC[6]+RC[8]"

End Sub


Sub CU_2AgregarDemNuevo()
Call VariablesGlobales
'sh6 = "Procesar"

'sh25 = "DEM"
Sheets(sh25).Select

Dim row0, col0, punteroIdPlaza, punteroEtv, punteroIdSucursal, punteroDem, punteroImporte, totReg As Long
Dim row1, col1, totNuevos As Long
Dim DemExiste() As Variant
Dim DemNuevos() As Variant

'fila inicio de captura
row0 = 3
'columna para conteo de registros
col0 = 10

punteroIdPlaza = 2
punteroEtv = 3
punteroIdSucursal = 5
punteroDem = 11
punteroImporte = 12

totReg = Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)).Count + 2

ReDim DemExiste(totReg - 2, 5)


For i = 1 To UBound(DemExiste)
'ID PLAZA
DemExiste(i, 1) = Cells(row0, punteroIdPlaza)
'ETV
DemExiste(i, 2) = Cells(row0, punteroEtv)
'ID SUCURSAL
DemExiste(i, 3) = Cells(row0, punteroIdSucursal)
'DEM
DemExiste(i, 4) = Cells(row0, punteroDem)
'IMPORTE
DemExiste(i, 5) = Cells(row0, punteroImporte)

row0 = row0 + 1

Next i

''''''''''''HOJA PROCESAR''''''''''
Sheets(sh6).Select
row1 = 2
col1 = 10
totNuevos = Range(Cells(row1 - 1, col1), Cells(row1 - 1, col1).End(xlDown)).Count

If totNuevos > 1000000 Then
totNuevos = 1

Else

totNuevos = Range(Cells(row1 - 1, col1), Cells(row1 - 1, col1).End(xlDown)).Count

End If




ReDim DemNuevos(totNuevos - 1, 37)

For i = 1 To UBound(DemNuevos)

         
'1               'ID PLAZA
                DemNuevos(i, 1) = Cells(row1, punteroIdPlaza)
'2               'ETV
                DemNuevos(i, 2) = Cells(row1, punteroEtv)
                'PLAZA
                DemNuevos(i, 3) = Cells(row1, punteroEtv + 1)
'4               'ID SUCURSAL
                DemNuevos(i, 4) = Cells(row1, punteroIdSucursal)
                'SUCURSAL
                DemNuevos(i, 5) = Cells(row1, punteroIdSucursal + 1)
                'ETV SERVICIO
                DemNuevos(i, 6) = Cells(row1, punteroIdSucursal + 2)
                'FECHA PLANEACION
                DemNuevos(i, 7) = Cells(row1, punteroIdSucursal + 3)
                'FECHA SERVICIO
                DemNuevos(i, 8) = Cells(row1, punteroIdSucursal + 4)
                'TIPO SERVICIO
                DemNuevos(i, 9) = Cells(row1, punteroIdSucursal + 5)
                
'10              'DEM
                DemNuevos(i, 10) = Cells(row1, punteroDem)
                
'11              'IMPORTE
                DemNuevos(i, 11) = Cells(row1, punteroImporte)
                
                '1000
                DemNuevos(i, 12) = Cells(row1, punteroImporte + 1)
                '500
                DemNuevos(i, 13) = Cells(row1, punteroImporte + 2)
                '200
                DemNuevos(i, 14) = Cells(row1, punteroImporte + 3)
                '100
                DemNuevos(i, 15) = Cells(row1, punteroImporte + 4)
                '50
                DemNuevos(i, 16) = Cells(row1, punteroImporte + 5)
                '20
                DemNuevos(i, 17) = Cells(row1, punteroImporte + 6)
                'METALICA
                DemNuevos(i, 18) = Cells(row1, punteroImporte + 7)
                '100
                DemNuevos(i, 19) = Cells(row1, punteroImporte + 8)
                '20
                DemNuevos(i, 20) = Cells(row1, punteroImporte + 9)
                '10
                DemNuevos(i, 21) = Cells(row1, punteroImporte + 10)
                '5
                DemNuevos(i, 22) = Cells(row1, punteroImporte + 11)
                '2
                DemNuevos(i, 23) = Cells(row1, punteroImporte + 12)
                '1
                DemNuevos(i, 24) = Cells(row1, punteroImporte + 13)
                '.5
                DemNuevos(i, 25) = Cells(row1, punteroImporte + 14)
                '.2
                DemNuevos(i, 26) = Cells(row1, punteroImporte + 15)
                '.1
                DemNuevos(i, 27) = Cells(row1, punteroImporte + 16)
                '.05
                DemNuevos(i, 28) = Cells(row1, punteroImporte + 17)
                'IMPORTE ACREDITADO
                DemNuevos(i, 29) = Cells(row1, punteroImporte + 18)
                'FECHA ACREDITACI|fffd|N 1
                DemNuevos(i, 30) = Cells(row1, punteroImporte + 19)
                'PAGO ACREDITACI|fffd|N 1
                DemNuevos(i, 31) = Cells(row1, punteroImporte + 20)
                'FECHA ACREDITACI|fffd|N 2
                DemNuevos(i, 32) = Cells(row1, punteroImporte + 21)
                'PAGO ACREDITACI|fffd|N 2
                DemNuevos(i, 33) = Cells(row1, punteroImporte + 22)
                'FECHA ACREDITACI|fffd|N 3
                DemNuevos(i, 34) = Cells(row1, punteroImporte + 23)
                'PAGO ACREDITACI|fffd|N 3
                DemNuevos(i, 35) = Cells(row1, punteroImporte + 24)
                'FECHA ACREDITACI|fffd|N 4
                DemNuevos(i, 36) = Cells(row1, punteroImporte + 25)
                'PAGO ACREDITACI|fffd|N 4
                DemNuevos(i, 37) = Cells(row1, punteroImporte + 26)
        
    
row1 = row1 + 1

Next i

''''''''''''AGREGAR NUEVOS A DEM''''''''''
Sheets(sh25).Select

For j = 1 To UBound(DemNuevos)

    For i = 1 To UBound(DemExiste)
        
        If DemNuevos(j, 1) = DemExiste(i, 1) And DemNuevos(j, 2) = DemExiste(i, 2) _
        And DemNuevos(j, 4) = DemExiste(i, 3) And DemNuevos(j, 10) = DemExiste(i, 4) And _
        DemNuevos(j, 11) = DemExiste(i, 5) Then
            
            Exit For
        
        ElseIf i = UBound(DemExiste) Then
                
                'ID PLAZA
                Cells(totReg + 1, punteroIdPlaza) = DemNuevos(j, 1)
                'ETV
                Cells(totReg + 1, punteroEtv) = DemNuevos(j, 2)
                'PLAZA
                Cells(totReg + 1, punteroEtv + 1) = DemNuevos(j, 3)
                'ID SUCURSAL
                Cells(totReg + 1, punteroIdSucursal) = DemNuevos(j, 4)
                
                'SUCURSAL
                Cells(totReg + 1, punteroIdSucursal + 1) = DemNuevos(j, 5)
                'ETV SERVICIO
                Cells(totReg + 1, punteroIdSucursal + 2) = DemNuevos(j, 6)
                'FECHA PLANEACI|fffd|N
                Cells(totReg + 1, punteroIdSucursal + 3) = DemNuevos(j, 7)
                'FECHA SERVICIO
                Cells(totReg + 1, punteroIdSucursal + 4) = DemNuevos(j, 8)
                'TIPO SERVICIO
                Cells(totReg + 1, punteroIdSucursal + 5) = DemNuevos(j, 9)
                
                'DEM
                Cells(totReg + 1, punteroDem) = DemNuevos(j, 10)
                'IMPORTE
                Cells(totReg + 1, punteroImporte) = DemNuevos(j, 11)
                
                '1000
                Cells(totReg + 1, punteroImporte + 1) = DemNuevos(j, 12)
                '500
                Cells(totReg + 1, punteroImporte + 2) = DemNuevos(j, 13)
                '200
                Cells(totReg + 1, punteroImporte + 3) = DemNuevos(j, 14)
                '100
                Cells(totReg + 1, punteroImporte + 4) = DemNuevos(j, 15)
                '50
                Cells(totReg + 1, punteroImporte + 5) = DemNuevos(j, 16)
                '20
                Cells(totReg + 1, punteroImporte + 6) = DemNuevos(j, 17)
                'METALICA
                Cells(totReg + 1, punteroImporte + 7) = DemNuevos(j, 18)
                '100
                Cells(totReg + 1, punteroImporte + 8) = DemNuevos(j, 19)
                '20
                Cells(totReg + 1, punteroImporte + 9) = DemNuevos(j, 20)
                '10
                Cells(totReg + 1, punteroImporte + 10) = DemNuevos(j, 21)
                '5
                Cells(totReg + 1, punteroImporte + 11) = DemNuevos(j, 22)
                '2
                Cells(totReg + 1, punteroImporte + 12) = DemNuevos(j, 23)
                '1
                Cells(totReg + 1, punteroImporte + 13) = DemNuevos(j, 24)
                '.5
                Cells(totReg + 1, punteroImporte + 14) = DemNuevos(j, 25)
                '.2
                Cells(totReg + 1, punteroImporte + 15) = DemNuevos(j, 26)
                '.1
                Cells(totReg + 1, punteroImporte + 16) = DemNuevos(j, 27)
                '.05
                Cells(totReg + 1, punteroImporte + 17) = DemNuevos(j, 28)
                'IMPORTE ACREDITADO
                Cells(totReg + 1, punteroImporte + 18) = DemNuevos(j, 29)
                'FECHA ACREDITACI|fffd|N 1
                Cells(totReg + 1, punteroImporte + 19) = DemNuevos(j, 30)
                'PAGO ACREDITACI|fffd|N 1
                Cells(totReg + 1, punteroImporte + 20) = DemNuevos(j, 31)
                'FECHA ACREDITACI|fffd|N 2
                Cells(totReg + 1, punteroImporte + 21) = DemNuevos(j, 32)
                'PAGO ACREDITACI|fffd|N 2
                Cells(totReg + 1, punteroImporte + 22) = DemNuevos(j, 33)
                'FECHA ACREDITACI|fffd|N 3
                Cells(totReg + 1, punteroImporte + 23) = DemNuevos(j, 34)
                'PAGO ACREDITACI|fffd|N 3
                Cells(totReg + 1, punteroImporte + 24) = DemNuevos(j, 35)
                'FECHA ACREDITACI|fffd|N 4
                Cells(totReg + 1, punteroImporte + 25) = DemNuevos(j, 36)
                'PAGO ACREDITACI|fffd|N 4
                Cells(totReg + 1, punteroImporte + 26) = DemNuevos(j, 37)
                
        totReg = totReg + 1
        
        End If
    
    Next i
    
Next j

End Sub




''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Sub CU_3CorreoDem()

Call VariablesGlobales
Dim NombreArchivo As String
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta, carpeta, nomCarpeta As String
Dim CuWs, cuSh As String

'nombre del archivo
CuWs = ActiveWorkbook.Name
cuSh = ActiveSheet.Name

'limpiar hoja
'sh1 = "pm_PLANEACION_CAJAS"

'Ubicar fecha del reporte
fechaValor = Date

DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = RutaLocal & NombreCarpetaCompartida & "\" & RutaPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaci|fffd|n Log|fffd|stica Monetaria\" & _
DayLabel & " " & NombreMes & " " & YearLabel & " Planeaci|fffd|n"
nomCarpeta = DayLabel & MonthValor & YearLabel
NombreArchivo = nomCarpeta & " Reporte DEM " & UsuarioWin


carpeta = UnidadRuta & "\" & NombreArchivo

'MsgBox Carpeta

'MsgBox "UnidadRuta " & UnidadRuta & Chr(10) & "NombreArchivo " & NombreArchivo


''''''''''''''''''''''''''ARREGLO'''''''''''''''''''''''''''''
'sh18 = "ProgramacionDotaciones"
Sheets(sh1).Select


Dim Saldos() As Variant
Dim row0, col0, rowFin, colFin, RowRep0, ColRep0, ColRepFin As Long
Dim punteroTotInicial, punteroTotCompras, punteroTotDotaciones, punteroTotTraspasosOut, punteroTotTraspasosIn, punteroTotFisico, punteroTotEstimado As Integer
Dim posicionTotInicial, posicionTotCompras, posicionTotDotaciones, posicionTotDotacionesEmergentes, posicionTotTraspasosOut, posicionTotTraspasosIn, posicionTotFisico, posicionTotEstimado As Integer
Dim valTotInicial, valTotCompras, valTotDotaciones, valTotTraspasosOut, valTotTraspasosIn, valTotFisico, valTotEstimado As Double
Dim totDot As Long
Dim marcaConstante1 As String
Dim numMarca1, contadorSaldos As Integer

marcaConstante1 = "TOTALES"
contadorSaldos = 1

'''''''''''''''''''''''''''''VALORES DE FORMULARIO''''''''''''''''''''''''''''''''
Dim ordenCol As Integer
'incremental
ordenCol = 4
    
'est|fffd|tico
constanteInicio = 4
'total de columnas con informaci|fffd|n
totCol = 4
'Me.CheckBoxDemCaja.value = True
'Me.CheckBoxDemSucursal.value = True
'Me.CheckBoxTotalDem.value = True
'Me.CheckBoxAcreditacionDem.value = True
'Me.CheckBoxSaaldoDem.value = True

If REPORTE_SALDOS_CAJAS.CheckBoxDemCaja.value = True Then
posicionDemCaja = ordenCol
ordenCol = posicionDemCaja + 1
totCol = posicionDemCaja

Else

ordenCol = 4
totCol = posicionTotInicial

End If
'



If REPORTE_SALDOS_CAJAS.CheckBoxDemSucursal.value = True And ordenCol > constanteInicio Then
posicionDemSucursal = ordenCol
ordenCol = posicionDemSucursal + 1
totCol = posicionDemSucursal

ElseIf REPORTE_SALDOS_CAJAS.CheckBoxDemSucursal.value = True And ordenCol = constanteInicio Then
posicionDemSucursal = ordenCol
ordenCol = posicionDemSucursal + 1
totCol = posicionDemSucursal

End If

If REPORTE_SALDOS_CAJAS.CheckBoxTotalDem.value = True And ordenCol > constanteInicio Then
posicionTotalDem = ordenCol
ordenCol = posicionTotalDem + 1
totCol = posicionTotalDem

ElseIf REPORTE_SALDOS_CAJAS.CheckBoxTotalDem.value = True And ordenCol = constanteInicio Then
posicionTotalDem = ordenCol
ordenCol = posicionTotalDem + 1
totCol = posicionTotalDem

End If
        
If REPORTE_SALDOS_CAJAS.CheckBoxAcreditacionDem.value = True And ordenCol > constanteInicio Then
posicionAcreditacionDem = ordenCol
ordenCol = posicionAcreditacionDem + 1
totCol = posicionAcreditacionDem


ElseIf REPORTE_SALDOS_CAJAS.CheckBoxAcreditacionDem.value = True And ordenCol = constanteInicio Then
posicionAcreditacionDem = ordenCol
ordenCol = posicionAcreditacionDem + 1
totCol = posicionAcreditacionDem

End If



If REPORTE_SALDOS_CAJAS.CheckBoxSaaldoDem.value = True And ordenCol > constanteInicio Then
posicionSaaldoDem = ordenCol
ordenCol = posicionSaaldoDem + 1
totCol = posicionSaaldoDem

ElseIf REPORTE_SALDOS_CAJAS.CheckBoxSaaldoDem.value = True And ordenCol = constanteInicio Then
posicionSaaldoDem = ordenCol
ordenCol = posicionSaaldoDem + 1
totCol = posicionSaaldoDem

End If


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


'columna en hoja de datos
punteroDemCaja = 155
punteroDemSucursal = 156
punteroTotDem = 157
punteroAcreditacion = 158
punteroSaldoDem = 159

row0 = 3
col0 = 1
'columnas del reporte
RowRep0 = 15
ColRep0 = 2
ColRepFin = totCol

'medir filas
If Cells(row0 + 1, col0) = "" And Cells(row0 + 1, col0) = "" Then
MsgBox "NO HAY INFORMACI|fffd|N"
Exit Sub


ElseIf Cells(row0 + 2, col0) = "" And Cells(row0 + 3, col0) = "" Then
rowFin = 1

ElseIf (Range(Cells(row0 + 1, col0), Cells(row0 + 1, col0).End(xlDown)).Count) > 10000 Then
rowFin = 1

ElseIf (Range(Cells(row0 + 1, col0), Cells(row0 + 1, col0).End(xlDown)).Count) < 10000 Then
rowFin = (Range(Cells(row0 + 1, col0), Cells(row0 + 1, col0).End(xlDown)).Count)

End If

'numero de marca 1 TOTALES

numMarca1 = Application.WorksheetFunction.CountIf(Range(Cells(row0 + 1, col0), Cells(rowFin + 3, col0)), marcaConstante1)


'Dimensionar arreglo
ReDim Saldos(numMarca1, 8)

For i = 1 To rowFin + 3

    If Cells(row0 + 1, 1) = marcaConstante1 Then
        'ID PLAZA
        Saldos(contadorSaldos, 1) = Cells(row0 + 1, col0 + 1)
        'ETV
        Saldos(contadorSaldos, 2) = Cells(row0 + 1, col0 + 2)
        'PLAZA
        Saldos(contadorSaldos, 3) = Cells(row0 + 1, col0 + 3)
        'DEM CAJA
        Saldos(contadorSaldos, 4) = Cells(row0 + 1, punteroDemCaja)
        'DEM SUCURSAL
        Saldos(contadorSaldos, 5) = Cells(row0 + 1, punteroDemSucursal)
        'DEM TOTAL
        Saldos(contadorSaldos, 6) = Cells(row0 + 1, punteroTotDem)
        'ACREDITACI|fffd|N
        Saldos(contadorSaldos, 7) = Cells(row0 + 1, punteroAcreditacion)
        'SALDO DEM
        Saldos(contadorSaldos, 8) = Cells(row0 + 1, punteroSaldoDem)
        
        
        contadorSaldos = contadorSaldos + 1
        
    End If
    
    row0 = row0 + 1

Next i

'reestablecer Row0
row0 = 2
''
'MsgBox Saldos(19, 1) & Chr(10) & Saldos(19, 2) & _
'        Chr(10) & Saldos(19, 3) & Chr(10) & Saldos(19, 4) & _
'        Chr(10) & Saldos(19, 5) & Chr(10) & Saldos(19, 6) & _
'        Chr(10) & Saldos(19, 7) & Chr(10) & Saldos(19, 8) & _
'        Chr(10) & Saldos(19, 9) & Chr(10) & Saldos(19, 10) & _
'        Chr(10) & Saldos(19, 11) & Chr(10) & "UBOUND = " & UBound(Saldos)

'Agregar hoja
    Sheets.Add After:=ActiveSheet
    ActiveSheet.Select
    ActiveSheet.Name = nomCarpeta
    
''''''''''''''''''''''INSERTAR INFORMACI|fffd|N''''''''''''''''''''''''''''''''
On Error Resume Next
'encabezados
Cells(RowRep0, ColRep0 - 1) = "No."
'Cells(RowRep0, ColRep0) = "ID PLAZA"
Cells(RowRep0, ColRep0) = "PLAZA"
Cells(RowRep0, ColRep0 + 1) = "ETV"
Cells(RowRep0, posicionDemCaja) = "DEM CAJA"
Cells(RowRep0, posicionDemSucursal) = "DEM SUCURSAL"
Cells(RowRep0, posicionTotalDem) = "TOTAL DEM"
Cells(RowRep0, posicionAcreditacionDem) = "ACREDITACI|fffd|N"
Cells(RowRep0, posicionSaaldoDem) = "SALDO DEM"



valDemCaja = 0
valDemSucursal = 0
valTotDem = 0
valAcreditacion = 0
ValSaldoDem = 0

    
'dotaciones
For i = 1 To UBound(Saldos)
    'No
    Cells(RowRep0 + 1, ColRep0 - 1) = i
    'PLAZA
    Cells(RowRep0 + 1, ColRep0) = Saldos(i, 3)
    'ETV
    Cells(RowRep0 + 1, ColRep0 + 1) = Saldos(i, 2)
    'DEM CAJA
    Cells(RowRep0 + 1, ColRep0 + 2) = Saldos(i, 4)
    'DEM SUCURSAL
    Cells(RowRep0 + 1, ColRep0 + 3) = Saldos(i, 5)
    'DEM TOTALES
    Cells(RowRep0 + 1, ColRep0 + 4) = Saldos(i, 6)
    'ACREDITACI|fffd|N
    Cells(RowRep0 + 1, ColRep0 + 5) = Saldos(i, 7)
    'SALDO DEM
    Cells(RowRep0 + 1, ColRep0 + 6) = Saldos(i, 8)
    
    
    'totales
    valDemCaja = valDemCaja + Saldos(i, 4)
    valDemSucursal = valDemSucursal + Saldos(i, 5)
    valTotDem = valTotDem + Saldos(i, 6)
    valAcreditacion = valAcreditacion + Saldos(i, 7)
    ValSaldoDem = ValSaldoDem + Saldos(i, 8)
    
RowRep0 = RowRep0 + 1

Next i

RowRep0 = 14

Columns("A:M").AutoFit

'numero de dotaciones
Cells(posicionDemCaja + 2, ColRep0) = "DEM CAJA"
Cells(posicionDemSucursal + 2, ColRep0) = "DEM SUCURSAL"
Cells(posicionTotalDem + 2, ColRep0) = "TOTAL DEM"
Cells(posicionAcreditacionDem + 2, ColRep0) = "ACREDITACI|fffd|N"
Cells(posicionSaaldoDem + 2, ColRep0) = "SALDO DEM"

''suma de dotaciones
Cells(posicionDemCaja + 2, ColRep0 + 1) = Format(valDemCaja, "$#,##0.00")
Cells(posicionDemSucursal + 2, ColRep0 + 1) = Format(valDemSucursal, "$#,##0.00")
Cells(posicionTotalDem + 2, ColRep0 + 1) = Format(valTotDem, "$#,##0.00")
Cells(posicionAcreditacionDem + 2, ColRep0 + 1) = Format(valAcreditacion, "$#,##0.00")
Cells(posicionSaaldoDem + 2, ColRep0 + 1) = Format(ValSaldoDem, "$#,##0.00")


'Datos generales
Cells(RowRep0 - 13, ColRep0) = "R E P O R T E    D E M"
Cells(RowRep0 - 12, ColRep0) = "Fecha operaci|fffd|n"
Cells(RowRep0 - 11, ColRep0) = "Responsable"
Cells(RowRep0 - 9, ColRep0) = "Total de Cajas Asignadas"

Cells(RowRep0 - 12, ColRep0 + 1) = Format(Now, "DD MMMM YYYY")
Cells(RowRep0 - 11, ColRep0 + 1) = NombrePlaneador


'''''''''''''''''''''''''''''FORMATO'''''''''''''''''''''''''''''''''''
'TITULO: DOTACIONES
Range(Cells(RowRep0 - 13, ColRep0), Cells(RowRep0 - 13, ColRepFin)).Select
With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    
With Selection.Font
        .Name = "Verdana"
        .size = 14
        .Color = -9043739
        .TintAndShade = 0
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .Bold = True
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 7733477
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
Rows("1:1").RowHeight = 23.25

'TITULO: DATOS GENERALES
Range(Cells(RowRep0 - 12, ColRep0), Cells(RowRep0 - 11, ColRep0)).Select
    
With Selection
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With


With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10.5
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
        .Bold = False
    End With
    
'Detalle Datos generales
Range(Cells(RowRep0 - 12, ColRep0 + 1), Cells(RowRep0 - 11, ColRepFin)).Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
        .Bold = True
    End With
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With

'Detalle total de dotaciones
Range(Cells(RowRep0 - 9, ColRep0), Cells(RowRep0 - 9, ColRep0 + 1)).Select
 With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 49407
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Selection.Font.Bold = True

    With Selection.Font
        .Color = -16777024
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .Bold = True
    End With



'encabezados tabla
Range(Cells(RowRep0 + 1, ColRep0), Cells(RowRep0 + 1, ColRepFin)).Select
With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With

With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
With Selection.Font
    .Name = "Verdana"
    .size = 10
    .ThemeColor = xlThemeColorLight1
    .TintAndShade = 0.249977111117893
    .Bold = True
End With

'detalle tabla
Range(Cells(RowRep0 + 1, ColRep0 - 1), Cells(UBound(DOTACIONES) + RowRep0 + 1, ColRepFin)).Select

With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
End With

Columns("B:B").AutoFit

Range("A15:C15", Range("A15:C15").End(xlDown)).Select
 With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
End With


'ORDENAR
Range(Cells(RowRep0 + 1, ColRep0), Cells(RowRep0 + 1, ColRepFin)).Select

Selection.AutoFilter
    ActiveSheet.AutoFilter.Sort.SortFields.Clear
    ActiveSheet.AutoFilter.Sort.SortFields.Add Key:= _
        Range(Cells(RowRep0 + 1, ColRepFin), Cells(RowRep0 + 1, ColRepFin)), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
        xlSortNormal
    With ActiveSheet.AutoFilter.Sort
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlBottomToTop
        .SortMethod = xlPinYin
        .Apply
    End With
    
'QUITAR FILTRO
    If ActiveSheet.AutoFilterMode = True Then
        'MsgBox "si hay filtro"
        ActiveSheet.AutoFilterMode = False
        Else
            'MsgBox "no hay filtro"
        End If

'Quitar filas sin informaci|fffd|n

Cells(RowRep0 - 9, ColRep0).End(xlDown).Offset(2, 0).Select
depurarRow = ActiveCell.Row


Do While Cells(depurarRow, 2) = ""
ActiveCell.EntireRow.Select
Selection.Delete Shift:=xlUp

Loop

'mover a nuevo libro
    Sheets(nomCarpeta).Select
    Sheets(nomCarpeta).Move

'guardar

ActiveWorkbook.SaveAs Filename:=carpeta, FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False
ActiveWorkbook.Close True

REPORTE_SALDOS_CAJAS.Hide


If REPORTE_SALDOS_CAJAS.OptionButtonCorreoDem.value = True Then

            ''''''''''''''''''PARA CC CCO''''''''''''''''''''''''''''''''''''''
            'sh19 = "PARAMETROS"
            Sheets(sh19).Select
            Dim PARA, CC, CCO As String
            Dim MailDestRow As Long
            Dim MailDestCol As Integer
            
            MailDestRow = 38
            MailDestCol = 1
            PARA = ""
            CC = ""
            CCO = ""
            
            Do While Cells(MailDestRow, MailDestCol) <> ""
                
                If Cells(MailDestRow, MailDestCol) = "Para" Then
                PARA = PARA & ";" & Cells(MailDestRow, MailDestCol + 1).value
                
                ElseIf Cells(MailDestRow, MailDestCol) = "CC" Then
                CC = CC & ";" & Cells(MailDestRow, MailDestCol + 1).value
                
                ElseIf Cells(MailDestRow, MailDestCol) = "CCO" Then
                CCO = CCO & ";" & Cells(MailDestRow, MailDestCol + 1).value
                End If
            
            
            MailDestRow = MailDestRow + 1
            
            Loop
            
            'MsgBox PARA & Chr(10) & CC & Chr(10) & CCO
            
            'correo
             ''''''''''''''''''''''''''''''''CORREO'''''''''''''''''''''''''''''
            '                    Call CO3_1FormatoServicios
                            Dim OutApp, OutMail As Object
                            'Dim MiAdjunto As Outlook.Attachments
                            Dim Asunto, Mensaje1, Mensaje2, FirmaCompartamos As String
                            Dim ArchivoAdjunto As String
                            Dim Saludo As String
                            
                            'Saludo dependiendo la hora de ejecuci|fffd|n
                            If Hour(Now()) >= 12 Then
                            Saludo = "Buenas tardes,"
                            Else
                            Saludo = "Buenos d|fffd|as,"
                            End If
                            
                            'Asunto del correo
                            Asunto = "DEM **  " & NombresDiasMayus(Weekday(Date, vbMonday)) & " " _
                                    & Day(Date) & " DE " & NombresMesesLargo(Month(Date))
                            
                            'Mensaje
                            'sh19 = "PARAMETROS"
                            'valTotInicial
                            'valTotCompras
                            'valTotDotaciones
                            'valTotTraspasosIn
                            'valTotTraspasosOut
                            'valTotFisico
                            'valTotEstimado
                            Mensaje = "Se env|fffd|an los movimientos DEM al d|fffd|a de hoy."
                            Mensaje1 = "N|fffd|mero de cajas = " & Format(UBound(DOTACIONES), "#,##0")
                            Mensaje3 = "DEM Cajas = " & Format(valDemCaja, "$#,##0.00")
                            Mensaje4 = "DEM Sucursal = " & Format(valDemSucursal, "$#,##0.00")
                            Mensaje5 = "Total DEM = " & Format(valTotDem, "$#,##0.00")
                            Mensaje6 = "Acreditaci|fffd|n = " & Format(valAcreditacion, "$#,##0.00")
                            Mensaje7 = "Saldo DEM = " & Format(ValSaldoDem, "$#,##0.00")


                            Mensaje2 = "Saludos,"
                            
                            
                            'Comprobar si Outlook esta abierto y en caso de no estarlo abrirlo
            
                            On Error Resume Next
                            Set OutApp = GetObject("", "Outlook.Application")
                            Err.Clear
                            
                            If OutApp Is Nothing Then
                            Set OutApp = CreateObject("Outlook.Application")
                            End If
            
                            
                            OutApp.Visible = True
                            
                            OutApp.session.logon
                            
                            'se crea m|fffd|todo de env|fffd|o de correo
                            Set OutMail = OutApp.CreateItem(0)
                            
                            
                            
                            'adjunto
                            'Set MiAdjunto = OutMail.Attachments
                            
                            
                            ''''''''''''''''''''''''''''''''''''''''''CORREO'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                            'el cuerpo del correo y los archivos a djuntos
                            On Error Resume Next
                            
                            With OutMail
                            '.MiAdjunto.Add ArchivoAdjunto
                            .To = PARA
                            .CC = CC
                            .BCC = CCO
                            .Subject = Asunto
                            .Attachments.Add carpeta & ".xlsx"
                            '.BodyFormat = 2 'olFormatRichText
                            '.Attachments.Add ArchivoAdjunto
                            .HTMLBody = "<html>" & _
                                "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6C6969"">" & Saludo & "<br>" & "<br>" & Mensaje & "</span style=""color:#6C6969"">" & "<p/>" _
                                & "<p style='font-family:verdana;font-size:18'>" & "<span style=""color:#E71743"">" & Mensaje1 & "<br>" & Mensaje3 & "<br>" & Mensaje4 & "<br>" & Mensaje5 & "<br>" & Mensaje6 & "<br>" & Mensaje7 & "<br>" & "<br>" & "</span style=""color:#E71743"">" _
                                & "<br>" & _
                                "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6C6969"">" & Mensaje2 & "<br>" _
                                & "<br>" & DATOS_USUARIO_WINDOWS(Environ("UserName"), 1) & "<br>" & _
                                "Tel. 5276-7250     Ext:    " & DATOS_USUARIO_WINDOWS(Environ("UserName"), 4) & "<br>" & _
                                DATOS_USUARIO_WINDOWS(Environ("UserName"), 5) & "</span style=""color:#6C6969"">" & "<p/>" & "<br>" & _
                                "<img src= " & Chr(34) & RutaLocal & NombreCarpetaCompartida & "\" & Catalogos & firmaImagen & Chr(34) _
                                & "</html>"
                                
                                
                                '' "<body>" "</body>"
                                
                            '.Attachments.Add firmaImagen, False
                            .display
                            
                            'Application.SendKeys "^{END}", True
                            'Application.SendKeys "{ENTER}", True
                            'Application.SendKeys "^v", True
                            'DoEvents
                            End With
                            
                            On Error GoTo 0
                            
                            Set OutMail = Nothing
                            Set OutApp = Nothing
                
End If

'regresar a archivo
Windows(CuWs).Activate
Sheets(cuSh).Select

  
End Sub


Sub CU_4DemDiaDinamico()

'CREAR CARPETAS
Call CA00_MacroCrearCarpetas

Call VariablesGlobales

Dim NombreArchivo, RutaArchivo As String
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String
Dim punteroImporte, sumaDem As Long

punteroImporte = 12

'Ubicar fecha del reporte
'FechaValor = Date
'
'
'DayValor = Day(FechaValor)
'MonthValor = Month(FechaValor)
'YearValor = Year(FechaValor)

'A|fffd|o etiqueta
YearLabel = DEM_DINAMICO.ComboAnioDem.value

'D|fffd|a etiqueta
If Len(DEM_DINAMICO.ComboDiaDem.value) = 1 Then
    DayLabel = "0" & DEM_DINAMICO.ComboDiaDem.value
Else
    DayLabel = DEM_DINAMICO.ComboDiaDem.value
End If

'Mes etiqueta
NombreMes = DEM_DINAMICO.ComboMesesDem.value

'MonthLabel

Select Case CStr(NombreMes)
Case "ENERO"
MonthLabel = "01"
Case "FEBRERO"
MonthLabel = "02"
Case "MARZO"
MonthLabel = "03"
Case "ABRIL"
MonthLabel = "04"
Case "MAYO"
MonthLabel = "05"
Case "JUNIO"
MonthLabel = "06"
Case "JULIO"
MonthLabel = "07"
Case "AGOSTO"
MonthLabel = "08"
Case "SEPTIEMBRE"
MonthLabel = "09"
Case "OCTUBRE"
MonthLabel = "10"
Case "NOVIEMBRE"
MonthLabel = "11"
Case "DICIEMBRE"
MonthLabel = "12"
End Select


UnidadRuta = UnidadAsignada & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"

'* " DEM" & ".txt"
RutaArchivo = UnidadRuta & "\" & fechaCarpeta


'sh6 = "Procesar"
'sh25 = "DEM"
Sheets(sh6).Select
Cells.Clear

'MsgBox RutaArchivo



On Error GoTo Salir:

'abrir archivos de carpeta indicada
ChDrive (UnidadAsignada)
ChDir (RutaArchivo)
archi = Dir("* DEM.txt")
 
'MsgBox "archi " & archi.Name '& Chr(10) & "archi.path " & archi.Path

        'si no hay archivos finalizar
        If archi = "" Then
        Sheets(sh25).Select
        MsgBox "NO HAY INFORMACI|fffd|N"
        Exit Sub
        End If

rango = "A1"

  Do While archi <> ""
    
        With ActiveSheet.QueryTables.Add(Connection:="TEXT;" & _
         RutaArchivo & "\" & archi, Destination:=Range(rango)) '<===========
        .Name = archi
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierNone
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileOtherDelimiter = "|"
        .TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    End With
    
    'ORDENAR
    ActiveWorkbook.Worksheets(sh6).Sort.SortFields.Clear
    ActiveWorkbook.Worksheets(sh6).Sort.SortFields.Add Key:=Range( _
        "A1:A1000000"), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets(sh6).Sort
        .SetRange Range("A1:AQ1000000")
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
     fila = Range("A" & Rows.Count).End(xlUp).Row + 1 '<====================
     rango = Range("A" & fila).Address '<======================
    
    'Otras Opciones
    'milibro = ActiveWorkbook.Name
     archi = Dir()
  Loop '<========================================



'QUITAR FILAS ENCABEZADOS
Sheets(sh6).Select
nColumnas = Cells(1, 235).End(xlToLeft).Column
X = 1
Y = 1
NFilas = 0

Do While Cells(X, Y) <> ""

    If Cells(X, Y) = "Estatus Acreditaci|fffd|n" Or Cells(X, Y) = "" Then
    Range(Cells(X, Y), Cells(X, nColumnas)).ClearContents
    NFilas = NFilas - 1
    Else
    NFilas = NFilas + 1
    End If


X = X + 1

Loop

'REGRESAR VALOR DE X
X = 1

'ORDENAR
    ActiveWorkbook.Worksheets(sh6).Sort.SortFields.Clear
    ActiveWorkbook.Worksheets(sh6).Sort.SortFields.Add Key:=Range( _
        "A1:A1000000"), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets(sh6).Sort
        .SetRange Range("A1:AQ1000000")
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
'SELECCIONAR Y COPIAR
'MsgBox NFilas

Range(Cells(X, Y), Cells(NFilas, nColumnas)).Copy

'IR A |fffd|LTIMA FILA
Sheets(sh25).Select
If Cells(3, 1) = "" And Cells(4, 1) = "" Then
rowPuntero = 3

ElseIf Cells(3, 1).End(xlDown).Row > 1000000 Then
rowPuntero = 3

Else

rowPuntero = Cells(3, 1).End(xlDown).Row + 1

End If

Cells(rowPuntero, 1).Select
Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False

Application.CutCopyMode = False

On Error GoTo 0

'formulas de estatus
Call CP_4FormulasDem

'limpiar querys
Call DeleteQueryImportaciones
    
    
    
Exit Sub
Salir:
Sheets(sh25).Select
MsgBox "No hay archivos en esa fecha"

End Sub





Sub CU_5DemArrastre()

'CREAR CARPETAS
Call CA00_MacroCrearCarpetas

Call VariablesGlobales

Dim NombreArchivo, RutaArchivo As String
Dim i, j, NFilas, nColumnas As Integer
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String
Dim punteroImporte, sumaDem As Long

punteroImporte = 12

'Ubicar fecha del reporte
'FechaValor = Date
'
'
'DayValor = Day(FechaValor)
'MonthValor = Month(FechaValor)
'YearValor = Year(FechaValor)

'A|fffd|o etiqueta
YearLabel = DEM_DINAMICO.ComboBoxAnioArrastre.value

'D|fffd|a etiqueta
If Len(DEM_DINAMICO.ComboBoxDiaArrastre.value) = 1 Then
    DayLabel = "0" & DEM_DINAMICO.ComboBoxDiaArrastre.value
Else
    DayLabel = DEM_DINAMICO.ComboBoxDiaArrastre.value
End If

'Mes etiqueta
NombreMes = DEM_DINAMICO.ComboBoxMesArrastre.value

'MonthLabel

Select Case CStr(NombreMes)
Case "ENERO"
MonthLabel = "01"
Case "FEBRERO"
MonthLabel = "02"
Case "MARZO"
MonthLabel = "03"
Case "ABRIL"
MonthLabel = "04"
Case "MAYO"
MonthLabel = "05"
Case "JUNIO"
MonthLabel = "06"
Case "JULIO"
MonthLabel = "07"
Case "AGOSTO"
MonthLabel = "08"
Case "SEPTIEMBRE"
MonthLabel = "09"
Case "OCTUBRE"
MonthLabel = "10"
Case "NOVIEMBRE"
MonthLabel = "11"
Case "DICIEMBRE"
MonthLabel = "12"
End Select


UnidadRuta = UnidadAsignada & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"

'* " DEM" & ".txt"
RutaArchivo = UnidadRuta & "\" & fechaCarpeta


'sh6 = "Procesar"
'sh25 = "DEM"
Sheets(sh6).Select
Cells.Clear

'MsgBox RutaArchivo



On Error GoTo Salir:

'abrir archivos de carpeta indicada
ChDrive (UnidadAsignada)
ChDir (RutaArchivo)
archi = Dir("*DEM Arrastre.txt")
 
'MsgBox "archi " & archi.Name '& Chr(10) & "archi.path " & archi.Path

        'si no hay archivos finalizar
        If archi = "" Then
        Sheets(sh25).Select
        MsgBox "NO HAY INFORMACI|fffd|N"
        Exit Sub
        End If

rango = "A1"

  Do While archi <> ""
    
        With ActiveSheet.QueryTables.Add(Connection:="TEXT;" & _
         RutaArchivo & "\" & archi, Destination:=Range(rango)) '<===========
        .Name = archi
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = 1252
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierNone
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = False
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileOtherDelimiter = "|"
        .TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    End With
    
    'ORDENAR
    ActiveWorkbook.Worksheets(sh6).Sort.SortFields.Clear
    ActiveWorkbook.Worksheets(sh6).Sort.SortFields.Add Key:=Range( _
        "A1:A1000000"), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets(sh6).Sort
        .SetRange Range("A1:AQ1000000")
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
     fila = Range("A" & Rows.Count).End(xlUp).Row + 1 '<====================
     rango = Range("A" & fila).Address '<======================
    
    'Otras Opciones
    'milibro = ActiveWorkbook.Name
     archi = Dir()
  Loop '<========================================



'QUITAR FILAS ENCABEZADOS
Sheets(sh6).Select
nColumnas = Cells(1, 235).End(xlToLeft).Column
X = 1
Y = 1
NFilas = 0

Do While Cells(X, Y) <> ""

    If Cells(X, Y) = "Estatus Acreditaci|fffd|n" Or Cells(X, Y) = "" Then
    Range(Cells(X, Y), Cells(X, nColumnas)).ClearContents
    NFilas = NFilas - 1
    Else
    NFilas = NFilas + 1
    End If


X = X + 1

Loop

'REGRESAR VALOR DE X
X = 1

'ORDENAR
    ActiveWorkbook.Worksheets(sh6).Sort.SortFields.Clear
    ActiveWorkbook.Worksheets(sh6).Sort.SortFields.Add Key:=Range( _
        "A1:A1000000"), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets(sh6).Sort
        .SetRange Range("A1:AQ1000000")
        .Header = xlGuess
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
'SELECCIONAR Y COPIAR
'MsgBox NFilas

Range(Cells(X, Y), Cells(NFilas, nColumnas)).Copy

'IR A |fffd|LTIMA FILA
Sheets(sh25).Select
If Cells(3, 1) = "" And Cells(4, 1) = "" Then
rowPuntero = 3

ElseIf Cells(3, 1).End(xlDown).Row > 1000000 Then
rowPuntero = 3

Else

rowPuntero = Cells(3, 1).End(xlDown).Row + 1

End If

Cells(rowPuntero, 1).Select
Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False

Application.CutCopyMode = False

On Error GoTo 0

'formulas de estatus
Call CP_4FormulasDem

'limpiar querys
Call DeleteQueryImportaciones
    
    
    
Exit Sub
Salir:
Sheets(sh25).Select
MsgBox "No hay archivos en esa fecha"

End Sub


Sub CU_6DemLimpiar()


Call VariablesGlobales
Dim row0, col0, colFin, rowFin As Long

row0 = 3
col0 = 1
colFin = Cells(row0 - 1, 230).End(xlToLeft).Column + 5
rowFin = Cells(row0, col0).End(xlDown).Row


''sh25 = "DEM"
Sheets(sh25).Select
Range(Cells(row0, col0), Cells(rowFin, colFin)).ClearContents
'Cells.Clear

End Sub


Sub CU_7ReporteRegulatorioPlazasEtvOemn1()


hora1 = Now()

Call VariablesGlobales
''sh25 = "DEM"
Sheets(sh25).Select
Dim DemInfo() As Variant
Dim totRow, totCol, contador As Long
Dim col0, row0, punteroEtv, punteroEtvServicio, punteroplaza, punteroIdSuc, punteroFecha, punteroImporte, punteroBill100, punteroCoin100 As Integer
Dim importeValidarSuma, importeValidarDenominaciones As Double
col0 = 1
row0 = 3
punteroEtv = 3
punteroEtvServicio = 7
punteroIdSuc = 5
punteroplaza = 4
punteroFecha = 9
punteroImporte = 12
punteroBill100 = 13
punteroCoin100 = 20
totCol = 26
contador = 1

If Cells(row0 - 1, col0).End(xlDown).Row > 1000000 Then

totRow = 3

Else

totRow = Cells(row0 - 1, col0).End(xlDown).Row

End If

ReDim DemInfo(totRow, totCol)

''''''''''''''''''''''''ARREGLO INFORMACI|fffd|N DISPONIBLE'''''''''''''''''''''

Do While Cells(row0, col0) <> ""
    
    'ETV
    DemInfo(contador, 2) = Cells(row0, punteroEtv)
    'ETV SERVICIO
    DemInfo(contador, 3) = Cells(row0, punteroEtvServicio)
    'PLAZA
    DemInfo(contador, 4) = Cells(row0, punteroplaza)
    'ID SUCURSAL
    DemInfo(contador, 5) = Cells(row0, punteroIdSuc)
    
    'ORIGEN
    If Len(Cells(row0, punteroIdSuc)) > 3 Then
    DemInfo(contador, 6) = "SUCURSAL"
    'ETV SERVICIO & ID SUCURSAL
    DemInfo(contador, 1) = Cells(row0, punteroEtvServicio) & Cells(row0, punteroIdSuc)
    Else
    DemInfo(contador, 6) = "CAJA"
    'ETV SERVICIO & PLAZA & ETV
    DemInfo(contador, 1) = Cells(row0, punteroEtvServicio) & Cells(row0, punteroplaza) & Cells(row0, punteroEtv)
    
    End If
    
    'FECHA
    DemInfo(contador, 7) = Cells(row0, punteroFecha)
    'MES
    DemInfo(contador, 8) = NombresMesesLargo(Month(Cells(row0, punteroFecha)))
    'IMPORTE
    DemInfo(contador, 9) = Cells(row0, punteroImporte)
    'BILLETE 1000
    DemInfo(contador, 10) = Cells(row0, punteroBill100)
    'BILLETE 500
    DemInfo(contador, 11) = Cells(row0, punteroBill100 + 1)
    'BILLETE 200
    DemInfo(contador, 12) = Cells(row0, punteroBill100 + 2)
    'BILLETE 100
    DemInfo(contador, 13) = Cells(row0, punteroBill100 + 3)
    'BILLETE 50
    DemInfo(contador, 14) = Cells(row0, punteroBill100 + 4)
    'BILLETE 20
    DemInfo(contador, 15) = Cells(row0, punteroBill100 + 5)
    'MONEDA 100
    DemInfo(contador, 16) = Cells(row0, punteroCoin100)
    'MONEDA 20
    DemInfo(contador, 17) = Cells(row0, punteroCoin100 + 1)
    'MONEDA 10
    DemInfo(contador, 18) = Cells(row0, punteroCoin100 + 2)
    'MONEDA 5
    DemInfo(contador, 19) = Cells(row0, punteroCoin100 + 3)
    'MONEDA 2
    DemInfo(contador, 20) = Cells(row0, punteroCoin100 + 4)
    'MONEDA 1
    DemInfo(contador, 21) = Cells(row0, punteroCoin100 + 5)
    'MONEDA .5
    DemInfo(contador, 22) = Cells(row0, punteroCoin100 + 6)
    'MONEDA .2
    DemInfo(contador, 23) = Cells(row0, punteroCoin100 + 7)
    'MONEDA .1
    DemInfo(contador, 24) = Cells(row0, punteroCoin100 + 8)
    'MONEDA .05
    DemInfo(contador, 25) = Cells(row0, punteroCoin100 + 9)
    'UNIDAD
    DemInfo(contador, 26) = 1
    
    'Validar total importe vs total por denominaciones
    importeValidarSuma = Cells(row0, punteroImporte)
    importeValidarDenominaciones = Cells(row0, punteroBill100) + Cells(row0, punteroBill100 + 1) + _
    Cells(row0, punteroBill100 + 2) + Cells(row0, punteroBill100 + 3) + Cells(row0, punteroBill100 + 4) + Cells(row0, punteroBill100 + 5) + _
    Cells(row0, punteroCoin100) + Cells(row0, punteroCoin100 + 1) + Cells(row0, punteroCoin100 + 2) + Cells(row0, punteroCoin100 + 3) + _
    Cells(row0, punteroCoin100 + 4) + Cells(row0, punteroCoin100 + 5) + Cells(row0, punteroCoin100 + 6) + Cells(row0, punteroCoin100 + 7) + _
    Cells(row0, punteroCoin100 + 8) + Cells(row0, punteroCoin100 + 9)
    
    If importeValidarSuma - importeValidarDenominaciones <> 0 Then
    MsgBox "|fffd||fffd| DIFERENCIA !!" & Chr(10) & "IMPORTE TOTAL diferente a suma de DENOMINACIONES" & Chr(10) & Chr(10) & _
    "Registro en fila: " & row0 & Chr(10) & "Importe: " & Format(importeValidarSuma, "$###,##0.00") & Chr(10) & "Denominaciones: " & Format(importeValidarDenominaciones, "$###,##0.00") & Chr(10) _
    & "Diferencia: " & Format(importeValidarSuma - importeValidarDenominaciones, "$###,##0.00")
    Range(Cells(row0, 12), Cells(row0, 12)).EntireRow.Select
    Exit Sub
    End If
    
    'validar denominaciones BILLETES 1,000
    If Cells(row0, punteroBill100) > 0 And Cells(row0, punteroBill100) Mod 1000 <> 0 Then
    MsgBox "|fffd||fffd| DIFERENCIA !!" & Chr(10) & "IMPORTE DE BILLETES DE $1,000.00 NO FRACCIONABLE" & Chr(10) & Chr(10) & _
    "Registro en fila: " & row0 & Chr(10) & "Importe: " & Format(Cells(row0, punteroBill100), "$###,##0.00") & Chr(10) _
    & "Diferencia: " & Format(Cells(row0, punteroBill100) Mod 1000, "$###,##0.00")
    Range(Cells(row0, 12), Cells(row0, 12)).EntireRow.Select
    Exit Sub
    End If
    
    'validar denominaciones BILLETES 500
    If Cells(row0, punteroBill100 + 1) > 0 And Cells(row0, punteroBill100 + 1) Mod 500 <> 0 Then
    MsgBox "|fffd||fffd| DIFERENCIA !!" & Chr(10) & "IMPORTE DE BILLETES DE $500.00 NO FRACCIONABLE" & Chr(10) & Chr(10) & _
    "Registro en fila: " & row0 & Chr(10) & "Importe: " & Format(Cells(row0, punteroBill100 + 1), "$###,##0.00") & Chr(10) _
    & "Diferencia: " & Format(Cells(row0, punteroBill100 + 1) Mod 500, "$###,##0.00")
    Range(Cells(row0, 12), Cells(row0, 12)).EntireRow.Select
    Exit Sub
    End If
    
    'validar denominaciones BILLETES 200
    If Cells(row0, punteroBill100 + 2) > 0 And Cells(row0, punteroBill100 + 2) Mod 200 <> 0 Then
    MsgBox "|fffd||fffd| DIFERENCIA !!" & Chr(10) & "IMPORTE DE BILLETES DE $200.00 NO FRACCIONABLE" & Chr(10) & Chr(10) & _
    "Registro en fila: " & row0 & Chr(10) & "Importe: " & Format(Cells(row0, punteroBill100 + 2), "$###,##0.00") & Chr(10) _
    & "Diferencia: " & Format(Cells(row0, punteroBill100 + 2) Mod 200, "$###,##0.00")
    Range(Cells(row0, 12), Cells(row0, 12)).EntireRow.Select
    Exit Sub
    End If
    
    'validar denominaciones BILLETES 100
    If Cells(row0, punteroBill100 + 3) > 0 And Cells(row0, punteroBill100 + 3) Mod 100 <> 0 Then
    MsgBox "|fffd||fffd| DIFERENCIA !!" & Chr(10) & "IMPORTE DE BILLETES DE $100.00 NO FRACCIONABLE" & Chr(10) & Chr(10) & _
    "Registro en fila: " & row0 & Chr(10) & "Importe: " & Format(Cells(row0, punteroBill100 + 3), "$###,##0.00") & Chr(10) _
    & "Diferencia: " & Format(Cells(row0, punteroBill100 + 3) Mod 100, "$###,##0.00")
    Range(Cells(row0, 12), Cells(row0, 12)).EntireRow.Select
    Exit Sub
    End If
    
    'validar denominaciones BILLETES 50
    If Cells(row0, punteroBill100 + 4) > 0 And Cells(row0, punteroBill100 + 4) Mod 50 <> 0 Then
    MsgBox "|fffd||fffd| DIFERENCIA !!" & Chr(10) & "IMPORTE DE BILLETES DE $50.00 NO FRACCIONABLE" & Chr(10) & Chr(10) & _
    "Registro en fila: " & row0 & Chr(10) & "Importe: " & Format(Cells(row0, punteroBill100 + 4), "$###,##0.00") & Chr(10) _
    & "Diferencia: " & Format(Cells(row0, punteroBill100 + 4) Mod 50, "$###,##0.00")
    Range(Cells(row0, 12), Cells(row0, 12)).EntireRow.Select
    Exit Sub
    End If
    
    'validar denominaciones BILLETES 20
    If Cells(row0, punteroBill100 + 5) > 0 And Cells(row0, punteroBill100 + 5) Mod 20 <> 0 Then
    MsgBox "|fffd||fffd| DIFERENCIA !!" & Chr(10) & "IMPORTE DE BILLETES DE $20.00 NO FRACCIONABLE" & Chr(10) & Chr(10) & _
    "Registro en fila: " & row0 & Chr(10) & "Importe: " & Format(Cells(row0, punteroBill100 + 5), "$###,##0.00") & Chr(10) _
    & "Diferencia: " & Format(Cells(row0, punteroBill100 + 5) Mod 20, "$###,##0.00")
    Range(Cells(row0, 12), Cells(row0, 12)).EntireRow.Select
    Exit Sub
    End If
    
    'validar denominaciones MONEDA 100
    If Cells(row0, punteroCoin100) > 0 And Cells(row0, punteroCoin100) Mod 100 <> 0 Then
    MsgBox "|fffd||fffd| DIFERENCIA !!" & Chr(10) & "IMPORTE DE MONEDAS DE $100.00 NO FRACCIONABLE" & Chr(10) & Chr(10) & _
    "Registro en fila: " & row0 & Chr(10) & "Importe: " & Format(Cells(row0, punteroCoin100), "$###,##0.00") & Chr(10) _
    & "Diferencia: " & Format(Cells(row0, punteroCoin100) Mod 100, "$###,##0.00")
    Range(Cells(row0, 12), Cells(row0, 12)).EntireRow.Select
    Exit Sub
    End If
    
    'validar denominaciones MONEDA 20
    If Cells(row0, punteroCoin100 + 1) > 0 And Cells(row0, punteroCoin100 + 1) Mod 20 <> 0 Then
    MsgBox "|fffd||fffd| DIFERENCIA !!" & Chr(10) & "IMPORTE DE MONEDAS DE $20.00 NO FRACCIONABLE" & Chr(10) & Chr(10) & _
    "Registro en fila: " & row0 & Chr(10) & "Importe: " & Format(Cells(row0, punteroCoin100 + 1), "$###,##0.00") & Chr(10) _
    & "Diferencia: " & Format(Cells(row0, punteroCoin100 + 1) Mod 20, "$###,##0.00")
    Range(Cells(row0, 12), Cells(row0, 12)).EntireRow.Select
    Exit Sub
    End If
    
    'validar denominaciones MONEDA 10
    If Cells(row0, punteroCoin100 + 2) > 0 And Cells(row0, punteroCoin100 + 2) Mod 10 <> 0 Then
    MsgBox "|fffd||fffd| DIFERENCIA !!" & Chr(10) & "IMPORTE DE MONEDAS DE $10.00 NO FRACCIONABLE" & Chr(10) & Chr(10) & _
    "Registro en fila: " & row0 & Chr(10) & "Importe: " & Format(Cells(row0, punteroCoin100 + 2), "$###,##0.00") & Chr(10) _
    & "Diferencia: " & Format(Cells(row0, punteroCoin100 + 2) Mod 10, "$###,##0.00")
    Range(Cells(row0, 12), Cells(row0, 12)).EntireRow.Select
    Exit Sub
    End If
    
    'validar denominaciones MONEDA 5
    If Cells(row0, punteroCoin100 + 3) > 0 And Cells(row0, punteroCoin100 + 3) Mod 5 <> 0 Then
    MsgBox "|fffd||fffd| DIFERENCIA !!" & Chr(10) & "IMPORTE DE MONEDAS DE $5.00 NO FRACCIONABLE" & Chr(10) & Chr(10) & _
    "Registro en fila: " & row0 & Chr(10) & "Importe: " & Format(Cells(row0, punteroCoin100 + 3), "$###,##0.00") & Chr(10) _
    & "Diferencia: " & Format(Cells(row0, punteroCoin100 + 3) Mod 5, "$###,##0.00")
    Range(Cells(row0, 12), Cells(row0, 12)).EntireRow.Select
    Exit Sub
    End If
    
    'validar denominaciones MONEDA 2
    If Cells(row0, punteroCoin100 + 4) > 0 And Cells(row0, punteroCoin100 + 4) Mod 2 <> 0 Then
    MsgBox "|fffd||fffd| DIFERENCIA !!" & Chr(10) & "IMPORTE DE MONEDAS DE $2.00 NO FRACCIONABLE" & Chr(10) & Chr(10) & _
    "Registro en fila: " & row0 & Chr(10) & "Importe: " & Format(Cells(row0, punteroCoin100 + 4), "$###,##0.00") & Chr(10) _
    & "Diferencia: " & Format(Cells(row0, punteroCoin100 + 4) Mod 2, "$###,##0.00")
    Range(Cells(row0, 12), Cells(row0, 12)).EntireRow.Select
    Exit Sub
    End If
    
    'validar denominaciones MONEDA 1
    If Cells(row0, punteroCoin100 + 5) > 0 And (Application.WorksheetFunction.RoundDown(Cells(row0, punteroCoin100 + 5) / 1, 0) * 1) - Cells(row0, punteroCoin100 + 5) <> 0 Then
    MsgBox "|fffd||fffd| DIFERENCIA !!" & Chr(10) & "IMPORTE DE MONEDAS DE $1.00 NO FRACCIONABLE" & Chr(10) & Chr(10) & _
    "Registro en fila: " & row0 & Chr(10) & "Importe: " & Format(Cells(row0, punteroCoin100 + 5), "$###,##0.00") & Chr(10) _
    & "Diferencia: " & Format((Application.WorksheetFunction.RoundDown(Cells(row0, punteroCoin100 + 5) / 1, 0) * 1) - Cells(row0, punteroCoin100 + 5), "$###,##0.00")
    Range(Cells(row0, 12), Cells(row0, 12)).EntireRow.Select
    Exit Sub
    End If
    
    'validar denominaciones MONEDA .50
    If Cells(row0, punteroCoin100 + 6) > 0 And (Application.WorksheetFunction.RoundDown(Cells(row0, punteroCoin100 + 6) / 0.5, 0) * 0.5) - Cells(row0, punteroCoin100 + 6) <> 0 Then
    MsgBox "|fffd||fffd| DIFERENCIA !!" & Chr(10) & "IMPORTE DE MONEDAS DE $0.50 NO FRACCIONABLE" & Chr(10) & Chr(10) & _
    "Registro en fila: " & row0 & Chr(10) & "Importe: " & Format(Cells(row0, punteroCoin100 + 6), "$###,##0.00") & Chr(10) _
    & "Diferencia: " & Format((Application.WorksheetFunction.RoundDown(Cells(row0, punteroCoin100 + 6) / 0.5, 0) * 0.5) - Cells(row0, punteroCoin100 + 6), "$###,##0.00")
    Range(Cells(row0, 12), Cells(row0, 12)).EntireRow.Select
    Exit Sub
    End If
    
    'validar denominaciones MONEDA .20
    If Cells(row0, punteroCoin100 + 7) > 0 And (Application.WorksheetFunction.RoundDown(Cells(row0, punteroCoin100 + 7) / 0.2, 0) * 0.2) - Cells(row0, punteroCoin100 + 7) <> 0 Then
    MsgBox "|fffd||fffd| DIFERENCIA !!" & Chr(10) & "IMPORTE DE MONEDAS DE $0.20 NO FRACCIONABLE" & Chr(10) & Chr(10) & _
    "Registro en fila: " & row0 & Chr(10) & "Importe: " & Format(Cells(row0, punteroCoin100 + 7), "$###,##0.00") & Chr(10) _
    & "Diferencia: " & Format((Application.WorksheetFunction.RoundDown(Cells(row0, punteroCoin100 + 7) / 0.2, 0) * 0.2) - Cells(row0, punteroCoin100 + 7), "$###,##0.00")
    Range(Cells(row0, 12), Cells(row0, 12)).EntireRow.Select
    Exit Sub
    End If
    
    'validar denominaciones MONEDA .10
    If Cells(row0, punteroCoin100 + 8) > 0 And (Int(Cells(row0, punteroCoin100 + 8) / 0.1) * 0.1) - Cells(row0, punteroCoin100 + 8) <> 0 Then
    MsgBox "|fffd||fffd| DIFERENCIA !!" & Chr(10) & "IMPORTE DE MONEDAS DE $0.10 NO FRACCIONABLE" & Chr(10) & Chr(10) & _
    "Registro en fila: " & row0 & Chr(10) & "Importe: " & Format(Cells(row0, punteroCoin100 + 8), "$###,##0.00") & Chr(10) _
    & "Diferencia: " & Format((Int(Cells(row0, punteroCoin100 + 8) / 0.1) * 0.1) - Cells(row0, punteroCoin100 + 8), "$###,##0.00")
    Range(Cells(row0, 12), Cells(row0, 12)).EntireRow.Select
    Exit Sub
    End If
    
    'validar denominaciones MONEDA .050
    If Cells(row0, punteroCoin100 + 9) > 0 And (Int(Cells(row0, punteroCoin100 + 9) / 0.05) * 0.05) - Cells(row0, punteroCoin100 + 9) <> 0 Then
    MsgBox "|fffd||fffd| DIFERENCIA !!" & Chr(10) & "IMPORTE DE MONEDAS DE $0.050 NO FRACCIONABLE" & Chr(10) & Chr(10) & _
    "Registro en fila: " & row0 & Chr(10) & "Importe: " & Format(Cells(row0, punteroCoin100 + 9), "$###,##0.00") & Chr(10) _
    & "Diferencia: " & Format((Int(Cells(row0, punteroCoin100 + 9) / 0.05) * 0.05) - Cells(row0, punteroCoin100 + 9), "$###,##0.00")
    Range(Cells(row0, 12), Cells(row0, 12)).EntireRow.Select
    Exit Sub
    End If
    
contador = contador + 1
row0 = row0 + 1

Loop

''''''''''''''''''''''COLLECCION ETV & PLAZA''''''''''''''''''''''''''''''''''''''''
Dim AgruparEtvPlaza As Collection
Set AgruparEtvPlaza = New Collection

For i = 1 To UBound(DemInfo)
    
    On Error Resume Next
    AgruparEtvPlaza.Add DemInfo(i, 1), CStr(DemInfo(i, 1))
    On Error GoTo 0
    
Next i


''''''''''''''''''''''SUBTOTALES INFORMACI|fffd|N''''''''''''''''''''''''''''''''''''''''
Dim subtotalEtvPlaza() As Variant
Dim largoSubtotal As Long
Dim mesReporte As String
Dim fechaLabelReporte As String
Dim TotalOperaciones, TotalImporteDem As Double
'mes de formulario
mesReporte = DEM_DINAMICO.ComboBoxMesRegulatorio.value
TotalOperaciones = 0
TotalImporteDem = 0

'numero de denominaciones * cantidad de combinaciones ETV & PLAZA
largoSubtotal = AgruparEtvPlaza.Count


ReDim subtotalEtvPlaza(largoSubtotal, 24)

For i = 1 To UBound(subtotalEtvPlaza)

'AgruparEtvPlaza
subtotalEtvPlaza(i, 1) = AgruparEtvPlaza(i)


Next i


For j = 1 To UBound(subtotalEtvPlaza)

    For i = 1 To UBound(DemInfo)
        
        If DemInfo(i, 8) = mesReporte And DemInfo(i, 1) = subtotalEtvPlaza(j, 1) Then
        
        'ORIGEN
        subtotalEtvPlaza(j, 2) = DemInfo(i, 6)
        'ID SUCURSAL
        subtotalEtvPlaza(j, 3) = DemInfo(i, 5)
        'ETV ORIGEN
        subtotalEtvPlaza(j, 4) = DemInfo(i, 2)
        'PLAZA
        subtotalEtvPlaza(j, 5) = DemInfo(i, 4)


        'NUMERO SERVICIOS
        subtotalEtvPlaza(j, 6) = subtotalEtvPlaza(j, 6) + 1
        
        'SUMA
        subtotalEtvPlaza(j, 7) = subtotalEtvPlaza(j, 7) + DemInfo(i, 9)
        
        
        'BILLETE 1000
        subtotalEtvPlaza(j, 8) = subtotalEtvPlaza(j, 8) + DemInfo(i, 10)
        'BILLETE 500
        subtotalEtvPlaza(j, 9) = subtotalEtvPlaza(j, 9) + DemInfo(i, 11)
        'BILLETE 200
        subtotalEtvPlaza(j, 10) = subtotalEtvPlaza(j, 10) + DemInfo(i, 12)
        'BILLETE 100
        subtotalEtvPlaza(j, 11) = subtotalEtvPlaza(j, 11) + DemInfo(i, 13)
        'BILLETE 50
        subtotalEtvPlaza(j, 12) = subtotalEtvPlaza(j, 12) + DemInfo(i, 14)
        'BILLETE 20
        subtotalEtvPlaza(j, 13) = subtotalEtvPlaza(j, 13) + DemInfo(i, 15)
        'MONEDA 100
        subtotalEtvPlaza(j, 14) = subtotalEtvPlaza(j, 14) + DemInfo(i, 16)
        'MONEDA 20
        subtotalEtvPlaza(j, 15) = subtotalEtvPlaza(j, 15) + DemInfo(i, 17)
        'MONEDA 10
        subtotalEtvPlaza(j, 16) = subtotalEtvPlaza(j, 16) + DemInfo(i, 18)
        'MONEDA 5
        subtotalEtvPlaza(j, 17) = subtotalEtvPlaza(j, 17) + DemInfo(i, 19)
        'MONEDA 2
        subtotalEtvPlaza(j, 18) = subtotalEtvPlaza(j, 18) + DemInfo(i, 20)
        'MONEDA 1
        subtotalEtvPlaza(j, 19) = subtotalEtvPlaza(j, 19) + DemInfo(i, 21)
        'MONEDA .5
        subtotalEtvPlaza(j, 20) = subtotalEtvPlaza(j, 20) + DemInfo(i, 22)
        'MONEDA .2
        subtotalEtvPlaza(j, 21) = subtotalEtvPlaza(j, 21) + DemInfo(i, 23)
        'MONEDA .1
        subtotalEtvPlaza(j, 22) = subtotalEtvPlaza(j, 22) + DemInfo(i, 24)
        'MONEDA .05
        subtotalEtvPlaza(j, 23) = subtotalEtvPlaza(j, 23) + DemInfo(i, 25)
        'ETV SERVICIO
        subtotalEtvPlaza(j, 24) = DemInfo(i, 3)
        
        End If
        
    Next i

Next j


''''''''''''''''''''''REPORTE OEM1 CONCENTRACIONES''''''''''''''''''''''''''''''''''''''''
Dim fechaRepReg As Date
Dim institucionLabel, fechaLabel, mesLabel, contraparteLabel, tipoOperacionLabel, medioDistribucionLabel As String
Dim ReporteDem() As Variant
Dim largoReporteDem As Long
Dim anioReporte As Integer
largoReporteDem = AgruparEtvPlaza.Count * 17

ReDim ReporteDem(largoReporteDem, 16)

institucionLabel = "'040130"
contraparteLabel = "'040012" 'CLAVE DE BANCOMER
tipoOperacionLabel = "127"
medioDistribucionLabel = "1"

'MsgBox "ubound(ReporteDem) " & UBound(ReporteDem)


Select Case mesReporte
Case "ENERO"
fechaRepReg = CDate(1 & "/" & 2 & "/" & Year(Date)) - 1
anioReporte = Year(fechaRepReg)

Case "FEBRERO"
fechaRepReg = CDate(1 & "/" & 3 & "/" & Year(Date)) - 1
anioReporte = Year(fechaRepReg)

Case "MARZO"
fechaRepReg = CDate(1 & "/" & 4 & "/" & Year(Date)) - 1
anioReporte = Year(fechaRepReg)

Case "ABRIL"
fechaRepReg = CDate(1 & "/" & 5 & "/" & Year(Date)) - 1
anioReporte = Year(fechaRepReg)

Case "MAYO"
fechaRepReg = CDate(1 & "/" & 6 & "/" & Year(Date)) - 1
anioReporte = Year(fechaRepReg)

Case "JUNIO"
fechaRepReg = CDate(1 & "/" & 7 & "/" & Year(Date)) - 1
anioReporte = Year(fechaRepReg)

Case "JULIO"
fechaRepReg = CDate(1 & "/" & 8 & "/" & Year(Date)) - 1
anioReporte = Year(fechaRepReg)

Case "AGOSTO"
fechaRepReg = CDate(1 & "/" & 9 & "/" & Year(Date)) - 1
anioReporte = Year(fechaRepReg)

Case "SEPTIEMBRE"
fechaRepReg = CDate(1 & "/" & 10 & "/" & Year(Date)) - 1
anioReporte = Year(fechaRepReg)

Case "OCTUBRE"
fechaRepReg = CDate(1 & "/" & 11 & "/" & Year(Date)) - 1
anioReporte = Year(fechaRepReg)

Case "NOVIEMBRE"
fechaRepReg = CDate(1 & "/" & 12 & "/" & Year(Date)) - 1
anioReporte = Year(fechaRepReg)

Case "DICIEMBRE"
fechaRepReg = CDate(1 & "/" & 2 & "/" & Year(Date) - 1) - 1
anioReporte = Year(fechaRepReg)

End Select

If Month(fechaRepReg) < 10 Then
mesLabel = "0" & Month(fechaRepReg)
Else
mesLabel = Month(fechaRepReg)
End If


fechaLabel = "'" & Year(fechaRepReg) & "/" & mesLabel & "/" & Day(fechaRepReg)

''''''LAYOUT'''''
'1. Instituci|fffd|n
'2. Fecha
'3. Contraparte
'4. Tipo Operacion
'5. Sucursal
'6. Medio Distribucion
'7. Transportadora Valores
'8. Denominaci|fffd|n/Total (Etiqueta)
'9. Importe
'10. N|fffd|mero de Operaciones
'11. ORIGEN CONCENTRACI|fffd|N
'12. ETV SERVICIO
'13. BANCO CUENTA DEP|fffd|SITO DEM
'14. ID SUCURSAL
'15. PLAZA
'16. ETV

contadorDem = 1

For j = 1 To UBound(subtotalEtvPlaza)
'BILLETE 1,000
    If subtotalEtvPlaza(j, 8) > 0 Then
    
    '1. Instituci|fffd|n
    ReporteDem(contadorDem, 1) = institucionLabel
    '2. Fecha
    ReporteDem(contadorDem, 2) = fechaLabel
    '3. Contraparte
    ReporteDem(contadorDem, 3) = contraparteLabel
    '4. Tipo Operacion
    ReporteDem(contadorDem, 4) = tipoOperacionLabel
    '5. Sucursal
    ReporteDem(contadorDem, 5) = subtotalEtvPlaza(j, 3)
    '6. Medio Distribucion
    ReporteDem(contadorDem, 6) = medioDistribucionLabel
    '7. Transportadora Valores
    ReporteDem(contadorDem, 7) = ""

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '8. Denominaci|fffd|n/Total (Etiqueta)
    ReporteDem(contadorDem, 8) = "1000B"
    '9. Importe
    ReporteDem(contadorDem, 9) = subtotalEtvPlaza(j, 8)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '10. N|fffd|mero de Operaciones
    ReporteDem(contadorDem, 10) = subtotalEtvPlaza(j, 6)
    '11. ORIGEN CONCENTRACI|fffd|N
    ReporteDem(contadorDem, 11) = subtotalEtvPlaza(j, 2)
    '12. ETV SERVICIO
    ReporteDem(contadorDem, 12) = subtotalEtvPlaza(j, 24)
    '13. BANCO CUENTA DEP|fffd|SITO DEM
    ReporteDem(contadorDem, 13) = "BBVA BANCOMER"
    '14. ID SUCURSAL
    ReporteDem(contadorDem, 14) = subtotalEtvPlaza(j, 3)
    '15. PLAZA
    ReporteDem(contadorDem, 15) = subtotalEtvPlaza(j, 4)
    '16. ETV
    ReporteDem(contadorDem, 16) = subtotalEtvPlaza(j, 5)
    
    contadorDem = contadorDem + 1
    End If
               
'BILLETE 500
    If subtotalEtvPlaza(j, 9) > 0 Then
    
    '1. Instituci|fffd|n
    ReporteDem(contadorDem, 1) = institucionLabel
    '2. Fecha
    ReporteDem(contadorDem, 2) = fechaLabel
    '3. Contraparte
    ReporteDem(contadorDem, 3) = contraparteLabel
    '4. Tipo Operacion
    ReporteDem(contadorDem, 4) = tipoOperacionLabel
    '5. Sucursal
    ReporteDem(contadorDem, 5) = subtotalEtvPlaza(j, 3)
    '6. Medio Distribucion
    ReporteDem(contadorDem, 6) = medioDistribucionLabel
    '7. Transportadora Valores
    ReporteDem(contadorDem, 7) = ""

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '8. Denominaci|fffd|n/Total (Etiqueta)
    ReporteDem(contadorDem, 8) = "500B"
    '9. Importe
    ReporteDem(contadorDem, 9) = subtotalEtvPlaza(j, 9)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '10. N|fffd|mero de Operaciones
    ReporteDem(contadorDem, 10) = subtotalEtvPlaza(j, 6)
    '11. ORIGEN CONCENTRACI|fffd|N
    ReporteDem(contadorDem, 11) = subtotalEtvPlaza(j, 2)
    '12. ETV SERVICIO
    ReporteDem(contadorDem, 12) = subtotalEtvPlaza(j, 24)
    '13. BANCO CUENTA DEP|fffd|SITO DEM
    ReporteDem(contadorDem, 13) = "BBVA BANCOMER"
    '14. ID SUCURSAL
    ReporteDem(contadorDem, 14) = subtotalEtvPlaza(j, 3)
    '15. PLAZA
    ReporteDem(contadorDem, 15) = subtotalEtvPlaza(j, 4)
    '16. ETV
    ReporteDem(contadorDem, 16) = subtotalEtvPlaza(j, 5)
    
    contadorDem = contadorDem + 1
    
    End If
               
'BILLETE 200
    If subtotalEtvPlaza(j, 10) > 0 Then
    
    '1. Instituci|fffd|n
    ReporteDem(contadorDem, 1) = institucionLabel
    '2. Fecha
    ReporteDem(contadorDem, 2) = fechaLabel
    '3. Contraparte
    ReporteDem(contadorDem, 3) = contraparteLabel
    '4. Tipo Operacion
    ReporteDem(contadorDem, 4) = tipoOperacionLabel
    '5. Sucursal
    ReporteDem(contadorDem, 5) = subtotalEtvPlaza(j, 3)
    '6. Medio Distribucion
    ReporteDem(contadorDem, 6) = medioDistribucionLabel
    '7. Transportadora Valores
    ReporteDem(contadorDem, 7) = ""

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '8. Denominaci|fffd|n/Total (Etiqueta)
    ReporteDem(contadorDem, 8) = "200B"
    '9. Importe
    ReporteDem(contadorDem, 9) = subtotalEtvPlaza(j, 10)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '10. N|fffd|mero de Operaciones
    ReporteDem(contadorDem, 10) = subtotalEtvPlaza(j, 6)
    '11. ORIGEN CONCENTRACI|fffd|N
    ReporteDem(contadorDem, 11) = subtotalEtvPlaza(j, 2)
    '12. ETV SERVICIO
    ReporteDem(contadorDem, 12) = subtotalEtvPlaza(j, 24)
    '13. BANCO CUENTA DEP|fffd|SITO DEM
    ReporteDem(contadorDem, 13) = "BBVA BANCOMER"
    '14. ID SUCURSAL
    ReporteDem(contadorDem, 14) = subtotalEtvPlaza(j, 3)
    '15. PLAZA
    ReporteDem(contadorDem, 15) = subtotalEtvPlaza(j, 4)
    '16. ETV
    ReporteDem(contadorDem, 16) = subtotalEtvPlaza(j, 5)
    
    contadorDem = contadorDem + 1
    
    End If
               
'BILLETE 100
    If subtotalEtvPlaza(j, 11) > 0 Then
    
    '1. Instituci|fffd|n
    ReporteDem(contadorDem, 1) = institucionLabel
    '2. Fecha
    ReporteDem(contadorDem, 2) = fechaLabel
    '3. Contraparte
    ReporteDem(contadorDem, 3) = contraparteLabel
    '4. Tipo Operacion
    ReporteDem(contadorDem, 4) = tipoOperacionLabel
    '5. Sucursal
    ReporteDem(contadorDem, 5) = subtotalEtvPlaza(j, 3)
    '6. Medio Distribucion
    ReporteDem(contadorDem, 6) = medioDistribucionLabel
    '7. Transportadora Valores
    ReporteDem(contadorDem, 7) = ""

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '8. Denominaci|fffd|n/Total (Etiqueta)
    ReporteDem(contadorDem, 8) = "100B"
    '9. Importe
    ReporteDem(contadorDem, 9) = subtotalEtvPlaza(j, 11)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '10. N|fffd|mero de Operaciones
    ReporteDem(contadorDem, 10) = subtotalEtvPlaza(j, 6)
    '11. ORIGEN CONCENTRACI|fffd|N
    ReporteDem(contadorDem, 11) = subtotalEtvPlaza(j, 2)
    '12. ETV SERVICIO
    ReporteDem(contadorDem, 12) = subtotalEtvPlaza(j, 24)
    '13. BANCO CUENTA DEP|fffd|SITO DEM
    ReporteDem(contadorDem, 13) = "BBVA BANCOMER"
    '14. ID SUCURSAL
    ReporteDem(contadorDem, 14) = subtotalEtvPlaza(j, 3)
    '15. PLAZA
    ReporteDem(contadorDem, 15) = subtotalEtvPlaza(j, 4)
    '16. ETV
    ReporteDem(contadorDem, 16) = subtotalEtvPlaza(j, 5)
    
    contadorDem = contadorDem + 1
    
    End If
               
'BILLETE 50
    If subtotalEtvPlaza(j, 12) > 0 Then
    
    '1. Instituci|fffd|n
    ReporteDem(contadorDem, 1) = institucionLabel
    '2. Fecha
    ReporteDem(contadorDem, 2) = fechaLabel
    '3. Contraparte
    ReporteDem(contadorDem, 3) = contraparteLabel
    '4. Tipo Operacion
    ReporteDem(contadorDem, 4) = tipoOperacionLabel
    '5. Sucursal
    ReporteDem(contadorDem, 5) = subtotalEtvPlaza(j, 3)
    '6. Medio Distribucion
    ReporteDem(contadorDem, 6) = medioDistribucionLabel
    '7. Transportadora Valores
    ReporteDem(contadorDem, 7) = ""

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '8. Denominaci|fffd|n/Total (Etiqueta)
    ReporteDem(contadorDem, 8) = "50B"
    '9. Importe
    ReporteDem(contadorDem, 9) = subtotalEtvPlaza(j, 12)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '10. N|fffd|mero de Operaciones
    ReporteDem(contadorDem, 10) = subtotalEtvPlaza(j, 6)
    '11. ORIGEN CONCENTRACI|fffd|N
    ReporteDem(contadorDem, 11) = subtotalEtvPlaza(j, 2)
    '12. ETV SERVICIO
    ReporteDem(contadorDem, 12) = subtotalEtvPlaza(j, 24)
    '13. BANCO CUENTA DEP|fffd|SITO DEM
    ReporteDem(contadorDem, 13) = "BBVA BANCOMER"
    '14. ID SUCURSAL
    ReporteDem(contadorDem, 14) = subtotalEtvPlaza(j, 3)
    '15. PLAZA
    ReporteDem(contadorDem, 15) = subtotalEtvPlaza(j, 4)
    '16. ETV
    ReporteDem(contadorDem, 16) = subtotalEtvPlaza(j, 5)
    
    contadorDem = contadorDem + 1
    
    End If
               
'BILLETE 20
    If subtotalEtvPlaza(j, 13) > 0 Then
    
    '1. Instituci|fffd|n
    ReporteDem(contadorDem, 1) = institucionLabel
    '2. Fecha
    ReporteDem(contadorDem, 2) = fechaLabel
    '3. Contraparte
    ReporteDem(contadorDem, 3) = contraparteLabel
    '4. Tipo Operacion
    ReporteDem(contadorDem, 4) = tipoOperacionLabel
    '5. Sucursal
    ReporteDem(contadorDem, 5) = subtotalEtvPlaza(j, 3)
    '6. Medio Distribucion
    ReporteDem(contadorDem, 6) = medioDistribucionLabel
    '7. Transportadora Valores
    ReporteDem(contadorDem, 7) = ""

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '8. Denominaci|fffd|n/Total (Etiqueta)
    ReporteDem(contadorDem, 8) = "20B"
    '9. Importe
    ReporteDem(contadorDem, 9) = subtotalEtvPlaza(j, 13)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '10. N|fffd|mero de Operaciones
    ReporteDem(contadorDem, 10) = subtotalEtvPlaza(j, 6)
    '11. ORIGEN CONCENTRACI|fffd|N
    ReporteDem(contadorDem, 11) = subtotalEtvPlaza(j, 2)
    '12. ETV SERVICIO
    ReporteDem(contadorDem, 12) = subtotalEtvPlaza(j, 24)
    '13. BANCO CUENTA DEP|fffd|SITO DEM
    ReporteDem(contadorDem, 13) = "BBVA BANCOMER"
    '14. ID SUCURSAL
    ReporteDem(contadorDem, 14) = subtotalEtvPlaza(j, 3)
    '15. PLAZA
    ReporteDem(contadorDem, 15) = subtotalEtvPlaza(j, 4)
    '16. ETV
    ReporteDem(contadorDem, 16) = subtotalEtvPlaza(j, 5)
    
    contadorDem = contadorDem + 1
    
    End If
               
'MONEDA 100
    If subtotalEtvPlaza(j, 14) > 0 Then
    
    '1. Instituci|fffd|n
    ReporteDem(contadorDem, 1) = institucionLabel
    '2. Fecha
    ReporteDem(contadorDem, 2) = fechaLabel
    '3. Contraparte
    ReporteDem(contadorDem, 3) = contraparteLabel
    '4. Tipo Operacion
    ReporteDem(contadorDem, 4) = tipoOperacionLabel
    '5. Sucursal
    ReporteDem(contadorDem, 5) = subtotalEtvPlaza(j, 3)
    '6. Medio Distribucion
    ReporteDem(contadorDem, 6) = medioDistribucionLabel
    '7. Transportadora Valores
    ReporteDem(contadorDem, 7) = ""

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '8. Denominaci|fffd|n/Total (Etiqueta)
    ReporteDem(contadorDem, 8) = "100M"
    '9. Importe
    ReporteDem(contadorDem, 9) = subtotalEtvPlaza(j, 14)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '10. N|fffd|mero de Operaciones
    ReporteDem(contadorDem, 10) = subtotalEtvPlaza(j, 6)
    '11. ORIGEN CONCENTRACI|fffd|N
    ReporteDem(contadorDem, 11) = subtotalEtvPlaza(j, 2)
    '12. ETV SERVICIO
    ReporteDem(contadorDem, 12) = subtotalEtvPlaza(j, 24)
    '13. BANCO CUENTA DEP|fffd|SITO DEM
    ReporteDem(contadorDem, 13) = "BBVA BANCOMER"
    '14. ID SUCURSAL
    ReporteDem(contadorDem, 14) = subtotalEtvPlaza(j, 3)
    '15. PLAZA
    ReporteDem(contadorDem, 15) = subtotalEtvPlaza(j, 4)
    '16. ETV
    ReporteDem(contadorDem, 16) = subtotalEtvPlaza(j, 5)
    
    contadorDem = contadorDem + 1
    
    End If


'MONEDA 20
    If subtotalEtvPlaza(j, 15) > 0 Then
    
    '1. Instituci|fffd|n
    ReporteDem(contadorDem, 1) = institucionLabel
    '2. Fecha
    ReporteDem(contadorDem, 2) = fechaLabel
    '3. Contraparte
    ReporteDem(contadorDem, 3) = contraparteLabel
    '4. Tipo Operacion
    ReporteDem(contadorDem, 4) = tipoOperacionLabel
    '5. Sucursal
    ReporteDem(contadorDem, 5) = subtotalEtvPlaza(j, 3)
    '6. Medio Distribucion
    ReporteDem(contadorDem, 6) = medioDistribucionLabel
    '7. Transportadora Valores
    ReporteDem(contadorDem, 7) = ""

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '8. Denominaci|fffd|n/Total (Etiqueta)
    ReporteDem(contadorDem, 8) = "20M"
    '9. Importe
    ReporteDem(contadorDem, 9) = subtotalEtvPlaza(j, 15)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '10. N|fffd|mero de Operaciones
    ReporteDem(contadorDem, 10) = subtotalEtvPlaza(j, 6)
    '11. ORIGEN CONCENTRACI|fffd|N
    ReporteDem(contadorDem, 11) = subtotalEtvPlaza(j, 2)
    '12. ETV SERVICIO
    ReporteDem(contadorDem, 12) = subtotalEtvPlaza(j, 24)
    '13. BANCO CUENTA DEP|fffd|SITO DEM
    ReporteDem(contadorDem, 13) = "BBVA BANCOMER"
    '14. ID SUCURSAL
    ReporteDem(contadorDem, 14) = subtotalEtvPlaza(j, 3)
    '15. PLAZA
    ReporteDem(contadorDem, 15) = subtotalEtvPlaza(j, 4)
    '16. ETV
    ReporteDem(contadorDem, 16) = subtotalEtvPlaza(j, 5)
    
    contadorDem = contadorDem + 1
    
    contadorDem = contadorDem + 1
    
    End If
    
'MONEDA 10
    If subtotalEtvPlaza(j, 16) > 0 Then
    
    '1. Instituci|fffd|n
    ReporteDem(contadorDem, 1) = institucionLabel
    '2. Fecha
    ReporteDem(contadorDem, 2) = fechaLabel
    '3. Contraparte
    ReporteDem(contadorDem, 3) = contraparteLabel
    '4. Tipo Operacion
    ReporteDem(contadorDem, 4) = tipoOperacionLabel
    '5. Sucursal
    ReporteDem(contadorDem, 5) = subtotalEtvPlaza(j, 3)
    '6. Medio Distribucion
    ReporteDem(contadorDem, 6) = medioDistribucionLabel
    '7. Transportadora Valores
    ReporteDem(contadorDem, 7) = ""

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '8. Denominaci|fffd|n/Total (Etiqueta)
    ReporteDem(contadorDem, 8) = "10M"
    '9. Importe
    ReporteDem(contadorDem, 9) = subtotalEtvPlaza(j, 16)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '10. N|fffd|mero de Operaciones
    ReporteDem(contadorDem, 10) = subtotalEtvPlaza(j, 6)
    '11. ORIGEN CONCENTRACI|fffd|N
    ReporteDem(contadorDem, 11) = subtotalEtvPlaza(j, 2)
    '12. ETV SERVICIO
    ReporteDem(contadorDem, 12) = subtotalEtvPlaza(j, 24)
    '13. BANCO CUENTA DEP|fffd|SITO DEM
    ReporteDem(contadorDem, 13) = "BBVA BANCOMER"
    '14. ID SUCURSAL
    ReporteDem(contadorDem, 14) = subtotalEtvPlaza(j, 3)
    '15. PLAZA
    ReporteDem(contadorDem, 15) = subtotalEtvPlaza(j, 4)
    '16. ETV
    ReporteDem(contadorDem, 16) = subtotalEtvPlaza(j, 5)
    
    contadorDem = contadorDem + 1
    
    End If
    
'MONEDA 5
    If subtotalEtvPlaza(j, 17) > 0 Then
    
    '1. Instituci|fffd|n
    ReporteDem(contadorDem, 1) = institucionLabel
    '2. Fecha
    ReporteDem(contadorDem, 2) = fechaLabel
    '3. Contraparte
    ReporteDem(contadorDem, 3) = contraparteLabel
    '4. Tipo Operacion
    ReporteDem(contadorDem, 4) = tipoOperacionLabel
    '5. Sucursal
    ReporteDem(contadorDem, 5) = subtotalEtvPlaza(j, 3)
    '6. Medio Distribucion
    ReporteDem(contadorDem, 6) = medioDistribucionLabel
    '7. Transportadora Valores
    ReporteDem(contadorDem, 7) = ""

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '8. Denominaci|fffd|n/Total (Etiqueta)
    ReporteDem(contadorDem, 8) = "5M"
    '9. Importe
    ReporteDem(contadorDem, 9) = subtotalEtvPlaza(j, 17)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '10. N|fffd|mero de Operaciones
    ReporteDem(contadorDem, 10) = subtotalEtvPlaza(j, 6)
    '11. ORIGEN CONCENTRACI|fffd|N
    ReporteDem(contadorDem, 11) = subtotalEtvPlaza(j, 2)
    '12. ETV SERVICIO
    ReporteDem(contadorDem, 12) = subtotalEtvPlaza(j, 24)
    '13. BANCO CUENTA DEP|fffd|SITO DEM
    ReporteDem(contadorDem, 13) = "BBVA BANCOMER"
    '14. ID SUCURSAL
    ReporteDem(contadorDem, 14) = subtotalEtvPlaza(j, 3)
    '15. PLAZA
    ReporteDem(contadorDem, 15) = subtotalEtvPlaza(j, 4)
    '16. ETV
    ReporteDem(contadorDem, 16) = subtotalEtvPlaza(j, 5)
    
    contadorDem = contadorDem + 1
    
    End If
    
'MONEDA 2
    If subtotalEtvPlaza(j, 18) > 0 Then
    
    '1. Instituci|fffd|n
    ReporteDem(contadorDem, 1) = institucionLabel
    '2. Fecha
    ReporteDem(contadorDem, 2) = fechaLabel
    '3. Contraparte
    ReporteDem(contadorDem, 3) = contraparteLabel
    '4. Tipo Operacion
    ReporteDem(contadorDem, 4) = tipoOperacionLabel
    '5. Sucursal
    ReporteDem(contadorDem, 5) = subtotalEtvPlaza(j, 3)
    '6. Medio Distribucion
    ReporteDem(contadorDem, 6) = medioDistribucionLabel
    '7. Transportadora Valores
    ReporteDem(contadorDem, 7) = ""

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '8. Denominaci|fffd|n/Total (Etiqueta)
    ReporteDem(contadorDem, 8) = "2M"
    '9. Importe
    ReporteDem(contadorDem, 9) = subtotalEtvPlaza(j, 18)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '10. N|fffd|mero de Operaciones
    ReporteDem(contadorDem, 10) = subtotalEtvPlaza(j, 6)
    '11. ORIGEN CONCENTRACI|fffd|N
    ReporteDem(contadorDem, 11) = subtotalEtvPlaza(j, 2)
    '12. ETV SERVICIO
    ReporteDem(contadorDem, 12) = subtotalEtvPlaza(j, 24)
    '13. BANCO CUENTA DEP|fffd|SITO DEM
    ReporteDem(contadorDem, 13) = "BBVA BANCOMER"
    '14. ID SUCURSAL
    ReporteDem(contadorDem, 14) = subtotalEtvPlaza(j, 3)
    '15. PLAZA
    ReporteDem(contadorDem, 15) = subtotalEtvPlaza(j, 4)
    '16. ETV
    ReporteDem(contadorDem, 16) = subtotalEtvPlaza(j, 5)
    
    contadorDem = contadorDem + 1
    
    End If

'MONEDA 1
    If subtotalEtvPlaza(j, 19) > 0 Then
    
    '1. Instituci|fffd|n
    ReporteDem(contadorDem, 1) = institucionLabel
    '2. Fecha
    ReporteDem(contadorDem, 2) = fechaLabel
    '3. Contraparte
    ReporteDem(contadorDem, 3) = contraparteLabel
    '4. Tipo Operacion
    ReporteDem(contadorDem, 4) = tipoOperacionLabel
    '5. Sucursal
    ReporteDem(contadorDem, 5) = subtotalEtvPlaza(j, 3)
    '6. Medio Distribucion
    ReporteDem(contadorDem, 6) = medioDistribucionLabel
    '7. Transportadora Valores
    ReporteDem(contadorDem, 7) = ""

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '8. Denominaci|fffd|n/Total (Etiqueta)
    ReporteDem(contadorDem, 8) = "1M"
    '9. Importe
    ReporteDem(contadorDem, 9) = subtotalEtvPlaza(j, 19)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '10. N|fffd|mero de Operaciones
    ReporteDem(contadorDem, 10) = subtotalEtvPlaza(j, 6)
    '11. ORIGEN CONCENTRACI|fffd|N
    ReporteDem(contadorDem, 11) = subtotalEtvPlaza(j, 2)
    '12. ETV SERVICIO
    ReporteDem(contadorDem, 12) = subtotalEtvPlaza(j, 24)
    '13. BANCO CUENTA DEP|fffd|SITO DEM
    ReporteDem(contadorDem, 13) = "BBVA BANCOMER"
    '14. ID SUCURSAL
    ReporteDem(contadorDem, 14) = subtotalEtvPlaza(j, 3)
    '15. PLAZA
    ReporteDem(contadorDem, 15) = subtotalEtvPlaza(j, 4)
    '16. ETV
    ReporteDem(contadorDem, 16) = subtotalEtvPlaza(j, 5)
    
    contadorDem = contadorDem + 1
    
    End If
    
'MONEDA .50
    If subtotalEtvPlaza(j, 20) > 0 Then
    
    '1. Instituci|fffd|n
    ReporteDem(contadorDem, 1) = institucionLabel
    '2. Fecha
    ReporteDem(contadorDem, 2) = fechaLabel
    '3. Contraparte
    ReporteDem(contadorDem, 3) = contraparteLabel
    '4. Tipo Operacion
    ReporteDem(contadorDem, 4) = tipoOperacionLabel
    '5. Sucursal
    ReporteDem(contadorDem, 5) = subtotalEtvPlaza(j, 3)
    '6. Medio Distribucion
    ReporteDem(contadorDem, 6) = medioDistribucionLabel
    '7. Transportadora Valores
    ReporteDem(contadorDem, 7) = ""

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '8. Denominaci|fffd|n/Total (Etiqueta)
    ReporteDem(contadorDem, 8) = "50CM"
    '9. Importe
    ReporteDem(contadorDem, 9) = subtotalEtvPlaza(j, 20)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '10. N|fffd|mero de Operaciones
    ReporteDem(contadorDem, 10) = subtotalEtvPlaza(j, 6)
    '11. ORIGEN CONCENTRACI|fffd|N
    ReporteDem(contadorDem, 11) = subtotalEtvPlaza(j, 2)
    '12. ETV SERVICIO
    ReporteDem(contadorDem, 12) = subtotalEtvPlaza(j, 24)
    '13. BANCO CUENTA DEP|fffd|SITO DEM
    ReporteDem(contadorDem, 13) = "BBVA BANCOMER"
    '14. ID SUCURSAL
    ReporteDem(contadorDem, 14) = subtotalEtvPlaza(j, 3)
    '15. PLAZA
    ReporteDem(contadorDem, 15) = subtotalEtvPlaza(j, 4)
    '16. ETV
    ReporteDem(contadorDem, 16) = subtotalEtvPlaza(j, 5)
    
    contadorDem = contadorDem + 1
    
    End If


'MONEDA .20
    If subtotalEtvPlaza(j, 21) > 0 Then
    
    '1. Instituci|fffd|n
    ReporteDem(contadorDem, 1) = institucionLabel
    '2. Fecha
    ReporteDem(contadorDem, 2) = fechaLabel
    '3. Contraparte
    ReporteDem(contadorDem, 3) = contraparteLabel
    '4. Tipo Operacion
    ReporteDem(contadorDem, 4) = tipoOperacionLabel
    '5. Sucursal
    ReporteDem(contadorDem, 5) = subtotalEtvPlaza(j, 3)
    '6. Medio Distribucion
    ReporteDem(contadorDem, 6) = medioDistribucionLabel
    '7. Transportadora Valores
    ReporteDem(contadorDem, 7) = ""

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '8. Denominaci|fffd|n/Total (Etiqueta)
    ReporteDem(contadorDem, 8) = "20CM"
    '9. Importe
    ReporteDem(contadorDem, 9) = subtotalEtvPlaza(j, 21)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '10. N|fffd|mero de Operaciones
    ReporteDem(contadorDem, 10) = subtotalEtvPlaza(j, 6)
    '11. ORIGEN CONCENTRACI|fffd|N
    ReporteDem(contadorDem, 11) = subtotalEtvPlaza(j, 2)
    '12. ETV SERVICIO
    ReporteDem(contadorDem, 12) = subtotalEtvPlaza(j, 24)
    '13. BANCO CUENTA DEP|fffd|SITO DEM
    ReporteDem(contadorDem, 13) = "BBVA BANCOMER"
    '14. ID SUCURSAL
    ReporteDem(contadorDem, 14) = subtotalEtvPlaza(j, 3)
    '15. PLAZA
    ReporteDem(contadorDem, 15) = subtotalEtvPlaza(j, 4)
    '16. ETV
    ReporteDem(contadorDem, 16) = subtotalEtvPlaza(j, 5)
    
    contadorDem = contadorDem + 1
    
    End If
    

'MONEDA .10
    If subtotalEtvPlaza(j, 22) > 0 Then
    
    '1. Instituci|fffd|n
    ReporteDem(contadorDem, 1) = institucionLabel
    '2. Fecha
    ReporteDem(contadorDem, 2) = fechaLabel
    '3. Contraparte
    ReporteDem(contadorDem, 3) = contraparteLabel
    '4. Tipo Operacion
    ReporteDem(contadorDem, 4) = tipoOperacionLabel
    '5. Sucursal
    ReporteDem(contadorDem, 5) = subtotalEtvPlaza(j, 3)
    '6. Medio Distribucion
    ReporteDem(contadorDem, 6) = medioDistribucionLabel
    '7. Transportadora Valores
    ReporteDem(contadorDem, 7) = ""

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '8. Denominaci|fffd|n/Total (Etiqueta)
    ReporteDem(contadorDem, 8) = "10CM"
    '9. Importe
    ReporteDem(contadorDem, 9) = subtotalEtvPlaza(j, 22)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '10. N|fffd|mero de Operaciones
    ReporteDem(contadorDem, 10) = subtotalEtvPlaza(j, 6)
    '11. ORIGEN CONCENTRACI|fffd|N
    ReporteDem(contadorDem, 11) = subtotalEtvPlaza(j, 2)
    '12. ETV SERVICIO
    ReporteDem(contadorDem, 12) = subtotalEtvPlaza(j, 24)
    '13. BANCO CUENTA DEP|fffd|SITO DEM
    ReporteDem(contadorDem, 13) = "BBVA BANCOMER"
    '14. ID SUCURSAL
    ReporteDem(contadorDem, 14) = subtotalEtvPlaza(j, 3)
    '15. PLAZA
    ReporteDem(contadorDem, 15) = subtotalEtvPlaza(j, 4)
    '16. ETV
    ReporteDem(contadorDem, 16) = subtotalEtvPlaza(j, 5)
    
    contadorDem = contadorDem + 1
    
    End If
    
    
'MONEDA .05
    If subtotalEtvPlaza(j, 23) > 0 Then
    
    '1. Instituci|fffd|n
    ReporteDem(contadorDem, 1) = institucionLabel
    '2. Fecha
    ReporteDem(contadorDem, 2) = fechaLabel
    '3. Contraparte
    ReporteDem(contadorDem, 3) = contraparteLabel
    '4. Tipo Operacion
    ReporteDem(contadorDem, 4) = tipoOperacionLabel
    '5. Sucursal
    ReporteDem(contadorDem, 5) = subtotalEtvPlaza(j, 3)
    '6. Medio Distribucion
    ReporteDem(contadorDem, 6) = medioDistribucionLabel
    '7. Transportadora Valores
    ReporteDem(contadorDem, 7) = ""

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '8. Denominaci|fffd|n/Total (Etiqueta)
    ReporteDem(contadorDem, 8) = "5CM"
    '9. Importe
    ReporteDem(contadorDem, 9) = subtotalEtvPlaza(j, 23)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '10. N|fffd|mero de Operaciones
    ReporteDem(contadorDem, 10) = subtotalEtvPlaza(j, 6)
    '11. ORIGEN CONCENTRACI|fffd|N
    ReporteDem(contadorDem, 11) = subtotalEtvPlaza(j, 2)
    '12. ETV SERVICIO
    ReporteDem(contadorDem, 12) = subtotalEtvPlaza(j, 24)
    '13. BANCO CUENTA DEP|fffd|SITO DEM
    ReporteDem(contadorDem, 13) = "BBVA BANCOMER"
    '14. ID SUCURSAL
    ReporteDem(contadorDem, 14) = subtotalEtvPlaza(j, 3)
    '15. PLAZA
    ReporteDem(contadorDem, 15) = subtotalEtvPlaza(j, 4)
    '16. ETV
    ReporteDem(contadorDem, 16) = subtotalEtvPlaza(j, 5)
    
    contadorDem = contadorDem + 1
    
    End If

'MONEDA .50
    If subtotalEtvPlaza(j, 7) > 0 Then
    
    '1. Instituci|fffd|n
    ReporteDem(contadorDem, 1) = institucionLabel
    '2. Fecha
    ReporteDem(contadorDem, 2) = fechaLabel
    '3. Contraparte
    ReporteDem(contadorDem, 3) = contraparteLabel
    '4. Tipo Operacion
    ReporteDem(contadorDem, 4) = tipoOperacionLabel
    '5. Sucursal
    ReporteDem(contadorDem, 5) = subtotalEtvPlaza(j, 3)
    '6. Medio Distribucion
    ReporteDem(contadorDem, 6) = medioDistribucionLabel
    '7. Transportadora Valores
    ReporteDem(contadorDem, 7) = ""

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    '8. Denominaci|fffd|n/Total (Etiqueta)
    ReporteDem(contadorDem, 8) = "TOT"
    '9. Importe
    ReporteDem(contadorDem, 9) = subtotalEtvPlaza(j, 7)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '10. N|fffd|mero de Operaciones
    ReporteDem(contadorDem, 10) = subtotalEtvPlaza(j, 6)
    '11. ORIGEN CONCENTRACI|fffd|N
    ReporteDem(contadorDem, 11) = subtotalEtvPlaza(j, 2)
    '12. ETV SERVICIO
    ReporteDem(contadorDem, 12) = subtotalEtvPlaza(j, 24)
    '13. BANCO CUENTA DEP|fffd|SITO DEM
    ReporteDem(contadorDem, 13) = "BBVA BANCOMER"
    '14. ID SUCURSAL
    ReporteDem(contadorDem, 14) = subtotalEtvPlaza(j, 3)
    '15. PLAZA
    ReporteDem(contadorDem, 15) = subtotalEtvPlaza(j, 4)
    '16. ETV
    ReporteDem(contadorDem, 16) = subtotalEtvPlaza(j, 5)
    
    contadorDem = contadorDem + 1
    
    End If
    
    
Next j
    



''''''''''''''''''''''''AGREGAR A HOJA 6'''''''''''''''''''''''''''
'sh6 = "Procesar"

Sheets(sh6).Select
Cells.Clear

'ENCABEZADO
Cells(1, 1) = "R  E  P  O  R  T  E       D  E       C  O  N  C  E  N  T  R  A  C  I  O  N  E  S       D  E       E  F  E  C  T  I  V  O"

Cells(2, 1) = "1. Informaci|fffd|n General"
'periodo
Cells(3, 1) = "Periodo"
Cells(3, 2) = mesReporte & " " & anioReporte

'totales
Cells(4, 1) = "Total de Concentraciones"
Cells(5, 1) = "Total Importe"

Cells(8, 1) = "Origen Concentraci|fffd|n"
Cells(8, 2) = "ETV Servicio"
Cells(8, 3) = "Id Sucursal"
Cells(8, 4) = "ETV Caja"
Cells(8, 5) = "Plaza Caja"
Cells(8, 6) = "Fecha Servicio"
Cells(8, 7) = "# Servicios"
Cells(8, 8) = "Importe"

'DETALLE SERVICIOS
Cells(7, 1) = "2. Detalle servicios Concentraci|fffd|n"

X = 9

For i = 1 To UBound(DemInfo)
    
    If DemInfo(i, 8) = mesReporte Then
    
    'ORIGEN
    Cells(X, 1) = DemInfo(i, 6)
    'ETV SERVICIO
    Cells(X, 2) = DemInfo(i, 3)
    'ID SUCURSAL
    Cells(X, 3) = DemInfo(i, 5)
    'ETV ORIGEN
    Cells(X, 4) = DemInfo(i, 2)
    'PLAZA
    Cells(X, 5) = DemInfo(i, 4)
    'FECHA SERVICIO
    Cells(X, 6) = DemInfo(i, 7)
    'NUMERO SERVICIOS
    Cells(X, 7) = 1
    'SUMA
    Cells(X, 8) = DemInfo(i, 9)
     
    TotalOperaciones = TotalOperaciones + 1
    TotalImporteDem = TotalImporteDem + DemInfo(i, 9)
        
     X = X + 1
     
    End If
   
    
Next i

'VALOR TOTALES
Cells(4, 2) = Format(TotalOperaciones, "###,##0")
Cells(5, 2) = Format(TotalImporteDem, "$###,##0.00")


X = X + 4

'DETALLE SERVICIOS
Cells(X - 3, 1) = "3. Formato de Regulatorio OEMN 1"

'secci|fffd|n
Cells(X - 2, 1) = "Layout Regulatorio"
Cells(X - 2, 11) = "Informaci|fffd|n Detallada"

'Encabezados
Cells(X - 1, 1) = "Instituci|fffd|n"
Cells(X - 1, 2) = "Fecha"
Cells(X - 1, 3) = "Contraparte"
Cells(X - 1, 4) = "Tipo Operacion"
Cells(X - 1, 5) = "Sucursal"
Cells(X - 1, 6) = "Medio Distribucion"
Cells(X - 1, 7) = "Transportadora Valores"
Cells(X - 1, 8) = "Denominaci|fffd|n"
Cells(X - 1, 9) = "Importe"
Cells(X - 1, 10) = "N|fffd|mero de Operaciones"
Cells(X - 1, 11) = "ORIGEN CONCENTRACI|fffd|N"
Cells(X - 1, 12) = "ETV SERVICIO"
Cells(X - 1, 13) = "BANCO CUENTA DEP|fffd|SITO DEM"
Cells(X - 1, 14) = "ID SUCURSAL"
Cells(X - 1, 15) = "PLAZA CAJA"
Cells(X - 1, 16) = "ETV CAJA"


For i = 1 To UBound(ReporteDem)

Cells(X, 1) = ReporteDem(i, 1)
Cells(X, 2) = ReporteDem(i, 2)
Cells(X, 3) = ReporteDem(i, 3)
Cells(X, 4) = ReporteDem(i, 4)
Cells(X, 5) = ReporteDem(i, 5)
Cells(X, 6) = ReporteDem(i, 6)
Cells(X, 7) = ReporteDem(i, 7)
Cells(X, 8) = ReporteDem(i, 8)
Cells(X, 9) = ReporteDem(i, 9)
Cells(X, 10) = ReporteDem(i, 10)
Cells(X, 11) = ReporteDem(i, 11)
Cells(X, 12) = ReporteDem(i, 12)
Cells(X, 13) = ReporteDem(i, 13)
Cells(X, 14) = ReporteDem(i, 14)
Cells(X, 15) = ReporteDem(i, 15)
Cells(X, 16) = ReporteDem(i, 16)

X = X + 1

Next i

''''''''''''''''FORMATO DEL REPORTE''''''''''''''''''''''

Call CU_8FormatoReporteRegulatorioPlazasEtvOemn1

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'''''''''''''''''''''''''CORREO'''''''''''''''''''''''''''

''''''''''''''''''PARA CC CCO''''''''''''''''''''''''''''''''''''''
'sh6 = "Procesar"
Sheets(sh6).Select
Dim PARA, CC, CCO As String
Dim MailDestRow As Long
Dim MailDestCol As Integer

MailDestRow = 89
MailDestCol = 1
PARA = ""
CC = ""
CCO = ""

Do While Cells(MailDestRow, MailDestCol) <> ""
    
    If Cells(MailDestRow, MailDestCol) = "Para" Then
    PARA = PARA & ";" & Cells(MailDestRow, MailDestCol + 1).value
    
    ElseIf Cells(MailDestRow, MailDestCol) = "CC" Then
    CC = CC & ";" & Cells(MailDestRow, MailDestCol + 1).value
    
    ElseIf Cells(MailDestRow, MailDestCol) = "CCO" Then
    CCO = CCO & ";" & Cells(MailDestRow, MailDestCol + 1).value
    End If


MailDestRow = MailDestRow + 1

Loop

'MsgBox PARA & Chr(10) & CC & Chr(10) & CCO

'correo
 ''''''''''''''''''''''''''''''''CORREO'''''''''''''''''''''''''''''
'                    Call CO3_1FormatoServicios
                Dim OutApp, OutMail As Object
                'Dim MiAdjunto As Outlook.Attachments
                Dim Asunto, Mensaje1, Mensaje2, FirmaCompartamos As String
                Dim ArchivoAdjunto As String
                Dim Saludo As String
                
                'Saludo dependiendo la hora de ejecuci|fffd|n
                If Hour(Now()) >= 12 Then
                Saludo = "Buenas tardes,"
                Else
                Saludo = "Buenos d|fffd|as,"
                End If
                
                'Asunto del correo
                Asunto = "SALDOS CAJAS**  " & NombresDiasMayus(Weekday(Date, vbMonday)) & " " _
                        & Day(Date) & " DE " & NombresMesesLargo(Month(Date))
                
                'Mensaje
                'sh19 = "PARAMETROS"
                'valTotInicial
                'valTotCompras
                'valTotDotaciones
                'valTotTraspasosIn
                'valTotTraspasosOut
                'valTotFisico
                'valTotEstimado
                Mensaje = "Se env|fffd|an los saldos de cajas al d|fffd|a de hoy."
                Mensaje1 = "N|fffd|mero de cajas = " & Format(UBound(DOTACIONES), "#,##0")
                Mensaje3 = "Saldo Inicial = " & Format(valTotInicial, "$#,##0.00")
                Mensaje4 = "Compras = " & Format(valTotCompras, "$#,##0.00")
                Mensaje5 = "Dotaciones = " & Format(valTotDotaciones, "$#,##0.00")
                Mensaje6 = "Dotaciones Emergentes = " & Format(valTotDotacionesEmergentes, "$#,##0.00")
                Mensaje7 = "Recepci|fffd|n Traspasos = " & Format(valTotTraspasosIn, "$#,##0.00")
                Mensaje8 = "Env|fffd|o Traspasos = " & Format(valTotTraspasosOut, "$#,##0.00")
                Mensaje9 = "Saldo F|fffd|sico dia t = " & Format(valTotFisico, "$#,##0.00")
                Mensaje10 = "Saldo Estimado dia t +1 = " & Format(valTotEstimado, "$#,##0.00")
                
                Mensaje2 = "Saludos,"
                
                
                'Comprobar si Outlook esta abierto y en caso de no estarlo abrirlo

                On Error Resume Next
                Set OutApp = GetObject("", "Outlook.Application")
                Err.Clear
                
                If OutApp Is Nothing Then
                Set OutApp = CreateObject("Outlook.Application")
                End If

                
                OutApp.Visible = True
                
                OutApp.session.logon
                
                'se crea m|fffd|todo de env|fffd|o de correo
                Set OutMail = OutApp.CreateItem(0)
                
                
                
                'adjunto
                'Set MiAdjunto = OutMail.Attachments
                
                
                ''''''''''''''''''''''''''''''''''''''''''CORREO'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                'el cuerpo del correo y los archivos a djuntos
                On Error Resume Next
                
                With OutMail
                '.MiAdjunto.Add ArchivoAdjunto
                .To = PARA
                .CC = CC
                .BCC = CCO
                .Subject = Asunto
                .Attachments.Add carpeta & ".xlsx"
                '.BodyFormat = 2 'olFormatRichText
                '.Attachments.Add ArchivoAdjunto
                .HTMLBody = "<html>" & _
                    "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6C6969"">" & Saludo & "<br>" & "<br>" & Mensaje & "</span style=""color:#6C6969"">" & "<p/>" _
                    & "<p style='font-family:verdana;font-size:18'>" & "<span style=""color:#E71743"">" & Mensaje1 & "<br>" & Mensaje3 & "<br>" & Mensaje4 & "<br>" & Mensaje5 & "<br>" & Mensaje6 & "<br>" & Mensaje7 & "<br>" & Mensaje8 & "<br>" & Mensaje9 & "<br>" & Mensaje10 & "<br>" & "<br>" & "</span style=""color:#E71743"">" _
                    & "<br>" & _
                    "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6C6969"">" & Mensaje2 & "<br>" _
                    & "<br>" & DATOS_USUARIO_WINDOWS(Environ("UserName"), 1) & "<br>" & _
                    "Tel. 5276-7250     Ext:    " & DATOS_USUARIO_WINDOWS(Environ("UserName"), 4) & "<br>" & _
                    DATOS_USUARIO_WINDOWS(Environ("UserName"), 5) & "</span style=""color:#6C6969"">" & "<p/>" & "<br>" & _
                    "<img src= " & Chr(34) & RutaLocal & NombreCarpetaCompartida & "\" & Catalogos & firmaImagen & Chr(34) _
                    & "</html>"
                    
                    
                    '' "<body>" "</body>"
                    
                '.Attachments.Add firmaImagen, False
                .display
                
                'Application.SendKeys "^{END}", True
                'Application.SendKeys "{ENTER}", True
                'Application.SendKeys "^v", True
                'DoEvents
                End With
                
                On Error GoTo 0
                
                Set OutMail = Nothing
                Set OutApp = Nothing

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

MsgBox "Reporte generado"
    
hora2 = Now()


End Sub

Sub CU_8FormatoReporteRegulatorioPlazasEtvOemn1()

Call VariablesGlobales

Dim largSq1, largSq2, largSq3 As Long
Dim punteroSq1, punteroSq2, punteroSq3, punteroSq3A As Long
Dim findSq3 As Range
Dim strSq3 As String

strSq3 = "Formato de Regulatorio OEMN 1"
Set findSq3 = Range("A:A").Find(strSq3)

punteroSq1 = 2
punteroSq2 = 7
punteroSq3 = findSq3.Row
punteroSq3A = 10

largSq2 = Cells(punteroSq2 + 1, 1).End(xlToRight).Column
largSq3 = Cells(punteroSq3 + 2, 1).End(xlToRight).Column

'sh6 = "Procesar"
Sheets(sh6).Select


'''''''''''''''''''''TITULO'''''''''''''''''''''''''''''
Range(Cells(punteroSq1 - 1, 1), Cells(punteroSq1 - 1, largSq3)).Select

With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 7733477
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Selection.Font.Bold = True
    With Selection
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With

    
'''''''''''''''''''''SECCI|fffd|N 1'''''''''''''''''''''''''''''
'SUBTITULO
Cells(punteroSq1, 1).Select
Selection.Font.Bold = True
With Selection.Font
        .ThemeColor = xlThemeColorAccent5
        .TintAndShade = -0.499984740745262
    End With
    ActiveCell.EntireRow.Select
    Selection.RowHeight = 22.5

'NOMBRE CAMPOS
Range(Cells(punteroSq1 + 1, 1), Cells(punteroSq1 + 1, 2).End(xlDown)).Select
Selection.Font.Bold = True
 With Selection
        .HorizontalAlignment = xlRight
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
Range(Cells(punteroSq1 + 1, 1), Cells(punteroSq1 + 1, 1).End(xlDown)).Select
With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249977111117893
        .PatternTintAndShade = 0
End With

With Selection
        .HorizontalAlignment = xlLeft
End With
   


'''''''''''''''''''''SECCI|fffd|N 2'''''''''''''''''''''''''''''
'SUBTITULO
Cells(punteroSq2, 1).Select
Selection.Font.Bold = True
With Selection.Font
        .ThemeColor = xlThemeColorAccent5
        .TintAndShade = -0.499984740745262
    End With
    ActiveCell.EntireRow.Select
    Selection.RowHeight = 22.5

'TITULOS CAMPOS
Range(Cells(punteroSq2 + 1, 1), Cells(punteroSq2 + 1, largSq2)).Select
 With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249977111117893
        .PatternTintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Font.Bold = True
'DETALLE
Range(Cells(punteroSq2 + 2, 1), Cells(punteroSq2 + 2, largSq2).End(xlDown)).Select
With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
        .ThemeFont = xlThemeFontMinor
    End With
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
   
 'COLUMNA FECHAS
 Range(Cells(punteroSq2 + 2, 6), Cells(punteroSq2 + 2, 6).End(xlDown)).Select
 Selection.NumberFormat = "m/d/yyyy"
    
 'COLUMNA IMPORTE
 Range(Cells(punteroSq2 + 2, largSq2), Cells(punteroSq2 + 2, largSq2).End(xlDown)).Select
 Selection.NumberFormat = "_($* #,##0.00_);_($* (#,##0.00);_($* ""-""??_);_(@_)"
 
'''''''''''''''''''''SECCI|fffd|N 3'''''''''''''''''''''''''''''
'SUBTITULO
Cells(punteroSq3, 1).Select
Selection.Font.Bold = True
With Selection.Font
        .ThemeColor = xlThemeColorAccent5
        .TintAndShade = -0.499984740745262
    End With
    ActiveCell.EntireRow.Select
    Selection.RowHeight = 22.5
    

'TITULOS CAMPOS
Range(Cells(punteroSq3 + 2, 1), Cells(punteroSq3 + 2, largSq3)).Select
 With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249977111117893
        .PatternTintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Font.Bold = True
    
'TITULO SECCIONES
Range(Cells(punteroSq3 + 1, 1), Cells(punteroSq3 + 1, punteroSq3A)).Select
With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorAccent1
        .TintAndShade = 0.799981688894314
        .PatternTintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    Selection.Font.Bold = True
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With

Range(Cells(punteroSq3 + 1, punteroSq3A + 1), Cells(punteroSq3 + 1, largSq3)).Select
With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorAccent2
        .TintAndShade = 0.799981688894314
        .PatternTintAndShade = 0
    End With
    Selection.Font.Bold = True
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
   
'DETALLE
Range(Cells(punteroSq3 + 3, 1), Cells(punteroSq3 + 3, largSq3).End(xlDown)).Select
With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
        .ThemeFont = xlThemeFontMinor
    End With
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
 
'AJUSTAR COLUMNAS
    Columns("A:A").ColumnWidth = 20.5
    Columns("B:B").ColumnWidth = 13.9
    Columns("C:C").ColumnWidth = 10
    
    Columns("D:F").EntireColumn.AutoFit
    Columns("G:G").ColumnWidth = 12.8
    Columns("H:H").ColumnWidth = 16.6
    Columns("I:J").EntireColumn.AutoFit
    Columns("K:K").ColumnWidth = 15.9
    Columns("L:L").ColumnWidth = 12.2
    Columns("M:M").ColumnWidth = 15.2
    Columns("N:N").ColumnWidth = 9.6
    Columns("O:O").ColumnWidth = 15.5
    Columns("P:P").ColumnWidth = 13#
End Sub


Sub PROBARFUNC()
Cells.ClearFormats

End Sub
Attribute VB_Name = "CV_CONFIRMACION_SERVICIOS"
Sub CV0_ReporteConfirmacionServiciosRegistros()
Application.ScreenUpdating = False
Application.EnableEvents = False

Call CV0_1CorreoConfirmacionServicios

Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub
Sub CV0_1CorreoConfirmacionServicios()

Call VariablesGlobales
Dim ListaServicios As Collection
Set ListaServicios = New Collection
Dim NombreArchivo As String
Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta, carpeta, nomCarpeta As String
Dim CuWs, cuSh As String


'nombre del archivo
CuWs = ActiveWorkbook.Name
cuSh = ActiveSheet.Name

'limpiar hoja
'sh1 = "pm_PLANEACION_CAJAS"

'Ubicar fecha del reporte
fechaValor = Date

DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = RutaLocal & NombreCarpetaCompartida & "\" & RutaPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaci|fffd|n Log|fffd|stica Monetaria\" & _
DayLabel & " " & NombreMes & " " & YearLabel & " Planeaci|fffd|n"
nomCarpeta = DayLabel & MonthValor & YearLabel
NombreArchivo = nomCarpeta & " Saldos Cajas " & UsuarioWin


carpeta = UnidadRuta & "\" & NombreArchivo

'MsgBox Carpeta

'MsgBox "UnidadRuta " & UnidadRuta & Chr(10) & "NombreArchivo " & NombreArchivo


''''''''''''''''''''''''''ARREGLO'''''''''''''''''''''''''''''
'sh21 = "ConfirmacionServicios"
Sheets(sh21).Select


Dim Servicios() As Variant
Dim EncabezadosServicios() As Variant
Dim row0, col0, rowFin, colFin, RowRep0, ColRep0, ColRepFin As Long
Dim punteroEtv, punteroplaza, punteroIdSuc, punteroSucursal, punteroEtvServicio, punteroServicio, punteroImporte, punteroPlaneador As Long
Dim posicionServicio1, posicionServicio2, posicionServicio3, posicionServicio4, posicionServicio5, posicionServicio6, posicionServicio7, posicionServicio8, posicionServicio9, posicionServicio10, posicionServicio11, posicionServicio12, posicionServicio13, posicionServicio14, posicionServicio15, posicionServicio16, posicionServicio17, posicionServicio18, posicionServicio19, posicionServicio20 As Long
Dim valorServicio1, valorServicio2, valorServicio3, valorServicio4, valorServicio5, valorServicio6, valorServicio7, valorServicio8, valorServicio9, valorServicio10, valorServicio11, valorServicio12, valorServicio13, valorServicio14, valorServicio15, valorServicio16, valorServicio17, valorServicio18, valorServicio19, valorServicio20 As Long

Dim totDot As Long
Dim marcaConstante1 As String
Dim numMarca1, contadorSaldos As Integer

marcaConstante1 = "CONFIRMADO"
contadorSaldos = 1

'''''''''''''''''''''''''''''VALORES DE FORMULARIO''''''''''''''''''''''''''''''''
Dim ordenCol As Integer
'incremental
ordenCol = 0
    
'est|fffd|tico
constanteInicio = 1
'total de columnas con informaci|fffd|n
totCol = 0


If CONFIRMACION_SERVICIOS.CheckBox1 = True Then
posicionServicio1 = ordenCol
ordenCol = posicionServicio1 + 1
totCol = posicionServicio1
'Agregar valor a colecci|fffd|n

On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox1.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox1.Caption)
On Error GoTo 0

Else

ordenCol = 1
totCol = posicionServicio1
'Agregar valor a colecci|fffd|n

On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox1.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox1.Caption)
On Error GoTo 0

End If


If CONFIRMACION_SERVICIOS.CheckBox2 = True And ordenCol > constanteInicio Then
posicionServicio2 = ordenCol
ordenCol = posicionServicio2 + 1
totCol = posicionServicio2
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox2.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox2.Caption)
On Error GoTo 0

ElseIf CONFIRMACION_SERVICIOS.CheckBox2 = True And ordenCol = constanteInicio Then
posicionServicio2 = ordenCol
ordenCol = posicionServicio2 + 1
totCol = posicionServicio2
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox2.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox2.Caption)
On Error GoTo 0

End If


If CONFIRMACION_SERVICIOS.CheckBox3 = True And ordenCol > constanteInicio Then
posicionServicio3 = ordenCol
ordenCol = posicionServicio3 + 1
totCol = posicionServicio3
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox3.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox3.Caption)
On Error GoTo 0

ElseIf CONFIRMACION_SERVICIOS.CheckBox3 = True And ordenCol = constanteInicio Then
posicionServicio3 = ordenCol
ordenCol = posicionServicio3 + 1
totCol = posicionServicio3
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox3.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox3.Caption)
On Error GoTo 0


End If

If CONFIRMACION_SERVICIOS.CheckBox4 = True And ordenCol > constanteInicio Then
posicionServicio4 = ordenCol
ordenCol = posicionServicio4 + 1
totCol = posicionServicio4
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox4.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox4.Caption)
On Error GoTo 0

ElseIf CONFIRMACION_SERVICIOS.CheckBox4 = True And ordenCol = constanteInicio Then
posicionServicio4 = ordenCol
ordenCol = posicionServicio4 + 1
totCol = posicionServicio4
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox4.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox4.Caption)
On Error GoTo 0

End If


If CONFIRMACION_SERVICIOS.CheckBox5 = True And ordenCol > constanteInicio Then
posicionServicio5 = ordenCol
ordenCol = posicionServicio5 + 1
totCol = posicionServicio5
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox5.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox5.Caption)
On Error GoTo 0

ElseIf CONFIRMACION_SERVICIOS.CheckBox5 = True And ordenCol = constanteInicio Then
posicionServicio5 = ordenCol
ordenCol = posicionServicio5 + 1
totCol = posicionServicio5
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox5.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox5.Caption)
On Error GoTo 0


End If


If CONFIRMACION_SERVICIOS.CheckBox6 = True And ordenCol > constanteInicio Then
posicionServicio6 = ordenCol
ordenCol = posicionServicio6 + 1
totCol = posicionServicio6
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox6.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox6.Caption)
On Error GoTo 0

ElseIf CONFIRMACION_SERVICIOS.CheckBox6 = True And ordenCol = constanteInicio Then
posicionServicio6 = ordenCol
ordenCol = posicionServicio6 + 1
totCol = posicionServicio6
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox6.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox6.Caption)
On Error GoTo 0

End If



If CONFIRMACION_SERVICIOS.CheckBox7 = True And ordenCol > constanteInicio Then
posicionServicio7 = ordenCol
ordenCol = posicionServicio7 + 1
totCol = posicionServicio7
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox7.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox7.Caption)
On Error GoTo 0

ElseIf CONFIRMACION_SERVICIOS.CheckBox7 = True And ordenCol = constanteInicio Then
posicionServicio7 = ordenCol
ordenCol = posicionServicio7 + 1
totCol = posicionServicio7
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox7.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox7.Caption)
On Error GoTo 0

End If



If CONFIRMACION_SERVICIOS.CheckBox8 = True And ordenCol > constanteInicio Then
posicionServicio8 = ordenCol
ordenCol = posicionServicio8 + 1
totCol = posicionServicio8
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox8.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox8.Caption)
On Error GoTo 0

ElseIf CONFIRMACION_SERVICIOS.CheckBox8 = True And ordenCol = constanteInicio Then
posicionServicio8 = ordenCol
ordenCol = posicionServicio8 + 1
totCol = posicionServicio8
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox8.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox8.Caption)
On Error GoTo 0

End If



If CONFIRMACION_SERVICIOS.CheckBox9 = True And ordenCol > constanteInicio Then
posicionServicio9 = ordenCol
ordenCol = posicionServicio9 + 1
totCol = posicionServicio9
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox9.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox9.Caption)
On Error GoTo 0

ElseIf CONFIRMACION_SERVICIOS.CheckBox9 = True And ordenCol = constanteInicio Then
posicionServicio9 = ordenCol
ordenCol = posicionServicio9 + 1
totCol = posicionServicio9
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox9.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox9.Caption)
On Error GoTo 0

End If


If CONFIRMACION_SERVICIOS.CheckBox10 = True And ordenCol > constanteInicio Then
posicionServicio10 = ordenCol
ordenCol = posicionServicio10 + 1
totCol = posicionServicio10
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox10.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox10.Caption)
On Error GoTo 0

ElseIf CONFIRMACION_SERVICIOS.CheckBox10 = True And ordenCol = constanteInicio Then
posicionServicio10 = ordenCol
ordenCol = posicionServicio10 + 1
totCol = posicionServicio10
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox10.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox10.Caption)
On Error GoTo 0

End If


If CONFIRMACION_SERVICIOS.CheckBox11 = True And ordenCol > constanteInicio Then
posicionServicio11 = ordenCol
ordenCol = posicionServicio11 + 1
totCol = posicionServicio11
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox11.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox11.Caption)
On Error GoTo 0

ElseIf CONFIRMACION_SERVICIOS.CheckBox11 = True And ordenCol = constanteInicio Then
posicionServicio11 = ordenCol
ordenCol = posicionServicio11 + 1
totCol = posicionServicio11
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox11.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox11.Caption)
On Error GoTo 0


End If



If CONFIRMACION_SERVICIOS.CheckBox12 = True And ordenCol > constanteInicio Then
posicionServicio12 = ordenCol
ordenCol = posicionServicio12 + 1
totCol = posicionServicio12
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox12.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox12.Caption)
On Error GoTo 0

ElseIf CONFIRMACION_SERVICIOS.CheckBox12 = True And ordenCol = constanteInicio Then
posicionServicio12 = ordenCol
ordenCol = posicionServicio12 + 1
totCol = posicionServicio12
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox12.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox12.Caption)
On Error GoTo 0

End If



If CONFIRMACION_SERVICIOS.CheckBox13 = True And ordenCol > constanteInicio Then
posicionServicio13 = ordenCol
ordenCol = posicionServicio13 + 1
totCol = posicionServicio13
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox13.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox13.Caption)
On Error GoTo 0

ElseIf CONFIRMACION_SERVICIOS.CheckBox13 = True And ordenCol = constanteInicio Then
posicionServicio13 = ordenCol
ordenCol = posicionServicio13 + 1
totCol = posicionServicio13
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox13.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox13.Caption)
On Error GoTo 0

End If



If CONFIRMACION_SERVICIOS.CheckBox14 = True And ordenCol > constanteInicio Then
posicionServicio14 = ordenCol
ordenCol = posicionServicio14 + 1
totCol = posicionServicio14
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox14.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox14.Caption)
On Error GoTo 0


ElseIf CONFIRMACION_SERVICIOS.CheckBox14 = True And ordenCol = constanteInicio Then
posicionServicio14 = ordenCol
ordenCol = posicionServicio14 + 1
totCol = posicionServicio14
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox14.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox14.Caption)
On Error GoTo 0

End If



If CONFIRMACION_SERVICIOS.CheckBox15 = True And ordenCol > constanteInicio Then
posicionServicio15 = ordenCol
ordenCol = posicionServicio15 + 1
totCol = posicionServicio15
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox15.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox15.Caption)
On Error GoTo 0

ElseIf CONFIRMACION_SERVICIOS.CheckBox15 = True And ordenCol = constanteInicio Then
posicionServicio15 = ordenCol
ordenCol = posicionServicio15 + 1
totCol = posicionServicio15
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox15.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox15.Caption)
On Error GoTo 0

End If



If CONFIRMACION_SERVICIOS.CheckBox16 = True And ordenCol > constanteInicio Then
posicionServicio16 = ordenCol
ordenCol = posicionServicio16 + 1
totCol = posicionServicio16
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox16.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox16.Caption)
On Error GoTo 0

ElseIf CONFIRMACION_SERVICIOS.CheckBox16 = True And ordenCol = constanteInicio Then
posicionServicio16 = ordenCol
ordenCol = posicionServicio16 + 1
totCol = posicionServicio16
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox16.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox16.Caption)
On Error GoTo 0

End If



If CONFIRMACION_SERVICIOS.CheckBox17 = True And ordenCol > constanteInicio Then
posicionServicio17 = ordenCol
ordenCol = posicionServicio17 + 1
totCol = posicionServicio17
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox17.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox17.Caption)
On Error GoTo 0

ElseIf CONFIRMACION_SERVICIOS.CheckBox17 = True And ordenCol = constanteInicio Then
posicionServicio17 = ordenCol
ordenCol = posicionServicio17 + 1
totCol = posicionServicio17
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox17.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox17.Caption)
On Error GoTo 0

End If



If CONFIRMACION_SERVICIOS.CheckBox18 = True And ordenCol > constanteInicio Then
posicionServicio18 = ordenCol
ordenCol = posicionServicio18 + 1
totCol = posicionServicio18
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox18.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox18.Caption)
On Error GoTo 0

ElseIf CONFIRMACION_SERVICIOS.CheckBox18 = True And ordenCol = constanteInicio Then
posicionServicio18 = ordenCol
ordenCol = posicionServicio18 + 1
totCol = posicionServicio18
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox18.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox18.Caption)
On Error GoTo 0

End If


If CONFIRMACION_SERVICIOS.CheckBox19 = True And ordenCol > constanteInicio Then
posicionServicio19 = ordenCol
ordenCol = posicionServicio19 + 1
totCol = posicionServicio19
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox19.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox19.Caption)
On Error GoTo 0

ElseIf CONFIRMACION_SERVICIOS.CheckBox19 = True And ordenCol = constanteInicio Then
posicionServicio19 = ordenCol
ordenCol = posicionServicio19 + 1
totCol = posicionServicio19
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox19.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox19.Caption)
On Error GoTo 0


End If



If CONFIRMACION_SERVICIOS.CheckBox20 = True And ordenCol > constanteInicio Then
posicionServicio20 = ordenCol
ordenCol = posicionServicio20 + 1
totCol = posicionServicio20
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox20.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox20.Caption)
On Error GoTo 0

ElseIf CONFIRMACION_SERVICIOS.CheckBox20 = True And ordenCol = constanteInicio Then
posicionServicio20 = ordenCol
ordenCol = posicionServicio20 + 1
totCol = posicionServicio20
'Agregar valor a colecci|fffd|n
On Error Resume Next
ListaServicios.Add CONFIRMACION_SERVICIOS.CheckBox20.Caption, CStr(CONFIRMACION_SERVICIOS.CheckBox20.Caption)
On Error GoTo 0

End If

'MsgBox ListaServicios.Count
'For i = 1 To ListaServicios.Count
'MsgBox ListaServicios(i)
'
'Next i

'MsgBox posicionTotInicial & Chr(10) & _
'posicionTotCompras & Chr(10) & _
'posicionTotDotaciones & Chr(10) & _
'posicionTotTraspasosIn & Chr(10) & _
'posicionTotTraspasosOut & Chr(10) & _
'posicionTotFisico & Chr(10) & _
'posicionTotEstimado

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


'
'
'columna en hoja de datos
punteroEtv = 3
punteroplaza = 4
punteroIdSuc = 5
punteroSucursal = 6
punteroEtvServicio = 7
punteroServicio = 10
punteroImporte = 17
punteroPlaneador = 37
row0 = 3
col0 = 1
colFin = Cells(row0 - 1, col0).End(xlToRight).Column
'columnas del reporte
RowRep0 = 15
ColRep0 = 2


'medir filas
If Cells(row0 + 1, col0) = "" And Cells(row0 + 1, col0) = "" Then
MsgBox "NO HAY INFORMACI|fffd|N"
Exit Sub


ElseIf Cells(row0 + 2, col0) = "" And Cells(row0 + 3, col0) = "" Then
rowFin = 1

ElseIf (Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)).Count) > 10000 Then
rowFin = 1

ElseIf (Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)).Count) < 10000 Then
rowFin = (Range(Cells(row0, col0), Cells(row0, col0).End(xlDown)).Count)

End If

''numero de marca 1 TOTALES
'
'numMarca1 = Application.WorksheetFunction.CountIf(Range(Cells(row0 + 1, col0), Cells(rowFin + 3, col0)), marcaConstante1)


'Dimensionar arreglo
ReDim Servicios(rowFin + 3, colFin)

For i = 1 To UBound(Servicios)

    For j = 1 To colFin
    
        Servicios(i, j) = Cells(row0, col0).value
        
        col0 = col0 + 1
        
    Next j
    
    contadorSaldos = contadorSaldos + 1

    row0 = row0 + 1
    col0 = 1
    
Next i

'reestablecer Row0
row0 = 3
col0 = 1

ReDim EncabezadosServicios(colFin)

For i = 1 To colFin
    
    EncabezadosServicios(i) = Cells(row0 - 1, col0).value

col0 = col0 + 1

Next i


'reestablecer Row0
row0 = 3
col0 = 1
contador = 1

''
'MsgBox Servicios(40, 1) & Chr(10) & Servicios(40, 2) & _
'        Chr(10) & Servicios(40, 3) & Chr(10) & Servicios(40, 4) & _
'        Chr(10) & Servicios(40, 5) & Chr(10) & Servicios(40, 6) & _
'        Chr(10) & Servicios(40, 7) & Chr(10) & Servicios(40, 8) & _
'        Chr(10) & Servicios(40, 9) & Chr(10) & Servicios(40, 10) & _
'        Chr(10) & Servicios(40, 17) & Chr(10) & "UBOUND = " & UBound(Servicios)

'Agregar hoja
    Sheets.Add After:=ActiveSheet
    ActiveSheet.Select
    ActiveSheet.Name = nomCarpeta

'''''''''''''''''''''''INSERTAR INFORMACI|fffd|N''''''''''''''''''''''''''''''''
'On Error Resume Next
For i = 1 To UBound(Servicios)
    
    For j = 1 To ListaServicios.Count
    
        If Servicios(i, punteroServicio) = ListaServicios(j) Then
        Cells(RowRep0, ColRep0 - 1) = contador
        Cells(RowRep0, ColRep0) = Servicios(i, 1)
        Cells(RowRep0, ColRep0 + 1) = Servicios(i, 2)
        Cells(RowRep0, ColRep0 + 2) = Servicios(i, 3)
        Cells(RowRep0, ColRep0 + 3) = Servicios(i, 4)
        Cells(RowRep0, ColRep0 + 4) = Servicios(i, 5)
        Cells(RowRep0, ColRep0 + 5) = Servicios(i, 6)
        Cells(RowRep0, ColRep0 + 6) = Servicios(i, 7)
        Cells(RowRep0, ColRep0 + 7) = CDate(Servicios(i, 8))
        Cells(RowRep0, ColRep0 + 8) = CDate(Servicios(i, 9))
        Cells(RowRep0, ColRep0 + 9) = NombresDiasMayus(Weekday(CDate(Servicios(i, 9)), vbMonday))
        Cells(RowRep0, ColRep0 + 10) = Servicios(i, punteroServicio)
        Cells(RowRep0, ColRep0 + 11) = Servicios(i, punteroImporte)
        Cells(RowRep0, ColRep0 + 12) = Servicios(i, punteroPlaneador)
        Cells(RowRep0, ColRep0 + 13) = UsuarioWindows
        Cells(RowRep0, ColRep0 + 14) = Now()
        
        contador = contador + 1
        RowRep0 = RowRep0 + 1
        Exit For
        End If
        
    Next j
    
Next i



''''''''''''''''ENCABEZADOS''''''''''''''''''''''''''

'reestablecer Row0
RowRep0 = 15
ColRep0 = 2
contador = 1

''encabezados columna 1
 Cells(RowRep0 - 1, ColRep0 - 1) = "No."



''encabezados columna 11
 Cells(RowRep0 - 1, 11) = "DiaServicio"
 
''encabezados columna 10
 Cells(RowRep0 - 1, 12) = "TipoServicio"
 
'encabezados celdas del 1 a 8
For i = 1 To 9

    Cells(RowRep0 - 1, ColRep0) = EncabezadosServicios(i)
    
    ColRep0 = ColRep0 + 1
    
Next i

''encabezados columna 17 importe
 Cells(RowRep0 - 1, ColRep0 + 2) = EncabezadosServicios(punteroImporte)

''encabezados columna 37 planeador
 Cells(RowRep0 - 1, ColRep0 + 3) = EncabezadosServicios(punteroPlaneador)

''encabezados usuario
 Cells(RowRep0 - 1, ColRep0 + 4) = "UsuarioRegistro"
 ''encabezados fecha registro
 Cells(RowRep0 - 1, ColRep0 + 5) = "FechaRegistro"
 
''''''''''''''''INFORMACI|fffd|N''''''''''''''''''''''''''

'
'valTotInicial = 0
'valTotDotaciones = 0
'valTotDotacionesEmergentes = 0
'valTotCompras = 0
'valTotTraspasosIn = 0
'valTotTraspasosOut = 0
'valTotFisico = 0
'valTotEstimado = 0
'
''dotaciones
'For i = 1 To UBound(Saldos)
'    'No
'    Cells(RowRep0 + 1, ColRep0 - 1) = i
''    'ID CAJA
''    Cells(RowRep0 + 1, ColRep0) = Saldos(i, 1)
'    'PLAZA
'    Cells(RowRep0 + 1, ColRep0) = Saldos(i, 2)
'    'ETV DEUDOR
'    Cells(RowRep0 + 1, ColRep0 + 1) = Saldos(i, 3)
'    'SALDO INICIAL
'    Cells(RowRep0 + 1, posicionTotInicial) = Saldos(i, 4)
'    'DOTACIONES
'    Cells(RowRep0 + 1, posicionTotDotaciones) = Saldos(i, 5)
'    'DOTACIONES EMERGENTES
'    Cells(RowRep0 + 1, posicionTotDotacionesEmergentes) = Saldos(i, 6)
'    'COMPRAS
'    Cells(RowRep0 + 1, posicionTotCompras) = Saldos(i, 7)
'    'RECEPCI|fffd|N TRASPASO
'    Cells(RowRep0 + 1, posicionTotTraspasosIn) = Saldos(i, 8)
'    'ENV|fffd|O TRASPASO
'    Cells(RowRep0 + 1, posicionTotTraspasosOut) = Saldos(i, 9)
'     'SALDO F|fffd|SICO
'    Cells(RowRep0 + 1, posicionTotFisico) = Saldos(i, 10)
'    'SALDO ESTIMADO
'    Cells(RowRep0 + 1, posicionTotEstimado) = Saldos(i, 11)
'
'    'totales
'    valTotInicial = valTotInicial + Saldos(i, 4)
'    valTotDotaciones = valTotDotaciones + Saldos(i, 5)
'    valTotDotacionesEmergentes = valTotDotacionesEmergentes + Saldos(i, 6)
'    valTotCompras = valTotCompras + Saldos(i, 7)
'    valTotTraspasosIn = valTotTraspasosIn + Saldos(i, 8)
'    valTotTraspasosOut = valTotTraspasosOut + Saldos(i, 9)
'    valTotFisico = valTotFisico + Saldos(i, 10)
'    valTotEstimado = valTotEstimado + Saldos(i, 11)
'
'RowRep0 = RowRep0 + 1
'
'Next i
'
RowRep0 = 14
ColRep0 = 2
ColRepFin = Cells(RowRep0, 1).End(xlToRight).Column
RowRepFin = Cells(RowRep0, ColRep0).End(xlDown).Row
Columns("A:P").AutoFit

''numero de dotaciones
'Cells(posicionTotInicial + 2, ColRep0) = "Saldo Inicial"
'Cells(posicionTotCompras + 2, ColRep0) = "Compras"
'Cells(posicionTotDotaciones + 2, ColRep0) = "Dotaciones"
'Cells(posicionTotDotacionesEmergentes + 2, ColRep0) = "Dotaciones Emergentes"
'Cells(posicionTotTraspasosIn + 2, ColRep0) = "Recepci|fffd|n Traspaso"
'Cells(posicionTotTraspasosOut + 2, ColRep0) = "Env|fffd|o Traspaso"
'Cells(posicionTotFisico + 2, ColRep0) = "Saldo F|fffd|sico"
'Cells(posicionTotEstimado + 2, ColRep0) = "Saldo Estimado"
'''suma de dotaciones
'Cells(posicionTotInicial + 2, ColRep0 + 1) = Format(valTotInicial, "$#,##0.00")
'Cells(posicionTotCompras + 2, ColRep0 + 1) = Format(valTotCompras, "$#,##0.00")
'Cells(posicionTotDotaciones + 2, ColRep0 + 1) = Format(valTotDotaciones, "$#,##0.00")
'Cells(posicionTotDotacionesEmergentes + 2, ColRep0 + 1) = Format(valTotDotacionesEmergentes, "$#,##0.00")
'Cells(posicionTotTraspasosIn + 2, ColRep0 + 1) = Format(valTotTraspasosIn, "$#,##0.00")
'Cells(posicionTotTraspasosOut + 2, ColRep0 + 1) = Format(valTotTraspasosOut, "$#,##0.00")
'Cells(posicionTotFisico + 2, ColRep0 + 1) = Format(valTotFisico, "$#,##0.00")
'Cells(posicionTotEstimado + 2, ColRep0 + 1) = Format(valTotEstimado, "$#,##0.00")
'
'Datos generales
Cells(RowRep0 - 13, ColRep0) = "R E P O R T E    D E    S E R V I C I O S    D E    T R A S L A D O"
Cells(RowRep0 - 12, ColRep0) = "Fecha operaci|fffd|n"
Cells(RowRep0 - 11, ColRep0) = "Responsable"
'Cells(RowRep0 - 9, ColRep0) = "Total de Cajas Asignadas"
'
Cells(RowRep0 - 12, ColRep0 + 1) = Format(Now, "DD MMMM YYYY")
Cells(RowRep0 - 11, ColRep0 + 1) = NombrePlaneador
'
'
'''''''''''''''''''''''''''''FORMATO'''''''''''''''''''''''''''''''''''
'TITULO: DOTACIONES
Range(Cells(RowRep0 - 13, ColRep0), Cells(RowRep0 - 13, ColRepFin)).Select
With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With

With Selection.Font
        .Name = "Verdana"
        .size = 14
        .Color = -9043739
        .TintAndShade = 0
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .Bold = True
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 7733477
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With

Rows("1:1").RowHeight = 23.25

'TITULO: DATOS GENERALES
Range(Cells(RowRep0 - 12, ColRep0), Cells(RowRep0 - 11, ColRep0)).Select

With Selection
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With


With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10.5
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
        .Bold = False
    End With

'Detalle Datos generales
Range(Cells(RowRep0 - 12, ColRep0 + 1), Cells(RowRep0 - 11, ColRepFin)).Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
        .Bold = True
    End With
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With

'Detalle total de dotaciones
Range(Cells(RowRep0 - 9, ColRep0), Cells(RowRep0 - 9, ColRep0 + 1)).Select
 With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 49407
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Selection.Font.Bold = True

    With Selection.Font
        .Color = -16777024
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .Bold = True
    End With



'encabezados tabla
Range(Cells(RowRep0, ColRep0), Cells(RowRep0, ColRepFin)).Select
With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With

With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
With Selection.Font
    .Name = "Verdana"
    .size = 10
    .ThemeColor = xlThemeColorLight1
    .TintAndShade = 0.249977111117893
    .Bold = True
End With

'detalle tabla
Range(Cells(RowRep0 + 1, ColRep0 - 1), Cells(RowRepFin, ColRepFin)).Select

With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
End With
'
'Columns("B:B").AutoFit
'
'Range("A15:C15", Range("A15:C15").End(xlDown)).Select
' With Selection
'        .HorizontalAlignment = xlCenter
'        .VerticalAlignment = xlCenter
'End With
'
'
''ORDENAR
'Range(Cells(RowRep0 + 1, ColRep0), Cells(RowRep0 + 1, ColRepFin)).Select
'
'Selection.AutoFilter
'    ActiveSheet.AutoFilter.Sort.SortFields.Clear
'    ActiveSheet.AutoFilter.Sort.SortFields.Add Key:= _
'        Range(Cells(RowRep0 + 1, ColRepFin), Cells(RowRep0 + 1, ColRepFin)), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
'        xlSortNormal
'    With ActiveSheet.AutoFilter.Sort
'        .Header = xlYes
'        .MatchCase = False
'        .Orientation = xlBottomToTop
'        .SortMethod = xlPinYin
'        .Apply
'    End With
'
''QUITAR FILTRO
'    If ActiveSheet.AutoFilterMode = True Then
'        'MsgBox "si hay filtro"
'        ActiveSheet.AutoFilterMode = False
'        Else
'            'MsgBox "no hay filtro"
'        End If
'
''Quitar filas sin informaci|fffd|n
'
'Cells(RowRep0 - 9, ColRep0).End(xlDown).Offset(2, 0).Select
'depurarRow = ActiveCell.Row
'
'
'Do While Cells(depurarRow, 2) = ""
'ActiveCell.EntireRow.Select
'Selection.Delete Shift:=xlUp
'
'Loop
'
''mover a nuevo libro
'    Sheets(nomCarpeta).Select
'    Sheets(nomCarpeta).Move
'
''guardar
'
'ActiveWorkbook.SaveAs Filename:=Carpeta, FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False
'ActiveWorkbook.Close True
'
'REPORTE_SALDOS_CAJAS.Hide
'
'
'If REPORTE_SALDOS_CAJAS.OptionButtonCorreo.value = True Then
'
'            ''''''''''''''''''PARA CC CCO''''''''''''''''''''''''''''''''''''''
'            'sh19 = "PARAMETROS"
'            Sheets(sh19).Select
'            Dim PARA, CC, CCO As String
'            Dim MailDestRow As Long
'            Dim MailDestCol As Integer
'
'            MailDestRow = 38
'            MailDestCol = 1
'            PARA = ""
'            CC = ""
'            CCO = ""
'
'            Do While Cells(MailDestRow, MailDestCol) <> ""
'
'                If Cells(MailDestRow, MailDestCol) = "Para" Then
'                PARA = PARA & ";" & Cells(MailDestRow, MailDestCol + 1).value
'
'                ElseIf Cells(MailDestRow, MailDestCol) = "CC" Then
'                CC = CC & ";" & Cells(MailDestRow, MailDestCol + 1).value
'
'                ElseIf Cells(MailDestRow, MailDestCol) = "CCO" Then
'                CCO = CCO & ";" & Cells(MailDestRow, MailDestCol + 1).value
'                End If
'
'
'            MailDestRow = MailDestRow + 1
'
'            Loop
'
'            'MsgBox PARA & Chr(10) & CC & Chr(10) & CCO
'
'            'correo
'             ''''''''''''''''''''''''''''''''CORREO'''''''''''''''''''''''''''''
'            '                    Call CO3_1FormatoServicios
'                            Dim OutApp, OutMail As Object
'                            'Dim MiAdjunto As Outlook.Attachments
'                            Dim Asunto, Mensaje1, Mensaje2, FirmaCompartamos As String
'                            Dim ArchivoAdjunto As String
'                            Dim Saludo As String
'
'                            'Saludo dependiendo la hora de ejecuci|fffd|n
'                            If Hour(Now()) >= 12 Then
'                            Saludo = "Buenas tardes,"
'                            Else
'                            Saludo = "Buenos d|fffd|as,"
'                            End If
'
'                            'Asunto del correo
'                            Asunto = "SALDOS CAJAS**  " & NombresDiasMayus(weekday(Date, vbMonday)) & " " _
'                                    & Day(Date) & " DE " & NombresMesesLargo(Month(Date))
'
'                            'Mensaje
'                            'sh19 = "PARAMETROS"
'                            'valTotInicial
'                            'valTotCompras
'                            'valTotDotaciones
'                            'valTotTraspasosIn
'                            'valTotTraspasosOut
'                            'valTotFisico
'                            'valTotEstimado
'                            Mensaje = "Se env|fffd|an los saldos de cajas al d|fffd|a de hoy."
'                            Mensaje1 = "N|fffd|mero de cajas = " & Format(UBound(Dotaciones), "#,##0")
'                            Mensaje3 = "Saldo Inicial = " & Format(valTotInicial, "$#,##0.00")
'                            Mensaje4 = "Compras = " & Format(valTotCompras, "$#,##0.00")
'                            Mensaje5 = "Dotaciones = " & Format(valTotDotaciones, "$#,##0.00")
'                            Mensaje6 = "Dotaciones Emergentes = " & Format(valTotDotacionesEmergentes, "$#,##0.00")
'                            Mensaje7 = "Recepci|fffd|n Traspasos = " & Format(valTotTraspasosIn, "$#,##0.00")
'                            Mensaje8 = "Env|fffd|o Traspasos = " & Format(valTotTraspasosOut, "$#,##0.00")
'                            Mensaje9 = "Saldo F|fffd|sico dia t = " & Format(valTotFisico, "$#,##0.00")
'                            Mensaje10 = "Saldo Estimado dia t +1 = " & Format(valTotEstimado, "$#,##0.00")
'
'                            Mensaje2 = "Saludos,"
'
'
'                            'Comprobar si Outlook esta abierto y en caso de no estarlo abrirlo
'
'                            On Error Resume Next
'                            Set OutApp = GetObject("", "Outlook.Application")
'                            Err.Clear
'
'                            If OutApp Is Nothing Then
'                            Set OutApp = CreateObject("Outlook.Application")
'                            End If
'
'
'                            OutApp.Visible = True
'
'                            OutApp.session.logon
'
'                            'se crea m|fffd|todo de env|fffd|o de correo
'                            Set OutMail = OutApp.CreateItem(0)
'
'
'
'                            'adjunto
'                            'Set MiAdjunto = OutMail.Attachments
'
'
'                            ''''''''''''''''''''''''''''''''''''''''''CORREO'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                            'el cuerpo del correo y los archivos a djuntos
'                            On Error Resume Next
'
'                            With OutMail
'                            '.MiAdjunto.Add ArchivoAdjunto
'                            .To = PARA
'                            .CC = CC
'                            .BCC = CCO
'                            .Subject = Asunto
'                            .Attachments.Add Carpeta & ".xlsx"
'                            '.BodyFormat = 2 'olFormatRichText
'                            '.Attachments.Add ArchivoAdjunto
'                            .HTMLBody = "<html>" & _
'                                "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6C6969"">" & Saludo & "<br>" & "<br>" & Mensaje & "</span style=""color:#6C6969"">" & "<p/>" _
'                                & "<p style='font-family:verdana;font-size:18'>" & "<span style=""color:#E71743"">" & Mensaje1 & "<br>" & Mensaje3 & "<br>" & Mensaje4 & "<br>" & Mensaje5 & "<br>" & Mensaje6 & "<br>" & Mensaje7 & "<br>" & Mensaje8 & "<br>" & Mensaje9 & "<br>" & Mensaje10 & "<br>" & "<br>" & "</span style=""color:#E71743"">" _
'                                & "<br>" & _
'                                "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6C6969"">" & Mensaje2 & "<br>" _
'                                & "<br>" & DATOS_USUARIO_WINDOWS(Environ("UserName"), 1) & "<br>" & _
'                                "Tel. 5276-7250     Ext:    " & DATOS_USUARIO_WINDOWS(Environ("UserName"), 4) & "<br>" & _
'                                DATOS_USUARIO_WINDOWS(Environ("UserName"), 5) & "</span style=""color:#6C6969"">" & "<p/>" & "<br>" & _
'                                "<img src= " & Chr(34) & RutaLocal & NombreCarpetaCompartida & "\" & Catalogos & firmaImagen & Chr(34) _
'                                & "</html>"
'
'
'                                '' "<body>" "</body>"
'
'                            '.Attachments.Add firmaImagen, False
'                            .display
'
'                            'Application.SendKeys "^{END}", True
'                            'Application.SendKeys "{ENTER}", True
'                            'Application.SendKeys "^v", True
'                            'DoEvents
'                            End With
'
'                            On Error GoTo 0
'
'                            Set OutMail = Nothing
'                            Set OutApp = Nothing
'
'End If
'
''regresar a archivo
'Windows(CuWs).Activate
'Sheets(cuSh).Select

  
End Sub

Sub CV0_2ConsultaHistoricoVarios()

'Application.ScreenUpdating = False
'Application.EnableEvents = False

Call VariablesGlobales

hora1 = Now()

Dim fechaValor, FechaValor2 As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayValor2, MonthValor2, YearValor2 As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim DayLabe2, MonthLabe2, YearLabe2, NombreMes2 As String
Dim UnidadRuta, fechaCarpeta, carpeta As String
Dim rowFin, colFin, X As Long
Dim tipoArchivo, archivoEstatus As String
'Dim RowInicio As Range
Dim RowInicio, libroActual As String
Dim rango0, RutaFuente, CarpetaFuente As String
Dim rango As Range
Dim rutaArchi, etiquetaConsulta As String


Dim ACUMULADO_TEMPORAL As Collection: Set ACUMULADO_TEMPORAL = New Collection
Dim ACUMULADO_IMPORTACION As Collection: Set ACUMULADO_IMPORTACION = New Collection

libroActual = ActiveWorkbook.Name

'tipo de Estatus de los servicios

fechaValor = CDate(CONSULTA_HISTORICO.ComboDiaIni.value & "/" & CONSULTA_HISTORICO.ComboMesesIni.value _
                & "/" & CONSULTA_HISTORICO.ComboAnioIni.value)
                
FechaValor2 = CDate(CONSULTA_HISTORICO.ComboDiaFin.value & "/" & CONSULTA_HISTORICO.ComboMesesFin.value _
                & "/" & CONSULTA_HISTORICO.ComboAnioFin.value)





'sh6 = "Procesar"
'sh21 = "ConfirmacionServicios"
'quitar filtro
Sheets(sh6).Select
Range("A1").Select
If Worksheets(sh6).AutoFilterMode = True Then
    'MsgBox "si hay filtro"
    Worksheets(sh6).AutoFilterMode = False
Else
    'MsgBox "no hay filtro"
End If

Sheets(sh6).Select
Cells.Clear


'''TIPO DE ARCHIVO

Select Case CONSULTA_HISTORICO.ComboBoxTipoConsulta.value

    Case "ARQUEOS"
    tipoArchivo = "*Conciliacion Arqueos.txt"
    RutaFuente = RutaTxtPlaneaciones
    CarpetaFuente = " Planeaciones Diarias Txt"
    
    Case "CAJAS"
    tipoArchivo = "*Saldos Cajas.txt"
    RutaFuente = RutaTxtPlaneaciones
    CarpetaFuente = " Planeaciones Diarias Txt"
    
    Case "COMPRAS"
    tipoArchivo = "*2019 Compras.txt"
    RutaFuente = RutaTxtCompras
    CarpetaFuente = " Compras Diarias Txt"
    
    Case "SERVICIOS ETV"
    tipoArchivo = "*Programacion Servicios Dotaciones.txt"
    RutaFuente = RutaTxtPlaneaciones
    CarpetaFuente = " Planeaciones Diarias Txt"
    
    Case Else
    tipoArchivo = "*Saldos Cajas.txt"
    RutaFuente = RutaTxtPlaneaciones
    CarpetaFuente = " Planeaciones Diarias Txt"
    
End Select

'Ubicar fecha del reporte
'If weekday(FechaOperacion, vbMonday) > 1 And weekday(FechaOperacion, vbMonday) < 6 Then
'FechaValor = FechaOperacion - 1
'ElseIf weekday(FechaOperacion, vbMonday) = 1 Then
'FechaValor = FechaOperacion - 3
'End If

'Set rango = Range("A2")

'rango0 = Range(rango).Address

rango0 = Range("A2").Address

'MsgBox "RutaFuente " & RutaFuente & Chr(10) & "tipoArchivo " & tipoArchivo


Do While fechaValor <= FechaValor2


DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)


DayValor2 = Day(FechaValor2)
MonthValor2 = Month(FechaValor2)
YearValor2 = Year(FechaValor2)


'A|fffd|o etiqueta
YearLabel = YearValor
YearLabel2 = YearValor2

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

If DayValor2 < 10 Then
    DayLabel2 = "0" & DayValor2
Else
    DayLabel2 = DayValor2
End If

'Mes etiqueta
Select Case MonthValor
Case 1
NombreMes = "ENERO"
Case 2
NombreMes = "FEBRERO"
Case 3
NombreMes = "MARZO"
Case 4
NombreMes = "ABRIL"
Case 5
NombreMes = "MAYO"
Case 6
NombreMes = "JUNIO"
Case 7
NombreMes = "JULIO"
Case 8
NombreMes = "AGOSTO"
Case 9
NombreMes = "SEPTIEMBRE"
Case 10
NombreMes = "OCTUBRE"
Case 11
NombreMes = "NOVIEMBRE"
Case 12
NombreMes = "DICIEMBRE"
End Select

Select Case MonthValor2
Case 1
NombreMes2 = "ENERO"
Case 2
NombreMes2 = "FEBRERO"
Case 3
NombreMes2 = "MARZO"
Case 4
NombreMes2 = "ABRIL"
Case 5
NombreMes2 = "MAYO"
Case 6
NombreMes2 = "JUNIO"
Case 7
NombreMes2 = "JULIO"
Case 8
NombreMes2 = "AGOSTO"
Case 9
NombreMes2 = "SEPTIEMBRE"
Case 10
NombreMes2 = "OCTUBRE"
Case 11
NombreMes2 = "NOVIEMBRE"
Case 12
NombreMes = "DICIEMBRE"
End Select


If MonthValor < 10 Then
MonthLabel = "0" & MonthValor
Else
MonthLabel = MonthValor
End If

If MonthValor2 < 10 Then
MonthLabel2 = "0" & MonthValor2
Else
MonthLabel2 = MonthValor2
End If



'On Error GoTo sinCarpeta:
On Error Resume Next
UnidadRuta = UnidadAsignada & RutaFuente & MonthLabel & " " & NombreMes & " " & YearLabel & CarpetaFuente
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & CarpetaFuente

carpeta = UnidadRuta & "\" & fechaCarpeta
'hoja donde se procesa informaci|fffd|n
nombreHojas = sh6



'If archi = "" Then
'MsgBox "No hay informaci|fffd|n en el d|fffd|a seleccionado"
'Exit Sub
'End If


    ChDrive (UnidadAsignada)
    ChDir (carpeta)
    archi = Dir(carpeta & "\" & tipoArchivo)
    
    'MsgBox "UNIDAD ASIGNADA " & Chr(10) & UnidadAsignada & Chr(10) & _
    '"CARPETA " & Chr(10) & Carpeta & Chr(10) & "ARCHI " & archi
    Sheets(sh6).Select
    
    row0 = 1
    col0 = 1
               
               
    Set ACUMULADO_TEMPORAL = ColeccionImportarArchivosTxt(CStr(carpeta), CStr(tipoArchivo), "*", CStr(nombreHojas))
    
    For i = 1 To ACUMULADO_TEMPORAL.Count
    
    ACUMULADO_IMPORTACION.Add ACUMULADO_TEMPORAL(i)
    
    Next i
    
    Set ACUMULADO_TEMPORAL = New Collection


fechaValor = fechaValor + 1



Loop


'imprimir ACUMULADO_IMPORTACION

    For i = 1 To ACUMULADO_IMPORTACION.Count
    
        Cells(i, 1) = ACUMULADO_IMPORTACION(i)
    
    Next i
    

'totRows = Range("A1000000").End(xlUp).Row
totRows = ACUMULADO_IMPORTACION.Count

'totCols

        'If totRows > 2 Then
        '"*Saldos Cajas.txt"
        '    Range(Cells(row0, col0), Cells(totRows, col0)).Select
        '    Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
        '        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, _
        '        Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
        '        :="|", FieldInfo:=Array(Array(1, 1),Array(2, 1),Array(3, 1),Array(4, 1),Array(5, 1),Array(6, 1),Array(7, 1),Array(8, 1),Array(9, 1), _
                    Array(10, 1),Array(11, 1),Array(12, 1),Array(13, 1),Array(14, 1),Array(15, 1),Array(16, 1),Array(17, 1),Array(18, 1),Array(19, 1), _
                    Array(20, 1),Array(21, 1),Array(22, 1),Array(23, 1),Array(24, 1),Array(25, 1),Array(26, 1),Array(27, 1),Array(28, 1),Array(29, 1), _
                    Array(30, 1),Array(31, 1),Array(32, 1),Array(33, 1),Array(34, 1),Array(35, 1),Array(36, 1),Array(37, 1),Array(38, 1),Array(39, 1), _
                    Array(40, 1),Array(41, 1),Array(42, 1),Array(43, 1),Array(44, 1),Array(45, 1),Array(46, 1),Array(47, 1),Array(48, 1),Array(49, 1), _
                    Array(50, 1),Array(51, 1),Array(52, 1),Array(53, 1),Array(54, 1),Array(55, 1),Array(56, 1),Array(57, 1),Array(58, 1),Array(59, 1), _
                    Array(60, 1),Array(61, 1),Array(62, 1),Array(63, 1),Array(64, 1),Array(65, 1),Array(66, 1),Array(67, 1),Array(68, 1),Array(69, 1), _
                    Array(70, 1),Array(71, 1),Array(72, 1),Array(73, 1),Array(74, 1),Array(75, 1),Array(76, 1),Array(77, 1),Array(78, 1),Array(79, 1), _
                    Array(80, 1),Array(81, 1),Array(82, 1),Array(83, 1),Array(84, 1),Array(85, 1),Array(86, 1),Array(87, 1),Array(88, 1),Array(89, 1), _
                    Array(90, 1),Array(91, 1),Array(92, 1),Array(93, 1),Array(94, 1),Array(95, 1),Array(96, 1),Array(97, 1),Array(98, 1),Array(99, 1), _
                    Array(100, 1),Array(101, 1),Array(102, 1),Array(103, 1),Array(104, 1),Array(105, 1),Array(106, 1),Array(107, 1),Array(108, 4),Array(109, 4), _
                    Array(110, 1)), TrailingMinusNumbers:=True
        '
        'End If

'
'        Do While archi <> ""
        
            'rutaArchi = carpeta & "\" & archi
            
            'MsgBox rutaArchi
            
            
'MsgBox "totRows " & totRows

Select Case tipoArchivo

Case "*Saldos Cajas.txt"
''''''''''''''''''''CAJAS'''''''''''''''''''''''''''''''''
        If totRows > 2 Then
        '"*Saldos Cajas.txt"
            Range(Cells(row0, col0), Cells(totRows, col0)).Select
            Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
                TextQualifier:=xlNone, ConsecutiveDelimiter:=False, Tab:=False, _
                Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
                :="|", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), Array(6, 1), Array(7, 1), Array(8, 1), Array(9, 1), _
                    Array(10, 1), Array(11, 1), Array(12, 1), Array(13, 1), Array(14, 1), Array(15, 1), Array(16, 1), Array(17, 1), Array(18, 1), Array(19, 1), _
                    Array(20, 1), Array(21, 1), Array(22, 1), Array(23, 1), Array(24, 1), Array(25, 1), Array(26, 1), Array(27, 1), Array(28, 1), Array(29, 1), _
                    Array(30, 1), Array(31, 1), Array(32, 1), Array(33, 1), Array(34, 1), Array(35, 1), Array(36, 1), Array(37, 1), Array(38, 1), Array(39, 1), _
                    Array(40, 1), Array(41, 1), Array(42, 1), Array(43, 1), Array(44, 1), Array(45, 1), Array(46, 1), Array(47, 1), Array(48, 1), Array(49, 1), _
                    Array(50, 1), Array(51, 1), Array(52, 1), Array(53, 1), Array(54, 1), Array(55, 1), Array(56, 1), Array(57, 1), Array(58, 1), Array(59, 1), _
                    Array(60, 1), Array(61, 1), Array(62, 1), Array(63, 1), Array(64, 1), Array(65, 1), Array(66, 1), Array(67, 1), Array(68, 1), Array(69, 1), _
                    Array(70, 1), Array(71, 1), Array(72, 1), Array(73, 1), Array(74, 1), Array(75, 1), Array(76, 1), Array(77, 1), Array(78, 1), Array(79, 1), _
                    Array(80, 1), Array(81, 1), Array(82, 1), Array(83, 1), Array(84, 1), Array(85, 1), Array(86, 1), Array(87, 1), Array(88, 1), Array(89, 1), _
                    Array(90, 1), Array(91, 1), Array(92, 1), Array(93, 1), Array(94, 1), Array(95, 1), Array(96, 1), Array(97, 1), Array(98, 1), Array(99, 1), _
                    Array(100, 1), Array(101, 1), Array(102, 1), Array(103, 1), Array(104, 1), Array(105, 1), Array(106, 1), Array(107, 1), Array(108, 4), Array(109, 4), _
                    Array(110, 1)), TrailingMinusNumbers:=True
        
        End If

'With ActiveSheet.QueryTables.Add(Connection:= _
'            "TEXT;" & rutaArchi _
'            , Destination:=Range(rango0))
'.FieldNames = True
'.RowNumbers = False
'.FieldNames = True
'.RowNumbers = False
'.FillAdjacentFormulas = False
'.PreserveFormatting = True
'.RefreshOnFileOpen = False
'.RefreshStyle = xlInsertDeleteCells
'.SavePassword = False
'.SaveData = True
'.AdjustColumnWidth = True
'.RefreshPeriod = 0
'.TextFilePromptOnRefresh = False
'.TextFilePlatform = 1252
'.TextFileStartRow = 1
'.TextFileParseType = xlDelimited
'.TextFileTextQualifier = xlTextQualifierNone
'.TextFileConsecutiveDelimiter = False
'.TextFileTabDelimiter = False
'.TextFileSemicolonDelimiter = False
'.TextFileCommaDelimiter = False
'.TextFileSpaceDelimiter = False
'.TextFileOtherDelimiter = "|"
'.TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
'1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 _
', 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
'1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 _
', 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 1)
'.TextFileTrailingMinusNumbers = True
'.Refresh BackgroundQuery:=False
'End With

Case "*Conciliacion Arqueos.txt"
''''''''''''''''''''ARQUEOS'''''''''''''''''''''''''''''''''
        If totRows > 2 Then
        '"*Conciliacion Arqueos.txt"
            Range(Cells(row0, col0), Cells(totRows, col0)).Select
            Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
                TextQualifier:=xlNone, ConsecutiveDelimiter:=False, Tab:=False, _
                Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
                :="|", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), Array(6, 1), Array(7, 1), Array(8, 1), Array(9, 1), _
                    Array(10, 1), Array(11, 1), Array(12, 1), Array(13, 1), Array(14, 1), Array(15, 1), Array(16, 1), Array(17, 1), Array(18, 1), Array(19, 1), _
                    Array(20, 1), Array(21, 1), Array(22, 1), Array(23, 1), Array(24, 1), Array(25, 1), Array(26, 1), Array(27, 1), Array(28, 1), Array(29, 1), _
                    Array(30, 1), Array(31, 1), Array(32, 1), Array(33, 1), Array(34, 1), Array(35, 1), Array(36, 1), Array(37, 1), Array(38, 1), Array(39, 1), _
                    Array(40, 1), Array(41, 1), Array(42, 1), Array(43, 1), Array(44, 1), Array(45, 1), Array(46, 1), Array(47, 1), Array(48, 1), Array(49, 1), _
                    Array(50, 1), Array(51, 1), Array(52, 1), Array(53, 1), Array(54, 1), Array(55, 1), Array(56, 1), Array(57, 1), Array(58, 1), Array(59, 1), _
                    Array(60, 1), Array(61, 1), Array(62, 1), Array(63, 1), Array(64, 1), Array(65, 1), Array(66, 1), Array(67, 1), Array(68, 1), Array(69, 1), _
                    Array(70, 1), Array(71, 1), Array(72, 1), Array(73, 1), Array(74, 1), Array(75, 1), Array(76, 1), Array(77, 1), Array(78, 1), Array(79, 1), _
                    Array(80, 1), Array(81, 1), Array(82, 1), Array(83, 1), Array(84, 1), Array(85, 1), Array(86, 1), Array(87, 1), Array(88, 4), Array(89, 4), _
                    Array(90, 1)), TrailingMinusNumbers:=True
        
        End If
        
'With ActiveSheet.QueryTables.Add(Connection:= _
'            "TEXT;" & rutaArchi _
'            , Destination:=Range(rango0))
'.FieldNames = True
'.RowNumbers = False
'.FillAdjacentFormulas = False
'.PreserveFormatting = True
'.RefreshOnFileOpen = False
'.RefreshStyle = xlInsertDeleteCells
'.SavePassword = False
'.SaveData = True
'.AdjustColumnWidth = True
'.RefreshPeriod = 0
'.TextFilePromptOnRefresh = False
'.TextFilePlatform = 1252
'.TextFileStartRow = 1
'.TextFileParseType = xlDelimited
'.TextFileTextQualifier = xlTextQualifierNone
'.TextFileConsecutiveDelimiter = False
'.TextFileTabDelimiter = False
'.TextFileSemicolonDelimiter = False
'.TextFileCommaDelimiter = False
'.TextFileSpaceDelimiter = False
'.TextFileOtherDelimiter = "|"
'.TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
'1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 _
', 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 1)
'.TextFileTrailingMinusNumbers = True
'.Refresh BackgroundQuery:=False
'End With


Case "*2019 Compras.txt"
''''''''''''''''''''COMPRAS'''''''''''''''''''''''''''''''''
        If totRows > 2 Then
        '"*2019 Compras.txt"
            Range(Cells(row0, col0), Cells(totRows, col0)).Select
            Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
                TextQualifier:=xlNone, ConsecutiveDelimiter:=False, Tab:=False, _
                Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
                :="|", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), Array(6, 1), Array(7, 1), Array(8, 1), Array(9, 1), _
                    Array(10, 1), Array(11, 1), Array(12, 1), Array(13, 1), Array(14, 1), Array(15, 1), Array(16, 1), Array(17, 1), Array(18, 1), Array(19, 1), _
                    Array(20, 1), Array(21, 1), Array(22, 1), Array(23, 1), Array(24, 1), Array(25, 1), Array(26, 1), Array(27, 1), Array(28, 1), Array(29, 1), _
                    Array(30, 1), Array(31, 1), Array(32, 1), Array(33, 1), Array(34, 1), Array(35, 1), Array(36, 1), Array(37, 1), Array(38, 1), Array(39, 1), _
                    Array(40, 1), Array(41, 1), Array(42, 1), Array(43, 1), Array(44, 1), Array(45, 1), Array(46, 1), Array(47, 1), Array(48, 1), Array(49, 1), _
                    Array(50, 1), Array(51, 1), Array(52, 1), Array(53, 4), Array(54, 4), Array(55, 1)), TrailingMinusNumbers:=True
        
        End If
        
'With ActiveSheet.QueryTables.Add(Connection:= _
'            "TEXT;" & rutaArchi _
'            , Destination:=Range(rango0))
'.FieldNames = True
'.RowNumbers = False
'.FillAdjacentFormulas = False
'.PreserveFormatting = True
'.RefreshOnFileOpen = False
'.RefreshStyle = xlInsertDeleteCells
'.SavePassword = False
'.SaveData = True
'.AdjustColumnWidth = True
'.RefreshPeriod = 0
'.TextFilePromptOnRefresh = False
'.TextFilePlatform = 1252
'.TextFileStartRow = 1
'.TextFileParseType = xlDelimited
'.TextFileTextQualifier = xlTextQualifierNone
'.TextFileConsecutiveDelimiter = False
'.TextFileTabDelimiter = False
'.TextFileSemicolonDelimiter = False
'.TextFileCommaDelimiter = False
'.TextFileSpaceDelimiter = False
'.TextFileOtherDelimiter = "|"
'.TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, _
'1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 4, 4, 1)
'.TextFileTrailingMinusNumbers = True
'.Refresh BackgroundQuery:=False
'End With

Case "SERVICIOS ETV"
''''''''''''''''''''DOTACIONES PROGRAMADAS'''''''''''''''''''''''''''''''''
        If totRows > 2 Then
        '"SERVICIOS ETV"
            Range(Cells(row0, col0), Cells(totRows, col0)).Select
            Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
                TextQualifier:=xlNone, ConsecutiveDelimiter:=False, Tab:=False, _
                Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
                :="|", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), Array(6, 1), Array(7, 1), Array(8, 1), Array(9, 1), _
                    Array(10, 1), Array(11, 1), Array(12, 1), Array(13, 1), Array(14, 1), Array(15, 1), Array(16, 1), Array(17, 1), Array(18, 1), Array(19, 1), _
                    Array(20, 1), Array(21, 1), Array(22, 1), Array(23, 1), Array(24, 1), Array(25, 1), Array(26, 1), Array(27, 1), Array(28, 1), Array(29, 1), _
                    Array(30, 1), Array(31, 1), Array(32, 1), Array(33, 1), Array(34, 1), Array(35, 1), Array(36, 1), Array(37, 1), Array(38, 1), Array(39, 1), _
                    Array(40, 1), Array(41, 1), Array(42, 1), Array(43, 1), Array(44, 1), Array(45, 1), Array(46, 1), Array(47, 1), Array(48, 1), Array(49, 4), _
                    Array(50, 4), Array(51, 1)), TrailingMinusNumbers:=True
        
        End If
        
'With ActiveSheet.QueryTables.Add(Connection:= _
'            "TEXT;" & rutaArchi _
'            , Destination:=Range(rango0))
'.FieldNames = True
'.RowNumbers = False
'.FillAdjacentFormulas = False
'.PreserveFormatting = True
'.RefreshOnFileOpen = False
'.RefreshStyle = xlInsertDeleteCells
'.SavePassword = False
'.SaveData = True
'.AdjustColumnWidth = True
'.RefreshPeriod = 0
'.TextFilePromptOnRefresh = False
'.TextFilePlatform = 1252
'.TextFileStartRow = 1
'.TextFileParseType = xlDelimited
'.TextFileTextQualifier = xlTextQualifierNone
'.TextFileConsecutiveDelimiter = False
'.TextFileTabDelimiter = False
'.TextFileSemicolonDelimiter = False
'.TextFileCommaDelimiter = False
'.TextFileSpaceDelimiter = False
'.TextFileOtherDelimiter = "|"
'.TextFileColumnDataTypes = Array(1, 1, 1, 1, 1, 1, 1, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
'1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 1)
'.TextFileTrailingMinusNumbers = True
'.Refresh BackgroundQuery:=False
'End With

End Select
            
            
'            'fila = Range("A1000000").End(xlUp).Row + 1 '<====================
'            fila = Range("A1000000").End(xlUp).Row
'            rango0 = Range(Cells(fila + 1, 1), Cells(fila + 1, 1)).Address
'            'MsgBox rango0
'            'Set rango = Range(rango0)
            Call DeleteQueryImportaciones
'            'Otras Opciones
'            'milibro = ActiveWorkbook.Name
'             archi = Dir()
'        Loop '<========================================
'

'fechaValor = fechaValor + 1
'
'
'
'Loop

rowFin = Range("a100000").End(xlUp).Row
colFin = 40 'Range("A2").End(xlToRight).Column


'''ENCABEZADOS

Select Case CONSULTA_HISTORICO.ComboBoxTipoConsulta.value

    Case "ARQUEOS"
    etiquetaConsulta = "ARQUEOS"
    Call CV0_2_2_ArqueosEtv
    
    Case "CAJAS"
    etiquetaConsulta = "RESUMEN OPERATIVO"
    Call CV0_2_1_SaldosCajas
    
    Case "COMPRAS"
    etiquetaConsulta = "COMPRAS"
    Call CV0_2_3_Compras
    
    Case "SERVICIOS ETV"
    etiquetaConsulta = "TRASLADOS ETV"
    Call CV0_2_4_DotacionesProgramadas
    
    
End Select




'limpiar rastro
Call DeleteQueryImportaciones


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''TIPO DE REPORTE'''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'SI ES REPORTE Y SALDOS
If CONSULTA_HISTORICO.OptionButtonTipo2.value = True And CONSULTA_HISTORICO.ComboBoxTipoConsulta = "CAJAS" Then

'reporte saldos cajas y sucursales
Sheets(sh6).Select
Call CV0_3ReporteCajasHistorico



Else

'Copiar hoja de consulta generada

Sheets(sh6).Select
Sheets(sh6).Copy
ActiveSheet.Select
ActiveSheet.Name = etiquetaConsulta & Format(Now(), " ddmmyyyy hhmmss")

End If

Windows(libroActual).Activate
Sheets(sh19).Activate
Sheets(sh19).Select
Unload CONSULTA_HISTORICO

hora2 = Now()

MsgBox "Proceso finalizado. LA CONSULTA SE GENER|fffd| EN UN ARCHIVO ADICIONAL" & Chr(10) & Format(hora2 - hora1, "hh:mm:ss")

'Exit Sub
'
'sinCarpeta:
'MsgBox "No hay informaci|fffd|n en el d|fffd|a seleccionado"
'Exit Sub

On Error GoTo 0

'Application.ScreenUpdating = True
'Application.EnableEvents = True

End Sub



Sub CV0_2_1_SaldosCajas()
Dim X, Y, targetCol As Integer
Dim finRow As Long
Dim claveTargetCol As String

finRow = Range("A1000000").End(xlUp).Row
targetCol = 5
claveTargetCol = "IdPlaza"
Y = 1

'limpiar blancos y encabezados
For i = 1 To finRow
    If Cells(Y + i, targetCol) = claveTargetCol Or Cells(Y + i, targetCol) = "" Then
    Range(Cells(Y + i, targetCol), Cells(Y + i, targetCol)).EntireRow.Select
    Selection.Delete Shift:=xlUp
    End If
Next i

For i = 1 To finRow
    If Cells(Y + i, targetCol) = claveTargetCol Or Cells(Y + i, targetCol) = "" Then
    Range(Cells(Y + i, targetCol), Cells(Y + i, targetCol)).EntireRow.Select
    Selection.Delete Shift:=xlUp
    End If
Next i

For i = 1 To finRow
    If Cells(Y + i, targetCol) = claveTargetCol Or Cells(Y + i, targetCol) = "" Then
    Range(Cells(Y + i, targetCol), Cells(Y + i, targetCol)).EntireRow.Select
    Selection.Delete Shift:=xlUp
    End If
Next i

'ENCABEZADOS
X = 1
Cells(1, X) = "medio"
Cells(1, X + 1) = "IdPlazaMedio"
Cells(1, X + 2) = "etv"
Cells(1, X + 3) = "plaza"
Cells(1, X + 4) = "IdPlaza"
Cells(1, X + 5) = "saldoInicial_B1000"
Cells(1, X + 6) = "saldoInicial_B500"
Cells(1, X + 7) = "saldoInicial_B200"
Cells(1, X + 8) = "saldoInicial_B100"
Cells(1, X + 9) = "saldoInicial_B50"
Cells(1, X + 10) = "saldoInicial_B20"
Cells(1, X + 11) = "saldoInicial_Metalica"
Cells(1, X + 12) = "saldoInicial_M100"
Cells(1, X + 13) = "saldoInicial_M20"
Cells(1, X + 14) = "saldoInicial_M10"
Cells(1, X + 15) = "saldoInicial_M5"
Cells(1, X + 16) = "saldoInicial_M2"
Cells(1, X + 17) = "saldoInicial_M1"
Cells(1, X + 18) = "saldoInicial_M0.5"
Cells(1, X + 19) = "saldoInicial_M0.2"
Cells(1, X + 20) = "saldoInicial_M0.1"
Cells(1, X + 21) = "saldoInicial_M0.05"
Cells(1, X + 22) = "SALDO_INICIAL"
Cells(1, X + 23) = "Dotacion_B1000"
Cells(1, X + 24) = "Dotacion_B500"
Cells(1, X + 25) = "Dotacion_B200"
Cells(1, X + 26) = "Dotacion_B100"
Cells(1, X + 27) = "Dotacion_B50"
Cells(1, X + 28) = "Dotacion_B20"
Cells(1, X + 29) = "Dotacion_Metalica"
Cells(1, X + 30) = "Dotacion_M100"
Cells(1, X + 31) = "Dotacion_M20"
Cells(1, X + 32) = "Dotacion_M10"
Cells(1, X + 33) = "Dotacion_M5"
Cells(1, X + 34) = "Dotacion_M2"
Cells(1, X + 35) = "Dotacion_M1"
Cells(1, X + 36) = "Dotacion_M0.5"
Cells(1, X + 37) = "Dotacion_M0.2"
Cells(1, X + 38) = "Dotacion_M0.1"
Cells(1, X + 39) = "Dotacion_M0.05"
Cells(1, X + 40) = "DOTACIONES_PROGRAMADAS"
Cells(1, X + 41) = "Dotacion_Emergente_B1000"
Cells(1, X + 42) = "Dotacion_Emergente_B500"
Cells(1, X + 43) = "Dotacion_Emergente_B200"
Cells(1, X + 44) = "Dotacion_Emergente_B100"
Cells(1, X + 45) = "Dotacion_Emergente_B50"
Cells(1, X + 46) = "Dotacion_Emergente_B20"
Cells(1, X + 47) = "Dotacion_Emergente_Metalica"
Cells(1, X + 48) = "Dotacion_Emergente_M100"
Cells(1, X + 49) = "Dotacion_Emergente_M20"
Cells(1, X + 50) = "Dotacion_Emergente_M10"
Cells(1, X + 51) = "Dotacion_Emergente_M5"
Cells(1, X + 52) = "Dotacion_Emergente_M2"
Cells(1, X + 53) = "Dotacion_Emergente_M1"
Cells(1, X + 54) = "Dotacion_Emergente_M0.5"
Cells(1, X + 55) = "Dotacion_Emergente_M0.2"
Cells(1, X + 56) = "Dotacion_Emergente_M0.1"
Cells(1, X + 57) = "Dotacion_Emergente_M0.05"
Cells(1, X + 58) = "DOTACIONES_EMERGENTES"
Cells(1, X + 59) = "Compra_B1000"
Cells(1, X + 60) = "Compra_B500"
Cells(1, X + 61) = "Compra_B200"
Cells(1, X + 62) = "Compra_B100"
Cells(1, X + 63) = "Compra_B50"
Cells(1, X + 64) = "Compra_B20"
Cells(1, X + 65) = "Compra_Met|fffd|lica"
Cells(1, X + 66) = "Compra_M100"
Cells(1, X + 67) = "Compra_M20"
Cells(1, X + 68) = "Compra_M10"
Cells(1, X + 69) = "Compra_M5"
Cells(1, X + 70) = "Compra_M2"
Cells(1, X + 71) = "Compra_M1_"
Cells(1, X + 72) = "Compra_M0.5"
Cells(1, X + 73) = "Compra_M0.2"
Cells(1, X + 74) = "Compra_M0.1"
Cells(1, X + 75) = "Compra_M0.05"
Cells(1, X + 76) = "COMPRA_EFECTIVO"
Cells(1, X + 77) = "TrasladoIn_B1000"
Cells(1, X + 78) = "TrasladoIn_B500"
Cells(1, X + 79) = "TrasladoIn_B200"
Cells(1, X + 80) = "TrasladoIn_B100"
Cells(1, X + 81) = "TrasladoIn_B50"
Cells(1, X + 82) = "TrasladoIn_B20"
Cells(1, X + 83) = "TrasladoIn_Met|fffd|lica"
Cells(1, X + 84) = "TrasladoIn_M100"
Cells(1, X + 85) = "TrasladoIn_M20"
Cells(1, X + 86) = "TrasladoIn_M10"
Cells(1, X + 87) = "TrasladoIn_M5"
Cells(1, X + 88) = "TrasladoIn_M2"
Cells(1, X + 89) = "TrasladoIn_M1"
Cells(1, X + 90) = "TrasladoIn_M0.5"
Cells(1, X + 91) = "TrasladoIn_M0.2"
Cells(1, X + 92) = "TrasladoIn_M0.1"
Cells(1, X + 93) = "TrasladoIn_M0.05"
Cells(1, X + 94) = "TRASLADO_IN"
Cells(1, X + 95) = "TrasladoOut_B1000"
Cells(1, X + 96) = "TrasladoOut_B500"
Cells(1, X + 97) = "TrasladoOut_B200"
Cells(1, X + 98) = "TrasladoOut_B100"
Cells(1, X + 99) = "TrasladoOut_B50"
Cells(1, X + 100) = "TrasladoOut_B20"
Cells(1, X + 101) = "TrasladoOut_Met|fffd|lica"
Cells(1, X + 102) = "TrasladoOut_M100"
Cells(1, X + 103) = "TrasladoOut_M20"
Cells(1, X + 104) = "TrasladoOut_M10"
Cells(1, X + 105) = "TrasladoOut_M5"
Cells(1, X + 106) = "TrasladoOut_M2"
Cells(1, X + 107) = "TrasladoOut_M1"
Cells(1, X + 108) = "TrasladoOut_M0.5"
Cells(1, X + 109) = "TrasladoOut_M0.2"
Cells(1, X + 110) = "TrasladoOut_M0.1"
Cells(1, X + 111) = "TrasladoOut_M0.05"
Cells(1, X + 112) = "TRASLADO_OUT"
Cells(1, X + 113) = "saldoFisico_B1000"
Cells(1, X + 114) = "saldoFisico_B500"
Cells(1, X + 115) = "saldoFisico_B200"
Cells(1, X + 116) = "saldoFisico_B100"
Cells(1, X + 117) = "saldoFisico_B50"
Cells(1, X + 118) = "saldoFisico_B20"
Cells(1, X + 119) = "saldoFisico_Met|fffd|lica"
Cells(1, X + 120) = "saldoFisico_M100"
Cells(1, X + 121) = "saldoFisico_M20"
Cells(1, X + 122) = "saldoFisico_M10"
Cells(1, X + 123) = "saldoFisico_M5"
Cells(1, X + 124) = "saldoFisico_M2"
Cells(1, X + 125) = "saldoFisico_M1"
Cells(1, X + 126) = "saldoFisico_M0.5"
Cells(1, X + 127) = "saldoFisico_M0.2"
Cells(1, X + 128) = "saldoFisico_M0.1"
Cells(1, X + 129) = "saldoFisico_M0.05"
Cells(1, X + 130) = "SALDO_FISICO"
Cells(1, X + 131) = "saldoEstimado_B1000"
Cells(1, X + 132) = "saldoEstimado_B500"
Cells(1, X + 133) = "saldoEstimado_B200"
Cells(1, X + 134) = "saldoEstimado_B100"
Cells(1, X + 135) = "saldoEstimado_B50"
Cells(1, X + 136) = "saldoEstimado_B20"
Cells(1, X + 137) = "saldoEstimado_Met|fffd|lica"
Cells(1, X + 138) = "saldoEstimado_M100"
Cells(1, X + 139) = "saldoEstimado_M20"
Cells(1, X + 140) = "saldoEstimado_M10"
Cells(1, X + 141) = "saldoEstimado_M5"
Cells(1, X + 142) = "saldoEstimado_M2"
Cells(1, X + 143) = "saldoEstimado_M1"
Cells(1, X + 144) = "saldoEstimado_M0.5"
Cells(1, X + 145) = "saldoEstimado_M.2"
Cells(1, X + 146) = "saldoEstimado_M.1"
Cells(1, X + 147) = "saldoEstimado_M.05"
Cells(1, X + 148) = "SALDO_ESTIMADO"
Cells(1, X + 149) = "requerimiento_Efectivo"
Cells(1, X + 150) = "sumaOrdenesCompra"
Cells(1, X + 151) = "estatusCaja"
Cells(1, X + 152) = "CiCo"
Cells(1, X + 153) = "NULL0"
Cells(1, X + 154) = "DEM_CAJA"
Cells(1, X + 155) = "DEM_SUCURSAL"
Cells(1, X + 156) = "TOTAL_DEM"
Cells(1, X + 157) = "ACREDITACI|fffd|N_DEM"
Cells(1, X + 158) = "SALDO_DEM"
Cells(1, X + 159) = "nombrePlaneador"
Cells(1, X + 160) = "fechaOperacion"
Cells(1, X + 161) = "tiempoRegistro"
Cells(1, X + 162) = "usuarioRegistro"

End Sub


Sub CV0_2_2_ArqueosEtv()
Dim X, Y, targetCol As Integer
Dim finRow As Long
Dim claveTargetCol As String

finRow = Range("A1000000").End(xlUp).Row
targetCol = 2
claveTargetCol = "IdPlazaMedio"
Y = 1

'limpiar blancos y encabezados
For i = 1 To finRow
    If Cells(Y + i, targetCol) = claveTargetCol Or Cells(Y + i, targetCol) = "" Then
    Range(Cells(Y + i, targetCol), Cells(Y + i, targetCol)).EntireRow.Select
    Selection.Delete Shift:=xlUp
    End If
Next i

For i = 1 To finRow
    If Cells(Y + i, targetCol) = claveTargetCol Or Cells(Y + i, targetCol) = "" Then
    Range(Cells(Y + i, targetCol), Cells(Y + i, targetCol)).EntireRow.Select
    Selection.Delete Shift:=xlUp
    End If
Next i

For i = 1 To finRow
    If Cells(Y + i, targetCol) = claveTargetCol Or Cells(Y + i, targetCol) = "" Then
    Range(Cells(Y + i, targetCol), Cells(Y + i, targetCol)).EntireRow.Select
    Selection.Delete Shift:=xlUp
    End If
Next i

X = 1

Cells(1, X) = "Medio"
Cells(1, X + 1) = "IdPlazaMedio"
Cells(1, X + 2) = "Etv"
Cells(1, X + 3) = "Plaza"
Cells(1, X + 4) = "llave"
Cells(1, X + 5) = "IB1000"
Cells(1, X + 6) = "IB500"
Cells(1, X + 7) = "IB200"
Cells(1, X + 8) = "IB100"
Cells(1, X + 9) = "IB50"
Cells(1, X + 10) = "IB20"
Cells(1, X + 11) = "IMetalica"
Cells(1, X + 12) = "IM100"
Cells(1, X + 13) = "IM20"
Cells(1, X + 14) = "IM10"
Cells(1, X + 15) = "IM5"
Cells(1, X + 16) = "IM2"
Cells(1, X + 17) = "IM1"
Cells(1, X + 18) = "IM0.5"
Cells(1, X + 19) = "IM0.2"
Cells(1, X + 20) = "IM0.1"
Cells(1, X + 21) = "IM0.05"
Cells(1, X + 22) = "SALDO_INICIAL"
Cells(1, X + 23) = "JB1000"
Cells(1, X + 24) = "JB500"
Cells(1, X + 25) = "JB200"
Cells(1, X + 26) = "JB100"
Cells(1, X + 27) = "JB50"
Cells(1, X + 28) = "JB20"
Cells(1, X + 29) = "JMetalica"
Cells(1, X + 30) = "JM100"
Cells(1, X + 31) = "JM20"
Cells(1, X + 32) = "JM10"
Cells(1, X + 33) = "JM5"
Cells(1, X + 34) = "JM2"
Cells(1, X + 35) = "JM1"
Cells(1, X + 36) = "JM0.5"
Cells(1, X + 37) = "JM0.2"
Cells(1, X + 38) = "JM0.1"
Cells(1, X + 39) = "JM0.05"
Cells(1, X + 40) = "AJUSTES_OPERATIVOS"
Cells(1, X + 41) = "AB1000"
Cells(1, X + 42) = "AB500"
Cells(1, X + 43) = "AB200"
Cells(1, X + 44) = "AB100"
Cells(1, X + 45) = "AB50"
Cells(1, X + 46) = "AB20"
Cells(1, X + 47) = "AMetalica"
Cells(1, X + 48) = "AM100"
Cells(1, X + 49) = "AM20"
Cells(1, X + 50) = "AM10"
Cells(1, X + 51) = "AM5"
Cells(1, X + 52) = "AM2"
Cells(1, X + 53) = "AM1"
Cells(1, X + 54) = "AM0.5"
Cells(1, X + 55) = "AM0.2"
Cells(1, X + 56) = "AM0.1"
Cells(1, X + 57) = "AM0.05"
Cells(1, X + 58) = "SALDO_ARQUEO_ETV"
Cells(1, X + 59) = "DB1000"
Cells(1, X + 60) = "DB500"
Cells(1, X + 61) = "DB200"
Cells(1, X + 62) = "DB100"
Cells(1, X + 63) = "DB50"
Cells(1, X + 64) = "DB20"
Cells(1, X + 65) = "DMetalica"
Cells(1, X + 66) = "DM100"
Cells(1, X + 67) = "DM20"
Cells(1, X + 68) = "DM10"
Cells(1, X + 69) = "DM5"
Cells(1, X + 70) = "DM2"
Cells(1, X + 71) = "DM1"
Cells(1, X + 72) = "DM0.5"
Cells(1, X + 73) = "DM0.2"
Cells(1, X + 74) = "DM0.1"
Cells(1, X + 75) = "DM0.05"
Cells(1, X + 76) = "DIFERENCIAS_ACUMULADAS"
Cells(1, X + 77) = "DIFERENCIAS_NETEADAS"
Cells(1, X + 78) = "COMENTARIOS_AJUSTES"
Cells(1, X + 79) = "AJUSTAR"
Cells(1, X + 80) = "NombrePlaneador"
Cells(1, X + 81) = "FechaOperacion"
Cells(1, X + 82) = "TiempoRegistro"
Cells(1, X + 83) = "UsuarioRegistro"

End Sub

Sub CV0_2_3_Compras()

Dim X, Y, targetCol As Integer
Dim finRow As Long
Dim claveTargetCol As String

finRow = Range("A1000000").End(xlUp).Row
targetCol = 5
claveTargetCol = "IdPlaza"
Y = 1


'limpiar blancos y encabezados
For i = 1 To finRow
    If Cells(Y + i, targetCol) = "" Or Cells(Y + i, targetCol) = claveTargetCol Then
    Range(Cells(Y + i, targetCol), Cells(Y + i, targetCol)).EntireRow.Select
    Selection.Delete Shift:=xlUp
    End If
Next i

For i = 1 To finRow
    If Cells(Y + i, targetCol) = "" Or Cells(Y + i, targetCol) = claveTargetCol Then
    Range(Cells(Y + i, targetCol), Cells(Y + i, targetCol)).EntireRow.Select
    Selection.Delete Shift:=xlUp
    End If
Next i

For i = 1 To finRow
    If Cells(Y + i, targetCol) = "" Or Cells(Y + i, targetCol) = claveTargetCol Then
    Range(Cells(Y + i, targetCol), Cells(Y + i, targetCol)).EntireRow.Select
    Selection.Delete Shift:=xlUp
    End If
Next i

X = 1

Cells(1, X) = "EstatusCompra"
Cells(1, X + 1) = "MedioAbastecimiento"
Cells(1, X + 2) = "Plaza"
Cells(1, X + 3) = "ETVDestinoCompra"
Cells(1, X + 4) = "IdPlaza"
Cells(1, X + 5) = "FechaCompra"
Cells(1, X + 6) = "MontoInicialRequerido"
Cells(1, X + 7) = "MontoComprado"
Cells(1, X + 8) = "Vendedor"
Cells(1, X + 9) = "CajaEtvOrigenVendedor"
Cells(1, X + 10) = "ContactoVendedor"
Cells(1, X + 11) = "RespuestaVendedor"
Cells(1, X + 12) = "EtvTraslado"
Cells(1, X + 13) = "FechaTraslado"
Cells(1, X + 14) = "TOTALBILLETE"
Cells(1, X + 15) = "BILLETE$1,000.00"
Cells(1, X + 16) = "BILLETE$500.00"
Cells(1, X + 17) = "BILLETE$200.00"
Cells(1, X + 18) = "BILLETE$100.00"
Cells(1, X + 19) = "BILLETE$50.00"
Cells(1, X + 20) = "BILLETE$20.00"
Cells(1, X + 21) = "TOTALMORRALLA"
Cells(1, X + 22) = "MONEDA$100.00"
Cells(1, X + 23) = "MONEDA$20.00"
Cells(1, X + 24) = "MONEDA$10.00"
Cells(1, X + 25) = "MONEDA$5.00"
Cells(1, X + 26) = "MONEDA$2.00"
Cells(1, X + 27) = "MONEDA$1.00"
Cells(1, X + 28) = "MONEDA$0.50"
Cells(1, X + 29) = "MONEDA$0.20"
Cells(1, X + 30) = "MONEDA$0.10"
Cells(1, X + 31) = "MONEDA$0.05"
Cells(1, X + 32) = "Folio SolicitudSapLogon"
Cells(1, X + 33) = "ClaveRastreoPdfTesoreria"
Cells(1, X + 34) = "UsuarioCaptura"
Cells(1, X + 35) = "HoraCaptura"
Cells(1, X + 36) = "FolioControl"
Cells(1, X + 37) = "NombrePlaneador"
Cells(1, X + 38) = "FechaOperacion"
Cells(1, X + 39) = "TiempoRegistro"
Cells(1, X + 40) = "UsuarioRegistro"


End Sub


Sub CV0_2_4_DotacionesProgramadas()
Dim X, Y, targetCol As Integer
Dim finRow As Long
Dim claveTargetCol As String

finRow = Range("A1000000").End(xlUp).Row
targetCol = 5
claveTargetCol = "IdSucursal"
Y = 1


'limpiar blancos y encabezados
For i = 1 To finRow
    If Cells(Y + i, targetCol) = "" Or Cells(Y + i, targetCol) = claveTargetCol Then
    Range(Cells(Y + i, targetCol), Cells(Y + i, targetCol)).EntireRow.Select
    Selection.Delete Shift:=xlUp
    End If
Next i

For i = 1 To finRow
    If Cells(Y + i, targetCol) = "" Or Cells(Y + i, targetCol) = claveTargetCol Then
    Range(Cells(Y + i, targetCol), Cells(Y + i, targetCol)).EntireRow.Select
    Selection.Delete Shift:=xlUp
    End If
Next i

For i = 1 To finRow
    If Cells(Y + i, targetCol) = "" Or Cells(Y + i, targetCol) = claveTargetCol Then
    Range(Cells(Y + i, targetCol), Cells(Y + i, targetCol)).EntireRow.Select
    Selection.Delete Shift:=xlUp
    End If
Next i

X = 1

Cells(1, X) = "EstatusServicio"
Cells(1, X + 1) = "IdPlaza"
Cells(1, X + 2) = "Etv Origen"
Cells(1, X + 3) = "PlazaOrigen"
Cells(1, X + 4) = "IdSucursal"
Cells(1, X + 5) = "Sucursal"
Cells(1, X + 6) = "EtvServicio"
Cells(1, X + 7) = "FechaPlaneacion"
Cells(1, X + 8) = "FechaServicio"
Cells(1, X + 9) = "TipoServicio"
Cells(1, X + 10) = "DestinoConcentracion"
Cells(1, X + 11) = "IdSucursalDestino"
Cells(1, X + 12) = "SucursalDestino"
Cells(1, X + 13) = "IdPlazaDestino"
Cells(1, X + 14) = "CajaDestino"
Cells(1, X + 15) = "EtvDestino"
Cells(1, X + 16) = "ImporteServicio"
Cells(1, X + 17) = "B1000"
Cells(1, X + 18) = "B500"
Cells(1, X + 19) = "B200"
Cells(1, X + 20) = "B100"
Cells(1, X + 21) = "B50"
Cells(1, X + 22) = "B20"
Cells(1, X + 23) = "Metalica"
Cells(1, X + 24) = "M100"
Cells(1, X + 25) = "M20"
Cells(1, X + 26) = "M10"
Cells(1, X + 27) = "M5"
Cells(1, X + 28) = "M2"
Cells(1, X + 29) = "M1"
Cells(1, X + 30) = "M0.5"
Cells(1, X + 31) = "M0.2"
Cells(1, X + 32) = "M0.1"
Cells(1, X + 33) = "M0.05"
Cells(1, X + 34) = "EnvioCorreoEtv"
Cells(1, X + 35) = "EnvioCorreoOS"
Cells(1, X + 36) = "NombrePlaneador"
Cells(1, X + 37) = "FechaOperacion"
Cells(1, X + 38) = "TiempoRegistro"
Cells(1, X + 39) = "UsuarioRegistro"


End Sub


Sub CV0_3ReporteCajasHistorico()

Call VariablesGlobales

Dim row0, col0, punteroSaldoInicial, punteroDotProg, punteroDotEmerg, punteroCompras, punteroTralIn, _
    punteroTralOut, punteroSaldoFisico, punteroSaldoEstimado, punteroPlaneadores, punteroInfoGral, _
    punteroplaza As Integer
Dim sumaSaldoInicial, sumaDotProg, sumaDotEmerg, sumaCompras, sumaTralIn, _
    sumaTralOut, sumaSaldoFisico, sumaSaldoEstimado, sumaPlaneadores, sumaInfoGral, _
    sumaplaza As Currency
Dim numPlan, numInfo As Long
Dim numCol, largex, longx As Long
Dim consultaHistorico() As Variant
Dim Planeadores() As Variant
Dim infoGral() As Variant
Dim labelTotales, fechaLabelTitulo As String
Dim fechaFormulario, fechaFormularioIni, fechaFormularioSucursales As Date
Dim libroActual As String

libroActual = ActiveWorkbook.Name

labelTotales = "TOTALES"
'FECHA CAJAS
fechaFormulario = CDate(CONSULTA_HISTORICO.ComboDiaFin.value & "/" & CONSULTA_HISTORICO.ComboMesesFin.value & "/" & CONSULTA_HISTORICO.ComboAnioFin.value)
'FECHA SUCURSALES
fechaFormularioSucursales = CDate(CONSULTA_HISTORICO.ComboDiaSuc.value & "/" & CONSULTA_HISTORICO.ComboMesesSuc.value & "/" & CONSULTA_HISTORICO.ComboAnioSuc.value)


row0 = 1
col0 = 1

punteroPlaneadores = 30
punteroInfoGral = 25

punteroplaza = 4
punteroSaldoInicial = 23
punteroDotProg = 41
punteroDotEmerg = 59
punteroCompras = 77
punteroTralIn = 95
punteroTralOut = 113
punteroSaldoFisico = 131
punteroSaldoEstimado = 149

sumaSaldoInicial = 0
sumaDotProg = 0
sumaDotEmerg = 0
sumaCompras = 0
sumaTralIn = 0
sumaTralOut = 0
sumaSaldoFisico = 0
sumaSaldoEstimado = 0

''''''''''''''''''''''''''ARREGLO DIRECTORIO'''''''''''''''''''''''''''''''''''''
'sh4 = "Info. Gral."
Sheets(sh4).Select
''''''''''''Arreglo planeadores()''''''''''''''''''
numPlan = Cells(1000000, punteroPlaneadores).End(xlUp).Row
X = 2

ReDim Planeadores(numPlan, 2)

For i = 1 To numPlan
    
    Planeadores(i, 1) = Cells(X, punteroPlaneadores)
    Planeadores(i, 2) = Cells(X, punteroPlaneadores + 1)
    X = X + 1
    
Next i


''''''''''''Arreglo infoGral()''''''''''''''''''
numInfo = Cells(1000000, punteroInfoGral).End(xlUp).Row
X = 2

ReDim infoGral(numInfo, 3)


For i = 1 To UBound(infoGral)
    
    For j = 1 To UBound(Planeadores)
    
        If Cells(X, punteroInfoGral) = Planeadores(j, 1) Then
        infoGral(i, 1) = Planeadores(j, 2)
        Exit For
        End If
    
    Next j
    
    infoGral(i, 2) = Cells(X, punteroInfoGral + 1)
    infoGral(i, 3) = Cells(X, punteroInfoGral + 2)
    X = X + 1
Next i


'infoGral()
consultax = 3

'MsgBox consultax & Chr(10) & infoGral(consultax, 1) & Chr(10) & infoGral(consultax, 2) & Chr(10) & infoGral(consultax, 3)
'
'For i = 1 To UBound(infoGral)
'
'    MsgBox i & Chr(10) & infoGral(i, 1) & Chr(10) & infoGral(i, 2) & Chr(10) & infoGral(i, 3)
'
'Next i

'''''''''''''''''''''''''''ARREGLO CONSULTA DATOS'''''''''''''''''''''''''''''''''
'sh6 = "Procesar"

Sheets(sh6).Select
X = 2
ini = 1
largex = 12
longx = Cells(1000000, 1).End(xlUp).Row

'consultaHistorico()

ReDim consultaHistorico(longx, largex)


For i = 1 To UBound(consultaHistorico)
    
'PLANEADOR RESPONSABLE
    For j = 1 To UBound(infoGral)
           
        If Cells(X, punteroplaza) = infoGral(j, 3) And Cells(X, punteroplaza - 1) = infoGral(j, 2) Then
        
        'MsgBox "i" & i & Chr(10) & "j" & j _
            & Chr(10) & "infoGral(j, 3) = " & infoGral(j, 3) & Chr(10) & "infoGral(j, 2) = " & infoGral(j, 2) _
            & Chr(10) & "infoGral(j, 1) = " & infoGral(j, 1)
        
        consultaHistorico(ini, 1) = infoGral(j, 1)
                
        Exit For
        
'        ElseIf j = UBound(infoGral) And Cells(x, punteroplaza) <> infoGral(j, 3) And Cells(x, punteroplaza - 1) <> infoGral(j, 2) Then
'
'        consultaHistorico(i, 1) = "SIN PLANEADOR"
        
        End If
    
    Next j

'MEDIO
consultaHistorico(ini, 2) = Cells(X, punteroplaza - 3)
'PLAZA
consultaHistorico(ini, 3) = Cells(X, punteroplaza)
'ETV
consultaHistorico(ini, 4) = Cells(X, punteroplaza - 1)
  

'SALDO INICIAL
consultaHistorico(ini, 5) = Cells(X, punteroSaldoInicial)
'DOTACIONES PROGRAMADAS
consultaHistorico(ini, 6) = Cells(X, punteroDotProg)
'DOTACIONES EMERGENTE
consultaHistorico(ini, 7) = Cells(X, punteroDotEmerg)
'COMPRAS
consultaHistorico(ini, 8) = Cells(X, punteroCompras)
'TRASLADO IN
consultaHistorico(ini, 9) = Cells(X, punteroTralIn)
'TRASLADO OUT
consultaHistorico(ini, 10) = Cells(X, punteroTralOut)
'SALDO FISICO
consultaHistorico(ini, 11) = Cells(X, punteroSaldoFisico)
'SALDO ESTIMADO
consultaHistorico(ini, 12) = Cells(X, punteroSaldoEstimado)

    If Cells(X, punteroplaza - 3) = labelTotales Then
    
        sumaSaldoInicial = sumaSaldoInicial + Cells(X, punteroSaldoInicial)
        sumaDotProg = sumaDotProg + Cells(X, punteroDotProg)
        sumaDotEmerg = sumaDotEmerg + Cells(X, punteroDotEmerg)
        sumaCompras = sumaCompras + Cells(X, punteroCompras)
        sumaTralIn = sumaTralIn + Cells(X, punteroTralIn)
        sumaTralOut = sumaTralOut + Cells(X, punteroTralOut)
        sumaSaldoFisico = sumaSaldoFisico + Cells(X, punteroSaldoFisico)
        sumaSaldoEstimado = sumaSaldoEstimado + Cells(X, punteroSaldoEstimado)
    
    End If

X = X + 1
ini = ini + 1

Next i



'lista de planeadores activos
Dim PLANEADORlista As Collection
Set PLANEADORlista = New Collection

For i = 1 To UBound(consultaHistorico)
    
    If Len(consultaHistorico(i, 1)) > 2 Then
    
        On Error Resume Next
        
        PLANEADORlista.Add consultaHistorico(i, 1), CStr(consultaHistorico(i, 1))
        
        On Error GoTo 0
    
    End If
    
Next i


'lista de medios de compra activos
Dim MEDIOSlista As Collection
Set MEDIOSlista = New Collection
For i = 1 To UBound(consultaHistorico)
    On Error Resume Next
    
    MEDIOSlista.Add consultaHistorico(i, 2), CStr(consultaHistorico(i, 2))
    
    On Error GoTo 0

Next i


'lista de plazas activos
Dim PLAZASlista As Collection
Set PLAZASlista = New Collection
For i = 1 To UBound(consultaHistorico)
    On Error Resume Next
    
    PLAZASlista.Add consultaHistorico(i, 3), CStr(consultaHistorico(i, 3))
    
    On Error GoTo 0

Next i


'lista de medios de ETV activos
Dim ETVlista As Collection
Set ETVlista = New Collection
For i = 1 To UBound(consultaHistorico)
    On Error Resume Next
    
    ETVlista.Add consultaHistorico(i, 4), CStr(consultaHistorico(i, 4))
    
    On Error GoTo 0

Next i



Sheets(sh6).Select
Cells.Clear

'''''''''''''''''''''''''''''''''''ARREGLO SALDOS SUCURSALES''''''''''''''''''''''''''''''''''''''''''''''''
'IMPORTAR SALDOS DE SUCURSALES DE LA FECHA DE FORMULARIO
Call CM1_a_ImportarSaldosInicialesSucursalesValor(CDate(fechaFormularioSucursales))

Dim rowSuc0, largeSuc As Long
Dim saldosSuma As Currency
Dim saldoSuc() As Variant
rowSuc0 = 1
largeSuc = Range("A1000000").End(xlUp).Row
saldosSuma = 0

ReDim saldoSuc(largeSuc, 6)

For i = 1 To UBound(saldoSuc)
    'FECHA
    saldoSuc(i, 1) = Cells(rowSuc0, 1)
    'ID SUCURSAL
    saldoSuc(i, 2) = Cells(rowSuc0, 2)
    'NOMBRE SUCURSAL
    saldoSuc(i, 3) = Cells(rowSuc0, 3)
    'SALDO
    saldoSuc(i, 4) = Val(Cells(rowSuc0, 4))
    'PLAZA
    saldoSuc(i, 5) = BuscarInfoSucursal(Cells(rowSuc0, 2), 4)
    'PLANEADOR
    For j = 1 To UBound(Planeadores)
        If BuscarInfoSucursal(Cells(rowSuc0, 2), 4) = Planeadores(j, 1) Then
        saldoSuc(i, 6) = Planeadores(j, 2)
        Exit For
        End If
    Next j
    saldosSuma = saldosSuma + Val(Cells(rowSuc0, 4))
    
    rowSuc0 = rowSuc0 + 1
    
Next i


'''''''''''''''''''''''''''''''''''''''ARREGLO DEM'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sheets(sh6).Select
Cells.Clear

Call CM1_b_ImportarDem(CDate(fechaFormulario))

Dim contadorDem As Long
Dim saldosSumaDem, sumaDem, sumaAcreditDem As Currency
Dim saldoDem() As Variant
rowSuc0 = 1
largeSuc = Range("A1000000").End(xlUp).Row
sumaDem = 0
sumaAcreditDem = 0
saldosSumaDem = 0
contadorDem = 1

ReDim saldoDem(largeSuc, 13)

For i = 1 To UBound(saldoDem)
    
    If Cells(rowSuc0, 1) <> "Estatus Acreditaci|fffd|n" Then
        'Estatus Acreditaci|fffd|n 1
        saldoDem(contadorDem, 1) = Cells(rowSuc0, 1)
        'Etv Origen 3
        saldoDem(contadorDem, 2) = Cells(rowSuc0, 3)
        'Plaza Origen 4
        saldoDem(contadorDem, 3) = Cells(rowSuc0, 4)
        'Id Sucursal 5
        saldoDem(contadorDem, 4) = Cells(rowSuc0, 5)
        'Sucursal 6
        saldoDem(contadorDem, 6) = Cells(rowSuc0, 6)
        'ETV Servicio 7
        saldoDem(contadorDem, 6) = Cells(rowSuc0, 7)
        
        'planeador
        For j = 1 To UBound(Planeadores)
            
            If BuscarInfoPlaza(Cells(rowSuc0, 4), 3) = Planeadores(j, 1) Then
                saldoDem(contadorDem, 7) = Planeadores(j, 2)
                Exit For
            End If
        Next j
        
        'Fecha Servicio 9
        saldoDem(contadorDem, 8) = Cells(rowSuc0, 9)
        'TipoServicio 10
        saldoDem(contadorDem, 9) = Cells(rowSuc0, 10)
        'Destino Concentracion 11
        saldoDem(contadorDem, 10) = Cells(rowSuc0, 11)
        
        'Importe Servicio 12
        saldoDem(contadorDem, 11) = Cells(rowSuc0, 12)
        sumaDem = sumaDem + Cells(rowSuc0, 12)
        
        'Importe Acreditado 30
        saldoDem(contadorDem, 12) = Cells(rowSuc0, 30)
        sumaAcreditDem = sumaAcreditDem + Cells(rowSuc0, 30)
        
        'saldo dem 39
        saldoDem(contadorDem, 13) = Cells(rowSuc0, 39)
        saldosSumaDem = saldosSumaDem + Cells(rowSuc0, 39)
        
        contadorDem = contadorDem + 1
    
    End If

rowSuc0 = rowSuc0 + 1

Next i


''''''''''''''''''''''''''''''''''' ARREGLO MODELO PRON|fffd|STICO ''''''''''''''''''''''''''''''''''''''''''''''''
Sheets(sh6).Select
Cells.Clear

'importar pron|fffd|stico

Call CQ8_ImportarPronosticoAmFm

Dim pronosticoSucursales() As Variant
Dim lunesCICO, lunesDOT As Integer
Dim rowiniPron, rowsPron As Long

rowiniPron = 1
rowsPron = Range("a1000000").End(xlUp).Row - 1
'columnas
lunesCICO = 24
lunesDOT = 41

ReDim pronosticoSucursales(rowsPron, 20)

For i = 1 To UBound(pronosticoSucursales)
    'ID SUCURSAL
    pronosticoSucursales(i, 1) = Cells(rowiniPron + i, 1)
    'NOMBRE SUCURSAL
    pronosticoSucursales(i, 2) = Cells(rowiniPron + i, 2)
    'PLAZA
    pronosticoSucursales(i, 3) = BuscarInfoSucursal(Cells(rowiniPron + i, 1), 2)
    
    'PLANEADOR
    For j = 1 To UBound(Planeadores)
        If Planeadores(j, 1) = BuscarInfoSucursal(Cells(rowiniPron + i, 1), 4) Then
           pronosticoSucursales(i, 4) = Planeadores(j, 2)
        End If
    Next j
    
    'CICO LUNES
    pronosticoSucursales(i, 5) = Cells(rowiniPron + i, lunesCICO)
    'CICO MARTES
    pronosticoSucursales(i, 6) = Cells(rowiniPron + i, lunesCICO + 1)
    'CICO MIERCOLES
    pronosticoSucursales(i, 7) = Cells(rowiniPron + i, lunesCICO + 2)
    'CICO JUEVES
    pronosticoSucursales(i, 8) = Cells(rowiniPron + i, lunesCICO + 3)
    'CICO VIERNES
    pronosticoSucursales(i, 9) = Cells(rowiniPron + i, lunesCICO + 4)
    'CICO SABADO
    pronosticoSucursales(i, 10) = Cells(rowiniPron + i, lunesCICO + 5)
    'CICO DOMINGO
    pronosticoSucursales(i, 11) = Cells(rowiniPron + i, lunesCICO + 6)
    'CICO SIGUIENTE LUNES
    pronosticoSucursales(i, 12) = Cells(rowiniPron + i, lunesCICO + 7)
    
    'PRONOSTICO LUNES
    pronosticoSucursales(i, 13) = Cells(rowiniPron + i, lunesDOT)
    'PRONOSTICO MARTES
    pronosticoSucursales(i, 14) = Cells(rowiniPron + i, lunesDOT + 1)
    'PRONOSTICO MIERCOLES
    pronosticoSucursales(i, 15) = Cells(rowiniPron + i, lunesDOT + 2)
    'PRONOSTICO JUEVES
    pronosticoSucursales(i, 16) = Cells(rowiniPron + i, lunesDOT + 3)
    'PRONOSTICO VIERNES
    pronosticoSucursales(i, 17) = Cells(rowiniPron + i, lunesDOT + 4)
    'PRONOSTICO SABADO
    pronosticoSucursales(i, 18) = Cells(rowiniPron + i, lunesDOT + 5)
    'PRONOSTICO DOMINGO
    pronosticoSucursales(i, 19) = Cells(rowiniPron + i, lunesDOT + 6)
    'PRONOSTICO SIGUIENTE LUNES
    pronosticoSucursales(i, 20) = Cells(rowiniPron + i, lunesDOT + 7)
    
Next i

consultaw = 92

''''''''''''''TOTALES POR PLAZA''''''''''''''''''''

' MsgBox "PLAZASlista" & Chr(10) & PLAZASlista.Count & Chr(10) & PLAZASlista(1) & Chr(10) _
'        & PLAZASlista(2) & Chr(10) & PLAZASlista(3) & Chr(10) & PLAZASlista(4) & Chr(10) _
'        & PLAZASlista(5) & Chr(10) & PLAZASlista(6) & Chr(10) & PLAZASlista(7)
 
Dim TresDias() As Variant
Dim CuatroDias() As Variant
Dim tresCICO, tresDOT As Integer
Dim fechaPronosticoForm As Date
Dim sumaTresDiasCICO, sumaCuatroDiasCICO, sumaTresDiasDOT, sumaCuatroDiasDOT As Currency

Select Case CONSULTA_HISTORICO.ComboBoxMesesPronostico.value
Case "ENERO"
mesNum = 1
Case "FEBRERO"
mesNum = 2
Case "MARZO"
mesNum = 3
Case "ABRIL"
mesNum = 4
Case "MAYO"
mesNum = 5
Case "JUNIO"
mesNum = 6
Case "JULIO"
mesNum = 7
Case "AGOSTO"
mesNum = 8
Case "SEPTIEMBRE"
mesNum = 9
Case "OCTUBRE"
mesNum = 10
Case "NOVIEMBRE"
mesNum = 11
Case "DICIEMBRE"
mesNum = 12
End Select

fechaPronosticoForm = CDate(CONSULTA_HISTORICO.ComboDiaPronostico.value & "/" & mesNum & "/" & CONSULTA_HISTORICO.ComboBoxAnioPronostico.value)

Select Case Weekday(fechaPronosticoForm, vbMonday)
Case 1
'arreglo del martes
tresCICO = 6
tresDOT = 14
Case 2
'arreglo del miercoles
tresCICO = 7
tresDOT = 15
Case 3
'arreglo del jueves
tresCICO = 8
tresDOT = 16
Case 4
'arreglo del viernes
tresCICO = 9
tresDOT = 17
Case 5
'arreglo del sabado
tresCICO = 12
tresDOT = 20
Case 1
'arreglo del domingo
tresCICO = 12
tresDOT = 20
Case 1
'arreglo del siguiente lunes
tresCICO = 12
tresDOT = 20

End Select



ReDim TresDias(PLAZASlista.Count, 4)
ReDim CuatroDias(PLAZASlista.Count, 4)

For i = 1 To PLAZASlista.Count

'1 PLAZA
    TresDias(i, 1) = PLAZASlista(i)
    CuatroDias(i, 1) = PLAZASlista(i)
'2 PLANEADOR
    TresDias(i, 2) = BuscarInfoPlaza(PLAZASlista(i), 3)
    CuatroDias(i, 2) = BuscarInfoPlaza(PLAZASlista(i), 3)

Next i


For j = 1 To UBound(TresDias)

    For i = 1 To UBound(pronosticoSucursales)

        'si hay 4 arreglos disponibles hasta el tresCICO = 8
        If pronosticoSucursales(i, 3) = TresDias(j, 1) And tresCICO <= 8 Then
        sumaTresDiasCICO = sumaTresDiasCICO + pronosticoSucursales(i, tresCICO) + pronosticoSucursales(i, tresCICO + 1) + pronosticoSucursales(i, tresCICO + 2)
        sumaCuatroDiasCICO = sumaCuatroDiasCICO + pronosticoSucursales(i, tresCICO) + pronosticoSucursales(i, tresDOT + 1) + pronosticoSucursales(i, tresCICO + 2) + pronosticoSucursales(i, tresCICO + 3)

        sumaTresDiasDOT = sumaTresDiasDOT + pronosticoSucursales(i, tresDOT) + pronosticoSucursales(i, tresDOT + 1) + pronosticoSucursales(i, tresDOT + 2)
        sumaCuatroDiasDOT = sumaCuatroDiasDOT + pronosticoSucursales(i, tresDOT) + pronosticoSucursales(i, tresDOT + 1) + pronosticoSucursales(i, tresDOT + 2) + pronosticoSucursales(i, tresDOT + 3)

'3 3 DIAS
        TresDias(j, 3) = TresDias(j, 3) + pronosticoSucursales(i, tresCICO) + pronosticoSucursales(i, tresCICO + 1) + pronosticoSucursales(i, tresCICO + 2)
        TresDias(j, 4) = TresDias(j, 4) + pronosticoSucursales(i, tresDOT) + pronosticoSucursales(i, tresDOT + 1) + pronosticoSucursales(i, tresDOT + 2)
'4 4 DIAS
        CuatroDias(j, 3) = CuatroDias(j, 3) + pronosticoSucursales(i, tresCICO) + pronosticoSucursales(i, tresDOT + 1) + pronosticoSucursales(i, tresCICO + 2) + pronosticoSucursales(i, tresCICO + 3)
        CuatroDias(j, 4) = CuatroDias(j, 4) + pronosticoSucursales(i, tresDOT) + pronosticoSucursales(i, tresDOT + 1) + pronosticoSucursales(i, tresDOT + 2) + pronosticoSucursales(i, tresDOT + 3)
        
        
        '4 |fffd|ltimos d|fffd|as tresCICO > 8
        ElseIf pronosticoSucursales(i, 3) = TresDias(j, 1) And tresCICO > 8 Then
        
        sumaTresDiasCICO = sumaTresDiasCICO + pronosticoSucursales(i, 9) + pronosticoSucursales(i, 10) + pronosticoSucursales(i, 11)
        sumaCuatroDiasCICO = sumaCuatroDiasCICO + pronosticoSucursales(i, 9) + pronosticoSucursales(i, 10) + pronosticoSucursales(i, 11) + pronosticoSucursales(i, 12)

        sumaTresDiasDOT = sumaTresDiasDOT + pronosticoSucursales(i, 17) + pronosticoSucursales(i, 18) + pronosticoSucursales(i, 19)
        sumaCuatroDiasDOT = sumaCuatroDiasDOT + pronosticoSucursales(i, 17) + pronosticoSucursales(i, 18) + pronosticoSucursales(i, 19) + pronosticoSucursales(i, 20)

        
'3 3 DIAS
        TresDias(j, 3) = TresDias(j, 3) + pronosticoSucursales(i, 9) + pronosticoSucursales(i, 10) + pronosticoSucursales(i, 11)
        TresDias(j, 4) = TresDias(j, 4) + pronosticoSucursales(i, 17) + pronosticoSucursales(i, 18) + pronosticoSucursales(i, 19)
'4 4 DIAS
        CuatroDias(j, 3) = CuatroDias(j, 3) + pronosticoSucursales(i, 9) + pronosticoSucursales(i, 10) + pronosticoSucursales(i, 11) + pronosticoSucursales(i, 12)
        CuatroDias(j, 4) = CuatroDias(j, 4) + pronosticoSucursales(i, 17) + pronosticoSucursales(i, 18) + pronosticoSucursales(i, 19) + pronosticoSucursales(i, 20)
        
        End If

    Next i

Next j








'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

''''''''''''''''''''''''''''''''''''''ARMAR ARCHIVO DE REPORTE'''''''''''''''''''''''''''''''''''''''''

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''




Sheets(sh6).Select
Cells.Clear

''''''''''''''''''''AGREGAR DETALLE DE CONCEPTO PLAZA ETV Y PLANEADOR'''''''''''''''''''''

'ENCABEZADOS
'x = 23
secc1 = 3
secc3 = 24

    Cells(1, 1) = "RESUMEN OPERATIVO" & Chr(10) & Format(fechaFormulario, "dd mmmm yyyy")


'TOTALES
    Cells(secc1, 1) = "RESUMEN DE CAJAS"
    Cells(secc1 + 1, 1) = "Concepto"
    Cells(secc1 + 2, 1) = "Saldo Inicial"
    Cells(secc1 + 3, 1) = "Dotaciones Programadas"
    Cells(secc1 + 4, 1) = "Dotaciones Emergentes"
    Cells(secc1 + 5, 1) = "Compras"
    Cells(secc1 + 6, 1) = "Traslados Ingreso"
    Cells(secc1 + 7, 1) = "Traslados Salida"
    Cells(secc1 + 8, 1) = "Saldo F|fffd|sico"
    Cells(secc1 + 9, 1) = "Saldo Estimado"
    Cells(secc1 + 10, 1) = "Saldo Sucursales"
    Cells(secc1 + 12, 1) = "Saldo Cajas + Sucursales" & Chr(10) & "(Improductivo)"
    
    Cells(secc1 + 14, 1) = "Requerimiento de efectivo pr|fffd|ximos 3 d|fffd|as"
    Cells(secc1 + 15, 1) = "Requerimiento de efectivo pr|fffd|ximos 4 d|fffd|as"
    Cells(secc1 + 16, 1) = "Compra m|fffd|nima estimada"
    Cells(secc1 + 17, 1) = "Compra m|fffd|xima estimada"
    
    Cells(secc1 + 1, 2) = labelTotales
    Cells(secc1 + 2, 2) = sumaSaldoInicial
    Cells(secc1 + 3, 2) = sumaDotProg
    Cells(secc1 + 4, 2) = sumaDotEmerg
    Cells(secc1 + 5, 2) = sumaCompras
    Cells(secc1 + 6, 2) = sumaTralIn
    Cells(secc1 + 7, 2) = sumaTralOut
    Cells(secc1 + 8, 2) = sumaSaldoFisico
    Cells(secc1 + 9, 2) = sumaSaldoEstimado
    
    'Requerimiento de efectivo pr|fffd|ximos 3 d|fffd|as
    Cells(secc1 + 14, 2) = sumaTresDiasDOT
    'Requerimiento de efectivo pr|fffd|ximos 4 d|fffd|as
    Cells(secc1 + 15, 2) = sumaCuatroDiasDOT
    'Compra m|fffd|nima estimada
    Cells(secc1 + 16, 2).FormulaR1C1 = "=R[-2]C-R[-7]C"
    'Compra m|fffd|xima estimada
    Cells(secc1 + 17, 2).FormulaR1C1 = "=R[-2]C-R[-8]C"
    
    
'    'planeadores
    colsecc1 = 2
    avanzarColum = 1
    
    For i = 1 To PLANEADORlista.Count

        Cells(secc1 + 1, colsecc1 + i) = PLANEADORlista(i)
        Cells(secc3 - 1, colsecc1 + i) = PLANEADORlista(i)
        
    Next i


'''''''''''''''SALDOS SUCURSALES''''''''''''''''''''''''''''
'SALDO saldoSuc(i, 4) PLANEADOR saldoSuc(i, 6)
secc1 = 13
colsecc1 = 4
avanzarColum = 2
saldoSucSuma = 0

For j = 1 To PLANEADORlista.Count

    For i = 1 To UBound(saldoSuc)
        
        If Cells(colsecc1, avanzarColum + j) = saldoSuc(i, 6) Then
            saldoSucSuma = saldoSucSuma + saldoSuc(i, 4)
        End If
    
    Next i
    
    Cells(secc1, avanzarColum + j) = saldoSucSuma
    Cells(secc1 + 2, avanzarColum + j).FormulaR1C1 = "=R[-2]C+R[-4]C"
    
    saldoSucSuma = 0
        
Next j

saldoSucSuma = 0

For i = 1 To UBound(saldoSuc)
            saldoSucSuma = saldoSucSuma + saldoSuc(i, 4)
Next i
    
    Cells(secc1, 2) = saldoSucSuma
    Cells(secc1 + 2, 2).FormulaR1C1 = "=R[-2]C+R[-4]C"
    
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'medios de compra
    Cells(secc3 - 1, 1) = "MEDIO COMPRA"
    Cells(secc3 - 1, 2) = labelTotales
    
    Cells(secc3 - 2, 1) = "RESUMEN DE COMPRAS"
    
    For i = 1 To MEDIOSlista.Count
        If MEDIOSlista(i) <> "" Or MEDIOSlista(i) <> labelTotales Then
            Cells(secc3, 1) = MEDIOSlista(i)
        End If
        

        secc3 = secc3 + 1
        
    Next i

'''''''''''''''''''''''''RESUMEN CONCEPTO POR PLANEADOR'''''''''''''''''''''''''''''''''''
'regresar valor secc1 = 5
secc1 = 5
colsecc1 = 4
sumaValor = 0
avanzarColum = 2


For j = 1 To PLANEADORlista.Count


        For i = 1 To UBound(consultaHistorico)
            
            'PUNTERO ENCABEZADO
            If Cells(colsecc1, avanzarColum + j) = consultaHistorico(i, 1) And _
                consultaHistorico(i, 2) = labelTotales Then
                
                sumaSI = sumaSI + consultaHistorico(i, 5)
                sumaDO = sumaDO + consultaHistorico(i, 6)
                sumaDE = sumaDE + consultaHistorico(i, 7)
                sumaCO = sumaCO + consultaHistorico(i, 8)
                sumaTI = sumaTI + consultaHistorico(i, 9)
                sumaTO = sumaTO + consultaHistorico(i, 10)
                sumaSF = sumaSF + consultaHistorico(i, 11)
                sumaSE = sumaSE + consultaHistorico(i, 12)
             
            End If
        
            
        Next i
        
        Cells(secc1, avanzarColum + j) = sumaSI
        Cells(secc1 + 1, avanzarColum + j) = sumaDO
        Cells(secc1 + 2, avanzarColum + j) = sumaDE
        Cells(secc1 + 3, avanzarColum + j) = sumaCO
        Cells(secc1 + 4, avanzarColum + j) = sumaTI
        Cells(secc1 + 5, avanzarColum + j) = sumaTO
        Cells(secc1 + 6, avanzarColum + j) = sumaSF
        Cells(secc1 + 7, avanzarColum + j) = sumaSE
        

    sumaSI = 0
    sumaDO = 0
    sumaDE = 0
    sumaCO = 0
    sumaTI = 0
    sumaTO = 0
    sumaSF = 0
    sumaSE = 0
    
    secc1 = 5


 Next j
 
 
'regresar valor secc3 = 16
secc3 = 24
colsecc1 = 23
sumaValor = 0
avanzarColum = 2

'TOTAL COMPRAS POR PLANEADOR consultaHistorico(ini, 8)

For j = 1 To PLANEADORlista.Count

    Do While Cells(secc3, 1) <> ""
    
        For i = 1 To UBound(consultaHistorico)
            
            'PUNTERO ENCABEZADO
            If Cells(colsecc1, avanzarColum + j) = consultaHistorico(i, 1) And _
                Cells(secc3, 1) = consultaHistorico(i, 2) Then
                
                sumaValor = sumaValor + consultaHistorico(i, 8)
             
            End If
        
            
        Next i
        
        Cells(secc3, avanzarColum + j) = sumaValor
        
        secc3 = secc3 + 1
        sumaValor = 0
        
    Loop
    
    sumaValor = 0
    secc3 = 24


 Next j

'TOTAL DE COMPRAS
secc3 = 24

Do While Cells(secc3, 1) <> ""

    For i = 1 To UBound(consultaHistorico)
        
        'PUNTERO
        If Cells(secc3, 1) = consultaHistorico(i, 2) Then
            
            sumaValor = sumaValor + consultaHistorico(i, 8)
         
    End If
        
    Next i
    
    Cells(secc3, 2) = sumaValor
    
    secc3 = secc3 + 1
    sumaValor = 0
    
Loop


'''''''''''''''''''''''''''''''''''''HOJA 1 AGREGAR INFORMACI|fffd|N '''''''''''''''''''''''''''''''''''''''''''''''
'libro independiente

Sheets(sh6).Copy
ActiveSheet.Select




ActiveSheet.Name = "RESUMEN OPERATIVO"


'''''''''''''''''''''''''''''''''''''HOJA 2 AGREGAR INFORMACI|fffd|N '''''''''''''''''''''''''''''''''''''''''''''''
'NUEVA HOJA
Sheets.Add After:=ActiveSheet
ActiveSheet.Name = "DETALLE SALDOS CAJAS"


'AGREGAR SALDO POR PLANEADOR
hoja2secc2 = 2
For i = 1 To UBound(consultaHistorico)

    If consultaHistorico(i, 2) = labelTotales Then

    Cells(hoja2secc2, 1) = consultaHistorico(i, 1)
    'TOTALES ETIQUETA
    'Cells(x, 2) = consultaHistorico(i, 2)
    Cells(hoja2secc2, 2) = consultaHistorico(i, 3)
    Cells(hoja2secc2, 3) = consultaHistorico(i, 4)
    Cells(hoja2secc2, 4) = consultaHistorico(i, 5)
    Cells(hoja2secc2, 5) = consultaHistorico(i, 6)
    Cells(hoja2secc2, 6) = consultaHistorico(i, 7)
    Cells(hoja2secc2, 7) = consultaHistorico(i, 8)
    Cells(hoja2secc2, 8) = consultaHistorico(i, 9)
    Cells(hoja2secc2, 9) = consultaHistorico(i, 10)
    Cells(hoja2secc2, 10) = consultaHistorico(i, 11)
    Cells(hoja2secc2, 11) = consultaHistorico(i, 12)
    hoja2secc2 = hoja2secc2 + 1
    End If


Next i

'encabezados
    Cells(1, 1) = "Planeador"
    Cells(1, 2) = "Plaza"
    Cells(1, 3) = "ETV"
    Cells(1, 4) = "Saldo Inicial"
    Cells(1, 5) = "Dotaciones Programadas"
    Cells(1, 6) = "Dotaciones Emergentes"
    Cells(1, 7) = "Compras"
    Cells(1, 8) = "Traslados Ingreso"
    Cells(1, 9) = "Traslados Salida"
    Cells(1, 10) = "Saldo F|fffd|sico"
    Cells(1, 11) = "Saldo Estimado"


'''''''''''''''''''''''''''''''''''''HOJA 3 AGREGAR INFORMACI|fffd|N'''''''''''''''''''''''''''''''''''''''''''''''
'NUEVA HOJA
Sheets.Add After:=ActiveSheet
ActiveSheet.Name = "SALDOS SUCURSALES"
   
'AGREGAR SALDO POR SUCURSAL
hoja2secc2 = 2
For i = 1 To UBound(saldoSuc)
    
    If saldoSuc(i, 6) <> "" And saldoSuc(i, 5) <> "" Then
    'FECHA
    Cells(hoja2secc2, 1) = saldoSuc(i, 1)
    'PLANEADOR
    Cells(hoja2secc2, 2) = saldoSuc(i, 6)
    'PLAZA
    Cells(hoja2secc2, 3) = saldoSuc(i, 5)
    'ID SUCURSAL
    Cells(hoja2secc2, 4) = saldoSuc(i, 2)
    'NOMBRE SUCURSAL
    Cells(hoja2secc2, 5) = saldoSuc(i, 3)
    'SALDO
    Cells(hoja2secc2, 6) = saldoSuc(i, 4)
    hoja2secc2 = hoja2secc2 + 1
    End If
    
    



Next i

'encabezados
    Cells(1, 1) = "Fecha"
    Cells(1, 2) = "Planeador"
    Cells(1, 3) = "Plaza"
    Cells(1, 4) = "Id Sucursal"
    Cells(1, 5) = "Nombre Sucursal"
    Cells(1, 6) = "Saldo"

    
    
'''''''''''''''''''''''''''''''''''''HOJA 4 AGREGAR INFORMACI|fffd|N'''''''''''''''''''''''''''''''''''''''''''''''
'NUEVA HOJA
Sheets.Add After:=ActiveSheet
ActiveSheet.Name = "ESTATUS SALDOS PLAZAS"
     
''SALDO ESTIMADO Y REQUERIMIENTOS POR PLAZA A 3 Y 4 D|fffd|AS''
secc2 = 2
For i = 1 To UBound(TresDias)

    Cells(secc2 + i, 1) = TresDias(i, 1)
    'PLANEADOR
    
    For j = 1 To UBound(Planeadores)
        
        If Planeadores(j, 1) = TresDias(i, 2) Then
        
            Cells(secc2 + i, 2) = Planeadores(j, 2)
            Exit For
            
        End If
        
    Next j
    
    'SALDO DE CAJAS POR PLAZA
    For k = 1 To UBound(consultaHistorico)
    
        If consultaHistorico(k, 3) = TresDias(i, 1) And consultaHistorico(k, 2) = labelTotales Then
        
            saldoSumaPlaza = saldoSumaPlaza + consultaHistorico(k, 12)
        
        End If
        
        
    Next k
    
    Cells(secc2 + i, 3) = saldoSumaPlaza
    
    saldoSumaPlaza = 0
    
    '3 D|fffd|AS
    Cells(secc2 + i, 4) = TresDias(i, 4)
    '4 D|fffd|AS
    Cells(secc2 + i, 5) = CuatroDias(i, 4)
    'Compra 3 d|fffd|as
    Cells(secc2 + i, 6).FormulaR1C1 = "=RC[-2]-RC[-3]"
    'Compra 4 d|fffd|as
    Cells(secc2 + i, 7).FormulaR1C1 = "=RC[-2]-RC[-4]"
    'ESTATUS
    Cells(secc2 + i, 8).FormulaR1C1 = _
        "=IF(RC[-1]>0,""CAJA INCOMPLETA"",IF(RC[-1]<0,""CAJA EXCEDIDA"",IF(AND(RC[-1]=0,RC[-3]>0),""CAJA COMPLETA"",IF(AND(RC[-1]=0,RC[-3]=0),""SIN REQUERIMIENTO"",""'-SIN ESTATUS-""))))"
    'VARIACI|fffd|N
    Cells(secc2 + i, 9).FormulaR1C1 = _
        "=IF(AND(RC[-2]<>0,OR(RC[-4]=0,RC[-4]="""")),1,IF(RC[-2]>0,RC[-2]/RC[-4]*-1,IF(RC[-2]<0,ABS(RC[-2]/RC[-4]),IF(AND(RC[-2]=0,RC[-4]>0),0,IF(AND(RC[-2]=0,RC[-4]=0),0)))))"

    
Next i
     
     
    secc2 = 2
     
    'Cells(secc2 - 2, 1) = "SALDOS Y REQUERIMIENTOS DE EFECTIVO POR D|fffd|A"
    
    Cells(secc2 - 1, 1) = "Plaza"
    Cells(secc2 - 1, 2) = "Planeador"
    Cells(secc2 - 1, 3) = "Saldo Estimado"
    Cells(secc2 - 1, 4) = "Requerimiento 3 d|fffd|as"
    Cells(secc2 - 1, 5) = "Requerimiento 4 d|fffd|as"
    Cells(secc2 - 1, 6) = "Compra para 3 d|fffd|as"
    Cells(secc2 - 1, 7) = "Compra para 4 d|fffd|as"
    Cells(secc2 - 1, 8) = "ESTATUS"
    Cells(secc2 - 1, 9) = "Variaci|fffd|n"
    
    
    
'''''''''''''''''''''''''''''''''''''HOJA 5 AGREGAR INFORMACI|fffd|N '''''''''''''''''''''''''''''''''''''''''''''''
'NUEVA HOJA
Sheets.Add After:=ActiveSheet
ActiveSheet.Name = "DETALLE DEM"
rowContadorDem = 2

For i = 1 To UBound(saldoDem)
    'Estatus Acreditaci|fffd|n 1
    Cells(rowContadorDem, 1) = saldoDem(i, 1)
    'Etv Origen 2
    Cells(rowContadorDem, 2) = saldoDem(i, 2)
    'Plaza Origen 3
    Cells(rowContadorDem, 3) = saldoDem(i, 3)
    'Id Sucursal 4
    Cells(rowContadorDem, 4) = saldoDem(i, 4)
    'Sucursal 5
    Cells(rowContadorDem, 5) = saldoDem(i, 5)
    'ETV Servicio 6
    Cells(rowContadorDem, 6) = saldoDem(i, 6)
    'planeador 7
    Cells(rowContadorDem, 7) = saldoDem(i, 7)
    'Fecha Servicio 8
    Cells(rowContadorDem, 8) = saldoDem(i, 8)
    'TipoServicio 9
    Cells(rowContadorDem, 9) = saldoDem(i, 9)
    'Destino Concentracion 10
    Cells(rowContadorDem, 10) = saldoDem(i, 10)
    'Importe Servicio 11
    Cells(rowContadorDem, 11) = saldoDem(i, 11)
    'Importe Acreditado 12
    Cells(rowContadorDem, 12) = saldoDem(i, 12)
    'saldo dem 13
    Cells(rowContadorDem, 13) = saldoDem(i, 13)
       
       rowContadorDem = rowContadorDem + 1
       
Next i
        
'encabezados
    Cells(1, 1) = "Estatus Acreditaci|fffd|n"
    Cells(1, 2) = "ETV Origen"
    Cells(1, 3) = "Plaza Origen"
    Cells(1, 4) = "Id Sucursal"
    Cells(1, 5) = "Nombre Sucursal"
    Cells(1, 6) = "ETV Servicio"
    Cells(1, 7) = "Planeador"
    Cells(1, 8) = "Fecha Servicio"
    Cells(1, 9) = "Tipo Servicio"
    Cells(1, 10) = "Destino Concentraci|fffd|n"
    Cells(1, 11) = "Importe Concentrado"
    Cells(1, 12) = "Importe Acreditado"
    Cells(1, 13) = "Saldo DEM"
    
  
'''''''''''''''''''''''''''''''''''''HOJA 6 AGREGAR INFORMACI|fffd|N '''''''''''''''''''''''''''''''''''''''''''''''
'NUEVA HOJA
Sheets.Add After:=ActiveSheet
ActiveSheet.Name = "MODELO CAJAS"
rowContadorDem = 2

''SALDO ESTIMADO Y REQUERIMIENTOS POR PLAZA A 3 Y 4 D|fffd|AS''
secc2 = 2
For i = 1 To UBound(TresDias)

    Cells(secc2 + i, 1) = TresDias(i, 1)
    'PLANEADOR
    
    For j = 1 To UBound(Planeadores)
        
        If Planeadores(j, 1) = TresDias(i, 2) Then
        
            Cells(secc2 + i, 2) = Planeadores(j, 2)
            Exit For
            
        End If
        
    Next j
    
    'SALDO DE CAJAS POR PLAZA
    For k = 1 To UBound(pronosticoSucursales)
    
        If pronosticoSucursales(k, 3) = TresDias(i, 1) Then
            'LUNES
            saldoSumaPlazaLun = saldoSumaPlazaLun + pronosticoSucursales(k, 13)
            'MARTES
            saldoSumaPlazaMar = saldoSumaPlazaMar + pronosticoSucursales(k, 14)
            'MI|fffd|RCOLES
            saldoSumaPlazaMie = saldoSumaPlazaMie + pronosticoSucursales(k, 15)
            'JUEVES
            saldoSumaPlazaJue = saldoSumaPlazaJue + pronosticoSucursales(k, 16)
            'VIERNES
            saldoSumaPlazaVie = saldoSumaPlazaVie + pronosticoSucursales(k, 17)
            'S|fffd|BADO
            saldoSumaPlazaSab = saldoSumaPlazaSab + pronosticoSucursales(k, 18)
            'DOMINGO
            saldoSumaPlazaDom = saldoSumaPlazaDom + pronosticoSucursales(k, 19)
            'PR|fffd|XIMO LUNES
            saldoSumaPlazaProxLun = saldoSumaPlazaProxLun + pronosticoSucursales(k, 20)
        End If
        
        
    Next k
    
    Cells(secc2 + i, 4) = saldoSumaPlazaLun
    Cells(secc2 + i, 5) = saldoSumaPlazaMar
    Cells(secc2 + i, 6) = saldoSumaPlazaMie
    Cells(secc2 + i, 7) = saldoSumaPlazaJue
    Cells(secc2 + i, 8) = saldoSumaPlazaVie
    Cells(secc2 + i, 9) = saldoSumaPlazaSab
    Cells(secc2 + i, 10) = saldoSumaPlazaDom
    Cells(secc2 + i, 11) = saldoSumaPlazaProxLun
 
    
    saldoSumaPlazaLun = 0
    saldoSumaPlazaMar = 0
    saldoSumaPlazaMie = 0
    saldoSumaPlazaJue = 0
    saldoSumaPlazaVie = 0
    saldoSumaPlazaSab = 0
    saldoSumaPlazaDom = 0
    saldoSumaPlazaProxLun = 0
    
    'Total Lunes a Viernes
    Cells(secc2 + i, 3).FormulaR1C1 = "=SUM(RC[1]:RC[7])"
        
Next i
     
     
    secc2 = 2
     
    'Cells(secc2 - 2, 1) = "SALDOS Y REQUERIMIENTOS DE EFECTIVO POR D|fffd|A"
    
    Cells(secc2 - 1, 1) = "Plaza"
    Cells(secc2 - 1, 2) = "Planeador"
    Cells(secc2 - 1, 3) = "Total Lun - Vie"
    Cells(secc2 - 1, 4) = "Lunes"
    Cells(secc2 - 1, 5) = "Martes"
    Cells(secc2 - 1, 6) = "Mi|fffd|rcoles"
    Cells(secc2 - 1, 7) = "Jueves"
    Cells(secc2 - 1, 8) = "Viernes"
    Cells(secc2 - 1, 9) = "S|fffd|bado"
    Cells(secc2 - 1, 10) = "Domingo"
    Cells(secc2 - 1, 11) = "Pr|fffd|ximo Lunes"
    
''''''''''''''''''''''''''''''''''''''FORMATOS A HOJAS''''''''''''''''''''''''''''''''''''''''''''''''''
Sheets(1).Select
Call CV0_4FormatoReporteHoja1

Sheets(2).Select
Call CV0_4FormatoReporteHoja2

Sheets(3).Select
Call CV0_4FormatoReporteHoja3

Sheets(4).Select
Call CV0_4FormatoReporteHoja4

Sheets(5).Select
Call CV0_4FormatoReporteHoja5

Sheets(6).Select
Call CV0_4FormatoReporteHoja6

Sheets(1).Select
Sheets(1).Select

Call DeleteQueryImportaciones
  
    
End Sub


Sub CV0_4FormatoReporteHoja1()

'Call VariablesGlobales
Dim titlRow0, subtitl1Row, subtitl2Row, subtitl3Row, subtitl4Row, subtitl5Row As Integer
Dim coltitl0 As Integer
Dim colsecc1, colsecc2, colsecc3 As Integer
Dim colFin As Long
Dim longsecc1, longsecc2, longsecc3, longsecc4 As Long
Dim secc1HL1, secc1HL2, secc1HL3, secc1HL4 As Integer

titlRow0 = 1
subtitl1Row = 3
subtitl2Row = 22
'subtitl3Row = 31

colsecc1 = 6
colsecc2 = 6
'colsecc3 = 9

longsecc1 = 20
longsecc2 = 28

colFin = Range("A1000000").End(xlUp).Row

secc1HL1 = 11
secc1HL2 = 13
secc1HL3 = 15

'ANCHO DE COLUMNAS
    Columns("A:A").ColumnWidth = 46
    Columns("B:B").ColumnWidth = 37.29
    Range("C:C,D:D,E:E,F:F,G:G,H:H,I:I").Select
    Selection.ColumnWidth = 24
    
'T|fffd|TULO
    Range(Cells(titlRow0, 1), Cells(titlRow0, colsecc2)).Select
    With Selection.Font
        .Name = "Verdana"
        .size = 14
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 14
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
        .Color = -9043739
        .TintAndShade = 0
        .Bold = True
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    
'SUBTITULO SECCION 1
    Range(Cells(subtitl1Row, 1), Cells(subtitl1Row, colsecc1)).Select
    With Selection.Font
        .Name = "Verdana"
        .size = 12
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .Bold = True
        .ThemeFont = xlThemeFontNone
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
   
 'SUBTITULO SECCION 2
    Range(Cells(subtitl2Row, 1), Cells(subtitl2Row, colsecc2)).Select
    With Selection.Font
        .Name = "Verdana"
        .size = 12
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
        .Bold = True
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
  
'ENCABEZADOS TABLAS secci|fffd|n 1
    Range(Cells(subtitl1Row + 1, 1), Cells(subtitl1Row + 1, colsecc1)).Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Font.Bold = True
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With


'ENCABEZADOS TABLAS secci|fffd|n 2
    Range(Cells(subtitl2Row + 1, 1), Cells(subtitl2Row + 1, colsecc2)).Select
   With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Font.Bold = True
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
   
   
 

'CUERPO TABLA secci|fffd|n 1
    Range(Cells(subtitl1Row + 2, 1), Cells(longsecc1, colsecc1)).Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
        .ThemeFont = xlThemeFontNone
    End With
    Selection.Style = "Currency"
    
'CUERPO TABLA secci|fffd|n 2
    Range(Cells(subtitl2Row + 2, 1), Cells(longsecc2, colsecc2)).Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
        .ThemeFont = xlThemeFontNone
    End With
    Selection.Style = "Currency"
    
    
    
'HIGHLIGHTS
    Range(Cells(secc1HL1, 1), Cells(secc1HL1, colsecc1)).Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 49407
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With

    
    Range(Cells(secc1HL2, 1), Cells(secc1HL2, colsecc1)).Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 49407
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With

    
    Range(Cells(secc1HL3, 1), Cells(secc1HL3, colsecc1)).Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 49407
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With

    
'ajustar primera l|fffd|nea
    Range("A1").Activate
    Range("A1").Select

 Rows("1:1").RowHeight = 36.75
 
End Sub


Sub CV0_4FormatoReporteHoja2()

Dim titlRow0, subtitl1Row, subtitl2Row, subtitl3Row, subtitl4Row, subtitl5Row As Integer
Dim coltitl0 As Integer
Dim colsecc1, colsecc2, colsecc3 As Integer
Dim colFin As Long
Dim longsecc1, longsecc2, longsecc3, longsecc4 As Long
Dim secc1HL1, secc1HL2, secc1HL3, secc1HL4 As Integer

titlRow0 = 1
'subtitl1Row = 3
'subtitl2Row = 22
'subtitl3Row = 31

colsecc1 = 11
'colsecc2 = 6
'colsecc3 = 9

longsecc1 = 20
'longsecc2 = 28

colFin = Range("A1000000").End(xlUp).Row


'ENCABEZADOS TABLAS secci|fffd|n 1
    Range(Cells(titlRow0, 1), Cells(titlRow0, colsecc1)).Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Font.Bold = True
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    
    
    
 'CUERPO TABLA secci|fffd|n 3
    Range(Cells(titlRow0 + 1, 1), Cells(colFin, colsecc1)).Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
        .ThemeFont = xlThemeFontNone
    End With
    Selection.Style = "Currency"
    
    Selection.EntireColumn.AutoFit
    
    
End Sub


Sub CV0_4FormatoReporteHoja3()

Dim titlRow0, subtitl1Row, subtitl2Row, subtitl3Row, subtitl4Row, subtitl5Row As Integer
Dim coltitl0 As Integer
Dim colsecc1, colsecc2, colsecc3 As Integer
Dim colFin As Long
Dim longsecc1, longsecc2, longsecc3, longsecc4 As Long
Dim secc1HL1, secc1HL2, secc1HL3, secc1HL4 As Integer

titlRow0 = 1
'subtitl1Row = 3
'subtitl2Row = 22
'subtitl3Row = 31

colsecc1 = 6
'colsecc2 = 6
'colsecc3 = 9

longsecc1 = 20
'longsecc2 = 28

colFin = Range("A1000000").End(xlUp).Row


'ENCABEZADOS TABLAS secci|fffd|n 1
    Range(Cells(titlRow0, 1), Cells(titlRow0, colsecc1)).Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Font.Bold = True
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    
    
    
 'CUERPO TABLA secci|fffd|n 3
    Range(Cells(titlRow0 + 1, 1), Cells(colFin, colsecc1)).Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
        .ThemeFont = xlThemeFontNone
    End With
    Selection.EntireColumn.AutoFit
    
    'formato moneda
    Range(Cells(titlRow0 + 1, colsecc1), Cells(colFin, colsecc1)).Select
    Selection.Style = "Currency"
    'formato fecha
    Columns("A:A").Select
    Selection.NumberFormat = "m/d/yyyy"
    
    
    
    
End Sub



Sub CV0_4FormatoReporteHoja4()

'Call VariablesGlobales
Dim coltitl0, colsecc3 As Integer
Dim colFin As Long


titlRow0 = 1
subtitl3Row = 1
colsecc3 = 9

colFin = Range("A1000000").End(xlUp).Row



'ANCHO DE COLUMNAS
    Columns("A:A").ColumnWidth = 46
    Columns("B:B").ColumnWidth = 37.29
    Range("C:C,D:D,E:E,F:F,G:G,H:H,I:I").Select
    Selection.ColumnWidth = 24
    

   
 'ENCABEZADOS TABLAS secci|fffd|n 3
    Range(Cells(subtitl3Row, 1), Cells(subtitl3Row, colsecc3)).Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Font.Bold = True
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With



 'CUERPO TABLA secci|fffd|n 3
    Range(Cells(subtitl3Row + 1, 1), Cells(colFin, colsecc3)).Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
        .ThemeFont = xlThemeFontNone
    End With
    Selection.Style = "Currency"
    
    Range(Cells(subtitl3Row + 2, colsecc3), Cells(colFin, colsecc3)).Select
    Selection.NumberFormat = "0.00%"
    
 

'ORDENAR
    ActiveSheet.Sort.SortFields.Clear
    ActiveSheet.Sort.SortFields.Add Key:= _
        Range(Cells(subtitl3Row + 1, colsecc3), Cells(colFin, colsecc3)), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption _
        :=xlSortNormal
    With ActiveSheet.Sort
        .SetRange Range(Cells(1, 1), Cells(colFin, colsecc3))
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    
End Sub


Sub CV0_4FormatoReporteHoja5()

'Call VariablesGlobales
Dim coltitl0, colsecc3 As Integer
Dim colFin As Long


titlRow0 = 1
subtitl3Row = 1
colsecc3 = 13

colFin = Range("A1000000").End(xlUp).Row



'ANCHO DE COLUMNAS
    Columns("A:A").ColumnWidth = 22.29
    Columns("B:B").ColumnWidth = 19
    Columns("C:C").ColumnWidth = 24.29
    Columns("D:D").ColumnWidth = 12.29
    Columns("E:E").ColumnWidth = 33
    Columns("F:F").ColumnWidth = 19
    Columns("G:G").ColumnWidth = 37
    Columns("H:H").ColumnWidth = 16
    Columns("I:I").ColumnWidth = 31
    Columns("J:J").ColumnWidth = 24.86
    Range("K:K,L:L,M:M").Select
    Selection.ColumnWidth = 26
    

   
 'ENCABEZADOS TABLAS secci|fffd|n 3
    Range(Cells(subtitl3Row, 1), Cells(subtitl3Row, colsecc3)).Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Font.Bold = True
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With



 'CUERPO TABLA secci|fffd|n 3
    Range(Cells(subtitl3Row + 1, 1), Cells(colFin, colsecc3)).Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
        .ThemeFont = xlThemeFontNone
    End With
    
    
    Range(Cells(subtitl3Row + 1, colsecc3 - 2), Cells(colFin, colsecc3)).Select
    Selection.Style = "Currency"
    
    
    Range(Cells(subtitl3Row + 1, colsecc3 - 5), Cells(colFin, colsecc3 - 5)).Select
        Selection.NumberFormat = "m/d/yyyy"
        
        
    Range("A1").Select
    ActiveSheet.Sort.SortFields.Clear
    'COLUMNA DE SALDO DEM
    ActiveSheet.Sort.SortFields.Add2 Key:=Range( _
        Cells(subtitl3Row + 1, colsecc3), Cells(colFin, colsecc3)), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
        xlSortNormal
    'COLUMNA DE FECHA
    ActiveSheet.Sort.SortFields.Add2 Key:=Range( _
        Cells(subtitl3Row + 1, colsecc3 - 5), Cells(colFin, colsecc3 - 5)), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
        
    'TODA EL RANGO DE DATOS
    With ActiveSheet.Sort
        .SetRange Range(Cells(titlRow0, subtitl3Row), Cells(colFin, colsecc3))
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With

'ORDENAR
'    ActiveSheet.Sort.SortFields.Clear
'    ActiveSheet.Sort.SortFields.Add2 Key:= _
'        Range(Cells(subtitl3Row + 1, colsecc3), Cells(colFin, colsecc3)), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption _
'        :=xlSortNormal
'    With ActiveSheet.Sort
'        .SetRange Range(Cells(subtitl3Row, colsecc3), Cells(colFin, colsecc3))
'        .Header = xlYes
'        .MatchCase = False
'        .Orientation = xlTopToBottom
'        .SortMethod = xlPinYin
'        .Apply
'    End With
'
    
End Sub


Sub CV0_4FormatoReporteHoja6()

'Call VariablesGlobales
Dim coltitl0, colsecc3 As Integer
Dim colFin As Long


titlRow0 = 1
subtitl3Row = 1
colsecc3 = 11

colFin = Range("A1000000").End(xlUp).Row



'ANCHO DE COLUMNAS
    Columns("A:A").ColumnWidth = 30
    Columns("B:B").ColumnWidth = 37.29
    Range("C:K").Select
    Selection.ColumnWidth = 24
    

   
 'ENCABEZADOS TABLAS secci|fffd|n 3
    Range(Cells(subtitl3Row, 1), Cells(subtitl3Row, colsecc3)).Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Font.Bold = True
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With



 'CUERPO TABLA secci|fffd|n 3
    Range(Cells(subtitl3Row + 1, 1), Cells(colFin, colsecc3)).Select
    With Selection.Font
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0.249977111117893
        .ThemeFont = xlThemeFontNone
    End With
    Selection.Style = "Currency"
    
'    Range(Cells(subtitl3Row + 2, colsecc3), Cells(colFin, colsecc3)).Select
'    Selection.NumberFormat = "0.00%"
'
 

'ORDENAR
    ActiveSheet.Sort.SortFields.Clear
    ActiveSheet.Sort.SortFields.Add Key:= _
        Range(Cells(subtitl3Row + 1, 3), Cells(colFin, 3)), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
        xlSortNormal
    With ActiveSheet.Sort
        .SetRange Range(Cells(1, 1), Cells(colFin, colsecc3))
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    
End Sub



Attribute VB_Name = "Combo_ServicioCorreos"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Private Sub ComboBox1_ServiciosCorreos_Change()



End Sub
Attribute VB_Name = "DA_COMPLEMENTOS"
Sub DA0_CreaCarpeta(ruta As String, nomCarpeta As String)

 'Verificar si la carpeta existe.
  If Dir(ruta & nomCarpeta, vbDirectory + vbHidden) = "" Then
   'Comprueba que la carpeta no exista para crear el directorio.
    'If Dir(Ruta & NomCarpeta, vbDirectory + vbHidden) = "" Then
    MkDir ruta & nomCarpeta
    Else

  End If




End Sub

Sub DA0_1CrearCarpetaDiaValidacion()
'carpeta papeles de trabajo

Call VariablesGlobales

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If

UnidadRuta = UnidadAsignada & RutaPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaci|fffd|n Log|fffd|stica Monetaria"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaci|fffd|n"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Sub


Sub DA0_2CrearCarpetaMesValidacion()
'carpeta papeles de trabajo

Call VariablesGlobales

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & Left(RutaPlaneaciones, Len(RutaPlaneaciones) - 1)
fechaCarpeta = MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaci|fffd|n Log|fffd|stica Monetaria"

'MsgBox "UnidadRuta: " & UnidadRuta & Chr(10) & "fechaCarpeta: " & FechaCarpeta

'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Sub


Sub DA0_3CrearCarpetaMesTxtPlaneaciones()
'carpeta papeles de trabajo

Call VariablesGlobales

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & Left(RutaTxtPlaneaciones, Len(RutaTxtPlaneaciones) - 1)
fechaCarpeta = MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Sub

Sub DA0_4CrearCarpetaDiaTxtPlaneaciones()
'carpeta papeles de trabajo

Call VariablesGlobales

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Sub



Sub DA0_5CrearCarpetaMesTxtTraspasos()
'carpeta papeles de trabajo

Call VariablesGlobales

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & Left(RutaTxtTraspasos, Len(RutaTxtTraspasos) - 1)
fechaCarpeta = MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Sub


Function CARPETA_MES_TRASLADOS(FechaTraslado As Date)
'carpeta papeles de trabajo

Call VariablesGlobales

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = FechaTraslado
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & Left(RutaTxtTraspasos, Len(RutaTxtTraspasos) - 1)
fechaCarpeta = MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Function

Sub DA0_6CrearCarpetaDiaTxtTraspasos()
'carpeta papeles de trabajo

Call VariablesGlobales

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Sub



Function CARPETA_DIA_TRASLADOS(FechaTraslados As Date)
'carpeta papeles de trabajo

Call VariablesGlobales

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = FechaTraslados
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''



Sub DA0_7CrearCarpetaMesTxtCompras()
'carpeta papeles de trabajo

Call VariablesGlobales

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & Left(RutaTxtCompras, Len(RutaTxtCompras) - 1)
fechaCarpeta = MonthLabel & " " & NombreMes & " " & YearLabel & " Compras Diarias Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Sub


Function CARPETA_MES_COMPRAS(FechaCompra As Date)
'carpeta papeles de trabajo

Call VariablesGlobales

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = FechaCompra
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & Left(RutaTxtCompras, Len(RutaTxtCompras) - 1)
fechaCarpeta = MonthLabel & " " & NombreMes & " " & YearLabel & " Compras Diarias Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Function




Sub DA0_8CrearCarpetaDiaTxtCompras()
'carpeta papeles de trabajo

Call VariablesGlobales

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtCompras & MonthLabel & " " & NombreMes & " " & YearLabel & " Compras Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Compras Diarias Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Sub




Sub DA0_9CrearCarpetaDialocal()
'carpeta papeles de trabajo en documentos locales

Call VariablesGlobales

'fecha
Dim fechaHoy As Date
Dim fechaHoyLabel, diaLabel, mesLabel, anioLabel, mesNombre As String
Dim diaVal, mesVal, anioVal As Integer
Dim saldosLabel1, saldosLabel2, saldosLabel3 As String
Dim saldos1, saldos2, saldos3 As String

fechaHoy = Date

saldosLabel1 = " Saldos Sucursales"

diaVal = Day(fechaHoy)
mesVal = Month(fechaHoy)
anioVal = Year(fechaHoy)

If diaVal < 10 Then
    diaLabel = "0" & diaVal
Else
    diaLabel = diaVal

End If

If mesVal < 10 Then
    mesLabel = "0" & mesVal
Else
    mesLabel = mesVal

End If

Select Case mesVal
Case 1
mesNombre = "Enero"
Case 2
mesNombre = "Febrero"
Case 3
mesNombre = "Marzo"
Case 4
mesNombre = "Abril"
Case 5
mesNombre = "Mayo"
Case 6
mesNombre = "Junio"
Case 7
mesNombre = "Julio"
Case 8
mesNombre = "Agosto"
Case 9
mesNombre = "Septiembre"
Case 10
mesNombre = "Octubre"
Case 11
mesNombre = "Noviembre"
Case 12
mesNombre = "Diciembre"
End Select



'SALDOS DIARIOS
saldos1 = mesLabel & " " & mesNombre & " " & anioVal & saldosLabel1

'DA0_CreaCarpeta "D:\Users\brincon\Documents\", "Proyecto Logistica Monetaria"

'If Puntero = "LOCAL" Then
''''''''''''''''''''''1 NIVEL''''''''''''''''''''''''''''''''''''
    'Proyecto Logistica Monetaria
    DA0_CreaCarpeta CStr(RutaLocal), NombreCarpetaCompartida
     'Directorios y Cat|fffd|logos
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\", "Directorios y Cat|fffd|logos"
     'Reporte_Desembolsos
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\", "Reporte_Desembolsos"
     'Reporte_Remesas
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\", "Reporte_Remesas"
     'Saldos
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\", "Saldos"
     'Planeaciones
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\", "Planeaciones"
     'Pronostico
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\", "Pronostico"
    'Compras
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\", "Compras"
    'DEM
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\", "DEM"
    
''''''''''''''''''''''2 NIVEL''''''''''''''''''''''''''''''''''''
    'Planeaciones - Cajas
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Planeaciones\", "Cajas"
    'Saldos - Diarios
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Saldos\", "Diarios"
'''''---> ESTA ES LA QUE SE DEBE DE CAMBIAR EL NOMBRE A "Monitoreo" - el cambio tambien en variables globales
    'Saldos
    'DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Saldos\", CStr(AnioDefault)
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Saldos\", "Monitoreo"
    'Pronostico
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Pronostico\", "Historico Modelo Dotaciones"
    'Pronostico
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Pronostico\", "Modelos Semanales"
    
''''''''''''''''''''''3 NIVEL''''''''''''''''''''''''''''''''''''
    'Compras TXT
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Planeaciones\Cajas\", "Compras TXT"
    'Planeaciones TXT
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Planeaciones\Cajas\", "Planeaciones TXT"
    'Repositorio Archivos Diarios
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Planeaciones\Cajas\", "Repositorio Archivos Diarios"
    'Saldos Cajas TXT
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Planeaciones\Cajas\", "Saldos Cajas TXT"
    'Servicios ETV TXT
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Planeaciones\Cajas\", "Servicios ETV TXT"
    'Traspasos TXT
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Planeaciones\Cajas\", "Traspasos TXT"
    'Traspasos TXT
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Planeaciones\Cajas\", "Traspasos TXT"
    'a|fffd|o
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Planeaciones\Cajas\", CStr(AnioDefault)
    'Saldos
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Saldos\" & "Diarios\", CStr(saldos1)

''''''-----> cambio nombre de carpeta
    'Saldos
    'DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Saldos\" & CStr(AnioDefault) & "\", "Repositorio Reportes Monitoreo"
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Saldos\" & "Monitoreo" & "\", "Repositorio Reportes Monitoreo"
''''''-----> cambio nombre de carpeta
    'Saldos
    'DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Saldos\" & CStr(AnioDefault) & "\", "Hist|fffd|rico comprimido " & CStr(AnioDefault)
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Saldos\" & "Monitoreo" & "\", "Hist|fffd|rico comprimido " & CStr(AnioDefault)
    
    'Pronostico
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Pronostico\", "Historico Modelo Dotaciones\" & "Sem " & DatePart("ww", fechaOperacion, vbMonday, vbFirstFullWeek)
    'Pronostico
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Pronostico\", "Modelos Semanales\" & "Sem " & DatePart("ww", fechaOperacion, vbMonday, vbFirstFullWeek)
    
''''''''''''''''''''''4 NIVEL''''''''''''''''''''''''''''''''''''
    'Repositorio Archivos Diarios
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Planeaciones\Cajas\Repositorio Archivos Diarios\", CStr(UsuarioWindows)
    'Pronostico
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Pronostico\", "Modelos Semanales\" & "Sem " & DatePart("ww", fechaOperacion, vbMonday, vbFirstFullWeek) & "\Actualizaciones Planeadores"
    'Pronostico
    DA0_CreaCarpeta CStr(RutaLocal) & NombreCarpetaCompartida & "\Pronostico\", "Modelos Semanales\" & "Sem " & DatePart("ww", fechaOperacion, vbMonday, vbFirstFullWeek) & "\Bit|fffd|cora Saldos y Dotaciones"
    
'End If

End Sub



Sub DA0_9CrearCarpetaDiaGeneral()
'carpeta papeles de trabajo en documentos locales

Call VariablesGlobales

'fecha
Dim fechaHoy As Date
Dim fechaHoyLabel, diaLabel, mesLabel, anioLabel, mesNombre As String
Dim diaVal, mesVal, anioVal As Integer
Dim saldosLabel1, saldosLabel2, saldosLabel3 As String
Dim saldos1, saldos2, saldos3 As String

fechaHoy = Date

saldosLabel1 = " Saldos Sucursales"

diaVal = Day(fechaHoy)
mesVal = Month(fechaHoy)
anioVal = Year(fechaHoy)

If diaVal < 10 Then
    diaLabel = "0" & diaVal
Else
    diaLabel = diaVal

End If

If mesVal < 10 Then
    mesLabel = "0" & mesVal
Else
    mesLabel = mesVal

End If

Select Case mesVal
Case 1
mesNombre = "Enero"
Case 2
mesNombre = "Febrero"
Case 3
mesNombre = "Marzo"
Case 4
mesNombre = "Abril"
Case 5
mesNombre = "Mayo"
Case 6
mesNombre = "Junio"
Case 7
mesNombre = "Julio"
Case 8
mesNombre = "Agosto"
Case 9
mesNombre = "Septiembre"
Case 10
mesNombre = "Octubre"
Case 11
mesNombre = "Noviembre"
Case 12
mesNombre = "Diciembre"
End Select



'SALDOS DIARIOS
saldos1 = mesLabel & " " & mesNombre & " " & anioVal & saldosLabel1

'DA0_CreaCarpeta "D:\Users\brincon\Documents\", "Proyecto Logistica Monetaria"

'If Puntero = "LOCAL" Then
''''''''''''''''''''''1 NIVEL''''''''''''''''''''''''''''''''''''

     'Directorios y Cat|fffd|logos
    DA0_CreaCarpeta UnidadAsignada & "\", "Directorios y Cat|fffd|logos"
     'Reporte_Desembolsos
    DA0_CreaCarpeta UnidadAsignada & "\", "Reporte_Desembolsos"
     'Reporte_Remesas
    DA0_CreaCarpeta UnidadAsignada & "\", "Reporte_Remesas"
     'Saldos
    DA0_CreaCarpeta UnidadAsignada & "\", "Saldos"
     'Planeaciones
    DA0_CreaCarpeta UnidadAsignada & "\", "Planeaciones"
     'Pronostico
    DA0_CreaCarpeta UnidadAsignada & "\", "Pronostico"
    'Compras
    DA0_CreaCarpeta UnidadAsignada & "\", "Compras"
    'DEM
    DA0_CreaCarpeta UnidadAsignada & "\", "DEM"
    
''''''''''''''''''''''2 NIVEL''''''''''''''''''''''''''''''''''''
    'Planeaciones - Cajas
    DA0_CreaCarpeta UnidadAsignada & "\Planeaciones\", "Cajas"
    'Saldos - Diarios
    DA0_CreaCarpeta UnidadAsignada & "\Saldos\", "Diarios"
'''''---> ESTA ES LA QUE SE DEBE DE CAMBIAR EL NOMBRE A "Monitoreo" - el cambio tambien en variables globales
    'Saldos
    'DA0_CreaCarpeta UnidadAsignada & "\Saldos\", CStr(AnioDefault)
    DA0_CreaCarpeta UnidadAsignada & "\Saldos\", "Monitoreo"
    'Pronostico
    DA0_CreaCarpeta UnidadAsignada & "\Pronostico\", "Historico Modelo Dotaciones"
    'Pronostico
    DA0_CreaCarpeta UnidadAsignada & "\Pronostico\", "Modelos Semanales"
    
''''''''''''''''''''''3 NIVEL''''''''''''''''''''''''''''''''''''
    'Compras TXT
    DA0_CreaCarpeta UnidadAsignada & "\Planeaciones\Cajas\", "Compras TXT"
    'Planeaciones TXT
    DA0_CreaCarpeta UnidadAsignada & "\Planeaciones\Cajas\", "Planeaciones TXT"
    'Repositorio Archivos Diarios
    DA0_CreaCarpeta UnidadAsignada & "\Planeaciones\Cajas\", "Repositorio Archivos Diarios"
    'Saldos Cajas TXT
    DA0_CreaCarpeta UnidadAsignada & "\Planeaciones\Cajas\", "Saldos Cajas TXT"
    'Servicios ETV TXT
    DA0_CreaCarpeta UnidadAsignada & "\Planeaciones\Cajas\", "Servicios ETV TXT"
    'Traspasos TXT
    DA0_CreaCarpeta UnidadAsignada & "\Planeaciones\Cajas\", "Traspasos TXT"
    'Traspasos TXT
    DA0_CreaCarpeta UnidadAsignada & "\Planeaciones\Cajas\", "Traspasos TXT"
    'a|fffd|o
    DA0_CreaCarpeta UnidadAsignada & "\Planeaciones\Cajas\", CStr(AnioDefault)
    'Saldos
    DA0_CreaCarpeta UnidadAsignada & "\Saldos\" & "Diarios\", CStr(saldos1)

''''''-----> cambio nombre de carpeta
    'Saldos
    'DA0_CreaCarpeta UnidadAsignada & "\Saldos\" & CStr(AnioDefault) & "\", "Repositorio Reportes Monitoreo"
    DA0_CreaCarpeta UnidadAsignada & "\Saldos\" & "Monitoreo" & "\", "Repositorio Reportes Monitoreo"
''''''-----> cambio nombre de carpeta
    'Saldos
    'DA0_CreaCarpeta UnidadAsignada & "\Saldos\" & CStr(AnioDefault) & "\", "Hist|fffd|rico comprimido " & CStr(AnioDefault)
    DA0_CreaCarpeta UnidadAsignada & "\Saldos\" & "Monitoreo" & "\", "Hist|fffd|rico comprimido " & CStr(AnioDefault)
    
    'Pronostico
    DA0_CreaCarpeta UnidadAsignada & "\Pronostico\", "Historico Modelo Dotaciones\" & "Sem " & DatePart("ww", fechaOperacion, vbMonday, vbFirstFullWeek)
    'Pronostico
    DA0_CreaCarpeta UnidadAsignada & "\Pronostico\", "Modelos Semanales\" & "Sem " & DatePart("ww", fechaOperacion, vbMonday, vbFirstFullWeek)
    
''''''''''''''''''''''4 NIVEL''''''''''''''''''''''''''''''''''''
    'Repositorio Archivos Diarios
    DA0_CreaCarpeta UnidadAsignada & "\Planeaciones\Cajas\Repositorio Archivos Diarios\", CStr(UsuarioWindows)
    'Pronostico
    DA0_CreaCarpeta UnidadAsignada & "\Pronostico\", "Modelos Semanales\" & "Sem " & DatePart("ww", fechaOperacion, vbMonday, vbFirstFullWeek) & "\Actualizaciones Planeadores"
    'Pronostico
    DA0_CreaCarpeta UnidadAsignada & "\Pronostico\", "Modelos Semanales\" & "Sem " & DatePart("ww", fechaOperacion, vbMonday, vbFirstFullWeek) & "\Bit|fffd|cora Saldos y Dotaciones"
    
'End If

End Sub


Sub DA0_10CrearCarpetasSemanasPronostico()
'carpeta papeles de trabajo

Call VariablesGlobales
Dim mesNumero, diaNumero As String

If Month(Date) < 10 Then
    mesNumero = "0" & Month(Date) & " "
Else
    mesNumero = Month(Date) & " "
End If

diaNumero = DatePart("ww", fechaOperacion, vbMonday, vbFirstFullWeek) + 2

If diaNumero < 10 Then
diaNumero = "Sem 0" & diaNumero & " " & Year(Date)
Else
diaNumero = "Sem " & diaNumero & " " & Year(Date)
End If


'MsgBox UnidadAsignada & "Pronostico"
''''''''''''''''''''''1 NIVEL''''''''''''''''''''''''''''''''''''
     'Pronostico
    DA0_CreaCarpeta CStr(UnidadAsignada), "Pronostico"

''''''''''''''''''''''2 NIVEL''''''''''''''''''''''''''''''''''''
    'Pronostico
    DA0_CreaCarpeta CStr(UnidadAsignada) & "Pronostico\", "Historico Modelo Dotaciones"
    'Pronostico
    DA0_CreaCarpeta CStr(UnidadAsignada) & "Pronostico\", "Modelos Semanales"

''''''''''''''''''''''3 NIVEL''''''''''''''''''''''''''''''''''''
    'Pronostico
    DA0_CreaCarpeta CStr(UnidadAsignada) & "Pronostico\", "Historico Modelo Dotaciones\" & Year(Date)
    DA0_CreaCarpeta CStr(UnidadAsignada) & "Pronostico\", "Historico Modelo Dotaciones\" & Year(Date) & "\" & mesNumero & NombresMesesLargo(Month(Date))
    
    'Pronostico
    DA0_CreaCarpeta CStr(UnidadAsignada) & "Pronostico\", "Modelos Semanales\" & Year(Date)
    DA0_CreaCarpeta CStr(UnidadAsignada) & "Pronostico\", "Modelos Semanales\" & Year(Date) & "\" & diaNumero
''''''''''''''''''''''4 NIVEL''''''''''''''''''''''''''''''''''''
    'Pronostico
    DA0_CreaCarpeta CStr(UnidadAsignada) & "Pronostico\", "Modelos Semanales\" & Year(Date) & "\" & diaNumero & "\Actualizaciones Planeadores"
    'Pronostico
    DA0_CreaCarpeta CStr(UnidadAsignada) & "Pronostico\", "Modelos Semanales\" & Year(Date) & "\" & diaNumero & "\Bit|fffd|cora Saldos y Dotaciones"


End Sub



Sub DA0_11CrearCarpetasReportesSap()
'carpeta papeles de trabajo

Call VariablesGlobales
Dim mesNumero, diaNumero, anioNumero As String
Dim diaNombre, etiquetaMes As String


anioNumero = Year(Date)


If Day(Date) < 10 Then
    diaNumero = "0" & Day(Date) & " "
Else
    diaNumero = Day(Date) & " "
End If


Select Case Month(Date)
    Case 1
    diaNombre = "Enero"
    Case 2
    diaNombre = "Febrero"
    Case 3
    diaNombre = "Marzo"
    Case 4
    diaNombre = "Abril"
    Case 5
    diaNombre = "Mayo"
    Case 6
    diaNombre = "Junio"
    Case 7
    diaNombre = "Julio"
    Case 8
    diaNombre = "Agosto"
    Case 9
    diaNombre = "Septiembre"
    Case 10
    diaNombre = "Octubre"
    Case 11
    diaNombre = "Noviembre"
    Case 12
    diaNombre = "Diciembre"

End Select



If Month(Date) < 10 Then
    mesNumero = "0" & Month(Date) & ". "
Else
    mesNumero = Month(Date) & ". "
End If

'diaNumero = DatePart("ww", fechaOperacion, vbMonday, vbFirstFullWeek) + 2
'
'If diaNumero < 10 Then
'diaNumero = "Sem 0" & diaNumero & " " & Year(Date)
'Else
'diaNumero = "Sem " & diaNumero & " " & Year(Date)
'End If

etiquetaMes = mesNumero & diaNombre & " " & anioNumero


'MsgBox UnidadAsignada & "Pronostico"
''''''''''''''''''''''1 NIVEL''''''''''''''''''''''''''''''''''''
     'Pronostico
    DA0_CreaCarpeta CStr(UnidadAsignada), "Reportes_SAP"

''''''''''''''''''''''2 NIVEL''''''''''''''''''''''''''''''''''''
    'Pronostico
    DA0_CreaCarpeta CStr(UnidadAsignada) & "Reportes_SAP\", "Avansoft"
    'Pronostico
    DA0_CreaCarpeta CStr(UnidadAsignada) & "Reportes_SAP\", "Avansoft Remesas 3pm"
    'Pronostico
    DA0_CreaCarpeta CStr(UnidadAsignada) & "Reportes_SAP\", "Avansoft Remesas 9am"
    'Pronostico
    DA0_CreaCarpeta CStr(UnidadAsignada) & "Reportes_SAP\", "JKASSA"
    
''''''''''''''''''''''3 NIVEL''''''''''''''''''''''''''''''''''''
    'Pronostico
    DA0_CreaCarpeta CStr(UnidadAsignada) & "Reportes_SAP\Avansoft\", CStr(etiquetaMes)

    'Pronostico
    DA0_CreaCarpeta CStr(UnidadAsignada) & "Reportes_SAP\JKASSA\", CStr(etiquetaMes)

End Sub




Function CARPETA_DIA_COMPRAS(FechaCompras As Date)
'carpeta papeles de trabajo

Call VariablesGlobales

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = FechaCompras
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtCompras & MonthLabel & " " & NombreMes & " " & YearLabel & " Compras Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Compras Diarias Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Function





'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sub DA1_ValidarExisteHojasProcesar()
'
'Validar la existencia de hojas de procesamiento de informaci|fffd|n
'
Call VariablesGlobales
Dim sh As Sheets
Dim HojaTrabajo1 As String
Dim HojaAcumulado1 As String
Dim HojaAcumulado2 As String

HojaTrabajo1 = sh6
HojaAcumulado1 = sh7
HojaAcumulado2 = sh8

'Validar si existe hoja de Procesar
    If BUSCAR_HOJA(HojaTrabajo1) = True Then
    
    Else
    Sheets.Add After:=Sheets(Sheets.Count)
    ActiveSheet.Name = HojaTrabajo1

'    'eliminar hoja
'    Sheets("PRUEBA").Select
'    ActiveWindow.SelectedSheets.Delete
    End If

'Validar si existe hoja de OdpTddRemesas
    If BUSCAR_HOJA(HojaAcumulado1) = True Then
    
    Else
    Sheets.Add After:=Sheets(Sheets.Count)
    ActiveSheet.Name = HojaAcumulado1

'    'eliminar hoja
'    Sheets("PRUEBA").Select
'    ActiveWindow.SelectedSheets.Delete
    End If

'Validar si existe hoja de SaldoCorte
    If BUSCAR_HOJA(HojaAcumulado2) = True Then
    Exit Sub
    Else
    Sheets.Add After:=Sheets(Sheets.Count)
    ActiveSheet.Name = HojaAcumulado2

'    'eliminar hoja
'    Sheets("PRUEBA").Select
'    ActiveWindow.SelectedSheets.Delete
    End If
    
End Sub

Sub DA2_LimpiarCaptura()
Call VariablesGlobales
Dim NRegistros As Long
Dim ColAj0, ColCom, RowAj0 As Integer

'LIMPIAR am_CONCILIAR_ARQUEOS
Sheets(sh15).Select

'primer columna de captura
ColAj0 = 24
'columna de comentarios
ColCom = 79
'primer fila de captura
RowAj0 = 4
'total de registros en la hoja
NRegistros = (Range(Cells(RowAj0, 1), Cells(RowAj0, 1).End(xlDown)).Count) + 3

Range(Cells(RowAj0, ColAj0), Cells(NRegistros, ColAj0 + 5)).ClearContents
Range(Cells(RowAj0, ColAj0 + 7), Cells(NRegistros, ColAj0 + 16)).ClearContents
Range(Cells(RowAj0, ColCom), Cells(NRegistros, ColCom + 1)).ClearContents


End Sub


Public Sub DA3_LimpiarCapturaServicios()
Call VariablesGlobales
    
Sheets(sh3).Select

Range("I4:I10000").ClearContents
Range("M4:M10000").ClearContents
Range("BA4:BF10000").ClearContents
Range("BH4:BO10000").ClearContents


End Sub


Public Sub DA4_LimpiarCapturaTraspasos()
Call VariablesGlobales
    
Sheets(sh13).Select

Range("2:1000").Clear

Sheets(sh16).Select

Range("2:1000").Clear



End Sub


Public Sub DA6_LimpiarCapturaTodos()
Call VariablesGlobales

'BORRAR Y CREAR HOJAS
Call DD7_Hoja_Compras
Call DD8_Hoja_Planeacion_Compras
Call DD2_Hoja_Conciliacion
Call DD3_Hoja_Cajas
Call DD6_Hoja_Servicios

Call DD10_Hoja_ProgramacionServicios
Call DD1_Hoja_Dem
Call DD9_Hoja_Confirmacion_Servicios

Call DD4_Hoja_Salidas
Call DD5_Hoja_Entradas





''sh3 = "pm_PLANEACION_SERVICIOS"
'Call DA3_LimpiarCapturaServicios

'sh6 = "Procesar"
Sheets(sh6).Select
Cells.Clear

'sh7 = "OdpTdd"
Sheets(sh7).Select
Cells.Clear

'sh8 = "SaldoCorte"
Sheets(sh8).Select
Cells.Clear

'sh9 = "Salidas"
Sheets(sh9).Select
Cells.Clear


'sh12 = "Remesas"
Sheets(sh12).Select
Cells.Clear


'sh13 = "MovimientosSalida"
'Call DA4_LimpiarCapturaTraspasos

'sh14 = "Cajas T-1"
Sheets(sh14).Select
Cells.Clear


''sh15 = "am_CONCILIAR_ARQUEOS"
'Call DA2_LimpiarCaptura

'sh16 = "MovimientosEntrada"
'Sheets(sh16).Select
'Cells.Clear

''sh17 = "Registro COMPRAS"
'Call CK3_LimpiarCapturaCompras

'sh18 = "ProgramacionDotaciones"
Call CO4_LimpiarCapturaServicios
'
''sh21 = "ConfirmacionServicios"
'Sheets(sh21).Select
'    Rows("3:100").Select
'    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
'    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
'    Range(Selection, Selection.End(xlDown)).Select
'    Selection.ClearContents
'
''sh22 = "ProgramacionServicios"
'Sheets(sh22).Select
'    Rows("3:100").Select
'    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
'    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
'    Range(Selection, Selection.End(xlDown)).Select
'    Selection.ClearContents
'
'sh23 = "PARTICIPANTE(formato)"
'sh24 = "pm_PLANEACION_COMPRAS"
'Sheets(sh24).Select
'    Rows("6:100").Select
'    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
'    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
'    Range(Selection, Selection.End(xlDown)).Select
'    Selection.ClearContents
'
''sh25 = "DEM"
'Sheets(sh25).Select
'    Rows("3:100").Select
'    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
'    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
'    Range(Selection, Selection.End(xlDown)).Select
'    Selection.ClearContents
    
'sh26 = "OrdenDotacion"
Sheets(sh26).Select
Cells.Clear


'sh27 = "SALDO INICIAL"
Sheets(sh27).Select
    Rows("5:100").Select
    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.ClearContents

'DELETE QUERY
Call DeleteQueryImportaciones

'sh19 = "PARAMETROS"
Sheets(sh19).Select

End Sub



Sub DA5_FormatosPapeles()
Call VariablesGlobales
Dim cuSh As String
cuSh = ActiveSheet.Name

'sh1 = "pm_PLANEACION_CAJAS"
Sheets(sh1).Select
    Columns("F:EA").Select
    Selection.Style = "Currency"

'sh3 = "pm_PLANEACION_SERVICIOS"

Sheets(sh3).Select
    Range("F:F,H:H,J:J,L:P,R:S,Y:AP").Select
    Selection.Style = "Currency"

    Range("G:G, I:I,T:T").Select
    Selection.NumberFormat = "0.00"
    
    Columns("X:X").Select
    Selection.NumberFormat = "m/d/yyyy"

'sh15 = "am_CONCILIAR_ARQUEOS"
Sheets(sh15).Select
    Columns("F:BZ").Select
    Selection.Style = "Currency"
    
'    Columns("C:D").Select
'    Selection.NumberFormat = "General"

    
'sh17 = "Registro COMPRAS"
Sheets(sh17).Select
    Range("G:H,O:AF").Select
    Selection.Style = "Currency"
    
Range("F:F,N:N").Select
    Selection.NumberFormat = "m/d/yyyy"
    
'sh18 = "ProgramacionDotaciones"
Sheets(sh18).Select
    Columns("Q:AH").Select
    Selection.Style = "Currency"
    
Columns("H:I").Select
    Selection.NumberFormat = "m/d/yyyy"
    
'sh21 = "ConfirmacionServicios"
Sheets(sh21).Select
    Columns("Q:AH").Select
    Selection.Style = "Currency"
    
Columns("H:I").Select
    Selection.NumberFormat = "m/d/yyyy"
    
'sh22 = "ProgramacionServicios"
Sheets(sh22).Select
    Columns("Q:AH").Select
    Selection.Style = "Currency"
    
Columns("H:I").Select
    Selection.NumberFormat = "m/d/yyyy"
    
'sh24 = "pm_PLANEACION_COMPRAS"

Sheets(cuSh).Select


End Sub



Sub DA0_1CrearCarpetaDiaValidacion_LOCAL()
'carpeta papeles de trabajo

Call VariablesGlobales

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String

UnidadAsignada = RutaLocal & NombreCarpetaCompartida & "\"

'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If

UnidadRuta = UnidadAsignada & RutaPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaci|fffd|n Log|fffd|stica Monetaria"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaci|fffd|n"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Sub


Sub DA0_2CrearCarpetaMesValidacion_LOCAL()
'carpeta papeles de trabajo

Call VariablesGlobales

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String

UnidadAsignada = RutaLocal & NombreCarpetaCompartida & "\"

'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & Left(RutaPlaneaciones, Len(RutaPlaneaciones) - 1)
fechaCarpeta = MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaci|fffd|n Log|fffd|stica Monetaria"

'MsgBox "UnidadRuta: " & UnidadRuta & Chr(10) & "fechaCarpeta: " & fechaCarpeta

'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Sub


Sub DA0_3CrearCarpetaMesTxtPlaneaciones_LOCAL()
'carpeta papeles de trabajo

Call VariablesGlobales

UnidadAsignada = RutaLocal & NombreCarpetaCompartida & "\"

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & Left(RutaTxtPlaneaciones, Len(RutaTxtPlaneaciones) - 1)
fechaCarpeta = MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Sub

Sub DA0_4CrearCarpetaDiaTxtPlaneaciones_LOCAL()
'carpeta papeles de trabajo

Call VariablesGlobales
UnidadAsignada = RutaLocal & NombreCarpetaCompartida & "\"

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtPlaneaciones & MonthLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Planeaciones Diarias Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Sub



Sub DA0_5CrearCarpetaMesTxtTraspasos_LOCAL()
'carpeta papeles de trabajo

Call VariablesGlobales
UnidadAsignada = RutaLocal & NombreCarpetaCompartida & "\"

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & Left(RutaTxtTraspasos, Len(RutaTxtTraspasos) - 1)
fechaCarpeta = MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Sub


Function CARPETA_MES_TRASLADOS_LOCAL(FechaTraslado As Date)
'carpeta papeles de trabajo

Call VariablesGlobales
UnidadAsignada = RutaLocal & NombreCarpetaCompartida & "\"

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = FechaTraslado
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & Left(RutaTxtTraspasos, Len(RutaTxtTraspasos) - 1)
fechaCarpeta = MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Function

Sub DA0_6CrearCarpetaDiaTxtTraspasos_LOCAL()
'carpeta papeles de trabajo

Call VariablesGlobales
UnidadAsignada = RutaLocal & NombreCarpetaCompartida & "\"

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Sub

Function CARPETA_DIA_TRASLADOS_LOCAL(FechaTraslados As Date)
'carpeta papeles de trabajo

Call VariablesGlobales
UnidadAsignada = RutaLocal & NombreCarpetaCompartida & "\"

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = FechaTraslados
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtTraspasos & MonthLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Traspasos Diarios Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''



Sub DA0_7CrearCarpetaMesTxtCompras_LOCAL()
'carpeta papeles de trabajo

Call VariablesGlobales
UnidadAsignada = RutaLocal & NombreCarpetaCompartida & "\"

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & Left(RutaTxtCompras, Len(RutaTxtCompras) - 1)
fechaCarpeta = MonthLabel & " " & NombreMes & " " & YearLabel & " Compras Diarias Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Sub


Function CARPETA_MES_COMPRAS_LOCAL(FechaCompra As Date)
'carpeta papeles de trabajo

Call VariablesGlobales
UnidadAsignada = RutaLocal & NombreCarpetaCompartida & "\"

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = FechaCompra
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & Left(RutaTxtCompras, Len(RutaTxtCompras) - 1)
fechaCarpeta = MonthLabel & " " & NombreMes & " " & YearLabel & " Compras Diarias Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Function




Sub DA0_8CrearCarpetaDiaTxtCompras_LOCAL()
'carpeta papeles de trabajo


Call VariablesGlobales
UnidadAsignada = RutaLocal & NombreCarpetaCompartida & "\"

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = Date
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtCompras & MonthLabel & " " & NombreMes & " " & YearLabel & " Compras Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Compras Diarias Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Sub


Sub DA0_10CrearCarpetaRepositorioUsuario_LOCAL()
'carpeta papeles de trabajo


Call VariablesGlobales
UnidadAsignada = RutaLocal & NombreCarpetaCompartida & "\"

'MsgBox UnidadAsignada & RutaInsumos

UnidadRuta = UnidadAsignada & RutaInsumos



'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", CStr(UsuarioWindows)
 
End Sub


Function CARPETA_DIA_COMPRAS_LOCAL(FechaCompras As Date)
'carpeta papeles de trabajo

Call VariablesGlobales
UnidadAsignada = RutaLocal & NombreCarpetaCompartida & "\"

Dim fechaValor As Date
Dim DayValor, MonthValor, YearValor As Integer
Dim DayLabel, MonthLabel, YearLabel, NombreMes As String
Dim UnidadRuta, fechaCarpeta As String


'Ubicar fecha del reporte
fechaValor = FechaCompras
DayValor = Day(fechaValor)
MonthValor = Month(fechaValor)
YearValor = Year(fechaValor)

'A|fffd|o etiqueta
YearLabel = YearValor

'D|fffd|a etiqueta
If DayValor < 10 Then
    DayLabel = "0" & DayValor
Else
    DayLabel = DayValor
End If

'nombre mes
If MonthValor = 1 Then
NombreMes = Meses1
ElseIf MonthValor = 2 Then
NombreMes = Meses2
ElseIf MonthValor = 3 Then
NombreMes = Meses3
ElseIf MonthValor = 4 Then
NombreMes = Meses4
ElseIf MonthValor = 5 Then
NombreMes = Meses5
ElseIf MonthValor = 6 Then
NombreMes = Meses6
ElseIf MonthValor = 7 Then
NombreMes = Meses7
ElseIf MonthValor = 8 Then
NombreMes = Meses8
ElseIf MonthValor = 9 Then
NombreMes = Meses9
ElseIf MonthValor = 10 Then
NombreMes = Meses10
ElseIf MonthValor = 11 Then
NombreMes = Meses11
ElseIf MonthValor = 12 Then
NombreMes = Meses12
End If

'Mes etiqueta
If MonthValor < 10 Then
    MonthLabel = "0" & MonthValor
Else
    MonthLabel = MonthValor
End If



UnidadRuta = UnidadAsignada & RutaTxtCompras & MonthLabel & " " & NombreMes & " " & YearLabel & " Compras Diarias Txt"
fechaCarpeta = DayLabel & " " & NombreMes & " " & YearLabel & " Compras Diarias Txt"


'Crear carpeta del d|fffd|a
     DA0_CreaCarpeta UnidadRuta & "\", fechaCarpeta
 
End Function

Attribute VB_Name = "DB_CORREOS_OS"

Public Sub DB0_CorreosSucursales()

MsgBox "ACCI|fffd|N DESHABILITADA"

'Application.ScreenUpdating = False
'
'Call VariablesGlobales
'Dim answer As Integer
'Dim correoGR
'Dim correoCopia
'Dim correoCopia1
'Dim name1 As String
'Dim objOutlook As Object
'Dim objMail As Object
'Dim objOutlookAttach As Object
'Dim objOutlookAttach2 As Object
'Dim ColDot, ConReg, ColFecha1 As Integer
'Dim totReg As Long
'
''contar numero de registros en DetalleServicios
''sh18 = "DetalleServicios"
'
'Sheets(sh18).Select
'
''Billetes y Met|fffd|lica
'x0 = " $1,000.00"
'x1 = "   $500.00"
'x2 = "   $200.00"
'x3 = "   $100.00"
'x4 = "    $50.00"
'x5 = "    $20.00"
'x6 = "Met|fffd|lica"
'x7 = "Total"
'
''Denominaciones de Met|fffd|lica
'M1 = "    $10.00"
'M2 = "     $5.00"
'M3 = "     $2.00"
'M4 = "     $1.00"
'M5 = "     $0.50"
'M6 = "     $0.20"
'
''Dim x500 As Currency
''Dim x200 As Currency
''Dim x100 As Currency
''Dim x50 As Currency
''Dim x20 As Currency
''Dim xMetalica As Currency
''Dim xTotal As Currency
'
''columna de total de dotaci|fffd|n con validaci|fffd|n
'ColDot = 16
'ColFecha1 = 9
'
''columna de registros
'ColReg = 1
'x = 3
'
''Columna registro envio correo
'ColStat = 35
''Total de registros
'
'If (Range("e3", Range("e3").End(xlDown)).Count) > 1000 Then
'totReg = 1
'
'ElseIf (Range("e3", Range("e3").End(xlDown)).Count) < 1000 Then
'totReg = (Range("e3", Range("e3").End(xlDown)).Count) + 2
'
'End If
'
'
'''limpiar columna de Estatus env|fffd|o
''Range(Cells(x, ColStat), Cells(TotReg + 1000, ColStat)).Select
''Selection.ClearContents
'
'
''confirmar env|fffd|o de correos
'answer = MsgBox("|fffd|Est|fffd| seguro de hacer los env|fffd|os?", vbYesNo + vbQuestion, "Env|fffd|o de Correos")
'
'If answer = vbYes Then
'
'
''Valida que lo que tenga dotaci|fffd|n tambi|fffd|n tenga fecha
'Sheets(sh18).Select
''Range("AI5").Select
'
'
'Sheets(sh18).Select
'Do While Cells(x, 1) <> ""
''MsgBox "x" & x & Chr(10) & "Cells(x, 10)" & Cells(x, 10)
'
''While ActiveCell.Offset(0, -19).value <> ""
'
'    If Cells(x, ColDot) > 0 And Application.WorksheetFunction.Sum(Range(Cells(x, ColDot + 1), Cells(x, ColDot + 6)), Range(Cells(x, ColDot + 8), Cells(x, ColDot + 17))) <> Cells(x, ColDot) Then
'
'        'MsgBox "EL IMPORTE TOTAL ES DIFERENTE A LA SUMA DE LAS DENOMINACIONES" & " Sucursal " & Cells(x, 6)
'
'    End If
'
''ActiveCell.Offset(1, 0).Select
''Wend
'x = x + 1
'Loop
'
''regresar x a valor original
'x = 3
'
''inicio denominaciones Billete 1,000
'y = 18
'
'
''Totales
'BilMon = 17
'
'Sheets(sh18).Select
''Set Rango = Range("J3")
''inc = 1
'
'Do While Sheets(sh18).Cells(x, 1) <> "" And Cells(x, BilMon - 7) = "DOTACION"
''And Sheets(sh18).Cells(x, 35) = ""
''MsgBox "x " & x & Chr(10) & Sheets(sh18).Cells(x, 10) & Chr(10) & Sheets(sh18).Cells(x, ColStat).value & Chr(10) & "ColStat " & ColStat
'
''While ActiveCell.Offset(0, 0).value <> ""
'
'If Cells(x, BilMon).value = 0 Then
'
''columna 61
'Cells(x, y + 19) = "NO DOTACI|fffd|N"
'
'Else
'ID = Cells(x, 5).value
'Nombre = Cells(x, 6).value
'x1000 = Format(Cells(x, y).value, "$#,##0.00")
'x500 = Format(Cells(x, y + 1).value, "$#,##0.00")
'x200 = Format(Cells(x, y + 2).value, "$#,##0.00")
'x100 = Format(Cells(x, y + 3).value, "$#,##0.00")
'x50 = Format(Cells(x, y + 4).value, "$#,##0.00")
'x20 = Format(Cells(x, y + 5).value, "$#,##0.00")
'xMetalica = Format(Cells(x, y + 6).value, "$#,##0.00")
'
'MON1 = Format(Cells(x, y + 9).value, "$#,##0.00")
'MON2 = Format(Cells(x, y + 10).value, "$#,##0.00")
'MON3 = Format(Cells(x, y + 11).value, "$#,##0.00")
'MON4 = Format(Cells(x, y + 12).value, "$#,##0.00")
'MON5 = Format(Cells(x, y + 13).value, "$#,##0.00")
'MON6 = Format(Cells(x, y + 14).value, "$#,##0.00")
'
'xTotal = Format(Cells(x, BilMon).value, "$#,##0.00")
'
'
'Fecha_Envio = Cells(x, y - 9).value
'xComentarios = "Recuerden ingresar la dotacion en sistema y contar bien el efectivo, les llegar|fffd| el "
'xFechaTexto = NombresDiasMayus(Weekday(Fecha_Envio, vbMonday)) & " " _
'                        & Day(Fecha_Envio) & " DE " & _
'                        NombresMesesLargo(Month(Fecha_Envio)) & " "
'
'Dir2 = " ** " & Nombre & " ** " & xFechaTexto
'
'''sh18 = "DetalleServicios"
''Sheets(sh18).Select
'
''sh5 = "Correos OS"
'Sheets(sh5).Select
'
'On Error GoTo line1:
'
'Columns("A:A").Select
'    Selection.Find(What:=ID, After:=ActiveCell, LookIn:=xlFormulas, _
'        LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
'        MatchCase:=False, SearchFormat:=False).Activate
'
'xSucursal = ActiveCell.Offset(0, 1).value
'
'xCajero = ActiveCell.Offset(0, 2).value
'xsuper = ActiveCell.Offset(0, 3).value
'
'correoGR = xCajero
'correoCopia = xsuper
'
'
'Application.DisplayAlerts = True
'Application.ScreenUpdating = False
'
'   'Se declara un objeto de tipo Outlook
'    Set objOutlook = CreateObject("Outlook.Application")
'   'Se crea un nuevo mensaje
'    Set objMail = objOutlook.CreateItem(olMailItem) 'Create a new
'    'Para adjuntar el archivo se usa:
'    'Set objOutlookAttach = objOutlook.CreateItem(olAttachMents)
'    'Set objOutlookAttach2 = objOutlook.CreateItem(olAttachMents)
'
'   'Se le asignan los valores a las distintas propiedades del objeto "mail"
'
'       With objMail
'         'A quien va dirigido se podr|fffd|a escribir un grupo de usuarios de Outlook
'         .To = (correoGR)
'         .CC = (correoCopia)
'         '.BCC = (correoCopia)
'         'Se especifica el asunto
'          .Subject = "DOTACI|fffd|N " & Dir2
'         'Se especifica lo que se quiere que diga el mensaje
'         .HTMLBody = "<html>" & "<u>" & "<b style='font-family:verdana;font-size:18'>" & "<span style=""color:#DB0076"">" & _
'                              "DOTACI|fffd|N " & xSucursal & ":" & _
'                              "</span style=""color:#DB0076"">" & "</b>" & "</u>" & _
'                              "<br>" & _
'                              "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6F6C6E"">" & _
'                        xComentarios & _
'                              "</span style=""color:#6F6C6E"">" & _
'                        "<u>" & "<b style='font-family:verdana;font-size:18'>" & "<span style=""color:#DB0076"">" & _
'                        xFechaTexto & _
'                        "</span style=""color:#DB0076"">" & "</b>" & "</u>" & _
'                        "<br>" & "<br>" & _
'                        "<b style='font-family:verdana;font-size:16'>" & "<span style=""color:#545354"">" & _
'                        "<br>" & x0 & " = " & x1000 & "<br>" & x1 & " = " & x500 & "<br>" & x2 & " =" & x200 & "<br>" & x3 & " = " & x100 & "<br>" & _
'                        x4 & "  = " & x50 & "<br>" & x5 & "  = " & x20 & "<br>" & x6 & " = " & _
'                        xMetalica & "<br>" & M1 & " = " & MON1 & "<br>" & M2 & "   = " & MON2 & "<br>" & M3 & "   = " & MON3 & "<br>" & M4 & "   = " & MON4 & "<br>" & M5 & "   = " & MON5 & "<br>" & M6 & "   = " & MON6 & "<br>" & _
'                        "</span style=""color:#545354"">" & "</b>" & _
'                        "<u>" & "<b style='font-family:verdana;font-size:18'>" & "<span style=""color:#DB0076"">" & _
'                        x7 & " = " & xTotal & "<br>" & "<br>" & _
'                        "</span style=""color:#DB0076"">" & "</b>" & "<p/>" & "</u>" & _
'                        "<p style='font-family:verdana;font-size:16'>" & "<span style=""color:#6F6C6E"">" & _
'                        "<br>" & DATOS_USUARIO_WINDOWS(Environ("UserName"), 1) & "<br>" & _
'                    "Tel. 5276-7250     Ext:    " & DATOS_USUARIO_WINDOWS(Environ("UserName"), 4) & "<br>" & _
'                    DATOS_USUARIO_WINDOWS(Environ("UserName"), 5) & "</span style=""color:#6F6C6E"">" & "<p/>" & "<br>" & _
'                    "<img src= " & Chr(34) & UnidadAsignada & Catalogos & firmaImagen & Chr(34) _
'                    & "</html>"
'        '.display
'         '.Attachments.Add (ThisWorkbook.Path & Dir2)
'
'         'Se manda el mensaje
'          .Send
'       End With
'
'   'Se cierran todos los objetos utilizados
'   'Kill ThisWorkbook.Path & Dir2
'
'    Set objMail = Nothing
'    Set objOutlook = Nothing
'
'    Application.DisplayAlerts = False
'    'ActiveWindow.Close
'    Application.DisplayAlerts = True
'
'Sheets(sh18).Select
'Cells(x, y + 19) = "OK CORREO OS"
'Sheets(sh18).Select
'
'
'line1:
'Sheets(sh5).Select
'
'If ActiveCell.Offset(0, 2).value = "" Then
'Sheets(sh18).Select
'Cells(x, y + 19) = "ID sin correo"
'
'End If
'
'End If
'
'Sheets(sh18).Select
''Rango = Range(Rango).Offset(1, 0).Select
'
''Wend
'x = x + 1
'Loop
'
'MsgBox "Env|fffd|o de Reporte Diario Exitoso"
'
'
'
'
'
'
'
'ElseIf answer = vbNo Then
'Exit Sub
'
'End If


End Sub
Attribute VB_Name = "DC_MACROS_USER_FORMS"

Sub RegistrarTraspasos()

TRASPASOS_SALIDA_CAJA_GENERAL.Show

End Sub

Attribute VB_Name = "DD_CREAR_HOJAS"
'DD_CREAR_HOJAS
Sub DD1_Hoja_Dem()
Call VariablesGlobales

Dim row0, col0 As Integer
Dim boton1, boton2, boton3 As String
Dim macroBoton1, macroBoton2, macroBoton3 As String
row0 = 2
col0 = 0

boton1 = "ACTUALIZAR FORMULAS"
boton2 = "MEN|fffd| DEM"
boton3 = "LIMPIAR"

macroBoton1 = "CP_4FormulasDem"
macroBoton2 = "Bot_Dem_Dinamico"
macroBoton3 = "Bot_Limpiar_DEM"

'sh19 = "PARAMETROS"
Sheets(sh19).Select

'1. Eliminar hoja DEM sh25 = "DEM"
    On Error Resume Next
    Sheets(sh25).Select
    Application.DisplayAlerts = False
    ActiveWindow.SelectedSheets.Delete
    
    On Error GoTo 0
    
'2. Agregar hoja DEM despues de hoja sh22 = "ProgramacionServicios"
    Sheets(sh22).Select
    Sheets.Add After:=ActiveSheet
    ActiveSheet.Name = sh25
    
    'Color de hoja
    With ActiveWorkbook.Sheets(sh25).Tab
        .Color = 26367
        .TintAndShade = 0
    End With
    
'3. Encabezados
    'ancho primera fila
    Rows("1:1").RowHeight = 42#
    
    Cells(row0, col0 + 1) = "Estatus Acreditaci|fffd|n"
    Cells(row0, col0 + 2) = "IdPlaza"
    Cells(row0, col0 + 3) = "Etv Origen"
    Cells(row0, col0 + 4) = "Plaza Origen"
    Cells(row0, col0 + 5) = "Id Sucursal"
    Cells(row0, col0 + 6) = "Sucursal"
    Cells(row0, col0 + 7) = "ETV Servicio"
    Cells(row0, col0 + 8) = "Fecha Planeacion"
    Cells(row0, col0 + 9) = "Fecha Servicio"
    Cells(row0, col0 + 10) = "TipoServicio"
    Cells(row0, col0 + 11) = "Destino Concentracion"
    Cells(row0, col0 + 12) = "Importe Servicio"
    Cells(row0, col0 + 13) = "B1000"
    Cells(row0, col0 + 14) = "B500"
    Cells(row0, col0 + 15) = "B200"
    Cells(row0, col0 + 16) = "B100"
    Cells(row0, col0 + 17) = "B50"
    Cells(row0, col0 + 18) = "B20"
    Cells(row0, col0 + 19) = "Metalica"
    Cells(row0, col0 + 20) = "M100"
    Cells(row0, col0 + 21) = "M20"
    Cells(row0, col0 + 22) = "M10"
    Cells(row0, col0 + 23) = "M5"
    Cells(row0, col0 + 24) = "M2"
    Cells(row0, col0 + 25) = "M1"
    Cells(row0, col0 + 26) = "M0.5"
    Cells(row0, col0 + 27) = "M0.2"
    Cells(row0, col0 + 28) = "M0.1"
    Cells(row0, col0 + 29) = "M0.05"
    Cells(row0, col0 + 30) = "Importe Acreditado"
    Cells(row0, col0 + 31) = "Fecha Acreditaci|fffd|n 1"
    Cells(row0, col0 + 32) = "Acreditaci|fffd|n 1 Parte"
    Cells(row0, col0 + 33) = "Fecha Acreditaci|fffd|n 2"
    Cells(row0, col0 + 34) = "Acreditaci|fffd|n 2 Parte"
    Cells(row0, col0 + 35) = "Fecha Acreditaci|fffd|n 3"
    Cells(row0, col0 + 36) = "Acreditaci|fffd|n 3 Parte"
    Cells(row0, col0 + 37) = "Fecha Acreditaci|fffd|n 4"
    Cells(row0, col0 + 38) = "Acreditaci|fffd|n 4 Parte"
    Cells(row0, col0 + 39) = "SALDO"
    
'4 Formato
'encabezados
    Range(Cells(row0, 1), Cells(row0, 1).End(xlToRight)).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 7733477
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
        .Bold = True
    End With
    
    'formato de columnas
    Columns("A:A").Select
    Selection.ColumnWidth = 17.1
    Columns("B:B").Select
    Selection.ColumnWidth = 10.3
    Columns("C:C").Select
    Selection.ColumnWidth = 10.2
    Columns("D:D").Select
    Selection.ColumnWidth = 13.3
    Columns("E:E").Select
    Selection.ColumnWidth = 8.9
    Columns("F:F").Select
    Selection.ColumnWidth = 15.5
    Columns("G:G").Select
    Selection.ColumnWidth = 10.6
    Range("H:H,I:I,AE:AE,AG:AG,AI:AI,AK:AK").Select
    Selection.NumberFormat = "m/d/yyyy"
    
    Range("I1").Activate
    Selection.ColumnWidth = 11
    Columns("J:J").Select
    Selection.ColumnWidth = 26.4
    Columns("K:K").Select
    Selection.ColumnWidth = 11
    ActiveWindow.SmallScroll ToRight:=10
    
    Range("L:L,M:AD").Select
    Selection.ColumnWidth = 13.9
    Selection.Style = "Currency"
    
    Range("AF:AF, AH:AH, AJ:AJ, AL:AL, AM:AM").Select
    Selection.ColumnWidth = 13.9
    Selection.Style = "Currency"
    
    'agrupar
    Columns("M:AC").Select
    Selection.Columns.Group


'5. Botones ACTUALIZAR FORMULAR (CP_4FormulasDem) - MEN|fffd| DEM (Bot_Dem_Dinamico) - LIMPIAR (Bot_Limpiar_DEM)
    
        'LEFT - TOP - WIDTH - HEIGHT
    ActiveSheet.Buttons.Add(3.75, 4.5, 124.5, 29.25).Select
    Selection.OnAction = macroBoton1
    Selection.Characters.Text = boton1
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=19).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    ActiveSheet.Buttons.Add(158.25, 4.5, 124.5, 29.25).Select
    Selection.OnAction = macroBoton2
    Selection.Characters.Text = boton2
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=8).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10.5
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With

    ActiveSheet.Buttons.Add(312.75, 4.5, 124.5, 29.25).Select
    Selection.OnAction = macroBoton3
    Selection.Characters.Text = boton3
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=7).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10.5
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
ActiveWindow.Zoom = 70
End Sub




Sub DD2_Hoja_Conciliacion()
Call VariablesGlobales


Dim row0, col0 As Integer
Dim tope1, tope2, tope3, tope4, tope5, tope6 As Integer
Dim boton1, boton2, boton3, boton4, boton5, boton6 As String
Dim macroBoton1, macroBoton2, macroBoton3, macroBoton4, macroBoton5, macroBoton6 As String
row0 = 3
col0 = 0

tope1 = 23
tope2 = 41
tope3 = 59
tope4 = 78
tope5 = 80


boton1 = "CONCILIAR"
boton2 = "CREAR COPIA"
boton3 = "AJUSTE UNITARIO"
boton4 = "REPLICAR ARQUEOS"
boton5 = "AUTOAJUSTAR DIFERENCIAS"
boton6 = "LIMPIAR AJUSTES"


macroBoton1 = "Bot_Conciliacion"
macroBoton2 = "Bot_Publicar_Conciliacion"
macroBoton3 = "CG2_AutoajustarConciliacion"
macroBoton4 = "Bot_Replicar_Arqueos_Todos"
macroBoton5 = "Bot_Autoajustar_Todos"
macroBoton6 = "Bot_Limpiar_Conciliacion"

'sh19 = "PARAMETROS"
Sheets(sh19).Select
Application.Calculation = xlManual

'1. Eliminar hoja sh15 = "am_CONCILIAR_ARQUEOS"
    On Error Resume Next
    Sheets(sh15).Select
    Application.DisplayAlerts = False
    ActiveWindow.SelectedSheets.Delete
    
    On Error GoTo 0
    
'2. Agregar hoja despues de hoja 3
    Sheets(3).Select
    Sheets.Add After:=ActiveSheet
    ActiveSheet.Name = sh15
    
    'Color de hoja
    With ActiveWorkbook.Sheets(sh15).Tab
        .Color = 49407
        .TintAndShade = 0
    End With
    
'3. Encabezados
    'ancho primera fila
    Rows("1:1").RowHeight = 45#
    
    Cells(1, col0 + tope1) = "SALDO COMPARTAMOS T-1"
    Cells(1, col0 + tope2) = "AJUSTES OPERATIVOS"
    Cells(1, col0 + tope3) = "SALDO ETV (arqueos)"
    Cells(1, col0 + tope4 - 1) = "DIFERENCIAS"

    
    Cells(row0, col0 + 1) = "Medio"
    Cells(row0, col0 + 2) = "IdPlazaMedio"
    Cells(row0, col0 + 3) = "Etv"
    Cells(row0, col0 + 4) = "Plaza"
    Cells(row0, col0 + 5) = "Null"
    Cells(row0, col0 + 6) = "IB1000"
    Cells(row0, col0 + 7) = "IB500"
    Cells(row0, col0 + 8) = "IB200"
    Cells(row0, col0 + 9) = "IB100"
    Cells(row0, col0 + 10) = "IB50"
    Cells(row0, col0 + 11) = "IB20"
    Cells(row0, col0 + 12) = "IMetalica"
    Cells(row0, col0 + 13) = "IM100"
    Cells(row0, col0 + 14) = "IM20"
    Cells(row0, col0 + 15) = "IM10"
    Cells(row0, col0 + 16) = "IM5"
    Cells(row0, col0 + 17) = "IM2"
    Cells(row0, col0 + 18) = "IM1"
    Cells(row0, col0 + 19) = "IM0.5"
    Cells(row0, col0 + 20) = "IM0.2"
    Cells(row0, col0 + 21) = "IM0.1"
    Cells(row0, col0 + 22) = "IM0.05"
    Cells(row0, col0 + 23).FormulaR1C1 = _
            "=""TOTAL SALDO T-1""&CHAR(10)&TEXT(SUMIFS(R4C23:R1048576C23,R4C1:R1048576C1,""TOTALES""),""$#,0.00"")"
    Cells(row0, col0 + 24) = "JB1000"
    Cells(row0, col0 + 25) = "JB500"
    Cells(row0, col0 + 26) = "JB200"
    Cells(row0, col0 + 27) = "JB100"
    Cells(row0, col0 + 28) = "JB50"
    Cells(row0, col0 + 29) = "JB20"
    Cells(row0, col0 + 30) = "JMetalica"
    Cells(row0, col0 + 31) = "JM100"
    Cells(row0, col0 + 32) = "JM20"
    Cells(row0, col0 + 33) = "JM10"
    Cells(row0, col0 + 34) = "JM5"
    Cells(row0, col0 + 35) = "JM2"
    Cells(row0, col0 + 36) = "JM1"
    Cells(row0, col0 + 37) = "JM0.5"
    Cells(row0, col0 + 38) = "JM0.2"
    Cells(row0, col0 + 39) = "JM0.1"
    Cells(row0, col0 + 40) = "JM0.05"
    Cells(row0, col0 + 41).FormulaR1C1 = _
            "=""TOTAL AJUSTES OPERATIVOS""&CHAR(10)&TEXT(SUMIFS(R4C41:R1048576C41,R4C1:R1048576C1,""TOTALES""),""$#,0.00"")"
    
    Cells(row0, col0 + 42) = "AB1000"
    Cells(row0, col0 + 43) = "AB500"
    Cells(row0, col0 + 44) = "AB200"
    Cells(row0, col0 + 45) = "AB100"
    Cells(row0, col0 + 46) = "AB50"
    Cells(row0, col0 + 47) = "AB20"
    Cells(row0, col0 + 48) = "AMetalica"
    Cells(row0, col0 + 49) = "AM100"
    Cells(row0, col0 + 50) = "AM20"
    Cells(row0, col0 + 51) = "AM10"
    Cells(row0, col0 + 52) = "AM5"
    Cells(row0, col0 + 53) = "AM2"
    Cells(row0, col0 + 54) = "AM1"
    Cells(row0, col0 + 55) = "AM0.5"
    Cells(row0, col0 + 56) = "AM0.2"
    Cells(row0, col0 + 57) = "AM0.1"
    Cells(row0, col0 + 58) = "AM0.05"
    Cells(row0, col0 + 59).FormulaR1C1 = _
            "=""TOTAL SALDO ETV (Arqueos)""&CHAR(10)&TEXT(SUMIFS(R4C59:R1048576C59,R4C1:R1048576C1,""TOTALES""),""$#,0.00"")"
    
    Cells(row0, col0 + 60) = "DB1000"
    Cells(row0, col0 + 61) = "DB500"
    Cells(row0, col0 + 62) = "DB200"
    Cells(row0, col0 + 63) = "DB100"
    Cells(row0, col0 + 64) = "DB50"
    Cells(row0, col0 + 65) = "DB20"
    Cells(row0, col0 + 66) = "DMetalica"
    Cells(row0, col0 + 67) = "DM100"
    Cells(row0, col0 + 68) = "DM20"
    Cells(row0, col0 + 69) = "DM10"
    Cells(row0, col0 + 70) = "DM5"
    Cells(row0, col0 + 71) = "DM2"
    Cells(row0, col0 + 72) = "DM1"
    Cells(row0, col0 + 73) = "DM0.5"
    Cells(row0, col0 + 74) = "DM0.2"
    Cells(row0, col0 + 75) = "DM0.1"
    Cells(row0, col0 + 76) = "DM0.05"
    Cells(row0, col0 + 77).FormulaR1C1 = _
            "=""TOTAL DIFERENCIAS""&CHAR(10)&TEXT(SUMIFS(R4C77:R1048576C77,R4C1:R1048576C1,""TOTALES""),""$#,0.00"")"
    
    Cells(row0, col0 + 78).FormulaR1C1 = _
            "=""DIFERENCIAS NETEADAS""&CHAR(10)&TEXT(SUMIFS(R4C78:R1048576C78,R4C1:R1048576C1,""TOTALES""),""$#,0.00"")"
    
    Cells(row0, col0 + 79) = "COMENTARIOS AJUSTES"
    Cells(row0, col0 + 80) = "AJUSTAR"

    
'4 Formato
'encabezados
    'secci|fffd|n 1
    Range(Cells(1, 1), Cells(row0, tope1)).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 7733477
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
        .Bold = True
    End With


    'secci|fffd|n 2
    Range(Cells(1, tope1 + 1), Cells(row0, tope2)).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 14348258
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With

    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
        .Bold = True
    End With
    
    
    'secci|fffd|n 3
    Range(Cells(1, tope2 + 1), Cells(row0, tope3)).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 7432798
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
        .Bold = True
    End With
    
    
    'secci|fffd|n 4
    Range(Cells(1, tope3 + 1), Cells(row0, tope4)).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 11892015
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
        .Bold = True
    End With
    
    

    'secci|fffd|n 5
    Range(Cells(1, tope4 + 1), Cells(row0, tope5)).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 36799
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
        .Bold = True
    End With
    
    
    
    'formato de columnas
    Columns("A:A").Select
    Selection.ColumnWidth = 14
    Columns("B:B").Select
    Selection.ColumnWidth = 11.3
    Columns("C:C").Select
    Selection.ColumnWidth = 10.6
    Columns("D:D").Select
    Selection.ColumnWidth = 16.4
    Columns("E:E").Select
    Selection.ColumnWidth = 3.4
    
    Columns("F:BZ").Select
    Selection.ColumnWidth = 17.2
    Selection.Style = "Currency"
    
    Columns("CA:CA").Select
    Selection.ColumnWidth = 30.4
    Columns("CB:CB").Select
    Selection.ColumnWidth = 24.2
    
    'agrupar
    Columns("E:V").Select
    Selection.Columns.Group
    
    Columns("X:AN").Select
    Selection.Columns.Group
    
    Columns("AP:BF").Select
    Selection.Columns.Group
    
    Columns("BH:BY").Select
    Selection.Columns.Group
    
'5. Botones ACTUALIZAR FORMULAR (CP_4FormulasDem) - MEN|fffd| DEM (Bot_Dem_Dinamico) - LIMPIAR (Bot_Limpiar_DEM)
    
        'LEFT - TOP - WIDTH - HEIGHT
    ActiveSheet.Buttons.Add(3.75, 4.5, 124.5, 29.25).Select
    Selection.OnAction = macroBoton1
    Selection.Characters.Text = boton1
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=9).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    'BOTON 2
    
    ActiveSheet.Buttons.Add(158.25, 4.5, 124.5, 29.25).Select
    Selection.OnAction = macroBoton2
    Selection.Characters.Text = boton2
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=11).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10.5
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    'BOT|fffd|N 3
    
    ActiveSheet.Buttons.Add(10502, 4.5, 95, 29.25).Select
    Selection.OnAction = macroBoton3
    Selection.Characters.Text = boton3
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=15).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    'BOT|fffd|N 4
    
    ActiveSheet.Buttons.Add(10611, 4.5, 95, 29.25).Select
    Selection.OnAction = macroBoton4
    Selection.Characters.Text = boton4
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=16).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    'BOT|fffd|N 5
    
    ActiveSheet.Buttons.Add(10720, 4.5, 95, 29.25).Select
    Selection.OnAction = macroBoton5
    Selection.Characters.Text = boton5
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=23).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    'BOT|fffd|N 6
    
    ActiveSheet.Buttons.Add(10829, 4.5, 95, 29.25).Select
    Selection.OnAction = macroBoton6
    Selection.Characters.Text = boton6
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=15).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    Sheets(sh15).Select
    Application.Calculation = xlAutomatic
    
ActiveWindow.Zoom = 70
End Sub



Sub DD3_Hoja_Cajas()
Call VariablesGlobales


Dim row0, col0 As Integer
Dim tope1, tope2, tope3, tope4, tope5, tope6, tope7, tope8, tope9, tope10, tope11, tope12 As Integer
Dim boton1, boton2, boton3, boton4, boton5, boton6, boton7 As String
Dim largoBoton1, largoBoton2, largoBoton3, largoBoton4, largoBoton5, largoBoton6, largoBoton7 As Integer
Dim macroBoton1, macroBoton2, macroBoton3, macroBoton4, macroBoton5, macroBoton6, macroBoton7 As String
row0 = 3
col0 = 0

tope1 = 5
tope2 = 23
tope3 = 41
tope4 = 59
tope5 = 77
tope6 = 95
tope7 = 113
tope8 = 131
tope9 = 149
tope10 = 152
tope11 = 157
tope12 = 160


boton1 = "CREAR COPIA"
boton2 = "LIMPIAR"
boton3 = "REPORTE"
boton4 = "F|fffd|RMULAS"
boton5 = "ACTUALIZAR"
boton6 = "REGISTRAR"
boton7 = "REQUERIMIENTO"

largoBoton1 = Len(boton1)
largoBoton2 = Len(boton2)
largoBoton3 = Len(boton3)
largoBoton4 = Len(boton4)
largoBoton5 = Len(boton5)
largoBoton6 = Len(boton6)
largoBoton7 = Len(boton7)

macroBoton1 = "Bot_Publicar_Planeacion_Cajas"
macroBoton2 = "Bot_Limpiar_Servicios_Traspasos"
macroBoton3 = "Bot_Correo_Saldos_Cajas"
macroBoton4 = "EB0_Actualizar_Formulas_Planeacion"
macroBoton5 = "Bot_Actualizar_Saldos_Traspasos"
macroBoton6 = "Bot_Captura_Traspasos"
macroBoton7 = "Bot_PlaneacionCajas"

'sh19 = "PARAMETROS"
Sheets(sh19).Select
Application.Calculation = xlManual

'1. Eliminar hoja sh1 = "pm_PLANEACION_CAJAS"
    On Error Resume Next
    Sheets(sh1).Select
    Application.DisplayAlerts = False
    ActiveWindow.SelectedSheets.Delete
    
    On Error GoTo 0
    
'2. Agregar hoja despues de hoja 3
    Sheets(4).Select
    Sheets.Add After:=ActiveSheet
    ActiveSheet.Name = sh1
    
    'Color de hoja
    With ActiveWorkbook.Sheets(sh1).Tab
        .Color = 6095050
        .TintAndShade = 0
    End With
    
'3. Encabezados
    'ancho primera fila
    Rows("1:1").RowHeight = 48.7
    Rows("2:2").RowHeight = 45
    
    Cells(1, col0 + tope2) = "SALDO COMPARTAMOS T-1"
    Cells(1, col0 + tope3) = "(-) DOTACIONES d|fffd|a T + 1"
    Cells(1, col0 + tope4) = "(-) DOTACIONES EMERGENTES d|fffd|a T + 1"
    Cells(1, col0 + tope5) = "(+) COMPRA EFECTIVO d|fffd|a T"
    Cells(1, col0 + tope6) = "(+) RECEPCI|fffd|N TRASLADO d|fffd|a T"
    Cells(1, col0 + tope7) = "(-) ENV|fffd|O TRASLADO d|fffd|a T"
    Cells(1, col0 + tope8) = "(=) SALDO ESTIMADO d|fffd|a T + 1"
    Cells(1, col0 + tope10 + 1) = "OBTENER REQUERIMIENTOS DE EFECTIVO Y ESTATUS DE SALDO POR PLAZA"
    
    Cells(1, col0 + tope11 + 1) = "(-) DEM CAJA d|fffd|a T + 1"
    Cells(1, col0 + tope11 + 2) = "(-) DEM SUCURSAL d|fffd|a T + 1"
    Cells(1, col0 + tope12) = "(-) TOTAL DEM d|fffd|a T + 1"
    Cells(1, col0 + tope12 + 1) = "(-) ACREDITACI|fffd|N DEM d|fffd|a T + 1"
    Cells(1, col0 + tope12 + 2) = "(-) SALDO DEM d|fffd|a T + 1"
    
    Cells(row0, col0 + 1) = "Medio"
    Cells(row0, col0 + 2) = "IdPlazaMedio"
    Cells(row0, col0 + 3) = "Etv"
    Cells(row0, col0 + 4) = "Plaza"
    Cells(row0, col0 + 5) = "IdPlaza"
    Cells(row0, col0 + 6) = "SaldoInicial B1000"
    Cells(row0, col0 + 7) = "SaldoInicial B500"
    Cells(row0, col0 + 8) = "SaldoInicial B200"
    Cells(row0, col0 + 9) = "SaldoInicial B100"
    Cells(row0, col0 + 10) = "SaldoInicial B50"
    Cells(row0, col0 + 11) = "SaldoInicial B20"
    Cells(row0, col0 + 12) = "SaldoInicial Metalica"
    Cells(row0, col0 + 13) = "SaldoInicial M100"
    Cells(row0, col0 + 14) = "SaldoInicial M20"
    Cells(row0, col0 + 15) = "SaldoInicial M10"
    Cells(row0, col0 + 16) = "SaldoInicial M5"
    Cells(row0, col0 + 17) = "SaldoInicial M2"
    Cells(row0, col0 + 18) = "SaldoInicial M1"
    Cells(row0, col0 + 19) = "SaldoInicial M0.5"
    Cells(row0, col0 + 20) = "SaldoInicial M0.2"
    Cells(row0, col0 + 21) = "SaldoInicial M0.1"
    Cells(row0, col0 + 22) = "SaldoInicial M0.05"
    Cells(row0, col0 + 23).FormulaR1C1 = _
           "=""TOTAL SaldoInicial ""&CHAR(10)&TEXT(SUMIFS(R4C:R1048576C,R4C1:R1048576C1,""TOTALES""),""$#,0.00"")"
    Cells(row0, col0 + 24) = "Dotacion B1000"
    Cells(row0, col0 + 25) = "Dotacion B500"
    Cells(row0, col0 + 26) = "Dotacion B200"
    Cells(row0, col0 + 27) = "Dotacion B100"
    Cells(row0, col0 + 28) = "Dotacion B50"
    Cells(row0, col0 + 29) = "Dotacion B20"
    Cells(row0, col0 + 30) = "Dotacion Metalica"
    Cells(row0, col0 + 31) = "Dotacion M100"
    Cells(row0, col0 + 32) = "Dotacion M20"
    Cells(row0, col0 + 33) = "Dotacion M10"
    Cells(row0, col0 + 34) = "Dotacion M5"
    Cells(row0, col0 + 35) = "Dotacion M2"
    Cells(row0, col0 + 36) = "Dotacion M1"
    Cells(row0, col0 + 37) = "Dotacion M0.5"
    Cells(row0, col0 + 38) = "Dotacion M0.2"
    Cells(row0, col0 + 39) = "Dotacion M0.1"
    Cells(row0, col0 + 40) = "Dotacion M0.05"
    Cells(row0, col0 + 41).FormulaR1C1 = _
           "=""TOTAL DOTACIONES""&CHAR(10)&TEXT(SUMIFS(R4C:R1048576C,R4C1:R1048576C1,""TOTALES""),""$#,0.00"")"
    Cells(row0, col0 + 42) = "Dotacion Emergente B1000"
    Cells(row0, col0 + 43) = "Dotacion Emergente B500"
    Cells(row0, col0 + 44) = "Dotacion Emergente B200"
    Cells(row0, col0 + 45) = "Dotacion Emergente B100"
    Cells(row0, col0 + 46) = "Dotacion Emergente B50"
    Cells(row0, col0 + 47) = "Dotacion Emergente B20"
    Cells(row0, col0 + 48) = "Dotacion Emergente Metalica"
    Cells(row0, col0 + 49) = "Dotacion Emergente M100"
    Cells(row0, col0 + 50) = "Dotacion Emergente M20"
    Cells(row0, col0 + 51) = "Dotacion Emergente M10"
    Cells(row0, col0 + 52) = "Dotacion Emergente M5"
    Cells(row0, col0 + 53) = "Dotacion Emergente M2"
    Cells(row0, col0 + 54) = "Dotacion Emergente M1"
    Cells(row0, col0 + 55) = "Dotacion Emergente M0.5"
    Cells(row0, col0 + 56) = "Dotacion Emergente M0.2"
    Cells(row0, col0 + 57) = "Dotacion Emergente M0.1"
    Cells(row0, col0 + 58) = "Dotacion Emergente M0.05"
    Cells(row0, col0 + 59).FormulaR1C1 = _
           "=""TOTAL DOTACIONES EMERGENTES""&CHAR(10)&TEXT(SUMIFS(R4C:R1048576C,R4C1:R1048576C1,""TOTALES""),""$#,0.00"")"
    
    Cells(row0, col0 + 60) = "Compra B1000"
    Cells(row0, col0 + 61) = "Compra B500"
    Cells(row0, col0 + 62) = "Compra B200"
    Cells(row0, col0 + 63) = "Compra B100"
    Cells(row0, col0 + 64) = "Compra B50"
    Cells(row0, col0 + 65) = "Compra B20"
    Cells(row0, col0 + 66) = "Compra Met|fffd|lica"
    Cells(row0, col0 + 67) = "Compra M100"
    Cells(row0, col0 + 68) = "Compra M20"
    Cells(row0, col0 + 69) = "Compra M10"
    Cells(row0, col0 + 70) = "Compra M5"
    Cells(row0, col0 + 71) = "Compra M2"
    Cells(row0, col0 + 72) = "Compra M1 "
    Cells(row0, col0 + 73) = "Compra M0.5"
    Cells(row0, col0 + 74) = "Compra M0.2"
    Cells(row0, col0 + 75) = "Compra M0.1"
    Cells(row0, col0 + 76) = "Compra M0.05"
    Cells(row0, col0 + 77).FormulaR1C1 = _
           "=""TOTAL COMPRA EFECTIVO T""&CHAR(10)&TEXT(SUMIFS(R4C:R1048576C,R4C1:R1048576C1,""TOTALES""),""$#,0.00"")"
    
    Cells(row0, col0 + 78) = "TrasladoIn B1000"
    Cells(row0, col0 + 79) = "TrasladoIn B500"
    Cells(row0, col0 + 80) = "TrasladoIn B200"
    Cells(row0, col0 + 81) = "TrasladoIn B100"
    Cells(row0, col0 + 82) = "TrasladoIn B50"
    Cells(row0, col0 + 83) = "TrasladoIn B20"
    Cells(row0, col0 + 84) = "TrasladoIn Met|fffd|lica"
    Cells(row0, col0 + 85) = "TrasladoIn M100"
    Cells(row0, col0 + 86) = "TrasladoIn M20"
    Cells(row0, col0 + 87) = "TrasladoIn M10"
    Cells(row0, col0 + 88) = "TrasladoIn M5"
    Cells(row0, col0 + 89) = "TrasladoIn M2"
    Cells(row0, col0 + 90) = "TrasladoIn M1"
    Cells(row0, col0 + 91) = "TrasladoIn M0.5"
    Cells(row0, col0 + 92) = "TrasladoIn M0.2"
    Cells(row0, col0 + 93) = "TrasladoIn M0.1"
    Cells(row0, col0 + 94) = "TrasladoIn M0.05"
    Cells(row0, col0 + 95).FormulaR1C1 = _
           "=""TOTAL RECEPCI|fffd|N TRASLADO T""&CHAR(10)&TEXT(SUMIFS(R4C:R1048576C,R4C1:R1048576C1,""TOTALES""),""$#,0.00"")"
    
    Cells(row0, col0 + 96) = "TrasladoOut B1000"
    Cells(row0, col0 + 97) = "TrasladoOut B500"
    Cells(row0, col0 + 98) = "TrasladoOut B200"
    Cells(row0, col0 + 99) = "TrasladoOut B100"
    Cells(row0, col0 + 100) = "TrasladoOut B50"
    Cells(row0, col0 + 101) = "TrasladoOut B20"
    Cells(row0, col0 + 102) = "TrasladoOut Met|fffd|lica"
    Cells(row0, col0 + 103) = "TrasladoOut M100"
    Cells(row0, col0 + 104) = "TrasladoOut M20"
    Cells(row0, col0 + 105) = "TrasladoOut M10"
    Cells(row0, col0 + 106) = "TrasladoOut M5"
    Cells(row0, col0 + 107) = "TrasladoOut M2"
    Cells(row0, col0 + 108) = "TrasladoOut M1"
    Cells(row0, col0 + 109) = "TrasladoOut M0.5"
    Cells(row0, col0 + 110) = "TrasladoOut M0.2"
    Cells(row0, col0 + 111) = "TrasladoOut M0.1"
    Cells(row0, col0 + 112) = "TrasladoOut M0.05"
    Cells(row0, col0 + 113).FormulaR1C1 = _
           "=""TOTAL ENV|fffd|O TRANSFERENCIAS T""&CHAR(10)&TEXT(SUMIFS(R4C:R1048576C,R4C1:R1048576C1,""TOTALES""),""$#,0.00"")"
    
    Cells(row0, col0 + 114) = "SaldoFisico B1000"
    Cells(row0, col0 + 115) = "SaldoFisico B500"
    Cells(row0, col0 + 116) = "SaldoFisico B200"
    Cells(row0, col0 + 117) = "SaldoFisico B100"
    Cells(row0, col0 + 118) = "SaldoFisico B50"
    Cells(row0, col0 + 119) = "SaldoFisico B20"
    Cells(row0, col0 + 120) = "SaldoFisico Met|fffd|lica"
    Cells(row0, col0 + 121) = "SaldoFisico M100"
    Cells(row0, col0 + 122) = "SaldoFisico M20"
    Cells(row0, col0 + 123) = "SaldoFisico M10"
    Cells(row0, col0 + 124) = "SaldoFisico M5"
    Cells(row0, col0 + 125) = "SaldoFisico M2"
    Cells(row0, col0 + 126) = "SaldoFisico M1"
    Cells(row0, col0 + 127) = "SaldoFisico M0.5"
    Cells(row0, col0 + 128) = "SaldoFisico M0.2"
    Cells(row0, col0 + 129) = "SaldoFisico M0.1"
    Cells(row0, col0 + 130) = "SaldoFisico M0.05"
    Cells(row0, col0 + 131).FormulaR1C1 = _
           "=""TOTAL SALDO F|fffd|SICO T""&CHAR(10)&TEXT(SUMIFS(R4C:R1048576C,R4C1:R1048576C1,""TOTALES""),""$#,0.00"")"
           
    Cells(row0, col0 + 132) = "SaldoEstimado B1000"
    Cells(row0, col0 + 133) = "SaldoEstimado B500"
    Cells(row0, col0 + 134) = "SaldoEstimado B200"
    Cells(row0, col0 + 135) = "SaldoEstimado B100"
    Cells(row0, col0 + 136) = "SaldoEstimado B50"
    Cells(row0, col0 + 137) = "SaldoEstimado B20"
    Cells(row0, col0 + 138) = "SaldoEstimado Met|fffd|lica"
    Cells(row0, col0 + 139) = "SaldoEstimado M100"
    Cells(row0, col0 + 140) = "SaldoEstimado M20"
    Cells(row0, col0 + 141) = "SaldoEstimado M10"
    Cells(row0, col0 + 142) = "SaldoEstimado M5"
    Cells(row0, col0 + 143) = "SaldoEstimado M2"
    Cells(row0, col0 + 144) = "SaldoEstimado M1"
    Cells(row0, col0 + 145) = "SaldoEstimado M0.5"
    Cells(row0, col0 + 146) = "SaldoEstimado M.2"
    Cells(row0, col0 + 147) = "SaldoEstimado M.1"
    Cells(row0, col0 + 148) = "SaldoEstimado M.05"
    Cells(row0, col0 + 149).FormulaR1C1 = _
           "=""TOTAL SALDO T+1""&CHAR(10)&TEXT(SUMIFS(R4C:R1048576C,R4C1:R1048576C1,""TOTALES""),""$#,0.00"")"
           
    Cells(row0, col0 + 150) = "SALDO NO DISPONIBLE (COMPRAS)"
    Cells(row0, col0 + 151) = "SALDO NO DISPONIBLE (AJUSTES)"
    Cells(row0, col0 + 152) = "SALDO DISPONIBLE"
    Cells(row0, col0 + 153).FormulaR1C1 = _
           "=""REQUERIMIENTO DE EFECTIVO"" & CHAR(10)&TEXT(SUMIFS(R8C153:R1048576C153,R8C1:R1048576C1,""TOTALES""),""$###,##0.00"")"
    
    Cells(row0, col0 + 154).FormulaR1C1 = _
           "=""SUMA ORDENES DE COMPRA"" & CHAR(10)&TEXT(SUMIFS(R8C154:R1048576C154,R8C1:R1048576C1,""TOTALES""),""$###,##0.00"")"
    
    Cells(row0, col0 + 155) = "ESTATUS CAJA"
    Cells(row0, col0 + 156) = "CI-CO"
    Cells(row0, col0 + 157) = "NULL0"
    Cells(row0, col0 + 158).FormulaR1C1 = _
           "=""DEM CAJA""&CHAR(10)&TEXT(SUMIFS(R4C:R1048576C,R4C1:R1048576C1,""TOTALES""),""$#,0.00"")"
    Cells(row0, col0 + 159).FormulaR1C1 = _
           "=""DEM SUCURSAL""&CHAR(10)&TEXT(SUMIFS(R4C:R1048576C,R4C1:R1048576C1,""TOTALES""),""$#,0.00"")"
    Cells(row0, col0 + 160).FormulaR1C1 = _
           "=""TOTAL DEM""&CHAR(10)&TEXT(SUMIFS(R4C:R1048576C,R4C1:R1048576C1,""TOTALES""),""$#,0.00"")"
    Cells(row0, col0 + 161).FormulaR1C1 = _
           "=""ACREDITACI|fffd|N DEM""&CHAR(10)&TEXT(SUMIFS(R4C:R1048576C,R4C1:R1048576C1,""TOTALES""),""$#,0.00"")"
    Cells(row0, col0 + 162).FormulaR1C1 = _
           "=""SALDO DEM""&CHAR(10)&TEXT(SUMIFS(R4C:R1048576C,R4C1:R1048576C1,""TOTALES""),""$#,0.00"")"


    
'4 Formato
'encabezados
    'secci|fffd|n 1 GENERAL
    Range(Cells(1, 1), Cells(row0, tope1)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'GRIS
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 7432798
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With


    'secci|fffd|n 2 SALDO INICIAL
    Range(Cells(1, tope1 + 1), Cells(row0, tope2)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'AZUL
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 12611584
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    'secci|fffd|n 3 DOTACIONES PROGRAMADAS
    Range(Cells(1, tope2 + 1), Cells(row0, tope3)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'ROJO
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 192
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    'secci|fffd|n 4 DOTACIONES EMERGENTES
    Range(Cells(1, tope3 + 1), Cells(row0, tope4)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'ROJO
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 192
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    

    'secci|fffd|n 5 COMPRAS
    Range(Cells(1, tope4 + 1), Cells(row0, tope5)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'AZUL
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 12611584
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    
   'secci|fffd|n 6 RECEPCI|fffd|N TRASLADO
    Range(Cells(1, tope5 + 1), Cells(row0, tope6)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'AZUL
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 12611584
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    'secci|fffd|n 7 ENV|fffd|O TRASLADO
    Range(Cells(1, tope6 + 1), Cells(row0, tope7)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'ROJO
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 192
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    'secci|fffd|n 8 SALDO F|fffd|SICO
    Range(Cells(1, tope7 + 1), Cells(row0, tope8)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'VERDE
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorAccent6
        .TintAndShade = -0.249977111117893
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    
    'secci|fffd|n 9 SALDO ESTIMADO
    Range(Cells(1, tope8 + 1), Cells(row0, tope10)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'AMARILLO
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 39423
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    'secci|fffd|n 10
    Range(Cells(1, tope10 + 1), Cells(row0, tope11)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'AZUL OSCURO
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 6299648
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    'secci|fffd|n 11
    Range(Cells(1, tope11 + 1), Cells(row0, tope12)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'ROJO
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 192
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    'secci|fffd|n 12
    Range(Cells(1, tope12 + 1), Cells(row0, tope12 + 1)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'AZUL
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 12611584
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    'secci|fffd|n 13
    Range(Cells(1, tope12 + 2), Cells(row0, tope12 + 2)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'AMARILLO
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 39423
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    
    
    'formato de columnas
    Columns("A:A").Select
    Selection.ColumnWidth = 12
    Columns("B:B").Select
    Selection.ColumnWidth = 10
    Columns("C:C").Select
    Selection.ColumnWidth = 12
    Columns("D:D").Select
    Selection.ColumnWidth = 18
    Columns("E:E").Select
    Selection.ColumnWidth = 2.5
    
    Columns("F:FF").Select
    Selection.ColumnWidth = 20
    Selection.Style = "Currency"
    
    Range("W:W, AO:AO, BG:BG, BY:BY, CQ:CQ, DI:DI, EA:AE, ES:FF ").Select
    Selection.ColumnWidth = 21.7
    
    'ancho primera fila
    Rows("1:1").RowHeight = 57
    Rows("2:2").RowHeight = 34
    Rows("3:3").RowHeight = 40
    
    'agrupar
    Columns("E:V").Select
    Selection.Columns.Group
    
    Columns("X:AN").Select
    Selection.Columns.Group
    
    Columns("AP:BF").Select
    Selection.Columns.Group
    
    Columns("BH:BX").Select
    Selection.Columns.Group
    
    Columns("BH:BX").Select
    Selection.Columns.Group
    
    Columns("BZ:CP").Select
    Selection.Columns.Group
    
    Columns("CR:DH").Select
    Selection.Columns.Group
    
    Columns("DJ:DZ").Select
    Selection.Columns.Group
    
    Columns("EB:ER").Select
    Selection.Columns.Group
    
    
'5. Botones ACTUALIZAR FORMULAR (CP_4FormulasDem) - MEN|fffd| DEM (Bot_Dem_Dinamico) - LIMPIAR (Bot_Limpiar_DEM)
    'BOTON 1
        'LEFT - TOP - WIDTH - HEIGHT
    ActiveSheet.Buttons.Add(3.75, 48.75, 93, 29.25).Select
    Selection.OnAction = macroBoton1
    Selection.Characters.Text = boton1
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=largoBoton1).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    'BOTON 2
    
    ActiveSheet.Buttons.Add(107.75, 48.75, 93, 29.25).Select
    Selection.OnAction = macroBoton2
    Selection.Characters.Text = boton2
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=largoBoton2).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10.5
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    'BOT|fffd|N 3
    
    ActiveSheet.Buttons.Add(211.75, 48.75, 93, 29.25).Select
    Selection.OnAction = macroBoton3
    Selection.Characters.Text = boton3
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=largoBoton3).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    'BOT|fffd|N 4
    
    ActiveSheet.Buttons.Add(315.75, 48.75, 93, 29.25).Select
    Selection.OnAction = macroBoton4
    Selection.Characters.Text = boton4
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=largoBoton4).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    'BOT|fffd|N 5
    
    ActiveSheet.Buttons.Add(15096, 48.75, 93, 29.25).Select
    Selection.OnAction = macroBoton5
    Selection.Characters.Text = boton5
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=largoBoton5).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    'BOT|fffd|N 6
    
    ActiveSheet.Buttons.Add(18120, 48.75, 93, 29.25).Select
    Selection.OnAction = macroBoton6
    Selection.Characters.Text = boton6
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=largoBoton6).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    'BOT|fffd|N 7
    
    ActiveSheet.Buttons.Add(24788, 48.75, 110, 29.25).Select
    Selection.OnAction = macroBoton7
    Selection.Characters.Text = boton7
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=largoBoton7).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    
    Sheets(sh1).Select
    Application.Calculation = xlAutomatic
    ActiveWindow.Zoom = 70

    
End Sub

Sub DD4_Hoja_Salidas()

Call VariablesGlobales

'sh19 = "PARAMETROS"
Sheets(sh19).Select

'1. Eliminar hoja sh13 = "MovimientosSalida"
    On Error Resume Next
    Sheets(sh13).Select
    Application.DisplayAlerts = False
    ActiveWindow.SelectedSheets.Delete
    
    On Error GoTo 0
    
'2. Agregar hoja despues de hoja 3
    Sheets(10).Select
    Sheets.Add After:=ActiveSheet
    ActiveSheet.Name = sh13
    
    Sheets(sh13).Select
    
End Sub


Sub DD5_Hoja_Entradas()

Call VariablesGlobales

'sh19 = "PARAMETROS"
Sheets(sh19).Select


'1. Eliminar hoja sh16 = "MovimientosEntrada"
    On Error Resume Next
    Sheets(sh16).Select
    Application.DisplayAlerts = False
    ActiveWindow.SelectedSheets.Delete
    
    On Error GoTo 0
    
'2. Agregar hoja despues de hoja 3
    Sheets(11).Select
    Sheets.Add After:=ActiveSheet
    ActiveSheet.Name = sh16
    
    Sheets(sh16).Select
    
End Sub





Sub DD6_Hoja_Servicios()
Call VariablesGlobales


Dim row0, col0 As Integer
Dim tope1, tope2, tope3, tope4, tope5, tope6, tope7, tope8, tope9, tope10, tope11, tope12 As Integer
Dim boton1, boton2, boton3, boton4, boton5, boton6, boton7 As String
Dim largoBoton1, largoBoton2, largoBoton3, largoBoton4, largoBoton5, largoBoton6, largoBoton7 As Integer
Dim macroBoton1, macroBoton2, macroBoton3, macroBoton4, macroBoton5, macroBoton6, macroBoton7 As String
row0 = 3
col0 = 0

tope1 = 5
tope2 = 22
tope3 = 29
tope4 = 55
tope5 = 59
tope6 = 78


boton1 = "MEN|fffd|"
boton2 = "MEN|fffd|"
boton3 = "MEN|fffd|"
boton4 = "MEN|fffd|"


largoBoton1 = Len(boton1)
largoBoton2 = Len(boton2)
largoBoton3 = Len(boton3)
largoBoton4 = Len(boton4)


'MENU Bot_Menu_Servicios
'ACTUALIZAR SALDOS Bot_Actualizar_SInicial_SActual_LOperativo
'CREAR COPIA Bot_Publicar_Planeacion_Servicios
'SALDO INICIAL Bot_Actualizar_SInicial
'MONITOREO SALDOS Bot_Actualizar_SaldoUltimoMonitoreo
'L|fffd|MITE OPERATIVO Bot_Actualizar_LimiteOperativo
'REGISTRO MASIVO Bot_RegistroMasivo
'REGISTRO UNITARIO Bot_Registrar_Servicios
'REQUERIMIENTO EFECTIVO Bot_Ordenes_Dotacion_Sucursales
'LIMPIAR Bot_LimpiarDotaciones
'VALIDAR Bot_Validar_Registro_Masivo


macroBoton1 = "Bot_Menu_Servicios"
macroBoton2 = "Bot_Menu_Servicios"
macroBoton3 = "Bot_Menu_Servicios"
macroBoton4 = "Bot_Menu_Servicios"


'sh19 = "PARAMETROS"
Sheets(sh19).Select
Application.Calculation = xlManual

'1. Eliminar hoja sh3 = "pm_PLANEACION_SERVICIOS"
    On Error Resume Next
    Sheets(sh3).Select
    Application.DisplayAlerts = False
    ActiveWindow.SelectedSheets.Delete
    
    On Error GoTo 0
    
'2. Agregar hoja despues de hoja 5
    Sheets(5).Select
    Sheets.Add After:=ActiveSheet
    ActiveSheet.Name = sh3
    
    'Color de hoja
    With ActiveWorkbook.Sheets(sh3).Tab
        .Color = 16750899
        .TintAndShade = 0
    End With
    
'3. Encabezados
    'ancho primera fila
    Rows("1:1").RowHeight = 48.7
    Rows("2:2").RowHeight = 45
    
    Cells(1, col0 + 1) = "I  N  F  O  R  M  A  C  I  |fffd|  N       G  E  N  E  R  A  L"
    Cells(1, col0 + tope1 + 1) = "M  O  N  I  T  O  R  E  O       D  E       S  A  L  D  O  S"
    Cells(1, col0 + tope2 + 1) = "P R O N |fffd| S T I C O     M O D E L O     -     D  I  S  P  E  R  S  I  |fffd|  N"
    Cells(1, col0 + tope3 + 1) = "P  L  A  N  E  A  C  I  |fffd|  N       S  E  R  V  I  C  I  O  S       E  T  V"
    
    
    Cells(row0, col0 + 1) = "Id Plaza"
    Cells(row0, col0 + 2) = "Etv"
    Cells(row0, col0 + 3) = "Plaza"
    Cells(row0, col0 + 4) = "Id Sucursal"
    Cells(row0, col0 + 5) = "Sucursal"
    Cells(row0, col0 + 6) = "Saldo Inicial"
    Cells(row0, col0 + 7) = "Inventario Inicial (d|fffd|as)"
    Cells(row0, col0 + 8) = "Saldo corte"
    Cells(row0, col0 + 9) = "Inventario Actual (d|fffd|as)"
    Cells(row0, col0 + 10) = "L|fffd|mite Operativo"
    Cells(row0, col0 + 11) = "null01"
    Cells(row0, col0 + 12) = "Cash In Pron|fffd|stico"
    Cells(row0, col0 + 13) = "ODP-TDD T-1 Capturada"
    Cells(row0, col0 + 14) = "Remesa Capturada"
    Cells(row0, col0 + 15) = "CASH IN - CASH OUT ESPERADO"
    Cells(row0, col0 + 16) = "CASH IN - CASH OUT PRON|fffd|STICO"
    Cells(row0, col0 + 17) = "Variaci|fffd|n CI CO Pron|fffd|stico vs CICO Esperado"
    Cells(row0, col0 + 18) = "DOTACI|fffd|N PROGRAMADA"
    Cells(row0, col0 + 19) = "DOTACI|fffd|N RECIBIDA"
    Cells(row0, col0 + 20) = "SALDO CONSUMIDO"
    Cells(row0, col0 + 21) = "PENDIENTE POR DISPERSAR"
    Cells(row0, col0 + 22) = "Estatus Comportamiento"
    Cells(row0, col0 + 23) = "Saldo M|fffd|nimo de Invetario"
    Cells(row0, col0 + 24) = "Saldo M|fffd|ximo de Inventario"
    Cells(row0, col0 + 25) = "ODP-TDD-Remesas Capturadas"
    Cells(row0, col0 + 26) = "Cash In"
    Cells(row0, col0 + 27) = "Cash In - Capturadas"
    Cells(row0, col0 + 28) = "Cash In - Cash Out para d|fffd|a t+1"
    Cells(row0, col0 + 29) = "Orden Dotaci|fffd|n"
    Cells(row0, col0 + 30) = "Servicio Programado"
    Cells(row0, col0 + 31) = "Importe Servicio"
    Cells(row0, col0 + 32) = "Saldo Estimado"
    Cells(row0, col0 + 33) = "D|fffd|as Inventario Estimados"
    Cells(row0, col0 + 34) = "Mensaje Validaci|fffd|n"
    Cells(row0, col0 + 35) = "Etv Servicio"
    Cells(row0, col0 + 36) = "Medio Afectacion"
    Cells(row0, col0 + 37) = "Fecha Servicio"
    Cells(row0, col0 + 38) = "Den_B1000"
    Cells(row0, col0 + 39) = "Den_B500"
    Cells(row0, col0 + 40) = "Den_B200"
    Cells(row0, col0 + 41) = "Den_B100"
    Cells(row0, col0 + 42) = "Den_B50"
    Cells(row0, col0 + 43) = "Den_B20"
    Cells(row0, col0 + 44) = "Metalica"
    Cells(row0, col0 + 45) = "Den_M100"
    Cells(row0, col0 + 46) = "Den_M20"
    Cells(row0, col0 + 47) = "Den_M10"
    Cells(row0, col0 + 48) = "Den_M5"
    Cells(row0, col0 + 49) = "Den_M2"
    Cells(row0, col0 + 50) = "Den_M1"
    Cells(row0, col0 + 51) = "Den_M0.5"
    Cells(row0, col0 + 52) = "Den_M0.2"
    Cells(row0, col0 + 53) = "Den_M0.1"
    Cells(row0, col0 + 54) = "Den_M0.05_E"
    Cells(row0, col0 + 55) = "Suma_Denominaciones"
    Cells(row0, col0 + 56) = "Destino Concentraci|fffd|n"
    Cells(row0, col0 + 57) = "Sucursal Destino"
    Cells(row0, col0 + 58) = "CAJA DESTINO (PLAZA / ETV)"
    Cells(row0, col0 + 59) = "Requerimiento Concentraci|fffd|n"
    Cells(row0, col0 + 60) = "Revolvente_B1000"
    Cells(row0, col0 + 61) = "Revolvente_B500"
    Cells(row0, col0 + 62) = "Revolvente_B200"
    Cells(row0, col0 + 63) = "Revolvente_B100"
    Cells(row0, col0 + 64) = "Revolvente_B50"
    Cells(row0, col0 + 65) = "Revolvente_B20"
    Cells(row0, col0 + 66) = "Metalica"
    Cells(row0, col0 + 67) = "Revolvente_M100"
    Cells(row0, col0 + 68) = "Revolvente_M20"
    Cells(row0, col0 + 69) = "Revolvente_M10"
    Cells(row0, col0 + 70) = "Revolvente_M5"
    Cells(row0, col0 + 71) = "Revolvente_M2"
    Cells(row0, col0 + 72) = "Revolvente_M1"
    Cells(row0, col0 + 73) = "Revolvente_M0.5"
    Cells(row0, col0 + 74) = "Revolvente_M0.2"
    Cells(row0, col0 + 75) = "Revolvente_M0.1"
    Cells(row0, col0 + 76) = "Revolvente_M0.05_E"
    Cells(row0, col0 + 77) = "Suma_Revolvente"
    Cells(row0, col0 + 78) = "REGISTRO EN DOTACIONES"


    
'4 Formato
'encabezados
    'secci|fffd|n 1 INFORMACI|fffd|N GENERAL
    Range(Cells(1, 1), Cells(row0, tope1)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'GRIS
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 7432798
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With


    'secci|fffd|n 2 MONITOREO DE SALDOS
    Range(Cells(1, tope1 + 1), Cells(row0, tope2)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'ROJO
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 192
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    'secci|fffd|n 3 PRON|fffd|STICO MODELO DOTACIONES Y CONCENTRACIONES
    Range(Cells(1, tope2 + 1), Cells(row0, tope3)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'AZUL OSCURO
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 6299648
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    'secci|fffd|n 4 PLANEACI|fffd|N SERVICIOS ETV
    Range(Cells(1, tope3 + 1), Cells(row0, tope4)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'AMARILLO
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 39423
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    

    'secci|fffd|n 5
    Range(Cells(1, tope4 + 1), Cells(row0, tope6)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'AZUL
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 12611584
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    
    
    'formato de columnas
    Columns("A:A").Select
    Selection.ColumnWidth = 5.9
    Columns("B:B").Select
    Selection.ColumnWidth = 10
    Columns("C:C").Select
    Selection.ColumnWidth = 14
    Columns("D:D").Select
    Selection.ColumnWidth = 6.4
    Columns("E:E").Select
    Selection.ColumnWidth = 22
    Range("F:F, H:H, J:X, AC:AE, AI:BX, AE:AE").Select
    Selection.ColumnWidth = 15
    Range("G:G, I:I").Select
    Selection.ColumnWidth = 7.6
    
    Range("W:AC, AE:AF").Select
    Selection.ColumnWidth = 24
    Range("AH:AH").Select
    Selection.ColumnWidth = 31
    
    Range("F:BX").Select
    Selection.Style = "Currency"
    'NUMERO
    Range("G:G, I:I, AG:AG").Select
    Selection.NumberFormat = "0.00"
    'FECHA
    Range("AK:AK").Select
    Selection.NumberFormat = "m/d/yyyy"
    
'    'HORA
'    Range("T:T").Select
'    Selection.NumberFormat = "hh:mm:ss am/pm"

    'ancho primera fila
    Rows("1:1").RowHeight = 25
    Rows("2:2").RowHeight = 45
    Rows("3:3").RowHeight = 81.75
    
    
    'Tama|fffd|o letra fila 1
    Rows("1:1").Select
    With Selection
        .HorizontalAlignment = xlLeft
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection.Font
        .Name = "Verdana"
        .size = 14
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    
    
    'agrupar
    Columns("A:C").Select
    Selection.Columns.Group
    
    Columns("F:G").Select
    Selection.Columns.Group
    
    Columns("K:N").Select
    Selection.Columns.Group
    
    Columns("R:U").Select
    Selection.Columns.Group
    
    Columns("W:AA").Select
    Selection.Columns.Group
    
    Columns("AF:AH").Select
    Selection.Columns.Group
    
    Columns("AL:BB").Select
    Selection.Columns.Group
    
    Columns("BD:BZ").Select
    Selection.Columns.Group
    
    
    
'5. Botones ACTUALIZAR FORMULAR (CP_4FormulasDem) - MEN|fffd| DEM (Bot_Dem_Dinamico) - LIMPIAR (Bot_Limpiar_DEM)

    'BOTON 1
        'LEFT - TOP - WIDTH - HEIGHT
    ActiveSheet.Buttons.Add(237.75, 32.25, 93, 29.25).Select
    Selection.OnAction = macroBoton1
    Selection.Characters.Text = boton1
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=largoBoton1).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    'BOTON 2
    
    ActiveSheet.Buttons.Add(674, 32.25, 93, 29.25).Select
    Selection.OnAction = macroBoton2
    Selection.Characters.Text = boton2
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=largoBoton2).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10.5
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    'BOT|fffd|N 3
    
    ActiveSheet.Buttons.Add(2471.5, 32.25, 93, 29.25).Select
    Selection.OnAction = macroBoton3
    Selection.Characters.Text = boton3
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=largoBoton3).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    'BOT|fffd|N 4
    
    ActiveSheet.Buttons.Add(3704.25, 32.25, 93, 29.25).Select
    Selection.OnAction = macroBoton4
    Selection.Characters.Text = boton4
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=largoBoton4).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    Sheets(sh3).Select
    Application.Calculation = xlAutomatic
    ActiveWindow.Zoom = 70

    
End Sub



Sub DD7_Hoja_Compras()
Call VariablesGlobales


Dim row0, col0 As Integer
Dim tope1, tope2, tope3, tope4, tope5, tope6, tope7, tope8, tope9, tope10, tope11, tope12 As Integer
Dim boton1, boton2, boton3, boton4, boton5, boton6, boton7 As String
Dim largoBoton1, largoBoton2, largoBoton3, largoBoton4, largoBoton5, largoBoton6, largoBoton7 As Integer
Dim macroBoton1, macroBoton2, macroBoton3, macroBoton4, macroBoton5, macroBoton6, macroBoton7 As String
row0 = 5
col0 = 0

tope1 = 14
tope2 = 32
tope3 = 37

boton1 = "REGISTRAR / MODIFICAR"
boton2 = "CREAR COPIA"
boton3 = "LIMPIAR"
boton4 = "FORMATO TESORER|fffd|A "
    

largoBoton1 = Len(boton1)
largoBoton2 = Len(boton2)
largoBoton3 = Len(boton3)
largoBoton4 = Len(boton4)


macroBoton1 = "Bot_Captura_Compras"
macroBoton2 = "CH0_4TxtComprasHoy"
macroBoton3 = "Bot_Limpiar_Compras"
macroBoton4 = "Bot_Pagos_Tesoreria"


'sh19 = "PARAMETROS"
Sheets(sh19).Select
Application.Calculation = xlManual

'1. Eliminar hoja sh17 = "Registro COMPRAS"
    On Error Resume Next
    Sheets(sh17).Select
    Application.DisplayAlerts = False
    ActiveWindow.SelectedSheets.Delete
    
    On Error GoTo 0
    
'2. Agregar hoja despues de hoja 5
    Sheets(1).Select
    Sheets.Add After:=ActiveSheet
    ActiveSheet.Name = sh17
    
    'Color de hoja
    With ActiveWorkbook.Sheets(sh17).Tab
        .Color = 5287936
        .TintAndShade = 0
    End With
    
'3. Encabezados
    
    Cells(row0, col0 + 1) = "Estatus Compra"
    Cells(row0, col0 + 2) = "Medio Abastecimiento"
    Cells(row0, col0 + 3) = "Plaza"
    Cells(row0, col0 + 4) = "ETV Destino (Compra)"
    Cells(row0, col0 + 5) = "IdPlaza"
    Cells(row0, col0 + 6) = "Fecha Compra"
    Cells(row0, col0 + 7) = "Monto Inicial Requerido"
    Cells(row0, col0 + 8) = "Monto Comprado"
    Cells(row0, col0 + 9) = "Vendedor"
    Cells(row0, col0 + 10) = "Caja ETV Origen (Vendedor)"
    Cells(row0, col0 + 11) = "Plaza (Vendedor)"
    Cells(row0, col0 + 12) = "Respuesta (Vendedor)"
    Cells(row0, col0 + 13) = "ETV Traslado"
    Cells(row0, col0 + 14) = "Fecha Traslado"
    Cells(row0, col0 + 15) = "TOTAL BILLETE"
    Cells(row0, col0 + 16) = "BILLETE $1,000.00"
    Cells(row0, col0 + 17) = "BILLETE $500.00"
    Cells(row0, col0 + 18) = "BILLETE $200.00"
    Cells(row0, col0 + 19) = "BILLETE $100.00"
    Cells(row0, col0 + 20) = "BILLETE $50.00"
    Cells(row0, col0 + 21) = "BILLETE $20.00"
    Cells(row0, col0 + 22) = "TOTAL MORRALLA"
    Cells(row0, col0 + 23) = "MONEDA $100.00"
    Cells(row0, col0 + 24) = "MONEDA $20.00"
    Cells(row0, col0 + 25) = "MONEDA $10.00"
    Cells(row0, col0 + 26) = "MONEDA $5.00"
    Cells(row0, col0 + 27) = "MONEDA $2.00"
    Cells(row0, col0 + 28) = "MONEDA $1.00"
    Cells(row0, col0 + 29) = "MONEDA $0.50"
    Cells(row0, col0 + 30) = "MONEDA $0.20"
    Cells(row0, col0 + 31) = "MONEDA $0.10"
    Cells(row0, col0 + 32) = "MONEDA $0.05"
    Cells(row0, col0 + 33) = "Folio Solicitud SAP LOGON"
    Cells(row0, col0 + 34) = "Clave Rastreo (PDF Tesorer|fffd|a)"
    Cells(row0, col0 + 35) = "USUARIO CAPTURA"
    Cells(row0, col0 + 36) = "HORA CAPTURA"
    Cells(row0, col0 + 37) = "FOLIO CONTROL"



    
'4 Formato
'encabezados
    'secci|fffd|n 1 INFORMACI|fffd|N GENERAL
    Range(Cells(1, 1), Cells(row0, tope1)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'GRIS
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 7432798
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With


    'secci|fffd|n 2 MONITOREO DE SALDOS
    Range(Cells(1, tope1 + 1), Cells(row0, tope2)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'AMARILLO
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 39423
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    'secci|fffd|n 3 PRON|fffd|STICO MODELO DOTACIONES Y CONCENTRACIONES
    Range(Cells(1, tope2 + 1), Cells(row0, tope3)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'GRIS
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 7432798
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    
    
    
    
    
    'formato de columnas
    Columns("A:A").Select
    Selection.ColumnWidth = 16
    Columns("B:B").Select
    Selection.ColumnWidth = 16
    Columns("C:C").Select
    Selection.ColumnWidth = 20
    Columns("D:D").Select
    Selection.ColumnWidth = 12
    Columns("E:E").Select
    Selection.ColumnWidth = 10.6
    Range("F:AK").Select
    Selection.ColumnWidth = 12
    
    Range("G:AF").Select
    Selection.Style = "Currency"

    'FECHA
    Range("F:F,AJ:AJ").Select
    Selection.NumberFormat = "m/d/yyyy"
    
    'ancho primera fila
    Rows("5:5").RowHeight = 24
    

    
'5. Botones ACTUALIZAR FORMULAR (CP_4FormulasDem) - MEN|fffd| DEM (Bot_Dem_Dinamico) - LIMPIAR (Bot_Limpiar_DEM)

    'BOTON 1
        'LEFT - TOP - WIDTH - HEIGHT
    ActiveSheet.Buttons.Add(5, 10.5, 110, 29.25).Select
    Selection.OnAction = macroBoton1
    Selection.Characters.Text = boton1
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=largoBoton1).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    'BOTON 2
    
    ActiveSheet.Buttons.Add(130, 10.5, 110, 29.25).Select
    Selection.OnAction = macroBoton2
    Selection.Characters.Text = boton2
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=largoBoton2).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10.5
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    'BOT|fffd|N 3
    
    ActiveSheet.Buttons.Add(255, 10.5, 110, 29.25).Select
    Selection.OnAction = macroBoton3
    Selection.Characters.Text = boton3
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=largoBoton3).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    'BOT|fffd|N 4
    
    ActiveSheet.Buttons.Add(380, 10.5, 110, 29.25).Select
    Selection.OnAction = macroBoton4
    Selection.Characters.Text = boton4
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=largoBoton4).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    
    Sheets(sh17).Select
    Application.Calculation = xlAutomatic
    ActiveWindow.Zoom = 70

    
End Sub





Sub DD8_Hoja_Planeacion_Compras()
Call VariablesGlobales


Dim row0, col0 As Integer
Dim tope1, tope2, tope3, tope4, tope5, tope6, tope7, tope8, tope9, tope10, tope11, tope12 As Integer
Dim boton1, boton2, boton3, boton4, boton5, boton6, boton7 As String
Dim largoBoton1, largoBoton2, largoBoton3, largoBoton4, largoBoton5, largoBoton6, largoBoton7 As Integer
Dim macroBoton1, macroBoton2, macroBoton3, macroBoton4, macroBoton5, macroBoton6, macroBoton7 As String
row0 = 5
col0 = 0

tope1 = 14
tope2 = 32
tope3 = 37


'sh19 = "PARAMETROS"
Sheets(sh19).Select
Application.Calculation = xlManual

'1. Eliminar hoja sh24 = "pm_PLANEACION_COMPRAS"
    On Error Resume Next
    Sheets(sh24).Select
    Application.DisplayAlerts = False
    ActiveWindow.SelectedSheets.Delete
    
    On Error GoTo 0
    
'2. Agregar hoja despues de hoja 5
    Sheets(2).Select
    Sheets.Add After:=ActiveSheet
    ActiveSheet.Name = sh24
    
    'Color de hoja
    With ActiveWorkbook.Sheets(sh24).Tab
        .Color = 5296274
        .TintAndShade = 0
    End With
    
'3. Encabezados
    
    Cells(row0, col0 + 1) = "Estatus Compra"
    Cells(row0, col0 + 2) = "Medio Abastecimiento"
    Cells(row0, col0 + 3) = "Plaza"
    Cells(row0, col0 + 4) = "ETV Destino (Compra)"
    Cells(row0, col0 + 5) = "IdPlaza"
    Cells(row0, col0 + 6) = "Fecha Compra"
    Cells(row0, col0 + 7) = "Monto Inicial Requerido"
    Cells(row0, col0 + 8) = "Monto Comprado"
    Cells(row0, col0 + 9) = "Vendedor"
    Cells(row0, col0 + 10) = "Caja ETV Origen (Vendedor)"
    Cells(row0, col0 + 11) = "Plaza (Vendedor)"
    Cells(row0, col0 + 12) = "Respuesta (Vendedor)"
    Cells(row0, col0 + 13) = "ETV Traslado"
    Cells(row0, col0 + 14) = "Fecha Traslado"
    Cells(row0, col0 + 15) = "TOTAL BILLETE"
    Cells(row0, col0 + 16) = "BILLETE $1,000.00"
    Cells(row0, col0 + 17) = "BILLETE $500.00"
    Cells(row0, col0 + 18) = "BILLETE $200.00"
    Cells(row0, col0 + 19) = "BILLETE $100.00"
    Cells(row0, col0 + 20) = "BILLETE $50.00"
    Cells(row0, col0 + 21) = "BILLETE $20.00"
    Cells(row0, col0 + 22) = "TOTAL MORRALLA"
    Cells(row0, col0 + 23) = "MONEDA $100.00"
    Cells(row0, col0 + 24) = "MONEDA $20.00"
    Cells(row0, col0 + 25) = "MONEDA $10.00"
    Cells(row0, col0 + 26) = "MONEDA $5.00"
    Cells(row0, col0 + 27) = "MONEDA $2.00"
    Cells(row0, col0 + 28) = "MONEDA $1.00"
    Cells(row0, col0 + 29) = "MONEDA $0.50"
    Cells(row0, col0 + 30) = "MONEDA $0.20"
    Cells(row0, col0 + 31) = "MONEDA $0.10"
    Cells(row0, col0 + 32) = "MONEDA $0.05"
    Cells(row0, col0 + 33) = "Folio Solicitud SAP LOGON"
    Cells(row0, col0 + 34) = "Clave Rastreo (PDF Tesorer|fffd|a)"
    Cells(row0, col0 + 35) = "USUARIO CAPTURA"
    Cells(row0, col0 + 36) = "HORA CAPTURA"
    Cells(row0, col0 + 37) = "FOLIO CONTROL"



    
'4 Formato
'encabezados
    'secci|fffd|n 1 INFORMACI|fffd|N GENERAL
    Range(Cells(1, 1), Cells(row0, tope1)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'GRIS
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 7432798
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With


    'secci|fffd|n 2 MONITOREO DE SALDOS
    Range(Cells(1, tope1 + 1), Cells(row0, tope2)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'AMARILLO
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 39423
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    
    'secci|fffd|n 3 PRON|fffd|STICO MODELO DOTACIONES Y CONCENTRACIONES
    Range(Cells(1, tope2 + 1), Cells(row0, tope3)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'GRIS
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 7432798
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    'formato de columnas
    Columns("A:A").Select
    Selection.ColumnWidth = 16
    Columns("B:B").Select
    Selection.ColumnWidth = 16
    Columns("C:C").Select
    Selection.ColumnWidth = 20
    Columns("D:D").Select
    Selection.ColumnWidth = 12
    Columns("E:E").Select
    Selection.ColumnWidth = 10.6
    Range("F:AK").Select
    Selection.ColumnWidth = 12
    
    Range("G:AF").Select
    Selection.Style = "Currency"

    'FECHA
    Range("F:F,AJ:AJ").Select
    Selection.NumberFormat = "m/d/yyyy"
    
    'ancho primera fila
    Rows("5:5").RowHeight = 24
    
    
    Sheets(sh24).Select
    Application.Calculation = xlAutomatic
    ActiveWindow.Zoom = 70

    
End Sub






Sub DD9_Hoja_Confirmacion_Servicios()
Call VariablesGlobales


Dim row0, col0 As Integer
Dim tope1, tope2, tope3, tope4, tope5, tope6, tope7, tope8, tope9, tope10, tope11, tope12 As Integer
Dim boton1, boton2, boton3, boton4, boton5, boton6, boton7 As String
Dim largoBoton1, largoBoton2, largoBoton3, largoBoton4, largoBoton5, largoBoton6, largoBoton7 As Integer
Dim macroBoton1, macroBoton2, macroBoton3, macroBoton4, macroBoton5, macroBoton6, macroBoton7 As String
row0 = 2
col0 = 0

tope1 = 40
'tope2 = 32
'tope3 = 37

boton1 = "MEN|fffd|"
'boton2 = "CREAR COPIA"
'boton3 = "LIMPIAR"
'boton4 = "FORMATO TESORER|fffd|A "
'
'
largoBoton1 = Len(boton1)
'largoBoton2 = Len(boton2)
'largoBoton3 = Len(boton3)
'largoBoton4 = Len(boton4)
'
'
macroBoton1 = "Bot_Confirmacion_Servicios"
'macroBoton2 = "CH0_4TxtComprasHoy"
'macroBoton3 = "Bot_Limpiar_Compras"
'macroBoton4 = "Bot_Pagos_Tesoreria"


'sh19 = "PARAMETROS"
Sheets(sh19).Select
Application.Calculation = xlManual

'1. Eliminar hoja sh21 = "ConfirmacionServicios"
    On Error Resume Next
    Sheets(sh21).Select
    Application.DisplayAlerts = False
    ActiveWindow.SelectedSheets.Delete
    
    On Error GoTo 0
    
'2. Agregar hoja despues de hoja 5
    Sheets(9).Select
    Sheets.Add After:=ActiveSheet
    ActiveSheet.Name = sh21
    
    'Color de hoja
    With ActiveWorkbook.Sheets(sh21).Tab
        .Color = 6299648
        .TintAndShade = 0
    End With
    
'3. Encabezados
    
    Cells(row0, col0 + 1) = "Estatus Servicio"
    Cells(row0, col0 + 2) = "IdPlaza"
    Cells(row0, col0 + 3) = "Etv Origen"
    Cells(row0, col0 + 4) = "Plaza Origen"
    Cells(row0, col0 + 5) = "IdSucursal"
    Cells(row0, col0 + 6) = "Sucursal"
    Cells(row0, col0 + 7) = "ETV Servicio"
    Cells(row0, col0 + 8) = "Fecha Planeacion"
    Cells(row0, col0 + 9) = "Fecha Servicio"
    Cells(row0, col0 + 10) = "Tipo Servicio"
    Cells(row0, col0 + 11) = "Destino Concentracion"
    Cells(row0, col0 + 12) = "IdSucursal Destino"
    Cells(row0, col0 + 13) = "Sucursal Destino"
    Cells(row0, col0 + 14) = "IdPlaza Destino"
    Cells(row0, col0 + 15) = "Caja Destino"
    Cells(row0, col0 + 16) = "Etv Destino"
    Cells(row0, col0 + 17) = "Importe Servicio"
    Cells(row0, col0 + 18) = "1000"
    Cells(row0, col0 + 19) = "500"
    Cells(row0, col0 + 20) = "200"
    Cells(row0, col0 + 21) = "100"
    Cells(row0, col0 + 22) = "50"
    Cells(row0, col0 + 23) = "20"
    Cells(row0, col0 + 24) = "Metalica"
    Cells(row0, col0 + 25) = "100"
    Cells(row0, col0 + 26) = "20"
    Cells(row0, col0 + 27) = "10"
    Cells(row0, col0 + 28) = "M5"
    Cells(row0, col0 + 29) = "M2"
    Cells(row0, col0 + 30) = "M1"
    Cells(row0, col0 + 31) = "M0.5"
    Cells(row0, col0 + 32) = "M0.2"
    Cells(row0, col0 + 33) = "M0.1"
    Cells(row0, col0 + 34) = "M0.05"
    Cells(row0, col0 + 35) = "Envio Correo ETV"
    Cells(row0, col0 + 36) = "Envio CorreoOS"
    Cells(row0, col0 + 37) = "Nombre Planeador"
    Cells(row0, col0 + 38) = "Fecha Operacion"
    Cells(row0, col0 + 39) = "Tiempo Registro"
    Cells(row0, col0 + 40) = "Usuario Registro"




    
'4 Formato
'encabezados
    'secci|fffd|n 1 INFORMACI|fffd|N GENERAL
    Range(Cells(1, 1), Cells(row0, tope1)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'GRIS
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 7432798
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With


'    'secci|fffd|n 2 MONITOREO DE SALDOS
'    Range(Cells(1, tope1 + 1), Cells(row0, tope2)).Select
'     With Selection.Font
'        .Name = "Verdana"
'        .size = 10
'        .Strikethrough = False
'        .Superscript = False
'        .Subscript = False
'        .OutlineFont = False
'        .Shadow = False
'        .Underline = xlUnderlineStyleNone
'        .ColorIndex = xlAutomatic
'        .TintAndShade = 0
'        .ThemeFont = xlThemeFontMinor
'    End With
'    Selection.Font.Bold = True
'
'    'AMARILLO
'    With Selection.Interior
'        .Pattern = xlSolid
'        .PatternColorIndex = xlAutomatic
'        .Color = 39423
'        .TintAndShade = 0
'        .PatternTintAndShade = 0
'    End With
'    With Selection.Font
'        .ThemeColor = xlThemeColorDark1
'        .TintAndShade = 0
'    End With
'    With Selection
'        .HorizontalAlignment = xlCenter
'        .VerticalAlignment = xlCenter
'        .WrapText = True
'        .Orientation = 0
'        .AddIndent = False
'        .IndentLevel = 0
'        .ShrinkToFit = False
'        .ReadingOrder = xlContext
'        .MergeCells = False
'    End With
'
'
'    'secci|fffd|n 3 PRON|fffd|STICO MODELO DOTACIONES Y CONCENTRACIONES
'    Range(Cells(1, tope2 + 1), Cells(row0, tope3)).Select
'     With Selection.Font
'        .Name = "Verdana"
'        .size = 10
'        .Strikethrough = False
'        .Superscript = False
'        .Subscript = False
'        .OutlineFont = False
'        .Shadow = False
'        .Underline = xlUnderlineStyleNone
'        .ColorIndex = xlAutomatic
'        .TintAndShade = 0
'        .ThemeFont = xlThemeFontMinor
'    End With
'    Selection.Font.Bold = True
'
'    'GRIS
'    With Selection.Interior
'        .Pattern = xlSolid
'        .PatternColorIndex = xlAutomatic
'        .Color = 7432798
'        .TintAndShade = 0
'        .PatternTintAndShade = 0
'    End With
'    With Selection.Font
'        .ThemeColor = xlThemeColorDark1
'        .TintAndShade = 0
'    End With
'    With Selection
'        .HorizontalAlignment = xlCenter
'        .VerticalAlignment = xlCenter
'        .WrapText = True
'        .Orientation = 0
'        .AddIndent = False
'        .IndentLevel = 0
'        .ShrinkToFit = False
'        .ReadingOrder = xlContext
'        .MergeCells = False
'    End With
'
    
    
    
    
    
    
    'formato de columnas
    Columns("A:A").Select
    Selection.ColumnWidth = 12
    Columns("B:B").Select
    Selection.ColumnWidth = 11.2
    Range("C:C,G:G").Select
    Selection.ColumnWidth = 11
    Columns("D:D").Select
    Selection.ColumnWidth = 16
    Columns("E:E").Select
    Selection.ColumnWidth = 7.9
    Columns("F:F").Select
    Selection.ColumnWidth = 30
    Range("H:AJ").Select
    Selection.ColumnWidth = 13
    Range("AK:AN").Select
    Selection.ColumnWidth = 23
        
    Range("Q:AH").Select
    Selection.Style = "Currency"

    'FECHA
    Range("H:I").Select
    Selection.NumberFormat = "m/d/yyyy"
    
    'ancho primera fila
    Rows("1:1").RowHeight = 49
    Rows("2:2").RowHeight = 30

    
'5. Botones ACTUALIZAR FORMULAR (CP_4FormulasDem) - MEN|fffd| DEM (Bot_Dem_Dinamico) - LIMPIAR (Bot_Limpiar_DEM)
'
    'BOTON 1
        'LEFT - TOP - WIDTH - HEIGHT
    ActiveSheet.Buttons.Add(5, 10.5, 110, 29.25).Select
    Selection.OnAction = macroBoton1
    Selection.Characters.Text = boton1
    With Selection
        .Placement = xlMove
        .PrintObject = False
    End With
    With Selection.Characters(Start:=1, Length:=largoBoton1).Font
        .Name = "Verdana"
        .FontStyle = "Negrita"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With

'    'BOTON 2
'
'    ActiveSheet.Buttons.Add(130, 10.5, 110, 29.25).Select
'    Selection.OnAction = macroBoton2
'    Selection.Characters.Text = boton2
'    With Selection
'        .Placement = xlMove
'        .PrintObject = False
'    End With
'    With Selection.Characters(Start:=1, Length:=largoBoton2).Font
'        .Name = "Verdana"
'        .FontStyle = "Negrita"
'        .size = 10.5
'        .Strikethrough = False
'        .Superscript = False
'        .Subscript = False
'        .OutlineFont = False
'        .Shadow = False
'        .Underline = xlUnderlineStyleNone
'        .ColorIndex = 1
'    End With
'
'    'BOT|fffd|N 3
'
'    ActiveSheet.Buttons.Add(255, 10.5, 110, 29.25).Select
'    Selection.OnAction = macroBoton3
'    Selection.Characters.Text = boton3
'    With Selection
'        .Placement = xlMove
'        .PrintObject = False
'    End With
'    With Selection.Characters(Start:=1, Length:=largoBoton3).Font
'        .Name = "Verdana"
'        .FontStyle = "Negrita"
'        .size = 10
'        .Strikethrough = False
'        .Superscript = False
'        .Subscript = False
'        .OutlineFont = False
'        .Shadow = False
'        .Underline = xlUnderlineStyleNone
'        .ColorIndex = 1
'    End With
'
'    'BOT|fffd|N 4
'
'    ActiveSheet.Buttons.Add(380, 10.5, 110, 29.25).Select
'    Selection.OnAction = macroBoton4
'    Selection.Characters.Text = boton4
'    With Selection
'        .Placement = xlMove
'        .PrintObject = False
'    End With
'    With Selection.Characters(Start:=1, Length:=largoBoton4).Font
'        .Name = "Verdana"
'        .FontStyle = "Negrita"
'        .size = 10
'        .Strikethrough = False
'        .Superscript = False
'        .Subscript = False
'        .OutlineFont = False
'        .Shadow = False
'        .Underline = xlUnderlineStyleNone
'        .ColorIndex = 1
'    End With
    
    Sheets(sh21).Select
    Application.Calculation = xlAutomatic
    ActiveWindow.Zoom = 70

    
End Sub






Sub DD10_Hoja_ProgramacionServicios()
Call VariablesGlobales


Dim row0, col0 As Integer
Dim tope1, tope2, tope3, tope4, tope5, tope6, tope7, tope8, tope9, tope10, tope11, tope12 As Integer
Dim boton1, boton2, boton3, boton4, boton5, boton6, boton7 As String
Dim largoBoton1, largoBoton2, largoBoton3, largoBoton4, largoBoton5, largoBoton6, largoBoton7 As Integer
Dim macroBoton1, macroBoton2, macroBoton3, macroBoton4, macroBoton5, macroBoton6, macroBoton7 As String
row0 = 2
col0 = 0

tope1 = 37
'tope2 = 32
'tope3 = 37


'sh19 = "PARAMETROS"
Sheets(sh19).Select
Application.Calculation = xlManual

'1. Eliminar hoja sh22 = "ProgramacionServicios"
    On Error Resume Next
    Sheets(sh22).Select
    Application.DisplayAlerts = False
    ActiveWindow.SelectedSheets.Delete
    
    On Error GoTo 0
    
'2. Agregar hoja despues de hoja 5
    Sheets(7).Select
    Sheets.Add After:=ActiveSheet
    ActiveSheet.Name = sh22
    
    
'3. Encabezados
    
    Cells(row0, col0 + 1) = "EstatusServicio"
    Cells(row0, col0 + 2) = "IdPlaza"
    Cells(row0, col0 + 3) = "Etv Origen"
    Cells(row0, col0 + 4) = "Plaza Origen"
    Cells(row0, col0 + 5) = "IdSucursal"
    Cells(row0, col0 + 6) = "Sucursal"
    Cells(row0, col0 + 7) = "ETV Servicio"
    Cells(row0, col0 + 8) = "FechaPlaneacion"
    Cells(row0, col0 + 9) = "FechaServicio"
    Cells(row0, col0 + 10) = "TipoServicio"
    Cells(row0, col0 + 11) = "DestinoConcentracion"
    Cells(row0, col0 + 12) = "IdSucursalDestino"
    Cells(row0, col0 + 13) = "SucursalDestino"
    Cells(row0, col0 + 14) = "IdPlazaDestino"
    Cells(row0, col0 + 15) = "CajaDestino"
    Cells(row0, col0 + 16) = "EtvDestino"
    Cells(row0, col0 + 17) = "ImporteServicio"
    Cells(row0, col0 + 18) = "1000"
    Cells(row0, col0 + 19) = "500"
    Cells(row0, col0 + 20) = "200"
    Cells(row0, col0 + 21) = "100"
    Cells(row0, col0 + 22) = "50"
    Cells(row0, col0 + 23) = "20"
    Cells(row0, col0 + 24) = "Metalica"
    Cells(row0, col0 + 25) = "100"
    Cells(row0, col0 + 26) = "20"
    Cells(row0, col0 + 27) = "10"
    Cells(row0, col0 + 28) = "M5"
    Cells(row0, col0 + 29) = "M2"
    Cells(row0, col0 + 30) = "M1"
    Cells(row0, col0 + 31) = "M0.5"
    Cells(row0, col0 + 32) = "M0.2"
    Cells(row0, col0 + 33) = "M0.1"
    Cells(row0, col0 + 34) = "M0.05"
    Cells(row0, col0 + 35) = "EnvioCorreoETV"
    Cells(row0, col0 + 36) = "EnvioCorreoOS"
    Cells(row0, col0 + 37) = "FolioControl"


    
'4 Formato
'encabezados
    'secci|fffd|n 1 INFORMACI|fffd|N GENERAL
    Range(Cells(1, 1), Cells(row0, tope1)).Select
     With Selection.Font
        .Name = "Verdana"
        .size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With
    Selection.Font.Bold = True
    
    'GRIS
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 7432798
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    'formato de columnas
    Range("A:A, B:I").Select
    Selection.ColumnWidth = 12.5
    Range("B:C").Select
    Selection.ColumnWidth = 10.3
    Columns("D:D").Select
    Selection.ColumnWidth = 14
    Columns("E:E").Select
    Selection.ColumnWidth = 8
    Columns("F:F").Select
    Selection.ColumnWidth = 22.5
    Columns("J:J").Select
    Selection.ColumnWidth = 42.7
    Range("K:P").Select
    Selection.ColumnWidth = 16
    
    Range("Q:AH").Select
    Selection.ColumnWidth = 15.4
    Selection.Style = "Currency"
    


    'FECHA
    Range("H:I").Select
    Selection.NumberFormat = "m/d/yyyy"
    
'    'HORA
'    Range("T:T").Select
'    Selection.NumberFormat = "hh:mm:ss am/pm"
    
    'ancho primera fila
    Rows("1:1").RowHeight = 39.75
    
    
    Sheets(sh22).Select
    Application.Calculation = xlAutomatic
    ActiveWindow.Zoom = 70

    
End Sub


Attribute VB_Name = "DEM_DINAMICO"
Attribute VB_Base = "0{5C1A1E88-8057-4F52-AB0D-B2F2F9A3AC73}{61511ABB-234D-4C84-BC85-169AE5606548}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()

Dim fechaCombo As Date
Dim cadenaFecha As String

If Me.OptionButtonDiaDem.value = True Then
cadenaFecha = Me.ComboDiaDem.value & "-" & Me.ComboMesesDem.value & "-" & Me.ComboAnioDem.value

'MsgBox CDate(cadenaFecha)
'MsgBox IsDate(CDate(cadenaFecha))


    If IsDate(CDate(cadenaFecha)) = True Then
'--------DEMS del d|fffd|a---------
    Application.ScreenUpdating = False
    
    Call DeleteQueryImportaciones
    
    Call CU_4DemDiaDinamico
    
    Unload DEM_DINAMICO
    MsgBox "Proceso finalizado"
    
    Application.ScreenUpdating = True
    
    Else
    
    MsgBox "VALIDAR FECHA"
    Exit Sub
    
    End If


ElseIf Me.OptionButtonArrastreDem.value = True Then
cadenaFecha = Me.ComboBoxDiaArrastre.value & "-" & Me.ComboBoxMesArrastre.value & "-" & Me.ComboBoxAnioArrastre.value
    
    If IsDate(CDate(cadenaFecha)) = True Then
    
'--------CALL PROCESO---------
    Application.ScreenUpdating = False
    
    Call DeleteQueryImportaciones
    
    Call CU_5DemArrastre
    
    Unload DEM_DINAMICO
    MsgBox "Proceso finalizado"
    
    Application.ScreenUpdating = True
    
    Else
    
    MsgBox "VALIDAR FECHA"
    Exit Sub
    
    End If
    
    
ElseIf Me.OptionButtonCompartirDem.value = True Then
'--------CALL PROCESO---------
    Call CH0_10TxtDemDinamico
    Unload DEM_DINAMICO
    MsgBox "Proceso finalizado"
    
End If


End Sub


Private Sub CommandButton2_Click()

'''''''''''''''''''BOTON ACEPTAR CUADRO 2'''''''''''''''''''''''''''''''
If Me.OptionButtonConsolidarDiario.value = True Then

    '---------CONSOLIDAR ARRASTRE DEL D|fffd|A--------------
    Call CH0_11TxtDemArrastre
    
    Unload DEM_DINAMICO
    MsgBox "Proceso finalizado"
    
ElseIf Me.OptionButtonConsolidarMes.value = True Then
    '---------CONSOLIDAR ARRASTRE DEL D|fffd|A--------------
    Call CH0_12TxtDemConsolidarMes
    
    Unload DEM_DINAMICO
    MsgBox "Proceso finalizado"
    
End If

End Sub


Private Sub CommandButton3_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False


If Me.OptionButtonReporteRegulatorio.value = True Then
    If Me.ComboBoxMesRegulatorio.value = "" Then
    MsgBox "Seleccione un Mes"
    Exit Sub
    
    Else
    
    Call CU_7ReporteRegulatorioPlazasEtvOemn1
    Unload DEM_DINAMICO

    
    End If

End If

Application.EnableEvents = True
Application.ScreenUpdating = True

End Sub

Private Sub CommandButton4_Click()
NAVEGAR_HOJAS.Show
End Sub

Private Sub MultiPage1_Change()

End Sub

Private Sub OptionButtonArrastreDem_Click()

With Me.ComboBoxDiaArrastre
.Locked = False
End With

With Me.ComboBoxMesArrastre
.Locked = False
End With


With Me.ComboBoxAnioArrastre
.Locked = False
End With

With Me.ComboDiaDem
.value = ""
.Locked = True
End With

With Me.ComboMesesDem
.value = ""
.Locked = True
End With


With Me.ComboAnioDem
.value = ""
.Locked = True
End With

End Sub

Private Sub OptionButtonCompartirDem_Click()

With Me.ComboDiaDem
.value = ""
.Locked = True
End With

With Me.ComboMesesDem
.value = ""
.Locked = True
End With


With Me.ComboAnioDem
.value = ""
.Locked = True
End With

With Me.ComboBoxDiaArrastre
.value = ""
.Locked = True
End With

With Me.ComboBoxMesArrastre
.value = ""
.Locked = True
End With


With Me.ComboBoxAnioArrastre
.value = ""
.Locked = True
End With

End Sub



Private Sub OptionButtonConsolidarMes_Click()

End Sub

Private Sub OptionButtonDiaDem_Click()

With Me.ComboDiaDem
.Locked = False
End With

With Me.ComboMesesDem
.Locked = False
End With


With Me.ComboAnioDem
.Locked = False
End With


With Me.ComboBoxDiaArrastre
.value = ""
.Locked = True
End With

With Me.ComboBoxMesArrastre
.value = ""
.Locked = True
End With


With Me.ComboBoxAnioArrastre
.value = ""
.Locked = True
End With


End Sub


Private Sub UserForm_initialize()
Call VariablesGlobales

Me.ComboMesesDem.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")

Me.ComboDiaDem.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)

Me.ComboAnioDem.List = Array(2019, 2020)


Me.ComboBoxMesArrastre.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")

Me.ComboBoxDiaArrastre.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)

Me.ComboBoxAnioArrastre.List = Array(2019, 2020)

Me.ComboBoxMesRegulatorio.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")


'CUADRO 1
Me.OptionButtonCompartirDem.value = False
Me.OptionButtonArrastreDem.value = False
Me.OptionButtonDiaDem.value = False


'CUADRO 2
Me.OptionButtonConsolidarDiario.value = False
Me.OptionButtonConsolidarMes.value = False

'CUADRO 3
Me.OptionButtonReporteOperativo.value = False
Me.OptionButtonReporteRegulatorio.value = False

'DIA ARRASTRE

Dim FechaArrastre, FechaActual As Date
Dim DiaArr, MesArr, AnArr As Integer
Dim DiaAct, MesAct, AnAct As Integer
Dim LabMesArr, LabMesAct As String
Dim MesArrReg As String

FechaActual = fechaOperacion
DiaAct = Day(FechaActual)
MesAct = Month(FechaActual)
AnAct = Year(FechaActual)


FechaArrastre = fechaOperacion - 1
DiaArr = Day(FechaArrastre)
MesArr = Month(FechaArrastre)
AnArr = Year(FechaArrastre)

Select Case MesArr
Case 1
LabMesArr = "ENERO"
Case 2
LabMesArr = "FEBRERO"
Case 3
LabMesArr = "MARZO"
Case 4
LabMesArr = "ABRIL"
Case 5
LabMesArr = "MAYO"
Case 6
LabMesArr = "JUNIO"
Case 7
LabMesArr = "JULIO"
Case 8
LabMesArr = "AGOSTO"
Case 9
LabMesArr = "SEPTIEMBRE"
Case 10
LabMesArr = "OCTUBRE"
Case 11
LabMesArr = "NOVIEMBRE"
Case 12
LabMesArr = "DICIEMBRE"
End Select


Select Case MesAct
Case 1
LabMesAct = "ENERO"
Case 2
LabMesAct = "FEBRERO"
Case 3
LabMesAct = "MARZO"
Case 4
LabMesAct = "ABRIL"
Case 5
LabMesAct = "MAYO"
Case 6
LabMesAct = "JUNIO"
Case 7
LabMesAct = "JULIO"
Case 8
LabMesAct = "AGOSTO"
Case 9
LabMesAct = "SEPTIEMBRE"
Case 10
LabMesAct = "OCTUBRE"
Case 11
LabMesAct = "NOVIEMBRE"
Case 12
LabMesAct = "DICIEMBRE"
End Select


Select Case Month(Date)
Case 2
MesArrReg = "ENERO"
Case 3
MesArrReg = "FEBRERO"
Case 4
MesArrReg = "MARZO"
Case 5
MesArrReg = "ABRIL"
Case 6
MesArrReg = "MAYO"
Case 7
MesArrReg = "JUNIO"
Case 8
MesArrReg = "JULIO"
Case 9
MesArrReg = "AGOSTO"
Case 10
MesArrReg = "SEPTIEMBRE"
Case 11
MesArrReg = "OCTUBRE"
Case 12
MesArrReg = "NOVIEMBRE"
Case 1
MesArrReg = "DICIEMBRE"

End Select

'DIA HOY

Me.ComboMesesDem.value = LabMesAct
Me.ComboDiaDem.value = DiaAct
Me.ComboAnioDem.value = AnAct


Me.ComboBoxMesArrastre.value = LabMesArr
Me.ComboBoxDiaArrastre.value = DiaArr
Me.ComboBoxAnioArrastre.value = AnArr

'REGULATORIO
Me.ComboBoxMesRegulatorio.value = MesArrReg

End Sub
Attribute VB_Name = "EA_HERRAMIENTAS"
Sub EA0_ListaAscii()
'CREA LA LISTA DE ASCII EN UN NUEVO ARCHIVO
'l|fffd|mite Ascii 255

Dim row0, col0 As Integer
Dim LAscii As Integer


''agregar hoja
'    Sheets.Add After:=ActiveSheet
'    ActiveSheet.Name = "Ascii"
'crear nuevo libro
    Workbooks.Add
    Range("A2").Select
    

Range("A1") = "Numero Ascii"
Range("B1") = "Valor"
Range("A1").Activate

LAscii = 255
col0 = ActiveCell.Column
row0 = ActiveCell.Row

For i = 1 To LAscii
    
        Cells(row0 + i, col0) = i
        Cells(row0 + i, col0 + 1) = Chr(i)

    
Next i


End Sub


Sub EA1_AgruparPorColumnas(sumaAvansoft As Variant)


Dim row0, rowIni, rorFin, numRows As Long
Dim col0, colIni, colFin As Long
Dim arregloSuma() As Variant
Dim encabezados() As Variant

rowIni = 1
col0 = 1
'en que columna comienzan los encabezados del agrupamiento
colIni = 5

colFin = Range("A1").End(xlToRight).Column - colIni + 1

numRows = Range("A1000000").End(xlUp).Row

ReDim encabezados(colFin, 1)

For i = 1 To UBound(encabezados)
    
    encabezados(i, 1) = Cells(rowIni, colIni).value
    
    colIni = colIni + 1
    
Next i

'regresar valor
colIni = 5

ReDim arregloSuma(colFin, 2)

For i = 1 To UBound(arregloSuma)
    
    arregloSuma(i, 1) = encabezados(i, 1)
    arregloSuma(i, 2) = WorksheetFunction.Sum(Range(Cells(rowIni + 1, colIni), Cells(numRows, colIni)))
    
    colIni = colIni + 1
    
Next i


'nuevo libro
ActiveSheet.Copy
ActiveSheet.Select

Cells.Clear

'regresar valor
rowIni = 9

For i = 1 To UBound(arregloSuma)
Cells(rowIni, 1) = arregloSuma(i, 1)
Cells(rowIni, 2) = arregloSuma(i, 2)


rowIni = rowIni + 1

Next i
Cells(1, 1).value = "CONCEPTO"
Cells(1, 2).value = "IMPORTE"
Cells(1, 3).value = "CIFRAS ARCHIVO TRANSACCIONES"
Cells(1, 4).value = "DIFERENCIAS"



Cells(2, 1).value = "CIFRAS CONTROL AVANSOFT SALIDAS"
Cells(3, 1).value = "CIFRAS CONTROL JKASSA SALIDAS"
Cells(4, 1).value = "CIFRAS CONTROL SALIDAS"
Cells(6, 1).value = "CIFRAS CONTROL JKASSA ENTRADAS"
Cells(7, 1).value = "CI-CO"

    Range("B2").value = CDbl(sumaAvansoft)
    Range("B3").Select
    ActiveCell.FormulaR1C1 = "=ABS(R[10]C+R[12]C)"
    Range("B4").Select
    ActiveCell.FormulaR1C1 = "=R[-2]C+R[-1]C"
    Range("B6").Select
    ActiveCell.FormulaR1C1 = "=R[5]C+R[11]C+R[13]C+R[15]C"
    Range("B7").Select
    ActiveCell.FormulaR1C1 = "=R[-1]C-R[-3]C"
  
    Range("D4").Select
    ActiveCell.FormulaR1C1 = "=RC[-2]-RC[-1]"
    Range("D6").Select
    ActiveCell.FormulaR1C1 = "=RC[-2]-RC[-1]"
    Range("D7").Select
    ActiveCell.FormulaR1C1 = "=RC[-2]-RC[-1]"
    
'FORMATO
'GRIS
    Range("A4:B4,A6:B6").Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249977111117893
        .PatternTintAndShade = 0
    End With
    
    Selection.Font.Bold = True
    
    'AMARILLO
    Range("A7:B7").Select
    Selection.Font.Bold = True
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 49407
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
    Columns("B:D").Select
    Selection.Style = "Currency"
    

    Columns("A:A").ColumnWidth = 36.14
    Range("B:B,C:C,D:D").Select
    Range("D1").Activate
    Selection.ColumnWidth = 19.71
    Range("C2").Select
    
    'ENCABEZADOS
    Rows("1:1").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Font.Bold = True
    
    


End Sub
Attribute VB_Name = "EB_PROCESOS_TEMPORALES"

Sub EB0_Actualizar_Formulas_Planeacion()
Application.ScreenUpdating = False
Application.EnableEvents = False

'f|fffd|rmulas planeaci|fffd|n
Call CP_2FormulasPlaneacionCajas
'fijar valores
Call EB0_1FijarValoresHojaPlaneacion

Application.ScreenUpdating = True
Application.EnableEvents = True

MsgBox "F|fffd|rmulas actualizadas"

End Sub
Sub EB0_1FijarValoresHojaPlaneacion()
Attribute EB0_1FijarValoresHojaPlaneacion.VB_ProcData.VB_Invoke_Func = " \n14"
Call VariablesGlobales
'sh1 = "pm_PLANEACION_CAJAS"
Sheets(sh1).Select
Dim row0, rowFin, col0, colFin As Long

row0 = 3
col0 = 1

rowFin = Cells(row0, col0).End(xlDown).Row
colFin = Cells(row0, col0).End(xlToRight).Column

'MsgBox "rowFin " & rowFin & Chr(10) & "colFin " & colFin

'
    Range(Cells(row0, col0), Cells(rowFin, colFin)).Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
Application.CutCopyMode = False
Range("A3").Select

End Sub
Attribute VB_Name = "FECHA_CASH_IN"
Attribute VB_Base = "0{89994EB8-F3FB-44BA-A9DA-DBA57B8AE5F0}{D7DC0E2B-12DF-4EA4-B6FA-B77BB18906BE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton2_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False

Call VariablesGlobales
'fecha del formulario
Dim mesVal As Integer

Select Case Me.mesCashIn.value
Case Meses1
mesVal = 1
Case Meses2
mesVal = 2
Case Meses3
mesVal = 3
Case Meses4
mesVal = 4
Case Meses5
mesVal = 5
Case Meses6
mesVal = 6
Case Meses7
mesVal = 7
Case Meses8
mesVal = 8
Case Meses9
mesVal = 9
Case Meses10
mesVal = 10
Case Meses11
mesVal = 11
Case Meses12
mesVal = 12
End Select

fecha = CDate(Me.diaCashIn.value & "-" & mesVal & "-" & Me.AnioCashIn.value)


If IsDate(fecha) = False Then

    MsgBox "FECHA INCORRECTA. CORREGIR"
    Exit Sub

Else
    
    Call CQ9_ImportarCashInActualizado(1)
    Call CQ10_AgregarCashIn(CDate(fecha))
    Call DeleteQueryImportaciones
    Unload FECHA_CASH_IN
MsgBox "CASH IN DEL D|fffd|A AGREGADO"
End If

Application.ScreenUpdating = True
Application.EnableEvents = True


End Sub

Private Sub CommandButton4_Click()

End Sub

Private Sub CommandButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
NAVEGAR_HOJAS.Show
End Sub

Private Sub UserForm_initialize()
Call VariablesGlobales

Dim mesVal, anioVal, diaVal As Integer
Dim mesLab, diaLab, anioLab As String

Me.mesCashIn.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")

Me.diaCashIn.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)

Me.AnioCashIn.List = Array(2019, 2020)

fechaHoy = CDate(Day(fechaOperacion) & "/" & Month(fechaOperacion) & "/" & Year(fechaOperacion))

mesVal = Month(fechaHoy)
anioVal = Year(fechaHoy)
diaVal = Day(fechaHoy)



If diaVal <= 9 Then
    diaLab = "0" & diaVal
Else
    diaLab = diaVal
End If

Select Case mesVal
Case 1
mesLab = Meses1
Case 2
mesLab = Meses2
Case 3
mesLab = Meses3
Case 4
mesLab = Meses4
Case 5
mesLab = Meses5
Case 6
mesLab = Meses6
Case 7
mesLab = Meses7
Case 8
mesLab = Meses8
Case 9
mesLab = Meses9
Case 10
mesLab = Meses10
Case 11
mesLab = Meses11
Case 12
mesLab = Meses12

End Select



Me.mesCashIn.value = mesLab
Me.diaCashIn.value = diaLab
Me.AnioCashIn.value = anioVal



End Sub
Attribute VB_Name = "FECHA_CASH_OUT"
Attribute VB_Base = "0{191A7C36-33E7-46F3-9912-7A97EAB577F2}{C5E95359-5F64-49DC-A62E-4DDF9D7C1990}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CommandButton2_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False

Call VariablesGlobales
'fecha del formulario
Dim mesVal As Integer

Select Case Me.mesCashOut.value
Case Meses1
mesVal = 1
Case Meses2
mesVal = 2
Case Meses3
mesVal = 3
Case Meses4
mesVal = 4
Case Meses5
mesVal = 5
Case Meses6
mesVal = 6
Case Meses7
mesVal = 7
Case Meses8
mesVal = 8
Case Meses9
mesVal = 9
Case Meses10
mesVal = 10
Case Meses11
mesVal = 11
Case Meses12
mesVal = 12
End Select

fecha = CDate(Me.diaCashOut.value & "-" & mesVal & "-" & Me.AnioCashOut.value)


If IsDate(fecha) = False Then

    MsgBox "FECHA INCORRECTA. CORREGIR"
    Exit Sub

Else
    'CAPTURA DE ODP-TDD-REMESAS
    Call CQ16_ImportarCashOutActualizado(1, fechaOperacion)
    Call CQ13_AgregarCashOutModeloPronostico(1)
    
    'MODELO ACTUALIZADO DIARIAMENTE AM
    Call CQ14_ImportarModeloActualizadoDiario(1)
    Call CQ15_AgregarCOModeloDiarioMonitoreoAm(fecha)
    
    Call DeleteQueryImportaciones
    Unload FECHA_CASH_OUT
MsgBox "CASH OUT DEL D|fffd|A AGREGADO"
End If

Application.ScreenUpdating = True
Application.EnableEvents = True


End Sub

Private Sub CommandButton4_Click()

End Sub

Private Sub CommandButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
NAVEGAR_HOJAS.Show
End Sub

Private Sub Label29_Click()

End Sub

Private Sub UserForm_initialize()
Call VariablesGlobales

Dim mesVal, anioVal, diaVal As Integer
Dim mesLab, diaLab, anioLab As String

Me.mesCashOut.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")

Me.diaCashOut.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)

Me.AnioCashOut.List = Array(2019, 2020)

fechaHoy = CDate(Day(fechaOperacion) & "/" & Month(fechaOperacion) & "/" & Year(fechaOperacion))

mesVal = Month(fechaHoy)
anioVal = Year(fechaHoy)
diaVal = Day(fechaHoy)



If diaVal <= 9 Then
    diaLab = "0" & diaVal
Else
    diaLab = diaVal
End If

Select Case mesVal
Case 1
mesLab = Meses1
Case 2
mesLab = Meses2
Case 3
mesLab = Meses3
Case 4
mesLab = Meses4
Case 5
mesLab = Meses5
Case 6
mesLab = Meses6
Case 7
mesLab = Meses7
Case 8
mesLab = Meses8
Case 9
mesLab = Meses9
Case 10
mesLab = Meses10
Case 11
mesLab = Meses11
Case 12
mesLab = Meses12

End Select



Me.mesCashOut.value = mesLab
Me.diaCashOut.value = diaLab
Me.AnioCashOut.value = anioVal



End Sub
Attribute VB_Name = "FECHA_DOTACIONES_PLANEACION"
Attribute VB_Base = "0{1E770292-1350-42ED-B9DB-A7C8F46D7796}{3AC5931D-39F5-4558-9304-093E5F0A4FA6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton2_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False

    Call CI3_DotacionesDiaAnterior
    
    Unload FECHA_DOTACIONES_PLANEACION
    MsgBox "Dotaciones registradas"
    
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub

Private Sub CommandButton4_Click()

End Sub

Private Sub CommandButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
NAVEGAR_HOJAS.Show
End Sub

Private Sub UserForm_initialize()
Call VariablesGlobales

Me.ComboMesesDot.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")

Me.ComboDiaDot.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)

Me.ComboAnioDot.List = Array(2019, 2020)

Me.mesDotacion.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")

Me.diaDotacion.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)

Me.AnioDotacion.List = Array(2019, 2020)

Me.Planeadores.value = NombrePlaneador


Dim mesVal, anioVal, diaVal, anioValDotacion, diaValDotacion As Integer
Dim mesLab, anioLab, diaLab As String
Dim mesLabDotacion, anioLabDotacion, diaLabDotacion  As String

Dim fechaHoy As Date


fechaHoy = CDate(Day(fechaOperacion) & "/" & Month(fechaOperacion) & "/" & Year(fechaOperacion))
fechaDotacion = CDate(Day(fechaOperacion) & "/" & Month(fechaOperacion) & "/" & Year(fechaOperacion))


If Weekday(fechaHoy, vbMonday) = 1 Then

    fechaHoy = fechaHoy - 3

ElseIf Weekday(fechaHoy, vbMonday) = 7 Then

    fechaHoy = fechaHoy - 2

Else
    
    fechaHoy = fechaHoy - 1
    
End If

mesVal = Month(fechaHoy)
anioVal = Year(fechaHoy)
diaVal = Day(fechaHoy)

anioValDotacion = Year(fechaDotacion)
diaValDotacion = Day(fechaDotacion)

If diaValDotacion <= 9 Then
    diaLabDotacion = "0" & diaValDotacion
Else
    diaLabDotacion = diaValDotacion
End If


If diaVal <= 9 Then
    diaLab = "0" & diaVal
Else
    diaLab = diaVal
End If

Select Case mesVal
Case 1
mesLab = Meses1
Case 2
mesLab = Meses2
Case 3
mesLab = Meses3
Case 4
mesLab = Meses4
Case 5
mesLab = Meses5
Case 6
mesLab = Meses6
Case 7
mesLab = Meses7
Case 8
mesLab = Meses8
Case 9
mesLab = Meses9
Case 10
mesLab = Meses10
Case 11
mesLab = Meses11
Case 12
mesLab = Meses12

End Select

Select Case Month(fechaDotacion)
Case 1
mesLabDotacion = Meses1
Case 2
mesLabDotacion = Meses2
Case 3
mesLabDotacion = Meses3
Case 4
mesLabDotacion = Meses4
Case 5
mesLabDotacion = Meses5
Case 6
mesLabDotacion = Meses6
Case 7
mesLabDotacion = Meses7
Case 8
mesLabDotacion = Meses8
Case 9
mesLabDotacion = Meses9
Case 10
mesLabDotacion = Meses10
Case 11
mesLabDotacion = Meses11
Case 12
mesLabDotacion = Meses12

End Select

Me.ComboMesesDot.value = mesLab
Me.ComboDiaDot.value = diaLab
Me.ComboAnioDot.value = anioVal


Me.diaDotacion.value = diaLabDotacion
Me.mesDotacion.value = mesLabDotacion
Me.AnioDotacion.value = Year(fechaDotacion)

End Sub


Attribute VB_Name = "FUNCIONES_CAJAS"
Attribute VB_Base = "0{5FBC0111-7B31-4AC6-BBDD-FBDE291869AA}{B51562CA-22B5-4861-B10F-FE755A7AFD41}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton10_Click()

Call Bot_Actualizar_Saldos_Traspasos

End Sub

Private Sub CommandButton11_Click()

Call Bot_Captura_Traspasos

End Sub

Private Sub CommandButton12_Click()
Call VariablesGlobales
'sh1 = "pm_PLANEACION_CAJAS"
Sheets(sh1).Select
Range("CQ3").Select

End Sub

Private Sub CommandButton16_Click()

Call Bot_PlaneacionCajas

End Sub

Private Sub CommandButton20_Click()

Call Bot_Correo_Saldos_Cajas

End Sub

Private Sub CommandButton21_Click()
Call VariablesGlobales
'sh1 = "pm_PLANEACION_CAJAS"
Sheets(sh1).Select
Range("D3").Select

End Sub

Private Sub CommandButton4_Click()

Call VariablesGlobales
'sh1 = "pm_PLANEACION_CAJAS"
Sheets(sh1).Select
Range("D3").Select

End Sub

Private Sub CommandButton5_Click()

Call Bot_Publicar_Planeacion_Cajas

End Sub

Private Sub CommandButton7_Click()
Call Bot_Limpiar_Servicios_Traspasos

End Sub

Private Sub CommandButtonRegistroMasivo_Click()

Call EB0_Actualizar_Formulas_Planeacion

End Sub

Private Sub MultiPage1_Change()
Call VariablesGlobales
'sh1 = "pm_PLANEACION_CAJAS"
Sheets(sh1).Select
Range("EW3").Select
End Sub
Attribute VB_Name = "FUNCIONES_SERVICIOS"
Attribute VB_Base = "0{EA227DFF-6BBA-4EC9-8207-27EADF3F3A95}{F566C231-1FA6-478C-B9EA-2E3B39F64EBA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()

Call VariablesGlobales
'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select

Range("A4").Select

End Sub

Private Sub CommandButton10_Click()

End Sub

Private Sub CommandButton10_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
NAVEGAR_HOJAS.Show
End Sub

Private Sub CommandButton11_Click()

End Sub

Private Sub CommandButton11_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
NAVEGAR_HOJAS.Show
End Sub

Private Sub CommandButton12_Click()

End Sub

Private Sub CommandButton12_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
NAVEGAR_HOJAS.Show
End Sub

Private Sub CommandButton13_Click()

End Sub

Private Sub CommandButton13_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
NAVEGAR_HOJAS.Show
End Sub

Private Sub CommandButton2_Click()

Call VariablesGlobales
'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select
Range("H4").Select

End Sub

Private Sub CommandButton3_Click()

Call VariablesGlobales
'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select
Range("W4").Select

End Sub



Private Sub CommandButton4_Click()

Call VariablesGlobales
'sh3 = "pm_PLANEACION_SERVICIOS"
Sheets(sh3).Select
Range("AD4").Select

End Sub

Private Sub CommandButton6_Click()

Call Bot_Fecha_Dotaciones



End Sub

Private Sub CommandButton7_Click()

FECHA_CASH_OUT.Show

End Sub

Private Sub CommandButton9_Click()

FECHA_CASH_IN.Show

End Sub

Private Sub CommandButtonCalculoDotacion_Click()
'3 de diciembre 2018 se deshabilita y se reemplaza con Bot_Ordenes_Dotacion_Sucursales
'Call Bot_Ordenes_Dotacion
Call Bot_Ordenes_Dotacion_Sucursales

End Sub

Private Sub CommandButtonLimiteOperativo_Click()

Call Bot_Actualizar_LimiteOperativo

End Sub

Private Sub CommandButtonLimpiar_Click()
Call Bot_LimpiarDotaciones

End Sub

Private Sub CommandButtonOdpTdd_Click()
'Call Bot_Actualizar_ODP_TDD
MsgBox "Boton deshabilitado." & Chr(10) & "Se reemplaza por dato de Cash In Cash Out (Bot|fffd|n Pron|fffd|stico)"
End Sub

Private Sub CommandButtonPublicar_Click()
Call Bot_Publicar_Planeacion_Servicios

End Sub

Private Sub CommandButtonRegistroMasivo_Click()
Call Bot_RegistroMasivo

End Sub

Private Sub CommandButtonRegistroUnitario_Click()
Call Bot_Registrar_Servicios

End Sub

Private Sub CommandButtonRemesas_Click()
'Call Bot_Actualizar_RemesasAvansoft
MsgBox "Boton deshabilitado." & Chr(10) & "Se reemplaza por dato de Cash In Cash Out (Bot|fffd|n Pron|fffd|stico)"
End Sub

Private Sub CommandButtonSaldosIniciales_Click()

Call Bot_Actualizar_SInicial

End Sub

Private Sub CommandButtonSaldosMonitoreo_Click()

Call Bot_Actualizar_SaldoUltimoMonitoreo

End Sub

Private Sub CommandButtonTodosSaldos_Click()

Call Bot_Actualizar_SInicial_SActual_LOperativo

End Sub

Private Sub CommandButtonValidar_Click()
Call Bot_Validar_Registro_Masivo

End Sub

Private Sub MultiPage1_Change()

End Sub

Private Sub UserForm_Click()

End Sub
Attribute VB_Name = "Hoja1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
Call VariablesGlobales
'REGISTRAR USUARIO DE REGISTRO
Dim UsuarioRegistro, Alias, HoraRegistro As Range

Set UsuarioRegistro = Range("B3")
UsuarioRegistro.value = UsuarioWindows

'REGISTRA ALIAS CON BASE EN NOMBRE DE PLANEADOR
Set Alias = Range("B4")
Alias.value = ExtraeIniciales(Range("B2").value)


'REGISTRA HORA
Set HoraRegistro = Range("B6")
HoraRegistro.value = Now()

End Sub
Attribute VB_Name = "Hoja10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja43"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "LIMPIAR_HOJAS_DOTACIONES"
Attribute VB_Base = "0{9874D275-D1A3-439B-8A7E-E8BDFEDD40C7}{526389B6-E734-41C0-964A-03C999859C7B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()

If OptionButtonLimpiarTodo.value = True Then

    Call CO4_LimpiarCapturaServicios
    MsgBox "CAMPOS LIMPIOS EN PLANEACI|fffd|N Y PROGRAMACI|fffd|N"
    LIMPIAR_HOJAS_DOTACIONES.Hide

ElseIf OptionButtonLimpiarPlaneacion.value = True Then
    
     Call CO5_LimpiarCapturaServiciosPlaneacion
     MsgBox "CAMPOS LIMPIOS EN PLANEACI|fffd|N"
    LIMPIAR_HOJAS_DOTACIONES.Hide
    
ElseIf OptionButtonLimpiarProgramacion.value = True Then
    
     Call CO6_LimpiarCapturaServiciosProgramacion
     MsgBox "CAMPOS LIMPIOS EN PROGRAMACI|fffd|N"
     LIMPIAR_HOJAS_DOTACIONES.Hide


ElseIf OptionButtonLimpiarSeleccion.value = True Then
    
     Call CO7_LimpiarCapturaServiciosSeleccion
     
     LIMPIAR_HOJAS_DOTACIONES.Hide


ElseIf OptionButtonLimpiarTodo.value = False And OptionButtonLimpiarProgramacion.value = False And OptionButtonLimpiarPlaneacion.value = False And OptionButtonLimpiarSeleccion.value = False Then
    MsgBox "SELECCIONE ALGUNA OPCI|fffd|N DEL MEN|fffd|"

End If



End Sub

Private Sub CommandButton13_Click()

End Sub

Private Sub CommandButton13_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
NAVEGAR_HOJAS.Show
End Sub

Private Sub CommandButton2_Click()
LIMPIAR_HOJAS_DOTACIONES.Hide

End Sub

Private Sub UserForm_Click()

End Sub
Attribute VB_Name = "MONITOREO_SALDOS"
Attribute VB_Base = "0{70E3B839-F29D-4947-82D8-FCFF7D87C4DE}{144F2D84-F411-4F21-A85D-965469585F6E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub AlertaRojaCond2_Change()

''validar alerta roja
'If Me.AlertaRojaCond1.value = "Mayor" And _
'    (Me.AlertaRojaCond2.value <> "Igual" Or Me.AlertaRojaCond2.value <> "") And _
'    Me.AlertaRojaCond2.value <> "" Then
'
'    'mensaje de error
'    MsgBox "Error en alerta roja. Incongruencia"
'    'limpiar campos
'    Me.AlertaRojaCond2.value = ""
'    Me.AlertaRojaCond2Valor.value = ""
'
'    Exit Sub
'End If
'
'If Me.AlertaRojaCond1.value = "Mayor" And Me.AlertaRojaCond2.value <> "" And _
'    Me.AlertaRojaCond2Valor.value < Me.AlertaRojaCond1Valor Then
'    'mensaje de error
'    MsgBox "Error en alerta roja. Incongruencia"
'    'limpiar campos
'    Me.AlertaRojaCond2.value = ""
'    Me.AlertaRojaCond2Valor.value = ""
'
'    Exit Sub
'End If
'
'If Me.AlertaRojaCond1.value = "Menor" And Me.AlertaRojaCond2.value <> "" And _
'    Me.AlertaRojaCond2Valor.value > Me.AlertaRojaCond1Valor Then
'    'mensaje de error
'    MsgBox "Error en alerta roja. Incongruencia"
'    'limpiar campos
'    Me.AlertaRojaCond2.value = ""
'    Me.AlertaRojaCond2Valor.value = ""
'
'    Exit Sub
'End If
'


End Sub

Private Sub amCashOut_Click()

If Me.amCashOut.value = True Then

    Me.pmCashOut.value = False
    
End If

End Sub

Private Sub pmCashOut_Click()

If Me.pmCashOut.value = True Then

    Me.amCashOut.value = False
    
End If

End Sub

Private Sub CommandButton2_Click()

Dim fechaMonitoreo, fechaProgramDot, fechaSaldoCaja As Boolean
'validar fechas
fechaMonitoreo = IsDate(Me.ComboDiaMonitoreo.value & "/" & Me.ComboMesesMonitoreo.value & "/" & Me.ComboAnioMonitoreo)
fechaProgramDot = IsDate(Me.diaProgramDotacion.value & "/" & Me.mesProgramDotacion.value & "/" & Me.AnioProgramDotacion)
fechaSaldoCaja = IsDate(Me.diaSaldoCaja.value & "/" & Me.mesSaldoCaja.value & "/" & Me.anioSaldoCaja.value)


If fechaMonitoreo = False Then
MsgBox "! E R R O R !" & vbNewLine & "FECHA DE MONITOREO INCORRECTA"
Exit Sub
End If

If fechaProgramDot = False Then
MsgBox "! E R R O R !" & vbNewLine & "FECHA DE PROGRAMACI|fffd|N DE DOTACIONES INCORRECTA"
Exit Sub
End If

If fechaSaldoCaja = False Then
MsgBox "! E R R O R !" & vbNewLine & "FECHA DE |fffd|LTIMO SALDO EN CAJAS INCORRECTA"
Exit Sub
End If

'
If CDate(Me.diaSaldoCaja.value & "/" & Me.mesSaldoCaja.value & "/" & Me.anioSaldoCaja.value) > _
CDate(Me.ComboDiaMonitoreo.value & "/" & Me.ComboMesesMonitoreo.value & "/" & Me.ComboAnioMonitoreo) Then

MsgBox "! E R R O R !" & vbNewLine & "LA FECHA DE |fffd|LTIMO SALDO NO PUEDE SER MAYOR A LA FECHA DE MONITOREO"
Exit Sub

End If

If CDate(Me.diaProgramDotacion.value & "/" & Me.mesProgramDotacion.value & "/" & Me.AnioProgramDotacion) > _
CDate(Me.ComboDiaMonitoreo.value & "/" & Me.ComboMesesMonitoreo.value & "/" & Me.ComboAnioMonitoreo) Then

MsgBox "! E R R O R !" & vbNewLine & "LA FECHA DE PROGRAMACI|fffd|N DE DOTACI|fffd|N NO PUEDE SER MAYOR A LA FECHA DE MONITOREO"
Exit Sub

End If

Call BC_1ReporteMonitoreoSaldos


End Sub

Private Sub OptionButtonCajas_Click()
If Me.OptionButtonCajas.value = True Then
    With Me.Label33
        .Visible = True
    End With
    
    With Me.Label34
        .Visible = True
    End With
    
    With Me.Label35
        .Visible = True
    End With
    
    With Me.Label36
        .Visible = True
    End With
    
    With Me.diaSaldoCaja
        .Visible = True
    End With
    
    With Me.mesSaldoCaja
        .Visible = True
    End With
    
    With Me.anioSaldoCaja
        .Visible = True
    End With
End If
End Sub

Private Sub OptionButtonSucursales_Click()

If Me.OptionButtonSucursales.value = True Then
    With Me.Label33
        .Visible = False
    End With
    
    With Me.Label34
        .Visible = False
    End With
    
    With Me.Label35
        .Visible = False
    End With
    
    With Me.Label36
        .Visible = False
    End With
    
    With Me.diaSaldoCaja
        .Visible = False
    End With
    
    With Me.mesSaldoCaja
        .Visible = False
    End With
    
    With Me.anioSaldoCaja
        .Visible = False
    End With
End If

End Sub

Private Sub OptionButtonSucyCajas_Click()
If Me.OptionButtonSucyCajas.value = True Then
    With Me.Label33
        .Visible = True
    End With
    
    With Me.Label34
        .Visible = True
    End With
    
    With Me.Label35
        .Visible = True
    End With
    
    With Me.Label36
        .Visible = True
    End With
    
    With Me.diaSaldoCaja
        .Visible = True
    End With
    
    With Me.mesSaldoCaja
        .Visible = True
    End With
    
    With Me.anioSaldoCaja
        .Visible = True
    End With
End If
End Sub

Private Sub UserForm_initialize()
Call VariablesGlobales

Dim mesVal, anioVal, diaVal As Integer
Dim mesValAyerHabil, anioValAyerHabil, diaValAyerHabil As Integer
Dim mesLab, diaLab, anioLab As String
Dim mesLabAyerHabil, diaLabAyerHabil, anioLabAyerHabil As String

Dim fechaHoy, fechaAyer As Date

'FECHA HOY MONITOREO
Me.ComboDiaMonitoreo.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)
Me.ComboMesesMonitoreo.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")
Me.ComboAnioMonitoreo.List = Array(2019, 2020)

'FECHA HOY PROGRAMACI|fffd|N DE DOTACI|fffd|N
Me.diaProgramDotacion.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)
Me.mesProgramDotacion.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")
Me.AnioProgramDotacion.List = Array(2019, 2020)

'FECHA |fffd|LTIMO SALDO EN CAJA
Me.diaSaldoCaja.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)
Me.mesSaldoCaja.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")
Me.anioSaldoCaja.List = Array(2019, 2020)

'CASH OUT

Me.diaCashOut.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)
Me.mesCashOut.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")
Me.AnioCashOut.List = Array(2019, 2020)


'VALORES ALERTAS
Me.AlertaRojaCond1.List = Array("", "Mayor", "Menor", "Igual", "Mayor Igual", "Menor Igual")
Me.AlertaRojaCond2.List = Array("", "Mayor", "Menor", "Igual", "Mayor Igual", "Menor Igual")

Me.AlertAmarillaCond1.List = Array("", "Mayor", "Menor", "Igual", "Mayor Igual", "Menor Igual")
Me.AlertAmarillaCond2.List = Array("", "Mayor", "Menor", "Igual", "Mayor Igual", "Menor Igual")

Me.AlertVerdeCond1.List = Array("", "Mayor", "Menor", "Igual", "Mayor Igual", "Menor Igual")
Me.AlertVerdeCond2.List = Array("", "Mayor", "Menor", "Igual", "Mayor Igual", "Menor Igual")


Me.AlertaRojaCond1Valor.List = Array(0, 1, 2, 3, 4, 5, 6)
Me.AlertaRojaCond2Valor.List = Array(0, 1, 2, 3, 4, 5, 6)
Me.AlertAmarillaCond1Valor.List = Array(0, 1, 2, 3, 4, 5, 6)
Me.AlertAmarillaCond2Valor.List = Array(0, 1, 2, 3, 4, 5, 6)
Me.AlertVerdeCond1Valor.List = Array(0, 1, 2, 3, 4, 5, 6)
Me.AlertVerdeCond2Valor.List = Array(0, 1, 2, 3, 4, 5, 6)



fechaHoy = CDate(Day(fechaOperacion) & "/" & Month(fechaOperacion) & "/" & Year(fechaOperacion))

If Weekday(fechaHoy, vbMonday) = 1 Then

    fechaAyer = fechaHoy - 3

Else

    fechaAyer = fechaHoy - 1

End If


mesVal = Month(fechaHoy)
anioVal = Year(fechaHoy)
diaVal = Day(fechaHoy)

mesValAyerHabil = Month(fechaAyer)
anioValAyerHabil = Year(fechaAyer)
diaValAyerHabil = Day(fechaAyer)

'hoy
If diaVal <= 9 Then
    diaLab = "0" & diaVal
Else
    diaLab = diaVal
End If

'ayer
If diaValAyerHabil <= 9 Then
    diaLabAyerHabil = "0" & diaValAyerHabil
Else
    diaLabAyerHabil = diaValAyerHabil
End If


Select Case mesVal
Case 1
mesLab = Meses1
Case 2
mesLab = Meses2
Case 3
mesLab = Meses3
Case 4
mesLab = Meses4
Case 5
mesLab = Meses5
Case 6
mesLab = Meses6
Case 7
mesLab = Meses7
Case 8
mesLab = Meses8
Case 9
mesLab = Meses9
Case 10
mesLab = Meses10
Case 11
mesLab = Meses11
Case 12
mesLab = Meses12

End Select


Select Case mesValAyerHabil
Case 1
mesLabAyerHabil = Meses1
Case 2
mesLabAyerHabil = Meses2
Case 3
mesLabAyerHabil = Meses3
Case 4
mesLabAyerHabil = Meses4
Case 5
mesLabAyerHabil = Meses5
Case 6
mesLabAyerHabil = Meses6
Case 7
mesLabAyerHabil = Meses7
Case 8
mesLabAyerHabil = Meses8
Case 9
mesLabAyerHabil = Meses9
Case 10
mesLabAyerHabil = Meses10
Case 11
mesLabAyerHabil = Meses11
Case 12
mesLabAyerHabil = Meses12

End Select

'hoy
Me.ComboMesesMonitoreo.value = mesLab
Me.ComboDiaMonitoreo.value = diaLab
Me.ComboAnioMonitoreo.value = anioVal

'dia de programaci|fffd|n
Me.diaProgramDotacion.value = diaLabAyerHabil
Me.mesProgramDotacion.value = mesLabAyerHabil
Me.AnioProgramDotacion.value = anioValAyerHabil

'dia de |fffd|ltimo saldo de cajas
Me.diaSaldoCaja.value = diaLabAyerHabil
Me.mesSaldoCaja.value = mesLabAyerHabil
Me.anioSaldoCaja.value = anioValAyerHabil

'hoy CASH OUT
Me.mesCashOut.value = mesLab
Me.diaCashOut.value = diaLab
Me.AnioCashOut.value = anioVal
    'AM
    Me.amCashOut.value = True
    Me.pmCashOut.value = False
    
'ALERTA ROJO
Me.AlertaRojaCond1.value = "Menor Igual"
Me.AlertaRojaCond1Valor.value = 1
Me.AlertaRojaCond2.value = ""
Me.AlertaRojaCond2Valor.value = ""

'ALERTA AMARILLA

Me.AlertAmarillaCond1.value = "Menor Igual"
Me.AlertAmarillaCond1Valor.value = 2
Me.AlertAmarillaCond2.value = ""
Me.AlertAmarillaCond2Valor.value = ""

'ALERTA VERDE
Me.AlertVerdeCond1.value = "Mayor"
Me.AlertVerdeCond1Valor.value = 2
Me.AlertVerdeCond2.value = "Menor Igual"
Me.AlertVerdeCond2Valor.value = 7


Me.OptionButtonSucyCajas.value = True

End Sub
Attribute VB_Name = "M|fffd|dulo1"
Sub ListaCajasPorEtv()

Call ConcatenarEtvPlaza
Call ExtraerEtvPlazaUnicas
Call CamposCatalosXSucursal
Call CatalogoEtvPorPlaza

End Sub

Private Sub ConcatenarEtvPlaza()
'extraer nombres de sucursales
''extraer sucursal y fecha concentraci|fffd|n
Call VariablesGlobales

Dim celda As Object
Dim i As Integer
Dim row1, col1 As Integer
Dim TotalRegistros As Long

'fila y columna de inicio cat|fffd|logo de plazas y sucursales
row1 = 2
col1 = 16

Sheets(sh4).Select

'total registros
TotalRegistros = Range(Cells(row1, col1 + 2), Cells(row1, col1 + 2).End(xlDown)).Count
Sheets(sh4).Select

'limpiar
Columns(col1 + 6).ClearContents
Columns(col1 + 9).ClearContents
Columns(col1 + 10).ClearContents
Range(Cells(2, col1 + 11), Cells(100000, col1 + 200)).ClearContents

'concatenar
For j = 1 To TotalRegistros
Cells(row1, col1 + 6) = Cells(row1, col1 + 2) & "|" & Cells(row1, col1 + 3)
row1 = row1 + 1
Next j

End Sub


Private Sub ExtraerEtvPlazaUnicas()
'extraer nombres de sucursales
''extraer sucursal y fecha concentraci|fffd|n
Call VariablesGlobales

Dim celda As Object
Dim i As Integer
Dim row1, col1 As Integer
Dim TotalRegistros As Long

'fila y columna de inicio cat|fffd|logo de plazas y sucursales
row1 = 2
col1 = 16

'generamos la coleccion
Set unicos = New Collection
'loop en todas las celdas y agregarlas a la coleccion
For Each celda In Range(Cells(row1, col1 + 6), Cells(row1, col1 + 6).End(xlDown))
    'cuando encuentre un item repetido, dar|fffd|a un error
    'que salvamos con la instrucci|fffd|n On Error Resume Next
    On Error Resume Next
    'por tanto, nuestra coleccion solo agrega elementos no repetidos
    'objeto.Add item, key, before, after
    'ocurre un error si una key especificada duplica la key de un miembro existente de la colecci|fffd|n
    unicos.Add celda.value, CStr(celda.value)
    On Error GoTo 0
    
Next celda


'escribir los datos unicos en la Hoja de c|fffd|lculo

For i = 1 To unicos.Count
    Sheets(sh4).Range("Y2").Offset(i - 1, 0).value = unicos(i)
Next i

'divir en columna
Range("Y2").Select
Range(Selection, Selection.End(xlDown)).Select
    Selection.TextToColumns Destination:=Range("Y2"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
        :="|", FieldInfo:=Array(Array(1, 2), Array(2, 1)), TrailingMinusNumbers:=True
        
'Reemplazar los espacios por "_"
    Columns("Z:Z").Select
    Selection.Replace What:=" ", Replacement:="_", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
        
End Sub

Sub ExtraerPlazaUnicas()
'extraer nombres de sucursales
''extraer sucursal y fecha concentraci|fffd|n
Call VariablesGlobales

Dim celda As Object
Dim i As Integer
Dim row1, col1 As Integer
Dim TotalRegistros As Long

'fila y columna de inicio cat|fffd|logo de plazas y sucursales
row1 = 2
col1 = 16

'generamos la coleccion
Set unicos = New Collection
'loop en todas las celdas y agregarlas a la coleccion
For Each celda In Range(Cells(row1, col1 + 3), Cells(row1, col1 + 3).End(xlDown))
    'cuando encuentre un item repetido, dar|fffd|a un error
    'que salvamos con la instrucci|fffd|n On Error Resume Next
    On Error Resume Next
    'por tanto, nuestra coleccion solo agrega elementos no repetidos
    'objeto.Add item, key, before, after
    'ocurre un error si una key especificada duplica la key de un miembro existente de la colecci|fffd|n
    unicos.Add celda.value, CStr(celda.value)
    On Error GoTo 0
    
Next celda


'escribir los datos unicos en la Hoja de c|fffd|lculo

For i = 1 To unicos.Count
    Sheets(sh4).Range("AA1").Offset(0, i - 1).value = unicos(i)
Next i

'dividir por columnas

End Sub

Sub CamposCatalosXSucursal()
Call VariablesGlobales
'proceso anterior extraes sucursales |fffd|nicas en columna Y
'Extrae la sucursales nuevas del directorio
'Definimos variables
Dim lookupvalue, value As Variant
Dim NombreRango As String
Dim celda, lookupRange, rango As Range
Dim col0, col1, TotalPlazas As Integer
'N|fffd|mero de columna de AA
col0 = 27
'Numero de columna plazas
col1 = 26

'numero de plazas registradas previamente
If Cells(1, col0) = "" And Cells(1, col0 + 1) = "" Then
TotalPlazas = 0
Else
TotalPlazas = Range(Cells(1, col0), Cells(1, col0).End(xlToRight)).Count
End If

NuevaColumnaCajas = col0 + TotalPlazas

celda = Range(Cells(2, col0 - 8), Cells(2, col0 - 8)).value 'celda con el valor que buscamos

Set lookupRange = Range(Cells(1, col0), Cells(1, col0).End(xlToRight)) 'rango donde buscar

Set rango = Range(Cells(2, col1), Cells(2, col1).End(xlDown)) 'rango donde buscar


For Each celda In rango
'Queremos la columna 3
value = celda.value


lookupvalue = Application.HLookup(value, lookupRange, 1, False)
'Si no encuentra valor finaliza
    If IsError(lookupvalue) Then
        Cells(1, NuevaColumnaCajas) = value
        NombreRango = value
        'nombrar de captura rango
        
        'NOMBRE DEL RANGO
            Range(Cells(2, NuevaColumnaCajas), Cells(7, NuevaColumnaCajas)).Select
            'definir nombre
            ActiveWorkbook.Names.Add Name:=NombreRango, RefersToR1C1:= _
                "=" & sh4 & "!R2C" & NuevaColumnaCajas & ":R17C" & NuevaColumnaCajas
            'ActiveWorkbook.Names(value).Comment = ""


        NuevaColumnaCajas = NuevaColumnaCajas + 1
    'Si lo encuentra lo devuelve
    
    Else
        NuevaColumnaCajas = NuevaColumnaCajas
    End If

Next celda

End Sub

Sub ListasPlazaEnEtv()
Call VariablesGlobales

Sheets(sh4).Select
Dim row1, col1, ColEtv1, ColEtv2, ColEtv3, ColEtv4, ColEtv5, ColEtv6, ColEtv7, ColEtv8, ColEtv9 As Integer
Dim TotEtv1, TotEtv2, TotEtv3, TotEtv4, TotEtv5, TotEtv6, TotEtv7, TotEtv8, TotEtv9 As Long
Dim celda, rango As Range
'fila y columna de inicio cat|fffd|logo de plazas y sucursales
row1 = 2
col1 = 16
ColEtv1 = 27
ColEtv2 = 28
ColEtv3 = 29
ColEtv4 = 30
'Etv1 = "COMETRA"
'Etv2 = "PANAMERICANO"
'Etv3 = "SEGURITEC"
'Etv4 = "SEPSA"

'Inicializar fila inicio de campos de ETV
'limpiar
Range(Cells(2, ColEtv1), Cells(100000, ColEtv4)).ClearContents
TotEtv1 = 2
TotEtv2 = 2
TotEtv3 = 2
TotEtv4 = 2

Set rango = Range(Cells(row1, col1 + 3), Cells(row1, col1 + 3).End(xlDown))

For Each celda In rango
MsgBox celda.value
If celda = Etv1 Then
    Cells(TotEtv1, ColEtv1) = celda.value
    TotEtv1 = TotEtv1 + 1
ElseIf celda = Etv2 Then
    Cells(TotEtv2, ColEtv2) = celda.value
    TotEtv2 = TotEtv2 + 1
ElseIf celda = Etv3 Then
    Cells(TotEtv3, ColEtv3) = celda.value
    TotEtv3 = TotEtv3 + 1
ElseIf celda = Etv4 Then
    Cells(TotEtv4, ColEtv4) = celda.value
    TotEtv4 = TotEtv4 + 1
Else
End If

Next celda

End Sub

Sub CatalogoEtvPorPlaza()
Call VariablesGlobales
'contar cuantas veces se repite la plaza
Dim RangoPlazas, celda As Range
Dim ValorPlaza As String
Dim ColPlaza, NumPlazas, RowPlaza, RowPlazaN As Integer
Dim contar As Long


Sheets(sh4).Select
'columna de nombre de plazas |fffd|nicas
Set RangoPlazas = Range(Cells(2, 26), Cells(2, 26).End(xlDown))


'comienza en la columna AA la lista de plazas
ColPlaza = 27

'fila inicio de registro
RowPlazaN = 2
'fila de registro del nombre de las plazas
RowPlaza = 1

'contar el n|fffd|mero de plazas
NumPlazas = Range(Cells(1, ColPlaza), Cells(1, ColPlaza).End(xlToRight)).Count

'Limpiar rango de captura
Range(Cells(2, ColPlaza), Cells(17, NumPlazas + ColPlaza)).ClearContents

For i = 1 To NumPlazas

    ValorPlaza = Cells(RowPlaza, ColPlaza)
    contar = Application.WorksheetFunction.CountIf(RangoPlazas, ValorPlaza)
        
        For Each cell In RangoPlazas
        
                If cell.value = ValorPlaza Then
                    
                    If (Range(Cells(1, ColPlaza), Cells(1, ColPlaza).End(xlDown)).Count) > 17 Then
                    Cells(RowPlazaN, ColPlaza) = cell.Offset(0, -1).value
                    Else
                    Cells((Range(Cells(1, ColPlaza), Cells(1, ColPlaza).End(xlDown)).Count) + 1, ColPlaza) = cell.Offset(0, -1).value
                    'RowPlazaN = RowPlazaN + 1
                    End If
                
                Else
                    RowPlazaN = 2
                End If
         
            
            
            
        Next
        
    ColPlaza = ColPlaza + 1
Next

End Sub
Sub nombrar()
MsgBox ActiveCell.Column

End Sub


Sub PRUEBADECIMALES()

MsgBox "10.7 / 0.2 " & Format(10.7 / 0.2, "###.00") & Chr(10) & _
"(Application.WorksheetFunction.RoundDown(10.7 / 0.2)) " & Application.WorksheetFunction.RoundDown(10.7 / 0.2, 0)

End Sub
Attribute VB_Name = "M|fffd|dulo2"

'Function HorasMonitoreo(hoja As String) As Collection
Sub HorasMonitoreo()
'Obtener la hora menor y mayor de los monitoreos de saldos
Dim row0, totRows As Long
Dim punteroHora, contador As Integer
Dim MONITOR() As Variant
Dim Horarios As Collection: Set Horarios = New Collection
Dim HorariosOrdenados As Collection: Set HorariosOrdenados = New Collection
Dim ORDEN_HORARIOS() As Variant
Dim horaMin, horaMax As Date
Dim varTemp As Variant

Sheets("Hoja1").Select
row0 = 1

totRows = Range("A65000").End(xlUp).Row
punteroHora = 4

ReDim MONITOR(totRows, 5)

For i = 1 To UBound(MONITOR)
    'ID SUC
    MONITOR(i, 1) = Cells(row0, 1)
    'SUCURSAL
    MONITOR(i, 2) = Cells(row0, 2)
    'FECHA
    MONITOR(i, 3) = Cells(row0, 3)
    'HORA
    MONITOR(i, 4) = Cells(row0, 4)
    'IMPORTE
    MONITOR(i, 5) = Cells(row0, 5)
    
    row0 = row0 + 1
Next i

For i = 1 To UBound(MONITOR)
    On Error Resume Next
    
        Horarios.Add MONITOR(i, punteroHora), CStr(MONITOR(i, punteroHora))
    
    On Error GoTo 0
    
Next i


'arreglo para obtener hora m|fffd|nima y m|fffd|xima

ReDim ORDEN_HORARIOS(Horarios.Count)

For i = 1 To Horarios.Count
    
    ORDEN_HORARIOS(i) = Horarios(i)
    
Next i

'horario menor
    horaMin = WorksheetFunction.Min(ORDEN_HORARIOS)
'
'    HorariosOrdenados.Add horaMin
'
'    varTemp = horaMin

    
    On Error Resume Next
    
For i = 1 To Horarios.Count
    
    For j = 1 To Horarios.Count
        
        If Horarios(i) = horaMin Then
        
            HorariosOrdenados.Add Horarios(i)
            varTemp = Horarios(i)
            contador = 1
            
            Horarios.Remove (i)
            'Exit For
            
        ElseIf Horarios(j) <= Horarios(i) And Horarios(j) > varTemp Then
        
            
            varTemp = Horarios(j)
            
            
        
        End If
        

    Next j
        
        HorariosOrdenados.Add varTemp ', After:=HorariosOrdenados.Count
        Horarios.Remove varTemp
        
Next i
    
    On Error GoTo 0
    

For i = 1 To HorariosOrdenados.Count

    Cells(i, 8) = HorariosOrdenados(i)
    
Next i

End Sub




Function HoraMinMaxMonitoreo(Min_1_Max_2 As Integer, hoja As String)

'Obtener la hora menor y mayor de los monitoreos de saldos
Dim row0, totRows As Long
Dim punteroHora As Integer
Dim MONITOR() As Variant
Dim Horarios As Collection: Set Horarios = New Collection
Dim ORDEN_HORARIOS() As Variant
Dim horaMin, horaMax As Date

Sheets(hoja).Select
row0 = 1

totRows = Range("A65000").End(xlUp).Row
punteroHora = 4

ReDim MONITOR(totRows, 5)

For i = 1 To UBound(MONITOR)
    'ID SUC
    MONITOR(i, 1) = Cells(row0, 1)
    'SUCURSAL
    MONITOR(i, 2) = Cells(row0, 2)
    'FECHA
    MONITOR(i, 3) = Cells(row0, 3)
    'HORA
    MONITOR(i, 4) = Cells(row0, 4)
    'IMPORTE
    MONITOR(i, 5) = Cells(row0, 5)
    
    row0 = row0 + 1
Next i

For i = 1 To UBound(MONITOR)
    On Error Resume Next
    
        Horarios.Add MONITOR(i, punteroHora), CStr(MONITOR(i, punteroHora))
    
    On Error GoTo 0
    
Next i


'arreglo para obtener hora m|fffd|nima y m|fffd|xima

ReDim ORDEN_HORARIOS(Horarios.Count)

For i = 1 To Horarios.Count
    
    ORDEN_HORARIOS(i) = Horarios(i)
    
Next i

If Min_1_Max_2 = 1 Then

    HoraMinMaxMonitoreo = WorksheetFunction.Min(ORDEN_HORARIOS)

ElseIf Min_1_Max_2 = 2 Then

    HoraMinMaxMonitoreo = WorksheetFunction.Max(ORDEN_HORARIOS)

End If

End Function


Sub sumarArray()
Dim SUMAR(4, 3) As Variant

SUMAR(1, 1) = "uno"
SUMAR(1, 2) = 1
SUMAR(1, 3) = 10
SUMAR(2, 1) = "dos"
SUMAR(2, 2) = 2
SUMAR(2, 3) = 20
SUMAR(3, 1) = "tres"
SUMAR(3, 2) = 3
SUMAR(3, 3) = 30
SUMAR(4, 1) = "cuatro"
SUMAR(4, 2) = 4
SUMAR(4, 3) = 40

MsgBox WorksheetFunction.Sum(SUMAR())

'MsgBox WorksheetFunction.Sum(SUMAR(1, 2), SUMAR(UBound(SUMAR), 2))


End Sub
Attribute VB_Name = "M|fffd|dulo3"
Sub pruebita()

'MsgBox CStr((Left(ActiveWorkbook.Path, 2)) & "\" & "Planeaciones") = Left(ActiveWorkbook.Path, 15)
MsgBox ActiveWorkbook.Name

End Sub
Attribute VB_Name = "M|fffd|dulo4"
Sub CM7_C_ReportesRemesasSII()

Call VariablesGlobales

Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual

Dim REMESAS_SII() As Variant
Dim fechas_unicas_sii As Collection: Set fechas_unicas_sii = New Collection
Dim FECHAS_SII() As Variant
Dim row0, rowFin As Long
Dim colFin, totalRegistrosUSD As Long
Dim sumaTotalRegistrosUSD As Double

Dim marca, agencia, tmSh, cuSh, repSii4 As String

hora1 = Now()


'sh27 = "SALDO INICIAL"
'libro principal
cuSh = ActiveWorkbook.Name
'sh27 = "SALDO INICIAL"
Sheets(sh27).Select


'Reporte JKASSA Resumen de Operaciones en Sucursal
'Etiqueta en A1 reporte SII
repSii4 = "F. Rec"



'primera l|fffd|nea de registros
row0JK4 = 1
row0AS1 = 1

row0 = 1

'N|fffd|mero de columnas en el arreglo
colFin = 19

'''''''''''''''''''''''''''''SUCURSALES CAT|fffd|LOGO'''''''''''''''''''''''''''''
'sh4 = "Info. Gral."
punteroCatSuc = 123

contadorCatSuc = 2
Sheets(sh4).Select


numCatSuc = Cells(2, punteroCatSuc).End(xlDown).Row - 1

ReDim REMESADORAS_CATALOGO(numCatSuc, 4)

For i = 1 To UBound(REMESADORAS_CATALOGO)
    'Destino Pago - Remesadoras
    REMESADORAS_CATALOGO(i, 1) = Cells(contadorCatSuc, punteroCatSuc)
    'sucursal
    REMESADORAS_CATALOGO(i, 2) = Cells(contadorCatSuc, punteroCatSuc + 1)
    'id sucursal
    REMESADORAS_CATALOGO(i, 3) = Cells(contadorCatSuc, punteroCatSuc + 2)
    'estatus
    REMESADORAS_CATALOGO(i, 4) = Cells(contadorCatSuc, punteroCatSuc + 3)
    
    contadorCatSuc = contadorCatSuc + 1
    
Next i





''Agregar libro
'    Workbooks.Add
'    Range("a1").Select
'    nwSh = ActiveWorkbook.Name
'
ChDrive (UnidadAsignada)
ChDir (UnidadAsignada & rutaRepositorioPersonal)
archi = Dir("*")

'MsgBox UnidadAsignada & rutaRepositorioPersonal
'
'MsgBox archi

 
 
Do While archi <> ""
     'abrir
     Workbooks.Open Filename:=UnidadAsignada & "\" & rutaRepositorioPersonal & "\" & archi
     
    tmSh = ActiveWorkbook.Name
    
    
            If Range("A1").value = repSii4 Then
            
                'FECHA VALOR
                repSiiFecha = Range("L3").value
                
                
                Sheets(1).Select
                
                row0 = 1
                rowFin = Range("A1000000").End(xlUp).Row
                
                
                'si hay menos de 4 filas con info
                If rowFin < 4 Then
                    
                    Windows(tmSh).Activate
                    ActiveWorkbook.Close False
                    
                    'Regresar
                    Windows(cuSh).Activate
                    Sheets(sh27).Select
                    
                    MsgBox "EL REPORTE DE SII NO CONTIENE INFORMACI|fffd|N"
                    Exit Sub
                
                End If
                
                
                marca = "AGENCIA :"
                
                
                
                ReDim REMESAS_SII(rowFin, colFin)
                
                
                For i = 1 To rowFin
                    'F.Rec
                    REMESAS_SII(i, 1) = Cells(row0, 1)
                    'F.Env
                    REMESAS_SII(i, 2) = Cells(row0, 2)
                    'Referencia
                    REMESAS_SII(i, 3) = Cells(row0, 3)
                    'Consecutivo
                    REMESAS_SII(i, 4) = Cells(row0, 4)
                    'Beneficiario
                    REMESAS_SII(i, 5) = Cells(row0, 5)
                    'Destino Pago
                    REMESAS_SII(i, 6) = Cells(row0, 6)
                    'L.Pago
                    REMESAS_SII(i, 7) = Cells(row0, 7)
                    'Imp. USD
                    REMESAS_SII(i, 8) = Cells(row0, 8)
                    'TC
                    REMESAS_SII(i, 9) = Cells(row0, 9)
                    'A Pagar
                    REMESAS_SII(i, 10) = Cells(row0, 10)
                    'Divisa
                    REMESAS_SII(i, 11) = Cells(row0, 11)
                    'F. Edo.
                    REMESAS_SII(i, 12) = Cells(row0, 12)
                    'Hora.
                    REMESAS_SII(i, 13) = Cells(row0, 13)
                    'IFE.
                    If IsNumeric(REMESAS_SII(i, 14)) Then
                    
                        REMESAS_SII(i, 14) = "'" & CStr(Cells(row0, 14))
                    
                    Else
                        REMESAS_SII(i, 14) = Cells(row0, 14)
                            
                    End If
                    
                    'Edo.
                    REMESAS_SII(i, 15) = Cells(row0, 15)
                    'AGENCIA
                    
                    
                    If row0 = 1 Then
                    
                        REMESAS_SII(i, 16) = ""
                        
                    ElseIf row0 > 1 And Cells(row0 - 1, 1) = marca Then
                    
                        agencia = Cells(row0 - 1, 2)
                        REMESAS_SII(i, 16) = agencia
                    
                    Else
                    
                        REMESAS_SII(i, 16) = agencia
                        
                    End If
                    
                    
                    'ID CORRESPONSAL
                    
                    For j = 1 To UBound(REMESADORAS_CATALOGO)
                    
                        If Cells(row0, 6) = REMESADORAS_CATALOGO(j, 1) Then
                            'id sucursal
                            REMESAS_SII(i, 17) = REMESADORAS_CATALOGO(j, 3)
                            'sucursal
                            REMESAS_SII(i, 18) = REMESADORAS_CATALOGO(j, 2)
                            'estatus
                            REMESAS_SII(i, 19) = REMESADORAS_CATALOGO(j, 4)
                            
                            Exit For
                            
                        End If
                        
                        
                    Next j
                    
                    
                    
                    row0 = row0 + 1
                    
                Next i
                
                'total USD
                totalRegistrosUSD = REMESAS_SII(rowFin - 1, 4)
                sumaTotalRegistrosUSD = REMESAS_SII(rowFin - 1, 1)
                
                'MsgBox "totalRegistrosUSD = " & totalRegistrosUSD & vbNewLine & "sumaTotalRegistrosUSD = " & sumaTotalRegistrosUSD
                '
'
'                'mover
'                FileCopy UnidadAsignada & rutaRepositorioPersonal & "\" & archi, UnidadAsignada & "Reportes_SAP" & "\" & "Avansoft" & "\" & nombreCarpetaAvansoft & "\" & nombreArchivoAvansoft & ".xlsx"
'                '

                Else
                
                Windows(tmSh).Activate
                ActiveWorkbook.Close False
            
            
            End If
            
'             tmSh.Close False
            Workbooks(tmSh).Close False
            
    
    archi = Dir()
    
Loop




'lista de fechas
For i = 1 To UBound(REMESAS_SII)

    On Error Resume Next
    
    
    If IsDate(REMESAS_SII(i, 1)) Then
    
    'MsgBox REMESAS_SII(i, 1)
    
        fechas_unicas_sii.Add REMESAS_SII(i, 1), CStr(REMESAS_SII(i, 1))
    
    End If
    
    On Error GoTo 0
    

Next i


ReDim FECHAS_SII(fechas_unicas_sii.Count)

For i = 1 To fechas_unicas_sii.Count

    FECHAS_SII(i) = CDate(fechas_unicas_sii(i))

Next i


''valor m|fffd|ximo de fechas
valMax = 0

For i = 1 To fechas_unicas_sii.Count
    
    If fechas_unicas_sii(i) > valMax Then
        
        valMax = fechas_unicas_sii(i)
    
    End If

Next i



''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''TODOS LOS CAMPOS''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


'nueva hoja
Workbooks.Add
'hoja 1
Sheets(1).Select

row0 = 2

For i = 1 To UBound(REMESAS_SII)
    
    
    If IsDate(REMESAS_SII(i, 1)) Then
    
        'ID CORRESPONSAL
        
        Cells(row0, 1) = REMESAS_SII(i, 16)
        
        'id sucursal
        Cells(row0, 2) = REMESAS_SII(i, 17)
        'sucursal
        Cells(row0, 3) = REMESAS_SII(i, 18)
        'estatus
        Cells(row0, 4) = REMESAS_SII(i, 19)
        
        'F. Rec
        Cells(row0, 5) = REMESAS_SII(i, 1)
        'F. Env
        Cells(row0, 6) = REMESAS_SII(i, 2)
        'Referencia
        Cells(row0, 7) = "'" & CStr(REMESAS_SII(i, 3))
        'Consecutivo
        Cells(row0, 8) = REMESAS_SII(i, 4)
        'Beneficiario
        Cells(row0, 9) = REMESAS_SII(i, 5)
        'Destino Pago
        Cells(row0, 10) = REMESAS_SII(i, 6)
        'L. Pago
        Cells(row0, 11) = REMESAS_SII(i, 7)
        'Imp. USD
        Cells(row0, 12) = REMESAS_SII(i, 8)
        'TC
        Cells(row0, 13) = REMESAS_SII(i, 9)
        'A Pagar
        Cells(row0, 14) = REMESAS_SII(i, 10)
        'Divisa
        Cells(row0, 15) = REMESAS_SII(i, 11)
        'F. Edo.
        Cells(row0, 16) = REMESAS_SII(i, 12)
        'Hora.
        Cells(row0, 17) = REMESAS_SII(i, 13)
        
        'IFE.
        If IsNumeric(REMESAS_SII(i, 14)) Then
            'IFE.
            Cells(row0, 18) = "'" & CStr(REMESAS_SII(i, 14))
        
        Else
            'IFE.
            Cells(row0, 18) = REMESAS_SII(i, 14)
            
        End If
        
        'Edo.
        Cells(row0, 19) = REMESAS_SII(i, 15)
    
        
        row0 = row0 + 1
    
    End If
    
Next i

'encabezados

Cells(1, 1) = "AGENCIA"
Cells(1, 2) = "ID SUCURSAL"
Cells(1, 3) = "SUCURSAL"
Cells(1, 4) = "ESTATUS SUCURSAL"
Cells(1, 5) = "Fecha Recepci|fffd|n"
Cells(1, 6) = "Fecha Envio"
Cells(1, 7) = "Referencia"
Cells(1, 8) = "Consecutivo"
Cells(1, 9) = "Beneficiario"
Cells(1, 10) = "Destino Pago"
Cells(1, 11) = "L. Pago"
Cells(1, 12) = "Importe USD"
Cells(1, 13) = "TC"
Cells(1, 14) = "A Pagar"
Cells(1, 15) = "Divisa"
Cells(1, 16) = "Fecha Edo."
Cells(1, 17) = "Hora."
Cells(1, 18) = "IFE."
Cells(1, 19) = "Edo."

''
'Sheets.Add
'
'For i = 1 To UBound(FECHAS_SII)
'
'    Cells(i, 1) = i
'    Cells(i, 2) = FECHAS_SII(i)
'
'Next i


Windows(cuSh).Activate
Sheets(sh27).Select

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''TODOS LOS CAMPOS''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


'nueva hoja
Workbooks.Add
'hoja 1
Sheets(1).Select

    Columns("A:C").Select
    Selection.NumberFormat = "@"
    
row0 = 2

For i = 1 To UBound(REMESAS_SII)
    
    
    If IsDate(REMESAS_SII(i, 1)) Then
        
        'F. Rec
        
        diaLabel = Day(REMESAS_SII(i, 1))
        mesLabel = Month(REMESAS_SII(i, 1))
        anioLabel = Year(REMESAS_SII(i, 1))
        
        If diaLabel < 10 Then
        nombreDiaLabel = "0" & diaLabel
        Else
        nombreDiaLabel = diaLabel
        End If
        
        If mesLabel < 10 Then
        nombreMesLabel = "0" & mesLabel
        Else
        nombreMesLabel = mesLabel
        End If
        
        Cells(row0, 1) = anioLabel & "-" & nombreMesLabel & "-" & nombreDiaLabel
        
        
        
        'F. Env
        diaLabelEnv = Day(REMESAS_SII(i, 2))
        mesLabelEnv = Month(REMESAS_SII(i, 2))
        anioLabelEnv = Year(REMESAS_SII(i, 2))
        
        If diaLabelEnv < 10 Then
        nombreDiaLabelEnv = "0" & diaLabelEnv
        Else
        nombreDiaLabelEnv = diaLabelEnv
        End If
        
        If mesLabel < 10 Then
        nombreMesLabelEnv = "0" & mesLabelEnv
        Else
        nombreMesLabelEnv = mesLabelEnv
        End If
        
        Cells(row0, 2) = anioLabelEnv & "-" & nombreMesLabelEnv & "-" & nombreDiaLabelEnv
        
        
        
        'F. Env
        diaLabelReg = Day(valMax)
        mesLabelReg = Month(valMax)
        anioLabelReg = Year(valMax)
        
        If diaLabelReg < 10 Then
        nombreDiaLabelReg = "0" & diaLabelReg
        Else
        nombreDiaLabelReg = diaLabelReg
        End If
        
        If mesLabel < 10 Then
        nombreMesLabelReg = "0" & mesLabelReg
        Else
        nombreMesLabelReg = mesLabelReg
        End If
        
        Cells(row0, 3) = anioLabelReg & "-" & nombreMesLabelReg & "-" & nombreDiaLabelReg
        
        'id sucursal
        Cells(row0, 4) = REMESAS_SII(i, 17)
        'sucursal
        Cells(row0, 5) = REMESAS_SII(i, 18)
        
        'Destino Pago
        Cells(row0, 6) = REMESAS_SII(i, 6)
        
        'N|fffd|mero de semana
        
        'A Pagar
        Cells(row0, 8) = REMESAS_SII(i, 10)
        
        'Hora
        Cells(row0, 12) = REMESAS_SII(i, 13)
        
        'Punto de pago
        'L. Pago
        Cells(row0, 10) = REMESAS_SII(i, 7)
        
        'Imp. USD
        Cells(row0, 11) = REMESAS_SII(i, 8)
 
        'Edo.
        
        If REMESAS_SII(i, 15) = "P" Then
        
            Cells(row0, 9) = "PAGADO"
        
        ElseIf REMESAS_SII(i, 15) = "PP" Then
        
            Cells(row0, 9) = "POR PAGAR"
        
        ElseIf REMESAS_SII(i, 15) = "C" Then
        
            Cells(row0, 9) = "CANCELADO"
        
        Else
        
            Cells(row0, 9) = REMESAS_SII(i, 12)
        
        End If
        
    
        
        row0 = row0 + 1
    
    End If
    
Next i

'encabezados

Cells(1, 1) = "Fecha Recepci|fffd|n"
Cells(1, 2) = "Fecha Envio"
Cells(1, 3) = "Fecha Pago"
Cells(1, 4) = "Id"
Cells(1, 5) = "Sucursal"
Cells(1, 6) = "Destino Pago"
Cells(1, 7) = "Numero Semana"
Cells(1, 8) = "A Pagar"
Cells(1, 9) = "Estado"
Cells(1, 10) = "Punto de Pago"
Cells(1, 11) = "Imp USD"
Cells(1, 12) = "Hora"


Application.ScreenUpdating = True
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic




hora2 = Now()

MsgBox "TERMIN|fffd| " & vbNewLine & Format(hora2 - hora1, "hh:mm:ss")


End Sub



Attribute VB_Name = "M|fffd|dulo5"
Sub probarCO()

Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual

Call VariablesGlobales

''''''''''''''''''''''''''''''''''CASH OUT OPD-TDD-REMESAS CAPTURADAS''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Dim row0CashIn, col0CashIn, totRowsCashIn As Long
Dim CASH_IN() As Variant
Dim punteroIdCashIn As Integer
Dim carpetaCashIn, fechaCashIn As String
Dim fechaRegistroCashIn, fechaRegistroPlaneacionCashIn As Date
Dim diaCashIn, mesCashIn, AnioCashIn As Long
Dim labelDiaCashIn, labelMesCashIn As String
Dim indicadorHorarioCashIn As Integer
Dim fechaDefinitivaCashIn As Date
Dim nombreHojas As String
'fecha homologada con la fecha establecida para cash out
fechaDefinitivaCashIn = Date

punteroIdCashIn = 1

nombreHojas = sh6

diaCashIn = Day(fechaDefinitivaCashIn)
mesCashIn = Month(fechaDefinitivaCashIn)
AnioCashIn = Year(fechaDefinitivaCashIn)

'd|fffd|a etiqueta
If diaCashIn < 10 Then

    labelDiaCashIn = "0" & diaCashIn

Else

    labelDiaCashIn = diaCashIn
    
End If

'mes etiqueta
If mesCashIn < 10 Then

    labelMesCashIn = "0" & mesCashIn

Else

    labelMesCashIn = mesCashIn
    
End If

'limpiar hoja PROCESAR
Sheets(sh6).Select
Cells.Clear



carpetaCashIn = CStr(UnidadAsignada) & RutaCashInHistorico & AnioCashIn & "\"
fechaCashIn = labelDiaCashIn & " " & labelMesCashIn & " " & AnioCashIn


ChDrive (UnidadAsignada)
ChDir (carpetaCashIn)
archi = Dir(fechaCashIn & "*")

If archi = "" Then

    MsgBox "NO HAY ARCHIVO DE CASH IN DE " & fechaCashIn
    Exit Sub
End If

Call ImportarArchivosTxt(CStr(carpetaCashIn), CStr(fechaCashIn), "*", nombreHojas)

Sheets(sh6).Select

row0CashIn = 1
col0CashIn = 1
totRowsCashIn = Range("A1000000").End(xlUp).Row
'totCols

'Monitoreo saldos sucursales
If totRowsCashIn > 2 Then

    Range(Cells(row0CashIn, col0CashIn), Cells(totRowsCashIn, col0CashIn)).Select
    Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=True, OtherChar _
        :="|", FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, _
        1), Array(6, 1), Array(7, 1), Array(8, 1), Array(9, 1), Array(10, 1), Array(11, 1) _
        , Array(12, 1), Array(13, 4), Array(14, 4), Array(15, 1)), TrailingMinusNumbers:=True

End If

'si no hay registros de monitoreo
If totRowsCashIn <= 5 Then
    ReDim CASH_IN(2, 12)
        'ID SUCURSAL
        CASH_IN(1, 1) = 0
        'FECHA
        CASH_IN(1, 2) = 0
        'LUNES
        CASH_IN(1, 3) = 0
        'MARTES
        CASH_IN(1, 4) = 0
        'MIERCOLES
        CASH_IN(1, 5) = 0
        'JUEVES
        CASH_IN(1, 6) = 0
        'VIERNES
        CASH_IN(1, 7) = 0
        'SABADO
        CASH_IN(1, 8) = 0
        'DOMINGO
        CASH_IN(1, 9) = 0
        'SIG LUNES
        CASH_IN(1, 10) = 0
        'SIG MARTER
        CASH_IN(1, 11) = 0
        'SIG MIERCOLES
        CASH_IN(1, 12) = 0
        
        'ID SUCURSAL
        CASH_IN(2, 1) = 0
        'FECHA
        CASH_IN(2, 2) = 0
        'LUNES
        CASH_IN(2, 3) = 0
        'MARTES
        CASH_IN(2, 4) = 0
        'MIERCOLES
        CASH_IN(2, 5) = 0
        'JUEVES
        CASH_IN(2, 6) = 0
        'VIERNES
        CASH_IN(2, 7) = 0
        'SABADO
        CASH_IN(2, 8) = 0
        'DOMINGO
        CASH_IN(2, 9) = 0
        'SIG LUNES
        CASH_IN(2, 10) = 0
        'SIG MARTER
        CASH_IN(2, 11) = 0
        'SIG MIERCOLES
        CASH_IN(2, 12) = 0

Else

    ReDim CASH_IN(totRowsCashIn, 12)
    For i = 1 To UBound(CASH_IN)
        
        If IsNumeric(Cells(i, 1)) Then
        
        'ID SUCURSAL
        CASH_IN(i, 1) = Cells(i, 1)
        'FECHA
        CASH_IN(i, 2) = Cells(i, 13)
        'LUNES
        CASH_IN(i, 3) = Cells(i, 2)
        'MARTES
        CASH_IN(i, 4) = Cells(i, 3)
        'MIERCOLES
        CASH_IN(i, 5) = Cells(i, 4)
        'JUEVES
        CASH_IN(i, 6) = Cells(i, 5)
        'VIERNES
        CASH_IN(i, 7) = Cells(i, 6)
        'SABADO
        CASH_IN(i, 8) = Cells(i, 7)
        'DOMINGO
        CASH_IN(i, 9) = Cells(i, 8)
        'SIG LUNES
        CASH_IN(i, 10) = Cells(i, 9)
        'SIG MARTES
        CASH_IN(i, 11) = Cells(i, 10)
        'SIG MIERCOLES
        CASH_IN(i, 12) = Cells(i, 11)
        
        End If
        
    Next i

End If

    
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic

    
End Sub

Sub IMPRIMIR()


MsgBox TypeName(ActiveCell.value)


End Sub
Attribute VB_Name = "NAVEGAR_HOJAS"
Attribute VB_Base = "0{57A156F4-177B-4380-91D4-E1333844257A}{31650F46-72B8-40BC-8BBE-443061CA16C2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Private Sub CommandButtonArqueos_Click()
Call VariablesGlobales
'sh15 = "am_CONCILIAR_ARQUEOS"
Sheets(sh15).Select

End Sub

Private Sub CommandButtonCajas_Click()
Call VariablesGlobales
'sh1 = "pm_PLANEACION_CAJAS"
Sheets(sh1).Select
End Sub

Private Sub CommandButtonCompras_Click()
Call VariablesGlobales
'sh17 = "Registro COMPRAS"
Sheets(sh17).Select

End Sub

Private Sub CommandButtonConfirmaDotacion_Click()
Call VariablesGlobales
'sh12 = "Confirma_DOTACION"
Sheets(sh12).Select
End Sub

Private Sub CommandButtonDem_Click()
Call VariablesGlobales
'sh25 = "DEM"
Sheets(sh25).Select
End Sub

Private Sub CommandButtonParametros_Click()
Call VariablesGlobales
'sh19 = "PARAMETROS"
Sheets(sh19).Select

End Sub

Private Sub CommandButtonSaldoInicial_Click()
Call VariablesGlobales
'sh27 = "SALDO INICIAL"
Sheets(sh27).Select
End Sub

Private Sub CommandButtonSucursales_Click()
Call VariablesGlobales
'sh3 = "pm_PLANEACION_SERVICIOS"

Sheets(sh3).Select

End Sub

Private Sub UserForm_Click()

'sh1 = "pm_PLANEACION_CAJAS"
'sh2 = "Correos OS"
'sh3 = "pm_PLANEACION_SERVICIOS"
'sh4 = "Info. Gral."
'sh5 = "Correos SUC"
'sh6 = "Procesar"
'sh7 = "OdpTdd"
'sh8 = "SaldoCorte"
'sh9 = "Salidas"
'sh10 = "Arqueos"
'sh11 = "TABLAS"
'sh12 = "Confirma_DOTACION"
'sh13 = "MovimientosSalida"
'sh14 = "Cajas T-1"
'sh15 = "am_CONCILIAR_ARQUEOS"
'sh16 = "MovimientosEntrada"
'sh17 = "Registro COMPRAS"
'sh18 = "ProgramacionDotaciones"
'sh19 = "PARAMETROS"
'sh20 = "Correos ETV"
'sh21 = "ConfirmacionServicios"
'sh22 = "ProgramacionServicios"
'sh23 = "PARTICIPANTE(formato)"
'sh24 = "pm_PLANEACION_COMPRAS"
'sh25 = "DEM"
'sh26 = "OrdenDotacion"
'sh27 = "SALDO INICIAL"

End Sub
Attribute VB_Name = "PLANEACION_CAJAS"
Attribute VB_Base = "0{14D814C3-28C6-4B7B-9A4F-94D323E135D1}{417FC6C3-585D-4394-A9DE-8BDDDEDB316F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ComboBoxDiaActual_AfterUpdate()

End Sub



Private Sub ComboBoxDias_Click()
Dim numeroArreglo As Integer
Dim FechaPronostico, etiquetaDia As String
Dim DiasArray(10, 2) As Variant
DiasArray(1, 2) = "LUNES"
DiasArray(2, 2) = "MARTES"
DiasArray(3, 2) = "MIERCOLES"
DiasArray(4, 2) = "JUEVES"
DiasArray(5, 2) = "VIERNES"
DiasArray(6, 2) = "SABADO"
DiasArray(7, 2) = "DOMINGO"
DiasArray(8, 2) = "SIGUIENTE LUNES"
DiasArray(9, 2) = "SIGUIENTE MARTES"
DiasArray(10, 2) = "SIGUIENTE MIERCOLES"

DiasArray(1, 1) = 1
DiasArray(2, 1) = 2
DiasArray(3, 1) = 3
DiasArray(4, 1) = 4
DiasArray(5, 1) = 5
DiasArray(6, 1) = 6
DiasArray(7, 1) = 7
DiasArray(8, 1) = 8
DiasArray(9, 1) = 9
DiasArray(10, 1) = 10


For i = 1 To UBound(DiasArray)

    If Me.ComboBoxDiaActual.value = DiasArray(i, 2) Then
    
    numeroArreglo = Int(DiasArray(i, 1))
    constanteArreglo = i
    Exit For
    End If

Next i



If Me.ComboBoxDias.value = "" Then
    dias = 3
Else
    dias = Int(Me.ComboBoxDias.value)
End If



'MsgBox "numeroArreglo " & numeroArreglo & Chr(10) & "Me.ComboBoxDias.value " & dias
'MsgBox "numeroArreglo + Int(Me.ComboBoxDias.value) " & numeroArreglo + dias
numeroArreglo = numeroArreglo + dias

FechaPronostico = DiasArray(numeroArreglo, 2)

If Me.ComboBoxDias.value = 1 Then

Me.TextRangoFechas.value = "C|fffd|lculo para el d|fffd|a " & FechaPronostico

Else

Me.TextRangoFechas.value = "Del " & DiasArray(constanteArreglo + 1, 2) & " al " & FechaPronostico

End If
End Sub

Private Sub CommandButton13_Click()

End Sub

Private Sub CommandButton13_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
NAVEGAR_HOJAS.Show
End Sub

Private Sub CommandButton2_Click()
Application.ScreenUpdating = False
Application.EnableEvents = False

Call CQ3_OrdenDotacionDia
Unload PLANEACION_CAJAS

MsgBox "Proceso finalizado"
Application.ScreenUpdating = True
Application.EnableEvents = True

End Sub

Private Sub UserForm_Click()

End Sub

Private Sub UserForm_initialize()

Dim dia, dias As Integer
Dim nombreDia As String
dia = Weekday(Date, vbMonday)


Select Case dia
Case 1
nombreDia = "LUNES"
dias = 3
Case 2
nombreDia = "MARTES"
dias = 3
Case 3
nombreDia = "MIERCOLES"
dias = 3
Case 4
nombreDia = "JUEVES"
dias = 5
Case 5
nombreDia = "VIERNES"
dias = 4
Case Else
nombreDia = "VIERNES"
dias = 4
End Select

Me.ComboBoxDiaActual.List = Array("LUNES", "MARTES", "MIERCOLES", "JUEVES", "VIERNES")
Me.ComboBoxDias.List = Array(1, 2, 3, 4, 5)


Me.ComboBoxDiaActual.value = nombreDia
Me.ComboBoxDias.value = dias


End Sub

Private Sub ComboBoxDiaActual_Click()

Dim numeroArreglo As Integer
Dim FechaPronostico, etiquetaDia As String
Dim DiasArray(10, 2) As Variant
DiasArray(1, 2) = "LUNES"
DiasArray(2, 2) = "MARTES"
DiasArray(3, 2) = "MIERCOLES"
DiasArray(4, 2) = "JUEVES"
DiasArray(5, 2) = "VIERNES"
DiasArray(6, 2) = "SABADO"
DiasArray(7, 2) = "DOMINGO"
DiasArray(8, 2) = "SIGUIENTE LUNES"
DiasArray(9, 2) = "SIGUIENTE MARTES"
DiasArray(10, 2) = "SIGUIENTE MIERCOLES"

DiasArray(1, 1) = 1
DiasArray(2, 1) = 2
DiasArray(3, 1) = 3
DiasArray(4, 1) = 4
DiasArray(5, 1) = 5
DiasArray(6, 1) = 6
DiasArray(7, 1) = 7
DiasArray(8, 1) = 8
DiasArray(9, 1) = 9
DiasArray(10, 1) = 10


For i = 1 To UBound(DiasArray)

    If Me.ComboBoxDiaActual.value = DiasArray(i, 2) Then
    
    numeroArreglo = Int(DiasArray(i, 1))
    constanteArreglo = i
    
    Exit For
    End If

Next i


If Me.ComboBoxDias.value = "" Then
    dias = 3
Else
    dias = Int(Me.ComboBoxDias.value)
End If



'MsgBox "numeroArreglo " & numeroArreglo & Chr(10) & "Me.ComboBoxDias.value " & dias
'MsgBox "numeroArreglo + Int(Me.ComboBoxDias.value) " & numeroArreglo + dias
numeroArreglo = numeroArreglo + dias

FechaPronostico = DiasArray(numeroArreglo, 2)

If Me.ComboBoxDias.value = 1 Then

Me.TextRangoFechas.value = "C|fffd|lculo para el d|fffd|a " & FechaPronostico

Else

Me.TextRangoFechas.value = "Del " & DiasArray(constanteArreglo + 1, 2) & " al " & FechaPronostico

End If


End Sub

Attribute VB_Name = "REGISTRO_MASIVO"
Attribute VB_Base = "0{7E059FBA-7075-48F1-A51B-902B1FCFF87D}{ACB1DF6C-4392-459D-9AE6-06196606E7D6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()

If OptionButtonRegistrarTodo.value = True Then
    'LIMPIAR PROGRAMACI|fffd|N
     Call CO8_LimpiarMarcaRegistroMasivo
     Call CO_RegistroMasivo
     MsgBox "REGISTRO MASIVO REALIZADO"
     REGISTRO_MASIVO.Hide
     
ElseIf OptionButtonRegistrarSeleccion.value = True Then
    Call CO_RegistroMasivoUnitario
    
     REGISTRO_MASIVO.Hide

ElseIf OptionButtonRegistrarTodo2.value = True Then
    
    'LIMPIAR PROGRAMACI|fffd|N
     Call CO6_LimpiarCapturaServiciosProgramacion
     Call CO8_LimpiarMarcaRegistroMasivo
     Call CO_RegistroMasivo
     
     MsgBox "REGISTRO MASIVO REALIZADO"
     REGISTRO_MASIVO.Hide

End If
End Sub

Private Sub CommandButton13_Click()

End Sub

Private Sub CommandButton13_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
NAVEGAR_HOJAS.Show
End Sub

Private Sub CommandButton2_Click()

REGISTRO_MASIVO.Hide

End Sub

Private Sub OptionButtonRegistrarTodo2_Click()

End Sub
Attribute VB_Name = "REPORTE_SALDOS_CAJAS"
Attribute VB_Base = "0{7BE65FB4-A8A1-4CD8-95A2-58ABA748A591}{7E78C329-108F-4B95-8B9C-D488DEE51173}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub CommandButton13_Click()

End Sub

Private Sub CommandButton13_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
NAVEGAR_HOJAS.Show
End Sub

Private Sub OptionButtonCorreo_Click()



End Sub

Private Sub OptionButtonCorreoDem_Click()
'If Me.OptionButtonCorreoDem.value = True Then
'Me.OptionButtonCorreoDem.value = False

'ElseIf Me.OptionButtonCorreoDem.value = False Then
'Me.OptionButtonCorreoDem.value = True
'
'End If
End Sub

Private Sub OptionButtonNingunoDem_Click()

If Me.OptionButtonNingunoDem.value = True Then

Me.CheckBoxDemCaja.value = False
Me.CheckBoxDemSucursal.value = False
Me.CheckBoxTotalDem.value = False
Me.CheckBoxAcreditacionDem.value = False
Me.CheckBoxSaaldoDem.value = False
Me.OptionButtonCorreoDem.value = False

End If

End Sub

Private Sub OptionButtonTodosDem_Click()

If Me.OptionButtonTodosDem.value = True Then

Me.CheckBoxDemCaja.value = True
Me.CheckBoxDemSucursal.value = True
Me.CheckBoxTotalDem.value = True
Me.CheckBoxAcreditacionDem.value = True
Me.CheckBoxSaaldoDem.value = True
Me.OptionButtonCorreoDem.value = True

End If

End Sub


Private Sub CommandButtonDem_Click()

If Me.CheckBoxDemCaja.value = False And _
Me.CheckBoxDemSucursal.value = False And _
Me.CheckBoxTotalDem.value = False And _
Me.CheckBoxAcreditacionDem.value = False And _
Me.CheckBoxSaaldoDem.value = False And _
Me.OptionButtonCorreoDem.value = False Then
    
MsgBox "Seleccione al menos 1 campo"
Exit Sub

End If

Application.ScreenUpdating = False
Application.EnableEvents = False
'
Call CA00_MacroCrearCarpetas
Call CU_3CorreoDem

Application.ScreenUpdating = True
Application.EnableEvents = True

MsgBox "REPORTE GENERADO"

End Sub



Private Sub CommandButton1_Click()

If Me.CheckBoxSaldosIniciales.value = False And _
Me.CheckBoxCompras.value = False And _
Me.CheckBoxDotaciones.value = False And _
Me.CheckBoxDotacionesEmergentes.value = False And _
Me.CheckBoxTraspasoIn.value = False And _
Me.CheckBoxTraspasoOut.value = False And _
Me.CheckBoxSaldoFisico.value = False And _
Me.CheckBoxSaldoEstimado.value = False Then
    
MsgBox "Seleccione al menos 1 campo"
Exit Sub

End If

Application.ScreenUpdating = False
Application.EnableEvents = False

Call CA00_MacroCrearCarpetas
Call CT_CorreoSaldosCajas

Application.ScreenUpdating = True
Application.EnableEvents = True

MsgBox "REPORTE GENERADO"

End Sub


Private Sub OptionButton1_Click()

If OptionButton1.value = True Then

Me.CheckBoxSaldosIniciales.value = True
Me.CheckBoxCompras.value = True
Me.CheckBoxDotaciones.value = True
Me.CheckBoxDotacionesEmergentes.value = True
Me.CheckBoxTraspasoIn.value = True
Me.CheckBoxTraspasoOut.value = True
Me.CheckBoxSaldoFisico.value = True
Me.CheckBoxSaldoEstimado.value = True
Me.OptionButtonCorreo.value = True

End If

End Sub

Private Sub OptionButton2_Click()

If OptionButton2.value = True Then

Me.CheckBoxSaldosIniciales.value = False
Me.CheckBoxCompras.value = False
Me.CheckBoxDotaciones.value = False
Me.CheckBoxDotacionesEmergentes.value = False
Me.CheckBoxTraspasoIn.value = False
Me.CheckBoxTraspasoOut.value = False
Me.CheckBoxSaldoFisico.value = False
Me.CheckBoxSaldoEstimado.value = False
Me.OptionButtonCorreo.value = False
End If

End Sub




Private Sub UserForm_initialize()

'SALDOS
Me.CheckBoxSaldosIniciales.value = False
Me.CheckBoxCompras.value = False
Me.CheckBoxDotaciones.value = False
Me.CheckBoxDotacionesEmergentes.value = False
Me.CheckBoxTraspasoIn.value = False
Me.CheckBoxTraspasoOut.value = False
Me.CheckBoxSaldoFisico.value = False
Me.CheckBoxSaldoEstimado.value = False
Me.OptionButtonCorreo.value = False

'DEM
Me.CheckBoxDemCaja.value = False
Me.CheckBoxDemSucursal.value = False
Me.CheckBoxTotalDem.value = False
Me.CheckBoxAcreditacionDem.value = False
Me.CheckBoxSaaldoDem.value = False
Me.OptionButtonCorreoDem.value = False

End Sub

Public Sub OrdenColumnas()

Dim ordenCol As Integer
ordenCol = 1

If Me.CheckBoxSaldosIniciales.value = True Then
CHBXSaldosIniciales = ordenCol
ordenCol = CHBXSaldosIniciales
End If

If Me.CheckBoxCompras.value = True Then
CHBXCompras = ordenCol + 1
ordenCol = CHBXCompras
End If

If Me.CheckBoxDotaciones.value = True Then
CHBXDotaciones = ordenCol + 1
ordenCol = CHBXDotaciones
End If

If Me.CheckBoxDotacionesEmergentes.value = True Then
CHBXDotacionesEmergentes = ordenCol + 1
ordenCol = CHBXDotacionesEmergentes
End If

If Me.CheckBoxTraspasoIn.value = True Then
CHBXTraspasoIn = ordenCol + 1
ordenCol = CHBXTraspasoIn
End If

If Me.CheckBoxTraspasoOut.value = True Then
CHBXTraspasoOut = ordenCol + 1
ordenCol = CHBXTraspasoOut
End If

If Me.CheckBoxSaldoFisico.value = True Then
CHBXSaldoFisico = ordenCol + 1
ordenCol = CHBXSaldoFisico
End If

If Me.CheckBoxSaldoEstimado.value = True Then
CHBXSaldoEstimado = ordenCol + 1
ordenCol = CHBXSaldoEstimado
End If

'MsgBox CHBXSaldosIniciales & Chr(10) & _
'CHBXCompras & Chr(10) & _
'CHBXDotaciones & Chr(10) & _
'CHBXTraspasoIn & Chr(10) & _
'CHBXTraspasoOut & Chr(10) & _
'CHBXSaldoFisico & Chr(10) & _
'CHBXSaldoEstimado

End Sub


Public Sub OrdenColumnasDem()

'Me.CheckBoxDemCaja.value = True
'Me.CheckBoxDemSucursal.value = True
'Me.CheckBoxTotalDem.value = True
'Me.CheckBoxAcreditacionDem.value = True
'Me.CheckBoxSaaldoDem.value = True

Dim ordenCol As Integer
ordenCol = 1

If Me.CheckBoxDemCaja.value = True Then
CHBXSaldosIniciales = ordenCol
ordenCol = CHBXDemCaja
End If

If Me.CheckBoxDemSucursal.value = True Then
CHBXDemSucursal = ordenCol + 1
ordenCol = CHBXDemSucursal
End If

If Me.CheckBoxTotalDem.value = True Then
CHBXTotalDem = ordenCol + 1
ordenCol = CHBXTotalDem
End If

If Me.CheckBoxAcreditacionDem.value = True Then
CHBXAcreditacionDem = ordenCol + 1
ordenCol = CHBXAcreditacionDem
End If

If Me.CheckBoxSaaldoDem.value = True Then
CHBXSaaldoDem = ordenCol + 1
ordenCol = CHBXSaaldoDem
End If




End Sub



Attribute VB_Name = "REQUERIMIENTO_EFECTIVO"
Attribute VB_Base = "0{09E305D7-DF7F-4ADB-AC74-D565CAF15230}{3059B198-CB12-4DDF-8C7F-48716E1CD44E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub ComboBoxDiaActual_Change()
Call VariablesGlobales
Dim diaActual As Integer
Dim FechaActual As String

FechaActual = Me.ComboBoxDiaActual.value

Select Case FechaActual

Case "LUNES"
diaActual = 1

Case "MARTES"
diaActual = 2

Case "MIERCOLES"
diaActual = 3

Case "JUEVES"
diaActual = 4

Case "VIERNES"
diaActual = 5

End Select


If diaActual = 1 Then

    Me.ComboBoxDiaActual.value = "LUNES"
    Me.CheckBoxLunes.value = False
    Me.CheckBoxMartes.value = True
    Me.CheckBoxMiercoles = False
    Me.CheckBoxJueves.value = False
    Me.CheckBoxViernes.value = False
    Me.CheckBoxSabado.value = False
    Me.CheckBoxDomingo.value = False
    Me.CheckBoxSigLunes.value = False

ElseIf diaActual = 2 Then

    Me.ComboBoxDiaActual.value = "MARTES"
    Me.CheckBoxLunes.value = False
    Me.CheckBoxMartes.value = False
    Me.CheckBoxMiercoles = True
    Me.CheckBoxJueves.value = False
    Me.CheckBoxViernes.value = False
    Me.CheckBoxSabado.value = False
    Me.CheckBoxDomingo.value = False
    Me.CheckBoxSigLunes.value = False

ElseIf diaActual = 3 Then

    Me.ComboBoxDiaActual.value = "MIERCOLES"
    Me.CheckBoxLunes.value = False
    Me.CheckBoxMartes.value = False
    Me.CheckBoxMiercoles = False
    Me.CheckBoxJueves.value = True
    Me.CheckBoxViernes.value = False
    Me.CheckBoxSabado.value = False
    Me.CheckBoxDomingo.value = False
    Me.CheckBoxSigLunes.value = False

ElseIf diaActual = 4 Then

    Me.ComboBoxDiaActual.value = "JUEVES"
    Me.CheckBoxLunes.value = False
    Me.CheckBoxMartes.value = False
    Me.CheckBoxMiercoles = False
    Me.CheckBoxJueves.value = False
    Me.CheckBoxViernes.value = True
    Me.CheckBoxSabado.value = False
    Me.CheckBoxDomingo.value = False
    Me.CheckBoxSigLunes.value = False

ElseIf diaActual = 5 Then

    Me.ComboBoxDiaActual.value = "VIERNES"
    Me.CheckBoxLunes.value = False
    Me.CheckBoxMartes.value = False
    Me.CheckBoxMiercoles = False
    Me.CheckBoxJueves.value = False
    Me.CheckBoxViernes.value = False
    Me.CheckBoxSabado.value = True
    Me.CheckBoxDomingo.value = True
    Me.CheckBoxSigLunes.value = True

End If
End Sub


Private Sub UserForm_initialize()

Call VariablesGlobales
Dim diaActual As Integer

diaActual = Weekday(Date, vbMonday)
Me.ComboBoxDiaActual.List = Array("LUNES", "MARTES", "MIERCOLES", "JUEVES", "VIERNES")

If diaActual = 1 Then

    Me.ComboBoxDiaActual.value = "LUNES"
    Me.CheckBoxLunes.value = False
    Me.CheckBoxMartes.value = True
    Me.CheckBoxMiercoles = False
    Me.CheckBoxJueves.value = False
    Me.CheckBoxViernes.value = False
    Me.CheckBoxSabado.value = False
    Me.CheckBoxDomingo.value = False
    Me.CheckBoxSigLunes.value = False

ElseIf diaActual = 2 Then

    Me.ComboBoxDiaActual.value = "MARTES"
    Me.CheckBoxLunes.value = False
    Me.CheckBoxMartes.value = False
    Me.CheckBoxMiercoles = True
    Me.CheckBoxJueves.value = False
    Me.CheckBoxViernes.value = False
    Me.CheckBoxSabado.value = False
    Me.CheckBoxDomingo.value = False
    Me.CheckBoxSigLunes.value = False

ElseIf diaActual = 3 Then

    Me.ComboBoxDiaActual.value = "MIERCOLES"
    Me.CheckBoxLunes.value = False
    Me.CheckBoxMartes.value = False
    Me.CheckBoxMiercoles = False
    Me.CheckBoxJueves.value = True
    Me.CheckBoxViernes.value = False
    Me.CheckBoxSabado.value = False
    Me.CheckBoxDomingo.value = False
    Me.CheckBoxSigLunes.value = False

ElseIf diaActual = 4 Then

    Me.ComboBoxDiaActual.value = "JUEVES"
    Me.CheckBoxLunes.value = False
    Me.CheckBoxMartes.value = False
    Me.CheckBoxMiercoles = False
    Me.CheckBoxJueves.value = False
    Me.CheckBoxViernes.value = True
    Me.CheckBoxSabado.value = False
    Me.CheckBoxDomingo.value = False
    Me.CheckBoxSigLunes.value = False

ElseIf diaActual = 5 Then

    Me.ComboBoxDiaActual.value = "VIERNES"
    Me.CheckBoxLunes.value = False
    Me.CheckBoxMartes.value = False
    Me.CheckBoxMiercoles = False
    Me.CheckBoxJueves.value = False
    Me.CheckBoxViernes.value = False
    Me.CheckBoxSabado.value = True
    Me.CheckBoxDomingo.value = True
    Me.CheckBoxSigLunes.value = True

End If


End Sub
Attribute VB_Name = "SALDO_INICIAL"
Attribute VB_Base = "0{51244FE1-2C9C-4E7C-8975-59E4037B8663}{0FAA4B4E-80AE-48CC-B66C-974CA9A432B6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CommandButton2_Click()

Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual

If Me.OptionButtonListaSuc.value = True Then

    Call CM6_ListaSucursales
    Unload SALDO_INICIAL
    
ElseIf Me.OptionButtonRegistrarSI.value = True Then
    
    Call CM3_IngresarSaldosIniciales
    Unload SALDO_INICIAL
    
ElseIf Me.OptionButtonLimpiarSI.value = True Then

    Call CM5_SaldoInicialLimpiar
    Unload SALDO_INICIAL
  
ElseIf Me.OptionButtonRepJkassa.value = True Then
    
    Call CM7_ReportesJkassaSaldosFinales
    Unload SALDO_INICIAL
    
ElseIf Me.OptionButtonRepSaldosIni.value = True Then
    
    Call CM7_A_ReportesJkassaSaldosFinales
    Unload SALDO_INICIAL
    
ElseIf Me.OptionButtonRepOperativos.value = True Then
    
    Call CM7_B_ReportesJkassaSaldosFinales
    Unload SALDO_INICIAL
    
  
End If

Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.CutCopyMode = True
Application.EnableEvents = True

End Sub

Private Sub CommandButton3_Click()
'sh19 = "PARAMETROS"
Sheets(sh19).Select
Unload SALDO_INICIAL

End Sub

Private Sub CommandButton4_Click()

End Sub

Private Sub CommandButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
NAVEGAR_HOJAS.Show
End Sub



Private Sub UserForm_initialize()

Me.CheckBoxSaldosTxt1.value = False
Me.CheckBoxSaldosTxt.value = False

End Sub
Attribute VB_Name = "SERVICIOS_ETV_REGISTRO"
Attribute VB_Base = "0{A2D80631-BD31-4F6B-8AD3-E30983859177}{38353338-E2AD-41C1-9C42-17ECC9DDAB12}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
''''''variables internas
Public shSaldosCajas, shCargaMasiva As String
'SALDOS DE CAJAS
Public punteroPlazaBuscar, punteroEtvBuscar, punteroBillMil, punteroCienCoin As Long
Public punteroCaja, punteroEtv, punteroSucursal, punteroIdSucursal, punteroImporte, punteroValidacion, punteroMarcaMasivo, saldosBillMil, saldosCienCoin As Long

Public Sub Punteros()
Call VariablesGlobales
'HOJA CON SALDOS DE CAJAS sh1 = "pm_PLANEACION_CAJAS"
shSaldosCajas = sh1
'HOJA ACTUAL sh3 = "pm_PLANEACION_SERVICIOS"
shCargaMasiva = sh3

'SALDOS DE CAJAS
punteroPlazaBuscar = 2
punteroEtvBuscar = 3
punteroBillMil = 114
punteroCienCoin = 121


'HOJA DE CARGA MASIVA
punteroCaja = 1
punteroEtv = 2
punteroIdSucursal = 4
punteroSucursal = 5
punteroImporte = 18
punteroValidacion = 21
punteroMarcaMasivo = 65

End Sub

Private Sub CommandButton2_Click()

        Application.ScreenUpdating = True
         Dim HojaSeleccion, HojaRegistro As String
         
        HojaSeleccion = ActiveSheet.Name
            
        'Call ConvertirRangoMayusculas
        
        Call VariablesGlobales
        
        'ARREGLO DE MESES
                    Dim ArrMes(2, 12)

                    ArrMes(1, 1) = 1
                    ArrMes(1, 2) = 2
                    ArrMes(1, 3) = 3
                    ArrMes(1, 4) = 4
                    ArrMes(1, 5) = 5
                    ArrMes(1, 6) = 6
                    ArrMes(1, 7) = 7
                    ArrMes(1, 8) = 8
                    ArrMes(1, 9) = 9
                    ArrMes(1, 10) = 10
                    ArrMes(1, 11) = 11
                    ArrMes(1, 12) = 12

                    ArrMes(2, 1) = Meses1
                    ArrMes(2, 2) = Meses2
                    ArrMes(2, 3) = Meses3
                    ArrMes(2, 4) = Meses4
                    ArrMes(2, 5) = Meses5
                    ArrMes(2, 6) = Meses6
                    ArrMes(2, 7) = Meses7
                    ArrMes(2, 8) = Meses8
                    ArrMes(2, 9) = Meses9
                    ArrMes(2, 10) = Meses10
                    ArrMes(2, 11) = Meses11
                    ArrMes(2, 12) = Meses12



        Dim FilaInicio, row0 As Long
        row0 = 1

            Dim X, Y, z, NRegistros As Long
           
            
            'sh3 = "pm_PLANEACION_SERVICIOS"
            'sh18 = "DetalleServicios"
            
            
    'EMERGENTE O PROGRAMADA
    
    If Me.CheckBoxEmergente.value = True Then
    
    'sh22 = "ProgramacionServicios"
    HojaRegistro = sh22
    
    Else
    'sh18 = "ProgramacionDotaciones"
    
    HojaRegistro = sh18
    
    End If
    
    Sheets(HojaRegistro).Select
            
            
            Y = 1
            'fila de encabezados de la hoja de Registro Compras
            z = 5
            NRegistros = Range("a3", Range("a3").End(xlDown)).Count
            
            
            
            'evaluar si hay informaci|fffd|n en registro
            If NRegistros > 10000 And Range("a3") <> "" And Range("a4") = "" And Range("a5") = "" Then
            X = 4
            
            
            ElseIf NRegistros > 10000 And Range("a3") = "" Then
            X = 3
            
            ElseIf NRegistros < 10000 And ActiveCell.Row > 2 And Cells(ActiveCell.Row, 1).value <> "" _
                    And HojaSeleccion = sh18 Then
            
            X = ActiveCell.Row
            
            ElseIf NRegistros < 10000 And ActiveCell.Row < 2 _
                    And HojaSeleccion = sh18 Then
                    
            X = NRegistros + 3
            
            Else
            X = NRegistros + 3
            
            End If
            
            
        'fecha de recepci|fffd|n. Obtener los valores registrados

        DiaTraslado = Val(Me.ComboDiaServicio.Text)
        MesTraslado = Me.ComboMesesServicio.Text
        AnioTraslado = Val(Me.ComboAnioServicio.Text)

        'convertir el nombre del mes a n|fffd|mero
        For i = 1 To 12
            If MesTraslado = ArrMes(2, i) Then
            mesNumero = Val(ArrMes(1, i))
            End If
        Next

        'establecer la fecha de los 3 combobox
        FechaTraslado = Format((ComboDiaServicio & "/" & ComboMesesServicio & "/" & ComboAnioServicio), "d/m/yyyy")

'        'evaluar la fecha de traslado
'        If FechaTraslado < FechaValorGeneral Then
'        MsgBox "Fecha de traslado incorrecta"
'        Exit Sub
'        Else

        'crear carpetas de la fecha
'        CARPETA_MES_COMPRAS (FechaTraslado)
'        CARPETA_DIA_COMPRAS (FechaTraslado)
'        End If
        
        Call CA00_MacroCrearCarpetas
        
        'registrar en Movimientos
        Sheets(HojaRegistro).Select
'
'        If Cells(2, 1) = "" And Cells(3, 1) = "" Then
'        FilaInicio = 2
'        Else
'        FilaInicio = (Range(Cells(Row0, 1), Cells(Row0, 1).End(xlDown)).Count) + 1
'
'        End If

        'VALOR CAPTURADO
        Cells(X, 1) = ComboEstatusServicio
        
        Cells(X, 2) = BuscarClaveMedioPago(DestinoServicio) & BuscarInfoPlazaEtv(Me.PlazaServicio.value & " " & Me.EtvServicio.value, 0)

        Cells(X, 3) = EtvServicio
        Cells(X, 4) = PlazaServicio
        Cells(X, 5) = BuscarInfoSucursal(Me.ComboSucursalServicio.value, 1)
                    'MsgBox TypeName(ComboSucursalServicio.value) & Chr(10) & ComboSucursalServicio.value & Chr(10) & BuscarInfoSucursal(ComboSucursalServicio.value, 1)
        Cells(X, 6) = ComboSucursalServicio
        Cells(X, 7) = EtvTrasladoServicio
        Cells(X, 8) = Format((ComboDiaPlan & "/" & ComboMesesPlan & "/" & ComboAnioPlan), "m/d/yyyy")
        Cells(X, 9) = Format((ComboDiaServicio & "/" & ComboMesesServicio & "/" & ComboAnioServicio), "m/d/yyyy")
        
        Cells(X, 10) = ComboTipoServicio
        Cells(X, 11) = DestinoServicio
        
        
        Cells(X, 12) = BuscarInfoSucursal(Me.SucursalDestinoServicio.value, 1)
        Cells(X, 13) = SucursalDestinoServicio
        Cells(X, 14) = BuscarClaveMedioPago(DestinoServicio) & BuscarInfoPlazaEtv(Me.PlazaDestinoServicio.value, 0)
        Cells(X, 15) = PlazaDestinoServicio
        Cells(X, 16) = BuscarInfoPlazaEtv(Me.PlazaDestinoServicio.value, 3)
        Cells(X, 17) = Str(TotalServicio)
        
        Cells(X, 18) = Val(BillMilServicio)
        Cells(X, 19) = Val(Bill500Servicio)
        Cells(X, 20) = Val(Bill200Servicio)
        Cells(X, 21) = Val(Bill100Servicio)
        Cells(X, 22) = Val(Bill50Servicio)
        Cells(X, 23) = Val(Bill20Servicio)
        Cells(X, 24) = Str(TotalMonedasServicio)
        Cells(X, 25) = Val(Coin100Servicio)
        Cells(X, 26) = Val(Coin20Servicio)
        Cells(X, 27) = Val(Coin10Servicio)
        Cells(X, 28) = Val(Coin5Servicio)
        Cells(X, 29) = Val(Coin2Servicio)
        Cells(X, 30) = Val(Coin1Servicio)
        Cells(X, 31) = Val(Coin050Servicio)
        Cells(X, 32) = Val(Coin020Servicio)
        Cells(X, 33) = Val(Coin010Servicio)
        Cells(X, 34) = Val(Coin005Servicio)
   
    
    'Agregar ID de caja en Concentraciones
'        Call CO1_AgregarIdCajaPrincipal
        
    'Agregar color por estatus en Concentraciones
'        Call CO1_AgregarIdSucursal
        
'        Call CO1_AgregarIdCajaPrincipal_General
'        Call CO1_AgregarIdSucursal_General
        
        'limpiar campos de captura
        PlazaServicio = ""
        EtvServicio = ""
        ComboSucursalServicio = ""
        EtvTrasladoServicio = ""
        ComboTipoServicio = ""
        DestinoServicio = ""
        SucursalDestinoServicio = ""
        PlazaDestinoServicio = ""

        Sheets(HojaRegistro).Select
        'AGREGAR IR DE MEDIO DE AFECTACI|fffd|N Y PLAZA
        
        'Call CO1_AgregarIdCajaPrincipal_General
        
        Unload SERVICIOS_ETV_REGISTRO

        Application.ScreenUpdating = False

        ActiveCell.Select

        MsgBox "Registro capturado"
        
End Sub




Private Sub CommandButton3_Click()

SERVICIOS_ETV_REGISTRO.Hide

End Sub


Private Sub Label40_Click()

End Sub

Private Sub UserForm_initialize()

    'inicializar campos

Application.ScreenUpdating = False
Call VariablesGlobales
Call Punteros

'valores de combos
Me.CheckBoxEmergente.value = False

ComboMesesServicio.List = Array("Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre")

ComboDiaServicio.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)

ComboAnioServicio.List = Array(2018, 2019)


ComboMesesPlan.List = Array("Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre")

ComboDiaPlan.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)

ComboAnioPlan.List = Array(2018, 2019)


ComboEstatusServicio.List = Array("PROGRAMADO", "REALIZADO", "CANCELADO")


Dim X, Y, z, NRegistros As Long
Dim valInfo As Boolean
Dim BilCol, CoiCol, GenCol As Integer
Dim rsh3 As Long
Dim AcSh As String


'Registrar nombre de hoja de inicio
AcSh = ActiveSheet.Name


rsh3 = 0

'sh18 = "DetalleServicios"
'sh3 = "pm_PLANEACION_SERVICIOS"

If AcSh = sh3 And ActiveCell.Row > 3 Then

    rsh3 = ActiveCell.Row

ElseIf AcSh = sh3 And ActiveCell.Row < 4 Then

    rsh3 = 4
    
End If


Sheets(sh18).Select
Y = 1
'fila de encabezados de la hoja de Registro Compras
z = 3
NRegistros = Range("f2", Range("f2").End(xlDown)).Count


'evaluar si hay informaci|fffd|n en registro
If NRegistros > 1000 Then
'no hay registros
X = 3
valInfo = False

ElseIf NRegistros < 1000 And ActiveCell.Row > 2 And Cells(ActiveCell.Row, 1).value <> "" And AcSh = sh18 Then
'si hay informaci|fffd|n
X = ActiveCell.Row
valInfo = True

ElseIf NRegistros < 1000 And ActiveCell.Row <= 2 Then
'nuevo registro
X = NRegistros + 2
valInfo = False

Else
'nuevo registro
X = NRegistros + 2
valInfo = False

End If


'Fecha del d|fffd|a
Dim DiaServicio, MesServicio, AnioServicio As Integer
Dim DiaPlan, MesPlan, AnioPlan As Integer
Dim fechaValorPlan, fechaValorServicio As Date
Dim MesServicioLabel, MesPlanLabel As String


'valor de la fecha
If valInfo = True Then
    'columna de FechaPlaneacion
    fechaValorPlan = Cells(X, 8).value
    fechaValorServicio = Cells(X, 9).value
Else
    fechaValorPlan = Date
    fechaValorServicio = Date + 1

End If

DiaServicio = Day(fechaValorServicio)
MesServicio = Month(fechaValorServicio)
AnioServicio = Year(fechaValorServicio)

DiaPlan = Day(fechaValorPlan)
MesPlan = Month(fechaValorPlan)
AnioPlan = Year(fechaValorPlan)

'nombre del mes

MesPlanLabel = NombresMesesLargo(Int(MesPlan))
MesServicioLabel = NombresMesesLargo(Int(MesServicio))

'columnas de inicio de billetes y monedas
BilCol = 18
CoiCol = 25
GenCol = 1

'si valInfo = False todo en 0 sino colocar valor de celdas


If valInfo = False And AcSh = sh18 Then
        
'BILLETES
        With Me.BillMilServicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Bill500Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Bill200Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Bill100Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Bill50Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Bill20Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin100Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin20Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin10Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin5Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin2Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin1Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin050Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin020Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin010Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin005Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        
        'importe
        With Me.TotalServicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        
        With Me.TotalBilletesServicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        
        With Me.TotalMonedasServicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With



'SI ESTA EN LA HOJA DE PLANEACI|fffd|N
ElseIf valInfo = False And AcSh = sh3 Then

'INFORMACI|fffd|N GENERAL
        With Me.ComboEstatusServicio
            .value = "PROGRAMADO"
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.EtvServicio
            .value = Sheets(sh3).Cells(rsh3, GenCol + 1).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.PlazaServicio
            .value = Sheets(sh3).Cells(rsh3, GenCol + 2).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.ComboSucursalServicio
            .value = Sheets(sh3).Cells(rsh3, GenCol + 4).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.EtvTrasladoServicio
            .value = Sheets(sh3).Cells(rsh3, GenCol + 1).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.ComboTipoServicio
            .value = "DOTACION"
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.DestinoServicio
            .value = "ETV"
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.SucursalDestinoServicio
            .value = ""
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.PlazaDestinoServicio
            .value = ""
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        
        'fecha plan
        With Me.ComboDiaPlan
            .value = DiaPlan
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.ComboMesesPlan
            .value = MesPlanLabel
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.ComboAnioPlan
            .value = AnioPlan
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        'fecha plan
        With Me.ComboDiaServicio
            .value = DiaServicio
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.ComboMesesServicio
            .value = MesServicioLabel
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.ComboAnioServicio
            .value = AnioServicio
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        
        
        'BILLETES
        With Me.BillMilServicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Bill500Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Bill200Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Bill100Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Bill50Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Bill20Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin100Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin20Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin10Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin5Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin2Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin1Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin050Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin020Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin010Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin005Servicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        
        'importe
        With Me.TotalServicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        
        With Me.TotalBilletesServicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        
        With Me.TotalMonedasServicio
            .value = 0
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        
        
        
        

ElseIf valInfo = True Then

'INFORMACI|fffd|N GENERAL
        With Me.ComboEstatusServicio
            .value = Cells(X, GenCol).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.EtvServicio
            .value = Cells(X, GenCol + 2).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.PlazaServicio
            .value = Cells(X, GenCol + 3).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.ComboSucursalServicio
            .value = Cells(X, GenCol + 5).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.EtvTrasladoServicio
            .value = Cells(X, GenCol + 6).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.ComboTipoServicio
            .value = Cells(X, GenCol + 9).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.DestinoServicio
            .value = Cells(X, GenCol + 10).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.SucursalDestinoServicio
            .value = Cells(X, GenCol + 12).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.PlazaDestinoServicio
            .value = Cells(X, GenCol + 14).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        
        'fecha plan
        With Me.ComboDiaPlan
            .value = DiaPlan
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.ComboMesesPlan
            .value = MesPlanLabel
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.ComboAnioPlan
            .value = AnioPlan
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        'fecha plan
        With Me.ComboDiaServicio
            .value = DiaServicio
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.ComboMesesServicio
            .value = MesServicioLabel
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.ComboAnioServicio
            .value = AnioServicio
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        
        
        
        

'BILLETES
        With Me.BillMilServicio
            .value = Cells(X, BilCol).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Bill500Servicio
            .value = Cells(X, BilCol + 1).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Bill200Servicio
            .value = Cells(X, BilCol + 2).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Bill100Servicio
            .value = Cells(X, BilCol + 3).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Bill50Servicio
            .value = Cells(X, BilCol + 4).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Bill20Servicio
            .value = Cells(X, BilCol + 5).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin100Servicio
            .value = Cells(X, CoiCol).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin20Servicio
            .value = Cells(X, CoiCol + 1).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin10Servicio
            .value = Cells(X, CoiCol + 2).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin5Servicio
            .value = Cells(X, CoiCol + 3).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin2Servicio
            .value = Cells(X, CoiCol + 4).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin1Servicio
            .value = Cells(X, CoiCol + 5).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin050Servicio
            .value = Cells(X, CoiCol + 6).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin020Servicio
            .value = Cells(X, CoiCol + 7).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin010Servicio
            .value = Cells(X, CoiCol + 8).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.Coin005Servicio
            .value = Cells(X, CoiCol + 9).value
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        

'IMPORTES TOTALES

        With Me.TotalServicio
            .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        
        With Me.TotalBilletesServicio
            .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio)))
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        
        With Me.TotalMonedasServicio
            .value = FormatCurrency((Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        

        With Me.ImporteServicio
            .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        

End If



'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''ARREGLOS SALDOS CAJAS'''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


Sheets(shCargaMasiva).Select
punteroActual = ActiveCell.Row

i = 1
'
X = 4
Sheets(shSaldosCajas).Select

'N|fffd|mero de registros para arreglo
totRow = Range("A:A").SpecialCells(xlCellTypeConstants).Count
    
'Dim punteroPlazaBuscar, punteroEtvBuscar, punteroBillMil, punteroCienCoin As Long
'punteroPlazaBuscar = 2
'punteroEtvBuscar = 3
'punteroBillMil = 4
'punteroCienCoin = 10

Dim Saldos() As Variant
ReDim Saldos(totRow, 18)

Do While Cells(X, 1) <> ""

    If Cells(X, 1) = "TOTALES" Then
        'ID PLAZA
        Saldos(i, 1) = Sheets(shSaldosCajas).Cells(X, punteroPlazaBuscar).value
        'ETV
        Saldos(i, 2) = Sheets(shSaldosCajas).Cells(X, punteroEtvBuscar).value
        '1000
        Saldos(i, 3) = Sheets(shSaldosCajas).Cells(X, punteroBillMil).value
        '500
        Saldos(i, 4) = Sheets(shSaldosCajas).Cells(X, punteroBillMil + 1).value
        '200
        Saldos(i, 5) = Sheets(shSaldosCajas).Cells(X, punteroBillMil + 2).value
        '100
        Saldos(i, 6) = Sheets(shSaldosCajas).Cells(X, punteroBillMil + 3).value
        '50
        Saldos(i, 7) = Sheets(shSaldosCajas).Cells(X, punteroBillMil + 4).value
        '20
        Saldos(i, 8) = Sheets(shSaldosCajas).Cells(X, punteroBillMil + 5).value
        
        '100
        Saldos(i, 9) = Sheets(shSaldosCajas).Cells(X, punteroCienCoin).value
        '20
        Saldos(i, 10) = Sheets(shSaldosCajas).Cells(X, punteroCienCoin + 1).value
        '10
        Saldos(i, 11) = Sheets(shSaldosCajas).Cells(X, punteroCienCoin + 2).value
        '5
        Saldos(i, 12) = Sheets(shSaldosCajas).Cells(X, punteroCienCoin + 3).value
        '2
        Saldos(i, 13) = Sheets(shSaldosCajas).Cells(X, punteroCienCoin + 4).value
        '1
        Saldos(i, 14) = Sheets(shSaldosCajas).Cells(X, punteroCienCoin + 5).value
        '050
        Saldos(i, 15) = Sheets(shSaldosCajas).Cells(X, punteroCienCoin + 6).value
        '020
        Saldos(i, 16) = Sheets(shSaldosCajas).Cells(X, punteroCienCoin + 7).value
        '010
        Saldos(i, 17) = Sheets(shSaldosCajas).Cells(X, punteroCienCoin + 8).value
        '005
        Saldos(i, 18) = Sheets(shSaldosCajas).Cells(X, punteroCienCoin + 9).value
        
        i = i + 1
    End If
    
    X = X + 1
Loop




'''''''''''''''''''''''''''''''''''''''ARREGLO DEMANDA POR PLAZA Y ETV''''''''''''''''''''''''''''''''''''
Sheets(shCargaMasiva).Select
'N|fffd|mero de registros para arreglo
totRowSuc = Range("A:A").SpecialCells(xlCellTypeConstants).Count


'Dim punteroCaja, punteroEtv, punteroSucursal, punteroIdSucursal, punteroImporte, punteroValidacion, punteroMarcaMasivo, saldosBillMil, saldosCienCoin As Long
'punteroCaja = 1
'punteroEtv = 2
'punteroIdSucursal = 25
'punteroSucursal = 23
'punteroImporte = 22
'punteroValidacion = 21
'punteroMarcaMasivo = 24

Dim DEMANDA_TOTAL() As Variant
ReDim DEMANDA_TOTAL(totRowSuc, 5)
punteroInicial = 2
'REGISTRAR SOLO LOS SERVICIO QUE NO HAN SIDO COLOCADOS EN LA PROGRAMACI|fffd|N DE DOTACIONES
q = 1
Do While Cells(punteroInicial, 1) <> ""
        For i = 1 To UBound(DEMANDA_TOTAL)
            
                    'saldo mayor a cero                  validaci|fffd|n No exitosa                            no marca de registro masivo
            If Cells(punteroInicial, punteroImporte) > 0 And Cells(punteroInicial, punteroValidacion) <> "Validaci|fffd|n Exitosa" And Cells(punteroInicial, punteroMarcaMasivo) = "" Then
                
                'sucursal
                DEMANDA_TOTAL(q, 1) = Cells(punteroInicial, punteroIdSucursal)
                'Nombre sucursal
                DEMANDA_TOTAL(q, 2) = Cells(punteroInicial, punteroSucursal)
                'plaza
                DEMANDA_TOTAL(q, 3) = Cells(punteroInicial, punteroCaja)
                'etv
                DEMANDA_TOTAL(q, 4) = Cells(punteroInicial, punteroEtv)
                'importe
                DEMANDA_TOTAL(q, 5) = Cells(punteroInicial, punteroImporte)
               
                q = q + 1
                Exit For
                
            End If
            
        Next i
punteroInicial = punteroInicial + 1
Loop


''''''''''''''''''''''''''''''''''''''VALORES EN FORMULARIO'''''''''''''''''''''''''''''''''''''''''''''''''''''
Sheets(shCargaMasiva).Select

punteroActual = ActiveCell.Row

'valores en vista de formulario SALDOS
For i = 1 To UBound(Saldos)

        If Cells(punteroActual, punteroCaja) = Saldos(i, 1) And Cells(punteroActual, punteroEtv) = Saldos(i, 2) Then
            plazaFound = Saldos(i, 1)
            etvFound = Saldos(i, 2)
            bill1000Found = Saldos(i, 3)
            bill500Found = Saldos(i, 4)
            bill200Found = Saldos(i, 5)
            bill100Found = Saldos(i, 6)
            bill50Found = Saldos(i, 7)
            bill20Found = Saldos(i, 8)
            coin100Found = Saldos(i, 9)
            coin20Found = Saldos(i, 10)
            coin10Found = Saldos(i, 11)
            coin5Found = Saldos(i, 12)
            coin2Found = Saldos(i, 13)
            coin1Found = Saldos(i, 14)
            coin050Found = Saldos(i, 15)
            coin020Found = Saldos(i, 16)
            coin010Found = Saldos(i, 17)
            coin005Found = Saldos(i, 18)
        End If

Next i


Dim titulo As String
Dim listadotP As Collection
Dim importeDotP As Double

Set listadotP = New Collection

titulo = ""
importeDotP = 0
punteroActual = ActiveCell.Row
'numero de text box para mostrar dotaciones pendientes
numTextBoxes = 9
numText = 1
'valores en vista de formulario DOTACIONES
For i = 1 To UBound(DEMANDA_TOTAL)
'            MsgBox "hoja PLAZA " & Cells(punteroActual, punteroCaja) & Chr(10) & "arreglo " & DEMANDA_TOTAL(i, 3) & Chr(10) & _
'            "hoja ETV " & Cells(punteroActual, punteroEtv) & Chr(10) & "arreglo " & DEMANDA_TOTAL(i, 3) & _
'            Cells(punteroActual, punteroCaja) = DEMANDA_TOTAL(i, 3) And Cells(punteroActual, punteroEtv) = DEMANDA_TOTAL(i, 3)
'

        If Cells(punteroActual, punteroCaja) = DEMANDA_TOTAL(i, 3) And Cells(punteroActual, punteroEtv) = DEMANDA_TOTAL(i, 4) Then
            
            If numText <= numTextBoxes Then
            
                listadotP.Add DEMANDA_TOTAL(i, 2) & "  -  " & Format(DEMANDA_TOTAL(i, 5), "$#,##0.00")
                importeDotP = importeDotP + DEMANDA_TOTAL(i, 5)
             
            Else
                Exit For
            End If
            
            
            
'            If listadotP = "" Then
'
'
'
'            'titulo = "PLAZA: " & Cells(punteroActual, punteroCaja) & " ETV: " & Cells(punteroActual, punteroEtv)
'
'            listadotP = DEMANDA_TOTAL(i, 2) & "  -  " & Format(DEMANDA_TOTAL(i, 5), "$#,##0.00")
'            importeDotP = importeDotP + DEMANDA_TOTAL(i, 5)
'
'            ElseIf Len(listadotP) > 0 Then
'
'            listadotP = listadotP & vbNewLine & DEMANDA_TOTAL(i, 2) & "  -  " & Format(DEMANDA_TOTAL(i, 5), "$#,##0.00")
'            importeDotP = importeDotP + DEMANDA_TOTAL(i, 5)
'
'
'            End If
            
        End If

Next i


'For n = 1 To listadotP.Count
'
'MsgBox "listadotP.Count " & listadotP.Count & Chr(10) & n & " " & listadotP(n)
'Next n

On Error Resume Next
'agregar valores a saldos en cajas


With Me.billMil
.value = Format(bill1000Found, "$#,##0.00")

If Me.billMil.value > 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbWhite
.BackColor = vbBlack

ElseIf Me.billMil.value < 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectSunken
.ForeColor = vbYellow
.BackColor = vbRed

ElseIf Me.billMil.value = 0 Then
.Font.size = 10
.Font.Weight = 4
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectFlat
.ForeColor = vbBlack
End If


End With

With Me.bill500
.value = Format(bill500Found, "$#,##0.00")

If Me.bill500.value > 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbWhite
.BackColor = vbBlack

ElseIf Me.bill500.value < 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectSunken
.ForeColor = vbYellow
.BackColor = vbRed

ElseIf Me.bill500.value = 0 Then
.Font.size = 10
.Font.Weight = 4
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectFlat
.ForeColor = vbBlack
End If

End With

With Me.bill200
.value = Format(bill200Found, "$#,##0.00")

If Me.bill200.value > 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbWhite
.BackColor = vbBlack

ElseIf Me.bill200.value < 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectSunken
.ForeColor = vbYellow
.BackColor = vbRed

ElseIf Me.bill200.value = 0 Then
.Font.size = 10
.Font.Weight = 4
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectFlat
.ForeColor = vbBlack
End If

End With

With Me.bill100
.value = Format(bill100Found, "$#,##0.00")

If Me.bill100.value > 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbWhite
.BackColor = vbBlack

ElseIf Me.bill100.value < 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectSunken
.ForeColor = vbYellow
.BackColor = vbRed

ElseIf Me.bill100.value = 0 Then
.Font.size = 10
.Font.Weight = 4
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectFlat
.ForeColor = vbBlack
End If


End With

With Me.bill50
.value = Format(bill50Found, "$#,##0.00")

If Me.bill50.value > 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbWhite
.BackColor = vbBlack

ElseIf Me.bill50.value < 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectSunken
.ForeColor = vbYellow
.BackColor = vbRed

ElseIf Me.bill50.value = 0 Then
.Font.size = 10
.Font.Weight = 4
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectFlat
.ForeColor = vbBlack
End If

End With

With Me.bill20
.value = Format(bill20Found, "$#,##0.00")

If Me.bill20.value > 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbWhite
.BackColor = vbBlack

ElseIf Me.bill20.value < 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectSunken
.ForeColor = vbYellow
.BackColor = vbRed

ElseIf Me.bill20.value = 0 Then
.Font.size = 10
.Font.Weight = 4
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectFlat
.ForeColor = vbBlack
End If

End With

With Me.coin100
.value = Format(coin100Found, "$#,##0.00")

If Me.coin100.value > 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbWhite
.BackColor = vbBlack

ElseIf Me.coin100.value < 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectSunken
.ForeColor = vbYellow
.BackColor = vbRed

ElseIf Me.coin100.value = 0 Then
.Font.size = 10
.Font.Weight = 4
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectFlat
.ForeColor = vbBlack
End If

End With

With Me.coin20
.value = Format(coin20Found, "$#,##0.00")

If Me.coin20.value > 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbWhite
.BackColor = vbBlack

ElseIf Me.coin20.value < 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectSunken
.ForeColor = vbYellow
.BackColor = vbRed

ElseIf Me.coin20.value = 0 Then
.Font.size = 10
.Font.Weight = 4
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectFlat
.ForeColor = vbBlack
End If

End With

With Me.coin10
.value = Format(coin10Found, "$#,##0.00")

If Me.coin10.value > 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbWhite
.BackColor = vbBlack

ElseIf Me.coin10.value < 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectSunken
.ForeColor = vbYellow
.BackColor = vbRed

ElseIf Me.coin10.value = 0 Then
.Font.size = 10
.Font.Weight = 4
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectFlat
.ForeColor = vbBlack
End If

End With

With Me.coin5
.value = Format(coin5Found, "$#,##0.00")

If Me.coin5.value > 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbWhite
.BackColor = vbBlack

ElseIf Me.coin5.value < 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectSunken
.ForeColor = vbYellow
.BackColor = vbRed

ElseIf Me.coin5.value = 0 Then
.Font.size = 10
.Font.Weight = 4
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectFlat
.ForeColor = vbBlack
End If

End With

With Me.coin2
.value = Format(coin2Found, "$#,##0.00")

If Me.coin2.value > 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbWhite
.BackColor = vbBlack

ElseIf Me.coin2.value < 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectSunken
.ForeColor = vbYellow
.BackColor = vbRed

ElseIf Me.coin2.value = 0 Then
.Font.size = 10
.Font.Weight = 4
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectFlat
.ForeColor = vbBlack
End If

End With

With Me.coin1
.value = Format(coin1Found, "$#,##0.00")

If Me.coin1.value > 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbWhite
.BackColor = vbBlack

ElseIf Me.coin1.value < 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectSunken
.ForeColor = vbYellow
.BackColor = vbRed

ElseIf Me.coin1.value = 0 Then
.Font.size = 10
.Font.Weight = 4
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectFlat
.ForeColor = vbBlack
End If

End With

With Me.coin050
.value = Format(coin050Found, "$#,##0.00")

If Me.coin050.value > 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbWhite
.BackColor = vbBlack

ElseIf Me.coin050.value < 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectSunken
.ForeColor = vbYellow
.BackColor = vbRed

ElseIf Me.coin050.value = 0 Then
.Font.size = 10
.Font.Weight = 4
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectFlat
.ForeColor = vbBlack
End If


End With

With Me.coin020
.value = Format(coin020Found, "$#,##0.00")

If Me.coin020.value > 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbWhite
.BackColor = vbBlack

ElseIf Me.coin020.value < 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectSunken
.ForeColor = vbYellow
.BackColor = vbRed

ElseIf Me.coin020.value = 0 Then
.Font.size = 10
.Font.Weight = 4
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectFlat
.ForeColor = vbBlack
End If


End With

With Me.coin010
.value = Format(coin010Found, "$#,##0.00")

If Me.coin010.value > 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbWhite
.BackColor = vbBlack

ElseIf Me.coin010.value < 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectSunken
.ForeColor = vbYellow
.BackColor = vbRed

ElseIf Me.coin010.value = 0 Then
.Font.size = 10
.Font.Weight = 4
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectFlat
.ForeColor = vbBlack


End If

End With

With Me.coin005
.value = Format(coin005Found, "$#,##0.00")

If Me.coin005.value > 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbWhite
.BackColor = vbBlack

ElseIf Me.coin005.value < 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectSunken
.ForeColor = vbYellow
.BackColor = vbRed

ElseIf Me.coin005.value = 0 Then
.Font.size = 10
.Font.Weight = 4
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectFlat
.ForeColor = vbBlack
End If

End With


With Me.coin005
.value = Format(coin005Found, "$#,##0.00")

If Me.coin005.value > 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbWhite
.BackColor = vbBlack

ElseIf Me.coin005.value < 0 Then
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectSunken
.ForeColor = vbYellow
.BackColor = vbRed

ElseIf Me.coin005.value = 0 Then
.Font.size = 10
.Font.Weight = 4
.TextAlign = fmTextAlignCenter
.SpecialEffect = fmSpecialEffectFlat
.ForeColor = vbBlack
End If

End With


'''''''''''''''''''DOTACIONES PENDIENTES''''''''''''''''''''''
With Me.DotPen1

.value = listadotP(1)
.Font.size = 12
.TextAlign = fmTextAlignLeft
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbBlue
.BackColor = vbWhite

End With

With Me.DotPen2

.value = listadotP(2)
.Font.size = 12
.TextAlign = fmTextAlignLeft
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbBlue
.BackColor = vbWhite

End With

With Me.DotPen3

.value = listadotP(3)
.Font.size = 12
.TextAlign = fmTextAlignLeft
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbBlue
.BackColor = vbWhite

End With

With Me.DotPen4

.value = listadotP(4)
.Font.size = 12
.TextAlign = fmTextAlignLeft
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbBlue
.BackColor = vbWhite
End With

With Me.DotPen5

.value = listadotP(5)
.Font.size = 12
.TextAlign = fmTextAlignLeft
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbBlue
.BackColor = vbWhite

End With

With Me.totalPendiente

.value = "TOTAL " & Format(importeDotP, "$#,##0.00")
.Font.size = 10
.Font.Bold = True
.TextAlign = fmTextAlignLeft
.SpecialEffect = fmSpecialEffectRaised
.ForeColor = vbWhite
.BackColor = vbMagenta

End With





On Error GoTo 0



'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'regresar a hoja de inicio
If AcSh = sh3 Then

Sheets(sh3).Select

Else

Sheets(sh18).Select

End If

Application.ScreenUpdating = True

End Sub



''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub BillMilServicio_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Call Punteros
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113

'9 = TAB, 13 = ENTER, 37 = LEFT, 38 = UP, 39 = RIGHT, 40 = DOWN

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then

    'Validar importe agregado
    
    If Me.BillMilServicio.value > 0 And IsNumeric(Me.BillMilServicio.value) Then
                'validar si es divisible el registro capturado
                If (Int(Me.BillMilServicio.value) \ 1000) * 1000 <> Val(Me.BillMilServicio.value) Then
                    Me.BillMilServicio = 0
                    With Me.BillMilServicio
                            .value = CCur(BillMilServicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
        
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.BillMilServicio
                            .value = CCur(BillMilServicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                End If

    ElseIf Me.BillMilServicio.value = 0 Or Me.BillMilServicio.value = "" Or WorksheetFunction.IsText(Me.BillMilServicio.value) = True Then
                With Me.BillMilServicio
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    
''''''''''''''''''''''''''''''''''''ACTUALIZAR VALOR DE CAJAS'''''''''''''''''''''''''''''''''''''''
                    With Me.BillMilServicio
                    
                    If Me.BillMilServicio = "" Or Me.BillMilServicio = 0 Then
                    .value = 0
                    Else
                    .value = Me.BillMilServicio.value
                    End If
                    
                    End With
                    
                    '''''''''''''''''''''''''''arreglo''''''''''''''''''''''''''''''''''
                    Sheets(shCargaMasiva).Select
                    punteroActual = ActiveCell.Row
                    
                    i = 1
                    X = 6
                    Sheets(shSaldosCajas).Select
                    
                    'N|fffd|mero de registros para arreglo
                    totRow = Range("A:A").SpecialCells(xlCellTypeConstants).Count
                    
                    
                    Dim Saldos() As Variant
                    ReDim Saldos(totRow, 18)
                    
                    Do While Cells(X, 1) <> ""
                    
                        If Cells(X, 1) = "TOTALES" Then
                            'ID PLAZA
                            Saldos(i, 1) = Sheets(shSaldosCajas).Cells(X, punteroPlazaBuscar).value
                            'ETV
                            Saldos(i, 2) = Sheets(shSaldosCajas).Cells(X, punteroEtvBuscar).value
                            '500
                            Saldos(i, 3) = Sheets(shSaldosCajas).Cells(X, punteroBillMil).value
                    
                            
                            i = i + 1
                        End If
                        
                        X = X + 1
                    Loop
                    
                    
                    ''''''''''''''''''''''''''''''buscar saldo''''''''''''''''''''''''''''''''''''
                    Sheets(shCargaMasiva).Select
                    
                    'valores en vista de formulario SALDOS
                    For i = 1 To UBound(Saldos)
                    
                            If Cells(punteroActual, punteroCaja) = Saldos(i, 1) And Cells(punteroActual, punteroEtv) = Saldos(i, 2) Then
                                bill1000Found = Saldos(i, 3) - Me.BillMilServicio.value
                            End If
                    
                    Next i
                    
                    
                    'actualizar valor en saldo de caja
                    With Me.billMil
                    .value = Format(bill1000Found, "$#,##0.00")
                    
                    If Me.billMil.value > 0 Then
                    .Font.size = 14
                    .Font.Bold = True
                    .TextAlign = fmTextAlignCenter
                    .SpecialEffect = fmSpecialEffectRaised
                    .ForeColor = vbWhite
                    .BackColor = vbBlack
                    
                    ElseIf Me.billMil.value < 0 Then
                    .Font.size = 14
                    .Font.Bold = True
                    .TextAlign = fmTextAlignCenter
                    .SpecialEffect = fmSpecialEffectSunken
                    .ForeColor = vbYellow
                    .BackColor = vbRed
                    
                    ElseIf Me.billMil.value = 0 Then
                    .Font.size = 10
                    .Font.Weight = 4
                    .TextAlign = fmTextAlignCenter
                    .SpecialEffect = fmSpecialEffectFlat
                    .ForeColor = vbBlack
                    End If
                    
                    End With
    
    
    End If
    
'ir a siguiente textbox
Me.Bill500Servicio.SetFocus

End If

'Me.BillMilServicio.SetFocus

End Sub

Private Sub Bill500Servicio_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Bill500Servicio.value > 0 And IsNumeric(Me.Bill500Servicio.value) Then
               'validar si es divisible el registro capturado
                If (Int(Me.Bill500Servicio.value) \ 500) * 500 <> Val(Me.Bill500Servicio.value) Then
                    Me.Bill500Servicio = 0
                    With Me.Bill500Servicio
                            .value = CCur(Bill500Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Bill500Servicio
                            .value = CCur(Bill500Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Bill500Servicio.value = 0 Or Me.Bill500Servicio.value = "" Or WorksheetFunction.IsText(Me.Bill500Servicio.value) = True Then
                With Me.Bill500Servicio
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

Me.Bill200Servicio.SetFocus
End If

'Me.Bill500Servicio.SetFocus

End Sub

Private Sub Bill200Servicio_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Bill200Servicio.value > 0 And IsNumeric(Me.Bill200Servicio.value) Then
                'validar si es divisible el registro capturado
                If (Int(Me.Bill200Servicio.value) \ 200) * 200 <> Val(Me.Bill200Servicio.value) Then
                    Me.Bill200Servicio = 0
                    With Me.Bill200Servicio
                            .value = CCur(Bill200Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Bill200Servicio
                            .value = CCur(Bill200Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Bill200Servicio.value = 0 Or Me.Bill200Servicio.value = "" Or WorksheetFunction.IsText(Me.Bill200Servicio.value) = True Then
                With Me.Bill200Servicio
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

Me.Bill100Servicio.SetFocus

End If

'Me.Bill200Servicio.SetFocus

End Sub

Private Sub Bill100Servicio_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Bill100Servicio.value > 0 And IsNumeric(Me.Bill100Servicio.value) Then
                'validar si es divisible el registro capturado
                If (Int(Me.Bill100Servicio.value) \ 100) * 100 <> Val(Me.Bill100Servicio.value) Then
                    Me.Bill100Servicio = 0
                    With Me.Bill100Servicio
                            .value = CCur(Bill100Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Bill100Servicio
                            .value = CCur(Bill100Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Bill100Servicio.value = 0 Or Me.Bill100Servicio.value = "" Or WorksheetFunction.IsText(Me.Bill100Servicio.value) = True Then
                With Me.Bill100Servicio
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

Me.Bill50Servicio.SetFocus
End If


'Me.Bill100Servicio.SetFocus

End Sub


Private Sub Bill50Servicio_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Bill50Servicio.value > 0 And IsNumeric(Me.Bill50Servicio.value) Then
               'validar si es divisible el registro capturado
                If (Int(Me.Bill50Servicio.value) \ 50) * 50 <> Val(Me.Bill50Servicio.value) Then
                    Me.Bill50Servicio = 0
                    With Me.Bill50Servicio
                            .value = CCur(Bill50Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Bill50Servicio
                            .value = CCur(Bill50Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Bill50Servicio.value = 0 Or Me.Bill50Servicio.value = "" Or WorksheetFunction.IsText(Me.Bill50Servicio.value) = True Then
                With Me.Bill50Servicio
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

Me.Bill20Servicio.SetFocus
End If

'Me.Bill50Servicio.SetFocus

End Sub
Private Sub Bill20Servicio_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Bill20Servicio.value > 0 And IsNumeric(Me.Bill20Servicio.value) Then
                'validar si es divisible el registro capturado
                If (Int(Me.Bill20Servicio.value) \ 20) * 20 <> Val(Me.Bill20Servicio.value) Then
                    Me.Bill20Servicio = 0
                    With Me.Bill20Servicio
                            .value = CCur(Bill20Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Bill20Servicio
                            .value = CCur(Bill20Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Bill20Servicio.value = 0 Or Me.Bill20Servicio.value = "" Or WorksheetFunction.IsText(Me.Bill20Servicio.value) = True Then
                With Me.Bill20Servicio
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

Me.Coin100Servicio.SetFocus
End If

'Me.Bill20Servicio.SetFocus

End Sub



Private Sub Coin100Servicio_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin100Servicio.value > 0 And IsNumeric(Me.Coin100Servicio.value) Then
                'validar si es divisible el registro capturado
                If (Int(Me.Coin100Servicio.value) \ 100) * 100 <> Val(Me.Coin100Servicio.value) Then
                    Me.Coin100Servicio = 0
                    With Me.Coin100Servicio
                            .value = CCur(Coin100Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin100Servicio
                            .value = CCur(Coin100Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin100Servicio.value = 0 Or Me.Coin100Servicio.value = "" Or WorksheetFunction.IsText(Me.Coin100Servicio.value) = True Then
                With Me.Coin100Servicio
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

Me.Coin20Servicio.SetFocus
End If

'Me.Coin100Servicio.SetFocus

End Sub

Private Sub Coin20Servicio_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin20Servicio.value > 0 And IsNumeric(Me.Coin20Servicio.value) Then
                'validar si es divisible el registro capturado
                If (Int(Me.Coin20Servicio.value) \ 20) * 20 <> Val(Me.Coin20Servicio.value) Then
                    Me.Coin20Servicio = 0
                    With Me.Coin20Servicio
                            .value = CCur(Coin20Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin20Servicio
                            .value = CCur(Coin20Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin20Servicio.value = 0 Or Me.Coin20Servicio.value = "" Or WorksheetFunction.IsText(Me.Coin20Servicio.value) = True Then
                With Me.Coin20Servicio
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

Me.Coin10Servicio.SetFocus
End If

'Me.Coin20Servicio.SetFocus

End Sub

Private Sub Coin10Servicio_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin10Servicio.value > 0 And IsNumeric(Me.Coin10Servicio.value) Then
                    'validar si es divisible el registro capturado
                    If (Int(Me.Coin10Servicio.value) \ 10) * 10 <> Val(Me.Coin10Servicio.value) Then
                        Me.Coin10Servicio = 0
                    With Me.Coin10Servicio
                            .value = CCur(Coin10Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin10Servicio
                            .value = CCur(Coin10Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin10Servicio.value = 0 Or Me.Coin10Servicio.value = "" Or WorksheetFunction.IsText(Me.Coin10Servicio.value) = True Then
                With Me.Coin10Servicio
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

Me.Coin5Servicio.SetFocus
End If


'Me.Coin10Servicio.SetFocus

End Sub

Private Sub Coin5Servicio_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin5Servicio.value > 0 And IsNumeric(Me.Coin5Servicio.value) Then
                    'validar si es divisible el registro capturado
                    If (Int(Me.Coin5Servicio.value) \ 5) * 5 <> Val(Me.Coin5Servicio.value) Then
                        Me.Coin5Servicio = 0
                    With Me.Coin5Servicio
                            .value = CCur(Coin5Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin5Servicio
                            .value = CCur(Coin5Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin5Servicio.value = 0 Or Me.Coin5Servicio.value = "" Or WorksheetFunction.IsText(Me.Coin5Servicio.value) = True Then
                With Me.Coin5Servicio
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

Me.Coin2Servicio.SetFocus
End If


'Me.Coin5Servicio.SetFocus

End Sub

Private Sub Coin2Servicio_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin2Servicio.value > 0 And IsNumeric(Me.Coin2Servicio.value) Then
                    'validar si es divisible el registro capturado
                    If (Int(Me.Coin2Servicio.value) \ 2) * 2 <> Val(Me.Coin2Servicio.value) Then
                        Me.Coin2Servicio = 0
                    With Me.Coin2Servicio
                            .value = CCur(Coin2Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin2Servicio
                            .value = CCur(Coin2Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin2Servicio.value = 0 Or Me.Coin2Servicio.value = "" Or WorksheetFunction.IsText(Me.Coin2Servicio.value) = True Then
                With Me.Coin2Servicio
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

Me.Coin1Servicio.SetFocus
End If

'Me.Coin2Servicio.SetFocus

End Sub


Private Sub Coin1Servicio_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin1Servicio.value > 0 And IsNumeric(Me.Coin1Servicio.value) Then
                'validar si es divisible el registro capturado
                    If (Int(Me.Coin1Servicio.value) \ 1) * 1 <> Val(Me.Coin1Servicio.value) Then
                        Me.Coin1Servicio = 0
                    With Me.Coin1Servicio
                            .value = CCur(Coin1Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin1Servicio
                            .value = CCur(Coin1Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin1Servicio.value = 0 Or Me.Coin1Servicio.value = "" Or WorksheetFunction.IsText(Me.Coin1Servicio.value) = True Then
                With Me.Coin1Servicio
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

Me.Coin050Servicio.SetFocus
End If

'Me.Coin1Servicio.SetFocus

End Sub


Private Sub Coin050Servicio_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin050Servicio.value > 0 And IsNumeric(Me.Coin050Servicio.value) Then
                'validar si es divisible el registro capturado
                    If Int((Me.Coin050Servicio.value) / 0.5) * 0.5 <> Val(Me.Coin050Servicio.value) Then
                        Me.Coin050Servicio = 0
                    With Me.Coin050Servicio
                            .value = CCur(Coin050Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin050Servicio
                            .value = CCur(Coin050Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin050Servicio.value = 0 Or Me.Coin050Servicio.value = "" Or WorksheetFunction.IsText(Me.Coin050Servicio.value) = True Then
                With Me.Coin050Servicio
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

Me.Coin020Servicio.SetFocus
End If


'Me.Coin050Servicio.SetFocus

End Sub


Private Sub Coin020Servicio_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer
Dim Orig, Temp As String

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin020Servicio.value > 0 And IsNumeric(Me.Coin020Servicio.value) Then
                'validar si es divisible el registro capturado
                'Valores de la divisi|fffd|n
                    Orig = (Me.Coin020Servicio.value) / 0.2
                    
                    
                    If ((((Me.Coin020Servicio.value) / 0.2) * 0.2) - Val(Me.Coin020Servicio.value)) > 0.01 Then
                        Me.Coin020Servicio = 0
                    With Me.Coin020Servicio
                            .value = CCur(Coin020Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin020Servicio
                            .value = CCur(Coin020Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin020Servicio.value = 0 Or Me.Coin020Servicio.value = "" Or WorksheetFunction.IsText(Me.Coin020Servicio.value) = True Then
                With Me.Coin020Servicio
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If
    
Me.Coin010Servicio.SetFocus
End If


'Me.Coin020Servicio.SetFocus

End Sub


Private Sub Coin010Servicio_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin010Servicio.value > 0 And IsNumeric(Me.Coin010Servicio.value) Then
                'validar si es divisible el registro capturado
                    If ((Me.Coin010Servicio.value) / 0.1) * 0.1 <> Val(Me.Coin010Servicio.value) Then
                        Me.Coin010Servicio = 0
                    With Me.Coin010Servicio
                            .value = CCur(Coin010Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin010Servicio
                            .value = CCur(Coin010Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin010Servicio.value = 0 Or Me.Coin010Servicio.value = "" Or WorksheetFunction.IsText(Me.Coin010Servicio.value) = True Then
                With Me.Coin010Servicio
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

Me.Coin005Servicio.SetFocus
End If


'Me.Coin010Servicio.SetFocus

End Sub



Private Sub Coin005Servicio_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113


If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then


    If Me.Coin005Servicio.value > 0 And IsNumeric(Me.Coin005Servicio.value) Then
                'validar si es divisible el registro capturado
                    If ((Me.Coin005Servicio.value) / 0.05) * 0.05 <> Val(Me.Coin005Servicio.value) Then
                        Me.Coin005Servicio = 0
                    With Me.Coin005Servicio
                            .value = CCur(Coin005Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    End With
                    MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"


                'registro que alcanza y es divisible
                Else
                    With Me.Coin005Servicio
                            .value = CCur(Coin005Servicio)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

                End If

    ElseIf Me.Coin005Servicio.value = 0 Or Me.Coin005Servicio.value = "" Or WorksheetFunction.IsText(Me.Coin005Servicio.value) = True Then
                With Me.Coin005Servicio
                            .value = CCur(0)
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalServicio
                            .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                            .SetFocus
                            .SelStart = 0
                            .SelLength = Len(.Text)
                    End With
                    With Me.TotalBilletesServicio
                        .value = FormatCurrency(Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    
                    With Me.TotalMonedasServicio
                        .value = FormatCurrency(Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With
                    
                    With Me.ImporteServicio
                        .value = FormatCurrency((Val(BillMilServicio) + Val(Bill500Servicio) + Val(Bill200Servicio) + Val(Bill100Servicio) + Val(Bill50Servicio) + Val(Bill20Servicio) + Val(Coin100Servicio) + Val(Coin20Servicio) + Val(Coin10Servicio) + Val(Coin5Servicio) + Val(Coin2Servicio) + Val(Coin1Servicio) + Val(Coin050Servicio) + Val(Coin020Servicio) + Val(Coin010Servicio) + Val(Coin005Servicio)))
                        .SetFocus
                        .SelStart = 0
                        .SelLength = Len(.Text)
                    End With

    End If

Me.BillMilServicio.SetFocus

End If




End Sub


Private Sub ImporteServicio_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)


End Sub
Attribute VB_Name = "SOLICITUD_PAGOS_TESORERIA"
Attribute VB_Base = "0{4BF4834C-0415-46FD-B806-33B40D4B2A34}{7CC8BB6B-8AF2-459A-88A6-1B41777965FB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False





Private Sub CommandButton2_Click()
'GENERAR FORMATO
Call VariablesGlobales

'claves de vendedores sh4 = "Info. Gral."
Sheets(sh4).Select
Dim punteroCatVendedor, punteroClaveVendedor, NumCat, NumCat0 As Long
Dim CatalogoVendedores() As String
Dim cuSh As String

cuSh = ActiveWorkbook.Name

punteroCatVendedor = 56
punteroClaveVendedor = 57

NumCat = Range(Cells(2, punteroCatVendedor), Cells(2, punteroCatVendedor).End(xlDown)).Count
NumCat0 = 2

ReDim CatalogoVendedores(NumCat, 3)

For i = 1 To NumCat

    CatalogoVendedores(i, 1) = Cells(NumCat0, punteroCatVendedor)
    CatalogoVendedores(i, 2) = Cells(NumCat0, punteroClaveVendedor)
    CatalogoVendedores(i, 3) = Cells(NumCat0, punteroClaveVendedor + 1)
    
    NumCat0 = NumCat0 + 1
    
Next i


indice = 4



'MsgBox "registro " & indice & Chr(10) & CatalogoVendedores(indice, 1) & Chr(10) & CatalogoVendedores(indice, 2) _
'        & Chr(10) & CatalogoVendedores(indice, 3)
        
        

Dim rowIni, rowFin, colIni, colFin, numReg As Long
Dim punteroVendedor, punteroEtvVendedor, punteroPlazaVendedor, punteroImporte, punteroClaveSap As Integer
Dim Vendedor() As String


punteroVendedor = 9
punteroEtvVendedor = 10
punteroPlazaVendedor = 11
punteroImporte = 8
punteroClaveSap = 33
'
rowIni = 6
colIni = 1

'sh17 = "Registro COMPRAS"
Sheets(sh17).Select

colFin = Cells(rowIni - 1, colIni).End(xlToRight).Column

    If Cells(rowIni, colIni + 2) <> "" And Cells(rowIni + 1, colIni + 2) = "" And Cells(rowIni + 2, colIni + 2) = "" Then
    
        rowFin = 6
        numReg = 1
        
    ElseIf (Range(Cells(rowIni, colIni + 2), Cells(rowIni, colIni + 2).End(xlDown)).Count) > 1000 Then
        rowFin = 6
        numReg = 1
    Else
    
        rowFin = Range(Cells(rowIni, colIni + 2), Cells(rowIni, colIni + 2).End(xlDown)).Count + 5
        numReg = Range(Cells(rowIni, colIni + 2), Cells(rowIni, colIni + 2).End(xlDown)).Count
        
    End If


ReDim Vendedor(numReg, 7)

'Do While Cells(RowIni, 3) <> ""

For i = 1 To numReg
    
    'VENDEDOR
    Vendedor(i, 1) = Cells(rowIni, punteroVendedor)
    'ETV VENDEDOR
     Vendedor(i, 2) = Cells(rowIni, punteroEtvVendedor)
    'PLAZA VENDEDOR
     Vendedor(i, 3) = Cells(rowIni, punteroPlazaVendedor)
    'IMPORTE
     Vendedor(i, 4) = Cells(rowIni, punteroImporte)
     'IMPORTE
     Vendedor(i, 5) = Cells(rowIni, punteroVendedor) & " " & Cells(rowIni, punteroEtvVendedor) & " " & Cells(rowIni, punteroPlazaVendedor) & " " & Format(Cells(rowIni, punteroImporte), "$#,#0.00")
     'CLAVE BANCO
     
     For j = 1 To UBound(CatalogoVendedores)
     
        If Cells(rowIni, punteroVendedor) = CatalogoVendedores(j, 1) Then
           
           Vendedor(i, 6) = CatalogoVendedores(j, 2)
           Exit For
        
        Else
        End If
    
    'FOLIO SAP
     Vendedor(i, 7) = Cells(rowIni, punteroClaveSap)
     
     Next j
     
    rowIni = rowIni + 1
    
Next i

    
    
'Loop

'indice = 4
'
'MsgBox "registro " & indice & Chr(10) & Vendedor(indice, 1) & Chr(10) & Vendedor(indice, 2) _
'        & Chr(10) & Vendedor(indice, 3) & Chr(10) & Vendedor(indice, 4) _
'        & Chr(10) & Vendedor(indice, 5) & Chr(10) & Vendedor(indice, 6)



'NOMBRE DEL ARCHIVO A GENERAR
Dim NombreArchivo As String
Dim campoViaPago, campoAreaSolicitante As String
NombreArchivo = Format(Day(Date), "00") & " " & NombresMesesCorto(Month(Date)) & " " & Format(Year(Date), "0000") & " COMPRAS PARTICIPANTE " & UsuarioWin & " " & Format(Hour(Now), "00") & Format(Minute(Now), "00") & Format(Second(Now), "00")
Dim RowInicio, ColInicio, RowFinal, ColFinal As Long
Dim RowDatGen As Integer
'inicio de registro en el formato
'sh23 = "PARTICIPANTE(formato)"
Sheets(sh23).Select
RowInicio = 14
ColInicio = 3
RowFinal = 33
ColFinal = 10

RowDatGen = 5

campoViaPago = "SPEI (Participante - Participante)"
campoAreaSolicitante = "LOG|fffd|STICA MONETARIA"

'limpiar campos de captura
Range(Cells(RowInicio, ColInicio), Cells(RowFinal, ColFinal)).ClearContents

'''''''''CAMPOS GENERALES''''''''''''''''
'FECHA
Cells(RowDatGen, ColInicio) = Format(Date, "dd/mm/yyyy")
'FECHA PAGO
Cells(RowDatGen, ColInicio + 6) = Format(Date, "dd/mm/yyyy")
'AREA QUE SOLICITA
Cells(RowDatGen, ColInicio + 1) = campoAreaSolicitante
'ELABOR|fffd|
Cells(RowDatGen, ColInicio + 3) = NombrePlaneador


''''''''REGISTROS DE COMPRA'''''''''''''''''

If Me.CheckBox1.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox1.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If


If Me.CheckBox2.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox2.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If


If Me.CheckBox3.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox3.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If


If Me.CheckBox4.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox4.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If

If Me.CheckBox5.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox5.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If

If Me.CheckBox6.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox6.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If

If Me.CheckBox7.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox7.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If

If Me.CheckBox8.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox8.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If

If Me.CheckBox9.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox9.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If

If Me.CheckBox10.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox10.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If

If Me.CheckBox11.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox11.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If

If Me.CheckBox12.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox12.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If

If Me.CheckBox13.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox13.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If

If Me.CheckBox14.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox14.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If

If Me.CheckBox15.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox15.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If

If Me.CheckBox16.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox16.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If

If Me.CheckBox17.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox17.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If

If Me.CheckBox18.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox18.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If

If Me.CheckBox19.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox19.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If

If Me.CheckBox20.value = True Then
    For i = 1 To UBound(Vendedor)
        If Me.CheckBox20.Caption = Vendedor(i, 5) Then
            'vendedor
            Cells(RowInicio, ColInicio) = CStr(Vendedor(i, 1))
            'clave banco vendedor
            Cells(RowInicio, ColInicio + 1) = Format(Vendedor(i, 6), "'000")
            'texto de referencia
            Cells(RowInicio, ColInicio + 2) = Vendedor(i, 1) & " " & Vendedor(i, 2) & " " & Vendedor(i, 3)
            'via de pago
            Cells(RowInicio, ColInicio + 4) = campoViaPago
            'sociedad
            Cells(RowInicio, ColInicio + 5) = Sociedad
            'importe
            Cells(RowInicio, ColInicio + 6) = Val(Vendedor(i, 4))
            'clave sap
            Cells(RowInicio, ColInicio + 7) = CStr(Vendedor(i, 7))
            
            RowInicio = RowInicio + 1
            Exit For
        End If
    Next i

End If


'crear copia de la hoja
'sh23 = "PARTICIPANTE(formato)"
Sheets(sh23).Copy

'sh17 = "Registro COMPRAS"
Windows(cuSh).Activate
Sheets(sh17).Select
SOLICITUD_PAGOS_TESORERIA.Hide
MsgBox "Formato PARTICIPANTE generado en archivo independiente"

End Sub

Private Sub CommandButton3_Click()
SOLICITUD_PAGOS_TESORERIA.Hide

End Sub



Private Sub CommandButton4_Click()

End Sub

Private Sub CommandButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
NAVEGAR_HOJAS.Show
End Sub

Private Sub OptionButton1_Click()
'seleccionar todos
If OptionButton1.value = True Then
Me.CheckBox1.value = True
Me.CheckBox2.value = True
Me.CheckBox3.value = True
Me.CheckBox4.value = True
Me.CheckBox5.value = True
Me.CheckBox6.value = True
Me.CheckBox7.value = True
Me.CheckBox8.value = True
Me.CheckBox9.value = True
Me.CheckBox10.value = True
Me.CheckBox11.value = True
Me.CheckBox12.value = True
Me.CheckBox13.value = True
Me.CheckBox14.value = True
Me.CheckBox15.value = True
Me.CheckBox16.value = True
Me.CheckBox17.value = True
Me.CheckBox18.value = True
Me.CheckBox19.value = True
Me.CheckBox20.value = True
End If

End Sub

Private Sub OptionButton2_Click()

'seleccionar todos
If OptionButton2.value = True Then
Me.CheckBox1.value = False
Me.CheckBox2.value = False
Me.CheckBox3.value = False
Me.CheckBox4.value = False
Me.CheckBox5.value = False
Me.CheckBox6.value = False
Me.CheckBox7.value = False
Me.CheckBox8.value = False
Me.CheckBox9.value = False
Me.CheckBox10.value = False
Me.CheckBox11.value = False
Me.CheckBox12.value = False
Me.CheckBox13.value = False
Me.CheckBox14.value = False
Me.CheckBox15.value = False
Me.CheckBox16.value = False
Me.CheckBox17.value = False
Me.CheckBox18.value = False
Me.CheckBox19.value = False
Me.CheckBox20.value = False
End If

End Sub

Private Sub UserForm_initialize()

Call VariablesGlobales

'claves de vendedores sh4 = "Info. Gral."
Sheets(sh4).Select
Dim punteroCatVendedor, punteroClaveVendedor, NumCat, NumCat0 As Long
Dim CatalogoVendedores() As String


punteroCatVendedor = 56
punteroClaveVendedor = 57

NumCat = Range(Cells(2, punteroCatVendedor), Cells(2, punteroCatVendedor).End(xlDown)).Count
NumCat0 = 2

ReDim CatalogoVendedores(NumCat, 3)

For i = 1 To NumCat

    CatalogoVendedores(i, 1) = Cells(NumCat0, punteroCatVendedor)
    CatalogoVendedores(i, 2) = Cells(NumCat0, punteroClaveVendedor)
    CatalogoVendedores(i, 3) = Cells(NumCat0, punteroClaveVendedor + 1)
    
    NumCat0 = NumCat0 + 1
    
Next i


indice = 4



'MsgBox "registro " & indice & Chr(10) & CatalogoVendedores(indice, 1) & Chr(10) & CatalogoVendedores(indice, 2) _
'        & Chr(10) & CatalogoVendedores(indice, 3)
        
        

Dim rowIni, rowFin, colIni, colFin, numReg As Long
Dim punteroVendedor, punteroEtvVendedor, punteroPlazaVendedor, punteroImporte, puntero2 As Integer
Dim Vendedor() As String


punteroVendedor = 9
punteroEtvVendedor = 10
punteroPlazaVendedor = 11
punteroImporte = 8
'
rowIni = 6
colIni = 1

Sheets(sh17).Select

colFin = Cells(rowIni - 1, colIni).End(xlToRight).Column

    If Cells(rowIni, colIni + 2) <> "" And Cells(rowIni + 1, colIni + 2) = "" And Cells(rowIni + 2, colIni + 2) = "" Then
    
        rowFin = 6
        numReg = 1
        
    ElseIf (Range(Cells(rowIni, colIni + 2), Cells(rowIni, colIni + 2).End(xlDown)).Count) > 1000 Then
        rowFin = 6
        numReg = 1
    Else
    
        rowFin = Range(Cells(rowIni, colIni + 2), Cells(rowIni, colIni + 2).End(xlDown)).Count + 5
        numReg = Range(Cells(rowIni, colIni + 2), Cells(rowIni, colIni + 2).End(xlDown)).Count
        
    End If


ReDim Vendedor(numReg, 6)

'Do While Cells(RowIni, 3) <> ""

For i = 1 To numReg
    
    'VENDEDOR
    Vendedor(i, 1) = Cells(rowIni, punteroVendedor)
    'ETV VENDEDOR
     Vendedor(i, 2) = Cells(rowIni, punteroEtvVendedor)
    'PLAZA VENDEDOR
     Vendedor(i, 3) = Cells(rowIni, punteroPlazaVendedor)
    'IMPORTE
     Vendedor(i, 4) = Cells(rowIni, punteroImporte)
     'IMPORTE
     Vendedor(i, 5) = Cells(rowIni, punteroVendedor) & " " & Cells(rowIni, punteroEtvVendedor) & " " & Cells(rowIni, punteroPlazaVendedor) & " " & Format(Cells(rowIni, punteroImporte), "$#,#0.00")
     'CLAVE BANCO
     
     For j = 1 To UBound(CatalogoVendedores)
     
        If Cells(rowIni, punteroVendedor) = CatalogoVendedores(j, 1) Then
           
           Vendedor(i, 6) = CatalogoVendedores(j, 2)
           Exit For
        
        Else
        End If
        
     Next j
     
    rowIni = rowIni + 1
    
Next i

    
    
'Loop

'indice = 4
'
'MsgBox "registro " & indice & Chr(10) & Vendedor(indice, 1) & Chr(10) & Vendedor(indice, 2) _
'        & Chr(10) & Vendedor(indice, 3) & Chr(10) & Vendedor(indice, 4) _
'        & Chr(10) & Vendedor(indice, 5) & Chr(10) & Vendedor(indice, 6)

Dim NumOptionBut, contador As Integer
'numero de botones de opci|fffd|n
NumOptionBut = 10
contador = 1

If contador <= UBound(Vendedor) Then
Me.CheckBox1.Caption = Vendedor(1, 5)
contador = contador + 1
Else
Me.CheckBox1.Visible = False
End If


If contador <= UBound(Vendedor) Then
Me.CheckBox2.Caption = Vendedor(2, 5)
contador = contador + 1
Else
Me.CheckBox2.Visible = False
End If

If contador <= UBound(Vendedor) Then
Me.CheckBox3.Caption = Vendedor(3, 5)
contador = contador + 1
Else
Me.CheckBox3.Visible = False
End If

If contador <= UBound(Vendedor) Then
Me.CheckBox4.Caption = Vendedor(4, 5)
contador = contador + 1
Else
Me.CheckBox4.Visible = False
End If


If contador <= UBound(Vendedor) Then
Me.CheckBox5.Caption = Vendedor(5, 5)
contador = contador + 1
Else
Me.CheckBox5.Visible = False
End If

If contador <= UBound(Vendedor) Then
Me.CheckBox6.Caption = Vendedor(6, 5)
contador = contador + 1
Else
Me.CheckBox6.Visible = False
End If

If contador <= UBound(Vendedor) Then
Me.CheckBox7.Caption = Vendedor(7, 5)
contador = contador + 1
Else
Me.CheckBox7.Visible = False
End If

If contador <= UBound(Vendedor) Then
Me.CheckBox8.Caption = Vendedor(8, 5)
contador = contador + 1
Else
Me.CheckBox8.Visible = False
End If

If contador <= UBound(Vendedor) Then
Me.CheckBox9.Caption = Vendedor(9, 5)
contador = contador + 1
Else
Me.CheckBox9.Visible = False
End If

If contador <= UBound(Vendedor) Then
Me.CheckBox10.Caption = Vendedor(10, 5)
contador = contador + 1
Else
Me.CheckBox10.Visible = False
End If


If contador <= UBound(Vendedor) Then
Me.CheckBox11.Caption = Vendedor(11, 5)
contador = contador + 1
Else
Me.CheckBox11.Visible = False
End If

If contador <= UBound(Vendedor) Then
Me.CheckBox12.Caption = Vendedor(12, 5)
contador = contador + 1
Else
Me.CheckBox12.Visible = False
End If

If contador <= UBound(Vendedor) Then
Me.CheckBox13.Caption = Vendedor(13, 5)
contador = contador + 1
Else
Me.CheckBox13.Visible = False
End If

If contador <= UBound(Vendedor) Then
Me.CheckBox14.Caption = Vendedor(14, 5)
contador = contador + 1
Else
Me.CheckBox14.Visible = False
End If

If contador <= UBound(Vendedor) Then
Me.CheckBox15.Caption = Vendedor(15, 5)
contador = contador + 1
Else
Me.CheckBox15.Visible = False
End If

If contador <= UBound(Vendedor) Then
Me.CheckBox16.Caption = Vendedor(16, 5)
contador = contador + 1
Else
Me.CheckBox16.Visible = False
End If

If contador <= UBound(Vendedor) Then
Me.CheckBox17.Caption = Vendedor(17, 5)
contador = contador + 1
Else
Me.CheckBox17.Visible = False
End If

If contador <= UBound(Vendedor) Then
Me.CheckBox18.Caption = Vendedor(18, 5)
contador = contador + 1
Else
Me.CheckBox18.Visible = False
End If

If contador <= UBound(Vendedor) Then
Me.CheckBox19.Caption = Vendedor(19, 5)
contador = contador + 1
Else
Me.CheckBox19.Visible = False
End If

If contador <= UBound(Vendedor) Then
Me.CheckBox20.Caption = Vendedor(20, 5)
contador = contador + 1
Else
Me.CheckBox20.Visible = False
End If

End Sub


Attribute VB_Name = "TRASPASOS_SALIDA_CAJA_GENERAL"
Attribute VB_Base = "0{0C59DD70-8EEF-488E-8DCB-15BFAE2B9419}{C3A26826-18C7-484A-8C87-5A93994B42DF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub CommandButton4_Click()

End Sub

Private Sub CommandButton4_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
NAVEGAR_HOJAS.Show
End Sub

Private Sub EtvText_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'9 = TAB, 10= NUEVA LINEA, 13 = ENTER, 37 = LEFT, 38 = UP, 39 = RIGHT, 40 = DOWN

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 39 Or KeyCode = 40 Then

Me.PlazaText.SetFocus

ElseIf KeyCode = 37 Or KeyCode = 38 Then

Me.billMil.SetFocus

End If

End Sub


Private Sub PlazaText_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'9 = TAB, 10= NUEVA LINEA, 13 = ENTER, 37 = LEFT, 38 = UP, 39 = RIGHT, 40 = DOWN

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 39 Or KeyCode = 40 Then

Me.SucursalOrigenText.SetFocus

ElseIf KeyCode = 37 Or KeyCode = 38 Then

Me.EtvText.SetFocus

End If

End Sub


Private Sub SucursalOrigenText_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'9 = TAB, 10= NUEVA LINEA, 13 = ENTER, 37 = LEFT, 38 = UP, 39 = RIGHT, 40 = DOWN

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 39 Or KeyCode = 40 Then

Me.EtvDestinoText.SetFocus

ElseIf KeyCode = 37 Or KeyCode = 38 Then

Me.PlazaText.SetFocus

End If

End Sub


Private Sub EtvDestinoText_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'9 = TAB, 10= NUEVA LINEA, 13 = ENTER, 37 = LEFT, 38 = UP, 39 = RIGHT, 40 = DOWN

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 39 Or KeyCode = 40 Then

Me.DestinoSalidaText.SetFocus

ElseIf KeyCode = 37 Or KeyCode = 38 Then

Me.SucursalOrigenText.SetFocus

End If

End Sub


Private Sub DestinoSalidaText_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'9 = TAB, 10= NUEVA LINEA, 13 = ENTER, 37 = LEFT, 38 = UP, 39 = RIGHT, 40 = DOWN

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 39 Or KeyCode = 40 Then

Me.SucursalDestinoText.SetFocus

ElseIf KeyCode = 37 Or KeyCode = 38 Then

Me.EtvDestinoText.SetFocus

End If

End Sub


Private Sub SucursalDestinoText_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'9 = TAB, 10= NUEVA LINEA, 13 = ENTER, 37 = LEFT, 38 = UP, 39 = RIGHT, 40 = DOWN

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 39 Or KeyCode = 40 Then

Me.OtroDestinoText.SetFocus

ElseIf KeyCode = 37 Or KeyCode = 38 Then

Me.DestinoSalidaText.SetFocus

End If

End Sub


Private Sub OtroDestinoText_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'9 = TAB, 10= NUEVA LINEA, 13 = ENTER, 37 = LEFT, 38 = UP, 39 = RIGHT, 40 = DOWN

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 39 Or KeyCode = 40 Then

Me.billMil.SetFocus

ElseIf KeyCode = 37 Or KeyCode = 38 Then

Me.SucursalDestinoText.SetFocus

End If

End Sub


Private Sub ImporteText_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'9 = TAB, 10= NUEVA LINEA, 13 = ENTER, 37 = LEFT, 38 = UP, 39 = RIGHT, 40 = DOWN

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 39 Or KeyCode = 40 Then

Me.EtvTrasladoText.SetFocus

ElseIf KeyCode = 37 Or KeyCode = 38 Then

Me.coin005.SetFocus

End If

End Sub


Private Sub EtvTrasladoText_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'9 = TAB, 10= NUEVA LINEA, 13 = ENTER, 37 = LEFT, 38 = UP, 39 = RIGHT, 40 = DOWN

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 39 Or KeyCode = 40 Then

Me.ComboDia.SetFocus

ElseIf KeyCode = 37 Or KeyCode = 38 Then

Me.ImporteText.SetFocus

End If

End Sub


Private Sub ComboDia_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'9 = TAB, 10= NUEVA LINEA, 13 = ENTER, 37 = LEFT, 38 = UP, 39 = RIGHT, 40 = DOWN

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 39 Or KeyCode = 40 Then

Me.ComboMeses.SetFocus

ElseIf KeyCode = 37 Or KeyCode = 38 Then

Me.EtvTrasladoText.SetFocus

End If

End Sub


Private Sub ComboMeses_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'9 = TAB, 10= NUEVA LINEA, 13 = ENTER, 37 = LEFT, 38 = UP, 39 = RIGHT, 40 = DOWN

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 39 Or KeyCode = 40 Then

Me.ComboAnio.SetFocus

ElseIf KeyCode = 37 Or KeyCode = 38 Then

Me.ComboDia.SetFocus

End If

End Sub


Private Sub ComboAnio_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
'9 = TAB, 10= NUEVA LINEA, 13 = ENTER, 37 = LEFT, 38 = UP, 39 = RIGHT, 40 = DOWN

If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 39 Or KeyCode = 40 Then

Me.CommandButton1.SetFocus

ElseIf KeyCode = 37 Or KeyCode = 38 Then

Me.ComboMeses.SetFocus

End If

End Sub





''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Sub OtroDestinoText_Change()

If Me.EtvDestinoText.value <> "" Or Me.SucursalDestinoText.value <> "" Then
MsgBox "Elija un solo destino"
Me.OtroDestinoText.value = ""

ElseIf Me.PlazaText.value <> "" And Me.OtroDestinoText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO CAJA-" & CStr(Me.OtroDestinoText.value)

ElseIf Me.SucursalOrigenText.value <> "" And Me.OtroDestinoText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO SUCURSAL-" & CStr(Me.OtroDestinoText.value)

ElseIf Me.SucursalOrigenText.value <> "" And Me.EtvDestinoText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO SUCURSAL-CAJA"

ElseIf Me.SucursalDestinoText.value <> "" And Me.SucursalOrigenText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO SUCURSAL-SUCURSAL"

ElseIf Me.EtvDestinoText.value <> "" And Me.PlazaText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO CAJA-CAJA"

ElseIf Me.PlazaText.value <> "" And Me.SucursalDestinoText.value <> "" Then
MsgBox "Ingresar en Dotaciones"
Me.TipoSalidaText.value = ""
Me.OtroDestinoText.value = ""

Else
Me.TipoSalidaText.value = ""

End If

End Sub

Private Sub SucursalDestinoText_Change()

If Me.EtvDestinoText.value <> "" Or Me.OtroDestinoText.value <> "" Then
MsgBox "Elija un solo destino"
Me.SucursalDestinoText.value = ""

ElseIf Me.PlazaText.value <> "" And Me.OtroDestinoText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO CAJA-" & CStr(Me.OtroDestinoText.value)

ElseIf Me.SucursalOrigenText.value <> "" And Me.OtroDestinoText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO SUCURSAL-" & CStr(Me.OtroDestinoText.value)

ElseIf Me.SucursalOrigenText.value <> "" And Me.EtvDestinoText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO SUCURSAL-CAJA"

ElseIf Me.SucursalDestinoText.value <> "" And Me.SucursalOrigenText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO SUCURSAL-SUCURSAL"

ElseIf Me.EtvDestinoText.value <> "" And Me.PlazaText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO CAJA-CAJA"

ElseIf Me.PlazaText.value <> "" And Me.SucursalDestinoText.value <> "" Then
MsgBox "Ingresar en Dotaciones"
Me.TipoSalidaText.value = ""
Me.SucursalDestinoText.value = ""

Else
Me.TipoSalidaText.value = ""

End If

End Sub

Private Sub SucursalOrigenText_Change()

If Me.PlazaText.value <> "" Or Me.EtvText.value <> "" Then
MsgBox "Elija un solo origen"
Me.SucursalOrigenText.value = ""

ElseIf Me.PlazaText.value <> "" And Me.OtroDestinoText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO CAJA-" & CStr(Me.OtroDestinoText.value)

ElseIf Me.SucursalOrigenText.value <> "" And Me.OtroDestinoText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO SUCURSAL-" & CStr(Me.OtroDestinoText.value)

ElseIf Me.SucursalOrigenText.value <> "" And Me.EtvDestinoText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO SUCURSAL-CAJA"

ElseIf Me.SucursalDestinoText.value <> "" And Me.SucursalOrigenText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO SUCURSAL-SUCURSAL"

ElseIf Me.EtvDestinoText.value <> "" And Me.PlazaText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO CAJA-CAJA"

ElseIf Me.PlazaText.value <> "" And Me.SucursalDestinoText.value <> "" Then
MsgBox "Ingresar en Dotaciones"
Me.TipoSalidaText.value = ""
Me.SucursalOrigenText.value = ""

Else
Me.TipoSalidaText.value = ""

End If

End Sub

Private Sub EtvDestinoText_Change()

If Me.SucursalDestinoText.value <> "" Or Me.OtroDestinoText.value <> "" Then
MsgBox "Elija un solo destino"
Me.EtvDestinoText.value = ""

ElseIf Me.PlazaText.value <> "" And Me.OtroDestinoText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO CAJA-" & CStr(Me.OtroDestinoText.value)

ElseIf Me.SucursalOrigenText.value <> "" And Me.OtroDestinoText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO SUCURSAL-" & CStr(Me.OtroDestinoText.value)

ElseIf Me.SucursalOrigenText.value <> "" And Me.EtvDestinoText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO SUCURSAL-CAJA"

ElseIf Me.SucursalDestinoText.value <> "" And Me.SucursalOrigenText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO SUCURSAL-SUCURSAL"

ElseIf Me.EtvDestinoText.value <> "" And Me.PlazaText.value <> "" Then

Me.TipoSalidaText.value = "TRASPASO CAJA-CAJA"

ElseIf Me.PlazaText.value <> "" And Me.SucursalDestinoText.value <> "" Then
MsgBox "Ingresar en Dotaciones"
Me.TipoSalidaText.value = ""
Me.EtvDestinoText.value = ""

Else
Me.TipoSalidaText.value = ""

End If

End Sub


Private Sub BotCapturaLibreTraspasos_Click()

Application.ScreenUpdating = False
Call VariablesGlobales

' valores de combos

ComboMeses.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")

ComboDia.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)

ComboAnio.List = Array(2018)

Dim X, Y As Integer
Dim celda As Range
Set celda = ActiveCell
X = celda.Row
Y = 1

With Me.EtvText
    .value = ""
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.PlazaText
    .value = ""
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With



'BILLETES
With Me.billMil
    .value = 0
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.bill500
    .value = 0
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.bill200
    .value = 0
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.bill100
    .value = 0
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.bill50
    .value = 0
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.bill20
    .value = 0
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin100
    .value = 0
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin20
    .value = 0
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin10
    .value = 0
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin5
    .value = 0
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin2
    .value = 0
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin1
    .value = 0
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin050
    .value = 0
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin020
    .value = 0
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin010
    .value = 0
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin005
    .value = 0
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With


'importe
With Me.ImporteText
    .value = FormatCurrency((Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005)))
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With


With Me.TotalBill
    .value = FormatCurrency((Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20)))
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With


With Me.TotalCoin
    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With


End Sub

Private Sub CommandButton2_Click()
TRASPASOS_SALIDA_CAJA_GENERAL.Hide

End Sub




Private Sub UserForm_initialize()
'valores al inicializar campos

Application.ScreenUpdating = False
Call VariablesGlobales

'Fecha del d|fffd|a
Dim DiaServicio, MesServicio, AnioServicio As Integer
Dim DiaPlan, MesPlan, AnioPlan As Integer
Dim fechaValorPlan, fechaValorServicio As Date
Dim MesServicioLabel, MesPlanLabel As String


'valor de la fecha

DiaServicio = Day(fechaOperacion)
MesServicio = Month(fechaOperacion)
AnioServicio = Year(fechaOperacion)

DiaPlan = Day(fechaOperacion)
MesPlan = Month(fechaOperacion)
AnioPlan = Year(fechaOperacion)

'nombre del mes

MesPlanLabel = NombresMesesLargo(Int(MesPlan))
MesServicioLabel = NombresMesesLargo(Int(MesServicio))


Sheets(sh1).Select

' valores de combos

ComboMeses.List = Array("ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE")

ComboDia.List = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31)

ComboAnio.List = Array(2019, 2020)

Dim X, Y As Integer
Dim celda As Range
Set celda = ActiveCell
X = celda.Row
Y = 1


With Me.EtvText
    .value = Cells(X, 3).value
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.PlazaText
    .value = Cells(X, 4).value
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

'fecha
'fecha plan
        With Me.ComboDia
            .value = DiaPlan
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.ComboMeses
            .value = MesPlanLabel
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        
        With Me.ComboAnio
            .value = AnioPlan
            .SetFocus
            .SelStart = 0
            .SelLength = Len(.Text)
        End With
        

'BILLETES
With Me.billMil
    .value = Cells(X, 114).value
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.bill500
    .value = Cells(X, 115).value
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.bill200
    .value = Cells(X, 116).value
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.bill100
    .value = Cells(X, 117).value
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.bill50
    .value = Cells(X, 118).value
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.bill20
    .value = Cells(X, 119).value
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin100
    .value = Cells(X, 121).value
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin20
    .value = Cells(X, 122).value
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin10
    .value = Cells(X, 123).value
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin5
    .value = Cells(X, 124).value
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin2
    .value = Cells(X, 125).value
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin1
    .value = Cells(X, 126).value
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin050
    .value = Cells(X, 127).value
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin020
    .value = Cells(X, 128).value
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin010
    .value = Cells(X, 129).value
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With

With Me.coin005
    .value = Cells(X, 130).value
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With


'importe
With Me.ImporteText
    .value = FormatCurrency((Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005)))
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With


With Me.TotalBill
    .value = FormatCurrency((Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20)))
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With


With Me.TotalCoin
    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
    .SetFocus
    .SelStart = 0
    .SelLength = Len(.Text)
End With


''''''combobox''''''''''''''''''

'Sheets(sh4).Select
'ultimaFila = Columns("Z:Z").Range("Z65536").End(xlUp).Row
'For cont = 2 To ultimaFila
'If Cells(cont, 1) <> "" Then
'DestinoSalidaText.AddItem (Cells(cont, 1))
'End If
'Next


Sheets(sh13).Select
'encabezados hoja Movimientos
Sheets(sh13).Select
Cells(Y, Y) = shMov1
Cells(Y, Y + 1) = shMov2
Cells(Y, Y + 2) = shMov3
Cells(Y, Y + 3) = shMov4
Cells(Y, Y + 4) = shMov5
Cells(Y, Y + 5) = shMov6
Cells(Y, Y + 6) = shMov7
Cells(Y, Y + 7) = shMov8
Cells(Y, Y + 8) = shMov9
Cells(Y, Y + 9) = shMov10
Cells(Y, Y + 10) = shMov11
Cells(Y, Y + 11) = shMov12
Cells(Y, Y + 12) = shMov13
Cells(Y, Y + 13) = shMov14
Cells(Y, Y + 14) = shMov15
Cells(Y, Y + 15) = shMov16
Cells(Y, Y + 16) = shMov17
Cells(Y, Y + 17) = shMov18
Cells(Y, Y + 18) = shMov19
Cells(Y, Y + 19) = shMov20
Cells(Y, Y + 20) = shMov21
Cells(Y, Y + 21) = shMov22
Cells(Y, Y + 22) = shMov23
Cells(Y, Y + 23) = shMov24
Cells(Y, Y + 24) = shMov25
Cells(Y, Y + 25) = shMov26
Cells(Y, Y + 26) = shMov27
Cells(Y, Y + 27) = shMov28
Cells(Y, Y + 28) = shMov29
Cells(Y, Y + 29) = shMov30
Cells(Y, Y + 30) = shMov31
Cells(Y, Y + 31) = shMov32
Cells(Y, Y + 32) = shMov33
Cells(Y, Y + 33) = shMov34
Cells(Y, Y + 34) = shMov35
Cells(Y, Y + 35) = shMov36
Cells(Y, Y + 36) = shMov37

Sheets(sh1).Select

Application.ScreenUpdating = True

End Sub

''Private Sub ImporteText_Change()
''
''With Me.ImporteText
''    .value = (Val(BillMil) + Val(Bill500) + Val(Bill200) + Val(Bill100) + Val(Bill50) + Val(Bill20) + Val(Coin100) + Val(Coin20) + Val(Coin10) + Val(Coin5) + Val(Coin2) + Val(Coin1) + Val(Coin050) + Val(Coin020))
''    .SetFocus
''    .SelStart = 0
''    .SelLength = Len(.Text)
''End With
''
''End Sub

Private Sub BillMil_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113

On Error Resume Next


If BotCapturaLibreTraspasos.value = False Then

        If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then
            
            
            If Me.billMil.value > 0 And Me.billMil.value <> "" Then
                        'validar si es divisible el registro capturado
                        If (Int(Me.billMil.value) \ 1000) * 1000 <> Val(Me.billMil.value) Then
                            Me.billMil.value = Cells(row0, X)
                            With Me.ImporteText
                                .value = (Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020))
                                .SetFocus
                                .SelStart = 0
                                .SelLength = Len(.Text)
                            End With
                            MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"
                        
                        'validar las existencias disponibles
                        ElseIf Val(Me.billMil.value) > Cells(row0, X) Then
                            Me.billMil.value = Cells(row0, X)
                            MsgBox "Importe insuficiente, se registra total existente"
                            
                        'registro que alcanza y es divisible
                        Else
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                           
                        End If
                    
            ElseIf Me.billMil.value = 0 Or Me.billMil.value = "" Then
                    Me.billMil.value = 0
            
            End If
            
        End If
        

Else
        
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With

End If

Me.billMil.SetFocus


End Sub

Private Sub Bill500_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113

On Error Resume Next

If BotCapturaLibreTraspasos.value = False Then


        If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then
            
            
            If Me.bill500.value > 0 And Me.bill500.value <> "" Then
                        'validar si es divisible el registro capturado
                        If (Int(Me.bill500.value) \ 500) * 500 <> Val(Me.bill500.value) Then
                            Me.bill500.value = Cells(row0, X + 1)
                            With Me.ImporteText
                                .value = (Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020))
                                .SetFocus
                                .SelStart = 0
                                .SelLength = Len(.Text)
                            End With
                            MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"
                        
                        'validar las existencias disponibles
                        ElseIf Val(Me.bill500.value) > Cells(row0, X + 1) Then
                            Me.bill500.value = Cells(row0, X + 1)
                            MsgBox "Importe insuficiente, se registra total existente"
                            
                        'registro que alcanza y es divisible
                        Else
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                           
                        End If
                    
            ElseIf Me.bill500.value = 0 Or Me.bill500.value = "" Then
                    Me.bill500.value = 0
            
            End If
            
        End If




Else
        
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With

End If

Me.bill500.SetFocus


End Sub

Private Sub Bill200_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113
On Error Resume Next

If BotCapturaLibreTraspasos.value = False Then

        If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then
            
            
            If Me.bill200.value > 0 And Me.bill200.value <> "" Then
                        'validar si es divisible el registro capturado
                        If (Int(Me.bill200.value) \ 200) * 200 <> Val(Me.bill200.value) Then
                            Me.bill200.value = Cells(row0, X + 2)
                            With Me.ImporteText
                                .value = (Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020))
                                .SetFocus
                                .SelStart = 0
                                .SelLength = Len(.Text)
                            End With
                            MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"
                        
                        'validar las existencias disponibles
                        ElseIf Val(Me.bill200.value) > Cells(row0, X + 2) Then
                            Me.bill200.value = Cells(row0, X + 2)
                            MsgBox "Importe insuficiente, se registra total existente"
                            
                        'registro que alcanza y es divisible
                        Else
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                           
                        End If
                    
            ElseIf Me.bill200.value = 0 Or Me.bill200.value = "" Then
                    Me.bill200.value = 0
            
            End If
            
        End If



Else
        
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With

End If

Me.bill200.SetFocus



End Sub

Private Sub Bill100_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113
On Error Resume Next
If BotCapturaLibreTraspasos.value = False Then

        If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then
            
            
            If Me.bill100.value > 0 And Me.bill100.value <> "" Then
                        'validar si es divisible el registro capturado
                        If (Int(Me.bill100.value) \ 100) * 100 <> Val(Me.bill100.value) Then
                            Me.bill100.value = Cells(row0, X + 3)
                            With Me.ImporteText
                                .value = (Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020))
                                .SetFocus
                                .SelStart = 0
                                .SelLength = Len(.Text)
                            End With
                            MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"
                        
                        'validar las existencias disponibles
                        ElseIf Val(Me.bill100.value) > Cells(row0, X + 3) Then
                            Me.bill100.value = Cells(row0, X + 3)
                            MsgBox "Importe insuficiente, se registra total existente"
                            
                        'registro que alcanza y es divisible
                        Else
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                           
                        End If
                    
            ElseIf Me.bill100.value = 0 Or Me.bill100.value = "" Then
                    Me.bill100.value = 0
            
            End If
            
        End If



Else
        
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With

End If

Me.bill100.SetFocus


End Sub


Private Sub Bill50_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113
On Error Resume Next
If BotCapturaLibreTraspasos.value = False Then

        If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then
            
            
            If Me.bill50.value > 0 And Me.bill50.value <> "" Then
                        'validar si es divisible el registro capturado
                        If (Int(Me.bill50.value) \ 50) * 50 <> Val(Me.bill50.value) Then
                            Me.bill50.value = Cells(row0, X + 4)
                            With Me.ImporteText
                                .value = (Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020))
                                .SetFocus
                                .SelStart = 0
                                .SelLength = Len(.Text)
                            End With
                            MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"
                        
                        'validar las existencias disponibles
                        ElseIf Val(Me.bill50.value) > Cells(row0, X + 4) Then
                            Me.bill50.value = Cells(row0, X + 4)
                            MsgBox "Importe insuficiente, se registra total existente"
                            
                        'registro que alcanza y es divisible
                        Else
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                           
                        End If
                    
            ElseIf Me.bill50.value = 0 Or Me.bill50.value = "" Then
                    Me.bill50.value = 0
            
            End If
            
        End If



Else
        
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With

End If
Me.bill50.SetFocus



End Sub
Private Sub Bill20_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113
On Error Resume Next
If BotCapturaLibreTraspasos.value = False Then

        If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then
            
            
            If Me.bill20.value > 0 And Me.bill20.value <> "" Then
                        'validar si es divisible el registro capturado
                        If (Int(Me.bill20.value) \ 20) * 20 <> Val(Me.bill20.value) Then
                            Me.bill20.value = Cells(row0, X + 5)
                            With Me.ImporteText
                                .value = (Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020))
                                .SetFocus
                                .SelStart = 0
                                .SelLength = Len(.Text)
                            End With
                            MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"
                        
                        'validar las existencias disponibles
                        ElseIf Val(Me.bill20.value) > Cells(row0, X + 5) Then
                            Me.bill20.value = Cells(row0, X + 5)
                            MsgBox "Importe insuficiente, se registra total existente"
                            
                        'registro que alcanza y es divisible
                        Else
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                           
                        End If
                    
            ElseIf Me.bill20.value = 0 Or Me.bill20.value = "" Then
                    Me.bill20.value = 0
            
            End If
            
        End If



Else
        
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With


End If

Me.bill20.SetFocus


End Sub



Private Sub Coin100_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113
On Error Resume Next
If BotCapturaLibreTraspasos.value = False Then

        If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then
            
            
            If Me.coin100.value > 0 And Me.coin100.value <> "" Then
                        'validar si es divisible el registro capturado
                        If (Int(Me.coin100.value) \ 100) * 100 <> Val(Me.coin100.value) Then
                            Me.coin100.value = Cells(row0, X + 7)
                            With Me.ImporteText
                                .value = (Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020))
                                .SetFocus
                                .SelStart = 0
                                .SelLength = Len(.Text)
                            End With
                            MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"
                        
                        'validar las existencias disponibles
                        ElseIf Val(Me.coin100.value) > Cells(row0, X + 7) Then
                            Me.coin100.value = Cells(row0, X + 7)
                            MsgBox "Importe insuficiente, se registra total existente"
                            
                        'registro que alcanza y es divisible
                        Else
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                           
                        End If
                    
            ElseIf Me.coin100.value = 0 Or Me.coin100.value = "" Then
                    Me.coin100.value = 0
            
            End If
            
        End If



Else
        
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With


End If

Me.coin100.SetFocus

End Sub

Private Sub Coin20_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113
On Error Resume Next
If BotCapturaLibreTraspasos.value = False Then

        If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then
            
            
            If Me.coin20.value > 0 And Me.coin20.value <> "" Then
                        'validar si es divisible el registro capturado
                        If (Int(Me.coin20.value) \ 20) * 20 <> Val(Me.coin20.value) Then
                            Me.coin20.value = Cells(row0, X + 8)
                            With Me.ImporteText
                                .value = (Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020))
                                .SetFocus
                                .SelStart = 0
                                .SelLength = Len(.Text)
                            End With
                            MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"
                        
                        'validar las existencias disponibles
                        ElseIf Val(Me.coin20.value) > Cells(row0, X + 8) Then
                            Me.coin20.value = Cells(row0, X + 8)
                            MsgBox "Importe insuficiente, se registra total existente"
                            
                        'registro que alcanza y es divisible
                        Else
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                           
                        End If
                    
            ElseIf Me.coin20.value = 0 Or Me.coin20.value = "" Then
                    Me.coin20.value = 0
            
            End If
            
        End If




Else
        
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With


End If

Me.coin20.SetFocus



End Sub

Private Sub Coin10_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113
On Error Resume Next
If BotCapturaLibreTraspasos.value = False Then

        If KeyCode = 13 Or KeyCode = 10 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then
            
            
            If Me.coin10.value > 0 And Me.coin10.value <> "" Then
                        'validar si es divisible el registro capturado
                        If (Int(Me.coin10.value) \ 10) * 10 <> Val(Me.coin10.value) Then
                            Me.coin10.value = Cells(row0, X + 9)
                            With Me.ImporteText
                                .value = (Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020))
                                .SetFocus
                                .SelStart = 0
                                .SelLength = Len(.Text)
                            End With
                            MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"
                        
                        'validar las existencias disponibles
                        ElseIf Val(Me.coin10.value) > Cells(row0, X + 9) Then
                            Me.coin10.value = Cells(row0, X + 9)
                            MsgBox "Importe insuficiente, se registra total existente"
                            
                        'registro que alcanza y es divisible
                        Else
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                           
                        End If
                    
            ElseIf Me.coin10.value = 0 Or Me.coin10.value = "" Then
                    Me.coin10.value = 0
            
            End If
            
        End If

Else
        
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With

End If

Me.coin10.SetFocus


End Sub

Private Sub Coin5_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113
On Error Resume Next
If BotCapturaLibreTraspasos.value = False Then

        If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then
            
            
            If Me.coin5.value > 0 And Me.coin5.value <> "" Then
                        'validar si es divisible el registro capturado
                        If (Int(Me.coin5.value) \ 5) * 5 <> Val(Me.coin5.value) Then
                            Me.coin5.value = Cells(row0, X + 10)
                            With Me.ImporteText
                                .value = (Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020))
                                .SetFocus
                                .SelStart = 0
                                .SelLength = Len(.Text)
                            End With
                            MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"
                        
                        'validar las existencias disponibles
                        ElseIf Val(Me.coin5.value) > Cells(row0, X + 10) Then
                            Me.coin5.value = Cells(row0, X + 10)
                            MsgBox "Importe insuficiente, se registra total existente"
                            
                        'registro que alcanza y es divisible
                        Else
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                           
                        End If
                    
            ElseIf Me.coin5.value = 0 Or Me.coin5.value = "" Then
                    Me.coin5.value = 0
            
            End If
            
        End If


Else
        
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With


End If

Me.coin5.SetFocus


End Sub

Private Sub Coin2_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113
On Error Resume Next
If BotCapturaLibreTraspasos.value = False Then

        If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then
            
            
            If Me.coin2.value > 0 And Me.coin2.value <> "" Then
                        'validar si es divisible el registro capturado
                        If (Int(Me.coin2.value) \ 2) * 2 <> Val(Me.coin2.value) Then
                            Me.coin2.value = Cells(row0, X + 11)
                            With Me.ImporteText
                                .value = (Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020))
                                .SetFocus
                                .SelStart = 0
                                .SelLength = Len(.Text)
                            End With
                            MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"
                        
                        'validar las existencias disponibles
                        ElseIf Val(Me.coin2.value) > Cells(row0, X + 11) Then
                            Me.coin2.value = Cells(row0, X + 11)
                            MsgBox "Importe insuficiente, se registra total existente"
                            
                        'registro que alcanza y es divisible
                        Else
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                           
                        End If
                    
            ElseIf Me.coin2.value = 0 Or Me.coin2.value = "" Then
                    Me.coin2.value = 0
            
            End If
            
        End If

Else
        
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With

End If

Me.coin2.SetFocus



End Sub


Private Sub Coin1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113
On Error Resume Next
If BotCapturaLibreTraspasos.value = False Then

        If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then
            
            
            If Me.coin1.value > 0 And Me.coin1.value <> "" Then
                        'validar si es divisible el registro capturado
                        If (Int(Me.coin1.value) \ 1) * 1 <> Val(Me.coin1.value) Then
                            Me.coin1.value = Cells(row0, X + 12)
                            With Me.ImporteText
                                .value = (Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin10) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020))
                                .SetFocus
                                .SelStart = 0
                                .SelLength = Len(.Text)
                            End With
                            MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"
                        
                        'validar las existencias disponibles
                        ElseIf Val(Me.coin1.value) > Cells(row0, X + 12) Then
                            Me.coin1.value = Cells(row0, X + 12)
                            MsgBox "Importe insuficiente, se registra total existente"
                            
                        'registro que alcanza y es divisible
                        Else
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                           
                        End If
                    
            ElseIf Me.coin1.value = 0 Or Me.coin1.value = "" Then
                    Me.coin1.value = 0
            
            End If
            
        End If

Else
        
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With

End If

Me.coin1.SetFocus


End Sub


Private Sub Coin050_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113
On Error Resume Next
If BotCapturaLibreTraspasos.value = False Then

        If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then
            
            
            If Me.coin050.value > 0 And Me.coin050.value <> "" Then
                        'validar si es divisible el registro capturado
                        If (Int(Me.coin050.value) / 0.5) * 0.5 <> Val(Me.coin050.value) Then
                            Me.coin050.value = Cells(row0, X + 13)
                            With Me.ImporteText
                                .value = (Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020))
                                .SetFocus
                                .SelStart = 0
                                .SelLength = Len(.Text)
                            End With
                            MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"
                        
                        'validar las existencias disponibles
                        ElseIf Val(Me.coin050.value) > Cells(row0, X + 13) Then
                            Me.coin050.value = Cells(row0, X + 13)
                            MsgBox "Importe insuficiente, se registra total existente"
                            
                        'registro que alcanza y es divisible
                        Else
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                           
                        End If
                    
            ElseIf Me.coin050.value = 0 Or Me.coin050.value = "" Then
                    Me.coin050.value = 0
            
            End If
            
        End If

Else
        
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With

End If

Me.coin050.SetFocus


End Sub


Private Sub Coin020_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113
On Error Resume Next
If BotCapturaLibreTraspasos.value = False Then

        If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then
            

            
            If Me.coin020.value > 0 And Me.coin020.value <> "" Then
                        'validar si es divisible el registro capturado
                        If (Int(Me.coin020.value) / 0.2) * 0.2 <> Val(Me.coin020.value) Then
                            Me.coin020.value = Cells(row0, X + 14)
                            With Me.ImporteText
                                .value = (Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020))
                                .SetFocus
                                .SelStart = 0
                                .SelLength = Len(.Text)
                            End With
                            MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"
                        
                        'validar las existencias disponibles
                        ElseIf Val(Me.coin020.value) > Cells(row0, X + 14) Then
                            Me.coin020.value = Cells(row0, X + 14)
                            MsgBox "Importe insuficiente, se registra total existente"
                            
                        'registro que alcanza y es divisible
                        Else
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                           
                        End If
                    
            ElseIf Me.coin020.value = 0 Or Me.coin020.value = "" Then
                    Me.coin020.value = 0
            
            End If
            
        End If


Else
        
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With


End If

Me.coin020.SetFocus


End Sub


Private Sub Coin010_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113
On Error Resume Next
If BotCapturaLibreTraspasos.value = False Then

        If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then
            
            
            If Me.coin010.value > 0 And Me.coin010.value <> "" Then
                        'validar si es divisible el registro capturado
                        If (Int(Me.coin010.value) / 0.1) * 0.1 <> Val(Me.coin010.value) Then
                            Me.coin010.value = Cells(row0, X + 15)
                            With Me.ImporteText
                                .value = (Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin010))
                                .SetFocus
                                .SelStart = 0
                                .SelLength = Len(.Text)
                            End With
                            MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"
                        
                        'validar las existencias disponibles
                        ElseIf Val(Me.coin010.value) > Cells(row0, X + 15) Then
                            Me.coin010.value = Cells(row0, X + 15)
                            MsgBox "Importe insuficiente, se registra total existente"
                            
                        'registro que alcanza y es divisible
                        Else
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                           
                        End If
                    
            ElseIf Me.coin010.value = 0 Or Me.coin010.value = "" Then
                    Me.coin010.value = 0
            
            End If
            
        End If

Else
        
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With

End If

Me.coin010.SetFocus


End Sub



Private Sub Coin005_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim X As Long
Dim row0 As Integer

row0 = ActiveCell.Row


'primer columna de existencias
X = 113
On Error Resume Next
If BotCapturaLibreTraspasos.value = False Then

        If KeyCode = 13 Or KeyCode = 5 Or KeyCode = 9 Or KeyCode = 37 Or KeyCode = 38 Or KeyCode = 39 Or KeyCode = 40 Then
            
            
            If Me.coin005.value > 0 And Me.coin005.value <> "" Then
                        'validar si es divisible el registro capturado
                        If (Int(Me.coin005.value) / 0.05) * 0.05 <> Val(Me.coin005.value) Then
                            Me.coin005.value = Cells(row0, X + 16)
                            With Me.ImporteText
                                .value = (Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin005))
                                .SetFocus
                                .SelStart = 0
                                .SelLength = Len(.Text)
                            End With
                            MsgBox "Importe no divisible entre denominaci|fffd|n, se registra total existente"
                        
                        'validar las existencias disponibles
                        ElseIf Val(Me.coin005.value) > Cells(row0, X + 16) Then
                            Me.coin005.value = Cells(row0, X + 16)
                            MsgBox "Importe insuficiente, se registra total existente"
                            
                        'registro que alcanza y es divisible
                        Else
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                           
                        End If
                    
            ElseIf Me.coin005.value = 0 Or Me.coin005.value = "" Then
                    Me.coin005.value = 0
            
            End If
            
        End If

Else
        
                            With Me.ImporteText
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalBill
                                    .value = FormatCurrency(Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With
                            
                            With Me.TotalCoin
                                    .value = FormatCurrency(Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005))
                                    .SetFocus
                                    .SelStart = 0
                                    .SelLength = Len(.Text)
                            End With

End If

Me.coin005.SetFocus


End Sub












''''''''''''''''''''''''''''''''BOTON DE ACEPTAR''''''''''''''''''''''''''''''''''''''''
Private Sub CommandButton1_Click()
    'bot|fffd|n de aceptar
Application.ScreenUpdating = False
Application.EnableEvents = False

If Me.TipoSalidaText.Text = "" Or Me.EtvTrasladoText.Text = "" Then
    MsgBox "REGISTRO INCOMPLETO: Falta informaci|fffd|n del destino de transferencia"
    Exit Sub
Else
        Application.ScreenUpdating = True

        Call VariablesGlobales
        
        'ARREGLO DE MESES
                    Dim ArrMes(2, 12)
                    
                    ArrMes(1, 1) = 1
                    ArrMes(1, 2) = 2
                    ArrMes(1, 3) = 3
                    ArrMes(1, 4) = 4
                    ArrMes(1, 5) = 5
                    ArrMes(1, 6) = 6
                    ArrMes(1, 7) = 7
                    ArrMes(1, 8) = 8
                    ArrMes(1, 9) = 9
                    ArrMes(1, 10) = 10
                    ArrMes(1, 11) = 11
                    ArrMes(1, 12) = 12
                    
                    ArrMes(2, 1) = Meses1
                    ArrMes(2, 2) = Meses2
                    ArrMes(2, 3) = Meses3
                    ArrMes(2, 4) = Meses4
                    ArrMes(2, 5) = Meses5
                    ArrMes(2, 6) = Meses6
                    ArrMes(2, 7) = Meses7
                    ArrMes(2, 8) = Meses8
                    ArrMes(2, 9) = Meses9
                    ArrMes(2, 10) = Meses10
                    ArrMes(2, 11) = Meses11
                    ArrMes(2, 12) = Meses12


        'IDENTIFICAR DESTINO
        Dim Salida As String
        
        If Me.EtvDestinoText.value <> "" Then
        Salida = "CAJA"
        
        ElseIf Me.SucursalDestinoText.value <> "" Then
        Salida = "SUCURSAL"
        
        ElseIf Me.OtroDestinoText.value = "DEM" Then
        Salida = "DEM"
        
        End If
        
        Dim FilaInicio, row0 As Long
        row0 = 1
        
        'fecha de recepci|fffd|n. Obtener los valores registrados
        
        DiaTraslado = Val(Me.ComboDia.Text)
        MesTraslado = Me.ComboMeses.Text
        AnioTraslado = Val(Me.ComboAnio.Text)
        
        'convertir el nombre del mes a n|fffd|mero
        For i = 1 To 12
            If MesTraslado = ArrMes(2, i) Then
            mesNumero = Val(ArrMes(1, i))
            End If
        Next
        
        'establecer la fecha de los 3 combobox
        FechaTraslado = Format((DiaTraslado & "/" & mesNumero & "/" & AnioTraslado), "d/m/yyyy")
        
        
        'evaluar la fecha de traslado
        If IsDate(FechaTraslado) = False Or IsDate(FechaValorGeneral) = False Then
        MsgBox "Fecha incorrecta"
        Exit Sub
        Else
        'crear carpetas de la fecha
        CARPETA_MES_TRASLADOS (FechaTraslado)
        CARPETA_DIA_TRASLADOS (FechaTraslado)
        End If
        
        'registrar en Movimientos
        Sheets(sh13).Select
        
        If Cells(2, 1) = "" And Cells(3, 1) = "" Then
        FilaInicio = 2
        Else
        FilaInicio = (Range(Cells(row0, 1), Cells(row0, 1).End(xlDown)).Count) + 1
        
        End If
        
        'VALOR CAPTURADO
        Cells(FilaInicio, 1) = TipoSalidaText

'ORIGEN
        If Me.SucursalOrigenText.value <> "" Then
        'ID PLAZA ORIGEN
        Cells(FilaInicio, 2) = Sheets(sh4).Cells(2, 42) & BuscarInfoPlaza(BuscarInfoSucursal(BuscarIdSucursal(CStr(Me.SucursalOrigenText.value)), 2), 1)
        'ETV
        Cells(FilaInicio, 3) = BuscarInfoSucursal(BuscarIdSucursal(CStr(Me.SucursalOrigenText.value)), 3)
        'PLAZA
        Cells(FilaInicio, 4) = BuscarInfoSucursal(BuscarIdSucursal(CStr(Me.SucursalOrigenText.value)), 2)
        
        ElseIf Me.PlazaText.value <> "" Then
        Cells(FilaInicio, 2) = Sheets(sh4).Cells(2, 42) & BuscarInfoPlaza(PlazaText.value, 1)
        Cells(FilaInicio, 3) = EtvText
        Cells(FilaInicio, 4) = PlazaText
        
        ElseIf Me.PlazaText.value = "" Or Me.SucursalOrigenText.value = "" Then
        Cells(FilaInicio, 2) = ""
        Cells(FilaInicio, 3) = ""
        Cells(FilaInicio, 4) = ""
        
        End If

'''''''''''

        'MsgBox "SucursalOrigenText " & SucursalOrigenText & Chr(10) & "id suc " & BuscarIdSucursal(CStr(SucursalOrigenText.value))

'SUCURSAL ORIGEN
        If Me.SucursalOrigenText.value = "" Then
        Cells(FilaInicio, 6) = ""
        Cells(FilaInicio, 5) = ""
        
        Else
        
        Cells(FilaInicio, 6) = SucursalOrigenText
        Cells(FilaInicio, 5) = BuscarIdSucursal(Me.SucursalOrigenText.value)
        End If
'''''''''''''

        'Cells(FilaInicio, 6) = SucursalOrigenText
        Cells(FilaInicio, 7) = "Salida"
        Cells(FilaInicio, 8) = Salida
               
'DESTINO SALIDA

        If Me.DestinoSalidaText.value = "" Then
        Cells(FilaInicio, 9) = ""
        Cells(FilaInicio, 10) = ""
        Cells(FilaInicio, 11) = ""
        
        'SI ES DEM Y ES CAJA
        
        ElseIf Me.DestinoSalidaText.value = "DEM" And Me.DestinoSalidaText.value <> "" Then
        'ID PLAZA DESTINO
        Cells(FilaInicio, 9) = Sheets(sh4).Cells(2, 42) & BuscarInfoPlaza(PlazaText.value, 1)
        'PLAZA DESTINO
        Cells(FilaInicio, 10) = PlazaText
        'ETV DESTINO
        Cells(FilaInicio, 11) = EtvText
        
        
        'SI ES DEM Y ES SUCURSAL
        
        ElseIf Me.DestinoSalidaText.value = "DEM" And Me.SucursalOrigenText.value <> "" Then
        'ID SUCURSAL
        Cells(FilaInicio, 9) = BuscarIdSucursal(CStr(Me.SucursalOrigenText.value))
        'PLAZA DESTINO
        Cells(FilaInicio, 10) = BuscarInfoSucursal(BuscarIdSucursal(CStr(Me.SucursalOrigenText.value)), 2)
        'ETV DESTINO
        Cells(FilaInicio, 11) = BuscarInfoSucursal(CStr(BuscarIdSucursal(Me.SucursalOrigenText.value)), 3)
        
        
        Else
        Cells(FilaInicio, 9) = Sheets(sh4).Cells(2, 42) & BuscarInfoPlaza(DestinoSalidaText.value, 1)
        Cells(FilaInicio, 10) = DestinoSalidaText
        Cells(FilaInicio, 11) = EtvDestinoText
        End If
        
''''''''''''''''

'SUCURSAL DESTINO

        If Me.SucursalDestinoText.value = "" Then
        Cells(FilaInicio, 12) = ""
        Cells(FilaInicio, 13) = ""
        
        Else
        Cells(FilaInicio, 12) = BuscarIdSucursal(CStr(Me.SucursalDestinoText.value))
        Cells(FilaInicio, 13) = SucursalDestinoText
        End If
''''''''''''

        Cells(FilaInicio, 14) = OtroDestinoText
        Cells(FilaInicio, 15) = EtvTrasladoText
        
        
        Cells(FilaInicio, 16) = Str(ImporteText)
        
'billetes
        Cells(FilaInicio, 17) = Str(TotalBill)
        Cells(FilaInicio, 18) = Val(billMil)
        Cells(FilaInicio, 19) = Val(bill500)
        Cells(FilaInicio, 20) = Val(bill200)
        Cells(FilaInicio, 21) = Val(bill100)
        Cells(FilaInicio, 22) = Val(bill50)
        Cells(FilaInicio, 23) = Val(bill20)
        Cells(FilaInicio, 24) = Str(TotalCoin)
        Cells(FilaInicio, 25) = Val(coin100)
        Cells(FilaInicio, 26) = Val(coin20)
        Cells(FilaInicio, 27) = Val(coin10)
        Cells(FilaInicio, 28) = Val(coin5)
        Cells(FilaInicio, 29) = Val(coin2)
        Cells(FilaInicio, 30) = Val(coin1)
        Cells(FilaInicio, 31) = Val(coin050)
        Cells(FilaInicio, 32) = Val(coin020)
        Cells(FilaInicio, 33) = Val(coin010)
        Cells(FilaInicio, 34) = Val(coin005)
        Cells(FilaInicio, 35) = Format((DiaTraslado & "/" & mesNumero & "/" & AnioTraslado), "m/d/yyyy")
        Cells(FilaInicio, 36) = UsuarioWindows
        Cells(FilaInicio, 37) = Format((Day(Date) & "/" & Month(Date) & "/" & Year(Date)), "m/d/yyyy")
     
     
     
     
''''''''''''''''''''''''''''''''SEGUNDO RENGL|fffd|N'''''''''''''''''''''''''''''''''''''''



If Salida <> "DEM" Then

        'VALOR CAPTURADO
        Cells(FilaInicio + 1, 1) = TipoSalidaText
        
'ORIGEN
        If Me.SucursalOrigenText.value <> "" Then
        Cells(FilaInicio + 1, 2) = Sheets(sh4).Cells(2, 42) & BuscarInfoPlaza(BuscarInfoSucursal(BuscarIdSucursal(CStr(Me.SucursalOrigenText.value)), 2), 1)
        Cells(FilaInicio + 1, 3) = BuscarInfoSucursal(BuscarIdSucursal(CStr(Me.SucursalOrigenText.value)), 3)
        Cells(FilaInicio + 1, 4) = BuscarInfoSucursal(BuscarIdSucursal(CStr(Me.SucursalOrigenText.value)), 2)
        
        ElseIf Me.PlazaText.value <> "" Then
        Cells(FilaInicio + 1, 2) = Sheets(sh4).Cells(2, 42) & BuscarInfoPlaza(PlazaText.value, 1)
        Cells(FilaInicio + 1, 3) = EtvText
        Cells(FilaInicio + 1, 4) = PlazaText
        
        ElseIf Me.PlazaText.value = "" Or Me.SucursalOrigenText.value = "" Then
        Cells(FilaInicio + 1, 2) = ""
        Cells(FilaInicio + 1, 3) = ""
        Cells(FilaInicio + 1, 4) = ""
        
        End If

'''''''''''
        
        'MsgBox "SucursalOrigenText " & SucursalOrigenText & Chr(10) & "id suc " & BuscarIdSucursal(CStr(SucursalOrigenText.value))
'SUCURSAL ORIGEN
        If Me.SucursalOrigenText.value = "" Then
        Cells(FilaInicio + 1, 6) = ""
        Cells(FilaInicio + 1, 5) = ""
        
        Else
        Cells(FilaInicio + 1, 6) = SucursalOrigenText
        Cells(FilaInicio + 1, 5) = BuscarIdSucursal(CStr(Me.SucursalOrigenText.value))
        End If
'''''''''''''

        'Cells(FilaInicio +1, 6) = SucursalOrigenText
        Cells(FilaInicio + 1, 7) = "Entrada"
        Cells(FilaInicio + 1, 8) = Salida
               
'DESTINO SALIDA

        If Me.DestinoSalidaText.value = "" Then
        Cells(FilaInicio + 1, 9) = ""
        Cells(FilaInicio + 1, 10) = ""
        Cells(FilaInicio + 1, 11) = ""
        
        'SI ES DEM Y ES CAJA
        ElseIf Me.DestinoSalidaText.value = "DEM" And Me.DestinoSalidaText.value <> "" Then
        'ID PLAZA DESTINO
        Cells(FilaInicio + 1, 9) = Sheets(sh4).Cells(2, 42) & BuscarInfoPlaza(PlazaText.value, 1)
        'PLAZA DESTINO
        Cells(FilaInicio + 1, 10) = PlazaText
        'ETV DESTINO
        Cells(FilaInicio + 1, 11) = EtvText
        
        'SI ES DEM Y ES SUCURSAL
        ElseIf Me.DestinoSalidaText.value = "DEM" And Me.SucursalOrigenText.value <> "" Then
        'ID SUCURSAL
        Cells(FilaInicio + 1, 9) = BuscarIdSucursal(Me.SucursalOrigenText.value)
        'PLAZA DESTINO
        Cells(FilaInicio + 1, 10) = BuscarInfoSucursal(BuscarIdSucursal(Me.SucursalOrigenText.value), 2)
        'ETV DESTINO
        Cells(FilaInicio + 1, 11) = BuscarInfoSucursal(BuscarIdSucursal(Me.SucursalOrigenText.value), 3)
        
        Else
        Cells(FilaInicio + 1, 9) = Sheets(sh4).Cells(2, 42) & BuscarInfoPlaza(DestinoSalidaText.value, 1)
        Cells(FilaInicio + 1, 10) = DestinoSalidaText
        Cells(FilaInicio + 1, 11) = EtvDestinoText
        End If
        
''''''''''''''''

'SUCURSAL DESTINO

        If Me.SucursalDestinoText.value = "" Then
        Cells(FilaInicio + 1, 12) = ""
        Cells(FilaInicio + 1, 13) = ""
        
        Else
        Cells(FilaInicio + 1, 12) = BuscarIdSucursal(CStr(Me.SucursalDestinoText.value))
        Cells(FilaInicio + 1, 13) = SucursalDestinoText
        End If
''''''''''''

        Cells(FilaInicio + 1, 14) = OtroDestinoText
        Cells(FilaInicio + 1, 15) = EtvTrasladoText
        Cells(FilaInicio + 1, 16) = Str(ImporteText)
        Cells(FilaInicio + 1, 17) = Str(TotalBill)
        Cells(FilaInicio + 1, 18) = Val(billMil)
        Cells(FilaInicio + 1, 19) = Val(bill500)
        Cells(FilaInicio + 1, 20) = Val(bill200)
        Cells(FilaInicio + 1, 21) = Val(bill100)
        Cells(FilaInicio + 1, 22) = Val(bill50)
        Cells(FilaInicio + 1, 23) = Val(bill20)
        Cells(FilaInicio + 1, 24) = Str(TotalCoin)
        Cells(FilaInicio + 1, 25) = Val(coin100)
        Cells(FilaInicio + 1, 26) = Val(coin20)
        Cells(FilaInicio + 1, 27) = Val(coin10)
        Cells(FilaInicio + 1, 28) = Val(coin5)
        Cells(FilaInicio + 1, 29) = Val(coin2)
        Cells(FilaInicio + 1, 30) = Val(coin1)
        Cells(FilaInicio + 1, 31) = Val(coin050)
        Cells(FilaInicio + 1, 32) = Val(coin020)
        Cells(FilaInicio + 1, 33) = Val(coin010)
        Cells(FilaInicio + 1, 34) = Val(coin005)
        Cells(FilaInicio + 1, 35) = Format((DiaTraslado & "/" & mesNumero & "/" & AnioTraslado), "m/d/yyyy")
        Cells(FilaInicio + 1, 36) = UsuarioWindows
        Cells(FilaInicio + 1, 37) = Format((Day(Date) & "/" & Month(Date) & "/" & Year(Date)), "m/d/yyyy")
End If

''''''''''''''''''''''''''''''''SERVICIOS FACTURACI|fffd|N'''''''''''''''''''''''''''''''''''''''
        'Agregar a servicios
        'sh22 = "ProgramacionServicios"
            Sheets(sh22).Select
            
            NRegistros = Sheets(sh22).Range("a3", Range("a3").End(xlDown)).Count
            
                            'evaluar si hay informaci|fffd|n en registro
                If NRegistros > 10000 And Range("a3") = "" Then
                X = 3
                
                ElseIf Range("a3") <> "" And Range("a4") = "" And Range("a5") = "" Then
                        
                X = 4
                
                ElseIf NRegistros < 10000 Then
                        
                X = NRegistros + 3
                
                End If
                
                
            Cells(X, 1) = "PROGRAMADO"
            
            If Me.PlazaText.value = "" Then
            'idplaza
            Cells(X, 2) = ""
            'etv
            Cells(X, 3) = ""
            'plaza
            Cells(X, 4) = ""
            
            Else
            'idplaza
            Cells(X, 2) = Sheets(sh4).Cells(2, 42) & BuscarInfoPlaza(PlazaText.value, 1)
            'etv
            Cells(X, 3) = Trim(EtvText)
            'plaza
            Cells(X, 4) = Trim(PlazaText)
            
            End If
            
'SUCURSAL
    
            If Me.SucursalOrigenText.value = "" Then
            'id sucursal
            Cells(X, 5) = ""
            'sucursal
            Cells(X, 6) = ""
            
            Else
            'idplaza
            Cells(X, 2) = Sheets(sh4).Cells(2, 42) & BuscarInfoPlaza(BuscarInfoSucursal(CStr(Me.SucursalOrigenText.value), 2), 1)
            'etv
            Cells(X, 3) = BuscarInfoSucursal(CStr(Me.SucursalOrigenText.value), 3)
            'plaza
            Cells(X, 4) = BuscarInfoSucursal(CStr(Me.SucursalOrigenText.value), 2)
            'id sucursal
            Cells(X, 5) = BuscarIdSucursal(CStr(Me.SucursalOrigenText.value))
            'sucursal
            Cells(X, 6) = SucursalOrigenText
            
            End If
            
''''''''''
            'etv servicio
            Cells(X, 7) = Trim(EtvTrasladoText)
            'fecha planeacion
            Cells(X, 8) = Format((Day(Date) & "/" & Month(Date) & "/" & Year(Date)), "m/d/yyyy")
            'fecha servicio
            Cells(X, 9) = Format((DiaTraslado & "/" & mesNumero & "/" & AnioTraslado), "m/d/yyyy")
            'tipo servicio
            Cells(X, 10) = TipoSalidaText
            
            '''''''''''''CONCENTRACION''''''''''''''''
            
            'destino concentracion
            Cells(X, 11) = Salida
            
            
'SI ES DESTINO= DEM Y ES ORIGEN= CAJA
        If Salida = "DEM" And Me.PlazaText.value <> "" Then
        'ID PLAZA DESTINO
        Cells(X, 14) = Sheets(sh4).Cells(2, 42) & BuscarInfoPlaza(PlazaText.value, 1)
        'PLAZA DESTINO
        Cells(X, 15) = Trim(PlazaText)
        'ETV DESTINO
         Cells(X, 16) = Trim(EtvText)
        'ID SUCURSAL DESTINO
        Cells(X, 12) = ""
        'SUCURSAL DESTINO
        Cells(X, 13) = ""
            
'SI ES DESTINO= DEM Y ES ORIGEN= SUCURSAL

        ElseIf Salida = "DEM" And Me.SucursalOrigenText.value <> "" Then
        'ID SUCURSAL
         Cells(X, 12) = BuscarIdSucursal(Me.SucursalOrigenText.value)
        'SUCURSAL
        Cells(X, 13) = SucursalOrigenText
        'ID PLAZA DESTINO
        Cells(X, 14) = Sheets(sh4).Cells(2, 42) & BuscarInfoPlaza(BuscarInfoSucursal(BuscarIdSucursal(Me.SucursalOrigenText.value), 2), 1)
        'PLAZA DESTINO
        Cells(X, 15) = BuscarInfoSucursal(BuscarIdSucursal(Me.SucursalOrigenText.value), 2)
        'ETV DESTINO
         Cells(X, 16) = BuscarInfoSucursal(BuscarIdSucursal(Me.SucursalOrigenText.value), 3)
        
 'SI ES DESTINO= SUCURSAL Y ES ORIGEN= SUCURSAL

        ElseIf Salida = "SUCURSAL" And Me.SucursalDestinoText.value <> "" Then
        'ID SUCURSAL
         Cells(X, 12) = BuscarIdSucursal(Me.SucursalDestinoText.value)
        'SUCURSAL
        Cells(X, 13) = SucursalDestinoText
        'ID PLAZA DESTINO
        Cells(X, 14) = Sheets(sh4).Cells(2, 42) & BuscarInfoPlaza(BuscarInfoSucursal(BuscarIdSucursal(Me.SucursalDestinoText.value), 2), 1)
        'PLAZA DESTINO
        Cells(X, 15) = BuscarInfoSucursal(BuscarIdSucursal(Me.SucursalDestinoText.value), 2)
        'ETV DESTINO
         Cells(X, 16) = BuscarInfoSucursal(BuscarIdSucursal(Me.SucursalDestinoText.value), 3)
               
        
        Else
        
        
            'ID SUCURSAL DESTINO
            Cells(X, 12) = BuscarIdSucursal(CStr(Me.SucursalDestinoText.value))
            'SUCURSAL DESTINO
            Cells(X, 13) = SucursalDestinoText
            'ID CAJA DESTINO
            Cells(X, 14) = Sheets(sh4).Cells(2, 42) & BuscarInfoPlaza(DestinoSalidaText.value, 1)
            'CAJA DESTINO
            Cells(X, 15) = Trim(DestinoSalidaText)
            
            'ETV DESTINO
            Cells(X, 16) = Trim(EtvDestinoText)
            
        End If
           
'''''''''
           
            ''''''''''''''DENOMINACIONES'''''''''''''''''''
            'IMPORTE SERVICIO
            Cells(X, 17) = Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + _
        Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005)
            'BILL 1000
            Cells(X, 18) = Val(billMil)
            'BILL 500
            Cells(X, 19) = Val(bill500)
            'BILL 200
            Cells(X, 20) = Val(bill200)
            'BILL 100
            Cells(X, 21) = Val(bill100)
            'BILL 50
            Cells(X, 22) = Val(bill50)
            'BILL 20
            Cells(X, 23) = Val(bill20)
            'COIN TOTAL
            Cells(X, 24) = Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) _
                        + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005)
            'COIN 100
            Cells(X, 25) = Val(coin100)
            'COIN 20
            Cells(X, 26) = Val(coin20)
            'COIN 10
            Cells(X, 27) = Val(coin10)
            'COIN 5
            Cells(X, 28) = Val(coin5)
            'COIN 2
            Cells(X, 29) = Val(coin2)
            'COIN 1
            Cells(X, 30) = Val(coin1)
            'COIN .5
            Cells(X, 31) = Val(coin050)
            'COIN .2
            Cells(X, 32) = Val(coin020)
            'COIN .1
            Cells(X, 33) = Val(coin010)
            'COIN .05
            Cells(X, 34) = Val(coin005)
      
      
''''''''''''''''''''''''''''''''DEM'''''''''''''''''''''''''''''''''''''''
        'Agregar a servicios
        'sh22 = "ProgramacionServicios"
            Sheets(sh25).Select
            
            NRegistros = Sheets(sh25).Range("a3", Range("a3").End(xlDown)).Count
            
                            'evaluar si hay informaci|fffd|n en registro
                If NRegistros > 10000 And Range("a3") = "" Then
                w = 3
                
                ElseIf Range("a3") <> "" And Range("a4") = "" And Range("a5") = "" Then
                        
                w = 4
                
                ElseIf NRegistros < 10000 Then
                        
                w = NRegistros + 3
                
                End If
                
If Salida = "DEM" Then
                
            Cells(w, 1) = "NO ACREDITADO"
            
            If Me.PlazaText.value = "" Then
            'idplaza
            Cells(w, 2) = ""
            'etv
            Cells(w, 3) = ""
            'plaza
            Cells(w, 4) = ""
            
            Else
            'idplaza
            Cells(w, 2) = Sheets(sh4).Cells(2, 42) & BuscarInfoPlaza(PlazaText.value, 1)
            'etv
            Cells(w, 3) = Trim(EtvText)
            'plaza
            Cells(w, 4) = Trim(PlazaText)
            
            End If
            
'SUCURSAL
    
            If Me.SucursalOrigenText.value = "" Then
            'id sucursal
            Cells(w, 5) = ""
            'sucursal
            Cells(w, 6) = ""
            
            Else
            'idplaza
            Cells(w, 2) = Sheets(sh4).Cells(2, 42) & BuscarInfoPlaza(BuscarInfoSucursal(CStr(Me.SucursalOrigenText.value), 2), 1)
            'etv
            Cells(w, 3) = BuscarInfoSucursal(CStr(Me.SucursalOrigenText.value), 3)
            'plaza
            Cells(w, 4) = BuscarInfoSucursal(CStr(Me.SucursalOrigenText.value), 2)
            'id sucursal
            Cells(w, 5) = BuscarIdSucursal(CStr(Me.SucursalOrigenText.value))
            'sucursal
            Cells(w, 6) = SucursalOrigenText
            
            End If
            
''''''''''
            'etv servicio
            Cells(w, 7) = Trim(EtvTrasladoText)
            'fecha planeacion
            Cells(w, 8) = Format((Day(Date) & "/" & Month(Date) & "/" & Year(Date)), "m/d/yyyy")
            'fecha servicio
            Cells(w, 9) = Format((DiaTraslado & "/" & mesNumero & "/" & AnioTraslado), "m/d/yyyy")
            'tipo servicio
            Cells(w, 10) = TipoSalidaText
            
            '''''''''''''CONCENTRACION''''''''''''''''
            
            'destino concentracion
            Cells(w, 11) = Salida
                  
                  
              ''''''''''''''DENOMINACIONES'''''''''''''''''''
            'IMPORTE SERVICIO
            Cells(w, 12) = Val(billMil) + Val(bill500) + Val(bill200) + Val(bill100) + Val(bill50) + Val(bill20) + _
        Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005)
            'BILL 1000
            Cells(w, 13) = Val(billMil)
            'BILL 500
            Cells(w, 14) = Val(bill500)
            'BILL 200
            Cells(w, 15) = Val(bill200)
            'BILL 100
            Cells(w, 16) = Val(bill100)
            'BILL 50
            Cells(w, 17) = Val(bill50)
            'BILL 20
            Cells(w, 18) = Val(bill20)
            'COIN TOTAL
            Cells(w, 19) = Val(coin100) + Val(coin20) + Val(coin10) + Val(coin5) + Val(coin2) + Val(coin1) _
                        + Val(coin050) + Val(coin020) + Val(coin010) + Val(coin005)
            'COIN 100
            Cells(w, 20) = Val(coin100)
            'COIN 20
            Cells(w, 21) = Val(coin20)
            'COIN 10
            Cells(w, 22) = Val(coin10)
            'COIN 5
            Cells(w, 23) = Val(coin5)
            'COIN 2
            Cells(w, 24) = Val(coin2)
            'COIN 1
            Cells(w, 25) = Val(coin1)
            'COIN .5
            Cells(w, 26) = Val(coin050)
            'COIN .2
            Cells(w, 27) = Val(coin020)
            'COIN .1
            Cells(w, 28) = Val(coin010)
            'COIN .05
            Cells(w, 29) = Val(coin005)
End If
                  
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''






        'limpiar campos de captura
        TipoSalidaText = ""
        PlazaDestinoText = ""
        EtvDestinoText = ""
        ImporteText = ""
        
        Sheets(sh1).Select
        
        
        Unload TRASPASOS_SALIDA_CAJA_GENERAL

        Application.ScreenUpdating = False
        
        ActiveCell.Select
        
        MsgBox "Registro capturado"

End If

Application.Calculation = xlAutomatic
Application.ScreenUpdating = True
Application.EnableEvents = True

End Sub



''''''''''''''''''''''''''menus dependientes'''''''''''''''''''''''''''''''''''


'Private Sub EtvDestinoText_Change()
'
'EtvDestinoText.Clear
'
'Sheets(sh4).Select
'columna1 = DestinoSalidaText.ListIndex + 1
'Cells(2, columna1).Select
'ultimaFila = Columns("Y:Y").Range("Y65536").End(xlUp).Row
'For cont = 2 To ultimaFila
'If Cells(cont, columna1) <> |fffd||fffd| Then
'EtvDestinoText.AddItem (Cells(cont, columna1))
'End If
'Next
'
'
'End Sub



Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' Zr*'z
' *'r)bi
' <m>V
' zw"hKb
' Zr*'z
' Zr*'z
' Zr*'z
' +-xz#j
' n)bu
' Zr*'z
' Zr*'z
' 'Zu+
' n)bu
' *'r)bi
' "x+z
' r*'z
' "r*'N
' "r*'N
' "r*'N
' Zr*'z
' v+Zr*'
' v+Zr*'
' "r*'
' v+Zr*'
' Zr*'
' '"jW
' )eh*'wUZ
' )eh*'weZ
' Zr*'z
' RjWh

INQUEST-PP=macro
