Attribute VB_Name = "HideTitleBar"
Option Explicit
Option Private Module

Public Const GWL_STYLE = -16
Public Const WS_CAPTION = &HC00000
#If VBA7 Then
    Public Declare PtrSafe Function GetWindowLong _
                           Lib "user32" Alias "GetWindowLongA" ( _
                           ByVal hWnd As Long, _
                           ByVal nIndex As Long) As Long
                           
    Public Declare PtrSafe Function SetWindowLong _
                           Lib "user32" Alias "SetWindowLongA" ( _
                           ByVal hWnd As Long, _
                           ByVal nIndex As Long, _
                           ByVal dwNewLong As Long) As Long
    Public Declare PtrSafe Function DrawMenuBar _
                           Lib "user32" ( _
                           ByVal hWnd As Long) As Long
    Public Declare PtrSafe Function FindWindowA _
                           Lib "user32" (ByVal lpClassName As String, _
                           ByVal lpWindowName As String) As Long
#Else
    Public Declare Function GetWindowLong _
                           Lib "user32" Alias "GetWindowLongA" ( _
                           ByVal hWnd As Long, _
                           ByVal nIndex As Long) As Long
    Public Declare Function SetWindowLong _
                           Lib "user32" Alias "SetWindowLongA" ( _
                           ByVal hWnd As Long, _
                           ByVal nIndex As Long, _
                           ByVal dwNewLong As Long) As Long
    Public Declare Function DrawMenuBar _
                           Lib "user32" ( _
                           ByVal hWnd As Long) As Long
    Public Declare Function FindWindowA _
                           Lib "user32" (ByVal lpClassName As String, _
                           ByVal lpWindowName As String) As Long
#End If
Sub HideTitleBar(frm As Object)
    Dim lngWindow As Long
    Dim lFrmHdl As Long
    lFrmHdl = FindWindowA(vbNullString, frm.Caption)
    lngWindow = GetWindowLong(lFrmHdl, GWL_STYLE)
    lngWindow = lngWindow And (Not WS_CAPTION)
    Call SetWindowLong(lFrmHdl, GWL_STYLE, lngWindow)
    Call DrawMenuBar(lFrmHdl)
End Sub
'PLACE IN YOUR USERFORM CODE
Private Sub UserForm_Initialize()
#If IsMac = False Then
    'hide the title bar if you're working on a windows machine. Otherwise, just display it as you normally would
    Me.Height = Me.Height - 10
    HideTitleBar.HideTitleBar Me
#End If
End Sub

Attribute VB_Name = "Module1"
Public bCancel, bstop As Boolean
Public nMaxCalendarRows, nMaxGamesPerTeam, nClubs, nTotFixtures As Integer
Public spi_temp(20, 5) As Single
Public TeamName(20) As String
Public nMatchwk(380) As Integer
Public matchTime(380) As String
Public GA_Temp(380), GF_Temp(380) As Integer
Public iHome(380), iAway(380) As Integer
Public HomeTeam(380), AwayTeam(380) As String
Public matchDate(380) As Date
Public status(380) As String
Public newspiWeek As Integer
Public TimeZone1 As String
Public timecol1 As Integer
Public Winpct(380), DrawPct(380), LossPct(380) As Single
Public spiGF(380), spiGA(380) As Single
Public HomeVenue(380)
Sub ReadData(bFull, bUpdateCal, nFixtures)
Dim shtDashBoard, shtSPI, shtFixture, shtFixtureTmp As String
Dim state, state_old As String

    shtDashBoard = "Dashboard"
    shtSPI = "SPI"
    shtFixture = "fixtures"
    shtFixtureTmp = "fixtures_tmp"
    shtCal = "Fixtures_by_Date"
    
    Sheets(shtFixture).Unprotect ("pineapple")

'    Sheets(shtFixtureTmp).Connections("Query - output_PL").Refresh

    nClubs = 20
    
    state_old = "Same"
    
'   38 games per team when nClubs=20
    nMaxGamesPerTeam = (nClubs - 1) * 2
    
'   380 total fixtures when nClubs=20
    nTotFixtures = nClubs * (nClubs - 1)
    
'   Max rows in Fixtures by Date Tab
    nMaxCalendarRows = Sheets(shtCal).Cells(1, 1)

    nFixtures = nTotFixtures + 1
            
    If bFull Then
    
        TimeZone1 = Sheets(shtDashBoard).Cells(1, 4)
    
        If TimeZone1 = "UK" Then
            timecol1 = 4
        ElseIf TimeZone1 = "EST" Then
            timecol1 = 3
        ElseIf TimeZone1 = "CST" Then
            timecol1 = 5
        ElseIf TimeZone1 = "MST" Then
            timecol1 = 6
        ElseIf TimeZone1 = "PST" Then
            timecol1 = 7
        Else
            timecol1 = 4
        End If
        For I = 1 To nClubs
            spi_temp(I, 1) = Sheets(shtSPI).Cells(I + 1, 3)
            spi_temp(I, 2) = Sheets(shtSPI).Cells(I + 1, 4)
            spi_temp(I, 3) = Sheets(shtSPI).Cells(I + 1, 6)
            spi_temp(I, 4) = Sheets(shtSPI).Cells(I + 1, 7)
            spi_temp(I, 5) = Sheets(shtSPI).Cells(I + 1, 5)
            TeamName(I) = Sheets(shtSPI).Cells(I + 1, 2)
        Next I
        
        newspiWeek = Sheets(shtSPI).Cells(22, 7)
        
        For I = 1 To nTotFixtures
            nMatchwk(I) = Sheets(shtFixture).Cells(I + 1, 1)
            matchDate(I) = Sheets(shtFixture).Cells(I + 1, 2)
            matchTime(I) = TimeValue(Sheets(shtFixture).Cells(I + 1, timecol1).Text)
        
            HomeVenue(I) = Sheets(shtFixture).Cells(I + 1, 9)
            HomeTeam(I) = Sheets(shtFixture).Cells(I + 1, 10)
            AwayTeam(I) = Sheets(shtFixture).Cells(I + 1, 13)
            
            
            If IsEmpty(Sheets(shtFixture).Cells(I + 1, 11)) And IsEmpty(Sheets(shtFixture).Cells(I + 1, 12)) Then
                GF_Temp(I) = -1
                GA_Temp(I) = -1
            Else
                GF_Temp(I) = Sheets(shtFixture).Cells(I + 1, 11)
                GA_Temp(I) = Sheets(shtFixture).Cells(I + 1, 12)
            End If
                status(I) = Sheets(shtFixture).Cells(I + 1, 16)
                
                state = Sheets(shtFixture).Cells(I + 1, 17)
                
                If state_old = "Same" And state = "Changed" Then nFixtures = I
                
                state_old = state
                
            
            For k = 1 To nClubs
                If HomeTeam(I) = TeamName(k) Then
                    iHome(I) = k
                    Exit For
                End If
            Next k
            
            For k = 1 To nClubs
                If AwayTeam(I) = TeamName(k) Then
                    iAway(I) = k
                    Exit For
                End If
            Next k
            
            If bUpdateCal Then
                spiGF(I) = Sheets(shtFixture).Cells(I + 1, 20)
                spiGA(I) = Sheets(shtFixture).Cells(I + 1, 21)
            '
            '    Sheets(shtFixture).Cells(I + 1, 47) = spiGF(I)
            '    Sheets(shtFixture).Cells(I + 1, 48) = spiGA(I)
            '
            '    Sheets(shtFixture).Cells(I + 1, 49) = RestDaysHome
            '    Sheets(shtFixture).Cells(I + 1, 50) = RestDaysAway
            '
            '    Sheets(shtFixture).Cells(I + 1, 51) = spi_off_ave
            '    Sheets(shtFixture).Cells(I + 1, 52) = spi_def_ave
            '
            '    Sheets(shtFixture).Cells(I + 1, 43) = spi_off(iHome)
            '    Sheets(shtFixture).Cells(I + 1, 44) = spi_def(iHome)
            '    Sheets(shtFixture).Cells(I + 1, 45) = spi_off(iAway)
            '    Sheets(shtFixture).Cells(I + 1, 46) = spi_def(iAway)
        
                Winpct(I) = Sheets(shtFixture).Cells(I + 1, 22)
                DrawPct(I) = Sheets(shtFixture).Cells(I + 1, 23)
                LossPct(I) = Sheets(shtFixture).Cells(I + 1, 24)
            End If
        
        Next I
    End If


End Sub

Sub Run_MC()

Dim bLogo As Boolean
Dim shtSPI, shtFixture As String

    shtSPI = "SPI"
    shtFixture = "fixtures"

    bLogo = True
    
    Call ReadData(True, False, nFixtures)

    
'    Call ModelLeague_MC2(bLogo)
    Call ModelLeague_MC3(bLogo)
    'Call Filter_Team_Manual(bLogo)
    
End Sub
Sub RunAll_no_Prediction()
Dim bLogo, bPredict, bWriteTeam, bWriteCal As Boolean
Dim shtTable, shtDashBoard, shtSPI, shtFixture, shtCalendar, shtClub As String

    bLogo = False
    bWriteTeam = False
    bWriteCal = False
    bPredict = False
    

'    shtTable = "TableNG"
    shtTable = "Table"
    shtDashBoard = "Dashboard"
    shtSPI = "SPI"
    shtFixture = "fixtures"
    shtCalendar = "Fixtures_by_Date"
    shtClub = "Fixtures_by_Clubs"
    
    Call ReadData(True, False, nFixtures)

    Sheets(shtTable).Select
    Range("A1").Select
    
    Application.Wait (Now + TimeValue("0:00:02"))
    Call ModelLeague3(bLogo, bPredict, bWriteTeam, bWriteCal, nMaxCalendarRows, shtTable)
        
    Sheets(shtCalendar).Select
    Range("A1").Select
    
    Application.Wait (Now + TimeValue("0:00:02"))
    
    Call UpdateCal3(bLogo, nMaxCalendarRows, shtTable)

    Sheets(shtClub).Select
    Range("A1").Select
        
    Application.Wait (Now + TimeValue("0:00:02"))

    Call UpdateTeam3(bLogo, nMaxCalendarRows, shtTable)
    'Call Filter_Team_Manual(bLogo)
    
End Sub
Sub RunAll_with_Prediction()
Dim bLogo, bPredict, bWriteTeam, bWriteCal As Boolean
Dim shtTable, shtDashBoard, shtSPI, shtFixture, shtCalendar, shtClub As String

    bLogo = False
    bWriteTeam = False
    bWriteCal = False
    bPredict = True


'    shtTable = "TableNG"
    shtTable = "Table"
    shtDashBoard = "Dashboard"
    shtSPI = "SPI"
    shtFixture = "fixtures"
    shtCalendar = "Fixtures_by_Date"
    shtClub = "Fixtures_by_Clubs"
    
    Call ReadData(True, False, nFixtures)

    Sheets(shtTable).Select
    Range("A1").Select
    
    Application.Wait (Now + TimeValue("0:00:02"))
    Call ModelLeague3(bLogo, bPredict, bWriteTeam, bWriteCal, nMaxCalendarRows, shtTable)
    
    Call ReadData(True, False, nFixtures)
        
    Sheets(shtCalendar).Select
    Range("A1").Select
    
    Application.Wait (Now + TimeValue("0:00:02"))
    
    Call UpdateCal3(bLogo, nMaxCalendarRows, shtTable)

    Sheets(shtClub).Select
    Range("A1").Select
        
    Application.Wait (Now + TimeValue("0:00:02"))

    Call UpdateTeam3(bLogo, nMaxCalendarRows, shtTable)
    'Call Filter_Team_Manual(bLogo)
    
End Sub

Sub RunUpdateCal()
Dim bLogo, bPredict, bWriteTeam, bWriteCal As Boolean
Dim shtTable, shtFixture As String

    shtCal = "Fixtures_by_Date"
    
    bLogo = False
    
    nClubs = 20
    
'   38 games per team when nClubs=20
    nMaxGamesPerTeam = (nClubs - 1) * 2
    
'   380 total fixtures when nClubs=20
    nTotFixtures = nClubs * (nClubs - 1)
    
'   Max rows in Fixtures by Date Tab
    nMaxCalendarRows = Sheets(shtCal).Cells(1, 1)
'    shtTable = "TableNG"
    shtTable = "Table"
    
    
'    shtTable = "Table"
    shtDashBoard = "Dashboard"
    shtSPI = "SPI"
    shtFixture = "fixtures"
    
    Call ReadData(True, True, nFixtures)

'    Call UpdateCal3(bLogo, nMaxCalendarRows, shtTable)
    Call Update_Fixtures_by_Date_With_Score_Change(bLogo, nMaxCalendarRows, nTotFixtures, shtTable, 0, 0, 0)
'    Call Update_Fixtures_by_Date_With_Score_Change(bLogo, nMaxCalendarRows, nFixtures, shtTable, nRowCal, nWk, iMonth)
    
    
    
End Sub
Sub RunUpdateTeam()
Dim bLogo, bPredict, bWriteTeam, bWriteCal As Boolean
Dim shtTable, shtDashBoard, shtSPI, shtFixture As String

    bLogo = False

'    shtTable = "TableNG"
    shtTable = "Table"
    shtDashBoard = "Dashboard"
    shtSPI = "SPI"
    shtFixture = "fixtures"
    
    Call ReadData(True, False, nFixtures)

    Call UpdateTeam3(bLogo, nMaxCalendarRows, shtTable)
    'Call Filter_Team_Manual(bLogo)
    
End Sub

Sub ModelLeague_no_Prediction()
Dim bLogo, bPredict, bWriteTeam, bWriteCal As Boolean
Dim shtTable, shtDashBoard, shtSPI, shtFixture As String

    bLogo = False
    bWriteTeam = False
    bWriteCal = False
    bPredict = False
    
'    shtTable = "TableNG"
    shtTable = "Table"
    shtDashBoard = "Dashboard"
    shtSPI = "SPI"
    shtFixture = "fixtures"
    
    Call ReadData(True, False, nFixtures)
    
    Call ModelLeague3(bLogo, bPredict, bWriteTeam, bWriteCal, nMaxCalendarRows, shtTable)
    'Call Filter_Team_Manual(bLogo)
    
End Sub
Sub ModelLeague_w_Prediction()
Dim bLogo, bPredict, bWriteTeam, bWriteCal As Boolean
Dim shtTable, shtDashBoard, shtSPI, shtFixture As String

    bLogo = False
    bWriteTeam = False
    bWriteCal = False
    bPredict = True
    
    
'    shtTable = "TableNG"
    shtTable = "Table"
    shtDashBoard = "Dashboard"
    shtSPI = "SPI"
    shtFixture = "fixtures"
    
    Call ReadData(True, False, nFixtures)
    
    Call ModelLeague3(bLogo, bPredict, bWriteTeam, bWriteCal, nMaxCalendarRows, shtTable)
    'Call Filter_Team_Manual(bLogo)
    
End Sub


Sub SetColor(w, h, widthCol, mBlk, nBlk, TgSheet, shtTable)

'   Dim ni, nj, w, h, iBlk, jBlk, iStart, jStart, iEnd, jEnd As Integer
   Dim iStart, jStart, iEnd, jEnd As Integer
'   Dim shtTable, TgSheet As String
   Dim Team As String
   Dim nR, nG, nB As Integer
   Dim nR1, nG1, nB1 As Integer
   Dim nRf, nGf, nBf As Integer
   Dim nRf1, nGf1, nBf1 As Integer
   Dim iColor As Integer
'   Dim mBlk, nBlk As Integer
'   Dim widthCol As Integer
   
'    TgSheet = "Fixtures_by_Clubs"
'    shtTable = "Sheet5"
    
    ni = 5
    nj = 8
    
'    w = 12
'    h = 52
'
'
'    widthcol = 12
'
'    mBlk = 20
'    nBlk = 1
    
'    Application.ScreenUpdating = False
    
    Sheets(TgSheet).Activate
    
    For I = 1 To nClubs
    
    Team = Sheets(shtTable).Cells(ni + I, nj)
    nR = Sheets(shtTable).Cells(ni + I, 27)
    nG = Sheets(shtTable).Cells(ni + I, 28)
    nB = Sheets(shtTable).Cells(ni + I, 29)
    
    nRf = Sheets(shtTable).Cells(ni + I, 30)
    nGf = Sheets(shtTable).Cells(ni + I, 31)
    nBf = Sheets(shtTable).Cells(ni + I, 32)
    
    nR1 = Sheets(shtTable).Cells(ni + I, 33)
    nG1 = Sheets(shtTable).Cells(ni + I, 34)
    nB1 = Sheets(shtTable).Cells(ni + I, 35)
    
    nRf1 = Sheets(shtTable).Cells(ni + I, 36)
    nGf1 = Sheets(shtTable).Cells(ni + I, 37)
    nBf1 = Sheets(shtTable).Cells(ni + I, 38)
    
        'If i <= 10 Then
            'iBlk = 1
            'jBlk = i
        'Else
            'iBlk = 2
            'jBlk = i - 10
        'End If
                
        iBlk = Int((I - 1) / mBlk) + 1
        jBlk = I - (iBlk - 1) * mBlk
    

    
'    Sheets(shtTable).Activate
'    Range(Cells(ni + I, 25).Address).Select
'    Selection.Copy

    Sheets(TgSheet).Activate
    'iColor = 1
    iStart = (iBlk - 1) * h + 1
    iEnd = iStart + h - 1
    
      For k = 1 To nBlk
      
        jStart = (jBlk - 1) * w + 1 + (k - 1) * widthCol
        jEnd = jStart + widthCol - 1 + (k - 1) * widthCol
        iColor = 1
        

    
        For m = iStart To iEnd
        p = m - (iBlk - 1) * h
        
        If IsEmpty(Cells(m, jStart + 1)) And ((p > 1) And (p <= h - 1)) Then
        'iColor = iColor * (-1)
        Cells(m, jStart).Font.Bold = True
        End If
        
        'If k = 2 Then
        'iColor = -1
        'End If
        
        If m > iStart Then
        iColor = -1
        End If
        
        For n = jStart To jStart + widthCol - 1
        

        If iColor = 1 Then
        Cells(m, n).Interior.Color = RGB(nR, nG, nB)
        Else
        Cells(m, n).Interior.Color = RGB(nR1, nG1, nB1)
        'Cells(m, n).Interior.Color = RGB(nR, nG, nB)
        End If
        
        If (k = 1) And (m = iStart) And (n = jStart) Then
        Cells(m, n).Font.Color = RGB(nRf, nGf, nBf)
        Cells(m, n).Font.Bold = True
        Cells(m, n).Font.Size = 36
        Else
        Cells(m, n).Font.Color = RGB(nRf1, nGf1, nBf1)
        Cells(m, n).Font.Size = 20
        End If
        Next n
        Next m
        
    Next k
    Next I
    
'    Application.ScreenUpdating = True

End Sub
Sub UpdateSPI()
    Dim shtSPI, shtSPISource As String
    Dim shtFixture As String
    Dim nWk As Integer
    Dim Team, team_temp As String
    Dim spi_off, spi_def, spi As Double
    Dim dt1, dt2 As Date
    
    shtFixture = "fixtures"
    shtSPI = "SPI"
    shtSPISource = "spi_global_rankings"
    
    Sheets(shtSPI).Unprotect ("pineapple")
    
    Sheets(shtSPISource).Select
    Cells.Select

    Selection.ClearContents

    If ActiveSheet.QueryTables.Count > 0 Then
        ActiveSheet.QueryTables(1).Delete
    End If

    ActiveWorkbook.Queries.Add Name:="spi_global_rankings", Formula:= _
        "let" & Chr(13) & "" & Chr(10) & "    Source = Csv.Document(Web.Contents(""https://projects.fivethirtyeight.com/soccer-api/club/spi_global_rankings.csv""),[Delimiter="","", Columns=7, Encoding=1252, QuoteStyle=QuoteStyle.None])," & Chr(13) & "" & Chr(10) & "    #""Promoted Headers"" = Table.PromoteHeaders(Source, [PromoteAllScalars=true])," & Chr(13) & "" & Chr(10) & "    #""Changed Type"" = Table.TransformColumnTypes(#""Promoted Headers"",{{""rank" & _
        """, Int64.Type}, {""prev_rank"", Int64.Type}, {""name"", type text}, {""league"", type text}, {""off"", type number}, {""def"", type number}, {""spi"", type number}})" & Chr(13) & "" & Chr(10) & "in" & Chr(13) & "" & Chr(10) & "    #""Changed Type"""
    With ActiveSheet.ListObjects.Add(SourceType:=0, Source:= _
        "OLEDB;Provider=Microsoft.Mashup.OleDb.1;Data Source=$Workbook$;Location=""spi_global_rankings"";Extended Properties=""""" _
        , Destination:=Range("spi_global_rankings!$A$1")).QueryTable
        .CommandType = xlCmdSql
        .CommandText = Array("SELECT * FROM [spi_global_rankings]")
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .BackgroundQuery = True
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .PreserveColumnInfo = True
        .ListObject.DisplayName = "spi_global_rankings"
        .Refresh BackgroundQuery:=False
    End With
    
    Sheets(shtSPISource).Cells(1, 9) = Now()
    
    Sheets(shtSPI).Select
    
    nClubs = 20
    nMaxGamesPerTeam = 2 * (nClubs - 1)
    nTotFixtures = nClubs * (nClubs - 1)
    
'    dt1 = Date
'    dt1 = DateAdd("d", 90, dt1)

    dt1 = Date

    nWk = nMaxGamesPerTeam
    
    For I = 1 To nTotFixtures
        dt2 = Sheets(shtFixture).Cells(I + 1, 2)
        If dt1 <= dt2 Then
            nWk = Sheets(shtFixture).Cells(I + 1, 1)
            Exit For
        End If
    Next I
    For I = 1 To nClubs
        j = 1
        Team = Sheets(shtSPI).Cells(I + 1, 9)
        team_temp = Sheets(shtSPISource).Cells(j + 1, 3)
        Do While Team <> team_temp
            j = j + 1
            team_temp = Sheets(shtSPISource).Cells(j + 1, 3)
            If j >= 999 Then
            Sheets(shtSPI).Cells(I + 1, 8) = "Not found"
            Exit Do
            End If
        Loop
        spi_off = Sheets(shtSPISource).Cells(j + 1, 5)
        spi_def = Sheets(shtSPISource).Cells(j + 1, 6)
        spi = Sheets(shtSPISource).Cells(j + 1, 7)
        Sheets(shtSPI).Cells(I + 1, 6) = spi_off
        Sheets(shtSPI).Cells(I + 1, 7) = spi_def
        Sheets(shtSPI).Cells(I + 1, 8) = spi
    Next I
    Sheets(shtSPI).Cells(22, 7) = nWk
    
    ActiveWorkbook.Queries("spi_global_rankings").Delete
    ActiveWorkbook.Connections("Connection").Delete
    'Application.CommandBars("Queries and Connections").Visible = False

    Sheets(shtSPI).Protect ("pineapple")
    
End Sub
Sub DeletePicInRange(strRng)
    Dim xPicRg As Range
    Dim xPic As Picture
    Dim xRg As Range
'    Application.ScreenUpdating = False
    Set xRg = Range(strRng)
    For Each xPic In ActiveSheet.Pictures
        Set xPicRg = Range(xPic.TopLeftCell.Address & ":" & xPic.BottomRightCell.Address)
        If Not Intersect(xRg, xPicRg) Is Nothing Then xPic.Delete
    Next
'    Application.ScreenUpdating = True
End Sub
Sub UpdateTableNG(shtTableNew, shtTable, Rank, ni, nj)

Dim strRange1 As String

'Sheets(shtTableNew).Select


'    For Each pic In ActiveSheet.Pictures
'        bDelete = True
'        For I = 1 To 20
'            If pic.Name = Cells(I + 1, 45) Then
'                bDelete = False
'                Exit For
'            End If
'        Next I
'        If bDelete Then pic.Delete
'    Next pic
'


For m = 1 To nClubs
    k = 0
    For n = 1 To 11
    If (n > 2) Then k = 1
    Sheets(shtTableNew).Cells(m + 1, n + k) = Sheets(shtTable).Cells(ni + Rank(m), nj - 2 + n)

    If n = 11 Then
        For j = 1 To 5
            Sheets(shtTableNew).Cells(m + 1, n + j) = Sheets(shtTable).Cells(ni + Rank(m), nj - 2 + n + j)
        Next j
    End If
    Next n
    
    'strrange2 = "C" & (m + 1)
    
    'ThisWorkbook.Sheets(shtDashboard).Activate
    
    'Sheets("Dashboard").Select
    'Range("A2").Select
    'Selection.Copy
    'Range("A34").Select
    'ActiveSheet.Paste
    'Sheets("Table").Select
    'Range("C21").Select
    'ActiveSheet.Paste
    
    'Sheets(shtTableNew).Select
    'For p = 1 To nClubs
    '    If Cells(m + 1, 2) = Cells(p + 1, 43) Then
    '        strrange1 = Cells(p + 1, 45)
    '        Exit For
    '    End If
    'strRange1 = "A" & (p + 1)

    'Sheets(shtDashboard).Select
    'Range(strRange1).Select
    'Selection.Copy
    'Sheets(shtTableNew).Select
    'Range(strRange2).Select
    'ActiveSheet.Paste
    'Exit For
    'End If
    
    'Next p
    

    'ActiveSheet.Shapes.Range(Array(strrange1)).Select
    'Selection.Copy
    'strrange2 = "C" & m + 1
    'Range(strrange2).Select
    'ActiveSheet.Paste

    'Selection.ShapeRange.Height = 20
    'Selection.ShapeRange.IncrementLeft (Columns("C").width - Selection.ShapeRange.width) / 2
    'Selection.ShapeRange.IncrementTop (Range(strrange2).Height - Selection.ShapeRange.Height) / 2
    
    'PicFileName = PicPath & Sheets(shtTable).Cells(ni + Rank(m), nj) & ".png"
    'TempFile = Dir(PicFileName)
    'If Len(TempFile) = 0 Then
        'PicFileName = PicPath & "Chelsea.png"
    'End If

    'With ActiveSheet.Pictures.Insert(PicFileName)
        'With .ShapeRange
        '.LockAspectRatio = msoTrue
        ''.Width = 7.5
        '.Height = 24
        'End With

        '.Left = ActiveSheet.Cells(m + 1, 3).Left + (ActiveSheet.Cells(m + 1, 3).Width - .Width) / 2
        '.Top = ActiveSheet.Cells(m + 1, 3).Top + (ActiveSheet.Cells(m + 1, 3).Height - .Height) / 2
        '.Placement = 1
        '.PrintObject = True
    'End With
    
    'If Not (Sheets(shtTable).Cells(ni + rank(m), nj + 15) = "") Then
    
    'Sheets(shtTableNew).Select
    'strrange2 = "Q" & (m + 1)
    
    'For p = 1 To nClubs
    '    If Sheets(shtTable).Cells(ni + rank(m), nj + 15) = Cells(p + 1, 43) Then
    '        strrange1 = Cells(p + 1, 45)
    '        Exit For
    '    End If
            
            
    'strrange1 = "A" & (p + 1)

    'Sheets(shtDashboard).Select
    'Range(strrange1).Select
    'Selection.Copy
    'Sheets(shtTableNew).Select
    'Range(strrange2).Select
    'ActiveSheet.Paste
    'Exit For

    'End If
    'Next p
    

    'ActiveSheet.Shapes.Range(Array(strrange1)).Select
    'Selection.Copy
    'strrange2 = "Q" & m + 1
    'Range(strrange2).Select
    'ActiveSheet.Paste

    'Selection.ShapeRange.Height = 20
    'Selection.ShapeRange.IncrementLeft (Columns("Q").width - Selection.ShapeRange.width) / 2
    'Selection.ShapeRange.IncrementTop (Range(strrange2).Height - Selection.ShapeRange.Height) / 2

    
    'PicFileName = PicPath & Sheets(shtTable).Cells(ni + Rank(m), nj + 15) & ".png"
    'TempFile = Dir(PicFileName)
    'If Len(TempFile) = 0 Then
        'PicFileName = PicPath & "Chelsea.png"
    'End If

    'With ActiveSheet.Pictures.Insert(PicFileName)
        'With .ShapeRange
        '.LockAspectRatio = msoTrue
        ''.Width = 7.5
        '.Height = 24
        'End With

        '.Left = ActiveSheet.Cells(m + 1, 17).Left + (ActiveSheet.Cells(m + 1, 17).Width - .Width) / 2
        '.Top = ActiveSheet.Cells(m + 1, 17).Top + (ActiveSheet.Cells(m + 1, 17).Height - .Height) / 2
        '.Placement = 1
        '.PrintObject = True
    'End With
    'End If
    
    strRange1 = ""
    If Not (Sheets(shtTable).Cells(ni + Rank(m), nj + 15) = "") Then
    
        For p = 1 To nClubs
            If Sheets(shtTable).Cells(ni + Rank(m), nj + 15) = Sheets(shtTable).Cells(ni + p, nj) Then
                strRange1 = Sheets(shtTable).Cells(ni + p, nj - 2)
                Exit For
            End If
        Next p
        
        Sheets(shtTableNew).Cells(m + 1, 17) = strRange1
        
    Else
        Sheets(shtTableNew).Cells(m + 1, 17) = ""
    End If
    
    
    Sheets(shtTableNew).Cells(m + 1, 18) = Sheets(shtTable).Cells(ni + Rank(m), nj + 16)
    
Next m

End Sub
Sub UpdateTable(shtTableNew, shtTable, Rank, ni, nj, PlayOffWinner)
Dim strRange1, strRange2 As String
Dim bDelect As Boolean
Dim pic As Object
Dim shtDashBoard As String

shtDashBoard = "Dashboard"



Sheets(shtTableNew).Select

'    For Each pic In ActiveSheet.Pictures
'        bDelete = True
'        For I = 1 To nClubs
'            If pic.Name = Cells(I + 1, 45) Then
'                bDelete = False
'                Exit For
'            End If
'        Next I
'        If bDelete Then pic.Delete
'    Next pic

    For Each pic In ActiveSheet.Pictures
        pic.Delete
    Next pic
    


For m = 1 To nClubs
    k = 0
    For n = 1 To 11
    If (n > 2) Then k = 1
    Sheets(shtTableNew).Cells(m + 1, n + k) = Sheets(shtTable).Cells(ni + Rank(m), nj - 2 + n)

    If n = 11 Then
        For j = 1 To 5
            Sheets(shtTableNew).Cells(m + 1, n + j) = Sheets(shtTable).Cells(ni + Rank(m), nj - 2 + n + j)
        Next j
    End If
    Next n
    
'    strRange2 = "C" & (m + 1)
    
    'ThisWorkbook.Sheets(shtDashboard).Activate
    
    'Sheets("Dashboard").Select
    'Range("A2").Select
    'Selection.Copy
    'Range("A34").Select
    'ActiveSheet.Paste
    'Sheets("Table").Select
    'Range("C21").Select
    'ActiveSheet.Paste
    
    'Sheets(shtTableNew).Select
    For p = 1 To nClubs
        tmpName = Sheets(shtDashBoard).Cells(p + 1, 2)
        If Cells(m + 1, 2) = tmpName Then
            strRange1 = Sheets(shtDashBoard).Cells(p + 1, 4)
            Exit For
        End If
    'strRange1 = "A" & (p + 1)

    'Sheets(shtDashboard).Select
    'Range(strRange1).Select
    'Selection.Copy
    'Sheets(shtTableNew).Select
    'Range(strRange2).Select
    'ActiveSheet.Paste
    'Exit For
    'End If
    
    Next p
    
    Sheets(shtDashBoard).Select
    ActiveSheet.Shapes.Range(Array(strRange1)).Select
    
    On Error Resume Next
    
    Selection.CopyPicture
    
    If Err.Number <> 0 Then
        Application.Wait (Now + TimeValue("0:00:01"))
        Selection.CopyPicture
'        nTmp = Cells(2, 41)
'        Cells(nTmp, nColTeam) = Team
'        Cells(nTmp, nColTeam + 1) = nTrgRow
'        Cells(2, 41) = nTmp + 1
    End If
    On Error GoTo 0
    
    Sheets(shtTableNew).Select
    strRange2 = "C" & m + 1
    Range(strRange2).Select
    
    On Error Resume Next
    
    ActiveSheet.Paste
    Selection.Placement = xlMoveAndSize

    Selection.ShapeRange.Height = 20
    Selection.ShapeRange.IncrementLeft (Columns("C").Width - Selection.ShapeRange.Width) / 2
    Selection.ShapeRange.IncrementTop (Range(strRange2).Height - Selection.ShapeRange.Height) / 2

    If Err.Number <> 0 Then
        Application.Wait (Now + TimeValue("0:00:01"))
        ActiveSheet.Paste
        Selection.Placement = xlMoveAndSize

        Selection.ShapeRange.Height = 20
        Selection.ShapeRange.IncrementLeft (Columns("C").Width - Selection.ShapeRange.Width) / 2
        Selection.ShapeRange.IncrementTop (Range(strRange2).Height - Selection.ShapeRange.Height) / 2
    
    End If
    On Error GoTo 0
    
'    PicFileName = PicPath & Sheets(shtTable).Cells(ni + Rank(m), nj) & ".png"
'    TempFile = Dir(PicFileName)
'    If Len(TempFile) = 0 Then
'        PicFileName = PicPath & "Chelsea.png"
'    End If
'
'    With ActiveSheet.Pictures.Insert(PicFileName)
'        With .ShapeRange
'        .LockAspectRatio = msoTrue
'        '.Width = 7.5
'        .Height = 24
'        End With
'
'        .Left = ActiveSheet.Cells(m + 1, 3).Left + (ActiveSheet.Cells(m + 1, 3).Width - .Width) / 2
'        .Top = ActiveSheet.Cells(m + 1, 3).Top + (ActiveSheet.Cells(m + 1, 3).Height - .Height) / 2
'        .Placement = 1
'        .PrintObject = True
'    End With
    
    If Not (Sheets(shtTable).Cells(ni + Rank(m), nj + 15) = "") Then
    
    Sheets(shtTableNew).Select
    strRange2 = "Q" & (m + 1)
    
    For p = 1 To nClubs
        tmpName = Sheets(shtDashBoard).Cells(p + 1, 2)
        If Sheets(shtTable).Cells(ni + Rank(m), nj + 15) = tmpName Then
            strRange1 = Sheets(shtDashBoard).Cells(p + 1, 4)
            Exit For
        End If
            
            
    'strrange1 = "A" & (p + 1)

    'Sheets(shtDashboard).Select
    'Range(strrange1).Select
    'Selection.Copy
    'Sheets(shtTableNew).Select
    'Range(strrange2).Select
    'ActiveSheet.Paste
    'Exit For

    'End If
    Next p
    
    Sheets(shtDashBoard).Select
    ActiveSheet.Shapes.Range(Array(strRange1)).Select
    
    On Error Resume Next
    
    Selection.CopyPicture
    
    If Err.Number <> 0 Then
        Application.Wait (Now + TimeValue("0:00:01"))
        Selection.CopyPicture
'        nTmp = Cells(2, 41)
'        Cells(nTmp, nColTeam) = Team
'        Cells(nTmp, nColTeam + 1) = nTrgRow
'        Cells(2, 41) = nTmp + 1
    End If
    On Error GoTo 0
    
    
    Sheets(shtTableNew).Select
    strRange2 = "Q" & m + 1
    Range(strRange2).Select
    
    On Error Resume Next
    
    ActiveSheet.Paste
    Selection.Placement = xlMoveAndSize

    Selection.ShapeRange.Height = 20
    Selection.ShapeRange.IncrementLeft (Columns("Q").Width - Selection.ShapeRange.Width) / 2
    Selection.ShapeRange.IncrementTop (Range(strRange2).Height - Selection.ShapeRange.Height) / 2
    
    If Err.Number <> 0 Then
        Application.Wait (Now + TimeValue("0:00:01"))
        ActiveSheet.Paste
        Selection.Placement = xlMoveAndSize
    
        Selection.ShapeRange.Height = 20
        Selection.ShapeRange.IncrementLeft (Columns("Q").Width - Selection.ShapeRange.Width) / 2
        Selection.ShapeRange.IncrementTop (Range(strRange2).Height - Selection.ShapeRange.Height) / 2
    End If
    On Error GoTo 0
    
'    PicFileName = PicPath & Sheets(shtTable).Cells(ni + Rank(m), nj + 15) & ".png"
'    TempFile = Dir(PicFileName)
'    If Len(TempFile) = 0 Then
'        PicFileName = PicPath & "Chelsea.png"
'    End If
'
'    With ActiveSheet.Pictures.Insert(PicFileName)
'        With .ShapeRange
'        .LockAspectRatio = msoTrue
'        '.Width = 7.5
'        .Height = 24
'        End With
'
'        .Left = ActiveSheet.Cells(m + 1, 17).Left + (ActiveSheet.Cells(m + 1, 17).Width - .Width) / 2
'        .Top = ActiveSheet.Cells(m + 1, 17).Top + (ActiveSheet.Cells(m + 1, 17).Height - .Height) / 2
'        .Placement = 1
'        .PrintObject = True
'    End With
    End If
    
    Sheets(shtTableNew).Cells(m + 1, 18) = Sheets(shtTable).Cells(ni + Rank(m), nj + 16)
    
Next m

'For I = 1 To 2
'    Sheets(shtTableNew).Cells(I + 1, 1).Interior.Color = RGB(198, 224, 180)
'Next I
'
'For I = 3 To 6
'    Sheets(shtTableNew).Cells(I + 1, 1).Interior.Color = RGB(226, 239, 218)
'    If Sheets(shtTableNew).Cells(I + 1, 2) = PlayOffWinner Then
'        Sheets(shtTableNew).Cells(I + 1, 1).Interior.Color = RGB(198, 224, 180)
'    End If
'Next I
      
    
    
End Sub
Sub UpdateHTMLTable(ShtTableHTML, shtTable, Rank, ni, nj)
Dim strRange1, strForm As String
Dim strHTMLWin, strHTMLDraw, strHTMLLoss As String

strHTMLWin = "<img class=""aligncenter size-full wp-image-4338"" src=""http://www.tangfamily.me/wp-content/uploads/2018/09/Win.png"" alt="""" width=""8"" height=""20"" />"
strHTMLDraw = "<img class=""aligncenter size-full wp-image-4339"" src=""http://www.tangfamily.me/wp-content/uploads/2018/09/Draw.png"" alt="""" width=""8"" height=""20"" />"
strHTMLLoss = "<img class=""aligncenter size-full wp-image-4340"" src=""http://www.tangfamily.me/wp-content/uploads/2018/09/Loss.png"" alt="""" width=""8"" height=""20"" />"

Sheets(ShtTableHTML).Select
    

For m = 1 To nClubs

    For n = 1 To 6
    If n = 1 Then k = 0
    If n = 2 Then k = -3
    If n = 3 Then k = -4
    If n = 4 Then k = 2
    If n = 5 Then k = 9

    Sheets(ShtTableHTML).Cells(m + 1, n) = Sheets(shtTable).Cells(ni + Rank(m), nj - 1 + k)

    If n = 6 Then
        k = 10
        For j = 1 To 5
            strForm = Sheets(shtTable).Cells(ni + Rank(m), nj - 1 + k + j)
            If strForm = "W" Then
                Sheets(ShtTableHTML).Cells(m + 1, n + j) = strHTMLWin
            ElseIf strForm = "D" Then
                Sheets(ShtTableHTML).Cells(m + 1, n + j) = strHTMLDraw
            ElseIf strForm = "L" Then
                Sheets(ShtTableHTML).Cells(m + 1, n + j) = strHTMLLoss
            Else
                Sheets(ShtTableHTML).Cells(m + 1, n + j) = ""
            End If
        Next j
    End If
    Next n
  
    strRange1 = ""
    If Not (Sheets(shtTable).Cells(ni + Rank(m), nj + 15) = "") Then
    
        For p = 1 To nClubs
            If Sheets(shtTable).Cells(ni + Rank(m), nj + 15) = Sheets(shtTable).Cells(ni + p, nj) Then
                strRange1 = Sheets(shtTable).Cells(p + ni, 4)
                Exit For
            End If
        Next p
        
        Sheets(ShtTableHTML).Cells(m + 1, 12) = strRange1
        
    Else
        Sheets(ShtTableHTML).Cells(m + 1, 12) = ""
    End If
    
    Sheets(ShtTableHTML).Cells(m + 1, 13) = Sheets(shtTable).Cells(ni + Rank(m), nj + 16)
        
Next m
    
End Sub
Sub UpdateTable3(shtTableNew, shtTable, nClubCount, tableMP, tableW, tableD, tableL, tableGF, tableGA, tablePoints, FormWDL, nextOppoName, nextGameHost, TableRank, PlayOffWinner)
Dim strRange1, strRange2 As String
Dim bDelect As Boolean
Dim pic As Object
Dim shtDashBoard As String

shtDashBoard = "Dashboard"



Sheets(shtTableNew).Select

'    For Each pic In ActiveSheet.Pictures
'        bDelete = True
'        For I = 1 To nClubCount
'            If pic.Name = Cells(I + 1, 45) Then
'                bDelete = False
'                Exit For
'            End If
'        Next I
'        If bDelete Then pic.Delete
'    Next pic

    For Each pic In ActiveSheet.Pictures
        pic.Delete
    Next pic
    


For m = 1 To nClubCount
'    k = 0
'    For n = 1 To 11
'    If (n > 2) Then k = 1
'    Sheets(shtTableNew).Cells(m + 1, n + k) = Sheets(shtTable).Cells(ni + TableRank(m), nj - 2 + n)
    Sheets(shtTableNew).Cells(m + 1, 1) = m
    Sheets(shtTableNew).Cells(m + 1, 2) = Sheets(shtDashBoard).Cells(TableRank(m) + 1, 2)
    Sheets(shtTableNew).Cells(m + 1, 4) = tableMP(TableRank(m))
    Sheets(shtTableNew).Cells(m + 1, 5) = tableW(TableRank(m))
    Sheets(shtTableNew).Cells(m + 1, 6) = tableD(TableRank(m))
    Sheets(shtTableNew).Cells(m + 1, 7) = tableL(TableRank(m))
    Sheets(shtTableNew).Cells(m + 1, 8) = tableGF(TableRank(m))
    Sheets(shtTableNew).Cells(m + 1, 9) = tableGA(TableRank(m))
    Sheets(shtTableNew).Cells(m + 1, 10) = tableGF(TableRank(m)) - tableGA(TableRank(m))
    Sheets(shtTableNew).Cells(m + 1, 11) = tablePoints(TableRank(m))

    For j = 5 To 1 Step -1
'        Sheets(shtTableNew).Cells(m + 1, 10 + j) = Sheets(shtTable).Cells(ni + TableRank(m), nj - 2 + n + j)
        Sheets(shtTableNew).Cells(m + 1, 11 + j) = FormWDL(TableRank(m), 6 - j)
    Next j

    
'    strRange2 = "C" & (m + 1)
    
    'ThisWorkbook.Sheets(shtDashboard).Activate
    
    'Sheets("Dashboard").Select
    'Range("A2").Select
    'Selection.Copy
    'Range("A34").Select
    'ActiveSheet.Paste
    'Sheets("Table").Select
    'Range("C21").Select
    'ActiveSheet.Paste
    
    'Sheets(shtTableNew).Select
    For p = 1 To nClubCount
        tmpName = Sheets(shtDashBoard).Cells(p + 1, 2)
        If Cells(m + 1, 2) = tmpName Then
            strRange1 = Sheets(shtDashBoard).Cells(p + 1, 4)
            Exit For
        End If
    'strRange1 = "A" & (p + 1)

    'Sheets(shtDashboard).Select
    'Range(strRange1).Select
    'Selection.Copy
    'Sheets(shtTableNew).Select
    'Range(strRange2).Select
    'ActiveSheet.Paste
    'Exit For
    'End If
    
    Next p
    
    Sheets(shtDashBoard).Select
    ActiveSheet.Shapes.Range(Array(strRange1)).Select
    
    On Error Resume Next
    
    Selection.CopyPicture
    
    If Err.Number <> 0 Then
        Application.Wait (Now + TimeValue("0:00:01"))
        Selection.CopyPicture
'        nTmp = Cells(2, 41)
'        Cells(nTmp, nColTeam) = Team
'        Cells(nTmp, nColTeam + 1) = nTrgRow
'        Cells(2, 41) = nTmp + 1
    End If
    On Error GoTo 0
    
    Sheets(shtTableNew).Select
    strRange2 = "C" & m + 1
    Range(strRange2).Select
    
    On Error Resume Next
    
    ActiveSheet.Paste
    Selection.Placement = xlMoveAndSize

    Selection.ShapeRange.Height = 20
    Selection.ShapeRange.IncrementLeft (Columns("C").Width - Selection.ShapeRange.Width) / 2
    Selection.ShapeRange.IncrementTop (Range(strRange2).Height - Selection.ShapeRange.Height) / 2

    If Err.Number <> 0 Then
        Application.Wait (Now + TimeValue("0:00:01"))
        ActiveSheet.Paste
        Selection.Placement = xlMoveAndSize

        Selection.ShapeRange.Height = 20
        Selection.ShapeRange.IncrementLeft (Columns("C").Width - Selection.ShapeRange.Width) / 2
        Selection.ShapeRange.IncrementTop (Range(strRange2).Height - Selection.ShapeRange.Height) / 2
    
    End If
    On Error GoTo 0
    
'    PicFileName = PicPath & Sheets(shtTable).Cells(ni + TableRank(m), nj) & ".png"
'    TempFile = Dir(PicFileName)
'    If Len(TempFile) = 0 Then
'        PicFileName = PicPath & "Chelsea.png"
'    End If
'
'    With ActiveSheet.Pictures.Insert(PicFileName)
'        With .ShapeRange
'        .LockAspectRatio = msoTrue
'        '.Width = 7.5
'        .Height = 24
'        End With
'
'        .Left = ActiveSheet.Cells(m + 1, 3).Left + (ActiveSheet.Cells(m + 1, 3).Width - .Width) / 2
'        .Top = ActiveSheet.Cells(m + 1, 3).Top + (ActiveSheet.Cells(m + 1, 3).Height - .Height) / 2
'        .Placement = 1
'        .PrintObject = True
'    End With
    
'    If Not (Sheets(shtTable).Cells(ni + TableRank(m), nj + 15) = "") Then
    If Not (nextOppoName(TableRank(m)) = "") Then

    
    Sheets(shtTableNew).Select
    strRange2 = "Q" & (m + 1)
    
    For p = 1 To nClubCount
        tmpName = Sheets(shtDashBoard).Cells(p + 1, 2)
'        If Sheets(shtTable).Cells(ni + TableRank(m), nj + 15) = tmpName Then
        If nextOppoName(TableRank(m)) = tmpName Then

            strRange1 = Sheets(shtDashBoard).Cells(p + 1, 4)
            Exit For
        End If
            
            
    'strrange1 = "A" & (p + 1)

    'Sheets(shtDashboard).Select
    'Range(strrange1).Select
    'Selection.Copy
    'Sheets(shtTableNew).Select
    'Range(strrange2).Select
    'ActiveSheet.Paste
    'Exit For

    'End If
    Next p
    
    Sheets(shtDashBoard).Select
    ActiveSheet.Shapes.Range(Array(strRange1)).Select
    
    On Error Resume Next
    
    Selection.CopyPicture
    
    If Err.Number <> 0 Then
        Application.Wait (Now + TimeValue("0:00:01"))
        Selection.CopyPicture
'        nTmp = Cells(2, 41)
'        Cells(nTmp, nColTeam) = Team
'        Cells(nTmp, nColTeam + 1) = nTrgRow
'        Cells(2, 41) = nTmp + 1
    End If
    On Error GoTo 0
    
    
    Sheets(shtTableNew).Select
    strRange2 = "Q" & m + 1
    Range(strRange2).Select
    
    On Error Resume Next
    
    ActiveSheet.Paste
    Selection.Placement = xlMoveAndSize

    Selection.ShapeRange.Height = 20
    Selection.ShapeRange.IncrementLeft (Columns("Q").Width - Selection.ShapeRange.Width) / 2
    Selection.ShapeRange.IncrementTop (Range(strRange2).Height - Selection.ShapeRange.Height) / 2
    
    If Err.Number <> 0 Then
        Application.Wait (Now + TimeValue("0:00:01"))
        ActiveSheet.Paste
        Selection.Placement = xlMoveAndSize
    
        Selection.ShapeRange.Height = 20
        Selection.ShapeRange.IncrementLeft (Columns("Q").Width - Selection.ShapeRange.Width) / 2
        Selection.ShapeRange.IncrementTop (Range(strRange2).Height - Selection.ShapeRange.Height) / 2
    End If
    On Error GoTo 0
    
'    PicFileName = PicPath & Sheets(shtTable).Cells(ni + TableRank(m), nj + 15) & ".png"
'    TempFile = Dir(PicFileName)
'    If Len(TempFile) = 0 Then
'        PicFileName = PicPath & "Chelsea.png"
'    End If
'
'    With ActiveSheet.Pictures.Insert(PicFileName)
'        With .ShapeRange
'        .LockAspectRatio = msoTrue
'        '.Width = 7.5
'        .Height = 24
'        End With
'
'        .Left = ActiveSheet.Cells(m + 1, 17).Left + (ActiveSheet.Cells(m + 1, 17).Width - .Width) / 2
'        .Top = ActiveSheet.Cells(m + 1, 17).Top + (ActiveSheet.Cells(m + 1, 17).Height - .Height) / 2
'        .Placement = 1
'        .PrintObject = True
'    End With
    End If
    
'    Sheets(shtTableNew).Cells(m + 1, 18) = Sheets(shtTable).Cells(ni + TableRank(m), nj + 16)
    Sheets(shtTableNew).Cells(m + 1, 18) = nextGameHost(TableRank(m))

    
Next m

'For I = 1 To 2
'    Sheets(shtTableNew).Cells(I + 1, 1).Interior.Color = RGB(198, 224, 180)
'Next I
'
'For I = 3 To 6
'    Sheets(shtTableNew).Cells(I + 1, 1).Interior.Color = RGB(226, 239, 218)
'    If Sheets(shtTableNew).Cells(I + 1, 2) = PlayOffWinner Then
'        Sheets(shtTableNew).Cells(I + 1, 1).Interior.Color = RGB(198, 224, 180)
'    End If
'Next I
      
    
    
End Sub

Sub InsertLogo(shtTarget, shtSource)
Dim strRange1, strRange2 As String
Dim bDelect As Boolean
Dim pic As Object


Sheets(shtTarget).Select

'For Each pic In ActiveSheet.Pictures
'     pic.Delete
'Next pic
    


For m = 1 To nClubs
   
    For p = 1 To nClubs
        If Cells(m + 1, 2) = Sheets(shtSource).Cells(p + 1, 2) Then
            strRange1 = Sheets(shtSource).Cells(p + 1, 4)
            Exit For
        End If
    Next p
    
    Sheets(shtSource).Select
    ActiveSheet.Shapes.Range(Array(strRange1)).Select
    'Sheets(shtSource).Shapes.Range(Array(strRange1)).Select
    
    On Error Resume Next
    Selection.CopyPicture
    
    If Err.Number <> 0 Then
        Application.Wait (Now + TimeValue("0:00:01"))
        Selection.CopyPicture
'        nTmp = Cells(2, 41)
'        Cells(nTmp, nColTeam) = Team
'        Cells(nTmp, nColTeam + 1) = nTrgRow
'        Cells(2, 41) = nTmp + 1
    End If
    On Error GoTo 0
    
    Sheets(shtTarget).Select
    strRange2 = "C" & m + 1
    
    Range(strRange2).Select
    
    On Error Resume Next
    
    ActiveSheet.Paste
    Selection.ShapeRange.Height = 20
    Selection.ShapeRange.IncrementLeft (Columns("C").Width - Selection.ShapeRange.Width) / 2
    Selection.ShapeRange.IncrementTop (Range(strRange2).Height - Selection.ShapeRange.Height) / 2
    Selection.Placement = xlMoveAndSize
    
    If Err.Number <> 0 Then
        Application.Wait (Now + TimeValue("0:00:01"))
        ActiveSheet.Paste
        Selection.ShapeRange.Height = 20
        Selection.ShapeRange.IncrementLeft (Columns("C").Width - Selection.ShapeRange.Width) / 2
        Selection.ShapeRange.IncrementTop (Range(strRange2).Height - Selection.ShapeRange.Height) / 2
        Selection.Placement = xlMoveAndSize
'        Cells(nTrgRow, 14) = "Err"
    End If
    On Error GoTo 0
    
'    ActiveSheet.Paste
'    ActiveSheet.Pictures.Paste(Link:=True).Select

'    Selection.ShapeRange.Height = 20
'    Selection.ShapeRange.IncrementLeft (Columns("C").Width - Selection.ShapeRange.Width) / 2
'    Selection.ShapeRange.IncrementTop (Range(strRange2).Height - Selection.ShapeRange.Height) / 2
    
   
Next m
    
End Sub

Sub CalGfGa(spiGF, spiGA, Offhome, Defhome, Offaway, Defaway, homeadvtg, rdhome, rdaway, SRHome, SRAway, Off_ave, Def_ave)
    Dim offhome_adj, defhome_adj, offaway_adj, defaway_adj As Single
        offhome_adj = Offhome + (Defaway - Def_ave)
        defhome_adj = Defhome + (Offaway - Off_ave)
        offaway_adj = Offaway + (Defhome - Def_ave)
        defaway_adj = Defaway + (Offhome - Off_ave)
            spiGF = (offhome_adj + defaway_adj) / 2
            spiGA = (defhome_adj + offaway_adj) / 2
            spiGF = spiGF * homeadvtg * (rdhome / 7)
            spiGA = spiGA * (rdaway / 7)
            spiGF = spiGF * Exp(SRHome / 10)
            spiGA = spiGA * Exp(SRAway / 10)
            'spiGF = spiGF * (1 + SRHome / 20)
            'spiGA = spiGA * (1 + SRAway / 20)
            
End Sub

Function Poisson(Lamda, k)
    Poisson = (Lamda ^ k * Exp(-Lamda)) / Factorial(k)
End Function
Function Factorial(n)
    Dim I As Integer
    
    Factorial = 1
    
    For I = 1 To n
        Factorial = Factorial * I
    Next I
 
End Function
Sub SPIAdjust(spi_off, spi_def, ProjectedGF, ProjectedGA, ActualGF, ActualGA)
    Dim ThreshHold1, step1, ThreshHold2, step2, tmpGF, tmpGA As Single
    ThreshHold1 = 1.7
    step1 = 0.1
    ThreshHold2 = 1.7
    step2 = 0.05
    
    If ActualGF >= 5 Then ActualGF = 5
    If ActualGA >= 5 Then ActualGA = 5
    
    
    tmpGF = ActualGF - ProjectedGF
    tmpGA = ActualGA - ProjectedGA
    
    'spi_off = spi_off + Int((ActualGA - ProjectedGA) / ThreshHold + 0.5) * step
    'spi_def = spi_def + Int((ActualGF - ProjectedGF) / ThreshHold + 0.5) * step
    
    If (ActualGF >= ActualGA) And (ProjectedGF < ProjectedGA) Then
        If tmpGF >= 0 Then
        spi_off = spi_off + Int(tmpGF / ThreshHold1) * step1
        Else
        spi_off = spi_off + Int(tmpGF / ThreshHold1 + 1) * step1
        End If
        
        If tmpGA >= 0 Then
            spi_def = spi_def + Int(tmpGA / ThreshHold1) * step1
        Else
            spi_def = spi_def + Int(tmpGA / ThreshHold1 + 1) * step1
        End If
    Else
        If tmpGF >= 0 Then
        spi_off = spi_off + Int(tmpGF / ThreshHold2) * step2
        Else
        spi_off = spi_off + Int(tmpGF / ThreshHold2 + 1) * step2
        End If
        
        If tmpGA >= 0 Then
            spi_def = spi_def + Int(tmpGA / ThreshHold2) * step2
        Else
            spi_def = spi_def + Int(tmpGA / ThreshHold2 + 1) * step2
        End If
    End If
    
    If spi_off > 3.2 Then spi_off = 3.2
    If spi_off < 0.5 Then spi_off = 0.5
    If spi_def < 0.1 Then spi_def = 0.1
    If spi_def > 2 Then spi_def = 2
    
End Sub
Sub SPIAdjust3(spi_off, spi_def, ProjectedGF, ProjectedGA, ActualGF, ActualGA, FormPts)
    Dim ThreshHold1, step1, ThreshHold2, step2, step3, tmpGF, tmpGA As Single
    ThreshHold1 = 1.7
    step1 = 0.1
    ThreshHold2 = 1.7
    step2 = 0.05
    step3 = 0.05
    
    If ActualGF >= 5 Then ActualGF = 5
    If ActualGA >= 5 Then ActualGA = 5
    
    
    tmpGF = ActualGF - ProjectedGF
    tmpGA = ActualGA - ProjectedGA
    
    'spi_off = spi_off + Int((ActualGA - ProjectedGA) / ThreshHold + 0.5) * step
    'spi_def = spi_def + Int((ActualGF - ProjectedGF) / ThreshHold + 0.5) * step
    
    If (ActualGF >= ActualGA) And (ProjectedGF < ProjectedGA) Then
        If tmpGF >= 0 Then
        spi_off = spi_off + Int(tmpGF / ThreshHold1) * step1
        Else
        spi_off = spi_off + Int(tmpGF / ThreshHold1 + 1) * step1
        End If
        
        If tmpGA >= 0 Then
            spi_def = spi_def + Int(tmpGA / ThreshHold1) * step1
        Else
            spi_def = spi_def + Int(tmpGA / ThreshHold1 + 1) * step1
        End If
    Else
        If tmpGF >= 0 Then
        spi_off = spi_off + Int(tmpGF / ThreshHold2) * step2
        Else
        spi_off = spi_off + Int(tmpGF / ThreshHold2 + 1) * step2
        End If
        
        If tmpGA >= 0 Then
            spi_def = spi_def + Int(tmpGA / ThreshHold2) * step2
        Else
            spi_def = spi_def + Int(tmpGA / ThreshHold2 + 1) * step2
        End If
    End If
    If FormPts = 3 Then
        spi_def = spi_def - step3
        spi_off = spi_off + step3
    End If
    
    If FormPts = -3 Then
        spi_def = spi_def + step3
        spi_off = spi_off - step3
    End If
    
    If spi_off > 3.2 Then spi_off = 3.2
    If spi_off < 0.5 Then spi_off = 0.5
    If spi_def < 0.1 Then spi_def = 0.1
    If spi_def > 2 Then spi_def = 2
    
End Sub
Sub CopyPIC(shtSource, nColTeam, nColPic, nStartRowTeam, shtTarget, strTrgCol, nTrgRow, Team, h)


Dim strRange2, strRange1 As String

    Sheets(shtSource).Select
    
   
    For p = 1 To nClubs
        If Cells(p + nStartRowTeam - 1, nColTeam) = Team Then
            strRange1 = Cells(p + nStartRowTeam - 1, nColPic)
            Exit For
        End If
    Next p
    

    ActiveSheet.Shapes.Range(Array(strRange1)).Select
    'Application.Wait (Now + TimeValue("0:00:01"))
'    Call Sleep(100)
    On Error Resume Next
    Selection.CopyPicture
    If Err.Number <> 0 Then
        Application.Wait (Now + TimeValue("0:00:01"))
        Selection.CopyPicture
'        nTmp = Cells(2, 41)
'        Cells(nTmp, nColTeam) = Team
'        Cells(nTmp, nColTeam + 1) = nTrgRow
'        Cells(2, 41) = nTmp + 1
    End If
    On Error GoTo 0
    


    Sheets(shtTarget).Select
    strRange2 = strTrgCol & nTrgRow
    Range(strRange2).Select
    
    On Error Resume Next
    
    ActiveSheet.Paste
    Selection.ShapeRange.Height = h
    Selection.ShapeRange.IncrementLeft (Columns(strTrgCol).Width - Selection.ShapeRange.Width) / 2
    Selection.ShapeRange.IncrementTop (Range(strRange2).Height - Selection.ShapeRange.Height) / 2
    Selection.Placement = xlMoveAndSize
    
    If Err.Number <> 0 Then
        Application.Wait (Now + TimeValue("0:00:01"))
        ActiveSheet.Paste
        Selection.ShapeRange.Height = h
        Selection.ShapeRange.IncrementLeft (Columns(strTrgCol).Width - Selection.ShapeRange.Width) / 2
        Selection.ShapeRange.IncrementTop (Range(strRange2).Height - Selection.ShapeRange.Height) / 2
        Selection.Placement = xlMoveAndSize
'        Cells(nTrgRow, 14) = "Err"
    End If
    On Error GoTo 0

End Sub
Sub ModelLeague_MC3(bLogo)
    Dim ii(20), jj(20), nGame(20), Points(20) As Integer
    Dim matchMonthOld(20) As String
    Dim shtTable, shtFixture, shtDashBoard, shtTableNew, shtCalendar, shtSPI, shtMCTable As String
    Dim TgSheet As String
    Dim w, h As Integer
    Dim iStart, jStart As Integer
    Dim LastMatchDate(20) As Date
    Dim matchDay As Integer
    Dim matchMonth, matchWkDay As String
    Dim matchTime As String
    Dim ResultHome, ResultAway As String
    Dim GF, GA, HomePoints, AwayPoints As Integer
    Dim Form(20, 5) As String
    Dim FormPtsHome, FormPtsAway As Integer


    Dim HomeTeamNext, AwayTeamNext As String
    Dim nTeam, iBlk, jBlk As Integer
    Dim m, n As Integer
    Dim bNewCol As Boolean
    Dim widthCol As Integer
    Dim TimeZone As String
    Dim timecol As Integer
    Dim pic As Object
    Dim nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1 As Integer
    Dim tbPoints(20), tbMP(20), tbW(20), tbD(20), tbL(20), tbGA(20), tbGF(20) As Integer
    Dim tbTotPoints(20) As Single
    Dim nextOppo(20), nextGame(20) As String
    Dim Rank(20) As Integer
    Dim strRange1, strRange2 As String
    Dim bDelete As Boolean
    Dim nRowCal, ntmpRowCal As Integer
    Dim spi_off(20), spi_def(20), subRating(20), spi_off_ave, spi_def_ave As Single

    Dim RestDaysHome, RestDaysAway As Integer
    Dim spiGF(380), spiGA(380), homeadvtg As Single
    Dim totalGoals, GoalFactor, AveGoals As Single
    Dim Winpct, DrawPct, LossPct, HomeProb(7), AwayProb(7), HomeProbAcc(7), AwayProbAcc(7) As Single
    Dim HomeRND, AwayRND As Single
    Dim GA_guess(380), GF_guess(380) As Integer

    Dim nMC, nMCTotal, spiWk As Integer
    Dim shtMCGD, shtMCLoss, shtMCDraw, shtMCWin, shtMCPoints, shtMCGA, shtMCGF, shtMCSummary, shtMCSummaryHTML As String

    
    Dim avePoints(20), aveMP(20), aveW(20), aveD(20), aveL(20), aveGA(20), aveGF(20), aveGD(20) As Long
    Dim aveTotPoints(20) As Single
    Dim nWinLeague(20), nTop4(20), nRelegate(20) As Integer
    Dim timeStart, timeNow As Long
    Dim secElapsed, minElapsed As Integer
    Dim ptsBin(20, 115) As Integer

    
    

    
    'Application.ScreenUpdating = False
    bCancel = False
    
    ufProgress.LabelProgress.Width = 0
    ufProgress.Show
    
    timeStart = Timer
    
    shtTable = "Sheet5"
    shtFixture = "fixtures"
    TgSheet = "Fixtures_by_Clubs"
    shtDashBoard = "Dashboard"
    shtTableNew = "Table"
    shtCalendar = "Fixtures_by_Date"
    shtSPI = "SPI"
    shtMCSummaryHTML = "MC Summary HTML"
    'shtMCTable = "MC_Table"
    'shtMCGF = "MC_GF"
    'shtMCGA = "MC_GA"
    'shtMCGD = "MC_GD"
    'shtMCLoss = "MC_Loss"
    'shtMCDraw = "MC_Draw"
    'shtMCWin = "MC_Win"
    'shtMCPoints = "MC_Points"
    shtMCSummary = "Predicted_Table"
    
    Sheets(shtTable).Unprotect ("pineapple")
    Sheets(shtTableNew).Unprotect ("pineapple")
    Sheets(shtDashBoard).Unprotect ("pineapple")
    Sheets(shtCalendar).Unprotect ("pineapple")
    Sheets(shtSPI).Unprotect ("pineapple")
    Sheets(shtMCSummary).Unprotect ("pineapple")
    'Sheets(shtMCTable).Unprotect ("pineapple")
    'Sheets(shtMCGF).Unprotect ("pineapple")
    'Sheets(shtMCGA).Unprotect ("pineapple")
    
    'Sheets(shtMCGD).Unprotect ("pineapple")
    'Sheets(shtMCLoss).Unprotect ("pineapple")
    'Sheets(shtMCDraw).Unprotect ("pineapple")
    'Sheets(shtMCWin).Unprotect ("pineapple")
    'Sheets(shtMCPoints).Unprotect ("pineapple")
        
    'Sheets(shtTableNew).Activate
    
    TimeZone = Sheets(shtDashBoard).Cells(1, 4)
    
    If TimeZone = "UK" Then
        timecol = 4
    ElseIf TimeZone = "EST" Then
        timecol = 3
    ElseIf TimeZone = "CST" Then
        timecol = 5
    ElseIf TimeZone = "MST" Then
        timecol = 6
    ElseIf TimeZone = "PST" Then
        timecol = 7
    Else
        timecol = 4
    End If
    
    nMCTotal = Sheets(shtDashBoard).Cells(14, 6)
    
    Sheets(shtMCSummary).Select
    For Each pic In ActiveSheet.Pictures
        pic.Delete
    Next pic
    
    For I = 1 To nClubs
        For j = 1 To 115
            ptsBin(I, j) = 0
        Next j
    Next I
    
    homeadvtg = 1.1
    AveGoals = 2.85
    
    For nMC = 1 To nMCTotal
    
    pctdone = nMC / nMCTotal
    timeNow = Timer
    minElapsed = Int((timeNow - timeStart) / 60)
    secElapsed = Round((timeNow - timeStart - minElapsed * 60), 0)
    
    With ufProgress
        .LabelCaption.Caption = "Monte Carlo Run " & nMC & " of " & nMCTotal
        .LabelTime.Caption = "Elapsed time: " & minElapsed & " min " & secElapsed & " sec"
        .LabelProgress.Width = pctdone * (.FrameProgress.Width)
    End With
    
    DoEvents
    
    'Sheets(shtFixture).Range("K12:L381").ClearContents
    'Cells(14, 6) = nMC
    
    matchMonth = ""
    matchDay = 0
    spi_off_ave = 0
    spi_def_ave = 0
    For I = 1 To nClubs
        ii(I) = 1
        jj(I) = 1
        nGame(I) = 0
        Points(I) = 0
        matchMonthOld(I) = ""
        tbPoints(I) = 0
        tbMP(I) = 0
        tbW(I) = 0
        tbD(I) = 0
        tbL(I) = 0
        tbGF(I) = 0
        tbGA(I) = 0
        'spi_off(I) = Sheets(shtSPI).Cells(I + 1, 3)
        'spi_def(I) = Sheets(shtSPI).Cells(I + 1, 4)
        'subRating(I) = Sheets(shtSPI).Cells(I + 1, 5)
        'spi_off_ave = spi_off_ave + spi_off(I)
        'spi_def_ave = spi_def_ave + spi_def(I)
        For j = 1 To 5
            Form(I, j) = ""
        Next j
        nextOppo(I) = ""
        nextGame(I) = ""
        LastMatchDate(I) = "8 / 1 / 18"

    Next I
    
        For I = 1 To nClubs

            spi_off(I) = spi_temp(I, 1)
            spi_def(I) = spi_temp(I, 2)

            subRating(I) = spi_temp(I, 5)
        Next I
            spiWk = newspiWeek
            
        spi_off_ave = 0
        spi_def_ave = 0
        For I = 1 To nClubs
            spi_off_ave = spi_off_ave + spi_off(I)
            spi_def_ave = spi_def_ave + spi_def(I)
        Next I
            spi_off_ave = spi_off_ave / nClubs
            spi_def_ave = spi_def_ave / nClubs
    
'    Call readSPI(shtSPI, spi_off, spi_def, subRating, spi_off_ave, spi_def_ave, 0, spiWk)
    
    'spi_off_ave = spi_off_ave / nClubs
    'spi_def_ave = spi_def_ave / nClubs

    
    'Sheets(TgSheet).Activate
    
    'For Each PIC In ActiveSheet.Pictures
        'PIC.Delete
    'Next PIC
    
    nRowCal = 1
    ntmpRowCal = 1
    
    'Sheets(shtMCGF).Cells(nMC + 1, 1) = nMC
    'Sheets(shtMCGA).Cells(nMC + 1, 1) = nMC
    
'    For I = 1 To nTotFixtures
'    nMatchwk(I) = Sheets(shtFixture).Cells(I + 1, 1)
'    matchDate(I) = Sheets(shtFixture).Cells(I + 1, 2)
'    HomeTeam(I) = Sheets(shtFixture).Cells(I + 1, 10)
'    AwayTeam(I) = Sheets(shtFixture).Cells(I + 1, 13)
'
'        For k = 1 To nClubs
'        If HomeTeam(I) = Sheets(shtSPI).Cells(k + 1, 2) Then
'            iHome = k
'            Exit For
'        End If
'        Next k
'
'        For k = 1 To nClubs
'        If AwayTeam(I) = Sheets(shtSPI).Cells(k + 1, 2) Then
'            iAway = k
'            Exit For
'        End If
'        Next k
'
'    RestDaysHome = matchDate(I) - LastMatchDate(iHome)
'    RestDaysAway = matchDate(I) - LastMatchDate(iAway)
'
'    If RestDaysHome > 7 Then RestDaysHome = 7
'    If RestDaysAway > 7 Then RestDaysAway = 7
'
'    If spiWk = nMatchwk(I) Then Call readSPI(shtSPI, spi_off, spi_def, subRating, spi_off_ave, spi_def_ave, 1, spiWk)
'
'    Call CalGfGa(spiGF(I), spiGA(I), spi_off(iHome), spi_def(iHome), spi_off(iAway), spi_def(iAway), homeadvtg, RestDaysHome, RestDaysAway, subRating(iHome), subRating(iAway), _
'    spi_off_ave, spi_def_ave)
'
'    Next I
'
'    totalGoals = 0
'    For I = 1 To nTotFixtures
'    totalGoals = totalGoals + spiGA(I) + spiGF(I)
'    Next I
''    GoalFactor = AveGoals / (totalGoals / nTotFixtures)
'    GoalFactor = 1
'
'    For I = 1 To nTotFixtures
'        spiGA(I) = spiGA(I) * GoalFactor
'        spiGF(I) = spiGF(I) * GoalFactor
'        'Sheets(shtFixture).Cells(I + 1, 20) = spiGF(I)
'        'Sheets(shtFixture).Cells(I + 1, 21) = spiGA(I)
'    Next I
    
    For I = 1 To nTotFixtures

'    nMatchwk(I) = Sheets(shtFixture).Cells(I + 1, 1)
'    matchDate(I) = Sheets(shtFixture).Cells(I + 1, 2)
'    HomeTeam(I) = Sheets(shtFixture).Cells(I + 1, 10)
'    AwayTeam(I) = Sheets(shtFixture).Cells(I + 1, 13)
    

        
    RestDaysHome = matchDate(I) - LastMatchDate(iHome(I))
    RestDaysAway = matchDate(I) - LastMatchDate(iAway(I))
    
    If RestDaysHome > 7 Then RestDaysHome = 7
    If RestDaysAway > 7 Then RestDaysAway = 7
    
    LastMatchDate(iHome(I)) = matchDate(I)
    LastMatchDate(iAway(I)) = matchDate(I)
    
    If spiWk = nMatchwk(I) Then
'        Call readSPI(shtSPI, spi_off, spi_def, subRating, spi_off_ave, spi_def_ave, 1, spiWk)

        For iii = 1 To nClubs

            spi_off(iii) = spi_temp(iii, 3)
            spi_def(iii) = spi_temp(iii, 4)

            subRating(iii) = spi_temp(iii, 5)
        Next iii
        
            spiWk = newspiWeek
        spi_off_ave = 0
        spi_def_ave = 0
        For iii = 1 To nClubs
            spi_off_ave = spi_off_ave + spi_off(iii)
            spi_def_ave = spi_def_ave + spi_def(iii)
        Next iii
            spi_off_ave = spi_off_ave / nClubs
            spi_def_ave = spi_def_ave / nClubs
    End If
    
    If GF_Temp(I) = -1 And GA_Temp(I) = -1 Then
                
        Call CalGfGa(spiGF(I), spiGA(I), spi_off(iHome(I)), spi_def(iHome(I)), spi_off(iAway(I)), spi_def(iAway(I)), homeadvtg, RestDaysHome, RestDaysAway, subRating(iHome(I)), subRating(iAway(I)), _
        spi_off_ave, spi_def_ave)
    
    Else
    
        Call CalGfGa(spiGF(I), spiGA(I), spi_off(iHome(I)), spi_def(iHome(I)), spi_off(iAway(I)), spi_def(iAway(I)), homeadvtg, RestDaysHome, RestDaysAway, 0, 0, _
        spi_off_ave, spi_def_ave)
    
    End If
    
    'spiGF(I) = spiGF(I) * GoalFactor
    'spiGA(I) = spiGA(I) * GoalFactor
    
        Winpct = 0
        DrawPct = 0
        LossPct = 0
        For m = 0 To 6
            HomeProbAcc(m + 1) = 0
            AwayProbAcc(m + 1) = 0
        Next m
        For m = 0 To 6
            AwayProb(m + 1) = Poisson(spiGA(I), m)
            For p = 0 To m
                AwayProbAcc(m + 1) = AwayProbAcc(m + 1) + AwayProb(p + 1)
            Next p
            For n = 0 To 6
                If m = 0 Then
                    HomeProb(n + 1) = Poisson(spiGF(I), n)
                For p = 0 To n
                    HomeProbAcc(n + 1) = HomeProbAcc(n + 1) + HomeProb(p + 1)
                Next p
                End If
                If m = n Then
                    DrawPct = DrawPct + AwayProb(m + 1) * HomeProb(n + 1)
                ElseIf m < n Then
                    Winpct = Winpct + AwayProb(m + 1) * HomeProb(n + 1)
                Else
                    LossPct = LossPct + AwayProb(m + 1) * HomeProb(n + 1)
                End If
            Next n
        Next m
        'Sheets(shtFixture).Cells(I + 1, 22) = Winpct
        'Sheets(shtFixture).Cells(I + 1, 23) = DrawPct
        'Sheets(shtFixture).Cells(I + 1, 24) = LossPct
        
        If GF_Temp(I) = -1 And GA_Temp(I) = -1 Then
        
        Randomize
        HomeRND = Rnd
        'HomeRND = 0.5
        For m = 0 To 6
        If HomeRND <= HomeProbAcc(m + 1) Then
            GF_guess(I) = m
            Exit For
        End If
        Next m
        
        Randomize
        AwayRND = Rnd
        'AwayRND = 0.5
        For m = 0 To 6
        If AwayRND <= AwayProbAcc(m + 1) Then
            GA_guess(I) = m
            Exit For
        End If
        Next m
        
        Else
            GF_guess(I) = GF_Temp(I)
            GA_guess(I) = GA_Temp(I)
        End If
        
'        Sheets(shtMCGF).Cells(nMC + 1, I + 1) = GF_guess(I)
'        Sheets(shtMCGA).Cells(nMC + 1, I + 1) = GA_guess(I)
        
        'HomeTeam = Sheets(shtFixture).Cells(I + 1, 10)
        'AwayTeam = Sheets(shtFixture).Cells(I + 1, 13)
    
        'For k = 1 To nClubs
        'If HomeTeam(I) = Sheets(shtSPI).Cells(k + 1, 2) Then
            'iHome = k
            'Exit For
        'End If
        'Next k
        
        'For k = 1 To nClubs
        'If AwayTeam(I) = Sheets(shtSPI).Cells(k + 1, 2) Then
            'iAway = k
            'Exit For
        'End If
        'Next k
            
        'Sheets(shtFixture).Cells(I + 1, 25) = GF_guess(i)
        'Sheets(shtFixture).Cells(I + 1, 26) = GA_guess(i)
        
        'Sheets(shtFixture).Cells(I + 1, 27) = HomeRND
        'Sheets(shtFixture).Cells(I + 1, 28) = AwayRND
        
'        Call SPIAdjust(spi_off(iHome(I)), spi_def(iHome(I)), spiGF(I), spiGA(I), GF_guess(I), GA_guess(I))
'        Call SPIAdjust(spi_off(iAway(I)), spi_def(iAway(I)), spiGA(I), spiGF(I), GA_guess(I), GF_guess(I))
        
        'For m = 0 To 6
            'Sheets(shtFixture).Cells(I + 1, 29 + m) = HomeProbAcc(m + 1)
            'Sheets(shtFixture).Cells(I + 1, 36 + m) = AwayProbAcc(m + 1)
        'Next m
        
        
    'Sheets(shtFixture).Cells(I + 1, 43) = spi_off(iHome)
    'Sheets(shtFixture).Cells(I + 1, 44) = spi_def(iHome)
    'Sheets(shtFixture).Cells(I + 1, 45) = spi_off(iAway)
    'Sheets(shtFixture).Cells(I + 1, 46) = spi_def(iAway)
         
'    Next I
    
    'For I = 1 To nTotFixtures
    
    'If IsEmpty(Sheets(shtFixture).Cells(I + 1, 11)) And IsEmpty(Sheets(shtFixture).Cells(I + 1, 12)) Then
        'Sheets(shtFixture).Cells(I + 1, 11) = Sheets(shtFixture).Cells(I + 1, 25)
        'Sheets(shtFixture).Cells(I + 1, 12) = Sheets(shtFixture).Cells(I + 1, 26)
    'End If
    
    'Next I

    
'    For I = 1 To nTotFixtures
  
    'HomeTeam = Sheets(shtFixture).Cells(I + 1, 10)
    'AwayTeam = Sheets(shtFixture).Cells(I + 1, 13)
    
    'If Not (IsEmpty(Sheets(shtFixture).Cells(I + 1, 11))) And Not (IsEmpty(Sheets(shtFixture).Cells(I + 1, 12))) Then
            
        'GF = Sheets(shtFixture).Cells(I + 1, 11)
        'GA = Sheets(shtFixture).Cells(I + 1, 12)
        GF = GF_guess(I)
        GA = GA_guess(I)
        If GF > GA Then
            ResultHome = "W"
            ResultAway = "L"
            HomePoints = 3
            AwayPoints = 0
        ElseIf GF = GA Then
            ResultHome = "D"
            ResultAway = "D"
            HomePoints = 1
            AwayPoints = 1
        Else
            ResultHome = "L"
            ResultAway = "W"
            HomePoints = 0
            AwayPoints = 3
        End If
    'Else
        'GA = -1
        'GF = -1
    'End If
    
    'Call FindTeamNo(HomeTeam, nTeam, m, n, iBlk, jBlk)
    
    'iStart = (iBlk - 1) * h
    'jStart = (jBlk - 1) * w
        
    'If ii(nTeam) = 1 Then
        'ii(nTeam) = ii(nTeam) + iStart
        'jj(nTeam) = jj(nTeam) + jStart
        'Cells(ii(nTeam), jj(nTeam)) = HomeTeam
        'ii(nTeam) = ii(nTeam) + 1
        'bNewCol = True
    'End If
           
    'If ii(nTeam) >= iStart + h Then
        'ii(nTeam) = iStart + 4
        'jj(nTeam) = jj(nTeam) + widthCol
        'bNewCol = True
    'End If
        
    'Call WriteTeam(bNewCol, AwayTeam, ii(nTeam), jj(nTeam), matchMonth, matchMonthOld(nTeam), matchDay, matchWkDay, matchTime, "H", GF, GA, ResultHome)
    
'    Call FindTeamNo(HomeTeam(I), nTeam, 1, 1, iBlk, jBlk, nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1)
    
'    Call FindTeamNo2(iHome, 1, 1, iBlk, jBlk, nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1)
    nTeam = iHome(I)
    
    nGame(nTeam) = nGame(nTeam) + 1
    
    If GA >= 0 Then
        tbMP(nTeam) = tbMP(nTeam) + 1
        If ResultHome = "W" Then
        tbW(nTeam) = tbW(nTeam) + 1
        ElseIf ResultHome = "D" Then
        tbD(nTeam) = tbD(nTeam) + 1
        Else
        tbL(nTeam) = tbL(nTeam) + 1
        End If
        tbPoints(nTeam) = tbW(nTeam) * 3 + tbD(nTeam)
        tbGF(nTeam) = tbGF(nTeam) + GF
        tbGA(nTeam) = tbGA(nTeam) + GA
    End If
        

        Points(nTeam) = Points(nTeam) + HomePoints

        FormPtsHome = 0
        For k = 5 To 2 Step -1
            If k <= 3 Then
            Form(nTeam, k) = Form(nTeam, k - 1)
                If Form(nTeam, k - 1) = "W" Then FormPtsHome = FormPtsHome + 1
                If Form(nTeam, k - 1) = "L" Then FormPtsHome = FormPtsHome - 1
            End If
        Next k
        
        If nGame(nTeam) >= 1 Then
            Form(nTeam, 1) = ResultHome
            If Form(nTeam, 1) = "W" Then FormPtsHome = FormPtsHome + 1
            If Form(nTeam, 1) = "L" Then FormPtsHome = FormPtsHome - 1
        End If

        
                
    
    'Call WriteTeamToTeamPage3(HomeTeam, HomeTeam, AwayTeam, ii(nTeam), jj(nTeam), matchMonth, matchMonthOld(nTeam), matchDay, matchWkDay, matchTime, _
    Game, GF, GA, nGame(nTeam), Points(nTeam), nR1, nG1, nB1)
    
    'Call WriteTeamToTeamPage3(HomeTeam, HomeTeam, AwayTeam, ii(nTeam), jj(nTeam), matchMonth, matchMonthOld(nTeam), matchDay, matchWkDay, matchTime, _
    Game, GF, GA, nGame(nTeam), Points(nTeam), nR1, nG1, nB1)
    
    
    'Call FindTeamNo(AwayTeam, nTeam, m, n, iBlk, jBlk)
    
    'iStart = (iBlk - 1) * h
    'jStart = (jBlk - 1) * w
        
    'If ii(nTeam) = 1 Then
        'ii(nTeam) = ii(nTeam) + iStart
        'jj(nTeam) = jj(nTeam) + jStart
        'Cells(ii(nTeam), jj(nTeam)) = AwayTeam
        'ii(nTeam) = ii(nTeam) + 1
        'bNewCol = True
    'End If
           
    'If ii(nTeam) >= iStart + h Then
        'ii(nTeam) = iStart + 4
        'jj(nTeam) = jj(nTeam) + widthCol
        'bNewCol = True
    'End If

    'Call WriteTeam(bNewCol, HomeTeam, ii(nTeam), jj(nTeam), matchMonth, matchMonthOld(nTeam), matchDay, matchWkDay, matchTime, "A", GA, GF, ResultAway)
    
'    Call FindTeamNo(AwayTeam(I), nTeam, 1, 1, iBlk, jBlk, nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1)
    
'    Call FindTeamNo2(iAway, 1, 1, iBlk, jBlk, nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1)
    nTeam = iAway(I)
    
    nGame(nTeam) = nGame(nTeam) + 1
    
    If GA >= 0 Then
        tbMP(nTeam) = tbMP(nTeam) + 1
        If ResultAway = "W" Then
        tbW(nTeam) = tbW(nTeam) + 1
        ElseIf ResultAway = "D" Then
        tbD(nTeam) = tbD(nTeam) + 1
        Else
        tbL(nTeam) = tbL(nTeam) + 1
        End If
        tbPoints(nTeam) = tbW(nTeam) * 3 + tbD(nTeam)
        tbGF(nTeam) = tbGF(nTeam) + GA
        tbGA(nTeam) = tbGA(nTeam) + GF
    End If
    
        Points(nTeam) = Points(nTeam) + AwayPoints

        FormPtsAway = 0
        For k = 5 To 2 Step -1
            Form(nTeam, k) = Form(nTeam, k - 1)
            If k <= 3 Then
                If Form(nTeam, k - 1) = "W" Then FormPtsAway = FormPtsAway + 1
                If Form(nTeam, k - 1) = "L" Then FormPtsAway = FormPtsAway - 1
            End If
        Next k
        
        If nGame(nTeam) >= 1 Then
            Form(nTeam, 1) = ResultAway
            If Form(nTeam, 1) = "W" Then FormPtsAway = FormPtsAway + 1
            If Form(nTeam, 1) = "L" Then FormPtsAway = FormPtsAway - 1
        End If

    If Not (GF = -1) And Not (GA = -1) Then
'        Call SPIAdjust(spi_off(iHome(I)), spi_def(iHome(I)), spiGF(I), spiGA(I), GF_guess(I), GA_guess(I))
'        Call SPIAdjust(spi_off(iAway(I)), spi_def(iAway(I)), spiGA(I), spiGF(I), GA_guess(I), GF_guess(I))
        Call SPIAdjust3(spi_off(iHome(I)), spi_def(iHome(I)), spiGF(I), spiGA(I), GF, GA, FormPtsHome)
        Call SPIAdjust3(spi_off(iAway(I)), spi_def(iAway(I)), spiGA(I), spiGF(I), GA, GF, FormPtsAway)
    End If
        
        

    
    'Call WriteTeamToTeamPage3(AwayTeam, HomeTeam, AwayTeam, ii(nTeam), jj(nTeam), matchMonth, matchMonthOld(nTeam), matchDay, matchWkDay, matchTime, _
    Game, GF, GA, nGame(nTeam), Points(nTeam), nR1, nG1, nB1)
    
    'Call WriteTeamToTeamPage3(AwayTeam, HomeTeam, AwayTeam, ii(nTeam), jj(nTeam), matchMonth, matchMonthOld(nTeam), matchDay, matchWkDay, matchTime, _
    Game, GF, GA, nGame(nTeam), Points(nTeam), nR1, nG1, nB1)
    
    Next I

    ni = 5
    nj = 8
    
    For I = 1 To nClubs
        'Sheets(shtTable).Cells(ni + I, nj + 1) = tbMP(I)
        'Sheets(shtTable).Cells(ni + I, nj + 2) = tbW(I)
        'Sheets(shtTable).Cells(ni + I, nj + 3) = tbD(I)
        'Sheets(shtTable).Cells(ni + I, nj + 4) = tbL(I)
        'Sheets(shtTable).Cells(ni + I, nj + 5) = tbGF(I)
        'Sheets(shtTable).Cells(ni + I, nj + 6) = tbGA(I)
        'Sheets(shtTable).Cells(ni + I, nj + 7) = tbGF(I) - tbGA(I)
        'Sheets(shtTable).Cells(ni + I, nj + 8) = tbPoints(I)
        tbTotPoints(I) = tbPoints(I) * 1000 + tbGF(I) - tbGA(I) + tbGA(I) / 100
        ptsBin(I, tbPoints(I) + 1) = ptsBin(I, tbPoints(I) + 1) + 1
        
        'For k = 5 To 1 Step -1
            'Sheets(shtTable).Cells(ni + I, nj + 15 - k) = Form(I, k)
        'Next k
        'Sheets(shtTable).Cells(ni + I, nj + 15) = nextOppo(I)
        'Sheets(shtTable).Cells(ni + I, nj + 16) = nextGame(I)
    Next I



For I = 1 To nClubs
    Rank(I) = I
Next I


'If nGameTotal > 0 Then
'For m = 1 To nClubs
    'Sheets(shtTable).Cells(ni + m, nj - 3) = rank(m)
'Next m
maxRank = 1
For I = 1 To nClubs

maxRankOld = maxRank
'tempPoints = Sheets(shtTable).Cells(ni + Rank(i), nj + 9)
tempPoints = -99
    For k = I To nClubs
    'If Sheets(shtTable).Cells(ni + rank(k), nj + 9) > tempPoints Then
    If tbTotPoints(Rank(k)) > tempPoints Then
        'tempPoints = Sheets(shtTable).Cells(ni + rank(k), nj + 9)
        tempPoints = tbTotPoints(Rank(k))
        maxRank = Rank(k)
    End If
    Next k
    

    For p = I To nClubs
    If Rank(p) = maxRank Then
    Index = p
    Exit For
    End If
    Next p
    
    For p = Index To I + 1 Step -1
    
    Rank(p) = Rank(p - 1)
    
    Next p
    
    
    Rank(I) = maxRank


Next I

'End If

'Sheets(shtMCPoints).Cells(nMC + 1, 1) = nMC
'Sheets(shtMCTable).Cells(nMC + 1, 1) = nMC
'Sheets(shtMCWin).Cells(nMC + 1, 1) = nMC
'Sheets(shtMCDraw).Cells(nMC + 1, 1) = nMC
'Sheets(shtMCLoss).Cells(nMC + 1, 1) = nMC
'Sheets(shtMCGD).Cells(nMC + 1, 1) = nMC

For m = 1 To nClubs

    'Sheets(shtMCTable).Cells(nMC + 1, m + 1) = Sheets(shtTable).Cells(ni + rank(m), nj - 3)
'    Sheets(shtMCTable).Cells(nMC + 1, Rank(m) + 1) = m
'    Sheets(shtMCPoints).Cells(nMC + 1, m + 1) = tbPoints(m)
'    Sheets(shtMCWin).Cells(nMC + 1, m + 1) = tbW(m)
'    Sheets(shtMCDraw).Cells(nMC + 1, m + 1) = tbD(m)
'    Sheets(shtMCLoss).Cells(nMC + 1, m + 1) = tbL(m)
'    Sheets(shtMCGD).Cells(nMC + 1, m + 1) = tbGF(m) - tbGA(m)
    
    If nMC = 1 Then
        avePoints(m) = tbPoints(m)
        aveW(m) = tbW(m)
        aveD(m) = tbD(m)
        aveL(m) = tbL(m)
        aveGD(m) = tbGF(m) - tbGA(m)
        If Rank(1) = m Then
            nWinLeague(m) = 1
            nTop4(m) = 1
            'Exit For
        End If

        For mm = 2 To 4
         If Rank(mm) = m Then
         nTop4(m) = 1
         'Exit For
         End If
        Next mm
        
        For mm = nClubs - 2 To nClubs
        
         If Rank(mm) = m Then
         nRelegate(m) = 1
         'Exit For
         End If
        Next mm

    Else
        avePoints(m) = avePoints(m) + tbPoints(m)
        aveW(m) = aveW(m) + tbW(m)
        aveD(m) = aveD(m) + tbD(m)
        aveL(m) = aveL(m) + tbL(m)
        aveGD(m) = aveGD(m) + tbGF(m) - tbGA(m)
        
        If Rank(1) = m Then
            nWinLeague(m) = nWinLeague(m) + 1
            nTop4(m) = nTop4(m) + 1
            'Exit For
        End If

        For mm = 2 To 4
         If Rank(mm) = m Then
         nTop4(m) = nTop4(m) + 1
         'Exit For
         End If
        Next mm
        
        For mm = nClubs - 2 To nClubs
        
         If Rank(mm) = m Then
         nRelegate(m) = nRelegate(m) + 1
         'Exit For
         End If
        Next mm

    End If
        
    
Next m

If Int(nMC / 1000) * 1000 = nMC Then
    Call UpdateMCTable3(shtMCSummary, shtSPI, aveW, aveD, aveL, aveGD, nWinLeague, nTop4, nRelegate, nMC, _
    timeStart, minElapsed, secElapsed, ptsBin, False)
End If

 If nMC = nMCTotal Then
    Unload ufProgress
    'Application.ScreenUpdating = True
End If

If bCancel = True Then
    Call YesNoMessageBox
    If bstop = True Then
        Unload ufProgress
        nMCTotal = nMC
        Exit For
    Else
        bCancel = False
        bstop = False
    End If
End If

Next nMC


Call UpdateMCTable3(shtMCSummary, shtSPI, aveW, aveD, aveL, aveGD, nWinLeague, nTop4, nRelegate, nMCTotal, _
timeStart, minElapsed, secElapsed, ptsBin, True)

'Call UpdateMCTableHTML(shtMCSummaryHTML, shtSPI, aveW, aveD, aveL, aveGD, nWinLeague, nTop4, nRelegate, nMCTotal, _
'timeStart, minElapsed, secElapsed)

Application.ScreenUpdating = False

If bLogo Then
    Call InsertLogo(shtMCSummary, shtDashBoard)
End If

Application.ScreenUpdating = True
Range("A1").Select
 

    Sheets(shtTable).Protect ("pineapple")
    Sheets(shtTableNew).Protect ("pineapple")
    Sheets(shtDashBoard).Protect ("pineapple")
    Sheets(shtCalendar).Protect ("pineapple")
    Sheets(shtSPI).Protect ("pineapple")
    Sheets(shtMCSummary).Protect ("pineapple")
    'Sheets(shtMCTable).Protect ("pineapple")
    'Sheets(shtMCGF).Protect ("pineapple")
    'Sheets(shtMCGA).Protect ("pineapple")
    'Sheets(shtMCGD).Protect ("pineapple")
    
    'Sheets(shtMCLoss).Protect ("pineapple")
    'Sheets(shtMCDraw).Protect ("pineapple")
    'Sheets(shtMCWin).Protect ("pineapple")
    'Sheets(shtMCPoints).Protect ("pineapple")
    

End Sub

Sub YesNoMessageBox()
 
Dim Answer As String
Dim MyNote As String
 
    'Place your text here
    MyNote = "Do you really want to stop?"
 
    'Display MessageBox
    Answer = MsgBox(MyNote, vbQuestion + vbYesNo, "Confirm")
 
    If Answer = vbNo Then
        'Code for No button Press
        'MsgBox "You pressed NO!"
        bstop = False
    Else
        'Code for Yes button Press
        MsgBox "OK.  Stop now."
        bstop = True
    End If
 
End Sub

Sub UpdateMCTable3(shtMCSummary, shtSPI, aveW, aveD, aveL, aveGD, nWinLeague, nTop4, nRelegate, nMCTotal, _
timeStart, minElapsed, secElapsed, ptsBin, bUpdate)

Dim timeNow As Long
Dim strRange1, strRange2, strRange3, strRange4, strRange5 As String

strRange1 = "B1:EU" & nClubs + 1
strRange2 = "T2:EJ" & nClubs + 1
strRange3 = "B2:B" & nClubs + 1
strRange4 = "K2:K" & nClubs + 1
strRange5 = "J2:J" & nClubs + 1


    Sheets(shtMCSummary).Select
    
    Application.ScreenUpdating = False
  
'    Range("B1:EU25").Select
    Range(strRange1).Select
    ActiveWorkbook.Worksheets(shtMCSummary).sort.SortFields.Clear
    ActiveWorkbook.Worksheets(shtMCSummary).sort.SortFields.Add Key:=Range( _
        strRange3), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
        
'    ActiveWorkbook.Worksheets(shtMCSummary).sort.SortFields.Add Key:=Range( _
'        "B2:B25"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
'        xlSortNormal

    With ActiveWorkbook.Worksheets(shtMCSummary).sort
'        .SetRange Range("B1:EU25")
        .SetRange Range(strRange1)
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    Range("A1").Select

For m = 1 To nClubs
        
    Cells(m + 1, 4) = spi_temp(m, 3)
    Cells(m + 1, 5) = spi_temp(m, 4)
    Cells(m + 1, 6) = spi_temp(m, 5)
    
    Cells(m + 1, 7) = aveW(m) / nMCTotal
    Cells(m + 1, 8) = aveD(m) / nMCTotal
    Cells(m + 1, 9) = aveL(m) / nMCTotal
    Cells(m + 1, 10) = aveGD(m) / nMCTotal
    Cells(m + 1, 12) = nWinLeague(m) / nMCTotal
    Cells(m + 1, 13) = nTop4(m) / nMCTotal
    Cells(m + 1, 14) = nRelegate(m) / nMCTotal
    
    If bUpdate Then
'        Range("T2:EJ25").Select
        Range(strRange2).Select
        Selection.FormatConditions.Delete

        For j = 1 To 6 * (nClubs - 1)
            Cells(m + 1, j + 19) = ptsBin(m, j)
        Next j
        
'        Range("T2:EJ25").Select
        Range(strRange2).Select
        Selection.FormatConditions.AddColorScale ColorScaleType:=3
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        Selection.FormatConditions(1).ColorScaleCriteria(1).Type = _
            xlConditionValueLowestValue
        With Selection.FormatConditions(1).ColorScaleCriteria(1).FormatColor
            .ThemeColor = xlThemeColorDark1
            .TintAndShade = -4.99893185216834E-02
        End With
        Selection.FormatConditions(1).ColorScaleCriteria(2).Type = _
            xlConditionValuePercentile
        Selection.FormatConditions(1).ColorScaleCriteria(2).Value = 40
        With Selection.FormatConditions(1).ColorScaleCriteria(2).FormatColor
            .ThemeColor = xlThemeColorAccent6
            .TintAndShade = 0.799981688894314
        End With
        Selection.FormatConditions(1).ColorScaleCriteria(3).Type = _
            xlConditionValueHighestValue
        With Selection.FormatConditions(1).ColorScaleCriteria(3).FormatColor
            .Color = 8109667
            .TintAndShade = 0
        End With
    End If
Next m
    
    Sheets(shtMCSummary).Select
'    Range("B1:EU25").Select
    Range(strRange1).Select
    ActiveWorkbook.Worksheets(shtMCSummary).sort.SortFields.Clear
'    ActiveWorkbook.Worksheets(shtMCSummary).sort.SortFields.Add Key:=Range( _
'        "k2:k25"), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
'        xlSortNormal
    ActiveWorkbook.Worksheets(shtMCSummary).sort.SortFields.Add Key:=Range( _
        strRange4), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
        xlSortNormal
'    ActiveWorkbook.Worksheets(shtMCSummary).sort.SortFields.Add Key:=Range( _
'        "j2:j25"), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
'        xlSortNormal
    ActiveWorkbook.Worksheets(shtMCSummary).sort.SortFields.Add Key:=Range( _
        strRange5), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets(shtMCSummary).sort
'        .SetRange Range("B1:EU25")
        .SetRange Range(strRange1)
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With

    Application.ScreenUpdating = True
    
    timeNow = Timer
    minElapsed = Int((timeNow - timeStart) / 60)
    secElapsed = Round((timeNow - timeStart - minElapsed * 60), 0)
    
    
    Cells(nClubs + 5, 3) = nMCTotal
    Cells(nClubs + 6, 3) = minElapsed
    Cells(nClubs + 6, 5) = secElapsed
    
    Range("A1").Select
    
'    Sheets("MC Summary").Select
'    Range("B1:O25").Select
'    ActiveWorkbook.Worksheets("MC Summary").Sort.SortFields.Clear
'    ActiveWorkbook.Worksheets("MC Summary").Sort.SortFields.Add Key:=Range( _
'        "I2:I25"), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
'        xlSortNormal
'    ActiveWorkbook.Worksheets("MC Summary").Sort.SortFields.Add Key:=Range( _
'        "H2:H25"), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
'        xlSortNormal
'    With ActiveWorkbook.Worksheets("MC Summary").Sort
'        .SetRange Range("B1:O25")
'        .Header = xlYes
'        .MatchCase = False
'        .Orientation = xlTopToBottom
'        .SortMethod = xlPinYin
'        .Apply
'    End With
'
'    Range("A1").Select
'
End Sub
Sub UpdateMCTableHTML(shtMCSummary, shtSPI, aveW, aveD, aveL, aveGD, nWinLeague, nTop4, nRelegate, nMCTotal, _
timeStart, minElapsed, secElapsed)

Dim timeNow As Long
Dim pctWL, pctT4, pctRel As Integer
Dim strWL, strT4, strRel, sthTable As String
    
    shtTable = "Sheet5"
    
    Sheets(shtMCSummary).Select
        
    Range("A1").Select

For m = 1 To nClubs

    Cells(m + 1, 2) = Sheets(shtTable).Cells(5 + m, 4)
    Cells(m + 1, 3) = Sheets(shtTable).Cells(5 + m, 3)
    Cells(m + 1, 4) = Sheets(shtSPI).Cells(m + 1, 6)
    Cells(m + 1, 5) = Sheets(shtSPI).Cells(m + 1, 7)
    Cells(m + 1, 6) = Round(aveGD(m) / nMCTotal, 0)
    
    Cells(m + 1, 7) = Round(aveW(m) / nMCTotal * 3 + aveD(m) / nMCTotal, 1)

    pctWL = Round(nWinLeague(m) / nMCTotal * 100, 0)
    pctT4 = Round(nTop4(m) / nMCTotal * 100, 0)
    pctRel = Round(nRelegate(m) / nMCTotal * 100, 0)
    
    If pctWL < 1 Then
        strWL = "<1%"
    ElseIf pctWL > 99 Then
        strWL = ">99%"
    Else
        strWL = pctWL & "%"
    End If
    
    If pctT4 < 1 Then
        strT4 = "<1%"
    ElseIf pctT4 > 99 Then
        strT4 = ">99%"
    Else
        strT4 = pctT4 & "%"
    End If
    
    If pctRel < 1 Then
        strRel = "<1%"
    ElseIf pctRel > 99 Then
        strRel = ">99%"
    Else
        strRel = pctRel & "%"
    End If
    
    Cells(m + 1, 8) = strWL
    Cells(m + 1, 9) = strT4
    Cells(m + 1, 10) = strRel
    
Next m
    
    Sheets(shtMCSummary).Select
    Range("B1:J21").Select
    ActiveWorkbook.Worksheets(shtMCSummary).sort.SortFields.Clear
    ActiveWorkbook.Worksheets(shtMCSummary).sort.SortFields.Add Key:=Range( _
        "G2:G21"), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets(shtMCSummary).sort.SortFields.Add Key:=Range( _
        "F2:F21"), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets(shtMCSummary).sort
        .SetRange Range("B1:q21")
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
   

    
    Range("A1").Select
    
'    Sheets("MC Summary").Select
'    Range("B1:O21").Select
'    ActiveWorkbook.Worksheets("MC Summary").Sort.SortFields.Clear
'    ActiveWorkbook.Worksheets("MC Summary").Sort.SortFields.Add Key:=Range( _
'        "I2:I21"), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
'        xlSortNormal
'    ActiveWorkbook.Worksheets("MC Summary").Sort.SortFields.Add Key:=Range( _
'        "H2:H21"), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:= _
'        xlSortNormal
'    With ActiveWorkbook.Worksheets("MC Summary").Sort
'        .SetRange Range("B1:O21")
'        .Header = xlYes
'        .MatchCase = False
'        .Orientation = xlTopToBottom
'        .SortMethod = xlPinYin
'        .Apply
'    End With
'
'    Range("A1").Select
'
End Sub
Sub readSPI3(spi_off, spi_def, subRating, spi_off_ave, spi_def_ave, week, newspiWeek)

For I = 1 To nClubs
If week = 0 Then
    spi_off(I) = spi_temp(I, 1)
    spi_def(I) = spi_temp(I, 2)
Else
    spi_off(I) = spi_temp(I, 3)
    spi_def(I) = spi_temp(I, 4)
End If
    subRating(I) = spi_temp(I, 5)
Next I
    newspiWeek = newspiWeek
spi_off_ave = 0
spi_def_ave = 0
For I = 1 To nClubs
    spi_off_ave = spi_off_ave + spi_off(I)
    spi_def_ave = spi_def_ave + spi_def(I)
Next I
    spi_off_ave = spi_off_ave / nClubs
    spi_def_ave = spi_def_ave / nClubs
End Sub
Sub ModelLeague3(bLogo, bPredict, bWriteTeam, bWriteCal, nRows, shtTableNew)
    
    Dim ii(20), jj(20), nGame(20), Points(20) As Integer
    Dim matchMonthOld(20) As String
    Dim shtTable, shtFixture, shtDashBoard, shtCalendar, shtSPI, shtSPIHist As String
    Dim ShtTableHTML As String
    Dim TgSheet As String
    Dim w, h As Integer
    Dim iStart, jStart As Integer
    Dim LastMatchDate(20) As Date
    Dim matchDay As Integer
    Dim matchMonth, matchWkDay As String
    Dim matchTime As String
    Dim ResultHome, ResultAway As String
    Dim GF, GA, HomePoints, AwayPoints As Integer
'    Dim HomeTeam, AwayTeam As String
    Dim HomeTeamNext, AwayTeamNext As String
    Dim nTeam, iBlk, jBlk As Integer
    Dim m, n As Integer
    Dim bNewCol As Boolean
    Dim widthCol As Integer
    Dim TimeZone As String
    Dim timecol As Integer
    Dim pic As Object
    Dim nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1 As Integer
    Dim tbPoints(20), tbMP(20), tbW(20), tbD(20), tbL(20), tbGA(20), tbGF(20) As Integer
    Dim Form(20, 5) As String
    Dim nextOppo(20), nextGame(20) As String
    Dim Rank(20) As Integer
    Dim strRange1, strRange2 As String
    Dim bDelete As Boolean
    Dim nRowCal, ntmpRowCal As Integer
    Dim spi_off(20), spi_def(20), subRating(20), spi_off_ave, spi_def_ave As Single
    Dim RestDaysHome, RestDaysAway As Integer

    Dim homeadvtg As Single
    Dim totalGoals, GoalFactor, AveGoals As Single

    Dim HomeProb(7), AwayProb(7), HomeProbAcc(7), AwayProbAcc(7) As Single
    Dim HomeRND(380), AwayRND(380) As Single
    Dim spiWk As Integer
    Dim tmpstring As String
    Dim mBlk, nBlk As Integer
    Dim timeStart, timeNow As Long
    Dim secElapsed, minElapsed As Integer
    Dim FormPtsHome, FormPtsAway As Integer
    
    Dim GA_guess(380), GF_guess(380) As Integer
    
    Application.ScreenUpdating = False
    ufProgress.LabelProgress.Width = 0
    ufProgress.CommandButtonStop.Visible = False
    ufProgress.Show
    
    timeStart = Timer
    
    shtTable = "Sheet5"
    shtFixture = "fixtures"
    TgSheet = "Fixtures_by_Clubs"
    shtDashBoard = "Dashboard"
    'shtTableNew = "TableNG"
    'shtTableNew = "Table"
    shtCalendar = "Fixtures_by_Date"
    shtSPI = "SPI"
    shtSPIHist = "SPI_History"
    ShtTableHTML = "TableWeb"

    
    Sheets(TgSheet).Unprotect ("pineapple")
    Sheets(shtTable).Unprotect ("pineapple")
    Sheets(shtTableNew).Unprotect ("pineapple")
    Sheets(shtDashBoard).Unprotect ("pineapple")
    Sheets(shtCalendar).Unprotect ("pineapple")
    Sheets(shtSPI).Unprotect ("pineapple")
    Sheets(shtSPIHist).Unprotect ("pineapple")
    Sheets(shtFixture).Unprotect ("pineapple")
    
    Sheets(shtFixture).Range("T2:AV381").ClearContents
    
    If bLogo = True Then
        Sheets(TgSheet).Select
    
        For Each pic In ActiveSheet.Pictures
             pic.Delete
        Next pic
    End If
    
'    Sheets(shtTableNew).Activate

'Single Column
    w = 12
    h = 52

    mBlk = 20
    nBlk = 1

    widthCol = 12

    For I = 1 To nClubs
        ii(I) = 1
        jj(I) = 1
        matchMonthOld(I) = ""
    Next I
    
    matchMonth = ""
    matchDay = 0
    spi_off_ave = 0
    spi_def_ave = 0
    For I = 1 To nClubs
        ii(I) = 1
        jj(I) = 1
        nGame(I) = 0
        Points(I) = 0
        matchMonthOld(I) = ""
        tbPoints(I) = 0
        tbMP(I) = 0
        tbW(I) = 0
        tbD(I) = 0
        tbL(I) = 0
        tbGF(I) = 0
        tbGA(I) = 0
        'spi_off(I) = Sheets(shtSPI).Cells(I + 1, 3)
        'spi_def(I) = Sheets(shtSPI).Cells(I + 1, 4)
        'subRating(I) = Sheets(shtSPI).Cells(I + 1, 5)
        'SPI_Off_ave = SPI_Off_ave + spi_off(I)
        'SPI_Def_ave = SPI_Def_ave + spi_def(I)
        For j = 1 To 5
        Form(I, j) = ""
        Next j
        nextOppo(I) = ""
        nextGame(I) = ""
        LastMatchDate(I) = "8 / 1 / 18"
    Next I
    
    Call readSPI3(spi_off, spi_def, subRating, spi_off_ave, spi_def_ave, 0, spiWk)
    
    homeadvtg = 1.1
    AveGoals = 2.85
       
    nRowCal = 1
    ntmpRowCal = 1
    
    For I = 1 To nClubs
        LastMatchDate(I) = "8 / 1 / 18"
    Next I
    
    For I = 1 To nTotFixtures

    pctdone = I / nTotFixtures
    timeNow = Timer
    minElapsed = Int((timeNow - timeStart) / 60)
    secElapsed = Round((timeNow - timeStart - minElapsed * 60), 0)
    
    With ufProgress
        .LabelCaption.Caption = "Calculate Probability and Update Table for Game " & I & " of " & nTotFixtures
        .LabelTime.Caption = "Elapsed time: " & minElapsed & " min " & secElapsed & " sec"
        .LabelProgress.Width = pctdone * (.FrameProgress.Width)
    End With

    DoEvents
    
'    Sheets(shtTableNew).Activate
    Sheets(shtFixture).Activate

'    nMatchwk = Sheets(shtFixture).Cells(I + 1, 1)
'    matchDate = Sheets(shtFixture).Cells(I + 1, 2)
'    matchMonth = MonthName(Month(matchDate(I)), False)
'    matchDay = Day(matchDate(I))
'    matchWkDay = WeekdayName(Weekday(matchDate(I)), True)
'    matchTime = TimeValue(Sheets(shtFixture).Cells(I + 1, TimeCol).Text)

'    HomeTeam = Sheets(shtFixture).Cells(I + 1, 10)
'    AwayTeam = Sheets(shtFixture).Cells(I + 1, 13)
        
    RestDaysHome = matchDate(I) - LastMatchDate(iHome(I))
    RestDaysAway = matchDate(I) - LastMatchDate(iAway(I))
    
    If RestDaysHome > 7 Then RestDaysHome = 7
    If RestDaysAway > 7 Then RestDaysAway = 7
    
    LastMatchDate(iHome(I)) = matchDate(I)
    LastMatchDate(iAway(I)) = matchDate(I)
    
    If spiWk = nMatchwk(I) Then Call readSPI3(spi_off, spi_def, subRating, spi_off_ave, spi_def_ave, 1, spiWk)
        
'    If IsEmpty(Sheets(shtFixture).Cells(I + 1, 11)) And IsEmpty(Sheets(shtFixture).Cells(I + 1, 12)) Then
    If GF_Temp(I) = -1 And GA_Temp(I) = -1 Then
    
        Call CalGfGa(spiGF(I), spiGA(I), spi_off(iHome(I)), spi_def(iHome(I)), spi_off(iAway(I)), spi_def(iAway(I)), homeadvtg, RestDaysHome, RestDaysAway, subRating(iHome(I)), subRating(iAway(I)), _
        spi_off_ave, spi_def_ave)
        
    Else
        
        Call CalGfGa(spiGF(I), spiGA(I), spi_off(iHome(I)), spi_def(iHome(I)), spi_off(iAway(I)), spi_def(iAway(I)), homeadvtg, RestDaysHome, RestDaysAway, 0, 0, _
        spi_off_ave, spi_def_ave)
            
    End If
    
    
    
    
    'spiGF(I) = spiGF(I) * GoalFactor
    'spiGA(I) = spiGA(I) * GoalFactor
    



        Winpct(I) = 0
        DrawPct(I) = 0
        LossPct(I) = 0
        For m = 0 To 6
            HomeProbAcc(m + 1) = 0
            AwayProbAcc(m + 1) = 0
        Next m
        For m = 0 To 6
            AwayProb(m + 1) = Poisson(spiGA(I), m)
            For p = 0 To m
                AwayProbAcc(m + 1) = AwayProbAcc(m + 1) + AwayProb(p + 1)
            Next p
            For n = 0 To 6
                If m = 0 Then
                    HomeProb(n + 1) = Poisson(spiGF(I), n)
                For p = 0 To n
                    HomeProbAcc(n + 1) = HomeProbAcc(n + 1) + HomeProb(p + 1)
                Next p
                End If
                If m = n Then
                    DrawPct(I) = DrawPct(I) + AwayProb(m + 1) * HomeProb(n + 1)
                ElseIf m < n Then
                    Winpct(I) = Winpct(I) + AwayProb(m + 1) * HomeProb(n + 1)
                Else
                    LossPct(I) = LossPct(I) + AwayProb(m + 1) * HomeProb(n + 1)
                End If
            Next n
        Next m

        
'        If IsEmpty(Sheets(shtFixture).Cells(I + 1, 11)) And IsEmpty(Sheets(shtFixture).Cells(I + 1, 12)) And bPredict = True Then

        If GF_Temp(I) = -1 And GA_Temp(I) = -1 And bPredict = True Then
        
        GF_guess(I) = 6
        GA_guess(I) = 6
        
        Randomize
        HomeRND(I) = Rnd
'        HomeRND = 0.5

        
        For m = 0 To 6
        If HomeRND(I) <= HomeProbAcc(m + 1) Then
            GF_guess(I) = m
            Exit For
        End If
        Next m
        
        Randomize
        AwayRND(I) = Rnd
'        AwayRND = 0.5
        For m = 0 To 6
        If AwayRND(I) <= AwayProbAcc(m + 1) Then
            GA_guess(I) = m
            Exit For
        End If
        Next m
        
'        For m = 0 To 6
'            Sheets(shtFixture).Cells(I + 1, 29 + m) = HomeProbAcc(m + 1)
'            Sheets(shtFixture).Cells(I + 1, 36 + m) = AwayProbAcc(m + 1)
'        Next m
        

        
        Else
            GF_guess(I) = GF_Temp(I)
            GA_guess(I) = GA_Temp(I)
            HomeRND(I) = -1
            AwayRND(I) = -1
        End If
        
'        HomeTeam = Sheets(shtFixture).Cells(I + 1, 10)
'        AwayTeam = Sheets(shtFixture).Cells(I + 1, 13)
    
'        For k = 1 To nClubs
'        If HomeTeam = Sheets(shtSPI).Cells(k + 1, 2) Then
'            iHome = k
'            Exit For
'        End If
'        Next k
'
'        For k = 1 To nClubs
'        If AwayTeam = Sheets(shtSPI).Cells(k + 1, 2) Then
'            iAway = k
'            Exit For
'        End If
'        Next k
'

        
'        Call SPIAdjust(spi_off(iHome(I)), spi_def(iHome(I)), spiGF(I), spiGA(I), GF_guess(I), GA_guess(I))
'        Call SPIAdjust(spi_off(iAway(I)), spi_def(iAway(I)), spiGA(I), spiGF(I), GA_guess(I), GF_guess(I))
        
    If Not (GF_guess(I) = -1) And Not (GA_guess(I) = -1) Then
            
        GF = GF_guess(I)
        GA = GA_guess(I)
                
'        Call SPIAdjust(spi_off(iHome), spi_def(iHome), spiGF(I), spiGA(I), GF, GA)
'        Call SPIAdjust(spi_off(iAway), spi_def(iAway), spiGA(I), spiGF(I), GA, GF)
                
'    Sheets(shtFixture).Cells(I + 1, 43) = spi_off(iHome)
'    Sheets(shtFixture).Cells(I + 1, 44) = spi_def(iHome)
'    Sheets(shtFixture).Cells(I + 1, 45) = spi_off(iAway)
'    Sheets(shtFixture).Cells(I + 1, 46) = spi_def(iAway)
        
        If GF > GA Then
            ResultHome = "W"
            ResultAway = "L"
            HomePoints = 3
            AwayPoints = 0
        ElseIf GF = GA Then
            ResultHome = "D"
            ResultAway = "D"
            HomePoints = 1
            AwayPoints = 1
        Else
            ResultHome = "L"
            ResultAway = "W"
            HomePoints = 0
            AwayPoints = 3
        End If
    Else
        GA = -1
        GF = -1
    End If
    
'    Call FindTeamNo(HomeTeam, nTeam, mblk, nblk, iBlk, jBlk, nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1)
'    nGame(nTeam) = nGame(nTeam) + 1


    nTeam = iHome(I)
    
    nGame(nTeam) = nGame(nTeam) + 1


    If GA >= 0 Then
        tbMP(nTeam) = tbMP(nTeam) + 1
        If ResultHome = "W" Then
            tbW(nTeam) = tbW(nTeam) + 1
            ElseIf ResultHome = "D" Then
            tbD(nTeam) = tbD(nTeam) + 1
        Else
            tbL(nTeam) = tbL(nTeam) + 1
        End If
        tbPoints(nTeam) = tbW(nTeam) * 3 + tbD(nTeam)
        tbGF(nTeam) = tbGF(nTeam) + GF
        tbGA(nTeam) = tbGA(nTeam) + GA
        

        Points(nTeam) = Points(nTeam) + HomePoints
        FormPtsHome = 0
        For k = 5 To 2 Step -1
            Form(nTeam, k) = Form(nTeam, k - 1)
            If k <= 3 Then
                If Form(nTeam, k - 1) = "W" Then FormPtsHome = FormPtsHome + 1
                If Form(nTeam, k - 1) = "L" Then FormPtsHome = FormPtsHome - 1
            End If
        Next k
        
        If nGame(nTeam) >= 1 Then
            Form(nTeam, 1) = ResultHome
            If Form(nTeam, 1) = "W" Then FormPtsHome = FormPtsHome + 1
            If Form(nTeam, 1) = "L" Then FormPtsHome = FormPtsHome - 1
        End If
                
        If nGame(nTeam) = nMaxGamesPerTeam Then
            nextOppo(nTeam) = ""
            nextGame(nTeam) = ""
        Else
            For k = I To nTotFixtures - 1
'                HomeTeamNext = Sheets(shtFixture).Cells(k + 1, 10)
'                AwayTeamNext = Sheets(shtFixture).Cells(k + 1, 13)
                HomeTeamNext = HomeTeam(k + 1)
                AwayTeamNext = AwayTeam(k + 1)
                If HomeTeamNext = HomeTeam(I) Then
                    nextOppo(nTeam) = AwayTeamNext
                    nextGame(nTeam) = "H"
                    Exit For
                ElseIf AwayTeamNext = HomeTeam(I) Then
                    nextOppo(nTeam) = HomeTeamNext
                    nextGame(nTeam) = "A"
                    Exit For
                End If
            Next k
        End If
    ElseIf nGame(nTeam) = 1 Then
    
        nextOppo(nTeam) = AwayTeam(I)
        nextGame(nTeam) = "H"
    
    End If
    

    
'    Sheets(shtSPIHist).Cells(nTeam + 1, nGame(nTeam) + 3) = spi_off(nTeam)
'    Sheets(shtSPIHist).Cells(nTeam + 21 + 3, nGame(nTeam) + 3) = spi_def(nTeam)
        
    
'    Call FindTeamNo(AwayTeam, nTeam, mblk, nblk, iBlk, jBlk, nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1)
'    nGame(nTeam) = nGame(nTeam) + 1
    
    
    nTeam = iAway(I)
    nGame(nTeam) = nGame(nTeam) + 1
    

    
    If GA >= 0 Then
        tbMP(nTeam) = tbMP(nTeam) + 1
        If ResultAway = "W" Then
        tbW(nTeam) = tbW(nTeam) + 1
        ElseIf ResultAway = "D" Then
        tbD(nTeam) = tbD(nTeam) + 1
        Else
        tbL(nTeam) = tbL(nTeam) + 1
        End If
        tbPoints(nTeam) = tbW(nTeam) * 3 + tbD(nTeam)
        tbGF(nTeam) = tbGF(nTeam) + GA
        tbGA(nTeam) = tbGA(nTeam) + GF
    
        Points(nTeam) = Points(nTeam) + AwayPoints

        FormPtsAway = 0
        For k = 5 To 2 Step -1
            Form(nTeam, k) = Form(nTeam, k - 1)
            If k <= 3 Then
                If Form(nTeam, k - 1) = "W" Then FormPtsAway = FormPtsAway + 1
                If Form(nTeam, k - 1) = "L" Then FormPtsAway = FormPtsAway - 1
            End If
        Next k
        
        If nGame(nTeam) >= 1 Then
            Form(nTeam, 1) = ResultAway
            If Form(nTeam, 1) = "W" Then FormPtsAway = FormPtsAway + 1
            If Form(nTeam, 1) = "L" Then FormPtsAway = FormPtsAway - 1
        End If
        
        If nGame(nTeam) = nMaxGamesPerTeam Then
            nextOppo(nTeam) = ""
            nextGame(nTeam) = ""
        Else
            For k = I To nTotFixtures - 1
'                HomeTeamNext = Sheets(shtFixture).Cells(k + 1, 10)
'                AwayTeamNext = Sheets(shtFixture).Cells(k + 1, 13)
                HomeTeamNext = HomeTeam(k + 1)
                AwayTeamNext = AwayTeam(k + 1)
                If HomeTeamNext = AwayTeam(I) Then
                    nextOppo(nTeam) = AwayTeamNext
                    nextGame(nTeam) = "H"
                    Exit For
                ElseIf AwayTeamNext = AwayTeam(I) Then
                    nextOppo(nTeam) = HomeTeamNext
                    nextGame(nTeam) = "A"
                    Exit For
                End If
            Next k
        End If
    ElseIf nGame(nTeam) = 1 Then
    
        nextOppo(nTeam) = HomeTeam(I)
        nextGame(nTeam) = "A"
        
           
    End If
    
    If Not (GF = -1) And Not (GA = -1) Then
'        Call SPIAdjust(spi_off(iHome(I)), spi_def(iHome(I)), spiGF(I), spiGA(I), GF, GA)
'        Call SPIAdjust(spi_off(iAway(I)), spi_def(iAway(I)), spiGA(I), spiGF(I), GA, GF)
        Call SPIAdjust3(spi_off(iHome(I)), spi_def(iHome(I)), spiGF(I), spiGA(I), GF, GA, FormPtsHome)
        Call SPIAdjust3(spi_off(iAway(I)), spi_def(iAway(I)), spiGA(I), spiGF(I), GA, GF, FormPtsAway)
    End If
        
'    Sheets(shtSPIHist).Cells(iHome(I) + 1, nGame(iHome(I)) + 3) = spi_off(iHome(I))
'    Sheets(shtSPIHist).Cells(iHome(I) + 21 + 3, nGame(iHome(I)) + 3) = spi_def(iHome(I))
'    Sheets(shtSPIHist).Cells(iAway(I) + 1, nGame(iAway(I)) + 3) = spi_off(iAway(I))
'    Sheets(shtSPIHist).Cells(iAway(I) + 21 + 3, nGame(iAway(I)) + 3) = spi_def(iAway(I))
    
     If I = nTotFixtures Then
        Unload ufProgress
      End If

    Next I
    
'    Sheets(shtFixture).Activate


Call UpdateRanking4(shtTableNew, shtTable, nClubs, tbMP, tbW, tbD, tbL, tbGF, tbGA, tbPoints, Form, nextOppo, nextGame, Rank)
        
    
'    Sheets(shtTableNew).Activate
    ni = 5
    nj = 8
'
'    For I = 1 To nClubs
'        Sheets(shtTable).Cells(ni + I, nj + 1) = tbMP(I)
'        Sheets(shtTable).Cells(ni + I, nj + 2) = tbW(I)
'        Sheets(shtTable).Cells(ni + I, nj + 3) = tbD(I)
'        Sheets(shtTable).Cells(ni + I, nj + 4) = tbL(I)
'        Sheets(shtTable).Cells(ni + I, nj + 5) = tbGF(I)
'        Sheets(shtTable).Cells(ni + I, nj + 6) = tbGA(I)
'        Sheets(shtTable).Cells(ni + I, nj + 7) = tbGF(I) - tbGA(I)
'        Sheets(shtTable).Cells(ni + I, nj + 8) = tbPoints(I)
'        For k = 5 To 1 Step -1
'            Sheets(shtTable).Cells(ni + I, nj + 15 - k) = Form(I, k)
'        Next k
'        Sheets(shtTable).Cells(ni + I, nj + 15) = nextOppo(I)
'        Sheets(shtTable).Cells(ni + I, nj + 16) = nextGame(I)
'    Next I
'
'
'
'For I = 1 To nClubs
'    Rank(I) = I
'Next I
'
'
'If nGameTotal > 0 Then
'For m = 1 To nClubs
'    Sheets(shtTable).Cells(ni + m, nj - 3) = Rank(m)
'Next m
'maxRank = 1
'For I = 1 To nClubs
'
'maxRankOld = maxRank
'tempPoints = Sheets(shtTable).Cells(ni + Rank(I), nj + 9)
'tempPoints = -99
'    For k = I To nClubs
'    If Sheets(shtTable).Cells(ni + Rank(k), nj + 9) > tempPoints Then
'        tempPoints = Sheets(shtTable).Cells(ni + Rank(k), nj + 9)
'        maxRank = Rank(k)
'    End If
'    Next k
'
'
'    For p = I To nClubs
'    If Rank(p) = maxRank Then
'    Index = p
'    Exit For
'    End If
'    Next p
'
'    For p = Index To I + 1 Step -1
'
'    Rank(p) = Rank(p - 1)
'
'    Next p
'
'
'    Rank(I) = maxRank
'
'
'Next I

'End If


'If shtTableNew = "TableNG" Then
'    Call UpdateTableNG(shtTableNew, shtTable, rank, ni, nj)
'    Call UpdateTable3(shtTableNew, shtTable, nClubs, tbMP, tbW, tbD, tbL, tbGF, tbGA, tbPoints, Form, nextOppo, nextGame, rank, PlayOffWinner)
''Else
'    Call UpdateTable3(shtTableNew, shtTable, rank, ni, nj, "")
        Call UpdateTable3(shtTableNew, shtTable, nClubs, tbMP, tbW, tbD, tbL, tbGF, tbGA, tbPoints, Form, nextOppo, nextGame, Rank, "")
'    Call UpdateHTMLTable(ShtTableHTML, shtTable, Rank, ni, nj)
'End If

    
    ufProgress.LabelProgress.Width = 0
    ufProgress.CommandButtonStop.Visible = False
    ufProgress.Show
    
'    timeStart = Timer
    
    For I = 1 To nTotFixtures
    
    pctdone = I / nTotFixtures
    timeNow = Timer
    minElapsed = Int((timeNow - timeStart) / 60)
    secElapsed = Round((timeNow - timeStart - minElapsed * 60), 0)
    
    With ufProgress
        .LabelCaption.Caption = "Write Probability of Game " & I & " of " & nTotFixtures & " to Spreadsheet."
        
        .LabelTime.Caption = "Elapsed time: " & minElapsed & " min " & secElapsed & " sec"
        .LabelProgress.Width = pctdone * (.FrameProgress.Width)
    End With

    DoEvents
    
        Sheets(shtFixture).Cells(I + 1, 20) = spiGF(I)
        Sheets(shtFixture).Cells(I + 1, 21) = spiGA(I)
    '
    '    Sheets(shtFixture).Cells(I + 1, 47) = spiGF(I)
    '    Sheets(shtFixture).Cells(I + 1, 48) = spiGA(I)
    '
    '    Sheets(shtFixture).Cells(I + 1, 49) = RestDaysHome
    '    Sheets(shtFixture).Cells(I + 1, 50) = RestDaysAway
    '
    '    Sheets(shtFixture).Cells(I + 1, 51) = spi_off_ave
    '    Sheets(shtFixture).Cells(I + 1, 52) = spi_def_ave
    '
    '    Sheets(shtFixture).Cells(I + 1, 43) = spi_off(iHome)
    '    Sheets(shtFixture).Cells(I + 1, 44) = spi_def(iHome)
    '    Sheets(shtFixture).Cells(I + 1, 45) = spi_off(iAway)
    '    Sheets(shtFixture).Cells(I + 1, 46) = spi_def(iAway)

        Sheets(shtFixture).Cells(I + 1, 22) = Winpct(I)
        Sheets(shtFixture).Cells(I + 1, 23) = DrawPct(I)
        Sheets(shtFixture).Cells(I + 1, 24) = LossPct(I)
        If GF_guess(I) > -1 And GA_guess(I) > -1 Then
        
            Sheets(shtFixture).Cells(I + 1, 11) = GF_guess(I)
            Sheets(shtFixture).Cells(I + 1, 12) = GA_guess(I)
    
            Sheets(shtFixture).Cells(I + 1, 25) = GF_guess(I)
            Sheets(shtFixture).Cells(I + 1, 26) = GA_guess(I)
        End If

        If GF_Temp(I) = -1 And GA_Temp(I) = -1 And bPredict = True Then
            Sheets(shtFixture).Cells(I + 1, 27) = HomeRND(I)
            Sheets(shtFixture).Cells(I + 1, 28) = AwayRND(I)
        Else
            Sheets(shtFixture).Cells(I + 1, 27) = ""
            Sheets(shtFixture).Cells(I + 1, 28) = ""
        End If
        
        If I = nTotFixtures Then
            Unload ufProgress
        End If
        
    Next I

    Sheets(shtTableNew).Activate
    
    Cells(30, 3) = minElapsed
    Cells(30, 5) = secElapsed
    Cells(28, 1) = ""
    Application.ScreenUpdating = True
    
    Sheets(TgSheet).Protect ("pineapple")
    Sheets(shtTable).Protect ("pineapple")
    Sheets(shtTableNew).Protect ("pineapple")
    Sheets(shtDashBoard).Protect ("pineapple")
    Sheets(shtCalendar).Protect ("pineapple")
    Sheets(shtSPI).Protect ("pineapple")
    Sheets(shtSPIHist).Protect ("pineapple")
    Sheets(shtFixture).Protect ("pineapple")

End Sub
Sub UpdateRanking3(shtTableNew, shtTable, nClubCount, tableMP, tableW, tableD, tableL, tableGF, tableGA, tablePoints, FormWDL, nextOppoName, nextGameHost, TableRank)
Dim totPoints(20) As Single

    Sheets(shtTableNew).Activate
    ni = 5
    nj = 8
    


For I = 1 To nClubCount
    TableRank(I) = I
    totPoints(I) = tablePoints(I) * 1000 + (tableGF(I) - tableGA(I)) + tableGA(I) / 100
Next I


'If nGameTotal > 0 Then

maxRank = 1
For I = 1 To nClubCount

maxRankOld = maxRank
'tempPoints = Sheets(shtTable).Cells(ni + TableRank(i), nj + 9)
tempPoints = -99
    For k = I To nClubCount
'    If Sheets(shtTable).Cells(ni + TableRank(k), nj + 9) > tempPoints Then
    If totPoints(TableRank(k)) > tempPoints Then
        tempPoints = totPoints(TableRank(k))
        maxRank = TableRank(k)
    End If
    Next k


    For p = I To nClubCount
    If TableRank(p) = maxRank Then
    Index = p
    Exit For
    End If
    Next p

    For p = Index To I + 1 Step -1

    TableRank(p) = TableRank(p - 1)

    Next p


    TableRank(I) = maxRank


Next I

'    For I = 1 To nClubCount
'        Sheets(shtTable).Cells(ni + I, nj + 1) = tableMP(I)
'        Sheets(shtTable).Cells(ni + I, nj + 2) = tableW(I)
'        Sheets(shtTable).Cells(ni + I, nj + 3) = tableD(I)
'        Sheets(shtTable).Cells(ni + I, nj + 4) = tableL(I)
'        Sheets(shtTable).Cells(ni + I, nj + 5) = tableGF(I)
'        Sheets(shtTable).Cells(ni + I, nj + 6) = tableGA(I)
'        Sheets(shtTable).Cells(ni + I, nj + 7) = tableGF(I) - tableGA(I)
'        Sheets(shtTable).Cells(ni + I, nj + 8) = tablePoints(I)
'        For k = 5 To 1 Step -1
'            Sheets(shtTable).Cells(ni + I, nj + 15 - k) = FormWDL(I, k)
'        Next k
'        Sheets(shtTable).Cells(ni + I, nj + 15) = nextOppoName(I)
'        Sheets(shtTable).Cells(ni + I, nj + 16) = nextGameHost(I)
'        Sheets(shtTable).Cells(ni + TableRank(I), nj - 1) = I
'    Next I



End Sub
Sub UpdateRanking4(shtTableNew, shtTable, nClubCount, tableMP, tableW, tableD, tableL, tableGF, tableGA, tablePoints, FormWDL, nextOppoName, nextGameHost, TableRank)
Dim totPoints(20) As Single

    Sheets(shtTableNew).Activate
    ni = 5
    nj = 8
    


For I = 1 To nClubCount
    TableRank(I) = I
    totPoints(I) = tablePoints(I) * 1000 + (tableGF(I) - tableGA(I)) + tableGA(I) / 100
Next I

    Call sort2(totPoints, TableRank, nClubCount)


End Sub
Sub sort(Points, Rank, nCount)
Dim maxRank As Integer
Dim tempPoints As Single

maxRank = 1
For I = 1 To nCount

maxRankOld = maxRank
'tempPoints = Sheets(shtTable).Cells(ni + Rank(i), nj + 9)
tempPoints = -99
    For k = I To nCount
'    If Sheets(shtTable).Cells(ni + Rank(k), nj + 9) > tempPoints Then
    If Points(Rank(k)) > tempPoints Then
        tempPoints = Points(Rank(k))
        maxRank = Rank(k)
    End If
    Next k


    For p = I To nCount
    If Rank(p) = maxRank Then
    Index = p
    Exit For
    End If
    Next p

    For p = Index To I + 1 Step -1

    Rank(p) = Rank(p - 1)

    Next p


    Rank(I) = maxRank


Next I

End Sub
Sub sort2(Points, Rank, nCount)
Dim tmpRank As Integer
Dim tempPoints As Single

tmpRank = 1
For I = nCount To 1 Step -1

    For j = 1 To I - 1
        If Points(Rank(j)) < Points(Rank(j + 1)) Then
            tmpRank = Rank(j)
            Rank(j) = Rank(j + 1)
            Rank(j + 1) = tmpRank
        End If
    Next j
Next I

End Sub
Sub UpdateRanking(shtTableNew, shtTable, nClubCount, tableMP, tableW, tableD, tableL, tableGF, tableGA, tablePoints, FormWDL, nextOppoName, nextGameHost, TableRank)

    Sheets(shtTableNew).Activate
    ni = 5
    nj = 8
    
    For I = 1 To nClubCount
        Sheets(shtTable).Cells(ni + I, nj + 1) = tableMP(I)
        Sheets(shtTable).Cells(ni + I, nj + 2) = tableW(I)
        Sheets(shtTable).Cells(ni + I, nj + 3) = tableD(I)
        Sheets(shtTable).Cells(ni + I, nj + 4) = tableL(I)
        Sheets(shtTable).Cells(ni + I, nj + 5) = tableGF(I)
        Sheets(shtTable).Cells(ni + I, nj + 6) = tableGA(I)
        Sheets(shtTable).Cells(ni + I, nj + 7) = tableGF(I) - tableGA(I)
        Sheets(shtTable).Cells(ni + I, nj + 8) = tablePoints(I)
        For k = 5 To 1 Step -1
            Sheets(shtTable).Cells(ni + I, nj + 15 - k) = FormWDL(I, k)
        Next k
        Sheets(shtTable).Cells(ni + I, nj + 15) = nextOppoName(I)
        Sheets(shtTable).Cells(ni + I, nj + 16) = nextGameHost(I)
    Next I



For I = 1 To nClubCount
    TableRank(I) = I
Next I


'If nGameTotal > 0 Then
For m = 1 To nClubCount
    Sheets(shtTable).Cells(ni + m, nj - 3) = TableRank(m)
Next m
maxRank = 1
For I = 1 To nClubCount

maxRankOld = maxRank
'tempPoints = Sheets(shtTable).Cells(ni + TableRank(i), nj + 9)
tempPoints = -99
    For k = I To nClubCount
    If Sheets(shtTable).Cells(ni + TableRank(k), nj + 9) > tempPoints Then
        tempPoints = Sheets(shtTable).Cells(ni + TableRank(k), nj + 9)
        maxRank = TableRank(k)
    End If
    Next k


    For p = I To nClubCount
    If TableRank(p) = maxRank Then
    Index = p
    Exit For
    End If
    Next p

    For p = Index To I + 1 Step -1

    TableRank(p) = TableRank(p - 1)

    Next p


    TableRank(I) = maxRank


Next I

End Sub
Sub UpdateTeam3(bLogo, nRows, shtTableNew)
    Dim ii(20), jj(20), nGame(20), Points(20), nMatchwkTmp As Integer
    Dim tbPoints(20), tbMP(20), tbW(20), tbD(20), tbL(20), tbGA(20), tbGF(20) As Integer
    Dim matchMonthOld(20) As String
    Dim shtTable, shtFixture, shtDashBoard, shtCalendar, shtSPI, shtSPIHist As String
    Dim TgSheet As String
    Dim w, h As Integer
    Dim iStart, jStart As Integer

    Dim matchDayTmp As Integer
    Dim matchMonthTmp, matchWkDay As String
    Dim matchTimeTmp As String
    Dim ResultHome, ResultAway As String
    Dim GF, GA, HomePoints, AwayPoints As Integer
    Dim matchDateTmp As Date
    Dim HomeTeamTmp, AwayTeamTmp As String

    Dim nTeam, iBlk, jBlk As Integer
    Dim m, n As Integer
    Dim bNewCol As Boolean
    Dim widthCol, offset1, offset2 As Integer
    Dim TimeZone As String
    Dim timecol As Integer
    Dim pic As Object
    Dim nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1 As Integer
    Dim bDelete As Boolean
    Dim nRowCal, ntmpRowCal As Integer

    Dim tmpstring, strRange2 As String
    Dim mBlk, nBlk As Integer
    Dim timeStart, timeNow As Long
    Dim secElapsed, minElapsed As Integer
    Dim ni, nj As Integer
    Dim Rank(20) As Integer
    Dim Form(20, 5) As String
    Dim nextOppo(20), nextGame(20) As String
        

    
    shtTable = "Sheet5"
'    shtFixture = "fixtures"
    TgSheet = "Fixtures_by_Clubs"
'    shtDashboard = "Dashboard"
    'shtTableNew = "TableNG"
    'shtTableNew = "Table"
'    shtCalendar = "Fixtures_by_Date"
'    shtSPI = "SPI"
'    shtSPIHist = "SPI_History"
'    ShtTableHTML = "TableWeb"

    
    Sheets(TgSheet).Unprotect ("pineapple")
    Sheets(shtTable).Unprotect ("pineapple")
'    Sheets(shtTableNew).Unprotect ("pineapple")
'    Sheets(shtDashboard).Unprotect ("pineapple")
'    Sheets(shtCalendar).Unprotect ("pineapple")
'    Sheets(shtSPI).Unprotect ("pineapple")
'    Sheets(shtSPIHist).Unprotect ("pineapple")
'    Sheets(shtFixture).Unprotect ("pineapple")

    Sheets(TgSheet).Activate
    Range("A1").Select
    
    Application.ScreenUpdating = False
    If bLogo Then Application.ScreenUpdating = False
    
    timeStart = Timer
    ufProgress.LabelProgress.Width = 0
    ufProgress.CommandButtonStop.Visible = False
    ufProgress.Show
    
    If bLogo = True Then
        For Each pic In ActiveSheet.Pictures
             pic.Delete
        Next pic

        Range("A2:IF52").Select
        Selection.ClearContents
        Range("A1").Select
    
    End If
    
    
    TimeZone = TimeZone1
    timecol = timecol1

'One column per team
    w = 12
    h = 52

    mBlk = 20
    nBlk = 1

    widthCol = 12
    offset1 = 0
    offset2 = 4

'Two columns per team
'    w = 24
'    h = 28
'
'    mBlk = 10
'    nBlk = 2
'
'    widthCol = 12
'    offset1 = 1
'
''   offset2=4 skip 4 rows in 2nd column
'    offset2 = 4

    ni = 5
    nj = 8
    
    matchMonthTmp = ""
    matchDayTmp = 0

    For I = 1 To nClubs
        ii(I) = 1
        jj(I) = 1
        nGame(I) = 0
        Points(I) = 0
        tbPoints(I) = 0
        tbMP(I) = 0
        tbW(I) = 0
        tbD(I) = 0
        tbL(I) = 0
        tbGF(I) = 0
        tbGA(I) = 0
    Next I
    

    
    nRowCal = 1
    
    For I = 1 To nTotFixtures

    pctdone = I / nTotFixtures
    timeNow = Timer
    minElapsed = Int((timeNow - timeStart) / 60)
    secElapsed = Round((timeNow - timeStart - minElapsed * 60), 0)
    
    With ufProgress
        .LabelCaption.Caption = "Update Team Fixture List for Game " & I & " of " & nTotFixtures
        .LabelTime.Caption = "Elapsed time: " & minElapsed & " min " & secElapsed & " sec"
        .LabelProgress.Width = pctdone * (.FrameProgress.Width)
    End With

    DoEvents

    nMatchwkTmp = nMatchwk(I)
    matchDateTmp = matchDate(I)
    matchMonthTmp = MonthName(Month(matchDateTmp), False)
    matchDayTmp = Day(matchDateTmp)
    matchWkDayTmp = WeekdayName(Weekday(matchDateTmp), True)
    matchTimeTmp = matchTime(I)

    HomeTeamTmp = HomeTeam(I)
    AwayTeamTmp = AwayTeam(I)
    
    If Not (GF_Temp(I) = -1) And Not (GA_Temp(I) = -1) Then
            
        GF = GF_Temp(I)
        GA = GA_Temp(I)

        
        If GF > GA Then
            ResultHome = "W"
            ResultAway = "L"
            HomePoints = 3
            AwayPoints = 0
        ElseIf GF = GA Then
            ResultHome = "D"
            ResultAway = "D"
            HomePoints = 1
            AwayPoints = 1
        Else
            ResultHome = "L"
            ResultAway = "W"
            HomePoints = 0
            AwayPoints = 3
        End If
    Else
        GA = -1
        GF = -1
    End If
    
'    Call FindTeamNo(HomeTeam, nTeam, mblk, nblk, iBlk, jBlk, nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1)
'    nGame(nTeam) = nGame(nTeam) + 1

    Call FindTeamNo3(iHome(I), mBlk, nBlk, iBlk, jBlk, nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1)
    nTeam = iHome(I)
    nGame(nTeam) = nGame(nTeam) + 1
    

   If GA >= 0 Then
        tbMP(nTeam) = tbMP(nTeam) + 1
        If ResultHome = "W" Then
        tbW(nTeam) = tbW(nTeam) + 1
        ElseIf ResultHome = "D" Then
        tbD(nTeam) = tbD(nTeam) + 1
        Else
        tbL(nTeam) = tbL(nTeam) + 1
        End If
        tbPoints(nTeam) = tbW(nTeam) * 3 + tbD(nTeam)
        tbGF(nTeam) = tbGF(nTeam) + GF
        tbGA(nTeam) = tbGA(nTeam) + GA
        Points(nTeam) = Points(nTeam) + HomePoints
    End If

    iStart = (iBlk - 1) * h
    jStart = (jBlk - 1) * w
    
    If ii(nTeam) = 1 Then
        ii(nTeam) = ii(nTeam) + iStart
        jj(nTeam) = jj(nTeam) + jStart
        Sheets(TgSheet).Cells(ii(nTeam), jj(nTeam)) = HomeTeamTmp
        ii(nTeam) = ii(nTeam) + 1
        bNewCol = True
    End If
    
    If ii(nTeam) >= iStart + h - offset1 Then
        ii(nTeam) = iStart + offset2
        jj(nTeam) = jj(nTeam) + widthCol
        bNewCol = True
    End If
    
    
    Call WriteTeam3(TgSheet, bLogo, bNewCol, AwayTeamTmp, ii(nTeam), jj(nTeam), matchMonthTmp, matchMonthOld(nTeam), matchDayTmp, matchWkDayTmp, matchTimeTmp, "H", GF, GA, _
        ResultHome, nGame(nTeam), Points(nTeam), nR1, nG1, nB1)
    
        
    If nGame(nTeam) = nMaxGamesPerTeam Then
        Sheets(TgSheet).Cells(iStart + h, jStart + 1) = TimeZone & " Time"
        If Points(nTeam) > 0 Then
            Sheets(TgSheet).Cells(iStart + h - 1, jStart + 7) = "Pts:"
            Sheets(TgSheet).Cells(iStart + h, jStart + 7) = "Rank"
            Sheets(TgSheet).Cells(iStart + h - 1, jStart + 11) = Points(nTeam)
            Sheets(TgSheet).Cells(iStart + h, jStart + 11) = Sheets(shtTable).Cells(ni + nTeam, nj - 1)
        Else
            Sheets(TgSheet).Cells(iStart + h - 1, jStart + 7) = ""
            Sheets(TgSheet).Cells(iStart + h, jStart + 7) = ""
            Sheets(TgSheet).Cells(iStart + h - 1, jStart + 11) = ""
            Sheets(TgSheet).Cells(iStart + h, jStart + 11) = ""
        End If
    End If

'    Sheets(shtSPIHist).Cells(nTeam + 1, nGame(nTeam) + 2) = spi_off(nTeam)
'    Sheets(shtSPIHist).Cells(nTeam + 21 + 3, nGame(nTeam) + 2) = spi_def(nTeam)
        
    
'    Call FindTeamNo(AwayTeam, nTeam, mblk, nblk, iBlk, jBlk, nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1)
'    nGame(nTeam) = nGame(nTeam) + 1
    
    Call FindTeamNo3(iAway(I), mBlk, nBlk, iBlk, jBlk, nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1)
    nTeam = iAway(I)
    nGame(nTeam) = nGame(nTeam) + 1

    
   If GA >= 0 Then
        tbMP(nTeam) = tbMP(nTeam) + 1
        If ResultAway = "W" Then
        tbW(nTeam) = tbW(nTeam) + 1
        ElseIf ResultAway = "D" Then
        tbD(nTeam) = tbD(nTeam) + 1
        Else
        tbL(nTeam) = tbL(nTeam) + 1
        End If
        tbPoints(nTeam) = tbW(nTeam) * 3 + tbD(nTeam)
        tbGF(nTeam) = tbGF(nTeam) + GA
        tbGA(nTeam) = tbGA(nTeam) + GF
        Points(nTeam) = Points(nTeam) + AwayPoints
    End If
    
    iStart = (iBlk - 1) * h
    jStart = (jBlk - 1) * w
    
    If ii(nTeam) = 1 Then
        ii(nTeam) = ii(nTeam) + iStart
        jj(nTeam) = jj(nTeam) + jStart
        Sheets(TgSheet).Cells(ii(nTeam), jj(nTeam)) = AwayTeamTmp
        ii(nTeam) = ii(nTeam) + 1
        bNewCol = True
    End If
    
    If ii(nTeam) >= iStart + h - offset1 Then
        ii(nTeam) = iStart + offset2
        jj(nTeam) = jj(nTeam) + widthCol
        bNewCol = True
    End If
    '
    Call WriteTeam3(TgSheet, bLogo, bNewCol, HomeTeamTmp, ii(nTeam), jj(nTeam), matchMonthTmp, matchMonthOld(nTeam), matchDayTmp, matchWkDayTmp, matchTimeTmp, "A", GA, GF, _
        ResultAway, nGame(nTeam), Points(nTeam), nR1, nG1, nB1)
        
    
'    If nGame(nTeam) = nMaxGamesPerTeam Then
'        Sheets(TgSheet).Cells(iStart + h, jStart + 1) = TimeZone & " Time"
'        If Points(nTeam) > 0 Then
'            Sheets(TgSheet).Cells(iStart + h - 1, jStart + 7) = "Pts:"
'            Sheets(TgSheet).Cells(iStart + h, jStart + 7) = "Rank"
'            Sheets(TgSheet).Cells(iStart + h - 1, jStart + 11) = Points(nTeam)
'            Sheets(TgSheet).Cells(iStart + h, jStart + 11) = Sheets(shtTable).Cells(ni + nTeam, nj - 1)
'        Else
'            Sheets(TgSheet).Cells(iStart + h - 1, jStart + 7) = ""
'            Sheets(TgSheet).Cells(iStart + h, jStart + 7) = ""
'            Sheets(TgSheet).Cells(iStart + h - 1, jStart + 11) = ""
'            Sheets(TgSheet).Cells(iStart + h, jStart + 11) = ""
'        End If
'    End If
    
'    Sheets(shtSPIHist).Cells(nTeam + 1, nGame(nTeam) + 2) = spi_off(nTeam)
'    Sheets(shtSPIHist).Cells(nTeam + 21 + 3, nGame(nTeam) + 2) = spi_def(nTeam)

     If I = nTotFixtures Then
        Unload ufProgress
      End If

    Next I
    
Call UpdateRanking4(shtTableNew, shtTable, nClubs, tbMP, tbW, tbD, tbL, tbGF, tbGA, tbPoints, Form, nextOppo, nextGame, Rank)

For I = 1 To nClubs

    Call FindTeamNo3(Rank(I), mBlk, nBlk, iBlk, jBlk, nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1)

    iStart = (iBlk - 1) * h
    jStart = (jBlk - 1) * w
    Sheets(TgSheet).Cells(iStart + h, jStart + 1) = TimeZone & " Time"
    If Points(nTeam) > 0 Then
        Sheets(TgSheet).Cells(iStart + h - 1, jStart + 7) = "Total Pts:"
        Sheets(TgSheet).Cells(iStart + h, jStart + 7) = "Rank"
        Sheets(TgSheet).Cells(iStart + h - 1, jStart + 11) = Points(Rank(I))
'        Sheets(TgSheet).Cells(iStart + h, jStart + 11) = Sheets(shtTable).Cells(ni + I, nj - 1)
        Sheets(TgSheet).Cells(iStart + h, jStart + 11) = I
    Else
        Sheets(TgSheet).Cells(iStart + h - 1, jStart + 7) = ""
        Sheets(TgSheet).Cells(iStart + h, jStart + 7) = ""
        Sheets(TgSheet).Cells(iStart + h - 1, jStart + 11) = ""
        Sheets(TgSheet).Cells(iStart + h, jStart + 11) = ""
    End If

Next I
    
    Sheets(TgSheet).Select
    
If bLogo Then
    Call SetColor(w, h, widthCol, mBlk, nBlk, TgSheet, shtTable)
End If
    
'    Sheets(shtTableNew).Cells(30, 3) = minElapsed
'    Sheets(shtTableNew).Cells(30, 5) = secElapsed

    Application.ScreenUpdating = True

    Cells(iStart + h + 2, 2) = minElapsed
    Cells(iStart + h + 2, 4) = secElapsed
    Range("A1").Select
    
    Sheets(TgSheet).Protect ("pineapple")
    Sheets(shtTable).Protect ("pineapple")
'    Sheets(shtTableNew).Protect ("pineapple")
'    Sheets(shtDashboard).Protect ("pineapple")
'    Sheets(shtCalendar).Protect ("pineapple")
'    Sheets(shtSPI).Protect ("pineapple")
'    Sheets(shtSPIHist).Protect ("pineapple")
'    Sheets(shtFixture).Protect ("pineapple")

End Sub
Sub UpdateTeam4(bLogo, nRows, shtTableNew, nFixtureStart, nFixtureEnd)
    Dim ii(20), jj(20), nGame(20), Points(20), nMatchwkTmp As Integer
    Dim tbPoints(20), tbMP(20), tbW(20), tbD(20), tbL(20), tbGA(20), tbGF(20) As Integer
    Dim matchMonthOld(20) As String
    Dim shtTable, shtFixture, shtDashBoard, shtCalendar, shtSPI, shtSPIHist As String
    Dim TgSheet As String
    Dim w, h As Integer
    Dim iStart, jStart As Integer

    Dim matchDayTmp As Integer
    Dim matchMonthTmp, matchWkDay As String
    Dim matchTimeTmp As String
    Dim ResultHome, ResultAway As String
    Dim GF, GA, HomePoints, AwayPoints As Integer
    Dim matchDateTmp As Date
    Dim HomeTeamTmp, AwayTeamTmp As String

    Dim nTeam, iBlk, jBlk As Integer
    Dim m, n As Integer
    Dim bNewCol As Boolean
    Dim widthCol, offset1, offset2 As Integer
    Dim TimeZone As String
    Dim timecol As Integer
    Dim pic As Object
    Dim nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1 As Integer
    Dim bDelete As Boolean
    Dim nRowCal, ntmpRowCal As Integer

    Dim tmpstring, strRange2 As String
    Dim mBlk, nBlk As Integer
    Dim timeStart, timeNow As Long
    Dim secElapsed, minElapsed As Integer
    Dim ni, nj As Integer
    Dim Rank(20) As Integer
    Dim Form(20, 5) As String
    Dim nextOppo(20), nextGame(20) As String
        

    
    shtTable = "Sheet5"
'    shtFixture = "fixtures"
    TgSheet = "Fixtures_by_Clubs"
'    shtDashboard = "Dashboard"
    'shtTableNew = "TableNG"
    'shtTableNew = "Table"
'    shtCalendar = "Fixtures_by_Date"
'    shtSPI = "SPI"
'    shtSPIHist = "SPI_History"
'    ShtTableHTML = "TableWeb"

    
    Sheets(TgSheet).Unprotect ("pineapple")
    Sheets(shtTable).Unprotect ("pineapple")
'    Sheets(shtTableNew).Unprotect ("pineapple")
'    Sheets(shtDashboard).Unprotect ("pineapple")
'    Sheets(shtCalendar).Unprotect ("pineapple")
'    Sheets(shtSPI).Unprotect ("pineapple")
'    Sheets(shtSPIHist).Unprotect ("pineapple")
'    Sheets(shtFixture).Unprotect ("pineapple")

    Sheets(TgSheet).Activate
    Range("A1").Select
    
    Application.ScreenUpdating = False
    If bLogo Then Application.ScreenUpdating = False
    
    timeStart = Timer
    ufProgress.LabelProgress.Width = 0
    ufProgress.CommandButtonStop.Visible = False
    ufProgress.Show
    
'    If bLogo = True Then
'        For Each pic In ActiveSheet.Pictures
'             pic.Delete
'        Next pic
'
'        Range("A2:IF52").Select
'        Selection.ClearContents
'        Range("A1").Select
'
'    End If
    
    
    TimeZone = TimeZone1
    timecol = timecol1

'One column per team
    w = 12
    h = 52

    mBlk = 20
    nBlk = 1

    widthCol = 12
    offset1 = 0
    offset2 = 4

'Two columns per team
'    w = 24
'    h = 28
'
'    mBlk = 10
'    nBlk = 2
'
'    widthCol = 12
'    offset1 = 1
'
''   offset2=4 skip 4 rows in 2nd column
'    offset2 = 4

    ni = 5
    nj = 8
    
    matchMonthTmp = ""
    matchDayTmp = 0

    For I = 1 To nClubs
        ii(I) = 1
        jj(I) = 1
        nGame(I) = 0
        Points(I) = 0
        tbPoints(I) = 0
        tbMP(I) = 0
        tbW(I) = 0
        tbD(I) = 0
        tbL(I) = 0
        tbGF(I) = 0
        tbGA(I) = 0
    Next I
    

    
    nRowCal = 1
    
    For I = nFixtureStart To nFixtureEnd

    pctdone = I / nTotFixtures
    timeNow = Timer
    minElapsed = Int((timeNow - timeStart) / 60)
    secElapsed = Round((timeNow - timeStart - minElapsed * 60), 0)
    
    With ufProgress
        .LabelCaption.Caption = "Update Team Fixture List for Game " & I & " of " & nTotFixtures
        .LabelTime.Caption = "Elapsed time: " & minElapsed & " min " & secElapsed & " sec"
        .LabelProgress.Width = pctdone * (.FrameProgress.Width)
    End With

    DoEvents

    nMatchwkTmp = nMatchwk(I)
    matchDateTmp = matchDate(I)
    matchMonthTmp = MonthName(Month(matchDateTmp), False)
    matchDayTmp = Day(matchDateTmp)
    matchWkDayTmp = WeekdayName(Weekday(matchDateTmp), True)
    matchTimeTmp = matchTime(I)

    HomeTeamTmp = HomeTeam(I)
    AwayTeamTmp = AwayTeam(I)
    
    If Not (GF_Temp(I) = -1) And Not (GA_Temp(I) = -1) Then
            
        GF = GF_Temp(I)
        GA = GA_Temp(I)

        
        If GF > GA Then
            ResultHome = "W"
            ResultAway = "L"
            HomePoints = 3
            AwayPoints = 0
        ElseIf GF = GA Then
            ResultHome = "D"
            ResultAway = "D"
            HomePoints = 1
            AwayPoints = 1
        Else
            ResultHome = "L"
            ResultAway = "W"
            HomePoints = 0
            AwayPoints = 3
        End If
    Else
        GA = -1
        GF = -1
    End If
    
'    Call FindTeamNo(HomeTeam, nTeam, mblk, nblk, iBlk, jBlk, nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1)
'    nGame(nTeam) = nGame(nTeam) + 1

    Call FindTeamNo3(iHome(I), mBlk, nBlk, iBlk, jBlk, nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1)
    nTeam = iHome(I)
    nGame(nTeam) = nGame(nTeam) + 1
    

   If GA >= 0 Then
        tbMP(nTeam) = tbMP(nTeam) + 1
        If ResultHome = "W" Then
        tbW(nTeam) = tbW(nTeam) + 1
        ElseIf ResultHome = "D" Then
        tbD(nTeam) = tbD(nTeam) + 1
        Else
        tbL(nTeam) = tbL(nTeam) + 1
        End If
        tbPoints(nTeam) = tbW(nTeam) * 3 + tbD(nTeam)
        tbGF(nTeam) = tbGF(nTeam) + GF
        tbGA(nTeam) = tbGA(nTeam) + GA
        Points(nTeam) = Points(nTeam) + HomePoints
    End If

    iStart = (iBlk - 1) * h
    jStart = (jBlk - 1) * w
    
    If ii(nTeam) = 1 Then
        ii(nTeam) = ii(nTeam) + iStart
        jj(nTeam) = jj(nTeam) + jStart
        Sheets(TgSheet).Cells(ii(nTeam), jj(nTeam)) = HomeTeamTmp
        ii(nTeam) = ii(nTeam) + 1
        bNewCol = True
    End If
    
    If ii(nTeam) >= iStart + h - offset1 Then
        ii(nTeam) = iStart + offset2
        jj(nTeam) = jj(nTeam) + widthCol
        bNewCol = True
    End If
    
    
    Call WriteTeam4(TgSheet, bLogo, bNewCol, AwayTeamTmp, ii(nTeam), jj(nTeam), matchMonthTmp, matchMonthOld(nTeam), matchDayTmp, matchWkDayTmp, matchTimeTmp, "H", GF, GA, _
        ResultHome, nGame(nTeam), Points(nTeam), nR1, nG1, nB1)
    
        
    If nGame(nTeam) = nMaxGamesPerTeam Then
        Sheets(TgSheet).Cells(iStart + h, jStart + 1) = TimeZone & " Time"
        If Points(nTeam) > 0 Then
            Sheets(TgSheet).Cells(iStart + h - 1, jStart + 7) = "Pts:"
            Sheets(TgSheet).Cells(iStart + h, jStart + 7) = "Rank"
            Sheets(TgSheet).Cells(iStart + h - 1, jStart + 11) = Points(nTeam)
            Sheets(TgSheet).Cells(iStart + h, jStart + 11) = Sheets(shtTable).Cells(ni + nTeam, nj - 1)
        Else
            Sheets(TgSheet).Cells(iStart + h - 1, jStart + 7) = ""
            Sheets(TgSheet).Cells(iStart + h, jStart + 7) = ""
            Sheets(TgSheet).Cells(iStart + h - 1, jStart + 11) = ""
            Sheets(TgSheet).Cells(iStart + h, jStart + 11) = ""
        End If
    End If

'    Sheets(shtSPIHist).Cells(nTeam + 1, nGame(nTeam) + 2) = spi_off(nTeam)
'    Sheets(shtSPIHist).Cells(nTeam + 21 + 3, nGame(nTeam) + 2) = spi_def(nTeam)
        
    
'    Call FindTeamNo(AwayTeam, nTeam, mblk, nblk, iBlk, jBlk, nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1)
'    nGame(nTeam) = nGame(nTeam) + 1
    
    Call FindTeamNo3(iAway(I), mBlk, nBlk, iBlk, jBlk, nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1)
    nTeam = iAway(I)
    nGame(nTeam) = nGame(nTeam) + 1

    
   If GA >= 0 Then
        tbMP(nTeam) = tbMP(nTeam) + 1
        If ResultAway = "W" Then
        tbW(nTeam) = tbW(nTeam) + 1
        ElseIf ResultAway = "D" Then
        tbD(nTeam) = tbD(nTeam) + 1
        Else
        tbL(nTeam) = tbL(nTeam) + 1
        End If
        tbPoints(nTeam) = tbW(nTeam) * 3 + tbD(nTeam)
        tbGF(nTeam) = tbGF(nTeam) + GA
        tbGA(nTeam) = tbGA(nTeam) + GF
        Points(nTeam) = Points(nTeam) + AwayPoints
    End If
    
    iStart = (iBlk - 1) * h
    jStart = (jBlk - 1) * w
    
    If ii(nTeam) = 1 Then
        ii(nTeam) = ii(nTeam) + iStart
        jj(nTeam) = jj(nTeam) + jStart
        Sheets(TgSheet).Cells(ii(nTeam), jj(nTeam)) = AwayTeamTmp
        ii(nTeam) = ii(nTeam) + 1
        bNewCol = True
    End If
    
    If ii(nTeam) >= iStart + h - offset1 Then
        ii(nTeam) = iStart + offset2
        jj(nTeam) = jj(nTeam) + widthCol
        bNewCol = True
    End If
    '
    Call WriteTeam4(TgSheet, bLogo, bNewCol, HomeTeamTmp, ii(nTeam), jj(nTeam), matchMonthTmp, matchMonthOld(nTeam), matchDayTmp, matchWkDayTmp, matchTimeTmp, "A", GA, GF, _
        ResultAway, nGame(nTeam), Points(nTeam), nR1, nG1, nB1)
        
    
'    If nGame(nTeam) = nMaxGamesPerTeam Then
'        Sheets(TgSheet).Cells(iStart + h, jStart + 1) = TimeZone & " Time"
'        If Points(nTeam) > 0 Then
'            Sheets(TgSheet).Cells(iStart + h - 1, jStart + 7) = "Pts:"
'            Sheets(TgSheet).Cells(iStart + h, jStart + 7) = "Rank"
'            Sheets(TgSheet).Cells(iStart + h - 1, jStart + 11) = Points(nTeam)
'            Sheets(TgSheet).Cells(iStart + h, jStart + 11) = Sheets(shtTable).Cells(ni + nTeam, nj - 1)
'        Else
'            Sheets(TgSheet).Cells(iStart + h - 1, jStart + 7) = ""
'            Sheets(TgSheet).Cells(iStart + h, jStart + 7) = ""
'            Sheets(TgSheet).Cells(iStart + h - 1, jStart + 11) = ""
'            Sheets(TgSheet).Cells(iStart + h, jStart + 11) = ""
'        End If
'    End If
    
'    Sheets(shtSPIHist).Cells(nTeam + 1, nGame(nTeam) + 2) = spi_off(nTeam)
'    Sheets(shtSPIHist).Cells(nTeam + 21 + 3, nGame(nTeam) + 2) = spi_def(nTeam)

     If I = nTotFixtures Then
        Unload ufProgress
      End If

    Next I
    
Call UpdateRanking4(shtTableNew, shtTable, nClubs, tbMP, tbW, tbD, tbL, tbGF, tbGA, tbPoints, Form, nextOppo, nextGame, Rank)

For I = 1 To nClubs

    Call FindTeamNo3(Rank(I), mBlk, nBlk, iBlk, jBlk, nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1)

    iStart = (iBlk - 1) * h
    jStart = (jBlk - 1) * w
    Sheets(TgSheet).Cells(iStart + h, jStart + 1) = TimeZone & " Time"
    If Points(nTeam) > 0 Then
        Sheets(TgSheet).Cells(iStart + h - 1, jStart + 7) = "Total Pts:"
        Sheets(TgSheet).Cells(iStart + h, jStart + 7) = "Rank"
        Sheets(TgSheet).Cells(iStart + h - 1, jStart + 11) = Points(Rank(I))
'        Sheets(TgSheet).Cells(iStart + h, jStart + 11) = Sheets(shtTable).Cells(ni + I, nj - 1)
        Sheets(TgSheet).Cells(iStart + h, jStart + 11) = I
    Else
        Sheets(TgSheet).Cells(iStart + h - 1, jStart + 7) = ""
        Sheets(TgSheet).Cells(iStart + h, jStart + 7) = ""
        Sheets(TgSheet).Cells(iStart + h - 1, jStart + 11) = ""
        Sheets(TgSheet).Cells(iStart + h, jStart + 11) = ""
    End If

Next I
    
    Sheets(TgSheet).Select
    
If bLogo Then
    Call SetColor(w, h, widthCol, mBlk, nBlk, TgSheet, shtTable)
End If
    
'    Sheets(shtTableNew).Cells(30, 3) = minElapsed
'    Sheets(shtTableNew).Cells(30, 5) = secElapsed

    Application.ScreenUpdating = True

    Cells(iStart + h + 2, 2) = minElapsed
    Cells(iStart + h + 2, 4) = secElapsed
    Range("A1").Select
    
    Sheets(TgSheet).Protect ("pineapple")
    Sheets(shtTable).Protect ("pineapple")
'    Sheets(shtTableNew).Protect ("pineapple")
'    Sheets(shtDashboard).Protect ("pineapple")
'    Sheets(shtCalendar).Protect ("pineapple")
'    Sheets(shtSPI).Protect ("pineapple")
'    Sheets(shtSPIHist).Protect ("pineapple")
'    Sheets(shtFixture).Protect ("pineapple")

End Sub
Sub Update_Fixtures_by_Date_With_Score_Change(bLogo, nRows, nFixtures, shtTableNew, nRowCal, nMatchwkTmp, iMonth)

    Dim shtTable, shtFixture, shtDashBoard, shtCalendar As String
    Dim matchDayTmp As Integer
    Dim matchMonthTmp, matchWkDayTmp As String
    Dim matchTimeTmp As String
    Dim ResultHome, ResultAway As String
    Dim GF, GA, HomePoints, AwayPoints As Integer
    Dim matchDateTmp As Date
    Dim HomeTeamTmp, AwayTeamTmp As String
    Dim HomeTeamNext, AwayTeamNext As String
    Dim timecol As Integer
    Dim pic As Object
    Dim nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1 As Integer

    Dim timeStart, timeNow As Long
    Dim secElapsed, minElapsed As Integer
    
        
'    shtTable = "Sheet5"
'    shtFixture = "fixtures"
    shtCalendar = "Fixtures_by_Date"
'    shtDashboard = "Dashboard"

'    Sheets(shtTable).Unprotect ("pineapple")
    Sheets(shtCalendar).Unprotect ("pineapple")
'    Sheets(shtFixture).Unprotect ("pineapple")
    
    Sheets(shtCalendar).Activate
    Range("A1").Select
    
    Application.ScreenUpdating = False
    ufProgress.LabelProgress.Width = 0
    ufProgress.CommandButtonStop.Visible = False
    ufProgress.Show
    
    timeStart = Timer
    
    TimeZone = TimeZone1
    timecol = timecol1
    
    nRowCal = 1
        
    For I = 1 To nFixtures

    pctdone = I / nFixtures
    timeNow = Timer
    minElapsed = Int((timeNow - timeStart) / 60)
    secElapsed = Round((timeNow - timeStart - minElapsed * 60), 0)
    
    With ufProgress
        .LabelCaption.Caption = "Updating Calendar for Game " & I & " of " & nFixtures
        .LabelTime.Caption = "Elapsed time: " & minElapsed & " min " & secElapsed & " sec"
        .LabelProgress.Width = pctdone * (.FrameProgress.Width)
    End With

    DoEvents

    nMatchwkTmp = nMatchwk(I)
    matchDateTmp = matchDate(I)
    matchMonthTmp = MonthName(Month(matchDateTmp), False)
    matchDayTmp = Day(matchDateTmp)
    matchWkDayTmp = WeekdayName(Weekday(matchDateTmp), True)
    matchTimeTmp = matchTime(I)

    HomeTeamTmp = HomeTeam(I)
    AwayTeamTmp = AwayTeam(I)
    
    If Not (GF_Temp(I) = -1) And Not (GA_Temp(I)) Then
            
        GF = GF_Temp(I)
        GA = GA_Temp(I)

    Else
        GA = -1
        GF = -1
    End If


    Call Change_Score_Fixture_by_Date(nRowCal, nRows, shtCalendar, shtFixture, HomeTeamTmp, AwayTeamTmp, GF, GA, matchTimeTmp, nMatchwkTmp, TimeZone, n, I, iMonth)
'    Call FillCalendar3(nRowCal, nRows, shtCalendar, shtFixture, HomeTeamTmp, AwayTeamTmp, GF, GA, matchTimeTmp, nMatchwkTmp, TimeZone, n, I)

     If I = nTotFixtures Then
        Unload ufProgress
      End If

    Next I

    Application.ScreenUpdating = True
    
    Cells(5, 16) = minElapsed
    Cells(5, 18) = secElapsed

    
'    Sheets(shtTable).Protect ("pineapple")
    Sheets(shtCalendar).Protect ("pineapple")
'    Sheets(shtFixture).Protect ("pineapple")

End Sub
Sub Update_Fixtures_by_Date_With_Fixture_Change(nMod, ii, jj, matchWeekOld, iStart, jStart, jCol, iMonth)
    Dim ni, nj As Integer
    Dim matchMonthOld As String
    Dim shtTable, shtTableNew, shtFixture, shtDashBoard As String
    Dim TgSheet As String
    Dim w, h As Integer
    
    Dim matchDayTmp As Integer
    Dim matchMonthTmp, matchWkDayTmp As String
    Dim matchTimeTmp As String
    
    Dim ResultHome, ResultAway As String
    Dim GF, GA As Integer
    Dim matchDateTmp, matchDateOld As Date
    Dim HomeTeamTmp, AwayTeamTmp As String
    Dim nTeam, iBlk, jBlk As Integer
    Dim m, n As Integer
    Dim bNewCol As Boolean
    Dim widthCol As Integer
    'Dim TimeZone As String
    Dim timecol As Integer
    Dim matchWeek As Integer
    Dim PicPath, PicFileName, TempFile As String
    Dim pic As Object
    Dim VenueTmp As String
    
    shtTable = "Sheet5"
    shtFixture = "fixtures"
    TgSheet = "Fixtures_by_Date"
    shtDashBoard = "Dashboard"
    shtTableNew = "Table"
    shtWkPredict = "WeeklyPredict"
    
    Sheets(shtTable).Unprotect ("pineapple")
    Sheets(shtTableNew).Unprotect ("pineapple")
    Sheets(shtDashBoard).Unprotect ("pineapple")
    Sheets(TgSheet).Unprotect ("pineapple")
    

'PicPath = "D:\Users\Jie\Pictures\premier league\logo\small\"
    
    Application.ScreenUpdating = False
    
    If TimeZone1 = "UK" Then
        timecol = 4
    ElseIf TimeZone1 = "EST" Then
        timecol = 3
    ElseIf TimeZone1 = "CST" Then
        timecol = 5
    ElseIf TimeZone1 = "MST" Then
        timecol = 6
    ElseIf TimeZone1 = "PST" Then
        timecol = 7
    Else
        timecol = 3
    End If

    w = 20
    h = 700

    ni = 52
    nj = 8


    m = 7
    n = 3

    widthCol = 13

    
'    matchMonth = ""
'    matchDay = 0
'    matchDateOld = DateValue("1/1/1900")
'    matchMonthOld = ""
'    matchWeek = 0
'    matchWeekOld = 0
    

    
    Sheets(TgSheet).Activate
    
'    Cells.Select
'    Range("A1").Activate
'    Selection.ClearContents
'    ActiveWindow.ScrollRow = 503
'    ActiveWindow.ScrollRow = 493
'    ActiveWindow.ScrollRow = 469
'    ActiveWindow.ScrollRow = 420
'    ActiveWindow.ScrollRow = 230
'    ActiveWindow.ScrollRow = 141
'    ActiveWindow.ScrollRow = 87
'    ActiveWindow.ScrollRow = 29
'    ActiveWindow.ScrollRow = 1
'    Selection.Style = "Normal"
'    With Selection.Font
'        .Name = "Calibri"
'        .Size = 20
'        .Strikethrough = False
'        .Superscript = False
'        .Subscript = False
'        .OutlineFont = False
'        .Shadow = False
'        .Underline = xlUnderlineStyleNone
'        .ThemeColor = xlThemeColorLight1
'        .TintAndShade = 0
'        .ThemeFont = xlThemeFontMinor
'    End With
'
'    For Each pic In ActiveSheet.Pictures
'        pic.Delete
'    Next pic
'
    If nMod = 1 Then
        iStart = 1
        jStart = 1
    
        ii = iStart
        jj = jStart
    
        jCol = 1
        iMonth = 0
    End If
    
    Application.ScreenUpdating = False
    ufProgress.LabelProgress.Width = 0
    ufProgress.CommandButtonStop.Visible = False
    ufProgress.Show
    
    timeStart = Timer
    
    For I = nMod To nTotFixtures
    
    pctdone = I / nTotFixtures
    timeNow = Timer
    minElapsed = Int((timeNow - timeStart) / 60)
    secElapsed = Round((timeNow - timeStart - minElapsed * 60), 0)
    
    With ufProgress
        .LabelCaption.Caption = "Updating Calendar " & I & " of " & nTotFixtures
        .LabelTime.Caption = "Elapsed time: " & minElapsed & " min " & secElapsed & " sec"
        .LabelProgress.Width = pctdone * (.FrameProgress.Width)
    End With

    DoEvents

    nMatchwkTmp = nMatchwk(I)
    matchDateTmp = matchDate(I)
    matchMonthTmp = MonthName(Month(matchDateTmp), False)
    matchDayTmp = Day(matchDateTmp)
    matchWkDayTmp = WeekdayName(Weekday(matchDateTmp), True)
    matchTimeTmp = matchTime(I)
    
    VenueTmp = HomeVenue(I)
    
    If I = nMod Then
        nR = Sheets(shtTable).Cells(ni + iMonth, 27)
        nG = Sheets(shtTable).Cells(ni + iMonth, 28)
        nB = Sheets(shtTable).Cells(ni + iMonth, 29)
            
        nRf = Sheets(shtTable).Cells(ni + iMonth, 30)
        nGf = Sheets(shtTable).Cells(ni + iMonth, 31)
        nBf = Sheets(shtTable).Cells(ni + iMonth, 32)
            
        nR1 = Sheets(shtTable).Cells(ni + iMonth, 33)
        nG1 = Sheets(shtTable).Cells(ni + iMonth, 34)
        nB1 = Sheets(shtTable).Cells(ni + iMonth, 35)
            
        nRf1 = Sheets(shtTable).Cells(ni + iMonth, 36)
        nGf1 = Sheets(shtTable).Cells(ni + iMonth, 37)
        nBf1 = Sheets(shtTable).Cells(ni + iMonth, 38)
    End If
        
        If (nMatchwkTmp <> matchWeekOld) Then
            If I > 1 Then
                Cells(ii, jj) = "Time Zone: " & TimeZone1
                Cells(ii, jj).Font.Size = 10
                Cells(ii, jj).HorizontalAlignment = xlLeft
                For n = jj To jj + widthCol - 1
                    Cells(ii, n).Interior.Color = RGB(nR1, nG1, nB1)
                    Cells(ii, n).Font.Color = RGB(nRf1, nGf1, nBf1)
                Next n

                ii = ii + 1
            End If
            
            iMonth = iMonth + 1
            
            If iMonth > 10 Then iMonth = 1
            
            nR = Sheets(shtTable).Cells(ni + iMonth, 27)
            nG = Sheets(shtTable).Cells(ni + iMonth, 28)
            nB = Sheets(shtTable).Cells(ni + iMonth, 29)
            
            nRf = Sheets(shtTable).Cells(ni + iMonth, 30)
            nGf = Sheets(shtTable).Cells(ni + iMonth, 31)
            nBf = Sheets(shtTable).Cells(ni + iMonth, 32)
            
            nR1 = Sheets(shtTable).Cells(ni + iMonth, 33)
            nG1 = Sheets(shtTable).Cells(ni + iMonth, 34)
            nB1 = Sheets(shtTable).Cells(ni + iMonth, 35)
            
            nRf1 = Sheets(shtTable).Cells(ni + iMonth, 36)
            nGf1 = Sheets(shtTable).Cells(ni + iMonth, 37)
            nBf1 = Sheets(shtTable).Cells(ni + iMonth, 38)
            

            Cells(ii, jj + 7) = "Match Day " & nMatchwkTmp
            'Cells(ii, jj + 7) = matchWeek
            Cells(ii, jj + 7).Font.Bold = True
            Cells(ii, jj + 7).Font.Size = 24
            Cells(ii, jj + 7).HorizontalAlignment = xlRight
            For n = jj To jj + widthCol - 1
                Cells(ii, n).Interior.Color = RGB(nR, nG, nB)
                Cells(ii, n).Font.Color = RGB(nRf, nGf, nBf)
            Next n
            
                    
            If I = 1 Then
                Cells(1, 1).Font.Color = RGB(nR, nG, nB)
            End If
            
            ii = ii + 1
            matchWeekOld = nMatchwkTmp
        End If
            
        
        HomeTeamTmp = HomeTeam(I)
        AwayTeamTmp = AwayTeam(I)
        
        If Not (GF_Temp(I) = -1) And Not (GA_Temp(I)) Then
                
            GF = GF_Temp(I)
            GA = GA_Temp(I)
    
        Else
            GA = -1
            GF = -1
        End If
        
        
        If (matchDateTmp <> matchDateOld) Then
            Cells(ii, jj) = matchMonthTmp & " " & matchDayTmp & ", " & matchWkDayTmp
            Cells(ii, jj).Font.Bold = True
            Cells(ii, jj).Font.Size = 20
            Cells(ii, jj).HorizontalAlignment = xlLeft
            
            
            For n = jj To jj + widthCol - 1
                Cells(ii, n).Interior.Color = RGB(Int((nR + nR1) / 2), Int((nG + nG1)) / 2, Int((nB + nB1) / 2))
                Cells(ii, n).Font.Color = RGB(nRf, nGf, nBf)
                Cells(ii, n).Font.Bold = True
            Next n
            
            matchDateOld = matchDateTmp
            ii = ii + 1
        End If
            Cells(ii, jj + 1) = HomeTeamTmp
            Cells(ii, jj + 1).HorizontalAlignment = xlRight
            
                    
            If status(I) = "FINISHED" Then
                Cells(ii, jj + 3) = GF
                Cells(ii, jj + 3).HorizontalAlignment = xlRight
                Cells(ii, jj + 5) = GA
                Cells(ii, jj + 5).HorizontalAlignment = xlLeft
                Cells(ii, jj + 4) = ":"
                Cells(ii, jj + 4).HorizontalAlignment = xlCenter
            Else
                Cells(ii, jj + 3).HorizontalAlignment = xlRight
                Cells(ii, jj + 5).HorizontalAlignment = xlLeft
                Cells(ii, jj + 4) = "v"
                Cells(ii, jj + 4).HorizontalAlignment = xlCenter
            End If
            
            Cells(ii, jj + 7) = AwayTeamTmp
            Cells(ii, jj + 7).HorizontalAlignment = xlLeft
            Cells(ii, jj) = matchTimeTmp
            Cells(ii, jj).NumberFormat = "[$-en-US]h:mm AM/PM;@"
            Cells(ii, jj + 8) = VenueTmp
            Cells(ii, jj + 8).HorizontalAlignment = xlLeft
            
                    
                'PicFileName = PicPath & HomeTeam & ".png"
                'TempFile = Dir(PicFileName)
                'If Len(TempFile) = 0 Then
                'PicFileName = PicPath & "Chelsea.png"
                'End If
                
                'With ActiveSheet.Pictures.Insert(PicFileName)
                    'With .ShapeRange
                    '.LockAspectRatio = msoTrue
                    ''.Width = 7.5
                    '.Height = 24
                    'End With
    
                    '.Left = Cells(ii, jj + 1).Left + (Cells(ii, jj + 1).Width - .Width) / 2
                    '.Top = Cells(ii, jj + 1).Top + (Cells(ii, jj + 1).Height - .Height) / 2
                    '.Placement = 1
                    '.PrintObject = True
    
                'End With
    
        'Call InsertPICwithLink(HomeTeam, PicPath, ii, jj + 1, 24, 7.5)
        Call CopyPIC(shtDashBoard, 2, 4, 2, TgSheet, "C", ii, HomeTeamTmp, 20)
        'Call InsertSingleLogoByCopy(TgSheet, ii, 3, HomeTeam)
        ' CopyPIC (shtSource,  nColTeam, nColPic,nStartRowTeam, shtTarget,strTrgCol, nTrgRow, Team, h)
            
                'PicFileName = PicPath & AwayTeam & ".png"
                'TempFile = Dir(PicFileName)
                'If Len(TempFile) = 0 Then
                'PicFileName = PicPath & "Chelsea.png"
                'End If
                
                'With ActiveSheet.Pictures.Insert(PicFileName)
                    'With .ShapeRange
                    '.LockAspectRatio = msoTrue
                    ''.Width = 7.5
                    '.Height = 24
                    'End With
    
                    '.Left = Cells(ii, jj + 5).Left + (Cells(ii, jj + 5).Width - .Width) / 2
                    '.Top = Cells(ii, jj + 5).Top + (Cells(ii, jj + 5).Height - .Height) / 2
                    '.Placement = 1
                    '.PrintObject = True
    
                'End With
    
    
        'Call InsertPICwithLink(AwayTeam, PicPath, ii, jj + 5, 24, 7.5)
        Call CopyPIC(shtDashBoard, 2, 4, 2, TgSheet, "G", ii, AwayTeamTmp, 20)
        'Call InsertSingleLogoByCopy(TgSheet, ii, 7, AwayTeam)
        ' CopyPIC (shtSource,  nColTeam, nColPic,nStartRowTeam, shtTarget,strTrgCol, nTrgRow, Team, h)
            
            For n = jj To jj + widthCol - 1
                Cells(ii, n).Interior.Color = RGB(nR1, nG1, nB1)
                Cells(ii, n).Font.Color = RGB(nRf1, nGf1, nBf1)
            Next n
            
            ii = ii + 1
            If ii > h Then
                ii = iStart
                jCol = jCol + 1
                jj = jStart + widthCol * (jCol - 1)
            End If
            
          If I = nTotFixtures Then
            Unload ufProgress
          End If
          Cells(1, 1) = ii

    
    Next I
    
            Cells(ii, jj) = "Time Zone: " & TimeZone1
            Cells(ii, jj).Font.Size = 10
            Cells(ii, jj).HorizontalAlignment = xlLeft
            For n = jj To jj + widthCol - 1
                Cells(ii, n).Interior.Color = RGB(nR1, nG1, nB1)
                Cells(ii, n).Font.Color = RGB(nRf1, nGf1, nBf1)
            Next n
           
    Application.ScreenUpdating = False
           
    Sheets(shtTable).Protect ("pineapple")
    Sheets(shtTableNew).Protect ("pineapple")
    Sheets(shtDashBoard).Protect ("pineapple")
    Sheets(TgSheet).Protect ("pineapple")

        

End Sub
Sub Update_Fixtures_by_Date_With_Fixture_Change2(nMod, ii, jj, matchWeekOld, iStart, jStart, jCol, iMonth)
    Dim ni, nj As Integer
    Dim matchMonthOld As String
    Dim shtTable, shtTableNew, shtFixture, shtDashBoard As String
    Dim TgSheet As String
    Dim w, h As Integer
    Dim matchDay As Integer
    Dim matchMonth, matchWkDay As String
    Dim matchTime As String
    Dim ResultHome, ResultAway As String
    Dim GF, GA As Integer
    Dim matchDate, matchDateOld As Date
    Dim HomeTeam, AwayTeam As String
    Dim nTeam, iBlk, jBlk As Integer
    Dim m, n As Integer
    Dim bNewCol As Boolean
    Dim widthCol As Integer
    'Dim TimeZone As String
    Dim timecol As Integer
    Dim matchWeek As Integer
    Dim PicPath, PicFileName, TempFile As String
    Dim pic As Object
    Dim Venue As String
    
    shtTable = "Sheet5"
    shtFixture = "fixtures"
    TgSheet = "Fixtures_by_Date"
    shtDashBoard = "Dashboard"
    shtTableNew = "Table"
    shtWkPredict = "WeeklyPredict"
    
    Sheets(shtTable).Unprotect ("pineapple")
    Sheets(shtTableNew).Unprotect ("pineapple")
    Sheets(shtDashBoard).Unprotect ("pineapple")
    Sheets(TgSheet).Unprotect ("pineapple")
    

'PicPath = "D:\Users\Jie\Pictures\premier league\logo\small\"
    
    Application.ScreenUpdating = False
        
    TimeZone = Sheets(shtDashBoard).Cells(1, 4)
    
    If TimeZone = "UK" Then
        timecol = 4
    ElseIf TimeZone = "EST" Then
        timecol = 3
    ElseIf TimeZone = "CST" Then
        timecol = 5
    ElseIf TimeZone = "MST" Then
        timecol = 6
    ElseIf TimeZone = "PST" Then
        timecol = 7
    Else
        timecol = 3
    End If

    w = 20
    h = 700

    ni = 52
    nj = 8


    m = 7
    n = 3

    widthCol = 13

    
'    matchMonth = ""
'    matchDay = 0
'    matchDateOld = DateValue("1/1/1900")
'    matchMonthOld = ""
'    matchWeek = 0
'    matchWeekOld = 0
    

    
    Sheets(TgSheet).Activate
    
'    Cells.Select
'    Range("A1").Activate
'    Selection.ClearContents
'    ActiveWindow.ScrollRow = 503
'    ActiveWindow.ScrollRow = 493
'    ActiveWindow.ScrollRow = 469
'    ActiveWindow.ScrollRow = 420
'    ActiveWindow.ScrollRow = 230
'    ActiveWindow.ScrollRow = 141
'    ActiveWindow.ScrollRow = 87
'    ActiveWindow.ScrollRow = 29
'    ActiveWindow.ScrollRow = 1
'    Selection.Style = "Normal"
'    With Selection.Font
'        .Name = "Calibri"
'        .Size = 20
'        .Strikethrough = False
'        .Superscript = False
'        .Subscript = False
'        .OutlineFont = False
'        .Shadow = False
'        .Underline = xlUnderlineStyleNone
'        .ThemeColor = xlThemeColorLight1
'        .TintAndShade = 0
'        .ThemeFont = xlThemeFontMinor
'    End With
'
'    For Each pic In ActiveSheet.Pictures
'        pic.Delete
'    Next pic
'
    If nMod = 1 Then
        iStart = 1
        jStart = 1
    
        ii = iStart
        jj = jStart
    
        jCol = 1
        iMonth = 0
    End If
    
    Application.ScreenUpdating = False
    ufProgress.LabelProgress.Width = 0
    ufProgress.CommandButtonStop.Visible = False
    ufProgress.Show
    
    timeStart = Timer
    
    For I = nMod To nTotFixtures
    
    pctdone = I / nTotFixtures
    timeNow = Timer
    minElapsed = Int((timeNow - timeStart) / 60)
    secElapsed = Round((timeNow - timeStart - minElapsed * 60), 0)
    
    With ufProgress
        .LabelCaption.Caption = "Updating Calendar " & I & " of " & nTotFixtures
        .LabelTime.Caption = "Elapsed time: " & minElapsed & " min " & secElapsed & " sec"
        .LabelProgress.Width = pctdone * (.FrameProgress.Width)
    End With

    DoEvents

    matchWeek = Sheets(shtFixture).Cells(I + 1, 1)
    matchDate = Sheets(shtFixture).Cells(I + 1, 2)
    matchMonth = MonthName(Month(matchDate), True)
    matchDay = Day(matchDate)
    matchWkDay = WeekdayName(Weekday(matchDate), True)
    matchTime = TimeValue(Sheets(shtFixture).Cells(I + 1, timecol).Text)
    Venue = Sheets(shtFixture).Cells(I + 1, 9)
    If I = nMod Then
        nR = Sheets(shtTable).Cells(ni + iMonth, 27)
        nG = Sheets(shtTable).Cells(ni + iMonth, 28)
        nB = Sheets(shtTable).Cells(ni + iMonth, 29)
            
        nRf = Sheets(shtTable).Cells(ni + iMonth, 30)
        nGf = Sheets(shtTable).Cells(ni + iMonth, 31)
        nBf = Sheets(shtTable).Cells(ni + iMonth, 32)
            
        nR1 = Sheets(shtTable).Cells(ni + iMonth, 33)
        nG1 = Sheets(shtTable).Cells(ni + iMonth, 34)
        nB1 = Sheets(shtTable).Cells(ni + iMonth, 35)
            
        nRf1 = Sheets(shtTable).Cells(ni + iMonth, 36)
        nGf1 = Sheets(shtTable).Cells(ni + iMonth, 37)
        nBf1 = Sheets(shtTable).Cells(ni + iMonth, 38)
    End If
        
        If (matchWeek <> matchWeekOld) Then
            If I > 1 Then
                Cells(ii, jj) = "Time Zone: " & TimeZone
                Cells(ii, jj).Font.Size = 12
                Cells(ii, jj).HorizontalAlignment = xlLeft
                For n = jj To jj + widthCol - 1
                    Cells(ii, n).Interior.Color = RGB(nR1, nG1, nB1)
                    Cells(ii, n).Font.Color = RGB(nRf1, nGf1, nBf1)
                Next n

                ii = ii + 1
            End If
            
            iMonth = iMonth + 1
                
            nR = Sheets(shtTable).Cells(ni + iMonth, 27)
            nG = Sheets(shtTable).Cells(ni + iMonth, 28)
            nB = Sheets(shtTable).Cells(ni + iMonth, 29)
            
            nRf = Sheets(shtTable).Cells(ni + iMonth, 30)
            nGf = Sheets(shtTable).Cells(ni + iMonth, 31)
            nBf = Sheets(shtTable).Cells(ni + iMonth, 32)
            
            nR1 = Sheets(shtTable).Cells(ni + iMonth, 33)
            nG1 = Sheets(shtTable).Cells(ni + iMonth, 34)
            nB1 = Sheets(shtTable).Cells(ni + iMonth, 35)
            
            nRf1 = Sheets(shtTable).Cells(ni + iMonth, 36)
            nGf1 = Sheets(shtTable).Cells(ni + iMonth, 37)
            nBf1 = Sheets(shtTable).Cells(ni + iMonth, 38)
            
            If iMonth >= 10 Then iMonth = 0
            Cells(ii, jj + 7) = "Match Day " & matchWeek
            'Cells(ii, jj + 7) = matchWeek
            Cells(ii, jj + 7).Font.Bold = True
            Cells(ii, jj + 7).Font.Size = 24
            Cells(ii, jj + 7).HorizontalAlignment = xlRight
            For n = jj To jj + widthCol - 1
                Cells(ii, n).Interior.Color = RGB(nR, nG, nB)
                Cells(ii, n).Font.Color = RGB(nRf, nGf, nBf)
            Next n
            
                    
            If I = 1 Then
                Cells(1, 1).Font.Color = RGB(nR, nG, nB)
            End If
            
            ii = ii + 1
            matchWeekOld = matchWeek
        End If
            
        
        HomeTeam = Sheets(shtFixture).Cells(I + 1, 10)
        AwayTeam = Sheets(shtFixture).Cells(I + 1, 13)
        
        If Not (IsEmpty(Sheets(shtFixture).Cells(I + 1, 11))) And Not (IsEmpty(Sheets(shtFixture).Cells(I + 1, 12))) Then
                
            GF = Sheets(shtFixture).Cells(I + 1, 11)
            GA = Sheets(shtFixture).Cells(I + 1, 12)
        Else
            GA = -1
            GF = -1
        End If
        
        
        If (matchDate <> matchDateOld) Then
            Cells(ii, jj) = matchMonth & " " & matchDay & ", " & matchWkDay
            Cells(ii, jj).Font.Bold = True
            Cells(ii, jj).Font.Size = 20
            Cells(ii, jj).HorizontalAlignment = xlLeft
            
            For n = jj To jj + widthCol - 1
                Cells(ii, n).Interior.Color = RGB(Int((nR + nR1) / 2), Int((nG + nG1)) / 2, Int((nB + nB1) / 2))
                Cells(ii, n).Font.Color = RGB(nRf, nGf, nBf)
                Cells(ii, n).Font.Bold = True
            Next n
            
            matchDateOld = matchDate
            ii = ii + 1
        End If
            Cells(ii, jj + 1) = HomeTeam
            Cells(ii, jj + 1).HorizontalAlignment = xlRight
            
                    
            If status(I) = "FINISHED" Then
                Cells(ii, jj + 3) = GF
                Cells(ii, jj + 3).HorizontalAlignment = xlRight
                Cells(ii, jj + 5) = GA
                Cells(ii, jj + 5).HorizontalAlignment = xlLeft
                Cells(ii, jj + 4) = ":"
                Cells(ii, jj + 4).HorizontalAlignment = xlCenter
            Else
                Cells(ii, jj + 3).HorizontalAlignment = xlRight
                Cells(ii, jj + 5).HorizontalAlignment = xlLeft
                Cells(ii, jj + 4) = "v"
                Cells(ii, jj + 4).HorizontalAlignment = xlCenter
            End If
            
            Cells(ii, jj + 7) = AwayTeam
            Cells(ii, jj + 7).HorizontalAlignment = xlLeft
            Cells(ii, jj) = matchTime
            Cells(ii, jj).NumberFormat = "[$-en-US]h:mm AM/PM;@"
            Cells(ii, jj + 8) = Venue
            Cells(ii, jj + 8).HorizontalAlignment = xlLeft
            
                    
                'PicFileName = PicPath & HomeTeam & ".png"
                'TempFile = Dir(PicFileName)
                'If Len(TempFile) = 0 Then
                'PicFileName = PicPath & "Chelsea.png"
                'End If
                
                'With ActiveSheet.Pictures.Insert(PicFileName)
                    'With .ShapeRange
                    '.LockAspectRatio = msoTrue
                    ''.Width = 7.5
                    '.Height = 24
                    'End With
    
                    '.Left = Cells(ii, jj + 1).Left + (Cells(ii, jj + 1).Width - .Width) / 2
                    '.Top = Cells(ii, jj + 1).Top + (Cells(ii, jj + 1).Height - .Height) / 2
                    '.Placement = 1
                    '.PrintObject = True
    
                'End With
    
        'Call InsertPICwithLink(HomeTeam, PicPath, ii, jj + 1, 24, 7.5)
        Call CopyPIC(shtDashBoard, 2, 4, 2, TgSheet, "C", ii, HomeTeam, 20)
        'Call InsertSingleLogoByCopy(TgSheet, ii, 3, HomeTeam)
        ' CopyPIC (shtSource,  nColTeam, nColPic,nStartRowTeam, shtTarget,strTrgCol, nTrgRow, Team, h)
            
                'PicFileName = PicPath & AwayTeam & ".png"
                'TempFile = Dir(PicFileName)
                'If Len(TempFile) = 0 Then
                'PicFileName = PicPath & "Chelsea.png"
                'End If
                
                'With ActiveSheet.Pictures.Insert(PicFileName)
                    'With .ShapeRange
                    '.LockAspectRatio = msoTrue
                    ''.Width = 7.5
                    '.Height = 24
                    'End With
    
                    '.Left = Cells(ii, jj + 5).Left + (Cells(ii, jj + 5).Width - .Width) / 2
                    '.Top = Cells(ii, jj + 5).Top + (Cells(ii, jj + 5).Height - .Height) / 2
                    '.Placement = 1
                    '.PrintObject = True
    
                'End With
    
    
        'Call InsertPICwithLink(AwayTeam, PicPath, ii, jj + 5, 24, 7.5)
        Call CopyPIC(shtDashBoard, 2, 4, 2, TgSheet, "G", ii, AwayTeam, 20)
        'Call InsertSingleLogoByCopy(TgSheet, ii, 7, AwayTeam)
        ' CopyPIC (shtSource,  nColTeam, nColPic,nStartRowTeam, shtTarget,strTrgCol, nTrgRow, Team, h)
            
            For n = jj To jj + widthCol - 1
                Cells(ii, n).Interior.Color = RGB(nR1, nG1, nB1)
                Cells(ii, n).Font.Color = RGB(nRf1, nGf1, nBf1)
            Next n
            
            ii = ii + 1
            If ii > h Then
                ii = iStart
                jCol = jCol + 1
                jj = jStart + widthCol * (jCol - 1)
            End If
            
          If I = nTotFixtures Then
            Unload ufProgress
          End If
          Cells(1, 1) = ii

    
    Next I
    
            Cells(ii, jj) = "Time Zone: " & TimeZone
            Cells(ii, jj).Font.Size = 12
            Cells(ii, jj).HorizontalAlignment = xlLeft
            For n = jj To jj + widthCol - 1
                Cells(ii, n).Interior.Color = RGB(nR1, nG1, nB1)
                Cells(ii, n).Font.Color = RGB(nRf1, nGf1, nBf1)
            Next n
           
    Application.ScreenUpdating = False
           
    Sheets(shtTable).Protect ("pineapple")
    Sheets(shtTableNew).Protect ("pineapple")
    Sheets(shtDashBoard).Protect ("pineapple")
    Sheets(TgSheet).Protect ("pineapple")

        

End Sub
Sub UpdateCal3(bLogo, nRows, shtTableNew)
    Dim nMatchwkTmp As Integer
    Dim shtTable, shtFixture, shtDashBoard, shtCalendar As String
    Dim matchDayTmp As Integer
    Dim matchMonthTmp, matchWkDayTmp As String
    Dim matchTimeTmp As String
    Dim ResultHome, ResultAway As String
    Dim GF, GA, HomePoints, AwayPoints As Integer
    Dim matchDateTmp As Date
    Dim HomeTeamTmp, AwayTeamTmp As String
    Dim HomeTeamNext, AwayTeamNext As String
    Dim timecol As Integer
    Dim pic As Object
    Dim nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1 As Integer
    
    Dim nRowCal As Integer

    Dim timeStart, timeNow As Long
    Dim secElapsed, minElapsed As Integer
    
        
'    shtTable = "Sheet5"
'    shtFixture = "fixtures"
    shtCalendar = "Fixtures_by_Date"
'    shtDashboard = "Dashboard"

'    Sheets(shtTable).Unprotect ("pineapple")
    Sheets(shtCalendar).Unprotect ("pineapple")
'    Sheets(shtFixture).Unprotect ("pineapple")
    
    Sheets(shtCalendar).Activate
    Range("A1").Select
    
    Application.ScreenUpdating = False
    ufProgress.LabelProgress.Width = 0
    ufProgress.CommandButtonStop.Visible = False
    ufProgress.Show
    
    timeStart = Timer
    
    TimeZone = TimeZone1
    timecol = timecol1
    
    nRowCal = 1
        
    For I = 1 To nTotFixtures

    pctdone = I / nTotFixtures
    timeNow = Timer
    minElapsed = Int((timeNow - timeStart) / 60)
    secElapsed = Round((timeNow - timeStart - minElapsed * 60), 0)
    
    With ufProgress
        .LabelCaption.Caption = "Updating Calendar for Game " & I & " of " & nTotFixtures
        .LabelTime.Caption = "Elapsed time: " & minElapsed & " min " & secElapsed & " sec"
        .LabelProgress.Width = pctdone * (.FrameProgress.Width)
    End With

    DoEvents

    nMatchwkTmp = nMatchwk(I)
    matchDateTmp = matchDate(I)
    matchMonthTmp = MonthName(Month(matchDateTmp), False)
    matchDayTmp = Day(matchDateTmp)
    matchWkDayTmp = WeekdayName(Weekday(matchDateTmp), True)
    matchTimeTmp = matchTime(I)

    HomeTeamTmp = HomeTeam(I)
    AwayTeamTmp = AwayTeam(I)
    
    If Not (GF_Temp(I) = -1) And Not (GA_Temp(I)) Then
            
        GF = GF_Temp(I)
        GA = GA_Temp(I)

    Else
        GA = -1
        GF = -1
    End If


    Call FillCalendar3(nRowCal, nRows, shtCalendar, shtFixture, HomeTeamTmp, AwayTeamTmp, GF, GA, matchTimeTmp, nMatchwkTmp, TimeZone, n, I)

     If I = nTotFixtures Then
        Unload ufProgress
      End If

    Next I

    Application.ScreenUpdating = True
    
    Cells(5, 16) = minElapsed
    Cells(5, 18) = secElapsed

    
'    Sheets(shtTable).Protect ("pineapple")
    Sheets(shtCalendar).Protect ("pineapple")
'    Sheets(shtFixture).Protect ("pineapple")

End Sub
Sub FillCalendar3(nRowCal, nMaxRow, shtCalendar, shtFixture, HomeTeamTmp, AwayTeamTmp, GF, GA, matchTimeTmp, nMatchwkTmp, TimeZone, n, I)
Dim ntmpRowCal As Integer
Dim tmpstring As String
Dim tmpMatchWk As Integer

 For m = nRowCal To nMaxRow
        tmpstring = Sheets(shtCalendar).Cells(m, 8)
        If Left(tmpstring, 9) = "Match Day" Then
            'Sheets(shtCalendar).Cells(m, 8).HorizontalAlignment = xlRight
            tmpMatchWk = Right(tmpstring, Len(tmpstring) - 10)
            If nMatchwkTmp = tmpMatchWk Then
                Sheets(shtCalendar).Cells(m + 1, 9) = "Venue"
'                Sheets(shtCalendar).Cells(m + 1, 9) = "W %"
'                Sheets(shtCalendar).Cells(m + 1, 10) = "D %"
'                Sheets(shtCalendar).Cells(m + 1, 11) = "L %"
'                Sheets(shtCalendar).Cells(m + 1, 12) = "GF"
'                Sheets(shtCalendar).Cells(m + 1, 13) = "GA"
                n = 0
                If I > 1 Then
                    Sheets(shtCalendar).Cells(m - 1, 1) = "Time Zone:" & TimeZone
                    'Sheets(shtCalendar).Cells(m + 1, 13) = ""
                    Sheets(shtCalendar).Cells(m - 1, 1).Font.Size = 10
                    Sheets(shtCalendar).Cells(m - 1, 1).HorizontalAlignment = xlLeft
                End If

            End If
        End If
        If Sheets(shtCalendar).Cells(m, 2) = HomeTeamTmp And Sheets(shtCalendar).Cells(m, 8) = AwayTeamTmp Then
                ntmpRowCal = m
                If GA >= 0 Then
                    Sheets(shtCalendar).Cells(m, 4) = GF
                    Sheets(shtCalendar).Cells(m, 6) = GA
                    Sheets(shtCalendar).Cells(m, 5) = ":"
                    Sheets(shtCalendar).Cells(m, 1) = matchTimeTmp
'                    Sheets(shtCalendar).Cells(m, 9) = Winpct(I)
'                    Sheets(shtCalendar).Cells(m, 10) = DrawPct(I)
'                    Sheets(shtCalendar).Cells(m, 11) = LossPct(I)
'                    Sheets(shtCalendar).Cells(m, 12) = spiGF(I)
'                    Sheets(shtCalendar).Cells(m, 13) = spiGA(I)
                    n = n + 1
                Else
                    Sheets(shtCalendar).Cells(m, 4) = ""
                    Sheets(shtCalendar).Cells(m, 6) = ""
                    Sheets(shtCalendar).Cells(m, 5) = ""
                    Sheets(shtCalendar).Cells(m, 1) = matchTimeTmp
'                    Sheets(shtCalendar).Cells(m, 9) = Winpct(I)
'                    Sheets(shtCalendar).Cells(m, 10) = DrawPct(I)
'                    Sheets(shtCalendar).Cells(m, 11) = LossPct(I)
'                    Sheets(shtCalendar).Cells(m, 12) = spiGF(I)
'                    Sheets(shtCalendar).Cells(m, 13) = spiGA(I)
                    n = n + 1
                End If
        
'        If n = 10 Then
'            Sheets(shtCalendar).Cells(m + 1, 1) = "Time Zone:" & TimeZone
'            'Sheets(shtCalendar).Cells(m + 1, 13) = ""
'            Sheets(shtCalendar).Cells(m + 1, 1).Font.Size = 10
'            Sheets(shtCalendar).Cells(m + 1, 1).HorizontalAlignment = xlLeft
'        End If
        Exit For
        End If
 
        
    Next m
    
    nRowCal = ntmpRowCal
    
    If I = nTotFixtures Then
        Sheets(shtCalendar).Cells(nMaxRow, 1) = "Time Zone:" & TimeZone
        'Sheets(shtCalendar).Cells(nMaxRow, 13) = ""
        Sheets(shtCalendar).Cells(nMaxRow, 1).Font.Size = 10
        Sheets(shtCalendar).Cells(nMaxRow, 1).HorizontalAlignment = xlLeft
    End If

 End Sub
Sub Change_Score_Fixture_by_Date(nRowCal, nMaxRow, shtCalendar, shtFixture, HomeTeamTmp, AwayTeamTmp, GF, GA, matchTimeTmp, nMatchwkTmp, TimeZone, n, I, iMonth)
Dim ntmpRowCal As Integer
Dim tmpstring As String
Dim tmpMatchWk As Integer
Dim bComplete As Boolean

' For m = nRowCal To nMaxRow
m = nRowCal

bComplete = False

Do While bComplete = False
        tmpstring = Sheets(shtCalendar).Cells(m, 8)
        If Left(tmpstring, 9) = "Match Day" Then
            'Sheets(shtCalendar).Cells(m, 8).HorizontalAlignment = xlRight
            tmpMatchWk = Right(tmpstring, Len(tmpstring) - 10)
            If nMatchwkTmp = tmpMatchWk Then
                Sheets(shtCalendar).Cells(m + 1, 9) = "Venue"
'                Sheets(shtCalendar).Cells(m + 1, 9) = "W %"
'                Sheets(shtCalendar).Cells(m + 1, 10) = "D %"
'                Sheets(shtCalendar).Cells(m + 1, 11) = "L %"
'                Sheets(shtCalendar).Cells(m + 1, 12) = "GF"
'                Sheets(shtCalendar).Cells(m + 1, 13) = "GA"
                n = 0
                iMonth = iMonth + 1
                If iMonth > 10 Then iMonth = 1
                If I > 1 Then
                    Sheets(shtCalendar).Cells(m - 1, 1) = "Time Zone:" & TimeZone
                    'Sheets(shtCalendar).Cells(m + 1, 13) = ""
                    Sheets(shtCalendar).Cells(m - 1, 1).Font.Size = 10
                    Sheets(shtCalendar).Cells(m - 1, 1).HorizontalAlignment = xlLeft
                End If

            End If
        End If
        If Sheets(shtCalendar).Cells(m, 2) = HomeTeamTmp And Sheets(shtCalendar).Cells(m, 8) = AwayTeamTmp Then
                ntmpRowCal = m
                If GA >= 0 Then
                    Sheets(shtCalendar).Cells(m, 4) = GF
                    Sheets(shtCalendar).Cells(m, 6) = GA
                    Sheets(shtCalendar).Cells(m, 5) = ":"
                    Sheets(shtCalendar).Cells(m, 1) = matchTimeTmp
'                    Sheets(shtCalendar).Cells(m, 9) = Winpct(I)
'                    Sheets(shtCalendar).Cells(m, 10) = DrawPct(I)
'                    Sheets(shtCalendar).Cells(m, 11) = LossPct(I)
'                    Sheets(shtCalendar).Cells(m, 12) = spiGF(I)
'                    Sheets(shtCalendar).Cells(m, 13) = spiGA(I)
                    n = n + 1
                Else
                    Sheets(shtCalendar).Cells(m, 4) = ""
                    Sheets(shtCalendar).Cells(m, 6) = ""
                    Sheets(shtCalendar).Cells(m, 5) = ""
                    Sheets(shtCalendar).Cells(m, 1) = matchTimeTmp
'                    Sheets(shtCalendar).Cells(m, 9) = Winpct(I)
'                    Sheets(shtCalendar).Cells(m, 10) = DrawPct(I)
'                    Sheets(shtCalendar).Cells(m, 11) = LossPct(I)
'                    Sheets(shtCalendar).Cells(m, 12) = spiGF(I)
'                    Sheets(shtCalendar).Cells(m, 13) = spiGA(I)
                    n = n + 1
                End If
                bComplete = True
'        If n = 10 Then
'            Sheets(shtCalendar).Cells(m + 1, 1) = "Time Zone:" & TimeZone
'            'Sheets(shtCalendar).Cells(m + 1, 13) = ""
'            Sheets(shtCalendar).Cells(m + 1, 1).Font.Size = 10
'            Sheets(shtCalendar).Cells(m + 1, 1).HorizontalAlignment = xlLeft
'        End If
'        Exit For
        End If
    m = m + 1
Loop
 
        
'    Next m
    
    nRowCal = ntmpRowCal
    
    If I = nTotFixtures Then
        Sheets(shtCalendar).Cells(nMaxRow, 1) = "Time Zone:" & TimeZone
        'Sheets(shtCalendar).Cells(nMaxRow, 13) = ""
        Sheets(shtCalendar).Cells(nMaxRow, 1).Font.Size = 10
        Sheets(shtCalendar).Cells(nMaxRow, 1).HorizontalAlignment = xlLeft
    End If

 End Sub
Sub WriteTeam3(shtTgt, bLogo, bNewCol, Oppo, ii, jj, Month, MonthOld, Day, WkDay, Time, Game, GF, GA, Result, nGame, Points, nR1, nG1, nB1)
    Dim shtSource As String
    
    shtSource = "Dashboard"
  
    'PicPath = "D:\Users\Jie\Pictures\premier league\logo\small\"
        
        If bNewCol = True Then
            Sheets(shtTgt).Cells(ii, jj) = Month
            Sheets(shtTgt).Cells(ii, jj).Font.Bold = True
            MonthOld = Month
            ii = ii + 1
            bNewCol = False
        End If
        
        If Month <> MonthOld Then
            Sheets(shtTgt).Cells(ii, jj) = Month
            Sheets(shtTgt).Cells(ii, jj).Font.Bold = True
            MonthOld = Month
            ii = ii + 1
        End If
        
        If bLogo Then
            Sheets(shtTgt).Cells(ii, jj) = Day
            Sheets(shtTgt).Cells(ii, jj).Font.Bold = False
            Sheets(shtTgt).Cells(ii, jj + 1) = WkDay
            Sheets(shtTgt).Cells(ii, jj).Font.Bold = False
        End If
            Sheets(shtTgt).Cells(ii, jj + 2) = Time
            Sheets(shtTgt).Cells(ii, jj + 2).NumberFormat = "hh:mm"
        
        If bLogo Then
            Sheets(shtTgt).Cells(ii, jj + 4) = Oppo
            Sheets(shtTgt).Cells(ii, jj + 5) = Game
        End If
        
        If GA <> -1 Then
            Sheets(shtTgt).Cells(ii, jj + 6) = GF
            Sheets(shtTgt).Cells(ii, jj + 7) = ":"
            Sheets(shtTgt).Cells(ii, jj + 8) = GA
            Sheets(shtTgt).Cells(ii, jj + 9) = Result
'            Sheets(shtTgt).Cells(nGame + 2, jj + 10) = nGame
'            Sheets(shtTgt).Cells(nGame + 2, jj + 10).Font.Color = RGB(nR1, nG1, nB1)
'            Sheets(shtTgt).Cells(nGame + 2, jj + 11) = Points
'            Sheets(shtTgt).Cells(nGame + 2, jj + 11).Font.Color = RGB(nR1, nG1, nB1)
        Else
            Sheets(shtTgt).Cells(ii, jj + 6) = ""
            Sheets(shtTgt).Cells(ii, jj + 7) = ""
            Sheets(shtTgt).Cells(ii, jj + 8) = ""
            Sheets(shtTgt).Cells(ii, jj + 9) = ""
            Sheets(shtTgt).Cells(nGame + 2, jj + 10) = ""
            Sheets(shtTgt).Cells(nGame + 2, jj + 11) = ""
        End If
        
'        If bLogo = True Then
'
'            PicFileName = PicPath & Oppo & ".png"
'            TempFile = Dir(PicFileName)
'            If Len(TempFile) = 0 Then
'            PicFileName = PicPath & "Chelsea.png"
'            End If
'
'            With ActiveSheet.Pictures.Insert(PicFileName)
'                With .ShapeRange
'                .LockAspectRatio = msoTrue
'                '.Width = 7.5
'                .Height = 20
'                End With
'
'                .Left = Cells(ii, jj + 3).Left + (Cells(ii, jj + 1).Width - .Width) / 2
'                .Top = Cells(ii, jj + 3).Top + (Cells(ii, jj + 1).Height - .Height) / 2
'                .Placement = 1
'                .PrintObject = True
'
'            End With
'
'        End If

        If bLogo Then

'        Call InsertSingleLogoByCopy(shtTgt, ii, jj + 3, Oppo)
        

        strRange2 = Sheets(shtTgt).Cells(ii, jj + 3).Address
        a = Split(strRange2, "$")
    
        Call CopyPIC(shtSource, 2, 4, 2, shtTgt, a(1), ii, Oppo, 20)

        End If

        
        
        ii = ii + 1
        
'        If nGame = nMaxGamesPerTeam Then
'            Sheets(shtTgt).Cells(ii, jj) = TimeZone & " Time"
'        End If
        

End Sub
Sub WriteTeam4(shtTgt, bLogo, bNewCol, Oppo, ii, jj, Month, MonthOld, Day, WkDay, Time, Game, GF, GA, Result, nGame, Points, nR1, nG1, nB1)
    Dim shtSource As String
    
    shtSource = "Dashboard"
  
    'PicPath = "D:\Users\Jie\Pictures\premier league\logo\small\"
        
        If bNewCol = True Then
            Sheets(shtTgt).Cells(ii, jj) = Month
            Sheets(shtTgt).Cells(ii, jj).Font.Bold = True
            MonthOld = Month
            ii = ii + 1
            bNewCol = False
        End If
        
        If Month <> MonthOld Then
            Sheets(shtTgt).Cells(ii, jj) = Month
            Sheets(shtTgt).Cells(ii, jj).Font.Bold = True
            MonthOld = Month
            ii = ii + 1
        End If
        
        If bLogo Then
            Sheets(shtTgt).Cells(ii, jj) = Day
            Sheets(shtTgt).Cells(ii, jj).Font.Bold = False
            Sheets(shtTgt).Cells(ii, jj + 1) = WkDay
            Sheets(shtTgt).Cells(ii, jj).Font.Bold = False
        End If
            Sheets(shtTgt).Cells(ii, jj + 2) = Time
            Sheets(shtTgt).Cells(ii, jj + 2).NumberFormat = "hh:mm"
        
        If bLogo Then
            Sheets(shtTgt).Cells(ii, jj + 4) = Oppo
            Sheets(shtTgt).Cells(ii, jj + 5) = Game
        End If
        
        If GA <> -1 Then
            Sheets(shtTgt).Cells(ii, jj + 6) = GF
            Sheets(shtTgt).Cells(ii, jj + 7) = ":"
            Sheets(shtTgt).Cells(ii, jj + 8) = GA
            Sheets(shtTgt).Cells(ii, jj + 9) = Result
'            Sheets(shtTgt).Cells(nGame + 2, jj + 10) = nGame
'            Sheets(shtTgt).Cells(nGame + 2, jj + 10).Font.Color = RGB(nR1, nG1, nB1)
'            Sheets(shtTgt).Cells(nGame + 2, jj + 11) = Points
'            Sheets(shtTgt).Cells(nGame + 2, jj + 11).Font.Color = RGB(nR1, nG1, nB1)
        Else
            Sheets(shtTgt).Cells(ii, jj + 6) = ""
            Sheets(shtTgt).Cells(ii, jj + 7) = ""
            Sheets(shtTgt).Cells(ii, jj + 8) = ""
            Sheets(shtTgt).Cells(ii, jj + 9) = ""
            Sheets(shtTgt).Cells(nGame + 2, jj + 10) = ""
            Sheets(shtTgt).Cells(nGame + 2, jj + 11) = ""
        End If
        

        If bLogo Then

'        Call InsertSingleLogoByCopy(shtTgt, ii, jj + 3, Oppo)
        

        strRange2 = Sheets(shtTgt).Cells(ii, jj + 3).Address
        a = Split(strRange2, "$")
    
        Call CopyPIC2(shtSource, 2, 4, 2, shtTgt, a(1), ii, Oppo, 20)

        End If

        
        
        ii = ii + 1
        
'        If nGame = nMaxGamesPerTeam Then
'            Sheets(shtTgt).Cells(ii, jj) = TimeZone & " Time"
'        End If
        

End Sub

Sub FindTeamNo3(nTeam, m, n, iBlk, jBlk, nR, nG, nB, nRf, nGf, nBf, nR1, nG1, nB1, nRf1, nGf1, nBf1)
    Dim shtTable As String
    Dim ni, nj As Integer
    
    
    shtTable = "Sheet5"
    ni = 5
    nj = 8

            nR = Sheets(shtTable).Cells(ni + nTeam, 27)
            nG = Sheets(shtTable).Cells(ni + nTeam, 28)
            nB = Sheets(shtTable).Cells(ni + nTeam, 29)
            
            nRf = Sheets(shtTable).Cells(ni + nTeam, 30)
            nGf = Sheets(shtTable).Cells(ni + nTeam, 31)
            nBf = Sheets(shtTable).Cells(ni + nTeam, 32)
            
            nR1 = Sheets(shtTable).Cells(ni + nTeam, 33)
            nG1 = Sheets(shtTable).Cells(ni + nTeam, 34)
            nB1 = Sheets(shtTable).Cells(ni + nTeam, 35)
            
            nRf1 = Sheets(shtTable).Cells(ni + nTeam, 36)
            nGf1 = Sheets(shtTable).Cells(ni + nTeam, 37)
            nBf1 = Sheets(shtTable).Cells(ni + nTeam, 38)
                    
            iBlk = Int((nTeam - 1) / m) + 1
            jBlk = nTeam - (iBlk - 1) * m
            
        'If nTeam <= 10 Then
            'iBlk = 1
            'jBlk = nTeam
        'Else
            'iBlk = 2
            'jBlk = nTeam - 10
        'End If

End Sub
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet25"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet27"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ufProgress"
Attribute VB_Base = "0{3F96C23D-D043-4732-8075-53B95AB24F3C}{E0C5EB23-6EDE-4560-BD5B-011E015A3112}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButtonStop_Click()
    bCancel = True
End Sub


INQUEST-PP=macro
