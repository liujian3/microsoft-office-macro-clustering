Attribute VB_Name = "Prod_Macros"

Option Explicit
Dim ProdRow, ProdCol  As Long

Sub Prod_Load()
With Sheet1
    If .Range("B6").Value = Empty Then Exit Sub
    ProdRow = .Range("B6").Value
    .Range("B8").Value = True 'Set Product Load to True
        For ProdCol = 5 To 11
          If ProdCol <> 8 Then .Range(Sheet2.Cells(1, ProdCol).Value).Value = Sheet2.Cells(ProdRow, ProdCol).Value
        Next ProdCol
Prod_DisplayThumb
.Range("B8").Value = False
End With
End Sub


Sub Prod_AttachThum()
Dim PicFile As FileDialog
With Sheet1
Set PicFile = Application.FileDialog(msoFileDialogFilePicker)
With PicFile
    .Title = "Select a Product Picture"
    .Filters.Add "All Picture Files", "*.jpg,*jpeg,*.gif,*.png,*.gif,*bmp,*.tiff", 1
    If .Show <> -1 Then GoTo NoSelection
    Sheet1.Range("O14").Value = .SelectedItems(1) 'Put File name in O14
End With
'On Existing Products, Add/Update Picture Link
If .Range("B7").Value = False Then Sheet2.Range("K" & Sheet1.Range("B6").Value).Value = .Range("O14").Value
Prod_DisplayThumb

NoSelection:
End With
End Sub

Sub Prod_DisplayThumb()
Dim PicPath As String
With Sheet1
        
        On Error Resume Next
        .Shapes("ThumbPic").Delete 'Delete thumbnail picture (if any)
        On Error GoTo 0
        PicPath = .Range("O14").Value 'Picture Path
        If PicPath = Empty Then Exit Sub
        With .Pictures.Insert(PicPath)
            With .ShapeRange
                .LockAspectRatio = msoTrue
                .Height = 85
                .Name = "ThumbPic"
            End With
        End With
        With .Shapes("ThumbPic")
            .Left = Sheet1.Range("K3").Left
            .Top = Sheet1.Range("K3").Top
            .IncrementLeft -50
            .IncrementTop 17
        End With
End With 'End Sheet 1
End Sub


Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)
Dim ProdRow As Long
'On Transaction change, but not on Transaction Load or new transaction
If Not Intersect(Target, Range("E5:H7,E13:K13")) Is Nothing And Range("B4").Value = False And Range("B3").Value = False Then
On Error Resume Next
    If Range("B2").Value <> Empty And Cells(Target.Row, Target.Column + 10).Value <> Empty Then Cells(Range("B2").Value, Cells(Target.Row, Target.Column + 10).Value).Value = Target.Value
On Error GoTo 0
End If
'On change of Product Price
If Not Intersect(Target, Range("H7")) Is Nothing And Range("B6").Value <> Empty Then Sheet2.Range("F" & Range("B6").Value).Value = Target.Value



'On Product Change, Load Product
If Not Intersect(Target, Range("E7")) Is Nothing And Range("E7").Value <> Empty Then
    If Range("B6").Value <> Empty Then
            'On change of Existing Product but not on product load
            If Range("B2").Value <> Empty And Range("B4").Value = False Then Range("G" & Range("B2").Value).Value = Range("E7").Value 'Save Product # in transaction
            Prod_Load
    Else:
            If MsgBox("This product does not currently exist. Would you like to add it now?", vbYesNo, "Product Not Found") = vbYes Then
                ProdRow = Sheet2.Range("D9999").End(xlUp).Row + 1
                Sheet2.Range("D" & ProdRow).Value = Target.Value
                Range("B8").Value = True
                Sheet2.Range("H" & ProdRow).Formula = "=SUMIFS(Trans_Qty,Trans_ProdNum,D" & ProdRow & ",Trans_Type," & Chr(34) & "Purchase" & Chr(34) & ")-SUMIFS(Trans_Qty,Trans_ProdNum,D" & ProdRow & ",Trans_Type," & Chr(34) & "Sales" & Chr(34) & ")"
                Range("H7,E9,H9,E13,H11:K11,O14").ClearContents
                Range("B7,B8").Value = False 'Set New product to False
            Else:
                Target.ClearContents
            End If
    End If
End If
'On Change of Existing Product, Update Product
If Not Intersect(Target, Range("E9:H11")) Is Nothing And Range("B7").Value = False And Range("B8").Value = False And Range("B6").Value <> Empty Then
        ProdRow = Range("B6").Value
        Sheet2.Cells(ProdRow, Cells(Target.Row, Target.Column + 10).Value).Value = Target.Value
End If
End Sub


Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If Not Intersect(Target, Range("D18:K999")) Is Nothing And Range("D" & Target.Row).Value <> Empty Then
Trans_Load
Range("B2").Value = Target.Row
End If
End Sub

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet_Macros"
Option Explicit

Sub MoveBtn()
 With Sheet1
   .Range("E5").Validation.Delete
 If Sheet1.Range("B1").Value = "Purchase" Then
     .Shapes("MoveBtn1").IncrementLeft 30 'NOTE: there must be a space between "IncrementLeft" and "30"
     .Range("B1").Value = "Sales"
     On Error Resume Next
     .Range("E5").Validation.Add xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=Customers"
Else:
 .Shapes("MoveBtn1").IncrementLeft -30 'NOTE: there must be a space between "IncrementLeft" and "-30"
     .Range("B1").Value = "Purchase"
     On Error Resume Next
     .Range("E5").Validation.Add xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=Vendors"
End If
 If .Range("B3").Value = False And .Range("B2").Value <> Empty Then .Range("D" & .Range("B2").Value).Value = .Range("B1").Value 'Set Trans Type
End With
End Sub

Sub ProdDetails_Show()
With Sheet1
    .Range("9:12").EntireRow.Hidden = False
    .Shapes("ViewDetBtn").Visible = msoFalse
    .Shapes("HideDetBtn").Visible = msoCTrue
End With
End Sub
Sub ProdDetails_Hide()
With Sheet1
.Range("9:12").EntireRow.Hidden = True
.Shapes("ViewDetBtn").Visible = msoCTrue
.Shapes("HideDetBtn").Visible = msoFalse
End With
End Sub

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Trans_Macros"
Option Explicit
  Dim TransRow, TransCol As Long
 Sub Trans_Load()
 Dim PrevType As String
 With Sheet1
 PrevType = .Range("B1").Value
 .Range("B4").Value = True 'Set Load Trans to True
TransRow = ActiveCell.Row
 For TransCol = 4 To 11
 If TransCol <> 10 Then .Range(.Cells(16, TransCol).Value).Value = .Cells(TransRow, TransCol).Value ' Load Items
 Next TransCol
If PrevType <> .Range("B1").Value Then 'Only on Change of Transaction Type
.Range("E5").Validation.Delete
     If .Range("B1").Value = "Sales" Then
         .Shapes("MoveBtn1").IncrementLeft 30 'Move Right
         .Range("E5").Validation.Add xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=Customers"
    Else:
         .Shapes("MoveBtn1").IncrementLeft -30 'Move Left
         .Range("E5").Validation.Add xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=Vendors"
    End If
End If
    Prod_Load
 .Shapes("ExistTransGrp").Visible = msoCTrue
 .Shapes("NewTransGrp").Visible = msoFalse
 .Range("B3,B4").Value = False 'Trans Load and New Transaction To False
  End With
 End Sub
 
 Sub Trans_Save()
With Sheet1
If .Range("E5").Value = Empty Then
    MsgBox "Please select a Customer or Vendor for this Transaction"
    Exit Sub
End If
TransRow = .Range("D9999").End(xlUp).Row + 1
For TransCol = 4 To 11
If TransCol <> 10 Then
    .Cells(TransRow, TransCol).Value = .Range(.Cells(16, TransCol).Value).Value
    Else:
     .Cells(TransRow, TransCol).Value = "=H" & TransRow & "*I" & TransRow
End If
Next TransCol
 .Shapes("ExistTransGrp").Visible = msoCTrue
 .Shapes("NewTransGrp").Visible = msoFalse
  .Range("B3").Value = False 'New Trans to False
End With
 End Sub
 
 Sub Trans_New()
 With Sheet1
    .Range("B3").Value = True 'Set Trans to New
    .Range("B2,E5,E7,E9,E11,E13,H7,H9,H11:K11,J13:K13").ClearContents 'Clear Fields
    .Range("H5").Value = Date 'Set Current Date
    .Shapes("ExistTransGrp").Visible = msoFalse
    .Shapes("NewTransGrp").Visible = msoCTrue
        On Error Resume Next
        .Shapes("ThumbPic").Delete 'Delete thumbnail picture (if any)
        On Error GoTo 0
 End With
 End Sub
 
 Sub Trans_Delete()
 With Sheet1
 If .Range("B2").Value = Empty Then Exit Sub
 If MsgBox("Are you sure you want to delete this transaction", vbYesNo, "Delete Transaction") = vbNo Then Exit Sub
 TransRow = .Range("B2").Value
 .Range(TransRow & ":" & TransRow).EntireRow.Delete
.Range("D18").Select
 End With
 End Sub
 
 Sub Trans_CancelNew()
 Sheet1.Range("D18").Select
 End Sub



INQUEST-PP=macro
