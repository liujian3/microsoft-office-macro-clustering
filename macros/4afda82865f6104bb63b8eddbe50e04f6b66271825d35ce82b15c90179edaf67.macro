Attribute VB_Name = "FI_COMPTA"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "FI_COMPTA71"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "FI_COMPTA72"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "FI_COMPTA73"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "FI_COMPTAGEN"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "FI_FONCTIONS"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "FI_FUNCTIONSGROUP"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "FI_FUNCTIONSGROUPINVEST"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "FI_MCHDATA"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "FI_NATURESALL"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "FI_TEXT"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "F_AUTOFIN_GLOBAL1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "F_FONCTIONSRESULTATRESUMEE1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "F_INVESTISSEMENT1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "F_PAGEDEGARDE2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "F_PREVISIONSINVESTISSEMENT1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "F_RESULTATDECHETS3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "F_RESULTATGENERAL1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "F_RESULTATGLOBAL1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Feuil4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "MCH2"

' Version 0.0.13
' Noms des fonctions publiques en anglais'

Option Explicit

Private Sub Workbook_BeforePrint(Cancel As Boolean)
    Application.Calculate
End Sub

Function BalanceCol(compte As String, colonne As Integer) As Variant
'    Application.Volatile (True)

    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("COMPTA")

    Dim result As Variant
    result = Application.WorksheetFunction.VLookup(compte, sheet.Range("A:AH"), colonne, False)
        
    BalanceCol = result
End Function

Function BalanceColNoErr(compte As String, colonne As Integer) As Variant
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("COMPTA")
    
    Dim result As Variant
    
    Err.Clear
    On Error Resume Next
    result = Application.WorksheetFunction.VLookup(compte, sheet.Range("A:AH"), colonne, False)
    
    BalanceColNoErr = result
End Function

  Function BalanceFinalNoErr(compte As String) As Variant
    BalanceFinalNoErr = BalanceColNoErr(compte, 3)
End Function

Function BalanceBudgetNoErr(compte As String) As Variant
    BalanceBudgetNoErr = BalanceColNoErr(compte, 4)
End Function

Function BalancePreviousNoErr(compte As String) As Variant
    BalancePreviousNoErr = BalanceColNoErr(compte, 5)
End Function

Function AccountTitleNoErr(compte As String) As Variant
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("COMPTA")
    
    Dim result As Variant
    
    Err.Clear
    On Error Resume Next
    result = Application.WorksheetFunction.VLookup(compte, sheet.Range("A:AH"), 2, False)
    
    If IsEmpty(result) Then
       result = "  n/a"
    End If
    
    AccountTitleNoErr = result
End Function

    
Private Function GetFSSheetName(fs As Variant) As String
    If fs = 71 Then
      GetFSSheetName = "COMPTA71"
    ElseIf fs = 7101 Then
      GetFSSheetName = "COMPTA7101"
      
    ElseIf fs = 72 Then
      GetFSSheetName = "COMPTA72"
    ElseIf fs = 7201 Then
      GetFSSheetName = "COMPTA7201"
      
    ElseIf fs = 73 Then
      GetFSSheetName = "COMPTA73"
    ElseIf fs = 7301 Then
      GetFSSheetName = "COMPTA7301"
      
    ElseIf fs = 74 Then
      GetFSSheetName = "COMPTA74"
    ElseIf fs = 7401 Then
      GetFSSheetName = "COMPTA7401"
    
    ElseIf fs = 75 Then
      GetFSSheetName = "COMPTA75"
    ElseIf fs = 7501 Then
      GetFSSheetName = "COMPTA7501"
    
    ElseIf fs = 76 Then
      GetFSSheetName = "COMPTA76"
    ElseIf fs = 7601 Then
      GetFSSheetName = "COMPTA7601"
    
    ElseIf fs = 0 Or fs = "" Then
      GetFSSheetName = "COMPTA"
    ElseIf fs = 1 Then
      GetFSSheetName = "COMPTAGEN"
    Else
      GetFSSheetName = CVErr(2000)
    End If

End Function

Function BalanceColSFNoErr(compte As Variant, colonne As Integer, fs As Variant) As Variant
'    Application.Volatile (True)

    Dim sheet As Worksheet
    
    Set sheet = ThisWorkbook.Sheets(GetFSSheetName(fs))

    Dim result As Variant
    On Error Resume Next
    
    result = Application.WorksheetFunction.VLookup(compte, sheet.Range("A:AH"), colonne, False)
    BalanceColSFNoErr = result
End Function
    
Function BalanceColSF(compte As Variant, colonne As Integer, fs As Variant) As Variant
    Dim sheet As Worksheet
    
    Set sheet = ThisWorkbook.Sheets(GetFSSheetName(fs))

    Dim result As Variant
    result = Application.WorksheetFunction.VLookup(compte, sheet.Range("A:AH"), colonne, False)
    BalanceColSF = result
End Function


Function BalanceColFunction(compte As Variant, colonne As Integer) As Variant
'    Application.Volatile (True)

    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("FONCTIONS")

    Dim result As Variant
    Dim key As String
        key = compte
    
    result = Application.WorksheetFunction.VLookup(key, sheet.Range("A:AH"), colonne, False)
    BalanceColFunction = result
End Function


Function FunctionTitle(compte As Variant) As Variant
    FunctionTitle = BalanceColFunction(compte, 2)
End Function

Function BalanceFunction(compte As Variant) As Variant
    BalanceFunction = BalanceColFunction(compte, 3)
End Function

Function BalanceColFunctionDCGeneral(compte As Variant, colonne As Integer, investissement As Integer) As Double
    Dim sheet As Worksheet
    
    If (investissement = 1) Then
        Set sheet = ThisWorkbook.Sheets("FUNCTIONSGROUPINVEST")
    Else
        Set sheet = ThisWorkbook.Sheets("FUNCTIONSGROUP")
    End If

    Dim result As Variant
    Err.Clear
    On Error Resume Next
    Err.Clear
    result = Application.WorksheetFunction.VLookup(compte, sheet.Range("A:AH"), colonne, False)
        
    If Err.Number = 0 Then
      BalanceColFunctionDCGeneral = result
    Else
      BalanceColFunctionDCGeneral = ""
    End If
End Function

Function BalanceColFunctionDC(compte As Variant, colonne As Integer) As Double
    BalanceColFunctionDC = BalanceColFunctionDCGeneral(compte, colonne, 0)
End Function


Function BalanceColFunctionDC_I(compte As Variant, colonne As Integer) As Double
    BalanceColFunctionDC_I = BalanceColFunctionDCGeneral(compte, colonne, 1)
End Function

Function BalanceColNatureDC(compte As Variant, colonne As Integer) As Variant
    Dim sheet As Worksheet
    
    Set sheet = ThisWorkbook.Sheets("NATURESALL")

    Dim result As Variant
    Err.Clear
    On Error Resume Next
    Err.Clear
    result = Application.WorksheetFunction.VLookup(compte, sheet.Range("A:AH"), colonne, False)
        
    Dim errno As Integer
    errno = Err.Number
    
    If Err.Number = 0 Then
      BalanceColNatureDC = result
    Else
      BalanceColNatureDC = ""
    End If
End Function

Function BalanceBudgetFunction(compte As Variant) As Variant
    BalanceBudgetFunction = BalanceColFunction(compte, 4)
End Function

Function BalancePreviousFunction(compte As Variant) As Variant
    BalancePreviousFunction = BalanceColFunction(compte, 5)
End Function

Function BSBalanceOpening(compte As String) As Variant
    BSBalanceOpening = BalanceCol(compte, 3)
End Function

Function BSBalanceOpeningNoErr(compte As String) As Variant
    BSBalanceOpeningNoErr = BalanceColNoErr(compte, 3)
End Function

Function BSBalanceFinal(compte As String) As Variant
    BSBalanceFinal = BalanceCol(compte, 5)
End Function

Function BSBalanceFinalNoErr(compte As String) As Variant
    BSBalanceFinalNoErr = BalanceColNoErr(compte, 5)
End Function

Function BalanceFinal(compte As String) As Variant
    BalanceFinal = BalanceCol(compte, 3)
End Function

Function BalanceBudget(compte As String) As Variant
    BalanceBudget = BalanceCol(compte, 4)
End Function

Function BalancePrevious(compte As String) As Variant
    BalancePrevious = BalanceCol(compte, 5)
End Function

Function BalanceFinalSF(compte As Variant, fs As Integer) As Variant
    BalanceFinalSF = BalanceColSF(compte, 3, fs)
End Function

Function BalanceBudgetSF(compte As Variant, fs As Integer) As Variant
    BalanceBudgetSF = BalanceColSF(compte, 4, fs)
End Function

Function BalancePreviousSF(compte As Variant, fs As Integer) As Variant
    BalancePreviousSF = BalanceColSF(compte, 5, fs)
End Function


Function BalanceFinalSFNoErr(compte As Variant, fs As Variant) As Variant
    BalanceFinalSFNoErr = BalanceColSFNoErr(compte, 3, fs)
End Function

Function BalanceBudgetSFNoErr(compte As Variant, fs As Variant) As Variant
    BalanceBudgetSFNoErr = BalanceColSFNoErr(compte, 4, fs)
End Function

Function BalancePreviousSFNoErr(compte As Variant, fs As Variant) As Variant
    BalancePreviousSFNoErr = BalanceColSFNoErr(compte, 5, fs)
End Function

Function BalanceBudgetN(compte As String, annee As Integer) As Variant
' Donne le budget de ann|fffd|e "+N"

    If annee < 0 Or annee > 5 Then
      Debug.Print "BalanceBudgetN: erreur d'argument: annee doit |fffd|tre compris entre 0 et 5"
      BalanceBudgetN = CVErr(xlErrNA)
    Else
        BalanceBudgetN = BalanceCol(compte, 13 + annee)
    End If
End Function

Function BalanceBudgetNNoErr(compte As String, annee As Integer) As Variant
' Donne le budget de ann|fffd|e "+N"

    If annee < 0 Or annee > 5 Then
      Debug.Print "BalanceBudgetNNoErr: erreur d'argument: annee doit |fffd|tre compris entre 0 et 5"
      BalanceBudgetNNoErr = CVErr(xlErrNA)
    Else
        BalanceBudgetNNoErr = BalanceColNoErr(compte, 13 + annee)
    End If
End Function

Function BalancePreviousN(compte As Variant, annee As Integer) As Variant
' Donne le solde pr|fffd|c|fffd|dent de ann|fffd|e "-N"

    If annee < -6 Or annee > -1 Then
      Debug.Print "BalancePreviousN: erreur d'argument: annee doit |fffd|tre compris entre -6 et -1"
      BalancePreviousN = CVErr(xlErrNA)
    Else
        BalancePreviousN = BalanceCol(compte, 13 - annee)
    End If
End Function

Function BalancePreviousNNoErr(compte As Variant, annee As Integer) As Variant
' Donne le solde pr|fffd|c|fffd|dent de ann|fffd|e "-N"

    If annee < -6 Or annee > -1 Then
      Debug.Print "BalancePreviousNNoErr: erreur d'argument: annee doit |fffd|tre compris entre -6 et -1"
      BalancePreviousNNoErr = CVErr(xlErrNA)
    Else
        BalancePreviousNNoErr = BalanceColNoErr(compte, 13 - annee)
    End If
End Function

Function AccountTitle(compte As String) As Variant
    AccountTitle = BalanceCol(compte, 2)
End Function

Function CurrentYear() As Integer
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("TEXT")
    CurrentYear = sheet.Cells(1, 2)
End Function

Function TextYear(annee As Integer) As String
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("TEXT")
    TextYear = StandardText(8) & " " & CurrentYear() + annee
End Function

Function TextCommunity() As String
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("TEXT")
    TextCommunity = sheet.Cells(2, 2)
End Function

Function TextBudget(annee As Integer) As String
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("TEXT")
    TextBudget = StandardText(7) & " " & CurrentYear() + annee
End Function

Function TextAccounts(annee As Integer) As String
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("TEXT")
    TextAccounts = StandardText(57) & " " & CurrentYear() + annee
End Function

Function SystemInfo(numtext As Integer) As String
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("SYSTEMINFO")
    Dim temp As String
    temp = sheet.Cells(numtext, 1)
    SystemInfo = temp
End Function

Function StandardText(numero As Integer) As Variant
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("TEXT")
    StandardText = sheet.Cells(numero, 2)
End Function

Function StandardText2(numero As Integer) As Variant
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("COMPTATEXTS")
    StandardText2 = sheet.Cells(numero, 2)
End Function

Function TextSF(fs As Variant) As String
    Dim result As String
    
    If fs = 71 Then
      result = StandardText(60)
    ElseIf fs = 72 Then
      result = StandardText(61)
    ElseIf fs = 73 Then
      result = StandardText(62)
    ElseIf fs = 0 Or fs = "" Then
      result = StandardText(58)
    ElseIf fs = 1 Then
      result = StandardText(59)
    End If
    
    TextSF = result
End Function

Function AutoFinancement(fs As Variant) As Double
    AutoFinancement = _
        BalanceFinalSFNoErr("4", fs) - BalanceFinalSFNoErr("3", fs) _
        + BalanceColSFNoErr("33", 3, fs) _
        + BalanceColSFNoErr("35", 3, fs) _
        - BalanceColSFNoErr("45", 3, fs) _
        + BalanceColSFNoErr("364", 3, fs) _
        + BalanceColSFNoErr("365", 3, fs) _
        + BalanceColSFNoErr("366", 3, fs) _
        + BalanceColSFNoErr("383", 3, fs) _
        + BalanceColSFNoErr("389", 3, fs) _
        - BalanceColSFNoErr("489", 3, fs)
End Function

Function AutoFinancementCol(fs As Variant, col As Integer) As Double
    AutoFinancementCol = _
        BalanceColSFNoErr("4", col, fs) - BalanceColSFNoErr("3", col, fs) _
        + BalanceColSFNoErr("33", col, fs) _
        + BalanceColSFNoErr("35", col, fs) _
        - BalanceColSFNoErr("45", col, fs) _
        + BalanceColSFNoErr("364", col, fs) _
        + BalanceColSFNoErr("365", col, fs) _
        + BalanceColSFNoErr("366", col, fs) _
        + BalanceColSFNoErr("383", col, fs) _
        + BalanceColSFNoErr("389", col, fs) _
        - BalanceColSFNoErr("489", col, fs)
End Function

Function CurrentRevenue(fs As Variant) As Double
    CurrentRevenue = _
        BalanceColSFNoErr("40", 3, fs) _
        + BalanceColSFNoErr("41", 3, fs) _
        + BalanceColSFNoErr("42", 3, fs) _
        + BalanceColSFNoErr("43", 3, fs) _
        + BalanceColSFNoErr("46", 3, fs)
End Function

Function CurrentRevenueCol(fs As Variant, col As Integer) As Double
    CurrentRevenueCol = _
        BalanceColSFNoErr("40", col, fs) _
        + BalanceColSFNoErr("41", col, fs) _
        + BalanceColSFNoErr("42", col, fs) _
        + BalanceColSFNoErr("43", col, fs) _
        + BalanceColSFNoErr("46", col, fs)
End Function

Function DetteNette_1(fs As Variant) As Double
  DetteNette_1 = BSBalanceFinal("20") - BSBalanceFinal("10")
End Function

Function NetInvestments(fs As Variant) As Double
    NetInvestments = BalanceColSFNoErr("5", 3, fs) - BalanceColSFNoErr("6", 3, fs)
End Function

Function NetInvestmentsCol(fs As Variant, col As Integer) As Double
    NetInvestmentsCol = BalanceColSFNoErr("5", col, fs) - BalanceColSFNoErr("6", col, fs)
End Function

Function GrossInvestments(fs As Variant) As Double
    GrossInvestments = _
        BalanceColSFNoErr("50", 3, fs) _
        + BalanceColSFNoErr("51", 3, fs) _
        + BalanceColSFNoErr("52", 3, fs) _
        + BalanceColSFNoErr("54", 3, fs) _
        + BalanceColSFNoErr("55", 3, fs) _
        + BalanceColSFNoErr("56", 3, fs)
End Function

Function GrossInvestmentsCol(fs As Variant, col As Integer) As Double
    GrossInvestmentsCol = _
        BalanceColSFNoErr("50", col, fs) _
        + BalanceColSFNoErr("51", col, fs) _
        + BalanceColSFNoErr("52", col, fs) _
        + BalanceColSFNoErr("54", col, fs) _
        + BalanceColSFNoErr("55", col, fs) _
        + BalanceColSFNoErr("56", col, fs)
End Function

Function CurrentExpenditure(fs As Variant) As Double
    CurrentExpenditure = _
        BalanceColSFNoErr("31", 3, fs) _
        - BalanceColSFNoErr("3180", 3, fs) _
        + BalanceColSFNoErr("34", 3, fs) _
        - BalanceColSFNoErr("344", 3, fs) _
        + BalanceColSFNoErr("36", 3, fs) _
        - BalanceColSFNoErr("364", 3, fs) _
        - BalanceColSFNoErr("365", 3, fs) _
        - BalanceColSFNoErr("366", 3, fs) _
        + BalanceColSFNoErr("380", 3, fs) _
        + BalanceColSFNoErr("381", 3, fs) _
        + BalanceColSFNoErr("3840", 3, fs)
End Function

Function CurrentExpenditureCol(fs As Variant, col As Integer) As Double
    CurrentExpenditur eCol = _
        BalanceColSFNoErr("31", col, fs) _
        - BalanceColSFNoErr("3180", col, fs) _
        + BalanceColSFNoErr("34", col, fs) _
        - BalanceColSFNoErr("344", col, fs) _
        + BalanceColSFNoErr("36", col, fs) _
        - BalanceColSFNoErr("364", col, fs) _
        - BalanceColSFNoErr("365", col, fs) _
        - BalanceColSFNoErr("366", col, fs) _
        + BalanceColSFNoErr("380", col, fs) _
        + BalanceColSFNoErr("381", col, fs) _
        + BalanceColSFNoErr("3840", col, fs)
End Function

Function TotalConsolidatedExpensesCol(fs As Variant, col As Integer) As Double
    TotalConsolidatedExpensesCol = _
        BalanceColSFNoErr("3", col, fs) _
        - BalanceColSFNoErr("33", col, fs) _
        - BalanceColSFNoErr("35", col, fs) _
        - BalanceColSFNoErr("37", col, fs) _
        - BalanceColSFNoErr("38", col, fs) _
        - BalanceColSFNoErr("39", col, fs) _
        + GrossInvestmentsCol(fs, col)
End Function

Function GrossDebt(fs As Variant) As Double
  GrossDebt = _
    BSBalanceFinal("200") _
    + BSBalanceFinal("201") _
    - BSBalanceFinal("2016") _
    + BSBalanceFinal("206") _
    - BSBalanceFinal("2068")
End Function

Function AccountingData(numero As Integer, annee As Integer) As Variant
'    Application.Volatile (True)
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("MCHDATA")
    AccountingData = sheet.Cells(numero, 3 + annee)
End Function

Function TextData(numero As Integer) As Variant
    Dim sheet As Worksheet
    Set sheet = ThisWorkbook.Sheets("MCHDATA")
    TextData = sheet.Cells(numero + 49, 2)
End Function

Function MyTestFunction(n As Integer) As Variant
    Dim result As Integer
    
    result = n * 2
    
    If result = 0 Then
        MyTestFunction = ""
    Else
        MyTestFunction = result
    End If
End Function

Function Diff(n1 As Variant, n2 As Variant) As Variant
    Dim result As Double
    
    If n1 = "" Then
      n1 = 0
    End If
    
     If n2 = "" Then
      n2 = 0
    End If

    Diff = n1 - n2
End Function

Function CalcBalance2(n1 As Variant, n2 As Variant, colonne As Integer) As Variant
    Dim result As Variant
    Dim temp As Variant
    
    If colonne = 1 Then
      temp = n1
      n1 = n2
      n2 = temp
    End If

    If n1 = "" Then
      n1 = 0
    End If
    
     If n2 = "" Then
      n2 = 0
    End If
    
    If n1 = n2 Then
      result = ""
    End If
    
    If n1 > n2 Then
      result = ""
    Else
      result = n2 - n1
    End If
    
    If result = 0 Then
      result = ""
    End If
    
    CalcBalance2 = result
End Function


' Comme la fonction Somme, fauf que ce sont les
' nombres arrondis qui sont somm|fffd|es.
' Ca |fffd|vit des erreurs qui arrivent lorsqu'on somme des nombres qui sont affich|fffd|s avec un format |fffd|
' z|fffd|ro d|fffd|cimales. Par exemple on somme 1.4 et 1.4 qui sont affich|fffd|s comme 1 et 1 en arrondi avec un r|fffd|sultat de 3
' (1.4 + 1.4 = 2.8 ce qui donne 3 en arrondi)
' Avec la fonction SumOfRounded on obtient 1 + 1 = 2

Function SumOfRounded(ParamArray av() As Variant) As Variant

    Dim a As Integer
    Dim i As Long
    Dim avArr()
    Dim element As Variant
    Dim retval As Double
    retval = 0

    a = 0
    i = 0
    While a < UBound(av) + 1
        If TypeName(av(a)) = "Double" Then
            avArr(i) = av(a)
            i = i + 1
        ElseIf TypeName(av(a)) = "Range" Then
            For Each element In av(a)
                ReDim Preserve avArr(0 To i)
                avArr(i) = element
                i = i + 1
            Next
        Else
            SumOfRounded = CVErr(xlErrValue)
            Exit Function
        End If
        a = a + 1
    Wend

    i = 0
    While i < UBound(avArr) + 1
        retval = retval + Round(avArr(i), 0)
        i = i + 1
    Wend
    
    SumOfRounded = retval
End Function

' Retourne la diff|fffd|rence de deux nombres arrondis.
' Cf. fonction SumOfRounded pour plus d'explications

Function DiffRounded(x As Double, y As Double) As Double
  DiffRounded = Round(x, 0) - Round(y, 0)
End Function



Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
' Version 0.0.5

Private Sub Workbook_Open()
' Cette fonction est appell|fffd|e |fffd| l'ouverture du fichier
' Ici on modifie l'ent|fffd|te pour l'impression de toutes les feuilles

    Dim sheetIndex, numsheets As Integer
    
    numsheets = ThisWorkbook.Sheets.Count
    sheetIndex = 1
    
    While (sheetIndex <= numsheets)
        ThisWorkbook.Sheets(sheetIndex).PageSetup.CenterHeader = "&B&12" & TextCommunity() & "&B"
          sheetIndex = sheetIndex + 1
    Wend
    
    Application.ErrorCheckingOptions.BackgroundChecking = False
    Application.CalculateFullRebuild
    ' on a vu des plant|fffd|e Excel avec Application.Calculate
    
    Me.Saved = True
    
End Sub


Private Sub Workbook_BeforePrint(Cancel As Boolean)
' Cette fonction est appell|fffd|e avant l'impression
' Elle lance un recalcul de tout afin d'|fffd|viter d'imprimer des donn|fffd|es non recalcul|fffd|es
    Application.CalculateFullRebuild
End Sub


Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)

End Sub


Private Sub Workbook_AfterSave(ByVal Success As Boolean)

End Sub



Attribute VB_Name = "Utilities"
' Version 0.0.10

Sub UnhideAllSheets()
    Dim ws As Worksheet
    
    For Each ws In ActiveWorkbook.Worksheets
        ws.Visible = xlSheetVisible
        ws.Unprotect
    Next ws
End Sub

Function GetWorksheetFromCodeName(ByVal CodeName As String) As Worksheet
    Dim ws As Worksheet
    For Each ws In ThisWorkbook.Worksheets
        If StrComp(ws.CodeName, CodeName, vbTextCompare) = 0 Then
            Set GetWorksheetFromCodeName = ws
            Exit Function
        End If
    Next ws
End Function


Sub ResetTabNames()
    Dim ws As Worksheet
    Dim a, d, i       'Cr|fffd|e des variables
    
    Debug.Print "Resetting tab names"
    
    Set d = CreateObject("Scripting.Dictionary")
    
    d.Add "F_PAGEDEGARDE", "_EP_PAGEGARDE"
    d.Add "F_MESSAGE", "_EP_MESSAGE"
    d.Add "F_RESULTATGLOBAL", "_EP_COMPTERESULTAT_GLOBAL"
    d.Add "F_RESULTATGENERAL", "_EP_COMPTERESULTAT_GENERAL"
    d.Add "F_RESULTATEAU", "_EP_COMPTERESULTAT_EAU"
    d.Add "F_RESULTATEAUUSEES", "_EP_COMPTERESULTAT_EAUUSEES"
    d.Add "F_RESULTATDECHETS", "_EP_COMPTERESULTAT_DECHETS"
    d.Add "F_BILAN", "_EP_BILAN"
    d.Add "F_FONCTIONSRESULTATRESUMEE", "_EP_FONCTIONS_R"
    d.Add "F_FONCTIONSRESULTATCOMMENTAIRES", "_EP_FONCTIONS_R_COM"
    d.Add "F_FONCTIONSINVESTISSEMENTRESUME", "_EP_FONCTIONS_I"
    d.Add "F_FONCTIONSINVESCOMMENT", "_EP_FONCTIONS_I_COM"
    d.Add "F_RESULTAT", "_EP_COMPTERESULTAT"
    d.Add "F_COMPTEINVESTISSEMSNT2", "_EP_COMPTE_INVEST2"
    d.Add "F_INDICATEURSFINANCIERS", "_EP_INDIC_FIN"
    d.Add "F_APPROBATION", "_EP_APPROBATION"
    d.Add "F_DETAILBILAN", "_EP_BILANDETAIL"
    d.Add "F_DETAILSRESULTATFONCTIONS", "_EP_FUNCTIONSDETAIL"
    d.Add "F_DETAILRESULTATGROUPMAT", "_EP_NATURESDETAIL"
    d.Add "F_DETAILINVESTISSEMENTFONCTIONS", "_EP_FUNCTIONDETAILINVEST"
    d.Add "F_DETAILINVESTISSEMENTGROUPMAT", "_EP_NATURESDETAILINVEST"
    d.Add "F_PREVISIONSFONCTIONNEMENT", "_EP_PREVISIONS_F"
    d.Add "F_PREVISIONSINVESTISSEMENT", "_EP_PREVISIONS_I"
    d.Add "F_FLUXTRESORERIE", "_EP_FLUX"
    d.Add "F_PROVISIONS", "_EP_PROVISIONS"
    d.Add "F_PARTICIPATIONS", "_EP_PARTICIPATIONS"
    d.Add "F_GARANTIES", "_EP_GARANTIES"
    d.Add "F_CREDITENGAGEMENT", "_EP_CREDIT_ENGAG"
    d.Add "F_CREDITSSUPPLEMENTAIRES", "_EP_CREDITS_SUPP"
    d.Add "F_INVESTISSEMENT", "_EP_COMPTE_INVEST"
    d.Add "F_ANNEXE", "_EP_ANNEXES"
    d.Add "F_FINANCEMENTSPECRESUME", "_EP_FINSPEC"
    d.Add "F_VUEENSEMBLE", "_EP_VUENSEMBLE"
    
    d.Add "F_AUTOFIN_GLOBAL", "_EP_AUTOFIN_GLOBAL"
    d.Add "F_AUTOFIN_GENERAL", "_EP_AUTOFIN_GENERAL"
    d.Add "F_AUTOFIN_DECHETS", "_EP_AUTOFIN_DECHETS"
    d.Add "F_AUTOFIN_EAU", "_EP_AUTOFIN_EAU"
    d.Add "F_AUTOFIN_EAUXUSEES", "_EP_AUTOFIN_EAUXUSEES"
    d.Add "F_PA_FS_DETAIL", "_EP_PA_FS_DETAIL"
      
    Dim x
    For Each x In d
        Set ws = GetWorksheetFromCodeName(x)
        
        If Not ws Is Nothing Then
          ws.Name = d.Item(x)
        Else
          Debug.Print "Not found"
        End If
    Next
        
End Sub


Sub AssignTabNames()
    Dim ws As Worksheet
    Dim wsnames As Worksheet
    Dim line As Integer
    Dim key As String
    Dim value As String
    
    Debug.Print "Assigning tab names"
    
    Set wsnames = ThisWorkbook.Worksheets("TABNAMES")
    line = 1
    
    For line = 1 To 100
      key = wsnames.Cells(line, 1)
      value = wsnames.Cells(line, 2)
      
      If key = Empty Then Exit For
            
      Set ws = Nothing
      On Error Resume Next
      Set ws = ThisWorkbook.Worksheets(key)
      
      If ws <> Null Then
        ws.Name = value
      End If
      
    Next line
    
End Sub

Private Sub FonteCalibri()
'
' FonteCalibri Macro
'
'
    Cells.Select
    With Selection.Font
        .Name = "Calibri"
    End With
End Sub

Sub EpsitecMargesStandard()
'
' EpsitecMargesStandard Macro'

'
    Application.PrintCommunication = False
    With ActiveSheet.PageSetup
        .LeftMargin = Application.InchesToPoints(0.31496062992126)
        .RightMargin = Application.InchesToPoints(0.31496062992126)
        .TopMargin = Application.InchesToPoints(0.708661417322835)
        .BottomMargin = Application.InchesToPoints(0.196850393700787)
        .HeaderMargin = Application.InchesToPoints(0.275590551181102)
        .FooterMargin = Application.InchesToPoints(0)
        .PrintHeadings = False
        .PrintGridlines = False
        .PrintComments = xlPrintNoComments
        .CenterHorizontally = False
        .CenterVertically = False
        .Orientation = xlLandscape
        .Draft = False
        .PaperSize = xlPaperA4
        .FirstPageNumber = xlAutomatic
        .Order = xlDownThenOver
        .BlackAndWhite = False
        .Zoom = 100
        .PrintErrors = xlPrintErrorsDisplayed
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .ScaleWithDocHeaderFooter = True
        .AlignMarginsHeaderFooter = True
    End With
    Application.PrintCommunication = True
End Sub


Sub EpsitecPrepare()
' Macro |fffd| l'usage d'Epsitec
' S|fffd|lectionne la cellule A1 de chaque Worksheet
' et active le 1er Worksheet
' En plus supprime l'affichage des formule sdans toutes les feuilles

 Call UnhideAllSheets
 Call EpsitecSign

    Dim ws As Worksheet
    For Each ws In ThisWorkbook.Worksheets
        ws.Activate
        Call EpsitecMargesStandard
        Call FonteCalibri
        ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True
        ActiveWindow.Zoom = 100
        ws.Range("A1").Select
        ActiveWindow.DisplayFormulas = False
    Next ws
        
    ThisWorkbook.Worksheets(1).Activate
End Sub

Private Sub EpsitecSign()
    Dim signature As String
    ThisWorkbook.Worksheets(1).Activate
    signature = Application.InputBox(prompt:="Vos initiales")
    Cells(28, 4) = "Mod|fffd|le " & UCase(signature) & " " & Date
End Sub

Sub ShowFormulas()
' Macro |fffd| l'usage d'Epsitec
' S|fffd|lectionner la cellule A1 de chaque Worksheet
' et active le 1er Worksheet

    Dim ws As Worksheet
    For Each ws In ThisWorkbook.Worksheets
        ws.Activate
        ActiveWindow.DisplayFormulas = True
    Next ws
        
    ThisWorkbook.Worksheets(1).Activate
End Sub


Sub FormatCresusShowZero()
' FormatCresus Macro
' Met le style de nombre "Cr|fffd|sus" sur la zone s|fffd|lectinn|fffd|e
' Rappel: Le format des cellules standard "Nombre" est bousill|fffd| par ClosedXML
' en revanche en mettant un format "custom" ClosedXML le garde tel quel
'
' Si la cellule contient z|fffd|ro, rien ne sera affich|fffd| dans la cellule
'
' Cette pacro est assign|fffd| |fffd| Ctrl+U

    Selection.NumberFormat = "#,##0.00;-#,##0.00"
End Sub


Sub FormatCresusDontShowZero()
' FormatCresusDontShowZero Macro
' Met le style de nombre "Cr|fffd|sus" sur la zone s|fffd|lectinn|fffd|e
' Rappel: Le format des cellules standard "Nombre" est bousill|fffd| par ClosedXML
' en revanche en mettant un format "custom" ClosedXML le garde tel quel
'
' Si la cellule contient z|fffd|ro, l'affichage sera "0.00"
'
' Cette pacro est assign|fffd| |fffd| Ctrl+u

    Selection.NumberFormat = "#,##0.00;-#,##0.00;"
End Sub


Sub FormatCresusZeroAsHyphen()
' FormatCresusZeroAsHyphen Macro
' Met le style de nombre "Cr|fffd|sus" sur la zone s|fffd|lectinn|fffd|e
' Rappel: Le format des cellules standard "Nombre" est bousill|fffd| par ClosedXML
' en revanche en mettant un format "custom" ClosedXML le garde tel quel
'
' Si la cellule contient z|fffd|ro, l'affichage sera "  -  "
' Cette pacro est assign|fffd| |fffd| Ctrl+R

    Selection.NumberFormat = "#,##0.00;-#,##0.00;-   "
End Sub


Sub FormatCresusTousands()
' FormatCresusZeroAsHyphen Macro
' Met le style de nombre "Cr|fffd|sus" sur la zone s|fffd|lectinn|fffd|e
' Rappel: Le format des cellules standard "Nombre" est bousill|fffd| par ClosedXML
' en revanche en mettant un format "custom" ClosedXML le garde tel quel
'
' Si la cellule contient z|fffd|ro, l'affichage sera "  -  "
' Cette pacro est assign|fffd| |fffd| Ctrl+Shift+R

    Selection.NumberFormat = "#,##0;-#,##0;-   "
End Sub


Sub Recalculate()
' Recalcule tout le classeur
' Ca fait plus que le bouton "Calculer maintenant" dans l'onget "Formules du ruban",
' ce dernier ne tient pas compte

    Application.CalculateFullRebuild
End Sub




' InQuest injected base64 decoded content
' ^tLiz{
' 5!N4$
' D0CS

INQUEST-PP=macro
