Attribute VB_Name = "Attrezzature"
Attribute VB_Base = "0{5C7398E5-CD42-4B7D-A760-84B25236025D}{6F36AFE0-4951-4C19-B846-C155EE1B40CC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit
Public WithEvents objResizer As MSForms.Label
Attribute objResizer.VB_VarHelpID = -1
Dim LeftResizePos As Single
Dim TopResizePos As Single
Dim WidthRatio As Single
Dim HeightRatio As Single
Dim OldWidth As Double
Dim OldHeight As Double
Dim TopArray() As Single
Dim LeftArray() As Single
Dim WidthArray() As Single
Dim HeightArray() As Single
Dim FontArray() As Single
Private Sub cmdAdd_Click()

'dimention the variable
Dim DataSH As Worksheet
Dim Addme As Range
'set the variable
Set DataSH = Foglio9
'error handler
On Error GoTo errHandler:
'set variable for the destination
Set Addme = DataSH.Cells(Rows.Count, 3).End(xlUp).Offset(1, 1)
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
If Me.ComboBox1 = "" Or Me.ComboBox3 = "" Then
MsgBox "Dati Insufficenti"
Exit Sub
End If
'send the values to the database
With DataSH
'add the unique reference ID then all other values
Addme.Offset(0, -1) = DataSH.Range("D5").Value + 1
Addme.Value = Me.ComboBox1
Addme.Offset(0, 1).Value = Me.ComboBox2
Addme.Offset(0, 2).Value = Me.ComboBox3
Addme.Offset(0, 3).Value = Me.ComboBox4
Addme.Offset(0, 4).Value = Me.ComboBox5
Addme.Offset(0, 5).Value = Me.ComboBox6
Addme.Offset(0, 6).Value = Me.ComboBox7
Addme.Offset(0, 7).Value = Me.ComboBox8


End With
'sort the data by "Surname"
DataSH.Select
With DataSH
.Range("C9:L10000").Sort Key1:=Range("C9"), Order1:=xlAscending, Header:=xlGuess
End With
'clear the values after entry
Clear
'communicate with the user
MsgBox "I tuoi dati dei sono stati aggiunti con successo"
'return to interface sheet sheet
Foglio9.Select
'reset the form
On Error GoTo 0
Exit Sub
errHandler:
'if error occurs then show me exactly where the error occurs
MsgBox ("Articolo Inserito ")
End Sub

Sub Clear()
Dim ctl As Control
For Each ctl In Me.Controls
Select Case TypeName(ctl)
Case "TextBox"
ctl.Text = ""
Case "ListBox"
ctl.RowSource = ""
Case "ComboBox"
ctl.Value = ""
End Select
Next ctl

End Sub

Private Sub cmdCerca_Click()

'dim the variables
Dim Crit As Range
Dim FindMe As Range
Dim DataSH As Worksheet
'error handler
On Error GoTo errHandler:
'set object variables
Set DataSH = Foglio9
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
'///////////////////////////////////////////
'if header is selected add the criteria
If Me.cmdHeader.Value <> "All_Columns" Then
If Me.txtSearch = "" Then
DataSH.Range("Y9") = ""
Else
DataSH.Range("Y9") = "*" & Me.txtSearch.Value & "*"
End If
End If
'//////////////////////////////////////////
'if all columns is selected
If Me.cmdHeader.Value = "All_Columns" Then
'find the value in the column
Set FindMe = DataSH.Range("C8:U30000").Find(What:=txtSearch, LookIn:=xlValues, _
LookAt:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
MatchCase:=False, SearchFormat:=False)
'variable for criteria header
Set Crit = DataSH.Cells(18, FindMe.Column)
'if no criteria is added to the search
If Me.txtSearch = "" Then
DataSH.Range("Y9") = ""
DataSH.Range("Y8") = ""
Else
'add values from the search
DataSH.Range("Y8") = Crit
If Crit = "ID" Then
DataSH.Range("Y9") = Me.txtSearch.Value
Else
DataSH.Range("Y9") = "*" & Me.txtSearch.Value & "*"
End If
'show in the userform the header that is added
Me.txtAllColumn = DataSH.Range("Y8").Value
End If
End If
'/////////////////////////////////////////
'unprotect all sheets
'Unprotect_All
'filter the ElencoGrid_Form

DataSH.Range("C9").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Range("Data!$Y$8:$Y$9"), CopyToRange:=Range("Data!$AA$8:$AS$8"), _
Unique:=False
'add the dynamic data to the listbox
lstEmployee.RowSource = DataSH.Range("outdata").Address(external:=True)
'protect all sheets
'Protect_All
'error handler
On Error GoTo 0
Exit Sub
errHandler:
'Protect all sheets
'Protect_All
'if error occurs then show me exactly where the error occurs
MsgBox "Nessuna corrispondenza trovata per " & txtSearch.Text
'clear the listbox if no match is found
Me.lstEmployee.RowSource = ""
Exit Sub
End Sub

Private Sub cmdClear_Click()

'clear all controls
Clear

End Sub



Private Sub cmdclose_Click()
'close the form
    Unload Me
    ThisWorkbook.Saved = True
    Application.Quit
   

End Sub
    
    


Private Sub cmdDelete_Click()
'declare the variables
Dim findvalue As Range
Dim cDelete As VbMsgBoxResult
Dim cNum As Integer
Dim DataSH As Worksheet
Set DataSH = Foglio9
Dim X As Integer
'error statement
On Error GoTo errHandler:
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
'check for values
If Emp1.Value = "" Or Emp2.Value = "" Then
MsgBox "Non ci sono dati da cancellare"
Exit Sub
End If
'give the user a chance to change their mind
cDelete = MsgBox("Sei sicuro di voler eliminare questo Articolo", _
vbYesNo + vbDefaultButton2, "Sei sicuro????")
If cDelete = vbYes Then
'find the row
Set findvalue = DataSH.Range("C:C").Find(What:=Me.Emp1.Value, _
LookIn:=xlValues, LookAt:=xlWhole)
'delete the entire row
findvalue.EntireRow.Delete
End If
'clear the controls
cNum = 7
For X = 1 To cNum
Me.Controls("Emp" & X).Value = ""
Next
'unprotect all sheets for the advanced filter
'Unprotect_All
'filter the data
DataSH.Range("C8").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Range("ElencoGrid_Form!$Y$8:$Y$9"), CopyToRange:=Range("ElencoGrid_Form!$AA$8:$AS$8"), _
Unique:=False
'if no data exists then clear the rowsource
If DataSH.Range("AA9").Value = "" Then
lstEmployee.RowSource = ""
Else
'add the filtered data to the rowsource
lstEmployee.RowSource = DataSH.Range("outdata").Address(external:=True)
End If
'sort the data by "Surname"
DataSH.Select
With DataSH
.Range("C9:U10000").Sort Key1:=Range("D9"), Order1:=xlAscending, Header:=xlGuess
End With
'Protect all sheets
'Protect_All
'return to sheet
Foglio8.Select
'error block
On Error GoTo 0
Exit Sub
errHandler:
'Protect all sheets if error occurs
'Protect_All
'show error information in a messagebox
MsgBox "Eliminato !!! "


End Sub

Private Sub cmdEdit_Click()
'declare the variables
Dim findvalue As Range
Dim cNum As Integer
Dim DataSH As Worksheet
'error handling
On Error GoTo errHandler:
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
Set DataSH = Foglio9
'check for values
If Emp1.Value = "" Or Emp2.Value = "" Then
MsgBox "Non ci sono Dati da Modificare"
Exit Sub
End If
'clear the listbox
lstEmployee.RowSource = ""
'find the row to edit
Set findvalue = DataSH.Range("C:C"). _
Find(What:=Me.Emp1.Value, LookIn:=xlValues, LookAt:=xlWhole)
'update the values
findvalue = Emp1.Value
findvalue.Offset(0, 1) = Emp2.Value
findvalue.Offset(0, 2) = Emp3.Value
findvalue.Offset(0, 3) = Emp4.Value
findvalue.Offset(0, 4) = Emp5.Value
findvalue.Offset(0, 5) = Emp6.Value
findvalue.Offset(0, 6) = Emp7.Value
findvalue.Offset(0, 7) = Emp8.Value
findvalue.Offset(0, 8) = Emp9.Value


'unprotect the worksheets for the advanced filter
'Unprotect_All
'filter the data
DataSH.Range("C8").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Range("ElencoGrid_Form!$Y$8:$Y$9"), CopyToRange:=Range("ElencoGrid_Form!$AA$8:$AS$8"), _
Unique:=False
'if no data exists then clear the rowsource
If DataSH.Range("AA9").Value = "" Then
lstEmployee.RowSource = ""
Else
'add the filtered data to the rowsource
lstEmployee.RowSource = DataSH.Range("outdata").Address(external:=True)
End If
'return to sheet
Foglio9.Select
'Protect all sheets
'Protect_All
'error block
On Error GoTo 0
Exit Sub
errHandler:
'Protect all sheets
'Protect_All

'show error information in a messagebox
MsgBox "Modificato con successo"
End Sub




Private Sub cmdHeader_Change()
'dim the variable
Dim DataSH As Worksheet
'set the variable
Set DataSH = Foglio8
'establish the condition for "All_Columns"
If Me.cmdHeader.Value = "All_Columns" Then
DataSH.Range("Y9") = ""
Else
'clear the textbox
Me.txtAllColumn = ""
'add the criteria header to the sheet
DataSH.Range("Y8") = Me.cmdHeader.Value
'clear any existing criteria
DataSH.Range("Y9") = ""
End If
End Sub

Private Sub cmdClearme_Click()
Clear
End Sub










Private Sub Image1_Click()

End Sub

Private Sub ComboBox9_Change()

End Sub

Private Sub CommandButton1_Click()
Unload Me
End Sub

Private Sub ComboBox1_Change()

End Sub

Private Sub ComboBox18_Change()

End Sub

Private Sub ComboBox18_DropButtonClick()
CommandButton8_Click
End Sub

Private Sub ComboBox19_Change()

End Sub

Private Sub ComboBox19_DropButtonClick()
CommandButton8_Click
End Sub

Private Sub ComboBox2_Change()

End Sub

Private Sub ComboBox20_Change()

End Sub

Private Sub ComboBox20_DropButtonClick()
CommandButton8_Click
End Sub

Private Sub ComboBox21_Change()

End Sub

Private Sub ComboBox21_DropButtonClick()
CommandButton8_Click
End Sub

Private Sub ComboBox22_Change()

End Sub

Private Sub ComboBox22_DropButtonClick()
CommandButton8_Click
End Sub

Private Sub ComboBox23_Change()

End Sub

Private Sub ComboBox23_DropButtonClick()
CommandButton8_Click
End Sub

Private Sub ComboBox24_Change()

End Sub

Private Sub ComboBox24_DropButtonClick()
CommandButton8_Click
End Sub

Private Sub ComboBox25_Change()

End Sub

Private Sub ComboBox25_DropButtonClick()
CommandButton8_Click
End Sub

Private Sub ComboBox26_Change()

End Sub

Private Sub ComboBox26_DropButtonClick()
CommandButton8_Click
End Sub

Private Sub CommandButton10_Click()

Unload Me
UserForm1.Show

End Sub

Private Sub CommandButton3_Click()

Dim Dpath As String
Dim FileN As Range, FolderPath As Range
Dim MyRange As Range
'turn off screen updating
Application.ScreenUpdating = False
Set FileN = Foglio8.Range("A1")
Set FolderPath = Foglio8.Range("B2")
Dpath = FolderPath & FileN & "   " & Format(Now, "yyyy-mm-dd hh-mm")  'change your path do not forget the last backslash
'set the named range for the PDF
 With Foglio8
        .Range("C8:U" & Cells(Rows.Count, "C").End(xlUp).Row).Name = "Attr16"
    End With
'set range
Set MyRange = Foglio8.Range("Attr16")
Foglio8.PageSetup.PrintArea = "Attr16"
'create the PDF
On Error Resume Next
MyRange.ExportAsFixedFormat Type:=xlTypePDF, Filename:=Dpath, Quality:=xlQualityStandard, _
IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True
'error handler
On Error GoTo 0
'clear the page breaks
ActiveSheet.DisplayPageBreaks = False
Application.ScreenUpdating = False

End Sub

Private Sub CommandButton2_Click()

With Me.lstEmployee
        If .ListIndex > -1 Then
            Sheets(Emp1.Value).Activate
        End If
    End With

End Sub


Private Sub CommandButton4_Click()

Emp8.Value = Val(Emp8.Text) + Val(TextBox20.Text)
Emp9.Value = Val(Emp9.Text) + Val(TextBox21.Text)


End Sub

Private Sub CommandButton6_Click()



'ListBox1.ColumnCount = 20
'ListBox1.RowSource = "A8:T2000"

LoadLB1

End Sub
Private Sub LoadLB1() 'carica Listbox1 coi valori in tabella
    With Me.ListBox1
        .Clear 'cancella il contenuto
        .ColumnCount = 20 'modifica secondo necessit|fffd|
        .ColumnWidths = "60;60;60;60;45;95;105;95;95;105;105;80;80;80;80;80;80;80;80;80" 'idem
        .List = Tabella1.DataBodyRange.Value 'carica la tabella nella ListBox
    End With

End Sub

Private Sub CommandButton5_Click()

End Sub

Private Sub CommandButton7_Click()
'Clear the userform
Clear2
'clear the rowsourse
Clearme
'clear the listbox
Me.lstData.RowSource = ""


End Sub

Private Sub CommandButton8_Click()

Dim ws As Worksheet
'set worksheet variable
Set ws = Foglio8
'send the values to the worksheet
With ws
.Range("AB9").Value = Me.ComboBox18.Value
.Range("AC9").Value = Me.ComboBox19.Value
.Range("AD9").Value = Me.ComboBox20.Value
.Range("AE9").Value = Me.ComboBox21.Value
.Range("AF9").Value = Me.ComboBox22.Value
.Range("AG9").Value = Me.ComboBox23.Value
.Range("AH9").Value = Me.ComboBox24.Value
.Range("AI9").Value = Me.ComboBox25.Value
.Range("AJ9").Value = Me.ComboBox26.Value
End With
'run the advanced filter
Filterme3
'add the named range to the rowsource
If ws.Range("C8").Value = "" Then
Me.lstEmployee.RowSource = ""
MsgBox "No matching data"
Else
Me.lstEmployee.RowSource = "Attr16"
End If

End Sub

Private Sub CommandButton9_Click()
    
    
  SalvaDati.Show
  

End Sub

Private Sub Emp1_Change()

End Sub

Private Sub Emp10_GotFocus()
Select Case ActiveCell.Interior.ColorIndex
        Case 6
            Emp10.BackColor = RGB(255, 255, 0)     '     Giallo
        Case 44
            Emp10.BackColor = RGB(255, 204, 0)     '     Oro
        Case 3
            Emp10.BackColor = RGB(255, 0, 0)       '     Rosso
    End Select
End Sub


Private Sub Label1_Click()

End Sub


Private Sub Label10_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 6)
    End If
Next i
MsgBox " Totale PREVISTI |fffd| " & Tot
End Sub




Private Sub Label11_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 7)
    End If
Next i
MsgBox " Totale Arrivati |fffd| " & Tot
End Sub

Private Sub Label12_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 8)
    End If
Next i
MsgBox " Totale Scaricati |fffd| " & Tot
End Sub

Private Sub Label15_Click()

End Sub

Private Sub Label24_Click()

End Sub

Private Sub Label3_Click()

End Sub

Private Sub Label38_Click()

End Sub

Private Sub Label4_Click()

End Sub

Private Sub Label44_Click()

End Sub

Private Sub Label49_Click()

End Sub

Private Sub lstData_Click()

End Sub

Private Sub Label59_Click()

End Sub

Private Sub Label66_Click()

End Sub

Private Sub Label74_Click()

End Sub

Private Sub Label8_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 9)
    End If
Next i
MsgBox " Totale Magazzino |fffd| " & Tot
End Sub

Private Sub Label73_Click()

End Sub

Private Sub lstEmployee_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'dim the variables
Dim i As Integer
On Error Resume Next
'find the selected list item
i = Me.lstEmployee.ListIndex
'add the values to the text boxes
Me.Emp1.Value = Me.lstEmployee.Column(0, i)
Me.Emp2.Value = Me.lstEmployee.Column(1, i)
Me.Emp3.Value = Me.lstEmployee.Column(2, i)
Me.Emp4.Value = Me.lstEmployee.Column(3, i)
Me.Emp5.Value = Me.lstEmployee.Column(4, i)
Me.Emp6.Value = Me.lstEmployee.Column(5, i)
Me.Emp7.Value = Me.lstEmployee.Column(6, i)
Me.Emp8.Value = Me.lstEmployee.Column(7, i)
Me.Emp9.Value = Me.lstEmployee.Column(8, i)
Me.TextBox2.Value = Me.lstEmployee.Column(9, i)




     


On Error GoTo 0

End Sub

Private Sub MultiPage1_Change()

End Sub




Private Sub TextBox4_Change()

End Sub

Private Sub TextBox8_Change()

End Sub

Private Sub TxtSearch_Change()

End Sub
Sub Clear2()
'clear the values form the userform
With Me
.ComboBox9.Value = ""
.ComboBox10.Value = ""
.ComboBox11.Value = ""
.ComboBox12.Value = ""
.ComboBox13.Value = ""
.ComboBox14.Value = ""
.ComboBox15.Value = ""
.ComboBox16.Value = ""
.ComboBox17.Value = ""
End With

End Sub


Private Sub objResizer_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Button = 1 Then
LeftResizePos = X
TopResizePos = Y
End If

End Sub


Private Sub objResizer_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

If Button = 1 Then
With objResizer
.Move .Left + X - LeftResizePos, .Top + Y - TopResizePos
Me.Width = Me.Width + X - LeftResizePos
Me.Height = Me.Height + Y - TopResizePos
.Left = Me.InsideWidth - .Width
.Top = Me.InsideHeight - .Height
End With
End If
End Sub
Private Sub UserForm_Click()

End Sub

Private Sub UserForm_Initialize()

Dim i As Integer
Dim ControlOnForm As Object

Set objResizer = Me.Controls.Add("Forms.label.1", "MResize", True)
With objResizer
.Caption = Chr(111)
.Font.Name = "Marlett"
.Font.Charset = 2
.Font.Size = 14
.BackStyle = fmBackStyleTransparent
.AutoSize = True
.ForeColor = RGB(100, 100, 100)
.MousePointer = fmMousePointerSizeNESW
.ZOrder
.Top = Me.InsideHeight - .Height
.Left = Me.InsideWidth - .Width
End With

WidthRatio = 1
HeightRatio = 1
OldWidth = Me.Width
OldHeight = Me.Height
Me.Caption = "WithRatio=" & WidthRatio & " HeightRatio=" & HeightRatio

For Each ControlOnForm In Me.Controls
If ControlOnForm.Name <> "MResizer" Then
With ControlOnForm

       ReDim Preserve TopArray(i)
       ReDim Preserve LeftArray(i)
       ReDim Preserve WidthArray(i)
       ReDim Preserve HeightArray(i)
       ReDim Preserve FontArray(i)
       
       TopArray(i) = .Top
       LeftArray(i) = .Left
       WidthArray(i) = .Width
       HeightArray(i) = .Height
       On Error Resume Next
              FontArray(i) = .Font.Size
              On Error GoTo 0
              
       i = i + 1
       End With
       End If
       Next ControlOnForm
       




End Sub


Private Sub UserForm_Resize()

Dim ControlOnForm As Object
Dim i As Integer
WidthRatio = Me.Width / OldWidth
HeightRatio = Me.Height / OldHeight
Me.Caption = "WithRatio=" & WidthRatio & " HeightRatio=" & HeightRatio

For Each ControlOnForm In Me.Controls
If ControlOnForm.Name <> "MResizer" Then
With ControlOnForm

.Top = TopArray(i) * HeightRatio
.Left = LeftArray(i) * WidthRatio
.Width = WidthArray(i) * WidthRatio
.Height = HeightArray(i) * HeightRatio
On Error Resume Next
.Font.Size = FontArray(i) * HeightRatio
On Error GoTo 0

i = i + 1

End With
End If
Next ControlOnForm
Me.Repaint




End Sub



Private Sub UserForm_QueryClose _
(Cancel As Integer, CloseMode As Integer)
'   Prevents use of the Close button
If CloseMode = vbFormControlMenu Then
MsgBox "pulsante Chiudi non funziona."
Cancel = True
End If
End Sub



Attribute VB_Name = "DistintaM"
Attribute VB_Base = "0{53830B13-9528-4579-90ED-5C0FBC488D27}{92176AC1-A41C-4827-88FD-38E28421D970}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit
Public WithEvents objResizer As MSForms.Label
Attribute objResizer.VB_VarHelpID = -1
Dim LeftResizePos As Single
Dim TopResizePos As Single
Dim WidthRatio As Single
Dim HeightRatio As Single
Dim OldWidth As Double
Dim OldHeight As Double
Dim TopArray() As Single
Dim LeftArray() As Single
Dim WidthArray() As Single
Dim HeightArray() As Single
Dim FontArray() As Single



Private Sub cmdAdd_Click()

'dimention the variable
Dim DataSH As Worksheet
Dim Addme As Range
'set the variable
Set DataSH = Foglio3
'error handler
On Error GoTo errHandler:
'set variable for the destination
Set Addme = DataSH.Cells(Rows.Count, 3).End(xlUp).Offset(1, 1)
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
If Me.ComboBox1 = "" Or Me.ComboBox3 = "" Then
MsgBox "There is insufficient data, Please return and add the needed information"
Exit Sub
End If
'send the values to the database
With DataSH
'add the unique reference ID then all other values
Addme.Offset(0, -1) = DataSH.Range("D5").Value + 1
Addme.Value = Me.ComboBox1
Addme.Offset(0, 1).Value = Me.ComboBox2
Addme.Offset(0, 2).Value = Me.ComboBox3
Addme.Offset(0, 3).Value = Me.ComboBox4
Addme.Offset(0, 4).Value = Me.TextBox6
Addme.Offset(0, 5).Value = Me.TextBox7
Addme.Offset(0, 6).Value = Me.TextBox8
Addme.Offset(0, 7).Value = Me.TextBox9
Addme.Offset(0, 8).Value = Me.TextBox10
Addme.Offset(0, 9).Value = Me.TextBox11
Addme.Offset(0, 10).Value = Me.TextBox12
Addme.Offset(0, 11).Value = Me.TextBox13
Addme.Offset(0, 12).Value = Me.TextBox14
Addme.Offset(0, 13).Value = Me.TextBox15
Addme.Offset(0, 14).Value = Me.ComboBox5
Addme.Offset(0, 15).Value = Me.ComboBox6
Addme.Offset(0, 16).Value = Me.ComboBox7
Addme.Offset(0, 17).Value = Me.ComboBox8


End With
'sort the data by "Surname"
DataSH.Select
With DataSH
.Range("C9:U10000").Sort Key1:=Range("C9"), Order1:=xlAscending, Header:=xlGuess
End With
'clear the values after entry
Clear
'communicate with the user
MsgBox "I tuoi dati dei sono stati aggiunti con successo"
'return to interface sheet sheet
Foglio3.Select
'reset the form
On Error GoTo 0
Exit Sub
errHandler:
'if error occurs then show me exactly where the error occurs
MsgBox ("Articolo Inserito ")
End Sub

Sub Clear()
Dim ctl As Control
For Each ctl In Me.Controls
Select Case TypeName(ctl)
Case "TextBox"
ctl.Text = ""
Case "ListBox"
ctl.RowSource = ""
Case "ComboBox"
ctl.Value = ""
End Select
Next ctl

End Sub

Private Sub cmdCerca_Click()

'dim the variables
Dim Crit As Range
Dim FindMe As Range
Dim DataSH As Worksheet
'error handler
On Error GoTo errHandler:
'set object variables
Set DataSH = Foglio3
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
'///////////////////////////////////////////
'if header is selected add the criteria
If Me.cmdHeader.Value <> "All_Columns" Then
If Me.txtSearch = "" Then
DataSH.Range("Y9") = ""
Else
DataSH.Range("Y9") = "*" & Me.txtSearch.Value & "*"
End If
End If
'//////////////////////////////////////////
'if all columns is selected
If Me.cmdHeader.Value = "All_Columns" Then
'find the value in the column
Set FindMe = DataSH.Range("C8:U30000").Find(What:=txtSearch, LookIn:=xlValues, _
LookAt:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
MatchCase:=False, SearchFormat:=False)
'variable for criteria header
Set Crit = DataSH.Cells(18, FindMe.Column)
'if no criteria is added to the search
If Me.txtSearch = "" Then
DataSH.Range("Y9") = ""
DataSH.Range("Y8") = ""
Else
'add values from the search
DataSH.Range("Y8") = Crit
If Crit = "ID" Then
DataSH.Range("Y9") = Me.txtSearch.Value
Else
DataSH.Range("Y9") = "*" & Me.txtSearch.Value & "*"
End If
'show in the userform the header that is added
Me.txtAllColumn = DataSH.Range("Y8").Value
End If
End If
'/////////////////////////////////////////
'unprotect all sheets
'Unprotect_All
'filter the ElencoGrid_Form

DataSH.Range("C9").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Range("Data!$Y$8:$Y$9"), CopyToRange:=Range("Data!$AA$8:$AS$8"), _
Unique:=False
'add the dynamic data to the listbox
lstEmployee.RowSource = DataSH.Range("outdata").Address(external:=True)
'protect all sheets
'Protect_All
'error handler
On Error GoTo 0
Exit Sub
errHandler:
'Protect all sheets
'Protect_All
'if error occurs then show me exactly where the error occurs
MsgBox "Nessuna corrispondenza trovata per " & txtSearch.Text
'clear the listbox if no match is found
Me.lstEmployee.RowSource = ""
Exit Sub
End Sub

Private Sub cmdClear_Click()

'clear all controls
Clear

End Sub



Private Sub cmdclose_Click()
'close the form
    Unload Me
    ThisWorkbook.Saved = True
    Application.Quit
   

End Sub
    
    


Private Sub cmdDelete_Click()
'declare the variables
Dim findvalue As Range
Dim cDelete As VbMsgBoxResult
Dim cNum As Integer
Dim DataSH As Worksheet
Set DataSH = Foglio3
Dim X As Integer
'error statement
On Error GoTo errHandler:
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
'check for values
If Emp1.Value = "" Or Emp2.Value = "" Then
MsgBox "Non ci sono dati da cancellare"
Exit Sub
End If
'give the user a chance to change their mind
cDelete = MsgBox("Sei sicuro di voler eliminare questo Articolo", _
vbYesNo + vbDefaultButton2, "Sei sicuro????")
If cDelete = vbYes Then
'find the row
Set findvalue = DataSH.Range("C:C").Find(What:=Me.Emp1.Value, _
LookIn:=xlValues, LookAt:=xlWhole)
'delete the entire row
findvalue.EntireRow.Delete
End If
'clear the controls
cNum = 7
For X = 1 To cNum
Me.Controls("Emp" & X).Value = ""
Next
'unprotect all sheets for the advanced filter
'Unprotect_All
'filter the data
DataSH.Range("C8").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Range("ElencoGrid_Form!$Y$8:$Y$9"), CopyToRange:=Range("ElencoGrid_Form!$AA$8:$AS$8"), _
Unique:=False
'if no data exists then clear the rowsource
If DataSH.Range("AA9").Value = "" Then
lstEmployee.RowSource = ""
Else
'add the filtered data to the rowsource
lstEmployee.RowSource = DataSH.Range("outdata").Address(external:=True)
End If
'sort the data by "Surname"
DataSH.Select
With DataSH
.Range("C9:U10000").Sort Key1:=Range("D9"), Order1:=xlAscending, Header:=xlGuess
End With
'Protect all sheets
'Protect_All
'return to sheet
Foglio2.Select
'error block
On Error GoTo 0
Exit Sub
errHandler:
'Protect all sheets if error occurs
'Protect_All
'show error information in a messagebox
MsgBox "Eliminato !!! "


End Sub

Private Sub cmdEdit_Click()
'declare the variables
Dim findvalue As Range
Dim cNum As Integer
Dim DataSH As Worksheet
'error handling
On Error GoTo errHandler:
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
Set DataSH = Foglio3
'check for values
If TextBox18.Value = "" Then
MsgBox "Non ci sono Dati da Modificare"
Exit Sub
End If
'clear the listbox
lstEmployee.RowSource = ""
'find the row to edit
Set findvalue = DataSH.Range("C:C"). _
Find(What:=Me.TextBox18.Value, LookIn:=xlValues, LookAt:=xlWhole)
'update the values
findvalue = Emp1.Value
findvalue.Offset(0, 1) = Emp2.Value
findvalue.Offset(0, 2) = Emp3.Value
findvalue.Offset(0, 3) = Emp4.Value
findvalue.Offset(0, 4) = Emp5.Value
findvalue.Offset(0, 5) = Emp6.Value
findvalue.Offset(0, 6) = Emp7.Value
findvalue.Offset(0, 7) = Emp8.Value
findvalue.Offset(0, 8) = Emp9.Value
findvalue.Offset(0, 9) = Emp10.Value
findvalue.Offset(0, 10) = Emp11.Value
findvalue.Offset(0, 11) = Emp12.Value
findvalue.Offset(0, 12) = Emp13.Value
findvalue.Offset(0, 13) = Emp14.Value
findvalue.Offset(0, 14) = Emp15.Value
findvalue.Offset(0, 15) = Emp16.Value
findvalue.Offset(0, 16) = Emp17.Value
findvalue.Offset(0, 17) = Emp18.Value
findvalue.Offset(0, 18) = Emp19.Value

'unprotect the worksheets for the advanced filter
'Unprotect_All
'filter the data
DataSH.Range("C8").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Range("ElencoGrid_Form!$Y$8:$Y$9"), CopyToRange:=Range("ElencoGrid_Form!$AA$8:$AS$8"), _
Unique:=False
'if no data exists then clear the rowsource
If DataSH.Range("AA9").Value = "" Then
lstEmployee.RowSource = ""
Else
'add the filtered data to the rowsource
lstEmployee.RowSource = DataSH.Range("outdata").Address(external:=True)
End If
'return to sheet
Foglio3.Select
'Protect all sheets
'Protect_All
'error block
On Error GoTo 0
Exit Sub
errHandler:
'Protect all sheets
'Protect_All

'show error information in a messagebox
MsgBox "Modificato con successo"
End Sub




Private Sub cmdHeader_Change()
'dim the variable
Dim DataSH As Worksheet
'set the variable
Set DataSH = Foglio2
'establish the condition for "All_Columns"
If Me.cmdHeader.Value = "All_Columns" Then
DataSH.Range("Y9") = ""
Else
'clear the textbox
Me.txtAllColumn = ""
'add the criteria header to the sheet
DataSH.Range("Y8") = Me.cmdHeader.Value
'clear any existing criteria
DataSH.Range("Y9") = ""
End If
End Sub

Private Sub cmdClearme_Click()
Clear
End Sub










Private Sub Image1_Click()

End Sub

Private Sub ComboBox9_Change()

End Sub

Private Sub CommandButton1_Click()
Unload Me
End Sub

Private Sub ComboBox1_Change()

End Sub

Private Sub ComboBox19_Change()

End Sub

Private Sub ComboBox21_Change()

End Sub

Private Sub ComboBox18_Change()

End Sub

Private Sub ComboBox18_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton8_Click
End Sub

Private Sub ComboBox18_DropButtonClick()
CommandButton8_Click
End Sub

Private Sub ComboBox20_Change()

End Sub

Private Sub ComboBox20_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton8_Click
End Sub

Private Sub ComboBox20_DropButtonClick()
CommandButton8_Click
End Sub

Private Sub ComboBox22_Change()

End Sub

Private Sub ComboBox22_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

CommandButton8_Click


End Sub

Private Sub ComboBox22_DropButtonClick()
CommandButton8_Click
End Sub

Private Sub ComboBox23_Change()

End Sub

Private Sub ComboBox23_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton8_Click
End Sub

Private Sub ComboBox23_DropButtonClick()
CommandButton8_Click
End Sub

Private Sub ComboBox24_Change()

End Sub

Private Sub ComboBox24_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton8_Click
End Sub

Private Sub ComboBox24_DropButtonClick()
CommandButton8_Click
End Sub

Private Sub ComboBox25_Change()

End Sub

Private Sub ComboBox25_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton8_Click
End Sub

Private Sub ComboBox25_DropButtonClick()
CommandButton8_Click

End Sub

Private Sub ComboBox26_Change()

End Sub

Private Sub ComboBox26_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton8_Click
End Sub

Private Sub ComboBox26_DropButtonClick()
CommandButton8_Click
End Sub

Private Sub CommandButton10_Click()
Shell "explorer.exe ""\\Nas1\Backup\Gestionali\Cartella Saldatura\""" & Emp1, vbNormalFocus

MsgBox "Cartella Aperta Articolo    " & Emp1.Text
End Sub

Private Sub CommandButton11_Click()

Unload Me
 UserForm1.Show
End Sub

Private Sub CommandButton12_Click()
Modifica.TextBox2.Text = Me.TextBox16.Text
Modifica.TextBox3.Text = Me.TextBox17.Text
Modifica.TextBox4.Text = Me.TextBox18.Text
Modifica.TextBox5.Text = Me.TextBox19.Text
Modifica.TextBox6.Text = Me.TextBox20.Text
Modifica.TextBox7.Text = Me.TextBox21.Text
Modifica.TextBox8.Text = Me.TextBox22.Text
Modifica.TextBox9.Text = Me.TextBox23.Text
Modifica.TextBox10.Text = Me.TextBox24.Text
Modifica.TextBox11.Text = Me.TextBox25.Text
Modifica.TextBox12.Text = Me.TextBox26.Text
Modifica.TextBox13.Text = Me.TextBox27.Text
Modifica.TextBox14.Text = Me.TextBox28.Text
Modifica.TextBox15.Text = Me.TextBox29.Text
Modifica.TextBox16.Text = Me.TextBox30.Text
Modifica.TextBox17.Text = Me.TextBox31.Text
Modifica.TextBox18.Text = Me.TextBox32.Text
Modifica.TextBox19.Text = Me.TextBox33.Text
Modifica.TextBox20.Text = Me.TextBox34.Text
Modifica.TextBox21.Text = Me.TextBox35.Text
Modifica.TextBox22.Text = Me.TextBox36.Text
Modifica.TextBox23.Text = Me.TextBox37.Text
Modifica.TextBox24.Text = Me.TextBox38.Text
Modifica.TextBox25.Text = Me.TextBox39.Text




Modifica.Show

End Sub

Private Sub CommandButton3_Click()

Dim Dpath As String
Dim FileN As Range, FolderPath As Range
Dim MyRange As Range
'turn off screen updating
Application.ScreenUpdating = False
Set FileN = Foglio2.Range("A1")
Set FolderPath = Foglio2.Range("B2")
Dpath = FolderPath & FileN & "   " & Format(Now, "yyyy-mm-dd hh-mm")  'change your path do not forget the last backslash
'set the named range for the PDF
 With Foglio2
        .Range("C8:U" & Cells(Rows.Count, "C").End(xlUp).Row).Name = "MacroPDFDist"
    End With
'set range
Set MyRange = Foglio2.Range("MacroPDFDist")
Foglio2.PageSetup.PrintArea = "MacroPDFDist"
'create the PDF
On Error Resume Next
MyRange.ExportAsFixedFormat Type:=xlTypePDF, Filename:=Dpath, Quality:=xlQualityStandard, _
IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True
'error handler
On Error GoTo 0
'clear the page breaks
ActiveSheet.DisplayPageBreaks = False
Application.ScreenUpdating = False

End Sub

Private Sub CommandButton2_Click()

With Me.lstEmployee
        If .ListIndex > -1 Then
            Sheets(Emp1.Value).Activate
        End If
    End With

End Sub


Private Sub CommandButton4_Click()

Emp8.Value = Val(Emp8.Text) + Val(TextBox20.Text)
Emp9.Value = Val(Emp9.Text) + Val(TextBox21.Text)


Emp10.Value = Val(Emp10.Text) - Val(TextBox21.Text)
Emp10.Value = Val(Emp10.Text) + Val(TextBox20.Text)


End Sub

Private Sub CommandButton6_Click()



'ListBox1.ColumnCount = 20
'ListBox1.RowSource = "A8:T2000"

LoadLB1

End Sub
Private Sub LoadLB1() 'carica Listbox1 coi valori in tabella
    With Me.ListBox1
        .Clear 'cancella il contenuto
        .ColumnCount = 20 'modifica secondo necessit|fffd|
        .ColumnWidths = "60;60;60;60;45;95;105;95;95;105;105;80;80;80;80;80;80;80;80;80" 'idem
        .List = Tabella1.DataBodyRange.Value 'carica la tabella nella ListBox
    End With

End Sub

Private Sub CommandButton5_Click()

End Sub

Private Sub CommandButton7_Click()
'Clear the userform
Clear2
'clear the rowsourse
Clearme
'clear the listbox
Me.lstData.RowSource = ""


End Sub

Private Sub CommandButton8_Click()

Dim ws As Worksheet
'set worksheet variable
Set ws = Foglio18
'send the values to the worksheet
With ws
.Range("BB9").Value = Me.ComboBox25.Value
.Range("AF9").Value = Me.ComboBox18.Value
.Range("AH9").Value = Me.ComboBox20.Value
.Range("AJ9").Value = Me.ComboBox22.Value
.Range("AK9").Value = Me.ComboBox23.Value
.Range("AI9").Value = Me.ComboBox24.Value
.Range("AE9").Value = Me.ComboBox26.Value


End With
'run the advanced filter
Filterme7
'add the named range to the rowsource
If ws.Range("C8").Value = "" Then
Me.lstEmployee.RowSource = ""
MsgBox "No matching data"
Else
Me.lstEmployee.RowSource = "FiltroInter7"
End If

End Sub

Private Sub CommandButton9_Click()
    
   SalvaDati.Show
  
 
  

End Sub

Private Sub Emp1_Change()

End Sub

Private Sub Emp10_GotFocus()
Select Case ActiveCell.Interior.ColorIndex
        Case 6
            Emp10.BackColor = RGB(255, 255, 0)     '     Giallo
        Case 44
            Emp10.BackColor = RGB(255, 204, 0)     '     Oro
        Case 3
            Emp10.BackColor = RGB(255, 0, 0)       '     Rosso
    End Select
End Sub


Private Sub Emp10_Change()

End Sub

Private Sub Label1_Click()

End Sub


Private Sub Label10_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 6)
    End If
Next i
MsgBox " Totale PREVISTI |fffd| " & Tot
End Sub




Private Sub Label11_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 7)
    End If
Next i
MsgBox " Totale Arrivati |fffd| " & Tot
End Sub

Private Sub Label12_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 8)
    End If
Next i
MsgBox " Totale Scaricati |fffd| " & Tot
End Sub

Private Sub Label15_Click()

End Sub

Private Sub Label3_Click()

End Sub

Private Sub Label38_Click()

End Sub

Private Sub Label4_Click()

End Sub

Private Sub Label44_Click()

End Sub

Private Sub Label49_Click()

End Sub

Private Sub lstData_Click()

End Sub

Private Sub Label59_Click()

End Sub

Private Sub Label61_Click()
Macro4

End Sub

Private Sub Label63_Click()
Macro3
End Sub

Private Sub Label64_Click()
Macro5

End Sub

Private Sub Label66_Click()

End Sub

Private Sub Label74_Click()

End Sub

Private Sub Label8_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 9)
    End If
Next i
MsgBox " Totale Magazzino |fffd| " & Tot
End Sub

Private Sub lstEmployee_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Dim i As Integer
On Error Resume Next
'find the selected list item
i = Me.lstEmployee.ListIndex
'add the values to the text boxes
Me.TextBox16.Value = Me.lstEmployee.Column(0, i)
Me.TextBox17.Value = Me.lstEmployee.Column(1, i)
Me.TextBox18.Value = Me.lstEmployee.Column(2, i)
Me.TextBox19.Value = Me.lstEmployee.Column(3, i)
Me.TextBox20.Value = Me.lstEmployee.Column(4, i)
Me.TextBox21.Value = Me.lstEmployee.Column(5, i)
Me.TextBox22.Value = Me.lstEmployee.Column(6, i)


Me.TextBox23.Value = Me.lstEmployee.Column(7, i)
Me.TextBox24.Value = Me.lstEmployee.Column(8, i)
Me.TextBox25.Value = Me.lstEmployee.Column(9, i)

Me.TextBox26.Value = Me.lstEmployee.Column(10, i)
Me.TextBox27.Value = Me.lstEmployee.Column(11, i)
Me.TextBox28.Value = Me.lstEmployee.Column(12, i)

Me.TextBox29.Value = Me.lstEmployee.Column(13, i)
Me.TextBox30.Value = Me.lstEmployee.Column(14, i)
Me.TextBox31.Value = Me.lstEmployee.Column(15, i)
Me.TextBox32.Value = Me.lstEmployee.Column(16, i)


Me.TextBox33.Value = Me.lstEmployee.Column(17, i)
Me.TextBox34.Value = Me.lstEmployee.Column(18, i)
Me.TextBox35.Value = Me.lstEmployee.Column(19, i)
Me.TextBox36.Value = Me.lstEmployee.Column(20, i)
Me.TextBox37.Value = Me.lstEmployee.Column(21, i)
Me.TextBox38.Value = Me.lstEmployee.Column(22, i)
Me.TextBox39.Value = Me.lstEmployee.Column(23, i)






End Sub

Private Sub MultiPage1_Change()

End Sub




Private Sub TextBox4_Change()

End Sub

Private Sub objResizer_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Button = 1 Then
LeftResizePos = X
TopResizePos = Y
End If

End Sub


Private Sub objResizer_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

If Button = 1 Then
With objResizer
.Move .Left + X - LeftResizePos, .Top + Y - TopResizePos
Me.Width = Me.Width + X - LeftResizePos
Me.Height = Me.Height + Y - TopResizePos
.Left = Me.InsideWidth - .Width
.Top = Me.InsideHeight - .Height
End With
End If
End Sub

Private Sub TextBox16_Change()

End Sub

Private Sub TextBox8_Change()

End Sub

Private Sub TxtSearch_Change()

End Sub
Sub Clear2()
'clear the values form the userform
With Me
.ComboBox9.Value = ""
.ComboBox10.Value = ""
.ComboBox11.Value = ""
.ComboBox12.Value = ""
.ComboBox13.Value = ""
.ComboBox14.Value = ""
.ComboBox15.Value = ""
.ComboBox16.Value = ""
.ComboBox17.Value = ""
End With

End Sub

Private Sub UserForm_Click()

End Sub

Private Sub UserForm_Initialize()

Dim i As Integer
Dim ControlOnForm As Object

Set objResizer = Me.Controls.Add("Forms.label.1", "MResize", True)
With objResizer
.Caption = Chr(111)
.Font.Name = "Marlett"
.Font.Charset = 2
.Font.Size = 14
.BackStyle = fmBackStyleTransparent
.AutoSize = True
.ForeColor = RGB(100, 100, 100)
.MousePointer = fmMousePointerSizeNESW
.ZOrder
.Top = Me.InsideHeight - .Height
.Left = Me.InsideWidth - .Width
End With

WidthRatio = 1
HeightRatio = 1
OldWidth = Me.Width
OldHeight = Me.Height
Me.Caption = "WithRatio=" & WidthRatio & " HeightRatio=" & HeightRatio

For Each ControlOnForm In Me.Controls
If ControlOnForm.Name <> "MResizer" Then
With ControlOnForm

       ReDim Preserve TopArray(i)
       ReDim Preserve LeftArray(i)
       ReDim Preserve WidthArray(i)
       ReDim Preserve HeightArray(i)
       ReDim Preserve FontArray(i)
       
       TopArray(i) = .Top
       LeftArray(i) = .Left
       WidthArray(i) = .Width
       HeightArray(i) = .Height
       On Error Resume Next
              FontArray(i) = .Font.Size
              On Error GoTo 0
              
       i = i + 1
       End With
       End If
       Next ControlOnForm
       




End Sub


Private Sub UserForm_Resize()

Dim ControlOnForm As Object
Dim i As Integer
WidthRatio = Me.Width / OldWidth
HeightRatio = Me.Height / OldHeight
Me.Caption = "WithRatio=" & WidthRatio & " HeightRatio=" & HeightRatio

For Each ControlOnForm In Me.Controls
If ControlOnForm.Name <> "MResizer" Then
With ControlOnForm

.Top = TopArray(i) * HeightRatio
.Left = LeftArray(i) * WidthRatio
.Width = WidthArray(i) * WidthRatio
.Height = HeightArray(i) * HeightRatio
On Error Resume Next
.Font.Size = FontArray(i) * HeightRatio
On Error GoTo 0

i = i + 1

End With
End If
Next ControlOnForm
Me.Repaint




End Sub
Private Sub UserForm_QueryClose _
(Cancel As Integer, CloseMode As Integer)
'   Prevents use of the Close button
If CloseMode = vbFormControlMenu Then
MsgBox "pulsante Chiudi non funziona."
Cancel = True
End If
End Sub



Attribute VB_Name = "Employee2"
Attribute VB_Base = "0{B7257BDC-6C1B-4004-81CA-A9E8ED8336AF}{FFEEB6C6-374C-4933-8500-26B6A68C279D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Public WithEvents objResizer As MSForms.Label
Attribute objResizer.VB_VarHelpID = -1
Dim LeftResizePos As Single
Dim TopResizePos As Single
Dim WidthRatio As Single
Dim HeightRatio As Single
Dim OldWidth As Double
Dim OldHeight As Double
Dim TopArray() As Single
Dim LeftArray() As Single
Dim WidthArray() As Single
Dim HeightArray() As Single
Dim FontArray() As Single



Private Sub cmdAdd_Click()

'dimention the variable
Dim DataSH As Worksheet
Dim Addme As Range
'set the variable
Set DataSH = Foglio3
'error handler
On Error GoTo errHandler:
'set variable for the destination
Set Addme = DataSH.Cells(Rows.Count, 3).End(xlUp).Offset(1, 1)
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
If Me.ComboBox1 = "" Or Me.ComboBox3 = "" Then
MsgBox "There is insufficient data, Please return and add the needed information"
Exit Sub
End If
'send the values to the database
With DataSH
'add the unique reference ID then all other values
Addme.Offset(0, -1) = DataSH.Range("D4").Value + 1
Addme.Offset(0, -1) = DataSH.Range("D5").Value + 1

Addme.Value = Me.ComboBox1
Addme.Offset(0, 1).Value = Me.ComboBox2
Addme.Offset(0, 2).Value = Me.ComboBox3
Addme.Offset(0, 3).Value = Me.ComboBox4
Addme.Offset(0, 4).Value = Me.TextBox6
Addme.Offset(0, 5).Value = Me.TextBox7
Addme.Offset(0, 6).Value = Me.TextBox8
Addme.Offset(0, 7).Value = Me.TextBox9
Addme.Offset(0, 8).Value = Me.TextBox10
Addme.Offset(0, 9).Value = Me.TextBox11
Addme.Offset(0, 10).Value = Me.TextBox12
Addme.Offset(0, 11).Value = Me.TextBox13
Addme.Offset(0, 12).Value = Me.TextBox14
Addme.Offset(0, 13).Value = Me.TextBox15
Addme.Offset(0, 14).Value = Me.ComboBox5
Addme.Offset(0, 15).Value = Me.ComboBox6
Addme.Offset(0, 16).Value = Me.ComboBox7
Addme.Offset(0, 17).Value = Me.ComboBox8


End With
'sort the data by "Surname"
DataSH.Select
With DataSH
.Range("C9:U10000").Sort Key1:=Range("C9"), Order1:=xlAscending, Header:=xlGuess
End With
'clear the values after entry
Clear
'communicate with the user
MsgBox "I tuoi dati dei sono stati aggiunti con successo"
'return to interface sheet sheet
Foglio3.Select
'reset the form
On Error GoTo 0
Exit Sub
errHandler:


'if error occurs then show me exactly where the error occurs
MsgBox ("Articolo Inserito ")


End Sub

Sub Clear()
Dim ctl As Control
For Each ctl In Me.Controls
Select Case TypeName(ctl)
Case "TextBox"
ctl.Text = ""
Case "ListBox"
ctl.RowSource = ""
Case "ComboBox"
ctl.Value = ""
End Select
Next ctl

End Sub

Private Sub cmdCerca_Click()

'dim the variables
Dim Crit As Range
Dim FindMe As Range
Dim DataSH As Worksheet
'error handler
On Error GoTo errHandler:
'set object variables
Set DataSH = Foglio3
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
'///////////////////////////////////////////
'if header is selected add the criteria
If Me.cmdHeader.Value <> "All_Columns" Then
If Me.txtSearch = "" Then
DataSH.Range("Y9") = ""
Else
DataSH.Range("Y9") = "*" & Me.txtSearch.Value & "*"
End If
End If
'//////////////////////////////////////////
'if all columns is selected
If Me.cmdHeader.Value = "All_Columns" Then
'find the value in the column
Set FindMe = DataSH.Range("C8:U30000").Find(What:=txtSearch, LookIn:=xlValues, _
LookAt:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
MatchCase:=False, SearchFormat:=False)
'variable for criteria header
Set Crit = DataSH.Cells(18, FindMe.Column)
'if no criteria is added to the search
If Me.txtSearch = "" Then
DataSH.Range("Y9") = ""
DataSH.Range("Y8") = ""
Else
'add values from the search
DataSH.Range("Y8") = Crit
If Crit = "ID" Then
DataSH.Range("Y9") = Me.txtSearch.Value
Else
DataSH.Range("Y9") = "*" & Me.txtSearch.Value & "*"
End If
'show in the userform the header that is added
Me.txtAllColumn = DataSH.Range("Y8").Value
End If
End If
'/////////////////////////////////////////
'unprotect all sheets
'Unprotect_All
'filter the ElencoGrid_Form

DataSH.Range("C9").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Range("Data!$Y$8:$Y$9"), CopyToRange:=Range("Data!$AA$8:$AS$8"), _
Unique:=False
'add the dynamic data to the listbox
lstEmployee.RowSource = DataSH.Range("outdata").Address(external:=True)
'protect all sheets
'Protect_All
'error handler
On Error GoTo 0
Exit Sub
errHandler:
'Protect all sheets
'Protect_All
'if error occurs then show me exactly where the error occurs
MsgBox "Nessuna corrispondenza trovata per " & txtSearch.Text
'clear the listbox if no match is found
Me.lstEmployee.RowSource = ""
Exit Sub
End Sub

Private Sub cmdClear_Click()

'clear all controls
 Clear


End Sub



Private Sub cmdclose_Click()
'close the form
    Unload Me
    ThisWorkbook.Saved = True
    Application.Quit
   

End Sub
    
    


Private Sub cmdDelete_Click()
'declare the variables
Dim findvalue As Range
Dim cDelete As VbMsgBoxResult
Dim cNum As Integer
Dim DataSH As Worksheet
Set DataSH = Foglio3
Dim X As Integer
'error statement

'hold in memory and stop screen flicker
Application.ScreenUpdating = False
'check for values
If Emp0.Value = "" Or Emp1.Value = "" Then
MsgBox "Non ci sono dati da cancellare"
Exit Sub
End If
'give the user a chance to change their mind
cDelete = MsgBox("Sei sicuro di voler eliminare questo Articolo", _
vbYesNo + vbDefaultButton2, "Sei sicuro????")
If cDelete = vbYes Then
'find the row
Set findvalue = DataSH.Range("B:B").Find(What:=Me.Emp0.Value, _
LookIn:=xlValues, LookAt:=xlWhole)
'delete the entire row
findvalue.EntireRow.Delete
End If
'clear the controls
cNum = 7
For X = 1 To cNum
Me.Controls("Emp" & X).Value = ""
Next
'unprotect all sheets for the advanced filter
'Unprotect_All
'filter the data

MsgBox "Eliminato !!! "


End Sub

Private Sub cmdEdit_Click()
'declare the variables
Dim findvalue As Range
Dim cNum As Integer
Dim DataSH As Worksheet
'error handling

'hold in memory and stop screen flicker
Application.ScreenUpdating = False
Set DataSH = Foglio3
'check for values
If Emp0.Value = "" Or Emp1.Value = "" Then
MsgBox "Non ci sono Dati da Modificare"
Exit Sub
End If
'clear the listbox
lstEmployee.RowSource = ""
'find the row to edit
Set findvalue = DataSH.Range("B:B"). _
Find(What:=Me.Emp0.Value, LookIn:=xlValues, LookAt:=xlWhole)
'update the values



findvalue.Offset(0, 0) = Emp0.Value
findvalue.Offset(0, 1) = Emp1.Value
findvalue.Offset(0, 2) = Emp2.Value
findvalue.Offset(0, 3) = Emp3.Value
findvalue.Offset(0, 4) = Emp4.Value
findvalue.Offset(0, 5) = Emp5.Value
findvalue.Offset(0, 6) = Emp6.Value
findvalue.Offset(0, 7) = Emp7.Value
findvalue.Offset(0, 8) = Emp8.Value
findvalue.Offset(0, 9) = Emp9.Value

findvalue.Offset(0, 12) = Emp11.Value
findvalue.Offset(0, 13) = Emp12.Value
findvalue.Offset(0, 14) = Emp13.Value
findvalue.Offset(0, 15) = Emp14.Value
findvalue.Offset(0, 16) = Emp15.Value
findvalue.Offset(0, 17) = Emp16.Value
findvalue.Offset(0, 18) = Emp17.Value
findvalue.Offset(0, 19) = Emp18.Value

'unprotect the worksheets for the advanced filter
'Unprotect_All
'filter the data


'show error information in a messagebox
MsgBox "Modificato con successo"
End Sub




Private Sub cmdHeader_Change()
'dim the variable
Dim DataSH As Worksheet
'set the variable
Set DataSH = Foglio2
'establish the condition for "All_Columns"
If Me.cmdHeader.Value = "All_Columns" Then
DataSH.Range("Y9") = ""
Else
'clear the textbox
Me.txtAllColumn = ""
'add the criteria header to the sheet
DataSH.Range("Y8") = Me.cmdHeader.Value
'clear any existing criteria
DataSH.Range("Y9") = ""
End If
End Sub

Private Sub cmdClearme_Click()
Clear
End Sub










Private Sub Image1_Click()

End Sub

Private Sub ComboBox9_Change()

End Sub

Private Sub ComboBox28_DropButtonClick()
CommandButton20_Click
End Sub

Private Sub ComboBox29_DropButtonClick()
CommandButton20_Click
End Sub

Private Sub ComboBox30_DropButtonClick()
CommandButton20_Click
End Sub

Private Sub ComboBox31_DropButtonClick()
CommandButton20_Click
End Sub

Private Sub ComboBox32_DropButtonClick()
CommandButton20_Click
End Sub

Private Sub ComboBox33_DropButtonClick()
CommandButton20_Click
End Sub

Private Sub ComboBox34_Change()

End Sub

Private Sub ComboBox34_DropButtonClick()

End Sub

Private Sub ComboBox36_Change()

End Sub

Private Sub ComboBox36_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton29_Click
End Sub

Private Sub ComboBox36_DropButtonClick()
CommandButton29_Click
End Sub

Private Sub ComboBox37_Change()


End Sub

Private Sub ComboBox37_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton29_Click
End Sub

Private Sub ComboBox37_DropButtonClick()
CommandButton29_Click
End Sub

Private Sub ComboBox38_Change()

End Sub

Private Sub ComboBox38_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton29_Click
End Sub

Private Sub ComboBox38_DropButtonClick()
CommandButton29_Click
End Sub

Private Sub ComboBox39_Change()

End Sub

Private Sub ComboBox39_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton29_Click
End Sub

Private Sub ComboBox39_DropButtonClick()
CommandButton29_Click
End Sub

Private Sub ComboBox40_Change()

End Sub

Private Sub ComboBox40_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton29_Click
End Sub

Private Sub ComboBox40_DropButtonClick()
CommandButton29_Click
End Sub

Private Sub CommandButton1_Click()



Dim ws As Worksheet




CommandButton30_Click

'set worksheet variable
Set ws = Foglio25

'send the values to the worksheet
With ws

.Range("D4").Value = Me.ComboBox34.Value
.Range("F4").Value = Me.ComboBox35.Value

End With




End Sub

Private Sub ComboBox1_Change()

End Sub

Private Sub ComboBox18_Change()

End Sub

Private Sub ComboBox18_Click()

End Sub

Private Sub ComboBox18_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton8_Click

End Sub

Private Sub ComboBox18_DropButtonClick()
CommandButton8_Click


End Sub

Private Sub ComboBox19_Change()

End Sub

Private Sub ComboBox19_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton8_Click
End Sub

Private Sub ComboBox19_DropButtonClick()
Dim ws As Worksheet
'set worksheet variable
Set ws = Foglio16
'send the values to the worksheet
With ws

.Range("I9").Value = Me.ComboBox19.Value

End With

CommandButton8_Click

End Sub

Private Sub ComboBox20_Change()

End Sub

Private Sub ComboBox20_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton8_Click

End Sub

Private Sub ComboBox20_DropButtonClick()
Dim ws As Worksheet
'set worksheet variable
Set ws = Foglio16
'send the values to the worksheet
With ws

.Range("K9").Value = Me.ComboBox20.Value

End With
CommandButton8_Click



End Sub

Private Sub ComboBox21_Change()

End Sub

Private Sub ComboBox21_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton8_Click

End Sub

Private Sub ComboBox21_DropButtonClick()
CommandButton8_Click

End Sub

Private Sub ComboBox22_Change()

End Sub

Private Sub ComboBox22_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton8_Click


End Sub

Private Sub ComboBox22_DropButtonClick()
CommandButton8_Click

End Sub

Private Sub ComboBox23_Change()

End Sub

Private Sub ComboBox23_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton8_Click
End Sub

Private Sub ComboBox23_DropButtonClick()
CommandButton8_Click
End Sub

Private Sub ComboBox24_Change()

End Sub

Private Sub ComboBox24_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton8_Click

End Sub

Private Sub ComboBox24_DropButtonClick()
CommandButton8_Click

End Sub

Private Sub ComboBox25_Change()

End Sub

Private Sub ComboBox25_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton8_Click
End Sub

Private Sub ComboBox25_DropButtonClick()
CommandButton8_Click
End Sub

Private Sub ComboBox26_Change()

End Sub

Private Sub ComboBox26_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton8_Click


End Sub

Private Sub ComboBox26_DropButtonClick()
CommandButton8_Click

End Sub

Private Sub ComboBox27_Change()

End Sub

Private Sub ComboBox28_Change()

End Sub

Private Sub ComboBox28_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton20_Click
End Sub

Private Sub ComboBox29_Change()

End Sub

Private Sub ComboBox29_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton20_Click
End Sub

Private Sub ComboBox30_Change()

End Sub

Private Sub ComboBox30_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton20_Click
End Sub

Private Sub ComboBox31_Change()

End Sub

Private Sub ComboBox31_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton20_Click
End Sub

Private Sub ComboBox32_Change()

End Sub

Private Sub ComboBox32_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton20_Click
End Sub

Private Sub ComboBox33_Change()

End Sub

Private Sub ComboBox33_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton20_Click
End Sub

Private Sub ComboBox6_Change()

End Sub

Private Sub CommandButton10_Click()
Shell "explorer.exe ""\\Nas1\Backup\Gestionali\Cartella Saldatura\""" & Emp1, vbNormalFocus

MsgBox "Cartella Aperta Articolo    " & Emp1.Text
End Sub

Private Sub CommandButton11_Click()

Unload Me
 UserForm1.Show
End Sub

Private Sub CommandButton12_Click()
Dim sh As Worksheet
    Dim Rng As Range
    
    Set sh = ThisWorkbook.Worksheets("Foglio1")
    
    With sh
        Set Rng = _
            .Range("A:A").Find( _
                What:=ComboBox6.Text, _
                LookIn:=xlValues, _
                LookAt:=xlWhole, _
                SearchOrder:=xlRows, _
                SearchDirection:=xlNext, _
                MatchCase:=True)
    End With
    
    If Not Rng Is Nothing Then
        With Me
            .ComboBox1.Text = Rng.Offset(0, 1).Value
            .ComboBox2.Text = Rng.Offset(0, 2).Value
            .ComboBox3.Text = Rng.Offset(0, 3).Value
            .ComboBox4.Text = Rng.Offset(0, 4).Value
            
            
            
        End With
    End If
    
    Set Rng = Nothing
    Set sh = Nothing
End Sub

Private Sub CommandButton13_Click()
Dim Dpath As String
Dim FileN As Range, FolderPath As Range
Dim MyRange As Range
'turn off screen updating
Application.ScreenUpdating = False
Set FileN = Foglio13.Range("A1")
Set FolderPath = Foglio13.Range("B2")
Dpath = FolderPath & FileN & "   " & Format(Now, "yyyy-mm-dd hh-mm")  'change your path do not forget the last backslash
'set the named range for the PDF
 With Foglio13
        .Range("A1:E" & Cells(Rows.Count, "C").End(xlUp).Row).Name = "MacroCodici"
    End With
'set range
Set MyRange = Foglio13.Range("MacroCodici")
Foglio13.PageSetup.PrintArea = "MacroCodici"
'create the PDF
On Error Resume Next
MyRange.ExportAsFixedFormat Type:=xlTypePDF, Filename:=Dpath, Quality:=xlQualityStandard, _
IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True
'error handler
On Error GoTo 0
'clear the page breaks
ActiveSheet.DisplayPageBreaks = False
Application.ScreenUpdating = False
End Sub

Private Sub CommandButton14_Click()
Unload Me

UserForm2.Show
End Sub

Private Sub CommandButton15_Click()
Unload Me
UserForm3.Show

End Sub

Private Sub CommandButton16_Click()
CopiadatisuTotali
CopiadatisuFoglio1
End Sub


Private Sub CommandButton17_Click()
Workbook_Open
End Sub

Private Sub CommandButton18_Click()

Macro10


Dim ws As Worksheet
Dim strIndirizzo As String
Dim myFile As Variant
Dim strFile As String
On Error GoTo errHandler

  Sheets("Totali").Select
    ActiveWindow.SmallScroll Down:=-9
    ActiveSheet.Range("$A$7:$T$377").AutoFilter Field:=11, Criteria1:=RGB(255, _
        199, 206), Operator:=xlFilterCellColor
    ActiveWindow.SmallScroll Down:=-6
    Range("A12:T217").Select
    Selection.Copy
    Sheets("SottoScorta").Select
    Range("A8:N13").Select
    Application.CutCopyMode = False
    Selection.ClearContents
    Range("A8").Select
    Sheets("Totali").Select
    Selection.Copy
    Sheets("SottoScorta").Select
    ActiveWindow.SmallScroll Down:=-3
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Range("A11").Select

Set ws = Foglio26


'apre la finestra di dialogo per il salvataggio dei file
'la cartella di default |fffd| la stessa della cartella di excel
strFile = Replace(Replace(ws.Name, " ", ""), ".", "_") _
        & "_" _
        & Format(Now(), "yyyy-mm-dd\_hh-mm") _
        & ".pdf"
strFile = ThisWorkbook.Path & "\" & strFile

myFile = Application.GetSaveAsFilename _
        (InitialFileName:=strFile, _
          FileFilter:="PDF Files (*.pdf), *.pdf", _
          Title:="Seleziona la cartella e inserisci il nome del file da salvare")

If myFile <> False Then
        ws.ExportAsFixedFormat _
          Type:=xlTypePDF, _
          Filename:=myFile, _
          Quality:=xlQualityStandard, _
          IncludeDocProperties:=True, _
          IgnorePrintAreas:=False, _
          OpenAfterPublish:=True
          

        MsgBox "Il file PDF |fffd| stato salvato."
End If

exitHandler:
        Exit Sub
errHandler:
        MsgBox "Non ho potuto salvare il file PDF"
Resume exitHandler
End Sub

Private Sub CommandButton19_Click()
Dim ws As Worksheet
Dim strIndirizzo As String
Dim myFile As Variant
Dim strFile As String
On Error GoTo errHandler

Set ws = Foglio14


'apre la finestra di dialogo per il salvataggio dei file
'la cartella di default |fffd| la stessa della cartella di excel
strFile = Replace(Replace(ws.Name, " ", ""), ".", "_") _
        & "_" _
        & Format(Now(), "yyyy-mm-dd\_hh-mm") _
        & ".pdf"
strFile = ThisWorkbook.Path & "\" & strFile

myFile = Application.GetSaveAsFilename _
        (InitialFileName:=strFile, _
          FileFilter:="PDF Files (*.pdf), *.pdf", _
          Title:="Seleziona la cartella e inserisci il nome del file da salvare")

If myFile <> False Then
        ws.ExportAsFixedFormat _
          Type:=xlTypePDF, _
          Filename:=myFile, _
          Quality:=xlQualityStandard, _
          IncludeDocProperties:=True, _
          IgnorePrintAreas:=False, _
          OpenAfterPublish:=True
          

        MsgBox "Il file PDF |fffd| stato salvato."
End If

exitHandler:
        Exit Sub
errHandler:
        MsgBox "Non ho potuto salvare il file PDF"
Resume exitHandler
End Sub

Private Sub CommandButton20_Click()
Dim ws As Worksheet
'set worksheet variable
Set ws = Foglio14
'send the values to the worksheet
With ws


.Range("AB9").Value = Me.ComboBox28.Value
.Range("AC9").Value = Me.ComboBox29.Value
.Range("AD9").Value = Me.ComboBox30.Value
.Range("AE9").Value = Me.ComboBox31.Value
.Range("AA9").Value = Me.ComboBox32.Value
.Range("AG9").Value = Me.ComboBox33.Value




End With
'run the advanced filter
Macro3
'add the named range to the rowsource
If ws.Range("A8").Value = "" Then
Me.ListBox1.RowSource = ""
MsgBox "No matching data"
Else
Me.ListBox1.RowSource = "FiltroInter2"


End If
End Sub

Private Sub CommandButton21_Click()
Clear
End Sub

Private Sub CommandButton22_Click()
Dim ws As Worksheet
Dim strIndirizzo As String
Dim myFile As Variant
Dim strFile As String
On Error GoTo errHandler

Set ws = Foglio25

'apre la finestra di dialogo per il salvataggio dei file
'la cartella di default |fffd| la stessa della cartella di excel
strFile = Replace(Replace(ws.Name, " ", ""), ".", "_") _
        & "_" _
        & Format(Now(), "yyyy-mm-dd\_hh-mm") _
        & ".pdf"
strFile = ThisWorkbook.Path & "\" & strFile

myFile = Application.GetSaveAsFilename _
        (InitialFileName:=strFile, _
          FileFilter:="PDF Files (*.pdf), *.pdf", _
          Title:="Seleziona la cartella e inserisci il nome del file da salvare")

If myFile <> False Then
        ws.ExportAsFixedFormat _
          Type:=xlTypePDF, _
          Filename:=myFile, _
          Quality:=xlQualityStandard, _
          IncludeDocProperties:=True, _
          IgnorePrintAreas:=False, _
          OpenAfterPublish:=True
          

        MsgBox "Il file PDF |fffd| stato salvato."
End If

exitHandler:
        Exit Sub
errHandler:
        MsgBox "Non ho potuto salvare il file PDF"
Resume exitHandler
End Sub

Private Sub CommandButton23_Click()
Shell "explorer.exe ""\\Nas1\Backup\Gestionali\Cartella Saldatura\""" & Emp1, vbNormalFocus

MsgBox "Cartella Aperta Articolo    " & Emp1.Text

End Sub

Private Sub CommandButton24_Click()
'declare the variables
Dim findvalue As Range
Dim cDelete As VbMsgBoxResult
Dim cNum As Integer
Dim DataSH As Worksheet
Set DataSH = Foglio3
Dim X As Integer
'error statement

'hold in memory and stop screen flicker
Application.ScreenUpdating = False
'check for values
If TextBox52.Value = "" Or TextBox47.Value = "" Then
MsgBox "Non ci sono dati da cancellare"
Exit Sub
End If
'give the user a chance to change their mind
cDelete = MsgBox("Sei sicuro di voler eliminare questo Articolo", _
vbYesNo + vbDefaultButton2, "Sei sicuro????")
If cDelete = vbYes Then
'find the row
Set findvalue = DataSH.Range("B:B").Find(What:=Me.TextBox52.Value, _
LookIn:=xlValues, LookAt:=xlWhole)
'delete the entire row
findvalue.EntireRow.Delete
End If
'clear the controls
cNum = 7
For X = 1 To cNum
Me.Controls("TextBox" & X).Value = ""
Next
'unprotect all sheets for the advanced filter
'Unprotect_All
'filter the data

MsgBox "Eliminato !!! "
End Sub

Private Sub CommandButton25_Click()
Dim findvalue As Range
Dim cNum As Integer
Dim DataSH As Worksheet
'error handling

'hold in memory and stop screen flicker
Application.ScreenUpdating = False
Set DataSH = Foglio3
'check for values
If TextBox52.Value = "" Or TextBox47.Value = "" Then
MsgBox "Non ci sono Dati da Modificare"
Exit Sub
End If
'clear the listbox
ListBox3.RowSource = ""
'find the row to edit
Set findvalue = DataSH.Range("B:B"). _
Find(What:=Me.TextBox52.Value, LookIn:=xlValues, LookAt:=xlWhole)
'update the values



findvalue.Offset(0, 0) = TextBox52.Value
findvalue.Offset(0, 1) = TextBox47.Value
findvalue.Offset(0, 2) = TextBox31.Value
findvalue.Offset(0, 3) = TextBox32.Value
findvalue.Offset(0, 4) = TextBox33.Value
findvalue.Offset(0, 5) = TextBox34.Value
findvalue.Offset(0, 6) = TextBox35.Value
findvalue.Offset(0, 7) = TextBox36.Value
findvalue.Offset(0, 8) = TextBox37.Value
findvalue.Offset(0, 9) = TextBox38.Value

findvalue.Offset(0, 12) = TextBox40.Value
findvalue.Offset(0, 13) = TextBox41.Value
findvalue.Offset(0, 14) = TextBox42.Value
findvalue.Offset(0, 15) = TextBox43.Value
findvalue.Offset(0, 16) = TextBox44.Value
findvalue.Offset(0, 17) = TextBox45.Value
findvalue.Offset(0, 18) = TextBox46.Value
findvalue.Offset(0, 19) = TextBox50.Value

'unprotect the worksheets for the advanced filter
'Unprotect_All
'filter the data


'show error information in a messagebox
MsgBox "Modificato con successo"

End Sub

Private Sub CommandButton26_Click()
TextBox37.Value = Val(TextBox37.Text) + Val(TextBox48.Text)
TextBox38.Value = Val(TextBox38.Text) + Val(TextBox49.Text)


TextBox39.Value = Val(TextBox39.Text) - Val(TextBox49.Text)
TextBox39.Value = Val(TextBox39.Text) + Val(TextBox48.Text)

TextBox36.Value = Val(TextBox36.Text) - Val(TextBox49.Text)
CommandButton25_Click

End Sub

Private Sub CommandButton27_Click()
Clear

End Sub

Private Sub CommandButton28_Click()
Dim ws As Worksheet
Dim strIndirizzo As String
Dim myFile As Variant
Dim strFile As String
On Error GoTo errHandler

Set ws = Foglio2


'apre la finestra di dialogo per il salvataggio dei file
'la cartella di default |fffd| la stessa della cartella di excel
strFile = Replace(Replace(ws.Name, " ", ""), ".", "_") _
        & "_" _
        & Format(Now(), "yyyy-mm-dd\_hh-mm") _
        & ".pdf"
strFile = ThisWorkbook.Path & "\" & strFile

myFile = Application.GetSaveAsFilename _
        (InitialFileName:=strFile, _
          FileFilter:="PDF Files (*.pdf), *.pdf", _
          Title:="Seleziona la cartella e inserisci il nome del file da salvare")

If myFile <> False Then
        ws.ExportAsFixedFormat _
          Type:=xlTypePDF, _
          Filename:=myFile, _
          Quality:=xlQualityStandard, _
          IncludeDocProperties:=True, _
          IgnorePrintAreas:=False, _
          OpenAfterPublish:=True
          

        MsgBox "Il file PDF |fffd| stato salvato."
End If

exitHandler:
        Exit Sub
errHandler:
        MsgBox "Non ho potuto salvare il file PDF"
Resume exitHandler
End Sub

Private Sub CommandButton29_Click()
Dim ws As Worksheet
'set worksheet variable
Set ws = Foglio2
'send the values to the worksheet
With ws

.Range("AA9").Value = Me.ComboBox37.Value
.Range("AB9").Value = Me.ComboBox38.Value
.Range("AC9").Value = Me.ComboBox39.Value
.Range("AD9").Value = Me.ComboBox40.Value
.Range("AE9").Value = Me.ComboBox36.Value
.Range("AI9").Value = Me.ComboBox41.Value
.Range("AG9").Value = Me.ComboBox42.Value
.Range("AH9").Value = Me.ComboBox43.Value
.Range("AF9").Value = Me.ComboBox44.Value
.Range("Z9").Value = Me.TextBox52.Value
End With
'run the advanced filter
Filterme
'add the named range to the rowsource
If ws.Range("B8").Value = "" Then
Me.ListBox3.RowSource = ""
MsgBox "No matching data"
Else
Me.ListBox3.RowSource = "FiltroInter"


End If
End Sub

Private Sub CommandButton3_Click()
Dim ws As Worksheet
Dim strIndirizzo As String
Dim myFile As Variant
Dim strFile As String
On Error GoTo errHandler

Set ws = Foglio2


'apre la finestra di dialogo per il salvataggio dei file
'la cartella di default |fffd| la stessa della cartella di excel
strFile = Replace(Replace(ws.Name, " ", ""), ".", "_") _
        & "_" _
        & Format(Now(), "yyyy-mm-dd\_hh-mm") _
        & ".pdf"
strFile = ThisWorkbook.Path & "\" & strFile

myFile = Application.GetSaveAsFilename _
        (InitialFileName:=strFile, _
          FileFilter:="PDF Files (*.pdf), *.pdf", _
          Title:="Seleziona la cartella e inserisci il nome del file da salvare")

If myFile <> False Then
        ws.ExportAsFixedFormat _
          Type:=xlTypePDF, _
          Filename:=myFile, _
          Quality:=xlQualityStandard, _
          IncludeDocProperties:=True, _
          IgnorePrintAreas:=False, _
          OpenAfterPublish:=True
          

        MsgBox "Il file PDF |fffd| stato salvato."
End If

exitHandler:
        Exit Sub
errHandler:
        MsgBox "Non ho potuto salvare il file PDF"
Resume exitHandler



End Sub

Private Sub CommandButton2_Click()

With Me.lstEmployee
        If .ListIndex > -1 Then
            Sheets(Emp1.Value).Activate
        End If
    End With

End Sub


Private Sub CommandButton30_Click()
Dim ws As Worksheet
'set worksheet variable
Set ws = Foglio25
'send the values to the worksheet

If ws.Range("A8").Value = "" Then
Me.ListBox2.RowSource = ""
MsgBox "No matching data"
Else
Me.ListBox2.RowSource = "Diff.Mese"


End If

End Sub

Private Sub CommandButton31_Click()
Macro10
End Sub

Private Sub CommandButton4_Click()

Emp8.Value = Val(Emp8.Text) + Val(TextBox20.Text)
Emp9.Value = Val(Emp9.Text) + Val(TextBox21.Text)


Emp10.Value = Val(Emp10.Text) - Val(TextBox21.Text)
Emp10.Value = Val(Emp10.Text) + Val(TextBox20.Text)

Emp7.Value = Val(Emp7.Text) - Val(TextBox21.Text)


End Sub

Private Sub CommandButton6_Click()



'ListBox1.ColumnCount = 20
'ListBox1.RowSource = "A8:T2000"

LoadLB1

End Sub
Private Sub LoadLB1() 'carica Listbox1 coi valori in tabella
    With Me.ListBox1
        .Clear 'cancella il contenuto
        .ColumnCount = 20 'modifica secondo necessit|fffd|
        .ColumnWidths = "60;60;60;60;45;95;105;95;95;105;105;80;80;80;80;80;80;80;80;80" 'idem
        .List = Tabella1.DataBodyRange.Value 'carica la tabella nella ListBox
    End With

End Sub

Private Sub CommandButton5_Click()

End Sub

Private Sub CommandButton7_Click()
'Clear the userform
Clear2
'clear the rowsourse
Clearme
'clear the listbox
Me.lstData.RowSource = ""


End Sub

Private Sub CommandButton8_Click()

Dim ws As Worksheet
'set worksheet variable
Set ws = Foglio2
'send the values to the worksheet
With ws

.Range("AA9").Value = Me.ComboBox18.Value
.Range("AB9").Value = Me.ComboBox19.Value
.Range("AC9").Value = Me.ComboBox20.Value
.Range("AD9").Value = Me.ComboBox21.Value
.Range("AE9").Value = Me.ComboBox22.Value
.Range("AI9").Value = Me.ComboBox23.Value
.Range("AG9").Value = Me.ComboBox24.Value
.Range("AH9").Value = Me.ComboBox25.Value
.Range("AF9").Value = Me.ComboBox26.Value
.Range("Z9").Value = Me.Emp0.Value
End With
'run the advanced filter
Filterme
'add the named range to the rowsource
If ws.Range("B8").Value = "" Then
Me.lstEmployee.RowSource = ""
MsgBox "No matching data"
Else
Me.lstEmployee.RowSource = "FiltroInter"


End If

End Sub

Private Sub CommandButton9_Click()
    
    
  SalvaDati.Show
  

End Sub

Private Sub Emp0_Change()

End Sub

Private Sub Emp1_Change()

End Sub

Private Sub Emp10_GotFocus()
Select Case ActiveCell.Interior.ColorIndex
        Case 6
            Emp10.BackColor = RGB(255, 255, 0)     '     Giallo
        Case 44
            Emp10.BackColor = RGB(255, 204, 0)     '     Oro
        Case 3
            Emp10.BackColor = RGB(255, 0, 0)       '     Rosso
    End Select
End Sub


Private Sub Emp10_Change()

End Sub

Private Sub Emp11_Change()

End Sub

Private Sub Label1_Click()

End Sub


Private Sub Label10_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 7)
    End If
Next i
MsgBox " Totale PREVISTI |fffd| " & Tot
End Sub




Private Sub Label11_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 8)
    End If
Next i
MsgBox " Totale Arrivati |fffd| " & Tot
End Sub

Private Sub Label12_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 9)
    End If
Next i
MsgBox " Totale Scaricati |fffd| " & Tot
End Sub

Private Sub Label14_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 12)
    End If
Next i
MsgBox " Totale Ordinati |fffd| " & Tot

End Sub

Private Sub Label15_Click()

End Sub

Private Sub Label3_Click()

End Sub

Private Sub Label19_Click()

End Sub

Private Sub Label27_Click()

End Sub

Private Sub Label38_Click()

End Sub

Private Sub Label4_Click()

End Sub

Private Sub Label42_Click()
CommandButton4_Click

End Sub

Private Sub Label43_Click()
CommandButton4_Click
End Sub

Private Sub Label44_Click()

End Sub

Private Sub Label49_Click()

End Sub

Private Sub lstData_Click()

End Sub

Private Sub Label59_Click()

End Sub

Private Sub Label60_Click()


End Sub

Private Sub Label61_Click()


End Sub

Private Sub Label62_Click()

End Sub

Private Sub Label63_Click()

End Sub

Private Sub Label64_Click()

End Sub

Private Sub Label65_Click()


End Sub

Private Sub Label66_Click()

End Sub

Private Sub Label67_Click()


End Sub

Private Sub Label68_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 12)
    End If
Next i
MsgBox " Totale Stock |fffd| " & Tot
End Sub

Private Sub Label74_Click()

End Sub

Private Sub Label75_Click()


End Sub

Private Sub Label8_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 11)
    End If
Next i
MsgBox " Totale Magazzino |fffd| " & Tot
End Sub

Private Sub ListBox2_Click()

End Sub

Private Sub ListBox2_DblClick(ByVal Cancel As MSForms.ReturnBoolean)




End Sub

Private Sub ListBox3_Click()

End Sub

Private Sub ListBox3_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'dim the variables
Dim i As Integer
On Error Resume Next
'find the selected list item
i = Me.ListBox3.ListIndex
'add the values to the text boxes

Me.TextBox52.Value = Me.ListBox3.Column(0, i)
Me.TextBox47.Value = Me.ListBox3.Column(1, i)
Me.TextBox31.Value = Me.ListBox3.Column(2, i)
Me.TextBox32.Value = Me.ListBox3.Column(3, i)
Me.TextBox33.Value = Me.ListBox3.Column(4, i)
Me.TextBox34.Value = Me.ListBox3.Column(5, i)
Me.TextBox35.Value = Me.ListBox3.Column(6, i)
Me.TextBox36.Value = Me.ListBox3.Column(7, i)
Me.TextBox37.Value = Me.ListBox3.Column(8, i)
Me.TextBox38.Value = Me.ListBox3.Column(9, i)
Me.TextBox39.Value = Me.ListBox3.Column(11, i)
Me.TextBox40.Value = Me.ListBox3.Column(12, i)
Me.TextBox41.Value = Me.ListBox3.Column(13, i)
Me.TextBox42.Value = Me.ListBox3.Column(14, i)
Me.TextBox43.Value = Me.ListBox3.Column(15, i)
Me.TextBox44.Value = Me.ListBox3.Column(16, i)
Me.TextBox45.Value = Me.ListBox3.Column(17, i)
Me.TextBox46.Value = Me.ListBox3.Column(18, i)
Me.TextBox50.Value = Me.ListBox3.Column(19, i)
Me.TextBox51.Value = Me.ListBox3.Column(20, i)



   If Val(TextBox39) <= Val(TextBox41) Then
        TextBox39.BackColor = &HFF&    'rosso
    
    ElseIf Val(TextBox39) <= Val(TextBox36) Then
        TextBox39.BackColor = &HFFFF& 'Giallo
        
        Else
        TextBox39.BackColor = &HFF40&    'verde
        
      
        
    End If
    
    
   


On Error GoTo 0

End Sub

Private Sub lstEmployee_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'dim the variables
Dim i As Integer
On Error Resume Next
'find the selected list item
i = Me.lstEmployee.ListIndex
'add the values to the text boxes

Me.Emp0.Value = Me.lstEmployee.Column(0, i)
Me.Emp1.Value = Me.lstEmployee.Column(1, i)
Me.Emp2.Value = Me.lstEmployee.Column(2, i)
Me.Emp3.Value = Me.lstEmployee.Column(3, i)
Me.Emp4.Value = Me.lstEmployee.Column(4, i)
Me.Emp5.Value = Me.lstEmployee.Column(5, i)
Me.Emp6.Value = Me.lstEmployee.Column(6, i)
Me.Emp7.Value = Me.lstEmployee.Column(7, i)
Me.Emp8.Value = Me.lstEmployee.Column(8, i)
Me.Emp9.Value = Me.lstEmployee.Column(9, i)
Me.Emp10.Value = Me.lstEmployee.Column(11, i)
Me.Emp11.Value = Me.lstEmployee.Column(12, i)
Me.Emp12.Value = Me.lstEmployee.Column(13, i)
Me.Emp13.Value = Me.lstEmployee.Column(14, i)
Me.Emp14.Value = Me.lstEmployee.Column(15, i)
Me.Emp15.Value = Me.lstEmployee.Column(16, i)
Me.Emp16.Value = Me.lstEmployee.Column(17, i)
Me.Emp17.Value = Me.lstEmployee.Column(18, i)
Me.Emp18.Value = Me.lstEmployee.Column(19, i)
Me.Emp19.Value = Me.lstEmployee.Column(20, i)



   If Val(Emp10) <= Val(Emp12) Then
        Emp10.BackColor = &HFF&    'rosso
    
    ElseIf Val(Emp10) <= Val(Emp7) Then
        Emp10.BackColor = &HFFFF& 'Giallo
        
        Else
        Emp10.BackColor = &HFF40&    'verde
        
      
        
    End If
    
    
   


On Error GoTo 0

End Sub

Private Sub lstEmployee_Error(ByVal Number As Integer, ByVal Description As MSForms.ReturnString, ByVal SCode As Long, ByVal Source As String, ByVal HelpFile As String, ByVal HelpContext As Long, ByVal CancelDisplay As MSForms.ReturnBoolean)
  Dim i As Integer
On Error Resume Next
'find the selected list item
i = Me.lstEmployee.ListIndex
'add the values to the text boxes

Me.Emp0.Value = Me.lstEmployee.Column(0, i)
Me.Emp1.Value = Me.lstEmployee.Column(1, i)
Me.Emp2.Value = Me.lstEmployee.Column(2, i)
Me.Emp3.Value = Me.lstEmployee.Column(3, i)
Me.Emp4.Value = Me.lstEmployee.Column(4, i)
Me.Emp5.Value = Me.lstEmployee.Column(5, i)
Me.Emp6.Value = Me.lstEmployee.Column(6, i)
Me.Emp7.Value = Me.lstEmployee.Column(7, i)
Me.Emp8.Value = Me.lstEmployee.Column(8, i)
Me.Emp9.Value = Me.lstEmployee.Column(9, i)
Me.Emp10.Value = Me.lstEmployee.Column(11, i)
Me.Emp11.Value = Me.lstEmployee.Column(12, i)
Me.Emp12.Value = Me.lstEmployee.Column(13, i)
Me.Emp13.Value = Me.lstEmployee.Column(14, i)
Me.Emp14.Value = Me.lstEmployee.Column(15, i)
Me.Emp15.Value = Me.lstEmployee.Column(16, i)
Me.Emp16.Value = Me.lstEmployee.Column(17, i)
Me.Emp17.Value = Me.lstEmployee.Column(18, i)
Me.Emp18.Value = Me.lstEmployee.Column(19, i)
Me.Emp19.Value = Me.lstEmployee.Column(20, i)




  If Val(Emp10) <= Val(Emp12) Then
        
    
    MsgBox "Sotto Scorta", vbCritical

      End If
End Sub

Private Sub MultiPage1_Change()

End Sub




Private Sub TextBox4_Change()

End Sub

Private Sub objResizer_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Button = 1 Then
LeftResizePos = X
TopResizePos = Y
End If

End Sub


Private Sub objResizer_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

If Button = 1 Then
With objResizer
.Move .Left + X - LeftResizePos, .Top + Y - TopResizePos
Me.Width = Me.Width + X - LeftResizePos
Me.Height = Me.Height + Y - TopResizePos
.Left = Me.InsideWidth - .Width
.Top = Me.InsideHeight - .Height
End With
End If
End Sub

Private Sub TextBox20_Change()

End Sub

Private Sub TextBox21_Change()

End Sub

Private Sub TextBox8_Change()

End Sub

Private Sub TxtSearch_Change()

End Sub
Sub Clear2()
'clear the values form the userform
With Me
.ComboBox9.Value = ""
.ComboBox10.Value = ""
.ComboBox11.Value = ""
.ComboBox12.Value = ""
.ComboBox13.Value = ""
.ComboBox14.Value = ""
.ComboBox15.Value = ""
.ComboBox16.Value = ""
.ComboBox17.Value = ""
End With

End Sub

Private Sub UserForm_Click()

End Sub

Private Sub UserForm_Initialize()

Dim i As Integer
Dim ControlOnForm As Object

Set objResizer = Me.Controls.Add("Forms.label.1", "MResize", True)
With objResizer
.Caption = Chr(111)
.Font.Name = "Marlett"
.Font.Charset = 2
.Font.Size = 14
.BackStyle = fmBackStyleTransparent
.AutoSize = True
.ForeColor = RGB(100, 100, 100)
.MousePointer = fmMousePointerSizeNESW
.ZOrder
.Top = Me.InsideHeight - .Height
.Left = Me.InsideWidth - .Width
End With

WidthRatio = 1
HeightRatio = 1
OldWidth = Me.Width
OldHeight = Me.Height
Me.Caption = "WithRatio=" & WidthRatio & " HeightRatio=" & HeightRatio

For Each ControlOnForm In Me.Controls
If ControlOnForm.Name <> "MResizer" Then
With ControlOnForm

       ReDim Preserve TopArray(i)
       ReDim Preserve LeftArray(i)
       ReDim Preserve WidthArray(i)
       ReDim Preserve HeightArray(i)
       ReDim Preserve FontArray(i)
       
       TopArray(i) = .Top
       LeftArray(i) = .Left
       WidthArray(i) = .Width
       HeightArray(i) = .Height
       On Error Resume Next
              FontArray(i) = .Font.Size
              On Error GoTo 0
              
       i = i + 1
       End With
       End If
       Next ControlOnForm
       




End Sub


Private Sub UserForm_Resize()

Dim ControlOnForm As Object
Dim i As Integer
WidthRatio = Me.Width / OldWidth
HeightRatio = Me.Height / OldHeight
Me.Caption = "WithRatio=" & WidthRatio & " HeightRatio=" & HeightRatio

For Each ControlOnForm In Me.Controls
If ControlOnForm.Name <> "MResizer" Then
With ControlOnForm

.Top = TopArray(i) * HeightRatio
.Left = LeftArray(i) * WidthRatio
.Width = WidthArray(i) * WidthRatio
.Height = HeightArray(i) * HeightRatio
On Error Resume Next
.Font.Size = FontArray(i) * HeightRatio
On Error GoTo 0

i = i + 1

End With
End If
Next ControlOnForm
Me.Repaint




End Sub
Private Sub UserForm_QueryClose _
(Cancel As Integer, CloseMode As Integer)
'   Prevents use of the Close button
If CloseMode = vbFormControlMenu Then
MsgBox "pulsante Chiudi non funziona."
Cancel = True
End If
End Sub



Attribute VB_Name = "Foglio1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio24"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio25"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Foglio26"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Ingrandimento"
Attribute VB_Base = "0{7717D6A7-AB3C-48F1-80C7-A491AD37CBB6}{BC860447-E0D0-401B-A7B8-D040503357A5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CommandButton1_Click()
Unload Me
End Sub

Private Sub CommandButton2_Click()
ThisWorkbook.FollowHyperlink "\\nas1\Backup\Gestionali\PDF\" & Me.TextBox1 & ".pdf"
End Sub

Private Sub CommandButton3_Click()
Shell "explorer.exe ""\\Nas1\Backup\Gestionali\PDF\""" & TextBox1, vbNormalFocus

MsgBox "Cartella Aperta Articolo    " & TextBox1.Text
If Err = 53 Then
MsgBox "Non trovata cartella Articolo    " & TextBox1.Text
End If

End Sub

Private Sub Label1_Click()

End Sub

Private Sub Label12_Click()

End Sub

Private Sub TextBox1_Change()


'dim the variables
Dim i As Integer
Dim fPath As String
Dim Pic As String
'set the file path
fPath = ThisWorkbook.Path & "\" & "Pictures"
'check for a value
If Not Me.TextBox1.Value = "" Then
On Error Resume Next
'display the picture
Me.Pic.Picture = LoadPicture(fPath & "\" & TextBox1.Value & ".jpg")
'If employee picture is not available
If Err = 53 Then
Me.Pic.Picture = LoadPicture(fPath & "\" & "NoPicture.jpg")
End If
End If
'reset error handler
On Error GoTo 0
End Sub
Attribute VB_Name = "Lamiere"
Attribute VB_Base = "0{F4636E5D-2829-467C-9B2D-5F096B727A84}{C947CA22-F5FC-47EA-B196-6DB630E45FB7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit
Public WithEvents objResizer As MSForms.Label
Attribute objResizer.VB_VarHelpID = -1
Dim LeftResizePos As Single
Dim TopResizePos As Single
Dim WidthRatio As Single
Dim HeightRatio As Single
Dim OldWidth As Double
Dim OldHeight As Double
Dim TopArray() As Single
Dim LeftArray() As Single
Dim WidthArray() As Single
Dim HeightArray() As Single
Dim FontArray() As Single
Private Sub cmdAdd_Click()

'dimention the variable
Dim DataSH As Worksheet
Dim Addme As Range
'set the variable
Set DataSH = Foglio12
'error handler
On Error GoTo errHandler:
'set variable for the destination
Set Addme = DataSH.Cells(Rows.Count, 3).End(xlUp).Offset(1, 1)
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
If Me.ComboBox1 = "" Or Me.ComboBox3 = "" Then
MsgBox "Dati Insufficenti"
Exit Sub
End If
'send the values to the database
With DataSH
'add the unique reference ID then all other values
Addme.Offset(0, -1) = DataSH.Range("D5").Value + 1
Addme.Value = Me.ComboBox1
Addme.Offset(0, 1).Value = Me.ComboBox2
Addme.Offset(0, 2).Value = Me.ComboBox3
Addme.Offset(0, 3).Value = Me.ComboBox4
Addme.Offset(0, 4).Value = Me.ComboBox5
Addme.Offset(0, 5).Value = Me.ComboBox6
Addme.Offset(0, 6).Value = Me.ComboBox7
Addme.Offset(0, 7).Value = Me.ComboBox8
Addme.Offset(0, 8).Value = Me.ComboBox34
Addme.Offset(0, 9).Value = Me.ComboBox33
Addme.Offset(0, 10).Value = Me.ComboBox32
Addme.Offset(0, 11).Value = Me.ComboBox31
Addme.Offset(0, 12).Value = Me.ComboBox27
Addme.Offset(0, 13).Value = Me.ComboBox28
Addme.Offset(0, 14).Value = Me.ComboBox29
Addme.Offset(0, 15).Value = Me.ComboBox30




End With
'sort the data by "Surname"
DataSH.Select
With DataSH
.Range("C9:S10000").Sort Key1:=Range("C9"), Order1:=xlAscending, Header:=xlGuess
End With
'clear the values after entry
Clear
'communicate with the user
MsgBox "I tuoi dati dei sono stati aggiunti con successo"
'return to interface sheet sheet
Foglio12.Select
'reset the form
On Error GoTo 0
Exit Sub
errHandler:
'if error occurs then show me exactly where the error occurs
MsgBox ("Articolo Inserito ")
End Sub

Sub Clear()
Dim ctl As Control
For Each ctl In Me.Controls
Select Case TypeName(ctl)
Case "TextBox"
ctl.Text = ""
Case "ListBox"
ctl.RowSource = ""
Case "ComboBox"
ctl.Value = ""
End Select
Next ctl

End Sub

Private Sub cmdCerca_Click()

'dim the variables
Dim Crit As Range
Dim FindMe As Range
Dim DataSH As Worksheet
'error handler
On Error GoTo errHandler:
'set object variables
Set DataSH = Foglio12
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
'///////////////////////////////////////////
'if header is selected add the criteria
If Me.cmdHeader.Value <> "All_Columns" Then
If Me.txtSearch = "" Then
DataSH.Range("Y9") = ""
Else
DataSH.Range("Y9") = "*" & Me.txtSearch.Value & "*"
End If
End If
'//////////////////////////////////////////
'if all columns is selected
If Me.cmdHeader.Value = "All_Columns" Then
'find the value in the column
Set FindMe = DataSH.Range("C8:U30000").Find(What:=txtSearch, LookIn:=xlValues, _
LookAt:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
MatchCase:=False, SearchFormat:=False)
'variable for criteria header
Set Crit = DataSH.Cells(18, FindMe.Column)
'if no criteria is added to the search
If Me.txtSearch = "" Then
DataSH.Range("Y9") = ""
DataSH.Range("Y8") = ""
Else
'add values from the search
DataSH.Range("Y8") = Crit
If Crit = "ID" Then
DataSH.Range("Y9") = Me.txtSearch.Value
Else
DataSH.Range("Y9") = "*" & Me.txtSearch.Value & "*"
End If
'show in the userform the header that is added
Me.txtAllColumn = DataSH.Range("Y8").Value
End If
End If
'/////////////////////////////////////////
'unprotect all sheets
'Unprotect_All
'filter the ElencoGrid_Form

DataSH.Range("C9").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Range("Data!$Y$8:$Y$9"), CopyToRange:=Range("Data!$AA$8:$AS$8"), _
Unique:=False
'add the dynamic data to the listbox
lstEmployee.RowSource = DataSH.Range("outdata").Address(external:=True)
'protect all sheets
'Protect_All
'error handler
On Error GoTo 0
Exit Sub
errHandler:
'Protect all sheets
'Protect_All
'if error occurs then show me exactly where the error occurs
MsgBox "Nessuna corrispondenza trovata per " & txtSearch.Text
'clear the listbox if no match is found
Me.lstEmployee.RowSource = ""
Exit Sub
End Sub

Private Sub cmdClear_Click()

'clear all controls
Clear

End Sub



Private Sub cmdclose_Click()
'close the form
    Unload Me
    ThisWorkbook.Saved = True
    Application.Quit
   

End Sub
    
    


Private Sub cmdDelete_Click()
'declare the variables
Dim findvalue As Range
Dim cDelete As VbMsgBoxResult
Dim cNum As Integer
Dim DataSH As Worksheet
Set DataSH = Foglio12
Dim X As Integer
'error statement
On Error GoTo errHandler:
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
'check for values
If Emp1.Value = "" Or Emp2.Value = "" Then
MsgBox "Non ci sono dati da cancellare"
Exit Sub
End If
'give the user a chance to change their mind
cDelete = MsgBox("Sei sicuro di voler eliminare questo Articolo", _
vbYesNo + vbDefaultButton2, "Sei sicuro????")
If cDelete = vbYes Then
'find the row
Set findvalue = DataSH.Range("C:C").Find(What:=Me.Emp1.Value, _
LookIn:=xlValues, LookAt:=xlWhole)
'delete the entire row
findvalue.EntireRow.Delete
End If
'clear the controls
cNum = 7
For X = 1 To cNum
Me.Controls("Emp" & X).Value = ""
Next
'unprotect all sheets for the advanced filter
'Unprotect_All
'filter the data
DataSH.Range("C8").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Range("ElencoGrid_Form!$Y$8:$Y$9"), CopyToRange:=Range("ElencoGrid_Form!$AA$8:$AS$8"), _
Unique:=False
'if no data exists then clear the rowsource
If DataSH.Range("AA9").Value = "" Then
lstEmployee.RowSource = ""
Else
'add the filtered data to the rowsource
lstEmployee.RowSource = DataSH.Range("outdata").Address(external:=True)
End If
'sort the data by "Surname"
DataSH.Select
With DataSH
.Range("C9:U10000").Sort Key1:=Range("D9"), Order1:=xlAscending, Header:=xlGuess
End With
'Protect all sheets
'Protect_All
'return to sheet
Foglio11.Select
'error block
On Error GoTo 0
Exit Sub
errHandler:
'Protect all sheets if error occurs
'Protect_All
'show error information in a messagebox
MsgBox "Eliminato !!! "


End Sub

Private Sub cmdEdit_Click()
'declare the variables
Dim findvalue As Range
Dim cNum As Integer
Dim DataSH As Worksheet
'error handling
On Error GoTo errHandler:
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
Set DataSH = Foglio12
'check for values
If Emp1.Value = "" Or Emp2.Value = "" Then
MsgBox "Non ci sono Dati da Modificare"
Exit Sub
End If
'clear the listbox
lstEmployee.RowSource = ""
'find the row to edit
Set findvalue = DataSH.Range("C:C"). _
Find(What:=Me.Emp1.Value, LookIn:=xlValues, LookAt:=xlWhole)
'update the values
findvalue = Emp1.Value
findvalue.Offset(0, 1) = Emp2.Value
findvalue.Offset(0, 2) = Emp3.Value
findvalue.Offset(0, 3) = Emp4.Value
findvalue.Offset(0, 4) = Emp5.Value
findvalue.Offset(0, 5) = Emp6.Value
findvalue.Offset(0, 6) = TextBox9.Value
findvalue.Offset(0, 7) = Emp7.Value
findvalue.Offset(0, 8) = Emp8.Value
findvalue.Offset(0, 9) = Emp9.Value
findvalue.Offset(0, 10) = TextBox4.Value
findvalue.Offset(0, 11) = TextBox5.Value
findvalue.Offset(0, 12) = TextBox6.Value
findvalue.Offset(0, 13) = TextBox3.Value
findvalue.Offset(0, 14) = TextBox2.Value
findvalue.Offset(0, 15) = TextBox7.Value
findvalue.Offset(0, 16) = TextBox9.Value


'unprotect the worksheets for the advanced filter
'Unprotect_All
'filter the data
DataSH.Range("C8").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Range("ElencoGrid_Form!$AA$8:$AA$9"), CopyToRange:=Range("ElencoGrid_Form!$AC$8:$AS$8"), _
Unique:=False
'if no data exists then clear the rowsource
If DataSH.Range("AC9").Value = "" Then
lstEmployee.RowSource = ""
Else
'add the filtered data to the rowsource
lstEmployee.RowSource = DataSH.Range("outdata").Address(external:=True)
End If
'return to sheet
Foglio12.Select
'Protect all sheets
'Protect_All
'error block
On Error GoTo 0
Exit Sub
errHandler:
'Protect all sheets
'Protect_All

'show error information in a messagebox
MsgBox "Modificato con successo"
End Sub




Private Sub cmdHeader_Change()
'dim the variable
Dim DataSH As Worksheet
'set the variable
Set DataSH = Foglio11
'establish the condition for "All_Columns"
If Me.cmdHeader.Value = "All_Columns" Then
DataSH.Range("Y9") = ""
Else
'clear the textbox
Me.txtAllColumn = ""
'add the criteria header to the sheet
DataSH.Range("Y8") = Me.cmdHeader.Value
'clear any existing criteria
DataSH.Range("Y9") = ""
End If
End Sub

Private Sub cmdClearme_Click()
Clear
End Sub










Private Sub Image1_Click()

End Sub

Private Sub ComboBox9_Change()

End Sub

Private Sub CommandButton1_Click()
Unload Me
End Sub

Private Sub ComboBox1_Change()

End Sub

Private Sub ComboBox2_Change()

End Sub

Private Sub ComboBox6_Change()

End Sub

Private Sub CommandButton10_Click()

Ingrandimento.TextBox1.Text = Me.Emp1.Text
Ingrandimento.TextBox2.Text = Me.Emp2.Text
Ingrandimento.TextBox3.Text = Me.Emp3.Text
Ingrandimento.TextBox4.Text = Me.Emp4.Text
Ingrandimento.TextBox5.Text = Me.Emp5.Text
Ingrandimento.TextBox6.Text = Me.Emp6.Text
Ingrandimento.TextBox7.Text = Me.TextBox9.Text
Ingrandimento.TextBox8.Text = Me.Emp7.Text
Ingrandimento.TextBox9.Text = Me.Emp8.Text
Ingrandimento.TextBox10.Text = Me.Emp9.Text
Ingrandimento.TextBox11.Text = Me.TextBox4.Text
Ingrandimento.TextBox12.Text = Me.TextBox5.Text
Ingrandimento.TextBox13.Text = Me.TextBox6.Text
Ingrandimento.TextBox14.Text = Me.TextBox3.Text
Ingrandimento.TextBox15.Text = Me.TextBox2.Text
Ingrandimento.TextBox16.Text = Me.TextBox7.Text
Ingrandimento.TextBox17.Text = Me.TextBox8.Text



Ingrandimento.Show

End Sub

Private Sub CommandButton11_Click()
ThisWorkbook.FollowHyperlink "\\nas1\Backup\Gestionali\PDF\" & Me.Emp1 & ".pdf"
End Sub

Private Sub CommandButton12_Click()
Shell "explorer.exe ""\\Nas1\Backup\Gestionali\PDF\""" & Emp1, vbNormalFocus

MsgBox "Cartella Aperta Articolo    " & Emp1.Text


End Sub

Private Sub CommandButton13_Click()

Unload Me
UserForm1.Show

End Sub

Private Sub CommandButton3_Click()

Dim Dpath As String
Dim FileN As Range, FolderPath As Range
Dim MyRange As Range
'turn off screen updating
Application.ScreenUpdating = False
Set FileN = Foglio11.Range("A1")
Set FolderPath = Foglio11.Range("B2")
Dpath = FolderPath & FileN & "   " & Format(Now, "yyyy-mm-dd hh-mm")  'change your path do not forget the last backslash
'set the named range for the PDF
 With Foglio11
        .Range("C8:U" & Cells(Rows.Count, "C").End(xlUp).Row).Name = "Lame19"
    End With
'set range
Set MyRange = Foglio11.Range("Lame19")
Foglio11.PageSetup.PrintArea = "Lame19"
'create the PDF
On Error Resume Next
MyRange.ExportAsFixedFormat Type:=xlTypePDF, Filename:=Dpath, Quality:=xlQualityStandard, _
IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True
'error handler
On Error GoTo 0
'clear the page breaks
ActiveSheet.DisplayPageBreaks = False
Application.ScreenUpdating = False

End Sub

Private Sub CommandButton2_Click()

With Me.lstEmployee
        If .ListIndex > -1 Then
            Sheets(Emp1.Value).Activate
        End If
    End With

End Sub


Private Sub CommandButton4_Click()

Emp8.Value = Val(Emp8.Text) + Val(TextBox20.Text)
Emp9.Value = Val(Emp9.Text) + Val(TextBox21.Text)


End Sub

Private Sub CommandButton6_Click()



'ListBox1.ColumnCount = 20
'ListBox1.RowSource = "A8:T2000"

LoadLB1

End Sub
Private Sub LoadLB1() 'carica Listbox1 coi valori in tabella
    With Me.ListBox1
        .Clear 'cancella il contenuto
        .ColumnCount = 20 'modifica secondo necessit|fffd|
        .ColumnWidths = "60;60;60;60;45;95;105;95;95;105;105;80;80;80;80;80;80;80;80;80" 'idem
        .List = Tabella1.DataBodyRange.Value 'carica la tabella nella ListBox
    End With

End Sub

Private Sub CommandButton5_Click()

End Sub

Private Sub CommandButton7_Click()
'Clear the userform
Clear2
'clear the rowsourse
Clearme
'clear the listbox
Me.lstData.RowSource = ""


End Sub

Private Sub CommandButton8_Click()

Dim ws As Worksheet
'set worksheet variable
Set ws = Foglio11
'send the values to the worksheet
With ws
.Range("AC9").Value = Me.ComboBox18.Value
.Range("AD9").Value = Me.ComboBox19.Value
.Range("AE9").Value = Me.ComboBox20.Value
.Range("AF9").Value = Me.ComboBox21.Value
.Range("AG9").Value = Me.ComboBox22.Value
.Range("AH9").Value = Me.ComboBox23.Value
.Range("AI9").Value = Me.ComboBox24.Value
.Range("AJ9").Value = Me.ComboBox25.Value
.Range("AK9").Value = Me.ComboBox26.Value
.Range("AL9").Value = Me.ComboBox42.Value
.Range("AM9").Value = Me.ComboBox41.Value
.Range("AN9").Value = Me.ComboBox40.Value
.Range("AO9").Value = Me.ComboBox39.Value
.Range("AP9").Value = Me.ComboBox38.Value
.Range("AQ9").Value = Me.ComboBox37.Value
.Range("AR9").Value = Me.ComboBox36.Value
.Range("AS9").Value = Me.ComboBox35.Value




End With
'run the advanced filter
Filterme4
'add the named range to the rowsource
If ws.Range("C8").Value = "" Then
Me.lstEmployee.RowSource = ""
MsgBox "No matching data"
Else
Me.lstEmployee.RowSource = "Lame16"
End If

End Sub

Private Sub CommandButton9_Click()
    
    
  SalvaDati.Show
  

End Sub



Private Sub Emp10_GotFocus()
Select Case ActiveCell.Interior.ColorIndex
        Case 6
            Emp10.BackColor = RGB(255, 255, 0)     '     Giallo
        Case 44
            Emp10.BackColor = RGB(255, 204, 0)     '     Oro
        Case 3
            Emp10.BackColor = RGB(255, 0, 0)       '     Rosso
    End Select
End Sub

Sub Emp1_Change()
'dim the variables
Dim i As Integer
Dim fPath As String
Dim Pic As String
'set the file path
fPath = ThisWorkbook.Path & "\" & "Pictures"
'check for a value
If Not Me.Emp1.Value = "" Then
On Error Resume Next
'display the picture
Me.Pic.Picture = LoadPicture(fPath & "\" & Emp1.Value & ".jpg")
'If employee picture is not available
If Err = 53 Then
Me.Pic.Picture = LoadPicture(fPath & "\" & "NoPicture.jpg")
End If
End If
'reset error handler
On Error GoTo 0

End Sub

Private Sub Label1_Click()

End Sub


Private Sub Label10_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 6)
    End If
Next i
MsgBox " Totale PREVISTI |fffd| " & Tot
End Sub




Private Sub Label11_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 7)
    End If
Next i
MsgBox " Totale Arrivati |fffd| " & Tot
End Sub

Private Sub Label12_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 8)
    End If
Next i
MsgBox " Totale Scaricati |fffd| " & Tot
End Sub

Private Sub Label15_Click()

End Sub

Private Sub Label24_Click()

End Sub

Private Sub Label3_Click()

End Sub

Private Sub Label38_Click()

End Sub

Private Sub Label4_Click()

End Sub

Private Sub Label44_Click()

End Sub

Private Sub Label49_Click()

End Sub

Private Sub lstData_Click()

End Sub

Private Sub Label59_Click()

End Sub

Private Sub Label66_Click()

End Sub

Private Sub Label74_Click()

End Sub

Private Sub Label8_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 9)
    End If
Next i
MsgBox " Totale Magazzino |fffd| " & Tot
End Sub

Private Sub Label75_Click()

End Sub

Private Sub Label85_Click()

End Sub

Private Sub Label89_Click()

End Sub

Private Sub lstEmployee_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'dim the variables
Dim i As Integer
On Error Resume Next
'find the selected list item
i = Me.lstEmployee.ListIndex
'add the values to the text boxes
Me.Emp1.Value = Me.lstEmployee.Column(0, i)
Me.Emp2.Value = Me.lstEmployee.Column(1, i)
Me.Emp3.Value = Me.lstEmployee.Column(2, i)
Me.Emp4.Value = Me.lstEmployee.Column(3, i)
Me.Emp5.Value = Me.lstEmployee.Column(4, i)
Me.Emp6.Value = Me.lstEmployee.Column(5, i)
Me.TextBox9.Value = Me.lstEmployee.Column(6, i)


Me.Emp7.Value = Me.lstEmployee.Column(7, i)
Me.Emp8.Value = Me.lstEmployee.Column(8, i)
Me.Emp9.Value = Me.lstEmployee.Column(9, i)

Me.TextBox4.Value = Me.lstEmployee.Column(10, i)
Me.TextBox5.Value = Me.lstEmployee.Column(11, i)
Me.TextBox6.Value = Me.lstEmployee.Column(12, i)

Me.TextBox3.Value = Me.lstEmployee.Column(13, i)
Me.TextBox2.Value = Me.lstEmployee.Column(14, i)
Me.TextBox7.Value = Me.lstEmployee.Column(15, i)
Me.TextBox8.Value = Me.lstEmployee.Column(16, i)






     


On Error GoTo 0

End Sub

Private Sub MultiPage1_Change()

End Sub




Private Sub TextBox4_Change()

End Sub

Private Sub TextBox8_Change()

End Sub

Private Sub TxtSearch_Change()

End Sub
Sub Clear2()
'clear the values form the userform
With Me
.ComboBox9.Value = ""
.ComboBox10.Value = ""
.ComboBox11.Value = ""
.ComboBox12.Value = ""
.ComboBox13.Value = ""
.ComboBox14.Value = ""
.ComboBox15.Value = ""
.ComboBox16.Value = ""
.ComboBox17.Value = ""
End With

End Sub


Private Sub objResizer_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Button = 1 Then
LeftResizePos = X
TopResizePos = Y
End If

End Sub


Private Sub objResizer_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

If Button = 1 Then
With objResizer
.Move .Left + X - LeftResizePos, .Top + Y - TopResizePos
Me.Width = Me.Width + X - LeftResizePos
Me.Height = Me.Height + Y - TopResizePos
.Left = Me.InsideWidth - .Width
.Top = Me.InsideHeight - .Height
End With
End If
End Sub

Private Sub Pic_BeforeDragOver(ByVal Cancel As MSForms.ReturnBoolean, ByVal Data As MSForms.DataObject, ByVal X As Single, ByVal Y As Single, ByVal DragState As MSForms.fmDragState, ByVal Effect As MSForms.ReturnEffect, ByVal Shift As Integer)

End Sub

Private Sub UserForm_Click()

End Sub

Private Sub UserForm_Initialize()

Dim i As Integer
Dim ControlOnForm As Object

Set objResizer = Me.Controls.Add("Forms.label.1", "MResize", True)
With objResizer
.Caption = Chr(111)
.Font.Name = "Marlett"
.Font.Charset = 2
.Font.Size = 14
.BackStyle = fmBackStyleTransparent
.AutoSize = True
.ForeColor = RGB(100, 100, 100)
.MousePointer = fmMousePointerSizeNESW
.ZOrder
.Top = Me.InsideHeight - .Height
.Left = Me.InsideWidth - .Width
End With

WidthRatio = 1
HeightRatio = 1
OldWidth = Me.Width
OldHeight = Me.Height
Me.Caption = "WithRatio=" & WidthRatio & " HeightRatio=" & HeightRatio

For Each ControlOnForm In Me.Controls
If ControlOnForm.Name <> "MResizer" Then
With ControlOnForm

       ReDim Preserve TopArray(i)
       ReDim Preserve LeftArray(i)
       ReDim Preserve WidthArray(i)
       ReDim Preserve HeightArray(i)
       ReDim Preserve FontArray(i)
       
       TopArray(i) = .Top
       LeftArray(i) = .Left
       WidthArray(i) = .Width
       HeightArray(i) = .Height
       On Error Resume Next
              FontArray(i) = .Font.Size
              On Error GoTo 0
              
       i = i + 1
       End With
       End If
       Next ControlOnForm
       




End Sub


Private Sub UserForm_Resize()

Dim ControlOnForm As Object
Dim i As Integer
WidthRatio = Me.Width / OldWidth
HeightRatio = Me.Height / OldHeight
Me.Caption = "WithRatio=" & WidthRatio & " HeightRatio=" & HeightRatio

For Each ControlOnForm In Me.Controls
If ControlOnForm.Name <> "MResizer" Then
With ControlOnForm

.Top = TopArray(i) * HeightRatio
.Left = LeftArray(i) * WidthRatio
.Width = WidthArray(i) * WidthRatio
.Height = HeightArray(i) * HeightRatio
On Error Resume Next
.Font.Size = FontArray(i) * HeightRatio
On Error GoTo 0

i = i + 1

End With
End If
Next ControlOnForm
Me.Repaint




End Sub



Private Sub UserForm_QueryClose _
(Cancel As Integer, CloseMode As Integer)
'   Prevents use of the Close button
If CloseMode = vbFormControlMenu Then
MsgBox "pulsante Chiudi non funziona."
Cancel = True
End If
End Sub



Attribute VB_Name = "Modifica"
Attribute VB_Base = "0{AC2BE9C2-3C94-4AD5-ABF2-A1E5A6D4538F}{2DA1B688-CBEB-4F07-BB35-6235FCE76ACC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CommandButton1_Click()
Unload Me






End Sub



Private Sub Label84_Click()

End Sub

Private Sub Label93_Click()

End Sub

Private Sub Label95_Click()

End Sub

Private Sub ListBox1_Click()




  


End Sub

Private Sub CommandButton2_Click()

'declare the variables
Dim findvalue As Range
Dim cNum As Integer
Dim DataSH As Worksheet
'error handling
On Error GoTo errHandler:
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
Set DataSH = Foglio3
'check for values
If TextBox2.Value = "" Then
MsgBox "Non ci sono Dati da Modificare"
Exit Sub
End If
'clear the listbox
ListBox1.RowSource = ""
'find the row to edit
Set findvalue = DataSH.Range("C:C"). _
Find(What:=Me.TextBox2.Value, LookIn:=xlValues, LookAt:=xlWhole)
'update the values
findvalue = Texbox2.Value
findvalue.Offset(0, 1) = TextBox3.Value
findvalue.Offset(0, 2) = TextBox4.Value
findvalue.Offset(0, 3) = TextBox5.Value
findvalue.Offset(0, 4) = TextBox6.Value
findvalue.Offset(0, 5) = TextBox7.Value
findvalue.Offset(0, 6) = TextBox8.Value
findvalue.Offset(0, 7) = TextBox9.Value
findvalue.Offset(0, 8) = TextBox10.Value
findvalue.Offset(0, 9) = TextBox11.Value
findvalue.Offset(0, 10) = TextBox12.Value
findvalue.Offset(0, 11) = TextBox13.Value
findvalue.Offset(0, 12) = TextBox14.Value
findvalue.Offset(0, 13) = TextBox15.Value
findvalue.Offset(0, 14) = TextBox16.Value
findvalue.Offset(0, 15) = TextBox17.Value
findvalue.Offset(0, 16) = TextBox18.Value
findvalue.Offset(0, 17) = TextBox19.Value
findvalue.Offset(0, 18) = TextBox20.Value
findvalue.Offset(0, 19) = TextBox21.Value
findvalue.Offset(0, 20) = TextBox22.Value
findvalue.Offset(0, 21) = TextBox23.Value
findvalue.Offset(0, 22) = TextBox24.Value
findvalue.Offset(0, 23) = TextBox25.Value


'unprotect the worksheets for the advanced filter
'Unprotect_All
'filter the data
DataSH.Range("C8").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Range("ElencoGrid_Form!$AA$8:$AA$9"), CopyToRange:=Range("ElencoGrid_Form!$AC$8:$AS$8"), _
Unique:=False
'if no data exists then clear the rowsource
If DataSH.Range("AC9").Value = "" Then
ListBox1.RowSource = ""
Else
'add the filtered data to the rowsource
ListBox1.RowSource = DataSH.Range("outdata").Address(external:=True)
End If
'return to sheet
Foglio3.Select
'Protect all sheets
'Protect_All
'error block
On Error GoTo 0
Exit Sub
errHandler:
'Protect all sheets
'Protect_All

'show error information in a messagebox
MsgBox "Modificato con successo"
End Sub


Private Sub TextBox2_Change()

End Sub
Attribute VB_Name = "Modulo1"
Sub Filterme()
Attribute Filterme.VB_Description = "Advanced Filter"
Attribute Filterme.VB_ProcData.VB_Invoke_Func = "D\n14"
'
' FilterMe Macro
' Advanced Filter
'
' Scelta rapida da tastiera: CTRL+MAIUSC+D
'
 



Foglio3.Range("B8").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Foglio2.Range("Z8:AI9"), CopyToRange:=Foglio2.Range("B8:U8"), Unique:=False



End Sub
Sub Clearme()
Attribute Clearme.VB_Description = "Clears Data"
Attribute Clearme.VB_ProcData.VB_Invoke_Func = "C\n14"
'
' Clearme Macro
' Clears Data
'
' Scelta rapida da tastiera: CTRL+MAIUSC+C
'
   
    Range("C9:U33").Select
    ActiveWindow.SmallScroll Down:=-15
   
    Selection.Clear
End Sub


Sub Filterme2()
'
' FilterMe Macro
' Advanced Filter
'
' Scelta rapida da tastiera: CTRL+MAIUSC+D
'
 



Foglio6.Range("C8").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Foglio5.Range("AA8:AI9"), CopyToRange:=Foglio5.Range("C8:K8"), Unique:=False



End Sub

Sub Filterme3()
'
' FilterMe Macro
' Advanced Filter
'
' Scelta rapida da tastiera: CTRL+MAIUSC+D
'
 



Foglio9.Range("C8").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Foglio8.Range("AA8:AI9"), CopyToRange:=Foglio8.Range("C8:L8"), Unique:=False

End Sub

Sub Filterme4()
'
' FilterMe Macro
' Advanced Filter
'
' Scelta rapida da tastiera: CTRL+MAIUSC+D
'
 



Foglio12.Range("C8").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Foglio11.Range("AC8:AS9"), CopyToRange:=Foglio11.Range("C8:S8"), Unique:=False



End Sub

Sub Filterme5()
'
' FilterMe Macro
' Advanced Filter
'
' Scelta rapida da tastiera: CTRL+MAIUSC+D
'
 



Foglio14.Range("A8").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Foglio14.Range("AB8"), CopyToRange:=Foglio14.Range("BA8:BS8"), Unique:=False



End Sub

Sub Filterme7()
'
' FilterMe Macro
' Advanced Filter
'
' Scelta rapida da tastiera: CTRL+MAIUSC+D


Foglio19.Range("C8").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Foglio18.Range("AE8:BD9"), CopyToRange:=Foglio18.Range("C8:AA8"), Unique:=False

End Sub
Attribute VB_Name = "Modulo10"
Sub Macro7()
Attribute Macro7.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro7 Macro
'

'
    Range("BA7:BN300").Select
    
    
    
    
End Sub
Attribute VB_Name = "Modulo11"
Sub Macro8()
Attribute Macro8.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro8 Macro
'

'
    ActiveWindow.SmallScroll Down:=-15
    Columns("H:H").Select
    Range("H239").Activate
    ActiveWindow.SmallScroll Down:=-204
    Sheets("Foglio2").Select
End Sub

Sub Workbook_Open()
Dim Msg As String
Dim Cella As Range
    With Sheets("Totali")
        For Each Cella In .Range(.Range("M8"), .Range("M" & .Rows.Count).End(xlUp))
            If Cella <> "" And CLng(Cella.Offset(0, -2)) < CLng(Cella) Then
                Msg = Msg & Cella.Offset(0, -12) & "    " & Cella.Offset(0, -11) & "    " & Cella.Offset(0, -10) & "      " & Cella.Offset(0, -9) & "      " & Cella.Offset(0, -8) & "      " & Cella.Offset(0, -2) & vbCrLf
            End If
        Next Cella
    End With
    If Msg <> "" Then MsgBox Msg, vbExclamation, "ARTICOLI SOTTO SCORTA"
End Sub
Attribute VB_Name = "Modulo12"
Sub Macro5()
Attribute Macro5.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro5 Macro
'

'
    Range("A8:I290").Select
    ActiveWindow.SmallScroll Down:=-300
    

End Sub



Sub CopiadatisuFoglio1()
Dim i As Integer
Dim ur As Long
Dim lr As Long
Dim cel As Range
Dim Rng As Range
Dim rng1 As Range
ur = Sheets("Data").Cells(Rows.Count, "H").End(xlUp).Row
Set Rng = Sheets("Data").Range("h8:h" & ur)
For Each cel In Rng
lr = Sheets("Foglio1").Cells(Rows.Count, "a").End(xlUp).Row
    If cel.Value = "Mag." Then
        With Sheets("Foglio1").Range("A:A")
            Set rng1 = .Find(What:=cel.Offset(0, -5).Value, _
                            After:=.Cells(.Cells.Count), _
                            LookIn:=xlValues, _
                            LookAt:=xlWhole, _
                            SearchOrder:=xlByRows, _
                            SearchDirection:=xlNext, _
                            MatchCase:=False)
            If Not rng1 Is Nothing Then
                Else
                For i = 1 To 5
                    Sheets("Foglio1").Cells(lr + 1, i).Value = cel.Offset(0, i - 6).Value
                Next i
            End If
        End With
    End If
Next cel
End Sub

Sub CopiadatisuTotali()
Dim i As Integer
Dim ur As Long
Dim lr As Long
Dim cel As Range
Dim Rng As Range
Dim rng1 As Range
ur = Sheets("Data").Cells(Rows.Count, "H").End(xlUp).Row
Set Rng = Sheets("Data").Range("h8:h" & ur)
For Each cel In Rng
lr = Sheets("Totali").Cells(Rows.Count, "a").End(xlUp).Row
    If cel.Value = "Mag." Then
        With Sheets("Totali").Range("A:A")
            Set rng1 = .Find(What:=cel.Offset(0, -5).Value, _
                            After:=.Cells(.Cells.Count), _
                            LookIn:=xlValues, _
                            LookAt:=xlWhole, _
                            SearchOrder:=xlByRows, _
                            SearchDirection:=xlNext, _
                            MatchCase:=False)
            If Not rng1 Is Nothing Then
                Else
                For i = 1 To 5
                    Sheets("Totali").Cells(lr + 1, i).Value = cel.Offset(0, i - 6).Value
                Next i
                
                For i = 10 To 10
                    Sheets("Totali").Cells(lr + 1, i).Value = cel.Offset(0, i - 6).Value
                Next i
                  
                For i = 14 To 16
                    Sheets("Totali").Cells(lr + 1, i).Value = cel.Offset(0, i - 6).Value
                    
                   Next i
                   
                                               
                    
                
                    
                
            End If
        End With
    End If
Next cel
End Sub


Attribute VB_Name = "Modulo13"

Sub SottoScorta5()
Attribute SottoScorta5.VB_ProcData.VB_Invoke_Func = " \n14"
'
' SottoScorta5 Macro
'

'
    ActiveSheet.Range("$A$7:$T$377").AutoFilter Field:=11, Criteria1:=RGB(255, _
        199, 206), Operator:=xlFilterCellColor
    Range("A8:T395").Select
    Selection.Copy
    Sheets("SottoScorta").Select
    Range("A8").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Range("V15").Select
End Sub
Attribute VB_Name = "Modulo14"
Sub Macro12()
Attribute Macro12.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro12 Macro
'

'
    ActiveWindow.SmallScroll Down:=-12
    ActiveSheet.Range("$A$7:$T$377").AutoFilter Field:=11, Criteria1:=RGB(255, _
        199, 206), Operator:=xlFilterCellColor
    ActiveWindow.SmallScroll Down:=-12
    Range("A8:T402").Select
    Selection.Copy
    Sheets("SottoScorta").Select
    ActiveWindow.SmallScroll Down:=-15
    Range("A7:N7").Select
    Application.CutCopyMode = False
    Selection.AutoFilter
    Range("A8").Select
    Sheets("Totali").Select
    ActiveWindow.SmallScroll Down:=-24
    Selection.Copy
    Sheets("SottoScorta").Select
    ActiveWindow.SmallScroll Down:=-9
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Sheets("Totali").Select
    Application.CutCopyMode = False
    Sheets("SottoScorta").Select
End Sub
Attribute VB_Name = "Modulo15"
Sub Macro11()
Attribute Macro11.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro11 Macro
'

'
    Range("A9:I293").Select
End Sub
Attribute VB_Name = "Modulo16"
Sub Macro10()
Attribute Macro10.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro10 Macro
'

'
    Sheets("Totali").Select
    ActiveWindow.SmallScroll Down:=-9
    ActiveSheet.Range("$A$7:$T$377").AutoFilter Field:=11, Criteria1:=RGB(255, _
        199, 206), Operator:=xlFilterCellColor
    ActiveWindow.SmallScroll Down:=-6
    Range("A12:T217").Select
    Selection.Copy
    Sheets("SottoScorta").Select
    Range("A8:N13").Select
    Application.CutCopyMode = False
    Selection.ClearContents
    Range("A8").Select
    Sheets("Totali").Select
    Selection.Copy
    Sheets("SottoScorta").Select
    ActiveWindow.SmallScroll Down:=-3
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Range("A11").Select
End Sub
Attribute VB_Name = "Modulo2"
Sub Macro1()
Attribute Macro1.VB_ProcData.VB_Invoke_Func = "A\n14"
'
' Macro1 Macro
'
' Scelta rapida da tastiera: CTRL+MAIUSC+A



 Set Searchme = Range("Y9")
Set FindMe = Range("C8:U204").Find(What:=Searchme, LookIn:=xlValues, LookAt _
:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:= _
False, SearchFormat:=False)
Range("Y8").Value = Cells(8, FindMe.Column)


    Range("C7:U204").AdvancedFilter Action:=xlFilterCopy, CriteriaRange:=Range( _
    "Y7:Y8"), CopyToRange:=Range("AA7:AS7"), Unique:=False


    
End Sub
Sub Macro2()
Attribute Macro2.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro2 Macro
'
 Set Searchme = Range("Y9")
Set FindMe = Range("C8:U204").Find(What:=Searchme, LookIn:=xlValues, LookAt _
:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:= _
False, SearchFormat:=False)
Range("Y8").Value = Cells(8, FindMe.Column)
  
End Sub



Attribute VB_Name = "Modulo3"
Sub MacroPDF()
Attribute MacroPDF.VB_ProcData.VB_Invoke_Func = " \n14"
'
' MacroPDF Macro
'

'
    ChDir "C:\Users\Magazzino\Documents"
    ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, Filename:= _
        "C:\Users\Magazzino\Documents\MyPDF.pdf", Quality:=xlQualityStandard, _
        IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:= _
        True
End Sub

Sub Showme()
frmLogin.Show
End Sub




Sub ShowNav()
Employee2.Show
End Sub







Attribute VB_Name = "Modulo4"
Sub Ottagono3_Click()
frmSetup.Show

End Sub
Attribute VB_Name = "Modulo5"
Sub Macro4()
Attribute Macro4.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro4 Macro
'

'
    Range("A7:S1580").Select
    ActiveWorkbook.Worksheets("Totali").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Totali").Sort.SortFields.Add2 Key:=Range("B8:B1580") _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ActiveWorkbook.Worksheets("Totali").Sort.SortFields.Add2 Key:=Range("D8:D1580") _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ActiveWorkbook.Worksheets("Totali").Sort.SortFields.Add2 Key:=Range("E8:E1580") _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ActiveWorkbook.Worksheets("Totali").Sort.SortFields.Add2 Key:=Range("C8:C1580") _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets("Totali").Sort
        .SetRange Range("A7:S1580")
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
End Sub
Attribute VB_Name = "Modulo6"
Sub Macro6()
Attribute Macro6.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro6 Macro
'

'
    ActiveWorkbook.Worksheets("Data").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Data").Sort.SortFields.Add2 Key:=Range("D8:D1309") _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ActiveWorkbook.Worksheets("Data").Sort.SortFields.Add2 Key:=Range("F8:F1309") _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ActiveWorkbook.Worksheets("Data").Sort.SortFields.Add2 Key:=Range("G8:G1309") _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ActiveWorkbook.Worksheets("Data").Sort.SortFields.Add2 Key:=Range("E8:E1309") _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets("Data").Sort
        .SetRange Range("B7:U1309")
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
End Sub
Attribute VB_Name = "Modulo7"
Sub Macro3()
Attribute Macro3.VB_Description = "Filter Advanced"
Attribute Macro3.VB_ProcData.VB_Invoke_Func = "E\n14"
'
' Macro3 Macro
'
' Scelta rapida da tastiera: CTRL+MAIUSC+E
'
    Foglio14.Range("A7:S602").AdvancedFilter Action:=xlFilterCopy, CriteriaRange:=Foglio14.Range( _
        "AA8:AG9"), CopyToRange:=Foglio14.Range("BA8:BS8"), Unique:=True
        
        
   
End Sub
Attribute VB_Name = "Modulo8"
Sub Macro9()
Attribute Macro9.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro9 Macro
'

'
    ActiveWorkbook.Worksheets("Foglio1").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Foglio1").Sort.SortFields.Add2 Key:=Range( _
        "B2:B1303"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets("Foglio1").Sort.SortFields.Add2 Key:=Range( _
        "D2:D1303"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets("Foglio1").Sort.SortFields.Add2 Key:=Range( _
        "E2:E1303"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    ActiveWorkbook.Worksheets("Foglio1").Sort.SortFields.Add2 Key:=Range( _
        "C2:C1303"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("Foglio1").Sort
        .SetRange Range("A1:E1303")
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
End Sub
Attribute VB_Name = "Modulo9"


Sub Macro15()
'
' Macro7 Macro
'

'
    Range("C7:P560").Select
    
End Sub
Attribute VB_Name = "Molatura"
Attribute VB_Base = "0{977B2840-FB49-4605-A8D1-CF4510F0C986}{EF5E8BAD-77E7-411D-BA2B-05FD30E95180}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False




Option Explicit
Public WithEvents objResizer As MSForms.Label
Attribute objResizer.VB_VarHelpID = -1
Dim LeftResizePos As Single
Dim TopResizePos As Single
Dim WidthRatio As Single
Dim HeightRatio As Single
Dim OldWidth As Double
Dim OldHeight As Double
Dim TopArray() As Single
Dim LeftArray() As Single
Dim WidthArray() As Single
Dim HeightArray() As Single
Dim FontArray() As Single
Private Sub cmdAdd_Click()

'dimention the variable
Dim DataSH As Worksheet
Dim Addme As Range
'set the variable
Set DataSH = Foglio6
'error handler
On Error GoTo errHandler:
'set variable for the destination
Set Addme = DataSH.Cells(Rows.Count, 3).End(xlUp).Offset(1, 1)
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
If Me.ComboBox1 = "" Or Me.ComboBox3 = "" Then
MsgBox "Informazioni Insufficenti"
Exit Sub
End If
'send the values to the database
With DataSH
'add the unique reference ID then all other values
Addme.Offset(0, -1) = DataSH.Range("D5").Value + 1
Addme.Value = Me.ComboBox1
Addme.Offset(0, 1).Value = Me.ComboBox2
Addme.Offset(0, 2).Value = Me.ComboBox3
Addme.Offset(0, 3).Value = Me.ComboBox4
Addme.Offset(0, 4).Value = Me.ComboBox27
Addme.Offset(0, 5).Value = Me.ComboBox28
Addme.Offset(0, 6).Value = Me.ComboBox29
Addme.Offset(0, 7).Value = Me.ComboBox30



End With
'sort the data by "Surname"
DataSH.Select
With DataSH
.Range("C9:K10000").Sort Key1:=Range("C9"), Order1:=xlAscending, Header:=xlGuess
End With
'clear the values after entry
Clear
'communicate with the user
MsgBox "I tuoi dati dei sono stati aggiunti con successo"
'return to interface sheet sheet
Foglio6.Select
'reset the form
On Error GoTo 0
Exit Sub
errHandler:
'if error occurs then show me exactly where the error occurs
MsgBox ("Articolo Inserito ")
End Sub

Sub Clear()
Dim ctl As Control
For Each ctl In Me.Controls
Select Case TypeName(ctl)
Case "TextBox"
ctl.Text = ""
Case "ListBox"
ctl.RowSource = ""
Case "ComboBox"
ctl.Value = ""
End Select
Next ctl

End Sub

Private Sub cmdCerca_Click()

'dim the variables
Dim Crit As Range
Dim FindMe As Range
Dim DataSH As Worksheet
'error handler
On Error GoTo errHandler:
'set object variables
Set DataSH = Foglio6
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
'///////////////////////////////////////////
'if header is selected add the criteria
If Me.cmdHeader.Value <> "All_Columns" Then
If Me.txtSearch = "" Then
DataSH.Range("Y9") = ""
Else
DataSH.Range("Y9") = "*" & Me.txtSearch.Value & "*"
End If
End If
'//////////////////////////////////////////
'if all columns is selected
If Me.cmdHeader.Value = "All_Columns" Then
'find the value in the column
Set FindMe = DataSH.Range("C8:U30000").Find(What:=txtSearch, LookIn:=xlValues, _
LookAt:=xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, _
MatchCase:=False, SearchFormat:=False)
'variable for criteria header
Set Crit = DataSH.Cells(18, FindMe.Column)
'if no criteria is added to the search
If Me.txtSearch = "" Then
DataSH.Range("Y9") = ""
DataSH.Range("Y8") = ""
Else
'add values from the search
DataSH.Range("Y8") = Crit
If Crit = "ID" Then
DataSH.Range("Y9") = Me.txtSearch.Value
Else
DataSH.Range("Y9") = "*" & Me.txtSearch.Value & "*"
End If
'show in the userform the header that is added
Me.txtAllColumn = DataSH.Range("Y8").Value
End If
End If
'/////////////////////////////////////////
'unprotect all sheets
'Unprotect_All
'filter the ElencoGrid_Form

DataSH.Range("C9").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Range("Data!$Y$8:$Y$9"), CopyToRange:=Range("Data!$AA$8:$AS$8"), _
Unique:=False
'add the dynamic data to the listbox
lstEmployee.RowSource = DataSH.Range("outdata").Address(external:=True)
'protect all sheets
'Protect_All
'error handler
On Error GoTo 0
Exit Sub
errHandler:
'Protect all sheets
'Protect_All
'if error occurs then show me exactly where the error occurs
MsgBox "Nessuna corrispondenza trovata per " & txtSearch.Text
'clear the listbox if no match is found
Me.lstEmployee.RowSource = ""
Exit Sub
End Sub

Private Sub cmdClear_Click()

'clear all controls
Clear

End Sub



Private Sub cmdclose_Click()
'close the form
    Unload Me
    ThisWorkbook.Saved = True
    Application.Quit
   

End Sub
    
    


Private Sub cmdDelete_Click()
'declare the variables
Dim findvalue As Range
Dim cDelete As VbMsgBoxResult
Dim cNum As Integer
Dim DataSH As Worksheet
Set DataSH = Foglio6
Dim X As Integer
'error statement
On Error GoTo errHandler:
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
'check for values
If Emp1.Value = "" Or Emp2.Value = "" Then
MsgBox "Non ci sono dati da cancellare"
Exit Sub
End If
'give the user a chance to change their mind
cDelete = MsgBox("Sei sicuro di voler eliminare questo Articolo", _
vbYesNo + vbDefaultButton2, "Sei sicuro????")
If cDelete = vbYes Then
'find the row
Set findvalue = DataSH.Range("C:C").Find(What:=Me.Emp1.Value, _
LookIn:=xlValues, LookAt:=xlWhole)
'delete the entire row
findvalue.EntireRow.Delete
End If
'clear the controls
cNum = 7
For X = 1 To cNum
Me.Controls("Emp" & X).Value = ""
Next
'unprotect all sheets for the advanced filter
'Unprotect_All
'filter the data
DataSH.Range("C8").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Range("ElencoGrid_Form!$Y$8:$Y$9"), CopyToRange:=Range("ElencoGrid_Form!$AA$8:$AS$8"), _
Unique:=False
'if no data exists then clear the rowsource
If DataSH.Range("AA9").Value = "" Then
lstEmployee.RowSource = ""
Else
'add the filtered data to the rowsource
lstEmployee.RowSource = DataSH.Range("outdata").Address(external:=True)
End If
'sort the data by "Surname"
DataSH.Select
With DataSH
.Range("C9:U10000").Sort Key1:=Range("D9"), Order1:=xlAscending, Header:=xlGuess
End With
'Protect all sheets
'Protect_All
'return to sheet
Foglio2.Select
'error block
On Error GoTo 0
Exit Sub
errHandler:
'Protect all sheets if error occurs
'Protect_All
'show error information in a messagebox
MsgBox "Eliminato !!! "


End Sub

Private Sub cmdEdit_Click()
'declare the variables
Dim findvalue As Range
Dim cNum As Integer
Dim DataSH As Worksheet
'error handling
On Error GoTo errHandler:
'hold in memory and stop screen flicker
Application.ScreenUpdating = False
Set DataSH = Foglio6
'check for values
If Emp1.Value = "" Or Emp2.Value = "" Then
MsgBox "Non ci sono Dati da Modificare"
Exit Sub
End If
'clear the listbox
lstEmployee.RowSource = ""
'find the row to edit
Set findvalue = DataSH.Range("C:C"). _
Find(What:=Me.Emp1.Value, LookIn:=xlValues, LookAt:=xlWhole)
'update the values
findvalue = Emp1.Value
findvalue.Offset(0, 1) = Emp2.Value
findvalue.Offset(0, 2) = Emp3.Value
findvalue.Offset(0, 3) = Emp4.Value
findvalue.Offset(0, 4) = Emp5.Value
findvalue.Offset(0, 5) = Emp6.Value
findvalue.Offset(0, 6) = Emp7.Value
findvalue.Offset(0, 7) = Emp8.Value
findvalue.Offset(0, 8) = Emp9.Value


'unprotect the worksheets for the advanced filter
'Unprotect_All
'filter the data
DataSH.Range("C8").CurrentRegion.AdvancedFilter Action:=xlFilterCopy, _
CriteriaRange:=Range("ElencoGrid_Form!$Y$8:$Y$9"), CopyToRange:=Range("ElencoGrid_Form!$AA$8:$AS$8"), _
Unique:=False
'if no data exists then clear the rowsource
If DataSH.Range("AA9").Value = "" Then
lstEmployee.RowSource = ""
Else
'add the filtered data to the rowsource
lstEmployee.RowSource = DataSH.Range("outdata").Address(external:=True)
End If
'return to sheet
Foglio6.Select
'Protect all sheets
'Protect_All
'error block
On Error GoTo 0
Exit Sub
errHandler:
'Protect all sheets
'Protect_All

'show error information in a messagebox
MsgBox "Modificato con successo"
End Sub




Private Sub cmdHeader_Change()
'dim the variable
Dim DataSH As Worksheet
'set the variable
Set DataSH = Foglio5
'establish the condition for "All_Columns"
If Me.cmdHeader.Value = "All_Columns" Then
DataSH.Range("Y9") = ""
Else
'clear the textbox
Me.txtAllColumn = ""
'add the criteria header to the sheet
DataSH.Range("Y8") = Me.cmdHeader.Value
'clear any existing criteria
DataSH.Range("Y9") = ""
End If
End Sub

Private Sub cmdClearme_Click()
Clear
End Sub










Private Sub Image1_Click()

End Sub

Private Sub ComboBox9_Change()

End Sub

Private Sub CommandButton1_Click()
Unload Me
End Sub

Private Sub ComboBox1_Change()

End Sub

Private Sub CommandButton10_Click()
Unload Me
UserForm1.Show

End Sub

Private Sub CommandButton3_Click()

Dim Dpath As String
Dim FileN As Range, FolderPath As Range
Dim MyRange As Range
'turn off screen updating
Application.ScreenUpdating = False
Set FileN = Foglio5.Range("A1")
Set FolderPath = Foglio5.Range("B2")
Dpath = FolderPath & FileN & "   " & Format(Now, "yyyy-mm-dd hh-mm")  'change your path do not forget the last backslash
'set the named range for the PDF
 With Foglio5
        .Range("C8:U" & Cells(Rows.Count, "C").End(xlUp).Row).Name = "Mola19"
    End With
'set range
Set MyRange = Foglio5.Range("Mola19")
Foglio5.PageSetup.PrintArea = "Mola19"
'create the PDF
On Error Resume Next
MyRange.ExportAsFixedFormat Type:=xlTypePDF, Filename:=Dpath, Quality:=xlQualityStandard, _
IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True
'error handler
On Error GoTo 0
'clear the page breaks
ActiveSheet.DisplayPageBreaks = False
Application.ScreenUpdating = False

End Sub

Private Sub CommandButton2_Click()

With Me.lstEmployee
        If .ListIndex > -1 Then
            Sheets(Emp1.Value).Activate
        End If
    End With

End Sub


Private Sub CommandButton4_Click()

Emp8.Value = Val(Emp8.Text) - Val(TextBox21.Text)
Emp8.Value = Val(Emp8.Text) + Val(TextBox20.Text)



End Sub

Private Sub CommandButton6_Click()



'ListBox1.ColumnCount = 20
'ListBox1.RowSource = "A8:T2000"

LoadLB1

End Sub
Private Sub LoadLB1() 'carica Listbox1 coi valori in tabella
    With Me.ListBox1
        .Clear 'cancella il contenuto
        .ColumnCount = 20 'modifica secondo necessit|fffd|
        .ColumnWidths = "60;60;60;60;45;95;105;95;95;105;105;80;80;80;80;80;80;80;80;80" 'idem
        .List = Tabella1.DataBodyRange.Value 'carica la tabella nella ListBox
    End With

End Sub

Private Sub CommandButton5_Click()

End Sub

Private Sub CommandButton7_Click()
'Clear the userform
Clear2
'clear the rowsourse
Clearme
'clear the listbox
Me.lstData.RowSource = ""


End Sub

Private Sub CommandButton8_Click()

Dim ws As Worksheet
'set worksheet variable
Set ws = Foglio5
'send the values to the worksheet
With ws
.Range("AA9").Value = Me.ComboBox18.Value
.Range("AB9").Value = Me.ComboBox19.Value
.Range("AC9").Value = Me.ComboBox20.Value
.Range("AD9").Value = Me.ComboBox21.Value
.Range("AE9").Value = Me.ComboBox22.Value
.Range("AF9").Value = Me.ComboBox23.Value
.Range("AG9").Value = Me.ComboBox24.Value
.Range("AH9").Value = Me.ComboBox25.Value
.Range("AI9").Value = Me.ComboBox26.Value
End With
'run the advanced filter
Filterme2
'add the named range to the rowsource
If ws.Range("C8").Value = "" Then
Me.lstEmployee.RowSource = ""
MsgBox "No matching data"
Else
Me.lstEmployee.RowSource = "Mola16"
End If

End Sub

Private Sub CommandButton9_Click()
    
    
  SalvaDati.Show
  

End Sub

Private Sub Emp1_Change()

End Sub

Private Sub Emp10_GotFocus()
Select Case ActiveCell.Interior.ColorIndex
        Case 6
            Emp10.BackColor = RGB(255, 255, 0)     '     Giallo
        Case 44
            Emp10.BackColor = RGB(255, 204, 0)     '     Oro
        Case 3
            Emp10.BackColor = RGB(255, 0, 0)       '     Rosso
    End Select
End Sub


Private Sub Label1_Click()

End Sub


Private Sub Label10_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 6)
    End If
Next i
MsgBox " Totale PREVISTI |fffd| " & Tot
End Sub




Private Sub Label11_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 7)
    End If
Next i
MsgBox " Totale Arrivati |fffd| " & Tot
End Sub

Private Sub Label12_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 8)
    End If
Next i
MsgBox " Totale Scaricati |fffd| " & Tot
End Sub

Private Sub Label15_Click()

End Sub

Private Sub Label3_Click()

End Sub

Private Sub Label38_Click()

End Sub

Private Sub Label4_Click()

End Sub

Private Sub Label44_Click()

End Sub

Private Sub Label49_Click()

End Sub

Private Sub lstData_Click()

End Sub

Private Sub Label59_Click()

End Sub

Private Sub Label66_Click()

End Sub

Private Sub Label74_Click()

End Sub

Private Sub Label8_Click()
Dim Tot As Double
Dim i As Integer

Tot = 0
For i = 1 To lstEmployee.ListCount
    If lstEmployee.Selected(i - 1) = True Then
        Tot = Tot + lstEmployee.List(i - 1, 9)
    End If
Next i
MsgBox " Totale Magazzino |fffd| " & Tot
End Sub

Private Sub lstEmployee_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
'dim the variables
Dim i As Integer
On Error Resume Next
'find the selected list item
i = Me.lstEmployee.ListIndex
'add the values to the text boxes
Me.Emp1.Value = Me.lstEmployee.Column(0, i)
Me.Emp2.Value = Me.lstEmployee.Column(1, i)
Me.Emp3.Value = Me.lstEmployee.Column(2, i)
Me.Emp4.Value = Me.lstEmployee.Column(3, i)
Me.Emp5.Value = Me.lstEmployee.Column(4, i)
Me.Emp6.Value = Me.lstEmployee.Column(5, i)
Me.Emp7.Value = Me.lstEmployee.Column(6, i)
Me.Emp8.Value = Me.lstEmployee.Column(7, i)
Me.Emp9.Value = Me.lstEmployee.Column(8, i)


  If Val(Emp8) <= Val(Emp6) Then
        Emp8.BackColor = &HFF&    'rosso
    
    
        
        Else
        Emp8.BackColor = &HFF40&    'verde
        
      
        
    End If
    
    
        
      
        
    
    


On Error GoTo 0

End Sub

Private Sub MultiPage1_Change()

End Sub




Private Sub TextBox4_Change()

End Sub

Private Sub TextBox8_Change()

End Sub

Private Sub TxtSearch_Change()

End Sub
Sub Clear2()
'clear the values form the userform
With Me
.ComboBox9.Value = ""
.ComboBox10.Value = ""
.ComboBox11.Value = ""
.ComboBox12.Value = ""
.ComboBox13.Value = ""
.ComboBox14.Value = ""
.ComboBox15.Value = ""
.ComboBox16.Value = ""
.ComboBox17.Value = ""
End With

End Sub

Private Sub objResizer_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Button = 1 Then
LeftResizePos = X
TopResizePos = Y
End If

End Sub


Private Sub objResizer_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

If Button = 1 Then
With objResizer
.Move .Left + X - LeftResizePos, .Top + Y - TopResizePos
Me.Width = Me.Width + X - LeftResizePos
Me.Height = Me.Height + Y - TopResizePos
.Left = Me.InsideWidth - .Width
.Top = Me.InsideHeight - .Height
End With
End If
End Sub

Private Sub TextBox1_Change()

End Sub

Private Sub TextBox21_Change()

End Sub

Private Sub UserForm_Click()

End Sub

Private Sub UserForm_Initialize()

Dim i As Integer
Dim ControlOnForm As Object

Set objResizer = Me.Controls.Add("Forms.label.1", "MResize", True)
With objResizer
.Caption = Chr(111)
.Font.Name = "Marlett"
.Font.Charset = 2
.Font.Size = 14
.BackStyle = fmBackStyleTransparent
.AutoSize = True
.ForeColor = RGB(100, 100, 100)
.MousePointer = fmMousePointerSizeNESW
.ZOrder
.Top = Me.InsideHeight - .Height
.Left = Me.InsideWidth - .Width
End With

WidthRatio = 1
HeightRatio = 1
OldWidth = Me.Width
OldHeight = Me.Height
Me.Caption = "WithRatio=" & WidthRatio & " HeightRatio=" & HeightRatio

For Each ControlOnForm In Me.Controls
If ControlOnForm.Name <> "MResizer" Then
With ControlOnForm

       ReDim Preserve TopArray(i)
       ReDim Preserve LeftArray(i)
       ReDim Preserve WidthArray(i)
       ReDim Preserve HeightArray(i)
       ReDim Preserve FontArray(i)
       
       TopArray(i) = .Top
       LeftArray(i) = .Left
       WidthArray(i) = .Width
       HeightArray(i) = .Height
       On Error Resume Next
              FontArray(i) = .Font.Size
              On Error GoTo 0
              
       i = i + 1
       End With
       End If
       Next ControlOnForm
       




End Sub


Private Sub UserForm_Resize()

Dim ControlOnForm As Object
Dim i As Integer
WidthRatio = Me.Width / OldWidth
HeightRatio = Me.Height / OldHeight
Me.Caption = "WithRatio=" & WidthRatio & " HeightRatio=" & HeightRatio

For Each ControlOnForm In Me.Controls
If ControlOnForm.Name <> "MResizer" Then
With ControlOnForm

.Top = TopArray(i) * HeightRatio
.Left = LeftArray(i) * WidthRatio
.Width = WidthArray(i) * WidthRatio
.Height = HeightArray(i) * HeightRatio
On Error Resume Next
.Font.Size = FontArray(i) * HeightRatio
On Error GoTo 0

i = i + 1

End With
End If
Next ControlOnForm
Me.Repaint




End Sub

Private Sub UserForm_QueryClose _
(Cancel As Integer, CloseMode As Integer)
'   Prevents use of the Close button
If CloseMode = vbFormControlMenu Then
MsgBox "pulsante Chiudi non funziona."
Cancel = True
End If
End Sub



Attribute VB_Name = "Questa_cartella_di_lavoro"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
On Error Resume Next
Foglio2.Select
Application.Visible = False
ActiveWindow.DisplayWorkbookTabs = True
 Showme
On Error GoTo 0
End Sub

Attribute VB_Name = "SalvaDati"
Attribute VB_Base = "0{59B89777-F5F1-44C7-A959-FAB22525CE89}{134B7A2D-45E3-45D7-AE41-DB8D10E92164}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
 Option Explicit
Private Trial As Long

Private Sub CommandButton1_Click()
'Declare the variables
Dim AddData As Range
Dim user As Variant
Dim Code As Variant
Dim result As Integer
Dim TitleStr As String
Dim Current As Range
Dim PName As Variant
Dim Msg As VbMsgBoxResult
'Variables

Code = Me.TextBox2.Value
TitleStr = "Password check"
result = 0
Set Current = Sheet2.Range("K2")

'Destination location for login storage
Set AddData = Sheet2.Cells(Rows.Count, 2).End(xlUp).Offset(1, 0)
'Check the login and passcode for the administrator
If Code = 120675 Then
MsgBox "Salvataggio : |fffd|   " & user & " " & vbCrLf _
& " Sei Sicuro di Salvare ?" & vbCrLf _
& " Salva !!! "
'record user login
AddData.Value = user
AddData.Offset(0, 1).Value = Now
'send the username to the worksheet
Current.Value = user
'unoad this form
Unload Me
Application.Quit

Exit Sub
End If

If result = 0 Then
'Increment error variable
Trial = Trial + 1
'Less then 3 error message
If Trial < 3 Then Msg = MsgBox("Password errata, riprova", vbExclamation + vbOKOnly, TitleStr)
Me.TextBox2.SetFocus
'Last chance and close the workbook
If Trial = 3 Then
Msg = MsgBox("Password errata, il modulo si chiuder|fffd| ...", vbCritical + vbOKOnly, TitleStr)
ActiveWorkbook.Close False
End If
End If
Exit Sub
End Sub

Private Sub CommandButton2_Click()
  Unload Me
    ThisWorkbook.Saved = True
    Application.Quit
   
End Sub

Private Sub Label2_Click()

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If CloseMode = vbFormControlMenu Then
    Cancel = True
    MsgBox "Inserire Password"
End If
End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{AC9A72AB-93ED-4ADA-96B9-213018AA0529}{821D8E81-C93D-4DFF-A5BA-FCAAF5948D3E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Option Explicit
Public WithEvents objResizer As MSForms.Label
Attribute objResizer.VB_VarHelpID = -1
Dim LeftResizePos As Single
Dim TopResizePos As Single
Dim WidthRatio As Single
Dim HeightRatio As Single
Dim OldWidth As Double
Dim OldHeight As Double
Dim TopArray() As Single
Dim LeftArray() As Single
Dim WidthArray() As Single
Dim HeightArray() As Single
Dim FontArray() As Single


Private Sub CommandButton1_Click()

Unload Me
   Employee2.Show
   
  
End Sub

Private Sub CommandButton2_Click()


Unload Me
    Molatura.Show
    
 
End Sub

Private Sub CommandButton3_Click()

 
 Unload Me
   Attrezzature.Show

End Sub

Private Sub CommandButton4_Click()


Unload Me
    ThisWorkbook.Saved = True
ThisWorkbook.Close




End Sub

Private Sub CommandButton5_Click()
 Unload Me
   Lamiere.Show
   
End Sub

Private Sub CommandButton6_Click()
Unload Me
   DistintaM.Show

End Sub

Private Sub Label2_Click()

End Sub

Private Sub objResizer_Click()

End Sub

Private Sub objResizer_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Button = 1 Then
LeftResizePos = X
TopResizePos = Y
End If

End Sub


Private Sub objResizer_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

If Button = 1 Then
With objResizer
.Move .Left + X - LeftResizePos, .Top + Y - TopResizePos
Me.Width = Me.Width + X - LeftResizePos
Me.Height = Me.Height + Y - TopResizePos
.Left = Me.InsideWidth - .Width
.Top = Me.InsideHeight - .Height
End With
End If
End Sub


Private Sub UserForm_Click()

End Sub

Private Sub UserForm_Initialize()

Dim i As Integer
Dim ControlOnForm As Object

Set objResizer = Me.Controls.Add("Forms.label.1", "MResize", True)
With objResizer
.Caption = Chr(111)
.Font.Name = "Marlett"
.Font.Charset = 2
.Font.Size = 14
.BackStyle = fmBackStyleTransparent
.AutoSize = True
.ForeColor = RGB(100, 100, 100)
.MousePointer = fmMousePointerSizeNESW
.ZOrder
.Top = Me.InsideHeight - .Height
.Left = Me.InsideWidth - .Width
End With

WidthRatio = 1
HeightRatio = 1
OldWidth = Me.Width
OldHeight = Me.Height
Me.Caption = "WithRatio=" & WidthRatio & " HeightRatio=" & HeightRatio

For Each ControlOnForm In Me.Controls
If ControlOnForm.Name <> "MResizer" Then
With ControlOnForm

       ReDim Preserve TopArray(i)
       ReDim Preserve LeftArray(i)
       ReDim Preserve WidthArray(i)
       ReDim Preserve HeightArray(i)
       ReDim Preserve FontArray(i)
       
       TopArray(i) = .Top
       LeftArray(i) = .Left
       WidthArray(i) = .Width
       HeightArray(i) = .Height
       On Error Resume Next
              FontArray(i) = .Font.Size
              On Error GoTo 0
              
       i = i + 1
       End With
       End If
       Next ControlOnForm
       




End Sub


Private Sub UserForm_Resize()

Dim ControlOnForm As Object
Dim i As Integer
WidthRatio = Me.Width / OldWidth
HeightRatio = Me.Height / OldHeight
Me.Caption = "WithRatio=" & WidthRatio & " HeightRatio=" & HeightRatio

For Each ControlOnForm In Me.Controls
If ControlOnForm.Name <> "MResizer" Then
With ControlOnForm

.Top = TopArray(i) * HeightRatio
.Left = LeftArray(i) * WidthRatio
.Width = WidthArray(i) * WidthRatio
.Height = HeightArray(i) * HeightRatio
On Error Resume Next
.Font.Size = FontArray(i) * HeightRatio
On Error GoTo 0

i = i + 1

End With
End If
Next ControlOnForm
Me.Repaint




End Sub


Attribute VB_Name = "UserForm2"
Attribute VB_Base = "0{F140209D-32C8-4306-82C6-D7F1A83707AE}{767C479C-4CD0-4258-8B14-E49A3FC13C0A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False









Private Sub cmdClear_Click()
Clear

End Sub

Private Sub ComboBox1_Change()

End Sub

Private Sub ComboBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton14_Click

End Sub

Private Sub ComboBox1_DropButtonClick()
Dim ws As Worksheet
'set worksheet variable
Set ws = Foglio16
'send the values to the worksheet
With ws

.Range("I9").Value = Me.ComboBox1.Value

End With
CommandButton14_Click


End Sub

Private Sub ComboBox2_Change()

End Sub

Private Sub ComboBox2_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton14_Click

End Sub

Private Sub ComboBox2_DropButtonClick()
Dim ws As Worksheet
'set worksheet variable
Set ws = Foglio16
'send the values to the worksheet
With ws

.Range("K9").Value = Me.ComboBox2.Value

End With
CommandButton14_Click



End Sub

Private Sub ComboBox3_Change()

End Sub

Private Sub ComboBox3_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton14_Click

End Sub

Private Sub ComboBox3_DropButtonClick()


CommandButton14_Click


End Sub

Private Sub ComboBox4_Change()

End Sub

Private Sub ComboBox4_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton14_Click

End Sub

Private Sub ComboBox4_DropButtonClick()
CommandButton14_Click



End Sub

Private Sub ComboBox5_Change()

End Sub

Private Sub ComboBox5_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton14_Click


End Sub

Private Sub ComboBox5_DropButtonClick()
CommandButton14_Click


End Sub

Private Sub ComboBox6_Change()

End Sub

Private Sub ComboBox6_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
CommandButton14_Click

End Sub

Private Sub ComboBox6_DropButtonClick()
CommandButton14_Click


End Sub

Private Sub CommandButton1_Click()
Unload Me
Employee2.Show

End Sub



Private Sub CommandButton12_Click()

End Sub

Private Sub CommandButton13_Click()
Dim ws As Worksheet
Dim strIndirizzo As String
Dim myFile As Variant
Dim strFile As String
On Error GoTo errHandler

Set ws = Foglio14


'apre la finestra di dialogo per il salvataggio dei file
'la cartella di default |fffd| la stessa della cartella di excel
strFile = Replace(Replace(ws.Name, " ", ""), ".", "_") _
        & "_" _
        & Format(Now(), "yyyy-mm-dd\_hh-mm") _
        & ".pdf"
strFile = ThisWorkbook.Path & "\" & strFile

myFile = Application.GetSaveAsFilename _
        (InitialFileName:=strFile, _
          FileFilter:="PDF Files (*.pdf), *.pdf", _
          Title:="Seleziona la cartella e inserisci il nome del file da salvare")

If myFile <> False Then
        ws.ExportAsFixedFormat _
          Type:=xlTypePDF, _
          Filename:=myFile, _
          Quality:=xlQualityStandard, _
          IncludeDocProperties:=True, _
          IgnorePrintAreas:=False, _
          OpenAfterPublish:=True
          

        MsgBox "Il file PDF |fffd| stato salvato."
End If

exitHandler:
        Exit Sub
errHandler:
        MsgBox "Non ho potuto salvare il file PDF"
Resume exitHandler


End Sub

Private Sub CommandButton14_Click()
Dim ws As Worksheet
'set worksheet variable
Set ws = Foglio14
'send the values to the worksheet
With ws


.Range("AB9").Value = Me.ComboBox1.Value
.Range("AC9").Value = Me.ComboBox2.Value
.Range("AD9").Value = Me.ComboBox3.Value
.Range("AE9").Value = Me.ComboBox4.Value
.Range("AA9").Value = Me.ComboBox5.Value
.Range("AG9").Value = Me.ComboBox6.Value




End With
'run the advanced filter
Macro3
'add the named range to the rowsource
If ws.Range("A8").Value = "" Then
Me.ListBox1.RowSource = ""
MsgBox "No matching data"
Else
Me.ListBox1.RowSource = "FiltroInter2"


End If

End Sub

Private Sub CommandButton15_Click()
Unload Me
UserForm3.Show

End Sub

Private Sub CommandButton17_Click()
Workbook_Open
End Sub

Private Sub CommandButton18_Click()
Macro12


Dim ws As Worksheet
Dim strIndirizzo As String
Dim myFile As Variant
Dim strFile As String
On Error GoTo errHandler

 ActiveWindow.SmallScroll Down:=-12
    ActiveSheet.Range("$A$7:$T$377").AutoFilter Field:=11, Criteria1:=RGB(255, _
        199, 206), Operator:=xlFilterCellColor
    ActiveWindow.SmallScroll Down:=-12
    Range("A8:T402").Select
    Selection.Copy
    Sheets("SottoScorta").Select
    ActiveWindow.SmallScroll Down:=-15
    Range("A7:N7").Select
    Application.CutCopyMode = False
    Selection.AutoFilter
    Range("A8").Select
    Sheets("Totali").Select
    ActiveWindow.SmallScroll Down:=-24
    Selection.Copy
    Sheets("SottoScorta").Select
    ActiveWindow.SmallScroll Down:=-9
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Sheets("Totali").Select
    Application.CutCopyMode = False
    Sheets("SottoScorta").Select

Set ws = Foglio26


'apre la finestra di dialogo per il salvataggio dei file
'la cartella di default |fffd| la stessa della cartella di excel
strFile = Replace(Replace(ws.Name, " ", ""), ".", "_") _
        & "_" _
        & Format(Now(), "yyyy-mm-dd\_hh-mm") _
        & ".pdf"
strFile = ThisWorkbook.Path & "\" & strFile

myFile = Application.GetSaveAsFilename _
        (InitialFileName:=strFile, _
          FileFilter:="PDF Files (*.pdf), *.pdf", _
          Title:="Seleziona la cartella e inserisci il nome del file da salvare")

If myFile <> False Then
        ws.ExportAsFixedFormat _
          Type:=xlTypePDF, _
          Filename:=myFile, _
          Quality:=xlQualityStandard, _
          IncludeDocProperties:=True, _
          IgnorePrintAreas:=False, _
          OpenAfterPublish:=True
          

        MsgBox "Il file PDF |fffd| stato salvato."
End If

exitHandler:
        Exit Sub
errHandler:
        MsgBox "Non ho potuto salvare il file PDF"
Resume exitHandler
End Sub

Private Sub Label1_Click()

End Sub

Private Sub Label2_Click()

End Sub

Private Sub Label3_Click()

End Sub

Private Sub Label4_Click()

End Sub

Private Sub Label5_Click()

End Sub

Private Sub Label6_Click()

End Sub

Private Sub ListBox1_Click()


End Sub

Private Sub ListView1_BeforeLabelEdit(Cancel As Integer)

End Sub

Private Sub UserForm_QueryClose _
(Cancel As Integer, CloseMode As Integer)
'   Prevents use of the Close button
If CloseMode = vbFormControlMenu Then
MsgBox "pulsante Chiudi non funziona."
Cancel = True
End If
End Sub


Sub Clear()
Dim ctl As Control
For Each ctl In Me.Controls
Select Case TypeName(ctl)
Case "TextBox"
ctl.Text = ""
Case "ListBox"
ctl.RowSource = ""
Case "ComboBox"
ctl.Value = ""
End Select
Next ctl

End Sub




Attribute VB_Name = "UserForm3"
Attribute VB_Base = "0{2A8F3D0E-54C6-40E6-8EB1-451AC6E10FD5}{1359AADF-45AA-48F5-8A2F-82884F9D7543}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
Dim ws As Worksheet
'set worksheet variable
Set ws = Foglio25
'send the values to the worksheet
With ws

.Range("D4").Value = Me.ComboBox1.Value
.Range("F4").Value = Me.ComboBox2.Value

End With





End Sub

Private Sub CommandButton2_Click()
Unload Me
End Sub

Private Sub CommandButton13_Click()
Dim ws As Worksheet
Dim strIndirizzo As String
Dim myFile As Variant
Dim strFile As String
On Error GoTo errHandler

Set ws = Foglio25

'apre la finestra di dialogo per il salvataggio dei file
'la cartella di default |fffd| la stessa della cartella di excel
strFile = Replace(Replace(ws.Name, " ", ""), ".", "_") _
        & "_" _
        & Format(Now(), "yyyy-mm-dd\_hh-mm") _
        & ".pdf"
strFile = ThisWorkbook.Path & "\" & strFile

myFile = Application.GetSaveAsFilename _
        (InitialFileName:=strFile, _
          FileFilter:="PDF Files (*.pdf), *.pdf", _
          Title:="Seleziona la cartella e inserisci il nome del file da salvare")

If myFile <> False Then
        ws.ExportAsFixedFormat _
          Type:=xlTypePDF, _
          Filename:=myFile, _
          Quality:=xlQualityStandard, _
          IncludeDocProperties:=True, _
          IgnorePrintAreas:=False, _
          OpenAfterPublish:=True
          

        MsgBox "Il file PDF |fffd| stato salvato."
End If

exitHandler:
        Exit Sub
errHandler:
        MsgBox "Non ho potuto salvare il file PDF"
Resume exitHandler

End Sub

Private Sub CommandButton14_Click()
Unload Me
UserForm2.Show

End Sub

Private Sub CommandButton17_Click()
Workbook_Open
End Sub

Private Sub CommandButton18_Click()
Macro12


Dim ws As Worksheet
Dim strIndirizzo As String
Dim myFile As Variant
Dim strFile As String
On Error GoTo errHandler

 ActiveWindow.SmallScroll Down:=-12
    ActiveSheet.Range("$A$7:$T$377").AutoFilter Field:=11, Criteria1:=RGB(255, _
        199, 206), Operator:=xlFilterCellColor
    ActiveWindow.SmallScroll Down:=-12
    Range("A8:T402").Select
    Selection.Copy
    Sheets("SottoScorta").Select
    ActiveWindow.SmallScroll Down:=-15
    Range("A7:N7").Select
    Application.CutCopyMode = False
    Selection.AutoFilter
    Range("A8").Select
    Sheets("Totali").Select
    ActiveWindow.SmallScroll Down:=-24
    Selection.Copy
    Sheets("SottoScorta").Select
    ActiveWindow.SmallScroll Down:=-9
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Sheets("Totali").Select
    Application.CutCopyMode = False
    Sheets("SottoScorta").Select

Set ws = Foglio26


'apre la finestra di dialogo per il salvataggio dei file
'la cartella di default |fffd| la stessa della cartella di excel
strFile = Replace(Replace(ws.Name, " ", ""), ".", "_") _
        & "_" _
        & Format(Now(), "yyyy-mm-dd\_hh-mm") _
        & ".pdf"
strFile = ThisWorkbook.Path & "\" & strFile

myFile = Application.GetSaveAsFilename _
        (InitialFileName:=strFile, _
          FileFilter:="PDF Files (*.pdf), *.pdf", _
          Title:="Seleziona la cartella e inserisci il nome del file da salvare")

If myFile <> False Then
        ws.ExportAsFixedFormat _
          Type:=xlTypePDF, _
          Filename:=myFile, _
          Quality:=xlQualityStandard, _
          IncludeDocProperties:=True, _
          IgnorePrintAreas:=False, _
          OpenAfterPublish:=True
          

        MsgBox "Il file PDF |fffd| stato salvato."
End If

exitHandler:
        Exit Sub
errHandler:
        MsgBox "Non ho potuto salvare il file PDF"
Resume exitHandler
End Sub

Private Sub CommandButton3_Click()
Unload Me
Employee2.Show
End Sub

Private Sub Label7_Click()

End Sub

Private Sub ListBox1_Click()

End Sub

Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)

End Sub
Attribute VB_Name = "frmLogin"
Attribute VB_Base = "0{DD571E30-2980-4D23-A7CE-E86EAD922539}{91C0397A-635E-42BF-9C71-F93A83EAE07F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



 Option Explicit
Private Trial As Long
Private Sub cmdCheck_Click()
'Declare the variables
Dim AddData As Range
Dim user As Variant
Dim Code As Variant
Dim result As Integer
Dim TitleStr As String
Dim Current As Range
Dim PName As Variant
Dim Msg As VbMsgBoxResult
'Variables
user = Me.txtUser.Value
Code = Me.txtPass.Value
TitleStr = "Password check"
result = 0
Set Current = Sheet2.Range("K2")
'Error handler
On Error GoTo errHandler:
'Destination location for login storage
Set AddData = Sheet2.Cells(Rows.Count, 2).End(xlUp).Offset(1, 0)
'Check the login and passcode for the administrator
If user = "Johnny" And Code = 120675 Then
MsgBox "Accesso Per : |fffd|   " & user & " " & vbCrLf _
& " Entrato con privilegi di amministratore" & vbCrLf _
& " pannello di controllo Automatico "
'record user login
AddData.Value = user
AddData.Offset(0, 1).Value = Now
'send the username to the worksheet
Current.Value = user
'unoad this form
Unload Me
'Show navigation form
frmSetup.Show
'End the procedure if conditions are meet
Exit Sub
End If
'Check user login with loop
If user <> "" And Code <> "" Then
For Each PName In Sheet2.Range("H2:H100")
'If PName = Code Then 'Use this for passcode text
If PName = CInt(Code) And PName.Offset(0, -1) = user Then ' Use this for passcode numbers only
MsgBox "Accesso Per : |fffd|   " & user & " " & vbCrLf _
& " Solo Lettura" & vbCrLf _
& " Non puoi Salvare ! "

'record user login
AddData.Value = user
AddData.Offset(0, 1).Value = Now
'Change variable if the condition is meet
result = 1
'Add usernmae to the worksheet
Current.Value = user
'Unload the form
Unload Me
'Show the navigation form
UserForm1.Show
Exit Sub
End If
Next PName
End If
' Next UName
'Check to see if an error occurred
If result = 0 Then
'Increment error variable
Trial = Trial + 1
'Less then 3 error message
If Trial < 3 Then Msg = MsgBox("Password errata, riprova", vbExclamation + vbOKOnly, TitleStr)
Me.txtUser.SetFocus
'Last chance and close the workbook
If Trial = 3 Then
Msg = MsgBox("Password errata, il modulo si chiuder|fffd| ...", vbCritical + vbOKOnly, TitleStr)
ActiveWorkbook.Close False
End If
End If
Exit Sub
'Error block
errHandler:
MsgBox "An Error has Occurred  " & vbCrLf & "Il numero di errore |fffd|:  " _
& Err.Number & vbCrLf & Err.Description & vbCrLf & _
"Si prega di avvisare l'amministratore J.P."
End Sub

Private Sub UserForm_QueryClose _
(Cancel As Integer, CloseMode As Integer)
'   Prevents use of the Close button
If CloseMode = vbFormControlMenu Then
MsgBox "pulsante Chiudi non funziona."
Cancel = True
End If
End Sub

Attribute VB_Name = "frmSetup"
Attribute VB_Base = "0{362F8BC7-A120-49DA-8C7E-7F35ED4542A2}{9F81A962-471A-450B-ACFD-B03997AC33C2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CommandButton1_Click()
 Unload Me
End Sub

Private Sub CommandButton2_Click()
Employee2.Show

End Sub

' InQuest injected base64 decoded content
' ~`ZrD

INQUEST-PP=macro
