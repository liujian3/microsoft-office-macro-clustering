Attribute VB_Name = "AbuHamoud1"

Public Ones(0 To 12) As String
Public Twos(2 To 9) As String
Public Threes(1 To 2) As String
Public Fours(1 To 3) As String
Public Sevens(1 To 3) As String
Public Tens(1 To 2) As String
Public Prepositions() As String
Public Decimals(1 To 3) As String


Public Function Main(|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|)
Dim lRange As Long
Dim lPosDecimal As Long
Dim sWhole As String, sDecimal As String

On Error Resume Next

LoadArrays
'|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd| = Forms![|fffd||fffd||fffd||fffd||fffd|1]![|fffd||fffd|84]
lRange = Len(|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|)

If lRange <> 0 Then
lPosDecimal = InStr(1, |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|, ".", vbTextCompare)
If lPosDecimal > 0 Then
sWhole = Mid(|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|, 1, lPosDecimal - 1)
sDecimal = Mid(|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|, lPosDecimal + 1)

sWhole = sLeftRemove(sWhole, "0")
sDecimal = sRightRemove(sDecimal, "0")

If InStr(sDecimal, ".") Then sDecimal = sFindReplace(sDecimal, ".", "")
If InStr(sWhole, ",") Then sWhole = sFindReplace(sWhole, ",", "")
If InStr(sWhole, "|fffd|") Then sWhole = sFindReplace(sWhole, "|fffd|", "")
If InStr(sDecimal, ",") Then sWhole = sFindReplace(sDecimal, ",", "")
If InStr(sDecimal, "|fffd|") Then sWhole = sFindReplace(sDecimal, "|fffd|", "")

If Len(sDecimal) > 9 And Len(sWhole) > 9 Then
MsgBox "Sorry:This addin does not support more than 9 digits for " & _
"whole and decimal portion of the number", vbOKOnly, "Number to Text"
Exit Function
End If
If Len(sWhole) > 9 Then
MsgBox "Sorry:This addin does not support more than 9 digits for " & _
"whole portion of the number", vbOKOnly, "Number to Text"
Exit Function
End If
If Len(sDecimal) > 9 Then
MsgBox "Sorry:This addin does not support more than 9 digits for " & _
"decimal portion of the number", vbOKOnly, "Number to Text"
Exit Function
End If

If sDecimal <> "" Then
If CLng(sDecimal) <> 0 Then
If sWhole <> "" Then
If CLng(sWhole) <> 0 Then
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd| = sNum2Text(CLng(sWhole)) & " " & Prepositions(1) & _
sDec2Text(sDecimal)
Else
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd| = sDec2Text(sDecimal)
End If
Else
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd| = sDec2Text(sDecimal)
End If
Else
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd| = sNum2Text(CLng(sWhole))
End If
Else
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd| = sNum2Text(CLng(sWhole))
End If

Else 'Only whole number
If InStr(sWhole, ",") Then sWhole = sFindReplace(sWhole, ",", "")
If InStr(sWhole, "|fffd|") Then sWhole = sFindReplace(sWhole, "|fffd|", "")
sWhole = |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|
sWhole = sLeftRemove(sWhole, "0")

If Len(sWhole) > 9 Then
MsgBox "Sorry:This addin does not support more than 9 digits for " & _
"whole portion of the number", vbOKOnly, "Number to Text"
Exit Function
End If

|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd| = sNum2Text(CLng(sWhole))
End If
End If
' MsgBox |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|
Main = |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|
End Function

Public Function sNum2Text(lNum As Long) As String
Dim sNum As String 'The number as string to pass as a vlaue name in the INI file
Dim I As Integer 'Loop counter to loop through all of the digits
Dim iUpperBound As Integer 'Represents # of digits in each group of 3 significant bits

On Error Resume Next

sNum = Trim$(CStr(lNum))
'Get rid of the zeros to the left

If (lNum >= 0) And (lNum <= 12) Then '0 through 12
sNum2Text = Ones(lNum)
ElseIf lNum Mod 10 = 0 And Len(sNum) = 2 Then '20,30,40,...,90
sNum2Text = Twos(CLng(Left(sNum, 1)))
ElseIf lNum > 12 And lNum < 20 Then '13 to 19
sNum2Text = Ones(CLng(Right(sNum, 1))) & " " & Ones(10)
ElseIf lNum Mod 10 > 0 And Len(sNum) = 2 Then '21,22,...29,31,32,33,...,99
sNum2Text = Ones(CLng(Right(sNum, 1))) & " " & Prepositions(1) & _
Twos(CLng(Left(sNum, 1)))
ElseIf (lNum = 100) Or (lNum = 200) Then '100,200
sNum2Text = Threes(CLng(Left(sNum, 1)))
ElseIf (lNum Mod 100) = 0 And Len(sNum) = 3 Then '300,400,500,...,900
sNum2Text = Ones(CLng(Left(sNum, 1))) & " " & Threes(1)
ElseIf lNum Mod 100 > 0 And Len(sNum) = 3 Then '101,102,103,...,199,201,...999
If Left(sNum, 1) <> "1" And Left(sNum, 1) <> "2" Then
sNum2Text = Ones(CLng(Left(sNum, 1))) & " " & Threes(1)
Else
sNum2Text = Threes(CLng(Left(sNum, 1)))
End If
If Right(sNum, 2) = "11" Or Right(sNum, 2) = "12" Then
sNum2Text = sNum2Text & " " & Prepositions(1) & Ones(CLng(Right(sNum, 2)))
ElseIf Mid(sNum, 2, 1) <> "0" And Mid(sNum, 2, 1) <> "1" And Right(sNum, 1) <> 0 Then
sNum2Text = sNum2Text & " " & Prepositions(1) & Ones(CLng(Right(sNum, 1))) & _
" " & Prepositions(1) & Twos(CLng(Mid(sNum, 2, 1)))
ElseIf Mid(sNum, 2, 1) <> "0" And Mid(sNum, 2, 1) <> "1" And Right(sNum, 1) = 0 Then
sNum2Text = sNum2Text & " " & Prepositions(1) & Twos(CLng(Mid(sNum, 2, 1)))
ElseIf Mid(sNum, 2, 1) = "1" Then
sNum2Text = sNum2Text & " " & Prepositions(1) & Ones(CLng(Right(sNum, 1))) & _
" " & Ones(10)
ElseIf Mid(sNum, 2, 1) = "0" Then
sNum2Text = sNum2Text & " " & Prepositions(1) & Ones(CLng(Right(sNum, 1)))
Else 'Right(sNum, 2) = "00"
sNum2Text = sNum2Text
End If


ElseIf Len(sNum) / 3 > 1 Then
Do Until Len(sNum) = 3
If Len(sNum) Mod 3 <> 0 Then
iUpperBound = Len(sNum) Mod 3
Else
iUpperBound = 3
End If
If (Len(sNum) / 3 > 2) And (Len(sNum) / 3 < 4) Then
'In the millions
If Mid(sNum, 1, iUpperBound) = "000" Then
Exit Do
ElseIf (Len(sNum) Mod 3 = 1) And (Left(sNum, 1) = "1" Or Left(sNum, 1) = "2") Then
sNum2Text = sNum2Text & Sevens(CLng(Left(sNum, 1))) & " " & Prepositions(1)
ElseIf (Len(sNum) Mod 3 = 1) And Left(sNum, 1) <> "1" And Left(sNum, 1) <> "2" Then
sNum2Text = sNum2Text & sNum2Text(CLng(Mid(sNum, 1, iUpperBound))) & _
" " & Sevens(3) & " " & Prepositions(1)
ElseIf (Len(sNum) Mod 3 = 2) And Left(sNum, 2) = "10" Then
sNum2Text = sNum2Text & sNum2Text(CLng(Mid(sNum, 1, iUpperBound))) & _
" " & Sevens(3) & " " & Prepositions(1)
Else
sNum2Text = sNum2Text & sNum2Text(CLng(Mid(sNum, 1, iUpperBound))) & _
" " & Sevens(1) & " " & Prepositions(1)
End If
ElseIf (Len(sNum) / 3 >= 1) And (Len(sNum) / 3 < 3) Then
'In the thousands
If Mid(sNum, 1, iUpperBound) = "000" Then
Exit Do
ElseIf (Len(sNum) Mod 3 = 1) And (Left(sNum, 1) = "1" Or Left(sNum, 1) = "2") Then
sNum2Text = sNum2Text & Fours(CLng(Left(sNum, 1))) & " " & Prepositions(1)
ElseIf (Len(sNum) Mod 3 = 1) And Left(sNum, 1) <> "1" And Left(sNum, 1) <> "2" Then
sNum2Text = sNum2Text & sNum2Text(CLng(Mid(sNum, 1, iUpperBound))) & _
" " & Fours(3) & " " & Prepositions(1)
ElseIf (Len(sNum) Mod 3 = 2) And Left(sNum, 2) = "10" Then
sNum2Text = sNum2Text & sNum2Text(CLng(Mid(sNum, 1, iUpperBound))) & _
" " & Fours(3) & " " & Prepositions(1)
Else
sNum2Text = sNum2Text & sNum2Text(CLng(Mid(sNum, 1, iUpperBound))) & _
" " & Fours(1) & " " & Prepositions(1)
End If
End If
sNum = Mid(sNum, iUpperBound + 1)
lNum = CLng(sNum)
'Make sure the least significant 6 digits are not zero

If sNum = String(Len(sNum), "0") Then
sNum2Text = Left(sNum2Text, Len(sNum2Text) - 1)
Exit Function
End If
Loop

'Make sure the least significant 3 digits are not zero
If sNum <> String(Len(sNum), "0") Then
sNum2Text = sNum2Text & sNum2Text(lNum)
Else 'get ride of the AND
sNum2Text = Left(sNum2Text, Len(sNum2Text) - 1)
End If
End If

End Function


Public Function sDec2Text(sNum As String) As String

Dim lLen As Long
On Error Resume Next

Do While Right(sNum, 1) = "0"
sNum = Left(sNum, Len(Trim(sNum)) - 1)
Loop

lLen = Len(Trim(sNum))

If lLen = 0 Then
sDec2Text = ""
Exit Function
ElseIf lLen = 1 Then
Select Case sNum
Case "0"
sDec2Text = ""
Case "1"
sDec2Text = Decimals(1)
Case "2"
sDec2Text = Decimals(2)
Case Else
sDec2Text = sNum2Text(CLng(Trim(sNum))) & " " & Decimals(3)
End Select
ElseIf lLen = 2 Then
sDec2Text = sNum2Text(CLng(Trim(sNum))) & " " & Prepositions(2) & _
sNum2Text("1" & String(lLen, "0"))
ElseIf lLen = 9 Then
sDec2Text = sNum2Text(CLng(Trim(sNum))) & " " & Prepositions(3) & _
Tens(1)
Else
sDec2Text = sNum2Text(CLng(Trim(sNum))) & " " & Prepositions(3) & _
sNum2Text("1" & String(lLen, "0"))
End If

End Function


Public Sub LoadArrays()

'Load the arrays with values

'Ones
Ones(0) = "|fffd||fffd||fffd|"
Ones(1) = "|fffd||fffd||fffd||fffd|"
Ones(2) = "|fffd||fffd||fffd||fffd||fffd|"
Ones(3) = "|fffd||fffd||fffd||fffd||fffd|"
Ones(4) = "|fffd||fffd||fffd||fffd||fffd|"
Ones(5) = "|fffd||fffd||fffd||fffd|"
Ones(6) = "|fffd||fffd||fffd|"
Ones(7) = "|fffd||fffd||fffd||fffd|"
Ones(8) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
Ones(9) = "|fffd||fffd||fffd||fffd|"
Ones(10) = "|fffd||fffd||fffd||fffd|"
Ones(11) = "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd|"
Ones(12) = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|"

'Twos
Twos(2) = "|fffd||fffd||fffd||fffd||fffd|"
Twos(3) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
Twos(4) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
Twos(5) = "|fffd||fffd||fffd||fffd||fffd|"
Twos(6) = "|fffd||fffd||fffd||fffd|"
Twos(7) = "|fffd||fffd||fffd||fffd||fffd|"
Twos(8) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
Twos(9) = "|fffd||fffd||fffd||fffd||fffd|"

'Threes
Threes(1) = "|fffd||fffd||fffd||fffd|"
Threes(2) = "|fffd||fffd||fffd||fffd||fffd||fffd|"

'Fours
Fours(1) = "|fffd||fffd||fffd|"
Fours(2) = "|fffd||fffd||fffd||fffd||fffd|"
Fours(3) = "|fffd||fffd||fffd||fffd|"

'Sevens
Sevens(1) = "|fffd||fffd||fffd||fffd||fffd|"
Sevens(2) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Sevens(3) = "|fffd||fffd||fffd||fffd||fffd||fffd|"

'Tens
Tens(1) = "|fffd||fffd||fffd||fffd||fffd|"
Tens(2) = "|fffd||fffd||fffd||fffd||fffd||fffd|"

'Prepositions
ReDim Prepositions(1 To 3)
Prepositions(1) = "|fffd|"
Prepositions(2) = "|fffd||fffd||fffd|"
Prepositions(3) = "|fffd||fffd| |fffd||fffd|"

'Decimals
Decimals(1) = "|fffd||fffd||fffd|"
Decimals(2) = "|fffd||fffd||fffd||fffd||fffd|"
Decimals(3) = "|fffd||fffd||fffd||fffd||fffd|"

End Sub

Public Function sFindReplace(sString As String, sOld As String, sNew As String) As String
On Error GoTo sFindReplace_Hndlr
Dim I As Integer
sFindReplace = sString
I = 1
'Loop through all the characters of a string
For j = 1 To Len(sString)
If InStr(sOld, Mid(sFindReplace, I, 1)) Then
sFindReplace = Mid(sFindReplace, 1, I - 1) & sNew & Mid(sFindReplace, I + 1)
I = I - 1
End If
I = I + 1
Next j
Exit Function
sFindReplace_Hndlr:
Debug.Print "RTE Desc: " & Err.Description
Debug.Print "RTE Num: " & Err.Number
sFindReplace = sString
Exit Function
End Function

Public Function sLeftRemove(str1 As String, str2 As String) As String
On Error Resume Next
If str1 = "0" And str2 = "0" Then
sLeftRemove = str1
Exit Function
End If
Do While Left(str1, 1) = str2
str1 = Mid(str1, 2)
Loop
If str1 = "" Then str1 = "0"
sLeftRemove = str1
End Function

Public Function sRightRemove(str1 As String, str2 As String) As String
On Error Resume Next
If str1 = "0" And str2 = "0" Then
sRightRemove = str1
Exit Function
End If
Do While Right(str1, 1) = str2
str1 = Mid(str1, 1, Len(str1) - 1)
Loop
If str1 = "" Then str1 = "0"
sRightRemove = str1
End Function


'|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| :
'Private Sub |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|_Exit(Cancel As Integer)
'If Not IsNull(Me!|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|) Then
'|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| '|fffd| = |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|
'Call Main '
'[|fffd||fffd||fffd|'_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|
'End If
'End Sub


Attribute VB_Name = "AbuHamoud2"
'Option Compare Database

Public |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2, |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2

Public Sub |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2()
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2 = Round(|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2, 2)
Dim |fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|
Dim |fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Dim |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd|
Dim |fffd||fffd||fffd||fffd||fffd| As String
Const |fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd|"
' |fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'MsgBox |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2
'MsgBox Fix(|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2) * 100
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = CInt((|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2 - Fix(|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2)) * 100)
'MsgBox |fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
If Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3) < 1 Then
|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3)
Else
|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2)
End If
If |fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd| >= 1 Then
|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = 0
End If
'|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
If |fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd| < 1 Then
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2 = |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2 - |fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End If
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Left([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1)
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|, "|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd|")
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
If Len([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2]) = 1 Then
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & " " & "|fffd||fffd||fffd||fffd||fffd||fffd|"
If [|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|" Then [|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|"
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
If [|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|" Then [|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 11 |fffd||fffd||fffd| 19
' |fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
If Len([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2]) = 2 And Left([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2) = 10 Then
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
End If
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
If Len([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2]) = 2 And Left([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2) <= 19 And Left([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2) >= 11 Then
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = Choose(Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd|") & " " & "|fffd||fffd||fffd|" & " " & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
' |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd| 21 |fffd||fffd||fffd| 99
If Len([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2]) = 2 And Left([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2) > 19 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd|") & " " & |fffd||fffd||fffd||fffd|
|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Left([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ")
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "|fffd||fffd||fffd||fffd||fffd||fffd|"
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1)
If |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = 0 Then
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = Choose(Left([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "", "|fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd|") & " " & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End If
' |fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
If Len([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2]) = 3 Then
|fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Left([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ")
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 10
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1) = 1 And Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1) = 0 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| "
|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1), "", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ")
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 11 |fffd||fffd||fffd| 19
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1) = 1 And Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1) <> 0 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ")
|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1), "|fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ")
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 20 |fffd||fffd||fffd| 99
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1) > 1 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1) <= 9 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ")
|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1), "|fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ")
If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "|fffd||fffd||fffd| " And Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1) = 1 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| "
End If
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| 1 |fffd||fffd||fffd| 9
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1) = 0 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ")
|fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Left([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ")
If |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd| " Then |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|"
If |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd| " Then |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|
If IsNull(|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|) Then
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = [|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] & "|fffd||fffd||fffd||fffd|"
Else
If |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| <> "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|" And |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| <> "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|" Then
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = [|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End If
End If
End If
' |fffd||fffd||fffd||fffd||fffd||fffd|
If Len([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2]) = 4 Then
|fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Left([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| ")
|fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1), "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ")
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 10
If Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1) = 0 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) = 1 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| "
|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1), "", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ")
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 11 |fffd||fffd||fffd| 19
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) = 1 And Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1) <> 0 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ")
|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1), "|fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ")
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 20 |fffd||fffd||fffd| 99
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) > 1 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) <= 9 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ")
|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1), "|fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ")
If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "|fffd||fffd||fffd| " And Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1) = 1 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| "
End If
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| 1 |fffd||fffd||fffd| 9
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) = 0 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ")
|fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Left([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| ")
If |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd| " Then |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|"
If |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd| " Then |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|
If IsNull(|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|) Then
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = [|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] & "|fffd||fffd||fffd||fffd|"
Else
If |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| <> "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|" And |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| <> "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|" Then
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = [|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End If
End If
End If
'|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
If Len([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2]) = 5 Then
|fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd| "
|fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1), "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ")
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1, 1) = 1 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1) = 0 Then
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| "
|fffd||fffd||fffd||fffd||fffd||fffd| = ""
End If
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1, 1) = 1 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1) > 0 Then
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1), "|fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ")
End If
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1, 1) > 1 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1) >= 0 Then
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ")
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1, 1), "", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ")
End If
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 10
If Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1) = 0 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1) = 1 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| "
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 11 |fffd||fffd||fffd| 19
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1) = 1 And Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1) <> 0 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ")
|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1), "|fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ")
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 20 |fffd||fffd||fffd| 99
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1) > 1 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1) <= 9 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ")
|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1), "|fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ")
If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "|fffd||fffd||fffd| " And Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1) = 1 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| "
End If
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
'|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| 1 |fffd||fffd||fffd| 9
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1) = 0 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ")
If |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd| " Then |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|"
If |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd| " Then |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|
If IsNull(|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|) Then
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = [|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] & "|fffd||fffd||fffd||fffd|"
Else
If |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| <> "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|" And |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| <> "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|" Then
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = [|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End If
End If
End If
'''''''''''''''''''''''''''''''''''
' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'''''''''''''''''''''''''''''''''''
If Len([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2]) = 6 Then
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1) = 0 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) <> 0 Then
|fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd| "
Else
|fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd| "
End If
|fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1), "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ")
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1) <> 1 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) > 0 Then
|fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1), "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ")
End If
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1), "", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ")
|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1, 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ")
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1) = 1 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) = 0 Then
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| "
End If
If |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| " Then
|fffd||fffd||fffd||fffd||fffd| = ""
End If
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1) = 1 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) > 0 Then
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1), "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ")
End If
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 10
If Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1) = 0 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 5, 1) = 1 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| "
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 11 |fffd||fffd||fffd| 19
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 5, 1) = 1 And Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1) <> 0 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ")
|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 5, 1), "|fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ")
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 20 |fffd||fffd||fffd| 99
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 5, 1) > 1 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 5, 1) <= 9 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ")
|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 5, 1), "|fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ")
If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "|fffd||fffd||fffd| " And Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1) = 1 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| "
End If
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
'|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| 1 |fffd||fffd||fffd| 9
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 5, 1) = 0 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ")
If |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd| " Then |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|"
If |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd| " Then |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|
If IsNull(|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|) Then
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = [|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] & "|fffd||fffd||fffd||fffd|"
Else
If |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| <> "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|" And |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| <> "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|" Then
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = [|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End If
End If
End If
'''''''''''''''''''''''''''''''''''
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'''''''''''''''''''''''''''''''''''
If Len([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2]) = 7 Then
|fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd| "
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) = 0 Then
|fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1), "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ")
End If
|fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 5, 1), "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ")
|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1), "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ")
|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1, 1), "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| ")
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) = 1 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1) = 0 Then
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| "
|fffd||fffd||fffd||fffd||fffd| = ""
End If
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1) >= 1 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1) <= 9 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) = 0 Then
|fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd| "
End If
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) = 1 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1) > 0 Then
|fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1), "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| ")
End If
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) > 1 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1) >= 0 Then
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1), "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ")
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) = 0 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1) <> 0 _
And |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| <> "|fffd||fffd||fffd||fffd||fffd| " And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) = 0 _
And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1) <> 0 And |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| <> "|fffd||fffd||fffd||fffd||fffd||fffd| " Then
|fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd| "
End If
'if |fffd||fffd||fffd||fffd||fffd||fffd|=
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1), "", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ")
End If
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 10
If Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1) = 0 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 6, 1) = 1 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| "
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 11 |fffd||fffd||fffd| 19
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 6, 1) = 1 And Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1) <> 0 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ")
|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 6, 1), "|fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ")
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1) = 0 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) = 0 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1) = 1 Then
|fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd|"
End If
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 20 |fffd||fffd||fffd| 99
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 6, 1) > 1 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 6, 1) <= 9 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ")
|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = Choose(Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 6, 1), "|fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ")
If |fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> "|fffd||fffd||fffd| " And Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1) = 1 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| "
End If
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) = 1 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1) = 0 Then
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| "
|fffd||fffd||fffd||fffd||fffd| = ""
End If
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "|fffd||fffd||fffd||fffd||fffd||fffd|"
'[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd||fffd| & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
'|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| 1 |fffd||fffd||fffd| 9
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 6, 1) = 0 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(Right([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ")
If |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd| " Then |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|"
If |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd| " Then |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
If Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 2, 1) = 0 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 3, 1) = 0 And Mid([|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2], 4, 1) = 0 Then
|fffd||fffd||fffd||fffd||fffd| = ""
End If
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd| & |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|
If IsNull(|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|) Then
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = [|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] & "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|"
Else
If |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| <> "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|" And |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| <> "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|" Then
[|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] = [|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2] & "|fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End If
End If
End If
'''''''''''
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
If |fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd| <> 0 Then
Dim |fffd||fffd||fffd||fffd|, |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|
|fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd| "
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd| * 100
If Right([|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|], 1) <> 0 Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(Right([|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|], 1), "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ")
End If
If Len(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) = 2 And Right(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 1) <> 0 Then
|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd| = Choose(Left([|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ")
End If
If Len(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|) = 2 And Right(|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|, 1) = 0 Then
|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd| = Choose(Left([|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|], 1), "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ")
'|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = ""
End If
If |fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd| " And |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "" Then
|fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| "
End If
If |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| " And |fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd| " Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| "
End If
If |fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd| = "" Then
|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = Choose(Right([|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|], 1), "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd||fffd||fffd| ", "|fffd||fffd||fffd||fffd| ")
|fffd||fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| "
If |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| " Or |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| " Then
|fffd||fffd||fffd||fffd||fffd| = ""
End If
End If
|fffd||fffd||fffd||fffd| = |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|
If Not IsNull(|fffd||fffd||fffd||fffd|) Then
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2 = |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2 & " " & |fffd||fffd||fffd||fffd| & |fffd||fffd||fffd||fffd||fffd| & "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| ."
Else
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2 = |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2 & " " & |fffd||fffd||fffd||fffd| & " " & "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| ."
End If
Else
|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2 = |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2 & " " & "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| ."
End If

End Sub

'|fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| :
Private Sub |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|_Exit(Cancel As Integer)
'If Not IsNull(Me!|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|) Then
'|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2 = |fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|
'|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2
'[|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|] = |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2

'End If

End Sub
Function Hamoud2(Myno)
 |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2 = Myno
 |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2
 Hamoud2 = |fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd|2
End Function

Attribute VB_Name = "AbuHamoud3"

Dim Sx As Integer
Dim NUM As String
Sub Form_Load()

Sx = 0

End Sub
Sub Text1_Change()

NUM = Text1.Text
Label1.Caption = WriteNo2(NUM, Sx)

End Sub
Sub Option1_Click(Index As Integer)

Sx = Index
Label1.Caption = WriteNo2(NUM, Sx)

End Sub
'|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| :
Function GetNo2(ns As String, sex As Integer, Power As Integer, frst() As String, frst1() As String, scnd() As String, thrd() As String) As String
Dim Lngth As Integer, InvSex As Integer
ReDim Indx(3) As Integer
ReDim TmpArray(2) As String
Dim tms As String

If sex = 0 Then
InvSex = 1
Else
InvSex = 0
End If
'|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Lngth = Len(ns)
'|fffd||fffd||fffd||fffd||fffd||fffd|
Indx(1) = Val(Mid$(ns, Lngth, 1))
TmpArray(0) = frst(Indx(1), sex)
Lngth = Lngth - 1
If Lngth > 0 Then
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Indx(2) = Val(Mid$(ns, Lngth, 1))
If TmpArray(0) <> "" Then
TmpArray(1) = scnd(Indx(2), InvSex)
Else
TmpArray(1) = scnd(Indx(2), sex)
End If
If (Indx(2) > 1) And (TmpArray(0) <> "") Then '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 1 |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
TmpArray(0) = TmpArray(0) + " |fffd|"
ElseIf (Indx(1) = 1) And (Indx(2) = 1) Then '|fffd||fffd||fffd| |fffd||fffd||fffd|
TmpArray(0) = frst1(1, sex)
ElseIf (Indx(1) = 2) And (Indx(2) = 1) Then ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
TmpArray(0) = frst1(2, sex)
End If
Lngth = Lngth - 1
If Lngth > 0 Then
'|fffd||fffd||fffd||fffd||fffd||fffd|
Indx(3) = Val(Mid$(ns, Lngth, 1))
TmpArray(2) = thrd(Indx(3))
If (Indx(3) > 0) And ((TmpArray(0) <> "") Or (TmpArray(1) <> "")) Then TmpArray(2) = TmpArray(2) + " |fffd|"
Else
GoTo last
End If
Else
GoTo last
End If
'|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|,|fffd||fffd||fffd|,...)|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
last:
Select Case Power
Case Is = -1
tms = TmpArray(2) & TmpArray(0) & TmpArray(1)
If (TmpArray(0) <> "") And (TmpArray(1) = "") And (TmpArray(2) = "") Then
GetNo2 = tms & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
ElseIf (TmpArray(0) <> "") And (TmpArray(1) <> "") And (TmpArray(2) = "") Then
GetNo2 = tms & " |fffd||fffd||fffd||fffd||fffd||fffd|"
ElseIf (TmpArray(0) <> "") And (TmpArray(1) <> "") And (TmpArray(2) <> "") Then
GetNo2 = tms & " |fffd||fffd||fffd||fffd||fffd||fffd|"
End If
Case Is = 0
GetNo2 = TmpArray(2) & TmpArray(0) & TmpArray(1)
Case Is = 1
If (Indx(1) = 1) And (Indx(2) = 0) And (Indx(3) = 0) Then
GetNo2 = " |fffd||fffd||fffd| "
ElseIf (Indx(1) = 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
GetNo2 = " |fffd||fffd||fffd||fffd||fffd| "
ElseIf (Indx(1) > 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
GetNo2 = TmpArray(0) & " |fffd||fffd||fffd||fffd| "
ElseIf (Indx(1) = 0) And (Indx(2) = 1) And (Indx(3) = 0) Then
GetNo2 = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd| "
ElseIf (Indx(1) = 0) And (Indx(2) = 0) And (Indx(3) = 0) Then
GetNo2 = TmpArray(2) & TmpArray(0) & TmpArray(1)
Else
GetNo2 = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd| "
End If
Case Is = 2
If (Indx(1) = 1) And (Indx(2) = 0) And (Indx(3) = 0) Then
GetNo2 = " |fffd||fffd||fffd||fffd||fffd| "
ElseIf (Indx(1) = 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
GetNo2 = " |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
ElseIf (Indx(1) > 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
GetNo2 = TmpArray(0) & " |fffd||fffd||fffd||fffd||fffd||fffd| "
ElseIf (Indx(1) = 0) And (Indx(2) = 1) And (Indx(3) = 0) Then
GetNo2 = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd||fffd||fffd| "
ElseIf (Indx(1) = 0) And (Indx(2) = 0) And (Indx(3) = 0) Then
GetNo2 = TmpArray(2) & TmpArray(0) & TmpArray(1)
Else
GetNo2 = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd||fffd| "
End If
Case Is = 3
If (Indx(1) = 1) And (Indx(2) = 0) And (Indx(3) = 0) Then
GetNo2 = " |fffd||fffd||fffd||fffd||fffd| "
ElseIf (Indx(1) = 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
GetNo2 = " |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
ElseIf (Indx(1) > 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
GetNo2 = TmpArray(0) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
ElseIf (Indx(1) = 0) And (Indx(2) = 1) And (Indx(3) = 0) Then
GetNo2 = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
Else
GetNo2 = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd||fffd| "
End If
End Select
End Function
Function WriteNo2(no As String, sex As Integer) As String

Static FirstArray(9, 1) As String
Static FirstArray1(2, 1) As String
Static SecondArray(9, 1) As String
Static ThirdArray(9) As String

ReDim Parts(4) As String
ReDim PartStr(-1 To 3) As String

Dim Length As Integer, I As Integer, TempLength As Integer
Dim NoString As String, pos As Integer
Dim AfterPoint As String
Dim txt As String

'sex=0 |fffd||fffd||fffd||fffd|
'sex= 1 |fffd||fffd||fffd||fffd|

FirstArray(1, 0) = "|fffd||fffd||fffd||fffd| ": FirstArray(2, 0) = "|fffd||fffd||fffd||fffd||fffd| ": FirstArray(3, 0) = "|fffd||fffd||fffd||fffd||fffd| "
FirstArray(4, 0) = "|fffd||fffd||fffd||fffd||fffd| ": FirstArray(5, 0) = "|fffd||fffd||fffd||fffd| ": FirstArray(6, 0) = "|fffd||fffd||fffd| "
FirstArray(7, 0) = "|fffd||fffd||fffd||fffd| ": FirstArray(8, 0) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": FirstArray(9, 0) = "|fffd||fffd||fffd||fffd| "

FirstArray(1, 1) = "|fffd||fffd||fffd||fffd||fffd| ": FirstArray(2, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": FirstArray(3, 1) = "|fffd||fffd||fffd||fffd| "
FirstArray(4, 1) = "|fffd||fffd||fffd||fffd| ": FirstArray(5, 1) = "|fffd||fffd||fffd| ": FirstArray(6, 1) = "|fffd||fffd| "
FirstArray(7, 1) = "|fffd||fffd||fffd| ": FirstArray(8, 1) = "|fffd||fffd||fffd||fffd| ": FirstArray(9, 1) = "|fffd||fffd||fffd| "

FirstArray1(1, 0) = "|fffd||fffd||fffd| ": FirstArray1(2, 0) = "|fffd||fffd||fffd||fffd| "

FirstArray1(1, 1) = "|fffd||fffd||fffd||fffd| ": FirstArray1(2, 1) = "|fffd||fffd||fffd||fffd||fffd| "

SecondArray(1, 0) = "|fffd||fffd||fffd||fffd| ": SecondArray(2, 0) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(3, 0) = "|fffd||fffd||fffd||fffd||fffd||fffd| "
SecondArray(4, 0) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": SecondArray(5, 0) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(6, 0) = "|fffd||fffd||fffd||fffd| "
SecondArray(7, 0) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(8, 0) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": SecondArray(9, 0) = "|fffd||fffd||fffd||fffd||fffd| "

SecondArray(1, 1) = "|fffd||fffd||fffd| ": SecondArray(2, 1) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(3, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd| "
SecondArray(4, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": SecondArray(5, 1) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(6, 1) = "|fffd||fffd||fffd||fffd| "
SecondArray(7, 1) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(8, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": SecondArray(9, 1) = "|fffd||fffd||fffd||fffd||fffd| "


ThirdArray(1) = "|fffd||fffd||fffd| ": ThirdArray(2) = "|fffd||fffd||fffd||fffd||fffd| ": ThirdArray(3) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
ThirdArray(4) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(5) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(6) = "|fffd||fffd||fffd||fffd||fffd| "
ThirdArray(7) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(8) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(9) = "|fffd||fffd||fffd||fffd||fffd||fffd| "

txt = "": I = -1

If Val(no) = 0 Then '|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
WriteNo2 = "|fffd||fffd||fffd|"
Exit Function
End If
'|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
NoString = Trim(no)
' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
Length = Len(NoString)
'|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
pos = InStr(NoString, ".")
'|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
If pos > 0 Then
AfterPoint = Right$(NoString, Length - pos)
NoString = Left$(NoString, pos - 1)
Length = Len(NoString)
Else
pos = InStr(NoString, ",")
If pos > 0 Then
AfterPoint = Right$(NoString, Length - pos)
NoString = Left$(NoString, pos - 1)
Length = Len(NoString)
End If
End If
'|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd|
TempLength = Length
Parts(0) = NoString
Do While TempLength >= 3
TempLength = TempLength - 3
I = I + 1
Parts(I) = Right$(NoString, 3)
NoString$ = Left$(NoString, TempLength)
Loop
Parts(I + 1) = NoString
'|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
For I = 0 To 3
If Len(Parts(I)) > 0 Then
PartStr(I) = GetNo2(Parts(I), sex, I, FirstArray(), FirstArray1(), SecondArray(), ThirdArray())
Else
Exit For
End If
Next
'|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
For I = 3 To 0 Step -1
If Len(PartStr(I)) > 0 Then
If Len(PartStr(I - 1)) > 0 Then
txt = txt & " " & PartStr(I) & "|fffd|"
Else
txt = txt & " " & PartStr(I) & " "
End If
End If
Next
If Val(AfterPoint) > 0 Then
txt = txt & "|fffd|" & GetNo2(AfterPoint, sex, -1, FirstArray(), FirstArray1(), SecondArray(), ThirdArray())
End If
WriteNo2 = txt
End Function

Attribute VB_Name = "AbuHamoudEn"
Function ConvertCurrencyToEnglish(ByVal MyNumber)
Dim temp
Dim Dollars, Cents
Dim DecimalPlace, Count

ReDim Place(9) As String
Place(2) = " Thousand "
Place(3) = " Million "
Place(4) = " Billion "
Place(5) = " Trillion "

' Convert MyNumber to a string, trimming extra spaces.
MyNumber = Trim(Str(MyNumber))

' Find decimal place.
DecimalPlace = InStr(MyNumber, ".")

' If we find decimal place...
If DecimalPlace > 0 Then
' Convert cents
temp = Left(Mid(MyNumber, DecimalPlace + 1) & "00", 2)
Cents = ConvertTens(temp)

' Strip off cents from remainder to convert.
MyNumber = Trim(Left(MyNumber, DecimalPlace - 1))
End If

Count = 1
Do While MyNumber <> ""
' Convert last 3 digits of MyNumber to English dollars.
temp = ConvertHundreds(Right(MyNumber, 3))
If temp <> "" Then Dollars = temp & Place(Count) & Dollars
If Len(MyNumber) > 3 Then
' Remove last 3 converted digits from MyNumber.
MyNumber = Left(MyNumber, Len(MyNumber) - 3)
Else
MyNumber = ""
End If
Count = Count + 1
Loop

' Clean up dollars.
Select Case Dollars
Case ""
Dollars = "No Dollars"
Case "One"
Dollars = "One Dollar"
Case Else
Dollars = Dollars & " Dollars"
End Select

' Clean up cents.
Select Case Cents
Case ""
Cents = " And No Cents"
Case "One"
Cents = " And One Cent"
Case Else
Cents = " And " & Cents & " Cents"
End Select

ConvertCurrencyToEnglish = Dollars & Cents
End Function

Private Function ConvertHundreds(ByVal MyNumber)
Dim Result As String

' Exit if there is nothing to convert.
If Val(MyNumber) = 0 Then Exit Function

' Append leading zeros to number.
MyNumber = Right("000" & MyNumber, 3)

' Do we have a hundreds place digit to convert?
If Left(MyNumber, 1) <> "0" Then
Result = ConvertDigit(Left(MyNumber, 1)) & " Hundred "
End If

' Do we have a tens place digit to convert?
If Mid(MyNumber, 2, 1) <> "0" Then
Result = Result & ConvertTens(Mid(MyNumber, 2))
Else
' If not, then convert the ones place digit.
Result = Result & ConvertDigit(Mid(MyNumber, 3))
End If

ConvertHundreds = Trim(Result)
End Function

Private Function ConvertTens(ByVal MyTens)
Dim Result As String

' Is value between 10 and 19?
If Val(Left(MyTens, 1)) = 1 Then
Select Case Val(MyTens)
Case 10: Result = "Ten"
Case 11: Result = "Eleven"
Case 12: Result = "Twelve"
Case 13: Result = "Thirteen"
Case 14: Result = "Fourteen"
Case 15: Result = "Fifteen"
Case 16: Result = "Sixteen"
Case 17: Result = "Seventeen"
Case 18: Result = "Eighteen"
Case 19: Result = "Nineteen"
Case Else
End Select
Else
' .. otherwise it's between 20 and 99.
Select Case Val(Left(MyTens, 1))
Case 2: Result = "Twenty "
Case 3: Result = "Thirty "
Case 4: Result = "Forty "
Case 5: Result = "Fifty "
Case 6: Result = "Sixty "
Case 7: Result = "Seventy "
Case 8: Result = "Eighty "
Case 9: Result = "Ninety "
Case Else
End Select

' Convert ones place digit.
Result = Result & ConvertDigit(Right(MyTens, 1))
End If

ConvertTens = Result
End Function

Private Function ConvertDigit(ByVal MyDigit)
Select Case Val(MyDigit)
Case 1: ConvertDigit = "One"
Case 2: ConvertDigit = "Two"
Case 3: ConvertDigit = "Three"
Case 4: ConvertDigit = "Four"
Case 5: ConvertDigit = "Five"
Case 6: ConvertDigit = "Six"
Case 7: ConvertDigit = "Seven"
Case 8: ConvertDigit = "Eight"
Case 9: ConvertDigit = "Nine"
Case Else: ConvertDigit = ""
End Select
End Function

Attribute VB_Name = "AbuHani"

Function NoToTxt(TheNo As Double, MyCur As String, MySubCur As String) As String
Dim MyArry1(0 To 9) As String
Dim MyArry2(0 To 9) As String
Dim MyArry3(0 To 9) As String
Dim Myno As String
Dim GetNo As String
Dim RdNo As String
Dim My100 As String
Dim My10 As String
Dim My1 As String
Dim My11 As String
Dim My12 As String
Dim GetTxt As String
Dim Mybillion As String
Dim MyMillion As String
Dim MyThou As String
Dim MyHun As String
Dim MyFraction As String
Dim MyAnd As String
Dim I As Integer
Dim ReMark As String


If TheNo > 999999999999.99 Then Exit Function

If TheNo < 0 Then
TheNo = TheNo * -1
ReMark = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "
Else
ReMark = "|fffd||fffd||fffd| "
End If

If TheNo = 0 Then
NoToTxt = "|fffd||fffd||fffd|"
Exit Function
End If

MyAnd = " |fffd|"
MyArry1(0) = ""
MyArry1(1) = "|fffd||fffd||fffd||fffd|"
MyArry1(2) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(3) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(4) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(5) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(6) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(7) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(8) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(9) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"

MyArry2(0) = ""
MyArry2(1) = " |fffd||fffd||fffd|"
MyArry2(2) = "|fffd||fffd||fffd||fffd||fffd|"
MyArry2(3) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry2(4) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry2(5) = "|fffd||fffd||fffd||fffd||fffd|"
MyArry2(6) = "|fffd||fffd||fffd||fffd|"
MyArry2(7) = "|fffd||fffd||fffd||fffd||fffd|"
MyArry2(8) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry2(9) = "|fffd||fffd||fffd||fffd||fffd|"

MyArry3(0) = ""
MyArry3(1) = "|fffd||fffd||fffd||fffd|"
MyArry3(2) = "|fffd||fffd||fffd||fffd||fffd|"
MyArry3(3) = "|fffd||fffd||fffd||fffd||fffd|"
MyArry3(4) = "|fffd||fffd||fffd||fffd||fffd|"
MyArry3(5) = "|fffd||fffd||fffd||fffd|"
MyArry3(6) = "|fffd||fffd||fffd|"
MyArry3(7) = "|fffd||fffd||fffd||fffd|"
MyArry3(8) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry3(9) = "|fffd||fffd||fffd||fffd|"
'======================

GetNo = Format(TheNo, "000000000000.00")

I = 0
Do While I < 15

If I < 12 Then
Myno = Mid$(GetNo, I + 1, 3)
Else
Myno = "0" + Mid$(GetNo, I + 2, 2)
End If

If (Mid$(Myno, 1, 3)) > 0 Then

RdNo = Mid$(Myno, 1, 1)
My100 = MyArry1(RdNo)
RdNo = Mid$(Myno, 3, 1)
My1 = MyArry3(RdNo)
RdNo = Mid$(Myno, 2, 1)
My10 = MyArry2(RdNo)

If Mid$(Myno, 2, 2) = 11 Then My11 = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd|"
If Mid$(Myno, 2, 2) = 12 Then My12 = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd|"
If Mid$(Myno, 2, 2) = 10 Then My10 = "|fffd||fffd||fffd||fffd|"

If ((Mid$(Myno, 1, 1)) > 0) And ((Mid$(Myno, 2, 2)) > 0) Then My100 = My100 + MyAnd
If ((Mid$(Myno, 3, 1)) > 0) And ((Mid$(Myno, 2, 1)) > 1) Then My1 = My1 + MyAnd

GetTxt = My100 + My1 + My10

If ((Mid$(Myno, 3, 1)) = 1) And ((Mid$(Myno, 2, 1)) = 1) Then
GetTxt = My100 + My11
If ((Mid$(Myno, 1, 1)) = 0) Then GetTxt = My11
End If

If ((Mid$(Myno, 3, 1)) = 2) And ((Mid$(Myno, 2, 1)) = 1) Then
GetTxt = My100 + My12
If ((Mid$(Myno, 1, 1)) = 0) Then GetTxt = My12
End If

If (I = 0) And (GetTxt <> "") Then
If ((Mid$(Myno, 1, 3)) > 10) Then
Mybillion = GetTxt + " |fffd||fffd||fffd||fffd||fffd|"
Else
Mybillion = GetTxt + " |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
If ((Mid$(Myno, 1, 3)) = 2) Then Mybillion = " |fffd||fffd||fffd||fffd||fffd|"
If ((Mid$(Myno, 1, 3)) = 2) Then Mybillion = " |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End If

If (I = 3) And (GetTxt <> "") Then

If ((Mid$(Myno, 1, 3)) > 10) Then
MyMillion = GetTxt + " |fffd||fffd||fffd||fffd||fffd|"
Else
MyMillion = GetTxt + " |fffd||fffd||fffd||fffd||fffd||fffd|"
If ((Mid$(Myno, 1, 3)) = 1) Then MyMillion = " |fffd||fffd||fffd||fffd||fffd|"
If ((Mid$(Myno, 1, 3)) = 2) Then MyMillion = " |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End If

If (I = 6) And (GetTxt <> "") Then
If ((Mid$(Myno, 1, 3)) > 10) Then
MyThou = GetTxt + " |fffd||fffd||fffd|"
Else
MyThou = GetTxt + " |fffd||fffd||fffd||fffd|"
If ((Mid$(Myno, 3, 1)) = 1) Then MyThou = " |fffd||fffd||fffd|"
If ((Mid$(Myno, 3, 1)) = 2) Then MyThou = " |fffd||fffd||fffd||fffd||fffd|"
End If
End If

If (I = 9) And (GetTxt <> "") Then MyHun = GetTxt
If (I = 12) And (GetTxt <> "") Then MyFraction = GetTxt
End If

I = I + 3
Loop

If (Mybillion <> "") Then
If (MyMillion <> "") Or (MyThou <> "") Or (MyHun <> "") Then Mybillion = Mybillion + MyAnd
End If

If (MyMillion <> "") Then
If (MyThou <> "") Or (MyHun <> "") Then MyMillion = MyMillion + MyAnd
End If

If (MyThou <> "") Then
If (MyHun <> "") Then MyThou = MyThou + MyAnd
End If

If MyFraction <> "" Then
If (Mybillion <> "") Or (MyMillion <> "") Or (MyThou <> "") Or (MyHun <> "") Then
NoToTxt = ReMark + Mybillion + MyMillion + MyThou + MyHun + " " + MyCur + MyAnd + MyFraction + " " + MySubCur
Else
NoToTxt = ReMark + MyFraction + " " + MySubCur
End If
Else
NoToTxt = ReMark + Mybillion + MyMillion + MyThou + MyHun + " " + MyCur
End If

End Function
Attribute VB_Name = "AbuHani1"

Function NoToTxt(TheNo As Double, MyCur As String, MySubCur As String) As String
Dim MyArry1(0 To 9) As String
Dim MyArry2(0 To 9) As String
Dim MyArry3(0 To 9) As String
Dim Myno As String
Dim GetNo As String
Dim RdNo As String
Dim My100 As String
Dim My10 As String
Dim My1 As String
Dim My11 As String
Dim My12 As String
Dim GetTxt As String
Dim Mybillion As String
Dim MyMillion As String
Dim MyThou As String
Dim MyHun As String
Dim MyFraction As String
Dim MyAnd As String
Dim I As Integer
Dim ReMark As String


If TheNo > 999999999999.99 Then Exit Function

If TheNo < 0 Then
TheNo = TheNo * -1
ReMark = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "
Else
ReMark = "|fffd||fffd||fffd| "
End If

If TheNo = 0 Then
NoToTxt = "|fffd||fffd||fffd|"
Exit Function
End If

MyAnd = " |fffd|"
MyArry1(0) = ""
MyArry1(1) = "|fffd||fffd||fffd||fffd|"
MyArry1(2) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(3) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(4) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(5) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(6) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(7) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(8) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(9) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"

MyArry2(0) = ""
MyArry2(1) = " |fffd||fffd||fffd|"
MyArry2(2) = "|fffd||fffd||fffd||fffd||fffd|"
MyArry2(3) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry2(4) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry2(5) = "|fffd||fffd||fffd||fffd||fffd|"
MyArry2(6) = "|fffd||fffd||fffd||fffd|"
MyArry2(7) = "|fffd||fffd||fffd||fffd||fffd|"
MyArry2(8) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry2(9) = "|fffd||fffd||fffd||fffd||fffd|"

MyArry3(0) = ""
MyArry3(1) = "|fffd||fffd||fffd||fffd|"
MyArry3(2) = "|fffd||fffd||fffd||fffd||fffd|"
MyArry3(3) = "|fffd||fffd||fffd||fffd||fffd|"
MyArry3(4) = "|fffd||fffd||fffd||fffd||fffd|"
MyArry3(5) = "|fffd||fffd||fffd||fffd|"
MyArry3(6) = "|fffd||fffd||fffd|"
MyArry3(7) = "|fffd||fffd||fffd||fffd|"
MyArry3(8) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry3(9) = "|fffd||fffd||fffd||fffd|"
'======================

GetNo = Format(TheNo, "000000000000.00")

I = 0
Do While I < 15

If I < 12 Then
Myno = Mid$(GetNo, I + 1, 3)
Else
Myno = "0" + Mid$(GetNo, I + 2, 2)
End If

If (Mid$(Myno, 1, 3)) > 0 Then

RdNo = Mid$(Myno, 1, 1)
My100 = MyArry1(RdNo)
RdNo = Mid$(Myno, 3, 1)
My1 = MyArry3(RdNo)
RdNo = Mid$(Myno, 2, 1)
My10 = MyArry2(RdNo)

If Mid$(Myno, 2, 2) = 11 Then My11 = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd|"
If Mid$(Myno, 2, 2) = 12 Then My12 = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd|"
If Mid$(Myno, 2, 2) = 10 Then My10 = "|fffd||fffd||fffd||fffd|"

If ((Mid$(Myno, 1, 1)) > 0) And ((Mid$(Myno, 2, 2)) > 0) Then My100 = My100 + MyAnd
If ((Mid$(Myno, 3, 1)) > 0) And ((Mid$(Myno, 2, 1)) > 1) Then My1 = My1 + MyAnd

GetTxt = My100 + My1 + My10

If ((Mid$(Myno, 3, 1)) = 1) And ((Mid$(Myno, 2, 1)) = 1) Then
GetTxt = My100 + My11
If ((Mid$(Myno, 1, 1)) = 0) Then GetTxt = My11
End If

If ((Mid$(Myno, 3, 1)) = 2) And ((Mid$(Myno, 2, 1)) = 1) Then
GetTxt = My100 + My12
If ((Mid$(Myno, 1, 1)) = 0) Then GetTxt = My12
End If

If (I = 0) And (GetTxt <> "") Then
If ((Mid$(Myno, 1, 3)) > 10) Then
Mybillion = GetTxt + " |fffd||fffd||fffd||fffd||fffd|"
Else
Mybillion = GetTxt + " |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
If ((Mid$(Myno, 1, 3)) = 2) Then Mybillion = " |fffd||fffd||fffd||fffd||fffd|"
If ((Mid$(Myno, 1, 3)) = 2) Then Mybillion = " |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End If

If (I = 3) And (GetTxt <> "") Then

If ((Mid$(Myno, 1, 3)) > 10) Then
MyMillion = GetTxt + " |fffd||fffd||fffd||fffd||fffd|"
Else
MyMillion = GetTxt + " |fffd||fffd||fffd||fffd||fffd||fffd|"
If ((Mid$(Myno, 1, 3)) = 1) Then MyMillion = " |fffd||fffd||fffd||fffd||fffd|"
If ((Mid$(Myno, 1, 3)) = 2) Then MyMillion = " |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End If

If (I = 6) And (GetTxt <> "") Then
If ((Mid$(Myno, 1, 3)) > 10) Then
MyThou = GetTxt + " |fffd||fffd||fffd|"
Else
MyThou = GetTxt + " |fffd||fffd||fffd||fffd|"
If ((Mid$(Myno, 3, 1)) = 1) Then MyThou = " |fffd||fffd||fffd|"
If ((Mid$(Myno, 3, 1)) = 2) Then MyThou = " |fffd||fffd||fffd||fffd||fffd|"
End If
End If

If (I = 9) And (GetTxt <> "") Then MyHun = GetTxt
If (I = 12) And (GetTxt <> "") Then MyFraction = GetTxt
End If

I = I + 3
Loop

If (Mybillion <> "") Then
If (MyMillion <> "") Or (MyThou <> "") Or (MyHun <> "") Then Mybillion = Mybillion + MyAnd
End If

If (MyMillion <> "") Then
If (MyThou <> "") Or (MyHun <> "") Then MyMillion = MyMillion + MyAnd
End If

If (MyThou <> "") Then
If (MyHun <> "") Then MyThou = MyThou + MyAnd
End If

If MyFraction <> "" Then
If (Mybillion <> "") Or (MyMillion <> "") Or (MyThou <> "") Or (MyHun <> "") Then
NoToTxt = ReMark + Mybillion + MyMillion + MyThou + MyHun + " " + MyCur + MyAnd + MyFraction + " " + MySubCur
Else
NoToTxt = ReMark + MyFraction + " " + MySubCur
End If
Else
NoToTxt = ReMark + Mybillion + MyMillion + MyThou + MyHun + " " + MyCur
End If

End Function
Attribute VB_Name = "AbuHaniku"

Function NoToTxt2(TheNo As Double, MyCur As String, MySubCur As String) As String
Dim MyArry1(0 To 9) As String
Dim MyArry2(0 To 9) As String
Dim MyArry3(0 To 9) As String
Dim Myno As String
Dim GetNo As String
Dim RdNo As String
Dim My100 As String
Dim My10 As String
Dim My1 As String
Dim My11 As String
Dim My12 As String
Dim GetTxt As String
Dim Mybillion As String
Dim MyMillion As String
Dim MyThou As String
Dim MyHun As String
Dim MyFraction As String
Dim MyAnd As String
Dim I As Integer
Dim ReMark As String


If TheNo > 999999999999.999 Then Exit Function

If TheNo < 0 Then
TheNo = TheNo * -1
ReMark = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "
Else
ReMark = "|fffd||fffd||fffd| "
End If

If TheNo = 0 Then
NoToTxt2 = "|fffd||fffd||fffd|"
Exit Function
End If

MyAnd = " |fffd|"
MyArry1(0) = ""
MyArry1(1) = "|fffd||fffd||fffd||fffd|"
MyArry1(2) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(3) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(4) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(5) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(6) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(7) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(8) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry1(9) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"

MyArry2(0) = ""
MyArry2(1) = " |fffd||fffd||fffd|"
MyArry2(2) = "|fffd||fffd||fffd||fffd||fffd|"
MyArry2(3) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry2(4) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry2(5) = "|fffd||fffd||fffd||fffd||fffd|"
MyArry2(6) = "|fffd||fffd||fffd||fffd|"
MyArry2(7) = "|fffd||fffd||fffd||fffd||fffd|"
MyArry2(8) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry2(9) = "|fffd||fffd||fffd||fffd||fffd|"

MyArry3(0) = ""
MyArry3(1) = "|fffd||fffd||fffd||fffd|"
MyArry3(2) = "|fffd||fffd||fffd||fffd||fffd|"
MyArry3(3) = "|fffd||fffd||fffd||fffd||fffd|"
MyArry3(4) = "|fffd||fffd||fffd||fffd||fffd|"
MyArry3(5) = "|fffd||fffd||fffd||fffd|"
MyArry3(6) = "|fffd||fffd||fffd|"
MyArry3(7) = "|fffd||fffd||fffd||fffd|"
MyArry3(8) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
MyArry3(9) = "|fffd||fffd||fffd||fffd|"
'======================
GetNo = Round(TheNo, 3)
GetNo = Format(TheNo, "000000000000.000")

I = 0
'===============
Do While I < 16

If I < 12 Then
Myno = Mid$(GetNo, I + 1, 3)
Else
Myno = Mid$(GetNo, I + 2, 3) + "0" ' "0" + Mid$(GetNo, I + 2, 2)
End If

If (Mid$(Myno, 1, 3)) > 0 Then

RdNo = Mid$(Myno, 1, 1)
My100 = MyArry1(RdNo)
RdNo = Mid$(Myno, 3, 1)
My1 = MyArry3(RdNo)
RdNo = Mid$(Myno, 2, 1)
My10 = MyArry2(RdNo)

If Mid$(Myno, 2, 2) = 11 Then My11 = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd|"
If Mid$(Myno, 2, 2) = 12 Then My12 = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd|"
If Mid$(Myno, 2, 2) = 10 Then My10 = "|fffd||fffd||fffd||fffd|"

If ((Mid$(Myno, 1, 1)) > 0) And ((Mid$(Myno, 2, 2)) > 0) Then My100 = My100 + MyAnd
If ((Mid$(Myno, 3, 1)) > 0) And ((Mid$(Myno, 2, 1)) > 1) Then My1 = My1 + MyAnd

GetTxt = My100 + My1 + My10

If ((Mid$(Myno, 3, 1)) = 1) And ((Mid$(Myno, 2, 1)) = 1) Then
GetTxt = My100 + My11
If ((Mid$(Myno, 1, 1)) = 0) Then GetTxt = My11
End If

If ((Mid$(Myno, 3, 1)) = 2) And ((Mid$(Myno, 2, 1)) = 1) Then
GetTxt = My100 + My12
If ((Mid$(Myno, 1, 1)) = 0) Then GetTxt = My12
End If

If (I = 0) And (GetTxt <> "") Then
If ((Mid$(Myno, 1, 3)) > 10) Then
Mybillion = GetTxt + " |fffd||fffd||fffd||fffd||fffd|"
Else
Mybillion = GetTxt + " |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
If ((Mid$(Myno, 1, 3)) = 2) Then Mybillion = " |fffd||fffd||fffd||fffd||fffd|"
If ((Mid$(Myno, 1, 3)) = 2) Then Mybillion = " |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End If

If (I = 3) And (GetTxt <> "") Then

If ((Mid$(Myno, 1, 3)) > 10) Then
MyMillion = GetTxt + " |fffd||fffd||fffd||fffd||fffd|"
Else
MyMillion = GetTxt + " |fffd||fffd||fffd||fffd||fffd||fffd|"
If ((Mid$(Myno, 1, 3)) = 1) Then MyMillion = " |fffd||fffd||fffd||fffd||fffd|"
If ((Mid$(Myno, 1, 3)) = 2) Then MyMillion = " |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
End If
End If

If (I = 6) And (GetTxt <> "") Then
If ((Mid$(Myno, 1, 3)) > 10) Then
MyThou = GetTxt + " |fffd||fffd||fffd|"
Else
MyThou = GetTxt + " |fffd||fffd||fffd||fffd|"
If ((Mid$(Myno, 3, 1)) = 1) Then MyThou = " |fffd||fffd||fffd|"
If ((Mid$(Myno, 3, 1)) = 2) Then MyThou = " |fffd||fffd||fffd||fffd||fffd|"
End If
End If

If (I = 9) And (GetTxt <> "") Then MyHun = GetTxt
If (I = 12) And (GetTxt <> "") Then MyFraction = GetTxt
End If

I = I + 3
Loop
'============================
If (Mybillion <> "") Then
If (MyMillion <> "") Or (MyThou <> "") Or (MyHun <> "") Then Mybillion = Mybillion + MyAnd
End If

If (MyMillion <> "") Then
If (MyThou <> "") Or (MyHun <> "") Then MyMillion = MyMillion + MyAnd
End If

If (MyThou <> "") Then
If (MyHun <> "") Then MyThou = MyThou + MyAnd
End If

If MyFraction <> "" Then
If (Mybillion <> "") Or (MyMillion <> "") Or (MyThou <> "") Or (MyHun <> "") Then
NoToTxt2 = ReMark + Mybillion + MyMillion + MyThou + MyHun + " " + MyCur + MyAnd + MyFraction + " " + MySubCur
Else
NoToTxt2 = ReMark + MyFraction + " " + MySubCur
End If
Else
NoToTxt2 = ReMark + Mybillion + MyMillion + MyThou + MyHun + " " + MyCur
End If

End Function
Attribute VB_Name = "AliElshahri"


Option Explicit
Dim NUM As Variant, amount As Variant
Dim HALLH As Variant
Dim subnum As Variant
Dim wrd As Variant

Function NO_TO_WORD(Myno) As Variant
amount = Myno
NUM = Val(amount)

 If IsNull(amount) Then
 Exit Function
 End If
 If NUM < 0 Then
NUM = NUM * -1
 End If
 
 
 HALLH = ""

If InStr(amount, ".") = 0 Then
       
       NUM = amount
Else
       NUM = Mid(amount, 1, InStr(amount, ".") - 1)
       
       HALLH = Mid(amount, InStr(amount, ".") + 1, 2)
       If Len(HALLH) = 1 Then
       HALLH = HALLH + "0"
       
       End If
       
End If

       wrd = ""
       
       If g4(NUM) Then  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
       End If
       
       If n1000_999999(NUM) Then
       End If
       
       If n100_999(NUM) Then
       End If
       
       If n1_99(NUM) Then
       End If
       
      If Trim(wrd) <> "" Then
      
      
      NO_TO_WORD = wrd + " |fffd||fffd||fffd||fffd|"
       
       If HALLH <> "" Then
       
       wrd = ""
       
       If HALLH_99(HALLH) Then
       End If
       
       If Left(HALLH, 1) = "0" Then
       NO_TO_WORD = NO_TO_WORD + " |fffd| " + wrd + " |fffd||fffd||fffd||fffd||fffd|"
       Else
       NO_TO_WORD = NO_TO_WORD + " |fffd| " + wrd + " |fffd||fffd||fffd||fffd|"
       End If
       
       
       End If
       
      
      End If
      
    End Function
    
    
    Function n1000_999999(XsX As Variant)

    If NUM >= 1000 And NUM <= 999999 Then
    
       If NUM < 2000 Then
       
          wrd = " |fffd||fffd||fffd| "
          NUM = NUM - 1000
          If NUM <> 0 Then
             wrd = wrd + " |fffd| "
          End If
       ElseIf NUM >= 2000 And NUM <= 2999 Then
       
          wrd = "|fffd||fffd||fffd||fffd||fffd| "
          NUM = NUM - 2000
          If NUM <> 0 Then
             wrd = wrd + " |fffd| "
          End If
          
       ElseIf NUM <= 9999 Then
       
          If g1((Val(Left(NUM, 1)))) Then
          End If
          
          wrd = wrd + " |fffd||fffd||fffd||fffd| "
          
           NUM = NUM - (Val(Left(NUM, 1)) * 1000)
          
          If NUM <> 0 Then
          
             wrd = wrd + " |fffd| "
          End If
          
          
       Else
          
          Dim old_num As Double
          
          
          old_num = NUM
         
          NUM = Val(Mid(NUM, 1, Len(NUM) - 3))
          
         If n100_999(NUM) Then
         End If
         If n1_99(NUM) Then
         End If
         
         
          
          wrd = wrd + " |fffd||fffd||fffd| "
          
          
          NUM = old_num
          
          If Val(Right(NUM, 3)) <> 0 Then
          
             wrd = wrd + " |fffd| "
             
          End If
          
          NUM = Val(Right(NUM, 3))
          
       End If
       
    End If
        
End Function

    
    Function n100_999(XsX As Variant)

    If NUM >= 100 And NUM <= 999 Then
    
       If g3(Val(Left(LTrim(Str(NUM)), 1)) * 100) Then
       End If
       
       NUM = NUM - (Val(Left(LTrim(Str(NUM)), 1)) * 100)
       If NUM <> 0 Then
       
          wrd = wrd + " |fffd| "
       End If
    End If
    End Function
    
    Function n1_99(XsX As Variant)

        If NUM >= 20 And NUM <= 99 Then
    
       If Val(Right(Str(NUM), 1)) <> 0 Then
       
          If g1(Val(Right(Str(NUM), 1))) Then
          End If
          
          
          wrd = wrd + " |fffd| "
          
       End If
       If g2((Val(Left(LTrim(Str(NUM)), 1)) * 10)) Then
       End If
       
       
    ElseIf NUM >= 13 And NUM <= 19 Then
    
       If g1(Val(Right(Str(NUM), 1))) Then
       End If
       
       
       wrd = wrd + " |fffd||fffd||fffd||fffd|"
       
    ElseIf NUM >= 1 And NUM <= 12 Then
    
       If g1(NUM) Then
       End If
       
    End If
    
    End Function
    Function HALLH_99(XsX As Variant)

        If HALLH >= 20 And HALLH <= 99 Then
    
       If Val(Right(Str(HALLH), 1)) <> 0 Then
       
          If g1(Val(Right(Str(HALLH), 1))) Then
          End If
          
          
          wrd = wrd + " |fffd| "
          
       End If
       If g2((Val(Left(LTrim(Str(HALLH)), 1)) * 10)) Then
       End If
       
       
    ElseIf HALLH >= 13 And HALLH <= 19 Then
    
       If g1(Val(Right(Str(HALLH), 1))) Then
       End If
       
       
       wrd = wrd + " |fffd||fffd||fffd||fffd|"
       
    ElseIf HALLH >= 1 And HALLH <= 12 Then
    
       If g1(HALLH) Then
       End If
       
    End If
    
    End Function
    
    
    
    
    Function g1(x As Variant)

    subnum = x
    
    If subnum = 1 Then
    
       wrd = wrd + "|fffd||fffd||fffd||fffd|"
    ElseIf subnum = 2 Then
    
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 3 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 4 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 5 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd|"
    ElseIf subnum = 6 Then
       wrd = wrd + "|fffd||fffd||fffd|"
    ElseIf subnum = 7 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd|"
    ElseIf subnum = 8 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 9 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd|"
    ElseIf subnum = 10 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd|"
    ElseIf subnum = 11 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd|"
    ElseIf subnum = 12 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd|"
    End If
    
    End Function
    
    Function g2(x As Variant)

    subnum = x
    
    If subnum = 20 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 30 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 40 Then
    wrd = wrd + "|fffd||fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 50 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 60 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd|"
    ElseIf subnum = 70 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 80 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 90 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd|"
    End If
    
    End Function
    
    Function g3(x As Variant)

    subnum = x
    
    If subnum = 100 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd|"
    ElseIf subnum = 200 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 300 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 400 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 500 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 600 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 700 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 800 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 900 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    End If
    
    End Function
    
    Function g4(x As Variant)

 If x >= 1000000 Then
 subnum = x

 subnum = Val(Left(LTrim(Str(NUM)), 2))
 NUM = NUM - (Val(Left(LTrim(Str(NUM)), 1)) * 1000000)
 
 Else
 
 Exit Function
 
End If

    If subnum = 1 Then
    
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 2 Then
    
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 3 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 4 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 5 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 6 Then
       wrd = wrd + "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 7 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 8 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 9 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 10 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 11 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
    ElseIf subnum = 12 Then
       wrd = wrd + "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
    End If
    If NUM <> 0 Then
    wrd = wrd + " |fffd| "
    End If
    
    
    End Function


'Private Sub Text2_Change()
'
'End Sub

'Private Sub Command1_Click()
'amount = ""
'Text1.Text = ""
'Label1.Visible = False
'amount.SetFocus
'
'End Sub

'Private Sub Command2_Click()
'End
'End Sub

'Private Sub Command3_Click()
'Call NO_TO_WORD
'Text1.Text = NO_TO_WORD
'Label1.Visible = True
'End Sub

'Private Sub Form_Load()
'Command1.Caption = "&|fffd||fffd||fffd| |fffd||fffd||fffd||fffd|"
'Command2.Caption = "&|fffd||fffd||fffd||fffd|"
'Command3.Caption = "&|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
'Label1.Visible = False
'End Sub

Attribute VB_Name = "Mefreg"

Function write_Number(numberp) ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
On Error Resume Next
Dim ttpa, xp, a, number_s, fl As String
number_s = Str(numberp)
If Left(Right(number_s, 2), 1) = "." Then number_s = number_s & "0"
If Left(Right(number_s, 3), 1) <> "." Then number_s = number_s & ".00"
number_s = Trim(number_s)
' MsgBox " number_s = " & number_s
zp = Len(number_s)
z = 1
Do While zp > 0
c1 = ""
c2 = ""
c3 = ""
If zp = 12 Or zp = 9 Or zp = 6 Then
a = Mid(number_s, z, 1)
zp = zp - 1
Select Case a
Case "0"
c3 = ""
Case "1"
c3 = "|fffd||fffd||fffd||fffd||fffd| "
Case "2"
c3 = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
Case "3"
c3 = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
Case "4"
c3 = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
Case "5"
c3 = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
Case "6"
c3 = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
Case "7"
c3 = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
Case "8"
c3 = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
Case "9"
c3 = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
End Select
z = z + 1
End If
If zp = 3 Then
z = z + 1
zp = zp - 1
End If
a = Mid(number_s, z, 1)
If zp = 2 Or zp = 5 Or zp = 8 Or zp = 11 Then
Select Case a
Case "0"
c2 = ""
Case "1"
c2 = "|fffd||fffd||fffd| "
Case "2"
c2 = "|fffd||fffd||fffd||fffd||fffd||fffd| "
Case "3"
c2 = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
Case "4"
c2 = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
Case "5"
c2 = "|fffd||fffd||fffd||fffd||fffd||fffd| "
Case "6"
c2 = "|fffd||fffd||fffd||fffd||fffd| "
Case "7"
c2 = "|fffd||fffd||fffd||fffd||fffd||fffd| "
Case "8"
c2 = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
Case "9"
c2 = "|fffd||fffd||fffd||fffd||fffd||fffd| "
End Select
zp = zp - 1
z = z + 1
End If
a = Mid(number_s, z, 1)
If zp = 1 Then ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Select Case a
Case "0"
c1 = ""
Case "1"
If c2 = "|fffd||fffd||fffd| " Then
c1 = "|fffd||fffd||fffd||fffd||fffd| "
Else
c1 = "|fffd||fffd||fffd||fffd||fffd| "
End If
Case "2"
If c2 = "|fffd||fffd||fffd| " Then
c1 = "|fffd||fffd||fffd||fffd||fffd||fffd| "
Else
c1 = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
End If
Case "3"
c1 = "|fffd||fffd||fffd||fffd||fffd| "
Case "4"
c1 = "|fffd||fffd||fffd||fffd||fffd| "
Case "5"
c1 = "|fffd||fffd||fffd||fffd| "
Case "6"
c1 = "|fffd||fffd||fffd| "
Case "7"
c1 = "|fffd||fffd||fffd||fffd| "
Case "8"
c1 = "|fffd||fffd||fffd||fffd||fffd| "
Case "9"
c1 = "|fffd||fffd||fffd||fffd| "
End Select
Else ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Select Case a
Case "0"
c1 = ""
If c2 = "|fffd||fffd||fffd| " Then
c2 = "|fffd||fffd||fffd||fffd||fffd| "
End If
Case "1"
If c2 = "|fffd||fffd||fffd| " Then
c1 = "|fffd||fffd||fffd||fffd||fffd| "
Else
c1 = "|fffd||fffd||fffd||fffd||fffd| "
End If
Case "2"
If c2 = "|fffd||fffd||fffd| " Then
c1 = "|fffd||fffd||fffd||fffd||fffd| "
Else
c1 = "|fffd||fffd||fffd||fffd||fffd||fffd| "
End If
Case "3"
c1 = "|fffd||fffd||fffd||fffd||fffd||fffd| "
Case "4"
c1 = "|fffd||fffd||fffd||fffd||fffd||fffd| "
Case "5"
c1 = "|fffd||fffd||fffd||fffd||fffd| "
Case "6"
c1 = "|fffd||fffd||fffd||fffd| "
Case "7"
c1 = "|fffd||fffd||fffd||fffd||fffd| "
Case "8"
c1 = "|fffd||fffd||fffd||fffd||fffd||fffd| "
Case "9"
c1 = "|fffd||fffd||fffd||fffd||fffd| "
End Select
End If
zp = zp - 1
z = z + 1
Select Case zp
Case 9
Select Case c1 + c2 + c3
Case "|fffd||fffd||fffd||fffd||fffd| "
xp = xp + "|fffd||fffd||fffd||fffd||fffd||fffd| "
Case "|fffd||fffd||fffd||fffd||fffd||fffd| "
xp = xp + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Case Else
xp = xp + c3 + c1 + c2 + "|fffd||fffd||fffd||fffd||fffd| "
End Select
Case 6
Select Case c1 + c2 + c3
Case "|fffd||fffd||fffd||fffd||fffd| "
xp = xp + "|fffd||fffd||fffd||fffd| "
Case "|fffd||fffd||fffd||fffd||fffd||fffd| "
xp = xp + "|fffd||fffd||fffd||fffd||fffd||fffd| "
Case "|fffd||fffd||fffd||fffd||fffd||fffd| "
xp = xp + "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| "
Case "|fffd||fffd||fffd||fffd||fffd||fffd| "
xp = xp + "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| "
Case "|fffd||fffd||fffd||fffd||fffd| "
xp = xp + "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| "
Case "|fffd||fffd||fffd||fffd| "
xp = xp + "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| "
Case "|fffd||fffd||fffd||fffd||fffd| "
xp = xp + "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| "
Case "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
xp = xp + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| "
Case "|fffd||fffd||fffd||fffd||fffd| "
xp = xp + "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| "
Case Else
If c2 = "|fffd||fffd||fffd||fffd||fffd| " Then
xp = xp + c3 + c1 + c2 + "|fffd||fffd||fffd||fffd| "
Else
xp = xp + c3 + c1 + c2 + "|fffd||fffd||fffd| "
End If
End Select
Case 3
If c2 = "" Then
Select Case c1
Case ""
c1 = "|fffd||fffd||fffd||fffd| "
Case "|fffd||fffd||fffd||fffd||fffd| "
c1 = "|fffd||fffd||fffd||fffd||fffd||fffd| "
Case "|fffd||fffd||fffd||fffd||fffd||fffd| "
c1 = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
Case "|fffd||fffd||fffd||fffd||fffd||fffd| "
c1 = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| "
Case "|fffd||fffd||fffd||fffd||fffd||fffd| "
c1 = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| "
Case "|fffd||fffd||fffd||fffd||fffd| "
c1 = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| "
Case "|fffd||fffd||fffd||fffd| "
c1 = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| "
Case "|fffd||fffd||fffd||fffd||fffd| "
c1 = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| "
Case "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
c1 = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| "
Case "|fffd||fffd||fffd||fffd||fffd| "
c1 = "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| "
End Select
xp = xp + c3 + c1 + c2
Else
xp = xp + c3 + c1 + c2 + "|fffd||fffd||fffd||fffd||fffd||fffd| "
End If
Case 0
If c1 + c2 <> "" Then
If c2 = "" Then
Select Case c1
Case "|fffd||fffd||fffd||fffd||fffd| "
xp = xp + "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|"
Case "|fffd||fffd||fffd||fffd||fffd||fffd| "
xp = xp + "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
Case Else
xp = xp + c1 + "|fffd||fffd||fffd||fffd||fffd| "
End Select
Else
xp = xp + c1 + c2 + "|fffd||fffd||fffd||fffd| "
End If
End If
End Select
Loop
xp = LTrim(xp)
zp = Len(xp) - 1
If Left(xp, 1) = "|fffd|" Then
xp = Mid(xp, 2, zp)
End If
ttpa = xp
write_Number = ttpa
End Function

Attribute VB_Name = "Module1"
Function GetNo(ns As String, sex As Integer, Power As Integer, frst() As String, frst1() As String, scnd() As String, thrd() As String) As String
  Dim Lngth As Integer, InvSex  As Integer
  ReDim Indx(3) As Integer
  ReDim TmpArray(2) As String
  Dim tms As String

  If sex = 0 Then
    InvSex = 1
  Else
    InvSex = 0
  End If
  Lngth = Len(ns)
  Indx(1) = Val(Mid$(ns, Lngth, 1))
  TmpArray(0) = frst(Indx(1), sex)
  Lngth = Lngth - 1
  If Lngth > 0 Then
    Indx(2) = Val(Mid$(ns, Lngth, 1))
    If TmpArray(0) <> "" Then
      TmpArray(1) = scnd(Indx(2), InvSex)
    Else
      TmpArray(1) = scnd(Indx(2), sex)
    End If
    If (Indx(2) > 1) And (TmpArray(0) <> "") Then
      TmpArray(0) = TmpArray(0) + " |fffd|"
    ElseIf (Indx(1) = 1) And (Indx(2) = 1) Then
      TmpArray(0) = frst1(1, sex)
    ElseIf (Indx(1) = 2) And (Indx(2) = 1) Then
      TmpArray(0) = frst1(2, sex)
    End If
    Lngth = Lngth - 1
    If Lngth > 0 Then
      Indx(3) = Val(Mid$(ns, Lngth, 1))
      TmpArray(2) = thrd(Indx(3))
      If (Indx(3) > 0) And ((TmpArray(0) <> "") Or (TmpArray(1) <> "")) Then TmpArray(2) = TmpArray(2) + " |fffd|"
    Else
      GoTo last
    End If
  Else
    GoTo last
  End If
last:
Select Case Power
  Case Is = -1
   tms = TmpArray(2) & TmpArray(0) & TmpArray(1)
   'If (TmpArray(0) <> "") And (TmpArray(1) = "") And (TmpArray(2) = "") Then
      GetNo = tms '& " |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    'ElseIf (TmpArray(0) <> "") And (TmpArray(1) <> "") And (TmpArray(2) = "") Then
      ' GetNo = tms '& " |fffd||fffd||fffd||fffd||fffd||fffd|"
    'ElseIf (TmpArray(0) <> "") And (TmpArray(1) <> "") And (TmpArray(2) <> "") Then
      ' GetNo = tms '& " |fffd||fffd||fffd||fffd||fffd||fffd|"
  '  End If
  Case Is = 0
    GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1)
  Case Is = 1
    If (Indx(1) = 1) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = " |fffd||fffd||fffd| "
    ElseIf (Indx(1) = 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = " |fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) > 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = TmpArray(0) & " |fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 0) And (Indx(2) = 1) And (Indx(3) = 0) Then
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 0) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1)
    Else
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd| "
    End If
  Case Is = 2
    If (Indx(1) = 1) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = " |fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = " |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) > 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = TmpArray(0) & " |fffd||fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 0) And (Indx(2) = 1) And (Indx(3) = 0) Then
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 0) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1)
    Else
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd||fffd| "
    End If
  Case Is = 3
    If (Indx(1) = 1) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = " |fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = " |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) > 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = TmpArray(0) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 0) And (Indx(2) = 1) And (Indx(3) = 0) Then
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
    Else
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd||fffd| "
    End If
 End Select
End Function
Function WriteNo(no As String, sex As Integer, Optional CurDesc As String, Optional CurDesc2 As String) As String
  
  Static FirstArray(9, 1) As String
  Static FirstArray1(2, 1)  As String
  Static SecondArray(9, 1) As String
  Static ThirdArray(9) As String
  
  ReDim Parts(4) As String
  ReDim PartStr(-1 To 3) As String
  
  Dim Length As Integer, I As Integer, TempLength As Integer
  Dim NoString As String, pos  As Integer
  Dim AfterPoint As String
  Dim txt As String

  FirstArray(1, 0) = "|fffd||fffd||fffd||fffd| ": FirstArray(2, 0) = "|fffd||fffd||fffd||fffd||fffd| ": FirstArray(3, 0) = "|fffd||fffd||fffd||fffd||fffd| "
  FirstArray(4, 0) = "|fffd||fffd||fffd||fffd||fffd| ": FirstArray(5, 0) = "|fffd||fffd||fffd||fffd| ": FirstArray(6, 0) = "|fffd||fffd||fffd| "
  FirstArray(7, 0) = "|fffd||fffd||fffd||fffd| ": FirstArray(8, 0) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": FirstArray(9, 0) = "|fffd||fffd||fffd||fffd| "

  FirstArray(1, 1) = "|fffd||fffd||fffd||fffd||fffd| ": FirstArray(2, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": FirstArray(3, 1) = "|fffd||fffd||fffd||fffd| "
  FirstArray(4, 1) = "|fffd||fffd||fffd||fffd| ": FirstArray(5, 1) = "|fffd||fffd||fffd| ": FirstArray(6, 1) = "|fffd||fffd| "
  FirstArray(7, 1) = "|fffd||fffd||fffd| ": FirstArray(8, 1) = "|fffd||fffd||fffd||fffd| ": FirstArray(9, 1) = "|fffd||fffd||fffd| "
                                                        
  FirstArray1(1, 0) = "|fffd||fffd||fffd| ": FirstArray1(2, 0) = "|fffd||fffd||fffd||fffd| "
  
  FirstArray1(1, 1) = "|fffd||fffd||fffd||fffd| ": FirstArray1(2, 1) = "|fffd||fffd||fffd||fffd||fffd| "
                     
  SecondArray(1, 0) = "|fffd||fffd||fffd||fffd| ": SecondArray(2, 0) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(3, 0) = "|fffd||fffd||fffd||fffd||fffd||fffd| "
  SecondArray(4, 0) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": SecondArray(5, 0) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(6, 0) = "|fffd||fffd||fffd||fffd| "
  SecondArray(7, 0) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(8, 0) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": SecondArray(9, 0) = "|fffd||fffd||fffd||fffd||fffd| "

  SecondArray(1, 1) = "|fffd||fffd||fffd| ": SecondArray(2, 1) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(3, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd| "
  SecondArray(4, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": SecondArray(5, 1) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(6, 1) = "|fffd||fffd||fffd||fffd| "
  SecondArray(7, 1) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(8, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": SecondArray(9, 1) = "|fffd||fffd||fffd||fffd||fffd| "


  ThirdArray(1) = "|fffd||fffd||fffd||fffd| ": ThirdArray(2) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(3) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
  ThirdArray(4) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(5) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(6) = "|fffd||fffd||fffd||fffd||fffd||fffd| "
  ThirdArray(7) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(8) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(9) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
  
  txt = "": I = -1

  If Val(no) = 0 Then
    WriteNo = "|fffd||fffd||fffd|"
    Exit Function
  End If
 
  NoString = Trim(no)
  NoString = Format(NoString, "##.00")
  Length = Len(NoString)
  pos = InStr(NoString, ".")
  If pos > 0 Then
    AfterPoint = Right$(NoString, Length - pos)
    NoString = Left$(NoString, pos - 1)
    Length = Len(NoString)
  Else
    pos = InStr(NoString, ",")
    If pos > 0 Then
      AfterPoint = Right$(NoString, Length - pos)
      NoString = Left$(NoString, pos - 1)
      Length = Len(NoString)
    End If
  End If
  TempLength = Length
  Parts(0) = NoString
  Do While TempLength >= 3
    TempLength = TempLength - 3
    I = I + 1
    Parts(I) = Right$(NoString, 3)
    NoString$ = Left$(NoString, TempLength)
  Loop
  Parts(I + 1) = NoString
  For I = 0 To 3
    If Len(Parts(I)) > 0 Then
      PartStr(I) = GetNo(Parts(I), sex, I, FirstArray(), FirstArray1(), SecondArray(), ThirdArray())
    Else
      Exit For
    End If
  Next
  For I = 3 To 0 Step -1
    If Len(PartStr(I)) > 0 Then
      If Len(PartStr(I - 1)) > 0 Then
        txt = txt & " " & PartStr(I) & "|fffd|"
      Else
        txt = txt & " " & PartStr(I) & " "
      End If
    End If
  Next
  If Val(AfterPoint) > 0 Then
  Dim temp As String
  temp = GetNo(AfterPoint, sex, -1, FirstArray(), FirstArray1(), SecondArray(), ThirdArray())
    txt = txt & CurDesc & " " & "|fffd|" & temp & " " & CurDesc2
   WriteNo = txt
  Else
  WriteNo = txt & " " & CurDesc
End If
End Function





Attribute VB_Name = "Module2"
Sub Tarheel()

For R = 2 To [A65536].End(xlUp).Row
With Sheets("BANK_MOVEMENT").[A65536].End(xlUp)
.Offset(1, 0) = Sheets("CHEQUE").Cells(R, 11)
.Offset(1, 1) = Sheets("CHEQUE").Cells(R, 12)
.Offset(1, 2) = Sheets("CHEQUE").Cells(R, 13)
.Offset(1, 3) = Sheets("CHEQUE").Cells(R, 14)
.Offset(1, 5) = Sheets("CHEQUE").Cells(R, 15)
End With
Next R
MsgBox "!|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|", vbInformation, "|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
End Sub

Attribute VB_Name = "Module3"
Sub CLEAR_CONTENTS()
Attribute CLEAR_CONTENTS.VB_ProcData.VB_Invoke_Func = " \n14"
  Dim intNewOrderNo As Integer
intNewOrderNo = Range("B1") + 1

Range("B1") = intNewOrderNo
    Range("B2,B7,B43").Select
    Selection.ClearContents
    Range("B2").Select
End Sub
Attribute VB_Name = "Module31"
Function GetNo(ns As String, sex As Integer, Power As Integer, frst() As String, frst1() As String, scnd() As String, thrd() As String) As String
  Dim Lngth As Integer, InvSex  As Integer
  ReDim Indx(3) As Integer
  ReDim TmpArray(2) As String
  Dim tms As String

  If sex = 0 Then
    InvSex = 1
  Else
    InvSex = 0
  End If
  Lngth = Len(ns)
  Indx(1) = Val(Mid$(ns, Lngth, 1))
  TmpArray(0) = frst(Indx(1), sex)
  Lngth = Lngth - 1
  If Lngth > 0 Then
    Indx(2) = Val(Mid$(ns, Lngth, 1))
    If TmpArray(0) <> "" Then
      TmpArray(1) = scnd(Indx(2), InvSex)
    Else
      TmpArray(1) = scnd(Indx(2), sex)
    End If
    If (Indx(2) > 1) And (TmpArray(0) <> "") Then
      TmpArray(0) = TmpArray(0) + " |fffd|"
    ElseIf (Indx(1) = 1) And (Indx(2) = 1) Then
      TmpArray(0) = frst1(1, sex)
    ElseIf (Indx(1) = 2) And (Indx(2) = 1) Then
      TmpArray(0) = frst1(2, sex)
    End If
    Lngth = Lngth - 1
    If Lngth > 0 Then
      Indx(3) = Val(Mid$(ns, Lngth, 1))
      TmpArray(2) = thrd(Indx(3))
      If (Indx(3) > 0) And ((TmpArray(0) <> "") Or (TmpArray(1) <> "")) Then TmpArray(2) = TmpArray(2) + " |fffd|"
    Else
      GoTo last
    End If
  Else
    GoTo last
  End If
last:
Select Case Power
  Case Is = -1
   tms = TmpArray(2) & TmpArray(0) & TmpArray(1)
   'If (TmpArray(0) <> "") And (TmpArray(1) = "") And (TmpArray(2) = "") Then
      GetNo = tms '& " |fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    'ElseIf (TmpArray(0) <> "") And (TmpArray(1) <> "") And (TmpArray(2) = "") Then
      ' GetNo = tms '& " |fffd||fffd||fffd||fffd||fffd||fffd|"
    'ElseIf (TmpArray(0) <> "") And (TmpArray(1) <> "") And (TmpArray(2) <> "") Then
      ' GetNo = tms '& " |fffd||fffd||fffd||fffd||fffd||fffd|"
  '  End If
  Case Is = 0
    GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1)
  Case Is = 1
    If (Indx(1) = 1) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = " |fffd||fffd||fffd| "
    ElseIf (Indx(1) = 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = " |fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) > 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = TmpArray(0) & " |fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 0) And (Indx(2) = 1) And (Indx(3) = 0) Then
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 0) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1)
    Else
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd| "
    End If
  Case Is = 2
    If (Indx(1) = 1) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = " |fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = " |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) > 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = TmpArray(0) & " |fffd||fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 0) And (Indx(2) = 1) And (Indx(3) = 0) Then
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 0) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1)
    Else
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd||fffd| "
    End If
  Case Is = 3
    If (Indx(1) = 1) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = " |fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = " |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) > 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = TmpArray(0) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 0) And (Indx(2) = 1) And (Indx(3) = 0) Then
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
    Else
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd||fffd| "
    End If
 End Select
End Function
Function WriteNo(no As String, sex As Integer, Optional CurDesc As String, Optional CurDesc2 As String) As String
  
  Static FirstArray(9, 1) As String
  Static FirstArray1(2, 1)  As String
  Static SecondArray(9, 1) As String
  Static ThirdArray(9) As String
  
  ReDim Parts(4) As String
  ReDim PartStr(-1 To 3) As String
  
  Dim Length As Integer, I As Integer, TempLength As Integer
  Dim NoString As String, pos  As Integer
  Dim AfterPoint As String
  Dim txt As String

  FirstArray(1, 0) = "|fffd||fffd||fffd||fffd| ": FirstArray(2, 0) = "|fffd||fffd||fffd||fffd||fffd| ": FirstArray(3, 0) = "|fffd||fffd||fffd||fffd||fffd| "
  FirstArray(4, 0) = "|fffd||fffd||fffd||fffd||fffd| ": FirstArray(5, 0) = "|fffd||fffd||fffd||fffd| ": FirstArray(6, 0) = "|fffd||fffd||fffd| "
  FirstArray(7, 0) = "|fffd||fffd||fffd||fffd| ": FirstArray(8, 0) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": FirstArray(9, 0) = "|fffd||fffd||fffd||fffd| "

  FirstArray(1, 1) = "|fffd||fffd||fffd||fffd||fffd| ": FirstArray(2, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": FirstArray(3, 1) = "|fffd||fffd||fffd||fffd| "
  FirstArray(4, 1) = "|fffd||fffd||fffd||fffd| ": FirstArray(5, 1) = "|fffd||fffd||fffd| ": FirstArray(6, 1) = "|fffd||fffd| "
  FirstArray(7, 1) = "|fffd||fffd||fffd| ": FirstArray(8, 1) = "|fffd||fffd||fffd||fffd| ": FirstArray(9, 1) = "|fffd||fffd||fffd| "
                                                        
  FirstArray1(1, 0) = "|fffd||fffd||fffd| ": FirstArray1(2, 0) = "|fffd||fffd||fffd||fffd| "
  
  FirstArray1(1, 1) = "|fffd||fffd||fffd||fffd| ": FirstArray1(2, 1) = "|fffd||fffd||fffd||fffd||fffd| "
                     
  SecondArray(1, 0) = "|fffd||fffd||fffd||fffd| ": SecondArray(2, 0) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(3, 0) = "|fffd||fffd||fffd||fffd||fffd||fffd| "
  SecondArray(4, 0) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": SecondArray(5, 0) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(6, 0) = "|fffd||fffd||fffd||fffd| "
  SecondArray(7, 0) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(8, 0) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": SecondArray(9, 0) = "|fffd||fffd||fffd||fffd||fffd| "

  SecondArray(1, 1) = "|fffd||fffd||fffd| ": SecondArray(2, 1) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(3, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd| "
  SecondArray(4, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": SecondArray(5, 1) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(6, 1) = "|fffd||fffd||fffd||fffd| "
  SecondArray(7, 1) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(8, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": SecondArray(9, 1) = "|fffd||fffd||fffd||fffd||fffd| "


  ThirdArray(1) = "|fffd||fffd||fffd||fffd| ": ThirdArray(2) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(3) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
  ThirdArray(4) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(5) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(6) = "|fffd||fffd||fffd||fffd||fffd||fffd| "
  ThirdArray(7) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(8) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(9) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
  
  txt = "": I = -1

  If Val(no) = 0 Then
    WriteNo = "|fffd||fffd||fffd|"
    Exit Function
  End If
 
  NoString = Trim(no)
  NoString = Format(NoString, "##.00")
  Length = Len(NoString)
  pos = InStr(NoString, ".")
  If pos > 0 Then
    AfterPoint = Right$(NoString, Length - pos)
    NoString = Left$(NoString, pos - 1)
    Length = Len(NoString)
  Else
    pos = InStr(NoString, ",")
    If pos > 0 Then
      AfterPoint = Right$(NoString, Length - pos)
      NoString = Left$(NoString, pos - 1)
      Length = Len(NoString)
    End If
  End If
  TempLength = Length
  Parts(0) = NoString
  Do While TempLength >= 3
    TempLength = TempLength - 3
    I = I + 1
    Parts(I) = Right$(NoString, 3)
    NoString$ = Left$(NoString, TempLength)
  Loop
  Parts(I + 1) = NoString
  For I = 0 To 3
    If Len(Parts(I)) > 0 Then
      PartStr(I) = GetNo(Parts(I), sex, I, FirstArray(), FirstArray1(), SecondArray(), ThirdArray())
    Else
      Exit For
    End If
  Next
  For I = 3 To 0 Step -1
    If Len(PartStr(I)) > 0 Then
      If Len(PartStr(I - 1)) > 0 Then
        txt = txt & " " & PartStr(I) & "|fffd|"
      Else
        txt = txt & " " & PartStr(I) & " "
      End If
    End If
  Next
  If Val(AfterPoint) > 0 Then
  Dim temp As String
  temp = GetNo(AfterPoint, sex, -1, FirstArray(), FirstArray1(), SecondArray(), ThirdArray())
    txt = txt & CurDesc & " " & "|fffd|" & temp & " " & CurDesc2
   WriteNo = txt
  Else
  WriteNo = txt & " " & CurDesc
End If
End Function






Attribute VB_Name = "Module4"
Sub PRINT_CP_1160()
Attribute PRINT_CP_1160.VB_ProcData.VB_Invoke_Func = " \n14"
'
' PRINT_CP_1160 Macro
'

'
    Application.ActivePrinter = "hp cp1160 on Ne05:"
    ExecuteExcel4Macro "PRINT(1,,,1,,,,,,,,2,""hp cp1160 on Ne05:"",,TRUE,,FALSE)"
End Sub
Attribute VB_Name = "Module41"
Option Explicit

Public Const vArabic As Byte = 1
Public Const vEnglish As Byte = 2
Public Const vMale As Byte = 0
Public Const vFemale As Byte = 1

Function Delete(S As String, Index, Count As Integer) As String
  Delete = Left(S, Index - 1) + _
           Mid(S, Index + Count, Len(S))
End Function

Function Insert(Source, S As String, Index As Integer) As String
  Dim LPart, RPart As String
  
  LPart = Left(S, Index - 1)
  RPart = Mid(S, Index, Len(S))
  Insert = LPart & Source & RPart
End Function

Function AddAnd(S1, S2, S3, And_ As String, Lang As Byte) As String
  Dim InAnd_, CollectS As String
    
  If Lang = vArabic Then InAnd_ = " " + And_ Else InAnd_ = And_ + " "
  If (S1 <> "") And (S2 <> "") Then And_ = InAnd_ Else And_ = ""
  CollectS = S1 + And_ + S2
  If (CollectS <> "") And (S3 <> "") Then And_ = InAnd_ Else And_ = ""
  AddAnd = CollectS + And_ + S3
End Function

Function Fmale(NUM, sex As Byte, Female()) As String
  Dim Two(1 To 4) As String
  Dim InSex As Byte
    
  Two(1) = "|fffd||fffd||fffd|"
  Two(2) = "|fffd||fffd||fffd||fffd||fffd|"
  Two(3) = "|fffd||fffd||fffd||fffd|"
  Two(4) = "|fffd|"
      
  Select Case sex
    Case vMale:
      Select Case NUM
        Case 1:             Fmale = Mid(Female(1), 1, 4)
        Case 2:             Fmale = Two(2)
        Case 8:             Fmale = Female(NUM) + "|fffd|" + Two(4)
        Case 3 To 7, 9, 10: Fmale = Female(NUM) + Two(4)
        Case 11:            Fmale = Two(1) + " " + Female(10)
        Case 12:            Fmale = Mid(Two(2), 1, 4) + " " + Female(10)
        Case 13 To 19:      Fmale = Female(NUM - 10) + Two(4) + " " + Female(10)
      End Select
    Case vFemale:
      Select Case NUM
        Case 1 To 10:       Fmale = Female(NUM)
        Case 11:            Fmale = Two(3) + " " + Female(10) + Two(4)
        Case 12:            Fmale = Mid(Female(2), 1, 5) + " " + Female(10) + Two(4)
        Case 13 To 19:      Fmale = Female(NUM - 10) + " " + Female(10) + Two(4)
      End Select
    End Select
End Function

Function Tens(NUM As Byte, Female()) As String
  Const Noon = "|fffd||fffd|"
      
  Select Case NUM
    Case 2:      Tens = Female(10) + Noon
    Case 3 To 9: Tens = Female(NUM) + Noon
  End Select
End Function

Function Hunds(NUM As Byte, Female()) As String
  Const Hund = "|fffd||fffd||fffd||fffd|"
      
  Select Case NUM
    Case 1:      Hunds = Hund
    Case 2:      Hunds = Mid(Hund, 1, 3) + Mid(Female(2), 4, 3)
    Case 3 To 9: Hunds = Female(NUM) + Hund
   End Select
End Function

Function Tenteen(NUM As Byte, ETens()) As String
  Const een = "een"
  
  NUM = NUM Mod 10
  Select Case NUM
    Case 3 To 9:
      Tenteen = Mid(ETens(NUM), 1, Len(ETens(NUM)) - 1) + een
  End Select
End Function

Function EHunds(NUM As Byte, ESingle()) As String
  EHunds = ESingle(NUM) + " hundred"
End Function

Function ReFormat(InNum As Double, dec As Byte) As Double
  Dim NewFormat As String
  Dim K As Byte
  
  If dec > 0 Then NewFormat = "0." Else NewFormat = "0"
  For K = 1 To dec
    NewFormat = NewFormat + "0"
  Next K
     
  ReFormat = Format(InNum, NewFormat)
End Function

Function ReStr(InNum As String) As String
  Dim K, Digits As Byte
  Dim Num_ As String
  
  Num_ = LTrim(InNum)
  K = InStr(1, Num_, "E+", 1)
  If K > 0 Then
    Digits = Val(Mid(Num_, K + 2, 3))
    Num_ = Left(Num_, K - 1)
    Num_ = Delete(Num_, 2, 1)
    Do While Len(Num_) - 1 < Digits
      Num_ = Insert(Num_, "0", 1)
    Loop
  End If
  ReStr = Num_
End Function

Function AOnly(Num_, FracS, Single_, Double_, Ploral_ As String, Parts, sex, dec As Byte) As String
  Const And_ As String * 1 = "|fffd|"
  Const Lang = vArabic
  Dim PartNum(0 To 5) As Long
  Dim Result1(0 To 5) As String
  Dim N1, N2, N3, TempI, Sex2, K As Byte
  Dim Only_    As String
  Dim OnlyPart As String
  Dim N1_, N2_ As String
  Dim N3_      As String
  Dim Part_    As String
  Dim TempS    As String
  Dim Female(1 To 10) As Variant
  Dim Parts_(0 To 11) As String
    
  If Val(Num_) = 0 Then
    AOnly = RTrim("|fffd||fffd||fffd| |fffd||fffd||fffd| " & Single_)
    Exit Function
  End If
  
  Female(1) = "|fffd||fffd||fffd||fffd||fffd|"
  Female(2) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
  Female(3) = "|fffd||fffd||fffd||fffd|"
  Female(4) = "|fffd||fffd||fffd||fffd|"
  Female(5) = "|fffd||fffd||fffd|"
  Female(6) = "|fffd||fffd|"
  Female(7) = "|fffd||fffd||fffd|"
  Female(8) = "|fffd||fffd||fffd||fffd|"
  Female(9) = "|fffd||fffd||fffd|"
  Female(10) = "|fffd||fffd||fffd|"
   
  Parts_(0) = ""
  Parts_(1) = "|fffd||fffd||fffd|"
  Parts_(2) = "|fffd||fffd||fffd||fffd||fffd|"
  Parts_(3) = "|fffd||fffd||fffd||fffd||fffd|"
  Parts_(4) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
  Parts_(5) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
  Parts_(6) = ""
  Parts_(7) = "|fffd||fffd||fffd||fffd|"
  Parts_(8) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
  Parts_(9) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
  Parts_(10) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
  Parts_(11) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
 
  For K = 0 To Parts - 1
    PartNum(K) = Val(Mid(Num_, (K * 3) + 1, 3))
  Next K
    
    Sex2 = sex
    For K = 0 To (Parts - 1)
      If K = (Parts - 1) Then sex = Sex2 Else sex = vMale
      TempS = Mid(Num_, (K * 3) + 1, 3)
      TempI = Val(Mid(TempS, 2, 2))
      N1 = Val(Mid(TempS, 1, 1))
      N2 = Val(Mid(TempS, 2, 1))
      N3 = Val(Mid(TempS, 3, 1))
      '{------------------------------------------}
      N1_ = "": N2_ = "": N3_ = ""
      If N1 > 0 Then N1_ = Hunds(CByte(N1), Female())
      If PartNum(K) = 200 Then N1_ = Mid(N1_, 1, Len(N1_) - 1)
      Select Case TempI
        Case 1 To 2:
          If K = Parts - 1 Then If FracS <> "" Then N3_ = Fmale(N3, CByte(sex), Female())  'Sex
        Case 3 To 19:
          N3_ = Fmale(TempI, CByte(sex), Female())
        Case 20 To 99:
          N2_ = Tens(CByte(N2), Female())
          If N3 > 0 Then N3_ = Fmale(N3, CByte(sex), Female())
          If (N3 Mod 10 = 1) And (sex = vFemale) Then N3_ = "|fffd||fffd||fffd||fffd|"
      End Select
      OnlyPart = AddAnd(N1_, N3_, N2_, And_, Lang)
      '{------------------------------------------}
      If PartNum(K) > 100 Then
        Select Case TempI
          Case 1, 2:
            OnlyPart = AddAnd(OnlyPart, Parts_(Parts - K - 1), "", "", Lang)
        End Select
      End If
      '{------------------------------------------}
      Part_ = ""
      If PartNum(K) > 0 Then
        Part_ = Parts_(Parts - K - 1)
        If Part_ <> "" Then
          Select Case TempI
            Case 2:        Part_ = Part_ + "|fffd||fffd|"
            Case 3 To 10:  Part_ = Parts_((Parts - K - 1) + 6)
            Case 11 To 99: Part_ = Part_ + "|fffd|"
          End Select
        End If
      End If
      '{------------------------------------------}
      If Part_ <> "" Then
        If TempI >= 1 And TempI <= 2 Then
           OnlyPart = AddAnd(OnlyPart, Part_, "", And_, Lang)
        Else
          OnlyPart = AddAnd(OnlyPart, Part_, "", "", Lang)
        End If
      End If
      Result1(K) = (OnlyPart)
    Next K
    '{------------------------------------------}
    N1_ = AddAnd(Result1(0), Result1(1), Result1(2), And_, Lang)
    N2_ = AddAnd(Result1(3), Result1(4), Result1(5), And_, Lang)
    Only_ = AddAnd(N1_, N2_, "", And_, Lang)

    If FracS <> "" Then
      If Only_ <> "" Then FracS = " " + FracS
      Only_ = AddAnd(Only_, FracS, "", And_, Lang)
    End If
    If Only_ <> "" Then
      If Mid(Only_, Len(Only_), 1) = "|fffd|" Then
        If Mid(Only_, Len(Only_) - 1, 2) <> "|fffd||fffd|" Then
          Only_ = Mid(Only_, 1, Len(Only_) - 1)
        End If
      End If
      If TempS = "000" Then
        If Mid(Only_, Len(Only_) - 1, 2) = "|fffd||fffd|" Then
          Only_ = Mid(Only_, 1, Len(Only_) - 1)
        End If
      End If
    End If
    '{------------------------------------------}
    If FracS = "" Then
      Select Case TempI
        Case 0: If Only_ <> "" Then Only_ = AddAnd(Only_, Single_, "", "", Lang)
        Case 1: Only_ = AddAnd(Only_, AddAnd(Single_, Fmale(1, CByte(sex), Female()), "", "", Lang), "", And_, Lang)
        Case 2: Only_ = AddAnd(Only_, AddAnd(Double_, Fmale(2, CByte(sex), Female()), "", "", Lang), "", And_, Lang)
        Case 3 To 10: Only_ = AddAnd(Only_, Ploral_, "", "", Lang)
        Case 11 To 99:
          If Single_ <> "" Then
            Only_ = AddAnd(Only_, Single_, "", "", Lang)
            N1_ = Mid(Only_, Len(Only_), 1)
            Select Case N1_
              Case "|fffd|", "|fffd|", "|fffd|"
              Case Else
                Only_ = Only_ + "|fffd|"
            End Select
            N1_ = Mid(Only_, Len(Only_) - 2, 3)
            '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "|fffd||fffd||fffd|" |fffd| "|fffd||fffd||fffd|" 2002/02/15
            If N1_ = "|fffd||fffd||fffd|" And Single_ <> "|fffd||fffd||fffd||fffd|" Then
              Only_ = Left(Only_, Len(Only_) - 1)
            End If
         End If
      End Select
    Else
      Only_ = AddAnd(Only_, Single_, "", "", Lang)
    End If
    If Only_ <> "" Then Only_ = "|fffd||fffd||fffd| " + Only_
    AOnly = (Only_)
End Function

Function EOnly(Num_, FracS, Single_ As String, Parts, dec As Byte) As String
  Const Lang = vEnglish
  Dim ESingle(1 To 12) As Variant
  Dim ETens(2 To 9) As Variant
  Dim EParts_(0 To 5) As String
  Dim TempS As String
  Dim N1, N2, N3, TempI, Sex2 As Byte
  Dim N1_, N2_, N3_ As String
  Dim OnlyPart, Part_, Only_ As String
  Dim Leng, K As Integer
  Dim PartNum(0 To 5) As Long
  Dim Result1(0 To 5) As String
  
  If Val(Num_) = 0 Then
    EOnly = LTrim(Single_ & " zero only")
    Exit Function
  End If
  
  ESingle(1) = "one"
  ESingle(2) = "two"
  ESingle(3) = "three"
  ESingle(4) = "four"
  ESingle(5) = "five"
  ESingle(6) = "six"
  ESingle(7) = "seven"
  ESingle(8) = "eight"
  ESingle(9) = "nine"
  ESingle(10) = "ten"
  ESingle(11) = "eleven"
  ESingle(12) = "twelve"
  
  ETens(2) = "twenty"
  ETens(3) = "thirty"
  ETens(4) = "fourty"
  ETens(5) = "fifty"
  ETens(6) = "sixty"
  ETens(7) = "seventy"
  ETens(8) = "eighty"
  ETens(9) = "ninety"
  
  EParts_(0) = ""
  EParts_(1) = "thousund"
  EParts_(2) = "million"
  EParts_(3) = "billion"
  EParts_(4) = "trillion"
  EParts_(5) = "quadrillion"
  
  For K = 0 To Parts - 1
    PartNum(K) = Val(Mid(Num_, (K * 3) + 1, 3))
  Next K
  
  For K = 0 To (Parts - 1)
    TempS = Mid(Num_, (K * 3) + 1, 3)
    TempI = Val(Mid(TempS, 2, 2))
    N1 = Val(Mid(TempS, 1, 1))
    N2 = Val(Mid(TempS, 2, 1))
    N3 = Val(Mid(TempS, 3, 1))
    '{------------------------------------------}
    N1_ = "": N2_ = "": N3_ = ""
    If N1 > 0 Then N1_ = EHunds(CByte(N1), ESingle())
    Select Case TempI
      Case 1 To 12:  N3_ = ESingle(TempI)
      Case 13 To 19: If N3 > 0 Then N3_ = Tenteen(CByte(TempI), ETens())
      Case 20 To 99:
        N2_ = ETens(N2)
        If N3 > 0 Then
          N3_ = N2_ + "-" + ESingle(N3)
          N2_ = ""
        End If
    End Select
    OnlyPart = AddAnd(N1_, N2_, N3_, "", Lang)
    '{------------------------------------------}
    Part_ = ""
    If PartNum(K) > 0 Then
      Part_ = EParts_(Parts - K - 1)
      If Part_ <> "" Then Part_ = EParts_((Parts - K - 1))
    End If
    Result1(K) = AddAnd(OnlyPart, Part_, "", "", Lang)
  Next K
  '{------------------------------------------}
  N1_ = AddAnd(Result1(0), Result1(1), Result1(2), "", Lang)
  N2_ = AddAnd(Result1(3), Result1(4), Result1(5), "", Lang)
  Only_ = AddAnd(N1_, N2_, "", "", Lang)

  Leng = Len(Only_)
  Only_ = AddAnd(Only_, FracS, "", " and", Lang)
  If Only_ <> "" Then
    Only_ = AddAnd(Single_, Only_, "", "", Lang)
    If Only_ <> "" Then Only_ = Only_ + " only"
    EOnly = Only_
  End If
End Function

Function S_Only(InNum As Variant, Lang As Byte) As Variant
  Dim Num_ As String
  Dim K, dec As Byte
  
  If IsNull(InNum) Then
    S_Only = Null
    Exit Function
  End If
  
  Num_ = Str(InNum)
  K = InStr(1, Num_, ".", 1)
  If K > 0 Then
    dec = Len(Num_) - K
    If dec < 2 Then dec = 2
  Else
   dec = 0
  End If
  
  S_Only = B_Only(InNum, Lang, 0, dec, "", "", "")
End Function

Function B_Only(InNum As Variant, Lang, sex, dec As Byte, Single_, Double_, Ploral_ As String) As Variant
  Dim Leng, Parts, K As Byte
  Dim FracVal  As Double
  Dim Num_     As String
  Dim FracS    As String
  
  If IsNull(InNum) Then
    B_Only = Null
    Exit Function
  End If
  
  Num_ = Str(InNum)
  If InStr(1, Num_, "E+", 1) > 0 Then
    Num_ = ReStr(Num_)
    FracVal = 0
    GoTo DoProcess
  End If
  
  Num_ = ReFormat(Val(InNum), dec)
  K = InStr(1, Num_, ".", 1)
  If K > 0 Then FracS = "0" & Mid(Num_, K, dec + 1) Else FracS = ""
  FracVal = Val(FracS)
  Num_ = Trim(Str(Fix(InNum)))
  
  Do While Len(FracS) < dec + 2
    FracS = Insert(FracS, "0", 1)
  Loop
  
DoProcess:
  If FracVal = 0 Then FracS = ""
  Leng = Len(Num_)
  Parts = Fix((Leng + 2) / 3)
  
  
  For K = 1 To (Parts * 3) - Leng
    Num_ = Insert("0", Num_, 1)
  Next K
  
  If Len(Num_) > 18 Then
    B_Only = InNum
    Exit Function
  End If
  
  Select Case Lang
    Case vArabic:  B_Only = AOnly(Num_, FracS, Single_, Double_, Ploral_, Parts, sex, dec)
    Case vEnglish: B_Only = EOnly(Num_, FracS, Single_ + "", Parts, dec)
  End Select
End Function

Sub Test()
  '|fffd||fffd||fffd||fffd||fffd| 1=|fffd||fffd||fffd||fffd|  2=|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  '  |fffd||fffd||fffd||fffd||fffd|  0=|fffd||fffd||fffd||fffd|  1=|fffd||fffd||fffd||fffd|
  
  
  '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  MsgBox S_Only(1500, vArabic)
  '--------------------------------------------------
  '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  '"|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| "|fffd||fffd||fffd||3e1||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  MsgBox B_Only(1500, vArabic, vMale, 2, "|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|")
  MsgBox B_Only(1500, vArabic, vFemale, 2, "|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd|")
End Sub
















Attribute VB_Name = "Punct_AbuHadi"
Option Explicit

Public Const vArabic As Byte = 1
Public Const vEnglish As Byte = 2
Public Const vMale As Byte = 0
Public Const vFemale As Byte = 1

Function Delete(S As String, Index, Count As Integer) As String
  Delete = Left(S, Index - 1) + _
           Mid(S, Index + Count, Len(S))
End Function

Function Insert(Source, S As String, Index As Integer) As String
  Dim LPart, RPart As String
  
  LPart = Left(S, Index - 1)
  RPart = Mid(S, Index, Len(S))
  Insert = LPart & Source & RPart
End Function

Function AddAnd(S1, S2, S3, And_ As String, Lang As Byte) As String
  Dim InAnd_, CollectS As String
    
  If Lang = vArabic Then InAnd_ = " " + And_ Else InAnd_ = And_ + " "
  If (S1 <> "") And (S2 <> "") Then And_ = InAnd_ Else And_ = ""
  CollectS = S1 + And_ + S2
  If (CollectS <> "") And (S3 <> "") Then And_ = InAnd_ Else And_ = ""
  AddAnd = CollectS + And_ + S3
End Function

Function Fmale(NUM, sex As Byte, Female()) As String
  Dim Two(1 To 4) As String
  Dim InSex As Byte
    
  Two(1) = "|fffd||fffd||fffd|"
  Two(2) = "|fffd||fffd||fffd||fffd||fffd|"
  Two(3) = "|fffd||fffd||fffd||fffd|"
  Two(4) = "|fffd|"
      
  Select Case sex
    Case vMale:
      Select Case NUM
        Case 1:             Fmale = Mid(Female(1), 1, 4)
        Case 2:             Fmale = Two(2)
        Case 8:             Fmale = Female(NUM) + "|fffd|" + Two(4)
        Case 3 To 7, 9, 10: Fmale = Female(NUM) + Two(4)
        Case 11:            Fmale = Two(1) + " " + Female(10)
        Case 12:            Fmale = Mid(Two(2), 1, 4) + " " + Female(10)
        Case 13 To 19:      Fmale = Female(NUM - 10) + Two(4) + " " + Female(10)
      End Select
    Case vFemale:
      Select Case NUM
        Case 1 To 10:       Fmale = Female(NUM)
        Case 11:            Fmale = Two(3) + " " + Female(10) + Two(4)
        Case 12:            Fmale = Mid(Female(2), 1, 5) + " " + Female(10) + Two(4)
        Case 13 To 19:      Fmale = Female(NUM - 10) + " " + Female(10) + Two(4)
      End Select
    End Select
End Function

Function Tens(NUM As Byte, Female()) As String
  Const Noon = "|fffd||fffd|"
      
  Select Case NUM
    Case 2:      Tens = Female(10) + Noon
    Case 3 To 9: Tens = Female(NUM) + Noon
  End Select
End Function

Function Hunds(NUM As Byte, Female()) As String
  Const Hund = "|fffd||fffd||fffd||fffd|"
      
  Select Case NUM
    Case 1:      Hunds = Hund
    Case 2:      Hunds = Mid(Hund, 1, 3) + Mid(Female(2), 4, 3)
    Case 3 To 9: Hunds = Female(NUM) + Hund
   End Select
End Function

Function Tenteen(NUM As Byte, ETens()) As String
  Const een = "een"
  
  NUM = NUM Mod 10
  Select Case NUM
    Case 3 To 9:
      Tenteen = Mid(ETens(NUM), 1, Len(ETens(NUM)) - 1) + een
  End Select
End Function

Function EHunds(NUM As Byte, ESingle()) As String
  EHunds = ESingle(NUM) + " hundred"
End Function

Function ReFormat(InNum As Double, dec As Byte) As Double
  Dim NewFormat As String
  Dim K As Byte
  
  If dec > 0 Then NewFormat = "0." Else NewFormat = "0"
  For K = 1 To dec
    NewFormat = NewFormat + "0"
  Next K
     
  ReFormat = Format(InNum, NewFormat)
End Function

Function ReStr(InNum As String) As String
  Dim K, Digits As Byte
  Dim Num_ As String
  
  Num_ = LTrim(InNum)
  K = InStr(1, Num_, "E+", 1)
  If K > 0 Then
    Digits = Val(Mid(Num_, K + 2, 3))
    Num_ = Left(Num_, K - 1)
    Num_ = Delete(Num_, 2, 1)
    Do While Len(Num_) - 1 < Digits
      Num_ = Insert(Num_, "0", 1)
    Loop
  End If
  ReStr = Num_
End Function

Function AOnly(Num_, FracS, Single_, Double_, Ploral_ As String, Parts, sex, dec As Byte) As String
  Const And_ As String * 1 = "|fffd|"
  Const Lang = vArabic
  Dim PartNum(0 To 5) As Long
  Dim Result1(0 To 5) As String
  Dim N1, N2, N3, TempI, Sex2, K As Byte
  Dim Only_    As String
  Dim OnlyPart As String
  Dim N1_, N2_ As String
  Dim N3_      As String
  Dim Part_    As String
  Dim TempS    As String
  Dim Female(1 To 10) As Variant
  Dim Parts_(0 To 11) As String
    
  If Val(Num_) = 0 Then
    AOnly = RTrim("|fffd||fffd||fffd| |fffd||fffd||fffd| " & Single_)
    Exit Function
  End If
  
  Female(1) = "|fffd||fffd||fffd||fffd||fffd|"
  Female(2) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
  Female(3) = "|fffd||fffd||fffd||fffd|"
  Female(4) = "|fffd||fffd||fffd||fffd|"
  Female(5) = "|fffd||fffd||fffd|"
  Female(6) = "|fffd||fffd|"
  Female(7) = "|fffd||fffd||fffd|"
  Female(8) = "|fffd||fffd||fffd||fffd|"
  Female(9) = "|fffd||fffd||fffd|"
  Female(10) = "|fffd||fffd||fffd|"
   
  Parts_(0) = ""
  Parts_(1) = "|fffd||fffd||fffd|"
  Parts_(2) = "|fffd||fffd||fffd||fffd||fffd|"
  Parts_(3) = "|fffd||fffd||fffd||fffd||fffd|"
  Parts_(4) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
  Parts_(5) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
  Parts_(6) = ""
  Parts_(7) = "|fffd||fffd||fffd||fffd|"
  Parts_(8) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
  Parts_(9) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
  Parts_(10) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
  Parts_(11) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
 
  For K = 0 To Parts - 1
    PartNum(K) = Val(Mid(Num_, (K * 3) + 1, 3))
  Next K
    
    Sex2 = sex
    For K = 0 To (Parts - 1)
      If K = (Parts - 1) Then sex = Sex2 Else sex = vMale
      TempS = Mid(Num_, (K * 3) + 1, 3)
      TempI = Val(Mid(TempS, 2, 2))
      N1 = Val(Mid(TempS, 1, 1))
      N2 = Val(Mid(TempS, 2, 1))
      N3 = Val(Mid(TempS, 3, 1))
      '{------------------------------------------}
      N1_ = "": N2_ = "": N3_ = ""
      If N1 > 0 Then N1_ = Hunds(CByte(N1), Female())
      If PartNum(K) = 200 Then N1_ = Mid(N1_, 1, Len(N1_) - 1)
      Select Case TempI
        Case 1 To 2:
          If K = Parts - 1 Then If FracS <> "" Then N3_ = Fmale(N3, CByte(sex), Female())  'Sex
        Case 3 To 19:
          N3_ = Fmale(TempI, CByte(sex), Female())
        Case 20 To 99:
          N2_ = Tens(CByte(N2), Female())
          If N3 > 0 Then N3_ = Fmale(N3, CByte(sex), Female())
          If (N3 Mod 10 = 1) And (sex = vFemale) Then N3_ = "|fffd||fffd||fffd||fffd|"
      End Select
      OnlyPart = AddAnd(N1_, N3_, N2_, And_, Lang)
      '{------------------------------------------}
      If PartNum(K) > 100 Then
        Select Case TempI
          Case 1, 2:
            OnlyPart = AddAnd(OnlyPart, Parts_(Parts - K - 1), "", "", Lang)
        End Select
      End If
      '{------------------------------------------}
      Part_ = ""
      If PartNum(K) > 0 Then
        Part_ = Parts_(Parts - K - 1)
        If Part_ <> "" Then
          Select Case TempI
            Case 2:        Part_ = Part_ + "|fffd||fffd|"
            Case 3 To 10:  Part_ = Parts_((Parts - K - 1) + 6)
            Case 11 To 99: Part_ = Part_ + "|fffd|"
          End Select
        End If
      End If
      '{------------------------------------------}
      If Part_ <> "" Then
        If TempI >= 1 And TempI <= 2 Then
           OnlyPart = AddAnd(OnlyPart, Part_, "", And_, Lang)
        Else
          OnlyPart = AddAnd(OnlyPart, Part_, "", "", Lang)
        End If
      End If
      Result1(K) = (OnlyPart)
    Next K
    '{------------------------------------------}
    N1_ = AddAnd(Result1(0), Result1(1), Result1(2), And_, Lang)
    N2_ = AddAnd(Result1(3), Result1(4), Result1(5), And_, Lang)
    Only_ = AddAnd(N1_, N2_, "", And_, Lang)

    If FracS <> "" Then
      If Only_ <> "" Then FracS = " " + FracS
      Only_ = AddAnd(Only_, FracS, "", And_, Lang)
    End If
    If Only_ <> "" Then
      If Mid(Only_, Len(Only_), 1) = "|fffd|" Then
        If Mid(Only_, Len(Only_) - 1, 2) <> "|fffd||fffd|" Then
          Only_ = Mid(Only_, 1, Len(Only_) - 1)
        End If
      End If
      If TempS = "000" Then
        If Mid(Only_, Len(Only_) - 1, 2) = "|fffd||fffd|" Then
          Only_ = Mid(Only_, 1, Len(Only_) - 1)
        End If
      End If
    End If
    '{------------------------------------------}
    If FracS = "" Then
      Select Case TempI
        Case 0: If Only_ <> "" Then Only_ = AddAnd(Only_, Single_, "", "", Lang)
        Case 1: Only_ = AddAnd(Only_, AddAnd(Single_, Fmale(1, CByte(sex), Female()), "", "", Lang), "", And_, Lang)
        Case 2: Only_ = AddAnd(Only_, AddAnd(Double_, Fmale(2, CByte(sex), Female()), "", "", Lang), "", And_, Lang)
        Case 3 To 10: Only_ = AddAnd(Only_, Ploral_, "", "", Lang)
        Case 11 To 99:
          If Single_ <> "" Then
            Only_ = AddAnd(Only_, Single_, "", "", Lang)
            N1_ = Mid(Only_, Len(Only_), 1)
            Select Case N1_
              Case "|fffd|", "|fffd|", "|fffd|"
              Case Else
                Only_ = Only_ + "|fffd|"
            End Select
            N1_ = Mid(Only_, Len(Only_) - 2, 3)
            '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "|fffd||fffd||fffd|" |fffd| "|fffd||fffd||fffd|" 2002/02/15
            If N1_ = "|fffd||fffd||fffd|" And Single_ <> "|fffd||fffd||fffd||fffd|" Then
              Only_ = Left(Only_, Len(Only_) - 1)
            End If
         End If
      End Select
    Else
      Only_ = AddAnd(Only_, Single_, "", "", Lang)
    End If
    If Only_ <> "" Then Only_ = "|fffd||fffd||fffd| " + Only_
    AOnly = (Only_)
End Function

Function EOnly(Num_, FracS, Single_ As String, Parts, dec As Byte) As String
  Const Lang = vEnglish
  Dim ESingle(1 To 12) As Variant
  Dim ETens(2 To 9) As Variant
  Dim EParts_(0 To 5) As String
  Dim TempS As String
  Dim N1, N2, N3, TempI, Sex2 As Byte
  Dim N1_, N2_, N3_ As String
  Dim OnlyPart, Part_, Only_ As String
  Dim Leng, K As Integer
  Dim PartNum(0 To 5) As Long
  Dim Result1(0 To 5) As String
  
  If Val(Num_) = 0 Then
    EOnly = LTrim(Single_ & " zero only")
    Exit Function
  End If
  
  ESingle(1) = "one"
  ESingle(2) = "two"
  ESingle(3) = "three"
  ESingle(4) = "four"
  ESingle(5) = "five"
  ESingle(6) = "six"
  ESingle(7) = "seven"
  ESingle(8) = "eight"
  ESingle(9) = "nine"
  ESingle(10) = "ten"
  ESingle(11) = "eleven"
  ESingle(12) = "twelve"
  
  ETens(2) = "twenty"
  ETens(3) = "thirty"
  ETens(4) = "fourty"
  ETens(5) = "fifty"
  ETens(6) = "sixty"
  ETens(7) = "seventy"
  ETens(8) = "eighty"
  ETens(9) = "ninety"
  
  EParts_(0) = ""
  EParts_(1) = "thousund"
  EParts_(2) = "million"
  EParts_(3) = "billion"
  EParts_(4) = "trillion"
  EParts_(5) = "quadrillion"
  
  For K = 0 To Parts - 1
    PartNum(K) = Val(Mid(Num_, (K * 3) + 1, 3))
  Next K
  
  For K = 0 To (Parts - 1)
    TempS = Mid(Num_, (K * 3) + 1, 3)
    TempI = Val(Mid(TempS, 2, 2))
    N1 = Val(Mid(TempS, 1, 1))
    N2 = Val(Mid(TempS, 2, 1))
    N3 = Val(Mid(TempS, 3, 1))
    '{------------------------------------------}
    N1_ = "": N2_ = "": N3_ = ""
    If N1 > 0 Then N1_ = EHunds(CByte(N1), ESingle())
    Select Case TempI
      Case 1 To 12:  N3_ = ESingle(TempI)
      Case 13 To 19: If N3 > 0 Then N3_ = Tenteen(CByte(TempI), ETens())
      Case 20 To 99:
        N2_ = ETens(N2)
        If N3 > 0 Then
          N3_ = N2_ + "-" + ESingle(N3)
          N2_ = ""
        End If
    End Select
    OnlyPart = AddAnd(N1_, N2_, N3_, "", Lang)
    '{------------------------------------------}
    Part_ = ""
    If PartNum(K) > 0 Then
      Part_ = EParts_(Parts - K - 1)
      If Part_ <> "" Then Part_ = EParts_((Parts - K - 1))
    End If
    Result1(K) = AddAnd(OnlyPart, Part_, "", "", Lang)
  Next K
  '{------------------------------------------}
  N1_ = AddAnd(Result1(0), Result1(1), Result1(2), "", Lang)
  N2_ = AddAnd(Result1(3), Result1(4), Result1(5), "", Lang)
  Only_ = AddAnd(N1_, N2_, "", "", Lang)

  Leng = Len(Only_)
  Only_ = AddAnd(Only_, FracS, "", " and", Lang)
  If Only_ <> "" Then
    Only_ = AddAnd(Single_, Only_, "", "", Lang)
    If Only_ <> "" Then Only_ = Only_ + " only"
    EOnly = Only_
  End If
End Function

Function S_Only(InNum As Variant, Lang As Byte) As Variant
  Dim Num_ As String
  Dim K, dec As Byte
  
  If IsNull(InNum) Then
    S_Only = Null
    Exit Function
  End If
  
  Num_ = Str(InNum)
  K = InStr(1, Num_, ".", 1)
  If K > 0 Then
    dec = Len(Num_) - K
    If dec < 2 Then dec = 2
  Else
   dec = 0
  End If
  
  S_Only = B_Only(InNum, Lang, 0, dec, "", "", "")
End Function

Function B_Only(InNum As Variant, Lang, sex, dec As Byte, Single_, Double_, Ploral_ As String) As Variant
  Dim Leng, Parts, K As Byte
  Dim FracVal  As Double
  Dim Num_     As String
  Dim FracS    As String
  
  If IsNull(InNum) Then
    B_Only = Null
    Exit Function
  End If
  
  Num_ = Str(InNum)
  If InStr(1, Num_, "E+", 1) > 0 Then
    Num_ = ReStr(Num_)
    FracVal = 0
    GoTo DoProcess
  End If
  
  Num_ = ReFormat(Val(InNum), dec)
  K = InStr(1, Num_, ".", 1)
  If K > 0 Then FracS = "0" & Mid(Num_, K, dec + 1) Else FracS = ""
  FracVal = Val(FracS)
  Num_ = Trim(Str(Fix(InNum)))
  
  Do While Len(FracS) < dec + 2
    FracS = Insert(FracS, "0", 1)
  Loop
  
DoProcess:
  If FracVal = 0 Then FracS = ""
  Leng = Len(Num_)
  Parts = Fix((Leng + 2) / 3)
  
  
  For K = 1 To (Parts * 3) - Leng
    Num_ = Insert("0", Num_, 1)
  Next K
  
  If Len(Num_) > 18 Then
    B_Only = InNum
    Exit Function
  End If
  
  Select Case Lang
    Case vArabic:  B_Only = AOnly(Num_, FracS, Single_, Double_, Ploral_, Parts, sex, dec)
    Case vEnglish: B_Only = EOnly(Num_, FracS, Single_ + "", Parts, dec)
  End Select
End Function

Sub Test()
  '|fffd||fffd||fffd||fffd||fffd| 1=|fffd||fffd||fffd||fffd|  2=|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  '  |fffd||fffd||fffd||fffd||fffd|  0=|fffd||fffd||fffd||fffd|  1=|fffd||fffd||fffd||fffd|
  
  
  '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  MsgBox S_Only(1500, vArabic)
  '--------------------------------------------------
  '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  '"|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| "|fffd||fffd||fffd||3e1||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  MsgBox B_Only(1500, vArabic, vMale, 2, "|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|")
  MsgBox B_Only(1500, vArabic, vFemale, 2, "|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd|")
End Sub














Attribute VB_Name = "Punct_AbuHadi1"
Option Explicit

Public Const vArabic As Byte = 1
Public Const vEnglish As Byte = 2
Public Const vMale As Byte = 0
Public Const vFemale As Byte = 1

Function Delete(S As String, Index, Count As Integer) As String
  Delete = Left(S, Index - 1) + _
           Mid(S, Index + Count, Len(S))
End Function

Function Insert(Source, S As String, Index As Integer) As String
  Dim LPart, RPart As String
  
  LPart = Left(S, Index - 1)
  RPart = Mid(S, Index, Len(S))
  Insert = LPart & Source & RPart
End Function

Function AddAnd(S1, S2, S3, And_ As String, Lang As Byte) As String
  Dim InAnd_, CollectS As String
    
  If Lang = vArabic Then InAnd_ = " " + And_ Else InAnd_ = And_ + " "
  If (S1 <> "") And (S2 <> "") Then And_ = InAnd_ Else And_ = ""
  CollectS = S1 + And_ + S2
  If (CollectS <> "") And (S3 <> "") Then And_ = InAnd_ Else And_ = ""
  AddAnd = CollectS + And_ + S3
End Function

Function Fmale(NUM, sex As Byte, Female()) As String
  Dim Two(1 To 4) As String
  Dim InSex As Byte
    
  Two(1) = "|fffd||fffd||fffd|"
  Two(2) = "|fffd||fffd||fffd||fffd||fffd|"
  Two(3) = "|fffd||fffd||fffd||fffd|"
  Two(4) = "|fffd|"
      
  Select Case sex
    Case vMale:
      Select Case NUM
        Case 1:             Fmale = Mid(Female(1), 1, 4)
        Case 2:             Fmale = Two(2)
        Case 8:             Fmale = Female(NUM) + "|fffd|" + Two(4)
        Case 3 To 7, 9, 10: Fmale = Female(NUM) + Two(4)
        Case 11:            Fmale = Two(1) + " " + Female(10)
        Case 12:            Fmale = Mid(Two(2), 1, 4) + " " + Female(10)
        Case 13 To 19:      Fmale = Female(NUM - 10) + Two(4) + " " + Female(10)
      End Select
    Case vFemale:
      Select Case NUM
        Case 1 To 10:       Fmale = Female(NUM)
        Case 11:            Fmale = Two(3) + " " + Female(10) + Two(4)
        Case 12:            Fmale = Mid(Female(2), 1, 5) + " " + Female(10) + Two(4)
        Case 13 To 19:      Fmale = Female(NUM - 10) + " " + Female(10) + Two(4)
      End Select
    End Select
End Function

Function Tens(NUM As Byte, Female()) As String
  Const Noon = "|fffd||fffd|"
      
  Select Case NUM
    Case 2:      Tens = Female(10) + Noon
    Case 3 To 9: Tens = Female(NUM) + Noon
  End Select
End Function

Function Hunds(NUM As Byte, Female()) As String
  Const Hund = "|fffd||fffd||fffd||fffd|"
      
  Select Case NUM
    Case 1:      Hunds = Hund
    Case 2:      Hunds = Mid(Hund, 1, 3) + Mid(Female(2), 4, 3)
    Case 3 To 9: Hunds = Female(NUM) + Hund
   End Select
End Function

Function Tenteen(NUM As Byte, ETens()) As String
  Const een = "een"
  
  NUM = NUM Mod 10
  Select Case NUM
    Case 3 To 9:
      Tenteen = Mid(ETens(NUM), 1, Len(ETens(NUM)) - 1) + een
  End Select
End Function

Function EHunds(NUM As Byte, ESingle()) As String
  EHunds = ESingle(NUM) + " hundred"
End Function

Function ReFormat(InNum As Double, dec As Byte) As Double
  Dim NewFormat As String
  Dim K As Byte
  
  If dec > 0 Then NewFormat = "0." Else NewFormat = "0"
  For K = 1 To dec
    NewFormat = NewFormat + "0"
  Next K
     
  ReFormat = Format(InNum, NewFormat)
End Function

Function ReStr(InNum As String) As String
  Dim K, Digits As Byte
  Dim Num_ As String
  
  Num_ = LTrim(InNum)
  K = InStr(1, Num_, "E+", 1)
  If K > 0 Then
    Digits = Val(Mid(Num_, K + 2, 3))
    Num_ = Left(Num_, K - 1)
    Num_ = Delete(Num_, 2, 1)
    Do While Len(Num_) - 1 < Digits
      Num_ = Insert(Num_, "0", 1)
    Loop
  End If
  ReStr = Num_
End Function

Function AOnly(Num_, FracS, Single_, Double_, Ploral_ As String, Parts, sex, dec As Byte) As String
  Const And_ As String * 1 = "|fffd|"
  Const Lang = vArabic
  Dim PartNum(0 To 5) As Long
  Dim Result1(0 To 5) As String
  Dim N1, N2, N3, TempI, Sex2, K As Byte
  Dim Only_    As String
  Dim OnlyPart As String
  Dim N1_, N2_ As String
  Dim N3_      As String
  Dim Part_    As String
  Dim TempS    As String
  Dim Female(1 To 10) As Variant
  Dim Parts_(0 To 11) As String
    
  If Val(Num_) = 0 Then
    AOnly = RTrim("|fffd||fffd||fffd| |fffd||fffd||fffd| " & Single_)
    Exit Function
  End If
  
  Female(1) = "|fffd||fffd||fffd||fffd||fffd|"
  Female(2) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
  Female(3) = "|fffd||fffd||fffd||fffd|"
  Female(4) = "|fffd||fffd||fffd||fffd|"
  Female(5) = "|fffd||fffd||fffd|"
  Female(6) = "|fffd||fffd|"
  Female(7) = "|fffd||fffd||fffd|"
  Female(8) = "|fffd||fffd||fffd||fffd|"
  Female(9) = "|fffd||fffd||fffd|"
  Female(10) = "|fffd||fffd||fffd|"
   
  Parts_(0) = ""
  Parts_(1) = "|fffd||fffd||fffd|"
  Parts_(2) = "|fffd||fffd||fffd||fffd||fffd|"
  Parts_(3) = "|fffd||fffd||fffd||fffd||fffd|"
  Parts_(4) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
  Parts_(5) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
  Parts_(6) = ""
  Parts_(7) = "|fffd||fffd||fffd||fffd|"
  Parts_(8) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
  Parts_(9) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
  Parts_(10) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
  Parts_(11) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
 
  For K = 0 To Parts - 1
    PartNum(K) = Val(Mid(Num_, (K * 3) + 1, 3))
  Next K
    
    Sex2 = sex
    For K = 0 To (Parts - 1)
      If K = (Parts - 1) Then sex = Sex2 Else sex = vMale
      TempS = Mid(Num_, (K * 3) + 1, 3)
      TempI = Val(Mid(TempS, 2, 2))
      N1 = Val(Mid(TempS, 1, 1))
      N2 = Val(Mid(TempS, 2, 1))
      N3 = Val(Mid(TempS, 3, 1))
      '{------------------------------------------}
      N1_ = "": N2_ = "": N3_ = ""
      If N1 > 0 Then N1_ = Hunds(CByte(N1), Female())
      If PartNum(K) = 200 Then N1_ = Mid(N1_, 1, Len(N1_) - 1)
      Select Case TempI
        Case 1 To 2:
          If K = Parts - 1 Then If FracS <> "" Then N3_ = Fmale(N3, CByte(sex), Female())  'Sex
        Case 3 To 19:
          N3_ = Fmale(TempI, CByte(sex), Female())
        Case 20 To 99:
          N2_ = Tens(CByte(N2), Female())
          If N3 > 0 Then N3_ = Fmale(N3, CByte(sex), Female())
          If (N3 Mod 10 = 1) And (sex = vFemale) Then N3_ = "|fffd||fffd||fffd||fffd|"
      End Select
      OnlyPart = AddAnd(N1_, N3_, N2_, And_, Lang)
      '{------------------------------------------}
      If PartNum(K) > 100 Then
        Select Case TempI
          Case 1, 2:
            OnlyPart = AddAnd(OnlyPart, Parts_(Parts - K - 1), "", "", Lang)
        End Select
      End If
      '{------------------------------------------}
      Part_ = ""
      If PartNum(K) > 0 Then
        Part_ = Parts_(Parts - K - 1)
        If Part_ <> "" Then
          Select Case TempI
            Case 2:        Part_ = Part_ + "|fffd||fffd|"
            Case 3 To 10:  Part_ = Parts_((Parts - K - 1) + 6)
            Case 11 To 99: Part_ = Part_ + "|fffd|"
          End Select
        End If
      End If
      '{------------------------------------------}
      If Part_ <> "" Then
        If TempI >= 1 And TempI <= 2 Then
           OnlyPart = AddAnd(OnlyPart, Part_, "", And_, Lang)
        Else
          OnlyPart = AddAnd(OnlyPart, Part_, "", "", Lang)
        End If
      End If
      Result1(K) = (OnlyPart)
    Next K
    '{------------------------------------------}
    N1_ = AddAnd(Result1(0), Result1(1), Result1(2), And_, Lang)
    N2_ = AddAnd(Result1(3), Result1(4), Result1(5), And_, Lang)
    Only_ = AddAnd(N1_, N2_, "", And_, Lang)

    If FracS <> "" Then
      If Only_ <> "" Then FracS = " " + FracS
      Only_ = AddAnd(Only_, FracS, "", And_, Lang)
    End If
    If Only_ <> "" Then
      If Mid(Only_, Len(Only_), 1) = "|fffd|" Then
        If Mid(Only_, Len(Only_) - 1, 2) <> "|fffd||fffd|" Then
          Only_ = Mid(Only_, 1, Len(Only_) - 1)
        End If
      End If
      If TempS = "000" Then
        If Mid(Only_, Len(Only_) - 1, 2) = "|fffd||fffd|" Then
          Only_ = Mid(Only_, 1, Len(Only_) - 1)
        End If
      End If
    End If
    '{------------------------------------------}
    If FracS = "" Then
      Select Case TempI
        Case 0: If Only_ <> "" Then Only_ = AddAnd(Only_, Single_, "", "", Lang)
        Case 1: Only_ = AddAnd(Only_, AddAnd(Single_, Fmale(1, CByte(sex), Female()), "", "", Lang), "", And_, Lang)
        Case 2: Only_ = AddAnd(Only_, AddAnd(Double_, Fmale(2, CByte(sex), Female()), "", "", Lang), "", And_, Lang)
        Case 3 To 10: Only_ = AddAnd(Only_, Ploral_, "", "", Lang)
        Case 11 To 99:
          If Single_ <> "" Then
            Only_ = AddAnd(Only_, Single_, "", "", Lang)
            N1_ = Mid(Only_, Len(Only_), 1)
            Select Case N1_
              Case "|fffd|", "|fffd|", "|fffd|"
              Case Else
                Only_ = Only_ + "|fffd|"
            End Select
            N1_ = Mid(Only_, Len(Only_) - 2, 3)
            '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "|fffd||fffd||fffd|" |fffd| "|fffd||fffd||fffd|" 2002/02/15
            If N1_ = "|fffd||fffd||fffd|" And Single_ <> "|fffd||fffd||fffd||fffd|" Then
              Only_ = Left(Only_, Len(Only_) - 1)
            End If
         End If
      End Select
    Else
      Only_ = AddAnd(Only_, Single_, "", "", Lang)
    End If
    If Only_ <> "" Then Only_ = "|fffd||fffd||fffd| " + Only_
    AOnly = (Only_)
End Function

Function EOnly(Num_, FracS, Single_ As String, Parts, dec As Byte) As String
  Const Lang = vEnglish
  Dim ESingle(1 To 12) As Variant
  Dim ETens(2 To 9) As Variant
  Dim EParts_(0 To 5) As String
  Dim TempS As String
  Dim N1, N2, N3, TempI, Sex2 As Byte
  Dim N1_, N2_, N3_ As String
  Dim OnlyPart, Part_, Only_ As String
  Dim Leng, K As Integer
  Dim PartNum(0 To 5) As Long
  Dim Result1(0 To 5) As String
  
  If Val(Num_) = 0 Then
    EOnly = LTrim(Single_ & " zero only")
    Exit Function
  End If
  
  ESingle(1) = "one"
  ESingle(2) = "two"
  ESingle(3) = "three"
  ESingle(4) = "four"
  ESingle(5) = "five"
  ESingle(6) = "six"
  ESingle(7) = "seven"
  ESingle(8) = "eight"
  ESingle(9) = "nine"
  ESingle(10) = "ten"
  ESingle(11) = "eleven"
  ESingle(12) = "twelve"
  
  ETens(2) = "twenty"
  ETens(3) = "thirty"
  ETens(4) = "fourty"
  ETens(5) = "fifty"
  ETens(6) = "sixty"
  ETens(7) = "seventy"
  ETens(8) = "eighty"
  ETens(9) = "ninety"
  
  EParts_(0) = ""
  EParts_(1) = "thousund"
  EParts_(2) = "million"
  EParts_(3) = "billion"
  EParts_(4) = "trillion"
  EParts_(5) = "quadrillion"
  
  For K = 0 To Parts - 1
    PartNum(K) = Val(Mid(Num_, (K * 3) + 1, 3))
  Next K
  
  For K = 0 To (Parts - 1)
    TempS = Mid(Num_, (K * 3) + 1, 3)
    TempI = Val(Mid(TempS, 2, 2))
    N1 = Val(Mid(TempS, 1, 1))
    N2 = Val(Mid(TempS, 2, 1))
    N3 = Val(Mid(TempS, 3, 1))
    '{------------------------------------------}
    N1_ = "": N2_ = "": N3_ = ""
    If N1 > 0 Then N1_ = EHunds(CByte(N1), ESingle())
    Select Case TempI
      Case 1 To 12:  N3_ = ESingle(TempI)
      Case 13 To 19: If N3 > 0 Then N3_ = Tenteen(CByte(TempI), ETens())
      Case 20 To 99:
        N2_ = ETens(N2)
        If N3 > 0 Then
          N3_ = N2_ + "-" + ESingle(N3)
          N2_ = ""
        End If
    End Select
    OnlyPart = AddAnd(N1_, N2_, N3_, "", Lang)
    '{------------------------------------------}
    Part_ = ""
    If PartNum(K) > 0 Then
      Part_ = EParts_(Parts - K - 1)
      If Part_ <> "" Then Part_ = EParts_((Parts - K - 1))
    End If
    Result1(K) = AddAnd(OnlyPart, Part_, "", "", Lang)
  Next K
  '{------------------------------------------}
  N1_ = AddAnd(Result1(0), Result1(1), Result1(2), "", Lang)
  N2_ = AddAnd(Result1(3), Result1(4), Result1(5), "", Lang)
  Only_ = AddAnd(N1_, N2_, "", "", Lang)

  Leng = Len(Only_)
  Only_ = AddAnd(Only_, FracS, "", " and", Lang)
  If Only_ <> "" Then
    Only_ = AddAnd(Single_, Only_, "", "", Lang)
    If Only_ <> "" Then Only_ = Only_ + " only"
    EOnly = Only_
  End If
End Function

Function S_Only(InNum As Variant, Lang As Byte) As Variant
  Dim Num_ As String
  Dim K, dec As Byte
  
  If IsNull(InNum) Then
    S_Only = Null
    Exit Function
  End If
  
  Num_ = Str(InNum)
  K = InStr(1, Num_, ".", 1)
  If K > 0 Then
    dec = Len(Num_) - K
    If dec < 2 Then dec = 2
  Else
   dec = 0
  End If
  
  S_Only = B_Only(InNum, Lang, 0, dec, "", "", "")
End Function

Function B_Only(InNum As Variant, Lang, sex, dec As Byte, Single_, Double_, Ploral_ As String) As Variant
  Dim Leng, Parts, K As Byte
  Dim FracVal  As Double
  Dim Num_     As String
  Dim FracS    As String
  
  If IsNull(InNum) Then
    B_Only = Null
    Exit Function
  End If
  
  Num_ = Str(InNum)
  If InStr(1, Num_, "E+", 1) > 0 Then
    Num_ = ReStr(Num_)
    FracVal = 0
    GoTo DoProcess
  End If
  
  Num_ = ReFormat(Val(InNum), dec)
  K = InStr(1, Num_, ".", 1)
  If K > 0 Then FracS = "0" & Mid(Num_, K, dec + 1) Else FracS = ""
  FracVal = Val(FracS)
  Num_ = Trim(Str(Fix(InNum)))
  
  Do While Len(FracS) < dec + 2
    FracS = Insert(FracS, "0", 1)
  Loop
  
DoProcess:
  If FracVal = 0 Then FracS = ""
  Leng = Len(Num_)
  Parts = Fix((Leng + 2) / 3)
  
  
  For K = 1 To (Parts * 3) - Leng
    Num_ = Insert("0", Num_, 1)
  Next K
  
  If Len(Num_) > 18 Then
    B_Only = InNum
    Exit Function
  End If
  
  Select Case Lang
    Case vArabic:  B_Only = AOnly(Num_, FracS, Single_, Double_, Ploral_, Parts, sex, dec)
    Case vEnglish: B_Only = EOnly(Num_, FracS, Single_ + "", Parts, dec)
  End Select
End Function

Sub Test()
  '|fffd||fffd||fffd||fffd||fffd| 1=|fffd||fffd||fffd||fffd|  2=|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  '  |fffd||fffd||fffd||fffd||fffd|  0=|fffd||fffd||fffd||fffd|  1=|fffd||fffd||fffd||fffd|
  
  
  '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  MsgBox S_Only(1500, vArabic)
  '--------------------------------------------------
  '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  '"|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| "|fffd||fffd||fffd||3e1||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  MsgBox B_Only(1500, vArabic, vMale, 2, "|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|")
  MsgBox B_Only(1500, vArabic, vFemale, 2, "|fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd|")
End Sub














Attribute VB_Name = "Punct_English"
' Convert a currency value into an (American) English string
Function English(ByVal N As Currency) As String
    Const Thousand = 1000@
    Const Million = Thousand * Thousand
    Const Billion = Thousand * Million
    Const Trillion = Thousand * Billion

    If (N = 0@) Then English = "zero": Exit Function

    Dim Buf As String: If (N < 0@) Then Buf = "negative " Else Buf = ""
    Dim Frac As Currency: Frac = Abs(N - Fix(N))
    If (N < 0@ Or Frac <> 0@) Then N = Abs(Fix(N))
    Dim AtLeastOne As Integer: AtLeastOne = N >= 1

    If (N >= Trillion) Then
        Debug.Print N
        Buf = Buf & EnglishDigitGroup(Int(N / Trillion)) & " trillion"
        N = N - Int(N / Trillion) * Trillion ' Mod overflows
        If (N >= 1@) Then Buf = Buf & " "
    End If
    
    If (N >= Billion) Then
        Debug.Print N
        Buf = Buf & EnglishDigitGroup(Int(N / Billion)) & " billion"
        N = N - Int(N / Billion) * Billion ' Mod still overflows
        If (N >= 1@) Then Buf = Buf & " "
    End If

    If (N >= Million) Then
        Debug.Print N
        Buf = Buf & EnglishDigitGroup(N \ Million) & " million"
        N = N Mod Million
        If (N >= 1@) Then Buf = Buf & " "
    End If

    If (N >= Thousand) Then
        Debug.Print N
        Buf = Buf & EnglishDigitGroup(N \ Thousand) & " thousand"
        N = N Mod Thousand
        If (N >= 1@) Then Buf = Buf & " "
    End If

    If (N >= 1@) Then
        Debug.Print N
        Buf = Buf & EnglishDigitGroup(N)
    End If

    If (Frac = 0@) Then
        Buf = Buf & " exactly"
    ElseIf (Int(Frac * 100@) = Frac * 100@) Then
        If AtLeastOne Then Buf = Buf & " and "
        Buf = Buf & Format$(Frac * 100@, "00") & "/100"
    Else
        If AtLeastOne Then Buf = Buf & " and "
        Buf = Buf & Format$(Frac * 10000@, "0000") & "/10000"
    End If

    English = Buf
End Function

' Support function to be used only by English()
Private Function EnglishDigitGroup(ByVal N As Integer) As String
    Const Hundred = " hundred"
    Const One = "one"
    Const Two = "two"
    Const Three = "three"
    Const Four = "four"
    Const Five = "five"
    Const Six = "six"
    Const Seven = "seven"
    Const Eight = "eight"
    Const Nine = "nine"
    Dim Buf As String: Buf = ""
    Dim Flag As Integer: Flag = False

    'Do hundreds
    Select Case (N \ 100)
    Case 0: Buf = "":  Flag = False
    Case 1: Buf = One & Hundred: Flag = True
    Case 2: Buf = Two & Hundred: Flag = True
    Case 3: Buf = Three & Hundred: Flag = True
    Case 4: Buf = Four & Hundred: Flag = True
    Case 5: Buf = Five & Hundred: Flag = True
    Case 6: Buf = Six & Hundred: Flag = True
    Case 7: Buf = Seven & Hundred: Flag = True
    Case 8: Buf = Eight & Hundred: Flag = True
    Case 9: Buf = Nine & Hundred: Flag = True
    End Select
   
    If (Flag <> False) Then N = N Mod 100
    If (N > 0) Then
        If (Flag <> False) Then Buf = Buf & " "
    Else
        EnglishDigitGroup = Buf
        Exit Function
    End If
      
    'Do tens (except teens)
    Select Case (N \ 10)
    Case 0, 1: Flag = False
    Case 2: Buf = Buf & "twenty": Flag = True
    Case 3: Buf = Buf & "thirty": Flag = True
    Case 4: Buf = Buf & "forty": Flag = True
    Case 5: Buf = Buf & "fifty": Flag = True
    Case 6: Buf = Buf & "sixty": Flag = True
    Case 7: Buf = Buf & "seventy": Flag = True
    Case 8: Buf = Buf & "eighty": Flag = True
    Case 9: Buf = Buf & "ninety": Flag = True
    End Select
   
    If (Flag <> False) Then N = N Mod 10
    If (N > 0) Then
        If (Flag <> False) Then Buf = Buf & "-"
    Else
        EnglishDigitGroup = Buf
        Exit Function
    End If
    
    'Do ones and teens
    Select Case (N)
    Case 0: ' do nothing
    Case 1: Buf = Buf & One
    Case 2: Buf = Buf & Two
    Case 3: Buf = Buf & Three
    Case 4: Buf = Buf & Four
    Case 5: Buf = Buf & Five
    Case 6: Buf = Buf & Six
    Case 7: Buf = Buf & Seven
    Case 8: Buf = Buf & Eight
    Case 9: Buf = Buf & Nine
    Case 10: Buf = Buf & "ten"
    Case 11: Buf = Buf & "eleven"
    Case 12: Buf = Buf & "twelve"
    Case 13: Buf = Buf & "thirteen"
    Case 14: Buf = Buf & "fourteen"
    Case 15: Buf = Buf & "fifteen"
    Case 16: Buf = Buf & "sixteen"
    Case 17: Buf = Buf & "seventeen"
    Case 18: Buf = Buf & "eighteen"
    Case 19: Buf = Buf & "nineteen"
    End Select

    EnglishDigitGroup = Buf
End Function

'This thing got its start from a question on an aptitude test
'given to prospective programmers by Eagle Enterprises of San
'Francisco, California, USA back in 1993. I got it pretty much
'right on the test, but after I was hired, I wanted to be *sure*,
'and that's how English and EnglishDigitGroup were born. Since
'then, I haven't really used it except to answer the question,
'"How do I write checks with Visual Basic or Access?" I only
'recently changed English to accept a Currency rather than a Long
'parameter, so it could print out Bill Gates' net worth, if not
'the US national debt. :-)



Attribute VB_Name = "Punct_Ezat"
Sub |fffd||fffd||fffd||fffd||fffd|1()
Attribute |fffd||fffd||fffd||fffd||fffd|1.VB_Description = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd|11/08/2001 |fffd||fffd||fffd||fffd||fffd||fffd| |fffd|ezaat"
Attribute |fffd||fffd||fffd||fffd||fffd|1.VB_ProcData.VB_Invoke_Func = " \n14"
' |fffd||fffd||fffd||fffd||fffd|1 |fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd|11/08/2001 |fffd||fffd||fffd||fffd||fffd||fffd| |fffd|ezaat
End Sub

'Sub HORRR()
'Dim dec As Currency
Rem 'sak = [R57C7]
Rem 'Range("E51").Select
'SAK = ActiveCell.Text
Rem 'sak = [G57]
'If Val(SAK) = 0 Then Exit Sub
'CRNCY = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| "

'dec = SAK - Int(Val(SAK))
'If dec <> 0 Then dec = Right(Str(Trim(dec)), Len(Trim(Str(dec))) - 1)
'G = Val(dec)
'If G = 0 Then
Rem 'ActiveCell.Offset(0, 1).Range("A1").Select
Rem 'ActiveCell= ActiveCell + 1
Rem 'Columns(1).Name
Rem ' ActiveCell.
Rem '
Rem 'Range("E51").Select

'ActiveCell = " " & "|fffd||fffd||fffd| " & HOROF(SAK, CRNCY) & "|fffd||fffd||fffd||fffd||fffd|"
Rem '[E57] = " " & "|fffd||fffd||fffd| " & HOROF(SAK, CRNCY) & "|fffd||fffd||fffd||fffd||fffd|"
Rem Else
Rem T = Int(SAK)
Rem If T = 0 Then
Rem activeCell = " " & "|fffd||fffd||fffd|  " & dec & " |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| "
'  Else
'  ActiveCell = " " & "|fffd||fffd||fffd| " & Trim(HOROF(SAK, CRNCY)) & dec & " |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| "
'  End If
'End If
'End Sub
Function tafket(Number, Curncey, txtdec)
Dim dec As Currency
If Not IsNumeric(Number) Or Number = "" Or Len(Int(Number)) > 10 Then Exit Function
'If Len(Int(Number)) > 10 Then MsgBox "max 10 numbers": Exit Function
dec = Number - Int(Val(Number))
ST = Trim(Str(Int(Number)))
xol = Len(ST)
wa = " |fffd| "
vn = Val(ST)
Select Case xol
Case 1
     ct = AHAD(vn)
Case 2
     ct = ASHRAT(vn)
Case 3
     ct = MIAT(vn)
Case 4
     vn4 = Val(Mid(ST, 1, 1))
     Select Case vn4
       Case 1
        ct = "|fffd||fffd||fffd|"
       Case 2
        ct = "|fffd||fffd||fffd||fffd||fffd|"
       Case Else
        ct = AHAD(vn4) & " |fffd||fffd||fffd||fffd| "
     End Select
     vn4 = Val(Mid(ST, 2, 3))
     ct = ct & IIf(vn4 > 99, wa, "") & MIAT(vn4)
Case 5
     vn5 = Val(Mid(ST, 1, 2))
     ct = IIf(vn5 = 10, ASHRAT(vn5) & " |fffd||fffd||fffd||fffd| ", ASHRAT(vn5) & " |fffd||fffd||fffd|")
     vn5 = Val(Mid(ST, 3, 3))
     ct = ct & IIf(vn5 > 99, wa, "") & MIAT(vn5)
Case 6
     VN6 = Val(Mid(ST, 1, 3))
     ct = MIAT(VN6)
     VN6 = Val(Mid(ST, 4, 3))
     ct = ct & " |fffd||fffd||fffd| " & IIf(VN6 > 99, wa, "") & MIAT(VN6)
Case 7
     vn = Val(Mid(ST, 1, 1))
     Select Case vn
       Case 1
        ct = "|fffd||fffd||fffd||fffd||fffd| "
       Case 2
        ct = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
       Case Else
        ct = IIf(vn > 0, AHAD(vn), "") & " |fffd||fffd||fffd||fffd||fffd||fffd| "
    End Select
     vn = Val(Mid(ST, 2, 3))
     ct = ct & IIf(vn > 99, wa, "") & IIf(vn > 0, MIAT(vn) & " |fffd||fffd||fffd| ", "")
     vn = Val(Mid(ST, 5, 3))
     ct = ct & IIf(vn > 99, "|fffd|", "") & MIAT(vn)
Case 8
   vn = Val(Mid(ST, 1, 2))
   ct = ASHRAT(vn) & " |fffd||fffd||fffd||fffd||fffd| "
   ct = IIf(vn = 10, ASHRAT(vn) & " |fffd||fffd||fffd||fffd||fffd||fffd| ", ct)
   vn = Val(Mid(ST, 3, 3))
   ct = ct & IIf(vn > 99, wa, "") & IIf(vn > 0, MIAT(vn) & " |fffd||fffd||fffd| ", "")
   vn = Val(Mid(ST, 6, 3))
   ct = ct & IIf(vn > 99, wa, "") & MIAT(vn)
Case 9
   vn = Val(Mid(ST, 1, 3))
   ct = MIAT(vn) & " |fffd||fffd||fffd||fffd||fffd| "
   vn = Val(Mid(ST, 4, 3))
   ct = ct & IIf(vn > 99, wa, "") & IIf(vn > 0, MIAT(vn) & " |fffd||fffd||fffd| ", "")
   vn = Val(Mid(ST, 7, 3))
   ct = ct & IIf(vn > 99, wa, "") & MIAT(vn)
Case 10
     vn = Val(Mid(ST, 1, 1))
     Select Case vn
       Case 1
        ct = "|fffd||fffd||fffd||fffd||fffd| "
       Case 2
        ct = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
       Case Else
        ct = IIf(vn > 0, AHAD(vn), "") & " |fffd||fffd||fffd||fffd||fffd|"
    End Select
    vn = Val(Mid(ST, 2, 3))
   ct = ct & IIf(vn > 99, wa, "") & IIf(vn > 0, MIAT(vn) & " |fffd||fffd||fffd||fffd||fffd| ", "")
   vn = Val(Mid(ST, 5, 3))
   ct = ct & IIf(vn > 99, wa, "") & IIf(vn > 0, MIAT(vn) & " |fffd||fffd||fffd| ", "")
   vn = Val(Mid(ST, 8, 3))
   ct = ct & IIf(vn > 99, wa, "") & MIAT(vn)
End Select
ct = " |fffd||fffd||fffd| " & ct & " " & Curncey & " " & IIf(Val(dec) > 0, wa & (dec * 100) & txtdec, "") & " |fffd||fffd||fffd||fffd||fffd|"
If Val(Number) = 0 Then ct = "|fffd||fffd||fffd|"
'ct = "|fffd||fffd||fffd| " & ct & " " & Curncey & " " & IIf(Val(dec) > 0, wa & (dec * 100) & " " & CRNCY2, "") & " |fffd||fffd||fffd||fffd||fffd|"
tafket = ct

End Function

Function MIAT(NUM3)
vn3 = Int(NUM3 / 100)
Select Case vn3
   Case 1
      HARF3 = "|fffd||fffd||fffd||fffd|"
   Case 2
      HARF3 = "|fffd||fffd||fffd||fffd||fffd|"
   Case 3 To 9
     HARF3 = AHAD(vn3)
     F = "|fffd|"
     B = ""
     D = "|fffd||fffd|"
     If vn3 = 8 Then
      HARF3 = Left(HARF3, Len(HARF3) - 2) & "|fffd||fffd||fffd||fffd|"
     Else
      HARF3 = Left(HARF3, Len(HARF3) - 1) & "|fffd||fffd||fffd||fffd|"
     End If
   Case Else
      HARF3 = ""
End Select
vn3 = NUM3 - vn3 * 100
If Val(Right(vn3, 1)) = 0 Then wa = " " Else: wa = " |fffd| "
 HARF3 = HARF3 & IIf(vn3 > 0, wa & IIf(vn3 < 10, AHAD(vn3), ASHRAT(vn3)), "")
MIAT = HARF3
End Function

Function ASHRAT(NUM2)
wa = " |fffd| "
vn2 = Int(NUM2 / 10)
 Select Case NUM2
     Case 10
       HARF2 = "|fffd||fffd||fffd||fffd|"
     Case 11
       HARF2 = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd|"
     Case 12
       HARF2 = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd|"
     Case 13 To 19
       HARF2 = IIf(NUM2 * (10 / 100) <> 0, AHAD(Right(NUM2, 1)) & " ", "") & " |fffd||fffd||fffd|"
   End Select

   Select Case vn2
       Case 2
       HARF2 = IIf(AHAD(Right(NUM2, 1)) <> "", AHAD(Right(NUM2, 1)) & wa, "") & " |fffd||fffd||fffd||fffd||fffd|"
     Case 3
       HARF2 = IIf(AHAD(Right(NUM2, 1)) <> "", AHAD(Right(NUM2, 1)) & wa, "") & " |fffd||fffd||fffd||fffd||fffd||fffd|"
    Case 4
        HARF2 = AHAD(Right(NUM2, 1)) & IIf(AHAD(Right(NUM2, 1)) <> "", wa, "") & " |fffd||fffd||fffd||fffd||fffd||fffd|"
     Case 5
        HARF2 = AHAD(Right(NUM2, 1)) & IIf(AHAD(Right(NUM2, 1)) <> "", wa, "") & " |fffd||fffd||fffd||fffd||fffd|"
     Case 6
        HARF2 = AHAD(Right(NUM2, 1)) & IIf(AHAD(Right(NUM2, 1)) <> "", wa, "") & " |fffd||fffd||fffd||fffd|"
     Case 7
        HARF2 = AHAD(Right(NUM2, 1)) & IIf(AHAD(Right(NUM2, 1)) <> "", wa, "") & " |fffd||fffd||fffd||fffd||fffd|"
     Case 8
        HARF2 = AHAD(Right(NUM2, 1)) & IIf(AHAD(Right(NUM2, 1)) <> "", wa, "") & " |fffd||fffd||fffd||fffd||fffd||fffd|"
     Case 9
        HARF2 = AHAD(Right(NUM2, 1)) & IIf(AHAD(Right(NUM2, 1)) <> "", wa, "") & " |fffd||fffd||fffd||fffd||fffd|"
 End Select
 ASHRAT = HARF2
End Function

Function AHAD(num1)
 Select Case num1
    Case 0
       harf1 = ""
    Case 1
        harf1 = "|fffd||fffd||fffd||fffd|"
    Case 2
        harf1 = "|fffd||fffd||fffd||fffd||fffd|"
    Case 3
        harf1 = "|fffd||fffd||fffd||fffd||fffd|"
    Case 4
        harf1 = "|fffd||fffd||fffd||fffd||fffd|"
    Case 5
        harf1 = "|fffd||fffd||fffd||fffd|"
    Case 6
        harf1 = "|fffd||fffd||fffd|"
    Case 7
        harf1 = "|fffd||fffd||fffd||fffd|"
    Case 8
        harf1 = "|fffd||fffd||fffd||fffd||fffd||fffd|"
    Case 9
        harf1 = "|fffd||fffd||fffd||fffd|"
  End Select
AHAD = harf1
End Function

Attribute VB_Name = "Punct_Horof"
Public Function Horof(x)
    Ma = " |fffd||fffd||fffd||fffd|"
    Mi = " |fffd||fffd||fffd||fffd|"
    N = Int(x)
    B = Val(Right(Format(x, "000000000000.00"), 2))
    R = SHorof(N)
    If R <> "" And B > 0 Then Result = R & Ma & " |fffd| " & B & Mi
    If R <> "" And B = 0 Then Result = R & Ma
    If R = "" And B <> 0 Then Result = B & Mi
    Horof = Result
End Function
Private Function SHorof(x)
    N = Int(x)
    C = Format(N, "000000000000")
    c1 = Val(Mid(C, 12, 1))
    Select Case c1
    Case Is = 1: Letter1 = "|fffd||fffd||fffd||fffd|"
    Case Is = 2: Letter1 = "|fffd||fffd||fffd||fffd||fffd|"
    Case Is = 3: Letter1 = "|fffd||fffd||fffd||fffd||fffd|"
    Case Is = 4: Letter1 = "|fffd||fffd||fffd||fffd||fffd|"
    Case Is = 5: Letter1 = "|fffd||fffd||fffd||fffd|"
    Case Is = 6: Letter1 = "|fffd||fffd||fffd|"
    Case Is = 7: Letter1 = "|fffd||fffd||fffd||fffd|"
    Case Is = 8: Letter1 = "|fffd||fffd||fffd||fffd||fffd||fffd|"
    Case Is = 9: Letter1 = "|fffd||fffd||fffd||fffd|"
End Select
    c2 = Val(Mid(C, 11, 1))
    Select Case c2
    Case Is = 1: Letter2 = "|fffd||fffd||fffd|"
    Case Is = 2: Letter2 = "|fffd||fffd||fffd||fffd||fffd|"
    Case Is = 3: Letter2 = "|fffd||fffd||fffd||fffd||fffd||fffd|"
    Case Is = 4: Letter2 = "|fffd||fffd||fffd||fffd||fffd||fffd|"
    Case Is = 5: Letter2 = "|fffd||fffd||fffd||fffd||fffd|"
    Case Is = 6: Letter2 = "|fffd||fffd||fffd||fffd|"
    Case Is = 7: Letter2 = "|fffd||fffd||fffd||fffd||fffd|"
    Case Is = 8: Letter2 = "|fffd||fffd||fffd||fffd||fffd||fffd|"
    Case Is = 9: Letter2 = "|fffd||fffd||fffd||fffd||fffd|"
    End Select
    
    If Letter1 <> "" And c2 > 1 Then Letter2 = Letter1 + " |fffd|" + Letter2
    If Letter2 = "" Then Letter2 = Letter1
    If c1 = 0 And c2 = 1 Then Letter2 = Letter2 + "|fffd|"
    If c1 = 1 And c2 = 1 Then Letter2 = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd|"
    If c1 = 2 And c2 = 1 Then Letter2 = "|fffd||fffd||fffd||fffd| |fffd||fffd||fffd|"
    If c1 > 2 And c2 = 1 Then Letter2 = Letter1 + " " + Letter2
    c3 = Val(Mid(C, 10, 1))
    Select Case c3
    Case Is = 1: Letter3 = "|fffd||fffd||fffd||fffd|"
    Case Is = 2: Letter3 = "|fffd||fffd||fffd||fffd||fffd|"
    Case Is > 2: Letter3 = Left(SHorof(c3), Len(SHorof(c3)) - 1) + "|fffd||fffd||fffd||fffd|"
    End Select
    If Letter3 <> "" And Letter2 <> "" Then Letter3 = Letter3 + " |fffd|" + Letter2
    If Letter3 = "" Then Letter3 = Letter2
    
   C4 = Val(Mid(C, 7, 3))
   Select Case C4
   Case Is = 1: Letter4 = "|fffd||fffd||fffd|"
   Case Is = 2: Letter4 = "|fffd||fffd||fffd||fffd||fffd|"
   Case 3 To 10: Letter4 = SHorof(C4) + " |fffd||fffd||fffd||fffd|"
   Case Is > 10: Letter4 = SHorof(C4) + " |fffd||fffd||fffd|"
   End Select
   If Letter4 <> "" And Letter3 <> "" Then Letter4 = Letter4 + " |fffd|" + Letter3
   If Letter4 = "" Then Letter4 = Letter3
   C5 = Val(Mid(C, 4, 3))
   Select Case C5
   Case Is = 1: Letter5 = "|fffd||fffd||fffd||fffd||fffd|"
   Case Is = 2: Letter5 = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
   Case 3 To 10: Letter5 = SHorof(C5) + " |fffd||fffd||fffd||fffd||fffd||fffd|"
   Case Is > 10: Letter5 = SHorof(C5) + " |fffd||fffd||fffd||fffd||fffd|"
   End Select
   If Letter5 <> "" And Letter4 <> "" Then Letter5 = Letter5 + " |fffd|" + Letter4
   If Letter5 = "" Then Letter5 = Letter4
   
   C6 = Val(Mid(C, 1, 3))
   Select Case C6
   Case Is = 1: Letter6 = "|fffd||fffd||fffd||fffd||fffd|"
   Case Is = 2: Letter6 = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
   Case Is > 2: Letter6 = SHorof(C6) + " |fffd||fffd||fffd||fffd||fffd|"
   End Select
   If Letter6 <> "" And Letter5 <> "" Then Letter6 = Letter6 + " |fffd|" + Letter5
   If Letter6 = "" Then Letter6 = Letter5
   SHorof = Letter6
   
End Function


Attribute VB_Name = "Punct_Tarekh"
Function GetNo(ns As String, sex As Integer, Power As Integer, frst() As String, frst1() As String, scnd() As String, thrd() As String) As String
  Dim Lngth As Integer, InvSex  As Integer
  ReDim Indx(3) As Integer
  ReDim TmpArray(2) As String
  Dim tms As String

  If sex = 0 Then
    InvSex = 1
  Else
    InvSex = 0
  End If
  '|fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
  Lngth = Len(ns)
  '|fffd||fffd||fffd||fffd||fffd||fffd|
  Indx(1) = Val(Mid$(ns, Lngth, 1))
  TmpArray(0) = frst(Indx(1), sex)
  Lngth = Lngth - 1
  If Lngth > 0 Then
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Indx(2) = Val(Mid$(ns, Lngth, 1))
    If TmpArray(0) <> "" Then
      TmpArray(1) = scnd(Indx(2), InvSex)
    Else
      TmpArray(1) = scnd(Indx(2), sex)
    End If
    If (Indx(2) > 1) And (TmpArray(0) <> "") Then '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| 1 |fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
      TmpArray(0) = TmpArray(0) + " |fffd|"
    ElseIf (Indx(1) = 1) And (Indx(2) = 1) Then  '|fffd||fffd||fffd| |fffd||fffd||fffd|
      TmpArray(0) = frst1(1, sex)
    ElseIf (Indx(1) = 2) And (Indx(2) = 1) Then ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
      TmpArray(0) = frst1(2, sex)
    End If
    Lngth = Lngth - 1
    If Lngth > 0 Then
    '|fffd||fffd||fffd||fffd||fffd||fffd|
      Indx(3) = Val(Mid$(ns, Lngth, 1))
      TmpArray(2) = thrd(Indx(3))
      If (Indx(3) > 0) And ((TmpArray(0) <> "") Or (TmpArray(1) <> "")) Then TmpArray(2) = TmpArray(2) + " |fffd|"
    Else
      GoTo last
    End If
  Else
    GoTo last
  End If
  '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|,|fffd||fffd||fffd|,...)|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
last:
Select Case Power
  Case Is = -1
    tms = TmpArray(2) & TmpArray(0) & TmpArray(1)
    If (TmpArray(0) <> "") And (TmpArray(1) = "") And (TmpArray(2) = "") Then
      'GetNo = tms & " |fffd||fffd| |fffd||fffd||fffd||fffd|"
      GetNo = tms & "|fffd||fffd||fffd||fffd|"
    ElseIf (TmpArray(0) <> "") And (TmpArray(1) <> "") And (TmpArray(2) = "") Then
       'GetNo = tms & " |fffd||fffd| |fffd||fffd||fffd||fffd|"
        GetNo = tms & "|fffd||fffd||fffd||fffd|"
   ElseIf (TmpArray(0) <> "") And (TmpArray(1) <> "") And (TmpArray(2) <> "") Then
      ' GetNo = tms & " |fffd||fffd| |fffd||fffd||fffd|"
       GetNo = tms & "|fffd||fffd||fffd||fffd|"
    End If
  Case Is = 0
    GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1)
  Case Is = 1
    If (Indx(1) = 1) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = " |fffd||fffd||fffd| "
    ElseIf (Indx(1) = 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = " |fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) > 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = TmpArray(0) & " |fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 0) And (Indx(2) = 1) And (Indx(3) = 0) Then
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 0) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1)
    Else
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd| "
    End If
  Case Is = 2
    If (Indx(1) = 1) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = " |fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = " |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) > 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = TmpArray(0) & " |fffd||fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 0) And (Indx(2) = 1) And (Indx(3) = 0) Then
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 0) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1)
    Else
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd||fffd| "
    End If
  Case Is = 3
    If (Indx(1) = 1) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = " |fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = " |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) > 2) And (Indx(2) = 0) And (Indx(3) = 0) Then
      GetNo = TmpArray(0) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
    ElseIf (Indx(1) = 0) And (Indx(2) = 1) And (Indx(3) = 0) Then
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
    Else
      GetNo = TmpArray(2) & TmpArray(0) & TmpArray(1) & " |fffd||fffd||fffd||fffd||fffd| "
    End If
 End Select
End Function

Function WriteNo(no As String, sex As Integer) As String
  Static FirstArray(9, 1) As String
  Static FirstArray1(2, 1)  As String
  Static SecondArray(9, 1) As String
  Static ThirdArray(9) As String
  
  ReDim Parts(4) As String
  ReDim PartStr(-1 To 3) As String
  
  Dim Length As Integer, I As Integer, TempLength As Integer
  Dim LENGTH1 As Integer
  Dim NoString As String, pos  As Integer
  Dim AfterPoint As String
  Dim txt As String
  Dim txt1 As String
  'sex=0 |fffd||fffd||fffd||fffd|
  'sex= 1 |fffd||fffd||fffd||fffd|

  FirstArray(1, 0) = "|fffd||fffd||fffd||fffd| ": FirstArray(2, 0) = "|fffd||fffd||fffd||fffd||fffd| ": FirstArray(3, 0) = "|fffd||fffd||fffd||fffd||fffd| "
  FirstArray(4, 0) = "|fffd||fffd||fffd||fffd||fffd| ": FirstArray(5, 0) = "|fffd||fffd||fffd||fffd| ": FirstArray(6, 0) = "|fffd||fffd||fffd| "
  FirstArray(7, 0) = "|fffd||fffd||fffd||fffd| ": FirstArray(8, 0) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": FirstArray(9, 0) = "|fffd||fffd||fffd||fffd| "

  FirstArray(1, 1) = "|fffd||fffd||fffd||fffd||fffd| ": FirstArray(2, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": FirstArray(3, 1) = "|fffd||fffd||fffd||fffd| "
  FirstArray(4, 1) = "|fffd||fffd||fffd||fffd| ": FirstArray(5, 1) = "|fffd||fffd||fffd| ": FirstArray(6, 1) = "|fffd||fffd| "
  FirstArray(7, 1) = "|fffd||fffd||fffd| ": FirstArray(8, 1) = "|fffd||fffd||fffd||fffd| ": FirstArray(9, 1) = "|fffd||fffd||fffd| "
                                                        
  FirstArray1(1, 0) = "|fffd||fffd||fffd| ": FirstArray1(2, 0) = "|fffd||fffd||fffd||fffd| "
  
  FirstArray1(1, 1) = "|fffd||fffd||fffd||fffd| ": FirstArray1(2, 1) = "|fffd||fffd||fffd||fffd||fffd| "
                     
  SecondArray(1, 0) = "|fffd||fffd||fffd||fffd| ": SecondArray(2, 0) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(3, 0) = "|fffd||fffd||fffd||fffd||fffd||fffd| "
  SecondArray(4, 0) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": SecondArray(5, 0) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(6, 0) = "|fffd||fffd||fffd||fffd| "
  SecondArray(7, 0) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(8, 0) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": SecondArray(9, 0) = "|fffd||fffd||fffd||fffd||fffd| "

  SecondArray(1, 1) = "|fffd||fffd||fffd| ": SecondArray(2, 1) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(3, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd| "
  SecondArray(4, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": SecondArray(5, 1) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(6, 1) = "|fffd||fffd||fffd||fffd| "
  SecondArray(7, 1) = "|fffd||fffd||fffd||fffd||fffd| ": SecondArray(8, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": SecondArray(9, 1) = "|fffd||fffd||fffd||fffd||fffd| "


  ThirdArray(1) = "|fffd||fffd||fffd||fffd| ": ThirdArray(2) = "|fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(3) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
  ThirdArray(4) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(5) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(6) = "|fffd||fffd||fffd||fffd||fffd||fffd| "
  ThirdArray(7) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(8) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ": ThirdArray(9) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| "
  
  txt = "": I = -1

  If Val(no) = 0 Then '|fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
    WriteNo = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| "
    Exit Function
  End If
  '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
  NoString = Trim(no)
  
  ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
  Length = Len(NoString)
  '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  pos = InStr(NoString, ".")
  '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  If pos > 0 Then
    
    AfterPoint = Right$(NoString, Length - pos)
    '---------------------------------------'
    If Len(AfterPoint) = 1 Or Val(Mid(AfterPoint, 2)) = 0 Then
     txt1 = SecondArray(Left(AfterPoint, 1), 1) & " |fffd||fffd||fffd||fffd| "
      Else
     txt1 = GetNo(AfterPoint, sex, -1, FirstArray(), FirstArray1(), SecondArray(), ThirdArray())
    End If
      '---------------------------------------'
     NoString = Left$(NoString, pos - 1)
     Length = Len(NoString)
   Else
    pos = InStr(NoString, ",")
    If pos > 0 Then
      AfterPoint = Right$(NoString, Length - pos)
    '---------------------------------------'
    If Len(AfterPoint) = 1 Then
     txt1 = SecondArray(AfterPoint, 1) & " |fffd||fffd||fffd||fffd| "
     Else
     txt1 = GetNo(AfterPoint, sex, -1, FirstArray(), FirstArray1(), SecondArray(), ThirdArray())
    End If
    '---------------------------------------'
      NoString = Left$(NoString, pos - 1)
      Length = Len(NoString)
    End If
  End If
  
  '|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd|
  TempLength = Length
  Parts(0) = NoString
  Do While TempLength >= 3
    TempLength = TempLength - 3
    I = I + 1
    Parts(I) = Right$(NoString, 3)
    NoString$ = Left$(NoString, TempLength)
  Loop
  Parts(I + 1) = NoString
  '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
  For I = 0 To 3
    If Len(Parts(I)) > 0 Then
      PartStr(I) = GetNo(Parts(I), sex, I, FirstArray(), FirstArray1(), SecondArray(), ThirdArray())
    Else
      Exit For
    End If
  Next
 '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
  For I = 3 To 0 Step -1
    If Len(PartStr(I)) > 0 Then
      If Len(PartStr(I - 1)) > 0 Then
        txt = txt & " " & PartStr(I) & "|fffd|"
      Else
        txt = txt & " " & PartStr(I) & " "
      End If
    End If
  Next
  
 If Val(AfterPoint) > 0 Then
    'txt = txt & "|fffd|" & GetNo(AfterPoint, sex, -1, FirstArray(), FirstArray1(), SecondArray(), ThirdArray())
     txt = " |fffd||fffd||fffd| ( " & txt & "  |fffd||fffd||fffd||fffd||fffd| " & "|fffd|" & txt1 & " ) |fffd||fffd||fffd||fffd||fffd| "

   Else
       txt = " |fffd||fffd||fffd| ( " & txt & "  |fffd||fffd||fffd||fffd||fffd| " & " ) |fffd||fffd||fffd||fffd||fffd| "
  End If
  WriteNo = txt
End Function


Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd|27"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
