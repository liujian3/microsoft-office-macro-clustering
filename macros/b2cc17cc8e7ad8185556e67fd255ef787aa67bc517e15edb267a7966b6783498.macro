Attribute VB_Name = "ExcelEvents_Cls"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private WithEvents App As Application
Attribute App.VB_VarHelpID = -1

Private Sub App_SheetBeforeDoubleClick(ByVal Sh As Object, ByVal Target As Range, Cancel As Boolean)
'On Error Resume Next
Dim strFile As String
If InStr(1, Sh.Cells(Target.Row, Target.Column), ".jpg") > 0 Then
    strFile = Return_File_Path(Sh.Cells(Target.Row, Target.Column))
    Call TerminateApp
    Shell (Chr(34) & Addin_Workbook.Worksheets("System_sht").Cells(1, 1) & Chr(34) & " " & strFile & " " & Addin_Workbook.Worksheets("System_sht").Cells(2, 1) & " " & Addin_Workbook.Worksheets("System_sht").Cells(3, 1))
    Sh.Cells(1, 1).Select
    MyRibbonUI.InvalidateControl ("FramesBox")
    MyRibbonUI.InvalidateControl ("SpeedBox")
End If
End Sub

Private Sub Class_Initialize()
    Set App = Application
End Sub





Attribute VB_Name = "Global_mdl"
Option Explicit
Public XLapp As ExcelEvents_Cls
Public Addin_Workbook As Workbook
Public FramesTxt As String
Public SpeedTxt As String
Public MyRibbonUI As IRibbonUI

Public Sub RibbonLoad(ribbonUI As IRibbonUI)
    Set MyRibbonUI = ribbonUI
End Sub

Public Sub FramesBox_onChange(control As IRibbonControl, ByRef text)
    FramesTxt = text
    If Val(FramesTxt) >= 0 And Val(FramesTxt) < 101 Then
        MyRibbonUI.InvalidateControl (control.ID)
        Addin_Workbook.Worksheets("system_sht").Cells(2, 1) = CInt(FramesTxt)
        Addin_Workbook.Save
    Else
        MsgBox "Outside range, try again."
    End If
End Sub

Public Sub FramesBox_GetText(control As IRibbonControl, ByRef text)
    text = Addin_Workbook.Worksheets("system_sht").Cells(2, 1).Value
End Sub

Public Sub SpeedBox_onChange(control As IRibbonControl, ByRef text)
    SpeedTxt = text
    If Val(SpeedTxt) >= 0 And Val(SpeedTxt) < 501 Then
        MyRibbonUI.InvalidateControl (control.ID)
        Addin_Workbook.Worksheets("system_sht").Cells(3, 1) = CInt(SpeedTxt)
        Addin_Workbook.Save
    Else
        MsgBox "Outside range, try again."
    End If
End Sub

Public Sub SpeedBox_GetText(control As IRibbonControl, ByRef text)
    text = Addin_Workbook.Worksheets("system_sht").Cells(3, 1).Value
End Sub

Function Return_File_Path(strIn As String) As String
Dim nPos As Integer
If InStr(1, strIn, "\", vbTextCompare) > 0 Then
    For nPos = Len(strIn) To 1 Step -1
        If Mid(strIn, nPos, 1) = "\" Then
            Return_File_Path = Mid(strIn, nPos + 1, 99)
            Exit Function
        End If
    Next nPos
Else
    Return_File_Path = strIn
End If
End Function

Sub TerminateApp()
     '---------------------------------------------------------------------------------------
     ' Terminates the exe process specified.
     ' Uses WMI (Windows Management Instrumentation) to query all running processes
     ' then terminates ALL instances of the exe process held in the variable strTerminateThis.
     '---------------------------------------------------------------------------------------

Dim strTerminateThis As String
'The variable to hold the process to terminate

Dim objWMIcimv2 As Object, objProcess As Object, objList As Object
Dim intError As Integer

'Process to terminate |fffd| you could specify and .exe program name here

strTerminateThis = "Virtual RACAS.exe"

'Connect to CIMV2 Namespace and then find the .exe process

Set objWMIcimv2 = GetObject("winmgmts:{impersonationLevel=impersonate}!\\.\root\cimv2")
Set objList = objWMIcimv2.ExecQuery("select * from win32_process where name='" & strTerminateThis & "'")
For Each objProcess In objList
            intError = objProcess.Terminate 'Terminates a process and all of its threads.
             'Return value is 0 for success. Any other number is an error.
            If intError <> 0 Then Exit For
Next

'ALL instances of exe (strTerminateThis) have been terminated
Set objWMIcimv2 = Nothing
Set objList = Nothing
Set objProcess = Nothing

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit



Private Sub Workbook_Open()
Set Addin_Workbook = ThisWorkbook
Set XLapp = New ExcelEvents_Cls

Dim strFileToOpen As String

' Need path to Virtual RACAS
If Worksheets("system_sht").Cells(1, 1) = "" Then
    'browse for the Virtual RACAS.exe
    strFileToOpen = Application.GetOpenFilename _
    (Title:="Locate Virtual RACAS.exe", _
    FileFilter:="Virtual RACAS *.exe* (*.exe*),")


    If strFileToOpen = "" Then
        MsgBox "No file selected.", vbExclamation, "Sorry!"
        Exit Sub
    Else
        Worksheets("system_sht").Cells(1, 1) = strFileToOpen
    End If

End If

If Not fileExists(Worksheets("system_sht").Cells(1, 1)) Then
    Worksheets("system_sht").Cells(1, 1) = ""
    strFileToOpen = Application.GetOpenFilename _
    (Title:="Locate Virtual RACAS.exe", _
    FileFilter:="Virtual RACAS *.exe* (*.exe*),")


    If strFileToOpen = "False" Then
        MsgBox "No file selected.", vbExclamation, "Sorry!"
        Exit Sub
    Else
        Worksheets("system_sht").Cells(1, 1) = strFileToOpen
    End If
End If

If Worksheets("system_sht").Cells(2, 1) = "" Then Worksheets("system_sht").Cells(2, 1) = "0"
If Worksheets("system_sht").Cells(3, 1) = "" Then Worksheets("system_sht").Cells(3, 1) = "0"

ThisWorkbook.Save

End Sub

Function fileExists(s_fileName As String) As Boolean

    Dim obj_fso As Object

    Set obj_fso = CreateObject("Scripting.FileSystemObject")
    fileExists = obj_fso.fileExists(s_fileName)

End Function

' InQuest injected base64 decoded content
' x)br

INQUEST-PP=macro
