Attribute VB_Name = "Module1"

Function FSheet(Arg1 As String)
Attribute FSheet.VB_ProcData.VB_Invoke_Func = " \n14"
    Found = False   ' Initialize variable.

    For Each Worksheet In Worksheets   ' Iterate through each element.
        If Worksheet.Name = Arg1 Then ' If Text equals "Hello".
            Found = True    ' Set Found to True.
            Exit For    ' Exit loop.
        End If
    Next
    FSheet = Found
End Function

Function ReturnIndex(Arg1 As String)
Attribute ReturnIndex.VB_ProcData.VB_Invoke_Func = " \n14"
    Found = False   ' Initialize variable.

    For Each Worksheet In Worksheets   ' Iterate through each element.
        If Worksheet.Name = Arg1 Then ' If Text equals "Hello".
            Found = True    ' Set Found to True.
            Exit For    ' Exit loop.
        End If
    Next
    ReturnIndex = Worksheet.Index
End Function

Function ReturnHidden(Arg1 As String)
Attribute ReturnHidden.VB_ProcData.VB_Invoke_Func = " \n14"
    Found = False   ' Initialize variable.
    Count = 0
    For Each Worksheet In Worksheets   ' Iterate through each element.
        If Worksheet.Visible = False Then
            Count = Count + 1
        End If
        If Worksheet.Name = Arg1 Then ' If Text equals "Hello".
            Found = True    ' Set Found to True.
            Exit For    ' Exit loop.
        End If
    Next
    ReturnHidden = Count
End Function

Function ReturnCatNbr()
Attribute ReturnCatNbr.VB_ProcData.VB_Invoke_Func = " \n14"
    Count = 0
    For Each Worksheet In Worksheets   ' Iterate through each element.
        If InStr(Worksheet.Name, "Cat") > 0 Then
            Count = Count + 1
        End If
    Next
    ReturnCatNbr = Count
End Function
'---------------------
Sub StartingCurveFormat(RSSelectedOldPos As Integer, nsteps As Integer, STARTINGTIME As Boolean, NotAllZero2 As Boolean, NotAllZero3 As Boolean, NotAllZero4 As Boolean, NotAllZero5 As Boolean, NotAllZero6 As Boolean, MaxCurrent As Single, Speed1or2 As Integer, Standard As String)
Attribute StartingCurveFormat.VB_ProcData.VB_Invoke_Func = " \n14"
'---------------------
    Dim MaximumScaleY As Single
    Dim Count As Integer
    Dim SeriesCounter As Integer
    Dim Version8 As Integer
        
        Application.Sheets(RSSelectedOldPos & ".3").ChartObjects(1).Activate
        Application.Sheets(RSSelectedOldPos & ".3").ChartObjects(1).Select
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(1).Delete
        Next Count
        SeriesCounter = 0
        If NotAllZero2 And STARTINGTIME Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".3").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("U1:U" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 30
                .Weight = 4
                .LineStyle = 2
            End With
        End If
        If NotAllZero3 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".3").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("V1:V" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 5
                .Weight = 4
                .LineStyle = 1
            End With
            On Error Resume Next
            Application.Sheets(RSSelectedOldPos & ".3").ChartObjects(1).Chart.ChartTitle.Delete
            On Error GoTo 0
        End If
    
        If NotAllZero4 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".3").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("W1:W" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("Z2:Z" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 1
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 3
                .Weight = 4
                .LineStyle = 3
            End With
        End If
        If NotAllZero5 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".3").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("X1:X" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 2
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 13
                .Weight = 4
                .LineStyle = 1
            End With
        End If
        If NotAllZero6 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".3").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("Y1:Y" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("Z2:Z" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).AxisGroup = 2
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 10
                .Weight = 4
                .LineStyle = 3
            End With
        End If
        
        If Application.ActiveChart.Axes(1).HasTitle = False Then
            Application.ActiveChart.Axes(1).HasTitle = True
        End If
        If Standard = "M3000 (NEMA)" Then
            Application.ActiveChart.Axes(1).AxisTitle.Characters.Text = "Speed [rpm]"
        Else
            Application.ActiveChart.Axes(1).AxisTitle.Characters.Text = "Speed [r/min]"
        End If
        If Application.ActiveChart.Axes(2).HasTitle = False Then
            Application.ActiveChart.Axes(2).HasTitle = True
        End If
        If Standard = "M3000 (NEMA)" Then
            Application.ActiveChart.Axes(2).AxisTitle.Characters.Text = "Torque/Tn"
        Else
            Application.ActiveChart.Axes(2).AxisTitle.Characters.Text = "Ts/Tn"
        End If

        Application.ActiveChart.Axes(2).MaximumScaleIsAuto = True
        MaximumScaleY = Int(Application.ActiveChart.Axes(xlValue).MaximumScale) + 1
        If MaxCurrent > MaximumScaleY Then
            'MaximumScaleY = Int((MaxCurrent * 0.5)) + 1
            MaximumScaleY = Int(MaxCurrent + 2) * 0.5
        End If
        Application.ActiveChart.Axes(2).MinimumScale = 0
        Application.ActiveChart.Axes(2).MaximumScale = MaximumScaleY
        Application.ActiveChart.Axes(2, 2).MaximumScale = Application.ActiveChart.Axes(2).MaximumScale * 2
     
        If Application.ActiveChart.Axes(2, 2).HasTitle = False Then
            Application.ActiveChart.Axes(2, 2).HasTitle = True
        End If
        If Standard = "M3000 (NEMA)" Then
            Application.ActiveChart.Axes(2, 2).AxisTitle.Characters.Text = "Amps/In"
        Else
            Application.ActiveChart.Axes(2, 2).AxisTitle.Characters.Text = "Is/In"
        End If

        Application.ActiveChart.PlotArea.Interior.ColorIndex = 2
       
        Application.Sheets(RSSelectedOldPos & ".3").ChartObjects(1).Activate
        'Application.Sheets(RSSelectedOldPos & ".3").ChartObjects("Chart 4").Chart.PlotArea.Height = 302
        'Application.ActiveChart.PlotArea.Height = 304
        'Application.Sheets(RSSelectedOldPos & ".3").ChartObjects(1).PlotArea.Height = 300

        Application.ActiveChart.Axes(2).TickLabels.NumberFormat = "General"
        'Application.ActiveChart.Axes(2).MajorUnit = 0.25
        
        'ActiveChart.Axes(xlValue).MajorGridlines.Select
        'ActiveChart.PlotArea.Select
        If Val(Application.Version) >= 8 Then
            Version8 = 0
        Else
            Version8 = 15
        End If
        ActiveChart.Legend.Height = 32
        ActiveChart.Legend.Top = 370
        ActiveChart.Legend.Left = 24 + Version8
        ActiveChart.Legend.Width = 390 - Version8
       
        ActiveChart.PlotArea.Left = 15
        ActiveChart.PlotArea.Width = 400 + Version8
        ActiveChart.PlotArea.Top = 3
        ActiveChart.PlotArea.Height = (ActiveChart.Legend.Top - (50 - (Version8)))
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(Count).Smooth = True
        Next Count
End Sub
'------------------
Sub LoadCurveFormat(RSSelectedOldPos As Integer, nsteps As Integer, NotAllZero2 As Boolean, NotAllZero3 As Boolean, NotAllZero4 As Boolean)
Attribute LoadCurveFormat.VB_ProcData.VB_Invoke_Func = " \n14"
'------------------
    Dim SeriesCounter As Integer
    Dim Version8 As Integer
        Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Activate
        Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Select
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(1).Delete
        Next Count
        SeriesCounter = 0
        If NotAllZero2 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".2").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("U1:U" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 30
                .Weight = 4
                .LineStyle = 1
            End With
        End If
        If NotAllZero3 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".2").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("V6:V" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T7:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 5
                .Weight = 4
                .LineStyle = 4
            End With
        End If
    
        If NotAllZero4 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".2").Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("W1:W" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 3
                .Weight = 4
                .LineStyle = 3
            End With
        End If
        
        If Application.ActiveChart.Axes(1).HasTitle = False Then
            Application.ActiveChart.Axes(1).HasTitle = True
            Application.ActiveChart.Axes(1).AxisTitle.Characters.Text = "P2/Pn"
        End If
        
        Application.ActiveChart.PlotArea.Interior.ColorIndex = 2
        
        Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Activate
        
        Application.ActiveChart.Axes(2).TickLabels.NumberFormat = "General"
       
        'ActiveChart.Axes(xlValue).MajorGridlines.Select
        'ActiveChart.PlotArea.Select
        If Val(Application.Version) >= 8 Then
            Version8 = 0
        Else
            Version8 = 15
        End If
        ActiveChart.Legend.Height = 18
        ActiveChart.Legend.Top = 370
        ActiveChart.Legend.Left = 21 + Version8
        ActiveChart.Legend.Width = 392 - Version8
        
        ActiveChart.PlotArea.Left = 15
        ActiveChart.PlotArea.Width = 400 + Version8
        ActiveChart.PlotArea.Top = 3
        ActiveChart.PlotArea.Height = (ActiveChart.Legend.Top - (50 - (Version8)))
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(Count).Smooth = True
        Next Count
         
        'Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Chart.PlotArea.Left = 15
        'Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Chart.PlotArea.Width = 415
        'Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Chart.PlotArea.Top = 3
        'Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Chart.PlotArea.Height = 280
        
        'Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Chart.Legend.Height = 18
        'Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Chart.Legend.Top = 315
        'Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Chart.Legend.Left = 21
        'Application.Sheets(RSSelectedOldPos & ".2").ChartObjects(1).Chart.Legend.Width = 415

End Sub
'------------------
Sub LoadCurveFormat2sp(RSSelectedOldPos As Integer, nsteps As Integer, NotAllZero2 As Boolean, NotAllZero3 As Boolean, NotAllZero4 As Boolean, SpeedChar As String)
Attribute LoadCurveFormat2sp.VB_ProcData.VB_Invoke_Func = " \n14"
'------------------
    Dim SeriesCounter As Integer
    Dim Version8 As Integer
        Application.Sheets(RSSelectedOldPos & ".2" & SpeedChar).ChartObjects(1).Activate
        Application.Sheets(RSSelectedOldPos & ".2" & SpeedChar).ChartObjects(1).Select
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(1).Delete
        Next Count
        SeriesCounter = 0
        If NotAllZero2 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".2" & SpeedChar).Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("U1:U" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 30
                .Weight = 4
                .LineStyle = 1
            End With
        End If
        If NotAllZero3 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".2" & SpeedChar).Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("V6:V" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T7:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 5
                .Weight = 4
                .LineStyle = 4
            End With
        End If
    
        If NotAllZero4 Then
            SeriesCounter = SeriesCounter + 1
            Application.Sheets(RSSelectedOldPos & ".2" & SpeedChar).Activate
            Application.ActiveChart.SeriesCollection.Add Source:=Application.Range("W1:W" & nsteps + 2), Rowcol:=2, SeriesLabels:=True, CategoryLabels:=False, Replace:=False
            Application.ActiveChart.SeriesCollection(SeriesCounter).XValues = Application.Range("T2:T" & nsteps + 2)
            Application.ActiveChart.SeriesCollection(SeriesCounter).MarkerStyle = 0
            Application.ActiveChart.SeriesCollection(SeriesCounter).Smooth = False 'Added Johnny 9808
            With Application.ActiveChart.SeriesCollection(SeriesCounter).Border
                .ColorIndex = 3
                .Weight = 4
                .LineStyle = 3
            End With
        End If
        
        If Application.ActiveChart.Axes(1).HasTitle = False Then
            Application.ActiveChart.Axes(1).HasTitle = True
            Application.ActiveChart.Axes(1).AxisTitle.Characters.Text = "P2/Pn"
        End If
        
        Application.ActiveChart.PlotArea.Interior.ColorIndex = 2
        
        Application.Sheets(RSSelectedOldPos & ".2" & SpeedChar).ChartObjects(1).Activate
        
        Application.ActiveChart.Axes(2).TickLabels.NumberFormat = "General"
       
        'ActiveChart.Axes(xlValue).MajorGridlines.Select
        'ActiveChart.PlotArea.Select
        If Val(Application.Version) >= 8 Then
            Version8 = 0
        Else
            Version8 = 15
        End If
        ActiveChart.Legend.Height = 18
        ActiveChart.Legend.Top = 370
        ActiveChart.Legend.Left = 21 + Version8
        ActiveChart.Legend.Width = 392 - Version8
        
        ActiveChart.PlotArea.Left = 15
        ActiveChart.PlotArea.Width = 400 + Version8
        ActiveChart.PlotArea.Top = 3
        ActiveChart.PlotArea.Height = (ActiveChart.Legend.Top - (50 - (Version8)))
        For Count = 1 To Application.ActiveChart.SeriesCollection.Count
            Application.ActiveChart.SeriesCollection(Count).Smooth = True
        Next Count
         
End Sub
'------------------
Sub CopyStaringData(Msg1 As String, Msg2 As String, Msg3 As String, CountRow As Integer, CountCol As Integer)
Attribute CopyStaringData.VB_ProcData.VB_Invoke_Func = " \n14"
'------------------
    i = 1
    Dim Msg As String
    Msg = Msg1 + Msg2 + Msg3
    startvalue = 1
    Do Until Mid(Msg, i, 1) = ""
        If Asc(Mid(Msg, i, 1)) = 13 Then
            If Len(Mid(Msg, startvalue, i - startvalue)) > 0 Then
                Application.ActiveWorkbook.ActiveSheet.Cells(CountRow, CountCol).Value = CSng(Mid(Msg, startvalue, i - startvalue))
            Else
                Application.ActiveWorkbook.ActiveSheet.Cells(CountRow, CountCol).Value = ""
            End If
            startvalue = i + 1
            CountRow = CountRow + 1
        End If
        i = i + 1
    Loop
    If startvalue < i Then
        Application.ActiveWorkbook.ActiveSheet.Cells(CountRow, CountCol).Value = CSng(Mid(Msg, startvalue, i))
    End If
End Sub
'
Sub DOLPrintToPrinter(Index As Integer, RSSelectedOldPos As Integer, READCOMPLEMENT As Boolean, MotorWinding As String)
    On Error Resume Next
    Select Case Index
    Case 0 ' technical data sheet (all)
        Application.Sheets(RSSelectedOldPos & ".1").Select False
        'ActiveSheet.PrintOut Copies:=1
        'Application.Sheets(RSSelectedOldPos & ".1").PrintOut Copies:=1
        If READCOMPLEMENT = True Then
            If MotorWinding = "2-speed" Then
                Application.Sheets(RSSelectedOldPos & ".2Hi").Select False
                Application.Sheets(RSSelectedOldPos & ".2Lo").Select False
            Else
                Application.Sheets(RSSelectedOldPos & ".2").Select False
            End If
            'ActiveSheet.PrintOut Copies:=1
            'Application.Sheets(RSSelectedOldPos & ".2").PrintOut Copies:=1
            Application.Sheets(RSSelectedOldPos & ".3").Select False
            'ActiveSheet.PrintOut Copies:=1
            'Application.Sheets(RSSelectedOldPos & ".3").PrintOut Copies:=1
        End If
        ActiveWindow.SelectedSheets.PrintOut
    Case 1
        'Application.Sheets(RSSelectedOldPos & ".1").PrintOut Copies:=1
        Application.Sheets(RSSelectedOldPos & ".1").Activate
        ActiveSheet.PrintOut Copies:=1
    Case 2
        'Application.Sheets(RSSelectedOldPos & ".2").PrintOut Copies:=1 'LoadCurve
        If MotorWinding = "2-speed" Then
            Application.Sheets(RSSelectedOldPos & ".2Hi").Activate
            ActiveSheet.PrintOut Copies:=1
            Application.Sheets(RSSelectedOldPos & ".2Lo").Activate
            ActiveSheet.PrintOut Copies:=1
        Else
            Application.Sheets(RSSelectedOldPos & ".2").Activate
            ActiveSheet.PrintOut Copies:=1
        End If
    Case 3
        'Application.Sheets(RSSelectedOldPos & ".3").PrintOut Copies:=1 'starting conditions
        Application.Sheets(RSSelectedOldPos & ".3").Activate
        ActiveSheet.PrintOut Copies:=1
    Case 4
        'Application.Sheets("Motorlist").PrintOut Copies:=1
        Application.Sheets("Motorlist").Activate
        ActiveSheet.PrintOut Copies:=1
    Case 5
        'Application.Sheets("EqDiag").PrintOut Copies:=1
        Application.Sheets(RSSelectedOldPos & ".Eq").Activate
        ActiveSheet.PrintOut Copies:=1
    Case 6
        Application.Sheets("Cat." & RSSelectedOldPos).Activate
        ActiveSheet.PrintOut Copies:=1
    Case 7
        Application.Sheets("Motorlist1").Activate
        ActiveSheet.PrintOut Copies:=1
    Case 8
        Application.Sheets("Motorlist2").Activate
        ActiveSheet.PrintOut Copies:=1
    End Select
End Sub
Sub FormatDatasheet(Standard As String)
Attribute FormatDatasheet.VB_ProcData.VB_Invoke_Func = " \n14"

End Sub
Sub FormatStartingsheet(Standard As String)
Attribute FormatStartingsheet.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim CountRow As Integer
    Dim CountCol As Integer
    Dim Obj As Object
    Set Obj = Application.ActiveWorkbook.ActiveSheet
    If Standard = "M3000 (NEMA)" And Obj.Cells(20, 3).Value = "LRA (%)" Then
        'allready formated for NEMA
        Exit Sub
    ElseIf Standard = "IEC" And Obj.Cells(18, 5).Value = "IS/IN" Then
        'allready formated for IEC
        Exit Sub
    End If
    If Standard = "M3000 (NEMA)" Then
        'Line 13
        Obj.Cells(13, 6).Value = "Amps"
        'Line 16
        Obj.Cells(16, 1).Value = "WK2motor (lb-ft2)"
        Obj.Cells(16, 1).Characters(start:=3, Length:=1).Font.Superscript = True
        Obj.Cells(16, 1).Characters(start:=4, Length:=5).Font.Subscript = True
        Obj.Cells(16, 1).Characters(start:=16, Length:=1).Font.Superscript = True
        'Line 17
        Obj.Cells(17, 1).Value = "WK2load (lb-ft2)"
        Obj.Cells(17, 1).Characters(start:=3, Length:=1).Font.Superscript = True
        Obj.Cells(17, 1).Characters(start:=4, Length:=4).Font.Subscript = True
        Obj.Cells(17, 1).Characters(start:=15, Length:=1).Font.Superscript = True
        'Line 18
        Obj.Cells(18, 1).Value = "Load speed (rpm)"
        'Line 19
        Obj.Cells(19, 1).Value = "TN (lb-ft)"
        Obj.Cells(19, 3).Value = "Speed (rpm)"
        Obj.Cells(19, 5).Value = "Speed (rpm)"
        'Line 20
        Obj.Cells(20, 1).Value = "Tload (lb-ft)"
        Obj.Cells(20, 1).Characters(start:=2, Length:=4).Font.Subscript = True
        Obj.Cells(20, 3).Value = "LRA (%)"
        Obj.Cells(20, 5).Value = "LRA (%)"
    Else  'IEC
        'Line 13
        Obj.Cells(13, 6).Value = "A"
        'Line 16
        Obj.Cells(16, 1).Value = "Jmotor (kgm2)"
        Obj.Cells(16, 1).Characters(start:=2, Length:=5).Font.Subscript = True
        Obj.Cells(16, 1).Characters(start:=12, Length:=1).Font.Superscript = True
        'Line 17
        Obj.Cells(17, 1).Value = "Jmotor (kgm2)"
        Obj.Cells(17, 1).Characters(start:=2, Length:=5).Font.Subscript = True
        Obj.Cells(17, 1).Characters(start:=12, Length:=1).Font.Superscript = True
        'Line 18
        Obj.Cells(18, 1).Value = "Load speed (r/min)"
        'Line 19
        Obj.Cells(19, 1).Value = "TN (Nm)"
        Obj.Cells(16, 1).Characters(start:=2, Length:=1).Font.Subscript = True
        Obj.Cells(19, 3).Value = "Speed (r/min)"
        Obj.Cells(19, 5).Value = "Speed (r/min)"
        'Line 20
        Obj.Cells(20, 1).Value = "Tload (Nm)"
        Obj.Cells(20, 1).Characters(start:=2, Length:=4).Font.Subscript = True
        Obj.Cells(20, 3).Value = "IS/IN"
        Obj.Cells(20, 3).Characters(start:=2, Length:=1).Font.Subscript = True
        Obj.Cells(20, 3).Characters(start:=5, Length:=1).Font.Subscript = True
        Obj.Cells(20, 5).Value = "IS/IN"
        Obj.Cells(20, 5).Characters(start:=2, Length:=1).Font.Subscript = True
        Obj.Cells(20, 5).Characters(start:=5, Length:=1).Font.Subscript = True
    End If
End Sub

Sub FormatLoadsheet(Standard As String)
Attribute FormatLoadsheet.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim CountRow As Integer
    Dim CountCol As Integer
    Dim Obj As Object
    Set Obj = Application.ActiveWorkbook.ActiveSheet
    If Standard = "M3000 (NEMA)" And Obj.Cells(16, 3).Value = "Current IN (Amps)" Then
        'allready formated for NEMA
        Exit Sub
    ElseIf Standard = "IEC" And Obj.Cells(16, 3).Value = "Current IN (A)" Then
        'allready formated for IEC
        Exit Sub
    End If
    If Standard = "M3000 (NEMA)" Then
        'Line 16
        Obj.Cells(16, 3).Value = "Current IN (Amps)"
        Obj.Cells(16, 3).Characters(start:=10, Length:=1).Font.Subscript = True
        'Line 17
        Obj.Cells(17, 3).Value = "Speed (rpm)"
    Else  'IEC
        'Line 16
        Obj.Cells(16, 3).Value = "Current IN (A)"
        Obj.Cells(16, 3).Characters(start:=10, Length:=1).Font.Subscript = True
        'Line 17
        Obj.Cells(17, 3).Value = "Speed (r/min)"
    End If
End Sub
Sub FormatDiagramsheet(Standard As String)
Attribute FormatDiagramsheet.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim CountRow As Integer
    Dim CountCol As Integer
    Dim Obj As Object
    Set Obj = Application.ActiveWorkbook.ActiveSheet
    If Standard = "M3000 (NEMA)" And Obj.Cells(16, 3).Value = "Current IN (Amps)" Then
        'allready formated for NEMA
        Exit Sub
    ElseIf Standard = "IEC" And Obj.Cells(16, 3).Value = "Current IN (A)" Then
        'allready formated for IEC
        Exit Sub
    End If
    If Standard = "M3000 (NEMA)" Then
        'Line 16
        Obj.Cells(16, 3).Value = "Current IN (Amps)"
        Obj.Cells(16, 3).Characters(start:=10, Length:=1).Font.Subscript = True
        'Line 17
        Obj.Cells(17, 3).Value = "Speed (rpm)"
    Else  'IEC
        'Line 16
        Obj.Cells(16, 3).Value = "Current IN (A)"
        Obj.Cells(16, 3).Characters(start:=10, Length:=1).Font.Subscript = True
        'Line 17
        Obj.Cells(17, 3).Value = "Speed (r/min)"
    End If
End Sub

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



INQUEST-PP=macro
