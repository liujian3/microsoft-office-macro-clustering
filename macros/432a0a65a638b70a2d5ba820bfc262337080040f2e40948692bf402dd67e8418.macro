Attribute VB_Name = "AmortizationSchedule"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
If ThisWorkbook.bIsSaving Then Exit Sub
    Range("schedule").AdvancedFilter Action:=xlFilterInPlace, CriteriaRange:= _
        Range("filter_criteria"), Unique:=False
    Application.ScreenUpdating = False
    Application.StatusBar = "Ready"
    Application.ScreenUpdating = True
    Range("amort_sch").Select
End Sub

Private Sub Worksheet_Change(ByVal Target As Excel.Range)
    Application.ScreenUpdating = False
    Range("schedule").AdvancedFilter Action:=xlFilterInPlace, CriteriaRange:= _
        Range("filter_criteria"), Unique:=False
    Application.ScreenUpdating = True
    Application.StatusBar = "Ready"
End Sub

Private Sub Worksheet_Deactivate()
If ThisWorkbook.bIsSaving Then Exit Sub
    Application.StatusBar = False
End Sub

Attribute VB_Name = "Clear"
Sub Clear()
'
' Clear Macro
' Macro recorded 6/9/98 by Practitioners Publishing Company
'
'
Dim ans As String
    
    ans = MsgBox("Are you sure you want to clear all amounts?", vbYesNo, "PPC's Workpapers")
        If ans = vbNo Then
        Exit Sub
        End If
    
    Application.ScreenUpdating = False
    Range("Input_clear").ClearContents
    Range("Amortization_clear").ClearContents
    Range("fsdate").Value = "=PPC_GetBalanceSheetDate()"
    Range("Client").Value = "=PPC_GetClientName()"
    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name") = "[Client Name]"
    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True
    Range("Input").Select
    Application.ScreenUpdating = True
End Sub


Attribute VB_Name = "EditorialMacros"
Option Explicit

Public Sub InitForEditorial()
  '
  ' Code for editorial special setups that need to be called
  '  after saving or on worksheet initialization.
  '
End Sub

Public Sub Workbook_BeforeClose_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  before close.
  '
End Sub

Attribute VB_Name = "EditorialMacros_Deactivate"
Option Explicit

Public Sub Workbook_Deactivate_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  when leaving the workbook without closing it. This, will
  '  also run when closing workbook.
  '
End Sub

Attribute VB_Name = "FinancialStatementDisclosure"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
If ThisWorkbook.bIsSaving Then Exit Sub

    Application.ScreenUpdating = False
    If Range("total_maturities").Value <> "" Then
        Range("thereafter_maturities").Select
        Selection.Borders(xlLeft).LineStyle = xlNone
        Selection.Borders(xlRight).LineStyle = xlNone
        Selection.Borders(xlTop).LineStyle = xlNone
        With Selection.Borders(xlBottom)
            .Weight = xlThin
            .ColorIndex = xlAutomatic
        End With
        Selection.BorderAround LineStyle:=xlNone
        Range("total_maturities").Select
        Selection.Borders(xlLeft).LineStyle = xlNone
        Selection.Borders(xlRight).LineStyle = xlNone
        Selection.Borders(xlTop).LineStyle = xlNone
        With Selection.Borders(xlBottom)
            .LineStyle = xlDouble
            .ColorIndex = xlAutomatic
        End With
        Selection.BorderAround LineStyle:=xlNone
    Else
        Range("thereafter_maturities").Select
        Selection.Borders(xlLeft).LineStyle = xlNone
        Selection.Borders(xlRight).LineStyle = xlNone
        Selection.Borders(xlTop).LineStyle = xlNone
        Selection.Borders(xlBottom).LineStyle = xlNone
        Selection.BorderAround LineStyle:=xlNone
        Range("total_maturities").Select
        Selection.Borders(xlLeft).LineStyle = xlNone
        Selection.Borders(xlRight).LineStyle = xlNone
        Selection.Borders(xlTop).LineStyle = xlNone
        Selection.Borders(xlBottom).LineStyle = xlNone
        Selection.BorderAround LineStyle:=xlNone
    End If
    Range("A1").Select
    Application.ScreenUpdating = True

End Sub

Attribute VB_Name = "InputSheet"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
If ThisWorkbook.bIsSaving Then Exit Sub
Range("A1").Select
End Sub

Attribute VB_Name = "PPC_CodeModule"
Public Sub MacroCheck()
'Do nothing. This sub will be called from .NET code to check macro is enabled or not
End Sub


Public Function PPC_GetClientName()
  PPC_GetClientName = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name")
End Function

Public Function PPC_GetBalanceSheetDate()
  PPC_GetBalanceSheetDate = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date")
End Function

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'
' This code is protected and passworded when complete.
'

Private Const XL4MACRO As String = "PPCSecurityMacro"
Private Const INFORMATION As String = "INFORMATION"

Private Const bIsIDxR As Boolean = False        ' Set True if Interactive Disclosure Library
#Const IDxR = 0                                 ' Set 1 if Interactive Disclosure Library

      ' Declare security class

Private Sub Workbook_Activate()

  
  InitForEditorial
  
  On Error GoTo 0
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
  Workbook_BeforeClose_Editorial
End Sub



Public Function bIsSaving() As Boolean
  bIsSaving = False
End Function



INQUEST-PP=macro
