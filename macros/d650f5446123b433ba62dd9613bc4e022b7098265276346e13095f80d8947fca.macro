Attribute VB_Name = "Feuil1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Module1"
Sub FilterOff()

On Error GoTo Fin
ActiveSheet.Unprotect
Worksheets("VUL Av 2000").ShowAllData
ActiveSheet.Protect
Fin:
End Sub

Attribute VB_Name = "Module2"
Private Sub Workbook_BeforeClose(Cancel As Boolean)
    Application.DisplayAlerts = False
       ActiveWorkbook.Close
       Application.DisplayAlerts = True
End Sub
Attribute VB_Name = "Module3"
Sub enlevelesfiltres()
On Error GoTo 100

ActiveSheet.ShowAllData



100:

End Sub
Attribute VB_Name = "Module4"
Sub Groupe31_Cliquer()

End Sub
Sub Equipement_Groupe31_Cliquer()

liengoogle = "http://www.michelinclassic.com/fr/tireselector/search"

ActiveWorkbook.FollowHyperlink Address:=liengoogle

End Sub

Sub Equipement_Photo_Cliquer()

Dim nommodele As Variant
Dim nommarque As Variant
Dim anneemodele As Variant
Dim anneemodeleok As Variant
Dim liengoogle As Variant

On Error Resume Next

nommarque = ""
nommodele = ""
anneemodele = ""
anneemodeleok = ""

nommarque = Sheets("CatCom").Range("C5").Value
nommodele = Sheets("CatCom").Range("C6").Value
anneemodele = Sheets("CatCom").Range("M5").Value
anneemodeleok = Right(anneemodele, 4)

liengoogle = "https://www.google.fr/search?tbm=isch&q=" & nommarque & "+" & nommodele & "+" & anneemodeleok


ActiveWorkbook.FollowHyperlink Address:=liengoogle

End Sub

Attribute VB_Name = "Module5"

Sub Macro2()
Attribute Macro2.VB_ProcData.VB_Invoke_Func = " \n14"
'Int|fffd|gration des PE dans la base |fffd|quipement


'Remise |fffd| zero des couleurs des lignes PE
'Optimisation de l'affichage pendant le traitement
Application.ScreenUpdating = False

'D|fffd|but trad Base |fffd|quipement
SetProtection fEquipement, False

Sheets("Equipement").Select
Sheets("Equipement").Activate

Range("S8").Select
    ActiveCell.FormulaR1C1 = "POIDS DIMENSION VS VEHICULE"

Range("V9:V60000").Select
    Selection.ClearContents

Range("B9:AE60000").Select
    With Selection.Font
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
    End With

SetProtection fEquipement, True
Application.ScreenUpdating = True
'Fin Remise |fffd| zero des couleurs des lignes PE





            'Optimisation de l'affichage pendant le traitement
Application.ScreenUpdating = False
            'Suppression du filtre sur les donn|fffd|es s'il y en a
            If fEquipement.FilterMode = True Then
                fEquipement.ShowAllData
            End If



Sheets("Equipement").Select
Sheets("Equipement").Activate


On Error Resume Next
SetProtection fEquipement, False
Dim MaFeuille As Worksheet
Set MaFeuille = ActiveSheet
    
    
    
For n = 2 To 1000
Sheets("PE").Select
Sheets("PE").Activate

filtre1 = Cells(n, 1)
If filtre1 = "" Then GoTo findespe
filtre2 = Cells(n, 2)
filtre3 = Cells(n, 3)
filtre4 = Cells(n, 4)
filtre5 = Cells(n, 5)
filtre6 = Cells(n, 6)
filtre7 = Cells(n, 7)
filtre8 = Cells(n, 8)
filtre9 = Cells(n, 9)
filtre10 = Cells(n, 10)
filtre11 = Cells(n, 11)
filtre12 = Cells(n, 12)
filtre13 = Cells(n, 13)
filtre14 = Cells(n, 14)
filtre15 = Cells(n, 15)
filtre16 = Cells(n, 16)
filtre17 = Cells(n, 17)
filtre18 = Cells(n, 18)
filtre19 = Cells(n, 19)
messagepe = Cells(n, 20)

    
    
    
Sheets("Equipement").Select
Sheets("Equipement").Activate
'Filtre des donn|fffd|es pour les PE
If filtre2 <> "" Then ActiveSheet.Range("$B$8:$AP$60000").AutoFilter Field:=2, Criteria1:=filtre2
If filtre3 <> "" Then ActiveSheet.Range("$B$8:$AP$60000").AutoFilter Field:=3, Criteria1:=filtre3
If filtre4 <> "" Then ActiveSheet.Range("$B$8:$AP$60000").AutoFilter Field:=4, Criteria1:=filtre4
If filtre5 <> "" Then ActiveSheet.Range("$B$8:$AP$60000").AutoFilter Field:=5, Criteria1:=filtre5
If filtre6 <> "" Then ActiveSheet.Range("$B$8:$AP$60000").AutoFilter Field:=6, Criteria1:=filtre6
If filtre7 <> "" Then ActiveSheet.Range("$B$8:$AP$60000").AutoFilter Field:=7, Criteria1:=filtre7
If filtre8 <> "" Then ActiveSheet.Range("$B$8:$AP$60000").AutoFilter Field:=8, Criteria1:=filtre8
If filtre9 <> "" Then ActiveSheet.Range("$B$8:$AP$60000").AutoFilter Field:=9, Criteria1:=filtre9
If filtre10 <> "" Then ActiveSheet.Range("$B$8:$AP$60000").AutoFilter Field:=10, Criteria1:=filtre10
If filtre11 <> "" Then ActiveSheet.Range("$B$8:$AP$60000").AutoFilter Field:=11, Criteria1:=filtre11
If filtre12 <> "" Then ActiveSheet.Range("$B$8:$AP$60000").AutoFilter Field:=12, Criteria1:=filtre12
If filtre13 <> "" Then ActiveSheet.Range("$B$8:$AP$60000").AutoFilter Field:=13, Criteria1:=filtre13
If filtre14 <> "" Then ActiveSheet.Range("$B$8:$AP$60000").AutoFilter Field:=14, Criteria1:=filtre14
If filtre15 <> "" Then ActiveSheet.Range("$B$8:$AP$60000").AutoFilter Field:=15, Criteria1:=filtre15
If filtre16 <> "" Then ActiveSheet.Range("$B$8:$AP$60000").AutoFilter Field:=16, Criteria1:=filtre16
If filtre17 <> "" Then ActiveSheet.Range("$B$8:$AP$60000").AutoFilter Field:=17, Criteria1:=filtre17
If filtre18 <> "" Then ActiveSheet.Range("$B$8:$AP$60000").AutoFilter Field:=18, Criteria1:=filtre18
If filtre19 <> "" Then ActiveSheet.Range("$B$8:$AP$60000").AutoFilter Field:=19, Criteria1:=filtre19

'je r|fffd|cup|fffd|re la plage des cellules visibles
Application.ScreenUpdating = False
Dim MaPlage As Range
Set MaPlage = MaFeuille.UsedRange.SpecialCells(xlCellTypeVisible)
Application.ScreenUpdating = False

'J'int|fffd|gre les PE pour les lignes filtr|fffd|es
Application.ScreenUpdating = False
For Each Ligne In ActiveSheet.AutoFilter.Range.SpecialCells(xlCellTypeVisible).Rows
Application.ScreenUpdating = False
If Ligne.Row > 8 Then

For r = 3 To 18
Cells(Ligne.Row, r).Font.Color = RGB(255, 0, 0)
Next r

Cells(Ligne.Row, 22) = messagepe


End If
Next Ligne
            If fEquipement.FilterMode = True Then
                fEquipement.ShowAllData
            End If


Next n

findespe:


            SetProtection fEquipement, True
            'Suppression du filtre sur les donn|fffd|es s'il y en a
            If fEquipement.FilterMode = True Then
                fEquipement.ShowAllData
            End If
Application.ScreenUpdating = True


End Sub
Sub importdesdonneestech()
Attribute importdesdonneestech.VB_ProcData.VB_Invoke_Func = " \n14"
'Mise |fffd| jour de la date de M|fffd|J des donn|fffd|es
SetProtection fImport, False
fImport.Range("znImport_LastUpdate5") = Now
SetProtection fImport, True

'Pas vu pas pris
On Error Resume Next
Application.DisplayAlerts = False
'''''''''''''''''''


classeurdepart = ActiveWorkbook.Name


'Recuperer le chemin du fichier de donn|fffd|es
Sheets("Import").Select
Sheets("Import").Activate
fichierdonnees = Range("znImport_File5").Value

'Definition des formules pour les RECHERCHEV
formule1 = "=SIERREUR(SI(RECHERCHEV(A1;$N$1:$U$7000;2;FAUX)=0;" & Chr(34) & Chr(34) & ";RECHERCHEV(A1;$N$1:$U$7000;2;FAUX));" & Chr(34) & Chr(34) & ")"
formule2 = "=SIERREUR(SI(RECHERCHEV(A1;$N$1:$U$7000;3;FAUX)=0;" & Chr(34) & Chr(34) & ";RECHERCHEV(A1;$N$1:$U$7000;3;FAUX));" & Chr(34) & Chr(34) & ")"
formule3 = "=SIERREUR(SI(RECHERCHEV(A1;$N$1:$U$7000;4;FAUX)=0;" & Chr(34) & Chr(34) & ";RECHERCHEV(A1;$N$1:$U$7000;4;FAUX));" & Chr(34) & Chr(34) & ")"
formule4 = "=SIERREUR(SI(RECHERCHEV(A1;$N$1:$U$7000;5;FAUX)=0;" & Chr(34) & Chr(34) & ";RECHERCHEV(A1;$N$1:$U$7000;5;FAUX));" & Chr(34) & Chr(34) & ")"
formule5 = "=SIERREUR(SI(RECHERCHEV(A1;$N$1:$U$7000;6;FAUX)=0;" & Chr(34) & Chr(34) & ";RECHERCHEV(A1;$N$1:$U$7000;6;FAUX));" & Chr(34) & Chr(34) & ")"
formule6 = "=SIERREUR(SI(RECHERCHEV(A1;$N$1:$U$7000;7;FAUX)=0;" & Chr(34) & Chr(34) & ";RECHERCHEV(A1;$N$1:$U$7000;7;FAUX));" & Chr(34) & Chr(34) & ")"
formule7 = "=SIERREUR(SI(RECHERCHEV(A1;$N$1:$U$7000;8;FAUX)=0;" & Chr(34) & Chr(34) & ";RECHERCHEV(A1;$N$1:$U$7000;8;FAUX));" & Chr(34) & Chr(34) & ")"


    Sheets.Add After:=Sheets(Sheets.Count) 'Cr|fffd|ation d'une nouvelle feuille
    Sheets(Sheets.Count).Name = "Work" 'Cr|fffd|ation d'une nouvelle feuille
    Sheets("CatCom").Select 'Activation Feuille Catcom
    Range("O11").Select
    Range(Selection, Selection.End(xlDown)).Select 'Selection de tous les CAI
    Selection.Copy 'Copie des CAI
    Sheets("Work").Select
    'Coller les donn|fffd|es
    Selection.PasteSpecial Paste:=xlPasteAllUsingSourceTheme, Operation:=xlNone _
        , SkipBlanks:=False, Transpose:=False
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Range("A1").Select
    Workbooks.Open Filename:=fichierdonnees 'Ouverture du fichier des donnes tech
    nomfichierdonnees = ActiveWorkbook.Name 'Recup|fffd|retion du nom du fichier
    Range("A2:H7000").Select
    Application.CutCopyMode = False
    Selection.Copy 'Copie des donn|fffd|es tech
    Windows(classeurdepart).Activate
    Sheets("Work").Select
    Range("N1").Select
    'Coller les donnes tech en cellule N1 de la feuille Work
    Selection.PasteSpecial Paste:=xlPasteAllUsingSourceTheme, Operation:=xlNone _
        , SkipBlanks:=False, Transpose:=False
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Windows(nomfichierdonnees).Activate 'Reactivation du fichier de donn|fffd|es tech
    Application.CutCopyMode = False
    ActiveWorkbook.Close 'Fermeture du fichier
    Windows(classeurdepart).Activate
    SetProtection fCatCom, False 'Supression de la protection du CatCom
    Sheets("Work").Select
    Range("N1").Select
    'Entr|fffd|e des formules de rechercheV sur la premi|fffd|re ligne
    Range("B1").FormulaLocal = formule1
    Range("C1").FormulaLocal = formule2
    Range("D1").FormulaLocal = formule3
    Range("E1").FormulaLocal = formule4
    Range("F1").FormulaLocal = formule5
    Range("G1").FormulaLocal = formule6
    Range("H1").FormulaLocal = formule7
    'Remplissage auto des formules sur les lignes suivantes
    Range("B1").Select
    Selection.AutoFill Destination:=Range("B1:B7000")
    Range("C1").Select
    Selection.AutoFill Destination:=Range("C1:C7000")
    Range("D1").Select
    Selection.AutoFill Destination:=Range("D1:D7000")
    Range("E1").Select
    Selection.AutoFill Destination:=Range("E1:E7000")
    Range("F1").Select
    Selection.AutoFill Destination:=Range("F1:F7000")
    Range("G1").Select
    Selection.AutoFill Destination:=Range("G1:G7000")
    Range("H1").Select
    Selection.AutoFill Destination:=Range("H1:H7000")
    'Selection et copie des donn|fffd|es pour insertion dans le CATCOM
    Range("B1:H7000").Select
    Selection.Copy
    Sheets("CatCom").Select 'Activation Feuille Catcom
    Range("AK11").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Sheets("Work").Select 'Activation Feuille de travail
    ActiveWindow.SelectedSheets.Delete 'Suppression Feuille de travail
    
    
Application.DisplayAlerts = True
Sheets("CatCom").Select
    SetProtection fCatCom, True 'Protection du CatCom

Range("A1").Select

End Sub
Attribute VB_Name = "Module6"
Sub Rectangle1_Cliquer()
e = Selection.Row
messagepe = Cells(e, 22)

If messagepe <> "" Then

If messagepe = "PE" Then GoTo FinPE

titremsgbox = "Particularit|fffd| d'|fffd|quipement pour " & Cells(e, 3) & " " & Cells(e, 4)

messagecomplet = "Particularit|fffd| d'|fffd|quipement pour " & Cells(e, 3) & " " & Cells(e, 4) & Chr(10) & "Dimension " & Cells(e, 29) & Chr(10) & Chr(10) & messagepe


A = MsgBox(messagecomplet, vbInformation, titremsgbox)


End If

FinPE:

End Sub
Attribute VB_Name = "Module7"
Sub Rectangle6_Cliquer()
Attribute Rectangle6_Cliquer.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Rectangle6_Cliquer Macro
'

'
    
End Sub
Sub Groupe18_Cliquer()
ActiveSheet.Shapes.Range(Array("Object 7")).Select
    Selection.Verb Verb:=xlPrimary
End Sub

Sub CouleurEquip()




End Sub





Sub TradEN()

'Optimisation de l'affichage pendant le traitement
Application.ScreenUpdating = False


'D|fffd|but trad homepage
SetProtection fHome, False

Sheets("Home").Select
Sheets("Home").Activate

    ActiveSheet.Shapes.Range(Array("TextBox 6")).Select
    Selection.ShapeRange(1).TextFrame2.TextRange.Characters.Text = "INTERNAL USAGE ONLY"

    ActiveSheet.Shapes.Range(Array("cmdCatalogComm")).Select
    Selection.ShapeRange(1).TextFrame2.TextRange.Characters.Text = "Commercial Catalog"
    
    ActiveSheet.Shapes.Range(Array("cmdInnerTubes")).Select
    Selection.ShapeRange(1).TextFrame2.TextRange.Characters.Text = "Inner Tubes Catalog"


Cells.Replace What:="Retrouvez les actualit|fffd|s dans la Newsletter produit, dans l'encyclopedie marketing", Replacement:= _
        "Product news are in the Product Newsletter", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="Pour visualiser les nouveaux v|fffd|hicules, passez le curseur sur le mod|fffd|le", Replacement:= _
        "To see new vehicules, hover the mouse cursor on models", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="Nouvelles homologations 1|fffd|re monte", Replacement:= _
        "New OE homologations", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="Nouveaux v|fffd|hicules", Replacement:= _
        "New Vehicles", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False
        
Cells.Replace What:="Nouvelles dimensions", Replacement:= _
        "New dimensions", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="Marques", Replacement:= _
        "Brand", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="Mod|fffd|les", Replacement:= _
        "Model", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False
        
Cells.Replace What:="Homologations techniques", Replacement:= _
        "Technical homologations", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="Offre hiver", Replacement:= _
        "Winter offer", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="TOUTES", Replacement:= _
        "ALL", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False
        
Cells.Replace What:="AVANT", Replacement:= _
        "FRONT", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="ARRIERE", Replacement:= _
        "REAR", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="Homologation OE (OE Michelin OUI/NON)", Replacement:= _
        "OE Homologation (MICHELIN YES/NO)", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False
        
Cells.Replace What:="Offre RT Et|fffd| Michelin", Replacement:= _
        "MICHELIN Summer offer", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="Cat|fffd|gorie", Replacement:= _
        "Category", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="Saison", Replacement:= _
        "Season", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="Lancement", Replacement:= _
        "Launch date", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="V|fffd|hicules |fffd|quipables", Replacement:= _
        "Fittable cars", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="Tourisme", Replacement:= _
        "Passenger car", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="Camionnette", Replacement:= _
        "Light truck", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="Et|fffd|", Replacement:= _
        "Summer", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False
        
Cells.Replace What:="Hiver", Replacement:= _
        "Winter", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False




            SetProtection fHome, True

'Fin trad HomePage

'D|fffd|but trad chambres |fffd| air

Sheets("Chambres").Select
Sheets("Chambres").Activate

Cells.Replace What:="Pensez |fffd| positionner les commandes sur Chantemerle", Replacement:= _
        "", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="CATALOGUE CHAMBRES A AIR MICHELIN", Replacement:= _
        "INNER TUBES CATALOG", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="Nom de la Chambre", Replacement:= _
        "Name", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="Valve TR13 - Valve droite (Diam|fffd|tre 11,5 mm)", Replacement:= _
        "Valve TR13 - Straight valve (Diameter 11,5 mm)", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="Valve TR15 - Valve droite (Diam|fffd|tre 16 mm)", Replacement:= _
        "Valve TR15 - Straight valve (Diameter 16 mm)", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False
        
Cells.Replace What:="Simple coude", Replacement:= _
        "Simple bend", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False

Cells.Replace What:="Chambre livr|fffd|e sans valve", Replacement:= _
        "Inner tube without valve", LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase _
        :=False, SearchFormat:=False, ReplaceFormat:=False
        
ActiveSheet.Shapes.Range(Array("cmdInnertubeAll")).Select
    Selection.ShapeRange(1).TextFrame2.TextRange.Characters.Text = "See all"
    
ActiveSheet.Shapes.Range(Array("cmdInnertubeBack")).Select
    Selection.ShapeRange(1).TextFrame2.TextRange.Characters.Text = "Back to home"
        
        

Range("B7:B167").Select
    Selection.Replace What:="Tsme", Replacement:="P", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="C", Replacement:="LT", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False

Range("A1").Select
'Fin trad chambres |fffd| air

'D|fffd|but trad CatCom
 SetProtection fCatCom, False


Sheets("CatCom").Select
Sheets("CatCom").Activate

Cells(1, 2) = "Commercial Catalog"
Cells(4, 2) = "Search criterias"
Cells(5, 2) = "Brand"
Cells(6, 2) = "Name"
Cells(7, 2) = "Model"
Cells(8, 2) = "Body"
Cells(5, 7) = "Type"
Cells(6, 7) = "Energy"
Cells(7, 7) = "Motor"
Cells(8, 7) = "Category"
Cells(5, 11) = "Month/Year"
Cells(6, 11) = "Dim."

Cells(10, 2) = "BRAND"
Cells(10, 3) = "CATEGORY"
Cells(10, 4) = "SEASON"
Cells(10, 11) = "LI"
Cells(10, 12) = "SI"
Cells(10, 18) = "OLD GESTION"
Cells(10, 19) = "STOCK PRES CML"
Cells(10, 21) = "START/STOP DATE"
Cells(10, 22) = "TYRE CLASS"
Cells(10, 23) = "Roll Resistance Label"
Cells(10, 24) = "Wet Grip Label"
Cells(10, 25) = "Nb Waves Label"
Cells(10, 26) = "Noise Label"
Cells(10, 37) = "Velvet Sidewall"
Cells(10, 38) = "Tread Pattern"
Cells(10, 39) = "Rim Protector"
Cells(10, 40) = "3PMSF Marking"
Cells(10, 41) = "M+S Marking"
Cells(10, 42) = "Tread Depth (mm)"
Cells(10, 43) = "Weight (kg)"

ActiveSheet.Shapes.Range(Array("cmdCatComSeeAll")).Select
    Selection.ShapeRange(1).TextFrame2.TextRange.Characters.Text = "See all catalog"

ActiveSheet.Shapes.Range(Array("cmdCatComHome")).Select
    Selection.ShapeRange(1).TextFrame2.TextRange.Characters.Text = "Back to TyreDatabase"

ActiveSheet.Shapes.Range(Array("cmdCatComReset")).Select
    Selection.ShapeRange(1).TextFrame2.TextRange.Characters.Text = "Reset filters"

    Range("C11").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Replace What:="T", Replacement:="P", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="C", Replacement:="LT", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="4X4", Replacement:="4X4/SUV", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    
    Range("D11").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Replace What:="4 SAISONS", Replacement:="4 SEASONS", LookAt:= _
        xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="ETE", Replacement:="SUMMER", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="HIVER", Replacement:="WINTER", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
        
    Range("Q11").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Replace What:="AE", Replacement:="TO BE SOLD OUT", LookAt:= _
        xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="ND", Replacement:="NEW ARTICLE - NOT YET COMMERCIALIZED", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    
    Range("U11").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Replace What:="D|fffd|marrage", Replacement:="Start in", LookAt:= _
        xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="Suppression fin", Replacement:="Stop end of", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False

    Range("AB11:AO11").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Replace What:="Oui", Replacement:="Yes", LookAt:= _
        xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="Non", Replacement:="No", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="Asym|fffd|trique", Replacement:="Asymmetric", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="Directionnel", Replacement:="Directional", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False




SetProtection fCatCom, True
'Fin trad CatCom


'D|fffd|but trad Base |fffd|quipement
SetProtection fEquipement, False

Sheets("Equipement").Select
Sheets("Equipement").Activate



    ActiveSheet.Shapes.Range(Array("cmdHelpEquip")).Select
    Selection.ShapeRange(1).TextFrame2.TextRange.Characters.Text = "Aie"
    With Selection.ShapeRange(1).TextFrame2.TextRange.Characters(1, 3). _
        ParagraphFormat
        .FirstLineIndent = 0
        .Alignment = msoAlignCenter
    End With
    Selection.Delete
    Range("H8").Select
    Selection.ClearComments
    Columns("S:S").Select
    Selection.EntireColumn.Hidden = True
    
Cells(8, 3) = "BRAND"
Cells(8, 4) = "RANGE"
Cells(8, 5) = "ENGINE"
Cells(8, 7) = "MODEL"
Cells(8, 9) = "BODY / TRANSMISSION (2 or 4 RM)"
Cells(8, 21) = "SPECIFIC MARKING"
Cells(8, 27) = "WHEEL"
Cells(8, 28) = "UPDATE"
Cells(8, 29) = "COMPLETE DIMENSION"
Cells(8, 30) = "OE MICHELIN Summer Homologation"
Cells(8, 31) = "OE MICHELIN Winter Homologation"
Cells(6, 2) = "     If the equipment line is written in red, there is a particularity,"
    
    
    
 Range("F9").Select
    Range(Selection, Selection.End(xlDown)).Select
    SetProtection fEquipement, False
    Selection.Replace What:="ESS", Replacement:="PET", LookAt:= _
        xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False

 Range("I9").Select
    Range(Selection, Selection.End(xlDown)).Select
    SetProtection fEquipement, False
    Selection.Replace What:="BERLINE", Replacement:="SEDAN", LookAt:= _
        xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="BREAK", Replacement:="HATCHBACK", LookAt:= _
        xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="CABRIOLET", Replacement:="ROADSTER", LookAt:= _
        xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="MONOSPACE", Replacement:="MPV", LookAt:= _
        xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="UTILITAIRE", Replacement:="LIGHT TRUCK", LookAt:= _
        xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.Replace What:="VEH 4X4", Replacement:="SUV/4V4", LookAt:= _
        xlPart, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False


ActiveSheet.Shapes.Range(Array("cmdclicktosee")).Select
    Selection.ShapeRange(1).TextFrame2.TextRange.Characters.Text = "click here to see it"

ActiveSheet.Shapes.Range(Array("cmdPhoto")).Select
    Selection.ShapeRange(1).TextFrame2.TextRange.Characters.Text = "               Picture (Web)"

ActiveSheet.Shapes.Range(Array("cmdPEretro")).Select
    Selection.ShapeRange(1).TextFrame2.TextRange.Characters.Text = "                  Old PE"

ActiveSheet.Shapes.Range(Array("cmdOldies")).Select
    Selection.ShapeRange(1).TextFrame2.TextRange.Characters.Text = "                 Oldies (Web)"

ActiveSheet.Shapes.Range(Array("cmdEquipSeeAll")).Select
    Selection.ShapeRange(1).TextFrame2.TextRange.Characters.Text = "                    See all"
    
ActiveSheet.Shapes.Range(Array("cmdEquipCatCom")).Select
    Selection.ShapeRange(1).TextFrame2.TextRange.Characters.Text = "             See commercial cat."



SetProtection fEquipement, True
'Fin trad Base |fffd|quipement



'Fin des traductions
Sheets("Home").Select
Sheets("Home").Activate
Application.ScreenUpdating = True


End Sub
Attribute VB_Name = "Module8"
Sub cmdInnertubeAll_Cliquer()
On Error GoTo 100

ActiveSheet.ShowAllData



100:
End Sub
Attribute VB_Name = "Module9"
Sub Equipement_Groupe31_Cliquer()

End Sub
Sub Groupe17_Cliquer()

End Sub
Sub Equipement_Groupe17_Cliquer()

End Sub
Sub Equipement_Groupe17_2_Cliquer()

liengoogle = "https://classic.michelin.com/fr/tireselector/search"

ActiveWorkbook.FollowHyperlink Address:=liengoogle
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Workbook_Open()
    
    'SetProtection fCatCom, True
    'SetProtection fEquipement, True
    
    ActiveWindow.DisplayWorkbookTabs = False
    fHome.Activate

End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
 
 
 End Sub
Attribute VB_Name = "fCatCom"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    
    gblActiveSheet = Me.Name
    
End Sub
Attribute VB_Name = "fChangeLog"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "fEquipement"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    
    gblActiveSheet = Me.Name
    
End Sub


Private Sub Worksheet_Change(ByVal Target As Range)

End Sub

'---------------------------------------------------------------------------------------
' Procedure : Worksheet_SelectionChange
' Author    : Thomas Lafontaine - Next Media
' Date      : 22/07/2013
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    SetDisplayOptimisation True
    
    If Target.Row > fEquipement.Range("znEquipementTitle").Row Then
        
        SetProtection fEquipement, False
        
        'Gestion de la ligne s|fffd|lectionn|fffd|e
        fEquipement.Range("A" & fEquipement.Range("znEquipementTitle").Row & ":A" & fEquipement.UsedRange.Rows.Count).ClearContents
        fEquipement.Cells(Target.Row, 1) = 1
             
        
        'Correctif MPT 24/01/2014 : Plutot que de copier la ligne enti|fffd|re en ligne 7, on ne copie que le range concern|fffd|
        'Le fait de copier la ligne enti|fffd|re cr|fffd||fffd| des probl|fffd|mes cons|fffd|quents de lenteur sur toute la feuille
        'fEquipement.Rows(Target.Row).Copy fEquipement.Rows(7)
        fEquipement.Range("B" & Target.Row & ":AP" & Target.Row).Copy fEquipement.Range("B7:AP7")
        fEquipement.Rows(7).Hidden = True
        
        SetProtection fEquipement, True
        
        Application.Calculate
        
        'Popup PE
        If Cells(Target.Row, 22) <> "" Then
        Dim messagepe, titremsgbox, messagecomplet, A As Variant
        messagepe = Cells(Target.Row, 22)
        titremsgbox = "Particularit|fffd| d'|fffd|quipement pour " & Cells(Target.Row, 3) & " " & Cells(Target.Row, 4)
        messagecomplet = "Particularit|fffd| d'|fffd|quipement pour " & Cells(Target.Row, 3) & " " & Cells(Target.Row, 4) & Chr(10) & "Dimension " & Cells(Target.Row, 29) & Chr(10) & Chr(10) & messagepe
        A = MsgBox(messagecomplet, vbInformation, titremsgbox)
        End If
        'Fin Popup PE
        
        
    End If
        
    SetDisplayOptimisation False

End Sub

Attribute VB_Name = "fHelp"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


'---------------------------------------------------------------------------------------
' Procedure : Worksheet_SelectionChange
' Author    : Thomas Lafontaine - Next Media
' Date      : 22/07/2013
' Purpose   :
'---------------------------------------------------------------------------------------
'
Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    Application.EnableEvents = False
    
    If Target.Row > fEquipement.Range("znEquipementTitle").Row Then
        
        'Gestion de la ligne s|fffd|lectionn|fffd|e
        fEquipement.Range("A:A").ClearContents
        fEquipement.Cells(Target.Row, 1) = 1
    
    End If
    
    Application.EnableEvents = True

End Sub
Attribute VB_Name = "fHome"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    
    gblActiveSheet = Me.Name
    
End Sub
Attribute VB_Name = "fImport"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    
    gblActiveSheet = Me.Name
    
End Sub

Attribute VB_Name = "fParameters"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate()
    
    gblActiveSheet = Me.Name
    
End Sub

Attribute VB_Name = "fPoidsMarche"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "fRefConst"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "frmWait"
Attribute VB_Base = "0{ABFB1C41-D9DB-4361-9BDF-E5E93746EA66}{2379C818-98FD-4ABB-B676-EA6FE0AAD01C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Option Explicit
Attribute VB_Name = "oDeclaration"

Global Const PARAM_MDP = "Next"

Global gblActiveSheet As String

Global Const SAISON_ETE = "|fffd|T|fffd|"
Global Const SAISON_HIVER = "HIVER"

Attribute VB_Name = "oImport"
'---------------------------------------------------------------------------------------
' Module    : oImport
' Author    : Thomas Lafontaine - Next Media
' Date      : 03/09/2013
' Purpose   :
'---------------------------------------------------------------------------------------

Option Explicit

'---------------------------------------------------------------------------------------
' Procedure : cmdSelect_File1_Cliquer
' Author    : Thomas Lafontaine - Next Media
' Date      : 03/09/2013
' Purpose   :
'---------------------------------------------------------------------------------------
'
Sub cmdSelect_File1_Cliquer()
    
    Call cmdSelectFile(1)
    
End Sub

'---------------------------------------------------------------------------------------
' Procedure : cmdSelect_File2_Cliquer
' Author    : Thomas Lafontaine - Next Media
' Date      : 03/09/2013
' Purpose   :
'---------------------------------------------------------------------------------------
'
Sub cmdSelect_File2_Cliquer()
    
    Call cmdSelectFile(2)
    
End Sub

'---------------------------------------------------------------------------------------
' Procedure : cmdSelect_File3_Cliquer
' Author    : Thomas Lafontaine - Next Media
' Date      : 03/09/2013
' Purpose   :
'---------------------------------------------------------------------------------------
'
Sub cmdSelect_File3_Cliquer()
    
    Call cmdSelectFile(3)
    
End Sub

'---------------------------------------------------------------------------------------
' Procedure : cmdSelect_File4_Cliquer
' Author    : Thomas Lafontaine - Next Media
' Date      : 03/09/2013
' Purpose   :
'---------------------------------------------------------------------------------------
'
Sub cmdSelect_File4_Cliquer()
    
    Call cmdSelectFile(4)
    
End Sub

Sub cmdSelect_File5_Cliquer()
    
    Call cmdSelectFile(5)
    
End Sub

'---------------------------------------------------------------------------------------
' Procedure : cmdImport_File1_Cliquer
' Author    : Thomas Lafontaine - Next Media
' Date      : 03/09/2013
' Purpose   :
'---------------------------------------------------------------------------------------
'
Sub cmdImport_File1_Cliquer()
    
    SetProtection fImport, False
    
    If Import_CatCom = True Then
        
        fImport.Range("znImport_LastUpdate1") = Now
        
    End If
    
    SetProtection fImport, True
    
End Sub


'---------------------------------------------------------------------------------------
' Procedure : cmdImport_File2_Cliquer
' Author    : Thomas Lafontaine - Next Media
' Date      : 03/09/2013
' Purpose   :
'---------------------------------------------------------------------------------------
'
Sub cmdImport_File2_Cliquer()
    
    SetProtection fImport, False
    
    If Import_Equipement = True Then
        
        fImport.Range("znImport_LastUpdate2") = Now
        
    End If
    
    SetProtection fImport, True
    
End Sub


'---------------------------------------------------------------------------------------
' Procedure : cmdImport_File4_Cliquer
' Author    : Thomas Lafontaine - Next Media
' Date      : 03/09/2013
' Purpose   :
'---------------------------------------------------------------------------------------
'
Sub cmdImport_File3_Cliquer()
    
    SetProtection fImport, False
    
    If Import_PoidsMarche = True Then
        
        fImport.Range("znImport_LastUpdate3") = Now
        
    End If
    
    SetProtection fImport, True
    
End Sub


'---------------------------------------------------------------------------------------
' Procedure : cmdImport_File4_Cliquer
' Author    : Thomas Lafontaine - Next Media
' Date      : 03/09/2013
' Purpose   :
'---------------------------------------------------------------------------------------
'
Sub cmdImport_File4_Cliquer()
    
    SetProtection fImport, False
    
    If Import_RefConst = True Then
        
        fImport.Range("znImport_LastUpdate4") = Now
        
    End If
    
    SetProtection fImport, True
    
End Sub

'---------------------------------------------------------------------------------------
' Procedure : cmdSelectFile
' Author    : Thomas Lafontaine - Next Media
' Date      : 03/09/2013
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Function cmdSelectFile(intFileIndex As Integer) As String

    With Application.FileDialog(msoFileDialogFilePicker)
        
        SetProtection fImport, False
        
        .AllowMultiSelect = False
        .Filters.Clear
        .Filters.Add "*.xls*", "*.xls*"
        .Filters.Add "*.csv", "*.csv"
        .Show
    
        If .SelectedItems.Count > 0 Then
            fImport.Range("znImport_File" & intFileIndex) = .SelectedItems(1)
        End If
    
        SetProtection fImport, True
        
    End With

End Function

'---------------------------------------------------------------------------------------
' Procedure : Import_CatCom
' Author    : Thomas Lafontaine - Next Media
' Date      : 03/09/2013
' Purpose   : Importation du catalogue commercial
'---------------------------------------------------------------------------------------
'
Public Function Import_CatCom() As Boolean
    
    
    Dim wbSource            As Workbook
    Dim wsSource            As Worksheet
    Dim wsCible             As Worksheet
    Dim strFileName         As String
    Dim idxRow              As Long
    Dim idxCol              As Long
    Dim lngRowNb            As Long
    Dim i                   As Variant
    Dim B                   As Variant
    Dim C                   As Variant
    Dim D                   As Variant

    
    On Error GoTo Import_CatCom_Err

    strFileName = fImport.Range("znImport_File1")

    'V|fffd|rification d'existance du fichier
    If Dir(strFileName, vbNormal) = "" Then
            
            MsgBox "Le fichier est introuvable :" & vbCrLf & strFileName, vbOKOnly + vbCritical, "Attention"
            
        Else
            
            'Optimisation de l'affichage pendant le traitement
            SetDisplayOptimisation True, True
            
            Set wsCible = fCatCom
            SetProtection wsCible, False
            
            '------------------------------------------------------
            ' Initialisation de l'|fffd|cran catalogue commercial
            '------------------------------------------------------
            
            'Suppression du filtre sur les donn|fffd|es s'il y en a
            If fCatCom.FilterMode = True Then
                fCatCom.ShowAllData
            End If
            
            'Suppression des donn|fffd|es existantes
            wsCible.Range(wsCible.Range("znCatComTitle").Row + 1 & ":" & wsCible.Rows.Count).Delete xlShiftUp
            
            
            '-------------------------------
            ' Importation du fichier source
            '-------------------------------
            
            'Ouverture du fichier source
            Set wbSource = Workbooks.Open(strFileName, False, False, , , , True, , , , , , , True)
            Set wsSource = wbSource.Sheets("CAT COM")
            
            
            'Copie des donn|fffd|es du nouveau fichier colonne par colonne
            'en pr|fffd|vision d'|fffd|ventuelles colonnes suppl|fffd|mentaires |fffd| importer
            For idxCol = 1 To wsSource.UsedRange.Columns.Count
                
                wsSource.Range(wsSource.Cells(8, idxCol).Address & ":" & wsSource.Cells(wsSource.UsedRange.Rows.Count + 8, idxCol).Address).Copy
                wsCible.Cells(wsCible.Range("znCatComTitle").Row + 1, idxCol + 1).PasteSpecial xlPasteValues
                
                frmWait.lblPctAvancement.Caption = CInt((idxCol / wsSource.UsedRange.Columns.Count) * 100) & "%"
                DoEvents
                
            Next
            
            'Ajout de l'index de recherche pour la colonne "indice de vitesse"
            fCatCom.Cells(10, 30) = "Index IV"
            fCatCom.Range(fCatCom.Cells(11, 30).Address & ":" & fCatCom.Cells(fCatCom.UsedRange.Rows.Count, 30).Address) _
                .FormulaR1C1 = "=IF(RC[-26]=""" & SAISON_HIVER & """,99, IFERROR(IF(VLOOKUP(RC[-18],znParamIV,2,FALSE)=0,"""",VLOOKUP(RC[-18],znParamIV,2,FALSE)),""""))"
            
            fCatCom.Range(fCatCom.Cells(11, 30).Address & ":" & fCatCom.Cells(fCatCom.UsedRange.Rows.Count, 30).Address) = fCatCom.Range(fCatCom.Cells(11, 30).Address & ":" & fCatCom.Cells(fCatCom.UsedRange.Rows.Count, 30).Address).Value
            
            
            'Gestion des pneuamtiques en Anglais
            fCatCom.Activate
            Cells(11, 31).Select

            For i = 11 To 10000
            B = fCatCom.Cells(i, 4).Value

            If B Like "*WINTER*" Then
            Cells(i, 30).Value = 99
            End If
            Next i
            'Fin Gestion des pneuamtiques en Anglais
            
            
                        
           'Gestion des pneuamtiques 4 saisons
            fCatCom.Activate
            Cells(11, 31).Select

            For i = 11 To 10000
            B = fCatCom.Cells(i, 14).Value

            If B Like "*PILOT SPORT A/S PLUS*" Or B Like "*QUADRAXER*" Or B Like "*G-GRIP ALL SEASON*" Or B Like "*TRANSPRO 4S*" Then
            Cells(i, 31).Value = "M+S"
            Cells(i, 30).Value = 99
            Cells(i, 4).Value = "4 SAISONS"
            End If
            Next i
            'Fin Gestion des pneuamtiques 4 saisons
           
           
           'Gestion des pneuamtiques 4X4 M+S
            fCatCom.Activate
            Cells(11, 31).Select

            For i = 11 To 10000
            B = fCatCom.Cells(i, 14).Value

            If B Like "*TERRAIN*" Or B Like "*XZL*" Or B Like "*LATITUDE CROSS*" Or B Like "*TOUR HP*" Then
            Cells(i, 31).Value = "M+S"
            Cells(i, 30).Value = 99
            Cells(i, 4).Value = "ETE"
            End If
            Next i
            'Fin Gestion des pneuamtiques 4X4 M+S
                     
            'Gestion de Agilis Camping
            fCatCom.Activate
            Cells(11, 31).Select

            For i = 11 To 10000
            B = fCatCom.Cells(i, 14).Value

            If B Like "*AGILIS CAMPING*" Then
            Cells(i, 31).Value = "M+S"
            Cells(i, 30).Value = 99
            Cells(i, 4).Value = "ETE"
            End If
            Next i
            'Fin Gestion de Agilis Camping
         
            'Gestion de CrossClimate
            fCatCom.Activate
            Cells(11, 31).Select

            For i = 11 To 10000
            B = fCatCom.Cells(i, 14).Value

            If B Like "*CROSSCLIMATE*" Then
            Cells(i, 31).Value = "M+S"
            Cells(i, 30).Value = 99
            Cells(i, 4).Value = "ETE"
            End If
            Next i
            'Fin de Gestion de CrossClimate
                     
                     
                     
                     
                     
                     
             'Gestion des pneuamtiques camionettes et BFG a double indice
            Dim Position, tronque
            fCatCom.Activate
            Cells(10, 31).Select
            Cells(10, 31).Value = "Index IC Cam"
            For i = 11 To 10000
            B = fCatCom.Cells(i, 11).Value
            C = fCatCom.Cells(i, 3).Value
            D = fCatCom.Cells(i, 6).Value
            Cells(i, 31).Value = B
            If B Like "*/*" And C = "C" Then
            Position = InStr(1, B, "/", vbTextCompare)
            tronque = Left(B, Position - 1)
            
            Cells(i, 31).Value = tronque
            End If
            If B Like "*/*" And D = "LT" Then
            Position = InStr(1, B, "/", vbTextCompare)
            tronque = Left(B, Position - 1)
            
            Cells(i, 31).Value = tronque
            End If
            
            
            Next i
            'Gestion des pneuamtiques camionettes et BFG a double indice
   
          
            
            
            
            
            
            SetProtection wsCible, True
            
            wbSource.Close
            
            'Destruction de tous les objets
            Set wbSource = Nothing
            Set wsSource = Nothing
            Set wsCible = Nothing
            
            
            'R|fffd|tablissement de l'affichage par d|fffd|faut
            SetDisplayOptimisation False
            
    End If

    Import_CatCom = True

    Exit Function

Import_CatCom_Err:

    Select Case Err.Number

        Case Else
            'R|fffd|tablissement de l'affichage par d|fffd|faut
            SetDisplayOptimisation False
            
            'Signalement de l'erreur
            Import_CatCom = False
            MsgBox "Erreur n|fffd|" & Err.Number & " : " & Err.Description & " (proc|fffd|dure Import_CatCom du module Module oImport"
    End Select
    
    '---------------------------
    ' Pour le Debugage
    '---------------------------
    Exit Function
    
    Resume
    
End Function



'---------------------------------------------------------------------------------------
' Procedure : Import_Equipement
' Author    : Thomas Lafontaine - Next Media
' Date      : 03/09/2013
' Purpose   : Importation de la base |fffd|quipement
'---------------------------------------------------------------------------------------
'
Public Function Import_Equipement() As Boolean
    
    
    Dim wbSource            As Workbook
    Dim wsSource            As Worksheet
    Dim wsCible             As Worksheet
    Dim strFileName         As String
    Dim idxRow              As Long
    Dim idxCol              As Long
    Dim lngRowNb            As Long
    
    
    On Error GoTo Import_Equipement_Err

    strFileName = fImport.Range("znImport_File2")

    'V|fffd|rification d'existance du fichier
    If Dir(strFileName, vbNormal) = "" Then
            
            MsgBox "Le fichier est introuvable :" & vbCrLf & strFileName, vbOKOnly + vbCritical, "Attention"
            
        Else
            
            'Optimisation de l'affichage pendant le traitement
            SetDisplayOptimisation True, True
            
            Set wsCible = fEquipement
            SetProtection wsCible, False
            
            '------------------------------------------------------
            ' Initialisation de l'|fffd|cran base |fffd|quipement
            '------------------------------------------------------
            
            'Suppression du filtre sur les donn|fffd|es s'il y en a
            If fEquipement.FilterMode = True Then
                fEquipement.ShowAllData
            End If
            
            'Suppression des donn|fffd|es existantes
            wsCible.Range(wsCible.Range("znEquipementTitle").Row + 1 & ":" & wsCible.Rows.Count).Delete xlShiftUp
            
            
            '-------------------------------
            ' Importation du fichier source
            '-------------------------------
            
            'Ouverture du fichier source
            Set wbSource = Workbooks.Open(strFileName, False, False, , , , True, , , , , , , True)
            Set wsSource = wbSource.Sheets("BASE")
            
            'Cr|fffd|ation d'une colonne destin|fffd|es |fffd| recevoir le poids du march|fffd|
            wsSource.Columns(18).Insert xlShiftToRight
            
            'Copie des donn|fffd|es du nouveau fichier colonne par colonne
            'en pr|fffd|vision d'|fffd|ventuelles colonnes suppl|fffd|mentaires |fffd| importer
            For idxCol = 1 To wsSource.UsedRange.Columns.Count
                
                wsSource.Range(wsSource.Cells(4, idxCol).Address & ":" & wsSource.Cells(wsSource.UsedRange.Rows.Count + 4, idxCol).Address).Copy
                wsCible.Cells(wsCible.Range("znEquipementTitle").Row, idxCol + 1).PasteSpecial xlPasteValues
                
                frmWait.lblPctAvancement.Caption = CInt((idxCol / wsSource.UsedRange.Columns.Count) * 100) & "%"
                DoEvents
                
            Next
            
            'D|fffd|finition des mises en formes conditionnelles
            Call SetConditionnalDisplay_Equipement
            
            SetProtection wsCible, True
            
            wbSource.Close
            
            'Destruction de tous les objets
            Set wbSource = Nothing
            Set wsSource = Nothing
            Set wsCible = Nothing
            
            
            'R|fffd|tablissement de l'affichage par d|fffd|faut
            SetDisplayOptimisation False
            
    End If

    Import_Equipement = True

    Exit Function

Import_Equipement_Err:

    Select Case Err.Number

        Case Else
            'R|fffd|tablissement de l'affichage par d|fffd|faut
            SetDisplayOptimisation False
            
            'Signalement de l'erreur
            Import_Equipement = False
            MsgBox "Erreur n|fffd|" & Err.Number & " : " & Err.Description & " (proc|fffd|dure Import_Equipement du module Module oImport"
    
    End Select
    
    '---------------------------
    ' Pour le Debugage
    '---------------------------
    Exit Function
    
    Resume
    
End Function


'---------------------------------------------------------------------------------------
' Procedure : SetConditionnalDisplay_Equipement
' Author    : Thomas Lafontaine - Next Media
' Date      : 03/09/2013
' Purpose   : D|fffd|finition de la mise en forme conditionnelle
'---------------------------------------------------------------------------------------
'
Sub SetConditionnalDisplay_Equipement()

    'Mise en surbrillance de la ligne s|fffd|lectionn|fffd|e
    With Range("B:AP")
        
        .FormatConditions.Delete
        
        .FormatConditions.Add Type:=xlExpression, Formula1:="=SI($A1=1;VRAI;FAUX)"
        .FormatConditions(.FormatConditions.Count).SetFirstPriority
    
        .FormatConditions(1).Font.ThemeColor = xlThemeColorDark1
        .FormatConditions(1).Interior.Color = 16737792
        
        'vraie valeur : 16737792
        
    End With
        
End Sub




'---------------------------------------------------------------------------------------
' Procedure : Import_PoidsMarche
' Author    : Thomas Lafontaine - Next Media
' Date      : 03/09/2013
' Purpose   : Importation de la base des poids march|fffd|
'---------------------------------------------------------------------------------------
'
Public Function Import_PoidsMarche() As Boolean
    
    
    Dim wbSource            As Workbook
    Dim wsSource            As Worksheet
    Dim wsCible             As Worksheet
    Dim strFileName         As String
    Dim idxRow              As Long
    Dim idxCol              As Long
    Dim lngRowNb            As Long
    
    
    
    On Error GoTo Import_PoidsMarche_Err

    strFileName = fImport.Range("znImport_File3")

    'V|fffd|rification d'existance du fichier
    If Dir(strFileName, vbNormal) = "" Then
            
            MsgBox "Le fichier est introuvable :" & vbCrLf & strFileName, vbOKOnly + vbCritical, "Attention"
            
        Else
            
            'Optimisation de l'affichage pendant le traitement
            SetDisplayOptimisation True, True
            
            Set wsCible = fPoidsMarche
            SetProtection wsCible, False
            SetProtection fEquipement, False
            
            '------------------------------------------------------
            ' Initialisation de l'|fffd|cran base |fffd|quipement
            '------------------------------------------------------
            
            'Suppression du filtre sur les donn|fffd|es s'il y en a
            If fEquipement.FilterMode = True Then
                fEquipement.ShowAllData
            End If
            
            'Suppression des donn|fffd|es existantes
            wsCible.Range(wsCible.Range("znPoidsMarcheTitle").Row + 3 & ":" & wsCible.Rows.Count).Delete xlShiftUp
            
            
            '-------------------------------
            ' Importation du fichier source
            '-------------------------------
            
            'Ouverture du fichier source
            Set wbSource = Workbooks.Open(strFileName, False, False, , , , True, , , , , , , True)
            Set wsSource = wbSource.Sheets("Datas")
            
                        
            'Copie des donn|fffd|es du nouveau fichier
            wsSource.Range(wsSource.Cells(2, 1).Address & ":" & wsSource.Cells(wsSource.UsedRange.Rows.Count, 3).Address).Copy
            wsCible.Cells(wsCible.Range("znPoidsMarcheTitle").Row + 3, 2).PasteSpecial xlPasteValues
            
            
            'Mise |fffd| jour des poids march|fffd| sur l'|fffd|cran |fffd|quippement
            fEquipement.Range(fEquipement.Cells(9, 19).Address & ":" & fEquipement.Cells(fEquipement.UsedRange.Rows.Count, 19).Address).FormulaR1C1 = "=SUMPRODUCT((PoidsMarche!R4C2:R2137C2=RC[-16] & "" "" & RC[-15])*(PoidsMarche!R4C3:R2137C3=RC[-5] & ""/"" & RC[-4] & "" "" & RC[-3] & "" "" & RC[-2] & RC[-1])*PoidsMarche!R4C4:R2137C4)"
            fEquipement.Range(fEquipement.Cells(9, 19).Address & ":" & fEquipement.Cells(fEquipement.UsedRange.Rows.Count, 19).Address) = fEquipement.Range(fEquipement.Cells(9, 19).Address & ":" & fEquipement.Cells(fEquipement.UsedRange.Rows.Count, 19).Address).Value
            
            SetProtection fEquipement, True
            SetProtection wsCible, True
            
            wbSource.Close
            
            'Destruction de tous les objets
            Set wbSource = Nothing
            Set wsSource = Nothing
            Set wsCible = Nothing
            
            fEquipement.Activate
            
            'R|fffd|tablissement de l'affichage par d|fffd|faut
            SetDisplayOptimisation False
            
    End If

    Import_PoidsMarche = True

    Exit Function

Import_PoidsMarche_Err:

    Select Case Err.Number

        Case Else
            'R|fffd|tablissement de l'affichage par d|fffd|faut
            SetDisplayOptimisation False
            
            'Signalement de l'erreur
            Import_PoidsMarche = False
            MsgBox "Erreur n|fffd|" & Err.Number & " : " & Err.Description & " (proc|fffd|dure Import_PoidsMarche du module Module oImport"
    
    End Select
    
    '---------------------------
    ' Pour le Debugage
    '---------------------------
    Exit Function
    
    Resume
    
End Function


'---------------------------------------------------------------------------------------
' Procedure : Import_RefConst
' Author    : Thomas Lafontaine - Next Media
' Date      : 03/09/2013
' Purpose   : Importation de la base des r|fffd|f|fffd|rences constructeurs
'---------------------------------------------------------------------------------------
'
Public Function Import_RefConst() As Boolean
    
    
    Dim wbSource            As Workbook
    Dim wsSource            As Worksheet
    Dim wsCible             As Worksheet
    Dim strFileName         As String
    Dim idxRow              As Long
    Dim idxCol              As Long
    Dim lngRowNb            As Long
    Dim rngSource           As Range
    Dim idxColCible         As Integer
    
    
    Const COL_REF_PSA = 18
    Const COL_REF_RENAULT = 21
    Const COL_CAI = 2
    
    
    'Dim lstEnseignes As Object
    
    'Set lstEnseignes = CreateObject("Scripting.Dictionary")
    
    
    On Error GoTo Import_RefConst_Err
    
    ''Chargement du dictionnaire d'enseignes
    'idxRow = 1
    '
    'While fParameters.Range("znParamRefConst").Cells(idxRow, 1) <> ""
    '
    '    lstEnseignes.Add fParameters.Range("znParamRefConst").Cells(idxRow, 1).Value, fParameters.Range("znParamRefConst").Cells(idxRow, 3).Value
    '    idxRow = idxRow + 1
    'Wend
    '
    'idxRow = 0
    
    strFileName = fImport.Range("znImport_File4")

    'V|fffd|rification d'existance du fichier
    If Dir(strFileName, vbNormal) = "" Then
            
            MsgBox "Le fichier est introuvable :" & vbCrLf & strFileName, vbOKOnly + vbCritical, "Attention"
            
        Else
            
            'Optimisation de l'affichage pendant le traitement
            SetDisplayOptimisation True, True
            
            Set wsCible = fRefConst
            SetProtection wsCible, False
            SetProtection fEquipement, False
            
            '------------------------------------------------------
            ' Initialisation de l'|fffd|cran base |fffd|quipement
            '------------------------------------------------------
            
            'Suppression du filtre sur les donn|fffd|es s'il y en a
            If fEquipement.FilterMode = True Then
                fEquipement.ShowAllData
            End If
            
            'Suppression des donn|fffd|es existantes
            wsCible.Range(wsCible.Range("znRefConstTitle").Row + 2 & ":" & wsCible.Rows.Count).Delete xlShiftUp
            
            
            '-------------------------------
            ' Importation du fichier source
            '-------------------------------
            
            'Ouverture du fichier source
            Set wbSource = Workbooks.Open(strFileName, False, False, , , , True, , , , , , , True)
            Set wsSource = wbSource.Sheets(1)
            
                        
            'Copie des donn|fffd|es du nouveau fichier
            Set rngSource = wsSource.Range("A1").CurrentRegion
            
            For idxCol = 1 To rngSource.Columns.Count
                Select Case UCase(Trim(rngSource.Cells(1, idxCol)))
                    Case "CAI":
                        idxColCible = COL_CAI
                    Case "RENAULT":
                        idxColCible = COL_REF_RENAULT
                    Case "PSA":
                        idxColCible = COL_REF_PSA
                End Select
            
                rngSource.Range(rngSource(2, idxCol), rngSource(rngSource.Rows.Count, idxCol)).Copy
                wsCible.Cells(wsCible.Range("znRefConstTitle").Row + 2, idxColCible).PasteSpecial xlPasteValues
                'wsCible.Cells(wsCible.Range("znRefConstTitle").Row, 2).PasteSpecial xlPasteValues
            
            Next idxCol
            
            
            'Mise |fffd| jour des r|fffd|f|fffd|rences Renault sur l'|fffd|cran |fffd|quippement
            
            fCatCom.Range(fCatCom.Cells(11, 27).Address & ":" & fCatCom.Cells(fCatCom.UsedRange.Rows.Count, 27).Address) _
                .FormulaR1C1 = "=IFERROR(IF(VLOOKUP(RC[-12],znRefConst,20,FALSE)=0,"""",VLOOKUP(RC[-12],znRefConst,20,FALSE)),"""")"
            
            'fCatCom.Range(fCatCom.Cells(11, 28).Address & ":" & fCatCom.Cells(fCatCom.UsedRange.Rows.Count, 28).Address) = fCatCom.Range(fCatCom.Cells(11, 28).Address & ":" & fCatCom.Cells(fCatCom.UsedRange.Rows.Count, 28).Address).Value
            
            
            'Mise |fffd| jour des r|fffd|f|fffd|rences PSA sur l'|fffd|cran |fffd|quippement
            
            fCatCom.Range(fCatCom.Cells(11, 28).Address & ":" & fCatCom.Cells(fCatCom.UsedRange.Rows.Count, 28).Address) _
                .FormulaR1C1 = "=IFERROR(IF(VLOOKUP(RC[-13],znRefConst,17,FALSE)=0,"""",VLOOKUP(RC[-13],znRefConst,17,FALSE)),"""")"
            
            'fCatCom.Range(fCatCom.Cells(11, 29).Address & ":" & fCatCom.Cells(fCatCom.UsedRange.Rows.Count, 29).Address) = fCatCom.Range(fCatCom.Cells(11, 29).Address & ":" & fCatCom.Cells(fCatCom.UsedRange.Rows.Count, 29).Address).Value
            
            SetProtection fEquipement, True
            SetProtection wsCible, True
            
            wbSource.Close
            
            'Destruction de tous les objets
            Set wbSource = Nothing
            Set wsSource = Nothing
            Set wsCible = Nothing
            
            fEquipement.Activate
            
            'R|fffd|tablissement de l'affichage par d|fffd|faut
            SetDisplayOptimisation False
            
    End If

    Import_RefConst = True

    Exit Function

Import_RefConst_Err:

    Select Case Err.Number

        Case Else
            MsgBox "Erreur n|fffd|" & Err.Number & " : " & Err.Description & " (proc|fffd|dure Import_RefConst du module Module oImport"
    
            'R|fffd|tablissement de l'affichage par d|fffd|faut
            SetDisplayOptimisation False
            
            'Signalement de l'erreur
            Import_RefConst = False
            
    End Select
    
    '---------------------------
    ' Pour le Debugage
    '---------------------------
    Exit Function
    
    Resume
    
End Function


Attribute VB_Name = "oNavigation"
Option Explicit

'---------------------------------------------------------------------------------------
' Procedure : GoPrevious
' Author    : Thomas Lafontaine - Next Media
' Date      : 17/09/2013
' Purpose   :
'---------------------------------------------------------------------------------------
'
Sub GoPrevious()
    
    Application.GoTo Worksheets(gblActiveSheet).Range("A1"), True
    
End Sub

'---------------------------------------------------------------------------------------
' Procedure : SetConditionnalDisplay_Equipement
' Author    : Thomas Lafontaine - Next Media
' Date      : 17/09/2013
' Purpose   :
'---------------------------------------------------------------------------------------
'
Sub SetConditionnalDisplay_Equipement()

    SetDisplayOptimisation True
    
    With Range("B:AP")
        
        .FormatConditions.Delete
        
        .FormatConditions.Add Type:=xlExpression, Formula1:="=SI($A1=1;VRAI;FAUX)"
        .FormatConditions(.FormatConditions.Count).SetFirstPriority
    
        .FormatConditions(1).Font.ThemeColor = xlThemeColorDark1
        .FormatConditions(1).Interior.Color = 16737792
        
        'Couleur rouge valeur : 3881983
        
    End With
    
    SetDisplayOptimisation False
    
End Sub
Attribute VB_Name = "oTools"
Option Explicit

'---------------------------------------------------------------------------------------
' Procedure : Update_CAI_Filter
' Author    : Thomas Lafontaine - Next Media
' Date      : 22/07/2013
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Sub CatCom_Update_CAI_Filter()
Attribute CatCom_Update_CAI_Filter.VB_ProcData.VB_Invoke_Func = " \n14"
    
  On Error GoTo 42
    
    Dim intLargeur      As Integer
    Dim intSerie        As Integer
    Dim intDiametre     As Integer
    Dim intIC           As Integer
    Dim strIV           As String
    Dim critli          As String
    Dim catvehicule     As String
    
    SetDisplayOptimisation True
    
    SetProtection fCatCom, False
    
    If Not IsError(fEquipement.Cells(fEquipement.Range("znEquipementTitle").Row - 1, 14)) Then
        
            intLargeur = fEquipement.Cells(fEquipement.Range("znEquipementTitle").Row - 1, 14)
            intSerie = fEquipement.Cells(fEquipement.Range("znEquipementTitle").Row - 1, 15)
            intDiametre = fEquipement.Cells(fEquipement.Range("znEquipementTitle").Row - 1, 16)
            intIC = fEquipement.Cells(fEquipement.Range("znEquipementTitle").Row - 1, 17)
            strIV = fEquipement.Cells(fEquipement.Range("znEquipementTitle").Row - 1, 18)
            catvehicule = fEquipement.Cells(fEquipement.Range("znEquipementTitle").Row - 1, 2)
                
            fCatCom.Activate
            
            If fCatCom.FilterMode = True Then
                fCatCom.ShowAllData
            End If
            
            'Creation du critere pour l'indice de charge commence par (camionettes)
            critli = "=" & intIC & "*"
            
            fCatCom.Range("$B$10:$AC$10").AutoFilter Field:=6, Criteria1:=intLargeur
            fCatCom.Range("$B$10:$AC$10").AutoFilter Field:=7, Criteria1:=intSerie
            fCatCom.Range("$B$10:$AC$10").AutoFilter Field:=9, Criteria1:=intDiametre
            fCatCom.Range("$B$10:$AC$10").AutoFilter Field:=30, Criteria1:=">=" & intIC
            If catvehicule = "T" Or catvehicule = "4X4" Then
            fCatCom.Range("$B$10:$AC$10").AutoFilter Field:=2, Criteria1:="<>*C*", Operator:=xlAnd, Criteria2:="<>*LT*"
            End If
            fCatCom.Range("$B$10:$AC$10").AutoFilter Field:=29, Criteria1:=">=" & GetIV_Index(strIV)
        Else
        
            
            fCatCom.Activate
            
            If fCatCom.FilterMode = True Then
                fCatCom.ShowAllData
            End If
            
    End If


42:

    SetProtection fCatCom, True
    
    SetDisplayOptimisation False
    
End Sub

'---------------------------------------------------------------------------------------
' Procedure : GetIV_Index
' Author    : Thomas Lafontaine - Next Media
' Date      : 17/09/2013
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Function GetIV_Index(strIV As String) As Long

    On Error GoTo GetIV_Index_Err

    Dim lngIndex As Long
    
    GetIV_Index = Application.WorksheetFunction.VLookup(strIV, fParameters.Range("znParamIV"), 2, False)
    
    Exit Function

GetIV_Index_Err:

    GetIV_Index = 0

End Function
'---------------------------------------------------------------------------------------
' Procedure : Clear_CAI_Filter
' Author    : Thomas Lafontaine - Next Media
' Date      : 22/07/2013
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Sub CatCom_Clear_CAI_Filter()
    
    SetDisplayOptimisation True
    
    SetProtection fCatCom, False
    
    If fCatCom.FilterMode = True Then
        fCatCom.ShowAllData
    End If

    SetProtection fCatCom, True

    SetDisplayOptimisation False
    
End Sub



'---------------------------------------------------------------------------------------
' Procedure : Equip_Clear_Filter
' Author    : Thomas Lafontaine - Next Media
' Date      : 22/07/2013
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Sub Equip_Clear_Filter()
    
    SetDisplayOptimisation True
    
    If fEquipement.FilterMode = True Then
        SetProtection fEquipement, False
        fEquipement.ShowAllData
        SetProtection fEquipement, True
    End If

    SetDisplayOptimisation False
    
End Sub


'---------------------------------------------------------------------------------------
' Procedure : SetProtection
' Author    : Thomas Lafontaine - Next Media
' Date      : 22/07/2013
' Purpose   :
'---------------------------------------------------------------------------------------
'
Public Sub SetProtection(wsSheet As Worksheet, blnValue As Boolean)
    
    If blnValue Then
            wsSheet.EnableOutlining = True
            wsSheet.Protect PARAM_MDP, , , , True, False, False, False, False, False, False, False, False, False, True, False
        Else
            wsSheet.Unprotect PARAM_MDP
    End If

End Sub




'---------------------------------------------------------------------------------------
' Procedure : SetDisplayOptimisation
' Author    : Thomas Lafontaine - Next Media
' Date      : 03/09/2013
' Purpose   : Gestion de l'affichage
'---------------------------------------------------------------------------------------
'
Public Sub SetDisplayOptimisation(blnValue As Boolean, Optional blnWaitingPopup As Boolean)

    If blnValue Then
            
            'Affichage de la fen|fffd|tre d'attente
            If blnWaitingPopup Then frmWait.Show
            DoEvents
            
            Application.Calculation = xlCalculationManual
            Application.EnableEvents = False
            Application.ScreenUpdating = False
            Application.DisplayAlerts = False
            
        Else
            
            'Masque la fen|fffd|tre d'attente
            frmWait.Hide
            
            Application.Calculation = xlCalculationAutomatic
            Application.EnableEvents = True
            Application.ScreenUpdating = True
            Application.DisplayAlerts = True
            
    End If

End Sub


Public Sub FilterDisplayAll()
    
    If ActiveSheet.FilterMode = True Then
        SetProtection ActiveSheet, False
        ActiveSheet.ShowAllData
        SetProtection ActiveSheet, True
    End If
End Sub


INQUEST-PP=macro
