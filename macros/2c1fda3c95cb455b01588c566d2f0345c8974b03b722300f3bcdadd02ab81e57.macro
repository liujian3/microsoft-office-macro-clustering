Attribute VB_Name = "Module1"
Option Explicit


Sub SaveFile(strData As String)

Const ForReading = 1, ForWriting = 2, ForAppending = 3

Dim sFName As String
Dim fs As New Scripting.FileSystemObject
Dim f As TextStream
Dim wmes As String
Dim wden As String
Dim Title As String


    Title = "Generates file for Salary Group Payment (GP)"
    If Month(Date) < 10 Then
      wmes = "0" & Month(Date)
     Else
      wmes = Month(Date)
    End If
    If Day(Date) < 10 Then
      wden = "0" & Day(Date)
     Else
      wden = Day(Date)
    End If
    sFName = Application.GetSaveAsFilename(Trim(Cells(2, 9)) & Right(Year(Date), 2) & wmes & wden, "Text Files (*.txt), *.txt", 1, Title)

    If sFName = "False" Then
        Exit Sub
    End If
    
    Set f = fs.OpenTextFile(sFName, ForWriting, True, TristateFalse)
        
    f.Write (strData)
    
    f.Close
    
    Set f = Nothing
    Set fs = Nothing

End Sub



Function PrefixInteger(nValue As Long, nSize As Integer) As String
Dim i As Integer, sValue As String, nLen As Long

        sValue = CStr(nValue): nLen = Len(sValue)
        
        For i = 1 To nSize - nLen
               sValue = "0" & sValue
        Next i
        
        PrefixInteger = sValue
        
End Function

Function getNewRecord() As String
Dim i As Integer, s As String
        s = ""
        For i = 1 To 190
            s = s & " "
        Next i
        
        getNewRecord = s
End Function

Function getNewRecordZagl() As String
Dim i As Integer, s As String
        s = ""
        For i = 1 To 120
            s = s & " "
        Next i
        
        getNewRecordZagl = s
End Function


Sub formatRecord(ByRef strRecord As String, sData As String, nPosition As Integer, nSize As Integer)
Dim s As String

        If IsNull(sData) Then
            sData = " "
        End If

        sData = Replace(sData, """", " ")
        sData = Trim(sData)
        sData = UCase(sData)

        If Len(sData) > (nSize) Then
            s = Left(strRecord, nPosition - 1)
            s = s & Left(sData, nSize)
            s = s & Right(strRecord, Len(strRecord) - (nPosition + nSize - 1))
        Else
            s = Left(strRecord, nPosition - 1)
            s = s & sData
            s = s & Right(strRecord, Len(strRecord) - (nPosition + nSize - 1) + (nSize - Len(sData)))
           
        End If
        
        strRecord = s
                    
End Sub

Function LastValidRow() As String
Dim Counter
    
    Counter = 7 ' First row contains table header
    
    While Trim(Cells(Counter, 5)) <> ""  ' Check whether name field is empty
        Counter = Counter + 1
    Wend
    
    LastValidRow = Counter - 1
    
End Function

Sub formatAmount(ByRef strRecord As String, sData As String, nPosition As Integer, nSize As Integer)
Dim s As String
Dim Len_Amount As Long
Dim i As Integer

        If IsNull(sData) Then
            sData = " "
        End If

        sData = Trim(Replace(sData, """", " "))
        
        Len_Amount = Len(sData)
        
        If Len_Amount > nSize Then
           s = Left(strRecord, nPosition - 1)
           For i = 1 To nSize
               s = s & " "
           Next i
           s = s & Right(strRecord, Len(strRecord) - (nPosition + nSize - 1))
        
        Else
           s = Left(strRecord, nPosition - 1)
           For i = 1 To nSize - Len_Amount
               s = s & " "
           Next i
           
           s = s & sData
           s = s & Right(strRecord, Len(strRecord) - (nPosition - 1) - Len(sData))
        
        End If
        
        strRecord = s

End Sub
Sub Main()
Dim i As Integer
Dim recnum As Integer
Dim e As Integer
Dim sRec As String

Dim nStartRow As Long
Dim nextRow As Long
Dim nEndRow As Long

Dim sResponse As String
Dim sTemp As String
        e = 0
        nStartRow = 8
        nEndRow = LastValidRow()
                
        If (nEndRow = 0) Then Exit Sub
        
        For i = nStartRow To nEndRow
            sRec = getNewRecord()
            If Cells(i, 5) > 0 Then
              recnum = recnum + 1
            End If
         Next i

        e = 0
        nStartRow = 8
        nEndRow = LastValidRow()

        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
          sRec = getNewRecordZagl()
            
          Call formatRecord(sRec, "OMP;DP;", 1, 7)           ' OMP DP
     
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| IBAN |fffd||fffd||fffd||fffd||fffd||fffd|
        If Not validIBAN(Cells(2, 5)) Then
          Range("E2").Font.ColorIndex = 3         ' Paints this cell in red!
        End If
        
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
          If Trim(Cells(2, 5)) = "" Then             ' Check whether reference is empty
             MsgBox ("Company Account is empty!")
             Exit Sub
          End If
          
          Call formatRecord(sRec, Trim(Cells(2, 2)), 28, 12)
        
        ' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
          If Cells(2, 3).Value = "" Then
             Cells(2, 3).Value = Format(Date, "dd.mm.yyyy")
          End If
          If Not CheckDate(Cells(2, 3).Value) Then
             Range("C2").Font.ColorIndex = 3         ' Paints this cell in red!
             Exit Sub
          Else
             Range("C2").Font.ColorIndex = 1
          End If
          '' If DateSerial(Right(Cells(2, 3).Value, 4), Mid(Cells(2, 3).Value, 4, 2), Left(Cells(2, 3).Value, 2)) < Date Then ' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            ''   Cells(2, 3).Value = Format(Date, "dd.mm.yyyy")
       ''   End If
         
          sTemp = ""
          sTemp = Mid(Trim(Cells(2, 3)), 7, 4) & Mid(Trim(Cells(2, 3)), 4, 2) & Mid(Trim(Cells(2, 3)), 1, 2)
          Call formatRecord(sRec, sTemp, 8, 8)
         
        
        Call formatRecord(sRec, ";IABGBGSF;", 16, 10)        ' IABGBGSF - BIC
        Call formatRecord(sRec, Trim(Cells(2, 5)), 26, 22)         ' IBAN |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Call formatRecord(sRec, ";", 48, 1)        ' ;
        Call formatRecord(sRec, Trim(Cells(2, 10)), 49, 35)        ' |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Call formatRecord(sRec, ";", 84, 1)        ' ;
        Call formatRecord(sRec, Trim(Cells(2, 7)), 85, 3)         ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        Call formatRecord(sRec, ";", 88, 1)        ' ;
        sTemp = ""
        sTemp = Right(("000000000000" & Cells(2, 6)), 16)
        Call formatRecord(sRec, sTemp, 89, 16)              ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
        Call formatRecord(sRec, ";", 105, 1)        ' ;
        Call formatRecord(sRec, PrefixInteger((recnum), 6), 106, 6) ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        Call formatRecord(sRec, ";       ;", 112, 9)        ' ;
        
        
        'Call formatRecord(sRec, Trim(Cells(2, 8)), 109, 35)        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|

        sResponse = sResponse & sRec & vbCrLf
                              
                              
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        For i = nStartRow To nEndRow
            sRec = getNewRecord()
    
            If Cells(i, 5) > 0 Then
              If validIBAN(Trim(Cells(i, 6))) Then
                Call formatRecord(sRec, "DP;", 1, 3)           ' DP
                Call formatRecord(sRec, Trim(Cells(i, 2)) & " " & Trim(Cells(i, 3)) & " " & Trim(Cells(i, 4)), 4, 35) ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Call formatRecord(sRec, ";", 39, 1)        ' ;
                Call formatRecord(sRec, Trim(Cells(i, 8)), 40, 8)      ' BIC
                Call formatRecord(sRec, ";", 48, 1)        ' ;
                Call formatRecord(sRec, Trim(Cells(i, 6)), 49, 22)      ' |fffd||fffd||fffd||fffd||fffd||fffd|
                Call formatRecord(sRec, ";", 71, 1)        ' ;
                Call formatRecord(sRec, Trim(Cells(i, 10)), 72, 35)     ' |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
                Call formatRecord(sRec, ";", 107, 1)        ' ;
                                
                Call formatAmount(sRec, Format(Cells(i, 5), "        0.00"), 108, 13) ' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Call formatRecord(sRec, ";", 121, 1)        ' ;
                
                Call formatRecord(sRec, ("|fffd||fffd||fffd|" & Trim(Cells(i, 1)) & " "), 122, 14)    ' |fffd||fffd||fffd|
                                
                If Trim(Cells(i, 9)) = "" Then
                   Call formatRecord(sRec, Trim(Cells(2, 8)), 136, 55)  ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                 Else
                   Call formatRecord(sRec, Trim(Cells(i, 9)), 136, 55)  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
                End If
                Call formatRecord(sRec, ";", 191, 1)        ' ;
                
               
               
                
                sResponse = sResponse & sRec & vbCrLf
               Else
                 Cells(i, 6).Font.ColorIndex = 3                     ' Paints the cell in red, when IBAN is invalid
                 e = 1
                 Exit For
              End If
            End If
        Next i
        
        If (e = 0) Then
           Range("A1").Select
           Call SaveFile(sResponse)
        
           MsgBox "Done!"
        Else
           MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| IBAN |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|!"
        End If
        
End Sub
Function validIBAN(IBAN As String) As Boolean

Dim tempinteger
Dim TempStr
Dim divstr

TempStr = ConvertIBAN2Numbers(RemoveSpaces(IBAN))
Do Until Len(TempStr) <= 8
   divstr = Left(TempStr, 8)
   If Len(TempStr) > 8 Then
      TempStr = Right(TempStr, Len(TempStr) - 8)
   End If
   
   tempinteger = CDbl(divstr)
   TempStr = CStr(tempinteger Mod 97) + TempStr
Loop
tempinteger = CDbl(TempStr)
If (tempinteger Mod 97) = 1 Then
    validIBAN = True
Else
    validIBAN = False
End If
End Function

Public Function RemoveSpaces(MyIBAN)
Dim TempStr
Dim i
TempStr = ""
MyIBAN = UCase(MyIBAN)
For i = 1 To Len(MyIBAN)
   If Mid(MyIBAN, i, 1) <> " " Then
      TempStr = TempStr & Mid(MyIBAN, i, 1)
   End If
Next
RemoveSpaces = TempStr
End Function

Public Function ConvertIBAN2Numbers(myString)
Dim TempStr
Dim i
Dim Character

TempStr = myString

'Step 1
If Len(myString) > 4 Then
   TempStr = Right(myString, Len(myString) - 4) + Left(myString, 4)
End If

'step 2
i = 1
Do Until i > Len(TempStr)
   Character = Mid(TempStr, i, 1)
   If Asc(Character) >= 65 And Asc(Character) <= 90 Then
      TempStr = Left(TempStr, i - 1) & (Asc(Character) - 55) & Right(TempStr, Len(TempStr) - i)
   End If
   i = i + 1
Loop
ConvertIBAN2Numbers = TempStr
End Function

Function CheckDate(inDate As String) As Boolean
Dim DayI As String
Dim DayII As String

Dim MonthI As String
Dim MonthII As String

CheckDate = True

If Len(inDate) <> 10 Then
   MsgBox ("Invalid date format. Example " & Format(Date, "dd.mm.yyyy"))
   CheckDate = False
   Exit Function
End If

If (Mid(inDate, 3, 1) <> "." Or Mid(inDate, 3, 1) > "/") And (Mid(inDate, 6, 1) < "." Or Mid(inDate, 6, 1) > "/") Then
   MsgBox ("Invalid date format. Example " & Format(Date, "dd.mm.yyyy"))
   CheckDate = False
   Exit Function
End If

' Month between 1 and 12
MonthI = Mid(inDate, 4, 1)
MonthII = Mid(inDate, 5, 1)

If (MonthI = "0" And MonthII = "0") Or (MonthI = "1" And (MonthII < "0" Or MonthII > "2")) Or (MonthI < "0" Or MonthI > "1") Then
   MsgBox ("Invalid date format. Example " & Format(Date, "dd.mm.yyyy"))
   CheckDate = False
   Exit Function
End If

' Day between 1 and 31
DayI = Mid(inDate, 1, 1)
DayII = Mid(inDate, 2, 1)

If (DayI = "0" And DayII = "0") Or (DayI = "3" And (DayII > "1")) Or (DayI < "0" Or DayI > "3") Then
   MsgBox ("Invalid date format. Example " & Format(Date, "dd.mm.yyyy"))
   CheckDate = False
   Exit Function
End If


End Function


Attribute VB_Name = "Module10"



Private Sub CommandButton1_Click()
p = InputBox("value")
Sheet1.Range("A1").Value = p
End Sub



Attribute VB_Name = "Module2"
Option Explicit


Sub SaveFile(strData As String)

Const ForReading = 1, ForWriting = 2, ForAppending = 3

Dim sFName As String
Dim fs As New Scripting.FileSystemObject
Dim f As TextStream
Dim wmes As String
Dim wden As String
Dim Title As String


    Title = "Generates file for Salary Group Payment (GP)"
    If Month(Date) < 10 Then
      wmes = "0" & Month(Date)
     Else
      wmes = Month(Date)
    End If
    If Day(Date) < 10 Then
      wden = "0" & Day(Date)
     Else
      wden = Day(Date)
    End If
    sFName = Application.GetSaveAsFilename(Trim(Cells(2, 9)) & Right(Year(Date), 2) & wmes & wden, "Text Files (*.txt), *.txt", 1, Title)

    If sFName = "False" Then
        Exit Sub
    End If
    
    Set f = fs.OpenTextFile(sFName, ForWriting, True, TristateFalse)
        
    f.Write (strData)
    
    f.Close
    
    Set f = Nothing
    Set fs = Nothing

End Sub



Function PrefixInteger(nValue As Long, nSize As Integer) As String
Dim i As Integer, sValue As String, nLen As Long

        sValue = CStr(nValue): nLen = Len(sValue)
        
        For i = 1 To nSize - nLen
               sValue = "0" & sValue
        Next i
        
        PrefixInteger = sValue
        
End Function

Function getNewRecord() As String
Dim i As Integer, s As String
        s = ""
        For i = 1 To 250
            s = s & " "
        Next i
        
        getNewRecord = s
End Function

Function getNewRecordZagl() As String
Dim i As Integer, s As String
        s = ""
        For i = 1 To 135
            s = s & " "
        Next i
        
        getNewRecordZagl = s
End Function


Sub formatRecord(ByRef strRecord As String, sData As String, nPosition As Integer, nSize As Integer)
Dim s As String

        If IsNull(sData) Then
            sData = " "
        End If

        sData = Replace(sData, """", " ")
        sData = Trim(sData)
        sData = UCase(sData)

        If Len(sData) > (nSize) Then
            s = Left(strRecord, nPosition - 1)
            s = s & Left(sData, nSize)
            s = s & Right(strRecord, Len(strRecord) - (nPosition + nSize - 1))
        Else
            s = Left(strRecord, nPosition - 1)
            s = s & sData
            s = s & Right(strRecord, Len(strRecord) - (nPosition + nSize - 1) + (nSize - Len(sData)))
           
        End If
        
        strRecord = s
                    
End Sub

Function LastValidRow() As String
Dim Counter
    
    Counter = 7 ' First row contains table header
    
    While Trim(Cells(Counter, 5)) <> ""  ' Check whether name field is empty
        Counter = Counter + 1
    Wend
    
    LastValidRow = Counter - 1
    
End Function

Sub formatAmount(ByRef strRecord As String, sData As String, nPosition As Integer, nSize As Integer)
Dim s As String
Dim Len_Amount As Long
Dim i As Integer

        If IsNull(sData) Then
            sData = " "
        End If

        sData = Trim(Replace(sData, """", " "))
        
        Len_Amount = Len(sData)
        
        If Len_Amount > nSize Then
           s = Left(strRecord, nPosition - 1)
           For i = 1 To nSize
               s = s & " "
           Next i
           s = s & Right(strRecord, Len(strRecord) - (nPosition + nSize - 1))
        
        Else
           s = Left(strRecord, nPosition - 1)
           For i = 1 To nSize - Len_Amount
               s = s & " "
           Next i
           
           s = s & sData
           s = s & Right(strRecord, Len(strRecord) - (nPosition - 1) - Len(sData))
        
        End If
        
        strRecord = s

End Sub
Sub Main()
Dim i As Integer
Dim recnum As Integer
Dim e As Integer
Dim sRec As String

Dim nStartRow As Long
Dim nextRow As Long
Dim nEndRow As Long

Dim sResponse As String
Dim sTemp As String
        e = 0
        nStartRow = 8
        nEndRow = LastValidRow()
                
        If (nEndRow = 0) Then Exit Sub
        
        For i = nStartRow To nEndRow
            sRec = getNewRecord()
            If Cells(i, 5) > 0 Then
              recnum = recnum + 1
            End If
         Next i

        e = 0
        nStartRow = 8
        nEndRow = LastValidRow()

        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
          sRec = getNewRecordZagl()
            
          Call formatRecord(sRec, "OMP;BP;", 1, 7)           ' OMP BP
     
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| IBAN |fffd||fffd||fffd||fffd||fffd||fffd|
        If Not validIBAN(Cells(2, 5)) Then
          Range("E2").Font.ColorIndex = 3         ' Paints this cell in red!
        End If
        
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
          If Trim(Cells(2, 5)) = "" Then             ' Check whether reference is empty
             MsgBox ("Company Account is empty!")
             Exit Sub
          End If
          
          Call formatRecord(sRec, Trim(Cells(2, 2)), 28, 12)
        
        ' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        
        If Cells(2, 3).Value = "" Then
             Cells(2, 3).Value = Format(Date, "dd.mm.yyyy")
          End If
         If Not CheckDate(Cells(2, 3).Value) Then
             Range("C2").Font.ColorIndex = 3         ' Paints this cell in red!
              Exit Sub
          Else
             Range("C2").Font.ColorIndex = 1
         End If
         '' If DateSerial(Right(Cells(2, 3).Value, 4), Mid(Cells(2, 3).Value, 4, 2), Left(Cells(2, 3).Value, 2)) < Date Then
              '' Cells(2, 3).Value = Format(Date, "dd.mm.yy")
           ''    If DateSerial(Right(Cells(2, 3).Value, 4), Mid(Cells(2, 3).Value, 4, 2), Left(Cells(2, 3).Value, 2)) < Date Then
            ''   Cells(2, 3).Value = Format(Date, "dd.mm.yyyy")
          
          sTemp = ""
          sTemp = Mid(Trim(Cells(2, 3)), 1, 2) & Mid(Trim(Cells(2, 3)), 4, 2) & Mid(Trim(Cells(2, 3)), 7, 4)
          Call formatRecord(sRec, sTemp, 8, 8)
          
          'sTemp = ""
          'sTemp = Mid(Trim(Cells(2, 3)), 1, 2) & Mid(Trim(Cells(2, 3)), 4, 2) & Mid(Trim(Cells(2, 3)), 9, 2)  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd| 1 ddmmyy
          'Call formatRecord(sRec, sTemp, 8, 8)
                                                            
        
        
        Call formatRecord(sRec, ";IABGBGSF;", 16, 10)        ' IABGBGSF - BIC
        Call formatRecord(sRec, Trim(Cells(2, 5)), 26, 22)         ' IBAN |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Call formatRecord(sRec, ";", 48, 1)        ' ;
        Call formatRecord(sRec, "xxxxxx", 49, 6)        ' |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Call formatRecord(sRec, ";", 55, 1)
        Call formatRecord(sRec, Trim(Cells(2, 10)), 56, 35)        ' |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Call formatRecord(sRec, ";", 91, 1)        ' ;
        Call formatRecord(sRec, Trim(Cells(2, 7)), 92, 3)         ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        Call formatRecord(sRec, ";", 95, 1)        ' ;
        sTemp = ""
        sTemp = Right(("000000000000" & Cells(2, 6)), 16)
        Call formatRecord(sRec, sTemp, 96, 16)               ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
        Call formatRecord(sRec, ";", 112, 1)        ' ;
        Call formatRecord(sRec, PrefixInteger((recnum), 6), 113, 6) ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        Call formatRecord(sRec, ";       ;", 119, 9)        ' ;
        
        
        'Call formatRecord(sRec, Trim(Cells(2, 8)), 109, 35)        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|

        sResponse = sResponse & sRec & vbCrLf
                              
                              
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
        For i = nStartRow To nEndRow
            sRec = getNewRecord()
    
            If Cells(i, 5) > 0 Then
              If validIBAN(Trim(Cells(i, 6))) Then
                Call formatRecord(sRec, "BP;", 1, 3)           ' BP
                Call formatRecord(sRec, Trim(Cells(i, 2)) & " " & Trim(Cells(i, 3)) & " " & Trim(Cells(i, 4)), 4, 35) ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Call formatRecord(sRec, ";", 29, 1)        ' ;
                Call formatRecord(sRec, Trim(Cells(i, 8)), 30, 8)      ' BIC
                Call formatRecord(sRec, ";", 38, 1)        ' ;
                Call formatRecord(sRec, Trim(Cells(i, 6)), 39, 22)      ' |fffd||fffd||fffd||fffd||fffd||fffd|
                Call formatRecord(sRec, ";", 61, 1)        ' ;
                Call formatRecord(sRec, Trim(Cells(i, 10)), 62, 18)     ' |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
                Call formatRecord(sRec, ";", 80, 1)        ' ;
                Call formatRecord(sRec, "xxxxxx", 81, 6)        ' |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Call formatRecord(sRec, ";", 87, 1)        ' ;
                Call formatAmount(sRec, Format(Cells(i, 5), "        0.00"), 88, 10) ' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Call formatRecord(sRec, ";", 98, 1)        ' ;
                Call formatRecord(sRec, ("|fffd||fffd||fffd|" & Trim(Cells(i, 1)) & " "), 99, 14)    ' |fffd||fffd||fffd|
                    If Trim(Cells(i, 9)) = "" Then
                Call formatRecord(sRec, Trim(Cells(2, 8)), 113, 15)  ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                        Else
                Call formatRecord(sRec, Trim(Cells(i, 9)), 113, 30)  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd|
                          End If
                Call formatRecord(sRec, ";;", 149, 2) ' ;
                Call formatRecord(sRec, Trim(Cells(2, 9)), 151, 1)     ' |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Call formatRecord(sRec, ";", 152, 1) ' ;
                 sTemp = ""
                   sTemp = Mid(Trim(Cells(2, 3)), 1, 2) & Mid(Trim(Cells(2, 3)), 4, 2) & Mid(Trim(Cells(2, 3)), 9, 2)  ' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Call formatRecord(sRec, sTemp, 153, 6)
                Call formatRecord(sRec, ";", 159, 1) ' ;
                 sTemp = ""
                  sTemp = Mid(Trim(Cells(2, 1)), 1, 2) & Mid(Trim(Cells(2, 1)), 4, 2) & Mid(Trim(Cells(2, 1)), 9, 2)  ' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Call formatRecord(sRec, sTemp, 160, 6)
                Call formatRecord(sRec, ";", 166, 1) ' ;
                  sTemp = ""
                   sTemp = Mid(Trim(Cells(2, 4)), 1, 2) & Mid(Trim(Cells(2, 4)), 4, 2) & Mid(Trim(Cells(2, 4)), 9, 2)  ' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Call formatRecord(sRec, sTemp, 167, 6)
                Call formatRecord(sRec, ";", 173, 1) ' ;
                Call formatRecord(sRec, Trim(Cells(2, 10)), 174, 32)        ' |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
                Call formatRecord(sRec, ";", 206, 1) ' ;
                Call formatRecord(sRec, Trim(Cells(4, 10)), 207, 13)        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
                Call formatRecord(sRec, ";", 220, 1) ' ;
                Call formatRecord(sRec, Trim(Cells(2, 12)), 221, 6)        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Call formatRecord(sRec, ";", 227, 1) ' ;
                Call formatRecord(sRec, Trim(Cells(2, 13)), 228, 3)        ' |fffd||fffd||fffd||fffd||fffd|
                Call formatRecord(sRec, ";", 231, 1) ' ;
                 sTemp = ""
                    sTemp = Mid(Trim(Cells(2, 3)), 1, 2) & Mid(Trim(Cells(2, 3)), 4, 2) & Mid(Trim(Cells(2, 3)), 9, 2)  ' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Call formatRecord(sRec, sTemp, 232, 6)
                Call formatRecord(sRec, ";", 238, 1) ' ;
               ' End If
               'Call formatRecord(sRec, Trim(Cells(2, 2)), 25, 10)      ' |fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
              ' Call formatRecord(sRec, ";", 266, 1) ' ;
                              ' sTemp = ""
          'sTemp = Mid(Trim(Cells(2, 1)), 1, 2) & Mid(Trim(Cells(2, 1)), 4, 2) & Mid(Trim(Cells(2, 1)), 9, 2)  ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd| 1 ddmmyy
          'Call formatRecord(sRec, sTemp, 8, 8)
              
        
                sResponse = sResponse & sRec & vbCrLf
               Else
                 Cells(i, 6).Font.ColorIndex = 3                     ' Paints the cell in red, when IBAN is invalid
                 e = 1
                 
                
                 Exit For
          
           End If
           End If
        Next i
    

        
        If (e = 0) Then
           Range("A1").Select
           Call SaveFile(sResponse)
        
           MsgBox "Done!"
        Else
           MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| IBAN |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|!"
        End If
        
End Sub
Function validIBAN(IBAN As String) As Boolean

Dim tempinteger
Dim TempStr
Dim divstr

TempStr = ConvertIBAN2Numbers(RemoveSpaces(IBAN))
Do Until Len(TempStr) <= 8
   divstr = Left(TempStr, 8)
   If Len(TempStr) > 8 Then
      TempStr = Right(TempStr, Len(TempStr) - 8)
   End If
   
   tempinteger = CDbl(divstr)
   TempStr = CStr(tempinteger Mod 97) + TempStr
Loop
tempinteger = CDbl(TempStr)
If (tempinteger Mod 97) = 1 Then
    validIBAN = True
Else
    validIBAN = False
End If
End Function

Public Function RemoveSpaces(MyIBAN)
Dim TempStr
Dim i
TempStr = ""
MyIBAN = UCase(MyIBAN)
For i = 1 To Len(MyIBAN)
   If Mid(MyIBAN, i, 1) <> " " Then
      TempStr = TempStr & Mid(MyIBAN, i, 1)
   End If
Next
RemoveSpaces = TempStr
End Function

Public Function ConvertIBAN2Numbers(myString)
Dim TempStr
Dim i
Dim Character

TempStr = myString

'Step 1
If Len(myString) > 4 Then
   TempStr = Right(myString, Len(myString) - 4) + Left(myString, 4)
End If

'step 2
i = 1
Do Until i > Len(TempStr)
   Character = Mid(TempStr, i, 1)
   If Asc(Character) >= 65 And Asc(Character) <= 90 Then
      TempStr = Left(TempStr, i - 1) & (Asc(Character) - 55) & Right(TempStr, Len(TempStr) - i)
   End If
   i = i + 1
Loop
ConvertIBAN2Numbers = TempStr
End Function

Function CheckDate(inDate As String) As Boolean
Dim DayI As String
Dim DayII As String

Dim MonthI As String
Dim MonthII As String

CheckDate = True

If Len(inDate) <> 10 Then
   MsgBox ("Invalid date format. Example " & Format(Date, "dd.mm.yyyy"))
   CheckDate = True
   Exit Function
End If

If (Mid(inDate, 3, 1) <> "." Or Mid(inDate, 3, 1) > "/") And (Mid(inDate, 8, 1) < "." Or Mid(inDate, 8, 1) > "/") Then
   MsgBox ("Invalid date format. Example " & Format(Date, "dd.mm.yyyy"))
   CheckDate = False
   Exit Function
End If

' Month between 1 and 12
MonthI = Mid(inDate, 4, 1)
MonthII = Mid(inDate, 5, 1)

If (MonthI = "0" And MonthII = "0") Or (MonthI = "1" And (MonthII < "0" Or MonthII > "2")) Or (MonthI < "0" Or MonthI > "1") Then
   MsgBox ("Invalid date format. Example " & Format(Date, "dd.mm.yyyy"))
   CheckDate = False
   Exit Function
End If

'' Day between 1 and 31
DayI = Mid(inDate, 1, 1)
DayII = Mid(inDate, 2, 1)

 If (DayI = "0" And DayII = "0") Or (DayI = "3" And (DayII > "1")) Or (DayI < "0" Or DayI > "3") Then
  MsgBox ("Invalid date format. Example " & Format(Date, "dd.mm.yyyy")) '   CheckDate = False
   Exit Function
 End If


End Function



Attribute VB_Name = "Module3"
Attribute VB_Name = "Module4"
Attribute VB_Name = "Module5"

Attribute VB_Name = "Module6"
Attribute VB_Name = "Module7"
Attribute VB_Name = "Module8"
Attribute VB_Name = "Module9"
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit



INQUEST-PP=macro
