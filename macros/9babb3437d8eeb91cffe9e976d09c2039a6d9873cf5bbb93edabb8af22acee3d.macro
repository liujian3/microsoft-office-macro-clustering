Attribute VB_Name = "FrmHead"
Attribute VB_Base = "0{47D6E547-23FC-48D9-9A6D-1A9620BF5FB5}{B651D80F-86BF-455A-87CD-7F710AF03EA0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub cmdCancelCol_Click()
   gHeadText = "Cancel"
   FrmHead.Hide
End Sub




Private Sub CmdInsertHead_Click()
    gHeadText = Me.HeadText
    gDescText = Me.DescText
    FrmHead.Hide
   
End Sub
Attribute VB_Name = "FrmInsert"
Attribute VB_Base = "0{4E8ABDC8-B8AB-4A9B-94D4-468674D2FF6C}{A6E18FA6-07F1-46B0-B38B-B52FF1EB5F47}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub cmdCancel_Click()
    Me.Hide
End Sub

Private Sub cmdInsert_Click()
    Dim strPhase As String
    Me.Hide
    If Me.OptNursery.Value = True Then

        Call SchoolAdd("Nursery")
    ElseIf Me.OptPrimary.Value = True Then
        Call SchoolAdd("Primary")
    ElseIf Me.OptPriMiddle.Value = True Then
        Call SchoolAdd("PriMiddle")
    ElseIf Me.OptSecondary.Value = True Then
        Call SchoolAdd("Secondary")
    ElseIf Me.OptSecMiddle.Value = True Then
        Call SchoolAdd("SecMiddle")
    ElseIf Me.OptSpecial.Value = True Then
        Call SchoolAdd("Special")
    End If
End Sub

Private Sub UserForm_Activate()
    Me.OptNursery.Value = True
End Sub


Attribute VB_Name = "FrmInsertCol"
Attribute VB_Base = "0{111C02B8-7209-426A-8895-A69FBF6EC652}{83F5FB08-B881-49F0-B3D3-75B8CD431FBF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdCancelCol_Click()
    Me.Hide
    Exit Sub
    
End Sub


Private Sub CmdInsertCol_Click()
    FrmHead.Show

    If gHeadText = "Cancel" Then
         Me.Hide
         Exit Sub
    End If
    If gHeadText = "" Then
         MsgBox "Column Heading must be provided"
         Me.Hide
         Exit Sub
    End If
    If gDescText = "" Then
         MsgBox "Column description must be provided. You may amend the text later"
         Me.Hide
    Exit Sub
    End If
    Dim strPhase As String
   
    Me.Hide
    If Me.OptButt1.Value = True Then
        Call ColAdd("1")
    ElseIf Me.OptButt2.Value = True Then
        Call ColAdd("2")
    ElseIf Me.OptButt3.Value = True Then
        Call ColAdd("3")
    ElseIf Me.OptButt4.Value = True Then
        Call ColAdd("4")
    ElseIf Me.OptButt5.Value = True Then
        Call ColAdd("5")
    ElseIf Me.OptButt6.Value = True Then
        Call ColAdd("6")
    ElseIf Me.OptButt7.Value = True Then
        Call ColAdd("7")
    ElseIf Me.OptButt8.Value = True Then
        Call ColAdd("8")
    ElseIf Me.OptButt9.Value = True Then
        Call ColAdd("9")
    ElseIf Me.OptButt10.Value = True Then
        Call ColAdd("10")
    ElseIf Me.OptButt11.Value = True Then
        Call ColAdd("11")
    ElseIf Me.OptButt12.Value = True Then
        Call ColAdd("12")
    ElseIf Me.OptButt13.Value = True Then
        Call ColAdd("13")
    ElseIf Me.OptButt14.Value = True Then
        Call ColAdd("14")
    ElseIf Me.OptButt15.Value = True Then
        Call ColAdd("15")
    ElseIf Me.OptButt16.Value = True Then
        Call ColAdd("16")
    ElseIf Me.OptButt17.Value = True Then
        Call ColAdd("17")
    ElseIf Me.OptButt20.Value = True Then
        Call ColAdd("20")
    End If
        
        
        

End Sub





Private Sub OptButt12_Click()

End Sub

Private Sub OptButt14_Click()

End Sub

Private Sub OptButt5_Click()

End Sub

Private Sub OptionButton1_Click()

End Sub

Private Sub OptionButton4_Click()

End Sub

Private Sub OptionButton5_Click()

End Sub

Private Sub OptionButton17_Click()

End Sub

Private Sub OptionButton2_Click()

End Sub
Attribute VB_Name = "Module2"
Global gHeadText As String
Global gDescText As String
Global gAddSchool As Integer




Sub ColAdd(strPhase As String)

 '+--------------------------------------+
    '| This adds Columns to new S251 Budget Table|
    '+--------------------------------------+
    Dim lngAnchor As Long
    Dim lngStart As Long
    Dim lngCol As Long
    Dim lngT2Row As Long
    Dim lngTotRows As Long
    Dim lngTempCol As Long
    Dim JUNKO As Long
    Dim lngTempColumns As Long
    Dim lngTotColumns As Long
    Dim lngTotalsCnt As Long
    Dim lngRows As Long
    Dim lngDoRows As Long
    Dim lngVal As Long
    Dim lngPVI As Long
    Dim ltRows As Long
    Dim TopRow As Long
    Dim TotalRow As Long
    Dim FirstRow As Long
    Dim TotRowCnt As Long
    Dim strMsgText As String
    Dim strHeadText As String
    Dim strFormText As String
    Dim strAddFormText As String
    Dim strColHead As String
    Dim strColStart As String
    Dim strColEnd As String
    Dim strSumForm As String
    On Error GoTo ErrorHandler
  
   
    'Turn Screen Refresh OFF
    Application.ScreenUpdating = False

    gblnWorking = False
   
    lngAnchor = Range("NewCol_" & strPhase).Columns.Count
    lngPVI = Range("PVI").Rows.Count
    
 '   ltRows = Range("datarows").Rows.Count
    
    lngCol = lngAnchor - 1
    lngRows = 12
    
    ActiveWorkbook.Sheets("SchoolTable").Unprotect Password:="mariko"
 

                Columns(lngAnchor).Select
                Selection.Insert Shift:=xlRight
                
                Columns(lngAnchor - 1).Copy
                Columns(lngAnchor).PasteSpecial
       '         Columns(lngAnchor).Select
       '        Selection.Locked = True
                Selection.FormulaHidden = False


              'BLANK THE DEPRIVATION CELL
              
               Cells(11, lngAnchor) = ""
               
                   'insert new heading and description
                 Cells(7, lngAnchor) = gHeadText
                 Cells(10, lngAnchor) = gDescText
                 Cells(14, lngAnchor - 1).Copy
                 Cells(14, lngAnchor).PasteSpecial
                 
                    
                 
  
                             '   update row total for pesky PVI providers
                             
                 lngStart = Range("StartCol" & strPhase).Columns.Count
                 strColStart = Replace(Cells(lngPVI, lngStart).Address, "$", "")

                
                 Cells(lngPVI, lngAnchor + 1).Select
                 strFormText = Selection.Formula
                 
                 
                 strColHead = Replace(Cells(1, lngAnchor).Address, "$", "")
                 strColHead = Replace(strColHead, "1", "")
                 strAddFormText = "+IF(ISERROR($" & strColHead & "$13*" & strColHead & lngPVI & "),0,$" & strColHead & "$13*" & strColHead & lngPVI & ")"
                 strFormText = strFormText & strAddFormText
                 
                
                 strColEnd = Replace(Cells(lngPVI, lngAnchor).Address, "$", "")
                 strSumForm = "=SUM(" & strColStart & ":" & strColEnd & ")"
                         
     
                 

                 
                


If (strPhase <= 4 Or strPhase = 16) Then

                 FirstRow = Range("TopRow_" & strPhase).Rows.Count
                 TopRow = Range("RowTot_" & strPhase).Rows.Count
                  lngDoRows = FirstRow
                 
      '           INSERT FORMULAE IN 2 PVI CELLS
                If (strPhase = 1 Or strPhase = 16) Then
                        Cells(lngPVI, lngAnchor + 1) = strFormText
                        Cells(lngPVI, lngAnchor + 2) = strSumForm
                End If
                 
                 

            
                 strFormText = ""
                 Cells(FirstRow, lngAnchor + 1).Select
                 strFormText = Selection.Formula
                 strColHead = Replace(Cells(1, lngAnchor).Address, "$", "")
                 strColHead = Replace(strColHead, "1", "")
                 strAddFormText = "+IF(ISERROR($" & strColHead & "$13*" & strColHead & FirstRow & "),0,$" & strColHead & "$13*" & strColHead & FirstRow & ")"
                 strFormText = strFormText & strAddFormText
                 strColStart = Replace(Cells(lngDoRows, lngStart).Address, "$", "")
                 strColEnd = Replace(Cells(lngDoRows, lngAnchor).Address, "$", "")
                 strSumForm = "=SUM(" & strColStart & ":" & strColEnd & ")"

'               Application.ActiveSheet.Cells(FirstRow, lngAnchor + 1).Value = strFormText
'               Application.ActiveSheet.Cells(FirstRow, lngAnchor + 2).Value = strSumForm
               Cells(13, lngAnchor) = ""
               
               Cells(FirstRow, lngAnchor + 1).Copy
               On Error Resume Next
               Do
                    If TopRow = lngDoRows Then
                                   Exit Do
                     End If
                   ' check if this row is data row ie it has validation formula in column B
                 
                 On Error Resume Next
                    strColEnd = Replace(Cells(lngDoRows, lngAnchor).Address, "$", "")
                    strSumForm = "=SUM(" & strColStart & ":" & strColEnd & ")"
                    
                    
                    
                    If Cells(lngDoRows, 2).SpecialCells(xlCellTypeSameValidation).Cells.Count < 1 Then
                           lngDoRows = lngDoRows + 1
                    Else


                          ' blank new data cells
                        Cells(lngDoRows, lngAnchor) = ""
                        
                        
                       
                                       ' insert new total formula
                                       
                        Cells(lngDoRows, lngAnchor + 1).Select
                        strFormText = Selection.Formula
                        strAddFormText = "+IF(ISERROR($" & strColHead & "$13*" & strColHead & lngDoRows & "),0,$" & strColHead & "$13*" & strColHead & lngDoRows & ")"
                        strFormText = strFormText & strAddFormText
                        Application.ActiveSheet.Cells(lngDoRows, lngAnchor + 1).Value = strFormText
                        
                        strColStart = Replace(Cells(lngDoRows, lngStart).Address, "$", "")
                        strColEnd = Replace(Cells(lngDoRows, lngAnchor).Address, "$", "")
                        strSumForm = "=SUM(" & strColStart & ":" & strColEnd & ")"
                        Application.ActiveSheet.Cells(lngDoRows, lngAnchor + 2).Value = strSumForm
                        
                        lngDoRows = lngDoRows + 1
                        

                   End If
                   On Error GoTo ErrorHandler
            Loop
          On Error GoTo ErrorHandler
          
          
    
                
Else
       '   and now for all the phases on the columns from 5 onwards
'            FirstRow = Range("TopRow_" & strPhase).Rows.Count
'            TopRow = Range("RowTot_" & strPhase).Rows.Count
            
            TopRow = Range("SchRow_Tot").Rows.Count
            lngStart = Range("StartCol" & strPhase).Columns.Count
            
            If (strPhase = 6) Then
                  lngDoRows = Range("SIXTHFORM").Rows.Count
            Else
                  lngDoRows = 15
            End If
            
            On Error Resume Next
            Do
                If (lngDoRows = lngPVI) Then
                     If (strPhase <> 6) Then
                        strColStart = Replace(Cells(lngDoRows, lngStart).Address, "$", "")
                        strColEnd = Replace(Cells(lngDoRows, lngAnchor).Address, "$", "")
                        strSumForm = "=SUM(" & strColStart & ":" & strColEnd & ")"
                       
                        Cells(lngPVI, lngAnchor + 1) = strSumForm
                     End If
                End If
                 
                    On Error Resume Next
                    If Cells(lngDoRows, 2).SpecialCells(xlCellTypeSameValidation).Cells.Count < 1 Then

                          lngDoRows = lngDoRows + 1
                    Else
                          If Range("LastDataRow").Rows.Count - 1 < lngDoRows Then
                                   Exit Do
                          End If
                          ' blank new data cells, update row totals
                          strColStart = Replace(Cells(lngDoRows, lngStart).Address, "$", "")
                          strColEnd = Replace(Cells(lngDoRows, lngAnchor).Address, "$", "")
                          
                          
                          strSumForm = "=SUM(" & strColStart & ":" & strColEnd & ")"
                          Cells(lngDoRows, lngAnchor) = ""
                          Cells(lngDoRows, lngAnchor + 1) = strSumForm
                          
                          
                          
                          lngDoRows = lngDoRows + 1
                          If TopRow - 1 < lngDoRows Then
                                   Exit Do
                          End If
                   End If
                   On Error GoTo ErrorHandler
            Loop
On Error GoTo ErrorHandler
End If



                  
                MsgBox "Column " & gHeadText & " inserted "
                Range("c1").Select

   ActiveWorkbook.Sheets("SchoolTable").Protect Password:="mariko"
             

    Application.ScreenUpdating = True
    Range("c1").Select
    Exit Sub


ErrorHandler:

    MsgBox "Error " & Err.Number & " occurred in module ColAdd()." & _
           vbCrLf & vbCrLf & _
           Err.Description, vbExclamation, strMsgTitle
     

   
    Application.ScreenUpdating = True

End Sub






Attribute VB_Name = "Module4"
Sub SchoolAdd(strPhase As String)
    '+--------------------------------------+
    '| This adds schools to new S251 Budget Table|
    '+--------------------------------------+
    Dim lngAnchor As Long
    Dim lngPhaseTot As Long
    Dim lngPhaseTot1 As Long
    Dim lngRow As Long
    Dim lngCol As Long
    Dim lngT2Row As Long
    Dim lngTempCol As Long
    Dim lngTempColumns As Long
    Dim strMsgText As String
    Dim lngLastRow As Long
    Dim lngSch As Long
    On Error GoTo ErrorHandler
    gAddSchool = 0
    'Turn Screen Refresh OFF
    Application.ScreenUpdating = False

    gblnWorking = False

    Range("NewSheet_" & strPhase).Select
    lngAnchor = Selection.Row
    lngRow = lngAnchor + 1
    
    ActiveWorkbook.Sheets("SchoolTable").Unprotect Password:="mariko"
 
                                
    Do
        If ActiveSheet.Cells(lngRow, 3) <> "" Then
            lngRow = lngRow + 1
            
            
    
        Else
            lngLastRow = Range("LAST_" & strPhase).Rows.Count

            strMsgText = Switch(strPhase = "Nursery", "Nursery", _
                                strPhase = "Primary", "Primary", _
                                strPhase = "PriMiddle", "Middle Deemed Primary", _
                                strPhase = "Secondary", "Secondary", _
                                strPhase = "SecMiddle", "Middle Deemed Secondary", _
                                strPhase = "Special", "Special")
            
            If (ActiveSheet.Cells(lngLastRow - 1, 3) = "") Then
                MsgBox "There is already an unused blank line for the " & vbCrLf & _
                       strMsgText & " phase.", vbExclamation, _
                       strMsgTitle
            ElseIf (lngRow + 1 = Range("NewSheet_" & strPhase).Rows.Count = 1) Then
                MsgBox "There is already an unused blank line for the " & vbCrLf & _
                       strMsgText & " phase.", vbExclamation, _
                       strMsgTitle
            Else
                '+------------------------------------------------------------+
                '| Insert the necessary cells into table and copy the row     |
                '| above it to get all the conditional formatting             |
                '+------------------------------------------------------------+
                 gAddSchool = 1
                 lngCol = Range("AllCol").Columns.Count


                 Rows(lngRow & ":" & lngRow).Select
                 Selection.Insert Shift:=xlDown
                 Rows(lngRow - 1 & ":" & lngRow - 1).Select
                 Selection.Copy
                 Rows(lngRow & ":" & lngRow).Select
                 Selection.PasteSpecial
                 
                '+----------------------------------------------------+
                '| Now clear out the user data from the copied cells, |
                '| but not the total columns                          |
                '+----------------------------------------------------+
                lngTempCol = 2
                
                Do
                    If Cells(lngRow, lngTempCol).Formula <> "" Then
                        If Left(Cells(lngRow, lngTempCol).Formula, 1) = "=" Then
                            ' Ignore since this cells contains a formula
                        Else
        
                            Cells(lngRow, lngTempCol) = ""
                        End If
                    
                    End If
                    
                            lngTempCol = lngTempCol + 1
                
                    If lngTempCol >= Range("AllCol").Columns.Count Then
      
                             MsgBox "Blank School Line inserted into the " & vbCrLf & _
                             strMsgText & " phase.", vbInformation, _
                             strMsgTitle
                             Range("c1").Select
                             gAddSchool = 0
                             Exit Do
                    End If
                 Loop
            End If
            Exit Do
        End If
       
    Loop

    'Turn Screen Refresh ON
    Range("c1").Select
    Application.ScreenUpdating = True
    
    ActiveWorkbook.Sheets("SchoolTable").Protect Password:="mariko"
 
Exit Sub

ErrorHandler:
    MsgBox "Error " & Err.Number & " occurred in module SchoolAdd()." & _
           vbCrLf & vbCrLf & _
           Err.Description, vbExclamation, strMsgTitle
    Application.ScreenUpdating = True
End Sub




Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    Dim strErrorWarning As String
    Dim strEWnumber As String
    Dim lngRow As Long
    Dim lngCol As Long
    Dim lngFirstDataRow As Long
    Dim lngErrRangeOffset As Long
    Dim lngColorIndexCF As Long
    Dim lngErrCol As Long
    Dim lngerrRow As Long
    Dim strjunko As String
    
    If IsError(ActiveCell) Then Exit Sub

    lngFirstDataRow = 11

    strErrorWarning = ""


    lngColorIndexCF = ColorIndexOfCF(Range(ActiveCell.AddressLocal))

    'Gets the conditional formatting applied to the cell if there is one.
    

    If lngColorIndexCF = 3 Then



'       If lngColorIndexCF = 40 Then
'            MsgBox "Error 1.1 :Value is missing. Do not leave this cell blank."
'       Else
            If (ActiveCell.Row) = 215 And (ActiveCell.Column) = 17 Then
                     MsgBox "Warning 2.3 : Please check your entries for this line.  The net value should be zero."
            ElseIf (ActiveCell.Row) = 65 And (ActiveCell.Column) = 13 Then
                      MsgBox "Error Query 2.2 :Please check your entry for this cell (T1 line 2.0.4).  This is a statutory service. The value should be greater than 0."
 
            ElseIf (ActiveCell.Column) = 19 Then
                            If IsNumeric(ActiveCell) = False Then
                                
                                 MsgBox "Error 1.2 : The value in this cell should be a number. Please check your entry |fffd| it seems to be non-numeric"
                            
                            ElseIf (ActiveCell) < 0 Then
                                 MsgBox "Error 1.3: Value must be greater than or equal 0"
                            Else

                                      MsgBox "Error 4.1.0 : The value in this cell should 100 or less"

                            End If
            Else
                         If (ActiveCell) < 0 Then
                               MsgBox "Error 1.3: Value must be greater than or equal 0"
                         ElseIf IsNumeric(ActiveCell) = False Then
                            MsgBox "Error 1.2 : The value in this cell should be a number. Please check your entry |fffd| it seems to be non-numeric"

                         End If
            End If
 
   End If
End Sub
Private Function ColorIndexOfCF(Rng As Range) As Integer
    Dim AC As Integer
    ColorIndexOfCF = 0
    AC = ActiveCondition(Rng)
     If AC <> 0 Then
        ColorIndexOfCF = Rng.FormatConditions(AC).Interior.ColorIndex
    End If
End Function
Private Function ActiveCondition(Rng As Range) As Integer
    Dim Ndx As Long
    Dim FC As FormatCondition
    If Rng.FormatConditions.Count <> 0 Then
        For Ndx = 1 To Rng.FormatConditions.Count
            Set FC = Rng.FormatConditions(Ndx)
             If Application.Evaluate(FC.Formula1) Then
                ActiveCondition = Ndx
                Exit Function
            End If
        Next Ndx
    End If
    ActiveCondition = 0
End Function
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "OptButtNursery, 2, 1, MSForms, OptionButton"
Attribute VB_Control = "OptButtPrimary, 4, 3, MSForms, OptionButton"
Attribute VB_Control = "OptButtSec, 5, 4, MSForms, OptionButton"
Attribute VB_Control = "OptButtSpe, 6, 5, MSForms, OptionButton"
Attribute VB_Control = "TextBox1, 8, 6, MSForms, TextBox"
Attribute VB_Control = "CmdButtonAddRow, 9, 7, MSForms, CommandButton"
Attribute VB_Control = "CmdButtonAddCol, 11, 9, MSForms, CommandButton"
Attribute VB_Control = "OptBittonT2Hide, 14, 12, MSForms, OptionButton"
Attribute VB_Control = "TextBox2, 15, 13, MSForms, TextBox"
Attribute VB_Control = "OptButtAll, 16, 14, MSForms, OptionButton"

Private Sub imgTBInsertSchool_Click()
    FrmInsert.Show

End Sub



Private Sub CmdButtonAddCol_Click()
     FrmInsertCol.Show

End Sub




Private Sub CmdButtonAddRow_Click()
   FrmInsert.Show
End Sub

Private Sub OptBittonT2Hide_Change()
'Dim cellcomment As Shape
'For Each cellcomment In ActiveSheet.Shapes
'       cellcomment.Placement = xlMoveAndSize
'Next

Application.ScreenUpdating = False

    If OptBittonT2Hide.Value = True Then
        ActiveWorkbook.Sheets("SchoolTable").Unprotect Password:="mariko"
        Application.ScreenUpdating = False
        Range("all").Select
        Selection.EntireColumn.Hidden = True
        Range("Table2").Select
        Selection.EntireColumn.Hidden = False
        Range("Table2_2").Select
        Selection.EntireColumn.Hidden = False
        Range("Table2_5").Select
        Selection.EntireColumn.Hidden = False
        Range("Table2_3").Select
        Selection.EntireColumn.Hidden = False
        Range("all_rows").Select
        Selection.EntireRow.Hidden = False
        Application.ScreenUpdating = True
        Range("NonTable2rows").Select
        Selection.EntireRow.Hidden = True
        Range("c1").Select
        ActiveWorkbook.Sheets("SchoolTable").Protect Password:="mariko"

   End If

    
End Sub
Private Sub OptButtAll_Change()

    If OptButtAll.Value = True Then
        ActiveWorkbook.Sheets("SchoolTable").Unprotect Password:="mariko"
        Application.ScreenUpdating = False
        Range("all").Select
        Selection.EntireColumn.Hidden = True
        Range("all").Select
        Selection.EntireColumn.Hidden = False
        Range("all_rows").Select
        Selection.EntireRow.Hidden = False
        ActiveWorkbook.Sheets("SchoolTable").Protect Password:="mariko"
        Range("c1").Select
    End If
End Sub



Private Sub OptButtNursery_Change()

    If OptButtNursery.Value = True Then
        ActiveWorkbook.Sheets("SchoolTable").Unprotect Password:="mariko"
        Application.ScreenUpdating = False
        Range("all").Select
        Selection.EntireColumn.Hidden = True
        Range("nursery").Select
        Selection.EntireColumn.Hidden = False
        Range("nurse_rows").Select
        Selection.EntireRow.Hidden = False
        Range("non_nurse").Select
        Selection.EntireRow.Hidden = True
        Application.ScreenUpdating = True
        Range("c1").Select
        ActiveWorkbook.Sheets("SchoolTable").Protect Password:="mariko"
   End If

 
    
End Sub


Private Sub OptButtPrimary_Change()
'Dim cellcomment As Shape
'For Each cellcomment In ActiveSheet.Shapes
'       cellcomment.Placement = xlMoveAndSize
'Next
Application.ScreenUpdating = False
    If OptButtPrimary.Value = True Then
        ActiveWorkbook.Sheets("SchoolTable").Unprotect Password:="mariko"
        Application.ScreenUpdating = False
        Range("all").Select
        Selection.EntireColumn.Hidden = True
        Range("primary").Select
        Selection.EntireColumn.Hidden = False
        Range("prim_rows").Select
        Selection.EntireRow.Hidden = False

        Range("non_prim").Select
        Selection.EntireRow.Hidden = True
        Application.ScreenUpdating = True
        Range("c1").Select
        ActiveWorkbook.Sheets("SchoolTable").Protect Password:="mariko"
   End If



End Sub


Private Sub OptButtSec_Change()

    If OptButtSec.Value = True Then
        ActiveWorkbook.Sheets("SchoolTable").Unprotect Password:="mariko"
        With Range("all")
            .EntireColumn.Hidden = True
        End With
        Range("secondary").EntireColumn.Hidden = False
        Range("sec_rows").EntireRow.Hidden = False
        Range("non_sec").EntireRow.Hidden = True
        Range("c1").Select
        ActiveWorkbook.Sheets("SchoolTable").Protect Password:="mariko"
   End If






End Sub


Private Sub OptButtSpe_Change()

Application.ScreenUpdating = False
    If OptButtSpe.Value = True Then
        ActiveWorkbook.Sheets("SchoolTable").Unprotect Password:="mariko"
        With Range("all")
            .EntireColumn.Hidden = True
        End With

        Range("special").EntireColumn.Hidden = False

        Range("spe_rows").EntireRow.Hidden = False
    
        Range("non_spe").EntireRow.Hidden = True
   
        Application.ScreenUpdating = True
        Range("c1").Select
        ActiveWorkbook.Sheets("SchoolTable").Protect Password:="mariko"
   End If


End Sub







Private Sub TextBox1_Change()

End Sub

Private Sub TextBox2_Change()

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    Dim strErrorWarning As String
    Dim strEWnumber As String
    Dim lngRow As Long
    Dim lngCol As Long
    Dim lngFirstDataRow As Long
    Dim lngErrRangeOffset As Long
    Dim lngColorIndexCF As Long
    Dim lngErrCol As Long
    Dim lngerrRow As Long
    Dim strjunko As String
    
    If IsError(ActiveCell) Then Exit Sub
    If gAddSchool <> 0 Then Exit Sub
    lngFirstDataRow = 15

    strErrorWarning = ""


    lngColorIndexCF = ColorIndexOfCF(Range(ActiveCell.AddressLocal))

    'Gets the conditional formatting applied to the cell if there is one.
'    If lngColorIndexCF = 40 Or lngColorIndexCF = 3 Then
     If lngColorIndexCF = 3 Then
        lngerrRow = ActiveCell.Row
        lngCol = Range("AllCol").Columns.Count
        
        
        If (ActiveCell.Row) = 7 Then
            MsgBox "Error 5.0.1 : Column Heading for this data is missing. Do not leave this cell blank. "
        ElseIf (ActiveCell.Row) = 10 Then
            MsgBox "Error 5.0.2 : Column Description for this data is missing. Do not leave this cell blank. "
        ElseIf (ActiveCell.Column) = lngCol Then

        '   open /close cells
              If Cells(lngerrRow, lngCol - 1) <> "" Then
  
                         
                    MsgBox " Error 2.10.1 : Date Opening/Closing' should be a date between 1 April 2011 and 31 March 2012."
 
              Else
                    MsgBox " Error 2.9.1 : Date Opening/Closing should be present when, and only when, School Opening/Closing indicator present."
              End If
             
        ElseIf (ActiveCell.Column) > 4 Then
              If lngColorIndexCF = 40 Then
                    MsgBox "Error 1.1 :Value is missing. Do not leave this cell blank. Instead, please enter a zero if that is the amount your authority budgeted for this category."
              ElseIf lngColorIndexCF = 3 Then
                    If IsNumeric(ActiveCell) = False Then
                            MsgBox "Error 1.2 : The value in this cell should be a number. Please check your entry |fffd| it seems to be non-numeric"
                    ElseIf (ActiveCell.Row) = 11 Then
                            If (ActiveCell) = "" Then
                                 MsgBox "Error 1.1 : Value is missing. Do not leave this cell blank. Instead, please enter a zero if that is the amount your authority budgeted for this category."
                            ElseIf (ActiveCell) < 0 Then
                                 MsgBox "Error 1.3: Value must be greater than or equal 0"
                            Else
                                 MsgBox "Error 4.1 : The value in this cell should 100 or less"
                            End If
                    ElseIf (ActiveCell.Row) = 13 Then
                            If (ActiveCell) <= 0 Then
                                     MsgBox "Error 1.4: You have entered either a negative or zero amount in this cell. Please check your entry as the value in this cell should be greater than zero"
                         
                            End If
                    Else
                            If (ActiveCell) < 0 Then
                                     MsgBox "Error 1.3: Value must be greater than or equal 0 "
                            ElseIf (ActiveCell) <= 0 Then
                                     MsgBox "Error 1.4: You have entered either a negative or zero amount in this cell. Please check your entry as the value in this cell should be greater than zero"
                            Else
                                     MsgBox "Error 5.0.0 : Please enter a Unit Value for this spending type"
                            End If
                    End If
              End If
       
    
        Else
             If (ActiveCell.Column) = 3 Then
                         MsgBox " Error 2.12 : Schoolname is missing. Do not leave this cell blank. "
             ElseIf (ActiveCell.Column) = 4 Then
                         If (ActiveCell) = "" Then
   
                               MsgBox " Error 2.11 : ESTAB Number is missing Do not leave this cell blank.   "
                         ElseIf IsNumeric(ActiveCell) = False Then
                                MsgBox " Error 1.2 : ESTAB Number is not numeric your data cannot be loaded untill this is corrected ."
                         Else
                               If (ActiveCell.Row) < Range("Last_Nursery").Rows.Count Then
                                          MsgBox "Error 2.2 :The DfE reference number should be a number in the nursery school ranges: 1000-1099 or 1800-1899"
                               ElseIf (ActiveCell.Row) < Range("Last_PriMiddle").Rows.Count Then
                                          MsgBox "Error 2.3 :The DfE reference number should be a number in the primary school ranges: 2000-3999, 5200-5299 or 5940-5949"
                               ElseIf (ActiveCell.Row) < Range("Last_SecMiddle").Rows.Count Then
                                          MsgBox "Error 2.4 :The DfE reference number should be a number in the secondary school ranges: 4000-4899, 5400-5499 or 5900-5939"
                               ElseIf (ActiveCell.Row) < Range("Last_Special").Rows.Count Then
                                          MsgBox "Error 2.5 :The DfE reference number should be a number in the special school ranges: 5950-5999 or 7000-7999"
                               End If
                         End If

             End If
       End If
End If

End Sub

Private Function ColorIndexOfCF(Rng As Range) As Integer
    Dim AC As Integer
    ColorIndexOfCF = 0
    AC = ActiveCondition(Rng)
     If AC <> 0 Then
        ColorIndexOfCF = Rng.FormatConditions(AC).Interior.ColorIndex
    End If
End Function

Private Function ActiveCondition(Rng As Range) As Integer
    Dim Ndx As Long
    Dim FC As FormatCondition
    If Rng.FormatConditions.Count <> 0 Then
        For Ndx = 1 To Rng.FormatConditions.Count
            Set FC = Rng.FormatConditions(Ndx)
             If Application.Evaluate(FC.Formula1) Then
                ActiveCondition = Ndx
                Exit Function
            End If
        Next Ndx
    End If
    ActiveCondition = 0
End Function

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
   ActiveWorkbook.Sheets("SchoolTable").UsedRange
   Application.CellDragAndDrop = False
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)

 

Application.CellDragAndDrop = True

 

End Sub

 




 



INQUEST-PP=macro
