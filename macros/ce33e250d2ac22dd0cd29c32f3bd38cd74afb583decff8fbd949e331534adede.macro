Attribute VB_Name = "InsertField"
Attribute VB_Base = "0{563F1250-6499-408D-A48A-3B112506838F}{CE381B71-84E9-4226-80E6-B4B23E3E4749}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Public Sub lbAdresse_Change()
    Call lbAdrClick(lbAdresse, lbContact, True)
    If (GetSelAdresse()) Then
        AdresseSel.Caption = AdresseAbrege(GetSelAdresse())
    Else
        AdresseSel.Caption = ""
    End If
    Call SetAstucesFields(GetSelAdresse(), GetSelContact(), GetDocExterne())
End Sub

Private Sub lbAdresse_Click()
    Call lbAdresse_Change
End Sub

Private Sub lbContact_Change()
    Call lbContClick(lbAdresse, lbContact)
    If (GetSelContact()) Then
        ContactSel.Caption = Contact(GetSelContact(), True, True, True)
    Else
        ContactSel.Caption = ""
    End If
    Call SetAstucesFields(GetSelAdresse(), GetSelContact(), GetDocExterne)
End Sub

Private Sub lbContact_Click()
    Call lbContact_Change
End Sub

Private Sub RechAdr_Click()
    ContactSel.Caption = ""
    SetSelContact (0)
    lbContact.Clear
    SetSelRepertoire (0)
    Call RechAdresseClick(tbAdresse.Value, lbAdresse, 0)
End Sub

Private Sub UserForm_Initialize()
    Dim Abrege As String
    Dim lContact As Long
    Dim lAdresse As Long
    Dim lDocExterne As Long
    
    lbFieldList.AddItem ("Adresse Compl|fffd|te")
    lbFieldList.AddItem ("Titre")
    lbFieldList.AddItem ("Nom")
    'lbFieldList.AddItem ("Pr|fffd|nom")
    lbFieldList.AddItem ("Adresse")
    lbFieldList.AddItem ("Case Postale")
    lbFieldList.AddItem ("No Postal")
    lbFieldList.AddItem ("Ville")
    lbFieldList.AddItem ("Pays")
    lbFieldList.AddItem ("T|fffd|l|fffd|phone 1")
    lbFieldList.AddItem ("T|fffd|l|fffd|phone 2")
    lbFieldList.AddItem ("Fax")
    lbFieldList.AddItem ("Mobile")
    lbFieldList.AddItem ("Solde")
    lbFieldList.AddItem ("Contact Titre")
    lbFieldList.AddItem ("Contact Nom")
    lbFieldList.AddItem ("Contact Pr|fffd|nom")
    lbFieldList.AddItem ("Utilisateur_Initiales")
    lbFieldList.AddItem ("Utilisateur_Nom")
    lbFieldList.AddItem ("Date_Creation")
    
    lbFieldList.ListIndex = 0
    
    lDocExterne = GetDocExterne()
    If (lDocExterne <> 0) Then
        SetSelAdresse (GetDocExterneAdresse(LastPath(), lDocExterne))
        SetSelContact (GetDocExterneContact(LastPath(), lDocExterne))
        SetSelRepertoire (GetDocExterneRepParent(LastPath(), lDocExterne))
    End If
    
    
    CheminComplet = ""
    If (lSelAdresse = 0) Then
        SetSelAdresse (GetDocExtAdresse())
    End If
    If (lSelRepertoire = 0) Then
        SetSelRepertoire (GetDocExtRepertoire())
    End If
    
    lAdresse = GetSelAdresse()
    lContact = GetSelContact()
    If (lAdresse) Then
        tbAdresse = AdresseAbrege(lAdresse)
        Call RechAdresseClick(tbAdresse, lbAdresse, lAdresse)
        'lbAdresse.ListIndex = 0
        'Call lbAdresse_Change
        lbContact.Clear
        If (lContact) Then
            Call LoadContacts(lAdresse, lbContact, lContact)
            'lbContact.ListIndex = 1
            'Call lbContact_Change
        Else
            Call LoadContacts(lAdresse, lbContact, 0)
        End If
    Else
        lbAdresse.Clear
        lbContact.Clear
    End If
    tbAdresse = ""
    If (GetSelAdresse()) Then
        AdresseSel.Caption = AdresseAbrege(GetSelAdresse())
    Else
        AdresseSel.Caption = ""
    End If
    If (GetSelContact()) Then
        ContactSel.Caption = Contact(GetSelContact(), True, True, True)
    Else
        ContactSel.Caption = ""
    End If
End Sub

Private Sub InsertField_Click()

    Dim Sel As String, sResult As String
    Dim i As Integer
    i = lbFieldList.ListIndex
    If (i <> -1) Then
        Sel = lbFieldList.List(i, 0)
        InsererChamp ("Astuces_" & Sel)
    Else
        MsgBox "Veuillez choisir un champ |fffd| ins|fffd|rer"
    End If
End Sub


Attribute VB_Name = "Module1"
Dim Astuces32 As Object
Dim lInt(101) As Long
Dim lContacts(101) As Long
Dim MySociete As String
Dim lSelAdresse As Long
Dim lSelContact As Long
Dim lSelRepertoire As Long
Dim lRepertoires(5001) As Long

Function LastPath() As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    LastPath = Astuces32.LastPath()
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    LastPath = Astuces32.LastPath()
    Err.Clear
fin:
End Function

Public Function GetDocExtAdresse() As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    GetDocExtAdresse = Astuces32.GetDocExtAdresse()
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    GetDocExtAdresse = Astuces32.GetDocExtAdresse()
    Err.Clear
fin:
End Function

Public Function GetDocExtRepertoire() As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    GetDocExtRepertoire = Astuces32.GetDocExtRepertoire()
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    GetDocExtRepertoire = Astuces32.GetDocExtRepertoire()
    Err.Clear
fin:
End Function

Public Function AdresseDeA(Societe As String, De As String, A As String, Max As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    AdresseDeA = Astuces32.AdresseDeA(Societe, De, A, Max)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    AdresseDeA = Astuces32.AdresseDeA(Societe, De, A, Max)
    Err.Clear
fin:
End Function

Public Function AdressePremier() As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    AdressePremier = Astuces32.AdressePremier()
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    AdressePremier = Astuces32.AdressePremier()
    Err.Clear
fin:
End Function

Public Function AdresseSuivant() As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    AdresseSuivant = Astuces32.AdresseSuivant()
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    AdresseSuivant = Astuces32.AdresseSuivant()
    Err.Clear
fin:
End Function
Public Function AdresseAbrege(Interne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    AdresseAbrege = Astuces32.AdresseAbrege(Interne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    AdresseAbrege = Astuces32.AdresseAbrege(Interne)
    Err.Clear
fin:
End Function

Public Function AdresseNumero(Interne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    AdresseNumero = Astuces32.AdresseNumero(Interne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    AdresseNumero = Astuces32.AdresseNumero(Interne)
    Err.Clear
fin:
End Function

Public Function AdresseNom(Interne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    AdresseNom = Astuces32.AdresseNom(Interne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    AdresseNom = Astuces32.AdresseNom(Interne)
    Err.Clear
fin:
End Function

Public Function AdressePrenom(Interne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    AdressePrenom = Astuces32.AdressePrenom(Interne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    AdressePrenom = Astuces32.AdressePrenom(Interne)
    Err.Clear
fin:
End Function

Public Function AdresseTitre(Interne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    AdresseTitre = Astuces32.AdresseTitre(Interne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    AdresseTitre = Astuces32.AdresseTitre(Interne)
    Err.Clear
fin:
End Function

Public Function AdresseAdr(Interne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    AdresseAdr = Astuces32.AdresseAdr(Interne, True)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    AdresseAdr = Astuces32.AdresseAdr(Interne, True)
    Err.Clear
fin:
    AdresseAdr = Replace(AdresseAdr, Chr(13), Chr(11))
    'AdresseAdr = Replace(AdresseAdr, Chr(10), Chr(11))
End Function

Public Function AdresseCP(Interne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    AdresseCP = Astuces32.AdresseCP(Interne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    AdresseCP = Astuces32.AdresseCP(Interne)
    Err.Clear
fin:
End Function
Public Function AdresseNoPostal(Interne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    AdresseNoPostal = Astuces32.AdresseNoPostal(Interne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    AdresseNoPostal = Astuces32.AdresseNoPostal(Interne)
    Err.Clear
fin:
End Function

Public Function AdresseVille(Interne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    AdresseVille = Astuces32.AdresseVille(Interne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    AdresseVille = Astuces32.AdresseVille(Interne)
    Err.Clear
fin:
End Function

Public Function AdressePays(Interne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    AdressePays = Astuces32.AdressePays(Interne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    AdressePays = Astuces32.AdressePays(Interne)
    Err.Clear
fin:
End Function

Public Function AdresseTel1(Interne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    AdresseTel1 = Astuces32.AdresseTel1(Interne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    AdresseTel1 = Astuces32.AdresseTel1(Interne)
    Err.Clear
fin:
End Function

Public Function AdresseTel2(Interne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    AdresseTel2 = Astuces32.AdresseTel2(Interne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    AdresseTel2 = Astuces32.AdresseTel2(Interne)
    Err.Clear
fin:
End Function

Public Function AdresseFax(Interne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    AdresseFax = Astuces32.AdresseFax(Interne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    AdresseFax = Astuces32.AdresseFax(Interne)
    Err.Clear
fin:
End Function

Public Function AdresseNatel(Interne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    AdresseNatel = Astuces32.AdresseNatel(Interne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    AdresseNatel = Astuces32.AdresseNatel(Interne)
    Err.Clear
fin:
End Function

Function ExerciceParDefaut(Societe As String) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    ExerciceParDefaut = Astuces32.ExerciceParDefaut(Societe)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    ExerciceParDefaut = Astuces32.ExerciceParDefaut(Societe)
    Err.Clear
fin:
End Function

Function SoldeTiers(Societe As String, Exercice As String, dPerdu As Date, dPerau As Date, Compte As String) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    ret = Astuces32.SoldeTiers(Societe, Exercice, Compte, dPerdu, dPerau)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    ret = Astuces32.SoldeTiers(Societe, Exercice, Compte, dPerdu, dPerau)
    Err.Clear
fin:
    If (IsNumeric(ret)) Then
        SoldeTiers = CDbl(ret)
    Else
        SoldeTiers = ret
    End If
End Function
Public Function AdresseSoldeDebiteur(Interne As Long) As Variant
    Dim Exercice As String, Compte As String
    Dim dPerdu As Date, dPerau As Date
    On Error GoTo fin
    Exercice = ExerciceParDefaut(LastPath())
    Compte = AdresseNumero(Interne) + "D"
    dPerdu = CDate("01/01/1980")
    dPerau = CDate("31/12/2037")
    AdresseSoldeDebiteur = SoldeTiers(LastPath(), Exercice, dPerdu, dPerau, Compte)
fin:
End Function
Public Sub RechAdresseClick(Adr As String, lbAdr As ListBox, lSelAdr As Long)
    MySociete = LastPath()
    Dim lCount As Long
    Dim lInterne As Long
    Dim AdresseZ As String
    Dim lAdd As Long
    AdresseZ = Adr + "Z"
    lCount = AdresseDeA(MySociete, Adr, AdresseZ, 100)
    lInterne = AdressePremier()
    lbAdr.Clear
    lAdd = 0
    For i = 0 To lCount - 1
        If (lSelAdr = 0) Then
            lInt(lAdd) = lInterne
            Abrege = AdresseAbrege(lInterne)
            lbAdr.AddItem (Abrege)
            lAdd = lAdd + 1
        Else
            If (lSelAdr = lInterne) Then
                lInt(lAdd) = lInterne
                Abrege = AdresseAbrege(lInterne)
                lbAdr.AddItem (Abrege)
                lAdd = lAdd + 1
            End If
        End If
        lInterne = AdresseSuivant()
    Next i
    'ResetMyFields
End Sub

Public Sub lbAdrClick(lbAdr As ListBox, lbCont As ListBox, bSearchContact As Boolean)
    Dim lSel As Long
    Dim lInterne As Long
    lSel = lbAdr.ListIndex
    If (lSel <> -1) Then
        lSelAdresse = lInt(lSel)
        If (bSearchContact) Then
            lSelContact = 0
            Call LoadContacts(lSelAdresse, lbCont, 0)
        End If
    Else
        lSelAdresse = 0
    End If
End Sub

Public Function ContactPremier(Societe As String, Interne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    ContactPremier = Astuces32.ContactPremier(Societe, Interne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    ContactPremier = Astuces32.ContactPremier(Societe, Interne)
    Err.Clear
fin:
End Function

Public Function ContactSuivant() As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    ContactSuivant = Astuces32.ContactSuivant()
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    ContactSuivant = Astuces32.ContactSuivant()
    Err.Clear
fin:
End Function

Public Function Contact(lContact As Long, bTitre As Boolean, bNom As Boolean, bPrenom As Boolean) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    Contact = Astuces32.Contact(lContact, bTitre, bNom, bPrenom)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    Contact = Astuces32.Contact(lContact, bTitre, bNom, bPrenom)
    Err.Clear
fin:
End Function

Public Sub LoadContacts(lAdresse As Long, lbCont As ListBox, lSelCont As Long)
    ' On met les contacts
    Dim sContact As String
    Dim lContact As Long
    Dim lAdd As Long
    lContact = ContactPremier(MySociete, lAdresse)
    i = 1
    lbCont.Clear
    lContacts(0) = 0
    lbCont.AddItem ("")
    While (lContact <> 0)
        If (lSelCont = 0) Then
            sContact = Contact(lContact, True, True, True)
            lContacts(i) = lContact
            lbCont.AddItem (sContact)
            i = i + 1
        Else
            If (lSelCont = lContact) Then
                sContact = Contact(lContact, True, True, True)
                lContacts(i) = lContact
                lbCont.AddItem (sContact)
                i = i + 1
            End If
        End If
        lContact = ContactSuivant()
    Wend
End Sub

Public Sub lbContClick(lbAdr As ListBox, lbCont As ListBox)
    Dim lSel As Long
    Dim lAdresse As Long, lContact As Long
    lSel = lbCont.ListIndex
    If (lSel = -1) Then
        lSelContact = 0
    Else
        lSelContact = lContacts(lSel)
    End If
End Sub

Public Function GetSelAdresse() As Long
    GetSelAdresse = lSelAdresse
End Function
Public Function GetSelContact() As Long
    GetSelContact = lSelContact
End Function
Public Function GetSelRepertoire() As Long
    GetSelRepertoire = lSelRepertoire
End Function

Public Function GetResultForLabel(lAdresse As Long, lContact As Long, lDocExterne As Long, sLabel As String, ByRef sResult As String) As Boolean
    GetResultForLabel = False
    If (sLabel = "Astuces_Adresse Compl|fffd|te") Then
        sResult = ""
        Part = AdresseTitre(lAdresse)
        sResult = sResult + Part
        If Part <> "" Then sResult = sResult + Chr(11)
        Part = AdresseNom(lAdresse)
        sResult = sResult + Part
        If Part <> "" Then sResult = sResult + Chr(11)
        If (lContact <> 0) Then
            Part = Contact(lContact, True, True, True)
            sResult = sResult + Part
            If Part <> "" Then sResult = sResult + Chr(11)
        End If
        Part = AdresseAdr(lAdresse)
        sResult = sResult + Part
        If Part <> "" Then sResult = sResult + Chr(11)
        Part = AdresseCP(lAdresse)
        sResult = sResult + Part
        If Part <> "" Then sResult = sResult + Chr(11)
        Part = AdresseNoPostal(lAdresse)
        Part2 = AdresseVille(lAdresse)
        sResult = sResult + Part + " " + Part2
        If Part <> "" Then sResult = sResult + Chr(11)
        Part = AdressePays(lAdresse)
        sResult = sResult + Part
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_Titre") Then
        sResult = AdresseTitre(lAdresse)
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_Nom") Then
        sResult = AdresseNom(lAdresse)
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_Pr|fffd|nom") Then
        sResult = AdressePrenom(lAdresse)
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_Adresse") Then
        sResult = AdresseAdr(lAdresse)
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_Case Postale") Then
        sResult = AdresseCP(lAdresse)
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_No Postal") Then
        sResult = AdresseNoPostal(lAdresse)
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_Ville") Then
        sResult = AdresseVille(lAdresse)
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_Pays") Then
        sResult = AdressePays(lAdresse)
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_T|fffd|l|fffd|phone 1") Then
        sResult = AdresseTel1(lAdresse)
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_T|fffd|l|fffd|phone 2") Then
        sResult = AdresseTel2(lAdresse)
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_Fax") Then
        sResult = AdresseFax(lAdresse)
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_Mobile") Then
        sResult = AdresseNatel(lAdresse)
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_Solde") Then
        sResult = AdresseSoldeDebiteur(lAdresse)
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_Contact Titre") Then
        sResult = Contact(lContact, True, False, False)
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_Contact Nom") Then
        sResult = Contact(lContact, False, True, False)
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_Contact Pr|fffd|nom") Then
        sResult = Contact(lContact, False, False, True)
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_Utilisateur_Initiales") Then
        sResult = CurrentUser(True, False)
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_Utilisateur_Nom") Then
        sResult = CurrentUser(False, True)
        GetResultForLabel = True
        GoTo Found
    End If
    If (sLabel = "Astuces_Date_Creation") Then
        dDate = GetDocExterneDateCreate(LastPath(), lDocExterne)
        If (dDate = 0) Then
            sResult = Format(Now(), "d MMMM yyyy")
        Else
            sResult = Format(dDate, "d MMMM yyyy")
        End If
        GetResultForLabel = True
        GoTo Found
    End If
Found:
End Function

Public Sub SetAstucesFields(lAdresse As Long, lContact As Long, lDocExterne As Long)
    Dim sLabel As String, Part As String, sResult As String
    Dim bFound As Boolean
    Dim aField As FormField
    bFound = False
    
    With ActiveDocument
      For Each aField In ActiveDocument.FormFields
            If aField.Type = wdFieldFormTextInput Then
                sLabel = aField.StatusText
                If GetResultForLabel(lAdresse, lContact, lDocExterne, sLabel, sResult) Then
                    aField.Result = sResult
                End If
            End If
      Next aField
       
    End With

End Sub

Public Sub GetAdresseRepFromAstuces32()
    lSelAdresse = GetDocExtAdresse()
    lSelRepertoire = GetDocExtRepertoire()
    lSelContact = 0
End Sub

Public Function CurrentUser(bInitiales As Boolean, bNom As Boolean) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    CurrentUser = Astuces32.CurrentUser(bInitiales, bNom)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    CurrentUser = Astuces32.CurrentUser(bInitiales, bNom)
    Err.Clear
fin:
End Function

Public Function GetDirectories(Societe As String, lAdresse As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    GetDirectories = Astuces32.GetDirectories(Societe, lAdresse)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    GetDirectories = Astuces32.GetDirectories(Societe, lAdresse)
    Err.Clear
fin:
End Function

Public Function GetCompletePath(Societe As String, lDocExterne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    GetCompletePath = Astuces32.GetCompletePath(Societe, lDocExterne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    GetCompletePath = Astuces32.GetCompletePath(Societe, lDocExterne)
    Err.Clear
fin:
End Function

Public Sub LoadRepertoires(lAdresse As Long, cbRepertoires As ComboBox, lCurrent As Long)
    Dim sDirs As String, sTxt As String, sFind As String
    Dim iStart As Long, iPos As Long, iNb As Long
    Dim bFound As Boolean
    iNb = 0
    cbRepertoires.Clear
    MySociete = LastPath()
    lDoSel = -1
    If (lAdresse) Then
        sDirs = GetDirectories(MySociete, lAdresse)
        iStart = 1
        Do
            sFind = CStr(Chr(9))
            iPos = InStr(iStart, sDirs, sFind, vbBinaryCompare)
            If (iPos = 0) Or (iPos = Null) Then
                bFound = False
            Else
                bFound = True
                sTxt = Mid(sDirs, iStart, iPos - iStart)
                cbRepertoires.AddItem (sTxt)
                iStart = iPos + 1
                iPos = InStr(iStart, sDirs, sFind, vbBinaryCompare)
                lRepertoires(iNb) = Mid(sDirs, iStart, iPos - iStart)
                If (lRepertoires(iNb) = lCurrent) Then
                    lDoSel = iNb
                End If
                iStart = iPos + 1
                iNb = iNb + 1
                lRepertoires(iNb) = 0
            End If
        Loop While (bFound)
    End If
    If (lDoSel <> -1) Then
        cbRepertoires.ListIndex = lDoSel
    End If
End Sub

Sub RepertoiresChange(cbRepertoires As ComboBox, tbCheminComplet As Label)
    Dim lSel As Long
    Dim Path As String
    
    lSel = cbRepertoires.ListIndex
    If (lSel >= 0) Then
        lSelRepertoire = lRepertoires(lSel)
        Path = GetCompletePath(MySociete, lSelRepertoire)
        tbCheminComplet.Caption = Path
    Else
        tbCheminComplet.Caption = ""
        lSelRepertoire = 0
    End If
End Sub

Public Function GetNewDocExterne(Societe As String, lAdresse As Long, lContact As Long, lRepertoire As Long, cTitre As String, cExtension As String, bAgendable As Boolean) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    GetNewDocExterne = Astuces32.GetNewDocExterne(Societe, lAdresse, lContact, lRepertoire, cTitre, cExtension, bAgendable)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    GetNewDocExterne = Astuces32.GetNewDocExterne(Societe, lAdresse, lContact, lRepertoire, cTitre, cExtension, bAgendable)
    Err.Clear
fin:
End Function

Public Function RemoveDocExterne(Societe As String, lDocExterne As Long, bRemoveFile As Boolean) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    RemoveDocExterne = Astuces32.RemoveDocExterne(Societe, lDocExterne, bRemoveFile)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    RemoveDocExterne = Astuces32.RemoveDocExterne(Societe, lDocExterne, bRemoveFile)
    Err.Clear
fin:
End Function

Public Function UpdateDocExterne(Societe As String, lAdresse As Long, lContact As Long, lRepertoire As Long, cTitre As String, cExtension As String, bAgendable As Boolean, lDocExterne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    UpdateDocExterne = Astuces32.UpdateDocExterne(Societe, lAdresse, lContact, lRepertoire, cTitre, cExtension, bAgendable, lDocExterne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    UpdateDocExterne = Astuces32.UpdateDocExterne(Societe, lAdresse, lContact, lRepertoire, cTitre, cExtension, bAgendable, lDocExterne)
    Err.Clear
fin:
End Function


Public Function GetDocExternePath(Societe As String, lNumber As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    GetDocExternePath = Astuces32.GetDocExternePath(Societe, lNumber)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    GetDocExternePath = Astuces32.GetDocExternePath(Societe, lNumber)
    Err.Clear
fin:
End Function

Public Function GetDocExterneTitre(Societe As String, lDocExterne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    GetDocExterneTitre = Astuces32.GetDocExterneTitre(Societe, lDocExterne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    GetDocExterneTitre = Astuces32.GetDocExterneTitre(Societe, lDocExterne)
    Err.Clear
fin:
End Function

Public Function GetDocExterneAdresse(Societe As String, lDocExterne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    GetDocExterneAdresse = Astuces32.GetDocExterneAdresse(Societe, lDocExterne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    GetDocExterneAdresse = Astuces32.GetDocExterneAdresse(Societe, lDocExterne)
    Err.Clear
fin:
End Function
Public Function GetDocExterneContact(Societe As String, lDocExterne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    GetDocExterneContact = Astuces32.GetDocExterneContact(Societe, lDocExterne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    GetDocExterneContact = Astuces32.GetDocExterneContact(Societe, lDocExterne)
    Err.Clear
fin:
End Function

Public Function GetDocExterneRepParent(Societe As String, lDocExterne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    GetDocExterneRepParent = Astuces32.GetDocExterneRepParent(Societe, lDocExterne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    GetDocExterneRepParent = Astuces32.GetDocExterneRepParent(Societe, lDocExterne)
    Err.Clear
fin:
End Function

Public Function GetDocExterneDateCreate(Societe As String, lDocExterne As Long) As Date
    Dim ret As String
    
    On Error GoTo DoCreate
    GetDocExterneDateCreate = Astuces32.GetDocExterneDateCreate(Societe, lDocExterne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    GetDocExterneDateCreate = Astuces32.GetDocExterneDateCreate(Societe, lDocExterne)
    Err.Clear
fin:
End Function


Public Function UpdateDocExterneTime(Societe As String, lDocExterne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    UpdateDocExterneTime = Astuces32.UpdateDocExterneTime(Societe, lDocExterne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    UpdateDocExterneTime = Astuces32.UpdateDocExterneTime(Societe, lDocExterne)
    Err.Clear
fin:
End Function

Public Function RemoveFile(File As String) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    RemoveFile = Astuces32.RemoveFile(File)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    RemoveFile = Astuces32.RemoveFile(File)
    Err.Clear
fin:
End Function

Public Function bHasAgenda(Societe As String) As Boolean
    Dim ret As String
    
    On Error GoTo DoCreate
    bHasAgenda = Astuces32.bHasAgenda(Societe)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    bHasAgenda = Astuces32.bHasAgenda(Societe)
    Err.Clear
fin:
End Function

Public Function GetDocExterneHasAgenda(Societe As String, lDocExterne As Long) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    GetDocExterneHasAgenda = Astuces32.GetDocExterneHasAgenda(Societe, lDocExterne)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    GetDocExterneHasAgenda = Astuces32.GetDocExterneHasAgenda(Societe, lDocExterne)
    Err.Clear
fin:
End Function

Public Function SetDocExterneAAgender(Societe As String, lDocExterne As Long, bEncoreAAgender As Boolean) As Variant
    Dim ret As String
    
    On Error GoTo DoCreate
    SetDocExterneAAgender = Astuces32.SetDocExterneAAgender(Societe, lDocExterne, bEncoreAAgender)
    GoTo fin:
DoCreate:
    Set Astuces32 = CreateObject("Astuces32.Document")
    SetDocExterneAAgender = Astuces32.SetDocExterneAAgender(Societe, lDocExterne, bEncoreAAgender)
    Err.Clear
fin:
End Function



'***********************************************************************************************

Public Function SetSelAdresse(lAdresse As Long)
    lSelAdresse = lAdresse
End Function
Public Function SetSelContact(lContact As Long)
    lSelContact = lContact
End Function
Public Function SetSelRepertoire(lRepertoire As Long)
    lSelRepertoire = lRepertoire
End Function

Public Function GetDocExterne() As Long
    Dim TheNumber As String, sNewPath As String, sName As String
    Dim lDocExterne As Long
    Dim iPos As Long
    GetDocExterne = 0
    If (ActiveDocument.Path <> "") Then
        sName = ActiveDocument.Name
        iPos = InStr(1, sName, ".", vbBinaryCompare)
        TheNumber = Left(sName, iPos - 1)
        If (IsNumeric(TheNumber)) Then
            lDocExterne = CLng(TheNumber)
            ' On va rechercher le chemin
            sNewPath = GetDocExternePath(LastPath(), lDocExterne)
            If (sNewPath = ActiveDocument.FullName) Then
                ' c'est le m|fffd|me chemin
                GetDocExterne = lDocExterne
            End If
        End If
    End If
End Function







Attribute VB_Name = "NewMacros"
Dim bSaveAs As Boolean

Sub FileSave()
Attribute FileSave.VB_Description = "Enregistre le document ou le mod|fffd|le actif"
Attribute FileSave.VB_ProcData.VB_Invoke_Func = "Project.NewMacros.FichierEnregistrer"
    Dim FileName As String
    Dim lDocExterne As Long, lTimeStamp As Long
    If (ActiveDocument.Path = "") Then ' nouveau document
        SaveAstuces.Show
    Else
        ActiveDocument.Save
        lDocExterne = GetDocExterne()
        If (lDocExterne) Then
            lTimeStamp = UpdateDocExterneTime(LastPath(), lDocExterne)
        End If
    End If
End Sub

Sub FileSaveAs()
Attribute FileSaveAs.VB_Description = "Enregistre le document actif sous un nouveau nom"
Attribute FileSaveAs.VB_ProcData.VB_Invoke_Func = "Project.NewMacros.FichierEnregistrerSous"
'
' FichierEnregistrerSous Macro
' Enregistre le document actif sous un nouveau nom
'
    bSaveAs = True
    SaveAstuces.Show
End Sub

Function GetSaveAs()
    GetSaveAs = bSaveAs
End Function

Sub RechercherUneAdresse()
    InsertField.Show (0)
End Sub

Sub EnregistrerAstuces()
    Load SaveAstuces
    SaveAstuces.Show
End Sub

Sub DoSetAstucesFields()
    Dim lAdresse As Long, lContact As Long, lDocExterne As Long, lRepertoire As Long
    
    lDocExterne = GetDocExterne()
    If (lDocExterne <> 0) Then
        If (lAdresse = 0) Then
            lAdresse = GetDocExterneAdresse(LastPath(), lDocExterne)
            SetSelAdresse (lAdresse)
        End If
        If (lContact = 0) Then
            lContact = GetDocExterneContact(LastPath(), lDocExterne)
            SetSelContact (lContact)
        End If
        If (lRepertoire = 0) Then
            lRepertoire = GetDocExterneRepParent(LastPath(), lDocExterne)
            SetSelRepertoire (lRepertoire)
        End If
    Else
        If (GetSelAdresse() = 0) Then
            SetSelAdresse (GetDocExtAdresse())
            SetSelContact (0)
        End If
        If (GetSelRepertoire() = 0) Then
            SetSelRepertoire (GetDocExtRepertoire())
        End If
    End If
    Call SetAstucesFields(GetSelAdresse(), GetSelContact(), GetDocExterne())
End Sub

Sub InsererChamp(NomChamp As String)
    Dim f As FormField
    Set f = ActiveDocument.FormFields.Add(Selection.Range, wdFieldFormTextInput)
    f.StatusText = NomChamp
    f.Result = NomChamp
    Call SetAstucesFields(GetSelAdresse(), GetSelContact(), GetDocExterne())
End Sub

Sub InsereAdresseComplete()
    InsererChamp ("Astuces_Adresse Compl|fffd|te")
End Sub
Sub InsereTitre()
    InsererChamp ("Astuces_Titre")
End Sub
Sub InsereNom()
    InsererChamp ("Astuces_Nom")
End Sub
Sub InserePrenom()
    InsererChamp ("Astuces_Pr|fffd|nom")
End Sub
Sub InsereAdresse()
    InsererChamp ("Astuces_Adresse")
End Sub
Sub InsereCasePostale()
    InsererChamp ("Astuces_Case Postale")
End Sub
Sub InsereNoPostal()
    InsererChamp ("Astuces_No Postal")
End Sub
Sub InsereVille()
    InsererChamp ("Astuces_Ville")
End Sub
Sub InserePays()
    InsererChamp ("Astuces_Pays")
End Sub
Sub InsereTelephone1()
    InsererChamp ("Astuces_T|fffd|l|fffd|phone 1")
End Sub
Sub InsereTelephone2()
    InsererChamp ("Astuces_T|fffd|l|fffd|phone 2")
End Sub
Sub InsereFax()
    InsererChamp ("Astuces_Fax")
End Sub
Sub InsereMobile()
    InsererChamp ("Astuces_Mobile")
End Sub
Sub InsereSolde()
    InsererChamp ("Astuces_Solde")
End Sub
Sub InsereContactTitre()
    InsererChamp ("Astuces_Contact Titre")
End Sub
Sub InsereContactPrenom()
    InsererChamp ("Astuces_Contact Pr|fffd|nom")
End Sub
Sub InsereContactNom()
    InsererChamp ("Astuces_Contact Nom")
End Sub
Sub InsereUtilisateurInitiales()
    InsererChamp ("Astuces_Utilisateur_Initiales")
End Sub
Sub InsereUtilisateurNom()
    InsererChamp ("Astuces_Utilisateur_Nom")
End Sub
Sub InsereDateCreation()
    InsererChamp ("Astuces_Date_Creation")
End Sub
    

Attribute VB_Name = "SaveAstuces"
Attribute VB_Base = "0{092C8E2C-CF46-434D-BA38-FC93826F4534}{5BFEF862-47A2-44EC-9F6D-6A89FC962845}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cbRepertoires_Change()
    Call RepertoiresChange(cbRepertoires, CheminComplet)
End Sub

Private Sub SaveWithAstuces_Click()
    Dim lDocExterne As Long
    Dim sOldPath As String
    ActiveDocument.BuiltInDocumentProperties(wdPropertyTitle) = tbTitre.Value
    ActiveDocument.BuiltInDocumentProperties(wdPropertyAuthor) = CurrentUser(False, True)
    s = "Chemin Astuces :" & CheminComplet.Caption
    ActiveDocument.BuiltInDocumentProperties(wdPropertyComments) = s
    
    
    lDocExterne = GetDocExterne()
    If (lDocExterne = 0) Then
        ' c'est un nouveau document
        s = GetNewDocExterne(LastPath, GetSelAdresse(), GetSelContact(), GetSelRepertoire(), tbTitre.Value, "DOC", [EncoreAAgender] = True)
        If (Left(s, 1) = "0") Then
            ' Erreur
            sFind = CStr(Chr(9))
            iPos = InStr(3, s, sFind, vbBinaryCompare)
            sError = Mid(s, 3, iPos - 3)
            MsgBox sError
            GoTo fin:
        Else
            If (bHasAgenda(LastPath())) Then
                If (EncoreAAgender.Value) Then
                    sError = SetDocExterneAAgender(LastPath(), lDocExterne, True)
                Else
                    sError = SetDocExterneAAgender(LastPath(), lDocExterne, False)
                End If
            End If
            sFind = CStr(Chr(9))
            iPos = InStr(3, s, sFind, vbBinaryCompare)
            sPath = Mid(s, 3, iPos - 3)
            iPos = iPos + 1
            iPos2 = InStr(iPos, s, sFind, vbBinaryCompare)
            sNumber = Mid(s, iPos, iPos2 - iPos)
            ' On sauvegarde
            ActiveDocument.SaveAs FileName:=sPath, FileFormat:=wdFormatDocument
            SaveAstuces.Hide
        End If
    Else
        ' On fait un update
        sOldPath = GetDocExternePath(LastPath(), lDocExterne)
        s = UpdateDocExterne(LastPath, GetSelAdresse(), GetSelContact(), GetSelRepertoire(), tbTitre.Value, "DOC", [EncoreAAgender] = True, lDocExterne)
        If (Left(s, 1) = "0") Then
            ' Erreur
            sFind = CStr(Chr(9))
            iPos = InStr(3, s, sFind, vbBinaryCompare)
            sError = Mid(s, 3, iPos - 3)
            MsgBox sError
        Else
            If (bHasAgenda(LastPath())) Then
                If (EncoreAAgender.Value) Then
                    sError = SetDocExterneAAgender(LastPath(), lDocExterne, True)
                Else
                    sError = SetDocExterneAAgender(LastPath(), lDocExterne, False)
                End If
            End If
            sFind = CStr(Chr(9))
            iPos = InStr(3, s, sFind, vbBinaryCompare)
            sNewPath = Mid(s, 3, iPos - 3)
            iPos = iPos + 1
            iPos2 = InStr(iPos, s, sFind, vbBinaryCompare)
            sNumber = Mid(s, iPos, iPos2 - iPos)
            ' On sauvegarde
            ActiveDocument.SaveAs FileName:=sNewPath, FileFormat:=wdFormatDocument
            RemoveFile (sOldPath)
            SaveAstuces.Hide
        End If
    End If
    
    
    GoTo fin:
FinError:
        MsgBox Err.Description
fin:
End Sub

Private Sub SaveNormal_Click()
    On Error GoTo fin
    If (Not GetSaveAs()) Then
        ActiveDocument.Save
    Else
        Dialogs(wdDialogFileSaveAs).Show
    End If
    SaveAstuces.Hide
    GoTo FinSub
fin:
    If (ErrNumber = Vide) Then
        SaveAstuces.Hide
    ElseIf (ErrNumber <> 4198) Then
        MsgBox Err.Description
    End If
FinSub:
End Sub

Private Sub lbAdresse_Change()
    Call lbAdrClick(lbAdresse, lbContact, True)
    If (GetSelAdresse()) Then
        AdresseSel.Caption = AdresseAbrege(GetSelAdresse())
        ' On va chercher les repertoires
    Else
        AdresseSel.Caption = ""
    End If
    SetSelContact (0)
    ContactSel.Caption = ""
    Call SetAstucesFields(GetSelAdresse(), GetSelContact(), GetDocExterne)
    SetSelRepertoire (0)
    cbRepertoires.Clear
    Call LoadRepertoires(GetSelAdresse(), cbRepertoires, GetSelRepertoire())
End Sub

Private Sub RechAdr_Click()
    ContactSel.Caption = ""
    SetSelContact (0)
    lbContact.Clear
    SetSelRepertoire (0)
    cbRepertoires.Clear
    Call RechAdresseClick(tbAdresse.Value, lbAdresse, 0)
End Sub

Private Sub lbAdresse_Click()
    Call lbAdresse_Change
End Sub

Private Sub lbContact_Change()
    Call lbContClick(lbAdresse, lbContact)
    If (GetSelContact()) Then
        ContactSel.Caption = Contact(GetSelContact(), True, True, True)
    Else
        ContactSel.Caption = ""
    End If
    Call SetAstucesFields(GetSelAdresse(), GetSelContact(), GetDocExterne())
End Sub

Private Sub lbContact_Click()
    Call lbContact_Change
End Sub

Private Sub UserForm_Initialize()
    Dim Abrege As String
    Dim lContact As Long
    Dim lAdresse As Long
    Dim lDocExterne As Long
    
    If (bHasAgenda(LastPath())) Then
        EncoreAAgender.Visible = True
    Else
        EncoreAAgender.Visible = False
    End If
    
    tbTitre.Value = ActiveDocument.BuiltInDocumentProperties(wdPropertyTitle)
    
    lDocExterne = GetDocExterne()
    If (lDocExterne <> 0) Then
        SetSelAdresse (GetDocExterneAdresse(LastPath(), lDocExterne))
        SetSelContact (GetDocExterneContact(LastPath(), lDocExterne))
        SetSelRepertoire (GetDocExterneRepParent(LastPath(), lDocExterne))
        tbTitre.Value = GetDocExterneTitre(LastPath(), lDocExterne)
        If (bHasAgenda(LastPath())) Then
            EncoreAAgender.Value = GetDocExterneHasAgenda(LastPath(), lDocExterne)
        End If
    Else
        SetSelAdresse (GetDocExtAdresse())
        SetSelContact (0)
        SetSelRepertoire (GetDocExtRepertoire())
        tbTitre.Value = ""
        EncoreAAgender.Value = False
    End If
    
    
    CheminComplet = ""
    
    lAdresse = GetSelAdresse()
    lContact = GetSelContact()
    If (lAdresse) Then
        tbAdresse = AdresseAbrege(lAdresse)
        Call RechAdresseClick(tbAdresse, lbAdresse, lAdresse)
        lbContact.Clear
        If (lContact) Then
            Call LoadContacts(lAdresse, lbContact, lContact)
        Else
            Call LoadContacts(lAdresse, lbContact, 0)
        End If
    Else
        lbAdresse.Clear
        lbContact.Clear
    End If
    tbAdresse = ""
    cbRepertoires.Clear
    If (GetSelAdresse()) Then
        AdresseSel.Caption = AdresseAbrege(GetSelAdresse())
        If (GetSelRepertoire()) Then
            Call LoadRepertoires(GetSelAdresse(), cbRepertoires, GetSelRepertoire())
        End If
    Else
        AdresseSel.Caption = ""
    End If
    If (GetSelContact()) Then
        ContactSel.Caption = Contact(GetSelContact(), True, True, True)
    Else
        ContactSel.Caption = ""
    End If
End Sub

Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "0{00020906-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'Private Sub Document_Close()
'    Call FileClose
'End Sub

'Private Sub Document_New()
'
'End Sub


INQUEST-PP=macro
