Attribute VB_Name = "MainMenu"
Attribute VB_Base = "0{12D7829C-EE8B-4510-A096-479FD92CF877}{C65140C6-ED2F-4B77-994F-EAE0BBE26633}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim stAgency As String, stDivision As String, stAnalyst As String, stOvAnalyst As String, stPhone As String
Dim stApproval As String, stFNote As String, stBill As String, stEmail As String, stDate As String
Dim stAgencyImp As String, stLocalImp As String, stType As String


Private Sub btnCopy_Click()

    CopyContactInfo ByVal stAgency, ByVal stDivision, ByVal stAnalyst, ByVal stOvAnalyst, ByVal stPhone, _
    ByVal stApproval, ByVal stFNote, ByVal stBill, ByVal stEmail, ByVal stDate, ByVal stAgencyImp, _
    ByVal stLocalImp, ByVal stType
  
   
End Sub

Private Sub btnCreateFed_Click()
Dim FedFundName As String
Dim FedFY1Net As String
Dim FedFY2Net As String
Dim FedFY3Net As String
 



'Prompt for FundName and Copy a new Fund Sheet into Workbook
FedFundName = Application.InputBox(prompt:="Enter a Fund Name of less than 20 characters. (Ex. Medicaid Match) DO NOT USE SPECIAL CHARACTERS LIKE '")
On Error GoTo Err_btnCreateFed_Click
If FedFundName <> "False" Then

  
    Worksheets("FedFund").Copy before:=Worksheets("Federal")

    'Activate the currently hidden Fund (2) worksheet
    'Worksheets("FedFund (2)").Visible = True
    With Worksheets("FedFund (2)")
        .Visible = True
    
    'Update Fund: references in the new worksheet
        .Range("AB3") = FedFundName
        .Range("AB37") = FedFundName
        .Range("AB79") = FedFundName
     
    'Copy in appropriate Fiscal Note and Bill Number References
        .Range("AB1") = stFNote
        .Range("AB2") = stBill
        .Range("AB35") = stFNote
        .Range("AB36") = stBill
        .Range("AB77") = stFNote
        .Range("AB78") = stBill

    'Name the new worksheet with the prompted FundName
        .Name = FedFundName
    'Worksheets("FedFund (2)").Name = FedFundName
    End With

    'Create variables containing the correct syntax [='WorkSheet'!"A1"]
    'for referring to the Net Total cells in the new worksheet
    FedFY1Net = "=" + "'" + FedFundName + "'" + "!" + "U104"
    FedFY2Net = "=" + "'" + FedFundName + "'" + "!" + "Y104"
    FedFY3Net = "=" + "'" + FedFundName + "'" + "!" + "AC104"
    
    'Insert a new fund row in the Summary of Fiscal Impact worksheet
    'Copy the Federal Fund row's formatting to the new row
    With Worksheets("Summary of Fiscal Impact")
        .Unprotect
        .Range("A22:D22").Insert
        .Range("A21:D21").Copy _
        Destination:=Worksheets("Summary of Fiscal Impact").Range("A22:D22")
    
    'Connect Net Total cells in the new worksheet with the
    'Summary of Fiscal Impact worksheet
        .Range("A22").Value = FedFundName
        .Range("B22") = FedFY1Net
        .Range("C22") = FedFY2Net
        .Range("D22") = FedFY3Net
        .Protect
    End With

    End If
    Exit Sub
Err_btnCreateFed_Click:

    MsgBox "Your fund name was invalid. Names must be less than 20 characters and include no special characters such as parantheses or quotation marks. Please delete the invalid sheet or close the application without saving and try again."
End Sub


Private Sub btnCreateState_Click()
Dim FundName As String
Dim FY1Net As String
Dim FY2Net As String
Dim FY3Net As String
Dim bkfName As String
Dim fName As String


'Prompt for FundName and Copy a new Fund Sheet into Workbook
FundName = Application.InputBox(prompt:="Enter a Fund Name of less than 20 characters. (Ex. PR Fees or Highway) DO NOT USE SPECIAL CHARACTERS LIKE '")
On Error GoTo Err_btnCreateState_Click
If FundName <> "False" Then

  
    Worksheets("Fund").Copy before:=Worksheets("Federal")

    'Activate the currently hidden Fund (2) worksheet
    With Worksheets("Fund (2)")
    
        .Visible = True
    'Update Fund: references in the new worksheet
    
            .Range("AB3") = FundName
            .Range("AB37") = FundName
            .Range("AB79") = FundName
    'Copy in appropriate Fiscal Note and Bill Number References
            .Range("AB1") = stFNote
            .Range("AB2") = stBill
            .Range("AB35") = stFNote
            .Range("AB36") = stBill
            .Range("AB77") = stFNote
            .Range("AB78") = stBill

    'Name the new worksheet with the prompted FundName
    'Worksheets("Fund (2)").Name = FundName
            .Name = FundName
    End With
        
    'Create variables containing the correct syntax [='WorkSheet'!"A1"]
    'for referring to the Net Total cells in the new worksheet
    FY1Net = "=" + "'" + FundName + "'" + "!" + "U104"
    FY2Net = "=" + "'" + FundName + "'" + "!" + "Y104"
    FY3Net = "=" + "'" + FundName + "'" + "!" + "AC104"
    
        
    'Insert a new fund row in the Summary of Fiscal Impact worksheet
    'Copy the General Revenue row's formatting to the new row
    With Worksheets("Summary of Fiscal Impact")
        .Unprotect
        .Range("A18:D18").Insert
        .Range("A17:D17").Copy _
        Destination:=Worksheets("Summary of Fiscal Impact").Range("A18:D18")
        
   

    'Connect Net Total cells in the new worksheet with the
    'Summary of Fiscal Impact worksheet
        .Range("A18").Value = FundName
        .Range("A18").Font.FontStyle = "Regular"
        .Range("B18") = FY1Net
        .Range("C18") = FY2Net
        .Range("D18") = FY3Net
        .Protect
    End With
   End If
   Exit Sub
   

Err_btnCreateState_Click:
    
MsgBox "Your fund name was invalid. Names must be less than 20 characters and include no special characters such as parantheses or quotation marks. Please delete the invalid sheet or close the application without saving and try again."
  
End Sub

Private Sub btnExit_Click()
    Dim strmsg As String
strmsg = "You are about to close your project without saving. Click Yes to continue or NO to Cancel ....! Save options are located on the Main Menu."
    If MsgBox(strmsg, vbQuestion + vbYesNo, "Close without saving...?") = vbYes Then
       On Error GoTo Err_btnExit_Click
       Unload MainMenu
       CloseApp
       Exit Sub
    'Else
       'DoCmd.RunCommand acCmdUndo
       
Err_btnExit_Click:
       MsgBox Err.Description
    End If
End Sub

Private Sub btnInstruct_Click()
    MainMenu.Hide
    Worksheets("Instructions").Activate
        Range("A1").Activate
End Sub

Private Sub btnXlOk_Click()
Dim fName As String
Dim bkfName As String

    MainMenu.Hide
    
    Dim i As Long

For i = 1 To 6 'or check each control in the UserForm
    If Controls("op" & i).Value = True Then Exit For
Next
    Select Case i
        Case 1
        Worksheets("General Revenue").Activate
        Range("AB1").Activate
                
        Case 2
        Worksheets("Federal").Activate
        Range("AB1").Activate

        Case 3
        Worksheets("Local").Activate
        Range("G1").Activate
        
        Case 4
        Worksheets("Summary of Fiscal Impact").Activate
        Range("D1").Activate
        
        Case 5
         On Error GoTo ErrRecovery
         'Prompt for workbook name'
        fName = Application.InputBox(prompt:="Enter your filename. (Example: 3862-09)")
        If fName <> "False" Then
        Select Case ActiveWorkbook.Name
        
        
            Case "FNWorksheet.xls"
                ActiveWorkbook.SaveCopyAs "C:\FNWork\" + fName + ".xls"
            
            Case fName + ".xls"
                ActiveWorkbook.Save
                
            Case Else
                ActiveWorkbook.SaveCopyAs "C:\FNWork\" + fName + ".xls"
            
                            
             End Select
            'Now let's tell you what was completed!
            MsgBox "Your incomplete workbook with all sheets included has been saved as C:\FNWork\" + fName + ".xls. Open this file to complete work prior to sendout.Please don 't forget to complete and include your Overview-Questions document!"

        End If
        Application.DisplayAlerts = False
        Unload MainMenu
                
        CloseApp
        Exit Sub
ErrRecovery:
         MsgBox Err.Description
         Case 6
         On Error GoTo ErrSave
        'Prompt for workbook name'
        fName = Application.InputBox(prompt:="Enter your filename. (Example: 3862-09)")
        If fName <> "False" Then
        
            bkfName = "bk" + fName
            
            Select Case ActiveWorkbook.Name
            Case bkfName + ".xls"
                ActiveWorkbook.Save
            Case Else
                ActiveWorkbook.SaveCopyAs "C:\fnwork\" + bkfName + ".xls"
            End Select

'Now let's delete unused worksheets. The deletion code will be wrapped in code
'that turns the deletion confirmation alerts off.
'We will delete routine worksheets first--instructions and hidden sheets
            Application.DisplayAlerts = False
            Worksheets("Instructions").Delete
            Worksheets("Local Instructions").Delete
            Worksheets("Local Sheet").Delete
            Worksheets("Fund").Delete
            Worksheets("FedFund").Delete
            Application.DisplayAlerts = True
'Now let's save your completed sheet.
            Select Case ActiveWorkbook.Name
        
        
            Case "FNWorksheet.xls" ' 1st time in the workbook
                ActiveWorkbook.SaveCopyAs "C:\FNWork\" + fName + ".xls"
            
            Case fName + ".xls" ' save active workbook with same filename
                ActiveWorkbook.Save
                
            Case Else   ' save active workbook with New filename
                ActiveWorkbook.SaveCopyAs "C:\FNWork\" + fName + ".xls"
                                       
            End Select
            
            
'Now let's tell you what was completed!
            MsgBox "Your backup worksheet with all sheets included has been saved as C:\FNWork\bk" + fName + ".xls. Use this worksheet if you need to make changes to this worksheet in the future. Your ready-to-send worksheet has been saved as C:\FNWork\" + fName + ".xls. Please don't forget to complete and include your Overview-Questions document!"
        End If
        Application.DisplayAlerts = False
        Unload MainMenu
        CloseApp
        Exit Sub
ErrSave:
        MsgBox Err.Description
        Case Else
        MsgBox "No option was selected."
    End Select
End Sub

Private Sub cmdOk_Click()
Dim MyFile As String

    MainMenu.Hide
    
    Dim i As Long

For i = 1 To 7  'or check each control in the UserForm
    If Controls("opt" & i).Value = True Then Exit For
Next
    Select Case i
        Case 1
        MyFile = "C:\FNWork\OverviewQuestions.doc"
             
        ControlWordFromXL ByVal MyFile, ByVal stAgency, _
        ByVal stDivision, ByVal stAnalyst, ByVal stOvAnalyst, ByVal stPhone, _
        ByVal stApproval, ByVal stFNote, ByVal stBill, ByVal stEmail, _
        ByVal stDate
        
        
        Case 2
        MyFile = "C:\FNWork\CommentMemo.doc"
             
        ControlWordFromXL ByVal MyFile, ByVal stAgency, _
        ByVal stDivision, ByVal stAnalyst, ByVal stOvAnalyst, ByVal stPhone, _
        ByVal stApproval, ByVal stFNote, ByVal stBill, ByVal stEmail, _
        ByVal stDate
        

        Case 3
        MyFile = "C:\FNWork\TechnicalMemo.doc"
             
        ControlWordFromXL ByVal MyFile, ByVal stAgency, _
        ByVal stDivision, ByVal stAnalyst, ByVal stOvAnalyst, ByVal stPhone, _
        ByVal stApproval, ByVal stFNote, ByVal stBill, ByVal stEmail, _
        ByVal stDate
        
        
        Case 4
        MyFile = "C:\FNWork\StatementofNoChange.doc"
             
        ControlWordFromXL ByVal MyFile, ByVal stAgency, _
        ByVal stDivision, ByVal stAnalyst, ByVal stOvAnalyst, ByVal stPhone, _
        ByVal stApproval, ByVal stFNote, ByVal stBill, ByVal stEmail, _
        ByVal stDate
        
        
        Case 5
        MyFile = "C:\FNWork\TroubleshootingMemo.doc"
             
        ControlWordFromXL ByVal MyFile, ByVal stAgency, _
        ByVal stDivision, ByVal stAnalyst, ByVal stOvAnalyst, ByVal stPhone, _
        ByVal stApproval, ByVal stFNote, ByVal stBill, ByVal stEmail, _
        ByVal stDate
        
        
        Case 6
        MyFile = "C:\FNWork\Fiscal Note Worksheet Manual.doc"
        
        ViewWordFromXL ByVal MyFile
        
        Case 7
        
        MyFile = "C:\FNWork\WorksheetTips.doc"
             
        ViewWordFromXL ByVal MyFile
        
        Case Else
        
    End Select
    
End Sub


Private Sub CommandButton2_Click()

End Sub

Private Sub Frame2_Click()

End Sub

Private Sub Frame7_Click()

End Sub

Private Sub Label1_Click()

End Sub

Private Sub Label23_Click()

End Sub

Private Sub Label42_Click()

End Sub

Private Sub opOriginal_Change()
If opOriginal = True Then stType = "Original"

End Sub
Private Sub opRevised_Change()
If opRevised = True Then stType = "Revised"

End Sub

Private Sub txtAgency_Change()
    stAgency = txtAgency.Text
End Sub

Private Sub txtBill_Change()
    stBill = txtBill.Text
    
End Sub

Private Sub txtDate_Change()
    stDate = txtDate.Text
End Sub

Private Sub txtDivision_Change()
    stDivision = txtDivision.Text
    
End Sub

Private Sub txtAnalyst_Change()
    stAnalyst = txtAnalyst.Text
    
End Sub

Private Sub txtFNote_Change()
    stFNote = txtFNote.Text
    
End Sub

Private Sub txtovanalyst_Change()
    stOvAnalyst = txtOvAnalyst.Text
    
End Sub

Private Sub txtPhone_Change()
    stPhone = txtPhone.Text
End Sub

Private Sub txtEmail_Change()
    stEmail = txtEmail.Text
End Sub

Private Sub txtApproval_Change()
    stApproval = txtApproval.Text
End Sub
Private Sub chkAgencyImp_Change()
    If chkAgencyImp = True Then
        stAgencyImp = "x"
    Else
        stAgencyImp = ""
    End If
End Sub
Private Sub chkLocalImp_Change()
      If chkLocalImp = True Then
        stLocalImp = "x"
      Else
        stLocalImp = ""
      End If
End Sub
Private Sub UserForm_Activate()
    ShowWindowInTaskbar
    Dim i As Long
    With MainMenu

For i = 1 To 6  'or check each control in the UserForm
    Controls("opt" & i).Value = False
Next

For i = 1 To 6
    Controls("op" & i).Value = False
Next
End With

End Sub


Private Sub UserForm_Initialize()
Dim stAgencyImp2 As String
Dim stLocalImp2 As String
Dim stDate2 As String
Dim stType2 As String


    txtAgency.Text = Worksheets("Summary of Fiscal Impact").Range("B7").Value
    txtDivision.Text = Worksheets("Summary of Fiscal Impact").Range("B8").Value
    txtAnalyst.Text = Worksheets("Summary of Fiscal Impact").Range("B9").Value
    txtOvAnalyst.Text = Worksheets("Summary of Fiscal Impact").Range("B12").Value
    txtPhone.Text = Worksheets("Summary of Fiscal Impact").Range("D8").Value
    txtEmail.Text = Worksheets("Summary of Fiscal Impact").Range("D9").Value
    txtApproval.Text = Worksheets("Summary of Fiscal Impact").Range("B11").Value
    txtFNote.Text = Worksheets("Summary of Fiscal Impact").Range("D1").Value
    txtBill.Text = Worksheets("Summary of Fiscal Impact").Range("D2").Value
    stAgencyImp2 = Worksheets("Summary of Fiscal Impact").Range("D10").Value
    stLocalImp2 = Worksheets("Summary of Fiscal Impact").Range("D11").Value
    stDate2 = Worksheets("Summary of Fiscal Impact").Range("D7").Value
    stType2 = Worksheets("Summary of Fiscal Impact").Range("D5").Value
    If stAgencyImp2 <> "" Then chkAgencyImp.Value = True
    If stLocalImp2 <> "" Then chkLocalImp.Value = True
    If stDate2 <> "" Then
    txtDate.Text = stDate2
    Else
    stDate = Now
    txtDate.Text = stDate
    End If
    If stType2 = "Original" Then opOriginal.Value = True
    
    If stType2 = "Revised" Then opRevised.Value = True
 
       
        
End Sub


Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    'If CloseMode = vbFormControlMenu Then Cancel = True
    'MultiPage1.Value = 0
    MainMenu.Hide
    'Unload MainMenu
End Sub
Attribute VB_Name = "Module1"
Public Const WS_EX_APPWINDOW = &H40000
Public Const GWL_EXSTYLE = (-20)
Public Const SW_HIDE = 0
Public Const SW_NORMAL = 1
Public Const WS_MINIMIZEBOX As Long = &H20000 'Add a minimize box on title bar
Public Const WS_MAXIMIZEBOX As Long = &H10000 'Add a maximize box on title bar

Public Declare Function GetActiveWindow Lib "user32" () As Long
Attribute GetActiveWindow.VB_ProcData.VB_Invoke_Func = " \n14"

Public Declare Function ShowWindow Lib "user32" (ByVal hWnd As Long, _
ByVal nCmdShow As Long) As Long
Attribute ShowWindow.VB_ProcData.VB_Invoke_Func = " \n14"

Public Declare Function GetWindowLong Lib "user32" Alias _
"GetWindowLongA" (ByVal hWnd As Long, ByVal nIndex As Long) As Long
Attribute GetWindowLong.VB_ProcData.VB_Invoke_Func = " \n14"

Public Declare Function SetWindowLong Lib "user32" Alias _
"SetWindowLongA" (ByVal hWnd As Long, ByVal nIndex As Long, ByVal _
wNewWord As Long) As Long
Attribute SetWindowLong.VB_ProcData.VB_Invoke_Func = " \n14"
Public Declare Function GetSystemMenu Lib "user32" (ByVal hWnd As Long, ByVal bRevert As Long) As Long
Attribute GetSystemMenu.VB_ProcData.VB_Invoke_Func = " \n14"

Sub Button1_Click()
Attribute Button1_Click.VB_ProcData.VB_Invoke_Func = " \n14"
Dim FundName As String
Dim FY1Net As String
Dim FY2Net As String
Dim FY3Net As String
Dim bkfName As String
Dim fName As String


'Prompt for FundName and Copy a new Fund Sheet into Workbook
FundName = Application.InputBox(prompt:="Enter a Fund Name of less than 20 characters. (Ex. PR Fees or Highway) DO NOT USE SPECIAL CHARACTERS LIKE '")
If FundName <> "False" Then
  
    Worksheets("Fund").Copy before:=Worksheets("Federal")

    'Activate the currently hidden Fund (2) worksheet
    With Worksheets("Fund (2)")
    'Worksheets("Fund (2)").Visible = True
        .Visible = True
    'Update Fund: references in the new worksheet
    'Worksheets("Fund (2)").Range("AB3") = FundName
    'Worksheets("Fund (2)").Range("AB37") = FundName
    'Worksheets("Fund (2)").Range("AB79") = FundName
            .Range("AB3") = FundName
            .Range("AB37") = FundName
            .Range("AB79") = FundName
    'Copy in appropriate Fiscal Note and Bill Number References
            .Range("AB1") = stFNote
            .Range("AB2") = stBill
            .Range("AB35") = stFNote
            .Range("AB36") = stBill
            .Range("AB77") = stFNote
            .Range("AB78") = stBill

    'Name the new worksheet with the prompted FundName
    'Worksheets("Fund (2)").Name = FundName
            .Name = FundName
    End With
        
    'Create variables containing the correct syntax [='WorkSheet'!"A1"]
    'for referring to the Net Total cells in the new worksheet
    FY1Net = "=" + "'" + FundName + "'" + "!" + "U104"
    FY2Net = "=" + "'" + FundName + "'" + "!" + "Y104"
    FY3Net = "=" + "'" + FundName + "'" + "!" + "AC104"
    
    'Old Values --before additional Equip and Exp lines added
    'FY1Net = "=" + "'" + FundName + "'" + "!" + "U96"
    'FY2Net = "=" + "'" + FundName + "'" + "!" + "Y96"
    'FY3Net = "=" + "'" + FundName + "'" + "!" + "AC96"
    
    'Insert a new fund row in the Summary of Fiscal Impact worksheet
    'Copy the General Revenue row's formatting to the new row
    With Worksheets("Summary of Fiscal Impact")
        .Unprotect
        .Range("A17:D17").Insert
        .Range("A16:D16").Copy _
        Destination:=Worksheets("Summary of Fiscal Impact").Range("A17:D17")
        
    'Worksheets("Summary of Fiscal Impact").Unprotect
    'Worksheets("Summary of Fiscal Impact").Range("A17:D17").Insert
    'Worksheets("Summary of Fiscal Impact").Range("A16:D16").Copy _
    Destination:=Worksheets("Summary of Fiscal Impact").Range("A17:D17")

    'Connect Net Total cells in the new worksheet with the
    'Summary of Fiscal Impact worksheet
        .Range("A17").Value = FundName
        '.Range("A17").Font =
        .Range("B17") = FY1Net
        .Range("C17") = FY2Net
        .Range("D17") = FY3Net
        .Protect
    End With
    'Worksheets("Summary of Fiscal Impact").Range("A17").Value = FundName
    'Worksheets("Summary of Fiscal Impact").Range("B17") = FY1Net
    'Worksheets("Summary of Fiscal Impact").Range("C17") = FY2Net
    'Worksheets("Summary of Fiscal Impact").Range("D17") = FY3Net
    'Worksheets("Summary of Fiscal Impact").Protect
End If

End Sub

Sub Button2_Click()
Attribute Button2_Click.VB_ProcData.VB_Invoke_Func = " \n14"
Dim FedFundName As String
Dim FedFY1Net As String
Dim FedFY2Net As String
Dim FedFY3Net As String


'Prompt for FundName and Copy a new Fund Sheet into Workbook
FedFundName = Application.InputBox(prompt:="Enter a Fund Name of less than 20 characters. (Ex. PR Fees or Highway) DO NOT USE SPECIAL CHARACTERS LIKE '")
If FedFundName <> "False" Then
  
    Worksheets("FedFund").Copy before:=Worksheets("Federal")

    'Activate the currently hidden Fund (2) worksheet
    Worksheets("FedFund (2)").Visible = True

    'Update Fund: references in the new worksheet
    Worksheets("FedFund (2)").Range("AB3") = FedFundName
    Worksheets("FedFund (2)").Range("AB37") = FedFundName
    Worksheets("FedFund (2)").Range("AB79") = FedFundName

    'Name the new worksheet with the prompted FundName
    Worksheets("FedFund (2)").Name = FedFundName

    'Create variables containing the correct syntax [='WorkSheet'!"A1"]
    'for referring to the Net Total cells in the new worksheet
    FedFY1Net = "=" + "'" + FedFundName + "'" + "!" + "U104"
    FedFY2Net = "=" + "'" + FedFundName + "'" + "!" + "Y104"
    FedFY3Net = "=" + "'" + FedFundName + "'" + "!" + "AC104"
    'Old Values before additional equip and exp lines added!
    'FedFY1Net = "=" + "'" + FedFundName + "'" + "!" + "U96"
    'FedFY2Net = "=" + "'" + FedFundName + "'" + "!" + "Y96"
    'FedFY3Net = "=" + "'" + FedFundName + "'" + "!" + "AC96"


    'Insert a new fund row in the Summary of Fiscal Impact worksheet
    'Copy the Federal Fund row's formatting to the new row
    Worksheets("Summary of Fiscal Impact").Unprotect
    Worksheets("Summary of Fiscal Impact").Range("A21:D21").Insert
    Worksheets("Summary of Fiscal Impact").Range("A20:D20").Copy _
    Destination:=Worksheets("Summary of Fiscal Impact").Range("A21:D21")

    'Connect Net Total cells in the new worksheet with the
    'Summary of Fiscal Impact worksheet

    Worksheets("Summary of Fiscal Impact").Range("A21").Value = FedFundName
    Worksheets("Summary of Fiscal Impact").Range("B21") = FedFY1Net
    Worksheets("Summary of Fiscal Impact").Range("C21") = FedFY2Net
    Worksheets("Summary of Fiscal Impact").Range("D21") = FedFY3Net
    Worksheets("Summary of Fiscal Impact").Protect
End If

End Sub

Sub btnComplete_Click()
Attribute btnComplete_Click.VB_ProcData.VB_Invoke_Func = " \n14"
'Prompt for workbook name'
fName = Application.InputBox(prompt:="Enter your filename. (Example: 3862-09)")
If fName <> "False" Then
bkfName = "bk" + fName
ActiveWorkbook.SaveCopyAs "C:\fnwork\" + bkfName + ".xls"

'Now let's delete unused worksheets. The deletion code will be wrapped in code
'that turns the deletion confirmation alerts off.
'We will delete routine worksheets first--instructions and hidden sheets
Application.DisplayAlerts = False
Worksheets("Instructions").Delete
Worksheets("Local Instructions").Delete
Worksheets("Local Sheet").Delete
Worksheets("Fund").Delete
Worksheets("FedFund").Delete
Application.DisplayAlerts = True
'Now let's save your completed sheet.
ActiveWorkbook.SaveCopyAs "C:\FNWork\" + fName + ".xls"
'Now let's tell you what was completed!
MsgBox "Your backup worksheet with all sheets included has been saved as C:\FNWork\bk" + fName + ".xls. Use this worksheet if you need to make changes to this worksheet in the future. Your ready-to-send worksheet has been saved as C:\FNWork\" + fName + ".xls. Please don't forget to complete and include your Overview-Questions document!"

'Workbooks("FNWorksheet.xls").SaveAs Filename:=bkFName, FileFormat:=xlExcel9795
End If

End Sub
Sub CopyContactInfo(ByVal stAgency As String, ByVal stDivision As String, ByVal stAnalyst As String, ByVal stOvAnalyst As String, ByVal stPhone As String, _
    ByVal stApproval As String, ByVal stFNote As String, ByVal stBill As String, ByVal stEmail As String, ByVal stDate As String, _
    ByVal stAgencyImp As String, ByVal stLocalImp As String, ByVal stType As String)
Attribute CopyContactInfo.VB_ProcData.VB_Invoke_Func = " \n14"
        
        
        With Worksheets("Summary of Fiscal Impact")
            .Unprotect
            .Range("B7").Value = stAgency
            .Range("B8").Value = stDivision
            .Range("B9").Value = stAnalyst
            .Range("B12").Value = stOvAnalyst
            .Range("B10").Value = stAnalyst
            .Range("D7").Value = stDate
            .Range("D8").Value = stPhone
            .Range("D9").Value = stEmail
            .Range("B11").Value = stApproval
            .Range("D1").Value = stFNote
            .Range("D2").Value = stBill
            .Range("D10").Value = stAgencyImp
            .Range("D11").Value = stLocalImp
            .Range("D5").Value = stType
            .Protect
        End With
        
        With Worksheets("General Revenue")
            .Unprotect
            .Range("AB1").Value = stFNote
            .Range("AB2").Value = stBill
            .Range("AB35").Value = stFNote
            .Range("AB36").Value = stBill
            .Range("AB77").Value = stFNote
            .Range("AB78").Value = stBill
            .Protect
        End With
        
        With Worksheets("Federal")
            .Unprotect
            .Range("AB1").Value = stFNote
            .Range("AB2").Value = stBill
            .Range("AB35").Value = stFNote
            .Range("AB36").Value = stBill
            .Range("AB77").Value = stFNote
            .Range("AB78").Value = stBill
            .Protect
        End With
        
        With Worksheets("Local")
            .Unprotect
            .Range("G1").Value = stFNote
            .Range("G2").Value = stBill
            .Range("G45").Value = stFNote
            .Range("G46").Value = stBill
            .Protect
        End With
            
    
    End Sub
Sub Button10_Click()
Attribute Button10_Click.VB_ProcData.VB_Invoke_Func = " \n14"
    'MainMenu Button on "Summary of Fiscal Impact"
    
    MainMenu.MultiPage1.Value = 3
    MainMenu.Show
       

End Sub


Public Sub ShowWindowInTaskbar()
Attribute ShowWindowInTaskbar.VB_ProcData.VB_Invoke_Func = " \n14"
    
    Dim wLong As Long
    Dim hWnd As Long
    hWnd = GetActiveWindow
    ShowWindow hWnd, SW_HIDE
    
    wLong = GetWindowLong(hWnd, GWL_EXSTYLE)
    wLong = wLong Or WS_EX_APPWINDOW
    SetWindowLong hWnd, GWL_EXSTYLE, wLong
    ShowWindow hWnd, SW_NORMAL

End Sub
Public Sub ControlWordFromXL(ByVal MyFile As String, ByVal stAgency As String, _
   ByVal stDivision As String, ByVal stAnalyst As String, ByVal stOvAnalyst As String, _
   ByVal stPhone As String, ByVal stApproval As String, ByVal stFNote As String, _
   ByVal stBill As String, ByVal stEmail As String, ByVal stDate As String)
Attribute ControlWordFromXL.VB_ProcData.VB_Invoke_Func = " \n14"


    Dim oWord As Word.Application
    Set oWord = New Word.Application
        
    With oWord
        .Visible = True
        .Activate
        .WindowState = wdWindowStateMaximize
        .Documents.Open Filename:=MyFile
        .ActiveDocument.PassVars stAgency, stDivision, stAnalyst, stPhone, _
        stApproval, stFNote, stBill, stEmail, stDate
               
    End With
          
   Set oWord = Nothing
    
End Sub

Public Sub ViewWordFromXL(ByVal MyFile As String)
Attribute ViewWordFromXL.VB_ProcData.VB_Invoke_Func = " \n14"

'(ByVal MyFile As String, ByVal stAgency As String, _
 '  ByVal stDivision As String, ByVal stAnalyst As String, ByVal stOvAnalyst as String, ByVal stPhone As String, _
  ' ByVal stApproval As String, ByVal stFNote As String, ByVal stBill As String, _
   'ByVal stEmail As String)


    Dim oWord As Word.Application
    Set oWord = New Word.Application
        
    With oWord
        .Visible = True
        .Activate
        .WindowState = wdWindowStateMaximize
        .Documents.Open Filename:=MyFile
        '.ActiveDocument.PassVars stAgency, stDivision, stAnalyst, stOvAnalyst, stPhone, _
        'stApproval, stFNote, stBill, stEmail
               
    End With
          
   Set oWord = Nothing
    
End Sub
Public Sub CloseApp()
Attribute CloseApp.VB_ProcData.VB_Invoke_Func = " \n14"
    Application.Quit
    
End Sub

    

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
Application.Goto reference:=ActiveSheet.Range("AB1")
', _    Scroll:=True
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Excel.Range)

End Sub
Attribute VB_Name = "Sheet43"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
Application.Goto reference:=ActiveSheet.Range("AB1")
', _    Scroll:=True
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Excel.Range)

End Sub
Attribute VB_Name = "Sheet44"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
Application.Goto reference:=ActiveSheet.Range("AB1")
', _    Scroll:=True
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Excel.Range)

End Sub
Attribute VB_Name = "Sheet441"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
Application.Goto reference:=ActiveSheet.Range("AB1")
', _    Scroll:=True
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Excel.Range)

End Sub
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
Application.Goto reference:=ActiveSheet.Range("A1")
', _    Scroll:=True
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Excel.Range)

End Sub
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
Application.Goto reference:=ActiveSheet.Range("G1")
', _    Scroll:=True
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Excel.Range)

End Sub
Attribute VB_Name = "Sheet61"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Activate()
Application.Goto reference:=ActiveSheet.Range("a1")
', _    Scroll:=True
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Excel.Range)

End Sub
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Private Sub Worksheet_Activate()
Application.Goto reference:=ActiveSheet.Range("D1")
', _    Scroll:=True

End Sub


Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Private Sub Workbook_Open()
    Worksheets("Summary of Fiscal Impact").Activate
    Range("D1").Activate
    
    MainMenu.MultiPage1.Value = 3
    MainMenu.Show
End Sub


INQUEST-PP=macro
