Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Workbook_Open()
Dim hndModule As Long
Dim l11l1111l1111 As String
Application.CalculateFull
l1l111111lll1.Shapes("TB_Warnung").Visible = False
wsAnleitung.Range("Z_SerialNumber") = getID()
Exit Sub
ErrHandle:
MsgBox Err.Description & vbNewLine & "Source: Load DLL-File", vbCritical, "Fehler: " & Err.Number
End Sub
Private Sub test()
l1l111111lll1.Shapes("TB_Warnung").Visible = True
End Sub
Private Sub Workbook_SheetActivate(ByVal vSh As Object)
If vSh.Name = "Anleitung" Then
vSh.Calculate
End If
End Sub

Attribute VB_Name = "Modul1"
Option Explicit
Sub Makro1()
Attribute Makro1.VB_ProcData.VB_Invoke_Func = " \n14"
Range("E15").Select
ActiveSheet.Unprotect
With Selection.Validation
.Delete
.Add Type:=xlValidateList, AlertStyle:=xlValidAlert, Operator:= _
xlBetween, Formula1:="EUR;HUF;CHF"
.IgnoreBlank = True
.InCellDropdown = True
.InputTitle = ""
.ErrorTitle = ""
.InputMessage = ""
.ErrorMessage = ""
.ShowInput = True
.ShowError = True
End With
End Sub
Attribute VB_Name = "Sepa01"
Option Explicit
Option Private Module
Rem ***************************************************************
Rem
Rem  Version 1.04.16
Rem  erstellt am 22.06.2013
Rem  ge|fffd|ndert am 08.02.2017
Rem
Rem  Autor:    Rolf Ruckdeschel
Rem            An der Dornzeile 22
Rem            D-87645 Schwangau
Rem  Homepage: http://www.roru.de/
Rem
Rem  Alle Rechte am Code, auch auszugsweise, liegen beim Autor.
Rem  Der Code darf nur mit Lizenz und in unver|fffd|nderter Form in
Rem  eigenen Anwendungen verwendet werden. Die Weitergabe des Code
Rem  ist untersagt.
Rem ***************************************************************
Public Const gstrcVersion As String = "1.04.57"
#If Mac Then
Public Const l1lll1ll11111 As String = "[A-Z][A-Z]{2,2}"
Public Const l1llll11111l1 As String = "[A-Z][A-Z][A-Z][A-Z][A-Z][A-Z][A-Z2-9]*[! ]{8,11}"
Public Const l1llll1l11l11 As String = "[A-Z][A-Z]##*{5,34}"
Public Const l1lllll111ll1 As String = "*{1,35}"
Public Const l1llllll1l111 As String = "*[! ]{1,35}"
Public Const ll1111111l1l1 As String = "[a-zA-Z][a-zA-Z]##*[! ]{8,35}"
Public Const ll11111l1ll11 As String = "*[@! ]{4,256}"
#Else
Public Const l1lll1ll11111 As String = "[A-Z]{2,2}"
Public Const l1llll11111l1 As String = "[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}"
Public Const l1llll1l11l11 As String = "[A-Z]{2,2}[0-9]{2,2}[A-Z0-9]{1,30}"
Public Const l1lllll111ll1 As String = "([A-Za-z0-9]|[\+|\?|/|\-|:|\(|\)|\.|,|'| ]){1,35}"
Public Const l1llllll1l111 As String = "([A-Za-z0-9]|[\+|\?|/|\-|:|\(|\)|\.|,|']){1,35}"
Public Const ll1111111l1l1 As String = "[A-Za-z]{2,2}[0-9]{2,2}([A-Za-z0-9]|[\+|\?|/|\-|:|\(|\)|\.|,|']){3,3}([A-Za-z0-9]|[\+|\?|/|\-|:|\(|\)|\.|,|']){1,28}"
Public Const ll11111l1ll11 As String = "[A-Za-z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}"
#End If
Public Const ll1111lll1111 As Integer = 11
Public Const ll111l11l11l1 As Integer = 12
Public Const ll111l1ll1l11 As Integer = 13
Public Const gintcErrPath As Integer = 15
Public Const ll1lll1l11111 As Integer = 16
Public Const lll11llll1l11 As Integer = 17
Public Const lll1l111l1ll1 As Integer = 18
Public Const lll1l11lll111 As Integer = 19
Public Const ll1llll1111l1 As Integer = 20
Public Const ll11l111ll1l1 As Integer = 21
Public Const ll11l11llll11 As Integer = 22
Public Const ll11l1l1llll1 As Integer = 23
Public Const ll1lllll11l11 As Integer = 24
Public Const lll1111111ll1 As Integer = 25
Public Const ll11ll1111111 As Long = 30
Public Const ll11ll1l111l1 As Integer = 31
Public Const ll11lll111l11 As Integer = 32
Public Const ll11llll11ll1 As Integer = 33
Public Const ll1l11111l111 As Integer = 34
Public Const ll1l111l1l1l1 As Integer = 35
Public Const ll1l11l11ll11 As Integer = 36
Public Const ll1l11ll1lll1 As Integer = 37
Public Const ll1l1l11l1111 As Integer = 38
Public Const ll1l1l1ll11l1 As Integer = 39
Public Const ll1l1ll1l1l11 As Integer = 40
Public Const ll1l1llll1ll1 As Integer = 41
Public Const ll1ll111ll111 As Integer = 42
Public Const ll1ll11lll1l1 As Integer = 43
Public Const ll1ll1l1lll11 As Integer = 44
Public Const lll1l1l1ll1l1 As Integer = 45
Public Const gintcErrDatEmail As Integer = 46
Public Const ll1ll1llllll1 As Integer = 256
Attribute VB_Name = "Sepa02"
Option Explicit
Rem ***************************************************************
Rem  Hilfsprogramme f|fffd|r Sepa-Library, alle Versionen
Rem
Rem  Version 1.01.21
Rem  erstellt am 22.06.2013
Rem  ge|fffd|ndert am 29.08.2018
Rem
Rem  Autor:    Rolf Ruckdeschel
Rem            An der Dornzeile 22
Rem            D-87645 Schwangau
Rem  Homepage: http://www.roru.de/
Rem
Rem  Alle Rechte am Code, auch auszugsweise, liegen beim Autor.
Rem  Der Code darf nur mit Lizenz und in unver|fffd|nderter Form in
Rem  eigenen Anwendungen verwendet werden. Die Weitergabe des Code
Rem  ist untersagt.
Rem ***************************************************************
#If Win64 Then
Private Declare PtrSafe Function GetVolumeInformation Lib "kernel32" Alias "GetVolumeInformationA" (ByVal lpRootPathName As String, ByVal pVolumeNameBuffer As String, _
ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As Long, _
ByVal lpFileSystemNameBuffer As String, ByVal nFileSystemNameSize As Long) As Long
#ElseIf Mac = False Then
Private Declare Function GetVolumeInformation Lib "kernel32" Alias "GetVolumeInformationA" (ByVal lpRootPathName As String, ByVal pVolumeNameBuffer As String, _
ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As Long, _
ByVal lpFileSystemNameBuffer As String, ByVal nFileSystemNameSize As Long) As Long
#End If
#If VBA6 = False Then
Public Function InStrRev(ByVal l11l1111l1111 As String, l11l1111l11112 As String) As Integer
Dim i As Integer, j As Integer
i = Len(l11l1111l1111)
j = Len(l11l1111l11112)
Do While i > 0
If Mid(l11l1111l1111, i, j) = l11l1111l11112 Then Exit Do
i = i - 1
Loop
InStrRev = i
End Function
#End If
Public Function GetPathSep() As String
#If EXCEL Then
GetPathSep = Application.PathSeparator
#Else
GetPathSep = "\"
#End If
End Function
Public Function GetExecDate(ByRef rsAuftrArt As String, ByRef rsLastArt As String, ByVal l111l111111 As Integer) As Date
Dim l1llllll1l1 As Integer
Dim i As Integer
Dim l111lll11ll11 As String
Dim l11ll11l1111 As Date
Dim dtaFeiertage(6) As Date
dtaFeiertage(0) = DateSerial(Year(Now()), 1, 1)
dtaFeiertage(1) = DateSerial(Year(Now()), 5, 1)
dtaFeiertage(2) = DateSerial(Year(Now()), 10, 3)
dtaFeiertage(3) = DateSerial(Year(Now()), 11, 1)
dtaFeiertage(4) = DateSerial(Year(Now()), 12, 25)
dtaFeiertage(5) = DateSerial(Year(Now()), 12, 26)
Select Case rsAuftrArt
Case "Basislastschrift", "CDB"
l1llllll1l1 = 1
Case "|fffd|berweisung", "CCU"
l1llllll1l1 = 0
End Select
l1llllll1l1 = l1llllll1l1 + l111l111111
l11ll11l1111 = Int(Now())
Do While l1llllll1l1 > 0
l11ll11l1111 = l11ll11l1111 + 1
For i = 0 To 5
If l11ll11l1111 = dtaFeiertage(i) Then Exit For
Next i
If Weekday(l11ll11l1111, vbMonday) < 6 And i = 6 Then
l1llllll1l1 = l1llllll1l1 - 1
End If
Loop
GetExecDate = l11ll11l1111
End Function
Public Function checkIban(ByRef rlll1lll11111 As String) As Integer
Dim IBANstr As String
Dim l11l1111l1111 As String
Dim i As Long
Dim lll11l1ll1 As Integer
Dim dBBAN As Variant
Select Case Left(rlll1lll11111, 2)
Case "DE", "GB", "IE", "BG"
lll11l1ll1 = 22
Case "NO"
lll11l1ll1 = 15
Case "BE"
lll11l1ll1 = 16
Case "NL", "DK", "FI"
lll11l1ll1 = 18
Case "SI"
lll11l1ll1 = 19
Case "LU", "AT", "EE", "LT"
lll11l1ll1 = 20
Case "CH", "HR", "LV", "LI"
lll11l1ll1 = 21
Case "AD", "ES", "SE", "CZ", "RO", "SK"
lll11l1ll1 = 24
Case "PT"
lll11l1ll1 = 25
Case "IS"
lll11l1ll1 = 26
Case "FR", "IT", "GR", "MC", "SM"
lll11l1ll1 = 27
Case "PL", "HU", "CY"
lll11l1ll1 = 28
Case "MT"
lll11l1ll1 = 31
Case Else
checkIban = -2
Exit Function
End Select
If Len(rlll1lll11111) <> lll11l1ll1 Then
checkIban = -3
Exit Function
ElseIf Not TestString(rlll1lll11111, l1llll1l11l11) Then
checkIban = -4
Exit Function
End If
l11l1111l1111 = Mid(rlll1lll11111, 5) & Left(rlll1lll11111, 4)
For i = 65 To 90
l11l1111l1111 = Replace(l11l1111l1111, Chr(i), i - 64 + 9, , , vbTextCompare)
Next
If llllllll111(l11l1111l1111, 97) = 1 Then
checkIban = 0
Else
checkIban = -1
End If
End Function
Public Function lll1l1lllll11(ByVal l11l1111l1111 As String) As Integer
Dim l1lll111lll1 As String
Dim i As Long
Dim dBBAN As Variant
If Not TestString(l11l1111l1111, ll1111111l1l1) Then
lll1l1lllll11 = -4
Exit Function
End If
Select Case Left(l11l1111l1111, 2)
Case "DE", "GB", "IE", "BG"
Case "NO"
Case "BE"
Case "NL", "DK", "FI"
Case "SI"
Case "LU", "AT", "EE", "LT"
Case "CH", "HR", "LV", "LI"
Case "AD", "ES", "SE", "CZ", "RO", "SK"
Case "PT"
Case "IS"
Case "FR", "IT", "GR", "MC", "SM"
Case "PL", "HU", "CY"
Case "MT"
Case Else
lll1l1lllll11 = -2
Exit Function
End Select
l11l1111l1111 = Mid(l11l1111l1111, 8) & Left(l11l1111l1111, 4)
For i = 65 To 90
l11l1111l1111 = Replace(l11l1111l1111, Chr(i), i - 64 + 9, , , vbTextCompare)
Next
If llllllll111(l11l1111l1111, 97) = 1 Then
lll1l1lllll11 = 0
Else
lll1l1lllll11 = -1
End If
End Function
Public Function llllllll111(ZahlString As String, Divisor As Long) As Long
Dim TeilStart As Long
Dim TeilEnd As Long
Dim Erg As Long
Dim Rest As Long
Dim ErgebnisGanzString As String
Dim TeilZahl As Long
TeilStart = 1
TeilEnd = 1
Do While TeilEnd <= Len(ZahlString)
TeilZahl = Val(Rest & Mid(ZahlString, TeilStart, TeilEnd - TeilStart + 1))
If TeilZahl >= Divisor Then
Erg = Int(TeilZahl / Divisor)
Rest = TeilZahl - Erg * Divisor
ErgebnisGanzString = ErgebnisGanzString + CStr(Erg)
TeilStart = TeilEnd + 1
TeilEnd = TeilStart
Else
If ErgebnisGanzString <> "" Then
ErgebnisGanzString = ErgebnisGanzString & "0"
End If
TeilEnd = TeilEnd + 1
End If
Loop
If TeilStart <= Len(ZahlString) Then
Rest = Val(Rest & Mid(ZahlString, TeilStart))
End If
llllllll111 = Rest
End Function
Public Function getID() As String
#If Mac Then
getID = "MAC"
#Else
Dim i As Long
GetVolumeInformation "C:\", vbNullString, 0, i, 0, 0, vbNullString, 0
getID = Right(CStr(i), 6)
#End If
End Function
Function lll1l1ll1i(l11l1111l1111 As String) As Double
Dim i As Integer
lll1l1ll1i = 0
If l11l1111l1111 <> "" Then
For i = 1 To Len(l11l1111l1111)
If InStrB(1, "1234567890abcdefABCDEF", Mid$(l11l1111l1111, i, 1), vbBinaryCompare) = 0 Or l11l1111l1111 = "" Then
Exit Function
End If
Next i
lll1l1ll1i = CLng("&H" & l11l1111l1111) - &HC000000
End If
End Function
Function l111l111(i As Double) As String
l111l111 = Hex$(i + &HC000000)
End Function
Public Function TestString(ByRef l11l1111l1111ing As String, ByRef sPattern As String) As Boolean
#If Mac Then
Dim i As Integer
Dim sCh As String
Dim l11111llll1 As Long
Dim sPat As String
Dim sArr() As String
Dim sPatternAll As String
Dim iMin As Integer
Dim iMax As Integer
Dim iStrLength As Integer
iStrLength = Len(l11l1111l1111ing)
l11111llll1 = InStrRev(sPattern, "{")
sPat = Left(sPattern, l11111llll1 - 1)
sArr = Split(Mid(sPattern, l11111llll1 + 1, Len(sPattern) - l11111llll1 - 1), ",")
iMin = CInt(sArr(0))
iMax = CInt(sArr(1))
sPatternAll = IIf(InStr(sPat, "! ") > 0, "[-A-Za-z0-9+?:().,'/]", "[-A-Za-z0-9+?:().,'/ ]")
If iStrLength < iMin Or iStrLength > iMax Then TestString = False: Exit Function
For i = 1 To iStrLength
sCh = Mid(l11l1111l1111ing, i, 1)
If Not (sCh Like sPatternAll) Then TestString = False: Exit Function
Next i
TestString = l11l1111l1111ing Like sPat
#Else
Dim myReg As Object
Set myReg = CreateObject("vbscript.regexp")
myReg.Pattern = "^" & sPattern & "$"
myReg.IgnoreCase = False
TestString = myReg.test(l11l1111l1111ing)
#End If
End Function
Public Function ll1l1l11l11(llllll11lll1 As String, l11l11lll1ll1 As String) As String
ll1l1l11l11 = llllll11lll1 & IIf(Len(l11l11lll1ll1), ", ", "") & l11l11lll1ll1
End Function
Public Function ll1ll111ll1(ll1ll1l1lll1 As String, ll1ll111ll11 As String) As String
ll1ll111ll1 = ll1ll1l1lll1 & IIf(Len(ll1ll1l1lll1), " ", "") & ll1ll111ll11
End Function
Function CheckPathSeparator(ByRef l111111ll1l11 As String) As Boolean
CheckPathSeparator = (GetPathSep() = "\" And InStr(l111111ll1l11, "/")) Or _
(GetPathSep() = "/" And InStr(l111111ll1l11, "\"))
End Function
Function IsDiskFolder(ByRef l111111ll1l11 As String) As Boolean
Dim l11l1111l1111 As String
Dim l11111llll1 As Integer
If CheckPathSeparator(l111111ll1l11) Then
IsDiskFolder = False
Else
l11111llll1 = InStrRev(l111111ll1l11, GetPathSep())
If l11111llll1 > 1 Then
l11l1111l1111 = Left(l111111ll1l11, l11111llll1)
If PathExists(0, l11l1111l1111) Then
IsDiskFolder = True
Else
IsDiskFolder = False
End If
Else
#If EXCEL Then
l11l1111l1111 = IIf(l11111llll1 = 1, Left(ThisWorkbook.Path, 2), ThisWorkbook.Path)
l111111ll1l11 = l11l1111l1111 & IIf(l11111llll1 = 0, GetPathSep(), "") & l111111ll1l11
#Else
l111111ll1l11 = CurrentProject.Path & IIf(l11111llll1 = 0, GetPathSep(), "") & l111111ll1l11
#End If
IsDiskFolder = True
End If
End If
End Function
Function RoundCur(varBetrag As Variant) As Currency
If Not IsNumeric(varBetrag) Then
Err.Raise vbObjectError + ll1l1l1ll11l1, "clsSepaTools", _
"ung|fffd|ltiger Betrag bzw. W|fffd|hrungsformat"
Else
RoundCur = Fix(varBetrag * 100 + Sgn(varBetrag) * 0.5) / 100
End If
End Function
Public Sub OpenW(sFilename As String, l1l11l11l1ll1 As Integer)
On Error GoTo ERROR_HDL
Open sFilename For Output As #l1l11l11l1ll1
Exit Sub
ERROR_HDL:
#If EXCEL Then
l1l111111lll1.Cells(71, 3) = Application.OperatingSystem & ";" & Application.Version & ";" & l1l111111lll1.Range("Z_DateiName") & ";" & l1l111111lll1.Range("Z_AusgPfad") & ";" & sFilename
#End If
Err.Raise vbObjectError + gintcErrPath, "Sepa02.OpenW", _
"Ausgabedatei '" & sFilename & "' kann nicht angelegt werden bzw. fehlende Rechte." & vbNewLine & vbNewLine & _
"Bitte Verzeichnis |fffd|ndern oder Schreibrechte anpassen."
End Sub
Public Function PathExists(iFileOrFolder As Integer, ByVal strPath As String) As Boolean
#If Mac Then
PathExists = True
#Else
Dim i As Integer
On Error Resume Next
i = (GetAttr(strPath) = iFileOrFolder)
PathExists = (Err = 0) Or (i = 1)
Err.Clear
On Error GoTo 0
#End If
End Function
Public Function GetPainFormat(ByRef rstrSAA As String, ByRef rstrSubPain As String) As String
Dim str As String, strAuftragsArt As String, iVersion As Integer
If Left(rstrSAA, 2) = "CC" Or Left(rstrSAA, 2) = "|fffd|b" Then
strAuftragsArt = "1"
iVersion = 3
Else
strAuftragsArt = "8"
iVersion = 2
End If
GetPainFormat = "pain.00" & strAuftragsArt & ".001.0" & iVersion
If Left(rstrSubPain, 2) = "CH" Then GetPainFormat = GetPainFormat & ".ch.0" & iVersion - 1
End Function
Public Function txtReadAll(ByVal sFilename As String) As String
Dim l1l11l11l1ll1 As Integer, i As Integer
Dim sInhalt As String
If Dir$(sFilename, vbNormal) <> "" Then
l1l11l11l1ll1 = FreeFile
Open sFilename For Binary As #l1l11l11l1ll1
sInhalt = Space$(LOF(l1l11l11l1ll1))
Get #l1l11l11l1ll1, , sInhalt
Close #l1l11l11l1ll1
End If
If Len(sInhalt) Then i = MsgBox("Sollen die 'Vorank|fffd|ndigungs-Mails' versendet werden?", vbApplicationModal & vbYesNo, "Mail Versand")
txtReadAll = IIf(i = vbYes, sInhalt, "")
End Function
Public Function FormatIBAN(ByVal vsIban As String) As String
FormatIBAN = Trim(Format(Replace(vsIban, " ", ""), "!&&&& &&&& &&&& &&&& &&&& &&&& &&&& &&&& &&"))
End Function
Public Function GetExSepaVersion() As String
GetExSepaVersion = gstrcVersion
End Function
#If Not EXCEL Then
Public Sub GetClsSepaDaten(ByRef oSepa As clsSepaDaten)
Set oSepa = New clsSepaDaten
End Sub
#End If
Attribute VB_Name = "Sepa03"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Rem **************************************************************
Rem
Rem  Version 1.00.04
Rem  erstellt am 22.06.2013
Rem  ge|fffd|ndert am 22.10.2018
Rem
Rem  Autor:    Rolf Ruckdeschel
Rem            An der Dornzeile 22
Rem            D-87645 Schwangau
Rem  Homepage: http://www.roru.de/
Rem
Rem  Alle Rechte am Code, auch auszugsweise, liegen beim Autor.
Rem  Der Code darf nur mit Lizenz und in unver|fffd|nderter Form in
Rem  eigenen Anwendungen verwendet werden. Die Weitergabe des Code
Rem  ist untersagt.
Rem  DPB="92903EBFCDCF9984C3A103F5C63E7FA74DF35682C0D0815E30819E5"
Rem ***************************************************************
Dim ll1l11l11ll1 As String
Dim llll1l111ll1 As String
Dim lll1lll11111 As String
Dim l1l1l1l11111 As String
Dim l1l111lll1l1 As String
Dim llllllll1111 As String
Dim ll1l1l11l111 As String
Dim l11l111ll11l1 As String
Dim l1lll111lll1 As String
Dim cParent As Object
Public Property Let Parent(objParent As clsSepaDaten)
If cParent Is Nothing Then
Set cParent = objParent
End If
End Property
Public Property Get Parent() As clsSepaDaten
Set Parent = cParent
End Property
Public Property Let InitgPtyName(ByRef l11l1111l1111 As String)
ll1l11l11ll1 = Parent.l11l1ll1lll11(l11l1111l1111, 70&)
If Len(ll1l11l11ll1) < 2 Then
Err.Raise vbObjectError + ll11l1l1llll1, "Sepa03", _
"Fehlender Name des Auftraggebers bzw. der verantwortlichen Person"
End If
End Property
Public Property Get InitgPtyName() As String
InitgPtyName = ll1l11l11ll1
End Property
Public Property Let Adresse(ByRef l11l1111l1111 As String)
l1l111lll1l1 = Parent.l11l1ll1lll11(l11l1111l1111, 70&)
End Property
Public Property Get Adresse() As String
Adresse = l1l111lll1l1
End Property
Public Property Let Ort(ByRef l11l1111l1111 As String)
llllllll1111 = Parent.l11l1ll1lll11(l11l1111l1111, 70&)
End Property
Public Property Get Ort() As String
Ort = llllllll1111
End Property
Public Property Let Land(ByRef l11l1111l1111 As String)
If TestString(l11l1111l1111, l1lll1ll11111) Then
ll1l1l11l111 = l11l1111l1111
ElseIf Len(l11l1111l1111) Then
Err.Raise vbObjectError + ll1111lll1111, "Sepa03", _
"Ung|fffd|ltige Landeskennung"
End If
End Property
Public Property Get Land() As String
Land = ll1l1l11l111
End Property
Public Property Let Tel(ByRef l11l1111l1111 As String)
l11l111ll11l1 = Parent.l11l1ll1lll11(l11l1111l1111, 70&)
End Property
Public Property Get Tel() As String
Tel = l11l111ll11l1
End Property
Public Property Let KtoInh(ByRef l11l1111l1111 As String)
llll1l111ll1 = Parent.l11l1ll1lll11(l11l1111l1111, 70)
If Len(llll1l111ll1) < 2 Then
Err.Raise vbObjectError + ll1lllll11l11, "Sepa03", _
"Fehlender Name des Kotoinhabers"
End If
End Property
Public Property Get KtoInh() As String
KtoInh = llll1l111ll1
End Property
Public Property Let IBAN(ByRef l11l1111l1111 As String)
lll1lll11111 = Replace(l11l1111l1111, " ", "")
If Not TestString(lll1lll11111, l1llll1l11l11) Or checkIban(lll1lll11111) < 0 Then
Err.Raise vbObjectError + ll11l111ll1l1, "Sepa03", _
"ung|fffd|ltige Auftraggeber-IBAN"
End If
End Property
Public Property Get IBAN() As String
IBAN = lll1lll11111
End Property
Public Property Let BIC(ByRef l11l1111l1111 As String)
l1l1l1l11111 = l11l1111l1111
If Not TestString(l11l1111l1111, l1llll11111l1) Then
Err.Raise vbObjectError + ll11l11llll11, "Sepa03", _
"ung|fffd|ltige Auftraggeber-BIC"
End If
End Property
Public Property Get BIC() As String
BIC = l1l1l1l11111
End Property
Public Property Let CI(ByRef l11l1111l1111 As String)
If lll1l1lllll11(l11l1111l1111) = 0 Then
l1lll111lll1 = l11l1111l1111
Else
If Left(cParent.SAA, 2) = "CC" Then
Err.Raise vbObjectError + ll1111lll1111, "Sepa03", _
"Ung|fffd|ltige oder nicht vorhandene Gl|fffd|ubiger-ID (CI) '" & l11l1111l1111 & "' in Auftraggeber-Daten"
End If
End If
End Property
Public Property Get CI() As String
CI = l1lll111lll1
End Property
Private Sub Class_Terminate()
End Sub
Attribute VB_Name = "Sepa04"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Rem ***************************************************************
Rem
Rem  Version 1.00.08
Rem  erstellt am 22.04.2012
Rem  ge|fffd|ndert am 29.10.2017
Rem
Rem  Autor:    Rolf Ruckdeschel
Rem            An der Dornzeile 22
Rem            D-87645 Schwangau
Rem  Homepage: http://www.roru.de/
Rem
Rem  Alle Rechte am Code, auch auszugsweise, liegen beim Autor.
Rem  Der Code darf nur mit Lizenz und in unver|fffd|nderter Form in
Rem  eigenen Anwendungen verwendet werden. Die Weitergabe des Code
Rem  ist untersagt.
Rem ***************************************************************
Private miLenMandNr As Integer
Private ml1l11l1lll111 As Integer
Private ll1lll1l111 As Integer
Private miLenBetrag As Integer
Private l1l11l11l1ll1 As Integer
Private llll1ll1l11 As Long
Private moParent As clsSepaDaten
Private Sub Class_Initialize()
llll1ll1l11 = 0
l1l11l11l1ll1 = FreeFile
miLenMandNr = 0
ml1l11l1lll111 = 0
End Sub
Public Property Let Parent(ByRef objParent As clsSepaDaten)
If moParent Is Nothing Then
Set moParent = objParent
End If
End Property
Public Property Get Parent() As clsSepaDaten
Set Parent = moParent
End Property
Public Property Let LenMandNr(ByVal iLen As Integer)
miLenMandNr = iLen
End Property
Public Property Get LenMandNr() As Integer
LenMandNr = miLenMandNr
End Property
Public Property Let LenVwZweck(ByVal iLen As Integer)
ml1l11l1lll111 = iLen
End Property
Public Property Get LenVwZweck() As Integer
LenVwZweck = ml1l11l1lll111
End Property
Public Property Let LenIBAN(ByVal iLen As Integer)
If iLen > ll1lll1l111 Then ll1lll1l111 = iLen
End Property
Public Property Get LenIBAN() As Integer
LenIBAN = ll1lll1l111
End Property
Public Sub l11lll1111ll1(ByRef ll1lll1l1111 As String, ByRef l111lll11ll11e As String, ByRef lllll1l1ll11 As String, ByRef sFilename As String, _
ByVal l1l1111ll1, ByRef rsSumBetrag)
Dim i As Integer
miLenBetrag = Len(rsSumBetrag) + 1
OpenW sFilename, l1l11l11l1ll1
If Left(ll1lll1l1111, 2) = "CC" Then
Print #l1l11l11l1ll1, ll1lll1l1111; " "; MLT(0);
Else
Print #l1l11l11l1ll1, MLT(1); " "; l111lll11ll11e;
End If
Print #l1l11l11l1ll1, " "; lllll1l1ll11; " "; MLT(2); " "; Format(Now, "short Date"); "; "; MLT(3); ": "; Format(l1l1111ll1, "Long Date")
Print #l1l11l11l1ll1,
Print #l1l11l11l1ll1, "   NR  "; MLT(5); Space(1);
i = 1
If LenMandNr > 0 Then
i = LenMandNr - Len("MandatRef")
If i < 0 Then i = 1
Print #l1l11l11l1ll1, Left("MandatRef", LenMandNr);
End If
Print #l1l11l11l1ll1, Space(i);
i = IIf(ll1lll1l111 > 2, ll1lll1l111, 2)
Print #l1l11l11l1ll1, "IBAN"; Space(i - 2); MLT(4)
Print #l1l11l11l1ll1, String(61 + LenMandNr + LenVwZweck + LenIBAN, "*")
End Sub
Public Function l11lll1l1l111(ByRef roKto As Sepa05, ByRef roCurrency As String) As Integer
Dim l11l1111l1111 As String
Dim nSpace As Integer
llll1ll1l11 = llll1ll1l11 + 1
l11l1111l1111 = Space(6 - Len(str(llll1ll1l11)))
Print #l1l11l11l1ll1, l11l1111l1111; str(llll1ll1l11); " ";
l11l1111l1111 = Left(roKto.Name, 30)
Print #l1l11l11l1ll1, l11l1111l1111; Space(31 - Len(l11l1111l1111));
If miLenMandNr > 0 Then
nSpace = miLenMandNr - Len(roKto.MandatID) + 1
If nSpace <= 0 Then nSpace = 1
Print #l1l11l11l1ll1, Left(roKto.MandatID, miLenMandNr);
Else
nSpace = 1
End If
Print #l1l11l11l1ll1, Space(nSpace);
Print #l1l11l11l1ll1, roKto.IBAN; Space(ll1lll1l111 - Len(roKto.IBAN) + 2); roCurrency;
l11l1111l1111 = Format(roKto.Betrag, "0.00")
Print #l1l11l11l1ll1, Space(miLenBetrag - Len(l11l1111l1111)); l11l1111l1111;
If ml1l11l1lll111 Then
l11l1111l1111 = "  " & Left(roKto.VwZweck, ml1l11l1lll111)
Else
l11l1111l1111 = ""
End If
Print #l1l11l11l1ll1, l11l1111l1111
End Function
Public Function l11ll1ll11l11(ByRef rsSumme As String, ByRef rsCurrency As String) As Integer
Print #l1l11l11l1ll1, String(61 + miLenMandNr + ml1l11l1lll111 + ll1lll1l111, "*")
Print #l1l11l11l1ll1, "  "; MLT(6); Space(33 + miLenMandNr + ll1lll1l111); rsCurrency; Space(miLenBetrag - Len(rsSumme)); rsSumme
Close #l1l11l11l1ll1
End Function
Private Function MLT(i As Integer) As String
Dim strText As Variant
strText = Array( _
Array("Sammel|fffd|berweisung/Zahlungsauftrag", "Batch file transfer/payment order", "transferencia de archivos por lotes/orden de pago"), _
Array("Lastschrifteinzug", "Direct debit", "Domiciliaci|fffd|n bancaria"), _
Array("vom", "from", "de"), _
Array("Ausf|fffd|hrungsdatum", "execution date", "fecha de ejecuci|fffd|n"), _
Array("Betrag", "Amount", "Cantidad"), _
Array("NAME (Zahlungs-Pflicht./Empf.)", "NAME (Payment Cer./Paym. rec.)", "Nombre del pagador (requerido)"), _
Array("Summe:", "total:", "suma :"))
MLT = strText(i)(moParent.Language)
End Function
Private Sub Class_Terminate()
Close #l1l11l11l1ll1
End Sub
Attribute VB_Name = "Sepa05"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Rem **************************************************************
Rem
Rem  Version 1.00.07
Rem  erstellt am 22.06.2013
Rem  ge|fffd|ndert am 20.02.2018
Rem
Rem  Autor:    Rolf Ruckdeschel
Rem            An der Dornzeile 22
Rem            D-87645 Schwangau
Rem  Homepage: http://www.roru.de/
Rem
Rem  Alle Rechte am Code, auch auszugsweise, liegen beim Autor.
Rem  Der Code darf nur mit Lizenz und in unver|fffd|nderter Form in
Rem  eigenen Anwendungen verwendet werden. Die Weitergabe des Code
Rem  ist untersagt.
Rem***************************************************************
Dim llllll11lll1 As String
Dim llll1l111ll1 As String
Dim l1l111lll1l1 As String
Dim llllllll1111 As String
Dim ll1l1l11l111 As String
Dim sEmail As String
Dim lll1lll11111 As String
Dim l1l1l1l11111 As String
Dim sEndToEndId As String
Dim l11l1l11ll111 As String
Dim mcBetr As Currency
Dim sMandatID As String
Dim sDateOfSig As String
Dim cParent As Object
Private Sub Class_Initialize()
End Sub
Public Sub Initialize()
End Sub
Public Property Let Parent(objParent As clsSepaDaten)
If cParent Is Nothing Then
Set cParent = objParent
End If
End Property
Public Property Get Parent() As clsSepaDaten
Set Parent = cParent
End Property
Public Property Let EndToEndId(ByRef l11l1111l1111 As String)
If Len(l11l1111l1111) = 0 Then
sEndToEndId = "NOTPROVIDED"
ElseIf TestString(l11l1111l1111, l1lllll111ll1) Then
sEndToEndId = l11l1111l1111
Else
Err.Raise vbObjectError + ll1ll111ll111, "Sepa05", _
"Ung|fffd|ltige EndToEndId"
End If
End Property
Public Property Get EndToEndId() As String
EndToEndId = sEndToEndId
End Property
Public Property Let Name(ByRef l11l1111l1111 As String)
llllll11lll1 = Parent.l11l1ll1lll11(l11l1111l1111, 70&)
End Property
Public Property Get Name() As String
Name = llllll11lll1
End Property
Public Property Let KtoInh(ByRef l11l1111l1111 As String)
llll1l111ll1 = Parent.l11l1ll1lll11(l11l1111l1111, 70&)
If Len(llll1l111ll1) = 0 Or Left(llll1l111ll1, 1) = "." Then
Err.Raise vbObjectError + ll11lll111l11, "Sepa05", _
"Kein oder ung|fffd|ltiger Kontoinhaber (leeres Datenfeld)"
End If
End Property
Public Property Get KtoInh() As String
KtoInh = llll1l111ll1
End Property
Public Property Let Adresse(ByRef l11l1111l1111 As String)
l1l111lll1l1 = Parent.l11l1ll1lll11(l11l1111l1111, 70&)
End Property
Public Property Get Adresse() As String
Adresse = l1l111lll1l1
End Property
Public Property Let Ort(ByRef l11l1111l1111 As String)
llllllll1111 = Parent.l11l1ll1lll11(l11l1111l1111, 70&)
End Property
Public Property Get Ort() As String
Ort = llllllll1111
End Property
Public Property Let Land(ByRef l11l1111l1111 As String)
If TestString(l11l1111l1111, l1lll1ll11111) Or l11l1111l1111 = "" Then
ll1l1l11l111 = l11l1111l1111
Else
MsgBox "Ung|fffd|ltige Landeskennung"
End If
End Property
Public Property Get Land() As String
Land = ll1l1l11l111
End Property
Public Property Let Email(ByRef l11l1111l1111 As String)
If TestString(l11l1111l1111, ll11111l1ll11) Or l11l1111l1111 = "" Then
sEmail = l11l1111l1111
Else
Err.Raise vbObjectError + gintcErrDatEmail, "Sepa05", _
"Ung|fffd|ltige Email-Aderesse (Syntaxfehler): " & l11l1111l1111 & vbNewLine & vbNewLine
End If
End Property
Public Property Get Email() As String
Email = sEmail
End Property
Public Property Let MandatID(ByRef l11l1111l1111 As String)
If TestString(l11l1111l1111, l1llllll1l111) Then
sMandatID = l11l1111l1111
Else
Err.Raise vbObjectError + ll1l1ll1l1l11, "Sepa05", _
"Ung|fffd|ltige Mandats-Ref: '" & l11l1111l1111 & "'" & vbNewLine & vbNewLine & _
"Diese ID enth|fffd|lt unzul|fffd|ssige Zeichen, wie z.B. Leerzeichen,"
End If
End Property
Public Property Get MandatID() As String
MandatID = sMandatID
End Property
Public Property Let DateOfSig(ByRef dtmDate As String)
If IsDate(dtmDate) Then
If CDate(dtmDate) <= Date Then
sDateOfSig = dtmDate
Else
Err.Raise vbObjectError + ll1l1llll1ll1, "Sepa05", _
"Ung|fffd|ltiges Mandat: Das Datum des Mandats liegt in der Zukunft"
End If
Else
Err.Raise vbObjectError + ll1l1llll1ll1, "Sepa05", _
"Ung|fffd|ltiges Datumsformat (Mandat-Datum)"
End If
End Property
Public Property Get DateOfSig() As String
DateOfSig = sDateOfSig
End Property
Public Property Let IBAN(ByRef l11l1111l1111 As String)
lll1lll11111 = Replace(l11l1111l1111, " ", "")
If Parent.SubPain <> "CH01" Then
If checkIban(lll1lll11111) < 0 Then
Err.Raise vbObjectError + ll1l11l11ll11, "Sepa05", _
"Ung|fffd|ltige IBAN '" & lll1lll11111 & "'"
End If
End If
End Property
Public Property Get IBAN() As String
IBAN = lll1lll11111
End Property
Public Property Let BIC(ByRef l11l1111l1111 As String)
l1l1l1l11111 = l11l1111l1111
If Parent.SubPain <> "CH01" And Len(l1l1l1l11111) And Not TestString(l1l1l1l11111, l1llll11111l1) Then
Err.Raise vbObjectError + ll1l11ll1lll1, "Sepa05", _
"Ung|fffd|ltige BIC (L|fffd|nge bzw. enth|fffd|lt unerlaubte Zeichen, wie Leerzeichen) '" & l11l1111l1111 & "'"
End If
End Property
Public Property Get BIC() As String
BIC = l1l1l1l11111
End Property
Public Property Let Betrag(ByRef rvarBetrag As Variant)
mcBetr = RoundCur(rvarBetrag)
If mcBetr <= 0 Then
Err.Raise vbObjectError + ll1l1l1ll11l1, "Sepa05", _
"negativer oder kein Betrag"
End If
End Property
Public Property Get Betrag() As Variant
Betrag = mcBetr
End Property
Public Property Let VwZweck(ByRef l11l1111l1111 As String)
l11l1l11ll111 = Parent.l11l1ll1lll11(l11l1111l1111, 140&)
End Property
Public Property Get VwZweck() As String
VwZweck = l11l1l11ll111
End Property
Private Sub Class_Terminate()
End Sub
Attribute VB_Name = "Sepa06"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Public ll11ll111 As Currency
Public l1lll1ll1 As Collection
Public l1l1111ll1 As Date
Public l11111llll11 As String
Private Sub Class_Initialize()
ll11ll111 = 0
l1l1111ll1 = DateSerial(1999, 1, 1)
Set l1lll1ll1 = New Collection
End Sub
Public Sub Initialize(iInstanz As Integer)
l11111llll11 = "EX-SEPA-PMT-ID" & iInstanz & "-" & Format$(Now(), "yyyymmddHHMMSS")
End Sub
Public Property Get Count() As Long
Count = l1lll1ll1.Count
End Property
Public Sub Add(ByRef rlll111ll1ll11 As Sepa05)
l1lll1ll1.Add rlll111ll1ll11
ll11ll111 = ll11ll111 + rlll111ll1ll11.Betrag
End Sub
Public Sub Clear()
Set l1lll1ll1 = Nothing
Set l1lll1ll1 = New Collection
ll11ll111 = 0
End Sub
Private Sub Class_Terminate()
Set l1lll1ll1 = Nothing
End Sub
Attribute VB_Name = "Sepa10"
Option Explicit
Rem***************************************************************
Rem
Rem  Version 1.01.14
Rem  erstellt am 22.06.2013
Rem  ge|fffd|ndert am 27.03.2019
Rem
Rem  Autor:    Rolf Ruckdeschel
Rem            An der Dornzeile 22
Rem            D-87645 Schwangau
Rem  Homepage: http://www.roru.de/
Rem
Rem  Alle Rechte am Code, auch auszugsweise, liegen beim Autor.
Rem  Der Code darf nur mit Lizenz und in unver|fffd|nderter Form in
Rem  eigenen Anwendungen verwendet werden. Die Weitergabe des Code
Rem  ist untersagt.
Rem***************************************************************
#If TIMEOPT = 1 And Mac = False Then
Declare PtrSafe Function GetTickCount Lib "kernel32" () As Long
#End If
Private Const l2 = vbKeyPageUp
Sub WriteSepaFile()
If l1l111111lll1.Cells(40, 2) = "" Then _
MsgBox "Tragen Sie bitte Ihren Freischaltschl|fffd|ssel ein, um mehr wie 7 Datens|fffd|tze abzuarbeiten", vbExclamation, "Ex-Sepa: Warnung!"
SEPAFunc 1
End Sub
Public Function SEPAFunc(Optional ll11ll1111 As Integer = 1) As Long
Dim ll1111lll11 As Long
Dim l11ll11l1(31 To 46) As Long
Dim l1ll11l1l11 As Long
Dim l1l1lll11l1 As Long
Dim ll1lll1l11 As Long
Dim l11111llll1 As Integer
Dim i As Integer
Dim llll1ll1l1 As Integer
Dim iOpenFlag As Integer
Dim ll111lllll1 As Long
Dim l11l11l1l1l1 As Long
Dim l11l1111l1111 As String
Dim ll11ll111111 As String
Dim l111l1ll11ll1 As String
Dim lll1lll11 As Double
Dim l1l1ll1111l11 As Double
Dim l11l1l11ll11 As Date
#If TIMEOPT = 1 And Mac = False Then
Dim lTime1 As Long
Dim lTime2 As Long
lTime1 = GetTickCount
#End If
Dim l1l1111ll1111 As Worksheet
Dim l11lllll1ll11 As Worksheet
Dim l11ll11l11111 As Workbook
Dim l11ll1ll11l1 As clsSepaDaten
Set l1l1111ll1111 = ThisWorkbook.Worksheets("   ")
Application.Cursor = xlWait
On Error GoTo ErrHandle
With l1l111111lll1
If .Range("Z_AGEinreicher").Text = "" Or _
(.Range("Z_AGEinreicher").Text = "Max Mustermann" And Left(.Range("Z_AGIBAN").Text, 12) <> "DE2310000000") Then
If ll11ll1111 = 1 Then MsgBox "Bitte den 'Datei-Ersteller' der Sepa-Datei in Zelle B38 (Blatt 'SEPA') eintragen", vbCritical, "Ex-Sepa: Eingabefehler " & lll1111111ll1
SEPAFunc = lll1111111ll1
Exit Function
ElseIf (Len(.Range("Z_Sonst").Text) > 4) Then
If .Range("Z_Sonst").Text Like "*[ O#]*" Then
If ll11ll1111 = 1 Then MsgBox "Unerlaubte Zeichen im Freigabe-Schl|fffd|ssel", vbCritical, "Ex-Sepa: Eingabefehler " & ll1lll1l11111
SEPAFunc = ll1lll1l11111
Exit Function
End If
End If
.Range("Z_ErrDescr") = ""
.Range("Z_ErrZeile") = ""
.Range("Z_ErrSpalte") = ""
Set l11ll1ll11l1 = New clsSepaDaten
Select Case .Range("Z_Language").Text
Case "english"
l11ll1ll11l1.Language = 1
Case "espa|fffd|ol"
l11ll1ll11l1.Language = 2
Case Else
l11ll1ll11l1.Language = 0
End Select
l11ll1ll11l1.Init .Range("Z_Umlaute")
l11ll1ll11l1.SAA = .Range("Z_AuftragsArt").Text
l11ll1ll11l1.SubPain = .Range("Z_SubPain").Text
l11l1l11ll11 = Now
l11ll1ll11l1.oAG.KtoInh = .Range("Z_AGKtoInh").Text
If Len("l11lllll1ll11") <> Len("l1l1111ll1111") Or ((Now - l11l1l11ll11) * 100000 > 3) Then
l111l1111
End If
l11ll1ll11l1.oAG.IBAN = .Range("Z_AGIBAN").Text
l11ll1ll11l1.oAG.BIC = .Range("Z_AGBIC").Text
l11ll1ll11l1.oAG.CI = .Range("Z_AGCI").Text
l11ll1ll11l1.oAG.Adresse = .Range("Z_AGAdresse").Text
l11ll1ll11l1.oAG.Ort = ll1ll111ll1(.Range("Z_AGPLZ").Text, .Range("Z_AGOrt").Text)
l11ll1ll11l1.oAG.Land = .Range("Z_AGLand").Text
l11ll1ll11l1.oAG.Tel = .Range("Z_AGTel").Text
l11ll1ll11l1.oAG.InitgPtyName = .Range("Z_AGEinreicher").Text
l11ll1ll11l1.SeqTyp = .Range("Z_LastArt").Text
l11ll1ll11l1.CtgyPurp = .Range("Z_ZahlArtKat").Text
l11ll1ll11l1.Purp = .Range("Z_ZahlArt").Text
If Len(.Range("Z_AusfDat").Text) = 0 Then .Range("Z_AusfDat") = "01.01.1999"
If IsDate(.Range("Z_AusfDat")) Then
l11ll1ll11l1.AusfDatum = .Range("Z_AusfDat")
Else
Err.Raise vbObjectError + lll1l111l1ll1, "basClass", _
"Ung|fffd|ltiges Ausf|fffd|hrungsdatum bzw. das eingegebene Datum" & vbNewLine & "entspricht nicht dem zul|fffd|ssigen Datumsformat."
End If
l11ll1ll11l1.VwZweck = .Range("Z_DatVwZweck1").Text
If VarType(.Range("Z_BatchBooking")) = vbBoolean Then l11ll1ll11l1.BatchBooking = .Range("Z_BatchBooking")
l11ll1ll11l1.SepaCur = .Range("Z_Cur").Text
l11ll1ll11l1.Split = .Range("Z_Split").Value
l11ll1ll11l1.Suffix = .Range("Z_lfdDateiNr").Value
l11ll1ll11l1.ReturnPath = .Range("Z_AusgPfad").Text
If .Range("Z_BglZettel") > 0 Then l11ll1ll11l1.Bgz = 1
If .Range("Z_Journal") > 0 Then l11ll1ll11l1.SetJournal .Range("Z_JBVwZweck"), .Range("Z_JBMandNr")
ll1lll1l11 = .Range("Z_Kopfzeile")
ll11ll111111 = .Range("Z_Dateiname").Text
If ll11ll111111 = ThisWorkbook.Name And ActiveSheet.Name = "SEPA" Then
If ll11ll1111 = 1 Then MsgBox "Starten Sie bitte das Ex-Sepa Makro aus der Arbeitsmappe mit den Daten!", _
vbExclamation, "Ex-Sepa: Daten nicht gefunden"
Exit Function
End If
iOpenFlag = OpenFile(ll11ll111111, l11ll11l11111, True)
If iOpenFlag = -1 Then
If ll11ll1111 = 1 Then MsgBox "Die Daten-Datei '" & ll11ll111111 & "' ist nicht vorhanden, bzw." & vbNewLine & _
"auf den angegebenen Pfad kann nicht zugegriffen werden", vbExclamation, "Ex-Sepa: Dateifehler"
SEPAFunc = 1
Exit Function
ElseIf iOpenFlag = -2 Then
If ll11ll1111 = 1 Then MsgBox "Das Pfadtrennzeichen im Pfad '" & ll11ll111111 & "' ist ung|fffd|ltig", vbExclamation, "Ex-Sepa: Verzeichnis-Syntax ung|fffd|ltig"
SEPAFunc = 1
Exit Function
End If
Set l11lllll1ll11 = l11ll11l11111.ActiveSheet
l11ll11l1(ll11ll1l111l1) = ll1111lll1("Z_DatName", ll1lll1l11, l11lllll1ll11, True)
l1ll11l1l11 = ll1111lll1("Z_DatVName", ll1lll1l11, l11lllll1ll11)
l11ll11l1(ll11lll111l11) = ll1111lll1("Z_DatKtoInh", ll1lll1l11, l11lllll1ll11)
ll111lllll1 = l1l1111ll1111.Cells(50, l2)
l11ll11l1(ll1l1l11l1111) = ll1111lll1("Z_DatVwZweck", ll1lll1l11, l11lllll1ll11)
l11ll11l1(ll11llll11ll1) = ll1111lll1("Z_DatStrasse", ll1lll1l11, l11lllll1ll11)
l1l1lll11l1 = ll1111lll1("Z_DatPLZ", ll1lll1l11, l11lllll1ll11)
l11ll11l1(ll1l11111l111) = ll1111lll1("Z_DatOrt", ll1lll1l11, l11lllll1ll11)
l11ll11l1(ll1l111l1l1l1) = ll1111lll1("Z_DatLand", ll1lll1l11, l11lllll1ll11)
l11ll11l1(gintcErrDatEmail) = ll1111lll1("Z_DatEmail", ll1lll1l11, l11lllll1ll11)
If l11ll11l1(gintcErrDatEmail) < ll1ll1llllll1 Then l11ll1ll11l1.MailText = ThisWorkbook.Path & GetPathSep() & "sepa_mail.txt"
If Left(l11ll1ll11l1.SAA, 2) <> "CC" Then
l11ll11l1(ll1l1ll1l1l11) = ll1111lll1("Z_DatMandNr", ll1lll1l11, l11lllll1ll11, True)
l11ll11l1(ll1l1llll1ll1) = ll1111lll1("Z_DatMandDatum", ll1lll1l11, l11lllll1ll11, True)
Else
l11ll11l1(ll1l1ll1l1l11) = ll1ll1llllll1
l11ll11l1(ll1l1llll1ll1) = ll1ll1llllll1
End If
l11ll11l1(ll1l11l11ll11) = ll1111lll1("Z_DatIBAN", ll1lll1l11, l11lllll1ll11, True)
l11ll11l1(ll1l11ll1lll1) = ll1111lll1("Z_DatBIC", ll1lll1l11, l11lllll1ll11)
If l11ll1ll11l1.SeqTyp = "_MIX" Then
l11ll11l1(ll1ll11lll1l1) = ll1111lll1("Z_DatLastArt", ll1lll1l11, l11lllll1ll11, True)
Else
l11ll11l1(ll1ll11lll1l1) = ll1ll1llllll1
End If
If Left(.Range("Z_DatBetrag"), 1) = "#" Then
If IsNumeric(Mid(.Range("Z_DatBetrag"), 2)) Then
lll1lll11 = RoundCur(Mid(.Range("Z_DatBetrag"), 2))
Else
Err.Raise vbObjectError + lll11llll1l11, "basClass", _
"Kein g|fffd|ltiger Festbetrag # (z.B. Textzeichen)"
End If
Else
lll1lll11 = 0
l11ll11l1(ll1l1l1ll11l1) = ll1111lll1("Z_DatBetrag", ll1lll1l11, l11lllll1ll11, True)
End If
If Right(.Range("Z_EndToEndID"), 1) = "#" Then l11ll1ll11l1.InstrId = "INS"
If Left(.Range("Z_EndToEndID"), 1) = "#" Then
l111l1ll11ll1 = Replace(.Range("Z_EndToEndID"), "#", "")
l11ll11l1(ll1ll111ll111) = ll1ll1llllll1
Else
l11ll11l1(ll1ll111ll111) = ll1111lll1("Z_EndToEndID", ll1lll1l11, l11lllll1ll11)
End If
End With
l1l1ll1111l11 = lll1lll11
l11l11l1l1l1 = ll1lll1l11 + 1
Do While (Len(l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(ll11ll1l111l1)).Text) > 0 Or Len(l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(ll1l11l11ll11)).Text) > 0) And l11l11l1l1l1 <= ll111lllll1
If lll1lll11 = 0 Then
If IsNumeric(l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(ll1l1l1ll11l1))) Then
l1l1ll1111l11 = l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(ll1l1l1ll11l1))
Else
Err.Raise vbObjectError + ll1l1l1ll11l1, "basClass", _
"Kein g|fffd|ltiger Betrag (z.B. als Text mit Leerzeichen)"
End If
End If
If Not l11lllll1ll11.Rows(l11l11l1l1l1).Hidden And Len(l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(ll1l11l11ll11)).Text) Then
l11ll1ll11l1.Add ll1l1l11l11(l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(ll11ll1l111l1)).Text, l11lllll1ll11.Cells(l11l11l1l1l1, l1ll11l1l11).Text), _
l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(ll11lll111l11)).Text, _
l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(ll1l11l11ll11)).Text, _
l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(ll1l11ll1lll1)).Text, _
l1l1ll1111l11, _
l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(ll1l1l11l1111)).Text, _
IIf(Len(l111l1ll11ll1), l111l1ll11ll1 & Format(l11l11l1l1l1 - ll1lll1l11, "00000"), l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(ll1ll111ll111)).Text), _
l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(ll11llll11ll1)).Text, _
ll1ll111ll1(l11lllll1ll11.Cells(l11l11l1l1l1, l1l1lll11l1).Text, l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(ll1l11111l111)).Text), _
l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(ll1l111l1l1l1)).Text, _
l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(ll1l1ll1l1l11)).Value, _
IIf(IsDate(l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(ll1l1llll1ll1))), l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(ll1l1llll1ll1)), ""), _
l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(ll1ll11lll1l1)).Text, _
l11lllll1ll11.Cells(l11l11l1l1l1, l11ll11l1(gintcErrDatEmail)).Text
End If
If l11l11l1l1l1 Mod 1000 = 0 Then DoEvents
If l11l11l1l1l1 Mod 100 = 0 Then Application.StatusBar = "Zeile " & l11l11l1l1l1
l11l11l1l1l1 = l11l11l1l1l1 + 1
Loop
#If TIMEOPT = 1 And Mac = False Then
lTime2 = GetTickCount
#End If
Application.StatusBar = "Zeile " & l11l11l1l1l1
If l11l11l1l1l1 > ll1lll1l11 + 1 Then
ll1111lll11 = l11ll1ll11l1.WriteXML
Else
If ll11ll1111 = 1 Then MsgBox "Der Datensatz in Zeile " & ll1lll1l11 + 1 & " ist ung|fffd|ltig!" & Chr(13) & "Bitte beachten Sie das Abbruchkriterium (siehe Anleitung)!", vbCritical, "Fehler " & ll11ll1111111
End If
If iOpenFlag = 1 Then
l11ll11l11111.Close False
Else
l1l111111lll1.Activate
End If
#If TIMEOPT = 1 And Mac = False Then
Debug.Print GetTickCount - lTime1, GetTickCount - lTime2
#End If
If Not SEPAFunc And ll11ll1111 = 1 Then
MsgBox l11ll1ll11l1.MLT(0), vbInformation + vbOKOnly, "Ex-Sepa V" & l1l111111lll1.Range("Z_Version")
SEPAFunc = 0
End If
Application.StatusBar = ""
#If MAC_OFFICE_VERSION >= 15 Then
#End If
If l1l111111lll1.Range("Z_Journal") = 2 Then
#If Mac Then
l1l111111lll1.Range("Z_Journal") = 1
MsgBox "Das Journal kann am Mac nicht automatisch ge|fffd|ffnet werden"
#Else
Shell "notepad.exe " & l11ll1ll11l1.JournalFullName, vbNormalFocus
#End If
End If
If l1l111111lll1.Range("Z_lfdDateiNr") > 0 Then l1l111111lll1.Range("Z_lfdDateiNr") = l11ll1ll11l1.Suffix + 1
Set l11ll1ll11l1 = Nothing
Application.Cursor = xlDefault
Exit Function
ErrHandle:
Application.Cursor = xlDefault
SEPAFunc = Err.Number - vbObjectError
Application.EnableEvents = False
l1l111111lll1.Range("Z_ErrDescr") = Err.Description
If (SEPAFunc > 30 And SEPAFunc < 45) Or Err.Number = 13 Then
If Err.Number = 13 Then
i = 1
While IsError(l11lllll1ll11.Cells(l11l11l1l1l1, i)) = False And i < 4000
i = i + 1
Wend
Else
i = l11ll11l1(SEPAFunc)
End If
l1l111111lll1.Range("Z_ErrZeile") = l11l11l1l1l1
l1l111111lll1.Range("Z_ErrSpalte") = i
l11lllll1ll11.Activate
l11lllll1ll11.Cells(l11l11l1l1l1, i).Activate
ElseIf Err.Number = 13 Then
l11lllll1ll11.Activate
l11lllll1ll11.Rows(l11l11l1l1l1).Select
Else
l1l111111lll1.Activate
End If
Application.EnableEvents = True
If ll11ll1111 = 1 Then
If Err.Number = 13 Then
#If Mac Then
MsgBox "in Zeile " & l11l11l1l1l1 & " der Datendatei " & "'" & ll11ll111111 & "' (siehe Fehlercodes).", vbCritical, "Ex-Sepa: Datensatz-Fehler 0"
#Else
MsgBox Err.Description & vbNewLine & vbNewLine & "in Zeile " & l11l11l1l1l1 & " der Datendatei " & "'" & ll11ll111111 & "'." & vbNewLine & vbNewLine & _
"Bitte Fehler (z.B. #Wert) in Zelle beheben!", vbCritical, "Ex-Sepa: Datensatz-Fehler 0"
#End If
ElseIf Err.Number > 0 And Err.Number < 4096 Then
MsgBox Err.Description & vbNewLine & "Source: " & Err.Source, vbCritical, "Fehler " & Err.Number
ElseIf SEPAFunc > 30 Then
#If Mac Then
MsgBox "in Zeile " & l11l11l1l1l1 & " der Datendatei " & "'" & ll11ll111111 & "' (siehe Fehlercodes).", vbCritical, "Ex-Sepa: Datensatz-Fehler " & SEPAFunc
#Else
MsgBox Err.Description & vbNewLine & "in Zeile " & l11l11l1l1l1 & " der Datendatei " & "'" & ll11ll111111 & "'", vbCritical, "Ex-Sepa: Datensatz-Fehler " & SEPAFunc
#End If
Else
MsgBox Err.Description, vbCritical, "Ex-Sepa: Eingabe-Fehler " & SEPAFunc
End If
End If
Application.Cursor = xlDefault
End Function
Attribute VB_Name = "Sepa11"
Option Explicit
Rem ***********************************************************
Public Function CheckBic(Optional ll11ll1111 As Integer = 1) As Integer
Rem Version 1.00.06
Rem erstellt 22.04.2012 von Rolf Ruckdeschel
Rem ge|fffd|ndert 20.01.2017 von Rolf Ruckdeschel
Rem ***********************************************************
Dim i As Integer, ll1lll1l11 As Integer
Dim l11l1l11ll1 As Integer, l11l1l11ll1BLZ As Integer, iSpBLZ As Integer
Dim l11lll1l1l1 As Integer
Dim l1l1111ll11 As Integer
Dim l11ll11l111 As Integer
Dim iLenBLZ As Integer
Dim iOpenFlag As Integer
Dim l11l11l1l1l1 As Long
Dim arrSpBLZ() As Variant
Dim l11l1111l1111 As String, sBLZ As String, s As String
Dim ll11ll111111 As String, l1l1ll1111l1 As String
Dim lll111ll1ll1 As String
Dim c As Range
Dim wbDaten As Workbook
Dim l11l1lllllll1 As Workbook
Dim l11llll11l1l1 As Worksheet, lll1111l1l111 As Worksheet
arrSpBLZ = Array("Bankleitzahl", "Bank-leitzahl", "BLZ")
CheckBic = 0
iLenBLZ = 0
ll1lll1l11 = l1l111111lll1.Range("Z_Kopfzeile")
ll11ll111111 = l1l111111lll1.Range("Z_Dateiname").Text
l1l1ll1111l1 = IIf(InStr(l1l111111lll1.Range("Z_BLZDatei"), GetPathSep()), "", ThisWorkbook.Path & GetPathSep()) & l1l111111lll1.Range("Z_BLZDatei").Text
If Len(Dir(l1l1ll1111l1)) > 0 Then
iOpenFlag = OpenFile(l1l1ll1111l1, l11l1lllllll1, True)
If iOpenFlag < 0 Then
CheckBic = 2
If ll11ll1111 Then MsgBox "Die Daten-Datei '" & l1l1ll1111l1 & "' kann nicht ge|fffd|ffnet werden!", vbExclamation
Exit Function
End If
Set l11llll11l1l1 = l11l1lllllll1.ActiveSheet()
If InStr(Right(l1l1ll1111l1, 7), "AT.") > 0 Then
iLenBLZ = 5
Else
iLenBLZ = 8
End If
On Error Resume Next
i = 0
Do
iSpBLZ = l11llll11l1l1.Rows(1).Find(What:=arrSpBLZ(i), LookAt:=xlWhole).Column
i = i + 1
Loop While i <= UBound(arrSpBLZ) And iSpBLZ < 1
If iSpBLZ = 0 Then GoTo ErrorNoTopic
On Error GoTo ErrorNoTopic
l11l1l11ll1BLZ = l11llll11l1l1.Rows(1).Find(What:="BIC", LookAt:=xlWhole).Column
On Error GoTo 0
Else
CheckBic = 2
If ll11ll1111 = 1 Then MsgBox "Die Daten-Datei '" & l1l1ll1111l1 & "' ist im Ex-Sepa Verzeichnis nicht vorhanden !", vbExclamation
Exit Function
End If
If OpenFile(ll11ll111111, wbDaten, True) < 0 Then
If ll11ll1111 Then MsgBox "Die Daten-Datei '" & ll11ll111111 & "' ist nicht vorhanden !", vbExclamation
CheckBic = 1
Exit Function
End If
l11l11l1l1l1 = ll1lll1l11
wbDaten.Activate
Set lll1111l1l111 = wbDaten.ActiveSheet()
On Error GoTo l1l1l1l111D
l11l1111l1111 = l1l111111lll1.Range("Z_DatBIC").Text
l11l1l11ll1 = lll1111l1l111.Rows(ll1lll1l11).Find(What:=l11l1111l1111, LookAt:=xlWhole).Column
l11l1111l1111 = l1l111111lll1.Range("Z_DatIBAN").Text
l11lll1l1l1 = lll1111l1l111.Rows(ll1lll1l11).Find(What:=l11l1111l1111, LookAt:=xlWhole).Column
If l1l111111lll1.Range("Z_AuftragsArt").Text <> "|fffd|berweisung" And l1l111111lll1.Range("Z_AuftragsArt").Text <> "CCU" Then
l11l1111l1111 = l1l111111lll1.Range("Z_DatMandNr").Text
l1l1111ll11 = lll1111l1l111.Rows(ll1lll1l11).Find(What:=l11l1111l1111, LookAt:=xlWhole).Column
l11l1111l1111 = l1l111111lll1.Range("Z_DatMandDatum")
l11ll11l111 = lll1111l1l111.Rows(ll1lll1l11).Find(What:=l11l1111l1111, LookAt:=xlWhole).Column
End If
On Error GoTo 0
l11l11l1l1l1 = l11l11l1l1l1 + 1
Do While lll1111l1l111.Cells(l11l11l1l1l1, 1) <> ""
If lll1111l1l111.Cells(l11l11l1l1l1, l11lll1l1l1).Text <> "" Then
l11l1111l1111 = Replace(lll1111l1l111.Cells(l11l11l1l1l1, l11lll1l1l1).Text, " ", "")
If checkIban(l11l1111l1111) < 0 Then
GoSub ERROR_IBAN
ElseIf (iLenBLZ = 8 And Left(l11l1111l1111, 2) = "DE") Or (iLenBLZ = 5 And Left(l11l1111l1111, 2) = "AT") Then
sBLZ = Mid(l11l1111l1111, 5, iLenBLZ)
Set c = l11llll11l1l1.Columns(iSpBLZ).Find(sBLZ, LookIn:=xlValues, LookAt:=xlWhole)
If c Is Nothing Then
GoSub ERROR_IBAN
ElseIf Len(l1l111111lll1.Range("Z_DatBIC")) Then
l11l1111l1111 = lll1111l1l111.Cells(l11l11l1l1l1, l11l1l11ll1).Text
If Len(l11l1111l1111) = 8 Then l11l1111l1111 = l11l1111l1111 & "XXX"
If Not TestString(l11l1111l1111, l1llll11111l1) Or l11llll11l1l1.Cells(c.Row, l11l1l11ll1BLZ) <> l11l1111l1111 Then
i = 1
Do While l11llll11l1l1.Cells(c.Row + i, iSpBLZ) = sBLZ
If l11llll11l1l1.Cells(c.Row + i, l11l1l11ll1BLZ) = l11l1111l1111 Then
i = 0
Exit Do
End If
i = i + 1
Loop
If i > 0 Then
lll1111l1l111.Cells(l11l11l1l1l1, l11l1l11ll1).Activate
lll1111l1l111.Cells(l11l11l1l1l1, l11l1l11ll1).Interior.ColorIndex = 36
CheckBic = 3
If ll11ll1111 = 1 Then
If MsgBox("BIC in Zeile " & l11l11l1l1l1 & " ist ung|fffd|ltig bzw. enth|fffd|lt Leerzeichen! Bitte pr|fffd|fen.", vbOKCancel, "Ung|fffd|ltige BIC") = vbCancel Then
Exit Function
End If
End If
End If
End If
End If
End If
If l1l111111lll1.Range("Z_AuftragsArt").Text <> "|fffd|berweisung" And l1l111111lll1.Range("Z_AuftragsArt") <> "CCU" Then
If lll1111l1l111.Cells(l11l11l1l1l1, l1l1111ll11) = "" Or _
(lll1111l1l111.Cells(l11l11l1l1l1 - 1, l1l1111ll11) = lll1111l1l111.Cells(l11l11l1l1l1, l1l1111ll11) And _
lll1111l1l111.Cells(l11l11l1l1l1 - 1, l11lll1l1l1).Text <> lll1111l1l111.Cells(l11l11l1l1l1, l11lll1l1l1).Text) Then
lll1111l1l111.Cells(l11l11l1l1l1, l1l1111ll11).Activate
lll1111l1l111.Cells(l11l11l1l1l1, l1l1111ll11).Interior.ColorIndex = 36
CheckBic = 5
If ll11ll1111 = 1 Then
If MsgBox("Mand-ID in Zeile " & l11l11l1l1l1 & " ist zweimal vergeben oder leer! Bitte pr|fffd|fen.", vbOKCancel) = vbCancel Then
Exit Function
End If
End If
End If
End If
End If
l11l11l1l1l1 = l11l11l1l1l1 + 1
Loop
If iOpenFlag = 1 Then l11l1lllllll1.Close
If CheckBic = 0 And Not wbDaten Is Nothing Then wbDaten.Close False
If ll11ll1111 = 1 Then MsgBox "Die Plausibilit|fffd|tspr|fffd|fung der Stammdaten ist abgeschlossen", vbOKOnly
Exit Function
l1l1l1l111D:
CheckBic = 7
If ll11ll1111 = 1 Then MsgBox "In der Kopfzeile (Zeile " & l11l11l1l1l1 & ") der Datendatei kann die Spalte '" & l11l1111l1111 & "' nicht gefunden werden!" & Chr(13) & _
"|fffd|berpr|fffd|fen Sie die in Ex-Sepa eingetragenen Spaltennamen (B17-B30) und den Wert der 'Kopfzeile' (B27).", vbOKOnly, "Fehler in Kopfzeile der Datendatei"
If iOpenFlag = 1 Then l11l1lllllll1.Close
Exit Function
ErrorNoTopic:
If ll11ll1111 = 1 Then MsgBox "In der Kopfzeile der BLZ-Datei kann der Eintrag 'Bankleitzahl' bzw. 'BIC' nicht gefunden werden!" & Chr(13) & _
"|fffd|berpr|fffd|fen Sie die erste Zeile der BLZ-Datei " & l1l1ll1111l1 & " auf diese beiden Eintr|fffd|ge.", vbOKOnly
If iOpenFlag = 1 Then l11l1lllllll1.Close
CheckBic = 8
Exit Function
ERROR_IBAN:
lll1111l1l111.Cells(l11l11l1l1l1, l11lll1l1l1).Activate
lll1111l1l111.Cells(l11l11l1l1l1, l11lll1l1l1).Interior.ColorIndex = 36
CheckBic = 4
If ll11ll1111 = 0 Then Return
If MsgBox("Iban in Zeile " & l11l11l1l1l1 & " ist ung|fffd|ltig!", vbOKCancel) = vbOK Then Return
Close
End Function
Attribute VB_Name = "Sepa12"
Rem ***********************************************************
Rem  Herzlichen Gl|fffd|ckwunsch zum Knacken der popeligen Code-Sicherung.
Rem  Da das Programm zum Selbstkostenpreis angeboten wird, habe ich
Rem  jedoch nichts gegen eine kleine Spende zur Lizensierung :-)
Rem  Selbstverst|fffd|ndlich gilt auch f|fffd|r den Sourcecode das Copyright!
Rem
Rem  Achtung: Dieses Programm l|fffd|uft nicht unter Open-Office. Verwenden
Rem  Sie daf|fffd|r oo-sepa.ods, welches an OO angepasst wurde.
Rem
Rem  Version 1.00.13
Rem
Rem  Autor: Rolf Ruckdeschel
Rem
Rem  erstellt 04.03.2013
Rem  ge|fffd|ndert 01.07.2019
Rem ***********************************************************
Option Explicit
Private Const l1 = vbKeySpace
Private Const l2 = vbKeyPageUp
Public Function GetAusfDatum(Optional ByVal l111l111111 As Integer = 0) As Date
GetAusfDatum = GetExecDate(l1l111111lll1.Range("Z_AuftragsArt"), l1l111111lll1.Range("Z_LastArt"), l111l111111)
End Function
Public Function l111l1111()
Dim l1l1111ll1111 As Worksheet
Set l1l1111ll1111 = ThisWorkbook.Worksheets("   ")
GetPrgVersion 1
If l1l1111ll1111.Cells(1, l2) <> "" Then
l1l1111ll1111.Protect l1l1111ll1111.Cells(1, l2) & "*10", , , , True
l1l1111ll1111.Columns(l2).Delete
l1l1111ll1111.Columns(l1).Delete
ThisWorkbook.Save
End If
End Function
Public Function getBLZFileName()
Dim l111111ll1l11 As String
Dim l111111ll1l11Sep As String
Dim l11111llll1 As Integer
Dim varPath As Variant
#If Mac Then
MsgBox "Function wird von MAC nicht unterst|fffd|tzt. Bitte geben Sie den korrekten Pfad von Hand ein."
#Else
l111111ll1l11Sep = GetPathSep()
#If VBA7 Then
l111111ll1l11 = IIf(InStrRev(Range("Z_BLZDatei"), l111111ll1l11Sep), Range("Z_BLZDatei"), ThisWorkbook.Path & l111111ll1l11Sep)
varPath = DateiAuswaehlen(msoFileDialogFilePicker, l111111ll1l11, "BLZ-Datei")
#Else
varPath = Application.GetOpenFilename("Daten-Dateien (*.xls*;*.csv;*.txt), *.xls*;*.csv;*.txt", 1, "Datendatei |fffd|bernehmen")
#End If
l11111llll1 = InStrRev(varPath, l111111ll1l11Sep)
If l11111llll1 > 1 Then If Left(varPath, l11111llll1 - 1) = ThisWorkbook.Path Then varPath = Mid(varPath, l11111llll1 + 1)
If varPath <> False Then
Range("Z_BLZDatei") = varPath
End If
#End If
End Function
Public Function getCell(iRow As Integer, iCol As Integer) As String
getCell = l1l111111lll1.Cells(iRow, iCol)
End Function
Public Function ll1111lll1(llllll11lll1 As String, ll1lll1l11 As Long, l11lllll1ll11 As Worksheet, Optional blnPflicht As Boolean = False) As Long
Dim i As Integer
Dim sFieldName As String
Dim rgCell As Range
sFieldName = l1l111111lll1.Range(llllll11lll1)
If Len(sFieldName) Then
If Right(sFieldName, 1) = "#" Then sFieldName = Replace(sFieldName, "#", "")
Set rgCell = l11lllll1ll11.Rows(ll1lll1l11).Find(What:=sFieldName, LookAt:=xlWhole, SearchDirection:=xlNext)
If Not rgCell Is Nothing Then
ll1111lll1 = rgCell.Column
Else
ll1111lll1 = -1
Err.Raise vbObjectError + ll11ll1111111, "clsKonto", _
"Der Feldbezeicher f|fffd|r '" & l1l111111lll1.Range(llllll11lll1).Offset(0, -1) & _
"' ('" & sFieldName & "') kann in der Kopfzeile" & vbNewLine & _
"(Zeile " & ll1lll1l11 & ") Ihrer Datendatei nicht gefunden werden"
End If
Else
ll1111lll1 = ll1ll1llllll1
If blnPflicht Then
Err.Raise vbObjectError + ll11ll1111111, "clsKonto", _
"Das Pflichtfeld '" & l1l111111lll1.Range(llllll11lll1).Offset(0, -1) & "' ist nicht definiert." & vbNewLine & _
"Bitte tragen Sie die Spalten|fffd|berschrift ein."
End If
End If
End Function
Public Function OpenFile(ByVal sFilePath As String, ByRef rwbDatFile As Workbook, bReadOnly As Boolean) As Integer
Dim sFilename As String
Dim lll11llll1l1 As String
Dim i As Integer
If CheckPathSeparator(sFilePath) Then
OpenFile = -2
Exit Function
End If
sFilename = Mid(sFilePath, InStrRev(sFilePath, GetPathSep()) + 1)
lll11llll1l1 = Mid(sFilePath, InStrRev(sFilePath, ".") + 1)
i = Workbooks.Count
Do While i > 0
If Workbooks(i).Name = sFilename Then
Set rwbDatFile = Workbooks(sFilename)
Exit Do
End If
i = i - 1
Loop
OpenFile = 0
If i <= 0 Then
If InStr(sFilePath, GetPathSep()) = 0 Then
sFilePath = ThisWorkbook.Path & GetPathSep() & sFilePath
End If
If PathExists(0, sFilePath) = True Then
#If Mac Then
On Error Resume Next
Set rwbDatFile = Workbooks.Open(Filename:=sFilePath, ReadOnly:=bReadOnly, Format:=4)
OpenFile = IIf(Err = 0, 1, -1)
Err.Clear
#ElseIf Not VBA7 Then
Set rwbDatFile = Workbooks.Open(Filename:=sFilePath, ReadOnly:=bReadOnly, Format:=4)
OpenFile = 1
#Else
Set rwbDatFile = Workbooks.Open(Filename:=sFilePath, ReadOnly:=bReadOnly, Format:=4, Local:=True)
OpenFile = 1
#End If
Else
OpenFile = -1
End If
End If
End Function
Public Function l1ll11l1l1(lll1llll111l1 As Range)
Dim i As Integer, ll1lll1l11 As Integer, iSpalte As Integer
Dim iOpenFlag As Integer
Dim l111111ll1l11 As String
Dim l11l1111l1111 As String
Dim l1l1111ll1111en As Worksheet
Dim l11ll11l11111 As Workbook
Set l1l1111ll1111en = ThisWorkbook.Sheets("Listen")
l111111ll1l11 = l1l111111lll1.Range("Z_Dateiname")
If InStr(l111111ll1l11, GetPathSep()) = 0 Then l111111ll1l11 = ThisWorkbook.Path & GetPathSep() & l111111ll1l11
ll1lll1l11 = l1l111111lll1.Range("Z_Kopfzeile")
If ll1lll1l11 = 0 Then ll1lll1l11 = 1
Application.ScreenUpdating = False
iOpenFlag = OpenFile(l111111ll1l11, l11ll11l11111, True)
If iOpenFlag < 0 Then
Application.ScreenUpdating = True
l1l111111lll1.Range("Z_Dateiname").Activate
MsgBox "Die Datendatei '" & l111111ll1l11 & "' kann nicht gefunden werden." & vbNewLine & vbNewLine & "Bitte |fffd|berpr|fffd|fen Sie den eingegebenen Pfad und Dateinamen zu Ihrer Datendatei.", vbCritical & vbOK, "Fehler in Zelle B13"
Exit Function
End If
i = 1
While l11ll11l11111.ActiveSheet.Cells(ll1lll1l11, i) <> ""
l1l1111ll1111en.Cells(i + 1, 20) = l11ll11l11111.ActiveSheet.Cells(ll1lll1l11, i)
i = i + 1
Wend
iSpalte = 1
If ll1lll1l11 > 1 Then
While l11ll11l11111.ActiveSheet.Cells(ll1lll1l11 - 1, iSpalte) <> ""
iSpalte = iSpalte + 1
Wend
End If
If i < 4 Or iSpalte = i Then
l11ll11l11111.ActiveSheet.Cells(ll1lll1l11, i).Activate
l11l1111l1111 = "In Zeile " & ll1lll1l11 & " Ihrer Datendatei '" & l111111ll1l11 & "'," & vbNewLine & _
"aktives Tabellenblatt '" & l11ll11l11111.ActiveSheet.Name & "'" & vbNewLine & _
"konnte keine passende Kopfzeile gefunden werden." & vbNewLine & vbNewLine & _
"Achtung! Die Spalte " & i & " hat keine |fffd|berschrift (fehlender 'Feldname')." & vbNewLine & vbNewLine & _
"Bitte geben Sie in Zelle E27 von Ex-Sepa die richtige Zeile an bzw. " & vbNewLine & _
"aktivieren Sie das Tabellenblatt mit den Daten Ihrer Datentabelle."
MsgBox l11l1111l1111, vbExclamation + vbOKOnly, "Fehler: Keine g|fffd|ltige Kopfzeile in Datendatei gefunden"
Else
If iOpenFlag = 1 Then
l11ll11l11111.Close False
End If
End If
While l1l1111ll1111en.Cells(i + 1, 20) <> ""
l1l1111ll1111en.Cells(i + 1, 20) = ""
i = i + 1
Wend
Application.ScreenUpdating = True
End Function
Function l1lll1ll11(ByRef l11l1l11ll11 As Date, ll11ll1111 As Integer) As Date
Dim l11ll11l1111 As Date
l11ll11l1111 = GetAusfDatum()
If l11l1l11ll11 < l11ll11l1111 Then
If l11l1l11ll11 > 0 Then
l1l111111lll1.Range("Z_AusfDat").Activate
If ll11ll1111 Then MsgBox "Das angegebene Ausf|fffd|hrungsdatum kollidiert mit der zul|fffd|ssigen" & Chr(13) & _
"minimalen Vorlaufsfrist der Banken!" & Chr(13) & Chr(13) & _
"Fr|fffd|hest m|fffd|glicher Termin: " & l11ll11l1111, vbCritical, "WARNUNG: ung|fffd|ltiges Ausf|fffd|hrungsdatum"
Else
End If
End If
l1lll1ll11 = l11l1l11ll11
End Function
Public Function llll111l11ll1(ByVal llll11l11l111 As String, ByVal llll11ll1l1l1 As String) As String
Dim strResult As String
Dim i As Long
Dim iChar As Integer
Dim cfc() As Integer
ReDim cfc(1 To Len(llll11ll1l1l1))
For i = 1 To UBound(cfc)
iChar = Asc(Right(llll11ll1l1l1, Len(llll11ll1l1l1) - i + 1))
Select Case iChar
Case 48 To 122: cfc(i) = iChar - 48
Case Else: cfc(i) = 41
End Select
Next i
For i = 1 To Len(llll11l11l111)
strResult = strResult & _
Chr(addToIndex(Asc(Right(llll11l11l111, Len(llll11l11l111) - i + 1)), VirtPos(i, cfc)))
Next i
llll111l11ll1 = strResult
End Function
Private Function VirtPos(i As Long, A() As Integer) As Integer
If i > UBound(A) Then
VirtPos = VirtPos(i - UBound(A), A)
Else
VirtPos = A(i)
End If
End Function
Private Function addToIndex(i As Integer, j As Integer) As Integer
Select Case i
Case 32
i = 95
Case 228
i = 97
Case 246
i = 111
Case 252
i = 117
Case 196
i = 65
Case 214
i = 79
Case 220
i = 85
Case 223
i = 115
Case Is > 122, Is < 48, 59 To 63
i = 95
End Select
i = i + j
Select Case i
Case 48 To 58, 64 To 122
addToIndex = i
Case 59 To 63
addToIndex = 5 + i
Case Is > 122
addToIndex = i - 123 + 48
Case Else
MsgBox "Fehler"
End Select
End Function
Public Function GetPrgVersion(ll11ll1111 As Integer) As String
Dim l11l1111l1111 As String
Application.ScreenUpdating = False
l11l1111l1111 = ThisWorkbook.Worksheets("   ").Cells(42, l1 + ll11ll1111)
Workbooks.OpenText Filename:=l11l1111l1111, DataType:=xlDelimited, Tab:=True
GetPrgVersion = ActiveWorkbook.Sheets(1).Cells(1, 1).Text
ActiveWorkbook.Close SaveChanges:=False
Application.ScreenUpdating = True
End Function
Public Function GetOptions()
#If Mac Then
MsgBox "Diese Funktion wird leider am Mac nicht unterst|fffd|tzt." & Chr(13) & _
"F|fffd|r Updates schauen Sie bitte unter Download auf www.ex-sepa.de"
#Else
frmOptionen.Show
#End If
End Function
Private Sub CountryCode()
Dim iCountryCode As Integer
iCountryCode = Application.International(xlCountryCode)
If iCountryCode = 1 Then
MsgBox ("Hello")
ElseIf iCountryCode = 34 Then
MsgBox ("Hola")
ElseIf iCountryCode = 49 Then
MsgBox ("Hallo Welt")
End If
End Sub
Private Function CellNamesExists() As Integer
Dim objName As Name
CellNamesExists = 0
For Each objName In ThisWorkbook.Names
If objName.Name = ActiveSheet.Name & "!Print_Area" Then
CellNamesExists = ThisWorkbook.Names.Item.Index
Exit For
End If
Next
MsgBox "Zellnamen " & CellNamesExists & " gibt 's" & IIf(CellNamesExists, "!", " nicht!")
End Function
Public Function DateiAuswaehlen(oFileDialogType As Integer, l111111ll1l11 As String, sTitle As String) As Variant
#If Mac Then
MsgBox "Diese Funktion wird am MAC nicht unterst|fffd|tzt! Bitte korrekten Datenfile Namen von Hand eintragen."
#Else
Dim vrtSelectedItem As Variant
Dim fd As FileDialog
Dim bolOeffnen As Boolean
Set fd = Application.FileDialog(oFileDialogType)
With fd
.Title = sTitle & " ausw|fffd|hlen"
.InitialFileName = l111111ll1l11
If oFileDialogType <> msoFileDialogFolderPicker Then
.Filters.Clear
.Filters.Add "Dateifilter", "*.xl*" & IIf(sTitle = "Datendatei", "; *.csv; *.txt", ""), 1
End If
.AllowMultiSelect = False
bolOeffnen = .Show
If bolOeffnen = True Then
For Each vrtSelectedItem In .SelectedItems
DateiAuswaehlen = vrtSelectedItem
Next vrtSelectedItem
Else:
DateiAuswaehlen = False
End If
End With
#End If
End Function
Sub InsertValuesOnly()
Attribute InsertValuesOnly.VB_Description = "Im Blatt Ex-Sepa werden nur die Werte ohne Formatierung eingef|fffd|gt."
Attribute InsertValuesOnly.VB_ProcData.VB_Invoke_Func = "v\n14"
Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, _
Transpose:=False
End Sub
Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "clsSepaDaten"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Rem **************************************************************
Rem
Rem  Version 1.00.48
Rem
Rem  erstellt am 22.06.2013
Rem  ge|fffd|ndert am 03.12.2019
Rem
Rem  Autor:    Rolf Ruckdeschel
Rem            An der Dornzeile 22
Rem            D-87645 Schwangau
Rem  Homepage: http://www.roru.de/
Rem
Rem  Alle Rechte am Code, auch auszugsweise, liegen beim Autor.
Rem  Der Code darf nur mit Lizenz und in unver|fffd|nderter Form in
Rem  eigenen Anwendungen verwendet werden. Die Weitergabe des Code
Rem  und das Debuggen der Code-Module ist untersagt. Eine
Rem  quelloffene Version dieses Programmes ist k|fffd|uflich erh|fffd|ltlich.
Rem  ACHTUNG: |fffd| 202a StGB - "Aussp|fffd|hen von Daten" wird bei
Rem  unbefugtem Zugriff auf den Code geandet!
Rem ***************************************************************
Private miCharset As Integer
#If EXCEL Then
Private Const l1 = vbKeySpace
Private Const l2 = vbKeyPageUp
Private ml1l1111ll1111 As Worksheet
#End If
Public oAG As Sepa03
Private ml11lllll1ll1 As Sepa04
Private l1l1l1l1(4) As New Sepa06
Private lll1111l1l11 As String
Private mlllll1l1ll11 As String
Private lll11l1ll11 As String
Private ll11ll11111(4) As String
Private msExtCtgyPurp As String
Private msExtPurp As String
Private ll1lll1l1111 As String
Private ll1l1ll1l1l1 As String
Private l1111ll1llll1 As String
Private l111l1ll11ll1 As String
Private msInstrId As String
Private l1l11l11l1ll1 As Integer
Private l1111l1llll1 As String
Private lll1111l1l1 As Integer
Private mlll11llll1l1 As String
Private l1l1111ll1 As Date
Private ml11l1l11ll111 As String
Private l111111ll1l1 As String
Private msCurrency As String
Private miSubPain As Integer
Private msMailText As String
Private ll1l11111l1 As Date
Private miLanguage As Integer
Private miBgz As Integer
Private ll1lll1l111 As Integer
Private miSpezifikation As Integer
Private lllll1l1ll1 As Long
Private lll11l1ll1111 As Long
Private lll111l11l1l1 As Long
Private Sub Class_Initialize()
Dim i As Integer
ll11ll11111(0) = "_MIX"
ll11ll11111(1) = "FRST"
ll11ll11111(2) = "RCUR"
ll11ll11111(3) = "FNAL"
ll11ll11111(4) = "OOFF"
MsgId = "EX-SEPA-MsgID-" & Format$(Now(), "yyyymmddHHMMSS")
lll1111l1l1 = -1
mlll11llll1l1 = ".xml"
lllll1l1ll1 = 99999
BatchBooking = True
l1l1111ll1 = DateSerial(1999, 1, 1)
For i = 0 To 4
l1l1l1l1(i).Initialize i
Next i
msCurrency = "EUR"
Charset = 2
Set oAG = New Sepa03
oAG.Parent = Me
#If EXCEL Then
Set ml1l1111ll1111 = ThisWorkbook.Worksheets("   ")
#End If
End Sub
Public Sub Init(iCharSet As Integer)
Charset = iCharSet
End Sub
Public Property Let Language(iLanguage As Integer)
miLanguage = iLanguage
End Property
Public Property Get Language() As Integer
Language = miLanguage
End Property
Public Property Let SeqTyp(ByRef l11l1111l1111 As String)
lll11l1ll11 = GetSeqType(l11l1111l1111)
If lll11l1ll11 < 0 Then Err.Raise vbObjectError + ll111l11l11l1, "clsSepaDaten", _
"Ung|fffd|ltige Lastschrift-Art"
End Property
Public Property Get SeqTyp() As String
SeqTyp = ll11ll11111(lll11l1ll11)
End Property
Public Property Let SubPain(ByVal rl11l1111l1111 As String)
If rl11l1111l1111 = "CH" Then
miSubPain = 100
ElseIf rl11l1111l1111 = "CH01" Then
miSubPain = 101
ElseIf rl11l1111l1111 = "DK" Then
miSubPain = 3
Else
miSubPain = 0
End If
If miSubPain >= 100 Then msInstrId = "INS"
End Property
Public Property Get SubPain() As String
If miSubPain = 100 Then
SubPain = "CH"
ElseIf miSubPain > 100 Then
SubPain = "CH01"
ElseIf miSubPain = 3 Then
SubPain = "DK"
Else
SubPain = ""
End If
End Property
Public Property Let CtgyPurp(ByRef l11l1111l1111 As String)
msExtCtgyPurp = l11l1111l1111
End Property
Public Property Get CtgyPurp() As String
CtgyPurp = msExtCtgyPurp
End Property
Public Property Let Purp(ByRef l11l1111l1111 As String)
msExtPurp = l11l1111l1111
End Property
Public Property Get Purp() As String
Purp = msExtPurp
End Property
Public Property Let InstrId(ByRef l11l1111l1111 As String)
msInstrId = l11l1111l1111
End Property
Public Property Get InstrId() As String
InstrId = msInstrId
End Property
Public Property Let Split(ByVal L As Long)
If L > 0 And L < 100000 Then
lllll1l1ll1 = L
ElseIf L = 0 Then
lllll1l1ll1 = 99999
Else
Err.Raise vbObjectError + ll111l1ll1l11, "clsSepaDaten", _
"Ung|fffd|ltiger Splitting Wert"
End If
End Property
Public Property Get Split() As Long
Split = lllll1l1ll1
End Property
Public Property Let Suffix(ByVal v As Variant)
If v > 0 Then lll1111l1l1 = v - 1
End Property
Public Property Get Suffix() As Variant
Suffix = IIf(lll1111l1l1 > 0, lll1111l1l1, "")
End Property
Public Property Let SAA(ByRef l11l1111l1111 As String)
Select Case l11l1111l1111
Case "Basislastschrift", "CDD"
ll1lll1l1111 = "CDD"
ll1l1ll1l1l1 = "CORE"
l1111ll1llll1 = "DD"
Case "|fffd|berweisung", "CCT"
ll1lll1l1111 = "CCT"
l1111ll1llll1 = "TRF"
Case "CCU"
ll1lll1l1111 = "CCU"
l1111ll1llll1 = "TRF"
Case "CDB"
ll1lll1l1111 = "CDB"
ll1l1ll1l1l1 = "B2B"
l1111ll1llll1 = "DD"
Case Else
Err.Raise vbObjectError + lll1l11lll111, "clsSepaDaten.SAA", _
"Ung|fffd|ltige Sende-Auftrags-Art (CDD, CTT oder CDB)"
End Select
End Property
Public Property Get SAA() As String
SAA = ll1lll1l1111
End Property
Public Property Let LI(ByRef l11l1111l1111 As String)
ll1l1ll1l1l1 = l11l1111l1111
End Property
Public Property Get LI() As String
LI = ll1l1ll1l1l1
End Property
Public Property Let PmtMtd(ByRef l11l1111l1111 As String)
l1111ll1llll1 = l11l1111l1111
End Property
Public Property Get PmtMtd() As String
PmtMtd = l1111ll1llll1
End Property
Public Property Let AusfDatum(ByRef dtmDate As Date)
Dim i As Integer
If dtmDate < Now - 1 And dtmDate <> DateSerial(1999, 1, 1) Then
Err.Raise vbObjectError + lll1l111l1ll1, "clsSepaDaten", _
"Ausf|fffd|hrungsdatum liegt in der Vergangenheit"
Else
l1l1111ll1 = dtmDate
End If
For i = 0 To 4
l1l1l1l1(i).l1l1111ll1 = l1l1111ll1
Next i
End Property
Public Property Get AusfDatum() As Date
AusfDatum = l1l1111ll1
End Property
Public Property Let VwZweck(ByRef rl11l1111l1111 As String)
ml11l1l11ll111 = l11l1ll1lll11(rl11l1111l1111, 140&)
End Property
#If EXCEL Then
Public Property Let MailText(ByRef rl11l1111l1111 As String)
msMailText = IIf(Len(rl11l1111l1111), txtReadAll(rl11l1111l1111), "")
End Property
Public Property Get MailText() As String
MailText = msMailText
End Property
#End If
Public Property Let BatchBooking(ByVal bVal As Boolean)
l111111ll1l1 = IIf(bVal, "true", "false")
End Property
Public Property Get BatchBooking() As Boolean
BatchBooking = (l111111ll1l1 = "true")
End Property
Public Property Let SepaCur(ByRef rl11l1111l1111 As String)
If rl11l1111l1111 = "" Then
msCurrency = "EUR"
ElseIf rl11l1111l1111 = "EUR" Or rl11l1111l1111 = "HUF" Or (miSubPain >= 100 And rl11l1111l1111 = "CHF") Then
msCurrency = rl11l1111l1111
Else
Err.Raise vbObjectError + gintcErrPath, "clsSepaDaten.SepaCur", _
"Ung|fffd|ltige W|fffd|hrung '" & rl11l1111l1111 & "'"
End If
End Property
Public Property Get SepaCur() As String
SepaCur = msCurrency
End Property
Public Property Let MsgId(ByRef rl11l1111l1111 As String)
If TestString(rl11l1111l1111, l1lllll111ll1) Then
mlllll1l1ll11 = rl11l1111l1111
Else
Err.Raise vbObjectError + ll1llll1111l1, "clsSepaDaten.MsgId", _
"Ung|fffd|ltige MsgID: '" & rl11l1111l1111 & "'" & vbNewLine & vbNewLine & _
"Diese ID enth|fffd|lt unzul|fffd|ssige Zeichen, wie z.B. Leer- und Sonderzeichen,"
End If
End Property
Public Property Get MsgId() As String
MsgId = mlllll1l1ll11
End Property
Public Property Let ReturnPath(ByRef l11l1111l1111 As String)
If Right(l11l1111l1111, 1) = "." Then l11l1111l1111 = Left(l11l1111l1111, Len(l11l1111l1111) - 1): mlll11llll1l1 = "." & ll1lll1l1111
#If Mac = False Then
If Right(l11l1111l1111, 1) = ":" Then l11l1111l1111 = l11l1111l1111 & GetPathSep()
#End If
If IsDiskFolder(l11l1111l1111) Then
Dim i As Integer
i = InStr(l11l1111l1111, "#")
If i Then
l1111l1llll1 = Left(l11l1111l1111, i - 1) & MsgId & Mid(l11l1111l1111, i + 1)
Else
l1111l1llll1 = l11l1111l1111 & IIf(Right(l11l1111l1111, 1) = GetPathSep() Or Len(l11l1111l1111) = 0, "sepa", "")
End If
Else
Err.Raise vbObjectError + gintcErrPath, "clsSepaDaten.ReturnPath", _
"Ausgabeverzeichnis '" & l11l1111l1111 & "' ist nicht vorhanden." & vbNewLine & _
"Bitte Verzeichnis |fffd|ndern oder anlegen."
End If
End Property
Public Property Get ReturnPath() As String
ReturnPath = l1111l1llll1
End Property
Public Property Get JournalFullName() As String
JournalFullName = l1111l1llll1 & "-lst" & Suffix & ".txt"
End Property
Public Property Get FullName() As String
FullName = l1111l1llll1 & Suffix & mlll11llll1l1
End Property
Public Property Get Ext() As String
Ext = mlll11llll1l1
End Property
Public Property Let Bgz(ByVal ll11ll1111 As Integer)
miBgz = ll11ll1111
End Property
Public Property Get Bgz() As Integer
Bgz = miBgz
End Property
Public Property Let Charset(ByVal l1lll1ll111e As Integer)
If l1lll1ll111e > 0 And l1lll1ll111e <= 3 Then
miCharset = l1lll1ll111e
Else
miCharset = 2
End If
End Property
Public Property Get Charset() As Integer
Charset = miCharset
End Property
Public Function PmtInfClear()
Dim i As Integer
For i = 0 To 4
l1l1l1l1(i).Clear
Next i
End Function
#If EXCEL Then
Public Sub Add(llllll11lll1 As String, llll1l111ll1 As String, lll1lll11111 As String, l1l1l1l11111 As String, vntBetrag As Variant, Optional l11l1l11ll111 As String = "", _
Optional l111l1ll11ll1 As String, Optional l1l111lll1l1 As String, Optional llllllll1111 As String, _
Optional ll1l1l11l111 As String, Optional sMandatID As String = "", Optional dtmDateOfSig As String = "0", Optional sArt As String = "", Optional sEmail As String = "")
Dim lll11l111lll1 As Currency
Dim s As String
Dim i As Integer
Dim lll11ll1l11l1 As Integer
If Not IsNumeric(vntBetrag) Then
Err.Raise vbObjectError + ll1l1l1ll11l1, "clsSepaDaten.Add", _
"ung|fffd|ltiger Betrag"
End If
lll11l111lll1 = RoundCur(vntBetrag)
If lll11l111lll1 > 0 Then
If lll11l1ll1111 = lllll1l1ll1 Then
If lll1111l1l1 = 0 Then lll1111l1l1 = 1
WriteXML
lll11l1ll1111 = 0
PmtInfClear
End If
lll11l1ll1111 = lll11l1ll1111 + 1
Dim lll111ll1ll11 As New Sepa05
lll111ll1ll11.Parent = Me
lll111ll1ll11.KtoInh = IIf(Len(llll1l111ll1) > 0, llll1l111ll1, llllll11lll1)
lll111ll1ll11.Name = llllll11lll1
lll111ll1ll11.IBAN = lll1lll11111
lll111ll1ll11.BIC = l1l1l1l11111
lll111ll1ll11.Betrag = lll11l111lll1
lll111ll1ll11.VwZweck = ml11l1l11ll111 & IIf(Len(ml11l1l11ll111) > 0 And Len(l11l1l11ll111) > 0, " ", "") & l11l1l11ll111
lll111ll1ll11.EndToEndId = l111l1ll11ll1
lll111ll1ll11.Adresse = l1l111lll1l1
lll111ll1ll11.Ort = llllllll1111
lll111ll1ll11.Land = ll1l1l11l111
lll111ll1ll11.Email = sEmail
If Left(ll1lll1l1111, 2) <> "CC" Then
lll111ll1ll11.MandatID = sMandatID
lll111ll1ll11.DateOfSig = dtmDateOfSig
If lll11l1ll11 > 0 Then
lll11ll1l11l1 = lll11l1ll11
Else
lll11ll1l11l1 = GetSeqType(sArt)
If lll11ll1l11l1 < 1 Then Err.Raise vbObjectError + ll1ll11lll1l1, "clsSepaDaten.Add", _
"Ung|fffd|ltige Lastschrift-Art"
End If
Else
lll11ll1l11l1 = 0
End If
l1l1l1l1(lll11ll1l11l1).Add lll111ll1ll11
If Not ml11lllll1ll1 Is Nothing Then ml11lllll1ll1.LenIBAN = Len(lll1lll11111)
lll111l11l1l1 = lll111l11l1l1 + 1
If l1l1l1l1(lll11ll1l11l1).Count > 99999 Then
Err.Raise vbObjectError + ll1ll1l1lll11, "clsSepaDaten.Add", _
"max. Datenanzahl |fffd|berschritten"
End If
End If
End Sub
#Else
Public Function RS2XML(ByRef roRecset As Object) As Long
Dim i As Integer
lll11l1ll1111 = 0
roRecset.MoveFirst
While Not roRecset.EOF
If roRecset.Fields("Betrag") > 0 Then
If lll11l1ll1111 = lllll1l1ll1 Then
If lll1111l1l1 = 0 Then lll1111l1l1 = 1
WriteXML
lll11l1ll1111 = 0
For i = 0 To 4
l1l1l1l1(i).Clear
Next i
End If
AddRS roRecset
lll11l1ll1111 = lll11l1ll1111 + 1
End If
roRecset.MoveNext
Wend
WriteXML
RS2XML = lll111l11l1l1
End Function
Public Sub AddRS(ByRef roRecset As Object)
Dim lll11l111lll1 As Currency
Dim s As String
Dim i As Integer
Dim lll11ll1l11l1 As Integer
If Not IsNumeric(GetRecField(roRecset, "Betrag", True)) Then
Err.Raise vbObjectError + ll1l1l1ll11l1, "clsSepaDaten", _
"ung|fffd|ltiger Betrag"
End If
lll11l111lll1 = RoundCur(GetRecField(roRecset, "Betrag", True))
If lll11l111lll1 > 0 Then
Dim lll111ll1ll11 As New Sepa05
s = GetRecField(roRecset, "KtoInhaber")
lll111ll1ll11.Parent = Me
lll111ll1ll11.KtoInh = IIf(Len(s), s, GetRecField(roRecset, "Name", True))
lll111ll1ll11.Name = GetRecField(roRecset, "Name", True)
lll111ll1ll11.IBAN = GetRecField(roRecset, "IBAN", True)
lll111ll1ll11.BIC = GetRecField(roRecset, "BIC")
lll111ll1ll11.Betrag = lll11l111lll1
s = GetRecField(roRecset, "VwZweck")
lll111ll1ll11.VwZweck = ml11l1l11ll111 & IIf(Len(ml11l1l11ll111) > 0 And Len(s) > 0, " ", "") & s
lll111ll1ll11.EndToEndId = GetRecField(roRecset, "EndToEndId")
lll111ll1ll11.Adresse = GetRecField(roRecset, "Adresse")
lll111ll1ll11.Ort = GetRecField(roRecset, "Ort")
lll111ll1ll11.Land = GetRecField(roRecset, "Land")
If Left(ll1lll1l1111, 2) <> "CC" Then
lll111ll1ll11.MandatID = GetRecField(roRecset, "MandatId", True)
lll111ll1ll11.DateOfSig = GetRecField(roRecset, "DateOfSig", True)
If lll11l1ll11 > 0 Then
lll11ll1l11l1 = lll11l1ll11
Else
lll11ll1l11l1 = GetSeqType(GetRecField(roRecset, "SeqTyp", True))
If lll11ll1l11l1 < 1 Then Err.Raise vbObjectError + ll1ll11lll1l1, "clsSepaDaten", _
"Ung|fffd|ltige Lastschrift-Art"
End If
Else
lll11ll1l11l1 = 0
End If
l1l1l1l1(lll11ll1l11l1).Add lll111ll1ll11
If Not ml11lllll1ll1 Is Nothing Then ml11lllll1ll1.LenIBAN = Len(roRecset.Fields("IBAN"))
lll111l11l1l1 = lll111l11l1l1 + 1
If l1l1l1l1(lll11ll1l11l1).Count > 99999 Then
Err.Raise vbObjectError + ll1ll1l1lll11, "clsSepaDaten", _
"max. Datenanzahl |fffd|berschritten"
End If
End If
End Sub
Public Function GetRecField(ByRef roRecset As Object, ByRef sField As String, Optional ByVal bFlag As Boolean = False) As String
On Error Resume Next
GetRecField = Nz(roRecset.Fields(sField), "")
If Err.Number = 3265 Then
If bFlag Then
Err.Raise vbObjectError + ll11ll1111111, "clsSepaDaten", _
"Feld '" & sField & "' kann in der Datenbank nicht gefunden werden." & vbNewLine & vbNewLine & _
"|fffd|berpr|fffd|fen Sie, ob alle Pflichtfelder in der Abfrage vorhanden sind."
End
Else
Err.Clear
GetRecField = ""
End If
End If
End Function
#End If
Function WriteXML() As Long
Dim lll111ll1ll11 As Sepa05
Dim i As Long
Dim ll11ll111 As Currency
lll1111l1l1 = lll1111l1l1 + 1
For i = 0 To 4
ll11ll111 = ll11ll111 + l1l1l1l1(i).ll11ll111
Next i
lll1111l1l11 = Format(ll11ll111, "0.00")
If Not ml11lllll1ll1 Is Nothing Then
ml11lllll1ll1.l11lll1111ll1 ll1lll1l1111, ll11ll11111(lll11l1ll11), l1l1l1l1(lll11l1ll11).l11111llll11, JournalFullName, AusfDatum, lll1111l1l11
End If
l11lll1111ll1
If Left(ll1lll1l1111, 2) = "CC" Then
WritePmtInf 0
ElseIf lll11l1ll11 > 0 Then
WritePmtInf lll11l1ll11
Else
For i = 1 To 4
If l1l1l1l1(i).Count Then WritePmtInf i
Next i
End If
l11ll1ll11l11
If Not ml11lllll1ll1 Is Nothing Then ml11lllll1ll1.l11ll1ll11l11 lll1111l1l11, SepaCur
WriteBGZ
WriteXML = lll111l11l1l1
End Function
Public Function l11lll1111ll1() As Integer
Dim l1111111l11l1 As String
Dim l1l11l1lll11 As String
Dim sISOVariante As String
Dim l11l1111l1111 As String
Dim i As Integer
l1l11l11l1ll1 = FreeFile
OpenW FullName, l1l11l11l1ll1
Print #l1l11l11l1ll1, "<?xml version=""1.0"" encoding=""UTF-8""?>"
#If EXCEL Then
l11l1111l1111 = "(build: " & ThisWorkbook.CustomDocumentProperties("Version").Value & ")"
#Else
l11l1111l1111 = gstrcVersion & " and Access"
#End If
Print #l1l11l11l1ll1, "<!--Generated by Ex-Sepa " & l11l1111l1111 & "-->"
l1111111l11l1 = GetPainFormat(SAA, SubPain)
If miSubPain >= 100 Then
Print #l1l11l11l1ll1, "<Document xmlns=""http://www.six-interbank-clearing.com/de/" & l1111111l11l1 & ".xsd"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://www.six-interbank-clearing.com/de/" & l1111111l11l1 & ".xsd " & l1111111l11l1 & ".xsd"">"
Else
Print #l1l11l11l1ll1, "<Document xmlns=""urn:iso:std:iso:20022:tech:xsd:" & l1111111l11l1 & """" _
; IIf(Left(oAG.IBAN, 2) <> "DE", ">", " xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" " & _
"xsi:schemaLocation=""urn:iso:std:iso:20022:tech:xsd:" & l1111111l11l1 & " " & l1111111l11l1 & ".xsd"">")
End If
Print #l1l11l11l1ll1, Spc(1); IIf(Left(ll1lll1l1111, 2) = "CC", "<CstmrCdtTrfInitn>", "<CstmrDrctDbtInitn>")
Print #l1l11l11l1ll1, Spc(3); "<GrpHdr>"
Print #l1l11l11l1ll1, Spc(5); "<MsgId>"; MsgId; "</MsgId>"
Print #l1l11l11l1ll1, Spc(5); "<CreDtTm>"; Format$(Now(), "yyyy-mm-ddTHH:MM:SS"); "</CreDtTm>"
Print #l1l11l11l1ll1, Spc(5); "<NbOfTxs>"; Format(lll11l1ll1111, "0"); "</NbOfTxs>"
Print #l1l11l11l1ll1, Spc(5); "<CtrlSum>"; Replace(lll1111l1l11, ",", "."); "</CtrlSum>"
#If EXCEL Then
Print #l1l11l11l1ll1, Spc(5); ml1l1111ll1111.Cells(21, l1)
#Else
Print #l1l11l11l1ll1, Spc(5); "<InitgPty>"
#End If
Print #l1l11l11l1ll1, Spc(7); "<Nm>"; oAG.InitgPtyName; "</Nm>"
If oAG.Land = "CH" Or oAG.Land = "ES" Then
Print #l1l11l11l1ll1, Spc(7); "<Id>"
Print #l1l11l11l1ll1, Spc(9); "<OrgId>"
Print #l1l11l11l1ll1, Spc(11); "<Othr>"
If oAG.CI <> "" Then
Print #l1l11l11l1ll1, Spc(13); "<Id>"; oAG.CI; "</Id>"
Else
Print #l1l11l11l1ll1, Spc(13); "<Id>"; oAG.IBAN; "</Id>"
End If
Print #l1l11l11l1ll1, Spc(11); "</Othr>"
Print #l1l11l11l1ll1, Spc(9); "</OrgId>"
Print #l1l11l11l1ll1, Spc(7); "</Id>"
End If
Print #l1l11l11l1ll1, Spc(5); "</InitgPty>"
Print #l1l11l11l1ll1, Spc(3); "</GrpHdr>"
l11lll1111ll1 = l1l11l11l1ll1
End Function
Public Function WritePmtInf(ByVal iSeqType As Integer) As Integer
Dim ll1111lll11 As Long
Dim lll111ll1ll11 As Sepa05
Dim l1l11l1lll11 As String
Dim sSvcLvl As String
Print #l1l11l11l1ll1, Spc(3); "<PmtInf>"
Print #l1l11l11l1ll1, Spc(5); "<PmtInfId>"; l1l1l1l1(iSeqType).l11111llll11 & lll1111l1l1; "</PmtInfId>"
Print #l1l11l11l1ll1, Spc(5); "<PmtMtd>"; l1111ll1llll1; "</PmtMtd>"
Print #l1l11l11l1ll1, Spc(5); "<BtchBookg>"; l111111ll1l1; "</BtchBookg>"
Print #l1l11l11l1ll1, Spc(5); "<NbOfTxs>"; Format(l1l1l1l1(iSeqType).l1lll1ll1.Count, "0"); "</NbOfTxs>"
Print #l1l11l11l1ll1, Spc(5); "<CtrlSum>"; Replace(Format(l1l1l1l1(iSeqType).ll11ll111, "0.00"), ",", "."); "</CtrlSum>"
If miSubPain < 100 Or Left(ll1lll1l1111, 2) <> "CC" Then
Print #l1l11l11l1ll1, Spc(5); "<PmtTpInf>"
Print #l1l11l11l1ll1, Spc(7); "<SvcLvl>"
Print #l1l11l11l1ll1, Spc(9); "<Cd>"; Switch(ll1lll1l1111 = "CCU", "URGP", msCurrency = "HUF", "NURG", msCurrency = "EUR", "SEPA", msCurrency = "CHF", "SEPA"); "</Cd>"
Print #l1l11l11l1ll1, Spc(7); "</SvcLvl>"
If Left(ll1lll1l1111, 2) <> "CC" Then
Print #l1l11l11l1ll1, Spc(7); "<LclInstrm>"
Print #l1l11l11l1ll1, Spc(9); "<Cd>" & ll1l1ll1l1l1 & "</Cd>"
Print #l1l11l11l1ll1, Spc(7); "</LclInstrm>"
Print #l1l11l11l1ll1, Spc(7); "<SeqTp>"; ll11ll11111(iSeqType); "</SeqTp>"
End If
If msExtCtgyPurp <> "" Then
Print #l1l11l11l1ll1, Spc(7); "<CtgyPurp>"
Print #l1l11l11l1ll1, Spc(9); "<Cd>"; msExtCtgyPurp; "</Cd>"
Print #l1l11l11l1ll1, Spc(7); "</CtgyPurp>"
End If
Print #l1l11l11l1ll1, Spc(5); "</PmtTpInf>"
End If
If Left(ll1lll1l1111, 2) = "CC" Then
l1l11l1lll11 = "Dbtr"
Print #l1l11l11l1ll1, Spc(5); "<ReqdExctnDt>"; Format$(l1l1l1l1(iSeqType).l1l1111ll1, "yyyy-mm-dd"); "</ReqdExctnDt>"
Else
l1l11l1lll11 = "Cdtr"
Print #l1l11l11l1ll1, Spc(5); "<ReqdColltnDt>"; Format$(l1l1l1l1(iSeqType).l1l1111ll1, "yyyy-mm-dd"); "</ReqdColltnDt>"
End If
Print #l1l11l11l1ll1, Spc(5); "<" & l1l11l1lll11 & ">"
Print #l1l11l11l1ll1, Spc(7); "<Nm>"; oAG.KtoInh; "</Nm>"
If Len(oAG.Land) Then
Print #l1l11l11l1ll1, Spc(7); "<PstlAdr>"
If Len(oAG.Land) Then Print #l1l11l11l1ll1, Spc(9); "<Ctry>"; oAG.Land; "</Ctry>"
If Len(oAG.Adresse) Then Print #l1l11l11l1ll1, Spc(9); "<AdrLine>"; oAG.Adresse; "</AdrLine>"
If Len(oAG.Ort) Then Print #l1l11l11l1ll1, Spc(9); "<AdrLine>"; oAG.Ort; "</AdrLine>"
Print #l1l11l11l1ll1, Spc(7); "</PstlAdr>"
End If
Print #l1l11l11l1ll1, Spc(5); "</" & l1l11l1lll11 & ">"
Print #l1l11l11l1ll1, Spc(5); "<" & l1l11l1lll11 & "Acct>"
Print #l1l11l11l1ll1, Spc(7); "<Id>"
Print #l1l11l11l1ll1, Spc(9); "<IBAN>"; oAG.IBAN; "</IBAN>"
Print #l1l11l11l1ll1, Spc(7); "</Id>"
Print #l1l11l11l1ll1, Spc(5); "</" & l1l11l1lll11 & "Acct>"
Print #l1l11l11l1ll1, Spc(5); "<" & l1l11l1lll11 & "Agt>"
Print #l1l11l11l1ll1, Spc(7); "<FinInstnId>"
Print #l1l11l11l1ll1, Spc(9); "<BIC>"; oAG.BIC; "</BIC>"
Print #l1l11l11l1ll1, Spc(7); "</FinInstnId>"
Print #l1l11l11l1ll1, Spc(5); "</" & l1l11l1lll11 & "Agt>"
Print #l1l11l11l1ll1, Spc(5); "<ChrgBr>"; IIf(miSubPain = 101, "CRED", "SLEV"); "</ChrgBr>"
If Left(ll1lll1l1111, 2) <> "CC" Then
Print #l1l11l11l1ll1, Spc(5); "<CdtrSchmeId>"
Print #l1l11l11l1ll1, Spc(7); "<Id>"
Print #l1l11l11l1ll1, Spc(9); "<PrvtId>"
Print #l1l11l11l1ll1, Spc(11); "<Othr>"
Print #l1l11l11l1ll1, Spc(13); "<Id>"; oAG.CI; "</Id>"
Print #l1l11l11l1ll1, Spc(13); "<SchmeNm>"
Print #l1l11l11l1ll1, Spc(15); "<Prtry>SEPA</Prtry>"
Print #l1l11l11l1ll1, Spc(13); "</SchmeNm>"
Print #l1l11l11l1ll1, Spc(11); "</Othr>"
Print #l1l11l11l1ll1, Spc(9); "</PrvtId>"
Print #l1l11l11l1ll1, Spc(7); "</Id>"
Print #l1l11l11l1ll1, Spc(5); "</CdtrSchmeId>"
End If
WritePmtInf = l1l11l11l1ll1
ll1111lll11 = 1
For Each lll111ll1ll11 In l1l1l1l1(iSeqType).l1lll1ll1
If Not ml11lllll1ll1 Is Nothing Then ml11lllll1ll1.l11lll1l1l111 lll111ll1ll11, SepaCur
l11lll1l1l111 lll111ll1ll11, iSeqType, ll1111lll11
If Len(msMailText) Then SendEmail lll111ll1ll11
ll1111lll11 = ll1111lll11 + 1
Next lll111ll1ll11
Print #l1l11l11l1ll1, Spc(3); "</PmtInf>"
End Function
Public Function l11lll1l1l111(ByRef rl11ll1ll11l1 As Sepa05, viPmtInf As Integer, vll1111lll11 As Long) As Integer
Dim ll1l11111l11 As String
Dim l1l1ll1111l11 As Double
If rl11ll1ll11l1.Betrag <= 0 Then
l11lll1l1l111 = -1
Else
Print #l1l11l11l1ll1, Spc(5); IIf(Left(ll1lll1l1111, 2) = "CC", "<CdtTrfTxInf>", "<DrctDbtTxInf>")
Print #l1l11l11l1ll1, Spc(7); "<PmtId>"
If Len(msInstrId) Then Print #l1l11l11l1ll1, Spc(9); "<InstrId>"; msInstrId & viPmtInf & "-" & _
IIf(Len(rl11ll1ll11l1.EndToEndId), rl11ll1ll11l1.EndToEndId, vll1111lll11); "</InstrId>"
Print #l1l11l11l1ll1, Spc(9); "<EndToEndId>"; IIf(Len(rl11ll1ll11l1.EndToEndId), rl11ll1ll11l1.EndToEndId, "NOTPROVIDED"); "</EndToEndId>"
Print #l1l11l11l1ll1, Spc(7); "</PmtId>"
If miSubPain = 101 Then
Print #l1l11l11l1ll1, Spc(7); "<PmtTpInf>"
Print #l1l11l11l1ll1, Spc(9); "<LclInstrm>"
Print #l1l11l11l1ll1, Spc(11); "<Prtry>CH01</Prtry>"
Print #l1l11l11l1ll1, Spc(9); "</LclInstrm>"
Print #l1l11l11l1ll1, Spc(7); "</PmtTpInf>"
End If
If Left(ll1lll1l1111, 2) = "CC" Then
ll1l11111l11 = "Cdtr"
Print #l1l11l11l1ll1, Spc(7); "<Amt>"
Print #l1l11l11l1ll1, Spc(7); "<InstdAmt Ccy="""; SepaCur; """>"; Replace(rl11ll1ll11l1.Betrag, ",", "."); "</InstdAmt>"
Print #l1l11l11l1ll1, Spc(7); "</Amt>"
Else
ll1l11111l11 = "Dbtr"
Print #l1l11l11l1ll1, Spc(7); "<InstdAmt Ccy="""; SepaCur; """>"; Replace(Format(rl11ll1ll11l1.Betrag, "0.00"), ",", "."); "</InstdAmt>"
Print #l1l11l11l1ll1, Spc(7); "<DrctDbtTx>"
Print #l1l11l11l1ll1, Spc(9); "<MndtRltdInf>"
Print #l1l11l11l1ll1, Spc(11); "<MndtId>"; rl11ll1ll11l1.MandatID; "</MndtId>"
Print #l1l11l11l1ll1, Spc(11); "<DtOfSgntr>"; Format(rl11ll1ll11l1.DateOfSig, "yyyy-mm-dd"); "</DtOfSgntr>"
Print #l1l11l11l1ll1, Spc(11); "<AmdmntInd>false</AmdmntInd>"
Print #l1l11l11l1ll1, Spc(9); "</MndtRltdInf>"
Print #l1l11l11l1ll1, Spc(7); "</DrctDbtTx>"
End If
If (Len(rl11ll1ll11l1.BIC) And miSubPain <> 101) Or Left(ll1lll1l1111, 2) <> "CC" Then
Print #l1l11l11l1ll1, Spc(7); "<" & ll1l11111l11 & "Agt>"
Print #l1l11l11l1ll1, Spc(9); "<FinInstnId>"
If Len(rl11ll1ll11l1.BIC) Then
Print #l1l11l11l1ll1, Spc(11); "<BIC>"; rl11ll1ll11l1.BIC; "</BIC>"
Else
If Left(oAG.IBAN, 2) = "AT" Then
Print #l1l11l11l1ll1, Spc(11); "<BIC>NOTAVAIL</BIC>"
Else
Print #l1l11l11l1ll1, Spc(11); "<Othr>"
Print #l1l11l11l1ll1, Spc(13); "<Id>"; "NOTPROVIDED"; "</Id>"
Print #l1l11l11l1ll1, Spc(11); "</Othr>"
End If
End If
Print #l1l11l11l1ll1, Spc(9); "</FinInstnId>"
Print #l1l11l11l1ll1, Spc(7); "</" & ll1l11111l11 & "Agt>"
End If
Print #l1l11l11l1ll1, Spc(7); "<" & ll1l11111l11 & ">"
Print #l1l11l11l1ll1, Spc(9); "<Nm>"; rl11ll1ll11l1.KtoInh; "</Nm>"
If Len(rl11ll1ll11l1.Ort) Then
Print #l1l11l11l1ll1, Spc(9); "<PstlAdr>"
If Len(rl11ll1ll11l1.Land) Then Print #l1l11l11l1ll1, Spc(11); "<Ctry>"; rl11ll1ll11l1.Land; "</Ctry>"
If Len(rl11ll1ll11l1.Adresse) Then Print #l1l11l11l1ll1, Spc(11); "<AdrLine>"; rl11ll1ll11l1.Adresse; "</AdrLine>"
If Len(rl11ll1ll11l1.Ort) Then Print #l1l11l11l1ll1, Spc(11); "<AdrLine>"; rl11ll1ll11l1.Ort; "</AdrLine>"
Print #l1l11l11l1ll1, Spc(9); "</PstlAdr>"
End If
Print #l1l11l11l1ll1, Spc(7); "</" & ll1l11111l11 & ">"
Print #l1l11l11l1ll1, Spc(7); "<" & ll1l11111l11 & "Acct>"
Print #l1l11l11l1ll1, Spc(9); "<Id>"
If miSubPain <> 101 Then
Print #l1l11l11l1ll1, Spc(11); "<IBAN>"; rl11ll1ll11l1.IBAN; "</IBAN>"
Else
Print #l1l11l11l1ll1, Spc(11); "<Othr>"
Print #l1l11l11l1ll1, Spc(13); "<Id>"; rl11ll1ll11l1.BIC; "</Id>"
Print #l1l11l11l1ll1, Spc(11); "</Othr>"
End If
Print #l1l11l11l1ll1, Spc(9); "</Id>"
Print #l1l11l11l1ll1, Spc(7); "</" & ll1l11111l11 & "Acct>"
If rl11ll1ll11l1.Name <> rl11ll1ll11l1.KtoInh And Len(rl11ll1ll11l1.Name) Then
Print #l1l11l11l1ll1, Spc(7); "<Ultmt" & ll1l11111l11 & ">"
Print #l1l11l11l1ll1, Spc(9); "<Nm>"; rl11ll1ll11l1.Name; "</Nm>"
Print #l1l11l11l1ll1, Spc(7); "</Ultmt" & ll1l11111l11 & ">"
End If
If msExtPurp <> "" Then
Print #l1l11l11l1ll1, Spc(7); "<Purp>"
Print #l1l11l11l1ll1, Spc(9); "<Cd>"; msExtPurp; "</Cd>"
Print #l1l11l11l1ll1, Spc(7); "</Purp>"
End If
If miSubPain = 101 Then
Print #l1l11l11l1ll1, Spc(7); "<RmtInf>"
Print #l1l11l11l1ll1, Spc(9); "<Strd>"
Print #l1l11l11l1ll1, Spc(11); "<CdtrRefInf>"
Print #l1l11l11l1ll1, Spc(13); "<Ref>"; rl11ll1ll11l1.IBAN; "</Ref>"
Print #l1l11l11l1ll1, Spc(11); "</CdtrRefInf>"
Print #l1l11l11l1ll1, Spc(9); "</Strd>"
If Len(rl11ll1ll11l1.VwZweck) Then Print #l1l11l11l1ll1, Spc(9); "<Ustrd>"; rl11ll1ll11l1.VwZweck; "</Ustrd>"
Print #l1l11l11l1ll1, Spc(7); "</RmtInf>"
Else
If Len(rl11ll1ll11l1.VwZweck) Then
Print #l1l11l11l1ll1, Spc(7); "<RmtInf>"
Print #l1l11l11l1ll1, Spc(9); "<Ustrd>"; rl11ll1ll11l1.VwZweck; "</Ustrd>"
Print #l1l11l11l1ll1, Spc(7); "</RmtInf>"
End If
End If
Print #l1l11l11l1ll1, Spc(5); IIf(Left(ll1lll1l1111, 2) = "CC", "</CdtTrfTxInf>", "</DrctDbtTxInf>")
End If
End Function
Private Function l11ll1ll11l11() As Integer
Print #l1l11l11l1ll1, Spc(1); IIf(Left(ll1lll1l1111, 2) = "CC", "</CstmrCdtTrfInitn>", "</CstmrDrctDbtInitn>")
Print #l1l11l11l1ll1, "</Document>"
Close #l1l11l11l1ll1
End Function
Private Function WriteBGZ()
Dim l1l11l11l1ll1 As Integer, i As Integer
If miBgz Then
l1l11l11l1ll1 = FreeFile
Open l1111l1llll1 & "-bgz" & IIf(lll1111l1l1 > 0, lll1111l1l1, "") & ".txt" For Output As #l1l11l11l1ll1
Print #l1l11l11l1ll1, " SEPA BEGLEITZETTEL"
Print #l1l11l11l1ll1,
Print #l1l11l11l1ll1, " Auftrag               : ";
Print #l1l11l11l1ll1, "SEPA Sammel";
If Left(ll1lll1l1111, 2) = "CC" Then
Print #l1l11l11l1ll1, "|fffd|berweisung       CCM"
Else
Print #l1l11l11l1ll1, "lastschrift       CDM"
End If
Print #l1l11l11l1ll1, " Dateiname             : "; l1111l1llll1 & mlll11llll1l1
Print #l1l11l11l1ll1,
Print #l1l11l11l1ll1, String(74, "=")
If Left(ll1lll1l1111, 2) = "CC" Then
Print #l1l11l11l1ll1, " G U T S C H R I F T E N"
Else
Print #l1l11l11l1ll1, IIf(ll1lll1l1111 = "CDD", " BASIS", " Firmen") & " - L A S T S C H R I F T E N"
End If
Print #l1l11l11l1ll1, " Datei-ID   : "; MsgId
Print #l1l11l11l1ll1, " Datum/Zeit : "; Format$(Now(), "dd.mm.yyyy HH:MM:SS")
For i = 0 To 4
If l1l1l1l1(i).Count Then
Print #l1l11l11l1ll1, String(74, "-")
Print #l1l11l11l1ll1, " Sammlerreferenz           : "; l1l1l1l1(i).l11111llll11
Print #l1l11l11l1ll1, " Bank-Code                 : "; oAG.BIC
Print #l1l11l11l1ll1, " Kontonummer               : "; oAG.IBAN
Print #l1l11l11l1ll1, " Auftraggeberdaten         : "; oAG.KtoInh
Print #l1l11l11l1ll1, " Anzahl der Zahlungssaetze :"; l1l1l1l1(i).Count
Print #l1l11l11l1ll1, " Summe der Betraege ("; SepaCur; ")  : "; Format(l1l1l1l1(i).ll11ll111, "0.00")
Print #l1l11l11l1ll1, " Ausfuehrungstermin        : "; l1l1l1l1(i).l1l1111ll1
End If
Next i
Print #l1l11l11l1ll1, String(74, "=")
Print #l1l11l11l1ll1,
Print #l1l11l11l1ll1,
Print #l1l11l11l1ll1, " "; Mid(oAG.Ort, InStr(oAG.Ort, " ") + 1); ", den "; Date
Print #l1l11l11l1ll1,
Print #l1l11l11l1ll1,
Print #l1l11l11l1ll1,
Print #l1l11l11l1ll1,
If oAG.KtoInh <> oAG.InitgPtyName Then _
Print #l1l11l11l1ll1, " "; oAG.KtoInh
Print #l1l11l11l1ll1, " "; oAG.InitgPtyName
Print #l1l11l11l1ll1, " "; oAG.Adresse
Print #l1l11l11l1ll1, " "; oAG.Ort
Print #l1l11l11l1ll1,
Print #l1l11l11l1ll1, " Tel.: "; oAG.Tel
Close #l1l11l11l1ll1
End If
End Function
Public Function GetSeqType(sType As String) As Integer
Dim i As Integer
For i = 0 To 4
If ll11ll11111(i) = sType Then
GetSeqType = i
Exit Function
End If
Next i
GetSeqType = -1
End Function
Public Sub SetJournal(Optional l1l11l1lll111 As Integer = 50, Optional ByVal iLenMandNr As Integer = 10)
Set ml11lllll1ll1 = New Sepa04
If Left(SAA, 2) <> "CC" Then ml11lllll1ll1.LenMandNr = iLenMandNr
ml11lllll1ll1.LenVwZweck = l1l11l1lll111
ml11lllll1ll1.Parent = Me
End Sub
Private Sub Class_Terminate()
Dim i As Integer
If Not ml11lllll1ll1 Is Nothing Then Set ml11lllll1ll1 = Nothing
Set oAG = Nothing
End Sub
Public Sub SendEmail(ByRef rl11ll1ll11l1 As Sepa05)
Dim oOutApp As Object, Mail As Object
Dim vNachricht As Variant
Dim str As String
Dim lPos As Long
If Len(rl11ll1ll11l1.Email) Then
str = Replace(msMailText, "[Name]", Left(rl11ll1ll11l1.Name, InStr(rl11ll1ll11l1.Name, ",")))
str = Replace(str, "[Mandatsref.]", rl11ll1ll11l1.MandatID)
str = Replace(str, "[Mandat-Datum]", rl11ll1ll11l1.DateOfSig)
str = Replace(str, "[Ausf.Datum]", Format(l1l1111ll1, "DD.MM.YYYY"))
str = Replace(str, "[CI]", FormatIBAN(oAG.CI))
str = Replace(str, "[Betrag]", rl11ll1ll11l1.Betrag)
str = Replace(str, "[BIC*]", rl11ll1ll11l1.BIC)
str = Replace(str, "[IBAN]", FormatIBAN(rl11ll1ll11l1.IBAN))
lPos = InStr(str, vbCrLf)
Set oOutApp = CreateObject("Outlook.Application")
Set vNachricht = oOutApp.CreateItem(0)
With vNachricht
.To = rl11ll1ll11l1.Email
.Subject = Left(str, lPos - 1)
.Body = Mid(str, lPos + 2)
.Display
End With
Set oOutApp = Nothing
Set vNachricht = Nothing
End If
End Sub
Public Function l11l1ll1lll11(ByVal sText As String, ByVal iMaxLength As Long) As String
Dim i As Integer
Dim Ch As String * 1
Dim l111ll111l111 As String
Dim sCountry As String
If IsNull(sText) Then l11l1ll1lll11 = Null: Exit Function
l111ll111l111 = ""
sCountry = oAG.Land
For i = 1 To Len(sText)
Ch = Mid(sText, i, 1)
If miCharset = 0 Then
Select Case Asc(Ch)
Case Asc("A") To Asc("Z"), Asc("a") To Asc("z"), Asc("0") To Asc("9"), Asc("'"), Asc(":"), _
Asc("?"), Asc(","), Asc("-"), Asc(" "), Asc("("), Asc("+"), Asc("."), Asc(")"), Asc("/"), _
Asc("|fffd|"), Asc("|fffd|"), Asc("|fffd|"), Asc("|fffd|"), Asc("|fffd|"), Asc("|fffd|"), _
Asc("&"), Asc("*"), Asc("$"), Asc("%"): l111ll111l111 = l111ll111l111 & Ch
Case Asc("|fffd|"), Asc("|fffd|"), Asc("|fffd|"), Asc("|fffd|"), Asc("|fffd|"), Asc("|fffd|"), Asc("|fffd|"), _
Asc("|fffd|"), Asc("|fffd|"), Asc("|fffd|"), Asc("|fffd|"), Asc("|fffd|"), Asc("|fffd|"), Asc("|fffd|"), Asc("&")
If Asc(Ch) >= 80 Then
l111ll111l111 = l111ll111l111 & "|fffd|" & Chr(Asc(Ch) - 64)
Else
MsgBox "Fehler bei Buchstabenwandlung: " & Ch
End If
Case Else: l111ll111l111 = l111ll111l111 & "."
End Select
ElseIf miCharset = 2 Then
Select Case Asc(Ch)
Case Asc("A") To Asc("Z"), Asc("a") To Asc("z"), Asc("0") To Asc("9"), Asc("'"), Asc(":"), _
Asc("?"), Asc(","), Asc("-"), Asc(" "), Asc("("), Asc("+"), Asc("."), Asc(")"), Asc("/"): l111ll111l111 = l111ll111l111 & Ch
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "AE"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "OE"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "UE"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "E"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "ae"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "oe"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "ue"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "ss"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "e"
Case Asc("&"): l111ll111l111 = l111ll111l111 & "+"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "n"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "N"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "?"
Case Asc("|fffd|"), Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "i"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "a"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "A"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "I"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "o"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "O"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "u"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "U"
Case Else: l111ll111l111 = l111ll111l111 & "."
End Select
Else
Select Case Asc(Ch)
Case Asc("A") To Asc("Z"), Asc("a") To Asc("z"), Asc("0") To Asc("9"), Asc("'"), Asc(":"), _
Asc("?"), Asc(","), Asc("-"), Asc(" "), Asc("("), Asc("+"), Asc("."), Asc(")"), Asc("/"): l111ll111l111 = l111ll111l111 & Ch
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "A"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "O"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "U"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "E"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "a"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "o"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "u"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "s"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "e"
Case Asc("&"): l111ll111l111 = l111ll111l111 & "+"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "n"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "N"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "?"
Case Asc("|fffd|"), Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "i"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "a"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "A"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "I"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "o"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "O"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "u"
Case Asc("|fffd|"): l111ll111l111 = l111ll111l111 & "U"
Case Else: l111ll111l111 = l111ll111l111 & "."
End Select
End If
Next i
If Len(l111ll111l111) > iMaxLength Then
l11l1ll1lll11 = Left(l111ll111l111, iMaxLength)
Err.Raise vbObjectError + lll1l1l1ll1l1, "clsSepaTools", _
"Die L|fffd|nge des Eingabe-Strings '" & l111ll111l111 & "'" & vbNewLine & vbNewLine & _
"ist gr|fffd||fffd|er als die zul|fffd|ssigen " & iMaxLength & " Zeichen." & vbNewLine & vbNewLine & _
"|fffd|berpr|fffd|fen Sie bitte Ihre Eingabedaten auf die max. zul|fffd|ssige L|fffd|nge"
Else
l11l1ll1lll11 = l111ll111l111
End If
End Function
Function MLT(i As Integer) As String
Dim strText As Variant
strText = Array(Array( _
"Die SEPA-Datei wurde unter" & Chr(13) & Chr(13) & Space(3) & FullName & Chr(13) & Chr(13) & "erzeugt. Es wurden " & lll111l11l1l1 & " Datens|fffd|tze geschrieben.", _
"The SEPA File was created at" & Chr(13) & Chr(13) & Space(3) & FullName & Chr(13) & Chr(13) & lll111l11l1l1 & " records were written.", _
"El archivo de la SEPA fue creada bajo " & Chr(13) & Chr(13) & Space(3) & FullName & Chr(13) & Chr(13) & "Se han escrito " & lll111l11l1l1 & " registros."), _
Array("Lastschrifteinzug", "Direct debit", "Domiciliaci|fffd|n bancaria"), _
Array("vom", "from", "de"), _
Array("Ausf|fffd|hrungsdatum", "execution date", "fecha de ejecuci|fffd|n"), _
Array("Lastschrifteinzug", "direct debit", "fecha de ejecuci|fffd|n"))
MLT = strText(i)(miLanguage)
End Function
Attribute VB_Name = "frmOptionen"
Attribute VB_Base = "0{65618E3D-C5AB-4284-B0F1-AA9F506470B2}{56856E73-ECD6-4FC9-9CFD-6FFBF738E5DA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub UserForm_Activate()
With Me
.StartUpPosition = 2
End With
End Sub
Private Sub UserForm_Initialize()
Select Case MultiPage1.Value
Case 0:
Dim sNewVersion As String
Dim sOldVersion As String
Dim i As Integer
Dim l11l1111l1111 As String
sOldVersion = "V " & l1l111111lll1.Range("Z_Version")
sNewVersion = GetPrgVersion(0)
i = StrComp(sNewVersion, sOldVersion)
l11l1111l1111 = "aktuell!"
If i > 0 Or Right(sOldVersion, 4) = "Demo" Then
l11l1111l1111 = " n i c h t  " & l11l1111l1111
Else
MultiPage1.Pages(0).Label1.Visible = False
MultiPage1.Pages(0).butLoad.Visible = False
End If
lblVersion = "Ihre Programmversion:" & vbTab & sOldVersion & vbNewLine & _
vbNewLine & "aktuell verf|fffd|gbare Version:" & vbTab & sNewVersion & vbNewLine & _
vbNewLine & "Ihre Version ist " & l11l1111l1111
Case 1:
End Select
End Sub
Private Sub cmdBack_Click()
Unload Me
End Sub
Private Sub cmdUebertragen_Click()
Dim l111111ll1l11 As String
Dim wbFile As Workbook
Dim wsQuellSheet As Worksheet
Application.EnableEvents = False
#If Mac Then
MsgBox "Diese Funktion wird vom Mac leider nicht unterst|fffd|tzt. Kopieren Sie Ihre alten Daten incl. Schl|fffd|ssel mit 'Inhalte/Einf|fffd|gen/nur Werte' aus Ihrer alten Datei in die neue Prg.-Version."
#Else
l111111ll1l11 = Application.GetOpenFilename("Excel-Dateien (*.xls*), *.xls*", 1, "Alte Programm-Version |fffd|ffnen")
On Error Resume Next
Set wbFile = Workbooks.Open(l111111ll1l11, 0, True)
Set wsQuellSheet = wbFile.Worksheets(1)
If wsQuellSheet.Cells(1, 4) <> "Version" Then
MsgBox "Ung|fffd|ltige Ex-Sepa Programmversion. W|fffd|hlen Sie eine g|fffd|ltige Version aus oder tragen Sie Ihre Daten von Hand ein.", vbOKOnly, "Fehler Stammdaten|fffd|bernahme"
Exit Sub
End If
TransferCell wsQuellSheet, "Z_AGKtoInh"
TransferCell wsQuellSheet, "Z_AGAdresse"
TransferCell wsQuellSheet, "Z_AGPLZ"
TransferCell wsQuellSheet, "Z_AGOrt"
TransferCell wsQuellSheet, "Z_AGLand"
TransferCell wsQuellSheet, "Z_AGIBAN"
TransferCell wsQuellSheet, "Z_AGBIC"
TransferCell wsQuellSheet, "Z_AGCI"
TransferCell wsQuellSheet, "Z_Dateiname"
TransferCell wsQuellSheet, "Z_AusgPfad"
TransferCell wsQuellSheet, "Z_DatName"
TransferCell wsQuellSheet, "Z_DatVName"
TransferCell wsQuellSheet, "Z_DatKtoInh"
TransferCell wsQuellSheet, "Z_DatStrasse"
TransferCell wsQuellSheet, "Z_DatPLZ"
TransferCell wsQuellSheet, "Z_DatOrt"
TransferCell wsQuellSheet, "Z_DatLand"
TransferCell wsQuellSheet, "Z_DatEmail"
TransferCell wsQuellSheet, "Z_DatMandNr"
TransferCell wsQuellSheet, "Z_DatMandDatum"
TransferCell wsQuellSheet, "Z_DatIBAN"
TransferCell wsQuellSheet, "Z_DatBIC"
TransferCell wsQuellSheet, "Z_DatBetrag"
TransferCell wsQuellSheet, "Z_DatVwZweck"
TransferCell wsQuellSheet, "Z_EndToEndID"
TransferCell wsQuellSheet, "Z_DatLastArt"
TransferCell wsQuellSheet, "Z_DatVwZweck1"
TransferCell wsQuellSheet, "Z_AGEinreicher"
TransferCell wsQuellSheet, "Z_AGTel"
TransferCell wsQuellSheet, "Z_Sonst"
TransferCell wsQuellSheet, "Z_AuftragsArt"
TransferCell wsQuellSheet, "Z_LastArt"
TransferCell wsQuellSheet, "Z_BatchBooking"
TransferCell wsQuellSheet, "Z_ZahlArt"
TransferCell wsQuellSheet, "Z_JBMandNr"
TransferCell wsQuellSheet, "Z_JBVwZweck"
TransferCell wsQuellSheet, "Z_Kopfzeile"
TransferCell wsQuellSheet, "Z_lfdDateiNr"
TransferCell wsQuellSheet, "Z_BglZettel"
TransferCell wsQuellSheet, "Z_Umlaute"
TransferCell wsQuellSheet, "Z_Split"
Application.EnableEvents = True
wbFile.Close False
MsgBox "Die Stammdaten wurden erfolgreich |fffd|bernommen", vbOKOnly, "Stammdaten|fffd|bernahme"
#End If
End Sub
Private Sub TransferCell(wsQuell As Worksheet, l11l1111l1111 As String)
If wsQuell.Range(l11l1111l1111).HasFormula Then
l1l111111lll1.Range(l11l1111l1111).FormulaLocal = wsQuell.Range(l11l1111l1111).FormulaLocal
Else
l1l111111lll1.Range(l11l1111l1111) = wsQuell.Range(l11l1111l1111)
End If
End Sub
Private Sub butLoad_Click()
Dim internet As Object
Dim sURL As String
Set internet = CreateObject("InternetExplorer.Application")
internet.Visible = True
sURL = "http://www.ex-sepa.de/"
internet.Navigate sURL & "?Download:Kundenbereich"
Me.Hide
End Sub


Attribute VB_Name = "l1l111111lll1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub CmdBut1_Click()
getDataFileName
End Sub
Private Sub CmdBut2_Click()
getOutputFilePath
End Sub
Private Sub CmdBut3_Click()
getBLZFileName
End Sub
Private Sub Worksheet_Change(ByVal lll1llll111l1 As Range)
Dim i As Integer
Dim str As String
On Error GoTo ErrHandle
If lll1llll111l1.Count > 1 Then Exit Sub
If Not (Intersect(lll1llll111l1, Range("Z_Dateiname")) Is Nothing And _
Intersect(lll1llll111l1, Range("Z_Kopfzeile")) Is Nothing) And _
Range("Z_DateiName") <> ThisWorkbook.Name Then
l1ll11l1l1 lll1llll111l1
ElseIf Not Intersect(lll1llll111l1, Range("Z_AGIBAN")) Is Nothing Then
Application.CalculateFull
If checkIban(Replace(Range("Z_AGIBAN"), " ", "")) < 0 Then
Range("Z_AGIBAN").Activate
MsgBox "Ung|fffd|ltige Pr|fffd|fsumme bzw. ung|fffd|ltige Zeichen in IBAN." & Chr(13) & _
"Bitte kontrollieren Sie Ihre Kontonummer.", vbCritical, "Eingabefehler"
ElseIf Right(Range("Z_AGIBAN"), 7) = "7200157" Or _
Right(Range("Z_AGIBAN"), 7) = "101520" Or lll1ll11llll1(Range("Z_AGIBAN")) Then
l111l1111
MsgBox "Diese Version ist veraltet. Kontaktieren Sie bitte den Autor per Email" & Chr(13) & "www.ex-sepa.de", vbCritical + vbOKOnly
End If
ElseIf Not Intersect(lll1llll111l1, Range("Z_AGCI")) Is Nothing Then
If lll1l1lllll11(Range("Z_AGCI")) < 0 Then
Range("Z_AGCI").Activate
MsgBox "Ung|fffd|ltige Pr|fffd|fsumme bzw. ung|fffd|ltige Zeichen in Gl|fffd|ubiger-ID." & Chr(13) & _
"Bitte kontrollieren Sie Ihre Eingabe.", vbCritical, "Eingabefehler"
End If
ElseIf Not Intersect(lll1llll111l1, Range("Z_AuftragsArt")) Is Nothing Or _
Not Intersect(lll1llll111l1, Range("Z_LastArt")) Is Nothing Then
Range("Z_Pain") = GetPainFormat(Range("Z_AuftragsArt"), Left(Range("Z_SubPain"), 2))
Application.CalculateFull
ElseIf Not Intersect(lll1llll111l1, Range("Z_Sonst")) Is Nothing Then
Application.CalculateFull
If Range("Z_Sonst").Text = "____" Then
Range("Z_Sonst") = ""
l1ll1lllll1l1
ElseIf Range("Z_Sonst").Text = "_MIX" Then
Range("Z_Sonst") = ""
l1lll111lll11
End If
ElseIf Not Intersect(lll1llll111l1, Range("Z_Version")) Is Nothing Then
ThisWorkbook.BuiltinDocumentProperties("Revision Number").Value = Left(Range("Z_Version"), 1) * 10000 + Mid(Range("Z_Version"), 3, 2) * 100 + Right(Range("Z_Version"), 2)
ElseIf Not Intersect(lll1llll111l1, Range("Z_Language")) Is Nothing Then
llll111111l11
End If
Exit Sub
ErrHandle:
MsgBox Err.Description & vbNewLine & "Source: l1l111111lll1 " & vbNewLine & _
"Wert:   " & lll1llll111l1.Value, vbCritical, "Fehler " & Err.Number
End Sub
Private Function lll1ll11llll1(ByRef lll1lll111111 As String) As Boolean
Select Case lll1lll111111
Case "AT432050303301122382", _
"DE61545100670193800678", _
"DE64672500200008007080", _
"DE96630901000115660003", _
"DE75380512900000137943", _
"DE34324604220040900012"
lll1ll11llll1 = True
Case Else
lll1ll11llll1 = False
End Select
End Function
Private Function getDataFileName()
Dim varPath As Variant
Dim s As String
Dim l11111llll1 As Integer
Dim i As Integer
#If Mac Then
MsgBox "Diese Funktion wird am MAC nicht unterst|fffd|tzt! Bitte korrekten Datenfile Namen von Hand eintragen."
#Else
#If VBA7 Then
s = IIf(InStrRev(Range("Z_Dateiname"), GetPathSep()), Range("Z_Dateiname"), ThisWorkbook.Path & GetPathSep())
varPath = DateiAuswaehlen(msoFileDialogFilePicker, s, "Datendatei")
#Else
varPath = Application.GetOpenFilename("Daten-Dateien (*.xls*;*.csv;*.txt), *.xls*;*.csv;*.txt", 1, "Datendatei |fffd|bernehmen")
#End If
l11111llll1 = InStrRev(varPath, GetPathSep())
If l11111llll1 > 1 Then If Left(varPath, l11111llll1 - 1) = ThisWorkbook.Path Then varPath = Mid(varPath, l11111llll1 + 1)
If varPath <> False Then
Range("Z_Dateiname") = varPath
End If
#End If
End Function
Public Function getOutputFilePath()
Dim l111111ll1l11 As String, s As String
Dim l11111llll1 As Integer
#If Mac Then
MsgBox "Function wird von MAC nicht unterst|fffd|tzt. Bitte geben Sie den korrekten Pfad von Hand ein."
#Else
#If VBA7 Then
s = IIf(InStrRev(Range("Z_AusgPfad"), GetPathSep()), Range("Z_AusgPfad"), ThisWorkbook.Path & GetPathSep())
l111111ll1l11 = DateiAuswaehlen(msoFileDialogFolderPicker, s, "Pfad |fffd|bernehmen")
#Else
l111111ll1l11 = Application.GetSaveAsFilename("", "Alle-Dateien (*.*),*.*", 1, "Pfad |fffd|bernehmen")
#End If
l11111llll1 = InStrRev(l111111ll1l11, GetPathSep())
If l11111llll1 > 1 Then
l111111ll1l11 = Left(l111111ll1l11, l11111llll1)
s = Left(l111111ll1l11, l11111llll1 - 1)
End If
If l111111ll1l11 <> "Falsch" Then
If (s <> ThisWorkbook.Path) Then
Range("Z_AusgPfad") = l111111ll1l11
Else: Range("Z_AusgPfad") = ""
End If
End If
#End If
End Function
Private Function l1ll1lllll1l1()
l1l111111lll1.Unprotect ""
ActiveWorkbook.Names.Add Name:="SeqTyp", RefersTo:="=Listen!$I$4:$I$7"
Range("C24") = "Feldname: E-Mailadresse (nur bei Zusatzpaket n|fffd|tig)"
Range("$A$32:$C$32").Clear
Range("$D$14:$F$18").Clear
Range("B32").Locked = True
Range("E3").Validation.Delete
Range("E3").Validation.Add Type:=xlValidateList, Formula1:="|fffd|berweisung,Basislastschrift,CDB"
l1l111111lll1.Protect "", , , , False
End Function
Private Function l1lll111lll11()
l1l111111lll1.Unprotect ""
Range("C24") = "Feldname: E-Mailadresse f|fffd|r Serienmails mit Outlook, z.B. Rechnungen"
ActiveWorkbook.Names.Add Name:="SeqTyp", RefersTo:="=Listen!$I$3:$I$7"
Cells(32, 1) = "Lastschrift-Art*"
Cells(32, 3) = "Feldname: Typ der Lastschrift (FRST, RCUR usw.; geht nur bei '_MIX')"
With Range("A32:B32").Borders
.LineStyle = xlContinuous
.Weight = xlThin
.ColorIndex = xlAutomatic
End With
Range("A32,C32").IndentLevel = 1
Range("A32").Font.FontStyle = "Fett"
Range("A32").FormatConditions.Delete
Range("A32").FormatConditions.Add Type:=xlExpression, Formula1:= _
"=ODER($E$3=""|fffd|berweisung"";$E$3=""CCU"")"
Range("A32").FormatConditions(1).Font.ColorIndex = 15
Range("B32").Interior.ColorIndex = 36
Range("B32").Validation.Delete
Range("B32").Validation.Add Type:=xlValidateList, Formula1:="=Datenfeldnamen"
Range("B32").FormatConditions.Delete
Range("B32").FormatConditions.Add Type:=xlExpression, Formula1:= _
"=ODER($E$3=""|fffd|berweisung"";$E$3=""CCU"")"
Range("B32").FormatConditions(1).Font.ColorIndex = 15
Range("B32").FormatConditions(1).Interior.ColorIndex = 19
Range("B32").FormatConditions.Add Type:=xlExpression, Formula1:= _
"=ODER($E$3=""|fffd|berweisung"";$E$3=""CCU"")"
Range("B32").FormatConditions(2).Font.ColorIndex = xlAutomatic
Range("B32").FormatConditions(2).Interior.ColorIndex = 36
Range("B32").Locked = False
Cells(14, 4) = "BatchBooking"
Cells(14, 5) = "WAHR"
Cells(14, 6) = "Sammelbuchung = wahr, Einzelbuchungen = falsch"
Range("D15") = "W|fffd|hrung"
Range("E15") = "EUR"
Range("F15") = "Euro, HUF oder schweizer Franken (nur f|fffd|r 008.001.002.CH zul|fffd|ssig)"
Cells(16, 4) = "Kat.Art der Zahlg.*"
Cells(16, 6) = "Art der Zahlung (Kategorie) in kodierter Form (ExternalCategoryPurpose1Code; siehe Spezifikation)"
Cells(17, 4) = "Art der Zahlung*"
Cells(17, 6) = "Art der Zahlung in kodierter Form (ExternalPurpose1Code; siehe Spezifikation)"
Cells(18, 6) = "* Brauchen wirklich nur diejenigen, die wissen, was das ist. Sonst bitte leerlassen!"
With Range("D14:E17").Borders
.LineStyle = xlContinuous
.Weight = xlThin
.ColorIndex = xlAutomatic
End With
Range("D14:F18").IndentLevel = 1
Range("D14:D17").Font.FontStyle = "Bold"
Range("F14:F18").Font.Size = 8
With Range("E14:E17")
.Interior.ColorIndex = 36
.HorizontalAlignment = xlCenter
.Locked = False
.Validation.Delete
End With
Range("E14").Validation.Add Type:=xlValidateList, Formula1:="wahr,falsch"
Range("E15").Validation.Add Type:=xlValidateList, Formula1:="EUR,HUF,CHF"
Range("E16").Validation.Add Type:=xlValidateList, Formula1:="=ExtCatPurpCode"
Range("E17").Validation.Add Type:=xlValidateList, Formula1:="=ExtPurpCode"
With Range("E3").Validation
.Delete
.Add Type:=xlValidateList, AlertStyle:=xlValidAlertInformation, Operator:=xlEqual, _
Formula1:="|fffd|berweisung,Basislastschrift,CDB,CCU"
.IgnoreBlank = True
.InCellDropdown = True
.InputTitle = ""
.ErrorTitle = ""
.InputMessage = ""
.ErrorMessage = ""
.ShowInput = True
.ShowError = True
End With
l1l111111lll1.Protect "", , , , False
End Function
Private Sub llll111111l11()
Dim i As Integer
Dim str As String
#If VBA6 Then
ll1lllll11l1.Columns("B:D").EntireColumn.Hidden = True
Select Case Range("Z_Language").Text
Case "english"
i = 1
str = "Create SEPA-File"
l1l111111lll1.Shapes("butCheckBIC").Visible = False
ll1lllll11l1.Name = "Error Codes"
ll1lllll11l1.Columns("C:C").EntireColumn.Hidden = False
Case "espa|fffd|ol"
i = 2
str = "Redactar SEPA-expediente"
l1l111111lll1.Shapes("butCheckBIC").Visible = False
ll1lllll11l1.Name = "C|fffd|digos de Error"
ll1lllll11l1.Columns("D:D").EntireColumn.Hidden = False
Case Else
i = 0
str = "SEPA-Datei erstellen"
l1l111111lll1.Shapes("butCheckBIC").Visible = True
ll1lllll11l1.Name = "Fehlernummern"
ll1lllll11l1.Columns("B:B").EntireColumn.Hidden = False
End Select
ll1lllll11l1.Cells(1, 1) = ll1lllll11l1.Name
l1l111111lll1.Unprotect ""
Application.ScreenUpdating = False
Sheets(Format(i)).Range("A1:A80").Copy
l1l111111lll1.Range("A1").PasteSpecial Paste:=xlPasteValuesAndNumberFormats, Operation:= _
xlNone, SkipBlanks:=False, Transpose:=False
l1l111111lll1.Range("B33") = Sheets(Format(i)).Range("B33")
Sheets(Format(i)).Range("C1:D80").Copy
l1l111111lll1.Range("C1").PasteSpecial Paste:=xlPasteValuesAndNumberFormats, Operation:= _
xlNone, SkipBlanks:=False, Transpose:=False
Sheets(Format(i)).Range("F1:F80").Copy
l1l111111lll1.Range("F1").PasteSpecial Paste:=xlPasteFormulasAndNumberFormats, Operation:= _
xlNone, SkipBlanks:=False, Transpose:=False
l1l111111lll1.Shapes("butSEPA").TextFrame.Characters.Text = str
str = "1 " & l1l111111lll1.Cells(13, 1)
l1l111111lll1.Shapes("butFileName").TextFrame.Characters.Text = str
l1l111111lll1.Shapes("butFileName").TextFrame.Characters(Start:=1, Length:=1).Font.Name = "Wingdings"
l1l111111lll1.Shapes("butFileName").TextFrame.Characters(Start:=2).Font.Name = "Arial Narrow"
str = "1 " & l1l111111lll1.Cells(14, 1)
l1l111111lll1.Shapes("butOutputPath").TextFrame.Characters.Text = str
l1l111111lll1.Shapes("butOutputPath").TextFrame.Characters(Start:=1, Length:=1).Font.Name = "Wingdings"
l1l111111lll1.Shapes("butOutputPath").TextFrame.Characters(Start:=2).Font.Name = "Arial Narrow"
l1l111111lll1.Range("Z_Language").Select
l1l111111lll1.Range("Z_AusfDat") = "=GetAusfDatum(0)"
l1l111111lll1.Protect "", , , , False
wsAnleitung.Unprotect "han*10"
wsAnleitung.Range(wsAnleitung.Cells(3, 10 + i), wsAnleitung.Cells(245, 10 + i)).Copy
wsAnleitung.Range("C3").PasteSpecial Paste:=xlPasteValuesAndNumberFormats, Operation:= _
xlNone, SkipBlanks:=False, Transpose:=False
Application.CutCopyMode = False
wsAnleitung.Name = wsAnleitung.Range("C3")
wsAnleitung.Protect "han*10", , , , False
With Application
.GoTo wsAnleitung.Range("C3")
.CutCopyMode = False
.ScreenUpdating = True
End With
l1l111111lll1.Activate
#Else
MsgBox "Mehrsprachigkeit wird erst ab Excel 2003 unterst|fffd|tzt."
#End If
End Sub
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
Cancel = False
If Not (Intersect(Range("B:B"), Target) Is Nothing And Intersect(Range("E:E"), Target) Is Nothing) Then
If Application.CutCopyMode Then
If MsgBox("Hier Werte Einf|fffd|gen?", vbQuestion & vbYesNo, "Werte einf|fffd|gen") = vbYes Then
Cancel = True
Target.PasteSpecial Paste:=xlPasteValues
Application.CutCopyMode = False
End If
End If
End If
End Sub


Attribute VB_Name = "ll1lllll11l1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "wsAnleitung"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
