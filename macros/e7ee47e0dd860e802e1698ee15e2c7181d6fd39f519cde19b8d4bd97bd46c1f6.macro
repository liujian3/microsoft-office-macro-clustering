Attribute VB_Name = "Feuil1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Feuil2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Sub Traitemant()
    Dim I, J, K, Cpt
    Application.ScreenUpdating = False
    Cpt = 0
    For I = 1 To 404 Step 4
        Cells(I, 5).Value = "Tab_Pi|fffd|ces(" & Cpt & ")="""
        For J = 0 To 3
            For K = 0 To 3
                If Cells(I, 1).Offset(J, K).Interior.Color = 0 Then
                    Cells(I, 5).Value = Cells(I, 5).Value & "0"
                Else
                    Cells(I, 5).Value = Cells(I, 5).Value & "1"
                End If
            Next K
        Next J
        Cells(I, 5).Value = Cells(I, 5).Value & """"
        Cells(Cpt + 1, 8).Value = Cells(I, 5).Value
        Cpt = Cpt + 1
    Next I
    Cpt = 1
End Sub

Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
    If Not Intersect(Target, Range("A1:D404")) Is Nothing Then
    Cancel = True
    If Target.Interior.Color <> 0 Then
        Target.Interior.Color = 0
    Else
        Target.Interior.Color = RGB(0, 255, 255)
    End If
    End If
End Sub
Attribute VB_Name = "Module1"
Option Explicit

#If VBA7 Or Win64 Then
    ' fonction de d|fffd|tection de touche "utilis|fffd|e"
    Declare PtrSafe Function GetAsyncKeyState Lib "user32" (ByVal vKey As LongPtr) As Integer
    ' fonction de pause en millisecondes
    Declare PtrSafe Sub Sleep Lib "Kernel32" (ByVal Attente As LongPtr)
    ' fonction pour gestion de l'affichage ou pas du curseur
    Declare PtrSafe Function ShowCursor Lib "user32" (ByVal bShow As LongPtr) As Long
#Else
    ' fonction de d|fffd|tection de touche "utilis|fffd|e"
    Declare Function GetAsyncKeyState Lib "user32" (ByVal vKey As Long) As Integer
    ' fonction de pause en millisecondes
    Declare Sub Sleep Lib "Kernel32" (ByVal Attente As Long)
    ' fonction pour gestion de l'affichage ou pas du curseur
    Declare Function ShowCursor Lib "user32" (ByVal bShow As Long) As Long
#End If

Public Col_P As Integer, Lig_P As Integer, P_A(), P_T(), P_C(1 To 4, 1 To 4), Dep_Y, Dep_X
Public Quel_Jeu As Integer, Avatar As String, Chrono, Attente As Boolean, En_Cours As Boolean, Vitesse
Public Max_Ligne As Integer

Sub Modif_Couleur(Coul As Integer)
    Dim Test_MFC, leplus, J, K
    Range("J2").Resize(44, 26).Select
    Range("J2").Resize(44, 26).Activate
    Selection.FormatConditions(1).Delete
    Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=ET(J2=1)"
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    On Error Resume Next
    Test_MFC = Range("_" & Coul).Interior.Gradient.ColorStops.Count
    If Err > 0 Then
        With Selection.FormatConditions(1)
            .Interior.Pattern = Range("_" & Coul).Interior.Pattern
            .Interior.PatternColor = Range("_" & Coul).Interior.PatternColor
            .Interior.Color = Range("_" & Coul).Interior.Color
        End With
    Else
        With Selection.FormatConditions(1)
            With .Interior
                .Pattern = Range("_" & Coul).Interior.Pattern
                If Range("_" & Coul).Interior.Pattern = xlPatternRectangularGradient Then
                    .Gradient.RectangleLeft = Range("_" & Coul).Interior.Gradient.RectangleLeft
                    .Gradient.RectangleRight = Range("_" & Coul).Interior.Gradient.RectangleRight
                    .Gradient.RectangleTop = Range("_" & Coul).Interior.Gradient.RectangleTop
                    .Gradient.RectangleBottom = Range("_" & Coul).Interior.Gradient.RectangleBottom
                Else
                    .Gradient.Degree = Range("_" & Coul).Interior.Gradient.Degree
                End If
                .Gradient.ColorStops.Clear
            End With
            If Range("_" & Coul).Interior.Gradient.ColorStops.Count >= 3 Then
                leplus = 0,5#
            Else
                leplus = 1
            End If
            J = 0
            For K = 0 To Range("_" & Coul).Interior.Gradient.ColorStops.Count - 1
                With .Interior.Gradient.ColorStops.Add(J)
                    .Color = Range("_" & Coul).Interior.Gradient.ColorStops(K + 1).Color
                    .TintAndShade = Range("_" & Coul).Interior.Gradient.ColorStops(K + 1).TintAndShade
                End With
                J = J + leplus
            Next K
        End With
    End If
    On Error GoTo 0
    ' gestion des bordures
    On Error Resume Next
    With Selection.FormatConditions(1).Borders(xlLeft)
        If Range("_" & Coul).Borders(xlLeft).LineStyle = xlNone Then
            .LineStyle = xlNone
        Else
            .LineStyle = Range("_" & Coul).Borders(xlLeft).LineStyle
            .ThemeColor = Range("_" & Coul).Borders(xlLeft).ThemeColor
            .TintAndShade = Range("_" & Coul).Borders(xlLeft).TintAndShade
            .Weight = Range("_" & Coul).Borders(xlLeft).Weight
        End If
    End With
    With Selection.FormatConditions(1).Borders(xlRight)
        If Range("_" & Coul).Borders(xlRight).LineStyle = xlNone Then
            .LineStyle = xlNone
        Else
            .LineStyle = Range("_" & Coul).Borders(xlRight).LineStyle
            .ThemeColor = Range("_" & Coul).Borders(xlRight).ThemeColor
            .TintAndShade = Range("_" & Coul).Borders(xlRight).TintAndShade
            .Weight = Range("_" & Coul).Borders(xlRight).Weight
        End If
    End With
    With Selection.FormatConditions(1).Borders(xlTop)
        If Range("_" & Coul).Borders(xlTop).LineStyle = xlNone Then
            .LineStyle = xlNone
        Else
            .LineStyle = Range("_" & Coul).Borders(xlTop).LineStyle
            .ThemeColor = Range("_" & Coul).Borders(xlTop).ThemeColor
            .TintAndShade = Range("_" & Coul).Borders(xlTop).TintAndShade
            .Weight = Range("_" & Coul).Borders(xlTop).Weight
            End If
    End With
    With Selection.FormatConditions(1).Borders(xlBottom)
        If Range("_" & Coul).Borders(xlBottom).LineStyle = xlNone Then
            .LineStyle = xlNone
        Else
            .LineStyle = Range("_" & Coul).Borders(xlBottom).LineStyle
            .ThemeColor = Range("_" & Coul).Borders(xlBottom).ThemeColor
            .TintAndShade = Range("_" & Coul).Borders(xlBottom).TintAndShade
            .Weight = Range("_" & Coul).Borders(xlBottom).Weight
            End If
    End With
    With Selection.FormatConditions(1)
        .Font.Color = Range("_" & Coul).Font.Color
        .Font.Bold = Range("_" & Coul).Font.Bold
        .Font.Italic = Range("_" & Coul).Font.Italic
        .Font.Underline = Range("_" & Coul).Font.Underline
    End With
    On Error GoTo 0
    Selection.FormatConditions(1).StopIfTrue = False
    
    ' mise en forme de la prochaine pi|fffd|ce
    Range("$AM5").Resize(4, 4).Select
    Range("$AM5").Resize(4, 4).Activate
    Selection.FormatConditions(1).Delete
    Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=ET(AM5=1)"
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    On Error Resume Next
    Test_MFC = Range("_" & Coul).Interior.Gradient.ColorStops.Count
    If Err > 0 Then
        With Selection.FormatConditions(1)
            .Interior.Pattern = Range("_" & Coul).Interior.Pattern
            .Interior.PatternColor = Range("_" & Coul).Interior.PatternColor
            .Interior.Color = Range("_" & Coul).Interior.Color
        End With
    Else
        With Selection.FormatConditions(1)
            With .Interior
                .Pattern = Range("_" & Coul).Interior.Pattern
                If Range("_" & Coul).Interior.Pattern = xlPatternRectangularGradient Then
                    .Gradient.RectangleLeft = Range("_" & Coul).Interior.Gradient.RectangleLeft
                    .Gradient.RectangleRight = Range("_" & Coul).Interior.Gradient.RectangleRight
                    .Gradient.RectangleTop = Range("_" & Coul).Interior.Gradient.RectangleTop
                    .Gradient.RectangleBottom = Range("_" & Coul).Interior.Gradient.RectangleBottom
                Else
                    .Gradient.Degree = Range("_" & Coul).Interior.Gradient.Degree
                End If
                .Gradient.ColorStops.Clear
            End With
            If Range("_" & Coul).Interior.Gradient.ColorStops.Count >= 3 Then
                leplus = 0,5#
            Else
                leplus = 1
            End If
            J = 0
            For K = 0 To Range("_" & Coul).Interior.Gradient.ColorStops.Count - 1
                With .Interior.Gradient.ColorStops.Add(J)
                    .Color = Range("_" & Coul).Interior.Gradient.ColorStops(K + 1).Color
                    .TintAndShade = Range("_" & Coul).Interior.Gradient.ColorStops(K + 1).TintAndShade
                End With
                J = J + leplus
            Next K
        End With
    End If
    On Error GoTo 0
    ' gestion des bordures
    On Error Resume Next
    With Selection.FormatConditions(1).Borders(xlLeft)
        If Range("_" & Coul).Borders(xlLeft).LineStyle = xlNone Then
            .LineStyle = xlNone
        Else
            .LineStyle = Range("_" & Coul).Borders(xlLeft).LineStyle
            .ThemeColor = Range("_" & Coul).Borders(xlLeft).ThemeColor
            .TintAndShade = Range("_" & Coul).Borders(xlLeft).TintAndShade
            .Weight = Range("_" & Coul).Borders(xlLeft).Weight
        End If
    End With
    With Selection.FormatConditions(1).Borders(xlRight)
        If Range("_" & Coul).Borders(xlRight).LineStyle = xlNone Then
            .LineStyle = xlNone
        Else
            .LineStyle = Range("_" & Coul).Borders(xlRight).LineStyle
            .ThemeColor = Range("_" & Coul).Borders(xlRight).ThemeColor
            .TintAndShade = Range("_" & Coul).Borders(xlRight).TintAndShade
            .Weight = Range("_" & Coul).Borders(xlRight).Weight
        End If
    End With
    With Selection.FormatConditions(1).Borders(xlTop)
        If Range("_" & Coul).Borders(xlTop).LineStyle = xlNone Then
            .LineStyle = xlNone
        Else
            .LineStyle = Range("_" & Coul).Borders(xlTop).LineStyle
            .ThemeColor = Range("_" & Coul).Borders(xlTop).ThemeColor
            .TintAndShade = Range("_" & Coul).Borders(xlTop).TintAndShade
            .Weight = Range("_" & Coul).Borders(xlTop).Weight
            End If
    End With
    With Selection.FormatConditions(1).Borders(xlBottom)
        If Range("_" & Coul).Borders(xlBottom).LineStyle = xlNone Then
            .LineStyle = xlNone
        Else
            .LineStyle = Range("_" & Coul).Borders(xlBottom).LineStyle
            .ThemeColor = Range("_" & Coul).Borders(xlBottom).ThemeColor
            .TintAndShade = Range("_" & Coul).Borders(xlBottom).TintAndShade
            .Weight = Range("_" & Coul).Borders(xlBottom).Weight
            End If
    End With
    With Selection.FormatConditions(1)
        .Font.Color = Range("_" & Coul).Font.Color
        .Font.Bold = Range("_" & Coul).Font.Bold
        .Font.Italic = Range("_" & Coul).Font.Italic
        .Font.Underline = Range("_" & Coul).Font.Underline
    End With
    On Error GoTo 0
    Selection.FormatConditions(1).StopIfTrue = False

    ' on |fffd|loigne la cellule active
    Range("AGC1").Select
End Sub

Sub MAJ_Scores()
    Dim I As Integer, J As Integer, Type_Jeu
    Application.ScreenUpdating = False
    Type_Jeu = Avatar
    Avatar = ""
    ' avec la feuille scores
    With Feuil1
        ' on boucle les 20 ligne de classement
        For I = 4 To 43
            ' on test afin de savoir si le score effectu|fffd| est sup|fffd|rieur au score de la ligne du classement test|fffd|e
            If Range("Le_Score").Value >= .Cells(I, 50) Then
                ' si c'est le cas on "descent" les lignes qui se trouve en dessous d'une ligne
                J = 43
                While J > I
                    .Cells(J, 48).Resize(, 7).Value = .Cells(J - 1, 48).Resize(, 7).Value
                    J = J - 1
                Wend
                ' on demande le nom du joueur
                UserForm1.Label1.Caption = "Veuillez saisir votre pseudo"
                UserForm1.Show
                ' on affiche les donn|fffd|es de la nouvelle ligne
                If Avatar <> "" Then
                    ' la date
                    .Cells(I, 48) = Date
                    ' le joueur
                    .Cells(I, 49) = Avatar
                    ' le score
                    .Cells(I, 50) = Range("Le_Score").Value
                    ' le niveau
                    .Cells(I, 51) = Range("Level").Value
                    ' le nombre de lignes
                    .Cells(I, 52) = Range("NB_Lignes").Value
                    ' le temps
                    .Cells(I, 53) = Chrono / 24 / 3600
                    ' le temps
                    .Cells(I, 54) = Type_Jeu
                    ' s|fffd|lection d'une cellule "loin"
                    .Range("CG1").Select
                End If
                ' on surligne la nouvelle ligne
                .Cells(I, 47).Resize(, 8).Interior.Color = RGB(10, 40, 10)
                Exit For
           End If
        Next I
    End With
End Sub

Sub On_Attend()
    If En_Cours = True Then
        If Attente = True Then
            Attente = False
            ActiveSheet.Shapes.Range("Pause_IMG").Visible = False
            ActiveSheet.Shapes("La_Pause").TextFrame.Characters.Text = "Mettre en pause"
        Else
            Attente = True
            ActiveSheet.Shapes.Range("Pause_IMG").Visible = True
            ActiveSheet.Shapes("La_Pause").TextFrame.Characters.Text = "Reprendre le jeu"
        End If
        Do
            DoEvents
        Loop While Attente = True
    End If
End Sub

Sub Standard()
    If En_Cours = True Then Exit Sub
    Vitesse = 1200
    Avatar = "Standard"
    Quel_Jeu = 7
    Application.ScreenUpdating = False
    Range("Zone").Value = 1000
    Range("Bord_Stand").Value = 100
    Range("Zone_Stand").Value = 0
    Max_Ligne = 31
    Call Jeu
End Sub

Sub Difficile()
    If En_Cours = True Then Exit Sub
    Vitesse = 1400
    Avatar = "Difficile"
    Quel_Jeu = 27
    Application.ScreenUpdating = False
    Range("Zone").Value = 1000
    Range("Bord_Stand").Value = 100
    Range("Zone_Stand").Value = 0
    Max_Ligne = 31
    Call Jeu
End Sub

Sub Mortel()
    If En_Cours = True Then Exit Sub
    Vitesse = 1600
    Avatar = "Mortel"
    Quel_Jeu = 50
    Application.ScreenUpdating = False
    Range("Zone").Value = 1000
    Range("Bord_Ulti").Value = 100
    Range("Grille").Value = 0
    Max_Ligne = 42
    Call Jeu
End Sub

Sub Ultimate()
    If En_Cours = True Then Exit Sub
    Vitesse = 1800
    Avatar = "Ultimate"
    Quel_Jeu = 101
    Application.ScreenUpdating = False
    Range("Zone").Value = 1000
    Range("Bord_Ulti").Value = 100
    Range("Grille").Value = 0
    Max_Ligne = 42
    Call Jeu
End Sub

Sub Fin()
    If En_Cours = True Then
        Chrono = Timer - Chrono
        Application.OnKey "{Left}"
        Application.OnKey "{Right}"
        Application.OnKey "{Up}"
        Application.OnKey "{Down}"
        Application.Calculation = xlCalculationAutomatic
        En_Cours = False
        If MsgBox("Voulez vous enregistrer votre score malgr|fffd| l'arr|fffd|t de la partie ?", vbYesNo) = 6 Then
            Call MAJ_Scores
        End If
        Range("AM5").Resize(4, 4).Value = 0
        End
    End If
End Sub

Sub Explications()
    UserForm2.Show
End Sub

Sub Jeu()
    Application.ScreenUpdating = False
    Attente = False
    En_Cours = True
    ActiveSheet.Shapes.Range("Pause_IMG").Visible = False
    Chrono = Timer
    Feuil1.Cells(4, 47).Resize(33, 8).Interior.Color = RGB(0, 0, 0)
    Dim I As Integer, J As Integer, Temp, Cpt
    Dim Dep As Boolean, Points
    Dim Pause, Delais, Tab_Pi|fffd|ces(101)

'***********************************************
'* ANULATION FONCTION DES TOUCHES DE DIRECTION *
'***********************************************
    Application.OnKey "{Left}", ""
    Application.OnKey "{Right}", ""
    Application.OnKey "{Up}", ""
    Application.OnKey "{Down}", ""
    Randomize

'****************************************
'* DEFINITION DES DIFFERENTES VARIABLES *
'****************************************
    ' d|fffd|finition des pi|fffd|ces
    Tab_Pi|fffd|ces(0) = "0100010001000100"
    Tab_Pi|fffd|ces(1) = "0000111010000000"
    Tab_Pi|fffd|ces(2) = "0000011100010000"
    Tab_Pi|fffd|ces(3) = "0000001001100100"
    Tab_Pi|fffd|ces(4) = "0000010001100010"
    Tab_Pi|fffd|ces(5) = "0000111001000000"
    Tab_Pi|fffd|ces(6) = "0000011001100000"
    Tab_Pi|fffd|ces(7) = "0000111011100000"
    Tab_Pi|fffd|ces(8) = "0000011100110000"
    Tab_Pi|fffd|ces(9) = "0000111011000000"
    Tab_Pi|fffd|ces(10) = "0000100010001110"
    Tab_Pi|fffd|ces(11) = "0000000001111110"
    Tab_Pi|fffd|ces(12) = "0000000011100111"
    Tab_Pi|fffd|ces(13) = "0000110011110000"
    Tab_Pi|fffd|ces(14) = "0000001111110000"
    Tab_Pi|fffd|ces(15) = "0000111111110000"
    Tab_Pi|fffd|ces(16) = "0000000101110001"
    Tab_Pi|fffd|ces(17) = "0000000111110001"
    Tab_Pi|fffd|ces(18) = "0000011000100000"
    Tab_Pi|fffd|ces(19) = "0000011101110111"
    Tab_Pi|fffd|ces(20) = "0000100011100010"
    Tab_Pi|fffd|ces(21) = "0000001011101000"
    Tab_Pi|fffd|ces(22) = "0000010000000000"
    Tab_Pi|fffd|ces(23) = "0000010001000000"
    Tab_Pi|fffd|ces(24) = "0000111010100000"
    Tab_Pi|fffd|ces(25) = "0000011100000000"
    Tab_Pi|fffd|ces(26) = "0010011100100000"
    Tab_Pi|fffd|ces(27) = "0000111100100000"
    Tab_Pi|fffd|ces(28) = "1111010000000000"
    Tab_Pi|fffd|ces(29) = "0100111100010000"
    Tab_Pi|fffd|ces(30) = "0100111000100000"
    Tab_Pi|fffd|ces(31) = "0010011101000000"
    Tab_Pi|fffd|ces(32) = "0010111110000000"
    Tab_Pi|fffd|ces(33) = "0010111101000000"
    Tab_Pi|fffd|ces(34) = "1000110011001000"
    Tab_Pi|fffd|ces(35) = "0001011101110001"
    Tab_Pi|fffd|ces(36) = "1000111111111000"
    Tab_Pi|fffd|ces(37) = "0000100110011111"
    Tab_Pi|fffd|ces(38) = "0000111110010000"
    Tab_Pi|fffd|ces(39) = "1111100110011001"
    Tab_Pi|fffd|ces(40) = "0010111100100010"
    Tab_Pi|fffd|ces(41) = "0000100011110001"
    Tab_Pi|fffd|ces(42) = "1100010001000110"
    Tab_Pi|fffd|ces(43) = "1110100011000000"
    Tab_Pi|fffd|ces(44) = "0111000100110000"
    Tab_Pi|fffd|ces(45) = "0000100111111001"
    Tab_Pi|fffd|ces(46) = "0100111100100000"
    Tab_Pi|fffd|ces(47) = "0010111100100000"
    Tab_Pi|fffd|ces(48) = "0001001101101100"
    Tab_Pi|fffd|ces(49) = "0000000100110110"
    Tab_Pi|fffd|ces(50) = "0110111111110110"
    Tab_Pi|fffd|ces(51) = "1001111110011001"
    Tab_Pi|fffd|ces(52) = "1010111101010000"
    Tab_Pi|fffd|ces(53) = "0101111110100000"
    Tab_Pi|fffd|ces(54) = "1111100011110000"
    Tab_Pi|fffd|ces(55) = "0001000111010111"
    Tab_Pi|fffd|ces(56) = "1000100010111110"
    Tab_Pi|fffd|ces(57) = "0000011101010111"
    Tab_Pi|fffd|ces(58) = "1111100110011111"
    Tab_Pi|fffd|ces(59) = "1111111111111111"
    Tab_Pi|fffd|ces(60) = "0000000100110111"
    Tab_Pi|fffd|ces(61) = "0001001101111111"
    Tab_Pi|fffd|ces(62) = "0011011111101100"
    Tab_Pi|fffd|ces(63) = "1000100111110001"
    Tab_Pi|fffd|ces(64) = "0001100111111000"
    Tab_Pi|fffd|ces(65) = "0000100110010000"
    Tab_Pi|fffd|ces(66) = "0001100110010001"
    Tab_Pi|fffd|ces(67) = "0000000010010000"
    Tab_Pi|fffd|ces(68) = "1001000000001001"
    Tab_Pi|fffd|ces(69) = "1001011001101001"
    Tab_Pi|fffd|ces(70) = "0110100110010110"
    Tab_Pi|fffd|ces(71) = "1100110011111111"
    Tab_Pi|fffd|ces(72) = "0000010101000111"
    Tab_Pi|fffd|ces(73) = "0010010010010010"
    Tab_Pi|fffd|ces(74) = "0111110110001000"
    Tab_Pi|fffd|ces(75) = "1110101100010001"
    Tab_Pi|fffd|ces(76) = "0100110110110010"
    Tab_Pi|fffd|ces(77) = "0010101111010100"
    Tab_Pi|fffd|ces(78) = "0110111110011001"
    Tab_Pi|fffd|ces(79) = "0110011101110000"
    Tab_Pi|fffd|ces(80) = "1110100011001000"
    Tab_Pi|fffd|ces(81) = "0111000100110001"
    Tab_Pi|fffd|ces(82) = "1000010000100001"
    Tab_Pi|fffd|ces(83) = "0000000111010001"
    Tab_Pi|fffd|ces(84) = "0011111000100011"
    Tab_Pi|fffd|ces(85) = "0011001011100011"
    Tab_Pi|fffd|ces(86) = "1000010001101001"
    Tab_Pi|fffd|ces(87) = "1011100000011101"
    Tab_Pi|fffd|ces(88) = "0000111101011101"
    Tab_Pi|fffd|ces(89) = "0000111110101011"
    Tab_Pi|fffd|ces(90) = "0000011111001100"
    Tab_Pi|fffd|ces(91) = "0000111000110011"
    Tab_Pi|fffd|ces(92) = "0110001011101011"
    Tab_Pi|fffd|ces(93) = "0110010001111101"
    Tab_Pi|fffd|ces(94) = "0000001111100011"
    Tab_Pi|fffd|ces(95) = "0000101111101011"
    Tab_Pi|fffd|ces(96) = "0000100110010110"
    Tab_Pi|fffd|ces(97) = "1000000000010011"
    Tab_Pi|fffd|ces(98) = "1000000000110010"
    Tab_Pi|fffd|ces(99) = "1101110110011111"
    Tab_Pi|fffd|ces(100) = "1011101110011111"

    
    ' ligne de d|fffd|part de la pi|fffd|ce ainsi que la colonne
    Lig_P = 2
    Col_P = 21

    ' tirage au sort de la premi|fffd|re forme
    Temp = Int(Rnd * Quel_Jeu)
    Cpt = 1
    For I = 0 To 3
        For J = 0 To 3
            Cells(Lig_P, Col_P).Offset(I, J) = Mid(Tab_Pi|fffd|ces(Temp), Cpt, 1)
            Range("A2").Offset(I, J) = Mid(Tab_Pi|fffd|ces(Temp), Cpt, 1)
            Cpt = Cpt + 1
        Next J
    Next I
    
    ' tirage au sort de la prochaine forme
    Temp = Int(Rnd * Quel_Jeu)
    Cpt = 1
    For I = 0 To 3
        For J = 0 To 3
            Range("AM5").Offset(I, J) = Mid(Tab_Pi|fffd|ces(Temp), Cpt, 1)
            Cpt = Cpt + 1
        Next J
    Next I
    
    ' initilisation nombre de ligne
    Range("NB_Lignes").Value = 0
    
    ' initialisation du niveau
    Range("Level").Value = 1
    Call Modif_Couleur(Range("Level").Value)
    ' initilisation Score
    Points = 0
    Range("Le_Score").Value = 0
    
    ' on autorise le d|fffd|placement des pi|fffd|ces vers le bas
    Dep = True
    
    Application.ScreenUpdating = True
'****************************
'* BOUCLE PRINCIPALE DU JEU *
'****************************
    Do
        Pause = Timer
        Delais = Vitesse / 1000
        
'***********************************
'* BOUCLE SURVEILLANCE DES TOUCHES *
'***********************************
        Do
            ' on r|fffd|cup|fffd|re la pi|fffd|ce en jeu avec son environnement
            P_A = Cells(Lig_P, Col_P).Resize(4, 4).Value
            ' on r|fffd|cup|fffd|re la forme de la pi|fffd|ce seule
            P_T = Range("A2").Resize(4, 4).Value
            DoEvents
            ' surveillance des quatres touches
            If GetAsyncKeyState(35) Then
                Chrono = Timer - Chrono
                Application.OnKey "{Left}"
                Application.OnKey "{Right}"
                Application.OnKey "{Up}"
                Application.OnKey "{Down}"
                Application.Calculation = xlCalculationAutomatic
                En_Cours = False
                If MsgBox("Voulez vous enregistrer votre score malgr|fffd| l'arr|fffd|t de la partie ?", vbYesNo) = 6 Then
                    Call MAJ_Scores
                End If
                Range("Zone").Value = 1000
                Range("Bord_Stand").Value = 100
                Range("Zone_Stand").Value = 0
                Range("AM5").Resize(4, 4).Value = 0
                End
                
'***********************
'* TEST ROTATION PIECE *
'***********************
            ElseIf GetAsyncKeyState(38) Then
                Sleep (130)
                ' on test si la rotation est possible
                For I = 1 To 4
                    For J = 1 To 4
                        Temp = Temp + P_A(I, J)
                    Next J
                Next I
                If Temp <= 16 Then
                    Application.ScreenUpdating = False
                    ' on effectue la rotation sur la pi|fffd|ce de travail
                    For I = 1 To 4
                        For J = 1 To 4
                            P_C(J, I) = P_T(5 - I, J)
                        Next J
                    Next I
                    ' on modifie la forme de la pi|fffd|ce seule
                    Range("A2").Resize(4, 4) = P_C
                    ' on modifie la pi|fffd|ce en jeu par la pi|fffd|ce de travail
                    For I = 0 To 3
                        For J = 0 To 3
                            Cells(Lig_P, Col_P).Offset(I, J) = Range("A2").Offset(I, J)
                        Next J
                    Next I
                    Application.ScreenUpdating = True
                End If
                Temp = 0
                
'*********************************
'* DEPLACEMENT PIECE VERS LE BAS *
'*********************************
            ElseIf GetAsyncKeyState(40) Then
                If Test_D|fffd|placement(Lig_P, Col_P, 1, 0) Then
                    Application.ScreenUpdating = False
                    Lig_P = Lig_P + 1
                    Dep = True
                    For I = 0 To 3
                        For J = 0 To 3
                            If Cells(Lig_P, Col_P).Offset(I, J).Value < 2 Then
                                Cells(Lig_P, Col_P).Offset(I, J) = Range("A2").Offset(I, J)
                            End If
                        Next J
                    Next I
                    For I = 0 To 3
                        If Cells(Lig_P, Col_P).Offset(-1, I) = 0 Or Cells(Lig_P, Col_P).Offset(-1, I) = 1 Then
                            Cells(Lig_P, Col_P).Offset(-1, I) = 0
                        End If
                    Next I
                    Application.ScreenUpdating = True
                Else
                    Dep = False
                    Exit Do
                End If
                
'************************************
'* DEPLACEMENT PIECE VERS LA GAUCHE *
'************************************
            ElseIf GetAsyncKeyState(37) Then
                Sleep (50)
                Dep_Y = -1: Dep_X = 0
                If Test_D|fffd|placement(Lig_P, Col_P, Dep_X, Dep_Y) Then
                    Application.ScreenUpdating = False
                    Col_P = Col_P - 1
                    For I = 0 To 3
                        For J = 0 To 3
                            If Cells(Lig_P, Col_P).Offset(I, J).Value < 2 Then
                                Cells(Lig_P, Col_P).Offset(I, J) = Range("A2").Offset(I, J)
                            End If
                        Next J
                    Next I
                    For I = 0 To 3
                        If Cells(Lig_P, Col_P).Offset(I, 4) = 0 Or Cells(Lig_P, Col_P).Offset(I, 4) = 1 Then
                            Cells(Lig_P, Col_P).Offset(I, 4) = 0
                        End If
                    Next I
                    Application.ScreenUpdating = True
                End If
                
'************************************
'* DEPLACEMENT PIECE VERS LA DROITE *
'************************************
            ElseIf GetAsyncKeyState(39) Then
                Sleep (50)
                Dep_Y = 1: Dep_X = 0
                If Test_D|fffd|placement(Lig_P, Col_P, Dep_X, Dep_Y) Then
                    Application.ScreenUpdating = False
                    Col_P = Col_P + 1
                    For I = 0 To 3
                        For J = 0 To 3
                            If Cells(Lig_P, Col_P).Offset(I, J) < 2 Then
                                Cells(Lig_P, Col_P).Offset(I, J) = Range("A2").Offset(I, J)
                            End If
                        Next J
                    Next I
                    For I = 0 To 3
                        If Cells(Lig_P, Col_P).Offset(I, -1) = 0 Or Cells(Lig_P, Col_P).Offset(I, -1) = 1 Then
                            Cells(Lig_P, Col_P).Offset(I, -1) = 0
                        End If
                    Next I
                    Application.ScreenUpdating = True
                End If

'******************************************
'* FIN DE BOUCLE SURVEILLANCE DES TOUCHES *
'******************************************
            End If
        Loop While Pause + Delais > Timer
        
'*********************************************
'* DEPLACEMENT PIECE VERS LE BAS AUTOMATIQUE *
'*********************************************
        If Test_D|fffd|placement(Lig_P, Col_P, 1, 0) And Dep = True Then
            Application.ScreenUpdating = False
            Lig_P = Lig_P + 1
            Dep = True
            For I = 0 To 3
                For J = 0 To 3
                    If Cells(Lig_P, Col_P).Offset(I, J).Value < 2 Then
                        Cells(Lig_P, Col_P).Offset(I, J) = Range("A2").Offset(I, J)
                    End If
                Next J
            Next I
            For I = 0 To 3
                If Cells(Lig_P, Col_P).Offset(-1, I) = 0 Or Cells(Lig_P, Col_P).Offset(-1, I) = 1 Then
                    Cells(Lig_P, Col_P).Offset(-1, I) = 0
                End If
            Next I
            Application.ScreenUpdating = True
        Else
            Dep = False
        End If
        
'********************************
'* GESTION PIECE ARRIVEE EN BAS *
'********************************
        If Dep = False Then
            Dep = True
            Application.ScreenUpdating = False
            ' on calcul le nombre de point pour cette nouvelle pi|fffd|ce pos|fffd|e
            Points = Points + (Range("Level").Value) * 2 + IIf(Avatar = "Standard", 0, 5)
            Range("Le_Score").Value = Points
            For I = 0 To 3
                For J = 0 To 3
                    If Range("A2").Offset(I, J) = 1 Then
                        Cells(Lig_P, Col_P).Offset(I, J) = 20
                    End If
                Next J
            Next I
            Application.ScreenUpdating = True
            Sleep (5)
            ' test de pr|fffd|sence de ligne pleine
            Temp = 1
            For I = 3 To Max_Ligne
                If Application.WorksheetFunction.CountIf(Cells(I, 13).Resize(, 20), 0) = 0 Then
                    Range("NB_Lignes").Value = Range("NB_Lignes").Value + 1
                    If Range("NB_Lignes").Value Mod 10 = 0 Then
                        Range("Level").Value = Range("Level").Value + 1
                        If Range("Level").Value > 9 Then
                            Call Modif_Couleur(Range("Level").Value Mod 10)
                        Else
                            Call Modif_Couleur(Range("Level").Value)
                        End If
                        Vitesse = Vitesse - 100
                        If Vitesse < 0 Then Vitesse = 0
                    End If
                    If Max_Ligne = 31 Then
                        Cells(I, 15).Resize(, 16).Value = 30
                    Else
                        Cells(I, 13).Resize(, 20).Value = 30
                    End If
                    Pause = Timer
                    Delais = 5 / 100
                    Do
                        DoEvents
                    Loop While Pause + Delais > Timer
                    For J = 0 To IIf(Max_Ligne = 31, 16, 20) - 1
                        Cells(I, IIf(Max_Ligne = 31, 15, 13) + J).Value = 0
                        Delais = 2 / 100
                        Do
                            DoEvents
                        Loop While Pause + Delais > Timer
                        Cells(4, IIf(Max_Ligne = 31, 15, 13) + J).Resize(I - 3).Value = Cells(3, IIf(Max_Ligne = 31, 15, 13) + J).Resize(I - 3).Value
                        Cells(3, IIf(Max_Ligne = 31, 15, 13) + J).Value = 0
                    Next J
                    Points = Points + (30 + (Temp * Range("Level").Value * 5))
                    Range("Le_Score").Value = Points
                    Temp = Temp + 1
                End If
            Next I
            Temp = 0
            Range("A2").Resize(4, 4).Value = Range("AM5").Resize(4, 4).Value
            Lig_P = 2
            Col_P = 21
            
            ' test si perdu
            If Application.WorksheetFunction.Sum(Cells(4, IIf(Max_Ligne = 31, 15, 13)).Resize(, IIf(Max_Ligne = 31, 16, 20))) >= 20 Then
                Chrono = Timer - Chrono
                Application.OnKey "{Left}"
                Application.OnKey "{Right}"
                Application.OnKey "{Up}"
                Application.OnKey "{Down}"
                Application.Calculation = xlCalculationAutomatic
                MsgBox ("Perdu !")
                Call MAJ_Scores
                En_Cours = False
                Range("Zone").Value = 1000
                Range("Bord_Stand").Value = 100
                Range("Zone_Stand").Value = 0
                End
            End If
            Application.ScreenUpdating = False
            ' mise en place de la pi|fffd|ce en jeu
            For I = 0 To 3
                For J = 0 To 3
                    Cells(Lig_P, Col_P).Offset(I, J) = Range("A2").Offset(I, J)
                Next J
            Next I
            ' tirage au sort de la prochaine forme
            Temp = Int(Rnd * Quel_Jeu)
            Cpt = 1
            For I = 0 To 3
                For J = 0 To 3
                    Range("AM5").Offset(I, J) = Mid(Tab_Pi|fffd|ces(Temp), Cpt, 1)
                    Cpt = Cpt + 1
                Next J
            Next I
            Application.ScreenUpdating = True
        End If
    Loop
End Sub

Function Test_D|fffd|placement(X, Y, Dx, Dy)
    Dim I As Integer, J As Integer
    If Dx = 1 Then
        For I = 0 To 3
            For J = 4 To 1 Step -1
                If Range("A2").Offset(J - 1, I) > 0 Then
                    If Cells(X, Y).Offset(J, I) > 0 Then
                        Test_D|fffd|placement = False
                        Exit Function
                    Else
                        Exit For
                    End If
                End If
            Next J
        Next I
    Else
        If Dy = 1 Then
            For I = 0 To 3
                For J = 4 To 1 Step -1
                    If Range("A2").Offset(I, J - 1) > 0 Then
                        If Cells(X, Y).Offset(I, J) > 0 Then
                            Test_D|fffd|placement = False
                            Exit Function
                        Else
                            Exit For
                        End If
                    End If
                Next J
            Next I
        Else
            For I = 0 To 3
                For J = -1 To 2
                    If Range("A2").Offset(I, J + 1) > 0 Then
                        If Cells(X, Y).Offset(I, J) > 0 Then
                            Test_D|fffd|placement = False
                            Exit Function
                        Else
                            Exit For
                        End If
                    End If
                Next J
            Next I
        End If
    End If
    Test_D|fffd|placement = True
End Function
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Workbook_BeforeClose(Cancel As Boolean)
    Application.DisplayStatusBar = True
    ActiveWindow.DisplayHeadings = True
    Application.DisplayFormulaBar = True
    With ActiveWindow
        .DisplayHorizontalScrollBar = True
        .DisplayVerticalScrollBar = True
        .DisplayWorkbookTabs = True
    End With
    Application.DisplayAlerts = False
    Application.Quit
End Sub

Private Sub Workbook_Open()
    Feuil1.Activate
    Application.DisplayStatusBar = False
    ActiveWindow.DisplayHeadings = False
    Application.DisplayFormulaBar = False
    With ActiveWindow
        .DisplayHorizontalScrollBar = False
        .DisplayVerticalScrollBar = False
        .DisplayWorkbookTabs = False
    End With
End Sub


Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{89EF364A-856D-4229-A440-5D98ED49137E}{56EE1005-E392-49CA-AE90-CFC0F70E7DC8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Option Explicit

Private Sub TextBox1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    If KeyCode = 13 Then
        If TextBox1 <> "" Then
            Avatar = TextBox1
        Else
            Avatar = ""
        End If
        Unload Me
    End If
End Sub

Private Sub UserForm_Initialize()
    TextBox1.SetFocus
End Sub
Attribute VB_Name = "UserForm2"
Attribute VB_Base = "0{AE050390-0EC0-4CF6-BE0F-979938CDAC6B}{69AD50C3-FF1B-4483-9842-B898AF2CC070}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit



INQUEST-PP=macro
