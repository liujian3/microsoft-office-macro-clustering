Attribute VB_Name = "Hoja1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton2, 2, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 1, 1, MSForms, CommandButton"
Private Sub CommandButton1_Click()

   Call BorraMatrizTrazabilidad("Trazabilidad Req-CU")
   Call RellenaMatrizTrazabilidad("Trazabilidad Req-CU", 9, 2)

End Sub

Private Sub CommandButton2_Click()
Call Ayuda("Trazabilidad Req-CU", "")
End Sub

Attribute VB_Name = "Hoja17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton2, 2, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 1, 1, MSForms, CommandButton"
Private Sub CommandButton1_Click()

  Call BorraMatrizTrazabilidad("Trazabilidad CU-CP")
  Call RellenaMatrizTrazabilidad("Trazabilidad CU-CP", 5, 2)
        
End Sub


Private Sub CommandButton2_Click()
Call Ayuda("Trazabilidad CU-CP", "")
End Sub

Attribute VB_Name = "Hoja2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hoja9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "frmAyuda"
Attribute VB_Base = "0{56F81C6A-7D88-4332-9BB8-CAE9C26D418F}{759CFEEA-C380-4FB8-88BE-E298FB598641}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub cmdAceptar_Click()
  frmAyuda.Hide
End Sub



Attribute VB_Name = "frm_lcf_ProgressBar"
Attribute VB_Base = "0{E84F941D-51A8-47CD-B140-D05B9EBDD0B6}{4FAC5CB6-DA03-4335-9D31-039A2D61281F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False





'>==============================================================================
'> /////////////////////////////////////////////////////////////////////////////
'>
'>  (c) Copyright 2007, Luis Carlos Flores L|fffd|pez
'>  Under creative commons Attribution-NonCommercial-ShareAlike
'>  http://creativecommons.org/licenses/
'>
'>  File                : frm_lcf_ProgressBar.frm
'>  Author              : Luis Carlos Flores L|fffd|pez
'>  Author web page     : www.Xperimentos.com
'>
'>  Form web page       : www.Xperimentos.com
'>
'>  Date                : 18/05/2001
'>  Last update date    : 10/06/2007
'>
'>  Language            : Visual Basic 6.0 for applications
'>  Made with           : Microsoft Excel
'>  Operating System    : Windows (Workstation & Server)
'>
'>  Description         : Progress Bar Form shows a windows form progress bar.
'>                        First of all you must initialize the progress bar,
'>                        use the "Initialize" method.
'>                        Shows the progress bar and use the increase method
'>                        to change the progress bar status.
'>                        Finally you should unload the windows form.
'>                        See below example for more details
'>
'>  Example:
'>
'      '>-----------------------------------------------------------------
'      Public Sub Example()
'          Dim oProgress As New frm_lcf_ProgressBar
'          Dim style As Integer
'          Dim windowCaption As String
'          Dim endRow As Long
'          Dim i As Long
'          style = 2                 ' Progress bar style (1 / 2).
'          windowCaption = "Example" ' Progress bar window caption.
'          endRow = 100000           ' Max value
'
'          ' Progress bar initialization
'          oProgress.Initialize endRow, style, windowCaption
'          oProgress.Show 0          ' Shows the progress bar window
'
'          For i = 0 To endRow - 4   ' Dummy loop for this example
'              '--
'              ' <<Do something, put here your code>>
'              '--
'              oProgress.Increase    ' Increases 1 unit the progress bar
'          Next
'          oProgress.Increase 4      ' Increases 4 units the progress bar
'          Unload oProgress          ' Unload progress bar window
'      End Sub
'      '>-----------------------------------------------------------------
'>
'>  History:
'>  18/05/2001        First version
'>  12/01/2004        New visual style
'>  22/05/2005        Some additions
'>  10/06/2007        Instructions was added
'>
'>  Version 0.5, 10/06/2007
'>
'> /////////////////////////////////////////////////////////////////////////////
'>==============================================================================
Option Explicit


'>==============================================================================
' Local Variables
Private mIntCurrent As Long
Private mIntMax As Long
Private Const c_MAX_LENG = 196
Private mIntType As Integer


'>==============================================================================
' Initialize the progress bar
' Params:
'       - vMax     - Max value = 100%. When the 100% of process has done
'       - vType    - visual style (1,2)
'       - vCaption - Window caption
Public Sub Initialize(vMax As Long, Optional vType As Integer = 1, Optional vCaption As String = "")
    mIntType = vType
    txtBar.Left = 6
    txtBar.Top = 6
    txtBar.Width = 198
    txtBar.Height = 26
    
    If vCaption <> "" Then
        Me.Caption = vCaption
    End If
    
    Select Case mIntType
        Case 1
            cmdProgressBar.Visible = True
            txt_ProgressBar.Visible = False
            txt_Blue.Visible = False
            txt_Grey.Visible = False
            
            cmdProgressBar.Left = 7
            cmdProgressBar.Top = 7
            cmdProgressBar.Height = 24
            cmdProgressBar.Width = 0
            cmdProgressBar.Caption = "0%"
        Case 2
            cmdProgressBar.Visible = False
            txt_ProgressBar.Visible = True
            txt_Blue.Visible = True
            txt_Grey.Visible = True
            
            txt_ProgressBar.Left = 7
            txt_ProgressBar.Top = 7.5
            txt_ProgressBar.Height = 23
            txt_ProgressBar.Width = 0

            txt_Blue.Left = 90
            txt_Blue.Top = 12
            txt_Blue.Height = 16
            txt_Blue.Width = 0
            txt_Blue.Caption = "0%"
            
            txt_Grey.Left = 90
            txt_Grey.Top = 12
            txt_Grey.Height = 16
            txt_Grey.Width = 36
            txt_Grey.Caption = "0%"
    End Select
    
    mIntCurrent = 0
    mIntMax = vMax
    
    DoEvents
End Sub
'>==============================================================================


'>==============================================================================
' Increase one unit the progress bar
Public Sub Increase(Optional vIncrease As Long = 1)
    Dim tmpBarValue As Integer
    mIntCurrent = mIntCurrent + vIncrease
    
    tmpBarValue = CInt(mIntCurrent * (c_MAX_LENG / mIntMax))
    Select Case mIntType
        Case 1
            cmdProgressBar.Width = tmpBarValue
            cmdProgressBar.Caption = Trim(CStr(CInt(tmpBarValue * (100 / c_MAX_LENG)))) & "%"
        Case 2
            txt_ProgressBar.Width = tmpBarValue
            If txt_ProgressBar.Width + txt_ProgressBar.Left >= txt_Blue.Left And txt_Blue.Width < txt_Grey.Width Then
                txt_Blue.Width = txt_ProgressBar.Width - 90 + 7
            End If
            txt_Blue.Caption = Trim(CStr(CInt(tmpBarValue * (100 / c_MAX_LENG)))) & "%"
            txt_Grey.Caption = Trim(CStr(CInt(tmpBarValue * (100 / c_MAX_LENG)))) & "%"
    End Select
    DoEvents
End Sub
'>==============================================================================



'>==============================================================================
' On from terminate (close or unload)
Private Sub UserForm_Terminate()
    'gBlnStopProcess = True
End Sub
'>==============================================================================
Attribute VB_Name = "modConstruccionCPs"
' Versi|fffd|n 1.00.00_en
'  Se incluyen los botones de creaci|fffd|n de matrices de trazabilidad

Dim cont As Integer



Function LetraDeColumna(iCol As Integer) As String
   Dim iAlpha As Integer
   Dim iRemainder As Integer
   iAlpha = Int(iCol / 27)
   iRemainder = iCol - (iAlpha * 26)
   If iAlpha > 0 Then
      LetraDeColumna = Chr(iAlpha + 64)
   End If
   If iRemainder > 0 Then
      LetraDeColumna = LetraDeColumna & Chr(iRemainder + 64)
   End If
End Function




Function UltimaFilaActiva() As Integer

'Dim i As Integer

  'i = 7
  
  'Do While Sheets(ActiveSheet.Index).Cells(i, 7).Value <> "" Or Sheets(ActiveSheet.Index).Cells(i, 7).MergeCells = True
 '    i = i + 1
  'Loop
  
  'UltimaFilaActiva = i - 1
  
  If Sheets(ActiveSheet.Name).Index = 4 Then
    UltimaFilaActiva = Sheets(4).Columns(5).Find("*", , , , xlByColumns, xlPrevious).Row
  Else
     UltimaFilaActiva = Sheets("Impresi|fffd|n").Columns(9).Find("*", , , , xlByColumns, xlPrevious).Row
  End If

End Function


Sub Ayuda(Hoja As String, Mensaje As String)
      
   Select Case Hoja
   Case "Construcci|fffd|n Caso de Prueba"
       frmAyuda.txtAyuda.Text = Chr(10) & Chr(10) & "Ayuda sobre los comandos" & Chr(10) & Chr(10) & _
          "   'Mostrar/Ocultar' -  Muestra todas las columnas/Oculta columnas no esenciales" & Chr(10) & Chr(10) & _
          "   'Buscar/Reemplazar' -  Buscar el texto indicado y lo reemplaza por el texto indicado en toda la hoja. " & Chr(10) & Chr(10) & _
          "   'Copiar Caso de Prueba' -  Realiza una copia del Caso de Prueba seleccionado (una fila o todo el CP) en la fila seleccionada. " & Chr(10) & Chr(10) & _
          "   'Nuevo paso' -  Inserta una nueva fila de paso en el Caso de Prueba actual" & Chr(10) & Chr(10) & _
          "   'Borrar paso' - Borra la l|fffd|nea de paso seleccionada o todo el Caso de Prueba" & Chr(10) & Chr(10) & _
          "   'Pintar filas' - Rellena los Casos de Prueba impares con un color diferenciado" & Chr(10) & Chr(10) & _
          "   'Renumerar CPs' - Numera los CPs secuencialmente desde el CP001" & Chr(10) & Chr(10) & _
          "   'Renumerar Pasos' - Numera los pasos de cada caso de prueba secuencialmente desde el 1" & Chr(10) & Chr(10) & _
          "   'Agrupar/Desagrupar' - Agrupa o Desagrupa los campos comunes. Se aconseja utilizar el filtrado en modo desagrupado." & Chr(10) & Chr(10) & _
          "   'Importar Fichero' - Importa los Casos de Prueba de la hoja 'Definici|fffd|n Caso de Prueba' del fichero seleccionado." & Chr(10) & Chr(10) & _
          "   'Refrescar Definici|fffd|n CPs' -  Genera la plantilla de Casos de Prueba que ser|fffd|n cargados en QC (solo administradores)" & Chr(10) & Chr(10) & _
       " "
   Case "Impresi|fffd|n"
       frmAyuda.txtAyuda.Text = Chr(10) & Chr(10) & "Ayuda sobre los comandos" & Chr(10) & Chr(10) & _
          "   'Refrescar Tabla' -  Genera la tabla de Casos de Prueba imprimible. Una vez creada, no puede ser editada, aunque es posible seleccionar filtros o modificar el ancho de las columnas" & Chr(10) & Chr(10) & _
          "   Para utilizar el filtro se recomienda previamente usar el modo desagrupado en la pesta|fffd|a Construcci|fffd|n y volver a generar la tabla de Casos de Prueba imprimible."
   Case "Trazabilidad Req-CU"
       frmAyuda.txtAyuda.Text = Chr(10) & Chr(10) & "Ayuda sobre los comandos" & Chr(10) & Chr(10) & _
          "   'Rellenar matriz de Trazabilidad REQ-CU' -  Genera la matriz de trazabilidad Requisitos-Casos de Uso de acuerdo a la definici|fffd|n de los Casos de Prueba. La pesta|fffd|a 'Informe Trazabilidad' contiene una lista de errores encotrados durante la operaci|fffd|n." & Chr(10) & Chr(10) & _
               " Para generar correctamente la matriz, es necesario separar los requisitos con retorno de carro."
       frmAyuda.Caption = "Ayuda"
   Case "Trazabilidad CU-CP"
       frmAyuda.txtAyuda.Text = Chr(10) & Chr(10) & "Ayuda sobre los comandos" & Chr(10) & Chr(10) & _
          "   'Rellenar matriz de Trazabilidad CU-CP' -  Genera la matriz de trazabilidad Casos de Uso-Casos de Prueba de acuerdo a la definici|fffd|n de los Casos de Prueba. La pesta|fffd|a 'Informe Trazabilidad' contiene una lista de errores encotrados durante la operaci|fffd|n." & Chr(10) & Chr(10) & _
               " Para generar correctamente la matriz, es necesario separar los requisitos con retorno de carro."
       frmAyuda.Caption = "Ayuda"
    Case "Results"
       frmAyuda.txtAyuda.Text = Mensaje
       frmAyuda.Caption = "Resultados"
     
    End Select

frmAyuda.Show

End Sub




Function ObtenerIdCP(numCP As Integer) As String

  ' En funci|fffd|n del n|fffd|mero del CP, meto m|fffd|s o menos ceros
  If numCP < 10 Then
      ObtenerIdCP = "CP00" & CStr(numCP)
    Else
      If numCP < 100 Then
          ObtenerIdCP = "CP0" & CStr(numCP)
          Else
            ObtenerIdCP = "CP" & CStr(numCP)
      End If
    End If
    
End Function

Attribute VB_Name = "modMatrizTrazabilidad"
Public numErrores As Integer
Public bModificado As Boolean


Public Sub BorraMatrizTrazabilidad(sHoja As String)

Dim shtMatrizReq As Worksheet

   If sHoja = "Trazabilidad Req-CU" Then
       Set shtMatrizReq = ThisWorkbook.Sheets(5)
   Else
       Set shtMatrizReq = ThisWorkbook.Sheets(6)
   End If

    shtMatrizReq.Activate
    
    Rows("8:1000").Select
    Selection.Delete Shift:=xlUp
    Range("A8").Select

End Sub

Public Sub RellenaMatrizTrazabilidad(sHoja As String, nColEjeY As Integer, nColEjeX As Integer)

Dim nUltiFila As Integer
Dim nUltiColumna As Integer
Dim nFila As Integer
Dim nColumna As Integer
Dim Requisitos As String
Dim CalcularTrazabilidad As Boolean
Dim Cadena As String 'Para calcular el comienzo del rango de celdas de un caso de prueba
Dim FilaCabeceraCP As Integer ' Indica la fila en la que comienza un caso de prueba
Dim nUltiFilaCPs As Integer ' Indica la ultila fila de cps de la pesta|fffd|a de constuccion de casos de prueba

    Dim oProgress As New frm_lcf_ProgressBar 'Barra progreso
    Dim style As Integer 'Barra progreso
    Dim windowCaption As String 'Barra progreso
    Dim endRow As Long 'Barra progreso

' No calculo la trazabilidad de las filas que ya he calculado la trazabilidad en la fila anterior
Dim CeldaEjeX_anterior As String
Dim CeldaEjeY_anterior As String

' Para la hoja de la plantilla
Dim shtCPs As Worksheet
Dim shtMatrizReq As Worksheet
Dim shtInforme As Worksheet

numErrores = 0

On Error GoTo ErrAbreHojas
'Para que no actualice la pantalla
Application.ScreenUpdating = False


' Abro las hojas de calculo
Set shtInforme = ThisWorkbook.Sheets(7)
Set shtCPs = ThisWorkbook.Sheets(4)

If sHoja = "Trazabilidad Req-CU" Then
   Set shtMatrizReq = ThisWorkbook.Sheets(5)
Else
   Set shtMatrizReq = ThisWorkbook.Sheets(6)
End If

' Calculo la |fffd|ltima fila de la hoja de Construcci|fffd|n Caso de Prueba
shtCPs.Select

nUltiFila = UltimaFilaActiva

'Primero desbloqueo la hoja Informe
shtInforme.Unprotect ("P1n0cch10")


Call BorraIncidencias(shtInforme)  ' Borro las incidencias que hubiera
Call RellenaCabeceraMatriz(shtMatrizReq)


windowCaption = "Rellenando Matriz de Trazabilidad..." ' Progress bar window caption.


    'Barra progreso
    style = 1                 ' Progress bar style (1 / 2).
    windowCaption = "Rellenando Matriz..." ' Progress bar window caption.
    endRow = nUltiFila          ' Max value
    ' Progress bar initialization
    oProgress.Initialize endRow, style, windowCaption
    oProgress.Show 0
    
CeldaEjeX_anterior = ""
CeldaEjeY_anterior = ""

For nFila = 7 To nUltiFila
 
       Requisitos = shtCPs.Cells(nFila, nColEjeY).Value
   
      ' Si esta el campo vac|fffd|o, pongo una incidencia en el fichero
       If (Len(Trim(Requisitos)) = 0) Then
         Call AltaIncidencia(shtCPs.Cells(6, nColEjeY).Value, LetraCol(nColEjeY), nFila, "Celda vac|fffd|a ", shtInforme)
       Else
          If shtCPs.Cells(nFila, nColEjeX).Value = "" Then
          Call AltaIncidencia(shtCPs.Cells(6, nColEjeX).Value, LetraCol(nColEjeX), nFila, "Celda vac|fffd|a ", shtInforme)
          Else
             ' Si no es el mismo caso de prueba de la fila anterior calculo la trazabilidad
             If shtCPs.Cells(nFila, nColEjeX).Value <> CeldaEjeX_anterior Or _
                shtCPs.Cells(nFila, nColEjeY).Value <> CeldaEjeY_anterior Then
                    Do While (Len(Requisitos) > 0 And Left(Requisitos, 1) <> Chr$(10))
       
                     ' Si no hay separador compruebo que toda la cadena est|fffd| en la matriz de trazabilidad
                       If (InStr(1, Requisitos, Chr$(10)) = 0) Then
                          Call TrazarMatriz(shtCPs.Cells(nFila, nColEjeX).Value, Requisitos, shtMatrizReq)
                          Requisitos = ""
                        Else
                          Call TrazarMatriz(shtCPs.Cells(nFila, nColEjeX).Value, Left(Requisitos, InStr(1, Requisitos, Chr$(10)) - 1), shtMatrizReq)
                          Requisitos = Right(Requisitos, Len(Requisitos) - InStr(1, Requisitos, Chr$(10)))
                        End If
                    Loop
              End If
              ' Asigno los valores de las celdas anteriores a los de la fila actual
              CeldaEjeX_anterior = shtCPs.Cells(nFila, nColEjeX).Value
              CeldaEjeY_anterior = shtCPs.Cells(nFila, nColEjeY).Value
          End If
      End If
   
     ' Barra de progreso
   oProgress.Increase 1   ' Increases 1 unit the progress bar
Next nFila

    ' Barra de progreso
    Unload oProgress

' Ahora traceo en el otro sentido, que todas las X esten traceadas en el fichero de CPs
nUltiFilaCPs = nUltiFila

nUltiFila = 10

Do While (shtMatrizReq.Cells(nUltiFila, 1).Value <> "")
  nUltiFila = nUltiFila + 1
Loop

nUltiColumna = 2

Do While (shtMatrizReq.Cells(9, nUltiColumna).Value <> "")
  nUltiColumna = nUltiColumna + 1
Loop


For nFila = 10 To nUltiFila - 1
   For nColumna = 2 To nUltiColumna - 1
      If UCase(shtMatrizReq.Cells(nFila, nColumna).Value) = "X" Then
          If TrazadoCUs(shtMatrizReq.Cells(9, nColumna).Value, shtMatrizReq.Cells(nFila, 1).Value, shtCPs, nColEjeY, nColEjeX, nUltiFilaCPs) = False Then
             Call AltaIncidencia(shtCPs.Cells(6, nColEjeY).Value, LetraCol(nColumna), nFila, "Use Case " & shtMatrizReq.Cells(9, nColumna).Value & " no trazado con requisito " & shtMatrizReq.Cells(nFila, 1).Value & " en los Casos de Prueba", shtInforme)
          End If
      End If
   Next nColumna
Next nFila

Call FormateaCeldasMatriz(shtMatrizReq)
Call FormateaCabecerasMatriz(shtMatrizReq)


' Muestro el mensaje final
If (shtInforme.Cells(3, 1).Value <> "") Then
   Call Ayuda("Results", "Se encontraron " & CStr(numErrores) & " errores. Por favor, chequea la pesta|fffd|a '" & Sheets(7).Name & "' para m|fffd|s detalles.")
Else
   Call Ayuda("Results", "No se encotraron errores.")
   shtInforme.Cells(3, 1).Value = "No se encotraron errores."
End If

 ' Protejo la hoja
 'shtInforme.Protect Password:="Pruebas", DrawingObjects:=True, _
                                Contents:=True, Scenarios:=True
On Error GoTo 0
Exit Sub

ErrAbreHojas:
MsgBox "Error irrecuperable: " + Err.Description

End Sub


Public Sub FormateaCeldasMatriz(shtMatriz As Worksheet)

  Dim nFila As Integer
  Dim nColumna As Integer
  
  nFila = 10
  nColumna = 2
  
  shtMatriz.Activate
  
  Do While shtMatriz.Cells(nFila, 1).Value <> ""
      nColumna = 2
      Do While shtMatriz.Cells(9, nColumna).Value <> ""
        Range(LetraCol(nColumna) & CStr(nFila)).Select
            Selection.HorizontalAlignment = xlCenter
            With Selection.Borders(xlEdgeLeft)
              .LineStyle = xlContinuous
              .Weight = xlMedium
               .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlEdgeTop)
               .LineStyle = xlContinuous
              .Weight = xlMedium
              .ColorIndex = xlAutomatic
            End With
            With Selection.Borders(xlEdgeBottom)
              .LineStyle = xlContinuous
              .Weight = xlMedium
              .ColorIndex = xlAutomatic
             End With
            With Selection.Borders(xlEdgeRight)
               .LineStyle = xlContinuous
               .Weight = xlMedium
                .ColorIndex = xlAutomatic
            End With
            If shtMatriz.Cells(nFila, nColumna).Value <> "" Then
                With Selection.Interior
                  .Pattern = xlSolid
                .PatternColorIndex = xlAutomatic
                .Color = 255
                .TintAndShade = 0
                .PatternTintAndShade = 0
               End With
            End If
         nColumna = nColumna + 1
      Loop
      
    nFila = nFila + 1
  Loop
  
  ' Ahora meto las cabeceras de fila y columna
  

End Sub

Public Sub RellenaCabeceraMatriz(shtMatriz As Worksheet)
   shtMatriz.Activate
   
    
    '    Columns("A:B").Select
    'Selection.Delete Shift:=xlToLeft
    
    Range("B9").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    With Selection.Font
        .Name = "Arial"
        .Size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    With Selection.Font
        .Name = "Arial"
        .Size = 9
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    Selection.Copy
    Range("A10").Select
    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    
    
End Sub



Public Sub FormateaCabecerasMatriz(shtMatriz As Worksheet)

  Dim nFila As Integer
  Dim nColumna As Integer
  Dim i As Integer
  
    ' Inserto dos columnas
    'Columns("A:B").Select
    'Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Range("A8:B300").Select
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    
    ' Insert dos filas
    Rows("9:10").Select
    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
    

    
    nColumna = 4
    Do While shtMatriz.Cells(11, nColumna).Cells <> ""
       nColumna = nColumna + 1
    Loop
    nColumna = nColumna - 1
    
    Range("D2").Select
    Selection.Copy
    
    Range("D10:" & LetraCol(nColumna) & "10").Select
    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    'If shtMatriz.Name = "Trazabilidad Req-CU" Then
    '   shtMatriz.Cells(10, 4).Value = "Casos de Uso"
    'Else
    '   shtMatriz.Cells(10, 4).Value = "Casos de Prueba"
    'End If
    
    shtMatriz.Cells(10, 4).Value = "Casos de Uso"
    
    Range("B12:B44").Select
    ActiveWindow.ScrollRow = 13
    ActiveWindow.ScrollRow = 9
    ActiveWindow.ScrollRow = 8
    ActiveWindow.ScrollRow = 6
    ActiveWindow.ScrollRow = 5
    ActiveWindow.ScrollRow = 4
    ActiveWindow.ScrollRow = 3
    ActiveWindow.ScrollRow = 2
    ActiveWindow.ScrollRow = 1

    
    nFila = 12
    Do While shtMatriz.Cells(nFila, 3).Cells <> ""
       nFila = nFila + 1
    Loop
    nFila = nFila - 1
    
    Range("D2").Select
    Selection.Copy
    
    Range("B12:B" & CStr(nFila)).Select
    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.Merge
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 90
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    Range("B12:B" & CStr(nFila)).Select

    Selection.Merge
    If shtMatriz.Index = 5 Then   ' "Trazabilidad Req-CU"
       shtMatriz.Cells(12, 2).Value = "Requisitos"
    Else
       shtMatriz.Cells(12, 2).Value = "Casos de Prueba"
    End If
    
    With ActiveCell.Characters(Start:=1, Length:=10).Font
        .Name = "Arial"
        .FontStyle = "Negrita"
        .Size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 36
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    Range("B45").Select
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Range("B12:B" & CStr(nFila)).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 90
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With

    ' Si nFila < 15 entonces cojo las filas y las hago mas altas
    If nFila < 18 And nFila > 11 Then
      For i = 12 To nFila + 1
        Rows(CStr(i) & ":" & CStr(i)).Select
        Selection.RowHeight = 90 / (nFila + 1 - 12)
      Next i
    End If

    Columns("B:B").EntireColumn.AutoFit
    Columns("E:CY").Select
    Columns("E:CY").EntireColumn.AutoFit
    Range("A3").Select

End Sub



Public Sub AltaIncidencia(strCampo As String, strColCampo As String, nFila As Integer, strResumen As String, shtInforme As Worksheet)
 
Dim nUltiFila As Integer

nUltiFila = 3

Do While (shtInforme.Cells(nUltiFila, 1).Value <> "")
  nUltiFila = nUltiFila + 1
Loop

shtInforme.Cells(nUltiFila, 1).Value = strCampo
shtInforme.Cells(nUltiFila, 2).Value = CStr(nFila)
shtInforme.Cells(nUltiFila, 3).Value = strColCampo
shtInforme.Cells(nUltiFila, 4).Value = strResumen

numErrores = numErrores + 1

End Sub

Public Sub BorraIncidencias(shtInforme As Worksheet)
 
Dim nUltiFila As Integer

nUltiFila = 3

Do While (shtInforme.Cells(nUltiFila, 1).Value <> "")
  shtInforme.Cells(nUltiFila, 1).Value = ""
  shtInforme.Cells(nUltiFila, 2).Value = ""
  shtInforme.Cells(nUltiFila, 3).Value = ""
  shtInforme.Cells(nUltiFila, 4).Value = ""
  nUltiFila = nUltiFila + 1
Loop


End Sub

Public Function LetraCol(num As Integer) As String
  LetraCol = Cells(1, num).Address(False, True)
  LetraCol = Replace(Replace(LetraCol, "$", ""), "1", "")
End Function



Public Sub TrazarMatriz(CP As String, Requisito As String, shtMatrizReq As Worksheet)

   Dim nFila As Integer
   Dim nColumna As Integer

   nFila = 10
   nColumna = 2
 
   Do While (shtMatrizReq.Cells(nFila, 1).Value <> Requisito And shtMatrizReq.Cells(nFila, 1).Value <> "")
     nFila = nFila + 1
   Loop

   nColumna = 2

   Do While (shtMatrizReq.Cells(9, nColumna).Value <> CP And shtMatrizReq.Cells(9, nColumna).Value <> "")
     nColumna = nColumna + 1
   Loop

   ' Ya he encontrado la fila y columna objetivo. Marco con una X

   shtMatrizReq.Cells(nFila, 1).Value = Requisito
   shtMatrizReq.Cells(9, nColumna).Value = CP
   shtMatrizReq.Cells(nFila, nColumna).Value = "X"

    ' Copio estilo de fila
    Range("A10").Select
    Selection.Copy
    Range("A" & CStr(nFila)).Select
    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    
    ' Copio estilo de columna
    Range("B9").Select
    Selection.Copy
    Range(LetraCol(nColumna) & CStr(9)).Select
    Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    

End Sub

Public Function TrazadoCUs(CU As String, Requisito As String, shtCPs As Worksheet, nColEjeY As Integer, nColEjeX As Integer, nUltiFila As Integer) As Boolean

TrazadoCUs = False

Dim nFila As Integer

For nFila = 7 To nUltiFila
    If shtCPs.Cells(nFila, nColEjeX).Value = CU And InStr(1, shtCPs.Cells(nFila, nColEjeY).Value, Requisito) > 0 Then
        TrazadoCUs = True
    End If
Next nFila

End Function



' InQuest injected base64 decoded content
' n)bu

INQUEST-PP=macro
