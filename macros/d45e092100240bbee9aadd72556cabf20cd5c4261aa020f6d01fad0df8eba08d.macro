Attribute VB_Name = "Navigation"
Sub Save_As()
'
' Save_As Makro
'
Dim Data As Date


MyFullName = ThisWorkbook.FullName
pos = InStr(MyFullName, ".xlsm")
If pos > 0 Then MyFullName = Left(MyFullName, pos - 1)

pos = InStr(MyFullName, "_")
If pos > 0 Then MyFullName = Left(MyFullName, pos - 1)
Company = Range("Company_Name").Value
Data = Date
d = Day(Data)
m = Month(Data)
y = Year(Data)
US_Date = m & "-" & d & "-" & y
End_Str = "_" & Company & "_" & US_Date & ".xlsm"


NewName = MyFullName & End_Str
If Dir(NewName) <> "" Then
    NewName = Application.GetSaveAsFilename(NewName, "Excel Files (*.xlsm), *.xlsm")
End If

'preventing save if cancel pressed
If Left(NewName, 5) <> "False" Then
   ActiveWorkbook.SaveAs Filename:=NewName _
        , FileFormat:=xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
End If

End Sub

Sub RowHide()
'
' Hide specific rows in the tab based on module selections
'
Application.ScreenUpdating = False
Dim xChkBox As CheckBox
Dim xCell As Range
Dim xHide As Boolean
Dim i As Integer
Dim ws As Worksheet

If Sheets("Costs").Range("Simplified_scenario").Value = True Then
        Sheets("Costs").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column N and loop through the rows
            If Cells(i, 16).Value = "> show only for simplified" Then
                xHide = False
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
            
            If Cells(i, 16).Value = "> show only for complex" Then
                xHide = True
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
            
         Next i
End If

If Sheets("Costs").Range("Simplified_scenario").Value = False Then
        Sheets("Costs").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column N and loop through the rows
            If Cells(i, 16).Value = "> show only for simplified" Then
                xHide = True
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
            If Cells(i, 16).Value = "> show only for complex" Then
                xHide = False
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
        Next i
        
'        If Sheets("Costs").Range("Users_individual").Value > 0 Then
'        Sheets("Costs").Select
'        LastRow = ActiveSheet.UsedRange.Rows.Count
'        For i = 4 To LastRow
'        'Check column N and loop through the rows
'            If Cells(i, 17).Value = "> show only for individual" Then
'                xHide = False
'                ActiveSheet.Rows(i).Hidden = xHide
'                For Each xChkBox In ActiveSheet.CheckBoxes
'                    If xChkBox.TopLeftCell.Row = i Then
'                        xChkBox.Visible = Not xHide
'                    End If
'                Next
'            End If
'        Next i
'End If
'
'If Sheets("Costs").Range("Users_individual").Value <= 0 Then
'        Sheets("Costs").Select
'        LastRow = ActiveSheet.UsedRange.Rows.Count
'        For i = 4 To LastRow
'        'Check column N and loop through the rows
'            If Cells(i, 17).Value = "> show only for individual" Then
'                xHide = True
'                ActiveSheet.Rows(i).Hidden = xHide
'                For Each xChkBox In ActiveSheet.CheckBoxes
'                    If xChkBox.TopLeftCell.Row = i Then
'                        xChkBox.Visible = Not xHide
'                    End If
'                Next
'            End If
'        Next i
'End If
        
End If



Application.ScreenUpdating = True

End Sub

Sub Column_hide()

'
' Hides columns on the right
'

Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual


Dim oBk As Workbook
Dim oSht As Worksheet
Set oBk = ActiveWorkbook

For Each oSht In oBk.Worksheets
    If Not oSht.Name = "Reset" And Not oSht.Name = "Admin" Then ' prevents reset in output tabs
        oSht.Columns("M:XFD").EntireColumn.Hidden = True
    End If
Next

      
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic


End Sub
Sub RowHide_custom_timeline()

'
' Hide specific rows in the tab based on module selections
'
Application.ScreenUpdating = False
Dim xChkBox As CheckBox
Dim xCell As Range
Dim xHide As Boolean
Dim i As Integer
Dim ws As Worksheet

If Sheets("Costs").Range("Custom_timeline").Value = True Then
        Sheets("Costs").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column P and loop through the rows
            If Cells(i, 16).Value = "> show only for custom timeline" Then
                xHide = False
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
        Next i
            
End If

If Sheets("Costs").Range("Custom_timeline").Value = False Then
        Sheets("Costs").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column P and loop through the rows
            If Cells(i, 16).Value = "> show only for custom timeline" Then
                xHide = True
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
        Next i
End If
Application.ScreenUpdating = True
End Sub
Sub RowHide_last_list()
Application.ScreenUpdating = False
 tekst = "> show only for list 2"
 cell = "trigger_list"
 
 
If Sheets("Cost take-out").Range(cell).Value = True Then
        Sheets("Cost take-out").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column N and loop through the rows
            If Cells(i, 17).Value = tekst Then
                xHide = False
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
         Next i
End If

If Sheets("Cost take-out").Range(cell).Value = False Then
        Sheets("Cost take-out").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column N and loop through the rows
            If Cells(i, 17).Value = tekst Then
                xHide = True
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
         Next i
End If
RowHide_last_list2
Application.ScreenUpdating = True
End Sub
Sub RowHide_last_list2()
Application.ScreenUpdating = False
 tekst = "> show only for list 3"
 cell = "trigger_list2"
 
 
If Sheets("Cost take-out").Range(cell).Value = True Then
        Sheets("Cost take-out").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column N and loop through the rows
            If Cells(i, 17).Value = tekst Then
                xHide = False
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
         Next i
End If

If Sheets("Cost take-out").Range(cell).Value = False Then
        Sheets("Cost take-out").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column N and loop through the rows
            If Cells(i, 17).Value = tekst Then
                xHide = True
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
         Next i
End If
Application.ScreenUpdating = True
End Sub
Sub RowHide_cost_take_out()
Application.ScreenUpdating = False
tekst_show = "> show only for competitive product"
 tekst_hide = "> show only for capability"
 cell = "Q14"
 col_num = 16
 

If Sheets("Cost take-out").Range(cell).Value = True Then
        Sheets("Cost take-out").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column P and loop through the rows
            If Cells(i, col_num).Value = tekst_show Then
                xHide = False
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
            
            If Cells(i, col_num).Value = tekst_hide Then
                xHide = True
                ActiveSheet.Rows(i).Hidden = xHide
            End If
            
         Next i
         
RowHide_last_list
RowHide_last_list2
RowHide_sunk_cost

End If

If Sheets("Cost take-out").Range(cell).Value = False Then
        Sheets("Cost take-out").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column P and loop through the rows
            If Cells(i, col_num).Value = tekst_show Then
                xHide = True
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
            
            If Cells(i, col_num).Value = tekst_hide Then
                xHide = False
                ActiveSheet.Rows(i).Hidden = xHide
            End If
            
         Next i
End If


Application.ScreenUpdating = True
End Sub
Sub RowHide_sunk_cost()
Application.ScreenUpdating = False
 tekst_show = "> show only for sunk cost"
 cell = "Trigger_Sunk_cost"
 col_num = 17
 Sunk_costs = Array("trigger_sunk_cost_1", "trigger_sunk_cost_2", "trigger_sunk_cost_3", "trigger_sunk_cost_4", "trigger_sunk_cost_5", "trigger_sunk_cost_6", _
        "trigger_sunk_cost_7", "trigger_sunk_cost_8", "trigger_sunk_cost_9", "trigger_sunk_cost_10", "trigger_sunk_cost_11", "trigger_sunk_cost_12", "trigger_sunk_cost_13", "trigger_sunk_cost_14", "trigger_sunk_cost_15", "trigger_sunk_cost_16", _
        "trigger_sunk_cost_17", "trigger_sunk_cost_18", "trigger_sunk_cost_19", "trigger_sunk_cost_20")
 

If Sheets("Cost take-out").Range(cell).Value = False Then
       Sheets("Cost take-out").Select
       'LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 66 To 112
        'Check column Q and loop through the rows
            If Left(Cells(i, col_num).Value, 25) = tekst_show Then
                xHide = True
                ActiveSheet.Rows(i).Hidden = xHide
            End If
         Next i
End If

If Sheets("Cost take-out").Range(cell).Value = True Then
  For i = 66 To 112
     xHide = True
     ActiveSheet.Rows(i).Hidden = xHide
     If Cells(i, col_num).Value = tekst_show Then
        xHide = False
        ActiveSheet.Rows(i).Hidden = xHide
     End If
     
  Next i
     
    a = 1
    For Each trigger_cell In Sunk_costs
    If Sheets("Cost take-out").Range(trigger_cell).Value = True Then
            Sheets("Cost take-out").Select
            LastRow = ActiveSheet.UsedRange.Rows.Count
            For i = 66 To 112
            'Check column Q and loop through the rows
                tekst = tekst_show + " " + CStr(a)
                If Cells(i, col_num).Value = tekst Then
                    xHide = False
                    ActiveSheet.Rows(i).Hidden = xHide
                End If
                
             Next i
    End If
    a = a + 1
    Next
End If
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "PrintAll"
Sub Print_Analyis()

' Expand + sections

    If False = Application.Dialogs(xlDialogPrinterSetup).Show Then Exit Sub

    On Error Resume Next
    Worksheets.Application.ScreenUpdating = False
    Dim oBk As Workbook
    Dim oSht As Worksheet
    Set oBk = ActiveWorkbook

        For Each oSht In oBk.Worksheets
            Sheets(oSht.Name).Outline.ShowLevels 2
        Next

    Worksheets("About").Visible = False
    Worksheets("Admin").Visible = False
    Worksheets("Reset").Visible = False
    
 'Print the visible sheets
    ThisWorkbook.PrintOut
 
 'Restore the workbook
    Worksheets("About").Visible = True
    
        For Each oSht In oBk.Worksheets
            Sheets(oSht.Name).Outline.ShowLevels 2 ' changed from 1 to 2
        Next
    Worksheets.Application.ScreenUpdating = True

End Sub



Attribute VB_Name = "Reset"
Sub Reset_Sheet()
'
' Reset individual sheet
'

Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual

Dim Prot As Boolean
Dim ws As Worksheet

Set ws = ActiveWorkbook.ActiveSheet
'If ws.ProtectContents = True Then Prot = True
'If Prot Then Unprotect_All
    
Dim RangeStart As Integer
Dim RangeLast As Integer
Dim StartRow As Integer
Dim LastRow As Integer
Dim Col_Src As Integer
Dim Col_Dest As Integer
Dim Reset_Sel As Boolean


Dim i As Integer
Dim j As Integer


RangeStart = ws.Cells(1, 27).Value
RangeLast = ws.Cells(2, 27).Value

For j = RangeStart To RangeLast

    StartRow = Sheets("Reset").Cells(j, 4).Value
    LastRow = Sheets("Reset").Cells(j, 5).Value
    Col_Src = Sheets("Reset").Cells(j, 7).Value ' reset tab column
    Col_Dest = Sheets("Reset").Cells(j, 6).Value ' input sheet column

    For i = StartRow To LastRow

    ws.Cells(i, Col_Dest).Formula = Sheets("Reset").Cells(i, Col_Src).Formula

    Next i
    
Next j

ws.Activate
ws.Cells(1, 1).Select
'If Prot Then Protect_All

Application.ScreenUpdating = True
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
If ws.Name = "Costs" Then RowHide


End Sub

Sub Reset_All()

'
' Reset module
'

Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual

Dim Prot As Boolean
Dim ws As Worksheet

Set ws = ActiveWorkbook.ActiveSheet
'If ws.ProtectContents = True Then Prot = True
'If Prot Then Unprotect_All

Dim oBk As Workbook
Dim oSht As Worksheet
Set oBk = ActiveWorkbook

Dim RangeStart As Integer
Dim RangeLast As Integer
Dim StartRow As Integer
Dim LastRow As Integer
Dim Col_Src As Integer
Dim Col_Dest As Integer

Dim i As Integer
Dim j As Integer


For Each oSht In oBk.Worksheets
    If oSht.Cells(1, 27).Value > 0 And oSht.Visible = True And Not oSht.Name = "Reset" And Not oSht.Name = "Admin" And Not oSht.Name = "Sources" Then ' prevents reset in output tabs
        
    RangeStart = oSht.Cells(1, 27).Value
    RangeLast = oSht.Cells(2, 27).Value

    For j = RangeStart To RangeLast

        StartRow = Sheets("Reset").Cells(j, 4).Value
        LastRow = Sheets("Reset").Cells(j, 5).Value
        Col_Src = Sheets("Reset").Cells(j, 7).Value ' reset tab column
        Col_Dest = Sheets("Reset").Cells(j, 6).Value ' input sheet column

        For i = StartRow To LastRow

            oSht.Cells(i, Col_Dest).Formula = Sheets("Reset").Cells(i, Col_Src).Formula

        Next i
    
    Next j
        
    End If

Next


'If Prot Then Protect_All

Sheets("Inputs").Select
ActiveSheet.Cells(1, 1).Select
      
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic

RowHide

End Sub


Sub BuildReset()
'
' Update reset values in Reset tab for a selected column
'

Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual


Dim SheetName As String
Dim StartRow As Integer
Dim LastRow As Integer
Dim Col_Src As Integer
Dim Col_Dest As Integer

Dim i As Integer

SheetName = Sheets("Reset").Range("Reset_Sheet_name").Value
StartRow = Sheets("Reset").Range("Reset_Start_Row").Value
LastRow = Sheets("Reset").Range("Reset_Last_Row").Value
Col_Src = Sheets("Reset").Range("Reset_Src_Col").Value ' input sheet column
Col_Dest = Sheets("Reset").Range("Reset_Dest_Col").Value ' reset tab column



For i = StartRow To LastRow

    ActiveSheet.Cells(i, Col_Dest).Formula = Sheets(SheetName).Cells(i, Col_Src).Formula

Next

Application.EnableEvents = True
Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic

End Sub

Sub BuildResetRange()
'
' Update reset values in Reset tab for a selected range
'

Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual

Dim RangeStart As Integer
Dim RangeLast As Integer
Dim SheetName As String
Dim StartRow As Integer
Dim LastRow As Integer
Dim Col_Src As Integer
Dim Col_Dest As Integer

Dim i As Integer
Dim j As Integer


RangeStart = Sheets("Reset").Range("Reset_Range_Start_Row").Value
RangeLast = Sheets("Reset").Range("Reset_Range_Last_Row").Value

Offset = Sheets("Reset").Range("G20").Value
Sheets("Reset").Range(Cells(2, RangeStart + Offset), Cells(10000, RangeLast + Offset)).ClearContents

For j = RangeStart To RangeLast

    SheetName = Sheets("Reset").Cells(j, 1).Value
    StartRow = Sheets("Reset").Cells(j, 4).Value
    LastRow = Sheets("Reset").Cells(j, 5).Value
    Col_Src = Sheets("Reset").Cells(j, 6).Value ' input sheet column
    Col_Dest = Sheets("Reset").Cells(j, 7).Value ' reset tab column

    For i = StartRow To LastRow

        ActiveSheet.Cells(i, Col_Dest).Formula = Sheets(SheetName).Cells(i, Col_Src).Formula

    Next

Next

Application.EnableEvents = True
Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Change(ByVal Target As Range)
  
    If Not Intersect(Target, Range("Scenario_type")) Is Nothing Then
         RowHide
    End If
    
'    If Not Intersect(Target, Range("Users_individual")) Is Nothing Then
'         RowHide
'    End If
    
End Sub


Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Change(ByVal Target As Range)
  
    If Not Intersect(Target, Range("Last_list1")) Is Nothing Then
         RowHide_last_list
    End If
    
    If Not Intersect(Target, Range("Last_list2")) Is Nothing Then
         RowHide_last_list2
    End If
    
     If Not Intersect(Target, Range("Cost_out_scenario_type")) Is Nothing Then
         RowHide_cost_take_out
    End If
             
   
End Sub
Private Sub CommandButton1_Click()
 Range("v18").Cells.Value = Not (Range("v18").Cells.Value)
 tekst = "> show only for 1"
 cell = "v18"
 
 
If Sheets("Cost take-out").Range(cell).Value = True Then
        Sheets("Cost take-out").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column N and loop through the rows
            If Cells(i, 15).Value = tekst Then
                xHide = False
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
         Next i
End If

If Sheets("Cost take-out").Range(cell).Value = False Then
        Sheets("Cost take-out").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column N and loop through the rows
            If Cells(i, 15).Value = tekst Then
                xHide = True
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
         Next i
End If
 
 
End Sub

Private Sub CommandButton2_Click()
 tekst = "> show only for 2"
 cell = "v20"
 
Range(cell).Cells.Value = Not (Range(cell).Cells.Value)
 
If Sheets("Cost take-out").Range(cell).Value = True Then
        Sheets("Cost take-out").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column N and loop through the rows
            If Cells(i, 15).Value = tekst Then
                xHide = False
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
         Next i
End If

If Sheets("Cost take-out").Range(cell).Value = False Then
        Sheets("Cost take-out").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column N and loop through the rows
            If Cells(i, 15).Value = tekst Then
                xHide = True
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
         Next i
End If
 
 
End Sub

Private Sub CommandButton3_Click()
 tekst = "> show only for 3"
 cell = "v22"
 
Range(cell).Cells.Value = Not (Range(cell).Cells.Value)
 
If Sheets("Cost take-out").Range(cell).Value = True Then
        Sheets("Cost take-out").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column N and loop through the rows
            If Cells(i, 15).Value = tekst Then
                xHide = False
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
         Next i
End If

If Sheets("Cost take-out").Range(cell).Value = False Then
        Sheets("Cost take-out").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column N and loop through the rows
            If Cells(i, 15).Value = tekst Then
                xHide = True
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
         Next i
End If
End Sub

Private Sub CommandButton4_Click()
 tekst = "> show only for 4"
 cell = "v24"
 
Range(cell).Cells.Value = Not (Range(cell).Cells.Value)
 
If Sheets("Cost take-out").Range(cell).Value = True Then
        Sheets("Cost take-out").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column N and loop through the rows
            If Cells(i, 15).Value = tekst Then
                xHide = False
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
         Next i
End If

If Sheets("Cost take-out").Range(cell).Value = False Then
        Sheets("Cost take-out").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column N and loop through the rows
            If Cells(i, 15).Value = tekst Then
                xHide = True
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
         Next i
End If
End Sub

Private Sub CommandButton5_Click()
 tekst = "> show only for 5"
 cell = "v26"
 
Range(cell).Cells.Value = Not (Range(cell).Cells.Value)
 
If Sheets("Cost take-out").Range(cell).Value = True Then
        Sheets("Cost take-out").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column N and loop through the rows
            If Cells(i, 15).Value = tekst Then
                xHide = False
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
         Next i
End If

If Sheets("Cost take-out").Range(cell).Value = False Then
        Sheets("Cost take-out").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column N and loop through the rows
            If Cells(i, 15).Value = tekst Then
                xHide = True
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
         Next i
End If
End Sub

Private Sub CommandButton6_Click()
 tekst = "> show only for sunk cost"
 cell = "v30"
 
Range(cell).Cells.Value = Not (Range(cell).Cells.Value)
 
If Sheets("Cost take-out").Range(cell).Value = True Then
        Sheets("Cost take-out").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column N and loop through the rows
            If Cells(i, 15).Value = tekst Then
                xHide = False
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
         Next i
End If

If Sheets("Cost take-out").Range(cell).Value = False Then
        Sheets("Cost take-out").Select
        LastRow = ActiveSheet.UsedRange.Rows.Count
        For i = 4 To LastRow
        'Check column N and loop through the rows
            If Cells(i, 15).Value = tekst Then
                xHide = True
                ActiveSheet.Rows(i).Hidden = xHide
                For Each xChkBox In ActiveSheet.CheckBoxes
                    If xChkBox.TopLeftCell.Row = i Then
                        xChkBox.Visible = Not xHide
                    End If
                Next
            End If
         Next i
End If
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
