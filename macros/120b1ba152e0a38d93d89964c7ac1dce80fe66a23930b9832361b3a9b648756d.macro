Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Modul1"
Sub Convert_XML_to_Single_Text_Value_Pairs()
Attribute Convert_XML_to_Single_Text_Value_Pairs.VB_ProcData.VB_Invoke_Func = " \n14"
    '------------------------< Convert_XML_to_Single_Text_Value_Pairs() >------------------------
    Dim xmlRange As Range
    Dim cell As Range
    Dim sText As String
    'Set xmlRange = Selection
    Set xmlRange = Range("B:B")
    
    Dim bMatch As Boolean
    Dim iCell As Integer
    iCell = 0
    For Each cell In xmlRange.Cells
        '--------< Cell >--------
        DoEvents
        iCell = iCell + 1
        If iCell > 5000 Then Exit For
        bMatch = False
        
        
        '< get Cell >
        sText = cell.Text
        '</ get Cell >
        
        
        '< check end >
        If sText Like "" And iCol > 300 Then
            Exit For
        End If
        '</ check end >
        
        
        '< vars>
        Dim posXML1_Start As Integer
        Dim posXML1_End As Integer
        Dim posNext As Integer
        
        Dim posXML2_Start As Integer
        Dim posXML2_End As Integer
        '</ vars>
        
        '------< Check Tags >------
        posXML1_Start = InStr(1, sText, "<", vbBinaryCompare)
        If posXML1_Start > 0 Then
            '------< Check XML1 >------
            posXML1_End = InStr(posXML1_Start, sText, ">", vbBinaryCompare)
            If posXML1_End > 0 Then
                '----< has XML1 >----
                posXML2_Start = InStr(posXML1_Start + 1, sText, "<", vbBinaryCompare)
                If posXML1_End < posXML2_Start Then
                    '------< Check EndTag >------
                    posXML2_End = InStr(posXML2_Start + 1, sText, ">", vbBinaryCompare)
                    If posXML2_End > 0 Then
                        '----< has XML2 >----
                        '< check islast >
                        If InStr(posXML2_Start + 1, sText, "<", vbBinaryCompare) = 0 Then
                            '----< Is single-XML Row >----
                            Dim sTag1 As String
                            sTag1 = Mid$(sText, posXML1_Start + 1, posXML1_End - posXML1_Start - 1)
                            
                            Dim sTag2 As String
                            sTag2 = Mid$(sText, posXML2_Start + 1, posXML2_End - posXML2_Start - 1)
                            
                            '< get ID >
                            Dim sID As String
                            Dim posSpace As Integer
                            posSpace = InStr(1, sTag1, " ", vbBinaryCompare)
                            If posSpace > 0 Then
                                sID = Mid(sTag1, 1, posSpace)
                            Else
                                sID = sTag1
                            End If
                            sID = Trim(sID)
                            '</ get ID >
                            
                            '< check EndID >
                            sTag2 = Replace(sTag2, "/", "", 1, 1, vbBinaryCompare)
                            
                            If sID = sTag2 Then
                                '----< Single-XML OK >----
                                '< get Innertext >
                                Dim sInnerText As String
                                sInnerText = Mid$(sText, posXML1_End + 1, posXML2_Start - posXML1_End - 1)
                                '</ get Innertext >
                                
                                '--< output >--
                                Cells(cell.Row, cell.Column + 2).Value = sID
                                Cells(cell.Row, cell.Column + 3).Value = sInnerText
                                bMatch = True
                                '--</ output >--
                                '----</ Single-XML OK >----
                            End If
                            
                            '</ check EndID >
                            '----</ Is single-XML Row >----
                        End If
                        '</ check islast >
                        '----</ has XML2 >----
                    End If
                    '------</ Check EndTag >------
                End If
                '----</ has XML1 >----
            End If
            '------</ Check XML1 >------
        End If
        '------</ Check Tags >------
        
        
        '--< default output >--
        If bMatch = False Then
            Cells(cell.Row, cell.Column + 1).Value = sText
        End If
        '--</ default output >--
        '--------</ Cell >--------
    Next
    '------------------------< Convert_XML_to_Single_Text_Value_Pairs() >------------------------
End Sub
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
