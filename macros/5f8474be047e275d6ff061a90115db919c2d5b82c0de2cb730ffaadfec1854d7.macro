Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
' Tool zur Erfassung der Anzahl der erteilten |fffd|berpr|fffd|fungsauftr|fffd|ge an den MDK gem. |fffd| 56 SGB II
' Version 1.0 nach Bearbeitung zenKl
' Erstellungsdatum: 26.04.2013
' |fffd|nderungshistorie:
' Ersteller: Gerd Meier
' Bearbeitet: zenKl 13.06.2013

Option Explicit

'Die Arbeitsmappe wird aktiviert,
'gewisse Schalter setzen
Private Sub Workbook_Activate()
    ActiveWindow.DisplayHeadings = False
    ActiveWindow.DisplayHorizontalScrollBar = False
    ActiveWindow.DisplayVerticalScrollBar = False
''    ActiveWindow.DisplayWorkbookTabs = True
''
    Application.DisplayFormulaBar = False
''    Application.EnableAutoComplete = False
''    Application.CellDragAndDrop = False

    Application.OnKey "^v", ""
    Application.OnKey "+{INSERT}", ""
    Application.OnKey "^{+}", ""
    Application.OnKey "{F1}", "aufrufenHilfe"
    Application.OnKey "{F12}", ""
End Sub

'Die Arbeitsmappe soll geschlossen werden,
'es muss noch "aufger|fffd|umt" werden
Private Sub Workbook_BeforeClose(Cancel As Boolean)
On Error Resume Next
    Application.OnKey "^v"
    Application.OnKey "+{INSERT}"
    Application.OnKey "^{+}"
    Application.OnKey "{F12}"
    
    Application.CellDragAndDrop = True
End Sub

'Hinzuf|fffd|gen von Sheets per Tastenkombination unterbinden
Private Sub Workbook_NewSheet(ByVal sh As Object)
    Application.OnKey "^{+}", "s_doNothing"
End Sub

'Die Arbeitsmappe wird ge|fffd|ffnet
'Berechtigung pr|fffd|fen
Public Sub Workbook_Open()
On Error GoTo ErrorHandler
    
    bDebug = False
'    bLogin = True
    
    
    Call worksheetsverstecken(bDebug)
    
    Application.WindowState = xlMaximized
    Application.EnableAutoComplete = False
    
''    Dim fPW As New frmKennwort
''    fPW.Show
''    If fPW.result Then
''        Dim objAnwender As New clsAnwender
''        If Not objAnwender.istBerechtigt(fPW.txtKennwort.Text) Then
''            MsgBox "Sie haben keine Berechtigung diese Arbeitsmappe zu |fffd|ffnen.", vbExclamation, myCaption
''            ActiveWorkbook.Close
''        Else
''            bLogin = True
''        End If
''        Set objAnwender = Nothing
''    Else
''        ActiveWorkbook.Close
''    End If
    
'    If Not pruefBericht Then
'        Call Login
'    Else
'        bLogin = True
'    End If
    
ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    ActiveWorkbook.Close
    'Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub

'Wechseln des Sheets per Tastenkombination verhindern
Private Sub Workbook_SheetSelectionChange(ByVal sh As Object, ByVal Target As Range)
    Application.OnKey "^{+}", "s_doNothing"
End Sub



Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{1C1A7082-F45A-4034-9F02-450300A66084}{65AE5E1A-95BC-4736-979C-BBA437F59AD0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
' Kennwort Blatt "Zentrale": G1M1e2e2
Option Explicit

    Const erlaubt = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"

' *****************************************************************************
' Modul btnBearbeiten_Click()
' Letzte |fffd|nderung: 14.06.2013, zenKl
' Beschreibung: wird beim Dr|fffd|cken der Schaltfl|fffd|che "Bearbeiten" in der UserForm1 ausgef|fffd|hrt
' Bringt den gew|fffd|hlten Fall in den Bearbeitungsmodus
' *****************************************************************************
Private Sub btnBearbeiten_Click()
    On Error GoTo ErrorHandler
    
    Dim woher As Byte
    Dim famnam, vornam As String
    Dim brun As Boolean
    
    brun = True
    
    If nz(Me.cbAuswahl2.Text, "") = "" Then
        MsgBox "Bitte w|fffd|hlen Sie einen Fall aus.", vbInformation, "Markierung fehlt"
        brun = False
    End If
    
    If brun Then
        woher = Me.cbAuswahl2.ListIndex + 1

        UserForm1.Label6.Caption = woher
        Sheets("Datenbank").Rows(woher).Copy
        Sheets("Daten").Range("A2").PasteSpecial Paste:=xlValues
        famnam = Mid(Sheets("Daten").Range("A2"), 1, 3)
        vornam = Mid(Sheets("Daten").Range("A2"), 4, 3)
        Sheets("Daten").Range("R2") = famnam
        Sheets("Daten").Range("S2") = vornam
        
        Call holeDatenVonSheet

        UserForm1.txtName.SetFocus
        UserForm1.txtName.SelStart = 0
    Else
        Me.cbAuswahl2.SetFocus
    End If

ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub

' *****************************************************************************
' Modul CommandButton2_Click()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: wird beim Dr|fffd|cken der Schaltfl|fffd|che "L|fffd|schen" in der UserForm1 ausgef|fffd|hrt
' und l|fffd|scht den gew|fffd|hlten Fall nachdem eine Sicherheitsfrage mit Ja beantwortet wurde
' *****************************************************************************
Private Sub btnLoeschen_Click()
    On Error GoTo ErrorHandler
    
    Dim wohin As Integer
    Dim wo As Integer
    Dim test As String
    Dim pr|fffd|f As Boolean
    
    Dim brun As Boolean
    
    brun = True
    
    If nz(Me.cbAuswahl2.Text, "") = "" Then
        MsgBox "Bitte w|fffd|hlen Sie einen Fall aus.", vbInformation, "Markierung fehlt"
        brun = False
    End If

    If brun Then

        wohin = WorksheetFunction.CountA(Sheets("Datenbank").Columns("A:A"))
        wo = Me.cbAuswahl2.ListIndex + 1

        pr|fffd|f = MsgBox("Wollen Sie den Eintrag f|fffd|r " & Sheets("Datenbank").Range("A" & wo) & ", " _
        & Sheets("Datenbank").Range("B" & wo) & _
        "; KdNr.: " & Sheets("Datenbank").Range("C" & wo) & "; Tag der Krankmeldung; " _
        & Sheets("Datenbank").Range("D" & wo) & Chr(10) & "tats|fffd|chlich l|fffd|schen?", vbYesNo, "L|fffd|schbest|fffd|tigung")

        If pr|fffd|f = vbNo Then Exit Sub

        Sheets("Datenbank").Range("A" & wo + 1 & ":Z" & wohin + 1).Copy
        ActiveSheet.Paste Destination:=Sheets("Datenbank").Range("A" & wo)

        If wohin = 2 Then wohin = 3
        
        ActiveWorkbook.Save
        
        'Combo neu f|fffd|llen
        UserForm_Activate
        
        UserForm1.txtName.SetFocus
        UserForm1.txtName.SelStart = 0

    Else
    
        Me.cbAuswahl2.SetFocus
        
    End If
ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub

' *****************************************************************************
' Modul btnNeu_Click()
' Letzte |fffd|nderung: 17.06.2013, zenKl
' Beschreibung: es soll ein neuer Datensatz eingegeben werden
' daf|fffd|r alle Eingabefelder leeren
' *****************************************************************************
Private Sub btnNeu_Click()
    Call UserForm_Activate
    Call leereDaten
    Call leereFelder
    Call aktiviereGrund(True)
    Me.txtName.SetFocus
End Sub


' *****************************************************************************
' Modul CommandButton3_Click()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: wird beim Dr|fffd|cken der Schaltfl|fffd|che "Eingaben |fffd|bernehmen und speichern"
' in der UserForm1 ausgef|fffd|hrt, Name, Vorname werden anonymisiert, der Fall wird in die
' Ergebnisliste |fffd|bernommen, die Datei wird gespeichert, UserForm1 bleibt aktiviert
' *****************************************************************************
Private Sub CommandButton3_Click()
    On Error GoTo ErrorHandler
    
    Dim fz As Boolean
    Dim wohin As Integer
    Dim famnam As String
    Dim vornam As String
    
    fz = pruefeDaten()
    If fz Then
        Me.txtName.SetFocus
        Exit Sub
    End If
    
    schreibeDatenInSheet
    
    wohin = UserForm1.Label6.Caption
    famnam = Sheets("Daten").Range("R2")
    vornam = Sheets("Daten").Range("S2")
    Sheets("Daten").Range("A2") = Mid(famnam, 1, 3) & Mid(vornam, 1, 3)
    Sheets("Daten").Range("R2:S2").ClearContents
    Sheets("Daten").Range("A2:Z2").Copy
    ActiveSheet.Paste Destination:=Sheets("Datenbank").Range("A" & wohin)
    
    ActiveWorkbook.Worksheets("Datenbank").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Datenbank").Sort.SortFields.Add Key:=Range("A2:A" & wohin _
        ), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ActiveWorkbook.Worksheets("Datenbank").Sort.SortFields.Add Key:=Range("C2:C" & wohin _
        ), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets("Datenbank").Sort
        .SetRange Range("A1:S" & wohin)
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    Call UserForm_Activate
    Call leereDaten
    Call leereFelder
    ActiveWorkbook.Save
ExitHere:
    UserForm1.txtName.SetFocus
    UserForm1.txtName.SelStart = 0
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub

' *****************************************************************************
' Modul CommandButton4_Click()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: wird beim Dr|fffd|cken der Schaltfl|fffd|che "Eingaben |fffd|bernehmen, speichern
' und Fenster schlie|fffd|en" in der UserForm1 ausgef|fffd|hrt in der UserForm1 ausgef|fffd|hrt,
' Name, Vorname werden anonymisiert, der Fall wird in die Ergebnisliste |fffd|bernommen,
' die Datei wird gespeichert, UserForm1 wird geschlossen
' *****************************************************************************
Private Sub CommandButton4_Click()
    On Error GoTo ErrorHandler
    Call CommandButton3_Click
    UserForm1.Hide
    Unload UserForm1
ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub

' *****************************************************************************
' Modul CommandButton5_Click()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: wird beim Dr|fffd|cken der Schaltfl|fffd|che "Fenster schlie|fffd|en und
' letzte |fffd|nderung verwerfen" in der UserForm1 ausgef|fffd|hrt, der letzte Eintrag
' wird nicht |fffd|bernommen, UserForm1 wird geschlossen
' *****************************************************************************
Private Sub CommandButton5_Click()
    On Error GoTo ErrorHandler
    Call UserForm_Activate
    UserForm1.Hide
    Unload UserForm1
ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub

' *****************************************************************************
' Modul OptionButton1_Click()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: |fffd|bernimmt den ausgew|fffd|hlten Erledigungsgrund
' *****************************************************************************
Private Sub OptionButton1_Click()
    On Error Resume Next
    Dim statjahr As Integer
    Dim pr|fffd|f As Boolean
    If UserForm1.OptionButton1.Value = True Then
        Sheets("Daten").Range("F2") = "Fehlende AUB"
        
        statjahr = Sheets("Daten").Range("B9")
        If Date >= Sheets("Daten").Range("B15") And Date <= Sheets("Daten").Range("B16") Then
            pr|fffd|f = MsgBox("Diese Erfassung wird grunds|fffd|tzlich dem Berichtsjahr " & statjahr & " zugeordnet. Handelt es sich um einen Fall, der noch dem letzten Berichtsjahr (" & statjahr - 1 & ") zuzuordnen ist?", vbYesNo, "Berichtsjahr pr|fffd|fen")
            If pr|fffd|f = vbYes Then statjahr = statjahr - 1
        End If
        Sheets("Daten").Range("I2") = statjahr
        
        Me.OptionButton5.Value = False
        Me.OptionButton6.Value = False
        Me.OptionButton7.Value = False
        Me.OptionButton8.Value = False
        
        aktiviereGrund False
        
        Sheets("Daten").Range("G2") = ""
        Sheets("Daten").Range("H2") = ""
    Else
        Me.Frame2.enabled = True
    End If
End Sub

' *****************************************************************************
' Modul OptionButton2_Click()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: |fffd|bernimmt den ausgew|fffd|hlten Erledigungsgrund
' *****************************************************************************
Private Sub OptionButton2_Click()
    On Error Resume Next
    Dim statjahr As Integer
    Dim pr|fffd|f As Boolean
    If UserForm1.OptionButton2.Value = True Then
        Sheets("Daten").Range("F2") = "Zum Termin nicht erschienen"
        statjahr = Sheets("Daten").Range("B9")
        If Date >= Sheets("Daten").Range("B15") And Date <= Sheets("Daten").Range("B16") Then
            pr|fffd|f = MsgBox("Diese Erfassung wird grunds|fffd|tzlich dem Berichtsjahr " & statjahr & " zugeordnet. Handelt es sich um einen Fall, der noch dem letzten Berichtsjahr (" & statjahr - 1 & ") zuzuordnen ist?", vbYesNo, "Berichtsjahr pr|fffd|fen")
            If pr|fffd|f = vbYes Then statjahr = statjahr - 1
        End If
        Sheets("Daten").Range("I2") = statjahr
        aktiviereGrund True
    End If
End Sub

' *****************************************************************************
' Modul OptionButton3_Click()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: |fffd|bernimmt den ausgew|fffd|hlten Erledigungsgrund
' *****************************************************************************
Private Sub OptionButton3_Click()
    On Error Resume Next
    Dim statjahr As Integer
    Dim pr|fffd|f As Boolean
    If UserForm1.OptionButton3.Value = True Then
        Sheets("Daten").Range("F2") = "Arbeitsunf|fffd|higkeit best|fffd|tigt"
        statjahr = Sheets("Daten").Range("B9")
        If Date >= Sheets("Daten").Range("B15") And Date <= Sheets("Daten").Range("B16") Then
            pr|fffd|f = MsgBox("Diese Erfassung wird grunds|fffd|tzlich dem Berichtsjahr " & statjahr & " zugeordnet. Handelt es sich um einen Fall, der noch dem letzten Berichtsjahr (" & statjahr - 1 & ") zuzuordnen ist?", vbYesNo, "Berichtsjahr pr|fffd|fen")
            If pr|fffd|f = vbYes Then statjahr = statjahr - 1
        End If
        Sheets("Daten").Range("I2") = statjahr
        aktiviereGrund True
    End If
End Sub

' *****************************************************************************
' Modul OptionButton4_Click()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: |fffd|bernimmt den ausgew|fffd|hlten Erledigungsgrund
' *****************************************************************************
Private Sub OptionButton4_Click()
    On Error Resume Next
    Dim statjahr As Integer
    Dim pr|fffd|f As Boolean
    If UserForm1.OptionButton4.Value = True Then
        Sheets("Daten").Range("F2") = "Keine Arbeitsunf|fffd|higkeit"
        statjahr = Sheets("Daten").Range("B9")
        If Date >= Sheets("Daten").Range("B15") And Date <= Sheets("Daten").Range("B16") Then
            pr|fffd|f = MsgBox("Diese Erfassung wird grunds|fffd|tzlich dem Berichtsjahr " & statjahr & " zugeordnet. Handelt es sich um einen Fall, der noch dem letzten Berichtsjahr (" & statjahr - 1 & ") zuzuordnen ist?", vbYesNo, "Berichtsjahr pr|fffd|fen")
            If pr|fffd|f = vbYes Then statjahr = statjahr - 1
        End If
        Sheets("Daten").Range("I2") = statjahr
        aktiviereGrund True
    End If
End Sub

Private Sub aktiviereGrund(aktiv As Boolean)
    Me.Frame2.enabled = aktiv
    Me.OptionButton5.enabled = aktiv
    Me.OptionButton6.enabled = aktiv
    Me.OptionButton7.enabled = aktiv
    Me.OptionButton8.enabled = aktiv
End Sub


' *****************************************************************************
' Modul OptionButton5_Click()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: |fffd|bernimmt den ausgew|fffd|hlten Abrechnungsgrund und den Kostensatz
' *****************************************************************************
Private Sub OptionButton5_Click()
    On Error GoTo ErrorHandler
    
    Dim pr|fffd|f As Boolean
    Dim statjahr As Integer
    
    If UserForm1.OptionButton5.Value = True Then
        Sheets("Daten").Range("G2") = "Nach Aktenlage"
        Sheets("Daten").Range("H2") = 130
        statjahr = Sheets("Daten").Range("B9")
        
        If Date >= Sheets("Daten").Range("B15") And Date <= Sheets("Daten").Range("B16") Then
            pr|fffd|f = MsgBox("Diese Erfassung wird grunds|fffd|tzlich dem Berichtsjahr " & statjahr & " zugeordnet. Handelt es sich um einen Fall, der noch dem letzten Berichtsjahr (" & statjahr - 1 & ") zuzuordnen ist?", vbYesNo, "Berichtsjahr pr|fffd|fen")
            If pr|fffd|f = vbYes Then statjahr = statjahr - 1
        End If
        
        'Sheets("Daten").Range("I2") = statjahr
    End If
ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub

' *****************************************************************************
' Modul OptionButton6_Click()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: |fffd|bernimmt den ausgew|fffd|hlten Abrechnungsgrund und den Kostensatz
' *****************************************************************************
Private Sub OptionButton6_Click()
    On Error GoTo ErrorHandler
    
    Dim pr|fffd|f As Boolean
    Dim statjahr As Integer
    
    If UserForm1.OptionButton6.Value = True Then
        Sheets("Daten").Range("G2") = "Pers. Befund in MDK"
        Sheets("Daten").Range("H2") = 210
        statjahr = Sheets("Daten").Range("B9")
        
        If Date >= Sheets("Daten").Range("B15") And Date <= Sheets("Daten").Range("B16") Then
            pr|fffd|f = MsgBox("Diese Erfassung wird grunds|fffd|tzlich dem Berichtsjahr " & statjahr & " zugeordnet. Handelt es sich um einen Fall, der noch dem letzten Berichtsjahr (" & statjahr - 1 & ") zuzuordnen ist?", vbYesNo, "Berichtsjahr pr|fffd|fen")
            If pr|fffd|f = vbYes Then statjahr = statjahr - 1
        End If
        
        'Sheets("Daten").Range("I2") = statjahr
    End If
ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub

' *****************************************************************************
' Modul OptionButton7_Click()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: |fffd|bernimmt den ausgew|fffd|hlten Abrechnungsgrund und den Kostensatz
' *****************************************************************************
Private Sub OptionButton7_Click()
    On Error GoTo ErrorHandler
    
    Dim pr|fffd|f As Boolean
    Dim statjahr As Integer
    
    If UserForm1.OptionButton7.Value = True Then
        Sheets("Daten").Range("G2") = "Pers. Befund Hausbesuch"
        Sheets("Daten").Range("H2") = 260
        statjahr = Sheets("Daten").Range("B9")
        
        If Date >= Sheets("Daten").Range("B15") And Date <= Sheets("Daten").Range("B16") Then
            pr|fffd|f = MsgBox("Diese Erfassung wird grunds|fffd|tzlich dem Berichtsjahr " & statjahr & " zugeordnet. Handelt es sich um einen Fall, der noch dem letzten Berichtsjahr (" & statjahr - 1 & ") zuzuordnen ist?", vbYesNo, "Berichtsjahr pr|fffd|fen")
            If pr|fffd|f = vbYes Then statjahr = statjahr - 1
        End If
        
        'Sheets("Daten").Range("I2") = statjahr
    End If
ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub

' *****************************************************************************
' Modul OptionButton8_Click()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: |fffd|bernimmt den ausgew|fffd|hlten Abrechnungsgrund und den Kostensatz
' *****************************************************************************
Private Sub OptionButton8_Click()
    On Error GoTo ErrorHandler
    
    Dim pr|fffd|f As Boolean
    Dim statjahr As Integer
    
    If UserForm1.OptionButton8.Value = True Then
        Sheets("Daten").Range("G2") = "Aufwandsersatz Nichterscheinen"
        Sheets("Daten").Range("H2") = 75
        statjahr = Sheets("Daten").Range("B9")
        
        If Date >= Sheets("Daten").Range("B15") And Date <= Sheets("Daten").Range("B16") Then
            pr|fffd|f = MsgBox("Diese Erfassung wird grunds|fffd|tzlich dem Berichtsjahr " & statjahr & " zugeordnet. Handelt es sich um einen Fall, der noch dem letzten Berichtsjahr (" & statjahr - 1 & ") zuzuordnen ist?", vbYesNo, "Berichtsjahr pr|fffd|fen")
            If pr|fffd|f = vbYes Then statjahr = statjahr - 1
        End If
        
        'Sheets("Daten").Range("I2") = statjahr
    End If
ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub

' *****************************************************************************
' Modul txtDatum_BeforeUpdate()
' Letzte |fffd|nderung: 27.06.2013 zenKl
' Beschreibung: zur Pr|fffd|fung des eingegebenen Datums
' *****************************************************************************
Private Sub txtDatum_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Dim formatresult As String
    formatresult = formatdatum(Me.txtDatum.Text)
    If formatresult = "" Then
        MsgBox nz(Me.txtDatum.Text) & " konnte nich als g|fffd|ltiges Datum validiert werden, bitte geben Sie ein g|fffd|ltiges Datum ein.", vbExclamation, "Datumsfehler"
        Cancel = True
        Me.txtDatum.SetFocus
        Exit Sub
    Else
        Dim d As Date
        d = CDate(formatresult)
        If Year(d) < 2009 Or d > Date Then
            MsgBox "Das Datum f|fffd|r den Beginn der Arbeitsunf|fffd|higkeit darf nicht vor dem Jahr 2009 oder in der Zukunft liegen.", vbExclamation, "Datumsfehler"
            Cancel = True
            Me.txtDatum.SetFocus
            Exit Sub
        Else
            If Not nz(Me.txtMDKDatum.Text) = "" Then
                If d > CDate(Me.txtMDKDatum.Value) Then
                    MsgBox "Das Datum des Beginns der Arbeitsunf|fffd|higkeit darf nicht nach dem Datum der Beauftragung des MDK liegen.", vbExclamation, "Datumsfehler"
                    Cancel = True
                    Me.txtDatum.SetFocus
                    Exit Sub
                End If
            End If
        End If
        Me.txtDatum.Value = d
    End If
End Sub

''' *****************************************************************************
''' Modul txtDatum_BeforeUpdate()
''' Letzte |fffd|nderung: 17.06.2013 zenKl
''' Beschreibung: zur Pr|fffd|fung des eingegebenen Datums
''' *****************************************************************************
''Private Sub txtDatum_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
''On Error GoTo ErrorHandler
''    Dim d As Date
''    d = CDate(pruefeDatum(txtDatum.Text))
''    txtDatum.Value = d
''    ActiveWorkbook.Sheets("Daten").Range("D2").Value = d
''ExitHere:
''    Exit Sub
''ErrorHandler:
''    MsgBox "Sie haben kein g|fffd|ltiges Datum eingegeben.", vbExclamation, "Eingabefehler"
''    Cancel = True
''    Resume ExitHere
''    'f|fffd|r Debug
''    Resume Next
''End Sub

' *****************************************************************************
' Modul txtKundennummer_BeforeUpdate()
' Letzte |fffd|nderung: 20.06.2013 zenKl
' Beschreibung: zur Pr|fffd|fung dee eingegebenen Kundennummer
' *****************************************************************************
Private Sub txtKundenummer_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Dim bOk As Boolean
    bOk = True
    If Not Len(txtKundenummer.Text) = 10 Then
        bOk = False
    Else
        If Not IsNumeric(Left(txtKundenummer.Text, 3)) Then
            bOk = False
        End If
        If Not IsNumeric(Mid(txtKundenummer.Text, 5)) Then
            bOk = False
        End If
        If Not InStr(1, erlaubt, Mid(txtKundenummer.Text, 4, 1)) > 0 Then
            bOk = False
        End If
    End If
    
    If Not bOk Then
        MsgBox "Die eingegebene Kundennummer ist formell nicht g|fffd|ltig. Erwartet wird eine Nummer in der Form: 123A123456", vbExclamation, "fehlerhafte Eingabe"
        Cancel = True
    End If
End Sub

' *****************************************************************************
' Modul txtKVNummer_BeforeUpdate()
' Letzte |fffd|nderung: 17.06.2013 zenKl
' Beschreibung: zur Pr|fffd|fung dee eingegebenen Krankenversichertennummer
' *****************************************************************************
Private Sub txtKVNummer_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
''    If Not Len(txtKVNummer) = 20 And Not Len(txtKVNummer) = 30 Then
''        MsgBox "Die eingegebene Krankenversichertennummer ist nicht vollst|fffd|ndig.", vbExclamation, "Eingabefehler"
''        Cancel = True
''    End If
    Dim bOk As Boolean
    bOk = True
''TU 27.06.
''Laut Frau Maa|fffd|en ist noch keine Einheitlichkeit gegeben
''Pr|fffd|fung rausnehmen
''    If Len(txtKVNummer.Text) < 10 Then
''        bOk = False
''    Else
''        If IsNumeric(txtKVNummer.Text) Then
''            bOk = False
''        End If
''        If InStr(1, erlaubt, UCase(Left(txtKVNummer, 1))) = 0 Then
''            bOk = False
''        End If
''        If Not IsNumeric(Mid(txtKVNummer.Text, 2, 18)) Then
''            bOk = False
''        End If
''    End If
''    If Not bOk Then
''        MsgBox "Die eingegebene Krankenversichertennummer ist nicht g|fffd|ltig. Erwartet wird eine Kombination aus einem Buchstaben und min. 9 Ziffern.", vbExclamation, "Eingabefehler"
''        Cancel = True
''    End If
End Sub

Private Sub txtMDKDatum_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
    Dim formatresult As String
    formatresult = formatdatum(Me.txtMDKDatum.Text)
    If formatresult = "" Then
        MsgBox nz(Me.txtMDKDatum.Text) & " konnte nich als g|fffd|ltiges Datum validiert werden, bitte geben Sie ein g|fffd|ltiges Datum ein.", vbExclamation, "Datumsfehler"
        Cancel = True
        Me.txtMDKDatum.SetFocus
        Exit Sub
    Else
        Dim d As Date
        d = CDate(formatresult)
        If Year(d) < 2013 Or d > Date Then
            MsgBox "Das Datum f|fffd|r die Beauftragung des MDK darf nicht vor dem Jahr 2013 oder in der Zukunft liegen.", vbExclamation, "Datumsfehler"
            Cancel = True
            Me.txtMDKDatum.SetFocus
            Exit Sub
        Else
            If Not nz(Me.txtDatum.Text) = "" Then
                If d < CDate(Me.txtDatum.Value) Then
                    MsgBox "Das Datum f|fffd|r die Beauftragung des MDK darf nicht vor dem Datum des Beginns der Arbeitsunf|fffd|higkeit liegen.", vbExclamation, "Datumsfehler"
                    Cancel = True
                    Me.txtMDKDatum.SetFocus
                    Exit Sub
                End If
            End If
        End If
        Me.txtMDKDatum.Value = d
    End If
End Sub

''Private Sub txtKVNummer_Change()
''    If IsNumeric(txtKVNummer.Text) Then
''        txtKVNummer.Text = CStr(Format(txtKVNummer.Text, "#0"))
''    End If
''End Sub

''' *****************************************************************************
''' Modul txtMDKDatum_BeforeUpdate()
''' Letzte |fffd|nderung: 17.06.2013 zenKl
''' Beschreibung: zur Pr|fffd|fung des eingegebenen Datums
''' *****************************************************************************
''Private Sub txtMDKDatum_BeforeUpdate(ByVal Cancel As MSForms.ReturnBoolean)
''On Error GoTo ErrorHandler
''    Dim d As Date
''    d = CDate(pruefeDatum(txtMDKDatum.Text))
''    txtMDKDatum.Value = d
''    ActiveWorkbook.Sheets("Daten").Range("E2").Value = d
''ExitHere:
''    Exit Sub
''ErrorHandler:
''    MsgBox "Sie haben kein g|fffd|ltiges Datum eingegeben.", vbExclamation, "Eingabefehler"
''    Cancel = True
''    Resume ExitHere
''    'f|fffd|r Debug
''    Resume Next
''End Sub

' *****************************************************************************
' Modul UserForm_Activate()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: wird beim Aktivieren der UserForm ausgef|fffd|hrt, definiert Ausgangssituation
' *****************************************************************************
Private Sub UserForm_Activate()
    On Error GoTo ErrorHandler
    
    Dim umf As Integer
    
    umf = WorksheetFunction.CountA(Sheets("Datenbank").Columns("A:A"))
    
    If umf < 2 Then
        umf = 2
        UserForm1.Label6.Caption = umf
    Else
        UserForm1.Label6.Caption = umf + 1
    End If
    
    'UserForm1.ListBox1.RowSource = "Datenbank!A2:I" & umf
    UserForm1.OptionButton1.Value = False
    UserForm1.OptionButton2.Value = False
    UserForm1.OptionButton3.Value = False
    UserForm1.OptionButton4.Value = False
    UserForm1.OptionButton5.Value = False
    UserForm1.OptionButton6.Value = False
    UserForm1.OptionButton7.Value = False
    UserForm1.OptionButton8.Value = False
    Sheets("Daten").Range("A2:I2").ClearContents
    Sheets("Daten").Range("R2:Z2").ClearContents
    
    'Combo f|fffd|llen
    fuelleCombo

    'erstes Item selektieren
    Me.cbAuswahl2.ListIndex = 0
    
    
    pruefeStatistikjahr
    
ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub

' *****************************************************************************
' Modul fuelleCombo()
' Letzte |fffd|nderung: 17.06.2013, zenKl
' Beschreibung: die Combobox wird gef|fffd|llt
' *****************************************************************************
Private Sub fuelleCombo()
    With Me.cbAuswahl2
        .Clear
        
        'leeres Item
        .AddItem
        
        Dim i As Integer
        Dim sht As Worksheet
        Set sht = ActiveWorkbook.Worksheets("Datenbank")
        For i = 2 To sht.Cells(Rows.Count, 1).End(xlUp).Row
            .AddItem
            .List(.ListCount - 1, 0) = sht.Cells(i, 1)
            .List(.ListCount - 1, 1) = sht.Cells(i, 2)
            .List(.ListCount - 1, 2) = sht.Cells(i, 3)
            .List(.ListCount - 1, 3) = i
        Next

        Set sht = Nothing
    End With
End Sub

' *****************************************************************************
' Modul holeDatenVonSheet
' Letzte |fffd|nderung: 27.06.2013, zenKl
' Beschreibung: Daten aus Sheet lesen
' *****************************************************************************
Private Sub holeDatenVonSheet()
    Me.txtName.Text = nz(Sheets("Daten").Range("R2"))
    Me.txtVorname.Text = nz(Sheets("Daten").Range("S2"))
    Me.txtKundenummer.Text = nz(Sheets("Daten").Range("C2"))
    Me.txtKVNummer.Text = nz(Sheets("Daten").Range("B2"))
    Me.txtDatum.Text = nz(Sheets("Daten").Range("D2"))
    Me.txtMDKDatum.Text = nz(Sheets("Daten").Range("E2"))
    
    Me.OptionButton1.Value = toBoolS(nz(Sheets("Daten").Range("J2")))
    Me.OptionButton2.Value = toBoolS(nz(Sheets("Daten").Range("K2")))
    Me.OptionButton3.Value = toBoolS(nz(Sheets("Daten").Range("L2")))
    Me.OptionButton4.Value = toBoolS(nz(Sheets("Daten").Range("M2")))

    Me.OptionButton5.Value = toBoolS(nz(Sheets("Daten").Range("N2")))
    Me.OptionButton6.Value = toBoolS(nz(Sheets("Daten").Range("O2")))
    Me.OptionButton7.Value = toBoolS(nz(Sheets("Daten").Range("P2")))
    Me.OptionButton8.Value = toBoolS(nz(Sheets("Daten").Range("Q2")))
End Sub

Public Sub schreibeDatenInSheet()
    
    'schon bei Pr|fffd|fung
    'Me.txtName.Text
    'Me.txtVorname.Text
    'Me.txtKundenummer.Text
    'Me.txtDatum.Text
    'Me.txtMDKDatum.Text
    
    'Rest
    Sheets("Daten").Range("B2") = nz(Me.txtKVNummer.Text)
    
    Sheets("Daten").Range("J2") = Me.OptionButton1.Value
    Sheets("Daten").Range("K2") = Me.OptionButton2.Value
    Sheets("Daten").Range("L2") = Me.OptionButton3.Value
    Sheets("Daten").Range("M2") = Me.OptionButton4.Value

    Sheets("Daten").Range("N2") = Me.OptionButton5.Value
    Sheets("Daten").Range("O2") = Me.OptionButton6.Value
    Sheets("Daten").Range("P2") = Me.OptionButton7.Value
    Sheets("Daten").Range("Q2") = Me.OptionButton8.Value

End Sub

Private Sub leereFelder()
    On Error Resume Next
    Dim cnt As control
    Application.EnableEvents = False
    For Each cnt In Me.Controls
        If Left(cnt.name, 3) = "txt" Then
            cnt.Value = Null
            cnt.MultiLine = False
            cnt.TabKeyBehavior = False
            cnt.WordWrap = False
        End If
        If Left(cnt.name, 12) = "OptionButton" Then
            cnt.Value = False
        End If
    Next
    Application.EnableEvents = True
End Sub

Private Function pruefeDaten() As Boolean
    pruefeDaten = False
    Dim fz As Boolean
    Dim m_text As String
    fz = False
    
    If nz(Me.txtName.Text) = "" Then
        m_text = "Der Familienname fehlt. "
        fz = True
    Else
        Sheets("Daten").Range("R2") = Me.txtName.Text
    End If
    
    If nz(Me.txtVorname.Text) = "" Then
        m_text = m_text & Chr(10) & "Der Vorname fehlt."
        fz = True
    Else
        Sheets("Daten").Range("S2") = Me.txtVorname.Text
    End If
    
    If nz(Me.txtKundenummer.Text) = "" Then
        m_text = m_text & Chr(10) & "Die Kundennummer fehlt."
        fz = True
    Else
        Sheets("Daten").Range("C2") = Me.txtKundenummer.Text
    End If
    
    If nz(Me.txtDatum.Text) = "" Then
        m_text = m_text & Chr(10) & "Das Datum des Beginns der Arbeitsunf|fffd|higkeit fehlt."
        fz = True
    Else
        Sheets("Daten").Range("D2") = Me.txtDatum.Text
    End If
    
    If nz(Me.txtMDKDatum.Text) = "" Then
        m_text = m_text & Chr(10) & "Das Datum, wann der MDK eingeschalten wurde, fehlt."
        fz = True
    Else
        Sheets("Daten").Range("E2") = Me.txtMDKDatum.Text
    End If
    
''    If Sheets("Daten").Range("D3") = False Then
''        m_text = m_text & Chr(10) & "Im Feld 'Krankheitstag' wurde kein korrektes Datum eingegeben."
''        fz = True
''    End If
''    If Sheets("Daten").Range("E3") = False Then
''        m_text = m_text & Chr(10) & "Im Feld 'MDK eingeschalten' wurde kein korrektes Datum eingegeben."
''        fz = True
''    End If
    
    If fz Then
        MsgBox "Bei der |fffd|berpr|fffd|fung der Daten wurde folgendes festgestellt:" & Chr(10) & m_text, _
        vbInformation, "Abbruch der Erfassung"
    End If
    
    pruefeDaten = fz
        
End Function
Attribute VB_Name = "UserForm2"
Attribute VB_Base = "0{11FBE862-C156-447D-90F6-82E4BA89C89E}{B2DFB994-586C-4B54-B2EF-10107B5D47BC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public abbr As String
Option Explicit

' *****************************************************************************
' Modul CommandButton1_Click()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: wird beim Dr|fffd|cken der Schaltfl|fffd|che "Statistik aus einer Datei erstellen"
'               in der UserForm2 ausgef|fffd|hrt
' *****************************************************************************
Private Sub CommandButton1_Click()
    Call ErstelleBericht1
End Sub

' *****************************************************************************
' Modul CommandButton2_Click()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: wird beim Dr|fffd|cken der Schaltfl|fffd|che "Statistik aus mehreren Dateien erstellen"
'               in der UserForm2 ausgef|fffd|hrt
' *****************************************************************************
Private Sub CommandButton2_Click()
    Call ErstelleBericht2
End Sub

' *****************************************************************************
' Modul Listbox1_Click()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: wird beim Markieren einer Dienststelle im Dialogfenster
'               in der UserForm2 ausgef|fffd|hrt
' Dateiname und Tr|fffd|gernummer werden |fffd|bernommen um den Bericht zu individualisieren
' *****************************************************************************
Private Sub ListBox1_Click()
    On Error GoTo ErrorHandler
    
    Dim woher As Integer
    Dim trnr As String
    
    woher = UserForm2.ListBox1.Value + 2
    trnr = CStr(Sheets("Referenzen").Range("A" & woher))
    
    Sheets("Daten").Range("B12") = trnr
    Sheets("Referenzen").Range("B" & woher).Copy
    Sheets("Daten").Range("B13").PasteSpecial Paste:=xlValues, Transpose:=True
ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub
' *****************************************************************************
' Modul OptionButton1_Click()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: |fffd|bernimmt bei Auswahl das Statistikjahr
' *****************************************************************************
Private Sub OptionButton1_Click()
    On Error GoTo ErrorHandler
    
    Dim statjahr As Integer
    
    statjahr = UserForm2.OptionButton1.Caption
    If UserForm2.OptionButton1.Value = True Then Sheets("Daten").Range("B9") = statjahr
ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub
' *****************************************************************************
' Modul OptionButton2_Click()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: |fffd|bernimmt bei Auswahl das Statistikjahr
' *****************************************************************************
Private Sub OptionButton2_Click()
    On Error GoTo ErrorHandler
    
    Dim statjahr As Integer
    
    statjahr = UserForm2.OptionButton2.Caption
    If UserForm2.OptionButton2.Value = True Then Sheets("Daten").Range("B9") = statjahr
ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub

' *****************************************************************************
' Modul UserForm_Activate()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: aktiviert und belegt die Optionbuttons mit den m|fffd|glichen Statistikjahren
' *****************************************************************************
Private Sub UserForm_Activate()
    On Error GoTo ErrorHandler
    
    Dim statjahr As Integer
    
    statjahr = Sheets("Daten").Range("B9")
    If statjahr <> 2013 Then
        UserForm2.OptionButton1.Caption = statjahr - 1
        UserForm2.OptionButton2.Caption = statjahr
        UserForm2.OptionButton2.visible = True
        'Sheets("Daten").Range("B9") = statjahr - 1
    End If
    
    pruefeStatistikjahr

ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub


Attribute VB_Name = "basAusEinblenden"
Option Explicit

Sub AusEinblenden()
Attribute AusEinblenden.VB_ProcData.VB_Invoke_Func = "S\n14"
    Dim kennwort As String
    Dim pkennwort As String
    Dim sht As Worksheet
    Set sht = ActiveWorkbook.Sheets("Geheim")
    sht.visible = xlSheetVeryHidden
    
    kennwort = sht.Range("A1").Value
    pkennwort = InputBox("Bitte das Kennwort eingeben:", "Sicherheitskontrolle", "")
    If kennwort = pkennwort Then
        ActiveWorkbook.Sheets("Daten").visible = xlSheetVisible
        ActiveWorkbook.Sheets("Datenbank").visible = xlSheetVisible
        ActiveWorkbook.Sheets("F|fffd|r_Statistik").visible = xlSheetVisible
        ActiveWorkbook.Sheets("Berichtsvordruck").visible = xlSheetVisible
        ActiveWorkbook.Sheets("Referenzen").visible = xlSheetVisible
        ActiveWorkbook.Sheets("Interne_Statistik").visible = xlSheetVisible
    Else
        ActiveWorkbook.Sheets("Daten").visible = xlVeryHidden
        ActiveWorkbook.Sheets("Datenbank").visible = xlVeryHidden
        ActiveWorkbook.Sheets("F|fffd|r_Statistik").visible = xlVeryHidden
        ActiveWorkbook.Sheets("Berichtsvordruck").visible = xlVeryHidden
        ActiveWorkbook.Sheets("Referenzen").visible = xlVeryHidden
        ActiveWorkbook.Sheets("Interne_Statistik").visible = xlVeryHidden
    End If
    Set sht = Nothing
End Sub

Attribute VB_Name = "basBerichte"
Option Explicit

Private abbr As Boolean

' *****************************************************************************
' prozedur ErstelleBericht1()
' Letzte |fffd|nderung: 18.06.2013 zenKl
' Beschreibung: wird aus UserForm2 bei Bet|fffd|tigen der Schaltfl|fffd|che CommandButton1
'               "Statistik aus einer Datei erstellen" ausgel|fffd|st
' *****************************************************************************
Public Sub ErstelleBericht1()
    On Error GoTo ErrorHandler
    
    Dim statjahr, umf As Integer
    Dim quelle, ziel1, ziel2, dst As String
    Dim pr|fffd|f As Variant
    
    BerichteOffen = False
    
    If Sheets("Daten").Range("B13") = "" Then
        MsgBox "Bitte w|fffd|hlen Sie noch Ihr JC aus. Erst wenn die Tr|fffd|gernummer |fffd|bernommen wurde, ist eine Auswertung m|fffd|glich.", vbInformation, "Abbruch"
        Exit Sub
    End If
    
    Application.ScreenUpdating = False
    Sheets("F|fffd|r_Statistik").Cells.ClearContents
    
    statjahr = Sheets("Daten").Range("B9")
    
    Sheets("Datenbank").visible = -1
    Sheets("Datenbank").Select
    Range("A1").Select
    
    umf = WorksheetFunction.CountA(Sheets("Datenbank").Columns("A:A"))
    
    Dim brun As Boolean
    brun = False
    If umf < 2 Then
        pr|fffd|f = MsgBox("Es wurden noch keine Daten erfasst. Soll dennoch ein Bericht erstellt werden", vbDefaultButton2 + vbQuestion + vbYesNo, "Keine Erfassung")
        Sheets("Datenbank").visible = xlSheetVeryHidden
        If pr|fffd|f = vbNo Then Exit Sub
    Else
    
        Sheets("Datenbank").Range("$A$1:$Z$" & umf).AutoFilter Field:=9, Criteria1:=statjahr
        Range("A1").Select
        Sheets("Datenbank").Range("A2:Z" & umf).Copy
        ActiveSheet.Paste Destination:=Sheets("F|fffd|r_Statistik").Range("A1")
        Sheets("Datenbank").ShowAllData
        Selection.AutoFilter
        Sheets("Datenbank").visible = xlSheetVeryHidden
        
        umf = WorksheetFunction.CountA(Sheets("F|fffd|r_Statistik").Columns("A:A"))
        
        If umf < 1 Then
            pr|fffd|f = MsgBox("F|fffd|r den Zeitraum liegen keine Daten vor. Soll dennoch ein Bericht erstellt werden", vbYesNo, "Keine Daten im Statistikzeitraum")
            If pr|fffd|f = vbNo Or pr|fffd|f = False Then Exit Sub 'GoTo bericht
        End If
    End If
    
bericht:
    If umf < 1 Then umf = 1
    
'   ****************************************************************************************
'   Hier wird der Bericht aufbereitet
    Sheets("F|fffd|r_Statistik").Range("D1:I" & umf).Copy
    ActiveSheet.Paste Destination:=Sheets("Berichtsvordruck").Range("A20")
    
    Sheets("Berichtsvordruck").visible = -1
    Sheets("Berichtsvordruck").Select
    dst = Sheets("Daten").Range("B13")
    statjahr = Sheets("Daten").Range("B9")
    
    With ActiveSheet.PageSetup
        .LeftHeader = "Bericht zur Einschaltung des MDK f|fffd|r JC " & dst & " im Kalenderjahr " & statjahr
        .RightHeader = "&10Ausdruck vom &D"
    End With
'   ****************************************************************************************
    
'   ****************************************************************************************
'   Hier wird die interne Statistik aufbereitet
    Sheets("F|fffd|r_Statistik").Range("C1:I" & umf).Copy
    ActiveSheet.Paste Destination:=Sheets("Interne_Statistik").Range("A20")
    
    Sheets("Interne_Statistik").visible = -1
    Sheets("Interne_Statistik").Select
    
    With ActiveSheet.PageSetup
        .LeftHeader = "Einschaltung des MDK f|fffd|r JC " & dst & " im Kalenderjahr " & statjahr
        .RightHeader = "&10Ausdruck vom &D"
    End With
'   ****************************************************************************************

    quelle = ActiveWorkbook.name

'   ****************************************************************************************
'   Hier werden die Dateien erzeugt
    Sheets("Berichtsvordruck").Select
'   ****************************************************************************************
'   hier wird ein neues Workbook erstellt
    Sheets("Berichtsvordruck").Copy
    Dim neuZiel As String
    neuZiel = ActiveWorkbook.name
    ActiveSheet.Columns("C:C").Copy
    ActiveSheet.Range("C1").PasteSpecial Paste:=xlPasteValues
    Range("A1").Select
    
    Dim cAnw As New clsAnwender
    ActiveSheet.Protect Password:=cAnw.Blattschutz
    Set cAnw = Nothing

    ziel1 = ActiveWorkbook.name
    If speichern(ActiveWorkbook, "MDK-Bericht_") Then
        ActiveWorkbook.Close False
    Else
        BerichteOffen = True
    End If
    
    Workbooks(quelle).Activate

    Sheets("Interne_Statistik").Select
'   hier wird ein neues Workbook erstellt
    Sheets("Interne_Statistik").Copy
    ActiveSheet.Columns("C:C").Copy
    ActiveSheet.Range("C1").PasteSpecial Paste:=xlPasteValues
    Range("A1").Select
    ziel2 = ActiveWorkbook.name
    If speichern(ActiveWorkbook, "MDK-Statistik_") Then
        ActiveWorkbook.Close False
    Else
        BerichteOffen = True
    End If
    
    Workbooks(quelle).Activate
'   ****************************************************************************************
    
'   ****************************************************************************************
'   Bereinigung der Vordrucke und Hilfstabellen
    Sheets("F|fffd|r_Statistik").Cells.ClearContents
    Sheets("Berichtsvordruck").Range("A20:G" & 21 + umf).ClearContents
    Sheets("Interne_Statistik").Range("A20:G" & 21 + umf).ClearContents

    Sheets("Berichtsvordruck").visible = 2
    Sheets("Interne_Statistik").visible = 2
'   ****************************************************************************************
    
    Application.ScreenUpdating = True
    If BerichteOffen Then
        MsgBox "Die Statistikdateien wurden erstellt aber noch nicht gesichert. Sie finden die Berichtsdaten in der Datei '" & ziel1 _
        & "', Ihre interne Statistik (enth|fffd|lt die Kundennummern) liegen in der Datei '" & ziel2 & "'.", vbInformation, "Statistikdateien wurden erstellt"
    End If
    UserForm2.Hide
    Unload UserForm2
ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub

' *****************************************************************************
' prozedur ErstelleBericht2()
' Letzte |fffd|nderung: 18.06.2013 zenKl
' Beschreibung: wird aus UserForm2 bei Bet|fffd|tigen der Schaltfl|fffd|che CommandButton2
'               "Statistik aus mehreren Dateien erstellen" ausgel|fffd|st
' *****************************************************************************
Public Sub ErstelleBericht2()
    On Error GoTo ErrorHandler
    
    Dim ziel, quelle, dst, ziel1, ziel2 As String
    Dim statjahr, umf As Integer
    Dim pr|fffd|f As Variant
    
    BerichteOffen = False
    
    If Sheets("Daten").Range("B13") = "" Then
        MsgBox "Bitte w|fffd|hlen Sie noch Ihr JC aus. Erst wenn die Tr|fffd|gernummer |fffd|bernommen wurde, ist eine Auswertung m|fffd|glich.", vbInformation, "Abbruch"
        Exit Sub
    End If
    
    ziel = ActiveWorkbook.name

    pr|fffd|f = MsgBox("Die Statistik aus verschiedenen Dateien kann nur funktionieren, wenn zwei Voraussetzungen erf|fffd|llt sind: " & Chr(10) _
    & "1. Alle Dateien sind in einem Verzeichnis." & Chr(10) _
    & "2. Keine der Dateien hat den Namen '" & ziel & "'." & Chr(10) _
    & "Sind beide Voraussetzungen erf|fffd|llt?", vbYesNo, "Voraussetzungen pr|fffd|fen")
    
    If pr|fffd|f = vbNo Or pr|fffd|f = False Then
        MsgBox "Die statistische Aufbereitung wurde abgebrochen. Sie kann jederzeit wiederholt werden.", vbInformation, "Abbruch"
        Exit Sub
    End If
    
    
    Application.ScreenUpdating = False
    Sheets("F|fffd|r_Statistik").Cells.ClearContents
    
    statjahr = Sheets("Daten").Range("B9")
    
    Sheets("Datenbank").visible = -1
    Sheets("Datenbank").Select
    Range("A1").Select
    
    umf = WorksheetFunction.CountA(Sheets("Datenbank").Columns("A:A"))
    
    If Not umf < 2 Then
    
        Sheets("Datenbank").Range("$A$1:$Z$" & umf).AutoFilter Field:=9, Criteria1:=statjahr
        Range("A1").Select
        Sheets("Datenbank").Range("A1:Z" & umf).Copy
        ActiveSheet.Paste Destination:=Sheets("F|fffd|r_Statistik").Range("A1")
        Sheets("Datenbank").ShowAllData
        Selection.AutoFilter
        Sheets("Datenbank").visible = 2
    End If
    
bericht:
    Call verzeichnis_einlesen(ziel)
    
'   ****************************************************************************************
'   die Variable abbr ist |fffd|ffentlich und wird aus "verzeichnis_einlesen" zur|fffd|ckgegeben
'   ****************************************************************************************
    If abbr Then
        Sheets("F|fffd|r_Statistik").Cells.ClearContents
        GoTo fertig
    End If
'   ****************************************************************************************
    
    
    umf = WorksheetFunction.CountA(Sheets("F|fffd|r_Statistik").Columns("A:A"))

    If umf < 2 Then
        umf = 2
        'Sheets("Datenbank").visible = 2
        'Exit Sub
    End If
    
'   ****************************************************************************************
'   Hier wird der Bericht aufbereitet
    Sheets("F|fffd|r_Statistik").Range("D1:I" & umf).Copy
    ActiveSheet.Paste Destination:=Sheets("Berichtsvordruck").Range("A20")
    
    Sheets("Berichtsvordruck").visible = -1
    Sheets("Berichtsvordruck").Select
    dst = Sheets("Daten").Range("B13")
    statjahr = Sheets("Daten").Range("B9")
    
    With ActiveSheet.PageSetup
        .LeftHeader = "Bericht zur Einschaltung des MDK f|fffd|r JC " & dst & " im Kalenderjahr " & statjahr
        .RightHeader = "&10Ausdruck vom &D"
    End With
'   ****************************************************************************************
    
'   ****************************************************************************************
'   Hier wird die interne Statistik aufbereitet
    Sheets("F|fffd|r_Statistik").Range("C1:I" & umf).Copy
    ActiveSheet.Paste Destination:=Sheets("Interne_Statistik").Range("A20")
    
    Sheets("Interne_Statistik").visible = -1
    Sheets("Interne_Statistik").Select
    
    With ActiveSheet.PageSetup
        .LeftHeader = "Einschaltung des MDK f|fffd|r JC " & dst & " im Kalenderjahr " & statjahr
        .RightHeader = "&10Ausdruck vom &D"
    End With
'   ****************************************************************************************

    quelle = ActiveWorkbook.name

'   ****************************************************************************************
'   Hier werden die Dateien erzeugt
    Sheets("Berichtsvordruck").Select
'   hier wird ein neues Workbook erstellt
    Sheets("Berichtsvordruck").Copy
    ActiveSheet.Columns("C:C").Copy
    ActiveSheet.Range("C1").PasteSpecial Paste:=xlPasteValues
    Range("A1").Select
    
    Dim cAnw As New clsAnwender
    ActiveSheet.Protect Password:=cAnw.Blattschutz
    Set cAnw = Nothing
    
    ziel1 = ActiveWorkbook.name
    If speichern(ActiveWorkbook, "MDK-Bericht-kumulativ_") Then
        ActiveWorkbook.Close False
    Else
        BerichteOffen = True
    End If
    
    Workbooks(quelle).Activate

    Sheets("Interne_Statistik").Select
'   hier wird ein neues Workbook erstellt
    Sheets("Interne_Statistik").Copy
    ActiveSheet.Columns("C:C").Copy
    ActiveSheet.Range("C1").PasteSpecial Paste:=xlPasteValues
    Range("A1").Select
    ziel2 = ActiveWorkbook.name
    If speichern(ActiveWorkbook, "MDK-Statistik-kumulativ_") Then
        ActiveWorkbook.Close False
    Else
        BerichteOffen = True
    End If
    
    Workbooks(quelle).Activate
'   ****************************************************************************************
    
'   ****************************************************************************************
'   Bereinigung der Vordrucke und Hilfstabellen
    Sheets("F|fffd|r_Statistik").Cells.ClearContents
    Sheets("Berichtsvordruck").Range("A20:G" & 21 + umf).ClearContents
    Sheets("Interne_Statistik").Range("A20:G" & 21 + umf).ClearContents

    Sheets("Berichtsvordruck").visible = 2
    Sheets("Interne_Statistik").visible = 2
    Sheets("Datenbank").visible = 2
'   ****************************************************************************************
    
    Application.ScreenUpdating = True
    If BerichteOffen Then
        MsgBox "Die Statistikdateien wurden erstellt aber noch nicht gesichert. Sie finden die Berichtsdaten in der Datei '" & ziel1 _
        & "', Ihre interne Statistik (enth|fffd|lt die Kundennummern) liegen in der Datei '" & ziel2 & "'.", vbInformation, "Statistikdateien wurden erstellt"
    End If
    
fertig:
    Sheets("Datenbank").visible = xlVeryHidden
    UserForm2.Hide
    Unload UserForm2
ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub

' *****************************************************************************
' Modul verzeichnis_einlesen()
' Letzte |fffd|nderung: 23.04.2013, Gerd Meier
' Beschreibung: wird vom Makro CommandButton2_click aufgerufen
' *.xlsm Dateien werden im Wahlverzeichnis ge|fffd|ffnet und gepr|fffd|ft, ob es sich um Tool-Dateien
' handelt, anschlie|fffd|end werden die Daten ausgelesen und im Mastertool zwischengespeichert
' |fffd|bergibt bei Bedarf die |fffd|ffentliche Variable 'abbr' an das Makro CommandButton2_click
' *****************************************************************************
Sub verzeichnis_einlesen(ByVal verbotenername As String)
    On Error GoTo ErrorHandler
    
    Dim fs, f, fc As Object
    Dim Z As Byte
    Dim umf, statjahr, wohin As Integer
    Dim ordner, file, stat, ziel, quelle As String
    Dim spr|fffd|f As String
    Dim pr|fffd|f As Boolean
    
    Set fs = CreateObject("Scripting.FileSystemObject")
    
    Dim brun As Boolean
    brun = False

    'kein Dateidialog, sonder Verzeichnisdialog
''    Do While brun = False
''        Z = 0
''        ziel = ActiveWorkbook.name
''        statjahr = Sheets("Daten").Range("B9")
''        wohin = WorksheetFunction.CountA(Sheets("F|fffd|r_Statistik").Columns("A:A")) + 1
''        Sheets("Referenzen").Columns("Y:Y").Cells.ClearContents
''
''        file = Application.GetOpenFilename("Excel-Dateien (*.xlsm), *.xlsm", , "Markieren Sie bitte eine der Dateien.", "Bitte ausw|fffd|hlen", False)
''
''        If file = False Then
''            pr|fffd|f = MsgBox("Wollen Sie die Berichterstellung abbrechen?", vbYesNo, "Keine Datei gew|fffd|hlt")
''            If pr|fffd|f = True Then
''                abbr = True
''                brun = True
''                Exit Sub
''            End If
''        Else
''            If LCase(getFileOnly(file)) = LCase(verbotenername) Then
''                MsgBox "Sie haben eine Datei ausgew|fffd|hlt, deren Name gleich dem aktuellen Datenamen ist. Bitte w|fffd|hlen Sie eine andere Datei.", vbExclamation, "Bitte neu w|fffd|hlen"
''                brun = False
''            Else
''                brun = True
''            End If
''        End If
''    Loop
''
''    Application.DisplayAlerts = False
''    Application.ScreenUpdating = False
''
''    Workbooks.Open Filename:=file
''    stat = ActiveWorkbook.Path & "\"
''
''    quelle = ActiveWorkbook.name
''    Workbooks(quelle).Close

    Do While brun = False
        ziel = ActiveWorkbook.name
        Dim oziel As String
        oziel = ActiveWorkbook.Path
        If Not Right(RTrim(oziel), 1) = "\" Then oziel = oziel & "\"
        statjahr = Sheets("Daten").Range("B9")
        wohin = WorksheetFunction.CountA(Sheets("F|fffd|r_Statistik").Columns("A:A")) + 1
        Sheets("Referenzen").Columns("Y:Y").Cells.ClearContents

        ordner = Ordnerauswahl(oziel)

        If ordner = "" Then
            pr|fffd|f = MsgBox("Wollen Sie die Berichterstellung abbrechen?", vbYesNo, "Kein Ordner ausgew|fffd|hlt")
            If pr|fffd|f = True Then
                abbr = True
                brun = True
                Exit Sub
            End If
        Else
            brun = True
        End If
    Loop

    stat = ordner
    
    Set f = fs.GetFolder(stat)
    Set fc = f.Files
    
    Z = 0
    
    spr|fffd|f = Dir(stat & "*.xlsm", vbNormal)
    
    Dim f1 As Variant
    
    If spr|fffd|f <> "" Then
        For Each f1 In fc
            If Right(f1, 5) = ".xlsm" Then
                If Not Left(getFileOnly(f1), 1) = "~" Then
                    'Z = WorksheetFunction.CountA(Workbooks(ziel).Sheets("F|fffd|r_Statistik").Columns("A:A"))
                    wohin = WorksheetFunction.CountA(Sheets("F|fffd|r_Statistik").Columns("A:A")) + 1
                    Z = Z + 1
            
                    If Not LCase(getFileOnly(f1)) = LCase(verbotenername) Then
                        Workbooks.Open Filename:=f1
                        quelle = ActiveWorkbook.name
                        If checkWorkbook(ActiveWorkbook, verbotenername) Then
                            If Workbooks(quelle).Sheets("Referenzen").Range("Z1").Value = "IchBinEin56er" Then
                                
                                umf = WorksheetFunction.CountA(Workbooks(quelle).Sheets("Datenbank").Columns("A:A"))
                                
                                If umf > 1 Then
                                    Workbooks(quelle).Sheets("Datenbank").visible = -1
                                    Workbooks(quelle).Sheets("Datenbank").Select
                                    Range("A1").Select
                                    Workbooks(quelle).Sheets("Datenbank").Range("$A$1:$Z$" & umf).AutoFilter Field:=9, Criteria1:=statjahr
                                    Range("A1").Select
                                    Workbooks(quelle).Sheets("Datenbank").Range("A2:Z" & umf).Copy
                                    ActiveSheet.Paste Destination:=Workbooks(ziel).Sheets("F|fffd|r_Statistik").Range("A" & wohin)
                                    Workbooks(quelle).Sheets("Datenbank").ShowAllData
                                    Selection.AutoFilter
                                    Workbooks(quelle).Sheets("Datenbank").visible = 2
                                    'MsgBox Workbooks(ziel).Sheets("Referenzen").Range("Y" & Z)
                                End If
                                Workbooks(ziel).Sheets("Referenzen").Range("Y" & Z) = quelle
                            End If
                        End If
                        Workbooks(quelle).Saved = True
                        Workbooks(quelle).Close
                    End If
                End If
            End If
        Next
    End If
    Workbooks.Add
    quelle = ActiveWorkbook.name
    Workbooks(quelle).Sheets(1).Range("A1") = "Daten wurden eingelesen aus folgenden Dateien:"
    If Z > 0 Then
        Workbooks(ziel).Sheets("Referenzen").Range("Y1" & ":Y" & Z).Copy
        ActiveSheet.Paste Destination:=Workbooks(quelle).Sheets(1).Range("A3")
    End If
    Workbooks(quelle).Activate
    If speichern(ActiveWorkbook, "MDK-Protokoll-kumulativ_") Then
        ActiveWorkbook.Close False
    Else
        BerichteOffen = True
    End If

    Set fs = Nothing
    Set f = Nothing
    Set fc = Nothing
    
    Workbooks(ziel).Activate
ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub

Private Function checkWorkbook(wb As Workbook, verbotenername As String) As Boolean
On Error GoTo ErrorHandler
    checkWorkbook = True
    If LCase(wb.name) = LCase(verbotenername) Then
        checkWorkbook = False
    End If
    Dim sht As Worksheet
    Dim sheetvorhanden As Boolean
    sheetvorhanden = False
    For Each sht In wb.Worksheets
        If sht.name = "Referenzen" Then
            sheetvorhanden = True
            Exit For
        End If
    Next
    If Not sheetvorhanden Then
        checkWorkbook = False
    Else
        If Not wb.Sheets("Referenzen").Range("Z1") = "IchBinEin56er" Then
            checkWorkbook = False
        End If
    End If
    
    Exit Function
ErrorHandler:
    MsgBox Err.Description, vbCritical, "Fehler beim Pr|fffd|fen der Eingabedatei"
    checkWorkbook = False
End Function

Private Function getFileOnly(ByVal fname As String) As String
    Dim pos As Integer
    pos = InStrRev(fname, "\")
    If pos > 0 Then
        getFileOnly = Mid(fname, pos + 1)
    Else
        getFileOnly = fname
    End If
End Function
Attribute VB_Name = "basRibbon"
Option Explicit

' Globals:
Public gobjRibbon As IRibbonUI

Public bolEnabled As Boolean    ' F|fffd|r Callback "getEnabled"
                                ' Genauere Informationen in Callback "getEnabled".
                               
Public bolVisible As Boolean    ' F|fffd|r Callback "getVisible"
                                ' Further informations in Callback "getVisible

' F|fffd|r Beispiel Callback "GetContent"
Public Type ItemsVal
    id As String
    Label As String
    imageMso As String
End Type

' Callbacks

Public Sub OnRibbonLoad(ribbon As IRibbonUI)
'Callbackname in XML File "onLoad"
    Set gobjRibbon = ribbon
End Sub

Private Sub resetRibbon()
    On Error Resume Next
    gobjRibbon.Invalidate
End Sub

Public Sub OnActionButton(control As IRibbonControl)
'Callback in XML File "onAction"

'    If Not ActiveWorkbook.name = "FbW-Kostenzustimmung" Then
'        Exit Sub
'    End If

    Select Case control.id
        
        Case "btnSchliessen"
            Call btnSchliessen_Click
        Case "btnBearbeiten"
            ' In Group: grpBearbeiten
'            If Not bLogin Then
'                Call Login
'            End If
            Call oeffneBearbeitenMaske
        Case "btnBericht"
            ' In Group: grpBearbeiten
'            If Not bLogin Then
'                Call Login
'            End If
            Call oeffneBerichtErstellen
        Case Else
            MsgBox "Button """ & control.id & """ clicked" & vbCrLf & _
                           "Es wurde auf Button """ & control.id & """ in Ribbon geklickt", _
                           vbInformation
    End Select
    
    On Error GoTo ErrorHandler
'    gobjRibbon.Invalidate
    Exit Sub
ErrorHandler:
    Exit Sub
    MsgBox Err.Description
End Sub

'Command Button

Sub OnActionButtonHelp(control As IRibbonControl, ByRef CancelDefault)
    ' Callbackname in XML File Command "onAction"

    ' Callback for command event button click
    ' Callback fuer Command Button Click

    MsgBox "Button ""Help"" clicked" & vbCrLf & _
                           "Es wurde auf Button ""Hilfe"" geklickt", _
                           vbInformation
    CancelDefault = True

End Sub

Sub OnActionCheckBox(control As IRibbonControl, _
                               pressed As Boolean)
    ' Callbackname in XML File "OnActionCheckBox"
    
    ' Callback for event checkbox click
    ' Callback f|fc|r Checkbox Click

    Select Case control.id
        

        Case Else
            MsgBox "The Value of the Checkbox """ & control.id & """ is: " & pressed & vbCrLf & _
                   "Der Wert der Checkbox """ & control.id & """ ist: " & pressed, _
                   vbInformation
    End Select

End Sub

Sub GetPressedCheckBox(control As IRibbonControl, _
                       ByRef bolReturn)
    
    ' Callbackname in XML File "GetPressedCheckBox"
    
    ' Callback for checkbox
    ' indicates how the control is displayed
    ' Callback f|fc|r Checkbox wie das Control
    ' angezeigt werden soll

    Select Case control.id
        

        Case Else
            If getTheValue(control.Tag, "DefaultValue") = "1" Then
                bolReturn = True
            Else
                bolReturn = False
            End If
    End Select

End Sub


Sub OnActionTglButton(control As IRibbonControl, _
                       pressed As Boolean)
                              
    ' Callbackname in XML File "onAction"
    
    ' Callback f|fc|r einen Toggle Button Klick
    ' Callback for a Toggle Buttons click event

    Select Case control.id
        

        Case Else
            MsgBox "The Value of the Toggle Button """ & control.id & """ is: " & pressed & vbCrLf & _
                   "Der Wert der Toggle Button """ & control.id & """ ist: " & pressed, _
                   vbInformation
    End Select

End Sub

Sub GetPressedTglButton(control As IRibbonControl, _
                       ByRef pressed)
' Callbackname in XML File "getPressed"

' Callback f|fc|r ein Access ToogleButton Control wie dieser Angezeigt werden soll
' Callback for an Access ToogleButton Control. Indicates how the control is displayed

    Select Case control.id
        

        Case Else
            If getTheValue(control.Tag, "DefaultValue") = "1" Then
                pressed = True
            Else
                pressed = False
            End If
    End Select
End Sub

Public Sub GetEnabled(control As IRibbonControl, ByRef enabled)
    ' Callbackname in XML File "getEnabled"
    
    ' Setzen der Enabled Eigenschaft eines Ribbon Controls
    'Debug.Print control.id
    Select Case control.id
        
        Case "btnSchliessen"
            enabled = True
        Case "btnBearbeiten"
            enabled = True
        Case "btnBericht"
            enabled = True
        Case "sep_01"
            enabled = True
        Case Else
            enabled = True
    End Select
End Sub

Public Sub GetVisible(control As IRibbonControl, ByRef visible)
    ' Callbackname in XML File "getVisible"
    
    ' Setzen der Visible Eigenschaft eines Ribbon Controls
    Select Case control.id
        
        Case "btnSchliessen"
            visible = True
        Case "btnBearbeiten"
            visible = True
        Case "btnBericht"
            visible = True
        Case "sep_01"
            visible = True
        Case "grpBearbeiten"
            visible = True
        Case "grpBearbeitung"
            visible = True
        Case "CustomTab"
            visible = True
        Case Else
            visible = True
    End Select
End Sub

Sub GetLabel(control As IRibbonControl, ByRef Label)
    ' Callbackname in XML File "getLabel"
    ' Setzen der Label-Eigenschaft im Ribbon

    Select Case control.id
        
        Case Else
            Label = "*getLabel*"
    End Select

End Sub


'EditBox

Sub GetTextEditBox(control As IRibbonControl, _
                             ByRef strText)
    ' Callbackname in XML File "GetTextEditBox"
    
    ' Callback f|fc|r EditBox welcher Wert in der
    ' EditBox eingetragen werden soll.
    ' Callback for an EditBox Control
    ' Indicates which value is to set to the control

    Select Case control.id
        

        Case Else
            strText = getTheValue(control.Tag, "DefaultValue")
    End Select
    
End Sub

Sub OnChangeEditBox(control As IRibbonControl, _
                              strText As String)
    ' Callbackname in XML File "OnChangeEditBox"
    
    ' Callback Editbox: R|fc|ckgabewert der Editbox
    ' Callback Editbox: Return value of the Editbox

    Select Case control.id
        

        Case Else
            MsgBox "The Value of the EditBox """ & control.id & """ is: " & strText & vbCrLf & _
                   "Der Wert der EditBox """ & control.id & """ ist: " & strText, _
                   vbInformation
    End Select

End Sub

'DropDown

Sub OnActionDropDown(control As IRibbonControl, _
                             selectedId As String, _
                             selectedIndex As Integer)
    ' Callbackname in XML File "OnActionDropDown"
    
    ' Callback onAction (DropDown)
    
    Select Case control.id
        
        Case Else
            MsgBox "The selected ItemID of DropDown-Control """ & control.id & """ is : """ & selectedId & """" & vbCrLf & _
                   "Die selektierte ItemID des DropDown-Control """ & control.id & """ ist : """ & selectedId & """", _
                   vbInformation
    End Select

End Sub

Sub GetSelectedItemIndexDropDown(control As IRibbonControl, _
                                 ByRef index)
    ' Callbackname in XML File "GetSelectedItemIndexDropDown"
    
    ' Callback getSelectedItemIndex (DropDown)
    
    Dim varIndex As Variant
    varIndex = getTheValue(control.Tag, "DefaultValue")
    
    If IsNumeric(varIndex) Then
        Select Case control.id
            

            Case Else
                index = varIndex
        End Select
    End If

End Sub

'Gallery

Sub OnActionGallery(control As IRibbonControl, _
                     selectedId As String, _
                     selectedIndex As Integer)
    ' Callbackname in XML File "OnActionGallery"
    
    ' Callback onAction (Gallery)
    
    Select Case control.id
        

        Case Else
            Select Case selectedId
                Case Else
                    MsgBox "The selected ItemID of Gallery-Control """ & control.id & """ is : """ & selectedId & """" & vbCrLf & _
                           "Die selektierte ItemID des Gallery-Control """ & control.id & """ ist : """ & selectedId & """", _
                           vbInformation
            End Select
    End Select

End Sub

Sub GetSelectedItemIndexGallery(control As IRibbonControl, _
                                   ByRef index)
    ' Callbackname in XML File "GetSelectedItemIndexGallery"
    
    ' Callback getSelectedItemIndex (Gallery)
    
    Dim varIndex As Variant
    varIndex = getTheValue(control.Tag, "DefaultValue")
    
    If IsNumeric(varIndex) Then
        Select Case control.id
            

            Case Else
                index = varIndex

        End Select

    End If

End Sub

'Combobox

Sub GetTextComboBox(control As IRibbonControl, _
                      ByRef strText)

    ' Callbackname im XML File "GetTextComboBox"
    
    ' Callback getText (Combobox)
                           
    Select Case control.id
        

        Case Else
            strText = getTheValue(control.Tag, "DefaultValue")
    End Select

End Sub


Sub OnChangeComboBox(control As IRibbonControl, _
                               strText As String)
                           
    ' Callbackname im XML File "OnChangeCombobox"
    
    ' Callback onChange (Combobox)
   
    Select Case control.id
        

        Case Else
            MsgBox "The selected Item of Combobox-Control """ & control.id & """ is : """ & strText & """" & vbCrLf & _
                   "Das selektierte Item des Combobox-Control """ & control.id & """ ist : """ & strText & """", _
                   vbInformation
    End Select

End Sub
''
''Public Sub ddJahr_getItemCount(control As IRibbonControl, ByRef returnedVal)
''    'Anzahl Tabellenbl|fffd|tter ermitteln
''    returnedVal = 10
''End Sub
''
''Public Sub ddJahr_getItemID(control As IRibbonControl, index As Integer, ByRef id)
''    'Index f|fffd|r jedes Element festlegen
''    id = "Jahr" & index + 1
''End Sub
''
''Public Sub ddJahr_getItemLabel(control As IRibbonControl, index As Integer, ByRef returnedVal)
''    'Blattnamen in DropDown aufnehmen
''    returnedVal = Year(Date) - 10 + index + 1
''    abrechnungsjahr = returnedVal
''End Sub
''
''Public Sub ddJahr_getSelectedItemIndex(control As IRibbonControl, ByRef returnedVal)
''    'Festlegen eines Eintrags eines dropDown-Elements per Index-Wert
''    'der Index ist in diesem Fall immer Null basierend
''    'Index des aktiven Blattes |fffd|bergeben
''    returnedVal = 9
''End Sub

' DynamicMenu

Sub GetContent(control As IRibbonControl, _
               ByRef XMLString)

    ' Beispiel fuer einen Ribbon XML - "getContent" Callback
    ' Siehe auch: http://www.accessribbon.de/index.php?Access_-_Ribbons:Callbacks:dynamicMenu_-_getContent
    '       und : http://www.accessribbon.de/?Access_-_Ribbons:Ribbon_XML___Controls:Dynamic_Menu

    Select Case control.id
        

        Case Else
            XMLString = getXMLForDynamicMenu()
    End Select
 
End Sub


' Helper Function
' Hilfsfunktionen

Public Function getXMLForDynamicMenu() As String
    
    ' Creates a XML String for DynamicMenu CallBack - getContent
    
    ' Erstellt den Inhalt fuer das DynamicMenu im Callback getContent
    
    Dim lngDummy    As Long
    Dim strDummy    As String
    Dim strContent  As String
    
    Dim Items(4) As ItemsVal
    Items(0).id = "btnDy1"
    Items(0).Label = "Item 1"
    Items(0).imageMso = "_1"
    Items(1).id = "btnDy2"
    Items(1).Label = "Item 2"
    Items(1).imageMso = "_2"
    Items(2).id = "btnDy3"
    Items(2).Label = "Item 3"
    Items(2).imageMso = "_3"
    Items(3).id = "btnDy4"
    Items(3).Label = "Item 4"
    Items(3).imageMso = "_4"
    Items(4).id = "btnDy5"
    Items(4).Label = "Item 5"
    Items(4).imageMso = "_5"
    
    strDummy = "<menu xmlns=""http://schemas.microsoft.com/office/2006/01/customui"">" & vbCrLf
    
        For lngDummy = LBound(Items) To UBound(Items)
            strContent = strContent & _
                "<button id=""" & Items(lngDummy).id & """" & _
                " label=""" & Items(lngDummy).Label & """" & _
                " imageMso=""" & Items(lngDummy).imageMso & """" & _
                " onAction=""OnActionButton""/>" & vbCrLf
        Next
 

    strDummy = strDummy & strContent & "</menu>"
    getXMLForDynamicMenu = strDummy

End Function

Public Function getTheValue(strTag As String, strValue As String) As String
      
   On Error Resume Next
      
   Dim workTb()     As String
   Dim Ele()        As String
   Dim myVariabs()  As String
   Dim i            As Integer

      workTb = Split(strTag, ";")
      
      ReDim myVariabs(LBound(workTb) To UBound(workTb), 0 To 1)
      For i = LBound(workTb) To UBound(workTb)
         Ele = Split(workTb(i), ":=")
         myVariabs(i, 0) = Ele(0)
         If UBound(Ele) = 1 Then
            myVariabs(i, 1) = Ele(1)
         End If
      Next
      
      For i = LBound(myVariabs) To UBound(myVariabs)
         If strValue = myVariabs(i, 0) Then
            getTheValue = myVariabs(i, 1)
         End If
      Next
      
End Function







Attribute VB_Name = "basRibbonButtons"
Option Explicit

' *****************************************************************************
' Modul btnSchliessen_Click()
' Letzte |fffd|nderung: 13.06.2013
' Beschreibung: schlie|fffd|t Workbook und Excel
' *****************************************************************************
Public Sub btnSchliessen_Click()
    Dim schalterok As Boolean
    schalterok = True
    
           
    If schalterok Then
        On Error Resume Next
        
        ActiveWorkbook.Saved = True
        Application.Quit
    End If
End Sub

' *****************************************************************************
' Modul oeffneBearbeitenMaske
' Letzte |fffd|nderung: 13.06.2013
' Beschreibung: wird beim Dr|fffd|cken der Schaltfl|fffd|che "Daten erfassen/bearbeiten"
'               im Ribbon ausgef|fffd|hrt
' *****************************************************************************
Public Sub oeffneBearbeitenMaske()
    On Error GoTo ErrorHandler
    Sheets("Zentrale").Select
    Sheets("Zentrale").Range("A1").Select
    UserForm1.Show
ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub

' *****************************************************************************
' Modul oeffneBerichtErstellen()
' Letzte |fffd|nderung: 13.06.2013
' Beschreibung: wird beim Dr|fffd|cken der Schaltfl|fffd|che "Bericht vorbereiten"
'               im Ribbon ausgef|fffd|hrt
' *****************************************************************************
Public Sub oeffneBerichtErstellen()
    On Error GoTo ErrorHandler
    Sheets("Zentrale").Select
    Sheets("Zentrale").Range("A1").Select
    UserForm2.Show
ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub

Attribute VB_Name = "basTools"
Option Explicit

'pr|fffd|ft objekt auf NULL und gibt dann Defaultwert zur|fffd|ck
Public Function nz(val As Variant, Optional default As Variant = "") As Variant
    If IsNull(val) Then
        nz = default
    Else
        nz = val
    End If
End Function

'Zeigt das Kennwort-Eingabe-Formular an, vergleicht das eingegebene Kennwort und
'gibt Bearbeitung frei oder schlie|fffd|t alles
''Public Sub Login()
''    Dim fPW As New frmKennwort
''    fPW.Show
''    If fPW.result Then
''        Dim objAnwender As New clsAnwender
''        If Not objAnwender.istBerechtigt(fPW.txtKennwort.Text) Then
''            MsgBox "Sie haben keine Berechtigung diese Arbeitsmappe zu |fffd|ffnen.", vbExclamation, myCaption
''            ActiveWorkbook.Close
''        Else
''            bLogin = True
''        End If
''        Set objAnwender = Nothing
''    Else
''        ActiveWorkbook.Close
''    End If
''End Sub

'Worksheets verstecken und Schutz setzen
Public Sub worksheetsverstecken(deb As Boolean)
    Dim sht As Worksheet
    For Each sht In ActiveWorkbook.Worksheets
        If sht.name = "Zentrale" Then
            If deb = False Then
                Dim cAnw As New clsAnwender
                sht.Protect Password:=cAnw.Blattschutz
                Set cAnw = Nothing
            End If
        Else
            If deb = False Then
                sht.visible = xlSheetVeryHidden
            Else
                sht.visible = xlSheetVisible
            End If
        End If
    Next
    ActiveWorkbook.Sheets("Geheim").visible = xlVeryHidden
End Sub

'Dateiname und Zielverzeichnis w|fffd|hlen
Public Function speichern(wb As Workbook, defname As String) As Boolean
On Error GoTo ErrorHandler
    Dim Speichern_Unter As String
    Speichern_Unter = Application.GetSaveAsFilename(InitialFileName:=defname & Format(Now, "YYYYMMDD") & ".xlsx", fileFilter:="Excel-Arbeitsmappe (*.xlsx), *.xlsx")

    If Not Speichern_Unter = "Falsch" Then
        If Not Dir(Speichern_Unter) = "" Then
            On Error Resume Next
            Kill (Speichern_Unter)
            On Error GoTo 0
        End If
        wb.SaveAs Speichern_Unter, XlFileFormat.xlOpenXMLWorkbook, , , , , , xlLocalSessionChanges
        speichern = True
    Else
        speichern = False
    End If

ExitHere:
    Exit Function
ErrorHandler:
    MsgBox Err.Description, vbCritical, "Fehler beim Speichern"
    speichern = False
    Resume ExitHere
End Function

Public Function pruefBericht() As Boolean
    If ActiveWorkbook.name = "MDK_ErfassungsTool.xlsm" Then
        pruefBericht = False
        Exit Function
    End If
    Dim wb As Workbook
    For Each wb In Application.Workbooks
        If wb.name = "MDK_ErfassungsTool.xlsm" Then
            pruefBericht = True
            Exit Function
        End If
    Next
    pruefBericht = False
End Function

Public Function formatdatum(eingabe As String) As String
On Error GoTo ErrorHandler
    Dim tempDatum As Date
    eingabe = Replace(eingabe, ",", ".")
    If InStr(1, eingabe, ".") > 0 Then
        Dim p1, p2 As Integer
        p1 = InStr(1, eingabe, ".")
        p2 = InStrRev(eingabe, ".")
        If Not p2 = p1 Then
            formatdatum = CStr(DateSerial(Right(eingabe, Len(eingabe) - p2), Mid(eingabe, p1 + 1, p2 - p1 - 1), Left(eingabe, p1 - 1)))
        Else
            formatdatum = ""
        End If
    Else
        If IsNumeric(eingabe) Then
            If Len(eingabe) = 6 Then
                tempDatum = DateSerial("20" & Right(eingabe, 2), Mid(eingabe, 3, 2), Left(eingabe, 2))
            ElseIf Len(eingabe) = 5 Then
                tempDatum = DateSerial("20" & Right(eingabe, 2), Mid(eingabe, 3, 2), Left(eingabe, 1))
            ElseIf Len(eingabe) = 8 Then
                tempDatum = DateSerial(Right(eingabe, 4), Mid(eingabe, 3, 2), Left(eingabe, 2))
            ElseIf Len(eingabe) = 7 Then
                tempDatum = DateSerial(Right(eingabe, 4), Mid(eingabe, 3, 2), Left(eingabe, 1))
            Else
                tempDatum = 0
            End If
            If Not tempDatum = 0 Then
                formatdatum = CStr(tempDatum)
            Else
                formatdatum = ""
            End If
        Else
            formatdatum = ""
        End If
    End If
ExitHere:
    Exit Function
ErrorHandler:
    formatdatum = ""
    MsgBox Err.Description, vbCritical, "Datumspr|fffd|fung fehlgeschlagen"
    Resume ExitHere
    'Debug
    Resume Next
End Function

Public Function pruefeDatum(eingabe As String) As String
On Error GoTo ErrorHandler
    eingabe = Replace(eingabe, ",", ".")
    If InStr(1, eingabe, ".") > 0 Then
        Dim p1, p2 As Integer
        p1 = InStr(1, eingabe, ".")
        p2 = InStrRev(eingabe, ".")
        If Not p2 = p1 Then
            pruefeDatum = CStr(DateSerial(Right(eingabe, p2 + 1), Mid(eingabe, p1 + 1, p2 - p1 - 1), Left(eingabe, p1 - 1)))
        Else
            pruefeDatum = "kein Datum"
        End If
    Else
        If IsNumeric(eingabe) Then
            If Len(eingabe) = 6 Then
                pruefeDatum = CStr(DateSerial(Right(eingabe, 2), Mid(eingabe, 3, 2), Left(eingabe, 2)))
            ElseIf Len(eingabe) = 8 Then
                pruefeDatum = CStr(DateSerial(Right(eingabe, 4), Mid(eingabe, 3, 2), Left(eingabe, 2)))
            Else
                pruefeDatum = "kein Datum"
            End If
        Else
            pruefeDatum = "kein Datum"
        End If
    End If
ExitHere:
    Exit Function
ErrorHandler:
    pruefeDatum = "kein Datum"
    MsgBox Err.Description, vbCritical, "Datumspr|fffd|fung fehlgeschlagen"
    Resume ExitHere
    'Debug
    Resume Next
End Function

Public Sub leereDaten()
    Dim sht As Worksheet
    Set sht = ActiveWorkbook.Sheets("Daten")
    sht.Range("A2:S2").ClearContents ' .Select
'    Selection.ClearContents
'    sht.Range("A2").Select

End Sub

Public Function toBool(eingabe As String) As Boolean
    If UCase(nz(eingabe)) = "FALSCH" Then
        toBool = False
        Exit Function
    ElseIf UCase(nz(eingabe)) = "WAHR" Or _
        UCase(nz(eingabe)) = "JA" Or _
        UCase(nz(eingabe)) = "TRUE" Then
        toBool = True
        Exit Function
    Else
        toBool = False
    End If
End Function

Public Function toBoolS(eingabe As String) As String
    If UCase(nz(eingabe)) = "FALSCH" Then
        toBoolS = "False"
        Exit Function
    ElseIf UCase(nz(eingabe)) = "WAHR" Or _
        UCase(nz(eingabe)) = "JA" Or _
        UCase(nz(eingabe)) = "TRUE" Then
        toBoolS = "True"
        Exit Function
    Else
        toBoolS = "False"
    End If
End Function

Public Function fromBool(eingabe As String) As String
    If nz(eingabe) = "False" Then
        fromBool = "FALSCH"
        Exit Function
    ElseIf nz(eingabe) = "True" Then
        fromBool = "WAHR"
        Exit Function
    Else
        fromBool = ""
    End If
End Function

Public Function Ordnerauswahl(ByVal default As String) As String
    Dim strOrdner As String

    With Application.FileDialog(msoFileDialogFolderPicker)
        If default = "" Then
            .InitialFileName = "C:\"
        Else
            .InitialFileName = default
        End If
        
        .Title = "Ordnerauswahl"
        .ButtonName = "Auswahl..."
        .InitialView = msoFileDialogViewList
        If .Show = -1 Then
            strOrdner = .SelectedItems(1)
            If Right(strOrdner, 1) <> "\" Then strOrdner = strOrdner & "\"
          Else
            strOrdner = ""
        End If
    End With
    
    Ordnerauswahl = strOrdner
End Function

Public Sub pruefeStatistikjahr()
On Error GoTo ErrorHandler
    Dim sht As Worksheet
    Dim mJahr As Integer
    Dim sJahr As Integer
    Dim vJahr As Integer
    Dim uebBis As Date
    Dim meldText As String
    
    Set sht = ActiveWorkbook.Sheets("Daten")
    'aktuelles Jahr
    mJahr = Year(Date)
    'Statistikjahr aus Sheet
    sJahr = sht.Range("B9").Value2
    'Vorjahr aus Sheet
    vJahr = sht.Range("B10").Value2
    '|fffd|bergangszeit Ende
    uebBis = CDate(sht.Range("B16").Value2)

    'wenn das aktuelle Jahr kleiner dem Statistikjahr ist, dann stimmt etwas generell nicht
    'Meldung zeigen, Jahre setzen und raus
    If mJahr < sJahr Then
        meldText = "Das eingetragene Statistikjahr (" & CStr(sJahr) & ") ist gr|fffd||fffd|er als das aktuelle Jahr (" & CStr(mJahr) & ")." & vbCrLf & _
            "Das Statistik jahr wird auf das aktuelle Jahr eingestellt."
        MsgBox meldText, vbExclamation, "Falsche Einstellung Statustikjahr"
        sJahr = mJahr
        vJahr = mJahr - 1
        sht.Range("B9").Value2 = sJahr
        sht.Range("B10").Value2 = vJahr
        Exit Sub
    End If
    
    'wenn das aktuelle Jahr gr|fffd||fffd|er dem Statistikjahr ist
    If mJahr > sJahr Then
        'wenn mehr als ein Jahr Unterschied, dann korrigieren
        If mJahr - sJahr > 1 Then
            sJahr = mJahr - 1
            vJahr = sJahr - 1
            sht.Range("B9").Value2 = sJahr
            sht.Range("B10").Value2 = vJahr
        End If
        'wenn das aktuelle Datum nach dem Ende der |fffd|bergangszeit liegt
        If Date > uebBis Then
            meldText = "Das eingetragene Statistikjahr (" & CStr(sJahr) & ") ist kleiner als das aktuelle Jahr (" & CStr(mJahr) & ") und" & vbCrLf & _
                "die |fffd|bergangszeit endete am " & CStr(uebBis) & ". Soll das Statistikjahr auf das aktuelle Jahr eingestellt werden?"
            If MsgBox(meldText, vbYesNo + vbDefaultButton1 + vbQuestion, "Statistikjahr anpassen?") = vbYes Then
                sJahr = mJahr
                vJahr = sJahr - 1
                sht.Range("B9").Value2 = sJahr
                sht.Range("B10").Value2 = vJahr
            End If
        End If
    End If
ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub
Attribute VB_Name = "clsAnwender"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'------------------------------------------------------
'private member
Private Const m_strkennwort = "zgT&7"

Private Const m_strBlattschutz = ",3)98gHhlO..+"

'Kennwort vergleichen und Ergebnis als Bool zur|fffd|ckgeben
Public Function istBerechtigt(anmeldung As String) As Boolean
On Error GoTo ErrorHandler
    istBerechtigt = False
    If anmeldung = m_strkennwort Then
        istBerechtigt = True
    End If
ExitHere:
    Exit Function
ErrorHandler:
    Debug.Print Err.Description
    istBerechtigt = False
    Resume ExitHere
End Function

Public Property Get Blattschutz() As String
    Blattschutz = m_strBlattschutz
End Property


Attribute VB_Name = "frmKennwort"
Attribute VB_Base = "0{8E4C9BF1-30C4-4572-8C55-2B869775C302}{E91DEFFB-A192-420E-98A9-E2B1456E8E45}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Public result As Boolean

'Abbrechen gedr|fffd|ckt, Result setzen
Private Sub btnCancel_Click()
    result = False
    Me.Hide
End Sub

'Ok gedr|fffd|ckt, Result setzen
Private Sub btnOk_Click()
    result = True
    Me.Hide
End Sub

'Das formular wird angezeigt, Variablen initialisieren
Private Sub UserForm_Activate()
    result = False
End Sub

Attribute VB_Name = "modConstGlobal"
Option Explicit

'Konstante
Global Const myCaption = "MDK - Erfassungstool"


'Globale Variablen
Global bDebug As Boolean
'Global bLogin As Boolean

Global BerichteOffen As Boolean
Attribute VB_Name = "modSample"
Option Explicit

Sub samplesub()
On Error GoTo ErrorHandler

ExitHere:
    Exit Sub
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Sub

Function samplefunction() As Boolean
On Error GoTo ErrorHandler
    samplefunction = False

    samplefunction = True
ExitHere:
    Exit Function
ErrorHandler:
    MsgBox Err.Description, vbCritical, myCaption
    samplefunction = False
    Resume ExitHere
    'f|fffd|r Debug
    Resume Next
End Function



INQUEST-PP=macro
