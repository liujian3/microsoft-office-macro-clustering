Attribute VB_Name = "EditorialMacros"
Option Explicit

Public Sub InitForEditorial()
  '
  ' Code for editorial special setups that need to be called
  '  after saving or on worksheet initialization.
  '
End Sub

Public Sub Workbook_BeforeClose_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  before close.
  '
End Sub

Attribute VB_Name = "EditorialMacros_Deactivate"
Option Explicit

Public Sub Workbook_Deactivate_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  when leaving the workbook without closing it. This, will
  '  also run when closing workbook.
  '
End Sub

Attribute VB_Name = "Module3"
'Contributions Received and Receivable
Sub clear()
'
'Clears entries on the Input spreadsheet.

ans = MsgBox("Are you sure you want to clear all of the input items?", _
    vbYesNo, "PPC's Workpapers")
    If ans = vbNo Then  ' User chose No.
    Exit Sub
    End If
    
    Application.ScreenUpdating = False

    Range("InputClear").ClearContents
    Range("Preparer").ClearContents 'Value = ""
    Range("WorkpaperIndex").ClearContents
    Range("DatePrepared").ClearContents
    Range("YearEnd").Value = "=PPC_GetBalanceSheetDate()"
    Range("Client").Value = "=PPC_GetClientName()"
    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name") = "[Client Name]"
    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True

    Range("InputSheet").Select
    
    Application.ScreenUpdating = True
End Sub
Sub Rollforward()
'
'Rolls balances forward in preparation for subsequent year analysis.

    Dim Msg, Style, TITLE, Response
    Beep
    Msg = "Prior period amounts will be replaced with the later period amounts. Do you want to continue?"   ' Define message.
    Style = vbOKCancel + vbQuestion + vbDefaultButton1 ' Define buttons.
    TITLE = "PPC's Workpapers"  ' Define title.
    Response = MsgBox(Msg, Style, TITLE)
    If Response = vbCancel Then    ' User chose Cancel.
        GoTo Quit
    End If
    
    Sheets("Input").Select
    Application.ScreenUpdating = False
    
'    Range("SOFPRollClear").Select
'    Selection.ClearContents
    Range("SOFP1Roll").Select
        Application.CutCopyMode = False
        Selection.Copy
        Range("ARBegPY2").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
    Range("SOFP2Roll").Select
        Application.CutCopyMode = False
        Selection.Copy
        Range("AREndPY").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
    Range("SOFP3Roll").Select
        Application.CutCopyMode = False
        Selection.Copy
        Range("AllowDoubtBegPY2").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
    Range("SOFP4Roll").Select
        Application.CutCopyMode = False
        Selection.Copy
        Range("AllowDoubtEndPY").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
    Range("SOFP5Roll").Select
        Application.CutCopyMode = False
        Selection.Copy
        Range("PTGBegPY2").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
    Range("SOFP6Roll").Select
        Application.CutCopyMode = False
        Selection.Copy
        Range("PTGEndPY").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
    Range("SOARevRoll").Select
        Application.CutCopyMode = False
        Selection.Copy
        Range("ContribRevPY").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
    Range("SOAExpRoll").Select
        Application.CutCopyMode = False
        Selection.Copy
        Range("BadDebtExpPY").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
    Range("OtherInfoRoll").Select
        Application.CutCopyMode = False
        Selection.Copy
        Range("ContribDonorsPY").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
     Range("ARAgingRoll").Select
        Application.CutCopyMode = False
        Selection.Copy
        Range("ARCurrentPY").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
     Range("PTGAgingRoll").Select
        Application.CutCopyMode = False
        Selection.Copy
        Range("PTGCurrentPY").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
'
'Clear current year amounts to allow for new entries
    Range("SOFPCurr").Select
    Selection.ClearContents
    Range("SOARevCurr").Select
    Selection.ClearContents
    Range("SOAExpCurr").Select
    Selection.ClearContents
    Range("OtherInfoCurr").Select
    Selection.ClearContents
    Range("ARAgingCurr").Select
    Selection.ClearContents
    Range("PTGAgingCurr").Select
    Selection.ClearContents
    '
    Range("YearEnd").Value = "=PPC_GetBalanceSheetDate()"
    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True
    '
    
'    If Range("YearEnd").Value > 0 Then
'        currentdate = Range("YearEnd").Value
'        newdate = DateAdd("m", 12, currentdate)
'        Range("YearEnd").Value = newdate
'    End If
       
    Range("WorkpaperIndex").ClearContents
    Range("DatePrepared").ClearContents
    Range("Preparer").ClearContents
    Range("InputSheet").Select
    Application.ScreenUpdating = True
Exit Sub
Quit:
End Sub


Attribute VB_Name = "PPC_CodeModule"
Public Sub MacroCheck()
'Do nothing. This sub will be called from .NET code to check macro is enabled or not
End Sub


Public Function PPC_GetClientName()
  PPC_GetClientName = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name")
End Function

Public Function PPC_GetBalanceSheetDate()
  PPC_GetBalanceSheetDate = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date")
End Function

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'
' This code is protected and passworded when complete.
'

Private Const XL4MACRO As String = "PPCSecurityMacro"
Private Const INFORMATION As String = "INFORMATION"

Private Const bIsIDxR As Boolean = False        ' Set True if Interactive Disclosure Library
#Const IDxR = 0                                 ' Set 1 if Interactive Disclosure Library

      ' Declare security class

Private Sub Workbook_Activate()

  
  InitForEditorial
  
  On Error GoTo 0
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
  Workbook_BeforeClose_Editorial
End Sub



Public Function bIsSaving() As Boolean
  bIsSaving = False
End Function



INQUEST-PP=macro
