Attribute VB_Name = "Amazon"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'---------------------------------------------------------------------------------------
' (c) Copyright 1999-2029 ExcelHome.Net, All Rights Reserved
' E-Mail    : tech@ExcelHome.net
' Homepage  : http://tech.excelhome.net
'---------------------------------------------------------------------------------------
' Module    : Amazon
' Author    : HHAAMM
' Date      : 2014/12/27
' Purpose   : |fffd||fffd||221||fffd||fffd||fffd||fffd||477||fffd||fffd||fffd||fffd||1b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37a||17c||6f8||fffd|
' Version   : 1.0.0
'---------------------------------------------------------------------------------------

Option Explicit

Private mvntAttributes As Variant
Private maDT() As String
Private mstrJSON_BaoBeiParameters(1 To 4) As Variant
Private mstrHTML_Web As String
Private mstrHTML_Name As String
Private mstrHTML_Price As String
Private mstrName_BaoBei As String
Private mstrURL_Web As String
Private mstrURL_Full As String
Private mstrPrice_BaoBei As String

Private Sub Class_Initialize()
    If gblnUSER_FROM_CAB Then    ''''|fffd||fffd||fffd||221||fffd||fffd|CAB(XML)|fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||435||13d||6b5||fffd||2b1||5b5|
        LoadClassTagNames Me.ClassID, maDT    ''''|fffd||fffd||fffd||631||fffd||1e9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Else
        ReDim maDT(0 To gintUSER_TAG_COUNT)
        maDT(1) = "title"":"""
        maDT(2) = ""","
        maDT(3) = """dimensions"":"
        maDT(4) = "]"
        maDT(5) = "HHAAMM = {"
        maDT(6) = "]}"
        maDT(7) = ",""variation_values"":"
        maDT(8) = "}"
        maDT(9) = "variation_values = "
        maDT(10) = "}"
        maDT(11) = ",""dimToAsinMapData"":"
        maDT(12) = "}"
        maDT(13) = "dimToAsinMapData = "
        maDT(14) = "}"
        maDT(15) = ",""full"":"
        maDT(16) = ","
        maDT(17) = "full = "
        maDT(18) = "}"
        maDT(19) = "http://www.amazon.cn/gp/twister/ajaxv2?sid=480-7019921-6538739"
        maDT(20) = "&isFlushing=2&id="
        maDT(21) = "&prefetchParam=0&mType=full&dpEnvironment=softlines"
        maDT(22) = "priceblock_dealprice"
        maDT(23) = "priceblock_ourprice"
        maDT(24) = "|fffd||fffd|"
        maDT(25) = ","
        maDT(26) = "?"
        maDT(27) = "_"
        maDT(28) = "full.AJAXUrl"
        maDT(29) = "&"
        maDT(30) = "\""priceText\"">"
        maDT(31) = "|fffd||fffd|"
        maDT(32) = ","
        maDT(33) = "<p"
        maDT(34) = "/p>"
        maDT(35) = "wraptext goto-top"
        maDT(36) = "<div"
        maDT(37) = "/div>"
        maDT(38) = "class=""priceText"
        maDT(39) = "rel=""canonical"
        maDT(40) = "/dp/"
        maDT(41) = """"
        maDT(42) = "http://www.amazon.cn/mn/detailApp?asin="
    End If
End Sub

Public Function GetBaoBeiAttributes(strURL As String, strName As String, vntAttributes As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strURL=|fffd||3f8||fffd||fffd||fffd||fffd||fffd||fffd||477||fffd||fffd||fffd||fffd||fffd||fffd||5b7|
    mstrURL_Web = strURL
    If GetHTML_Web = True Then
        If GetName_BaoBei = True Then
            strName = mstrName_BaoBei
            If GetJSON = True Then
                If GetParameters_BaoBei = True Then
                    Call GetURL_Price
                    vntAttributes = ArrayTranspose(mvntAttributes)
                    Call URLComponent
                    strURL = mstrURL_Web
                    GetBaoBeiAttributes = True
                End If
            Else    ''''|4b3||fffd||fffd|HTML|fffd||135||fffd||fffd||fffd||fffd||7b9||fffd||fffd||fffd||fffd||fffd||fffd||535||fffd|JSON|fffd||fffd||fffd||fffd||2b1||fffd||fffd||4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b3||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                If GetBaoBePrice1 = True Then
                    ReDim vntAttributes(1 To 1, 1 To 3)
                    vntAttributes(1, 1) = mstrPrice_BaoBei
                    vntAttributes(1, 2) = "-"
                    vntAttributes(1, 3) = mstrURL_Web & Chr$(28)  ''''|fffd||fffd||fffd||fffd||4b3||fffd||fffd||fffd||fffd|
                    Call URLComponent
                    strURL = mstrURL_Web
                    GetBaoBeiAttributes = True
                End If
            End If
        Else
            If GetHTML_Name_1 = True Then
                If GetName_BaoBei_1 = True Then
                    If GetHTML_Price_1 = True Then
                        If GetBaoBePrice1_1 = True Then
                            strName = mstrName_BaoBei
                            ReDim vntAttributes(1 To 1, 1 To 3)
                            vntAttributes(1, 1) = mstrPrice_BaoBei
                            vntAttributes(1, 2) = "-"
                            vntAttributes(1, 3) = mstrURL_Web & Chr$(28) & Chr$(28)    ''''|fffd||fffd||fffd||fffd||4b3||fffd||fffd||fffd||fffd|
                            Call URLComponent
                            strURL = mstrURL_Web
                            GetBaoBeiAttributes = True
                        End If
                    End If
                End If
            End If
        End If
    End If
End Function

Public Function GetBaoBePrice(strPriceKey As String, vntReturned As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strPriceKey=|fffd||6f8||fffd||63c||fffd||fffd||fffd|
    Dim astrSplit() As String
    Dim strJSON_BaoBePrice As String
    Dim G As Long
    On Error GoTo ErrorHandler
    '    maDT(30) = "\""priceText\"">"
    '    maDT(31) = "|fffd||fffd|"
    '    maDT(32) = ","
    If InStr(1, strPriceKey, Chr$(28), vbTextCompare) > 0 Then    ''''|fffd||fffd||fffd||fffd||4b3||fffd||fffd|
        mstrURL_Web = Split(strPriceKey, Chr$(28) & Chr$(28))(0)
        If GetHTML_Web = True Then
            If GetHTML_Price_1 = True Then
                If GetBaoBePrice1_1 = True Then vntReturned = mstrPrice_BaoBei
            End If
        End If
    ElseIf InStr(1, strPriceKey, Chr$(28), vbTextCompare) > 0 Then    ''''|fffd||fffd||fffd||fffd||4b3||fffd||fffd|
        mstrURL_Web = Split(strPriceKey, Chr$(28))(0)
        If GetBaoBePrice1 = True Then vntReturned = mstrPrice_BaoBei
    Else
        With CreateObject("WINHTTP.WINHTTPREQUEST.5.1")
            .Open "GET", strPriceKey, False
            .Send
            strJSON_BaoBePrice = .responseText
        End With
        astrSplit = Split(strJSON_BaoBePrice, maDT(30))
        If UBound(astrSplit) > 0 Then
            G = InStr(1, astrSplit(1), maDT(31), vbTextCompare)
            strJSON_BaoBePrice = Mid(astrSplit(1), G + 1)
            vntReturned = Val(Replace$(strJSON_BaoBePrice, maDT(32), Empty))
        End If
    End If
    GetBaoBePrice = (Val(vntReturned) > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    vntReturned = "Err Number: " & Err.Number & vbTab & "Err Description: " & Err.Description
End Function

Private Function GetHTML_Web() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||fffd||fffd||131||fffd|
    On Error GoTo ErrorHandler
    With CreateObject("WINHTTP.WINHTTPREQUEST.5.1")
        .Open "GET", mstrURL_Web, False
        .Send
        mstrHTML_Web = .responseText
        GetHTML_Web = (Len(mstrHTML_Web) > 0)
    End With
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetHTML_Web") = True Then Resume Next
End Function

Private Function GetName_BaoBei() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim astrSplit() As String
    '    maDT(1) = "title"":"""
    '    maDT(2) = ""","
    astrSplit = Split(mstrHTML_Web, maDT(1))
    If UBound(astrSplit) > 0 Then
        mstrName_BaoBei = Split(astrSplit(1), maDT(2))(0)
        GetName_BaoBei = (Len(mstrName_BaoBei) > 0)
    End If
End Function

Private Function GetHTML_Name_1() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||6eac||fffd||431||fffd||fffd||fffd||fffd||fffd||fffd||1b5||fffd|p|fffd||fffd||1e9|
    Dim astrSplit_1() As String
    Dim astrSplit_2() As String
    Dim I As Long
    '    maDT(33) = "<p"
    '    maDT(34) = "/p>"
    '    maDT(35) = "wraptext goto-top"
    astrSplit_1 = Split(mstrHTML_Web, maDT(33))
    For I = 1 To UBound(astrSplit_1)
        If InStr(1, astrSplit_1(I), maDT(35), vbTextCompare) > 0 Then
            astrSplit_2 = Split(astrSplit_1(I), maDT(34))
            mstrHTML_Name = maDT(33) & astrSplit_2(0) & maDT(34)
            GetHTML_Name_1 = True
            Exit For
        End If
    Next
End Function

Private Function GetName_BaoBei_1() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||6b5||fffd||4bb||fffd||fffd|p|52a||fffd||fffd||fffd||fffd|)
    Dim oLabel_Web As Object
    On Error GoTo ErrorHandler
    With CreateObject("HTMLFILE")
        .body.innerHTML = mstrHTML_Name
        Set oLabel_Web = .All(0)
    End With
    If Not (oLabel_Web Is Nothing) Then mstrName_BaoBei = oLabel_Web.innerTEXT
    GetName_BaoBei_1 = (Len(mstrName_BaoBei) > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetName_BaoBei_1") = True Then Resume Next
End Function

Private Function GetHTML_Price_1() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||6eac||fffd||431||fffd||fffd||fffd||fffd||fffd||fffd||1b5||fffd|p|fffd||fffd||1e9|
    Dim astrSplit_1() As String
    Dim astrSplit_2() As String
    Dim I As Long
    '    maDT(36) = "<div"
    '    maDT(37) = "/div>"
    '    maDT(38) = "class=""priceText"
    astrSplit_1 = Split(mstrHTML_Web, maDT(36))
    For I = 1 To UBound(astrSplit_1)
        If InStr(1, astrSplit_1(I), maDT(38), vbTextCompare) > 0 Then
            astrSplit_2 = Split(astrSplit_1(I), maDT(37))
            mstrHTML_Price = maDT(36) & astrSplit_2(0) & maDT(37)
            GetHTML_Price_1 = True
            Exit For
        End If
    Next
End Function

Private Function GetBaoBePrice1_1() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||fffd|
    Dim oLabel_Web As Object
    Dim L As Long
    On Error GoTo ErrorHandler
    With CreateObject("HTMLFILE")
        .body.innerHTML = mstrHTML_Price
        Set oLabel_Web = .All(0)
    End With
    If Not (oLabel_Web Is Nothing) Then
        mstrPrice_BaoBei = oLabel_Web.innerTEXT
        For L = 1 To Len(mstrPrice_BaoBei)
            If Asc(Mid(mstrPrice_BaoBei, L, 1)) > 0 Then
                mstrPrice_BaoBei = Mid(mstrPrice_BaoBei, L)
                GetBaoBePrice1_1 = True
                Exit For
            End If
        Next
    End If
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetBaoBePrice1_1") = True Then Resume Next
End Function

Private Function GetJSON() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b2||fffd||fffd||fffd||fffd||fffd|JSON
    Dim astrSplit() As String
    Dim I As Long
    '    maDT(3) = """dimensions"":"
    '    maDT(4) = "]"
    '    maDT(5) = "HHAAMM = {"
    '    maDT(6) = "]}"
    astrSplit = Split(mstrHTML_Web, maDT(3))    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If UBound(astrSplit) > 0 Then
        astrSplit = Split(astrSplit(1), maDT(4))    ''''
        mstrJSON_BaoBeiParameters(1) = maDT(5) & maDT(3) & astrSplit(0) & maDT(6)
    End If
    '    maDT(7) = ",""variation_values"":"
    '    maDT(8) = "}"
    '    maDT(9) = "variation_values = "
    '    maDT(10) = "}"
    astrSplit = Split(mstrHTML_Web, maDT(7))    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If UBound(astrSplit) > 0 Then
        astrSplit = Split(astrSplit(1), maDT(8))
        mstrJSON_BaoBeiParameters(2) = maDT(9) & astrSplit(0) & maDT(10)
    End If
    '    maDT(11) = ",""dimToAsinMapData"":"
    '    maDT(12) = "}"
    '    maDT(13) = "dimToAsinMapData = "
    '    maDT(14) = "}"
    astrSplit = Split(mstrHTML_Web, maDT(11))    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If UBound(astrSplit) > 0 Then
        astrSplit = Split(astrSplit(1), maDT(12))
        mstrJSON_BaoBeiParameters(3) = maDT(13) & astrSplit(0) & maDT(14)
    End If
    '    maDT(15) = ",""full"":"
    '    maDT(16) = ","
    '    maDT(17) = "full = "
    '    maDT(18) = "}"
    astrSplit = Split(mstrHTML_Web, maDT(15))    ''''|fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||fffd|JSON|fffd||fffd||fffd||fffd||fffd|URL|fffd||fffd||1f0||fffd||fffd||fffd|
    If UBound(astrSplit) > 0 Then
        astrSplit = Split(astrSplit(1), maDT(16))
        mstrJSON_BaoBeiParameters(4) = maDT(17) & astrSplit(0) & maDT(18)
    End If
    For I = 1 To UBound(mstrJSON_BaoBeiParameters)
        If Len(mstrJSON_BaoBeiParameters(I)) = 0 Then Exit Function
    Next
    GetJSON = True
End Function

Private Function GetParameters_BaoBei() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||434||fffd||fffd||6b5||123||fffd||fffd||fffd||bc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||375||132||fffd||fffd||fffd|
    Dim avntType_BaoBei() As Variant
    Dim vntName_Type As Variant
    Dim vntValue_Type As Variant
    Dim astrValue_Type() As String
    Dim strCount_Type() As String
    Dim astrType_BaoBei() As String
    Dim strName_Type As String
    Dim I As Long
    Dim I1 As Long
    Dim I2 As Long
    Dim I3 As Long
    Dim I4 As Long
    Dim I5 As Long
    Dim I6 As Long
    Dim L As Long
    Dim J As Long
    Dim G As Long
    On Error GoTo ErrorHandler
    '    maDT(27) = "_"
    '    maDT(28) = "full.AJAXUrl"
    '    maDT(29) = "&"
    With CreateObject("ScriptControl")
        .Language = "javascript"
        For I = 1 To UBound(mstrJSON_BaoBeiParameters)
            .AddCode mstrJSON_BaoBeiParameters(I)
        Next
        For I = 0 To 5    ''''|fffd||776||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            vntName_Type = .Eval("HHAAMM.dimensions['" & I & "']")
            ReDim astrValue_Type(60)
            If IsEmpty(vntName_Type) Then
                Exit For
            Else
                strName_Type = vntName_Type
                For L = 0 To 60    ''''|fffd||776||fffd||fffd||fffd||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2ae||fffd||fffd||fffd||fffd||fffd||fffd||5b5|
                    vntValue_Type = .Eval("variation_values." & strName_Type & "['" & L & "']")
                    If IsEmpty(vntValue_Type) Then
                        Exit For
                    Else
                        J = J + 1    ''''|fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||6fc||fffd|
                        astrValue_Type(J - 1) = vntValue_Type
                    End If
                Next
                If J > 0 Then
                    ReDim Preserve astrValue_Type(J - 1)
                    G = G + 1    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6fc||fffd|
                    ReDim Preserve avntType_BaoBei(1 To G)
                    avntType_BaoBei(G) = astrValue_Type
                    J = 0
                End If
            End If
        Next
        If G < 1 Then Exit Function
        ReDim mvntAttributes(1 To 3, 1 To 600)
        J = 0
        For I1 = 0 To UBound(avntType_BaoBei(1))    ''''|ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||535||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd|
            I = 0
            ReDim strCount_Type(1 To 6)
            ReDim astrType_BaoBei(1 To 6)
            strCount_Type(1) = I1
            astrType_BaoBei(1) = avntType_BaoBei(1)(I1)
            If G > 1 Then
                For I2 = 0 To UBound(avntType_BaoBei(2))
                    strCount_Type(2) = I2
                    astrType_BaoBei(2) = avntType_BaoBei(2)(I2)
                    If G > 2 Then
                        For I3 = 0 To UBound(avntType_BaoBei(3))
                            strCount_Type(3) = I3
                            astrType_BaoBei(3) = avntType_BaoBei(3)(I3)
                            If G > 3 Then
                                For I4 = 0 To UBound(avntType_BaoBei(4))
                                    strCount_Type(4) = I4
                                    astrType_BaoBei(4) = avntType_BaoBei(4)(I4)
                                    If G > 4 Then
                                        For I5 = 0 To UBound(avntType_BaoBei(5))
                                            strCount_Type(5) = I5
                                            astrType_BaoBei(5) = avntType_BaoBei(5)(I5)
                                            If G > 5 Then
                                                For I6 = 0 To UBound(avntType_BaoBei(6))
                                                    strCount_Type(6) = I6
                                                    astrType_BaoBei(6) = avntType_BaoBei(6)(I6)
                                                    If I <> G Then Call GetParameters_BaoBei_1(I, G, strCount_Type, astrType_BaoBei)
                                                    vntName_Type = .Eval("dimToAsinMapData['" & Join(strCount_Type, maDT(27)) & "']")
                                                    If Not IsEmpty(vntName_Type) Then Call GetParameters_BaoBei_2(J, astrType_BaoBei, vntName_Type)
                                                Next
                                            Else
                                                If I <> G Then Call GetParameters_BaoBei_1(I, G, strCount_Type, astrType_BaoBei)
                                                vntName_Type = .Eval("dimToAsinMapData['" & Join(strCount_Type, maDT(27)) & "']")
                                                If Not IsEmpty(vntName_Type) Then Call GetParameters_BaoBei_2(J, astrType_BaoBei, vntName_Type)
                                            End If
                                        Next
                                    Else
                                        If I <> G Then Call GetParameters_BaoBei_1(I, G, strCount_Type, astrType_BaoBei)
                                        vntName_Type = .Eval("dimToAsinMapData['" & Join(strCount_Type, maDT(27)) & "']")
                                        If Not IsEmpty(vntName_Type) Then Call GetParameters_BaoBei_2(J, astrType_BaoBei, vntName_Type)
                                    End If
                                Next
                            Else
                                If I <> G Then Call GetParameters_BaoBei_1(I, G, strCount_Type, astrType_BaoBei)
                                vntName_Type = .Eval("dimToAsinMapData['" & Join(strCount_Type, maDT(27)) & "']")
                                If Not IsEmpty(vntName_Type) Then Call GetParameters_BaoBei_2(J, astrType_BaoBei, vntName_Type)
                            End If
                        Next
                    Else
                        If I <> G Then Call GetParameters_BaoBei_1(I, G, strCount_Type, astrType_BaoBei)
                        vntName_Type = .Eval("dimToAsinMapData['" & Join(strCount_Type, maDT(27)) & "']")
                        If Not IsEmpty(vntName_Type) Then Call GetParameters_BaoBei_2(J, astrType_BaoBei, vntName_Type)
                    End If
                Next
            Else
                vntName_Type = .Eval("dimToAsinMapData['" & strCount_Type(1) & "']")
                If Not IsEmpty(vntName_Type) Then
                    J = J + 1
                    mvntAttributes(2, J) = avntType_BaoBei(1)(I1) & Chr$(28)
                    mvntAttributes(3, J) = vntName_Type
                End If
            End If
        Next
        mstrURL_Full = .Eval(maDT(28))    ''''|221||fffd||fb||fffd||221||fffd||6f8||fffd|JSON|fffd||fffd||fffd||775||fffd|RUL|fffd||fffd||1f0||fffd||fffd||fffd|
    End With
    If Len(mstrURL_Full) > 0 Then
        mstrURL_Full = Mid$(mstrURL_Full, InStr(1, mstrURL_Full, maDT(29), vbTextCompare))
        ReDim Preserve mvntAttributes(1 To 3, 1 To J)
        GetParameters_BaoBei = (J > 0)
    End If
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetParameters_BaoBei") = True Then Resume Next
End Function

Private Sub GetParameters_BaoBei_1(I As Long, G As Long, strCount_Type() As String, astrType_BaoBei() As String)
    I = G
    ReDim Preserve strCount_Type(1 To I)
    ReDim Preserve astrType_BaoBei(1 To I)
End Sub

Private Sub GetParameters_BaoBei_2(J As Long, astrType_BaoBei() As String, vntName_Type As Variant)
    J = J + 1
    mvntAttributes(2, J) = Join(astrType_BaoBei, "-")
    mvntAttributes(3, J) = vntName_Type
End Sub

Private Sub GetURL_Price()
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||6bb||fffd||221||fffd||6f8||fffd||fffd|URL
    Dim strID_Type As String
    Dim I As Long
    '    maDT(19) = "http://www.amazon.cn/gp/twister/ajaxv2?sid=480-7019921-6538739"
    '    maDT(20) = "&isFlushing=2&id="
    '    maDT(21) = "&prefetchParam=0&mType=full&dpEnvironment=softlines"
    mstrURL_Full = maDT(19) & mstrURL_Full
    With CreateObject("WINHTTP.WINHTTPREQUEST.5.1")
        For I = 1 To UBound(mvntAttributes, 2)
            strID_Type = mvntAttributes(3, I)
            mvntAttributes(3, I) = mstrURL_Full & strID_Type & maDT(20) & strID_Type & maDT(21)
        Next
    End With
End Sub

Private Function GetBaoBePrice1() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||63b35||fffd||4b3||fffd||fffd|HTML|fffd||135||fffd||fffd||fffd||fb||fffd||439||fffd||fffd||fffd||fffd||fffd||fffd||535||fffd|JSON|2b1||fffd||f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim oID_HTML As Object
    On Error GoTo ErrorHandler
    '    maDT(22) = "priceblock_dealprice"
    '    maDT(23) = "priceblock_ourprice"
    '    maDT(24) = "|fffd||fffd|"
    '    maDT(25) = ","
    If Len(mstrHTML_Web) = 0 Then
        If GetHTML_Web = False Then Exit Function
    End If
    With CreateObject("HTMLFILE")
        .body.innerHTML = mstrHTML_Web
        Set oID_HTML = .body.Document.getElementById(maDT(22))   ''''|fffd||fffd||221||fffd||fffd||4b3||52a||fffd||fffd|
        If oID_HTML Is Nothing Then Set oID_HTML = .body.Document.getElementById(maDT(23))
    End With
    If oID_HTML Is Nothing Then Exit Function
    mstrPrice_BaoBei = oID_HTML.innerTEXT
    mstrPrice_BaoBei = Replace$(mstrPrice_BaoBei, maDT(24), Empty)
    mstrPrice_BaoBei = Val(Replace$(mstrPrice_BaoBei, maDT(25), Empty))
    GetBaoBePrice1 = True
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetBaoBePrice1") = True Then Resume Next
End Function

Private Sub URLComponent()
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||52d|URL|fffd||fffd||5b7|
    Dim astrSplit() As String
    '    maDT(39) = "rel=""canonical"
    '    maDT(40) = "/dp/"
    '    maDT(41) = """"
    '    maDT(42) = "http://www.amazon.cn/mn/detailApp?asin="
    astrSplit = Split(mstrHTML_Web, maDT(39))
    If UBound(astrSplit) > 0 Then
        astrSplit = Split(astrSplit(1), maDT(40))
        If UBound(astrSplit) > 0 Then mstrURL_Web = maDT(42) & Split(astrSplit(1), maDT(41))(0)
    End If
End Sub

Public Property Get ClassID() As Long
    ClassID = 4    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Property

Public Property Get ClassTags() As Variant
    ClassTags = maDT    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1e9|
End Property

Public Property Get LinkTG(strURL As String) As String
    If Len(maDT(0)) Then    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||fffd||2b1|
        LinkTG = GetLinkLocation(Me.ClassID, strURL, maDT(0))    ''''|fffd||fffd||fffd||630||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||4f5||fffd||fffd||fffd||5b7|
    Else
        LinkTG = strURL    ''''|fffd||fffd||fffd||fffd||52d|URL
    End If
End Property

Attribute VB_Name = "JD"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'---------------------------------------------------------------------------------------
' (c) Copyright 1999-2029 ExcelHome.Net, All Rights Reserved
' E-Mail    : tech@ExcelHome.net
' Homepage  : http://tech.excelhome.net
'---------------------------------------------------------------------------------------
' Module    : JD
' Author    : HHAAMM
' Date      : 2014/12/9
' Purpose   : |fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37a||17c||6f8||fffd|
' Version   : 1.0.0
'---------------------------------------------------------------------------------------

Option Explicit

Private maDT() As String
Private mstrURL_Web As String
Private mstrURL_Price As String
Private mstrHTML_Web As String
Private mstrHTML_Name As String
Private mstrJSON As String
Private mstrName_BaoBei As String
Private mstrPrice_BaoBei As String
Private mstrType_BaoBei As String

Private Sub Class_Initialize()
    If gblnUSER_FROM_CAB Then    ''''|fffd||fffd||fffd||221||fffd||fffd|CAB(XML)|fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||435||13d||6b5||fffd||2b1||5b5|
        LoadClassTagNames Me.ClassID, maDT    ''''|fffd||fffd||fffd||631||fffd||1e9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Else
        ReDim maDT(0 To gintUSER_TAG_COUNT)
        maDT(1) = "HHAAMM = "
        maDT(2) = "HHAAMM['0'].p"
        maDT(3) = "<h1"
        maDT(4) = "/h1>"
        maDT(5) = "H1"
        maDT(6) = "ColorSize"
        maDT(7) = "}]"
        maDT(8) = "HHAAMM"
        maDT(9) = "HHAAMM['"
        maDT(10) = "']"
        maDT(11) = "'].SkuId"
        maDT(12) = "'].Size"
        maDT(13) = "'].Color"
        maDT(14) = "http://p.3.cn/prices/get?skuid=J_"
        maDT(15) = "&type=1"
    End If
End Sub

Public Function GetBaoBeiAttributes(strURL As String, strName As String, vntAttributes As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strURL=|fffd||3f8||fffd||13e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b7|
    Dim blnOK As Boolean
    mstrURL_Web = strURL
    If GetHTML_Web = True Then
        If GetHTML_Name = True Then
            If GetName_BaoBei = True Then
                If GetJSON = True Then
                    If GetTypeURL = True Then
                        blnOK = GetBaoBePrice(mstrURL_Price, mstrPrice_BaoBei)
                    End If
                Else
                    If GetURL_Price = True Then
                        mstrType_BaoBei = "-"
                        blnOK = GetBaoBePrice(mstrURL_Price, mstrPrice_BaoBei)
                    End If
                End If
            End If
        End If
    End If
    If blnOK = True Then
        strName = mstrName_BaoBei
        ReDim vntAttributes(1 To 1, 1 To 3)
        vntAttributes(1, 1) = mstrPrice_BaoBei
        vntAttributes(1, 2) = mstrType_BaoBei
        vntAttributes(1, 3) = mstrURL_Price
        GetBaoBeiAttributes = True
    End If
End Function

Public Function GetBaoBePrice(strPriceKey As String, vntReturned As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strPriceKey=|fffd||6f8||fffd||63c||fffd||fffd||fffd|
    Dim strJSON_BaoBeiPrice As String
    On Error GoTo ErrorHandler
    '    maDT(1) = "HHAAMM = "
    '    maDT(2) = "HHAAMM['0'].p"
    With CreateObject("Msxml2.XMLHTTP.6.0")
        .Open "GET", strPriceKey, False
        .Send
        strJSON_BaoBeiPrice = maDT(1) & .responseText
    End With
    With CreateObject("ScriptControl")
        .Language = "javascript"
        .AddCode strJSON_BaoBeiPrice
        vntReturned = .Eval(maDT(2))
    End With
    GetBaoBePrice = (Val(vntReturned) > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    vntReturned = "Err Number: " & Err.Number & vbTab & "Err Description: " & Err.Description
End Function

Private Function GetHTML_Web() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||fffd||fffd||131||fffd|
    On Error GoTo ErrorHandler
    With CreateObject("WINHTTP.WINHTTPREQUEST.5.1")
        .Open "GET", mstrURL_Web, False
        .SetRequestHeader "Content-Type", "charset=gb2312"
        .Send
        mstrHTML_Web = .responseText
        GetHTML_Web = True
    End With
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetHTML_Web") = True Then Resume Next
End Function

Private Function GetHTML_Name() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||6eac||fffd||431||fffd||fffd||fffd||fffd||fffd||fffd||1b5||fffd|h1|fffd||fffd||1e9|
    Dim astrSplit_1() As String
    Dim astrSplit_2() As String
    Dim strHTML_Label As String
    Dim I As Long
    Dim J As Long
    '    maDT(3) = "<h1"
    '    maDT(4) = "/h1>"
    astrSplit_1 = Split(mstrHTML_Web, maDT(3))
    For I = 1 To UBound(astrSplit_1)
        J = J + 1
        astrSplit_2 = Split(astrSplit_1(I), maDT(4))
        mstrHTML_Name = strHTML_Label & maDT(3) & astrSplit_2(0) & maDT(4)
    Next
    GetHTML_Name = (J > 0)
End Function

Private Function GetName_BaoBei() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim oLabel_Web As Object
    On Error GoTo ErrorHandler
    '    maDT(5) = "H1"
    With CreateObject("HTMLFILE")
        .body.innerHTML = mstrHTML_Name
        Set oLabel_Web = .All.tags("" & maDT(5) & "")    ''''|fffd||fffd||221||fffd||fffd||4b3|H1|52a||fffd||fffd|
    End With
    If Not (oLabel_Web Is Nothing) Then mstrName_BaoBei = oLabel_Web(oLabel_Web.length - 1).innerTEXT    ''''|fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd|
    GetName_BaoBei = (Len(mstrName_BaoBei) > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetName_BaoBei") = True Then Resume Next
End Function

Private Function GetJSON() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||431||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|JSON
    Dim astrSplit() As String
    '    maDT(6) = "ColorSize"
    '    maDT(7) = "}]"
    '    maDT(8) = "HHAAMM"
    astrSplit = Split(mstrHTML_Web, maDT(6))
    If UBound(astrSplit) > 0 Then
        astrSplit = Split(astrSplit(1), maDT(7))
        mstrJSON = maDT(8) & astrSplit(0) & maDT(7)
    End If
    GetJSON = Len(mstrJSON) > 10
End Function

Private Function GetTypeURL() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||361||fffd||fffd||fffd||221||fffd||6f8||fffd|JSON|fffd||fffd|URL
    Dim vntType_BaoBei As Variant    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||363||fffd||4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||43a||736||fffd||fffd||fffd||37a||fffd|
    Dim strID_Type As String    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||375||131||fffd||fffd|
    Dim strType_BaoBei1 As String
    Dim strType_BaoBei2 As String
    Dim I As Long
    On Error GoTo ErrorHandler
    '    maDT(9) = "HHAAMM['"
    '    maDT(10) = "']"
    '    maDT(11) = "'].SkuId"
    '    maDT(12) = "'].Size"
    '    maDT(13) = "'].Color"
    '    maDT(14) = "http://p.3.cn/prices/get?skuid=J_"
    '    maDT(15) = "&type=1"
    With CreateObject("ScriptControl")
        .Language = "javascript"
        .AddCode mstrJSON
        For I = 0 To 600    ''''|fffd||776||fffd||fffd||fffd||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|600|fffd||fffd||fffd||fffd||fffd||fffd||5b5|
            vntType_BaoBei = .Eval(maDT(9) & I & maDT(10))
            If TypeName(vntType_BaoBei) = "String" Then
                strID_Type = .Eval(maDT(9) & I & maDT(11))
                If InStr(1, mstrURL_Web, strID_Type, vbTextCompare) > 0 Then
                    ReDim mvntAttributes(1 To 1, 1 To 3)
                    strType_BaoBei1 = .Eval(maDT(9) & I & maDT(12))
                    strType_BaoBei2 = .Eval(maDT(9) & I & maDT(13))
                    If Len(strType_BaoBei1) > 0 And Len(strType_BaoBei2) > 0 Then
                        mstrType_BaoBei = strType_BaoBei1 & "-" & strType_BaoBei2
                    Else
                        mstrType_BaoBei = strType_BaoBei1 & strType_BaoBei2
                    End If
                    mstrURL_Price = maDT(14) & .Eval(maDT(9) & I & maDT(11)) & maDT(15)
                    GetTypeURL = True
                    Exit For
                End If
            ElseIf TypeName(vntType_BaoBei) = "Empty" Then
                Exit For
            End If
        Next
    End With
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetTypeURL") = True Then Resume Next
End Function

Private Function GetURL_Price() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||fffd||fffd|URL
    Dim astrSplit() As String
    Dim astrSplit_1() As String
    Dim I As Long
    astrSplit = Split(mstrURL_Web, "/")
    For I = 0 To UBound(astrSplit)
        astrSplit_1 = Split(astrSplit(I), ".")
        If UBound(astrSplit_1) > -1 Then
            If Val(astrSplit_1(0)) > 0 Then
                mstrURL_Price = maDT(14) & astrSplit_1(0) & maDT(15)
                GetURL_Price = True
                Exit For
            End If
        End If
    Next
End Function

Public Property Get ClassID() As Long
    ClassID = 3    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Property

Public Property Get ClassTags() As Variant
    ClassTags = maDT ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1e9|
End Property

Public Property Get LinkTG(strURL As String) As String
    If Len(maDT(0)) Then    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||fffd||2b1|
        LinkTG = GetLinkLocation(Me.ClassID, strURL, maDT(0))    ''''|fffd||fffd||fffd||630||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||4f5||fffd||fffd||fffd||5b7|
    Else
        LinkTG = strURL    ''''|fffd||fffd||fffd||fffd||52d|URL
    End If
End Property



Attribute VB_Name = "Suning"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'---------------------------------------------------------------------------------------
' (c) Copyright 1999-2029 ExcelHome.Net, All Rights Reserved
' E-Mail    : tech@ExcelHome.net
' Homepage  : http://tech.excelhome.net
'---------------------------------------------------------------------------------------
' Module    : Suning
' Author    : HHAAMM
' Date      : 2015/1/11
' Purpose   : |fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||5f9||fffd||fffd||fffd||fffd||fffd||1b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37a||17c||6f8||fffd|
' Version   : 1.0.0
'---------------------------------------------------------------------------------------

Option Explicit
Private mDic As Object
Private mvntAttributes As Variant
Private maDT() As String
Private mstrURL_Web As String
Private mstrURL_Price As String
Private mstrHTML_Web As String
Private mstrHTML_Name As String
Private mstrJSON_All As String
Private mstrName_BaoBei As String
Private mstrPrice_BaoBei As String

Private Sub Class_Initialize()
    If gblnUSER_FROM_CAB Then    ''''|fffd||fffd||fffd||221||fffd||fffd|CAB(XML)|fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||435||13d||6b5||fffd||2b1||5b5|
        LoadClassTagNames Me.ClassID, maDT    ''''|fffd||fffd||fffd||631||fffd||1e9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Else
        ReDim maDT(0 To gintUSER_TAG_COUNT)
        maDT(1) = "<h1"
        maDT(2) = "/h1>"
        maDT(3) = "H1"
        maDT(4) = "[{"
        maDT(5) = "}]"
        maDT(6) = "{"
        maDT(7) = "}"
        maDT(8) = "+"
        maDT(9) = ","
        maDT(10) = "partNumber"":"
        maDT(11) = "HHAAMM = ["
        maDT(12) = "]"
        maDT(13) = "HHAAMM["
        maDT(14) = "'"
        maDT(15) = ".prdTypeVal"
        maDT(16) = ".partNumber"
        maDT(17) = ".itemName"
        maDT(18) = "http://www.suning.com/webapp/wcs/stores/"
        maDT(19) = "__9106__1.html?callback=showSaleStatus"
        maDT(20) = "GeneralPrice/"
        maDT(21) = "ItemPrice/"
        maDT(22) = ")"
        maDT(23) = "("
        maDT(24) = "HHAAMM = "
        maDT(25) = "HHAAMM.saleInfo"
        maDT(26) = "["
        maDT(27) = ".refPrice"
        maDT(28) = ".netPrice"
        maDT(29) = ".promotionPrice"
        maDT(30) = ".characterId"
        maDT(31) = "G00001"
        maDT(32) = ".characterValueDisplayName"
        maDT(33) = ".ninePartNumber"
        maDT(34) = "http://www.suning.com/emall/SNProductStatusView?storeId="
        maDT(35) = "catalogId="
        maDT(36) = "productId="
        maDT(37) = "partNumber="
        maDT(38) = "cityId=9106"
        maDT(39) = "vendorCode="
        maDT(40) = "clientType=1&districtId=10802"
        maDT(41) = ".productId"
        maDT(42) = "http://www.suning.com/"
        maDT(43) = ".itemPrice"
    End If
End Sub

Public Function GetBaoBeiAttributes(strURL As String, strName As String, vntAttributes As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strURL=|fffd||3f8||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5f9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b7|
    mstrURL_Web = strURL
    If GetHTML_Web = True Then
        If GetHTML_Name = True Then
            If GetName_BaoBei = True Then
                If GetJSON_All = True Then
                    If InStr(1, mstrURL_Web, maDT(42), vbTextCompare) = 0 Then
                        If GetURL_Price = True Then
                            If GetBaoBePrice(mstrURL_Price, mstrPrice_BaoBei) = True Then
                                strName = mstrName_BaoBei
                                vntAttributes = ArrayTranspose(mvntAttributes)
                                GetBaoBeiAttributes = True
                            End If
                        End If
                    Else
                        If GetURL_Price1 = True Then
                            If GetBaoBePrice(mstrURL_Price, mstrPrice_BaoBei) = True Then
                                strName = mstrName_BaoBei
                                ReDim vntAttributes(1 To 1, 1 To 3)
                                vntAttributes(1, 1) = mstrPrice_BaoBei
                                vntAttributes(1, 2) = "-"
                                vntAttributes(1, 3) = mstrURL_Price
                                GetBaoBeiAttributes = True
                            End If
                        End If
                    End If
                End If
            End If
        End If
    End If
End Function

Public Function GetBaoBePrice(strPriceKey As String, vntReturned As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strPriceKey=|fffd||6f8||fffd||63c||fffd||fffd||fffd|
    Dim vntAttributes_T As Variant
    Dim vntPrice_T As Variant
    Dim astrSplit() As String
    Dim strJSON_Price As String
    Dim strT_1 As String
    Dim strT_2 As String
    Dim I As Long
    Dim G As Long
    Dim J As Long
    On Error GoTo ErrorHandler
    If InStr(1, strPriceKey, maDT(34), vbTextCompare) > 0 Then
        GetBaoBePrice = GetBaoBePrice1(strPriceKey, vntReturned)
        Exit Function
    End If
    astrSplit = Split(strPriceKey, Chr$(28))
    If UBound(astrSplit) > 1 Then
        Set mDic = CreateObject("Scripting.Dictionary")
        mDic(astrSplit(1)) = 1
        ReDim mvntAttributes(1 To 3, 1 To 1)
        mvntAttributes(1, 1) = 999999999
        mvntAttributes(2, 1) = "-"
        mvntAttributes(3, 1) = strPriceKey
        strPriceKey = astrSplit(0) & astrSplit(1) & astrSplit(2)
    End If
    With CreateObject("WINHTTP.WINHTTPREQUEST.5.1")
        .Open "GET", strPriceKey, False
        .Send
        strJSON_Price = .responseText
    End With
    If Len(strJSON_Price) > 0 Then
        astrSplit = Split(strJSON_Price, maDT(22))
        astrSplit = Split(astrSplit(0), maDT(23))
        If UBound(astrSplit) > 0 Then
            strJSON_Price = maDT(24) & astrSplit(1)
            With CreateObject("ScriptControl")
                .Language = "javascript"
                .AddCode strJSON_Price
                vntPrice_T = .Eval(maDT(25))
                If TypeName(vntPrice_T) = "String" Then
                    strT_1 = maDT(25) & maDT(26) & maDT(14)
                    strT_2 = maDT(14) & maDT(12)
                    For I = 0 To 600
                        vntPrice_T = .Eval(strT_1 & I & strT_2)
                        If TypeName(vntPrice_T) = "String" Then
                            vntPrice_T = .Eval(strT_1 & I & strT_2 & maDT(16))
                            If TypeName(vntPrice_T) = "String" Then
                                If mDic.Exists(vntPrice_T) Then
                                    G = mDic(vntPrice_T)
                                    vntPrice_T = .Eval(strT_1 & I & strT_2 & maDT(27))
                                    If TypeName(vntPrice_T) = "String" Then
                                        vntPrice_T = Val(vntPrice_T)
                                        If vntPrice_T > 0 And Val(mvntAttributes(1, G)) > vntPrice_T Then mvntAttributes(1, G) = vntPrice_T
                                    End If
                                    vntPrice_T = .Eval(strT_1 & I & strT_2 & maDT(28))
                                    If TypeName(vntPrice_T) = "String" Then
                                        vntPrice_T = Val(vntPrice_T)
                                        If vntPrice_T > 0 And Val(mvntAttributes(1, G)) > vntPrice_T Then mvntAttributes(1, G) = vntPrice_T
                                    End If
                                    vntPrice_T = .Eval(strT_1 & I & strT_2 & maDT(29))
                                    If TypeName(vntPrice_T) = "String" Then
                                        vntPrice_T = Val(vntPrice_T)
                                        If vntPrice_T > 0 And Val(mvntAttributes(1, G)) > vntPrice_T Then mvntAttributes(1, G) = vntPrice_T
                                    End If
                                End If
                            End If
                        Else
                            Exit For
                        End If
                    Next
                End If
            End With
        End If
    End If
    G = UBound(mvntAttributes, 2)
    ReDim vntAttributes_T(1 To 3, 1 To G)
    For I = 1 To G
        If mvntAttributes(1, I) < 999999999 Then
            J = J + 1
            vntAttributes_T(1, J) = mvntAttributes(1, I)
            vntAttributes_T(2, J) = mvntAttributes(2, I)
            vntAttributes_T(3, J) = mvntAttributes(3, I)
        End If
    Next
    If J > 0 Then
        ReDim Preserve vntAttributes_T(1 To 3, 1 To J)
        mvntAttributes = vntAttributes_T
        vntReturned = mvntAttributes(1, 1)
        GetBaoBePrice = True
    End If
    On Error GoTo 0
    Exit Function
ErrorHandler:
    vntReturned = "Err Number: " & Err.Number & vbTab & "Err Description: " & Err.Description
End Function

Private Function GetHTML_Web() As Boolean    ''''#1
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||fffd||fffd||131||fffd|
    On Error GoTo ErrorHandler
    With CreateObject("WINHTTP.WINHTTPREQUEST.5.1")
        .Open "GET", mstrURL_Web, False
        .Send
        mstrHTML_Web = .responseText
    End With
    GetHTML_Web = (Len(mstrHTML_Web) > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetHTML_Web") = True Then Resume Next
End Function

Private Function GetHTML_Name() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||6eac||fffd||431||fffd||fffd||fffd||fffd||fffd||fffd||1b5||fffd|h1|fffd||fffd||1e9|
    Dim astrSplit() As String
    Dim astrSplit_H1() As String
    Dim I As Long
    Dim J As Long
    astrSplit_H1 = Split(mstrHTML_Web, maDT(1))
    For I = 1 To UBound(astrSplit_H1)
        J = J + 1
        astrSplit = Split(astrSplit_H1(I), maDT(2))
        mstrHTML_Name = mstrHTML_Name & maDT(1) & astrSplit(0) & maDT(2)
    Next
    GetHTML_Name = (J > 0)
End Function

Private Function GetName_BaoBei() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim oLabel_Web As Object
    On Error GoTo ErrorHandler
    With CreateObject("HTMLFILE")
        .body.innerHTML = mstrHTML_Name
        Set oLabel_Web = .All.tags("" & maDT(3) & "")    ''''|fffd||fffd||221||fffd||fffd||4b3|H1|52a||fffd||fffd|
    End With
    If Not (oLabel_Web Is Nothing) Then mstrName_BaoBei = oLabel_Web(oLabel_Web.length - 1).innerTEXT    ''''|fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd|
    GetName_BaoBei = (Len(mstrName_BaoBei) > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetName_BaoBei") = True Then Resume Next
End Function

Private Function GetJSON_All() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221|JSON|fffd||fffd||fffd||fffd|JSON|fffd||430||fffd||fffd||fffd||fffd||fffd||221||fffd||6f8||fffd||fffd|URL|fffd||435||132||fffd||fffd||fffd|
    Dim astrSplit() As String
    Dim strHTML As String
    Dim strHTML_1 As String
    Dim strHTML_2 As String
    Dim I As Long
    Dim G As Long
    Dim blnT As Boolean
    On Error GoTo ErrorHandler
    strHTML = mstrHTML_Web
    strHTML = Replace$(strHTML, maDT(4), Chr$(28) & "1" & Chr$(28))
    strHTML = Replace$(strHTML, maDT(5), Chr$(28) & "2" & Chr$(28))
    astrSplit = Split(strHTML, maDT(6))
    For I = 1 To UBound(astrSplit)
        G = InStr(1, astrSplit(I), maDT(7), vbTextCompare)
        If G > 0 Then
            strHTML = Left(astrSplit(I), G)
            If InStr(1, strHTML, maDT(10), vbTextCompare) > 0 Then
                blnT = True
                G = InStr(1, strHTML, maDT(8), vbTextCompare)
                If G > 0 Then
                    strHTML_1 = Left(strHTML, G - 1)
                    strHTML_2 = Mid(strHTML, G + 1)
                    G = InStr(1, strHTML_2, maDT(9), vbTextCompare)
                    strHTML_2 = Mid(strHTML_2, G)
                    strHTML = strHTML_1 & strHTML_2
                End If
                mstrJSON_All = mstrJSON_All & maDT(9) & maDT(6) & strHTML
            End If
        End If
    Next
    mstrJSON_All = Mid(mstrJSON_All, 2)
    mstrJSON_All = Replace$(mstrJSON_All, Chr$(28) & "1" & Chr$(28), maDT(4))
    mstrJSON_All = Replace$(mstrJSON_All, Chr$(28) & "2" & Chr$(28), maDT(5))
    mstrJSON_All = maDT(11) & mstrJSON_All & maDT(12)
    GetJSON_All = blnT
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetJSON_All") = True Then Resume Next
End Function
'itemId
Private Function GetURL_Price() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||fffd||fffd|JSON|fffd||fffd|URL
    Dim vntID_T As Variant
    Dim strID_BaoBei As String
    Dim strT_1 As String
    Dim strT_2 As String
    Dim strT_3 As String
    Dim strT_4 As String
    Dim I As Long
    Dim J As Long
    Dim G As Long
    On Error GoTo ErrorHandler
    strT_1 = maDT(13) & maDT(14)
    strT_2 = maDT(14) & maDT(12)
    strT_3 = maDT(18) & maDT(21) & Chr$(28)
    strT_4 = Chr$(28) & maDT(19)
    With CreateObject("ScriptControl")
        .Language = "javascript"
        .AddCode mstrJSON_All
        Set mDic = CreateObject("Scripting.Dictionary")
        ReDim mvntAttributes(1 To 3, 1 To 600)
        For I = 0 To 600
            vntID_T = .Eval(strT_1 & I & strT_2)
            If TypeName(vntID_T) = "String" Then
                vntID_T = .Eval(strT_1 & I & strT_2 & maDT(15))
                If TypeName(vntID_T) = "String" Then
                    If InStr(1, mstrURL_Web, vntID_T, vbTextCompare) > 0 Or UBound(Split(mstrURL_Web, "/")) > 3 Then
                        strID_BaoBei = vntID_T
                    Else
                        vntID_T = .Eval(strT_1 & I & strT_2 & maDT(16))
                        If InStr(1, mstrURL_Web, Val(vntID_T), vbTextCompare) > 0 Then
                            strID_BaoBei = vntID_T
                        Else
                            vntID_T = .Eval(strT_1 & I & strT_2 & maDT(33))
                            If InStr(1, mstrURL_Web, Val(vntID_T), vbTextCompare) > 0 Then strID_BaoBei = vntID_T
                        End If
                    End If
                Else
                    vntID_T = .Eval(strT_1 & I & strT_2 & maDT(30))
                    If TypeName(vntID_T) = "String" Then
                        If vntID_T = maDT(31) Then
                            vntID_T = .Eval(strT_1 & I & strT_2 & maDT(16))
                            If TypeName(vntID_T) = "String" Then
                                If Not mDic.Exists(vntID_T) Then
                                    J = J + 1
                                    mDic(vntID_T) = J
                                    mvntAttributes(1, J) = 999999999
                                    mvntAttributes(3, J) = strT_3 & vntID_T & strT_4
                                    vntID_T = .Eval(strT_1 & I & strT_2 & maDT(17))
                                    If TypeName(vntID_T) = "String" Then mvntAttributes(2, J) = vntID_T
                                    vntID_T = .Eval(strT_1 & I & strT_2 & maDT(32))
                                    If TypeName(vntID_T) = "String" Then
                                        G = InStr(1, mstrName_BaoBei, vntID_T, vbTextCompare)
                                        If G > 0 Then mstrName_BaoBei = Left(mstrName_BaoBei, G - 1)
                                    End If
                                End If
                            End If
                        End If
                    End If
                End If
            Else
                Exit For
            End If
        Next
    End With
    If J = 0 Then
        mstrURL_Price = strT_3 & strID_BaoBei & strT_4
    Else
        mstrURL_Price = maDT(18) & maDT(20) & strID_BaoBei & maDT(19)
        ReDim Preserve mvntAttributes(1 To 3, 1 To J)
        For I = 1 To J
            mvntAttributes(2, I) = Replace$(mvntAttributes(2, I), mstrName_BaoBei, Empty)
        Next
    End If
    GetURL_Price = (Len(strID_BaoBei) > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetURL_Price") = True Then Resume Next
End Function

Private Function GetURL_Price1() As Boolean
    Dim vntID_T As Variant
    Dim astrURL_Price(7) As String
    Dim astrSplit() As String
    Dim strT_1 As String
    Dim strT_2 As String
    Dim I As Long
    Dim G As Long
    On Error GoTo ErrorHandler
    astrSplit = Split(mstrURL_Web, "/")
    G = UBound(astrSplit)
    astrSplit = Split(astrSplit(G), "_")
    If UBound(astrSplit) < 4 Then Exit Function
    astrURL_Price(1) = maDT(34) & astrSplit(1)
    astrURL_Price(2) = maDT(35) & astrSplit(2)
    astrURL_Price(3) = maDT(36)
    astrURL_Price(4) = maDT(37)
    astrURL_Price(5) = maDT(38) ''''
    astrURL_Price(6) = maDT(39) & astrSplit(3)
    astrURL_Price(7) = maDT(40) ''''
    strT_1 = maDT(13) & maDT(14)
    strT_2 = maDT(14) & maDT(12)
    With CreateObject("ScriptControl")
        .Language = "javascript"
        .AddCode mstrJSON_All
        For I = 0 To 600
            vntID_T = .Eval(strT_1 & I & strT_2)
            If TypeName(vntID_T) = "String" Then
                vntID_T = .Eval(strT_1 & I & strT_2 & maDT(41))
                If TypeName(vntID_T) = "String" Then
                    vntID_T = .Eval(strT_1 & I & strT_2 & maDT(16))
                    If TypeName(vntID_T) = "String" Then
                        astrURL_Price(3) = astrURL_Price(4) & vntID_T
                        mstrURL_Price = Join(astrURL_Price, "&")
                        mstrURL_Price = Mid(mstrURL_Price, 2)
                        GetURL_Price1 = True
                        Exit For
                    End If
                End If
            Else
                Exit For
            End If
        Next
    End With
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetURL_Price1") = True Then Resume Next
End Function

Public Function GetBaoBePrice1(strPriceKey As String, vntReturned As Variant) As Boolean
    Dim vntPrice_T As Variant
    Dim strJSON_Price As String
    Dim strDT As String
    Dim strT_1 As String
    Dim strT_2 As String
    On Error GoTo ErrorHandler
    With CreateObject("WINHTTP.WINHTTPREQUEST.5.1")
        .Open "GET", strPriceKey, False
        .Send
        strJSON_Price = .responseText
    End With
    strT_1 = maDT(13) & maDT(14)
    strT_2 = maDT(14) & maDT(12)
    vntReturned = 999999999
    With CreateObject("ScriptControl")
        .Language = "javascript"
        .AddCode maDT(24) & strJSON_Price
        strDT = Mid(maDT(29), 2)
        vntPrice_T = .Eval(strT_1 & strDT & strT_2)
        If TypeName(vntPrice_T) = "String" Then
            vntPrice_T = Val(vntPrice_T)
            If vntPrice_T > 0 And vntPrice_T < Val(vntReturned) Then vntReturned = Val(vntPrice_T)
        End If
        strDT = Mid(maDT(43), 2)
        vntPrice_T = .Eval(strT_1 & strDT & strT_2)
        If TypeName(vntPrice_T) = "String" Then
            vntPrice_T = Val(vntPrice_T)
            If vntPrice_T > 0 And vntPrice_T < Val(vntReturned) Then vntReturned = Val(vntPrice_T)
        End If
        strDT = Mid(maDT(28), 2)
        vntPrice_T = .Eval(strT_1 & strDT & strT_2)
        If TypeName(vntPrice_T) = "String" Then
            vntPrice_T = Val(vntPrice_T)
            If vntPrice_T > 0 And vntPrice_T < Val(vntReturned) Then vntReturned = Val(vntPrice_T)
        End If
        strDT = Mid(maDT(27), 2)
        vntPrice_T = .Eval(strT_1 & strDT & strT_2)
        If TypeName(vntPrice_T) = "String" Then
            vntPrice_T = Val(vntPrice_T)
            If vntPrice_T > 0 And vntPrice_T < Val(vntReturned) Then vntReturned = Val(vntPrice_T)
        End If
    End With
    vntReturned = Val(vntReturned)
    GetBaoBePrice1 = (vntReturned < 999999999)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetBaoBePrice1") = True Then Resume Next
End Function

Public Property Get ClassID() As Long
    ClassID = 5    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Property

Public Property Get ClassTags() As Variant
    ClassTags = maDT ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1e9|
End Property

Public Property Get LinkTG(strURL As String) As String
    If Len(maDT(0)) Then    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||fffd||2b1|
        LinkTG = GetLinkLocation(Me.ClassID, strURL, maDT(0))    ''''|fffd||fffd||fffd||630||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||4f5||fffd||fffd||fffd||5b7|
    Else
        LinkTG = strURL    ''''|fffd||fffd||fffd||fffd||52d|URL
    End If
End Property

Attribute VB_Name = "Taobao"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'---------------------------------------------------------------------------------------
' (c) Copyright 1999-2029 ExcelHome.Net, All Rights Reserved
' E-Mail    : tech@ExcelHome.net
' Homepage  : http://tech.excelhome.net
'---------------------------------------------------------------------------------------
' Module    : Taobao
' Author    : HHAAMM
' Date      : 2014/12/30
' Purpose   : |fffd||fffd||221||fffd||531||fffd||fffd||fffd||fffd||fffd||1b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37a||17c||6f8||fffd|
' Version   : 1.0.0
'---------------------------------------------------------------------------------------

Option Explicit

Private mvntAttributes() As Variant    ''''|fffd||6f8||fffd||fffd||37a||163||fffd||fffd||6f8||fffd||63c||fffd||fffd||fffd|
Private mavntGroup() As Variant   ''''|fffd||37a||fffd||fffd||fffd|
Private maDT() As String
Private mstrURL_Web As String
Private mstrURL_Price As String
Private mstrHTML_Web As String
Private mstrHTML_Name As String
Private mstrHTML_Parameters As String
Private mstrJSON_Price As String    ''''JSON|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6f8||63b31||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private mstrName_BaoBei As String
Private mlngCount_UL As Long
Private mlngCount_Type As Long

Private Sub Class_Initialize()
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6d22||fffd||57c||fffd|
    ReDim mvntAttributes(1 To 3, 1 To 600)
    ReDim mavntGroup(1 To 6)
    If gblnUSER_FROM_CAB Then    ''''|fffd||fffd||fffd||221||fffd||fffd|CAB(XML)|fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||435||13d||6b5||fffd||2b1||5b5|
        LoadClassTagNames Me.ClassID, maDT    ''''|fffd||fffd||fffd||631||fffd||1e9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Else
        ReDim maDT(0 To gintUSER_TAG_COUNT)
        maDT(1) = "Content-Type"
        maDT(2) = "application/json;charset=GBK"
        maDT(3) = "g_config."
        maDT(4) = "vdata."
        maDT(5) = "}}"
        maDT(6) = "PromoData["
        maDT(7) = "]"
        maDT(8) = "Price"
        maDT(9) = "][0].price"
        maDT(10) = "def"
        maDT(11) = ":["
        maDT(12) = "PromoData.def['0']"
        maDT(13) = "PromoData.def['0'].price"
        maDT(14) = "&id="
        maDT(15) = "?id="
        maDT(16) = "http://item.taobao.com/item.htm?id="
        maDT(17) = "&"
        maDT(18) = "<ul"
        maDT(19) = "/ul>"
        maDT(20) = "data-value"
        maDT(21) = "<h3"
        maDT(22) = "/h3>"
        maDT(23) = "UL"
        maDT(24) = "data-property"
        maDT(25) = "A"
        maDT(26) = "H3"
        maDT(27) = "http://detailskip.taobao.com/json/sib.htm?"
        maDT(28) = ""","
        maDT(29) = "Referer"
        maDT(30) = "PromoData.def['0'].type"
        maDT(31) = "LI"
        maDT(32) = ";"
        maDT(33) = ";'"
        maDT(34) = "skuMap"":"
        maDT(35) = "});"
        maDT(36) = "HHAAMM = "
        maDT(37) = "HHAAMM["
        maDT(38) = ".price"
    End If
End Sub

Public Function GetBaoBeiAttributes(strURL As String, strName As String, vntAttributes As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strURL=|fffd||3f8||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b7|
    mstrURL_Web = strURL
    If GetURL_Web = True Then
        If GetHTML_Web = True Then
            If GetHTML_Name = True Then
                If GetName_BaoBei = True Then
                    If GetHTML_Parameters = True Then
                        If GetParameters_1 = True Then
                            If GetJSON_Price = True Then
                                If GetParameters_2 = True Then
                                    If mlngCount_Type > 0 Then
                                        If GetPrice_1 = False Then
                                            If GetJSON_Price_1 = True Then
                                                If GetPrice_3 = False Then Exit Function
                                            End If
                                        End If
                                    Else
                                        Call GetPrice_2
                                    End If
                                End If
                            End If
                        End If
                    End If
                End If
            End If
        End If
    End If
    If mlngCount_Type > 0 Then
        strName = mstrName_BaoBei
        ReDim Preserve mvntAttributes(1 To 3, 1 To mlngCount_Type)
        vntAttributes = ArrayTranspose(mvntAttributes)
        GetBaoBeiAttributes = True
    End If
End Function

Public Function GetBaoBePrice(strPriceKey As String, vntReturned As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strPriceKey=|fffd||6f8||fffd||63c||fffd||fffd||fffd|
    Dim astrSplit() As String
    On Error GoTo ErrorHandler
    astrSplit = Split(strPriceKey, Chr$(28))
    If UBound(astrSplit) = 0 Then Exit Function
    mstrHTML_Web = astrSplit(1)
    mstrURL_Web = astrSplit(0)
    mlngCount_Type = 1
    If GetJSON_Price = True Then
        If UBound(astrSplit) = 2 Then
            mvntAttributes(3, 1) = astrSplit(2)
            If GetPrice_1 = False Then
                If GetHTML_Web = True Then
                    If GetJSON_Price_1 = True Then
                        If GetPrice_3 = False Then Exit Function
                    End If
                End If
            End If
        ElseIf UBound(astrSplit) = 1 Then
            Call GetPrice_2
        End If
    End If
    vntReturned = mvntAttributes(1, 1)
    GetBaoBePrice = (Val(vntReturned) > 0)    ''''|fffd||1f7||fffd||279||fffd||221||fffd||fffd||fffd||6f8||fffd|
    On Error GoTo 0
    Exit Function
ErrorHandler:
    vntReturned = "Err Number: " & Err.Number & vbTab & "Err Description: " & Err.Description
End Function

Private Function GetURL_Web() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|URL
    Dim astrSplit() As String
    astrSplit = Split(mstrURL_Web, maDT(14))    ' "&id="
    If UBound(astrSplit) = 0 Then astrSplit = Split(mstrURL_Web, maDT(15))  ' "?id="
    If UBound(astrSplit) > 0 Then
        astrSplit = Split(astrSplit(1), maDT(17))   ' "&"
        If Val(astrSplit(0)) > 0 Then
            mstrURL_Web = maDT(16) & astrSplit(0)   ' "http://item.taobao.com/item.htm?id="
            GetURL_Web = True
        End If
    End If
End Function

Private Function GetHTML_Web() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||fffd||fffd||131||fffd|
    On Error GoTo ErrorHandler
    With CreateObject("WINHTTP.WINHTTPREQUEST.5.1")
        .Open "GET", mstrURL_Web, False
        .Send
        mstrHTML_Web = .responseText
        GetHTML_Web = True
    End With
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetHTML_Web") = True Then Resume Next
End Function

Private Function GetHTML_Name() As Boolean
''''|fffd||fffd||fffd||723||fffd|
    Dim astrSplit_1() As String
    Dim astrSplit_2() As String
    Dim I As Long
    astrSplit_1 = Split(mstrHTML_Web, maDT(21))    ' "<h3"
    For I = 1 To UBound(astrSplit_1)
        astrSplit_2 = Split(astrSplit_1(I), maDT(22))   ' "/h3>"
        mstrHTML_Name = mstrHTML_Name & maDT(21) & astrSplit_2(0) & maDT(22)
    Next
    GetHTML_Name = (Len(mstrHTML_Name) > 0)
End Function
'Name_BaoBei
Private Function GetName_BaoBei() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||37a||163||fffd||fffd||fffd||4e6||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim oH3 As Object
    On Error GoTo ErrorHandler
    With CreateObject("HTMLFILE")    ''''HTML|fffd||13c||fffd||fffd||63c||fffd|
        .body.innerHTML = mstrHTML_Name
        Set oH3 = .All.tags("" & maDT(26) & "")   ' "H3"
    End With
    If Not (oH3 Is Nothing) Then
        mstrName_BaoBei = oH3(oH3.length - 1).innerTEXT    ''''|fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd|
        GetName_BaoBei = (Len(mstrName_BaoBei) > 0)
    End If
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetName_BaoBei") = True Then Resume Next
End Function

Private Function GetHTML_Parameters() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||431||fffd||fffd||fffd||fffd||37a||163||fffd||fffd||fffd||4e6||fffd||fffd||fffd||fffd||fffd||fffd||1b5||232||fffd||fffd||fffd||fffd||fffd|HTML
    Dim astrSplit_1() As String
    Dim astrSplit_2() As String
    Dim I As Long
    astrSplit_1 = Split(mstrHTML_Web, maDT(18))    ' "<ul"
    For I = 1 To UBound(astrSplit_1)
        astrSplit_2 = Split(astrSplit_1(I), maDT(19))   ' "/ul>"
        If InStr(1, astrSplit_2(0), maDT(20), vbTextCompare) > 0 Then   ' "data-value"
            mstrHTML_Parameters = mstrHTML_Parameters & maDT(18) & astrSplit_2(0) & maDT(19)
        End If
    Next
    GetHTML_Parameters = (Len(mstrHTML_Parameters) > 0)
End Function

Private Function GetParameters_1() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||37a||163||fffd||fffd||fffd||4e6||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim vntData_value As Variant
    Dim oUL As Object
    Dim oLI As Object
    Dim oA As Object
    Dim avntGroup() As String
    Dim L As Long
    Dim I As Long
    Dim G As Long
    Dim J As Long
    On Error GoTo ErrorHandler
    With CreateObject("HTMLFILE")    ''''HTML|fffd||13c||fffd||fffd||63c||fffd|
        .body.innerHTML = mstrHTML_Parameters    ''''|fffd||fffd||fffd||63c||fffd||fffd||43c||fffd||fffd||fffd||4aa||5b4||fffd||435||fffd|HTML|fffd||fffd||fffd||fffd|
        Set oUL = .All.tags("" & maDT(23) & "")    ' "UL"
        For L = 0 To oUL.length - 1
            vntData_value = oUL(L).getAttribute(maDT(24))    ' "data-property"
            If TypeName(vntData_value) = "String" Then    ''''|fffd||536||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6a3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3aa||fffd||5b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                J = 0
                mlngCount_UL = mlngCount_UL + 1    ''''|fffd||fffd||fffd||fffd||4aa||fffd||fffd||fffd|UL|52a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6fc||fffd|
                Set oLI = oUL(L).All.tags("" & maDT(31) & "")    ''''|fffd||fffd||221||fffd||fffd||4b3|UL|52a||fffd||fffd||fffd||435||fffd|LI|52a||fffd||fffd|
                ReDim avntGroup(1 To 2, 1 To 100)    ''''|fffd||fffd||fffd||fffd||fffd||37a||163||fffd||fffd||fffd||4e6||fffd||fffd||fffd|
                For I = 0 To oLI.length - 1
                    vntData_value = oLI(I).getAttribute(maDT(20))    ''''|fffd||fffd||221|UL|52a||fffd||fffd||fffd||fffd||fffd||536||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    If TypeName(vntData_value) = "String" Then   ''''|fffd||536||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6a3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3aa||fffd||5b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                        J = J + 1    ''''|fffd||fffd||fffd||fffd||4aa||fffd||fffd||136||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6fc||fffd|
                        avntGroup(1, J) = vntData_value    ''''|fffd||37a||172||fffd||fffd||fffd|
                        Set oA = oLI(I).All.tags("" & maDT(25) & "")    ' "A"
                        For G = 0 To oA.length - 1
                            avntGroup(2, J) = oA(G).outerText    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                        Next
                    End If
                Next
                If J > 0 Then    ''''|fffd||fffd||fffd||fffd||4aa||fffd||fffd||136||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    ReDim Preserve avntGroup(1 To 2, 1 To J)
                    mavntGroup(mlngCount_UL) = avntGroup
                Else
                    mlngCount_UL = mlngCount_UL - 1
                End If
            End If
        Next
    End With
    GetParameters_1 = (mlngCount_UL > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetParameters_1") = True Then Resume Next
End Function

Private Function GetJSON_Price() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221|JSON|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6f8||63b31||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim astrSplit() As String
    On Error GoTo ErrorHandler
    astrSplit = Split(mstrHTML_Web, maDT(27))    ' "http://detailskip.taobao.com/json/sib.htm?"
    If UBound(astrSplit) > 0 Then    ''''|fffd||279||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd|
        astrSplit = Split(astrSplit(1), maDT(28))    ' ""","
        mstrURL_Price = maDT(27) & astrSplit(0)    ''''|fffd||fffd||3f3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        With CreateObject("WINHTTP.WINHTTPREQUEST.5.1")    ''''|123||fffd||fffd|HTTP|fffd||fffd|GET|fffd||fffd|POST|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            .Open "GET", mstrURL_Price, False
            .SetRequestHeader maDT(1), maDT(2)
            .SetRequestHeader maDT(29), mstrURL_Web    ' "Referer"
            .Send    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            mstrJSON_Price = .responseText    ''''|fffd||fffd||221||4b3||fffd||fffd||fffd||131||fffd|
        End With
    End If
    If Len(mstrJSON_Price) > 0 Then
        mstrJSON_Price = Replace$(mstrJSON_Price, maDT(3), Empty)    ''''|225||fffd||fffd|JSON|fffd||436||fffd||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd|
        mstrJSON_Price = Replace$(mstrJSON_Price, maDT(4), Empty)    ''''|225||fffd||fffd|JSON|fffd||436||fffd||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd|
        GetJSON_Price = True
    End If
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetJSON_Price") = True Then Resume Next
End Function

Private Function GetJSON_Price_1() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221|JSON|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6f8||63b31||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim astrSplit() As String
    astrSplit = Split(mstrHTML_Web, maDT(34))
    If UBound(astrSplit) > 0 Then
        astrSplit = Split(astrSplit(1), maDT(35))   ' "});"
        astrSplit(0) = Replace$(astrSplit(0), Chr$(10), Empty)
        astrSplit(0) = Replace$(astrSplit(0), Chr$(13), Empty)
        astrSplit(0) = Replace$(astrSplit(0), Chr$(32), Empty)
        astrSplit = Split(astrSplit(0), maDT(5))
        If Len(astrSplit(0)) > 0 Then
            mstrJSON_Price = maDT(36) & astrSplit(0) & maDT(5)
            GetJSON_Price_1 = True
        End If
    End If
End Function

Private Function GetParameters_2() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||3f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||b5||fffd||fffd||fffd||3e3||fffd||fffd||776||fffd||fffd||fffd||3a7|1-6
    Dim lngI() As Long
    Dim I1 As Long
    Dim I2 As Long
    Dim I3 As Long
    Dim I4 As Long
    Dim I5 As Long
    Dim I6 As Long
    If mlngCount_UL < 1 Then Exit Function
    ReDim lngI(1 To mlngCount_UL)
    For I1 = 1 To UBound(mavntGroup(1), 2)
        lngI(1) = I1
        If mlngCount_UL > 1 Then    ''''|fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||3f5||fffd||fffd||fffd||fffd||fffd|
            For I2 = 1 To UBound(mavntGroup(2), 2)
                lngI(2) = I2
                If mlngCount_UL > 2 Then
                    For I3 = 1 To UBound(mavntGroup(3), 2)
                        lngI(3) = I3
                        If mlngCount_UL > 3 Then
                            For I4 = 1 To UBound(mavntGroup(4), 2)
                                lngI(4) = I4
                                If mlngCount_UL > 4 Then
                                    For I5 = 1 To UBound(mavntGroup(5), 2)
                                        lngI(5) = I5
                                        If mlngCount_UL > 5 Then
                                            For I6 = 1 To UBound(mavntGroup(6), 2)
                                                lngI(6) = I6
                                                Call GetParameters_2_Input(lngI)
                                            Next
                                        Else
                                            Call GetParameters_2_Input(lngI)
                                        End If
                                    Next
                                Else
                                    Call GetParameters_2_Input(lngI)
                                End If
                            Next
                        Else
                            Call GetParameters_2_Input(lngI)
                        End If
                    Next
                Else
                    Call GetParameters_2_Input(lngI)
                End If
            Next
        Else
            Call GetParameters_2_Input(lngI)
        End If
    Next
    GetParameters_2 = (mlngCount_Type > 0)
End Function

Private Sub GetParameters_2_Input(lngI() As Long)
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||275||fffd||fffd||fffd||3e3||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||fffd||674||fffd||fffd||fffd||3e3||fffd||36c||2b1||fffd||fffd||3f1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim I As Long
    mlngCount_Type = mlngCount_Type + 1    ''''|fffd||6fc||4f2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    For I = 1 To mlngCount_UL
        mvntAttributes(2, mlngCount_Type) = mvntAttributes(2, mlngCount_Type) & "-" & mavntGroup(I)(2, lngI(I))    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        mvntAttributes(3, mlngCount_Type) = mvntAttributes(3, mlngCount_Type) & maDT(32) & mavntGroup(I)(1, lngI(I))    ''''|fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||fffd||674||fffd||fffd||fffd| ";"
    Next
    mvntAttributes(3, mlngCount_Type) = "'" & mvntAttributes(3, mlngCount_Type) & maDT(33)    ''''|fffd||fffd||fffd||4f8||fffd||fffd||fffd|JS|434||fffd||fffd||fffd||fffd||fffd||5b7||fffd| ";'"
End Sub

Private Function GetPrice_1() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||fffd||770||fffd||fffd||fffd||fffd||6f8||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd|JSON|fffd||fffd||fffd||fffd||46f||fffd||fffd||4e6||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||221||fffd||fffd||fffd||6f8||fffd|
    Dim vntTemp As Variant
    Dim I As Long
    Dim J As Long
    On Error GoTo ErrorHandler
    With CreateObject("ScriptControl")    ''''JS|fffd||fffd||fffd||fffd|
        .Language = "javascript"    ''''|5b8||fffd||fffd||fffd||171||fffd||fffd||fffd||fffd||fffd|
        .AddCode mstrJSON_Price    ''''|fffd||fffd||fffd||171||fffd||fffd||fffd||fffd||fffd||fffd||43c||fffd||fffd||fffd||4aa||5b4||fffd||435||13d||171||fffd|
        For I = 1 To mlngCount_Type    ''''|fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd|
            vntTemp = .Eval(maDT(6) & mvntAttributes(3, I) & maDT(7))    ''''|fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||3f2||fffd||fffd||fffd||fffd||fffd||2b1||3aa|null|5b5|
            If TypeName(vntTemp) = "String" Then    ''''|fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||3f4||fffd||fffd||fffd||2b1||3aa||fffd||5b7||fffd||fffd||fffd|
                Set vntTemp = .Eval(maDT(6) & mvntAttributes(3, I) & maDT(7))    ''''|3aa||fffd||2f4||fffd||fffd||fffd||fffd||435||131||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7bc||6f8||fffd|
                If vntTemp.length = 0 Then Exit For   ''''|fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7bc||6f8||fffd|
                mvntAttributes(1, I) = .Eval(maDT(6) & mvntAttributes(3, I) & maDT(9))    ''''|fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||fffd||b1||fffd||fffd||fffd||fffd||6f8||fffd|
                If IsEmpty(mvntAttributes(1, I)) Then
                    mvntAttributes(1, I) = .Eval(maDT(8))
                Else
                    mvntAttributes(1, I) = mvntAttributes(1, I)
                    mvntAttributes(2, I) = .Eval(maDT(6) & mvntAttributes(3, I) & "][0].type") & " " & mvntAttributes(2, I)
                End If
                J = J + 1
                mvntAttributes(1, J) = Val(mvntAttributes(1, I))
                mvntAttributes(2, J) = mvntAttributes(2, I)
                If Left(mvntAttributes(2, J), 1) = "-" Then mvntAttributes(2, J) = Mid(mvntAttributes(2, J), 2)
                mvntAttributes(3, J) = mstrURL_Web & Chr$(28) & mstrURL_Price & Chr$(28) & mvntAttributes(3, I)
            End If
        Next
        If J > 0 Then mlngCount_Type = J
    End With
    GetPrice_1 = (J > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetPrice_1") = True Then Resume Next
End Function

Private Sub GetPrice_2()
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||fffd||770||fffd||fffd||fffd||fffd||6f8||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd|JSON|fffd||fffd||fffd||fffd||46f||fffd||fffd||4e6||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||221||fffd||fffd||fffd||6f8||fffd|
    Dim vntTemp As Variant
    Dim astrSplit() As String
    On Error GoTo ErrorHandler
    With CreateObject("ScriptControl")    ''''JS|fffd||fffd||fffd||fffd|
        .Language = "javascript"    ''''|5b8||fffd||fffd||fffd||171||fffd||fffd||fffd||fffd||fffd|
        .AddCode mstrJSON_Price    ''''|fffd||fffd||fffd||171||fffd||fffd||fffd||fffd||fffd||fffd||43c||fffd||fffd||fffd||4aa||5b4||fffd||435||13d||171||fffd|
        astrSplit = Split(mstrJSON_Price, Chr$(34) & maDT(10) & Chr$(34) & maDT(11))
        If UBound(astrSplit) > 0 Then
            vntTemp = .Eval(maDT(12))
            If TypeName(vntTemp) = "String" Then
                mvntAttributes(1, 1) = .Eval(maDT(13))
                mvntAttributes(2, 1) = .Eval(maDT(30))    ' "PromoData.def['0'].type"
            Else
                mvntAttributes(1, 1) = .Eval(maDT(8))    ''''|52d||2bc||fffd||6f8||fffd|
            End If
        Else
            mvntAttributes(1, 1) = .Eval(maDT(8))    ''''|52d||2bc||fffd||6f8||fffd|
        End If
        mvntAttributes(2, 1) = mvntAttributes(2, 1) & "-"
        mvntAttributes(3, 1) = mstrURL_Web & Chr$(28) & mstrURL_Price
        If Val(mvntAttributes(1, 1)) > 0 Then mlngCount_Type = 1
    End With
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    If ExcelHomeErrorHandler("GetPrice_2") = True Then Resume Next
End Sub

Private Function GetPrice_3() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||fffd||770||fffd||fffd||fffd||fffd||6f8||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd|JSON|fffd||fffd||fffd||fffd||46f||fffd||fffd||4e6||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||221||fffd||fffd||fffd||6f8||fffd|
    Dim vntTemp As Variant
    Dim I As Long
    Dim J As Long
    On Error GoTo ErrorHandler
    With CreateObject("ScriptControl")   ''''JS|fffd||fffd||fffd||fffd|
        .Language = "javascript"    ''''|5b8||fffd||fffd||fffd||171||fffd||fffd||fffd||fffd||fffd|
        .AddCode mstrJSON_Price    ''''|fffd||fffd||fffd||171||fffd||fffd||fffd||fffd||fffd||fffd||43c||fffd||fffd||fffd||4aa||5b4||fffd||435||13d||171||fffd|
        For I = 1 To mlngCount_Type    ''''|fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd|
            vntTemp = .Eval(maDT(37) & mvntAttributes(3, I) & maDT(7))    ''''|fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||3f2||fffd||fffd||fffd||fffd||fffd||2b1||3aa|null|5b5|
            If TypeName(vntTemp) = "String" Then    ''''|fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||3f4||fffd||fffd||fffd||2b1||3aa||fffd||5b7||fffd||fffd||fffd|
                mvntAttributes(1, I) = .Eval(maDT(37) & mvntAttributes(3, I) & maDT(7) & maDT(38))
                J = J + 1
                mvntAttributes(1, J) = Val(mvntAttributes(1, I))
                mvntAttributes(2, J) = mvntAttributes(2, I)
                If Left(mvntAttributes(2, J), 1) = "-" Then mvntAttributes(2, J) = Mid(mvntAttributes(2, J), 2)
                mvntAttributes(3, J) = mstrURL_Web & Chr$(28) & mstrURL_Price & Chr$(28) & mvntAttributes(3, I)
            End If
        Next
        If J > 0 Then mlngCount_Type = J
    End With
    GetPrice_3 = (J > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetPrice_3") = True Then Resume Next
End Function

Public Property Get ClassID() As Long
    ClassID = 1    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Property

Public Property Get ClassTags() As Variant
    ClassTags = maDT    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1e9|
End Property

Public Property Get LinkTG(strURL As String) As String
    If Len(maDT(0)) Then    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||fffd||2b1|
        LinkTG = GetLinkLocation(Me.ClassID, strURL, maDT(0))    ''''|fffd||fffd||fffd||630||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||4f5||fffd||fffd||fffd||5b7|
    Else
        LinkTG = strURL    ''''|fffd||fffd||fffd||fffd||52d|URL
    End If
End Property
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'--------------------------------------------------------------------------------------
' (c) Copyright 1999-2029 ExcelHome.Net, All Rights Reserved
' E-Mail     : tech@ExcelHome.net
' Homepage   : http://tech.excelhome.net
'--------------------------------------------------------------------------------------
' Filename   : *.xlam
' Module     : ThisWorkbook
' Purpose    : |fffd||fffd||fffd||fffd||fffd||fffd||fffd||bc||fffd|
' Author     : shourou
' Reviser    : x
' Date       : 2015/3/15 06:58
' Version    : 1.0.0
' Procedures : x
'---------------------------------------------------------------------------------------

Option Explicit

Private mlngClosed As Integer

Private Sub Workbook_Open()
''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||bc||fffd|
    TackerExecuteNow False, False    ''''|fffd||fffd||2bc||fffd||fffd||fffd||fffd|
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||631||fffd||fffd||bc||fffd|
    mlngClosed = mlngClosed + 1    ''''|fffd||631||574||fffd||fffd||fffd||fffd||6fc||fffd|
    TackerExecuteNow False, True    ''''|fffd||fffd||2bc||fffd||fffd||fffd||fffd|
    If Me.Saved = False Then Me.Save    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f8||fffd||fffd||fffd|,|fffd||fffd||1ff||fffd||1b1||fffd||fffd||fffd|
    If mlngClosed = 1 Then Cancel = gblnCancel     ''''|fffd||1f7||fffd||221||fffd||fffd||fffd||631||579||fffd||fffd||fffd||fffd||fffd|/|fffd||2f3||fffd||4e6||fffd||f3||fffd||fffd||fffd|
End Sub

Attribute VB_Name = "Tmall"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'---------------------------------------------------------------------------------------
' (c) Copyright 1999-2029 ExcelHome.Net, All Rights Reserved
' E-Mail    : tech@ExcelHome.net
' Homepage  : http://tech.excelhome.net
'---------------------------------------------------------------------------------------
' Module    : Tmall
' Author    : HHAAMM
' Date      : 2014/12/22
' Purpose   : |fffd||fffd||221||fffd||fffd||e8||fffd||fffd||fffd||fffd||1b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37a||17c||6f8||fffd|
' Version   : 1.0.0
'---------------------------------------------------------------------------------------

Option Explicit

Private mvntAttributes As Variant    ''''|fffd||6f8||fffd||fffd||37a||163||fffd||fffd||6f8||fffd||63c||fffd||fffd||fffd|
Private mavntArr_Type() As Variant    ''''|fffd||37a||fffd||fffd||fffd|
Private maDT() As String
Private mstrJSON_TypeID As String    ''''JSON|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37a||fffd|or|fffd||37a||fffd||fffd||fffd||3e3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private mstrJSON_PriceID As String    ''''JSON|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6f8||63b31||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Private mstrURL_Web As String
Private mstrURL_Price As String
Private mstrHTML_Web As String
Private mstrHTML_Name As String
Private mstrHTML_Type As String
Private mstrName_BaoBei As String
Private mlngCount_Arr_Type As Long
Private mlngCount_Type As Long

Private Sub Class_Initialize()
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6d22||fffd||57c||fffd|
    ReDim mvntAttributes(1 To 3, 1 To 600)
    ReDim mavntArr_Type(1 To 6)
    If gblnUSER_FROM_CAB Then    ''''|fffd||fffd||fffd||221||fffd||fffd|CAB(XML)|fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||435||13d||6b5||fffd||2b1||5b5|
        LoadClassTagNames Me.ClassID, maDT    ''''|fffd||fffd||fffd||631||fffd||1e9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Else
        ReDim maDT(0 To gintUSER_TAG_COUNT)
        maDT(1) = "Content-Type"
        maDT(2) = "application/json;charset=GBK"
        maDT(3) = "HHAAMM = "
        maDT(4) = "HHAAMM.defaultModel.itemPriceResultDO.priceInfo["
        maDT(5) = "]"
        maDT(6) = "].promotionList"
        maDT(7) = "].promotionList['0'].price"
        maDT(8) = ".price"
        maDT(9) = "HHAAMM.defaultModel.itemPriceResultDO.priceInfo['def']"
        maDT(10) = "HHAAMM.defaultModel.itemPriceResultDO.priceInfo.def.promotionList['0'].price"
        maDT(11) = "&id="
        maDT(12) = "?id="
        maDT(13) = "&"
        maDT(14) = "http://detail.tmall.com/item.htm?id="
        maDT(15) = "<h1"
        maDT(16) = "/h1>"
        maDT(17) = "H1"
        maDT(18) = "<ul"
        maDT(19) = "/ul>"
        maDT(20) = "UL"
        maDT(21) = "data-property"
        maDT(22) = "LI"
        maDT(23) = "data-value"
        maDT(24) = "http://mdskip.taobao.com/core/initItemDetail.htm?"
        maDT(25) = "Referer"
        maDT(26) = "}}"
        maDT(27) = "HHAAMM["
        maDT(28) = "'"
        maDT(29) = "].skuId"
        maDT(30) = "';"
        maDT(31) = "}}}"
        maDT(32) = "skuMap"":"
        maDT(33) = ";"
        maDT(34) = ";'"
    End If
End Sub

Public Function GetBaoBeiAttributes(strURL As String, strName As String, vntAttributes As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strURL=|fffd||3f8||fffd||fffd||fffd||fffd||e8||fffd||fffd||fffd||fffd||fffd||fffd||5b7|
    mstrURL_Web = strURL
    If GetURL_Web = True Then
        If GetHTML_Web = True Then
            If GetHTML_Name = True Then
                If GetName_BaoBei = True Then
                    If GetHTML_Type = True Then
                        If GetData_Type = True Then
                            If GetJSON_TypeID = True Then
                                If GetJSON_PriceID = True Then
                                    Call GetType_BaoBei
                                    Call KeyToID
                                    Call GetPrice_BaoBei
                                End If
                            End If
                        End If
                    End If
                End If
            End If
        End If
    End If
    If mlngCount_Type = 0 Then
        If GetJSON_PriceID = True Then Call GetPrice_BaoBei_def
    End If
    If mlngCount_Type > 0 Then
        strName = mstrName_BaoBei
        ReDim Preserve mvntAttributes(1 To 3, 1 To mlngCount_Type)
        vntAttributes = ArrayTranspose(mvntAttributes)
        GetBaoBeiAttributes = True
    End If
End Function

Public Function GetBaoBePrice(strPriceKey As String, vntReturned As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strPriceKey=|fffd||6f8||fffd||63c||fffd||fffd||fffd|
    Dim astrSplit() As String
    On Error GoTo ErrorHandler
    astrSplit = Split(strPriceKey, Chr$(28))
    If UBound(astrSplit) = 0 Then Exit Function
    mstrHTML_Web = astrSplit(1)
    mstrURL_Web = astrSplit(0)
    mlngCount_Type = 1
    If GetJSON_PriceID = True Then
        If UBound(astrSplit) = 2 Then
            mvntAttributes(3, 1) = astrSplit(2)
            Call GetPrice_BaoBei
        ElseIf UBound(astrSplit) = 1 Then
            Call GetPrice_BaoBei_def
        End If
    End If
    vntReturned = mvntAttributes(1, 1)
    GetBaoBePrice = (Val(vntReturned) > 0)    ''''|fffd||1f7||fffd||279||fffd||221||fffd||fffd||fffd||6f8||fffd|
    On Error GoTo 0
    Exit Function
ErrorHandler:
    vntReturned = "Err Number: " & Err.Number & vbTab & "Err Description: " & Err.Description
End Function

Private Function GetURL_Web() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|URL
    Dim astrSplit() As String
    astrSplit = Split(mstrURL_Web, maDT(11))    ' "&id="
    If UBound(astrSplit) = 0 Then astrSplit = Split(mstrURL_Web, maDT(12))  ' "?id="
    If UBound(astrSplit) > 0 Then
        astrSplit = Split(astrSplit(1), maDT(13))   ' "&id="
        If Val(astrSplit(0)) > 0 Then
            mstrURL_Web = maDT(14) & astrSplit(0)   ' "http://detail.tmall.com/item.htm?id="
            GetURL_Web = True
        End If
    End If
End Function

Private Function GetHTML_Web() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||fffd||fffd||131||fffd|
    On Error GoTo ErrorHandler
    With CreateObject("WINHTTP.WINHTTPREQUEST.5.1")
        .Open "GET", mstrURL_Web, False
        .Send
        mstrHTML_Web = .responseText
        GetHTML_Web = True
    End With
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetHTML_Web") = True Then Resume Next
End Function

Private Function GetHTML_Name() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||6eac||fffd||431||fffd||fffd||fffd||fffd||fffd||fffd||1b5||fffd|h1|fffd||fffd||1e9|
    Dim astrSplitH1() As String
    Dim astrSplit() As String
    Dim I As Long
    Dim J As Long
    astrSplitH1 = Split(mstrHTML_Web, maDT(15))    ' "<h1"
    For I = 1 To UBound(astrSplitH1)
        J = J + 1
        astrSplit = Split(astrSplitH1(I), maDT(16))
        mstrHTML_Name = mstrHTML_Name & maDT(15) & astrSplit(0) & maDT(16)  ' "/h1>"
    Next
    GetHTML_Name = (J > 0)
End Function

Private Function GetName_BaoBei() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim oLabel_Web As Object
    On Error GoTo ErrorHandler
    With CreateObject("HTMLFILE")
        .body.innerHTML = mstrHTML_Name
        Set oLabel_Web = .All.tags("" & maDT(17) & "")  ' "H1"
    End With
    If Not (oLabel_Web Is Nothing) Then mstrName_BaoBei = oLabel_Web(oLabel_Web.length - 1).innerTEXT
    GetName_BaoBei = (Len(mstrName_BaoBei) > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetName_BaoBei") = True Then Resume Next
End Function

Private Function GetHTML_Type() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||375||fffd|HTML
    Dim astrSplitUL() As String
    Dim astrSplit() As String
    Dim I As Long
    Dim J As Long
    astrSplitUL = Split(mstrHTML_Web, maDT(18))    ' "<ul"
    For I = 1 To UBound(astrSplitUL)
        astrSplit = Split(astrSplitUL(I), maDT(19))    ' "/ul>"
        If InStr(1, astrSplit(0), maDT(23), vbTextCompare) > 0 Then
            J = J + 1
            mstrHTML_Type = mstrHTML_Type & maDT(18) & astrSplit(0) & maDT(19)
        End If
    Next
    GetHTML_Type = (J > 0)
End Function

Private Function GetData_Type() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||37a||163||fffd||fffd||fffd||4e6||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim vntData_value As Variant
    Dim oUL As Object
    Dim oLI As Object
    Dim avntGroup() As String
    Dim L As Long
    Dim I As Long
    Dim J As Long
    On Error GoTo ErrorHandler
    With CreateObject("HTMLFILE")
        .body.innerHTML = mstrHTML_Type
        Set oUL = .All.tags("" & maDT(20) & "")    ' "UL"
    End With
    For L = 0 To oUL.length - 1
        vntData_value = oUL(L).getAttribute(maDT(21))   ' "data-property"
        If TypeName(vntData_value) = "String" Then
            J = 0
            mlngCount_Arr_Type = mlngCount_Arr_Type + 1
            Set oLI = oUL(L).All.tags("" & maDT(22) & "")   ' "LI"
            ReDim avntGroup(1 To 2, 1 To 100)
            For I = 0 To oLI.length - 1
                vntData_value = oLI(I).getAttribute(maDT(23))   ' "data-value"
                If TypeName(vntData_value) = "String" Then
                    J = J + 1
                    avntGroup(1, J) = vntData_value
                    avntGroup(2, J) = oLI(I).outerText
                End If
            Next
            If J > 0 Then
                ReDim Preserve avntGroup(1 To 2, 1 To J)
                mavntArr_Type(mlngCount_Arr_Type) = avntGroup
            Else
                mlngCount_Arr_Type = mlngCount_Arr_Type - 1
            End If
        End If
    Next
    GetData_Type = (mlngCount_Arr_Type > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetData_Type") = True Then Resume Next
End Function

Private Function GetJSON_TypeID() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221|JSON|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37a||fffd|or|fffd||37a||fffd||fffd||fffd||3e3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim astrSplit() As String
    astrSplit = Split(mstrHTML_Web, maDT(31))    ' }}}
    astrSplit = Split(astrSplit(0), maDT(32))    ' skuMap":
    If UBound(astrSplit) > 0 Then
        mstrJSON_TypeID = astrSplit(1)
        GetJSON_TypeID = True
    End If
End Function

Private Function GetJSON_PriceID() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221|JSON|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6f8||63b31||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim astrSplit() As String
    On Error GoTo ErrorHandler
    astrSplit = Split(mstrHTML_Web, maDT(24))   ' "http://mdskip.taobao.com/core/initItemDetail.htm?"
    If UBound(astrSplit) > 0 Then
        mstrURL_Price = astrSplit(1)
        mstrURL_Price = maDT(24) & Split(mstrURL_Price, maDT(30))(0)    ' ';
        With CreateObject("WINHTTP.WINHTTPREQUEST.5.1")
            .Open "GET", mstrURL_Price, False
            .SetRequestHeader maDT(1), maDT(2)
            .SetRequestHeader maDT(25), mstrURL_Web    ' "Referer"
            .Send
            mstrJSON_PriceID = .responseText
            GetJSON_PriceID = True
        End With
    End If
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetJSON_PriceID") = True Then Resume Next
End Function

Private Sub GetType_BaoBei()
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||3f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||b5||fffd||fffd||fffd||3e3||fffd||fffd||776||fffd||fffd||fffd||3a7|1-6
    Dim lngI() As Long
    Dim I1 As Long
    Dim I2 As Long
    Dim I3 As Long
    Dim I4 As Long
    Dim I5 As Long
    Dim I6 As Long
    ReDim lngI(1 To mlngCount_Arr_Type)
    For I1 = 1 To UBound(mavntArr_Type(1), 2)
        lngI(1) = I1
        If mlngCount_Arr_Type > 1 Then
            For I2 = 1 To UBound(mavntArr_Type(2), 2)
                lngI(2) = I2
                If mlngCount_Arr_Type > 2 Then
                    For I3 = 1 To UBound(mavntArr_Type(3), 2)
                        lngI(3) = I3
                        If mlngCount_Arr_Type > 3 Then
                            For I4 = 1 To UBound(mavntArr_Type(4), 2)
                                lngI(4) = I4
                                If mlngCount_Arr_Type > 4 Then
                                    For I5 = 1 To UBound(mavntArr_Type(5), 2)
                                        lngI(5) = I5
                                        If mlngCount_Arr_Type > 5 Then
                                            For I6 = 1 To UBound(mavntArr_Type(6), 2)
                                                lngI(6) = I6
                                                Call GetType_BaoBei_Input(lngI)
                                            Next
                                        Else
                                            Call GetType_BaoBei_Input(lngI)
                                        End If
                                    Next
                                Else
                                    Call GetType_BaoBei_Input(lngI)
                                End If
                            Next
                        Else
                            Call GetType_BaoBei_Input(lngI)
                        End If
                    Next
                Else
                    Call GetType_BaoBei_Input(lngI)
                End If
            Next
        Else
            Call GetType_BaoBei_Input(lngI)
        End If
    Next
End Sub

Private Sub GetType_BaoBei_Input(lngI() As Long)
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||275||fffd||fffd||fffd||3e3||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||fffd||674||fffd||fffd||fffd||3e3||fffd||36c||2b1||fffd||fffd||3f1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim I As Long
    mlngCount_Type = mlngCount_Type + 1
    For I = 1 To mlngCount_Arr_Type
        mvntAttributes(2, mlngCount_Type) = mvntAttributes(2, mlngCount_Type) & "-" & mavntArr_Type(I)(2, lngI(I))
        mvntAttributes(3, mlngCount_Type) = mvntAttributes(3, mlngCount_Type) & maDT(33) & mavntArr_Type(I)(1, lngI(I))
    Next
    mvntAttributes(3, mlngCount_Type) = maDT(28) & mvntAttributes(3, mlngCount_Type) & maDT(34)
End Sub

Private Sub KeyToID()
''''|fffd||fffd||fffd||723||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||fffd||5ea||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim vntTemp As Variant
    Dim I As Long
    On Error GoTo ErrorHandler
    With CreateObject("ScriptControl")
        .Language = "javascript"
        .AddCode maDT(3) & mstrJSON_TypeID & maDT(26)
        For I = 1 To mlngCount_Type
            vntTemp = .Eval(maDT(27) & mvntAttributes(3, I) & maDT(5))
            If TypeName(vntTemp) = "String" Then
                mvntAttributes(3, I) = maDT(28) & .Eval(maDT(27) & mvntAttributes(3, I) & maDT(29)) & maDT(28)
            End If
        Next
    End With
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    If ExcelHomeErrorHandler("KeyToID") = True Then Resume Next
End Sub

Private Sub GetPrice_BaoBei()
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||fffd||770||fffd||fffd||fffd||fffd||6f8||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd|JSON|fffd||fffd||fffd||fffd||46f||fffd||fffd||4e6||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||221||fffd||fffd||fffd||6f8||fffd|
    Dim vntTemp As Variant
    Dim I As Long
    Dim J As Long
    On Error GoTo ErrorHandler
    With CreateObject("ScriptControl")
        .Language = "javascript"
        .AddCode maDT(3) & mstrJSON_PriceID
        For I = 1 To mlngCount_Type
            vntTemp = .Eval(maDT(4) & mvntAttributes(3, I) & maDT(5))
            If TypeName(vntTemp) = "String" Then
                vntTemp = .Eval(maDT(4) & mvntAttributes(3, I) & maDT(6))
                If TypeName(vntTemp) = "String" Then
                    mvntAttributes(1, I) = .Eval(maDT(4) & mvntAttributes(3, I) & maDT(7))
                Else
                    mvntAttributes(1, I) = .Eval(maDT(4) & mvntAttributes(3, I) & maDT(5) & maDT(8))
                End If
                J = J + 1
                mvntAttributes(1, J) = mvntAttributes(1, I)
                mvntAttributes(2, J) = mvntAttributes(2, I)
                If Left(mvntAttributes(2, I), 1) = "-" And Len(mvntAttributes(2, I)) > 0 Then
                    mvntAttributes(2, I) = Mid(mvntAttributes(2, I), 2)
                End If
                mvntAttributes(3, J) = mstrURL_Web & Chr$(28) & mstrURL_Price & Chr$(28) & mvntAttributes(3, I)
            End If
        Next
        mlngCount_Type = J
    End With
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    If ExcelHomeErrorHandler("GetPrice_BaoBei") = True Then Resume Next
End Sub

Private Sub GetPrice_BaoBei_def()
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||fffd||770||fffd||fffd||fffd||fffd||6f8||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd|JSON|fffd||fffd||fffd||fffd||46f||fffd||fffd||4e6||fffd||fffd||fffd||37a||172||fffd||fffd||fffd||fffd||fffd||221||fffd||fffd||fffd||6f8||fffd|
    Dim vntTemp As Variant
    On Error GoTo ErrorHandler
    With CreateObject("ScriptControl")
        .Language = "javascript"
        .AddCode maDT(3) & mstrJSON_PriceID
        vntTemp = .Eval(maDT(9))
        If TypeName(vntTemp) = "String" Then
            vntTemp = .Eval(maDT(9) & maDT(8))
            If TypeName(vntTemp) = "String" Then
                mvntAttributes(1, 1) = vntTemp
            Else
                mvntAttributes(1, 1) = .Eval(maDT(10))
            End If
            mlngCount_Type = 1
            mvntAttributes(2, 1) = "-"
            mvntAttributes(3, 1) = mstrURL_Web & Chr$(28) & mstrURL_Price
        End If
    End With
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    If ExcelHomeErrorHandler("GetPrice_BaoBei_def") = True Then Resume Next
End Sub

Public Property Get ClassID() As Long
    ClassID = 2    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Property

Public Property Get ClassTags() As Variant
    ClassTags = maDT ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1e9|
End Property

Public Property Get LinkTG(strURL As String) As String
    If Len(maDT(0)) Then    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||fffd||2b1|
        LinkTG = GetLinkLocation(Me.ClassID, strURL, maDT(0))    ''''|fffd||fffd||fffd||630||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||4f5||fffd||fffd||fffd||5b7|
    Else
        LinkTG = strURL    ''''|fffd||fffd||fffd||fffd||52d|URL
    End If
End Property

Attribute VB_Name = "Vip"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'---------------------------------------------------------------------------------------
' (c) Copyright 1999-2029 ExcelHome.Net, All Rights Reserved
' E-Mail    : tech@ExcelHome.net
' Homepage  : http://tech.excelhome.net
'---------------------------------------------------------------------------------------
' Module    : Vip
' Author    : HHAAMM
' Date      : 2014/12/11
' Purpose   : |fffd||fffd||221||3a8||1b7||fffd||fffd||fffd||fffd||fffd||fffd||1b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37a||17c||6f8||fffd|
' Version   : 1.0.0
'---------------------------------------------------------------------------------------

Option Explicit

Private maDT() As String
Private mvntAttributes As Variant
Private mstrURL_Web As String
Private mstrHTML_Web As String
Private mstrName_BaoBei As String
Private mstrPrice_BaoBei As String

Private Sub Class_Initialize()
    If gblnUSER_FROM_CAB Then    ''''|fffd||fffd||fffd||221||fffd||fffd|CAB(XML)|fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||435||13d||6b5||fffd||2b1||5b5|
        LoadClassTagNames Me.ClassID, maDT    ''''|fffd||fffd||fffd||631||fffd||1e9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Else
        ReDim maDT(0 To gintUSER_TAG_COUNT)
        maDT(1) = "?"
        maDT(2) = "pib_title_detail"
        maDT(3) = "</p>"
        maDT(4) = ">"
        maDT(5) = "<em>"
        maDT(6) = "</em>"
        maDT(7) = "<li"
        maDT(8) = "data-size-name"
        maDT(9) = "/li>"
        maDT(10) = "LI"
        maDT(11) = "SPAN"
    End If
End Sub

Public Function GetBaoBeiAttributes(strURL As String, strName As String, vntAttributes As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strURL=|fffd||3f8||fffd||fffd||3a8||1b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b7|
'    maDT(1) = "?"
    mstrURL_Web = Split(strURL, maDT(1))(0)
    If GetHTML_Web = True Then
        If GetNamePrice_BaoBei = True Then
            strName = mstrName_BaoBei
            If GetPyte_BaoBei = False Then
                ReDim vntAttributes(1 To 1, 1 To 3)
                vntAttributes(1, 1) = mstrPrice_BaoBei
                vntAttributes(1, 2) = "-"
                vntAttributes(1, 3) = mstrURL_Web
            Else
                vntAttributes = ArrayTranspose(mvntAttributes)
            End If
            GetBaoBeiAttributes = True
        End If
    End If
End Function

Public Function GetBaoBePrice(strPriceKey As String, vntReturned As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strPriceKey=|fffd||6f8||fffd||63c||fffd||fffd||fffd|
    On Error GoTo ErrorHandler
    mstrURL_Web = strPriceKey
    If GetHTML_Web = True Then
        If GetNamePrice_BaoBei = True Then vntReturned = mstrPrice_BaoBei
    End If
    GetBaoBePrice = (Val(vntReturned) > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    vntReturned = "Err Number: " & Err.Number & vbTab & "Err Description: " & Err.Description
End Function

Private Function GetHTML_Web() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||fffd||fffd||131||fffd|
    On Error GoTo ErrorHandler
    With CreateObject("WINHTTP.WINHTTPREQUEST.5.1")
        .Open "GET", mstrURL_Web, False
        .Send
        mstrHTML_Web = .responseText
        GetHTML_Web = True
    End With
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetHTML_Web") = True Then Resume Next
End Function

Private Function GetNamePrice_BaoBei() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1a1||fffd||fffd||6f8||618f4||2f4||fffd||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||1a1||fffd||fffd||6f8||fffd||fffd||fffd||fffd||fffd||fffd||fffd||523||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim astrSplit_1() As String
    Dim astrSplit_2() As String
    '    maDT(2) = "pib_title_detail"
    '    maDT(3) = "</p>"
    '    maDT(4) = ">"
    '    maDT(5) = "<em>"
    '    maDT(6) = "</em>"
    astrSplit_1 = Split(mstrHTML_Web, maDT(2))
    If UBound(astrSplit_1) > 0 Then
        astrSplit_2 = Split(astrSplit_1(1), maDT(3))
        astrSplit_1 = Split(astrSplit_2(0), maDT(4))
        If UBound(astrSplit_1) > 0 Then mstrName_BaoBei = astrSplit_1(1)
    End If
    If UBound(astrSplit_2) > 0 Then
        astrSplit_1 = Split(astrSplit_2(1), maDT(5))
        If UBound(astrSplit_1) > 0 Then
            astrSplit_2 = Split(astrSplit_1(1), maDT(6))
            mstrPrice_BaoBei = astrSplit_2(0)
        End If
    End If
    GetNamePrice_BaoBei = ((Len(mstrName_BaoBei) > 0) And (Len(mstrPrice_BaoBei) > 0))
End Function

Private Function GetPyte_BaoBei() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim oLI_Web As Object
    Dim oSPAN_Web As Object
    Dim astrSplit_1() As String
    Dim astrSplit_2() As String
    Dim strLI_HTML As String
    Dim I As Long
    Dim J As Long
    On Error GoTo ErrorHandler
    '    maDT(7) = "<li"
    '    maDT(8) = "data-size-name"
    '    maDT(9) = "/li>"
    astrSplit_1 = Split(mstrHTML_Web, maDT(7))
    For I = 1 To UBound(astrSplit_1)
        If InStr(1, astrSplit_1(I), maDT(8), vbTextCompare) > 0 Then
            J = J + 1
            astrSplit_2 = Split(astrSplit_1(I), maDT(9))
            strLI_HTML = strLI_HTML & maDT(7) & astrSplit_2(0) & maDT(9)
        End If
    Next
    If J = 0 Then Exit Function
    '    maDT(10) = "LI"
    '    maDT(11) = "SPAN"
    With CreateObject("HTMLFILE")
        .body.innerHTML = strLI_HTML
        Set oLI_Web = .All.tags("" & maDT(10) & "")
    End With
    If Not (oLI_Web Is Nothing) Then
        ReDim mvntAttributes(1 To 3, 1 To J)
        J = 0
        With oLI_Web
            For I = 0 To oLI_Web.length - 1
                Set oSPAN_Web = oLI_Web(I).All.tags("" & maDT(11) & "")
                If Not (oSPAN_Web Is Nothing) Then
                    J = J + 1
                    mvntAttributes(1, J) = mstrPrice_BaoBei
                    mvntAttributes(2, J) = oSPAN_Web(0).innerTEXT
                    mvntAttributes(3, J) = mstrURL_Web
                End If
            Next
        End With
        ReDim Preserve mvntAttributes(1 To 3, 1 To J)
        GetPyte_BaoBei = (J > 0)
    End If
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetPyte_BaoBei") = True Then Resume Next
End Function

Public Property Get ClassID() As Long
    ClassID = 8    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Property

Public Property Get ClassTags() As Variant
    ClassTags = maDT ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1e9|
End Property

Public Property Get LinkTG(strURL As String) As String
    If Len(maDT(0)) Then    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||fffd||2b1|
        LinkTG = GetLinkLocation(Me.ClassID, strURL, maDT(0))    ''''|fffd||fffd||fffd||630||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||4f5||fffd||fffd||fffd||5b7|
    Else
        LinkTG = strURL    ''''|fffd||fffd||fffd||fffd||52d|URL
    End If
End Property

Attribute VB_Name = "Yhd"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'---------------------------------------------------------------------------------------
' (c) Copyright 1999-2029 ExcelHome.Net, All Rights Reserved
' E-Mail    : tech@ExcelHome.net
' Homepage  : http://tech.excelhome.net
'---------------------------------------------------------------------------------------
' Module    : Yhd
' Author    : HHAAMM
' Date      : 2014/12/16
' Purpose   : |fffd||fffd||221||4bb||fffd||175||fffd||fffd||fffd||fffd||fffd||1b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37a||17c||6f8||fffd|
' Version   : 1.0.0
'---------------------------------------------------------------------------------------

Option Explicit

Private maDT() As String
Private mstrURL_Web As String
Private mstrHTML_Web As String
Private mstrHTML_Name As String
Private mstrName_BaoBei As String
Private mstrPrice_BaoBei As String
Private mstrType_BaoBei As String

Private Sub Class_Initialize()
    If gblnUSER_FROM_CAB Then    ''''|fffd||fffd||fffd||221||fffd||fffd|CAB(XML)|fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||435||13d||6b5||fffd||2b1||5b5|
        LoadClassTagNames Me.ClassID, maDT    ''''|fffd||fffd||fffd||631||fffd||1e9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Else
        ReDim maDT(0 To gintUSER_TAG_COUNT)
        maDT(1) = "?"
        maDT(2) = "<h1"
        maDT(3) = "/h1>"
        maDT(4) = "H1"
        maDT(5) = "|fffd||6f8||fffd| |fffd||fffd|"
        maDT(6) = "1|fffd||175||fffd|"
        maDT(7) = "defaultColor ="
        maDT(8) = ";"
        maDT(9) = "defaultSize ="
    End If
End Sub

Public Function GetBaoBeiAttributes(strURL As String, strName As String, vntAttributes As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strURL=|fffd||3f8||fffd||fffd||4bb||fffd||175||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b7|
'    maDT(1) = "?"
    mstrURL_Web = Split(strURL, "?")(0)
    If GetHTML_Web = True Then
        If GetHTML_Name = True Then
            If GetName_BaoBei = True Then
                If GetPrice_BaoBei = True Then
                    Call GetType_BaoBei
                    If Len(mstrType_BaoBei) = 0 Then mstrType_BaoBei = "-"
                    strName = mstrName_BaoBei
                    ReDim vntAttributes(1 To 1, 1 To 3)
                    vntAttributes(1, 1) = mstrPrice_BaoBei
                    vntAttributes(1, 2) = mstrType_BaoBei
                    vntAttributes(1, 3) = mstrURL_Web
                    GetBaoBeiAttributes = True
                End If
            End If
        End If
    End If
End Function

Public Function GetBaoBePrice(strPriceKey As String, vntReturned As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strPriceKey=|fffd||6f8||fffd||63c||fffd||fffd||fffd|
    On Error GoTo ErrorHandler
    mstrURL_Web = strPriceKey
    If GetHTML_Web = True Then
        If GetPrice_BaoBei = True Then
            vntReturned = mstrPrice_BaoBei
            GetBaoBePrice = (Val(vntReturned) > 0)
        End If
    End If
    On Error GoTo 0
    Exit Function
ErrorHandler:
    vntReturned = "Err Number: " & Err.Number & vbTab & "Err Description: " & Err.Description
End Function

Private Function GetHTML_Web() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||fffd||fffd||131||fffd|
    On Error GoTo ErrorHandler
    With CreateObject("WINHTTP.WINHTTPREQUEST.5.1")
        .Open "GET", mstrURL_Web, False
        .Send
        mstrHTML_Web = .responseText
        GetHTML_Web = True
    End With
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetHTML_Web") = True Then Resume Next
End Function

Private Function GetHTML_Name() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||6eac||fffd||431||fffd||fffd||fffd||fffd||fffd||fffd||1b5||fffd|h1|fffd||fffd||1e9|
    Dim astrSplit_1() As String
    Dim astrSplit_2() As String
    Dim I As Long
    Dim J As Long
    '    maDT(2) = "<h1"
    '    maDT(3) = "/h1>"
    astrSplit_1 = Split(mstrHTML_Web, maDT(2))
    For I = 1 To UBound(astrSplit_1)
        J = J + 1
        astrSplit_2 = Split(astrSplit_1(I), maDT(3))
        mstrHTML_Name = mstrHTML_Name & maDT(2) & astrSplit_2(0) & maDT(3)
    Next
    GetHTML_Name = (J > 0)
End Function

Private Function GetName_BaoBei() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim oLabel_Web As Object
    On Error GoTo ErrorHandler
    '    maDT(4) = "H1"
    With CreateObject("HTMLFILE")
        .body.innerHTML = mstrHTML_Name
        Set oLabel_Web = .All.tags("" & maDT(4) & "")    ''''|fffd||fffd||221||fffd||fffd||4b3|H1|52a||fffd||fffd|
    End With
    If Not (oLabel_Web Is Nothing) Then mstrName_BaoBei = oLabel_Web(0).innerTEXT    ''''|fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd|
    GetName_BaoBei = (Len(mstrName_BaoBei) > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetName_BaoBei") = True Then Resume Next
End Function

Private Function GetPrice_BaoBei() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||fffd|
    Dim astrSplit() As String
    '    maDT(5) = "|fffd||6f8||fffd| |fffd||fffd|"
    '    maDT(6) = "1|fffd||175||fffd|"
    astrSplit = Split(mstrHTML_Web, maDT(5))
    If UBound(astrSplit) > 0 Then
        astrSplit = Split(astrSplit(1), maDT(6))
        mstrPrice_BaoBei = Val(astrSplit(0))
        GetPrice_BaoBei = True
    End If
End Function

Private Sub GetType_BaoBei()
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim astrSplit() As String
    '    maDT(7) = "defaultColor ="
    '    maDT(8) = ";"
    '    maDT(9) = "defaultSize ="
    astrSplit = Split(mstrHTML_Web, maDT(7))
    If UBound(astrSplit) > 0 Then
        astrSplit = Split(astrSplit(1), maDT(8))
        mstrType_BaoBei = astrSplit(0)
    End If
    astrSplit = Split(mstrHTML_Web, maDT(9))
    If UBound(astrSplit) > 0 Then
        astrSplit = Split(astrSplit(1), maDT(8))
        mstrType_BaoBei = mstrType_BaoBei & "-" & astrSplit(0)
    End If
    mstrType_BaoBei = Replace$(mstrType_BaoBei, Chr$(34), Empty)
End Sub

Public Property Get ClassID() As Long
    ClassID = 7    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Property

Public Property Get ClassTags() As Variant
    ClassTags = maDT ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1e9|
End Property

Public Property Get LinkTG(strURL As String) As String
    If Len(maDT(0)) Then    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||fffd||2b1|
        LinkTG = GetLinkLocation(Me.ClassID, strURL, maDT(0))    ''''|fffd||fffd||fffd||630||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||4f5||fffd||fffd||fffd||5b7|
    Else
        LinkTG = strURL    ''''|fffd||fffd||fffd||fffd||52d|URL
    End If
End Property

Attribute VB_Name = "dangdang"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'---------------------------------------------------------------------------------------
' (c) Copyright 1999-2029 ExcelHome.Net, All Rights Reserved
' E-Mail    : tech@ExcelHome.net
' Homepage  : http://tech.excelhome.net
'---------------------------------------------------------------------------------------
' Module    : dangdang
' Author    : HHAAMM
' Date      : 2014/12/16
' Purpose   : |fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37a||17c||6f8||fffd|
' Version   : 1.0.0
'---------------------------------------------------------------------------------------

Option Explicit

Private mvntAttributes As Variant
Private maDT() As String
Private mstrURL_Web As String
Private mstrHTML_Web As String
Private mstrHTML_Name As String
Private mstrHTML_Price As String
Private mstrJSON As String
Private mstrName_BaoBei As String
Private mstrPrice_BaoBei As String
Private mstrID_Type As String

Private Sub Class_Initialize()
    If gblnUSER_FROM_CAB Then    ''''|fffd||fffd||fffd||221||fffd||fffd|CAB(XML)|fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||435||13d||6b5||fffd||2b1||5b5|
        LoadClassTagNames Me.ClassID, maDT    ''''|fffd||fffd||fffd||631||fffd||1e9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Else
        ReDim maDT(0 To gintUSER_TAG_COUNT)
        maDT(1) = "#"
        maDT(2) = "<h1"
        maDT(3) = "/h1>"
        maDT(4) = "H1"
        maDT(5) = "var prdJson ="
        maDT(6) = "}]}"
        maDT(7) = "HHAAMM = "
        maDT(8) = "}]};"
        maDT(9) = "HHAAMM.prd['"
        maDT(10) = "']"
        maDT(11) = "'].itemid"
        maDT(12) = "'].proid_price"
        maDT(13) = "'].salePrice"
        maDT(14) = "'].OriginalPrice"
        maDT(15) = "'].color"
        maDT(16) = "'].size"
        maDT(17) = "d_price"
        maDT(18) = "<b"
        maDT(19) = "/b>"
        maDT(20) = "B"
    End If
End Sub

Public Function GetBaoBeiAttributes(strURL As String, strName As String, vntAttributes As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strURL=|fffd||3f8||fffd||135||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b7|
'    maDT(1) = "#"
    mstrURL_Web = Split(strURL, "#")(0)
    If GetHTML_Web = True Then
        If GetHTML_Name = True Then
            If GetName_BaoBei = True Then
                strName = mstrName_BaoBei
                If GetJSON = True Then
                    ReDim mvntAttributes(1 To 3, 1 To 600)
                    If GetParameters_BaoBei = True Then
                        vntAttributes = ArrayTranspose(mvntAttributes)
                        GetBaoBeiAttributes = True
                    End If
                Else
                    If GetHTML_Price = True Then
                        If GetPrice_BaoBei = True Then
                            ReDim vntAttributes(1 To 1, 1 To 3)
                            vntAttributes(1, 1) = mstrPrice_BaoBei
                            vntAttributes(1, 2) = "-"
                            vntAttributes(1, 3) = mstrURL_Web
                            GetBaoBeiAttributes = True
                        End If
                    End If
                End If
            End If
        End If
    End If
End Function

Public Function GetBaoBePrice(strPriceKey As String, vntReturned As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strPriceKey=|fffd||6f8||fffd||63c||fffd||fffd||fffd|
    Dim astrSplit() As String
    On Error GoTo ErrorHandler
    astrSplit = Split(strPriceKey, Chr$(28))
    If UBound(astrSplit) > 0 Then
        mstrURL_Web = astrSplit(0)
        mstrID_Type = astrSplit(1)
        If GetHTML_Web = True Then
            If GetHTML_Name = True Then
                If GetName_BaoBei = True Then
                    If GetJSON = True Then
                        If GetParameters_BaoBei(True) = True Then vntReturned = mstrPrice_BaoBei
                    End If
                End If
            End If
        End If
    Else
        mstrURL_Web = strPriceKey
        If GetHTML_Web = True Then
            If GetHTML_Price = True Then
                If GetPrice_BaoBei = True Then vntReturned = mstrPrice_BaoBei
            End If
        End If
    End If
    GetBaoBePrice = (Val(vntReturned) > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    vntReturned = "Err Number: " & Err.Number & vbTab & "Err Description: " & Err.Description
End Function

Private Function GetHTML_Web() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||fffd||fffd||131||fffd|
    On Error GoTo ErrorHandler
    With CreateObject("WINHTTP.WINHTTPREQUEST.5.1")
        .Open "GET", mstrURL_Web, False
        .Send
        mstrHTML_Web = .responseText
        GetHTML_Web = True
    End With
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetHTML_Web") = True Then Resume Next
End Function

Private Function GetHTML_Name() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||6eac||fffd||431||fffd||fffd||fffd||fffd||fffd||fffd||1b5||fffd|h1|fffd||fffd||1e9|
    Dim astrSplit_1() As String
    Dim astrSplit_2() As String
    Dim I As Long
    Dim J As Long
    '    maDT(2) = "<h1"
    '    maDT(3) = "/h1>"
    astrSplit_1 = Split(mstrHTML_Web, maDT(2))
    For I = 1 To UBound(astrSplit_1)
        J = J + 1
        astrSplit_2 = Split(astrSplit_1(I), maDT(3))
        mstrHTML_Name = mstrHTML_Name & maDT(2) & astrSplit_2(0) & maDT(3)
    Next
    GetHTML_Name = (J > 0)
End Function

Private Function GetName_BaoBei() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||6b5||fffd||4bb||fffd||fffd|h1|52a||fffd||fffd||fffd||fffd|)
    Dim oLabel_Web As Object
    On Error GoTo ErrorHandler
    '    maDT(4) = "H1"
    With CreateObject("HTMLFILE")
        .body.innerHTML = mstrHTML_Name
        Set oLabel_Web = .All.tags("" & maDT(4) & "")    ''''|fffd||fffd||221||fffd||fffd||4b3|H1|52a||fffd||fffd|
    End With
    If Not (oLabel_Web Is Nothing) Then mstrName_BaoBei = oLabel_Web(0).innerTEXT    ''''|fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd|
    GetName_BaoBei = (Len(mstrName_BaoBei) > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetName_BaoBei") = True Then Resume Next
End Function

Private Function GetJSON() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||431||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|JSON
    Dim astrSplit() As String
    '    maDT(5) = "var prdJson ="
    '    maDT(6) = "}]}"
    '    maDT(7) = "HHAAMM = "
    '    maDT(8) = "}]};"
    astrSplit = Split(mstrHTML_Web, maDT(5))
    If UBound(astrSplit) > 0 Then
        astrSplit = Split(astrSplit(1), maDT(6))
        mstrJSON = maDT(7) & astrSplit(0) & maDT(8)
    End If
    GetJSON = Len(mstrJSON) > 16
End Function

Private Function GetParameters_BaoBei(Optional blnPrice As Boolean = False) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd|(|fffd||fffd||26b||fffd||fffd||fffd||37a||161||fffd||fffd||fffd||221||fffd||6f8||fffd|JSON|fffd||fffd|URL)
    Dim vntType_BaoBei As Variant    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||363||fffd||4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||43a||736||fffd||fffd||fffd||37a||fffd|
    Dim I As Long
    Dim J As Long
    On Error GoTo ErrorHandler
    '    maDT(9) = "HHAAMM.prd['"
    '    maDT(10) = "']"
    '    maDT(11) = "'].itemid"
    '    maDT(12) = "'].proid_price"
    '    maDT(13) = "'].salePrice"
    '    maDT(14) = "'].OriginalPrice"
    '    maDT(15) = "'].color"
    '    maDT(16) = "'].size"
    With CreateObject("ScriptControl")
        .Language = "javascript"
        .AddCode mstrJSON
        If blnPrice = True Then
            For I = 0 To 600    ''''|fffd||776||fffd||fffd||fffd||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|600|fffd||fffd||fffd||fffd||fffd||fffd||5b5|
                vntType_BaoBei = .Eval(maDT(9) & I & maDT(10))
                If TypeName(vntType_BaoBei) = "String" Then
                    If mstrID_Type = .Eval(maDT(9) & I & maDT(11)) Then
                        mstrPrice_BaoBei = .Eval(maDT(9) & I & maDT(12))
                        If Val(mstrPrice_BaoBei) = 0 Then mstrPrice_BaoBei = .Eval(maDT(9) & I & maDT(13))
                        If Val(mstrPrice_BaoBei) = 0 Then mstrPrice_BaoBei = .Eval(maDT(9) & I & maDT(14))
                        GetParameters_BaoBei = True
                        Exit Function
                    End If
                ElseIf TypeName(vntType_BaoBei) = "Empty" Then
                    Exit For
                End If
            Next
        Else
            For I = 0 To 600    ''''|fffd||776||fffd||fffd||fffd||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|600|fffd||fffd||fffd||fffd||fffd||fffd||5b5|
                vntType_BaoBei = .Eval(maDT(9) & I & maDT(10))
                If TypeName(vntType_BaoBei) = "String" Then
                    J = J + 1
                    mvntAttributes(1, J) = .Eval(maDT(9) & I & maDT(12))
                    If Val(mvntAttributes(1, J)) = 0 Then mvntAttributes(1, J) = .Eval(maDT(9) & I & maDT(13))
                    If Val(mvntAttributes(1, J)) = 0 Then mvntAttributes(1, J) = .Eval(maDT(9) & I & maDT(14))
                    mvntAttributes(2, J) = .Eval(maDT(9) & I & maDT(15))
                    mvntAttributes(2, J) = mvntAttributes(2, J) & "-" & .Eval(maDT(9) & I & maDT(16))
                    mvntAttributes(3, J) = mstrURL_Web & Chr$(28) & .Eval(maDT(9) & I & maDT(11))
                ElseIf TypeName(vntType_BaoBei) = "Empty" Then
                    Exit For
                End If
            Next
        End If
    End With
    If J > 0 And blnPrice = False Then
        ReDim Preserve mvntAttributes(1 To 3, 1 To J)
        GetParameters_BaoBei = True
    End If
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetParameters_BaoBei") = True Then Resume Next
End Function

''''GetJSON = False

Private Function GetHTML_Price() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||6eac||fffd||431||fffd||fffd||fffd||fffd||6f8||fffd||fffd|span|fffd||fffd||1e9|
    Dim astrSplit() As String
    Dim astrSplit_1() As String
    Dim astrSplit_2() As String
    Dim G As Long
    '    maDT(17) = "d_price"
    '    maDT(18) = "<b"
    '    maDT(19) = "/b>"
    astrSplit = Split(mstrHTML_Web, maDT(17))
    If UBound(astrSplit) > 0 Then
        astrSplit_1 = Split(astrSplit(0), maDT(18))
        G = UBound(astrSplit_1)
        astrSplit_2 = Split(astrSplit(1), maDT(19))
        If G > 0 And UBound(astrSplit_2) > 0 Then
            astrSplit = Split(astrSplit(1), maDT(19))
            mstrHTML_Price = maDT(18) & astrSplit_1(G) & maDT(17) & astrSplit_2(0) & maDT(19)
            GetHTML_Price = (Len(mstrHTML_Price) > 6)
        End If
    End If
End Function

Private Function GetPrice_BaoBei() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||fffd|
    Dim oLabel_Web As Object
    On Error GoTo ErrorHandler
    '    maDT(20) = "B"
    With CreateObject("HTMLFILE")
        .body.innerHTML = mstrHTML_Price
        Set oLabel_Web = .All.tags("" & maDT(20) & "")
    End With
    If Not (oLabel_Web Is Nothing) Then
        mstrPrice_BaoBei = oLabel_Web(0).innerTEXT
        If Asc(Left(mstrPrice_BaoBei, 1)) < 0 Then mstrPrice_BaoBei = Mid(mstrPrice_BaoBei, 2)
        mstrPrice_BaoBei = Val(mstrPrice_BaoBei)
    End If
    GetPrice_BaoBei = (Val(mstrPrice_BaoBei) > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetPrice_BaoBei") = True Then Resume Next
End Function

Public Property Get ClassID() As Long
    ClassID = 6    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Property

Public Property Get ClassTags() As Variant
    ClassTags = maDT ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1e9|
End Property

Public Property Get LinkTG(strURL As String) As String
    If Len(maDT(0)) Then    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||fffd||2b1|
        LinkTG = GetLinkLocation(Me.ClassID, strURL, maDT(0))    ''''|fffd||fffd||fffd||630||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||4f5||fffd||fffd||fffd||5b7|
    Else
        LinkTG = strURL    ''''|fffd||fffd||fffd||fffd||52d|URL
    End If
End Property

Attribute VB_Name = "frmInsidePrice"
Attribute VB_Base = "0{C2B1B999-6F36-4D25-A5B1-CCFE1974B278}{1FAC470D-B0AB-4EA8-9138-3CCBEAE9E895}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'--------------------------------------------------------------------------------------
' (c) Copyright 1999-2029 ExcelHome.Net, All Rights Reserved
' E-Mail     : tech@ExcelHome.net
' Homepage   : http://tech.excelhome.net
'--------------------------------------------------------------------------------------
' Filename   : *.xlam
' Module     : frmInsidePrice
' Purpose    : |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb||fffd||fffd||fffd||fffd|
' Author     : shourou
' Reviser    : x
' Date       : 2015/3/15 06:52
' Version    : 1.0.0
' Procedures : x
'---------------------------------------------------------------------------------------

Option Explicit

Private mblnVBA As Boolean

Private Sub txtIndPrice_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
''''|fffd||fffd||5fd||fffd||fffd||fffd||330||fffd||fffd||fffd||fffd||bc||fffd|
    Dim vntIndPrice As Variant
    vntIndPrice = Val(txtIndPrice.Text)    ''''|fffd||fffd||fffd||635||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||3bb|
    Select Case KeyAscii
    Case 43, 61   ''''+
        KeyAscii = 0
        vntIndPrice = vntIndPrice + 1 ''''|fffd||fffd||fffd||fffd|
        txtIndPrice.Text = vntIndPrice
    Case 45   ''''-
        KeyAscii = 0
        vntIndPrice = vntIndPrice - 1 ''''|fffd||77c||fffd|
        If vntIndPrice < 0 Then vntIndPrice = 0
        txtIndPrice.Text = vntIndPrice
    End Select
End Sub

Private Sub UserForm_Initialize()
    Dim vntIndPrice As Variant
    vntIndPrice = frmTaskManager.InsidePrice    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb|
    With Me
        .Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb| - " & gstrUSER_MSG_TITLE
        .lblPrompt.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||fffd||2b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f0||fffd||6f8||fffd||421||fffd||6bb||fffd||fffd||7f5||fffd||fffd||6b8||fffd||fffd||fffd||5b5||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2be||fffd||fffd||3e2||fffd||fffd|"
        .lblIndPrice.ControlTipText = "|fffd||fffd||fffd||fffd|'+(=)'|fffd||fffd||fffd||fffd|'-'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|"
        With .txtIndPrice
            If Len(vntIndPrice) > 0 Then
                .Text = vntIndPrice   ''''|fffd||fffd||2be||fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||3bb|
                .SelStart = 0
                .SelLength = Len(vntIndPrice)
            End If
        End With
    End With
End Sub

Private Sub cmdEnter_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
''''|fffd||fffd||fffd||fffd||fffd||237||fffd||fffd||fffd||fffd||165|(|fffd||fffd||1e9||fffd||fffd|)|fffd||fffd||fffd||1b6||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||bc||fffd|
    LabelSetHighlight cmdEnter
End Sub

Private Sub cmdCancel_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
''''|fffd||fffd||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||165|(|fffd||fffd||1e9||fffd||fffd|)|fffd||fffd||fffd||1b6||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||bc||fffd|
    LabelSetHighlight cmdCancel
End Sub

Private Sub cmdEnter_Click()
''''|fffd||fffd||fffd||fffd||237||fffd||fffd||fffd||fffd||165|
    Dim vntIndPrice As Variant
    Dim blnOK As Boolean
    vntIndPrice = txtIndPrice.Value    ''''|fffd||fffd||fffd||fffd||fffd||fffd||3bb|
    If Len(vntIndPrice) = 0 Then
        blnOK = True
    Else    ''''|fffd||1ff||fffd|
        If IsNumeric(vntIndPrice) = True Then
            vntIndPrice = Round(Val(vntIndPrice), 2)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||3bb||421||fffd||fffd|
            blnOK = (vntIndPrice > 0)
        End If
    End If
    If Not blnOK Then
        MsgBox "|fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||5a1||fffd|", vbExclamation, gstrUSER_MSG_TITLE
    Else
        frmTaskManager.InsidePrice = vntIndPrice   ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb|,
        mblnVBA = True
        Unload Me    ''''|436||fffd||634||fffd||fffd||fffd|
        mblnVBA = False
    End If
End Sub

Private Sub cmdExit_Click()
''''|fffd||2f3||fffd|,|5a7||fffd||fffd|[ESC]|fffd||fffd|
    Unload Me
End Sub

Private Sub cmdCancel_Click()
''''|221||fffd||fffd|
    Unload Me
End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
''''|fffd||fffd||fffd||fffd||6b4||fffd||fffd||fffd||fffd||fffd||fffd||1b6||fffd||2b1||221||fffd||fffd||fffd||fffd||1e9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2be|
    LabelsNotHighlight Me
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
''''|fffd||fffd||fffd||fffd||fffd||2f3||fffd||fffd||bc||fffd|
    If mblnVBA = False Then frmTaskManager.InsidePrice = False  ''''|fffd||fffd||fffd||3aa|False
End Sub

Attribute VB_Name = "frmNewTask"
Attribute VB_Base = "0{6E4B26C6-D3D4-493C-A592-F630DE39D7B0}{1E37CA84-BF24-419D-B6E8-6BDA5674C3CA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'--------------------------------------------------------------------------------------
' (c) Copyright 1999-2029 ExcelHome.Net, All Rights Reserved
' E-Mail     : tech@ExcelHome.net
' Homepage   : http://tech.excelhome.net
'--------------------------------------------------------------------------------------
' Filename   : *.xlam
' Module     : frmNewTask
' Purpose    : |fffd||bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' Author     : shourou
' Reviser    : x
' Date       : 2015/3/15 06:53
' Version    : 1.0.0
' Procedures : x
'---------------------------------------------------------------------------------------

Option Explicit

Private Sub UserForm_Initialize()
''''|fffd||fffd||fffd||fffd||fffd||2bc||fffd||fffd||fffd||bc||fffd|
    With Me
        .Caption = "|fffd||bd||fffd||fffd||fffd||fffd||fffd| - " & gstrUSER_MSG_TITLE
        .lblURL.Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||7f4||4fc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||573||fffd||fffd||4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b3||fffd||fffd||5b7|(U):" & Chr$(28)
        .lblURL.ControlTipText = "|fffd||fffd||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd||4b2||fffd||421||fffd||fffd||165||fffd||fffd||fffd||7f0||fffd||fffd||fffd|<Ctrl+V>|fffd||fffd||3fc||fffd||fffd||fffd||fffd||fffd||573||fffd||fffd||fffd||fffd||5b7|"
        With .txtURL
            .ShowDropButtonWhen = fmShowDropButtonWhenAlways
            .DropButtonStyle = fmDropButtonStyleEllipsis
            .Text = "about:blank"
            .SelStart = 0
            .SelLength = 100
            .ControlTipText = "|fffd||fffd||5b7||fffd||fffd|"
        End With
        .cmdGo.ControlTipText = "|5ea||fffd||fffd|"
        .lblAttribute.Caption = Space$(6) & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(P)"
    End With
    SetButtonsVisible False    ''''|fffd||fffd||fffd||f0||fffd||165|(|fffd||fffd||1e9||fffd||63c||fffd|)|fffd||1f7||fffd||fffd||fffd||fffd|
End Sub

Private Sub txtURL_DropButtonClick()
''''|fffd||fffd||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd||4b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||165||2b1|,|573||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim myDateObject As New MSForms.DataObject
    Dim strURL As String
    On Error GoTo ErrorHandler
    With myDateObject
        .GetFromClipboard    ''''|fffd||4fc||fffd||fffd||fffd||fffd||5e34||fffd||fffd||fffd||fffd||fffd||775||fffd|DataObject
        If .GetFormat(1) = True Then strURL = myDateObject.GetText(1)    ''''|fffd||fffd|DateObject|fffd||437||fffd||fffd||fffd||fffd||131||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||5b7|)
    End With
    If Len(strURL) > 0 Then txtURL.Text = strURL
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    If ExcelHomeErrorHandler("Private Sub txtURL_DropButtonClick") = True Then Resume Next
End Sub

Private Sub txtURL_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
''''|fffd||fffd||4bb||fffd||3bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2fd||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||63c||fffd||fffd||1b5||fffd||fffd||fffd||4bb||fffd||fffd||fffd||63c||fffd|,|fffd||fffd||535||fffd||4bb||fffd||fffd||fffd||63c||fffd||fffd||fffd||fffd||fffd|KeyDown|fffd||bc||fffd|,|fffd||fffd||5fd|Enter|fffd||bc||fffd|
    If KeyCode = 13 Then cmdGo_Click    ''''|fffd||fffd||fffd||fffd||fffd||bb||633||fffd||fffd||fffd||2b1||5b4||fffd||fffd||5ea||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub cmdEnter_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
''''|fffd||fffd||fffd||fffd||fffd||237||fffd||fffd||fffd||fffd||165|(|fffd||fffd||1e9||fffd||fffd|)|fffd||fffd||fffd||1b6||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||bc||fffd|
    LabelSetHighlight cmdEnter
End Sub

Private Sub cmdCancel_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
''''|fffd||fffd||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||165|(|fffd||fffd||1e9||fffd||fffd|)|fffd||fffd||fffd||1b6||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||bc||fffd|
    LabelSetHighlight cmdCancel
End Sub

Private Sub cmdGo_Click()
''''|fffd||fffd||fffd||fffd||5ea||fffd||fffd|
    Dim objEBClass As Object
    Dim vntAttributes As Variant
    Dim strURL As String
    Dim strName As String
    Dim intURLType As Integer
    Dim blnOK As Boolean
    On Error GoTo ErrorHandler
    strURL = txtURL.Text    ''''|fffd||fffd||1f0||fffd||fffd||5b7|
    intURLType = GetURLType(txtURL.Text)    ''''|fffd||fffd||fffd||635||fffd||1f0||fffd||fffd||5b7||fffd||fffd||fffd||fffd||fffd||fffd|
    If intURLType > 0 Then
        Set objEBClass = GetEBObject(intURLType)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||4e6||fffd||135||fffd||fffd||336||fffd||fffd||fffd|
        blnOK = objEBClass.GetBaoBeiAttributes(strURL, strName, vntAttributes)    ''''|fffd||fffd||fffd||631||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Set objEBClass = Nothing    ''''|fffd||377||176||fffd||fffd||fffd||fffd||fffd||fffd|
        If Not blnOK Then
            intURLType = 0    ''''|fffd||fffd||2bc||fffd||fffd||fffd||fffd||fffd||fffd|
            vntAttributes = Empty    ''''|fffd||fffd||2bc||fffd||fffd||fffd||fffd||fffd||fffd|
        End If
    End If
    SetBaoBeiAttributes strName, vntAttributes    ''''|fffd||fffd||fffd||f1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    SetBaoBeiStyle intURLType    ''''|fffd||fffd||fffd||f1||fffd||fffd||fffd||fffd||fffd||fffd||1bf||fffd||fffd||fffd||fffd||2bd|
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    If ExcelHomeErrorHandler("Private Sub cmdGo_Click") = True Then Resume Next
End Sub

Private Sub cmdEnter_Click()
''''|fffd||fffd||fffd||fffd||237||fffd||fffd||fffd||fffd||165|
    Dim objEBClass As Object
    Dim vntListItems As Variant
    Dim vntOutput As Variant
    Dim strURL As String
    Dim intURLType As Integer
    Dim lngListIndex As Long
    strURL = txtURL.Text    ''''|fffd||fffd||1f0||fffd||fffd||5b7|
    If Len(strURL) > 255 Then
        MsgBox "|fffd||fffd||5b7||fffd||fffd||fffd||fffd||fffd||fffd|255|fffd||fffd||fffd||5b7||fffd||fffd||fffd||fffd||6a1||fffd|", vbExclamation, gstrUSER_MSG_TITLE
        Exit Sub
    End If
    ReDim vntOutput(1 To 5)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    With lstAttribute
        lngListIndex = .ListIndex    ''''|fffd||fffd||461||fffd||fffd||13f|
        vntOutput(3) = .Text    ''''|fffd||63c||fffd||fffd||fffd|
        vntListItems = .List    ''''|fffd||fffd||fffd||fffd||22b||fffd||fffd||fffd||431||fffd||fffd||fffd||fffd||fffd||13f|
    End With
    intURLType = GetURLType(strURL)     ''''|fffd||fffd||fffd||635||fffd||1f0||fffd||fffd||5b7||fffd||fffd||fffd||fffd||fffd||fffd|
    Set objEBClass = GetEBObject(intURLType)    ''''|fffd||fffd||fffd||635||fffd||fffd||336||fffd||fffd||fffd|
    vntOutput(1) = objEBClass.LinkTG(strURL)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||5b7|
    vntOutput(2) = lblName.Caption     ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If intURLType = 4 Then    ''''|fffd||fffd||fffd||fffd||477|
        ''''|fffd||fffd||3b4||fffd||733||279||fffd||fffd||fffd||fffd||631||fffd||fffd||fffd||fffd||6f8||fffd||2b1|,|fffd||fffd||fffd||3aa||fffd||636||fffd||5b5|
        If objEBClass.GetBaoBePrice(CStr(vntOutput(3)), vntOutput(4)) = False Then vntOutput(4) = glngUSER_NO_PRICE
    Else
        vntOutput(4) = Val(vntListItems(lngListIndex, 0))    ''''|fffd||fffd||fffd||fffd||fffd||6f8||fffd|
    End If
    vntOutput(5) = chkSetFocus.Value    ''''|fffd||1f7||fffd||fffd||635||fffd||fffd||5e2|
    Unload Me    ''''|436||fffd||634||fffd||fffd||fffd|
    CreateBaoBeiTask vntOutput    ''''|434||fffd||fffd||fffd||fffd||4e6||fffd||139||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Sub

Private Sub cmdExit_Click()
''''|fffd||2f3||fffd|,|5a7||fffd||fffd|[ESC]|fffd||fffd|
    Unload Me
End Sub

Private Sub cmdCancel_Click()
''''|221||fffd||fffd|
    Unload Me
End Sub

Private Sub imgLogo1_Click()
''''|fffd||fffd||fffd||fffd||fffd||bfab5||fffd||fffd||fffd||fffd||fffd||5b7|
    WebNavigate 1
End Sub

Private Sub imgLogo2_Click()
''''|fffd||fffd||fffd||fffd||fffd||bfab5||fffd||fffd||fffd||fffd||fffd||5b7|
    WebNavigate 2
End Sub

Private Sub imgLogo3_Click()
''''|fffd||fffd||fffd||fffd||fffd||bfab5||fffd||fffd||fffd||fffd||fffd||5b7|
    WebNavigate 3
End Sub

Private Sub imgLogo4_Click()
''''|fffd||fffd||fffd||fffd||fffd||bfab5||fffd||fffd||fffd||fffd||fffd||5b7|
    WebNavigate 4
End Sub

Private Sub imgLogo5_Click()
''''|fffd||fffd||fffd||fffd||fffd||bfab5||fffd||fffd||fffd||fffd||fffd||5b7|
    WebNavigate 5
End Sub

Private Sub imgLogo6_Click()
''''|fffd||fffd||fffd||fffd||fffd||bfab5||fffd||fffd||fffd||fffd||fffd||5b7|
    WebNavigate 6
End Sub

Private Sub imgLogo7_Click()
''''|fffd||fffd||fffd||fffd||fffd||bfab5||fffd||fffd||fffd||fffd||fffd||5b7|
    WebNavigate 7
End Sub

Private Sub imgLogo8_Click()
''''|fffd||fffd||fffd||fffd||fffd||bfab5||fffd||fffd||fffd||fffd||fffd||5b7|
    WebNavigate 8
End Sub

Private Sub imgLogo9_Click()
''''|fffd||fffd||fffd||fffd||fffd||bfab5||fffd||fffd||fffd||fffd||fffd||5b7|
    WebNavigate 9
End Sub

Private Sub imgLogo10_Click()
''''|fffd||fffd||fffd||fffd||fffd||bfab5||fffd||fffd||fffd||fffd||fffd||5b7|
    WebNavigate 10
End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
''''|fffd||fffd||fffd||fffd||6b4||fffd||fffd||fffd||fffd||fffd||fffd||1b6||fffd||2b1||221||fffd||fffd||fffd||fffd||1e9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2be|
    LabelsNotHighlight Me
End Sub

Private Sub SetBaoBeiAttributes(strName As String, vntAttributes As Variant)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||f1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim blnHasAttr As Boolean
    blnHasAttr = IsArray(vntAttributes)    ''''|fffd||1f7||fffd||fffd||fffd||6b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    With lstAttribute
        .Clear    ''''|fffd||fffd||571||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd||fffd||fffd|
        If blnHasAttr = True Then
            .List = vntAttributes    ''''|fffd||fffd||fffd||fffd||fffd||431||fffd||fffd||fffd||13f|
            .ListIndex = 0    ''''|12c||fffd||fffd||fffd||fffd||fffd||1f5||fffd||4bb||fffd||fffd|
        End If
    End With
    lblName.Caption = IIf(blnHasAttr, strName, " |fffd||fffd||fffd||fffd||fffd||fffd|")    ''''|fffd||fffd||fffd||f1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    SetButtonsVisible blnHasAttr    ''''|fffd||fffd||fffd||f0||fffd||165||fffd||1f7||fffd||fffd||fffd||fffd|
End Sub

Private Sub SetBaoBeiStyle(intURLType As Integer)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||f1||fffd||fffd||fffd||fffd||fffd||fffd||1bf||fffd||fffd||fffd||fffd||2bd|(|1f0||fffd||fffd||26b|+|fffd||fffd||fffd||fffd||26b|)
''''|fffd||fffd||fffd||fffd|:intURLType:=URL|fffd||fffd||5b7||fffd||fffd||fffd||fffd|
    Dim imgLogo As MSForms.Label
    Set imgLogo = Me.Controls("imgLogo" & intURLType)
    With lblName
        Select Case intURLType
        Case 0    ''''|3b4||5aa|URL
            .ForeColor = RGB(0, 0, 0)    ''''|1f0||fffd||fffd||26b|
            .BackColor = RGB(255, 192, 0)   ''''|fffd||fffd||fffd||fffd||26b|
        Case 1    ''''|fffd||531||fffd|
            .ForeColor = RGB(255, 255, 255)    ''''|1f0||fffd||fffd||26b|
            .BackColor = RGB(255, 68, 0)    ''''|fffd||fffd||fffd||fffd||26b|
        Case 2    ''''|fffd||fffd||e8|
            .ForeColor = RGB(255, 255, 255)    ''''|1f0||fffd||fffd||26b|
            .BackColor = RGB(196, 0, 0)    ''''|fffd||fffd||fffd||fffd||26b|
        Case 3    ''''|fffd||fffd||fffd||fffd|
            .ForeColor = RGB(255, 255, 255)    ''''|1f0||fffd||fffd||26b|
            .BackColor = RGB(228, 57, 60)    ''''|fffd||fffd||fffd||fffd||26b|
        Case 4    ''''|fffd||fffd||fffd||fffd||477|
            .ForeColor = RGB(255, 255, 255)    ''''|1f0||fffd||fffd||26b|
            .BackColor = RGB(84, 92, 100)    ''''|fffd||fffd||fffd||fffd||26b|
        Case 5    ''''|fffd||fffd||fffd||fffd||fffd||5f9||fffd|
            .ForeColor = RGB(255, 255, 255)    ''''|1f0||fffd||fffd||26b|
            .BackColor = RGB(53, 146, 226)   ''''|fffd||fffd||fffd||fffd||26b|
        Case 6    ''''|fffd||fffd||fffd||fffd|
            .ForeColor = RGB(255, 255, 255)    ''''|1f0||fffd||fffd||26b|
            .BackColor = RGB(255, 40, 50)    ''''|fffd||fffd||fffd||fffd||26b|
        Case 7    ''''|4bb||fffd||175||fffd|
            .ForeColor = RGB(255, 255, 255)    ''''|1f0||fffd||fffd||26b|
            .BackColor = RGB(255, 60, 60)     ''''|fffd||fffd||fffd||fffd||26b|
        Case 8    ''''|3a8||1b7||fffd||fffd|
            .ForeColor = RGB(255, 255, 255)    ''''|1f0||fffd||fffd||26b|
            .BackColor = RGB(241, 5, 130)    ''''|fffd||fffd||fffd||fffd||26b|
        Case 9    ''''|fffd||fffd||fffd||fffd|
            .ForeColor = RGB(255, 255, 255)    ''''|1f0||fffd||fffd||26b|
            .BackColor = RGB(204, 0, 0)    ''''|fffd||fffd||fffd||fffd||26b|
        Case 10    ''''|fffd||fffd||478|
            .ForeColor = RGB(255, 255, 255)    ''''|1f0||fffd||fffd||26b|
            .BackColor = RGB(255, 140, 0)    ''''|fffd||fffd||fffd||fffd||26b|
        End Select
    End With
    '''' lblLogo.Visible = CBool(intURLType)    ''''|fffd||fffd||fffd||fffd||fffd||1f7||fffd||27c||fffd|
    lblLogo.Picture = imgLogo.Picture    ''''|fffd||fffd||fffd||fffd||37c||1ac|
End Sub

Private Sub SetButtonsVisible(blnEnter As Boolean)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||f0||fffd||165||fffd||fffd||fffd||fffd||2be||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:blnEnter:=|fffd||1f7||fffd||fffd||fffd||fffd|
    With Me
        .cmdEnter.Visible = blnEnter    ''''|237||fffd||3f0||fffd||165|
        .lblEnter.Visible = Not blnEnter    ''''|237||fffd||3f1||fffd||1e9||fffd||fffd|
        .chkSetFocus.Enabled = blnEnter    ''''|fffd||635||fffd||fffd||5e2|
        .chkSetFocus.Value = blnEnter    ''''|12c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||635||fffd||fffd||5e2|
    End With
End Sub

Private Sub WebNavigate(intURLIndex As Integer)
''''|fffd||fffd||5ea||fffd||fffd||5b8||fffd||fffd||fffd||135||fffd||fffd||fffd||fffd||fffd||5b7|
    Dim strURL As String
    Select Case intURLIndex
    Case 1    ''''|fffd||531||fffd||fffd||fffd|
        strURL = "http://www.taobao.com/"
    Case 2    ''''|fffd||fffd||e8||fffd||fffd|
        strURL = "http://www.tmall.com/"
    Case 3    ''''|fffd||fffd||fffd||fffd||fffd||fffd|
        strURL = "http://www.jd.com/"
    Case 4    ''''|fffd||fffd||fffd||fffd||477||fffd||fffd|
        strURL = "http://www.amazon.cn/"
    Case 5    ''''|fffd||fffd||fffd||fffd||fffd||5f9||fffd|
        strURL = "http://www.suning.com/"
    Case 6    ''''|fffd||fffd||fffd||fffd||fffd||fffd|
        strURL = "http://1212.dangdang.com/"
    Case 7    ''''1|fffd||175||fffd|
        strURL = "http://www.yhd.com/"
    Case 8    ''''|3a8||1b7||fffd||fffd|
        strURL = "http://www.vip.com/"
    Case 9    ''''|fffd||fffd||fffd||fffd|
        strURL = "http://www.gome.com.cn/"
    Case 10    ''''|fffd||fffd||478|
        strURL = "http://www.yixun.com/"
    End Select
    FileOpen strURL    ''''|fffd||fffd||5b8||fffd||fffd||fffd||fffd||5b7|
End Sub
Attribute VB_Name = "frmRegister"
Attribute VB_Base = "0{3A762BEB-DB48-43EF-8933-F9D912E9E4AB}{252E013C-C42B-404F-88E4-6A96F9FD9633}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'--------------------------------------------------------------------------------------
' (c) Copyright 1999-2029 ExcelHome.Net, All Rights Reserved
' E-Mail     : tech@ExcelHome.net
' Homepage   : http://tech.excelhome.net
'--------------------------------------------------------------------------------------
' Filename   : *.xlam
' Module     : frmRegister
' Purpose    : |fffd||fffd||fffd||5e2||fffd||1d30||fffd||fffd|
' Author     : shourou
' Reviser    : x
' Date       : 2015/3/15 06:54
' Version    : 1.0.0
' Procedures : x
'---------------------------------------------------------------------------------------

Option Explicit

Private Sub UserForm_Initialize()
''''|fffd||fffd||fffd||fffd||fffd||2bc||fffd||fffd||fffd||bc||fffd|
    Dim strCaption As String
    On Error GoTo ErrorHandler
    strCaption = "|5e2||fffd||fffd||fffd||fffd||3e2|"
    With Me
        .txtSerialNumber.Text = GetDriveSerialNumber    ''''|3f5||373||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd||fffd||43a||fffd|
        .txtSystem.Text = GetSystemInformation    ''''|3f5||373||fffd||fffd||3e2|
        .txtMailAddress.Text = RegGetSetting(2)    ''''|fffd||2bc||fffd||fffd||fffd||5b7|
        If IsRegistered = False Then    ''''|3b4||5e2||fffd||fffd||2b1|
            strCaption = "|5e2||fffd||fffd|" & gstrUSER_MSG_TITLE
            .txtMailAddress.Enabled = True
            .cmdEnter.Visible = True
        End If
        .Caption = strCaption
    End With
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    If ExcelHomeErrorHandler("Private Sub UserForm_Initialize") = True Then Resume Next
End Sub

Private Sub cmdEnter_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
''''|fffd||fffd||fffd||fffd||fffd||237||fffd||fffd||fffd||fffd||165|(|fffd||fffd||1e9||fffd||fffd|)|fffd||fffd||fffd||1b6||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||bc||fffd|
    LabelSetHighlight cmdEnter
End Sub

Private Sub cmdCancel_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
''''|fffd||fffd||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||165|(|fffd||fffd||1e9||fffd||fffd|)|fffd||fffd||fffd||1b6||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||bc||fffd|
    LabelSetHighlight cmdCancel
End Sub

Private Sub cmdEnter_Click()
''''|5e2||fffd||fffd|
    Dim astrSettings(1 To 3) As String
    Dim L As Long
    With Me
        astrSettings(1) = .txtSerialNumber.Text    ''''|fffd||7fc||fffd||fffd||fffd||fffd||43a||fffd|
        astrSettings(2) = .txtMailAddress.Text    ''''|fffd||2bc||fffd||fffd||fffd||5b7|
        astrSettings(3) = Format$(Date, "yyyy/mm/dd")   ''''|5e2||fffd||fffd||fffd||fffd||fffd||fffd|
    End With
    If IsMailAddress(astrSettings(2)) = False Then
        MsgBox "|fffd||2bc||fffd||fffd||fffd||5b7||fffd||fffd||fffd||fffd|", vbExclamation, gstrUSER_MSG_TITLE
    Else
        For L = 1 To 3
            RegSaveSetting L, astrSettings(L)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd||fffd|
        Next
        Unload Me
        UploadTrackDate True    ''''|fffd||3f4||fffd||fffd||fb||fffd||fffd||fffd||3e2|
    End If
End Sub

Private Sub cmdCancel_Click()
    Unload Me
End Sub

Private Sub cmdExit_Click()
''''|fffd||2f3||fffd|,|5a7||fffd||fffd|ESC|fffd||fffd|
    Unload Me
End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
''''|fffd||fffd||fffd||fffd||6b4||fffd||fffd||fffd||fffd||fffd||fffd||1b6||fffd||2b1||221||fffd||fffd||fffd||fffd||1e9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2be|
    LabelsNotHighlight Me
End Sub

Private Function GetDriveSerialNumber() As Long
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd|Win|3f5||373||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd||fffd||43a||fffd|
    Dim FSO As New FileSystemObject
    Dim strSystemRoot As String
    strSystemRoot = Environ$("SYSTEMDRIVE")
    GetDriveSerialNumber = FSO.Drives(strSystemRoot).SerialNumber
End Function

Private Function GetSystemInformation() As String
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||635||fffd||1f0||3f5||373||fffd||fffd||fffd||fffd||fffd||fffd||3e2|
    Dim astrOS(1 To 2) As String
    astrOS(1) = Replace$(Application.OperatingSystem, "Windows", "Win", , , vbTextCompare)
    astrOS(2) = "Office " & Application.Version
    GetSystemInformation = Join(astrOS, Chr$(28))
End Function

Private Function IsMailAddress(ByVal strAddress As String) As Boolean
''''|fffd||fffd||fffd||fffd|:|fffd||436||fffd||fffd||1f7||fffd||3aa||fffd||3f7||fffd||fffd||fffd||fffd||2bc||fffd||fffd||fffd||5b7|,|fffd||fffd||fffd||fffd||3aa|3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd||36c||2b1||fffd||fffd||fffd||fffd|@|fffd||fffd|.|fffd||fffd||fffd||5b7||fffd||fffd||fffd||fffd||fffd||3aa||fffd||3f7||fffd||fffd||2bc||fffd||fffd||fffd||5b7|
''''|fffd||fffd||fffd||fffd|:strAddress:=|fffd||fffd||fffd||fffd||5a4||fffd||fffd||fffd||2bc||fffd||fffd||fffd||5b7|
    If Len(strAddress) > 3 Then
        IsMailAddress = (InStr(strAddress, Chr$(64)) > 0 And InStr(strAddress, Chr$(46)) > 0)
    End If
End Function
Attribute VB_Name = "frmTaskManager"
Attribute VB_Base = "0{E741A546-9AE0-4006-8C12-8EDE18FACACF}{19C14209-3E55-41DC-9904-4CAEEA097FE6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'--------------------------------------------------------------------------------------
' (c) Copyright 1999-2029 ExcelHome.Net, All Rights Reserved
' E-Mail     : tech@ExcelHome.net
' Homepage   : http://tech.excelhome.net
'--------------------------------------------------------------------------------------
' Filename   : *.xlam
' Module     : frmTaskManager
' Purpose    : |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' Author     : shourou
' Reviser    : x
' Date       : 2015/3/15 06:54
' Version    : 1.0.0
' Procedures : x
'---------------------------------------------------------------------------------------

Option Explicit

Public InsidePrice As Variant
Private mintTabIndex As Integer
Private mblnVBA As Boolean

Private Sub UserForm_Initialize()
''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||bc||fffd|
    Dim vntListItems As Variant
    With Me
        .Caption = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| - " & gstrUSER_MSG_TITLE
        '''' .lblTasks.Caption = Space$(2) & "|fffd||fffd||fffd||fffd||fffd||fffd|(T):" & Space$(6) & "|fffd||635||fffd||fffd||5e2|" & Space$(4) & "|fffd||fffd||fffd||fffd||2b1||fffd||fffd|" & Space$(22) & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
        If LoadTasksToArray(vntListItems, True) Then
            .chkAll.Enabled = True    ''''|fffd||fffd||461||fffd||fffd||fffd||fffd||fffd|
            .lstTasks.Enabled = True    ''''|fffd||431||fffd||fffd||fffd||fffd||fffd||fffd|
            .lstTasks.List = vntListItems    ''''|fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd||fffd||fffd||fffd||fffd|
        End If
    End With
    tabRemove_Click
End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
''''|fffd||fffd||fffd||fffd||6b4||fffd||fffd||fffd||fffd||fffd||fffd||1b6||fffd||2b1||221||fffd||fffd||fffd||fffd||1e9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2be|
    LabelsNotHighlight Me
End Sub

Private Sub cmdRemove_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
''''|fffd||fffd||fffd||fffd||fffd||27e||fffd||fffd||fffd||fffd||165|(|fffd||fffd||1e9||fffd||fffd|)|fffd||fffd||fffd||1b6||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||bc||fffd|
    LabelSetHighlight cmdRemove
End Sub

Private Sub cmdSave_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
''''|fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||fffd||fffd||165|(|fffd||fffd||1e9||fffd||fffd|)|fffd||fffd||fffd||1b6||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||bc||fffd|
    LabelSetHighlight cmdSave
End Sub

Private Sub cmdCancel_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
''''|fffd||fffd||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||165|(|fffd||fffd||1e9||fffd||fffd|)|fffd||fffd||fffd||1b6||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||bc||fffd|
    LabelSetHighlight cmdCancel
End Sub

Private Sub tabRemove_Click()
''''|fffd||fffd||fffd||fffd||27e||fffd||fffd||fffd||fffd||fffd||fffd||2b1|
    mintTabIndex = 1
    SetControlsAppearance mintTabIndex
End Sub

Private Sub tabSetFocus_Click()
''''|fffd||fffd||fffd||fffd||fffd||635||fffd||fffd||5e2||2b1|
    mintTabIndex = 2
    SetControlsAppearance mintTabIndex
End Sub

Private Sub tabIndPrice_Click()
''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb||2b1|
    mintTabIndex = 3
    SetControlsAppearance mintTabIndex
End Sub

Private Sub lstTasks_Change()
''''|461||fffd||fffd||fffd||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||3ff||fffd||fffd||fffd||13f||461||fffd||fffd||2b1|
    Dim L As Long
    Dim lngItemsCount As Long
    Dim lngSelectedCount As Long
    If mblnVBA = True Then Exit Sub
    With lstTasks
        lngItemsCount = .ListCount
        For L = 1 To lngItemsCount    ''''|fffd||fffd||fffd||fffd||22b||fffd||fffd||fffd||fffd||13f|
            If .Selected(L - 1) = True Then lngSelectedCount = lngSelectedCount + 1    ''''|3aa||461||fffd||435||138||fffd||461||fffd||fffd||fffd||fffd||fffd|
        Next
    End With
    mblnVBA = True
    With chkAll
        Select Case lngSelectedCount
        Case lngItemsCount    ''''|22b||461|
            .Value = True
        Case 0    ''''|22b||fffd||fffd||461|
            .Value = False
        Case Else    ''''|fffd||fffd||fffd||fffd||461||fffd||fffd|
            .Value = Null
        End Select
    End With
    mblnVBA = False
    SetButtonsVisible mintTabIndex, CBool(Choose(mintTabIndex, CBool(lngSelectedCount), 1, 1) * lngItemsCount)   ''''|fffd||fffd||fffd||f0||fffd||165||fffd||27c||fffd||fffd||fffd|
End Sub

Private Sub lstTasks_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
''''|2eb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb|
    Dim lngListIndex As Long
   On Error GoTo ErrorHandler
    If mintTabIndex = 3 Then
        With lstTasks
            lngListIndex = .ListIndex    ''''|fffd||fffd||1f0||fffd||fffd||13f|
            If lngListIndex > -1 Then
                InsidePrice = .List(lngListIndex, 2)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||3bb|
                frmInsidePrice.Show 1
                If Not StrComp(InsidePrice, "False", vbTextCompare) = 0 Then .List(lngListIndex, 2) = InsidePrice    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb|
            End If
        End With
    End If
   On Error GoTo 0
   Exit Sub
ErrorHandler:
    If ExcelHomeErrorHandler("Private Sub lstTasks_DblClick") = True Then Resume Next
End Sub

Private Sub chkAll_Click()
''''|22b||461|/|22b||fffd||fffd||461|
    Dim L As Long
    Dim blnAll As Boolean
    If mblnVBA = True Then Exit Sub
    blnAll = chkAll.Value
    mblnVBA = True
    With lstTasks
        For L = 1 To .ListCount    ''''|fffd||fffd||fffd||fffd||22b||fffd||fffd||fffd||fffd||13f|
            .Selected(L - 1) = blnAll
        Next
    End With
    mblnVBA = False
    If mintTabIndex = 1 Then SetButtonsVisible 1, blnAll
End Sub

Private Sub cmdRemove_Click()
''''|fffd||fffd||fffd||fffd||27e||fffd||fffd||fffd||fffd||165|
    Dim strSerialNumbers As String
    If GetSelectedTasks(strSerialNumbers) = True Then
        If MsgBox("|fffd||1f7||fffd||27e||fffd||fffd||fffd||fffd||461||fffd||fffd||fffd||fffd|", vbYesNo + vbQuestion, gstrUSER_MSG_TITLE) = vbYes Then
            Unload Me    ''''|436||fffd||634||fffd||fffd||fffd|
            RemoveBaoBeiTasks strSerialNumbers   ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd|
        End If
    End If
End Sub

Private Sub cmdSave_Click()
''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||6c34||165|
    Dim dictIndPrices As Scripting.Dictionary
    Dim strSerialNumbers As String
    Select Case mintTabIndex
    Case 2
        If GetSelectedTasks(strSerialNumbers) = False Then strSerialNumbers = Chr$(28)
        Unload Me    ''''|436||fffd||634||fffd||fffd||fffd|
        ResetBaoBeiFocus strSerialNumbers   ''''|fffd||fffd||fffd||fffd||fffd||635||fffd||fffd||5e2||fffd||131||fffd||fffd||fffd|
    Case 3
        Set dictIndPrices = New Scripting.Dictionary    ''''|fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|
        LoadNewPricesToDictionary dictIndPrices    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|
        Unload Me    ''''|436||fffd||634||fffd||fffd||fffd|
        ResetBaoBeiInsidePrice dictIndPrices    ''''|fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb|
    End Select
End Sub

Private Sub cmdCancel_Click()
''''|221||fffd||fffd|
    Unload Me
End Sub

Private Sub cmdExit_Click()
''''|221||fffd||fffd|,|5a7||fffd||fffd|ESC|fffd||fffd|
    Unload Me
End Sub

Private Sub SetButtonsVisible(intTabIndex As Integer, blnVisible As Boolean)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||f0||fffd||165||fffd||fffd||fffd||fffd||2be||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:blnVisible:=|fffd||1f7||fffd||27c||fffd|
    With Me
        Select Case intTabIndex
        Case 1
            .cmdRemove.Visible = blnVisible    ''''|27e||fffd||fffd||fffd||fffd||165|
            .lblRemove.Visible = Not blnVisible    ''''|27e||fffd||fffd||fffd||fffd||1e9||fffd||fffd|
            .chkAll.Visible = True    ''''|fffd||fffd||461||fffd||fffd||27c||fffd|
            .cmdSave.Visible = False    ''''|fffd||fffd||fffd||6c34||165|
            .lblSave.Visible = False    ''''|fffd||fffd||fffd||fffd||fffd||1e9||fffd||fffd|
        Case 2    ''''|fffd||635||fffd||fffd||5e2|
            .cmdRemove.Visible = False    ''''|27e||fffd||fffd||fffd||fffd||165|
            .lblRemove.Visible = False    ''''|27e||fffd||fffd||fffd||fffd||1e9||fffd||fffd|
            .chkAll.Visible = True    ''''|fffd||fffd||461||fffd||fffd||27c||fffd|
            .cmdSave.Visible = blnVisible    ''''|fffd||fffd||fffd||6c34||165|
            .lblSave.Visible = Not blnVisible    ''''|fffd||fffd||fffd||fffd||fffd||1e9||fffd||fffd|
        Case 3    ''''|fffd||fffd||fffd||fffd||fffd||fffd||3bb|
            .cmdRemove.Visible = False    ''''|27e||fffd||fffd||fffd||fffd||165|
            .lblRemove.Visible = False    ''''|27e||fffd||fffd||fffd||fffd||1e9||fffd||fffd|
            .chkAll.Visible = False    ''''|fffd||fffd||461||fffd||b2eff||27c||fffd|
            .cmdSave.Visible = blnVisible    ''''|fffd||fffd||fffd||6c34||165|
            .lblSave.Visible = Not blnVisible    ''''|fffd||fffd||fffd||fffd||fffd||1e9||fffd||fffd|
        End Select
    End With
End Sub

Private Sub SetControlsAppearance(intTabIndex As Integer)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||ff||63c||fffd||fffd||fffd||fffd|,|fffd||fffd||461||fffd||efe8||fffd||fffd||1e9||fffd||fffd||37b||fffd||fffd||fffd||fffd||2be||427||fffd||fffd|,|fffd||431||fffd||fffd||fffd||fffd||fffd||2bd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:intTabIndex:=|461||fffd||efe8||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim lngActiveColor As Long
    Dim lngDisableColor As Long
    lngActiveColor = RGB(51, 153, 255)    ''''|fffd||fffd||fffd||fffd||26b|
    lngDisableColor = &H8000000F    ''''|fffd||fffd||165||fffd||fffd||fffd||fffd|
    With Me
        Select Case intTabIndex
        Case 1    ''''|27e||fffd||fffd||fffd||fffd||fffd||fffd|
            .capRemove.BackColor = lngActiveColor    ''''|fffd||fffd||fffd||fffd||fffd||fffd||2be|
            .tabRemove.BackColor = lngActiveColor    ''''|fffd||fffd||fffd||fffd||fffd||fffd||2be|
            .capSetFocus.BackColor = lngDisableColor
            .tabSetFocus.BackColor = lngDisableColor
            .capIndPrice.BackColor = lngDisableColor
            .tabIndPrice.BackColor = lngDisableColor
            .lblTasks.Caption = Space$(2) & "|fffd||fffd||fffd||fffd||fffd||fffd|(T):" & Space$(6) & "|fffd||635||fffd||fffd||5e2|" & Space$(4) & "|fffd||fffd||fffd||fffd||2b1||fffd||fffd|" & Space$(22) & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
            .lstTasks.MultiSelect = fmMultiSelectMulti    ''''|fffd||fffd||fffd||fffd||fffd||fffd||461|
            .lstTasks.ColumnWidths = "49.9;49.9;0;102;350"    ''''|fffd||fffd||fffd||fffd||fffd||431||fffd||fffd||fffd||fffd||fffd||43f||fffd||fffd||fffd|
        Case 2    ''''|fffd||635||fffd||fffd||5e2|
            .capRemove.BackColor = lngDisableColor
            .tabRemove.BackColor = lngDisableColor
            .capSetFocus.BackColor = lngActiveColor    ''''|fffd||fffd||fffd||fffd||fffd||fffd||2be|
            .tabSetFocus.BackColor = lngActiveColor    ''''|fffd||fffd||fffd||fffd||fffd||fffd||2be|
            .capIndPrice.BackColor = lngDisableColor
            .tabIndPrice.BackColor = lngDisableColor
            .lblTasks.Caption = Space$(2) & "|fffd||fffd||fffd||fffd||fffd||fffd|(T):" & Space$(6) & "|fffd||635||fffd||fffd||5e2|" & Space$(4) & "|fffd||fffd||fffd||fffd||2b1||fffd||fffd|" & Space$(22) & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
            .lstTasks.MultiSelect = fmMultiSelectMulti    ''''|fffd||fffd||fffd||fffd||fffd||fffd||461|
            .lstTasks.ColumnWidths = "49.9;49.9;0;102;350"
        Case 3    ''''|fffd||fffd||fffd||fffd||fffd||fffd||3bb|
            .capRemove.BackColor = lngDisableColor
            .tabRemove.BackColor = lngDisableColor
            .capSetFocus.BackColor = lngDisableColor
            .tabSetFocus.BackColor = lngDisableColor
            .capIndPrice.BackColor = lngActiveColor    ''''|fffd||fffd||fffd||fffd||fffd||fffd||2be|
            .tabIndPrice.BackColor = lngActiveColor    ''''|fffd||fffd||fffd||fffd||fffd||fffd||2be|
            .lblTasks.Caption = Space$(2) & "|fffd||fffd||fffd||fffd||fffd||fffd|(T):" & Space$(6) & "|fffd||fffd||fffd||fffd||fffd||fffd||3bb|" & Space$(4) & "|fffd||fffd||fffd||fffd||2b1||fffd||fffd|" & Space$(22) & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
            .lstTasks.MultiSelect = fmMultiSelectSingle    ''''|fffd||fffd||461|
            .lstTasks.ColumnWidths = "49.9;0;49.9;102;350"
        End Select
        .lblBorder.BackColor = lngActiveColor
    End With
    InitializeSelected intTabIndex    ''''|fffd||fffd||fffd||fffd||fffd||431||fffd||fffd||fffd||fffd||fffd||13f||fffd||fffd||461||fffd||fffd||5f4||32c|
End Sub

Private Sub InitializeSelected(intTabIndex As Integer)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||2bc||fffd||fffd||fffd||fffd||3ff||fffd||fffd||461||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:intTabIndex:=|461||fffd||efe8||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim R As Long
    Dim L As Long
    Dim blnSetFocus As Boolean
    With lstTasks
        Select Case intTabIndex
        Case 1    ''''|27e||fffd||fffd||fffd||fffd||fffd||fffd|
            chkAll.Value = False    ''''|22b||fffd||fffd||461|
        Case 2    ''''|fffd||635||fffd||fffd||5e2|
            mblnVBA = True
            For R = 1 To .ListCount
                blnSetFocus = Not StrComp(.List(R - 1, 1), "|fffd||fffd|", vbTextCompare)
                If blnSetFocus Then L = L + 1
                .Selected(R - 1) = blnSetFocus   ''''|fffd||635||fffd||fffd||5e2||2b1||461||fffd||fffd||5ae|
            Next
            mblnVBA = False
        End Select
    End With
    lstTasks_Change
End Sub

Private Sub LoadNewPricesToDictionary(dictTasks As Scripting.Dictionary)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||221||fffd||fffd||fffd||ba||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:dictTasks:=|fffd||6d22||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb|
    Dim vntListItems As Variant
    Dim R As Long
    Dim lngListCount As Long
    With lstTasks
        lngListCount = .ListCount
        vntListItems = .List
    End With
    With dictTasks
        For R = 1 To lngListCount    ''''|fffd||fffd||fffd||fffd||22b||fffd||fffd||fffd||fffd||13f|
            .Item(vntListItems(R - 1, 0)) = vntListItems(R - 1, 2)    ''''|fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||3bb|
        Next
    End With
End Sub

Private Function GetSelectedTasks(strSelectedTasks As String) As Boolean
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||461||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:strSelectedTasks:=|fffd||fffd||fffd||fffd||fffd||fffd|","|fffd||fffd||3aa||1f0||fffd||fffd||fffd||7b6||fffd||fffd||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd|
    Dim astrSerialNumbers() As String
    Dim R As Long
    Dim L As Long
    With lstTasks
        For R = 1 To .ListCount    ''''|fffd||fffd||fffd||fffd||22b||fffd||fffd||fffd||fffd||13f|
            If .Selected(R - 1) = True Then
                L = L + 1
                ReDim Preserve astrSerialNumbers(1 To L)
                astrSerialNumbers(L) = .List(R - 1, 0)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            End If
        Next
    End With
    If L > 0 Then
        strSelectedTasks = Chr$(44) & Join(astrSerialNumbers, Chr$(44)) & Chr$(44)
        GetSelectedTasks = True
    End If
End Function

Attribute VB_Name = "gome"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private maDT() As String
Private mstrURL_Web As String
Private mstrHTML_Web As String
Private mstrHTML_Name As String
Private mstrName_BaoBei As String
Private mstrPrice_BaoBei As String

Private Sub Class_Initialize()
    If gblnUSER_FROM_CAB Then    ''''|fffd||fffd||fffd||221||fffd||fffd|CAB(XML)|fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||435||13d||6b5||fffd||2b1||5b5|
        LoadClassTagNames Me.ClassID, maDT    ''''|fffd||fffd||fffd||631||fffd||1e9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Else
        ReDim maDT(0 To gintUSER_TAG_COUNT)
        maDT(1) = "<h1"
        maDT(2) = "/h1>"
        maDT(3) = "h1"
        maDT(4) = "price:"
    End If
End Sub

Public Function GetBaoBeiAttributes(strURL As String, strName As String, vntAttributes As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strURL=|fffd||3f8||fffd||139||fffd||fffd||fffd||fffd||fffd||fffd||7f1||fffd||fffd||fffd||fffd||fffd||5b7|
    mstrURL_Web = strURL
    If GetHTML_Web = True Then
        If GetHTML_Name = True Then
            If GetName_BaoBei = True Then
                If GetPrice_BaoBei = True Then
                    strName = mstrName_BaoBei
                    ReDim vntAttributes(1 To 1, 1 To 3)
                    vntAttributes(1, 1) = mstrPrice_BaoBei
                    vntAttributes(1, 2) = "-"
                    vntAttributes(1, 3) = mstrURL_Web
                    GetBaoBeiAttributes = True
                End If
            End If
        End If
    End If
End Function

Public Function GetBaoBePrice(strPriceKey As String, vntReturned As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strPriceKey=|fffd||6f8||fffd||63c||fffd||fffd||fffd|
    mstrURL_Web = strPriceKey
    If GetHTML_Web = True Then
        If GetPrice_BaoBei = True Then
            vntReturned = mstrPrice_BaoBei
            GetBaoBePrice = True
        End If
    End If
End Function

Private Function GetHTML_Web() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||fffd||fffd||131||fffd|
    On Error GoTo ErrorHandler
    With CreateObject("WINHTTP.WINHTTPREQUEST.5.1")
        .Open "GET", mstrURL_Web, False
        .Send
        mstrHTML_Web = .responseText
        GetHTML_Web = True
    End With
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetHTML_Web") = True Then Resume Next
End Function

Private Function GetHTML_Name() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||6eac||fffd||431||fffd||fffd||fffd||fffd||fffd||fffd||1b5||fffd|h1|fffd||fffd||1e9|
    Dim astrSplit_1() As String
    Dim astrSplit_2() As String
    Dim I As Long
    '    maDT(1) = "<h1"
    '    maDT(2) = "/h1>"
    astrSplit_1 = Split(mstrHTML_Web, maDT(1))
    For I = 1 To UBound(astrSplit_1)
        astrSplit_2 = Split(astrSplit_1(I), maDT(2))
        mstrHTML_Name = mstrHTML_Name & maDT(1) & astrSplit_2(0) & maDT(2)
    Next
    GetHTML_Name = (I > 0)
End Function

Private Function GetName_BaoBei() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim oLabel_Web As Object
    On Error GoTo ErrorHandler
    '    maDT(3) = "h1"
    With CreateObject("HTMLFILE")
        .body.innerHTML = mstrHTML_Name
        Set oLabel_Web = .All.tags("" & maDT(3) & "")
    End With
    If Not (oLabel_Web Is Nothing) Then mstrName_BaoBei = oLabel_Web(0).innerTEXT
    GetName_BaoBei = (Len(mstrName_BaoBei) > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetName_BaoBei") = True Then Resume Next
End Function

Private Function GetPrice_BaoBei() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||fffd|
    Dim astrSplit() As String
    '    maDT(4) = "price:"
    astrSplit = Split(mstrHTML_Web, maDT(4))
    If UBound(astrSplit) > 0 Then
        astrSplit = Split(astrSplit(1), Chr$(44))
        astrSplit(0) = Replace$(astrSplit(0), Chr$(34), Empty)
        mstrPrice_BaoBei = Val(astrSplit(0))
        GetPrice_BaoBei = (Val(mstrPrice_BaoBei) > 0)
    End If
End Function

Public Property Get ClassID() As Long
    ClassID = 9    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Property

Public Property Get ClassTags() As Variant
    ClassTags = maDT ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1e9|
End Property

Public Property Get LinkTG(strURL As String) As String
    If Len(maDT(0)) Then    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||fffd||2b1|
        LinkTG = GetLinkLocation(Me.ClassID, strURL, maDT(0))    ''''|fffd||fffd||fffd||630||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||4f5||fffd||fffd||fffd||5b7|
    Else
        LinkTG = strURL    ''''|fffd||fffd||fffd||fffd||52d|URL
    End If
End Property

Attribute VB_Name = "mdlConst"
'--------------------------------------------------------------------------------------
' (c) Copyright 1999-2029 ExcelHome.Net, All Rights Reserved
' E-Mail     : tech@ExcelHome.net
' Homepage   : http://tech.excelhome.net
'--------------------------------------------------------------------------------------
' Filename   : *.xlam
' Module     : mdlConst
' Purpose    : |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||123||fffd||fffd|
' Author     : shourou
' Reviser    : x
' Date       : 2015/3/15 06:54
' Version    : 1.0.0
' Procedures : x
'---------------------------------------------------------------------------------------

Option Explicit    ''''|fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Option Private Module    ''''|fffd||2cbf||fffd||fffd||fffd||33d||fffd||fffd||fffd|

Public Const gstrUSER_MSG_TITLE As String = "Excel|5f7||fffd||6f1||fffd|"
Public Const gstrUSER_VBA_VERSION As String = "1.2.0"
Public Const gstrUSER_VBA_RELEASE As String = "2015/3/16"

Public Const gintUSER_TAG_COUNT As Integer = 50
Public Const glngUSER_NO_PRICE As Long = 999999999
Public Const gstrUSER_WS_PROTECT As String = "Xl123456#"
Public Const gblnUSER_FROM_CAB As Boolean = True
Attribute VB_Name = "mdlDebug"
'--------------------------------------------------------------------------------------
' (c) Copyright 1999-2029 ExcelHome.Net, All Rights Reserved
' E-Mail     : tech@ExcelHome.net
' Homepage   : http://tech.excelhome.net
'--------------------------------------------------------------------------------------
' Filename   : *.xlam
' Module     : mdlDebug
' Purpose    : |fffd||fffd||fffd||fffd||123||fffd||fffd|
' Author     : shourou
' Reviser    : x
' Date       : 2015/3/15 06:55
' Version    : 1.0.0
' Procedures : x
'---------------------------------------------------------------------------------------

Option Explicit    ''''|fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Option Private Module    ''''|fffd||2cbf||fffd||fffd||fffd||33d||fffd||fffd||fffd|

Private Sub CreateXML()
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd|XML|fffd||fffd||fffd||fffd||fffd||13c||fffd|
    Dim docDOM As MSXML2.DOMDocument
    Dim rotDOM As MSXML2.IXMLDOMElement
    Dim emtDOM As MSXML2.IXMLDOMElement
    Dim nodDOM As MSXML2.IXMLDOMNode
    Dim astrClassNames() As String
    Dim astrItemValues() As String
    Dim strFileName As String
    Dim C As Integer
    Dim I As Integer
    strFileName = GetProfileName    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||b7||fffd||fffd|
    LoadEBNames astrClassNames    ''''|fffd||fffd||fffd||635||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ReDim astrItemValues(1 To gintUSER_TAG_COUNT)    ''''|ff||fffd||fffd||fffd||fffd||fffd||fffd|20|fffd||fffd||fffd||fffd||fffd||fffd|
    For I = 1 To UBound(astrItemValues)
        astrItemValues(I) = "Value" & I
    Next
    Set docDOM = New MSXML2.DOMDocument
    With docDOM
        .resolveExternals = True
        Set nodDOM = .createProcessingInstruction("xml", "version=""1.0""")
        Set nodDOM = .InsertBefore(nodDOM, docDOM.ChildNodes.Item(0))
        Set rotDOM = .createElement("Root")    ''''|fffd||fffd||fffd||fffd||4aa||fffd||6b5||fffd|
        Set .DocumentElement = rotDOM
        rotDOM.setAttribute "xmlns:dt", "urn:schemas-microsoft-com:datatypes"
        For C = 1 To UBound(astrClassNames)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            astrClassNames(C) = UCase$(astrClassNames(C))    ''''|1ff||fffd||1b4||fffd||434|
            Set emtDOM = .createElement(astrClassNames(C))    ''''|fffd||fffd||fffd||fffd||fffd||6b5||fffd|
            rotDOM.appendChild emtDOM    ''''|fffd||fffd||fffd||4fd||6b5||fffd||fffd||fffd||fffd||4f5||fffd||4aa||fffd||6b5||fffd||fffd||fffd|
            For I = 1 To UBound(astrItemValues)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Set nodDOM = .createElement("Item" & I)    ''''|fffd||fffd||fffd||fffd||fffd||6b5||fffd|
                nodDOM.Text = astrItemValues(I)    ''''|fffd||6b5||fffd||5b5|
                emtDOM.appendChild nodDOM    ''''|fffd||fffd||fffd||4fd||6b5||fffd||fffd||fffd||fffd||4f5||fffd||fffd||fffd||4e6||fffd||138||fffd||fffd||6b5||fffd||fffd||fffd|
            Next
        Next
        .Save strFileName
    End With
End Sub

Private Sub DebugPrintEBList()
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ID
    Dim I As Integer
    Dim myClass As Object
    If LoadXMLTagNames = True Then
        For I = 1 To 10
            Set myClass = GetEBObject(I)
            Debug.Print TypeName(myClass), myClass.ClassID
        Next
    End If
End Sub

Private Sub DebugPrintXMLTagList()
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||1e9||5b5|
    Dim astrTags() As String
    Dim I As Integer
    If LoadXMLTagNames = True Then
        For I = 1 To 2
            LoadClassTagNames I, astrTags    ''''|fffd||fffd||fffd||631||fffd||1e9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            Debug.Print Join(astrTags, Chr$(44))
        Next
    End If
End Sub

Private Sub OutputBuiltinTags()
''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||f1||fffd||1e9||5b5||fffd||fffd||fffd||fffd||fffd||fffd||b9||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim wsOutput As Excel.Worksheet
    Dim myClass As Object
    Dim vntOutput As Variant
    Dim vntTags As Variant
    Dim strEBName As String
    Dim I As Integer
    Dim C As Integer
    Dim intEBID As Integer
    Dim L As Long
    ''''Public Const gblnUSER_FROM_CAB As Boolean = False''''|fffd||fffd|mdlConst|123||fffd||fffd||fffd||fffd||fffd||7b8||133||fffd||fffd||fffd||5b5|
    ReDim vntOutput(1 To (gintUSER_TAG_COUNT + 1) * 10 + 1, 1 To 5)
    vntOutput(1, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    vntOutput(1, 2) = "Class ID"
    vntOutput(1, 3) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
    vntOutput(1, 4) = "|fffd||fffd||5b5|"
    vntOutput(1, 5) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
    L = 1    ''''|fffd||fffd||2bc||fffd||fffd||fffd||fffd||fffd||fffd|
    For I = 1 To 10    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Set myClass = GetEBObject(I)
        strEBName = TypeName(myClass)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        intEBID = myClass.ClassID    ''''|fffd||fffd||fffd||fffd|ID
        vntTags = myClass.ClassTags    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||f1||fffd||1e9|
        For C = 0 To gintUSER_TAG_COUNT    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            L = L + 1
            vntOutput(L, 1) = strEBName    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            vntOutput(L, 2) = intEBID    ''''Class ID
            vntOutput(L, 3) = "Item" & C    ''''|fffd||fffd||fffd||fffd||fffd||fffd|
            If Len(vntTags(C)) = 0 Then    ''''|fffd||fffd||5b5|
                vntOutput(L, 4) = "xlEmpty"
            Else
                vntOutput(L, 4) = Chr$(28) & vntTags(C)    ''''|fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||7b6||fffd||fffd||fffd|('|fffd||1c7b|Excel|fffd||fffd||fffd||fffd||fffd||fffd||fffd||131||fffd||fffd||fffd||2bd||fffd||4f6||fffd||fffd||fffd||2a7|)
            End If
            vntOutput(L, 5) = C    ''''|fffd||fffd||fffd||fffd||fffd||fffd|
        Next
    Next
    Set wsOutput = Application.Workbooks.Add(Template:=xlWBATWorksheet).ActiveSheet
    wsOutput.Cells(1, 1).Resize(L, 5).Value = vntOutput
End Sub

Private Sub DisablePivotTableFieldList()
''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||378||fffd||4f1||fffd||fffd||5b6||fffd||fffd||431||fffd||fffd||fffd||fffd||fffd|
    Dim pvtTable As Excel.PivotTable
    Set pvtTable = wsChart.PivotTables("myChart")
    pvtTable.EnableFieldList = True
End Sub
Attribute VB_Name = "mdlMain"
'--------------------------------------------------------------------------------------
' (c) Copyright 1999-2029 ExcelHome.Net, All Rights Reserved
' E-Mail     : tech@ExcelHome.net
' Homepage   : http://tech.excelhome.net
'--------------------------------------------------------------------------------------
' Filename   : *.xlam
' Module     : mdlMain
' Purpose    : |fffd||fffd||123||fffd||fffd|
' Author     : shourou
' Reviser    : x
' Date       : 2015/3/15 06:55
' Version    : 1.0.0
' Procedures : x
'---------------------------------------------------------------------------------------

Option Explicit    ''''|fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Option Private Module    ''''|fffd||2cbf||fffd||fffd||fffd||33d||fffd||fffd||fffd|

#If VBA7 And Win64 Then    '''' 64|3bb| Microsoft Office|fffd||fffd||fffd||fffd||fffd||fffd|
    Private Declare PtrSafe Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" (ByVal hwnd As LongPtr, ByVal lpOperation As String, ByVal lpFile As String, ByVal lpParameters As String, ByVal lpDirectory As String, ByVal nShowCmd As Long) As LongPtr
#Else
    Private Declare Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" (ByVal hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, ByVal lpParameters As String, ByVal lpDirectory As String, ByVal nShowCmd As Long) As Long
#End If

Public gvntAllTagNames As Variant    ''''|22b||fffd||5b1||fffd||fffd||fffd|
Public gblnCancel As Boolean    ''''|22b||fffd||5b1||fffd||fffd||fffd|

Private myRibbon As Office.IRibbonUI    ''''|123||fffd||9f36||fffd||fffd||fffd||fffd|
Private Const SW_NORMAL As Long = 1    ''''|fffd||fffd||fffd||6d30||fffd||fffd|
Private Const mstrUSER_UPLOAD_URL As String = "http://tools.excelhome.net/EZTools/zjb/Log/Update.php?cpu=iSerialNumber&mail=iMailAddress"

Private Sub RibbonOnload(ribbon As IRibbonUI)
''''Callback for customUI.onLoad,|fffd||fffd||fffd||fffd|XML|fffd||13c||fffd||2b1|
    Set myRibbon = ribbon    ''''|5b8||fffd||fffd|ribbon|fffd||fffd||fffd||fffd|
End Sub

Private Sub mnuOpenNewTask(control As IRibbonControl)
''''Callback for btnOpenNewTask onAction,|fffd||bd||fffd||fffd||fffd||fffd||fffd|
    If IsRegistered = True Then    ''''|fffd||fffd||5e2||fffd||fffd||2b1|
''''XML|fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||633||279||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2be||fffd||bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If LoadXMLTagNames = True Then frmNewTask.Show 1
    Else
        frmRegister.Show 1
    End If
End Sub

Private Sub mnuOpenTaskManager(control As IRibbonControl)
''''Callback for btnOpenTaskManager onAction,|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    frmTaskManager.Show 1
End Sub

Private Sub mnuTrackBaoBeiPrice(control As IRibbonControl)
''''Callback for btnOutputAllTasks onAction,|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    TrackerTasksOutput Val(control.Tag)
End Sub

Private Sub mnuTrackerChartOutput(control As IRibbonControl)
''''Callback for btnTasksOutput5 onAction,|37c||fffd||fffd||fffd||fffd||fffd|
    TrackerChartOutput (Val(control.Tag) = 6)
End Sub

Private Sub mnuFileImport(control As IRibbonControl)
''''Callback for btnFileImport onAction,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    TrackerTasksImport
End Sub

Private Sub mnuFileExport(control As IRibbonControl)
''''Callback for btnFileExport onAction,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    TrackerTasksExport
End Sub

Private Sub lblTrackTimegetLabel(control As IRibbonControl, ByRef returnedVal)
'Callback for lblTrackTimeValue getLabel,|fffd||fffd||32c||fffd||fffd||fffd||fffd||fffd||3f4||3b8||fffd||fffd||fffd||2b1||fffd||fffd|
    Dim dtmLastTime As Date
    dtmLastTime = CDate(GetTrackerTimeValue)    ''''|fffd||3f4||3b8||fffd||fffd||fffd||2b1||fffd||fffd|
    returnedVal = Format$(dtmLastTime, "yyyy/mm/dd hh:mm:ss")
End Sub

Private Sub mnuTackerExecuteNow(control As IRibbonControl)
''''Callback for btnTackerExecute onAction,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    TackerExecuteNow True, False
End Sub

Private Sub mnuTrackerFreeRegistration(control As IRibbonControl)
''''Callback for btnTrackerFreeRegistration onAction,|fffd||fffd||fffd||5e2||fffd||fffd|
    frmRegister.Show 1    ''''|fffd||fffd||5e2||fffd||fffd||53b||fffd||fffd||fffd|
End Sub

Private Sub mnuOpenTrackerHelp(control As IRibbonControl)
''''Callback for btnOpenTrackerHelp onAction,|fffd||fffd||fffd||fffd|
    Dim strFileName As String
    strFileName = ThisWorkbook.Path & "\|fffd||fffd||fffd||fffd|\Excel|5f7||fffd||6f1||fffd||fffd||fffd||fffd||fffd|.docx"
    If FileExists(strFileName) = False Then
        MsgBox Chr$(34) & strFileName & Chr$(34) & "|fffd||13c||fffd||fffd||fffd||2a7||fffd||fffd|", vbExclamation, gstrUSER_MSG_TITLE
    Else
        FileOpen strFileName
    End If
End Sub

Private Sub mnuUpdateTrackerProfile(control As IRibbonControl)
''''Callback for btnUpdateTrackerProfile onAction,|fffd||fffd||fffd||b3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13c||fffd|
    Dim FSO As Scripting.FileSystemObject
    Dim strOldProfile As String
    Dim vntNewProfile As Variant
    strOldProfile = GetProfileName  ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||b7||fffd||fffd|
    vntNewProfile = Application.GetOpenFilename(FileFilter:="Profile.cab, *.cab", Title:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13c||fffd|")
    If vntNewProfile <> False Then
        Set FSO = New Scripting.FileSystemObject
        FSO.CopyFile vntNewProfile, strOldProfile, True    ''''|fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||13c||fffd|
        MsgBox "|fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||478||fffd||fffd||a1||fffd|", vbInformation, gstrUSER_MSG_TITLE
    End If
End Sub

Private Sub mnuAboutEHTracker(control As IRibbonControl)
''''Callback for btnEHTracker onAction,|fffd||fffd||fffd||fffd|
    MsgBox "Created by:" & vbTab & "Excel Home|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & _
           "Version:" & vbTab & vbTab & gstrUSER_VBA_VERSION & vbCrLf & _
           "Release at:" & vbTab & gstrUSER_VBA_RELEASE & vbCrLf & _
           "Homepage:" & vbTab & "http://tech.excelhome.net" & vbCrLf & _
           "E-Mail:" & vbTab & vbTab & "tech@excelhome.net", , gstrUSER_MSG_TITLE
End Sub

Private Sub mnuFileOpenByWord(control As IRibbonControl)
''''Callback for btnFileOpenByWord onAction,|fffd||bfab4||fffd||fffd||fffd||fffd||fffd||5be|
    Dim strFileName As String
    strFileName = ThisWorkbook.Path & "\|fffd||fffd||fffd||f1a38||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||5be|.log"
    If FileExists(strFileName) = True Then FileOpen strFileName
End Sub

Private Sub AddHyperlinks(rngLinks As Excel.Range, intOutIndex As Integer)
''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||bcec||fffd||fffd||fffd||fffd|
    Dim oCell As Excel.Range
    Dim astrSpliter() As String
    Dim strValue As String
    Select Case intOutIndex
    Case 1    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        For Each oCell In rngLinks.Cells     ''''|fffd||fffd||fffd||fffd||fffd||fffd||52a||fffd||fffd|
            astrSpliter = Split(oCell.Value, Chr$(28))     ''''|fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            oCell.Hyperlinks.Add Anchor:=oCell, Address:=astrSpliter(1), TextToDisplay:=astrSpliter(0)
        Next
    Case 2    ''''|fffd||fffd||3f8||fffd||fffd||fffd||fffd|
        For Each oCell In rngLinks.Cells     ''''|fffd||fffd||fffd||fffd||fffd||fffd||52a||fffd||fffd|
            strValue = oCell.Value
            If InStr(strValue, Chr$(28)) > 0 Then
                astrSpliter = Split(strValue, Chr$(28))    ''''|fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                oCell.Hyperlinks.Add Anchor:=oCell, Address:=astrSpliter(1), TextToDisplay:=astrSpliter(0)
            End If
        Next
    End Select
End Sub

Public Sub CreateBaoBeiTask(vntTask As Variant)
''''|fffd||fffd||fffd||fffd|:|fffd||bd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:vntTask:=Variant|fffd||fffd||fffd||fffd|
    Dim rngBegin As Excel.Range
    Dim rngTasks As Excel.Range
    Dim rngNew As Excel.Range
    Dim vntRecord As Variant
    Dim lngSerialNumber As Long
    Dim lngRecordCount As Long
    Dim dtmCreateTime As Date
    On Error GoTo ErrorHandler
    Set rngBegin = wsTask.Cells(1, 1)    ''''[A1]|fffd||fffd||52a||fffd||fffd|
    Set rngTasks = rngBegin.CurrentRegion    ''''|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    lngRecordCount = rngTasks.Rows.Count    ''''|fffd||fffd||fffd||fffd||fffd||fffd|
    ReDim vntRecord(1 To 1, 1 To 8)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||3ac||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    lngSerialNumber = GetTaskSerialNumber(rngTasks)   ''''|fffd||b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    dtmCreateTime = Now  ''''|fffd||fffd||fffd||fffd||fffd||74d3d||fffd||2b1||fffd||fffd|
    vntRecord(1, 1) = lngSerialNumber   ''''|fffd||fffd||fffd||fffd||fffd||fffd|
    vntRecord(1, 2) = True    ''''|fffd||fffd||427||fffd||fffd|
    vntRecord(1, 3) = vntTask(5)    ''''|fffd||1f7||fffd||fffd||635||fffd||fffd||5e2|
    vntRecord(1, 4) = Empty    ''''|fffd||fffd||fffd||fffd||fffd||fffd||3bb|,|fffd||fffd||fffd||fffd|
    vntRecord(1, 5) = dtmCreateTime    ''''|fffd||fffd||fffd||fffd||2b1||fffd||fffd|
    vntRecord(1, 6) = vntTask(1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||5b7|
    vntRecord(1, 7) = vntTask(2)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    vntRecord(1, 8) = vntTask(3)    ''''|fffd||63c||fffd||fffd||fffd|
    Set rngNew = rngBegin.Offset(RowOffset:=lngRecordCount).Resize(1, 8)    ''''|fffd||bc||fffd||bc||fffd||fffd||fffd||6b5||fffd||52a||fffd||fffd||fffd||fffd||fffd||fffd|
    Application.ScreenUpdating = False    ''''|fffd||631||fffd||fffd||fffd||13b||fffd||fffd||fffd||fffd|
    rngNew.Value = vntRecord    ''''|434||fffd||fffd||fffd||fffd||fffd||fffd|
    RangeSetFormat rngNew, False, False    ''''|fffd||fffd||fffd||f1||7ff||fffd||fffd||fffd|
    ReDim vntRecord(1 To 1, 1 To 3)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||3ac||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||46f||fffd||fffd||fffd||fffd||fffd||fffd|
    vntRecord(1, 1) = lngSerialNumber    ''''|fffd||fffd||fffd||fffd||fffd||fffd|
    vntRecord(1, 2) = vntTask(4)    ''''|fffd||fffd||fffd||fffd||fffd||6f8||fffd|
    vntRecord(1, 3) = dtmCreateTime    ''''|fffd||fffd||2bc||fffd||fffd||fffd||fffd||46f||fffd||fffd||2b1||fffd||fffd|
    Set rngBegin = wsTracker.Cells(1, 1)    ''''[A1]|fffd||fffd||52a||fffd||fffd|
    Set rngTasks = rngBegin.CurrentRegion    ''''|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    lngRecordCount = rngTasks.Rows.Count    ''''|fffd||fffd||fffd||fffd||fffd||fffd|
    Set rngNew = rngBegin.Offset(RowOffset:=lngRecordCount).Resize(1, 3)    ''''|fffd||bc||fffd||bc||fffd||fffd||fffd||6b5||fffd||52a||fffd||fffd||fffd||fffd||fffd||fffd|
    rngNew.Value = vntRecord    ''''|434||fffd||fffd||fffd||fffd||fffd||fffd|
    RangeSetFormat rngNew, False, False    ''''|fffd||fffd||fffd||f1||7ff||fffd||fffd||fffd|
    Application.ScreenUpdating = True    ''''|fffd||5b8||fffd||fffd||fffd||13b||fffd||fffd||fffd||fffd|
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    If ExcelHomeErrorHandler("Public Sub CreateBaoBeiTask") = True Then Resume Next
End Sub

Public Sub FileOpen(strFileName As String)
''''|fffd||fffd||fffd||fffd|:|2b9||fffd||fffd|Windows|12c||fffd||3f3||fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd|,|fffd||fffd|URL,EXE,|fffd||bd||fffd||fffd||2bc||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:strFileName,|fffd||13c||fffd||fffd||fffd||fffd||1bb||fffd||fffd||fffd|URL|fffd||fffd||5b7|,|fffd||2bc||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||135||fffd|
    ShellExecute 0, "Open", strFileName, vbNullString, vbNullString, SW_NORMAL
End Sub

Public Sub LabelSetHighlight(cmdButton As MSForms.Label)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||6bf||63c||fffd|(|fffd||fffd||165|/|fffd||fffd||1e9||fffd||fffd|)|fffd||fffd||fffd||1b6||fffd||2b1||fffd||fffd||fffd||fffd||3aa||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:cmdButton:=|fffd||fffd||fffd||1b0||fffd||165||fffd||131||fffd||1e9||fffd||fffd||63c||fffd|
    cmdButton.BorderStyle = fmBorderStyleSingle
End Sub

Public Sub LabelsNotHighlight(frmForm As MSForms.UserForm)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||1e9||fffd||63c||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:frmForm:=|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim oCtrl As MSForms.control
    For Each oCtrl In frmForm.Controls    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||435||fffd||22b||fffd||fffd||fffd||63c||fffd|
        If TypeName(oCtrl) = "Label" Then
            If InStr(oCtrl.Name, "cmd") = 1 Then oCtrl.BorderStyle = fmBorderStyleNone
        End If
    Next
End Sub

Public Sub LoadClassTagNames(intClassID As Integer, astrTagNames() As String)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||22b||fffd||5b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||437||fffd||fffd||fffd||5b8||fffd||fffd||fffd||fffd||fffd||335||131||fffd||1e9||fffd||fffd||fffd||fffd|
    Dim C As Integer
    ReDim astrTagNames(0 To gintUSER_TAG_COUNT)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||4bb||3ac||fffd||fffd||fffd||fffd|,|fffd||6d22||fffd||fffd||1e9||fffd||fffd||fffd||fffd|
    For C = 0 To gintUSER_TAG_COUNT    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        astrTagNames(C) = gvntAllTagNames(intClassID, C)
    Next
End Sub

Public Sub LoadEBNames(astrClassNames() As String)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||635||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:astrClassNames:=|fffd||fffd||fffd||638||fffd||fffd||fffd||fffd||335||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ReDim astrClassNames(1 To 10)    ''''10|fffd||fffd||fffd||fffd||fffd||fffd|
    astrClassNames(1) = "Taobao"   ''''|fffd||531||fffd|
    astrClassNames(2) = "Tmall"    ''''|fffd||fffd||e8|
    astrClassNames(3) = "JD"    ''''|fffd||fffd||fffd||fffd|
    astrClassNames(4) = "Amazon"    ''''|fffd||fffd||fffd||fffd||477|
    astrClassNames(5) = "Suning"    ''''|fffd||fffd||fffd||fffd||fffd||5f9||fffd|
    astrClassNames(6) = "dangdang"    ''''|fffd||fffd||fffd||fffd|
    astrClassNames(7) = "yhd"    ''''1|fffd||175||fffd|
    astrClassNames(8) = "vip"    ''''|3a8||1b7||fffd||fffd|
    astrClassNames(9) = "gome"    ''''|fffd||fffd||fffd||fffd|
    astrClassNames(10) = "yixun"    ''''|fffd||fffd||478|
End Sub

Public Sub RemoveBaoBeiTasks(strSerialNumbers As String)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||27e||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:strSerialNumbers:=|22b||fffd||fffd||fffd||fffd||4aa||27e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||1f0||fffd||fffd||5b8||fffd||fffd||fffd|
    Dim rngTasks As Excel.Range
    Dim rngTarget As Excel.Range
    Dim vntSerialNumbers As Variant
    Dim vntRemoved As Variant
    Dim strSerialNumber As String
    Dim R As Long
    On Error GoTo ErrorHandler
    Set rngTasks = wsTask.Cells(1, 1).CurrentRegion.Columns(1)    ''''[A]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|
    With rngTasks
        vntSerialNumbers = .Value    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Set rngTarget = .Offset(ColumnOffset:=1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd|
    End With
    vntRemoved = rngTarget.Value     ''''|fffd||fffd||427||fffd||fffd||fffd||fffd||5b5|
    For R = 2 To UBound(vntSerialNumbers, 1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        strSerialNumber = ForamtSerialNumber(vntSerialNumbers(R, 1))
        ''''|fffd||fffd||fffd||3aa||fffd||fffd||4aa||27e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1|,|fffd||fffd||5b5||fffd||fffd||3aa|False,|fffd||fffd||fffd||3aa||27e||fffd||fffd|
        If InStr(strSerialNumbers, Chr$(44) & strSerialNumber & Chr$(44)) Then vntRemoved(R, 1) = False
    Next
    Application.ScreenUpdating = False    ''''|fffd||631||fffd||fffd||fffd||13b||fffd||fffd||fffd||fffd|
    rngTarget.Value = vntRemoved    ''''|fffd||fffd||fffd||fffd|[B]|fffd||fffd|,|fffd||fffd||427||fffd||fffd|
    Application.ScreenUpdating = True    ''''|fffd||5b8||fffd||fffd||fffd||13b||fffd||fffd||fffd||fffd|
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    If ExcelHomeErrorHandler("Public Sub RemoveBaoBeiTasks") = True Then Resume Next
End Sub

Public Sub ResetBaoBeiFocus(strSerialNumbers As String)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||635||fffd||fffd||5e2||fffd||131||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:strSerialNumbers:=|fffd||fffd||4aa||fffd||fffd||fffd||fffd||3aa||fffd||635||fffd||fffd||5e2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||1f0||fffd||fffd||5b8||fffd||fffd||fffd|
    Dim rngTasks As Excel.Range
    Dim rngTarget As Excel.Range
    Dim vntSerialNumbers As Variant
    Dim vntFocused As Variant
    Dim strSerialNumber As String
    Dim R As Long
    On Error GoTo ErrorHandler
    Set rngTasks = wsTask.Cells(1, 1).CurrentRegion.Columns(1)    ''''[A]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|
    With rngTasks
        vntSerialNumbers = .Value    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Set rngTarget = .Offset(ColumnOffset:=2)    ''''|fffd||fffd||fffd||fffd||fffd||635||fffd||fffd||5e2||fffd||fffd|
    End With
    vntFocused = rngTarget.Value     ''''|fffd||635||fffd||fffd||5e2||fffd||fffd||5b5|
    For R = 2 To UBound(vntSerialNumbers, 1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        strSerialNumber = ForamtSerialNumber(vntSerialNumbers(R, 1))
        ''''|fffd||fffd||fffd||3aa||fffd||fffd||4aa||fffd||fffd||fffd||fffd||3aa||fffd||635||fffd||fffd||5e2||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd|TRUE,|fffd||fffd||fffd||fffd||fffd||3aa|False;|fffd||fffd||fffd||3aa||27e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||635||fffd||fffd||5e2||fffd||fffd||fffd||fffd||3aa|False
        vntFocused(R, 1) = CBool(InStr(strSerialNumbers, Chr$(44) & strSerialNumber & Chr$(44)))
    Next
    Application.ScreenUpdating = False    ''''|fffd||631||fffd||fffd||fffd||13b||fffd||fffd||fffd||fffd|
    rngTarget.Value = vntFocused    ''''|fffd||fffd||fffd||fffd|[C]|fffd||fffd|,|fffd||635||fffd||fffd||5e2|
    Application.ScreenUpdating = True    ''''|fffd||5b8||fffd||fffd||fffd||13b||fffd||fffd||fffd||fffd|
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    If ExcelHomeErrorHandler("Public Sub ResetBaoBeiFocus") = True Then Resume Next
End Sub

Public Sub ResetBaoBeiInsidePrice(dictPrices As Scripting.Dictionary)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||f1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb|
''''|fffd||fffd||fffd||fffd|:dictPrices:=|fffd||5b5||fffd||fffd||fffd||fffd|
    Dim rngTasks As Excel.Range
    Dim rngTarget As Excel.Range
    Dim vntSerialNumbers As Variant
    Dim vntPrices As Variant
    Dim strSerialNumber As String
    Dim R As Long
    On Error GoTo ErrorHandler
    Set rngTasks = wsTask.Cells(1, 1).CurrentRegion.Columns(1)    ''''[A]|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|
    With rngTasks
        vntSerialNumbers = .Value    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Set rngTarget = .Offset(ColumnOffset:=3)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb||fffd||fffd|
    End With
    vntPrices = rngTarget.Value     ''''|fffd||635||fffd||fffd||5e2||fffd||fffd||5b5|
    With dictPrices
        For R = 2 To UBound(vntSerialNumbers, 1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            strSerialNumber = ForamtSerialNumber(vntSerialNumbers(R, 1))
            If .Exists(strSerialNumber) = True Then vntPrices(R, 1) = .Item(strSerialNumber)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb|
        Next
    End With
    Application.ScreenUpdating = False    ''''|fffd||631||fffd||fffd||fffd||13b||fffd||fffd||fffd||fffd|
    rngTarget.Value = vntPrices    ''''|fffd||fffd||fffd||fffd|[D]|fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||3bb|
    Application.ScreenUpdating = True    ''''|fffd||5b8||fffd||fffd||fffd||13b||fffd||fffd||fffd||fffd|
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    If ExcelHomeErrorHandler("Public Sub ResetBaoBeiInsidePrice") = True Then Resume Next
End Sub

Public Sub TackerExecuteNow(blnAllow As Boolean, blnClose As Boolean)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||2bc||fffd||6f8||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:blnAllow:=|fffd||1f7||fffd||1ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|;blnClose:=|fffd||1f7||fffd||631||fffd||fffd||fffd|Excel|fffd||fffd||fffd||fffd|
    Dim rngNew As Excel.Range
    Dim objEBClass As Object
    Dim astrErrors() As String
    Dim astrPlaceOrders() As String
    Dim vntObjects As Variant
    Dim vntTasks As Variant
    Dim vntOutput As Variant
    Dim vntPrice As Variant
    Dim strFileName As String
    Dim I As Integer
    Dim intURLType As Integer
    Dim R As Long
    Dim L As Long
    Dim K As Long
    Dim lngRecordCount As Long
    Dim lngAllProcess As Long
    Dim dtmNow As Date
    Const intUSER_COLUMN_SIZE As Integer = 3     ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    On Error GoTo ErrorHandler
    gblnCancel = False    ''''|fffd||fffd||2bc||fffd||fffd||fffd||fffd||fffd||fffd|
    If LoadXMLTagNames = False Then Exit Sub
    If LoadTasksToArray(vntTasks, False) = False Then Exit Sub
    dtmNow = Now    ''''|fffd||fffd||1f0||2b1||fffd||fffd|
    If AllowTracking(dtmNow, blnAllow) = False Then Exit Sub
    lngRecordCount = UBound(vntTasks, 1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd|
    lngAllProcess = lngRecordCount + 2    ''''|fffd||73d||fffd||fffd||fffd|
    ReDim vntOutput(1 To lngRecordCount, 1 To intUSER_COLUMN_SIZE)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||3ac||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ReDim vntObjects(1 To 10)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||4bb||3ac||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    For I = 1 To UBound(vntObjects)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Set vntObjects(I) = GetEBObject(I)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||4e6||fffd||135||fffd||fffd||336||fffd||fffd||fffd|
    Next
    For R = 1 To lngRecordCount    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        ProcessBar R / lngAllProcess    ''''|fffd||fffd||fffd||fffd||5b8||2be|
        intURLType = GetURLType(CStr(vntTasks(R, 6)))    ''''URL|fffd||fffd||fffd||fffd|
        If intURLType > 0 Then
            vntOutput(R, 1) = vntTasks(R, 1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd|
            Set objEBClass = vntObjects(intURLType)    ''''|fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||135||fffd||fffd||fffd||fffd||fffd|
            vntPrice = Empty    ''''|fffd||fffd||2bc||fffd||fffd||fffd||fffd||fffd||fffd|
            If objEBClass.GetBaoBePrice(CStr(vntTasks(R, 8)), vntPrice) = False Then    ''''|fffd||fffd||3b4||fffd||733||279||fffd||fffd||fffd||fffd||631||fffd||fffd||fffd||fffd||6f8||fffd||2b1|
                L = L + 1
                ReDim Preserve astrErrors(1 To L)
                astrErrors(L) = "URL: " & vntTasks(R, 6) & vbTab & vntPrice
                vntPrice = glngUSER_NO_PRICE    ''''|fffd||fffd||fffd||3aa||fffd||636||fffd||5b5|
            End If
        Else
            L = L + 1
            vntPrice = glngUSER_NO_PRICE    ''''|fffd||fffd||fffd||3aa||fffd||636||fffd||5b5|
            ReDim Preserve astrErrors(1 To L)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            astrErrors(L) = "|3b4||5aa||fffd||fffd|URL|fffd||fffd||fffd||fffd|: " & vntTasks(R, 6)
        End If
        vntOutput(R, 2) = vntPrice
        vntOutput(R, 3) = dtmNow
        If vntPrice <= Val(vntTasks(R, 4)) Then    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3bb||2b1|
            K = K + 1
            ReDim Preserve astrPlaceOrders(1 To K)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            ''''|fffd||fffd||fffd||63f||fffd||fffd||fffd||fffd||b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||17a||371||fffd||fffd||fffd||fffd||fffd||fffd|
            astrPlaceOrders(K) = ForamtSerialNumber(vntTasks(R, 1)) & Chr$(58) & GetBaoBeiShortName(vntTasks(R, 7))
        End If
    Next
    Erase vntObjects    ''''|fffd||377||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Set rngNew = wsTracker.Cells(1048576, 1).End(xlUp).Offset(1, 0)    ''''[An+1]|fffd||fffd||52a||fffd||fffd|
    Set rngNew = rngNew.Resize(lngRecordCount, intUSER_COLUMN_SIZE)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ProcessBar R / lngAllProcess
    Application.ScreenUpdating = False
    rngNew.Value = vntOutput    ''''|434||fffd||fffd||fffd||fffd||fffd||fffd|
    ProcessBar 1    ''''100%
    RangeSetFormat rngNew, False, False    ''''|fffd||fffd||fffd||ff||fffd||fffd||fffd|
    Application.ScreenUpdating = True
    Application.StatusBar = False    ''''|fffd||fffd||fffd||5f4||32c||fffd||fffd|
    If Not myRibbon Is Nothing Then myRibbon.InvalidateControl ("lblTrackTimeValue")
    If L > 0 Then
        strFileName = ThisWorkbook.Path & "\|fffd||fffd||fffd||f1a38||fffd|"
        If FileExists(strFileName) = False Then MkDir strFileName    ''''|fffd||fffd||fffd||fffd||13c||fffd||fffd||432||fffd||fffd||fffd||fffd||fffd||fffd||b4d3d||fffd||5ae|
        strFileName = strFileName & "\|fffd||fffd||fffd||fffd||fffd||fffd||5be|.log"
        PrintTextFile strFileName, Join(astrErrors, vbCrLf), False
    End If
    If AllowUploading = True Then UploadTrackDate True   ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f4||fffd||2b1|,|fffd||3f4||fffd||fffd||fffd||fffd||fffd||fffd||3e2|
    If K > 0 Then
        If blnClose = False Then
            MsgBox "|fffd||5e3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53f||fffd||fffd||fffd||fffd||b5||fffd||fffd||2e1||fffd|" & vbCrLf & _
                   "|fffd||fffd||fffd||fffd|'|fffd||6f8||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd|'|fffd||272||9ff4||fffd||fffd||fffd||9863|" & vbCrLf & _
                   Space$(3) & Join(astrPlaceOrders, vbCrLf & Space$(3)), vbInformation + vbOKOnly, gstrUSER_MSG_TITLE
        Else
            If MsgBox("|fffd||5e3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53f||fffd||fffd||fffd||fffd||b5||fffd||fffd||2e1||fffd|" & vbCrLf & _
                      "|fffd||fffd||fffd||fffd|'|fffd||6f8||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd|'|fffd||272||9ff4||fffd||fffd||fffd||9863|" & vbCrLf & _
                      "|fffd||fffd||fffd||fffd|'|221||fffd||fffd|'|fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||fffd||2be||fffd||fffd|" & vbCrLf & _
                      Space$(3) & Join(astrPlaceOrders, vbCrLf & Space$(3)), vbInformation + vbOKCancel, gstrUSER_MSG_TITLE) = vbOK Then gblnCancel = True
        End If
    End If
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    ''''    Debug.Print Err.Description
    ''''    Stop
    ''''    Resume
    If ExcelHomeErrorHandler("Public Sub TackerExecuteNow") = True Then Resume Next
End Sub

Private Sub RangeSetExport(rngExport As Excel.Range)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||138||fffd||2bd|
    Dim oCell As Excel.Range
    Dim rngArea As Excel.Range
    Dim rngEnd As Excel.Range
    Dim myTop10 As Excel.Top10
    Dim R As Long
    On Error GoTo ErrorHandler
    For Each oCell In rngExport.Columns(1).Cells    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If StrComp(oCell.Value, "|fffd||fffd||fffd||fffd||fffd||fffd|", vbTextCompare) = 0 Then
            Set rngArea = oCell.CurrentRegion    ''''|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            RangeSetFormat rngArea, False, False
            With rngArea
                R = .Rows.Count    ''''|fffd||fffd||fffd||fffd|
                .Range("$B$3").HorizontalAlignment = xlLeft    ''''|fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||5b7|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
                .Range("$A$5:$B$5").Interior.ColorIndex = 15    ''''|fffd||fffd||fffd||f5||fffd||52a||fffd||fffd||fffd||fffd||fffd||26b|
                Set rngEnd = .Cells(.Cells.Count)    ''''|fffd||fffd||fffd||bd||1f5||fffd||52a||fffd||fffd|
                Set rngArea = .Item(6, 1).Resize(R - 5, 2)  ''''|fffd||fffd||4aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bd||fffd||135||fffd||52a||fffd||fffd||fffd||fffd||fffd||fffd|(|46f||fffd||fffd||2b1||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||6f8||fffd|)
            End With
            With rngArea
                .Columns(1).NumberFormat = "yyyy/mm/dd hh:mm"    ''''|46f||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||778||fffd||2bd|
                .Sort Key1:=.Item(1, 1), Order1:=xlDescending, Header:=xlNo     ''''|fffd||fffd||46f||fffd||fffd||2b1||fffd||4f75||fffd||fffd||fffd||fffd||fffd||fffd|
                Set myTop10 = .Columns(2).FormatConditions.Add(xlTop10)    ''''[B]|fffd||431||fffd||fffd||fffd||fffd||6f8||fffd|,|fffd||fffd||fffd||fffd|Top10|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bd|
                With myTop10
                    .SetFirstPriority    ''''|fffd||fffd||fffd||fffd||3aa||fffd||fffd||fffd||23c||fffd||fffd||fffd|
                    .TopBottom = xlTop10Bottom    ''''|221||fffd||fffd||421||5b5|
                    .Rank = 1    ''''|221|1|fffd||fffd|
                    .Percent = False
                    With .Font    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||26b|
                        .Color = -16383844
                        .TintAndShade = 0
                    End With
                    With .Interior    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||26b|
                        .PatternColorIndex = xlAutomatic
                        .Color = 13551615
                        .TintAndShade = 0
                    End With
                    .StopIfTrue = False
                End With
            End With
        End If
    Next
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    ''''    Debug.Print Err.Description
    ''''    Stop
    ''''    Resume
    If ExcelHomeErrorHandler("Private Sub RangeSetExport") = True Then Resume Next
End Sub

Private Sub RangeSetFormat(rngFormat As Excel.Range, Optional blnSetHeader As Boolean = True, Optional blnAutoFilter As Boolean = True)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||f5||fffd||52a||fffd||fffd||fffd||2bd|
''''|fffd||fffd||fffd||fffd|:rngFormat:=|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|Range|fffd||fffd||fffd||fffd|;blnSetHeader:=|fffd||1f7||fffd||fffd||fffd||4aa||fffd||fffd||fffd||fffd||fffd||fffd|;blnAutoFilter:=|fffd||1f7||fffd||fffd||fffd||4aa||278||461|
    On Error GoTo ErrorHandler
    With rngFormat
        With .Borders    ''''|fffd||fffd||fffd||f1||7ff||fffd||fffd||fffd|
            .LineStyle = xlContinuous
            .ThemeColor = 2
            .TintAndShade = 0.499984740745262
            .Weight = xlThin
        End With
        If blnSetHeader = True Then    ''''|fffd||fffd||fffd||f1||fffd||fffd||fffd||fffd||fffd|
            With .Rows(1).Interior
                .Pattern = xlSolid
                .PatternColorIndex = xlAutomatic
                .ThemeColor = xlThemeColorDark1
                .TintAndShade = -0.14996795556505
                .PatternTintAndShade = 0
            End With
            '''' .Rows(1).NumberFormat = "General"    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3aa||fffd||fffd||fffd||fffd||fffd||2bd|
        End If
        If blnAutoFilter Then .AutoFilter      ''''|fffd||fffd||fffd||fffd||fffd||536||fffd||278||461|
    End With
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    If ExcelHomeErrorHandler("Private Sub RangeSetFormat") = True Then Resume Next
End Sub

Private Sub SetTrackerTimeValue(vntValue As Variant)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||3f4||3b8||fffd||fffd||675||fffd||2b1||fffd||fffd|
    wsTracker.Range("nmTrackerTime").Value = vntValue
End Sub

Private Sub TrackerTasksExport()
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim wbExport As Excel.Workbook
    Dim vntExport As Variant
    Dim strFolder As String
    Dim strFileName As String
    On Error GoTo ErrorHandler
    strFolder = ThisWorkbook.Path & "\Tasks"
    If FileExists(strFolder) = False Then MkDir strFolder
    strFileName = strFolder & "\iTasks.xlsx"
    vntExport = Application.GetSaveAsFilename(InitialFileName:=strFileName, FileFilter:="Excel |fffd||fffd||fffd||fffd||fffd||fffd|(*.xlsx), *.xlsx", Title:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
    If Not StrComp(vntExport, "False", vbTextCompare) = 0 Then    ''''|237||fffd||fffd|
        strFileName = vntExport    ''''|fffd||fffd||fffd||fffd||2b5||fffd||fffd||b7||fffd||fffd|
        vntExport = Array(wsTask.Name, wsTracker.Name)
        Application.ScreenUpdating = False    ''''|fffd||631||fffd||fffd||fffd||13b||fffd||fffd||fffd||fffd|
        Application.DisplayAlerts = False    ''''|fffd||631||57e||fffd||fffd||fffd||53b||fffd||fffd||fffd|
        ThisWorkbook.Sheets(vntExport).Copy    ''''|fffd||fffd||fffd||1b5||fffd||fffd||b9||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Set wbExport = ActiveWorkbook    ''''|5b8||fffd||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd|
        wbExport.SaveAs Filename:=strFileName, FileFormat:=xlWorkbookDefault, AddToMru:=False    ''''|fffd||fffd||fffd||fffd||3aa|,|fffd||fffd||fffd||fffd||2bd|
        wbExport.Close False    ''''|fffd||631||579||fffd||fffd||fffd||fffd||fffd|
        Application.DisplayAlerts = True    ''''|fffd||5b8||fffd||fffd||fffd||fffd||fffd||53b||fffd||fffd||fffd|
        Application.ScreenUpdating = True    ''''|fffd||5b8||fffd||fffd||fffd||13b||fffd||fffd||fffd||fffd|
        MsgBox "|fffd||fffd||fffd||fffd||279||fffd||fffd||fffd||fffd||fffd||fffd||fffd| :" & vbCrLf & strFileName, vbInformation, gstrUSER_MSG_TITLE
    End If
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    If ExcelHomeErrorHandler("Private Sub TrackerTasksExport") = True Then Resume Next
End Sub

Private Sub TrackerTasksImport()
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim dictColIndex As Scripting.Dictionary
    Dim wbExport As Excel.Workbook
    Dim oSheet As Excel.Worksheet
    Dim rngBegin As Excel.Range
    Dim rngTasks As Excel.Range
    Dim rngNew As Excel.Range
    Dim vntImport As Variant
    Dim vntRecord As Variant
    Dim strFolder As String
    Dim strFileName As String
    Dim C As Integer
    Dim I As Integer
    Dim intColumnSize As Integer
    Dim R As Long
    Dim L As Long
    Dim lngSerialNumber As Long
    Dim lngRowSize As Long
    Dim blnAllowImport As Boolean
    On Error GoTo ErrorHandler
    strFolder = ThisWorkbook.Path & "\Tasks"
    If FileExists(strFolder) = False Then MkDir strFolder
    ChDrive strFolder    ''''|fffd||131||4d71||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ChDir strFolder    ''''|fffd||131||4d71||1f0||fffd||fffd||13f||bc||fffd||fffd||fffd||13c||fffd||fffd||fffd|
    strFileName = strFolder & "\iTasks.xlsx"
    vntImport = Application.GetOpenFilename(FileFilter:="Excel |fffd||fffd||fffd||fffd||fffd||fffd|(*.xlsx), *.xlsx", Title:="|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
    If StrComp(vntImport, "False", vbTextCompare) = 0 Then Exit Sub    ''''|221||fffd||fffd|
    strFileName = vntImport    ''''|fffd||fffd||fffd||fffd||2b5||fffd||fffd||b7||fffd||fffd|
    Application.ScreenUpdating = False    ''''|fffd||631||fffd||fffd||fffd||13b||fffd||fffd||fffd||fffd|
    Set wbExport = Application.Workbooks.Open(Filename:=strFileName, AddToMru:=False)
    For Each oSheet In wbExport.Sheets    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Select Case oSheet.CodeName
        Case wsTask.CodeName    ''''|fffd||fffd||fffd||fffd||fffd|
            Set rngBegin = wsTask.Cells(1, 1)    ''''[A1]|fffd||fffd||52a||fffd||fffd|
            Set rngTasks = rngBegin.CurrentRegion    ''''|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            lngSerialNumber = GetTaskSerialNumber(rngTasks) - 1    ''''|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            vntRecord = rngTasks.Value    ''''|fffd||fffd||fffd||635||fffd||1f0||fffd||fffd||fffd||fffd|
            lngRowSize = UBound(vntRecord, 1)    ''''|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            intColumnSize = UBound(vntRecord, 2)    ''''|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            Set dictColIndex = New Scripting.Dictionary    ''''|fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|
            With dictColIndex
                For C = 1 To intColumnSize    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    .Item(vntRecord(1, C)) = C    ''''|fffd||5b6||fffd||fffd||fffd||fffd||1ba||fffd||fffd||431||fffd||434||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|
                Next
                vntRecord = oSheet.Cells(1, 1).CurrentRegion.Value    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                R = UBound(vntRecord, 1)    ''''|fffd||fffd||fffd||fffd|
                If R > 1 Then
                    ReDim vntImport(1 To R - 1, 1 To intColumnSize)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||3ac||fffd||fffd||fffd||fffd|,|fffd||6d22||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    For C = 1 To UBound(vntRecord, 2)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                        If .Exists(vntRecord(1, C)) = True Then
                            I = Val(.Item(vntRecord(1, C)))    ''''|fffd||fffd||fffd||fffd||fffd||43a||fffd|
                            For L = 2 To R    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                                If I = 1 Then    ''''|fffd||fffd||fffd||fffd||fffd||fffd|
                                    vntImport(L - 1, I) = vntRecord(L, C) + lngSerialNumber    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                                Else
                                    vntImport(L - 1, I) = vntRecord(L, C)    ''''|434||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                                End If
                            Next
                        End If
                    Next
                End If
            End With
            If I > 0 Then blnAllowImport = True    ''''|fffd||fffd||fffd||3aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            Exit For
        End Select
    Next
    If blnAllowImport Then    ''''|fffd||475||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        I = 0    ''''|fffd||fffd||2bc||fffd||fffd||fffd||fffd||fffd||fffd|
        Set rngNew = rngBegin.Offset(lngRowSize, 0).Resize(R - 1, intColumnSize)
        rngNew.Value = vntImport    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        RangeSetFormat rngNew, False, False    ''''|fffd||fffd||fffd||f1||7ff||fffd||fffd||fffd|
        For Each oSheet In wbExport.Sheets    ''''|fffd||fffd||fffd||3b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            Select Case oSheet.CodeName
            Case wsTracker.CodeName    ''''|46f||fffd||6fc||fffd||bc|
                Set rngBegin = wsTracker.Cells(1, 1)    ''''[A1]|fffd||fffd||52a||fffd||fffd|
                vntRecord = rngBegin.CurrentRegion.Value     ''''|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                lngRowSize = UBound(vntRecord, 1)    ''''|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                intColumnSize = UBound(vntRecord, 2)    ''''|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                Set dictColIndex = New Scripting.Dictionary    ''''|fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|
                With dictColIndex
                    For C = 1 To intColumnSize    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                        .Item(vntRecord(1, C)) = C    ''''|fffd||5b6||fffd||fffd||fffd||fffd||1ba||fffd||fffd||431||fffd||434||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|
                    Next
                    vntRecord = oSheet.Cells(1, 1).CurrentRegion.Value    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    R = UBound(vntRecord, 1)    ''''|fffd||fffd||fffd||fffd|
                    If R > 1 Then
                        ReDim vntImport(1 To R - 1, 1 To intColumnSize)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||3ac||fffd||fffd||fffd||fffd|,|fffd||6d22||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                        For C = 1 To UBound(vntRecord, 2)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                            If .Exists(vntRecord(1, C)) = True Then
                                I = Val(.Item(vntRecord(1, C)))    ''''|fffd||fffd||fffd||fffd||fffd||43a||fffd|
                                For L = 2 To R    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                                    If I = 1 Then    ''''|fffd||fffd||fffd||fffd||fffd||fffd|
                                        vntImport(L - 1, I) = vntRecord(L, C) + lngSerialNumber    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                                    Else
                                        vntImport(L - 1, I) = vntRecord(L, C)    ''''|434||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                                    End If
                                Next
                            End If
                        Next
                    End If
                End With
                If I > 0 Then
                    Set rngNew = rngBegin.Offset(lngRowSize, 0).Resize(R - 1, intColumnSize)
                    rngNew.Value = vntImport  ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    RangeSetFormat rngNew, False, False    ''''|fffd||fffd||fffd||f1||7ff||fffd||fffd||fffd|
                End If
            End Select
        Next
    End If
    wbExport.Close False    ''''|fffd||631||579||fffd||fffd||fffd||fffd||fffd|
    Application.ScreenUpdating = True    ''''|fffd||5b8||fffd||fffd||fffd||13b||fffd||fffd||fffd||fffd|
    If blnAllowImport Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||279||fffd||fffd||fffd|", vbInformation, gstrUSER_MSG_TITLE
    Else
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a7||fffd||721||fffd|", vbExclamation, gstrUSER_MSG_TITLE
    End If
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    If ExcelHomeErrorHandler("Private Sub TrackerTasksImport") = True Then Resume Next
End Sub

Private Sub TrackerTasksOutput(intClickIndex As Integer)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6f8||fffd||fffd||fffd||67c||fffd||bc|
''''|fffd||fffd||fffd||fffd|:blnOnFocus:=|fffd||1f7||fffd||3aa||fffd||635||fffd||fffd||5e2|;blnOutDetail:=|fffd||6f8||fffd||fffd||fffd||3f8|
    Dim dictTasks As New Scripting.Dictionary
    Dim wsNew As Excel.Worksheet
    Dim rngOutput As Excel.Range
    Dim rngBegin As Excel.Range
    Dim vntValues As Variant
    Dim vntDictItem As Variant
    Dim vntOutput As Variant
    Dim strSerialNumber As String
    Dim R As Long
    Dim L As Long
    Dim N As Long
    Dim blnOnFocus As Boolean
    Dim blnOutDetail As Boolean
    Const lngUSER_COLUMN_SIZE As Long = 8    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Const lngUSER_MAX_PRICE As Long = 100000000    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6f8||fffd|
    On Error GoTo ErrorHandler
    Select Case intClickIndex
    Case 1
        blnOnFocus = False
        blnOutDetail = False
    Case 2
        blnOnFocus = True
        blnOutDetail = False
    Case 3
        blnOnFocus = False
        blnOutDetail = True
    Case 4
        blnOnFocus = True
        blnOutDetail = True
    End Select
    vntValues = wsTask.Cells(1, 1).CurrentRegion.Value   ''''|fffd||fffd||fffd||fffd||fffd||fffd||135||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    With dictTasks
        Select Case blnOutDetail    ''''|fffd||fffd||fffd||fffd||fffd||1f7||fffd||fffd||fffd||4aa||fffd||fffd||fffd||fffd||fffd||3f8||fffd||fffd||fffd||fffd|
        Case False    ''''|fffd||6f8||fffd||fffd||fffd||fffd|
            ReDim vntDictItem(1 To lngUSER_COLUMN_SIZE + 1)  ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||4bb||3ac||fffd||fffd||fffd||fffd|
            For R = 2 To UBound(vntValues, 1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||fffd|
                strSerialNumber = CStr(vntValues(R, 1))    ''''|1ff||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                If IsOutTask(vntValues(R, 2), IIf(blnOnFocus, vntValues(R, 3), True)) Then    ''''|3aa||fffd||fffd||4aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1|
                    vntDictItem(1) = vntValues(R, 1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd|
                    vntDictItem(2) = vntValues(R, 3)    ''''|fffd||635||fffd||fffd||5e2|
                    vntDictItem(3) = vntValues(R, 4)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||3bb|
                    vntDictItem(4) = vntValues(R, 7)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    vntDictItem(5) = GetMyHyperlink(CStr(vntValues(R, 6)))    ''''|fffd||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||4f5||131||fffd||fffd||fffd||fffd||fffd||5b7|,HYPERLINK|fffd||fffd||fffd||fffd|
                    vntDictItem(6) = vntValues(R, 5)    ''''|fffd||5f4||fffd||46f||fffd||fffd||2b1||fffd||fffd|
                    vntDictItem(7) = lngUSER_MAX_PRICE    ''''|fffd||fffd||2b7||fffd||fffd||37c||6f8||fffd|,|12c||fffd||fffd||3aa||fffd||fffd||7fc||6f8||fffd|
                    vntDictItem(8) = 0    ''''|fffd||fffd||fffd||fffd||6f8||fffd|
                    vntDictItem(9) = #1/1/2000#    ''''|fffd||fffd||fffd||4bb||fffd||fffd||46f||fffd||fffd||2b1||fffd||fffd|
                    .Item(strSerialNumber) = vntDictItem    ''''|fffd||fffd||fffd||635||fffd||fffd||5b5||fffd||fffd||fffd||13f||fffd||fffd|
                End If
            Next
            vntValues = wsTracker.Cells(1, 1).CurrentRegion.Value   ''''|46f||fffd||6fc||fffd||bc||fffd||fffd||fffd||135||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            For R = 2 To UBound(vntValues, 1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||fffd|
                strSerialNumber = CStr(vntValues(R, 1))    ''''|1ff||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                If .Exists(strSerialNumber) = True Then    ''''|3aa||13f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1|
                    vntDictItem = .Item(strSerialNumber)    ''''|fffd||fffd||fffd||639||63c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4e6||fffd||fffd||fffd||5b5||fffd||fffd||fffd||13f|
                    If vntValues(R, 2) < vntDictItem(7) Then vntDictItem(7) = vntValues(R, 2)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||37c||6f8||fffd|
                    If vntValues(R, 3) > vntDictItem(9) Then
                        vntDictItem(8) = vntValues(R, 2)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||3bc||6f8||fffd|
                        vntDictItem(9) = vntValues(R, 3)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||fffd||46f||fffd||fffd||2b1||fffd||fffd|
                    End If
                    .Item(strSerialNumber) = vntDictItem    ''''|fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||435||fffd||fffd||fffd||13f|
                End If
            Next
        Case True    ''''|fffd||fffd||3f8||fffd||fffd||fffd||fffd|
            ReDim vntDictItem(1 To lngUSER_COLUMN_SIZE, 1 To 5)   ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||4bb||3ac||fffd||fffd||fffd||fffd|
            For R = 2 To UBound(vntValues, 1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||fffd|
                strSerialNumber = CStr(vntValues(R, 1))    ''''|1ff||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                If IsOutTask(vntValues(R, 2), IIf(blnOnFocus, vntValues(R, 3), True)) Then   ''''|3aa||fffd||fffd||4aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1|
                    vntDictItem(1, 1) = "|fffd||fffd||fffd||fffd||fffd||fffd|"
                    vntDictItem(1, 2) = "|fffd||fffd||fffd||fffd||fffd||fffd||5b7|"
                    vntDictItem(1, 3) = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
                    vntDictItem(1, 4) = "|fffd||fffd||fffd||fffd||fffd||fffd||3bb|"
                    vntDictItem(1, 5) = "|46f||fffd||fffd||2b1||fffd||fffd|"
                    vntDictItem(2, 1) = ForamtSerialNumber(vntValues(R, 1))   ''''|fffd||fffd||fffd||fffd||fffd||fffd|
                    vntDictItem(2, 2) = GetMyHyperlink(CStr(vntValues(R, 6)))    ''''|fffd||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||4f5||131||fffd||fffd||fffd||fffd||fffd||5b7|,HYPERLINK|fffd||fffd||fffd||fffd|
                    vntDictItem(2, 3) = vntValues(R, 7)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    vntDictItem(2, 4) = vntValues(R, 4)  ''''|fffd||fffd||fffd||fffd||fffd||fffd||3bb|
                    vntDictItem(2, 5) = "|fffd||fffd||fffd||fffd||fffd||6f8||fffd|"
                    .Item(strSerialNumber) = vntDictItem    ''''|fffd||fffd||fffd||635||fffd||fffd||5b5||fffd||fffd||fffd||13f||fffd||fffd|
                End If
            Next
            vntValues = wsTracker.Cells(1, 1).CurrentRegion.Value   ''''|46f||fffd||6fc||fffd||bc||fffd||fffd||fffd||135||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            For R = 2 To UBound(vntValues, 1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||fffd|
                strSerialNumber = CStr(vntValues(R, 1))    ''''|1ff||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                If .Exists(strSerialNumber) = True Then    ''''|3aa||13f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1|
                    vntDictItem = .Item(strSerialNumber)    ''''|fffd||fffd||fffd||639||63c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4e6||fffd||fffd||fffd||5b5||fffd||fffd||fffd||13f|
                    L = UBound(vntDictItem, 2) + 1  ''''|fffd||fffd||fffd||635||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|)|fffd||fffd|+1
                    ReDim Preserve vntDictItem(1 To lngUSER_COLUMN_SIZE, 1 To L)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    vntDictItem(1, L) = vntValues(R, 3)    ''''|fffd||fffd||fffd||fffd||46f||fffd||fffd||2b1||fffd||fffd|
                    vntDictItem(2, L) = vntValues(R, 2)    ''''|fffd||fffd||fffd||fffd||fffd||6f8||fffd|
                    .Item(strSerialNumber) = vntDictItem    ''''|fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||435||fffd||fffd||fffd||13f|
                End If
            Next
        End Select
        vntValues = .Items    ''''|fffd||fffd||fffd||fffd||22b||fffd||fffd||fffd||fffd||13f|
    End With
    Set dictTasks = Nothing    ''''|fffd||377||176||fffd||fffd||fffd||fffd||fffd||fffd|
    R = UBound(vntValues) + 1    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If R > 0 Then    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1|
        Application.ScreenUpdating = False    ''''|fffd||631||fffd||fffd||fffd||13b||fffd||fffd||fffd||fffd|
        Select Case blnOutDetail    ''''|fffd||fffd||fffd||fffd||fffd||1f7||fffd||fffd||fffd||4aa||fffd||fffd||fffd||fffd||fffd||3f8||fffd||fffd||fffd||fffd|
        Case False    ''''|fffd||6f8||fffd||fffd||fffd||fffd|
            ReDim vntOutput(1 To R, 1 To lngUSER_COLUMN_SIZE)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            For L = 1 To R    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                vntDictItem = vntValues(L - 1)    ''''|fffd||fffd||fffd||635||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd|
                For N = 1 To lngUSER_COLUMN_SIZE    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    vntOutput(L, N) = vntDictItem(N)
                Next
            Next
            vntValues = Empty    ''''|fffd||377||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            wsOverView.Copy    ''''|fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||b9||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            Set wsNew = ActiveWorkbook.ActiveSheet    ''''|5b8||fffd||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13b||edaf||fffd||fffd||fffd||fffd||fffd||fffd|
            With wsNew
                .Unprotect Password:=gstrUSER_WS_PROTECT
                Set rngBegin = .Cells(1, 1)    ''''[A1]|fffd||fffd||52a||fffd||fffd|
                Set rngOutput = rngBegin.Offset(1, 0).Resize(R, lngUSER_COLUMN_SIZE)    ''''|13f||fffd||ad65||52a||fffd||fffd||fffd||fffd||fffd||fffd|
                rngOutput.Value = vntOutput    ''''|434||fffd||bd65||52a||fffd||fffd||fffd||fffd||fffd||fffd|
                Set rngOutput = rngBegin.Resize(R + 1, lngUSER_COLUMN_SIZE)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||435||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                RangeSetFormat rngOutput, False, True    ''''|fffd||fffd||fffd||ff||fffd||fffd||7f5||fffd|
                .Protect Password:=gstrUSER_WS_PROTECT, AllowFiltering:=True   ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||2b9||fffd||fffd||278||461|
            End With
        Case True    ''''|fffd||fffd||3f8||fffd||fffd||fffd||fffd|
            ReDim vntOutput(1 To lngUSER_COLUMN_SIZE, 1 To 1)    ''''|fffd||fffd||2bc||fffd||fffd||fffd||fffd||fffd||fffd|
            For R = 0 To UBound(vntValues)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                vntDictItem = vntValues(R)    ''''|fffd||fffd||fffd||635||fffd||1f0||fffd||fffd||13f|
                For L = 1 To UBound(vntDictItem, 2)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    N = N + 1    ''''|fffd||fffd||fffd||fffd|
                    ReDim Preserve vntOutput(1 To lngUSER_COLUMN_SIZE, 1 To N)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||3ac||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    vntOutput(1, N) = vntDictItem(1, L)
                    vntOutput(2, N) = vntDictItem(2, L)
                Next
                N = N + 1    ''''|fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|
                ReDim Preserve vntOutput(1 To lngUSER_COLUMN_SIZE, 1 To N)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||3ac||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            Next
            vntOutput = ArrayTranspose(vntOutput)    ''''|fffd||fffd||fffd||fffd||5ea||fffd||fffd|
            wsDetail.Copy    ''''|fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||b9||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            Set wsNew = ActiveWorkbook.ActiveSheet    ''''|5b8||fffd||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13b||edaf||fffd||fffd||fffd||fffd||fffd||fffd|
            With wsNew
                .Unprotect Password:=gstrUSER_WS_PROTECT
                Set rngOutput = .Cells(1, 1).Resize(N, lngUSER_COLUMN_SIZE)    ''''|fffd||fffd||fffd||fffd||13f||fffd||fffd||fffd||fffd||fffd||fffd|
                rngOutput.Value = vntOutput    ''''|434||fffd||bd65||52a||fffd||fffd||fffd||fffd||fffd||fffd|
                RangeSetExport rngOutput    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bd||fffd||fffd|
                .Protect Password:=gstrUSER_WS_PROTECT  ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            End With
        End Select
        Application.ScreenUpdating = True    ''''|fffd||5b8||fffd||fffd||fffd||13b||fffd||fffd||fffd||fffd|
    End If
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    ''''    Debug.Print Err.Description
    ''''    Stop
    ''''    Resume
    If ExcelHomeErrorHandler("Private Sub TrackerTasksOutput") = True Then Resume Next
End Sub

Private Sub TrackerChartOutput(blnOnFocus As Boolean)
''''|fffd||fffd||fffd||fffd|:|37c||fffd||fffd||fffd||fffd||fffd|
    Dim dictTasks As New Scripting.Dictionary
    Dim wsNew As Excel.Worksheet
    Dim rngOutput As Excel.Range
    Dim rngBegin As Excel.Range
    Dim pvtBaoBei As Excel.PivotTable
    Dim vntValues As Variant
    Dim vntDictItem As Variant
    Dim vntLookUp As Variant
    Dim vntOutput As Variant
    Dim strSerialNumber As String
    Dim strURL As String
    Dim intURLType As Integer
    Dim R As Long
    Dim L As Long
    Dim N As Long
    Const lngUSER_COLUMN_SIZE As Long = 4    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Const lngUSER_ITEM_SIZE As Long = 6    ''''|fffd||fffd||13f||fffd||fffd||fffd||fffd|
    On Error GoTo ErrorHandler
    ReDim vntDictItem(1 To lngUSER_ITEM_SIZE)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||4bb||3ac||fffd||fffd||fffd||fffd|
    vntValues = wsTask.Cells(1, 1).CurrentRegion.Value   ''''|fffd||fffd||fffd||fffd||fffd||fffd||135||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    With dictTasks
        For R = 2 To UBound(vntValues, 1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||fffd|
            strSerialNumber = CStr(vntValues(R, 1))    ''''|1ff||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            If IsOutTask(vntValues(R, 2), IIf(blnOnFocus, vntValues(R, 3), True)) Then    ''''|3aa||fffd||fffd||4aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1|
                vntDictItem(1) = vntValues(R, 1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd|
                vntDictItem(2) = vntValues(R, 3)    ''''|fffd||635||fffd||fffd||5e2|
                vntDictItem(3) = vntValues(R, 4)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||3bb|
                vntDictItem(4) = vntValues(R, 7)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                strURL = CStr(vntValues(R, 6))    ''''|fffd||131||fffd||fffd||fffd|URL|fffd||fffd||5b7|,|fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||fffd|
                intURLType = GetURLType(strURL) + 1  ''''|fffd||fffd||fffd||fffd|URL|fffd||fffd||fffd||fffd|
                vntDictItem(5) = strURL    ''''|fffd||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||4f5||fffd|URL|fffd||fffd||5b7|
                vntDictItem(6) = GetFriendlyName(intURLType)    ''''|fffd||fffd||5b7||fffd||fffd||fffd||fffd|
                .Item(strSerialNumber) = vntDictItem    ''''|fffd||fffd||fffd||635||fffd||fffd||5b5||fffd||fffd||fffd||13f||fffd||fffd|
            End If
        Next
        ReDim vntOutput(1 To lngUSER_COLUMN_SIZE, 1 To 1)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||3ac||fffd||fffd||fffd||fffd|
        vntValues = wsTracker.Cells(1, 1).CurrentRegion.Value   ''''|46f||fffd||6fc||fffd||bc||fffd||fffd||fffd||135||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        For R = 2 To UBound(vntValues, 1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||fffd|
            strSerialNumber = CStr(vntValues(R, 1))    ''''|1ff||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            If .Exists(strSerialNumber) = True Then    ''''|3aa||13f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1|
                L = L + 1
                vntDictItem = .Item(strSerialNumber)
                ReDim Preserve vntOutput(1 To lngUSER_COLUMN_SIZE, 1 To L)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                vntOutput(1, L) = vntValues(R, 1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd|
                vntOutput(2, L) = vntDictItem(3)   ''''|fffd||fffd||fffd||fffd||fffd||fffd||3bb|
                vntOutput(3, L) = vntValues(R, 2)    ''''|fffd||fffd||fffd||fffd||fffd||6f8||fffd|
                vntOutput(4, L) = vntValues(R, 3)    ''''|46f||fffd||fffd||2b1||fffd||fffd|
            End If
        Next
        vntValues = .Items
    End With
    Set dictTasks = Nothing    ''''|fffd||377||176||fffd||fffd||fffd||fffd||fffd||fffd|
    If L > 0 Then
        R = UBound(vntValues) + 1    ''''|fffd||fffd||fffd||fffd|
        ReDim vntLookUp(1 To R, 1 To lngUSER_ITEM_SIZE)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||534||fffd||fffd||fffd||fffd|(VLOOKUP|fffd||fffd||fffd||fffd||534|)
        For N = 1 To R    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            vntDictItem = vntValues(N - 1)
            vntLookUp(N, 1) = vntDictItem(1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd|
            vntLookUp(N, 2) = vntDictItem(2)    ''''|fffd||635||fffd||fffd||5e2|
            vntLookUp(N, 3) = vntDictItem(3)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||3bb|
            vntLookUp(N, 4) = vntDictItem(4)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            vntLookUp(N, 5) = vntDictItem(5)    ''''|fffd||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||4f5||131||fffd||fffd||fffd||fffd||fffd||5b7|
            vntLookUp(N, 6) = vntDictItem(6)    ''''|fffd||fffd||5b7||fffd||fffd||fffd||fffd|
        Next
        vntValues = Empty    ''''|fffd||377||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        vntOutput = ArrayTranspose(vntOutput)    ''''|5ea||fffd||fffd||fffd||fffd||fffd||fffd|
        Application.ScreenUpdating = False    ''''|fffd||631||fffd||fffd||fffd||13b||fffd||fffd||fffd||fffd|
        wsChart.Copy    ''''|fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||b9||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Set wsNew = ActiveWorkbook.ActiveSheet    ''''|5b8||fffd||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13b||edaf||fffd||fffd||fffd||fffd||fffd||fffd|
        With wsNew
            .Unprotect Password:=gstrUSER_WS_PROTECT
            Set rngBegin = .Cells(1, 28)    ''''[AB1]|fffd||fffd||52a||fffd||fffd|
            Set rngOutput = rngBegin.Offset(1, 0).Resize(R, lngUSER_ITEM_SIZE)    ''''|13f||fffd||ad65||52a||fffd||fffd||fffd||fffd||fffd||fffd|
            rngOutput.Value = vntLookUp    ''''|434||fffd||bd65||52a||fffd||fffd||fffd||fffd||fffd||fffd|
            Set rngOutput = rngBegin.Resize(R + 1, lngUSER_ITEM_SIZE)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||435||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            RangeSetFormat rngOutput, False, False   ''''|fffd||fffd||fffd||ff||fffd||fffd||7f5||fffd|
            .Names("nmLookup").RefersToR1C1 = Chr$(61) & GetExternalAddress(rngOutput)
            Set rngBegin = wsNew.Cells(1, 15)    ''''[O1]|fffd||fffd||52a||fffd||fffd|
            Set rngOutput = rngBegin.Offset(1, 0).Resize(L, lngUSER_COLUMN_SIZE)    ''''|13f||fffd||ad65||52a||fffd||fffd||fffd||fffd||fffd||fffd|
            rngOutput.Value = vntOutput    ''''|434||fffd||bd65||52a||fffd||fffd||fffd||fffd||fffd||fffd|
            Set rngOutput = rngBegin.Resize(L + 1, lngUSER_COLUMN_SIZE)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||435||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            RangeSetFormat rngOutput, False, False    ''''|fffd||fffd||fffd||ff||fffd||fffd||7f5||fffd|
            .Names("nmSource").RefersToR1C1 = Chr$(61) & GetExternalAddress(rngOutput)
            Set pvtBaoBei = .PivotTables("pvtExcelHome")
            With pvtBaoBei
                .SourceData = "=nmSource"
                .RefreshTable    ''''|2e2||fffd||fffd||fffd||fffd||fffd||fffd|
                .EnableFieldDialog = False    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||378||fffd||4f1||fffd||fffd||5b6||3b6||53b||fffd||fffd||fffd|
                .EnableFieldList = False    ''''|fffd||fffd||5b9||fffd||fffd||2be||fffd||fffd||fffd||fffd||378||fffd||4f1||fffd||fffd||5b6||fffd||fffd||431||fffd||fffd||139||fffd||fffd||fffd|
                .EnableDrilldown = False    ''''|fffd||fffd||fffd||fffd||fffd||fffd||3f8||fffd||fffd||fffd||fffd|
            End With
            .Protect Password:=gstrUSER_WS_PROTECT, AllowUsingPivotTables:=True    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||2b9||fffd||fffd||378||fffd||4f1||fffd|
        End With
        Application.ScreenUpdating = True    ''''|fffd||5b8||fffd||fffd||fffd||13b||fffd||fffd||fffd||fffd|
    End If
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    ''''    Debug.Print Err.Description
    ''''    Stop
    ''''    Resume
    If ExcelHomeErrorHandler("Private Sub TrackerChartOutput") = True Then Resume Next
End Sub

Private Sub PrintTextFile(strFileName As String, strContent As String, blnAppened As Boolean)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||2f3||fffd||fffd||fffd||13c||fffd||434||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||2b9||fffd||fffd|vbCrLf|fffd||fffd||3aa||fffd||fffd||fffd||431||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:strFileName:=|2f3||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd|;strContent:=|fffd||fffd||434||fffd||fffd||fffd||fffd||fffd||fffd||fffd|;blnAppened:=True|2b1|,|5f7||fffd||4f7||fffd||2bd||434||fffd||fffd|,|fffd||fffd||fffd||fffd||3aa||fffd||fffd||fffd||1f7||fffd||2bd||434||fffd||fffd|
    If blnAppened = False Then
        Open strFileName For Output As #1   ''''|fffd||bfab2||fffd||2b9||fffd||f8||fffd||fffd||1f7||fffd||2bd||434||fffd||fffd||fffd||13c||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||536||fffd||fffd||fffd||fffd||fffd|
    Else
        Open strFileName For Append As #1    ''''|fffd||bfab2||fffd||2b9||fffd||fffd||5f7||fffd||4f7||fffd||2bd||434||fffd||fffd||fffd||13c||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||536||fffd||fffd||fffd||fffd||fffd|
    End If
    Print #1, strContent    ''''|434||fffd||fffd||fffd||13c||fffd|
    Close #1    '''' |fffd||631||fffd||fffd||13c||fffd|
End Sub

Private Sub ProcessBar(sngDoneValue As Single)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||5f4||32c||fffd||fffd||fffd||fffd||fffd||fffd||5b8||2be|
''''|fffd||fffd||fffd||fffd|:sngDoneValue:=|fffd||fffd||1f0||fffd||fffd||fffd||fffd|
    Const intUSER_PROC_ALL As Integer = 20
    Application.StatusBar = String$(Int(intUSER_PROC_ALL * sngDoneValue), ChrW$(9609)) & " Please Wait " & Format$(sngDoneValue, "0%")
End Sub

Public Sub UploadTrackDate(blnUpload As Boolean)
''''|fffd||fffd||fffd||fffd|:|fffd||3f4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||278||461||fffd||edaf||fffd||fb||fffd|
''''|fffd||fffd||fffd||fffd|:blnUpload:=|fffd||1f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f4||fffd|
    Dim objRequest As Object
    Dim astrUpValues(1 To 2) As String
    Dim strURL As String
    Dim L As Long
    On Error Resume Next
    If blnUpload = True Then    ''''|fffd||fffd||fffd||fffd||fffd||3f4||fffd||2b1|
        For L = 1 To 2
            astrUpValues(L) = RegGetSetting(L)
        Next
        URLComponent True, astrUpValues(1)    ''''|fffd||fffd||fffd||fffd|SN
        URLComponent True, astrUpValues(2)    ''''|fffd||fffd||fffd||fffd|EMail
        strURL = Replace$(mstrUSER_UPLOAD_URL, "iSerialNumber", astrUpValues(1))    ''''|fffd||6efb||fffd||fffd||fffd||43a||fffd|
        strURL = Replace$(strURL, "iMailAddress", astrUpValues(2))    ''''|fffd||6efb||fffd||2bc||fffd||fffd||fffd||5b7|
        ''''Debug.Print strURL
        Set objRequest = CreateObject("WINHTTP.WINHTTPREQUEST.5.1")
        If Not objRequest Is Nothing Then
            With objRequest
                .Open "GET", strURL, False
                .Send
            End With
        End If
    End If
End Sub

Private Sub URLComponent(blnEnCode As Boolean, strURLCode As String)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||7fb||fffd||52d|URL|fffd||fffd||5b7|
''''|fffd||fffd||fffd||fffd|:blnEnCode:=True,|fffd||fffd|URL|fffd||430||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b7||fffd||fffd||7fd||fffd||fffd||fffd||3aa|MD5|fffd||fffd|;strURLCode:=|fffd||fffd||fffd||fffd|/|fffd||fffd||fffd|URL|fffd||fffd||5b7|
    Dim JS As Object
    Set JS = CreateObject("ScriptControl")
    With JS
        .Language = "JavaScript"
        If blnEnCode Then
            strURLCode = .Eval("encodeURIComponent('" & strURLCode & "')")
        Else
            strURLCode = .Eval("decodeURIComponent('" & strURLCode & "')")
        End If
    End With
End Sub

Public Function ArrayTranspose(vntArray As Variant) As Variant
''''|fffd||fffd||fffd||fffd|:|5ea||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:vntArray:=Variant|fffd||fffd||fffd||fffd|,|4bb||fffd||fffd||3aa|1 To C,1 To R
    Dim vntTranspose As Variant
    Dim R As Long
    Dim C As Long
    Dim lngRowSize As Long
    Dim lngColumnSize As Long
    lngColumnSize = UBound(vntArray, 1)    ''''|fffd||fffd||fffd||fffd|
    lngRowSize = UBound(vntArray, 2)    ''''|fffd||fffd||fffd||fffd|
    ReDim vntTranspose(1 To lngRowSize, 1 To lngColumnSize)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||5ea||fffd||fa||fffd||fffd||fffd||fffd||fffd||fffd|
    For R = 1 To lngRowSize    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        For C = 1 To lngColumnSize    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            vntTranspose(R, C) = vntArray(C, R)    ''''|5ea||fffd||fffd|
        Next
    Next
    ArrayTranspose = vntTranspose    ''''|fffd||fffd||fffd||fffd||5ea||fffd||fa||fffd||fffd||fffd||fffd||fffd||fffd|
End Function

Public Function ExcelHomeErrorHandler(strProcName As String) As Boolean
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:strProcName:=|fffd||fffd||fffd||fffd||fffd||139||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim strErrMessage As String
    strErrMessage = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & Chr$(34) & strProcName & Chr$(34) & "|fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & vbCrLf & _
                    "|fffd||fffd||fffd||fffd||2b1||fffd||48fa|" & Now & vbCrLf & _
                    "|fffd||fffd||fffd||fffd||fffd||fffd||163||fffd|" & Err.Number & vbCrLf & _
                    "|fffd||fffd||fffd||fffd||52d||fffd||fffd|" & Err.Description
    Err.Clear    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If MsgBox(strErrMessage & vbCrLf & "|fffd||1f7||fffd||fffd||fffd||fffd||fffd||fffd|", vbExclamation + vbYesNo, gstrUSER_MSG_TITLE) = vbYes Then
        ExcelHomeErrorHandler = True
    Else
        With Application
            .StatusBar = False    ''''|fffd||fffd||fffd||5f4||32c||fffd||fffd|
            .DisplayAlerts = True    ''''|fffd||5b8||fffd||fffd||fffd||fffd||fffd||53b||fffd||fffd||fffd|
            .EnableEvents = True    ''''|fffd||5b8||fffd||fffd||bc||fffd|
            .ScreenUpdating = True    ''''|fffd||5b8||fffd||fffd||fffd||13b||fffd||fffd||fffd||fffd|
        End With
        ExcelHomeErrorHandler = False
    End If
End Function

Public Function GetEBObject(intURLType As Integer) As Object
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd|URL|fffd||fffd||5b7||fffd||fffd||fffd||fffd||fffd||fffd||4e6||fffd||135||fffd||fffd||336||fffd||fffd||fffd|(|fffd||fffd|)
''''|fffd||fffd||fffd||fffd|:intURLType:=URL|fffd||fffd||5b7||fffd||fffd||fffd||fffd|
    Dim objEBClass As Object
    Select Case intURLType
    Case 1
        Set objEBClass = New Taobao    ''''|fffd||531||fffd|
    Case 2
        Set objEBClass = New Tmall    ''''|fffd||fffd||e8|
    Case 3
        Set objEBClass = New JD    ''''|fffd||fffd||fffd||fffd|
    Case 4
        Set objEBClass = New Amazon    ''''|fffd||fffd||fffd||fffd||477|
    Case 5
        Set objEBClass = New Suning    ''''|fffd||fffd||fffd||fffd||fffd||5f9||fffd|
    Case 6
        Set objEBClass = New dangdang    ''''|fffd||fffd||fffd||fffd|
    Case 7
        Set objEBClass = New Yhd    ''''1|fffd||175||fffd|
    Case 8
        Set objEBClass = New Vip    ''''|3a8||1b7||fffd||fffd|
    Case 9
        Set objEBClass = New gome    ''''|fffd||fffd||fffd||fffd|
    Case 10
        Set objEBClass = New yixun    ''''|fffd||fffd||478|
    End Select
    Set GetEBObject = objEBClass
End Function

Public Function GetLinkLocation(intURLType As Integer, strURL As String, strUID As String) As String
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||630||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||4f5||fffd||fffd||fffd||5b7|
''''|fffd||fffd||fffd||fffd|:intURLType:=URL|fffd||fffd||5b7||fffd||fffd||fffd||fffd|;strURL:=URL|fffd||fffd||5b7|;strUID:=|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f4||fffd||fffd||fffd|
    Select Case intURLType
    Case 1
    Case 2
    Case 3
    Case 4
    End Select
    GetLinkLocation = strURL & strUID
End Function

Public Function GetProfileName() As String
''''|fffd||fffd||fffd||fffd|XML|fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||b7||fffd||fffd|
    Dim strFolder As String
    strFolder = ThisWorkbook.Path & "\Profile"
    If FileExists(strFolder) = False Then MkDir strFolder    ''''|fffd||fffd||fffd||fffd||13c||fffd||fffd||432||fffd||fffd||fffd||fffd||fffd||2b1||fffd||b4d3d||fffd||5ae|
    GetProfileName = strFolder & "\Profile.cab"
End Function

Public Function GetURLType(strURL As String) As Integer
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd|Electronic Business URL|fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:strURL:=|13f||fffd||fffd||fffd||fffd||5b7|
    Dim astrEBURLs() As String
    Dim intURLCount As Integer
    Dim I As Integer
    intURLCount = 10    ''''|fffd||fffd||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd||fffd|
    ReDim astrEBURLs(1 To intURLCount)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b7|
    astrEBURLs(1) = ".taobao.com/"    ''''|fffd||531||fffd||fffd||fffd|
    astrEBURLs(2) = ".tmall.com/"    ''''|fffd||fffd||e8||fffd||fffd|
    astrEBURLs(3) = ".jd.com/"    ''''|fffd||fffd||fffd||fffd||fffd||fffd|
    astrEBURLs(4) = ".amazon.cn/"    ''''|fffd||fffd||fffd||fffd||477||fffd||fffd|
    astrEBURLs(5) = ".suning.com/"    ''''|fffd||fffd||fffd||fffd||fffd||5f9||fffd|
    astrEBURLs(6) = ".dangdang.com/"    ''''|fffd||fffd||fffd||fffd||fffd||fffd|
    astrEBURLs(7) = ".yhd.com/"    ''''1|fffd||175||fffd|
    astrEBURLs(8) = ".vip.com/"    ''''|3a8||1b7||fffd||fffd|
    astrEBURLs(9) = ".gome.com.cn/"    ''''|fffd||fffd||fffd||fffd|
    astrEBURLs(10) = ".yixun.com/"    ''''|fffd||fffd||478|
    For I = 1 To intURLCount    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If InStr(1, strURL, astrEBURLs(I), vbTextCompare) > 0 Then Exit For
    Next
    If I > intURLCount Then I = 0
    GetURLType = I
End Function

Public Function LoadTasksToArray(vntTasks As Variant, blnByUserForm As Boolean) As Boolean
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||bc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:vntTasks:=|fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||13c||fffd||bc|,Variant|fffd||fffd||fffd||fffd|;blnByUserForm:=|fffd||1f7||fffd||3aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim vntRecord As Variant
    Dim C As Integer
    Dim intColumnSize As Integer
    Dim R As Long
    Dim L As Long
    On Error GoTo ErrorHandler
    vntRecord = wsTask.Cells(1, 1).CurrentRegion.Value   ''''|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Select Case blnByUserForm
    Case True
        intColumnSize = 5    ''''5|fffd||fffd||fffd||fffd||fffd|
        ReDim vntTasks(1 To intColumnSize, 1 To 1)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||3ac||fffd||fffd||fffd||fffd|
        For R = 2 To UBound(vntRecord, 1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            If vntRecord(R, 2) = True Then    ''''|fffd||fffd||427||fffd||fffd||3aa|True|2b1|
                L = L + 1
                ReDim Preserve vntTasks(1 To intColumnSize, 1 To L)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                vntTasks(1, L) = ForamtSerialNumber(vntRecord(R, 1))  ''''|fffd||fffd||fffd||fffd||fffd||fffd|
                vntTasks(2, L) = IIf(vntRecord(R, 3), "|fffd||fffd|", "|fffd||fffd|")    ''''|fffd||635||fffd||fffd||5e2|
                vntTasks(3, L) = vntRecord(R, 4)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||3bb|
                vntTasks(4, L) = Format$(vntRecord(R, 5), "yyyy/mm/dd hh:mm:ss")   ''''|fffd||fffd||fffd||fffd||2b1||fffd||fffd|
                vntTasks(5, L) = vntRecord(R, 7)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            End If
        Next
    Case False
        intColumnSize = 8    ''''8|fffd||fffd||fffd||fffd||fffd|
        ReDim vntTasks(1 To intColumnSize, 1 To 1)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||3ac||fffd||fffd||fffd||fffd|
        For R = 2 To UBound(vntRecord, 1)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            If vntRecord(R, 2) = True Then    ''''|fffd||fffd||427||fffd||fffd||3aa|True|2b1|
                L = L + 1
                ''''|fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||427||fffd||fffd|,|fffd||635||fffd||fffd||5e2|,|fffd||fffd||fffd||fffd||fffd||fffd||3bb|,|fffd||fffd||fffd||fffd||2b1||fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||5b7|,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||63c||fffd||fffd||fffd|
                ReDim Preserve vntTasks(1 To intColumnSize, 1 To L)    ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                For C = 1 To intColumnSize    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                    vntTasks(C, L) = vntRecord(R, C)
                Next
            End If
        Next
    End Select
    If L > 0 Then
        vntTasks = ArrayTranspose(vntTasks)    ''''|5ea||fffd||fffd||fffd||fffd||fffd||fffd|
        LoadTasksToArray = True
    End If
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("Public Function LoadTasksToArray") = True Then Resume Next
End Function

Public Function LoadXMLTagNames() As Boolean
''''|fffd||fffd||fffd||fffd|:|fffd||fffd|XML|fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||43c||fffd||fffd||638||fffd||fffd||fffd||fffd||335||136||fffd||32c||fffd||fffd||1e9||fffd||fffd||fffd||fffd||fffd||fffd||22b||fffd||5b1||fffd||fffd||fffd||fffd||fffd|
    Dim docDOM As MSXML2.DOMDocument
    Dim lstDOM As MSXML2.IXMLDOMNodeList
    Dim oNode As MSXML2.IXMLDOMNode
    Dim astrClassNames() As String
    Dim strFileName As String
    Dim R As Integer
    Dim C As Integer
    Dim L As Long
    Dim intEBCount As Integer
    strFileName = GetProfileName    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||b7||fffd||fffd|
    If FileExists(strFileName) = False Then
        MsgBox Chr$(34) & strFileName & Chr$(34) & " |fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||2a7||fffd||fffd|", vbExclamation, gstrUSER_MSG_TITLE
        Exit Function
    End If
    LoadEBNames astrClassNames    ''''|fffd||fffd||fffd||635||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    intEBCount = UBound(astrClassNames)    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ReDim gvntAllTagNames(1 To intEBCount, 0 To gintUSER_TAG_COUNT)   ''''|fffd||fffd||32c||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||3ac||fffd||fffd||fffd||fffd|,|ff||fffd||fffd||fffd||fffd||fffd||fffd|51|fffd||fffd||fffd||fffd||fffd||fffd|
    Set docDOM = New MSXML2.DOMDocument
    If docDOM.Load(strFileName) = True Then    ''''|fffd||279||fffd||fffd||fffd||fffd||fffd||2b1|
        For R = 1 To intEBCount    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            C = -1    ''''|fffd||fffd||2bc||fffd||fffd||fffd||fffd||fffd||fffd|
            astrClassNames(R) = UCase$(astrClassNames(R))    ''''|1ff||fffd||1b4||fffd||434|
            Set lstDOM = docDOM.getElementsByTagName(astrClassNames(R))
            If Not lstDOM Is Nothing Then
                For Each oNode In lstDOM(0).ChildNodes    ''''|fffd||fffd||fffd||fffd||fffd||4fd||6b5||fffd|
                    L = L + 1
                    C = C + 1
                    ''''|237||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||52d||fffd||fffd||fffd||fffd||fffd||5b7||fffd|
                    If Not C > gintUSER_TAG_COUNT Then gvntAllTagNames(R, C) = GetXMLEntityReferences(oNode.Text, False)
                Next
            End If
        Next
    End If
    If Not L = intEBCount * (gintUSER_TAG_COUNT + 1) Then
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd|", vbExclamation, gstrUSER_MSG_TITLE
    Else
        LoadXMLTagNames = True
    End If
End Function

Private Function AllowTracking(dtmNow As Date, Optional blnAllow As Boolean = False) As Boolean
''''|fffd||fffd||fffd||fffd|:|fffd||1f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim dtmTrackTime As Date
    If blnAllow = False Then
        dtmTrackTime = CDate(GetTrackerTimeValue)    ''''|fffd||3f4||3b8||fffd||fffd||fffd||2b1||fffd||fffd|
        If DateValue(dtmNow) > DateValue(dtmTrackTime) Then    ''''|fffd||fffd||fffd||fffd||3f4||3b8||fffd||fffd||fffd||2b1||fffd||fffd||fffd||bd71||1f0||fffd||fffd||fffd||6b2||fffd||fffd||fffd||36c||4bb||fffd||fffd||2b1|
            blnAllow = True
        Else
            If Not GetTimeType(dtmNow) = GetTimeType(dtmTrackTime) Then    ''''|fffd||fffd||3aa||36c||4bb||2b1||fffd||fffd||2b1|
                blnAllow = True
            End If
        End If
    End If
    If blnAllow = True Then SetTrackerTimeValue dtmNow  ''''|fffd||fffd||fffd||fffd||fffd||3f4||3b8||fffd||fffd||fffd||2b1||fffd||fffd||3aa||fffd||fffd||1f0||2b1||fffd||fffd|
    AllowTracking = blnAllow
End Function

Private Function FileExists(strFileName As String) As Boolean
''''|fffd||fffd||fffd||fffd|:|fffd||436||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||1f7||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:strFileName:=|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||435||fffd||fffd||fffd||fffd||fffd||b7||fffd||fffd|
    FileExists = (Len(Dir(strFileName, vbDirectory)) > 0)
End Function

Private Function ForamtSerialNumber(vntSerialNumber As Variant) As String
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:vntSerialNumber:=|fffd||fffd||fffd||5b5|
    ForamtSerialNumber = Chr$(84) & Format$(Val(vntSerialNumber), "0000")    ''''|fffd||fffd||fffd||fffd||fffd||fffd|
End Function

Private Function GetBaoBeiShortName(vntFullName As Variant) As String
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||631||fffd||fffd||fffd||fffd||fffd||fffd||1b5||13c||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:vntFullName:=|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim strShortName As String
    If Len(vntFullName) > 11 Then    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b3||fffd||fffd||fffd|10|fffd||fffd||fffd||5b7||fffd||2b1|,|221||1f0|10|fffd||fffd|
        strShortName = Left$(vntFullName, 10) & Chr$(126)
    Else
        strShortName = vntFullName
    End If
    GetBaoBeiShortName = strShortName
End Function

Private Function GetExternalAddress(rngRef As Excel.Range) As String
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||635||fffd||52a||fffd||fffd||fffd||fffd||fffd||fffd||139||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||f5||fffd||5b7|,|fffd||fffd|"|37c||fffd||fffd||fffd||fffd||fffd|!R5C1"
''''|fffd||fffd||fffd||fffd|:rngRef:=|fffd||fffd||fffd||f5||135||fffd||52a||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim astrSpliter() As String
    astrSpliter = Split(rngRef.Address(True, True, xlR1C1, True), Chr$(93))
    GetExternalAddress = astrSpliter(1)
End Function

Private Function GetFriendlyName(intURLType As Integer) As String
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd|URL|fffd||fffd||5b7||fffd||fffd||4e6||fffd||131||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:intURLType:=URL|fffd||fffd||5b7||fffd||fffd||fffd||fffd|
    GetFriendlyName = Choose(intURLType, "|3b4||5aa|", "|fffd||4b5||fffd||fffd||531||fffd|", "|fffd||4b5||fffd||fffd||fffd||e8|", "|fffd||4b5||13e||fffd||fffd||fffd||fffd||333||fffd|", "|fffd||4b5||fffd||fffd||fffd||fffd||fffd||477|", "|fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd||5f9||fffd|", "|fffd||4b5||135||fffd||fffd||fffd|", "|fffd||4b5||fffd|1|fffd||175||fffd|", "|fffd||4b5||fffd||3a8||1b7||fffd||fffd|", "|fffd||4b5||139||fffd||fffd||fffd|", "|fffd||4b5||fffd||fffd||fffd||478|")
End Function

Private Function GetMyHyperlink(strURL As String) As String
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||630||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||4f5||133||fffd||fffd||fffd||fffd||4f4||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:strURL:=|fffd||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||4f5||fffd|URL|fffd||fffd||5b7|
    Dim strFriendName As String
    Dim strFormula As String
    Dim intURLType As Integer
    intURLType = GetURLType(strURL) + 1  ''''|fffd||fffd||fffd||fffd|URL|fffd||fffd||fffd||fffd|
    strFriendName = GetFriendlyName(intURLType)    ''''|fffd||fffd||fffd||fffd|URL|fffd||fffd||4e6||fffd||131||fffd||fffd||fffd|
    strFormula = Replace$("=HYPERLINK(""LINK_LOCATION"",""FRIENDLY_NAME"")", "LINK_LOCATION", strURL)
    GetMyHyperlink = Replace$(strFormula, "FRIENDLY_NAME", strFriendName)
End Function

Private Function GetTimeType(dtmTime As Date) As Integer
''''|fffd||fffd||fffd||fffd||2b1||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim dtmTimeValue As Date
    dtmTimeValue = TimeValue(dtmTime)    ''''|fffd||fffd||fffd||fffd||2b1||fffd||fffd||5b5|
    Select Case dtmTimeValue
    Case 0 To #11:59:59 AM#    ''''|fffd||8cff||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        GetTimeType = 1
    Case Else    ''''|fffd||fffd||fffd||fffd||fffd||fffd||4b9||fffd||fffd|
        GetTimeType = 2
    End Select
End Function

Private Function GetTrackerTimeValue() As Variant
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||3b8||fffd||fffd||675||fffd||2b1||fffd||fffd|
    GetTrackerTimeValue = wsTracker.Range("nmTrackerTime").Value
End Function

Private Function GetTaskSerialNumber(rngRegion As Excel.Range) As Long
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||43a||fffd|
''''|fffd||fffd||fffd||fffd|:rngRegion:=|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    GetTaskSerialNumber = Application.WorksheetFunction.Max(rngRegion.Columns(1)) + 1    ''''[A]|fffd||fffd|
End Function

Private Function GetXMLEntityReferences(ByVal strReference As String, blnEntity As Boolean) As String
''''|fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd|XML|fffd||fde8||fffd||435||fffd||4bb||429||fffd||fffd||fffd||fffd||fffd||5b7||fffd|
''''|fffd||fffd||fffd||fffd|:strReference:=|fffd||fffd||fffd||fffd||5b5|;blnEntity:=True|2b1|,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b7||fffd||5ea||fffd||fffd||3aa||2b5||fffd||fffd||fffd||fffd||fffd||fffd|;
    Dim astrOldText() As String
    Dim astrNewText() As String
    Dim I As Integer
    ReDim astrOldText(1 To 7)
    ReDim astrNewText(1 To 7)
    astrOldText(2) = Chr$(38)    ''''&,|fffd||37a||fffd|
    astrOldText(3) = Chr$(60)    ''''<,|421||fffd||6ba||fffd|
    astrOldText(4) = Chr$(62)    ''''>,|fffd||fffd||fffd||6ba||fffd|
    astrOldText(5) = Chr$(39)    ''''',|fffd||fffd||fffd||fffd||fffd||fffd|
    astrOldText(6) = Chr$(34)    ''''",|2eb||fffd||fffd||fffd||fffd|
    astrOldText(7) = Chr$(32)    '''' ,|fffd||578||fffd|
    astrNewText(2) = "&AMP;"
    astrNewText(3) = "&LT;"
    astrNewText(4) = "&GT;"
    astrNewText(5) = "&APOS;"
    astrNewText(6) = "&QUOT;"
    astrNewText(7) = "&SPACE;"
    If blnEntity = True Then    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b7||fffd||5ea||fffd||fffd||3aa||2b5||fffd||fffd||fffd||fffd||fffd||fffd|
        astrOldText(1) = Chr$(28)    ''''ESC,|1f0||fffd||fffd||fffd||7b6||fffd||fffd||fffd|
        astrNewText(1) = Empty
        For I = 1 To UBound(astrOldText)
            strReference = Replace$(strReference, astrOldText(I), astrNewText(I))
        Next
    Else    ''''|fffd||fffd||3aa||2b5||fffd||fffd||fffd||fffd||fffd||fb||fffd||52d||3aa||fffd||fffd||fffd||fffd||fffd||5b7||fffd|
        astrNewText(1) = "xlEmpty"
        astrOldText(1) = Empty
        For I = 1 To UBound(astrOldText)
            strReference = Replace$(strReference, astrNewText(I), astrOldText(I))
        Next
    End If
    GetXMLEntityReferences = strReference
End Function

Private Function IsOutTask(vntVaild As Variant, vntFocus As Variant) As Boolean
''''|fffd||fffd||fffd||fffd|:|fffd||436||fffd||fffd||1f7||fffd||3aa||fffd||fffd||4aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd|:vntVaild:=|fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||fffd|;vntFocus:=|fffd||635||fffd||fffd||5e2||fffd||fffd||fffd||fffd|
    IsOutTask = (StrComp(vntVaild & Chr$(44) & vntFocus, "TRUE,TRUE", vbTextCompare) = 0)
End Function

Attribute VB_Name = "mdlRegistry"
'--------------------------------------------------------------------------------------
' (c) Copyright 1999-2029 ExcelHome.Net, All Rights Reserved
' E-Mail     : tech@ExcelHome.net
' Homepage   : http://tech.excelhome.net
'--------------------------------------------------------------------------------------
' Filename   : *.xlam
' Module     : mdlRegistry
' Purpose    : |5e2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||123||fffd||fffd|
' Author     : shourou
' Reviser    : x
' Date       : 2015/3/15 06:55
' Version    : 1.0.0
' Procedures : x
'---------------------------------------------------------------------------------------

Option Explicit    ''''|fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Option Private Module    ''''|fffd||2cbf||fffd||fffd||fffd||33d||fffd||fffd||fffd|

Private Const mstrREG_APP_NAME As String = "ZhuiJiaBao"
Private Const mstrREG_SEC_NAME As String = "Settings"

Public Function AllowUploading() As Boolean
''''|fffd||1f7||fffd||fffd||fffd||fffd||fffd||fffd||3f4||fffd||fffd||fffd||fffd||fffd|
    Dim dtmTrackDate As Date
    dtmTrackDate = CDate(RegGetSetting(3))
    If Date - dtmTrackDate > 6 Then  ''''|4bb||fffd||fffd||fffd||3f4||fffd||4bb||fffd||fffd|
        RegSaveSetting 3, Format$(Date, "yyyy/mm/dd")   ''''|5e2||fffd||fffd||fffd||fffd||fffd||fffd|
        AllowUploading = True
    End If
End Function

Public Function IsRegistered() As Boolean
''''|fffd||fffd||fffd||635||fffd||1f0||fffd||37b||fffd||fffd||2f3||fffd||fffd||fffd||fffd||1f7||fffd||3aa||fffd||fffd||5e2||fffd||fffd|
    Dim lngSerialNumber As Long
    lngSerialNumber = Val(RegGetSetting(1))    ''''|fffd||fffd||fffd||fffd|SerialNumber
    IsRegistered = CBool(lngSerialNumber)
End Function

Public Function RegGetSetting(lngKeyIndex As Long) As String
''''|fffd||fffd||fffd||fffd|:|fffd||fffd|Windows|5e2||fffd||fffd||fffd||fffd||437||fffd||fffd||fffd||4e6||fffd||f3||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|
''''|fffd||fffd||fffd||fffd|:lngKeyIndex:=|fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim strKeyName As String
    Dim strDefault As Variant
    strKeyName = Choose(lngKeyIndex, "SerialNumber", "MailAddress", "TrackDate")   ''''|fffd||2bc||fffd||fffd||fffd||5b7|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    strDefault = Choose(lngKeyIndex, Chr$(48), Chr$(45), "2000/01/01")
    RegGetSetting = GetSetting(AppName:=mstrREG_APP_NAME, Section:=mstrREG_SEC_NAME, Key:=strKeyName, Default:=strDefault)
End Function

Public Sub RegDeleteSetting()
''''|fffd||fffd||fffd||fffd|:|fffd||fffd|Windows|5e2||fffd||fffd||fffd||fffd||fffd||27e||fffd||fffd||4e6||fffd||f3||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd||fffd|
    DeleteSetting AppName:=mstrREG_APP_NAME
End Sub

Public Sub RegSaveSetting(lngKeyIndex As Long, strSetting As String)
''''|fffd||fffd||fffd||fffd|:|fffd||fffd|Windows|5e2||fffd||fffd||fffd||fffd||431||fffd||fffd||fffd||4e6||fffd||f3||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|
''''|fffd||fffd||fffd||fffd|:lngKeyIndex:=|fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|;strSetting:=|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|
    Dim strKeyName As String
    strKeyName = Choose(lngKeyIndex, "SerialNumber", "MailAddress", "TrackDate")   ''''|fffd||2bc||fffd||fffd||fffd||5b7|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    SaveSetting AppName:=mstrREG_APP_NAME, Section:=mstrREG_SEC_NAME, Key:=strKeyName, Setting:=strSetting
End Sub

Attribute VB_Name = "wsChart"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "wsDetail"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "wsOverView"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "wsTask"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "wsTracker"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "yixun"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'---------------------------------------------------------------------------------------
' (c) Copyright 1999-2029 ExcelHome.Net, All Rights Reserved
' E-Mail    : tech@ExcelHome.net
' Homepage  : http://tech.excelhome.net
'---------------------------------------------------------------------------------------
' Module    : yixun
' Author    : HHAAMM
' Date      : 2014/12/16
' Purpose   : |fffd||fffd||221||fffd||fffd||478||fffd||fffd||fffd||fffd||1b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37a||17c||6f8||fffd|
' Version   : 1.0.0
'---------------------------------------------------------------------------------------

Option Explicit

Private maDT() As String
Private mstrURL_Web As String
Private mstrHTML_Web As String
Private mstrHTML_Name As String
Private mstrHTML_Price As String
Private mstrHTML_Type As String
Private mstrName_BaoBei As String
Private mstrPrice_BaoBei As String
Private mstrType_BaoBei As String

Private Sub Class_Initialize()
    If gblnUSER_FROM_CAB Then    ''''|fffd||fffd||fffd||221||fffd||fffd|CAB(XML)|fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||435||13d||6b5||fffd||2b1||5b5|
        LoadClassTagNames Me.ClassID, maDT    ''''|fffd||fffd||fffd||631||fffd||1e9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Else
        ReDim maDT(0 To gintUSER_TAG_COUNT)
        maDT(1) = "<h1"
        maDT(2) = "H1"
        maDT(3) = """xbase_item xprice"""
        maDT(4) = "<span"
        maDT(5) = "/span>"
        maDT(6) = "SPAN"
        maDT(7) = ">|fffd||fffd||26b|<"
        maDT(8) = "<td"
        maDT(9) = "/td>"
    End If
End Sub

Public Function GetBaoBeiAttributes(strURL As String, strName As String, vntAttributes As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strURL=|fffd||3f8||fffd||fffd||fffd||fffd||478||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b7|
    mstrURL_Web = strURL
    If GetHTML_Web = True Then
        If GetHTML_Name = True Then
            If GetName_BaoBei = True Then
                If GetHTML_Price = True Then
                    If GetPrice_BaoBei = True Then
                        If GetHTML_Type = True Then
                            Call GetType_BaoBei
                        Else
                            mstrType_BaoBei = "-"
                        End If
                        strName = mstrName_BaoBei
                        ReDim vntAttributes(1 To 1, 1 To 3)
                        vntAttributes(1, 1) = mstrPrice_BaoBei
                        vntAttributes(1, 2) = mstrType_BaoBei
                        vntAttributes(1, 3) = mstrURL_Web
                        GetBaoBeiAttributes = True
                    End If
                End If
            End If
        End If
    End If
End Function

Public Function GetBaoBePrice(strPriceKey As String, vntReturned As Variant) As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||fffd|
''''|fffd||fffd||fffd||fffd||fffd||fffd|strPriceKey=|fffd||6f8||fffd||63c||fffd||fffd||fffd|
    On Error GoTo ErrorHandler
    mstrURL_Web = strPriceKey
    If GetHTML_Web = True Then
        If GetHTML_Price = True Then
            If GetPrice_BaoBei = True Then
                vntReturned = mstrPrice_BaoBei
                GetBaoBePrice = True
            End If
        End If
    End If
    On Error GoTo 0
    Exit Function
ErrorHandler:
    vntReturned = "Err Number: " & Err.Number & vbTab & "Err Description: " & Err.Description
End Function

Private Function GetHTML_Web() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||fffd||fffd||131||fffd|
    On Error GoTo ErrorHandler
    With CreateObject("WINHTTP.WINHTTPREQUEST.5.1")
        .Open "GET", mstrURL_Web, False
        .Send
        mstrHTML_Web = .responseText
        GetHTML_Web = True
    End With
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetHTML_Web") = True Then Resume Next
End Function

Private Function GetHTML_Name() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||6eac||fffd||431||fffd||fffd||fffd||fffd||fffd||fffd||1b5||fffd|h1|fffd||fffd||1e9|
    Dim astrSplit_1() As String
    Dim astrSplit_2() As String
    Dim I As Long
    Dim J As Long
    '    maDT(1) = "<h1"
    astrSplit_1 = Split(mstrHTML_Web, maDT(1))
    For I = 1 To UBound(astrSplit_1)
        J = J + 1
        astrSplit_2 = Split(astrSplit_1(I), maDT(2))
        mstrHTML_Name = mstrHTML_Name & maDT(1) & astrSplit_2(0) & maDT(2)
    Next
    GetHTML_Name = (J > 0)
End Function

Private Function GetName_BaoBei() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim oLabel_Web As Object
    On Error GoTo ErrorHandler
    '    maDT(2) = "H1"
    With CreateObject("HTMLFILE")
        .body.innerHTML = mstrHTML_Name
        Set oLabel_Web = .All.tags("" & maDT(2) & "")
    End With
    If Not (oLabel_Web Is Nothing) Then mstrName_BaoBei = oLabel_Web(0).innerTEXT
    GetName_BaoBei = (Len(mstrName_BaoBei) > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetName_BaoBei") = True Then Resume Next
End Function

Private Function GetHTML_Price() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||6eac||fffd||431||fffd||fffd||fffd||fffd||6f8||fffd||fffd|span|fffd||fffd||1e9|
    Dim astrSplit() As String
    '    maDT(3) = """xbase_item xprice"""
    '    maDT(4) = "<span"
    '    maDT(5) = "/span>"
    astrSplit = Split(mstrHTML_Web, maDT(3))
    If UBound(astrSplit) > 0 Then
        astrSplit = Split(astrSplit(1), maDT(4))
        If UBound(astrSplit) > 0 Then
            astrSplit = Split(astrSplit(1), maDT(5))
            mstrHTML_Price = maDT(4) & astrSplit(0) & maDT(5)
            GetHTML_Price = True
        End If
    End If
End Function

Private Function GetPrice_BaoBei() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||6f8||fffd|
    Dim oLabel_Web As Object
    On Error GoTo ErrorHandler
    '    maDT(6) = "SPAN"
    With CreateObject("HTMLFILE")
        .body.innerHTML = mstrHTML_Price
        Set oLabel_Web = .All.tags("" & maDT(6) & "")
    End With
    If Not (oLabel_Web Is Nothing) Then
        mstrPrice_BaoBei = oLabel_Web(0).innerTEXT
        If Asc(Left(mstrPrice_BaoBei, 1)) < 0 Then mstrPrice_BaoBei = Mid(mstrPrice_BaoBei, 2)
        mstrPrice_BaoBei = Val(mstrPrice_BaoBei)
    End If
    GetPrice_BaoBei = (Val(mstrPrice_BaoBei) > 0)
    On Error GoTo 0
    Exit Function
ErrorHandler:
    If ExcelHomeErrorHandler("GetPrice_BaoBei") = True Then Resume Next
End Function

Private Function GetHTML_Type() As Boolean
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||4b3||fffd||6eac||fffd||431||fffd||fffd||fffd||fffd||fffd||fffd||375||fffd|td|fffd||fffd||1e9|
    Dim astrSplit() As String
    '    maDT(7) = ">|fffd||fffd||26b|<"
    '    maDT(8) = "<td"
    '    maDT(9) = "/td>"
    astrSplit = Split(mstrHTML_Web, maDT(7))
    If UBound(astrSplit) > 0 Then
        astrSplit = Split(astrSplit(1), maDT(8))
        If UBound(astrSplit) > 0 Then
            astrSplit = Split(astrSplit(1), maDT(9))
            mstrHTML_Type = maDT(8) & astrSplit(0) & maDT(9)
            GetHTML_Type = True
        End If
    End If
End Function

Private Sub GetType_BaoBei()
''''|fffd||fffd||fffd||723||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    On Error GoTo ErrorHandler
    With CreateObject("HTMLFILE")
        .body.innerHTML = mstrHTML_Type
        mstrType_BaoBei = .All(0).innerTEXT
    End With
    On Error GoTo 0
    Exit Sub
ErrorHandler:
    If ExcelHomeErrorHandler("GetType_BaoBei") = True Then Resume Next
End Sub

Public Property Get ClassID() As Long
    ClassID = 10    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
End Property

Public Property Get ClassTags() As Variant
    ClassTags = maDT ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1e9|
End Property

Public Property Get LinkTG(strURL As String) As String
    If Len(maDT(0)) Then    ''''|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||fffd||2b1|
        LinkTG = GetLinkLocation(Me.ClassID, strURL, maDT(0))    ''''|fffd||fffd||fffd||630||fffd||fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||4f5||fffd||fffd||fffd||5b7|
    Else
        LinkTG = strURL    ''''|fffd||fffd||fffd||fffd||52d|URL
    End If
End Property



INQUEST-PP=macro
