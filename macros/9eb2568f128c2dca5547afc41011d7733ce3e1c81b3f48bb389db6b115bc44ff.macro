Attribute VB_Name = "Module1"

Sub Suggested_VM_SKU()
    
'   Output String for Suggested SKU Name.
    Dim SKU_Name As String
    
'   Create handles for desired worksheets.
    Dim currentWorksheet As Worksheet
    Set currentWorksheet = Sheets("DefineByVMFootprint")
    Dim referenceWorksheet As Worksheet
    Set referenceWorksheet = Sheets("SKUsRecommendationPage")
    
'    Output Location for Suggested SKU
    Dim SKU_Name_Msg As Range
    Set SKU_Name_Msg = currentWorksheet.Range("S6")
    
    '   Variables to check consumed Cores.
    Dim sku1TotalCores As Range
    Dim sku2TotalCores As Range
    Dim sku3TotalCores As Range
    Dim sku4TotalCores As Range
    Dim sku5TotalCores As Range
    Dim availableCores As Range
    Set sku1TotalCores = referenceWorksheet.Range("F33")
    Set sku2TotalCores = referenceWorksheet.Range("G33")
    Set sku3TotalCores = referenceWorksheet.Range("H33")
    Set sku4TotalCores = referenceWorksheet.Range("I33")
    Set sku5TotalCores = referenceWorksheet.Range("J33")
    Set consumedCores = currentWorksheet.Range("M59")
    
'   Variables to check consumed Memory.
    Dim sku1TotalMemory As Range
    Dim sku2TotalMemory As Range
    Dim sku3TotalMemory As Range
    Dim sku4TotalMemory As Range
    Dim sku5TotalMemory As Range
    Dim availableMemory As Range
    Set sku1TotalMemory = referenceWorksheet.Range("N30")
    Set sku2TotalMemory = referenceWorksheet.Range("O30")
    Set sku3TotalMemory = referenceWorksheet.Range("P30")
    Set sku4TotalMemory = referenceWorksheet.Range("Q30")
    Set sku5TotalMemory = referenceWorksheet.Range("R30")
    Set consumedMemory = currentWorksheet.Range("M60")
    
'   Variables to check consumed Temp Disk.
    Dim sku1TotalTemp As Range
    Dim sku2TotalTemp As Range
    Dim sku3TotalTemp As Range
    Dim sku4TotalTemp As Range
    Dim sku5TotalTemp As Range
    Dim availableTemp As Range
    Set sku1TotalTemp = referenceWorksheet.Range("F43")
    Set sku2TotalTemp = referenceWorksheet.Range("G43")
    Set sku3TotalTemp = referenceWorksheet.Range("H43")
    Set sku4TotalTemp = referenceWorksheet.Range("I43")
    Set sku5TotalTemp = referenceWorksheet.Range("J43")
    Set consumedTemp = currentWorksheet.Range("M61")
    
'   Variables to check consumed Disk.
    Dim sku1TotalDisk As Range
    Dim sku2TotalDisk As Range
    Dim sku3TotalDisk As Range
    Dim sku4TotalDisk As Range
    Dim sku5TotalDisk As Range
    Dim availableDisk As Range
    Set sku1TotalDisk = referenceWorksheet.Range("N37")
    Set sku2TotalDisk = referenceWorksheet.Range("O37")
    Set sku3TotalDisk = referenceWorksheet.Range("P37")
    Set sku4TotalDisk = referenceWorksheet.Range("Q37")
    Set sku5TotalDisk = referenceWorksheet.Range("R37")
    Set consumedDisk = currentWorksheet.Range("M62")
    
'   Variables used to dispaly suggested SKU name.
    Dim sku1Name As Range
    Dim sku2Name As Range
    Dim sku3Name As Range
    Dim sku4Name As Range
    Dim sku5Name As Range
    Dim noSkuName As Range
    Set sku1Name = referenceWorksheet.Range("D47")
    Set sku2Name = referenceWorksheet.Range("D48")
    Set sku3Name = referenceWorksheet.Range("D49")
    Set sku4Name = referenceWorksheet.Range("D50")
    Set sku5Name = referenceWorksheet.Range("D51")
    Set noSkuName = referenceWorksheet.Range("D52")
    
'   Working Variables - start with smallest SKU.
    Dim selectedSKUNumber As Integer
    selectedSKUNumber = 1
    Dim endingSKUNumber As Integer
    endingSKUNumber = 6

    Dim totalAvailableCores As Double
    
    For skuSize = selectedSKUNumber To endingSKUNumber
    
        selectedSKUNumber = skuSize
        
        Select Case skuSize
            Case 1
                totalAvailableCores = sku1TotalCores.Value
            Case 2
                totalAvailableCores = sku2TotalCores.Value
            Case 3
                totalAvailableCores = sku3TotalCores.Value
            Case 4
                totalAvailableCores = sku4TotalCores.Value
            Case 5
                totalAvailableCores = sku5TotalCores.Value
            Case 6
                ' MsgBox ("No SKU supports current VM values")
         End Select
         
         If totalAvailableCores > consumedCores Then
             Exit For
         End If
        
    Next skuSize
    
'    MsgBox (selectedSKUNumber)
    
    Dim totalAvailableMemory As Double
    
    For skuSize = selectedSKUNumber To endingSKUNumber
    
        selectedSKUNumber = skuSize
        
        Select Case skuSize
            Case 1
                totalAvailableMemory = sku1TotalMemory.Value
            Case 2
                totalAvailableMemory = sku2TotalMemory.Value
            Case 3
                totalAvailableMemory = sku3TotalMemory.Value
            Case 4
                totalAvailableMemory = sku4TotalMemory.Value
            Case 5
                totalAvailableMemory = sku5TotalMemory.Value
            Case 6
                ' MsgBox ("No SKU supports current VM values")
         End Select
         
         If totalAvailableMemory > consumedMemory Then
             Exit For
         End If
        
    Next skuSize
    
'    MsgBox (selectedSKUNumber)
    
    Dim totalAvailableTemp As Double
    
    For skuSize = selectedSKUNumber To endingSKUNumber
    
        selectedSKUNumber = skuSize
        
        Select Case skuSize
            Case 1
                totalAvailableTemp = sku1TotalTemp.Value * 1024
            Case 2
                totalAvailableTemp = sku2TotalTemp.Value * 1024
            Case 3
                totalAvailableTemp = sku3TotalTemp.Value * 1024
            Case 4
                totalAvailableTemp = sku4TotalTemp.Value * 1024
            Case 5
                totalAvailableTemp = sku5TotalTemp.Value * 1024
            Case 6
                ' MsgBox ("No SKU supports current VM values")
         End Select
         
         If totalAvailableTemp > consumedTemp Then
             Exit For
         End If
        
    Next skuSize
    
'    MsgBox (selectedSKUNumber)
    
    Dim totalAvailableDisk As Double
    
    For skuSize = selectedSKUNumber To endingSKUNumber
    
        selectedSKUNumber = skuSize
        
        Select Case skuSize
            Case 1
                totalAvailableDisk = sku1TotalDisk.Value * 1024
            Case 2
                totalAvailableDisk = sku2TotalDisk.Value * 1024
            Case 3
                totalAvailableDisk = sku3TotalDisk.Value * 1024
            Case 4
                totalAvailableDisk = sku4TotalDisk.Value * 1024
            Case 5
                totalAvailableDisk = sku5TotalDisk.Value * 1024
            Case 6
                ' MsgBox ("No SKU supports current VM values")
         End Select
         
         If totalAvailableDisk > consumedDisk Then
             Exit For
         End If
        
    Next skuSize
    
'    MsgBox (selectedSKUNumber)
    
    Select Case selectedSKUNumber
        Case 1
            SKU_Name = sku1Name.Value
        Case 2
            SKU_Name = sku2Name.Value
        Case 3
            SKU_Name = sku3Name.Value
        Case 4
            SKU_Name = sku4Name.Value
        Case 5
            SKU_Name = sku5Name.Value
        Case 6
            SKU_Name = noSkuName.Value
    End Select
    
'   Now Post the suggested SKU Name.
    SKU_Name_Msg.Value = SKU_Name
    MsgBox ("Suggested VM SKU = " & SKU_Name)
    
End Sub
Attribute VB_Name = "Module2"
Attribute VB_Name = "Module3"

Sub Suggested_Tenant_SKU()
    
'   Create handles for desired worksheets.
    Dim tenantWorksheet As Worksheet
    Set tenantWorksheet = Sheets("DefineByWorkloadFootprint")
    Dim referenceWorksheet As Worksheet
    Set referenceWorksheet = Sheets("SKUsRecommendationPage")
    
'   Output String for Suggested SKU Name.
    Dim SKU_Name As String
    
'    Output Location for Suggested SKU
    Dim SKU_Name_Msg As Range
    Set SKU_Name_Msg = tenantWorksheet.Range("S6")
    
    '   Variables to check consumed Cores.
    Dim sku1TotalCores As Range
    Dim sku2TotalCores As Range
    Dim sku3TotalCores As Range
    Dim sku4TotalCores As Range
    Dim sku5TotalCores As Range
    Dim availableCores As Range
    Set sku1TotalCores = referenceWorksheet.Range("X33")
    Set sku2TotalCores = referenceWorksheet.Range("Y33")
    Set sku3TotalCores = referenceWorksheet.Range("Z33")
    Set sku4TotalCores = referenceWorksheet.Range("AA33")
    Set sku5TotalCores = referenceWorksheet.Range("AB33")
    Set consumedCores = tenantWorksheet.Range("G99")
    
'   Variables to check consumed Memory.
    Dim sku1TotalMemory As Range
    Dim sku2TotalMemory As Range
    Dim sku3TotalMemory As Range
    Dim sku4TotalMemory As Range
    Dim sku5TotalMemory As Range
    Dim availableMemory As Range
    Set sku1TotalMemory = referenceWorksheet.Range("AF30")
    Set sku2TotalMemory = referenceWorksheet.Range("AG30")
    Set sku3TotalMemory = referenceWorksheet.Range("AH30")
    Set sku4TotalMemory = referenceWorksheet.Range("AI30")
    Set sku5TotalMemory = referenceWorksheet.Range("AJ30")
    Set consumedMemory = tenantWorksheet.Range("G100")
    
'   Variables to check consumed Temp Disk.
    Dim sku1TotalTemp As Range
    Dim sku2TotalTemp As Range
    Dim sku3TotalTemp As Range
    Dim sku4TotalTemp As Range
    Dim sku5TotalTemp As Range
    Dim availableTemp As Range
    Set sku1TotalTemp = referenceWorksheet.Range("X43")
    Set sku2TotalTemp = referenceWorksheet.Range("Y43")
    Set sku3TotalTemp = referenceWorksheet.Range("Z43")
    Set sku4TotalTemp = referenceWorksheet.Range("AA43")
    Set sku5TotalTemp = referenceWorksheet.Range("AB43")
    Set consumedTemp = tenantWorksheet.Range("G101")
    
'   Variables to check consumed Disk.
    Dim sku1TotalDisk As Range
    Dim sku2TotalDisk As Range
    Dim sku3TotalDisk As Range
    Dim sku4TotalDisk As Range
    Dim sku5TotalDisk As Range
    Dim availableDisk As Range
    Set sku1TotalDisk = referenceWorksheet.Range("AF37")
    Set sku2TotalDisk = referenceWorksheet.Range("AG37")
    Set sku3TotalDisk = referenceWorksheet.Range("AH37")
    Set sku4TotalDisk = referenceWorksheet.Range("AI37")
    Set sku5TotalDisk = referenceWorksheet.Range("AJ37")
    Set consumedDisk = tenantWorksheet.Range("G102")
    
'   Variables used to dispaly suggested SKU name.
    Dim sku1Name As Range
    Dim sku2Name As Range
    Dim sku3Name As Range
    Dim sku4Name As Range
    Dim sku5Name As Range
    Dim noSkuName As Range
    Set sku1Name = referenceWorksheet.Range("V47")
    Set sku2Name = referenceWorksheet.Range("V48")
    Set sku3Name = referenceWorksheet.Range("V49")
    Set sku4Name = referenceWorksheet.Range("V50")
    Set sku5Name = referenceWorksheet.Range("V51")
    Set noSkuName = referenceWorksheet.Range("V52")
    
'   Working Variables - start with smallest SKU.
    Dim selectedSKUNumber As Integer
    selectedSKUNumber = 1
    Dim endingSKUNumber As Integer
    endingSKUNumber = 6

    Dim totalAvailableCores As Double
    
    For skuSize = selectedSKUNumber To endingSKUNumber
    
        selectedSKUNumber = skuSize
        
        Select Case skuSize
            Case 1
                totalAvailableCores = sku1TotalCores.Value
            Case 2
                totalAvailableCores = sku2TotalCores.Value
            Case 3
                totalAvailableCores = sku3TotalCores.Value
            Case 4
                totalAvailableCores = sku4TotalCores.Value
            Case 5
                totalAvailableCores = sku5TotalCores.Value
            Case 6
                ' MsgBox ("No SKU supports current VM values")
         End Select
         
         If totalAvailableCores > consumedCores Then
             Exit For
         End If
        
    Next skuSize
    
'    MsgBox (selectedSKUNumber)
    
    Dim totalAvailableMemory As Double
    
    For skuSize = selectedSKUNumber To endingSKUNumber
    
        selectedSKUNumber = skuSize
        
        Select Case skuSize
            Case 1
                totalAvailableMemory = sku1TotalMemory.Value
            Case 2
                totalAvailableMemory = sku2TotalMemory.Value
            Case 3
                totalAvailableMemory = sku3TotalMemory.Value
            Case 4
                totalAvailableMemory = sku4TotalMemory.Value
            Case 5
                totalAvailableMemory = sku5TotalMemory.Value
            Case 6
                ' MsgBox ("No SKU supports current VM values")
         End Select
         
         If totalAvailableMemory > consumedMemory Then
             Exit For
         End If
        
    Next skuSize
    
'    MsgBox (selectedSKUNumber)
    
    Dim totalAvailableTemp As Double
    
    For skuSize = selectedSKUNumber To endingSKUNumber
    
        selectedSKUNumber = skuSize
        
        Select Case skuSize
            Case 1
                totalAvailableTemp = sku1TotalTemp.Value * 1024
            Case 2
                totalAvailableTemp = sku2TotalTemp.Value * 1024
            Case 3
                totalAvailableTemp = sku3TotalTemp.Value * 1024
            Case 4
                totalAvailableTemp = sku4TotalTemp.Value * 1024
            Case 5
                totalAvailableTemp = sku5TotalTemp.Value * 1024
            Case 6
                ' MsgBox ("No SKU supports current VM values")
         End Select
         
         If totalAvailableTemp > consumedTemp Then
             Exit For
         End If
        
    Next skuSize
    
'    MsgBox (selectedSKUNumber)
    
    Dim totalAvailableDisk As Double
    
    For skuSize = selectedSKUNumber To endingSKUNumber
    
        selectedSKUNumber = skuSize
        
        Select Case skuSize
            Case 1
                totalAvailableDisk = sku1TotalDisk.Value * 1024
            Case 2
                totalAvailableDisk = sku2TotalDisk.Value * 1024
            Case 3
                totalAvailableDisk = sku3TotalDisk.Value * 1024
            Case 4
                totalAvailableDisk = sku4TotalDisk.Value * 1024
            Case 5
                totalAvailableDisk = sku5TotalDisk.Value * 1024
            Case 6
                ' MsgBox ("No SKU supports current VM values")
         End Select
         
         If totalAvailableDisk > consumedDisk Then
             Exit For
         End If
        
    Next skuSize
    
'    MsgBox (selectedSKUNumber)
    
    Select Case selectedSKUNumber
        Case 1
            SKU_Name = sku1Name.Value
        Case 2
            SKU_Name = sku2Name.Value
        Case 3
            SKU_Name = sku3Name.Value
        Case 4
            SKU_Name = sku4Name.Value
        Case 5
            SKU_Name = sku5Name.Value
        Case 6
            SKU_Name = noSkuName.Value
    End Select
    
'   Now Post the suggested SKU Name.
    SKU_Name_Msg.Value = SKU_Name
    MsgBox ("Suggested Workload SKU = " & SKU_Name)

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
