Attribute VB_Name = "Chart1"
Attribute VB_Base = "0{00020821-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Module1"
Attribute VB_Name = "Module2"
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub CommandButton1_Click()

Sheet3.Select
ActiveSheet.Calculate
Sheet1.Select
ActiveSheet.Calculate
Sheet2.Select
ActiveSheet.Calculate
Sheet4.Select
ActiveSheet.Calculate
Sheet5.Select
ActiveSheet.Calculate
Sheet1.Select

End Sub

Private Sub Worksheet_Change(ByVal Target As Range)


End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)


End Sub

Sub sheetCalc()
Worksheets("DataEntry").Calculate
End Sub
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton6, 6, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 5, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 4, 2, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 3, 3, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 2, 4, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 1, 5, MSForms, CommandButton"
Private Sub CommandButton1_Click()
Sheet4.Select
End Sub

Private Sub CommandButton2_Click()
Sheet5.Select
End Sub

Private Sub CommandButton3_Click()
Sheet2.Select
End Sub

Private Sub CommandButton4_Click()
Sheet16.Select
End Sub

Private Sub CommandButton5_Click()
Sheet3.Select
End Sub

Private Sub CommandButton6_Click()
Sheet1.Select
End Sub
Attribute VB_Name = "Sheet16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 6, 0, MSForms, CommandButton"
'Purpose   :    Converts a 1d or 2d array to a deliminated String
'Inputs    :    avInArray                       The array to convert to a string
'               sDelimRows                      Delimeter to seperate rows
'               sDelimCols                      Delimeter to seperate columns (for 2d arrays)
'Outputs   :    A string containing all the elements of avInArray seperated by sDelimRows
'Notes     :

Function ArrayToString(avInArray As Variant, Optional sDelimRows As String = " ", Optional sDelimCols As String = " ") As String
    Dim lThisItem As Long, lNumItems As Long, lFirstRow As Long, lLastRow As Long
    Dim lThisRow As Long, lThisCol As Long, lFirstCol As Long, lLastCol As Long
    
    On Error GoTo ExitProc
    Select Case ArrayNumDimensions(avInArray)
    Case 0
        'Empty array
    Case 1
        '1D Array
        For lThisItem = LBound(avInArray) To UBound(avInArray)
            ArrayToString = ArrayToString & (CStr(avInArray(lThisItem)) & sDelimRows)                     'Join the small to the large
        Next
    Case 2
        '2D Arrays
        lFirstRow = LBound(avInArray, 2)
        lLastRow = UBound(avInArray, 2)
        lFirstCol = LBound(avInArray, 1)
        lLastCol = UBound(avInArray, 1)
        'Loop over each column then row to create the result string
        For lThisCol = lFirstCol To lLastCol
            For lThisRow = lFirstRow To lLastRow
                ArrayToString = ArrayToString & (CStr(avInArray(lThisCol, lThisRow)) & sDelimRows)       'Join the small to the large
            Next
            ArrayToString = ArrayToString & sDelimCols
        Next
    Case Else
        MsgBox "ArrayToString: Invalid array structure"
    End Select

ExitProc:
    On Error GoTo 0
End Function

Private Sub CommandButton1_Click()

Dim total_ntank, total_gtank, start_year, start_month As Integer
Dim fish_type As String
Dim objRange As Range
Dim intVal As Integer

Sheet16.Select

Set objRange = ActiveSheet.Cells(9, 2)
fish_type = (objRange.Value)

Set objRange = ActiveSheet.Cells(24, 2)
phase1_time = (objRange.Value)

Set objRange = ActiveSheet.Cells(24, 3)
phase2_time = (objRange.Value)

Set objRange = ActiveSheet.Cells(24, 4)
phase3_time = (objRange.Value)

Set objRange = ActiveSheet.Cells(20, 2)
total_ntank = (objRange.Value)

Set objRange = ActiveSheet.Cells(21, 2)
total_gtank = (objRange.Value)

Set objRange = ActiveSheet.Cells(7, 2)
start_year = (objRange.Value)

Set objRange = ActiveSheet.Cells(30, 2)
start_month = (objRange.Value)

Set objRange = ActiveSheet.Cells(31, 2)
tank_p1tobused = (objRange.Value)

Set objRange = ActiveSheet.Cells(31, 3)
tank_p2tobused = (objRange.Value)

Set objRange = ActiveSheet.Cells(31, 4)
tank_p3tobused = (objRange.Value)

Set objRange = ActiveSheet.Cells(32, 3)
p2_tanks = (objRange.Value)

Set objRange = ActiveSheet.Cells(32, 4)
p3_tanks = (objRange.Value)



Dim p1_tank(0 To 50) As Integer
Dim p2_tank(0 To 50) As Integer
Dim p3_tank(0 To 50) As Integer
Dim p1_tankStatus(0 To 50) As String
Dim p2_tankStatus(0 To 50) As String
Dim p3_tankStatus(0 To 50) As String
Dim i As Integer

i = 0
'Initialize all the tanks to empty
While i < total_ntank
p1_tank(i) = 0
p1_tankStatus(i) = "Empty"
i = i + 1
Wend

i = 0
While i < p2_tanks
p2_tank(i) = 1
p2_tankStatus(i) = "Empty"
i = i + 1
Wend

i = 0
While i < p3_tanks
p3_tank(i) = 1
p3_tankStatus(i) = "Empty"
i = i + 1
Wend


Dim years, harvest, year, months, month, n_Row, n_Col, n_Row1, n_Col1 As Integer

years = 10
months = 12
n_Row1 = 1
year = 1
month = start_month
n_Row = 35
harvest = 1

' Clearing the cells at the start
ActiveSheet.Range("B38:O70").ClearContents
ActiveSheet.Range("B38:O70").Interior.ColorIndex = 0
Sheet2.Select
ActiveSheet.Range("X4:AJ36").ClearContents
ActiveSheet.Range("X4:AJ36").Interior.ColorIndex = 0
Sheet16.Select

While year <= years
 While month <= months
    If (fish_type <> "Shrimp") Then
        'increment the age of all the tanks
        For i = 0 To total_ntank - 1
            If (p1_tankStatus(i) = "Full") Then
                p1_tank(i) = p1_tank(i) + 1
            End If
        Next i
    
        For i = 0 To p2_tanks - 1
            If (p2_tankStatus(i) = "Full") Then
                p2_tank(i) = p2_tank(i) + 1
            End If
        Next i
    
        For i = 0 To p3_tanks - 1
            If (p3_tankStatus(i) = "Full") Then
                p3_tank(i) = p3_tank(i) + 1
            End If
        Next i
        'Check if any of the P3 tanks have reached their max phase time to harvest
        For i = 0 To p3_tanks - 1
            If (p3_tank(i) = phase3_time) Then
                    p3_tankStatus(i) = "Empty"
                    p3_tank(i) = 0
                                  
                    ActiveSheet.Cells(n_Row + 1, n_Col).Interior.ColorIndex = 20
                    ActiveSheet.Cells(n_Row + 1, n_Col) = "Harvest"
                    
                    harvest_flag = "YES"
            End If
        Next i
    
        'check how many P3 tanks are empty
        p3_ready = 0
        For i = 0 To p3_tanks - 1
            If (p3_tankStatus(i) = "Empty") Then
                p3_ready = p3_ready + 1
            End If
        Next i
        'check how many p2 tanks are empty
        p2_ready = 0
        For i = 0 To p2_tanks - 1
            If (p2_tank(i) = phase2_time) Then
                p2_tankStatus(i) = "Empty"
                p2_tank(i) = 0
                p2_ready = p2_ready + 1
            End If
        Next i
        
        Dim ratio As Double
        ratio = tank_p3tobused / tank_p2tobused
        Dim j As Integer
    
        j = 0
        stocked = 1
        'Stock the tanks from p2 to p3 based on the ratio
        While j < p2_ready * ratio
            For i = 0 To p3_tanks - 1
                If (p3_tankStatus(i) = "Empty") Then
                    p3_tank(i) = 0
                    p3_tankStatus(i) = "Full"
                    j = j + 1
               
                    Sheet2.Select
                    ActiveSheet.Cells(n_Row1 + 2, n_Col1) = "Stock P3"
                    Sheet16.Select
                    Exit For
                End If
            Next i
        Wend
        'Check if p1 tanks are ready
        p1_ready = 0
        For i = 0 To total_ntank - 1
            If (p1_tank(i) = phase1_time) Then
                p1_tankStatus(i) = "Empty"
                p1_tank(i) = 0
                p1_ready = p1_ready + 1
            End If
        Next i
    
        ratio = tank_p2tobused / tank_p1tobused
        j = 0
        'fill the p2 tanks based on the ratio
        While j < p1_ready * ratio
            For i = 0 To p2_tanks - 1
                If (p2_tankStatus(i) = "Empty") Then
                    p2_tank(i) = 0
                    p2_tankStatus(i) = "Full"
                    j = j + 1
                    ' to print on the cash flow sheet
                    Sheet2.Select
                    ActiveSheet.Cells(n_Row1 + 1, n_Col1) = "Stock P2"
                    Sheet16.Select
                    Exit For
                End If
            Next i
        Wend
    
        'print on new row for the next year
        If (month = 1 Or month = start_month) Then
            n_Row = n_Row + 3
            n_Row1 = n_Row1 + 3
        End If
     
        While stocked <= tank_p1tobused
            For i = 0 To total_ntank - 1
                If (p1_tankStatus(i) = "Empty") Then
                    p1_tankStatus(i) = "Full"
                    p1_tank(i) = 0
                    n_Col = month + 1
               
                    ActiveSheet.Cells(n_Row, n_Col).Interior.ColorIndex = 15
                    ActiveSheet.Cells(n_Row, n_Col) = "Stock nursery"
                    ' to print on the cash flow sheet
                    Sheet2.Select
                    n_Col1 = month + 23
               
                    ActiveSheet.Cells(n_Row1, n_Col1) = "Stock nursery"
                
                    Sheet16.Select
                    stocked = stocked + 1
                    Exit For
                End If
            Next i
        Wend
        month = month + 1
        If (harvest_flag = "YES") Then
            harvest = harvest + 1
            ActiveSheet.Cells(n_Row + 1, 14) = harvest
        End If
        '###########################################################################################################################################
        ' shrimp else need to be added
        
        Else
        'increment the age of all the tanks
        For i = 0 To total_ntank - 1
            If (p1_tankStatus(i) = "Full") Then
                p1_tank(i) = p1_tank(i) + 1
                
            End If
        Next i
    
        For i = 0 To p2_tanks - 1
            If (p2_tankStatus(i) = "Full") Then
                p2_tank(i) = p2_tank(i) + 1
            End If
        Next i
    
        'Check if any of the P2 tanks have reached their max phase time to harvest
        For i = 0 To p2_tanks - 1
            If (p2_tank(i) = phase2_time) Then
                    p2_tankStatus(i) = "Empty"
                    p2_tank(i) = 0
                                  
                    ActiveSheet.Cells(n_Row + 1, n_Col).Interior.ColorIndex = 20
                    ActiveSheet.Cells(n_Row + 1, n_Col) = "Harvest"
                    
                    harvest_flag = "YES"
            End If
        Next i
    
        'check how many P2 tanks are empty
        p2_ready = 0
        For i = 0 To p2_tanks - 1
            If (p2_tankStatus(i) = "Empty") Then
                p2_ready = p2_ready + 1
            End If
        Next i
        
        
        j = 0
        stocked = 1
        
        'Check if p1 tanks are ready
        p1_ready = 0
        For i = 0 To total_ntank - 1
            If (p1_tank(i) = phase1_time) Then
                p1_tankStatus(i) = "Empty"
                p1_tank(i) = 0
                p1_ready = p1_ready + 1
              
            End If
        Next i
    
        ratio = tank_p2tobused / tank_p1tobused
     
        j = 0
        'fill the p2 tanks based on the ratio
        While j < p1_ready * ratio
            For i = 0 To p2_tanks - 1
                If (p2_tankStatus(i) = "Empty") Then
                    p2_tank(i) = 0
                    p2_tankStatus(i) = "Full"
                    j = j + 1
                   
                    ' to print on the cash flow sheet
                    Sheet2.Select
                    ActiveSheet.Cells(n_Row1 + 1, n_Col1) = "Stock P2"
                    Sheet16.Select
                    Exit For
                End If
            Next i
        Wend
    
        'print on new row for the next year
        If (month = 1 Or month = start_month) Then
            n_Row = n_Row + 3
            n_Row1 = n_Row1 + 3
        End If
     
        While stocked <= tank_p1tobused
            For i = 0 To total_ntank - 1
                If (p1_tankStatus(i) = "Empty") Then
                    p1_tankStatus(i) = "Full"
                    p1_tank(i) = 0
                    n_Col = month + 1
             
                    ActiveSheet.Cells(n_Row, n_Col).Interior.ColorIndex = 15
                    ActiveSheet.Cells(n_Row, n_Col) = "Stock nursery"
                    ' to print on the cash flow sheet
                    Sheet2.Select
                    n_Col1 = month + 23
               
                    ActiveSheet.Cells(n_Row1, n_Col1) = "Stock nursery"
                
                    Sheet16.Select
                    stocked = stocked + 1
                    Exit For
                End If
            Next i
        Wend
        month = month + 1
        If (harvest_flag = "YES") Then
            harvest = harvest + 1
            ActiveSheet.Cells(n_Row + 1, 14) = harvest
        End If
    End If
        'end of shrimp code
        '###########################################################################################################################################
Wend
year = year + 1
month = 1
'n_Col1 = 24
harvest = 0
start_month = 0
Wend

ActiveSheet.Cells(n_Row + 1, 13).Interior.ColorIndex = 20
ActiveSheet.Cells(n_Row + 1, 13) = "Harvest"
Sheet2.Select

If (fish_type <> "Shrimp") Then
    ActiveSheet.Cells(n_Row1 + 2, 35) = "Stock P3"
End If
ActiveSheet.Cells(n_Row1 + 1, 35) = "Stock P2"

Dim p1_row, p2_row, p3_row, p1_col, p2_col, p3_col, p1_times, p2_times, p3_times As Integer
year = 1
p1_row = 4
p2_row = 5
p3_row = 6
p1_col = 24
p2_col = 24
p3_col = 24
p1_times = 0
p2_times = 0
p3_times = 0
month = 0
While year <= 10
    While month < 12
        
        If (ActiveSheet.Cells(p1_row, p1_col) = "Stock nursery") Then
            p1_times = p1_times + 1
            
        End If
        If (ActiveSheet.Cells(p2_row, p2_col) = "Stock P2") Then
            p2_times = p2_times + 1
            
        End If
        If (ActiveSheet.Cells(p3_row, p3_col) = "Stock P3") Then
            p3_times = p3_times + 1
            
        End If
        month = month + 1
        p1_col = p1_col + 1
        p2_col = p2_col + 1
        p3_col = p3_col + 1
    
    Wend
    ActiveSheet.Cells(p1_row, 36) = p1_times
    ActiveSheet.Cells(p2_row, 36) = p2_times
    ActiveSheet.Cells(p3_row, 36) = p3_times
    p1_times = 0
    p2_times = 0
    p3_times = 0
    p1_row = p1_row + 3
    p2_row = p2_row + 3
    p3_row = p3_row + 3
    month = 0
    p1_col = 24
    p2_col = 24
    p3_col = 24
    year = year + 1
    
Wend
Sheet16.Select
End Sub




Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()

End Sub


INQUEST-PP=macro
