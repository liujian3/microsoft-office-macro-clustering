Attribute VB_Name = "MD5"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'@name      MD5|fffd|N|fffd||fffd||fffd|X|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd|
'
'@version   1.00 - Sun May 13, 2012
'           1.01 - Fri Jul  5, 2013
'           1.02 - Wed Feb  5, 2014
'
'@author    Syunzi Shimohata    <webmaster@taru-net.jp>   http://www.taru-net.jp/
'           Online Reference [http://www.taru-net.jp/excel/excelVBA/MD5/readme.html]
'
'@copyright (C) 2012, Syunzi Shimohata. Japan. All Rights Reserved.
'
'@memo      http://www.ipa.go.jp/security/rfc/RFC1321JA.html
'           md5c.c
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/

'Constants for MD5Transform routine.
Private Const S11 = 7
Private Const S12 = 12
Private Const S13 = 17
Private Const S14 = 22
Private Const S21 = 5
Private Const S22 = 9
Private Const S23 = 14
Private Const S24 = 20
Private Const S31 = 4
Private Const S32 = 11
Private Const S33 = 16
Private Const S34 = 23
Private Const S41 = 6
Private Const S42 = 10
Private Const S43 = 15
Private Const S44 = 21

'MD5 context.
Private Type Context
    state(3) As Long
    count(1) As Long
    buffer(63) As Long
End Type


Private mvarCharset As String
Private mvarText As String
Private mvarFilePath As String
Private mvarStrLen As Long
Private mvarStrByte() As Byte


Private Sub Class_Initialize()
    Me.Charset = "SHIFT-JIS"
End Sub
Private Sub Class_Terminate()
End Sub


'F, G, H and I are basic MD5 functions.
Private Function F(ByVal x As Long, ByVal y As Long, ByVal z As Long) As Long
    F = (x And y) Or ((Not x) And z)
End Function

Private Function G(ByVal x As Long, ByVal y As Long, ByVal z As Long) As Long
    G = (x And z) Or (y And (Not z))
End Function

Private Function h(ByVal x As Long, ByVal y As Long, ByVal z As Long) As Long
    h = x Xor y Xor z
End Function

Private Function i(ByVal x As Long, ByVal y As Long, ByVal z As Long) As Long
    i = y Xor (x Or (Not z))
End Function


'ROTATE_LEFT rotates x left n bits.
Private Function ROTATE_LEFT(ByVal x As Long, ByVal n As Byte) As Long
    ROTATE_LEFT = fncLeftShift(x, n) Or fncRightShift(x, 32 - n)
End Function


'FF, GG, HH, and II transformations for rounds 1, 2, 3, and 4.
'Rotation is separate from addition to prevent recomputation.
Private Sub FF(ByRef a As Long, ByVal b As Long, ByVal c As Long, ByVal d As Long, _
               ByVal x As Long, ByVal s As Long, ByVal ac As Long)
    a = fucAddBit(a, F(b, c, d))
    a = fucAddBit(a, x)
    a = fucAddBit(a, ac)
    a = ROTATE_LEFT(a, s)
    a = fucAddBit(a, b)
End Sub

Private Sub GG(ByRef a As Long, ByVal b As Long, ByVal c As Long, ByVal d As Long, _
               ByVal x As Long, ByVal s As Long, ByVal ac As Long)
    a = fucAddBit(a, G(b, c, d))
    a = fucAddBit(a, x)
    a = fucAddBit(a, ac)
    a = ROTATE_LEFT(a, s)
    a = fucAddBit(a, b)
End Sub

Private Sub HH(ByRef a As Long, ByVal b As Long, ByVal c As Long, ByVal d As Long, _
               ByVal x As Long, ByVal s As Long, ByVal ac As Long)
    a = fucAddBit(a, h(b, c, d))
    a = fucAddBit(a, x)
    a = fucAddBit(a, ac)
    a = ROTATE_LEFT(a, s)
    a = fucAddBit(a, b)
End Sub

Private Sub II(ByRef a As Long, ByVal b As Long, ByVal c As Long, ByVal d As Long, _
               ByVal x As Long, ByVal s As Long, ByVal ac As Long)
    a = fucAddBit(a, i(b, c, d))
    a = fucAddBit(a, x)
    a = fucAddBit(a, ac)
    a = ROTATE_LEFT(a, s)
    a = fucAddBit(a, b)
End Sub


'MD5 initialization. Begins an MD5 operation, writing a new context.
Private Sub MD5Init(ByRef Context As Context)
    Context.count(0) = 0
    Context.count(1) = 0
    
    'Load magic initialization constants.
    Context.state(0) = &H67452301
    Context.state(1) = &HEFCDAB89
    Context.state(2) = &H98BADCFE
    Context.state(3) = &H10325476
End Sub


'MD5 block update operation. Continues an MD5 message-digest
'operation, processing another message block, and updating the
'context.
Private Sub MD5Update(ByRef Context As Context, ByRef valInput As Variant, ByVal inputLen As Long)
    Dim i As Long
    Dim index As Byte
    Dim partLen As Byte


    'Compute number of bytes mod 64
    index = fncRightShift(Context.count(0), 3) And &H3F
    
    'Update number of bits
    Context.count(0) = fucAddBit(Context.count(0), fncLeftShift(inputLen, 3))
    If Context.count(0) < fncLeftShift(inputLen, 3) Then
        Context.count(1) = fucAddBit(Context.count(1), 1)
    End If

    Context.count(1) = fucAddBit(Context.count(1), fncRightShift(inputLen, 29))
    partLen = 64 - index
    
    'Transform as many times as possible.
    If inputLen >= partLen Then
        Call MD5_memcpy(Context.buffer, index, valInput, 0, partLen)
        Call MD5Transform(Context.state, Context.buffer, 0)

        For i = partLen To inputLen - 63 - 1 Step 64
            Call MD5Transform(Context.state, valInput, i)
        Next
        index = 0
    Else
        i = 0
    End If

    'Buffer remaining input
    'Context.buffer = valBuf()
    Call MD5_memcpy(Context.buffer, index, valInput, i, inputLen - i)
End Sub


'MD5 finalization. Ends an MD5 message-digest operation, writing the
'the message digest and zeroizing the context.
Private Sub MD5Final(ByRef digest As Variant, ByRef Context As Context)
    Dim bits(7) As Byte
    Dim index As Byte
    Dim padLen As Byte
    Dim i As Byte

    Call Encode(bits, Context.count, 8)
    index = fncRightShift(Context.count(0), 3) And &H3F
    If index < 56 Then
        padLen = 56 - index
    Else
        padLen = 120 - index
    End If
    

    Call MD5Update(Context, Me.PADDING, padLen)
    Call MD5Update(Context, bits, 8)
    Call Encode(digest, Context.state, 16)
End Sub


'MD5 basic transformation. Transforms state based on block.
Private Sub MD5Transform(ByRef state As Variant, ByRef block As Variant, ByVal offset As Long)
    Dim a As Long
    Dim b As Long
    Dim c As Long
    Dim d As Long

    
    a = state(0)
    b = state(1)
    c = state(2)
    d = state(3)
    
    
    Dim x(15)
    Call Decode(x, block, offset, 64)


    ' Round 1
    Call FF(a, b, c, d, x(0), S11, &HD76AA478)  '  1
    Call FF(d, a, b, c, x(1), S12, &HE8C7B756)  '  2
    Call FF(c, d, a, b, x(2), S13, &H242070DB)  '  3
    Call FF(b, c, d, a, x(3), S14, &HC1BDCEEE)  '  4
    Call FF(a, b, c, d, x(4), S11, &HF57C0FAF)  '  5
    Call FF(d, a, b, c, x(5), S12, &H4787C62A)  '  6
    Call FF(c, d, a, b, x(6), S13, &HA8304613)  '  7
    Call FF(b, c, d, a, x(7), S14, &HFD469501)  '  8
    Call FF(a, b, c, d, x(8), S11, &H698098D8)  '  9
    Call FF(d, a, b, c, x(9), S12, &H8B44F7AF)  ' 10
    Call FF(c, d, a, b, x(10), S13, &HFFFF5BB1) ' 11
    Call FF(b, c, d, a, x(11), S14, &H895CD7BE) ' 12
    Call FF(a, b, c, d, x(12), S11, &H6B901122) ' 13
    Call FF(d, a, b, c, x(13), S12, &HFD987193) ' 14
    Call FF(c, d, a, b, x(14), S13, &HA679438E) ' 15
    Call FF(b, c, d, a, x(15), S14, &H49B40821) ' 16

    ' Round 2
    Call GG(a, b, c, d, x(1), S21, &HF61E2562)  ' 17
    Call GG(d, a, b, c, x(6), S22, &HC040B340)  ' 18
    Call GG(c, d, a, b, x(11), S23, &H265E5A51) ' 19
    Call GG(b, c, d, a, x(0), S24, &HE9B6C7AA)  ' 20
    Call GG(a, b, c, d, x(5), S21, &HD62F105D)  ' 21
    Call GG(d, a, b, c, x(10), S22, &H2441453)  ' 22
    Call GG(c, d, a, b, x(15), S23, &HD8A1E681) ' 23
    Call GG(b, c, d, a, x(4), S24, &HE7D3FBC8)  ' 24
    Call GG(a, b, c, d, x(9), S21, &H21E1CDE6)  ' 25
    Call GG(d, a, b, c, x(14), S22, &HC33707D6) ' 26
    Call GG(c, d, a, b, x(3), S23, &HF4D50D87)  ' 27
    Call GG(b, c, d, a, x(8), S24, &H455A14ED)  ' 28
    Call GG(a, b, c, d, x(13), S21, &HA9E3E905) ' 29
    Call GG(d, a, b, c, x(2), S22, &HFCEFA3F8)  ' 30
    Call GG(c, d, a, b, x(7), S23, &H676F02D9)  ' 31
    Call GG(b, c, d, a, x(12), S24, &H8D2A4C8A) ' 32

    ' Round 3
    Call HH(a, b, c, d, x(5), S31, &HFFFA3942)  ' 33
    Call HH(d, a, b, c, x(8), S32, &H8771F681)  ' 34
    Call HH(c, d, a, b, x(11), S33, &H6D9D6122) ' 35
    Call HH(b, c, d, a, x(14), S34, &HFDE5380C) ' 36
    Call HH(a, b, c, d, x(1), S31, &HA4BEEA44)  ' 37
    Call HH(d, a, b, c, x(4), S32, &H4BDECFA9)  ' 38
    Call HH(c, d, a, b, x(7), S33, &HF6BB4B60)  ' 39
    Call HH(b, c, d, a, x(10), S34, &HBEBFBC70) ' 40
    Call HH(a, b, c, d, x(13), S31, &H289B7EC6) ' 41
    Call HH(d, a, b, c, x(0), S32, &HEAA127FA)  ' 42
    Call HH(c, d, a, b, x(3), S33, &HD4EF3085)  ' 43
    Call HH(b, c, d, a, x(6), S34, &H4881D05)   ' 44
    Call HH(a, b, c, d, x(9), S31, &HD9D4D039)  ' 45
    Call HH(d, a, b, c, x(12), S32, &HE6DB99E5) ' 46
    Call HH(c, d, a, b, x(15), S33, &H1FA27CF8) ' 47
    Call HH(b, c, d, a, x(2), S34, &HC4AC5665)  ' 48

    ' Round 4
    Call II(a, b, c, d, x(0), S41, &HF4292244)  ' 49
    Call II(d, a, b, c, x(7), S42, &H432AFF97)  ' 50
    Call II(c, d, a, b, x(14), S43, &HAB9423A7) ' 51
    Call II(b, c, d, a, x(5), S44, &HFC93A039)  ' 52
    Call II(a, b, c, d, x(12), S41, &H655B59C3) ' 53
    Call II(d, a, b, c, x(3), S42, &H8F0CCC92)  ' 54
    Call II(c, d, a, b, x(10), S43, &HFFEFF47D) ' 55
    Call II(b, c, d, a, x(1), S44, &H85845DD1)  ' 56
    Call II(a, b, c, d, x(8), S41, &H6FA87E4F)  ' 57
    Call II(d, a, b, c, x(15), S42, &HFE2CE6E0) ' 58
    Call II(c, d, a, b, x(6), S43, &HA3014314)  ' 59
    Call II(b, c, d, a, x(13), S44, &H4E0811A1) ' 60
    Call II(a, b, c, d, x(4), S41, &HF7537E82)  ' 61
    Call II(d, a, b, c, x(11), S42, &HBD3AF235) ' 62
    Call II(c, d, a, b, x(2), S43, &H2AD7D2BB)  ' 63
    Call II(b, c, d, a, x(9), S44, &HEB86D391)  ' 64

    state(0) = fucAddBit(state(0), a)
    state(1) = fucAddBit(state(1), b)
    state(2) = fucAddBit(state(2), c)
    state(3) = fucAddBit(state(3), d)
    
End Sub


'Encodes input (UINT4) into output (unsigned char). Assumes len is
'a multiple of 4.
Private Sub Encode(ByRef output As Variant, ByRef valInput As Variant, ByVal valLen As Long)
    Dim i As Long
    Dim j As Long
    
    i = 0
    j = 0
    
    Do While j < valLen
        output(j) = valInput(i) And &HFF
        output(j + 1) = fncRightShift(valInput(i), 8) And &HFF
        output(j + 2) = fncRightShift(valInput(i), 16) And &HFF
        output(j + 3) = fncRightShift(valInput(i), 24) And &HFF
        i = i + 1
        j = j + 4
    Loop
End Sub


'Decodes input (unsigned char) into output (UINT4). Assumes len is
'a multiple of 4.
Private Sub Decode(ByRef output As Variant, ByRef valInput As Variant, ByVal inputPoint As Long, _
                   ByVal valLen As Long)
    Dim i As Long
    Dim j As Long
    Dim Buf As Long
          
    i = 0
    j = 0
    Buf = 0
    
    Do While j < valLen
        Buf = j + inputPoint
        output(i) = valInput(Buf) Or fncLeftShift(valInput(Buf + 1), 8) Or _
                    fncLeftShift(valInput(Buf + 2), 16) Or fncLeftShift(valInput(Buf + 3), 24)
        i = i + 1
        j = j + 4
    Loop
End Sub


'Note: Replace "for loop" with standard memcpy if possible.
Private Sub MD5_memcpy(ByRef output As Variant, ByVal outputPoint As Long, ByRef valInput As Variant, _
                       ByVal inputPoint As Long, ByVal valLen As Long)
    Dim i As Long
    For i = 0 To valLen - 1
        output(i + outputPoint) = valInput(i + inputPoint)
    Next
End Sub


Private Function MDPrint(ByRef digest As Variant) As String
    Dim Str As String
    Dim i As Integer
    
    For i = 0 To 16 - 1
        Str = Str & Right("00" & LCase(Hex(digest(i))), 2)
    Next
    
    MDPrint = Str
End Function


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|PADDING();
'@title     : [PADDING]|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'
'@param     :
'
'@return    : [PADDING]|fffd||8414||fffd|z|fffd||fffd|/Variant
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Property Get PADDING() As Variant()
    Dim valArray() As Variant
    valArray = Array( _
        &H80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, _
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 _
    )

    PADDING = valArray
End Property


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|fncLeftShift();
'@title     : |fffd||fffd||fffd|V|fffd|t|fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|
'@summary   : C|fffd||fffd||fffd||fffd||fffd|[<<]|fffd||255||3c2||fffd||fffd|A|fffd||fffd||fffd|V|fffd|t|fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B
'
'@param     : |fffd|l/Long
'             |fffd|V|fffd|t|fffd|g|fffd||fffd|/Byte
'
'@return    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|/Long
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Private Function fncLeftShift(ByVal val As Long, ByVal nBit As Byte) As Long
    Dim msb As Long
    Dim lsb As Long
    Dim tmp As Long
    
    If nBit = 0 Then
        msb = val
    Else
        lsb = 2 ^ (31 - nBit)
        tmp = val And (lsb - 1)
        msb = tmp * (2 ^ nBit)
        
        If val And lsb Then
            msb = msb Or &H80000000
        End If
    End If
    
    fncLeftShift = msb
End Function


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|fncRightShift();
'@title     : |fffd|E|fffd|V|fffd|t|fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|
'@summary   : C|fffd||fffd||fffd||fffd||fffd|[>>]|fffd||255||3c2||fffd||fffd|A|fffd|E|fffd|V|fffd|t|fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B
'
'@param     : |fffd|l/Long
'             |fffd|V|fffd|t|fffd|g|fffd||fffd|/Byte
'
'@return    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|/Long
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Private Function fncRightShift(ByVal val As Long, ByVal nBit As Byte) As Long
    Dim msb As Long
    Dim lsb As Long

    If nBit = 0 Then
        msb = val
    Else
        lsb = val And &H7FFFFFFF

        If nBit = 31 Then
            msb = 0
        Else
            msb = lsb \ (2 ^ nBit)
        End If
        
        If lsb <> val Then
            msb = msb Or (2 ^ (31 - nBit))
        End If
    End If
        
    fncRightShift = msb
End Function


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|fucAddBit();
'@title     : |fffd|r|fffd|b|fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|
'@summary   : C|fffd||fffd||fffd||fffd||fffd|[+=]|fffd||255||3c2||fffd||fffd|A|fffd|r|fffd|b|fffd|g|fffd||fffd||fffd|Z|fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd|B
'
'@param     : |fffd|l/Currency
'             |fffd|l/Currency
'
'@return    : |fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|/Long
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Private Function fucAddBit(ByVal a As Currency, ByVal b As Currency) As Long
    Dim tmp As Currency
    
    tmp = a + b
    If tmp > &H7FFFFFFF Then
        tmp = tmp - (2 ^ 32)
    ElseIf tmp < &H80000000 Then
        tmp = tmp + (2 ^ 32)
    End If
    
    fucAddBit = CLng(tmp)
End Function


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|fncSpritStr();
'@title     : |fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||3ca||fffd||fffd||fffd||fffd||fffd|
'@summary   : |fffd|w|fffd||fffd||315||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||255||fffd||fffd||fffd||fffd||fffd||fffd||3c9||fffd||fffd||fffd||fffd|A|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd|z|fffd||fffd||58a|i|fffd|[|fffd||fffd||fffd||fffd|B
'
'@param     :
'
'@return    :
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Private Sub fncSpritStr()
    Dim valByte() As Byte
    Dim valArray() As Byte
    Dim num As Variant
    Dim count As Long
    Dim ADODB As Object
    Set ADODB = CreateObject("ADODB.Stream")

    If Me.Text = "" Then
        Me.StrByte = valArray
        Me.StrLen = 0
    Else
        ADODB.Open
        ADODB.Type = 2
        ADODB.Charset = Me.Charset
        ADODB.WriteText Me.Text
        ADODB.Position = 0
        ADODB.Type = 1
        
        If Me.Charset = "UNICODE" Then
            ADODB.Position = 2
            valByte = ADODB.Read
            
            count = 0
            For Each num In valByte
                If Not num = 0 Then
                    ReDim Preserve valArray(count)
                    valArray(count) = num
                    count = count + 1
                End If
            Next num

        ElseIf Me.Charset = "SHIFT-JIS" Then
            ADODB.Position = 0
            valArray = ADODB.Read
        
        ElseIf Me.Charset = "UTF-8" Then
            ADODB.Position = 3
            valArray = ADODB.Read
            
        End If

        ADODB.Close
        Me.StrByte = valArray
        Me.StrLen = UBound(valArray) + 1
    End If
End Sub


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|fncSpritFile();
'@title     : |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||3ca||fffd||fffd||fffd||fffd||fffd|
'@summary   : |fffd|w|fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd|z|fffd||fffd||58a|i|fffd|[|fffd||fffd||fffd||fffd|B
'             |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||a347||fffd||34b||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B
'
'@param     :
'
'@return    :
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Private Sub fncSpritFile()
    Dim valByte() As Byte
    Dim valArray() As Byte
    Dim inputFn As Long
    Dim num As Variant
    Dim count As Long


    If Dir(Me.FilePath) = "" Then
        Me.StrByte = valArray
        Me.StrLen = 0
    Else
        inputFn = FreeFile
        Open Me.FilePath For Binary As #inputFn
            ReDim valArray(LOF(inputFn))
            Get #inputFn, , valArray
        Close #inputFn

        If UBound(valArray) = 0 Then
            Me.StrLen = 0
        Else
            ReDim Preserve valArray(UBound(valArray) - 1)
            Me.StrLen = UBound(valArray) + 1
        End If
        Me.StrByte = valArray

    End If
End Sub


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|TextHash();
'@title     : |fffd||fffd||fffd||fffd||fffd||fffd||fffd|MD|fffd|n|fffd|b|fffd|V|fffd||fffd||fffd|l|fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
'@summary   : |fffd|w|fffd||8576||fffd||fffd||fffd||fffd||303|n|fffd|b|fffd|V|fffd||fffd||fffd|l|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|B
'
'@param     :
'
'@return    : |fffd|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/String
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Function TextHash() As String
    Dim Context As Context
    Dim digest(15) As Variant
    
    fncSpritStr

    Call MD5Init(Context)
    Call MD5Update(Context, Me.StrByte, Me.StrLen)
    Call MD5Final(digest, Context)

    TextHash = MDPrint(digest)
End Function


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|FileHash();
'@title     : |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|MD|fffd|n|fffd|b|fffd|V|fffd||fffd||fffd|l|fffd|Z|fffd|o|fffd||fffd||fffd||fffd|
'@summary   : |fffd|w|fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||741|A|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|n|fffd|b|fffd|V|fffd||fffd||fffd|l|fffd||fffd||fffd|Z|fffd|o|fffd||fffd||fffd||fffd|B
'             |fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||a347||fffd||341|A|fffd||fffd||303|n|fffd|b|fffd|V|fffd||fffd||fffd|l|fffd||fffd||502||fffd||fffd||702||fffd||fffd|B
'             [d41d8cd98f00b204e9800998ecf8427e]
'
'@param     :
'
'@return    : |fffd|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/String
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Function FileHash() As String
    Dim Context As Context
    Dim digest(15) As Variant
    
    fncSpritFile

    Call MD5Init(Context)
    Call MD5Update(Context, Me.StrByte, Me.StrLen)
    Call MD5Final(digest, Context)

    FileHash = MDPrint(digest)
End Function


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|Charset();
'@title     : [Charset]|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'
'@param     : [Charset]|fffd||fffd||fffd||fffd||fffd||fffd|/String
'
'@return    : [Charset]|fffd||fffd||fffd||fffd||fffd||fffd|/String
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Property Let Charset(ByVal value As String)
    mvarCharset = UCase(value)
End Property
Public Property Get Charset() As String
    Charset = mvarCharset
End Property


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|Text();
'@title     : [Text]|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'
'@param     : [Text]|fffd||fffd||fffd||fffd||fffd||fffd|/String
'
'@return    : [Text]|fffd||fffd||fffd||fffd||fffd||fffd|/String
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Property Let Text(ByVal value As String)
    mvarText = value
End Property
Public Property Get Text() As String
    Text = mvarText
End Property


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|FilePath();
'@title     : [FilePath]|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'
'@param     : [FilePath]|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X/String
'
'@return    : [FilePath]|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|p|fffd|X/String
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Property Let FilePath(ByVal value As String)
    mvarFilePath = value
End Property
Public Property Get FilePath() As String
    FilePath = mvarFilePath
End Property


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|StrByte();
'@title     : [StrByte]|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'
'@param     : [StrByte]|fffd|o|fffd|C|fffd|g|fffd|z|fffd||fffd|/Byte
'
'@return    : [StrByte]|fffd|o|fffd|C|fffd|g|fffd|z|fffd||fffd|/Byte
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Property Let StrByte(ByRef value() As Byte)
    mvarStrByte = value
End Property
Public Property Get StrByte() As Byte()
    StrByte = mvarStrByte
End Property


'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'|fffd||fffd|StrLen();
'@title     : [StrLen]|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'
'@param     : [StrLen]|fffd||fffd||fffd||fffd||fffd|T|fffd|C|fffd|Y/Long
'
'@return    : [StrLen]|fffd||fffd||fffd||fffd||fffd|T|fffd|C|fffd|Y/Long
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
Public Property Let StrLen(ByVal value As Long)
    mvarStrLen = value
End Property
Public Property Get StrLen() As Long
    StrLen = mvarStrLen
End Property





Attribute VB_Name = "Module1"

'|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||30e||fffd||835e||fffd||fffd|
Sub |fffd||d3dc||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd|o|fffd||fffd|()
Application.Run "IE|fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd|[|fffd|U|fffd|[|fffd|F|fffd||fffd|"
Application.Run "|fffd|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||30e||fffd||835e||fffd||fffd|"
Application.Run "FBA|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||30e||fffd||835e||fffd||fffd|"
Application.Run "|fffd||6d7||fffd||fffd||fffd||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||30e||fffd||835e||fffd||fffd|"
Application.Run "|fffd||fffd||fffd|o|fffd||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||30e||fffd||835e||fffd||fffd|"

Application.Run "|fffd||d3dc||fffd||fffd||fffd|X|fffd|g|fffd||312||fffd||fffd|o"
Application.Run "|fffd||d3dc||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|"

Application.StatusBar = ""

    MsgBox "|fffd||d3dc||fffd|p|fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"
End Sub
Sub |fffd|S|fffd||fffd||fffd||fffd||fffd||14d||d3dc||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||1228f|o|fffd||fffd||fffd||103|A|fffd|b|fffd|v|fffd||fffd||fffd|[|fffd|h()

Application.Run "IE|fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd|[|fffd|U|fffd|[|fffd|F|fffd||fffd|"

Call AllReportFromRequestToGet

Application.Run "|fffd|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||30e||fffd||835e||fffd||fffd|"
Application.Run "FBA|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||30e||fffd||835e||fffd||fffd|"
Application.Run "|fffd||6d7||fffd||fffd||fffd||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||30e||fffd||835e||fffd||fffd|"
Application.Run "|fffd||fffd||fffd|o|fffd||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||30e||fffd||835e||fffd||fffd|"

Application.Run "|fffd||d3dc||fffd||fffd||fffd|X|fffd|g|fffd||312||fffd||fffd|o"

Dim strFileName As String
Dim SubmitId As String
strFileName = CriateDeleteFile()
SubmitId = TsvSend(strFileName)

Application.StatusBar = ""

MsgBox "|fffd|s|fffd|vSKU|fffd||d3dc||fffd|p|fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|A|fffd|b|fffd|v|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbLf & "|fffd|o|fffd|b|fffd|`ID|fffd||341|u" & SubmitId & "|fffd|v|fffd||142||fffd||fffd|B"

End Sub

Sub |fffd|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||30e||fffd||835e||fffd||fffd|()
'|fffd||fffd||28d|X|fffd|V|fffd||fffd|OFF|fffd||242||fffd||fffd||10d||fffd||fffd||fffd||fffd||fffd|--------
Application.ScreenUpdating = False

Dim TargetPath As String
    TargetPath = ThisWorkbook.Path
    For a = 1 To Len(TargetPath)
        If Left(Right(TargetPath, a), 1) = "\" Then
            TargetPath = Left(TargetPath, Len(TargetPath) - a) & "\Amazon|fffd||fffd||fffd|||fffd|[|fffd|g\|fffd|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g.txt"
            Exit For
        End If
    DoEvents
    Next

Sheets("SyosaiRepo").Columns("A:H").ClearContents

    Dim i As Long
    Dim Cnt As Long
    Dim Buf As Variant
    Dim FileNo As Integer
    Dim SplitString As Variant

    Dim v As Variant

        '|fffd|S|fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||15d8e||fffd||fffd||fffd||243|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
        Sheets("SyosaiRepo").Cells.NumberFormatLocal = "@"
        'Sheets("Report").Cells(1, 1).Select

        '|fffd||c2882||102||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd||64fe|
        FileNo = FreeFile()
        Buf = Space(FileLen(TargetPath))

        '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd|buf|fffd||fffd|1|fffd|s|fffd||1c2||74d||fffd||fffd||fffd|
        ' |fffd||fffd| |fffd|^|fffd|u|fffd||154|z|fffd||fffd||255||fffd||fffd||fffd|
        ' |fffd||fffd| |fffd|Z|fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Open TargetPath For Input As #FileNo
        Application.StatusBar = "|fffd|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|j|fffd|@"
        
        
        Do Until EOF(FileNo)
            Line Input #FileNo, Buf
            Cnt = 0
            SplitString = Split(Buf, vbLf)
            v = Sheets("SyosaiRepo").Range("A1:H" & UBound(SplitString) + 1)
            If Buf <> "" Then
                For i = 0 To UBound(SplitString) - 1
                    SplitString2 = Split(SplitString(i), vbTab)
                    Cnt = Cnt + 1
    
                        v(Cnt, 1) = SplitString2(2) 'SKU
                        v(Cnt, 2) = SplitString2(13) '|fffd|t|fffd||fffd||fffd|t|fffd|B|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
                        v(Cnt, 3) = SplitString2(4) '|fffd||fffd||fffd||214|z|fffd||fffd||fffd||fffd||fffd||fffd|
                        v(Cnt, 4) = SplitString2(12) 'FBA|fffd||fffd||fffd||fffd|
                        v(Cnt, 5) = SplitString2(5) '|fffd|o|fffd|i|fffd||fffd|
                        v(Cnt, 6) = SplitString2(8) '|fffd|R|fffd||fffd||fffd|f|fffd|B|fffd|V|fffd||fffd||fffd||fffd|
                        
                    Application.StatusBar = "|fffd|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||752||fffd||fffd|@" & Cnt & "/" & UBound(SplitString)
                Next i
            End If
        DoEvents
        Loop
        Application.StatusBar = ""
        Close #FileNo

    Sheets("SyosaiRepo").Range("A1:H" & UBound(SplitString) + 1) = v
    
Application.StatusBar = "|fffd|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||74a||fffd||fffd||fffd|"
Application.StatusBar = ""
'|fffd||fffd||28d|X|fffd|V|fffd||fffd||7c2||fffd|
Application.ScreenUpdating = True
End Sub

Sub FBA|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||30e||fffd||835e||fffd||fffd|()
'|fffd||fffd||28d|X|fffd|V|fffd||fffd|OFF|fffd||242||fffd||fffd||10d||fffd||fffd||fffd||fffd||fffd|--------
Application.ScreenUpdating = False

Dim TargetPath As String
    TargetPath = ThisWorkbook.Path
    For a = 1 To Len(TargetPath)
        If Left(Right(TargetPath, a), 1) = "\" Then
            TargetPath = Left(TargetPath, Len(TargetPath) - a) & "\Amazon|fffd||fffd||fffd|||fffd|[|fffd|g\FBA|fffd||74c||243||fffd||fffd|||fffd|[|fffd|g.txt"
            Exit For
        End If
    DoEvents
    Next

Sheets("FbaRepo").Columns("A:C").ClearContents

    Dim i As Long
    Dim Cnt As Long
    Dim Buf As Variant
    Dim FileNo As Integer
    Dim SplitString As Variant

    Dim v As Variant

        '|fffd|S|fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||15d8e||fffd||fffd||fffd||243|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
        Sheets("FBARepo").Cells.NumberFormatLocal = "@"
        'Sheets("Report").Cells(1, 1).Select

        '|fffd||c2882||102||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd||64fe|
        FileNo = FreeFile()
        Buf = Space(FileLen(TargetPath))

        '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd|buf|fffd||fffd|1|fffd|s|fffd||1c2||74d||fffd||fffd||fffd|
        ' |fffd||fffd| |fffd|^|fffd|u|fffd||154|z|fffd||fffd||255||fffd||fffd||fffd|
        ' |fffd||fffd| |fffd|Z|fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Open TargetPath For Input As #FileNo
        Application.StatusBar = "FBA|fffd||74c||243||fffd||fffd|||fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|j|fffd|@"
        v = Sheets("FbaRepo").Columns("A:C")
        
        Cnt = 0
        Do Until EOF(FileNo)
            Line Input #FileNo, Buf
            If Buf <> "" Then
                SplitString = Split(Buf, vbTab)

                Cnt = Cnt + 1
                    v(Cnt, 1) = SplitString(0)
                    v(Cnt, 2) = SplitString(3)
                    v(Cnt, 3) = SplitString(5)
                    
                Application.StatusBar = "FBA|fffd||74c||243||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||752||fffd||fffd|@" & Cnt
            End If
        DoEvents
        Loop
        Application.StatusBar = ""
        Close #FileNo

    Sheets("FbaRepo").Columns("A:C") = v

Application.StatusBar = "FBA|fffd||74c||243||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||74a||fffd||fffd||fffd|"
Application.StatusBar = ""
'|fffd||fffd||28d|X|fffd|V|fffd||fffd||7c2||fffd|
Application.ScreenUpdating = True
End Sub


Sub |fffd||fffd||fffd|o|fffd||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||30e||fffd||835e||fffd||fffd|()
'|fffd||fffd||28d|X|fffd|V|fffd||fffd|OFF|fffd||242||fffd||fffd||10d||fffd||fffd||fffd||fffd||fffd|--------
Application.ScreenUpdating = False

Dim TargetPath As String
    TargetPath = ThisWorkbook.Path
    For a = 1 To Len(TargetPath)
        If Left(Right(TargetPath, a), 1) = "\" Then
            TargetPath = Left(TargetPath, Len(TargetPath) - a) & "\Amazon|fffd||fffd||fffd|||fffd|[|fffd|g\|fffd||fffd||fffd|o|fffd||5c3||fffd||fffd|||fffd|[|fffd|g.txt"
            Exit For
        End If
    DoEvents
    Next

Sheets("UnsendRepo").Columns("A:B").ClearContents

    Dim i As Long
    Dim Cnt As Long
    Dim Buf As Variant
    Dim FileNo As Integer
    Dim SplitString As Variant

    Dim v As Variant

        '|fffd|S|fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||15d8e||fffd||fffd||fffd||243|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
        Sheets("UnsendRepo").Cells.NumberFormatLocal = "@"
        'Sheets("Report").Cells(1, 1).Select

        '|fffd||c2882||102||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd||64fe|
        FileNo = FreeFile()
        Buf = Space(FileLen(TargetPath))

        '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd|buf|fffd||fffd|1|fffd|s|fffd||1c2||74d||fffd||fffd||fffd|
        ' |fffd||fffd| |fffd|^|fffd|u|fffd||154|z|fffd||fffd||255||fffd||fffd||fffd|
        ' |fffd||fffd| |fffd|Z|fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Open TargetPath For Input As #FileNo
        Application.StatusBar = "|fffd||fffd||fffd|o|fffd||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|j|fffd|@"
        v = Sheets("UnsendRepo").Columns("A:B")
        
        Cnt = 0
        Do Until EOF(FileNo)
            Line Input #FileNo, Buf
            SplitString = Split(Buf, vbTab)
            If Buf <> "" Then
                Cnt = Cnt + 1
                    v(Cnt, 1) = SplitString(10)
                    v(Cnt, 2) = SplitString(12)
                    
                Application.StatusBar = "|fffd||fffd||fffd|o|fffd||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||752||fffd||fffd|@" & Cnt
            End If
        DoEvents
        Loop
        Application.StatusBar = ""
        Close #FileNo

    Sheets("UnsendRepo").Columns("A:B") = v

Application.StatusBar = "|fffd||fffd||fffd|o|fffd||5c3||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||74a||fffd||fffd||fffd|"
Application.StatusBar = ""
'|fffd||fffd||28d|X|fffd|V|fffd||fffd||7c2||fffd|
Application.ScreenUpdating = True
End Sub
Sub |fffd||6d7||fffd||fffd||fffd||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||30e||fffd||835e||fffd||fffd|()
'|fffd||fffd||28d|X|fffd|V|fffd||fffd|OFF|fffd||242||fffd||fffd||10d||fffd||fffd||fffd||fffd||fffd|--------
Application.ScreenUpdating = False

Dim TargetPath As String
    TargetPath = ThisWorkbook.Path
    For a = 1 To Len(TargetPath)
        If Left(Right(TargetPath, a), 1) = "\" Then
            TargetPath = Left(TargetPath, Len(TargetPath) - a) & "\Amazon|fffd||fffd||fffd|||fffd|[|fffd|g\|fffd||6d7||fffd||fffd||fffd||fffd||312||fffd||fffd||fffd||fffd||fffd||fffd|||fffd|[|fffd|g.txt"
            Exit For
        End If
    DoEvents
    Next

Sheets("PendingRepo").Columns("A:B").ClearContents

    Dim i As Long
    Dim Cnt As Long
    Dim Buf As Variant
    Dim FileNo As Integer
    Dim SplitString As Variant

    Dim v As Variant

        '|fffd|S|fffd|Z|fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||15d8e||fffd||fffd||fffd||243|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|
        Sheets("PendingRepo").Cells.NumberFormatLocal = "@"
        'Sheets("Report").Cells(1, 1).Select

        '|fffd||c2882||102||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||50d||fffd||fffd||fffd||fffd||64fe|
        FileNo = FreeFile()
        Buf = Space(FileLen(TargetPath))

        '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd|buf|fffd||fffd|1|fffd|s|fffd||1c2||74d||fffd||fffd||fffd|
        ' |fffd||fffd| |fffd|^|fffd|u|fffd||154|z|fffd||fffd||255||fffd||fffd||fffd|
        ' |fffd||fffd| |fffd|Z|fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd|o|fffd||fffd|
        Open TargetPath For Input As #FileNo
        Application.StatusBar = "|fffd||6d7||fffd||fffd||fffd||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|j|fffd|@"
        v = Sheets("PendingRepo").Columns("A:B")
        
        Cnt = 0
        Do Until EOF(FileNo)
            Line Input #FileNo, Buf
            SplitString = Split(Buf, vbTab)
            If Buf <> "" Then
                Cnt = Cnt + 1
                    v(Cnt, 1) = SplitString(3)
                    v(Cnt, 2) = SplitString(5)
            End If
                Application.StatusBar = "|fffd||6d7||fffd||fffd||fffd||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||752||fffd||fffd|@" & Cnt

        DoEvents
        Loop
        Application.StatusBar = ""
        Close #FileNo

    Sheets("PendingRepo").Columns("A:B") = v

Application.StatusBar = "|fffd||6d7||fffd||fffd||fffd||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||835e||fffd||74a||fffd||fffd||fffd|"
Application.StatusBar = ""
'|fffd||fffd||28d|X|fffd|V|fffd||fffd||7c2||fffd|
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Module10"
Attribute VB_Name = "Module11"
Attribute VB_Name = "Module12"
Attribute VB_Name = "Module2"
Sub |fffd||d3dc||fffd||fffd||fffd|X|fffd|g|fffd||312||fffd||fffd|o()

Dim LastIndex As Long
    LastIndex = Sheets("SyosaiRepo").Cells(Rows.count, 1).End(xlUp).Row

Dim DeleteX As Long
    DeleteX = Sheets("DeleteFile").Cells(Rows.count, 1).End(xlUp).Row
    If DeleteX > 3 Then
        Sheets("DeleteFile").Rows("4:" & DeleteX).ClearContents
    End If
    DeleteX = Sheets("DeleteFile").Cells(Rows.count, 1).End(xlUp).Row
Dim v1 As Variant
    v1 = Sheets("DeleteFile").Columns("A:A")
  
Dim v2 As Variant
    v2 = Sheets("DeleteFile").Columns("J:J")
    
Dim SKU As String
Dim FullFill As String
Dim Stock As Long
Dim Condition As String
Dim SypnDay As Date
Dim TargetDay As Long
    TargetDay = Sheets("TOP").Cells(5, 3)
Dim IgnoreNew As String
    IgnoreNew = Sheets("TOP").Cells(4, 3)
Dim DayPast As Long

    For a = 2 To LastIndex
        Application.StatusBar = "|fffd||fffd||fffd|o|fffd||fffd| " & a & "/" & LastIndex
        SKU = Sheets("SyosaiRepo").Cells(a, 1)
        FullFill = Sheets("SyosaiRepo").Cells(a, 2)
        Condition = Sheets("SyosaiRepo").Cells(a, 6)
        SypnDay = Left(Sheets("SyosaiRepo").Cells(a, 5), 10)
        
        If IgnoreNew = "ON" And Sheets("SyosaiRepo").Cells(a, 6) = "11" Then
            GoTo Skip
        End If
        
        '|fffd||fffd||fffd||282||fffd|0|fffd||fffd||847d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|X|fffd|L|fffd|b|fffd|v
        If FullFill = "AMAZON_JP" Then
            If Application.WorksheetFunction.CountIf(Sheets("FbaRepo").Columns("A:A"), SKU) > 0 Then
                If Application.WorksheetFunction.VLookup(SKU, Sheets("FbaRepo").Columns("A:C"), 3, False) > 0 Then
                    GoTo Skip
                End If
            End If
        Else
            If Sheets("SyosaiRepo").Cells(a, 3) > 0 Then
                GoTo Skip
            End If
        End If
        
        '|fffd||6d7||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd||383|X|fffd|L|fffd|b|fffd|v
        If Application.WorksheetFunction.CountIf(Sheets("PendingRepo").Columns("A:A"), SKU) > 0 Then
            GoTo Skip
        End If
        
        '|fffd||fffd||fffd|o|fffd||5c2||242||fffd||fffd||fffd||383|X|fffd|L|fffd|b|fffd|v
        If Application.WorksheetFunction.CountIf(Sheets("UnsendRepo").Columns("A:A"), SKU) > 0 Then
            GoTo Skip
        End If
        
        '|fffd||38f||6d3||fffd||fffd||fffd||fffd||20f||fffd||202||fffd|
        DayPast = DateDiff("d", SypnDay, Now())
        If DayPast < TargetDay Then
            GoTo Skip
        End If
        DeleteX = DeleteX + 1
        v1(DeleteX, 1) = SKU
        v2(DeleteX, 1) = "x"
        

Skip:
    DoEvents
    Next
        Sheets("DeleteFile").Columns("A:A") = v1
        Sheets("DeleteFile").Columns("J:J") = v2

End Sub

Sub |fffd||d3dc||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd|()
Dim ws As Worksheet
Set ws = ThisWorkbook.Worksheets("DeleteFile")

Dim OutPutPass As String
    OutPutPass = ThisWorkbook.Path
Dim datFile As String
    datFile = OutPutPass & "\|fffd||d3dc||fffd|t|fffd|@|fffd|C|fffd||fffd|\Delete-" & Format(Now(), "YYYYMMDD-hhmmss") & ".txt"

'45|fffd||fffd|o|fffd||fffd|
Dim ColText As String
Open datFile For Output As #1
 
Dim i As Long
i = 1
Do While ws.Cells(i, 1).value <> ""
    ColText = ws.Cells(i, 1).value
    For n = 2 To 14
        ColText = ColText & vbTab & ws.Cells(i, n).value
    DoEvents
    Next
    Application.StatusBar = "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd|@" & i
    Print #1, ColText
    i = i + 1
Loop
 
Close #1
 
Application.StatusBar = ""
MsgBox OutPutPass & "|fffd||24d||d3dc||fffd|p|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"


End Sub

Function CriateDeleteFile() As String
Dim ws As Worksheet
Set ws = ThisWorkbook.Worksheets("DeleteFile")

Dim OutPutPass As String
    OutPutPass = ThisWorkbook.Path
Dim datFile As String
    CriateDeleteFile = "Delete-" & Format(Now(), "YYYYMMDD-hhmmss")
    datFile = OutPutPass & "\|fffd||d3dc||fffd|t|fffd|@|fffd|C|fffd||fffd|\" & CriateDeleteFile & ".txt"
    
    
    
'45|fffd||fffd|o|fffd||fffd|
Dim ColText As String
Open datFile For Output As #1
 
Dim i As Long
i = 1
Do While ws.Cells(i, 1).value <> ""
    ColText = ws.Cells(i, 1).value
    For n = 2 To 14
        ColText = ColText & vbTab & ws.Cells(i, n).value
    DoEvents
    Next
    Application.StatusBar = "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd|@" & i
    Print #1, ColText
    i = i + 1
Loop
 
Close #1
 
Application.StatusBar = ""
Application.StatusBar = OutPutPass & "\|fffd||d3dc||fffd|t|fffd|@|fffd|C|fffd||fffd|\" & CriateDeleteFile & ".txt" & "|fffd||24d||d3dc||fffd|p|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B"


End Function

Attribute VB_Name = "Module3"
Sub IE|fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd|[|fffd|U|fffd|[|fffd|F|fffd||fffd|()

Dim AWS As String
    AWS = Sheets("TOP").Cells(14, 2)
Dim OrderID As String
    OrderID = Sheets("TOP").Cells(15, 2)

Dim AuthAWS As String

'IE|fffd||fffd||fffd|g|fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|---------
Dim httpReq As XMLHTTP60
Set httpReq = New XMLHTTP60

httpReq.Open "GET", "http://kakakaka.info/auth/license/sedori-tool/" & OrderID & ".html", True, "kakakaka", "password"
httpReq.send

Do While httpReq.readyState < 4
    DoEvents
Loop

Dim htmlDoc As Variant
htmlDoc = httpReq.responseText

AuthAWS = Mid(htmlDoc, InStr(htmlDoc, "<div class=""AWS"">") + Len("<div class=""AWS"">"), InStr(htmlDoc, "<div class=""Mail"">") - InStr(htmlDoc, "<div class=""AWS"">") - Len("<div class=""AWS"">") - 7)


    If AuthAWS = "" Then
        MsgBox "|fffd||fffd||fffd||342||fffd||fffd||fffd||102||fffd||fffd||948d||fffd||fffd||fffd||50d||fffd||fffd||303||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & vbCrLf _
                & "|fffd|c|fffd|[|fffd||fffd||fffd||303|}|fffd|j|fffd||fffd||fffd|A|fffd||fffd||fffd|T|fffd|C|fffd|g|fffd||fffd||fffd|MWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd||fffd|o|fffd|^|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
        End
    End If

    If AuthAWS = "Undecided" Then
        Application.StatusBar = "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||610||fffd||fffd||fffd||142||fffd||fffd|B"
    Else
        If AWS = AuthAWS Then
            Application.StatusBar = "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||610||fffd||fffd||fffd||142||fffd||fffd|B"
        Else
            If Len(AuthAWS) = 20 Then
                MsgBox "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||fffd|NG|fffd||142||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd||fffd||fffd||342||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ID|fffd||303||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd||fffd|AWS|fffd|L|fffd|[|fffd||142||314|F|fffd||602||302||702||701|i|fffd||c2||fffd||fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd|j|fffd||302||60a4||fffd||202||302||141|A" & vbCrLf _
                        & "|fffd|}|fffd|j|fffd||fffd||fffd|A|fffd||fffd||fffd|T|fffd|C|fffd|g|fffd||fffd||fffd||113|x|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|o|fffd|^|fffd||fffd||fffd||fffd||fffd||80a2||fffd||fffd||fffd||702||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd|c|fffd|[|fffd||fffd||fffd|_|fffd||4e782||301|yPayPal|fffd||fffd||fffd||fffd|ID|fffd|z|fffd|yMWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd|z|fffd|y|fffd||fffd||fffd|[|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||80a2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||243|c|fffd|[|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||60a4||fffd||242||202||fffd||702||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||602||242||82||fffd||fffd||115|s|fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd||fffd|A" & vbCrLf _
                        & "|fffd|E|fffd|y|fffd|y|fffd|C|fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|ID|fffd|z" & vbCrLf _
                        & "|fffd|E|fffd|yMWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd|z" & vbCrLf _
                        & "|fffd|E|fffd|y|fffd|y|fffd|C|fffd|p|fffd||fffd||fffd||253|o|fffd|^|fffd||fffd||fffd||fffd||102||90c1||fffd|[|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|z" & vbCrLf _
                        & "|fffd||fffd|Y|fffd||fffd||fffd||101|unosuke1@nosukenosusume.info|fffd|v|fffd||702||142||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
            Else
                MsgBox "|fffd||fffd||fffd|C|fffd|Z|fffd||fffd||fffd|X|fffd|F|fffd||fffd|NG|fffd||142||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd||fffd||fffd||342||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ID|fffd||fffd|MWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd||311|g|fffd||74d||fffd||fffd||d0b9||fffd||fffd||fffd||508||fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||fffd|B" & vbCrLf & vbCrLf _
                        & "|fffd||fffd||fffd||508||10a2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||381|A" & vbCrLf _
                        & "|fffd|E|fffd|y|fffd|y|fffd|C|fffd|p|fffd||fffd||fffd||fffd||fffd||fffd|ID|fffd|z" & vbCrLf _
                        & "|fffd|E|fffd|yMWS|fffd|F|fffd||603|g|fffd|[|fffd|N|fffd||fffd||fffd|z" & vbCrLf _
                        & "|fffd|E|fffd|y|fffd|y|fffd|C|fffd|p|fffd||fffd||fffd||253|o|fffd|^|fffd||fffd||fffd||fffd||102||90c1||fffd|[|fffd||fffd||fffd|A|fffd|h|fffd||fffd||fffd|X|fffd|z" & vbCrLf _
                        & "|fffd||fffd|Y|fffd||fffd||fffd||101|unosuke1@nosukenosusume.info|fffd|v|fffd||702||142||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B"
            End If
            End
        End If
    End If

Set htmlDoc = Nothing
Set httpReq = Nothing
'-----------------------------

End Sub

Attribute VB_Name = "Module4"

'// |fffd|w|fffd||fffd|URL|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|_|fffd|E|fffd||fffd||fffd||fffd||fffd|[|fffd|h
Private Declare Function URLDownloadToFile _
    Lib "urlmon" Alias "URLDownloadToFileA" _
    (ByVal pCaller As Long, _
    ByVal szURL As String, _
    ByVal szFileName As String, _
    ByVal dwReserved As Long, _
    ByVal lpfnCB As Long) As Long
 
'// |fffd|L|fffd||fffd||fffd|b|fffd|V|fffd||fffd||fffd|N|fffd||fffd||fffd|A
Private Declare Function DeleteUrlCacheEntry _
    Lib "wininet" Alias "DeleteUrlCacheEntryA" _
    (ByVal lpszUrlName As String) As Long
 
'// |fffd|X|fffd||fffd||fffd|[|fffd|v
Private Declare Sub Sleep _
    Lib "kernel32" (ByVal dwMilliseconds As Long)


Option Explicit
Const FileNameSheet = "|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|"
Const FileNameCell = "A1"
Const HashStoreSheet = "|fffd|T|fffd||fffd||fffd|l"
Const HashStoreColumn = "B"

Dim Crc32Table&(255)


Function TsvSend(strFileName As String)
'|fffd|N|fffd||fffd||fffd|X|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|MD5|fffd||fffd||fffd|K|fffd|{|fffd|B|fffd|@|fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|u|fffd|b|fffd|N|fffd||248||682||fffd||fffd||a347||fffd||34e|Q|fffd||190||752||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd|B
'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'******************************
Dim MWSsKey As String
    MWSsKey = Worksheets("TOP").Range("B14")
Dim sKey As String
    sKey = Worksheets("Debug2").Range("B4")
Dim AWSkey As String
    AWSkey = Worksheets("Debug2").Range("B3")

Dim sellerID As String
    sellerID = Sheets("TOP").Range("B16")
    
'******************************
    
Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"

Dim APIVersion As String
    APIVersion = "2011-10-01"
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Integer, j As Integer, k As Integer

'********************************************************************************************************



'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") >= 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If


'************************
'|fffd||fffd||fffd|M|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|MD5|fffd||64fe|

    ChDrive ActiveWorkbook.Path
    ChDir ActiveWorkbook.Path

    
Dim objMD5 As New MD5 'Class|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|MD5|fffd|Q|fffd||fffd|
    objMD5.FilePath = ActiveWorkbook.Path & "\|fffd||d3dc||fffd|t|fffd|@|fffd|C|fffd||fffd|\" & strFileName & ".txt" 'Class|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|MD5|fffd|Q|fffd||fffd|
Dim myMD5 As String
    myMD5 = objMD5.FileHash  'Class|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|MD5|fffd|Q|fffd||fffd|

'Base64|fffd||583|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|iMD5|fffd|w|fffd|b|fffd|_|fffd||30f||a347||fffd||fffd|URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|s|fffd|v|fffd|j
Dim myMD5_base64 As String
    myMD5_base64 = HexToBase64(myMD5)
    'myMD5_base64 = URLencode(myMD5_base64)|fffd|w|fffd|b|fffd|_|fffd||242||343|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|s|fffd|v
        
'************************
'|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd|j|fffd||c42c|
                
    rawText = ""
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
    rawText = rawText _
  & "AWSAccessKeyId=" & AWSkey _
  & "&Action=SubmitFeed" _
  & "&FeedType=_POST_FLAT_FILE_LISTINGS_DATA_" _
  & "&MWSAuthToken=" & MWSsKey _
  & "&MarketplaceIdList.Id.1=A1VC38T7YXB528" _
  & "&SellerId=" & sellerID _
  & "&SignatureMethod=HmacSHA256" _
  & "&SignatureVersion=2" _
  & "&Timestamp=" & timestamp _
  & "&Version=2009-01-01" _

  '|fffd||202||fffd||fffd||102||fffd||fffd||fffd||fffd|C|fffd||203|N|fffd|G|fffd||fffd|
  '& "&ContentMD5Value=" & myMD5_base64 _
  '  & "&PurgeAndReplace=false" _

        '|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------
        '|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||103|V|fffd|[|fffd|N|fffd||fffd||fffd|b|fffd|g|fffd|L|fffd|[|fffd||143|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd|
        rawTextToSign = "POST" & vbLf & ecsaddress & vbLf & "/" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gURL|fffd||fffd||fffd||fffd|
        Url = "https://" & ecsaddress & "/?" & rawText & "&Signature=" & sign
        '----------------------------------------------------------------------------------
        
    '|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p
    If Sheets("Debug2").Cells(1, 3) = "ON" Then
        Sheets("Debug2").Cells(1, 2) = Url
    End If

'*******************************************


    '-------------------------------------------
    '|fffd||fffd||fffd|M|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||253||fffd||fffd||fffd||fffd|
    Dim objHTTP
    Dim Stream

    ' XMLHTTP|fffd||fffd||fffd||c42c|
    Set objHTTP = CreateObject("MSXML2.XMLHTTP")
    ' Stream |fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||30d||c42c|
    Set Stream = CreateObject("ADODB.Stream")
    
    ' Stream|fffd||303|I|fffd|[|fffd|v|fffd||fffd|
    Stream.Open
    Stream.Type = 1 ' adTypeBinary
    
    ' |fffd||fffd||fffd|M|fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||fffd|
    Stream.LoadFromFile = ActiveWorkbook.Path & "\|fffd||d3dc||fffd|t|fffd|@|fffd|C|fffd||fffd|\" & strFileName & ".txt"
    
    '-------------------------------------------
    '|fffd|t|fffd|B|fffd|[|fffd|h|fffd||115c2||fffd|
    Dim msg1 As String
    
    '|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||702||fffd|URL|fffd||fffd|OK
    Call objHTTP.Open("POST", Url, False)
    '|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Call objHTTP.setRequestHeader("user-agent", "KTN-TOOL (VBA)")  '|fffd||302||fffd||fffd||24f||18d||fffd||fffd||142||fffd||fffd||9576||fffd||fffd||fffd||fffd||fffd|
    Call objHTTP.setRequestHeader("Content-MD5", myMD5_base64) '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||343|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|K|fffd|v|fffd||202||fffd|
    Call objHTTP.setRequestHeader("Content-Type", "text/tab-separated-values; charset=Shift_JIS")
    '|fffd|o|fffd|i|fffd|t|fffd|@|fffd|C|fffd||fffd|(I)|fffd||115d0|M
    Call objHTTP.send(Stream.Read(Stream.Size))
    ' Stream|fffd||fffd||82||fffd||fffd||fffd|
    Stream.Close
    
    '|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p
    If Sheets("Debug2").Cells(1, 3) = "ON" Then
        Sheets("Debug2").Cells(2, 2) = objHTTP.responseText
    End If
    
    '|fffd||fffd||fffd|X|fffd|||fffd||fffd||fffd|X|fffd||fffd||fffd||c2bce||fffd||fffd|iXML|fffd||14e||c2bce||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||fffd||fffd||20b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||642||fffd||fffd||fffd||fffd||60b3||fffd||fffd||fffd||fffd||fffd|j
    Dim xmldata As Object
    Dim Result As Object
    Dim SubmitId As String
'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
    Set xmldata = CreateObject("Microsoft.XMLDOM")
    xmldata.async = False
    xmldata.LoadXML (objHTTP.responseText)
    
'XML|fffd|f|fffd|[|fffd|^|fffd||30e||fffd||fffd|o|fffd||fffd|-------------------------------------
    Set Result = xmldata.SelectNodes("SubmitFeedResponse/SubmitFeedResult/FeedSubmissionInfo")
    Dim ReportRequestId As String

    If Not Result Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
        If Result(0).SelectSingleNode("FeedProcessingStatus").Text = "_SUBMITTED_" Then
            TsvSend = Result(0).SelectSingleNode("FeedSubmissionId").Text
        Else
            TsvSend = Result(0).SelectSingleNode("FeedProcessingStatus").Text
        End If
    End If

    '|fffd||fffd||fffd|MOK|fffd||202||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||243|o|fffd|b|fffd|`ID|fffd||fffd||fffd||82||fffd||fffd||fffd|
    If IsNumeric(TsvSend) = True Then
        Name ActiveWorkbook.Path & "\|fffd||d3dc||fffd|t|fffd|@|fffd|C|fffd||fffd|\" & strFileName & ".txt" As ActiveWorkbook.Path & "\|fffd||d3dc||fffd|t|fffd|@|fffd|C|fffd||fffd|\|fffd|A|fffd|b|fffd|v|fffd||3c2||fffd|\" & strFileName & "_" & TsvSend & ".txt"
    Else
        Name ActiveWorkbook.Path & "\|fffd||d3dc||fffd|t|fffd|@|fffd|C|fffd||fffd|\" & strFileName & ".txt" As ActiveWorkbook.Path & "\|fffd||d3dc||fffd|t|fffd|@|fffd|C|fffd||fffd|\|fffd|A|fffd|b|fffd|v|fffd||3c2||fffd|\" & strFileName & "_|fffd||fffd||fffd|M|fffd||fffd||fffd|s" & TsvSend & ".txt"
    End If
    '|fffd|G|fffd||fffd||fffd|[|fffd||30f||a347||fffd|G|fffd||fffd||fffd|[|fffd|\|fffd|L|fffd||183|o|fffd|b|fffd|`ID
    '|fffd|_|fffd|C|fffd|A|fffd||fffd||fffd|O|fffd||143||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|o|fffd||fffd|


'*******************************************


End Function


Function AllReportFromRequestToGet()
'|fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|(|fffd|z|fffd||fffd|^)|fffd||255||3cd|X|fffd||fffd||fffd||fffd|SubmitId()|fffd||fffd|f|fffd||fffd||fffd|o|fffd||fffd|
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||fffd|Empty|fffd||fffd|
'|fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd||303||fffd||fffd|[|fffd|v|fffd||fffd||fffd||34a|J|fffd|n|fffd||fffd||fffd||fffd|w|fffd||839e||fffd||50c|o|fffd||fffd||fffd||fffd||fffd||a347||fffd||242||343||fffd||fffd|[|fffd|v|fffd||14c82||fffd||fffd||93c8||fffd||fffd||fffd||fffd||fffd|L|fffd|q

'|fffd|N|fffd||fffd||fffd|X|fffd||fffd||fffd|W|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|MD5|fffd||fffd||fffd|K|fffd|{|fffd|B|fffd|@|fffd||fffd||fffd||fffd||fffd|[|fffd|N|fffd|u|fffd|b|fffd|N|fffd||248||682||fffd||fffd||a347||fffd||34e|Q|fffd||190||752||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd|B
'|fffd||3d0||fffd||fffd||933e|=======================================================================================================

    
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'******************************
Dim MWSsKey As String
    MWSsKey = Worksheets("TOP").Range("B14")
Dim sKey As String
    sKey = Worksheets("Debug2").Range("B4")
Dim AWSkey As String
    AWSkey = Worksheets("Debug2").Range("B3")
Dim sellerID As String
    sellerID = Sheets("TOP").Range("B16")
'******************************

Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"


Dim APIVersion As String
    APIVersion = "2011-10-01"
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim ReportVal(3) As String
    ReportVal(0) = "_GET_FLAT_FILE_ACTIONABLE_ORDER_DATA_" '|fffd||fffd||fffd|o|fffd||5c2||312||fffd||fffd||fffd||fffd||fffd||fffd|||fffd|[|fffd|g
    ReportVal(1) = "_GET_MERCHANT_LISTINGS_DATA_"  '|fffd|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g
    ReportVal(2) = "_GET_AFN_INVENTORY_DATA_"  'FBA|fffd||74c||243||fffd||fffd|||fffd|[|fffd|g
    ReportVal(3) = "_GET_FLAT_FILE_PENDING_ORDERS_DATA_"  '|fffd||6d7||fffd||fffd||fffd||fffd||312||fffd||fffd||fffd||fffd||fffd||fffd|||fffd|[|fffd|g
    
Dim FileName As String


Dim i As Integer, j As Integer, k As Integer

'|fffd|K|fffd|v|fffd||203||fffd||fffd|||fffd|[|fffd|g|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd||fffd||24c|J|fffd||fffd||502||fffd||fffd||143||fffd||fffd|N|fffd|G|fffd|X|fffd|g********************************************************************************************************
Dim m As Long

For m = 0 To 3 '/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
RequestTake2: '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gID|fffd||fffd||fffd||502||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||a347||fffd||fffd||84bc||fffd||fffd|


    '|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
    If Format(Now(), "hh") >= 9 Then
        timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
    Else
        timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
    End If
    
    
    '|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd|j|fffd||c42c|
                    
        rawText = ""
            ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
        rawText = rawText _
      & "AWSAccessKeyId=" & AWSkey _
      & "&Action=RequestReport" _
      & "&MWSAuthToken=" & MWSsKey _
      & "&MarketplaceIdList.Id.1=A1VC38T7YXB528" _
      & "&ReportType=" & ReportVal(m) _
      & "&SellerId=" & sellerID _
      & "&SignatureMethod=HmacSHA256" _
      & "&SignatureVersion=2" _
      & "&Timestamp=" & timestamp _
      & "&Version=2009-01-01" _
    
      '|fffd||202||fffd||fffd||102||fffd||fffd||fffd||fffd|C|fffd||203|N|fffd|G|fffd||fffd|
      '& "&ContentMD5Value=" & myMD5_base64 _
      '  & "&PurgeAndReplace=false" _

            '|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------
            '|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||103|V|fffd|[|fffd|N|fffd||fffd||fffd|b|fffd|g|fffd|L|fffd|[|fffd||143|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd|
            rawTextToSign = "POST" & vbLf & ecsaddress & vbLf & "/" & vbLf & rawText
            hash = Hmac(sKey, rawTextToSign)
            
            '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
            hash_2 = ""
            For k = 1 To 64 Step 2
                hash_cut2 = Mid(hash, k, 2)
                hash_2 = hash_2 & HEX2BIN(hash_cut2)
            Next
            '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
            hash_2 = hash_2 & "00"
              
            'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
            sign = ""
            For k = 1 To 256 Step 6
                hash_cut10 = Mid(hash_2, k, 6)
                hash_10 = ncdec(2, hash_cut10)
                base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
                sign = sign & base64Array(hash_10)
            Next
            '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
            sign = sign & "="
            'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
            sign = URLencode(sign)
            '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gURL|fffd||fffd||fffd||fffd|
            Url = "https://" & ecsaddress & "/?" & rawText & "&Signature=" & sign
            '----------------------------------------------------------------------------------
            
    '|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p
    If Worksheets("Debug2").Cells(1, 3) = "ON" Then
        Sheets("Debug2").Cells(1, 2) = Url
    End If
    
    '*******************************************
    
        ChDrive ActiveWorkbook.Path
        ChDir ActiveWorkbook.Path
        '|fffd|t|fffd|B|fffd|[|fffd|h|fffd||115c2||fffd|
        Dim msg1 As String
        Dim objHTTP
    
        Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||303||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||115d0|M|fffd||fffd||fffd||702||fffd|"
        
        ' XMLHTTP|fffd||fffd||fffd||c42c|
        Set objHTTP = CreateObject("MSXML2.XMLHTTP")
        '|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||702||fffd|URL|fffd||fffd|OK
        Call objHTTP.Open("POST", Url, False)
        '|fffd|w|fffd|b|fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Call objHTTP.setRequestHeader("user-agent", "KTN-TOOL (VBA)")  '|fffd||302||fffd||fffd||24f||18d||fffd||fffd||142||fffd||fffd||9576||fffd||fffd||fffd||fffd||fffd|
        Call objHTTP.send
        
        Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||303||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||115d0|M|fffd||fffd||fffd||702||fffd||fffd||fffd|"
        
        '|fffd||fffd||fffd|X|fffd|||fffd||fffd||fffd|X|fffd||fffd||fffd||c2bce||fffd||fffd|iXML|fffd||14e||c2bce||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||fffd||fffd||20b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||642||fffd||fffd||fffd||fffd||60b3||fffd||fffd||fffd||fffd||fffd|j
        msg1 = objHTTP.responseText
    '|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p
    If Worksheets("Debug2").Cells(1, 3) = "ON" Then
        Sheets("Debug2").Cells(1, 3) = objHTTP.responseText
    End If
    
    
    '************************
    
        Dim xmldata As Object
        Dim Result As Object
        Dim ReportRequestId(3) As String
    'MWS|fffd|f|fffd|[|fffd|^|fffd||64fe||fffd||fffd||fffd|s---------------------------------------
        Set xmldata = CreateObject("Microsoft.XMLDOM")
        xmldata.async = False
        xmldata.LoadXML (objHTTP.responseText)
        
    'XML|fffd|f|fffd|[|fffd|^|fffd||30e||fffd||fffd|o|fffd||fffd|-------------------------------------
        Set Result = xmldata.SelectNodes("RequestReportResponse/RequestReportResult/ReportRequestInfo")
        Dim q As Long
        If Not Result Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
            If Result(0).SelectSingleNode("ReportProcessingStatus").Text = "_SUBMITTED_" Then
                ReportRequestId(m) = Result(0).SelectSingleNode("ReportRequestId").Text
                Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||303||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||d7742||fffd||fffd||fffd||702||fffd||fffd||fffd|"
            Else
                '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd|
                For q = 1 To 120
                    ReportRequestId(m) = Empty
                    Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||111||fffd||fffd|M|fffd||702||151||48b|@ |fffd|c|fffd||fffd|" & 121 - q & "|fffd|b"
                    DoEvents
                    Sleep 1000
                    GoTo RequestTake2
                Next
                
            End If
        End If
NextId:
    DoEvents
Next
'|fffd||fffd||fffd||fffd||fffd||702||150||fffd||243||fffd||fffd|||fffd|[|fffd|g|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||502||fffd||fffd||102||fffd||fffd||fffd||fffd|i|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gID|fffd||fffd|z|fffd||fffd||241|j'//////////////////////////////////////////////////////////////


'|fffd||fffd||fffd||42c42||fffd||fffd||fffd||fffd||fffd||fffd||18d||10a|J|fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gID|fffd|i|fffd|j|fffd||16102||7c2||fffd||182||fffd||fffd||702||14a||fffd||fffd||fffd||fffd|j
    
'|fffd||fffd||fffd|||fffd|[|fffd|gID|fffd|w|fffd||fffd||150||fffd||fffd||fffd||fffd|m|fffd|F|fffd|i|fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd|j***********************************************************************
Dim n As Long
'|fffd|K|fffd|v|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||502||fffd||fffd|B
For n = 0 To 3

    Dim ReportProcessingStatus As String
    '|fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s========================================
ReCheck:
    Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||310||fffd||fffd||fffd||fffd||fffd||502||fffd|Amazon|fffd||256||20a2||fffd||fffd||fffd||d0b9||fffd||702||fffd|"
    ReportProcessingStatus = GetReportStatus(ReportRequestId(n))
    '==========================================================
    Dim tm As Long
    
    FileName = ActiveWorkbook.Path
    FileName = Left(FileName, Len(FileName) - 12)
    FileName = FileName & "\Amazon|fffd||fffd||fffd|||fffd|[|fffd|g" '|fffd|f|fffd|B|fffd||fffd||fffd|N|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||fffd|i|fffd||14c||fffd||301||fffd||fffd||202||fffd||fffd|j
        
        Select Case ReportVal(n)
            Case "_GET_MERCHANT_LISTINGS_DATA_"
                FileName = FileName & "\|fffd|o|fffd|i|fffd||68d||5c3||fffd||fffd|||fffd|[|fffd|g.txt"
            Case "_GET_FLAT_FILE_OPEN_LISTINGS_DATA_"
                FileName = FileName & "\|fffd|o|fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g.txt"
            Case "_GET_AFN_INVENTORY_DATA_"
                FileName = FileName & "\FBA|fffd||74c||243||fffd||fffd|||fffd|[|fffd|g.txt"
            Case "_GET_FLAT_FILE_ACTIONABLE_ORDER_DATA_"
                FileName = FileName & "\|fffd||fffd||fffd|o|fffd||5c3||fffd||fffd|||fffd|[|fffd|g.txt"
            Case "_GET_FLAT_FILE_PENDING_ORDERS_DATA_"
                FileName = FileName & "\|fffd||6d7||fffd||fffd||fffd||fffd||312||fffd||fffd||fffd||fffd||fffd||fffd|||fffd|[|fffd|g.txt"
        End Select
    
    If IsNumeric(ReportProcessingStatus) = True Then
        '|fffd||fffd||fffd|||fffd|[|fffd|gID|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||38e||c2bce||fffd||fffd||fffd|
        Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||14e||fffd||835e||fffd||742||702||fffd|"
        Dim GeneratedReportId As String
            GeneratedReportId = ReportProcessingStatus
            
            '|fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd||fffd|s========================================
            Call GetReport(GeneratedReportId, ReportVal(n), FileName)
            '==========================================================
            ReportRequestId(n) = Empty
    Else
        '|fffd|w|fffd||839e||fffd||511||48b|@|fffd||fffd||fffd||113|x|fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd|
        For tm = 1 To 60
            DoEvents
            Sleep 1000
            Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||702||151||48b|@|fffd|@|fffd||103|`|fffd|F|fffd|b|fffd|N|fffd||702||14e|c|fffd||fffd|" & 60 - tm & "|fffd|b"
        Next
        GoTo ReCheck
    End If

DoEvents
Next '//////////////////////////////////////////////////////////////////////////////////////////////////////////////////

EscFunc:
Dim SubmitResolt(3) As Variant
    SubmitResolt(0) = ReportRequestId(0)
    SubmitResolt(1) = ReportRequestId(1)
    SubmitResolt(2) = ReportRequestId(2)

    AllReportFromRequestToGet = SubmitResolt
    
End Function

Function GetReportStatus(ReportRequestId As String)
'|fffd||fffd||fffd|||fffd|[|fffd|gID|fffd||fffd||fffd||7436||fffd||fffd||fffd||fffd||502||fffd||502||fffd||fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'******************************
Dim MWSsKey As String
    MWSsKey = Worksheets("TOP").Range("B14")
Dim sKey As String
    sKey = Worksheets("Debug2").Range("B4")
Dim AWSkey As String
    AWSkey = Worksheets("Debug2").Range("B3")
Dim strFileName As String
    
'******************************
    
Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"
Dim sellerID As String
    sellerID = Worksheets("TOP").Range("B16")

Dim APIVersion As String
    APIVersion = "2011-10-01"
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Integer, j As Integer, k As Integer

'********************************************************************************************************
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") >= 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If


'|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd|j|fffd||c42c|
                
    rawText = ""
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
    rawText = rawText _
  & "AWSAccessKeyId=" & AWSkey _
  & "&Action=GetReportRequestList" _
  & "&MWSAuthToken=" & MWSsKey _
  & "&MarketplaceIdList.Id.1=A1VC38T7YXB528" _
  & "&ReportRequestIdList.Id.1=" & ReportRequestId _
  & "&SellerId=" & sellerID _
  & "&SignatureMethod=HmacSHA256" _
  & "&SignatureVersion=2" _
  & "&Timestamp=" & timestamp _
  & "&Version=2009-01-01" _

  '|fffd||202||fffd||fffd||102||fffd||fffd||fffd||fffd|C|fffd||203|N|fffd|G|fffd||fffd|
  '& "&ContentMD5Value=" & myMD5_base64 _
  '  & "&PurgeAndReplace=false" _

        '|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------
        '|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||103|V|fffd|[|fffd|N|fffd||fffd||fffd|b|fffd|g|fffd|L|fffd|[|fffd||143|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd|
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gURL|fffd||fffd||fffd||fffd|
        Url = "https://" & ecsaddress & "/?" & rawText & "&Signature=" & sign
        '----------------------------------------------------------------------------------
        



'*******************************************
'|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p
If Sheets("Debug2").Cells(1, 3) <> "" Then
    Sheets("Debug2").Cells(1, 2) = Url
End If

    Dim xmldata As Object
    Dim Result As Object
    
    ChDrive ActiveWorkbook.Path
    ChDir ActiveWorkbook.Path
    
    Set xmldata = CreateObject("Microsoft.XMLDOM")
    xmldata.async = False
    xmldata.Load Url

'XML|fffd|f|fffd|[|fffd|^|fffd||30e||fffd||fffd|o|fffd||fffd|-------------------------------------
    Set Result = xmldata.SelectNodes("GetReportRequestListResponse/GetReportRequestListResult/ReportRequestInfo")
    Dim ReportProcessingStatus As String

    If Not Result Is Nothing Then '|fffd||64fe||fffd||fffd||42a82||fffd||fffd||fffd||381|A
        If Result(0).SelectSingleNode("ReportProcessingStatus").Text = "_DONE_" Then
            ReportProcessingStatus = Result(0).SelectSingleNode("GeneratedReportId").Text
        Else
            ReportProcessingStatus = Result(0).SelectSingleNode("ReportProcessingStatus").Text
        End If
    End If
    
    GetReportStatus = ReportProcessingStatus
    
End Function

Function GetReport(GeneratedReportId As String, ReprotVal As String, FileName As String)
'|fffd||fffd||fffd|||fffd|[|fffd|gID|fffd||fffd||fffd||fffd|e|fffd|L|fffd|X|fffd|g|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||6d1||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd||fffd||fffd|N|fffd|V|fffd||fffd||fffd||fffd|
'|fffd||3d0||fffd||fffd||933e|=======================================================================================================
'MWS|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd|p|fffd||315||3d0||fffd|------------------------------------------------
Dim Url As String
Dim rawText As String
Dim timestamp As String
Dim SignedUrl As String

'******************************
Dim MWSsKey As String
    MWSsKey = Worksheets("TOP").Range("B14")
Dim sKey As String
    sKey = Worksheets("Debug2").Range("B4")
Dim AWSkey As String
    AWSkey = Worksheets("Debug2").Range("B3")
    
'******************************
    
Dim MarketPlaceID As String
    MarketPlaceID = "A1VC38T7YXB528"
Dim sellerID As String
    sellerID = Worksheets("TOP").Range("B16")

Dim APIVersion As String
    APIVersion = "2011-10-01"
Dim ecsaddress As String
    ecsaddress = "mws.amazonservices.jp"
   
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||302||fffd||fffd||7c2||315||3d0||fffd|-----------------------------------------------------
Dim hash, hash_2, hash_cut2, hash_10, hash_cut10 As String
Dim base64Array As Variant
Dim base64Array2 As Variant
Dim sign As String
Dim sign2 As String
Dim rawTextToSign As String
Dim rawTextToSign2 As String

Dim i As Integer, j As Integer, k As Integer

'********************************************************************************************************
'|fffd||fffd||fffd||fffd||fffd||c42c||fffd||24e|g|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|X|fffd|^|fffd||fffd||fffd|v---------------------------------------------------------------------------------
If Format(Now(), "hh") >= 9 Then
    timestamp = Format(Date, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
Else
    timestamp = Format(Date - 1, "yyyy-mm-dd") & "T" & Format(CDate(DateAdd("h", -9, Time)), "hh%3AMM%3Ass") & "Z"
End If


'|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd|i|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd|j|fffd||c42c|
                
    rawText = ""
        ' |fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|g|fffd||fffd||fffd||c42c|(|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||343|A|fffd||fffd||fffd|t|fffd|@|fffd|x|fffd|b|fffd|g|fffd||fffd||fffd||202||302||14f||fffd||fffd||502||fffd||3c2||fffd||fffd||fffd||fffd|NG)
    rawText = rawText _
  & "AWSAccessKeyId=" & AWSkey _
  & "&Action=GetReport" _
  & "&MWSAuthToken=" & MWSsKey _
  & "&MarketplaceIdList.Id.1=A1VC38T7YXB528" _
  & "&ReportId=" & GeneratedReportId _
  & "&SellerId=" & sellerID _
  & "&SignatureMethod=HmacSHA256" _
  & "&SignatureVersion=2" _
  & "&Timestamp=" & timestamp _
  & "&Version=2009-01-01" _

  '|fffd||202||fffd||fffd||102||fffd||fffd||fffd||fffd|C|fffd||203|N|fffd|G|fffd||fffd|
  '& "&ContentMD5Value=" & myMD5_base64 _
  '  & "&PurgeAndReplace=false" _

        '|fffd||fffd||fffd||fffd||fffd|t|fffd||fffd|URL|fffd||30d||c42c|-----------------------------------------------------------------
        '|fffd||fffd||fffd||fffd||fffd||38f||6d5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||103|V|fffd|[|fffd|N|fffd||fffd||fffd|b|fffd|g|fffd|L|fffd|[|fffd||143|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd|
        rawTextToSign = "GET" & vbLf & ecsaddress & vbLf & "/" & vbLf & rawText
        hash = Hmac(sKey, rawTextToSign)
        
        '2|fffd|i|fffd||fffd||fffd||255||3ca||fffd|
        hash_2 = ""
        For k = 1 To 64 Step 2
            hash_cut2 = Mid(hash, k, 2)
            hash_2 = hash_2 & HEX2BIN(hash_cut2)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|00|fffd||156||fffd||fffd||7c2||fffd|
        hash_2 = hash_2 & "00"
          
        'BASE64|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = ""
        For k = 1 To 256 Step 6
            hash_cut10 = Mid(hash_2, k, 6)
            hash_10 = ncdec(2, hash_cut10)
            base64Array = Array("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/")
            sign = sign & base64Array(hash_10)
        Next
        '|fffd|s|fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||302||fffd|=|fffd||156||fffd||fffd||7c2||fffd|
        sign = sign & "="
        'URL|fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
        sign = URLencode(sign)
        '|fffd||fffd||fffd|N|fffd|G|fffd|X|fffd|gURL|fffd||fffd||fffd||fffd|
        Url = "https://" & ecsaddress & "/?" & rawText & "&Signature=" & sign
        '----------------------------------------------------------------------------------
        



'*******************************************
'|fffd|f|fffd|o|fffd|b|fffd|O|fffd|p
If Sheets("Debug2").Cells(1, 3) <> "" Then
    Sheets("Debug2").Cells(1, 2) = Url
End If

  Call TextFileDownload(Url, FileName)
    
End Function
Function TextFileDownload(Url As String, SaveName As String)

'Dim xmlHttp
    'Set xmlHttp = CreateObject("Msxml2.XMLHTTP")
    
Dim xmlHttp As XMLHTTP60
    Set xmlHttp = New XMLHTTP60

    xmlHttp.Open "GET", Url, False
    

            Application.StatusBar = SaveName & "|fffd||312||fffd||fffd|g|fffd||fffd||1c2||74e||fffd||fffd||702||fffd||fffd|i|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||303|T|fffd|C|fffd|Y|fffd||fffd||fffd||50ab||fffd||fffd||fffd||a347||fffd||34e||fffd||fffd||502||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|j"
    
   xmlHttp.send

    Do While xmlHttp.readyState < 4
        DoEvents
        Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||312||fffd||fffd|g|fffd||313||1c2||74d||fffd||fffd||751||482||fffd||fffd||142||fffd|"
        Sleep 100
        Application.StatusBar = ""
    Loop
    
    Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||313||1c2||74d||fffd||fffd||74a||fffd||fffd||fffd|"
    'xmlHttp.send
    
    
    Dim html As String

    html = StrConv(xmlHttp.responseBody, vbUnicode)
    Set xmlHttp = Nothing

    Dim intFF As Integer

    intFF = FreeFile

    Open SaveName For Output As #1

    Print #1, html

    Close #1
    Application.StatusBar = "|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||30f||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd|"
    
End Function




Public Function HexToBase64(ByVal strHex As String) As String
     
    ' Function to convert a hex string into a base64 encoded string.
    Dim lngValue    As Long
    Dim lngTemp     As Long
    Dim lngChar     As Long
    Dim intLen      As Integer
    Dim k           As Integer
    Dim j           As Integer
    Dim strWord     As String
    Dim str64       As String
    Dim intTerm     As Integer
    
    Const B64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
     
    intLen = Len(strHex)
     
    ' Pad with zeros to multiple of 3 bytes.
    intTerm = intLen Mod 6
    If (intTerm = 4) Then
        strHex = strHex & "00"
        intLen = intLen + 2
    End If
    If (intTerm = 2) Then
        strHex = strHex & "0000"
        intLen = intLen + 4
    End If
     
    ' Parse into groups of 3 hex bytes.
    For k = 1 To intLen Step 2
        j = j + 1
        strWord = strWord & Mid(strHex, k, 2)
        If (j = 3) Then
            ' Convert 3 8-bit bytes into 4 6-bit characters.
            lngValue = CCur("&H" & strWord)
             
            lngTemp = Fix(lngValue / 64)
            lngChar = lngValue - (64 * lngTemp)
            str64 = Mid(B64, lngChar + 1, 1)
            lngValue = lngTemp
             
            lngTemp = Fix(lngValue / 64)
            lngChar = lngValue - (64 * lngTemp)
            str64 = Mid(B64, lngChar + 1, 1) & str64
            lngValue = lngTemp
             
            lngTemp = Fix(lngValue / 64)
            lngChar = lngValue - (64 * lngTemp)
            str64 = Mid(B64, lngChar + 1, 1) & str64
             
            str64 = Mid(B64, lngTemp + 1, 1) & str64
             
            HexToBase64 = HexToBase64 & str64
            j = 0
            strWord = ""
        End If
    Next
    
    ' Account for padding.
    If (intTerm = 4) Then HexToBase64 = Left(HexToBase64, Len(HexToBase64) - 1) & "="
    If (intTerm = 2) Then HexToBase64 = Left(HexToBase64, Len(HexToBase64) - 2) & "=="

End Function

' |fffd|w|fffd||80b5||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd| MD5 |fffd|n|fffd|b|fffd|V|fffd||fffd||fffd|l|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
Function GetFileHashMD5(strFileName)
    Dim MD5
    Set MD5 = CreateObject("System.Security.Cryptography.MD5CryptoServiceProvider")
    MD5.ComputeHash_2 (ReadBinaryFile(strFileName))
    Dim msxml
    Set msxml = CreateObject("MSXML2.DOMDocument")
    Dim el
    Set el = msxml.createElement("tmp")
    el.dataType = "bin.hex"
    el.nodeTypedValue = MD5.hash
    GetFileHashMD5 = el.Text
End Function
' |fffd|w|fffd||80b5||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|o|fffd|C|fffd|g|fffd|z|fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|
Function ReadBinaryFile(strFileName)
    Const adTypeBinary = 1
    Dim stm
    Set stm = CreateObject("ADODB.Stream")
    stm.Type = adTypeBinary
    stm.Open
    stm.LoadFromFile strFileName
    ReadBinaryFile = stm.Read
End Function


'|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd|16|fffd|i|fffd||fffd||fffd|`|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||243|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|B
Function encodeToHex(bytes() As Byte)
    encodeToHex = Encode("bin.Hex", bytes)
End Function
 
'|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd|BASE64|fffd|`|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||243|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|B
Function encodeToBase64(bytes() As Byte)
    encodeToBase64 = Encode("bin.base64", bytes)
End Function
 
'16|fffd|i|fffd||fffd||fffd|`|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd||243|f|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|B
Function decodeFromHex(Text As String)
    decodeFromHex = Decode("bin.Hex", Text)
End Function
 
'BASE64|fffd|`|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd||243|f|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|B
Function decodeFromBase64(Text As String)
    decodeFromBase64 = Decode("bin.base64", Text)
End Function
 
'|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd|w|fffd||fffd|^|fffd|C|fffd|v|fffd||315||fffd||fffd||fffd||fffd||fffd||243|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|B
Function Encode(dataType As String, bytes() As Byte)
    Dim oXmlDoc As New DOMDocument60 'Microsoft XML, v6.0|fffd||fffd||fffd|K|fffd|v
    With oXmlDoc
        .LoadXML ("<root />")
        .DocumentElement.dataType = dataType
        .DocumentElement.nodeTypedValue = bytes
    End With
    Encode = Replace(oXmlDoc.DocumentElement.Text, vbLf, "")
End Function
 
'|fffd|w|fffd||fffd|^|fffd|C|fffd|v|fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd||243|f|fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd|B
Function Decode(dataType As String, Text As String)
    Dim oXmlDoc As New DOMDocument60 'Microsoft XML, v6.0|fffd||fffd||fffd|K|fffd|v
    With oXmlDoc
        .LoadXML ("<root />")
        .DocumentElement.dataType = dataType
        .DocumentElement.Text = Text
    End With
    Decode = oXmlDoc.DocumentElement.nodeTypedValue
End Function

Function EncodeBase64(Text As String) As String
  Dim arrData() As Byte
  arrData = StrConv(Text, vbFromUnicode)

  Dim objXML As MSXML2.DOMDocument60
  Dim objNode As MSXML2.IXMLDOMElement

  Set objXML = New MSXML2.DOMDocument60
  Set objNode = objXML.createElement("b64")

  objNode.dataType = "bin.base64"
  objNode.nodeTypedValue = arrData
  EncodeBase64 = objNode.Text

  Set objNode = Nothing
  Set objXML = Nothing
End Function



' |fffd||209||fffd||fffd|R|fffd|s|fffd|y
' http://d.hatena.ne.jp/n7shi/20100910/1284112553
' https://code.msdn.microsoft.com/office/VBACRC-32-dad7d087
' Dim I%, J%, R&, R1&|fffd||fffd||fffd|Q|fffd|l
' http://www.atmarkit.co.jp/fdotnet/vb6tonet/vb6tonet30/vb6tonet30_01.html

Private Sub InitCrc32Table()
    Dim i%, j%, R&, R1&
    For i = 0 To 255
        R = i
        For j = 0 To 7
            R1 = R And 1
            R = (R - R1) / 2
            If R < 0 Then R = R - &H80000000
            If R1 Then R = R Xor &HEDB88320
        Next j
        Crc32Table(i) = R
    Next i
End Sub

Public Function GetCrc32FromFile&(Path$)
    Dim R&, i&, b As Byte, FL&
    If Crc32Table(255) = 0 Then InitCrc32Table
    FL = FileLen(Path)
    Open Path For Binary Lock Read As #2
    R = Not 0
    For i = 1 To FL
        Get #2, , b
        R = (Int(R / 256) And &HFFFFFF) Xor Crc32Table((R Xor b) And &HFF)
    Next i
    Close #2
    GetCrc32FromFile = Not R
End Function






Attribute VB_Name = "Module5"
Public Declare Sub UrlSign Lib "Sign.dll" (ByVal Url As String, ByVal SignedUrl As String, ByVal Secretkey As String)
'advapi32.dll
'http://su-u.jp/juju/%B5%A4%A4%DE%A4%B0%A4%EC%C6%FC%B5%AD/2007-03-08.html
Private Declare Function CryptAcquireContext Lib "advapi32.dll" Alias "CryptAcquireContextA" _
                            (ByRef phProv As Long, ByVal pszContainer As String, ByVal pszProvider As String, _
                             ByVal dwProvType As Long, ByVal dwFlags As Long) As Long
Private Declare Function CryptReleaseContext Lib "advapi32.dll" _
                            (ByVal hProv As Long, ByVal dwFlags As Long) As Long
Private Declare Function CryptCreateHash Lib "advapi32.dll" _
                            (ByVal hProv As Long, ByVal Algid As Long, ByVal hKey As Long, ByVal dwFlags As Long, _
                             ByRef phHash As Long) As Long
Private Declare Function CryptDestroyHash Lib "advapi32.dll" _
                            (ByVal hHash As Long) As Long
Private Declare Function CryptHashData Lib "advapi32.dll" _
                            (ByVal hHash As Long, pbData As Any, ByVal cbData As Long, ByVal dwFlags As Long) As Long
Private Declare Function CryptGetHashParam Lib "advapi32.dll" _
                            (ByVal hHash As Long, ByVal dwParam As Long, pbData As Any, ByRef pcbData As Long, _
                             ByVal dwFlags As Long) As Long
Private Declare Sub Sleep Lib "kernel32" (ByVal dwMs As Long)

Private Const PROV_RSA_FULL   As Long = 1
Private Const PROV_RSA_AES    As Long = 24
Private Const CRYPT_VERIFYCONTEXT As Long = &HF0000000

Private Const HP_HASHVAL      As Long = 2
Private Const HP_HASHSIZE     As Long = 4

Private Const ALG_TYPE_ANY    As Long = 0
Private Const ALG_CLASS_HASH  As Long = 32768

Private Const ALG_SID_MD2     As Long = 1
Private Const ALG_SID_MD4     As Long = 2
Private Const ALG_SID_MD5     As Long = 3
Private Const ALG_SID_SHA     As Long = 4
Private Const ALG_SID_SHA_256 As Long = 12
Private Const ALG_SID_SHA_384 As Long = 13
Private Const ALG_SID_SHA_512 As Long = 14

Private Const CALG_MD2        As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_MD2)
Private Const CALG_MD4        As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_MD4)
Private Const CALG_MD5        As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_MD5)
Private Const CALG_SHA        As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SHA)
Private Const CALG_SHA_256    As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SHA_256)
Private Const CALG_SHA_384    As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SHA_384)
Private Const CALG_SHA_512    As Long = (ALG_CLASS_HASH Or ALG_TYPE_ANY Or ALG_SID_SHA_512)

' Create Hash
Private Function CreateHash(abytData() As Byte, ByVal lngAlgID As Long) As String
    Dim hProv As Long, hHash As Long
    Dim abytHash(0 To 63) As Byte
    Dim lngLength As Long
    Dim lngResult As Long
    Dim strHash As String
    Dim i As Long
    strHash = ""
    If CryptAcquireContext(hProv, vbNullString, vbNullString, _
                           IIf(lngAlgID >= CALG_SHA_256, PROV_RSA_AES, PROV_RSA_FULL), _
                           CRYPT_VERIFYCONTEXT) <> 0& Then
        If CryptCreateHash(hProv, lngAlgID, 0&, 0&, hHash) <> 0& Then
            lngLength = UBound(abytData()) - LBound(abytData()) + 1
            If lngLength > 0 Then lngResult = CryptHashData(hHash, abytData(LBound(abytData())), lngLength, 0&) _
                             Else lngResult = CryptHashData(hHash, ByVal 0&, 0&, 0&)
            If lngResult <> 0& Then
                lngLength = UBound(abytHash()) - LBound(abytHash()) + 1
                If CryptGetHashParam(hHash, HP_HASHVAL, abytHash(LBound(abytHash())), lngLength, 0&) <> 0& Then
                    For i = 0 To lngLength - 1
                        strHash = strHash & Right$("0" & Hex$(abytHash(LBound(abytHash()) + i)), 2)
                    Next
                End If
            End If
            CryptDestroyHash hHash
        End If
        CryptReleaseContext hProv, 0&
    End If
    CreateHash = LCase$(strHash)
End Function

' Create Hash From String(Shift_JIS)
Private Function CreateHashString(ByVal strData As String, ByVal lngAlgID As Long) As String
    CreateHashString = CreateHash(StrConv(strData, vbFromUnicode), lngAlgID)
End Function

' Create Hash From File
Private Function CreateHashFile(ByVal strFileName As String, ByVal lngAlgID As Long) As String
    Dim abytData() As Byte
    Dim intFile As Long
    Dim lngError As Long
    On Error Resume Next
        If Len(Dir(strFileName)) > 0 Then
            intFile = FreeFile
            Open strFileName For Binary Access Read Shared As #intFile
            abytData() = InputB(LOF(intFile), #intFile)
            Close #intFile
        End If
        lngError = Err.Number
    On Error GoTo 0
    If lngError = 0 Then CreateHashFile = CreateHash(abytData(), lngAlgID) _
                    Else CreateHashFile = ""
End Function

' MD5
Public Function CreateMD5Hash(abytData() As Byte) As String
    CreateMD5Hash = CreateHash(abytData(), CALG_MD5)
End Function
Public Function CreateMD5HashString(ByVal strData As String) As String
    CreateMD5HashString = CreateHashString(strData, CALG_MD5)
End Function
Public Function CreateMD5HashFile(ByVal strFileName As String) As String
    CreateMD5HashFile = CreateHashFile(strFileName, CALG_MD5)
End Function

' SHA-1
Public Function CreateSHA1Hash(abytData() As Byte) As String
    CreateSHA1Hash = CreateHash(abytData(), CALG_SHA)
End Function
Public Function CreateSHA1HashString(ByVal strData As String) As String
    CreateSHA1HashString = CreateHashString(strData, CALG_SHA)
End Function
Public Function CreateSHA1HashFile(ByVal strFileName As String) As String
    CreateSHA1HashFile = CreateHashFile(strFileName, CALG_SHA)
End Function

' SHA-256
Public Function CreateSHA256Hash(abytData() As Byte) As String
    CreateSHA256Hash = CreateHash(abytData(), CALG_SHA_256)
End Function
Public Function CreateSHA256HashString(ByVal strData As String) As String
    CreateSHA256HashString = CreateHashString(strData, CALG_SHA_256)
End Function
Public Function CreateSHA256HashFile(ByVal strFileName As String) As String
    CreateSHA256HashFile = CreateHashFile(strFileName, CALG_SHA_256)
End Function

' SHA-384
Public Function CreateSHA384Hash(abytData() As Byte) As String
    CreateSHA384Hash = CreateHash(abytData(), CALG_SHA_384)
End Function
Public Function CreateSHA384HashString(ByVal strData As String) As String
    CreateSHA384HashString = CreateHashString(strData, CALG_SHA_384)
End Function
Public Function CreateSHA384HashFile(ByVal strFileName As String) As String
    CreateSHA384HashFile = CreateHashFile(strFileName, CALG_SHA_384)
End Function

' SHA-512
Public Function CreateSHA512Hash(abytData() As Byte) As String
    CreateSHA512Hash = CreateHash(abytData(), CALG_SHA_512)
End Function
Public Function CreateSHA512HashString(ByVal strData As String) As String
    CreateSHA512HashString = CreateHashString(strData, CALG_SHA_512)
End Function
Public Function CreateSHA512HashFile(ByVal strFileName As String) As String
    CreateSHA512HashFile = CreateHashFile(strFileName, CALG_SHA_512)
End Function
Function URLhenkan(Str As String) As String
Set sc = CreateObject("ScriptControl")
sc.Language = "Jscript"
Set js = sc.CodeObject
URLhenkan = js.encodeURIComponent(Str)
End Function
'Hmac-SHA256
'http://plus-sys.jugem.jp/?eid=215
Public Function Hmac(sKey, rawTextToSign As String) As String

Dim arKey() As Byte
Dim ipad As String
Dim opad As String
Dim buff() As Byte, offset As Long

'|fffd||fffd||fffd||fffd||fffd||fffd|
    ipad = ""
    opad = ""
    hash = ""
    ReDim arKey(0 To 63)

'|fffd||95a7||fffd||fffd||fffd||fffd||fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||c2||93||1cd||fffd||fffd||741|A|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||595||3ca||fffd||fffd||fffd|z|fffd||fffd||58a|i|fffd|[
    For i = 0 To Len(sKey) - 1
        arKey(i) = Asc(Mid(sKey, i + 1, 1))
    Next

'64|fffd||fffd||fffd||fffd||fffd||256||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||341|A|fffd|[|fffd||fffd||fffd|Z|fffd|b|fffd|g
    For i = Len(sKey) To 63
        arKey(i) = 0
    Next

'innerpad|fffd|y|fffd||fffd|outerpad|fffd||c42c|
    For i = 0 To 63
        ipad = ipad & Chr(arKey(i) Xor &H36)
        opad = opad & Chr(arKey(i) Xor &H5C)
    Next

'|fffd|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd|1|fffd||fffd||fffd|
'(innerpad+|fffd||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||fffd|)|fffd||fffd||fffd|n|fffd|b|fffd|V|fffd||fffd||fffd|E|fffd|E|fffd|E|fffd|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd|1
    hash = CreateSHA256HashString(ipad & rawTextToSign)

'|fffd|n|fffd|b|fffd|V|fffd||fffd||fffd||fffd||fffd||fffd|2|fffd||fffd||fffd|
    buff = StrConv(opad, vbFromUnicode)
    offset = UBound(buff)
    ReDim Preserve buff(offset + Len(hash) \ 2)

    For i = 1 To (Len(hash) \ 2)
        buff(offset + i) = CByte("&H" & Mid(hash, (i - 1) * 2 + 1, 2))
    Next
    hash = CreateSHA256Hash(buff)
    Hmac = hash

End Function
Public Function HEX2BIN(ByVal hx As String) As String
    Dim num As Long
    Dim bin As String
    Dim i As Long
    num = CLng("&H" & hx)
        For i = Len(hx) * 4 - 1 To 0 Step -1
            bin = bin & -CInt((num And (2 ^ i)) <> 0)
        Next
    HEX2BIN = bin
End Function
'n|fffd|i|fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd|strNumber|fffd||fffd|10|fffd|i|fffd||fffd||fffd||310||fffd||fffd||fffd||fffd||255||3ca||fffd||fffd||fffd||fffd||115||502||fffd|
'http://www5d.biglobe.ne.jp/~tomoya03/shtml/algorithm/Convert.htm
Public Function ncdec(ByVal n As Long, ByVal strNumber As String) As Long

    Dim lngt As Long
    Dim c As Long
    Dim i As Long
    lngt = 0&
    c = 1&
    For i = 1& To Len(strNumber)
        lngt = lngt + subncdec(Left$(Right$(strNumber, i), 1)) * c
        c = c * n
    Next i
    ncdec = lngt

End Function
'URL |fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h
'http://www.geocities.co.jp/SilkRoad/4511/vb/urlenc.htm
Public Function URLencode(ByRef strSource As String) As String

 Dim lngLength As Long                                          '|fffd||fffd||fffd||fffd||fffd||fffd||303|T|fffd|C|fffd|Y(S-JIS |fffd||3ca||fffd||fffd||fffd|)|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
 Dim bytSource() As Byte                                        'ANSI/S-JIS |fffd||255||3ca||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd|^|fffd|z|fffd||fffd|
 Dim strBuffer As String                                        'URL |fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a39e||fffd|i|fffd|[|fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@
 Dim bytSingle As Byte                                          '|fffd|z|fffd||42a42||7532||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd| 1 |fffd|o|fffd|C|fffd|g|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
 Dim strSingleHex As String                                     '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd| 16 |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|
 Dim lngReadCount As Long                                       'bytSource |fffd||1c2||74d||fffd||fffd||748||292|u|fffd|J|fffd|E|fffd||fffd||fffd|^
 Dim lngWriteCount As Long                                      'strBuffer |fffd||fffd||fffd||fffd||fffd||fffd||fffd||748||292|u|fffd|J|fffd|E|fffd||fffd||fffd|^
 
    lngLength = LenB(StrConv(strSource, vbFromUnicode))         'ANSI/S-JIS |fffd||3ca||fffd||fffd||fffd||303|T|fffd|C|fffd|Y|fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    If Not CBool(lngLength) Then Exit Function                  '0 |fffd|o|fffd|C|fffd|g|fffd||30f||a347||fffd||590||fffd||fffd||14c82||fffd||fffd||fffd|
    ReDim bytSource(lngLength - 1)                              'ANSI/S-JIS |fffd||3ca||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd||308||fffd||fffd||fffd|m|fffd||fffd|
    bytSource = StrConv(strSource, vbFromUnicode)               'ANSI/S-JIS |fffd||255||3ca||fffd||fffd||fffd| bytSource |fffd||24a|i|fffd|[
    
    strBuffer = String$(lngLength * 3, vbNullChar)              'URL |fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||a39e||fffd|i|fffd|[|fffd|o|fffd|b|fffd|t|fffd|@|fffd||fffd||fffd|m|fffd||fffd|
    strSingleHex = "%00"                                        '16 |fffd|i|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd|i|fffd|[|fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||fffd||fffd|m|fffd||fffd|
    lngWriteCount = 1                                           '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd| 1 |fffd||fffd||fffd||fffd|J|fffd|n
    
    Do                                                          '|fffd||fffd||fffd||fffd||fffd||fffd||30f|I|fffd|[|fffd||702||143||fffd||fffd|[|fffd|v
        bytSingle = bytSource(lngReadCount)                     '|fffd|z|fffd||42a42||fffd| 1 |fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|Q|fffd||182||fffd||fffd||fffd||fffd||846c||fffd||fffd||fffd|H)
        If ((bytSingle >= &H81) And (bytSingle <= &H9F)) Or _
           ((bytSingle >= &HE0) And (bytSingle <= &HEF)) Then   'Shift-JIS 2 |fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd||18a|m|fffd|F|fffd||fffd||fffd||a0bd||fffd||a347|
            Mid(strSingleHex, 2, 2) = Hex$(bytSingle)           '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd| 16 |fffd|i|fffd||fffd||fffd||255||3ca||fffd|(|fffd||fffd||283|o|fffd|C|fffd|g)
            Mid(strBuffer, lngWriteCount, 3) = strSingleHex     'URL |fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            lngReadCount = lngReadCount + 1                     '|fffd||1c2||74d||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
            lngWriteCount = lngWriteCount + 3                   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd| 3 |fffd||fffd||fffd||20b7|
            If lngReadCount = lngLength Then Exit Do            '|fffd||fffd||fffd||fffd||fffd||fffd||30f|I|fffd|[|fffd||252|B|fffd||fffd||fffd||fffd||fffd||a347||fffd|A|fffd||fffd||fffd|[|fffd|v|fffd||14c82||fffd||fffd||fffd|
            bytSingle = bytSource(lngReadCount)                 '|fffd|z|fffd||42a42||fffd| 1 |fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd|
            Mid(strSingleHex, 2, 2) = Hex$(bytSingle)           '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd| 16 |fffd|i|fffd||fffd||fffd||255||3ca||fffd|(|fffd||fffd||fffd||283|o|fffd|C|fffd|g)
            Mid(strBuffer, lngWriteCount, 3) = strSingleHex     'URL |fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            lngReadCount = lngReadCount + 1                     '|fffd||1c2||74d||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
            lngWriteCount = lngWriteCount + 3                   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd| 3 |fffd||fffd||fffd||20b7|
        ElseIf bytSingle = &H20 Then                            '|fffd||fffd||fffd|p|fffd|X|fffd|y|fffd|[|fffd|X|fffd||fffd||fffd||fffd|(" ")|fffd||30f||a347|
            Mid(strBuffer, lngWriteCount, 1) = "+"              '"+" |fffd||fffd||fffd||fffd||fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            lngReadCount = lngReadCount + 1                     '|fffd||1c2||74d||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
            lngWriteCount = lngWriteCount + 1                   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd| 1 |fffd||fffd||fffd||20b7|
        ElseIf ((bytSingle >= &H40) And (bytSingle <= &H5A)) Or _
               ((bytSingle >= &H61) And (bytSingle <= &H7A)) Or _
               ((bytSingle >= &H30) And (bytSingle <= &H39)) Or _
               (bytSingle = &H2A) Or _
               (bytSingle = &H2D) Or _
               (bytSingle = &H2E) Or _
               (bytSingle = &H5F) Then                          '|fffd||fffd||fffd||3ca||fffd||fffd||fffd||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd||fffd||fffd||a347|
            Mid(strBuffer, lngWriteCount, 1) = Chr$(bytSingle)  '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||15d8e||fffd||fffd||fffd||256||7c2||fffd||fffd||10f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(^^;
            lngReadCount = lngReadCount + 1                     '|fffd||1c2||74d||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
            lngWriteCount = lngWriteCount + 1                   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd| 1 |fffd||fffd||fffd||20b7|
        Else                                                    '|fffd||fffd||fffd||311||fffd||fffd||315||fffd||fffd||fffd||fffd||30f||a347|
            If bytSingle <= &HF Then                            'Hex$() |fffd||30c||fffd||fffd||282||fffd| 1 |fffd||fffd||fffd||fffd||fffd||242||202||fffd||a347|
                Mid(strSingleHex, 2, 1) = "0"                   '0 |fffd||fffd||64ea||fffd||255|t|fffd||fffd|
                Mid(strSingleHex, 3, 1) = Hex$(bytSingle)       '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd| 16 |fffd|i|fffd||fffd||fffd||255||3ca||fffd|
            Else                                                '0 |fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||fffd|K|fffd|v|fffd||fffd||fffd||202||fffd||fffd||a347|
                Mid(strSingleHex, 2, 2) = Hex$(bytSingle)       '|fffd||fffd||fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd| 16 |fffd|i|fffd||fffd||fffd||255||3ca||fffd|
            End If
            Mid(strBuffer, lngWriteCount, 3) = strSingleHex     'URL |fffd|G|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||a0bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            lngReadCount = lngReadCount + 1                     '|fffd||1c2||74d||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd||fffd|C|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd|g
            lngWriteCount = lngWriteCount + 3                   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|J|fffd|E|fffd||fffd||fffd|^|fffd||fffd| 3 |fffd||fffd||fffd||20b7|
        End If
    Loop Until lngReadCount = lngLength

    Erase bytSource                                             '|fffd|o|fffd|C|fffd|g|fffd|^|fffd|z|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    If lngWriteCount > 1 Then                                   '|fffd|o|fffd|b|fffd|t|fffd|@|fffd||255||fffd||fffd||fffd||fffd||42a8f||fffd||fffd||fffd||fffd||fffd||fffd||702||a0bd||fffd||a347|
        URLencode = Left$(strBuffer, lngWriteCount - 1)         '|fffd|o|fffd|b|fffd|t|fffd|@|fffd||317|]|fffd||fffd||fffd||215||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|A|fffd||7c2||fffd|l|fffd||182||fffd||fffd||fffd|
    End If

End Function
Public Function subncdec(ByVal b As String) As Long
    
    Dim R As Long
    R = Asc(UCase(b))
    If R > 64& Then
        subncdec = R - 55&
    Else
        subncdec = CLng(b)
    End If
    
End Function






Attribute VB_Name = "Module6"
Attribute VB_Name = "Module7"
Attribute VB_Name = "Module8"
Attribute VB_Name = "Module9"
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' \zUA
' 4om8{

INQUEST-PP=macro
